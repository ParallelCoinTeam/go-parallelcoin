;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-09 23:53:50
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: cs_mapAlerts at 0x0 -- 0x1
; data inside code section at 0x1 -- 0x10
0x1:        ec 2c 65 a1 14 00 00 00  89 44 24 1c 31 c0 c7      |.,e......D$.1.. |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x10 -- 0x13
0x10:       44                                 	inc esp
0x11:       24 0c                              	and al, 0xc
; data inside code section at 0x13 -- 0x20
0x13:       70 73 00 00 c7 44 24 08  b6 00 00 00 c7            |ps...D$......   |
; function: ~clone_impl at 0x20 -- 0x21
; data inside code section at 0x21 -- 0x2f
0x21:       24 04 2c 33 00 00 c7 04  24 8a 1f 00 00 e8         |$.,3....$.....  |
; dynamically linked function: __assert_fail at 0x2f -- 0x30
; data inside code section at 0x30 -- 0x40
0x30:       ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0x40 -- 0x41
; data inside code section at 0x41 -- 0x6f
0x41:       ec 2c 65 a1 14 00 00 00  89 44 24 1c 31 c0 c7 44   |.,e......D$.1..D|
0x51:       24 0c b0 77 00 00 c7 44  24 08 b6 00 00 00 c7 44   |$..w...D$......D|
0x61:       24 04 2c 33 00 00 c7 04  24 8a 1f 00 00 e8         |$.,3....$.....  |
; dynamically linked function: __assert_fail at 0x6f -- 0x70
; data inside code section at 0x70 -- 0x80
0x70:       ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0x80 -- 0x8f
0x80:       83 ec 2c                           	sub esp, 0x2c
0x83:       65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x89:       89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8d:       31 c0                              	xor eax, eax
; data inside code section at 0x8f -- 0x9c
0x8f:       c7                                                 |.               |
0x90:       44 24 0c 50 6c 00                                  |D$.Pl.          |   "D$\fPl"
0x96:       00 c7 44 24 08 b6                                  |..D$..          |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEptEv at 0x9c -- 0xae
0x9c:       00 00                              	add byte ptr [eax], al
0x9e:       00 c7                              	add bh, al
0xa0:       44                                 	inc esp
0xa1:       24 04                              	and al, 4
0xa3:       2c 33                              	sub al, 0x33
0xa5:       00 00                              	add byte ptr [eax], al
0xa7:       c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0xae -- 0xaf
0xae:       e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xaf -- 0xb0
; data inside code section at 0xb0 -- 0xc0
0xb0:       ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_> at 0xc0 -- 0xc9
0xc0:       83 ec 2c                           	sub esp, 0x2c
0xc3:       65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
; data inside code section at 0xc9 -- 0xd0
0xc9:       89 44 24 1c 31 c0 c7                               |.D$.1..         |
; function: _ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_state17connection_bodiesEv at 0xd0 -- 0xd7
0xd0:       44                                 	inc esp
0xd1:       24 0c                              	and al, 0xc
0xd3:       70 63                              	jo 0x138 <_ZN11CDataStream5writeEPKci>
0xd5:       00 00                              	add byte ptr [eax], al
; data inside code section at 0xd7 -- 0xef
0xd7:       c7 44 24 08 b6 00 00 00  c7 44 24 04 2c 33 00 00   |.D$......D$.,3..|
0xe7:       c7 04 24 8a 1f 00 00 e8                            |..$.....        |
; dynamically linked function: __assert_fail at 0xef -- 0xf0
; data inside code section at 0xf0 -- 0x100
0xf0:       ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEEclES4_S5_ at 0x100 -- 0x103
0x100:      83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x103 -- 0x104
0x103:      65                                                 |e               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSC_SD_EEEEENS1_5mutexEEEEptEv at 0x104 -- 0x12e
0x104:      a1 14 00 00 00                     	mov eax, dword ptr [0x14]
0x109:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10d:      31 c0                              	xor eax, eax
0x10f:      c7 44 24 0c b0 4d 00 00            	mov dword ptr [esp + 0xc], 0x4db0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>&]"
0x117:      c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x11f:      c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x127:      c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x12e -- 0x12f
0x12e:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x12f -- 0x130
; data inside code section at 0x130 -- 0x138
0x130:      ff ff ff 90 8d b6 00 00                            |........        |
; function: _ZN11CDataStream5writeEPKci at 0x138 -- 0x140
0x138:      00 00                              	add byte ptr [eax], al
0x13a:      8d bf 00 00 00 00                  	lea edi, [edi]
; function: ~CMutexLock at 0x140 -- 0x169
0x140:      53                                 	push ebx
0x141:      83 ec 28                           	sub esp, 0x28
0x144:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x14b:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x14f:      31 d2                              	xor edx, edx
0x151:      80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x155:      75 19                              	jne 0x170
0x157:      8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15b:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x162:      75 52                              	jne 0x1b6
0x164:      83 c4 28                           	add esp, 0x28
0x167:      5b                                 	pop ebx
0x168:      c3                                 	ret 
; data inside code section at 0x169 -- 0x16c
0x169:      8d b4 26                                           |..&             |
; function: ~auto_buffer at 0x16c -- 0x170
0x16c:      00 00                              	add byte ptr [eax], al
0x16e:      00 00                              	add byte ptr [eax], al
; data inside code section at 0x170 -- 0x176
0x170:      8b 18 89 1c 24 e8                                  |....$.          |
; dynamically linked function: pthread_mutex_lock at 0x176 -- 0x177
; data inside code section at 0x177 -- 0x18b
0x177:      ff ff ff 85 c0 75 3d 8b  43 50 83 e8 01 85 c0 89   |.....u=.CP......|
0x187:      43 50 74 25                                        |CPt%            |
; function: function_18b at 0x18b -- 0x18c
; data inside code section at 0x18c -- 0x192
0x18c:      43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x192 -- 0x193
; data inside code section at 0x193 -- 0x19e
0x193:      ff ff ff 85 c0 75 26 89  1c 24 e8                  |.....u&..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x19e -- 0x19f
; data inside code section at 0x19f -- 0x1a0
0x19f:      ff                                                 |.               |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_ at 0x1a0 -- 0x1a1
; function: function_1a1 at 0x1a1 -- 0x1b6
0x1a1:      ff 85 c0 74 b1 e8                  	inc dword ptr [ebp - 0x174e8b40]
0x1a7:      23 37                              	and esi, dword ptr [edi]
0x1a9:      00 00                              	add byte ptr [eax], al
0x1ab:      90                                 	nop 
0x1ac:      8d 74 26 00                        	lea esi, [esi]
0x1b0:      c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x1b4:      eb d5                              	jmp 0x18b <function_18b>
; data inside code section at 0x1b6 -- 0x1b7
0x1b6:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b7 -- 0x1b8
; data inside code section at 0x1b8 -- 0x1d0
0x1b8:      ff ff ff e8 da 36 00 00  e8 3d 37 00 00 90 8d 76   |.....6...=7....v|
0x1c8:      00 8d bc 27 00 00 00 00                            |...'....        |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE at 0x1d0 -- 0x1d2
0x1d0:      56                                 	push esi
0x1d1:      53                                 	push ebx
; data inside code section at 0x1d2 -- 0x1d4
0x1d2:      83 ec                                              |..              |
; function: _ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_ at 0x1d4 -- 0x230
0x1d4:      34 65                              	xor al, 0x65
0x1d6:      8b 1d 14 00 00 00                  	mov ebx, dword ptr [0x14]
0x1dc:      89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x1e0:      31 db                              	xor ebx, ebx
0x1e2:      85 c9                              	test ecx, ecx
0x1e4:      0f 84 10 01 00 00                  	je 0x2fa <function_2fa>
0x1ea:      8b 12                              	mov edx, dword ptr [edx]
0x1ec:      8b 18                              	mov ebx, dword ptr [eax]
0x1ee:      8d 04 49                           	lea eax, [ecx + ecx*2]
0x1f1:      c1 e0 02                           	shl eax, 2
0x1f4:      8d 54 52 fd                        	lea edx, [edx + edx*2 - 3]
0x1f8:      8d 14 93                           	lea edx, [ebx + edx*4]
0x1fb:      89 d3                              	mov ebx, edx
0x1fd:      29 c3                              	sub ebx, eax
0x1ff:      39 da                              	cmp edx, ebx
0x201:      76 65                              	jbe 0x268 <function_268>
0x203:      8b 0a                              	mov ecx, dword ptr [edx]
0x205:      89 c8                              	mov eax, ecx
0x207:      c1 f8 1f                           	sar eax, 0x1f
0x20a:      31 c8                              	xor eax, ecx
0x20c:      83 f8 13                           	cmp eax, 0x13
0x20f:      76 6f                              	jbe 0x280 <function_280>
0x211:      c7 44 24 0c 30 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a30 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x219:      c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x221:      c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x229:      c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0x230 -- 0x231
0x230:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x231 -- 0x232
; data inside code section at 0x232 -- 0x256
0x232:      ff ff ff 8d 76 00 85 c9  79 74 8b 72 04 85 f6 74   |....v...yt.r...t|
0x242:      1b 8d 46 04 89 54 24 1c  89 04 24 e8 8e 47 00 00   |..F..T$...$..G..|
0x252:      89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZdlPv at 0x256 -- 0x257
; data inside code section at 0x257 -- 0x259
0x257:      ff ff                                              |..              |
; function: function_259 at 0x259 -- 0x266
0x259:      ff 8b 54 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbac]
0x25f:      ea 0c 39 d3 72 9e 8d               	ljmp 0x8d9e:0x72d3390c <function_72d3390c>
; data inside code section at 0x266 -- 0x268
0x266:      76 00                                              |v.              |
; function: function_268 at 0x268 -- 0x27f
0x268:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x26c:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x273:      0f 85 a5 00 00 00                  	jne 0x31e <function_31e>
0x279:      83 c4 34                           	add esp, 0x34
0x27c:      5b                                 	pop ebx
0x27d:      5e                                 	pop esi
0x27e:      c3                                 	ret 
; data inside code section at 0x27f -- 0x280
0x27f:      90                                                 |.               |
; function: function_280 at 0x280 -- 0x287
0x280:      ff 24 85 50 4b 00 00               	jmp dword ptr [eax*4 + 0x4b50]
; data inside code section at 0x287 -- 0x288
0x287:      90                                                 |.               |
; function: function_288 at 0x288 -- 0x2ec
0x288:      e8 f3 fd ff ff                     	call 0x80 <visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>>
0x28d:      8d 76 00                           	lea esi, [esi]
0x290:      85 c9                              	test ecx, ecx
0x292:      78 34                              	js 0x2c8 <function_288+0x40>
0x294:      8b 42 04                           	mov eax, dword ptr [edx + 4]
0x297:      85 c0                              	test eax, eax
0x299:      74 c3                              	je 0x25e
0x29b:      8b 08                              	mov ecx, dword ptr [eax]
0x29d:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2a1:      89 04 24                           	mov dword ptr [esp], eax
0x2a4:      ff 51 04                           	call dword ptr [ecx + 4]
0x2a7:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2ab:      eb b1                              	jmp 0x25e
; data inside code section at 0x2ad -- 0x2b0
0x2ad:      8d 76 00                                           |.v.             |
0x2b0:      8d 42 08                           	lea eax, [edx + 8]
0x2b3:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2b7:      89 04 24                           	mov dword ptr [esp], eax
0x2ba:      e8 21 47 00 00                     	call 0x49e0 <_ZN5boost6detail12shared_countD1Ev>
0x2bf:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2c3:      eb 99                              	jmp 0x25e
; data inside code section at 0x2c5 -- 0x2c8
0x2c5:      8d 76 00                                           |.v.             |
0x2c8:      8b 72 04                           	mov esi, dword ptr [edx + 4]
0x2cb:      85 f6                              	test esi, esi
0x2cd:      74 8f                              	je 0x25e
0x2cf:      8b 06                              	mov eax, dword ptr [esi]
0x2d1:      85 c0                              	test eax, eax
0x2d3:      74 10                              	je 0x2e5 <function_288+0x5d>
0x2d5:      8b 08                              	mov ecx, dword ptr [eax]
0x2d7:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2db:      89 04 24                           	mov dword ptr [esp], eax
0x2de:      ff 51 04                           	call dword ptr [ecx + 4]
0x2e1:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2e5:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2e9:      89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2ec -- 0x2ed
0x2ec:      e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2ed -- 0x2ee
; data inside code section at 0x2ee -- 0x2f1
0x2ee:      ff ff ff                                           |...             |
; function: function_2f1 at 0x2f1 -- 0x2fa
0x2f1:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2f5:      e9 64 ff ff ff                     	jmp 0x25e
; function: function_2fa at 0x2fa -- 0x319
0x2fa:      c7 44 24 0c f0 6d 00 00            	mov dword ptr [esp + 0xc], 0x6df0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0x302:      c7 44 24 08 fe 00 00 00            	mov dword ptr [esp + 8], 0xfe
0x30a:      c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x312:      c7 04 24 f5 1f 00 00               	mov dword ptr [esp], 0x1ff5 ; "n > 0"
; data inside code section at 0x319 -- 0x31a
0x319:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x31a -- 0x31b
; data inside code section at 0x31b -- 0x31e
0x31b:      ff ff ff                                           |...             |
; function: function_31e at 0x31e -- 0x31f
; dynamically linked function: __stack_chk_fail at 0x31f -- 0x320
; data inside code section at 0x320 -- 0x330
0x320:      ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK14CUnsignedAlert8ToStringEv at 0x330 -- 0x359
0x330:      55                                 	push ebp
0x331:      57                                 	push edi
0x332:      56                                 	push esi
0x333:      53                                 	push ebx
0x334:      81 ec 8c 00 00 00                  	sub esp, 0x8c
0x33a:      8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0x341:      8d 74 24 68                        	lea esi, [esp + 0x68]
0x345:      8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x34c:      65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x353:      89 4c 24 7c                        	mov dword ptr [esp + 0x7c], ecx
0x357:      31 c9                              	xor ecx, ecx
; data inside code section at 0x359 -- 0x35d
0x359:      c7 44 24 64                                        |.D$d            |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x35d -- 0x392
; data inside code section at 0x392 -- 0x393
0x392:      e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x393 -- 0x394
; data inside code section at 0x394 -- 0x3a6
0x394:      ff ff ff 83 ec 04 8d 44  24 64 89 74 24 04 89 04   |.......D$d.t$...|
0x3a4:      24 e8                                              |$.              |
; dynamically linked function: _ZNSs6appendERKSs at 0x3a6 -- 0x3a7
; data inside code section at 0x3a7 -- 0x3ae
0x3a7:      ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x3ae -- 0x3af
; data inside code section at 0x3af -- 0x3b6
0x3af:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x3b6 -- 0x3b7
; data inside code section at 0x3b7 -- 0x3bd
0x3b7:      ff ff ff 39 c7 89                                  |...9..          |
; function: function_3bd at 0x3bd -- 0x3be
0x3bd:      c3                                 	ret 
; data inside code section at 0x3be -- 0x3c0
0x3be:      75 b8                                              |u.              |
; function: function_3c0 at 0x3c0 -- 0x3c8
0x3c0:      8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x3c4:      8d 6c 24 70                        	lea ebp, [esp + 0x70]
; data inside code section at 0x3c8 -- 0x3cc
0x3c8:      c7 44 24 6c                                        |.D$l            |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3cc -- 0x403
; data inside code section at 0x403 -- 0x407
0x403:      c7 44 24 74                                        |.D$t            |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x407 -- 0x418
; data inside code section at 0x418 -- 0x419
0x418:      e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x419 -- 0x41a
; data inside code section at 0x41a -- 0x43d
0x41a:      ff ff ff c7 44 24 08 01  00 00 00 c7 44 24 04 0a   |....D$......D$..|
0x42a:      20 00 00 89 1c 24 e8 fc  ff ff ff 89 6c 24 04 89   | ....$......l$..|
0x43a:      1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSs6appendERKSs at 0x43d -- 0x43e
; data inside code section at 0x43e -- 0x449
0x43e:      ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSsC1ERKSs at 0x449 -- 0x44a
; data inside code section at 0x44a -- 0x461
0x44a:      ff ff ff c7 44 24 08 02  00 00 00 c7 44 24 04 0c   |....D$......D$..|
0x45a:      20 00 00 89 34 24 e8                               | ...4$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x461 -- 0x462
; data inside code section at 0x462 -- 0x479
0x462:      ff ff ff 8d 54 24 6c 89  74 24 04 89 14 24 e8 fc   |....T$l.t$...$..|
0x472:      ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x479 -- 0x47a
; data inside code section at 0x47a -- 0x481
0x47a:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x481 -- 0x482
; data inside code section at 0x482 -- 0x489
0x482:      ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x489 -- 0x48a
; data inside code section at 0x48a -- 0x491
0x48a:      ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x491 -- 0x492
; data inside code section at 0x492 -- 0x4a5
0x492:      ff ff ff 39 44 24 54 89  c7 0f 85 4f ff ff ff 8b   |...9D$T....O....|
0x4a2:      44 24 6c                                           |D$l             |
; function: function_4a5 at 0x4a5 -- 0x51f
0x4a5:      8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x4a9:      8b 51 5c                           	mov edx, dword ptr [ecx + 0x5c]
0x4ac:      89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x4b0:      8b 51 58                           	mov edx, dword ptr [ecx + 0x58]
0x4b3:      89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x4b7:      8b 51 54                           	mov edx, dword ptr [ecx + 0x54]
0x4ba:      89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x4be:      89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x4c2:      8b 41 38                           	mov eax, dword ptr [ecx + 0x38]
0x4c5:      89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x4c9:      8b 41 34                           	mov eax, dword ptr [ecx + 0x34]
0x4cc:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4d0:      8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x4d4:      89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x4d8:      8b 41 18                           	mov eax, dword ptr [ecx + 0x18]
0x4db:      89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x4df:      8b 41 14                           	mov eax, dword ptr [ecx + 0x14]
0x4e2:      89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x4e6:      8b 41 0c                           	mov eax, dword ptr [ecx + 0xc]
0x4e9:      8b 51 10                           	mov edx, dword ptr [ecx + 0x10]
0x4ec:      89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x4f0:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x4f4:      8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x4f7:      8b 51 08                           	mov edx, dword ptr [ecx + 8]
0x4fa:      89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x4fe:      89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x502:      8b 01                              	mov eax, dword ptr [ecx]
0x504:      c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x50c:      c7 44 24 04 7c 34 00 00            	mov dword ptr [esp + 4], 0x347c ; "CAlert(\n    nVersion     = %d\n    nRelayUntil  = %lld\n    nExpiration  = %lld\n    nID          = %d\n    nCancel      = %d\n    setCancel    = %s\n    nMinVer      = %d\n    nMaxVer      = %d\n    setSubVer    = %s\n    nPriority    = %d\n    strComment   = \"%s\"\n    strStatusBar = \"%s\"\n)\n"
0x514:      89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x518:      8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x51c:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x51f -- 0x520
0x51f:      e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x520 -- 0x521
; data inside code section at 0x521 -- 0x52f
0x521:      ff ff ff 83 ec 04 8d 54  24 6c 89 14 24 e8         |.......T$l..$.  |
; dynamically linked function: _ZNSsD1Ev at 0x52f -- 0x530
; data inside code section at 0x530 -- 0x53b
0x530:      ff ff ff 8d 4c 24 64 89  0c 24 e8                  |....L$d..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x53b -- 0x53c
; data inside code section at 0x53c -- 0x53e
0x53c:      ff ff                                              |..              |
; function: function_53e at 0x53e -- 0x55d
0x53e:      ff 8b 44 24 5c 8b                  	dec dword ptr [ebx - 0x74a3dbbc]
0x544:      54                                 	push esp
0x545:      24 7c                              	and al, 0x7c
0x547:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x54e:      75 79                              	jne 0x5c9 <function_5c9>
0x550:      81 c4 8c 00 00 00                  	add esp, 0x8c
0x556:      5b                                 	pop ebx
0x557:      5e                                 	pop esi
0x558:      5f                                 	pop edi
0x559:      5d                                 	pop ebp
0x55a:      c2 04 00                           	ret 4
; function: function_55d at 0x55d -- 0x55e
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x55e -- 0x567
; data inside code section at 0x567 -- 0x568
0x567:      89                                                 |.               |
; function: function_568 at 0x568 -- 0x569
0x568:      c3                                 	ret 
; data inside code section at 0x569 -- 0x56d
0x569:      89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x56d -- 0x56e
; data inside code section at 0x56e -- 0x571
0x56e:      ff ff ff                                           |...             |
; function: function_571 at 0x571 -- 0x572
; data inside code section at 0x572 -- 0x579
0x572:      44 24 64 89 04 24 e8                               |D$d..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x579 -- 0x57a
; data inside code section at 0x57a -- 0x581
0x57a:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x581 -- 0x582
; data inside code section at 0x582 -- 0x586
0x582:      ff ff ff 89                                        |....            |
; function: function_586 at 0x586 -- 0x587
0x586:      c3                                 	ret 
; function: function_587 at 0x587 -- 0x588
; data inside code section at 0x588 -- 0x58f
0x588:      4c 24 6c 89 0c 24 e8                               |L$l..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x58f -- 0x590
; data inside code section at 0x590 -- 0x593
0x590:      ff ff ff                                           |...             |
; function: function_593 at 0x593 -- 0x595
0x593:      eb dc                              	jmp 0x571 <function_571>
; data inside code section at 0x595 -- 0x59d
0x595:      89 c6 89 1c 24 89 f3 e8                            |....$...        |
; dynamically linked function: _ZNSsD1Ev at 0x59d -- 0x59e
; data inside code section at 0x59e -- 0x5a1
0x59e:      ff ff ff                                           |...             |
; function: function_5a1 at 0x5a1 -- 0x5a2
; data inside code section at 0x5a2 -- 0x5a5
0x5a2:      2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x5a5 -- 0x5a6
; data inside code section at 0x5a6 -- 0x5a9
0x5a6:      ff ff ff                                           |...             |
; function: function_5a9 at 0x5a9 -- 0x5ab
0x5a9:      eb dc                              	jmp 0x587 <function_587>
; data inside code section at 0x5ab -- 0x5ad
0x5ab:      89 c6                                              |..              |
; function: function_5ad at 0x5ad -- 0x5ae
; data inside code section at 0x5ae -- 0x5b3
0x5ae:      1c 24 89 f3 e8                                     |.$...           |
; dynamically linked function: _ZNSsD1Ev at 0x5b3 -- 0x5b4
; data inside code section at 0x5b4 -- 0x5b7
0x5b4:      ff ff ff                                           |...             |
; function: function_5b7 at 0x5b7 -- 0x5b9
0x5b7:      eb e8                              	jmp 0x5a1 <function_5a1>
; function: function_5b9 at 0x5b9 -- 0x5ba
; data inside code section at 0x5ba -- 0x5c1
0x5ba:      c7 89 34 24 89 fe e8                               |..4$...         |
; dynamically linked function: _ZNSsD1Ev at 0x5c1 -- 0x5c2
; data inside code section at 0x5c2 -- 0x5c5
0x5c2:      ff ff ff                                           |...             |
; function: function_5c5 at 0x5c5 -- 0x5c7
0x5c5:      eb e6                              	jmp 0x5ad <function_5ad>
; function: function_5c7 at 0x5c7 -- 0x5c9
0x5c7:      eb f0                              	jmp 0x5b9 <function_5b9>
; function: function_5c9 at 0x5c9 -- 0x5d0
0x5c9:      8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x5d0 -- 0x5d1
0x5d0:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5d1 -- 0x5d2
; data inside code section at 0x5d2 -- 0x5d5
0x5d2:      ff ff ff                                           |...             |
; function: function_5d5 at 0x5d5 -- 0x5d9
0x5d5:      89 c3                              	mov ebx, eax
0x5d7:      eb 98                              	jmp 0x571 <function_571>
; data inside code section at 0x5d9 -- 0x5e0
0x5d9:      90 8d b6 00 00 00 00                               |.......         |
; function: _ZNK14CUnsignedAlert5printEv at 0x5e0 -- 0x616
0x5e0:      53                                 	push ebx
0x5e1:      83 ec 38                           	sub esp, 0x38
0x5e4:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5ea:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x5ee:      31 c0                              	xor eax, eax
0x5f0:      8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x5f4:      8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x5f8:      89 1c 24                           	mov dword ptr [esp], ebx
0x5fb:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5ff:      e8 2c fd ff ff                     	call 0x330 <_ZNK14CUnsignedAlert8ToStringEv>
0x604:      83 ec 04                           	sub esp, 4
0x607:      8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x60b:      c7 04 24 0f 20 00 00               	mov dword ptr [esp], 0x200f ; "%s"
0x612:      89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x616 -- 0x617
0x616:      e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x617 -- 0x618
; data inside code section at 0x618 -- 0x61f
0x618:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x61f -- 0x620
; data inside code section at 0x620 -- 0x622
0x620:      ff ff                                              |..              |
; function: function_622 at 0x622 -- 0x635
0x622:      ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x628:      33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x62e:      75 05                              	jne 0x635 <function_622+0x12>
0x630:      83 c4 38                           	add esp, 0x38
0x633:      5b                                 	pop ebx
0x634:      c3                                 	ret 
; data inside code section at 0x635 -- 0x636
0x635:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x636 -- 0x637
; data inside code section at 0x637 -- 0x642
0x637:      ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0x642 -- 0x643
; data inside code section at 0x643 -- 0x64e
0x643:      ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x64e -- 0x64f
; data inside code section at 0x64f -- 0x660
0x64f:      ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x65f:      00                                                 |.               |
; function: _ZNK6CAlert6IsNullEv at 0x660 -- 0x68e
0x660:      83 ec 1c                           	sub esp, 0x1c
0x663:      8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x667:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x66e:      89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x672:      31 d2                              	xor edx, edx
0x674:      8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x677:      0b 50 10                           	or edx, dword ptr [eax + 0x10]
0x67a:      0f 94 c0                           	sete al
0x67d:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x681:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x688:      75 04                              	jne 0x68e <_ZNK6CAlert6IsNullEv+0x2d>
0x68a:      83 c4 1c                           	add esp, 0x1c
0x68d:      c3                                 	ret 
; data inside code section at 0x68e -- 0x68f
0x68e:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x68f -- 0x690
; data inside code section at 0x690 -- 0x6a0
0x690:      ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK6CAlert7GetHashEv at 0x6a0 -- 0x71d
0x6a0:      56                                 	push esi
0x6a1:      53                                 	push ebx
0x6a2:      83 ec 44                           	sub esp, 0x44
0x6a5:      8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x6a9:      8d 74 24 1c                        	lea esi, [esp + 0x1c]
0x6ad:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x6b4:      89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x6b8:      31 d2                              	xor edx, edx
0x6ba:      8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x6be:      c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x6c6:      c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x6ce:      8b 50 68                           	mov edx, dword ptr [eax + 0x68]
0x6d1:      8b 40 64                           	mov eax, dword ptr [eax + 0x64]
0x6d4:      c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x6dc:      c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x6e4:      89 d1                              	mov ecx, edx
0x6e6:      29 c1                              	sub ecx, eax
0x6e8:      39 c2                              	cmp edx, eax
0x6ea:      ba 2c 47 01 00                     	mov edx, 0x1472c
0x6ef:      0f 44 c2                           	cmove eax, edx
0x6f2:      89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x6f6:      c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x6fe:      c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x706:      c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x70e:      c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x716:      89 74 24 08                        	mov dword ptr [esp + 8], esi
0x71a:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x71d -- 0x71e
0x71d:      e8                                                 |.               |
; dynamically linked function: SHA256 at 0x71e -- 0x71f
; data inside code section at 0x71f -- 0x721
0x71f:      ff ff                                              |..              |
; function: function_721 at 0x721 -- 0x784
0x721:      ff c7                              	inc edi
0x723:      03 00                              	add eax, dword ptr [eax]
0x725:      00 00                              	add byte ptr [eax], al
0x727:      00 c7                              	add bh, al
0x729:      43                                 	inc ebx
0x72a:      04 00                              	add al, 0
0x72c:      00 00                              	add byte ptr [eax], al
0x72e:      00 c7                              	add bh, al
0x730:      43                                 	inc ebx
0x731:      08 00                              	or byte ptr [eax], al
0x733:      00 00                              	add byte ptr [eax], al
0x735:      00 c7                              	add bh, al
0x737:      43                                 	inc ebx
0x738:      0c 00                              	or al, 0
0x73a:      00 00                              	add byte ptr [eax], al
0x73c:      00 c7                              	add bh, al
0x73e:      43                                 	inc ebx
0x73f:      10 00                              	adc byte ptr [eax], al
0x741:      00 00                              	add byte ptr [eax], al
0x743:      00 c7                              	add bh, al
0x745:      43                                 	inc ebx
0x746:      14 00                              	adc al, 0
0x748:      00 00                              	add byte ptr [eax], al
0x74a:      00 c7                              	add bh, al
0x74c:      43                                 	inc ebx
0x74d:      18 00                              	sbb byte ptr [eax], al
0x74f:      00 00                              	add byte ptr [eax], al
0x751:      00 c7                              	add bh, al
0x753:      43                                 	inc ebx
0x754:      1c 00                              	sbb al, 0
0x756:      00 00                              	add byte ptr [eax], al
0x758:      00 89 5c 24 08 c7                  	add byte ptr [ecx - 0x38f7dba4], cl
0x75e:      44                                 	inc esp
0x75f:      24 04                              	and al, 4
0x761:      20 00                              	and byte ptr [eax], al
0x763:      00 00                              	add byte ptr [eax], al
0x765:      89 34 24                           	mov dword ptr [esp], esi
0x768:      e8 fc ff ff ff                     	call 0x769
0x76d:      89 d8                              	mov eax, ebx
0x76f:      8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x773:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x77a:      75 08                              	jne 0x784 <function_721+0x60>
0x77c:      83 c4 44                           	add esp, 0x44
0x77f:      5b                                 	pop ebx
0x780:      5e                                 	pop esi
0x781:      c2 04 00                           	ret 4
; data inside code section at 0x784 -- 0x785
0x784:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x785 -- 0x786
; data inside code section at 0x786 -- 0x790
0x786:      ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: _ZNK6CAlert10IsInEffectEv at 0x790 -- 0x7a4
0x790:      53                                 	push ebx
0x791:      83 ec 18                           	sub esp, 0x18
0x794:      8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x798:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x79e:      89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x7a2:      31 c0                              	xor eax, eax
; data inside code section at 0x7a4 -- 0x7a5
0x7a4:      e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0x7a5 -- 0x7a6
; data inside code section at 0x7a6 -- 0x7a9
0x7a6:      ff ff ff                                           |...             |
; function: function_7a9 at 0x7a9 -- 0x7d9
0x7a9:      3b 53 10                           	cmp edx, dword ptr [ebx + 0x10]
0x7ac:      89 c1                              	mov ecx, eax
0x7ae:      b8 01 00 00 00                     	mov eax, 1
0x7b3:      7c 04                              	jl 0x7b9 <function_7a9+0x10>
0x7b5:      7e 19                              	jle 0x7d0 <function_7a9+0x27>
0x7b7:      31 c0                              	xor eax, eax
0x7b9:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x7bd:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x7c4:      75 13                              	jne 0x7d9 <function_7a9+0x2e>
0x7c6:      83 c4 18                           	add esp, 0x18
0x7c9:      5b                                 	pop ebx
0x7ca:      c3                                 	ret 
; data inside code section at 0x7cb -- 0x7d0
0x7cb:      90 8d 74 26 00                                     |..t&.           |
0x7d0:      3b 4b 0c                           	cmp ecx, dword ptr [ebx + 0xc]
0x7d3:      72 e4                              	jb 0x7b9 <function_7a9+0x10>
0x7d5:      31 c0                              	xor eax, eax
0x7d7:      eb e0                              	jmp 0x7b9 <function_7a9+0x10>
; data inside code section at 0x7d9 -- 0x7da
0x7d9:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7da -- 0x7db
; data inside code section at 0x7db -- 0x7dd
0x7db:      ff ff                                              |..              |
; function: function_7dd at 0x7dd -- 0x7e0
0x7dd:      ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZNK6CAlert7CancelsERKS_ at 0x7e0 -- 0x872
0x7e0:      83 ec 2c                           	sub esp, 0x2c
0x7e3:      89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x7e7:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x7eb:      89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x7ef:      8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x7f3:      89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x7f7:      31 ff                              	xor edi, edi
0x7f9:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7ff:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x803:      31 c0                              	xor eax, eax
0x805:      89 1c 24                           	mov dword ptr [esp], ebx
0x808:      e8 83 ff ff ff                     	call 0x790 <_ZNK6CAlert10IsInEffectEv>
0x80d:      84 c0                              	test al, al
0x80f:      74 42                              	je 0x853 <_ZNK6CAlert7CancelsERKS_+0x73>
0x811:      8b 4e 14                           	mov ecx, dword ptr [esi + 0x14]
0x814:      bf 01 00 00 00                     	mov edi, 1
0x819:      3b 4b 18                           	cmp ecx, dword ptr [ebx + 0x18]
0x81c:      7e 35                              	jle 0x853 <_ZNK6CAlert7CancelsERKS_+0x73>
0x81e:      8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x821:      31 ff                              	xor edi, edi
0x823:      8d 73 20                           	lea esi, [ebx + 0x20]
0x826:      85 d2                              	test edx, edx
0x828:      74 29                              	je 0x853 <_ZNK6CAlert7CancelsERKS_+0x73>
0x82a:      89 f0                              	mov eax, esi
0x82c:      eb 0b                              	jmp 0x839 <_ZNK6CAlert7CancelsERKS_+0x59>
; data inside code section at 0x82e -- 0x830
0x82e:      66 90                                              |f.              |
0x830:      89 d0                              	mov eax, edx
0x832:      8b 52 08                           	mov edx, dword ptr [edx + 8]
0x835:      85 d2                              	test edx, edx
0x837:      74 0c                              	je 0x845 <_ZNK6CAlert7CancelsERKS_+0x65>
0x839:      3b 4a 10                           	cmp ecx, dword ptr [edx + 0x10]
0x83c:      7e f2                              	jle 0x830 <_ZNK6CAlert7CancelsERKS_+0x50>
0x83e:      8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x841:      85 d2                              	test edx, edx
0x843:      75 f4                              	jne 0x839 <_ZNK6CAlert7CancelsERKS_+0x59>
0x845:      31 ff                              	xor edi, edi
0x847:      39 f0                              	cmp eax, esi
0x849:      74 08                              	je 0x853 <_ZNK6CAlert7CancelsERKS_+0x73>
0x84b:      3b 48 10                           	cmp ecx, dword ptr [eax + 0x10]
0x84e:      0f 9d c2                           	setge dl
0x851:      89 d7                              	mov edi, edx
0x853:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x857:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x85e:      89 f8                              	mov eax, edi
0x860:      75 10                              	jne 0x872 <_ZNK6CAlert7CancelsERKS_+0x91>
0x862:      8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x866:      8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x86a:      8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x86e:      83 c4 2c                           	add esp, 0x2c
0x871:      c3                                 	ret 
; data inside code section at 0x872 -- 0x873
0x872:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x873 -- 0x874
; data inside code section at 0x874 -- 0x880
0x874:      ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: _ZNK6CAlert9AppliesToEiSs at 0x880 -- 0x93d
0x880:      83 ec 4c                           	sub esp, 0x4c
0x883:      89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x887:      8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x88b:      89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x88f:      8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x893:      89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x897:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x89b:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8a1:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x8a5:      31 c0                              	xor eax, eax
0x8a7:      89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x8ab:      89 1c 24                           	mov dword ptr [esp], ebx
0x8ae:      e8 dd fe ff ff                     	call 0x790 <_ZNK6CAlert10IsInEffectEv>
0x8b3:      31 d2                              	xor edx, edx
0x8b5:      84 c0                              	test al, al
0x8b7:      74 05                              	je 0x8be <_ZNK6CAlert9AppliesToEiSs+0x3e>
0x8b9:      39 7b 34                           	cmp dword ptr [ebx + 0x34], edi
0x8bc:      7e 2a                              	jle 0x8e8 <_ZNK6CAlert9AppliesToEiSs+0x68>
0x8be:      89 d0                              	mov eax, edx
0x8c0:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x8c4:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8cb:      0f 85 bf 00 00 00                  	jne 0x990 <function_990>
0x8d1:      8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x8d5:      8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x8d9:      8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x8dd:      8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x8e1:      83 c4 4c                           	add esp, 0x4c
0x8e4:      c3                                 	ret 
; data inside code section at 0x8e5 -- 0x8e8
0x8e5:      8d 76 00                                           |.v.             |
0x8e8:      3b 7b 38                           	cmp edi, dword ptr [ebx + 0x38]
0x8eb:      7f d1                              	jg 0x8be <_ZNK6CAlert9AppliesToEiSs+0x3e>
0x8ed:      8b 7b 50                           	mov edi, dword ptr [ebx + 0x50]
0x8f0:      ba 01 00 00 00                     	mov edx, 1
0x8f5:      85 ff                              	test edi, edi
0x8f7:      74 c5                              	je 0x8be <_ZNK6CAlert9AppliesToEiSs+0x3e>
0x8f9:      8d 53 40                           	lea edx, [ebx + 0x40]
0x8fc:      8b 5b 44                           	mov ebx, dword ptr [ebx + 0x44]
0x8ff:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x903:      31 d2                              	xor edx, edx
0x905:      85 db                              	test ebx, ebx
0x907:      74 b5                              	je 0x8be <_ZNK6CAlert9AppliesToEiSs+0x3e>
0x909:      8b 2e                              	mov ebp, dword ptr [esi]
0x90b:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x90f:      8b 7d f4                           	mov edi, dword ptr [ebp - 0xc]
0x912:      89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x916:      eb 0b                              	jmp 0x923 <_ZNK6CAlert9AppliesToEiSs+0xa3>
0x918:      89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x91c:      8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x91f:      85 db                              	test ebx, ebx
0x921:      74 2d                              	je 0x950 <function_950>
0x923:      8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x926:      8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x929:      89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x92d:      89 04 24                           	mov dword ptr [esp], eax
0x930:      39 f7                              	cmp edi, esi
0x932:      89 f2                              	mov edx, esi
0x934:      0f 46 d7                           	cmovbe edx, edi
0x937:      29 fe                              	sub esi, edi
0x939:      89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x93d -- 0x93e
0x93d:      e8                                                 |.               |
; dynamically linked function: memcmp at 0x93e -- 0x93f
; data inside code section at 0x93f -- 0x941
0x93f:      ff ff                                              |..              |
; function: function_941 at 0x941 -- 0x950
0x941:      ff 85 c0 0f 44 c6                  	inc dword ptr [ebp - 0x39bbf040]
0x947:      85 c0                              	test eax, eax
0x949:      79 cd                              	jns 0x918
0x94b:      8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x94e:      eb cf                              	jmp 0x91f
; function: function_950 at 0x950 -- 0x97a
0x950:      8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x954:      31 d2                              	xor edx, edx
0x956:      39 44 24 1c                        	cmp dword ptr [esp + 0x1c], eax
0x95a:      0f 84 5e ff ff ff                  	je 0x8be
0x960:      8b 40 10                           	mov eax, dword ptr [eax + 0x10]
0x963:      8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0x966:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0x96a:      89 2c 24                           	mov dword ptr [esp], ebp
0x96d:      39 df                              	cmp edi, ebx
0x96f:      89 da                              	mov edx, ebx
0x971:      0f 46 d7                           	cmovbe edx, edi
0x974:      29 df                              	sub edi, ebx
0x976:      89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x97a -- 0x97b
0x97a:      e8                                                 |.               |
; dynamically linked function: memcmp at 0x97b -- 0x97c
; data inside code section at 0x97c -- 0x97e
0x97c:      ff ff                                              |..              |
; function: function_97e at 0x97e -- 0x990
0x97e:      ff 85 c0 89 c2 0f                  	inc dword ptr [ebp + 0xfc289c0]
0x984:      44                                 	inc esp
0x985:      d7                                 	xlatb 
0x986:      f7 d2                              	not edx
0x988:      c1 ea 1f                           	shr edx, 0x1f
0x98b:      e9 2e ff ff ff                     	jmp 0x8be
; function: function_990 at 0x990 -- 0x9a0
0x990:      e8 fc ff ff ff                     	call 0x991
0x995:      90                                 	nop 
0x996:      8d 76 00                           	lea esi, [esi]
0x999:      8d bc 27 00 00 00 00               	lea edi, [edi]
; function: _ZNK6CAlert11AppliesToMeEv at 0x9a0 -- 0x9e2
0x9a0:      57                                 	push edi
0x9a1:      56                                 	push esi
0x9a2:      53                                 	push ebx
0x9a3:      83 ec 30                           	sub esp, 0x30
0x9a6:      8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x9aa:      8b 7c 24 40                        	mov edi, dword ptr [esp + 0x40]
0x9ae:      8d 74 24 1c                        	lea esi, [esp + 0x1c]
0x9b2:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9b8:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x9bc:      31 c0                              	xor eax, eax
0x9be:      c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x9c6:      c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x9ce:      c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x9d6:      89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x9da:      c7 44 24 08 60 90 0f 00            	mov dword ptr [esp + 8], 0xf9060
; data inside code section at 0x9e2 -- 0x9e6
0x9e2:      c7 44 24 04                                        |.D$.            |
; dynamically linked function: CLIENT_NAME at 0x9e6 -- 0x9ed
; data inside code section at 0x9ed -- 0x9ee
0x9ed:      e8                                                 |.               |
; dynamically linked function: _Z16FormatSubVersionRKSsiRKSt6vectorISsSaISsEE at 0x9ee -- 0x9ef
; data inside code section at 0x9ef -- 0xa0f
0x9ef:      ff ff ff 83 ec 04 89 5c  24 08 c7 44 24 04 80 38   |.......\$..D$..8|
0x9ff:      01 00 89 3c 24 e8 77 fe  ff ff 89 1c 24 89 c7 e8   |...<$.w.....$...|
; dynamically linked function: _ZNSsD1Ev at 0xa0f -- 0xa10
; data inside code section at 0xa10 -- 0xa22
0xa10:      ff ff ff 8b 74 24 20 8b  5c 24 1c 39 de 74 14 90   |....t$ .\$.9.t..|
0xa20:      89 1c                                              |..              |
; function: function_a22 at 0xa22 -- 0xa25
0xa22:      24 83                              	and al, 0x83
0xa24:      c3                                 	ret 
; data inside code section at 0xa25 -- 0xa27
0xa25:      04 e8                                              |..              |
; dynamically linked function: _ZNSsD1Ev at 0xa27 -- 0xa28
; data inside code section at 0xa28 -- 0xa3b
0xa28:      ff ff ff 39 de 75 f1 8b  5c 24 1c 85 db 74 08 89   |...9.u..\$...t..|
0xa38:      1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xa3b -- 0xa3c
; data inside code section at 0xa3c -- 0xa3e
0xa3c:      ff ff                                              |..              |
; function: function_a3e at 0xa3e -- 0xa55
0xa3e:      ff 8b 54 24 2c 65                  	dec dword ptr [ebx + 0x652c2454]
0xa44:      33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xa4a:      89 f8                              	mov eax, edi
0xa4c:      75 07                              	jne 0xa55 <function_a3e+0x16>
0xa4e:      83 c4 30                           	add esp, 0x30
0xa51:      5b                                 	pop ebx
0xa52:      5e                                 	pop esi
0xa53:      5f                                 	pop edi
0xa54:      c3                                 	ret 
; data inside code section at 0xa55 -- 0xa56
0xa55:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa56 -- 0xa57
; data inside code section at 0xa57 -- 0xa62
0xa57:      ff ff ff 89 c7 89 1c 24  89 fb e8                  |.......$...     |
; dynamically linked function: _ZNSsD1Ev at 0xa62 -- 0xa63
; data inside code section at 0xa63 -- 0xa66
0xa63:      ff ff ff                                           |...             |
; function: function_a66 at 0xa66 -- 0xa67
; data inside code section at 0xa67 -- 0xa72
0xa67:      34 24 e8 12 94 00 00 89  1c 24 e8                  |4$.......$.     |
; dynamically linked function: _Unwind_Resume at 0xa72 -- 0xa73
; data inside code section at 0xa73 -- 0xa76
0xa73:      ff ff ff                                           |...             |
; function: function_a76 at 0xa76 -- 0xa7a
0xa76:      89 c3                              	mov ebx, eax
0xa78:      eb ec                              	jmp 0xa66 <function_a66>
; data inside code section at 0xa7a -- 0xa80
0xa7a:      8d b6 00 00 00 00                                  |......          |
; function: _ZN14CUnsignedAlert7SetNullEv at 0xa80 -- 0xb4b
0xa80:      53                                 	push ebx
0xa81:      83 ec 28                           	sub esp, 0x28
0xa84:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa88:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa8e:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa92:      31 c0                              	xor eax, eax
0xa94:      8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0xa97:      c7 03 01 00 00 00                  	mov dword ptr [ebx], 1
0xa9d:      c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0xaa4:      c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0xaab:      c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0xab2:      c7 43 10 00 00 00 00               	mov dword ptr [ebx + 0x10], 0
0xab9:      c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0xac0:      c7 43 18 00 00 00 00               	mov dword ptr [ebx + 0x18], 0
0xac7:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0xacb:      8d 43 1c                           	lea eax, [ebx + 0x1c]
0xace:      89 04 24                           	mov dword ptr [esp], eax
0xad1:      e8 da 96 00 00                     	call 0xa1b0 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE>
0xad6:      8d 43 20                           	lea eax, [ebx + 0x20]
0xad9:      89 43 28                           	mov dword ptr [ebx + 0x28], eax
0xadc:      89 43 2c                           	mov dword ptr [ebx + 0x2c], eax
0xadf:      8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0xae2:      c7 43 24 00 00 00 00               	mov dword ptr [ebx + 0x24], 0
0xae9:      c7 43 30 00 00 00 00               	mov dword ptr [ebx + 0x30], 0
0xaf0:      c7 43 34 00 00 00 00               	mov dword ptr [ebx + 0x34], 0
0xaf7:      c7 43 38 00 00 00 00               	mov dword ptr [ebx + 0x38], 0
0xafe:      89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb02:      8d 43 3c                           	lea eax, [ebx + 0x3c]
0xb05:      89 04 24                           	mov dword ptr [esp], eax
0xb08:      e8 03 97 00 00                     	call 0xa210 <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE>
0xb0d:      8d 43 40                           	lea eax, [ebx + 0x40]
0xb10:      89 43 48                           	mov dword ptr [ebx + 0x48], eax
0xb13:      89 43 4c                           	mov dword ptr [ebx + 0x4c], eax
0xb16:      c7 43 44 00 00 00 00               	mov dword ptr [ebx + 0x44], 0
0xb1d:      c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0xb24:      c7 43 54 00 00 00 00               	mov dword ptr [ebx + 0x54], 0
0xb2b:      c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0xb33:      8b 43 58                           	mov eax, dword ptr [ebx + 0x58]
0xb36:      8b 40 f4                           	mov eax, dword ptr [eax - 0xc]
0xb39:      c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0xb41:      89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb45:      8d 43 58                           	lea eax, [ebx + 0x58]
0xb48:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb4b -- 0xb4c
0xb4b:      e8                                                 |.               |
; dynamically linked function: _ZNSs9_M_mutateEjjj at 0xb4c -- 0xb4d
; data inside code section at 0xb4d -- 0xb71
0xb4d:      ff ff ff c7 44 24 0c 00  00 00 00 8b 43 5c 8b 40   |....D$......C\.@|
0xb5d:      f4 c7 44 24 04 00 00 00  00 89 44 24 08 8d 43 5c   |..D$......D$..C\|
0xb6d:      89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSs9_M_mutateEjjj at 0xb71 -- 0xb72
; data inside code section at 0xb72 -- 0xb81
0xb72:      ff ff ff c7 44 24 0c 00  00 00 00 8b 43 60 83      |....D$......C`. |
; function: function_b81 at 0xb81 -- 0xb82
0xb81:      c3                                 	ret 
; data inside code section at 0xb82 -- 0xb96
0xb82:      60 8b 40 f4 c7 44 24 04  00 00 00 00 89 1c 24 89   |`.@..D$.......$.|
0xb92:      44 24 08 e8                                        |D$..            |
; dynamically linked function: _ZNSs9_M_mutateEjjj at 0xb96 -- 0xb97
; data inside code section at 0xb97 -- 0xb99
0xb97:      ff ff                                              |..              |
; function: function_b99 at 0xb99 -- 0xbb0
0xb99:      ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0xb9f:      33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xba5:      75 05                              	jne 0xbac <function_b99+0x13>
0xba7:      83 c4 28                           	add esp, 0x28
0xbaa:      5b                                 	pop ebx
0xbab:      c3                                 	ret 
0xbac:      8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0xbb0 -- 0xbb1
0xbb0:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xbb1 -- 0xbb2
; data inside code section at 0xbb2 -- 0xbc0
0xbb2:      ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN6CAlert7SetNullEv at 0xbc0 -- 0xbfa
0xbc0:      53                                 	push ebx
0xbc1:      83 ec 28                           	sub esp, 0x28
0xbc4:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xbc8:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbce:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xbd2:      31 c0                              	xor eax, eax
0xbd4:      89 1c 24                           	mov dword ptr [esp], ebx
0xbd7:      e8 a4 fe ff ff                     	call 0xa80 <_ZN14CUnsignedAlert7SetNullEv>
0xbdc:      8b 43 64                           	mov eax, dword ptr [ebx + 0x64]
0xbdf:      89 43 68                           	mov dword ptr [ebx + 0x68], eax
0xbe2:      8b 43 70                           	mov eax, dword ptr [ebx + 0x70]
0xbe5:      89 43 74                           	mov dword ptr [ebx + 0x74], eax
0xbe8:      8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xbec:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xbf3:      75 05                              	jne 0xbfa <_ZN6CAlert7SetNullEv+0x39>
0xbf5:      83 c4 28                           	add esp, 0x28
0xbf8:      5b                                 	pop ebx
0xbf9:      c3                                 	ret 
; data inside code section at 0xbfa -- 0xbfb
0xbfa:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xbfb -- 0xbfc
; data inside code section at 0xbfc -- 0xc00
0xbfc:      ff ff ff 90                                        |....            |
; function: _ZN6CAlert14getAlertByHashERK7uint256 at 0xc00 -- 0xc63
0xc00:      55                                 	push ebp
0xc01:      57                                 	push edi
0xc02:      56                                 	push esi
0xc03:      53                                 	push ebx
0xc04:      81 ec dc 00 00 00                  	sub esp, 0xdc
0xc0a:      8b b4 24 f0 00 00 00               	mov esi, dword ptr [esp + 0xf0]
0xc11:      8b 9c 24 f4 00 00 00               	mov ebx, dword ptr [esp + 0xf4]
0xc18:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc1e:      89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0xc25:      31 c0                              	xor eax, eax
0xc27:      8d 46 20                           	lea eax, [esi + 0x20]
0xc2a:      89 46 28                           	mov dword ptr [esi + 0x28], eax
0xc2d:      89 46 2c                           	mov dword ptr [esi + 0x2c], eax
0xc30:      8d 46 40                           	lea eax, [esi + 0x40]
0xc33:      c7 46 20 00 00 00 00               	mov dword ptr [esi + 0x20], 0
0xc3a:      c7 46 24 00 00 00 00               	mov dword ptr [esi + 0x24], 0
0xc41:      c7 46 30 00 00 00 00               	mov dword ptr [esi + 0x30], 0
0xc48:      c7 46 40 00 00 00 00               	mov dword ptr [esi + 0x40], 0
0xc4f:      c7 46 44 00 00 00 00               	mov dword ptr [esi + 0x44], 0
0xc56:      c7 46 50 00 00 00 00               	mov dword ptr [esi + 0x50], 0
0xc5d:      89 46 48                           	mov dword ptr [esi + 0x48], eax
0xc60:      89 46 4c                           	mov dword ptr [esi + 0x4c], eax
; data inside code section at 0xc63 -- 0xc66
0xc63:      c7 46 58                                           |.FX             |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0xc66 -- 0xc6a
; data inside code section at 0xc6a -- 0xc6d
0xc6a:      c7 46 5c                                           |.F\             |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0xc6d -- 0xc71
; data inside code section at 0xc71 -- 0xc74
0xc71:      c7 46 60                                           |.F`             |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0xc74 -- 0xf28
; data inside code section at 0xf28 -- 0xf29
0xf28:      e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0xf29 -- 0xf2a
; data inside code section at 0xf2a -- 0xf3e
0xf2a:      ff ff ff 8d 83 8c 00 00  00 89 44 24 04 8d 46 5c   |..........D$..F\|
0xf3a:      89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSs6assignERKSs at 0xf3e -- 0xf3f
; data inside code section at 0xf3f -- 0xf53
0xf3f:      ff ff ff 8d 83 90 00 00  00 89 44 24 04 8d 46 60   |..........D$..F`|
0xf4f:      89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSs6assignERKSs at 0xf53 -- 0xf54
; data inside code section at 0xf54 -- 0xf6d
0xf54:      ff ff ff 8d 83 94 00 00  00 89 44 24 04 8d 46 64   |..........D$..Fd|
0xf64:      89 04 24 e8 54 8b 00 00  81                        |..$.T....       |
; function: function_f6d at 0xf6d -- 0xf6e
0xf6d:      c3                                 	ret 
; data inside code section at 0xf6e -- 0xf81
0xf6e:      a0 00 00 00 8d 46 70 89  5c 24 04 89 04 24 e8 3f   |.....Fp.\$...$.?|
0xf7e:      8b 00 00                                           |...             |
; function: function_f81 at 0xf81 -- 0xfab
0xf81:      80 7c 24 48 00                     	cmp byte ptr [esp + 0x48], 0
0xf86:      75 34                              	jne 0xfbc <function_fbc>
0xf88:      8b 9c 24 cc 00 00 00               	mov ebx, dword ptr [esp + 0xcc]
0xf8f:      65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0xf96:      89 f0                              	mov eax, esi
0xf98:      0f 85 84 00 00 00                  	jne 0x1022 <function_1022>
0xf9e:      81 c4 dc 00 00 00                  	add esp, 0xdc
0xfa4:      5b                                 	pop ebx
0xfa5:      5e                                 	pop esi
0xfa6:      5f                                 	pop edi
0xfa7:      5d                                 	pop ebp
0xfa8:      c2 04 00                           	ret 4
; data inside code section at 0xfab -- 0xfb0
0xfab:      90 8d 74 26 00                                     |..t&.           |
; function: function_fb0 at 0xfb0 -- 0xfbc
0xfb0:      8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0xfb4:      8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0xfb7:      e9 21 fe ff ff                     	jmp 0xddd
; function: function_fbc at 0xfbc -- 0xfc3
0xfbc:      8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0xfc0:      89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfc3 -- 0xfc4
0xfc3:      e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xfc4 -- 0xfc5
; data inside code section at 0xfc5 -- 0xfe4
0xfc5:      ff ff ff 85 c0 75 4c 8b  43 50 83 e8 01 85 c0 89   |.....uL.CP......|
0xfd5:      43 50 75 04 c6 43 48 00  8d 43 18 89 04 24 e8      |CPu..CH..C...$. |
; dynamically linked function: pthread_cond_signal at 0xfe4 -- 0xfe5
; data inside code section at 0xfe5 -- 0xff0
0xfe5:      ff ff ff 85 c0 75 31 89  1c 24 e8                  |.....u1..$.     |
; dynamically linked function: pthread_mutex_unlock at 0xff0 -- 0xff1
; data inside code section at 0xff1 -- 0xffe
0xff1:      ff ff ff 85 c0 74 90 e8  d1 28 00 00 89            |.....t...(...   |
; function: function_ffe at 0xffe -- 0xfff
0xffe:      c3                                 	ret 
; data inside code section at 0xfff -- 0x1008
0xfff:      8d 44 24 44 e8 38 f1 ff  ff                        |.D$D.8...       |
; function: function_1008 at 0x1008 -- 0x1013
0x1008:     89 34 24                           	mov dword ptr [esp], esi
0x100b:     e8 f0 92 00 00                     	call 0xa300 <_ZN6CAlertD1Ev>
0x1010:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1013 -- 0x1014
0x1013:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1014 -- 0x1015
; data inside code section at 0x1015 -- 0x1022
0x1015:     ff ff ff e8 7d 28 00 00  e8 e0 28 00 00            |....}(....(..   |
; function: function_1022 at 0x1022 -- 0x102b
0x1022:     e8 fc ff ff ff                     	call 0x1023
0x1027:     89 c3                              	mov ebx, eax
0x1029:     eb dd                              	jmp 0x1008 <function_1008>
; data inside code section at 0x102b -- 0x102c
0x102b:     8b                                                 |.               |
; function: function_102c at 0x102c -- 0x1030
0x102c:     56                                 	push esi
0x102d:     70 89                              	jo 0xfb8
0x102f:     c3                                 	ret 
; data inside code section at 0x1030 -- 0x1038
0x1030:     85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x1038 -- 0x1039
; data inside code section at 0x1039 -- 0x1047
0x1039:     ff ff ff 8b 56 64 85 d2  74 08 89 14 24 e8         |....Vd..t...$.  |
; dynamically linked function: _ZdlPv at 0x1047 -- 0x1048
; data inside code section at 0x1048 -- 0x1057
0x1048:     ff ff ff 89 34 24 e8 2d  92 00 00 89 1c 24 e8      |....4$.-.....$. |
; dynamically linked function: _Unwind_Resume at 0x1057 -- 0x1058
; data inside code section at 0x1058 -- 0x1060
0x1058:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: Unserialize<CDataStream, char> at 0x1060 -- 0x1098
0x1060:     83 ec 2c                           	sub esp, 0x2c
0x1063:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x1067:     89 c6                              	mov esi, eax
0x1069:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x106d:     89 d3                              	mov ebx, edx
0x106f:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x1073:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1079:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x107d:     31 c0                              	xor eax, eax
0x107f:     89 34 24                           	mov dword ptr [esp], esi
0x1082:     e8 c9 d3 00 00                     	call 0xe450 <_Z15ReadCompactSizeI11CDataStreamEyRT_>
0x1087:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x108f:     89 1c 24                           	mov dword ptr [esp], ebx
0x1092:     89 c7                              	mov edi, eax
0x1094:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1098 -- 0x1099
0x1098:     e8                                                 |.               |
; dynamically linked function: _ZNSs6resizeEjc at 0x1099 -- 0x109a
; data inside code section at 0x109a -- 0x109c
0x109a:     ff ff                                              |..              |
; function: function_109c at 0x109c -- 0x10be
0x109c:     ff 85 ff 75 1f 8b                  	inc dword ptr [ebp - 0x74e08a01]
0x10a2:     44                                 	inc esp
0x10a3:     24 1c                              	and al, 0x1c
0x10a5:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10ac:     75 37                              	jne 0x10e5 <function_10e5>
0x10ae:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x10b2:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x10b6:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x10ba:     83 c4 2c                           	add esp, 0x2c
0x10bd:     c3                                 	ret 
; data inside code section at 0x10be -- 0x10cd
0x10be:     66 90 8b 03 8b 50 fc 85  d2 78 0a 89 1c 24 e8      |f....P...x...$. |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x10cd -- 0x10ce
; data inside code section at 0x10ce -- 0x10d0
0x10ce:     ff ff                                              |..              |
; function: function_10d0 at 0x10d0 -- 0x10e5
0x10d0:     ff 8b 03 89 7c 24                  	dec dword ptr [ebx + 0x247c8903]
0x10d6:     08 89 44 24 04 89                  	or byte ptr [ecx - 0x76fbdbbc], cl
0x10dc:     34 24                              	xor al, 0x24
0x10de:     e8 fd 7b 00 00                     	call 0x8ce0 <_ZN11CDataStream4readEPci>
0x10e3:     eb bc                              	jmp 0x10a1
; function: function_10e5 at 0x10e5 -- 0x10e6
; dynamically linked function: __stack_chk_fail at 0x10e6 -- 0x10e7
; data inside code section at 0x10e7 -- 0x10f0
0x10e7:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: SerReadWrite<CDataStream, std::vector<unsigned char> > at 0x10f0 -- 0x115e
0x10f0:     56                                 	push esi
0x10f1:     89 d6                              	mov esi, edx
0x10f3:     53                                 	push ebx
0x10f4:     89 c3                              	mov ebx, eax
0x10f6:     83 ec 34                           	sub esp, 0x34
0x10f9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10ff:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1103:     31 c0                              	xor eax, eax
0x1105:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x1108:     2b 02                              	sub eax, dword ptr [edx]
0x110a:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1112:     89 1c 24                           	mov dword ptr [esp], ebx
0x1115:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1119:     e8 c2 d7 00 00                     	call 0xe8e0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y>
0x111e:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0x1121:     8b 06                              	mov eax, dword ptr [esi]
0x1123:     39 c2                              	cmp edx, eax
0x1125:     74 22                              	je 0x1149 <SerReadWrite<CDataStream, std::vector<unsigned char> >+0x59>
0x1127:     29 c2                              	sub edx, eax
0x1129:     78 38                              	js 0x1163 <function_1163>
0x112b:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x112e:     01 c2                              	add edx, eax
0x1130:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x1135:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1139:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x113d:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1141:     89 1c 24                           	mov dword ptr [esp], ebx
0x1144:     e8 f7 92 00 00                     	call 0xa440 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x1149:     31 c0                              	xor eax, eax
0x114b:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x114f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1156:     75 06                              	jne 0x115e <SerReadWrite<CDataStream, std::vector<unsigned char> >+0x6d>
0x1158:     83 c4 34                           	add esp, 0x34
0x115b:     5b                                 	pop ebx
0x115c:     5e                                 	pop esi
0x115d:     c3                                 	ret 
; data inside code section at 0x115e -- 0x115f
0x115e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x115f -- 0x1160
; data inside code section at 0x1160 -- 0x1163
0x1160:     ff ff ff                                           |...             |
; function: function_1163 at 0x1163 -- 0x1170
0x1163:     e8 6a 28 00 00                     	call 0x39d2 <_ZN11CDataStream5writeEPKci.part.499>
0x1168:     90                                 	nop 
0x1169:     8d b4 26 00 00 00 00               	lea esi, [esi]
; function: _ZNK6CAlert7RelayToEP5CNode at 0x1170 -- 0x1218
0x1170:     83 ec 6c                           	sub esp, 0x6c
0x1173:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x1177:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x117b:     89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x117f:     8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0x1183:     89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x1187:     31 ff                              	xor edi, edi
0x1189:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x118f:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1193:     31 c0                              	xor eax, eax
0x1195:     89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x1199:     89 1c 24                           	mov dword ptr [esp], ebx
0x119c:     e8 ef f5 ff ff                     	call 0x790 <_ZNK6CAlert10IsInEffectEv>
0x11a1:     84 c0                              	test al, al
0x11a3:     75 2b                              	jne 0x11d0 <_ZNK6CAlert7RelayToEP5CNode+0x60>
0x11a5:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x11a9:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x11b0:     89 f8                              	mov eax, edi
0x11b2:     0f 85 ee 00 00 00                  	jne 0x12a6 <function_12a6>
0x11b8:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x11bc:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x11c0:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x11c4:     8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x11c8:     83 c4 6c                           	add esp, 0x6c
0x11cb:     c3                                 	ret 
; data inside code section at 0x11cc -- 0x11d0
0x11cc:     8d 74 26 00                                        |.t&.            |
0x11d0:     8d 6c 24 2c                        	lea ebp, [esp + 0x2c]
0x11d4:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x11d8:     89 2c 24                           	mov dword ptr [esp], ebp
0x11db:     e8 c0 f4 ff ff                     	call 0x6a0 <_ZNK6CAlert7GetHashEv>
0x11e0:     8d 96 b0 02 00 00                  	lea edx, [esi + 0x2b0]
0x11e6:     83 ec 04                           	sub esp, 4
0x11e9:     8d 44 24 18                        	lea eax, [esp + 0x18]
0x11ed:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x11f1:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x11f5:     89 04 24                           	mov dword ptr [esp], eax
0x11f8:     e8 f3 9c 00 00                     	call 0xaef0 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_>
0x11fd:     83 ec 04                           	sub esp, 4
0x1200:     80 7c 24 1c 00                     	cmp byte ptr [esp + 0x1c], 0
0x1205:     74 9e                              	je 0x11a5 <_ZNK6CAlert7RelayToEP5CNode+0x35>
0x1207:     8d 86 c8 01 00 00                  	lea eax, [esi + 0x1c8]
0x120d:     8d 7c 24 28                        	lea edi, [esp + 0x28]
0x1211:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1215:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1218 -- 0x1219
0x1218:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1219 -- 0x121a
; data inside code section at 0x121a -- 0x123b
0x121a:     ff ff ff 89 7c 24 08 8b  86 c4 01 00 00 89 1c 24   |....|$.........$|
0x122a:     89 44 24 04 e8 4d f6 ff  ff 84 c0 74 41 89 3c 24   |.D$..M.....tA.<$|
0x123a:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x123b -- 0x123c
; data inside code section at 0x123c -- 0x123e
0x123c:     ff ff                                              |..              |
; function: function_123e at 0x123e -- 0x1278
0x123e:     ff c7                              	inc edi
0x1240:     44                                 	inc esp
0x1241:     24 04                              	and al, 4
0x1243:     a2 20 00 00 89                     	mov byte ptr [0x89000020], al
0x1248:     34 24                              	xor al, 0x24
0x124a:     e8 a1 94 00 00                     	call 0xa6f0 <_ZN5CNode12BeginMessageEPKc>
0x124f:     8d 7e 0c                           	lea edi, [esi + 0xc]
0x1252:     8d 53 64                           	lea edx, [ebx + 0x64]
0x1255:     89 f8                              	mov eax, edi
0x1257:     e8 94 fe ff ff                     	call 0x10f0 <SerReadWrite<CDataStream, std::vector<unsigned char> >>
0x125c:     8d 53 70                           	lea edx, [ebx + 0x70]
0x125f:     89 f8                              	mov eax, edi
0x1261:     e8 8a fe ff ff                     	call 0x10f0 <SerReadWrite<CDataStream, std::vector<unsigned char> >>
0x1266:     89 34 24                           	mov dword ptr [esp], esi
0x1269:     e8 c2 cc 00 00                     	call 0xdf30 <_ZN5CNode10EndMessageEv>
0x126e:     bf 01 00 00 00                     	mov edi, 1
0x1273:     e9 2d ff ff ff                     	jmp 0x11a5
; data inside code section at 0x1278 -- 0x1285
0x1278:     89 1c 24 e8 20 f7 ff ff  84 c0 75 b3 e8            |..$. .....u..   |
; dynamically linked function: _Z15GetAdjustedTimev at 0x1285 -- 0x1286
; data inside code section at 0x1286 -- 0x129d
0x1286:     ff ff ff 3b 53 08 7f 09  66 90 7c a5 3b 43 04 72   |...;S...f.|.;C.r|
0x1296:     a0 89 3c 24 31 ff e8                               |..<$1..         |
; dynamically linked function: _ZNSsD1Ev at 0x129d -- 0x129e
; data inside code section at 0x129e -- 0x12a1
0x129e:     ff ff ff                                           |...             |
; function: function_12a1 at 0x12a1 -- 0x12a6
0x12a1:     e9 ff fe ff ff                     	jmp 0x11a5
; function: function_12a6 at 0x12a6 -- 0x12a7
; dynamically linked function: __stack_chk_fail at 0x12a7 -- 0x12a8
; data inside code section at 0x12a8 -- 0x12b1
0x12a8:     ff ff ff 89 04 24 66 90  e8                        |.....$f..       |
; dynamically linked function: __cxa_begin_catch at 0x12b1 -- 0x12b2
; data inside code section at 0x12b2 -- 0x12be
0x12b2:     ff ff ff 89 34 24 e8 a3  7b 00 00 e8               |....4$..{...    |
; dynamically linked function: __cxa_rethrow at 0x12be -- 0x12bf
; data inside code section at 0x12bf -- 0x12c3
0x12bf:     ff ff ff 89                                        |....            |
; function: function_12c3 at 0x12c3 -- 0x12c4
0x12c3:     c3                                 	ret 
; data inside code section at 0x12c4 -- 0x12c8
0x12c4:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x12c8 -- 0x12c9
; data inside code section at 0x12c9 -- 0x12d0
0x12c9:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x12d0 -- 0x12d1
; data inside code section at 0x12d1 -- 0x12d5
0x12d1:     ff ff ff 89                                        |....            |
; function: function_12d5 at 0x12d5 -- 0x12d6
0x12d5:     c3                                 	ret 
; data inside code section at 0x12d6 -- 0x12d7
0x12d6:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x12d7 -- 0x12d8
; data inside code section at 0x12d8 -- 0x12df
0x12d8:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x12df -- 0x12e0
; data inside code section at 0x12e0 -- 0x12f0
0x12e0:     ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK6CAlert14CheckSignatureEv at 0x12f0 -- 0x1310
0x12f0:     55                                 	push ebp
0x12f1:     57                                 	push edi
0x12f2:     56                                 	push esi
0x12f3:     53                                 	push ebx
0x12f4:     81 ec dc 00 00 00                  	sub esp, 0xdc
0x12fa:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1300:     89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x1307:     31 c0                              	xor eax, eax
0x1309:     8b b4 24 f0 00 00 00               	mov esi, dword ptr [esp + 0xf0]
; data inside code section at 0x1310 -- 0x1311
0x1310:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x1311 -- 0x1312
; data inside code section at 0x1312 -- 0x1337
0x1312:     ff ff ff 8b 48 2c 8b 40  28 39 c1 74 2c 0f b6 10   |....H,.@(9.t,...|
0x1322:     8d 5a fe 80 fb 01 0f 86  52 02 00 00 80 fa 06 0f   |.Z......R.......|
0x1332:     85 31 02 00 00                                     |.1...           |
; function: function_1337 at 0x1337 -- 0x1338
; data inside code section at 0x1338 -- 0x1341
0x1338:     41 00 00 00 bb 41 00 00  00                        |A....A...       |
; function: function_1341 at 0x1341 -- 0x1342
; data inside code section at 0x1342 -- 0x134b
0x1342:     c1 39 d1 0f 84 6d 02 00  00                        |.9...m...       |
; function: function_134b at 0x134b -- 0x134c
; data inside code section at 0x134c -- 0x1354
0x134c:     44 24 4b ff 8d 6c 24 4b                            |D$K..l$K        |
; function: function_1354 at 0x1354 -- 0x1355
; data inside code section at 0x1355 -- 0x1374
0x1355:     4e 68 8d 56 70 8b 46 64  8d bc 24 ac 00 00 00 89   |Nh.Vp.Fd..$.....|
0x1365:     54 24 1c c7 84 24 ac 00  00 00 00 00 00 00 89      |T$...$......... |
; function: function_1374 at 0x1374 -- 0x1375
0x1374:     cb                                 	retf 
; data inside code section at 0x1375 -- 0x1376
0x1375:     29                                                 |)               |
; function: function_1376 at 0x1376 -- 0x1377
0x1376:     c3                                 	ret 
; data inside code section at 0x1377 -- 0x13e1
0x1377:     39 c1 b9 2c 47 01 00 0f  44 c1 89 5c 24 04 8d 9c   |9..,G...D..\$...|
0x1387:     24 8c 00 00 00 c7 84 24  b0 00 00 00 00 00 00 00   |$......$........|
0x1397:     c7 84 24 b4 00 00 00 00  00 00 00 c7 84 24 b8 00   |..$..........$..|
0x13a7:     00 00 00 00 00 00 c7 84  24 bc 00 00 00 00 00 00   |........$.......|
0x13b7:     00 c7 84 24 c0 00 00 00  00 00 00 00 c7 84 24 c4   |...$..........$.|
0x13c7:     00 00 00 00 00 00 00 c7  84 24 c8 00 00 00 00 00   |.........$......|
0x13d7:     00 00 89 7c 24 08 89 04  24 e8                     |...|$...$.      |
; dynamically linked function: SHA256 at 0x13e1 -- 0x13e2
; data inside code section at 0x13e2 -- 0x144d
0x13e2:     ff ff ff c7 84 24 8c 00  00 00 00 00 00 00 c7 84   |.....$..........|
0x13f2:     24 90 00 00 00 00 00 00  00 c7 84 24 94 00 00 00   |$..........$....|
0x1402:     00 00 00 00 c7 84 24 98  00 00 00 00 00 00 00 c7   |......$.........|
0x1412:     84 24 9c 00 00 00 00 00  00 00 c7 84 24 a0 00 00   |.$..........$...|
0x1422:     00 00 00 00 00 c7 84 24  a4 00 00 00 00 00 00 00   |.......$........|
0x1432:     c7 84 24 a8 00 00 00 00  00 00 00 89 5c 24 08 c7   |..$.........\$..|
0x1442:     44 24 04 20 00 00 00 89  3c 24 e8                  |D$. ....<$.     |
; dynamically linked function: SHA256 at 0x144d -- 0x144e
; data inside code section at 0x144e -- 0x1461
0x144e:     ff ff ff 8b 54 24 1c 89  5c 24 04 89 2c 24 89 54   |....T$..\$..,$.T|
0x145e:     24 08 e8                                           |$..             |
; dynamically linked function: _ZNK7CPubKey6VerifyERK7uint256RKSt6vectorIhSaIhEE at 0x1461 -- 0x1462
; data inside code section at 0x1462 -- 0x149d
0x1462:     ff ff ff 84 c0 0f 84 3b  01 00 00 8b 5e 68 8b 7e   |.......;....^h.~|
0x1472:     64 c7 44 24 2c 00 00 00  00 c7 44 24 30 00 00 00   |d.D$,.....D$0...|
0x1482:     00 89 dd 29 fd c7 44 24  34 00 00 00 00 c7 44 24   |...)..D$4.....D$|
0x1492:     18 00 00 00 00 0f 85 f3  00 00 00                  |...........     |
; function: function_149d at 0x149d -- 0x149e
; data inside code section at 0x149e -- 0x14be
0x149e:     44 24 18 01 c5 39 fb 89  44 24 2c 89 6c 24 34 74   |D$...9..D$,.l$4t|
0x14ae:     24 89 fa 89 c1 90 8d 74  26 00 85 c9 74 07 0f b6   |$......t&...t...|
; function: function_14be at 0x14be -- 0x14c7
0x14be:     2a 89 e8 88 01 83                  	sub cl, byte ptr [ecx - 0x7cfe7718]
0x14c4:     c2 01 83                           	ret 0x8301
; data inside code section at 0x14c7 -- 0x14cc
0x14c7:     c1 01 39 da 75                                     |..9.u           |
; function: function_14cc at 0x14cc -- 0x14ce
0x14cc:     eb 29                              	jmp 0x14f7 <function_14f7>
; function: function_14ce at 0x14ce -- 0x14f7
0x14ce:     fa                                 	cli 
0x14cf:     01 54 24 18                        	add dword ptr [esp + 0x18], edx
0x14d3:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x14d7:     8d 5c 24 2c                        	lea ebx, [esp + 0x2c]
0x14db:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x14e3:     c7 44 24 40 01 00 00 00            	mov dword ptr [esp + 0x40], 1
0x14eb:     c7 44 24 44 80 38 01 00            	mov dword ptr [esp + 0x44], 0x13880
0x14f3:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
; function: function_14f7 at 0x14f7 -- 0x153b
0x14f7:     66 c7 44 24 3c 00 00               	mov word ptr [esp + 0x3c], 0
0x14fe:     66 c7 44 24 3e 05 00               	mov word ptr [esp + 0x3e], 5
0x1505:     c7 44 24 0c 80 38 01 00            	mov dword ptr [esp + 0xc], 0x13880
0x150d:     c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x1515:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1519:     89 34 24                           	mov dword ptr [esp], esi
0x151c:     e8 af da 00 00                     	call 0xefd0 <_ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii>
0x1521:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x1525:     be 01 00 00 00                     	mov esi, 1
0x152a:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x152e:     85 db                              	test ebx, ebx
0x1530:     74 16                              	je 0x1548 <function_1548>
0x1532:     29 d8                              	sub eax, ebx
0x1534:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1538:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x153b -- 0x153c
0x153b:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x153c -- 0x153d
; data inside code section at 0x153d -- 0x1544
0x153d:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x1544 -- 0x1545
; data inside code section at 0x1545 -- 0x1548
0x1545:     ff ff ff                                           |...             |
; function: function_1548 at 0x1548 -- 0x1565
0x1548:     8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0x154f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1556:     89 f0                              	mov eax, esi
0x1558:     75 77                              	jne 0x15d1 <function_15d1>
0x155a:     81 c4 dc 00 00 00                  	add esp, 0xdc
0x1560:     5b                                 	pop ebx
0x1561:     5e                                 	pop esi
0x1562:     5f                                 	pop edi
0x1563:     5d                                 	pop ebp
0x1564:     c3                                 	ret 
; data inside code section at 0x1565 -- 0x1568
0x1565:     8d 76 00                                           |.v.             |
; function: function_1568 at 0x1568 -- 0x157f
0x1568:     80 fa 04                           	cmp dl, 4
0x156b:     0f 84 c6 fd ff ff                  	je 0x1337 <function_1337>
0x1571:     80 fa 07                           	cmp dl, 7
0x1574:     0f 85 d1 fd ff ff                  	jne 0x134b <function_134b>
0x157a:     e9 b8 fd ff ff                     	jmp 0x1337 <function_1337>
; data inside code section at 0x157f -- 0x1580
0x157f:     90                                                 |.               |
; function: function_1580 at 0x1580 -- 0x158f
0x1580:     ba 21 00 00 00                     	mov edx, 0x21
0x1585:     bb 21 00 00 00                     	mov ebx, 0x21
0x158a:     e9 b2 fd ff ff                     	jmp 0x1341 <function_1341>
; data inside code section at 0x158f -- 0x1594
0x158f:     90 89 2c 24 e8                                     |..,$.           |
; dynamically linked function: _Znwj at 0x1594 -- 0x1595
; data inside code section at 0x1595 -- 0x1598
0x1595:     ff ff ff                                           |...             |
; function: function_1598 at 0x1598 -- 0x15a1
0x1598:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x159c:     e9 fc fe ff ff                     	jmp 0x149d <function_149d>
; data inside code section at 0x15a1 -- 0x15b0
0x15a1:     8d b4 26 00 00 00 00 c7  04 24 60 36 00 00 e8      |..&......$`6... |
; dynamically linked function: _Z5errorPKcz at 0x15b0 -- 0x15b1
; data inside code section at 0x15b1 -- 0x15b4
0x15b1:     ff ff ff                                           |...             |
; function: function_15b4 at 0x15b4 -- 0x15b8
0x15b4:     89 c6                              	mov esi, eax
0x15b6:     eb 90                              	jmp 0x1548 <function_1548>
; data inside code section at 0x15b8 -- 0x15c8
0x15b8:     8d 6c 24 4b 89 5c 24 08  89 44 24 04 89 2c 24 e8   |.l$K.\$..D$..,$.|
; dynamically linked function: memcpy at 0x15c8 -- 0x15c9
; data inside code section at 0x15c9 -- 0x15cc
0x15c9:     ff ff ff                                           |...             |
; function: function_15cc at 0x15cc -- 0x15d1
0x15cc:     e9 83 fd ff ff                     	jmp 0x1354 <function_1354>
; function: function_15d1 at 0x15d1 -- 0x15d2
; dynamically linked function: __stack_chk_fail at 0x15d2 -- 0x15d3
; data inside code section at 0x15d3 -- 0x15ee
0x15d3:     ff ff ff 8b 5c 24 2c 89  c6 8b 44 24 34 85 db 74   |....\$,...D$4..t|
0x15e3:     16 29 d8 89 44 24 04 89  1c 24 e8                  |.)..D$...$.     |
; dynamically linked function: OPENSSL_cleanse at 0x15ee -- 0x15ef
; data inside code section at 0x15ef -- 0x15f6
0x15ef:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x15f6 -- 0x15f7
; data inside code section at 0x15f7 -- 0x15fa
0x15f7:     ff ff ff                                           |...             |
; function: function_15fa at 0x15fa -- 0x15fb
; data inside code section at 0x15fb -- 0x15fe
0x15fb:     34 24 e8                                           |4$.             |
; dynamically linked function: _Unwind_Resume at 0x15fe -- 0x15ff
; data inside code section at 0x15ff -- 0x1601
0x15ff:     ff ff                                              |..              |
; function: function_1601 at 0x1601 -- 0x160e
0x1601:     ff 89 c6 89 1c 24                  	dec dword ptr [ecx + 0x241c89c6]
0x1607:     e8 34 82 00 00                     	call 0x9840 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x160c:     eb ec                              	jmp 0x15fa <function_15fa>
; data inside code section at 0x160e -- 0x1610
0x160e:     66 90                                              |f.              |
; function: _ZN6CAlert12ProcessAlertEb at 0x1610 -- 0x16cf
0x1610:     55                                 	push ebp
0x1611:     57                                 	push edi
0x1612:     56                                 	push esi
0x1613:     53                                 	push ebx
0x1614:     31 db                              	xor ebx, ebx
0x1616:     81 ec 9c 02 00 00                  	sub esp, 0x29c
0x161c:     8b bc 24 b0 02 00 00               	mov edi, dword ptr [esp + 0x2b0]
0x1623:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1629:     89 84 24 8c 02 00 00               	mov dword ptr [esp + 0x28c], eax
0x1630:     31 c0                              	xor eax, eax
0x1632:     0f b6 ac 24 b4 02 00 00            	movzx ebp, byte ptr [esp + 0x2b4]
0x163a:     89 3c 24                           	mov dword ptr [esp], edi
0x163d:     e8 ae fc ff ff                     	call 0x12f0 <_ZNK6CAlert14CheckSignatureEv>
0x1642:     84 c0                              	test al, al
0x1644:     75 22                              	jne 0x1668 <_ZN6CAlert12ProcessAlertEb+0x58>
0x1646:     8b 94 24 8c 02 00 00               	mov edx, dword ptr [esp + 0x28c]
0x164d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1654:     89 d8                              	mov eax, ebx
0x1656:     0f 85 50 07 00 00                  	jne 0x1dac
0x165c:     81 c4 9c 02 00 00                  	add esp, 0x29c
0x1662:     5b                                 	pop ebx
0x1663:     5e                                 	pop esi
0x1664:     5f                                 	pop edi
0x1665:     5d                                 	pop ebp
0x1666:     c3                                 	ret 
; data inside code section at 0x1667 -- 0x1668
0x1667:     90                                                 |.               |
0x1668:     89 3c 24                           	mov dword ptr [esp], edi
0x166b:     e8 20 f1 ff ff                     	call 0x790 <_ZNK6CAlert10IsInEffectEv>
0x1670:     84 c0                              	test al, al
0x1672:     74 d2                              	je 0x1646 <_ZN6CAlert12ProcessAlertEb+0x36>
0x1674:     81 7f 14 ff ff ff 7f               	cmp dword ptr [edi + 0x14], 0x7fffffff
0x167b:     0f 84 67 06 00 00                  	je 0x1ce8 <function_1ce8>
0x1681:     8d 84 24 b8 00 00 00               	lea eax, [esp + 0xb8]
0x1688:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1690:     c7 44 24 10 c4 00 00 00            	mov dword ptr [esp + 0x10], 0xc4
0x1698:     c7 44 24 0c 6d 20 00 00            	mov dword ptr [esp + 0xc], 0x206d ; "alert.cpp"
0x16a0:     c7 44 24 08 77 20 00 00            	mov dword ptr [esp + 8], 0x2077 ; "cs_mapAlerts"
0x16a8:     c7 44 24 04 f0 1e 00 00            	mov dword ptr [esp + 4], 0x1ef0 ; "boost::lock_error"
0x16b0:     89 04 24                           	mov dword ptr [esp], eax
0x16b3:     e8 e8 86 00 00                     	call 0x9da0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x16b8:     8b 1d 50 1f 00 00                  	mov ebx, dword ptr [0x1f50] ; "pthread_cond_signal(&cond)"
0x16be:     81 fb 48 1f 00 00                  	cmp ebx, 0x1f48
0x16c4:     0f 85 e4 00 00 00                  	jne 0x17ae <function_17ae>
0x16ca:     e9 51 01 00 00                     	jmp 0x1820 <function_1820>
; data inside code section at 0x16cf -- 0x16df
0x16cf:     90 8b 43 44 c7 04 24 68  21 00 00 89 44 24 04 e8   |..CD..$h!...D$..|
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x16df -- 0x16e0
; data inside code section at 0x16e0 -- 0x16e2
0x16e0:     ff ff                                              |..              |
; function: function_16e2 at 0x16e2 -- 0x16e8
0x16e2:     ff a1 58 00 00 00                  	jmp dword ptr [ecx + 0x58]
; data inside code section at 0x16e8 -- 0x170b
0x16e8:     85 c0 0f 84 b7 06 00 00  8d 53 10 c7 44 24 08 02   |.........S..D$..|
0x16f8:     00 00 00 89 54 24 04 89  04 24 e8 29 0a 01 00 89   |....T$...$.)....|
0x1708:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base at 0x170b -- 0x170c
; data inside code section at 0x170c -- 0x171d
0x170c:     ff ff ff 89 1c 24 c7 44  24 04 48 1f 00 00 89 c6   |.....$.D$.H.....|
0x171c:     e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x171d -- 0x171e
; data inside code section at 0x171e -- 0x1722
0x171e:     ff ff ff 89                                        |....            |
; function: function_1722 at 0x1722 -- 0x1723
0x1722:     c3                                 	ret 
; data inside code section at 0x1723 -- 0x1731
0x1723:     8b 80 a0 00 00 00 85 c0  74 08 89 04 24 e8         |........t...$.  |
; dynamically linked function: _ZdlPv at 0x1731 -- 0x1732
; data inside code section at 0x1732 -- 0x1743
0x1732:     ff ff ff 8b 83 94 00 00  00 85 c0 74 08 89 04 24   |...........t...$|
0x1742:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1743 -- 0x1744
; data inside code section at 0x1744 -- 0x1751
0x1744:     ff ff ff 8d 83 90 00 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0x1751 -- 0x1752
; data inside code section at 0x1752 -- 0x175f
0x1752:     ff ff ff 8d 83 8c 00 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0x175f -- 0x1760
; data inside code section at 0x1760 -- 0x176d
0x1760:     ff ff ff 8d 83 88 00 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0x176d -- 0x176e
; data inside code section at 0x176e -- 0x179b
0x176e:     ff ff ff 8b 43 74 89 44  24 04 8d 43 6c 89 04 24   |....Ct.D$..Cl..$|
0x177e:     e8 8d 8a 00 00 8b 43 54  89 44 24 04 8d 43 4c 89   |......CT.D$..CL.|
0x178e:     04 24 e8 1b 8a 00 00 89  1c 24 89 f3 e8            |.$.......$...   |
; dynamically linked function: _ZdlPv at 0x179b -- 0x179c
; data inside code section at 0x179c -- 0x17ae
0x179c:     ff ff ff 83 2d 58 1f 00  00 01 81 fb 48 1f 00 00   |....-X......H...|
0x17ac:     74 39                                              |t9              |
; function: function_17ae at 0x17ae -- 0x17d8
0x17ae:     8d 73 30                           	lea esi, [ebx + 0x30]
0x17b1:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x17b5:     89 3c 24                           	mov dword ptr [esp], edi
0x17b8:     e8 23 f0 ff ff                     	call 0x7e0 <_ZNK6CAlert7CancelsERKS_>
0x17bd:     84 c0                              	test al, al
0x17bf:     0f 85 0b ff ff ff                  	jne 0x16d0
0x17c5:     89 34 24                           	mov dword ptr [esp], esi
0x17c8:     e8 c3 ef ff ff                     	call 0x790 <_ZNK6CAlert10IsInEffectEv>
0x17cd:     84 c0                              	test al, al
0x17cf:     0f 84 83 05 00 00                  	je 0x1d58 <function_1d58>
0x17d5:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x17d8 -- 0x17d9
0x17d8:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base at 0x17d9 -- 0x17da
; data inside code section at 0x17da -- 0x17de
0x17da:     ff ff ff 89                                        |....            |
; function: function_17de at 0x17de -- 0x17df
0x17de:     c3                                 	ret 
; data inside code section at 0x17df -- 0x1813
0x17df:     81 fb 48 1f 00 00 75 c7  8b 1d 50 1f 00 00 81 fb   |..H...u...P.....|
0x17ef:     48 1f 00 00 74 2b 8d 76  00 8d 43 30 89 7c 24 04   |H...t+.v..C0.|$.|
0x17ff:     89 04 24 e8 d9 ef ff ff  84 c0 0f 85 61 05 00 00   |..$.........a...|
0x180f:     89 1c 24 e8                                        |..$.            |
; dynamically linked function: _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base at 0x1813 -- 0x1814
; data inside code section at 0x1814 -- 0x181d
0x1814:     ff ff ff 3d 48 1f 00 00  89                        |...=H....       |
; function: function_181d at 0x181d -- 0x181e
0x181d:     c3                                 	ret 
; data inside code section at 0x181e -- 0x1820
0x181e:     75 d8                                              |u.              |
; function: function_1820 at 0x1820 -- 0x1a0b
0x1820:     8d 5c 24 3c                        	lea ebx, [esp + 0x3c]
0x1824:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1828:     89 1c 24                           	mov dword ptr [esp], ebx
0x182b:     e8 30 9d 00 00                     	call 0xb560 <_ZN6CAlertC1ERKS_>
0x1830:     8d 84 24 2c 02 00 00               	lea eax, [esp + 0x22c]
0x1837:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x183b:     89 04 24                           	mov dword ptr [esp], eax
0x183e:     e8 5d ee ff ff                     	call 0x6a0 <_ZNK6CAlert7GetHashEv>
0x1843:     83 ec 04                           	sub esp, 4
0x1846:     8b b4 24 38 02 00 00               	mov esi, dword ptr [esp + 0x238]
0x184d:     8b 94 24 30 02 00 00               	mov edx, dword ptr [esp + 0x230]
0x1854:     8b 84 24 34 02 00 00               	mov eax, dword ptr [esp + 0x234]
0x185b:     8b 8c 24 2c 02 00 00               	mov ecx, dword ptr [esp + 0x22c]
0x1862:     89 b4 24 78 02 00 00               	mov dword ptr [esp + 0x278], esi
0x1869:     8b b4 24 3c 02 00 00               	mov esi, dword ptr [esp + 0x23c]
0x1870:     89 94 24 70 02 00 00               	mov dword ptr [esp + 0x270], edx
0x1877:     89 84 24 74 02 00 00               	mov dword ptr [esp + 0x274], eax
0x187e:     89 94 24 f8 00 00 00               	mov dword ptr [esp + 0xf8], edx
0x1885:     8b 94 24 3c 02 00 00               	mov edx, dword ptr [esp + 0x23c]
0x188c:     89 b4 24 7c 02 00 00               	mov dword ptr [esp + 0x27c], esi
0x1893:     8b b4 24 40 02 00 00               	mov esi, dword ptr [esp + 0x240]
0x189a:     89 84 24 fc 00 00 00               	mov dword ptr [esp + 0xfc], eax
0x18a1:     8b 84 24 38 02 00 00               	mov eax, dword ptr [esp + 0x238]
0x18a8:     89 8c 24 6c 02 00 00               	mov dword ptr [esp + 0x26c], ecx
0x18af:     89 94 24 04 01 00 00               	mov dword ptr [esp + 0x104], edx
0x18b6:     8b 94 24 48 02 00 00               	mov edx, dword ptr [esp + 0x248]
0x18bd:     89 b4 24 80 02 00 00               	mov dword ptr [esp + 0x280], esi
0x18c4:     8b b4 24 44 02 00 00               	mov esi, dword ptr [esp + 0x244]
0x18cb:     89 84 24 00 01 00 00               	mov dword ptr [esp + 0x100], eax
0x18d2:     8b 84 24 44 02 00 00               	mov eax, dword ptr [esp + 0x244]
0x18d9:     89 8c 24 f4 00 00 00               	mov dword ptr [esp + 0xf4], ecx
0x18e0:     89 94 24 10 01 00 00               	mov dword ptr [esp + 0x110], edx
0x18e7:     89 b4 24 84 02 00 00               	mov dword ptr [esp + 0x284], esi
0x18ee:     8b b4 24 48 02 00 00               	mov esi, dword ptr [esp + 0x248]
0x18f5:     89 84 24 0c 01 00 00               	mov dword ptr [esp + 0x10c], eax
0x18fc:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1900:     89 b4 24 88 02 00 00               	mov dword ptr [esp + 0x288], esi
0x1907:     8b b4 24 40 02 00 00               	mov esi, dword ptr [esp + 0x240]
0x190e:     89 b4 24 08 01 00 00               	mov dword ptr [esp + 0x108], esi
0x1915:     8d b4 24 14 01 00 00               	lea esi, [esp + 0x114]
0x191c:     89 34 24                           	mov dword ptr [esp], esi
0x191f:     e8 3c 9c 00 00                     	call 0xb560 <_ZN6CAlertC1ERKS_>
0x1924:     8b 84 24 f4 00 00 00               	mov eax, dword ptr [esp + 0xf4]
0x192b:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x192f:     89 84 24 90 01 00 00               	mov dword ptr [esp + 0x190], eax
0x1936:     8b 84 24 f8 00 00 00               	mov eax, dword ptr [esp + 0xf8]
0x193d:     89 84 24 94 01 00 00               	mov dword ptr [esp + 0x194], eax
0x1944:     8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x194b:     89 84 24 98 01 00 00               	mov dword ptr [esp + 0x198], eax
0x1952:     8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x1959:     89 84 24 9c 01 00 00               	mov dword ptr [esp + 0x19c], eax
0x1960:     8b 84 24 04 01 00 00               	mov eax, dword ptr [esp + 0x104]
0x1967:     89 84 24 a0 01 00 00               	mov dword ptr [esp + 0x1a0], eax
0x196e:     8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0x1975:     89 84 24 a4 01 00 00               	mov dword ptr [esp + 0x1a4], eax
0x197c:     8b 84 24 0c 01 00 00               	mov eax, dword ptr [esp + 0x10c]
0x1983:     89 84 24 a8 01 00 00               	mov dword ptr [esp + 0x1a8], eax
0x198a:     8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0x1991:     89 84 24 ac 01 00 00               	mov dword ptr [esp + 0x1ac], eax
0x1998:     8d 84 24 b0 01 00 00               	lea eax, [esp + 0x1b0]
0x199f:     89 04 24                           	mov dword ptr [esp], eax
0x19a2:     e8 b9 9b 00 00                     	call 0xb560 <_ZN6CAlertC1ERKS_>
0x19a7:     8d 54 24 28                        	lea edx, [esp + 0x28]
0x19ab:     8d 84 24 90 01 00 00               	lea eax, [esp + 0x190]
0x19b2:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x19b6:     c7 44 24 04 44 1f 00 00            	mov dword ptr [esp + 4], 0x1f44 ; "_unlock(m)"
0x19be:     89 14 24                           	mov dword ptr [esp], edx
0x19c1:     e8 4a a0 00 00                     	call 0xba10 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_>
0x19c6:     83 ec 04                           	sub esp, 4
0x19c9:     8d 94 24 b0 01 00 00               	lea edx, [esp + 0x1b0]
0x19d0:     89 14 24                           	mov dword ptr [esp], edx
0x19d3:     e8 28 89 00 00                     	call 0xa300 <_ZN6CAlertD1Ev>
0x19d8:     89 34 24                           	mov dword ptr [esp], esi
0x19db:     e8 20 89 00 00                     	call 0xa300 <_ZN6CAlertD1Ev>
0x19e0:     89 1c 24                           	mov dword ptr [esp], ebx
0x19e3:     e8 18 89 00 00                     	call 0xa300 <_ZN6CAlertD1Ev>
0x19e8:     89 3c 24                           	mov dword ptr [esp], edi
0x19eb:     e8 b0 ef ff ff                     	call 0x9a0 <_ZNK6CAlert11AppliesToMeEv>
0x19f0:     84 c0                              	test al, al
0x19f2:     0f 84 a7 02 00 00                  	je 0x1c9f <function_1c9f>
0x19f8:     8d 9c 24 4c 02 00 00               	lea ebx, [esp + 0x24c]
0x19ff:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1a03:     89 1c 24                           	mov dword ptr [esp], ebx
0x1a06:     e8 95 ec ff ff                     	call 0x6a0 <_ZNK6CAlert7GetHashEv>
; data inside code section at 0x1a0b -- 0x1a0c
0x1a0b:     a1                                                 |.               |
; dynamically linked function: uiInterface at 0x1a0c -- 0x1a4c
; data inside code section at 0x1a4c -- 0x1a4d
0x1a4c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1a4d -- 0x1a4e
; data inside code section at 0x1a4e -- 0x1a6f
0x1a4e:     ff ff ff 8d 84 24 f0 00  00 00 8d 9c 24 cc 00 00   |.....$......$...|
0x1a5e:     00 89 44 24 08 c7 44 24  04 91 21 00 00 89 1c 24   |..D$..D$..!....$|
0x1a6e:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1a6f -- 0x1a70
; data inside code section at 0x1a70 -- 0x1a86
0x1a70:     ff ff ff 8d 84 24 c8 00  00 00 89 74 24 08 89 5c   |.....$.....t$..\|
0x1a80:     24 04 89 04 24 e8                                  |$...$.          |
; dynamically linked function: _Z6GetArgRKSsS0_ at 0x1a86 -- 0x1a87
; data inside code section at 0x1a87 -- 0x1a91
0x1a87:     ff ff ff 83 ec 04 89 1c  24 e8                     |........$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1a91 -- 0x1a92
; data inside code section at 0x1a92 -- 0x1a99
0x1a92:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1a99 -- 0x1a9a
; data inside code section at 0x1a9a -- 0x1aef
0x1a9a:     ff ff ff 8b 84 24 c8 00  00 00 8b 58 f4 85 db 0f   |.....$.....X....|
0x1aaa:     84 e1 01 00 00 8d 84 24  f2 00 00 00 8d 94 24 d4   |.......$......$.|
0x1aba:     00 00 00 89 44 24 08 c7  44 24 04 9e 21 00 00 89   |....D$..D$..!...|
0x1aca:     14 24 e8 fc ff ff ff 8d  84 24 f3 00 00 00 8d b4   |.$.......$......|
0x1ada:     24 d8 00 00 00 89 44 24  08 c7 44 24 04 28 38 00   |$.....D$..D$.(8.|
0x1aea:     00 89 34 24 e8                                     |..4$.           |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1aef -- 0x1af0
; data inside code section at 0x1af0 -- 0x1afd
0x1af0:     ff ff ff 8b 47 5c c7 84  24 dc 00 00 00            |....G\..$....   |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1afd -- 0x1b2e
; data inside code section at 0x1b2e -- 0x1b2f
0x1b2e:     e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x1b2f -- 0x1b30
; data inside code section at 0x1b30 -- 0x1b36
0x1b30:     ff ff ff 8b 47 5c                                  |....G\          |
; function: function_1b36 at 0x1b36 -- 0x1b49
0x1b36:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1b3e:     0f be 04 18                        	movsx eax, byte ptr [eax + ebx]
0x1b42:     89 34 24                           	mov dword ptr [esp], esi
0x1b45:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1b49 -- 0x1b4a
0x1b49:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4findEcj at 0x1b4a -- 0x1b4b
; data inside code section at 0x1b4b -- 0x1b65
0x1b4b:     ff ff ff 83 f8 ff 74 2d  8b 47 5c 8b 48 fc 85 c9   |......t-.G\.H...|
0x1b5b:     78 0f 8b 54 24 24 89 14  24 e8                     |x..T$$..$.      |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x1b65 -- 0x1b66
; data inside code section at 0x1b66 -- 0x1b7c
0x1b66:     ff ff ff 8b 47 5c 0f be  04 18 89 44 24 04 8b 44   |....G\.....D$..D|
0x1b76:     24 20 89 04 24 e8                                  |$ ..$.          |
; dynamically linked function: _ZNSs9push_backEc at 0x1b7c -- 0x1b7d
; data inside code section at 0x1b7d -- 0x1b84
0x1b7d:     ff ff ff 8b 47 5c 83                               |....G\.         |
; function: function_1b84 at 0x1b84 -- 0x1b85
0x1b84:     c3                                 	ret 
; data inside code section at 0x1b85 -- 0x1b8b
0x1b85:     01 3b 58 f4 72 95                                  |.;X.r.          |
; function: function_1b8b at 0x1b8b -- 0x1be3
0x1b8b:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1b8f:     8d 84 24 d4 00 00 00               	lea eax, [esp + 0xd4]
0x1b96:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1b9a:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1b9e:     8d 94 24 e0 00 00 00               	lea edx, [esp + 0xe0]
0x1ba5:     89 14 24                           	mov dword ptr [esp], edx
0x1ba8:     e8 53 83 00 00                     	call 0x9f00 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_>
0x1bad:     83 ec 04                           	sub esp, 4
0x1bb0:     8d 9c 24 e4 00 00 00               	lea ebx, [esp + 0xe4]
0x1bb7:     8d 84 24 d4 00 00 00               	lea eax, [esp + 0xd4]
0x1bbe:     8d 94 24 e0 00 00 00               	lea edx, [esp + 0xe0]
0x1bc5:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1bc9:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1bcd:     89 1c 24                           	mov dword ptr [esp], ebx
0x1bd0:     e8 2b 83 00 00                     	call 0x9f00 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_>
0x1bd5:     83 ec 04                           	sub esp, 4
0x1bd8:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1bdc:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1be0:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1be3 -- 0x1be4
0x1be3:     e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x1be4 -- 0x1be5
; data inside code section at 0x1be5 -- 0x1bec
0x1be5:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1bec -- 0x1bed
; data inside code section at 0x1bed -- 0x1bfb
0x1bed:     ff ff ff 8d 94 24 e0 00  00 00 89 14 24 e8         |.....$......$.  |
; dynamically linked function: _ZNSsD1Ev at 0x1bfb -- 0x1bfc
; data inside code section at 0x1bfc -- 0x1c3e
0x1bfc:     ff ff ff 8b 44 24 20 8d  94 24 c8 00 00 00 c7 44   |....D$ ..$.....D|
0x1c0c:     24 04 0f 20 00 00 89 14  24 89 44 24 08 e8 b2 27   |$.. ....$.D$...'|
0x1c1c:     01 00 89 e8 84 c0 0f 84  8d 01 00 00 8d 94 24 c8   |..............$.|
0x1c2c:     00 00 00 8d 9c 24 e8 00  00 00 89 54 24 04 89 1c   |.....$.....T$...|
0x1c3c:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsC1ERKSs at 0x1c3e -- 0x1c3f
; data inside code section at 0x1c3f -- 0x1c61
0x1c3f:     ff ff ff 8d ac 24 c0 00  00 00 89 5c 24 08 c7 44   |.....$.....\$..D|
0x1c4f:     24 04 00 00 00 00 89 2c  24 e8 a3 b1 00 00 89 1c   |$......,$.......|
0x1c5f:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsD1Ev at 0x1c61 -- 0x1c62
; data inside code section at 0x1c62 -- 0x1c69
0x1c62:     ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZN5boost6threadD1Ev at 0x1c69 -- 0x1c6a
; data inside code section at 0x1c6a -- 0x1c6d
0x1c6a:     ff ff ff                                           |...             |
; function: function_1c6d at 0x1c6d -- 0x1c6e
; data inside code section at 0x1c6e -- 0x1c75
0x1c6e:     54 24 20 89 14 24 e8                               |T$ ..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1c75 -- 0x1c76
; data inside code section at 0x1c76 -- 0x1c84
0x1c76:     ff ff ff 89 34 24 8d b4  24 d4 00 00 00 e8         |....4$..$.....  |
; dynamically linked function: _ZNSsD1Ev at 0x1c84 -- 0x1c85
; data inside code section at 0x1c85 -- 0x1c8c
0x1c85:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1c8c -- 0x1c8d
; data inside code section at 0x1c8d -- 0x1c9b
0x1c8d:     ff ff ff 8d 84 24 c8 00  00 00 89 04 24 e8         |.....$......$.  |
; dynamically linked function: _ZNSsD1Ev at 0x1c9b -- 0x1c9c
; data inside code section at 0x1c9c -- 0x1c9f
0x1c9c:     ff ff ff                                           |...             |
; function: function_1c9f at 0x1c9f -- 0x1cda
0x1c9f:     80 bc 24 bc 00 00 00 00            	cmp byte ptr [esp + 0xbc], 0
0x1ca7:     74 0f                              	je 0x1cb8 <function_1c9f+0x19>
0x1ca9:     8b 84 24 b8 00 00 00               	mov eax, dword ptr [esp + 0xb8]
0x1cb0:     89 04 24                           	mov dword ptr [esp], eax
0x1cb3:     e8 68 80 00 00                     	call 0x9d20 <_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv>
0x1cb8:     89 3c 24                           	mov dword ptr [esp], edi
0x1cbb:     bb 01 00 00 00                     	mov ebx, 1
0x1cc0:     e8 db ec ff ff                     	call 0x9a0 <_ZNK6CAlert11AppliesToMeEv>
0x1cc5:     0f b6 c0                           	movzx eax, al
0x1cc8:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1ccc:     8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x1ccf:     c7 04 24 74 38 00 00               	mov dword ptr [esp], 0x3874 ; "accepted alert %d, AppliesToMe()=%d\n"
0x1cd6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1cda -- 0x1cdb
0x1cda:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1cdb -- 0x1cdc
; data inside code section at 0x1cdc -- 0x1cdf
0x1cdc:     ff ff ff                                           |...             |
; function: function_1cdf at 0x1cdf -- 0x1ce4
0x1cdf:     e9 62 f9 ff ff                     	jmp 0x1646
; data inside code section at 0x1ce4 -- 0x1ce8
0x1ce4:     8d 74 26 00                                        |.t&.            |
; function: function_1ce8 at 0x1ce8 -- 0x1d44
0x1ce8:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1ceb:     35 ff ff ff 7f                     	xor eax, 0x7fffffff
0x1cf0:     0b 47 10                           	or eax, dword ptr [edi + 0x10]
0x1cf3:     0f 85 4d f9 ff ff                  	jne 0x1646
0x1cf9:     81 7f 18 fe ff ff 7f               	cmp dword ptr [edi + 0x18], 0x7ffffffe
0x1d00:     0f 85 40 f9 ff ff                  	jne 0x1646
0x1d06:     8b 47 34                           	mov eax, dword ptr [edi + 0x34]
0x1d09:     85 c0                              	test eax, eax
0x1d0b:     0f 85 35 f9 ff ff                  	jne 0x1646
0x1d11:     81 7f 38 ff ff ff 7f               	cmp dword ptr [edi + 0x38], 0x7fffffff
0x1d18:     0f 85 28 f9 ff ff                  	jne 0x1646
0x1d1e:     8b 77 50                           	mov esi, dword ptr [edi + 0x50]
0x1d21:     85 f6                              	test esi, esi
0x1d23:     0f 85 1d f9 ff ff                  	jne 0x1646
0x1d29:     81 7f 54 ff ff ff 7f               	cmp dword ptr [edi + 0x54], 0x7fffffff
0x1d30:     0f 85 10 f9 ff ff                  	jne 0x1646
0x1d36:     8d 77 5c                           	lea esi, [edi + 0x5c]
0x1d39:     c7 44 24 04 d8 37 00 00            	mov dword ptr [esp + 4], 0x37d8 ; "URGENT: Alert key compromised, upgrade required"
0x1d41:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1d44 -- 0x1d45
0x1d44:     e8                                                 |.               |
; dynamically linked function: _ZNKSs7compareEPKc at 0x1d45 -- 0x1d46
; data inside code section at 0x1d46 -- 0x1d49
0x1d46:     ff ff ff                                           |...             |
; function: function_1d49 at 0x1d49 -- 0x1d56
0x1d49:     85 c0                              	test eax, eax
0x1d4b:     0f 85 f5 f8 ff ff                  	jne 0x1646
0x1d51:     e9 2b f9 ff ff                     	jmp 0x1681
; data inside code section at 0x1d56 -- 0x1d58
0x1d56:     66 90                                              |f.              |
; function: function_1d58 at 0x1d58 -- 0x1d66
0x1d58:     8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x1d5b:     c7 04 24 7d 21 00 00               	mov dword ptr [esp], 0x217d ; "expiring alert %d\n"
0x1d62:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1d66 -- 0x1d67
0x1d66:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1d67 -- 0x1d68
; data inside code section at 0x1d68 -- 0x1d6b
0x1d68:     ff ff ff                                           |...             |
; function: function_1d6b at 0x1d6b -- 0x1d70
0x1d6b:     e9 73 f9 ff ff                     	jmp 0x16e3
; data inside code section at 0x1d70 -- 0x1d7f
0x1d70:     8b 43 44 c7 04 24 08 38  00 00 89 44 24 04 e8      |.CD..$.8...D$.. |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1d7f -- 0x1d80
; data inside code section at 0x1d80 -- 0x1d83
0x1d80:     ff ff ff                                           |...             |
; function: function_1d83 at 0x1d83 -- 0x1da7
0x1d83:     31 db                              	xor ebx, ebx
0x1d85:     80 bc 24 bc 00 00 00 00            	cmp byte ptr [esp + 0xbc], 0
0x1d8d:     0f 84 b3 f8 ff ff                  	je 0x1646
0x1d93:     8b 84 24 b8 00 00 00               	mov eax, dword ptr [esp + 0xb8]
0x1d9a:     89 04 24                           	mov dword ptr [esp], eax
0x1d9d:     e8 7e 7f 00 00                     	call 0x9d20 <_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv>
0x1da2:     e9 9f f8 ff ff                     	jmp 0x1646
; function: function_1da7 at 0x1da7 -- 0x1db0
0x1da7:     e8 54 e3 ff ff                     	call 0x100 <_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEEclES4_S5_>
0x1dac:     8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0x1db0 -- 0x1db1
0x1db0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1db1 -- 0x1db2
; data inside code section at 0x1db2 -- 0x1dcb
0x1db2:     ff ff ff 8d 84 24 c8 00  00 00 8d 9c 24 ec 00 00   |.....$......$...|
0x1dc2:     00 89 44 24 04 89 1c 24  e8                        |..D$...$.       |
; dynamically linked function: _ZNSsC1ERKSs at 0x1dcb -- 0x1dcc
; data inside code section at 0x1dcc -- 0x1dd3
0x1dcc:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Z10runCommandSs at 0x1dd3 -- 0x1dd4
; data inside code section at 0x1dd4 -- 0x1ddb
0x1dd4:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1ddb -- 0x1ddc
; data inside code section at 0x1ddc -- 0x1ddf
0x1ddc:     ff ff ff                                           |...             |
; function: function_1ddf at 0x1ddf -- 0x1de4
0x1ddf:     e9 89 fe ff ff                     	jmp 0x1c6d <function_1c6d>
; data inside code section at 0x1de4 -- 0x1de6
0x1de4:     89 c7                                              |..              |
; function: function_1de6 at 0x1de6 -- 0x1de7
; data inside code section at 0x1de7 -- 0x1df0
0x1de7:     34 24 89 fe e8 10 85 00  00                        |4$.......       |
; function: function_1df0 at 0x1df0 -- 0x1df1
; data inside code section at 0x1df1 -- 0x1dfa
0x1df1:     1c 24 89 f3 e8 06 85 00  00                        |.$.......       |
; function: function_1dfa at 0x1dfa -- 0x1dfb
; data inside code section at 0x1dfb -- 0x1e0a
0x1dfb:     84 24 b8 00 00 00 e8 3a  e3 ff ff 89 1c 24 e8      |.$.....:.....$. |
; dynamically linked function: _Unwind_Resume at 0x1e0a -- 0x1e0b
; data inside code section at 0x1e0b -- 0x1e0e
0x1e0b:     ff ff ff                                           |...             |
; function: function_1e0e at 0x1e0e -- 0x1e12
0x1e0e:     89 c6                              	mov esi, eax
0x1e10:     eb de                              	jmp 0x1df0 <function_1df0>
; function: function_1e12 at 0x1e12 -- 0x1e13
; data inside code section at 0x1e13 -- 0x1e1a
0x1e13:     c7 89 1c 24 89 fb e8                               |...$...         |
; dynamically linked function: _ZNSsD1Ev at 0x1e1a -- 0x1e1b
; data inside code section at 0x1e1b -- 0x1e1e
0x1e1b:     ff ff ff                                           |...             |
; function: function_1e1e at 0x1e1e -- 0x1e1f
; data inside code section at 0x1e1f -- 0x1e26
0x1e1f:     44 24 20 89 04 24 e8                               |D$ ..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1e26 -- 0x1e27
; data inside code section at 0x1e27 -- 0x1e2e
0x1e27:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1e2e -- 0x1e2f
; data inside code section at 0x1e2f -- 0x1e32
0x1e2f:     ff ff ff                                           |...             |
; function: function_1e32 at 0x1e32 -- 0x1e33
; data inside code section at 0x1e33 -- 0x1e3d
0x1e33:     94 24 d4 00 00 00 89 14  24 e8                     |.$......$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1e3d -- 0x1e3e
; data inside code section at 0x1e3e -- 0x1e41
0x1e3e:     ff ff ff                                           |...             |
; function: function_1e41 at 0x1e41 -- 0x1e42
; data inside code section at 0x1e42 -- 0x1e4c
0x1e42:     b4 24 c8 00 00 00 89 34  24 e8                     |.$.....4$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1e4c -- 0x1e4d
; data inside code section at 0x1e4d -- 0x1e50
0x1e4d:     ff ff ff                                           |...             |
; function: function_1e50 at 0x1e50 -- 0x1e52
0x1e50:     eb a8                              	jmp 0x1dfa <function_1dfa>
; function: function_1e52 at 0x1e52 -- 0x1e56
0x1e52:     89 c3                              	mov ebx, eax
0x1e54:     eb eb                              	jmp 0x1e41 <function_1e41>
; function: function_1e56 at 0x1e56 -- 0x1e5a
0x1e56:     89 c3                              	mov ebx, eax
0x1e58:     eb a0                              	jmp 0x1dfa <function_1dfa>
; data inside code section at 0x1e5a -- 0x1e60
0x1e5a:     8d b6 00 00 00 00                                  |......          |
; function: function_1e60 at 0x1e60 -- 0x1e62
0x1e60:     eb f4                              	jmp 0x1e56 <function_1e56>
; function: function_1e62 at 0x1e62 -- 0x1e66
0x1e62:     89 c3                              	mov ebx, eax
0x1e64:     eb b8                              	jmp 0x1e1e <function_1e1e>
; function: function_1e66 at 0x1e66 -- 0x1e7c
0x1e66:     89 c7                              	mov edi, eax
0x1e68:     8d 84 24 b0 01 00 00               	lea eax, [esp + 0x1b0]
0x1e6f:     89 04 24                           	mov dword ptr [esp], eax
0x1e72:     e8 89 84 00 00                     	call 0xa300 <_ZN6CAlertD1Ev>
0x1e77:     e9 6a ff ff ff                     	jmp 0x1de6 <function_1de6>
; function: function_1e7c at 0x1e7c -- 0x1e7e
0x1e7c:     eb 94                              	jmp 0x1e12 <function_1e12>
; data inside code section at 0x1e7e -- 0x1e86
0x1e7e:     89 c7 89 1c 24 89 fb e8                            |....$...        |
; dynamically linked function: _ZNSsD1Ev at 0x1e86 -- 0x1e87
; data inside code section at 0x1e87 -- 0x1e8a
0x1e87:     ff ff ff                                           |...             |
; function: function_1e8a at 0x1e8a -- 0x1e8b
; data inside code section at 0x1e8b -- 0x1e95
0x1e8b:     94 24 e0 00 00 00 89 14  24 e8                     |.$......$.      |
; dynamically linked function: _ZNSsD1Ev at 0x1e95 -- 0x1e96
; data inside code section at 0x1e96 -- 0x1e99
0x1e96:     ff ff ff                                           |...             |
; function: function_1e99 at 0x1e99 -- 0x1e9b
0x1e99:     eb 83                              	jmp 0x1e1e <function_1e1e>
; function: function_1e9b at 0x1e9b -- 0x1e9f
0x1e9b:     89 c3                              	mov ebx, eax
0x1e9d:     eb eb                              	jmp 0x1e8a <function_1e8a>
; function: function_1e9f at 0x1e9f -- 0x1eaf
0x1e9f:     8d 84 24 dc 00 00 00               	lea eax, [esp + 0xdc]
0x1ea6:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1eaa:     e9 dc fc ff ff                     	jmp 0x1b8b <function_1b8b>
; function: function_1eaf at 0x1eaf -- 0x1eb6
0x1eaf:     89 c3                              	mov ebx, eax
0x1eb1:     e9 7c ff ff ff                     	jmp 0x1e32 <function_1e32>
; data inside code section at 0x1eb6 -- 0x1ebe
0x1eb6:     89 c7 89 1c 24 89 fb e8                            |....$...        |
; dynamically linked function: _ZNSsD1Ev at 0x1ebe -- 0x1ebf
; data inside code section at 0x1ebf -- 0x1ec2
0x1ebf:     ff ff ff                                           |...             |
; function: function_1ec2 at 0x1ec2 -- 0x1ec3
; data inside code section at 0x1ec3 -- 0x1ec6
0x1ec3:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x1ec6 -- 0x1ec7
; data inside code section at 0x1ec7 -- 0x1ec9
0x1ec7:     ff ff                                              |..              |
; function: function_1ec9 at 0x1ec9 -- 0x1ed0
0x1ec9:     ff 89 d8 eb 88 89                  	dec dword ptr [ecx - 0x76771428]
0x1ecf:     c3                                 	ret 
; function: function_1ed0 at 0x1ed0 -- 0x1ed2
0x1ed0:     eb f0                              	jmp 0x1ec2 <function_1ec2>
; section: .text._ZNK5boost10lock_error4whatEv
; function: _ZNK5boost10lock_error4whatEv at 0x21a0 -- 0x21c5
0x21a0:     83 ec 1c                           	sub esp, 0x1c
0x21a3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21a9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21ad:     31 c0                              	xor eax, eax
0x21af:     b8 f0 1e 00 00                     	mov eax, 0x1ef0 ; "boost::lock_error"
0x21b4:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x21b8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21bf:     75 04                              	jne 0x21c5 <_ZNK5boost10lock_error4whatEv+0x24>
0x21c1:     83 c4 1c                           	add esp, 0x1c
0x21c4:     c3                                 	ret 
; data inside code section at 0x21c5 -- 0x21c6
0x21c5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x21c6 -- 0x21c7
; data inside code section at 0x21c7 -- 0x21ca
0x21c7:     ff ff ff                                           |...             |
; section: .text._ZNK5boost21thread_resource_error4whatEv
; function: _ZNK5boost21thread_resource_error4whatEv at 0x21d0 -- 0x21f5
0x21d0:     83 ec 1c                           	sub esp, 0x1c
0x21d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21d9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21dd:     31 c0                              	xor eax, eax
0x21df:     b8 02 1f 00 00                     	mov eax, 0x1f02 ; "boost::thread_resource_error"
0x21e4:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x21e8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21ef:     75 04                              	jne 0x21f5 <_ZNK5boost21thread_resource_error4whatEv+0x24>
0x21f1:     83 c4 1c                           	add esp, 0x1c
0x21f4:     c3                                 	ret 
; data inside code section at 0x21f5 -- 0x21f6
0x21f5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x21f6 -- 0x21f7
; data inside code section at 0x21f7 -- 0x21fa
0x21f7:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x2200 -- 0x222a
0x2200:     83 ec 1c                           	sub esp, 0x1c
0x2203:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2209:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x220d:     31 c0                              	xor eax, eax
0x220f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2213:     c7 00 a0 47 01 00                  	mov dword ptr [eax], 0x147a0
0x2219:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x221d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2224:     75 04                              	jne 0x222a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x2226:     83 c4 1c                           	add esp, 0x1c
0x2229:     c3                                 	ret 
; data inside code section at 0x222a -- 0x222b
0x222a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x222b -- 0x222c
; data inside code section at 0x222c -- 0x222f
0x222c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x2230 -- 0x225f
0x2230:     83 ec 1c                           	sub esp, 0x1c
0x2233:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2239:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x223d:     31 c0                              	xor eax, eax
0x223f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2243:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x2249:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x224d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2254:     75 04                              	jne 0x225a <_ZN5boost6detail15sp_counted_baseD1Ev+0x2a>
0x2256:     83 c4 1c                           	add esp, 0x1c
0x2259:     c3                                 	ret 
0x225a:     e8 fc ff ff ff                     	call 0x225b
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x2260 -- 0x22b0
0x2260:     83 ec 1c                           	sub esp, 0x1c
0x2263:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2267:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x226e:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2272:     31 d2                              	xor edx, edx
0x2274:     85 c0                              	test eax, eax
0x2276:     74 20                              	je 0x2298 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0x2278:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x227c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2283:     75 24                              	jne 0x22a9 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2285:     8b 10                              	mov edx, dword ptr [eax]
0x2287:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x228b:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x228e:     83 c4 1c                           	add esp, 0x1c
0x2291:     ff e0                              	jmp eax
; data inside code section at 0x2293 -- 0x2298
0x2293:     90 8d 74 26 00                                     |..t&.           |
0x2298:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x229c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x22a3:     75 04                              	jne 0x22a9 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x22a5:     83 c4 1c                           	add esp, 0x1c
0x22a8:     c3                                 	ret 
0x22a9:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x22b0 -- 0x22b1
0x22b0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x22b1 -- 0x22b2
; data inside code section at 0x22b2 -- 0x22b5
0x22b2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x22c0 -- 0x22ea
0x22c0:     83 ec 1c                           	sub esp, 0x1c
0x22c3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x22c9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22cd:     31 c0                              	xor eax, eax
0x22cf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x22d3:     c7 00 f8 46 01 00                  	mov dword ptr [eax], 0x146f8
0x22d9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x22dd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x22e4:     75 04                              	jne 0x22ea <_ZN5boost6system14error_categoryD1Ev+0x29>
0x22e6:     83 c4 1c                           	add esp, 0x1c
0x22e9:     c3                                 	ret 
; data inside code section at 0x22ea -- 0x22eb
0x22ea:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x22eb -- 0x22ec
; data inside code section at 0x22ec -- 0x22ef
0x22ec:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x22f0 -- 0x2324
0x22f0:     83 ec 1c                           	sub esp, 0x1c
0x22f3:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x22f7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x22fe:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2302:     31 d2                              	xor edx, edx
0x2304:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x2308:     89 10                              	mov dword ptr [eax], edx
0x230a:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x230e:     89 50 04                           	mov dword ptr [eax + 4], edx
0x2311:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2315:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x231c:     75 06                              	jne 0x2324 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0x231e:     83 c4 1c                           	add esp, 0x1c
0x2321:     c2 04 00                           	ret 4
; data inside code section at 0x2324 -- 0x2325
0x2324:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2325 -- 0x2326
; data inside code section at 0x2326 -- 0x2329
0x2326:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x2330 -- 0x2394
0x2330:     56                                 	push esi
0x2331:     53                                 	push ebx
0x2332:     83 ec 34                           	sub esp, 0x34
0x2335:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2339:     8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x233d:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2344:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x2348:     31 d2                              	xor edx, edx
0x234a:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x234e:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x2352:     8b 10                              	mov edx, dword ptr [eax]
0x2354:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2358:     89 0c 24                           	mov dword ptr [esp], ecx
0x235b:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x235f:     ff 52 10                           	call dword ptr [edx + 0x10]
0x2362:     31 c0                              	xor eax, eax
0x2364:     83 ec 04                           	sub esp, 4
0x2367:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x236b:     39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0x236e:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x2372:     74 14                              	je 0x2388 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0x2374:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2378:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x237f:     75 0e                              	jne 0x238f <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5f>
0x2381:     83 c4 34                           	add esp, 0x34
0x2384:     5b                                 	pop ebx
0x2385:     5e                                 	pop esi
0x2386:     c3                                 	ret 
; data inside code section at 0x2387 -- 0x2388
0x2387:     90                                                 |.               |
0x2388:     39 13                              	cmp dword ptr [ebx], edx
0x238a:     0f 94 c0                           	sete al
0x238d:     eb e5                              	jmp 0x2374 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
0x238f:     e8 fc ff ff ff                     	call 0x2390
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x23a0 -- 0x23df
0x23a0:     53                                 	push ebx
0x23a1:     83 ec 18                           	sub esp, 0x18
0x23a4:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x23a8:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x23ac:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23b2:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x23b6:     31 c0                              	xor eax, eax
0x23b8:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x23bc:     39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x23bf:     74 17                              	je 0x23d8 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0x23c1:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x23c5:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x23cc:     75 11                              	jne 0x23df <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0x23ce:     83 c4 18                           	add esp, 0x18
0x23d1:     5b                                 	pop ebx
0x23d2:     c3                                 	ret 
; data inside code section at 0x23d3 -- 0x23d8
0x23d3:     90 8d 74 26 00                                     |..t&.           |
0x23d8:     39 0a                              	cmp dword ptr [edx], ecx
0x23da:     0f 94 c0                           	sete al
0x23dd:     eb e2                              	jmp 0x23c1 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0x23df -- 0x23e0
0x23df:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x23e0 -- 0x23e1
; data inside code section at 0x23e1 -- 0x23e4
0x23e1:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED1Ev at 0x23f0 -- 0x241a
0x23f0:     83 ec 1c                           	sub esp, 0x1c
0x23f3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23f9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x23fd:     31 c0                              	xor eax, eax
0x23ff:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2403:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x2409:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x240d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2414:     75 04                              	jne 0x241a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0x2416:     83 c4 1c                           	add esp, 0x1c
0x2419:     c3                                 	ret 
; data inside code section at 0x241a -- 0x241b
0x241a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x241b -- 0x241c
; data inside code section at 0x241c -- 0x241f
0x241c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED1Ev at 0x2420 -- 0x244a
0x2420:     83 ec 1c                           	sub esp, 0x1c
0x2423:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2429:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x242d:     31 c0                              	xor eax, eax
0x242f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2433:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x2439:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x243d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2444:     75 04                              	jne 0x244a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0x2446:     83 c4 1c                           	add esp, 0x1c
0x2449:     c3                                 	ret 
; data inside code section at 0x244a -- 0x244b
0x244a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x244b -- 0x244c
; data inside code section at 0x244c -- 0x244f
0x244c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED1Ev at 0x2450 -- 0x247f
0x2450:     83 ec 1c                           	sub esp, 0x1c
0x2453:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2459:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x245d:     31 c0                              	xor eax, eax
0x245f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2463:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x2469:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x246d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2474:     75 04                              	jne 0x247a <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED1Ev+0x2a>
0x2476:     83 c4 1c                           	add esp, 0x1c
0x2479:     c3                                 	ret 
0x247a:     e8 fc ff ff ff                     	call 0x247b
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x2480 -- 0x24aa
0x2480:     83 ec 1c                           	sub esp, 0x1c
0x2483:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2489:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x248d:     31 c0                              	xor eax, eax
0x248f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2493:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x2499:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x249d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x24a4:     75 04                              	jne 0x24aa <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0x24a6:     83 c4 1c                           	add esp, 0x1c
0x24a9:     c3                                 	ret 
; data inside code section at 0x24aa -- 0x24ab
0x24aa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x24ab -- 0x24ac
; data inside code section at 0x24ac -- 0x24af
0x24ac:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0x24b0 -- 0x24d0
0x24b0:     83 ec 1c                           	sub esp, 0x1c
0x24b3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x24b9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x24bd:     31 c0                              	xor eax, eax
0x24bf:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x24c3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x24ca:     75 04                              	jne 0x24d0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x1f>
0x24cc:     83 c4 1c                           	add esp, 0x1c
0x24cf:     c3                                 	ret 
; data inside code section at 0x24d0 -- 0x24d1
0x24d0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x24d1 -- 0x24d2
; data inside code section at 0x24d2 -- 0x24d5
0x24d2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0x24e0 -- 0x2500
0x24e0:     83 ec 1c                           	sub esp, 0x1c
0x24e3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x24e9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x24ed:     31 c0                              	xor eax, eax
0x24ef:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x24f3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x24fa:     75 04                              	jne 0x2500 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0x24fc:     83 c4 1c                           	add esp, 0x1c
0x24ff:     c3                                 	ret 
; data inside code section at 0x2500 -- 0x2501
0x2500:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2501 -- 0x2502
; data inside code section at 0x2502 -- 0x2505
0x2502:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv at 0x2510 -- 0x2560
0x2510:     83 ec 1c                           	sub esp, 0x1c
0x2513:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2519:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x251d:     31 c0                              	xor eax, eax
0x251f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2523:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2526:     85 c0                              	test eax, eax
0x2528:     74 1e                              	je 0x2548 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv+0x38>
0x252a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x252e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2535:     75 22                              	jne 0x2559 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv+0x49>
0x2537:     8b 10                              	mov edx, dword ptr [eax]
0x2539:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x253d:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x2540:     83 c4 1c                           	add esp, 0x1c
0x2543:     ff e0                              	jmp eax
; data inside code section at 0x2545 -- 0x2548
0x2545:     8d 76 00                                           |.v.             |
0x2548:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x254c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2553:     75 04                              	jne 0x2559 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv+0x49>
0x2555:     83 c4 1c                           	add esp, 0x1c
0x2558:     c3                                 	ret 
0x2559:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x2560 -- 0x2561
0x2560:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2561 -- 0x2562
; data inside code section at 0x2562 -- 0x2565
0x2562:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE11get_deleterERKSt9type_info at 0x2570 -- 0x2590
0x2570:     83 ec 1c                           	sub esp, 0x1c
0x2573:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2579:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x257d:     31 c0                              	xor eax, eax
0x257f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2583:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x258a:     75 04                              	jne 0x2590 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0x258c:     83 c4 1c                           	add esp, 0x1c
0x258f:     c3                                 	ret 
; data inside code section at 0x2590 -- 0x2591
0x2590:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2591 -- 0x2592
; data inside code section at 0x2592 -- 0x2595
0x2592:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x25a0 -- 0x25f0
0x25a0:     83 ec 1c                           	sub esp, 0x1c
0x25a3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x25a9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x25ad:     31 c0                              	xor eax, eax
0x25af:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x25b3:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x25b6:     85 c0                              	test eax, eax
0x25b8:     74 1e                              	je 0x25d8 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0x25ba:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x25be:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x25c5:     75 22                              	jne 0x25e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x25c7:     8b 10                              	mov edx, dword ptr [eax]
0x25c9:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x25cd:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x25d0:     83 c4 1c                           	add esp, 0x1c
0x25d3:     ff e0                              	jmp eax
; data inside code section at 0x25d5 -- 0x25d8
0x25d5:     8d 76 00                                           |.v.             |
0x25d8:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x25dc:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x25e3:     75 04                              	jne 0x25e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x25e5:     83 c4 1c                           	add esp, 0x1c
0x25e8:     c3                                 	ret 
0x25e9:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x25f0 -- 0x25f1
0x25f0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x25f1 -- 0x25f2
; data inside code section at 0x25f2 -- 0x25f5
0x25f2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x2600 -- 0x2620
0x2600:     83 ec 1c                           	sub esp, 0x1c
0x2603:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2609:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x260d:     31 c0                              	xor eax, eax
0x260f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2613:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x261a:     75 04                              	jne 0x2620 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x1f>
0x261c:     83 c4 1c                           	add esp, 0x1c
0x261f:     c3                                 	ret 
; data inside code section at 0x2620 -- 0x2621
0x2620:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2621 -- 0x2622
; data inside code section at 0x2622 -- 0x2625
0x2622:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x2630 -- 0x265e
0x2630:     83 ec 1c                           	sub esp, 0x1c
0x2633:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x263a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x263e:     31 d2                              	xor edx, edx
0x2640:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2644:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x264a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x264e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2655:     75 0c                              	jne 0x2663 <function_2663>
0x2657:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x265b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x265e -- 0x265f
0x265e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x265f -- 0x2660
; data inside code section at 0x2660 -- 0x2663
0x2660:     ff ff ff                                           |...             |
; function: function_2663 at 0x2663 -- 0x2664
; dynamically linked function: __stack_chk_fail at 0x2664 -- 0x2665
; data inside code section at 0x2665 -- 0x2668
0x2665:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED0Ev at 0x2670 -- 0x269e
0x2670:     83 ec 1c                           	sub esp, 0x1c
0x2673:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x267a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x267e:     31 d2                              	xor edx, edx
0x2680:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2684:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x268a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x268e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2695:     75 0c                              	jne 0x26a3 <function_26a3>
0x2697:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x269b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x269e -- 0x269f
0x269e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x269f -- 0x26a0
; data inside code section at 0x26a0 -- 0x26a3
0x26a0:     ff ff ff                                           |...             |
; function: function_26a3 at 0x26a3 -- 0x26a4
; dynamically linked function: __stack_chk_fail at 0x26a4 -- 0x26a5
; data inside code section at 0x26a5 -- 0x26a8
0x26a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED0Ev at 0x26b0 -- 0x26de
0x26b0:     83 ec 1c                           	sub esp, 0x1c
0x26b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x26ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x26be:     31 d2                              	xor edx, edx
0x26c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x26c4:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x26ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x26ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x26d5:     75 0c                              	jne 0x26e3 <function_26e3>
0x26d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x26db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x26de -- 0x26df
0x26de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x26df -- 0x26e0
; data inside code section at 0x26e0 -- 0x26e3
0x26e0:     ff ff ff                                           |...             |
; function: function_26e3 at 0x26e3 -- 0x26e4
; dynamically linked function: __stack_chk_fail at 0x26e4 -- 0x26e5
; data inside code section at 0x26e5 -- 0x26e8
0x26e5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED0Ev at 0x26f0 -- 0x271e
0x26f0:     83 ec 1c                           	sub esp, 0x1c
0x26f3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x26fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x26fe:     31 d2                              	xor edx, edx
0x2700:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2704:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x270a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x270e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2715:     75 0c                              	jne 0x2723 <function_2723>
0x2717:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x271b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x271e -- 0x271f
0x271e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x271f -- 0x2720
; data inside code section at 0x2720 -- 0x2723
0x2720:     ff ff ff                                           |...             |
; function: function_2723 at 0x2723 -- 0x2724
; dynamically linked function: __stack_chk_fail at 0x2724 -- 0x2725
; data inside code section at 0x2725 -- 0x2728
0x2725:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x2730 -- 0x275e
0x2730:     83 ec 1c                           	sub esp, 0x1c
0x2733:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x273a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x273e:     31 d2                              	xor edx, edx
0x2740:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2744:     c7 00 38 49 01 00                  	mov dword ptr [eax], 0x14938
0x274a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x274e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2755:     75 0c                              	jne 0x2763 <function_2763>
0x2757:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x275b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x275e -- 0x275f
0x275e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x275f -- 0x2760
; data inside code section at 0x2760 -- 0x2763
0x2760:     ff ff ff                                           |...             |
; function: function_2763 at 0x2763 -- 0x2764
; dynamically linked function: __stack_chk_fail at 0x2764 -- 0x2765
; data inside code section at 0x2765 -- 0x2768
0x2765:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x2770 -- 0x279e
0x2770:     83 ec 1c                           	sub esp, 0x1c
0x2773:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x277a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x277e:     31 d2                              	xor edx, edx
0x2780:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2784:     c7 00 a0 47 01 00                  	mov dword ptr [eax], 0x147a0
0x278a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x278e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2795:     75 0c                              	jne 0x27a3 <function_27a3>
0x2797:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x279b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x279e -- 0x279f
0x279e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x279f -- 0x27a0
; data inside code section at 0x27a0 -- 0x27a3
0x27a0:     ff ff ff                                           |...             |
; function: function_27a3 at 0x27a3 -- 0x27a4
; dynamically linked function: __stack_chk_fail at 0x27a4 -- 0x27a5
; data inside code section at 0x27a5 -- 0x27a8
0x27a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x27b0 -- 0x27de
0x27b0:     83 ec 1c                           	sub esp, 0x1c
0x27b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x27ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x27be:     31 d2                              	xor edx, edx
0x27c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x27c4:     c7 00 f8 46 01 00                  	mov dword ptr [eax], 0x146f8
0x27ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x27ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x27d5:     75 0c                              	jne 0x27e3 <function_27e3>
0x27d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x27db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x27de -- 0x27df
0x27de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x27df -- 0x27e0
; data inside code section at 0x27e0 -- 0x27e3
0x27e0:     ff ff ff                                           |...             |
; function: function_27e3 at 0x27e3 -- 0x27e4
; dynamically linked function: __stack_chk_fail at 0x27e4 -- 0x27e5
; data inside code section at 0x27e5 -- 0x27e8
0x27e5:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j at 0x27f0 -- 0x2839
0x27f0:     83 ec 1c                           	sub esp, 0x1c
0x27f3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x27fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x27fe:     31 d2                              	xor edx, edx
0x2800:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2804:     83 7c 24 28 0a                     	cmp dword ptr [esp + 0x28], 0xa
0x2809:     77 15                              	ja 0x2820 <_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j+0x30>
0x280b:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x280f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2816:     75 26                              	jne 0x283e <function_283e>
0x2818:     83 c4 1c                           	add esp, 0x1c
0x281b:     c3                                 	ret 
; data inside code section at 0x281c -- 0x2820
0x281c:     8d 74 26 00                                        |.t&.            |
0x2820:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2824:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x282b:     90                                 	nop 
0x282c:     8d 74 26 00                        	lea esi, [esi]
0x2830:     75 0c                              	jne 0x283e <function_283e>
0x2832:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2836:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2839 -- 0x283a
0x2839:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x283a -- 0x283b
; data inside code section at 0x283b -- 0x283e
0x283b:     ff ff ff                                           |...             |
; function: function_283e at 0x283e -- 0x283f
; dynamically linked function: __stack_chk_fail at 0x283f -- 0x2840
; data inside code section at 0x2840 -- 0x2843
0x2840:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD2Ev
; function: _ZN5boost17bad_function_callD1Ev at 0x2850 -- 0x287e
0x2850:     83 ec 1c                           	sub esp, 0x1c
0x2853:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x285a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x285e:     31 d2                              	xor edx, edx
0x2860:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2864:     c7 00 48 48 01 00                  	mov dword ptr [eax], 0x14848
0x286a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x286e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2875:     75 0c                              	jne 0x2883 <function_2883>
0x2877:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x287b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x287e -- 0x287f
0x287e:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x287f -- 0x2880
; data inside code section at 0x2880 -- 0x2883
0x2880:     ff ff ff                                           |...             |
; function: function_2883 at 0x2883 -- 0x2884
; dynamically linked function: __stack_chk_fail at 0x2884 -- 0x2885
; data inside code section at 0x2885 -- 0x2888
0x2885:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x2890 -- 0x28b0
0x2890:     53                                 	push ebx
0x2891:     83 ec 28                           	sub esp, 0x28
0x2894:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x2898:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x289e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x28a2:     31 c0                              	xor eax, eax
0x28a4:     c7 03 20 47 01 00                  	mov dword ptr [ebx], 0x14720
0x28aa:     8d 43 10                           	lea eax, [ebx + 0x10]
0x28ad:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x28b0 -- 0x28b1
0x28b0:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x28b1 -- 0x28b2
; data inside code section at 0x28b2 -- 0x28cb
0x28b2:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x28c2:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x28cb -- 0x28cc
; data inside code section at 0x28cc -- 0x28d0
0x28cc:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x28d0 -- 0x28d1
; data inside code section at 0x28d1 -- 0x28d4
0x28d1:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD2Ev
; function: _ZN5boost16thread_exceptionD1Ev at 0x28e0 -- 0x290e
0x28e0:     83 ec 1c                           	sub esp, 0x1c
0x28e3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x28ea:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x28ee:     31 d2                              	xor edx, edx
0x28f0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x28f4:     c7 00 38 47 01 00                  	mov dword ptr [eax], 0x14738
0x28fa:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x28fe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2905:     75 0c                              	jne 0x2913 <function_2913>
0x2907:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x290b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x290e -- 0x290f
0x290e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x290f -- 0x2910
; data inside code section at 0x2910 -- 0x2913
0x2910:     ff ff ff                                           |...             |
; function: function_2913 at 0x2913 -- 0x2914
; dynamically linked function: __stack_chk_fail at 0x2914 -- 0x2915
; data inside code section at 0x2915 -- 0x2918
0x2915:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2920 -- 0x2927
0x2920:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x2925:     eb 09                              	jmp 0x2930 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x2927 -- 0x2930
0x2927:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2930 -- 0x294c
0x2930:     56                                 	push esi
0x2931:     53                                 	push ebx
0x2932:     83 ec 24                           	sub esp, 0x24
0x2935:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2939:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x293f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2943:     31 c0                              	xor eax, eax
0x2945:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x294c -- 0x294d
0x294c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x294d -- 0x294e
; data inside code section at 0x294e -- 0x2952
0x294e:     ff ff ff 89                                        |....            |
; function: function_2952 at 0x2952 -- 0x2953
0x2952:     c3                                 	ret 
; data inside code section at 0x2953 -- 0x29a5
0x2953:     c7 00 68 47 01 00 8b 46  04 85 c0 89 43 04 74 08   |..hG...F....C.t.|
0x2963:     8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 f8 4a 01   |....$.R..F....J.|
0x2973:     00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0x2983:     10 4b 01 00 c7 43 18 24  4b 01 00 89 43 10 c7 44   |.K...C.$K...C..D|
0x2993:     24 08 00 44 00 00 c7 44  24 04 70 4b 01 00 89 1c   |$..D...D$.pK....|
0x29a3:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x29a5 -- 0x29a6
; data inside code section at 0x29a6 -- 0x29af
0x29a6:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x29af -- 0x29b0
; data inside code section at 0x29b0 -- 0x29b7
0x29b0:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x29b7 -- 0x29b8
; data inside code section at 0x29b8 -- 0x29bb
0x29b8:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEE3runEv
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEE3runEv at 0x31c0 -- 0x31f2
0x31c0:     83 ec 2c                           	sub esp, 0x2c
0x31c3:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x31c7:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x31cb:     8d 5c 24 18                        	lea ebx, [esp + 0x18]
0x31cf:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x31d3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x31da:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x31de:     31 d2                              	xor edx, edx
0x31e0:     8b b0 04 01 00 00                  	mov esi, dword ptr [eax + 0x104]
0x31e6:     05 08 01 00 00                     	add eax, 0x108
0x31eb:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x31ef:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x31f2 -- 0x31f3
0x31f2:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x31f3 -- 0x31f4
; data inside code section at 0x31f4 -- 0x3200
0x31f4:     ff ff ff 89 1c 24 ff d6  89 1c 24 e8               |.....$....$.    |
; dynamically linked function: _ZNSsD1Ev at 0x3200 -- 0x3201
; data inside code section at 0x3201 -- 0x3203
0x3201:     ff ff                                              |..              |
; function: function_3203 at 0x3203 -- 0x321d
0x3203:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3209:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x320f:     75 0c                              	jne 0x321d <function_3203+0x19>
0x3211:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x3215:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3219:     83 c4 2c                           	add esp, 0x2c
0x321c:     c3                                 	ret 
; data inside code section at 0x321d -- 0x321e
0x321d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x321e -- 0x321f
; data inside code section at 0x321f -- 0x3228
0x321f:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x3228 -- 0x3229
; data inside code section at 0x3229 -- 0x3230
0x3229:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3230 -- 0x3231
; data inside code section at 0x3231 -- 0x3234
0x3231:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED2Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED1Ev at 0x3240 -- 0x3263
0x3240:     53                                 	push ebx
0x3241:     83 ec 28                           	sub esp, 0x28
0x3244:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3248:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x324e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3252:     31 c0                              	xor eax, eax
0x3254:     c7 03 98 49 01 00                  	mov dword ptr [ebx], 0x14998
0x325a:     8d 83 08 01 00 00                  	lea eax, [ebx + 0x108]
0x3260:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3263 -- 0x3264
0x3263:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3264 -- 0x3265
; data inside code section at 0x3265 -- 0x327e
0x3265:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3275:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0x327e -- 0x327f
; data inside code section at 0x327f -- 0x3283
0x327f:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3283 -- 0x3284
; data inside code section at 0x3284 -- 0x3287
0x3284:     ff ff ff                                           |...             |
; section: .text.unlikely
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.26 at 0x389a -- 0x38c8
0x389a:     83 ec 2c                           	sub esp, 0x2c
0x389d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x38a3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x38a7:     31 c0                              	xor eax, eax
0x38a9:     c7 44 24 0c f0 4b 00 00            	mov dword ptr [esp + 0xc], 0x4bf0 ; "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x38b1:     c7 44 24 08 1a 00 00 00            	mov dword ptr [esp + 8], 0x1a
0x38b9:     c7 44 24 04 88 32 00 00            	mov dword ptr [esp + 4], 0x3288 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x38c1:     c7 04 24 1f 1f 00 00               	mov dword ptr [esp], 0x1f1f ; "!pthread_mutex_lock(m)"
; data inside code section at 0x38c8 -- 0x38c9
0x38c8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x38c9 -- 0x38ca
; data inside code section at 0x38ca -- 0x38ce
0x38ca:     ff ff ff 90                                        |....            |
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.27 at 0x38ce -- 0x38fc
0x38ce:     83 ec 2c                           	sub esp, 0x2c
0x38d1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x38d7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x38db:     31 c0                              	xor eax, eax
0x38dd:     c7 44 24 0c 50 4c 00 00            	mov dword ptr [esp + 0xc], 0x4c50 ; "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x38e5:     c7 44 24 08 1e 00 00 00            	mov dword ptr [esp + 8], 0x1e
0x38ed:     c7 44 24 04 88 32 00 00            	mov dword ptr [esp + 4], 0x3288 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x38f5:     c7 04 24 36 1f 00 00               	mov dword ptr [esp], 0x1f36 ; "!pthread_mutex_unlock(m)"
; data inside code section at 0x38fc -- 0x38fd
0x38fc:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x38fd -- 0x38fe
; data inside code section at 0x38fe -- 0x3902
0x38fe:     ff ff ff 90                                        |....            |
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv.part.75 at 0x3902 -- 0x3930
0x3902:     83 ec 2c                           	sub esp, 0x2c
0x3905:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x390b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x390f:     31 c0                              	xor eax, eax
0x3911:     c7 44 24 0c 30 4d 00 00            	mov dword ptr [esp + 0xc], 0x4d30 ; "void boost::recursive_mutex::unlock()"
0x3919:     c7 44 24 08 93 00 00 00            	mov dword ptr [esp + 8], 0x93
0x3921:     c7 44 24 04 c8 32 00 00            	mov dword ptr [esp + 4], 0x32c8 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x3929:     c7 04 24 4f 1f 00 00               	mov dword ptr [esp], 0x1f4f ; "!pthread_cond_signal(&cond)"
; data inside code section at 0x3930 -- 0x3931
0x3930:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3931 -- 0x3932
; data inside code section at 0x3932 -- 0x3936
0x3932:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEptEv.isra.249.part.250 at 0x3936 -- 0x3964
0x3936:     83 ec 2c                           	sub esp, 0x2c
0x3939:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x393f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3943:     31 c0                              	xor eax, eax
0x3945:     c7 44 24 0c 90 53 00 00            	mov dword ptr [esp + 0xc], 0x5390 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>::invocation_state]"
0x394d:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0x3955:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x395d:     c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x3964 -- 0x3965
0x3964:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3965 -- 0x3966
; data inside code section at 0x3966 -- 0x396a
0x3966:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.361 at 0x396a -- 0x3998
0x396a:     83 ec 2c                           	sub esp, 0x2c
0x396d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3973:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3977:     31 c0                              	xor eax, eax
0x3979:     c7 44 24 0c 10 55 00 00            	mov dword ptr [esp + 0xc], 0x5510 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >&]"
0x3981:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x3989:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x3991:     c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x3998 -- 0x3999
0x3998:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3999 -- 0x399a
; data inside code section at 0x399a -- 0x399e
0x399a:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSC_SD_EEEEENS1_5mutexEEEEptEv.isra.481.part.482 at 0x399e -- 0x39cc
0x399e:     83 ec 2c                           	sub esp, 0x2c
0x39a1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x39a7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x39ab:     31 c0                              	xor eax, eax
0x39ad:     c7 44 24 0c 50 5f 00 00            	mov dword ptr [esp + 0xc], 0x5f50 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>]"
0x39b5:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0x39bd:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x39c5:     c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x39cc -- 0x39cd
0x39cc:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x39cd -- 0x39ce
; data inside code section at 0x39ce -- 0x39d2
0x39ce:     ff ff ff 90                                        |....            |
; function: _ZN11CDataStream5writeEPKci.part.499 at 0x39d2 -- 0x3a00
0x39d2:     83 ec 2c                           	sub esp, 0x2c
0x39d5:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x39db:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x39df:     31 c0                              	xor eax, eax
0x39e1:     c7 44 24 0c d0 4c 00 00            	mov dword ptr [esp + 0xc], 0x4cd0 ; "CDataStream& CDataStream::write(const char*, int)"
0x39e9:     c7 44 24 08 1b 04 00 00            	mov dword ptr [esp + 8], 0x41b
0x39f1:     c7 44 24 04 73 1f 00 00            	mov dword ptr [esp + 4], 0x1f73 ; "serialize.h"
0x39f9:     c7 04 24 7f 1f 00 00               	mov dword ptr [esp], 0x1f7f ; "nSize >= 0"
; data inside code section at 0x3a00 -- 0x3a01
0x3a00:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3a01 -- 0x3a02
; data inside code section at 0x3a02 -- 0x3a06
0x3a02:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.669 at 0x3a06 -- 0x3a34
0x3a06:     83 ec 2c                           	sub esp, 0x2c
0x3a09:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a0f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3a13:     31 c0                              	xor eax, eax
0x3a15:     c7 44 24 0c b0 81 00 00            	mov dword ptr [esp + 0xc], 0x81b0 ; "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x3a1d:     c7 44 24 08 59 02 00 00            	mov dword ptr [esp + 8], 0x259
0x3a25:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x3a2d:     c7 04 24 90 1f 00 00               	mov dword ptr [esp], 0x1f90 ; "is_valid()"
; data inside code section at 0x3a34 -- 0x3a35
0x3a34:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3a35 -- 0x3a36
; data inside code section at 0x3a36 -- 0x3a3a
0x3a36:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.701 at 0x3a3a -- 0x3a68
0x3a3a:     83 ec 2c                           	sub esp, 0x2c
0x3a3d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a43:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3a47:     31 c0                              	xor eax, eax
0x3a49:     c7 44 24 0c 50 79 00 00            	mov dword ptr [esp + 0xc], 0x7950 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0x3a51:     c7 44 24 08 fb 02 00 00            	mov dword ptr [esp + 8], 0x2fb
0x3a59:     c7 44 24 04 64 33 00 00            	mov dword ptr [esp + 4], 0x3364 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x3a61:     c7 04 24 9b 1f 00 00               	mov dword ptr [esp], 0x1f9b ; "!full()"
; data inside code section at 0x3a68 -- 0x3a69
0x3a68:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3a69 -- 0x3a6a
; data inside code section at 0x3a6a -- 0x3a6e
0x3a6a:     ff ff ff 90                                        |....            |
; function: _ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_.isra.755.part.756 at 0x3a6e -- 0x3a9c
0x3a6e:     83 ec 2c                           	sub esp, 0x2c
0x3a71:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a77:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3a7b:     31 c0                              	xor eax, eax
0x3a7d:     c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x3a85:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0x3a8d:     c7 44 24 04 98 33 00 00            	mov dword ptr [esp + 4], 0x3398 ; "/usr/include/boost/optional/optional.hpp"
0x3a95:     c7 04 24 a3 1f 00 00               	mov dword ptr [esp], 0x1fa3 ; "this->is_initialized()"
; data inside code section at 0x3a9c -- 0x3a9d
0x3a9c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x3a9d -- 0x3a9e
; data inside code section at 0x3a9e -- 0x3aa1
0x3a9e:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD0Ev
; function: _ZN5boost17bad_function_callD0Ev at 0x3ab0 -- 0x3acd
0x3ab0:     53                                 	push ebx
0x3ab1:     83 ec 28                           	sub esp, 0x28
0x3ab4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3ab8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3abe:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3ac2:     31 c0                              	xor eax, eax
0x3ac4:     c7 03 48 48 01 00                  	mov dword ptr [ebx], 0x14848
0x3aca:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3acd -- 0x3ace
0x3acd:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3ace -- 0x3acf
; data inside code section at 0x3acf -- 0x3ae8
0x3acf:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3adf:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3ae8 -- 0x3ae9
; data inside code section at 0x3ae9 -- 0x3aed
0x3ae9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3aed -- 0x3aee
; data inside code section at 0x3aee -- 0x3af1
0x3aee:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED0Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED0Ev at 0x3b00 -- 0x3b23
0x3b00:     53                                 	push ebx
0x3b01:     83 ec 28                           	sub esp, 0x28
0x3b04:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3b08:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3b0e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3b12:     31 c0                              	xor eax, eax
0x3b14:     c7 03 98 49 01 00                  	mov dword ptr [ebx], 0x14998
0x3b1a:     8d 83 08 01 00 00                  	lea eax, [ebx + 0x108]
0x3b20:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3b23 -- 0x3b24
0x3b23:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3b24 -- 0x3b25
; data inside code section at 0x3b25 -- 0x3b2c
0x3b25:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0x3b2c -- 0x3b2d
; data inside code section at 0x3b2d -- 0x3b46
0x3b2d:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3b3d:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3b46 -- 0x3b47
; data inside code section at 0x3b47 -- 0x3b4b
0x3b47:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3b4b -- 0x3b4c
; data inside code section at 0x3b4c -- 0x3b4f
0x3b4c:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD0Ev
; function: _ZN5boost10lock_errorD0Ev at 0x3b50 -- 0x3b6d
0x3b50:     53                                 	push ebx
0x3b51:     83 ec 28                           	sub esp, 0x28
0x3b54:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3b58:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3b5e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3b62:     31 c0                              	xor eax, eax
0x3b64:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x3b6a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3b6d -- 0x3b6e
0x3b6d:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3b6e -- 0x3b6f
; data inside code section at 0x3b6f -- 0x3b88
0x3b6f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3b7f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3b88 -- 0x3b89
; data inside code section at 0x3b89 -- 0x3b8d
0x3b89:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3b8d -- 0x3b8e
; data inside code section at 0x3b8e -- 0x3b91
0x3b8e:     ff ff ff                                           |...             |
; section: .text._ZN5boost21thread_resource_errorD2Ev
; function: _ZN5boost21thread_resource_errorD1Ev at 0x3ba0 -- 0x3bce
0x3ba0:     83 ec 1c                           	sub esp, 0x1c
0x3ba3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x3baa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x3bae:     31 d2                              	xor edx, edx
0x3bb0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x3bb4:     c7 00 38 47 01 00                  	mov dword ptr [eax], 0x14738
0x3bba:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x3bbe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3bc5:     75 0c                              	jne 0x3bd3 <function_3bd3>
0x3bc7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x3bcb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x3bce -- 0x3bcf
0x3bce:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3bcf -- 0x3bd0
; data inside code section at 0x3bd0 -- 0x3bd3
0x3bd0:     ff ff ff                                           |...             |
; function: function_3bd3 at 0x3bd3 -- 0x3bd4
; dynamically linked function: __stack_chk_fail at 0x3bd4 -- 0x3bd5
; data inside code section at 0x3bd5 -- 0x3bd8
0x3bd5:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD2Ev
; function: _ZN5boost10lock_errorD1Ev at 0x3be0 -- 0x3c0e
0x3be0:     83 ec 1c                           	sub esp, 0x1c
0x3be3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x3bea:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x3bee:     31 d2                              	xor edx, edx
0x3bf0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x3bf4:     c7 00 38 47 01 00                  	mov dword ptr [eax], 0x14738
0x3bfa:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x3bfe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3c05:     75 0c                              	jne 0x3c13 <function_3c13>
0x3c07:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x3c0b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x3c0e -- 0x3c0f
0x3c0e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3c0f -- 0x3c10
; data inside code section at 0x3c10 -- 0x3c13
0x3c10:     ff ff ff                                           |...             |
; function: function_3c13 at 0x3c13 -- 0x3c14
; dynamically linked function: __stack_chk_fail at 0x3c14 -- 0x3c15
; data inside code section at 0x3c15 -- 0x3c18
0x3c15:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD0Ev
; function: _ZN5boost16thread_exceptionD0Ev at 0x3c20 -- 0x3c3d
0x3c20:     53                                 	push ebx
0x3c21:     83 ec 28                           	sub esp, 0x28
0x3c24:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3c28:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c2e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3c32:     31 c0                              	xor eax, eax
0x3c34:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x3c3a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3c3d -- 0x3c3e
0x3c3d:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3c3e -- 0x3c3f
; data inside code section at 0x3c3f -- 0x3c58
0x3c3f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3c4f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3c58 -- 0x3c59
; data inside code section at 0x3c59 -- 0x3c5d
0x3c59:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3c5d -- 0x3c5e
; data inside code section at 0x3c5e -- 0x3c61
0x3c5e:     ff ff ff                                           |...             |
; section: .text._ZN5boost21thread_resource_errorD0Ev
; function: _ZN5boost21thread_resource_errorD0Ev at 0x3c70 -- 0x3c8d
0x3c70:     53                                 	push ebx
0x3c71:     83 ec 28                           	sub esp, 0x28
0x3c74:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3c78:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c7e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3c82:     31 c0                              	xor eax, eax
0x3c84:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x3c8a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3c8d -- 0x3c8e
0x3c8d:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x3c8e -- 0x3c8f
; data inside code section at 0x3c8f -- 0x3ca8
0x3c8f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3c9f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3ca8 -- 0x3ca9
; data inside code section at 0x3ca9 -- 0x3cad
0x3ca9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3cad -- 0x3cae
; data inside code section at 0x3cae -- 0x3cb1
0x3cae:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x3cc0 -- 0x3ce0
0x3cc0:     53                                 	push ebx
0x3cc1:     83 ec 28                           	sub esp, 0x28
0x3cc4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3cc8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3cce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3cd2:     31 c0                              	xor eax, eax
0x3cd4:     c7 03 20 47 01 00                  	mov dword ptr [ebx], 0x14720
0x3cda:     8d 43 10                           	lea eax, [ebx + 0x10]
0x3cdd:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3ce0 -- 0x3ce1
0x3ce0:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3ce1 -- 0x3ce2
; data inside code section at 0x3ce2 -- 0x3ce9
0x3ce2:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3ce9 -- 0x3cea
; data inside code section at 0x3cea -- 0x3d03
0x3cea:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x3cfa:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3d03 -- 0x3d04
; data inside code section at 0x3d04 -- 0x3d08
0x3d04:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3d08 -- 0x3d09
; data inside code section at 0x3d09 -- 0x3d0c
0x3d09:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3d10 -- 0x3d17
0x3d10:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3d15:     eb 09                              	jmp 0x3d20 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x3d17 -- 0x3d20
0x3d17:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3d20 -- 0x3d3c
0x3d20:     56                                 	push esi
0x3d21:     53                                 	push ebx
0x3d22:     83 ec 24                           	sub esp, 0x24
0x3d25:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3d29:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3d2f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3d33:     31 c0                              	xor eax, eax
0x3d35:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x3d3c -- 0x3d3d
0x3d3c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3d3d -- 0x3d3e
; data inside code section at 0x3d3e -- 0x3d40
0x3d3e:     ff ff                                              |..              |
; function: function_3d40 at 0x3d40 -- 0x3d97
0x3d40:     ff 89 c3 c7 00 68                  	dec dword ptr [ecx + 0x6800c7c3]
0x3d46:     47                                 	inc edi
0x3d47:     01 00                              	add dword ptr [eax], eax
0x3d49:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x3d4c:     85 c0                              	test eax, eax
0x3d4e:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x3d51:     74 08                              	je 0x3d5b <function_3d40+0x1b>
0x3d53:     8b 10                              	mov edx, dword ptr [eax]
0x3d55:     89 04 24                           	mov dword ptr [esp], eax
0x3d58:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x3d5b:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0x3d5e:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3d62:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3d69:     c7 03 f8 4a 01 00                  	mov dword ptr [ebx], 0x14af8
0x3d6f:     89 43 08                           	mov dword ptr [ebx + 8], eax
0x3d72:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x3d75:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3d78:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x3d7b:     c7 43 14 10 4b 01 00               	mov dword ptr [ebx + 0x14], 0x14b10
0x3d82:     c7 43 18 24 4b 01 00               	mov dword ptr [ebx + 0x18], 0x14b24
0x3d89:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3d8c:     8d 43 18                           	lea eax, [ebx + 0x18]
0x3d8f:     75 06                              	jne 0x3d97 <function_3d40+0x56>
0x3d91:     83 c4 24                           	add esp, 0x24
0x3d94:     5b                                 	pop ebx
0x3d95:     5e                                 	pop esi
0x3d96:     c3                                 	ret 
; data inside code section at 0x3d97 -- 0x3d98
0x3d97:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3d98 -- 0x3d99
; data inside code section at 0x3d99 -- 0x3da2
0x3d99:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x3da2 -- 0x3da3
; data inside code section at 0x3da3 -- 0x3daa
0x3da3:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3daa -- 0x3dab
; data inside code section at 0x3dab -- 0x3dae
0x3dab:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x3db0 -- 0x3db7
0x3db0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x3db5:     eb 09                              	jmp 0x3dc0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv>
; data inside code section at 0x3db7 -- 0x3dc0
0x3db7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x3dc0 -- 0x3ddc
0x3dc0:     56                                 	push esi
0x3dc1:     53                                 	push ebx
0x3dc2:     83 ec 24                           	sub esp, 0x24
0x3dc5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3dc9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3dcf:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3dd3:     31 c0                              	xor eax, eax
0x3dd5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x3ddc -- 0x3ddd
0x3ddc:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3ddd -- 0x3dde
; data inside code section at 0x3dde -- 0x3de0
0x3dde:     ff ff                                              |..              |
; function: function_3de0 at 0x3de0 -- 0x3e44
0x3de0:     ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x3de6:     c7 03 50 47 01 00                  	mov dword ptr [ebx], 0x14750
0x3dec:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x3df3:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x3df6:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x3df9:     85 c0                              	test eax, eax
0x3dfb:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3dfe:     74 08                              	je 0x3e08 <function_3de0+0x28>
0x3e00:     8b 10                              	mov edx, dword ptr [eax]
0x3e02:     89 04 24                           	mov dword ptr [esp], eax
0x3e05:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x3e08:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x3e0b:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3e0f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3e16:     c7 43 08 d4 47 01 00               	mov dword ptr [ebx + 8], 0x147d4
0x3e1d:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3e20:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x3e23:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3e26:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x3e29:     c7 03 b8 47 01 00                  	mov dword ptr [ebx], 0x147b8
0x3e2f:     c7 43 1c e4 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147e4
0x3e36:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x3e39:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0x3e3c:     75 06                              	jne 0x3e44 <function_3de0+0x63>
0x3e3e:     83 c4 24                           	add esp, 0x24
0x3e41:     5b                                 	pop ebx
0x3e42:     5e                                 	pop esi
0x3e43:     c3                                 	ret 
; data inside code section at 0x3e44 -- 0x3e45
0x3e44:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3e45 -- 0x3e46
; data inside code section at 0x3e46 -- 0x3e57
0x3e46:     ff ff ff 89 c6 89 1c 24  e8 3d 3b 00 00 89 1c 24   |.......$.=;....$|
0x3e56:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3e57 -- 0x3e58
; data inside code section at 0x3e58 -- 0x3e5f
0x3e58:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3e5f -- 0x3e60
; data inside code section at 0x3e60 -- 0x3e63
0x3e60:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0x3e70 -- 0x3e77
0x3e70:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x3e75:     eb 09                              	jmp 0x3e80 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv>
; data inside code section at 0x3e77 -- 0x3e80
0x3e77:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0x3e80 -- 0x3e9c
0x3e80:     56                                 	push esi
0x3e81:     53                                 	push ebx
0x3e82:     83 ec 24                           	sub esp, 0x24
0x3e85:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3e89:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3e8f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3e93:     31 c0                              	xor eax, eax
0x3e95:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x3e9c -- 0x3e9d
0x3e9c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3e9d -- 0x3e9e
; data inside code section at 0x3e9e -- 0x3ea0
0x3e9e:     ff ff                                              |..              |
; function: function_3ea0 at 0x3ea0 -- 0x3f16
0x3ea0:     ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x3ea6:     c7 03 b0 49 01 00                  	mov dword ptr [ebx], 0x149b0
0x3eac:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x3eb3:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x3eb6:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x3eb9:     85 c0                              	test eax, eax
0x3ebb:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3ebe:     74 08                              	je 0x3ec8 <function_3ea0+0x28>
0x3ec0:     8b 10                              	mov edx, dword ptr [eax]
0x3ec2:     89 04 24                           	mov dword ptr [esp], eax
0x3ec5:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x3ec8:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x3ecb:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3ecf:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3ed6:     c7 43 08 34 4a 01 00               	mov dword ptr [ebx + 8], 0x14a34
0x3edd:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3ee0:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x3ee3:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3ee6:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x3ee9:     c7 03 18 4a 01 00                  	mov dword ptr [ebx], 0x14a18
0x3eef:     c7 43 1c 44 4a 01 00               	mov dword ptr [ebx + 0x1c], 0x14a44
0x3ef6:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x3ef9:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0x3efc:     75 06                              	jne 0x3f04 <function_3ea0+0x64>
0x3efe:     83 c4 24                           	add esp, 0x24
0x3f01:     5b                                 	pop ebx
0x3f02:     5e                                 	pop esi
0x3f03:     c3                                 	ret 
0x3f04:     e8 fc ff ff ff                     	call 0x3f05
0x3f09:     89 c6                              	mov esi, eax
0x3f0b:     89 1c 24                           	mov dword ptr [esp], ebx
0x3f0e:     e8 fd 3a 00 00                     	call 0x7a10 <function_7a10>
0x3f13:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3f16 -- 0x3f17
0x3f16:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3f17 -- 0x3f18
; data inside code section at 0x3f18 -- 0x3f1f
0x3f18:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3f1f -- 0x3f20
; data inside code section at 0x3f20 -- 0x3f23
0x3f20:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x3f30 -- 0x3f90
0x3f30:     83 ec 2c                           	sub esp, 0x2c
0x3f33:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x3f37:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3f3b:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x3f3f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3f45:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3f49:     31 c0                              	xor eax, eax
0x3f4b:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x3f4f:     8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x3f52:     8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0x3f55:     85 d2                              	test edx, edx
0x3f57:     74 27                              	je 0x3f80 <_ZNK5boost6system12system_error4whatEv+0x50>
0x3f59:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3f5d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3f64:     89 d8                              	mov eax, ebx
0x3f66:     0f 85 96 00 00 00                  	jne 0x4002 <function_4002>
0x3f6c:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x3f70:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x3f74:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x3f78:     83 c4 2c                           	add esp, 0x2c
0x3f7b:     c3                                 	ret 
; data inside code section at 0x3f7c -- 0x3f80
0x3f7c:     8d 74 26 00                                        |.t&.            |
0x3f80:     89 34 24                           	mov dword ptr [esp], esi
0x3f83:     8d 7e 10                           	lea edi, [esi + 0x10]
0x3f86:     e8 fc ff ff ff                     	call 0x3f87
0x3f8b:     89 04 24                           	mov dword ptr [esp], eax
0x3f8e:     89 c3                              	mov ebx, eax
; data inside code section at 0x3f90 -- 0x3f91
0x3f90:     e8                                                 |.               |
; dynamically linked function: strlen at 0x3f91 -- 0x3f92
; data inside code section at 0x3f92 -- 0x3fa1
0x3f92:     ff ff ff 89 5c 24 04 89  3c 24 89 44 24 08 e8      |....\$..<$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0x3fa1 -- 0x3fa2
; data inside code section at 0x3fa2 -- 0x3faf
0x3fa2:     ff ff ff 8b 46 10 8b 40  f4 85 c0 75 39            |....F..@...u9   |
; function: function_3faf at 0x3faf -- 0x3fb0
; data inside code section at 0x3fb0 -- 0x3fd4
0x3fb0:     46 0c 8d 5c 24 18 8b 4e  08 8b 10 89 4c 24 08 89   |F..\$..N....L$..|
0x3fc0:     44 24 04 89 1c 24 ff 52  0c 83 ec 04 89 5c 24 04   |D$...$.R.....\$.|
0x3fd0:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0x3fd4 -- 0x3fd5
; data inside code section at 0x3fd5 -- 0x3fdc
0x3fd5:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x3fdc -- 0x3fdd
; data inside code section at 0x3fdd -- 0x3fe0
0x3fdd:     ff ff ff                                           |...             |
; function: function_3fe0 at 0x3fe0 -- 0x3fe8
0x3fe0:     8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x3fe3:     e9 71 ff ff ff                     	jmp 0x3f59
; data inside code section at 0x3fe8 -- 0x3ffc
0x3fe8:     c7 44 24 08 02 00 00 00  c7 44 24 04 ba 1f 00 00   |.D$......D$.....|
0x3ff8:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendEPKcj at 0x3ffc -- 0x3ffd
; data inside code section at 0x3ffd -- 0x4000
0x3ffd:     ff ff ff                                           |...             |
; function: function_4000 at 0x4000 -- 0x4002
0x4000:     eb ad                              	jmp 0x3faf <function_3faf>
; function: function_4002 at 0x4002 -- 0x4003
; dynamically linked function: __stack_chk_fail at 0x4003 -- 0x4004
; data inside code section at 0x4004 -- 0x400d
0x4004:     ff ff ff 89 c7 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x400d -- 0x400e
; data inside code section at 0x400e -- 0x4013
0x400e:     ff ff ff 89 f8                                     |.....           |
; function: function_4013 at 0x4013 -- 0x4014
; data inside code section at 0x4014 -- 0x4017
0x4014:     04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x4017 -- 0x4018
; data inside code section at 0x4018 -- 0x401f
0x4018:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x401f -- 0x4020
; data inside code section at 0x4020 -- 0x4024
0x4020:     ff ff ff 89                                        |....            |
; function: function_4024 at 0x4024 -- 0x4025
0x4024:     c3                                 	ret 
; data inside code section at 0x4025 -- 0x4026
0x4025:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x4026 -- 0x4027
; data inside code section at 0x4027 -- 0x402a
0x4027:     ff ff ff                                           |...             |
; function: function_402a at 0x402a -- 0x402f
0x402a:     e9 2a ff ff ff                     	jmp 0x3f59
; data inside code section at 0x402f -- 0x4030
0x402f:     90                                                 |.               |
; function: function_4030 at 0x4030 -- 0x4032
0x4030:     eb e1                              	jmp 0x4013 <function_4013>
; data inside code section at 0x4032 -- 0x4033
0x4032:     83                                                 |.               |
; function: function_4033 at 0x4033 -- 0x4036
0x4033:     c2 01 89                           	ret 0x8901
; data inside code section at 0x4036 -- 0x403b
0x4036:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x403b -- 0x403c
; data inside code section at 0x403c -- 0x4040
0x403c:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x4040 -- 0x4041
; data inside code section at 0x4041 -- 0x4044
0x4041:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x4050 -- 0x4057
0x4050:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4055:     eb 09                              	jmp 0x4060 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv>
; data inside code section at 0x4057 -- 0x4060
0x4057:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0x4060 -- 0x407c
0x4060:     56                                 	push esi
0x4061:     53                                 	push ebx
0x4062:     83 ec 24                           	sub esp, 0x24
0x4065:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x4069:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x406f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4073:     31 c0                              	xor eax, eax
0x4075:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x407c -- 0x407d
0x407c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x407d -- 0x407e
; data inside code section at 0x407e -- 0x4083
0x407e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt13runtime_error at 0x4083 -- 0x4096
; data inside code section at 0x4096 -- 0x4097
0x4096:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x4097 -- 0x4098
; data inside code section at 0x4098 -- 0x409a
0x4098:     ff ff                                              |..              |
; function: function_409a at 0x409a -- 0x40f6
0x409a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x40a0:     48                                 	dec eax
0x40a1:     48                                 	dec eax
0x40a2:     01 00                              	add dword ptr [eax], eax
0x40a4:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x40ab:     85 c0                              	test eax, eax
0x40ad:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x40b0:     74 08                              	je 0x40ba <function_409a+0x20>
0x40b2:     8b 10                              	mov edx, dword ptr [eax]
0x40b4:     89 04 24                           	mov dword ptr [esp], eax
0x40b7:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x40ba:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x40bd:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x40c1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x40c8:     c7 43 08 d4 48 01 00               	mov dword ptr [ebx + 8], 0x148d4
0x40cf:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x40d2:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x40d5:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x40d8:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x40db:     c7 03 b8 48 01 00                  	mov dword ptr [ebx], 0x148b8
0x40e1:     c7 43 1c e4 48 01 00               	mov dword ptr [ebx + 0x1c], 0x148e4
0x40e8:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x40eb:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0x40ee:     75 06                              	jne 0x40f6 <function_409a+0x5b>
0x40f0:     83 c4 24                           	add esp, 0x24
0x40f3:     5b                                 	pop ebx
0x40f4:     5e                                 	pop esi
0x40f5:     c3                                 	ret 
; data inside code section at 0x40f6 -- 0x40f7
0x40f6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x40f7 -- 0x40f8
; data inside code section at 0x40f8 -- 0x4105
0x40f8:     ff ff ff 89 c6 89 1c 24  e8 9b 27 00 00            |.......$..'..   |
; function: function_4105 at 0x4105 -- 0x4106
; data inside code section at 0x4106 -- 0x4109
0x4106:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x4109 -- 0x410a
; data inside code section at 0x410a -- 0x411b
0x410a:     ff ff ff 89 34 24 e8 fc  ff ff ff 89 c6 89 1c 24   |....4$.........$|
0x411a:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x411b -- 0x411c
; data inside code section at 0x411c -- 0x411f
0x411c:     ff ff ff                                           |...             |
; function: function_411f at 0x411f -- 0x4121
0x411f:     eb e4                              	jmp 0x4105 <function_4105>
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev at 0x4130 -- 0x4195
0x4130:     53                                 	push ebx
0x4131:     83 ec 28                           	sub esp, 0x28
0x4134:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4138:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x413e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4142:     31 c0                              	xor eax, eax
0x4144:     89 1c 24                           	mov dword ptr [esp], ebx
0x4147:     e8 fc ff ff ff                     	call 0x4148
0x414c:     85 c0                              	test eax, eax
0x414e:     75 21                              	jne 0x4171 <_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev+0x41>
0x4150:     83 c3 18                           	add ebx, 0x18
0x4153:     89 1c 24                           	mov dword ptr [esp], ebx
0x4156:     e8 fc ff ff ff                     	call 0x4157
0x415b:     85 c0                              	test eax, eax
0x415d:     75 3b                              	jne 0x419a <function_419a>
0x415f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4163:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x416a:     75 29                              	jne 0x4195 <_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev+0x60>
0x416c:     83 c4 28                           	add esp, 0x28
0x416f:     5b                                 	pop ebx
0x4170:     c3                                 	ret 
0x4171:     c7 44 24 0c 70 8a 00 00            	mov dword ptr [esp + 0xc], 0x8a70 ; "boost::recursive_mutex::~recursive_mutex()"
0x4179:     c7 44 24 08 5c 00 00 00            	mov dword ptr [esp + 8], 0x5c
0x4181:     c7 44 24 04 c8 32 00 00            	mov dword ptr [esp + 4], 0x32c8 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x4189:     c7 04 24 bd 1f 00 00               	mov dword ptr [esp], 0x1fbd ; "!pthread_mutex_destroy(&m)"
0x4190:     e8 fc ff ff ff                     	call 0x4191
; data inside code section at 0x4195 -- 0x4196
0x4195:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4196 -- 0x4197
; data inside code section at 0x4197 -- 0x419a
0x4197:     ff ff ff                                           |...             |
; function: function_419a at 0x419a -- 0x41b9
0x419a:     c7 44 24 0c 70 8a 00 00            	mov dword ptr [esp + 0xc], 0x8a70 ; "boost::recursive_mutex::~recursive_mutex()"
0x41a2:     c7 44 24 08 5e 00 00 00            	mov dword ptr [esp + 8], 0x5e
0x41aa:     c7 44 24 04 c8 32 00 00            	mov dword ptr [esp + 4], 0x32c8 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x41b2:     c7 04 24 d8 1f 00 00               	mov dword ptr [esp], 0x1fd8 ; "!pthread_cond_destroy(&cond)"
; data inside code section at 0x41b9 -- 0x41ba
0x41b9:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x41ba -- 0x41bb
; data inside code section at 0x41bb -- 0x41be
0x41bb:     ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x41c0 -- 0x4211
0x41c0:     53                                 	push ebx
0x41c1:     83 ec 28                           	sub esp, 0x28
0x41c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x41c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x41ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x41d2:     31 c0                              	xor eax, eax
0x41d4:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x41d7:     c7 03 68 47 01 00                  	mov dword ptr [ebx], 0x14768
0x41dd:     85 c0                              	test eax, eax
0x41df:     74 0c                              	je 0x41ed <_ZN5boost9exceptionD1Ev+0x2d>
0x41e1:     8b 10                              	mov edx, dword ptr [eax]
0x41e3:     89 04 24                           	mov dword ptr [esp], eax
0x41e6:     ff 52 10                           	call dword ptr [edx + 0x10]
0x41e9:     84 c0                              	test al, al
0x41eb:     75 1b                              	jne 0x4208 <_ZN5boost9exceptionD1Ev+0x48>
0x41ed:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x41f1:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x41f8:     75 17                              	jne 0x4211 <_ZN5boost9exceptionD1Ev+0x4f>
0x41fa:     83 c4 28                           	add esp, 0x28
0x41fd:     5b                                 	pop ebx
0x41fe:     66 90                              	nop 
0x4200:     c3                                 	ret 
; data inside code section at 0x4201 -- 0x4208
0x4201:     8d b4 26 00 00 00 00                               |..&....         |
0x4208:     c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x420f:     eb dc                              	jmp 0x41ed <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x4211 -- 0x4212
0x4211:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4212 -- 0x4213
; data inside code section at 0x4213 -- 0x4217
0x4213:     ff ff ff 83                                        |....            |
; function: function_4217 at 0x4217 -- 0x421a
0x4217:     c2 01 89                           	ret 0x8901
; data inside code section at 0x421a -- 0x421f
0x421a:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x421f -- 0x4220
; data inside code section at 0x4220 -- 0x4224
0x4220:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x4224 -- 0x4225
; data inside code section at 0x4225 -- 0x4228
0x4225:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x4230 -- 0x423a
0x4230:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x4235:     e9 36 42 00 00                     	jmp 0x8470 <function_8470>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x4240 -- 0x428b
0x4240:     53                                 	push ebx
0x4241:     83 ec 28                           	sub esp, 0x28
0x4244:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4248:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x424e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4252:     31 c0                              	xor eax, eax
0x4254:     c7 03 b8 4a 01 00                  	mov dword ptr [ebx], 0x14ab8
0x425a:     8d 43 14                           	lea eax, [ebx + 0x14]
0x425d:     c7 43 14 c8 4a 01 00               	mov dword ptr [ebx + 0x14], 0x14ac8
0x4264:     89 04 24                           	mov dword ptr [esp], eax
0x4267:     e8 fc ff ff ff                     	call 0x4268
0x426c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4270:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4277:     75 0d                              	jne 0x4286 <_ZN5boost16exception_detail10bad_alloc_D1Ev+0x46>
0x4279:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x427d:     83 c4 28                           	add esp, 0x28
0x4280:     5b                                 	pop ebx
0x4281:     e9 7a 41 00 00                     	jmp 0x8400 <function_8400>
0x4286:     e8 fc ff ff ff                     	call 0x4287
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0x4290 -- 0x429a
0x4290:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4295:     e9 96 42 00 00                     	jmp 0x8530 <function_8530>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0x42a0 -- 0x42ec
0x42a0:     53                                 	push ebx
0x42a1:     83 ec 28                           	sub esp, 0x28
0x42a4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x42a8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x42ae:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x42b2:     31 c0                              	xor eax, eax
0x42b4:     c7 03 d8 49 01 00                  	mov dword ptr [ebx], 0x149d8
0x42ba:     8d 43 08                           	lea eax, [ebx + 8]
0x42bd:     c7 43 08 ec 49 01 00               	mov dword ptr [ebx + 8], 0x149ec
0x42c4:     89 04 24                           	mov dword ptr [esp], eax
0x42c7:     e8 94 41 00 00                     	call 0x8460 <function_8460>
0x42cc:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x42d0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x42d7:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x42dd:     75 0d                              	jne 0x42ec <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev+0x47>
0x42df:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x42e3:     83 c4 28                           	add esp, 0x28
0x42e6:     5b                                 	pop ebx
0x42e7:     e9 fc ff ff ff                     	jmp 0x42e8
; data inside code section at 0x42ec -- 0x42ed
0x42ec:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x42ed -- 0x42ee
; data inside code section at 0x42ee -- 0x42f1
0x42ee:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x4300 -- 0x430a
0x4300:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4305:     e9 06 43 00 00                     	jmp 0x8610 <function_8610>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x4310 -- 0x435c
0x4310:     53                                 	push ebx
0x4311:     83 ec 28                           	sub esp, 0x28
0x4314:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4318:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x431e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4322:     31 c0                              	xor eax, eax
0x4324:     c7 03 78 47 01 00                  	mov dword ptr [ebx], 0x14778
0x432a:     8d 43 08                           	lea eax, [ebx + 8]
0x432d:     c7 43 08 8c 47 01 00               	mov dword ptr [ebx + 8], 0x1478c
0x4334:     89 04 24                           	mov dword ptr [esp], eax
0x4337:     e8 94 41 00 00                     	call 0x84d0 <function_84d0>
0x433c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4340:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4347:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x434d:     75 0d                              	jne 0x435c <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev+0x47>
0x434f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4353:     83 c4 28                           	add esp, 0x28
0x4356:     5b                                 	pop ebx
0x4357:     e9 fc ff ff ff                     	jmp 0x4358
; data inside code section at 0x435c -- 0x435d
0x435c:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x435d -- 0x435e
; data inside code section at 0x435e -- 0x4361
0x435e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0x4370 -- 0x437a
0x4370:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4375:     e9 76 43 00 00                     	jmp 0x86f0 <function_86f0>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0x4380 -- 0x43cc
0x4380:     53                                 	push ebx
0x4381:     83 ec 28                           	sub esp, 0x28
0x4384:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4388:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x438e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4392:     31 c0                              	xor eax, eax
0x4394:     c7 03 78 48 01 00                  	mov dword ptr [ebx], 0x14878
0x439a:     8d 43 08                           	lea eax, [ebx + 8]
0x439d:     c7 43 08 8c 48 01 00               	mov dword ptr [ebx + 8], 0x1488c
0x43a4:     89 04 24                           	mov dword ptr [esp], eax
0x43a7:     e8 94 41 00 00                     	call 0x8540 <function_8540>
0x43ac:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x43b0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x43b7:     c7 03 48 48 01 00                  	mov dword ptr [ebx], 0x14848
0x43bd:     75 0d                              	jne 0x43cc <_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev+0x47>
0x43bf:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x43c3:     83 c4 28                           	add esp, 0x28
0x43c6:     5b                                 	pop ebx
0x43c7:     e9 fc ff ff ff                     	jmp 0x43c8
; data inside code section at 0x43cc -- 0x43cd
0x43cc:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x43cd -- 0x43ce
; data inside code section at 0x43ce -- 0x43d1
0x43ce:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x43e0 -- 0x43ea
0x43e0:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x43e5:     e9 f6 43 00 00                     	jmp 0x87e0 <function_87e0>
; data inside code section at 0x43ea -- 0x43f0
0x43ea:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x43f0 -- 0x43fa
0x43f0:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x43f5:     e9 e6 43 00 00                     	jmp 0x87e0 <function_87e0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x4400 -- 0x442e
0x4400:     53                                 	push ebx
0x4401:     83 ec 28                           	sub esp, 0x28
0x4404:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4408:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x440e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4412:     31 c0                              	xor eax, eax
0x4414:     c7 43 18 a0 47 01 00               	mov dword ptr [ebx + 0x18], 0x147a0
0x441b:     8d 43 14                           	lea eax, [ebx + 0x14]
0x441e:     c7 03 b8 4a 01 00                  	mov dword ptr [ebx], 0x14ab8
0x4424:     c7 43 14 c8 4a 01 00               	mov dword ptr [ebx + 0x14], 0x14ac8
0x442b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x442e -- 0x442f
0x442e:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x442f -- 0x4430
; data inside code section at 0x4430 -- 0x4432
0x4430:     ff ff                                              |..              |
; function: function_4432 at 0x4432 -- 0x444d
0x4432:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x4438:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x443e:     75 0d                              	jne 0x444d <function_4432+0x16>
0x4440:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4444:     83 c4 28                           	add esp, 0x28
0x4447:     5b                                 	pop ebx
0x4448:     e9 73 41 00 00                     	jmp 0x85c0 <function_85c0>
; data inside code section at 0x444d -- 0x444e
0x444d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x444e -- 0x444f
; data inside code section at 0x444f -- 0x4452
0x444f:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x4460 -- 0x4467
0x4460:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x4465:     eb 09                              	jmp 0x4470 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x4467 -- 0x4470
0x4467:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x4470 -- 0x44b9
0x4470:     53                                 	push ebx
0x4471:     83 ec 28                           	sub esp, 0x28
0x4474:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4478:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x447e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4482:     31 c0                              	xor eax, eax
0x4484:     c7 03 b8 4a 01 00                  	mov dword ptr [ebx], 0x14ab8
0x448a:     8d 43 14                           	lea eax, [ebx + 0x14]
0x448d:     c7 43 14 c8 4a 01 00               	mov dword ptr [ebx + 0x14], 0x14ac8
0x4494:     89 04 24                           	mov dword ptr [esp], eax
0x4497:     e8 fc ff ff ff                     	call 0x4498
0x449c:     89 1c 24                           	mov dword ptr [esp], ebx
0x449f:     e8 7c 41 00 00                     	call 0x8620 <function_8620>
0x44a4:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x44a8:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x44af:     75 0d                              	jne 0x44be <function_44be>
0x44b1:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x44b5:     83 c4 28                           	add esp, 0x28
0x44b8:     5b                                 	pop ebx
; data inside code section at 0x44b9 -- 0x44ba
0x44b9:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x44ba -- 0x44bb
; data inside code section at 0x44bb -- 0x44be
0x44bb:     ff ff ff                                           |...             |
; function: function_44be at 0x44be -- 0x44bf
; dynamically linked function: __stack_chk_fail at 0x44bf -- 0x44c0
; data inside code section at 0x44c0 -- 0x44c3
0x44c0:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x44d0 -- 0x44d7
0x44d0:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x44d5:     eb 19                              	jmp 0x44f0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x44d7 -- 0x44e0
0x44d7:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x44e0 -- 0x44e7
0x44e0:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x44e5:     eb 09                              	jmp 0x44f0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x44e7 -- 0x44f0
0x44e7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x44f0 -- 0x451e
0x44f0:     53                                 	push ebx
0x44f1:     83 ec 28                           	sub esp, 0x28
0x44f4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x44f8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x44fe:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4502:     31 c0                              	xor eax, eax
0x4504:     c7 43 18 a0 47 01 00               	mov dword ptr [ebx + 0x18], 0x147a0
0x450b:     8d 43 14                           	lea eax, [ebx + 0x14]
0x450e:     c7 03 b8 4a 01 00                  	mov dword ptr [ebx], 0x14ab8
0x4514:     c7 43 14 c8 4a 01 00               	mov dword ptr [ebx + 0x14], 0x14ac8
0x451b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x451e -- 0x451f
0x451e:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x451f -- 0x4520
; data inside code section at 0x4520 -- 0x4541
0x4520:     ff ff ff 89 1c 24 e8 65  41 00 00 8b 44 24 1c 65   |.....$.eA...D$.e|
0x4530:     33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x4540:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x4541 -- 0x4542
; data inside code section at 0x4542 -- 0x4546
0x4542:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4546 -- 0x4547
; data inside code section at 0x4547 -- 0x454a
0x4547:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4550 -- 0x455a
0x4550:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4555:     e9 66 45 00 00                     	jmp 0x8ac0 <function_8ac0>
; data inside code section at 0x455a -- 0x4560
0x455a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4560 -- 0x456a
0x4560:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4565:     e9 56 45 00 00                     	jmp 0x8ac0 <function_8ac0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0x4570 -- 0x45be
0x4570:     53                                 	push ebx
0x4571:     83 ec 28                           	sub esp, 0x28
0x4574:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4578:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x457e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4582:     31 c0                              	xor eax, eax
0x4584:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x458b:     8d 43 08                           	lea eax, [ebx + 8]
0x458e:     c7 03 78 48 01 00                  	mov dword ptr [ebx], 0x14878
0x4594:     c7 43 08 8c 48 01 00               	mov dword ptr [ebx + 8], 0x1488c
0x459b:     89 04 24                           	mov dword ptr [esp], eax
0x459e:     e8 8d 41 00 00                     	call 0x8730 <function_8730>
0x45a3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x45a7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x45ae:     c7 03 48 48 01 00                  	mov dword ptr [ebx], 0x14848
0x45b4:     75 0d                              	jne 0x45c3 <function_45c3>
0x45b6:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x45ba:     83 c4 28                           	add esp, 0x28
0x45bd:     5b                                 	pop ebx
; data inside code section at 0x45be -- 0x45bf
0x45be:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x45bf -- 0x45c0
; data inside code section at 0x45c0 -- 0x45c3
0x45c0:     ff ff ff                                           |...             |
; function: function_45c3 at 0x45c3 -- 0x45c4
; dynamically linked function: __stack_chk_fail at 0x45c4 -- 0x45c5
; data inside code section at 0x45c5 -- 0x45c8
0x45c5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0x45d0 -- 0x45d7
0x45d0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x45d5:     eb 09                              	jmp 0x45e0 <_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev>
; data inside code section at 0x45d7 -- 0x45e0
0x45d7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0x45e0 -- 0x4615
0x45e0:     53                                 	push ebx
0x45e1:     83 ec 28                           	sub esp, 0x28
0x45e4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x45e8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x45ee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x45f2:     31 c0                              	xor eax, eax
0x45f4:     c7 03 78 48 01 00                  	mov dword ptr [ebx], 0x14878
0x45fa:     8d 43 08                           	lea eax, [ebx + 8]
0x45fd:     c7 43 08 8c 48 01 00               	mov dword ptr [ebx + 8], 0x1488c
0x4604:     89 04 24                           	mov dword ptr [esp], eax
0x4607:     e8 84 41 00 00                     	call 0x8790 <function_8790>
0x460c:     c7 03 48 48 01 00                  	mov dword ptr [ebx], 0x14848
0x4612:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4615 -- 0x4616
0x4615:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x4616 -- 0x4617
; data inside code section at 0x4617 -- 0x4630
0x4617:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x4627:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4630 -- 0x4631
; data inside code section at 0x4631 -- 0x4635
0x4631:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4635 -- 0x4636
; data inside code section at 0x4636 -- 0x4639
0x4636:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x4640 -- 0x4647
0x4640:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4645:     eb 19                              	jmp 0x4660 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0x4647 -- 0x4650
0x4647:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x4650 -- 0x4657
0x4650:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4655:     eb 09                              	jmp 0x4660 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0x4657 -- 0x4660
0x4657:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0x4660 -- 0x469c
0x4660:     53                                 	push ebx
0x4661:     83 ec 28                           	sub esp, 0x28
0x4664:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4668:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x466e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4672:     31 c0                              	xor eax, eax
0x4674:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x467b:     8d 43 08                           	lea eax, [ebx + 8]
0x467e:     c7 03 78 48 01 00                  	mov dword ptr [ebx], 0x14878
0x4684:     c7 43 08 8c 48 01 00               	mov dword ptr [ebx + 8], 0x1488c
0x468b:     89 04 24                           	mov dword ptr [esp], eax
0x468e:     e8 6d 41 00 00                     	call 0x8800 <function_8800>
0x4693:     c7 03 48 48 01 00                  	mov dword ptr [ebx], 0x14848
0x4699:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x469c -- 0x469d
0x469c:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x469d -- 0x469e
; data inside code section at 0x469e -- 0x46b7
0x469e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x46ae:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x46b7 -- 0x46b8
; data inside code section at 0x46b8 -- 0x46bc
0x46b8:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x46bc -- 0x46bd
; data inside code section at 0x46bd -- 0x46c0
0x46bd:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x46c0 -- 0x46c7
0x46c0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x46c5:     eb 19                              	jmp 0x46e0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x46c7 -- 0x46d0
0x46c7:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x46d0 -- 0x46d7
0x46d0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x46d5:     eb 09                              	jmp 0x46e0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x46d7 -- 0x46e0
0x46d7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x46e0 -- 0x471c
0x46e0:     53                                 	push ebx
0x46e1:     83 ec 28                           	sub esp, 0x28
0x46e4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x46e8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x46ee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x46f2:     31 c0                              	xor eax, eax
0x46f4:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x46fb:     8d 43 08                           	lea eax, [ebx + 8]
0x46fe:     c7 03 d8 49 01 00                  	mov dword ptr [ebx], 0x149d8
0x4704:     c7 43 08 ec 49 01 00               	mov dword ptr [ebx + 8], 0x149ec
0x470b:     89 04 24                           	mov dword ptr [esp], eax
0x470e:     e8 6d 41 00 00                     	call 0x8880 <function_8880>
0x4713:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x4719:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x471c -- 0x471d
0x471c:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x471d -- 0x471e
; data inside code section at 0x471e -- 0x4737
0x471e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x472e:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4737 -- 0x4738
; data inside code section at 0x4738 -- 0x473c
0x4738:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x473c -- 0x473d
; data inside code section at 0x473d -- 0x4740
0x473d:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x4740 -- 0x474a
0x4740:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4745:     e9 56 47 00 00                     	jmp 0x8ea0 <function_8ea0>
; data inside code section at 0x474a -- 0x4750
0x474a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x4750 -- 0x475a
0x4750:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4755:     e9 46 47 00 00                     	jmp 0x8ea0 <function_8ea0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x4760 -- 0x47ae
0x4760:     53                                 	push ebx
0x4761:     83 ec 28                           	sub esp, 0x28
0x4764:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4768:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x476e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4772:     31 c0                              	xor eax, eax
0x4774:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x477b:     8d 43 08                           	lea eax, [ebx + 8]
0x477e:     c7 03 d8 49 01 00                  	mov dword ptr [ebx], 0x149d8
0x4784:     c7 43 08 ec 49 01 00               	mov dword ptr [ebx + 8], 0x149ec
0x478b:     89 04 24                           	mov dword ptr [esp], eax
0x478e:     e8 8d 41 00 00                     	call 0x8920 <function_8920>
0x4793:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4797:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x479e:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x47a4:     75 0d                              	jne 0x47b3 <function_47b3>
0x47a6:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x47aa:     83 c4 28                           	add esp, 0x28
0x47ad:     5b                                 	pop ebx
; data inside code section at 0x47ae -- 0x47af
0x47ae:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x47af -- 0x47b0
; data inside code section at 0x47b0 -- 0x47b3
0x47b0:     ff ff ff                                           |...             |
; function: function_47b3 at 0x47b3 -- 0x47b4
; dynamically linked function: __stack_chk_fail at 0x47b4 -- 0x47b5
; data inside code section at 0x47b5 -- 0x47b8
0x47b5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x47c0 -- 0x47c7
0x47c0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x47c5:     eb 09                              	jmp 0x47d0 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev>
; data inside code section at 0x47c7 -- 0x47d0
0x47c7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x47d0 -- 0x4805
0x47d0:     53                                 	push ebx
0x47d1:     83 ec 28                           	sub esp, 0x28
0x47d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x47d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x47de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x47e2:     31 c0                              	xor eax, eax
0x47e4:     c7 03 d8 49 01 00                  	mov dword ptr [ebx], 0x149d8
0x47ea:     8d 43 08                           	lea eax, [ebx + 8]
0x47ed:     c7 43 08 ec 49 01 00               	mov dword ptr [ebx + 8], 0x149ec
0x47f4:     89 04 24                           	mov dword ptr [esp], eax
0x47f7:     e8 84 41 00 00                     	call 0x8980 <function_8980>
0x47fc:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x4802:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4805 -- 0x4806
0x4805:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x4806 -- 0x4807
; data inside code section at 0x4807 -- 0x4820
0x4807:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x4817:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4820 -- 0x4821
; data inside code section at 0x4821 -- 0x4825
0x4821:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4825 -- 0x4826
; data inside code section at 0x4826 -- 0x4829
0x4826:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4830 -- 0x4837
0x4830:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x4835:     eb 19                              	jmp 0x4850 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x4837 -- 0x4840
0x4837:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4840 -- 0x4847
0x4840:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4845:     eb 09                              	jmp 0x4850 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x4847 -- 0x4850
0x4847:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x4850 -- 0x488c
0x4850:     53                                 	push ebx
0x4851:     83 ec 28                           	sub esp, 0x28
0x4854:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4858:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x485e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4862:     31 c0                              	xor eax, eax
0x4864:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x486b:     8d 43 08                           	lea eax, [ebx + 8]
0x486e:     c7 03 78 47 01 00                  	mov dword ptr [ebx], 0x14778
0x4874:     c7 43 08 8c 47 01 00               	mov dword ptr [ebx + 8], 0x1478c
0x487b:     89 04 24                           	mov dword ptr [esp], eax
0x487e:     e8 6d 41 00 00                     	call 0x89f0 <function_89f0>
0x4883:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x4889:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x488c -- 0x488d
0x488c:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x488d -- 0x488e
; data inside code section at 0x488e -- 0x48a7
0x488e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x489e:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x48a7 -- 0x48a8
; data inside code section at 0x48a8 -- 0x48ac
0x48a8:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x48ac -- 0x48ad
; data inside code section at 0x48ad -- 0x48b0
0x48ad:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x48b0 -- 0x48ba
0x48b0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x48b5:     e9 c6 48 00 00                     	jmp 0x9180 <function_9180>
; data inside code section at 0x48ba -- 0x48c0
0x48ba:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x48c0 -- 0x48ca
0x48c0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x48c5:     e9 b6 48 00 00                     	jmp 0x9180 <function_9180>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x48d0 -- 0x491e
0x48d0:     53                                 	push ebx
0x48d1:     83 ec 28                           	sub esp, 0x28
0x48d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x48d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x48de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x48e2:     31 c0                              	xor eax, eax
0x48e4:     c7 43 1c a0 47 01 00               	mov dword ptr [ebx + 0x1c], 0x147a0
0x48eb:     8d 43 08                           	lea eax, [ebx + 8]
0x48ee:     c7 03 78 47 01 00                  	mov dword ptr [ebx], 0x14778
0x48f4:     c7 43 08 8c 47 01 00               	mov dword ptr [ebx + 8], 0x1478c
0x48fb:     89 04 24                           	mov dword ptr [esp], eax
0x48fe:     e8 8d 41 00 00                     	call 0x8a90 <function_8a90>
0x4903:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4907:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x490e:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x4914:     75 0d                              	jne 0x4923 <function_4923>
0x4916:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x491a:     83 c4 28                           	add esp, 0x28
0x491d:     5b                                 	pop ebx
; data inside code section at 0x491e -- 0x491f
0x491e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x491f -- 0x4920
; data inside code section at 0x4920 -- 0x4923
0x4920:     ff ff ff                                           |...             |
; function: function_4923 at 0x4923 -- 0x4924
; dynamically linked function: __stack_chk_fail at 0x4924 -- 0x4925
; data inside code section at 0x4925 -- 0x4928
0x4925:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x4930 -- 0x4937
0x4930:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x4935:     eb 09                              	jmp 0x4940 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev>
; data inside code section at 0x4937 -- 0x4940
0x4937:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x4940 -- 0x4975
0x4940:     53                                 	push ebx
0x4941:     83 ec 28                           	sub esp, 0x28
0x4944:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x4948:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x494e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4952:     31 c0                              	xor eax, eax
0x4954:     c7 03 78 47 01 00                  	mov dword ptr [ebx], 0x14778
0x495a:     8d 43 08                           	lea eax, [ebx + 8]
0x495d:     c7 43 08 8c 47 01 00               	mov dword ptr [ebx + 8], 0x1478c
0x4964:     89 04 24                           	mov dword ptr [esp], eax
0x4967:     e8 84 41 00 00                     	call 0x8af0 <_ZZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEvE19__PRETTY_FUNCTION__> ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x496c:     c7 03 38 47 01 00                  	mov dword ptr [ebx], 0x14738
0x4972:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4975 -- 0x4976
0x4975:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x4976 -- 0x4977
; data inside code section at 0x4977 -- 0x4990
0x4977:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x4987:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x4990 -- 0x4991
; data inside code section at 0x4991 -- 0x4995
0x4991:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x4995 -- 0x4996
; data inside code section at 0x4996 -- 0x4999
0x4996:     ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x49a0 -- 0x49d1
0x49a0:     53                                 	push ebx
0x49a1:     83 ec 28                           	sub esp, 0x28
0x49a4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x49a8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x49ae:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x49b2:     31 c0                              	xor eax, eax
0x49b4:     89 1c 24                           	mov dword ptr [esp], ebx
0x49b7:     e8 a4 41 00 00                     	call 0x8b60 <function_8b60>
0x49bc:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x49c0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x49c7:     75 0d                              	jne 0x49d6 <function_49d6>
0x49c9:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x49cd:     83 c4 28                           	add esp, 0x28
0x49d0:     5b                                 	pop ebx
; data inside code section at 0x49d1 -- 0x49d2
0x49d1:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x49d2 -- 0x49d3
; data inside code section at 0x49d3 -- 0x49d6
0x49d3:     ff ff ff                                           |...             |
; function: function_49d6 at 0x49d6 -- 0x49d7
; dynamically linked function: __stack_chk_fail at 0x49d7 -- 0x49d8
; data inside code section at 0x49d8 -- 0x49db
0x49d8:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail12shared_countD2Ev
; function: _ZN5boost6detail12shared_countD1Ev at 0x49e0 -- 0x4a65
0x49e0:     83 ec 2c                           	sub esp, 0x2c
0x49e3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x49e9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x49ed:     31 c0                              	xor eax, eax
0x49ef:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x49f3:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x49f7:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x49fb:     8b 18                              	mov ebx, dword ptr [eax]
0x49fd:     85 db                              	test ebx, ebx
0x49ff:     74 11                              	je 0x4a12 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x4a01:     be ff ff ff ff                     	mov esi, 0xffffffff
0x4a06:     89 f0                              	mov eax, esi
0x4a08:     f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x4a0d:     83 f8 01                           	cmp eax, 1
0x4a10:     74 1e                              	je 0x4a30 <_ZN5boost6detail12shared_countD1Ev+0x50>
0x4a12:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4a16:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4a1d:     75 46                              	jne 0x4a65 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x4a1f:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x4a23:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x4a27:     83 c4 2c                           	add esp, 0x2c
0x4a2a:     c3                                 	ret 
; data inside code section at 0x4a2b -- 0x4a30
0x4a2b:     90 8d 74 26 00                                     |..t&.           |
0x4a30:     8b 03                              	mov eax, dword ptr [ebx]
0x4a32:     89 1c 24                           	mov dword ptr [esp], ebx
0x4a35:     ff 50 08                           	call dword ptr [eax + 8]
0x4a38:     f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x4a3d:     83 fe 01                           	cmp esi, 1
0x4a40:     75 d0                              	jne 0x4a12 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x4a42:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4a46:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4a4d:     75 16                              	jne 0x4a65 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x4a4f:     8b 03                              	mov eax, dword ptr [ebx]
0x4a51:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x4a55:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x4a59:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x4a5d:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x4a60:     83 c4 2c                           	add esp, 0x2c
0x4a63:     ff e0                              	jmp eax
; data inside code section at 0x4a65 -- 0x4a66
0x4a65:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4a66 -- 0x4a67
; data inside code section at 0x4a67 -- 0x4a6a
0x4a67:     ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x4a70 -- 0x4aa0
0x4a70:     83 ec 1c                           	sub esp, 0x1c
0x4a73:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x4a7a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x4a7e:     31 d2                              	xor edx, edx
0x4a80:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x4a84:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x4a88:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4a8f:     75 0f                              	jne 0x4aa0 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x2b>
0x4a91:     83 c0 04                           	add eax, 4
0x4a94:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x4a98:     83 c4 1c                           	add esp, 0x1c
0x4a9b:     e9 b0 49 00 00                     	jmp 0x9450
; data inside code section at 0x4aa0 -- 0x4aa1
0x4aa0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4aa1 -- 0x4aa2
; data inside code section at 0x4aa2 -- 0x4aa5
0x4aa2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x4ab0 -- 0x4af6
0x4ab0:     53                                 	push ebx
0x4ab1:     83 ec 38                           	sub esp, 0x38
0x4ab4:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4aba:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4abe:     31 c0                              	xor eax, eax
0x4ac0:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x4ac4:     8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x4ac7:     85 db                              	test ebx, ebx
0x4ac9:     74 35                              	je 0x4b00 <function_4b00>
0x4acb:     8d 43 0c                           	lea eax, [ebx + 0xc]
0x4ace:     89 04 24                           	mov dword ptr [esp], eax
0x4ad1:     e8 ba 49 00 00                     	call 0x9490 <function_9490>
0x4ad6:     8d 43 04                           	lea eax, [ebx + 4]
0x4ad9:     89 04 24                           	mov dword ptr [esp], eax
0x4adc:     e8 af 49 00 00                     	call 0x9490 <function_9490>
0x4ae1:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4ae5:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4aec:     75 24                              	jne 0x4b12 <function_4b12>
0x4aee:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x4af2:     83 c4 38                           	add esp, 0x38
0x4af5:     5b                                 	pop ebx
; data inside code section at 0x4af6 -- 0x4af7
0x4af6:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x4af7 -- 0x4af8
; data inside code section at 0x4af8 -- 0x4b00
0x4af8:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_4b00 at 0x4b00 -- 0x4b12
0x4b00:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4b04:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4b0b:     75 05                              	jne 0x4b12 <function_4b12>
0x4b0d:     83 c4 38                           	add esp, 0x38
0x4b10:     5b                                 	pop ebx
0x4b11:     c3                                 	ret 
; function: function_4b12 at 0x4b12 -- 0x4b13
; dynamically linked function: __stack_chk_fail at 0x4b13 -- 0x4b14
; data inside code section at 0x4b14 -- 0x4b18
0x4b14:     ff ff ff 83                                        |....            |
; function: function_4b18 at 0x4b18 -- 0x4b19
0x4b18:     c3                                 	ret 
; data inside code section at 0x4b19 -- 0x4b2e
0x4b19:     04 89 44 24 1c 89 1c 24  e8 6a 49 00 00 8b 44 24   |..D$...$.jI...D$|
0x4b29:     1c 89 04 24 e8                                     |...$.           |
; dynamically linked function: _Unwind_Resume at 0x4b2e -- 0x4b2f
; data inside code section at 0x4b2f -- 0x4b32
0x4b2f:     ff ff ff                                           |...             |
; section: .text._ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev at 0x8ba0 -- 0x8bd5
0x8ba0:     53                                 	push ebx
0x8ba1:     83 ec 28                           	sub esp, 0x28
0x8ba4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8ba8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8bae:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8bb2:     31 c0                              	xor eax, eax
0x8bb4:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x8bb8:     75 16                              	jne 0x8bd0 <_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev+0x30>
0x8bba:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8bbe:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8bc5:     75 1d                              	jne 0x8be4 <function_8be4>
0x8bc7:     83 c4 28                           	add esp, 0x28
0x8bca:     5b                                 	pop ebx
0x8bcb:     c3                                 	ret 
; data inside code section at 0x8bcc -- 0x8bd0
0x8bcc:     8d 74 26 00                                        |.t&.            |
0x8bd0:     8b 03                              	mov eax, dword ptr [ebx]
0x8bd2:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8bd5 -- 0x8bd6
0x8bd5:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x8bd6 -- 0x8bd7
; data inside code section at 0x8bd7 -- 0x8bd9
0x8bd7:     ff ff                                              |..              |
; function: function_8bd9 at 0x8bd9 -- 0x8be4
0x8bd9:     ff 85 c0 75 0b c6                  	inc dword ptr [ebp - 0x39f48a40]
0x8bdf:     43                                 	inc ebx
0x8be0:     04 00                              	add al, 0
0x8be2:     eb d6                              	jmp 0x8bba
; function: function_8be4 at 0x8be4 -- 0x8be5
; dynamically linked function: __stack_chk_fail at 0x8be5 -- 0x8be6
; data inside code section at 0x8be6 -- 0x8bee
0x8be6:     ff ff ff e8 80 38 00 00                            |.....8..        |
; section: .text._ZN5boost5mutexD2Ev
; function: _ZN5boost5mutexD1Ev at 0x8bf0 -- 0x8c06
0x8bf0:     83 ec 2c                           	sub esp, 0x2c
0x8bf3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8bf9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8bfd:     31 c0                              	xor eax, eax
0x8bff:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x8c03:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8c06 -- 0x8c07
0x8c06:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x8c07 -- 0x8c08
; data inside code section at 0x8c08 -- 0x8c0a
0x8c08:     ff ff                                              |..              |
; function: function_8c0a at 0x8c0a -- 0x8c21
0x8c0a:     ff 85 c0 75 12 8b                  	inc dword ptr [ebp - 0x74ed8a40]
0x8c10:     44                                 	inc esp
0x8c11:     24 1c                              	and al, 0x1c
0x8c13:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8c1a:     75 29                              	jne 0x8c45 <function_8c45>
0x8c1c:     83 c4 2c                           	add esp, 0x2c
0x8c1f:     90                                 	nop 
0x8c20:     c3                                 	ret 
; data inside code section at 0x8c21 -- 0x8c41
0x8c21:     c7 44 24 0c 41 8a 00 00  c7 44 24 08 2f 00 00 00   |.D$.A....D$./...|
0x8c31:     c7 44 24 04 c4 33 00 00  c7 04 24 bd 1f 00 00 e8   |.D$..3....$.....|
; dynamically linked function: __assert_fail at 0x8c41 -- 0x8c42
; data inside code section at 0x8c42 -- 0x8c45
0x8c42:     ff ff ff                                           |...             |
; function: function_8c45 at 0x8c45 -- 0x8c46
; dynamically linked function: __stack_chk_fail at 0x8c46 -- 0x8c47
; data inside code section at 0x8c47 -- 0x8c4a
0x8c47:     ff ff ff                                           |...             |
; section: .text._ZN5boost18condition_variableD2Ev
; function: _ZN5boost18condition_variableD1Ev at 0x8c50 -- 0x8c67
0x8c50:     53                                 	push ebx
0x8c51:     83 ec 28                           	sub esp, 0x28
0x8c54:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8c58:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8c5e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8c62:     31 c0                              	xor eax, eax
0x8c64:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x8c67 -- 0x8c68
0x8c67:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x8c68 -- 0x8c69
; data inside code section at 0x8c69 -- 0x8c6b
0x8c69:     ff ff                                              |..              |
; function: function_8c6b at 0x8c6b -- 0x8c72
0x8c6b:     ff 85 c0 75 21 83                  	inc dword ptr [ebp - 0x7cde8a40]
0x8c71:     c3                                 	ret 
; data inside code section at 0x8c72 -- 0x8c77
0x8c72:     18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x8c77 -- 0x8c78
; data inside code section at 0x8c78 -- 0x8c7a
0x8c78:     ff ff                                              |..              |
; function: function_8c7a at 0x8c7a -- 0x8c91
0x8c7a:     ff 85 c0 75 3b 8b                  	inc dword ptr [ebp - 0x74c48a40]
0x8c80:     44                                 	inc esp
0x8c81:     24 1c                              	and al, 0x1c
0x8c83:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8c8a:     75 29                              	jne 0x8cb5 <function_8cb5>
0x8c8c:     83 c4 28                           	add esp, 0x28
0x8c8f:     5b                                 	pop ebx
0x8c90:     c3                                 	ret 
; data inside code section at 0x8c91 -- 0x8cb1
0x8c91:     c7 44 24 0c 10 8a 00 00  c7 44 24 08 2e 00 00 00   |.D$......D$.....|
0x8ca1:     c7 44 24 04 f0 33 00 00  c7 04 24 30 34 00 00 e8   |.D$..3....$04...|
; dynamically linked function: __assert_fail at 0x8cb1 -- 0x8cb2
; data inside code section at 0x8cb2 -- 0x8cb5
0x8cb2:     ff ff ff                                           |...             |
; function: function_8cb5 at 0x8cb5 -- 0x8cb6
; dynamically linked function: __stack_chk_fail at 0x8cb6 -- 0x8cb7
; data inside code section at 0x8cb7 -- 0x8cda
0x8cb7:     ff ff ff c7 44 24 0c 10  8a 00 00 c7 44 24 08 2f   |....D$......D$./|
0x8cc7:     00 00 00 c7 44 24 04 f0  33 00 00 c7 04 24 d8 1f   |....D$..3....$..|
0x8cd7:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x8cda -- 0x8cdb
; data inside code section at 0x8cdb -- 0x8cde
0x8cdb:     ff ff ff                                           |...             |
; section: .text._ZN11CDataStream4readEPci
; function: _ZN11CDataStream4readEPci at 0x8ce0 -- 0x8d55
0x8ce0:     83 ec 4c                           	sub esp, 0x4c
0x8ce3:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x8ce7:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8ced:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x8cf1:     31 c0                              	xor eax, eax
0x8cf3:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x8cf7:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x8cfb:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x8cff:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x8d03:     85 d2                              	test edx, edx
0x8d05:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x8d09:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x8d0d:     0f 88 b5 00 00 00                  	js 0x8dc8 <function_8dc8>
0x8d13:     8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x8d16:     89 d0                              	mov eax, edx
0x8d18:     8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x8d1b:     8d 3c 0a                           	lea edi, [edx + ecx]
0x8d1e:     89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0x8d22:     8b 3b                              	mov edi, dword ptr [ebx]
0x8d24:     29 fd                              	sub ebp, edi
0x8d26:     39 6c 24 1c                        	cmp dword ptr [esp + 0x1c], ebp
0x8d2a:     72 7c                              	jb 0x8da8 <function_8da8>
0x8d2c:     76 38                              	jbe 0x8d66 <function_8d66>
0x8d2e:     0f b7 53 10                        	movzx edx, word ptr [ebx + 0x10]
0x8d32:     0f b7 4b 12                        	movzx ecx, word ptr [ebx + 0x12]
0x8d36:     83 ca 04                           	or edx, 4
0x8d39:     66 85 ca                           	test dx, cx
0x8d3c:     66 89 53 10                        	mov word ptr [ebx + 0x10], dx
0x8d40:     0f 85 a6 00 00 00                  	jne 0x8dec <function_8dec>
0x8d46:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x8d4a:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x8d52:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x8d55 -- 0x8d56
0x8d55:     e8                                                 |.               |
; dynamically linked function: memset at 0x8d56 -- 0x8d57
; data inside code section at 0x8d57 -- 0x8d66
0x8d57:     ff ff ff 8b 3b 8b 43 04  8b 4b 0c 29 f8 29 c8      |....;.C..K.).). |
; function: function_8d66 at 0x8d66 -- 0x8d73
0x8d66:     01 f9                              	add ecx, edi
0x8d68:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x8d6c:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x8d70:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x8d73 -- 0x8d74
0x8d73:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x8d74 -- 0x8d75
; data inside code section at 0x8d75 -- 0x8d77
0x8d75:     ff ff                                              |..              |
; function: function_8d77 at 0x8d77 -- 0x8da7
0x8d77:     ff 8b 03 c7 43 0c                  	dec dword ptr [ebx + 0xc43c703]
0x8d7d:     00 00                              	add byte ptr [eax], al
0x8d7f:     00 00                              	add byte ptr [eax], al
0x8d81:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x8d84:     8b 7c 24 2c                        	mov edi, dword ptr [esp + 0x2c]
0x8d88:     65 33 3d 14 00 00 00               	xor edi, dword ptr gs:[0x14]
0x8d8f:     89 d8                              	mov eax, ebx
0x8d91:     75 30                              	jne 0x8dc3 <function_8dc3>
0x8d93:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x8d97:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x8d9b:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x8d9f:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x8da3:     83 c4 4c                           	add esp, 0x4c
0x8da6:     c3                                 	ret 
; data inside code section at 0x8da7 -- 0x8da8
0x8da7:     90                                                 |.               |
; function: function_8da8 at 0x8da8 -- 0x8db5
0x8da8:     01 f9                              	add ecx, edi
0x8daa:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x8dae:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x8db2:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x8db5 -- 0x8db6
0x8db5:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x8db6 -- 0x8db7
; data inside code section at 0x8db7 -- 0x8dba
0x8db7:     ff ff ff                                           |...             |
; function: function_8dba at 0x8dba -- 0x8dc3
0x8dba:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8dbe:     89 53 0c                           	mov dword ptr [ebx + 0xc], edx
0x8dc1:     eb c1                              	jmp 0x8d84
; function: function_8dc3 at 0x8dc3 -- 0x8dc4
; dynamically linked function: __stack_chk_fail at 0x8dc4 -- 0x8dc5
; data inside code section at 0x8dc5 -- 0x8dc8
0x8dc5:     ff ff ff                                           |...             |
; function: function_8dc8 at 0x8dc8 -- 0x8de7
0x8dc8:     c7 44 24 0c 70 4d 00 00            	mov dword ptr [esp + 0xc], 0x4d70 ; "CDataStream& CDataStream::read(char*, int)"
0x8dd0:     c7 44 24 08 f0 03 00 00            	mov dword ptr [esp + 8], 0x3f0
0x8dd8:     c7 44 24 04 73 1f 00 00            	mov dword ptr [esp + 4], 0x1f73 ; "serialize.h"
0x8de0:     c7 04 24 7f 1f 00 00               	mov dword ptr [esp], 0x1f7f ; "nSize >= 0"
; data inside code section at 0x8de7 -- 0x8de8
0x8de7:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8de8 -- 0x8de9
; data inside code section at 0x8de9 -- 0x8dec
0x8de9:     ff ff ff                                           |...             |
; function: function_8dec at 0x8dec -- 0x8df7
0x8dec:     c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
0x8df3:     8d 5c 24 24                        	lea ebx, [esp + 0x24]
; data inside code section at 0x8df7 -- 0x8df8
0x8df7:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x8df8 -- 0x8df9
; data inside code section at 0x8df9 -- 0x8e12
0x8df9:     ff ff ff c7 44 24 04 58  34 00 00 89 1c 24 89 c6   |....D$.X4....$..|
0x8e09:     8d 44 24 2b 89 44 24 08  e8                        |.D$+.D$..       |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x8e12 -- 0x8e13
; data inside code section at 0x8e13 -- 0x8e1e
0x8e13:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x8e1e -- 0x8e1f
; data inside code section at 0x8e1f -- 0x8e26
0x8e1f:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x8e26 -- 0x8e27
; data inside code section at 0x8e27 -- 0x8e2e
0x8e27:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x8e2e -- 0x8e32
; data inside code section at 0x8e32 -- 0x8e36
0x8e32:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x8e36 -- 0x8e3d
; data inside code section at 0x8e3d -- 0x8e3e
0x8e3d:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x8e3e -- 0x8e3f
; data inside code section at 0x8e3f -- 0x8e43
0x8e3f:     ff ff ff 89                                        |....            |
; function: function_8e43 at 0x8e43 -- 0x8e44
0x8e43:     c3                                 	ret 
; data inside code section at 0x8e44 -- 0x8e48
0x8e44:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: __cxa_free_exception at 0x8e48 -- 0x8e49
; data inside code section at 0x8e49 -- 0x8e50
0x8e49:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x8e50 -- 0x8e51
; data inside code section at 0x8e51 -- 0x8e54
0x8e51:     ff ff ff                                           |...             |
; section: .text._ZN5CNode12AbortMessageEv
; function: _ZN5CNode12AbortMessageEv at 0x8e60 -- 0x8e88
0x8e60:     56                                 	push esi
0x8e61:     53                                 	push ebx
0x8e62:     83 ec 24                           	sub esp, 0x24
0x8e65:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8e69:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8e6f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8e73:     31 c0                              	xor eax, eax
0x8e75:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x8e78:     8d 73 60                           	lea esi, [ebx + 0x60]
0x8e7b:     c7 43 18 00 00 00 00               	mov dword ptr [ebx + 0x18], 0
0x8e82:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x8e85:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x8e88 -- 0x8e89
0x8e88:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x8e89 -- 0x8e8a
; data inside code section at 0x8e8a -- 0x8ea0
0x8e8a:     ff ff ff 85 c0 75 7e 8b  83 b0 00 00 00 83 e8 01   |.....u~.........|
0x8e9a:     85 c0 89 83 b0 00                                  |......          |
; function: function_8ea0 at 0x8ea0 -- 0x8eaa
0x8ea0:     00 00                              	add byte ptr [eax], al
0x8ea2:     74 3c                              	je 0x8ee0 <function_8ee0>
0x8ea4:     83 c3 78                           	add ebx, 0x78
0x8ea7:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x8eaa -- 0x8eab
0x8eaa:     e8                                                 |.               |
; dynamically linked function: pthread_cond_signal at 0x8eab -- 0x8eac
; data inside code section at 0x8eac -- 0x8eb7
0x8eac:     ff ff ff 85 c0 75 66 89  34 24 e8                  |.....uf.4$.     |
; dynamically linked function: pthread_mutex_unlock at 0x8eb7 -- 0x8eb8
; data inside code section at 0x8eb8 -- 0x8ec1
0x8eb8:     ff ff ff 85 c0 75 5f 80  3d                        |.....u_.=       |
; dynamically linked function: fDebug at 0x8ec1 -- 0x8edb
; data inside code section at 0x8edb -- 0x8ee0
0x8edb:     90 8d 74 26 00                                     |..t&.           |
; function: function_8ee0 at 0x8ee0 -- 0x8ee9
0x8ee0:     c6 83 a8 00 00 00 00               	mov byte ptr [ebx + 0xa8], 0
0x8ee7:     eb bb                              	jmp 0x8ea4
; data inside code section at 0x8ee9 -- 0x8f0b
0x8ee9:     8d b4 26 00 00 00 00 8b  44 24 1c 65 33 05 14 00   |..&.....D$.e3...|
0x8ef9:     00 00 75 17 c7 44 24 30  fb 1f 00 00 83 c4 24 5b   |..u..D$0......$[|
0x8f09:     5e e9                                              |^.              |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x8f0b -- 0x8f0c
; data inside code section at 0x8f0c -- 0x8f14
0x8f0c:     ff ff ff e8 e6 37 00 00                            |.....7..        |
; function: function_8f14 at 0x8f14 -- 0x8f15
; dynamically linked function: __stack_chk_fail at 0x8f15 -- 0x8f16
; data inside code section at 0x8f16 -- 0x8f25
0x8f16:     ff ff ff e8 44 38 00 00  66 90 e8 09 38 00 00      |....D8..f...8.. |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x8f30 -- 0x8f70
0x8f30:     53                                 	push ebx
0x8f31:     83 ec 28                           	sub esp, 0x28
0x8f34:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x8f38:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8f3e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8f42:     31 c0                              	xor eax, eax
0x8f44:     8b 03                              	mov eax, dword ptr [ebx]
0x8f46:     85 c0                              	test eax, eax
0x8f48:     74 0c                              	je 0x8f56 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x8f4a:     8b 10                              	mov edx, dword ptr [eax]
0x8f4c:     89 04 24                           	mov dword ptr [esp], eax
0x8f4f:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8f52:     84 c0                              	test al, al
0x8f54:     75 12                              	jne 0x8f68 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x8f56:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8f5a:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x8f61:     75 0d                              	jne 0x8f70 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x8f63:     83 c4 28                           	add esp, 0x28
0x8f66:     5b                                 	pop ebx
0x8f67:     c3                                 	ret 
0x8f68:     c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x8f6e:     eb e6                              	jmp 0x8f56 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x8f70 -- 0x8f71
0x8f70:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x8f71 -- 0x8f72
; data inside code section at 0x8f72 -- 0x8f75
0x8f72:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x8f80 -- 0x9084
0x8f80:     83 ec 3c                           	sub esp, 0x3c
0x8f83:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x8f87:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x8f8b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8f91:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x8f95:     31 c0                              	xor eax, eax
0x8f97:     89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x8f9b:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x8f9f:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x8fa3:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x8fa6:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x8faa:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x8fb2:     85 c0                              	test eax, eax
0x8fb4:     0f 84 c6 00 00 00                  	je 0x9080 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x100>
0x8fba:     8b 10                              	mov edx, dword ptr [eax]
0x8fbc:     8d 6c 24 18                        	lea ebp, [esp + 0x18]
0x8fc0:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x8fc4:     89 2c 24                           	mov dword ptr [esp], ebp
0x8fc7:     ff 52 14                           	call dword ptr [edx + 0x14]
0x8fca:     83 ec 04                           	sub esp, 4
0x8fcd:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x8fd1:     8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x8fd5:     85 c0                              	test eax, eax
0x8fd7:     74 08                              	je 0x8fe1 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x61>
0x8fd9:     8b 10                              	mov edx, dword ptr [eax]
0x8fdb:     89 04 24                           	mov dword ptr [esp], eax
0x8fde:     ff 52 10                           	call dword ptr [edx + 0x10]
0x8fe1:     85 ff                              	test edi, edi
0x8fe3:     89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x8fe7:     74 08                              	je 0x8ff1 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x71>
0x8fe9:     8b 07                              	mov eax, dword ptr [edi]
0x8feb:     89 3c 24                           	mov dword ptr [esp], edi
0x8fee:     ff 50 0c                           	call dword ptr [eax + 0xc]
0x8ff1:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x8ff5:     85 c0                              	test eax, eax
0x8ff7:     74 0c                              	je 0x9005 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
0x8ff9:     8b 10                              	mov edx, dword ptr [eax]
0x8ffb:     89 04 24                           	mov dword ptr [esp], eax
0x8ffe:     ff 52 10                           	call dword ptr [edx + 0x10]
0x9001:     84 c0                              	test al, al
0x9003:     75 6b                              	jne 0x9070 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xf0>
0x9005:     8b 7c 24 14                        	mov edi, dword ptr [esp + 0x14]
0x9009:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x900c:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x900f:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x9012:     89 46 10                           	mov dword ptr [esi + 0x10], eax
0x9015:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x9018:     89 46 08                           	mov dword ptr [esi + 8], eax
0x901b:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x901e:     85 c0                              	test eax, eax
0x9020:     74 08                              	je 0x902a <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xaa>
0x9022:     8b 10                              	mov edx, dword ptr [eax]
0x9024:     89 04 24                           	mov dword ptr [esp], eax
0x9027:     ff 52 10                           	call dword ptr [edx + 0x10]
0x902a:     85 ff                              	test edi, edi
0x902c:     89 7e 04                           	mov dword ptr [esi + 4], edi
0x902f:     74 08                              	je 0x9039 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xb9>
0x9031:     8b 07                              	mov eax, dword ptr [edi]
0x9033:     89 3c 24                           	mov dword ptr [esp], edi
0x9036:     ff 50 0c                           	call dword ptr [eax + 0xc]
0x9039:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x903d:     85 c0                              	test eax, eax
0x903f:     74 08                              	je 0x9049 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xc9>
0x9041:     8b 10                              	mov edx, dword ptr [eax]
0x9043:     89 04 24                           	mov dword ptr [esp], eax
0x9046:     ff 52 10                           	call dword ptr [edx + 0x10]
0x9049:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x904d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9054:     75 2e                              	jne 0x9084 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x102>
0x9056:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x905a:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x905e:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x9062:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x9066:     83 c4 3c                           	add esp, 0x3c
0x9069:     c3                                 	ret 
; data inside code section at 0x906a -- 0x9070
0x906a:     8d b6 00 00 00 00                                  |......          |
0x9070:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x9078:     eb 8b                              	jmp 0x9005 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
; data inside code section at 0x907a -- 0x9080
0x907a:     8d b6 00 00 00 00                                  |......          |
0x9080:     31 ff                              	xor edi, edi
0x9082:     eb 85                              	jmp 0x9009 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x89>
; data inside code section at 0x9084 -- 0x9085
0x9084:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9085 -- 0x9086
; data inside code section at 0x9086 -- 0x908a
0x9086:     ff ff ff 89                                        |....            |
; function: function_908a at 0x908a -- 0x908b
0x908a:     c3                                 	ret 
; data inside code section at 0x908b -- 0x9093
0x908b:     89 2c 24 e8 1d 8e 00 00                            |.,$.....        |
; function: function_9093 at 0x9093 -- 0x9094
; data inside code section at 0x9094 -- 0x90a3
0x9094:     44 24 14 89 04 24 e8 11  8e 00 00 89 1c 24 e8      |D$...$.......$. |
; dynamically linked function: _Unwind_Resume at 0x90a3 -- 0x90a4
; data inside code section at 0x90a4 -- 0x90a7
0x90a4:     ff ff ff                                           |...             |
; function: function_90a7 at 0x90a7 -- 0x90ab
0x90a7:     89 c3                              	mov ebx, eax
0x90a9:     eb e8                              	jmp 0x9093 <function_9093>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_ at 0x90b0 -- 0x9120
0x90b0:     56                                 	push esi
0x90b1:     53                                 	push ebx
0x90b2:     83 ec 24                           	sub esp, 0x24
0x90b5:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x90b9:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x90bd:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x90c3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x90c7:     31 c0                              	xor eax, eax
0x90c9:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x90cc:     c7 03 b0 49 01 00                  	mov dword ptr [ebx], 0x149b0
0x90d2:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x90d9:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x90dc:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x90df:     85 c0                              	test eax, eax
0x90e1:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x90e4:     74 08                              	je 0x90ee <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x3e>
0x90e6:     8b 10                              	mov edx, dword ptr [eax]
0x90e8:     89 04 24                           	mov dword ptr [esp], eax
0x90eb:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x90ee:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x90f1:     c7 43 08 ec 49 01 00               	mov dword ptr [ebx + 8], 0x149ec
0x90f8:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x90fb:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x90fe:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x9101:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x9104:     c7 03 d8 49 01 00                  	mov dword ptr [ebx], 0x149d8
0x910a:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x910d:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9111:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9118:     75 06                              	jne 0x9120 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x6f>
0x911a:     83 c4 24                           	add esp, 0x24
0x911d:     5b                                 	pop ebx
0x911e:     5e                                 	pop esi
0x911f:     c3                                 	ret 
; data inside code section at 0x9120 -- 0x9121
0x9120:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9121 -- 0x9122
; data inside code section at 0x9122 -- 0x9133
0x9122:     ff ff ff 89 c6 89 1c 24  e8 21 3b 00 00 89 34 24   |.......$.!;...4$|
0x9132:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9133 -- 0x9134
; data inside code section at 0x9134 -- 0x9137
0x9134:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x9140 -- 0x9147
0x9140:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x9145:     eb 09                              	jmp 0x9150 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv>
; data inside code section at 0x9147 -- 0x9150
0x9147:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x9150 -- 0x916c
0x9150:     56                                 	push esi
0x9151:     53                                 	push ebx
0x9152:     83 ec 24                           	sub esp, 0x24
0x9155:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x9159:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x915f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9163:     31 c0                              	xor eax, eax
0x9165:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x916c -- 0x916d
0x916c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x916d -- 0x916e
; data inside code section at 0x916e -- 0x9170
0x916e:     ff ff                                              |..              |
; function: function_9170 at 0x9170 -- 0x9177
0x9170:     ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x9176:     c3                                 	ret 
; data inside code section at 0x9177 -- 0x9180
0x9177:     89 04 24 e8 71 90 00 00  c7                        |..$.q....       |
; function: function_9180 at 0x9180 -- 0x91a6
0x9180:     03 18                              	add ebx, dword ptr [eax]
0x9182:     4a                                 	dec edx
0x9183:     01 00                              	add dword ptr [eax], eax
0x9185:     c7 43 08 34 4a 01 00               	mov dword ptr [ebx + 8], 0x14a34
0x918c:     c7 43 1c 44 4a 01 00               	mov dword ptr [ebx + 0x1c], 0x14a44
0x9193:     c7 44 24 08 60 47 00 00            	mov dword ptr [esp + 8], 0x4760
0x919b:     c7 44 24 04 70 4a 01 00            	mov dword ptr [esp + 4], 0x14a70
0x91a3:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x91a6 -- 0x91a7
0x91a6:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x91a7 -- 0x91a8
; data inside code section at 0x91a8 -- 0x91b1
0x91a8:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x91b1 -- 0x91b2
; data inside code section at 0x91b2 -- 0x91b9
0x91b2:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x91b9 -- 0x91ba
; data inside code section at 0x91ba -- 0x91bd
0x91ba:     ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_ at 0x91c0 -- 0x91dc
0x91c0:     56                                 	push esi
0x91c1:     53                                 	push ebx
0x91c2:     83 ec 44                           	sub esp, 0x44
0x91c5:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x91c9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x91cf:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x91d3:     31 c0                              	xor eax, eax
0x91d5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x91dc -- 0x91dd
0x91dc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x91dd -- 0x91de
; data inside code section at 0x91de -- 0x920a
0x91de:     ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x91ee:     00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x91fe:     ff ff ff c7 44 24 20 d8  49 01 00 89               |....D$ .I...    |
; function: function_920a at 0x920a -- 0x920b
0x920a:     c3                                 	ret 
; data inside code section at 0x920b -- 0x926d
0x920b:     8b 46 04 8d 74 24 20 c7  44 24 28 ec 49 01 00 89   |.F..t$ .D$(.I...|
0x921b:     74 24 04 89 44 24 24 89  1c 24 e8 46 90 00 00 8d   |t$..D$$..$.F....|
0x922b:     44 24 28 c7 03 18 4a 01  00 c7 43 08 34 4a 01 00   |D$(...J...C.4J..|
0x923b:     c7 43 1c 44 4a 01 00 89  44 24 04 8d 43 08 89 04   |.C.DJ...D$..C...|
0x924b:     24 e8 ef 8e 00 00 89 34  24 e8 07 42 00 00 c7 44   |$......4$..B...D|
0x925b:     24 08 60 47 00 00 c7 44  24 04 70 4a 01 00 89 1c   |$.`G...D$.pJ....|
0x926b:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x926d -- 0x926e
; data inside code section at 0x926e -- 0x9271
0x926e:     ff ff ff                                           |...             |
; function: function_9271 at 0x9271 -- 0x9272
; data inside code section at 0x9272 -- 0x9281
0x9272:     44 24 1c 89 34 24 e8 e3  41 00 00 89 1c 24 e8      |D$..4$..A....$. |
; dynamically linked function: __cxa_free_exception at 0x9281 -- 0x9282
; data inside code section at 0x9282 -- 0x928d
0x9282:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x928d -- 0x928e
; data inside code section at 0x928e -- 0x9290
0x928e:     ff ff                                              |..              |
; function: function_9290 at 0x9290 -- 0x92aa
0x9290:     ff c7                              	inc edi
0x9292:     43                                 	inc ebx
0x9293:     1c a0                              	sbb al, 0xa0
0x9295:     47                                 	inc edi
0x9296:     01 00                              	add dword ptr [eax], eax
0x9298:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x929c:     89 1c 24                           	mov dword ptr [esp], ebx
0x929f:     e8 bc 41 00 00                     	call 0xd460
0x92a4:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x92a8:     eb c7                              	jmp 0x9271 <function_9271>
; section: .text._ZN5boost15recursive_mutexC2Ev
; function: _ZN5boost15recursive_mutexC1Ev at 0x92b0 -- 0x92cf
0x92b0:     53                                 	push ebx
0x92b1:     83 ec 48                           	sub esp, 0x48
0x92b4:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x92b8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x92be:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x92c2:     31 c0                              	xor eax, eax
0x92c4:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x92cc:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x92cf -- 0x92d0
0x92cf:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x92d0 -- 0x92d1
; data inside code section at 0x92d1 -- 0x92eb
0x92d1:     ff ff ff 85 c0 0f 85 a0  00 00 00 8d 43 18 c7 44   |............C..D|
0x92e1:     24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x92eb -- 0x92ec
; data inside code section at 0x92ec -- 0x92ee
0x92ec:     ff ff                                              |..              |
; function: function_92ee at 0x92ee -- 0x9314
0x92ee:     ff 85 c0 75 25 8b                  	inc dword ptr [ebp - 0x74da8a40]
0x92f4:     44                                 	inc esp
0x92f5:     24 3c                              	and al, 0x3c
0x92f7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x92fe:     c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x9302:     c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0x9309:     0f 85 8b 00 00 00                  	jne 0x939a <function_939a>
0x930f:     83 c4 48                           	add esp, 0x48
0x9312:     5b                                 	pop ebx
0x9313:     c3                                 	ret 
; data inside code section at 0x9314 -- 0x931c
0x9314:     8d 74 26 00 89 1c 24 e8                            |.t&...$.        |
; dynamically linked function: pthread_mutex_destroy at 0x931c -- 0x931d
; data inside code section at 0x931d -- 0x9344
0x931d:     ff ff ff 85 c0 74 24 c7  44 24 0c b0 8a 00 00 c7   |.....t$.D$......|
0x932d:     44 24 08 53 00 00 00 c7  44 24 04 c8 32 00 00 c7   |D$.S....D$..2...|
0x933d:     04 24 bd 1f 00 00 e8                               |.$.....         |
; dynamically linked function: __assert_fail at 0x9344 -- 0x9345
; data inside code section at 0x9345 -- 0x9364
0x9345:     ff ff ff 8d 5c 24 34 c7  44 24 38 00 00 00 00 c7   |....\$4.D$8.....|
0x9355:     44 24 34 b0 49 01 00 89  1c 24 e8 0c 91 00 00      |D$4.I....$..... |
; function: function_9364 at 0x9364 -- 0x9365
; data inside code section at 0x9365 -- 0x9378
0x9365:     44 24 1c 89 1c 24 e8 e0  3a 00 00 8b 44 24 1c 89   |D$...$..:...D$..|
0x9375:     04 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x9378 -- 0x9379
; data inside code section at 0x9379 -- 0x937b
0x9379:     ff ff                                              |..              |
; function: function_937b at 0x937b -- 0x939a
0x937b:     ff 8d 5c 24 2c c7                  	dec dword ptr [ebp - 0x38d3dba4]
0x9381:     44                                 	inc esp
0x9382:     24 30                              	and al, 0x30
0x9384:     00 00                              	add byte ptr [eax], al
0x9386:     00 00                              	add byte ptr [eax], al
0x9388:     c7 44 24 2c b0 49 01 00            	mov dword ptr [esp + 0x2c], 0x149b0
0x9390:     89 1c 24                           	mov dword ptr [esp], ebx
0x9393:     e8 d8 90 00 00                     	call 0x12470 <function_12470>
0x9398:     eb ca                              	jmp 0x9364 <function_9364>
; function: function_939a at 0x939a -- 0x939b
; dynamically linked function: __stack_chk_fail at 0x939b -- 0x939c
; data inside code section at 0x939c -- 0x939f
0x939c:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_ at 0x93a0 -- 0x9410
0x93a0:     56                                 	push esi
0x93a1:     53                                 	push ebx
0x93a2:     83 ec 24                           	sub esp, 0x24
0x93a5:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x93a9:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x93ad:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x93b3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x93b7:     31 c0                              	xor eax, eax
0x93b9:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x93bc:     c7 03 50 47 01 00                  	mov dword ptr [ebx], 0x14750
0x93c2:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x93c9:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x93cc:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x93cf:     85 c0                              	test eax, eax
0x93d1:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x93d4:     74 08                              	je 0x93de <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x3e>
0x93d6:     8b 10                              	mov edx, dword ptr [eax]
0x93d8:     89 04 24                           	mov dword ptr [esp], eax
0x93db:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x93de:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x93e1:     c7 43 08 8c 47 01 00               	mov dword ptr [ebx + 8], 0x1478c
0x93e8:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x93eb:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x93ee:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x93f1:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x93f4:     c7 03 78 47 01 00                  	mov dword ptr [ebx], 0x14778
0x93fa:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x93fd:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9401:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9408:     75 06                              	jne 0x9410 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x6f>
0x940a:     83 c4 24                           	add esp, 0x24
0x940d:     5b                                 	pop ebx
0x940e:     5e                                 	pop esi
0x940f:     c3                                 	ret 
; data inside code section at 0x9410 -- 0x9411
0x9410:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9411 -- 0x9412
; data inside code section at 0x9412 -- 0x9423
0x9412:     ff ff ff 89 c6 89 1c 24  e8 61 3b 00 00 89 34 24   |.......$.a;...4$|
0x9422:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x9423 -- 0x9424
; data inside code section at 0x9424 -- 0x9427
0x9424:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x9430 -- 0x9437
0x9430:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x9435:     eb 09                              	jmp 0x9440 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv>
; data inside code section at 0x9437 -- 0x9440
0x9437:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x9440 -- 0x945c
0x9440:     56                                 	push esi
0x9441:     53                                 	push ebx
0x9442:     83 ec 24                           	sub esp, 0x24
0x9445:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x9449:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x944f -- 0x9450
0x944f:     89                                                 |.               |
0x9450:     44                                 	inc esp
0x9451:     24 1c                              	and al, 0x1c
0x9453:     31 c0                              	xor eax, eax
0x9455:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x945c -- 0x945d
0x945c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x945d -- 0x945e
; data inside code section at 0x945e -- 0x9460
0x945e:     ff ff                                              |..              |
; function: function_9460 at 0x9460 -- 0x9467
0x9460:     ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x9466:     c3                                 	ret 
; data inside code section at 0x9467 -- 0x9490
0x9467:     89 04 24 e8 61 93 00 00  c7 03 b8 47 01 00 c7 43   |..$.a......G...C|
0x9477:     08 d4 47 01 00 c7 43 1c  e4 47 01 00 c7 44 24 08   |..G...C..G...D$.|
0x9487:     d0 48 00 00 c7 44 24 04  10                        |.H...D$..       |
; function: function_9490 at 0x9490 -- 0x9496
0x9490:     48                                 	dec eax
0x9491:     01 00                              	add dword ptr [eax], eax
0x9493:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9496 -- 0x9497
0x9496:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x9497 -- 0x9498
; data inside code section at 0x9498 -- 0x94a1
0x9498:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x94a1 -- 0x94a2
; data inside code section at 0x94a2 -- 0x94a9
0x94a2:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x94a9 -- 0x94aa
; data inside code section at 0x94aa -- 0x94ad
0x94aa:     ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_ at 0x94b0 -- 0x94cc
0x94b0:     56                                 	push esi
0x94b1:     53                                 	push ebx
0x94b2:     83 ec 44                           	sub esp, 0x44
0x94b5:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x94b9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x94bf:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x94c3:     31 c0                              	xor eax, eax
0x94c5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x94cc -- 0x94cd
0x94cc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x94cd -- 0x94ce
; data inside code section at 0x94ce -- 0x94fa
0x94ce:     ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x94de:     00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x94ee:     ff ff ff c7 44 24 20 78  47 01 00 89               |....D$ xG...    |
; function: function_94fa at 0x94fa -- 0x94fb
0x94fa:     c3                                 	ret 
; data inside code section at 0x94fb -- 0x955d
0x94fb:     8b 46 04 8d 74 24 20 c7  44 24 28 8c 47 01 00 89   |.F..t$ .D$(.G...|
0x950b:     74 24 04 89 44 24 24 89  1c 24 e8 36 93 00 00 8d   |t$..D$$..$.6....|
0x951b:     44 24 28 c7 03 b8 47 01  00 c7 43 08 d4 47 01 00   |D$(...G...C..G..|
0x952b:     c7 43 1c e4 47 01 00 89  44 24 04 8d 43 08 89 04   |.C..G...D$..C...|
0x953b:     24 e8 ef 8e 00 00 89 34  24 e8 77 42 00 00 c7 44   |$......4$.wB...D|
0x954b:     24 08 d0 48 00 00 c7 44  24 04 10 48 01 00 89 1c   |$..H...D$..H....|
0x955b:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x955d -- 0x955e
; data inside code section at 0x955e -- 0x9561
0x955e:     ff ff ff                                           |...             |
; function: function_9561 at 0x9561 -- 0x9562
; data inside code section at 0x9562 -- 0x9571
0x9562:     44 24 1c 89 34 24 e8 53  42 00 00 89 1c 24 e8      |D$..4$.SB....$. |
; dynamically linked function: __cxa_free_exception at 0x9571 -- 0x9572
; data inside code section at 0x9572 -- 0x957d
0x9572:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x957d -- 0x957e
; data inside code section at 0x957e -- 0x9580
0x957e:     ff ff                                              |..              |
; function: function_9580 at 0x9580 -- 0x959a
0x9580:     ff c7                              	inc edi
0x9582:     43                                 	inc ebx
0x9583:     1c a0                              	sbb al, 0xa0
0x9585:     47                                 	inc edi
0x9586:     01 00                              	add dword ptr [eax], eax
0x9588:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x958c:     89 1c 24                           	mov dword ptr [esp], ebx
0x958f:     e8 2c 42 00 00                     	call 0xd7c0
0x9594:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9598:     eb c7                              	jmp 0x9561 <function_9561>
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x95a0 -- 0x969a
0x95a0:     83 ec 6c                           	sub esp, 0x6c
0x95a3:     89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x95a7:     8d 74 24 18                        	lea esi, [esp + 0x18]
0x95ab:     89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x95af:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0x95b3:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x95b7:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x95bb:     89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x95bf:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x95c5:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x95c9:     31 c0                              	xor eax, eax
0x95cb:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x95d3:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x95db:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x95e3:     c7 44 24 44 ff ff ff ff            	mov dword ptr [esp + 0x44], 0xffffffff
0x95eb:     c7 44 24 34 b8 4a 01 00            	mov dword ptr [esp + 0x34], 0x14ab8
0x95f3:     c7 44 24 48 c8 4a 01 00            	mov dword ptr [esp + 0x48], 0x14ac8
0x95fb:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x9603:     c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x960b:     c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x9613:     c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x961b:     c7 44 24 18 f8 4a 01 00            	mov dword ptr [esp + 0x18], 0x14af8
0x9623:     c7 44 24 2c 10 4b 01 00            	mov dword ptr [esp + 0x2c], 0x14b10
0x962b:     c7 44 24 30 24 4b 01 00            	mov dword ptr [esp + 0x30], 0x14b24
0x9633:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x9637:     89 34 24                           	mov dword ptr [esp], esi
0x963a:     e8 e1 8e 00 00                     	call 0x12520 <function_12520>
0x963f:     80 3d 38 4b 01 00 00               	cmp byte ptr [0x14b38], 0
0x9646:     c7 44 24 20 f0 8a 00 00            	mov dword ptr [esp + 0x20], 0x8af0 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x964e:     c7 44 24 24 98 35 00 00            	mov dword ptr [esp + 0x24], 0x3598 ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x9656:     c7 44 24 28 51 00 00 00            	mov dword ptr [esp + 0x28], 0x51
0x965e:     0f 84 94 00 00 00                  	je 0x96f8 <function_96f8>
0x9664:     a1 38 4b 01 00                     	mov eax, dword ptr [0x14b38]
0x9669:     89 03                              	mov dword ptr [ebx], eax
0x966b:     a1 3c 4b 01 00                     	mov eax, dword ptr [0x14b3c]
0x9670:     85 c0                              	test eax, eax
0x9672:     89 43 04                           	mov dword ptr [ebx + 4], eax
0x9675:     74 04                              	je 0x967b <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xdb>
0x9677:     f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x967b:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x967f:     89 04 24                           	mov dword ptr [esp], eax
0x9682:     c7 44 24 30 a0 47 01 00            	mov dword ptr [esp + 0x30], 0x147a0
0x968a:     c7 44 24 18 b8 4a 01 00            	mov dword ptr [esp + 0x18], 0x14ab8
0x9692:     c7 44 24 2c c8 4a 01 00            	mov dword ptr [esp + 0x2c], 0x14ac8
; data inside code section at 0x969a -- 0x969b
0x969a:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x969b -- 0x969c
; data inside code section at 0x969c -- 0x96bf
0x969c:     ff ff ff 89 34 24 e8 b9  40 00 00 8d 44 24 48 89   |....4$..@...D$H.|
0x96ac:     04 24 c7 44 24 34 b8 4a  01 00 c7 44 24 48 c8 4a   |.$.D$4.J...D$H.J|
0x96bc:     01 00 e8                                           |...             |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x96bf -- 0x96c0
; data inside code section at 0x96c0 -- 0x96c2
0x96c0:     ff ff                                              |..              |
; function: function_96c2 at 0x96c2 -- 0x96f4
0x96c2:     ff 89 3c 24 e8 95                  	dec dword ptr [ecx - 0x6a17dbc4]
0x96c8:     40                                 	inc eax
0x96c9:     00 00                              	add byte ptr [eax], al
0x96cb:     89 d8                              	mov eax, ebx
0x96cd:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x96d1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x96d8:     0f 85 e6 00 00 00                  	jne 0x97c4 <function_97c4>
0x96de:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x96e2:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x96e6:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x96ea:     8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x96ee:     83 c4 6c                           	add esp, 0x6c
0x96f1:     c2 04 00                           	ret 4
; data inside code section at 0x96f4 -- 0x96f8
0x96f4:     8d 74 26 00                                        |.t&.            |
; function: function_96f8 at 0x96f8 -- 0x96ff
0x96f8:     c7 04 24 38 4b 01 00               	mov dword ptr [esp], 0x14b38
; data inside code section at 0x96ff -- 0x9700
0x96ff:     e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x9700 -- 0x9701
; data inside code section at 0x9701 -- 0x9714
0x9701:     ff ff ff 85 c0 0f 84 58  ff ff ff c7 04 24 1c 00   |.......X.....$..|
0x9711:     00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x9714 -- 0x9715
; data inside code section at 0x9715 -- 0x9777
0x9715:     ff ff ff 89 c5 c7 00 68  47 01 00 8b 44 24 1c 85   |.......hG...D$..|
0x9725:     c0 89 45 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..E.t.....$.R..D|
0x9735:     24 20 c7 45 00 f8 4a 01  00 c7 45 14 10 4b 01 00   |$ .E..J...E..K..|
0x9745:     c7 45 18 24 4b 01 00 89  45 08 8b 44 24 24 c7 05   |.E.$K...E..D$$..|
0x9755:     3c 4b 01 00 00 00 00 00  89 45 0c 8b 44 24 28 89   |<K.......E..D$(.|
0x9765:     45 10 8d 45 18 a3 38 4b  01 00 c7 04 24 10 00 00   |E..E..8K....$...|
0x9775:     00 e8                                              |..              |
; dynamically linked function: _Znwj at 0x9777 -- 0x9778
; data inside code section at 0x9778 -- 0x979f
0x9778:     ff ff ff c7 40 04 01 00  00 00 c7 00 40 4b 01 00   |....@.......@K..|
0x9788:     89 68 0c c7 40 08 01 00  00 00 a3 3c 4b 01 00 c7   |.h..@......<K...|
0x9798:     04 24 38 4b 01 00 e8                               |.$8K...         |
; dynamically linked function: __cxa_guard_release at 0x979f -- 0x97a0
; data inside code section at 0x97a0 -- 0x97a7
0x97a0:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x97a7 -- 0x97ba
; data inside code section at 0x97ba -- 0x97bb
0x97ba:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x97bb -- 0x97bc
; data inside code section at 0x97bc -- 0x97bf
0x97bc:     ff ff ff                                           |...             |
; function: function_97bf at 0x97bf -- 0x97c4
0x97bf:     e9 a0 fe ff ff                     	jmp 0x9664
; function: function_97c4 at 0x97c4 -- 0x97c5
; dynamically linked function: __stack_chk_fail at 0x97c5 -- 0x97c6
; data inside code section at 0x97c6 -- 0x97d1
0x97c6:     ff ff ff 89 04 24 8d 74  26 00 e8                  |.....$.t&..     |
; dynamically linked function: __cxa_begin_catch at 0x97d1 -- 0x97d2
; data inside code section at 0x97d2 -- 0x97df
0x97d2:     ff ff ff 8b 45 00 89 2c  24 ff 50 04 e8            |....E..,$.P..   |
; dynamically linked function: __cxa_rethrow at 0x97df -- 0x97e0
; data inside code section at 0x97e0 -- 0x97e4
0x97e0:     ff ff ff 89                                        |....            |
; function: function_97e4 at 0x97e4 -- 0x97e5
0x97e4:     c3                                 	ret 
; data inside code section at 0x97e5 -- 0x97e9
0x97e5:     89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZdlPv at 0x97e9 -- 0x97ea
; data inside code section at 0x97ea -- 0x97ed
0x97ea:     ff ff ff                                           |...             |
; function: function_97ed at 0x97ed -- 0x97ee
; data inside code section at 0x97ee -- 0x97f5
0x97ee:     04 24 38 4b 01 00 e8                               |.$8K...         |
; dynamically linked function: __cxa_guard_abort at 0x97f5 -- 0x97f6
; data inside code section at 0x97f6 -- 0x9801
0x97f6:     ff ff ff 89 34 24 e8 9f  41 00 00                  |....4$..A..     |
; function: function_9801 at 0x9801 -- 0x9802
; data inside code section at 0x9802 -- 0x980d
0x9802:     3c 24 e8 d7 3f 00 00 89  1c 24 e8                  |<$..?....$.     |
; dynamically linked function: _Unwind_Resume at 0x980d -- 0x980e
; data inside code section at 0x980e -- 0x9812
0x980e:     ff ff ff 89                                        |....            |
; function: function_9812 at 0x9812 -- 0x9813
0x9812:     c3                                 	ret 
; data inside code section at 0x9813 -- 0x9814
0x9813:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x9814 -- 0x9815
; data inside code section at 0x9815 -- 0x9818
0x9815:     ff ff ff                                           |...             |
; function: function_9818 at 0x9818 -- 0x981a
0x9818:     eb d3                              	jmp 0x97ed <function_97ed>
; function: function_981a at 0x981a -- 0x9822
0x981a:     89 c3                              	mov ebx, eax
0x981c:     8d 74 26 00                        	lea esi, [esi]
0x9820:     eb cb                              	jmp 0x97ed <function_97ed>
; function: function_9822 at 0x9822 -- 0x9836
0x9822:     89 c3                              	mov ebx, eax
0x9824:     c7 44 24 30 a0 47 01 00            	mov dword ptr [esp + 0x30], 0x147a0
0x982c:     89 34 24                           	mov dword ptr [esp], esi
0x982f:     e8 ac 3f 00 00                     	call 0xd7e0
0x9834:     eb cb                              	jmp 0x9801 <function_9801>
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEED2Ev
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev at 0x9840 -- 0x9867
0x9840:     53                                 	push ebx
0x9841:     83 ec 28                           	sub esp, 0x28
0x9844:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x9848:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x984f:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x9853:     31 d2                              	xor edx, edx
0x9855:     8b 18                              	mov ebx, dword ptr [eax]
0x9857:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0x985a:     85 db                              	test ebx, ebx
0x985c:     74 2a                              	je 0x9888 <function_9888>
0x985e:     29 d8                              	sub eax, ebx
0x9860:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9864:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9867 -- 0x9868
0x9867:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x9868 -- 0x9869
; data inside code section at 0x9869 -- 0x9882
0x9869:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 21   |....D$.e3.....u!|
0x9879:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x9882 -- 0x9883
; data inside code section at 0x9883 -- 0x9885
0x9883:     ff ff                                              |..              |
; function: function_9885 at 0x9885 -- 0x9888
0x9885:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_9888 at 0x9888 -- 0x98a0
0x9888:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x988c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9893:     75 05                              	jne 0x989a <function_9888+0x12>
0x9895:     83 c4 28                           	add esp, 0x28
0x9898:     5b                                 	pop ebx
0x9899:     c3                                 	ret 
0x989a:     8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x98a0 -- 0x98a1
0x98a0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x98a1 -- 0x98a2
; data inside code section at 0x98a2 -- 0x98a5
0x98a2:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEC2ERKS2_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_ at 0x98b0 -- 0x993b
0x98b0:     55                                 	push ebp
0x98b1:     31 ed                              	xor ebp, ebp
0x98b3:     57                                 	push edi
0x98b4:     56                                 	push esi
0x98b5:     53                                 	push ebx
0x98b6:     83 ec 2c                           	sub esp, 0x2c
0x98b9:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x98bd:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x98c1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x98c7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x98cb:     31 c0                              	xor eax, eax
0x98cd:     8b 77 04                           	mov esi, dword ptr [edi + 4]
0x98d0:     2b 37                              	sub esi, dword ptr [edi]
0x98d2:     c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x98d8:     c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x98df:     85 f6                              	test esi, esi
0x98e1:     c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x98e8:     75 4e                              	jne 0x9938 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_+0x88>
0x98ea:     01 ee                              	add esi, ebp
0x98ec:     89 2b                              	mov dword ptr [ebx], ebp
0x98ee:     89 6b 04                           	mov dword ptr [ebx + 4], ebp
0x98f1:     89 73 08                           	mov dword ptr [ebx + 8], esi
0x98f4:     8b 77 04                           	mov esi, dword ptr [edi + 4]
0x98f7:     8b 3f                              	mov edi, dword ptr [edi]
0x98f9:     39 fe                              	cmp esi, edi
0x98fb:     74 22                              	je 0x991f <_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_+0x6f>
0x98fd:     89 fa                              	mov edx, edi
0x98ff:     89 e9                              	mov ecx, ebp
0x9901:     8d b4 26 00 00 00 00               	lea esi, [esi]
0x9908:     85 c9                              	test ecx, ecx
0x990a:     74 05                              	je 0x9911 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_+0x61>
0x990c:     0f b6 02                           	movzx eax, byte ptr [edx]
0x990f:     88 01                              	mov byte ptr [ecx], al
0x9911:     83 c2 01                           	add edx, 1
0x9914:     83 c1 01                           	add ecx, 1
0x9917:     39 f2                              	cmp edx, esi
0x9919:     75 ed                              	jne 0x9908 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_+0x58>
0x991b:     29 fa                              	sub edx, edi
0x991d:     01 d5                              	add ebp, edx
0x991f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9923:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x992a:     89 6b 04                           	mov dword ptr [ebx + 4], ebp
0x992d:     75 15                              	jne 0x9944 <function_9944>
0x992f:     83 c4 2c                           	add esp, 0x2c
0x9932:     5b                                 	pop ebx
0x9933:     5e                                 	pop esi
0x9934:     5f                                 	pop edi
0x9935:     5d                                 	pop ebp
0x9936:     c3                                 	ret 
; data inside code section at 0x9937 -- 0x9938
0x9937:     90                                                 |.               |
0x9938:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x993b -- 0x993c
0x993b:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x993c -- 0x993d
; data inside code section at 0x993d -- 0x9940
0x993d:     ff ff ff                                           |...             |
; function: function_9940 at 0x9940 -- 0x9944
0x9940:     89 c5                              	mov ebp, eax
0x9942:     eb a6                              	jmp 0x98ea
; function: function_9944 at 0x9944 -- 0x9945
; dynamically linked function: __stack_chk_fail at 0x9945 -- 0x9946
; data inside code section at 0x9946 -- 0x9949
0x9946:     ff ff ff                                           |...             |
; section: .text._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
; function: _ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev at 0x9950 -- 0x9991
0x9950:     53                                 	push ebx
0x9951:     83 ec 28                           	sub esp, 0x28
0x9954:     8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x9958:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x995e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9962:     31 c0                              	xor eax, eax
0x9964:     8b 11                              	mov edx, dword ptr [ecx]
0x9966:     89 d0                              	mov eax, edx
0x9968:     c1 f8 1f                           	sar eax, 0x1f
0x996b:     31 d0                              	xor eax, edx
0x996d:     83 f8 13                           	cmp eax, 0x13
0x9970:     76 26                              	jbe 0x9998 <function_9998>
0x9972:     c7 44 24 0c 30 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a30 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x997a:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x9982:     c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x998a:     c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0x9991 -- 0x9992
0x9991:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x9992 -- 0x9993
; data inside code section at 0x9993 -- 0x9995
0x9993:     ff ff                                              |..              |
; function: function_9995 at 0x9995 -- 0x9998
0x9995:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_9998 at 0x9998 -- 0x999f
0x9998:     ff 24 85 70 9a 00 00               	jmp dword ptr [eax*4 + 0x9a70]
; data inside code section at 0x999f -- 0x99a0
0x999f:     90                                                 |.               |
; function: function_99a0 at 0x99a0 -- 0x99d0
0x99a0:     e8 2b 00 00 00                     	call 0x99d0 <function_99d0>
0x99a5:     8d 76 00                           	lea esi, [esi]
0x99a8:     85 d2                              	test edx, edx
0x99aa:     8d b6 00 00 00 00                  	lea esi, [esi]
0x99b0:     0f 88 92 00 00 00                  	js 0x9a48 <function_9a48>
0x99b6:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x99b9:     85 c0                              	test eax, eax
0x99bb:     74 53                              	je 0x9a10 <function_9a10>
0x99bd:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x99c1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x99c8:     0f 85 9c 00 00 00                  	jne 0x9a6a <function_9a6a>
0x99ce:     8b 10                              	mov edx, dword ptr [eax]
; function: function_99d0 at 0x99d0 -- 0x99dd
0x99d0:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x99d4:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0x99d7:     83 c4 28                           	add esp, 0x28
0x99da:     5b                                 	pop ebx
0x99db:     ff e0                              	jmp eax
; data inside code section at 0x99dd -- 0x9a03
0x99dd:     8d 76 00 85 d2 79 44 8b  59 04 85 db 74 25 8d 43   |.v...yD.Y...t%.C|
0x99ed:     04 89 04 24 e8 3a 49 00  00 8b 44 24 1c 65 33 05   |...$.:I...D$.e3.|
0x99fd:     14 00 00 00 75 67                                  |....ug          |
; function: function_9a03 at 0x9a03 -- 0x9a04
; data inside code section at 0x9a04 -- 0x9a0c
0x9a04:     5c 24 30 83 c4 28 5b e9                            |\$0..([.        |
; dynamically linked function: _ZdlPv at 0x9a0c -- 0x9a0d
; data inside code section at 0x9a0d -- 0x9a10
0x9a0d:     ff ff ff                                           |...             |
; function: function_9a10 at 0x9a10 -- 0x9a22
0x9a10:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x9a14:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9a1b:     75 4d                              	jne 0x9a6a <function_9a6a>
0x9a1d:     83 c4 28                           	add esp, 0x28
0x9a20:     5b                                 	pop ebx
0x9a21:     c3                                 	ret 
; data inside code section at 0x9a22 -- 0x9a28
0x9a22:     8d b6 00 00 00 00                                  |......          |
; function: function_9a28 at 0x9a28 -- 0x9a45
0x9a28:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x9a2c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9a33:     75 35                              	jne 0x9a6a <function_9a6a>
0x9a35:     83 c1 08                           	add ecx, 8
0x9a38:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x9a3c:     83 c4 28                           	add esp, 0x28
0x9a3f:     5b                                 	pop ebx
0x9a40:     e9 eb 48 00 00                     	jmp 0xe330 <function_e330>
; data inside code section at 0x9a45 -- 0x9a48
0x9a45:     8d 76 00                                           |.v.             |
; function: function_9a48 at 0x9a48 -- 0x9a6a
0x9a48:     8b 59 04                           	mov ebx, dword ptr [ecx + 4]
0x9a4b:     85 db                              	test ebx, ebx
0x9a4d:     74 c1                              	je 0x9a10 <function_9a10>
0x9a4f:     8b 03                              	mov eax, dword ptr [ebx]
0x9a51:     85 c0                              	test eax, eax
0x9a53:     74 08                              	je 0x9a5d <function_9a48+0x15>
0x9a55:     8b 10                              	mov edx, dword ptr [eax]
0x9a57:     89 04 24                           	mov dword ptr [esp], eax
0x9a5a:     ff 52 04                           	call dword ptr [edx + 4]
0x9a5d:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9a61:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9a68:     74 99                              	je 0x9a03
; function: function_9a6a at 0x9a6a -- 0x9a6b
; dynamically linked function: __stack_chk_fail at 0x9a6b -- 0x9a6c
; data inside code section at 0x9a6c -- 0x9a6f
0x9a6c:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIhSaIhEEaSERKS1_
; function: _ZNSt6vectorIhSaIhEEaSERKS1_ at 0x9ac0 -- 0x9b02
0x9ac0:     83 ec 4c                           	sub esp, 0x4c
0x9ac3:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x9ac7:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x9acb:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x9acf:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x9ad3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9ad9:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x9add:     31 c0                              	xor eax, eax
0x9adf:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x9ae3:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x9ae7:     39 df                              	cmp edi, ebx
0x9ae9:     74 3f                              	je 0x9b2a <function_9b2a>
0x9aeb:     8b 57 04                           	mov edx, dword ptr [edi + 4]
0x9aee:     8b 2f                              	mov ebp, dword ptr [edi]
0x9af0:     8b 03                              	mov eax, dword ptr [ebx]
0x9af2:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x9af5:     89 d6                              	mov esi, edx
0x9af7:     29 ee                              	sub esi, ebp
0x9af9:     29 c1                              	sub ecx, eax
0x9afb:     39 ce                              	cmp esi, ecx
0x9afd:     76 59                              	jbe 0x9b58 <function_9b58>
0x9aff:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x9b02 -- 0x9b03
0x9b02:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x9b03 -- 0x9b04
; data inside code section at 0x9b04 -- 0x9b11
0x9b04:     ff ff ff 85 f6 89 c7 0f  85 ef 00 00 00            |.............   |
; function: function_9b11 at 0x9b11 -- 0x9b12
; data inside code section at 0x9b12 -- 0x9b1b
0x9b12:     03 85 c0 74 08 89 04 24  e8                        |...t...$.       |
; dynamically linked function: _ZdlPv at 0x9b1b -- 0x9b1c
; data inside code section at 0x9b1c -- 0x9b27
0x9b1c:     ff ff ff 8d 04 37 89 3b  89 43 08                  |.....7.;.C.     |
; function: function_9b27 at 0x9b27 -- 0x9b2a
0x9b27:     89 43 04                           	mov dword ptr [ebx + 4], eax
; function: function_9b2a at 0x9b2a -- 0x9b51
0x9b2a:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x9b2e:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x9b35:     89 d8                              	mov eax, ebx
0x9b37:     0f 85 d8 00 00 00                  	jne 0x9c15 <function_9c15>
0x9b3d:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x9b41:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x9b45:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x9b49:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x9b4d:     83 c4 4c                           	add esp, 0x4c
0x9b50:     c3                                 	ret 
; data inside code section at 0x9b51 -- 0x9b58
0x9b51:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_9b58 at 0x9b58 -- 0x9b78
0x9b58:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x9b5b:     89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x9b5f:     29 c1                              	sub ecx, eax
0x9b61:     39 ce                              	cmp esi, ecx
0x9b63:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x9b67:     77 1f                              	ja 0x9b88 <function_9b88>
0x9b69:     85 f6                              	test esi, esi
0x9b6b:     74 ba                              	je 0x9b27 <function_9b27>
0x9b6d:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x9b71:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x9b75:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x9b78 -- 0x9b79
0x9b78:     e8                                                 |.               |
; dynamically linked function: memmove at 0x9b79 -- 0x9b7a
; data inside code section at 0x9b7a -- 0x9b7d
0x9b7a:     ff ff ff                                           |...             |
; function: function_9b7d at 0x9b7d -- 0x9b83
0x9b7d:     8b 03                              	mov eax, dword ptr [ebx]
0x9b7f:     01 f0                              	add eax, esi
0x9b81:     eb a4                              	jmp 0x9b27 <function_9b27>
; data inside code section at 0x9b83 -- 0x9b88
0x9b83:     90 8d 74 26 00                                     |..t&.           |
; function: function_9b88 at 0x9b88 -- 0x9bbb
0x9b88:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x9b8c:     01 e9                              	add ecx, ebp
0x9b8e:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x9b92:     29 e9                              	sub ecx, ebp
0x9b94:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x9b98:     75 36                              	jne 0x9bd0 <function_9bd0>
0x9b9a:     2b 54 24 18                        	sub edx, dword ptr [esp + 0x18]
0x9b9e:     75 08                              	jne 0x9ba8 <function_9b88+0x20>
0x9ba0:     01 f0                              	add eax, esi
0x9ba2:     eb 83                              	jmp 0x9b27 <function_9b27>
; data inside code section at 0x9ba4 -- 0x9ba8
0x9ba4:     8d 74 26 00                                        |.t&.            |
0x9ba8:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x9bac:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x9bb0:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x9bb4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9bb8:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x9bbb -- 0x9bbc
0x9bbb:     e8                                                 |.               |
; dynamically linked function: memmove at 0x9bbc -- 0x9bbd
; data inside code section at 0x9bbd -- 0x9bc0
0x9bbd:     ff ff ff                                           |...             |
; function: function_9bc0 at 0x9bc0 -- 0x9bc9
0x9bc0:     8b 03                              	mov eax, dword ptr [ebx]
0x9bc2:     01 f0                              	add eax, esi
0x9bc4:     e9 5e ff ff ff                     	jmp 0x9b27 <function_9b27>
; data inside code section at 0x9bc9 -- 0x9bd0
0x9bc9:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_9bd0 at 0x9bd0 -- 0x9bdb
0x9bd0:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x9bd4:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x9bd8:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x9bdb -- 0x9bdc
0x9bdb:     e8                                                 |.               |
; dynamically linked function: memmove at 0x9bdc -- 0x9bdd
; data inside code section at 0x9bdd -- 0x9bdf
0x9bdd:     ff ff                                              |..              |
; function: function_9bdf at 0x9bdf -- 0x9bfc
0x9bdf:     ff 8b 43 04 8b 0f                  	dec dword ptr [ebx + 0xf8b0443]
0x9be5:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x9be9:     8b 03                              	mov eax, dword ptr [ebx]
0x9beb:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x9bef:     29 c2                              	sub edx, eax
0x9bf1:     01 ca                              	add edx, ecx
0x9bf3:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x9bf7:     8b 57 04                           	mov edx, dword ptr [edi + 4]
0x9bfa:     eb 9e                              	jmp 0x9b9a
; data inside code section at 0x9bfc -- 0x9c0c
0x9bfc:     8d 74 26 00 89 74 24 08  89 6c 24 04 89 04 24 e8   |.t&..t$..l$...$.|
; dynamically linked function: memmove at 0x9c0c -- 0x9c0d
; data inside code section at 0x9c0d -- 0x9c10
0x9c0d:     ff ff ff                                           |...             |
; function: function_9c10 at 0x9c10 -- 0x9c15
0x9c10:     e9 fc fe ff ff                     	jmp 0x9b11 <function_9b11>
; function: function_9c15 at 0x9c15 -- 0x9c16
; dynamically linked function: __stack_chk_fail at 0x9c16 -- 0x9c17
; data inside code section at 0x9c17 -- 0x9c1a
0x9c17:     ff ff ff                                           |...             |
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv at 0x9c20 -- 0x9c41
0x9c20:     56                                 	push esi
0x9c21:     53                                 	push ebx
0x9c22:     83 ec 24                           	sub esp, 0x24
0x9c25:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x9c29:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9c2f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9c33:     31 c0                              	xor eax, eax
0x9c35:     c6 44 24 18 01                     	mov byte ptr [esp + 0x18], 1
0x9c3a:     89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x9c3e:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9c41 -- 0x9c42
0x9c41:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x9c42 -- 0x9c43
; data inside code section at 0x9c43 -- 0x9c57
0x9c43:     ff ff ff 85 c0 0f 85 ae  00 00 00 31 d2 80 7b 48   |...........1..{H|
0x9c53:     00 74 0f e8                                        |.t..            |
; dynamically linked function: pthread_self at 0x9c57 -- 0x9c58
; data inside code section at 0x9c58 -- 0x9c5b
0x9c58:     ff ff ff                                           |...             |
; function: function_9c5b at 0x9c5b -- 0x9c6a
0x9c5b:     ba 01 00 00 00                     	mov edx, 1
0x9c60:     3b 43 4c                           	cmp eax, dword ptr [ebx + 0x4c]
0x9c63:     74 4d                              	je 0x9cb2 <function_9cb2>
0x9c65:     8d 73 18                           	lea esi, [ebx + 0x18]
0x9c68:     eb 1a                              	jmp 0x9c84 <function_9c84>
; data inside code section at 0x9c6a -- 0x9c70
0x9c6a:     8d b6 00 00 00 00                                  |......          |
; function: function_9c70 at 0x9c70 -- 0x9c77
0x9c70:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x9c74:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x9c77 -- 0x9c78
0x9c77:     e8                                                 |.               |
; dynamically linked function: pthread_cond_wait at 0x9c78 -- 0x9c79
; data inside code section at 0x9c79 -- 0x9c84
0x9c79:     ff ff ff 85 c0 75 58 0f  b6 53 48                  |.....uX..SH     |
; function: function_9c84 at 0x9c84 -- 0x9c90
0x9c84:     84 d2                              	test dl, dl
0x9c86:     75 e8                              	jne 0x9c70 <function_9c70>
0x9c88:     83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x9c8c:     c6 43 48 01                        	mov byte ptr [ebx + 0x48], 1
; data inside code section at 0x9c90 -- 0x9c91
0x9c90:     e8                                                 |.               |
; dynamically linked function: pthread_self at 0x9c91 -- 0x9c92
; data inside code section at 0x9c92 -- 0x9c9f
0x9c92:     ff ff ff 80 7c 24 18 00  89 43 4c 75 21            |....|$...CLu!   |
; function: function_9c9f at 0x9c9f -- 0x9cb2
0x9c9f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9ca3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9caa:     75 55                              	jne 0x9d01 <function_9d01>
0x9cac:     83 c4 24                           	add esp, 0x24
0x9caf:     5b                                 	pop ebx
0x9cb0:     5e                                 	pop esi
0x9cb1:     c3                                 	ret 
; function: function_9cb2 at 0x9cb2 -- 0x9cc7
0x9cb2:     83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x9cb6:     80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x9cbb:     74 e2                              	je 0x9c9f <function_9c9f>
0x9cbd:     8d 76 00                           	lea esi, [esi]
0x9cc0:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x9cc4:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x9cc7 -- 0x9cc8
0x9cc7:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x9cc8 -- 0x9cc9
; data inside code section at 0x9cc9 -- 0x9cf8
0x9cc9:     ff ff ff 85 c0 74 cf e8  19 38 00 00 8d 76 00 c7   |.....t...8...v..|
0x9cd9:     44 24 0c 90 4c 00 00 c7  44 24 08 85 00 00 00 c7   |D$..L...D$......|
0x9ce9:     44 24 04 c8 32 00 00 c7  04 24 12 20 00 00 e8      |D$..2....$. ... |
; dynamically linked function: __assert_fail at 0x9cf8 -- 0x9cf9
; data inside code section at 0x9cf9 -- 0x9d01
0x9cf9:     ff ff ff e8 b9 37 00 00                            |.....7..        |
; function: function_9d01 at 0x9d01 -- 0x9d02
; dynamically linked function: __stack_chk_fail at 0x9d02 -- 0x9d03
; data inside code section at 0x9d03 -- 0x9d07
0x9d03:     ff ff ff 89                                        |....            |
; function: function_9d07 at 0x9d07 -- 0x9d08
0x9d07:     c3                                 	ret 
; data inside code section at 0x9d08 -- 0x9d18
0x9d08:     8d 44 24 14 89 04 24 e8  ac 8a 00 00 89 1c 24 e8   |.D$...$.......$.|
; dynamically linked function: _Unwind_Resume at 0x9d18 -- 0x9d19
; data inside code section at 0x9d19 -- 0x9d1c
0x9d19:     ff ff ff                                           |...             |
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv at 0x9d20 -- 0x9d37
0x9d20:     53                                 	push ebx
0x9d21:     83 ec 28                           	sub esp, 0x28
0x9d24:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x9d28:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9d2e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9d32:     31 c0                              	xor eax, eax
0x9d34:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x9d37 -- 0x9d38
0x9d37:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x9d38 -- 0x9d39
; data inside code section at 0x9d39 -- 0x9d4d
0x9d39:     ff ff ff 85 c0 75 46 8b  43 50 83 e8 01 85 c0 89   |.....uF.CP......|
0x9d49:     43 50 74 33                                        |CPt3            |
; function: function_9d4d at 0x9d4d -- 0x9d4e
; data inside code section at 0x9d4e -- 0x9d54
0x9d4e:     43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x9d54 -- 0x9d55
; data inside code section at 0x9d55 -- 0x9d60
0x9d55:     ff ff ff 85 c0 75 34 89  1c 24 e8                  |.....u4..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x9d60 -- 0x9d61
; data inside code section at 0x9d61 -- 0x9d63
0x9d61:     ff ff                                              |..              |
; function: function_9d63 at 0x9d63 -- 0x9d7a
0x9d63:     ff 85 c0 75 2d 8b                  	inc dword ptr [ebp - 0x74d28a40]
0x9d69:     44                                 	inc esp
0x9d6a:     24 1c                              	and al, 0x1c
0x9d6c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9d73:     75 16                              	jne 0x9d8b <function_9d63+0x16>
0x9d75:     83 c4 28                           	add esp, 0x28
0x9d78:     5b                                 	pop ebx
0x9d79:     c3                                 	ret 
; data inside code section at 0x9d7a -- 0x9d80
0x9d7a:     8d b6 00 00 00 00                                  |......          |
; function: function_9d80 at 0x9d80 -- 0x9d86
0x9d80:     c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x9d84:     eb c7                              	jmp 0x9d4d <function_9d4d>
; function: function_9d86 at 0x9d86 -- 0x9d8b
0x9d86:     e8 2f 38 00 00                     	call 0xd5ba <_ZdlPv>
; data inside code section at 0x9d8b -- 0x9d8c
0x9d8b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9d8c -- 0x9d8d
; data inside code section at 0x9d8d -- 0x9d9a
0x9d8d:     ff ff ff e8 8d 38 00 00  e8 54 38 00 00            |.....8...T8..   |
; section: .text._ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC2ERS3_PKcS7_ib
; function: _ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib at 0x9da0 -- 0x9dd3
0x9da0:     83 ec 2c                           	sub esp, 0x2c
0x9da3:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x9da7:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x9dab:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x9daf:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x9db3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9db9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9dbd:     31 c0                              	xor eax, eax
0x9dbf:     80 7c 24 44 00                     	cmp byte ptr [esp + 0x44], 0
0x9dc4:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x9dc8:     89 33                              	mov dword ptr [ebx], esi
0x9dca:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x9dce:     89 34 24                           	mov dword ptr [esp], esi
0x9dd1:     74 25                              	je 0x9df8 <function_9df8>
; data inside code section at 0x9dd3 -- 0x9dd4
0x9dd3:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x9dd4 -- 0x9dd5
; data inside code section at 0x9dd5 -- 0x9de3
0x9dd5:     ff ff ff 85 c0 75 6c 80  7e 48 00 74 3e e8         |.....ul.~H.t>.  |
; dynamically linked function: pthread_self at 0x9de3 -- 0x9de4
; data inside code section at 0x9de4 -- 0x9de7
0x9de4:     ff ff ff                                           |...             |
; function: function_9de7 at 0x9de7 -- 0x9df2
0x9de7:     3b 46 4c                           	cmp eax, dword ptr [esi + 0x4c]
0x9dea:     74 39                              	je 0x9e25 <function_9e25>
0x9dec:     31 ff                              	xor edi, edi
0x9dee:     66 90                              	nop 
0x9df0:     eb 43                              	jmp 0x9e35 <function_9e35>
; data inside code section at 0x9df2 -- 0x9df8
0x9df2:     8d b6 00 00 00 00                                  |......          |
; function: function_9df8 at 0x9df8 -- 0x9e1e
0x9df8:     e8 c3 9b 00 00                     	call 0x139c0 <function_139c0>
0x9dfd:     c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x9e01:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9e05:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9e0c:     75 3f                              	jne 0x9e4d <function_9e4d>
0x9e0e:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x9e12:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x9e16:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x9e1a:     83 c4 2c                           	add esp, 0x2c
0x9e1d:     c3                                 	ret 
; data inside code section at 0x9e1e -- 0x9e21
0x9e1e:     66 90 e8                                           |f..             |
; dynamically linked function: pthread_self at 0x9e21 -- 0x9e22
; data inside code section at 0x9e22 -- 0x9e25
0x9e22:     ff ff ff                                           |...             |
; function: function_9e25 at 0x9e25 -- 0x9e35
0x9e25:     83 46 50 01                        	add dword ptr [esi + 0x50], 1
0x9e29:     bf 01 00 00 00                     	mov edi, 1
0x9e2e:     c6 46 48 01                        	mov byte ptr [esi + 0x48], 1
0x9e32:     89 46 4c                           	mov dword ptr [esi + 0x4c], eax
; function: function_9e35 at 0x9e35 -- 0x9e38
0x9e35:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x9e38 -- 0x9e39
0x9e38:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x9e39 -- 0x9e3a
; data inside code section at 0x9e3a -- 0x9e3c
0x9e3a:     ff ff                                              |..              |
; function: function_9e3c at 0x9e3c -- 0x9e48
0x9e3c:     ff 85 c0 75 11 89                  	inc dword ptr [ebp - 0x76ee8a40]
0x9e42:     f8                                 	clc 
0x9e43:     88 43 04                           	mov byte ptr [ebx + 4], al
0x9e46:     eb b9                              	jmp 0x9e01
; data inside code section at 0x9e48 -- 0x9e4d
0x9e48:     e8 ed 37 00 00                                     |..7..           |
; function: function_9e4d at 0x9e4d -- 0x9e4e
; dynamically linked function: __stack_chk_fail at 0x9e4e -- 0x9e4f
; data inside code section at 0x9e4f -- 0x9e6d
0x9e4f:     ff ff ff e8 17 38 00 00  80 7b 04 00 89 c6 74 0a   |.....8...{....t.|
0x9e5f:     8b 03 89 04 24 e8 57 9c  00 00 89 34 24 e8         |....$.W....4$.  |
; dynamically linked function: _Unwind_Resume at 0x9e6d -- 0x9e6e
; data inside code section at 0x9e6e -- 0x9e71
0x9e6e:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorISsSaISsEED2Ev
; function: _ZNSt6vectorISsSaISsEED1Ev at 0x9e80 -- 0x9ea6
0x9e80:     57                                 	push edi
0x9e81:     56                                 	push esi
0x9e82:     53                                 	push ebx
0x9e83:     83 ec 20                           	sub esp, 0x20
0x9e86:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x9e8a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9e90:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9e94:     31 c0                              	xor eax, eax
0x9e96:     8b 77 04                           	mov esi, dword ptr [edi + 4]
0x9e99:     8b 1f                              	mov ebx, dword ptr [edi]
0x9e9b:     39 de                              	cmp esi, ebx
0x9e9d:     74 12                              	je 0x9eb1 <function_9eb1>
0x9e9f:     90                                 	nop 
0x9ea0:     89 1c 24                           	mov dword ptr [esp], ebx
0x9ea3:     83 c3 04                           	add ebx, 4
; data inside code section at 0x9ea6 -- 0x9ea7
0x9ea6:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x9ea7 -- 0x9ea8
; data inside code section at 0x9ea8 -- 0x9eb1
0x9ea8:     ff ff ff 39 de 75 f1 8b  1f                        |...9.u...       |
; function: function_9eb1 at 0x9eb1 -- 0x9ecc
0x9eb1:     85 db                              	test ebx, ebx
0x9eb3:     74 23                              	je 0x9ed8 <function_9ed8>
0x9eb5:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9eb9:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9ec0:     75 2a                              	jne 0x9eec <function_9eec>
0x9ec2:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x9ec6:     83 c4 20                           	add esp, 0x20
0x9ec9:     5b                                 	pop ebx
0x9eca:     5e                                 	pop esi
0x9ecb:     5f                                 	pop edi
; data inside code section at 0x9ecc -- 0x9ecd
0x9ecc:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x9ecd -- 0x9ece
; data inside code section at 0x9ece -- 0x9ed8
0x9ece:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_9ed8 at 0x9ed8 -- 0x9eec
0x9ed8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9edc:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9ee3:     75 07                              	jne 0x9eec <function_9eec>
0x9ee5:     83 c4 20                           	add esp, 0x20
0x9ee8:     5b                                 	pop ebx
0x9ee9:     5e                                 	pop esi
0x9eea:     5f                                 	pop edi
0x9eeb:     c3                                 	ret 
; function: function_9eec at 0x9eec -- 0x9eed
; dynamically linked function: __stack_chk_fail at 0x9eed -- 0x9eee
; data inside code section at 0x9eee -- 0x9ef1
0x9eee:     ff ff ff                                           |...             |
; section: .text._ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
; function: _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ at 0x9f00 -- 0x9f2a
0x9f00:     83 ec 2c                           	sub esp, 0x2c
0x9f03:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x9f07:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x9f0b:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x9f0f:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x9f13:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9f19:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9f1d:     31 c0                              	xor eax, eax
0x9f1f:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x9f23:     89 1c 24                           	mov dword ptr [esp], ebx
0x9f26:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x9f2a -- 0x9f2b
0x9f2a:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x9f2b -- 0x9f2c
; data inside code section at 0x9f2c -- 0x9f37
0x9f2c:     ff ff ff 89 74 24 04 89  1c 24 e8                  |....t$...$.     |
; dynamically linked function: _ZNSs6appendERKSs at 0x9f37 -- 0x9f38
; data inside code section at 0x9f38 -- 0x9f3a
0x9f38:     ff ff                                              |..              |
; function: function_9f3a at 0x9f3a -- 0x9f58
0x9f3a:     ff 8b 54 24 1c 65                  	dec dword ptr [ebx + 0x651c2454]
0x9f40:     33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x9f46:     89 d8                              	mov eax, ebx
0x9f48:     75 0e                              	jne 0x9f58 <function_9f3a+0x1b>
0x9f4a:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x9f4e:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x9f52:     83 c4 2c                           	add esp, 0x2c
0x9f55:     c2 04 00                           	ret 4
; data inside code section at 0x9f58 -- 0x9f59
0x9f58:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9f59 -- 0x9f5a
; data inside code section at 0x9f5a -- 0x9f63
0x9f5a:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x9f63 -- 0x9f64
; data inside code section at 0x9f64 -- 0x9f6b
0x9f64:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x9f6b -- 0x9f6c
; data inside code section at 0x9f6c -- 0x9f6f
0x9f6c:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_ at 0x9f70 -- 0x9f8c
0x9f70:     56                                 	push esi
0x9f71:     53                                 	push ebx
0x9f72:     83 ec 24                           	sub esp, 0x24
0x9f75:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x9f79:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x9f7d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x9f83:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x9f87:     31 c0                              	xor eax, eax
0x9f89:     8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x9f8c -- 0x9f8e
0x9f8c:     c7 03                                              |..              |
; dynamically linked function: _ZTVSt13runtime_error at 0x9f8e -- 0x9f9c
; data inside code section at 0x9f9c -- 0x9f9d
0x9f9c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x9f9d -- 0x9f9e
; data inside code section at 0x9f9e -- 0x9fa0
0x9f9e:     ff ff                                              |..              |
; function: function_9fa0 at 0x9fa0 -- 0x9ff2
0x9fa0:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x9fa6:     48                                 	dec eax
0x9fa7:     48                                 	dec eax
0x9fa8:     01 00                              	add dword ptr [eax], eax
0x9faa:     c7 43 08 68 47 01 00               	mov dword ptr [ebx + 8], 0x14768
0x9fb1:     85 c0                              	test eax, eax
0x9fb3:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x9fb6:     74 08                              	je 0x9fc0 <function_9fa0+0x20>
0x9fb8:     8b 10                              	mov edx, dword ptr [eax]
0x9fba:     89 04 24                           	mov dword ptr [esp], eax
0x9fbd:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x9fc0:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x9fc3:     c7 43 08 8c 48 01 00               	mov dword ptr [ebx + 8], 0x1488c
0x9fca:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x9fcd:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x9fd0:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x9fd3:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x9fd6:     c7 03 78 48 01 00                  	mov dword ptr [ebx], 0x14878
0x9fdc:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x9fdf:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x9fe3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x9fea:     75 06                              	jne 0x9ff2 <function_9fa0+0x51>
0x9fec:     83 c4 24                           	add esp, 0x24
0x9fef:     5b                                 	pop ebx
0x9ff0:     5e                                 	pop esi
0x9ff1:     c3                                 	ret 
; data inside code section at 0x9ff2 -- 0x9ff3
0x9ff2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9ff3 -- 0x9ff4
; data inside code section at 0x9ff4 -- 0xa005
0x9ff4:     ff ff ff 89 c6 89 1c 24  e8 bf 27 00 00 89 34 24   |.......$..'...4$|
0xa004:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xa005 -- 0xa006
; data inside code section at 0xa006 -- 0xa00f
0xa006:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xa00f -- 0xa010
; data inside code section at 0xa010 -- 0xa017
0xa010:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xa017 -- 0xa018
; data inside code section at 0xa018 -- 0xa01b
0xa018:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0xa020 -- 0xa027
0xa020:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xa025:     eb 09                              	jmp 0xa030 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv>
; data inside code section at 0xa027 -- 0xa030
0xa027:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0xa030 -- 0xa04c
0xa030:     56                                 	push esi
0xa031:     53                                 	push ebx
0xa032:     83 ec 24                           	sub esp, 0x24
0xa035:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xa039:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa03f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa043:     31 c0                              	xor eax, eax
0xa045:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xa04c -- 0xa04d
0xa04c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0xa04d -- 0xa04e
; data inside code section at 0xa04e -- 0xa050
0xa04e:     ff ff                                              |..              |
; function: function_a050 at 0xa050 -- 0xa057
0xa050:     ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0xa056:     c3                                 	ret 
; data inside code section at 0xa057 -- 0xa087
0xa057:     89 04 24 e8 31 9f 00 00  c7 03 b8 48 01 00 c7 43   |..$.1......H...C|
0xa067:     08 d4 48 01 00 c7 43 1c  e4 48 01 00 c7 44 24 08   |..H...C..H...D$.|
0xa077:     70 45 00 00 c7 44 24 04  10 49 01 00 89 1c 24 e8   |pE...D$..I....$.|
; dynamically linked function: __cxa_throw at 0xa087 -- 0xa088
; data inside code section at 0xa088 -- 0xa091
0xa088:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0xa091 -- 0xa092
; data inside code section at 0xa092 -- 0xa099
0xa092:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xa099 -- 0xa09a
; data inside code section at 0xa09a -- 0xa09d
0xa09a:     ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_ at 0xa0a0 -- 0xa0bc
0xa0a0:     56                                 	push esi
0xa0a1:     53                                 	push ebx
0xa0a2:     83 ec 44                           	sub esp, 0x44
0xa0a5:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xa0a9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa0af:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa0b3:     31 c0                              	xor eax, eax
0xa0b5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xa0bc -- 0xa0bd
0xa0bc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0xa0bd -- 0xa0be
; data inside code section at 0xa0be -- 0xa0c8
0xa0be:     ff ff ff 83 c6 04 c7 44  24 20                     |.......D$       |
; dynamically linked function: _ZTVSt13runtime_error at 0xa0c8 -- 0xa0d9
; data inside code section at 0xa0d9 -- 0xa0da
0xa0d9:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xa0da -- 0xa0db
; data inside code section at 0xa0db -- 0xa161
0xa0db:     ff ff ff 8d 74 24 20 c7  44 24 2c 00 00 00 00 c7   |....t$ .D$,.....|
0xa0eb:     44 24 30 00 00 00 00 c7  44 24 34 00 00 00 00 c7   |D$0.....D$4.....|
0xa0fb:     44 24 38 ff ff ff ff c7  44 24 20 78 48 01 00 c7   |D$8.....D$ xH...|
0xa10b:     44 24 28 8c 48 01 00 89  74 24 04 89 1c 24 e8 f2   |D$(.H...t$...$..|
0xa11b:     9e 00 00 8d 44 24 28 c7  03 b8 48 01 00 c7 43 08   |....D$(...H...C.|
0xa12b:     d4 48 01 00 c7 43 1c e4  48 01 00 89 44 24 04 8d   |.H...C..H...D$..|
0xa13b:     43 08 89 04 24 e8 db 8e  00 00 89 34 24 e8 d3 42   |C...$......4$..B|
0xa14b:     00 00 c7 44 24 08 70 45  00 00 c7 44 24 04 10 49   |...D$.pE...D$..I|
0xa15b:     01 00 89 1c 24 e8                                  |....$.          |
; dynamically linked function: __cxa_throw at 0xa161 -- 0xa162
; data inside code section at 0xa162 -- 0xa16f
0xa162:     ff ff ff 89 c6 8d 44 24  20 89 04 24 e8            |......D$ ..$.   |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xa16f -- 0xa170
; data inside code section at 0xa170 -- 0xa173
0xa170:     ff ff ff                                           |...             |
; function: function_a173 at 0xa173 -- 0xa174
; data inside code section at 0xa174 -- 0xa177
0xa174:     1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0xa177 -- 0xa178
; data inside code section at 0xa178 -- 0xa17f
0xa178:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xa17f -- 0xa180
; data inside code section at 0xa180 -- 0xa182
0xa180:     ff ff                                              |..              |
; function: function_a182 at 0xa182 -- 0xa1ae
0xa182:     ff c7                              	inc edi
0xa184:     43                                 	inc ebx
0xa185:     1c a0                              	sbb al, 0xa0
0xa187:     47                                 	inc edi
0xa188:     01 00                              	add dword ptr [eax], eax
0xa18a:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa18e:     89 1c 24                           	mov dword ptr [esp], ebx
0xa191:     e8 8a 42 00 00                     	call 0xe420 <__assert_fail>
0xa196:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa19a:     89 34 24                           	mov dword ptr [esp], esi
0xa19d:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa1a1:     e8 7a 42 00 00                     	call 0xe420 <__assert_fail>
0xa1a6:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa1aa:     89 c6                              	mov esi, eax
0xa1ac:     eb c5                              	jmp 0xa173 <function_a173>
; function: function_a1ae at 0xa1ae -- 0xa1b0
0xa1ae:     eb ea                              	jmp 0xa19a
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE at 0xa1b0 -- 0xa1e7
0xa1b0:     57                                 	push edi
0xa1b1:     56                                 	push esi
0xa1b2:     53                                 	push ebx
0xa1b3:     83 ec 20                           	sub esp, 0x20
0xa1b6:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xa1ba:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa1c0:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa1c4:     31 c0                              	xor eax, eax
0xa1c6:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xa1ca:     85 db                              	test ebx, ebx
0xa1cc:     75 04                              	jne 0xa1d2 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE+0x22>
0xa1ce:     eb 20                              	jmp 0xa1f0 <function_a1f0>
0xa1d0:     89 f3                              	mov ebx, esi
0xa1d2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xa1d5:     89 3c 24                           	mov dword ptr [esp], edi
0xa1d8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa1dc:     e8 7f a1 00 00                     	call 0x14360 <function_14360>
0xa1e1:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xa1e4:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xa1e7 -- 0xa1e8
0xa1e7:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa1e8 -- 0xa1e9
; data inside code section at 0xa1e9 -- 0xa1f0
0xa1e9:     ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_a1f0 at 0xa1f0 -- 0xa204
0xa1f0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa1f4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa1fb:     75 07                              	jne 0xa204 <function_a1f0+0x13>
0xa1fd:     83 c4 20                           	add esp, 0x20
0xa200:     5b                                 	pop ebx
0xa201:     5e                                 	pop esi
0xa202:     5f                                 	pop edi
0xa203:     c3                                 	ret 
; data inside code section at 0xa204 -- 0xa205
0xa204:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa205 -- 0xa206
; data inside code section at 0xa206 -- 0xa209
0xa206:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE at 0xa210 -- 0xa24a
0xa210:     57                                 	push edi
0xa211:     56                                 	push esi
0xa212:     53                                 	push ebx
0xa213:     83 ec 20                           	sub esp, 0x20
0xa216:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xa21a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa220:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa224:     31 c0                              	xor eax, eax
0xa226:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xa22a:     85 db                              	test ebx, ebx
0xa22c:     75 04                              	jne 0xa232 <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE+0x22>
0xa22e:     eb 2b                              	jmp 0xa25b <function_a25b>
0xa230:     89 f3                              	mov ebx, esi
0xa232:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xa235:     89 3c 24                           	mov dword ptr [esp], edi
0xa238:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa23c:     e8 df a1 00 00                     	call 0x14420 <function_14420>
0xa241:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xa244:     8d 43 10                           	lea eax, [ebx + 0x10]
0xa247:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa24a -- 0xa24b
0xa24a:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xa24b -- 0xa24c
; data inside code section at 0xa24c -- 0xa253
0xa24c:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xa253 -- 0xa254
; data inside code section at 0xa254 -- 0xa25b
0xa254:     ff ff ff 85 f6 75 d5                               |.....u.         |
; function: function_a25b at 0xa25b -- 0xa26f
0xa25b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa25f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa266:     75 07                              	jne 0xa26f <function_a25b+0x13>
0xa268:     83 c4 20                           	add esp, 0x20
0xa26b:     5b                                 	pop ebx
0xa26c:     5e                                 	pop esi
0xa26d:     5f                                 	pop edi
0xa26e:     c3                                 	ret 
; data inside code section at 0xa26f -- 0xa270
0xa26f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa270 -- 0xa271
; data inside code section at 0xa271 -- 0xa274
0xa271:     ff ff ff                                           |...             |
; section: .text._ZN14CUnsignedAlertD2Ev
; function: _ZN14CUnsignedAlertD1Ev at 0xa280 -- 0xa29a
0xa280:     53                                 	push ebx
0xa281:     83 ec 28                           	sub esp, 0x28
0xa284:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa288:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa28e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa292:     31 c0                              	xor eax, eax
0xa294:     8d 43 60                           	lea eax, [ebx + 0x60]
0xa297:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa29a -- 0xa29b
0xa29a:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xa29b -- 0xa29c
; data inside code section at 0xa29c -- 0xa2a6
0xa29c:     ff ff ff 8d 43 5c 89 04  24 e8                     |....C\..$.      |
; dynamically linked function: _ZNSsD1Ev at 0xa2a6 -- 0xa2a7
; data inside code section at 0xa2a7 -- 0xa2b1
0xa2a7:     ff ff ff 8d 43 58 89 04  24 e8                     |....CX..$.      |
; dynamically linked function: _ZNSsD1Ev at 0xa2b1 -- 0xa2b2
; data inside code section at 0xa2b2 -- 0xa2b4
0xa2b2:     ff ff                                              |..              |
; function: function_a2b4 at 0xa2b4 -- 0xa2f0
0xa2b4:     ff 8b 43 44 89 44                  	dec dword ptr [ebx + 0x44894443]
0xa2ba:     24 04                              	and al, 4
0xa2bc:     8d 43 3c                           	lea eax, [ebx + 0x3c]
0xa2bf:     89 04 24                           	mov dword ptr [esp], eax
0xa2c2:     e8 c9 a1 00 00                     	call 0x14490 <function_14490>
0xa2c7:     8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0xa2ca:     83 c3 1c                           	add ebx, 0x1c
0xa2cd:     89 1c 24                           	mov dword ptr [esp], ebx
0xa2d0:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa2d4:     e8 57 a1 00 00                     	call 0x14430 <function_14430>
0xa2d9:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa2dd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa2e4:     75 05                              	jne 0xa2eb <function_a2b4+0x37>
0xa2e6:     83 c4 28                           	add esp, 0x28
0xa2e9:     5b                                 	pop ebx
0xa2ea:     c3                                 	ret 
0xa2eb:     90                                 	nop 
0xa2ec:     8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0xa2f0 -- 0xa2f1
0xa2f0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa2f1 -- 0xa2f2
; data inside code section at 0xa2f2 -- 0xa2f5
0xa2f2:     ff ff ff                                           |...             |
; section: .text._ZN6CAlertD2Ev
; function: _ZN6CAlertD1Ev at 0xa300 -- 0xa31e
0xa300:     53                                 	push ebx
0xa301:     83 ec 28                           	sub esp, 0x28
0xa304:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa308:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa30e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa312:     31 c0                              	xor eax, eax
0xa314:     8b 43 70                           	mov eax, dword ptr [ebx + 0x70]
0xa317:     85 c0                              	test eax, eax
0xa319:     74 08                              	je 0xa323 <function_a323>
0xa31b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa31e -- 0xa31f
0xa31e:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa31f -- 0xa320
; data inside code section at 0xa320 -- 0xa323
0xa320:     ff ff ff                                           |...             |
; function: function_a323 at 0xa323 -- 0xa32d
0xa323:     8b 43 64                           	mov eax, dword ptr [ebx + 0x64]
0xa326:     85 c0                              	test eax, eax
0xa328:     74 08                              	je 0xa332 <function_a332>
0xa32a:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa32d -- 0xa32e
0xa32d:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa32e -- 0xa32f
; data inside code section at 0xa32f -- 0xa332
0xa32f:     ff ff ff                                           |...             |
; function: function_a332 at 0xa332 -- 0xa338
0xa332:     8d 43 60                           	lea eax, [ebx + 0x60]
0xa335:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xa338 -- 0xa339
0xa338:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xa339 -- 0xa33a
; data inside code section at 0xa33a -- 0xa344
0xa33a:     ff ff ff 8d 43 5c 89 04  24 e8                     |....C\..$.      |
; dynamically linked function: _ZNSsD1Ev at 0xa344 -- 0xa345
; data inside code section at 0xa345 -- 0xa34f
0xa345:     ff ff ff 8d 43 58 89 04  24 e8                     |....CX..$.      |
; dynamically linked function: _ZNSsD1Ev at 0xa34f -- 0xa350
; data inside code section at 0xa350 -- 0xa352
0xa350:     ff ff                                              |..              |
; function: function_a352 at 0xa352 -- 0xa389
0xa352:     ff 8b 43 44 89 44                  	dec dword ptr [ebx + 0x44894443]
0xa358:     24 04                              	and al, 4
0xa35a:     8d 43 3c                           	lea eax, [ebx + 0x3c]
0xa35d:     89 04 24                           	mov dword ptr [esp], eax
0xa360:     e8 ab a1 00 00                     	call 0x14510
0xa365:     8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0xa368:     83 c3 1c                           	add ebx, 0x1c
0xa36b:     89 1c 24                           	mov dword ptr [esp], ebx
0xa36e:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa372:     e8 39 a1 00 00                     	call 0x144b0
0xa377:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa37b:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa382:     75 05                              	jne 0xa389 <function_a352+0x36>
0xa384:     83 c4 28                           	add esp, 0x28
0xa387:     5b                                 	pop ebx
0xa388:     c3                                 	ret 
; data inside code section at 0xa389 -- 0xa38a
0xa389:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa38a -- 0xa38b
; data inside code section at 0xa38b -- 0xa38e
0xa38b:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS0_10connectionES7_S8_EEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS0_10connectionES7_S8_EEENS0_5mutexEE12slot_invokerEED1Ev at 0xa390 -- 0xa3d3
0xa390:     53                                 	push ebx
0xa391:     83 ec 28                           	sub esp, 0x28
0xa394:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xa398:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa39e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xa3a2:     31 c0                              	xor eax, eax
0xa3a4:     8b 93 80 00 00 00                  	mov edx, dword ptr [ebx + 0x80]
0xa3aa:     85 d2                              	test edx, edx
0xa3ac:     74 2a                              	je 0xa3d8 <function_a3d8>
0xa3ae:     8b 43 7c                           	mov eax, dword ptr [ebx + 0x7c]
0xa3b1:     83 f8 09                           	cmp eax, 9
0xa3b4:     76 67                              	jbe 0xa41d <function_a41d>
0xa3b6:     8d 4b 04                           	lea ecx, [ebx + 4]
0xa3b9:     39 ca                              	cmp edx, ecx
0xa3bb:     74 5b                              	je 0xa418 <function_a418>
0xa3bd:     8b 8b 84 00 00 00                  	mov ecx, dword ptr [ebx + 0x84]
0xa3c3:     39 c8                              	cmp eax, ecx
0xa3c5:     72 56                              	jb 0xa41d <function_a41d>
0xa3c7:     85 c9                              	test ecx, ecx
0xa3c9:     75 2d                              	jne 0xa3f8 <function_a3f8>
0xa3cb:     83 f8 0a                           	cmp eax, 0xa
0xa3ce:     76 08                              	jbe 0xa3d8 <function_a3d8>
0xa3d0:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xa3d3 -- 0xa3d4
0xa3d3:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xa3d4 -- 0xa3d5
; data inside code section at 0xa3d5 -- 0xa3d8
0xa3d5:     ff ff ff                                           |...             |
; function: function_a3d8 at 0xa3d8 -- 0xa3f2
0xa3d8:     80 3b 00                           	cmp byte ptr [ebx], 0
0xa3db:     74 03                              	je 0xa3e0 <function_a3d8+0x8>
0xa3dd:     c6 03 00                           	mov byte ptr [ebx], 0
0xa3e0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa3e4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa3eb:     75 35                              	jne 0xa422 <function_a422>
0xa3ed:     83 c4 28                           	add esp, 0x28
0xa3f0:     5b                                 	pop ebx
0xa3f1:     c3                                 	ret 
; data inside code section at 0xa3f2 -- 0xa3f8
0xa3f2:     8d b6 00 00 00 00                                  |......          |
; function: function_a3f8 at 0xa3f8 -- 0xa414
0xa3f8:     8d 93 84 00 00 00                  	lea edx, [ebx + 0x84]
0xa3fe:     8d 83 80 00 00 00                  	lea eax, [ebx + 0x80]
0xa404:     e8 57 01 00 00                     	call 0xa560
0xa409:     8b 43 7c                           	mov eax, dword ptr [ebx + 0x7c]
0xa40c:     8b 93 80 00 00 00                  	mov edx, dword ptr [ebx + 0x80]
0xa412:     eb b7                              	jmp 0xa3cb
; data inside code section at 0xa414 -- 0xa418
0xa414:     8d 74 26 00                                        |.t&.            |
; function: function_a418 at 0xa418 -- 0xa41d
0xa418:     83 f8 0a                           	cmp eax, 0xa
0xa41b:     74 a0                              	je 0xa3bd
; function: function_a41d at 0xa41d -- 0xa422
0xa41d:     e8 74 39 00 00                     	call 0xdd96 <function_dd96>
; function: function_a422 at 0xa422 -- 0xa423
; dynamically linked function: __stack_chk_fail at 0xa423 -- 0xa424
; data inside code section at 0xa424 -- 0xa433
0xa424:     ff ff ff 80 3b 00 74 03  c6 03 00 89 04 24 e8      |....;.t......$. |
; dynamically linked function: _Unwind_Resume at 0xa433 -- 0xa434
; data inside code section at 0xa434 -- 0xa437
0xa434:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag at 0xa440 -- 0xa520
0xa440:     55                                 	push ebp
0xa441:     57                                 	push edi
0xa442:     56                                 	push esi
0xa443:     53                                 	push ebx
0xa444:     83 ec 3c                           	sub esp, 0x3c
0xa447:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0xa44b:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0xa44f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa455:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa459:     31 c0                              	xor eax, eax
0xa45b:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xa45f:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xa463:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xa467:     39 da                              	cmp edx, ebx
0xa469:     74 65                              	je 0xa4d0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x90>
0xa46b:     8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0xa46e:     89 dd                              	mov ebp, ebx
0xa470:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xa473:     29 d5                              	sub ebp, edx
0xa475:     29 c8                              	sub eax, ecx
0xa477:     39 c5                              	cmp ebp, eax
0xa479:     77 75                              	ja 0xa4f0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xb0>
0xa47b:     89 ca                              	mov edx, ecx
0xa47d:     29 f2                              	sub edx, esi
0xa47f:     39 d5                              	cmp ebp, edx
0xa481:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xa485:     0f 83 75 01 00 00                  	jae 0xa600 <function_a600>
0xa48b:     89 c8                              	mov eax, ecx
0xa48d:     29 e8                              	sub eax, ebp
0xa48f:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0xa493:     89 c8                              	mov eax, ecx
0xa495:     3b 4c 24 10                        	cmp ecx, dword ptr [esp + 0x10]
0xa499:     74 1b                              	je 0xa4b6 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x76>
0xa49b:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0xa49f:     90                                 	nop 
0xa4a0:     85 c0                              	test eax, eax
0xa4a2:     74 05                              	je 0xa4a9 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x69>
0xa4a4:     0f b6 1a                           	movzx ebx, byte ptr [edx]
0xa4a7:     88 18                              	mov byte ptr [eax], bl
0xa4a9:     83 c2 01                           	add edx, 1
0xa4ac:     83 c0 01                           	add eax, 1
0xa4af:     39 ca                              	cmp edx, ecx
0xa4b1:     75 ed                              	jne 0xa4a0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x60>
0xa4b3:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0xa4b6:     01 e8                              	add eax, ebp
0xa4b8:     89 47 04                           	mov dword ptr [edi + 4], eax
0xa4bb:     8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0xa4bf:     29 f0                              	sub eax, esi
0xa4c1:     0f 85 f1 01 00 00                  	jne 0xa6b8 <function_a6b8>
0xa4c7:     85 ed                              	test ebp, ebp
0xa4c9:     0f 85 d1 01 00 00                  	jne 0xa6a0 <function_a6a0>
0xa4cf:     90                                 	nop 
0xa4d0:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa4d4:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa4db:     0f 85 ee 01 00 00                  	jne 0xa6cf <function_a6cf>
0xa4e1:     83 c4 3c                           	add esp, 0x3c
0xa4e4:     5b                                 	pop ebx
0xa4e5:     5e                                 	pop esi
0xa4e6:     5f                                 	pop edi
0xa4e7:     5d                                 	pop ebp
0xa4e8:     c3                                 	ret 
; data inside code section at 0xa4e9 -- 0xa4f0
0xa4e9:     8d b4 26 00 00 00 00                               |..&....         |
0xa4f0:     8b 07                              	mov eax, dword ptr [edi]
0xa4f2:     29 c1                              	sub ecx, eax
0xa4f4:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xa4f8:     89 c8                              	mov eax, ecx
0xa4fa:     f7 d0                              	not eax
0xa4fc:     39 c5                              	cmp ebp, eax
0xa4fe:     0f 87 d0 01 00 00                  	ja 0xa6d4 <function_a6d4>
0xa504:     39 cd                              	cmp ebp, ecx
0xa506:     0f 42 e9                           	cmovb ebp, ecx
0xa509:     01 e9                              	add ecx, ebp
0xa50b:     c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0xa513:     0f 83 c7 00 00 00                  	jae 0xa5e0 <function_a5e0>
0xa519:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xa51d:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xa520 -- 0xa521
0xa520:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xa521 -- 0xa522
; data inside code section at 0xa522 -- 0xa52f
0xa522:     ff ff ff 89 44 24 10 8b  07 89 44 24 18            |....D$....D$.   |
; function: function_a52f at 0xa52f -- 0xa5b9
0xa52f:     39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0xa533:     8b 6c 24 10                        	mov ebp, dword ptr [esp + 0x10]
0xa537:     74 24                              	je 0xa55d <function_a52f+0x2e>
0xa539:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xa53d:     89 e8                              	mov eax, ebp
0xa53f:     90                                 	nop 
0xa540:     85 c0                              	test eax, eax
0xa542:     74 05                              	je 0xa549 <function_a52f+0x1a>
0xa544:     0f b6 0a                           	movzx ecx, byte ptr [edx]
0xa547:     88 08                              	mov byte ptr [eax], cl
0xa549:     83 c2 01                           	add edx, 1
0xa54c:     83 c0 01                           	add eax, 1
0xa54f:     39 f2                              	cmp edx, esi
0xa551:     75 ed                              	jne 0xa540 <function_a52f+0x11>
0xa553:     89 f5                              	mov ebp, esi
0xa555:     2b 6c 24 18                        	sub ebp, dword ptr [esp + 0x18]
0xa559:     03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0xa55d:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xa561:     89 ea                              	mov edx, ebp
0xa563:     90                                 	nop 
0xa564:     8d 74 26 00                        	lea esi, [esi]
0xa568:     85 d2                              	test edx, edx
0xa56a:     74 05                              	je 0xa571 <function_a52f+0x42>
0xa56c:     0f b6 08                           	movzx ecx, byte ptr [eax]
0xa56f:     88 0a                              	mov byte ptr [edx], cl
0xa571:     83 c0 01                           	add eax, 1
0xa574:     83 c2 01                           	add edx, 1
0xa577:     39 d8                              	cmp eax, ebx
0xa579:     75 ed                              	jne 0xa568 <function_a52f+0x39>
0xa57b:     2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0xa57f:     01 c5                              	add ebp, eax
0xa581:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0xa584:     39 f0                              	cmp eax, esi
0xa586:     74 1f                              	je 0xa5a7 <function_a52f+0x78>
0xa588:     89 f2                              	mov edx, esi
0xa58a:     89 e9                              	mov ecx, ebp
0xa58c:     8d 74 26 00                        	lea esi, [esi]
0xa590:     85 c9                              	test ecx, ecx
0xa592:     74 05                              	je 0xa599 <function_a52f+0x6a>
0xa594:     0f b6 1a                           	movzx ebx, byte ptr [edx]
0xa597:     88 19                              	mov byte ptr [ecx], bl
0xa599:     83 c2 01                           	add edx, 1
0xa59c:     83 c1 01                           	add ecx, 1
0xa59f:     39 c2                              	cmp edx, eax
0xa5a1:     75 ed                              	jne 0xa590 <function_a52f+0x61>
0xa5a3:     29 f2                              	sub edx, esi
0xa5a5:     01 d5                              	add ebp, edx
0xa5a7:     8b 1f                              	mov ebx, dword ptr [edi]
0xa5a9:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xa5ac:     85 db                              	test ebx, ebx
0xa5ae:     74 16                              	je 0xa5c6 <function_a5c6>
0xa5b0:     29 d8                              	sub eax, ebx
0xa5b2:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa5b6:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xa5b9 -- 0xa5ba
0xa5b9:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xa5ba -- 0xa5bb
; data inside code section at 0xa5bb -- 0xa5c2
0xa5bb:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xa5c2 -- 0xa5c3
; data inside code section at 0xa5c3 -- 0xa5c6
0xa5c3:     ff ff ff                                           |...             |
; function: function_a5c6 at 0xa5c6 -- 0xa5db
0xa5c6:     8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0xa5ca:     89 6f 04                           	mov dword ptr [edi + 4], ebp
0xa5cd:     89 07                              	mov dword ptr [edi], eax
0xa5cf:     03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0xa5d3:     89 47 08                           	mov dword ptr [edi + 8], eax
0xa5d6:     e9 f5 fe ff ff                     	jmp 0xa4d0
; data inside code section at 0xa5db -- 0xa5e0
0xa5db:     90 8d 74 26 00                                     |..t&.           |
; function: function_a5e0 at 0xa5e0 -- 0xa5fd
0xa5e0:     85 c9                              	test ecx, ecx
0xa5e2:     0f 85 f8 00 00 00                  	jne 0xa6e0 <function_a6e0>
0xa5e8:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0xa5f0:     c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0xa5f8:     e9 32 ff ff ff                     	jmp 0xa52f <function_a52f>
; data inside code section at 0xa5fd -- 0xa600
0xa5fd:     8d 76 00                                           |.v.             |
; function: function_a600 at 0xa600 -- 0xa698
0xa600:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xa604:     89 c8                              	mov eax, ecx
0xa606:     03 54 24 10                        	add edx, dword ptr [esp + 0x10]
0xa60a:     39 d3                              	cmp ebx, edx
0xa60c:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xa610:     74 20                              	je 0xa632 <function_a600+0x32>
0xa612:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0xa616:     66 90                              	nop 
0xa618:     85 c0                              	test eax, eax
0xa61a:     74 05                              	je 0xa621 <function_a600+0x21>
0xa61c:     0f b6 0a                           	movzx ecx, byte ptr [edx]
0xa61f:     88 08                              	mov byte ptr [eax], cl
0xa621:     83 c2 01                           	add edx, 1
0xa624:     83 c0 01                           	add eax, 1
0xa627:     39 da                              	cmp edx, ebx
0xa629:     75 ed                              	jne 0xa618 <function_a600+0x18>
0xa62b:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xa62f:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0xa632:     2b 6c 24 10                        	sub ebp, dword ptr [esp + 0x10]
0xa636:     01 c5                              	add ebp, eax
0xa638:     39 f1                              	cmp ecx, esi
0xa63a:     89 6f 04                           	mov dword ptr [edi + 4], ebp
0xa63d:     74 20                              	je 0xa65f <function_a600+0x5f>
0xa63f:     89 f0                              	mov eax, esi
0xa641:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xa648:     85 ed                              	test ebp, ebp
0xa64a:     74 06                              	je 0xa652 <function_a600+0x52>
0xa64c:     0f b6 10                           	movzx edx, byte ptr [eax]
0xa64f:     88 55 00                           	mov byte ptr [ebp], dl
0xa652:     83 c0 01                           	add eax, 1
0xa655:     83 c5 01                           	add ebp, 1
0xa658:     39 c8                              	cmp eax, ecx
0xa65a:     75 ec                              	jne 0xa648 <function_a600+0x48>
0xa65c:     8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0xa65f:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xa663:     03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0xa667:     2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0xa66b:     89 6f 04                           	mov dword ptr [edi + 4], ebp
0xa66e:     0f 84 5c fe ff ff                  	je 0xa4d0
0xa674:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa678:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa67f:     75 4e                              	jne 0xa6cf <function_a6cf>
0xa681:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0xa685:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xa689:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xa68d:     89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0xa691:     83 c4 3c                           	add esp, 0x3c
0xa694:     5b                                 	pop ebx
0xa695:     5e                                 	pop esi
0xa696:     5f                                 	pop edi
0xa697:     5d                                 	pop ebp
; data inside code section at 0xa698 -- 0xa699
0xa698:     e9                                                 |.               |
; dynamically linked function: memmove at 0xa699 -- 0xa69a
; data inside code section at 0xa69a -- 0xa6a0
0xa69a:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_a6a0 at 0xa6a0 -- 0xa6b3
0xa6a0:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa6a4:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa6ab:     75 22                              	jne 0xa6cf <function_a6cf>
0xa6ad:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xa6b1:     eb d2                              	jmp 0xa685
; data inside code section at 0xa6b3 -- 0xa6b8
0xa6b3:     90 8d 74 26 00                                     |..t&.           |
; function: function_a6b8 at 0xa6b8 -- 0xa6c5
0xa6b8:     29 c1                              	sub ecx, eax
0xa6ba:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xa6be:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xa6c2:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xa6c5 -- 0xa6c6
0xa6c5:     e8                                                 |.               |
; dynamically linked function: memmove at 0xa6c6 -- 0xa6c7
; data inside code section at 0xa6c7 -- 0xa6ca
0xa6c7:     ff ff ff                                           |...             |
; function: function_a6ca at 0xa6ca -- 0xa6cf
0xa6ca:     e9 f8 fd ff ff                     	jmp 0xa4c7
; function: function_a6cf at 0xa6cf -- 0xa6d0
; dynamically linked function: __stack_chk_fail at 0xa6d0 -- 0xa6d1
; data inside code section at 0xa6d1 -- 0xa6d4
0xa6d1:     ff ff ff                                           |...             |
; function: function_a6d4 at 0xa6d4 -- 0xa6db
0xa6d4:     c7 04 24 2f 20 00 00               	mov dword ptr [esp], 0x202f ; "vector::_M_range_insert"
; data inside code section at 0xa6db -- 0xa6dc
0xa6db:     e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0xa6dc -- 0xa6dd
; data inside code section at 0xa6dd -- 0xa6e0
0xa6dd:     ff ff ff                                           |...             |
; function: function_a6e0 at 0xa6e0 -- 0xa6e9
0xa6e0:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0xa6e4:     e9 30 fe ff ff                     	jmp 0xa519
; section: .text._ZN5CNode12BeginMessageEPKc
; function: _ZN5CNode12BeginMessageEPKc at 0xa6f0 -- 0xa753
0xa6f0:     83 ec 6c                           	sub esp, 0x6c
0xa6f3:     8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0xa6f7:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0xa6fb:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0xa6ff:     89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0xa703:     89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0xa707:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa70b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa711:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xa715:     31 c0                              	xor eax, eax
0xa717:     8d 43 60                           	lea eax, [ebx + 0x60]
0xa71a:     89 04 24                           	mov dword ptr [esp], eax
0xa71d:     89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0xa721:     e8 ea 9b 00 00                     	call 0x14310 <function_14310>
0xa726:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xa729:     2b 43 0c                           	sub eax, dword ptr [ebx + 0xc]
0xa72c:     3b 43 18                           	cmp eax, dword ptr [ebx + 0x18]
0xa72f:     0f 85 e9 00 00 00                  	jne 0xa81e <function_a81e>
0xa735:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa739:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0xa73d:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xa745:     8d 73 0c                           	lea esi, [ebx + 0xc]
0xa748:     89 3c 24                           	mov dword ptr [esp], edi
0xa74b:     8d 6c 24 38                        	lea ebp, [esp + 0x38]
0xa74f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0xa753 -- 0xa754
0xa753:     e8                                                 |.               |
; dynamically linked function: _ZN14CMessageHeaderC1EPKcj at 0xa754 -- 0xa755
; data inside code section at 0xa755 -- 0xa7e2
0xa755:     ff ff ff 8b 43 10 89 6c  24 0c c6 44 24 10 00 89   |....C..l$..D$...|
0xa765:     7c 24 08 89 44 24 04 89  34 24 e8 bc a3 00 00 8b   ||$..D$..4$......|
0xa775:     43 10 8d 54 24 44 89 54  24 0c 89 6c 24 08 8d 6c   |C..T$D.T$..l$..l|
0xa785:     24 30 c6 44 24 10 00 89  44 24 04 89 34 24 e8 98   |$0.D$...D$..4$..|
0xa795:     a3 00 00 8b 44 24 44 89  44 24 30 8b 43 10 c6 44   |....D$D.D$0.C..D|
0xa7a5:     24 10 00 89 7c 24 0c 89  6c 24 08 89 44 24 04 89   |$...|$..l$..D$..|
0xa7b5:     34 24 e8 74 a3 00 00 8b  44 24 48 89 44 24 30 8b   |4$.t....D$H.D$0.|
0xa7c5:     43 10 c6 44 24 10 00 89  7c 24 0c 89 6c 24 08 89   |C..D$...|$..l$..|
0xa7d5:     44 24 04 89 34 24 e8 50  a3 00 00 80 3d            |D$..4$.P....=   |
; dynamically linked function: fDebug at 0xa7e2 -- 0xa7f8
; data inside code section at 0xa7f8 -- 0xa7f9
0xa7f8:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xa7f9 -- 0xa7fa
; data inside code section at 0xa7fa -- 0xa7fc
0xa7fa:     ff ff                                              |..              |
; function: function_a7fc at 0xa7fc -- 0xa81e
0xa7fc:     ff 8b 44 24 4c 65                  	dec dword ptr [ebx + 0x654c2444]
0xa802:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xa808:     75 38                              	jne 0xa842 <function_a842>
0xa80a:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0xa80e:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xa812:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xa816:     8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0xa81a:     83 c4 6c                           	add esp, 0x6c
0xa81d:     c3                                 	ret 
; function: function_a81e at 0xa81e -- 0xa83d
0xa81e:     c7 44 24 0c b0 4b 00 00            	mov dword ptr [esp + 0xc], 0x4bb0 ; "void CNode::BeginMessage(const char*)"
0xa826:     c7 44 24 08 90 01 00 00            	mov dword ptr [esp + 8], 0x190
0xa82e:     c7 44 24 04 47 20 00 00            	mov dword ptr [esp + 4], 0x2047 ; "net.h"
0xa836:     c7 04 24 4d 20 00 00               	mov dword ptr [esp], 0x204d ; "ssSend.size() == 0"
; data inside code section at 0xa83d -- 0xa83e
0xa83d:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xa83e -- 0xa83f
; data inside code section at 0xa83f -- 0xa842
0xa83f:     ff ff ff                                           |...             |
; function: function_a842 at 0xa842 -- 0xa843
; dynamically linked function: __stack_chk_fail at 0xa843 -- 0xa844
; data inside code section at 0xa844 -- 0xa847
0xa844:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi at 0xa850 -- 0xa89e
0xa850:     83 ec 4c                           	sub esp, 0x4c
0xa853:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa859:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa85d:     31 c0                              	xor eax, eax
0xa85f:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xa863:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xa867:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xa86b:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xa86f:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0xa873:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xa877:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xa87b:     85 c0                              	test eax, eax
0xa87d:     8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0xa881:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xa885:     8d 4b 04                           	lea ecx, [ebx + 4]
0xa888:     bd 01 00 00 00                     	mov ebp, 1
0xa88d:     74 71                              	je 0xa900 <function_a900>
0xa88f:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xa893:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0xa897:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xa89e -- 0xa89f
0xa89e:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xa89f -- 0xa8a0
; data inside code section at 0xa8a0 -- 0xa8c9
0xa8a0:     ff ff ff 8b 54 24 1c 8b  4c 24 18 83 f8 f0 74 05   |....T$..L$....t.|
0xa8b0:     8b 12 89 50 10 89 44 24  04 89 44 24 1c 89 4c 24   |...P..D$..D$..L$|
0xa8c0:     0c 89 7c 24 08 89 2c 24  e8                        |..|$..,$.       |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xa8c9 -- 0xa8ca
; data inside code section at 0xa8ca -- 0xa8cc
0xa8ca:     ff ff                                              |..              |
; function: function_a8cc at 0xa8cc -- 0xa8fc
0xa8cc:     ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0xa8d2:     43                                 	inc ebx
0xa8d3:     14 01                              	adc al, 1
0xa8d5:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa8d9:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa8e0:     89 06                              	mov dword ptr [esi], eax
0xa8e2:     89 f0                              	mov eax, esi
0xa8e4:     75 30                              	jne 0xa916 <function_a916>
0xa8e6:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xa8ea:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xa8ee:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xa8f2:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xa8f6:     83 c4 4c                           	add esp, 0x4c
0xa8f9:     c2 04 00                           	ret 4
; data inside code section at 0xa8fc -- 0xa900
0xa8fc:     8d 74 26 00                                        |.t&.            |
; function: function_a900 at 0xa900 -- 0xa916
0xa900:     39 cf                              	cmp edi, ecx
0xa902:     74 8b                              	je 0xa88f
0xa904:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xa907:     39 02                              	cmp dword ptr [edx], eax
0xa909:     0f 9c c0                           	setl al
0xa90c:     0f b6 c0                           	movzx eax, al
0xa90f:     89 c5                              	mov ebp, eax
0xa911:     e9 79 ff ff ff                     	jmp 0xa88f
; function: function_a916 at 0xa916 -- 0xa917
; dynamically linked function: __stack_chk_fail at 0xa917 -- 0xa918
; data inside code section at 0xa918 -- 0xa91b
0xa918:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi at 0xa920 -- 0xa9b8
0xa920:     55                                 	push ebp
0xa921:     57                                 	push edi
0xa922:     56                                 	push esi
0xa923:     53                                 	push ebx
0xa924:     83 ec 4c                           	sub esp, 0x4c
0xa927:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xa92b:     8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0xa92f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa935:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa939:     31 c0                              	xor eax, eax
0xa93b:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xa93f:     8b 77 08                           	mov esi, dword ptr [edi + 8]
0xa942:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xa946:     85 f6                              	test esi, esi
0xa948:     74 5d                              	je 0xa9a7 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x87>
0xa94a:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xa94e:     8b 0a                              	mov ecx, dword ptr [edx]
0xa950:     eb 14                              	jmp 0xa966 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x46>
; data inside code section at 0xa952 -- 0xa958
0xa952:     8d b6 00 00 00 00                                  |......          |
0xa958:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xa95b:     bd 01 00 00 00                     	mov ebp, 1
0xa960:     85 c0                              	test eax, eax
0xa962:     74 12                              	je 0xa976 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x56>
0xa964:     89 c6                              	mov esi, eax
0xa966:     8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0xa969:     39 ca                              	cmp edx, ecx
0xa96b:     7f eb                              	jg 0xa958 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x38>
0xa96d:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xa970:     31 ed                              	xor ebp, ebp
0xa972:     85 c0                              	test eax, eax
0xa974:     75 ee                              	jne 0xa964 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x44>
0xa976:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xa97a:     89 ea                              	mov edx, ebp
0xa97c:     89 f0                              	mov eax, esi
0xa97e:     84 d2                              	test dl, dl
0xa980:     75 2e                              	jne 0xa9b0 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi+0x90>
0xa982:     39 4c 24 24                        	cmp dword ptr [esp + 0x24], ecx
0xa986:     7c 48                              	jl 0xa9d0 <function_a9d0>
0xa988:     89 03                              	mov dword ptr [ebx], eax
0xa98a:     c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0xa98e:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xa992:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa999:     89 d8                              	mov eax, ebx
0xa99b:     75 66                              	jne 0xaa03 <function_aa03>
0xa99d:     83 c4 4c                           	add esp, 0x4c
0xa9a0:     5b                                 	pop ebx
0xa9a1:     5e                                 	pop esi
0xa9a2:     5f                                 	pop edi
0xa9a3:     5d                                 	pop ebp
0xa9a4:     c2 04 00                           	ret 4
0xa9a7:     8d 77 04                           	lea esi, [edi + 4]
0xa9aa:     8d b6 00 00 00 00                  	lea esi, [esi]
0xa9b0:     3b 77 0c                           	cmp esi, dword ptr [edi + 0xc]
0xa9b3:     74 1b                              	je 0xa9d0 <function_a9d0>
0xa9b5:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xa9b8 -- 0xa9b9
0xa9b8:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xa9b9 -- 0xa9ba
; data inside code section at 0xa9ba -- 0xa9d0
0xa9ba:     ff ff ff 8b 54 24 28 8b  0a 8b 50 10 89 54 24 24   |....T$(...P..T$$|
0xa9ca:     39 4c 24 24 7d b8                                  |9L$$}.          |
; function: function_a9d0 at 0xa9d0 -- 0xaa03
0xa9d0:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xa9d4:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xa9d8:     89 04 24                           	mov dword ptr [esp], eax
0xa9db:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xa9df:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xa9e7:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xa9eb:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xa9ef:     e8 7c a7 00 00                     	call 0x15170 <_ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE>
0xa9f4:     83 ec 04                           	sub esp, 4
0xa9f7:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xa9fb:     c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0xa9ff:     89 03                              	mov dword ptr [ebx], eax
0xaa01:     eb 8b                              	jmp 0xa98e
; function: function_aa03 at 0xaa03 -- 0xaa04
; dynamically linked function: __stack_chk_fail at 0xaa04 -- 0xaa05
; data inside code section at 0xaa05 -- 0xaa08
0xaa05:     ff ff ff                                           |...             |
; section: .text._ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv
; function: _ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv at 0xaa10 -- 0xaa64
0xaa10:     83 ec 1c                           	sub esp, 0x1c
0xaa13:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaa17:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xaa1e:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xaa22:     31 d2                              	xor edx, edx
0xaa24:     8b 10                              	mov edx, dword ptr [eax]
0xaa26:     83 c2 0c                           	add edx, 0xc
0xaa29:     3b 50 08                           	cmp edx, dword ptr [eax + 8]
0xaa2c:     89 10                              	mov dword ptr [eax], edx
0xaa2e:     74 18                              	je 0xaa48 <_ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv+0x38>
0xaa30:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaa34:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaa3b:     75 27                              	jne 0xaa64 <_ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv+0x52>
0xaa3d:     83 c4 1c                           	add esp, 0x1c
0xaa40:     c3                                 	ret 
; data inside code section at 0xaa41 -- 0xaa48
0xaa41:     8d b4 26 00 00 00 00                               |..&....         |
0xaa48:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xaa4b:     8d 4a 04                           	lea ecx, [edx + 4]
0xaa4e:     89 48 0c                           	mov dword ptr [eax + 0xc], ecx
0xaa51:     8b 52 04                           	mov edx, dword ptr [edx + 4]
0xaa54:     8d 8a f8 01 00 00                  	lea ecx, [edx + 0x1f8]
0xaa5a:     89 50 04                           	mov dword ptr [eax + 4], edx
0xaa5d:     89 48 08                           	mov dword ptr [eax + 8], ecx
0xaa60:     89 10                              	mov dword ptr [eax], edx
0xaa62:     eb cc                              	jmp 0xaa30 <_ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv+0x20>
; data inside code section at 0xaa64 -- 0xaa65
0xaa64:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaa65 -- 0xaa66
; data inside code section at 0xaa66 -- 0xaa69
0xaa66:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_ at 0xaa70 -- 0xaab1
0xaa70:     55                                 	push ebp
0xaa71:     57                                 	push edi
0xaa72:     56                                 	push esi
0xaa73:     53                                 	push ebx
0xaa74:     83 ec 3c                           	sub esp, 0x3c
0xaa77:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xaa7b:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xaa7f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaa85:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xaa89:     31 c0                              	xor eax, eax
0xaa8b:     39 fd                              	cmp ebp, edi
0xaa8d:     74 7d                              	je 0xab0c <function_ab0c>
0xaa8f:     8b 07                              	mov eax, dword ptr [edi]
0xaa91:     8b 75 04                           	mov esi, dword ptr [ebp + 4]
0xaa94:     8b 5d 00                           	mov ebx, dword ptr [ebp]
0xaa97:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xaa9b:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xaa9e:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xaaa2:     89 f2                              	mov edx, esi
0xaaa4:     29 da                              	sub edx, ebx
0xaaa6:     39 c2                              	cmp edx, eax
0xaaa8:     76 7e                              	jbe 0xab28 <function_ab28>
0xaaaa:     89 14 24                           	mov dword ptr [esp], edx
0xaaad:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0xaab1 -- 0xaab2
0xaab1:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xaab2 -- 0xaab3
; data inside code section at 0xaab3 -- 0xaad2
0xaab3:     ff ff ff 39 f3 8b 54 24  14 89 c5 74 1b 89 c1 8d   |...9..T$...t....|
0xaac3:     b6 00 00 00 00 85 c9 74  05 0f b6 03 88 01 83      |.......t....... |
; function: function_aad2 at 0xaad2 -- 0xaad3
0xaad2:     c3                                 	ret 
; data inside code section at 0xaad3 -- 0xaaf2
0xaad3:     01 83 c1 01 39 f3 75 ed  8b 1f 8b 47 08 85 db 74   |....9.u....G...t|
0xaae3:     1e 29 d8 89 54 24 14 89  44 24 04 89 1c 24 e8      |.)..T$..D$...$. |
; dynamically linked function: OPENSSL_cleanse at 0xaaf2 -- 0xaaf3
; data inside code section at 0xaaf3 -- 0xaafa
0xaaf3:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xaafa -- 0xaafb
; data inside code section at 0xaafb -- 0xab09
0xaafb:     ff ff ff 8b 54 24 14 01  ea 89 2f 89 57 08         |....T$..../.W.  |
; function: function_ab09 at 0xab09 -- 0xab0c
0xab09:     89 57 04                           	mov dword ptr [edi + 4], edx
; function: function_ab0c at 0xab0c -- 0xab27
0xab0c:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xab10:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xab17:     89 f8                              	mov eax, edi
0xab19:     0f 85 c0 00 00 00                  	jne 0xabdf <function_abdf>
0xab1f:     83 c4 3c                           	add esp, 0x3c
0xab22:     5b                                 	pop ebx
0xab23:     5e                                 	pop esi
0xab24:     5f                                 	pop edi
0xab25:     5d                                 	pop ebp
0xab26:     c3                                 	ret 
; data inside code section at 0xab27 -- 0xab28
0xab27:     90                                                 |.               |
; function: function_ab28 at 0xab28 -- 0xab83
0xab28:     8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0xab2b:     89 c8                              	mov eax, ecx
0xab2d:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xab31:     39 c2                              	cmp edx, eax
0xab33:     77 0b                              	ja 0xab40 <function_ab28+0x18>
0xab35:     85 d2                              	test edx, edx
0xab37:     75 37                              	jne 0xab70 <function_ab28+0x48>
0xab39:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xab3d:     eb ca                              	jmp 0xab09 <function_ab09>
; data inside code section at 0xab3f -- 0xab40
0xab3f:     90                                                 |.               |
0xab40:     01 d8                              	add eax, ebx
0xab42:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0xab46:     29 d8                              	sub eax, ebx
0xab48:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xab4c:     75 4a                              	jne 0xab98 <function_ab98>
0xab4e:     3b 74 24 10                        	cmp esi, dword ptr [esp + 0x10]
0xab52:     8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0xab56:     74 7e                              	je 0xabd6 <function_abd6>
0xab58:     85 c9                              	test ecx, ecx
0xab5a:     74 05                              	je 0xab61 <function_ab28+0x39>
0xab5c:     0f b6 18                           	movzx ebx, byte ptr [eax]
0xab5f:     88 19                              	mov byte ptr [ecx], bl
0xab61:     83 c0 01                           	add eax, 1
0xab64:     83 c1 01                           	add ecx, 1
0xab67:     39 f0                              	cmp eax, esi
0xab69:     75 ed                              	jne 0xab58 <function_ab28+0x30>
0xab6b:     03 17                              	add edx, dword ptr [edi]
0xab6d:     eb 9a                              	jmp 0xab09 <function_ab09>
; data inside code section at 0xab6f -- 0xab70
0xab6f:     90                                                 |.               |
0xab70:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xab74:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xab78:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xab7c:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xab80:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xab83 -- 0xab84
0xab83:     e8                                                 |.               |
; dynamically linked function: memmove at 0xab84 -- 0xab85
; data inside code section at 0xab85 -- 0xab87
0xab85:     ff ff                                              |..              |
; function: function_ab87 at 0xab87 -- 0xab93
0xab87:     ff 8b 54 24 14 03                  	dec dword ptr [ebx + 0x3142454]
0xab8d:     17                                 	pop ss
0xab8e:     e9 76 ff ff ff                     	jmp 0xab09 <function_ab09>
; data inside code section at 0xab93 -- 0xab98
0xab93:     90 8d 74 26 00                                     |..t&.           |
; function: function_ab98 at 0xab98 -- 0xabab
0xab98:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xab9c:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xaba0:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xaba4:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xaba8:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xabab -- 0xabac
0xabab:     e8                                                 |.               |
; dynamically linked function: memmove at 0xabac -- 0xabad
; data inside code section at 0xabad -- 0xabaf
0xabad:     ff ff                                              |..              |
; function: function_abaf at 0xabaf -- 0xabd6
0xabaf:     ff 8b 07 8b 4f 04                  	dec dword ptr [ebx + 0x44f8b07]
0xabb5:     8b 75 04                           	mov esi, dword ptr [ebp + 4]
0xabb8:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xabbc:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xabc0:     89 c8                              	mov eax, ecx
0xabc2:     2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0xabc6:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0xabca:     8b 45 00                           	mov eax, dword ptr [ebp]
0xabcd:     01 44 24 10                        	add dword ptr [esp + 0x10], eax
0xabd1:     e9 78 ff ff ff                     	jmp 0xab4e
; function: function_abd6 at 0xabd6 -- 0xabdf
0xabd6:     03 54 24 18                        	add edx, dword ptr [esp + 0x18]
0xabda:     e9 2a ff ff ff                     	jmp 0xab09 <function_ab09>
; function: function_abdf at 0xabdf -- 0xabe0
; dynamically linked function: __stack_chk_fail at 0xabe0 -- 0xabe1
; data inside code section at 0xabe1 -- 0xabe4
0xabe1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E at 0xabf0 -- 0xac39
0xabf0:     57                                 	push edi
0xabf1:     56                                 	push esi
0xabf2:     53                                 	push ebx
0xabf3:     83 ec 20                           	sub esp, 0x20
0xabf6:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xabfa:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xac00:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xac04:     31 c0                              	xor eax, eax
0xac06:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xac0a:     85 db                              	test ebx, ebx
0xac0c:     75 0c                              	jne 0xac1a <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x2a>
0xac0e:     e9 9b 00 00 00                     	jmp 0xacae <function_acae>
; data inside code section at 0xac13 -- 0xac18
0xac13:     90 8d 74 26 00                                     |..t&.           |
0xac18:     89 f3                              	mov ebx, esi
0xac1a:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xac1d:     89 3c 24                           	mov dword ptr [esp], edi
0xac20:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xac24:     e8 b7 ab 00 00                     	call 0x157e0 <unknown_157e0>
0xac29:     8b 83 a0 00 00 00                  	mov eax, dword ptr [ebx + 0xa0]
0xac2f:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xac32:     85 c0                              	test eax, eax
0xac34:     74 08                              	je 0xac3e <function_ac3e>
0xac36:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xac39 -- 0xac3a
0xac39:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xac3a -- 0xac3b
; data inside code section at 0xac3b -- 0xac3e
0xac3b:     ff ff ff                                           |...             |
; function: function_ac3e at 0xac3e -- 0xac4b
0xac3e:     8b 83 94 00 00 00                  	mov eax, dword ptr [ebx + 0x94]
0xac44:     85 c0                              	test eax, eax
0xac46:     74 08                              	je 0xac50 <function_ac50>
0xac48:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xac4b -- 0xac4c
0xac4b:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xac4c -- 0xac4d
; data inside code section at 0xac4d -- 0xac50
0xac4d:     ff ff ff                                           |...             |
; function: function_ac50 at 0xac50 -- 0xac59
0xac50:     8d 83 90 00 00 00                  	lea eax, [ebx + 0x90]
0xac56:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xac59 -- 0xac5a
0xac59:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xac5a -- 0xac5b
; data inside code section at 0xac5b -- 0xac68
0xac5b:     ff ff ff 8d 83 8c 00 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0xac68 -- 0xac69
; data inside code section at 0xac69 -- 0xac76
0xac69:     ff ff ff 8d 83 88 00 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0xac76 -- 0xac77
; data inside code section at 0xac77 -- 0xaca2
0xac77:     ff ff ff 8b 43 74 89 44  24 04 8d 43 6c 89 04 24   |....Ct.D$..Cl..$|
0xac87:     e8 74 a1 00 00 8b 43 54  89 44 24 04 8d 43 4c 89   |.t....CT.D$..CL.|
0xac97:     04 24 e8 02 a1 00 00 89  1c 24 e8                  |.$.......$.     |
; dynamically linked function: _ZdlPv at 0xaca2 -- 0xaca3
; data inside code section at 0xaca3 -- 0xacae
0xaca3:     ff ff ff 85 f6 0f 85 6a  ff ff ff                  |.......j...     |
; function: function_acae at 0xacae -- 0xacc2
0xacae:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xacb2:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xacb9:     75 07                              	jne 0xacc2 <function_acae+0x13>
0xacbb:     83 c4 20                           	add esp, 0x20
0xacbe:     5b                                 	pop ebx
0xacbf:     5e                                 	pop esi
0xacc0:     5f                                 	pop edi
0xacc1:     c3                                 	ret 
; data inside code section at 0xacc2 -- 0xacc3
0xacc2:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xacc3 -- 0xacc4
; data inside code section at 0xacc4 -- 0xacc7
0xacc4:     ff ff ff                                           |...             |
; section: .text._ZNSt3mapI7uint2566CAlertSt4lessIS0_ESaISt4pairIKS0_S1_EEED2Ev
; function: _ZNSt3mapI7uint2566CAlertSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev at 0xacd0 -- 0xad04
0xacd0:     83 ec 2c                           	sub esp, 0x2c
0xacd3:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xacd7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xacde:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xace2:     31 d2                              	xor edx, edx
0xace4:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xace7:     89 04 24                           	mov dword ptr [esp], eax
0xacea:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xacee:     e8 cd ab 00 00                     	call 0x158c0 <unknown_158c0>
0xacf3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xacf7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xacfe:     75 04                              	jne 0xad04 <_ZNSt3mapI7uint2566CAlertSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev+0x33>
0xad00:     83 c4 2c                           	add esp, 0x2c
0xad03:     c3                                 	ret 
; data inside code section at 0xad04 -- 0xad05
0xad04:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xad05 -- 0xad06
; data inside code section at 0xad06 -- 0xad09
0xad06:     ff ff ff                                           |...             |
; section: .text._ZNKSt4lessI7uint256EclERKS0_S3_
; function: _ZNKSt4lessI7uint256EclERKS0_S3_ at 0xad10 -- 0xadcf
0xad10:     83 ec 5c                           	sub esp, 0x5c
0xad13:     8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0xad17:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xad1e:     89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0xad22:     31 c9                              	xor ecx, ecx
0xad24:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0xad28:     8b 0a                              	mov ecx, dword ptr [edx]
0xad2a:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xad2e:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0xad31:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0xad35:     8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0xad38:     89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0xad3c:     8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0xad3f:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xad43:     8b 4a 10                           	mov ecx, dword ptr [edx + 0x10]
0xad46:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0xad4a:     8b 4a 14                           	mov ecx, dword ptr [edx + 0x14]
0xad4d:     89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0xad51:     8b 4a 18                           	mov ecx, dword ptr [edx + 0x18]
0xad54:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xad57:     89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0xad5b:     89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0xad5f:     8b 10                              	mov edx, dword ptr [eax]
0xad61:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xad65:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0xad68:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xad6c:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xad6f:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xad73:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xad76:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xad7a:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xad7d:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xad81:     8b 50 14                           	mov edx, dword ptr [eax + 0x14]
0xad84:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xad88:     8b 50 18                           	mov edx, dword ptr [eax + 0x18]
0xad8b:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xad8f:     8b 40 1c                           	mov eax, dword ptr [eax + 0x1c]
0xad92:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xad96:     b8 07 00 00 00                     	mov eax, 7
0xad9b:     90                                 	nop 
0xad9c:     8d 74 26 00                        	lea esi, [esi]
0xada0:     8b 54 84 2c                        	mov edx, dword ptr [esp + eax*4 + 0x2c]
0xada4:     39 54 84 0c                        	cmp dword ptr [esp + eax*4 + 0xc], edx
0xada8:     72 1e                              	jb 0xadc8 <_ZNKSt4lessI7uint256EclERKS0_S3_+0xb8>
0xadaa:     77 08                              	ja 0xadb4 <_ZNKSt4lessI7uint256EclERKS0_S3_+0xa4>
0xadac:     83 e8 01                           	sub eax, 1
0xadaf:     83 f8 ff                           	cmp eax, -1
0xadb2:     75 ec                              	jne 0xada0 <_ZNKSt4lessI7uint256EclERKS0_S3_+0x90>
0xadb4:     31 c0                              	xor eax, eax
0xadb6:     8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0xadba:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xadc1:     75 0c                              	jne 0xadcf <_ZNKSt4lessI7uint256EclERKS0_S3_+0xbd>
0xadc3:     83 c4 5c                           	add esp, 0x5c
0xadc6:     c3                                 	ret 
; data inside code section at 0xadc7 -- 0xadc8
0xadc7:     90                                                 |.               |
0xadc8:     b8 01 00 00 00                     	mov eax, 1
0xadcd:     eb e7                              	jmp 0xadb6 <_ZNKSt4lessI7uint256EclERKS0_S3_+0xa6>
; data inside code section at 0xadcf -- 0xadd0
0xadcf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xadd0 -- 0xadd1
; data inside code section at 0xadd1 -- 0xadd4
0xadd1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_
; function: _ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_ at 0xade0 -- 0xae32
0xade0:     83 ec 4c                           	sub esp, 0x4c
0xade3:     ba 01 00 00 00                     	mov edx, 1
0xade8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xadee:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xadf2:     31 c0                              	xor eax, eax
0xadf4:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xadf8:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xadfc:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xae00:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xae04:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xae08:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xae0c:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xae10:     85 c0                              	test eax, eax
0xae12:     8d 4e 04                           	lea ecx, [esi + 4]
0xae15:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xae19:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0xae1d:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0xae21:     0f 84 99 00 00 00                  	je 0xaec0 <function_aec0>
0xae27:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xae2b:     c7 04 24 30 00 00 00               	mov dword ptr [esp], 0x30
; data inside code section at 0xae32 -- 0xae33
0xae32:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xae33 -- 0xae34
; data inside code section at 0xae34 -- 0xae87
0xae34:     ff ff ff 8b 54 24 18 83  f8 f0 74 2f 8b 0b 89 48   |....T$....t/...H|
0xae44:     10 8b 4b 04 89 48 14 8b  4b 08 89 48 18 8b 4b 0c   |..K..H..K..H..K.|
0xae54:     89 48 1c 8b 4b 10 89 48  20 8b 4b 14 89 48 24 8b   |.H..K..H .K..H$.|
0xae64:     4b 18 89 48 28 8b 4b 1c  89 48 2c 8b 4c 24 1c 89   |K..H(.K..H,.L$..|
0xae74:     44 24 04 89 14 24 89 44  24 18 89 4c 24 0c 89 6c   |D$...$.D$..L$..l|
0xae84:     24 08 e8                                           |$..             |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xae87 -- 0xae88
; data inside code section at 0xae88 -- 0xae8a
0xae88:     ff ff                                              |..              |
; function: function_ae8a at 0xae8a -- 0xaeba
0xae8a:     ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0xae90:     46                                 	inc esi
0xae91:     14 01                              	adc al, 1
0xae93:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xae97:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xae9e:     89 07                              	mov dword ptr [edi], eax
0xaea0:     89 f8                              	mov eax, edi
0xaea2:     75 3f                              	jne 0xaee3 <function_aee3>
0xaea4:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xaea8:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xaeac:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xaeb0:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xaeb4:     83 c4 4c                           	add esp, 0x4c
0xaeb7:     c2 04 00                           	ret 4
; data inside code section at 0xaeba -- 0xaec0
0xaeba:     8d b6 00 00 00 00                                  |......          |
; function: function_aec0 at 0xaec0 -- 0xaee3
0xaec0:     39 cd                              	cmp ebp, ecx
0xaec2:     0f 84 5f ff ff ff                  	je 0xae27
0xaec8:     8d 45 10                           	lea eax, [ebp + 0x10]
0xaecb:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xaecf:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xaed3:     89 34 24                           	mov dword ptr [esp], esi
0xaed6:     e8 15 ac 00 00                     	call 0x15af0 <unknown_15af0>
0xaedb:     0f b6 d0                           	movzx edx, al
0xaede:     e9 44 ff ff ff                     	jmp 0xae27
; function: function_aee3 at 0xaee3 -- 0xaee4
; dynamically linked function: __stack_chk_fail at 0xaee4 -- 0xaee5
; data inside code section at 0xaee5 -- 0xaee8
0xaee5:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_
; function: _ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_ at 0xaef0 -- 0xb150
0xaef0:     55                                 	push ebp
0xaef1:     57                                 	push edi
0xaef2:     56                                 	push esi
0xaef3:     53                                 	push ebx
0xaef4:     81 ec ec 00 00 00                  	sub esp, 0xec
0xaefa:     8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0xaf01:     8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0xaf08:     8b 8c 24 08 01 00 00               	mov ecx, dword ptr [esp + 0x108]
0xaf0f:     65 8b 1d 14 00 00 00               	mov ebx, dword ptr gs:[0x14]
0xaf16:     89 9c 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], ebx
0xaf1d:     31 db                              	xor ebx, ebx
0xaf1f:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xaf23:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0xaf26:     89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0xaf2a:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0xaf2e:     85 c0                              	test eax, eax
0xaf30:     0f 84 f7 01 00 00                  	je 0xb12d <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x23d>
0xaf36:     89 ca                              	mov edx, ecx
0xaf38:     8b 29                              	mov ebp, dword ptr [ecx]
0xaf3a:     8b 52 14                           	mov edx, dword ptr [edx + 0x14]
0xaf3d:     8b 79 04                           	mov edi, dword ptr [ecx + 4]
0xaf40:     8b 71 08                           	mov esi, dword ptr [ecx + 8]
0xaf43:     8b 59 0c                           	mov ebx, dword ptr [ecx + 0xc]
0xaf46:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xaf4a:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xaf4e:     8b 49 10                           	mov ecx, dword ptr [ecx + 0x10]
0xaf51:     8b 52 18                           	mov edx, dword ptr [edx + 0x18]
0xaf54:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xaf58:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xaf5c:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xaf5f:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xaf63:     90                                 	nop 
0xaf64:     8d 74 26 00                        	lea esi, [esi]
0xaf68:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xaf6b:     89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0xaf6f:     89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0xaf73:     89 74 24 64                        	mov dword ptr [esp + 0x64], esi
0xaf77:     89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0xaf7b:     8b 50 14                           	mov edx, dword ptr [eax + 0x14]
0xaf7e:     89 5c 24 68                        	mov dword ptr [esp + 0x68], ebx
0xaf82:     89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0xaf86:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xaf8a:     89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0xaf91:     8b 50 18                           	mov edx, dword ptr [eax + 0x18]
0xaf94:     89 94 24 84 00 00 00               	mov dword ptr [esp + 0x84], edx
0xaf9b:     8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0xaf9e:     89 94 24 88 00 00 00               	mov dword ptr [esp + 0x88], edx
0xafa5:     8b 50 20                           	mov edx, dword ptr [eax + 0x20]
0xafa8:     89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0xafaf:     8b 50 24                           	mov edx, dword ptr [eax + 0x24]
0xafb2:     89 94 24 90 00 00 00               	mov dword ptr [esp + 0x90], edx
0xafb9:     8b 50 28                           	mov edx, dword ptr [eax + 0x28]
0xafbc:     89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0xafc3:     8b 50 2c                           	mov edx, dword ptr [eax + 0x2c]
0xafc6:     89 94 24 98 00 00 00               	mov dword ptr [esp + 0x98], edx
0xafcd:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xafd1:     89 54 24 70                        	mov dword ptr [esp + 0x70], edx
0xafd5:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xafd9:     89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0xafdd:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xafe1:     89 54 24 78                        	mov dword ptr [esp + 0x78], edx
0xafe5:     ba 07 00 00 00                     	mov edx, 7
0xafea:     8d b6 00 00 00 00                  	lea esi, [esi]
0xaff0:     8b 44 94 7c                        	mov eax, dword ptr [esp + edx*4 + 0x7c]
0xaff4:     39 44 94 5c                        	cmp dword ptr [esp + edx*4 + 0x5c], eax
0xaff8:     72 26                              	jb 0xb020 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x130>
0xaffa:     77 08                              	ja 0xb004 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x114>
0xaffc:     83 ea 01                           	sub edx, 1
0xafff:     83 fa ff                           	cmp edx, -1
0xb002:     75 ec                              	jne 0xaff0 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x100>
0xb004:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xb008:     c6 44 24 43 00                     	mov byte ptr [esp + 0x43], 0
0xb00d:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xb010:     85 d2                              	test edx, edx
0xb012:     74 1c                              	je 0xb030 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x140>
0xb014:     89 d0                              	mov eax, edx
0xb016:     e9 4d ff ff ff                     	jmp 0xaf68 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x78>
; data inside code section at 0xb01b -- 0xb020
0xb01b:     90 8d 74 26 00                                     |..t&.           |
0xb020:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xb024:     c6 44 24 43 01                     	mov byte ptr [esp + 0x43], 1
0xb029:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xb02c:     85 d2                              	test edx, edx
0xb02e:     75 e4                              	jne 0xb014 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x124>
0xb030:     80 7c 24 43 00                     	cmp byte ptr [esp + 0x43], 0
0xb035:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xb039:     0f 85 f9 00 00 00                  	jne 0xb138 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x248>
0xb03f:     89 8c 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], ecx
0xb046:     8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0xb04a:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xb04e:     89 9c 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ebx
0xb055:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xb059:     89 ac 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], ebp
0xb060:     89 8c 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], ecx
0xb067:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xb06a:     89 94 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], edx
0xb071:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xb075:     89 bc 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], edi
0xb07c:     89 b4 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], esi
0xb083:     89 8c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ecx
0xb08a:     8b 48 14                           	mov ecx, dword ptr [eax + 0x14]
0xb08d:     89 9c 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], ebx
0xb094:     89 8c 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], ecx
0xb09b:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0xb09e:     89 8c 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], ecx
0xb0a5:     8b 48 1c                           	mov ecx, dword ptr [eax + 0x1c]
0xb0a8:     89 8c 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], ecx
0xb0af:     8b 48 20                           	mov ecx, dword ptr [eax + 0x20]
0xb0b2:     89 8c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ecx
0xb0b9:     8b 48 24                           	mov ecx, dword ptr [eax + 0x24]
0xb0bc:     89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0xb0c3:     8b 48 28                           	mov ecx, dword ptr [eax + 0x28]
0xb0c6:     89 8c 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ecx
0xb0cd:     8b 48 2c                           	mov ecx, dword ptr [eax + 0x2c]
0xb0d0:     89 8c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ecx
0xb0d7:     b9 07 00 00 00                     	mov ecx, 7
0xb0dc:     8d 74 26 00                        	lea esi, [esi]
0xb0e0:     8b 9c 8c bc 00 00 00               	mov ebx, dword ptr [esp + ecx*4 + 0xbc]
0xb0e7:     39 9c 8c 9c 00 00 00               	cmp dword ptr [esp + ecx*4 + 0x9c], ebx
0xb0ee:     0f 82 97 00 00 00                  	jb 0xb18b <function_b18b>
0xb0f4:     77 08                              	ja 0xb0fe <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x20e>
0xb0f6:     83 e9 01                           	sub ecx, 1
0xb0f9:     83 f9 ff                           	cmp ecx, -1
0xb0fc:     75 e2                              	jne 0xb0e0 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x1f0>
0xb0fe:     8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0xb102:     89 01                              	mov dword ptr [ecx], eax
0xb104:     c6 41 04 00                        	mov byte ptr [ecx + 4], 0
0xb108:     8b 9c 24 dc 00 00 00               	mov ebx, dword ptr [esp + 0xdc]
0xb10f:     65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0xb116:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0xb11a:     0f 85 cf 00 00 00                  	jne 0xb1ef <function_b1ef>
0xb120:     81 c4 ec 00 00 00                  	add esp, 0xec
0xb126:     5b                                 	pop ebx
0xb127:     5e                                 	pop esi
0xb128:     5f                                 	pop edi
0xb129:     5d                                 	pop ebp
0xb12a:     c2 04 00                           	ret 4
0xb12d:     8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0xb131:     83 c1 04                           	add ecx, 4
0xb134:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xb138:     8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0xb13c:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xb140:     3b 4a 0c                           	cmp ecx, dword ptr [edx + 0xc]
0xb143:     0f 84 88 00 00 00                  	je 0xb1d1 <function_b1d1>
0xb149:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xb14d:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xb150 -- 0xb151
0xb150:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xb151 -- 0xb152
; data inside code section at 0xb152 -- 0xb154
0xb152:     ff ff                                              |..              |
; function: function_b154 at 0xb154 -- 0xb18b
0xb154:     ff 8b 5c 24 3c 89                  	dec dword ptr [ebx - 0x76c3dba4]
0xb15a:     da 8b 2b 8b 4a 10                  	fimul dword ptr [ebx + 0x104a8b2b]
0xb160:     8b 52 14                           	mov edx, dword ptr [edx + 0x14]
0xb163:     8b 7b 04                           	mov edi, dword ptr [ebx + 4]
0xb166:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xb169:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0xb16c:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xb170:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb174:     8b 52 18                           	mov edx, dword ptr [edx + 0x18]
0xb177:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xb17b:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb17f:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xb182:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xb186:     e9 b4 fe ff ff                     	jmp 0xb03f
; function: function_b18b at 0xb18b -- 0xb1d1
0xb18b:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xb18f:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0xb193:     8d 44 24 4c                        	lea eax, [esp + 0x4c]
0xb197:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb19b:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xb19f:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb1a7:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xb1ab:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xb1af:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xb1b3:     89 04 24                           	mov dword ptr [esp], eax
0xb1b6:     e8 15 ab 00 00                     	call 0x15cd0 <unknown_15cd0>
0xb1bb:     83 ec 04                           	sub esp, 4
0xb1be:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0xb1c2:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0xb1c6:     89 02                              	mov dword ptr [edx], eax
0xb1c8:     c6 42 04 01                        	mov byte ptr [edx + 4], 1
0xb1cc:     e9 37 ff ff ff                     	jmp 0xb108
; function: function_b1d1 at 0xb1d1 -- 0xb1ef
0xb1d1:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xb1d5:     8d 44 24 4c                        	lea eax, [esp + 0x4c]
0xb1d9:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xb1dd:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xb1e5:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb1e9:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xb1ed:     eb c4                              	jmp 0xb1b3
; function: function_b1ef at 0xb1ef -- 0xb1f0
; dynamically linked function: __stack_chk_fail at 0xb1f0 -- 0xb1f1
; data inside code section at 0xb1f1 -- 0xb1f4
0xb1f1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_ at 0xb200 -- 0xb226
0xb200:     55                                 	push ebp
0xb201:     57                                 	push edi
0xb202:     56                                 	push esi
0xb203:     53                                 	push ebx
0xb204:     83 ec 3c                           	sub esp, 0x3c
0xb207:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb20d:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xb211:     31 c0                              	xor eax, eax
0xb213:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xb217:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xb21b:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0xb21f:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xb226 -- 0xb227
0xb226:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb227 -- 0xb228
; data inside code section at 0xb228 -- 0xb22a
0xb228:     ff ff                                              |..              |
; function: function_b22a at 0xb22a -- 0xb291
0xb22a:     ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0xb230:     24 1c                              	and al, 0x1c
0xb232:     74 0a                              	je 0xb23e <function_b22a+0x14>
0xb234:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xb237:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb23b:     89 42 10                           	mov dword ptr [edx + 0x10], eax
0xb23e:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb242:     8b 03                              	mov eax, dword ptr [ebx]
0xb244:     c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0xb24b:     89 02                              	mov dword ptr [edx], eax
0xb24d:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xb250:     c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0xb257:     89 72 04                           	mov dword ptr [edx + 4], esi
0xb25a:     85 c0                              	test eax, eax
0xb25c:     74 17                              	je 0xb275 <function_b22a+0x4b>
0xb25e:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xb262:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb266:     89 2c 24                           	mov dword ptr [esp], ebp
0xb269:     e8 92 b1 00 00                     	call 0x16400 <unknown_16400>
0xb26e:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb272:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0xb275:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xb278:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xb27c:     85 f6                              	test esi, esi
0xb27e:     75 0a                              	jne 0xb28a <function_b22a+0x60>
0xb280:     eb 5a                              	jmp 0xb2dc <function_b2dc>
; data inside code section at 0xb282 -- 0xb288
0xb282:     8d b6 00 00 00 00                                  |......          |
0xb288:     89 df                              	mov edi, ebx
0xb28a:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xb291 -- 0xb292
0xb291:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb292 -- 0xb293
; data inside code section at 0xb293 -- 0xb29a
0xb293:     ff ff ff 83 f8 f0 89                               |.......         |
; function: function_b29a at 0xb29a -- 0xb29b
0xb29a:     c3                                 	ret 
; data inside code section at 0xb29b -- 0xb2dc
0xb29b:     74 06 8b 46 10 89 43 10  8b 06 c7 43 0c 00 00 00   |t..F..C....C....|
0xb2ab:     00 c7 43 08 00 00 00 00  89 7b 04 89 03 8b 46 0c   |..C......{....F.|
0xb2bb:     89 5f 08 85 c0 74 13 89  5c 24 08 89 44 24 04 89   |._...t..\$..D$..|
0xb2cb:     2c 24 e8 2e b1 00 00 89  43 0c 8b 76 08 85 f6 75   |,$......C..v...u|
0xb2db:     ac                                                 |.               |
; function: function_b2dc at 0xb2dc -- 0xb2f5
0xb2dc:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xb2e0:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb2e7:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb2eb:     75 25                              	jne 0xb312 <function_b312>
0xb2ed:     83 c4 3c                           	add esp, 0x3c
0xb2f0:     5b                                 	pop ebx
0xb2f1:     5e                                 	pop esi
0xb2f2:     5f                                 	pop edi
0xb2f3:     5d                                 	pop ebp
0xb2f4:     c3                                 	ret 
; data inside code section at 0xb2f5 -- 0xb2f9
0xb2f5:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xb2f9 -- 0xb2fa
; data inside code section at 0xb2fa -- 0xb30e
0xb2fa:     ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 a3   |....D$..,$.D$...|
0xb30a:     a0 00 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb30e -- 0xb30f
; data inside code section at 0xb30f -- 0xb312
0xb30f:     ff ff ff                                           |...             |
; function: function_b312 at 0xb312 -- 0xb313
; dynamically linked function: __stack_chk_fail at 0xb313 -- 0xb314
; data inside code section at 0xb314 -- 0xb318
0xb314:     ff ff ff 89                                        |....            |
; function: function_b318 at 0xb318 -- 0xb319
0xb318:     c3                                 	ret 
; data inside code section at 0xb319 -- 0xb31a
0xb319:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb31a -- 0xb31b
; data inside code section at 0xb31b -- 0xb322
0xb31b:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xb322 -- 0xb323
; data inside code section at 0xb323 -- 0xb326
0xb323:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_ at 0xb330 -- 0xb3cf
0xb330:     56                                 	push esi
0xb331:     53                                 	push ebx
0xb332:     83 ec 24                           	sub esp, 0x24
0xb335:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xb339:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0xb33d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb343:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb347:     31 c0                              	xor eax, eax
0xb349:     39 f3                              	cmp ebx, esi
0xb34b:     74 6d                              	je 0xb3ba <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x8a>
0xb34d:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xb350:     89 1c 24                           	mov dword ptr [esp], ebx
0xb353:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb357:     e8 84 a1 00 00                     	call 0x154e0 <unknown_154e0>
0xb35c:     8d 43 04                           	lea eax, [ebx + 4]
0xb35f:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xb362:     c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0xb369:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xb36c:     c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0xb373:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xb376:     85 d2                              	test edx, edx
0xb378:     74 40                              	je 0xb3ba <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x8a>
0xb37a:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb37e:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb382:     89 1c 24                           	mov dword ptr [esp], ebx
0xb385:     e8 a6 b1 00 00                     	call 0x16530 <unknown_16530>
0xb38a:     89 43 08                           	mov dword ptr [ebx + 8], eax
0xb38d:     89 c1                              	mov ecx, eax
0xb38f:     eb 09                              	jmp 0xb39a <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x6a>
; data inside code section at 0xb391 -- 0xb398
0xb391:     8d b4 26 00 00 00 00                               |..&....         |
0xb398:     89 d1                              	mov ecx, edx
0xb39a:     8b 51 08                           	mov edx, dword ptr [ecx + 8]
0xb39d:     85 d2                              	test edx, edx
0xb39f:     75 f7                              	jne 0xb398 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x68>
0xb3a1:     89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0xb3a4:     eb 04                              	jmp 0xb3aa <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x7a>
; data inside code section at 0xb3a6 -- 0xb3a8
0xb3a6:     66 90                                              |f.              |
0xb3a8:     89 d0                              	mov eax, edx
0xb3aa:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xb3ad:     85 d2                              	test edx, edx
0xb3af:     75 f7                              	jne 0xb3a8 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x78>
0xb3b1:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xb3b4:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xb3b7:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xb3ba:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb3be:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb3c5:     89 d8                              	mov eax, ebx
0xb3c7:     75 06                              	jne 0xb3cf <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_+0x9e>
0xb3c9:     83 c4 24                           	add esp, 0x24
0xb3cc:     5b                                 	pop ebx
0xb3cd:     5e                                 	pop esi
0xb3ce:     c3                                 	ret 
; data inside code section at 0xb3cf -- 0xb3d0
0xb3cf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb3d0 -- 0xb3d1
; data inside code section at 0xb3d1 -- 0xb3d4
0xb3d1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE7_M_copyEPKSt13_Rb_tree_nodeISsEPS7_
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE7_M_copyEPKSt13_Rb_tree_nodeISsEPS7_ at 0xb3e0 -- 0xb406
0xb3e0:     55                                 	push ebp
0xb3e1:     57                                 	push edi
0xb3e2:     56                                 	push esi
0xb3e3:     53                                 	push ebx
0xb3e4:     83 ec 3c                           	sub esp, 0x3c
0xb3e7:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb3ed:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xb3f1:     31 c0                              	xor eax, eax
0xb3f3:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xb3f7:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xb3fb:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0xb3ff:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xb406 -- 0xb407
0xb406:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb407 -- 0xb408
; data inside code section at 0xb408 -- 0xb41f
0xb408:     ff ff ff 89 44 24 1c 83  c0 10 74 0f 8d 53 10 89   |....D$....t..S..|
0xb418:     54 24 04 89 04 24 e8                               |T$...$.         |
; dynamically linked function: _ZNSsC1ERKSs at 0xb41f -- 0xb420
; data inside code section at 0xb420 -- 0xb422
0xb420:     ff ff                                              |..              |
; function: function_b422 at 0xb422 -- 0xb479
0xb422:     ff 8b 54 24 1c 8b                  	dec dword ptr [ebx - 0x74e3dbac]
0xb428:     03 c7                              	add eax, edi
0xb42a:     42                                 	inc edx
0xb42b:     0c 00                              	or al, 0
0xb42d:     00 00                              	add byte ptr [eax], al
0xb42f:     00 89 02 8b 43 0c                  	add byte ptr [ecx + 0xc438b02], cl
0xb435:     c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0xb43c:     89 72 04                           	mov dword ptr [edx + 4], esi
0xb43f:     85 c0                              	test eax, eax
0xb441:     74 1b                              	je 0xb45e <function_b422+0x3c>
0xb443:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb447:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb44b:     89 2c 24                           	mov dword ptr [esp], ebp
0xb44e:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xb452:     e8 69 b3 00 00                     	call 0x167c0 <unknown_167c0>
0xb457:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb45b:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0xb45e:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xb461:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0xb465:     85 f6                              	test esi, esi
0xb467:     75 09                              	jne 0xb472 <function_b422+0x50>
0xb469:     eb 62                              	jmp 0xb4cd <function_b4cd>
; data inside code section at 0xb46b -- 0xb470
0xb46b:     90 8d 74 26 00                                     |..t&.           |
0xb470:     89 df                              	mov edi, ebx
0xb472:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xb479 -- 0xb47a
0xb479:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb47a -- 0xb47b
; data inside code section at 0xb47b -- 0xb47f
0xb47b:     ff ff ff 89                                        |....            |
; function: function_b47f at 0xb47f -- 0xb480
0xb47f:     c3                                 	ret 
; data inside code section at 0xb480 -- 0xb490
0xb480:     83 c0 10 74 0f 8d 56 10  89 54 24 04 89 04 24 e8   |...t..V..T$...$.|
; dynamically linked function: _ZNSsC1ERKSs at 0xb490 -- 0xb491
; data inside code section at 0xb491 -- 0xb4cd
0xb491:     ff ff ff 8b 06 c7 43 0c  00 00 00 00 c7 43 08 00   |......C......C..|
0xb4a1:     00 00 00 89 7b 04 89 03  8b 46 0c 89 5f 08 85 c0   |....{....F.._...|
0xb4b1:     74 13 89 5c 24 08 89 44  24 04 89 2c 24 e8 fd b2   |t..\$..D$..,$...|
0xb4c1:     00 00 89 43 0c 8b 76 08  85 f6 75 a3               |...C..v...u.    |
; function: function_b4cd at 0xb4cd -- 0xb4e6
0xb4cd:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xb4d1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb4d8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb4dc:     75 21                              	jne 0xb4ff <function_b4ff>
0xb4de:     83 c4 3c                           	add esp, 0x3c
0xb4e1:     5b                                 	pop ebx
0xb4e2:     5e                                 	pop esi
0xb4e3:     5f                                 	pop edi
0xb4e4:     5d                                 	pop ebp
0xb4e5:     c3                                 	ret 
; data inside code section at 0xb4e6 -- 0xb4ea
0xb4e6:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xb4ea -- 0xb4eb
; data inside code section at 0xb4eb -- 0xb4f6
0xb4eb:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _ZdlPv at 0xb4f6 -- 0xb4f7
; data inside code section at 0xb4f7 -- 0xb4fb
0xb4f7:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb4fb -- 0xb4fc
; data inside code section at 0xb4fc -- 0xb4ff
0xb4fc:     ff ff ff                                           |...             |
; function: function_b4ff at 0xb4ff -- 0xb500
; dynamically linked function: __stack_chk_fail at 0xb500 -- 0xb501
; data inside code section at 0xb501 -- 0xb505
0xb501:     ff ff ff 89                                        |....            |
; function: function_b505 at 0xb505 -- 0xb506
0xb505:     c3                                 	ret 
; data inside code section at 0xb506 -- 0xb507
0xb506:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb507 -- 0xb508
; data inside code section at 0xb508 -- 0xb50f
0xb508:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xb50f -- 0xb510
; data inside code section at 0xb510 -- 0xb517
0xb510:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xb517 -- 0xb518
; data inside code section at 0xb518 -- 0xb51f
0xb518:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xb51f -- 0xb520
; data inside code section at 0xb520 -- 0xb524
0xb520:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb524 -- 0xb525
; data inside code section at 0xb525 -- 0xb52c
0xb525:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xb52c -- 0xb52d
; data inside code section at 0xb52d -- 0xb541
0xb52d:     ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 b0   |....D$..,$.D$...|
0xb53d:     a0 00 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb541 -- 0xb542
; data inside code section at 0xb542 -- 0xb546
0xb542:     ff ff ff 89                                        |....            |
; function: function_b546 at 0xb546 -- 0xb547
0xb546:     c3                                 	ret 
; data inside code section at 0xb547 -- 0xb548
0xb547:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb548 -- 0xb549
; data inside code section at 0xb549 -- 0xb54b
0xb549:     ff ff                                              |..              |
; function: function_b54b at 0xb54b -- 0xb552
0xb54b:     ff 89 d8 eb d8 89                  	dec dword ptr [ecx - 0x76271428]
0xb551:     c3                                 	ret 
; data inside code section at 0xb552 -- 0xb553
0xb552:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xb553 -- 0xb554
; data inside code section at 0xb554 -- 0xb55b
0xb554:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xb55b -- 0xb55c
; data inside code section at 0xb55c -- 0xb55f
0xb55c:     ff ff ff                                           |...             |
; section: .text._ZN6CAlertC2ERKS_
; function: _ZN6CAlertC1ERKS_ at 0xb560 -- 0xb69d
0xb560:     55                                 	push ebp
0xb561:     57                                 	push edi
0xb562:     56                                 	push esi
0xb563:     53                                 	push ebx
0xb564:     83 ec 3c                           	sub esp, 0x3c
0xb567:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xb56b:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xb56f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb575:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xb579:     31 c0                              	xor eax, eax
0xb57b:     8b 06                              	mov eax, dword ptr [esi]
0xb57d:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xb580:     89 03                              	mov dword ptr [ebx], eax
0xb582:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xb585:     89 53 08                           	mov dword ptr [ebx + 8], edx
0xb588:     8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0xb58b:     89 43 04                           	mov dword ptr [ebx + 4], eax
0xb58e:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xb591:     89 53 10                           	mov dword ptr [ebx + 0x10], edx
0xb594:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xb597:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xb59a:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xb59d:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xb5a0:     c7 43 20 00 00 00 00               	mov dword ptr [ebx + 0x20], 0
0xb5a7:     c7 43 24 00 00 00 00               	mov dword ptr [ebx + 0x24], 0
0xb5ae:     c7 43 30 00 00 00 00               	mov dword ptr [ebx + 0x30], 0
0xb5b5:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xb5b8:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xb5bb:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb5bf:     8d 43 20                           	lea eax, [ebx + 0x20]
0xb5c2:     89 43 28                           	mov dword ptr [ebx + 0x28], eax
0xb5c5:     89 43 2c                           	mov dword ptr [ebx + 0x2c], eax
0xb5c8:     8b 56 24                           	mov edx, dword ptr [esi + 0x24]
0xb5cb:     85 d2                              	test edx, edx
0xb5cd:     74 43                              	je 0xb612 <_ZN6CAlertC1ERKS_+0xb2>
0xb5cf:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb5d3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb5d7:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb5db:     89 04 24                           	mov dword ptr [esp], eax
0xb5de:     e8 7d b1 00 00                     	call 0x16760 <unknown_16760>
0xb5e3:     89 43 24                           	mov dword ptr [ebx + 0x24], eax
0xb5e6:     89 c1                              	mov ecx, eax
0xb5e8:     eb 08                              	jmp 0xb5f2 <_ZN6CAlertC1ERKS_+0x92>
; data inside code section at 0xb5ea -- 0xb5f0
0xb5ea:     8d b6 00 00 00 00                                  |......          |
0xb5f0:     89 d1                              	mov ecx, edx
0xb5f2:     8b 51 08                           	mov edx, dword ptr [ecx + 8]
0xb5f5:     85 d2                              	test edx, edx
0xb5f7:     75 f7                              	jne 0xb5f0 <_ZN6CAlertC1ERKS_+0x90>
0xb5f9:     89 4b 28                           	mov dword ptr [ebx + 0x28], ecx
0xb5fc:     eb 04                              	jmp 0xb602 <_ZN6CAlertC1ERKS_+0xa2>
; data inside code section at 0xb5fe -- 0xb600
0xb5fe:     66 90                                              |f.              |
0xb600:     89 d0                              	mov eax, edx
0xb602:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xb605:     85 d2                              	test edx, edx
0xb607:     75 f7                              	jne 0xb600 <_ZN6CAlertC1ERKS_+0xa0>
0xb609:     89 43 2c                           	mov dword ptr [ebx + 0x2c], eax
0xb60c:     8b 46 30                           	mov eax, dword ptr [esi + 0x30]
0xb60f:     89 43 30                           	mov dword ptr [ebx + 0x30], eax
0xb612:     8b 46 34                           	mov eax, dword ptr [esi + 0x34]
0xb615:     89 43 34                           	mov dword ptr [ebx + 0x34], eax
0xb618:     8b 46 38                           	mov eax, dword ptr [esi + 0x38]
0xb61b:     c7 43 40 00 00 00 00               	mov dword ptr [ebx + 0x40], 0
0xb622:     c7 43 44 00 00 00 00               	mov dword ptr [ebx + 0x44], 0
0xb629:     c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0xb630:     89 43 38                           	mov dword ptr [ebx + 0x38], eax
0xb633:     8d 43 3c                           	lea eax, [ebx + 0x3c]
0xb636:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xb63a:     8d 43 40                           	lea eax, [ebx + 0x40]
0xb63d:     89 43 48                           	mov dword ptr [ebx + 0x48], eax
0xb640:     89 43 4c                           	mov dword ptr [ebx + 0x4c], eax
0xb643:     8b 56 44                           	mov edx, dword ptr [esi + 0x44]
0xb646:     85 d2                              	test edx, edx
0xb648:     74 40                              	je 0xb68a <_ZN6CAlertC1ERKS_+0x12a>
0xb64a:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb64e:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xb652:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb656:     89 04 24                           	mov dword ptr [esp], eax
0xb659:     e8 e2 b2 00 00                     	call 0x16940 <unknown_16940>
0xb65e:     89 43 44                           	mov dword ptr [ebx + 0x44], eax
0xb661:     89 c1                              	mov ecx, eax
0xb663:     eb 05                              	jmp 0xb66a <_ZN6CAlertC1ERKS_+0x10a>
; data inside code section at 0xb665 -- 0xb668
0xb665:     8d 76 00                                           |.v.             |
0xb668:     89 d1                              	mov ecx, edx
0xb66a:     8b 51 08                           	mov edx, dword ptr [ecx + 8]
0xb66d:     85 d2                              	test edx, edx
0xb66f:     75 f7                              	jne 0xb668 <_ZN6CAlertC1ERKS_+0x108>
0xb671:     89 4b 48                           	mov dword ptr [ebx + 0x48], ecx
0xb674:     eb 04                              	jmp 0xb67a <_ZN6CAlertC1ERKS_+0x11a>
; data inside code section at 0xb676 -- 0xb678
0xb676:     66 90                                              |f.              |
0xb678:     89 d0                              	mov eax, edx
0xb67a:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xb67d:     85 d2                              	test edx, edx
0xb67f:     75 f7                              	jne 0xb678 <_ZN6CAlertC1ERKS_+0x118>
0xb681:     89 43 4c                           	mov dword ptr [ebx + 0x4c], eax
0xb684:     8b 46 50                           	mov eax, dword ptr [esi + 0x50]
0xb687:     89 43 50                           	mov dword ptr [ebx + 0x50], eax
0xb68a:     8b 46 54                           	mov eax, dword ptr [esi + 0x54]
0xb68d:     8d 6b 58                           	lea ebp, [ebx + 0x58]
0xb690:     89 43 54                           	mov dword ptr [ebx + 0x54], eax
0xb693:     8d 46 58                           	lea eax, [esi + 0x58]
0xb696:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb69a:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xb69d -- 0xb69e
0xb69d:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xb69e -- 0xb69f
; data inside code section at 0xb69f -- 0xb6b0
0xb69f:     ff ff ff 8d 7b 5c 8d 46  5c 89 44 24 04 89 3c 24   |....{\.F\.D$..<$|
0xb6af:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xb6b0 -- 0xb6b1
; data inside code section at 0xb6b1 -- 0xb6c2
0xb6b1:     ff ff ff 8d 46 60 89 44  24 04 8d 43 60 89 04 24   |....F`.D$..C`..$|
0xb6c1:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xb6c2 -- 0xb6c3
; data inside code section at 0xb6c3 -- 0xb6d1
0xb6c3:     ff ff ff 8b 7e 68 31 ed  2b 7e 64 c7 43 64         |....~h1.+~d.Cd  |
; function: function_b6d1 at 0xb6d1 -- 0xb6d2
; data inside code section at 0xb6d2 -- 0xb6d4
0xb6d2:     00 00                                              |..              |
; function: function_b6d4 at 0xb6d4 -- 0xb6d5
; data inside code section at 0xb6d5 -- 0xb6eb
0xb6d5:     c7 43 68 00 00 00 00 85  ff c7 43 6c 00 00 00 00   |.Ch.......Cl....|
0xb6e5:     0f 85 a5 00 00 00                                  |......          |
; function: function_b6eb at 0xb6eb -- 0xb6ec
; data inside code section at 0xb6ec -- 0xb6ff
0xb6ec:     ef 89 7b 6c 31 ff 89 6b  64 89 6b 68 8b 46 64 8b   |..{l1..kd.kh.Fd.|
0xb6fc:     56 68 29                                           |Vh)             |
; function: function_b6ff at 0xb6ff -- 0xb702
0xb6ff:     c2 74 12                           	ret 0x1274
; data inside code section at 0xb702 -- 0xb710
0xb702:     89 d7 89 54 24 08 89 44  24 04 89 2c 24 e8         |...T$..D$..,$.  |
; dynamically linked function: memmove at 0xb710 -- 0xb711
; data inside code section at 0xb711 -- 0xb73a
0xb711:     ff ff ff 01 fd 89 6b 68  8b 7e 74 31 ed 2b 7e 70   |......kh.~t1.+~p|
0xb721:     c7 43 70 00 00 00 00 c7  43 74 00 00 00 00 85 ff   |.Cp.....Ct......|
0xb731:     c7 43 78 00 00 00 00 75  46                        |.Cx....uF       |
; function: function_b73a at 0xb73a -- 0xb73b
; data inside code section at 0xb73b -- 0xb744
0xb73b:     ef 89 6b 70 89 6b 74 89  7b                        |..kp.kt.{       |
; function: function_b744 at 0xb744 -- 0xb751
0xb744:     78 8b                              	js 0xb6d1 <function_b6d1>
0xb746:     46                                 	inc esi
0xb747:     70 8b                              	jo 0xb6d4 <function_b6d4>
0xb749:     56                                 	push esi
0xb74a:     74 31                              	je 0xb77d <function_b77d>
0xb74c:     f6 29                              	imul byte ptr [ecx]
0xb74e:     c2 74 12                           	ret 0x1274
; data inside code section at 0xb751 -- 0xb75f
0xb751:     89 d6 89 54 24 08 89 44  24 04 89 2c 24 e8         |...T$..D$..,$.  |
; dynamically linked function: memmove at 0xb75f -- 0xb760
; data inside code section at 0xb760 -- 0xb762
0xb760:     ff ff                                              |..              |
; function: function_b762 at 0xb762 -- 0xb77d
0xb762:     ff 01                              	inc dword ptr [ecx]
0xb764:     f5                                 	cmc 
0xb765:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xb769:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb770:     89 6b 74                           	mov dword ptr [ebx + 0x74], ebp
0xb773:     75 4f                              	jne 0xb7c4 <function_b7c4>
0xb775:     83 c4 3c                           	add esp, 0x3c
0xb778:     5b                                 	pop ebx
0xb779:     5e                                 	pop esi
0xb77a:     5f                                 	pop edi
0xb77b:     5d                                 	pop ebp
0xb77c:     c3                                 	ret 
; function: function_b77d at 0xb77d -- 0xb783
0xb77d:     8d 76 00                           	lea esi, [esi]
0xb780:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xb783 -- 0xb784
0xb783:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb784 -- 0xb785
; data inside code section at 0xb785 -- 0xb788
0xb785:     ff ff ff                                           |...             |
; function: function_b788 at 0xb788 -- 0xb78c
0xb788:     89 c5                              	mov ebp, eax
0xb78a:     eb ae                              	jmp 0xb73a <function_b73a>
; data inside code section at 0xb78c -- 0xb794
0xb78c:     8d 74 26 00 89 3c 24 e8                            |.t&..<$.        |
; dynamically linked function: _Znwj at 0xb794 -- 0xb795
; data inside code section at 0xb795 -- 0xb798
0xb795:     ff ff ff                                           |...             |
; function: function_b798 at 0xb798 -- 0xb79f
0xb798:     89 c5                              	mov ebp, eax
0xb79a:     e9 4c ff ff ff                     	jmp 0xb6eb <function_b6eb>
; data inside code section at 0xb79f -- 0xb7ac
0xb79f:     8b 53 64 89 c6 85 d2 74  08 89 14 24 e8            |.Sd....t...$.   |
; dynamically linked function: _ZdlPv at 0xb7ac -- 0xb7ad
; data inside code section at 0xb7ad -- 0xb7b0
0xb7ad:     ff ff ff                                           |...             |
; function: function_b7b0 at 0xb7b0 -- 0xb7b1
; data inside code section at 0xb7b1 -- 0xb7bc
0xb7b1:     1c 24 e8 28 a0 00 00 89  34 24 e8                  |.$.(....4$.     |
; dynamically linked function: _Unwind_Resume at 0xb7bc -- 0xb7bd
; data inside code section at 0xb7bd -- 0xb7c0
0xb7bd:     ff ff ff                                           |...             |
; function: function_b7c0 at 0xb7c0 -- 0xb7c4
0xb7c0:     89 c6                              	mov esi, eax
0xb7c2:     eb ec                              	jmp 0xb7b0 <function_b7b0>
; function: function_b7c4 at 0xb7c4 -- 0xb7c5
; dynamically linked function: __stack_chk_fail at 0xb7c5 -- 0xb7c6
; data inside code section at 0xb7c6 -- 0xb7cf
0xb7c6:     ff ff ff 89 c6 89 3c 24  e8                        |......<$.       |
; dynamically linked function: _ZNSsD1Ev at 0xb7cf -- 0xb7d0
; data inside code section at 0xb7d0 -- 0xb7d3
0xb7d0:     ff ff ff                                           |...             |
; function: function_b7d3 at 0xb7d3 -- 0xb7d4
; data inside code section at 0xb7d4 -- 0xb7d7
0xb7d4:     2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0xb7d7 -- 0xb7d8
; data inside code section at 0xb7d8 -- 0xb7db
0xb7d8:     ff ff ff                                           |...             |
; function: function_b7db at 0xb7db -- 0xb7dc
; data inside code section at 0xb7dc -- 0xb7ee
0xb7dc:     43 44 89 44 24 04 8b 44  24 18 89 04 24 e8 82 9f   |CD.D$..D$...$...|
0xb7ec:     00 00                                              |..              |
; function: function_b7ee at 0xb7ee -- 0xb7ef
; data inside code section at 0xb7ef -- 0xb805
0xb7ef:     43 24 89 44 24 04 8b 44  24 1c 89 04 24 e8 0f 9f   |C$.D$..D$...$...|
0xb7ff:     00 00 89 34 24 e8                                  |...4$.          |
; dynamically linked function: _Unwind_Resume at 0xb805 -- 0xb806
; data inside code section at 0xb806 -- 0xb809
0xb806:     ff ff ff                                           |...             |
; function: function_b809 at 0xb809 -- 0xb80d
0xb809:     89 c6                              	mov esi, eax
0xb80b:     eb c6                              	jmp 0xb7d3 <function_b7d3>
; function: function_b80d at 0xb80d -- 0xb811
0xb80d:     89 c6                              	mov esi, eax
0xb80f:     eb ca                              	jmp 0xb7db <function_b7db>
; function: function_b811 at 0xb811 -- 0xb815
0xb811:     89 c6                              	mov esi, eax
0xb813:     eb d9                              	jmp 0xb7ee <function_b7ee>
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_ at 0xb820 -- 0xb8bf
0xb820:     56                                 	push esi
0xb821:     53                                 	push ebx
0xb822:     83 ec 24                           	sub esp, 0x24
0xb825:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xb829:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0xb82d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb833:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb837:     31 c0                              	xor eax, eax
0xb839:     39 f3                              	cmp ebx, esi
0xb83b:     74 6d                              	je 0xb8aa <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x8a>
0xb83d:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xb840:     89 1c 24                           	mov dword ptr [esp], ebx
0xb843:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb847:     e8 e4 a1 00 00                     	call 0x15a30 <unknown_15a30>
0xb84c:     8d 43 04                           	lea eax, [ebx + 4]
0xb84f:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xb852:     c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0xb859:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xb85c:     c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0xb863:     8b 56 08                           	mov edx, dword ptr [esi + 8]
0xb866:     85 d2                              	test edx, edx
0xb868:     74 40                              	je 0xb8aa <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x8a>
0xb86a:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb86e:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb872:     89 1c 24                           	mov dword ptr [esp], ebx
0xb875:     e8 86 b3 00 00                     	call 0x16c00 <unknown_16c00>
0xb87a:     89 43 08                           	mov dword ptr [ebx + 8], eax
0xb87d:     89 c1                              	mov ecx, eax
0xb87f:     eb 09                              	jmp 0xb88a <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x6a>
; data inside code section at 0xb881 -- 0xb888
0xb881:     8d b4 26 00 00 00 00                               |..&....         |
0xb888:     89 d1                              	mov ecx, edx
0xb88a:     8b 51 08                           	mov edx, dword ptr [ecx + 8]
0xb88d:     85 d2                              	test edx, edx
0xb88f:     75 f7                              	jne 0xb888 <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x68>
0xb891:     89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0xb894:     eb 04                              	jmp 0xb89a <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x7a>
; data inside code section at 0xb896 -- 0xb898
0xb896:     66 90                                              |f.              |
0xb898:     89 d0                              	mov eax, edx
0xb89a:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xb89d:     85 d2                              	test edx, edx
0xb89f:     75 f7                              	jne 0xb898 <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x78>
0xb8a1:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xb8a4:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xb8a7:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xb8aa:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb8ae:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb8b5:     89 d8                              	mov eax, ebx
0xb8b7:     75 06                              	jne 0xb8bf <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_+0x9e>
0xb8b9:     83 c4 24                           	add esp, 0x24
0xb8bc:     5b                                 	pop ebx
0xb8bd:     5e                                 	pop esi
0xb8be:     c3                                 	ret 
; data inside code section at 0xb8bf -- 0xb8c0
0xb8bf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb8c0 -- 0xb8c1
; data inside code section at 0xb8c1 -- 0xb8c4
0xb8c1:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_ at 0xb8d0 -- 0xb91b
0xb8d0:     83 ec 4c                           	sub esp, 0x4c
0xb8d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb8d9:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xb8dd:     31 c0                              	xor eax, eax
0xb8df:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xb8e3:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xb8e7:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0xb8eb:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xb8ef:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xb8f3:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xb8f7:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xb8fb:     85 c0                              	test eax, eax
0xb8fd:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0xb901:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xb905:     c6 44 24 1f 01                     	mov byte ptr [esp + 0x1f], 1
0xb90a:     0f 84 a8 00 00 00                  	je 0xb9b8 <function_b9b8>
0xb910:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xb914:     c7 04 24 ac 00 00 00               	mov dword ptr [esp], 0xac
; data inside code section at 0xb91b -- 0xb91c
0xb91b:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xb91c -- 0xb91d
; data inside code section at 0xb91d -- 0xb928
0xb91d:     ff ff ff 8b 54 24 18 83  f8 f0 89                  |....T$.....     |
; function: function_b928 at 0xb928 -- 0xb929
0xb928:     c3                                 	ret 
; data inside code section at 0xb929 -- 0xb92c
0xb929:     74 41 8b                                           |tA.             |
; function: function_b92c at 0xb92c -- 0xb95b
0xb92c:     02 89 43 10 8b 42                  	add cl, byte ptr [ecx + 0x428b1043]
0xb932:     04 89                              	add al, 0x89
0xb934:     43                                 	inc ebx
0xb935:     14 8b                              	adc al, 0x8b
0xb937:     42                                 	inc edx
0xb938:     08 89 43 18 8b 42                  	or byte ptr [ecx + 0x428b1843], cl
0xb93e:     0c 89                              	or al, 0x89
0xb940:     43                                 	inc ebx
0xb941:     1c 8b                              	sbb al, 0x8b
0xb943:     42                                 	inc edx
0xb944:     10 89 43 20 8b 42                  	adc byte ptr [ecx + 0x428b2043], cl
0xb94a:     14 89                              	adc al, 0x89
0xb94c:     43                                 	inc ebx
0xb94d:     24 8b                              	and al, 0x8b
0xb94f:     42                                 	inc edx
0xb950:     18 89 43 28 8b 42                  	sbb byte ptr [ecx + 0x428b2843], cl
0xb956:     1c 83                              	sbb al, 0x83
0xb958:     c2 20 89                           	ret 0x8920
; data inside code section at 0xb95b -- 0xb984
0xb95b:     43 2c 8d 43 30 89 54 24  04 89 04 24 e8 c4 b4 00   |C,.C0.T$...$....|
0xb96b:     00 8d 46 04 89 44 24 0c  0f b6 44 24 1f 89 6c 24   |..F..D$...D$..l$|
0xb97b:     08 89 5c 24 04 89 04 24  e8                        |..\$...$.       |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xb984 -- 0xb985
; data inside code section at 0xb985 -- 0xb987
0xb985:     ff ff                                              |..              |
; function: function_b987 at 0xb987 -- 0xb9b3
0xb987:     ff 89 f8 83 46 14                  	dec dword ptr [ecx + 0x144683f8]
0xb98d:     01 8b 54 24 2c 65                  	add dword ptr [ebx + 0x652c2454], ecx
0xb993:     33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xb999:     89 1f                              	mov dword ptr [edi], ebx
0xb99b:     75 4a                              	jne 0xb9e7 <function_b9e7>
0xb99d:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xb9a1:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xb9a5:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xb9a9:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xb9ad:     83 c4 4c                           	add esp, 0x4c
0xb9b0:     c2 04 00                           	ret 4
; data inside code section at 0xb9b3 -- 0xb9b8
0xb9b3:     90 8d 74 26 00                                     |..t&.           |
; function: function_b9b8 at 0xb9b8 -- 0xb9e7
0xb9b8:     8d 46 04                           	lea eax, [esi + 4]
0xb9bb:     39 c5                              	cmp ebp, eax
0xb9bd:     0f 84 4d ff ff ff                  	je 0xb910
0xb9c3:     8d 45 10                           	lea eax, [ebp + 0x10]
0xb9c6:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xb9ca:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xb9ce:     89 34 24                           	mov dword ptr [esp], esi
0xb9d1:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xb9d5:     e8 06 ac 00 00                     	call 0x165e0 <unknown_165e0>
0xb9da:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xb9de:     88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0xb9e2:     e9 29 ff ff ff                     	jmp 0xb910
; function: function_b9e7 at 0xb9e7 -- 0xb9e8
; dynamically linked function: __stack_chk_fail at 0xb9e8 -- 0xb9e9
; data inside code section at 0xb9e9 -- 0xb9f0
0xb9e9:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xb9f0 -- 0xb9f1
; data inside code section at 0xb9f1 -- 0xb9f8
0xb9f1:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xb9f8 -- 0xb9f9
; data inside code section at 0xb9f9 -- 0xb9fd
0xb9f9:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xb9fd -- 0xb9fe
; data inside code section at 0xb9fe -- 0xba02
0xb9fe:     ff ff ff 89                                        |....            |
; function: function_ba02 at 0xba02 -- 0xba03
0xba02:     c3                                 	ret 
; data inside code section at 0xba03 -- 0xba04
0xba03:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xba04 -- 0xba05
; data inside code section at 0xba05 -- 0xba0c
0xba05:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xba0c -- 0xba0d
; data inside code section at 0xba0d -- 0xba10
0xba0d:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_
; function: _ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_ at 0xba10 -- 0xbc70
0xba10:     55                                 	push ebp
0xba11:     57                                 	push edi
0xba12:     56                                 	push esi
0xba13:     53                                 	push ebx
0xba14:     81 ec ec 00 00 00                  	sub esp, 0xec
0xba1a:     8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0xba21:     8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0xba28:     8b 8c 24 08 01 00 00               	mov ecx, dword ptr [esp + 0x108]
0xba2f:     65 8b 1d 14 00 00 00               	mov ebx, dword ptr gs:[0x14]
0xba36:     89 9c 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], ebx
0xba3d:     31 db                              	xor ebx, ebx
0xba3f:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xba43:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0xba46:     89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0xba4a:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0xba4e:     85 c0                              	test eax, eax
0xba50:     0f 84 f7 01 00 00                  	je 0xbc4d <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x23d>
0xba56:     89 ca                              	mov edx, ecx
0xba58:     8b 29                              	mov ebp, dword ptr [ecx]
0xba5a:     8b 52 14                           	mov edx, dword ptr [edx + 0x14]
0xba5d:     8b 79 04                           	mov edi, dword ptr [ecx + 4]
0xba60:     8b 71 08                           	mov esi, dword ptr [ecx + 8]
0xba63:     8b 59 0c                           	mov ebx, dword ptr [ecx + 0xc]
0xba66:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xba6a:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xba6e:     8b 49 10                           	mov ecx, dword ptr [ecx + 0x10]
0xba71:     8b 52 18                           	mov edx, dword ptr [edx + 0x18]
0xba74:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xba78:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xba7c:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xba7f:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xba83:     90                                 	nop 
0xba84:     8d 74 26 00                        	lea esi, [esi]
0xba88:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xba8b:     89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0xba8f:     89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0xba93:     89 74 24 64                        	mov dword ptr [esp + 0x64], esi
0xba97:     89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0xba9b:     8b 50 14                           	mov edx, dword ptr [eax + 0x14]
0xba9e:     89 5c 24 68                        	mov dword ptr [esp + 0x68], ebx
0xbaa2:     89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0xbaa6:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xbaaa:     89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0xbab1:     8b 50 18                           	mov edx, dword ptr [eax + 0x18]
0xbab4:     89 94 24 84 00 00 00               	mov dword ptr [esp + 0x84], edx
0xbabb:     8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0xbabe:     89 94 24 88 00 00 00               	mov dword ptr [esp + 0x88], edx
0xbac5:     8b 50 20                           	mov edx, dword ptr [eax + 0x20]
0xbac8:     89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0xbacf:     8b 50 24                           	mov edx, dword ptr [eax + 0x24]
0xbad2:     89 94 24 90 00 00 00               	mov dword ptr [esp + 0x90], edx
0xbad9:     8b 50 28                           	mov edx, dword ptr [eax + 0x28]
0xbadc:     89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0xbae3:     8b 50 2c                           	mov edx, dword ptr [eax + 0x2c]
0xbae6:     89 94 24 98 00 00 00               	mov dword ptr [esp + 0x98], edx
0xbaed:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xbaf1:     89 54 24 70                        	mov dword ptr [esp + 0x70], edx
0xbaf5:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xbaf9:     89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0xbafd:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xbb01:     89 54 24 78                        	mov dword ptr [esp + 0x78], edx
0xbb05:     ba 07 00 00 00                     	mov edx, 7
0xbb0a:     8d b6 00 00 00 00                  	lea esi, [esi]
0xbb10:     8b 44 94 7c                        	mov eax, dword ptr [esp + edx*4 + 0x7c]
0xbb14:     39 44 94 5c                        	cmp dword ptr [esp + edx*4 + 0x5c], eax
0xbb18:     72 26                              	jb 0xbb40 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x130>
0xbb1a:     77 08                              	ja 0xbb24 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x114>
0xbb1c:     83 ea 01                           	sub edx, 1
0xbb1f:     83 fa ff                           	cmp edx, -1
0xbb22:     75 ec                              	jne 0xbb10 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x100>
0xbb24:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xbb28:     c6 44 24 43 00                     	mov byte ptr [esp + 0x43], 0
0xbb2d:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xbb30:     85 d2                              	test edx, edx
0xbb32:     74 1c                              	je 0xbb50 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x140>
0xbb34:     89 d0                              	mov eax, edx
0xbb36:     e9 4d ff ff ff                     	jmp 0xba88 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x78>
; data inside code section at 0xbb3b -- 0xbb40
0xbb3b:     90 8d 74 26 00                                     |..t&.           |
0xbb40:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xbb44:     c6 44 24 43 01                     	mov byte ptr [esp + 0x43], 1
0xbb49:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xbb4c:     85 d2                              	test edx, edx
0xbb4e:     75 e4                              	jne 0xbb34 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x124>
0xbb50:     80 7c 24 43 00                     	cmp byte ptr [esp + 0x43], 0
0xbb55:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xbb59:     0f 85 f9 00 00 00                  	jne 0xbc58 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x248>
0xbb5f:     89 8c 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], ecx
0xbb66:     8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0xbb6a:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xbb6e:     89 9c 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ebx
0xbb75:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xbb79:     89 ac 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], ebp
0xbb80:     89 8c 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], ecx
0xbb87:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xbb8a:     89 94 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], edx
0xbb91:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xbb95:     89 bc 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], edi
0xbb9c:     89 b4 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], esi
0xbba3:     89 8c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ecx
0xbbaa:     8b 48 14                           	mov ecx, dword ptr [eax + 0x14]
0xbbad:     89 9c 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], ebx
0xbbb4:     89 8c 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], ecx
0xbbbb:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0xbbbe:     89 8c 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], ecx
0xbbc5:     8b 48 1c                           	mov ecx, dword ptr [eax + 0x1c]
0xbbc8:     89 8c 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], ecx
0xbbcf:     8b 48 20                           	mov ecx, dword ptr [eax + 0x20]
0xbbd2:     89 8c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ecx
0xbbd9:     8b 48 24                           	mov ecx, dword ptr [eax + 0x24]
0xbbdc:     89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0xbbe3:     8b 48 28                           	mov ecx, dword ptr [eax + 0x28]
0xbbe6:     89 8c 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ecx
0xbbed:     8b 48 2c                           	mov ecx, dword ptr [eax + 0x2c]
0xbbf0:     89 8c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ecx
0xbbf7:     b9 07 00 00 00                     	mov ecx, 7
0xbbfc:     8d 74 26 00                        	lea esi, [esi]
0xbc00:     8b 9c 8c bc 00 00 00               	mov ebx, dword ptr [esp + ecx*4 + 0xbc]
0xbc07:     39 9c 8c 9c 00 00 00               	cmp dword ptr [esp + ecx*4 + 0x9c], ebx
0xbc0e:     0f 82 97 00 00 00                  	jb 0xbcab <function_bcab>
0xbc14:     77 08                              	ja 0xbc1e <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x20e>
0xbc16:     83 e9 01                           	sub ecx, 1
0xbc19:     83 f9 ff                           	cmp ecx, -1
0xbc1c:     75 e2                              	jne 0xbc00 <_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x1f0>
0xbc1e:     8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0xbc22:     89 01                              	mov dword ptr [ecx], eax
0xbc24:     c6 41 04 00                        	mov byte ptr [ecx + 4], 0
0xbc28:     8b 9c 24 dc 00 00 00               	mov ebx, dword ptr [esp + 0xdc]
0xbc2f:     65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0xbc36:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0xbc3a:     0f 85 cf 00 00 00                  	jne 0xbd0f <function_bd0f>
0xbc40:     81 c4 ec 00 00 00                  	add esp, 0xec
0xbc46:     5b                                 	pop ebx
0xbc47:     5e                                 	pop esi
0xbc48:     5f                                 	pop edi
0xbc49:     5d                                 	pop ebp
0xbc4a:     c2 04 00                           	ret 4
0xbc4d:     8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0xbc51:     83 c1 04                           	add ecx, 4
0xbc54:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xbc58:     8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0xbc5c:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xbc60:     3b 4a 0c                           	cmp ecx, dword ptr [edx + 0xc]
0xbc63:     0f 84 88 00 00 00                  	je 0xbcf1 <function_bcf1>
0xbc69:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xbc6d:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xbc70 -- 0xbc71
0xbc70:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xbc71 -- 0xbc72
; data inside code section at 0xbc72 -- 0xbc74
0xbc72:     ff ff                                              |..              |
; function: function_bc74 at 0xbc74 -- 0xbcab
0xbc74:     ff 8b 5c 24 3c 89                  	dec dword ptr [ebx - 0x76c3dba4]
0xbc7a:     da 8b 2b 8b 4a 10                  	fimul dword ptr [ebx + 0x104a8b2b]
0xbc80:     8b 52 14                           	mov edx, dword ptr [edx + 0x14]
0xbc83:     8b 7b 04                           	mov edi, dword ptr [ebx + 4]
0xbc86:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xbc89:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0xbc8c:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xbc90:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xbc94:     8b 52 18                           	mov edx, dword ptr [edx + 0x18]
0xbc97:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xbc9b:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xbc9f:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xbca2:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xbca6:     e9 b4 fe ff ff                     	jmp 0xbb5f
; function: function_bcab at 0xbcab -- 0xbcf1
0xbcab:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xbcaf:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0xbcb3:     8d 44 24 4c                        	lea eax, [esp + 0x4c]
0xbcb7:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xbcbb:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xbcbf:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbcc7:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xbccb:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xbccf:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xbcd3:     89 04 24                           	mov dword ptr [esp], eax
0xbcd6:     e8 05 b6 00 00                     	call 0x172e0 <unknown_172e0>
0xbcdb:     83 ec 04                           	sub esp, 4
0xbcde:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0xbce2:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0xbce6:     89 02                              	mov dword ptr [edx], eax
0xbce8:     c6 42 04 01                        	mov byte ptr [edx + 4], 1
0xbcec:     e9 37 ff ff ff                     	jmp 0xbc28
; function: function_bcf1 at 0xbcf1 -- 0xbd0f
0xbcf1:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xbcf5:     8d 44 24 4c                        	lea eax, [esp + 0x4c]
0xbcf9:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xbcfd:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbd05:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xbd09:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xbd0d:     eb c4                              	jmp 0xbcd3
; function: function_bd0f at 0xbd0f -- 0xbd10
; dynamically linked function: __stack_chk_fail at 0xbd10 -- 0xbd11
; data inside code section at 0xbd11 -- 0xbd14
0xbd11:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_ at 0xbd20 -- 0xbd6c
0xbd20:     83 ec 5c                           	sub esp, 0x5c
0xbd23:     8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0xbd27:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xbd2e:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xbd32:     31 d2                              	xor edx, edx
0xbd34:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xbd38:     8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0xbd3c:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xbd40:     8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0xbd44:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xbd48:     8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0xbd4c:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xbd50:     8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0xbd54:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xbd58:     c6 44 24 10 01                     	mov byte ptr [esp + 0x10], 1
0xbd5d:     85 c0                              	test eax, eax
0xbd5f:     0f 84 83 00 00 00                  	je 0xbde8 <function_bde8>
0xbd65:     c7 04 24 18 00 00 00               	mov dword ptr [esp], 0x18
; data inside code section at 0xbd6c -- 0xbd6d
0xbd6c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xbd6d -- 0xbd6e
; data inside code section at 0xbd6e -- 0xbd72
0xbd6e:     ff ff ff 89                                        |....            |
; function: function_bd72 at 0xbd72 -- 0xbd73
0xbd72:     c3                                 	ret 
; data inside code section at 0xbd73 -- 0xbd84
0xbd73:     83 c0 10 89 44 24 2c 74  1e 89 7c 24 04 89 04 24   |....D$,t..|$...$|
0xbd83:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xbd84 -- 0xbd85
; data inside code section at 0xbd85 -- 0xbd96
0xbd85:     ff ff ff 83 c7 04 8d 43  14 89 7c 24 04 89 04 24   |.......C..|$...$|
0xbd95:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xbd96 -- 0xbd97
; data inside code section at 0xbd97 -- 0xbdb6
0xbd97:     ff ff ff 8d 46 04 8b 4c  24 28 89 44 24 0c 0f b6   |....F..L$(.D$...|
0xbda7:     44 24 10 89 5c 24 04 89  4c 24 08 89 04 24 e8      |D$..\$..L$...$. |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xbdb6 -- 0xbdb7
; data inside code section at 0xbdb7 -- 0xbdb9
0xbdb7:     ff ff                                              |..              |
; function: function_bdb9 at 0xbdb9 -- 0xbde6
0xbdb9:     ff 89 e8 83 46 14                  	dec dword ptr [ecx + 0x144683e8]
0xbdbf:     01 8b 54 24 3c 65                  	add dword ptr [ebx + 0x653c2454], ecx
0xbdc5:     33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xbdcb:     89 5d 00                           	mov dword ptr [ebp], ebx
0xbdce:     75 62                              	jne 0xbe32 <function_be32>
0xbdd0:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xbdd4:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xbdd8:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xbddc:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xbde0:     83 c4 5c                           	add esp, 0x5c
0xbde3:     c2 04 00                           	ret 4
; data inside code section at 0xbde6 -- 0xbde8
0xbde6:     66 90                                              |f.              |
; function: function_bde8 at 0xbde8 -- 0xbe18
0xbde8:     8d 46 04                           	lea eax, [esi + 4]
0xbdeb:     39 44 24 28                        	cmp dword ptr [esp + 0x28], eax
0xbdef:     0f 84 70 ff ff ff                  	je 0xbd65
0xbdf5:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xbdf9:     8b 07                              	mov eax, dword ptr [edi]
0xbdfb:     8b 51 10                           	mov edx, dword ptr [ecx + 0x10]
0xbdfe:     8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0xbe01:     8b 4a f4                           	mov ecx, dword ptr [edx - 0xc]
0xbe04:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xbe08:     89 04 24                           	mov dword ptr [esp], eax
0xbe0b:     39 d9                              	cmp ecx, ebx
0xbe0d:     89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0xbe11:     0f 47 cb                           	cmova ecx, ebx
0xbe14:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0xbe18 -- 0xbe19
0xbe18:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xbe19 -- 0xbe1a
; data inside code section at 0xbe1a -- 0xbe1c
0xbe1a:     ff ff                                              |..              |
; function: function_be1c at 0xbe1c -- 0xbe1e
0xbe1c:     ff 2b                              	ljmp [ebx]
; function: function_be1e at 0xbe1e -- 0xbe32
0xbe1e:     5c                                 	pop esp
0xbe1f:     24 10                              	and al, 0x10 ; "D$\fps"
0xbe21:     85 c0                              	test eax, eax
0xbe23:     0f 44 c3                           	cmove eax, ebx
0xbe26:     c1 e8 1f                           	shr eax, 0x1f
0xbe29:     88 44 24 10                        	mov byte ptr [esp + 0x10], al
0xbe2d:     e9 33 ff ff ff                     	jmp 0xbd65
; function: function_be32 at 0xbe32 -- 0xbe33
; dynamically linked function: __stack_chk_fail at 0xbe33 -- 0xbe34
; data inside code section at 0xbe34 -- 0xbe41
0xbe34:     ff ff ff 8b 54 24 2c 89  c6 89 14 24 e8            |....T$,....$.   |
; dynamically linked function: _ZNSsD1Ev at 0xbe41 -- 0xbe42
; data inside code section at 0xbe42 -- 0xbe47
0xbe42:     ff ff ff 89 f0                                     |.....           |
; function: function_be47 at 0xbe47 -- 0xbe48
; data inside code section at 0xbe48 -- 0xbe4b
0xbe48:     04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0xbe4b -- 0xbe4c
; data inside code section at 0xbe4c -- 0xbe53
0xbe4c:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xbe53 -- 0xbe54
; data inside code section at 0xbe54 -- 0xbe58
0xbe54:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xbe58 -- 0xbe59
; data inside code section at 0xbe59 -- 0xbe5c
0xbe59:     ff ff ff                                           |...             |
; function: function_be5c at 0xbe5c -- 0xbe5e
0xbe5c:     eb e9                              	jmp 0xbe47 <function_be47>
; data inside code section at 0xbe5e -- 0xbe5f
0xbe5e:     89                                                 |.               |
; function: function_be5f at 0xbe5f -- 0xbe60
0xbe5f:     c3                                 	ret 
; data inside code section at 0xbe60 -- 0xbe61
0xbe60:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xbe61 -- 0xbe62
; data inside code section at 0xbe62 -- 0xbe69
0xbe62:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xbe69 -- 0xbe6a
; data inside code section at 0xbe6a -- 0xbe6d
0xbe6a:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_ at 0xbe70 -- 0xbf2a
0xbe70:     55                                 	push ebp
0xbe71:     57                                 	push edi
0xbe72:     56                                 	push esi
0xbe73:     53                                 	push ebx
0xbe74:     83 ec 5c                           	sub esp, 0x5c
0xbe77:     8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0xbe7b:     8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0xbe7f:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xbe83:     8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0xbe87:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xbe8b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbe91:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xbe95:     31 c0                              	xor eax, eax
0xbe97:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xbe9b:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xbe9f:     8b 7a 08                           	mov edi, dword ptr [edx + 8]
0xbea2:     85 ff                              	test edi, edi
0xbea4:     0f 84 bb 00 00 00                  	je 0xbf65 <function_bf65>
0xbeaa:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xbeae:     8b 12                              	mov edx, dword ptr [edx]
0xbeb0:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xbeb4:     8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0xbeb7:     eb 15                              	jmp 0xbece <_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_+0x5e>
; data inside code section at 0xbeb9 -- 0xbec0
0xbeb9:     8d b4 26 00 00 00 00                               |..&....         |
0xbec0:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xbec3:     b9 01 00 00 00                     	mov ecx, 1
0xbec8:     85 c0                              	test eax, eax
0xbeca:     74 41                              	je 0xbf0d <_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_+0x9d>
0xbecc:     89 c7                              	mov edi, eax
0xbece:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xbed1:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xbed5:     8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0xbed8:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xbedc:     89 04 24                           	mov dword ptr [esp], eax
0xbedf:     39 de                              	cmp esi, ebx
0xbee1:     89 da                              	mov edx, ebx
0xbee3:     0f 46 d6                           	cmovbe edx, esi
0xbee6:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xbeea:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xbeee:     e8 fc ff ff ff                     	call 0xbeef
0xbef3:     89 f1                              	mov ecx, esi
0xbef5:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xbef9:     29 d9                              	sub ecx, ebx
0xbefb:     85 c0                              	test eax, eax
0xbefd:     0f 44 c1                           	cmove eax, ecx
0xbf00:     85 c0                              	test eax, eax
0xbf02:     78 bc                              	js 0xbec0 <_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_+0x50>
0xbf04:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xbf07:     31 c9                              	xor ecx, ecx
0xbf09:     85 c0                              	test eax, eax
0xbf0b:     75 bf                              	jne 0xbecc <_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_+0x5c>
0xbf0d:     84 c9                              	test cl, cl
0xbf0f:     89 d0                              	mov eax, edx
0xbf11:     89 fa                              	mov edx, edi
0xbf13:     75 5b                              	jne 0xbf70 <function_bf70>
0xbf15:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xbf19:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xbf1d:     29 f3                              	sub ebx, esi
0xbf1f:     89 2c 24                           	mov dword ptr [esp], ebp
0xbf22:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xbf26:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0xbf2a -- 0xbf2b
0xbf2a:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xbf2b -- 0xbf2c
; data inside code section at 0xbf2c -- 0xbf2e
0xbf2c:     ff ff                                              |..              |
; function: function_bf2e at 0xbf2e -- 0xbf38
0xbf2e:     ff 8b 54 24 28 85                  	dec dword ptr [ebx - 0x7ad7dbac]
0xbf34:     c0 0f 44                           	ror byte ptr [edi], 0x44
0xbf37:     c3                                 	ret 
; data inside code section at 0xbf38 -- 0xbf46
0xbf38:     85 c0 78 6c 8b 44 24 30  89 10 c6 40 04 00         |..xl.D$0...@..  |
; function: function_bf46 at 0xbf46 -- 0xbf65
0xbf46:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xbf4a:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xbf51:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xbf55:     0f 85 8b 00 00 00                  	jne 0xbfe6 <function_bfe6>
0xbf5b:     83 c4 5c                           	add esp, 0x5c
0xbf5e:     5b                                 	pop ebx
0xbf5f:     5e                                 	pop esi
0xbf60:     5f                                 	pop edi
0xbf61:     5d                                 	pop ebp
0xbf62:     c2 04 00                           	ret 4
; function: function_bf65 at 0xbf65 -- 0xbf70
0xbf65:     89 d7                              	mov edi, edx
0xbf67:     83 c7 04                           	add edi, 4
0xbf6a:     8d b6 00 00 00 00                  	lea esi, [esi]
; function: function_bf70 at 0xbf70 -- 0xbf7c
0xbf70:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xbf74:     3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0xbf77:     74 2f                              	je 0xbfa8 <function_bfa8>
0xbf79:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xbf7c -- 0xbf7d
0xbf7c:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0xbf7d -- 0xbf7e
; data inside code section at 0xbf7e -- 0xbf80
0xbf7e:     ff ff                                              |..              |
; function: function_bf80 at 0xbf80 -- 0xbfa2
0xbf80:     ff 89 c2 8b 44 24                  	dec dword ptr [ecx + 0x24448bc2]
0xbf86:     38 8b 6a 10 8b 00                  	cmp byte ptr [ebx + 0x8b106a], cl
0xbf8c:     8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0xbf8f:     8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0xbf92:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xbf96:     89 d8                              	mov eax, ebx
0xbf98:     39 de                              	cmp esi, ebx
0xbf9a:     0f 46 c6                           	cmovbe eax, esi
0xbf9d:     e9 73 ff ff ff                     	jmp 0xbf15
; data inside code section at 0xbfa2 -- 0xbfa8
0xbfa2:     8d b6 00 00 00 00                                  |......          |
; function: function_bfa8 at 0xbfa8 -- 0xbfe6
0xbfa8:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xbfac:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xbfb0:     89 04 24                           	mov dword ptr [esp], eax
0xbfb3:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xbfb7:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbfbf:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xbfc3:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xbfc7:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xbfcb:     e8 c0 bb 00 00                     	call 0x17b90 <unknown_17b90>
0xbfd0:     83 ec 04                           	sub esp, 4
0xbfd3:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xbfd7:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xbfdb:     89 02                              	mov dword ptr [edx], eax
0xbfdd:     c6 42 04 01                        	mov byte ptr [edx + 4], 1
0xbfe1:     e9 60 ff ff ff                     	jmp 0xbf46 <function_bf46>
; function: function_bfe6 at 0xbfe6 -- 0xbfeb
0xbfe6:     e8 fc ff ff ff                     	call 0xbfe7
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_ at 0xbff0 -- 0xc074
0xbff0:     83 ec 7c                           	sub esp, 0x7c
0xbff3:     89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0xbff7:     8b ac 24 84 00 00 00               	mov ebp, dword ptr [esp + 0x84]
0xbffe:     89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0xc002:     8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0xc009:     8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0xc010:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xc017:     89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0xc01b:     31 c9                              	xor ecx, ecx
0xc01d:     8d 45 04                           	lea eax, [ebp + 4]
0xc020:     39 c6                              	cmp esi, eax
0xc022:     89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0xc026:     8b bc 24 80 00 00 00               	mov edi, dword ptr [esp + 0x80]
0xc02d:     89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0xc031:     89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0xc035:     0f 84 bd 01 00 00                  	je 0xc1f8 <function_c1f8>
0xc03b:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xc03f:     8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0xc042:     8b 12                              	mov edx, dword ptr [edx]
0xc044:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xc048:     8b 5a f4                           	mov ebx, dword ptr [edx - 0xc]
0xc04b:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xc04f:     8b 51 f4                           	mov edx, dword ptr [ecx - 0xc]
0xc052:     89 d9                              	mov ecx, ebx
0xc054:     39 da                              	cmp edx, ebx
0xc056:     0f 46 ca                           	cmovbe ecx, edx
0xc059:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xc05d:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xc061:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xc065:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xc069:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xc06d:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xc071:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xc074 -- 0xc075
0xc074:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xc075 -- 0xc076
; data inside code section at 0xc076 -- 0xc09d
0xc076:     ff ff ff 8b 54 24 34 89  d9 29 d1 85 c0 0f 44 c1   |....T$4..)....D.|
0xc086:     85 c0 0f 89 aa 00 00 00  8b 45 0c 39 f0 0f 84 25   |.........E.9...%|
0xc096:     02 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xc09d -- 0xc09e
; data inside code section at 0xc09e -- 0xc0c6
0xc09e:     ff ff ff 89 da 89 44 24  38 8b 40 10 8b 48 f4 89   |......D$8.@..H..|
0xc0ae:     04 24 39 d9 0f 46 d1 89  54 24 08 8b 54 24 3c 89   |.$9..F..T$..T$<.|
0xc0be:     4c 24 34 89 54 24 04 e8                            |L$4.T$..        |
; dynamically linked function: memcmp at 0xc0c6 -- 0xc0c7
; data inside code section at 0xc0c7 -- 0xc10b
0xc0c7:     ff ff ff 8b 4c 24 34 29  d9 85 c0 0f 44 c1 85 c0   |....L$4)....D...|
0xc0d7:     0f 89 5b 01 00 00 8b 44  24 38 8b 50 0c 85 d2 0f   |..[....D$8.P....|
0xc0e7:     84 74 01 00 00 8b 4c 24  40 89 74 24 0c 89 74 24   |.t....L$@.t$..t$|
0xc0f7:     08 89 6c 24 04 89 4c 24  10 89 3c 24 e8 08 bc 00   |..l$..L$..<$....|
0xc107:     00 83 ec 04                                        |....            |
; function: function_c10b at 0xc10b -- 0xc134
0xc10b:     8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0xc10f:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xc116:     89 f8                              	mov eax, edi
0xc118:     0f 85 c4 01 00 00                  	jne 0xc2e2 <function_c2e2>
0xc11e:     8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0xc122:     8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0xc126:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0xc12a:     8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0xc12e:     83 c4 7c                           	add esp, 0x7c
0xc131:     c2 04 00                           	ret 4
; data inside code section at 0xc134 -- 0xc172
0xc134:     8d 74 26 00 8b 4c 24 38  89 54 24 34 89 4c 24 08   |.t&..L$8.T$4.L$.|
0xc144:     8b 4c 24 3c 89 4c 24 04  8b 4c 24 2c 89 0c 24 e8   |.L$<.L$..L$,..$.|
0xc154:     fc ff ff ff 8b 54 24 34  29 da 85 c0 0f 45 d0 85   |.....T$4)....E..|
0xc164:     d2 0f 89 85 00 00 00 8b  45 10 39 f0 0f 84         |........E.9...  |
; function: function_c172 at 0xc172 -- 0xc179
0xc172:     ea 00 00 00 89 34 24               	ljmp 0x2434:0x89000000 <function_89000000>
; data inside code section at 0xc179 -- 0xc17a
0xc179:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xc17a -- 0xc17b
; data inside code section at 0xc17b -- 0xc1a3
0xc17b:     ff ff ff 89 c1 8b 40 10  8b 50 f4 89 44 24 04 89   |......@..P..D$..|
0xc18b:     4c 24 34 39 da 89 54 24  38 0f 47 d3 89 54 24 08   |L$49..T$8.G..T$.|
0xc19b:     8b 54 24 3c 89 14 24 e8                            |.T$<..$.        |
; dynamically linked function: memcmp at 0xc1a3 -- 0xc1a4
; data inside code section at 0xc1a4 -- 0xc1a6
0xc1a4:     ff ff                                              |..              |
; function: function_c1a6 at 0xc1a6 -- 0xc1eb
0xc1a6:     ff 8b 4c 24 34 2b                  	dec dword ptr [ebx + 0x2b34244c]
0xc1ac:     5c                                 	pop esp
0xc1ad:     24 38                              	and al, 0x38
0xc1af:     85 c0                              	test eax, eax
0xc1b1:     0f 44 c3                           	cmove eax, ebx
0xc1b4:     85 c0                              	test eax, eax
0xc1b6:     0f 89 cc 00 00 00                  	jns 0xc288 <function_c288>
0xc1bc:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xc1bf:     85 c0                              	test eax, eax
0xc1c1:     0f 84 e9 00 00 00                  	je 0xc2b0 <function_c2b0>
0xc1c7:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xc1cb:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xc1cf:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xc1d3:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xc1d7:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xc1db:     89 3c 24                           	mov dword ptr [esp], edi
0xc1de:     e8 2d bb 00 00                     	call 0x17d10 <unknown_17d10>
0xc1e3:     83 ec 04                           	sub esp, 4
0xc1e6:     e9 20 ff ff ff                     	jmp 0xc10b <function_c10b>
; data inside code section at 0xc1eb -- 0xc1f0
0xc1eb:     90 8d 74 26 00                                     |..t&.           |
; function: function_c1f0 at 0xc1f0 -- 0xc1f7
0xc1f0:     89 37                              	mov dword ptr [edi], esi
0xc1f2:     e9 14 ff ff ff                     	jmp 0xc10b <function_c10b>
; data inside code section at 0xc1f7 -- 0xc1f8
0xc1f7:     90                                                 |.               |
; function: function_c1f8 at 0xc1f8 -- 0xc229
0xc1f8:     8b 4d 14                           	mov ecx, dword ptr [ebp + 0x14]
0xc1fb:     85 c9                              	test ecx, ecx
0xc1fd:     74 39                              	je 0xc238 <function_c238>
0xc1ff:     8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0xc202:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xc206:     8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0xc209:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xc20d:     8b 11                              	mov edx, dword ptr [ecx]
0xc20f:     8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0xc212:     8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0xc215:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xc219:     89 04 24                           	mov dword ptr [esp], eax
0xc21c:     89 d9                              	mov ecx, ebx
0xc21e:     39 de                              	cmp esi, ebx
0xc220:     0f 46 ce                           	cmovbe ecx, esi
0xc223:     29 f3                              	sub ebx, esi
0xc225:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0xc229 -- 0xc22a
0xc229:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xc22a -- 0xc22b
; data inside code section at 0xc22b -- 0xc22f
0xc22b:     ff ff ff 85                                        |....            |
; function: function_c22f at 0xc22f -- 0xc233
0xc22f:     c0 0f 44                           	ror byte ptr [edi], 0x44
0xc232:     c3                                 	ret 
; data inside code section at 0xc233 -- 0xc238
0xc233:     85 c0 78 61 90                                     |..xa.           |
; function: function_c238 at 0xc238 -- 0xc25e
0xc238:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xc23c:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xc240:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xc244:     89 04 24                           	mov dword ptr [esp], eax
0xc247:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xc24b:     e8 10 bc 00 00                     	call 0x17e60 <unknown_17e60>
0xc250:     83 ec 04                           	sub esp, 4
0xc253:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0xc257:     89 07                              	mov dword ptr [edi], eax
0xc259:     e9 ad fe ff ff                     	jmp 0xc10b <function_c10b>
; data inside code section at 0xc25e -- 0xc26c
0xc25e:     66 90 8b 54 24 40 89 44  24 0c 89 54 24 10         |f..T$@.D$..T$.  |
; function: function_c26c at 0xc26c -- 0xc288
0xc26c:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xc274:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xc278:     89 3c 24                           	mov dword ptr [esp], edi
0xc27b:     e8 90 ba 00 00                     	call 0x17d10 <unknown_17d10>
0xc280:     83 ec 04                           	sub esp, 4
0xc283:     e9 83 fe ff ff                     	jmp 0xc10b <function_c10b>
; function: function_c288 at 0xc288 -- 0xc296
0xc288:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xc28c:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xc290:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xc294:     eb ae                              	jmp 0xc244
; data inside code section at 0xc296 -- 0xc298
0xc296:     66 90                                              |f.              |
; function: function_c298 at 0xc298 -- 0xc2aa
0xc298:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xc29c:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xc2a0:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xc2a4:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xc2a8:     eb c2                              	jmp 0xc26c <function_c26c>
; data inside code section at 0xc2aa -- 0xc2b0
0xc2aa:     8d b6 00 00 00 00                                  |......          |
; function: function_c2b0 at 0xc2b0 -- 0xc2be
0xc2b0:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xc2b4:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xc2b8:     89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0xc2bc:     eb ae                              	jmp 0xc26c <function_c26c>
; function: function_c2be at 0xc2be -- 0xc2e2
0xc2be:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xc2c2:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xc2c6:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xc2ca:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xc2ce:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xc2d2:     89 3c 24                           	mov dword ptr [esp], edi
0xc2d5:     e8 36 ba 00 00                     	call 0x17d10 <unknown_17d10>
0xc2da:     83 ec 04                           	sub esp, 4
0xc2dd:     e9 29 fe ff ff                     	jmp 0xc10b <function_c10b>
; function: function_c2e2 at 0xc2e2 -- 0xc2e3
; dynamically linked function: __stack_chk_fail at 0xc2e3 -- 0xc2e4
; data inside code section at 0xc2e4 -- 0xc2e7
0xc2e4:     ff ff ff                                           |...             |
; section: .text._ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_
; function: _ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_ at 0xc2f0 -- 0xc36d
0xc2f0:     55                                 	push ebp
0xc2f1:     57                                 	push edi
0xc2f2:     56                                 	push esi
0xc2f3:     53                                 	push ebx
0xc2f4:     83 ec 4c                           	sub esp, 0x4c
0xc2f7:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0xc2fb:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xc2ff:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xc303:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc309:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc30d:     31 c0                              	xor eax, eax
0xc30f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xc313:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xc317:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc31b:     8b 70 08                           	mov esi, dword ptr [eax + 8]
0xc31e:     83 c2 04                           	add edx, 4
0xc321:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xc325:     85 f6                              	test esi, esi
0xc327:     0f 84 0e 01 00 00                  	je 0xc43b <function_c43b>
0xc32d:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc331:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0xc335:     8b 12                              	mov edx, dword ptr [edx]
0xc337:     89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0xc33b:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xc33f:     8b 6a f4                           	mov ebp, dword ptr [edx - 0xc]
0xc342:     89 d3                              	mov ebx, edx
0xc344:     eb 0d                              	jmp 0xc353 <_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_+0x63>
; data inside code section at 0xc346 -- 0xc348
0xc346:     66 90                                              |f.              |
0xc348:     89 74 24 18                        	mov dword ptr [esp + 0x18], esi
0xc34c:     8b 76 08                           	mov esi, dword ptr [esi + 8]
0xc34f:     85 f6                              	test esi, esi
0xc351:     74 2f                              	je 0xc382 <function_c382>
0xc353:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xc356:     89 ea                              	mov edx, ebp
0xc358:     8b 78 f4                           	mov edi, dword ptr [eax - 0xc]
0xc35b:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xc35f:     89 04 24                           	mov dword ptr [esp], eax
0xc362:     39 ef                              	cmp edi, ebp
0xc364:     0f 46 d7                           	cmovbe edx, edi
0xc367:     29 ef                              	sub edi, ebp
0xc369:     89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0xc36d -- 0xc36e
0xc36d:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xc36e -- 0xc36f
; data inside code section at 0xc36f -- 0xc382
0xc36f:     ff ff ff 85 c0 0f 44 c7  85 c0 79 cd 8b 76 0c 85   |......D...y..v..|
0xc37f:     f6 75 d1                                           |.u.             |
; function: function_c382 at 0xc382 -- 0xc3aa
0xc382:     8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0xc386:     39 5c 24 24                        	cmp dword ptr [esp + 0x24], ebx
0xc38a:     74 2c                              	je 0xc3b8 <function_c3b8>
0xc38c:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xc38f:     89 ea                              	mov edx, ebp
0xc391:     8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0xc394:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc398:     39 ee                              	cmp esi, ebp
0xc39a:     0f 46 d6                           	cmovbe edx, esi
0xc39d:     29 f5                              	sub ebp, esi
0xc39f:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xc3a3:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xc3a7:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xc3aa -- 0xc3ab
0xc3aa:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xc3ab -- 0xc3ac
; data inside code section at 0xc3ac -- 0xc3b8
0xc3ac:     ff ff ff 85 c0 0f 44 c5  85 c0 79 6b               |......D...yk    |
; function: function_c3b8 at 0xc3b8 -- 0xc40e
0xc3b8:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc3bc:     8d 74 24 30                        	lea esi, [esp + 0x30]
0xc3c0:     c7 44 24 38 0c 00 00 00            	mov dword ptr [esp + 0x38], 0xc
0xc3c8:     89 34 24                           	mov dword ptr [esp], esi
0xc3cb:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xc3cf:     e8 fc ff ff ff                     	call 0xc3d0
0xc3d4:     8d 7c 24 38                        	lea edi, [esp + 0x38]
0xc3d8:     8d 6c 24 34                        	lea ebp, [esp + 0x34]
0xc3dc:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc3e0:     89 2c 24                           	mov dword ptr [esp], ebp
0xc3e3:     e8 fc ff ff ff                     	call 0xc3e4
0xc3e8:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xc3ec:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xc3f0:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xc3f4:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0xc3f8:     89 04 24                           	mov dword ptr [esp], eax
0xc3fb:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xc3ff:     e8 dc be 00 00                     	call 0x182e0 <unknown_182e0>
0xc404:     83 ec 04                           	sub esp, 4
0xc407:     8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0xc40b:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xc40e -- 0xc40f
0xc40e:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xc40f -- 0xc410
; data inside code section at 0xc410 -- 0xc417
0xc410:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0xc417 -- 0xc418
; data inside code section at 0xc418 -- 0xc41b
0xc418:     ff ff ff                                           |...             |
; function: function_c41b at 0xc41b -- 0xc43b
0xc41b:     89 3c 24                           	mov dword ptr [esp], edi
0xc41e:     e8 fc ff ff ff                     	call 0xc41f
0xc423:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xc427:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc42e:     8d 43 14                           	lea eax, [ebx + 0x14]
0xc431:     75 11                              	jne 0xc444 <function_c444>
0xc433:     83 c4 4c                           	add esp, 0x4c
0xc436:     5b                                 	pop ebx
0xc437:     5e                                 	pop esi
0xc438:     5f                                 	pop edi
0xc439:     5d                                 	pop ebp
0xc43a:     c3                                 	ret 
; function: function_c43b at 0xc43b -- 0xc444
0xc43b:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0xc43f:     e9 74 ff ff ff                     	jmp 0xc3b8 <function_c3b8>
; function: function_c444 at 0xc444 -- 0xc445
; dynamically linked function: __stack_chk_fail at 0xc445 -- 0xc446
; data inside code section at 0xc446 -- 0xc44a
0xc446:     ff ff ff 89                                        |....            |
; function: function_c44a at 0xc44a -- 0xc44b
0xc44a:     c3                                 	ret 
; data inside code section at 0xc44b -- 0xc44f
0xc44b:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0xc44f -- 0xc450
; data inside code section at 0xc450 -- 0xc453
0xc450:     ff ff ff                                           |...             |
; function: function_c453 at 0xc453 -- 0xc454
; data inside code section at 0xc454 -- 0xc457
0xc454:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0xc457 -- 0xc458
; data inside code section at 0xc458 -- 0xc45f
0xc458:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xc45f -- 0xc460
; data inside code section at 0xc460 -- 0xc464
0xc460:     ff ff ff 89                                        |....            |
; function: function_c464 at 0xc464 -- 0xc465
0xc464:     c3                                 	ret 
; data inside code section at 0xc465 -- 0xc469
0xc465:     89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZNSsD1Ev at 0xc469 -- 0xc46a
; data inside code section at 0xc46a -- 0xc471
0xc46a:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0xc471 -- 0xc472
; data inside code section at 0xc472 -- 0xc475
0xc472:     ff ff ff                                           |...             |
; function: function_c475 at 0xc475 -- 0xc477
0xc475:     eb dc                              	jmp 0xc453 <function_c453>
; function: function_c477 at 0xc477 -- 0xc47f
0xc477:     89 c3                              	mov ebx, eax
0xc479:     8d 7c 24 38                        	lea edi, [esp + 0x38]
0xc47d:     eb d4                              	jmp 0xc453 <function_c453>
; section: .text._ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_
; function: _ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_ at 0xc480 -- 0xc731
0xc480:     55                                 	push ebp
0xc481:     57                                 	push edi
0xc482:     56                                 	push esi
0xc483:     53                                 	push ebx
0xc484:     83 ec 7c                           	sub esp, 0x7c
0xc487:     8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0xc48e:     8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0xc495:     8b 8c 24 a0 00 00 00               	mov ecx, dword ptr [esp + 0xa0]
0xc49c:     8b 9c 24 9c 00 00 00               	mov ebx, dword ptr [esp + 0x9c]
0xc4a3:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc4a7:     8b 84 24 a8 00 00 00               	mov eax, dword ptr [esp + 0xa8]
0xc4ae:     89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0xc4b2:     8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0xc4b9:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xc4c0:     89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0xc4c4:     31 d2                              	xor edx, edx
0xc4c6:     8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0xc4cd:     2b 94 24 a8 00 00 00               	sub edx, dword ptr [esp + 0xa8]
0xc4d4:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xc4d8:     8b 84 24 ac 00 00 00               	mov eax, dword ptr [esp + 0xac]
0xc4df:     8b bc 24 98 00 00 00               	mov edi, dword ptr [esp + 0x98]
0xc4e6:     c1 fa 02                           	sar edx, 2
0xc4e9:     8b b4 24 b4 00 00 00               	mov esi, dword ptr [esp + 0xb4]
0xc4f0:     69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0xc4f6:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0xc4fa:     8b 84 24 b0 00 00 00               	mov eax, dword ptr [esp + 0xb0]
0xc501:     89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0xc505:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xc509:     89 5c 24 58                        	mov dword ptr [esp + 0x58], ebx
0xc50d:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xc511:     29 c8                              	sub eax, ecx
0xc513:     c1 f8 02                           	sar eax, 2
0xc516:     83 e8 01                           	sub eax, 1
0xc519:     6b c0 2a                           	imul eax, eax, 0x2a
0xc51c:     89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0xc520:     89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0xc524:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0xc528:     01 d0                              	add eax, edx
0xc52a:     89 da                              	mov edx, ebx
0xc52c:     29 ea                              	sub edx, ebp
0xc52e:     c1 fa 02                           	sar edx, 2
0xc531:     69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0xc537:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xc53b:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xc53f:     01 c2                              	add edx, eax
0xc541:     85 d2                              	test edx, edx
0xc543:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xc547:     0f 8e da 01 00 00                  	jle 0xc727 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2a7>
0xc54d:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xc550:     8b 0e                              	mov ecx, dword ptr [esi]
0xc552:     8d b6 00 00 00 00                  	lea esi, [esi]
0xc558:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xc55c:     29 c8                              	sub eax, ecx
0xc55e:     2b 54 24 20                        	sub edx, dword ptr [esp + 0x20]
0xc562:     c1 f8 02                           	sar eax, 2
0xc565:     8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0xc569:     69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0xc56f:     c1 fa 02                           	sar edx, 2
0xc572:     69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0xc578:     39 d0                              	cmp eax, edx
0xc57a:     0f 4e d0                           	cmovle edx, eax
0xc57d:     3b 54 24 1c                        	cmp edx, dword ptr [esp + 0x1c]
0xc581:     0f 4e da                           	cmovle ebx, edx
0xc584:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xc588:     8d 04 5b                           	lea eax, [ebx + ebx*2]
0xc58b:     c1 e0 02                           	shl eax, 2
0xc58e:     89 c5                              	mov ebp, eax
0xc590:     c1 fd 02                           	sar ebp, 2
0xc593:     01 c2                              	add edx, eax
0xc595:     69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0xc59b:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xc59f:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xc5a3:     85 ed                              	test ebp, ebp
0xc5a5:     7e 30                              	jle 0xc5d7 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x157>
0xc5a7:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xc5ab:     89 cf                              	mov edi, ecx
0xc5ad:     89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0xc5b1:     89 de                              	mov esi, ebx
0xc5b3:     29 c8                              	sub eax, ecx
0xc5b5:     89 c3                              	mov ebx, eax
0xc5b7:     90                                 	nop 
0xc5b8:     8d 04 1f                           	lea eax, [edi + ebx]
0xc5bb:     89 3c 24                           	mov dword ptr [esp], edi
0xc5be:     83 c7 0c                           	add edi, 0xc
0xc5c1:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xc5c5:     e8 26 a9 00 00                     	call 0x16ef0 <unknown_16ef0>
0xc5ca:     83 ed 01                           	sub ebp, 1
0xc5cd:     75 e9                              	jne 0xc5b8 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x138>
0xc5cf:     89 f3                              	mov ebx, esi
0xc5d1:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xc5d5:     8b 0e                              	mov ecx, dword ptr [esi]
0xc5d7:     8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0xc5db:     2b 7c 24 28                        	sub edi, dword ptr [esp + 0x28]
0xc5df:     c1 ff 02                           	sar edi, 2
0xc5e2:     69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0xc5e8:     01 df                              	add edi, ebx
0xc5ea:     0f 88 20 01 00 00                  	js 0xc710 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x290>
0xc5f0:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xc5f4:     83 ff 29                           	cmp edi, 0x29
0xc5f7:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xc5fb:     7e 46                              	jle 0xc643 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1c3>
0xc5fd:     85 ff                              	test edi, edi
0xc5ff:     0f 8e 0b 01 00 00                  	jle 0xc710 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x290>
0xc605:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc60a:     f7 ef                              	imul edi
0xc60c:     89 f8                              	mov eax, edi
0xc60e:     c1 f8 1f                           	sar eax, 0x1f
0xc611:     c1 fa 03                           	sar edx, 3
0xc614:     29 c2                              	sub edx, eax
0xc616:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xc61a:     8d 04 90                           	lea eax, [eax + edx*4]
0xc61d:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xc621:     6b d2 2a                           	imul edx, edx, 0x2a
0xc624:     8b 00                              	mov eax, dword ptr [eax]
0xc626:     29 d7                              	sub edi, edx
0xc628:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xc62c:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xc630:     05 f8 01 00 00                     	add eax, 0x1f8
0xc635:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xc639:     8d 04 7f                           	lea eax, [edi + edi*2]
0xc63c:     8d 04 82                           	lea eax, [edx + eax*4]
0xc63f:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xc643:     89 cf                              	mov edi, ecx
0xc645:     2b 7e 04                           	sub edi, dword ptr [esi + 4]
0xc648:     c1 ff 02                           	sar edi, 2
0xc64b:     69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0xc651:     01 df                              	add edi, ebx
0xc653:     0f 88 9f 00 00 00                  	js 0xc6f8 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x278>
0xc659:     83 ff 29                           	cmp edi, 0x29
0xc65c:     7f 52                              	jg 0xc6b0 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x230>
0xc65e:     03 4c 24 24                        	add ecx, dword ptr [esp + 0x24]
0xc662:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xc665:     89 0e                              	mov dword ptr [esi], ecx
0xc667:     29 5c 24 1c                        	sub dword ptr [esp + 0x1c], ebx
0xc66b:     8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0xc66f:     85 db                              	test ebx, ebx
0xc671:     0f 8f e1 fe ff ff                  	jg 0xc558 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0xd8>
0xc677:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xc67b:     89 0a                              	mov dword ptr [edx], ecx
0xc67d:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xc681:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0xc684:     89 41 08                           	mov dword ptr [ecx + 8], eax
0xc687:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xc68a:     89 51 04                           	mov dword ptr [ecx + 4], edx
0xc68d:     8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0xc691:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc698:     89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0xc69b:     89 c8                              	mov eax, ecx
0xc69d:     0f 85 8e 00 00 00                  	jne 0xc731 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2ac>
0xc6a3:     83 c4 7c                           	add esp, 0x7c
0xc6a6:     5b                                 	pop ebx
0xc6a7:     5e                                 	pop esi
0xc6a8:     5f                                 	pop edi
0xc6a9:     5d                                 	pop ebp
0xc6aa:     c2 04 00                           	ret 4
; data inside code section at 0xc6ad -- 0xc6b0
0xc6ad:     8d 76 00                                           |.v.             |
0xc6b0:     85 ff                              	test edi, edi
0xc6b2:     7e 44                              	jle 0xc6f8 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x278>
0xc6b4:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc6b9:     f7 ef                              	imul edi
0xc6bb:     89 f8                              	mov eax, edi
0xc6bd:     c1 f8 1f                           	sar eax, 0x1f
0xc6c0:     c1 fa 03                           	sar edx, 3
0xc6c3:     29 c2                              	sub edx, eax
0xc6c5:     8d 04 95 00 00 00 00               	lea eax, [edx*4]
0xc6cc:     03 46 0c                           	add eax, dword ptr [esi + 0xc]
0xc6cf:     6b d2 2a                           	imul edx, edx, 0x2a
0xc6d2:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xc6d5:     8b 08                              	mov ecx, dword ptr [eax]
0xc6d7:     29 d7                              	sub edi, edx
0xc6d9:     8d 14 7f                           	lea edx, [edi + edi*2]
0xc6dc:     8d 81 f8 01 00 00                  	lea eax, [ecx + 0x1f8]
0xc6e2:     89 4e 04                           	mov dword ptr [esi + 4], ecx
0xc6e5:     8d 0c 91                           	lea ecx, [ecx + edx*4]
0xc6e8:     89 46 08                           	mov dword ptr [esi + 8], eax
0xc6eb:     89 0e                              	mov dword ptr [esi], ecx
0xc6ed:     e9 75 ff ff ff                     	jmp 0xc667 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1e7>
; data inside code section at 0xc6f2 -- 0xc6f8
0xc6f2:     8d b6 00 00 00 00                                  |......          |
0xc6f8:     89 fa                              	mov edx, edi
0xc6fa:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc6ff:     f7 d2                              	not edx
0xc701:     d1 ea                              	shr edx, 1
0xc703:     f7 e2                              	mul edx
0xc705:     c1 ea 02                           	shr edx, 2
0xc708:     f7 d2                              	not edx
0xc70a:     eb b9                              	jmp 0xc6c5 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x245>
; data inside code section at 0xc70c -- 0xc710
0xc70c:     8d 74 26 00                                        |.t&.            |
0xc710:     89 fa                              	mov edx, edi
0xc712:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc717:     f7 d2                              	not edx
0xc719:     d1 ea                              	shr edx, 1
0xc71b:     f7 e2                              	mul edx
0xc71d:     c1 ea 02                           	shr edx, 2
0xc720:     f7 d2                              	not edx
0xc722:     e9 ef fe ff ff                     	jmp 0xc616 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x196>
0xc727:     8b 0e                              	mov ecx, dword ptr [esi]
0xc729:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xc72c:     e9 46 ff ff ff                     	jmp 0xc677 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1f7>
; data inside code section at 0xc731 -- 0xc732
0xc731:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc732 -- 0xc733
; data inside code section at 0xc733 -- 0xc736
0xc733:     ff ff ff                                           |...             |
; section: .text._ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_
; function: _ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_ at 0xc740 -- 0xca48
0xc740:     55                                 	push ebp
0xc741:     57                                 	push edi
0xc742:     56                                 	push esi
0xc743:     53                                 	push ebx
0xc744:     83 ec 7c                           	sub esp, 0x7c
0xc747:     8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0xc74e:     8b 8c 24 ac 00 00 00               	mov ecx, dword ptr [esp + 0xac]
0xc755:     8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0xc75c:     8b ac 24 a4 00 00 00               	mov ebp, dword ptr [esp + 0xa4]
0xc763:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xc767:     8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0xc76e:     89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0xc772:     8b 8c 24 b0 00 00 00               	mov ecx, dword ptr [esp + 0xb0]
0xc779:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0xc77d:     8b bc 24 a8 00 00 00               	mov edi, dword ptr [esp + 0xa8]
0xc784:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xc78b:     89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0xc78f:     31 d2                              	xor edx, edx
0xc791:     8b 9c 24 94 00 00 00               	mov ebx, dword ptr [esp + 0x94]
0xc798:     89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0xc79c:     8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0xc7a3:     89 ca                              	mov edx, ecx
0xc7a5:     8b b4 24 b4 00 00 00               	mov esi, dword ptr [esp + 0xb4]
0xc7ac:     89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0xc7b0:     89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0xc7b4:     29 c2                              	sub edx, eax
0xc7b6:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0xc7ba:     89 d0                              	mov eax, edx
0xc7bc:     8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0xc7c3:     c1 f8 02                           	sar eax, 2
0xc7c6:     83 e8 01                           	sub eax, 1
0xc7c9:     6b c8 2a                           	imul ecx, eax, 0x2a
0xc7cc:     89 e8                              	mov eax, ebp
0xc7ce:     29 f8                              	sub eax, edi
0xc7d0:     29 da                              	sub edx, ebx
0xc7d2:     c1 f8 02                           	sar eax, 2
0xc7d5:     69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0xc7db:     c1 fa 02                           	sar edx, 2
0xc7de:     69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0xc7e4:     89 5c 24 50                        	mov dword ptr [esp + 0x50], ebx
0xc7e8:     01 c8                              	add eax, ecx
0xc7ea:     8b 0e                              	mov ecx, dword ptr [esi]
0xc7ec:     89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0xc7f0:     01 c2                              	add edx, eax
0xc7f2:     85 d2                              	test edx, edx
0xc7f4:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xc7f8:     89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0xc7fc:     89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0xc800:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xc804:     0f 8e 32 02 00 00                  	jle 0xca3c <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2fc>
0xc80a:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0xc80d:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xc811:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xc818:     8b 6c 24 2c                        	mov ebp, dword ptr [esp + 0x2c]
0xc81c:     89 cb                              	mov ebx, ecx
0xc81e:     2b 5c 24 20                        	sub ebx, dword ptr [esp + 0x20]
0xc822:     89 ef                              	mov edi, ebp
0xc824:     2b 7c 24 38                        	sub edi, dword ptr [esp + 0x38]
0xc828:     c1 fb 02                           	sar ebx, 2
0xc82b:     69 db ab aa aa aa                  	imul ebx, ebx, 0xaaaaaaab
0xc831:     c1 ff 02                           	sar edi, 2
0xc834:     69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0xc83a:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xc83e:     89 f8                              	mov eax, edi
0xc840:     85 c0                              	test eax, eax
0xc842:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0xc846:     89 ef                              	mov edi, ebp
0xc848:     75 14                              	jne 0xc85e <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x11e>
0xc84a:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xc84e:     8b 78 fc                           	mov edi, dword ptr [eax - 4]
0xc851:     b8 2a 00 00 00                     	mov eax, 0x2a
0xc856:     81 c7 f8 01 00 00                  	add edi, 0x1f8
0xc85c:     89 fd                              	mov ebp, edi
0xc85e:     85 db                              	test ebx, ebx
0xc860:     89 ca                              	mov edx, ecx
0xc862:     75 0e                              	jne 0xc872 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x132>
0xc864:     8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0xc867:     b3 2a                              	mov bl, 0x2a
0xc869:     8b 52 fc                           	mov edx, dword ptr [edx - 4]
0xc86c:     81 c2 f8 01 00 00                  	add edx, 0x1f8
0xc872:     3b 44 24 24                        	cmp eax, dword ptr [esp + 0x24]
0xc876:     0f 4f 44 24 24                     	cmovg eax, dword ptr [esp + 0x24]
0xc87b:     39 d8                              	cmp eax, ebx
0xc87d:     0f 4e d8                           	cmovle ebx, eax
0xc880:     8d 04 5b                           	lea eax, [ebx + ebx*2]
0xc883:     c1 e0 02                           	shl eax, 2
0xc886:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xc88a:     89 f8                              	mov eax, edi
0xc88c:     2b 44 24 1c                        	sub eax, dword ptr [esp + 0x1c]
0xc890:     29 c5                              	sub ebp, eax
0xc892:     c1 fd 02                           	sar ebp, 2
0xc895:     69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0xc89b:     85 ed                              	test ebp, ebp
0xc89d:     7e 48                              	jle 0xc8e7 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1a7>
0xc89f:     89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0xc8a3:     89 de                              	mov esi, ebx
0xc8a5:     89 eb                              	mov ebx, ebp
0xc8a7:     89 d5                              	mov ebp, edx
0xc8a9:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xc8b0:     83 ef 0c                           	sub edi, 0xc
0xc8b3:     83 ed 0c                           	sub ebp, 0xc
0xc8b6:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xc8ba:     89 2c 24                           	mov dword ptr [esp], ebp
0xc8bd:     e8 ee a8 00 00                     	call 0x171b0 <unknown_171b0>
0xc8c2:     83 eb 01                           	sub ebx, 1
0xc8c5:     75 e9                              	jne 0xc8b0 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x170>
0xc8c7:     89 f3                              	mov ebx, esi
0xc8c9:     8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0xc8cd:     8b 0e                              	mov ecx, dword ptr [esi]
0xc8cf:     8b 56 04                           	mov edx, dword ptr [esi + 4]
0xc8d2:     89 cf                              	mov edi, ecx
0xc8d4:     29 d7                              	sub edi, edx
0xc8d6:     c1 ff 02                           	sar edi, 2
0xc8d9:     69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0xc8df:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xc8e3:     89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0xc8e7:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0xc8eb:     89 dd                              	mov ebp, ebx
0xc8ed:     f7 dd                              	neg ebp
0xc8ef:     29 df                              	sub edi, ebx
0xc8f1:     0f 88 31 01 00 00                  	js 0xca28 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2e8>
0xc8f7:     83 ff 29                           	cmp edi, 0x29
0xc8fa:     0f 8f c8 00 00 00                  	jg 0xc9c8 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x288>
0xc900:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xc904:     8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0xc908:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xc90c:     8d 14 82                           	lea edx, [edx + eax*4]
0xc90f:     29 df                              	sub edi, ebx
0xc911:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xc915:     0f 88 f2 00 00 00                  	js 0xca0d <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2cd>
0xc91b:     83 ff 29                           	cmp edi, 0x29
0xc91e:     7f 58                              	jg 0xc978 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x238>
0xc920:     8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0xc924:     8d 0c 81                           	lea ecx, [ecx + eax*4]
0xc927:     89 0e                              	mov dword ptr [esi], ecx
0xc929:     29 5c 24 24                        	sub dword ptr [esp + 0x24], ebx
0xc92d:     8b 7c 24 24                        	mov edi, dword ptr [esp + 0x24]
0xc931:     85 ff                              	test edi, edi
0xc933:     0f 8f df fe ff ff                  	jg 0xc818 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0xd8>
0xc939:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xc93d:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xc941:     89 08                              	mov dword ptr [eax], ecx
0xc943:     89 50 04                           	mov dword ptr [eax + 4], edx
0xc946:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xc94a:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xc94d:     89 42 08                           	mov dword ptr [edx + 8], eax
0xc950:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xc953:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0xc956:     89 d0                              	mov eax, edx
0xc958:     8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0xc95c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xc963:     0f 85 df 00 00 00                  	jne 0xca48 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x303>
0xc969:     83 c4 7c                           	add esp, 0x7c
0xc96c:     5b                                 	pop ebx
0xc96d:     5e                                 	pop esi
0xc96e:     5f                                 	pop edi
0xc96f:     5d                                 	pop ebp
0xc970:     c2 04 00                           	ret 4
; data inside code section at 0xc973 -- 0xc978
0xc973:     90 8d 74 26 00                                     |..t&.           |
0xc978:     85 ff                              	test edi, edi
0xc97a:     0f 8e 8d 00 00 00                  	jle 0xca0d <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2cd>
0xc980:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc985:     f7 ef                              	imul edi
0xc987:     89 f8                              	mov eax, edi
0xc989:     c1 f8 1f                           	sar eax, 0x1f
0xc98c:     c1 fa 03                           	sar edx, 3
0xc98f:     29 c2                              	sub edx, eax
0xc991:     8d 04 95 00 00 00 00               	lea eax, [edx*4]
0xc998:     03 46 0c                           	add eax, dword ptr [esi + 0xc]
0xc99b:     6b d2 2a                           	imul edx, edx, 0x2a
0xc99e:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xc9a1:     8b 00                              	mov eax, dword ptr [eax]
0xc9a3:     29 d7                              	sub edi, edx
0xc9a5:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xc9a9:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xc9ad:     89 46 04                           	mov dword ptr [esi + 4], eax
0xc9b0:     05 f8 01 00 00                     	add eax, 0x1f8
0xc9b5:     89 46 08                           	mov dword ptr [esi + 8], eax
0xc9b8:     8d 04 7f                           	lea eax, [edi + edi*2]
0xc9bb:     8d 0c 82                           	lea ecx, [edx + eax*4]
0xc9be:     89 0e                              	mov dword ptr [esi], ecx
0xc9c0:     e9 64 ff ff ff                     	jmp 0xc929 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1e9>
; data inside code section at 0xc9c5 -- 0xc9c8
0xc9c5:     8d 76 00                                           |.v.             |
0xc9c8:     85 ff                              	test edi, edi
0xc9ca:     7e 5c                              	jle 0xca28 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2e8>
0xc9cc:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xc9d1:     f7 ef                              	imul edi
0xc9d3:     89 f8                              	mov eax, edi
0xc9d5:     c1 f8 1f                           	sar eax, 0x1f
0xc9d8:     c1 fa 03                           	sar edx, 3
0xc9db:     29 c2                              	sub edx, eax
0xc9dd:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xc9e1:     8d 04 90                           	lea eax, [eax + edx*4]
0xc9e4:     6b d2 2a                           	imul edx, edx, 0x2a
0xc9e7:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xc9eb:     8b 00                              	mov eax, dword ptr [eax]
0xc9ed:     29 d7                              	sub edi, edx
0xc9ef:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xc9f3:     8d 04 7f                           	lea eax, [edi + edi*2]
0xc9f6:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xc9fa:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xc9fe:     8d 04 82                           	lea eax, [edx + eax*4]
0xca01:     29 df                              	sub edi, ebx
0xca03:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xca07:     0f 89 0e ff ff ff                  	jns 0xc91b <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1db>
0xca0d:     89 fa                              	mov edx, edi
0xca0f:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xca14:     f7 d2                              	not edx
0xca16:     d1 ea                              	shr edx, 1
0xca18:     f7 e2                              	mul edx
0xca1a:     c1 ea 02                           	shr edx, 2
0xca1d:     f7 d2                              	not edx
0xca1f:     e9 6d ff ff ff                     	jmp 0xc991 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x251>
; data inside code section at 0xca24 -- 0xca28
0xca24:     8d 74 26 00                                        |.t&.            |
0xca28:     89 fa                              	mov edx, edi
0xca2a:     b8 31 0c c3 30                     	mov eax, 0x30c30c31
0xca2f:     f7 d2                              	not edx
0xca31:     d1 ea                              	shr edx, 1
0xca33:     f7 e2                              	mul edx
0xca35:     c1 ea 02                           	shr edx, 2
0xca38:     f7 d2                              	not edx
0xca3a:     eb a1                              	jmp 0xc9dd <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x29d>
0xca3c:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xca3f:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xca43:     e9 f1 fe ff ff                     	jmp 0xc939 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1f9>
; data inside code section at 0xca48 -- 0xca49
0xca48:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xca49 -- 0xca4a
; data inside code section at 0xca4a -- 0xca4d
0xca4a:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail13heap_new_implINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEERSB_EEPT_T0_
; function: _ZN5boost6detail13heap_new_implINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEERSB_EEPT_T0_ at 0xca50 -- 0xcaa3
0xca50:     55                                 	push ebp
0xca51:     57                                 	push edi
0xca52:     56                                 	push esi
0xca53:     53                                 	push ebx
0xca54:     83 ec 6c                           	sub esp, 0x6c
0xca57:     8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0xca5e:     8d 74 24 28                        	lea esi, [esp + 0x28]
0xca62:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xca69:     89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0xca6d:     31 d2                              	xor edx, edx
0xca6f:     8b 10                              	mov edx, dword ptr [eax]
0xca71:     83 c0 04                           	add eax, 4
0xca74:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xca78:     89 34 24                           	mov dword ptr [esp], esi
0xca7b:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xca7f:     e8 fc ff ff ff                     	call 0xca80
0xca84:     c7 04 24 0c 01 00 00               	mov dword ptr [esp], 0x10c
0xca8b:     e8 fc ff ff ff                     	call 0xca8c
0xca90:     c7 40 04 00 00 00 00               	mov dword ptr [eax + 4], 0
0xca97:     8d 68 18                           	lea ebp, [eax + 0x18]
0xca9a:     89 c3                              	mov ebx, eax
0xca9c:     c7 40 08 00 00 00 00               	mov dword ptr [eax + 8], 0
; data inside code section at 0xcaa3 -- 0xcaa5
0xcaa3:     c7 00                                              |..              |
; dynamically linked function: _ZTVN5boost6detail16thread_data_baseE at 0xcaa5 -- 0xcac2
; data inside code section at 0xcac2 -- 0xcac3
0xcac2:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0xcac3 -- 0xcac4
; data inside code section at 0xcac4 -- 0xcade
0xcac4:     ff ff ff 85 c0 0f 85 7d  02 00 00 8d 7b 30 c7 44   |.......}....{0.D|
0xcad4:     24 04 00 00 00 00 89 3c  24 e8                     |$......<$.      |
; dynamically linked function: pthread_mutex_init at 0xcade -- 0xcadf
; data inside code section at 0xcadf -- 0xcaf9
0xcadf:     ff ff ff 85 c0 0f 85 41  02 00 00 8d 43 48 c7 44   |.......A....CH.D|
0xcaef:     24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0xcaf9 -- 0xcafa
; data inside code section at 0xcafa -- 0xcb18
0xcafa:     ff ff ff 85 c0 0f 85 43  01 00 00 8d 43 78 c7 44   |.......C....Cx.D|
0xcb0a:     24 04 00 00 00 00 89 44  24 1c 89 04 24 e8         |$......D$...$.  |
; dynamically linked function: pthread_mutex_init at 0xcb18 -- 0xcb19
; data inside code section at 0xcb19 -- 0xcb3a
0xcb19:     ff ff ff 85 c0 0f 85 8a  02 00 00 8d 93 90 00 00   |................|
0xcb29:     00 89 54 24 18 c7 44 24  04 00 00 00 00 89 14 24   |..T$..D$.......$|
0xcb39:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0xcb3a -- 0xcb3b
; data inside code section at 0xcb3b -- 0xcbe9
0xcb3b:     ff ff ff 85 c0 0f 85 33  02 00 00 8d 83 a8 00 00   |.......3........|
0xcb4b:     00 c7 44 24 04 00 00 00  00 89 04 24 e8 fc ff ff   |..D$.......$....|
0xcb5b:     ff 85 c0 0f 85 ac 00 00  00 8d 83 e4 00 00 00 89   |................|
0xcb6b:     83 ec 00 00 00 89 83 f0  00 00 00 8b 44 24 24 c6   |............D$$.|
0xcb7b:     83 d8 00 00 00 00 c6 83  d9 00 00 00 00 c6 83 da   |................|
0xcb8b:     00 00 00 00 89 83 04 01  00 00 8d 83 08 01 00 00   |................|
0xcb9b:     c7 83 dc 00 00 00 00 00  00 00 c7 83 e4 00 00 00   |................|
0xcbab:     00 00 00 00 c7 83 e8 00  00 00 00 00 00 00 c7 83   |................|
0xcbbb:     f4 00 00 00 00 00 00 00  c6 83 f8 00 00 00 01 c6   |................|
0xcbcb:     83 f9 00 00 00 00 c7 83  00 01 00 00 00 00 00 00   |................|
0xcbdb:     c7 03 98 49 01 00 89 74  24 04 89 04 24 e8         |...I...t$...$.  |
; dynamically linked function: _ZNSsC1ERKSs at 0xcbe9 -- 0xcbea
; data inside code section at 0xcbea -- 0xcbf1
0xcbea:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0xcbf1 -- 0xcbf2
; data inside code section at 0xcbf2 -- 0xcbf4
0xcbf2:     ff ff                                              |..              |
; function: function_cbf4 at 0xcbf4 -- 0xcc10
0xcbf4:     ff 89 d8 8b 54 24                  	dec dword ptr [ecx + 0x24548bd8]
0xcbfa:     5c                                 	pop esp
0xcbfb:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xcc02:     0f 85 1e 01 00 00                  	jne 0xcd26 <function_cd26>
0xcc08:     83 c4 6c                           	add esp, 0x6c
0xcc0b:     5b                                 	pop ebx
0xcc0c:     5e                                 	pop esi
0xcc0d:     5f                                 	pop edi
0xcc0e:     5d                                 	pop ebp
0xcc0f:     c3                                 	ret 
; data inside code section at 0xcc10 -- 0xcc18
0xcc10:     8b 54 24 18 89 14 24 e8                            |.T$...$.        |
; dynamically linked function: pthread_mutex_destroy at 0xcc18 -- 0xcc19
; data inside code section at 0xcc19 -- 0xcc4c
0xcc19:     ff ff ff 85 c0 74 50 c7  44 24 0c d0 89 00 00 c7   |.....tP.D$......|
0xcc29:     44 24 08 28 00 00 00 c7  44 24 04 f0 33 00 00 c7   |D$.(....D$..3...|
0xcc39:     04 24 30 34 00 00 e8 fc  ff ff ff 8d 74 26 00 89   |.$04........t&..|
0xcc49:     3c 24 e8                                           |<$.             |
; dynamically linked function: pthread_mutex_destroy at 0xcc4c -- 0xcc4d
; data inside code section at 0xcc4d -- 0xcc8c
0xcc4d:     ff ff ff 85 c0 75 cc 8d  7c 24 34 c7 44 24 38 00   |.....u..|$4.D$8.|
0xcc5d:     00 00 00 c7 44 24 34 b0  49 01 00 89 3c 24 e8 a0   |....D$4.I...<$..|
0xcc6d:     8f 00 00 8d 44 24 4c c7  44 24 50 00 00 00 00 c7   |....D$L.D$P.....|
0xcc7d:     44 24 4c b0 49 01 00 89  04 24 e8 84 8f 00 00      |D$L.I....$..... |
; function: function_cc8c at 0xcc8c -- 0xccd2
0xcc8c:     89 3c 24                           	mov dword ptr [esp], edi
0xcc8f:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcc93:     e8 58 39 00 00                     	call 0x105f0 <function_105f0>
0xcc98:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcc9c:     89 c7                              	mov edi, eax
0xcc9e:     89 2c 24                           	mov dword ptr [esp], ebp
0xcca1:     e8 9a 89 00 00                     	call 0x15640 <unknown_15640>
0xcca6:     8d 43 10                           	lea eax, [ebx + 0x10]
0xcca9:     89 04 24                           	mov dword ptr [esp], eax
0xccac:     e8 7f 47 00 00                     	call 0x11430 <function_11430>
0xccb1:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xccb4:     85 c0                              	test eax, eax
0xccb6:     74 15                              	je 0xcccd <function_cc8c+0x41>
0xccb8:     83 ca ff                           	or edx, 0xffffffff
0xccbb:     f0 0f c1 50 08                     	lock xadd dword ptr [eax + 8], edx
0xccc0:     83 ea 01                           	sub edx, 1
0xccc3:     75 08                              	jne 0xcccd <function_cc8c+0x41>
0xccc5:     8b 10                              	mov edx, dword ptr [eax]
0xccc7:     89 04 24                           	mov dword ptr [esp], eax
0xccca:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xcccd:     89 1c 24                           	mov dword ptr [esp], ebx
0xccd0:     89 fb                              	mov ebx, edi
; data inside code section at 0xccd2 -- 0xccd3
0xccd2:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xccd3 -- 0xccd4
; data inside code section at 0xccd4 -- 0xccd7
0xccd4:     ff ff ff                                           |...             |
; function: function_ccd7 at 0xccd7 -- 0xccd8
; data inside code section at 0xccd8 -- 0xccdb
0xccd8:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0xccdb -- 0xccdc
; data inside code section at 0xccdc -- 0xccdf
0xccdc:     ff ff ff                                           |...             |
; function: function_ccdf at 0xccdf -- 0xcd26
0xccdf:     89 1c 24                           	mov dword ptr [esp], ebx
0xcce2:     e8 fc ff ff ff                     	call 0xcce3
0xcce7:     8d 54 24 4c                        	lea edx, [esp + 0x4c]
0xcceb:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xccef:     89 14 24                           	mov dword ptr [esp], edx
0xccf2:     e8 f9 38 00 00                     	call 0x105f0 <function_105f0>
0xccf7:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xccfb:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xccff:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcd03:     89 14 24                           	mov dword ptr [esp], edx
0xcd06:     e8 35 89 00 00                     	call 0x15640 <unknown_15640>
0xcd0b:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcd0f:     89 3c 24                           	mov dword ptr [esp], edi
0xcd12:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcd16:     e8 85 89 00 00                     	call 0x156a0 <unknown_156a0>
0xcd1b:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcd1f:     89 c7                              	mov edi, eax
0xcd21:     e9 78 ff ff ff                     	jmp 0xcc9e
; function: function_cd26 at 0xcd26 -- 0xcd4c
0xcd26:     e8 fc ff ff ff                     	call 0xcd27
0xcd2b:     8d 7c 24 3c                        	lea edi, [esp + 0x3c]
0xcd2f:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0xcd37:     c7 44 24 3c b0 49 01 00            	mov dword ptr [esp + 0x3c], 0x149b0
0xcd3f:     89 3c 24                           	mov dword ptr [esp], edi
0xcd42:     e8 c9 8e 00 00                     	call 0x15c10 <unknown_15c10>
0xcd47:     e9 40 ff ff ff                     	jmp 0xcc8c <function_cc8c>
; function: function_cd4c at 0xcd4c -- 0xcd79
0xcd4c:     8d 7c 24 2c                        	lea edi, [esp + 0x2c]
0xcd50:     c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0xcd58:     c7 44 24 2c b0 49 01 00            	mov dword ptr [esp + 0x2c], 0x149b0
0xcd60:     89 3c 24                           	mov dword ptr [esp], edi
0xcd63:     e8 a8 8e 00 00                     	call 0x15c10 <unknown_15c10>
0xcd68:     89 c5                              	mov ebp, eax
0xcd6a:     89 3c 24                           	mov dword ptr [esp], edi
0xcd6d:     89 ef                              	mov edi, ebp
0xcd6f:     e8 7c 38 00 00                     	call 0x105f0 <function_105f0>
0xcd74:     e9 2d ff ff ff                     	jmp 0xcca6
; function: function_cd79 at 0xcd79 -- 0xcdae
0xcd79:     8d 44 24 54                        	lea eax, [esp + 0x54]
0xcd7d:     c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0xcd85:     c7 44 24 54 b0 49 01 00            	mov dword ptr [esp + 0x54], 0x149b0
0xcd8d:     89 04 24                           	mov dword ptr [esp], eax
0xcd90:     e8 7b 8e 00 00                     	call 0x15c10 <unknown_15c10>
0xcd95:     8d 54 24 54                        	lea edx, [esp + 0x54]
0xcd99:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcd9d:     89 14 24                           	mov dword ptr [esp], edx
0xcda0:     e8 4b 38 00 00                     	call 0x105f0 <function_105f0>
0xcda5:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcda9:     e9 4d ff ff ff                     	jmp 0xccfb
; function: function_cdae at 0xcdae -- 0xcde3
0xcdae:     8d 54 24 44                        	lea edx, [esp + 0x44]
0xcdb2:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0xcdba:     c7 44 24 44 b0 49 01 00            	mov dword ptr [esp + 0x44], 0x149b0
0xcdc2:     89 14 24                           	mov dword ptr [esp], edx
0xcdc5:     e8 46 8e 00 00                     	call 0x15c10 <unknown_15c10>
0xcdca:     8d 54 24 44                        	lea edx, [esp + 0x44]
0xcdce:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xcdd2:     89 14 24                           	mov dword ptr [esp], edx
0xcdd5:     e8 16 38 00 00                     	call 0x105f0 <function_105f0>
0xcdda:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xcdde:     e9 2c ff ff ff                     	jmp 0xcd0f
; function: function_cde3 at 0xcde3 -- 0xcdea
0xcde3:     89 c3                              	mov ebx, eax
0xcde5:     e9 ed fe ff ff                     	jmp 0xccd7 <function_ccd7>
; function: function_cdea at 0xcdea -- 0xcdf9
0xcdea:     89 c7                              	mov edi, eax
0xcdec:     89 1c 24                           	mov dword ptr [esp], ebx
0xcdef:     e8 fc ff ff ff                     	call 0xcdf0
0xcdf4:     e9 d4 fe ff ff                     	jmp 0xcccd
; section: .text._ZN5boost6threadC2IPFvSsESsEET_T0_
; function: _ZN5boost6threadC1IPFvSsESsEET_T0_ at 0xce00 -- 0xce82
0xce00:     55                                 	push ebp
0xce01:     57                                 	push edi
0xce02:     56                                 	push esi
0xce03:     53                                 	push ebx
0xce04:     83 ec 5c                           	sub esp, 0x5c
0xce07:     8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0xce0b:     8d 7c 24 44                        	lea edi, [esp + 0x44]
0xce0f:     8b 6c 24 70                        	mov ebp, dword ptr [esp + 0x70]
0xce13:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xce17:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xce1d:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xce21:     31 c0                              	xor eax, eax
0xce23:     8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0xce27:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xce2b:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xce2f:     89 04 24                           	mov dword ptr [esp], eax
0xce32:     e8 fc ff ff ff                     	call 0xce33
0xce37:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xce3b:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xce3f:     89 3c 24                           	mov dword ptr [esp], edi
0xce42:     e8 fc ff ff ff                     	call 0xce43
0xce47:     8d 5c 24 48                        	lea ebx, [esp + 0x48]
0xce4b:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xce4f:     89 1c 24                           	mov dword ptr [esp], ebx
0xce52:     e8 fc ff ff ff                     	call 0xce53
0xce57:     8d 74 24 40                        	lea esi, [esp + 0x40]
0xce5b:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xce5f:     89 34 24                           	mov dword ptr [esp], esi
0xce62:     e8 fc ff ff ff                     	call 0xce63
0xce67:     89 1c 24                           	mov dword ptr [esp], ebx
0xce6a:     e8 fc ff ff ff                     	call 0xce6b
0xce6f:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xce73:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xce77:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xce7b:     8d 44 24 30                        	lea eax, [esp + 0x30]
0xce7f:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xce82 -- 0xce83
0xce82:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xce83 -- 0xce84
; data inside code section at 0xce84 -- 0xce8b
0xce84:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0xce8b -- 0xce8c
; data inside code section at 0xce8c -- 0xce93
0xce8c:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0xce93 -- 0xce94
; data inside code section at 0xce94 -- 0xcebe
0xce94:     ff ff ff 8d 44 24 2c 89  04 24 e8 ad c9 00 00 89   |....D$,..$......|
0xcea4:     45 00 89 c6 c7 45 04 00  00 00 00 c7 04 24 10 00   |E....E.......$..|
0xceb4:     00 00 e8 fc ff ff ff 85  f6 89                     |..........      |
; function: function_cebe at 0xcebe -- 0xcebf
0xcebe:     c3                                 	ret 
; data inside code section at 0xcebf -- 0xcef6
0xcebf:     c7 40 04 01 00 00 00 c7  40 08 01 00 00 00 c7 00   |.@......@.......|
0xcecf:     98 4a 01 00 89 70 0c 89  45 04 74 4e 8b 46 08 85   |.J...p..E.tN.F..|
0xcedf:     c0 74 07 8b 40 04 85 c0  75 40 8b 46 08 89 5c 24   |.t..@...u@.F..\$|
0xceef:     38 89 74 24 34 f0 ff                               |8.t$4..         |
; function: function_cef6 at 0xcef6 -- 0xcefa
0xcef6:     43                                 	inc ebx
0xcef7:     04 39                              	add al, 0x39
0xcef9:     c3                                 	ret 
; data inside code section at 0xcefa -- 0xcf1a
0xcefa:     89 76 04 74 1e 85 db 74  04 f0 ff 43 08 85 c0 74   |.v.t...t...C...t|
0xcf0a:     0f ba ff ff ff ff f0 0f  c1 50 08 83 fa 01 74 46   |.........P....tF|
; function: function_cf1a at 0xcf1a -- 0xcf1b
; data inside code section at 0xcf1b -- 0xcf31
0xcf1b:     5e 08 8d 44 24 38 89 04  24 e8 b7 48 00 00 8d 44   |^..D$8..$..H...D|
0xcf2b:     24 30 89 04 24 e8                                  |$0..$.          |
; dynamically linked function: _ZNSsD1Ev at 0xcf31 -- 0xcf32
; data inside code section at 0xcf32 -- 0xcf3d
0xcf32:     ff ff ff 8d 44 24 3c 89  04 24 e8                  |....D$<..$.     |
; dynamically linked function: _ZNSsD1Ev at 0xcf3d -- 0xcf3e
; data inside code section at 0xcf3e -- 0xcf45
0xcf3e:     ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZN5boost6thread12start_threadEv at 0xcf45 -- 0xcf46
; data inside code section at 0xcf46 -- 0xcf48
0xcf46:     ff ff                                              |..              |
; function: function_cf48 at 0xcf48 -- 0xcf5e
0xcf48:     ff 8b 44 24 4c 65                  	dec dword ptr [ebx + 0x654c2444]
0xcf4e:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xcf54:     75 14                              	jne 0xcf6a <function_cf48+0x15>
0xcf56:     83 c4 5c                           	add esp, 0x5c
0xcf59:     5b                                 	pop ebx
0xcf5a:     5e                                 	pop esi
0xcf5b:     5f                                 	pop edi
0xcf5c:     5d                                 	pop ebp
0xcf5d:     c3                                 	ret 
; data inside code section at 0xcf5e -- 0xcf60
0xcf5e:     66 90                                              |f.              |
; function: function_cf60 at 0xcf60 -- 0xcf6a
0xcf60:     8b 10                              	mov edx, dword ptr [eax]
0xcf62:     89 04 24                           	mov dword ptr [esp], eax
0xcf65:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xcf68:     eb b0                              	jmp 0xcf1a <function_cf1a>
; data inside code section at 0xcf6a -- 0xcf6b
0xcf6a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xcf6b -- 0xcf6c
; data inside code section at 0xcf6c -- 0xcf70
0xcf6c:     ff ff ff 89                                        |....            |
; function: function_cf70 at 0xcf70 -- 0xcf71
0xcf70:     c3                                 	ret 
; data inside code section at 0xcf71 -- 0xcf7d
0xcf71:     8d 44 24 38 89 04 24 e8  63 48 00 00               |.D$8..$.cH..    |
; function: function_cf7d at 0xcf7d -- 0xcf7e
; data inside code section at 0xcf7e -- 0xcf88
0xcf7e:     c5 04 89 2c 24 e8 58 48  00 00                     |...,$.XH..      |
; function: function_cf88 at 0xcf88 -- 0xcf89
; data inside code section at 0xcf89 -- 0xcf94
0xcf89:     44 24 30 89 04 24 e8 fc  ff ff ff                  |D$0..$.....     |
; function: function_cf94 at 0xcf94 -- 0xcf95
; data inside code section at 0xcf95 -- 0xcfa4
0xcf95:     44 24 3c 89 04 24 e8 fc  ff ff ff 89 1c 24 e8      |D$<..$.......$. |
; dynamically linked function: _Unwind_Resume at 0xcfa4 -- 0xcfa5
; data inside code section at 0xcfa5 -- 0xcfa7
0xcfa5:     ff ff                                              |..              |
; function: function_cfa7 at 0xcfa7 -- 0xcfae
0xcfa7:     ff 89 c3 eb dc 89                  	dec dword ptr [ecx - 0x7623143d]
0xcfad:     c3                                 	ret 
; data inside code section at 0xcfae -- 0xcfb2
0xcfae:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0xcfb2 -- 0xcfb3
; data inside code section at 0xcfb3 -- 0xcfb6
0xcfb3:     ff ff ff                                           |...             |
; function: function_cfb6 at 0xcfb6 -- 0xcfb7
; data inside code section at 0xcfb7 -- 0xcfba
0xcfb7:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0xcfba -- 0xcfbb
; data inside code section at 0xcfbb -- 0xcfbe
0xcfbb:     ff ff ff                                           |...             |
; function: function_cfbe at 0xcfbe -- 0xcfc0
0xcfbe:     eb d4                              	jmp 0xcf94 <function_cf94>
; function: function_cfc0 at 0xcfc0 -- 0xcfce
0xcfc0:     89 c6                              	mov esi, eax
0xcfc2:     89 1c 24                           	mov dword ptr [esp], ebx
0xcfc5:     89 f3                              	mov ebx, esi
0xcfc7:     e8 fc ff ff ff                     	call 0xcfc8
0xcfcc:     eb e8                              	jmp 0xcfb6 <function_cfb6>
; function: function_cfce at 0xcfce -- 0xcfd2
0xcfce:     89 c3                              	mov ebx, eax
0xcfd0:     eb e4                              	jmp 0xcfb6 <function_cfb6>
; function: function_cfd2 at 0xcfd2 -- 0xd00c
0xcfd2:     89 c3                              	mov ebx, eax
0xcfd4:     83 c5 04                           	add ebp, 4
0xcfd7:     89 2c 24                           	mov dword ptr [esp], ebp
0xcfda:     e8 01 48 00 00                     	call 0x117e0 <function_117e0>
0xcfdf:     89 1c 24                           	mov dword ptr [esp], ebx
0xcfe2:     e8 fc ff ff ff                     	call 0xcfe3
0xcfe7:     89 04 24                           	mov dword ptr [esp], eax
0xcfea:     e8 fc ff ff ff                     	call 0xcfeb
0xcfef:     85 f6                              	test esi, esi
0xcff1:     74 08                              	je 0xcffb <function_cfd2+0x29>
0xcff3:     8b 06                              	mov eax, dword ptr [esi]
0xcff5:     89 34 24                           	mov dword ptr [esp], esi
0xcff8:     ff 50 04                           	call dword ptr [eax + 4]
0xcffb:     e8 fc ff ff ff                     	call 0xcffc
0xd000:     89 c3                              	mov ebx, eax
0xd002:     e8 fc ff ff ff                     	call 0xd003
0xd007:     e9 7c ff ff ff                     	jmp 0xcf88 <function_cf88>
; function: function_d00c at 0xd00c -- 0xd015
0xd00c:     89 c3                              	mov ebx, eax
0xd00e:     66 90                              	nop 
0xd010:     e9 68 ff ff ff                     	jmp 0xcf7d <function_cf7d>
; function: function_d015 at 0xd015 -- 0xd01c
0xd015:     89 c3                              	mov ebx, eax
0xd017:     e9 78 ff ff ff                     	jmp 0xcf94 <function_cf94>
; section: .text._ZNSt5dequeIcSaIcEED2Ev
; function: _ZNSt5dequeIcSaIcEED1Ev at 0xd020 -- 0xd058
0xd020:     57                                 	push edi
0xd021:     56                                 	push esi
0xd022:     53                                 	push ebx
0xd023:     83 ec 20                           	sub esp, 0x20
0xd026:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xd02a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd030:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xd034:     31 c0                              	xor eax, eax
0xd036:     8b 07                              	mov eax, dword ptr [edi]
0xd038:     85 c0                              	test eax, eax
0xd03a:     74 44                              	je 0xd080 <function_d080>
0xd03c:     8b 77 24                           	mov esi, dword ptr [edi + 0x24]
0xd03f:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xd042:     83 c6 04                           	add esi, 4
0xd045:     39 de                              	cmp esi, ebx
0xd047:     76 1a                              	jbe 0xd063 <function_d063>
0xd049:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xd050:     8b 03                              	mov eax, dword ptr [ebx]
0xd052:     83 c3 04                           	add ebx, 4
0xd055:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd058 -- 0xd059
0xd058:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xd059 -- 0xd05a
; data inside code section at 0xd05a -- 0xd063
0xd05a:     ff ff ff 39 de 77 ef 8b  07                        |...9.w...       |
; function: function_d063 at 0xd063 -- 0xd080
0xd063:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xd067:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd06e:     75 24                              	jne 0xd094 <function_d094>
0xd070:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xd074:     83 c4 20                           	add esp, 0x20
0xd077:     5b                                 	pop ebx
0xd078:     5e                                 	pop esi
0xd079:     5f                                 	pop edi
0xd07a:     e9 fc ff ff ff                     	jmp 0xd07b
0xd07f:     90                                 	nop 
; function: function_d080 at 0xd080 -- 0xd094
0xd080:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xd084:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd08b:     75 07                              	jne 0xd094 <function_d094>
0xd08d:     83 c4 20                           	add esp, 0x20
0xd090:     5b                                 	pop ebx
0xd091:     5e                                 	pop esi
0xd092:     5f                                 	pop edi
0xd093:     c3                                 	ret 
; function: function_d094 at 0xd094 -- 0xd095
; dynamically linked function: __stack_chk_fail at 0xd095 -- 0xd096
; data inside code section at 0xd096 -- 0xd099
0xd096:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb at 0xd0a0 -- 0xd136
0xd0a0:     83 ec 4c                           	sub esp, 0x4c
0xd0a3:     0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0xd0a8:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xd0ac:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xd0b0:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd0b6:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd0ba:     31 c0                              	xor eax, eax
0xd0bc:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xd0c0:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xd0c4:     88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0xd0c8:     8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0xd0cb:     8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0xd0ce:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xd0d2:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xd0d6:     8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0xd0d9:     89 cf                              	mov edi, ecx
0xd0db:     29 c7                              	sub edi, eax
0xd0dd:     c1 ff 02                           	sar edi, 2
0xd0e0:     83 c7 01                           	add edi, 1
0xd0e3:     8d 14 37                           	lea edx, [edi + esi]
0xd0e6:     89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0xd0ea:     8d 0c 12                           	lea ecx, [edx + edx]
0xd0ed:     39 cd                              	cmp ebp, ecx
0xd0ef:     76 4f                              	jbe 0xd140 <function_d140>
0xd0f1:     29 d5                              	sub ebp, edx
0xd0f3:     31 d2                              	xor edx, edx
0xd0f5:     8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0xd0f9:     c1 e6 02                           	shl esi, 2
0xd0fc:     d1 ed                              	shr ebp, 1
0xd0fe:     80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0xd103:     0f 45 d6                           	cmovne edx, esi
0xd106:     83 c1 04                           	add ecx, 4
0xd109:     8d 34 aa                           	lea esi, [edx + ebp*4]
0xd10c:     29 c1                              	sub ecx, eax
0xd10e:     03 33                              	add esi, dword ptr [ebx]
0xd110:     c1 f9 02                           	sar ecx, 2
0xd113:     39 f0                              	cmp eax, esi
0xd115:     0f 87 f5 00 00 00                  	ja 0xd210 <function_d210>
0xd11b:     85 c9                              	test ecx, ecx
0xd11d:     0f 84 a1 00 00 00                  	je 0xd1c4 <function_d1c4>
0xd123:     c1 e1 02                           	shl ecx, 2
0xd126:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd12a:     8d 04 be                           	lea eax, [esi + edi*4]
0xd12d:     29 c8                              	sub eax, ecx
0xd12f:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xd133:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd136 -- 0xd137
0xd136:     e8                                                 |.               |
; dynamically linked function: memmove at 0xd137 -- 0xd138
; data inside code section at 0xd138 -- 0xd13b
0xd138:     ff ff ff                                           |...             |
; function: function_d13b at 0xd13b -- 0xd140
0xd13b:     e9 84 00 00 00                     	jmp 0xd1c4 <function_d1c4>
; function: function_d140 at 0xd140 -- 0xd168
0xd140:     39 ee                              	cmp esi, ebp
0xd142:     89 e8                              	mov eax, ebp
0xd144:     0f 43 c6                           	cmovae eax, esi
0xd147:     8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0xd14b:     81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0xd151:     0f 87 d2 00 00 00                  	ja 0xd229 <function_d229>
0xd157:     8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0xd15e:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xd162:     c1 e6 02                           	shl esi, 2
0xd165:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd168 -- 0xd169
0xd168:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd169 -- 0xd16a
; data inside code section at 0xd16a -- 0xd1ad
0xd16a:     ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0xd17a:     d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0xd18a:     24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0xd19a:     85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0xd1aa:     34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0xd1ad -- 0xd1ae
; data inside code section at 0xd1ae -- 0xd1b7
0xd1ae:     ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0xd1b7 -- 0xd1b8
; data inside code section at 0xd1b8 -- 0xd1c4
0xd1b8:     ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_d1c4 at 0xd1c4 -- 0xd209
0xd1c4:     89 73 14                           	mov dword ptr [ebx + 0x14], esi
0xd1c7:     8b 06                              	mov eax, dword ptr [esi]
0xd1c9:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xd1cc:     05 f8 01 00 00                     	add eax, 0x1f8
0xd1d1:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xd1d4:     8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0xd1d8:     89 43 24                           	mov dword ptr [ebx + 0x24], eax
0xd1db:     8b 00                              	mov eax, dword ptr [eax]
0xd1dd:     89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0xd1e0:     05 f8 01 00 00                     	add eax, 0x1f8
0xd1e5:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xd1e9:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xd1f0:     89 43 20                           	mov dword ptr [ebx + 0x20], eax
0xd1f3:     75 39                              	jne 0xd22e <function_d22e>
0xd1f5:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xd1f9:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xd1fd:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xd201:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xd205:     83 c4 4c                           	add esp, 0x4c
0xd208:     c3                                 	ret 
; data inside code section at 0xd209 -- 0xd210
0xd209:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_d210 at 0xd210 -- 0xd229
0xd210:     85 c9                              	test ecx, ecx
0xd212:     74 b0                              	je 0xd1c4 <function_d1c4>
0xd214:     c1 e1 02                           	shl ecx, 2
0xd217:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xd21b:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd21f:     89 34 24                           	mov dword ptr [esp], esi
0xd222:     e8 fc ff ff ff                     	call 0xd223
0xd227:     eb 9b                              	jmp 0xd1c4 <function_d1c4>
; function: function_d229 at 0xd229 -- 0xd22a
; dynamically linked function: _ZSt17__throw_bad_allocv at 0xd22a -- 0xd22b
; data inside code section at 0xd22b -- 0xd22e
0xd22b:     ff ff ff                                           |...             |
; function: function_d22e at 0xd22e -- 0xd230
0xd22e:     66 90                              	nop 
; data inside code section at 0xd230 -- 0xd231
0xd230:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd231 -- 0xd232
; data inside code section at 0xd232 -- 0xd235
0xd232:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_ at 0xd240 -- 0xd274
0xd240:     55                                 	push ebp
0xd241:     57                                 	push edi
0xd242:     56                                 	push esi
0xd243:     53                                 	push ebx
0xd244:     83 ec 3c                           	sub esp, 0x3c
0xd247:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xd24b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd251:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd255:     31 c0                              	xor eax, eax
0xd257:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xd25b:     8b 5e 14                           	mov ebx, dword ptr [esi + 0x14]
0xd25e:     89 d8                              	mov eax, ebx
0xd260:     2b 06                              	sub eax, dword ptr [esi]
0xd262:     c1 f8 02                           	sar eax, 2
0xd265:     85 c0                              	test eax, eax
0xd267:     0f 84 d3 00 00 00                  	je 0xd340 <function_d340>
0xd26d:     c7 04 24 f8 01 00 00               	mov dword ptr [esp], 0x1f8
; data inside code section at 0xd274 -- 0xd275
0xd274:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd275 -- 0xd276
; data inside code section at 0xd276 -- 0xd278
0xd276:     ff ff                                              |..              |
; function: function_d278 at 0xd278 -- 0xd33a
0xd278:     ff 89 43 fc 8b 46                  	dec dword ptr [ecx + 0x468bfc43]
0xd27e:     14 8d                              	adc al, 0x8d
0xd280:     50                                 	push eax
0xd281:     fc                                 	cld 
0xd282:     89 56 14                           	mov dword ptr [esi + 0x14], edx
0xd285:     8b 58 fc                           	mov ebx, dword ptr [eax - 4]
0xd288:     8d 83 f8 01 00 00                  	lea eax, [ebx + 0x1f8]
0xd28e:     89 46 10                           	mov dword ptr [esi + 0x10], eax
0xd291:     8d 83 ec 01 00 00                  	lea eax, [ebx + 0x1ec]
0xd297:     85 c0                              	test eax, eax
0xd299:     89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0xd29c:     89 46 08                           	mov dword ptr [esi + 8], eax
0xd29f:     0f 84 80 00 00 00                  	je 0xd325 <function_d278+0xad>
0xd2a5:     8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0xd2a8:     2b 2f                              	sub ebp, dword ptr [edi]
0xd2aa:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0xd2b2:     c7 83 ec 01 00 00 00 00 00 00      	mov dword ptr [ebx + 0x1ec], 0
0xd2bc:     85 ed                              	test ebp, ebp
0xd2be:     c7 83 f0 01 00 00 00 00 00 00      	mov dword ptr [ebx + 0x1f0], 0
0xd2c8:     c7 83 f4 01 00 00 00 00 00 00      	mov dword ptr [ebx + 0x1f4], 0
0xd2d2:     0f 85 88 00 00 00                  	jne 0xd360 <function_d360>
0xd2d8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xd2dc:     01 c5                              	add ebp, eax
0xd2de:     89 83 ec 01 00 00                  	mov dword ptr [ebx + 0x1ec], eax
0xd2e4:     89 83 f0 01 00 00                  	mov dword ptr [ebx + 0x1f0], eax
0xd2ea:     89 ab f4 01 00 00                  	mov dword ptr [ebx + 0x1f4], ebp
0xd2f0:     8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0xd2f3:     8b 3f                              	mov edi, dword ptr [edi]
0xd2f5:     39 fd                              	cmp ebp, edi
0xd2f7:     74 22                              	je 0xd31b <function_d278+0xa3>
0xd2f9:     89 fa                              	mov edx, edi
0xd2fb:     89 c1                              	mov ecx, eax
0xd2fd:     8d 76 00                           	lea esi, [esi]
0xd300:     85 c9                              	test ecx, ecx
0xd302:     74 07                              	je 0xd30b <function_d278+0x93>
0xd304:     0f b6 32                           	movzx esi, byte ptr [edx]
0xd307:     89 f0                              	mov eax, esi
0xd309:     88 01                              	mov byte ptr [ecx], al
0xd30b:     83 c2 01                           	add edx, 1
0xd30e:     83 c1 01                           	add ecx, 1
0xd311:     39 ea                              	cmp edx, ebp
0xd313:     75 eb                              	jne 0xd300 <function_d278+0x88>
0xd315:     29 fa                              	sub edx, edi
0xd317:     01 54 24 1c                        	add dword ptr [esp + 0x1c], edx
0xd31b:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xd31f:     89 83 f0 01 00 00                  	mov dword ptr [ebx + 0x1f0], eax
0xd325:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xd329:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd330:     75 65                              	jne 0xd397 <function_d397>
0xd332:     83 c4 3c                           	add esp, 0x3c
0xd335:     5b                                 	pop ebx
0xd336:     5e                                 	pop esi
0xd337:     5f                                 	pop edi
0xd338:     5d                                 	pop ebp
0xd339:     c3                                 	ret 
; data inside code section at 0xd33a -- 0xd340
0xd33a:     8d b6 00 00 00 00                                  |......          |
; function: function_d340 at 0xd340 -- 0xd360
0xd340:     c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0xd348:     c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0xd350:     89 34 24                           	mov dword ptr [esp], esi
0xd353:     e8 88 cf 00 00                     	call 0x1a2e0 <unknown_1a2e0>
0xd358:     8b 5e 14                           	mov ebx, dword ptr [esi + 0x14]
0xd35b:     e9 0d ff ff ff                     	jmp 0xd26d
; function: function_d360 at 0xd360 -- 0xd363
0xd360:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xd363 -- 0xd364
0xd363:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd364 -- 0xd365
; data inside code section at 0xd365 -- 0xd368
0xd365:     ff ff ff                                           |...             |
; function: function_d368 at 0xd368 -- 0xd371
0xd368:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xd36c:     e9 67 ff ff ff                     	jmp 0xd2d8
; data inside code section at 0xd371 -- 0xd375
0xd371:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xd375 -- 0xd376
; data inside code section at 0xd376 -- 0xd38e
0xd376:     ff ff ff 8d 46 08 89 04  24 e8 cc a8 00 00 8b 46   |....F...$......F|
0xd386:     14 8b 40 fc 89 04 24 e8                            |..@...$.        |
; dynamically linked function: _ZdlPv at 0xd38e -- 0xd38f
; data inside code section at 0xd38f -- 0xd393
0xd38f:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xd393 -- 0xd394
; data inside code section at 0xd394 -- 0xd397
0xd394:     ff ff ff                                           |...             |
; function: function_d397 at 0xd397 -- 0xd39e
0xd397:     e8 fc ff ff ff                     	call 0xd398
0xd39c:     89 c3                              	mov ebx, eax
; data inside code section at 0xd39e -- 0xd39f
0xd39e:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xd39f -- 0xd3a0
; data inside code section at 0xd3a0 -- 0xd3ab
0xd3a0:     ff ff ff 89 1c 24 e8 fc  ff ff ff                  |.....$.....     |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_ at 0xd3b0 -- 0xd48d
0xd3b0:     55                                 	push ebp
0xd3b1:     57                                 	push edi
0xd3b2:     56                                 	push esi
0xd3b3:     53                                 	push ebx
0xd3b4:     83 ec 3c                           	sub esp, 0x3c
0xd3b7:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xd3bb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd3c1:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd3c5:     31 c0                              	xor eax, eax
0xd3c7:     8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0xd3cb:     8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0xd3ce:     3b 5e 0c                           	cmp ebx, dword ptr [esi + 0xc]
0xd3d1:     0f 84 95 00 00 00                  	je 0xd46c <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0xbc>
0xd3d7:     83 fb 0c                           	cmp ebx, 0xc
0xd3da:     74 5e                              	je 0xd43a <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0x8a>
0xd3dc:     8b 7a 04                           	mov edi, dword ptr [edx + 4]
0xd3df:     31 ed                              	xor ebp, ebp
0xd3e1:     2b 3a                              	sub edi, dword ptr [edx]
0xd3e3:     c7 43 f4 00 00 00 00               	mov dword ptr [ebx - 0xc], 0
0xd3ea:     c7 43 f8 00 00 00 00               	mov dword ptr [ebx - 8], 0
0xd3f1:     85 ff                              	test edi, edi
0xd3f3:     c7 43 fc 00 00 00 00               	mov dword ptr [ebx - 4], 0
0xd3fa:     75 5c                              	jne 0xd458 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0xa8>
0xd3fc:     01 ef                              	add edi, ebp
0xd3fe:     89 6b f4                           	mov dword ptr [ebx - 0xc], ebp
0xd401:     89 6b f8                           	mov dword ptr [ebx - 8], ebp
0xd404:     89 7b fc                           	mov dword ptr [ebx - 4], edi
0xd407:     8b 7a 04                           	mov edi, dword ptr [edx + 4]
0xd40a:     8b 12                              	mov edx, dword ptr [edx]
0xd40c:     39 d7                              	cmp edi, edx
0xd40e:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xd412:     74 1d                              	je 0xd431 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0x81>
0xd414:     89 e9                              	mov ecx, ebp
0xd416:     66 90                              	nop 
0xd418:     85 c9                              	test ecx, ecx
0xd41a:     74 05                              	je 0xd421 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0x71>
0xd41c:     0f b6 02                           	movzx eax, byte ptr [edx]
0xd41f:     88 01                              	mov byte ptr [ecx], al
0xd421:     83 c2 01                           	add edx, 1
0xd424:     83 c1 01                           	add ecx, 1
0xd427:     39 fa                              	cmp edx, edi
0xd429:     75 ed                              	jne 0xd418 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0x68>
0xd42b:     2b 54 24 1c                        	sub edx, dword ptr [esp + 0x1c]
0xd42f:     01 d5                              	add ebp, edx
0xd431:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xd434:     89 6b f8                           	mov dword ptr [ebx - 8], ebp
0xd437:     83 e8 0c                           	sub eax, 0xc
0xd43a:     89 46 08                           	mov dword ptr [esi + 8], eax
0xd43d:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xd441:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd448:     75 43                              	jne 0xd48d <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0xd8>
0xd44a:     83 c4 3c                           	add esp, 0x3c
0xd44d:     5b                                 	pop ebx
0xd44e:     5e                                 	pop esi
0xd44f:     5f                                 	pop edi
0xd450:     5d                                 	pop ebp
0xd451:     c3                                 	ret 
; data inside code section at 0xd452 -- 0xd458
0xd452:     8d b6 00 00 00 00                                  |......          |
0xd458:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xd45c:     89 3c 24                           	mov dword ptr [esp], edi
0xd45f:     e8 fc ff ff ff                     	call 0xd460
0xd464:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xd468:     89 c5                              	mov ebp, eax
0xd46a:     eb 90                              	jmp 0xd3fc <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0x4c>
0xd46c:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xd470:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd477:     75 14                              	jne 0xd48d <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_+0xd8>
0xd479:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xd47d:     89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0xd481:     83 c4 3c                           	add esp, 0x3c
0xd484:     5b                                 	pop ebx
0xd485:     5e                                 	pop esi
0xd486:     5f                                 	pop edi
0xd487:     5d                                 	pop ebp
0xd488:     e9 63 d1 00 00                     	jmp 0x1a5f0 <function_1a5f0>
; data inside code section at 0xd48d -- 0xd48e
0xd48d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd48e -- 0xd48f
; data inside code section at 0xd48f -- 0xd492
0xd48f:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_ at 0xd4a0 -- 0xd4da
0xd4a0:     55                                 	push ebp
0xd4a1:     57                                 	push edi
0xd4a2:     56                                 	push esi
0xd4a3:     53                                 	push ebx
0xd4a4:     83 ec 3c                           	sub esp, 0x3c
0xd4a7:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xd4ab:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd4b1:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd4b5:     31 c0                              	xor eax, eax
0xd4b7:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xd4bb:     8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0xd4be:     89 f0                              	mov eax, esi
0xd4c0:     2b 03                              	sub eax, dword ptr [ebx]
0xd4c2:     c1 f8 02                           	sar eax, 2
0xd4c5:     f7 d8                              	neg eax
0xd4c7:     03 43 04                           	add eax, dword ptr [ebx + 4]
0xd4ca:     83 f8 01                           	cmp eax, 1
0xd4cd:     0f 86 b5 00 00 00                  	jbe 0xd588 <function_d588>
0xd4d3:     c7 04 24 f8 01 00 00               	mov dword ptr [esp], 0x1f8
; data inside code section at 0xd4da -- 0xd4db
0xd4da:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd4db -- 0xd4dc
; data inside code section at 0xd4dc -- 0xd4de
0xd4dc:     ff ff                                              |..              |
; function: function_d4de at 0xd4de -- 0xd57b
0xd4de:     ff 89 46 04 8b 73                  	dec dword ptr [ecx + 0x738b0446]
0xd4e4:     18 85 f6 74 5d 8b                  	sbb byte ptr [ebp - 0x74a28b0a], al
0xd4ea:     6f                                 	outsd dx, dword ptr [esi]
0xd4eb:     04 31                              	add al, 0x31
0xd4ed:     c0 2b 2f                           	shr byte ptr [ebx], 0x2f
0xd4f0:     c7 06 00 00 00 00                  	mov dword ptr [esi], 0
0xd4f6:     c7 46 04 00 00 00 00               	mov dword ptr [esi + 4], 0
0xd4fd:     85 ed                              	test ebp, ebp
0xd4ff:     c7 46 08 00 00 00 00               	mov dword ptr [esi + 8], 0
0xd506:     75 70                              	jne 0xd578 <function_d4de+0x9a>
0xd508:     01 c5                              	add ebp, eax
0xd50a:     89 06                              	mov dword ptr [esi], eax
0xd50c:     89 46 04                           	mov dword ptr [esi + 4], eax
0xd50f:     89 6e 08                           	mov dword ptr [esi + 8], ebp
0xd512:     8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0xd515:     8b 3f                              	mov edi, dword ptr [edi]
0xd517:     39 fd                              	cmp ebp, edi
0xd519:     89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0xd51d:     74 24                              	je 0xd543 <function_d4de+0x65>
0xd51f:     89 fa                              	mov edx, edi
0xd521:     89 c1                              	mov ecx, eax
0xd523:     89 c7                              	mov edi, eax
0xd525:     8d 76 00                           	lea esi, [esi]
0xd528:     85 c9                              	test ecx, ecx
0xd52a:     74 05                              	je 0xd531 <function_d4de+0x53>
0xd52c:     0f b6 02                           	movzx eax, byte ptr [edx]
0xd52f:     88 01                              	mov byte ptr [ecx], al
0xd531:     83 c2 01                           	add edx, 1
0xd534:     83 c1 01                           	add ecx, 1
0xd537:     39 ea                              	cmp edx, ebp
0xd539:     75 ed                              	jne 0xd528 <function_d4de+0x4a>
0xd53b:     2b 54 24 1c                        	sub edx, dword ptr [esp + 0x1c]
0xd53f:     89 f8                              	mov eax, edi
0xd541:     01 d0                              	add eax, edx
0xd543:     89 46 04                           	mov dword ptr [esi + 4], eax
0xd546:     8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0xd549:     8d 50 04                           	lea edx, [eax + 4]
0xd54c:     89 53 24                           	mov dword ptr [ebx + 0x24], edx
0xd54f:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xd552:     8d 90 f8 01 00 00                  	lea edx, [eax + 0x1f8]
0xd558:     89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0xd55b:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xd55e:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xd562:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd569:     89 53 20                           	mov dword ptr [ebx + 0x20], edx
0xd56c:     75 55                              	jne 0xd5c3 <function_d5c3>
0xd56e:     83 c4 3c                           	add esp, 0x3c
0xd571:     5b                                 	pop ebx
0xd572:     5e                                 	pop esi
0xd573:     5f                                 	pop edi
0xd574:     5d                                 	pop ebp
0xd575:     c3                                 	ret 
; data inside code section at 0xd576 -- 0xd578
0xd576:     66 90                                              |f.              |
0xd578:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xd57b -- 0xd57c
0xd57b:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd57c -- 0xd57d
; data inside code section at 0xd57d -- 0xd580
0xd57d:     ff ff ff                                           |...             |
; function: function_d580 at 0xd580 -- 0xd582
0xd580:     eb 86                              	jmp 0xd508
; data inside code section at 0xd582 -- 0xd588
0xd582:     8d b6 00 00 00 00                                  |......          |
; function: function_d588 at 0xd588 -- 0xd5a8
0xd588:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xd590:     c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0xd598:     89 1c 24                           	mov dword ptr [esp], ebx
0xd59b:     e8 a0 cf 00 00                     	call 0x1a540 <unknown_1a540>
0xd5a0:     8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0xd5a3:     e9 2b ff ff ff                     	jmp 0xd4d3
; data inside code section at 0xd5a8 -- 0xd5ac
0xd5a8:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xd5ac -- 0xd5ad
; data inside code section at 0xd5ad -- 0xd5ba
0xd5ad:     ff ff ff 8b 43 24 8b 40  04 89 04 24 e8            |....C$.@...$.   |
; dynamically linked function: _ZdlPv at 0xd5ba -- 0xd5bb
; data inside code section at 0xd5bb -- 0xd5bf
0xd5bb:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xd5bf -- 0xd5c0
; data inside code section at 0xd5c0 -- 0xd5c3
0xd5c0:     ff ff ff                                           |...             |
; function: function_d5c3 at 0xd5c3 -- 0xd5c4
; dynamically linked function: __stack_chk_fail at 0xd5c4 -- 0xd5c5
; data inside code section at 0xd5c5 -- 0xd5c9
0xd5c5:     ff ff ff 89                                        |....            |
; function: function_d5c9 at 0xd5c9 -- 0xd5ca
0xd5c9:     c3                                 	ret 
; data inside code section at 0xd5ca -- 0xd5d7
0xd5ca:     e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_ at 0xd5e0 -- 0xd998
0xd5e0:     55                                 	push ebp
0xd5e1:     57                                 	push edi
0xd5e2:     56                                 	push esi
0xd5e3:     53                                 	push ebx
0xd5e4:     81 ec ec 00 00 00                  	sub esp, 0xec
0xd5ea:     8b 9c 24 0c 01 00 00               	mov ebx, dword ptr [esp + 0x10c]
0xd5f1:     8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0xd5f8:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd5ff:     89 94 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], edx
0xd606:     31 d2                              	xor edx, edx
0xd608:     8b bc 24 04 01 00 00               	mov edi, dword ptr [esp + 0x104]
0xd60f:     8b b4 24 08 01 00 00               	mov esi, dword ptr [esp + 0x108]
0xd616:     8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0xd619:     8b 0b                              	mov ecx, dword ptr [ebx]
0xd61b:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xd61f:     31 c0                              	xor eax, eax
0xd621:     c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0xd62c:     89 ea                              	mov edx, ebp
0xd62e:     29 ca                              	sub edx, ecx
0xd630:     89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0xd634:     c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0xd63f:     c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0xd64a:     0f 85 98 03 00 00                  	jne 0xd9e8 <function_d9e8>
0xd650:     01 c2                              	add edx, eax
0xd652:     3b 6c 24 34                        	cmp ebp, dword ptr [esp + 0x34]
0xd656:     89 84 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], eax
0xd65d:     89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0xd664:     89 94 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], edx
0xd66b:     74 24                              	je 0xd691 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xb1>
0xd66d:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xd671:     89 c1                              	mov ecx, eax
0xd673:     90                                 	nop 
0xd674:     8d 74 26 00                        	lea esi, [esi]
0xd678:     85 c9                              	test ecx, ecx
0xd67a:     74 05                              	je 0xd681 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xa1>
0xd67c:     0f b6 1a                           	movzx ebx, byte ptr [edx]
0xd67f:     88 19                              	mov byte ptr [ecx], bl
0xd681:     83 c2 01                           	add edx, 1
0xd684:     83 c1 01                           	add ecx, 1
0xd687:     39 ea                              	cmp edx, ebp
0xd689:     75 ed                              	jne 0xd678 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x98>
0xd68b:     2b 54 24 34                        	sub edx, dword ptr [esp + 0x34]
0xd68f:     01 d0                              	add eax, edx
0xd691:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xd694:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xd697:     8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0xd69a:     89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0xd6a1:     8b 06                              	mov eax, dword ptr [esi]
0xd6a3:     2b 46 04                           	sub eax, dword ptr [esi + 4]
0xd6a6:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0xd6aa:     8b 6f 08                           	mov ebp, dword ptr [edi + 8]
0xd6ad:     29 d9                              	sub ecx, ebx
0xd6af:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xd6b3:     c1 f9 02                           	sar ecx, 2
0xd6b6:     83 e9 01                           	sub ecx, 1
0xd6b9:     c1 f8 02                           	sar eax, 2
0xd6bc:     6b c9 2a                           	imul ecx, ecx, 0x2a
0xd6bf:     29 ea                              	sub edx, ebp
0xd6c1:     69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0xd6c7:     c1 fa 02                           	sar edx, 2
0xd6ca:     69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0xd6d0:     89 6c 24 34                        	mov dword ptr [esp + 0x34], ebp
0xd6d4:     8b 6f 18                           	mov ebp, dword ptr [edi + 0x18]
0xd6d7:     01 c8                              	add eax, ecx
0xd6d9:     8b 4f 24                           	mov ecx, dword ptr [edi + 0x24]
0xd6dc:     01 d0                              	add eax, edx
0xd6de:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0xd6e2:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xd6e6:     8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0xd6ea:     8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0xd6ed:     29 d8                              	sub eax, ebx
0xd6ef:     c1 f8 02                           	sar eax, 2
0xd6f2:     83 e8 01                           	sub eax, 1
0xd6f5:     6b c0 2a                           	imul eax, eax, 0x2a
0xd6f8:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xd6fc:     89 e8                              	mov eax, ebp
0xd6fe:     29 c8                              	sub eax, ecx
0xd700:     c1 f8 02                           	sar eax, 2
0xd703:     69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0xd709:     03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0xd70d:     01 c2                              	add edx, eax
0xd70f:     d1 ea                              	shr edx, 1
0xd711:     39 54 24 48                        	cmp dword ptr [esp + 0x48], edx
0xd715:     0f 82 ed 02 00 00                  	jb 0xda08 <function_da08>
0xd71b:     39 cd                              	cmp ebp, ecx
0xd71d:     89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0xd721:     0f 84 69 05 00 00                  	je 0xdc90 <function_dc90>
0xd727:     8b 47 20                           	mov eax, dword ptr [edi + 0x20]
0xd72a:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xd72e:     83 e8 0c                           	sub eax, 0xc
0xd731:     39 c5                              	cmp ebp, eax
0xd733:     0f 84 40 06 00 00                  	je 0xdd79 <function_dd79>
0xd739:     85 ed                              	test ebp, ebp
0xd73b:     0f 84 2f 05 00 00                  	je 0xdc70 <function_dc70>
0xd741:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xd745:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0xd749:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0xd751:     8b 5b f8                           	mov ebx, dword ptr [ebx - 8]
0xd754:     8b 40 f4                           	mov eax, dword ptr [eax - 0xc]
0xd757:     c7 45 00 00 00 00 00               	mov dword ptr [ebp], 0
0xd75e:     c7 45 04 00 00 00 00               	mov dword ptr [ebp + 4], 0
0xd765:     c7 45 08 00 00 00 00               	mov dword ptr [ebp + 8], 0
0xd76c:     29 c3                              	sub ebx, eax
0xd76e:     85 db                              	test ebx, ebx
0xd770:     89 5c 24 38                        	mov dword ptr [esp + 0x38], ebx
0xd774:     0f 85 a6 04 00 00                  	jne 0xdc20 <function_dc20>
0xd77a:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xd77e:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xd782:     89 45 00                           	mov dword ptr [ebp], eax
0xd785:     89 45 04                           	mov dword ptr [ebp + 4], eax
0xd788:     03 44 24 38                        	add eax, dword ptr [esp + 0x38]
0xd78c:     89 45 08                           	mov dword ptr [ebp + 8], eax
0xd78f:     8b 4a f4                           	mov ecx, dword ptr [edx - 0xc]
0xd792:     8b 5a f8                           	mov ebx, dword ptr [edx - 8]
0xd795:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xd799:     39 cb                              	cmp ebx, ecx
0xd79b:     74 26                              	je 0xd7c3 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x1e3>
0xd79d:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xd7a1:     89 c8                              	mov eax, ecx
0xd7a3:     90                                 	nop 
0xd7a4:     8d 74 26 00                        	lea esi, [esi]
0xd7a8:     85 d2                              	test edx, edx
0xd7aa:     74 05                              	je 0xd7b1 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x1d1>
0xd7ac:     0f b6 08                           	movzx ecx, byte ptr [eax]
0xd7af:     88 0a                              	mov byte ptr [edx], cl
0xd7b1:     83 c0 01                           	add eax, 1
0xd7b4:     83 c2 01                           	add edx, 1
0xd7b7:     39 d8                              	cmp eax, ebx
0xd7b9:     75 ed                              	jne 0xd7a8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x1c8>
0xd7bb:     2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0xd7bf:     01 44 24 34                        	add dword ptr [esp + 0x34], eax
0xd7c3:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xd7c7:     8b 5f 20                           	mov ebx, dword ptr [edi + 0x20]
0xd7ca:     8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0xd7cd:     89 45 04                           	mov dword ptr [ebp + 4], eax
0xd7d0:     8b 6f 24                           	mov ebp, dword ptr [edi + 0x24]
0xd7d3:     89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0xd7d7:     8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0xd7da:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xd7dd:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0xd7e1:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xd7e4:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xd7e8:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xd7eb:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0xd7ef:     83 c0 0c                           	add eax, 0xc
0xd7f2:     89 47 18                           	mov dword ptr [edi + 0x18], eax
0xd7f5:     39 c8                              	cmp eax, ecx
0xd7f7:     0f 84 ab 04 00 00                  	je 0xdca8 <function_dca8>
0xd7fd:     83 e8 0c                           	sub eax, 0xc
0xd800:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xd804:     39 c8                              	cmp eax, ecx
0xd806:     89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0xd80a:     0f 84 c8 04 00 00                  	je 0xdcd8 <function_dcd8>
0xd810:     89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0xd814:     8b 6c 24 44                        	mov ebp, dword ptr [esp + 0x44]
0xd818:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0xd81c:     89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0xd820:     89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0xd824:     83 e8 0c                           	sub eax, 0xc
0xd827:     8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0xd82b:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0xd82f:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xd832:     29 c5                              	sub ebp, eax
0xd834:     c1 fd 02                           	sar ebp, 2
0xd837:     69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0xd83d:     03 6c 24 48                        	add ebp, dword ptr [esp + 0x48]
0xd841:     0f 88 31 04 00 00                  	js 0xdc78 <function_dc78>
0xd847:     83 fd 29                           	cmp ebp, 0x29
0xd84a:     0f 8e 80 01 00 00                  	jle 0xd9d0 <function_d9d0>
0xd850:     85 ed                              	test ebp, ebp
0xd852:     0f 8e 20 04 00 00                  	jle 0xdc78 <function_dc78>
0xd858:     89 e8                              	mov eax, ebp
0xd85a:     ba 31 0c c3 30                     	mov edx, 0x30c30c31
0xd85f:     f7 ea                              	imul edx
0xd861:     89 e8                              	mov eax, ebp
0xd863:     c1 f8 1f                           	sar eax, 0x1f
0xd866:     c1 fa 03                           	sar edx, 3
0xd869:     29 c2                              	sub edx, eax
0xd86b:     8d 1c 93                           	lea ebx, [ebx + edx*4]
0xd86e:     6b d2 2a                           	imul edx, edx, 0x2a
0xd871:     8b 03                              	mov eax, dword ptr [ebx]
0xd873:     29 d5                              	sub ebp, edx
0xd875:     8d 54 6d 00                        	lea edx, [ebp + ebp*2]
0xd879:     8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0xd87f:     8d 14 90                           	lea edx, [eax + edx*4]
0xd882:     8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0xd886:     89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0xd889:     89 16                              	mov dword ptr [esi], edx
0xd88b:     89 46 04                           	mov dword ptr [esi + 4], eax
0xd88e:     89 ac 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], ebp
0xd895:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xd899:     89 7e 08                           	mov dword ptr [esi + 8], edi
0xd89c:     89 8c 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], ecx
0xd8a3:     8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0xd8a7:     89 9c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ebx
0xd8ae:     89 ac 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], ebp
0xd8b5:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xd8b9:     89 94 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], edx
0xd8c0:     89 8c 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ecx
0xd8c7:     8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0xd8cb:     89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0xd8d2:     89 ac 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ebp
0xd8d9:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xd8dd:     89 bc 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], edi
0xd8e4:     89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0xd8eb:     8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0xd8ef:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xd8f3:     89 ac 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], ebp
0xd8fa:     8d ac 24 c0 00 00 00               	lea ebp, [esp + 0xc0]
0xd901:     89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0xd905:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xd909:     89 8c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ecx
0xd910:     8d 4c 24 60                        	lea ecx, [esp + 0x60]
0xd914:     89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0xd918:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xd91c:     89 6c 24 18                        	mov dword ptr [esp + 0x18], ebp
0xd920:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0xd924:     89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0xd928:     8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0xd92c:     89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0xd930:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xd934:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xd938:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xd93f:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xd943:     89 0c 24                           	mov dword ptr [esp], ecx
0xd946:     e8 d5 c3 00 00                     	call 0x19d20 <unknown_19d20>
0xd94b:     83 ec 04                           	sub esp, 4
0xd94e:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xd955:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xd959:     8b 06                              	mov eax, dword ptr [esi]
0xd95b:     89 04 24                           	mov dword ptr [esp], eax
0xd95e:     e8 ed a6 00 00                     	call 0x18050 <unknown_18050>
0xd963:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xd967:     8b 06                              	mov eax, dword ptr [esi]
0xd969:     8b 9c 24 d0 00 00 00               	mov ebx, dword ptr [esp + 0xd0]
0xd970:     89 02                              	mov dword ptr [edx], eax
0xd972:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0xd975:     85 db                              	test ebx, ebx
0xd977:     89 42 04                           	mov dword ptr [edx + 4], eax
0xd97a:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xd97d:     89 42 08                           	mov dword ptr [edx + 8], eax
0xd980:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xd983:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0xd986:     8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0xd98d:     74 16                              	je 0xd9a5 <function_d9a5>
0xd98f:     29 d8                              	sub eax, ebx
0xd991:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xd995:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xd998 -- 0xd999
0xd998:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xd999 -- 0xd99a
; data inside code section at 0xd99a -- 0xd9a1
0xd99a:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0xd9a1 -- 0xd9a2
; data inside code section at 0xd9a2 -- 0xd9a5
0xd9a2:     ff ff ff                                           |...             |
; function: function_d9a5 at 0xd9a5 -- 0xd9ca
0xd9a5:     8b 8c 24 dc 00 00 00               	mov ecx, dword ptr [esp + 0xdc]
0xd9ac:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xd9b3:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xd9b7:     0f 85 2c 04 00 00                  	jne 0xdde9 <function_dde9>
0xd9bd:     81 c4 ec 00 00 00                  	add esp, 0xec
0xd9c3:     5b                                 	pop ebx
0xd9c4:     5e                                 	pop esi
0xd9c5:     5f                                 	pop edi
0xd9c6:     5d                                 	pop ebp
0xd9c7:     c2 04 00                           	ret 4
; data inside code section at 0xd9ca -- 0xd9d0
0xd9ca:     8d b6 00 00 00 00                                  |......          |
; function: function_d9d0 at 0xd9d0 -- 0xd9e8
0xd9d0:     8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0xd9d4:     8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0xd9d8:     8d 14 7f                           	lea edx, [edi + edi*2]
0xd9db:     8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0xd9df:     8d 54 95 00                        	lea edx, [ebp + edx*4]
0xd9e3:     e9 9a fe ff ff                     	jmp 0xd882
; function: function_d9e8 at 0xd9e8 -- 0xd9ef
0xd9e8:     89 14 24                           	mov dword ptr [esp], edx
0xd9eb:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
; data inside code section at 0xd9ef -- 0xd9f0
0xd9ef:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xd9f0 -- 0xd9f1
; data inside code section at 0xd9f1 -- 0xd9f3
0xd9f1:     ff ff                                              |..              |
; function: function_d9f3 at 0xd9f3 -- 0xda06
0xd9f3:     ff 8b 6b 04 8b 1b                  	dec dword ptr [ebx + 0x1b8b046b]
0xd9f9:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xd9fd:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xda01:     e9 4a fc ff ff                     	jmp 0xd650
; data inside code section at 0xda06 -- 0xda08
0xda06:     66 90                                              |f.              |
; function: function_da08 at 0xda08 -- 0xdc1e
0xda08:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xda0b:     39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0xda0f:     0f 84 a8 03 00 00                  	je 0xddbd <function_ddbd>
0xda15:     83 7c 24 34 0c                     	cmp dword ptr [esp + 0x34], 0xc
0xda1a:     0f 84 3b 03 00 00                  	je 0xdd5b <function_dd5b>
0xda20:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xda24:     8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0xda28:     8b 1b                              	mov ebx, dword ptr [ebx]
0xda2a:     c7 45 f4 00 00 00 00               	mov dword ptr [ebp - 0xc], 0
0xda31:     c7 45 f8 00 00 00 00               	mov dword ptr [ebp - 8], 0
0xda38:     c7 45 fc 00 00 00 00               	mov dword ptr [ebp - 4], 0
0xda3f:     89 5c 24 38                        	mov dword ptr [esp + 0x38], ebx
0xda43:     8b 5d 04                           	mov ebx, dword ptr [ebp + 4]
0xda46:     31 ed                              	xor ebp, ebp
0xda48:     89 d8                              	mov eax, ebx
0xda4a:     2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0xda4e:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xda52:     0f 85 f3 01 00 00                  	jne 0xdc4b <function_dc4b>
0xda58:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xda5c:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xda60:     89 68 f4                           	mov dword ptr [eax - 0xc], ebp
0xda63:     89 68 f8                           	mov dword ptr [eax - 8], ebp
0xda66:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0xda6a:     01 e8                              	add eax, ebp
0xda6c:     3b 5c 24 38                        	cmp ebx, dword ptr [esp + 0x38]
0xda70:     89 42 fc                           	mov dword ptr [edx - 4], eax
0xda73:     74 24                              	je 0xda99 <function_da08+0x91>
0xda75:     8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0xda79:     89 ea                              	mov edx, ebp
0xda7b:     90                                 	nop 
0xda7c:     8d 74 26 00                        	lea esi, [esi]
0xda80:     85 d2                              	test edx, edx
0xda82:     74 05                              	je 0xda89 <function_da08+0x81>
0xda84:     0f b6 08                           	movzx ecx, byte ptr [eax]
0xda87:     88 0a                              	mov byte ptr [edx], cl
0xda89:     83 c0 01                           	add eax, 1
0xda8c:     83 c2 01                           	add edx, 1
0xda8f:     39 d8                              	cmp eax, ebx
0xda91:     75 ed                              	jne 0xda80 <function_da08+0x78>
0xda93:     2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0xda97:     01 c5                              	add ebp, eax
0xda99:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xda9d:     8b 57 08                           	mov edx, dword ptr [edi + 8]
0xdaa0:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xdaa3:     89 6b f8                           	mov dword ptr [ebx - 8], ebp
0xdaa6:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xdaa9:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xdaac:     83 ea 0c                           	sub edx, 0xc
0xdaaf:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0xdab3:     89 57 08                           	mov dword ptr [edi + 8], edx
0xdab6:     8d 6a 0c                           	lea ebp, [edx + 0xc]
0xdab9:     3b 6c 24 4c                        	cmp ebp, dword ptr [esp + 0x4c]
0xdabd:     0f 84 64 02 00 00                  	je 0xdd27 <function_dd27>
0xdac3:     8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0xdac7:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0xdacb:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0xdacf:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xdad3:     8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0xdad7:     8d 7d 0c                           	lea edi, [ebp + 0xc]
0xdada:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0xdade:     39 cf                              	cmp edi, ecx
0xdae0:     0f 84 14 02 00 00                  	je 0xdcfa <function_dcfa>
0xdae6:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xdaea:     8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0xdaee:     89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0xdaf2:     8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0xdaf6:     89 7c 24 58                        	mov dword ptr [esp + 0x58], edi
0xdafa:     89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0xdafe:     89 d1                              	mov ecx, edx
0xdb00:     29 c1                              	sub ecx, eax
0xdb02:     c1 f9 02                           	sar ecx, 2
0xdb05:     69 c9 ab aa aa aa                  	imul ecx, ecx, 0xaaaaaaab
0xdb0b:     03 4c 24 48                        	add ecx, dword ptr [esp + 0x48]
0xdb0f:     0f 88 4d 02 00 00                  	js 0xdd62 <function_dd62>
0xdb15:     83 f9 29                           	cmp ecx, 0x29
0xdb18:     0f 8e 1a 01 00 00                  	jle 0xdc38 <function_dc38>
0xdb1e:     85 c9                              	test ecx, ecx
0xdb20:     0f 8e 3c 02 00 00                  	jle 0xdd62 <function_dd62>
0xdb26:     89 c8                              	mov eax, ecx
0xdb28:     ba 31 0c c3 30                     	mov edx, 0x30c30c31
0xdb2d:     f7 ea                              	imul edx
0xdb2f:     89 c8                              	mov eax, ecx
0xdb31:     c1 f8 1f                           	sar eax, 0x1f
0xdb34:     c1 fa 03                           	sar edx, 3
0xdb37:     29 c2                              	sub edx, eax
0xdb39:     8d 1c 93                           	lea ebx, [ebx + edx*4]
0xdb3c:     6b d2 2a                           	imul edx, edx, 0x2a
0xdb3f:     8b 03                              	mov eax, dword ptr [ebx]
0xdb41:     29 d1                              	sub ecx, edx
0xdb43:     8d 14 49                           	lea edx, [ecx + ecx*2]
0xdb46:     8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0xdb4c:     8d 14 90                           	lea edx, [eax + edx*4]
0xdb4f:     89 16                              	mov dword ptr [esi], edx
0xdb51:     83 c2 0c                           	add edx, 0xc
0xdb54:     89 d9                              	mov ecx, ebx
0xdb56:     39 fa                              	cmp edx, edi
0xdb58:     89 46 04                           	mov dword ptr [esi + 4], eax
0xdb5b:     89 7e 08                           	mov dword ptr [esi + 8], edi
0xdb5e:     89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0xdb61:     0f 84 e1 01 00 00                  	je 0xdd48 <function_dd48>
0xdb67:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xdb6b:     89 ac 24 90 00 00 00               	mov dword ptr [esp + 0x90], ebp
0xdb72:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xdb76:     89 bc 24 88 00 00 00               	mov dword ptr [esp + 0x88], edi
0xdb7d:     89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0xdb81:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0xdb85:     89 9c 24 94 00 00 00               	mov dword ptr [esp + 0x94], ebx
0xdb8c:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xdb90:     89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0xdb97:     8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0xdb9b:     89 8c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ecx
0xdba2:     89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0xdba6:     8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0xdbaa:     89 9c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ebx
0xdbb1:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0xdbb5:     89 6c 24 70                        	mov dword ptr [esp + 0x70], ebp
0xdbb9:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xdbbd:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xdbc1:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xdbc5:     89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0xdbcc:     89 5c 24 74                        	mov dword ptr [esp + 0x74], ebx
0xdbd0:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0xdbd4:     89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0xdbd8:     8d 6c 24 60                        	lea ebp, [esp + 0x60]
0xdbdc:     89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0xdbe3:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0xdbe7:     89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0xdbeb:     8d 9c 24 90 00 00 00               	lea ebx, [esp + 0x90]
0xdbf2:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0xdbf6:     8b 5c 24 58                        	mov ebx, dword ptr [esp + 0x58]
0xdbfa:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xdbfe:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xdc02:     89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0xdc06:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xdc0a:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xdc11:     89 2c 24                           	mov dword ptr [esp], ebp
0xdc14:     e8 47 be 00 00                     	call 0x19a60 <unknown_19a60>
0xdc19:     e9 2d fd ff ff                     	jmp 0xd94b
; data inside code section at 0xdc1e -- 0xdc20
0xdc1e:     66 90                                              |f.              |
; function: function_dc20 at 0xdc20 -- 0xdc38
0xdc20:     89 1c 24                           	mov dword ptr [esp], ebx
0xdc23:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xdc2a:     e8 fc ff ff ff                     	call 0xdc2b
0xdc2f:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xdc33:     e9 42 fb ff ff                     	jmp 0xd77a
; function: function_dc38 at 0xdc38 -- 0xdc4b
0xdc38:     8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0xdc3c:     8d 0c 7f                           	lea ecx, [edi + edi*2]
0xdc3f:     8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0xdc43:     8d 14 8a                           	lea edx, [edx + ecx*4]
0xdc46:     e9 04 ff ff ff                     	jmp 0xdb4f
; function: function_dc4b at 0xdc4b -- 0xdc55
0xdc4b:     89 04 24                           	mov dword ptr [esp], eax
0xdc4e:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
; data inside code section at 0xdc55 -- 0xdc56
0xdc55:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xdc56 -- 0xdc57
; data inside code section at 0xdc57 -- 0xdc59
0xdc57:     ff ff                                              |..              |
; function: function_dc59 at 0xdc59 -- 0xdc6e
0xdc59:     ff 8b 54 24 34 89                  	dec dword ptr [ebx - 0x76cbdbac]
0xdc5f:     c5 8b 0a 8b 5a 04                  	lds ecx, ptr [ebx + 0x45a8b0a]
0xdc65:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xdc69:     e9 ea fd ff ff                     	jmp 0xda58
; data inside code section at 0xdc6e -- 0xdc70
0xdc6e:     66 90                                              |f.              |
; function: function_dc70 at 0xdc70 -- 0xdc77
0xdc70:     31 c0                              	xor eax, eax
0xdc72:     e9 78 fb ff ff                     	jmp 0xd7ef
; data inside code section at 0xdc77 -- 0xdc78
0xdc77:     90                                                 |.               |
; function: function_dc78 at 0xdc78 -- 0xdc8f
0xdc78:     89 e8                              	mov eax, ebp
0xdc7a:     ba 31 0c c3 30                     	mov edx, 0x30c30c31
0xdc7f:     f7 d0                              	not eax
0xdc81:     d1 e8                              	shr eax, 1
0xdc83:     f7 e2                              	mul edx
0xdc85:     c1 ea 02                           	shr edx, 2
0xdc88:     f7 d2                              	not edx
0xdc8a:     e9 dc fb ff ff                     	jmp 0xd86b
; data inside code section at 0xdc8f -- 0xdc90
0xdc8f:     90                                                 |.               |
; function: function_dc90 at 0xdc90 -- 0xdca5
0xdc90:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xdc94:     8b 42 fc                           	mov eax, dword ptr [edx - 4]
0xdc97:     05 f8 01 00 00                     	add eax, 0x1f8
0xdc9c:     89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0xdca0:     e9 82 fa ff ff                     	jmp 0xd727
; data inside code section at 0xdca5 -- 0xdca8
0xdca5:     8d 76 00                                           |.v.             |
; function: function_dca8 at 0xdca8 -- 0xdcd8
0xdca8:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xdcac:     8b 4d fc                           	mov ecx, dword ptr [ebp - 4]
0xdcaf:     83 ed 04                           	sub ebp, 4
0xdcb2:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0xdcb6:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xdcba:     8d 81 f8 01 00 00                  	lea eax, [ecx + 0x1f8]
0xdcc0:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xdcc4:     83 e8 0c                           	sub eax, 0xc
0xdcc7:     39 c8                              	cmp eax, ecx
0xdcc9:     89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0xdccd:     0f 85 3d fb ff ff                  	jne 0xd810
0xdcd3:     90                                 	nop 
0xdcd4:     8d 74 26 00                        	lea esi, [esi]
; function: function_dcd8 at 0xdcd8 -- 0xdcfa
0xdcd8:     83 ed 04                           	sub ebp, 4
0xdcdb:     89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0xdcdf:     8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0xdce3:     8b 6d fc                           	mov ebp, dword ptr [ebp - 4]
0xdce6:     89 e8                              	mov eax, ebp
0xdce8:     05 f8 01 00 00                     	add eax, 0x1f8
0xdced:     89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0xdcf1:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0xdcf5:     e9 2a fb ff ff                     	jmp 0xd824
; function: function_dcfa at 0xdcfa -- 0xdd27
0xdcfa:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xdcfe:     8b 7c 24 40                        	mov edi, dword ptr [esp + 0x40]
0xdd02:     8b 49 04                           	mov ecx, dword ptr [ecx + 4]
0xdd05:     83 c7 04                           	add edi, 4
0xdd08:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xdd0c:     89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0xdd10:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xdd14:     81 c1 f8 01 00 00                  	add ecx, 0x1f8
0xdd1a:     89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0xdd1e:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0xdd22:     e9 d7 fd ff ff                     	jmp 0xdafe
; function: function_dd27 at 0xdd27 -- 0xdd48
0xdd27:     8b 7b 04                           	mov edi, dword ptr [ebx + 4]
0xdd2a:     8d 4b 04                           	lea ecx, [ebx + 4]
0xdd2d:     89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0xdd31:     89 7c 24 50                        	mov dword ptr [esp + 0x50], edi
0xdd35:     81 c7 f8 01 00 00                  	add edi, 0x1f8
0xdd3b:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0xdd3f:     89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0xdd43:     e9 8b fd ff ff                     	jmp 0xdad3
; function: function_dd48 at 0xdd48 -- 0xdd5b
0xdd48:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xdd4b:     8d 4b 04                           	lea ecx, [ebx + 4]
0xdd4e:     8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0xdd54:     89 c2                              	mov edx, eax
0xdd56:     e9 0c fe ff ff                     	jmp 0xdb67
; function: function_dd5b at 0xdd5b -- 0xdd62
0xdd5b:     31 d2                              	xor edx, edx
0xdd5d:     e9 51 fd ff ff                     	jmp 0xdab3
; function: function_dd62 at 0xdd62 -- 0xdd79
0xdd62:     89 c8                              	mov eax, ecx
0xdd64:     ba 31 0c c3 30                     	mov edx, 0x30c30c31
0xdd69:     f7 d0                              	not eax
0xdd6b:     d1 e8                              	shr eax, 1
0xdd6d:     f7 e2                              	mul edx
0xdd6f:     c1 ea 02                           	shr edx, 2
0xdd72:     f7 d2                              	not edx
0xdd74:     e9 c0 fd ff ff                     	jmp 0xdb39
; function: function_dd79 at 0xdd79 -- 0xdd96
0xdd79:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0xdd7d:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xdd84:     89 3c 24                           	mov dword ptr [esp], edi
0xdd87:     83 e8 0c                           	sub eax, 0xc
0xdd8a:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xdd8e:     e8 ed cc 00 00                     	call 0x1aa80 <unknown_1aa80>
0xdd93:     8b 5f 20                           	mov ebx, dword ptr [edi + 0x20]
; function: function_dd96 at 0xdd96 -- 0xddbd
0xdd96:     8b 6f 24                           	mov ebp, dword ptr [edi + 0x24]
0xdd99:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xdd9c:     8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0xdd9f:     89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0xdda3:     8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0xdda6:     89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0xddaa:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xddad:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xddb1:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xddb4:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0xddb8:     e9 38 fa ff ff                     	jmp 0xd7f5
; function: function_ddbd at 0xddbd -- 0xdde9
0xddbd:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xddc1:     89 3c 24                           	mov dword ptr [esp], edi
0xddc4:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xddc8:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0xddcf:     e8 4c ca 00 00                     	call 0x1a820 <unknown_1a820>
0xddd4:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xddd7:     8b 57 08                           	mov edx, dword ptr [edi + 8]
0xddda:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xdddd:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xdde0:     89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0xdde4:     e9 cd fc ff ff                     	jmp 0xdab6
; function: function_dde9 at 0xdde9 -- 0xddea
; dynamically linked function: __stack_chk_fail at 0xddea -- 0xddeb
; data inside code section at 0xddeb -- 0xddfc
0xddeb:     ff ff ff 89 c6 89 1c 24  e8 28 90 00 00 89 34 24   |.......$.(....4$|
0xddfb:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xddfc -- 0xddfd
; data inside code section at 0xddfd -- 0xde00
0xddfd:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_ at 0xde00 -- 0xdf29
0xde00:     83 ec 3c                           	sub esp, 0x3c
0xde03:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0xde07:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xde0b:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0xde0f:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xde16:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xde1a:     31 d2                              	xor edx, edx
0xde1c:     8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0xde20:     89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0xde24:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xde28:     8b 10                              	mov edx, dword ptr [eax]
0xde2a:     3b 53 08                           	cmp edx, dword ptr [ebx + 8]
0xde2d:     89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0xde31:     0f 84 a1 00 00 00                  	je 0xded8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xd8>
0xde37:     3b 53 18                           	cmp edx, dword ptr [ebx + 0x18]
0xde3a:     74 5c                              	je 0xde98 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x98>
0xde3c:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xde40:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0xde43:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0xde47:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xde4a:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xde4d:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xde51:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xde55:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xde59:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xde5d:     8d 44 24 1c                        	lea eax, [esp + 0x1c]
0xde61:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xde65:     89 34 24                           	mov dword ptr [esp], esi
0xde68:     e8 73 d5 00 00                     	call 0x1b3e0 <unknown_1b3e0>
0xde6d:     83 ec 04                           	sub esp, 4
0xde70:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xde74:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xde7b:     89 f0                              	mov eax, esi
0xde7d:     0f 85 a1 00 00 00                  	jne 0xdf24 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x124>
0xde83:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xde87:     8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0xde8b:     8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0xde8f:     83 c4 3c                           	add esp, 0x3c
0xde92:     c2 04 00                           	ret 4
; data inside code section at 0xde95 -- 0xde98
0xde95:     8d 76 00                                           |.v.             |
0xde98:     8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0xde9b:     8d 78 f4                           	lea edi, [eax - 0xc]
0xde9e:     39 fa                              	cmp edx, edi
0xdea0:     74 6e                              	je 0xdf10 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x110>
0xdea2:     85 d2                              	test edx, edx
0xdea4:     74 12                              	je 0xdeb8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xb8>
0xdea6:     89 14 24                           	mov dword ptr [esp], edx
0xdea9:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xdead:     e8 fe 97 00 00                     	call 0x176b0 <unknown_176b0>
0xdeb2:     8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0xdeb5:     8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0xdeb8:     83 c2 0c                           	add edx, 0xc
0xdebb:     89 53 18                           	mov dword ptr [ebx + 0x18], edx
0xdebe:     8b 4b 1c                           	mov ecx, dword ptr [ebx + 0x1c]
0xdec1:     8b 5b 24                           	mov ebx, dword ptr [ebx + 0x24]
0xdec4:     39 d1                              	cmp ecx, edx
0xdec6:     74 38                              	je 0xdf00 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x100>
0xdec8:     83 ea 0c                           	sub edx, 0xc
0xdecb:     89 16                              	mov dword ptr [esi], edx
0xdecd:     89 4e 04                           	mov dword ptr [esi + 4], ecx
0xded0:     89 46 08                           	mov dword ptr [esi + 8], eax
0xded3:     89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0xded6:     eb 98                              	jmp 0xde70 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x70>
0xded8:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xdedc:     89 1c 24                           	mov dword ptr [esp], ebx
0xdedf:     e8 cc d2 00 00                     	call 0x1b1b0 <unknown_1b1b0>
0xdee4:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xdee7:     89 06                              	mov dword ptr [esi], eax
0xdee9:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xdeec:     89 46 04                           	mov dword ptr [esi + 4], eax
0xdeef:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xdef2:     89 46 08                           	mov dword ptr [esi + 8], eax
0xdef5:     8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0xdef8:     89 46 0c                           	mov dword ptr [esi + 0xc], eax
0xdefb:     e9 70 ff ff ff                     	jmp 0xde70 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0x70>
0xdf00:     8b 4b fc                           	mov ecx, dword ptr [ebx - 4]
0xdf03:     83 eb 04                           	sub ebx, 4
0xdf06:     8d 91 f8 01 00 00                  	lea edx, [ecx + 0x1f8]
0xdf0c:     89 d0                              	mov eax, edx
0xdf0e:     eb b8                              	jmp 0xdec8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xc8>
0xdf10:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xdf14:     89 1c 24                           	mov dword ptr [esp], ebx
0xdf17:     e8 84 d3 00 00                     	call 0x1b2a0 <unknown_1b2a0>
0xdf1c:     8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0xdf1f:     8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0xdf22:     eb 9a                              	jmp 0xdebe <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xbe>
0xdf24:     e8 fc ff ff ff                     	call 0xdf25
; section: .text._ZN5CNode10EndMessageEv
; function: _ZN5CNode10EndMessageEv at 0xdf30 -- 0xdf67
0xdf30:     55                                 	push ebp
0xdf31:     57                                 	push edi
0xdf32:     56                                 	push esi
0xdf33:     53                                 	push ebx
0xdf34:     81 ec bc 00 00 00                  	sub esp, 0xbc
0xdf3a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xdf40:     89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0xdf47:     31 c0                              	xor eax, eax
0xdf49:     8d 54 24 58                        	lea edx, [esp + 0x58]
0xdf4d:     8b 9c 24 d0 00 00 00               	mov ebx, dword ptr [esp + 0xd0]
0xdf54:     8d 44 24 6a                        	lea eax, [esp + 0x6a]
0xdf58:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xdf5c:     c7 44 24 04 84 20 00 00            	mov dword ptr [esp + 4], 0x2084 ; "-dropmessagestest"
0xdf64:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xdf67 -- 0xdf68
0xdf67:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xdf68 -- 0xdf69
; data inside code section at 0xdf69 -- 0xdf6e
0xdf69:     ff ff ff 8b 35                                     |....5           |
; dynamically linked function: mapArgs at 0xdf6e -- 0xdf82
; data inside code section at 0xdf82 -- 0xdf86
0xdf82:     c7 44 24 14                                        |.D$.            |
; dynamically linked function: mapArgs at 0xdf86 -- 0xdf95
; data inside code section at 0xdf95 -- 0xdf98
0xdf95:     8d 76 00                                           |.v.             |
; function: function_df98 at 0xdf98 -- 0xdfa3
0xdf98:     89 74 24 14                        	mov dword ptr [esp + 0x14], esi
0xdf9c:     8b 76 08                           	mov esi, dword ptr [esi + 8]
0xdf9f:     85 f6                              	test esi, esi
0xdfa1:     74 2f                              	je 0xdfd2
; function: function_dfa3 at 0xdfa3 -- 0xdfbd
0xdfa3:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xdfa6:     89 ea                              	mov edx, ebp
0xdfa8:     8b 78 f4                           	mov edi, dword ptr [eax - 0xc]
0xdfab:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xdfaf:     89 04 24                           	mov dword ptr [esp], eax
0xdfb2:     39 ef                              	cmp edi, ebp
0xdfb4:     0f 46 d7                           	cmovbe edx, edi
0xdfb7:     29 ef                              	sub edi, ebp
0xdfb9:     89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0xdfbd -- 0xdfbe
0xdfbd:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xdfbe -- 0xdfbf
; data inside code section at 0xdfbf -- 0xdfd2
0xdfbf:     ff ff ff 85 c0 0f 44 c7  85 c0 79 cd 8b 76 0c 85   |......D...y..v..|
0xdfcf:     f6 75 d1                                           |.u.             |
; function: function_dfd2 at 0xdfd2 -- 0xdfd3
; data inside code section at 0xdfd3 -- 0xdfd6
0xdfd3:     7c 24 14                                           ||$.             |
; dynamically linked function: mapArgs at 0xdfd6 -- 0xe006
; data inside code section at 0xe006 -- 0xe007
0xe006:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xe007 -- 0xe008
; data inside code section at 0xe008 -- 0xe02e
0xe008:     ff ff ff 85 c0 0f 44 c5  31 ff 85 c0 78 66 8d 44   |......D.1...xf.D|
0xe018:     24 6b 8d 74 24 5c 89 44  24 08 c7 44 24 04 84 20   |$k.t$\.D$..D$.. |
0xe028:     00 00 89 34 24 e8                                  |...4$.          |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xe02e -- 0xe02f
; data inside code section at 0xe02f -- 0xe058
0xe02f:     ff ff ff 89 74 24 04 c7  04 24 00 00 00 00 e8 de   |....t$...$......|
0xe03f:     c1 00 00 c7 44 24 08 0a  00 00 00 c7 44 24 04 00   |....D$......D$..|
0xe04f:     00 00 00 8b 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: strtol at 0xe058 -- 0xe059
; data inside code section at 0xe059 -- 0xe05d
0xe059:     ff ff ff 89                                        |....            |
; function: function_e05d at 0xe05d -- 0xe060
0xe05d:     c2 c1 fa                           	ret 0xfac1
; data inside code section at 0xe060 -- 0xe069
0xe060:     1f 89 04 24 89 54 24 04  e8                        |...$.T$..       |
; dynamically linked function: _Z7GetRandy at 0xe069 -- 0xe06a
; data inside code section at 0xe06a -- 0xe07c
0xe06a:     ff ff ff 09 d0 0f 94 c0  89 c7 89 34 24 e8 fc ff   |...........4$...|
0xe07a:     ff ff                                              |..              |
; function: function_e07c at 0xe07c -- 0xe083
0xe07c:     8d 54 24 58                        	lea edx, [esp + 0x58]
0xe080:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0xe083 -- 0xe084
0xe083:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xe084 -- 0xe085
; data inside code section at 0xe085 -- 0xe0d5
0xe085:     ff ff ff 89 f8 84 c0 0f  85 96 02 00 00 8b 4b 0c   |..............K.|
0xe095:     8b 43 10 8b 53 18 29 c8  39 d0 0f 84 62 02 00 00   |.C..S.).9...b...|
0xe0a5:     29 d0 8d 70 e8 89 74 24  60 8d bc 24 8c 00 00 00   |)..p..t$`..$....|
0xe0b5:     89 74 11 10 8b 53 10 8b  43 0c 03 43 18 c7 84 24   |.t...S..C..C...$|
0xe0c5:     8c 00 00 00 00 00 00 00  89 d1 83 c0 18 29 c1 39   |.............).9|
; function: function_e0d5 at 0xe0d5 -- 0xe0d8
0xe0d5:     c2 ba 2c                           	ret 0x2cba
; data inside code section at 0xe0d8 -- 0xe0da
0xe0d8:     47 01                                              |G.              |
; function: function_e0da at 0xe0da -- 0xe0e0
0xe0da:     00 0f                              	add byte ptr [edi], cl
0xe0dc:     44                                 	inc esp
0xe0dd:     c2 89 4c                           	ret 0x4c89
; data inside code section at 0xe0e0 -- 0xe137
0xe0e0:     24 04 89 7c 24 08 c7 84  24 90 00 00 00 00 00 00   |$..|$...$.......|
0xe0f0:     00 c7 84 24 94 00 00 00  00 00 00 00 c7 84 24 98   |...$..........$.|
0xe100:     00 00 00 00 00 00 00 c7  84 24 9c 00 00 00 00 00   |.........$......|
0xe110:     00 00 c7 84 24 a0 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0xe120:     a4 00 00 00 00 00 00 00  c7 84 24 a8 00 00 00 00   |..........$.....|
0xe130:     00 00 00 89 04 24 e8                               |.....$.         |
; dynamically linked function: SHA256 at 0xe137 -- 0xe138
; data inside code section at 0xe138 -- 0xe198
0xe138:     ff ff ff 8d 44 24 6c 89  3c 24 c7 44 24 6c 00 00   |....D$l.<$.D$l..|
0xe148:     00 00 c7 44 24 70 00 00  00 00 c7 44 24 74 00 00   |...D$p.....D$t..|
0xe158:     00 00 c7 44 24 78 00 00  00 00 c7 44 24 7c 00 00   |...D$x.....D$|..|
0xe168:     00 00 c7 84 24 80 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0xe178:     84 00 00 00 00 00 00 00  c7 84 24 88 00 00 00 00   |..........$.....|
0xe188:     00 00 00 89 44 24 08 c7  44 24 04 20 00 00 00 e8   |....D$..D$. ....|
; dynamically linked function: SHA256 at 0xe198 -- 0xe199
; data inside code section at 0xe199 -- 0xe1c0
0xe199:     ff ff ff 8b 4b 0c 8b 43  10 8b 53 18 8b 7c 24 6c   |....K..C..S..|$l|
0xe1a9:     29 c8 29 d0 83 f8 17 89  7c 24 64 0f 86 46 02 00   |).).....|$d..F..|
0xe1b9:     00 89 7c 11 14 80 3d                               |..|...=         |
; dynamically linked function: fDebug at 0xe1c0 -- 0xe295
; data inside code section at 0xe295 -- 0xe296
0xe295:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0xe296 -- 0xe297
; data inside code section at 0xe297 -- 0xe29e
0xe297:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0xe29e -- 0xe29f
; data inside code section at 0xe29f -- 0xe2a2
0xe29f:     ff ff ff                                           |...             |
; function: function_e2a2 at 0xe2a2 -- 0xe2bd
0xe2a2:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe2a6:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0xe2a9:     2b 10                              	sub edx, dword ptr [eax]
0xe2ab:     01 53 28                           	add dword ptr [ebx + 0x28], edx
0xe2ae:     3b 43 40                           	cmp eax, dword ptr [ebx + 0x40]
0xe2b1:     0f 84 16 01 00 00                  	je 0xe3cd <function_e3cd>
0xe2b7:     8d 73 60                           	lea esi, [ebx + 0x60]
0xe2ba:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xe2bd -- 0xe2be
0xe2bd:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0xe2be -- 0xe2bf
; data inside code section at 0xe2bf -- 0xe2c1
0xe2bf:     ff ff                                              |..              |
; function: function_e2c1 at 0xe2c1 -- 0xe326
0xe2c1:     ff 85 c0 0f 85 10                  	inc dword ptr [ebp + 0x10850fc0]
0xe2c7:     01 00                              	add dword ptr [eax], eax
0xe2c9:     00 8b 83 b0 00 00                  	add byte ptr [ebx + 0xb083], cl
0xe2cf:     00 83 e8 01 85 c0                  	add byte ptr [ebx - 0x3f7afe18], al
0xe2d5:     89 83 b0 00 00 00                  	mov dword ptr [ebx + 0xb0], eax
0xe2db:     75 07                              	jne 0xe2e4 <function_e2c1+0x23>
0xe2dd:     c6 83 a8 00 00 00 00               	mov byte ptr [ebx + 0xa8], 0
0xe2e4:     83 c3 78                           	add ebx, 0x78
0xe2e7:     89 1c 24                           	mov dword ptr [esp], ebx
0xe2ea:     e8 fc ff ff ff                     	call 0xe2eb
0xe2ef:     85 c0                              	test eax, eax
0xe2f1:     0f 85 e8 00 00 00                  	jne 0xe3df <function_e3df>
0xe2f7:     89 34 24                           	mov dword ptr [esp], esi
0xe2fa:     e8 fc ff ff ff                     	call 0xe2fb
0xe2ff:     85 c0                              	test eax, eax
0xe301:     0f 85 de 00 00 00                  	jne 0xe3e5 <function_e3e5>
0xe307:     8b 84 24 ac 00 00 00               	mov eax, dword ptr [esp + 0xac]
0xe30e:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe315:     0f 85 19 01 00 00                  	jne 0xe434 <function_e434>
0xe31b:     81 c4 bc 00 00 00                  	add esp, 0xbc
0xe321:     5b                                 	pop ebx
0xe322:     5e                                 	pop esi
0xe323:     5f                                 	pop edi
0xe324:     5d                                 	pop ebp
0xe325:     c3                                 	ret 
; data inside code section at 0xe326 -- 0xe330
0xe326:     66 90 c7 04 24 d0 35 00  00 8d                     |f...$.5...      |
; function: function_e330 at 0xe330 -- 0xe332
0xe330:     73 60                              	jae 0xe392 <function_e392>
; data inside code section at 0xe332 -- 0xe333
0xe332:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xe333 -- 0xe334
; data inside code section at 0xe334 -- 0xe348
0xe334:     ff ff ff 8b 43 0c c7 43  18 00 00 00 00 89 43 10   |....C..C......C.|
0xe344:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: pthread_mutex_lock at 0xe348 -- 0xe349
; data inside code section at 0xe349 -- 0xe34f
0xe349:     ff ff ff 85 c0 0f                                  |......          |
; function: function_e34f at 0xe34f -- 0xe369
0xe34f:     85 86 00 00 00 8b                  	test dword ptr [esi - 0x75000000], eax
0xe355:     83 b0 00 00 00 83 e8               	xor dword ptr [eax - 0x7d000000], 0xffffffe8
0xe35c:     01 85 c0 89 83 b0                  	add dword ptr [ebp - 0x4f7c7640], eax
0xe362:     00 00                              	add byte ptr [eax], al
0xe364:     00 74 39 83                        	add byte ptr [ecx + edi - 0x7d], dh
0xe368:     c3                                 	ret 
; data inside code section at 0xe369 -- 0xe36e
0xe369:     78 89 1c 24 e8                                     |x..$.           |
; dynamically linked function: pthread_cond_signal at 0xe36e -- 0xe36f
; data inside code section at 0xe36f -- 0xe37a
0xe36f:     ff ff ff 85 c0 75 69 89  34 24 e8                  |.....ui.4$.     |
; dynamically linked function: pthread_mutex_unlock at 0xe37a -- 0xe37b
; data inside code section at 0xe37b -- 0xe384
0xe37b:     ff ff ff 85 c0 75 63 80  3d                        |.....uc.=       |
; dynamically linked function: fDebug at 0xe384 -- 0xe38d
; data inside code section at 0xe38d -- 0xe392
0xe38d:     ff ff c7 04 24                                     |....$           |
; function: function_e392 at 0xe392 -- 0xe396
0xe392:     fb                                 	sti 
0xe393:     1f                                 	pop ds
0xe394:     00 00                              	add byte ptr [eax], al
; data inside code section at 0xe396 -- 0xe397
0xe396:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xe397 -- 0xe398
; data inside code section at 0xe398 -- 0xe39b
0xe398:     ff ff ff                                           |...             |
; function: function_e39b at 0xe39b -- 0xe3a0
0xe39b:     e9 67 ff ff ff                     	jmp 0xe307
; function: function_e3a0 at 0xe3a0 -- 0xe3a9
0xe3a0:     c6 83 a8 00 00 00 00               	mov byte ptr [ebx + 0xa8], 0
0xe3a7:     eb be                              	jmp 0xe367
; data inside code section at 0xe3a9 -- 0xe3b0
0xe3a9:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_e3b0 at 0xe3b0 -- 0xe3b7
0xe3b0:     31 ff                              	xor edi, edi
0xe3b2:     e9 c5 fc ff ff                     	jmp 0xe07c <function_e07c>
; data inside code section at 0xe3b7 -- 0xe3b8
0xe3b7:     90                                                 |.               |
; function: function_e3b8 at 0xe3b8 -- 0xe3cd
0xe3b8:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xe3bc:     c7 04 24 96 20 00 00               	mov dword ptr [esp], 0x2096 ; "(%d bytes)\n"
0xe3c3:     e8 fc ff ff ff                     	call 0xe3c4
0xe3c8:     e9 fe fd ff ff                     	jmp 0xe1cb
; function: function_e3cd at 0xe3cd -- 0xe3d0
0xe3cd:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe3d0 -- 0xe3d1
0xe3d0:     e8                                                 |.               |
; dynamically linked function: _Z14SocketSendDataP5CNode at 0xe3d1 -- 0xe3d2
; data inside code section at 0xe3d2 -- 0xe3d5
0xe3d2:     ff ff ff                                           |...             |
; function: function_e3d5 at 0xe3d5 -- 0xe3da
0xe3d5:     e9 dd fe ff ff                     	jmp 0xe2b7
; data inside code section at 0xe3da -- 0xe3db
0xe3da:     e8                                                 |.               |
; function: function_e3db at 0xe3db -- 0xe3dd
0xe3db:     eb 33                              	jmp 0xe410
; data inside code section at 0xe3dd -- 0xe3df
0xe3dd:     00 00                                              |..              |
; function: function_e3df at 0xe3df -- 0xe3e5
0xe3df:     90                                 	nop 
0xe3e0:     e8 4d 34 00 00                     	call 0x11832 <function_11832>
; function: function_e3e5 at 0xe3e5 -- 0xe41f
0xe3e5:     e8 14 34 00 00                     	call 0x117fe
0xe3ea:     89 c3                              	mov ebx, eax
0xe3ec:     8d 54 24 58                        	lea edx, [esp + 0x58]
0xe3f0:     89 14 24                           	mov dword ptr [esp], edx
0xe3f3:     e8 fc ff ff ff                     	call 0xe3f4
0xe3f8:     89 1c 24                           	mov dword ptr [esp], ebx
0xe3fb:     e8 fc ff ff ff                     	call 0xe3fc
0xe400:     c7 44 24 0c 02 4d 00 00            	mov dword ptr [esp + 0xc], 0x4d02 ; "void CNode::EndMessage()"
0xe408:     c7 44 24 08 b6 01 00 00            	mov dword ptr [esp + 8], 0x1b6
0xe410:     c7 44 24 04 47 20 00 00            	mov dword ptr [esp + 4], 0x2047 ; "net.h"
0xe418:     c7 04 24 f4 35 00 00               	mov dword ptr [esp], 0x35f4 ; "ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum)"
; data inside code section at 0xe41f -- 0xe420
0xe41f:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe420 -- 0xe421
; data inside code section at 0xe421 -- 0xe425
0xe421:     ff ff ff 89                                        |....            |
; function: function_e425 at 0xe425 -- 0xe426
0xe425:     c3                                 	ret 
; data inside code section at 0xe426 -- 0xe42a
0xe426:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0xe42a -- 0xe42b
; data inside code section at 0xe42b -- 0xe42e
0xe42b:     ff ff ff                                           |...             |
; function: function_e42e at 0xe42e -- 0xe430
0xe42e:     eb bc                              	jmp 0xe3ec
; function: function_e430 at 0xe430 -- 0xe434
0xe430:     89 c3                              	mov ebx, eax
0xe432:     eb c4                              	jmp 0xe3f8
; function: function_e434 at 0xe434 -- 0xe445
0xe434:     e8 fc ff ff ff                     	call 0xe435
0xe439:     89 c3                              	mov ebx, eax
0xe43b:     89 34 24                           	mov dword ptr [esp], esi
0xe43e:     e8 2d 93 00 00                     	call 0x17770 <unknown_17770>
0xe443:     eb b3                              	jmp 0xe3f8
; section: .text._Z15ReadCompactSizeI11CDataStreamEyRT_
; function: _Z15ReadCompactSizeI11CDataStreamEyRT_ at 0xe450 -- 0xe4ee
0xe450:     56                                 	push esi
0xe451:     53                                 	push ebx
0xe452:     83 ec 34                           	sub esp, 0x34
0xe455:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xe459:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe45f:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe463:     31 c0                              	xor eax, eax
0xe465:     8d 44 24 2a                        	lea eax, [esp + 0x2a]
0xe469:     c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0xe471:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe475:     89 1c 24                           	mov dword ptr [esp], ebx
0xe478:     e8 b3 8c 00 00                     	call 0x17130 <unknown_17130>
0xe47d:     0f b6 54 24 2a                     	movzx edx, byte ptr [esp + 0x2a]
0xe482:     80 fa fc                           	cmp dl, 0xfc
0xe485:     77 21                              	ja 0xe4a8 <_Z15ReadCompactSizeI11CDataStreamEyRT_+0x58>
0xe487:     0f b6 c2                           	movzx eax, dl
0xe48a:     31 d2                              	xor edx, edx
0xe48c:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xe490:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xe497:     0f 85 02 01 00 00                  	jne 0xe59f <function_e59f>
0xe49d:     83 c4 34                           	add esp, 0x34
0xe4a0:     5b                                 	pop ebx
0xe4a1:     5e                                 	pop esi
0xe4a2:     c3                                 	ret 
; data inside code section at 0xe4a3 -- 0xe4a8
0xe4a3:     90 8d 74 26 00                                     |..t&.           |
0xe4a8:     80 fa fd                           	cmp dl, 0xfd
0xe4ab:     0f 84 8f 00 00 00                  	je 0xe540
0xe4b1:     80 fa fe                           	cmp dl, 0xfe
0xe4b4:     0f 84 ae 00 00 00                  	je 0xe568 <function_e568>
0xe4ba:     8d 44 24 18                        	lea eax, [esp + 0x18]
0xe4be:     c7 44 24 08 08 00 00 00            	mov dword ptr [esp + 8], 8
0xe4c6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe4ca:     89 1c 24                           	mov dword ptr [esp], ebx
0xe4cd:     e8 5e 8c 00 00                     	call 0x17130 <unknown_17130>
0xe4d2:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xe4d6:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xe4da:     83 fa 00                           	cmp edx, 0
0xe4dd:     0f 86 ac 00 00 00                  	jbe 0xe58f <function_e58f>
0xe4e3:     c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
0xe4ea:     8d 5c 24 24                        	lea ebx, [esp + 0x24]
; data inside code section at 0xe4ee -- 0xe4ef
0xe4ee:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0xe4ef -- 0xe4f0
; data inside code section at 0xe4f0 -- 0xe509
0xe4f0:     ff ff ff c7 44 24 04 3c  36 00 00 89 1c 24 89 c6   |....D$.<6....$..|
0xe500:     8d 44 24 2b 89 44 24 08  e8                        |.D$+.D$..       |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xe509 -- 0xe50a
; data inside code section at 0xe50a -- 0xe515
0xe50a:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0xe515 -- 0xe516
; data inside code section at 0xe516 -- 0xe51d
0xe516:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0xe51d -- 0xe51e
; data inside code section at 0xe51e -- 0xe525
0xe51e:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0xe525 -- 0xe529
; data inside code section at 0xe529 -- 0xe52d
0xe529:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0xe52d -- 0xe564
; data inside code section at 0xe564 -- 0xe568
0xe564:     8d 74 26 00                                        |.t&.            |
; function: function_e568 at 0xe568 -- 0xe58f
0xe568:     8d 44 24 20                        	lea eax, [esp + 0x20]
0xe56c:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xe574:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe578:     89 1c 24                           	mov dword ptr [esp], ebx
0xe57b:     e8 b0 8b 00 00                     	call 0x17130 <unknown_17130>
0xe580:     31 d2                              	xor edx, edx
0xe582:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xe586:     83 fa 00                           	cmp edx, 0
0xe589:     0f 87 54 ff ff ff                  	ja 0xe4e3
; function: function_e58f at 0xe58f -- 0xe59f
0xe58f:     3d 00 00 00 02                     	cmp eax, 0x2000000
0xe594:     0f 86 f2 fe ff ff                  	jbe 0xe48c
0xe59a:     e9 44 ff ff ff                     	jmp 0xe4e3
; function: function_e59f at 0xe59f -- 0xe5a0
0xe59f:     90                                 	nop 
; data inside code section at 0xe5a0 -- 0xe5a1
0xe5a0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe5a1 -- 0xe5a2
; data inside code section at 0xe5a2 -- 0xe5a6
0xe5a2:     ff ff ff 89                                        |....            |
; function: function_e5a6 at 0xe5a6 -- 0xe5a7
0xe5a6:     c3                                 	ret 
; data inside code section at 0xe5a7 -- 0xe5ac
0xe5a7:     89 34 24 e8 fc                                     |.4$..           |
; function: function_e5ac at 0xe5ac -- 0xe5ad
; data inside code section at 0xe5ad -- 0xe5b7
0xe5ad:     ff ff 89 1c 24 e8 fc ff  ff ff                     |....$.....      |
; section: .text._ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEj at 0xe5c0 -- 0xe600
0xe5c0:     55                                 	push ebp
0xe5c1:     ba 08 00 00 00                     	mov edx, 8
0xe5c6:     57                                 	push edi
0xe5c7:     56                                 	push esi
0xe5c8:     53                                 	push ebx
0xe5c9:     83 ec 3c                           	sub esp, 0x3c
0xe5cc:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0xe5d0:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xe5d4:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe5d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe5de:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe5e2:     31 c0                              	xor eax, eax
0xe5e4:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xe5e8:     c1 e8 09                           	shr eax, 9
0xe5eb:     8d 58 01                           	lea ebx, [eax + 1]
0xe5ee:     83 c0 03                           	add eax, 3
0xe5f1:     83 f8 08                           	cmp eax, 8
0xe5f4:     0f 42 c2                           	cmovb eax, edx
0xe5f7:     89 47 04                           	mov dword ptr [edi + 4], eax
0xe5fa:     c1 e0 02                           	shl eax, 2
0xe5fd:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xe600 -- 0xe601
0xe600:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xe601 -- 0xe602
; data inside code section at 0xe602 -- 0xe606
0xe602:     ff ff ff 8b                                        |....            |
; function: function_e606 at 0xe606 -- 0xe612
0xe606:     57                                 	push edi
0xe607:     04 29                              	add al, 0x29
0xe609:     da d1                              	fcmovbe st(0), st(1)
0xe60b:     ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0xe612 -- 0xe618
0xe612:     00 39 f5 89 07 73                                  |.9...s          |
; function: function_e618 at 0xe618 -- 0xe61c
0xe618:     1c 89                              	sbb al, 0x89
0xe61a:     eb 90                              	jmp 0xe5ac <function_e5ac>
; data inside code section at 0xe61c -- 0xe620
0xe61c:     8d 74 26 00                                        |.t&.            |
; function: function_e620 at 0xe620 -- 0xe621
; data inside code section at 0xe621 -- 0xe628
0xe621:     04 24 00 02 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0xe628 -- 0xe629
; data inside code section at 0xe629 -- 0xe62b
0xe629:     ff ff                                              |..              |
; function: function_e62b at 0xe62b -- 0xe683
0xe62b:     ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0xe631:     39 de                              	cmp esi, ebx
0xe633:     77 eb                              	ja 0xe620 <function_e620>
0xe635:     89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0xe638:     8b 55 00                           	mov edx, dword ptr [ebp]
0xe63b:     8d 82 00 02 00 00                  	lea eax, [edx + 0x200]
0xe641:     89 47 10                           	mov dword ptr [edi + 0x10], eax
0xe644:     8d 46 fc                           	lea eax, [esi - 4]
0xe647:     89 57 0c                           	mov dword ptr [edi + 0xc], edx
0xe64a:     89 47 24                           	mov dword ptr [edi + 0x24], eax
0xe64d:     8b 46 fc                           	mov eax, dword ptr [esi - 4]
0xe650:     89 57 08                           	mov dword ptr [edi + 8], edx
0xe653:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xe657:     8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0xe65d:     81 e2 ff 01 00 00                  	and edx, 0x1ff
0xe663:     89 47 1c                           	mov dword ptr [edi + 0x1c], eax
0xe666:     01 d0                              	add eax, edx
0xe668:     89 47 18                           	mov dword ptr [edi + 0x18], eax
0xe66b:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe66f:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe676:     89 4f 20                           	mov dword ptr [edi + 0x20], ecx
0xe679:     75 2b                              	jne 0xe6a6 <function_e6a6>
0xe67b:     83 c4 3c                           	add esp, 0x3c
0xe67e:     5b                                 	pop ebx
0xe67f:     5e                                 	pop esi
0xe680:     5f                                 	pop edi
0xe681:     5d                                 	pop ebp
0xe682:     c3                                 	ret 
; data inside code section at 0xe683 -- 0xe687
0xe683:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0xe687 -- 0xe688
; data inside code section at 0xe688 -- 0xe699
0xe688:     ff ff ff 39 dd 73 12 8b  45 00 83 c5 04 89 04 24   |...9.s..E......$|
0xe698:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe699 -- 0xe69a
; data inside code section at 0xe69a -- 0xe69e
0xe69a:     ff ff ff 39                                        |...9            |
; function: function_e69e at 0xe69e -- 0xe6a0
0xe69e:     eb 77                              	jmp 0xe717
; data inside code section at 0xe6a0 -- 0xe6a2
0xe6a0:     ee e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0xe6a2 -- 0xe6a3
; data inside code section at 0xe6a3 -- 0xe6a6
0xe6a3:     ff ff ff                                           |...             |
; function: function_e6a6 at 0xe6a6 -- 0xe6a7
; dynamically linked function: __stack_chk_fail at 0xe6a7 -- 0xe6a8
; data inside code section at 0xe6a8 -- 0xe6ac
0xe6a8:     ff ff ff 89                                        |....            |
; function: function_e6ac at 0xe6ac -- 0xe6ad
0xe6ac:     c3                                 	ret 
; data inside code section at 0xe6ad -- 0xe6ae
0xe6ad:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xe6ae -- 0xe6af
; data inside code section at 0xe6af -- 0xe6b6
0xe6af:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xe6b6 -- 0xe6b7
; data inside code section at 0xe6b7 -- 0xe6c0
0xe6b7:     ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0xe6c0 -- 0xe6c1
; data inside code section at 0xe6c1 -- 0xe6d2
0xe6c1:     ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0xe6d1:     e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0xe6d2 -- 0xe6d3
; data inside code section at 0xe6d3 -- 0xe6d7
0xe6d3:     ff ff ff 89                                        |....            |
; function: function_e6d7 at 0xe6d7 -- 0xe6d8
0xe6d7:     c3                                 	ret 
; data inside code section at 0xe6d8 -- 0xe6d9
0xe6d8:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xe6d9 -- 0xe6da
; data inside code section at 0xe6da -- 0xe6e1
0xe6da:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xe6e1 -- 0xe6e2
; data inside code section at 0xe6e2 -- 0xe6e5
0xe6e2:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIiERKi
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIiERKi at 0xe6f0 -- 0xe7c0
0xe6f0:     83 ec 5c                           	sub esp, 0x5c
0xe6f3:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xe6f7:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xe6fb:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xe6ff:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xe703:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe709:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xe70d:     31 c0                              	xor eax, eax
0xe70f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xe713:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xe717:     8d 47 04                           	lea eax, [edi + 4]
0xe71a:     39 c3                              	cmp ebx, eax
0xe71c:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xe720:     8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0xe724:     0f 84 ce 00 00 00                  	je 0xe7f8 <function_e7f8>
0xe72a:     8b 55 00                           	mov edx, dword ptr [ebp]
0xe72d:     3b 53 10                           	cmp edx, dword ptr [ebx + 0x10]
0xe730:     7d 76                              	jge 0xe7a8 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIiERKi+0xb8>
0xe732:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xe735:     39 d8                              	cmp eax, ebx
0xe737:     0f 84 31 01 00 00                  	je 0xe86e <function_e86e>
0xe73d:     89 1c 24                           	mov dword ptr [esp], ebx
0xe740:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xe744:     e8 fc ff ff ff                     	call 0xe745
0xe749:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xe74d:     3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0xe750:     0f 8e ba 00 00 00                  	jle 0xe810 <function_e810>
0xe756:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0xe759:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xe75d:     85 d2                              	test edx, edx
0xe75f:     0f 84 df 00 00 00                  	je 0xe844 <function_e844>
0xe765:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xe769:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0xe76d:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xe771:     89 34 24                           	mov dword ptr [esp], esi
0xe774:     e8 c7 a7 00 00                     	call 0x18f40 <unknown_18f40>
0xe779:     83 ec 04                           	sub esp, 4
0xe77c:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xe780:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xe787:     89 f0                              	mov eax, esi
0xe789:     0f 85 e8 00 00 00                  	jne 0xe877 <function_e877>
0xe78f:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xe793:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xe797:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xe79b:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xe79f:     83 c4 5c                           	add esp, 0x5c
0xe7a2:     c2 04 00                           	ret 4
; data inside code section at 0xe7a5 -- 0xe7a8
0xe7a5:     8d 76 00                                           |.v.             |
0xe7a8:     0f 8e 8a 00 00 00                  	jle 0xe838 <function_e838>
0xe7ae:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xe7b1:     39 d8                              	cmp eax, ebx
0xe7b3:     0f 84 87 00 00 00                  	je 0xe840 <function_e840>
0xe7b9:     89 1c 24                           	mov dword ptr [esp], ebx
0xe7bc:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0xe7c0 -- 0xe7c1
0xe7c0:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xe7c1 -- 0xe7c2
; data inside code section at 0xe7c2 -- 0xe7dd
0xe7c2:     ff ff ff 8b 54 24 24 3b  50 10 7d 42 8b 4b 0c 89   |....T$$;P.}B.K..|
0xe7d2:     6c 24 10 85 c9 0f 84 8b  00 00 00                  |l$.........     |
; function: function_e7dd at 0xe7dd -- 0xe7f6
0xe7dd:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xe7e1:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xe7e5:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xe7e9:     89 34 24                           	mov dword ptr [esp], esi
0xe7ec:     e8 4f a7 00 00                     	call 0x18f40 <unknown_18f40>
0xe7f1:     83 ec 04                           	sub esp, 4
0xe7f4:     eb 86                              	jmp 0xe77c
; data inside code section at 0xe7f6 -- 0xe7f8
0xe7f6:     66 90                                              |f.              |
; function: function_e7f8 at 0xe7f8 -- 0xe810
0xe7f8:     8b 4f 14                           	mov ecx, dword ptr [edi + 0x14]
0xe7fb:     85 c9                              	test ecx, ecx
0xe7fd:     74 11                              	je 0xe810 <function_e810>
0xe7ff:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xe802:     8b 55 00                           	mov edx, dword ptr [ebp]
0xe805:     39 50 10                           	cmp dword ptr [eax + 0x10], edx
0xe808:     7c 36                              	jl 0xe840 <function_e840>
0xe80a:     8d b6 00 00 00 00                  	lea esi, [esi]
; function: function_e810 at 0xe810 -- 0xe832
0xe810:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xe814:     89 04 24                           	mov dword ptr [esp], eax
0xe817:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xe81b:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xe81f:     e8 ec a7 00 00                     	call 0x19010 <unknown_19010>
0xe824:     83 ec 04                           	sub esp, 4
0xe827:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xe82b:     89 06                              	mov dword ptr [esi], eax
0xe82d:     e9 4a ff ff ff                     	jmp 0xe77c
; data inside code section at 0xe832 -- 0xe838
0xe832:     8d b6 00 00 00 00                                  |......          |
; function: function_e838 at 0xe838 -- 0xe83f
0xe838:     89 1e                              	mov dword ptr [esi], ebx
0xe83a:     e9 3d ff ff ff                     	jmp 0xe77c
; data inside code section at 0xe83f -- 0xe840
0xe83f:     90                                                 |.               |
; function: function_e840 at 0xe840 -- 0xe844
0xe840:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
; function: function_e844 at 0xe844 -- 0xe864
0xe844:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xe848:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xe850:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xe854:     89 34 24                           	mov dword ptr [esp], esi
0xe857:     e8 e4 a6 00 00                     	call 0x18f40 <unknown_18f40>
0xe85c:     83 ec 04                           	sub esp, 4
0xe85f:     e9 18 ff ff ff                     	jmp 0xe77c
; data inside code section at 0xe864 -- 0xe868
0xe864:     8d 74 26 00                                        |.t&.            |
; function: function_e868 at 0xe868 -- 0xe86e
0xe868:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xe86c:     eb da                              	jmp 0xe848
; function: function_e86e at 0xe86e -- 0xe877
0xe86e:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xe872:     e9 66 ff ff ff                     	jmp 0xe7dd <function_e7dd>
; function: function_e877 at 0xe877 -- 0xe87c
0xe877:     e8 fc ff ff ff                     	call 0xe878
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS0_8functionIFvSD_SE_EEEEENS2_5mutexEEEEESaISL_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS0_8functionIFvSD_SE_EEEEENS2_5mutexEEEEESaISL_EED1Ev at 0xe880 -- 0xe8b2
0xe880:     57                                 	push edi
0xe881:     56                                 	push esi
0xe882:     53                                 	push ebx
0xe883:     83 ec 20                           	sub esp, 0x20
0xe886:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xe88a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe890:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe894:     31 c0                              	xor eax, eax
0xe896:     8b 1f                              	mov ebx, dword ptr [edi]
0xe898:     39 fb                              	cmp ebx, edi
0xe89a:     75 06                              	jne 0xe8a2 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS0_8functionIFvSD_SE_EEEEENS2_5mutexEEEEESaISL_EED1Ev+0x22>
0xe89c:     eb 1d                              	jmp 0xe8bb <function_e8bb>
; data inside code section at 0xe89e -- 0xe8a0
0xe89e:     66 90                                              |f.              |
0xe8a0:     89 f3                              	mov ebx, esi
0xe8a2:     8b 33                              	mov esi, dword ptr [ebx]
0xe8a4:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xe8a7:     89 04 24                           	mov dword ptr [esp], eax
0xe8aa:     e8 b1 49 00 00                     	call 0x13260 <function_13260>
0xe8af:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe8b2 -- 0xe8b3
0xe8b2:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe8b3 -- 0xe8b4
; data inside code section at 0xe8b4 -- 0xe8bb
0xe8b4:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_e8bb at 0xe8bb -- 0xe8d4
0xe8bb:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xe8bf:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe8c6:     75 07                              	jne 0xe8cf <function_e8bb+0x14>
0xe8c8:     83 c4 20                           	add esp, 0x20
0xe8cb:     5b                                 	pop ebx
0xe8cc:     5e                                 	pop esi
0xe8cd:     5f                                 	pop edi
0xe8ce:     c3                                 	ret 
0xe8cf:     e8 fc ff ff ff                     	call 0xe8d0
; section: .text._Z16WriteCompactSizeI11CDataStreamEvRT_y
; function: _Z16WriteCompactSizeI11CDataStreamEvRT_y at 0xe8e0 -- 0xea28
0xe8e0:     53                                 	push ebx
0xe8e1:     83 ec 48                           	sub esp, 0x48
0xe8e4:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0xe8e8:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xe8ef:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0xe8f3:     31 c9                              	xor ecx, ecx
0xe8f5:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0xe8f9:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0xe8fd:     83 fa 00                           	cmp edx, 0
0xe900:     76 6e                              	jbe 0xe970 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x90>
0xe902:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xe906:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe909:     8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0xe90d:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xe911:     8d 54 24 3b                        	lea edx, [esp + 0x3b]
0xe915:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xe919:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xe91d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe921:     c6 44 24 3b ff                     	mov byte ptr [esp + 0x3b], 0xff
0xe926:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xe92b:     89 1c 24                           	mov dword ptr [esp], ebx
0xe92e:     e8 ed a3 00 00                     	call 0x18d20 <unknown_18d20>
0xe933:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe936:     8d 54 24 28                        	lea edx, [esp + 0x28]
0xe93a:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xe93f:     8d 4c 24 30                        	lea ecx, [esp + 0x30]
0xe943:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe947:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xe94b:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xe94f:     89 1c 24                           	mov dword ptr [esp], ebx
0xe952:     e8 c9 a3 00 00                     	call 0x18d20 <unknown_18d20>
0xe957:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xe95b:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe962:     0f 85 bb 00 00 00                  	jne 0xea23 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x143>
0xe968:     83 c4 48                           	add esp, 0x48
0xe96b:     5b                                 	pop ebx
0xe96c:     c3                                 	ret 
; data inside code section at 0xe96d -- 0xe970
0xe96d:     8d 76 00                                           |.v.             |
0xe970:     3d fc 00 00 00                     	cmp eax, 0xfc
0xe975:     76 49                              	jbe 0xe9c0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0xe0>
0xe977:     3d ff ff 00 00                     	cmp eax, 0xffff
0xe97c:     76 62                              	jbe 0xe9e0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x100>
0xe97e:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xe982:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe985:     8d 54 24 3b                        	lea edx, [esp + 0x3b]
0xe989:     8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0xe98d:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xe991:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xe995:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe999:     c6 44 24 3b fe                     	mov byte ptr [esp + 0x3b], 0xfe
0xe99e:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xe9a3:     89 1c 24                           	mov dword ptr [esp], ebx
0xe9a6:     e8 75 a3 00 00                     	call 0x18d20 <unknown_18d20>
0xe9ab:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe9ae:     8d 54 24 34                        	lea edx, [esp + 0x34]
0xe9b2:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xe9b7:     8d 4c 24 38                        	lea ecx, [esp + 0x38]
0xe9bb:     eb 86                              	jmp 0xe943 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0xe9bd -- 0xe9c0
0xe9bd:     8d 76 00                                           |.v.             |
0xe9c0:     88 44 24 3b                        	mov byte ptr [esp + 0x3b], al
0xe9c4:     8d 54 24 3b                        	lea edx, [esp + 0x3b]
0xe9c8:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe9cb:     8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0xe9cf:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xe9d4:     e9 6a ff ff ff                     	jmp 0xe943 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0xe9d9 -- 0xe9e0
0xe9d9:     8d b4 26 00 00 00 00                               |..&....         |
0xe9e0:     66 89 44 24 38                     	mov word ptr [esp + 0x38], ax
0xe9e5:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xe9e8:     8d 54 24 3b                        	lea edx, [esp + 0x3b]
0xe9ec:     8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0xe9f0:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xe9f4:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xe9f8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xe9fc:     c6 44 24 3b fd                     	mov byte ptr [esp + 0x3b], 0xfd
0xea01:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xea06:     89 1c 24                           	mov dword ptr [esp], ebx
0xea09:     e8 12 a3 00 00                     	call 0x18d20 <unknown_18d20>
0xea0e:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xea11:     8d 54 24 38                        	lea edx, [esp + 0x38]
0xea15:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0xea1a:     8d 4c 24 3a                        	lea ecx, [esp + 0x3a]
0xea1e:     e9 20 ff ff ff                     	jmp 0xe943 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
0xea23:     e8 fc ff ff ff                     	call 0xea24
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKSs
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKSs at 0xea30 -- 0xea78
0xea30:     83 ec 5c                           	sub esp, 0x5c
0xea33:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xea37:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0xea3b:     8b 54 24 70                        	mov edx, dword ptr [esp + 0x70]
0xea3f:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xea46:     89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0xea4a:     31 c9                              	xor ecx, ecx
0xea4c:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xea50:     8b 5c 24 64                        	mov ebx, dword ptr [esp + 0x64]
0xea54:     85 f6                              	test esi, esi
0xea56:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xea5a:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0xea5e:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xea62:     8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0xea66:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xea6a:     c6 44 24 10 01                     	mov byte ptr [esp + 0x10], 1
0xea6f:     74 6f                              	je 0xeae0 <function_eae0>
0xea71:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0xea78 -- 0xea79
0xea78:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xea79 -- 0xea7a
; data inside code section at 0xea7a -- 0xea7c
0xea7a:     ff ff                                              |..              |
; function: function_ea7c at 0xea7c -- 0xeadb
0xea7c:     ff 89 c6 83 c0 10                  	dec dword ptr [ecx + 0x10c083c6]
0xea82:     74 10                              	je 0xea94 <function_ea7c+0x18>
0xea84:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xea88:     89 04 24                           	mov dword ptr [esp], eax
0xea8b:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xea8f:     e8 fc ff ff ff                     	call 0xea90
0xea94:     8d 43 04                           	lea eax, [ebx + 4]
0xea97:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xea9b:     0f b6 44 24 10                     	movzx eax, byte ptr [esp + 0x10]
0xeaa0:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xeaa4:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0xeaa8:     89 04 24                           	mov dword ptr [esp], eax
0xeaab:     e8 fc ff ff ff                     	call 0xeaac
0xeab0:     89 f8                              	mov eax, edi
0xeab2:     83 43 14 01                        	add dword ptr [ebx + 0x14], 1
0xeab6:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xeaba:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xeac1:     89 37                              	mov dword ptr [edi], esi
0xeac3:     75 5b                              	jne 0xeb20 <function_eb20>
0xeac5:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xeac9:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xeacd:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xead1:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xead5:     83 c4 5c                           	add esp, 0x5c
0xead8:     c2 04 00                           	ret 4
; data inside code section at 0xeadb -- 0xeae0
0xeadb:     90 8d 74 26 00                                     |..t&.           |
; function: function_eae0 at 0xeae0 -- 0xeb06
0xeae0:     8d 43 04                           	lea eax, [ebx + 4]
0xeae3:     39 c5                              	cmp ebp, eax
0xeae5:     74 8a                              	je 0xea71
0xeae7:     8b 02                              	mov eax, dword ptr [edx]
0xeae9:     8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0xeaec:     8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0xeaef:     8b 4a f4                           	mov ecx, dword ptr [edx - 0xc]
0xeaf2:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xeaf6:     89 04 24                           	mov dword ptr [esp], eax
0xeaf9:     39 f1                              	cmp ecx, esi
0xeafb:     89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0xeaff:     0f 47 ce                           	cmova ecx, esi
0xeb02:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0xeb06 -- 0xeb07
0xeb06:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xeb07 -- 0xeb08
; data inside code section at 0xeb08 -- 0xeb0a
0xeb08:     ff ff                                              |..              |
; function: function_eb0a at 0xeb0a -- 0xeb0c
0xeb0a:     ff 2b                              	ljmp [ebx]
; function: function_eb0c at 0xeb0c -- 0xeb20
0xeb0c:     74 24                              	je 0xeb32 <function_eb32>
0xeb0e:     10 85 c0 0f 44 c6                  	adc byte ptr [ebp - 0x39bbf040], al
0xeb14:     c1 e8 1f                           	shr eax, 0x1f
0xeb17:     88 44 24 10                        	mov byte ptr [esp + 0x10], al
0xeb1b:     e9 51 ff ff ff                     	jmp 0xea71
; function: function_eb20 at 0xeb20 -- 0xeb21
; dynamically linked function: __stack_chk_fail at 0xeb21 -- 0xeb22
; data inside code section at 0xeb22 -- 0xeb29
0xeb22:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0xeb29 -- 0xeb2a
; data inside code section at 0xeb2a -- 0xeb31
0xeb2a:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0xeb31 -- 0xeb32
; function: function_eb32 at 0xeb32 -- 0xeb33
; data inside code section at 0xeb33 -- 0xeb36
0xeb33:     ff ff e8                                           |...             |
; dynamically linked function: __cxa_rethrow at 0xeb36 -- 0xeb37
; data inside code section at 0xeb37 -- 0xeb3b
0xeb37:     ff ff ff 89                                        |....            |
; function: function_eb3b at 0xeb3b -- 0xeb3c
0xeb3b:     c3                                 	ret 
; data inside code section at 0xeb3c -- 0xeb3d
0xeb3c:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xeb3d -- 0xeb3e
; data inside code section at 0xeb3e -- 0xeb45
0xeb3e:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xeb45 -- 0xeb46
; data inside code section at 0xeb46 -- 0xeb49
0xeb46:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs at 0xeb50 -- 0xebce
0xeb50:     55                                 	push ebp
0xeb51:     57                                 	push edi
0xeb52:     56                                 	push esi
0xeb53:     53                                 	push ebx
0xeb54:     83 ec 5c                           	sub esp, 0x5c
0xeb57:     8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0xeb5b:     8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0xeb5f:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xeb63:     8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0xeb67:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xeb6b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xeb71:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xeb75:     31 c0                              	xor eax, eax
0xeb77:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xeb7b:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xeb7f:     8b 7a 08                           	mov edi, dword ptr [edx + 8]
0xeb82:     85 ff                              	test edi, edi
0xeb84:     0f 84 bb 00 00 00                  	je 0xec45 <function_ec45>
0xeb8a:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xeb8e:     8b 12                              	mov edx, dword ptr [edx]
0xeb90:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xeb94:     8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0xeb97:     eb 15                              	jmp 0xebae <_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs+0x5e>
; data inside code section at 0xeb99 -- 0xeba0
0xeb99:     8d b4 26 00 00 00 00                               |..&....         |
0xeba0:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xeba3:     b9 01 00 00 00                     	mov ecx, 1
0xeba8:     85 c0                              	test eax, eax
0xebaa:     74 41                              	je 0xebed <function_ebed>
0xebac:     89 c7                              	mov edi, eax
0xebae:     8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0xebb1:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xebb5:     8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0xebb8:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xebbc:     89 04 24                           	mov dword ptr [esp], eax
0xebbf:     39 de                              	cmp esi, ebx
0xebc1:     89 da                              	mov edx, ebx
0xebc3:     0f 46 d6                           	cmovbe edx, esi
0xebc6:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xebca:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
; data inside code section at 0xebce -- 0xebcf
0xebce:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xebcf -- 0xebd0
; data inside code section at 0xebd0 -- 0xebed
0xebd0:     ff ff ff 89 f1 8b 54 24  28 29 d9 85 c0 0f 44 c1   |......T$()....D.|
0xebe0:     85 c0 78 bc 8b 47 0c 31  c9 85 c0 75 bf            |..x..G.1...u.   |
; function: function_ebed at 0xebed -- 0xebf5
0xebed:     84 c9                              	test cl, cl
0xebef:     89 d0                              	mov eax, edx
0xebf1:     89 fa                              	mov edx, edi
0xebf3:     75 5b                              	jne 0xec50
; function: function_ebf5 at 0xebf5 -- 0xec0a
0xebf5:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xebf9:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xebfd:     29 f3                              	sub ebx, esi
0xebff:     89 2c 24                           	mov dword ptr [esp], ebp
0xec02:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xec06:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0xec0a -- 0xec0b
0xec0a:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xec0b -- 0xec0c
; data inside code section at 0xec0c -- 0xec0e
0xec0c:     ff ff                                              |..              |
; function: function_ec0e at 0xec0e -- 0xec18
0xec0e:     ff 8b 54 24 28 85                  	dec dword ptr [ebx - 0x7ad7dbac]
0xec14:     c0 0f 44                           	ror byte ptr [edi], 0x44
0xec17:     c3                                 	ret 
; data inside code section at 0xec18 -- 0xec26
0xec18:     85 c0 78 6c 8b 44 24 30  89 10 c6 40 04 00         |..xl.D$0...@..  |
; function: function_ec26 at 0xec26 -- 0xec45
0xec26:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xec2a:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xec31:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xec35:     0f 85 8b 00 00 00                  	jne 0xecc6 <function_ecc6>
0xec3b:     83 c4 5c                           	add esp, 0x5c
0xec3e:     5b                                 	pop ebx
0xec3f:     5e                                 	pop esi
0xec40:     5f                                 	pop edi
0xec41:     5d                                 	pop ebp
0xec42:     c2 04 00                           	ret 4
; function: function_ec45 at 0xec45 -- 0xecc6
0xec45:     89 d7                              	mov edi, edx
0xec47:     83 c7 04                           	add edi, 4
0xec4a:     8d b6 00 00 00 00                  	lea esi, [esi]
0xec50:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xec54:     3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0xec57:     74 2f                              	je 0xec88 <function_ec45+0x43>
0xec59:     89 3c 24                           	mov dword ptr [esp], edi
0xec5c:     e8 fc ff ff ff                     	call 0xec5d
0xec61:     89 c2                              	mov edx, eax
0xec63:     8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0xec67:     8b 6a 10                           	mov ebp, dword ptr [edx + 0x10]
0xec6a:     8b 00                              	mov eax, dword ptr [eax]
0xec6c:     8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0xec6f:     8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0xec72:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xec76:     89 d8                              	mov eax, ebx
0xec78:     39 de                              	cmp esi, ebx
0xec7a:     0f 46 c6                           	cmovbe eax, esi
0xec7d:     e9 73 ff ff ff                     	jmp 0xebf5 <function_ebf5>
; data inside code section at 0xec82 -- 0xec88
0xec82:     8d b6 00 00 00 00                                  |......          |
0xec88:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xec8c:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xec90:     89 04 24                           	mov dword ptr [esp], eax
0xec93:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xec97:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xec9f:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xeca3:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0xeca7:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xecab:     e8 d0 e8 00 00                     	call 0x1d580 <unknown_1d580>
0xecb0:     83 ec 04                           	sub esp, 4
0xecb3:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xecb7:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xecbb:     89 02                              	mov dword ptr [edx], eax
0xecbd:     c6 42 04 01                        	mov byte ptr [edx + 4], 1
0xecc1:     e9 60 ff ff ff                     	jmp 0xec26 <function_ec26>
; function: function_ecc6 at 0xecc6 -- 0xecc7
; dynamically linked function: __stack_chk_fail at 0xecc7 -- 0xecc8
; data inside code section at 0xecc8 -- 0xeccb
0xecc8:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISsERKSs
; function: _ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISsERKSs at 0xecd0 -- 0xed54
0xecd0:     83 ec 7c                           	sub esp, 0x7c
0xecd3:     89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0xecd7:     8b ac 24 84 00 00 00               	mov ebp, dword ptr [esp + 0x84]
0xecde:     89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0xece2:     8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0xece9:     8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0xecf0:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xecf7:     89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0xecfb:     31 c9                              	xor ecx, ecx
0xecfd:     8d 45 04                           	lea eax, [ebp + 4]
0xed00:     39 c6                              	cmp esi, eax
0xed02:     89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0xed06:     8b bc 24 80 00 00 00               	mov edi, dword ptr [esp + 0x80]
0xed0d:     89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0xed11:     89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0xed15:     0f 84 bd 01 00 00                  	je 0xeed8 <function_eed8>
0xed1b:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xed1f:     8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0xed22:     8b 12                              	mov edx, dword ptr [edx]
0xed24:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xed28:     8b 5a f4                           	mov ebx, dword ptr [edx - 0xc]
0xed2b:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xed2f:     8b 51 f4                           	mov edx, dword ptr [ecx - 0xc]
0xed32:     89 d9                              	mov ecx, ebx
0xed34:     39 da                              	cmp edx, ebx
0xed36:     0f 46 ca                           	cmovbe ecx, edx
0xed39:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xed3d:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xed41:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xed45:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0xed49:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xed4d:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xed51:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0xed54 -- 0xed55
0xed54:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xed55 -- 0xed56
; data inside code section at 0xed56 -- 0xed7d
0xed56:     ff ff ff 8b 54 24 34 89  d9 29 d1 85 c0 0f 44 c1   |....T$4..)....D.|
0xed66:     85 c0 0f 89 aa 00 00 00  8b 45 0c 39 f0 0f 84 25   |.........E.9...%|
0xed76:     02 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0xed7d -- 0xed7e
; data inside code section at 0xed7e -- 0xeda6
0xed7e:     ff ff ff 89 da 89 44 24  38 8b 40 10 8b 48 f4 89   |......D$8.@..H..|
0xed8e:     04 24 39 d9 0f 46 d1 89  54 24 08 8b 54 24 3c 89   |.$9..F..T$..T$<.|
0xed9e:     4c 24 34 89 54 24 04 e8                            |L$4.T$..        |
; dynamically linked function: memcmp at 0xeda6 -- 0xeda7
; data inside code section at 0xeda7 -- 0xeddf
0xeda7:     ff ff ff 8b 4c 24 34 29  d9 85 c0 0f 44 c1 85 c0   |....L$4)....D...|
0xedb7:     0f 89 5b 01 00 00 8b 44  24 38 8b 50 0c 85 d2 0f   |..[....D$8.P....|
0xedc7:     84 74 01 00 00 8b 4c 24  40 89 74 24 0c 89 74 24   |.t....L$@.t$..t$|
0xedd7:     08 89 6c 24 04 89 4c 24                            |..l$..L$        |
; function: function_eddf at 0xeddf -- 0xedea
0xeddf:     10 89 3c 24 e8 18                  	adc byte ptr [ecx + 0x18e8243c], cl
0xede5:     e9 00 00 83 ec                     	jmp 0xec83edea <function_ec83edea>
; data inside code section at 0xedea -- 0xedeb
0xedea:     04                                                 |.               |
; function: function_edeb at 0xedeb -- 0xee14
0xedeb:     8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0xedef:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xedf6:     89 f8                              	mov eax, edi
0xedf8:     0f 85 c4 01 00 00                  	jne 0xefc2 <function_efc2>
0xedfe:     8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0xee02:     8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0xee06:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0xee0a:     8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0xee0e:     83 c4 7c                           	add esp, 0x7c
0xee11:     c2 04 00                           	ret 4
; data inside code section at 0xee14 -- 0xee52
0xee14:     8d 74 26 00 8b 4c 24 38  89 54 24 34 89 4c 24 08   |.t&..L$8.T$4.L$.|
0xee24:     8b 4c 24 3c 89 4c 24 04  8b 4c 24 2c 89 0c 24 e8   |.L$<.L$..L$,..$.|
0xee34:     fc ff ff ff 8b 54 24 34  29 da 85 c0 0f 45 d0 85   |.....T$4)....E..|
0xee44:     d2 0f 89 85 00 00 00 8b  45 10 39 f0 0f 84         |........E.9...  |
; function: function_ee52 at 0xee52 -- 0xee59
0xee52:     ea 00 00 00 89 34 24               	ljmp 0x2434:0x89000000 <function_89000000>
; data inside code section at 0xee59 -- 0xee5a
0xee59:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xee5a -- 0xee5b
; data inside code section at 0xee5b -- 0xee83
0xee5b:     ff ff ff 89 c1 8b 40 10  8b 50 f4 89 44 24 04 89   |......@..P..D$..|
0xee6b:     4c 24 34 39 da 89 54 24  38 0f 47 d3 89 54 24 08   |L$49..T$8.G..T$.|
0xee7b:     8b 54 24 3c 89 14 24 e8                            |.T$<..$.        |
; dynamically linked function: memcmp at 0xee83 -- 0xee84
; data inside code section at 0xee84 -- 0xee86
0xee84:     ff ff                                              |..              |
; function: function_ee86 at 0xee86 -- 0xeecb
0xee86:     ff 8b 4c 24 34 2b                  	dec dword ptr [ebx + 0x2b34244c]
0xee8c:     5c                                 	pop esp
0xee8d:     24 38                              	and al, 0x38
0xee8f:     85 c0                              	test eax, eax
0xee91:     0f 44 c3                           	cmove eax, ebx
0xee94:     85 c0                              	test eax, eax
0xee96:     0f 89 cc 00 00 00                  	jns 0xef68 <function_ef68>
0xee9c:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xee9f:     85 c0                              	test eax, eax
0xeea1:     0f 84 e9 00 00 00                  	je 0xef90 <function_ef90>
0xeea7:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xeeab:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xeeaf:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xeeb3:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xeeb7:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xeebb:     89 3c 24                           	mov dword ptr [esp], edi
0xeebe:     e8 3d e8 00 00                     	call 0x1d700 <unknown_1d700>
0xeec3:     83 ec 04                           	sub esp, 4
0xeec6:     e9 20 ff ff ff                     	jmp 0xedeb <function_edeb>
; data inside code section at 0xeecb -- 0xeed0
0xeecb:     90 8d 74 26 00                                     |..t&.           |
; function: function_eed0 at 0xeed0 -- 0xeed7
0xeed0:     89 37                              	mov dword ptr [edi], esi
0xeed2:     e9 14 ff ff ff                     	jmp 0xedeb <function_edeb>
; data inside code section at 0xeed7 -- 0xeed8
0xeed7:     90                                                 |.               |
; function: function_eed8 at 0xeed8 -- 0xef09
0xeed8:     8b 4d 14                           	mov ecx, dword ptr [ebp + 0x14]
0xeedb:     85 c9                              	test ecx, ecx
0xeedd:     74 39                              	je 0xef18 <function_ef18>
0xeedf:     8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0xeee2:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xeee6:     8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0xeee9:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xeeed:     8b 11                              	mov edx, dword ptr [ecx]
0xeeef:     8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0xeef2:     8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0xeef5:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xeef9:     89 04 24                           	mov dword ptr [esp], eax
0xeefc:     89 d9                              	mov ecx, ebx
0xeefe:     39 de                              	cmp esi, ebx
0xef00:     0f 46 ce                           	cmovbe ecx, esi
0xef03:     29 f3                              	sub ebx, esi
0xef05:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0xef09 -- 0xef0a
0xef09:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xef0a -- 0xef0b
; data inside code section at 0xef0b -- 0xef0f
0xef0b:     ff ff ff 85                                        |....            |
; function: function_ef0f at 0xef0f -- 0xef13
0xef0f:     c0 0f 44                           	ror byte ptr [edi], 0x44
0xef12:     c3                                 	ret 
; data inside code section at 0xef13 -- 0xef18
0xef13:     85 c0 78 61 90                                     |..xa.           |
; function: function_ef18 at 0xef18 -- 0xef3e
0xef18:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xef1c:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xef20:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xef24:     89 04 24                           	mov dword ptr [esp], eax
0xef27:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xef2b:     e8 f0 e8 00 00                     	call 0x1d820 <unknown_1d820>
0xef30:     83 ec 04                           	sub esp, 4
0xef33:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0xef37:     89 07                              	mov dword ptr [edi], eax
0xef39:     e9 ad fe ff ff                     	jmp 0xedeb <function_edeb>
; data inside code section at 0xef3e -- 0xef4c
0xef3e:     66 90 8b 54 24 40 89 44  24 0c 89 54 24 10         |f..T$@.D$..T$.  |
; function: function_ef4c at 0xef4c -- 0xef68
0xef4c:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xef54:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xef58:     89 3c 24                           	mov dword ptr [esp], edi
0xef5b:     e8 a0 e7 00 00                     	call 0x1d700 <unknown_1d700>
0xef60:     83 ec 04                           	sub esp, 4
0xef63:     e9 83 fe ff ff                     	jmp 0xedeb <function_edeb>
; function: function_ef68 at 0xef68 -- 0xef76
0xef68:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xef6c:     8d 44 24 48                        	lea eax, [esp + 0x48]
0xef70:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xef74:     eb ae                              	jmp 0xef24
; data inside code section at 0xef76 -- 0xef78
0xef76:     66 90                                              |f.              |
; function: function_ef78 at 0xef78 -- 0xef8a
0xef78:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xef7c:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xef80:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xef84:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xef88:     eb c2                              	jmp 0xef4c <function_ef4c>
; data inside code section at 0xef8a -- 0xef90
0xef8a:     8d b6 00 00 00 00                                  |......          |
; function: function_ef90 at 0xef90 -- 0xef9e
0xef90:     8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0xef94:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xef98:     89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0xef9c:     eb ae                              	jmp 0xef4c <function_ef4c>
; function: function_ef9e at 0xef9e -- 0xefc2
0xef9e:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0xefa2:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xefa6:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xefaa:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xefae:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0xefb2:     89 3c 24                           	mov dword ptr [esp], edi
0xefb5:     e8 46 e7 00 00                     	call 0x1d700 <unknown_1d700>
0xefba:     83 ec 04                           	sub esp, 4
0xefbd:     e9 29 fe ff ff                     	jmp 0xedeb <function_edeb>
; function: function_efc2 at 0xefc2 -- 0xefc3
; dynamically linked function: __stack_chk_fail at 0xefc3 -- 0xefc4
; data inside code section at 0xefc4 -- 0xefc7
0xefc4:     ff ff ff                                           |...             |
; section: .text._ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii
; function: _ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii at 0xefd0 -- 0xf1fa
0xefd0:     55                                 	push ebp
0xefd1:     57                                 	push edi
0xefd2:     56                                 	push esi
0xefd3:     53                                 	push ebx
0xefd4:     83 ec 4c                           	sub esp, 0x4c
0xefd7:     8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0xefdb:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0xefdf:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xefe6:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xefea:     31 d2                              	xor edx, edx
0xefec:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xeff4:     89 2c 24                           	mov dword ptr [esp], ebp
0xeff7:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xeffb:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xefff:     e8 ac 8c 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf004:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf008:     c7 44 24 08 08 00 00 00            	mov dword ptr [esp + 8], 8
0xf010:     89 2c 24                           	mov dword ptr [esp], ebp
0xf013:     83 c0 04                           	add eax, 4
0xf016:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf01a:     e8 91 8c 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf01f:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf023:     c7 44 24 08 08 00 00 00            	mov dword ptr [esp + 8], 8
0xf02b:     89 2c 24                           	mov dword ptr [esp], ebp
0xf02e:     83 c0 0c                           	add eax, 0xc
0xf031:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf035:     e8 76 8c 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf03a:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf03e:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf046:     89 2c 24                           	mov dword ptr [esp], ebp
0xf049:     83 c0 14                           	add eax, 0x14
0xf04c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf050:     e8 5b 8c 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf055:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf059:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf061:     89 2c 24                           	mov dword ptr [esp], ebp
0xf064:     83 c0 18                           	add eax, 0x18
0xf067:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf06b:     e8 40 8c 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf070:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf074:     8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0xf078:     8b 42 24                           	mov eax, dword ptr [edx + 0x24]
0xf07b:     83 c1 1c                           	add ecx, 0x1c
0xf07e:     89 0c 24                           	mov dword ptr [esp], ecx
0xf081:     89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0xf085:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf089:     e8 f2 a0 00 00                     	call 0x19180 <unknown_19180>
0xf08e:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf092:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf096:     83 c0 20                           	add eax, 0x20
0xf099:     89 42 28                           	mov dword ptr [edx + 0x28], eax
0xf09c:     c7 42 24 00 00 00 00               	mov dword ptr [edx + 0x24], 0
0xf0a3:     89 42 2c                           	mov dword ptr [edx + 0x2c], eax
0xf0a6:     c7 42 30 00 00 00 00               	mov dword ptr [edx + 0x30], 0
0xf0ad:     89 2c 24                           	mov dword ptr [esp], ebp
0xf0b0:     e8 6b e3 00 00                     	call 0x1d420 <unknown_1d420>
0xf0b5:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf0b9:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0xf0bd:     8b 72 28                           	mov esi, dword ptr [edx + 0x28]
0xf0c0:     85 c0                              	test eax, eax
0xf0c2:     74 60                              	je 0xf124 <_ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii+0x154>
0xf0c4:     83 c0 01                           	add eax, 1
0xf0c7:     bb 01 00 00 00                     	mov ebx, 1
0xf0cc:     89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0xf0d0:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0xf0d4:     89 cd                              	mov ebp, ecx
0xf0d6:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xf0da:     8d b6 00 00 00 00                  	lea esi, [esi]
0xf0e0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf0e4:     83 c3 01                           	add ebx, 1
0xf0e7:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf0ef:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xf0f3:     89 04 24                           	mov dword ptr [esp], eax
0xf0f6:     e8 b5 8b 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf0fb:     8d 54 24 2c                        	lea edx, [esp + 0x2c]
0xf0ff:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0xf103:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xf107:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xf10b:     89 14 24                           	mov dword ptr [esp], edx
0xf10e:     e8 ad e5 00 00                     	call 0x1d6c0 <unknown_1d6c0>
0xf113:     83 ec 04                           	sub esp, 4
0xf116:     3b 5c 24 20                        	cmp ebx, dword ptr [esp + 0x20]
0xf11a:     8b 74 24 2c                        	mov esi, dword ptr [esp + 0x2c]
0xf11e:     75 c0                              	jne 0xf0e0 <_ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii+0x110>
0xf120:     8b 6c 24 1c                        	mov ebp, dword ptr [esp + 0x1c]
0xf124:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf128:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf130:     89 2c 24                           	mov dword ptr [esp], ebp
0xf133:     83 c0 34                           	add eax, 0x34
0xf136:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf13a:     e8 71 8b 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf13f:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf143:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf14b:     89 2c 24                           	mov dword ptr [esp], ebp
0xf14e:     83 c0 38                           	add eax, 0x38
0xf151:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf155:     e8 56 8b 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf15a:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf15e:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf162:     83 c0 3c                           	add eax, 0x3c
0xf165:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf169:     8b 42 44                           	mov eax, dword ptr [edx + 0x44]
0xf16c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf170:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf174:     89 04 24                           	mov dword ptr [esp], eax
0xf177:     e8 64 a0 00 00                     	call 0x191e0 <unknown_191e0>
0xf17c:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf180:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf184:     83 c0 40                           	add eax, 0x40
0xf187:     89 42 48                           	mov dword ptr [edx + 0x48], eax
0xf18a:     c7 42 44 00 00 00 00               	mov dword ptr [edx + 0x44], 0
0xf191:     89 42 4c                           	mov dword ptr [edx + 0x4c], eax
0xf194:     c7 42 50 00 00 00 00               	mov dword ptr [edx + 0x50], 0
0xf19b:     89 2c 24                           	mov dword ptr [esp], ebp
0xf19e:     e8 7d e2 00 00                     	call 0x1d420 <unknown_1d420>
0xf1a3:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf1a7:     8b 7a 48                           	mov edi, dword ptr [edx + 0x48]
0xf1aa:     85 c0                              	test eax, eax
0xf1ac:     74 57                              	je 0xf205 <function_f205>
0xf1ae:     83 c0 01                           	add eax, 1
0xf1b1:     be 01 00 00 00                     	mov esi, 1
0xf1b6:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xf1ba:     8d 5c 24 38                        	lea ebx, [esp + 0x38]
0xf1be:     66 90                              	nop 
0xf1c0:     89 da                              	mov edx, ebx
0xf1c2:     89 e8                              	mov eax, ebp
0xf1c4:     c7 44 24 38 0c 00 00 00            	mov dword ptr [esp + 0x38], 0xc
0xf1cc:     e8 5f 0e 00 00                     	call 0x10030 <function_10030>
0xf1d1:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf1d5:     8d 54 24 28                        	lea edx, [esp + 0x28]
0xf1d9:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xf1dd:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0xf1e1:     89 14 24                           	mov dword ptr [esp], edx
0xf1e4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf1e8:     e8 b3 ea 00 00                     	call 0x1dca0 <unknown_1dca0>
0xf1ed:     83 ec 04                           	sub esp, 4
0xf1f0:     83 c6 01                           	add esi, 1
0xf1f3:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0xf1f7:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xf1fa -- 0xf1fb
0xf1fa:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xf1fb -- 0xf1fc
; data inside code section at 0xf1fc -- 0xf205
0xf1fc:     ff ff ff 3b 74 24 20 75  bb                        |...;t$ u.       |
; function: function_f205 at 0xf205 -- 0xf25f
0xf205:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xf209:     c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0xf211:     89 2c 24                           	mov dword ptr [esp], ebp
0xf214:     83 c0 54                           	add eax, 0x54
0xf217:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf21b:     e8 90 8a 00 00                     	call 0x17cb0 <unknown_17cb0>
0xf220:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf224:     89 e8                              	mov eax, ebp
0xf226:     83 c2 58                           	add edx, 0x58
0xf229:     e8 02 0e 00 00                     	call 0x10030 <function_10030>
0xf22e:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf232:     89 e8                              	mov eax, ebp
0xf234:     83 c2 5c                           	add edx, 0x5c
0xf237:     e8 f4 0d 00 00                     	call 0x10030 <function_10030>
0xf23c:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf240:     89 e8                              	mov eax, ebp
0xf242:     83 c2 60                           	add edx, 0x60
0xf245:     e8 e6 0d 00 00                     	call 0x10030 <function_10030>
0xf24a:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xf24e:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf255:     75 1a                              	jne 0xf271 <function_f271>
0xf257:     83 c4 4c                           	add esp, 0x4c
0xf25a:     5b                                 	pop ebx
0xf25b:     5e                                 	pop esi
0xf25c:     5f                                 	pop edi
0xf25d:     5d                                 	pop ebp
0xf25e:     c3                                 	ret 
; data inside code section at 0xf25f -- 0xf265
0xf25f:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZNSsD1Ev at 0xf265 -- 0xf266
; data inside code section at 0xf266 -- 0xf26d
0xf266:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf26d -- 0xf26e
; data inside code section at 0xf26e -- 0xf271
0xf26e:     ff ff ff                                           |...             |
; function: function_f271 at 0xf271 -- 0xf272
; dynamically linked function: __stack_chk_fail at 0xf272 -- 0xf273
; data inside code section at 0xf273 -- 0xf276
0xf273:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E at 0xf280 -- 0xf2c1
0xf280:     57                                 	push edi
0xf281:     56                                 	push esi
0xf282:     53                                 	push ebx
0xf283:     83 ec 20                           	sub esp, 0x20
0xf286:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xf28a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf290:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf294:     31 c0                              	xor eax, eax
0xf296:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xf29a:     85 db                              	test ebx, ebx
0xf29c:     75 04                              	jne 0xf2a2 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E+0x22>
0xf29e:     eb 2a                              	jmp 0xf2ca <function_f2ca>
0xf2a0:     89 f3                              	mov ebx, esi
0xf2a2:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0xf2a5:     89 3c 24                           	mov dword ptr [esp], edi
0xf2a8:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf2ac:     e8 4f f2 00 00                     	call 0x1e500 <unknown_1e500>
0xf2b1:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xf2b4:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xf2b8:     74 04                              	je 0xf2be <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E+0x3e>
0xf2ba:     c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
0xf2be:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xf2c1 -- 0xf2c2
0xf2c1:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf2c2 -- 0xf2c3
; data inside code section at 0xf2c3 -- 0xf2ca
0xf2c3:     ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_f2ca at 0xf2ca -- 0xf2de
0xf2ca:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf2ce:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf2d5:     75 07                              	jne 0xf2de <function_f2ca+0x13>
0xf2d7:     83 c4 20                           	add esp, 0x20
0xf2da:     5b                                 	pop ebx
0xf2db:     5e                                 	pop esi
0xf2dc:     5f                                 	pop edi
0xf2dd:     c3                                 	ret 
; data inside code section at 0xf2de -- 0xf2df
0xf2de:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf2df -- 0xf2e0
; data inside code section at 0xf2e0 -- 0xf2e3
0xf2e0:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv at 0xf2f0 -- 0xf33a
0xf2f0:     57                                 	push edi
0xf2f1:     56                                 	push esi
0xf2f2:     53                                 	push ebx
0xf2f3:     83 ec 20                           	sub esp, 0x20
0xf2f6:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf2fc:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf300:     31 c0                              	xor eax, eax
0xf302:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xf306:     8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0xf309:     85 ff                              	test edi, edi
0xf30b:     74 53                              	je 0xf360 <function_f360>
0xf30d:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xf310:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf314:     8d 47 08                           	lea eax, [edi + 8]
0xf317:     89 04 24                           	mov dword ptr [esp], eax
0xf31a:     e8 51 f2 00 00                     	call 0x1e570 <unknown_1e570>
0xf31f:     8b 1f                              	mov ebx, dword ptr [edi]
0xf321:     39 fb                              	cmp ebx, edi
0xf323:     75 05                              	jne 0xf32a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0xf325:     eb 1c                              	jmp 0xf343 <function_f343>
; data inside code section at 0xf327 -- 0xf328
0xf327:     90                                                 |.               |
0xf328:     89 f3                              	mov ebx, esi
0xf32a:     8b 33                              	mov esi, dword ptr [ebx]
0xf32c:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xf32f:     89 04 24                           	mov dword ptr [esp], eax
0xf332:     e8 99 49 00 00                     	call 0x13cd0 <function_13cd0>
0xf337:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xf33a -- 0xf33b
0xf33a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf33b -- 0xf33c
; data inside code section at 0xf33c -- 0xf343
0xf33c:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_f343 at 0xf343 -- 0xf35a
0xf343:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf347:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf34e:     75 24                              	jne 0xf374 <function_f374>
0xf350:     89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0xf354:     83 c4 20                           	add esp, 0x20
0xf357:     5b                                 	pop ebx
0xf358:     5e                                 	pop esi
0xf359:     5f                                 	pop edi
; data inside code section at 0xf35a -- 0xf35b
0xf35a:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf35b -- 0xf35c
; data inside code section at 0xf35c -- 0xf360
0xf35c:     ff ff ff 90                                        |....            |
; function: function_f360 at 0xf360 -- 0xf374
0xf360:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf364:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf36b:     75 07                              	jne 0xf374 <function_f374>
0xf36d:     83 c4 20                           	add esp, 0x20
0xf370:     5b                                 	pop ebx
0xf371:     5e                                 	pop esi
0xf372:     5f                                 	pop edi
0xf373:     c3                                 	ret 
; function: function_f374 at 0xf374 -- 0xf375
; dynamically linked function: __stack_chk_fail at 0xf375 -- 0xf376
; data inside code section at 0xf376 -- 0xf379
0xf376:     ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSG_SH_EEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSG_SH_EEEEENS1_5mutexEEEEEEEEEvPT_ at 0xf380 -- 0xf3ca
0xf380:     57                                 	push edi
0xf381:     56                                 	push esi
0xf382:     53                                 	push ebx
0xf383:     83 ec 20                           	sub esp, 0x20
0xf386:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xf38a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf390:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf394:     31 c0                              	xor eax, eax
0xf396:     85 ff                              	test edi, edi
0xf398:     74 56                              	je 0xf3f0 <function_f3f0>
0xf39a:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xf39d:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf3a1:     8d 47 08                           	lea eax, [edi + 8]
0xf3a4:     89 04 24                           	mov dword ptr [esp], eax
0xf3a7:     e8 54 f2 00 00                     	call 0x1e600 <unknown_1e600>
0xf3ac:     8b 1f                              	mov ebx, dword ptr [edi]
0xf3ae:     39 fb                              	cmp ebx, edi
0xf3b0:     75 08                              	jne 0xf3ba <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSG_SH_EEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0xf3b2:     eb 1f                              	jmp 0xf3d3 <function_f3d3>
; data inside code section at 0xf3b4 -- 0xf3b8
0xf3b4:     8d 74 26 00                                        |.t&.            |
0xf3b8:     89 f3                              	mov ebx, esi
0xf3ba:     8b 33                              	mov esi, dword ptr [ebx]
0xf3bc:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xf3bf:     89 04 24                           	mov dword ptr [esp], eax
0xf3c2:     e8 99 49 00 00                     	call 0x13d60 <function_13d60>
0xf3c7:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xf3ca -- 0xf3cb
0xf3ca:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf3cb -- 0xf3cc
; data inside code section at 0xf3cc -- 0xf3d3
0xf3cc:     ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_f3d3 at 0xf3d3 -- 0xf3ea
0xf3d3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf3d7:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf3de:     75 24                              	jne 0xf404 <function_f404>
0xf3e0:     89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0xf3e4:     83 c4 20                           	add esp, 0x20
0xf3e7:     5b                                 	pop ebx
0xf3e8:     5e                                 	pop esi
0xf3e9:     5f                                 	pop edi
; data inside code section at 0xf3ea -- 0xf3eb
0xf3ea:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf3eb -- 0xf3ec
; data inside code section at 0xf3ec -- 0xf3f0
0xf3ec:     ff ff ff 90                                        |....            |
; function: function_f3f0 at 0xf3f0 -- 0xf404
0xf3f0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf3f4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf3fb:     75 07                              	jne 0xf404 <function_f404>
0xf3fd:     83 c4 20                           	add esp, 0x20
0xf400:     5b                                 	pop ebx
0xf401:     5e                                 	pop esi
0xf402:     5f                                 	pop edi
0xf403:     c3                                 	ret 
; function: function_f404 at 0xf404 -- 0xf405
; dynamically linked function: __stack_chk_fail at 0xf405 -- 0xf406
; data inside code section at 0xf406 -- 0xf409
0xf406:     ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_ at 0xf410 -- 0xf470
0xf410:     53                                 	push ebx
0xf411:     83 ec 38                           	sub esp, 0x38
0xf414:     8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xf418:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf41e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xf422:     31 c0                              	xor eax, eax
0xf424:     85 db                              	test ebx, ebx
0xf426:     74 30                              	je 0xf458 <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0xf428:     8d 43 0c                           	lea eax, [ebx + 0xc]
0xf42b:     89 04 24                           	mov dword ptr [esp], eax
0xf42e:     e8 bd 49 00 00                     	call 0x13df0 <function_13df0>
0xf433:     8d 43 04                           	lea eax, [ebx + 4]
0xf436:     89 04 24                           	mov dword ptr [esp], eax
0xf439:     e8 b2 49 00 00                     	call 0x13df0 <function_13df0>
0xf43e:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xf442:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf449:     75 1f                              	jne 0xf46a <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0xf44b:     89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0xf44f:     83 c4 38                           	add esp, 0x38
0xf452:     5b                                 	pop ebx
0xf453:     e9 fc ff ff ff                     	jmp 0xf454
0xf458:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xf45c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf463:     75 05                              	jne 0xf46a <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0xf465:     83 c4 38                           	add esp, 0x38
0xf468:     5b                                 	pop ebx
0xf469:     c3                                 	ret 
0xf46a:     8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0xf470 -- 0xf471
0xf470:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf471 -- 0xf472
; data inside code section at 0xf472 -- 0xf476
0xf472:     ff ff ff 83                                        |....            |
; function: function_f476 at 0xf476 -- 0xf477
0xf476:     c3                                 	ret 
; data inside code section at 0xf477 -- 0xf490
0xf477:     04 89 44 24 1c 89 1c 24  e8 6c 49 00 00 8b 44 24   |..D$...$.lI...D$|
0xf487:     1c 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE10_M_insert_EPKSt18_Rb_tree_node_baseS10_RKSP_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE10_M_insert_EPKSt18_Rb_tree_node_baseS10_RKSP_ at 0xf490 -- 0xf4e2
0xf490:     83 ec 4c                           	sub esp, 0x4c
0xf493:     ba 01 00 00 00                     	mov edx, 1
0xf498:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf49e:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xf4a2:     31 c0                              	xor eax, eax
0xf4a4:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0xf4a8:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xf4ac:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0xf4b0:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xf4b4:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0xf4b8:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xf4bc:     8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0xf4c0:     85 c0                              	test eax, eax
0xf4c2:     8d 4e 04                           	lea ecx, [esi + 4]
0xf4c5:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xf4c9:     8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0xf4cd:     89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0xf4d1:     0f 84 89 00 00 00                  	je 0xf560 <function_f560>
0xf4d7:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xf4db:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf4e2 -- 0xf4e3
0xf4e2:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf4e3 -- 0xf4e4
; data inside code section at 0xf4e4 -- 0xf4ff
0xf4e4:     ff ff ff 8b 54 24 1c 83  f8 f0 74 15 8b 0b c6 40   |....T$....t....@|
0xf4f4:     14 00 89 48 10 80 7b 04  00 75 51                  |...H..{..uQ     |
; function: function_f4ff at 0xf4ff -- 0xf500
; data inside code section at 0xf500 -- 0xf51d
0xf500:     5b 0c 89 58 1c 8b 4c 24  14 89 44 24 04 89 14 24   |[..X..L$..D$...$|
0xf510:     89 44 24 1c 89 4c 24 0c  89 6c 24 08 e8            |.D$..L$..l$..   |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0xf51d -- 0xf51e
; data inside code section at 0xf51e -- 0xf520
0xf51e:     ff ff                                              |..              |
; function: function_f520 at 0xf520 -- 0xf550
0xf520:     ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0xf526:     46                                 	inc esi
0xf527:     14 01                              	adc al, 1
0xf529:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xf52d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf534:     89 07                              	mov dword ptr [edi], eax
0xf536:     89 f8                              	mov eax, edi
0xf538:     75 68                              	jne 0xf5a2 <function_f5a2>
0xf53a:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xf53e:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xf542:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xf546:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xf54a:     83 c4 4c                           	add esp, 0x4c
0xf54d:     c2 04 00                           	ret 4
; function: function_f550 at 0xf550 -- 0xf55c
0xf550:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0xf553:     c6 40 14 01                        	mov byte ptr [eax + 0x14], 1
0xf557:     89 48 18                           	mov dword ptr [eax + 0x18], ecx
0xf55a:     eb a3                              	jmp 0xf4ff <function_f4ff>
; data inside code section at 0xf55c -- 0xf560
0xf55c:     8d 74 26 00                                        |.t&.            |
; function: function_f560 at 0xf560 -- 0xf5a2
0xf560:     39 cd                              	cmp ebp, ecx
0xf562:     0f 84 6f ff ff ff                  	je 0xf4d7
0xf568:     8b 03                              	mov eax, dword ptr [ebx]
0xf56a:     3b 45 10                           	cmp eax, dword ptr [ebp + 0x10]
0xf56d:     74 11                              	je 0xf580 <function_f560+0x20>
0xf56f:     0f 9c c2                           	setl dl
0xf572:     0f b6 d2                           	movzx edx, dl
0xf575:     e9 5d ff ff ff                     	jmp 0xf4d7
; data inside code section at 0xf57a -- 0xf580
0xf57a:     8d b6 00 00 00 00                                  |......          |
0xf580:     31 d2                              	xor edx, edx
0xf582:     83 f8 01                           	cmp eax, 1
0xf585:     0f 85 4c ff ff ff                  	jne 0xf4d7
0xf58b:     80 7d 14 00                        	cmp byte ptr [ebp + 0x14], 0
0xf58f:     74 1b                              	je 0xf5ac <function_f5ac>
0xf591:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xf595:     74 10                              	je 0xf5a7 <function_f5a7>
0xf597:     8b 45 18                           	mov eax, dword ptr [ebp + 0x18]
0xf59a:     39 43 08                           	cmp dword ptr [ebx + 8], eax
0xf59d:     0f 9c c2                           	setl dl
0xf5a0:     eb d0                              	jmp 0xf572 <function_f560+0x12>
; function: function_f5a2 at 0xf5a2 -- 0xf5a3
; dynamically linked function: __stack_chk_fail at 0xf5a3 -- 0xf5a4
; data inside code section at 0xf5a4 -- 0xf5a7
0xf5a4:     ff ff ff                                           |...             |
; function: function_f5a7 at 0xf5a7 -- 0xf5ac
0xf5a7:     e8 52 39 00 00                     	call 0x12efe
; function: function_f5ac at 0xf5ac -- 0xf5d0
0xf5ac:     c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xf5b4:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xf5bc:     c7 44 24 04 98 33 00 00            	mov dword ptr [esp + 4], 0x3398 ; "/usr/include/boost/optional/optional.hpp"
0xf5c4:     c7 04 24 a3 1f 00 00               	mov dword ptr [esp], 0x1fa3 ; "this->is_initialized()"
0xf5cb:     e8 fc ff ff ff                     	call 0xf5cc
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_ at 0xf5d0 -- 0xf734
0xf5d0:     55                                 	push ebp
0xf5d1:     57                                 	push edi
0xf5d2:     56                                 	push esi
0xf5d3:     53                                 	push ebx
0xf5d4:     83 ec 4c                           	sub esp, 0x4c
0xf5d7:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0xf5db:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf5e1:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xf5e5:     31 c0                              	xor eax, eax
0xf5e7:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xf5eb:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xf5ef:     8b 7a 08                           	mov edi, dword ptr [edx + 8]
0xf5f2:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xf5f6:     85 ff                              	test edi, edi
0xf5f8:     0f 84 11 01 00 00                  	je 0xf70f <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x13f>
0xf5fe:     8b 0b                              	mov ecx, dword ptr [ebx]
0xf600:     89 cd                              	mov ebp, ecx
0xf602:     eb 11                              	jmp 0xf615 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x45>
; data inside code section at 0xf604 -- 0xf608
0xf604:     8d 74 26 00                                        |.t&.            |
0xf608:     84 c9                              	test cl, cl
0xf60a:     74 1a                              	je 0xf626 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x56>
0xf60c:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xf60f:     85 c0                              	test eax, eax
0xf611:     74 1c                              	je 0xf62f <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x5f>
0xf613:     89 c7                              	mov edi, eax
0xf615:     8b 57 10                           	mov edx, dword ptr [edi + 0x10]
0xf618:     39 d5                              	cmp ebp, edx
0xf61a:     0f 9c c1                           	setl cl
0xf61d:     39 ea                              	cmp edx, ebp
0xf61f:     75 e7                              	jne 0xf608 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x38>
0xf621:     83 fd 01                           	cmp ebp, 1
0xf624:     74 62                              	je 0xf688 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0xb8>
0xf626:     8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0xf629:     31 c9                              	xor ecx, ecx
0xf62b:     85 c0                              	test eax, eax
0xf62d:     75 e4                              	jne 0xf613 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x43>
0xf62f:     89 c8                              	mov eax, ecx
0xf631:     89 e9                              	mov ecx, ebp
0xf633:     84 c0                              	test al, al
0xf635:     0f 84 cd 00 00 00                  	je 0xf708 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x138>
0xf63b:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xf63f:     3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0xf642:     0f 84 d1 00 00 00                  	je 0xf719 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x149>
0xf648:     89 3c 24                           	mov dword ptr [esp], edi
0xf64b:     e8 fc ff ff ff                     	call 0xf64c
0xf650:     8b 0b                              	mov ecx, dword ptr [ebx]
0xf652:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xf655:     39 d1                              	cmp ecx, edx
0xf657:     74 57                              	je 0xf6b0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0xe0>
0xf659:     39 ca                              	cmp edx, ecx
0xf65b:     0f 9c c2                           	setl dl
0xf65e:     84 d2                              	test dl, dl
0xf660:     75 6e                              	jne 0xf6d0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x100>
0xf662:     89 06                              	mov dword ptr [esi], eax
0xf664:     c6 46 04 00                        	mov byte ptr [esi + 4], 0
0xf668:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xf66c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf673:     89 f0                              	mov eax, esi
0xf675:     0f 85 b9 00 00 00                  	jne 0xf734 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x15f>
0xf67b:     83 c4 4c                           	add esp, 0x4c
0xf67e:     5b                                 	pop ebx
0xf67f:     5e                                 	pop esi
0xf680:     5f                                 	pop edi
0xf681:     5d                                 	pop ebp
0xf682:     c2 04 00                           	ret 4
; data inside code section at 0xf685 -- 0xf688
0xf685:     8d 76 00                                           |.v.             |
0xf688:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xf68c:     0f 84 a7 00 00 00                  	je 0xf739 <function_f739>
0xf692:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xf696:     0f 84 93 00 00 00                  	je 0xf72f <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x15f>
0xf69c:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xf69f:     39 43 08                           	cmp dword ptr [ebx + 8], eax
0xf6a2:     0f 9c c1                           	setl cl
0xf6a5:     e9 5e ff ff ff                     	jmp 0xf608 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x38>
; data inside code section at 0xf6aa -- 0xf6b0
0xf6aa:     8d b6 00 00 00 00                                  |......          |
0xf6b0:     83 f9 01                           	cmp ecx, 1
0xf6b3:     75 ad                              	jne 0xf662 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x92>
0xf6b5:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0xf6b9:     74 7e                              	je 0xf739 <function_f739>
0xf6bb:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xf6bf:     74 6e                              	je 0xf72f <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x15f>
0xf6c1:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xf6c4:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xf6c7:     0f 9c c2                           	setl dl
0xf6ca:     84 d2                              	test dl, dl
0xf6cc:     74 94                              	je 0xf662 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x92>
0xf6ce:     66 90                              	nop 
0xf6d0:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xf6d4:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xf6d8:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xf6dc:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xf6e0:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xf6e8:     89 04 24                           	mov dword ptr [esp], eax
0xf6eb:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xf6ef:     e8 6c f3 00 00                     	call 0x1ea60 <unknown_1ea60>
0xf6f4:     83 ec 04                           	sub esp, 4
0xf6f7:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xf6fb:     c6 46 04 01                        	mov byte ptr [esi + 4], 1
0xf6ff:     89 06                              	mov dword ptr [esi], eax
0xf701:     e9 62 ff ff ff                     	jmp 0xf668 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x98>
; data inside code section at 0xf706 -- 0xf708
0xf706:     66 90                                              |f.              |
0xf708:     89 f8                              	mov eax, edi
0xf70a:     e9 46 ff ff ff                     	jmp 0xf655 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x85>
0xf70f:     89 d7                              	mov edi, edx
0xf711:     83 c7 04                           	add edi, 4
0xf714:     e9 22 ff ff ff                     	jmp 0xf63b <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x6b>
0xf719:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0xf71d:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xf721:     89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0xf725:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xf72d:     eb b9                              	jmp 0xf6e8 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_+0x118>
0xf72f:     e8 0a 39 00 00                     	call 0x1303e
; data inside code section at 0xf734 -- 0xf735
0xf734:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf735 -- 0xf736
; data inside code section at 0xf736 -- 0xf739
0xf736:     ff ff ff                                           |...             |
; function: function_f739 at 0xf739 -- 0xf758
0xf739:     c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xf741:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xf749:     c7 44 24 04 98 33 00 00            	mov dword ptr [esp + 4], 0x3398 ; "/usr/include/boost/optional/optional.hpp"
0xf751:     c7 04 24 a3 1f 00 00               	mov dword ptr [esp], 0x1fa3 ; "this->is_initialized()"
; data inside code section at 0xf758 -- 0xf759
0xf758:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xf759 -- 0xf75a
; data inside code section at 0xf75a -- 0xf75d
0xf75a:     ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_ at 0xf760 -- 0xf935
0xf760:     83 ec 5c                           	sub esp, 0x5c
0xf763:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xf767:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xf76b:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xf76f:     8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0xf773:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf779:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xf77d:     31 c0                              	xor eax, eax
0xf77f:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xf783:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xf787:     8d 47 04                           	lea eax, [edi + 4]
0xf78a:     39 c3                              	cmp ebx, eax
0xf78c:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xf790:     8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0xf794:     0f 84 a6 00 00 00                  	je 0xf840 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xe0>
0xf79a:     8b 55 00                           	mov edx, dword ptr [ebp]
0xf79d:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xf7a0:     39 c2                              	cmp edx, eax
0xf7a2:     0f 84 88 00 00 00                  	je 0xf830 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xd0>
0xf7a8:     0f 9c c1                           	setl cl
0xf7ab:     84 c9                              	test cl, cl
0xf7ad:     0f 84 5d 01 00 00                  	je 0xf910 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x1b0>
0xf7b3:     39 5f 0c                           	cmp dword ptr [edi + 0xc], ebx
0xf7b6:     0f 84 44 01 00 00                  	je 0xf900 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x1a0>
0xf7bc:     89 1c 24                           	mov dword ptr [esp], ebx
0xf7bf:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0xf7c3:     e8 fc ff ff ff                     	call 0xf7c4
0xf7c8:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xf7cc:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xf7cf:     39 ca                              	cmp edx, ecx
0xf7d1:     0f 84 f9 00 00 00                  	je 0xf8d0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x170>
0xf7d7:     39 d1                              	cmp ecx, edx
0xf7d9:     0f 9c c2                           	setl dl
0xf7dc:     84 d2                              	test dl, dl
0xf7de:     74 67                              	je 0xf847 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xe7>
0xf7e0:     8b 48 0c                           	mov ecx, dword ptr [eax + 0xc]
0xf7e3:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xf7e7:     85 c9                              	test ecx, ecx
0xf7e9:     0f 84 bb 00 00 00                  	je 0xf8aa <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x14a>
0xf7ef:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xf7f3:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0xf7f7:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xf7fb:     89 34 24                           	mov dword ptr [esp], esi
0xf7fe:     e8 ed f3 00 00                     	call 0x1ebf0 <unknown_1ebf0>
0xf803:     83 ec 04                           	sub esp, 4
0xf806:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xf80a:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0xf811:     89 f0                              	mov eax, esi
0xf813:     0f 85 b8 01 00 00                  	jne 0xf9d1 <function_f9d1>
0xf819:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xf81d:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xf821:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xf825:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xf829:     83 c4 5c                           	add esp, 0x5c
0xf82c:     c2 04 00                           	ret 4
; data inside code section at 0xf82f -- 0xf830
0xf82f:     90                                                 |.               |
0xf830:     83 fa 01                           	cmp edx, 1
0xf833:     74 33                              	je 0xf868 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x108>
0xf835:     89 1e                              	mov dword ptr [esi], ebx
0xf837:     eb cd                              	jmp 0xf806 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xa6>
; data inside code section at 0xf839 -- 0xf840
0xf839:     8d b4 26 00 00 00 00                               |..&....         |
0xf840:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xf843:     85 db                              	test ebx, ebx
0xf845:     75 49                              	jne 0xf890 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x130>
0xf847:     8d 44 24 28                        	lea eax, [esp + 0x28]
0xf84b:     89 04 24                           	mov dword ptr [esp], eax
0xf84e:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xf852:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xf856:     e8 d5 f4 00 00                     	call 0x1ed30 <unknown_1ed30>
0xf85b:     83 ec 04                           	sub esp, 4
0xf85e:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xf862:     89 06                              	mov dword ptr [esi], eax
0xf864:     eb a0                              	jmp 0xf806 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xa6>
; data inside code section at 0xf866 -- 0xf868
0xf866:     66 90                                              |f.              |
0xf868:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xf86c:     0f 84 8c 01 00 00                  	je 0xf9fe <function_f9fe>
0xf872:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xf876:     0f 84 7d 01 00 00                  	je 0xf9f9 <function_f9f9>
0xf87c:     8b 4b 18                           	mov ecx, dword ptr [ebx + 0x18]
0xf87f:     39 4d 08                           	cmp dword ptr [ebp + 8], ecx
0xf882:     0f 9c c1                           	setl cl
0xf885:     e9 21 ff ff ff                     	jmp 0xf7ab <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x4b>
; data inside code section at 0xf88a -- 0xf890
0xf88a:     8d b6 00 00 00 00                                  |......          |
0xf890:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xf893:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0xf896:     3b 55 00                           	cmp edx, dword ptr [ebp]
0xf899:     0f 84 f9 00 00 00                  	je 0xf998 <function_f998>
0xf89f:     0f 9c c2                           	setl dl
0xf8a2:     84 d2                              	test dl, dl
0xf8a4:     74 a1                              	je 0xf847 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xe7>
0xf8a6:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xf8aa:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xf8ae:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xf8b6:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xf8ba:     89 34 24                           	mov dword ptr [esp], esi
0xf8bd:     e8 2e f3 00 00                     	call 0x1ebf0 <unknown_1ebf0>
0xf8c2:     83 ec 04                           	sub esp, 4
0xf8c5:     e9 3c ff ff ff                     	jmp 0xf806 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xa6>
; data inside code section at 0xf8ca -- 0xf8d0
0xf8ca:     8d b6 00 00 00 00                                  |......          |
0xf8d0:     83 fa 01                           	cmp edx, 1
0xf8d3:     0f 85 6e ff ff ff                  	jne 0xf847 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xe7>
0xf8d9:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xf8dd:     0f 84 1b 01 00 00                  	je 0xf9fe <function_f9fe>
0xf8e3:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xf8e7:     0f 84 0c 01 00 00                  	je 0xf9f9 <function_f9f9>
0xf8ed:     8b 55 08                           	mov edx, dword ptr [ebp + 8]
0xf8f0:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xf8f3:     0f 9c c2                           	setl dl
0xf8f6:     e9 e1 fe ff ff                     	jmp 0xf7dc <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x7c>
; data inside code section at 0xf8fb -- 0xf900
0xf8fb:     90 8d 74 26 00                                     |..t&.           |
0xf900:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xf904:     e9 e6 fe ff ff                     	jmp 0xf7ef <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0x8f>
; data inside code section at 0xf909 -- 0xf910
0xf909:     8d b4 26 00 00 00 00                               |..&....         |
0xf910:     39 c2                              	cmp edx, eax
0xf912:     0f 84 be 00 00 00                  	je 0xf9d6 <function_f9d6>
0xf918:     39 d0                              	cmp eax, edx
0xf91a:     0f 9c c0                           	setl al
0xf91d:     84 c0                              	test al, al
0xf91f:     0f 84 10 ff ff ff                  	je 0xf835 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_+0xd5>
0xf925:     39 5f 10                           	cmp dword ptr [edi + 0x10], ebx
0xf928:     0f 84 96 00 00 00                  	je 0xf9c4 <function_f9c4>
0xf92e:     89 1c 24                           	mov dword ptr [esp], ebx
0xf931:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
; data inside code section at 0xf935 -- 0xf936
0xf935:     e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0xf936 -- 0xf937
; data inside code section at 0xf937 -- 0xf939
0xf937:     ff ff                                              |..              |
; function: function_f939 at 0xf939 -- 0xf948
0xf939:     ff 8b 54 24 24 3b                  	dec dword ptr [ebx + 0x3b242454]
0xf93f:     50                                 	push eax
0xf940:     10 74 35 0f                        	adc byte ptr [ebp + esi + 0xf], dh
0xf944:     9c                                 	pushfd 
0xf945:     c2 84 d2                           	ret 0xd284
; function: function_f948 at 0xf948 -- 0xf975
0xf948:     0f 84 f9 fe ff ff                  	je 0xf847
0xf94e:     8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0xf951:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xf955:     85 d2                              	test edx, edx
0xf957:     74 62                              	je 0xf9bb <function_f9bb>
0xf959:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xf95d:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xf961:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0xf965:     89 34 24                           	mov dword ptr [esp], esi
0xf968:     e8 83 f2 00 00                     	call 0x1ebf0 <unknown_1ebf0>
0xf96d:     83 ec 04                           	sub esp, 4
0xf970:     e9 91 fe ff ff                     	jmp 0xf806
; data inside code section at 0xf975 -- 0xf978
0xf975:     8d 76 00                                           |.v.             |
; function: function_f978 at 0xf978 -- 0xf998
0xf978:     83 fa 01                           	cmp edx, 1
0xf97b:     0f 85 c6 fe ff ff                  	jne 0xf847
0xf981:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xf985:     74 77                              	je 0xf9fe <function_f9fe>
0xf987:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xf98b:     74 6c                              	je 0xf9f9 <function_f9f9>
0xf98d:     8b 50 18                           	mov edx, dword ptr [eax + 0x18]
0xf990:     39 55 08                           	cmp dword ptr [ebp + 8], edx
0xf993:     0f 9c c2                           	setl dl
0xf996:     eb ae                              	jmp 0xf946
; function: function_f998 at 0xf998 -- 0xf9bb
0xf998:     83 fa 01                           	cmp edx, 1
0xf99b:     0f 85 a6 fe ff ff                  	jne 0xf847
0xf9a1:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xf9a5:     74 57                              	je 0xf9fe <function_f9fe>
0xf9a7:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xf9ab:     74 4c                              	je 0xf9f9 <function_f9f9>
0xf9ad:     8b 55 08                           	mov edx, dword ptr [ebp + 8]
0xf9b0:     39 50 18                           	cmp dword ptr [eax + 0x18], edx
0xf9b3:     0f 9c c2                           	setl dl
0xf9b6:     e9 e7 fe ff ff                     	jmp 0xf8a2
; function: function_f9bb at 0xf9bb -- 0xf9c4
0xf9bb:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xf9bf:     e9 ea fe ff ff                     	jmp 0xf8ae
; function: function_f9c4 at 0xf9c4 -- 0xf9d1
0xf9c4:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0xf9c8:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xf9cc:     e9 dd fe ff ff                     	jmp 0xf8ae
; function: function_f9d1 at 0xf9d1 -- 0xf9d2
; dynamically linked function: __stack_chk_fail at 0xf9d2 -- 0xf9d3
; data inside code section at 0xf9d3 -- 0xf9d6
0xf9d3:     ff ff ff                                           |...             |
; function: function_f9d6 at 0xf9d6 -- 0xf9f9
0xf9d6:     83 fa 01                           	cmp edx, 1
0xf9d9:     0f 85 56 fe ff ff                  	jne 0xf835
0xf9df:     80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0xf9e3:     74 19                              	je 0xf9fe <function_f9fe>
0xf9e5:     80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0xf9e9:     74 0e                              	je 0xf9f9 <function_f9f9>
0xf9eb:     8b 4d 08                           	mov ecx, dword ptr [ebp + 8]
0xf9ee:     39 4b 18                           	cmp dword ptr [ebx + 0x18], ecx
0xf9f1:     0f 9c c0                           	setl al
0xf9f4:     e9 24 ff ff ff                     	jmp 0xf91d
; function: function_f9f9 at 0xf9f9 -- 0xf9fe
0xf9f9:     e8 d0 37 00 00                     	call 0x131ce
; function: function_f9fe at 0xf9fe -- 0xfa1d
0xf9fe:     c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0xfa06:     c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0xfa0e:     c7 44 24 04 98 33 00 00            	mov dword ptr [esp + 4], 0x3398 ; "/usr/include/boost/optional/optional.hpp"
0xfa16:     c7 04 24 a3 1f 00 00               	mov dword ptr [esp], 0x1fa3 ; "this->is_initialized()"
; data inside code section at 0xfa1d -- 0xfa1e
0xfa1d:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xfa1e -- 0xfa1f
; data inside code section at 0xfa1f -- 0xfa22
0xfa1f:     ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEj
; function: _ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEj at 0xfa30 -- 0xfb20
0xfa30:     55                                 	push ebp
0xfa31:     57                                 	push edi
0xfa32:     56                                 	push esi
0xfa33:     53                                 	push ebx
0xfa34:     83 ec 6c                           	sub esp, 0x6c
0xfa37:     8b ac 24 80 00 00 00               	mov ebp, dword ptr [esp + 0x80]
0xfa3e:     8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
0xfa45:     65 8b 35 14 00 00 00               	mov esi, dword ptr gs:[0x14]
0xfa4c:     89 74 24 5c                        	mov dword ptr [esp + 0x5c], esi
0xfa50:     31 f6                              	xor esi, esi
0xfa52:     8b 94 24 88 00 00 00               	mov edx, dword ptr [esp + 0x88]
0xfa59:     8b 45 04                           	mov eax, dword ptr [ebp + 4]
0xfa5c:     89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0xfa60:     0f b6 9c 24 84 00 00 00            	movzx ebx, byte ptr [esp + 0x84]
0xfa68:     85 c0                              	test eax, eax
0xfa6a:     88 5c 24 26                        	mov byte ptr [esp + 0x26], bl
0xfa6e:     0f 84 88 05 00 00                  	je 0xfffc <function_fffc>
0xfa74:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xfa77:     83 f8 01                           	cmp eax, 1
0xfa7a:     0f 85 7c 05 00 00                  	jne 0xfffc <function_fffc>
0xfa80:     8b 45 00                           	mov eax, dword ptr [ebp]
0xfa83:     8b 1a                              	mov ebx, dword ptr [edx]
0xfa85:     85 c0                              	test eax, eax
0xfa87:     0f 84 65 05 00 00                  	je 0xfff2 <function_fff2>
0xfa8d:     8b 00                              	mov eax, dword ptr [eax]
0xfa8f:     85 c0                              	test eax, eax
0xfa91:     0f 84 60 05 00 00                  	je 0xfff7 <function_fff7>
0xfa97:     39 c3                              	cmp ebx, eax
0xfa99:     0f 84 89 00 00 00                  	je 0xfb28 <function_fb28>
0xfa9f:     8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0xfaa3:     85 f6                              	test esi, esi
0xfaa5:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xfaa8:     0f 94 44 24 27                     	sete byte ptr [esp + 0x27]
0xfaad:     85 f6                              	test esi, esi
0xfaaf:     0f 84 29 01 00 00                  	je 0xfbde <function_fbde>
0xfab5:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0xfabd:     8b 06                              	mov eax, dword ptr [esi]
0xfabf:     89 34 24                           	mov dword ptr [esp], esi
0xfac2:     ff 50 0c                           	call dword ptr [eax + 0xc]
0xfac5:     8b 7b 08                           	mov edi, dword ptr [ebx + 8]
0xfac8:     80 7c 24 26 00                     	cmp byte ptr [esp + 0x26], 0
0xfacd:     0f 84 ad 00 00 00                  	je 0xfb80 <function_fb80>
0xfad3:     85 ff                              	test edi, edi
0xfad5:     0f 84 fe 02 00 00                  	je 0xfdd9 <function_fdd9>
0xfadb:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xfade:     3b 47 14                           	cmp eax, dword ptr [edi + 0x14]
0xfae1:     0f 84 a1 00 00 00                  	je 0xfb88 <function_fb88>
0xfae7:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xfaeb:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xfaef:     8b 10                              	mov edx, dword ptr [eax]
0xfaf1:     89 d0                              	mov eax, edx
0xfaf3:     c1 f8 1f                           	sar eax, 0x1f
0xfaf6:     31 d0                              	xor eax, edx
0xfaf8:     83 f8 13                           	cmp eax, 0x13
0xfafb:     0f 86 07 01 00 00                  	jbe 0xfc08 <function_fc08>
0xfb01:     c7 44 24 0c 10 61 00 00            	mov dword ptr [esp + 0xc], 0x6110 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0xfb09:     c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0xfb11:     c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xfb19:     c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0xfb20 -- 0xfb21
0xfb20:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xfb21 -- 0xfb22
; data inside code section at 0xfb22 -- 0xfb28
0xfb22:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_fb28 at 0xfb28 -- 0xfb44
0xfb28:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0xfb2c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xfb33:     89 5d 08                           	mov dword ptr [ebp + 8], ebx
0xfb36:     0f 85 e4 04 00 00                  	jne 0x10020 <function_10020>
0xfb3c:     83 c4 6c                           	add esp, 0x6c
0xfb3f:     5b                                 	pop ebx
0xfb40:     5e                                 	pop esi
0xfb41:     5f                                 	pop edi
0xfb42:     5d                                 	pop ebp
0xfb43:     c3                                 	ret 
; data inside code section at 0xfb44 -- 0xfb5b
0xfb44:     85 d2 0f 88 f5 03 00 00  8b 54 24 14 8b 42 08 85   |.........T$..B..|
0xfb54:     c0 0f 84 f8 03 00 00                               |.......         |
; function: function_fb5b at 0xfb5b -- 0xfb5c
; data inside code section at 0xfb5c -- 0xfb63
0xfb5c:     40 04 85 c0 0f 94 c0                               |@......         |
; function: function_fb63 at 0xfb63 -- 0xfb64
; data inside code section at 0xfb64 -- 0xfb7d
0xfb64:     c0 0f 85 e8 03 00 00 83  44 24 14 0c 8b 44 24 14   |........D$...D$.|
0xfb74:     3b 47 14 0f 85 6e ff ff  ff                        |;G...n...       |
; function: function_fb7d at 0xfb7d -- 0xfb7e
; data inside code section at 0xfb7e -- 0xfb80
0xfb7e:     7b 08                                              |{.              |
; function: function_fb80 at 0xfb80 -- 0xfb88
0xfb80:     85 ff                              	test edi, edi
0xfb82:     0f 84 51 02 00 00                  	je 0xfdd9
; function: function_fb88 at 0xfb88 -- 0xfbde
0xfb88:     0f b6 7f 04                        	movzx edi, byte ptr [edi + 4]
0xfb8c:     8b 06                              	mov eax, dword ptr [esi]
0xfb8e:     89 34 24                           	mov dword ptr [esp], esi
0xfb91:     ff 50 10                           	call dword ptr [eax + 0x10]
0xfb94:     89 fa                              	mov edx, edi
0xfb96:     84 d2                              	test dl, dl
0xfb98:     74 7e                              	je 0xfc18 <function_fc18>
0xfb9a:     8b 1b                              	mov ebx, dword ptr [ebx]
0xfb9c:     8b 45 00                           	mov eax, dword ptr [ebp]
0xfb9f:     85 c0                              	test eax, eax
0xfba1:     0f 84 4b 04 00 00                  	je 0xfff2 <function_fff2>
0xfba7:     8b 00                              	mov eax, dword ptr [eax]
0xfba9:     85 c0                              	test eax, eax
0xfbab:     0f 84 46 04 00 00                  	je 0xfff7 <function_fff7>
0xfbb1:     39 d8                              	cmp eax, ebx
0xfbb3:     0f 84 6f ff ff ff                  	je 0xfb28 <function_fb28>
0xfbb9:     83 44 24 18 01                     	add dword ptr [esp + 0x18], 1
0xfbbe:     8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0xfbc2:     39 74 24 1c                        	cmp dword ptr [esp + 0x1c], esi
0xfbc6:     77 0b                              	ja 0xfbd3 <function_fb88+0x4b>
0xfbc8:     80 7c 24 27 00                     	cmp byte ptr [esp + 0x27], 0
0xfbcd:     0f 84 55 ff ff ff                  	je 0xfb28 <function_fb28>
0xfbd3:     8b 73 08                           	mov esi, dword ptr [ebx + 8]
0xfbd6:     85 f6                              	test esi, esi
0xfbd8:     0f 85 df fe ff ff                  	jne 0xfabd
; function: function_fbde at 0xfbde -- 0xfbfd
0xfbde:     c7 44 24 0c d0 5c 00 00            	mov dword ptr [esp + 0xc], 0x5cd0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>&]"
0xfbe6:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xfbee:     c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xfbf6:     c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0xfbfd -- 0xfbfe
0xfbfd:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xfbfe -- 0xfbff
; data inside code section at 0xfbff -- 0xfc08
0xfbff:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_fc08 at 0xfc08 -- 0xfc0f
0xfc08:     ff 24 85 a8 00 01 00               	jmp dword ptr [eax*4 + 0x100a8]
; data inside code section at 0xfc0f -- 0xfc18
0xfc0f:     90 e8 db fe ff ff 8d 76  00                        |.......v.       |
; function: function_fc18 at 0xfc18 -- 0xfce2
0xfc18:     8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0xfc1b:     85 c9                              	test ecx, ecx
0xfc1d:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xfc21:     0f 84 b2 01 00 00                  	je 0xfdd9 <function_fdd9>
0xfc27:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0xfc2b:     8b 45 00                           	mov eax, dword ptr [ebp]
0xfc2e:     83 c6 44                           	add esi, 0x44
0xfc31:     85 c0                              	test eax, eax
0xfc33:     89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0xfc37:     0f 84 b5 03 00 00                  	je 0xfff2 <function_fff2>
0xfc3d:     8b 00                              	mov eax, dword ptr [eax]
0xfc3f:     85 c0                              	test eax, eax
0xfc41:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xfc45:     0f 84 ac 03 00 00                  	je 0xfff7 <function_fff7>
0xfc4b:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xfc4f:     39 d3                              	cmp ebx, edx
0xfc51:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xfc55:     0f 84 29 04 00 00                  	je 0x10084 <function_10084>
0xfc5b:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xfc5f:     8b 71 10                           	mov esi, dword ptr [ecx + 0x10]
0xfc62:     85 f6                              	test esi, esi
0xfc64:     0f 84 f6 03 00 00                  	je 0x10060 <function_10060>
0xfc6a:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xfc6e:     83 c1 0c                           	add ecx, 0xc
0xfc71:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xfc75:     89 cf                              	mov edi, ecx
0xfc77:     8b 50 44                           	mov edx, dword ptr [eax + 0x44]
0xfc7a:     89 f0                              	mov eax, esi
0xfc7c:     eb 12                              	jmp 0xfc90 <function_fc18+0x78>
; data inside code section at 0xfc7e -- 0xfc80
0xfc7e:     66 90                                              |f.              |
0xfc80:     39 d1                              	cmp ecx, edx
0xfc82:     0f 9c c1                           	setl cl
0xfc85:     84 c9                              	test cl, cl
0xfc87:     74 13                              	je 0xfc9c <function_fc18+0x84>
0xfc89:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xfc8c:     85 c0                              	test eax, eax
0xfc8e:     74 15                              	je 0xfca5 <function_fc18+0x8d>
0xfc90:     8b 48 10                           	mov ecx, dword ptr [eax + 0x10]
0xfc93:     39 ca                              	cmp edx, ecx
0xfc95:     75 e9                              	jne 0xfc80 <function_fc18+0x68>
0xfc97:     83 fa 01                           	cmp edx, 1
0xfc9a:     74 4c                              	je 0xfce8 <function_fce8>
0xfc9c:     89 c7                              	mov edi, eax
0xfc9e:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xfca1:     85 c0                              	test eax, eax
0xfca3:     75 eb                              	jne 0xfc90 <function_fc18+0x78>
0xfca5:     39 7c 24 2c                        	cmp dword ptr [esp + 0x2c], edi
0xfca9:     0f 84 b1 03 00 00                  	je 0x10060 <function_10060>
0xfcaf:     8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0xfcb2:     39 d0                              	cmp eax, edx
0xfcb4:     0f 9c c1                           	setl cl
0xfcb7:     39 c2                              	cmp edx, eax
0xfcb9:     74 5d                              	je 0xfd18 <function_fd18>
0xfcbb:     84 c9                              	test cl, cl
0xfcbd:     0f 84 6e 02 00 00                  	je 0xff31 <function_ff31>
0xfcc3:     c7 44 24 0c 50 65 00 00            	mov dword ptr [esp + 0xc], 0x6550 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0xfccb:     c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0xfcd3:     c7 44 24 04 f8 36 00 00            	mov dword ptr [esp + 4], 0x36f8 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xfcdb:     c7 04 24 2c 37 00 00               	mov dword ptr [esp], 0x372c ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0xfce2 -- 0xfce3
0xfce2:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xfce3 -- 0xfce4
; data inside code section at 0xfce4 -- 0xfce8
0xfce4:     ff ff ff 90                                        |....            |
; function: function_fce8 at 0xfce8 -- 0xfd12
0xfce8:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xfcec:     80 79 04 00                        	cmp byte ptr [ecx + 4], 0
0xfcf0:     0f 84 2f 03 00 00                  	je 0x10025 <function_10025>
0xfcf6:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xfcfa:     0f 84 49 03 00 00                  	je 0x10049 <function_10049>
0xfd00:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xfd04:     8b 49 08                           	mov ecx, dword ptr [ecx + 8]
0xfd07:     39 48 18                           	cmp dword ptr [eax + 0x18], ecx
0xfd0a:     0f 9c c1                           	setl cl
0xfd0d:     e9 73 ff ff ff                     	jmp 0xfc85
; data inside code section at 0xfd12 -- 0xfd18
0xfd12:     8d b6 00 00 00 00                                  |......          |
; function: function_fd18 at 0xfd18 -- 0xfd30
0xfd18:     83 fa 01                           	cmp edx, 1
0xfd1b:     0f 84 e7 00 00 00                  	je 0xfe08 <function_fe08>
0xfd21:     83 f8 01                           	cmp eax, 1
0xfd24:     74 4d                              	je 0xfd73 <function_fd73>
0xfd26:     3b 5f 1c                           	cmp ebx, dword ptr [edi + 0x1c]
0xfd29:     74 77                              	je 0xfda2 <function_fda2>
0xfd2b:     8b 33                              	mov esi, dword ptr [ebx]
0xfd2d:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfd30 -- 0xfd31
0xfd30:     e8                                                 |.               |
; dynamically linked function: _ZNSt8__detail15_List_node_base9_M_unhookEv at 0xfd31 -- 0xfd32
; data inside code section at 0xfd32 -- 0xfd46
0xfd32:     ff ff ff 8d 43 0c 89 04  24 e8 d0 46 00 00 89 1c   |....C...$..F....|
0xfd42:     24 89 f3 e8                                        |$...            |
; dynamically linked function: _ZdlPv at 0xfd46 -- 0xfd47
; data inside code section at 0xfd47 -- 0xfd4a
0xfd47:     ff ff ff                                           |...             |
; function: function_fd4a at 0xfd4a -- 0xfd4f
0xfd4a:     e9 4d fe ff ff                     	jmp 0xfb9c
; function: function_fd4f at 0xfd4f -- 0xfd73
0xfd4f:     85 d2                              	test edx, edx
0xfd51:     0f 88 05 02 00 00                  	js 0xff5c <function_ff5c>
0xfd57:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xfd5b:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xfd5e:     85 c0                              	test eax, eax
0xfd60:     0f 84 07 02 00 00                  	je 0xff6d <function_ff6d>
0xfd66:     8b 10                              	mov edx, dword ptr [eax]
0xfd68:     89 04 24                           	mov dword ptr [esp], eax
0xfd6b:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xfd6e:     e9 f0 fd ff ff                     	jmp 0xfb63 <function_fb63>
; function: function_fd73 at 0xfd73 -- 0xfda2
0xfd73:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xfd77:     0f 84 a8 02 00 00                  	je 0x10025 <function_10025>
0xfd7d:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xfd81:     80 78 48 00                        	cmp byte ptr [eax + 0x48], 0
0xfd85:     0f 84 be 02 00 00                  	je 0x10049 <function_10049>
0xfd8b:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xfd8f:     8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0xfd92:     39 41 4c                           	cmp dword ptr [ecx + 0x4c], eax
0xfd95:     0f 9c c0                           	setl al
0xfd98:     84 c0                              	test al, al
0xfd9a:     0f 85 23 ff ff ff                  	jne 0xfcc3
0xfda0:     eb 84                              	jmp 0xfd26
; function: function_fda2 at 0xfda2 -- 0xfdd9
0xfda2:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xfda6:     8b 0b                              	mov ecx, dword ptr [ebx]
0xfda8:     89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0xfdac:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xfdb0:     89 f0                              	mov eax, esi
0xfdb2:     89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0xfdb6:     eb 12                              	jmp 0xfdca <function_fda2+0x28>
0xfdb8:     0f 9c c1                           	setl cl
0xfdbb:     84 c9                              	test cl, cl
0xfdbd:     74 15                              	je 0xfdd4 <function_fda2+0x32>
0xfdbf:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xfdc3:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xfdc6:     85 c0                              	test eax, eax
0xfdc8:     74 6e                              	je 0xfe38 <function_fe38>
0xfdca:     3b 50 10                           	cmp edx, dword ptr [eax + 0x10]
0xfdcd:     75 e9                              	jne 0xfdb8 <function_fda2+0x16>
0xfdcf:     83 fa 01                           	cmp edx, 1
0xfdd2:     74 0c                              	je 0xfde0 <function_fde0>
0xfdd4:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xfdd7:     eb ed                              	jmp 0xfdc6 <function_fda2+0x24>
; function: function_fdd9 at 0xfdd9 -- 0xfde0
0xfdd9:     e8 f0 35 00 00                     	call 0x133ce <function_133ce>
0xfdde:     66 90                              	nop 
; function: function_fde0 at 0xfde0 -- 0xfe07
0xfde0:     80 78 14 00                        	cmp byte ptr [eax + 0x14], 0
0xfde4:     0f 84 3b 02 00 00                  	je 0x10025 <function_10025>
0xfdea:     8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0xfdee:     80 79 04 00                        	cmp byte ptr [ecx + 4], 0
0xfdf2:     0f 84 51 02 00 00                  	je 0x10049 <function_10049>
0xfdf8:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xfdfc:     8b 48 18                           	mov ecx, dword ptr [eax + 0x18]
0xfdff:     39 4b 08                           	cmp dword ptr [ebx + 8], ecx
0xfe02:     0f 9c c1                           	setl cl
0xfe05:     eb b4                              	jmp 0xfdbb
; data inside code section at 0xfe07 -- 0xfe08
0xfe07:     90                                                 |.               |
; function: function_fe08 at 0xfe08 -- 0xfe32
0xfe08:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xfe0c:     80 79 48 00                        	cmp byte ptr [ecx + 0x48], 0
0xfe10:     0f 84 0f 02 00 00                  	je 0x10025 <function_10025>
0xfe16:     80 7f 14 00                        	cmp byte ptr [edi + 0x14], 0
0xfe1a:     0f 84 29 02 00 00                  	je 0x10049 <function_10049>
0xfe20:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xfe24:     8b 49 4c                           	mov ecx, dword ptr [ecx + 0x4c]
0xfe27:     39 4f 18                           	cmp dword ptr [edi + 0x18], ecx
0xfe2a:     0f 9c c1                           	setl cl
0xfe2d:     e9 89 fe ff ff                     	jmp 0xfcbb
; data inside code section at 0xfe32 -- 0xfe38
0xfe32:     8d b6 00 00 00 00                                  |......          |
; function: function_fe38 at 0xfe38 -- 0xff31
0xfe38:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xfe3c:     39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0xfe40:     8b 5c 24 10                        	mov ebx, dword ptr [esp + 0x10]
0xfe44:     74 0b                              	je 0xfe51 <function_fe38+0x19>
0xfe46:     8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0xfe4a:     8b 49 1c                           	mov ecx, dword ptr [ecx + 0x1c]
0xfe4d:     89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0xfe51:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xfe55:     39 44 24 38                        	cmp dword ptr [esp + 0x38], eax
0xfe59:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0xfe5d:     0f 84 64 01 00 00                  	je 0xffc7 <function_ffc7>
0xfe63:     8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0xfe67:     eb 17                              	jmp 0xfe80 <function_fe38+0x48>
; data inside code section at 0xfe69 -- 0xfe70
0xfe69:     8d b4 26 00 00 00 00                               |..&....         |
0xfe70:     39 d0                              	cmp eax, edx
0xfe72:     0f 9c c0                           	setl al
0xfe75:     84 c0                              	test al, al
0xfe77:     74 13                              	je 0xfe8c <function_fe38+0x54>
0xfe79:     8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0xfe7c:     85 f6                              	test esi, esi
0xfe7e:     74 38                              	je 0xfeb8 <function_fe38+0x80>
0xfe80:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xfe83:     39 c2                              	cmp edx, eax
0xfe85:     75 e9                              	jne 0xfe70 <function_fe38+0x38>
0xfe87:     83 fa 01                           	cmp edx, 1
0xfe8a:     74 0c                              	je 0xfe98 <function_fe38+0x60>
0xfe8c:     89 f1                              	mov ecx, esi
0xfe8e:     8b 76 08                           	mov esi, dword ptr [esi + 8]
0xfe91:     eb e9                              	jmp 0xfe7c <function_fe38+0x44>
; data inside code section at 0xfe93 -- 0xfe98
0xfe93:     90 8d 74 26 00                                     |..t&.           |
0xfe98:     80 7f 04 00                        	cmp byte ptr [edi + 4], 0
0xfe9c:     0f 84 83 01 00 00                  	je 0x10025 <function_10025>
0xfea2:     80 7e 14 00                        	cmp byte ptr [esi + 0x14], 0
0xfea6:     0f 84 9d 01 00 00                  	je 0x10049 <function_10049>
0xfeac:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0xfeaf:     39 46 18                           	cmp dword ptr [esi + 0x18], eax
0xfeb2:     0f 9c c0                           	setl al
0xfeb5:     eb be                              	jmp 0xfe75 <function_fe38+0x3d>
; data inside code section at 0xfeb7 -- 0xfeb8
0xfeb7:     90                                                 |.               |
0xfeb8:     3b 4c 24 2c                        	cmp ecx, dword ptr [esp + 0x2c]
0xfebc:     74 14                              	je 0xfed2 <function_fe38+0x9a>
0xfebe:     3b 51 10                           	cmp edx, dword ptr [ecx + 0x10]
0xfec1:     0f 84 d1 00 00 00                  	je 0xff98 <function_ff98>
0xfec7:     0f 9c c0                           	setl al
0xfeca:     84 c0                              	test al, al
0xfecc:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0xfed0:     74 53                              	je 0xff25 <function_fe38+0xed>
0xfed2:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xfed6:     89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0xfeda:     c6 44 24 50 00                     	mov byte ptr [esp + 0x50], 0
0xfedf:     80 78 48 00                        	cmp byte ptr [eax + 0x48], 0
0xfee3:     74 0c                              	je 0xfef1 <function_fe38+0xb9>
0xfee5:     8b 40 4c                           	mov eax, dword ptr [eax + 0x4c]
0xfee8:     c6 44 24 50 01                     	mov byte ptr [esp + 0x50], 1
0xfeed:     89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0xfef1:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xfef5:     8d 74 24 4c                        	lea esi, [esp + 0x4c]
0xfef9:     89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0xfefd:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0xff01:     c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0xff09:     83 c0 08                           	add eax, 8
0xff0c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xff10:     8d 44 24 3c                        	lea eax, [esp + 0x3c]
0xff14:     89 04 24                           	mov dword ptr [esp], eax
0xff17:     e8 74 f2 00 00                     	call 0x1f190 <unknown_1f190>
0xff1c:     8b 33                              	mov esi, dword ptr [ebx]
0xff1e:     83 ec 04                           	sub esp, 4
0xff21:     8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0xff25:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xff29:     89 51 1c                           	mov dword ptr [ecx + 0x1c], edx
0xff2c:     e9 fc fd ff ff                     	jmp 0xfd2d
; function: function_ff31 at 0xff31 -- 0xff41
0xff31:     39 c2                              	cmp edx, eax
0xff33:     0f 84 e8 fd ff ff                  	je 0xfd21
0xff39:     0f 9c c0                           	setl al
0xff3c:     e9 57 fe ff ff                     	jmp 0xfd98
; function: function_ff41 at 0xff41 -- 0xff5c
0xff41:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xff45:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xff48:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0xff4b:     85 c0                              	test eax, eax
0xff4d:     0f 85 08 fc ff ff                  	jne 0xfb5b <function_fb5b>
0xff53:     c6 47 04 00                        	mov byte ptr [edi + 4], 0
0xff57:     e9 21 fc ff ff                     	jmp 0xfb7d <function_fb7d>
; function: function_ff5c at 0xff5c -- 0xff6d
0xff5c:     8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0xff60:     8b 41 04                           	mov eax, dword ptr [ecx + 4]
0xff63:     8b 00                              	mov eax, dword ptr [eax]
0xff65:     85 c0                              	test eax, eax
0xff67:     0f 85 f9 fd ff ff                  	jne 0xfd66
; function: function_ff6d at 0xff6d -- 0xff8c
0xff6d:     c7 44 24 0c 90 60 00 00            	mov dword ptr [esp + 0xc], 0x6090 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0xff75:     c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0xff7d:     c7 44 24 04 cc 36 00 00            	mov dword ptr [esp + 4], 0x36cc ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xff85:     c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0xff8c -- 0xff8d
0xff8c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xff8d -- 0xff8e
; data inside code section at 0xff8e -- 0xff98
0xff8e:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_ff98 at 0xff98 -- 0xffc7
0xff98:     83 fa 01                           	cmp edx, 1
0xff9b:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0xff9f:     75 84                              	jne 0xff25
0xffa1:     80 79 14 00                        	cmp byte ptr [ecx + 0x14], 0
0xffa5:     74 7e                              	je 0x10025 <function_10025>
0xffa7:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0xffab:     80 7e 48 00                        	cmp byte ptr [esi + 0x48], 0
0xffaf:     0f 84 94 00 00 00                  	je 0x10049 <function_10049>
0xffb5:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0xffb9:     8b 71 18                           	mov esi, dword ptr [ecx + 0x18]
0xffbc:     39 70 4c                           	cmp dword ptr [eax + 0x4c], esi
0xffbf:     0f 9c c0                           	setl al
0xffc2:     e9 03 ff ff ff                     	jmp 0xfeca
; function: function_ffc7 at 0xffc7 -- 0xffce
0xffc7:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0xffcb:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xffce -- 0xffcf
0xffce:     e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0xffcf -- 0xffd0
; data inside code section at 0xffd0 -- 0xffe1
0xffd0:     ff ff ff 80 78 14 00 74  04 c6 40 14 00 89 04 24   |....x..t..@....$|
0xffe0:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xffe1 -- 0xffe2
; data inside code section at 0xffe2 -- 0xffe4
0xffe2:     ff ff                                              |..              |
; function: function_ffe4 at 0xffe4 -- 0xfff2
0xffe4:     ff 8b 74 24 14 83                  	dec dword ptr [ebx - 0x7cebdb8c]
0xffea:     6e                                 	outsb dx, byte ptr [esi]
0xffeb:     1c 01                              	sbb al, 1
0xffed:     e9 39 fd ff ff                     	jmp 0xfd2b
; function: function_fff2 at 0xfff2 -- 0xfff7
0xfff2:     e8 6f 33 00 00                     	call 0x13366 <function_13366>
; function: function_fff7 at 0xfff7 -- 0xfffc
0xfff7:     e8 9e 33 00 00                     	call 0x1339a <function_1339a>
; function: function_fffc at 0xfffc -- 0x10020
0xfffc:     c7 44 24 0c 30 58 00 00            	mov dword ptr [esp + 0xc], 0x5830 ; "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = const uint256&, T2 = ChangeType, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(const uint256&, ChangeType)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >]"
0x10004:    c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0x1000c:    c7 44 24 04 94 36 00 00            	mov dword ptr [esp + 4], 0x3694 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x10014:    c7 04 24 a8 20 00 00               	mov dword ptr [esp], 0x20a8 ; "_shared_state.unique()"
0x1001b:    e8 fc ff ff ff                     	call 0x1001c
; function: function_10020 at 0x10020 -- 0x10021
; dynamically linked function: __stack_chk_fail at 0x10021 -- 0x10022
; data inside code section at 0x10022 -- 0x10025
0x10022:    ff ff ff                                           |...             |
; function: function_10025 at 0x10025 -- 0x1002d
0x10025:    c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
; data inside code section at 0x1002d -- 0x10030
0x1002d:    c7 44 24                                           |.D$             |
; function: function_10030 at 0x10030 -- 0x10044
0x10030:    08 76 02                           	or byte ptr [esi + 2], dh
0x10033:    00 00                              	add byte ptr [eax], al
0x10035:    c7 44 24 04 98 33 00 00            	mov dword ptr [esp + 4], 0x3398 ; "/usr/include/boost/optional/optional.hpp"
0x1003d:    c7 04 24 a3 1f 00 00               	mov dword ptr [esp], 0x1fa3 ; "this->is_initialized()"
; data inside code section at 0x10044 -- 0x10045
0x10044:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x10045 -- 0x10046
; data inside code section at 0x10046 -- 0x10049
0x10046:    ff ff ff                                           |...             |
; function: function_10049 at 0x10049 -- 0x10060
0x10049:    e8 50 34 00 00                     	call 0x1349e <function_1349e>
0x1004e:    89 c3                              	mov ebx, eax
0x10050:    8b 06                              	mov eax, dword ptr [esi]
0x10052:    89 34 24                           	mov dword ptr [esp], esi
0x10055:    ff 50 10                           	call dword ptr [eax + 0x10]
0x10058:    89 1c 24                           	mov dword ptr [esp], ebx
0x1005b:    e8 fc ff ff ff                     	call 0x1005c
; function: function_10060 at 0x10060 -- 0x10084
0x10060:    c7 44 24 0c 50 65 00 00            	mov dword ptr [esp + 0xc], 0x6550 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x10068:    c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0x10070:    c7 44 24 04 f8 36 00 00            	mov dword ptr [esp + 4], 0x36f8 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x10078:    c7 04 24 d1 20 00 00               	mov dword ptr [esp], 0x20d1 ; "map_it != _group_map.end()"
0x1007f:    e8 fc ff ff ff                     	call 0x10080
; function: function_10084 at 0x10084 -- 0x100a8
0x10084:    c7 44 24 0c 50 65 00 00            	mov dword ptr [esp + 0xc], 0x6550 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x1008c:    c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0x10094:    c7 44 24 04 f8 36 00 00            	mov dword ptr [esp + 4], 0x36f8 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x1009c:    c7 04 24 bf 20 00 00               	mov dword ptr [esp], 0x20bf ; "it != _list.end()"
0x100a3:    e8 fc ff ff ff                     	call 0x100a4
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE7_M_copyEPKSt13_Rb_tree_nodeISP_EPSZ_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE7_M_copyEPKSt13_Rb_tree_nodeISP_EPSZ_ at 0x10100 -- 0x10126
0x10100:    55                                 	push ebp
0x10101:    57                                 	push edi
0x10102:    56                                 	push esi
0x10103:    53                                 	push ebx
0x10104:    83 ec 3c                           	sub esp, 0x3c
0x10107:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1010d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x10111:    31 c0                              	xor eax, eax
0x10113:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x10117:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1011b:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1011f:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x10126 -- 0x10127
0x10126:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x10127 -- 0x10128
; data inside code section at 0x10128 -- 0x1012a
0x10128:    ff ff                                              |..              |
; function: function_1012a at 0x1012a -- 0x101a9
0x1012a:    ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0x10130:    24 1c                              	and al, 0x1c
0x10132:    74 22                              	je 0x10156 <function_1012a+0x2c>
0x10134:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x10137:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1013b:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x1013e:    c6 42 14 00                        	mov byte ptr [edx + 0x14], 0
0x10142:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x10146:    0f 85 dc 00 00 00                  	jne 0x10228 <function_10228>
0x1014c:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x1014f:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x10153:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x10156:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1015a:    8b 03                              	mov eax, dword ptr [ebx]
0x1015c:    c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0x10163:    89 02                              	mov dword ptr [edx], eax
0x10165:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10168:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x1016f:    89 72 04                           	mov dword ptr [edx + 4], esi
0x10172:    85 c0                              	test eax, eax
0x10174:    74 17                              	je 0x1018d <function_1012a+0x63>
0x10176:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1017a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1017e:    89 2c 24                           	mov dword ptr [esp], ebp
0x10181:    e8 7a 00 01 00                     	call 0x20200 <unknown_20200>
0x10186:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1018a:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x1018d:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x10190:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x10194:    85 f6                              	test esi, esi
0x10196:    75 0a                              	jne 0x101a2 <function_1012a+0x78>
0x10198:    eb 74                              	jmp 0x1020e <function_1020e>
; data inside code section at 0x1019a -- 0x101a0
0x1019a:    8d b6 00 00 00 00                                  |......          |
0x101a0:    89 df                              	mov edi, ebx
0x101a2:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x101a9 -- 0x101aa
0x101a9:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x101aa -- 0x101ab
; data inside code section at 0x101ab -- 0x101b2
0x101ab:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_101b2 at 0x101b2 -- 0x101b3
0x101b2:    c3                                 	ret 
; data inside code section at 0x101b3 -- 0x1020e
0x101b3:    74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0x101c3:    74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0x101d3:    43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0x101e3:    00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0x101f3:    13 89 5c 24 08 89 44 24  04 89 2c 24 e8 fc ff 00   |..\$..D$..,$....|
0x10203:    00 89 43 0c 8b 76 08 85  f6 75 92                  |..C..v...u.     |
; function: function_1020e at 0x1020e -- 0x10227
0x1020e:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x10212:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10219:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1021d:    75 18                              	jne 0x10237 <function_10237>
0x1021f:    83 c4 3c                           	add esp, 0x3c
0x10222:    5b                                 	pop ebx
0x10223:    5e                                 	pop esi
0x10224:    5f                                 	pop edi
0x10225:    5d                                 	pop ebp
0x10226:    c3                                 	ret 
; data inside code section at 0x10227 -- 0x10228
0x10227:    90                                                 |.               |
; function: function_10228 at 0x10228 -- 0x10237
0x10228:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x1022b:    c6 42 14 01                        	mov byte ptr [edx + 0x14], 1
0x1022f:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x10232:    e9 15 ff ff ff                     	jmp 0x1014c
; function: function_10237 at 0x10237 -- 0x10254
0x10237:    e8 fc ff ff ff                     	call 0x10238
0x1023c:    89 04 24                           	mov dword ptr [esp], eax
0x1023f:    e8 fc ff ff ff                     	call 0x10240
0x10244:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10248:    89 2c 24                           	mov dword ptr [esp], ebp
0x1024b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1024f:    e8 2c f1 00 00                     	call 0x1f380 <unknown_1f380>
; data inside code section at 0x10254 -- 0x10255
0x10254:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x10255 -- 0x10256
; data inside code section at 0x10256 -- 0x1025a
0x10256:    ff ff ff 89                                        |....            |
; function: function_1025a at 0x1025a -- 0x1025b
0x1025a:    c3                                 	ret 
; data inside code section at 0x1025b -- 0x10268
0x1025b:    e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_stateC2ERKSL_RKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE
; function: _ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_stateC1ERKSL_RKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE at 0x10270 -- 0x102a2
0x10270:    55                                 	push ebp
0x10271:    57                                 	push edi
0x10272:    56                                 	push esi
0x10273:    53                                 	push ebx
0x10274:    83 ec 4c                           	sub esp, 0x4c
0x10277:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x1027b:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x1027f:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x10283:    c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
0x1028a:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1028e:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x10292:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10298:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1029c:    31 c0                              	xor eax, eax
0x1029e:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
; data inside code section at 0x102a2 -- 0x102a3
0x102a2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x102a3 -- 0x102a4
; data inside code section at 0x102a4 -- 0x102ed
0x102a4:    ff ff ff 8b 54 24 1c 89  00 89 40 04 8b 1a 89 44   |....T$....@....D|
0x102b4:    24 24 39 da 74 3d 89 c6  89 d7 66 90 c7 04 24 10   |$$9.t=....f...$.|
0x102c4:    00 00 00 e8 fc ff ff ff  83 f8 f8 74 14 8b 53 08   |...........t..S.|
0x102d4:    89 50 08 8b 53 0c 85 d2  89 50 0c 74 04 f0 ff 42   |.P..S....P.t...B|
0x102e4:    04 89 74 24 04 89 04 24  e8                        |..t$...$.       |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x102ed -- 0x102ee
; data inside code section at 0x102ee -- 0x102f0
0x102ee:    ff ff                                              |..              |
; function: function_102f0 at 0x102f0 -- 0x103bd
0x102f0:    ff 8b 1b 39 df 75                  	dec dword ptr [ebx + 0x75df391b]
0x102f6:    c9                                 	leave 
0x102f7:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x102fb:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x102ff:    c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0x10306:    89 c2                              	mov edx, eax
0x10308:    c7 40 10 00 00 00 00               	mov dword ptr [eax + 0x10], 0
0x1030f:    83 c2 08                           	add edx, 8
0x10312:    c7 40 1c 00 00 00 00               	mov dword ptr [eax + 0x1c], 0
0x10319:    83 c0 0c                           	add eax, 0xc
0x1031c:    89 41 14                           	mov dword ptr [ecx + 0x14], eax
0x1031f:    89 c5                              	mov ebp, eax
0x10321:    89 41 18                           	mov dword ptr [ecx + 0x18], eax
0x10324:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x10328:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1032c:    8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0x1032f:    85 c0                              	test eax, eax
0x10331:    74 4f                              	je 0x10382 <function_102f0+0x92>
0x10333:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x10337:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1033b:    89 14 24                           	mov dword ptr [esp], edx
0x1033e:    e8 2d 00 01 00                     	call 0x20370 <unknown_20370>
0x10343:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x10347:    89 c5                              	mov ebp, eax
0x10349:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x1034c:    eb 04                              	jmp 0x10352 <function_102f0+0x62>
; data inside code section at 0x1034e -- 0x10350
0x1034e:    66 90                                              |f.              |
0x10350:    89 d5                              	mov ebp, edx
0x10352:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x10355:    85 d2                              	test edx, edx
0x10357:    75 f7                              	jne 0x10350 <function_102f0+0x60>
0x10359:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x1035d:    89 69 14                           	mov dword ptr [ecx + 0x14], ebp
0x10360:    eb 08                              	jmp 0x1036a <function_102f0+0x7a>
; data inside code section at 0x10362 -- 0x10368
0x10362:    8d b6 00 00 00 00                                  |......          |
0x10368:    89 d0                              	mov eax, edx
0x1036a:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x1036d:    85 d2                              	test edx, edx
0x1036f:    75 f7                              	jne 0x10368 <function_102f0+0x78>
0x10371:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x10375:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x10379:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x1037c:    8b 41 1c                           	mov eax, dword ptr [ecx + 0x1c]
0x1037f:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x10382:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x10386:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1038a:    8b 7a 14                           	mov edi, dword ptr [edx + 0x14]
0x1038d:    83 c2 0c                           	add edx, 0xc
0x10390:    8b 30                              	mov esi, dword ptr [eax]
0x10392:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x10396:    39 d7                              	cmp edi, edx
0x10398:    74 56                              	je 0x103f0 <function_103f0>
0x1039a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x103a0:    39 6c 24 20                        	cmp dword ptr [esp + 0x20], ebp
0x103a4:    0f 84 f2 00 00 00                  	je 0x1049c <function_1049c>
0x103aa:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x103ae:    89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0x103b1:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x103b5:    74 03                              	je 0x103ba <function_102f0+0xca>
0x103b7:    8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0x103ba:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x103bd -- 0x103be
0x103bd:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x103be -- 0x103bf
; data inside code section at 0x103bf -- 0x103c2
0x103bf:    ff ff ff                                           |...             |
; function: function_103c2 at 0x103c2 -- 0x103f0
0x103c2:    89 c7                              	mov edi, eax
0x103c4:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x103c8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x103cc:    74 0e                              	je 0x103dc <function_103c2+0x1a>
0x103ce:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x103d1:    eb 09                              	jmp 0x103dc <function_103c2+0x1a>
; data inside code section at 0x103d3 -- 0x103d8
0x103d3:    90 8d 74 26 00                                     |..t&.           |
0x103d8:    8b 1b                              	mov ebx, dword ptr [ebx]
0x103da:    8b 36                              	mov esi, dword ptr [esi]
0x103dc:    39 c3                              	cmp ebx, eax
0x103de:    75 f8                              	jne 0x103d8 <function_103c2+0x16>
0x103e0:    89 2c 24                           	mov dword ptr [esp], ebp
0x103e3:    e8 fc ff ff ff                     	call 0x103e4
0x103e8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x103ec:    89 c5                              	mov ebp, eax
0x103ee:    75 b0                              	jne 0x103a0
; function: function_103f0 at 0x103f0 -- 0x10408
0x103f0:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x103f4:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x103f8:    c7 42 04 00 00 00 00               	mov dword ptr [edx + 4], 0
0x103ff:    89 02                              	mov dword ptr [edx], eax
0x10401:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10 ; "D$\fps"
; data inside code section at 0x10408 -- 0x10409
0x10408:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x10409 -- 0x1040a
; data inside code section at 0x1040a -- 0x1040c
0x1040a:    ff ff                                              |..              |
; function: function_1040c at 0x1040c -- 0x1045c
0x1040c:    ff 8b 54 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbac]
0x10412:    4c                                 	dec esp
0x10413:    24 28                              	and al, 0x28
0x10415:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x1041c:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x10423:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x10426:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1042a:    c7 00 58 49 01 00                  	mov dword ptr [eax], 0x14958
0x10430:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x10433:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x10436:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x10439:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x1043c:    85 c0                              	test eax, eax
0x1043e:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x10441:    74 04                              	je 0x10447 <function_1040c+0x3b>
0x10443:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x10447:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1044b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10452:    75 2a                              	jne 0x1047e <function_1047e>
0x10454:    83 c4 4c                           	add esp, 0x4c
0x10457:    5b                                 	pop ebx
0x10458:    5e                                 	pop esi
0x10459:    5f                                 	pop edi
0x1045a:    5d                                 	pop ebp
0x1045b:    c3                                 	ret 
; data inside code section at 0x1045c -- 0x1045d
0x1045c:    89                                                 |.               |
; function: function_1045d at 0x1045d -- 0x1045e
0x1045d:    c3                                 	ret 
; data inside code section at 0x1045e -- 0x1046a
0x1045e:    8b 44 24 24 89 04 24 e8  86 e6 00 00               |.D$$..$.....    |
; function: function_1046a at 0x1046a -- 0x10471
0x1046a:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1046e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10471 -- 0x10472
0x10471:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10472 -- 0x10473
; data inside code section at 0x10473 -- 0x1047a
0x10473:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1047a -- 0x1047b
; data inside code section at 0x1047b -- 0x1047e
0x1047b:    ff ff ff                                           |...             |
; function: function_1047e at 0x1047e -- 0x1047f
; dynamically linked function: __stack_chk_fail at 0x1047f -- 0x10480
; data inside code section at 0x10480 -- 0x10487
0x10480:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x10487 -- 0x10488
; data inside code section at 0x10488 -- 0x1049c
0x10488:    ff ff ff 8b 44 24 24 89  04 24 e8 59 f1 00 00 e8   |....D$$..$.Y....|
0x10498:    fc ff ff ff                                        |....            |
; function: function_1049c at 0x1049c -- 0x104d0
0x1049c:    c7 44 24 0c 70 83 00 00            	mov dword ptr [esp + 0xc], 0x8370 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >]"
0x104a4:    c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x104ac:    c7 44 24 04 f8 36 00 00            	mov dword ptr [esp + 4], 0x36f8 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x104b4:    c7 04 24 54 37 00 00               	mov dword ptr [esp], 0x3754 ; "this_map_it != _group_map.end()"
0x104bb:    e8 fc ff ff ff                     	call 0x104bc
0x104c0:    89 c3                              	mov ebx, eax
0x104c2:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x104c6:    89 04 24                           	mov dword ptr [esp], eax
0x104c9:    e8 22 e6 00 00                     	call 0x1eaf0 <unknown_1eaf0>
0x104ce:    eb 9a                              	jmp 0x1046a <function_1046a>
; data inside code section at 0x104d0 -- 0x104d1
0x104d0:    89                                                 |.               |
; function: function_104d1 at 0x104d1 -- 0x104d2
0x104d1:    c3                                 	ret 
; data inside code section at 0x104d2 -- 0x104d3
0x104d2:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x104d3 -- 0x104d4
; data inside code section at 0x104d4 -- 0x104db
0x104d4:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x104db -- 0x104dc
; data inside code section at 0x104dc -- 0x104df
0x104dc:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE
; function: _ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE at 0x104e0 -- 0x1050d
0x104e0:    83 ec 4c                           	sub esp, 0x4c
0x104e3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x104e7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x104eb:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x104ef:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x104f3:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x104f7:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x104fb:    8d 6b 0c                           	lea ebp, [ebx + 0xc]
0x104fe:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10504:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x10508:    31 c0                              	xor eax, eax
0x1050a:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1050d -- 0x1050e
0x1050d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x1050e -- 0x1050f
; data inside code section at 0x1050f -- 0x1052a
0x1050f:    ff ff ff 8b 33 85 f6 0f  84 18 01 00 00 8b 06 85   |....3...........|
0x1051f:    c0 0f 84 09 01 00 00 39  c7 74 2e                  |.......9.t.     |
; function: function_1052a at 0x1052a -- 0x1052d
0x1052a:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1052d -- 0x1052e
0x1052d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x1052e -- 0x1052f
; data inside code section at 0x1052f -- 0x10531
0x1052f:    ff ff                                              |..              |
; function: function_10531 at 0x10531 -- 0x10557
0x10531:    ff 8b 54 24 2c 65                  	dec dword ptr [ebx + 0x652c2454]
0x10537:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1053d:    0f 85 f6 00 00 00                  	jne 0x10639 <function_10639>
0x10543:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x10547:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1054b:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1054f:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x10553:    83 c4 4c                           	add esp, 0x4c
0x10556:    c3                                 	ret 
; data inside code section at 0x10557 -- 0x10573
0x10557:    90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0x10567:    95 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0x10573 -- 0x10574
; data inside code section at 0x10574 -- 0x105b7
0x10574:    ff ff ff 89 44 24 1c 89  7c 24 08 89 74 24 04 89   |....D$..|$..t$..|
0x10584:    04 24 e8 c5 01 01 00 8b  7c 24 1c 85 ff 74 0c 8b   |.$......|$...t..|
0x10594:    44 24 1c 3b 03 0f 84 9f  00 00 00 8b 44 24 1c c7   |D$.;........D$..|
0x105a4:    44 24 24 00 00 00 00 c7  04 24 10 00 00 00 89 44   |D$$......$.....D|
0x105b4:    24 20 e8                                           |$ .             |
; dynamically linked function: _Znwj at 0x105b7 -- 0x105b8
; data inside code section at 0x105b8 -- 0x105f0
0x105b8:    ff ff ff 8b 54 24 1c c7  00 78 49 01 00 c7 40 04   |....T$...xI...@.|
0x105c8:    01 00 00 00 c7 40 08 01  00 00 00 89 50 0c 8b 54   |.....@......P..T|
0x105d8:    24 20 8b 0b 89 13 8b 53  04 89 43 04 8d 44 24 24   |$ .....S..C..D$$|
0x105e8:    89 4c 24 20 89 04 24 89                            |.L$ ..$.        |
; function: function_105f0 at 0x105f0 -- 0x10639
0x105f0:    54                                 	push esp
0x105f1:    24 24                              	and al, 0x24
0x105f3:    e8 c8 48 00 00                     	call 0x14ec0 <function_14ec0>
0x105f8:    8b 03                              	mov eax, dword ptr [ebx]
0x105fa:    85 c0                              	test eax, eax
0x105fc:    74 36                              	je 0x10634 <function_105f0+0x44>
0x105fe:    8b 38                              	mov edi, dword ptr [eax]
0x10600:    85 ff                              	test edi, edi
0x10602:    74 2b                              	je 0x1062f <function_105f0+0x3f>
0x10604:    8b 07                              	mov eax, dword ptr [edi]
0x10606:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x1060e:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x10616:    89 1c 24                           	mov dword ptr [esp], ebx
0x10619:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1061d:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x10621:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x10625:    e8 e6 f8 00 00                     	call 0x1ff10 <unknown_1ff10>
0x1062a:    e9 fb fe ff ff                     	jmp 0x1052a <function_1052a>
0x1062f:    e8 16 38 00 00                     	call 0x13e4a
0x10634:    e8 dd 37 00 00                     	call 0x13e16
; function: function_10639 at 0x10639 -- 0x1063a
; dynamically linked function: __stack_chk_fail at 0x1063a -- 0x1063b
; data inside code section at 0x1063b -- 0x1065e
0x1063b:    ff ff ff c7 44 24 0c 10  87 00 00 c7 44 24 08 87   |....D$......D$..|
0x1064b:    01 00 00 c7 44 24 04 00  33 00 00 c7 04 24 ec 20   |....D$..3....$. |
0x1065b:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x1065e -- 0x1065f
; data inside code section at 0x1065f -- 0x10666
0x1065f:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x10666 -- 0x10667
; data inside code section at 0x10667 -- 0x10677
0x10667:    ff ff ff 8b 44 24 1c 89  04 24 e8 7a f2 00 00 e8   |....D$...$.z....|
; dynamically linked function: __cxa_rethrow at 0x10677 -- 0x10678
; data inside code section at 0x10678 -- 0x1067c
0x10678:    ff ff ff 89                                        |....            |
; function: function_1067c at 0x1067c -- 0x1067d
0x1067c:    c3                                 	ret 
; function: function_1067d at 0x1067d -- 0x1067e
; data inside code section at 0x1067e -- 0x10681
0x1067e:    2c 24 e8                                           |,$.             |
; dynamically linked function: pthread_mutex_unlock at 0x10681 -- 0x10682
; data inside code section at 0x10682 -- 0x10689
0x10682:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x10689 -- 0x1068a
; data inside code section at 0x1068a -- 0x1068e
0x1068a:    ff ff ff 89                                        |....            |
; function: function_1068e at 0x1068e -- 0x1068f
0x1068e:    c3                                 	ret 
; data inside code section at 0x1068f -- 0x10697
0x1068f:    8b 44 24 1c 89 04 24 e8                            |.D$...$.        |
; dynamically linked function: _ZdlPv at 0x10697 -- 0x10698
; data inside code section at 0x10698 -- 0x1069b
0x10698:    ff ff ff                                           |...             |
; function: function_1069b at 0x1069b -- 0x1069d
0x1069b:    eb e0                              	jmp 0x1067d <function_1067d>
; function: function_1069d at 0x1069d -- 0x106a6
0x1069d:    89 c3                              	mov ebx, eax
0x1069f:    e8 fc ff ff ff                     	call 0x106a0
0x106a4:    eb d7                              	jmp 0x1067d <function_1067d>
; section: .text._ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE18invocation_janitorD2Ev
; function: _ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE18invocation_janitorD1Ev at 0x106b0 -- 0x106f6
0x106b0:    83 ec 2c                           	sub esp, 0x2c
0x106b3:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x106b7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x106bd:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x106c1:    31 c0                              	xor eax, eax
0x106c3:    8b 02                              	mov eax, dword ptr [edx]
0x106c5:    8b 88 90 00 00 00                  	mov ecx, dword ptr [eax + 0x90]
0x106cb:    39 88 94 00 00 00                  	cmp dword ptr [eax + 0x94], ecx
0x106d1:    76 12                              	jbe 0x106e5 <_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE18invocation_janitorD1Ev+0x35>
0x106d3:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x106d6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x106da:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x106dd:    89 04 24                           	mov dword ptr [esp], eax
0x106e0:    e8 ab 04 01 00                     	call 0x20b90 <unknown_20b90>
0x106e5:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x106e9:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x106f0:    75 04                              	jne 0x106f6 <_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE18invocation_janitorD1Ev+0x45>
0x106f2:    83 c4 2c                           	add esp, 0x2c
0x106f5:    c3                                 	ret 
; data inside code section at 0x106f6 -- 0x106f7
0x106f6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x106f7 -- 0x106f8
; data inside code section at 0x106f8 -- 0x106fb
0x106f8:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeIcSaIcEE17_M_reallocate_mapEjb
; function: _ZNSt5dequeIcSaIcEE17_M_reallocate_mapEjb at 0x10700 -- 0x10796
0x10700:    83 ec 4c                           	sub esp, 0x4c
0x10703:    0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0x10708:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1070c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x10710:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10716:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1071a:    31 c0                              	xor eax, eax
0x1071c:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x10720:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x10724:    88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0x10728:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1072b:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1072e:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x10732:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x10736:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x10739:    89 cf                              	mov edi, ecx
0x1073b:    29 c7                              	sub edi, eax
0x1073d:    c1 ff 02                           	sar edi, 2
0x10740:    83 c7 01                           	add edi, 1
0x10743:    8d 14 37                           	lea edx, [edi + esi]
0x10746:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1074a:    8d 0c 12                           	lea ecx, [edx + edx]
0x1074d:    39 cd                              	cmp ebp, ecx
0x1074f:    76 4f                              	jbe 0x107a0 <function_107a0>
0x10751:    29 d5                              	sub ebp, edx
0x10753:    31 d2                              	xor edx, edx
0x10755:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x10759:    c1 e6 02                           	shl esi, 2
0x1075c:    d1 ed                              	shr ebp, 1
0x1075e:    80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0x10763:    0f 45 d6                           	cmovne edx, esi
0x10766:    83 c1 04                           	add ecx, 4
0x10769:    8d 34 aa                           	lea esi, [edx + ebp*4]
0x1076c:    29 c1                              	sub ecx, eax
0x1076e:    03 33                              	add esi, dword ptr [ebx]
0x10770:    c1 f9 02                           	sar ecx, 2
0x10773:    39 f0                              	cmp eax, esi
0x10775:    0f 87 f5 00 00 00                  	ja 0x10870 <function_10870>
0x1077b:    85 c9                              	test ecx, ecx
0x1077d:    0f 84 a1 00 00 00                  	je 0x10824 <function_10824>
0x10783:    c1 e1 02                           	shl ecx, 2
0x10786:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1078a:    8d 04 be                           	lea eax, [esi + edi*4]
0x1078d:    29 c8                              	sub eax, ecx
0x1078f:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x10793:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10796 -- 0x10797
0x10796:    e8                                                 |.               |
; dynamically linked function: memmove at 0x10797 -- 0x10798
; data inside code section at 0x10798 -- 0x1079b
0x10798:    ff ff ff                                           |...             |
; function: function_1079b at 0x1079b -- 0x107a0
0x1079b:    e9 84 00 00 00                     	jmp 0x10824 <function_10824>
; function: function_107a0 at 0x107a0 -- 0x107c8
0x107a0:    39 ee                              	cmp esi, ebp
0x107a2:    89 e8                              	mov eax, ebp
0x107a4:    0f 43 c6                           	cmovae eax, esi
0x107a7:    8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0x107ab:    81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0x107b1:    0f 87 d2 00 00 00                  	ja 0x10889 <function_10889>
0x107b7:    8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0x107be:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x107c2:    c1 e6 02                           	shl esi, 2
0x107c5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x107c8 -- 0x107c9
0x107c8:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x107c9 -- 0x107ca
; data inside code section at 0x107ca -- 0x1080d
0x107ca:    ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0x107da:    d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0x107ea:    24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0x107fa:    85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0x1080a:    34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0x1080d -- 0x1080e
; data inside code section at 0x1080e -- 0x10817
0x1080e:    ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x10817 -- 0x10818
; data inside code section at 0x10818 -- 0x10824
0x10818:    ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_10824 at 0x10824 -- 0x10869
0x10824:    89 73 14                           	mov dword ptr [ebx + 0x14], esi
0x10827:    8b 06                              	mov eax, dword ptr [esi]
0x10829:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1082c:    05 00 02 00 00                     	add eax, 0x200
0x10831:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x10834:    8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0x10838:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1083b:    8b 00                              	mov eax, dword ptr [eax]
0x1083d:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x10840:    05 00 02 00 00                     	add eax, 0x200
0x10845:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x10849:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x10850:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x10853:    75 39                              	jne 0x1088e <function_1088e>
0x10855:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x10859:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1085d:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x10861:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x10865:    83 c4 4c                           	add esp, 0x4c
0x10868:    c3                                 	ret 
; data inside code section at 0x10869 -- 0x10870
0x10869:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_10870 at 0x10870 -- 0x10882
0x10870:    85 c9                              	test ecx, ecx
0x10872:    74 b0                              	je 0x10824 <function_10824>
0x10874:    c1 e1 02                           	shl ecx, 2
0x10877:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1087b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1087f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x10882 -- 0x10883
0x10882:    e8                                                 |.               |
; dynamically linked function: memmove at 0x10883 -- 0x10884
; data inside code section at 0x10884 -- 0x10887
0x10884:    ff ff ff                                           |...             |
; function: function_10887 at 0x10887 -- 0x10889
0x10887:    eb 9b                              	jmp 0x10824 <function_10824>
; function: function_10889 at 0x10889 -- 0x1088a
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1088a -- 0x1088b
; data inside code section at 0x1088b -- 0x1088e
0x1088b:    ff ff ff                                           |...             |
; function: function_1088e at 0x1088e -- 0x10890
0x1088e:    66 90                              	nop 
; data inside code section at 0x10890 -- 0x10891
0x10890:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10891 -- 0x10892
; data inside code section at 0x10892 -- 0x10895
0x10892:    ff ff ff                                           |...             |
; section: .text._ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_
; function: _ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_ at 0x108a0 -- 0x10988
0x108a0:    55                                 	push ebp
0x108a1:    57                                 	push edi
0x108a2:    56                                 	push esi
0x108a3:    53                                 	push ebx
0x108a4:    83 ec 3c                           	sub esp, 0x3c
0x108a7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x108ab:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x108b1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x108b5:    31 c0                              	xor eax, eax
0x108b7:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x108bb:    8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x108bf:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x108c3:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x108c6:    39 43 18                           	cmp dword ptr [ebx + 0x18], eax
0x108c9:    8b 74 24 5c                        	mov esi, dword ptr [esp + 0x5c]
0x108cd:    74 37                              	je 0x10906 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x66>
0x108cf:    39 f2                              	cmp edx, esi
0x108d1:    75 0f                              	jne 0x108e2 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x42>
0x108d3:    eb 53                              	jmp 0x10928 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x88>
; data inside code section at 0x108d5 -- 0x108d8
0x108d5:    8d 76 00                                           |.v.             |
0x108d8:    39 d6                              	cmp esi, edx
0x108da:    8d b6 00 00 00 00                  	lea esi, [esi]
0x108e0:    74 46                              	je 0x10928 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x88>
0x108e2:    0f b6 00                           	movzx eax, byte ptr [eax]
0x108e5:    88 06                              	mov byte ptr [esi], al
0x108e7:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x108ea:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x108ed:    83 e9 01                           	sub ecx, 1
0x108f0:    39 c8                              	cmp eax, ecx
0x108f2:    0f 84 e0 00 00 00                  	je 0x109d8 <function_109d8>
0x108f8:    83 c0 01                           	add eax, 1
0x108fb:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x108fe:    83 c6 01                           	add esi, 1
0x10901:    39 43 18                           	cmp dword ptr [ebx + 0x18], eax
0x10904:    75 d2                              	jne 0x108d8 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x38>
0x10906:    39 d6                              	cmp esi, edx
0x10908:    0f 84 92 01 00 00                  	je 0x10aa0 <function_10aa0>
0x1090e:    31 db                              	xor ebx, ebx
0x10910:    29 d7                              	sub edi, edx
0x10912:    0f 85 6d 01 00 00                  	jne 0x10a85 <function_10a85>
0x10918:    01 f3                              	add ebx, esi
0x1091a:    89 5d 00                           	mov dword ptr [ebp], ebx
0x1091d:    e9 93 00 00 00                     	jmp 0x109b5 <function_109b5>
; data inside code section at 0x10922 -- 0x10928
0x10922:    8d b6 00 00 00 00                                  |......          |
0x10928:    39 f7                              	cmp edi, esi
0x1092a:    75 19                              	jne 0x10945 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0xa5>
0x1092c:    8d 74 26 00                        	lea esi, [esi]
0x10930:    e9 7d 00 00 00                     	jmp 0x109b2 <function_109b2>
; data inside code section at 0x10935 -- 0x10938
0x10935:    8d 76 00                                           |.v.             |
0x10938:    83 c6 01                           	add esi, 1
0x1093b:    83 c0 01                           	add eax, 1
0x1093e:    39 f7                              	cmp edi, esi
0x10940:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x10943:    74 6b                              	je 0x109b0 <function_109b0>
0x10945:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x10948:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x1094b:    83 ea 01                           	sub edx, 1
0x1094e:    39 d0                              	cmp eax, edx
0x10950:    0f 84 ba 00 00 00                  	je 0x10a10 <function_10a10>
0x10956:    31 d2                              	xor edx, edx
0x10958:    85 c0                              	test eax, eax
0x1095a:    74 08                              	je 0x10964 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0xc4>
0x1095c:    0f b6 16                           	movzx edx, byte ptr [esi]
0x1095f:    88 10                              	mov byte ptr [eax], dl
0x10961:    8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x10964:    83 c2 01                           	add edx, 1
0x10967:    89 53 18                           	mov dword ptr [ebx + 0x18], edx
0x1096a:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x1096d:    0f b6 00                           	movzx eax, byte ptr [eax]
0x10970:    88 06                              	mov byte ptr [esi], al
0x10972:    8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x10975:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x10978:    83 ea 01                           	sub edx, 1
0x1097b:    39 d0                              	cmp eax, edx
0x1097d:    75 b9                              	jne 0x10938 <_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_+0x98>
0x1097f:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10982:    83 c6 01                           	add esi, 1
0x10985:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10988 -- 0x10989
0x10988:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10989 -- 0x1098a
; data inside code section at 0x1098a -- 0x109b0
0x1098a:    ff ff ff 8b 43 14 39 f7  8d 50 04 89 53 14 8b 40   |....C.9..P..S..@|
0x1099a:    04 8d 90 00 02 00 00 89  43 0c 89 53 10 89 43 08   |........C..S..C.|
0x109aa:    75 99 8d 74 26 00                                  |u..t&.          |
; function: function_109b0 at 0x109b0 -- 0x109b2
0x109b0:    89 fe                              	mov esi, edi
; function: function_109b2 at 0x109b2 -- 0x109b5
0x109b2:    89 75 00                           	mov dword ptr [ebp], esi
; function: function_109b5 at 0x109b5 -- 0x109d2
0x109b5:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x109b9:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x109c0:    89 e8                              	mov eax, ebp
0x109c2:    0f 85 e0 00 00 00                  	jne 0x10aa8 <function_10aa8>
0x109c8:    83 c4 3c                           	add esp, 0x3c
0x109cb:    5b                                 	pop ebx
0x109cc:    5e                                 	pop esi
0x109cd:    5f                                 	pop edi
0x109ce:    5d                                 	pop ebp
0x109cf:    c2 04 00                           	ret 4
; data inside code section at 0x109d2 -- 0x109d8
0x109d2:    8d b6 00 00 00 00                                  |......          |
; function: function_109d8 at 0x109d8 -- 0x109e2
0x109d8:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x109db:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x109df:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x109e2 -- 0x109e3
0x109e2:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x109e3 -- 0x109e4
; data inside code section at 0x109e4 -- 0x109e6
0x109e4:    ff ff                                              |..              |
; function: function_109e6 at 0x109e6 -- 0x10a0b
0x109e6:    ff 8b 43 14 8b 54                  	dec dword ptr [ebx + 0x548b1443]
0x109ec:    24 1c                              	and al, 0x1c
0x109ee:    8d 48 04                           	lea ecx, [eax + 4]
0x109f1:    89 4b 14                           	mov dword ptr [ebx + 0x14], ecx
0x109f4:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x109f7:    8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0x109fd:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x10a00:    89 4b 10                           	mov dword ptr [ebx + 0x10], ecx
0x10a03:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x10a06:    e9 f3 fe ff ff                     	jmp 0x108fe
; data inside code section at 0x10a0b -- 0x10a10
0x10a0b:    90 8d 74 26 00                                     |..t&.           |
; function: function_10a10 at 0x10a10 -- 0x10a85
0x10a10:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x10a13:    89 d0                              	mov eax, edx
0x10a15:    2b 03                              	sub eax, dword ptr [ebx]
0x10a17:    c1 f8 02                           	sar eax, 2
0x10a1a:    f7 d8                              	neg eax
0x10a1c:    03 43 04                           	add eax, dword ptr [ebx + 4]
0x10a1f:    83 f8 01                           	cmp eax, 1
0x10a22:    76 44                              	jbe 0x10a68 <function_10a10+0x58>
0x10a24:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x10a28:    c7 04 24 00 02 00 00               	mov dword ptr [esp], 0x200
0x10a2f:    e8 fc ff ff ff                     	call 0x10a30
0x10a34:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x10a38:    89 42 04                           	mov dword ptr [edx + 4], eax
0x10a3b:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x10a3e:    85 c0                              	test eax, eax
0x10a40:    74 05                              	je 0x10a47 <function_10a10+0x37>
0x10a42:    0f b6 16                           	movzx edx, byte ptr [esi]
0x10a45:    88 10                              	mov byte ptr [eax], dl
0x10a47:    8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0x10a4a:    8d 50 04                           	lea edx, [eax + 4]
0x10a4d:    89 53 24                           	mov dword ptr [ebx + 0x24], edx
0x10a50:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x10a53:    8d 90 00 02 00 00                  	lea edx, [eax + 0x200]
0x10a59:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x10a5c:    89 53 20                           	mov dword ptr [ebx + 0x20], edx
0x10a5f:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x10a62:    e9 03 ff ff ff                     	jmp 0x1096a
; data inside code section at 0x10a67 -- 0x10a68
0x10a67:    90                                                 |.               |
0x10a68:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x10a70:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x10a78:    89 1c 24                           	mov dword ptr [esp], ebx
0x10a7b:    e8 20 05 01 00                     	call 0x20fa0 <unknown_20fa0>
0x10a80:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x10a83:    eb 9f                              	jmp 0x10a24 <function_10a10+0x14>
; function: function_10a85 at 0x10a85 -- 0x10a92
0x10a85:    89 fb                              	mov ebx, edi
0x10a87:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x10a8b:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x10a8f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x10a92 -- 0x10a93
0x10a92:    e8                                                 |.               |
; dynamically linked function: memmove at 0x10a93 -- 0x10a94
; data inside code section at 0x10a94 -- 0x10a97
0x10a94:    ff ff ff                                           |...             |
; function: function_10a97 at 0x10a97 -- 0x10a9c
0x10a97:    e9 7c fe ff ff                     	jmp 0x10918
; data inside code section at 0x10a9c -- 0x10aa0
0x10a9c:    8d 74 26 00                                        |.t&.            |
; function: function_10aa0 at 0x10aa0 -- 0x10aa8
0x10aa0:    89 7d 00                           	mov dword ptr [ebp], edi
0x10aa3:    e9 0d ff ff ff                     	jmp 0x109b5 <function_109b5>
; function: function_10aa8 at 0x10aa8 -- 0x10ab0
0x10aa8:    90                                 	nop 
0x10aa9:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x10ab0 -- 0x10ab1
0x10ab0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10ab1 -- 0x10ab2
; data inside code section at 0x10ab2 -- 0x10ab5
0x10ab2:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEj
; function: _ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEj at 0x10ac0 -- 0x10b42
0x10ac0:    55                                 	push ebp
0x10ac1:    57                                 	push edi
0x10ac2:    56                                 	push esi
0x10ac3:    53                                 	push ebx
0x10ac4:    83 ec 3c                           	sub esp, 0x3c
0x10ac7:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x10acb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10ad1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x10ad5:    31 c0                              	xor eax, eax
0x10ad7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x10adb:    8b 4d 14                           	mov ecx, dword ptr [ebp + 0x14]
0x10ade:    8b 45 24                           	mov eax, dword ptr [ebp + 0x24]
0x10ae1:    8b 55 18                           	mov edx, dword ptr [ebp + 0x18]
0x10ae4:    2b 55 1c                           	sub edx, dword ptr [ebp + 0x1c]
0x10ae7:    29 c8                              	sub eax, ecx
0x10ae9:    c1 f8 02                           	sar eax, 2
0x10aec:    83 e8 01                           	sub eax, 1
0x10aef:    c1 e0 09                           	shl eax, 9
0x10af2:    01 d0                              	add eax, edx
0x10af4:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x10af7:    2b 55 08                           	sub edx, dword ptr [ebp + 8]
0x10afa:    01 c2                              	add edx, eax
0x10afc:    f7 d2                              	not edx
0x10afe:    39 da                              	cmp edx, ebx
0x10b00:    0f 82 84 00 00 00                  	jb 0x10b8a <function_10b8a>
0x10b06:    89 c8                              	mov eax, ecx
0x10b08:    81 c3 ff 01 00 00                  	add ebx, 0x1ff
0x10b0e:    2b 45 00                           	sub eax, dword ptr [ebp]
0x10b11:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x10b15:    c1 6c 24 1c 09                     	shr dword ptr [esp + 0x1c], 9
0x10b1a:    c1 f8 02                           	sar eax, 2
0x10b1d:    39 44 24 1c                        	cmp dword ptr [esp + 0x1c], eax
0x10b21:    77 4d                              	ja 0x10b70 <function_10b70>
0x10b23:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10b27:    85 c0                              	test eax, eax
0x10b29:    74 2b                              	je 0x10b56 <function_10b56>
0x10b2b:    be fc ff ff ff                     	mov esi, 0xfffffffc
0x10b30:    bf 01 00 00 00                     	mov edi, 1
0x10b35:    8d 76 00                           	lea esi, [esi]
0x10b38:    8b 5d 14                           	mov ebx, dword ptr [ebp + 0x14]
0x10b3b:    c7 04 24 00 02 00 00               	mov dword ptr [esp], 0x200
; data inside code section at 0x10b42 -- 0x10b43
0x10b42:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x10b43 -- 0x10b44
; data inside code section at 0x10b44 -- 0x10b56
0x10b44:    ff ff ff 89 04 33 83 c7  01 83 ee 04 39 7c 24 1c   |.....3......9|$.|
0x10b54:    73 e2                                              |s.              |
; function: function_10b56 at 0x10b56 -- 0x10b6b
0x10b56:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x10b5a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10b61:    75 33                              	jne 0x10b96 <function_10b96>
0x10b63:    83 c4 3c                           	add esp, 0x3c
0x10b66:    5b                                 	pop ebx
0x10b67:    5e                                 	pop esi
0x10b68:    5f                                 	pop edi
0x10b69:    5d                                 	pop ebp
0x10b6a:    c3                                 	ret 
; data inside code section at 0x10b6b -- 0x10b70
0x10b6b:    90 8d 74 26 00                                     |..t&.           |
; function: function_10b70 at 0x10b70 -- 0x10b8a
0x10b70:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10b74:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x10b7c:    89 2c 24                           	mov dword ptr [esp], ebp
0x10b7f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10b83:    e8 38 06 01 00                     	call 0x211c0 <unknown_211c0>
0x10b88:    eb 99                              	jmp 0x10b23
; function: function_10b8a at 0x10b8a -- 0x10b91
0x10b8a:    c7 04 24 74 37 00 00               	mov dword ptr [esp], 0x3774 ; "deque::_M_new_elements_at_front"
; data inside code section at 0x10b91 -- 0x10b92
0x10b91:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x10b92 -- 0x10b93
; data inside code section at 0x10b93 -- 0x10b96
0x10b93:    ff ff ff                                           |...             |
; function: function_10b96 at 0x10b96 -- 0x10b97
; dynamically linked function: __stack_chk_fail at 0x10b97 -- 0x10b98
; data inside code section at 0x10b98 -- 0x10b9f
0x10b98:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x10b9f -- 0x10ba0
; data inside code section at 0x10ba0 -- 0x10bb3
0x10ba0:    ff ff ff 83 ff 01 76 22  be fc ff ff ff bb 01 00   |......v"........|
0x10bb0:    00 00 8b                                           |...             |
; function: function_10bb3 at 0x10bb3 -- 0x10bb7
0x10bb3:    45                                 	inc ebp
0x10bb4:    14 83                              	adc al, 0x83
0x10bb6:    c3                                 	ret 
; data inside code section at 0x10bb7 -- 0x10bc2
0x10bb7:    01 8b 04 30 83 ee 04 89  04 24 e8                  |...0.....$.     |
; dynamically linked function: _ZdlPv at 0x10bc2 -- 0x10bc3
; data inside code section at 0x10bc3 -- 0x10bcb
0x10bc3:    ff ff ff 39 fb 75 e8 e8                            |...9.u..        |
; dynamically linked function: __cxa_rethrow at 0x10bcb -- 0x10bcc
; data inside code section at 0x10bcc -- 0x10bd0
0x10bcc:    ff ff ff 89                                        |....            |
; function: function_10bd0 at 0x10bd0 -- 0x10bd1
0x10bd0:    c3                                 	ret 
; data inside code section at 0x10bd1 -- 0x10bd2
0x10bd1:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x10bd2 -- 0x10bd3
; data inside code section at 0x10bd3 -- 0x10bda
0x10bd3:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x10bda -- 0x10bdb
; data inside code section at 0x10bdb -- 0x10bde
0x10bdb:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj
; function: _ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj at 0x10be0 -- 0x10ca5
0x10be0:    83 ec 3c                           	sub esp, 0x3c
0x10be3:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x10be7:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x10beb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10bf1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10bf5:    31 c0                              	xor eax, eax
0x10bf7:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x10bfb:    8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x10bff:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x10c03:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x10c07:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x10c0a:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10c0d:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x10c11:    89 ca                              	mov edx, ecx
0x10c13:    29 c2                              	sub edx, eax
0x10c15:    39 fa                              	cmp edx, edi
0x10c17:    73 1a                              	jae 0x10c33 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0x53>
0x10c19:    89 f8                              	mov eax, edi
0x10c1b:    29 d0                              	sub eax, edx
0x10c1d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10c21:    89 1c 24                           	mov dword ptr [esp], ebx
0x10c24:    e8 77 0a 01 00                     	call 0x216a0 <unknown_216a0>
0x10c29:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x10c2c:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10c2f:    89 ca                              	mov edx, ecx
0x10c31:    29 c2                              	sub edx, eax
0x10c33:    29 fa                              	sub edx, edi
0x10c35:    8b 6b 10                           	mov ebp, dword ptr [ebx + 0x10]
0x10c38:    8b 5b 14                           	mov ebx, dword ptr [ebx + 0x14]
0x10c3b:    78 5b                              	js 0x10c98 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0xb8>
0x10c3d:    29 f9                              	sub ecx, edi
0x10c3f:    81 fa ff 01 00 00                  	cmp edx, 0x1ff
0x10c45:    7e 1c                              	jle 0x10c63 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0x83>
0x10c47:    85 d2                              	test edx, edx
0x10c49:    7e 4d                              	jle 0x10c98 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0xb8>
0x10c4b:    89 d1                              	mov ecx, edx
0x10c4d:    c1 f9 09                           	sar ecx, 9
0x10c50:    8d 1c 8b                           	lea ebx, [ebx + ecx*4]
0x10c53:    8b 03                              	mov eax, dword ptr [ebx]
0x10c55:    c1 e1 09                           	shl ecx, 9
0x10c58:    29 ca                              	sub edx, ecx
0x10c5a:    8d a8 00 02 00 00                  	lea ebp, [eax + 0x200]
0x10c60:    8d 0c 10                           	lea ecx, [eax + edx]
0x10c63:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x10c67:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10c6e:    89 46 04                           	mov dword ptr [esi + 4], eax
0x10c71:    89 f0                              	mov eax, esi
0x10c73:    89 0e                              	mov dword ptr [esi], ecx
0x10c75:    89 6e 08                           	mov dword ptr [esi + 8], ebp
0x10c78:    89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0x10c7b:    75 28                              	jne 0x10ca5 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0xc3>
0x10c7d:    8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x10c81:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x10c85:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x10c89:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x10c8d:    83 c4 3c                           	add esp, 0x3c
0x10c90:    c2 04 00                           	ret 4
; data inside code section at 0x10c93 -- 0x10c98
0x10c93:    90 8d 74 26 00                                     |..t&.           |
0x10c98:    89 d1                              	mov ecx, edx
0x10c9a:    c1 e9 09                           	shr ecx, 9
0x10c9d:    81 c9 00 00 80 ff                  	or ecx, 0xff800000
0x10ca3:    eb ab                              	jmp 0x10c50 <_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj+0x70>
; data inside code section at 0x10ca5 -- 0x10ca6
0x10ca5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10ca6 -- 0x10ca7
; data inside code section at 0x10ca7 -- 0x10caa
0x10ca7:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEj
; function: _ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEj at 0x10cb0 -- 0x10d3a
0x10cb0:    55                                 	push ebp
0x10cb1:    57                                 	push edi
0x10cb2:    56                                 	push esi
0x10cb3:    53                                 	push ebx
0x10cb4:    83 ec 2c                           	sub esp, 0x2c
0x10cb7:    8b 7c 24 40                        	mov edi, dword ptr [esp + 0x40]
0x10cbb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10cc1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10cc5:    31 c0                              	xor eax, eax
0x10cc7:    8b 6c 24 44                        	mov ebp, dword ptr [esp + 0x44]
0x10ccb:    8b 47 24                           	mov eax, dword ptr [edi + 0x24]
0x10cce:    8b 57 18                           	mov edx, dword ptr [edi + 0x18]
0x10cd1:    2b 57 1c                           	sub edx, dword ptr [edi + 0x1c]
0x10cd4:    89 c1                              	mov ecx, eax
0x10cd6:    2b 4f 14                           	sub ecx, dword ptr [edi + 0x14]
0x10cd9:    c1 f9 02                           	sar ecx, 2
0x10cdc:    83 e9 01                           	sub ecx, 1
0x10cdf:    c1 e1 09                           	shl ecx, 9
0x10ce2:    01 d1                              	add ecx, edx
0x10ce4:    8b 57 10                           	mov edx, dword ptr [edi + 0x10]
0x10ce7:    2b 57 08                           	sub edx, dword ptr [edi + 8]
0x10cea:    01 ca                              	add edx, ecx
0x10cec:    f7 d2                              	not edx
0x10cee:    39 ea                              	cmp edx, ebp
0x10cf0:    72 6c                              	jb 0x10d5e <function_10d5e>
0x10cf2:    2b 07                              	sub eax, dword ptr [edi]
0x10cf4:    81 c5 ff 01 00 00                  	add ebp, 0x1ff
0x10cfa:    c1 ed 09                           	shr ebp, 9
0x10cfd:    8d 55 01                           	lea edx, [ebp + 1]
0x10d00:    c1 f8 02                           	sar eax, 2
0x10d03:    f7 d8                              	neg eax
0x10d05:    03 47 04                           	add eax, dword ptr [edi + 4]
0x10d08:    39 c2                              	cmp edx, eax
0x10d0a:    76 14                              	jbe 0x10d20 <_ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEj+0x70>
0x10d0c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x10d14:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x10d18:    89 3c 24                           	mov dword ptr [esp], edi
0x10d1b:    e8 90 06 01 00                     	call 0x213b0 <unknown_213b0>
0x10d20:    85 ed                              	test ebp, ebp
0x10d22:    74 25                              	je 0x10d49 <function_10d49>
0x10d24:    be 01 00 00 00                     	mov esi, 1
0x10d29:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x10d30:    8b 5f 24                           	mov ebx, dword ptr [edi + 0x24]
0x10d33:    c7 04 24 00 02 00 00               	mov dword ptr [esp], 0x200
; data inside code section at 0x10d3a -- 0x10d3b
0x10d3a:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x10d3b -- 0x10d3c
; data inside code section at 0x10d3c -- 0x10d49
0x10d3c:    ff ff ff 89 04 b3 83 c6  01 39 f5 73 e7            |.........9.s.   |
; function: function_10d49 at 0x10d49 -- 0x10d5e
0x10d49:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10d4d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10d54:    75 14                              	jne 0x10d6a <function_10d6a>
0x10d56:    83 c4 2c                           	add esp, 0x2c
0x10d59:    5b                                 	pop ebx
0x10d5a:    5e                                 	pop esi
0x10d5b:    5f                                 	pop edi
0x10d5c:    5d                                 	pop ebp
0x10d5d:    c3                                 	ret 
; function: function_10d5e at 0x10d5e -- 0x10d65
0x10d5e:    c7 04 24 94 37 00 00               	mov dword ptr [esp], 0x3794 ; "deque::_M_new_elements_at_back"
; data inside code section at 0x10d65 -- 0x10d66
0x10d65:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x10d66 -- 0x10d67
; data inside code section at 0x10d67 -- 0x10d6a
0x10d67:    ff ff ff                                           |...             |
; function: function_10d6a at 0x10d6a -- 0x10d6b
; dynamically linked function: __stack_chk_fail at 0x10d6b -- 0x10d6c
; data inside code section at 0x10d6c -- 0x10d73
0x10d6c:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x10d73 -- 0x10d74
; data inside code section at 0x10d74 -- 0x10d7f
0x10d74:    ff ff ff 83 fe 01 76 1a  bb 01 00                  |......v....     |
; function: function_10d7f at 0x10d7f -- 0x10d80
; data inside code section at 0x10d80 -- 0x10d88
0x10d80:    00 8b 47 24 8b 04 98 83                            |..G$....        |
; function: function_10d88 at 0x10d88 -- 0x10d89
0x10d88:    c3                                 	ret 
; data inside code section at 0x10d89 -- 0x10d8e
0x10d89:    01 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x10d8e -- 0x10d8f
; data inside code section at 0x10d8f -- 0x10d95
0x10d8f:    ff ff ff 39 f3 75                                  |...9.u          |
; function: function_10d95 at 0x10d95 -- 0x10d97
0x10d95:    eb e8                              	jmp 0x10d7f <function_10d7f>
; dynamically linked function: __cxa_rethrow at 0x10d97 -- 0x10d98
; data inside code section at 0x10d98 -- 0x10d9c
0x10d98:    ff ff ff 89                                        |....            |
; function: function_10d9c at 0x10d9c -- 0x10d9d
0x10d9c:    c3                                 	ret 
; data inside code section at 0x10d9d -- 0x10d9e
0x10d9d:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x10d9e -- 0x10d9f
; data inside code section at 0x10d9f -- 0x10da6
0x10d9f:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x10da6 -- 0x10da7
; data inside code section at 0x10da7 -- 0x10daa
0x10da7:    ff ff ff                                           |...             |
; section: .text._ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
; function: _ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_ at 0x10db0 -- 0x10ea2
0x10db0:    55                                 	push ebp
0x10db1:    57                                 	push edi
0x10db2:    56                                 	push esi
0x10db3:    53                                 	push ebx
0x10db4:    83 ec 2c                           	sub esp, 0x2c
0x10db7:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x10dbb:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x10dbf:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x10dc6:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x10dca:    31 d2                              	xor edx, edx
0x10dcc:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x10dd0:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x10dd4:    8b 79 08                           	mov edi, dword ptr [ecx + 8]
0x10dd7:    8b 58 04                           	mov ebx, dword ptr [eax + 4]
0x10dda:    8b 10                              	mov edx, dword ptr [eax]
0x10ddc:    8b 70 08                           	mov esi, dword ptr [eax + 8]
0x10ddf:    8b 68 0c                           	mov ebp, dword ptr [eax + 0xc]
0x10de2:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x10de6:    8b 01                              	mov eax, dword ptr [ecx]
0x10de8:    8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x10dec:    8b 49 0c                           	mov ecx, dword ptr [ecx + 0xc]
0x10def:    89 04 24                           	mov dword ptr [esp], eax
0x10df2:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x10df6:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x10dfa:    8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x10dfd:    2b 4c 24 04                        	sub ecx, dword ptr [esp + 4]
0x10e01:    c1 f9 02                           	sar ecx, 2
0x10e04:    8d 59 ff                           	lea ebx, [ecx - 1]
0x10e07:    8b 08                              	mov ecx, dword ptr [eax]
0x10e09:    2b 48 04                           	sub ecx, dword ptr [eax + 4]
0x10e0c:    c1 e3 09                           	shl ebx, 9
0x10e0f:    01 d9                              	add ecx, ebx
0x10e11:    89 fb                              	mov ebx, edi
0x10e13:    2b 1c 24                           	sub ebx, dword ptr [esp]
0x10e16:    01 d9                              	add ecx, ebx
0x10e18:    85 c9                              	test ecx, ecx
0x10e1a:    7e 5c                              	jle 0x10e78 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0xc8>
0x10e1c:    8b 04 24                           	mov eax, dword ptr [esp]
0x10e1f:    eb 13                              	jmp 0x10e34 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0x84>
; data inside code section at 0x10e21 -- 0x10e28
0x10e21:    8d b4 26 00 00 00 00                               |..&....         |
0x10e28:    83 c2 01                           	add edx, 1
0x10e2b:    39 f2                              	cmp edx, esi
0x10e2d:    74 2c                              	je 0x10e5b <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0xab>
0x10e2f:    83 e9 01                           	sub ecx, 1
0x10e32:    74 44                              	je 0x10e78 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0xc8>
0x10e34:    0f b6 18                           	movzx ebx, byte ptr [eax]
0x10e37:    83 c0 01                           	add eax, 1
0x10e3a:    39 c7                              	cmp edi, eax
0x10e3c:    88 1a                              	mov byte ptr [edx], bl
0x10e3e:    75 e8                              	jne 0x10e28 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0x78>
0x10e40:    8b 5c 24 04                        	mov ebx, dword ptr [esp + 4]
0x10e44:    83 c2 01                           	add edx, 1
0x10e47:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x10e4a:    83 c3 04                           	add ebx, 4
0x10e4d:    39 f2                              	cmp edx, esi
0x10e4f:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x10e53:    8d b8 00 02 00 00                  	lea edi, [eax + 0x200]
0x10e59:    75 d4                              	jne 0x10e2f <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0x7f>
0x10e5b:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x10e5e:    83 c5 04                           	add ebp, 4
0x10e61:    89 d6                              	mov esi, edx
0x10e63:    81 c6 00 02 00 00                  	add esi, 0x200
0x10e69:    83 e9 01                           	sub ecx, 1
0x10e6c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x10e70:    75 c2                              	jne 0x10e34 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0x84>
0x10e72:    8d b6 00 00 00 00                  	lea esi, [esi]
0x10e78:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x10e7c:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x10e80:    65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x10e87:    89 10                              	mov dword ptr [eax], edx
0x10e89:    8b 54 24 08                        	mov edx, dword ptr [esp + 8]
0x10e8d:    89 70 08                           	mov dword ptr [eax + 8], esi
0x10e90:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x10e93:    89 50 04                           	mov dword ptr [eax + 4], edx
0x10e96:    75 0a                              	jne 0x10ea2 <_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_+0xef>
0x10e98:    83 c4 2c                           	add esp, 0x2c
0x10e9b:    5b                                 	pop ebx
0x10e9c:    5e                                 	pop esi
0x10e9d:    5f                                 	pop edi
0x10e9e:    5d                                 	pop ebp
0x10e9f:    c2 04 00                           	ret 4
; data inside code section at 0x10ea2 -- 0x10ea3
0x10ea2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10ea3 -- 0x10ea4
; data inside code section at 0x10ea4 -- 0x10ea7
0x10ea4:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE at 0x10eb0 -- 0x10ef6
0x10eb0:    83 ec 4c                           	sub esp, 0x4c
0x10eb3:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x10eb7:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x10ebb:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x10ebf:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x10ec3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10ec9:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x10ecd:    31 c0                              	xor eax, eax
0x10ecf:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x10ed3:    83 fd 0a                           	cmp ebp, 0xa
0x10ed6:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x10eda:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x10ede:    76 1f                              	jbe 0x10eff <function_10eff>
0x10ee0:    81 fd 55 55 55 15                  	cmp ebp, 0x15555555
0x10ee6:    0f 87 09 01 00 00                  	ja 0x10ff5 <function_10ff5>
0x10eec:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x10ef0:    c1 e0 02                           	shl eax, 2
0x10ef3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10ef6 -- 0x10ef7
0x10ef6:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x10ef7 -- 0x10ef8
; data inside code section at 0x10ef8 -- 0x10eff
0x10ef8:    ff ff ff 89 44 24 1c                               |....D$.         |
; function: function_10eff at 0x10eff -- 0x10ff0
0x10eff:    8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
0x10f05:    8b 73 7c                           	mov esi, dword ptr [ebx + 0x7c]
0x10f08:    8d 04 40                           	lea eax, [eax + eax*2]
0x10f0b:    8d 04 86                           	lea eax, [esi + eax*4]
0x10f0e:    39 c6                              	cmp esi, eax
0x10f10:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x10f14:    74 66                              	je 0x10f7c <function_10eff+0x7d>
0x10f16:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x10f1a:    85 ff                              	test edi, edi
0x10f1c:    74 52                              	je 0x10f70 <function_10eff+0x71>
0x10f1e:    8b 16                              	mov edx, dword ptr [esi]
0x10f20:    89 d0                              	mov eax, edx
0x10f22:    c1 f8 1f                           	sar eax, 0x1f
0x10f25:    31 d0                              	xor eax, edx
0x10f27:    83 f8 13                           	cmp eax, 0x13
0x10f2a:    76 7c                              	jbe 0x10fa8 <function_10eff+0xa9>
0x10f2c:    c7 44 24 0c 90 75 00 00            	mov dword ptr [esp + 0xc], 0x7590 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x10f34:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x10f3c:    c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x10f44:    c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
0x10f4b:    e8 fc ff ff ff                     	call 0x10f4c
0x10f50:    85 d2                              	test edx, edx
0x10f52:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x10f55:    78 7e                              	js 0x10fd5 <function_10eff+0xd6>
0x10f57:    8b 10                              	mov edx, dword ptr [eax]
0x10f59:    89 04 24                           	mov dword ptr [esp], eax
0x10f5c:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x10f5f:    89 47 04                           	mov dword ptr [edi + 4], eax
0x10f62:    8b 06                              	mov eax, dword ptr [esi]
0x10f64:    89 c2                              	mov edx, eax
0x10f66:    c1 fa 1f                           	sar edx, 0x1f
0x10f69:    31 d0                              	xor eax, edx
0x10f6b:    89 07                              	mov dword ptr [edi], eax
0x10f6d:    8d 76 00                           	lea esi, [esi]
0x10f70:    83 c6 0c                           	add esi, 0xc
0x10f73:    83 c7 0c                           	add edi, 0xc
0x10f76:    39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0x10f7a:    75 9e                              	jne 0x10f1a <function_10eff+0x1b>
0x10f7c:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x10f80:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10f87:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10f8b:    75 63                              	jne 0x10ff0 <function_10eff+0xec>
0x10f8d:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x10f91:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x10f95:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x10f99:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x10f9d:    83 c4 4c                           	add esp, 0x4c
0x10fa0:    c3                                 	ret 
; data inside code section at 0x10fa1 -- 0x10fa8
0x10fa1:    8d b4 26 00 00 00 00                               |..&....         |
0x10fa8:    ff 24 85 40 10 01 00               	jmp dword ptr [eax*4 + 0x11040]
; data inside code section at 0x10faf -- 0x10fb0
0x10faf:    90                                                 |.               |
0x10fb0:    e8 3b ff ff ff                     	call 0x10ef0
0x10fb5:    8d 76 00                           	lea esi, [esi]
0x10fb8:    85 d2                              	test edx, edx
0x10fba:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x10fbd:    8d 76 00                           	lea esi, [esi]
0x10fc0:    78 1a                              	js 0x10fdc <function_10eff+0xdd>
0x10fc2:    89 47 04                           	mov dword ptr [edi + 4], eax
0x10fc5:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x10fc8:    85 c0                              	test eax, eax
0x10fca:    89 47 08                           	mov dword ptr [edi + 8], eax
0x10fcd:    74 93                              	je 0x10f62 <function_10eff+0x63>
0x10fcf:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x10fd3:    eb 8d                              	jmp 0x10f62 <function_10eff+0x63>
0x10fd5:    8b 00                              	mov eax, dword ptr [eax]
0x10fd7:    e9 7b ff ff ff                     	jmp 0x10f57 <function_10eff+0x58>
0x10fdc:    8b 10                              	mov edx, dword ptr [eax]
0x10fde:    89 57 04                           	mov dword ptr [edi + 4], edx
0x10fe1:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x10fe4:    85 c0                              	test eax, eax
0x10fe6:    89 47 08                           	mov dword ptr [edi + 8], eax
0x10fe9:    75 e4                              	jne 0x10fcf <function_10eff+0xd0>
0x10feb:    e9 72 ff ff ff                     	jmp 0x10f62 <function_10eff+0x63>
; data inside code section at 0x10ff0 -- 0x10ff1
0x10ff0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10ff1 -- 0x10ff2
; data inside code section at 0x10ff2 -- 0x10ff5
0x10ff2:    ff ff ff                                           |...             |
; function: function_10ff5 at 0x10ff5 -- 0x10ff6
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x10ff6 -- 0x10ff7
; data inside code section at 0x10ff7 -- 0x10ffe
0x10ff7:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x10ffe -- 0x10fff
; data inside code section at 0x10fff -- 0x11001
0x10fff:    ff ff                                              |..              |
; function: function_11001 at 0x11001 -- 0x11017
0x11001:    ff 8b 74 24 1c 39                  	dec dword ptr [ebx + 0x391c2474]
0x11007:    f7 74 0d 89                        	div dword ptr [ebp + ecx - 0x77]
0x1100b:    34 24                              	xor al, 0x24
0x1100d:    e8 ee 97 00 00                     	call 0x1a800 <unknown_1a800>
0x11012:    83 c6 0c                           	add esi, 0xc
0x11015:    eb ef                              	jmp 0x11006
; data inside code section at 0x11017 -- 0x1101f
0x11017:    e8 fc ff ff ff 89 c6 e8                            |........        |
; dynamically linked function: __cxa_end_catch at 0x1101f -- 0x11020
; data inside code section at 0x11020 -- 0x1103b
0x11020:    ff ff ff 8b 44 24 1c 89  6c 24 08 89 1c 24 89 44   |....D$..l$...$.D|
0x11030:    24 04 e8 69 26 00 00 89  34 24 e8                  |$..i&...4$.     |
; dynamically linked function: _Unwind_Resume at 0x1103b -- 0x1103c
; data inside code section at 0x1103c -- 0x1103f
0x1103c:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_
; function: _ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_ at 0x11090 -- 0x11100
0x11090:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x11096:    89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0x1109a:    8b 9c 24 90 00 00 00               	mov ebx, dword ptr [esp + 0x90]
0x110a1:    89 b4 24 80 00 00 00               	mov dword ptr [esp + 0x80], esi
0x110a8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x110ae:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x110b2:    31 c0                              	xor eax, eax
0x110b4:    89 ac 24 88 00 00 00               	mov dword ptr [esp + 0x88], ebp
0x110bb:    8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0x110c2:    8b 73 10                           	mov esi, dword ptr [ebx + 0x10]
0x110c5:    3b 73 14                           	cmp esi, dword ptr [ebx + 0x14]
0x110c8:    89 bc 24 84 00 00 00               	mov dword ptr [esp + 0x84], edi
0x110cf:    74 57                              	je 0x11128 <function_11128>
0x110d1:    89 f7                              	mov edi, esi
0x110d3:    8b 17                              	mov edx, dword ptr [edi]
0x110d5:    89 d0                              	mov eax, edx
0x110d7:    c1 f8 1f                           	sar eax, 0x1f
0x110da:    31 d0                              	xor eax, edx
0x110dc:    83 f8 13                           	cmp eax, 0x13
0x110df:    76 7f                              	jbe 0x11160 <function_11160>
0x110e1:    c7 44 24 0c d0 70 00 00            	mov dword ptr [esp + 0xc], 0x70d0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x110e9:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x110f1:    c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x110f9:    c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0x11100 -- 0x11101
0x11100:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11101 -- 0x11102
; data inside code section at 0x11102 -- 0x11105
0x11102:    ff ff ff                                           |...             |
; function: function_11105 at 0x11105 -- 0x11106
; data inside code section at 0x11106 -- 0x11110
0x11106:    5c 24 64 85 db 74 1b 8b  03 85                     |\$d..t....      |
; function: function_11110 at 0x11110 -- 0x1111e
0x11110:    c0 74 08 8b 10                     	sal byte ptr [eax + ecx - 0x75], 0x10 ; "D$\fps"
0x11115:    89 04 24                           	mov dword ptr [esp], eax
0x11118:    ff 52 04                           	call dword ptr [edx + 4]
0x1111b:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1111e -- 0x1111f
0x1111e:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1111f -- 0x11120
; data inside code section at 0x11120 -- 0x11128
0x11120:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_11128 at 0x11128 -- 0x11159
0x11128:    8b 4c 24 6c                        	mov ecx, dword ptr [esp + 0x6c]
0x1112c:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x11133:    0f 85 67 08 00 00                  	jne 0x119a0 <function_119a0>
0x11139:    8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0x1113d:    8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x11144:    8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0x1114b:    8b ac 24 88 00 00 00               	mov ebp, dword ptr [esp + 0x88]
0x11152:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x11158:    c3                                 	ret 
; data inside code section at 0x11159 -- 0x11160
0x11159:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_11160 at 0x11160 -- 0x11167
0x11160:    ff 24 85 9c 1c 01 00               	jmp dword ptr [eax*4 + 0x11c9c]
; data inside code section at 0x11167 -- 0x111a7
0x11167:    90 8d 44 24 30 e8 1f ff  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0x11177:    00 85 d2 0f 88 40 03 00  00 8b 4f 08 89 fa 29 f2   |.....@....O...).|
0x11187:    c7 44 24 44 00 00 00 00  89 54 24 20 85 c9 89 4c   |.D$D.....T$ ...L|
0x11197:    24 48 0f 84 09 03 00 00  8b 41 04 85 c0 74 0a 89   |$H.......A...t..|
; function: function_111a7 at 0x111a7 -- 0x111aa
0x111a7:    c2 42 f0                           	ret 0xf042
; data inside code section at 0x111aa -- 0x111d0
0x111aa:    0f b1 51 04 75 f2 85 c0  0f 84 e8 02 00 00 8b 54   |..Q.u..........T|
0x111ba:    24 20 8b 44 16 04 89 4c  24 68 89 44 24 44 89 44   |$ .D...L$h.D$D.D|
0x111ca:    24 64 f0 ff 41 04                                  |$d..A.          |
; function: function_111d0 at 0x111d0 -- 0x111d1
; data inside code section at 0x111d1 -- 0x111e4
0x111d1:    44 24 48 c7 44 24 60 00  00 00 00 89 04 24 e8 8c   |D$H.D$`......$..|
0x111e1:    48 00 00                                           |H..             |
; function: function_111e4 at 0x111e4 -- 0x111e5
; data inside code section at 0x111e5 -- 0x11216
0x111e5:    17 89 d0 c1 f8 1f 31 d0  83 f8 13 0f 86 92 01 00   |......1.........|
0x111f5:    00 c7 44 24 0c 10 61 00  00 c7 44 24 08 cf 00 00   |..D$..a...D$....|
0x11205:    00 c7 44 24 04 2c 33 00  00 c7 04 24 8a 1f 00 00   |..D$.,3....$....|
0x11215:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11216 -- 0x11217
; data inside code section at 0x11217 -- 0x11219
0x11217:    ff ff                                              |..              |
; function: function_11219 at 0x11219 -- 0x11277
0x11219:    ff 8d b6 00 00 00                  	dec dword ptr [ebp + 0xb6]
0x1121f:    00 85 d2 8b 47 04                  	add byte ptr [ebp + 0x4478bd2], al
0x11225:    0f 88 fd 02 00 00                  	js 0x11528 <function_11528>
0x1122b:    85 c0                              	test eax, eax
0x1122d:    0f 84 9c 08 00 00                  	je 0x11acf <function_11acf>
0x11233:    8b 10                              	mov edx, dword ptr [eax]
0x11235:    8d 4c 24 54                        	lea ecx, [esp + 0x54]
0x11239:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1123d:    89 0c 24                           	mov dword ptr [esp], ecx
0x11240:    ff 52 08                           	call dword ptr [edx + 8]
0x11243:    83 ec 04                           	sub esp, 4
0x11246:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1124a:    8b 10                              	mov edx, dword ptr [eax]
0x1124c:    89 04 24                           	mov dword ptr [esp], eax
0x1124f:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x11252:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x11256:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1125a:    c7 44 24 60 01 00 00 00            	mov dword ptr [esp + 0x60], 1
0x11262:    85 c0                              	test eax, eax
0x11264:    0f 84 7a ff ff ff                  	je 0x111e4 <function_111e4>
0x1126a:    8b 10                              	mov edx, dword ptr [eax]
0x1126c:    89 04 24                           	mov dword ptr [esp], eax
0x1126f:    ff 52 04                           	call dword ptr [edx + 4]
0x11272:    e9 6d ff ff ff                     	jmp 0x111e4 <function_111e4>
; data inside code section at 0x11277 -- 0x11278
0x11277:    90                                                 |.               |
; function: function_11278 at 0x11278 -- 0x1138f
0x11278:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1127c:    e8 0f fe ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11281:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11288:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1128c:    e8 ff fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11291:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11298:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1129c:    e8 ef fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112a1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112a8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112ac:    e8 df fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112b1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112b8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112bc:    e8 cf fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112c1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112c8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112cc:    e8 bf fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112d1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112d8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112dc:    e8 af fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112e1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112e8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112ec:    e8 9f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x112f1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x112f8:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x112fc:    e8 8f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11301:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11308:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1130c:    e8 7f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11311:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11318:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1131c:    e8 6f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11321:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11328:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1132c:    e8 5f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11331:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11338:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1133c:    e8 4f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11341:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11348:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1134c:    e8 3f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11351:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11358:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1135c:    e8 2f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11361:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11368:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1136c:    e8 1f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11371:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11378:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x1137c:    e8 0f fd ff ff                     	call 0x11090 <_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_>
0x11381:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x11388:    ff 24 85 ec 1c 01 00               	jmp dword ptr [eax*4 + 0x11cec]
; data inside code section at 0x1138f -- 0x1139d
0x1138f:    e8 bc fd ff ff e8 b7 fd  ff ff e8 b2 fd ff         |..............  |
; function: function_1139d at 0x1139d -- 0x113a0
0x1139d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; data inside code section at 0x113a0 -- 0x1140d
0x113a0:    e8 ab fd ff ff e8 a6 fd  ff ff e8 a1 fd ff ff 90   |................|
0x113b0:    e8 9b fd ff ff e8 96 fd  ff ff e8 91 fd ff ff 90   |................|
0x113c0:    e8 8b fd ff ff e8 86 fd  ff ff e8 81 fd ff ff 90   |................|
0x113d0:    e8 7b fd ff ff e8 76 fd  ff ff e8 71 fd ff ff 90   |.{....v....q....|
0x113e0:    e8 6b fd ff ff e8 66 fd  ff ff 85 d2 8b 47 04 0f   |.k....f......G..|
0x113f0:    88 90 04 00 00 85 c0 0f  84 f6 06 00 00 8b 10 8d   |................|
0x11400:    4c 24 60 89 04 24 89 4c  24 20 ff 52 0c            |L$`..$.L$ .R.   |
; function: function_1140d at 0x1140d -- 0x1140e
; data inside code section at 0x1140e -- 0x11430
0x1140e:    c0 0f 85 90 05 00 00 8b  85 80 00 00 00 3b 45 78   |.............;Ex|
0x1141e:    0f 84 6c 02 00 00 8d 14  40 c1 e2 02 03 55 7c 89   |..l.....@....U|.|
0x1142e:    54 24                                              |T$              |
; function: function_11430 at 0x11430 -- 0x11472
0x11430:    24 0f                              	and al, 0xf
0x11432:    84 69 03                           	test byte ptr [ecx + 3], ch
0x11435:    00 00                              	add byte ptr [eax], al
0x11437:    8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x1143b:    8d 4c 24 60                        	lea ecx, [esp + 0x60]
0x1143f:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x11443:    89 d0                              	mov eax, edx
0x11445:    c1 f8 1f                           	sar eax, 0x1f
0x11448:    31 d0                              	xor eax, edx
0x1144a:    83 f8 13                           	cmp eax, 0x13
0x1144d:    0f 86 35 01 00 00                  	jbe 0x11588 <function_11588>
0x11453:    c7 44 24 0c 90 75 00 00            	mov dword ptr [esp + 0xc], 0x7590 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x1145b:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x11463:    c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x1146b:    c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0x11472 -- 0x11473
0x11472:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11473 -- 0x11474
; data inside code section at 0x11474 -- 0x11478
0x11474:    ff ff ff 90                                        |....            |
; function: function_11478 at 0x11478 -- 0x11496
0x11478:    85 d2                              	test edx, edx
0x1147a:    0f 88 f0 03 00 00                  	js 0x11870 <function_11870>
0x11480:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x11483:    31 c0                              	xor eax, eax
0x11485:    85 d2                              	test edx, edx
0x11487:    74 03                              	je 0x1148c <function_11478+0x14>
0x11489:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x1148c:    85 c0                              	test eax, eax
0x1148e:    0f 94 c0                           	sete al
0x11491:    e9 77 ff ff ff                     	jmp 0x1140d <function_1140d>
; function: function_11496 at 0x11496 -- 0x114bd
0x11496:    e8 b5 fc ff ff                     	call 0x11150 <function_11150>
0x1149b:    90                                 	nop 
0x1149c:    8d 74 26 00                        	lea esi, [esi]
0x114a0:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x114a8:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x114ac:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x114b4:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x114b8:    e9 13 fd ff ff                     	jmp 0x111d0 <function_111d0>
; data inside code section at 0x114bd -- 0x114c0
0x114bd:    8d 76 00                                           |.v.             |
; function: function_114c0 at 0x114c0 -- 0x11522
0x114c0:    8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0x114c3:    c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x114cb:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x114cf:    8b 49 04                           	mov ecx, dword ptr [ecx + 4]
0x114d2:    85 c9                              	test ecx, ecx
0x114d4:    89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0x114d8:    0f 84 98 00 00 00                  	je 0x11576 <function_11576>
0x114de:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x114e1:    85 c0                              	test eax, eax
0x114e3:    74 0a                              	je 0x114ef <function_114c0+0x2f>
0x114e5:    89 c2                              	mov edx, eax
0x114e7:    42                                 	inc edx
0x114e8:    f0 0f b1 51 04                     	lock cmpxchg dword ptr [ecx + 4], edx
0x114ed:    75 f2                              	jne 0x114e1 <function_114c0+0x21>
0x114ef:    85 c0                              	test eax, eax
0x114f1:    74 7b                              	je 0x1156e <function_1156e>
0x114f3:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x114f7:    8b 02                              	mov eax, dword ptr [edx]
0x114f9:    89 4c 24 68                        	mov dword ptr [esp + 0x68], ecx
0x114fd:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x11501:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x11505:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x11509:    8d 44 24 50                        	lea eax, [esp + 0x50]
0x1150d:    c7 44 24 60 00 00 00 00            	mov dword ptr [esp + 0x60], 0
0x11515:    89 04 24                           	mov dword ptr [esp], eax
0x11518:    e8 53 45 00 00                     	call 0x15a70 <unknown_15a70>
0x1151d:    e9 c2 fc ff ff                     	jmp 0x111e4 <function_111e4>
; data inside code section at 0x11522 -- 0x11528
0x11522:    8d b6 00 00 00 00                                  |......          |
; function: function_11528 at 0x11528 -- 0x1156e
0x11528:    8b 00                              	mov eax, dword ptr [eax]
0x1152a:    85 c0                              	test eax, eax
0x1152c:    0f 84 27 05 00 00                  	je 0x11a59 <function_11a59>
0x11532:    8b 10                              	mov edx, dword ptr [eax]
0x11534:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x11538:    8d 44 24 58                        	lea eax, [esp + 0x58]
0x1153c:    89 04 24                           	mov dword ptr [esp], eax
0x1153f:    ff 52 08                           	call dword ptr [edx + 8]
0x11542:    83 ec 04                           	sub esp, 4
0x11545:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x11549:    8b 10                              	mov edx, dword ptr [eax]
0x1154b:    89 04 24                           	mov dword ptr [esp], eax
0x1154e:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x11551:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x11555:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x11559:    c7 44 24 60 01 00 00 00            	mov dword ptr [esp + 0x60], 1
0x11561:    85 c0                              	test eax, eax
0x11563:    0f 85 01 fd ff ff                  	jne 0x1126a
0x11569:    e9 76 fc ff ff                     	jmp 0x111e4 <function_111e4>
; function: function_1156e at 0x1156e -- 0x11576
0x1156e:    c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
; function: function_11576 at 0x11576 -- 0x11588
0x11576:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x1157a:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x11582:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x11586:    eb 81                              	jmp 0x11509
; function: function_11588 at 0x11588 -- 0x1158f
0x11588:    ff 24 85 3c 1d 01 00               	jmp dword ptr [eax*4 + 0x11d3c]
; data inside code section at 0x1158f -- 0x1159d
0x1158f:    e8 3c fb ff ff e8 37 fb  ff ff e8 32 fb ff         |.<....7....2..  |
; function: function_1159d at 0x1159d -- 0x115a0
0x1159d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; data inside code section at 0x115a0 -- 0x115dd
0x115a0:    e8 2b fb ff ff e8 26 fb  ff ff e8 21 fb ff ff 90   |.+....&....!....|
0x115b0:    e8 1b fb ff ff e8 16 fb  ff ff e8 11 fb ff ff 90   |................|
0x115c0:    e8 0b fb ff ff e8 06 fb  ff ff e8 01 fb ff ff 90   |................|
0x115d0:    e8 fb fa ff ff e8 f6 fa  ff ff e8 f1 fa            |.............   |
; function: function_115dd at 0x115dd -- 0x115de
; data inside code section at 0x115de -- 0x115e1
0x115de:    ff 90 e8                                           |...             |
; function: function_115e1 at 0x115e1 -- 0x115e3
0x115e1:    eb fa                              	jmp 0x115dd <function_115dd>
; data inside code section at 0x115e3 -- 0x11605
0x115e3:    ff ff e8 e6 fa ff ff 85  d2 8b 44 24 64 0f 88 e7   |..........D$d...|
0x115f3:    03 00 00 8b 10 89 04 24  ff 52 0c 8b 54 24 24 89   |.......$.R..T$$.|
0x11603:    42 04                                              |B.              |
; function: function_11605 at 0x11605 -- 0x11606
; data inside code section at 0x11606 -- 0x11610
0x11606:    54 24 20 8b 4c 24 24 8b  02 89                     |T$ .L$$...      |
; function: function_11610 at 0x11610 -- 0x11613
0x11610:    c2 c1 fa                           	ret 0xfac1
; data inside code section at 0x11613 -- 0x1161e
0x11613:    1f 31 d0 89 01 8b 85 80  00 00 00                  |.1.........     |
; function: function_1161e at 0x1161e -- 0x1161f
; data inside code section at 0x1161f -- 0x11627
0x1161f:    c0 01 89 85 80 00 00 00                            |........        |
; function: function_11627 at 0x11627 -- 0x11628
; data inside code section at 0x11628 -- 0x1165d
0x11628:    44 24 20 8b 10 89 d0 c1  f8 1f 31 d0 83 f8 13 0f   |D$ .......1.....|
0x11638:    86 70 01 00 00 c7 44 24  0c 30 6a 00 00 c7 44 24   |.p....D$.0j...D$|
0x11648:    08 cf 00 00 00 c7 44 24  04 2c 33 00 00 c7 04 24   |......D$.,3....$|
0x11658:    8a 1f 00 00 e8                                     |.....           |
; dynamically linked function: __assert_fail at 0x1165d -- 0x1165e
; data inside code section at 0x1165e -- 0x11660
0x1165e:    ff ff                                              |..              |
; function: function_11660 at 0x11660 -- 0x11685
0x11660:    ff 85 d2 8b 44 24                  	inc dword ptr [ebp + 0x24448bd2]
0x11666:    64 0f 88 8d 03 00 00               	js 0x119fa <function_119fa>
0x1166d:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x11671:    89 42 04                           	mov dword ptr [edx + 4], eax
0x11674:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x11678:    85 c0                              	test eax, eax
0x1167a:    89 42 08                           	mov dword ptr [edx + 8], eax
0x1167d:    74 86                              	je 0x11605 <function_11605>
0x1167f:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x11683:    eb 80                              	jmp 0x11605 <function_11605>
; data inside code section at 0x11685 -- 0x11691
0x11685:    e8 46 fa ff ff 8d b6 00  00 00 00 83               |.F..........    |
; function: function_11691 at 0x11691 -- 0x116b2
0x11691:    f8                                 	clc 
0x11692:    09 0f                              	or dword ptr [edi], ecx
0x11694:    86 9f 04 00 00 8d                  	xchg byte ptr [edi - 0x72fffffc], bl
0x1169a:    50                                 	push eax
0x1169b:    01 39                              	add dword ptr [ecx], edi
0x1169d:    d0 89 54 24 24 0f                  	ror byte ptr [ecx + 0xf242454], 1
0x116a3:    83 8b 04 00 00 c1 e0               	or dword ptr [ebx - 0x3efffffc], 0xffffffe0
0x116aa:    02 39                              	add bh, byte ptr [ecx]
0x116ac:    d0 0f                              	ror byte ptr [edi], 1
0x116ae:    42                                 	inc edx
0x116af:    c2 89 44                           	ret 0x4489
; data inside code section at 0x116b2 -- 0x116e8
0x116b2:    24 28 8b 4c 24 28 8d 44  24 5f 89 44 24 08 8d 44   |$(.L$(.D$_.D$..D|
0x116c2:    24 60 89 2c 24 89 44 24  20 89 4c 24 04 e8 6c 08   |$`.,$.D$ .L$..l.|
0x116d2:    01 00 8b 55 7c 89 44 24  2c 85 d2 74 37 8b 45 78   |...U|.D$,..t7.Ex|
0x116e2:    83 f8 09 0f 86 34                                  |.....4          |
; function: function_116e8 at 0x116e8 -- 0x116f3
0x116e8:    03 00                              	add eax, dword ptr [eax]
0x116ea:    00 39                              	add byte ptr [ecx], bh
0x116ec:    ea 0f 84 23 03 00 00               	ljmp 0:0x323840f <function_323840f>
; data inside code section at 0x116f3 -- 0x11709
0x116f3:    8b 8d 80 00 00 00 39 c8  0f 82 1e 03 00 00 85 c9   |......9.........|
0x11703:    0f 85 6e 02 00 00                                  |..n...          |
; function: function_11709 at 0x11709 -- 0x1170a
; data inside code section at 0x1170a -- 0x11712
0x1170a:    f8 0a 76 08 89 14 24 e8                            |..v...$.        |
; dynamically linked function: _ZdlPv at 0x11712 -- 0x11713
; data inside code section at 0x11713 -- 0x11746
0x11713:    ff ff ff 8b 44 24 2c 8b  54 24 28 89 45 7c 8b 85   |....D$,.T$(.E|..|
0x11723:    80 00 00 00 89 55 78 39  d0 0f 87 88 04 00 00 8b   |.....Ux9........|
0x11733:    4c 24 28 39 4c 24 24 0f  87 56 04 00 00 3b 44 24   |L$(9L$$..V...;D$|
0x11743:    28 0f 84                                           |(..             |
; function: function_11746 at 0x11746 -- 0x1174b
0x11746:    e9 03 00 00 8d                     	jmp 0x8d01174e <function_8d01174e>
; data inside code section at 0x1174b -- 0x11799
0x1174b:    04 40 c1 e0 02 03 45 7c  89 44 24 24 0f 84 10 02   |.@....E|.D$$....|
0x1175b:    00 00 8d 54 24 60 89 54  24 20 8b 54 24 60 89 d0   |...T$`.T$ .T$`..|
0x1176b:    c1 f8 1f 31 d0 83 f8 13  0f 86 2b 01 00 00 c7 44   |...1......+....D|
0x1177b:    24 0c 90 75 00 00 c7 44  24 08 cf 00 00 00 c7 44   |$..u...D$......D|
0x1178b:    24 04 2c 33 00 00 c7 04  24 8a 1f 00 00 e8         |$.,3....$.....  |
; dynamically linked function: __assert_fail at 0x11799 -- 0x1179a
; data inside code section at 0x1179a -- 0x1179c
0x1179a:    ff ff                                              |..              |
; function: function_1179c at 0x1179c -- 0x117ad
0x1179c:    ff 8d 76 00 8d 54                  	dec dword ptr [ebp + 0x548d0076]
0x117a2:    24 60                              	and al, 0x60
0x117a4:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x117a8:    e9 71 fe ff ff                     	jmp 0x1161e <function_1161e>
; function: function_117ad at 0x117ad -- 0x117b4
0x117ad:    ff 24 85 8c 1d 01 00               	jmp dword ptr [eax*4 + 0x11d8c]
; data inside code section at 0x117b4 -- 0x117e0
0x117b4:    e8 57 f9 ff ff 8d b4 26  00 00 00 00 e8 4b f9 ff   |.W.....&.....K..|
0x117c4:    ff e8 46 f9 ff ff e8 41  f9 ff ff 90 e8 3b f9 ff   |..F....A.....;..|
0x117d4:    ff e8 36 f9 ff ff e8 31  f9 ff ff 90               |..6....1....    |
; function: function_117e0 at 0x117e0 -- 0x1183e
0x117e0:    e8 2b f9 ff ff                     	call 0x11110 <function_11110>
0x117e5:    e8 26 f9 ff ff                     	call 0x11110 <function_11110>
0x117ea:    e8 21 f9 ff ff                     	call 0x11110 <function_11110>
0x117ef:    90                                 	nop 
0x117f0:    e8 1b f9 ff ff                     	call 0x11110 <function_11110>
0x117f5:    e8 16 f9 ff ff                     	call 0x11110 <function_11110>
0x117fa:    e8 11 f9 ff ff                     	call 0x11110 <function_11110>
0x117ff:    90                                 	nop 
0x11800:    e8 0b f9 ff ff                     	call 0x11110 <function_11110>
0x11805:    e8 06 f9 ff ff                     	call 0x11110 <function_11110>
0x1180a:    e8 01 f9 ff ff                     	call 0x11110 <function_11110>
0x1180f:    90                                 	nop 
0x11810:    e8 fb f8 ff ff                     	call 0x11110 <function_11110>
0x11815:    85 d2                              	test edx, edx
0x11817:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x1181b:    0f 88 83 02 00 00                  	js 0x11aa4 <function_11aa4>
0x11821:    85 c0                              	test eax, eax
0x11823:    74 08                              	je 0x1182d <function_117e0+0x4d>
0x11825:    8b 10                              	mov edx, dword ptr [eax]
0x11827:    89 04 24                           	mov dword ptr [esp], eax
0x1182a:    ff 52 04                           	call dword ptr [edx + 4]
0x1182d:    83 c7 0c                           	add edi, 0xc
0x11830:    39 7b 14                           	cmp dword ptr [ebx + 0x14], edi
0x11833:    0f 85 9a f8 ff ff                  	jne 0x110d3
0x11839:    e9 ea f8 ff ff                     	jmp 0x11128 <function_11128>
; data inside code section at 0x1183e -- 0x11865
0x1183e:    85 d2 0f 89 4d 02 00 00  8b 44 24 64 85 c0 74 df   |....M....D$d..t.|
0x1184e:    8d 50 04 89 44 24 1c 89  14 24 e8 13 42 00 00 8b   |.P..D$...$..B...|
0x1185e:    44 24 1c 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _ZdlPv at 0x11865 -- 0x11866
; data inside code section at 0x11866 -- 0x11869
0x11866:    ff ff ff                                           |...             |
; function: function_11869 at 0x11869 -- 0x1186b
0x11869:    eb c2                              	jmp 0x1182d
; data inside code section at 0x1186b -- 0x11870
0x1186b:    e8 a0 f8 ff ff                                     |.....           |
; function: function_11870 at 0x11870 -- 0x11885
0x11870:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x11873:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x11876:    31 c0                              	xor eax, eax
0x11878:    85 d2                              	test edx, edx
0x1187a:    0f 85 09 fc ff ff                  	jne 0x11489
0x11880:    e9 07 fc ff ff                     	jmp 0x1148c
; function: function_11885 at 0x11885 -- 0x118a4
0x11885:    8b 00                              	mov eax, dword ptr [eax]
0x11887:    85 c0                              	test eax, eax
0x11889:    0f 84 e3 02 00 00                  	je 0x11b72 <function_11b72>
0x1188f:    8b 10                              	mov edx, dword ptr [eax]
0x11891:    89 04 24                           	mov dword ptr [esp], eax
0x11894:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x11898:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1189c:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1189f:    e9 69 fb ff ff                     	jmp 0x1140d <function_1140d>
; function: function_118a4 at 0x118a4 -- 0x118ab
0x118a4:    ff 24 85 dc 1d 01 00               	jmp dword ptr [eax*4 + 0x11ddc]
; data inside code section at 0x118ab -- 0x118b0
0x118ab:    90 8d 74 26 00                                     |..t&.           |
; function: function_118b0 at 0x118b0 -- 0x11944
0x118b0:    e8 1b f8 ff ff                     	call 0x110d0
0x118b5:    e8 16 f8 ff ff                     	call 0x110d0
0x118ba:    e8 11 f8 ff ff                     	call 0x110d0
0x118bf:    90                                 	nop 
0x118c0:    e8 0b f8 ff ff                     	call 0x110d0
0x118c5:    e8 06 f8 ff ff                     	call 0x110d0
0x118ca:    e8 01 f8 ff ff                     	call 0x110d0
0x118cf:    90                                 	nop 
0x118d0:    e8 fb f7 ff ff                     	call 0x110d0
0x118d5:    e8 f6 f7 ff ff                     	call 0x110d0
0x118da:    e8 f1 f7 ff ff                     	call 0x110d0
0x118df:    90                                 	nop 
0x118e0:    e8 eb f7 ff ff                     	call 0x110d0
0x118e5:    e8 e6 f7 ff ff                     	call 0x110d0
0x118ea:    e8 e1 f7 ff ff                     	call 0x110d0
0x118ef:    90                                 	nop 
0x118f0:    e8 db f7 ff ff                     	call 0x110d0
0x118f5:    e8 d6 f7 ff ff                     	call 0x110d0
0x118fa:    e8 d1 f7 ff ff                     	call 0x110d0
0x118ff:    90                                 	nop 
0x11900:    e8 cb f7 ff ff                     	call 0x110d0
0x11905:    e8 c6 f7 ff ff                     	call 0x110d0
0x1190a:    85 d2                              	test edx, edx
0x1190c:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x11910:    0f 88 46 02 00 00                  	js 0x11b5c <function_11b5c>
0x11916:    8b 10                              	mov edx, dword ptr [eax]
0x11918:    89 04 24                           	mov dword ptr [esp], eax
0x1191b:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1191e:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x11922:    89 42 04                           	mov dword ptr [edx + 4], eax
0x11925:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x11929:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x1192d:    8b 02                              	mov eax, dword ptr [edx]
0x1192f:    89 c2                              	mov edx, eax
0x11931:    c1 fa 1f                           	sar edx, 0x1f
0x11934:    31 d0                              	xor eax, edx
0x11936:    89 01                              	mov dword ptr [ecx], eax
0x11938:    83 85 80 00 00 00 01               	add dword ptr [ebp + 0x80], 1
0x1193f:    e9 e3 fc ff ff                     	jmp 0x11627 <function_11627>
; function: function_11944 at 0x11944 -- 0x11968
0x11944:    85 d2                              	test edx, edx
0x11946:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x1194a:    0f 88 c7 01 00 00                  	js 0x11b17 <function_11b17>
0x11950:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x11954:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x11957:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x1195b:    85 c0                              	test eax, eax
0x1195d:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x11960:    74 c3                              	je 0x11925
0x11962:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x11966:    eb bd                              	jmp 0x11925
; function: function_11968 at 0x11968 -- 0x11977
0x11968:    e8 63 f7 ff ff                     	call 0x110d0
0x1196d:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x11971:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x11975:    eb c1                              	jmp 0x11938
; function: function_11977 at 0x11977 -- 0x119a0
0x11977:    8d 45 7c                           	lea eax, [ebp + 0x7c]
0x1197a:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1197e:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x11982:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x11986:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1198a:    8d 95 80 00 00 00                  	lea edx, [ebp + 0x80]
0x11990:    e8 cb f8 ff ff                     	call 0x11260
0x11995:    8b 45 78                           	mov eax, dword ptr [ebp + 0x78]
0x11998:    8b 55 7c                           	mov edx, dword ptr [ebp + 0x7c]
0x1199b:    e9 69 fd ff ff                     	jmp 0x11709 <function_11709>
; function: function_119a0 at 0x119a0 -- 0x119a1
; dynamically linked function: __stack_chk_fail at 0x119a1 -- 0x119a2
; data inside code section at 0x119a2 -- 0x119ae
0x119a2:    ff ff ff 8b 44 24 60 c6  43 04 00 89               |....D$`.C...    |
; function: function_119ae at 0x119ae -- 0x119b1
0x119ae:    c2 c1 fa                           	ret 0xfac1
; data inside code section at 0x119b1 -- 0x119b3
0x119b1:    1f 31                                              |.1              |
; function: function_119b3 at 0x119b3 -- 0x119b6
0x119b3:    c2 83 fa                           	ret 0xfa83
; data inside code section at 0x119b6 -- 0x119d9
0x119b6:    13 76 3a c7 44 24 0c 30  6a 00 00 c7 44 24 08 cf   |.v:.D$.0j...D$..|
0x119c6:    00 00 00 c7 44 24 04 2c  33 00 00 c7 04 24 8a 1f   |....D$.,3....$..|
0x119d6:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x119d9 -- 0x119da
; data inside code section at 0x119da -- 0x119dc
0x119da:    ff ff                                              |..              |
; function: function_119dc at 0x119dc -- 0x119f3
0x119dc:    ff 8b 00 8b 10 89                  	dec dword ptr [ebx - 0x76ef7500]
0x119e2:    04 24                              	add al, 0x24
0x119e4:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x119e7:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x119eb:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x119ee:    e9 12 fc ff ff                     	jmp 0x11605 <function_11605>
; function: function_119f3 at 0x119f3 -- 0x119fa
0x119f3:    ff 24 95 2c 1e 01 00               	jmp dword ptr [edx*4 + 0x11e2c]
; function: function_119fa at 0x119fa -- 0x11a16
0x119fa:    8b 10                              	mov edx, dword ptr [eax]
0x119fc:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x119ff:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x11a03:    85 c0                              	test eax, eax
0x11a05:    89 51 04                           	mov dword ptr [ecx + 4], edx
0x11a08:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x11a0b:    0f 85 6e fc ff ff                  	jne 0x1167f
0x11a11:    e9 ef fb ff ff                     	jmp 0x11605 <function_11605>
; data inside code section at 0x11a16 -- 0x11a1e
0x11a16:    83 f8 0a 0f 84 d4 fc ff                            |........        |
; function: function_11a1e at 0x11a1e -- 0x11a2b
0x11a1e:    ff 90 e8 71 30 00                  	call dword ptr [eax + 0x3071e8]
0x11a24:    00 8b 54 24 54 89                  	add byte ptr [ebx - 0x76abdbac], cl
0x11a2a:    c3                                 	ret 
; data inside code section at 0x11a2b -- 0x11a3b
0x11a2b:    85 d2 74 08 8b 02 89 14  24 ff 50 04 89 1c 24 e8   |..t.....$.P...$.|
; dynamically linked function: _Unwind_Resume at 0x11a3b -- 0x11a3c
; data inside code section at 0x11a3c -- 0x11a3e
0x11a3c:    ff ff                                              |..              |
; function: function_11a3e at 0x11a3e -- 0x11a45
0x11a3e:    ff 8b 54 24 58 89                  	dec dword ptr [ebx - 0x76a7dbac]
0x11a44:    c3                                 	ret 
; data inside code section at 0x11a45 -- 0x11a55
0x11a45:    85 d2 74 08 8b 02 89 14  24 ff 50 04 89 1c 24 e8   |..t.....$.P...$.|
; dynamically linked function: _Unwind_Resume at 0x11a55 -- 0x11a56
; data inside code section at 0x11a56 -- 0x11a59
0x11a56:    ff ff ff                                           |...             |
; function: function_11a59 at 0x11a59 -- 0x11a78
0x11a59:    c7 44 24 0c 90 60 00 00            	mov dword ptr [esp + 0xc], 0x6090 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x11a61:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x11a69:    c7 44 24 04 cc 36 00 00            	mov dword ptr [esp + 4], 0x36cc ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x11a71:    c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x11a78 -- 0x11a79
0x11a78:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11a79 -- 0x11a7a
; data inside code section at 0x11a7a -- 0x11a7c
0x11a7a:    ff ff                                              |..              |
; function: function_11a7c at 0x11a7c -- 0x11a83
0x11a7c:    ff 8b 54 24 20 89                  	dec dword ptr [ebx - 0x76dfdbac]
0x11a82:    c3                                 	ret 
; data inside code section at 0x11a83 -- 0x11a8f
0x11a83:    89 14 24 e8 55 8f 00 00  89 1c 24 e8               |..$.U.....$.    |
; dynamically linked function: _Unwind_Resume at 0x11a8f -- 0x11a90
; data inside code section at 0x11a90 -- 0x11a92
0x11a90:    ff ff                                              |..              |
; function: function_11a92 at 0x11a92 -- 0x11aa4
0x11a92:    ff 8d 44 24 68 89                  	dec dword ptr [ebp - 0x7697dbbc]
0x11a98:    04 24                              	add al, 0x24
0x11a9a:    e8 d1 3f 00 00                     	call 0x15a70 <unknown_15a70>
0x11a9f:    e9 89 fd ff ff                     	jmp 0x1182d
; function: function_11aa4 at 0x11aa4 -- 0x11ac5
0x11aa4:    85 c0                              	test eax, eax
0x11aa6:    0f 84 81 fd ff ff                  	je 0x1182d
0x11aac:    8b 10                              	mov edx, dword ptr [eax]
0x11aae:    85 d2                              	test edx, edx
0x11ab0:    74 10                              	je 0x11ac2 <function_11aa4+0x1e>
0x11ab2:    8b 0a                              	mov ecx, dword ptr [edx]
0x11ab4:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11ab8:    89 14 24                           	mov dword ptr [esp], edx
0x11abb:    ff 51 04                           	call dword ptr [ecx + 4]
0x11abe:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x11ac2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x11ac5 -- 0x11ac6
0x11ac5:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x11ac6 -- 0x11ac7
; data inside code section at 0x11ac7 -- 0x11aca
0x11ac7:    ff ff ff                                           |...             |
; function: function_11aca at 0x11aca -- 0x11acf
0x11aca:    e9 5e fd ff ff                     	jmp 0x1182d
; function: function_11acf at 0x11acf -- 0x11aee
0x11acf:    c7 44 24 0c 90 60 00 00            	mov dword ptr [esp + 0xc], 0x6090 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x11ad7:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x11adf:    c7 44 24 04 cc 36 00 00            	mov dword ptr [esp + 4], 0x36cc ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x11ae7:    c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x11aee -- 0x11aef
0x11aee:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11aef -- 0x11af0
; data inside code section at 0x11af0 -- 0x11b13
0x11af0:    ff ff ff c7 44 24 0c 90  60 00 00 c7 44 24 08 61   |....D$..`...D$.a|
0x11b00:    00 00 00 c7 44 24 04 cc  36 00 00 c7 04 24 6b 1f   |....D$..6....$k.|
0x11b10:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x11b13 -- 0x11b14
; data inside code section at 0x11b14 -- 0x11b17
0x11b14:    ff ff ff                                           |...             |
; function: function_11b17 at 0x11b17 -- 0x11b33
0x11b17:    8b 10                              	mov edx, dword ptr [eax]
0x11b19:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x11b1c:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x11b20:    85 c0                              	test eax, eax
0x11b22:    89 51 04                           	mov dword ptr [ecx + 4], edx
0x11b25:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x11b28:    0f 85 34 fe ff ff                  	jne 0x11962 <function_11962>
0x11b2e:    e9 f2 fd ff ff                     	jmp 0x11925
; data inside code section at 0x11b33 -- 0x11b58
0x11b33:    e8 92 2f 00 00 c7 44 24  0c 70 7c 00 00 c7 44 24   |../...D$.p|...D$|
0x11b43:    08 15 03 00 00 c7 44 24  04 64 33 00 00 c7 04 24   |......D$.d3....$|
0x11b53:    fe 20 00 00 e8                                     |. ...           |
; dynamically linked function: __assert_fail at 0x11b58 -- 0x11b59
; data inside code section at 0x11b59 -- 0x11b5c
0x11b59:    ff ff ff                                           |...             |
; function: function_11b5c at 0x11b5c -- 0x11b72
0x11b5c:    8b 00                              	mov eax, dword ptr [eax]
0x11b5e:    8b 10                              	mov edx, dword ptr [eax]
0x11b60:    89 04 24                           	mov dword ptr [esp], eax
0x11b63:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x11b66:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x11b6a:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x11b6d:    e9 b3 fd ff ff                     	jmp 0x11925
; function: function_11b72 at 0x11b72 -- 0x11b91
0x11b72:    c7 44 24 0c 90 60 00 00            	mov dword ptr [esp + 0xc], 0x6090 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x11b7a:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x11b82:    c7 44 24 04 cc 36 00 00            	mov dword ptr [esp + 4], 0x36cc ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x11b8a:    c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x11b91 -- 0x11b92
0x11b91:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11b92 -- 0x11b93
; data inside code section at 0x11b93 -- 0x11bb6
0x11b93:    ff ff ff c7 44 24 0c 70  7c 00 00 c7 44 24 08 1b   |....D$.p|...D$..|
0x11ba3:    03 00 00 c7 44 24 04 64  33 00 00 c7 04 24 32 21   |....D$.d3....$2!|
0x11bb3:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x11bb6 -- 0x11bb7
; data inside code section at 0x11bb7 -- 0x11bda
0x11bb7:    ff ff ff c7 44 24 0c 10  7f 00 00 c7 44 24 08 34   |....D$......D$.4|
0x11bc7:    01 00 00 c7 44 24 04 64  33 00 00 c7 04 24 16 21   |....D$.d3....$.!|
0x11bd7:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x11bda -- 0x11bdb
; data inside code section at 0x11bdb -- 0x11bde
0x11bdb:    ff ff ff                                           |...             |
; function: function_11bde at 0x11bde -- 0x11c5b
0x11bde:    e8 2d f5 ff ff                     	call 0x11110 <function_11110>
0x11be3:    e8 28 f5 ff ff                     	call 0x11110 <function_11110>
0x11be8:    e8 23 f5 ff ff                     	call 0x11110 <function_11110>
0x11bed:    8d 76 00                           	lea esi, [esi]
0x11bf0:    e8 1b f5 ff ff                     	call 0x11110 <function_11110>
0x11bf5:    e8 16 f5 ff ff                     	call 0x11110 <function_11110>
0x11bfa:    e8 11 f5 ff ff                     	call 0x11110 <function_11110>
0x11bff:    90                                 	nop 
0x11c00:    e8 0b f5 ff ff                     	call 0x11110 <function_11110>
0x11c05:    e8 06 f5 ff ff                     	call 0x11110 <function_11110>
0x11c0a:    e8 01 f5 ff ff                     	call 0x11110 <function_11110>
0x11c0f:    90                                 	nop 
0x11c10:    e8 fb f4 ff ff                     	call 0x11110 <function_11110>
0x11c15:    e8 f6 f4 ff ff                     	call 0x11110 <function_11110>
0x11c1a:    e8 f1 f4 ff ff                     	call 0x11110 <function_11110>
0x11c1f:    90                                 	nop 
0x11c20:    e8 eb f4 ff ff                     	call 0x11110 <function_11110>
0x11c25:    e8 e6 f4 ff ff                     	call 0x11110 <function_11110>
0x11c2a:    e8 e1 f4 ff ff                     	call 0x11110 <function_11110>
0x11c2f:    90                                 	nop 
0x11c30:    e8 db f4 ff ff                     	call 0x11110 <function_11110>
0x11c35:    e8 d6 f4 ff ff                     	call 0x11110 <function_11110>
0x11c3a:    85 c0                              	test eax, eax
0x11c3c:    0f 88 c3 f4 ff ff                  	js 0x11105 <function_11105>
0x11c42:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x11c46:    85 c0                              	test eax, eax
0x11c48:    0f 84 da f4 ff ff                  	je 0x11128 <function_11128>
0x11c4e:    8b 10                              	mov edx, dword ptr [eax]
0x11c50:    89 04 24                           	mov dword ptr [esp], eax
0x11c53:    ff 52 04                           	call dword ptr [edx + 4]
0x11c56:    e9 cd f4 ff ff                     	jmp 0x11128 <function_11128>
; data inside code section at 0x11c5b -- 0x11c7d
0x11c5b:    85 c0 8d 76 00 79 29 8b  5c 24 64 85 db 0f 84 ba   |...v.y).\$d.....|
0x11c6b:    f4 ff ff 8d 43 04 89 04  24 e8 f7 3d 00 00 89 1c   |....C...$..=....|
0x11c7b:    24 e8                                              |$.              |
; dynamically linked function: _ZdlPv at 0x11c7d -- 0x11c7e
; data inside code section at 0x11c7e -- 0x11c81
0x11c7e:    ff ff ff                                           |...             |
; function: function_11c81 at 0x11c81 -- 0x11c86
0x11c81:    e9 a2 f4 ff ff                     	jmp 0x11128 <function_11128>
; function: function_11c86 at 0x11c86 -- 0x11c9c
0x11c86:    e8 85 f4 ff ff                     	call 0x11110 <function_11110>
0x11c8b:    8d 44 24 68                        	lea eax, [esp + 0x68]
0x11c8f:    89 04 24                           	mov dword ptr [esp], eax
0x11c92:    e8 d9 3d 00 00                     	call 0x15a70 <unknown_15a70>
0x11c97:    e9 8c f4 ff ff                     	jmp 0x11128 <function_11128>
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS0_10connectionES6_S7_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS6_S7_SE_EESK_EEEEESX_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS0_10connectionES6_S7_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS6_S7_SE_EESK_EEEEESX_E18lock_next_callableEv at 0x11e80 -- 0x11f28
0x11e80:    55                                 	push ebp
0x11e81:    57                                 	push edi
0x11e82:    56                                 	push esi
0x11e83:    53                                 	push ebx
0x11e84:    83 ec 3c                           	sub esp, 0x3c
0x11e87:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x11e8b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11e91:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x11e95:    31 c0                              	xor eax, eax
0x11e97:    8b 06                              	mov eax, dword ptr [esi]
0x11e99:    3b 46 0c                           	cmp eax, dword ptr [esi + 0xc]
0x11e9c:    0f 84 0e 01 00 00                  	je 0x11fb0 <function_11fb0>
0x11ea2:    3b 46 04                           	cmp eax, dword ptr [esi + 4]
0x11ea5:    0f 84 fd 00 00 00                  	je 0x11fa8 <function_11fa8>
0x11eab:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x11eae:    85 ff                              	test edi, edi
0x11eb0:    0f 84 ef 01 00 00                  	je 0x120a5 <function_120a5>
0x11eb6:    8b 07                              	mov eax, dword ptr [edi]
0x11eb8:    89 3c 24                           	mov dword ptr [esp], edi
0x11ebb:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x11ebe:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x11ec1:    8b aa 84 00 00 00                  	mov ebp, dword ptr [edx + 0x84]
0x11ec7:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x11ecb:    85 ed                              	test ebp, ebp
0x11ecd:    74 79                              	je 0x11f48 <function_11f48>
0x11ecf:    8b 8a 80 00 00 00                  	mov ecx, dword ptr [edx + 0x80]
0x11ed5:    8d 44 6d fd                        	lea eax, [ebp + ebp*2 - 3]
0x11ed9:    8d 54 6d 00                        	lea edx, [ebp + ebp*2]
0x11edd:    c1 e2 02                           	shl edx, 2
0x11ee0:    8d 04 81                           	lea eax, [ecx + eax*4]
0x11ee3:    89 c1                              	mov ecx, eax
0x11ee5:    29 d1                              	sub ecx, edx
0x11ee7:    39 c8                              	cmp eax, ecx
0x11ee9:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x11eed:    76 41                              	jbe 0x11f30 <function_11f30>
0x11eef:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x11ef3:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x11ef7:    8b 10                              	mov edx, dword ptr [eax]
0x11ef9:    89 d0                              	mov eax, edx
0x11efb:    c1 f8 1f                           	sar eax, 0x1f
0x11efe:    31 d0                              	xor eax, edx
0x11f00:    83 f8 13                           	cmp eax, 0x13
0x11f03:    0f 86 ef 00 00 00                  	jbe 0x11ff8 <function_11ff8>
0x11f09:    c7 44 24 0c 30 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a30 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x11f11:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x11f19:    c7 44 24 04 2c 33 00 00            	mov dword ptr [esp + 4], 0x332c ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x11f21:    c7 04 24 8a 1f 00 00               	mov dword ptr [esp], 0x1f8a ; "false"
; data inside code section at 0x11f28 -- 0x11f29
0x11f28:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x11f29 -- 0x11f2a
; data inside code section at 0x11f2a -- 0x11f30
0x11f2a:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_11f30 at 0x11f30 -- 0x11f48
0x11f30:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x11f34:    31 c0                              	xor eax, eax
0x11f36:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x11f3a:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x11f3e:    89 81 84 00 00 00                  	mov dword ptr [ecx + 0x84], eax
0x11f44:    8d 74 26 00                        	lea esi, [esi]
; function: function_11f48 at 0x11f48 -- 0x11fa8
0x11f48:    8b 06                              	mov eax, dword ptr [esi]
0x11f4a:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x11f4e:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x11f51:    83 c2 04                           	add edx, 4
0x11f54:    85 c0                              	test eax, eax
0x11f56:    0f 84 41 01 00 00                  	je 0x1209d <function_1209d>
0x11f5c:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x11f60:    89 04 24                           	mov dword ptr [esp], eax
0x11f63:    e8 a8 0f 01 00                     	call 0x22f10 <unknown_22f10>
0x11f68:    8b 06                              	mov eax, dword ptr [esi]
0x11f6a:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x11f6d:    85 c0                              	test eax, eax
0x11f6f:    0f 84 28 01 00 00                  	je 0x1209d <function_1209d>
0x11f75:    80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x11f79:    74 55                              	je 0x11fd0 <function_11fd0>
0x11f7b:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x11f7e:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x11f81:    83 82 90 00 00 00 01               	add dword ptr [edx + 0x90], 1
0x11f88:    85 c0                              	test eax, eax
0x11f8a:    74 07                              	je 0x11f93 <function_11f48+0x4b>
0x11f8c:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x11f8f:    85 c0                              	test eax, eax
0x11f91:    75 47                              	jne 0x11fda <function_11fda>
0x11f93:    8b 06                              	mov eax, dword ptr [esi]
0x11f95:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x11f98:    8b 07                              	mov eax, dword ptr [edi]
0x11f9a:    89 3c 24                           	mov dword ptr [esp], edi
0x11f9d:    ff 50 10                           	call dword ptr [eax + 0x10]
0x11fa0:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x11fa3:    39 06                              	cmp dword ptr [esi], eax
0x11fa5:    75 09                              	jne 0x11fb0 <function_11fb0>
0x11fa7:    90                                 	nop 
; function: function_11fa8 at 0x11fa8 -- 0x11fb0
0x11fa8:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x11fab:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x11fae:    66 90                              	nop 
; function: function_11fb0 at 0x11fb0 -- 0x11fc9
0x11fb0:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x11fb4:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x11fbb:    0f 85 08 01 00 00                  	jne 0x120c9 <function_120c9>
0x11fc1:    83 c4 3c                           	add esp, 0x3c
0x11fc4:    5b                                 	pop ebx
0x11fc5:    5e                                 	pop esi
0x11fc6:    5f                                 	pop edi
0x11fc7:    5d                                 	pop ebp
0x11fc8:    c3                                 	ret 
; data inside code section at 0x11fc9 -- 0x11fd0
0x11fc9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_11fd0 at 0x11fd0 -- 0x11fda
0x11fd0:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x11fd3:    83 80 94 00 00 00 01               	add dword ptr [eax + 0x94], 1
; function: function_11fda at 0x11fda -- 0x11ff3
0x11fda:    8b 07                              	mov eax, dword ptr [edi]
0x11fdc:    89 3c 24                           	mov dword ptr [esp], edi
0x11fdf:    ff 50 10                           	call dword ptr [eax + 0x10]
0x11fe2:    8b 06                              	mov eax, dword ptr [esi]
0x11fe4:    8b 00                              	mov eax, dword ptr [eax]
0x11fe6:    3b 46 04                           	cmp eax, dword ptr [esi + 4]
0x11fe9:    89 06                              	mov dword ptr [esi], eax
0x11feb:    0f 85 ba fe ff ff                  	jne 0x11eab
0x11ff1:    eb b5                              	jmp 0x11fa8 <function_11fa8>
; data inside code section at 0x11ff3 -- 0x11ff8
0x11ff3:    90 8d 74 26 00                                     |..t&.           |
; function: function_11ff8 at 0x11ff8 -- 0x11fff
0x11ff8:    ff 24 85 e0 20 01 00               	jmp dword ptr [eax*4 + 0x120e0]
; data inside code section at 0x11fff -- 0x12000
0x11fff:    90                                                 |.               |
; function: function_12000 at 0x12000 -- 0x1209d
0x12000:    e8 fb fe ff ff                     	call 0x11f00
0x12005:    8d 76 00                           	lea esi, [esi]
0x12008:    85 d2                              	test edx, edx
0x1200a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x12010:    79 5f                              	jns 0x12071 <function_12000+0x71>
0x12012:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x12016:    8b 5a 04                           	mov ebx, dword ptr [edx + 4]
0x12019:    85 db                              	test ebx, ebx
0x1201b:    74 13                              	je 0x12030 <function_12000+0x30>
0x1201d:    8d 43 04                           	lea eax, [ebx + 4]
0x12020:    89 04 24                           	mov dword ptr [esp], eax
0x12023:    e8 38 48 00 00                     	call 0x16860 <unknown_16860>
0x12028:    89 1c 24                           	mov dword ptr [esp], ebx
0x1202b:    e8 fc ff ff ff                     	call 0x1202c
0x12030:    83 6c 24 18 0c                     	sub dword ptr [esp + 0x18], 0xc
0x12035:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x12039:    39 54 24 1c                        	cmp dword ptr [esp + 0x1c], edx
0x1203d:    0f 82 b0 fe ff ff                  	jb 0x11ef3
0x12043:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x12047:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x1204a:    8b 81 84 00 00 00                  	mov eax, dword ptr [ecx + 0x84]
0x12050:    29 e8                              	sub eax, ebp
0x12052:    e9 df fe ff ff                     	jmp 0x11f36
; data inside code section at 0x12057 -- 0x12058
0x12057:    90                                                 |.               |
0x12058:    85 d2                              	test edx, edx
0x1205a:    78 26                              	js 0x12082 <function_12000+0x82>
0x1205c:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x12060:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x12063:    85 c0                              	test eax, eax
0x12065:    74 c9                              	je 0x12030 <function_12000+0x30>
0x12067:    8b 10                              	mov edx, dword ptr [eax]
0x12069:    89 04 24                           	mov dword ptr [esp], eax
0x1206c:    ff 52 04                           	call dword ptr [edx + 4]
0x1206f:    eb bf                              	jmp 0x12030 <function_12000+0x30>
0x12071:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x12075:    83 c0 08                           	add eax, 8
0x12078:    89 04 24                           	mov dword ptr [esp], eax
0x1207b:    e8 e0 47 00 00                     	call 0x16860 <unknown_16860>
0x12080:    eb ae                              	jmp 0x12030 <function_12000+0x30>
0x12082:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x12086:    8b 58 04                           	mov ebx, dword ptr [eax + 4]
0x12089:    85 db                              	test ebx, ebx
0x1208b:    74 a3                              	je 0x12030 <function_12000+0x30>
0x1208d:    8b 03                              	mov eax, dword ptr [ebx]
0x1208f:    85 c0                              	test eax, eax
0x12091:    74 95                              	je 0x12028 <function_12000+0x28>
0x12093:    8b 10                              	mov edx, dword ptr [eax]
0x12095:    89 04 24                           	mov dword ptr [esp], eax
0x12098:    ff 52 04                           	call dword ptr [edx + 4]
0x1209b:    eb 8b                              	jmp 0x12028 <function_12000+0x28>
; function: function_1209d at 0x1209d -- 0x120a5
0x1209d:    8d 76 00                           	lea esi, [esi]
0x120a0:    e8 79 37 00 00                     	call 0x1581e <unknown_1581e>
; function: function_120a5 at 0x120a5 -- 0x120c4
0x120a5:    c7 44 24 0c d0 5c 00 00            	mov dword ptr [esp + 0xc], 0x5cd0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>&]"
0x120ad:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x120b5:    c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x120bd:    c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x120c4 -- 0x120c5
0x120c4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x120c5 -- 0x120c6
; data inside code section at 0x120c6 -- 0x120c9
0x120c6:    ff ff ff                                           |...             |
; function: function_120c9 at 0x120c9 -- 0x120ca
; dynamically linked function: __stack_chk_fail at 0x120ca -- 0x120cb
; data inside code section at 0x120cb -- 0x120cf
0x120cb:    ff ff ff 89                                        |....            |
; function: function_120cf at 0x120cf -- 0x120d0
0x120cf:    c3                                 	ret 
; data inside code section at 0x120d0 -- 0x120e0
0x120d0:    8b 07 89 3c 24 ff 50 10  89 1c 24 e8 fc ff ff ff   |...<$.P...$.....|
; section: .text._ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEEclES5_S6_
; function: _ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEEclES5_S6_ at 0x12130 -- 0x12178
0x12130:    55                                 	push ebp
0x12131:    57                                 	push edi
0x12132:    56                                 	push esi
0x12133:    53                                 	push ebx
0x12134:    81 ec 2c 01 00 00                  	sub esp, 0x12c
0x1213a:    8b 9c 24 40 01 00 00               	mov ebx, dword ptr [esp + 0x140]
0x12141:    8b 84 24 48 01 00 00               	mov eax, dword ptr [esp + 0x148]
0x12148:    8b ac 24 44 01 00 00               	mov ebp, dword ptr [esp + 0x144]
0x1214f:    c7 44 24 60 00 00 00 00            	mov dword ptr [esp + 0x60], 0
0x12157:    8d 73 0c                           	lea esi, [ebx + 0xc]
0x1215a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1215e:    c7 44 24 64 00 00 00 00            	mov dword ptr [esp + 0x64], 0
0x12166:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1216c:    89 84 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], eax
0x12173:    31 c0                              	xor eax, eax
0x12175:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12178 -- 0x12179
0x12178:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x12179 -- 0x1217a
; data inside code section at 0x1217a -- 0x1219e
0x1217a:    ff ff ff 8b 43 04 85 c0  0f 84 30 03 00 00 8b 50   |....C.....0....P|
0x1218a:    04 83 fa 01 0f 84 a1 02  00 00 8b 13 89 44 24 6c   |.............D$l|
0x1219a:    89 54 24 68                                        |.T$h            |
; function: function_1219e at 0x1219e -- 0x121aa
0x1219e:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x121a2:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x121a6:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
; function: function_121aa at 0x121aa -- 0x121d8
0x121aa:    8b 4c 24 60                        	mov ecx, dword ptr [esp + 0x60]
0x121ae:    89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0x121b2:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x121b6:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x121ba:    8d 44 24 6c                        	lea eax, [esp + 0x6c]
0x121be:    89 04 24                           	mov dword ptr [esp], eax
0x121c1:    89 4c 24 68                        	mov dword ptr [esp + 0x68], ecx
0x121c5:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x121c9:    e8 42 49 00 00                     	call 0x16b10 <unknown_16b10>
0x121ce:    89 34 24                           	mov dword ptr [esp], esi
0x121d1:    8d bc 24 88 00 00 00               	lea edi, [esp + 0x88]
; data inside code section at 0x121d8 -- 0x121d9
0x121d8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x121d9 -- 0x121da
; data inside code section at 0x121da -- 0x121dc
0x121da:    ff ff                                              |..              |
; function: function_121dc at 0x121dc -- 0x123b4
0x121dc:    ff 8d 44 24 1c 89                  	dec dword ptr [ebp - 0x76e3dbbc]
0x121e2:    84 24 10                           	test byte ptr [eax + edx], ah
0x121e5:    01 00                              	add dword ptr [eax], eax
0x121e7:    00 8b 44 24 60 8d                  	add byte ptr [ebx - 0x729fdbbc], cl
0x121ed:    b4 24                              	mov ah, 0x24
0x121ef:    84 00                              	test byte ptr [eax], al
0x121f1:    00 00                              	add byte ptr [eax], al
0x121f3:    c6 84 24 84 00 00 00 00            	mov byte ptr [esp + 0x84], 0
0x121fb:    c7 84 24 00 01 00 00 0a 00 00 00   	mov dword ptr [esp + 0x100], 0xa
0x12206:    89 bc 24 04 01 00 00               	mov dword ptr [esp + 0x104], edi
0x1220d:    85 c0                              	test eax, eax
0x1220f:    c7 84 24 08 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x108], 0
0x1221a:    89 ac 24 0c 01 00 00               	mov dword ptr [esp + 0x10c], ebp
0x12221:    c7 84 24 14 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x114], 0
0x1222c:    c7 84 24 18 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x118], 0
0x12237:    0f 84 28 04 00 00                  	je 0x12665 <function_12665>
0x1223d:    8b 00                              	mov eax, dword ptr [eax]
0x1223f:    85 c0                              	test eax, eax
0x12241:    0f 84 d9 03 00 00                  	je 0x12620 <function_12620>
0x12247:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1224b:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1224f:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x12253:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x12257:    8d 44 24 34                        	lea eax, [esp + 0x34]
0x1225b:    89 74 24 54                        	mov dword ptr [esp + 0x54], esi
0x1225f:    89 5c 24 58                        	mov dword ptr [esp + 0x58], ebx
0x12263:    89 74 24 3c                        	mov dword ptr [esp + 0x3c], esi
0x12267:    89 04 24                           	mov dword ptr [esp], eax
0x1226a:    e8 41 1d 01 00                     	call 0x23fb0 <unknown_23fb0>
0x1226f:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x12273:    85 c0                              	test eax, eax
0x12275:    0f 84 ea 03 00 00                  	je 0x12665 <function_12665>
0x1227b:    8b 00                              	mov eax, dword ptr [eax]
0x1227d:    85 c0                              	test eax, eax
0x1227f:    0f 84 9b 03 00 00                  	je 0x12620 <function_12620>
0x12285:    8b 10                              	mov edx, dword ptr [eax]
0x12287:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1228b:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1228f:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x12293:    89 74 24 2c                        	mov dword ptr [esp + 0x2c], esi
0x12297:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1229b:    89 04 24                           	mov dword ptr [esp], eax
0x1229e:    e8 0d 1d 01 00                     	call 0x23fb0 <unknown_23fb0>
0x122a3:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x122a7:    85 c0                              	test eax, eax
0x122a9:    0f 84 b6 03 00 00                  	je 0x12665 <function_12665>
0x122af:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x122b2:    85 db                              	test ebx, ebx
0x122b4:    0f 84 f5 02 00 00                  	je 0x125af <function_125af>
0x122ba:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x122be:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x122c2:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x122c6:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x122ca:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x122ce:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x122d2:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x122d6:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x122da:    89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x122de:    eb 1f                              	jmp 0x122ff <function_121dc+0x123>
0x122e0:    8b 00                              	mov eax, dword ptr [eax]
0x122e2:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x122e6:    8d 44 24 44                        	lea eax, [esp + 0x44]
0x122ea:    89 04 24                           	mov dword ptr [esp], eax
0x122ed:    e8 be 1c 01 00                     	call 0x23fb0 <unknown_23fb0>
0x122f2:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x122f6:    80 38 00                           	cmp byte ptr [eax], 0
0x122f9:    75 5d                              	jne 0x12358 <function_121dc+0x17c>
0x122fb:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x122ff:    39 c3                              	cmp ebx, eax
0x12301:    74 5d                              	je 0x12360 <function_121dc+0x184>
0x12303:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x12307:    80 3a 00                           	cmp byte ptr [edx], 0
0x1230a:    75 d4                              	jne 0x122e0 <function_121dc+0x104>
0x1230c:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x1230f:    8b 8a 8c 00 00 00                  	mov ecx, dword ptr [edx + 0x8c]
0x12315:    8b 92 88 00 00 00                  	mov edx, dword ptr [edx + 0x88]
0x1231b:    85 c0                              	test eax, eax
0x1231d:    8b 09                              	mov ecx, dword ptr [ecx]
0x1231f:    0f 84 a4 01 00 00                  	je 0x124c9 <function_124c9>
0x12325:    8b 68 1c                           	mov ebp, dword ptr [eax + 0x1c]
0x12328:    85 ed                              	test ebp, ebp
0x1232a:    0f 84 9e 01 00 00                  	je 0x124ce <function_124ce>
0x12330:    83 c0 20                           	add eax, 0x20
0x12333:    83 e5 fe                           	and ebp, 0xfffffffe
0x12336:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1233a:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1233e:    89 04 24                           	mov dword ptr [esp], eax
0x12341:    ff 55 04                           	call dword ptr [ebp + 4]
0x12344:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x12348:    80 38 00                           	cmp byte ptr [eax], 0
0x1234b:    75 03                              	jne 0x12350 <function_121dc+0x174>
0x1234d:    c6 00 01                           	mov byte ptr [eax], 1
0x12350:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x12354:    eb 8a                              	jmp 0x122e0 <function_121dc+0x104>
; data inside code section at 0x12356 -- 0x12358
0x12356:    66 90                                              |f.              |
0x12358:    c6 00 00                           	mov byte ptr [eax], 0
0x1235b:    eb 9e                              	jmp 0x122fb <function_121dc+0x11f>
; data inside code section at 0x1235d -- 0x12360
0x1235d:    8d 76 00                                           |.v.             |
0x12360:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x12364:    8b 90 90 00 00 00                  	mov edx, dword ptr [eax + 0x90]
0x1236a:    39 90 94 00 00 00                  	cmp dword ptr [eax + 0x94], edx
0x12370:    0f 87 80 00 00 00                  	ja 0x123f6 <function_123f6>
0x12376:    8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0x1237d:    85 d2                              	test edx, edx
0x1237f:    74 38                              	je 0x123b9 <function_123b9>
0x12381:    8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x12388:    83 f8 09                           	cmp eax, 9
0x1238b:    0f 86 20 01 00 00                  	jbe 0x124b1 <function_124b1>
0x12391:    39 fa                              	cmp edx, edi
0x12393:    0f 84 0f 01 00 00                  	je 0x124a8 <function_124a8>
0x12399:    8b 8c 24 08 01 00 00               	mov ecx, dword ptr [esp + 0x108]
0x123a0:    39 c8                              	cmp eax, ecx
0x123a2:    0f 82 09 01 00 00                  	jb 0x124b1 <function_124b1>
0x123a8:    85 c9                              	test ecx, ecx
0x123aa:    75 63                              	jne 0x1240f <function_1240f>
0x123ac:    83 f8 0a                           	cmp eax, 0xa
0x123af:    76 08                              	jbe 0x123b9 <function_123b9>
0x123b1:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x123b4 -- 0x123b5
0x123b4:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x123b5 -- 0x123b6
; data inside code section at 0x123b6 -- 0x123b9
0x123b6:    ff ff ff                                           |...             |
; function: function_123b9 at 0x123b9 -- 0x123f6
0x123b9:    80 bc 24 84 00 00 00 00            	cmp byte ptr [esp + 0x84], 0
0x123c1:    74 08                              	je 0x123cb <function_123b9+0x12>
0x123c3:    c6 84 24 84 00 00 00 00            	mov byte ptr [esp + 0x84], 0
0x123cb:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x123cf:    89 04 24                           	mov dword ptr [esp], eax
0x123d2:    e8 39 47 00 00                     	call 0x16b10 <unknown_16b10>
0x123d7:    8b 84 24 1c 01 00 00               	mov eax, dword ptr [esp + 0x11c]
0x123de:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x123e5:    0f 85 49 02 00 00                  	jne 0x12634 <function_12634>
0x123eb:    81 c4 2c 01 00 00                  	add esp, 0x12c
0x123f1:    5b                                 	pop ebx
0x123f2:    5e                                 	pop esi
0x123f3:    5f                                 	pop edi
0x123f4:    5d                                 	pop ebp
0x123f5:    c3                                 	ret 
; function: function_123f6 at 0x123f6 -- 0x1240f
0x123f6:    8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x123fa:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x123fe:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x12402:    89 04 24                           	mov dword ptr [esp], eax
0x12405:    e8 06 02 01 00                     	call 0x22610 <unknown_22610>
0x1240a:    e9 67 ff ff ff                     	jmp 0x12376
; function: function_1240f at 0x1240f -- 0x12435
0x1240f:    8d 94 24 08 01 00 00               	lea edx, [esp + 0x108]
0x12416:    8d 84 24 04 01 00 00               	lea eax, [esp + 0x104]
0x1241d:    e8 de fe ff ff                     	call 0x12300
0x12422:    8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x12429:    8b 94 24 04 01 00 00               	mov edx, dword ptr [esp + 0x104]
0x12430:    e9 77 ff ff ff                     	jmp 0x123ac
; data inside code section at 0x12435 -- 0x12456
0x12435:    8b 40 04 83 f8 01 0f 85  4a 01 00 00 8b 03 c7 44   |.@......J......D|
0x12445:    24 78 00 00 00 00 85 c0  0f 84 12 02 00 00 8b 00   |$x..............|
0x12455:    85                                                 |.               |
; function: function_12456 at 0x12456 -- 0x1245a
0x12456:    c0 0f 84                           	ror byte ptr [edi], 0x84
0x12459:    c3                                 	ret 
; data inside code section at 0x1245a -- 0x12469
0x1245a:    01 00 00 3b 43 08 74 5f  8b 43 08 89 44 24 78      |...;C.t_.C..D$x |
; function: function_12469 at 0x12469 -- 0x1246a
; data inside code section at 0x1246a -- 0x12470
0x1246a:    44 24 78 c7 44 24                                  |D$x.D$          |
; function: function_12470 at 0x12470 -- 0x124a5
0x12470:    0c 01                              	or al, 1
0x12472:    00 00                              	add byte ptr [eax], al
0x12474:    00 89 44 24 08 c7                  	add byte ptr [ecx - 0x38f7dbbc], cl
0x1247a:    44                                 	inc esp
0x1247b:    24 04                              	and al, 4
0x1247d:    00 00                              	add byte ptr [eax], al
0x1247f:    00 00                              	add byte ptr [eax], al
0x12481:    89 1c 24                           	mov dword ptr [esp], ebx
0x12484:    e8 d7 f6 00 00                     	call 0x21b60 <unknown_21b60>
0x12489:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1248c:    8b 13                              	mov edx, dword ptr [ebx]
0x1248e:    85 c0                              	test eax, eax
0x12490:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x12494:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x12498:    0f 85 00 fd ff ff                  	jne 0x1219e <function_1219e>
0x1249e:    31 c0                              	xor eax, eax
0x124a0:    e9 05 fd ff ff                     	jmp 0x121aa <function_121aa>
; data inside code section at 0x124a5 -- 0x124a8
0x124a5:    8d 76 00                                           |.v.             |
; function: function_124a8 at 0x124a8 -- 0x124b1
0x124a8:    83 f8 0a                           	cmp eax, 0xa
0x124ab:    0f 84 e8 fe ff ff                  	je 0x12399
; function: function_124b1 at 0x124b1 -- 0x124c1
0x124b1:    e8 80 36 00 00                     	call 0x15b36 <unknown_15b36>
0x124b6:    66 90                              	nop 
0x124b8:    8b 13                              	mov edx, dword ptr [ebx]
0x124ba:    31 c0                              	xor eax, eax
0x124bc:    e9 e9 fc ff ff                     	jmp 0x121aa <function_121aa>
; function: function_124c1 at 0x124c1 -- 0x124c9
0x124c1:    8b 00                              	mov eax, dword ptr [eax]
0x124c3:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x124c7:    eb a0                              	jmp 0x12469 <function_12469>
; function: function_124c9 at 0x124c9 -- 0x124ce
0x124c9:    e8 00 36 00 00                     	call 0x15ace <unknown_15ace>
; function: function_124ce at 0x124ce -- 0x124e8
0x124ce:    8d 94 24 83 00 00 00               	lea edx, [esp + 0x83]
0x124d5:    8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x124d9:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x124dd:    c7 44 24 04 4a 21 00 00            	mov dword ptr [esp + 4], 0x214a ; "call to empty boost::function"
0x124e5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x124e8 -- 0x124e9
0x124e8:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x124e9 -- 0x124ea
; data inside code section at 0x124ea -- 0x124fd
0x124ea:    ff ff ff 8d 54 24 7c 8d  6c 24 70 89 54 24 04 89   |....T$|.l$p.T$..|
0x124fa:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSt13runtime_errorC2ERKSs at 0x124fd -- 0x124fe
; data inside code section at 0x124fe -- 0x12509
0x124fe:    ff ff ff 8d 44 24 7c 89  04 24 e8                  |....D$|..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x12509 -- 0x1250a
; data inside code section at 0x1250a -- 0x12520
0x1250a:    ff ff ff c7 44 24 70 48  48 01 00 89 2c 24 e8 b3   |....D$pHH...,$..|
0x1251a:    9c 00 00 89 44 24                                  |....D$          |
; function: function_12520 at 0x12520 -- 0x1256c
0x12520:    18 89 54 24 14 89                  	sbb byte ptr [ecx - 0x76ebdbac], cl
0x12526:    2c 24                              	sub al, 0x24
0x12528:    e8 53 24 00 00                     	call 0x14980 <function_14980>
0x1252d:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x12531:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x12535:    83 fa 01                           	cmp edx, 1
0x12538:    0f 84 b0 00 00 00                  	je 0x125ee <function_125ee>
0x1253e:    83 fa 01                           	cmp edx, 1
0x12541:    0f 84 91 00 00 00                  	je 0x125d8 <function_125d8>
0x12547:    89 c3                              	mov ebx, eax
0x12549:    8d 44 24 54                        	lea eax, [esp + 0x54]
0x1254d:    89 04 24                           	mov dword ptr [esp], eax
0x12550:    e8 8b 02 01 00                     	call 0x227e0 <unknown_227e0>
0x12555:    89 34 24                           	mov dword ptr [esp], esi
0x12558:    e8 63 9f 00 00                     	call 0x1c4c0 <unknown_1c4c0>
0x1255d:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x12561:    89 04 24                           	mov dword ptr [esp], eax
0x12564:    e8 a7 45 00 00                     	call 0x16b10 <unknown_16b10>
0x12569:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1256c -- 0x1256d
0x1256c:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1256d -- 0x1256e
; data inside code section at 0x1256e -- 0x1257f
0x1256e:    ff ff ff 89 c5 8d 44 24  7c 89 04 24 89 54 24 14   |......D$|..$.T$.|
0x1257e:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1257f -- 0x12580
; data inside code section at 0x12580 -- 0x12583
0x12580:    ff ff ff                                           |...             |
; function: function_12583 at 0x12583 -- 0x1258b
0x12583:    89 e8                              	mov eax, ebp
0x12585:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x12589:    eb aa                              	jmp 0x12535
; data inside code section at 0x1258b -- 0x125ab
0x1258b:    c7 44 24 0c 90 50 00 00  c7 44 24 08 c9 01 00 00   |.D$..P...D$.....|
0x1259b:    c7 44 24 04 94 36 00 00  c7 04 24 a8 20 00 00 e8   |.D$..6....$. ...|
; dynamically linked function: __assert_fail at 0x125ab -- 0x125ac
; data inside code section at 0x125ac -- 0x125af
0x125ac:    ff ff ff                                           |...             |
; function: function_125af at 0x125af -- 0x125ce
0x125af:    c7 44 24 0c b0 52 00 00            	mov dword ptr [esp + 0xc], 0x52b0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0x125b7:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x125bf:    c7 44 24 04 00 33 00 00            	mov dword ptr [esp + 4], 0x3300 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x125c7:    c7 04 24 6b 1f 00 00               	mov dword ptr [esp], 0x1f6b ; "px != 0"
; data inside code section at 0x125ce -- 0x125cf
0x125ce:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x125cf -- 0x125d0
; data inside code section at 0x125d0 -- 0x125d3
0x125d0:    ff ff ff                                           |...             |
; function: function_125d3 at 0x125d3 -- 0x125d8
0x125d3:    e9 6f ff ff ff                     	jmp 0x12547
; function: function_125d8 at 0x125d8 -- 0x125e0
0x125d8:    89 04 24                           	mov dword ptr [esp], eax
0x125db:    e8 fc ff ff ff                     	call 0x125dc
; data inside code section at 0x125e0 -- 0x125e1
0x125e0:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x125e1 -- 0x125e2
; data inside code section at 0x125e2 -- 0x125e5
0x125e2:    ff ff ff                                           |...             |
; function: function_125e5 at 0x125e5 -- 0x125ee
0x125e5:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x125e9:    e9 f2 fc ff ff                     	jmp 0x122e0
; function: function_125ee at 0x125ee -- 0x125f1
0x125ee:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x125f1 -- 0x125f2
0x125f1:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x125f2 -- 0x125f3
; data inside code section at 0x125f3 -- 0x12620
0x125f3:    ff ff ff 8b 44 24 44 8b  68 08 85 ed 0f 84 c4 fe   |....D$D.h.......|
0x12603:    ff ff 8b 45 00 89 2c 24  ff 50 0c 8b 45 00 c6 45   |...E..,$.P..E..E|
0x12613:    04 00 89 2c 24 ff 50 10  e8 fc ff ff ff            |...,$.P......   |
; function: function_12620 at 0x12620 -- 0x1262a
0x12620:    e8 75 34 00 00                     	call 0x15a9a <unknown_15a9a>
0x12625:    89 c3                              	mov ebx, eax
0x12627:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1262a -- 0x1262b
0x1262a:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x1262b -- 0x1262c
; data inside code section at 0x1262c -- 0x1262f
0x1262c:    ff ff ff                                           |...             |
; function: function_1262f at 0x1262f -- 0x12634
0x1262f:    e9 29 ff ff ff                     	jmp 0x1255d
; function: function_12634 at 0x12634 -- 0x12635
; dynamically linked function: __stack_chk_fail at 0x12635 -- 0x12636
; data inside code section at 0x12636 -- 0x12638
0x12636:    ff ff                                              |..              |
; function: function_12638 at 0x12638 -- 0x12645
0x12638:    ff 8d b4 26 00 00                  	dec dword ptr [ebp + 0x26b4]
0x1263e:    00 00                              	add byte ptr [eax], al
0x12640:    e9 f0 fe ff ff                     	jmp 0x12535
; function: function_12645 at 0x12645 -- 0x1264c
0x12645:    89 c3                              	mov ebx, eax
0x12647:    e9 09 ff ff ff                     	jmp 0x12555
; function: function_1264c at 0x1264c -- 0x12665
0x1264c:    80 bc 24 84 00 00 00 00            	cmp byte ptr [esp + 0x84], 0
0x12654:    74 08                              	je 0x1265e <function_1264c+0x12>
0x12656:    c6 84 24 84 00 00 00 00            	mov byte ptr [esp + 0x84], 0
0x1265e:    89 c3                              	mov ebx, eax
0x12660:    e9 f8 fe ff ff                     	jmp 0x1255d
; function: function_12665 at 0x12665 -- 0x12670
0x12665:    e8 fc 33 00 00                     	call 0x15a66 <unknown_15a66>
0x1266a:    89 c5                              	mov ebp, eax
0x1266c:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0x12670 -- 0x12671
0x12670:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x12671 -- 0x12672
; data inside code section at 0x12672 -- 0x12675
0x12672:    ff ff ff                                           |...             |
; function: function_12675 at 0x12675 -- 0x12680
0x12675:    89 e8                              	mov eax, ebp
0x12677:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x1267b:    e9 be fe ff ff                     	jmp 0x1253e
; section: .text._ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
; function: _ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_ at 0x12680 -- 0x12867
0x12680:    55                                 	push ebp
0x12681:    57                                 	push edi
0x12682:    56                                 	push esi
0x12683:    53                                 	push ebx
0x12684:    83 ec 6c                           	sub esp, 0x6c
0x12687:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x1268e:    8b 94 24 90 00 00 00               	mov edx, dword ptr [esp + 0x90]
0x12695:    8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0x1269c:    8b 8c 24 8c 00 00 00               	mov ecx, dword ptr [esp + 0x8c]
0x126a3:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x126a7:    8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x126ae:    8b b4 24 84 00 00 00               	mov esi, dword ptr [esp + 0x84]
0x126b5:    89 6c 24 30                        	mov dword ptr [esp + 0x30], ebp
0x126b9:    8b 9c 24 88 00 00 00               	mov ebx, dword ptr [esp + 0x88]
0x126c0:    65 8b 2d 14 00 00 00               	mov ebp, dword ptr gs:[0x14]
0x126c7:    89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0x126cb:    31 ed                              	xor ebp, ebp
0x126cd:    8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0x126d4:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x126d8:    8b 84 24 9c 00 00 00               	mov eax, dword ptr [esp + 0x9c]
0x126df:    2b ac 24 98 00 00 00               	sub ebp, dword ptr [esp + 0x98]
0x126e6:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x126ea:    8b bc 24 a4 00 00 00               	mov edi, dword ptr [esp + 0xa4]
0x126f1:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x126f5:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x126f9:    8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x12700:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x12704:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x12708:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x1270c:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x12710:    29 d0                              	sub eax, edx
0x12712:    89 ca                              	mov edx, ecx
0x12714:    c1 f8 02                           	sar eax, 2
0x12717:    29 f2                              	sub edx, esi
0x12719:    83 e8 01                           	sub eax, 1
0x1271c:    c1 e0 09                           	shl eax, 9
0x1271f:    01 c5                              	add ebp, eax
0x12721:    01 d5                              	add ebp, edx
0x12723:    85 ed                              	test ebp, ebp
0x12725:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x12729:    89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0x1272d:    0f 8e 70 01 00 00                  	jle 0x128a3 <function_128a3>
0x12733:    8b 4f 08                           	mov ecx, dword ptr [edi + 8]
0x12736:    8b 07                              	mov eax, dword ptr [edi]
0x12738:    eb 17                              	jmp 0x12751 <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0xd1>
; data inside code section at 0x1273a -- 0x12740
0x1273a:    8d b6 00 00 00 00                                  |......          |
0x12740:    29 dd                              	sub ebp, ebx
0x12742:    01 d8                              	add eax, ebx
0x12744:    8b 4f 08                           	mov ecx, dword ptr [edi + 8]
0x12747:    85 ed                              	test ebp, ebp
0x12749:    89 07                              	mov dword ptr [edi], eax
0x1274b:    0f 8e d2 00 00 00                  	jle 0x12823 <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0x1a3>
0x12751:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x12755:    29 c1                              	sub ecx, eax
0x12757:    89 eb                              	mov ebx, ebp
0x12759:    29 f2                              	sub edx, esi
0x1275b:    39 d1                              	cmp ecx, edx
0x1275d:    0f 4f ca                           	cmovg ecx, edx
0x12760:    39 e9                              	cmp ecx, ebp
0x12762:    0f 4e d9                           	cmovle ebx, ecx
0x12765:    8d 14 1e                           	lea edx, [esi + ebx]
0x12768:    89 d1                              	mov ecx, edx
0x1276a:    29 f1                              	sub ecx, esi
0x1276c:    0f 85 e6 00 00 00                  	jne 0x12858 <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0x1d8>
0x12772:    2b 74 24 20                        	sub esi, dword ptr [esp + 0x20]
0x12776:    89 f1                              	mov ecx, esi
0x12778:    01 d9                              	add ecx, ebx
0x1277a:    0f 88 00 01 00 00                  	js 0x12880 <function_12880>
0x12780:    81 f9 ff 01 00 00                  	cmp ecx, 0x1ff
0x12786:    89 d6                              	mov esi, edx
0x12788:    7e 33                              	jle 0x127bd <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0x13d>
0x1278a:    85 c9                              	test ecx, ecx
0x1278c:    0f 8e ee 00 00 00                  	jle 0x12880 <function_12880>
0x12792:    89 ca                              	mov edx, ecx
0x12794:    c1 fa 09                           	sar edx, 9
0x12797:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x1279b:    8d 34 96                           	lea esi, [esi + edx*4]
0x1279e:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x127a2:    8b 36                              	mov esi, dword ptr [esi]
0x127a4:    c1 e2 09                           	shl edx, 9
0x127a7:    29 d1                              	sub ecx, edx
0x127a9:    89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0x127ad:    81 c6 00 02 00 00                  	add esi, 0x200
0x127b3:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x127b7:    8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0x127bb:    01 ce                              	add esi, ecx
0x127bd:    89 c2                              	mov edx, eax
0x127bf:    2b 57 04                           	sub edx, dword ptr [edi + 4]
0x127c2:    01 da                              	add edx, ebx
0x127c4:    0f 88 c6 00 00 00                  	js 0x12890 <function_12890>
0x127ca:    81 fa ff 01 00 00                  	cmp edx, 0x1ff
0x127d0:    0f 8e 6a ff ff ff                  	jle 0x12740 <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0xc0>
0x127d6:    85 d2                              	test edx, edx
0x127d8:    0f 8e b2 00 00 00                  	jle 0x12890 <function_12890>
0x127de:    89 d0                              	mov eax, edx
0x127e0:    c1 f8 09                           	sar eax, 9
0x127e3:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x127e7:    8b 4f 0c                           	mov ecx, dword ptr [edi + 0xc]
0x127ea:    29 dd                              	sub ebp, ebx
0x127ec:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x127f0:    8d 04 81                           	lea eax, [ecx + eax*4]
0x127f3:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x127f6:    8b 00                              	mov eax, dword ptr [eax]
0x127f8:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x127fc:    89 c1                              	mov ecx, eax
0x127fe:    89 47 04                           	mov dword ptr [edi + 4], eax
0x12801:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12805:    81 c1 00 02 00 00                  	add ecx, 0x200
0x1280b:    89 4f 08                           	mov dword ptr [edi + 8], ecx
0x1280e:    c1 e0 09                           	shl eax, 9
0x12811:    29 c2                              	sub edx, eax
0x12813:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x12817:    01 d0                              	add eax, edx
0x12819:    85 ed                              	test ebp, ebp
0x1281b:    89 07                              	mov dword ptr [edi], eax
0x1281d:    0f 8f 2e ff ff ff                  	jg 0x12751 <_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0xd1>
0x12823:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x12827:    8b 74 24 5c                        	mov esi, dword ptr [esp + 0x5c]
0x1282b:    65 33 35 14 00 00 00               	xor esi, dword ptr gs:[0x14]
0x12832:    89 02                              	mov dword ptr [edx], eax
0x12834:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x12837:    89 4a 08                           	mov dword ptr [edx + 8], ecx
0x1283a:    89 42 04                           	mov dword ptr [edx + 4], eax
0x1283d:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x12840:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x12843:    89 d0                              	mov eax, edx
0x12845:    75 66                              	jne 0x128ad <function_128ad>
0x12847:    83 c4 6c                           	add esp, 0x6c
0x1284a:    5b                                 	pop ebx
0x1284b:    5e                                 	pop esi
0x1284c:    5f                                 	pop edi
0x1284d:    5d                                 	pop ebp
0x1284e:    c2 04 00                           	ret 4
; data inside code section at 0x12851 -- 0x12858
0x12851:    8d b4 26 00 00 00 00                               |..&....         |
0x12858:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1285c:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x12860:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x12864:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12867 -- 0x12868
0x12867:    e8                                                 |.               |
; dynamically linked function: memmove at 0x12868 -- 0x12869
; data inside code section at 0x12869 -- 0x12880
0x12869:    ff ff ff 8b 07 2b 74 24  20 8b 54 24 18 89 f1 01   |.....+t$ .T$....|
0x12879:    d9 0f 89 00 ff ff ff                               |.......         |
; function: function_12880 at 0x12880 -- 0x12890
0x12880:    89 ca                              	mov edx, ecx
0x12882:    c1 ea 09                           	shr edx, 9
0x12885:    81 ca 00 00 80 ff                  	or edx, 0xff800000
0x1288b:    e9 07 ff ff ff                     	jmp 0x12797
; function: function_12890 at 0x12890 -- 0x128a3
0x12890:    89 d0                              	mov eax, edx
0x12892:    c1 e8 09                           	shr eax, 9
0x12895:    0d 00 00 80 ff                     	or eax, 0xff800000
0x1289a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1289e:    e9 44 ff ff ff                     	jmp 0x127e7
; function: function_128a3 at 0x128a3 -- 0x128ad
0x128a3:    8b 07                              	mov eax, dword ptr [edi]
0x128a5:    8b 4f 08                           	mov ecx, dword ptr [edi + 8]
0x128a8:    e9 76 ff ff ff                     	jmp 0x12823
; function: function_128ad at 0x128ad -- 0x128ae
; dynamically linked function: __stack_chk_fail at 0x128ae -- 0x128af
; data inside code section at 0x128af -- 0x128b2
0x128af:    ff ff ff                                           |...             |
; section: .text._ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
; function: _ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_ at 0x128c0 -- 0x12a2d
0x128c0:    55                                 	push ebp
0x128c1:    57                                 	push edi
0x128c2:    56                                 	push esi
0x128c3:    53                                 	push ebx
0x128c4:    83 ec 7c                           	sub esp, 0x7c
0x128c7:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0x128ce:    8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0x128d5:    8b 9c 24 a4 00 00 00               	mov ebx, dword ptr [esp + 0xa4]
0x128dc:    8b 8c 24 a8 00 00 00               	mov ecx, dword ptr [esp + 0xa8]
0x128e3:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x128e7:    8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x128ee:    89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x128f2:    8b 94 24 ac 00 00 00               	mov edx, dword ptr [esp + 0xac]
0x128f9:    8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0x12900:    65 8b 35 14 00 00 00               	mov esi, dword ptr gs:[0x14]
0x12907:    89 74 24 6c                        	mov dword ptr [esp + 0x6c], esi
0x1290b:    31 f6                              	xor esi, esi
0x1290d:    8b b4 24 9c 00 00 00               	mov esi, dword ptr [esp + 0x9c]
0x12914:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x12918:    8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x1291f:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x12923:    8b 94 24 b0 00 00 00               	mov edx, dword ptr [esp + 0xb0]
0x1292a:    8b bc 24 b4 00 00 00               	mov edi, dword ptr [esp + 0xb4]
0x12931:    29 ee                              	sub esi, ebp
0x12933:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x12937:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x1293b:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x1293f:    29 c2                              	sub edx, eax
0x12941:    89 d0                              	mov eax, edx
0x12943:    89 da                              	mov edx, ebx
0x12945:    c1 f8 02                           	sar eax, 2
0x12948:    29 ca                              	sub edx, ecx
0x1294a:    83 e8 01                           	sub eax, 1
0x1294d:    c1 e0 09                           	shl eax, 9
0x12950:    01 d0                              	add eax, edx
0x12952:    8b 17                              	mov edx, dword ptr [edi]
0x12954:    01 c6                              	add esi, eax
0x12956:    85 f6                              	test esi, esi
0x12958:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x1295c:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x12960:    8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0x12963:    89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0x12967:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1296b:    89 5c 24 28                        	mov dword ptr [esp + 0x28], ebx
0x1296f:    7f 36                              	jg 0x129a7 <_ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0xe7>
0x12971:    e9 82 01 00 00                     	jmp 0x12af8 <function_12af8>
; data inside code section at 0x12976 -- 0x12978
0x12976:    66 90                                              |f.              |
0x12978:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1297c:    01 44 24 28                        	add dword ptr [esp + 0x28], eax
0x12980:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12984:    29 d8                              	sub eax, ebx
0x12986:    0f 88 24 01 00 00                  	js 0x12ab0 <function_12ab0>
0x1298c:    3d ff 01 00 00                     	cmp eax, 0x1ff
0x12991:    0f 8f 29 01 00 00                  	jg 0x12ac0 <function_12ac0>
0x12997:    03 54 24 24                        	add edx, dword ptr [esp + 0x24]
0x1299b:    29 de                              	sub esi, ebx
0x1299d:    85 f6                              	test esi, esi
0x1299f:    89 17                              	mov dword ptr [edi], edx
0x129a1:    0f 8e 51 01 00 00                  	jle 0x12af8 <function_12af8>
0x129a7:    8b 6c 24 28                        	mov ebp, dword ptr [esp + 0x28]
0x129ab:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x129af:    89 eb                              	mov ebx, ebp
0x129b1:    2b 5c 24 34                        	sub ebx, dword ptr [esp + 0x34]
0x129b5:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x129b9:    89 d5                              	mov ebp, edx
0x129bb:    29 cd                              	sub ebp, ecx
0x129bd:    85 db                              	test ebx, ebx
0x129bf:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x129c3:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x129c7:    75 16                              	jne 0x129df <_ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0x11f>
0x129c9:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x129cd:    8b 6b fc                           	mov ebp, dword ptr [ebx - 4]
0x129d0:    bb 00 02 00 00                     	mov ebx, 0x200
0x129d5:    8d 85 00 02 00 00                  	lea eax, [ebp + 0x200]
0x129db:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x129df:    8b 6c 24 1c                        	mov ebp, dword ptr [esp + 0x1c]
0x129e3:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x129e7:    85 ed                              	test ebp, ebp
0x129e9:    75 15                              	jne 0x12a00 <_ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_+0x140>
0x129eb:    8b 6f 0c                           	mov ebp, dword ptr [edi + 0xc]
0x129ee:    8b 6d fc                           	mov ebp, dword ptr [ebp - 4]
0x129f1:    81 c5 00 02 00 00                  	add ebp, 0x200
0x129f7:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x129fb:    bd 00 02 00 00                     	mov ebp, 0x200
0x12a00:    39 f3                              	cmp ebx, esi
0x12a02:    0f 4f de                           	cmovg ebx, esi
0x12a05:    39 eb                              	cmp ebx, ebp
0x12a07:    0f 4f dd                           	cmovg ebx, ebp
0x12a0a:    8b 6c 24 24                        	mov ebp, dword ptr [esp + 0x24]
0x12a0e:    29 d8                              	sub eax, ebx
0x12a10:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x12a14:    29 c5                              	sub ebp, eax
0x12a16:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x12a1a:    74 23                              	je 0x12a3f <function_12a3f>
0x12a1c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x12a20:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x12a24:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x12a28:    29 e8                              	sub eax, ebp
0x12a2a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12a2d -- 0x12a2e
0x12a2d:    e8                                                 |.               |
; dynamically linked function: memmove at 0x12a2e -- 0x12a2f
; data inside code section at 0x12a2f -- 0x12a3f
0x12a2f:    ff ff ff 8b 17 8b 4f 04  89 d0 29 c8 89 44 24 1c   |......O...)..D$.|
; function: function_12a3f at 0x12a3f -- 0x12abd
0x12a3f:    89 dd                              	mov ebp, ebx
0x12a41:    f7 dd                              	neg ebp
0x12a43:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x12a47:    8b 6c 24 20                        	mov ebp, dword ptr [esp + 0x20]
0x12a4b:    29 dd                              	sub ebp, ebx
0x12a4d:    89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0x12a51:    0f 88 d9 00 00 00                  	js 0x12b30 <function_12b30>
0x12a57:    81 fd ff 01 00 00                  	cmp ebp, 0x1ff
0x12a5d:    0f 8e 15 ff ff ff                  	jle 0x12978
0x12a63:    8b 6c 24 20                        	mov ebp, dword ptr [esp + 0x20]
0x12a67:    85 ed                              	test ebp, ebp
0x12a69:    0f 8e c1 00 00 00                  	jle 0x12b30 <function_12b30>
0x12a6f:    8b 6c 24 20                        	mov ebp, dword ptr [esp + 0x20]
0x12a73:    c1 fd 09                           	sar ebp, 9
0x12a76:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x12a7a:    8b 6c 24 28                        	mov ebp, dword ptr [esp + 0x28]
0x12a7e:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x12a82:    8d 04 a8                           	lea eax, [eax + ebp*4]
0x12a85:    8b 28                              	mov ebp, dword ptr [eax]
0x12a87:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x12a8b:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x12a8f:    89 6c 24 34                        	mov dword ptr [esp + 0x34], ebp
0x12a93:    8b 6c 24 20                        	mov ebp, dword ptr [esp + 0x20]
0x12a97:    c1 e0 09                           	shl eax, 9
0x12a9a:    29 c5                              	sub ebp, eax
0x12a9c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12aa0:    03 6c 24 34                        	add ebp, dword ptr [esp + 0x34]
0x12aa4:    29 d8                              	sub eax, ebx
0x12aa6:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x12aaa:    0f 89 dc fe ff ff                  	jns 0x1298c
0x12ab0:    89 c2                              	mov edx, eax
0x12ab2:    c1 ea 09                           	shr edx, 9
0x12ab5:    81 ca 00 00 80 ff                  	or edx, 0xff800000
0x12abb:    eb 0c                              	jmp 0x12ac9 <function_12ac9>
; data inside code section at 0x12abd -- 0x12ac0
0x12abd:    8d 76 00                                           |.v.             |
; function: function_12ac0 at 0x12ac0 -- 0x12ac9
0x12ac0:    85 c0                              	test eax, eax
0x12ac2:    7e ec                              	jle 0x12ab0 <function_12ab0>
0x12ac4:    89 c2                              	mov edx, eax
0x12ac6:    c1 fa 09                           	sar edx, 9
; function: function_12ac9 at 0x12ac9 -- 0x12af8
0x12ac9:    8d 0c 95 00 00 00 00               	lea ecx, [edx*4]
0x12ad0:    29 de                              	sub esi, ebx
0x12ad2:    03 4f 0c                           	add ecx, dword ptr [edi + 0xc]
0x12ad5:    c1 e2 09                           	shl edx, 9
0x12ad8:    29 d0                              	sub eax, edx
0x12ada:    85 f6                              	test esi, esi
0x12adc:    89 4f 0c                           	mov dword ptr [edi + 0xc], ecx
0x12adf:    8b 09                              	mov ecx, dword ptr [ecx]
0x12ae1:    8d a9 00 02 00 00                  	lea ebp, [ecx + 0x200]
0x12ae7:    8d 14 01                           	lea edx, [ecx + eax]
0x12aea:    89 4f 04                           	mov dword ptr [edi + 4], ecx
0x12aed:    89 6f 08                           	mov dword ptr [edi + 8], ebp
0x12af0:    89 17                              	mov dword ptr [edi], edx
0x12af2:    0f 8f af fe ff ff                  	jg 0x129a7
; function: function_12af8 at 0x12af8 -- 0x12b2a
0x12af8:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x12afc:    8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x12b00:    65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x12b07:    89 10                              	mov dword ptr [eax], edx
0x12b09:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x12b0d:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x12b10:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x12b13:    89 42 08                           	mov dword ptr [edx + 8], eax
0x12b16:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x12b19:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x12b1c:    89 d0                              	mov eax, edx
0x12b1e:    75 25                              	jne 0x12b45 <function_12b45>
0x12b20:    83 c4 7c                           	add esp, 0x7c
0x12b23:    5b                                 	pop ebx
0x12b24:    5e                                 	pop esi
0x12b25:    5f                                 	pop edi
0x12b26:    5d                                 	pop ebp
0x12b27:    c2 04 00                           	ret 4
; data inside code section at 0x12b2a -- 0x12b30
0x12b2a:    8d b6 00 00 00 00                                  |......          |
; function: function_12b30 at 0x12b30 -- 0x12b45
0x12b30:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x12b34:    c1 e8 09                           	shr eax, 9
0x12b37:    0d 00 00 80 ff                     	or eax, 0xff800000
0x12b3c:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x12b40:    e9 35 ff ff ff                     	jmp 0x12a7a
; function: function_12b45 at 0x12b45 -- 0x12b46
; dynamically linked function: __stack_chk_fail at 0x12b46 -- 0x12b47
; data inside code section at 0x12b47 -- 0x12b4a
0x12b47:    ff ff ff                                           |...             |
; section: .text._ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
; function: _ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_ at 0x12b50 -- 0x12be0
0x12b50:    55                                 	push ebp
0x12b51:    57                                 	push edi
0x12b52:    56                                 	push esi
0x12b53:    53                                 	push ebx
0x12b54:    83 ec 2c                           	sub esp, 0x2c
0x12b57:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x12b5b:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x12b5f:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x12b63:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x12b67:    29 ca                              	sub edx, ecx
0x12b69:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x12b6d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12b73:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12b77:    31 c0                              	xor eax, eax
0x12b79:    85 d2                              	test edx, edx
0x12b7b:    8b 03                              	mov eax, dword ptr [ebx]
0x12b7d:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x12b80:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x12b83:    8b 7b 0c                           	mov edi, dword ptr [ebx + 0xc]
0x12b86:    7f 0d                              	jg 0x12b95 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x45>
0x12b88:    eb 2e                              	jmp 0x12bb8 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x68>
; data inside code section at 0x12b8a -- 0x12b90
0x12b8a:    8d b6 00 00 00 00                                  |......          |
0x12b90:    83 ea 01                           	sub edx, 1
0x12b93:    74 23                              	je 0x12bb8 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x68>
0x12b95:    0f b6 19                           	movzx ebx, byte ptr [ecx]
0x12b98:    83 c1 01                           	add ecx, 1
0x12b9b:    88 18                              	mov byte ptr [eax], bl
0x12b9d:    83 c0 01                           	add eax, 1
0x12ba0:    39 c6                              	cmp esi, eax
0x12ba2:    75 ec                              	jne 0x12b90 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x40>
0x12ba4:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x12ba7:    83 c7 04                           	add edi, 4
0x12baa:    83 ea 01                           	sub edx, 1
0x12bad:    8d b5 00 02 00 00                  	lea esi, [ebp + 0x200]
0x12bb3:    89 e8                              	mov eax, ebp
0x12bb5:    75 de                              	jne 0x12b95 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x45>
0x12bb7:    90                                 	nop 
0x12bb8:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x12bbc:    89 02                              	mov dword ptr [edx], eax
0x12bbe:    89 d0                              	mov eax, edx
0x12bc0:    89 6a 04                           	mov dword ptr [edx + 4], ebp
0x12bc3:    89 72 08                           	mov dword ptr [edx + 8], esi
0x12bc6:    89 7a 0c                           	mov dword ptr [edx + 0xc], edi
0x12bc9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x12bcd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12bd4:    75 0a                              	jne 0x12be0 <_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_+0x8d>
0x12bd6:    83 c4 2c                           	add esp, 0x2c
0x12bd9:    5b                                 	pop ebx
0x12bda:    5e                                 	pop esi
0x12bdb:    5f                                 	pop edi
0x12bdc:    5d                                 	pop ebp
0x12bdd:    c2 04 00                           	ret 4
; data inside code section at 0x12be0 -- 0x12be1
0x12be0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12be1 -- 0x12be2
; data inside code section at 0x12be2 -- 0x12be5
0x12be2:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j
; function: _ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j at 0x12bf0 -- 0x1325d
0x12bf0:    55                                 	push ebp
0x12bf1:    57                                 	push edi
0x12bf2:    56                                 	push esi
0x12bf3:    53                                 	push ebx
0x12bf4:    81 ec 4c 02 00 00                  	sub esp, 0x24c
0x12bfa:    8b 9c 24 60 02 00 00               	mov ebx, dword ptr [esp + 0x260]
0x12c01:    8b 84 24 68 02 00 00               	mov eax, dword ptr [esp + 0x268]
0x12c08:    8b 94 24 6c 02 00 00               	mov edx, dword ptr [esp + 0x26c]
0x12c0f:    8b b4 24 64 02 00 00               	mov esi, dword ptr [esp + 0x264]
0x12c16:    8b 6b 14                           	mov ebp, dword ptr [ebx + 0x14]
0x12c19:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x12c1d:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x12c20:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x12c24:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x12c27:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x12c2e:    89 8c 24 3c 02 00 00               	mov dword ptr [esp + 0x23c], ecx
0x12c35:    31 c9                              	xor ecx, ecx
0x12c37:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x12c3a:    8b bc 24 70 02 00 00               	mov edi, dword ptr [esp + 0x270]
0x12c41:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x12c45:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x12c49:    29 d0                              	sub eax, edx
0x12c4b:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x12c4e:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x12c52:    8b 06                              	mov eax, dword ptr [esi]
0x12c54:    2b 46 04                           	sub eax, dword ptr [esi + 4]
0x12c57:    29 ea                              	sub edx, ebp
0x12c59:    c1 fa 02                           	sar edx, 2
0x12c5c:    83 ea 01                           	sub edx, 1
0x12c5f:    c1 e2 09                           	shl edx, 9
0x12c62:    01 d0                              	add eax, edx
0x12c64:    8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x12c67:    03 44 24 48                        	add eax, dword ptr [esp + 0x48]
0x12c6b:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x12c6f:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x12c72:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x12c76:    89 d0                              	mov eax, edx
0x12c78:    2b 44 24 54                        	sub eax, dword ptr [esp + 0x54]
0x12c7c:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x12c80:    89 c8                              	mov eax, ecx
0x12c82:    29 e8                              	sub eax, ebp
0x12c84:    c1 f8 02                           	sar eax, 2
0x12c87:    83 e8 01                           	sub eax, 1
0x12c8a:    c1 e0 09                           	shl eax, 9
0x12c8d:    03 44 24 40                        	add eax, dword ptr [esp + 0x40]
0x12c91:    03 44 24 48                        	add eax, dword ptr [esp + 0x48]
0x12c95:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x12c99:    d1 e8                              	shr eax, 1
0x12c9b:    39 44 24 44                        	cmp dword ptr [esp + 0x44], eax
0x12c9f:    0f 83 23 03 00 00                  	jae 0x12fc8 <_ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j+0x3d8>
0x12ca5:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x12ca8:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x12cac:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x12cb0:    29 d0                              	sub eax, edx
0x12cb2:    39 c7                              	cmp edi, eax
0x12cb4:    0f 87 c6 05 00 00                  	ja 0x13280 <function_13280>
0x12cba:    89 f9                              	mov ecx, edi
0x12cbc:    89 c2                              	mov edx, eax
0x12cbe:    f7 d9                              	neg ecx
0x12cc0:    29 fa                              	sub edx, edi
0x12cc2:    89 4c 24 74                        	mov dword ptr [esp + 0x74], ecx
0x12cc6:    0f 88 9c 06 00 00                  	js 0x13368
0x12ccc:    81 fa ff 01 00 00                  	cmp edx, 0x1ff
0x12cd2:    0f 8f f0 05 00 00                  	jg 0x132c8 <function_132c8>
0x12cd8:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x12cdc:    89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0x12ce0:    01 ca                              	add edx, ecx
0x12ce2:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x12ce6:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x12cea:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x12cee:    03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0x12cf2:    89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x12cf6:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x12cfa:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x12cfe:    0f 88 10 06 00 00                  	js 0x13314 <function_13314>
0x12d04:    3d ff 01 00 00                     	cmp eax, 0x1ff
0x12d09:    0f 8f 91 0a 00 00                  	jg 0x137a0 <function_137a0>
0x12d0f:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x12d13:    89 ea                              	mov edx, ebp
0x12d15:    03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0x12d19:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x12d1d:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x12d21:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x12d25:    89 4c 24 60                        	mov dword ptr [esp + 0x60], ecx
0x12d29:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x12d2d:    39 7c 24 44                        	cmp dword ptr [esp + 0x44], edi
0x12d31:    89 46 04                           	mov dword ptr [esi + 4], eax
0x12d34:    89 56 0c                           	mov dword ptr [esi + 0xc], edx
0x12d37:    89 0e                              	mov dword ptr [esi], ecx
0x12d39:    8b 4c 24 60                        	mov ecx, dword ptr [esp + 0x60]
0x12d3d:    89 4e 08                           	mov dword ptr [esi + 8], ecx
0x12d40:    0f 8c 3a 06 00 00                  	jl 0x13380 <function_13380>
0x12d46:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x12d49:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x12d4c:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x12d4f:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x12d53:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x12d56:    89 4c 24 7c                        	mov dword ptr [esp + 0x7c], ecx
0x12d5a:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x12d5e:    89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0x12d62:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x12d66:    29 d1                              	sub ecx, edx
0x12d68:    01 f9                              	add ecx, edi
0x12d6a:    89 4c 24 70                        	mov dword ptr [esp + 0x70], ecx
0x12d6e:    0f 88 6c 0b 00 00                  	js 0x138e0 <function_138e0>
0x12d74:    81 f9 ff 01 00 00                  	cmp ecx, 0x1ff
0x12d7a:    0f 8f 70 0a 00 00                  	jg 0x137f0 <function_137f0>
0x12d80:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x12d84:    8b 4c 24 7c                        	mov ecx, dword ptr [esp + 0x7c]
0x12d88:    01 fa                              	add edx, edi
0x12d8a:    89 54 24 70                        	mov dword ptr [esp + 0x70], edx
0x12d8e:    89 c2                              	mov edx, eax
0x12d90:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x12d94:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x12d98:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x12d9c:    89 84 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], eax
0x12da3:    89 94 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], edx
0x12daa:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x12dae:    89 8c 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], ecx
0x12db5:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x12db9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x12dbd:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x12dc1:    89 8c 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], ecx
0x12dc8:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x12dcc:    89 8c 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], ecx
0x12dd3:    8b 4c 24 54                        	mov ecx, dword ptr [esp + 0x54]
0x12dd7:    89 8c 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ecx
0x12dde:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x12de2:    89 8c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ecx
0x12de9:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x12ded:    89 8c 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ecx
0x12df4:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x12df8:    89 8c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ecx
0x12dff:    8b 4c 24 60                        	mov ecx, dword ptr [esp + 0x60]
0x12e03:    89 8c 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], ecx
0x12e0a:    8b 4c 24 7c                        	mov ecx, dword ptr [esp + 0x7c]
0x12e0e:    89 8c 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], ecx
0x12e15:    8b 4c 24 78                        	mov ecx, dword ptr [esp + 0x78]
0x12e19:    89 8c 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], ecx
0x12e20:    8d 8c 24 bc 00 00 00               	lea ecx, [esp + 0xbc]
0x12e27:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x12e2b:    8d 8c 24 ac 00 00 00               	lea ecx, [esp + 0xac]
0x12e32:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x12e36:    8d 8c 24 9c 00 00 00               	lea ecx, [esp + 0x9c]
0x12e3d:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x12e41:    8d 8c 24 80 00 00 00               	lea ecx, [esp + 0x80]
0x12e48:    89 0c 24                           	mov dword ptr [esp], ecx
0x12e4b:    e8 50 0b 01 00                     	call 0x239a0 <unknown_239a0>
0x12e50:    83 ec 04                           	sub esp, 4
0x12e53:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x12e57:    89 ac 24 a8 01 00 00               	mov dword ptr [esp + 0x1a8], ebp
0x12e5e:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x12e62:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x12e66:    89 4b 08                           	mov dword ptr [ebx + 8], ecx
0x12e69:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x12e6d:    8b 2e                              	mov ebp, dword ptr [esi]
0x12e6f:    89 84 24 80 01 00 00               	mov dword ptr [esp + 0x180], eax
0x12e76:    89 94 24 88 01 00 00               	mov dword ptr [esp + 0x188], edx
0x12e7d:    89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0x12e80:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x12e84:    89 ac 24 8c 01 00 00               	mov dword ptr [esp + 0x18c], ebp
0x12e8b:    89 4b 10                           	mov dword ptr [ebx + 0x10], ecx
0x12e8e:    8b 4c 24 54                        	mov ecx, dword ptr [esp + 0x54]
0x12e92:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x12e95:    89 4b 14                           	mov dword ptr [ebx + 0x14], ecx
0x12e98:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x12e9c:    8d 9c 24 fc 00 00 00               	lea ebx, [esp + 0xfc]
0x12ea3:    89 ac 24 94 01 00 00               	mov dword ptr [esp + 0x194], ebp
0x12eaa:    8b 6c 24 70                        	mov ebp, dword ptr [esp + 0x70]
0x12eae:    89 8c 24 9c 01 00 00               	mov dword ptr [esp + 0x19c], ecx
0x12eb5:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x12eb9:    89 ac 24 7c 01 00 00               	mov dword ptr [esp + 0x17c], ebp
0x12ec0:    8d ac 24 9c 01 00 00               	lea ebp, [esp + 0x19c]
0x12ec7:    89 8c 24 a0 01 00 00               	mov dword ptr [esp + 0x1a0], ecx
0x12ece:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x12ed2:    89 8c 24 a4 01 00 00               	mov dword ptr [esp + 0x1a4], ecx
0x12ed9:    8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x12edc:    89 8c 24 90 01 00 00               	mov dword ptr [esp + 0x190], ecx
0x12ee3:    8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0x12ee6:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x12eea:    8b 2e                              	mov ebp, dword ptr [esi]
0x12eec:    89 8c 24 98 01 00 00               	mov dword ptr [esp + 0x198], ecx
0x12ef3:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x12ef7:    89 8c 24 84 01 00 00               	mov dword ptr [esp + 0x184], ecx
0x12efe:    89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x12f02:    8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x12f05:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x12f09:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x12f0c:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x12f10:    8b 6c 24 70                        	mov ebp, dword ptr [esp + 0x70]
0x12f14:    8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0x12f17:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x12f1b:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x12f1f:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x12f23:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x12f27:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x12f2b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x12f2f:    89 1c 24                           	mov dword ptr [esp], ebx
0x12f32:    e8 39 23 01 00                     	call 0x25270 <unknown_25270>
0x12f37:    8b 2e                              	mov ebp, dword ptr [esi]
0x12f39:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x12f3c:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x12f3f:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x12f42:    89 ee                              	mov esi, ebp
0x12f44:    29 c6                              	sub esi, eax
0x12f46:    83 ec 04                           	sub esp, 4
0x12f49:    29 fe                              	sub esi, edi
0x12f4b:    0f 88 7f 09 00 00                  	js 0x138d0 <function_138d0>
0x12f51:    81 fe ff 01 00 00                  	cmp esi, 0x1ff
0x12f57:    0f 8f e3 08 00 00                  	jg 0x13840 <function_13840>
0x12f5d:    03 6c 24 74                        	add ebp, dword ptr [esp + 0x74]
0x12f61:    89 8c 24 b4 01 00 00               	mov dword ptr [esp + 0x1b4], ecx
0x12f68:    8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0x12f6c:    89 94 24 b8 01 00 00               	mov dword ptr [esp + 0x1b8], edx
0x12f73:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x12f77:    89 84 24 b0 01 00 00               	mov dword ptr [esp + 0x1b0], eax
0x12f7e:    8d 84 24 ac 01 00 00               	lea eax, [esp + 0x1ac]
0x12f85:    89 ac 24 ac 01 00 00               	mov dword ptr [esp + 0x1ac], ebp
0x12f8c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x12f90:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x12f94:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x12f98:    89 1c 24                           	mov dword ptr [esp], ebx
0x12f9b:    e8 a0 27 01 00                     	call 0x25740 <unknown_25740>
0x12fa0:    83 ec 04                           	sub esp, 4
0x12fa3:    8b 8c 24 3c 02 00 00               	mov ecx, dword ptr [esp + 0x23c]
0x12faa:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x12fb1:    0f 85 54 09 00 00                  	jne 0x1390b <function_1390b>
0x12fb7:    81 c4 4c 02 00 00                  	add esp, 0x24c
0x12fbd:    5b                                 	pop ebx
0x12fbe:    5e                                 	pop esi
0x12fbf:    5f                                 	pop edi
0x12fc0:    5d                                 	pop ebp
0x12fc1:    c3                                 	ret 
; data inside code section at 0x12fc2 -- 0x12fc8
0x12fc2:    8d b6 00 00 00 00                                  |......          |
0x12fc8:    8b 6b 20                           	mov ebp, dword ptr [ebx + 0x20]
0x12fcb:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x12fcf:    29 d5                              	sub ebp, edx
0x12fd1:    83 ed 01                           	sub ebp, 1
0x12fd4:    39 ef                              	cmp edi, ebp
0x12fd6:    0f 87 5c 02 00 00                  	ja 0x13238 <_ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j+0x648>
0x12fdc:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x12fe0:    01 f8                              	add eax, edi
0x12fe2:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x12fe6:    0f 88 64 03 00 00                  	js 0x13350 <function_13350>
0x12fec:    3d ff 01 00 00                     	cmp eax, 0x1ff
0x12ff1:    0f 8e 39 03 00 00                  	jle 0x13330 <function_13330>
0x12ff7:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x12ffb:    85 c0                              	test eax, eax
0x12ffd:    0f 8e 4d 03 00 00                  	jle 0x13350 <function_13350>
0x13003:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x13007:    c1 fd 09                           	sar ebp, 9
0x1300a:    8d 04 a9                           	lea eax, [ecx + ebp*4]
0x1300d:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x13011:    8b 00                              	mov eax, dword ptr [eax]
0x13013:    c1 e5 09                           	shl ebp, 9
0x13016:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1301a:    05 00 02 00 00                     	add eax, 0x200
0x1301f:    89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x13023:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x13027:    29 e8                              	sub eax, ebp
0x13029:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1302d:    01 c5                              	add ebp, eax
0x1302f:    89 6c 24 60                        	mov dword ptr [esp + 0x60], ebp
0x13033:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13037:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1303b:    2b 6c 24 44                        	sub ebp, dword ptr [esp + 0x44]
0x1303f:    29 e8                              	sub eax, ebp
0x13041:    89 6c 24 44                        	mov dword ptr [esp + 0x44], ebp
0x13045:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x13049:    0f 88 19 08 00 00                  	js 0x13868 <function_13868>
0x1304f:    3d ff 01 00 00                     	cmp eax, 0x1ff
0x13054:    0f 8f f6 06 00 00                  	jg 0x13750 <function_13750>
0x1305a:    89 d0                              	mov eax, edx
0x1305c:    29 e8                              	sub eax, ebp
0x1305e:    8b 6c 24 4c                        	mov ebp, dword ptr [esp + 0x4c]
0x13062:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x13066:    89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0x1306a:    89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0x1306e:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x13072:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13076:    39 7c 24 44                        	cmp dword ptr [esp + 0x44], edi
0x1307a:    89 6e 04                           	mov dword ptr [esi + 4], ebp
0x1307d:    89 06                              	mov dword ptr [esi], eax
0x1307f:    8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x13083:    89 46 08                           	mov dword ptr [esi + 8], eax
0x13086:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1308a:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x1308d:    0f 8f 75 04 00 00                  	jg 0x13508 <function_13508>
0x13093:    8b 7b 20                           	mov edi, dword ptr [ebx + 0x20]
0x13096:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x1309a:    03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0x1309e:    8b 4b 18                           	mov ecx, dword ptr [ebx + 0x18]
0x130a1:    89 7c 24 4c                        	mov dword ptr [esp + 0x4c], edi
0x130a5:    8b 53 1c                           	mov edx, dword ptr [ebx + 0x1c]
0x130a8:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x130ac:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x130b0:    8b 7b 24                           	mov edi, dword ptr [ebx + 0x24]
0x130b3:    89 8c 24 1c 02 00 00               	mov dword ptr [esp + 0x21c], ecx
0x130ba:    89 94 24 20 02 00 00               	mov dword ptr [esp + 0x220], edx
0x130c1:    89 84 24 24 02 00 00               	mov dword ptr [esp + 0x224], eax
0x130c8:    8d 84 24 1c 02 00 00               	lea eax, [esp + 0x21c]
0x130cf:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x130d3:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x130d7:    89 bc 24 28 02 00 00               	mov dword ptr [esp + 0x228], edi
0x130de:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x130e2:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x130e6:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x130ea:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x130ee:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x130f2:    8d 84 24 0c 01 00 00               	lea eax, [esp + 0x10c]
0x130f9:    89 04 24                           	mov dword ptr [esp], eax
0x130fc:    e8 3f 26 01 00                     	call 0x25740 <unknown_25740>
0x13101:    83 ec 04                           	sub esp, 4
0x13104:    8b 84 24 0c 01 00 00               	mov eax, dword ptr [esp + 0x10c]
0x1310b:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x1310f:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x13113:    89 bc 24 68 01 00 00               	mov dword ptr [esp + 0x168], edi
0x1311a:    8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0x1311e:    89 84 24 6c 01 00 00               	mov dword ptr [esp + 0x16c], eax
0x13125:    8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0x1312c:    89 8c 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], ecx
0x13133:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x13137:    89 94 24 60 01 00 00               	mov dword ptr [esp + 0x160], edx
0x1313e:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x13142:    89 ac 24 50 01 00 00               	mov dword ptr [esp + 0x150], ebp
0x13149:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1314d:    89 84 24 70 01 00 00               	mov dword ptr [esp + 0x170], eax
0x13154:    8b 84 24 14 01 00 00               	mov eax, dword ptr [esp + 0x114]
0x1315b:    89 bc 24 54 01 00 00               	mov dword ptr [esp + 0x154], edi
0x13162:    8d bc 24 fc 00 00 00               	lea edi, [esp + 0xfc]
0x13169:    89 94 24 64 01 00 00               	mov dword ptr [esp + 0x164], edx
0x13170:    89 8c 24 4c 01 00 00               	mov dword ptr [esp + 0x14c], ecx
0x13177:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x1317e:    8b 84 24 18 01 00 00               	mov eax, dword ptr [esp + 0x118]
0x13185:    89 ac 24 58 01 00 00               	mov dword ptr [esp + 0x158], ebp
0x1318c:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x13190:    89 3c 24                           	mov dword ptr [esp], edi
0x13193:    89 84 24 78 01 00 00               	mov dword ptr [esp + 0x178], eax
0x1319a:    8d 84 24 6c 01 00 00               	lea eax, [esp + 0x16c]
0x131a1:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x131a5:    8d 84 24 5c 01 00 00               	lea eax, [esp + 0x15c]
0x131ac:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x131b0:    8d 84 24 4c 01 00 00               	lea eax, [esp + 0x14c]
0x131b7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x131bb:    e8 e0 07 01 00                     	call 0x239a0 <unknown_239a0>
0x131c0:    83 ec 04                           	sub esp, 4
0x131c3:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x131c7:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x131cb:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x131cf:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x131d3:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x131d6:    89 6b 24                           	mov dword ptr [ebx + 0x24], ebp
0x131d9:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x131dc:    89 53 1c                           	mov dword ptr [ebx + 0x1c], edx
0x131df:    89 4b 20                           	mov dword ptr [ebx + 0x20], ecx
0x131e2:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x131e5:    8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x131e8:    89 84 24 38 02 00 00               	mov dword ptr [esp + 0x238], eax
0x131ef:    8d 84 24 2c 02 00 00               	lea eax, [esp + 0x22c]
0x131f6:    8b 1e                              	mov ebx, dword ptr [esi]
0x131f8:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x131fc:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x13200:    89 94 24 34 02 00 00               	mov dword ptr [esp + 0x234], edx
0x13207:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x1320b:    89 8c 24 30 02 00 00               	mov dword ptr [esp + 0x230], ecx
0x13212:    89 9c 24 2c 02 00 00               	mov dword ptr [esp + 0x22c], ebx
0x13219:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1321d:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x13221:    89 3c 24                           	mov dword ptr [esp], edi
0x13224:    e8 17 25 01 00                     	call 0x25740 <unknown_25740>
0x13229:    83 ec 04                           	sub esp, 4
0x1322c:    e9 72 fd ff ff                     	jmp 0x12fa3 <_ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j+0x3b3>
; data inside code section at 0x13231 -- 0x13238
0x13231:    8d b4 26 00 00 00 00                               |..&....         |
0x13238:    89 fa                              	mov edx, edi
0x1323a:    29 ea                              	sub edx, ebp
0x1323c:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x13240:    89 1c 24                           	mov dword ptr [esp], ebx
0x13243:    e8 58 06 01 00                     	call 0x238a0 <unknown_238a0>
0x13248:    8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x1324b:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x1324e:    8b 4b 20                           	mov ecx, dword ptr [ebx + 0x20]
0x13251:    89 d5                              	mov ebp, edx
0x13253:    29 c5                              	sub ebp, eax
0x13255:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x13259:    89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
; data inside code section at 0x1325d -- 0x13260
0x1325d:    8b 44 24                                           |.D$             |
; function: function_13260 at 0x13260 -- 0x13279
0x13260:    40                                 	inc eax
0x13261:    89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x13265:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x13268:    01 f8                              	add eax, edi
0x1326a:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x1326e:    0f 89 78 fd ff ff                  	jns 0x12fec
0x13274:    e9 d7 00 00 00                     	jmp 0x13350 <function_13350>
; data inside code section at 0x13279 -- 0x13280
0x13279:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_13280 at 0x13280 -- 0x132c7
0x13280:    89 f9                              	mov ecx, edi
0x13282:    29 c1                              	sub ecx, eax
0x13284:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x13288:    89 1c 24                           	mov dword ptr [esp], ebx
0x1328b:    e8 20 04 01 00                     	call 0x236b0 <unknown_236b0>
0x13290:    8b 6b 08                           	mov ebp, dword ptr [ebx + 8]
0x13293:    89 f9                              	mov ecx, edi
0x13295:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13298:    f7 d9                              	neg ecx
0x1329a:    8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x1329d:    89 4c 24 74                        	mov dword ptr [esp + 0x74], ecx
0x132a1:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x132a5:    8b 6b 14                           	mov ebp, dword ptr [ebx + 0x14]
0x132a8:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x132ac:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x132b0:    2b 44 24 40                        	sub eax, dword ptr [esp + 0x40]
0x132b4:    89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x132b8:    89 c2                              	mov edx, eax
0x132ba:    29 fa                              	sub edx, edi
0x132bc:    0f 89 0a fa ff ff                  	jns 0x12ccc
0x132c2:    e9 a1 00 00 00                     	jmp 0x13368
; data inside code section at 0x132c7 -- 0x132c8
0x132c7:    90                                                 |.               |
; function: function_132c8 at 0x132c8 -- 0x132d9
0x132c8:    85 d2                              	test edx, edx
0x132ca:    0f 8e 98 00 00 00                  	jle 0x13368
0x132d0:    89 d1                              	mov ecx, edx
0x132d2:    c1 f9 09                           	sar ecx, 9
0x132d5:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
; function: function_132d9 at 0x132d9 -- 0x1332a
0x132d9:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x132dd:    8d 4c 8d 00                        	lea ecx, [ebp + ecx*4]
0x132e1:    89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0x132e5:    8b 09                              	mov ecx, dword ptr [ecx]
0x132e7:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x132eb:    81 c1 00 02 00 00                  	add ecx, 0x200
0x132f1:    89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x132f5:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x132f9:    c1 e1 09                           	shl ecx, 9
0x132fc:    29 ca                              	sub edx, ecx
0x132fe:    03 54 24 48                        	add edx, dword ptr [esp + 0x48]
0x13302:    03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0x13306:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x1330a:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1330e:    0f 89 f0 f9 ff ff                  	jns 0x12d04
0x13314:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x13318:    c1 ea 09                           	shr edx, 9
0x1331b:    81 ca 00 00 80 ff                  	or edx, 0xff800000
0x13321:    89 54 24 70                        	mov dword ptr [esp + 0x70], edx
0x13325:    e9 8d 04 00 00                     	jmp 0x137b7 <function_137b7>
; data inside code section at 0x1332a -- 0x13330
0x1332a:    8d b6 00 00 00 00                                  |......          |
; function: function_13330 at 0x13330 -- 0x13350
0x13330:    8d 2c 3a                           	lea ebp, [edx + edi]
0x13333:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x13337:    89 6c 24 60                        	mov dword ptr [esp + 0x60], ebp
0x1333b:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x1333f:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x13343:    89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x13347:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1334b:    e9 e3 fc ff ff                     	jmp 0x13033
; function: function_13350 at 0x13350 -- 0x13362
0x13350:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x13354:    c1 ed 09                           	shr ebp, 9
0x13357:    81 cd 00 00 80 ff                  	or ebp, 0xff800000
0x1335d:    e9 a8 fc ff ff                     	jmp 0x1300a
; data inside code section at 0x13362 -- 0x13366
0x13362:    8d b6 00 00                                        |....            |
; function: function_13366 at 0x13366 -- 0x1337c
0x13366:    00 00                              	add byte ptr [eax], al
0x13368:    89 d1                              	mov ecx, edx
0x1336a:    c1 e9 09                           	shr ecx, 9
0x1336d:    81 c9 00 00 80 ff                  	or ecx, 0xff800000
0x13373:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x13377:    e9 5d ff ff ff                     	jmp 0x132d9 <function_132d9>
; data inside code section at 0x1337c -- 0x13380
0x1337c:    8d 74 26 00                                        |.t&.            |
; function: function_13380 at 0x13380 -- 0x13399
0x13380:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x13384:    89 84 24 30 01 00 00               	mov dword ptr [esp + 0x130], eax
0x1338b:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x1338f:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13392:    89 94 24 38 01 00 00               	mov dword ptr [esp + 0x138], edx
; data inside code section at 0x13399 -- 0x1339a
0x13399:    8b                                                 |.               |
; function: function_1339a at 0x1339a -- 0x133ce
0x1339a:    53                                 	push ebx
0x1339b:    0c 89                              	or al, 0x89
0x1339d:    8c 24 3c                           	mov word ptr [esp + edi], fs
0x133a0:    01 00                              	add dword ptr [eax], eax
0x133a2:    00 8b 4c 24 48 89                  	add byte ptr [ebx - 0x76b7dbb4], cl
0x133a8:    84 24 34                           	test byte ptr [esp + esi], ah
0x133ab:    01 00                              	add dword ptr [eax], eax
0x133ad:    00 8b 43 14 89 b4                  	add byte ptr [ebx - 0x4b76ebbd], cl
0x133b3:    24 1c                              	and al, 0x1c
0x133b5:    01 00                              	add dword ptr [eax], eax
0x133b7:    00 8d b4 24 fc 00                  	add byte ptr [ebp + 0xfc24b4], cl
0x133bd:    00 00                              	add byte ptr [eax], al
0x133bf:    2b 7c 24 44                        	sub edi, dword ptr [esp + 0x44]
0x133c3:    89 8c 24 40 01 00 00               	mov dword ptr [esp + 0x140], ecx
0x133ca:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
; function: function_133ce at 0x133ce -- 0x1349c
0x133ce:    89 84 24 28 01 00 00               	mov dword ptr [esp + 0x128], eax
0x133d5:    8d 84 24 3c 01 00 00               	lea eax, [esp + 0x13c]
0x133dc:    03 7c 24 64                        	add edi, dword ptr [esp + 0x64]
0x133e0:    89 94 24 20 01 00 00               	mov dword ptr [esp + 0x120], edx
0x133e7:    89 8c 24 44 01 00 00               	mov dword ptr [esp + 0x144], ecx
0x133ee:    8b 4c 24 54                        	mov ecx, dword ptr [esp + 0x54]
0x133f2:    89 8c 24 48 01 00 00               	mov dword ptr [esp + 0x148], ecx
0x133f9:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x133fd:    89 8c 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], ecx
0x13404:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x13407:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1340b:    8d 84 24 2c 01 00 00               	lea eax, [esp + 0x12c]
0x13412:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x13416:    8d 84 24 1c 01 00 00               	lea eax, [esp + 0x11c]
0x1341d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13421:    89 8c 24 24 01 00 00               	mov dword ptr [esp + 0x124], ecx
0x13428:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x1342c:    89 34 24                           	mov dword ptr [esp], esi
0x1342f:    e8 6c 05 01 00                     	call 0x239a0 <unknown_239a0>
0x13434:    83 ec 04                           	sub esp, 4
0x13437:    8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x1343e:    8d 94 24 0c 01 00 00               	lea edx, [esp + 0x10c]
0x13445:    8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0x13449:    89 14 24                           	mov dword ptr [esp], edx
0x1344c:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x13450:    89 84 24 bc 01 00 00               	mov dword ptr [esp + 0x1bc], eax
0x13457:    8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x1345e:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x13462:    89 84 24 c0 01 00 00               	mov dword ptr [esp + 0x1c0], eax
0x13469:    8b 84 24 04 01 00 00               	mov eax, dword ptr [esp + 0x104]
0x13470:    89 84 24 c4 01 00 00               	mov dword ptr [esp + 0x1c4], eax
0x13477:    8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0x1347e:    89 84 24 c8 01 00 00               	mov dword ptr [esp + 0x1c8], eax
0x13485:    8d 84 24 bc 01 00 00               	lea eax, [esp + 0x1bc]
0x1348c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x13490:    e8 ab 22 01 00                     	call 0x25740 <unknown_25740>
0x13495:    83 ec 04                           	sub esp, 4
0x13498:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
; data inside code section at 0x1349c -- 0x1349e
0x1349c:    8b 54                                              |.T              |
; function: function_1349e at 0x1349e -- 0x13503
0x1349e:    24 48                              	and al, 0x48
0x134a0:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x134a4:    89 ac 24 d8 01 00 00               	mov dword ptr [esp + 0x1d8], ebp
0x134ab:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x134ae:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x134b2:    89 53 0c                           	mov dword ptr [ebx + 0xc], edx
0x134b5:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x134b9:    89 4b 10                           	mov dword ptr [ebx + 0x10], ecx
0x134bc:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x134c0:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x134c3:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x134c7:    89 94 24 cc 01 00 00               	mov dword ptr [esp + 0x1cc], edx
0x134ce:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x134d2:    89 8c 24 d0 01 00 00               	mov dword ptr [esp + 0x1d0], ecx
0x134d9:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x134dd:    89 84 24 d4 01 00 00               	mov dword ptr [esp + 0x1d4], eax
0x134e4:    8d 84 24 cc 01 00 00               	lea eax, [esp + 0x1cc]
0x134eb:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x134ef:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x134f3:    89 34 24                           	mov dword ptr [esp], esi
0x134f6:    e8 45 22 01 00                     	call 0x25740 <unknown_25740>
0x134fb:    83 ec 04                           	sub esp, 4
0x134fe:    e9 a0 fa ff ff                     	jmp 0x12fa3
; data inside code section at 0x13503 -- 0x13508
0x13503:    90 8d 74 26 00                                     |..t&.           |
; function: function_13508 at 0x13508 -- 0x1374d
0x13508:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x1350b:    8b 6b 18                           	mov ebp, dword ptr [ebx + 0x18]
0x1350e:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x13512:    8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0x13515:    89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0x13519:    8b 6b 20                           	mov ebp, dword ptr [ebx + 0x20]
0x1351c:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x13520:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13524:    2b 44 24 44                        	sub eax, dword ptr [esp + 0x44]
0x13528:    89 6c 24 70                        	mov dword ptr [esp + 0x70], ebp
0x1352c:    29 f8                              	sub eax, edi
0x1352e:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x13532:    0f 88 c0 03 00 00                  	js 0x138f8 <function_138f8>
0x13538:    3d ff 01 00 00                     	cmp eax, 0x1ff
0x1353d:    0f 8f 3d 03 00 00                  	jg 0x13880 <function_13880>
0x13543:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x13547:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1354b:    29 fd                              	sub ebp, edi
0x1354d:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x13551:    89 6c 24 74                        	mov dword ptr [esp + 0x74], ebp
0x13555:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x13559:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1355d:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13561:    89 bc 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], edi
0x13568:    89 ac 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], ebp
0x1356f:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x13573:    89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x1357a:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x1357e:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x13582:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x13586:    89 84 24 f0 00 00 00               	mov dword ptr [esp + 0xf0], eax
0x1358d:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x13591:    89 84 24 f4 00 00 00               	mov dword ptr [esp + 0xf4], eax
0x13598:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1359c:    89 84 24 f8 00 00 00               	mov dword ptr [esp + 0xf8], eax
0x135a3:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x135a7:    89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0x135ae:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x135b2:    89 84 24 e0 00 00 00               	mov dword ptr [esp + 0xe0], eax
0x135b9:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x135bd:    89 84 24 e4 00 00 00               	mov dword ptr [esp + 0xe4], eax
0x135c4:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x135c8:    89 84 24 e8 00 00 00               	mov dword ptr [esp + 0xe8], eax
0x135cf:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x135d3:    89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x135da:    8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x135de:    89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x135e5:    8d 84 24 ec 00 00 00               	lea eax, [esp + 0xec]
0x135ec:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x135f0:    8d 84 24 dc 00 00 00               	lea eax, [esp + 0xdc]
0x135f7:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x135fb:    8d 84 24 cc 00 00 00               	lea eax, [esp + 0xcc]
0x13602:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13606:    8d 84 24 80 00 00 00               	lea eax, [esp + 0x80]
0x1360d:    89 04 24                           	mov dword ptr [esp], eax
0x13610:    e8 8b 03 01 00                     	call 0x239a0 <unknown_239a0>
0x13615:    83 ec 04                           	sub esp, 4
0x13618:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x1361c:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x13620:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x13624:    89 bc 24 f0 01 00 00               	mov dword ptr [esp + 0x1f0], edi
0x1362b:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1362e:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x13632:    89 94 24 fc 01 00 00               	mov dword ptr [esp + 0x1fc], edx
0x13639:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x1363d:    89 8c 24 08 02 00 00               	mov dword ptr [esp + 0x208], ecx
0x13644:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x13648:    89 ac 24 f8 01 00 00               	mov dword ptr [esp + 0x1f8], ebp
0x1364f:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x13652:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x13656:    89 94 24 00 02 00 00               	mov dword ptr [esp + 0x200], edx
0x1365d:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x13661:    89 8c 24 f4 01 00 00               	mov dword ptr [esp + 0x1f4], ecx
0x13668:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1366b:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x1366f:    89 94 24 ec 01 00 00               	mov dword ptr [esp + 0x1ec], edx
0x13676:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x13679:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x1367c:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1367f:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x13683:    8d 9c 24 fc 00 00 00               	lea ebx, [esp + 0xfc]
0x1368a:    89 94 24 e0 01 00 00               	mov dword ptr [esp + 0x1e0], edx
0x13691:    8d 94 24 fc 01 00 00               	lea edx, [esp + 0x1fc]
0x13698:    89 8c 24 e4 01 00 00               	mov dword ptr [esp + 0x1e4], ecx
0x1369f:    89 84 24 04 02 00 00               	mov dword ptr [esp + 0x204], eax
0x136a6:    8b 06                              	mov eax, dword ptr [esi]
0x136a8:    89 84 24 dc 01 00 00               	mov dword ptr [esp + 0x1dc], eax
0x136af:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x136b2:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x136b6:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x136ba:    89 84 24 e8 01 00 00               	mov dword ptr [esp + 0x1e8], eax
0x136c1:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x136c5:    89 7c 24 18                        	mov dword ptr [esp + 0x18], edi
0x136c9:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x136cd:    89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0x136d1:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x136d5:    8b 3e                              	mov edi, dword ptr [esi]
0x136d7:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x136db:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x136de:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x136e2:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x136e5:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x136e9:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x136ec:    89 1c 24                           	mov dword ptr [esp], ebx
0x136ef:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x136f3:    e8 b8 1d 01 00                     	call 0x254b0 <unknown_254b0>
0x136f8:    8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x136fb:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x136fe:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x13701:    8b 36                              	mov esi, dword ptr [esi]
0x13703:    83 ec 04                           	sub esp, 4
0x13706:    89 8c 24 10 02 00 00               	mov dword ptr [esp + 0x210], ecx
0x1370d:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x13711:    8b 4c 24 6c                        	mov ecx, dword ptr [esp + 0x6c]
0x13715:    89 84 24 18 02 00 00               	mov dword ptr [esp + 0x218], eax
0x1371c:    8d 84 24 0c 02 00 00               	lea eax, [esp + 0x20c]
0x13723:    89 b4 24 0c 02 00 00               	mov dword ptr [esp + 0x20c], esi
0x1372a:    89 94 24 14 02 00 00               	mov dword ptr [esp + 0x214], edx
0x13731:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x13735:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x13739:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1373d:    89 1c 24                           	mov dword ptr [esp], ebx
0x13740:    e8 fb 1f 01 00                     	call 0x25740 <unknown_25740>
0x13745:    83 ec 04                           	sub esp, 4
0x13748:    e9 56 f8 ff ff                     	jmp 0x12fa3
; data inside code section at 0x1374d -- 0x13750
0x1374d:    8d 76 00                                           |.v.             |
; function: function_13750 at 0x13750 -- 0x1379c
0x13750:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13754:    85 c0                              	test eax, eax
0x13756:    0f 8e 0c 01 00 00                  	jle 0x13868 <function_13868>
0x1375c:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x13760:    c1 f8 09                           	sar eax, 9
0x13763:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x13767:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1376b:    8d 04 81                           	lea eax, [ecx + eax*4]
0x1376e:    8b 28                              	mov ebp, dword ptr [eax]
0x13770:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x13774:    8d 85 00 02 00 00                  	lea eax, [ebp + 0x200]
0x1377a:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1377e:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x13782:    c1 e0 09                           	shl eax, 9
0x13785:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x13789:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1378d:    2b 44 24 70                        	sub eax, dword ptr [esp + 0x70]
0x13791:    01 e8                              	add eax, ebp
0x13793:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x13797:    e9 d6 f8 ff ff                     	jmp 0x13072
; data inside code section at 0x1379c -- 0x137a0
0x1379c:    8d 74 26 00                                        |.t&.            |
; function: function_137a0 at 0x137a0 -- 0x137b7
0x137a0:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x137a4:    85 c0                              	test eax, eax
0x137a6:    0f 8e 68 fb ff ff                  	jle 0x13314 <function_13314>
0x137ac:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x137b0:    c1 f8 09                           	sar eax, 9
0x137b3:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
; function: function_137b7 at 0x137b7 -- 0x137e9
0x137b7:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x137bb:    8d 54 8d 00                        	lea edx, [ebp + ecx*4]
0x137bf:    8b 02                              	mov eax, dword ptr [edx]
0x137c1:    8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0x137c7:    89 4c 24 60                        	mov dword ptr [esp + 0x60], ecx
0x137cb:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x137cf:    c1 e1 09                           	shl ecx, 9
0x137d2:    89 4c 24 70                        	mov dword ptr [esp + 0x70], ecx
0x137d6:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x137da:    2b 4c 24 70                        	sub ecx, dword ptr [esp + 0x70]
0x137de:    01 c1                              	add ecx, eax
0x137e0:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x137e4:    e9 40 f5 ff ff                     	jmp 0x12d29
; data inside code section at 0x137e9 -- 0x137f0
0x137e9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_137f0 at 0x137f0 -- 0x1383c
0x137f0:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x137f4:    85 c0                              	test eax, eax
0x137f6:    0f 8e e4 00 00 00                  	jle 0x138e0 <function_138e0>
0x137fc:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x13800:    c1 f8 09                           	sar eax, 9
0x13803:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x13807:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x1380b:    8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x1380f:    8d 14 88                           	lea edx, [eax + ecx*4]
0x13812:    8b 02                              	mov eax, dword ptr [edx]
0x13814:    8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0x1381a:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x1381e:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x13822:    c1 e1 09                           	shl ecx, 9
0x13825:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x13829:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x1382d:    2b 4c 24 30                        	sub ecx, dword ptr [esp + 0x30]
0x13831:    01 c1                              	add ecx, eax
0x13833:    89 4c 24 70                        	mov dword ptr [esp + 0x70], ecx
0x13837:    e9 5c f5 ff ff                     	jmp 0x12d98
; data inside code section at 0x1383c -- 0x13840
0x1383c:    8d 74 26 00                                        |.t&.            |
; function: function_13840 at 0x13840 -- 0x13865
0x13840:    85 f6                              	test esi, esi
0x13842:    0f 8e 88 00 00 00                  	jle 0x138d0 <function_138d0>
0x13848:    89 f7                              	mov edi, esi
0x1384a:    c1 ff 09                           	sar edi, 9
0x1384d:    8d 14 ba                           	lea edx, [edx + edi*4]
0x13850:    8b 02                              	mov eax, dword ptr [edx]
0x13852:    c1 e7 09                           	shl edi, 9
0x13855:    29 fe                              	sub esi, edi
0x13857:    8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0x1385d:    8d 2c 30                           	lea ebp, [eax + esi]
0x13860:    e9 fc f6 ff ff                     	jmp 0x12f61
; data inside code section at 0x13865 -- 0x13868
0x13865:    8d 76 00                                           |.v.             |
; function: function_13868 at 0x13868 -- 0x1387e
0x13868:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x1386c:    c1 ed 09                           	shr ebp, 9
0x1386f:    81 cd 00 00 80 ff                  	or ebp, 0xff800000
0x13875:    89 6c 24 70                        	mov dword ptr [esp + 0x70], ebp
0x13879:    e9 e9 fe ff ff                     	jmp 0x13767
; data inside code section at 0x1387e -- 0x13880
0x1387e:    66 90                                              |f.              |
; function: function_13880 at 0x13880 -- 0x138c9
0x13880:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x13884:    85 c0                              	test eax, eax
0x13886:    7e 70                              	jle 0x138f8 <function_138f8>
0x13888:    8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x1388c:    c1 ff 09                           	sar edi, 9
0x1388f:    89 7c 24 78                        	mov dword ptr [esp + 0x78], edi
0x13893:    8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x13897:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1389b:    8d 2c 87                           	lea ebp, [edi + eax*4]
0x1389e:    8b 7d 00                           	mov edi, dword ptr [ebp]
0x138a1:    8d 87 00 02 00 00                  	lea eax, [edi + 0x200]
0x138a7:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x138ab:    8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x138af:    c1 e0 09                           	shl eax, 9
0x138b2:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x138b6:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x138ba:    2b 44 24 78                        	sub eax, dword ptr [esp + 0x78]
0x138be:    01 f8                              	add eax, edi
0x138c0:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x138c4:    e9 94 fc ff ff                     	jmp 0x1355d
; data inside code section at 0x138c9 -- 0x138d0
0x138c9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_138d0 at 0x138d0 -- 0x138e0
0x138d0:    89 f7                              	mov edi, esi
0x138d2:    c1 ef 09                           	shr edi, 9
0x138d5:    81 cf 00 00 80 ff                  	or edi, 0xff800000
0x138db:    e9 6d ff ff ff                     	jmp 0x1384d
; function: function_138e0 at 0x138e0 -- 0x138f6
0x138e0:    8b 54 24 70                        	mov edx, dword ptr [esp + 0x70]
0x138e4:    c1 ea 09                           	shr edx, 9
0x138e7:    81 ca 00 00 80 ff                  	or edx, 0xff800000
0x138ed:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x138f1:    e9 11 ff ff ff                     	jmp 0x13807
; data inside code section at 0x138f6 -- 0x138f8
0x138f6:    66 90                                              |f.              |
; function: function_138f8 at 0x138f8 -- 0x1390b
0x138f8:    8b 6c 24 74                        	mov ebp, dword ptr [esp + 0x74]
0x138fc:    c1 ed 09                           	shr ebp, 9
0x138ff:    81 cd 00 00 80 ff                  	or ebp, 0xff800000
0x13905:    89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x13909:    eb 88                              	jmp 0x13893
; function: function_1390b at 0x1390b -- 0x13910
0x1390b:    e8 fc ff ff ff                     	call 0x1390c
; section: .text._ZNSt5dequeIcSaIcEE19_M_range_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_St20forward_iterator_tag
; function: _ZNSt5dequeIcSaIcEE19_M_range_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_St20forward_iterator_tag at 0x13910 -- 0x139bb
0x13910:    81 ec 9c 00 00 00                  	sub esp, 0x9c
0x13916:    89 bc 24 94 00 00 00               	mov dword ptr [esp + 0x94], edi
0x1391d:    8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0x13924:    8b bc 24 ac 00 00 00               	mov edi, dword ptr [esp + 0xac]
0x1392b:    89 9c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ebx
0x13932:    8b 9c 24 a0 00 00 00               	mov ebx, dword ptr [esp + 0xa0]
0x13939:    89 b4 24 90 00 00 00               	mov dword ptr [esp + 0x90], esi
0x13940:    8b b4 24 a8 00 00 00               	mov esi, dword ptr [esp + 0xa8]
0x13947:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1394d:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x13951:    31 c0                              	xor eax, eax
0x13953:    8b 02                              	mov eax, dword ptr [edx]
0x13955:    89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0x1395c:    89 fd                              	mov ebp, edi
0x1395e:    29 f5                              	sub ebp, esi
0x13960:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x13963:    0f 84 7f 01 00 00                  	je 0x13ae8 <function_13ae8>
0x13969:    3b 43 18                           	cmp eax, dword ptr [ebx + 0x18]
0x1396c:    74 6a                              	je 0x139d8 <function_139d8>
0x1396e:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x13972:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x13975:    89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x13979:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x1397c:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x13980:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x13983:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x13987:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x1398b:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x1398f:    89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x13993:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x13997:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1399b:    89 1c 24                           	mov dword ptr [esp], ebx
0x1399e:    e8 5d 2b 01 00                     	call 0x26500 <unknown_26500>
0x139a3:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x139a7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x139ae:    0f 85 ca 01 00 00                  	jne 0x13b7e <function_13b7e>
0x139b4:    8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
; data inside code section at 0x139bb -- 0x139c0
0x139bb:    8b b4 24 90 00                                     |..$..           |
; function: function_139c0 at 0x139c0 -- 0x139d7
0x139c0:    00 00                              	add byte ptr [eax], al
0x139c2:    8b bc 24 94 00 00 00               	mov edi, dword ptr [esp + 0x94]
0x139c9:    8b ac 24 98 00 00 00               	mov ebp, dword ptr [esp + 0x98]
0x139d0:    81 c4 9c 00 00 00                  	add esp, 0x9c
0x139d6:    c3                                 	ret 
; data inside code section at 0x139d7 -- 0x139d8
0x139d7:    90                                                 |.               |
; function: function_139d8 at 0x139d8 -- 0x13ae2
0x139d8:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x139db:    89 d1                              	mov ecx, edx
0x139dd:    29 c1                              	sub ecx, eax
0x139df:    83 e9 01                           	sub ecx, 1
0x139e2:    39 cd                              	cmp ebp, ecx
0x139e4:    76 16                              	jbe 0x139fc <function_139d8+0x24>
0x139e6:    89 e8                              	mov eax, ebp
0x139e8:    29 c8                              	sub eax, ecx
0x139ea:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x139ee:    89 1c 24                           	mov dword ptr [esp], ebx
0x139f1:    e8 ca 0b 01 00                     	call 0x245c0 <unknown_245c0>
0x139f6:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x139f9:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x139fc:    8b 4b 1c                           	mov ecx, dword ptr [ebx + 0x1c]
0x139ff:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x13a03:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x13a06:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x13a0a:    89 c1                              	mov ecx, eax
0x13a0c:    2b 4c 24 30                        	sub ecx, dword ptr [esp + 0x30]
0x13a10:    01 e9                              	add ecx, ebp
0x13a12:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x13a16:    0f 88 4c 01 00 00                  	js 0x13b68 <function_13b68>
0x13a1c:    81 f9 ff 01 00 00                  	cmp ecx, 0x1ff
0x13a22:    7e 54                              	jle 0x13a78 <function_139d8+0xa0>
0x13a24:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x13a28:    85 c9                              	test ecx, ecx
0x13a2a:    0f 8e 38 01 00 00                  	jle 0x13b68 <function_13b68>
0x13a30:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x13a34:    c1 f9 09                           	sar ecx, 9
0x13a37:    89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0x13a3b:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x13a3f:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x13a43:    8d 4c 8d 00                        	lea ecx, [ebp + ecx*4]
0x13a47:    8b 29                              	mov ebp, dword ptr [ecx]
0x13a49:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x13a4d:    8d 8d 00 02 00 00                  	lea ecx, [ebp + 0x200]
0x13a53:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x13a57:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x13a5b:    c1 e1 09                           	shl ecx, 9
0x13a5e:    89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0x13a62:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x13a66:    2b 4c 24 28                        	sub ecx, dword ptr [esp + 0x28]
0x13a6a:    01 e9                              	add ecx, ebp
0x13a6c:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x13a70:    eb 1c                              	jmp 0x13a8e <function_139d8+0xb6>
; data inside code section at 0x13a72 -- 0x13a78
0x13a72:    8d b6 00 00 00 00                                  |......          |
0x13a78:    01 c5                              	add ebp, eax
0x13a7a:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x13a7e:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x13a82:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x13a86:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x13a8a:    8b 6c 24 30                        	mov ebp, dword ptr [esp + 0x30]
0x13a8e:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x13a92:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x13a96:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x13a9a:    89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0x13a9e:    8d 54 24 6c                        	lea edx, [esp + 0x6c]
0x13aa2:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x13aa6:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x13aaa:    8d 44 24 4c                        	lea eax, [esp + 0x4c]
0x13aae:    89 4c 24 78                        	mov dword ptr [esp + 0x78], ecx
0x13ab2:    89 04 24                           	mov dword ptr [esp], eax
0x13ab5:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x13ab9:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x13abd:    e8 9e 29 01 00                     	call 0x26460 <unknown_26460>
0x13ac2:    89 6b 1c                           	mov dword ptr [ebx + 0x1c], ebp
0x13ac5:    83 ec 04                           	sub esp, 4
0x13ac8:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x13acc:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x13ad0:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x13ad4:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x13ad7:    89 4b 20                           	mov dword ptr [ebx + 0x20], ecx
0x13ada:    89 6b 24                           	mov dword ptr [ebx + 0x24], ebp
0x13add:    e9 c1 fe ff ff                     	jmp 0x139a3
; data inside code section at 0x13ae2 -- 0x13ae8
0x13ae2:    8d b6 00 00 00 00                                  |......          |
; function: function_13ae8 at 0x13ae8 -- 0x13b61
0x13ae8:    8d 44 24 4c                        	lea eax, [esp + 0x4c]
0x13aec:    89 04 24                           	mov dword ptr [esp], eax
0x13aef:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x13af3:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x13af7:    e8 f4 09 01 00                     	call 0x244f0 <unknown_244f0>
0x13afc:    83 ec 04                           	sub esp, 4
0x13aff:    85 ed                              	test ebp, ebp
0x13b01:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x13b05:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x13b09:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x13b0d:    7e 31                              	jle 0x13b40 <function_13ae8+0x58>
0x13b0f:    89 d7                              	mov edi, edx
0x13b11:    eb 0d                              	jmp 0x13b20 <function_13ae8+0x38>
; data inside code section at 0x13b13 -- 0x13b18
0x13b13:    90 8d 74 26 00                                     |..t&.           |
0x13b18:    83 c6 01                           	add esi, 1
0x13b1b:    83 ed 01                           	sub ebp, 1
0x13b1e:    74 20                              	je 0x13b40 <function_13ae8+0x58>
0x13b20:    0f b6 16                           	movzx edx, byte ptr [esi]
0x13b23:    88 10                              	mov byte ptr [eax], dl
0x13b25:    83 c0 01                           	add eax, 1
0x13b28:    39 f8                              	cmp eax, edi
0x13b2a:    75 ec                              	jne 0x13b18 <function_13ae8+0x30>
0x13b2c:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x13b2f:    83 c1 04                           	add ecx, 4
0x13b32:    8d b8 00 02 00 00                  	lea edi, [eax + 0x200]
0x13b38:    eb de                              	jmp 0x13b18 <function_13ae8+0x30>
; data inside code section at 0x13b3a -- 0x13b40
0x13b3a:    8d b6 00 00 00 00                                  |......          |
0x13b40:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x13b44:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x13b47:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x13b4b:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x13b4e:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x13b52:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x13b55:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x13b59:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x13b5c:    e9 42 fe ff ff                     	jmp 0x139a3
; data inside code section at 0x13b61 -- 0x13b68
0x13b61:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_13b68 at 0x13b68 -- 0x13b7e
0x13b68:    8b 6c 24 2c                        	mov ebp, dword ptr [esp + 0x2c]
0x13b6c:    c1 ed 09                           	shr ebp, 9
0x13b6f:    81 cd 00 00 80 ff                  	or ebp, 0xff800000
0x13b75:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x13b79:    e9 bd fe ff ff                     	jmp 0x13a3b
; function: function_13b7e at 0x13b7e -- 0x13b7f
; dynamically linked function: __stack_chk_fail at 0x13b7f -- 0x13b80
; data inside code section at 0x13b80 -- 0x13b83
0x13b80:    ff ff ff                                           |...             |
; section: .text._ZNSs12_S_constructISt15_Deque_iteratorIcRcPcEEES2_T_S4_RKSaIcESt20forward_iterator_tag
; function: _ZNSs12_S_constructISt15_Deque_iteratorIcRcPcEEES2_T_S4_RKSaIcESt20forward_iterator_tag at 0x13b90 -- 0x13baf
0x13b90:    55                                 	push ebp
0x13b91:    57                                 	push edi
0x13b92:    56                                 	push esi
0x13b93:    53                                 	push ebx
0x13b94:    83 ec 3c                           	sub esp, 0x3c
0x13b97:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x13b9b:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x13b9f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13ba5:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x13ba9:    31 c0                              	xor eax, eax
0x13bab:    8b 7c 24 58                        	mov edi, dword ptr [esp + 0x58]
; data inside code section at 0x13baf -- 0x13bb0
0x13baf:    b8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x13bb0 -- 0x13c06
; data inside code section at 0x13c06 -- 0x13c07
0x13c06:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x13c07 -- 0x13c08
; data inside code section at 0x13c08 -- 0x13c0a
0x13c08:    ff ff                                              |..              |
; function: function_13c0a at 0x13c0a -- 0x13c79
0x13c0a:    ff 8b 3e 8b 13 8b                  	dec dword ptr [ebx - 0x74ec74c2]
0x13c10:    73 08                              	jae 0x13c1a <function_13c0a+0x10>
0x13c12:    8b 6b 0c                           	mov ebp, dword ptr [ebx + 0xc]
0x13c15:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
; data inside code section at 0x13c19 -- 0x13c1a
0x13c19:    83                                                 |.               |
0x13c1a:    c0 0c 39 d7                        	ror byte ptr [ecx + edi], 0xd7
0x13c1e:    74 30                              	je 0x13c50 <function_13c0a+0x46>
0x13c20:    89 c1                              	mov ecx, eax
0x13c22:    eb 0b                              	jmp 0x13c2f <function_13c0a+0x25>
; data inside code section at 0x13c24 -- 0x13c28
0x13c24:    8d 74 26 00                                        |.t&.            |
0x13c28:    83 c1 01                           	add ecx, 1
0x13c2b:    39 d7                              	cmp edi, edx
0x13c2d:    74 21                              	je 0x13c50 <function_13c0a+0x46>
0x13c2f:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x13c32:    83 c2 01                           	add edx, 1
0x13c35:    39 f2                              	cmp edx, esi
0x13c37:    88 19                              	mov byte ptr [ecx], bl
0x13c39:    75 ed                              	jne 0x13c28 <function_13c0a+0x1e>
0x13c3b:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x13c3e:    83 c1 01                           	add ecx, 1
0x13c41:    83 c5 04                           	add ebp, 4
0x13c44:    39 d7                              	cmp edi, edx
0x13c46:    8d b2 00 02 00 00                  	lea esi, [edx + 0x200]
0x13c4c:    75 e1                              	jne 0x13c2f <function_13c0a+0x25>
0x13c4e:    66 90                              	nop 
0x13c50:    81 7c 24 18 00 00 00 00            	cmp dword ptr [esp + 0x18], 0
0x13c58:    0f 84 5e ff ff ff                  	je 0x13bbc
0x13c5e:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x13c62:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x13c66:    c7 41 08 00 00 00 00               	mov dword ptr [ecx + 8], 0
0x13c6d:    89 11                              	mov dword ptr [ecx], edx
0x13c6f:    c6 44 11 0c 00                     	mov byte ptr [ecx + edx + 0xc], 0
0x13c74:    e9 43 ff ff ff                     	jmp 0x13bbc
; data inside code section at 0x13c79 -- 0x13c80
0x13c79:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_13c80 at 0x13c80 -- 0x13c81
; dynamically linked function: __stack_chk_fail at 0x13c81 -- 0x13c82
; data inside code section at 0x13c82 -- 0x13c85
0x13c82:    ff ff ff                                           |...             |
; section: .text._ZNSs19_M_replace_dispatchISt15_Deque_iteratorIcRcPcEEERSsN9__gnu_cxx17__normal_iteratorIS2_SsEES7_T_S8_St12__false_type
; function: _ZNSs19_M_replace_dispatchISt15_Deque_iteratorIcRcPcEEERSsN9__gnu_cxx17__normal_iteratorIS2_SsEES7_T_S8_St12__false_type at 0x13c90 -- 0x13ccd
0x13c90:    83 ec 6c                           	sub esp, 0x6c
0x13c93:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x13c9a:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x13ca1:    89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x13ca5:    31 c9                              	xor ecx, ecx
0x13ca7:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x13cab:    89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x13caf:    89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x13cb3:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x13cb7:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x13cba:    8b 68 04                           	mov ebp, dword ptr [eax + 4]
0x13cbd:    89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x13cc1:    8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0x13cc5:    89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x13cc9:    8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
; data inside code section at 0x13ccd -- 0x13cd0
0x13ccd:    89 4c 24                                           |.L$             |
; function: function_13cd0 at 0x13cd0 -- 0x13d4d
0x13cd0:    2c 8b                              	sub al, 0x8b
0x13cd2:    48                                 	dec eax
0x13cd3:    0c 8b                              	or al, 0x8b
0x13cd5:    00 89 6c 24 28 29                  	add byte ptr [ecx + 0x2928246c], cl
0x13cdb:    f7 89 4c 24 30 8b 0a 89 fd 89      	test dword ptr [ecx - 0x74cfdbb4], 0x89fd890a
0x13ce5:    44                                 	inc esp
0x13ce6:    24 24                              	and al, 0x24
0x13ce8:    8d 44 24 4b                        	lea eax, [esp + 0x4b]
0x13cec:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x13cf0:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x13cf3:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x13cf7:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x13cfa:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x13cfd:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x13d01:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x13d05:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13d09:    8d 44 24 34                        	lea eax, [esp + 0x34]
0x13d0d:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x13d11:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x13d15:    c6 44 24 0c 00                     	mov byte ptr [esp + 0xc], 0
0x13d1a:    89 04 24                           	mov dword ptr [esp], eax
0x13d1d:    e8 fe 3a 01 00                     	call 0x27820 <unknown_27820>
0x13d22:    8b 13                              	mov edx, dword ptr [ebx]
0x13d24:    2b 6a f4                           	sub ebp, dword ptr [edx - 0xc]
0x13d27:    8b 48 f4                           	mov ecx, dword ptr [eax - 0xc]
0x13d2a:    81 c5 fc ff ff 3f                  	add ebp, 0x3ffffffc
0x13d30:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x13d34:    39 e9                              	cmp ecx, ebp
0x13d36:    77 50                              	ja 0x13d88 <function_13d88>
0x13d38:    29 d6                              	sub esi, edx
0x13d3a:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x13d3e:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x13d42:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x13d46:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x13d4a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13d4d -- 0x13d4e
0x13d4d:    e8                                                 |.               |
; dynamically linked function: _ZNSs15_M_replace_safeEjjPKcj at 0x13d4e -- 0x13d4f
; data inside code section at 0x13d4f -- 0x13d53
0x13d4f:    ff ff ff 89                                        |....            |
; function: function_13d53 at 0x13d53 -- 0x13d54
0x13d53:    c3                                 	ret 
; data inside code section at 0x13d54 -- 0x13d60
0x13d54:    8d 44 24 44 89 04 24 e8  fc ff ff ff               |.D$D..$.....    |
; function: function_13d60 at 0x13d60 -- 0x13d88
0x13d60:    89 d8                              	mov eax, ebx
0x13d62:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x13d66:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13d6d:    75 14                              	jne 0x13d83 <function_13d60+0x23>
0x13d6f:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x13d73:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x13d77:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x13d7b:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x13d7f:    83 c4 6c                           	add esp, 0x6c
0x13d82:    c3                                 	ret 
0x13d83:    e8 fc ff ff ff                     	call 0x13d84
; function: function_13d88 at 0x13d88 -- 0x13d8f
0x13d88:    c7 04 24 b4 37 00 00               	mov dword ptr [esp], 0x37b4 ; "basic_string::_M_replace_dispatch"
; data inside code section at 0x13d8f -- 0x13d90
0x13d8f:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x13d90 -- 0x13d91
; data inside code section at 0x13d91 -- 0x13d95
0x13d91:    ff ff ff 89                                        |....            |
; function: function_13d95 at 0x13d95 -- 0x13d96
0x13d95:    c3                                 	ret 
; data inside code section at 0x13d96 -- 0x13d9e
0x13d96:    8d 44 24 44 89 04 24 e8                            |.D$D..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x13d9e -- 0x13d9f
; data inside code section at 0x13d9f -- 0x13da6
0x13d9f:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x13da6 -- 0x13da7
; data inside code section at 0x13da7 -- 0x13daa
0x13da7:    ff ff ff                                           |...             |
; section: .text._ZN5boost9algorithm6detail21find_format_all_impl2ISsNS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIS5_SsEEEEEENS9_INSB_IPcSsEEEESD_EEvRT_T0_T1_T2_T3_
; function: _ZN5boost9algorithm6detail21find_format_all_impl2ISsNS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIS5_SsEEEEEENS9_INSB_IPcSsEEEESD_EEvRT_T0_T1_T2_T3_ at 0x13db0 -- 0x13deb
0x13db0:    55                                 	push ebp
0x13db1:    57                                 	push edi
0x13db2:    56                                 	push esi
0x13db3:    53                                 	push ebx
0x13db4:    81 ec cc 00 00 00                  	sub esp, 0xcc
0x13dba:    8b 9c 24 e0 00 00 00               	mov ebx, dword ptr [esp + 0xe0]
0x13dc1:    8b 84 24 ec 00 00 00               	mov eax, dword ptr [esp + 0xec]
0x13dc8:    8b ac 24 e4 00 00 00               	mov ebp, dword ptr [esp + 0xe4]
0x13dcf:    8b bc 24 e8 00 00 00               	mov edi, dword ptr [esp + 0xe8]
0x13dd6:    89 5c 24 38                        	mov dword ptr [esp + 0x38], ebx
0x13dda:    8b 9c 24 f0 00 00 00               	mov ebx, dword ptr [esp + 0xf0]
0x13de1:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x13de5:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x13deb -- 0x13df0
0x13deb:    89 84 24 bc 00                                     |..$..           |
; function: function_13df0 at 0x13df0 -- 0x13ebe
0x13df0:    00 00                              	add byte ptr [eax], al
0x13df2:    31 c0                              	xor eax, eax
0x13df4:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x13df8:    89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0x13dfc:    89 5c 24 48                        	mov dword ptr [esp + 0x48], ebx
0x13e00:    8b 9c 24 f4 00 00 00               	mov ebx, dword ptr [esp + 0xf4]
0x13e07:    89 7c 24 58                        	mov dword ptr [esp + 0x58], edi
0x13e0b:    c7 44 24 64 00 00 00 00            	mov dword ptr [esp + 0x64], 0
0x13e13:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x13e1b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x13e1f:    8b 9c 24 f8 00 00 00               	mov ebx, dword ptr [esp + 0xf8]
0x13e26:    c7 44 24 6c 00 00 00 00            	mov dword ptr [esp + 0x6c], 0
0x13e2e:    c7 44 24 70 00 00 00 00            	mov dword ptr [esp + 0x70], 0
0x13e36:    c7 44 24 74 00 00 00 00            	mov dword ptr [esp + 0x74], 0
0x13e3e:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x13e42:    8b 9c 24 fc 00 00 00               	mov ebx, dword ptr [esp + 0xfc]
0x13e49:    c7 44 24 78 00 00 00 00            	mov dword ptr [esp + 0x78], 0
0x13e51:    c7 44 24 7c 00 00 00 00            	mov dword ptr [esp + 0x7c], 0
0x13e59:    89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x13e5d:    8b 9c 24 00 01 00 00               	mov ebx, dword ptr [esp + 0x100]
0x13e64:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x13e68:    8b 9c 24 04 01 00 00               	mov ebx, dword ptr [esp + 0x104]
0x13e6f:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x13e73:    c7 84 24 80 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x80], 0
0x13e7e:    89 04 24                           	mov dword ptr [esp], eax
0x13e81:    c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0x13e8c:    c7 84 24 88 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x88], 0
0x13e97:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x13e9f:    e8 cc e4 00 00                     	call 0x22370 <unknown_22370>
0x13ea4:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x13ea8:    8b 33                              	mov esi, dword ptr [ebx]
0x13eaa:    8b 46 fc                           	mov eax, dword ptr [esi - 4]
0x13ead:    89 f3                              	mov ebx, esi
0x13eaf:    85 c0                              	test eax, eax
0x13eb1:    0f 88 9d 04 00 00                  	js 0x14354 <function_14354>
0x13eb7:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x13ebb:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13ebe -- 0x13ebf
0x13ebe:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x13ebf -- 0x13ec0
; data inside code section at 0x13ec0 -- 0x13eda
0x13ec0:    ff ff ff 8b 33 8b 46 fc  89 f3 89 74 24 3c 85 c0   |....3.F....t$<..|
0x13ed0:    78 10 8b 5c 24 38 89 1c  24 e8                     |x..\$8..$.      |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x13eda -- 0x13edb
; data inside code section at 0x13edb -- 0x13ee2
0x13edb:    ff ff ff 8b 33 89 f3                               |....3..         |
; function: function_13ee2 at 0x13ee2 -- 0x13ef0
0x13ee2:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x13ee6:    39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0x13eea:    0f 84 6a 01 00 00                  	je 0x1405a
; function: function_13ef0 at 0x13ef0 -- 0x13f4d
0x13ef0:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x13ef4:    39 44 24 7c                        	cmp dword ptr [esp + 0x7c], eax
0x13ef8:    8b 74 24 3c                        	mov esi, dword ptr [esp + 0x3c]
0x13efc:    74 32                              	je 0x13f30 <function_13ef0+0x40>
0x13efe:    66 90                              	nop 
0x13f00:    39 de                              	cmp esi, ebx
0x13f02:    0f 84 26 03 00 00                  	je 0x1422e
0x13f08:    0f b6 00                           	movzx eax, byte ptr [eax]
0x13f0b:    88 06                              	mov byte ptr [esi], al
0x13f0d:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x13f11:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x13f15:    83 ea 01                           	sub edx, 1
0x13f18:    39 d0                              	cmp eax, edx
0x13f1a:    0f 84 45 03 00 00                  	je 0x14265 <function_14265>
0x13f20:    83 c0 01                           	add eax, 1
0x13f23:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x13f27:    83 c6 01                           	add esi, 1
0x13f2a:    39 44 24 7c                        	cmp dword ptr [esp + 0x7c], eax
0x13f2e:    75 d0                              	jne 0x13f00 <function_13ef0+0x10>
0x13f30:    39 de                              	cmp esi, ebx
0x13f32:    74 2c                              	je 0x13f60 <function_13f60>
0x13f34:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x13f38:    31 d2                              	xor edx, edx
0x13f3a:    29 d8                              	sub eax, ebx
0x13f3c:    74 18                              	je 0x13f56 <function_13f56>
0x13f3e:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x13f42:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x13f46:    89 34 24                           	mov dword ptr [esp], esi
0x13f49:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
; data inside code section at 0x13f4d -- 0x13f4e
0x13f4d:    e8                                                 |.               |
; dynamically linked function: memmove at 0x13f4e -- 0x13f4f
; data inside code section at 0x13f4f -- 0x13f56
0x13f4f:    ff ff ff 8b 54 24 2c                               |....T$,         |
; function: function_13f56 at 0x13f56 -- 0x13f60
0x13f56:    01 f2                              	add edx, esi
0x13f58:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x13f5c:    8d 74 26 00                        	lea esi, [esi]
; function: function_13f60 at 0x13f60 -- 0x13fd9
0x13f60:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x13f64:    8d 54 24 64                        	lea edx, [esp + 0x64]
0x13f68:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x13f6c:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x13f71:    89 14 24                           	mov dword ptr [esp], edx
0x13f74:    89 84 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], eax
0x13f7b:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x13f82:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x13f86:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x13f8a:    89 84 24 90 00 00 00               	mov dword ptr [esp + 0x90], eax
0x13f91:    8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x13f98:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x13f9c:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x13fa0:    89 84 24 94 00 00 00               	mov dword ptr [esp + 0x94], eax
0x13fa7:    8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0x13fae:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x13fb2:    89 84 24 98 00 00 00               	mov dword ptr [esp + 0x98], eax
0x13fb9:    8d 84 24 8c 00 00 00               	lea eax, [esp + 0x8c]
0x13fc0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13fc4:    e8 f7 36 01 00                     	call 0x276c0 <unknown_276c0>
0x13fc9:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x13fcd:    8b 33                              	mov esi, dword ptr [ebx]
0x13fcf:    8b 46 fc                           	mov eax, dword ptr [esi - 4]
0x13fd2:    85 c0                              	test eax, eax
0x13fd4:    78 0a                              	js 0x13fe0 <function_13fe0>
0x13fd6:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13fd9 -- 0x13fda
0x13fd9:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x13fda -- 0x13fdb
; data inside code section at 0x13fdb -- 0x13fe0
0x13fdb:    ff ff ff 8b 33                                     |....3           |
; function: function_13fe0 at 0x13fe0 -- 0x14068
0x13fe0:    8b 4e f4                           	mov ecx, dword ptr [esi - 0xc]
0x13fe3:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13fe7:    01 f1                              	add ecx, esi
0x13fe9:    39 cb                              	cmp ebx, ecx
0x13feb:    89 d8                              	mov eax, ebx
0x13fed:    74 51                              	je 0x14040 <function_13fe0+0x60>
0x13fef:    39 ef                              	cmp edi, ebp
0x13ff1:    89 cb                              	mov ebx, ecx
0x13ff3:    89 c8                              	mov eax, ecx
0x13ff5:    74 49                              	je 0x14040 <function_13fe0+0x60>
0x13ff7:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13ffb:    90                                 	nop 
0x13ffc:    8d 74 26 00                        	lea esi, [esi]
0x14000:    39 d9                              	cmp ecx, ebx
0x14002:    74 31                              	je 0x14035 <function_13fe0+0x55>
0x14004:    0f b6 45 00                        	movzx eax, byte ptr [ebp]
0x14008:    38 03                              	cmp byte ptr [ebx], al
0x1400a:    75 29                              	jne 0x14035 <function_13fe0+0x55>
0x1400c:    89 ea                              	mov edx, ebp
0x1400e:    89 d8                              	mov eax, ebx
0x14010:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x14014:    83 c0 01                           	add eax, 1
0x14017:    83 c2 01                           	add edx, 1
0x1401a:    39 c1                              	cmp ecx, eax
0x1401c:    0f 84 96 03 00 00                  	je 0x143b8 <function_143b8>
0x14022:    39 fa                              	cmp edx, edi
0x14024:    0f 84 16 02 00 00                  	je 0x14240 <function_14240>
0x1402a:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x1402d:    38 18                              	cmp byte ptr [eax], bl
0x1402f:    74 e3                              	je 0x14014 <function_13fe0+0x34>
0x14031:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x14035:    83 c3 01                           	add ebx, 1
0x14038:    39 d9                              	cmp ecx, ebx
0x1403a:    75 c4                              	jne 0x14000 <function_13fe0+0x20>
0x1403c:    89 cb                              	mov ebx, ecx
0x1403e:    89 c8                              	mov eax, ecx
0x14040:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x14044:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x14048:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1404c:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x14050:    39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0x14054:    0f 85 96 fe ff ff                  	jne 0x13ef0 <function_13ef0>
0x1405a:    8b 6e fc                           	mov ebp, dword ptr [esi - 4]
0x1405d:    85 ed                              	test ebp, ebp
0x1405f:    78 12                              	js 0x14073 <function_14073>
0x14061:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x14065:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14068 -- 0x14069
0x14068:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x14069 -- 0x1406a
; data inside code section at 0x1406a -- 0x14073
0x1406a:    ff ff ff 8b 44 24 38 8b  30                        |....D$8.0       |
; function: function_14073 at 0x14073 -- 0x14100
0x14073:    8b 46 f4                           	mov eax, dword ptr [esi - 0xc]
0x14076:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x1407a:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1407e:    01 f0                              	add eax, esi
0x14080:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x14084:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x14088:    8d 74 24 50                        	lea esi, [esp + 0x50]
0x1408c:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x14090:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x14094:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14098:    89 34 24                           	mov dword ptr [esp], esi
0x1409b:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x1409f:    e8 ac 05 01 00                     	call 0x24650 <unknown_24650>
0x140a4:    83 ec 04                           	sub esp, 4
0x140a7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x140ab:    8b 7c 24 6c                        	mov edi, dword ptr [esp + 0x6c]
0x140af:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x140b3:    8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0x140b7:    39 fb                              	cmp ebx, edi
0x140b9:    0f 84 b9 02 00 00                  	je 0x14378 <function_14378>
0x140bf:    8b 54 24 70                        	mov edx, dword ptr [esp + 0x70]
0x140c3:    8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0x140ca:    8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x140d1:    8b ac 24 84 00 00 00               	mov ebp, dword ptr [esp + 0x84]
0x140d8:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x140dc:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x140e0:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x140e4:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x140e8:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x140ec:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x140f0:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x140f4:    8b 02                              	mov eax, dword ptr [edx]
0x140f6:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x140f9:    85 c9                              	test ecx, ecx
0x140fb:    78 0e                              	js 0x1410b <function_1410b>
0x140fd:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14100 -- 0x14101
0x14100:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x14101 -- 0x14102
; data inside code section at 0x14102 -- 0x1410b
0x14102:    ff ff ff 8b 54 24 38 8b  02                        |....T$8..       |
; function: function_1410b at 0x1410b -- 0x141a7
0x1410b:    03 40 f4                           	add eax, dword ptr [eax - 0xc]
0x1410e:    89 9c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ebx
0x14115:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x14119:    8d 94 24 ac 00 00 00               	lea edx, [esp + 0xac]
0x14120:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x14124:    8d 94 24 9c 00 00 00               	lea edx, [esp + 0x9c]
0x1412b:    89 b4 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], esi
0x14132:    89 ac 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ebp
0x14139:    89 9c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ebx
0x14140:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x14144:    89 bc 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], edi
0x1414b:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x14150:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x14154:    89 9c 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], ebx
0x1415b:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1415f:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14163:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14167:    89 9c 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], ebx
0x1416e:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x14172:    89 9c 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], ebx
0x14179:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x1417d:    89 1c 24                           	mov dword ptr [esp], ebx
0x14180:    e8 bb 38 01 00                     	call 0x27a40 <unknown_27a40>
0x14185:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x14189:    85 c0                              	test eax, eax
0x1418b:    74 2f                              	je 0x141bc <function_141bc>
0x1418d:    8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0x14194:    8b 5c 24 78                        	mov ebx, dword ptr [esp + 0x78]
0x14198:    83 c6 04                           	add esi, 4
0x1419b:    39 de                              	cmp esi, ebx
0x1419d:    76 15                              	jbe 0x141b4 <function_141b4>
0x1419f:    8b 03                              	mov eax, dword ptr [ebx]
0x141a1:    83 c3 04                           	add ebx, 4
0x141a4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x141a7 -- 0x141a8
0x141a7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x141a8 -- 0x141a9
; data inside code section at 0x141a9 -- 0x141b4
0x141a9:    ff ff ff 39 de 77 ef 8b  44 24 64                  |...9.w..D$d     |
; function: function_141b4 at 0x141b4 -- 0x141b7
0x141b4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x141b7 -- 0x141b8
0x141b7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x141b8 -- 0x141b9
; data inside code section at 0x141b9 -- 0x141bc
0x141b9:    ff ff ff                                           |...             |
; function: function_141bc at 0x141bc -- 0x141db
0x141bc:    8b 94 24 bc 00 00 00               	mov edx, dword ptr [esp + 0xbc]
0x141c3:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x141ca:    0f 85 a3 01 00 00                  	jne 0x14373 <function_14373>
0x141d0:    81 c4 cc 00 00 00                  	add esp, 0xcc
0x141d6:    5b                                 	pop ebx
0x141d7:    5e                                 	pop esi
0x141d8:    5f                                 	pop edi
0x141d9:    5d                                 	pop ebp
0x141da:    c3                                 	ret 
; data inside code section at 0x141db -- 0x141e0
0x141db:    90 8d 74 26 00                                     |..t&.           |
; function: function_141e0 at 0x141e0 -- 0x1420c
0x141e0:    8b 94 24 84 00 00 00               	mov edx, dword ptr [esp + 0x84]
0x141e7:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x141eb:    83 ea 01                           	sub edx, 1
0x141ee:    39 d0                              	cmp eax, edx
0x141f0:    0f 84 d1 00 00 00                  	je 0x142c7 <function_142c7>
0x141f6:    31 d2                              	xor edx, edx
0x141f8:    85 c0                              	test eax, eax
0x141fa:    74 09                              	je 0x14205 <function_141e0+0x25>
0x141fc:    0f b6 16                           	movzx edx, byte ptr [esi]
0x141ff:    88 10                              	mov byte ptr [eax], dl
0x14201:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x14205:    83 c2 01                           	add edx, 1
0x14208:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
; function: function_1420c at 0x1420c -- 0x1423d
0x1420c:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x14210:    0f b6 00                           	movzx eax, byte ptr [eax]
0x14213:    88 06                              	mov byte ptr [esi], al
0x14215:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x14219:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x1421d:    83 ea 01                           	sub edx, 1
0x14220:    39 d0                              	cmp eax, edx
0x14222:    74 72                              	je 0x14296 <function_14296>
0x14224:    83 c0 01                           	add eax, 1
0x14227:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x1422b:    83 c6 01                           	add esi, 1
0x1422e:    39 74 24 30                        	cmp dword ptr [esp + 0x30], esi
0x14232:    75 ac                              	jne 0x141e0 <function_141e0>
0x14234:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x14238:    e9 23 fd ff ff                     	jmp 0x13f60 <function_13f60>
; data inside code section at 0x1423d -- 0x14240
0x1423d:    8d 76 00                                           |.v.             |
; function: function_14240 at 0x14240 -- 0x14265
0x14240:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x14244:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x14248:    39 d8                              	cmp eax, ebx
0x1424a:    0f 44 54 24 44                     	cmove edx, dword ptr [esp + 0x44]
0x1424f:    89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0x14253:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x14257:    0f 44 54 24 40                     	cmove edx, dword ptr [esp + 0x40]
0x1425c:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x14260:    e9 db fd ff ff                     	jmp 0x14040
; function: function_14265 at 0x14265 -- 0x1426c
0x14265:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x14269:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1426c -- 0x1426d
0x1426c:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1426d -- 0x1426e
; data inside code section at 0x1426e -- 0x14270
0x1426e:    ff ff                                              |..              |
; function: function_14270 at 0x14270 -- 0x14296
0x14270:    ff 8b 44 24 78 8d                  	dec dword ptr [ebx - 0x7287dbbc]
0x14276:    50                                 	push eax
0x14277:    04 89                              	add al, 0x89
0x14279:    54                                 	push esp
0x1427a:    24 78                              	and al, 0x78
0x1427c:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x1427f:    8d 90 00 02 00 00                  	lea edx, [eax + 0x200]
0x14285:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x14289:    89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0x1428d:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x14291:    e9 91 fc ff ff                     	jmp 0x13f27
; function: function_14296 at 0x14296 -- 0x1429d
0x14296:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1429a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1429d -- 0x1429e
0x1429d:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1429e -- 0x1429f
; data inside code section at 0x1429f -- 0x142a1
0x1429f:    ff ff                                              |..              |
; function: function_142a1 at 0x142a1 -- 0x142c7
0x142a1:    ff 8b 44 24 78 8d                  	dec dword ptr [ebx - 0x7287dbbc]
0x142a7:    50                                 	push eax
0x142a8:    04 89                              	add al, 0x89
0x142aa:    54                                 	push esp
0x142ab:    24 78                              	and al, 0x78
0x142ad:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x142b0:    8d 90 00 02 00 00                  	lea edx, [eax + 0x200]
0x142b6:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x142ba:    89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0x142be:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x142c2:    e9 64 ff ff ff                     	jmp 0x1422b
; function: function_142c7 at 0x142c7 -- 0x142e9
0x142c7:    8b 9c 24 88 00 00 00               	mov ebx, dword ptr [esp + 0x88]
0x142ce:    89 d8                              	mov eax, ebx
0x142d0:    2b 44 24 64                        	sub eax, dword ptr [esp + 0x64]
0x142d4:    c1 f8 02                           	sar eax, 2
0x142d7:    f7 d8                              	neg eax
0x142d9:    03 44 24 68                        	add eax, dword ptr [esp + 0x68]
0x142dd:    83 f8 01                           	cmp eax, 1
0x142e0:    76 4d                              	jbe 0x1432f <function_1432f>
0x142e2:    c7 04 24 00 02 00 00               	mov dword ptr [esp], 0x200
; data inside code section at 0x142e9 -- 0x142ea
0x142e9:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x142ea -- 0x142eb
; data inside code section at 0x142eb -- 0x14310
0x142eb:    ff ff ff 89 43 04 8b 44  24 7c 85 c0 74 05 0f b6   |....C..D$|..t...|
0x142fb:    16 88 10 8b 84 24 88 00  00 00 8d 50 04 89 94 24   |.....$.....P...$|
0x1430b:    88 00 00 00 8b                                     |.....           |
; function: function_14310 at 0x14310 -- 0x1432f
0x14310:    40                                 	inc eax
0x14311:    04 8d                              	add al, 0x8d
0x14313:    90                                 	nop 
0x14314:    00 02                              	add byte ptr [edx], al
0x14316:    00 00                              	add byte ptr [eax], al
0x14318:    89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x1431f:    89 94 24 84 00 00 00               	mov dword ptr [esp + 0x84], edx
0x14326:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x1432a:    e9 dd fe ff ff                     	jmp 0x1420c <function_1420c>
; function: function_1432f at 0x1432f -- 0x14354
0x1432f:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x14333:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1433b:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x14343:    89 04 24                           	mov dword ptr [esp], eax
0x14346:    e8 65 01 01 00                     	call 0x244b0 <unknown_244b0>
0x1434b:    8b 9c 24 88 00 00 00               	mov ebx, dword ptr [esp + 0x88]
0x14352:    eb 8e                              	jmp 0x142e2
; function: function_14354 at 0x14354 -- 0x1435d
0x14354:    89 74 24 3c                        	mov dword ptr [esp + 0x3c], esi
0x14358:    e9 85 fb ff ff                     	jmp 0x13ee2 <function_13ee2>
; data inside code section at 0x1435d -- 0x1435e
0x1435d:    89                                                 |.               |
; function: function_1435e at 0x1435e -- 0x1435f
0x1435e:    c3                                 	ret 
; data inside code section at 0x1435f -- 0x14360
0x1435f:    8d                                                 |.               |
; function: function_14360 at 0x14360 -- 0x1436e
0x14360:    44                                 	inc esp
0x14361:    24 64                              	and al, 0x64
0x14363:    89 04 24                           	mov dword ptr [esp], eax
0x14366:    e8 65 ca 00 00                     	call 0x20dd0 <unknown_20dd0>
0x1436b:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1436e -- 0x1436f
0x1436e:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1436f -- 0x14370
; data inside code section at 0x14370 -- 0x14373
0x14370:    ff ff ff                                           |...             |
; function: function_14373 at 0x14373 -- 0x14378
0x14373:    e8 fc ff ff ff                     	call 0x14374
; function: function_14378 at 0x14378 -- 0x14388
0x14378:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x1437c:    8b 03                              	mov eax, dword ptr [ebx]
0x1437e:    8b 78 fc                           	mov edi, dword ptr [eax - 4]
0x14381:    85 ff                              	test edi, edi
0x14383:    78 0a                              	js 0x1438f <function_1438f>
0x14385:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x14388 -- 0x14389
0x14388:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x14389 -- 0x1438a
; data inside code section at 0x1438a -- 0x1438f
0x1438a:    ff ff ff 8b 03                                     |.....           |
; function: function_1438f at 0x1438f -- 0x143a9
0x1438f:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x14393:    03 40 f4                           	add eax, dword ptr [eax - 0xc]
0x14396:    89 34 24                           	mov dword ptr [esp], esi
0x14399:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x1439d:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x143a1:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x143a5:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
; data inside code section at 0x143a9 -- 0x143aa
0x143a9:    e8                                                 |.               |
; dynamically linked function: _ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_ at 0x143aa -- 0x143ab
; data inside code section at 0x143ab -- 0x143ae
0x143ab:    ff ff ff                                           |...             |
; function: function_143ae at 0x143ae -- 0x143b6
0x143ae:    83 ec 04                           	sub esp, 4
0x143b1:    e9 cf fd ff ff                     	jmp 0x14185
; data inside code section at 0x143b6 -- 0x143b8
0x143b6:    66 90                                              |f.              |
; function: function_143b8 at 0x143b8 -- 0x143c9
0x143b8:    39 fa                              	cmp edx, edi
0x143ba:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x143be:    0f 85 71 fc ff ff                  	jne 0x14035
0x143c4:    e9 7b fe ff ff                     	jmp 0x14244
; section: .text._ZN5boost9algorithm11replace_allISsA3_cSsEEvRT_RKT0_RKT1_
; function: _ZN5boost9algorithm11replace_allISsA3_cSsEEvRT_RKT0_RKT1_ at 0x143d0 -- 0x14419
0x143d0:    55                                 	push ebp
0x143d1:    57                                 	push edi
0x143d2:    56                                 	push esi
0x143d3:    53                                 	push ebx
0x143d4:    83 ec 6c                           	sub esp, 0x6c
0x143d7:    8b ac 24 88 00 00 00               	mov ebp, dword ptr [esp + 0x88]
0x143de:    8d 7c 24 58                        	lea edi, [esp + 0x58]
0x143e2:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x143e8:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x143ec:    31 c0                              	xor eax, eax
0x143ee:    8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x143f5:    8b 9c 24 84 00 00 00               	mov ebx, dword ptr [esp + 0x84]
0x143fc:    89 3c 24                           	mov dword ptr [esp], edi
0x143ff:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x14403:    e8 fc ff ff ff                     	call 0x14404
0x14408:    8b 6d 00                           	mov ebp, dword ptr [ebp]
0x1440b:    8b 55 f4                           	mov edx, dword ptr [ebp - 0xc]
0x1440e:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x14412:    89 3c 24                           	mov dword ptr [esp], edi
0x14415:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
; data inside code section at 0x14419 -- 0x1441a
0x14419:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1441a -- 0x1441b
; data inside code section at 0x1441b -- 0x14420
0x1441b:    ff ff ff 89 1c                                     |.....           |
; function: function_14420 at 0x14420 -- 0x14422
0x14420:    24 e8                              	and al, 0xe8
; dynamically linked function: strlen at 0x14422 -- 0x14423
; data inside code section at 0x14423 -- 0x14430
0x14423:    ff ff ff 8b 2e 8b 55 fc  85 d2 0f 88 ad            |......U......   |
; function: function_14430 at 0x14430 -- 0x1443a
0x14430:    00 00                              	add byte ptr [eax], al
0x14432:    00 89 44 24 34 89                  	add byte ptr [ecx - 0x76cbdbbc], cl
0x14438:    34 24                              	xor al, 0x24
; data inside code section at 0x1443a -- 0x1443b
0x1443a:    e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x1443b -- 0x1443c
; data inside code section at 0x1443c -- 0x14455
0x1443c:    ff ff ff 8b 2e 8b 45 fc  8b 7d f4 01 ef 85 c0 8b   |......E..}......|
0x1444c:    44 24 34 78 0e 89 34 24  e8                        |D$4x..4$.       |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x14455 -- 0x14456
; data inside code section at 0x14456 -- 0x1445f
0x14456:    ff ff ff 8b 2e 8b 44 24  34                        |......D$4       |
; function: function_1445f at 0x1445f -- 0x14460
; data inside code section at 0x14460 -- 0x14464
0x14460:    fd 74 44 01                                        |.tD.            |
; function: function_14464 at 0x14464 -- 0x14467
0x14464:    d8 39                              	fdivr dword ptr [ecx]
0x14466:    c3                                 	ret 
; data inside code section at 0x14467 -- 0x14470
0x14467:    74 3e 8d b4 26 00 00 00  00                        |t>..&....       |
; function: function_14470 at 0x14470 -- 0x14484
0x14470:    39 fd                              	cmp ebp, edi
0x14472:    74 2c                              	je 0x144a0
0x14474:    0f b6 0b                           	movzx ecx, byte ptr [ebx]
0x14477:    38 4d 00                           	cmp byte ptr [ebp], cl
0x1447a:    75 24                              	jne 0x144a0
0x1447c:    89 d9                              	mov ecx, ebx
0x1447e:    89 ea                              	mov edx, ebp
0x14480:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
; function: function_14484 at 0x14484 -- 0x14490
0x14484:    83 c2 01                           	add edx, 1
0x14487:    83 c1 01                           	add ecx, 1
0x1448a:    39 d7                              	cmp edi, edx
0x1448c:    74 32                              	je 0x144c0
0x1448e:    39 c8                              	cmp eax, ecx
; function: function_14490 at 0x14490 -- 0x14549
0x14490:    74 5e                              	je 0x144f0 <function_14490+0x60>
0x14492:    0f b6 19                           	movzx ebx, byte ptr [ecx]
0x14495:    38 1a                              	cmp byte ptr [edx], bl
0x14497:    74 eb                              	je 0x14484 <function_14484>
0x14499:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1449d:    8d 76 00                           	lea esi, [esi]
0x144a0:    83 c5 01                           	add ebp, 1
0x144a3:    39 ef                              	cmp edi, ebp
0x144a5:    75 c9                              	jne 0x14470 <function_14470>
0x144a7:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x144ab:    65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x144b2:    0f 85 91 00 00 00                  	jne 0x14549 <function_14490+0xb4>
0x144b8:    83 c4 6c                           	add esp, 0x6c
0x144bb:    5b                                 	pop ebx
0x144bc:    5e                                 	pop esi
0x144bd:    5f                                 	pop edi
0x144be:    5d                                 	pop ebp
0x144bf:    c3                                 	ret 
0x144c0:    39 c8                              	cmp eax, ecx
0x144c2:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x144c6:    75 d8                              	jne 0x144a0 <function_14490+0x10>
0x144c8:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x144cc:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x144d0:    89 fa                              	mov edx, edi
0x144d2:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x144d6:    03 44 24 3c                        	add eax, dword ptr [esp + 0x3c]
0x144da:    eb 2c                              	jmp 0x14508 <function_14490+0x78>
; data inside code section at 0x144dc -- 0x144e0
0x144dc:    8d 74 26 00                                        |.t&.            |
0x144e0:    8b 7d f4                           	mov edi, dword ptr [ebp - 0xc]
0x144e3:    01 ef                              	add edi, ebp
0x144e5:    e9 75 ff ff ff                     	jmp 0x1445f <function_1445f>
; data inside code section at 0x144ea -- 0x144f0
0x144ea:    8d b6 00 00 00 00                                  |......          |
0x144f0:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x144f4:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x144f8:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x144fc:    03 44 24 3c                        	add eax, dword ptr [esp + 0x3c]
0x14500:    39 d5                              	cmp ebp, edx
0x14502:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x14506:    74 9f                              	je 0x144a7 <function_14490+0x17>
0x14508:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1450c:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x14510:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x14514:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x14518:    89 6c 24 18                        	mov dword ptr [esp + 0x18], ebp
0x1451c:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x14520:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x14524:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14528:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1452c:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x14530:    89 34 24                           	mov dword ptr [esp], esi
0x14533:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14537:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1453b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1453f:    e8 3c 3c 01 00                     	call 0x28180 <unknown_28180>
0x14544:    e9 5e ff ff ff                     	jmp 0x144a7 <function_14490+0x17>
; data inside code section at 0x14549 -- 0x1454a
0x14549:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1454a -- 0x1454b
; data inside code section at 0x1454b -- 0x1454e
0x1454b:    ff ff ff                                           |...             |
; section: .text.startup
; function: _GLOBAL__sub_I_mapAlerts at 0x14550 -- 0x14566
0x14550:    83 ec 2c                           	sub esp, 0x2c
0x14553:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14559:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1455d:    31 c0                              	xor eax, eax
0x1455f:    c7 04 24 5c 1f 00 00               	mov dword ptr [esp], 0x1f5c ; "_signal(&cond)"
; data inside code section at 0x14566 -- 0x14567
0x14566:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x14567 -- 0x14568
; data inside code section at 0x14568 -- 0x1456f
0x14568:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x1456f -- 0x1457b
; data inside code section at 0x1457b -- 0x1457e
0x1457b:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x1457e -- 0x14582
; data inside code section at 0x14582 -- 0x14583
0x14582:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x14583 -- 0x14584
; data inside code section at 0x14584 -- 0x14594
0x14584:    ff ff ff 80 3d b0 4a 01  00 00 0f 84 a5 00 00 00   |....=.J.........|
; function: function_14594 at 0x14594 -- 0x14595
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x14595 -- 0x14596
; data inside code section at 0x14596 -- 0x14598
0x14596:    ff ff                                              |..              |
; function: function_14598 at 0x14598 -- 0x1459e
0x14598:    ff a3 60 1f 00 00                  	jmp dword ptr [ebx + 0x1f60]
; data inside code section at 0x1459e -- 0x1459f
0x1459e:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x1459f -- 0x145a0
; data inside code section at 0x145a0 -- 0x145a2
0x145a0:    ff ff                                              |..              |
; function: function_145a2 at 0x145a2 -- 0x145a8
0x145a2:    ff a3 64 1f 00 00                  	jmp dword ptr [ebx + 0x1f64]
; data inside code section at 0x145a8 -- 0x145a9
0x145a8:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x145a9 -- 0x145aa
; data inside code section at 0x145aa -- 0x145e8
0x145aa:    ff ff ff c7 05 48 1f 00  00 00 00 00 00 c7 05 4c   |.....H.........L|
0x145ba:    1f 00 00 00 00 00 00 c7  05 58 1f 00 00 00 00 00   |.........X......|
0x145ca:    00 c7 05 50 1f 00 00 48  1f 00 00 c7 05 54 1f 00   |...P...H.....T..|
0x145da:    00 48 1f 00 00 a3 68 1f  00 00 c7 44 24 08         |.H....h....D$.  |
; dynamically linked function: __dso_handle at 0x145e8 -- 0x1460c
; data inside code section at 0x1460c -- 0x14610
0x1460c:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x14610 -- 0x14639
; data inside code section at 0x14639 -- 0x14651
0x14639:    c6 05 b0 4a 01 00 01 c7  04 24 b0 4a 01 00 e8 a4   |...J.....$.J....|
0x14649:    94 00 00 50 c7 44 24 08                            |...P.D$.        |
; dynamically linked function: __dso_handle at 0x14651 -- 0x14664
; data inside code section at 0x14664 -- 0x14665
0x14664:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x14665 -- 0x14666
; data inside code section at 0x14666 -- 0x14669
0x14666:    ff ff ff                                           |...             |
; function: function_14669 at 0x14669 -- 0x1466e
0x14669:    e9 26 ff ff ff                     	jmp 0x14594 <function_14594>
; function: function_1466e at 0x1466e -- 0x1466f
; dynamically linked function: __stack_chk_fail at 0x1466f -- 0x14670
; data inside code section at 0x14670 -- 0x14673
0x14670:    ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .data
0x1ed4:     ?? ??                                              |??              |
; section: .rodata.str1.1
0x1ef0:     62 6f 6f 73 74 3a 3a 6c  6f 63 6b 5f 65 72 72 6f   |boost::lock_erro|   "boost::lock_error"
0x1f00:     72 00                                              |r.              |
0x1f02:     62 6f 6f 73 74 3a 3a 74  68 72 65 61 64 5f 72 65   |boost::thread_re|   "boost::thread_resource_error"
0x1f12:     73 6f 75 72 63 65 5f 65  72 72 6f 72 00            |source_error.   |
0x1f1f:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 6c   |!pthread_mutex_l|   "!pthread_mutex_lock(m)"
0x1f2f:     6f 63 6b 28 6d 29 00                               |ock(m).         |
0x1f36:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(m)"
0x1f46:     6e 6c 6f 63 6b 28 6d 29  00                        |nlock(m).       |
0x1f4f:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 73 69   |!pthread_cond_si|   "!pthread_cond_signal(&cond)"
0x1f5f:     67 6e 61 6c 28 26 63 6f  6e 64 29 00               |gnal(&cond).    |
0x1f6b:     70 78 20 21 3d 20 30 00                            |px != 0.        |   "px != 0"
0x1f73:     73 65 72 69 61 6c 69 7a  65 2e 68 00               |serialize.h.    |   "serialize.h"
0x1f7f:     6e 53 69 7a 65 20 3e 3d  20 30 00                  |nSize >= 0.     |   "nSize >= 0"
0x1f8a:     66 61 6c 73 65 00                                  |false.          |   "false"
0x1f90:     69 73 5f 76 61 6c 69 64  28 29 00                  |is_valid().     |   "is_valid()"
0x1f9b:     21 66 75 6c 6c 28 29 00                            |!full().        |   "!full()"
0x1fa3:     74 68 69 73 2d 3e 69 73  5f 69 6e 69 74 69 61 6c   |this->is_initial|   "this->is_initialized()"
0x1fb3:     69 7a 65 64 28 29 00                               |ized().         |
0x1fba:     3a 20 00                                           |: .             |
0x1fbd:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 64   |!pthread_mutex_d|   "!pthread_mutex_destroy(&m)"
0x1fcd:     65 73 74 72 6f 79 28 26  6d 29 00                  |estroy(&m).     |
0x1fd8:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 64 65   |!pthread_cond_de|   "!pthread_cond_destroy(&cond)"
0x1fe8:     73 74 72 6f 79 28 26 63  6f 6e 64 29 00            |stroy(&cond).   |
0x1ff5:     6e 20 3e 20 30 00                                  |n > 0.          |   "n > 0"
0x1ffb:     28 61 62 6f 72 74 65 64  29 0a 00 25 64 20 00 22   |(aborted)..%d ."|
0x200b:     00 22 20 00                                        |." .            |
0x200f:     25 73 00                                           |%s.             |   "%s"
0x2012:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 77 61   |!pthread_cond_wa|
0x2022:     69 74 28 26 63 6f 6e 64  2c 26 6d 29 00            |it(&cond,&m).   |
0x202f:     76 65 63 74 6f 72 3a 3a  5f 4d 5f 72 61 6e 67 65   |vector::_M_range|   "vector::_M_range_insert"
0x203f:     5f 69 6e 73 65 72 74 00                            |_insert.        |
0x2047:     6e 65 74 2e 68 00                                  |net.h.          |   "net.h"
0x204d:     73 73 53 65 6e 64 2e 73  69 7a 65 28 29 20 3d 3d   |ssSend.size() ==|   "ssSend.size() == 0"
0x205d:     20 30 00                                           | 0.             |
0x2060:     73 65 6e 64 69 6e 67 3a  20 25 73 20 00            |sending: %s .   |
0x206d:     61 6c 65 72 74 2e 63 70  70 00                     |alert.cpp.      |   "alert.cpp"
0x2077:     63 73 5f 6d 61 70 41 6c  65 72 74 73 00            |cs_mapAlerts.   |   "cs_mapAlerts"
0x2084:     2d 64 72 6f 70 6d 65 73  73 61 67 65 73 74 65 73   |-dropmessagestes|   "-dropmessagestest"
0x2094:     74 00                                              |t.              |
0x2096:     28 25 64 20 62 79 74 65  73 29 0a 00               |(%d bytes)..    |   "(%d bytes)\n"
0x20a2:     61 6c 65 72 74 00                                  |alert.          |
0x20a8:     5f 73 68 61 72 65 64 5f  73 74 61 74 65 2e 75 6e   |_shared_state.un|   "_shared_state.unique()"
0x20b8:     69 71 75 65 28 29 00                               |ique().         |
0x20bf:     69 74 20 21 3d 20 5f 6c  69 73 74 2e 65 6e 64 28   |it != _list.end(|   "it != _list.end()"
0x20cf:     29 00                                              |).              |
0x20d1:     6d 61 70 5f 69 74 20 21  3d 20 5f 67 72 6f 75 70   |map_it != _group|   "map_it != _group_map.end()"
0x20e1:     5f 6d 61 70 2e 65 6e 64  28 29 00                  |_map.end().     |
0x20ec:     70 20 3d 3d 20 30 20 7c  7c 20 70 20 21 3d 20 70   |p == 0 || p != p|
0x20fc:     78 00 6d 65 6d 62 65 72  73 5f 2e 63 61 70 61 63   |x.members_.capac|
0x210c:     69 74 79 5f 20 3e 3d 20  4e 00 73 69 7a 65 5f 20   |ity_ >= N.size_ |
0x211c:     3c 3d 20 6d 65 6d 62 65  72 73 5f 2e 63 61 70 61   |<= members_.capa|
0x212c:     63 69 74 79 5f 00 6d 65  6d 62 65 72 73 5f 2e 63   |city_.members_.c|
0x213c:     61 70 61 63 69 74 79 5f  20 3e 3d 20 6e 00         |apacity_ >= n.  |
0x214a:     63 61 6c 6c 20 74 6f 20  65 6d 70 74 79 20 62 6f   |call to empty bo|   "call to empty boost::function"
0x215a:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 00         |ost::function.  |
0x2168:     63 61 6e 63 65 6c 6c 69  6e 67 20 61 6c 65 72 74   |cancelling alert|
0x2178:     20 25 64 0a 00                                     | %d..           |
0x217d:     65 78 70 69 72 69 6e 67  20 61 6c 65 72 74 20 25   |expiring alert %|   "expiring alert %d\n"
0x218d:     64 0a 00                                           |d..             |
0x2190:     00 2d 61 6c 65 72 74 6e  6f 74 69 66 79 00 27 00   |.-alertnotify.'.|
0x21a0:     83                                                 |.               |
; section: .gcc_except_table
0x29bc:     ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0c   |....8.y.t.......|
0x29cc:     32 05 00 00 3a 02 62 00  6f 05 00 00 ff ff 01 0d   |2...:.b.o.......|
0x29dc:     1c 05 00 00 38 03 7c 00  89 01 05 00 00 ff ff 01   |....8.|.........|
0x29ec:     0e 1c 05 00 00 45 03 89  01 00 9e 01 05 00 00 ff   |.....E..........|
0x29fc:     ff 01 0e 1c 05 00 00 45  03 89 01 00 9e 01 05 00   |.......E........|
0x2a0c:     00 00 00 00 ff 00 29 01  1c 70 29 ff 01 01 a3 01   |......)..p).....|
0x2a1c:     05 d7 01 03 cb 01 05 ff  01 01 f5 01 05 82 02 05   |................|
0x2a2c:     8a 02 0a 00 00 01 00 00  7d 7f 00 00 00 00 00 00   |........}.......|
0x2a3c:     00 ff ff 01 13 1c 05 00  00 36 05 b5 01 00 57 03   |.........6....W.|
0x2a4c:     9b 01 00 b0 01 05 00 00  ff 00 0d 01 08 26 03 56   |.............&.V|
0x2a5c:     01 5e 0a 00 00 7f 00 00  00 ff ff 01 0c 21 05 67   |.^...........!.g|
0x2a6c:     00 2c 05 00 00 7d 05 00  00 ff ff 01 0b b1 02 05   |.,...}..........|
0x2a7c:     e2 02 00 dd 02 17 00 00  ff ff 01 33 62 05 a5 05   |...........3b...|
0x2a8c:     00 75 05 b7 04 00 ca 01  05 d5 04 00 e8 01 29 e5   |.u............).|
0x2a9c:     04 00 98 02 05 fb 04 00  b0 02 05 89 05 00 c0 02   |................|
0x2aac:     05 97 05 00 ef 03 05 d5  04 00 d0 04 05 00 00 ff   |................|
0x2abc:     ff 01 0c 1f 05 00 00 36  05 5a 00 6d 05 00 00 ff   |.......6.Z.m....|
0x2acc:     ff 01 19 47 03 a7 02 00  5e 13 89 02 00 7e 3b a7   |...G....^....~;.|
0x2adc:     02 00 c6 01 03 00 00 a2  02 05 00 00 ff ff 01 09   |................|
0x2aec:     3b 03 75 00 82 01 05 00  00 ff ff 01 08 2a 05 5b   |;.u..........*.[|
0x2afc:     00 56 17 00 00 ff ff 01  10 65 05 b1 01 00 8c 01   |.V.......e......|
0x2b0c:     05 d1 01 00 ac 01 25 00  00 ff ff 01 11 af 01 05   |......%.........|
0x2b1c:     b4 01 00 c7 01 05 00 00  e3 01 05 e8 01 00 ff ff   |................|
0x2b2c:     01 09 3b 03 75 00 82 01  05 00 00 ff ff 01 08 2a   |..;.u..........*|
0x2b3c:     05 5b 00 56 17 00 00 ff  ff 01 10 65 05 b1 01 00   |.[.V.......e....|
0x2b4c:     8c 01 05 d1 01 00 ac 01  25 00 00 00 ff 00 2d 01   |........%.....-.|
0x2b5c:     23 9a 01 05 82 05 00 f3  02 05 fa 04 00 90 03 03   |#...............|
0x2b6c:     c3 04 00 d6 03 05 a9 04  01 be 04 05 f1 04 00 ec   |................|
0x2b7c:     04 05 00 00 01 00 00 00  00 00 00 00 ff ff 01 0a   |................|
0x2b8c:     57 05 e6 01 00 f7 01 05  00 00 ff ff 01 0a 58 05   |W.............X.|
0x2b9c:     b7 01 00 cc 01 05 00 00  ff ff 01 0f 4d 05 d6 01   |............M...|
0x2bac:     00 64 05 ba 01 00 d1 01  05 00 00 ff ff 01 0c 2a   |.d.............*|
0x2bbc:     05 00 00 36 05 5d 00 6a  05 00 00 ff ff 01 0f 2c   |...6.].j.......,|
0x2bcc:     05 99 01 00 4d 03 87 01  00 94 01 17 00 00 ff ff   |....M...........|
0x2bdc:     01 08 2a 05 5b 00 56 17  00 00 ff ff 01 15 39 05   |..*.[.V.......9.|
0x2bec:     c5 01 00 79 05 8e 02 00  a0 01 05 e3 01 00 c0 01   |...y............|
0x2bfc:     23 00 00 ff ff 01 0a 74  05 97 01 00 a2 01 05 00   |#......t........|
0x2c0c:     00 00 00 00 ff 00 1d 01  14 26 05 00 00 69 69 f5   |.........&...ii.|
0x2c1c:     01 01 8d 02 05 97 02 00  a1 02 05 00 00 01 00 00   |................|
0x2c2c:     00 00 00 00 ff 00 41 01  36 26 05 00 00 3e 05 86   |......A.6&...>..|
0x2c3c:     02 01 72 2c c8 02 01 af  01 05 b3 02 01 de 01 05   |..r,............|
0x2c4c:     c8 02 01 9a 02 05 a4 02  00 ae 02 05 00 00 c3 02   |................|
0x2c5c:     05 e5 02 03 e0 02 05 f0  02 00 fa 02 05 00 00 01   |................|
0x2c6c:     00 00 7d 00 00 00 00 00  ff ff 01 2d 7e 05 00 00   |..}........-~...|
0x2c7c:     f9 01 05 b1 05 00 bd 02  05 ad 05 00 cf 02 05 a9   |................|
0x2c8c:     05 00 e1 02 05 e9 04 00  a3 04 05 bf 04 00 b3 04   |................|
0x2c9c:     05 e0 04 00 db 04 4e 00  00 ff ff 01 18 a9 01 05   |......N.........|
0x2cac:     ab 08 00 dd 01 05 a7 08  00 ec 05 95 01 fd 07 00   |................|
0x2cbc:     93 08 48 00 00 00 00 00  ff 00 1d 01 15 4b 05 00   |..H..........K..|
0x2ccc:     00 97 01 05 9c 02 01 ac  02 05 b1 02 00 bb 02 05   |................|
0x2cdc:     00 00 01 00 00 00 00 00  ff 00 25 01 19 4c 05 00   |..........%..L..|
0x2cec:     00 63 05 bc 02 03 75 05  97 02 03 b7 02 05 be 02   |.c....u.........|
0x2cfc:     00 c8 02 05 00 00 01 00  00 7d 00 00 00 00 00 00   |.........}......|
0x2d0c:     ff ff 01 17 df 01 05 87  03 00 f3 01 05 d9 02 00   |................|
0x2d1c:     8f 02 05 f3 02 00 ee 02  05 00 00 ff ff 01 38 2f   |..............8/|
0x2d2c:     05 00 00 3b 05 93 07 00  98 03 05 9a 07 00 9b 04   |...;............|
0x2d3c:     05 bc 04 00 b7 04 05 97  05 00 92 05 05 00 00 f2   |................|
0x2d4c:     05 05 f7 05 00 93 06 05  98 06 00 c0 06 05 c5 06   |................|
0x2d5c:     00 f5 06 05 fa 06 00 00  ff 00 51 01 47 32 05 00   |..........Q.G2..|
0x2d6c:     00 42 05 95 04 00 52 05  ce 03 00 62 05 c0 03 00   |.B....R....b....|
0x2d7c:     82 01 05 ac 03 00 9e 01  05 a8 03 00 b6 01 05 e7   |................|
0x2d8c:     03 01 a4 02 05 8c 04 00  c4 02 05 d2 03 00 e5 02   |................|
0x2d9c:     03 ef 02 00 a3 03 05 00  00 e2 03 05 00 00 f8 03   |................|
0x2dac:     08 80 04 00 01 00 00 00  00 00 00 00 ff 00 21 01   |..............!.|
0x2dbc:     16 34 e4 01 00 00 a3 02  05 b1 02 01 d2 02 05 dc   |.4..............|
0x2dcc:     02 00 e6 02 05 00 00 01  00 00 00 00 00 00 00 00   |................|
0x2ddc:     ff 00 25 01 1a 3a 05 00  00 db 01 05 88 02 01 fb   |..%..:..........|
0x2dec:     01 05 00 00 9e 02 05 a8  02 00 b2 02 05 00 00 01   |................|
0x2dfc:     00 00 00 00 00 00 00 00  ff ff 01 17 e6 06 1d 8e   |................|
0x2e0c:     10 00 b8 07 5c 00 00 b4  0c c0 03 8e 10 00 9b 10   |....\...........|
0x2e1c:     05 00 00 ff ff 01 22 37  05 80 0a 00 fd 01 05 ba   |......"7........|
0x2e2c:     09 00 8d 02 30 f4 09 00  86 04 66 00 00 ed 05 05   |....0.....f.....|
0x2e3c:     89 0a 00 8a 06 c6 03 00  00 ff ff 01 10 28 5a 00   |.............(Z.|
0x2e4c:     00 b8 01 05 d5 02 00 e4  01 83 01 00 00 00 00 00   |................|
0x2e5c:     ff 00 25 01 1a 40 05 00  00 67 05 c3 01 01 e1 01   |..%..@...g......|
0x2e6c:     05 eb 01 03 91 02 05 96  02 00 a0 02 05 00 00 01   |................|
0x2e7c:     00 00 7d 00 00 00 00 00  ff 00 31 01 27 2c 81 01   |..}.......1.',..|
0x2e8c:     00 00 be 01 05 d2 02 00  da 01 24 bb 02 01 8b 02   |..........$.....|
0x2e9c:     0e d2 02 00 c8 02 0a e4  02 00 df 02 05 00 00 ee   |................|
0x2eac:     02 05 00 00 01 00 00 00  00 00 00 00 ff 00 1d 01   |................|
0x2ebc:     14 48 05 00 00 5f 05 f5  01 01 85 02 05 8a 02 00   |.H..._..........|
0x2ecc:     94 02 05 00 00 01 00 00  00 00 00 00 ff ff 01 10   |................|
0x2edc:     2f a4 03 00 00 fc 03 21  8f 05 00 cb 04 56 00 00   |/......!.....V..|
0x2eec:     ff ff 01 20 20 d5 02 00  00 ac 04 05 92 06 00 cb   |...  ...........|
0x2efc:     04 05 00 00 a3 05 05 e6  05 00 bf 05 05 00 00 8d   |................|
0x2f0c:     06 05 00 00 ff ff 01 0c  1e 05 65 00 29 05 00 00   |..........e.)...|
0x2f1c:     7b 05 00 00 ff ff 01 16  92 01 fe 04 00 00 bb 06   |{...............|
0x2f2c:     03 9e 0c 00 e7 09 05 00  00 ab 0c 05 00 00 00 00   |................|
0x2f3c:     ff 00 21 01 16 26 05 00  00 81 01 83 01 bc 02 01   |..!..&..........|
0x2f4c:     d4 02 05 d9 02 00 e3 02  05 00 00 01 00 00 00 00   |................|
0x2f5c:     00 00 00 00 ff 00 2d 01  25 32 05 00 00 57 05 ec   |......-.%2...W..|
0x2f6c:     03 00 ce 01 05 d0 04 00  98 03 05 93 04 01 89 04   |................|
0x2f7c:     05 00 00 a2 04 0a e0 04  00 ea 04 05 00 00 01 00   |................|
0x2f8c:     00 00 00 00 ff 00 2d 01  23 92 01 05 9b 03 00 a6   |......-.#.......|
0x2f9c:     01 05 ad 03 00 d6 01 05  82 03 01 93 02 37 9b 03   |.............7..|
0x2fac:     00 91 03 0a bd 03 00 a8  03 05 00 00 01 00 00 00   |................|
0x2fbc:     00 00 00 00 ff 00 21 01  16 82 01 05 db 01 01 c3   |......!.........|
0x2fcc:     01 13 00 00 8a 02 05 8f  02 00 99 02 05 00 00 01   |................|
0x2fdc:     00 00 00 00 00 00 00 00  ff 00 25 01 1a 6b 05 00   |..........%..k..|
0x2fec:     00 8a 01 05 bf 01 01 b5  01 05 00 00 e6 01 05 eb   |................|
0x2ffc:     01 00 f5 01 05 00 00 01  00 00 00 00 00 00 00 00   |................|
0x300c:     ff 00 25 01 1a 46 05 00  00 ac 01 03 ca 02 01 c5   |..%..F..........|
0x301c:     02 05 00 00 dd 02 0f ec  02 00 8a 03 05 00 00 01   |................|
0x302c:     00 00 00 00 00 00 00 00  ff ff 01 4f 88 01 ab 02   |...........O....|
0x303c:     00 00 bf 03 03 95 13 00  df 03 03 00 00 fa 06 03   |................|
0x304c:     ed 13 00 88 09 2a 00 00  be 09 03 af 13 00 eb 0a   |.....*..........|
0x305c:     d9 01 ed 13 00 9a 0f 33  00 00 8c 10 cb 02 ed 13   |.......3........|
0x306c:     00 aa 13 05 00 00 c4 13  05 00 00 fe 13 30 00 00   |.............0..|
0x307c:     d3 15 03 ed 13 00 c3 17  44 00 00 ff ff 01 1a 3b   |........D......;|
0x308c:     03 00 00 e3 01 05 ce 04  00 9d 02 45 00 00 a3 03   |...........E....|
0x309c:     78 ce 04 00 db 04 05 00  00 00 00 00 ff 00 55 01   |x.............U.|
0x30ac:     47 99 01 05 f5 09 00 ba  02 88 01 a3 09 00 91 04   |G...............|
0x30bc:     03 89 0a 05 a2 05 05 00  00 d5 05 05 95 0a 00 ed   |................|
0x30cc:     05 05 9c 0a 00 d4 06 05  f5 09 00 b8 07 05 89 0a   |................|
0x30dc:     05 cc 07 05 c1 08 05 e8  07 05 ed 07 05 bc 08 05   |................|
0x30ec:     00 00 db 09 15 ba 0a 03  00 00 01 7d 01 7d 00 00   |...........}.}..|
0x30fc:     30 48 01 00 ff ff 01 10  8d 01 05 00 00 bd 01 47   |0H.............G|
0x310c:     84 02 00 95 02 05 00 00  ff ff 01 17 ef 01 05 00   |................|
0x311c:     00 8e 02 8d 09 ad 0b 00  be 0b 05 00 00 d8 0b 26   |...............&|
0x312c:     ad 0b 00 ff ff 01 83 01  2d 7b 00 00 ce 01 d2 02   |........-{......|
0x313c:     c6 10 00 ae 04 e6 01 fe  0f 00 92 07 05 d4 0f 00   |................|
0x314c:     b1 07 05 d6 10 00 db 07  44 c6 10 00 bc 08 05 ca   |........D.......|
0x315c:     10 00 de 08 05 be 11 00  f5 08 05 a6 11 00 bc 09   |................|
0x316c:     05 c2 10 00 de 09 05 9f  11 00 9e 0a 7f d2 10 00   |................|
0x317c:     c0 0b 05 8b 11 00 d3 0b  05 ee 10 00 89 0c 29 d2   |..............).|
0x318c:     10 00 c8 0c 05 ec 10 00  d8 0c 05 d2 10 00 b0 0d   |................|
0x319c:     89 01 00 00 d6 0e 1d c6  10 00 ba 0f 05 d2 10 00   |................|
0x31ac:     c2 0f 05 82 10 00 f9 0f  05 00 00 ??               |...........?    |
; section: .rodata.str1.4
0x3288:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x3298:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x32a8:     64 2f 70 74 68 72 65 61  64 5f 6d 75 74 65 78 5f   |d/pthread_mutex_|
0x32b8:     73 63 6f 70 65 64 5f 6c  6f 63 6b 2e 68 70 70 00   |scoped_lock.hpp.|
0x32c8:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x32d8:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x32e8:     64 2f 72 65 63 75 72 73  69 76 65 5f 6d 75 74 65   |d/recursive_mute|
0x32f8:     78 2e 68 70 70 00                                  |x.hpp.          |
0x32fe:     00 00                                              |..              |
0x3300:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x3310:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 68 61   |st/smart_ptr/sha|
0x3320:     72 65 64 5f 70 74 72 2e  68 70 70 00               |red_ptr.hpp.    |
0x332c:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x333c:     73 74 2f 76 61 72 69 61  6e 74 2f 64 65 74 61 69   |st/variant/detai|
0x334c:     6c 2f 76 69 73 69 74 61  74 69 6f 6e 5f 69 6d 70   |l/visitation_imp|
0x335c:     6c 2e 68 70 70 00                                  |l.hpp.          |
0x3362:     00 00                                              |..              |
0x3364:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x3374:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x3384:     69 6c 2f 61 75 74 6f 5f  62 75 66 66 65 72 2e 68   |il/auto_buffer.h|
0x3394:     70 70 00                                           |pp.             |
0x3397:     00                                                 |.               |
0x3398:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/optional/optional.hpp"
0x33a8:     73 74 2f 6f 70 74 69 6f  6e 61 6c 2f 6f 70 74 69   |st/optional/opti|
0x33b8:     6f 6e 61 6c 2e 68 70 70  00                        |onal.hpp.       |
0x33c1:     00 00 00 2f 75 73 72 2f  69 6e 63 6c 75 64 65 2f   |.../usr/include/|
0x33d1:     62 6f 6f 73 74 2f 74 68  72 65 61 64 2f 70 74 68   |boost/thread/pth|
0x33e1:     72 65 61 64 2f 6d 75 74  65 78 2e 68 70 70 00 2f   |read/mutex.hpp./|
0x33f1:     75 73 72 2f 69 6e 63 6c  75 64 65 2f 62 6f 6f 73   |usr/include/boos|
0x3401:     74 2f 74 68 72 65 61 64  2f 70 74 68 72 65 61 64   |t/thread/pthread|
0x3411:     2f 63 6f 6e 64 69 74 69  6f 6e 5f 76 61 72 69 61   |/condition_varia|
0x3421:     62 6c 65 5f 66 77 64 2e  68 70 70 00 00 00 00 21   |ble_fwd.hpp....!|
0x3431:     70 74 68 72 65 61 64 5f  6d 75 74 65 78 5f 64 65   |pthread_mutex_de|
0x3441:     73 74 72 6f 79 28 26 69  6e 74 65 72 6e 61 6c 5f   |stroy(&internal_|
0x3451:     6d 75 74 65 78 29 00 43  44 61 74 61 53 74 72 65   |mutex).CDataStre|
0x3461:     61 6d 3a 3a 72 65 61 64  28 29 20 3a 20 65 6e 64   |am::read() : end|
0x3471:     20 6f 66 20 64 61 74 61  00 00 00                  | of data...     |
0x347c:     43 41 6c 65 72 74 28 0a  20 20 20 20 6e 56 65 72   |CAlert(.    nVer|   "CAlert(\n    nVersion     = %d\n    nRelayUntil  = %lld\n    nExpiration  = %lld\n    nID          = %d\n    nCancel      = %d\n    setCancel    = %s\n    nMinVer      = %d\n    nMaxVer      = %d\n    setSubVer    = %s\n    nPriority    = %d\n    strComment   = \"%s\"\n    strStatusBar = \"%s\"\n)\n"
0x348c:     73 69 6f 6e 20 20 20 20  20 3d 20 25 64 0a 20 20   |sion     = %d.  |
0x349c:     20 20 6e 52 65 6c 61 79  55 6e 74 69 6c 20 20 3d   |  nRelayUntil  =|
0x34ac:     20 25 6c 6c 64 0a 20 20  20 20 6e 45 78 70 69 72   | %lld.    nExpir|
0x34bc:     61 74 69 6f 6e 20 20 3d  20 25 6c 6c 64 0a 20 20   |ation  = %lld.  |
0x34cc:     20 20 6e 49 44 20 20 20  20 20 20 20 20 20 20 3d   |  nID          =|
0x34dc:     20 25 64 0a 20 20 20 20  6e 43 61 6e 63 65 6c 20   | %d.    nCancel |
0x34ec:     20 20 20 20 20 3d 20 25  64 0a 20 20 20 20 73 65   |     = %d.    se|
0x34fc:     74 43 61 6e 63 65 6c 20  20 20 20 3d 20 25 73 0a   |tCancel    = %s.|
0x350c:     20 20 20 20 6e 4d 69 6e  56 65 72 20 20 20 20 20   |    nMinVer     |
0x351c:     20 3d 20 25 64 0a 20 20  20 20 6e 4d 61 78 56 65   | = %d.    nMaxVe|
0x352c:     72 20 20 20 20 20 20 3d  20 25 64 0a 20 20 20 20   |r      = %d.    |
0x353c:     73 65 74 53 75 62 56 65  72 20 20 20 20 3d 20 25   |setSubVer    = %|
0x354c:     73 0a 20 20 20 20 6e 50  72 69 6f 72 69 74 79 20   |s.    nPriority |
0x355c:     20 20 20 3d 20 25 64 0a  20 20 20 20 73 74 72 43   |   = %d.    strC|
0x356c:     6f 6d 6d 65 6e 74 20 20  20 3d 20 22 25 73 22 0a   |omment   = "%s".|
0x357c:     20 20 20 20 73 74 72 53  74 61 74 75 73 42 61 72   |    strStatusBar|
0x358c:     20 3d 20 22 25 73 22 0a  29 0a 00                  | = "%s".)..     |
0x3597:     00                                                 |.               |
0x3598:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x35a8:     73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x35b8:     61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x35c8:     72 2e 68 70 70 00                                  |r.hpp.          |
0x35ce:     00 00 64 72 6f 70 6d 65  73 73 61 67 65 73 20 44   |..dropmessages D|
0x35de:     52 4f 50 50 49 4e 47 20  53 45 4e 44 20 4d 45 53   |ROPPING SEND MES|
0x35ee:     53 41 47 45 0a 00                                  |SAGE..          |
0x35f4:     73 73 53 65 6e 64 2e 73  69 7a 65 20 28 29 20 3e   |ssSend.size () >|   "ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum)"
0x3604:     3d 20 43 4d 65 73 73 61  67 65 48 65 61 64 65 72   |= CMessageHeader|
0x3614:     3a 3a 43 48 45 43 4b 53  55 4d 5f 4f 46 46 53 45   |::CHECKSUM_OFFSE|
0x3624:     54 20 2b 20 73 69 7a 65  6f 66 28 6e 43 68 65 63   |T + sizeof(nChec|
0x3634:     6b 73 75 6d 29 00                                  |ksum).          |
0x363a:     00 00 52 65 61 64 43 6f  6d 70 61 63 74 53 69 7a   |..ReadCompactSiz|
0x364a:     65 28 29 20 3a 20 73 69  7a 65 20 74 6f 6f 20 6c   |e() : size too l|
0x365a:     61 72 67 65 00 00 43 41  6c 65 72 74 3a 3a 43 68   |arge..CAlert::Ch|
0x366a:     65 63 6b 53 69 67 6e 61  74 75 72 65 28 29 20 3a   |eckSignature() :|
0x367a:     20 76 65 72 69 66 79 20  73 69 67 6e 61 74 75 72   | verify signatur|
0x368a:     65 20 66 61 69 6c 65 64  00 00                     |e failed..      |
0x3694:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/signal_template.hpp"
0x36a4:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x36b4:     69 6c 2f 73 69 67 6e 61  6c 5f 74 65 6d 70 6c 61   |il/signal_templa|
0x36c4:     74 65 2e 68 70 70 00                               |te.hpp.         |
0x36cb:     00                                                 |.               |
0x36cc:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x36dc:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 63 6f   |st/smart_ptr/sco|
0x36ec:     70 65 64 5f 70 74 72 2e  68 70 70 00               |ped_ptr.hpp.    |
0x36f8:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x3708:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0x3718:     69 6c 2f 73 6c 6f 74 5f  67 72 6f 75 70 73 2e 68   |il/slot_groups.h|
0x3728:     70 70 00                                           |pp.             |
0x372b:     00                                                 |.               |
0x372c:     77 65 61 6b 6c 79 5f 65  71 75 69 76 61 6c 65 6e   |weakly_equivalen|   "weakly_equivalent(map_it->first, key)"
0x373c:     74 28 6d 61 70 5f 69 74  2d 3e 66 69 72 73 74 2c   |t(map_it->first,|
0x374c:     20 6b 65 79 29 00                                  | key).          |
0x3752:     00 00                                              |..              |
0x3754:     74 68 69 73 5f 6d 61 70  5f 69 74 20 21 3d 20 5f   |this_map_it != _|   "this_map_it != _group_map.end()"
0x3764:     67 72 6f 75 70 5f 6d 61  70 2e 65 6e 64 28 29 00   |group_map.end().|
0x3774:     64 65 71 75 65 3a 3a 5f  4d 5f 6e 65 77 5f 65 6c   |deque::_M_new_el|   "deque::_M_new_elements_at_front"
0x3784:     65 6d 65 6e 74 73 5f 61  74 5f 66 72 6f 6e 74 00   |ements_at_front.|
0x3794:     64 65 71 75 65 3a 3a 5f  4d 5f 6e 65 77 5f 65 6c   |deque::_M_new_el|   "deque::_M_new_elements_at_back"
0x37a4:     65 6d 65 6e 74 73 5f 61  74 5f 62 61 63 6b 00      |ements_at_back. |
0x37b3:     00                                                 |.               |
0x37b4:     62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 5f 4d   |basic_string::_M|   "basic_string::_M_replace_dispatch"
0x37c4:     5f 72 65 70 6c 61 63 65  5f 64 69 73 70 61 74 63   |_replace_dispatc|
0x37d4:     68 00                                              |h.              |
0x37d6:     00 00                                              |..              |
0x37d8:     55 52 47 45 4e 54 3a 20  41 6c 65 72 74 20 6b 65   |URGENT: Alert ke|   "URGENT: Alert key compromised, upgrade required"
0x37e8:     79 20 63 6f 6d 70 72 6f  6d 69 73 65 64 2c 20 75   |y compromised, u|
0x37f8:     70 67 72 61 64 65 20 72  65 71 75 69 72 65 64 00   |pgrade required.|
0x3808:     61 6c 65 72 74 20 61 6c  72 65 61 64 79 20 63 61   |alert already ca|
0x3818:     6e 63 65 6c 6c 65 64 20  62 79 20 25 64 0a 00 00   |ncelled by %d...|
0x3828:     61 62 63 64 65 66 67 68  69 6a 6b 6c 6d 6e 6f 70   |abcdefghijklmnop|
0x3838:     71 72 73 74 75 76 77 78  79 7a 41 42 43 44 45 46   |qrstuvwxyzABCDEF|
0x3848:     47 48 49 4a 4b 4c 4d 4e  4f 50 51 52 53 54 55 56   |GHIJKLMNOPQRSTUV|
0x3858:     57 58 59 5a 30 31 32 33  34 35 36 37 38 39 30 20   |WXYZ01234567890 |
0x3868:     2e 2c 3b 5f 2f 3a 3f 40  00 00 00 00               |.,;_/:?@....    |
0x3874:     61 63 63 65 70 74 65 64  20 61 6c 65 72 74 20 25   |accepted alert %|   "accepted alert %d, AppliesToMe()=%d\n"
0x3884:     64 2c 20 41 70 70 6c 69  65 73 54 6f 4d 65 28 29   |d, AppliesToMe()|
0x3894:     3d 25 64 0a 00                                     |=%d..           |
0x3899:     ??                                                 |?               |
; section: .rodata
0x4b50:     38 02 00 00 90 02 00 00  88 02 00 00 88 02 00 00   |8...............|
0x4b60:     88 02 00 00 88 02 00 00  88 02 00 00 88 02 00 00   |................|
0x4b70:     88 02 00 00 88 02 00 00  88 02 00 00 88 02 00 00   |................|
0x4b80:     88 02 00 00 88 02 00 00  88 02 00 00 88 02 00 00   |................|
0x4b90:     88 02 00 00 88 02 00 00  88 02 00 00 88 02 00 00   |................|
0x4ba0:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4bb0:     76 6f 69 64 20 43 4e 6f  64 65 3a 3a 42 65 67 69   |void CNode::Begi|   "void CNode::BeginMessage(const char*)"
0x4bc0:     6e 4d 65 73 73 61 67 65  28 63 6f 6e 73 74 20 63   |nMessage(const c|
0x4bd0:     68 61 72 2a 29 00                                  |har*).          |
0x4bd6:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4be6:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x4bf0:     62 6f 6f 73 74 3a 3a 70  74 68 72 65 61 64 3a 3a   |boost::pthread::|   "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x4c00:     70 74 68 72 65 61 64 5f  6d 75 74 65 78 5f 73 63   |pthread_mutex_sc|
0x4c10:     6f 70 65 64 5f 6c 6f 63  6b 3a 3a 70 74 68 72 65   |oped_lock::pthre|
0x4c20:     61 64 5f 6d 75 74 65 78  5f 73 63 6f 70 65 64 5f   |ad_mutex_scoped_|
0x4c30:     6c 6f 63 6b 28 70 74 68  72 65 61 64 5f 6d 75 74   |lock(pthread_mut|
0x4c40:     65 78 5f 74 2a 29 00                               |ex_t*).         |
0x4c47:     00 00 00 00 00 00 00 00  00                        |.........       |
0x4c50:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 70 74 68 72   |void boost::pthr|   "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x4c60:     65 61 64 3a 3a 70 74 68  72 65 61 64 5f 6d 75 74   |ead::pthread_mut|
0x4c70:     65 78 5f 73 63 6f 70 65  64 5f 6c 6f 63 6b 3a 3a   |ex_scoped_lock::|
0x4c80:     75 6e 6c 6f 63 6b 28 29  00                        |unlock().       |
0x4c89:     00 00 00 00 00 00 00 76  6f 69 64 20 62 6f 6f 73   |.......void boos|
0x4c99:     74 3a 3a 72 65 63 75 72  73 69 76 65 5f 6d 75 74   |t::recursive_mut|
0x4ca9:     65 78 3a 3a 6c 6f 63 6b  28 29 00 00 00 00 00 00   |ex::lock()......|
0x4cb9:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4cc9:     00 00 00 00 00 00 00                               |.......         |
0x4cd0:     43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::write(const char*, int)"
0x4ce0:     74 61 53 74 72 65 61 6d  3a 3a 77 72 69 74 65 28   |taStream::write(|
0x4cf0:     63 6f 6e 73 74 20 63 68  61 72 2a 2c 20 69 6e 74   |const char*, int|
0x4d00:     29 00                                              |).              |
0x4d02:     76 6f 69 64 20 43 4e 6f  64 65 3a 3a 45 6e 64 4d   |void CNode::EndM|   "void CNode::EndMessage()"
0x4d12:     65 73 73 61 67 65 28 29  00                        |essage().       |
0x4d1b:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d2b:     00 00 00 00 00                                     |.....           |
0x4d30:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 72 65 63 75   |void boost::recu|   "void boost::recursive_mutex::unlock()"
0x4d40:     72 73 69 76 65 5f 6d 75  74 65 78 3a 3a 75 6e 6c   |rsive_mutex::unl|
0x4d50:     6f 63 6b 28 29 00                                  |ock().          |
0x4d56:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d66:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x4d70:     43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::read(char*, int)"
0x4d80:     74 61 53 74 72 65 61 6d  3a 3a 72 65 61 64 28 63   |taStream::read(c|
0x4d90:     68 61 72 2a 2c 20 69 6e  74 29 00                  |har*, int).     |
0x4d9b:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4dab:     00 00 00 00 00                                     |.....           |
0x4db0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>&]"
0x4dc0:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x4dd0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x4de0:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x4df0:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x4e00:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x4e10:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x4e20:     6c 32 5f 69 6d 70 6c 3c  76 6f 69 64 2c 20 63 6f   |l2_impl<void, co|
0x4e30:     6e 73 74 20 75 69 6e 74  32 35 36 26 2c 20 43 68   |nst uint256&, Ch|
0x4e40:     61 6e 67 65 54 79 70 65  2c 20 62 6f 6f 73 74 3a   |angeType, boost:|
0x4e50:     3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x4e60:     6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 76   |nal_last_value<v|
0x4e70:     6f 69 64 3e 2c 20 69 6e  74 2c 20 73 74 64 3a 3a   |oid>, int, std::|
0x4e80:     6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x4e90:     3a 3a 66 75 6e 63 74 69  6f 6e 3c 76 6f 69 64 28   |::function<void(|
0x4ea0:     63 6f 6e 73 74 20 75 69  6e 74 32 35 36 26 2c 20   |const uint256&, |
0x4eb0:     43 68 61 6e 67 65 54 79  70 65 29 3e 2c 20 62 6f   |ChangeType)>, bo|
0x4ec0:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x4ed0:     69 64 28 63 6f 6e 73 74  20 62 6f 6f 73 74 3a 3a   |id(const boost::|
0x4ee0:     73 69 67 6e 61 6c 73 32  3a 3a 63 6f 6e 6e 65 63   |signals2::connec|
0x4ef0:     74 69 6f 6e 26 2c 20 63  6f 6e 73 74 20 75 69 6e   |tion&, const uin|
0x4f00:     74 32 35 36 26 2c 20 43  68 61 6e 67 65 54 79 70   |t256&, ChangeTyp|
0x4f10:     65 29 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |e)>, boost::sign|
0x4f20:     61 6c 73 32 3a 3a 6d 75  74 65 78 3e 2c 20 62 6f   |als2::mutex>, bo|
0x4f30:     6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x4f40:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x4f50:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x4f60:     3a 64 65 74 61 69 6c 3a  3a 73 69 67 6e 61 6c 32   |:detail::signal2|
0x4f70:     5f 69 6d 70 6c 3c 76 6f  69 64 2c 20 63 6f 6e 73   |_impl<void, cons|
0x4f80:     74 20 75 69 6e 74 32 35  36 26 2c 20 43 68 61 6e   |t uint256&, Chan|
0x4f90:     67 65 54 79 70 65 2c 20  62 6f 6f 73 74 3a 3a 73   |geType, boost::s|
0x4fa0:     69 67 6e 61 6c 73 32 3a  3a 6f 70 74 69 6f 6e 61   |ignals2::optiona|
0x4fb0:     6c 5f 6c 61 73 74 5f 76  61 6c 75 65 3c 76 6f 69   |l_last_value<voi|
0x4fc0:     64 3e 2c 20 69 6e 74 2c  20 73 74 64 3a 3a 6c 65   |d>, int, std::le|
0x4fd0:     73 73 3c 69 6e 74 3e 2c  20 62 6f 6f 73 74 3a 3a   |ss<int>, boost::|
0x4fe0:     66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 63 6f   |function<void(co|
0x4ff0:     6e 73 74 20 75 69 6e 74  32 35 36 26 2c 20 43 68   |nst uint256&, Ch|
0x5000:     61 6e 67 65 54 79 70 65  29 3e 2c 20 62 6f 6f 73   |angeType)>, boos|
0x5010:     74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 76 6f 69 64   |t::function<void|
0x5020:     28 63 6f 6e 73 74 20 62  6f 6f 73 74 3a 3a 73 69   |(const boost::si|
0x5030:     67 6e 61 6c 73 32 3a 3a  63 6f 6e 6e 65 63 74 69   |gnals2::connecti|
0x5040:     6f 6e 26 2c 20 63 6f 6e  73 74 20 75 69 6e 74 32   |on&, const uint2|
0x5050:     35 36 26 2c 20 43 68 61  6e 67 65 54 79 70 65 29   |56&, ChangeType)|
0x5060:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x5070:     73 32 3a 3a 6d 75 74 65  78 3e 26 5d 00            |s2::mutex>&].   |
0x507d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x508d:     00 00 00 76 6f 69 64 20  62 6f 6f 73 74 3a 3a 73   |...void boost::s|
0x509d:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x50ad:     3a 73 69 67 6e 61 6c 32  5f 69 6d 70 6c 3c 52 2c   |:signal2_impl<R,|
0x50bd:     20 54 31 2c 20 54 32 2c  20 43 6f 6d 62 69 6e 65   | T1, T2, Combine|
0x50cd:     72 2c 20 47 72 6f 75 70  2c 20 47 72 6f 75 70 43   |r, Group, GroupC|
0x50dd:     6f 6d 70 61 72 65 2c 20  53 6c 6f 74 46 75 6e 63   |ompare, SlotFunc|
0x50ed:     74 69 6f 6e 2c 20 45 78  74 65 6e 64 65 64 53 6c   |tion, ExtendedSl|
0x50fd:     6f 74 46 75 6e 63 74 69  6f 6e 2c 20 4d 75 74 65   |otFunction, Mute|
0x510d:     78 3e 3a 3a 6e 6f 6c 6f  63 6b 5f 63 6c 65 61 6e   |x>::nolock_clean|
0x511d:     75 70 5f 63 6f 6e 6e 65  63 74 69 6f 6e 73 28 62   |up_connections(b|
0x512d:     6f 6f 6c 2c 20 75 6e 73  69 67 6e 65 64 20 69 6e   |ool, unsigned in|
0x513d:     74 29 20 63 6f 6e 73 74  20 5b 77 69 74 68 20 52   |t) const [with R|
0x514d:     20 3d 20 76 6f 69 64 2c  20 54 31 20 3d 20 63 6f   | = void, T1 = co|
0x515d:     6e 73 74 20 75 69 6e 74  32 35 36 26 2c 20 54 32   |nst uint256&, T2|
0x516d:     20 3d 20 43 68 61 6e 67  65 54 79 70 65 2c 20 43   | = ChangeType, C|
0x517d:     6f 6d 62 69 6e 65 72 20  3d 20 62 6f 6f 73 74 3a   |ombiner = boost:|
0x518d:     3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x519d:     6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 76   |nal_last_value<v|
0x51ad:     6f 69 64 3e 2c 20 47 72  6f 75 70 20 3d 20 69 6e   |oid>, Group = in|
0x51bd:     74 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 20   |t, GroupCompare |
0x51cd:     3d 20 73 74 64 3a 3a 6c  65 73 73 3c 69 6e 74 3e   |= std::less<int>|
0x51dd:     2c 20 53 6c 6f 74 46 75  6e 63 74 69 6f 6e 20 3d   |, SlotFunction =|
0x51ed:     20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x51fd:     3c 76 6f 69 64 28 63 6f  6e 73 74 20 75 69 6e 74   |<void(const uint|
0x520d:     32 35 36 26 2c 20 43 68  61 6e 67 65 54 79 70 65   |256&, ChangeType|
0x521d:     29 3e 2c 20 45 78 74 65  6e 64 65 64 53 6c 6f 74   |)>, ExtendedSlot|
0x522d:     46 75 6e 63 74 69 6f 6e  20 3d 20 62 6f 6f 73 74   |Function = boost|
0x523d:     3a 3a 66 75 6e 63 74 69  6f 6e 3c 76 6f 69 64 28   |::function<void(|
0x524d:     63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x525d:     6e 61 6c 73 32 3a 3a 63  6f 6e 6e 65 63 74 69 6f   |nals2::connectio|
0x526d:     6e 26 2c 20 63 6f 6e 73  74 20 75 69 6e 74 32 35   |n&, const uint25|
0x527d:     36 26 2c 20 43 68 61 6e  67 65 54 79 70 65 29 3e   |6&, ChangeType)>|
0x528d:     2c 20 4d 75 74 65 78 20  3d 20 62 6f 6f 73 74 3a   |, Mutex = boost:|
0x529d:     3a 73 69 67 6e 61 6c 73  32 3a 3a 6d 75 74 65 78   |:signals2::mutex|
0x52ad:     5d 00 00                                           |]..             |
0x52b0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0x52c0:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x52d0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x52e0:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x52f0:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x5300:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x5310:     32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x5320:     5f 76 61 6c 75 65 3c 76  6f 69 64 3e 2c 20 62 6f   |_value<void>, bo|
0x5330:     6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x5340:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x5350:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5360:     3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x5370:     61 6c 75 65 3c 76 6f 69  64 3e 26 5d 00            |alue<void>&].   |
0x537d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x538d:     00 00 00                                           |...             |
0x5390:     54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal2_impl<void, const uint256&, ChangeType, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const uint256&, ChangeType)>, boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, boost::signals2::mutex>::invocation_state]"
0x53a0:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x53b0:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x53c0:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x53d0:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x53e0:     69 67 6e 61 6c 32 5f 69  6d 70 6c 3c 76 6f 69 64   |ignal2_impl<void|
0x53f0:     2c 20 63 6f 6e 73 74 20  75 69 6e 74 32 35 36 26   |, const uint256&|
0x5400:     2c 20 43 68 61 6e 67 65  54 79 70 65 2c 20 62 6f   |, ChangeType, bo|
0x5410:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6f   |ost::signals2::o|
0x5420:     70 74 69 6f 6e 61 6c 5f  6c 61 73 74 5f 76 61 6c   |ptional_last_val|
0x5430:     75 65 3c 76 6f 69 64 3e  2c 20 69 6e 74 2c 20 73   |ue<void>, int, s|
0x5440:     74 64 3a 3a 6c 65 73 73  3c 69 6e 74 3e 2c 20 62   |td::less<int>, b|
0x5450:     6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 76   |oost::function<v|
0x5460:     6f 69 64 28 63 6f 6e 73  74 20 75 69 6e 74 32 35   |oid(const uint25|
0x5470:     36 26 2c 20 43 68 61 6e  67 65 54 79 70 65 29 3e   |6&, ChangeType)>|
0x5480:     2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x5490:     6e 3c 76 6f 69 64 28 63  6f 6e 73 74 20 62 6f 6f   |n<void(const boo|
0x54a0:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 63 6f   |st::signals2::co|
0x54b0:     6e 6e 65 63 74 69 6f 6e  26 2c 20 63 6f 6e 73 74   |nnection&, const|
0x54c0:     20 75 69 6e 74 32 35 36  26 2c 20 43 68 61 6e 67   | uint256&, Chang|
0x54d0:     65 54 79 70 65 29 3e 2c  20 62 6f 6f 73 74 3a 3a   |eType)>, boost::|
0x54e0:     73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x54f0:     3a 3a 69 6e 76 6f 63 61  74 69 6f 6e 5f 73 74 61   |::invocation_sta|
0x5500:     74 65 5d 00                                        |te].            |
0x5504:     00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x5510:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >&]"
0x5520:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x5530:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x5540:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x5550:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x5560:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x5570:     32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x5580:     65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x5590:     3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x55a0:     73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x55b0:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x55c0:     64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x55d0:     6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x55e0:     72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x55f0:     32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x5600:     6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x5610:     74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x5620:     20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x5630:     6c 73 32 3a 3a 73 6c 6f  74 32 3c 76 6f 69 64 2c   |ls2::slot2<void,|
0x5640:     20 63 6f 6e 73 74 20 75  69 6e 74 32 35 36 26 2c   | const uint256&,|
0x5650:     20 43 68 61 6e 67 65 54  79 70 65 2c 20 62 6f 6f   | ChangeType, boo|
0x5660:     73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 76 6f 69   |st::function<voi|
0x5670:     64 28 63 6f 6e 73 74 20  75 69 6e 74 32 35 36 26   |d(const uint256&|
0x5680:     2c 20 43 68 61 6e 67 65  54 79 70 65 29 3e 20 3e   |, ChangeType)> >|
0x5690:     2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x56a0:     32 3a 3a 6d 75 74 65 78  3e 20 3e 20 3e 2c 20 62   |2::mutex> > >, b|
0x56b0:     6f 6f 73 74 3a 3a 73 68  61 72 65 64 5f 70 74 72   |oost::shared_ptr|
0x56c0:     3c 54 3e 3a 3a 72 65 66  65 72 65 6e 63 65 20 3d   |<T>::reference =|
0x56d0:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x56e0:     3a 3a 64 65 74 61 69 6c  3a 3a 67 72 6f 75 70 65   |::detail::groupe|
0x56f0:     64 5f 6c 69 73 74 3c 69  6e 74 2c 20 73 74 64 3a   |d_list<int, std:|
0x5700:     3a 6c 65 73 73 3c 69 6e  74 3e 2c 20 62 6f 6f 73   |:less<int>, boos|
0x5710:     74 3a 3a 73 68 61 72 65  64 5f 70 74 72 3c 62 6f   |t::shared_ptr<bo|
0x5720:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x5730:     65 74 61 69 6c 3a 3a 63  6f 6e 6e 65 63 74 69 6f   |etail::connectio|
0x5740:     6e 5f 62 6f 64 79 3c 73  74 64 3a 3a 70 61 69 72   |n_body<std::pair|
0x5750:     3c 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   |<boost::signals2|
0x5760:     3a 3a 64 65 74 61 69 6c  3a 3a 73 6c 6f 74 5f 6d   |::detail::slot_m|
0x5770:     65 74 61 5f 67 72 6f 75  70 2c 20 62 6f 6f 73 74   |eta_group, boost|
0x5780:     3a 3a 6f 70 74 69 6f 6e  61 6c 3c 69 6e 74 3e 20   |::optional<int> |
0x5790:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x57a0:     73 32 3a 3a 73 6c 6f 74  32 3c 76 6f 69 64 2c 20   |s2::slot2<void, |
0x57b0:     63 6f 6e 73 74 20 75 69  6e 74 32 35 36 26 2c 20   |const uint256&, |
0x57c0:     43 68 61 6e 67 65 54 79  70 65 2c 20 62 6f 6f 73   |ChangeType, boos|
0x57d0:     74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 76 6f 69 64   |t::function<void|
0x57e0:     28 63 6f 6e 73 74 20 75  69 6e 74 32 35 36 26 2c   |(const uint256&,|
0x57f0:     20 43 68 61 6e 67 65 54  79 70 65 29 3e 20 3e 2c   | ChangeType)> >,|
0x5800:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x5810:     3a 3a 6d 75 74 65 78 3e  20 3e 20 3e 26 5d 00      |::mutex> > >&]. |
0x581f:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x582f:     00                                                 |.               |
0x5830:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = const uint256&, T2 = ChangeType, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(const uint256&, ChangeType)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, const uint256&, ChangeType)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >]"
0x5840:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x5850:     67 6e 61 6c 32 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal2_impl<R, T1|
0x5860:     2c 20 54 32 2c 20 43 6f  6d 62 69 6e 65 72 2c 20   |, T2, Combiner, |
0x5870:     47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x5880:     61 72 65 2c 20 53 6c 6f  74 46 75 6e 63 74 69 6f   |are, SlotFunctio|
0x5890:     6e 2c 20 45 78 74 65 6e  64 65 64 53 6c 6f 74 46   |n, ExtendedSlotF|
0x58a0:     75 6e 63 74 69 6f 6e 2c  20 4d 75 74 65 78 3e 3a   |unction, Mutex>:|
0x58b0:     3a 6e 6f 6c 6f 63 6b 5f  63 6c 65 61 6e 75 70 5f   |:nolock_cleanup_|
0x58c0:     63 6f 6e 6e 65 63 74 69  6f 6e 73 5f 66 72 6f 6d   |connections_from|
0x58d0:     28 62 6f 6f 6c 2c 20 63  6f 6e 73 74 20 74 79 70   |(bool, const typ|
0x58e0:     65 6e 61 6d 65 20 62 6f  6f 73 74 3a 3a 73 69 67   |ename boost::sig|
0x58f0:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x5900:     69 67 6e 61 6c 32 5f 69  6d 70 6c 3c 52 2c 20 54   |ignal2_impl<R, T|
0x5910:     31 2c 20 54 32 2c 20 43  6f 6d 62 69 6e 65 72 2c   |1, T2, Combiner,|
0x5920:     20 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   | Group, GroupCom|
0x5930:     70 61 72 65 2c 20 53 6c  6f 74 46 75 6e 63 74 69   |pare, SlotFuncti|
0x5940:     6f 6e 2c 20 45 78 74 65  6e 64 65 64 53 6c 6f 74   |on, ExtendedSlot|
0x5950:     46 75 6e 63 74 69 6f 6e  2c 20 4d 75 74 65 78 3e   |Function, Mutex>|
0x5960:     3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 5f 6c 69 73   |::connection_lis|
0x5970:     74 5f 74 79 70 65 3a 3a  69 74 65 72 61 74 6f 72   |t_type::iterator|
0x5980:     26 2c 20 75 6e 73 69 67  6e 65 64 20 69 6e 74 29   |&, unsigned int)|
0x5990:     20 63 6f 6e 73 74 20 5b  77 69 74 68 20 52 20 3d   | const [with R =|
0x59a0:     20 76 6f 69 64 2c 20 54  31 20 3d 20 63 6f 6e 73   | void, T1 = cons|
0x59b0:     74 20 75 69 6e 74 32 35  36 26 2c 20 54 32 20 3d   |t uint256&, T2 =|
0x59c0:     20 43 68 61 6e 67 65 54  79 70 65 2c 20 43 6f 6d   | ChangeType, Com|
0x59d0:     62 69 6e 65 72 20 3d 20  62 6f 6f 73 74 3a 3a 73   |biner = boost::s|
0x59e0:     69 67 6e 61 6c 73 32 3a  3a 6f 70 74 69 6f 6e 61   |ignals2::optiona|
0x59f0:     6c 5f 6c 61 73 74 5f 76  61 6c 75 65 3c 76 6f 69   |l_last_value<voi|
0x5a00:     64 3e 2c 20 47 72 6f 75  70 20 3d 20 69 6e 74 2c   |d>, Group = int,|
0x5a10:     20 47 72 6f 75 70 43 6f  6d 70 61 72 65 20 3d 20   | GroupCompare = |
0x5a20:     73 74 64 3a 3a 6c 65 73  73 3c 69 6e 74 3e 2c 20   |std::less<int>, |
0x5a30:     53 6c 6f 74 46 75 6e 63  74 69 6f 6e 20 3d 20 62   |SlotFunction = b|
0x5a40:     6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 76   |oost::function<v|
0x5a50:     6f 69 64 28 63 6f 6e 73  74 20 75 69 6e 74 32 35   |oid(const uint25|
0x5a60:     36 26 2c 20 43 68 61 6e  67 65 54 79 70 65 29 3e   |6&, ChangeType)>|
0x5a70:     2c 20 45 78 74 65 6e 64  65 64 53 6c 6f 74 46 75   |, ExtendedSlotFu|
0x5a80:     6e 63 74 69 6f 6e 20 3d  20 62 6f 6f 73 74 3a 3a   |nction = boost::|
0x5a90:     66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 63 6f   |function<void(co|
0x5aa0:     6e 73 74 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |nst boost::signa|
0x5ab0:     6c 73 32 3a 3a 63 6f 6e  6e 65 63 74 69 6f 6e 26   |ls2::connection&|
0x5ac0:     2c 20 63 6f 6e 73 74 20  75 69 6e 74 32 35 36 26   |, const uint256&|
0x5ad0:     2c 20 43 68 61 6e 67 65  54 79 70 65 29 3e 2c 20   |, ChangeType)>, |
0x5ae0:     4d 75 74 65 78 20 3d 20  62 6f 6f 73 74 3a 3a 73   |Mutex = boost::s|
0x5af0:     69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 2c 20   |ignals2::mutex, |
0x5b00:     74 79 70 65 6e 61 6d 65  20 62 6f 6f 73 74 3a 3a   |typename boost::|
0x5b10:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x5b20:     3a 3a 73 69 67 6e 61 6c  32 5f 69 6d 70 6c 3c 52   |::signal2_impl<R|
0x5b30:     2c 20 54 31 2c 20 54 32  2c 20 43 6f 6d 62 69 6e   |, T1, T2, Combin|
0x5b40:     65 72 2c 20 47 72 6f 75  70 2c 20 47 72 6f 75 70   |er, Group, Group|
0x5b50:     43 6f 6d 70 61 72 65 2c  20 53 6c 6f 74 46 75 6e   |Compare, SlotFun|
0x5b60:     63 74 69 6f 6e 2c 20 45  78 74 65 6e 64 65 64 53   |ction, ExtendedS|
0x5b70:     6c 6f 74 46 75 6e 63 74  69 6f 6e 2c 20 4d 75 74   |lotFunction, Mut|
0x5b80:     65 78 3e 3a 3a 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |ex>::connection_|
0x5b90:     6c 69 73 74 5f 74 79 70  65 3a 3a 69 74 65 72 61   |list_type::itera|
0x5ba0:     74 6f 72 20 3d 20 73 74  64 3a 3a 5f 4c 69 73 74   |tor = std::_List|
0x5bb0:     5f 69 74 65 72 61 74 6f  72 3c 62 6f 6f 73 74 3a   |_iterator<boost:|
0x5bc0:     3a 73 68 61 72 65 64 5f  70 74 72 3c 62 6f 6f 73   |:shared_ptr<boos|
0x5bd0:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x5be0:     61 69 6c 3a 3a 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |ail::connection_|
0x5bf0:     62 6f 64 79 3c 73 74 64  3a 3a 70 61 69 72 3c 62   |body<std::pair<b|
0x5c00:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x5c10:     64 65 74 61 69 6c 3a 3a  73 6c 6f 74 5f 6d 65 74   |detail::slot_met|
0x5c20:     61 5f 67 72 6f 75 70 2c  20 62 6f 6f 73 74 3a 3a   |a_group, boost::|
0x5c30:     6f 70 74 69 6f 6e 61 6c  3c 69 6e 74 3e 20 3e 2c   |optional<int> >,|
0x5c40:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x5c50:     3a 3a 73 6c 6f 74 32 3c  76 6f 69 64 2c 20 63 6f   |::slot2<void, co|
0x5c60:     6e 73 74 20 75 69 6e 74  32 35 36 26 2c 20 43 68   |nst uint256&, Ch|
0x5c70:     61 6e 67 65 54 79 70 65  2c 20 62 6f 6f 73 74 3a   |angeType, boost:|
0x5c80:     3a 66 75 6e 63 74 69 6f  6e 3c 76 6f 69 64 28 63   |:function<void(c|
0x5c90:     6f 6e 73 74 20 75 69 6e  74 32 35 36 26 2c 20 43   |onst uint256&, C|
0x5ca0:     68 61 6e 67 65 54 79 70  65 29 3e 20 3e 2c 20 62   |hangeType)> >, b|
0x5cb0:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x5cc0:     6d 75 74 65 78 3e 20 3e  20 3e 5d 00               |mutex> > >].    |
0x5ccc:     00 00 00 00                                        |....            |
0x5cd0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>&]"
0x5ce0:     72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x5cf0:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x5d00:     72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x5d10:     29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x5d20:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x5d30:     32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x5d40:     63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x5d50:     70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x5d60:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x5d70:     6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x5d80:     6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x5d90:     6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x5da0:     67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 76 6f   |gnals2::slot2<vo|
0x5db0:     69 64 2c 20 63 6f 6e 73  74 20 75 69 6e 74 32 35   |id, const uint25|
0x5dc0:     36 26 2c 20 43 68 61 6e  67 65 54 79 70 65 2c 20   |6&, ChangeType, |
0x5dd0:     62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x5de0:     76 6f 69 64 28 63 6f 6e  73 74 20 75 69 6e 74 32   |void(const uint2|
0x5df0:     35 36 26 2c 20 43 68 61  6e 67 65 54 79 70 65 29   |56&, ChangeType)|
0x5e00:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x5e10:     61 6c 73 32 3a 3a 6d 75  74 65 78 3e 2c 20 62 6f   |als2::mutex>, bo|
0x5e20:     6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x5e30:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x5e40:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x5e50:     3a 64 65 74 61 69 6c 3a  3a 63 6f 6e 6e 65 63 74   |:detail::connect|
0x5e60:     69 6f 6e 5f 62 6f 64 79  3c 73 74 64 3a 3a 70 61   |ion_body<std::pa|
0x5e70:     69 72 3c 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |ir<boost::signal|
0x5e80:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 6c 6f 74   |s2::detail::slot|
0x5e90:     5f 6d 65 74 61 5f 67 72  6f 75 70 2c 20 62 6f 6f   |_meta_group, boo|
0x5ea0:     73 74 3a 3a 6f 70 74 69  6f 6e 61 6c 3c 69 6e 74   |st::optional<int|
0x5eb0:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x5ec0:     61 6c 73 32 3a 3a 73 6c  6f 74 32 3c 76 6f 69 64   |als2::slot2<void|
0x5ed0:     2c 20 63 6f 6e 73 74 20  75 69 6e 74 32 35 36 26   |, const uint256&|
0x5ee0:     2c 20 43 68 61 6e 67 65  54 79 70 65 2c 20 62 6f   |, ChangeType, bo|
0x5ef0:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x5f00:     69 64 28 63 6f 6e 73 74  20 75 69 6e 74 32 35 36   |id(const uint256|
0x5f10:     26 2c 20 43 68 61 6e 67  65 54 79 70 65 29 3e 20   |&, ChangeType)> |
0x5f20:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x5f30:     73 32 3a 3a 6d 75 74 65  78 3e 26 5d 00            |s2::mutex>&].   |
0x5f3d:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5f4d:     00 00 00                                           |...             |
0x5f50:     54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex>]"
0x5f60:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x5f70:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x5f80:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x5f90:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x5fa0:     6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x5fb0:     74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x5fc0:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x5fd0:     3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x5fe0:     70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x5ff0:     61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x6000:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x6010:     32 3c 76 6f 69 64 2c 20  63 6f 6e 73 74 20 75 69   |2<void, const ui|
0x6020:     6e 74 32 35 36 26 2c 20  43 68 61 6e 67 65 54 79   |nt256&, ChangeTy|
0x6030:     70 65 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |pe, boost::funct|
0x6040:     69 6f 6e 3c 76 6f 69 64  28 63 6f 6e 73 74 20 75   |ion<void(const u|
0x6050:     69 6e 74 32 35 36 26 2c  20 43 68 61 6e 67 65 54   |int256&, ChangeT|
0x6060:     79 70 65 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |ype)> >, boost::|
0x6070:     73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x6080:     5d 00                                              |].              |
0x6082:     00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x6090:     54 2a 20 62 6f 6f 73 74  3a 3a 73 63 6f 70 65 64   |T* boost::scoped|   "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x60a0:     5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x60b0:     72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x60c0:     68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x60d0:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 66   |nals2::detail::f|
0x60e0:     6f 72 65 69 67 6e 5f 77  65 61 6b 5f 70 74 72 5f   |oreign_weak_ptr_|
0x60f0:     69 6d 70 6c 5f 62 61 73  65 5d 00                  |impl_base].     |
0x60fb:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x610b:     00 00 00 00 00                                     |.....           |
0x6110:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0x6120:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x6130:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x6140:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x6150:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x6160:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x6170:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x6180:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x6190:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x61a0:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x61b0:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x61c0:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x61d0:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x61e0:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x61f0:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x6200:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x6210:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x6220:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x6230:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x6240:     72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x6250:     73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x6260:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x6270:     61 69 6c 3a 3a 65 78 70  69 72 65 64 5f 77 65 61   |ail::expired_wea|
0x6280:     6b 5f 70 74 72 5f 76 69  73 69 74 6f 72 3e 2c 20   |k_ptr_visitor>, |
0x6290:     56 50 43 56 20 3d 20 63  6f 6e 73 74 20 76 6f 69   |VPCV = const voi|
0x62a0:     64 2a 2c 20 4e 42 46 20  3d 20 62 6f 6f 73 74 3a   |d*, NBF = boost:|
0x62b0:     3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x62c0:     77 65 61 6b 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |weak_ptr<void>, |
0x62d0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x62e0:     3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x62f0:     5f 76 6f 69 64 5f 77 65  61 6b 5f 70 74 72 3e 3a   |_void_weak_ptr>:|
0x6300:     3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x6310:     70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x6320:     73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x6330:     70 65 20 3d 20 62 6f 6f  6c 2c 20 6d 70 6c 5f 3a   |pe = bool, mpl_:|
0x6340:     3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x6350:     6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x635c:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x636c:     00 00 00 00 74 79 70 65  6e 61 6d 65 20 56 69 73   |....typename Vis|
0x637c:     69 74 6f 72 3a 3a 72 65  73 75 6c 74 5f 74 79 70   |itor::result_typ|
0x638c:     65 20 62 6f 6f 73 74 3a  3a 64 65 74 61 69 6c 3a   |e boost::detail:|
0x639c:     3a 76 61 72 69 61 6e 74  3a 3a 76 69 73 69 74 61   |:variant::visita|
0x63ac:     74 69 6f 6e 5f 69 6d 70  6c 5f 69 6e 76 6f 6b 65   |tion_impl_invoke|
0x63bc:     28 69 6e 74 2c 20 56 69  73 69 74 6f 72 26 2c 20   |(int, Visitor&, |
0x63cc:     56 6f 69 64 50 74 72 43  56 2c 20 62 6f 6f 73 74   |VoidPtrCV, boost|
0x63dc:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x63ec:     74 3a 3a 61 70 70 6c 79  5f 76 69 73 69 74 6f 72   |t::apply_visitor|
0x63fc:     5f 75 6e 72 6f 6c 6c 65  64 2a 2c 20 4e 42 46 2c   |_unrolled*, NBF,|
0x640c:     20 6c 6f 6e 67 20 69 6e  74 29 20 5b 77 69 74 68   | long int) [with|
0x641c:     20 56 69 73 69 74 6f 72  20 3d 20 62 6f 6f 73 74   | Visitor = boost|
0x642c:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x643c:     74 3a 3a 69 6e 76 6f 6b  65 5f 76 69 73 69 74 6f   |t::invoke_visito|
0x644c:     72 3c 63 6f 6e 73 74 20  62 6f 6f 73 74 3a 3a 73   |r<const boost::s|
0x645c:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x646c:     3a 65 78 70 69 72 65 64  5f 77 65 61 6b 5f 70 74   |:expired_weak_pt|
0x647c:     72 5f 76 69 73 69 74 6f  72 3e 2c 20 56 6f 69 64   |r_visitor>, Void|
0x648c:     50 74 72 43 56 20 3d 20  63 6f 6e 73 74 20 76 6f   |PtrCV = const vo|
0x649c:     69 64 2a 2c 20 4e 42 46  20 3d 20 62 6f 6f 73 74   |id*, NBF = boost|
0x64ac:     3a 3a 76 61 72 69 61 6e  74 3c 62 6f 6f 73 74 3a   |::variant<boost:|
0x64bc:     3a 77 65 61 6b 5f 70 74  72 3c 76 6f 69 64 3e 2c   |:weak_ptr<void>,|
0x64cc:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x64dc:     3a 3a 64 65 74 61 69 6c  3a 3a 66 6f 72 65 69 67   |::detail::foreig|
0x64ec:     6e 5f 76 6f 69 64 5f 77  65 61 6b 5f 70 74 72 3e   |n_void_weak_ptr>|
0x64fc:     3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x650c:     79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x651c:     69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x652c:     79 70 65 20 3d 20 62 6f  6f 6c 5d 00 00 00 00 00   |ype = bool].....|
0x653c:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x654c:     00 00 00 00                                        |....            |
0x6550:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x6560:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x6570:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x6580:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x6590:     54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x65a0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x65b0:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x65c0:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x65d0:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x65e0:     54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x65f0:     73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x6600:     65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x6610:     6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x6620:     20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x6630:     70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x6640:     3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x6650:     20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x6660:     5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x6670:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x6680:     6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x6690:     64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x66a0:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x66b0:     3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x66c0:     2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x66d0:     6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x66e0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 32   |:signals2::slot2|
0x66f0:     3c 76 6f 69 64 2c 20 63  6f 6e 73 74 20 75 69 6e   |<void, const uin|
0x6700:     74 32 35 36 26 2c 20 43  68 61 6e 67 65 54 79 70   |t256&, ChangeTyp|
0x6710:     65 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |e, boost::functi|
0x6720:     6f 6e 3c 76 6f 69 64 28  63 6f 6e 73 74 20 75 69   |on<void(const ui|
0x6730:     6e 74 32 35 36 26 2c 20  43 68 61 6e 67 65 54 79   |nt256&, ChangeTy|
0x6740:     70 65 29 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |pe)> >, boost::s|
0x6750:     69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 3e 20   |ignals2::mutex> |
0x6760:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x6770:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 67 72 6f 75   |s2::detail::grou|
0x6780:     70 65 64 5f 6c 69 73 74  3c 47 72 6f 75 70 2c 20   |ped_list<Group, |
0x6790:     47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 56 61   |GroupCompare, Va|
0x67a0:     6c 75 65 54 79 70 65 3e  3a 3a 69 74 65 72 61 74   |lueType>::iterat|
0x67b0:     6f 72 20 3d 20 73 74 64  3a 3a 5f 4c 69 73 74 5f   |or = std::_List_|
0x67c0:     69 74 65 72 61 74 6f 72  3c 62 6f 6f 73 74 3a 3a   |iterator<boost::|
0x67d0:     73 68 61 72 65 64 5f 70  74 72 3c 62 6f 6f 73 74   |shared_ptr<boost|
0x67e0:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x67f0:     69 6c 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 5f 62   |il::connection_b|
0x6800:     6f 64 79 3c 73 74 64 3a  3a 70 61 69 72 3c 62 6f   |ody<std::pair<bo|
0x6810:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x6820:     65 74 61 69 6c 3a 3a 73  6c 6f 74 5f 6d 65 74 61   |etail::slot_meta|
0x6830:     5f 67 72 6f 75 70 2c 20  62 6f 6f 73 74 3a 3a 6f   |_group, boost::o|
0x6840:     70 74 69 6f 6e 61 6c 3c  69 6e 74 3e 20 3e 2c 20   |ptional<int> >, |
0x6850:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x6860:     3a 73 6c 6f 74 32 3c 76  6f 69 64 2c 20 63 6f 6e   |:slot2<void, con|
0x6870:     73 74 20 75 69 6e 74 32  35 36 26 2c 20 43 68 61   |st uint256&, Cha|
0x6880:     6e 67 65 54 79 70 65 2c  20 62 6f 6f 73 74 3a 3a   |ngeType, boost::|
0x6890:     66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 63 6f   |function<void(co|
0x68a0:     6e 73 74 20 75 69 6e 74  32 35 36 26 2c 20 43 68   |nst uint256&, Ch|
0x68b0:     61 6e 67 65 54 79 70 65  29 3e 20 3e 2c 20 62 6f   |angeType)> >, bo|
0x68c0:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6d   |ost::signals2::m|
0x68d0:     75 74 65 78 3e 20 3e 20  3e 2c 20 62 6f 6f 73 74   |utex> > >, boost|
0x68e0:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x68f0:     69 6c 3a 3a 67 72 6f 75  70 65 64 5f 6c 69 73 74   |il::grouped_list|
0x6900:     3c 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   |<Group, GroupCom|
0x6910:     70 61 72 65 2c 20 56 61  6c 75 65 54 79 70 65 3e   |pare, ValueType>|
0x6920:     3a 3a 67 72 6f 75 70 5f  6b 65 79 5f 74 79 70 65   |::group_key_type|
0x6930:     20 3d 20 73 74 64 3a 3a  70 61 69 72 3c 62 6f 6f   | = std::pair<boo|
0x6940:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x6950:     74 61 69 6c 3a 3a 73 6c  6f 74 5f 6d 65 74 61 5f   |tail::slot_meta_|
0x6960:     67 72 6f 75 70 2c 20 62  6f 6f 73 74 3a 3a 6f 70   |group, boost::op|
0x6970:     74 69 6f 6e 61 6c 3c 69  6e 74 3e 20 3e 5d 00      |tional<int> >]. |
0x697f:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x698f:     00                                                 |.               |
0x6990:     62 6f 6f 73 74 3a 3a 6f  70 74 69 6f 6e 61 6c 3c   |boost::optional<|   "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x69a0:     54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 5f 63 6f   |T>::reference_co|
0x69b0:     6e 73 74 5f 74 79 70 65  20 62 6f 6f 73 74 3a 3a   |nst_type boost::|
0x69c0:     6f 70 74 69 6f 6e 61 6c  3c 54 3e 3a 3a 67 65 74   |optional<T>::get|
0x69d0:     28 29 20 63 6f 6e 73 74  20 5b 77 69 74 68 20 54   |() const [with T|
0x69e0:     20 3d 20 69 6e 74 2c 20  62 6f 6f 73 74 3a 3a 6f   | = int, boost::o|
0x69f0:     70 74 69 6f 6e 61 6c 3c  54 3e 3a 3a 72 65 66 65   |ptional<T>::refe|
0x6a00:     72 65 6e 63 65 5f 63 6f  6e 73 74 5f 74 79 70 65   |rence_const_type|
0x6a10:     20 3d 20 63 6f 6e 73 74  20 69 6e 74 26 5d 00      | = const int&]. |
0x6a1f:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6a2f:     00                                                 |.               |
0x6a30:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x6a40:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x6a50:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x6a60:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x6a70:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x6a80:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x6a90:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x6aa0:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x6ab0:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x6ac0:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x6ad0:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x6ae0:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x6af0:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x6b00:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x6b10:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x6b20:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x6b30:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x6b40:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x6b50:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x6b60:     72 69 61 6e 74 3a 3a 64  65 73 74 72 6f 79 65 72   |riant::destroyer|
0x6b70:     2c 20 56 50 43 56 20 3d  20 76 6f 69 64 2a 2c 20   |, VPCV = void*, |
0x6b80:     4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x6b90:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x6ba0:     65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x6bb0:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x6bc0:     65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x6bd0:     6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 3a   |oid_shared_ptr>:|
0x6be0:     3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x6bf0:     70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x6c00:     73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x6c10:     70 65 20 3d 20 76 6f 69  64 2c 20 6d 70 6c 5f 3a   |pe = void, mpl_:|
0x6c20:     3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x6c30:     6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x6c3c:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6c4c:     00 00 00 00 74 79 70 65  6e 61 6d 65 20 56 69 73   |....typename Vis|
0x6c5c:     69 74 6f 72 3a 3a 72 65  73 75 6c 74 5f 74 79 70   |itor::result_typ|
0x6c6c:     65 20 62 6f 6f 73 74 3a  3a 64 65 74 61 69 6c 3a   |e boost::detail:|
0x6c7c:     3a 76 61 72 69 61 6e 74  3a 3a 76 69 73 69 74 61   |:variant::visita|
0x6c8c:     74 69 6f 6e 5f 69 6d 70  6c 5f 69 6e 76 6f 6b 65   |tion_impl_invoke|
0x6c9c:     28 69 6e 74 2c 20 56 69  73 69 74 6f 72 26 2c 20   |(int, Visitor&, |
0x6cac:     56 6f 69 64 50 74 72 43  56 2c 20 62 6f 6f 73 74   |VoidPtrCV, boost|
0x6cbc:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x6ccc:     74 3a 3a 61 70 70 6c 79  5f 76 69 73 69 74 6f 72   |t::apply_visitor|
0x6cdc:     5f 75 6e 72 6f 6c 6c 65  64 2a 2c 20 4e 42 46 2c   |_unrolled*, NBF,|
0x6cec:     20 6c 6f 6e 67 20 69 6e  74 29 20 5b 77 69 74 68   | long int) [with|
0x6cfc:     20 56 69 73 69 74 6f 72  20 3d 20 62 6f 6f 73 74   | Visitor = boost|
0x6d0c:     3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x6d1c:     74 3a 3a 64 65 73 74 72  6f 79 65 72 2c 20 56 6f   |t::destroyer, Vo|
0x6d2c:     69 64 50 74 72 43 56 20  3d 20 76 6f 69 64 2a 2c   |idPtrCV = void*,|
0x6d3c:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x6d4c:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x6d5c:     72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x6d6c:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x6d7c:     64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x6d8c:     76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x6d9c:     3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x6dac:     79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x6dbc:     69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x6dcc:     79 70 65 20 3d 20 76 6f  69 64 5d 00 00 00 00 00   |ype = void].....|
0x6ddc:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6dec:     00 00 00 00                                        |....            |
0x6df0:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0x6e00:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x6e10:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x6e20:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x6e30:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x6e40:     63 61 74 6f 72 3e 3a 3a  64 65 73 74 72 6f 79 5f   |cator>::destroy_|
0x6e50:     62 61 63 6b 5f 6e 28 62  6f 6f 73 74 3a 3a 73 69   |back_n(boost::si|
0x6e60:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x6e70:     61 75 74 6f 5f 62 75 66  66 65 72 3c 54 2c 20 53   |auto_buffer<T, S|
0x6e80:     74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x6e90:     2c 20 47 72 6f 77 50 6f  6c 69 63 79 2c 20 41 6c   |, GrowPolicy, Al|
0x6ea0:     6c 6f 63 61 74 6f 72 3e  3a 3a 73 69 7a 65 5f 74   |locator>::size_t|
0x6eb0:     79 70 65 2c 20 63 6f 6e  73 74 20 66 61 6c 73 65   |ype, const false|
0x6ec0:     5f 74 79 70 65 26 29 20  5b 77 69 74 68 20 54 20   |_type&) [with T |
0x6ed0:     3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x6ee0:     3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x6ef0:     74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x6f00:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x6f10:     6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x6f20:     73 68 61 72 65 64 5f 70  74 72 3e 2c 20 53 74 61   |shared_ptr>, Sta|
0x6f30:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 20 3d   |ckBufferPolicy =|
0x6f40:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x6f50:     3a 3a 64 65 74 61 69 6c  3a 3a 73 74 6f 72 65 5f   |::detail::store_|
0x6f60:     6e 5f 6f 62 6a 65 63 74  73 3c 31 30 75 3e 2c 20   |n_objects<10u>, |
0x6f70:     47 72 6f 77 50 6f 6c 69  63 79 20 3d 20 62 6f 6f   |GrowPolicy = boo|
0x6f80:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x6f90:     74 61 69 6c 3a 3a 64 65  66 61 75 6c 74 5f 67 72   |tail::default_gr|
0x6fa0:     6f 77 5f 70 6f 6c 69 63  79 2c 20 41 6c 6c 6f 63   |ow_policy, Alloc|
0x6fb0:     61 74 6f 72 20 3d 20 73  74 64 3a 3a 61 6c 6c 6f   |ator = std::allo|
0x6fc0:     63 61 74 6f 72 3c 62 6f  6f 73 74 3a 3a 76 61 72   |cator<boost::var|
0x6fd0:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x6fe0:     65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x6ff0:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x7000:     65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x7010:     6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 20   |oid_shared_ptr> |
0x7020:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x7030:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 61 75 74 6f   |s2::detail::auto|
0x7040:     5f 62 75 66 66 65 72 3c  54 2c 20 53 74 61 63 6b   |_buffer<T, Stack|
0x7050:     42 75 66 66 65 72 50 6f  6c 69 63 79 2c 20 47 72   |BufferPolicy, Gr|
0x7060:     6f 77 50 6f 6c 69 63 79  2c 20 41 6c 6c 6f 63 61   |owPolicy, Alloca|
0x7070:     74 6f 72 3e 3a 3a 73 69  7a 65 5f 74 79 70 65 20   |tor>::size_type |
0x7080:     3d 20 75 6e 73 69 67 6e  65 64 20 69 6e 74 2c 20   |= unsigned int, |
0x7090:     62 6f 6f 73 74 3a 3a 66  61 6c 73 65 5f 74 79 70   |boost::false_typ|
0x70a0:     65 20 3d 20 62 6f 6f 73  74 3a 3a 69 6e 74 65 67   |e = boost::integ|
0x70b0:     72 61 6c 5f 63 6f 6e 73  74 61 6e 74 3c 62 6f 6f   |ral_constant<boo|
0x70c0:     6c 2c 20 66 61 6c 73 65  3e 5d 00                  |l, false>].     |
0x70cb:     00 00 00 00 00                                     |.....           |
0x70d0:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x70e0:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x70f0:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x7100:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x7110:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x7120:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x7130:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x7140:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x7150:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x7160:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x7170:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x7180:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x7190:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x71a0:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x71b0:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x71c0:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x71d0:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x71e0:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x71f0:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x7200:     72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x7210:     73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x7220:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7230:     61 69 6c 3a 3a 6c 6f 63  6b 5f 77 65 61 6b 5f 70   |ail::lock_weak_p|
0x7240:     74 72 5f 76 69 73 69 74  6f 72 3e 2c 20 56 50 43   |tr_visitor>, VPC|
0x7250:     56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x7260:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x7270:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 77 65 61   |riant<boost::wea|
0x7280:     6b 5f 70 74 72 3c 76 6f  69 64 3e 2c 20 62 6f 6f   |k_ptr<void>, boo|
0x7290:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x72a0:     74 61 69 6c 3a 3a 66 6f  72 65 69 67 6e 5f 76 6f   |tail::foreign_vo|
0x72b0:     69 64 5f 77 65 61 6b 5f  70 74 72 3e 3a 3a 68 61   |id_weak_ptr>::ha|
0x72c0:     73 5f 66 61 6c 6c 62 61  63 6b 5f 74 79 70 65 5f   |s_fallback_type_|
0x72d0:     2c 20 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |, typename Visit|
0x72e0:     6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x72f0:     3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x7300:     3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x7310:     74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x7320:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x7330:     6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x7340:     73 68 61 72 65 64 5f 70  74 72 3e 2c 20 6d 70 6c   |shared_ptr>, mpl|
0x7350:     5f 3a 3a 74 72 75 65 5f  20 3d 20 6d 70 6c 5f 3a   |_::true_ = mpl_:|
0x7360:     3a 62 6f 6f 6c 5f 3c 74  72 75 65 3e 5d 00         |:bool_<true>].  |
0x736e:     00 00 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |..typename Visit|
0x737e:     6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x738e:     62 6f 6f 73 74 3a 3a 64  65 74 61 69 6c 3a 3a 76   |boost::detail::v|
0x739e:     61 72 69 61 6e 74 3a 3a  76 69 73 69 74 61 74 69   |ariant::visitati|
0x73ae:     6f 6e 5f 69 6d 70 6c 5f  69 6e 76 6f 6b 65 28 69   |on_impl_invoke(i|
0x73be:     6e 74 2c 20 56 69 73 69  74 6f 72 26 2c 20 56 6f   |nt, Visitor&, Vo|
0x73ce:     69 64 50 74 72 43 56 2c  20 62 6f 6f 73 74 3a 3a   |idPtrCV, boost::|
0x73de:     64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x73ee:     3a 61 70 70 6c 79 5f 76  69 73 69 74 6f 72 5f 75   |:apply_visitor_u|
0x73fe:     6e 72 6f 6c 6c 65 64 2a  2c 20 4e 42 46 2c 20 6c   |nrolled*, NBF, l|
0x740e:     6f 6e 67 20 69 6e 74 29  20 5b 77 69 74 68 20 56   |ong int) [with V|
0x741e:     69 73 69 74 6f 72 20 3d  20 62 6f 6f 73 74 3a 3a   |isitor = boost::|
0x742e:     64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x743e:     3a 69 6e 76 6f 6b 65 5f  76 69 73 69 74 6f 72 3c   |:invoke_visitor<|
0x744e:     63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x745e:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 6c   |nals2::detail::l|
0x746e:     6f 63 6b 5f 77 65 61 6b  5f 70 74 72 5f 76 69 73   |ock_weak_ptr_vis|
0x747e:     69 74 6f 72 3e 2c 20 56  6f 69 64 50 74 72 43 56   |itor>, VoidPtrCV|
0x748e:     20 3d 20 63 6f 6e 73 74  20 76 6f 69 64 2a 2c 20   | = const void*, |
0x749e:     4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x74ae:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 77 65 61 6b   |iant<boost::weak|
0x74be:     5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x74ce:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x74de:     61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x74ee:     64 5f 77 65 61 6b 5f 70  74 72 3e 3a 3a 68 61 73   |d_weak_ptr>::has|
0x74fe:     5f 66 61 6c 6c 62 61 63  6b 5f 74 79 70 65 5f 2c   |_fallback_type_,|
0x750e:     20 74 79 70 65 6e 61 6d  65 20 56 69 73 69 74 6f   | typename Visito|
0x751e:     72 3a 3a 72 65 73 75 6c  74 5f 74 79 70 65 20 3d   |r::result_type =|
0x752e:     20 62 6f 6f 73 74 3a 3a  76 61 72 69 61 6e 74 3c   | boost::variant<|
0x753e:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x754e:     72 3c 76 6f 69 64 3e 2c  20 62 6f 6f 73 74 3a 3a   |r<void>, boost::|
0x755e:     73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x756e:     3a 3a 66 6f 72 65 69 67  6e 5f 76 6f 69 64 5f 73   |::foreign_void_s|
0x757e:     68 61 72 65 64 5f 70 74  72 3e 5d 00 00 00 00 00   |hared_ptr>].....|
0x758e:     00 00                                              |..              |
0x7590:     74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x75a0:     3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x75b0:     6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x75c0:     69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x75d0:     5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x75e0:     56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x75f0:     6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x7600:     2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x7610:     57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x7620:     30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x7630:     65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x7640:     76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x7650:     73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x7660:     3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x7670:     70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x7680:     74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x7690:     6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x76a0:     3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x76b0:     6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x76c0:     72 69 61 6e 74 3a 3a 63  6f 70 79 5f 69 6e 74 6f   |riant::copy_into|
0x76d0:     2c 20 56 50 43 56 20 3d  20 63 6f 6e 73 74 20 76   |, VPCV = const v|
0x76e0:     6f 69 64 2a 2c 20 4e 42  46 20 3d 20 62 6f 6f 73   |oid*, NBF = boos|
0x76f0:     74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x7700:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x7710:     64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x7720:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x7730:     65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x7740:     5f 70 74 72 3e 3a 3a 68  61 73 5f 66 61 6c 6c 62   |_ptr>::has_fallb|
0x7750:     61 63 6b 5f 74 79 70 65  5f 2c 20 74 79 70 65 6e   |ack_type_, typen|
0x7760:     61 6d 65 20 56 69 73 69  74 6f 72 3a 3a 72 65 73   |ame Visitor::res|
0x7770:     75 6c 74 5f 74 79 70 65  20 3d 20 76 6f 69 64 2c   |ult_type = void,|
0x7780:     20 6d 70 6c 5f 3a 3a 74  72 75 65 5f 20 3d 20 6d   | mpl_::true_ = m|
0x7790:     70 6c 5f 3a 3a 62 6f 6f  6c 5f 3c 74 72 75 65 3e   |pl_::bool_<true>|
0x77a0:     5d 00                                              |].              |
0x77a2:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 74 79   |..............ty|
0x77b2:     70 65 6e 61 6d 65 20 56  69 73 69 74 6f 72 3a 3a   |pename Visitor::|
0x77c2:     72 65 73 75 6c 74 5f 74  79 70 65 20 62 6f 6f 73   |result_type boos|
0x77d2:     74 3a 3a 64 65 74 61 69  6c 3a 3a 76 61 72 69 61   |t::detail::varia|
0x77e2:     6e 74 3a 3a 76 69 73 69  74 61 74 69 6f 6e 5f 69   |nt::visitation_i|
0x77f2:     6d 70 6c 5f 69 6e 76 6f  6b 65 28 69 6e 74 2c 20   |mpl_invoke(int, |
0x7802:     56 69 73 69 74 6f 72 26  2c 20 56 6f 69 64 50 74   |Visitor&, VoidPt|
0x7812:     72 43 56 2c 20 62 6f 6f  73 74 3a 3a 64 65 74 61   |rCV, boost::deta|
0x7822:     69 6c 3a 3a 76 61 72 69  61 6e 74 3a 3a 61 70 70   |il::variant::app|
0x7832:     6c 79 5f 76 69 73 69 74  6f 72 5f 75 6e 72 6f 6c   |ly_visitor_unrol|
0x7842:     6c 65 64 2a 2c 20 4e 42  46 2c 20 6c 6f 6e 67 20   |led*, NBF, long |
0x7852:     69 6e 74 29 20 5b 77 69  74 68 20 56 69 73 69 74   |int) [with Visit|
0x7862:     6f 72 20 3d 20 62 6f 6f  73 74 3a 3a 64 65 74 61   |or = boost::deta|
0x7872:     69 6c 3a 3a 76 61 72 69  61 6e 74 3a 3a 63 6f 70   |il::variant::cop|
0x7882:     79 5f 69 6e 74 6f 2c 20  56 6f 69 64 50 74 72 43   |y_into, VoidPtrC|
0x7892:     56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x78a2:     20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x78b2:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x78c2:     72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x78d2:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x78e2:     64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x78f2:     76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x7902:     3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x7912:     79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x7922:     69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x7932:     79 70 65 20 3d 20 76 6f  69 64 5d 00 00 00 00 00   |ype = void].....|
0x7942:     00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x7950:     76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0x7960:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7970:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7980:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7990:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x79a0:     63 61 74 6f 72 3e 3a 3a  75 6e 63 68 65 63 6b 65   |cator>::unchecke|
0x79b0:     64 5f 70 75 73 68 5f 62  61 63 6b 28 62 6f 6f 73   |d_push_back(boos|
0x79c0:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x79d0:     61 69 6c 3a 3a 61 75 74  6f 5f 62 75 66 66 65 72   |ail::auto_buffer|
0x79e0:     3c 54 2c 20 53 74 61 63  6b 42 75 66 66 65 72 50   |<T, StackBufferP|
0x79f0:     6f 6c 69 63 79 2c 20 47  72 6f 77 50 6f 6c 69 63   |olicy, GrowPolic|
0x7a00:     79 2c 20 41 6c 6c 6f 63  61 74 6f 72 3e 3a 3a 6f   |y, Allocator>::o|
0x7a10:     70 74 69 6d 69 7a 65 64  5f 63 6f 6e 73 74 5f 72   |ptimized_const_r|
0x7a20:     65 66 65 72 65 6e 63 65  29 20 5b 77 69 74 68 20   |eference) [with |
0x7a30:     54 20 3d 20 62 6f 6f 73  74 3a 3a 76 61 72 69 61   |T = boost::varia|
0x7a40:     6e 74 3c 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |nt<boost::shared|
0x7a50:     5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x7a60:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x7a70:     61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x7a80:     64 5f 73 68 61 72 65 64  5f 70 74 72 3e 2c 20 53   |d_shared_ptr>, S|
0x7a90:     74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x7aa0:     20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x7ab0:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 74 6f 72   |s2::detail::stor|
0x7ac0:     65 5f 6e 5f 6f 62 6a 65  63 74 73 3c 31 30 75 3e   |e_n_objects<10u>|
0x7ad0:     2c 20 47 72 6f 77 50 6f  6c 69 63 79 20 3d 20 62   |, GrowPolicy = b|
0x7ae0:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x7af0:     64 65 74 61 69 6c 3a 3a  64 65 66 61 75 6c 74 5f   |detail::default_|
0x7b00:     67 72 6f 77 5f 70 6f 6c  69 63 79 2c 20 41 6c 6c   |grow_policy, All|
0x7b10:     6f 63 61 74 6f 72 20 3d  20 73 74 64 3a 3a 61 6c   |ocator = std::al|
0x7b20:     6c 6f 63 61 74 6f 72 3c  62 6f 6f 73 74 3a 3a 76   |locator<boost::v|
0x7b30:     61 72 69 61 6e 74 3c 62  6f 6f 73 74 3a 3a 73 68   |ariant<boost::sh|
0x7b40:     61 72 65 64 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |ared_ptr<void>, |
0x7b50:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x7b60:     3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x7b70:     5f 76 6f 69 64 5f 73 68  61 72 65 64 5f 70 74 72   |_void_shared_ptr|
0x7b80:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x7b90:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x7ba0:     74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x7bb0:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x7bc0:     47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x7bd0:     63 61 74 6f 72 3e 3a 3a  6f 70 74 69 6d 69 7a 65   |cator>::optimize|
0x7be0:     64 5f 63 6f 6e 73 74 5f  72 65 66 65 72 65 6e 63   |d_const_referenc|
0x7bf0:     65 20 3d 20 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |e = const boost:|
0x7c00:     3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x7c10:     73 68 61 72 65 64 5f 70  74 72 3c 76 6f 69 64 3e   |shared_ptr<void>|
0x7c20:     2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x7c30:     32 3a 3a 64 65 74 61 69  6c 3a 3a 66 6f 72 65 69   |2::detail::forei|
0x7c40:     67 6e 5f 76 6f 69 64 5f  73 68 61 72 65 64 5f 70   |gn_void_shared_p|
0x7c50:     74 72 3e 26 5d 00                                  |tr>&].          |
0x7c56:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7c66:     00 00 00 00 00 00 00 00  00 00 76 6f 69 64 20 62   |..........void b|
0x7c76:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x7c86:     64 65 74 61 69 6c 3a 3a  61 75 74 6f 5f 62 75 66   |detail::auto_buf|
0x7c96:     66 65 72 3c 54 2c 20 53  74 61 63 6b 42 75 66 66   |fer<T, StackBuff|
0x7ca6:     65 72 50 6f 6c 69 63 79  2c 20 47 72 6f 77 50 6f   |erPolicy, GrowPo|
0x7cb6:     6c 69 63 79 2c 20 41 6c  6c 6f 63 61 74 6f 72 3e   |licy, Allocator>|
0x7cc6:     3a 3a 72 65 73 65 72 76  65 28 62 6f 6f 73 74 3a   |::reserve(boost:|
0x7cd6:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x7ce6:     6c 3a 3a 61 75 74 6f 5f  62 75 66 66 65 72 3c 54   |l::auto_buffer<T|
0x7cf6:     2c 20 53 74 61 63 6b 42  75 66 66 65 72 50 6f 6c   |, StackBufferPol|
0x7d06:     69 63 79 2c 20 47 72 6f  77 50 6f 6c 69 63 79 2c   |icy, GrowPolicy,|
0x7d16:     20 41 6c 6c 6f 63 61 74  6f 72 3e 3a 3a 73 69 7a   | Allocator>::siz|
0x7d26:     65 5f 74 79 70 65 29 20  5b 77 69 74 68 20 54 20   |e_type) [with T |
0x7d36:     3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x7d46:     3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x7d56:     74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x7d66:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x7d76:     6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x7d86:     73 68 61 72 65 64 5f 70  74 72 3e 2c 20 53 74 61   |shared_ptr>, Sta|
0x7d96:     63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 20 3d   |ckBufferPolicy =|
0x7da6:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x7db6:     3a 3a 64 65 74 61 69 6c  3a 3a 73 74 6f 72 65 5f   |::detail::store_|
0x7dc6:     6e 5f 6f 62 6a 65 63 74  73 3c 31 30 75 3e 2c 20   |n_objects<10u>, |
0x7dd6:     47 72 6f 77 50 6f 6c 69  63 79 20 3d 20 62 6f 6f   |GrowPolicy = boo|
0x7de6:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x7df6:     74 61 69 6c 3a 3a 64 65  66 61 75 6c 74 5f 67 72   |tail::default_gr|
0x7e06:     6f 77 5f 70 6f 6c 69 63  79 2c 20 41 6c 6c 6f 63   |ow_policy, Alloc|
0x7e16:     61 74 6f 72 20 3d 20 73  74 64 3a 3a 61 6c 6c 6f   |ator = std::allo|
0x7e26:     63 61 74 6f 72 3c 62 6f  6f 73 74 3a 3a 76 61 72   |cator<boost::var|
0x7e36:     69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x7e46:     65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x7e56:     6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x7e66:     65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x7e76:     6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 20   |oid_shared_ptr> |
0x7e86:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x7e96:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 61 75 74 6f   |s2::detail::auto|
0x7ea6:     5f 62 75 66 66 65 72 3c  54 2c 20 53 74 61 63 6b   |_buffer<T, Stack|
0x7eb6:     42 75 66 66 65 72 50 6f  6c 69 63 79 2c 20 47 72   |BufferPolicy, Gr|
0x7ec6:     6f 77 50 6f 6c 69 63 79  2c 20 41 6c 6c 6f 63 61   |owPolicy, Alloca|
0x7ed6:     74 6f 72 3e 3a 3a 73 69  7a 65 5f 74 79 70 65 20   |tor>::size_type |
0x7ee6:     3d 20 75 6e 73 69 67 6e  65 64 20 69 6e 74 5d 00   |= unsigned int].|
0x7ef6:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7f06:     00 00 00 00 00 00 00 00  00 00 76 6f 69 64 20 62   |..........void b|
0x7f16:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x7f26:     64 65 74 61 69 6c 3a 3a  61 75 74 6f 5f 62 75 66   |detail::auto_buf|
0x7f36:     66 65 72 3c 54 2c 20 53  74 61 63 6b 42 75 66 66   |fer<T, StackBuff|
0x7f46:     65 72 50 6f 6c 69 63 79  2c 20 47 72 6f 77 50 6f   |erPolicy, GrowPo|
0x7f56:     6c 69 63 79 2c 20 41 6c  6c 6f 63 61 74 6f 72 3e   |licy, Allocator>|
0x7f66:     3a 3a 72 65 73 65 72 76  65 5f 69 6d 70 6c 28 62   |::reserve_impl(b|
0x7f76:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x7f86:     64 65 74 61 69 6c 3a 3a  61 75 74 6f 5f 62 75 66   |detail::auto_buf|
0x7f96:     66 65 72 3c 54 2c 20 53  74 61 63 6b 42 75 66 66   |fer<T, StackBuff|
0x7fa6:     65 72 50 6f 6c 69 63 79  2c 20 47 72 6f 77 50 6f   |erPolicy, GrowPo|
0x7fb6:     6c 69 63 79 2c 20 41 6c  6c 6f 63 61 74 6f 72 3e   |licy, Allocator>|
0x7fc6:     3a 3a 73 69 7a 65 5f 74  79 70 65 29 20 5b 77 69   |::size_type) [wi|
0x7fd6:     74 68 20 54 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   |th T = boost::va|
0x7fe6:     72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x7ff6:     72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x8006:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x8016:     64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x8026:     76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x8036:     2c 20 53 74 61 63 6b 42  75 66 66 65 72 50 6f 6c   |, StackBufferPol|
0x8046:     69 63 79 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |icy = boost::sig|
0x8056:     6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x8066:     74 6f 72 65 5f 6e 5f 6f  62 6a 65 63 74 73 3c 31   |tore_n_objects<1|
0x8076:     30 75 3e 2c 20 47 72 6f  77 50 6f 6c 69 63 79 20   |0u>, GrowPolicy |
0x8086:     3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x8096:     32 3a 3a 64 65 74 61 69  6c 3a 3a 64 65 66 61 75   |2::detail::defau|
0x80a6:     6c 74 5f 67 72 6f 77 5f  70 6f 6c 69 63 79 2c 20   |lt_grow_policy, |
0x80b6:     41 6c 6c 6f 63 61 74 6f  72 20 3d 20 73 74 64 3a   |Allocator = std:|
0x80c6:     3a 61 6c 6c 6f 63 61 74  6f 72 3c 62 6f 6f 73 74   |:allocator<boost|
0x80d6:     3a 3a 76 61 72 69 61 6e  74 3c 62 6f 6f 73 74 3a   |::variant<boost:|
0x80e6:     3a 73 68 61 72 65 64 5f  70 74 72 3c 76 6f 69 64   |:shared_ptr<void|
0x80f6:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x8106:     73 32 3a 3a 64 65 74 61  69 6c 3a 3a 66 6f 72 65   |s2::detail::fore|
0x8116:     69 67 6e 5f 76 6f 69 64  5f 73 68 61 72 65 64 5f   |ign_void_shared_|
0x8126:     70 74 72 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |ptr> >, boost::s|
0x8136:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x8146:     3a 61 75 74 6f 5f 62 75  66 66 65 72 3c 54 2c 20   |:auto_buffer<T, |
0x8156:     53 74 61 63 6b 42 75 66  66 65 72 50 6f 6c 69 63   |StackBufferPolic|
0x8166:     79 2c 20 47 72 6f 77 50  6f 6c 69 63 79 2c 20 41   |y, GrowPolicy, A|
0x8176:     6c 6c 6f 63 61 74 6f 72  3e 3a 3a 73 69 7a 65 5f   |llocator>::size_|
0x8186:     74 79 70 65 20 3d 20 75  6e 73 69 67 6e 65 64 20   |type = unsigned |
0x8196:     69 6e 74 5d 00 00 00 00  00 00 00 00 00 00 00 00   |int]............|
0x81a6:     00 00 00 00 00 00 00 00  00 00                     |..........      |
0x81b0:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x81c0:     3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x81d0:     66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x81e0:     66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x81f0:     6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x8200:     3e 3a 3a 7e 61 75 74 6f  5f 62 75 66 66 65 72 28   |>::~auto_buffer(|
0x8210:     29 20 5b 77 69 74 68 20  54 20 3d 20 62 6f 6f 73   |) [with T = boos|
0x8220:     74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x8230:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x8240:     64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x8250:     6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x8260:     65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x8270:     5f 70 74 72 3e 2c 20 53  74 61 63 6b 42 75 66 66   |_ptr>, StackBuff|
0x8280:     65 72 50 6f 6c 69 63 79  20 3d 20 62 6f 6f 73 74   |erPolicy = boost|
0x8290:     3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x82a0:     69 6c 3a 3a 73 74 6f 72  65 5f 6e 5f 6f 62 6a 65   |il::store_n_obje|
0x82b0:     63 74 73 3c 31 30 75 3e  2c 20 47 72 6f 77 50 6f   |cts<10u>, GrowPo|
0x82c0:     6c 69 63 79 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |licy = boost::si|
0x82d0:     67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x82e0:     64 65 66 61 75 6c 74 5f  67 72 6f 77 5f 70 6f 6c   |default_grow_pol|
0x82f0:     69 63 79 2c 20 41 6c 6c  6f 63 61 74 6f 72 20 3d   |icy, Allocator =|
0x8300:     20 73 74 64 3a 3a 61 6c  6c 6f 63 61 74 6f 72 3c   | std::allocator<|
0x8310:     62 6f 6f 73 74 3a 3a 76  61 72 69 61 6e 74 3c 62   |boost::variant<b|
0x8320:     6f 6f 73 74 3a 3a 73 68  61 72 65 64 5f 70 74 72   |oost::shared_ptr|
0x8330:     3c 76 6f 69 64 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |<void>, boost::s|
0x8340:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x8350:     3a 66 6f 72 65 69 67 6e  5f 76 6f 69 64 5f 73 68   |:foreign_void_sh|
0x8360:     61 72 65 64 5f 70 74 72  3e 20 3e 5d 00            |ared_ptr> >].   |
0x836d:     00 00 00                                           |...             |
0x8370:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >]"
0x8380:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x8390:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x83a0:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x83b0:     54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x83c0:     69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x83d0:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x83e0:     6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x83f0:     47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x8400:     61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x8410:     29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x8420:     69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x8430:     65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x8440:     74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x8450:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x8460:     72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x8470:     32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x8480:     63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x8490:     70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x84a0:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x84b0:     6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x84c0:     6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x84d0:     6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x84e0:     67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 76 6f   |gnals2::slot2<vo|
0x84f0:     69 64 2c 20 63 6f 6e 73  74 20 75 69 6e 74 32 35   |id, const uint25|
0x8500:     36 26 2c 20 43 68 61 6e  67 65 54 79 70 65 2c 20   |6&, ChangeType, |
0x8510:     62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x8520:     76 6f 69 64 28 63 6f 6e  73 74 20 75 69 6e 74 32   |void(const uint2|
0x8530:     35 36 26 2c 20 43 68 61  6e 67 65 54 79 70 65 29   |56&, ChangeType)|
0x8540:     3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x8550:     61 6c 73 32 3a 3a 6d 75  74 65 78 3e 20 3e 2c 20   |als2::mutex> >, |
0x8560:     62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x8570:     3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x8580:     5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x8590:     75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x85a0:     54 79 70 65 3e 20 3d 20  62 6f 6f 73 74 3a 3a 73   |Type> = boost::s|
0x85b0:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x85c0:     3a 67 72 6f 75 70 65 64  5f 6c 69 73 74 3c 69 6e   |:grouped_list<in|
0x85d0:     74 2c 20 73 74 64 3a 3a  6c 65 73 73 3c 69 6e 74   |t, std::less<int|
0x85e0:     3e 2c 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |>, boost::shared|
0x85f0:     5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x8600:     61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x8610:     6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x8620:     64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x8630:     69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x8640:     3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x8650:     2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x8660:     6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x8670:     3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 32   |:signals2::slot2|
0x8680:     3c 76 6f 69 64 2c 20 63  6f 6e 73 74 20 75 69 6e   |<void, const uin|
0x8690:     74 32 35 36 26 2c 20 43  68 61 6e 67 65 54 79 70   |t256&, ChangeTyp|
0x86a0:     65 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |e, boost::functi|
0x86b0:     6f 6e 3c 76 6f 69 64 28  63 6f 6e 73 74 20 75 69   |on<void(const ui|
0x86c0:     6e 74 32 35 36 26 2c 20  43 68 61 6e 67 65 54 79   |nt256&, ChangeTy|
0x86d0:     70 65 29 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |pe)> >, boost::s|
0x86e0:     69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 3e 20   |ignals2::mutex> |
0x86f0:     3e 20 3e 5d 00                                     |> >].           |
0x86f5:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8705:     00 00 00 00 00 00 00 00  00 00 00 76 6f 69 64 20   |...........void |
0x8715:     62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x8725:     72 3c 54 3e 3a 3a 72 65  73 65 74 28 59 2a 29 20   |r<T>::reset(Y*) |
0x8735:     5b 77 69 74 68 20 59 20  3d 20 62 6f 6f 73 74 3a   |[with Y = boost:|
0x8745:     3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x8755:     6c 3a 3a 73 69 67 6e 61  6c 32 5f 69 6d 70 6c 3c   |l::signal2_impl<|
0x8765:     76 6f 69 64 2c 20 63 6f  6e 73 74 20 75 69 6e 74   |void, const uint|
0x8775:     32 35 36 26 2c 20 43 68  61 6e 67 65 54 79 70 65   |256&, ChangeType|
0x8785:     2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x8795:     32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x87a5:     5f 76 61 6c 75 65 3c 76  6f 69 64 3e 2c 20 69 6e   |_value<void>, in|
0x87b5:     74 2c 20 73 74 64 3a 3a  6c 65 73 73 3c 69 6e 74   |t, std::less<int|
0x87c5:     3e 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |>, boost::functi|
0x87d5:     6f 6e 3c 76 6f 69 64 28  63 6f 6e 73 74 20 75 69   |on<void(const ui|
0x87e5:     6e 74 32 35 36 26 2c 20  43 68 61 6e 67 65 54 79   |nt256&, ChangeTy|
0x87f5:     70 65 29 3e 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |pe)>, boost::fun|
0x8805:     63 74 69 6f 6e 3c 76 6f  69 64 28 63 6f 6e 73 74   |ction<void(const|
0x8815:     20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x8825:     3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 26 2c 20 63   |::connection&, c|
0x8835:     6f 6e 73 74 20 75 69 6e  74 32 35 36 26 2c 20 43   |onst uint256&, C|
0x8845:     68 61 6e 67 65 54 79 70  65 29 3e 2c 20 62 6f 6f   |hangeType)>, boo|
0x8855:     73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x8865:     74 65 78 3e 3a 3a 69 6e  76 6f 63 61 74 69 6f 6e   |tex>::invocation|
0x8875:     5f 73 74 61 74 65 2c 20  54 20 3d 20 62 6f 6f 73   |_state, T = boos|
0x8885:     74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x8895:     61 69 6c 3a 3a 73 69 67  6e 61 6c 32 5f 69 6d 70   |ail::signal2_imp|
0x88a5:     6c 3c 76 6f 69 64 2c 20  63 6f 6e 73 74 20 75 69   |l<void, const ui|
0x88b5:     6e 74 32 35 36 26 2c 20  43 68 61 6e 67 65 54 79   |nt256&, ChangeTy|
0x88c5:     70 65 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |pe, boost::signa|
0x88d5:     6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x88e5:     73 74 5f 76 61 6c 75 65  3c 76 6f 69 64 3e 2c 20   |st_value<void>, |
0x88f5:     69 6e 74 2c 20 73 74 64  3a 3a 6c 65 73 73 3c 69   |int, std::less<i|
0x8905:     6e 74 3e 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |nt>, boost::func|
0x8915:     74 69 6f 6e 3c 76 6f 69  64 28 63 6f 6e 73 74 20   |tion<void(const |
0x8925:     75 69 6e 74 32 35 36 26  2c 20 43 68 61 6e 67 65   |uint256&, Change|
0x8935:     54 79 70 65 29 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |Type)>, boost::f|
0x8945:     75 6e 63 74 69 6f 6e 3c  76 6f 69 64 28 63 6f 6e   |unction<void(con|
0x8955:     73 74 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |st boost::signal|
0x8965:     73 32 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 26 2c   |s2::connection&,|
0x8975:     20 63 6f 6e 73 74 20 75  69 6e 74 32 35 36 26 2c   | const uint256&,|
0x8985:     20 43 68 61 6e 67 65 54  79 70 65 29 3e 2c 20 62   | ChangeType)>, b|
0x8995:     6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x89a5:     6d 75 74 65 78 3e 3a 3a  69 6e 76 6f 63 61 74 69   |mutex>::invocati|
0x89b5:     6f 6e 5f 73 74 61 74 65  5d 00 00 00 00 00 00 00   |on_state].......|
0x89c5:     00 00 00 00 00 00 00 00  00 00 00 62 6f 6f 73 74   |...........boost|
0x89d5:     3a 3a 63 6f 6e 64 69 74  69 6f 6e 5f 76 61 72 69   |::condition_vari|
0x89e5:     61 62 6c 65 3a 3a 63 6f  6e 64 69 74 69 6f 6e 5f   |able::condition_|
0x89f5:     76 61 72 69 61 62 6c 65  28 29 00 00 00 00 00 00   |variable()......|
0x8a05:     00 00 00 00 00 00 00 00  00 00 00 62 6f 6f 73 74   |...........boost|
0x8a15:     3a 3a 63 6f 6e 64 69 74  69 6f 6e 5f 76 61 72 69   |::condition_vari|
0x8a25:     61 62 6c 65 3a 3a 7e 63  6f 6e 64 69 74 69 6f 6e   |able::~condition|
0x8a35:     5f 76 61 72 69 61 62 6c  65 28 29 00 62 6f 6f 73   |_variable().boos|
0x8a45:     74 3a 3a 6d 75 74 65 78  3a 3a 7e 6d 75 74 65 78   |t::mutex::~mutex|
0x8a55:     28 29 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |()..............|
0x8a65:     00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x8a70:     62 6f 6f 73 74 3a 3a 72  65 63 75 72 73 69 76 65   |boost::recursive|   "boost::recursive_mutex::~recursive_mutex()"
0x8a80:     5f 6d 75 74 65 78 3a 3a  7e 72 65 63 75 72 73 69   |_mutex::~recursi|
0x8a90:     76 65 5f 6d 75 74 65 78  28 29 00                  |ve_mutex().     |
0x8a9b:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8aab:     00 00 00 00 00 62 6f 6f  73 74 3a 3a 72 65 63 75   |.....boost::recu|
0x8abb:     72 73 69 76 65 5f 6d 75  74 65 78 3a 3a 72 65 63   |rsive_mutex::rec|
0x8acb:     75 72 73 69 76 65 5f 6d  75 74 65 78 28 29 00 00   |ursive_mutex()..|
0x8adb:     00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8aeb:     00 00 00 00 00                                     |.....           |
0x8af0:     62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x8b00:     5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x8b10:     70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x8b20:     74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x8b30:     69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x8b40:     34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x8b50:     74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x8b60:     3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x8b70:     73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x8b80:     69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x8b90:     65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x8b99:     ??                                                 |?               |
; section: .rodata._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
0x9a70:     e0 99 00 00 a8 99 00 00  a0 99 00 00 a0 99 00 00   |................|
0x9a80:     a0 99 00 00 a0 99 00 00  a0 99 00 00 a0 99 00 00   |................|
0x9a90:     a0 99 00 00 a0 99 00 00  a0 99 00 00 a0 99 00 00   |................|
0x9aa0:     a0 99 00 00 a0 99 00 00  a0 99 00 00 a0 99 00 00   |................|
0x9ab0:     a0 99 00 00 a0 99 00 00  a0 99 00 00 a0 99 00 00   |................|
0x9ac0:     83                                                 |.               |
; section: .rodata._ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEj
0x100a8:    44 fb 00 00 4f fd 00 00  10 fc 00 00 10 fc 00 00   |D...O...........|
0x100b8:    10 fc 00 00 10 fc 00 00  10 fc 00 00 10 fc 00 00   |................|
0x100c8:    10 fc 00 00 10 fc 00 00  10 fc 00 00 10 fc 00 00   |................|
0x100d8:    10 fc 00 00 10 fc 00 00  10 fc 00 00 10 fc 00 00   |................|
0x100e8:    10 fc 00 00 10 fc 00 00  10 fc 00 00 10 fc 00 00   |................|
0x100f8:    ??                                                 |?               |
; section: .rodata._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
0x11040:    b8 0f 01 00 50 0f 01 00  b0 0f 01 00 b0 0f 01 00   |....P...........|
0x11050:    b0 0f 01 00 b0 0f 01 00  b0 0f 01 00 b0 0f 01 00   |................|
0x11060:    b0 0f 01 00 b0 0f 01 00  b0 0f 01 00 b0 0f 01 00   |................|
0x11070:    b0 0f 01 00 b0 0f 01 00  b0 0f 01 00 b0 0f 01 00   |................|
0x11080:    b0 0f 01 00 b0 0f 01 00  b0 0f 01 00 b0 0f 01 00   |................|
0x11090:    81                                                 |.               |
; section: .rodata._ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_
0x11c9c:    78 11 01 00 20 12 01 00  78 12 01 00 88 12 01 00   |x... ...x.......|
0x11cac:    98 12 01 00 a8 12 01 00  b8 12 01 00 c8 12 01 00   |................|
0x11cbc:    d8 12 01 00 e8 12 01 00  f8 12 01 00 08 13 01 00   |................|
0x11ccc:    18 13 01 00 28 13 01 00  38 13 01 00 48 13 01 00   |....(...8...H...|
0x11cdc:    58 13 01 00 68 13 01 00  78 13 01 00 68 11 01 00   |X...h...x...h...|
0x11cec:    78 14 01 00 ea 13 01 00  e5 13 01 00 df 13 01 00   |x...............|
0x11cfc:    da 13 01 00 d5 13 01 00  cf 13 01 00 ca 13 01 00   |................|
0x11d0c:    c5 13 01 00 bf 13 01 00  ba 13 01 00 b5 13 01 00   |................|
0x11d1c:    af 13 01 00 aa 13 01 00  a5 13 01 00 9e 13 01 00   |................|
0x11d2c:    99 13 01 00 94 13 01 00  8f 13 01 00 96 14 01 00   |................|
0x11d3c:    61 16 01 00 ea 15 01 00  e5 15 01 00 df 15 01 00   |a...............|
0x11d4c:    da 15 01 00 d5 15 01 00  cf 15 01 00 ca 15 01 00   |................|
0x11d5c:    c5 15 01 00 bf 15 01 00  ba 15 01 00 b5 15 01 00   |................|
0x11d6c:    af 15 01 00 aa 15 01 00  a5 15 01 00 9e 15 01 00   |................|
0x11d7c:    99 15 01 00 94 15 01 00  8f 15 01 00 85 16 01 00   |................|
0x11d8c:    3e 18 01 00 15 18 01 00  0f 18 01 00 0a 18 01 00   |>...............|
0x11d9c:    05 18 01 00 ff 17 01 00  fa 17 01 00 f5 17 01 00   |................|
0x11dac:    ef 17 01 00 ea 17 01 00  e5 17 01 00 df 17 01 00   |................|
0x11dbc:    da 17 01 00 d5 17 01 00  cf 17 01 00 ca 17 01 00   |................|
0x11dcc:    c5 17 01 00 b9 17 01 00  b4 17 01 00 6b 18 01 00   |............k...|
0x11ddc:    44 19 01 00 0a 19 01 00  05 19 01 00 ff 18 01 00   |D...............|
0x11dec:    fa 18 01 00 f5 18 01 00  ef 18 01 00 ea 18 01 00   |................|
0x11dfc:    e5 18 01 00 df 18 01 00  da 18 01 00 d5 18 01 00   |................|
0x11e0c:    cf 18 01 00 ca 18 01 00  c5 18 01 00 bf 18 01 00   |................|
0x11e1c:    ba 18 01 00 b5 18 01 00  ab 18 01 00 68 19 01 00   |............h...|
0x11e2c:    5b 1c 01 00 3a 1c 01 00  35 1c 01 00 2f 1c 01 00   |[...:...5.../...|
0x11e3c:    2a 1c 01 00 25 1c 01 00  1f 1c 01 00 1a 1c 01 00   |*...%...........|
0x11e4c:    15 1c 01 00 0f 1c 01 00  0a 1c 01 00 05 1c 01 00   |................|
0x11e5c:    ff 1b 01 00 fa 1b 01 00  f5 1b 01 00 ed 1b 01 00   |................|
0x11e6c:    e8 1b 01 00 e3 1b 01 00  de 1b 01 00 86 1c 01 00   |................|
0x11e7c:    ??                                                 |?               |
; section: .rodata._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS0_10connectionES6_S7_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS6_S7_SE_EESK_EEEEESX_E18lock_next_callableEv
0x120e0:    08 20 01 00 58 20 01 00  00 20 01 00 00 20 01 00   |. ..X ... ... ..|
0x120f0:    00 20 01 00 00 20 01 00  00 20 01 00 00 20 01 00   |. ... ... ... ..|
0x12100:    00 20 01 00 00 20 01 00  00 20 01 00 00 20 01 00   |. ... ... ... ..|
0x12110:    00 20 01 00 00 20 01 00  00 20 01 00 00 20 01 00   |. ... ... ... ..|
0x12120:    00 20 01 00 00 20 01 00  00 20 01 00 00 20 01 00   |. ... ... ... ..|
0x12130:    55                                                 |U               |
; section: .ctors
0x14674:    50 45 01 00 ??                                     |PE..?           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x14690:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x146a0:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x146b0:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x146b0:    08 00 00 00 90 46 01 00  90 4b 01 00 4e            |.....F...K..N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x146bc:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x146cc:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x146dc:    08 00 00 00 bc 46 01 00  00 00 00 00 ??            |.....F......?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x146f0:    00 00 00 00 b0 46 01 00  c0 22 00 00 b0 27 00 00   |.....F..."...'..|
0x14700:    00 00 00 00 00 00 00 00  f0 22 00 00 30 23 00 00   |........."..0#..|
0x14710:    a0 23 00 00 ??                                     |.#..?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x14718:    00 00 00 00 dc 46 01 00  90 28 00 00 c0 3c 00 00   |.....F...(...<..|
0x14728:    30 3f 00 00 00                                     |0?...           |
; section: .rodata._ZTVN5boost16thread_exceptionE
0x14730:    00 00 00 00 98 4b 01 00  e0 28 00 00 20 3c 00 00   |.....K...(.. <..|
0x14740:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost10lock_errorE
0x14748:    00 00 00 00 a4 4b 01 00  e0 3b 00 00 50 3b 00 00   |.....K...;..P;..|
0x14758:    a0 21 00 00 ??                                     |.!..?           |
; section: .rodata._ZTVN5boost9exceptionE
0x14760:    00 00 00 00 b0 4b 01 00  00 00 00 00 00 00 00 00   |.....K..........|
0x14770:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x14770:    00 00 00 00 d0 4b 01 00  10 43 00 00 40 49 00 00   |.....K...C..@I..|
0x14780:    a0 21 00 00 f8 ff ff ff  d0 4b 01 00 00 43 00 00   |.!.......K...C..|
0x14790:    30 49 00 00 ??                                     |0I..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x14798:    00 00 00 00 f0 4b 01 00  00 00 00 00 00 00 00 00   |.....K..........|
0x147a8:    00 22 00 00 70 27 00 00  00                        |."..p'...       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x147b0:    00 00 00 00 10 48 01 00  d0 48 00 00 50 48 00 00   |.....H...H..PH..|
0x147c0:    a0 21 00 00 c0 3d 00 00  40 94 00 00 f8 ff ff ff   |.!...=..@.......|
0x147d0:    10 48 01 00 c0 48 00 00  40 48 00 00 e4 ff ff ff   |.H...H..@H......|
0x147e0:    10 48 01 00 b0 3d 00 00  30 94 00 00 b0 48 00 00   |.H...=..0....H..|
0x147f0:    30 48 00 00 ??                                     |0H..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x14810:    08 00 00 00 10 4c 01 00  00 00 00 00 02 00 00 00   |.....L..........|
0x14820:    d0 4b 01 00 02 00 00 00  f0 4b 01 00 02 1c 00 00   |.K.......K......|
0x14830:    08                                                 |.               |
; section: .rodata._ZTIN5boost8signals212expired_slotE
0x14830:    08 00 00 00 70 4c 01 00  90 4c 01 00 ??            |....pL...L..?   |
; section: .rodata._ZTVN5boost17bad_function_callE
0x14840:    00 00 00 00 9c 4c 01 00  50 28 00 00 b0 3a 00 00   |.....L..P(...:..|
0x14850:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x14870:    00 00 00 00 b0 4c 01 00  80 43 00 00 e0 45 00 00   |.....L...C...E..|
0x14880:    00 00 00 00 f8 ff ff ff  b0 4c 01 00 70 43 00 00   |.........L..pC..|
0x14890:    d0 45 00 00 ??                                     |.E..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x148b0:    00 00 00 00 10 49 01 00  70 45 00 00 60 46 00 00   |.....I..pE..`F..|
0x148c0:    00 00 00 00 60 40 00 00  30 a0 00 00 f8 ff ff ff   |....`@..0.......|
0x148d0:    10 49 01 00 60 45 00 00  50 46 00 00 e4 ff ff ff   |.I..`E..PF......|
0x148e0:    10 49 01 00 50 40 00 00  20 a0 00 00 50 45 00 00   |.I..P@.. ...PE..|
0x148f0:    40 46 00 00 ??                                     |@F..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x14910:    08 00 00 00 d0 4c 01 00  00 00 00 00 02 00 00 00   |.....L..........|
0x14920:    b0 4c 01 00 02 00 00 00  f0 4b 01 00 02 1c 00 00   |.L.......K......|
0x14930:    00                                                 |.               |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x14930:    00 00 00 00 2c 4d 01 00  30 22 00 00 30 27 00 00   |....,M..0"..0'..|
0x14940:    00 00 00 00 60 22 00 00  00 00 00 00 ??            |....`"......?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEEE
0x14950:    00 00 00 00 34 4d 01 00  20 24 00 00 b0 26 00 00   |....4M.. $...&..|
0x14960:    f0 f2 00 00 60 22 00 00  e0 24 00 00 ??            |....`"...$..?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE
0x14970:    00 00 00 00 40 4d 01 00  f0 23 00 00 f0 26 00 00   |....@M...#...&..|
0x14980:    b0 4a 00 00 60 22 00 00  b0 24 00 00 ??            |.J..`"...$..?   |
; section: .rodata._ZTVN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEEE
0x14990:    00 00 00 00 4c 4d 01 00  40 32 00 00 00 3b 00 00   |....LM..@2...;..|
0x149a0:    c0 31 00 00 ??                                     |.1..?           |
; section: .rodata._ZTVN5boost21thread_resource_errorE
0x149a8:    00 00 00 00 58 4d 01 00  a0 3b 00 00 70 3c 00 00   |....XM...;..p<..|
0x149b8:    d0 21 00 00 ??                                     |.!..?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x149d0:    00 00 00 00 70 4d 01 00  a0 42 00 00 d0 47 00 00   |....pM...B...G..|
0x149e0:    d0 21 00 00 f8 ff ff ff  70 4d 01 00 90 42 00 00   |.!......pM...B..|
0x149f0:    c0 47 00 00 ??                                     |.G..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x14a10:    00 00 00 00 70 4a 01 00  60 47 00 00 e0 46 00 00   |....pJ..`G...F..|
0x14a20:    d0 21 00 00 80 3e 00 00  50 91 00 00 f8 ff ff ff   |.!...>..P.......|
0x14a30:    70 4a 01 00 50 47 00 00  d0 46 00 00 e4 ff ff ff   |pJ..PG...F......|
0x14a40:    70 4a 01 00 70 3e 00 00  40 91 00 00 40 47 00 00   |pJ..p>..@...@G..|
0x14a50:    c0 46 00 00 ??                                     |.F..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x14a70:    08 00 00 00 90 4d 01 00  00 00 00 00 02 00 00 00   |.....M..........|
0x14a80:    70 4d 01 00 02 00 00 00  f0 4b 01 00 02 1c 00 00   |pM.......K......|
0x14a90:    00                                                 |.               |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEEE
0x14a90:    00 00 00 00 f0 4d 01 00  50 24 00 00 70 26 00 00   |.....M..P$..p&..|
0x14aa0:    10 25 00 00 60 22 00 00  70 25 00 00 ??            |.%..`"..p%..?   |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x14ab0:    00 00 00 00 10 4e 01 00  40 42 00 00 70 44 00 00   |.....N..@B..pD..|
0x14ac0:    ec ff ff ff 10 4e 01 00  30 42 00 00 60 44 00 00   |.....N..0B..`D..|
0x14ad0:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x14af0:    00 00 00 00 70 4b 01 00  00 44 00 00 f0 44 00 00   |....pK...D...D..|
0x14b00:    20 3d 00 00 30 29 00 00  ec ff ff ff 70 4b 01 00   | =..0)......pK..|
0x14b10:    f0 43 00 00 e0 44 00 00  00 00 00 00 e8 ff ff ff   |.C...D..........|
0x14b20:    70 4b 01 00 10 3d 00 00  20 29 00 00 e0 43 00 00   |pK...=.. )...C..|
0x14b30:    d0 44 00 00 ??                                     |.D..?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x14b38:    00 00 00 00 30 4e 01 00  80 24 00 00 30 26 00 00   |....0N...$..0&..|
0x14b48:    a0 25 00 00 60 22 00 00  00 26 00 00 ??            |.%..`"...&..?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x14b70:    08 00 00 00 50 4e 01 00  00 00 00 00 02 00 00 00   |....PN..........|
0x14b80:    10 4e 01 00 02 00 00 00  f0 4b 01 00 02 18 00 00   |.N.......K......|
0x14b90:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x14b90:    08 00 00 00 90 4e 01 00  08                        |.....N...       |
; section: .rodata._ZTIN5boost16thread_exceptionE
0x14b98:    08 00 00 00 b4 4e 01 00  00 00 00 00 08            |.....N.......   |
; section: .rodata._ZTIN5boost10lock_errorE
0x14ba4:    08 00 00 00 cf 4e 01 00  98 4b 01 00 08            |.....N...K...   |
; section: .rodata._ZTIN5boost9exceptionE
0x14bb0:    08 00 00 00 e4 4e 01 00  ??                        |.....N..?       |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x14bd0:    08 00 00 00 10 4f 01 00  00 00 00 00 02 00 00 00   |.....O..........|
0x14be0:    a4 4b 01 00 02 00 00 00  b0 4b 01 00 02 08 00 00   |.K.......K......|
0x14bf0:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x14bf0:    08 00 00 00 70 4f 01 00  ??                        |....pO..?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x14c10:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14c20:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x14c30:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x14c40:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x14c50:    4e 53 5f 31 30 6c 6f 63  6b 5f 65 72 72 6f 72 45   |NS_10lock_errorE|
0x14c60:    45 45 45 45 00 ??                                  |EEEE.?          |
; section: .rodata._ZTSN5boost8signals212expired_slotE
0x14c70:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x14c80:    31 32 65 78 70 69 72 65  64 5f 73 6c 6f 74 45 00   |12expired_slotE.|
0x14c90:    08                                                 |.               |
; section: .rodata._ZTIN5boost12bad_weak_ptrE
0x14c90:    08 00 00 00 97 4f 01 00  00 00 00 00 08            |.....O.......   |
; section: .rodata._ZTIN5boost17bad_function_callE
0x14c9c:    08 00 00 00 ae 4f 01 00  00 00 00 00 ??            |.....O......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x14cb0:    08 00 00 00 d0 4f 01 00  00 00 00 00 02 00 00 00   |.....O..........|
0x14cc0:    9c 4c 01 00 02 00 00 00  b0 4b 01 00 02 08 00 00   |.L.......K......|
0x14cd0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x14cd0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14ce0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x14cf0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x14d00:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x14d10:    4e 53 5f 31 37 62 61 64  5f 66 75 6e 63 74 69 6f   |NS_17bad_functio|
0x14d20:    6e 5f 63 61 6c 6c 45 45  45 45 45 00 08            |n_callEEEEE..   |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x14d2c:    08 00 00 00 30 50 01 00  08                        |....0P...       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEEE
0x14d34:    08 00 00 00 70 50 01 00  2c 4d 01 00 08            |....pP..,M...   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE
0x14d40:    08 00 00 00 70 51 01 00  2c 4d 01 00 08            |....pQ..,M...   |
; section: .rodata._ZTIN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEEE
0x14d4c:    08 00 00 00 50 52 01 00  00 00 00 00 08            |....PR.......   |
; section: .rodata._ZTIN5boost21thread_resource_errorE
0x14d58:    08 00 00 00 b0 52 01 00  98 4b 01 00 ??            |.....R...K..?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x14d70:    08 00 00 00 d0 52 01 00  00 00 00 00 02 00 00 00   |.....R..........|
0x14d80:    58 4d 01 00 02 00 00 00  b0 4b 01 00 02 08 00 00   |XM.......K......|
0x14d90:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x14d90:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14da0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x14db0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x14dc0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x14dd0:    4e 53 5f 32 31 74 68 72  65 61 64 5f 72 65 73 6f   |NS_21thread_reso|
0x14de0:    75 72 63 65 5f 65 72 72  6f 72 45 45 45 45 45 00   |urce_errorEEEEE.|
0x14df0:    08                                                 |.               |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEEE
0x14df0:    08 00 00 00 30 53 01 00  2c 4d 01 00 ??            |....0S..,M..?   |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x14e10:    08 00 00 00 b0 53 01 00  00 00 00 00 02 00 00 00   |.....S..........|
0x14e20:    b0 4b 01 00 02 00 00 00  00 00 00 00 02 14 00 00   |.K..............|
0x14e30:    08                                                 |.               |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x14e30:    08 00 00 00 f0 53 01 00  2c 4d 01 00 ??            |.....S..,M..?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x14e50:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14e60:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x14e70:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x14e80:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x14e90:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x14ea0:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x14eb0:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost16thread_exceptionE
0x14eb4:    4e 35 62 6f 6f 73 74 31  36 74 68 72 65 61 64 5f   |N5boost16thread_|
0x14ec4:    65 78 63 65 70 74 69 6f  6e 45 00 4e               |exceptionE.N    |
; section: .rodata._ZTSN5boost10lock_errorE
0x14ecf:    4e 35 62 6f 6f 73 74 31  30 6c 6f 63 6b 5f 65 72   |N5boost10lock_er|
0x14edf:    72 6f 72 45 00 4e                                  |rorE.N          |
; section: .rodata._ZTSN5boost9exceptionE
0x14ee4:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x14ef4:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x14f10:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14f20:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x14f30:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x14f40:    53 5f 31 30 6c 6f 63 6b  5f 65 72 72 6f 72 45 45   |S_10lock_errorEE|
0x14f50:    45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x14f70:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14f80:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x14f90:    5f 62 61 73 65 45 00 4e                            |_baseE.N        |
; section: .rodata._ZTSN5boost12bad_weak_ptrE
0x14f97:    4e 35 62 6f 6f 73 74 31  32 62 61 64 5f 77 65 61   |N5boost12bad_wea|
0x14fa7:    6b 5f 70 74 72 45 00 4e                            |k_ptrE.N        |
; section: .rodata._ZTSN5boost17bad_function_callE
0x14fae:    4e 35 62 6f 6f 73 74 31  37 62 61 64 5f 66 75 6e   |N5boost17bad_fun|
0x14fbe:    63 74 69 6f 6e 5f 63 61  6c 6c 45 00 ??            |ction_callE.?   |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x14fd0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x14fe0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x14ff0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x15000:    53 5f 31 37 62 61 64 5f  66 75 6e 63 74 69 6f 6e   |S_17bad_function|
0x15010:    5f 63 61 6c 6c 45 45 45  00 ??                     |_callEEE.?      |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x15030:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|
0x15040:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x15050:    00 ??                                              |.?              |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEEE
0x15070:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x15080:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x15090:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x150a0:    65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0x150b0:    69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0x150c0:    53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0x150d0:    53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0x150e0:    62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0x150f0:    5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0x15100:    75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0x15110:    69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 32 49 76   |iEEENS2_5slot2Iv|
0x15120:    52 4b 37 75 69 6e 74 32  35 36 31 30 43 68 61 6e   |RK7uint25610Chan|
0x15130:    67 65 54 79 70 65 4e 53  5f 38 66 75 6e 63 74 69   |geTypeNS_8functi|
0x15140:    6f 6e 49 46 76 53 48 5f  53 49 5f 45 45 45 45 45   |onIFvSH_SI_EEEEE|
0x15150:    4e 53 32 5f 35 6d 75 74  65 78 45 45 45 45 45 45   |NS2_5mutexEEEEEE|
0x15160:    45 45 45 00 ??                                     |EEE.?           |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE
0x15170:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x15180:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x15190:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x151a0:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 32 5f 69   |etail12signal2_i|
0x151b0:    6d 70 6c 49 76 52 4b 37  75 69 6e 74 32 35 36 31   |mplIvRK7uint2561|
0x151c0:    30 43 68 61 6e 67 65 54  79 70 65 4e 53 32 5f 31   |0ChangeTypeNS2_1|
0x151d0:    39 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |9optional_last_v|
0x151e0:    61 6c 75 65 49 76 45 45  69 53 74 34 6c 65 73 73   |alueIvEEiSt4less|
0x151f0:    49 69 45 4e 53 5f 38 66  75 6e 63 74 69 6f 6e 49   |IiENS_8functionI|
0x15200:    46 76 53 37 5f 53 38 5f  45 45 45 4e 53 44 5f 49   |FvS7_S8_EEENSD_I|
0x15210:    46 76 52 4b 4e 53 32 5f  31 30 63 6f 6e 6e 65 63   |FvRKNS2_10connec|
0x15220:    74 69 6f 6e 45 53 37 5f  53 38 5f 45 45 45 4e 53   |tionES7_S8_EEENS|
0x15230:    32 5f 35 6d 75 74 65 78  45 45 31 36 69 6e 76 6f   |2_5mutexEE16invo|
0x15240:    63 61 74 69 6f 6e 5f 73  74 61 74 65 45 45 45 00   |cation_stateEEE.|
0x15250:    4e                                                 |N               |
; section: .rodata._ZTSN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEEE
0x15250:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 31   |N5boost6detail11|
0x15260:    74 68 72 65 61 64 5f 64  61 74 61 49 4e 53 5f 33   |thread_dataINS_3|
0x15270:    5f 62 69 36 62 69 6e 64  5f 74 49 76 50 46 76 53   |_bi6bind_tIvPFvS|
0x15280:    73 45 4e 53 32 5f 35 6c  69 73 74 31 49 4e 53 32   |sENS2_5list1INS2|
0x15290:    5f 35 76 61 6c 75 65 49  53 73 45 45 45 45 45 45   |_5valueISsEEEEEE|
0x152a0:    45 45 00 ??                                        |EE.?            |
; section: .rodata._ZTSN5boost21thread_resource_errorE
0x152b0:    4e 35 62 6f 6f 73 74 32  31 74 68 72 65 61 64 5f   |N5boost21thread_|
0x152c0:    72 65 73 6f 75 72 63 65  5f 65 72 72 6f 72 45 00   |resource_errorE.|
0x152d0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x152d0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x152e0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x152f0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x15300:    53 5f 32 31 74 68 72 65  61 64 5f 72 65 73 6f 75   |S_21thread_resou|
0x15310:    72 63 65 5f 65 72 72 6f  72 45 45 45 00 ??         |rce_errorEEE.?  |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEEE
0x15330:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x15340:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x15350:    70 49 4e 53 30 5f 31 31  74 68 72 65 61 64 5f 64   |pINS0_11thread_d|
0x15360:    61 74 61 49 4e 53 5f 33  5f 62 69 36 62 69 6e 64   |ataINS_3_bi6bind|
0x15370:    5f 74 49 76 50 46 76 53  73 45 4e 53 33 5f 35 6c   |_tIvPFvSsENS3_5l|
0x15380:    69 73 74 31 49 4e 53 33  5f 35 76 61 6c 75 65 49   |ist1INS3_5valueI|
0x15390:    53 73 45 45 45 45 45 45  45 45 45 45 00 ??         |SsEEEEEEEEEE.?  |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x153b0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x153c0:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x153d0:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x153f0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|   "N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE"
0x15400:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x15410:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x15420:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x15430:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x15440:    6c 6f 63 5f 45 45 45 45  45 00                     |loc_EEEEE.      |
0x1544a:    ??                                                 |?               |
; section: .eh_frame
0x1f40bc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x1f40cc:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0x1f40dc:   80 21 00 00 2a 00 00 00  00 43 0e 20 61 0a 0e 04   |.!..*....C. a...|
0x1f40ec:   41 0b 00 00 18 00 00 00  38 00 00 00 94 21 00 00   |A.......8....!..|
0x1f40fc:   2a 00 00 00 00 43 0e 20  61 0a 0e 04 41 0b 00 00   |*....C. a...A...|
0x1f410c:   18 00 00 00 54 00 00 00  a8 21 00 00 2f 00 00 00   |....T....!../...|
0x1f411c:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x1f412c:   70 00 00 00 bc 21 00 00  2f 00 00 00 00 43 0e 20   |p....!../....C. |
0x1f413c:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 8c 00 00 00   |f...A...........|
0x1f414c:   d0 21 00 00 55 00 00 00  00 43 0e 20 6e 0a 0e 04   |.!..U....C. n...|
0x1f415c:   47 0b 50 0a 0e 04 41 0b  18 00 00 00 ac 00 00 00   |G.P...A.........|
0x1f416c:   10 22 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |."../....C. f...|
0x1f417c:   41 0b 00 00 18 00 00 00  c8 00 00 00 24 22 00 00   |A...........$"..|
0x1f418c:   39 00 00 00 00 43 0e 20  6e 0a 0e 04 43 0b 00 00   |9....C. n...C...|
0x1f419c:   2c 00 00 00 e4 00 00 00  48 22 00 00 64 00 00 00   |,.......H"..d...|
0x1f41ac:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 4f   |.A....A....C.@.O|
0x1f41bc:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 42 0b 00 00 00   |...A...A...B....|
0x1f41cc:   20 00 00 00 14 01 00 00  88 22 00 00 44 00 00 00   | ........"..D...|
0x1f41dc:   00 41 0e 08 83 02 43 0e  20 6d 0a 0e 08 41 0e 04   |.A....C. m...A..|
0x1f41ec:   c3 46 0b 00 18 00 00 00  38 01 00 00 b4 22 00 00   |.F......8...."..|
0x1f41fc:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x1f420c:   18 00 00 00 54 01 00 00  c8 22 00 00 2f 00 00 00   |....T...."../...|
0x1f421c:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x1f422c:   70 01 00 00 dc 22 00 00  2f 00 00 00 00 43 0e 20   |p...."../....C. |
0x1f423c:   66 0a 0e 04 41 0b 00 00  18 00 00 00 8c 01 00 00   |f...A...........|
0x1f424c:   f0 22 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |."../....C. f...|
0x1f425c:   41 0b 00 00 18 00 00 00  a8 01 00 00 04 23 00 00   |A............#..|
0x1f426c:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x1f427c:   18 00 00 00 c4 01 00 00  18 23 00 00 25 00 00 00   |.........#..%...|
0x1f428c:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 1c 00 00 00   |.C. \...A.......|
0x1f429c:   e0 01 00 00 2c 23 00 00  55 00 00 00 00 43 0e 20   |....,#..U....C. |
0x1f42ac:   70 0a 0e 04 45 0b 50 0a  0e 04 41 0b 18 00 00 00   |p...E.P...A.....|
0x1f42bc:   00 02 00 00 6c 23 00 00  25 00 00 00 00 43 0e 20   |....l#..%....C. |
0x1f42cc:   5c 0a 0e 04 41 0b 00 00  1c 00 00 00 1c 02 00 00   |\...A...........|
0x1f42dc:   80 23 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |.#..U....C. p...|
0x1f42ec:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 3c 02 00 00   |E.P...A.....<...|
0x1f42fc:   c0 23 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |.#..%....C. \...|
0x1f430c:   41 0b 00 00 18 00 00 00  58 02 00 00 d4 23 00 00   |A.......X....#..|
0x1f431c:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x1f432c:   18 00 00 00 74 02 00 00  f8 23 00 00 38 00 00 00   |....t....#..8...|
0x1f433c:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x1f434c:   90 02 00 00 1c 24 00 00  38 00 00 00 00 43 0e 20   |.....$..8....C. |
0x1f435c:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 ac 02 00 00   |k...E...........|
0x1f436c:   40 24 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |@$..8....C. k...|
0x1f437c:   45 0b 00 00 18 00 00 00  c8 02 00 00 64 24 00 00   |E...........d$..|
0x1f438c:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x1f439c:   18 00 00 00 e4 02 00 00  88 24 00 00 38 00 00 00   |.........$..8...|
0x1f43ac:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x1f43bc:   00 03 00 00 ac 24 00 00  38 00 00 00 00 43 0e 20   |.....$..8....C. |
0x1f43cc:   6b 0a 0e 04 45 0b 00 00  1c 00 00 00 1c 03 00 00   |k...E...........|
0x1f43dc:   d0 24 00 00 53 00 00 00  00 43 0e 20 68 0a 0e 04   |.$..S....C. h...|
0x1f43ec:   45 0b 59 0a 0e 04 45 0b  18 00 00 00 3c 03 00 00   |E.Y...E.....<...|
0x1f43fc:   10 25 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.%..8....C. k...|
0x1f440c:   45 0b 00 00 20 00 00 00  58 03 00 00 34 25 00 00   |E... ...X...4%..|
0x1f441c:   44 00 00 00 00 41 0e 08  83 02 43 0e 30 75 0a 0e   |D....A....C.0u..|
0x1f442c:   08 41 0e 04 c3 45 0b 00  18 00 00 00 7c 03 00 00   |.A...E......|...|
0x1f443c:   60 25 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |`%..8....C. k...|
0x1f444c:   45 0b 00 00 10 00 00 00  98 03 00 00 84 25 00 00   |E............%..|
0x1f445c:   07 00 00 00 00 00 00 00  1c 00 00 00 00 00 00 00   |................|
0x1f446c:   01 7a 50 4c 52 00 01 7c  08 07 00 00 00 00 00 00   |.zPLR..|........|
0x1f447c:   1b 0c 04 04 88 01 00 00  20 00 00 00 24 00 00 00   |........ ...$...|
0x1f448c:   60 25 00 00 8b 00 00 00  04 bc 29 00 00 41 0e 08   |`%........)..A..|
0x1f449c:   86 02 41 0e 0c 83 03 43  0e 30 00 00 24 00 00 00   |..A....C.0..$...|
0x1f44ac:   48 00 00 00 cc 2d 00 00  74 00 00 00 04 c8 29 00   |H....-..t.....).|
0x1f44bc:   00 43 0e 30 4c 83 03 57  86 02 76 0a 0e 04 c6 c3   |.C.0L..W..v.....|
0x1f44cc:   41 0b 00 00 20 00 00 00  18 04 00 00 24 2e 00 00   |A... .......$...|
0x1f44dc:   47 00 00 00 00 41 0e 08  83 02 43 0e 30 78 0a 0e   |G....A....C.0x..|
0x1f44ec:   08 41 0e 04 c3 45 0b 00  10 00 00 00 3c 04 00 00   |.A...E......<...|
0x1f44fc:   5a 34 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |Z4..3....C.0....|
0x1f450c:   50 04 00 00 7a 34 00 00  33 00 00 00 00 43 0e 30   |P...z4..3....C.0|
0x1f451c:   10 00 00 00 64 04 00 00  9a 34 00 00 33 00 00 00   |....d....4..3...|
0x1f452c:   00 43 0e 30 10 00 00 00  78 04 00 00 ba 34 00 00   |.C.0....x....4..|
0x1f453c:   33 00 00 00 00 43 0e 30  10 00 00 00 8c 04 00 00   |3....C.0........|
0x1f454c:   da 34 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |.4..3....C.0....|
0x1f455c:   a0 04 00 00 fa 34 00 00  33 00 00 00 00 43 0e 30   |.....4..3....C.0|
0x1f456c:   10 00 00 00 b4 04 00 00  1a 35 00 00 33 00 00 00   |.........5..3...|
0x1f457c:   00 43 0e 30 10 00 00 00  c8 04 00 00 34 fb ff ff   |.C.0........4...|
0x1f458c:   33 00 00 00 00 43 0e 30  10 00 00 00 dc 04 00 00   |3....C.0........|
0x1f459c:   60 fb ff ff 33 00 00 00  00 43 0e 30 10 00 00 00   |`...3....C.0....|
0x1f45ac:   f0 04 00 00 8c fb ff ff  33 00 00 00 00 43 0e 30   |........3....C.0|
0x1f45bc:   10 00 00 00 04 05 00 00  b8 fb ff ff 33 00 00 00   |............3...|
0x1f45cc:   00 43 0e 30 10 00 00 00  18 05 00 00 ea 34 00 00   |.C.0.........4..|
0x1f45dc:   33 00 00 00 00 43 0e 30  10 00 00 00 2c 05 00 00   |3....C.0....,...|
0x1f45ec:   0a 35 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |.5..3....C.0....|
0x1f45fc:   40 05 00 00 2a 35 00 00  33 00 00 00 00 43 0e 30   |@...*5..3....C.0|
0x1f460c:   10 00 00 00 54 05 00 00  a8 fb ff ff 33 00 00 00   |....T.......3...|
0x1f461c:   00 43 0e 30 20 00 00 00  68 05 00 00 44 35 00 00   |.C.0 ...h...D5..|
0x1f462c:   41 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |A....A....C.0r..|
0x1f463c:   08 41 0e 04 c3 45 0b 00  20 00 00 00 8c 05 00 00   |.A...E.. .......|
0x1f464c:   70 35 00 00 4f 00 00 00  00 41 0e 08 83 02 43 0e   |p5..O....A....C.|
0x1f465c:   30 02 40 0a 0e 08 41 0e  04 c3 45 0b 20 00 00 00   |0.@...A...E. ...|
0x1f466c:   b0 05 00 00 9c 35 00 00  41 00 00 00 00 41 0e 08   |.....5..A....A..|
0x1f467c:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x1f468c:   18 00 00 00 d4 05 00 00  c8 35 00 00 38 00 00 00   |.........5..8...|
0x1f469c:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x1f46ac:   f0 05 00 00 ec 35 00 00  38 00 00 00 00 43 0e 20   |.....5..8....C. |
0x1f46bc:   6b 0a 0e 04 45 0b 00 00  20 00 00 00 0c 06 00 00   |k...E... .......|
0x1f46cc:   10 36 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |.6..A....A....C.|
0x1f46dc:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 20 00 00 00   |0r...A...E.. ...|
0x1f46ec:   30 06 00 00 3c 36 00 00  41 00 00 00 00 41 0e 08   |0...<6..A....A..|
0x1f46fc:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x1f470c:   20 00 00 00 54 06 00 00  68 36 00 00 4c 00 00 00   | ...T...h6..L...|
0x1f471c:   00 41 0e 08 83 02 43 0e  30 7d 0a 0e 08 41 0e 04   |.A....C.0}...A..|
0x1f472c:   c3 45 0b 00 10 00 00 00  78 06 00 00 94 36 00 00   |.E......x....6..|
0x1f473c:   07 00 00 00 00 00 00 00  30 00 00 00 e4 02 00 00   |........0.......|
0x1f474c:   90 36 00 00 8e 00 00 00  04 d8 29 00 00 41 0e 08   |.6........)..A..|
0x1f475c:   86 02 41 0e 0c 83 03 43  0e 30 02 6f 0a 0e 0c 41   |..A....C.0.o...A|
0x1f476c:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x1f477c:   c0 06 00 00 ec 36 00 00  07 00 00 00 00 00 00 00   |.....6..........|
0x1f478c:   30 00 00 00 2c 03 00 00  e8 36 00 00 a3 00 00 00   |0...,....6......|
0x1f479c:   04 e9 29 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..)..A....A....C|
0x1f47ac:   0e 30 02 7c 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.|...A...A...A|
0x1f47bc:   0b 00 00 00 10 00 00 00  08 07 00 00 64 37 00 00   |............d7..|
0x1f47cc:   07 00 00 00 00 00 00 00  30 00 00 00 74 03 00 00   |........0...t...|
0x1f47dc:   60 37 00 00 a3 00 00 00  04 fb 29 00 00 41 0e 08   |`7........)..A..|
0x1f47ec:   86 02 41 0e 0c 83 03 43  0e 30 02 7c 0a 0e 0c 41   |..A....C.0.|...A|
0x1f47fc:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 28 00 00 00   |...A...A....(...|
0x1f480c:   a8 03 00 00 dc 37 00 00  14 01 00 00 04 10 2a 00   |.....7........*.|
0x1f481c:   00 43 0e 30 48 86 03 57  87 02 83 04 69 0a 0e 04   |.C.0H..W....i...|
0x1f482c:   c7 c6 c3 45 0b 00 00 00  10 00 00 00 7c 07 00 00   |...E........|...|
0x1f483c:   d0 38 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |.8..........0...|
0x1f484c:   e8 03 00 00 cc 38 00 00  c1 00 00 00 04 3d 2a 00   |.....8.......=*.|
0x1f485c:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 8e   |.A....A....C.0..|
0x1f486c:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x1f487c:   20 00 00 00 c4 07 00 00  78 f9 ff ff 85 00 00 00   | .......x.......|
0x1f488c:   00 41 0e 08 83 02 43 0e  30 63 0a 0e 08 41 0e 04   |.A....C.0c...A..|
0x1f489c:   c3 48 0b 00 20 00 00 00  e8 07 00 00 44 39 00 00   |.H.. .......D9..|
0x1f48ac:   8e 00 00 00 00 41 0e 08  83 02 43 0e 30 7b 0a 0e   |.....A....C.0{..|
0x1f48bc:   08 41 0e 04 c3 41 0b 00  24 00 00 00 64 04 00 00   |.A...A..$...d...|
0x1f48cc:   b0 39 00 00 68 00 00 00  04 54 2a 00 00 41 0e 08   |.9..h....T*..A..|
0x1f48dc:   83 02 43 0e 30 79 0a 0e  08 41 0e 04 c3 4a 0b 00   |..C.0y...A...J..|
0x1f48ec:   10 00 00 00 34 08 00 00  f8 39 00 00 0a 00 00 00   |....4....9......|
0x1f48fc:   00 00 00 00 20 00 00 00  48 08 00 00 f4 39 00 00   |.... ...H....9..|
0x1f490c:   4b 00 00 00 00 41 0e 08  83 02 43 0e 30 7c 0a 0e   |K....A....C.0|..|
0x1f491c:   08 41 0e 04 c3 45 0b 00  10 00 00 00 6c 08 00 00   |.A...E......l...|
0x1f492c:   20 3a 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   | :.......... ...|
0x1f493c:   80 08 00 00 1c 3a 00 00  51 00 00 00 00 41 0e 08   |.....:..Q....A..|
0x1f494c:   83 02 43 0e 30 02 42 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.B...A...E.|
0x1f495c:   10 00 00 00 a4 08 00 00  58 3a 00 00 0a 00 00 00   |........X:......|
0x1f496c:   00 00 00 00 20 00 00 00  b8 08 00 00 54 3a 00 00   |.... .......T:..|
0x1f497c:   51 00 00 00 00 41 0e 08  83 02 43 0e 30 02 42 0a   |Q....A....C.0.B.|
0x1f498c:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 dc 08 00 00   |..A...E.........|
0x1f499c:   90 3a 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   |.:.......... ...|
0x1f49ac:   f0 08 00 00 8c 3a 00 00  51 00 00 00 00 41 0e 08   |.....:..Q....A..|
0x1f49bc:   83 02 43 0e 30 02 42 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.B...A...E.|
0x1f49cc:   10 00 00 00 14 09 00 00  c8 3a 00 00 0a 00 00 00   |.........:......|
0x1f49dc:   00 00 00 00 10 00 00 00  28 09 00 00 c4 3a 00 00   |........(....:..|
0x1f49ec:   0a 00 00 00 00 00 00 00  20 00 00 00 3c 09 00 00   |........ ...<...|
0x1f49fc:   c0 3a 00 00 52 00 00 00  00 41 0e 08 83 02 43 0e   |.:..R....A....C.|
0x1f4a0c:   30 02 43 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.C...A...E.....|
0x1f4a1c:   60 09 00 00 fc 3a 00 00  07 00 00 00 00 00 00 00   |`....:..........|
0x1f4a2c:   20 00 00 00 74 09 00 00  f8 3a 00 00 53 00 00 00   | ...t....:..S...|
0x1f4a3c:   00 41 0e 08 83 02 43 0e  30 02 44 0a 0e 08 41 0e   |.A....C.0.D...A.|
0x1f4a4c:   04 c3 45 0b 10 00 00 00  98 09 00 00 34 3b 00 00   |..E.........4;..|
0x1f4a5c:   07 00 00 00 00 00 00 00  10 00 00 00 ac 09 00 00   |................|
0x1f4a6c:   30 3b 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |0;.......... ...|
0x1f4a7c:   c0 09 00 00 2c 3b 00 00  5a 00 00 00 00 41 0e 08   |....,;..Z....A..|
0x1f4a8c:   83 02 43 0e 30 02 4b 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.K...A...E.|
0x1f4a9c:   10 00 00 00 e4 09 00 00  68 3b 00 00 0a 00 00 00   |........h;......|
0x1f4aac:   00 00 00 00 10 00 00 00  f8 09 00 00 64 3b 00 00   |............d;..|
0x1f4abc:   0a 00 00 00 00 00 00 00  20 00 00 00 0c 0a 00 00   |........ .......|
0x1f4acc:   60 3b 00 00 58 00 00 00  00 41 0e 08 83 02 43 0e   |`;..X....A....C.|
0x1f4adc:   30 02 49 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.I...A...E.....|
0x1f4aec:   30 0a 00 00 9c 3b 00 00  07 00 00 00 00 00 00 00   |0....;..........|
0x1f4afc:   20 00 00 00 44 0a 00 00  98 3b 00 00 59 00 00 00   | ...D....;..Y...|
0x1f4b0c:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x1f4b1c:   04 c3 45 0b 10 00 00 00  68 0a 00 00 d4 3b 00 00   |..E.....h....;..|
0x1f4b2c:   07 00 00 00 00 00 00 00  10 00 00 00 7c 0a 00 00   |............|...|
0x1f4b3c:   d0 3b 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.;.......... ...|
0x1f4b4c:   90 0a 00 00 cc 3b 00 00  60 00 00 00 00 41 0e 08   |.....;..`....A..|
0x1f4b5c:   83 02 43 0e 30 02 51 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.Q...A...E.|
0x1f4b6c:   10 00 00 00 b4 0a 00 00  08 3c 00 00 07 00 00 00   |.........<......|
0x1f4b7c:   00 00 00 00 10 00 00 00  c8 0a 00 00 04 3c 00 00   |.............<..|
0x1f4b8c:   07 00 00 00 00 00 00 00  20 00 00 00 dc 0a 00 00   |........ .......|
0x1f4b9c:   00 3c 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |.<..`....A....C.|
0x1f4bac:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.Q...A...E.....|
0x1f4bbc:   00 0b 00 00 3c 3c 00 00  0a 00 00 00 00 00 00 00   |....<<..........|
0x1f4bcc:   10 00 00 00 14 0b 00 00  38 3c 00 00 0a 00 00 00   |........8<......|
0x1f4bdc:   00 00 00 00 20 00 00 00  28 0b 00 00 34 3c 00 00   |.... ...(...4<..|
0x1f4bec:   58 00 00 00 00 41 0e 08  83 02 43 0e 30 02 49 0a   |X....A....C.0.I.|
0x1f4bfc:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 4c 0b 00 00   |..A...E.....L...|
0x1f4c0c:   70 3c 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |p<.......... ...|
0x1f4c1c:   60 0b 00 00 6c 3c 00 00  59 00 00 00 00 41 0e 08   |`...l<..Y....A..|
0x1f4c2c:   83 02 43 0e 30 02 4a 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.J...A...E.|
0x1f4c3c:   10 00 00 00 84 0b 00 00  a8 3c 00 00 07 00 00 00   |.........<......|
0x1f4c4c:   00 00 00 00 10 00 00 00  98 0b 00 00 a4 3c 00 00   |.............<..|
0x1f4c5c:   07 00 00 00 00 00 00 00  20 00 00 00 ac 0b 00 00   |........ .......|
0x1f4c6c:   a0 3c 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |.<..`....A....C.|
0x1f4c7c:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.Q...A...E.....|
0x1f4c8c:   d0 0b 00 00 dc 3c 00 00  0a 00 00 00 00 00 00 00   |.....<..........|
0x1f4c9c:   10 00 00 00 e4 0b 00 00  d8 3c 00 00 0a 00 00 00   |.........<......|
0x1f4cac:   00 00 00 00 20 00 00 00  f8 0b 00 00 d4 3c 00 00   |.... ........<..|
0x1f4cbc:   58 00 00 00 00 41 0e 08  83 02 43 0e 30 02 49 0a   |X....A....C.0.I.|
0x1f4ccc:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 1c 0c 00 00   |..A...E.........|
0x1f4cdc:   10 3d 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.=.......... ...|
0x1f4cec:   30 0c 00 00 0c 3d 00 00  59 00 00 00 00 41 0e 08   |0....=..Y....A..|
0x1f4cfc:   83 02 43 0e 30 02 4a 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.J...A...E.|
0x1f4d0c:   20 00 00 00 54 0c 00 00  48 3d 00 00 3b 00 00 00   | ...T...H=..;...|
0x1f4d1c:   00 41 0e 08 83 02 43 0e  30 6c 0a 0e 08 41 0e 04   |.A....C.0l...A..|
0x1f4d2c:   c3 45 0b 00 28 00 00 00  78 0c 00 00 64 3d 00 00   |.E..(...x...d=..|
0x1f4d3c:   8a 00 00 00 00 43 0e 30  5a 86 02 83 03 6d 0a 0e   |.....C.0Z....m..|
0x1f4d4c:   04 c6 c3 46 0b 73 0a 0e  04 c6 c3 42 0b 00 00 00   |...F.s.....B....|
0x1f4d5c:   18 00 00 00 a4 0c 00 00  c8 3d 00 00 35 00 00 00   |.........=..5...|
0x1f4d6c:   00 43 0e 20 68 0a 0e 04  45 0b 00 00 30 00 00 00   |.C. h...E...0...|
0x1f4d7c:   18 09 00 00 ec 3d 00 00  82 00 00 00 04 65 2a 00   |.....=.......e*.|
0x1f4d8c:   00 41 0e 08 83 02 43 0e  40 02 41 0a 0e 08 41 0e   |.A....C.@.A...A.|
0x1f4d9c:   04 c3 4a 0b 50 0a 0e 08  41 0e 04 c3 41 0b 00 00   |..J.P...A...A...|
0x1f4dac:   2c 00 00 00 f4 0c 00 00  d8 f4 ff ff 53 01 00 00   |,...........S...|
0x1f4dbc:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 a7   |.A....A....C.@..|
0x1f4dcc:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 42 0b 00 00 00   |...A...A...B....|
0x1f4ddc:   20 00 00 00 24 0d 00 00  78 7e 00 00 4e 00 00 00   | ...$...x~..N...|
0x1f4dec:   00 41 0e 08 83 02 43 0e  30 66 0a 0e 08 41 0e 04   |.A....C.0f...A..|
0x1f4dfc:   c3 45 0b 00 18 00 00 00  48 0d 00 00 a4 7e 00 00   |.E......H....~..|
0x1f4e0c:   5a 00 00 00 00 43 0e 30  6c 0a 0e 04 42 0b 00 00   |Z....C.0l...B...|
0x1f4e1c:   20 00 00 00 64 0d 00 00  e8 7e 00 00 8e 00 00 00   | ...d....~......|
0x1f4e2c:   00 41 0e 08 83 02 43 0e  30 7b 0a 0e 08 41 0e 04   |.A....C.0{...A..|
0x1f4e3c:   c3 41 0b 00 2c 00 00 00  e0 09 00 00 54 7f 00 00   |.A..,.......T...|
0x1f4e4c:   74 01 00 00 04 75 2a 00  00 43 0e 50 58 83 05 48   |t....u*..C.PX..H|
0x1f4e5c:   86 04 50 85 02 87 03 02  93 0a 0e 04 c5 c7 c6 c3   |..P.............|
0x1f4e6c:   42 0b 00 00 38 00 00 00  b8 0d 00 00 a4 80 00 00   |B...8...........|
0x1f4e7c:   c5 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x1f4e8c:   0e 30 02 73 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 46   |.0.s...A...A...F|
0x1f4e9c:   0b 68 0a 0e 0c 41 0e 08  c3 41 0e 04 c6 45 0b 00   |.h...A...A...E..|
0x1f4eac:   44 00 00 00 4c 0a 00 00  38 f5 ff ff a9 02 00 00   |D...L...8.......|
0x1f4ebc:   04 84 2a 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |..*..A....A....A|
0x1f4ecc:   0e 10 86 04 41 0e 14 83  05 46 0e a0 01 03 1c 02   |....A....F......|
0x1f4edc:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x1f4eec:   0e 04 c5 43 0b 00 00 00  24 00 00 00 94 0a 00 00   |...C....$.......|
0x1f4efc:   a0 f7 ff ff 72 00 00 00  04 bb 2a 00 00 41 0e 08   |....r.....*..A..|
0x1f4f0c:   83 02 43 0e 40 02 4f 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.O...A...A.|
0x1f4f1c:   18 00 00 00 64 0e 00 00  f8 f7 ff ff 33 00 00 00   |....d.......3...|
0x1f4f2c:   00 43 0e 20 6a 0a 0e 04  41 0b 00 00 2c 00 00 00   |.C. j...A...,...|
0x1f4f3c:   80 0e 00 00 1c f8 ff ff  e9 00 00 00 00 41 0e 08   |.............A..|
0x1f4f4c:   86 02 41 0e 0c 83 03 43  0e 50 02 da 0a 0e 0c 41   |..A....C.P.....A|
0x1f4f5c:   0e 08 c3 41 0e 04 c6 43  0b 00 00 00 20 00 00 00   |...A...C.... ...|
0x1f4f6c:   b0 0e 00 00 dc f8 ff ff  4e 00 00 00 00 41 0e 08   |........N....A..|
0x1f4f7c:   83 02 43 0e 20 75 0a 0e  08 41 0e 04 c3 46 0b 00   |..C. u...A...F..|
0x1f4f8c:   24 00 00 00 d4 0e 00 00  08 f9 ff ff 97 00 00 00   |$...............|
0x1f4f9c:   00 43 0e 30 48 83 04 48  86 03 46 87 02 02 78 0a   |.C.0H..H..F...x.|
0x1f4fac:   0e 04 c7 c6 c3 41 0b 00  28 00 00 00 fc 0e 00 00   |.....A..(.......|
0x1f4fbc:   80 f9 ff ff 15 01 00 00  00 43 0e 50 48 83 05 48   |.........C.PH..H|
0x1f4fcc:   86 04 48 87 03 53 85 02  76 0a 0e 04 c5 c7 c6 c3   |..H..S..v.......|
0x1f4fdc:   44 0b 00 00 20 00 00 00  28 0f 00 00 04 80 00 00   |D... ...(.......|
0x1f4fec:   45 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |E....A....C.0r..|
0x1f4ffc:   08 41 0e 04 c3 41 0b 00  2c 00 00 00 a4 0b 00 00   |.A...A..,.......|
0x1f500c:   30 80 00 00 2b 01 00 00  04 cb 2a 00 00 43 0e 40   |0...+.....*..C.@|
0x1f501c:   48 83 05 54 86 04 5b 85  02 87 03 02 af 0a 0e 04   |H..T..[.........|
0x1f502c:   c5 c7 c6 c3 47 0b 00 00  30 00 00 00 d4 0b 00 00   |....G...0.......|
0x1f503c:   30 81 00 00 87 00 00 00  04 e8 2a 00 00 41 0e 08   |0.........*..A..|
0x1f504c:   86 02 41 0e 0c 83 03 43  0e 30 02 68 0a 0e 0c 41   |..A....C.0.h...A|
0x1f505c:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x1f506c:   b0 0f 00 00 8c 81 00 00  07 00 00 00 00 00 00 00   |................|
0x1f507c:   20 00 00 00 1c 0c 00 00  88 81 00 00 6d 00 00 00   | ...........m...|
0x1f508c:   04 f5 2a 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..*..A....A....C|
0x1f509c:   0e 30 00 00 20 00 00 00  40 0c 00 00 d4 81 00 00   |.0.. ...@.......|
0x1f50ac:   ea 00 00 00 04 01 2b 00  00 41 0e 08 86 02 41 0e   |......+..A....A.|
0x1f50bc:   0c 83 03 43 0e 50 00 00  24 00 00 00 64 0c 00 00   |...C.P..$...d...|
0x1f50cc:   a0 82 00 00 ef 00 00 00  04 15 2b 00 00 41 0e 08   |..........+..A..|
0x1f50dc:   83 02 43 0e 50 02 5e 0a  0e 08 41 0e 04 c3 45 0b   |..C.P.^...A...E.|
0x1f50ec:   30 00 00 00 8c 0c 00 00  68 83 00 00 87 00 00 00   |0.......h.......|
0x1f50fc:   04 2a 2b 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.*+..A....A....C|
0x1f510c:   0e 30 02 68 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.h...A...A...A|
0x1f511c:   0b 00 00 00 10 00 00 00  68 10 00 00 c4 83 00 00   |........h.......|
0x1f512c:   07 00 00 00 00 00 00 00  20 00 00 00 d4 0c 00 00   |........ .......|
0x1f513c:   c0 83 00 00 6d 00 00 00  04 37 2b 00 00 41 0e 08   |....m....7+..A..|
0x1f514c:   86 02 41 0e 0c 83 03 43  0e 30 00 00 20 00 00 00   |..A....C.0.. ...|
0x1f515c:   f8 0c 00 00 0c 84 00 00  ea 00 00 00 04 43 2b 00   |.............C+.|
0x1f516c:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 50 00 00   |.A....A....C.P..|
0x1f517c:   2c 00 00 00 1c 0d 00 00  d8 84 00 00 96 02 00 00   |,...............|
0x1f518c:   04 58 2b 00 00 43 0e 70  48 86 04 48 87 03 48 83   |.X+..C.pH..H..H.|
0x1f519c:   05 02 7f 85 02 02 b7 0a  0e 04 c5 c7 c6 c3 47 0b   |..............G.|
0x1f51ac:   2c 00 00 00 f4 10 00 00  48 87 00 00 65 00 00 00   |,.......H...e...|
0x1f51bc:   00 41 0e 08 83 02 43 0e  30 7c 0a 0e 08 41 0e 04   |.A....C.0|...A..|
0x1f51cc:   c3 47 0b 50 0a 0e 08 41  0e 04 c3 41 0b 00 00 00   |.G.P...A...A....|
0x1f51dc:   3c 00 00 00 24 11 00 00  88 87 00 00 99 00 00 00   |<...$...........|
0x1f51ec:   00 41 0e 08 85 02 43 0e  0c 87 03 41 0e 10 86 04   |.A....C....A....|
0x1f51fc:   41 0e 14 83 05 43 0e 40  02 79 0a 0e 14 41 0e 10   |A....C.@.y...A..|
0x1f520c:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 42 0b 00   |.A...A...A...B..|
0x1f521c:   40 00 00 00 64 11 00 00  e8 87 00 00 1f 01 00 00   |@...d...........|
0x1f522c:   00 41 0e 08 83 02 43 0e  30 02 86 0a 0e 08 41 0e   |.A....C.0.....A.|
0x1f523c:   04 c3 45 0b 6a 0a 0e 08  41 0e 04 c3 45 0b 50 0a   |..E.j...A...E.P.|
0x1f524c:   0e 08 41 0e 04 c3 47 0b  57 0a 0e 08 41 0e 04 c3   |..A...G.W...A...|
0x1f525c:   48 0b 00 00 28 00 00 00  a8 11 00 00 14 89 00 00   |H...(...........|
0x1f526c:   5a 01 00 00 00 43 0e 50  48 83 05 48 87 03 58 85   |Z....C.PH..H..X.|
0x1f527c:   02 86 04 02 65 0a 0e 04  c5 c7 c6 c3 48 0b 00 00   |....e.......H...|
0x1f528c:   30 00 00 00 2c 0e 00 00  48 8a 00 00 fc 00 00 00   |0...,...H.......|
0x1f529c:   04 88 2b 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..+..A....A....C|
0x1f52ac:   0e 30 02 8a 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.....A...A...A|
0x1f52bc:   0b 00 00 00 20 00 00 00  08 12 00 00 14 8b 00 00   |.... ...........|
0x1f52cc:   7a 00 00 00 00 41 0e 08  83 02 43 0e 30 02 54 0a   |z....A....C.0.T.|
0x1f52dc:   0e 08 41 0e 04 c3 47 0b  28 00 00 00 84 0e 00 00   |..A...G.(.......|
0x1f52ec:   70 8b 00 00 d1 00 00 00  04 96 2b 00 00 43 0e 30   |p.........+..C.0|
0x1f52fc:   48 83 04 48 86 03 60 87  02 02 4a 0a 0e 04 c7 c6   |H..H..`...J.....|
0x1f530c:   c3 43 0b 00 44 00 00 00  58 12 00 00 24 8c 00 00   |.C..D...X...$...|
0x1f531c:   71 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |q....A....A....A|
0x1f532c:   0e 10 83 04 43 0e 30 02  43 0a 0e 10 41 0e 0c c3   |....C.0.C...A...|
0x1f533c:   41 0e 08 c6 41 0e 04 c7  4c 0b 50 0a 0e 10 41 0e   |A...A...L.P...A.|
0x1f534c:   0c c3 41 0e 08 c6 41 0e  04 c7 41 0b 38 00 00 00   |..A...A...A.8...|
0x1f535c:   f8 0e 00 00 fc f6 ff ff  da 00 00 00 04 a4 2b 00   |..............+.|
0x1f536c:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x1f537c:   43 0e 40 02 ab 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.@.....A...A...|
0x1f538c:   41 0e 04 c7 41 0b 00 00  24 00 00 00 34 0f 00 00   |A...A...$...4...|
0x1f539c:   20 8c 00 00 6f 00 00 00  04 b7 2b 00 00 43 0e 30   | ...o.....+..C.0|
0x1f53ac:   48 83 03 48 86 02 02 42  0a 0e 04 c6 c3 43 0b 00   |H..H...B.....C..|
0x1f53bc:   30 00 00 00 5c 0f 00 00  68 8c 00 00 ab 00 00 00   |0...\...h.......|
0x1f53cc:   04 c7 2b 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..+..A....A....C|
0x1f53dc:   0e 30 02 7a 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.z...A...A...A|
0x1f53ec:   0b 00 00 00 10 00 00 00  38 13 00 00 e4 8c 00 00   |........8.......|
0x1f53fc:   07 00 00 00 00 00 00 00  20 00 00 00 a4 0f 00 00   |........ .......|
0x1f540c:   e0 8c 00 00 6d 00 00 00  04 da 2b 00 00 41 0e 08   |....m.....+..A..|
0x1f541c:   86 02 41 0e 0c 83 03 43  0e 30 00 00 20 00 00 00   |..A....C.0.. ...|
0x1f542c:   c8 0f 00 00 2c 8d 00 00  10 01 00 00 04 e6 2b 00   |....,.........+.|
0x1f543c:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 50 00 00   |.A....A....C.P..|
0x1f544c:   34 00 00 00 94 13 00 00  18 8e 00 00 59 00 00 00   |4...........Y...|
0x1f545c:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x1f546c:   43 0e 30 02 4a 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.J...A...A...|
0x1f547c:   41 0e 04 c7 41 0b 00 00  34 00 00 00 cc 13 00 00   |A...A...4.......|
0x1f548c:   40 8e 00 00 64 00 00 00  00 41 0e 08 87 02 41 0e   |@...d....A....A.|
0x1f549c:   0c 86 03 41 0e 10 83 04  43 0e 30 02 55 0a 0e 10   |...A....C.0.U...|
0x1f54ac:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x1f54bc:   20 00 00 00 04 14 00 00  78 8e 00 00 75 00 00 00   | .......x...u...|
0x1f54cc:   00 41 0e 08 83 02 43 0e  30 02 65 0a 0e 08 41 0e   |.A....C.0.e...A.|
0x1f54dc:   04 c3 41 0b 24 00 00 00  28 14 00 00 54 f6 ff ff   |..A.$...(...T...|
0x1f54ec:   35 01 00 00 00 41 0e 08  83 02 43 0e 30 03 26 01   |5....A....C.0.&.|
0x1f54fc:   0a 0e 08 41 0e 04 c3 41  0b 00 00 00 20 00 00 00   |...A...A.... ...|
0x1f550c:   50 14 00 00 6c f7 ff ff  3f 00 00 00 00 41 0e 08   |P...l...?....A..|
0x1f551c:   83 02 43 0e 30 74 0a 0e  08 41 0e 04 c3 41 0b 00   |..C.0t...A...A..|
0x1f552c:   20 00 00 00 74 14 00 00  88 8e 00 00 8e 00 00 00   | ...t...........|
0x1f553c:   00 41 0e 08 83 02 43 0e  30 02 83 0a 0e 08 41 0e   |.A....C.0.....A.|
0x1f554c:   04 c3 41 0b 24 00 00 00  f0 10 00 00 f4 8e 00 00   |..A.$...........|
0x1f555c:   a7 00 00 00 04 ff 2b 00  00 41 0e 08 83 02 43 0e   |......+..A....C.|
0x1f556c:   30 02 5c 0a 0e 08 41 0e  04 c3 47 0b 54 00 00 00   |0.\...A...G.T...|
0x1f557c:   c0 14 00 00 7c 8f 00 00  a9 02 00 00 00 41 0e 08   |....|........A..|
0x1f558c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f559c:   05 43 0e 50 02 9d 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x1f55ac:   c6 41 0e 08 c7 41 0e 04  c5 48 0b 03 a4 01 0a 0e   |.A...A...H......|
0x1f55bc:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x1f55cc:   c5 48 0b 00 28 00 00 00  18 15 00 00 d4 91 00 00   |.H..(...........|
0x1f55dc:   57 01 00 00 00 43 0e 70  4c 83 05 62 85 02 87 03   |W....C.pL..b....|
0x1f55ec:   86 04 02 fc 0a 0e 04 c5  c7 c6 c3 41 0b 00 00 00   |...........A....|
0x1f55fc:   28 00 00 00 44 15 00 00  08 93 00 00 cb 00 00 00   |(...D...........|
0x1f560c:   00 43 0e 50 58 83 05 50  87 03 86 04 52 85 02 02   |.C.PX..P....R...|
0x1f561c:   6c 0a 0e 04 c5 c7 c6 c3  47 0b 00 00 3c 00 00 00   |l.......G...<...|
0x1f562c:   70 15 00 00 ac 93 00 00  e8 00 00 00 00 41 0e 08   |p............A..|
0x1f563c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f564c:   05 43 0e 60 02 79 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.y...A...A..|
0x1f565c:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 18 00 00 00   |.A...A...C......|
0x1f566c:   b0 15 00 00 5c 94 00 00  59 00 00 00 00 43 0e 20   |....\...Y....C. |
0x1f567c:   6d 0a 0e 04 48 0b 00 00  3c 00 00 00 cc 15 00 00   |m...H...<.......|
0x1f568c:   a0 94 00 00 74 01 00 00  00 41 0e 08 85 02 41 0e   |....t....A....A.|
0x1f569c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x1f56ac:   02 ab 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x1f56bc:   c7 41 0e 04 c5 42 0b 00  34 00 00 00 0c 16 00 00   |.A...B..4.......|
0x1f56cc:   e0 95 00 00 d7 00 00 00  00 41 0e 08 87 02 41 0e   |.........A....A.|
0x1f56dc:   0c 86 03 41 0e 10 83 04  43 0e 30 02 c8 0a 0e 10   |...A....C.0.....|
0x1f56ec:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x1f56fc:   18 00 00 00 44 16 00 00  88 96 00 00 39 00 00 00   |....D.......9...|
0x1f570c:   00 43 0e 30 70 0a 0e 04  41 0b 00 00 18 00 00 00   |.C.0p...A.......|
0x1f571c:   60 16 00 00 ac 96 00 00  c4 00 00 00 00 43 0e 60   |`............C.`|
0x1f572c:   02 b3 0a 0e 04 42 0b 00  28 00 00 00 7c 16 00 00   |.....B..(...|...|
0x1f573c:   60 97 00 00 08 01 00 00  00 43 0e 50 5d 86 04 48   |`........C.P]..H|
0x1f574c:   83 05 48 87 03 4d 85 02  02 9a 0a 0e 04 c5 c7 c6   |..H..M..........|
0x1f575c:   c3 49 0b 00 40 00 00 00  a8 16 00 00 44 98 00 00   |.I..@.......D...|
0x1f576c:   04 03 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x1f577c:   0e 10 86 04 41 0e 14 83  05 46 0e 80 02 03 2c 02   |....A....F....,.|
0x1f578c:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x1f579c:   0e 04 c5 43 0b 00 00 00  40 00 00 00 44 13 00 00   |...C....@...D...|
0x1f57ac:   10 9b 00 00 26 01 00 00  04 10 2c 00 00 41 0e 08   |....&.....,..A..|
0x1f57bc:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f57cc:   05 43 0e 50 02 e9 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x1f57dc:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 2c 00 00 00   |.A...A...A..,...|
0x1f57ec:   30 17 00 00 fc 9b 00 00  a4 00 00 00 00 41 0e 08   |0............A..|
0x1f57fc:   86 02 41 0e 0c 83 03 43  0e 30 02 97 0a 0e 0c 41   |..A....C.0.....A|
0x1f580c:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 40 00 00 00   |...A...A....@...|
0x1f581c:   b8 13 00 00 7c 9c 00 00  7f 01 00 00 04 30 2c 00   |....|........0,.|
0x1f582c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f583c:   41 0e 14 83 05 43 0e 50  02 fa 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x1f584c:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x1f585c:   40 00 00 00 fc 13 00 00  b8 9d 00 00 b5 02 00 00   |@...............|
0x1f586c:   04 74 2c 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.t,..A....A....A|
0x1f587c:   0e 10 86 04 41 0e 14 83  05 43 0e 50 03 11 02 0a   |....A....C.P....|
0x1f588c:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x1f589c:   04 c5 44 0b 2c 00 00 00  e8 17 00 00 34 a0 00 00   |..D.,.......4...|
0x1f58ac:   a4 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x1f58bc:   0e 30 02 97 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.....A...A...A|
0x1f58cc:   0b 00 00 00 44 00 00 00  70 14 00 00 e4 f3 ff ff   |....D...p.......|
0x1f58dc:   5b 04 00 00 04 a5 2c 00  00 41 0e 08 85 02 41 0e   |[.....,..A....A.|
0x1f58ec:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e f0   |...A....A....F..|
0x1f58fc:   01 03 9a 03 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x1f590c:   0e 08 c7 41 0e 04 c5 48  0b 00 00 00 2c 00 00 00   |...A...H....,...|
0x1f591c:   b8 14 00 00 6c a0 00 00  40 01 00 00 04 c4 2c 00   |....l...@.....,.|
0x1f592c:   00 43 0e 50 60 87 03 86  04 4e 85 02 4f 83 05 02   |.C.P`....N..O...|
0x1f593c:   a0 0a 0e 04 c5 c7 c6 c3  48 0b 00 00 40 00 00 00   |........H...@...|
0x1f594c:   90 18 00 00 7c a1 00 00  04 03 00 00 00 41 0e 08   |....|........A..|
0x1f595c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f596c:   05 46 0e 80 02 03 2c 02  0a 0e 14 41 0e 10 c3 41   |.F....,....A...A|
0x1f597c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 43 0b 00 00 00   |...A...A...C....|
0x1f598c:   2c 00 00 00 2c 15 00 00  48 a4 00 00 4d 01 00 00   |,...,...H...M...|
0x1f599c:   04 e4 2c 00 00 43 0e 60  59 86 04 48 87 03 50 85   |..,..C.`Y..H..P.|
0x1f59ac:   02 51 83 05 02 7e 0a 0e  04 c5 c7 c6 c3 45 0b 00   |.Q...~.......E..|
0x1f59bc:   3c 00 00 00 04 19 00 00  68 a5 00 00 7b 01 00 00   |<.......h...{...|
0x1f59cc:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f59dc:   41 0e 14 83 05 43 0e 70  02 e7 0a 0e 14 41 0e 10   |A....C.p.....A..|
0x1f59ec:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x1f59fc:   28 00 00 00 44 19 00 00  a8 a6 00 00 f7 02 00 00   |(...D...........|
0x1f5a0c:   00 43 0e 80 01 4b 85 02  4b 86 04 64 87 03 4e 83   |.C...K..K..d..N.|
0x1f5a1c:   05 02 f6 0a 0e 04 c5 c7  c6 c3 47 0b 40 00 00 00   |..........G.@...|
0x1f5a2c:   c8 15 00 00 7c a9 00 00  8f 01 00 00 04 0c 2d 00   |....|.........-.|
0x1f5a3c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f5a4c:   41 0e 14 83 05 43 0e 60  03 3f 01 0a 0e 14 41 0e   |A....C.`.?....A.|
0x1f5a5c:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x1f5a6c:   40 00 00 00 b4 19 00 00  c8 aa 00 00 b6 02 00 00   |@...............|
0x1f5a7c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f5a8c:   41 0e 14 83 05 43 0e 90  01 03 1f 02 0a 0e 14 41   |A....C.........A|
0x1f5a9c:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 46   |...A...A...A...F|
0x1f5aac:   0b 00 00 00 40 00 00 00  f8 19 00 00 44 ad 00 00   |....@.......D...|
0x1f5abc:   0d 03 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x1f5acc:   0e 10 86 04 41 0e 14 83  05 43 0e 90 01 03 25 02   |....A....C....%.|
0x1f5adc:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x1f5aec:   0e 04 c5 48 0b 00 00 00  44 00 00 00 94 16 00 00   |...H....D.......|
0x1f5afc:   10 b0 00 00 a9 03 00 00  04 27 2d 00 00 41 0e 08   |.........'-..A..|
0x1f5b0c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f5b1c:   05 43 0e 80 01 03 b4 01  0a 0e 14 41 0e 10 c3 41   |.C.........A...A|
0x1f5b2c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 41 0b 00 00 00   |...A...A...A....|
0x1f5b3c:   40 00 00 00 dc 16 00 00  78 b3 00 00 1c 02 00 00   |@.......x.......|
0x1f5b4c:   04 64 2d 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.d-..A....A....A|
0x1f5b5c:   0e 10 86 04 41 0e 14 83  05 43 0e 70 03 52 01 0a   |....A....C.p.R..|
0x1f5b6c:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x1f5b7c:   04 c5 43 0b 44 00 00 00  c8 1a 00 00 54 b5 00 00   |..C.D.......T...|
0x1f5b8c:   79 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |y....A....A....A|
0x1f5b9c:   0e 10 83 04 43 0e 30 02  51 0a 0e 10 41 0e 0c c3   |....C.0.Q...A...|
0x1f5bac:   41 0e 08 c6 41 0e 04 c7  46 0b 50 0a 0e 10 41 0e   |A...A...F.P...A.|
0x1f5bbc:   0c c3 41 0e 08 c6 41 0e  04 c7 41 0b 28 00 00 00   |..A...A...A.(...|
0x1f5bcc:   10 1b 00 00 8c b5 00 00  95 01 00 00 00 43 0e 50   |.............C.P|
0x1f5bdc:   4d 83 05 54 86 04 55 85  02 87 03 03 2f 01 0a 0e   |M..T..U...../...|
0x1f5bec:   04 c5 c7 c6 c3 48 0b 00  40 00 00 00 94 17 00 00   |.....H..@.......|
0x1f5bfc:   00 b7 00 00 6b 01 00 00  04 b8 2d 00 00 41 0e 08   |....k.....-..A..|
0x1f5c0c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f5c1c:   05 43 0e 50 02 ee 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x1f5c2c:   c6 41 0e 08 c7 41 0e 04  c5 47 0b 00 54 00 00 00   |.A...A...G..T...|
0x1f5c3c:   80 1b 00 00 2c b8 00 00  e2 00 00 00 00 41 0e 08   |....,........A..|
0x1f5c4c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f5c5c:   05 43 0e 50 02 96 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x1f5c6c:   c6 41 0e 08 c7 41 0e 04  c5 47 0b 6c 0a 0e 14 41   |.A...A...G.l...A|
0x1f5c7c:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 45   |...A...A...A...E|
0x1f5c8c:   0b 00 00 00 40 00 00 00  30 18 00 00 c4 b8 00 00   |....@...0.......|
0x1f5c9c:   37 01 00 00 04 dc 2d 00  00 41 0e 08 85 02 41 0e   |7.....-..A....A.|
0x1f5cac:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x1f5cbc:   02 ca 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x1f5ccc:   c7 41 0e 04 c5 43 0b 00  44 00 00 00 74 18 00 00   |.A...C..D...t...|
0x1f5cdc:   c0 b9 00 00 20 08 00 00  04 04 2e 00 00 41 0e 08   |.... ........A..|
0x1f5cec:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f5cfc:   05 46 0e 80 02 03 d9 03  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0x1f5d0c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 49 0b 00 00 00   |...A...A...I....|
0x1f5d1c:   24 00 00 00 64 1c 00 00  98 c1 00 00 29 01 00 00   |$...d.......)...|
0x1f5d2c:   00 43 0e 40 4c 83 04 59  86 03 4f 87 02 02 5b 0a   |.C.@L..Y..O...[.|
0x1f5d3c:   0e 04 c7 c6 c3 46 0b 00  44 00 00 00 e4 18 00 00   |.....F..D.......|
0x1f5d4c:   a0 c2 00 00 15 05 00 00  04 1f 2e 00 00 41 0e 08   |.............A..|
0x1f5d5c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f5d6c:   05 46 0e d0 01 03 e7 03  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0x1f5d7c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 43 0b 00 00 00   |...A...A...C....|
0x1f5d8c:   30 00 00 00 2c 19 00 00  78 c7 00 00 67 01 00 00   |0...,...x...g...|
0x1f5d9c:   04 45 2e 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.E...A....A....C|
0x1f5dac:   0e 40 02 4b 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 46   |.@.K...A...A...F|
0x1f5dbc:   0b 00 00 00 24 00 00 00  08 1d 00 00 54 f3 ff ff   |....$.......T...|
0x1f5dcc:   8a 00 00 00 00 43 0e 30  46 86 03 46 83 04 53 87   |.....C.0F..F..S.|
0x1f5ddc:   02 7b 0a 0e 04 c7 c6 c3  43 0b 00 00 40 00 00 00   |.{......C...@...|
0x1f5dec:   88 19 00 00 8c c8 00 00  25 01 00 00 04 5c 2e 00   |........%....\..|
0x1f5dfc:   00 41 0e 08 85 02 46 0e  0c 87 03 41 0e 10 86 04   |.A....F....A....|
0x1f5e0c:   41 0e 14 83 05 43 0e 50  02 b2 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x1f5e1c:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x1f5e2c:   28 00 00 00 74 1d 00 00  78 c9 00 00 8c 01 00 00   |(...t...x.......|
0x1f5e3c:   00 43 0e 60 48 87 03 48  83 05 54 86 04 4d 85 02   |.C.`H..H..T..M..|
0x1f5e4c:   02 7e 0a 0e 04 c5 c7 c6  c3 46 0b 00 34 00 00 00   |.~.......F..4...|
0x1f5e5c:   a0 1d 00 00 dc ca 00 00  54 00 00 00 00 41 0e 08   |........T....A..|
0x1f5e6c:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x1f5e7c:   45 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |E...A...A...A...|
0x1f5e8c:   41 0b 00 00 20 00 00 00  d8 1d 00 00 04 cb 00 00   |A... ...........|
0x1f5e9c:   48 01 00 00 00 41 0e 08  83 02 43 0e 50 02 87 0a   |H....A....C.P...|
0x1f5eac:   0e 08 41 0e 04 c3 44 0b  2c 00 00 00 fc 1d 00 00   |..A...D.,.......|
0x1f5ebc:   f0 f2 ff ff 78 00 00 00  00 41 0e 08 86 02 43 0e   |....x....A....C.|
0x1f5ecc:   0c 83 03 45 0e 40 02 62  0a 0e 0c 41 0e 08 c3 41   |...E.@.b...A...A|
0x1f5edc:   0e 04 c6 41 0b 00 00 00  2c 00 00 00 84 1a 00 00   |...A....,.......|
0x1f5eec:   40 f3 ff ff 73 01 00 00  04 84 2e 00 00 43 0e 70   |@...s........C.p|
0x1f5efc:   48 83 05 48 86 04 46 87  03 53 85 02 6f 0a 0e 04   |H..H..F..S..o...|
0x1f5f0c:   c5 c7 c6 c3 45 0b 00 00  2c 00 00 00 b4 1a 00 00   |....E...,.......|
0x1f5f1c:   d0 cb 00 00 19 01 00 00  04 b8 2e 00 00 43 0e 60   |.............C.`|
0x1f5f2c:   48 86 04 59 83 05 4a 87  03 48 85 02 02 72 0a 0e   |H..Y..J..H...r..|
0x1f5f3c:   04 c5 c7 c6 c3 48 0b 00  3c 00 00 00 8c 1e 00 00   |.....H..<.......|
0x1f5f4c:   c0 cc 00 00 7b 01 00 00  00 41 0e 08 85 02 41 0e   |....{....A....A.|
0x1f5f5c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x1f5f6c:   02 e7 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x1f5f7c:   c7 41 0e 04 c5 43 0b 00  28 00 00 00 cc 1e 00 00   |.A...C..(.......|
0x1f5f8c:   00 ce 00 00 f7 02 00 00  00 43 0e 80 01 4b 85 02   |.........C...K..|
0x1f5f9c:   4b 86 04 64 87 03 4e 83  05 02 f6 0a 0e 04 c5 c7   |K..d..N.........|
0x1f5fac:   c6 c3 47 0b 40 00 00 00  50 1b 00 00 d4 d0 00 00   |..G.@...P.......|
0x1f5fbc:   a6 02 00 00 04 d8 2e 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x1f5fcc:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x1f5fdc:   03 83 02 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x1f5fec:   08 c7 41 0e 04 c5 41 0b  44 00 00 00 94 1b 00 00   |..A...A.D.......|
0x1f5ffc:   b0 f3 ff ff 1e 03 00 00  04 ec 2e 00 00 41 0e 08   |.............A..|
0x1f600c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f601c:   05 46 0e f0 01 03 66 02  0a 0e 14 41 0e 10 c3 41   |.F....f....A...A|
0x1f602c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 44 0b 00 00 00   |...A...A...D....|
0x1f603c:   34 00 00 00 84 1f 00 00  f8 d2 00 00 63 00 00 00   |4...........c...|
0x1f604c:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x1f605c:   43 0e 30 02 54 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.T...A...A...|
0x1f606c:   41 0e 04 c7 41 0b 00 00  44 00 00 00 bc 1f 00 00   |A...A...D.......|
0x1f607c:   30 d3 00 00 89 00 00 00  00 41 0e 08 87 02 41 0e   |0........A....A.|
0x1f608c:   0c 86 03 41 0e 10 83 04  43 0e 30 02 61 0a 0e 10   |...A....C.0.a...|
0x1f609c:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x1f60ac:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x1f60bc:   44 00 00 00 04 20 00 00  78 d3 00 00 89 00 00 00   |D.... ..x.......|
0x1f60cc:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x1f60dc:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x1f60ec:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x1f60fc:   08 c6 41 0e 04 c7 41 0b  30 00 00 00 a4 1c 00 00   |..A...A.0.......|
0x1f610c:   c0 d3 00 00 80 00 00 00  04 10 2f 00 00 41 0e 08   |........../..A..|
0x1f611c:   83 02 43 0e 40 7e 0a 0e  08 41 0e 04 c3 45 0b 50   |..C.@~...A...E.P|
0x1f612c:   0a 0e 08 41 0e 04 c3 41  0b 00 00 00 28 00 00 00   |...A...A....(...|
0x1f613c:   80 20 00 00 0c d4 00 00  40 01 00 00 00 43 0e 50   |. ......@....C.P|
0x1f614c:   5d 86 04 48 83 05 48 87  03 4d 85 02 02 80 0a 0e   |]..H..H..M......|
0x1f615c:   04 c5 c7 c6 c3 43 0b 00  3c 00 00 00 ac 20 00 00   |.....C..<.... ..|
0x1f616c:   20 d5 00 00 8d 01 00 00  00 41 0e 08 85 02 41 0e   | ........A....A.|
0x1f617c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x1f618c:   02 a7 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x1f619c:   c7 41 0e 04 c5 46 0b 00  28 00 00 00 ec 20 00 00   |.A...F..(.... ..|
0x1f61ac:   70 d6 00 00 c2 02 00 00  00 43 0e 60 48 87 03 48   |p........C.`H..H|
0x1f61bc:   83 05 54 86 04 4d 85 02  02 98 0a 0e 04 c5 c7 c6   |..T..M..........|
0x1f61cc:   c3 44 0b 00 44 00 00 00  70 1d 00 00 14 d9 00 00   |.D..D...p.......|
0x1f61dc:   78 06 00 00 04 20 2f 00  00 41 0e 08 85 02 41 0e   |x.... /..A....A.|
0x1f61ec:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 80   |...A....A....C..|
0x1f61fc:   01 03 08 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x1f620c:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 40 00 00 00   |...A...A....@...|
0x1f621c:   b8 1d 00 00 9c df 00 00  68 01 00 00 04 3c 2f 00   |........h....</.|
0x1f622c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f623c:   41 0e 14 83 05 43 0e 50  03 1b 01 0a 0e 14 41 0e   |A....C.P......A.|
0x1f624c:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 42 0b   |..A...A...A...B.|
0x1f625c:   40 00 00 00 fc 1d 00 00  c8 e0 00 00 6f 02 00 00   |@...........o...|
0x1f626c:   04 60 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.`/..A....A....A|
0x1f627c:   0e 10 86 04 41 0e 14 83  05 43 0e 60 03 e0 01 0a   |....A....C.`....|
0x1f628c:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x1f629c:   04 c5 41 0b 2c 00 00 00  40 1e 00 00 f4 e2 00 00   |..A.,...@.......|
0x1f62ac:   c6 01 00 00 04 90 2f 00  00 43 0e 50 48 83 05 50   |....../..C.PH..P|
0x1f62bc:   87 03 86 04 85 02 02 5b  0a 0e 04 c5 c7 c6 c3 42   |.......[.......B|
0x1f62cc:   0b 00 00 00 18 00 00 00  18 22 00 00 94 e4 00 00   |........."......|
0x1f62dc:   4b 00 00 00 00 43 0e 30  02 42 0a 0e 04 41 0b 00   |K....C.0.B...A..|
0x1f62ec:   28 00 00 00 34 22 00 00  c8 e4 00 00 95 01 00 00   |(...4"..........|
0x1f62fc:   00 43 0e 50 4d 83 05 54  86 04 55 85 02 87 03 03   |.C.PM..T..U.....|
0x1f630c:   2f 01 0a 0e 04 c5 c7 c6  c3 48 0b 00 3c 00 00 00   |/........H..<...|
0x1f631c:   60 22 00 00 3c e6 00 00  15 02 00 00 00 41 0e 08   |`"..<........A..|
0x1f632c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f633c:   05 43 0e 50 03 24 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.P.$....A...A.|
0x1f634c:   0c c6 41 0e 08 c7 41 0e  04 c5 49 0b 40 00 00 00   |..A...A...I.@...|
0x1f635c:   f8 1e 00 00 1c e8 00 00  1e 01 00 00 04 c0 2f 00   |............../.|
0x1f636c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f637c:   41 0e 14 83 05 43 0e 50  02 9f 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x1f638c:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 46 0b 00   |.A...A...A...F..|
0x1f639c:   28 00 00 00 e4 22 00 00  f8 e8 00 00 ca 00 00 00   |(...."..........|
0x1f63ac:   00 43 0e 40 48 83 05 54  87 03 48 86 04 52 85 02   |.C.@H..T..H..R..|
0x1f63bc:   02 77 0a 0e 04 c5 c7 c6  c3 48 0b 00 40 00 00 00   |.w.......H..@...|
0x1f63cc:   68 1f 00 00 9c e9 00 00  fa 00 00 00 04 e4 2f 00   |h............./.|
0x1f63dc:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f63ec:   41 0e 14 83 05 43 0e 40  02 a2 0a 0e 14 41 0e 10   |A....C.@.....A..|
0x1f63fc:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x1f640c:   3c 00 00 00 54 23 00 00  58 ea 00 00 f7 00 00 00   |<...T#..X.......|
0x1f641c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f642c:   41 0e 14 83 05 43 0e 40  02 e4 0a 0e 14 41 0e 10   |A....C.@.....A..|
0x1f643c:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x1f644c:   2c 00 00 00 ec 1f 00 00  18 eb 00 00 8f 01 00 00   |,...............|
0x1f645c:   04 0c 30 00 00 43 0e 50  48 85 02 48 83 05 5d 87   |..0..C.PH..H..].|
0x1f646c:   03 86 04 02 c0 0a 0e 04  c5 c7 c6 c3 48 0b 00 00   |............H...|
0x1f647c:   2c 00 00 00 1c 20 00 00  c8 ec 00 00 0c 0c 00 00   |,.... ..........|
0x1f648c:   04 34 30 00 00 46 0e 90  01 4b 83 05 61 85 02 86   |.40..F...K..a...|
0x1f649c:   04 4f 87 03 02 87 0a 0e  04 c5 c7 c6 c3 48 0b 00   |.O...........H..|
0x1f64ac:   40 00 00 00 4c 20 00 00  88 fa 00 00 60 02 00 00   |@...L ......`...|
0x1f64bc:   04 87 30 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |..0..A....A....A|
0x1f64cc:   0e 10 86 04 41 0e 14 83  05 43 0e 50 03 3d 01 0a   |....A....C.P.=..|
0x1f64dc:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x1f64ec:   04 c5 48 0b 44 00 00 00  90 20 00 00 f4 fc 00 00   |..H.D.... ......|
0x1f64fc:   50 05 00 00 04 a8 30 00  00 41 0e 08 85 02 41 0e   |P.....0..A....A.|
0x1f650c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e c0   |...A....A....F..|
0x1f651c:   02 03 b7 02 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x1f652c:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 40 00 00 00   |...A...A....@...|
0x1f653c:   80 24 00 00 fc 01 01 00  32 02 00 00 00 41 0e 08   |.$......2....A..|
0x1f654c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f655c:   05 43 0e 80 01 03 c3 01  0a 0e 14 41 0e 10 c3 41   |.C.........A...A|
0x1f656c:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 4a 0b 00 00 00   |...A...A...J....|
0x1f657c:   40 00 00 00 c4 24 00 00  f8 03 01 00 8a 02 00 00   |@....$..........|
0x1f658c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f659c:   41 0e 14 83 05 43 0e 90  01 03 5c 02 0a 0e 14 41   |A....C....\....A|
0x1f65ac:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 49   |...A...A...A...I|
0x1f65bc:   0b 00 00 00 3c 00 00 00  08 25 00 00 44 06 01 00   |....<....%..D...|
0x1f65cc:   95 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x1f65dc:   0e 10 86 04 41 0e 14 83  05 43 0e 40 02 82 0a 0e   |....A....C.@....|
0x1f65ec:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x1f65fc:   c5 43 0b 00 40 00 00 00  48 25 00 00 a4 06 01 00   |.C..@...H%......|
0x1f660c:   20 0d 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   | ....A....A....A|
0x1f661c:   0e 10 86 04 41 0e 14 83  05 46 0e e0 04 03 c3 03   |....A....F......|
0x1f662c:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x1f663c:   0e 04 c5 47 0b 00 00 00  28 00 00 00 8c 25 00 00   |...G....(....%..|
0x1f664c:   80 13 01 00 73 02 00 00  00 46 0e a0 01 55 87 03   |....s....F...U..|
0x1f665c:   4e 83 05 4e 86 04 57 85  02 02 78 0a 0e 04 c5 c7   |N..N..W...x.....|
0x1f666c:   c6 c3 42 0b 3c 00 00 00  b8 25 00 00 d4 15 01 00   |..B.<....%......|
0x1f667c:   f5 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x1f668c:   0e 10 86 04 41 0e 14 83  05 43 0e 50 79 0a 0e 14   |....A....C.Py...|
0x1f669c:   41 0e 10 c3 41 0e 0c c6  41 0e 08 c7 41 0e 04 c5   |A...A...A...A...|
0x1f66ac:   44 0b 00 00 2c 00 00 00  50 22 00 00 94 16 01 00   |D...,...P"......|
0x1f66bc:   1a 01 00 00 04 00 31 00  00 43 0e 70 64 83 05 85   |......1..C.pd...|
0x1f66cc:   02 4e 86 04 48 87 03 02  b5 0a 0e 04 c5 c7 c6 c3   |.N..H...........|
0x1f66dc:   41 0b 00 00 44 00 00 00  80 22 00 00 84 17 01 00   |A...D...."......|
0x1f66ec:   19 06 00 00 04 14 31 00  00 41 0e 08 85 02 41 0e   |......1..A....A.|
0x1f66fc:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e e0   |...A....A....F..|
0x1f670c:   01 03 1c 04 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x1f671c:   0e 08 c7 41 0e 04 c5 46  0b 00 00 00 3c 00 00 00   |...A...F....<...|
0x1f672c:   70 26 00 00 5c 1d 01 00  7e 01 00 00 00 41 0e 08   |p&..\...~....A..|
0x1f673c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x1f674c:   05 43 0e 80 01 02 e4 0a  0e 14 41 0e 10 c3 41 0e   |.C........A...A.|
0x1f675c:   0c c6 41 0e 08 c7 41 0e  04 c5 41 0b 40 00 00 00   |..A...A...A.@...|
0x1f676c:   08 23 00 00 5c ef ff ff  c2 08 00 00 04 2f 31 00   |.#..\......../1.|
0x1f677c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x1f678c:   41 0e 14 83 05 48 0e b0  05 02 46 0a 0e 14 41 0e   |A....H....F...A.|
0x1f679c:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 42 0b   |..A...A...A...B.|
0x1f67ac:   18 00 00 00 f4 26 00 00  58 1e 01 00 23 01 00 00   |.....&..X...#...|
0x1f67bc:   00 43 0e 30 02 e5 0a 0e  04 41 0b 00 ??            |.C.0.....A..?   |

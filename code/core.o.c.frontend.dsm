;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:05:05
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj.isra.130 at 0x0 -- 0x3
0x0:       83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x3 -- 0x10
0x3:       65 8b 15 14 00 00 00 89  54 24 1c 31 d2            |e.......T$.1.   |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x10 -- 0x11
; data inside code section at 0x11 -- 0x18
0x11:      c0 74 08 89 04 24 e8                               |.t...$.         |
; dynamically linked function: _ZdlPv at 0x18 -- 0x19
; data inside code section at 0x19 -- 0x31
0x19:      ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 04   |....D$.e3.....u.|
0x29:      83 c4 2c c3 8d 76 00 e8                            |..,..v..        |
; dynamically linked function: __stack_chk_fail at 0x31 -- 0x32
; data inside code section at 0x32 -- 0x40
0x32:      ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZNK12CTransaction11IsNewerThanERKS_ at 0x40 -- 0x41
; data inside code section at 0x41 -- 0x6c
0x41:      57 56 53 83 ec 6c 8b 94  24 80 00 00 00 8b 84 24   |WVS..l..$......$|
0x51:      84 00 00 00 65 8b 0d 14  00 00 00 89 4c 24 5c 31   |....e.......L$\1|
0x61:      c9 8b 4a 04 8b 58 04 8b  52 08 8b                  |..J..X..R..     |
; function: function_6c at 0x6c -- 0x72
0x6c:      40                                 	inc eax
0x6d:      08 29                              	or byte ptr [ecx], ch
0x6f:      ca 29 d8                           	retf -0x27d7
; function: function_72 at 0x72 -- 0x10c
0x72:      c1 f8 02                           	sar eax, 2
0x75:      c1 fa 02                           	sar edx, 2
0x78:      69 f0 c5 4e ec c4                  	imul esi, eax, 0xc4ec4ec5
0x7e:      31 c0                              	xor eax, eax
0x80:      69 d2 c5 4e ec c4                  	imul edx, edx, 0xc4ec4ec5
0x86:      39 f2                              	cmp edx, esi
0x88:      74 26                              	je 0xb0 <function_72+0x3e>
0x8a:      8d b6 00 00 00 00                  	lea esi, [esi]
0x90:      8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x94:      65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x9b:      0f 85 1f 01 00 00                  	jne 0x1c0 <function_72+0x96>
0xa1:      83 c4 6c                           	add esp, 0x6c
0xa4:      5b                                 	pop ebx
0xa5:      5e                                 	pop esi
0xa6:      5f                                 	pop edi
0xa7:      5d                                 	pop ebp
0xa8:      c3                                 	ret 
; data inside code section at 0xa9 -- 0xb0
0xa9:      8d b4 26 00 00 00 00                               |..&....         |
0xb0:      85 d2                              	test edx, edx
0xb2:      74 dc                              	je 0x90 <function_72+0x1e>
0xb4:      31 ed                              	xor ebp, ebp
0xb6:      c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xbe:      8d 34 2b                           	lea esi, [ebx + ebp]
0xc1:      8b 06                              	mov eax, dword ptr [esi]
0xc3:      8d 3c 29                           	lea edi, [ecx + ebp]
0xc6:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0xca:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xce:      8b 46 04                           	mov eax, dword ptr [esi + 4]
0xd1:      89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0xd5:      8b 46 08                           	mov eax, dword ptr [esi + 8]
0xd8:      89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xdc:      8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xdf:      89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0xe3:      8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xe6:      89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xea:      8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xed:      89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0xf1:      8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf4:      89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0xf8:      8b 46 1c                           	mov eax, dword ptr [esi + 0x1c]
0xfb:      89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0xff:      8b 07                              	mov eax, dword ptr [edi]
0x101:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x105:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0x108:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
; data inside code section at 0x10c -- 0x134
0x10c:     8b 47 08 89 44 24 24 8b  47 0c 89 44 24 28 8b 47   |.G..D$$.G..D$(.G|
0x11c:     10 89 44 24 2c 8b 47 14  89 44 24 30 8b 47 18 89   |..D$,.G..D$0.G..|
0x12c:     44 24 34 8b 47 1c 89 44                            |D$4.G..D        |
; function: function_134 at 0x134 -- 0x1c0
0x134:     24 38                              	and al, 0x38
0x136:     31 c0                              	xor eax, eax
0x138:     8b 54 84 3c                        	mov edx, dword ptr [esp + eax*4 + 0x3c]
0x13c:     39 54 84 1c                        	cmp dword ptr [esp + eax*4 + 0x1c], edx
0x140:     75 14                              	jne 0x156 <function_134+0x22>
0x142:     83 c0 01                           	add eax, 1
0x145:     83 f8 08                           	cmp eax, 8
0x148:     75 ee                              	jne 0x138 <function_134+0x4>
0x14a:     8b 46 20                           	mov eax, dword ptr [esi + 0x20]
0x14d:     39 47 20                           	cmp dword ptr [edi + 0x20], eax
0x150:     8b 54 24 04                        	mov edx, dword ptr [esp + 4]
0x154:     74 0a                              	je 0x160 <function_134+0x2c>
0x156:     31 c0                              	xor eax, eax
0x158:     e9 33 ff ff ff                     	jmp 0x90
; data inside code section at 0x15d -- 0x160
0x15d:     8d 76 00                                           |.v.             |
0x160:     83 44 24 08 01                     	add dword ptr [esp + 8], 1
0x165:     83 c5 34                           	add ebp, 0x34
0x168:     39 54 24 08                        	cmp dword ptr [esp + 8], edx
0x16c:     0f 85 4c ff ff ff                  	jne 0xbe
0x172:     bf ff ff ff ff                     	mov edi, 0xffffffff
0x177:     31 c0                              	xor eax, eax
0x179:     89 fd                              	mov ebp, edi
0x17b:     31 f6                              	xor esi, esi
0x17d:     88 44 24 0f                        	mov byte ptr [esp + 0xf], al
0x181:     31 ff                              	xor edi, edi
0x183:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x187:     90                                 	nop 
0x188:     8b 54 31 30                        	mov edx, dword ptr [ecx + esi + 0x30]
0x18c:     8b 44 33 30                        	mov eax, dword ptr [ebx + esi + 0x30]
0x190:     39 c2                              	cmp edx, eax
0x192:     74 16                              	je 0x1aa <function_134+0x76>
0x194:     39 ea                              	cmp edx, ebp
0x196:     77 07                              	ja 0x19f <function_134+0x6b>
0x198:     89 d5                              	mov ebp, edx
0x19a:     c6 44 24 0f 00                     	mov byte ptr [esp + 0xf], 0
0x19f:     39 c5                              	cmp ebp, eax
0x1a1:     76 07                              	jbe 0x1aa <function_134+0x76>
0x1a3:     89 c5                              	mov ebp, eax
0x1a5:     c6 44 24 0f 01                     	mov byte ptr [esp + 0xf], 1
0x1aa:     83 c7 01                           	add edi, 1
0x1ad:     83 c6 34                           	add esi, 0x34
0x1b0:     39 7c 24 08                        	cmp dword ptr [esp + 8], edi
0x1b4:     75 d2                              	jne 0x188 <function_134+0x54>
0x1b6:     0f b6 44 24 0f                     	movzx eax, byte ptr [esp + 0xf]
0x1bb:     e9 d0 fe ff ff                     	jmp 0x90
; data inside code section at 0x1c0 -- 0x1c1
0x1c0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1c1 -- 0x1c2
; data inside code section at 0x1c2 -- 0x1d0
0x1c2:     ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN16CTxOutCompressor14CompressAmountEy at 0x1d0 -- 0x20e
0x1d0:     55                                 	push ebp
0x1d1:     57                                 	push edi
0x1d2:     56                                 	push esi
0x1d3:     53                                 	push ebx
0x1d4:     83 ec 3c                           	sub esp, 0x3c
0x1d7:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1db:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1df:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e5:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1e9:     31 c0                              	xor eax, eax
0x1eb:     89 da                              	mov edx, ebx
0x1ed:     09 f2                              	or edx, esi
0x1ef:     0f 84 03 01 00 00                  	je 0x2f8 <function_2f8>
0x1f5:     c7 44 24 08 0a 00 00 00            	mov dword ptr [esp + 8], 0xa
0x1fd:     31 ff                              	xor edi, edi
0x1ff:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x207:     89 34 24                           	mov dword ptr [esp], esi
0x20a:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
; data inside code section at 0x20e -- 0x20f
0x20e:     e8                                                 |.               |
; dynamically linked function: __umoddi3 at 0x20f -- 0x210
; data inside code section at 0x210 -- 0x212
0x210:     ff ff                                              |..              |
; function: function_212 at 0x212 -- 0x217
0x212:     ff 09                              	dec dword ptr [ecx]
0x214:     c2 74 0e                           	ret 0xe74
; function: function_217 at 0x217 -- 0x219
0x217:     eb 77                              	jmp 0x290 <function_290>
; data inside code section at 0x219 -- 0x240
0x219:     8d b4 26 00 00 00 00 83  ff 08 7f 43 89 34 24 83   |..&........C.4$.|
0x229:     c7 01 89 5c 24 04 c7 44  24 08 0a 00 00 00 c7 44   |...\$..D$......D|
0x239:     24 0c 00 00 00 00 e8                               |$......         |
; dynamically linked function: __udivdi3 at 0x240 -- 0x241
; data inside code section at 0x241 -- 0x260
0x241:     ff ff ff c7 44 24 08 0a  00 00 00 c7 44 24 0c 00   |....D$......D$..|
0x251:     00 00 00 89 04 24 89 c6  89 d3 89 54 24 04 e8      |.....$.....T$.. |
; dynamically linked function: __umoddi3 at 0x260 -- 0x261
; data inside code section at 0x261 -- 0x263
0x261:     ff ff                                              |..              |
; function: function_263 at 0x263 -- 0x268
0x263:     ff 09                              	dec dword ptr [ecx]
0x265:     c2 74 b8                           	ret 0xb874
; data inside code section at 0x268 -- 0x279
0x268:     83 ff 08 7e 23 b8 0a 00  00 00 6b db 0a f7 e6 01   |...~#.....k.....|
0x278:     da                                                 |.               |
; function: function_279 at 0x279 -- 0x28e
0x279:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x27d:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x284:     75 7b                              	jne 0x301 <function_301>
0x286:     83 c4 3c                           	add esp, 0x3c
0x289:     5b                                 	pop ebx
0x28a:     5e                                 	pop esi
0x28b:     5f                                 	pop edi
0x28c:     5d                                 	pop ebp
0x28d:     c3                                 	ret 
; data inside code section at 0x28e -- 0x290
0x28e:     66 90                                              |f.              |
; function: function_290 at 0x290 -- 0x2cc
0x290:     8d 50 ff                           	lea edx, [eax - 1]
0x293:     83 fa 08                           	cmp edx, 8
0x296:     77 6e                              	ja 0x306 <function_306>
0x298:     89 fd                              	mov ebp, edi
0x29a:     89 c1                              	mov ecx, eax
0x29c:     c1 fd 1f                           	sar ebp, 0x1f
0x29f:     83 c7 f7                           	add edi, -9
0x2a2:     83 d5 ff                           	adc ebp, -1
0x2a5:     89 34 24                           	mov dword ptr [esp], esi
0x2a8:     c1 f9 1f                           	sar ecx, 0x1f
0x2ab:     be 0a 00 00 00                     	mov esi, 0xa
0x2b0:     c7 44 24 08 0a 00 00 00            	mov dword ptr [esp + 8], 0xa
0x2b8:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x2c0:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x2c4:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x2c8:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
; data inside code section at 0x2cc -- 0x2cd
0x2cc:     e8                                                 |.               |
; dynamically linked function: __udivdi3 at 0x2cd -- 0x2ce
; data inside code section at 0x2ce -- 0x2d0
0x2ce:     ff ff                                              |..              |
; function: function_2d0 at 0x2d0 -- 0x2f2
0x2d0:     ff 8d 0c d2 ba 09                  	dec dword ptr [ebp + 0x9bad20c]
0x2d6:     00 00                              	add byte ptr [eax], al
0x2d8:     00 f7                              	add bh, dh
0x2da:     e2 01                              	loop 0x2dd
; data inside code section at 0x2dc -- 0x2dd
0x2dc:     ca                                                 |.               |
0x2dd:     03 44 24 18                        	add eax, dword ptr [esp + 0x18]
0x2e1:     13 54 24 1c                        	adc edx, dword ptr [esp + 0x1c]
0x2e5:     6b ca 0a                           	imul ecx, edx, 0xa
0x2e8:     f7 e6                              	mul esi
0x2ea:     01 ca                              	add edx, ecx
0x2ec:     01 f8                              	add eax, edi
0x2ee:     11 ea                              	adc edx, ebp
0x2f0:     eb 87                              	jmp 0x279 <function_279>
; data inside code section at 0x2f2 -- 0x2f8
0x2f2:     8d b6 00 00 00 00                                  |......          |
; function: function_2f8 at 0x2f8 -- 0x301
0x2f8:     31 c0                              	xor eax, eax
0x2fa:     31 d2                              	xor edx, edx
0x2fc:     e9 78 ff ff ff                     	jmp 0x279 <function_279>
; function: function_301 at 0x301 -- 0x302
; dynamically linked function: __stack_chk_fail at 0x302 -- 0x303
; data inside code section at 0x303 -- 0x306
0x303:     ff ff ff                                           |...             |
; function: function_306 at 0x306 -- 0x325
0x306:     c7 44 24 0c 20 4c 00 00            	mov dword ptr [esp + 0xc], 0x4c20 ; "static uint64 CTxOutCompressor::CompressAmount(uint64)"
0x30e:     c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0x316:     c7 44 24 04 11 31 00 00            	mov dword ptr [esp + 4], 0x3111 ; "core.cpp"
0x31e:     c7 04 24 1a 31 00 00               	mov dword ptr [esp], 0x311a ; "d >= 1 && d <= 9"
; data inside code section at 0x325 -- 0x326
0x325:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x326 -- 0x327
; data inside code section at 0x327 -- 0x330
0x327:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZN16CTxOutCompressor16DecompressAmountEy at 0x330 -- 0x386
0x330:     57                                 	push edi
0x331:     56                                 	push esi
0x332:     53                                 	push ebx
0x333:     83 ec 30                           	sub esp, 0x30
0x336:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x33a:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x33e:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x345:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x349:     31 c9                              	xor ecx, ecx
0x34b:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x353:     89 d6                              	mov esi, edx
0x355:     09 c6                              	or esi, eax
0x357:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x35f:     0f 84 7d 00 00 00                  	je 0x3e2 <function_3e2>
0x365:     89 c6                              	mov esi, eax
0x367:     89 d7                              	mov edi, edx
0x369:     83 c6 ff                           	add esi, -1
0x36c:     83 d7 ff                           	adc edi, -1
0x36f:     89 34 24                           	mov dword ptr [esp], esi
0x372:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x376:     c7 44 24 08 0a 00 00 00            	mov dword ptr [esp + 8], 0xa
0x37e:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
; data inside code section at 0x386 -- 0x387
0x386:     e8                                                 |.               |
; dynamically linked function: __umoddi3 at 0x387 -- 0x388
; data inside code section at 0x388 -- 0x3a3
0x388:     ff ff ff 89 34 24 89 7c  24 04 c7 44 24 08 0a 00   |....4$.|$..D$...|
0x398:     00 00 c7 44 24 0c 00 00  00 00 89                  |...D$......     |
; function: function_3a3 at 0x3a3 -- 0x3a4
0x3a3:     c3                                 	ret 
; data inside code section at 0x3a4 -- 0x3a5
0x3a4:     e8                                                 |.               |
; dynamically linked function: __udivdi3 at 0x3a5 -- 0x3a6
; data inside code section at 0x3a6 -- 0x3c0
0x3a6:     ff ff ff 89 c6 83 c0 01  89 d7 83 d2 00 83 fb 09   |................|
0x3b6:     89 44 24 18 89 54 24 1c  75 40                     |.D$..T$.u@      |
; function: function_3c0 at 0x3c0 -- 0x3c1
; data inside code section at 0x3c1 -- 0x3cb
0x3c1:     0a 00 00 00 8d 76 00 8b  44 24                     |.....v..D$      |
; function: function_3cb at 0x3cb -- 0x3d7
0x3cb:     18 6b 4c                           	sbb byte ptr [ebx + 0x4c], ch
0x3ce:     24 1c                              	and al, 0x1c
0x3d0:     0a f7                              	or dh, bh
0x3d2:     e6 01                              	out 1, al
0x3d4:     ca 83 eb                           	retf -0x147d
; data inside code section at 0x3d7 -- 0x3e2
0x3d7:     01 89 44 24 18 89 54 24  1c 75 e6                  |..D$..T$.u.     |
; function: function_3e2 at 0x3e2 -- 0x3fe
0x3e2:     8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x3e6:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x3ed:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3f1:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3f5:     75 7e                              	jne 0x475 <function_3e2+0x1b>
0x3f7:     83 c4 30                           	add esp, 0x30
0x3fa:     5b                                 	pop ebx
0x3fb:     5e                                 	pop esi
0x3fc:     5f                                 	pop edi
0x3fd:     c3                                 	ret 
; data inside code section at 0x3fe -- 0x400
0x3fe:     66 90                                              |f.              |
; function: function_400 at 0x400 -- 0x475
0x400:     89 34 24                           	mov dword ptr [esp], esi
0x403:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x407:     c7 44 24 08 09 00 00 00            	mov dword ptr [esp + 8], 9
0x40f:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x417:     e8 fc ff ff ff                     	call 0x418
0x41c:     89 34 24                           	mov dword ptr [esp], esi
0x41f:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x423:     c7 44 24 08 09 00 00 00            	mov dword ptr [esp + 8], 9
0x42b:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x433:     83 c0 01                           	add eax, 1
0x436:     89 c2                              	mov edx, eax
0x438:     c1 fa 1f                           	sar edx, 0x1f
0x43b:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x43f:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x443:     e8 fc ff ff ff                     	call 0x444
0x448:     8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x44c:     8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x450:     6b ca 0a                           	imul ecx, edx, 0xa
0x453:     ba 0a 00 00 00                     	mov edx, 0xa
0x458:     f7 e2                              	mul edx
0x45a:     01 ca                              	add edx, ecx
0x45c:     01 c6                              	add esi, eax
0x45e:     11 d7                              	adc edi, edx
0x460:     85 db                              	test ebx, ebx
0x462:     89 74 24 18                        	mov dword ptr [esp + 0x18], esi
0x466:     89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0x46a:     0f 85 50 ff ff ff                  	jne 0x3c0 <function_3c0>
0x470:     e9 6d ff ff ff                     	jmp 0x3e2 <function_3e2>
; data inside code section at 0x475 -- 0x476
0x475:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x476 -- 0x477
; data inside code section at 0x477 -- 0x480
0x477:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZNK6CCoins12CalcMaskSizeERjS0_ at 0x480 -- 0x578
0x480:     55                                 	push ebp
0x481:     57                                 	push edi
0x482:     56                                 	push esi
0x483:     53                                 	push ebx
0x484:     83 ec 3c                           	sub esp, 0x3c
0x487:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x48b:     8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x48f:     8b 5c 24 58                        	mov ebx, dword ptr [esp + 0x58]
0x493:     8b 68 04                           	mov ebp, dword ptr [eax + 4]
0x496:     8b 70 08                           	mov esi, dword ptr [eax + 8]
0x499:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x49d:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x4a4:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x4a8:     31 d2                              	xor edx, edx
0x4aa:     89 5c 24 14                        	mov dword ptr [esp + 0x14], ebx
0x4ae:     29 ee                              	sub esi, ebp
0x4b0:     c1 fe 02                           	sar esi, 2
0x4b3:     69 f6 cd cc cc cc                  	imul esi, esi, 0xcccccccd
0x4b9:     83 fe 02                           	cmp esi, 2
0x4bc:     0f 86 ac 00 00 00                  	jbe 0x56e <_ZNK6CCoins12CalcMaskSizeERjS0_+0xee>
0x4c2:     c7 44 24 10 01 00 00 00            	mov dword ptr [esp + 0x10], 1
0x4ca:     31 db                              	xor ebx, ebx
0x4cc:     c7 44 24 0c 08 00 00 00            	mov dword ptr [esp + 0xc], 8
0x4d4:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x4dc:     eb 0a                              	jmp 0x4e8 <_ZNK6CCoins12CalcMaskSizeERjS0_+0x68>
; data inside code section at 0x4de -- 0x4e0
0x4de:     66 90                                              |f.              |
0x4e0:     8b 5c 24 0c                        	mov ebx, dword ptr [esp + 0xc]
0x4e4:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x4e8:     8d 04 9b                           	lea eax, [ebx + ebx*4]
0x4eb:     31 d2                              	xor edx, edx
0x4ed:     8d 0c 85 28 00 00 00               	lea ecx, [eax*4 + 0x28]
0x4f4:     b8 01 00 00 00                     	mov eax, 1
0x4f9:     8d 7b 02                           	lea edi, [ebx + 2]
0x4fc:     8d 1c 17                           	lea ebx, [edi + edx]
0x4ff:     39 f3                              	cmp ebx, esi
0x501:     73 1e                              	jae 0x521 <_ZNK6CCoins12CalcMaskSizeERjS0_+0xa1>
0x503:     8b 5c 0d 00                        	mov ebx, dword ptr [ebp + ecx]
0x507:     23 5c 0d 04                        	and ebx, dword ptr [ebp + ecx + 4]
0x50b:     83 fb ff                           	cmp ebx, -1
0x50e:     bb 00 00 00 00                     	mov ebx, 0
0x513:     0f 45 c3                           	cmovne eax, ebx
0x516:     83 c2 01                           	add edx, 1
0x519:     83 c1 14                           	add ecx, 0x14
0x51c:     83 fa 08                           	cmp edx, 8
0x51f:     75 db                              	jne 0x4fc <_ZNK6CCoins12CalcMaskSizeERjS0_+0x7c>
0x521:     84 c0                              	test al, al
0x523:     75 13                              	jne 0x538 <_ZNK6CCoins12CalcMaskSizeERjS0_+0xb8>
0x525:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x529:     8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x52d:     83 00 01                           	add dword ptr [eax], 1
0x530:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x534:     8d 74 26 00                        	lea esi, [esi]
0x538:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x53c:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x540:     83 44 24 10 01                     	add dword ptr [esp + 0x10], 1
0x545:     83 c2 02                           	add edx, 2
0x548:     83 c0 08                           	add eax, 8
0x54b:     39 f2                              	cmp edx, esi
0x54d:     72 91                              	jb 0x4e0 <_ZNK6CCoins12CalcMaskSizeERjS0_+0x60>
0x54f:     8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x553:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x557:     01 03                              	add dword ptr [ebx], eax
0x559:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x55d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x564:     75 12                              	jne 0x578 <_ZNK6CCoins12CalcMaskSizeERjS0_+0xf6>
0x566:     83 c4 3c                           	add esp, 0x3c
0x569:     5b                                 	pop ebx
0x56a:     5e                                 	pop esi
0x56b:     5f                                 	pop edi
0x56c:     5d                                 	pop ebp
0x56d:     c3                                 	ret 
0x56e:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x576:     eb d7                              	jmp 0x54f <_ZNK6CCoins12CalcMaskSizeERjS0_+0xcf>
; data inside code section at 0x578 -- 0x579
0x578:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x579 -- 0x57a
; data inside code section at 0x57a -- 0x580
0x57a:     ff ff ff 90 66 90                                  |....f.          |
; function: _ZNK12CBlockHeader7GetHashEv at 0x580 -- 0x5ec
0x580:     56                                 	push esi
0x581:     53                                 	push ebx
0x582:     83 ec 44                           	sub esp, 0x44
0x585:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x589:     8d 74 24 1c                        	lea esi, [esp + 0x1c]
0x58d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x593:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x597:     31 c0                              	xor eax, eax
0x599:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x59d:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x5a5:     c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x5ad:     c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x5b5:     c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x5bd:     c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x5c5:     c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x5cd:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x5d5:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x5dd:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x5e1:     c7 44 24 04 50 00 00 00            	mov dword ptr [esp + 4], 0x50
0x5e9:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x5ec -- 0x5ed
0x5ec:     e8                                                 |.               |
; dynamically linked function: SHA256 at 0x5ed -- 0x5ee
; data inside code section at 0x5ee -- 0x5f0
0x5ee:     ff ff                                              |..              |
; function: function_5f0 at 0x5f0 -- 0x660
0x5f0:     ff c7                              	inc edi
0x5f2:     03 00                              	add eax, dword ptr [eax]
0x5f4:     00 00                              	add byte ptr [eax], al
0x5f6:     00 c7                              	add bh, al
0x5f8:     43                                 	inc ebx
0x5f9:     04 00                              	add al, 0
0x5fb:     00 00                              	add byte ptr [eax], al
0x5fd:     00 c7                              	add bh, al
0x5ff:     43                                 	inc ebx
0x600:     08 00                              	or byte ptr [eax], al
0x602:     00 00                              	add byte ptr [eax], al
0x604:     00 c7                              	add bh, al
0x606:     43                                 	inc ebx
0x607:     0c 00                              	or al, 0
0x609:     00 00                              	add byte ptr [eax], al
0x60b:     00 c7                              	add bh, al
0x60d:     43                                 	inc ebx
0x60e:     10 00                              	adc byte ptr [eax], al
0x610:     00 00                              	add byte ptr [eax], al
0x612:     00 c7                              	add bh, al
0x614:     43                                 	inc ebx
0x615:     14 00                              	adc al, 0
0x617:     00 00                              	add byte ptr [eax], al
0x619:     00 c7                              	add bh, al
0x61b:     43                                 	inc ebx
0x61c:     18 00                              	sbb byte ptr [eax], al
0x61e:     00 00                              	add byte ptr [eax], al
0x620:     00 c7                              	add bh, al
0x622:     43                                 	inc ebx
0x623:     1c 00                              	sbb al, 0
0x625:     00 00                              	add byte ptr [eax], al
0x627:     00 89 5c 24 08 c7                  	add byte ptr [ecx - 0x38f7dba4], cl
0x62d:     44                                 	inc esp
0x62e:     24 04                              	and al, 4
0x630:     20 00                              	and byte ptr [eax], al
0x632:     00 00                              	add byte ptr [eax], al
0x634:     89 34 24                           	mov dword ptr [esp], esi
0x637:     e8 fc ff ff ff                     	call 0x638
0x63c:     89 d8                              	mov eax, ebx
0x63e:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x642:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x649:     75 08                              	jne 0x653 <function_5f0+0x63>
0x64b:     83 c4 44                           	add esp, 0x44
0x64e:     5b                                 	pop ebx
0x64f:     5e                                 	pop esi
0x650:     c2 04 00                           	ret 4
0x653:     e8 fc ff ff ff                     	call 0x654
0x658:     90                                 	nop 
0x659:     8d b4 26 00 00 00 00               	lea esi, [esi]
; function: _ZN6CBlock17CheckMerkleBranchE7uint256RKSt6vectorIS0_SaIS0_EEi at 0x660 -- 0x78a
0x660:     55                                 	push ebp
0x661:     57                                 	push edi
0x662:     56                                 	push esi
0x663:     53                                 	push ebx
0x664:     81 ec 2c 01 00 00                  	sub esp, 0x12c
0x66a:     8b 94 24 68 01 00 00               	mov edx, dword ptr [esp + 0x168]
0x671:     8b 84 24 40 01 00 00               	mov eax, dword ptr [esp + 0x140]
0x678:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x67c:     8b 94 24 44 01 00 00               	mov edx, dword ptr [esp + 0x144]
0x683:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x687:     8b 84 24 64 01 00 00               	mov eax, dword ptr [esp + 0x164]
0x68e:     89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x692:     8b 94 24 48 01 00 00               	mov edx, dword ptr [esp + 0x148]
0x699:     89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x69d:     8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x6a4:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x6a8:     8b 94 24 50 01 00 00               	mov edx, dword ptr [esp + 0x150]
0x6af:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x6b3:     8b 94 24 54 01 00 00               	mov edx, dword ptr [esp + 0x154]
0x6ba:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x6be:     8b 94 24 58 01 00 00               	mov edx, dword ptr [esp + 0x158]
0x6c5:     89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x6c9:     8b 94 24 5c 01 00 00               	mov edx, dword ptr [esp + 0x15c]
0x6d0:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x6d4:     8b 94 24 60 01 00 00               	mov edx, dword ptr [esp + 0x160]
0x6db:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x6df:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x6e6:     89 94 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], edx
0x6ed:     31 d2                              	xor edx, edx
0x6ef:     83 7c 24 10 ff                     	cmp dword ptr [esp + 0x10], -1
0x6f4:     0f 84 82 03 00 00                  	je 0xa7c <function_a7c>
0x6fa:     8b 30                              	mov esi, dword ptr [eax]
0x6fc:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0x6ff:     39 c6                              	cmp esi, eax
0x701:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x705:     0f 84 9f 01 00 00                  	je 0x8aa <function_8aa>
0x70b:     8d 7e 20                           	lea edi, [esi + 0x20]
0x70e:     8d 5c 24 4c                        	lea ebx, [esp + 0x4c]
0x712:     8d ac 24 bc 00 00 00               	lea ebp, [esp + 0xbc]
0x719:     8d b4 26 00 00 00 00               	lea esi, [esi]
0x720:     f6 44 24 10 01                     	test byte ptr [esp + 0x10], 1
0x725:     0f 84 e5 01 00 00                  	je 0x910 <function_910>
0x72b:     89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x72f:     c7 84 24 bc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xbc], 0
0x73a:     c7 84 24 c0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc0], 0
0x745:     c7 84 24 c4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc4], 0
0x750:     c7 84 24 c8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc8], 0
0x75b:     c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x766:     c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x771:     c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x77c:     c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x787:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x78a -- 0x78b
0x78a:     e8                                                 |.               |
; dynamically linked function: SHA256_Init at 0x78b -- 0x78c
; data inside code section at 0x78c -- 0x79f
0x78c:     ff ff ff 89 f8 29 f0 89  44 24 08 89 74 24 04 89   |.....)..D$..t$..|
0x79c:     1c 24 e8                                           |.$.             |
; dynamically linked function: SHA256_Update at 0x79f -- 0x7a0
; data inside code section at 0x7a0 -- 0x7b7
0x7a0:     ff ff ff 8d 54 24 20 89  54 24 04 c7 44 24 08 20   |....T$ .T$..D$. |
0x7b0:     00 00 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: SHA256_Update at 0x7b7 -- 0x7b8
; data inside code section at 0x7b8 -- 0x7c3
0x7b8:     ff ff ff 89 5c 24 04 89  2c 24 e8                  |....\$..,$.     |
; dynamically linked function: SHA256_Final at 0x7c3 -- 0x7c4
; data inside code section at 0x7c4 -- 0x836
0x7c4:     ff ff ff 8d 84 24 dc 00  00 00 c7 84 24 dc 00 00   |.....$......$...|
0x7d4:     00 00 00 00 00 c7 84 24  e0 00 00 00 00 00 00 00   |.......$........|
0x7e4:     c7 84 24 e4 00 00 00 00  00 00 00 c7 84 24 e8 00   |..$..........$..|
0x7f4:     00 00 00 00 00 00 c7 84  24 ec 00 00 00 00 00 00   |........$.......|
0x804:     00 c7 84 24 f0 00 00 00  00 00 00 00 c7 84 24 f4   |...$..........$.|
0x814:     00 00 00 00 00 00 00 c7  84 24 f8 00 00 00 00 00   |.........$......|
0x824:     00 00 89 44 24 08 c7 44  24 04 20 00 00 00 89 2c   |...D$..D$. ....,|
0x834:     24 e8                                              |$.              |
; dynamically linked function: SHA256 at 0x836 -- 0x837
; data inside code section at 0x837 -- 0x892
0x837:     ff ff ff 8b 84 24 dc 00  00 00 89 44 24 20 8b 84   |.....$.....D$ ..|
0x847:     24 e0 00 00 00 89 44 24  24 8b 84 24 e4 00 00 00   |$.....D$$..$....|
0x857:     89 44 24 28 8b 84 24 e8  00 00 00 89 44 24 2c 8b   |.D$(..$.....D$,.|
0x867:     84 24 ec 00 00 00 89 44  24 30 8b 84 24 f0 00 00   |.$.....D$0..$...|
0x877:     00 89 44 24 34 8b 84 24  f4 00 00 00 89 44 24 38   |..D$4..$.....D$8|
0x887:     8b 84 24 f8 00 00 00 89  44 24 3c                  |..$.....D$<     |
; function: function_892 at 0x892 -- 0x893
; data inside code section at 0x893 -- 0x8aa
0x893:     54 24 14 83 c7 20 83 c6  20 d1 7c 24 10 39 54 24   |T$... .. .|$.9T$|
0x8a3:     18 0f 85 76 fe ff ff                               |...v...         |
; function: function_8aa at 0x8aa -- 0x90a
0x8aa:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x8ae:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x8b2:     89 02                              	mov dword ptr [edx], eax
0x8b4:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x8b8:     89 42 04                           	mov dword ptr [edx + 4], eax
0x8bb:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x8bf:     89 42 08                           	mov dword ptr [edx + 8], eax
0x8c2:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x8c6:     89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x8c9:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x8cd:     89 42 10                           	mov dword ptr [edx + 0x10], eax
0x8d0:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x8d4:     89 42 14                           	mov dword ptr [edx + 0x14], eax
0x8d7:     8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x8db:     89 42 18                           	mov dword ptr [edx + 0x18], eax
0x8de:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x8e2:     89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x8e5:     8b 94 24 1c 01 00 00               	mov edx, dword ptr [esp + 0x11c]
0x8ec:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8f3:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x8f7:     0f 85 bf 01 00 00                  	jne 0xabc <function_abc>
0x8fd:     81 c4 2c 01 00 00                  	add esp, 0x12c
0x903:     5b                                 	pop ebx
0x904:     5e                                 	pop esi
0x905:     5f                                 	pop edi
0x906:     5d                                 	pop ebp
0x907:     c2 04 00                           	ret 4
; data inside code section at 0x90a -- 0x910
0x90a:     8d b6 00 00 00 00                                  |......          |
; function: function_910 at 0x910 -- 0x987
0x910:     89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x914:     c7 84 24 bc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xbc], 0
0x91f:     c7 84 24 c0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc0], 0
0x92a:     c7 84 24 c4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc4], 0
0x935:     c7 84 24 c8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc8], 0
0x940:     c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x94b:     c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x956:     c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x961:     c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x96c:     89 1c 24                           	mov dword ptr [esp], ebx
0x96f:     e8 fc ff ff ff                     	call 0x970
0x974:     8d 54 24 20                        	lea edx, [esp + 0x20]
0x978:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x97c:     c7 44 24 08 20 00 00 00            	mov dword ptr [esp + 8], 0x20
0x984:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x987 -- 0x988
0x987:     e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x988 -- 0x989
; data inside code section at 0x989 -- 0x99c
0x989:     ff ff ff 89 f8 29 f0 89  44 24 08 89 74 24 04 89   |.....)..D$..t$..|
0x999:     1c 24 e8                                           |.$.             |
; dynamically linked function: SHA256_Update at 0x99c -- 0x99d
; data inside code section at 0x99d -- 0x9a8
0x99d:     ff ff ff 89 5c 24 04 89  2c 24 e8                  |....\$..,$.     |
; dynamically linked function: SHA256_Final at 0x9a8 -- 0x9a9
; data inside code section at 0x9a9 -- 0xa1b
0x9a9:     ff ff ff 8d 84 24 fc 00  00 00 c7 84 24 fc 00 00   |.....$......$...|
0x9b9:     00 00 00 00 00 c7 84 24  00 01 00 00 00 00 00 00   |.......$........|
0x9c9:     c7 84 24 04 01 00 00 00  00 00 00 c7 84 24 08 01   |..$..........$..|
0x9d9:     00 00 00 00 00 00 c7 84  24 0c 01 00 00 00 00 00   |........$.......|
0x9e9:     00 c7 84 24 10 01 00 00  00 00 00 00 c7 84 24 14   |...$..........$.|
0x9f9:     01 00 00 00 00 00 00 c7  84 24 18 01 00 00 00 00   |.........$......|
0xa09:     00 00 89 44 24 08 c7 44  24 04 20 00 00 00 89 2c   |...D$..D$. ....,|
0xa19:     24 e8                                              |$.              |
; dynamically linked function: SHA256 at 0xa1b -- 0xa1c
; data inside code section at 0xa1c -- 0xa1e
0xa1c:     ff ff                                              |..              |
; function: function_a1e at 0xa1e -- 0xa7c
0xa1e:     ff 8b 84 24 fc 00                  	dec dword ptr [ebx + 0xfc2484]
0xa24:     00 00                              	add byte ptr [eax], al
0xa26:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xa2a:     8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0xa31:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xa35:     8b 84 24 04 01 00 00               	mov eax, dword ptr [esp + 0x104]
0xa3c:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0xa40:     8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0xa47:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xa4b:     8b 84 24 0c 01 00 00               	mov eax, dword ptr [esp + 0x10c]
0xa52:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xa56:     8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0xa5d:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xa61:     8b 84 24 14 01 00 00               	mov eax, dword ptr [esp + 0x114]
0xa68:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xa6c:     8b 84 24 18 01 00 00               	mov eax, dword ptr [esp + 0x118]
0xa73:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa77:     e9 16 fe ff ff                     	jmp 0x892 <function_892>
; function: function_a7c at 0xa7c -- 0xabc
0xa7c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xa80:     c7 00 00 00 00 00                  	mov dword ptr [eax], 0
0xa86:     c7 40 04 00 00 00 00               	mov dword ptr [eax + 4], 0
0xa8d:     c7 40 08 00 00 00 00               	mov dword ptr [eax + 8], 0
0xa94:     c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0xa9b:     c7 40 10 00 00 00 00               	mov dword ptr [eax + 0x10], 0
0xaa2:     c7 40 14 00 00 00 00               	mov dword ptr [eax + 0x14], 0
0xaa9:     c7 40 18 00 00 00 00               	mov dword ptr [eax + 0x18], 0
0xab0:     c7 40 1c 00 00 00 00               	mov dword ptr [eax + 0x1c], 0
0xab7:     e9 29 fe ff ff                     	jmp 0x8e5
; function: function_abc at 0xabc -- 0xabd
; dynamically linked function: __stack_chk_fail at 0xabd -- 0xabe
; data inside code section at 0xabe -- 0xad0
0xabe:     ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0xace:     00 00                                              |..              |
; function: CTxOut at 0xad0 -- 0xb39
0xad0:     83 ec 2c                           	sub esp, 0x2c
0xad3:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0xad7:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xadb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xae1:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xae5:     31 c0                              	xor eax, eax
0xae7:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xaeb:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0xaef:     8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0xaf3:     c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0xafa:     89 03                              	mov dword ptr [ebx], eax
0xafc:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xb00:     c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0xb07:     c7 43 10 00 00 00 00               	mov dword ptr [ebx + 0x10], 0
0xb0e:     89 53 04                           	mov dword ptr [ebx + 4], edx
0xb11:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xb15:     8d 43 08                           	lea eax, [ebx + 8]
0xb18:     89 04 24                           	mov dword ptr [esp], eax
0xb1b:     e8 20 2b 00 00                     	call 0x3640 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0xb20:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb24:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb2b:     75 0c                              	jne 0xb39 <CTxOut+0x68>
0xb2d:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0xb31:     8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0xb35:     83 c4 2c                           	add esp, 0x2c
0xb38:     c3                                 	ret 
; data inside code section at 0xb39 -- 0xb3a
0xb39:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb3a -- 0xb3b
; data inside code section at 0xb3b -- 0xb4c
0xb3b:     ff ff ff 89 c6 8b 43 08  e8 b8 f4 ff ff 89 34 24   |......C.......4$|
0xb4b:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xb4c -- 0xb4d
; data inside code section at 0xb4d -- 0xb50
0xb4d:     ff ff ff                                           |...             |
; function: CTxIn at 0xb50 -- 0xd05
0xb50:     81 ec ac 00 00 00                  	sub esp, 0xac
0xb56:     8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0xb5d:     8b 84 24 dc 00 00 00               	mov eax, dword ptr [esp + 0xdc]
0xb64:     89 9c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ebx
0xb6b:     8b 8c 24 c0 00 00 00               	mov ecx, dword ptr [esp + 0xc0]
0xb72:     8b 9c 24 b0 00 00 00               	mov ebx, dword ptr [esp + 0xb0]
0xb79:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xb7d:     8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0xb84:     89 b4 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], esi
0xb8b:     8b b4 24 bc 00 00 00               	mov esi, dword ptr [esp + 0xbc]
0xb92:     89 bc 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], edi
0xb99:     8b bc 24 b8 00 00 00               	mov edi, dword ptr [esp + 0xb8]
0xba0:     89 ac 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], ebp
0xba7:     8b ac 24 b4 00 00 00               	mov ebp, dword ptr [esp + 0xb4]
0xbae:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xbb2:     8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0xbb9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xbbd:     8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0xbc4:     89 7c 24 24                        	mov dword ptr [esp + 0x24], edi
0xbc8:     89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0xbcc:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xbd0:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xbd7:     89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0xbde:     31 d2                              	xor edx, edx
0xbe0:     8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0xbe7:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xbeb:     89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0xbef:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xbf3:     c7 43 24 00 00 00 00               	mov dword ptr [ebx + 0x24], 0
0xbfa:     c7 43 28 00 00 00 00               	mov dword ptr [ebx + 0x28], 0
0xc01:     c7 43 2c 00 00 00 00               	mov dword ptr [ebx + 0x2c], 0
0xc08:     89 6c 24 6c                        	mov dword ptr [esp + 0x6c], ebp
0xc0c:     89 7c 24 70                        	mov dword ptr [esp + 0x70], edi
0xc10:     89 74 24 74                        	mov dword ptr [esp + 0x74], esi
0xc14:     89 4c 24 78                        	mov dword ptr [esp + 0x78], ecx
0xc18:     89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0xc1c:     8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0xc23:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xc26:     89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0xc2d:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0xc31:     8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0xc38:     89 94 24 84 00 00 00               	mov dword ptr [esp + 0x84], edx
0xc3f:     8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0xc46:     89 2b                              	mov dword ptr [ebx], ebp
0xc48:     89 7b 04                           	mov dword ptr [ebx + 4], edi
0xc4b:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xc4e:     8b 84 24 d4 00 00 00               	mov eax, dword ptr [esp + 0xd4]
0xc55:     89 94 24 88 00 00 00               	mov dword ptr [esp + 0x88], edx
0xc5c:     8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0xc63:     89 73 08                           	mov dword ptr [ebx + 8], esi
0xc66:     89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0xc69:     89 43 20                           	mov dword ptr [ebx + 0x20], eax
0xc6c:     8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0xc73:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0xc77:     8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0xc7e:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xc82:     89 7c 24 4c                        	mov dword ptr [esp + 0x4c], edi
0xc86:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xc8a:     89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0xc8e:     8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0xc95:     89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0xc99:     89 54 24 64                        	mov dword ptr [esp + 0x64], edx
0xc9d:     8b 94 24 d4 00 00 00               	mov edx, dword ptr [esp + 0xd4]
0xca4:     89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0xca8:     8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0xcaf:     89 53 10                           	mov dword ptr [ebx + 0x10], edx
0xcb2:     8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0xcb9:     89 53 1c                           	mov dword ptr [ebx + 0x1c], edx
0xcbc:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xcc0:     8d 43 24                           	lea eax, [ebx + 0x24]
0xcc3:     89 04 24                           	mov dword ptr [esp], eax
0xcc6:     e8 75 29 00 00                     	call 0x3640 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0xccb:     8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0xcd2:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xcd9:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xcdd:     89 53 30                           	mov dword ptr [ebx + 0x30], edx
0xce0:     75 35                              	jne 0xd17 <function_d17>
0xce2:     8b 9c 24 9c 00 00 00               	mov ebx, dword ptr [esp + 0x9c]
0xce9:     8b b4 24 a0 00 00 00               	mov esi, dword ptr [esp + 0xa0]
0xcf0:     8b bc 24 a4 00 00 00               	mov edi, dword ptr [esp + 0xa4]
0xcf7:     8b ac 24 a8 00 00 00               	mov ebp, dword ptr [esp + 0xa8]
0xcfe:     81 c4 ac 00 00 00                  	add esp, 0xac
0xd04:     c3                                 	ret 
; data inside code section at 0xd05 -- 0xd13
0xd05:     89 c6 8b 43 24 e8 f1 f2  ff ff 89 34 24 e8         |...C$......4$.  |
; dynamically linked function: _Unwind_Resume at 0xd13 -- 0xd14
; data inside code section at 0xd14 -- 0xd17
0xd14:     ff ff ff                                           |...             |
; function: function_d17 at 0xd17 -- 0xd18
; dynamically linked function: __stack_chk_fail at 0xd18 -- 0xd19
; data inside code section at 0xd19 -- 0xd20
0xd19:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: CTxIn at 0xd20 -- 0xe31
0xd20:     83 ec 6c                           	sub esp, 0x6c
0xd23:     8b 84 24 9c 00 00 00               	mov eax, dword ptr [esp + 0x9c]
0xd2a:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0xd2e:     8b 94 24 84 00 00 00               	mov edx, dword ptr [esp + 0x84]
0xd35:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0xd39:     89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0xd3d:     8b 8c 24 80 00 00 00               	mov ecx, dword ptr [esp + 0x80]
0xd44:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xd48:     8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0xd4f:     89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0xd53:     8b 74 24 7c                        	mov esi, dword ptr [esp + 0x7c]
0xd57:     89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0xd5b:     8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
0xd5f:     8b 6c 24 74                        	mov ebp, dword ptr [esp + 0x74]
0xd63:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xd67:     8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0xd6e:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0xd72:     89 7c 24 20                        	mov dword ptr [esp + 0x20], edi
0xd76:     89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0xd7a:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xd7e:     8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0xd85:     89 4c 24 28                        	mov dword ptr [esp + 0x28], ecx
0xd89:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xd8d:     c7 43 24 00 00 00 00               	mov dword ptr [ebx + 0x24], 0
0xd94:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0xd98:     8b 84 24 94 00 00 00               	mov eax, dword ptr [esp + 0x94]
0xd9f:     c7 43 28 00 00 00 00               	mov dword ptr [ebx + 0x28], 0
0xda6:     c7 43 2c 00 00 00 00               	mov dword ptr [ebx + 0x2c], 0
0xdad:     89 2b                              	mov dword ptr [ebx], ebp
0xdaf:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xdb3:     89 7b 04                           	mov dword ptr [ebx + 4], edi
0xdb6:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xdbc:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xdc0:     31 c0                              	xor eax, eax
0xdc2:     89 73 08                           	mov dword ptr [ebx + 8], esi
0xdc5:     89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0xdc8:     8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0xdcf:     89 53 10                           	mov dword ptr [ebx + 0x10], edx
0xdd2:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xdd5:     8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0xddc:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xddf:     8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0xde6:     89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0xde9:     8b 84 24 94 00 00 00               	mov eax, dword ptr [esp + 0x94]
0xdf0:     89 43 20                           	mov dword ptr [ebx + 0x20], eax
0xdf3:     8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0xdfa:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xdfe:     8d 43 24                           	lea eax, [ebx + 0x24]
0xe01:     89 04 24                           	mov dword ptr [esp], eax
0xe04:     e8 37 28 00 00                     	call 0x3640 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0xe09:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0xe0d:     89 43 30                           	mov dword ptr [ebx + 0x30], eax
0xe10:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0xe14:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe1b:     75 26                              	jne 0xe43 <function_e43>
0xe1d:     8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0xe21:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xe25:     8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xe29:     8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0xe2d:     83 c4 6c                           	add esp, 0x6c
0xe30:     c3                                 	ret 
; data inside code section at 0xe31 -- 0xe3f
0xe31:     89 c6 8b 43 24 e8 c5 f1  ff ff 89 34 24 e8         |...C$......4$.  |
; dynamically linked function: _Unwind_Resume at 0xe3f -- 0xe40
; data inside code section at 0xe40 -- 0xe43
0xe40:     ff ff ff                                           |...             |
; function: function_e43 at 0xe43 -- 0xe44
; dynamically linked function: __stack_chk_fail at 0xe44 -- 0xe45
; data inside code section at 0xe45 -- 0xe50
0xe45:     ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _ZN6CCoins5SpendERK9COutPointR9CTxInUndo at 0xe50 -- 0xed8
0xe50:     55                                 	push ebp
0xe51:     57                                 	push edi
0xe52:     56                                 	push esi
0xe53:     53                                 	push ebx
0xe54:     83 ec 5c                           	sub esp, 0x5c
0xe57:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0xe5b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe61:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0xe65:     31 c0                              	xor eax, eax
0xe67:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0xe6b:     8b 74 24 78                        	mov esi, dword ptr [esp + 0x78]
0xe6f:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0xe72:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0xe75:     8b 57 20                           	mov edx, dword ptr [edi + 0x20]
0xe78:     29 c8                              	sub eax, ecx
0xe7a:     c1 f8 02                           	sar eax, 2
0xe7d:     69 c0 cd cc cc cc                  	imul eax, eax, 0xcccccccd
0xe83:     39 c2                              	cmp edx, eax
0xe85:     0f 83 3d 01 00 00                  	jae 0xfc8 <function_fc8>
0xe8b:     8d 04 92                           	lea eax, [edx + edx*4]
0xe8e:     8d 04 81                           	lea eax, [ecx + eax*4]
0xe91:     8b 08                              	mov ecx, dword ptr [eax]
0xe93:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0xe96:     89 cd                              	mov ebp, ecx
0xe98:     21 d5                              	and ebp, edx
0xe9a:     83 fd ff                           	cmp ebp, -1
0xe9d:     0f 84 25 01 00 00                  	je 0xfc8 <function_fc8>
0xea3:     8b 68 0c                           	mov ebp, dword ptr [eax + 0xc]
0xea6:     8b 40 08                           	mov eax, dword ptr [eax + 8]
0xea9:     89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0xead:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0xeb1:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0xeb9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xebd:     31 c0                              	xor eax, eax
0xebf:     2b 6c 24 1c                        	sub ebp, dword ptr [esp + 0x1c]
0xec3:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0xecb:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0xed3:     74 08                              	je 0xedd <function_edd>
0xed5:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0xed8 -- 0xed9
0xed8:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xed9 -- 0xeda
; data inside code section at 0xeda -- 0xedd
0xeda:     ff ff ff                                           |...             |
; function: function_edd at 0xedd -- 0xeff
0xedd:     8d 14 28                           	lea edx, [eax + ebp]
0xee0:     85 ed                              	test ebp, ebp
0xee2:     89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0xee6:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xeea:     74 1c                              	je 0xf08 <function_f08>
0xeec:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xef0:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0xef4:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0xef8:     89 04 24                           	mov dword ptr [esp], eax
0xefb:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
; data inside code section at 0xeff -- 0xf00
0xeff:     e8                                                 |.               |
; dynamically linked function: memmove at 0xf00 -- 0xf01
; data inside code section at 0xf01 -- 0xf08
0xf01:     ff ff ff 8b 54 24 18                               |....T$.         |
; function: function_f08 at 0xf08 -- 0xf62
0xf08:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xf0c:     89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0xf10:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0xf14:     c6 44 24 40 00                     	mov byte ptr [esp + 0x40], 0
0xf19:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0xf21:     89 06                              	mov dword ptr [esi], eax
0xf23:     8d 44 24 34                        	lea eax, [esp + 0x34]
0xf27:     89 56 04                           	mov dword ptr [esi + 4], edx
0xf2a:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xf2e:     8d 46 08                           	lea eax, [esi + 8]
0xf31:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0xf39:     89 04 24                           	mov dword ptr [esp], eax
0xf3c:     e8 ff 26 00 00                     	call 0x3640 <_ZNSt6vectorIhSaIhEEaSERKS1_>
0xf41:     0f b6 44 24 40                     	movzx eax, byte ptr [esp + 0x40]
0xf46:     88 46 14                           	mov byte ptr [esi + 0x14], al
0xf49:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0xf4d:     89 46 18                           	mov dword ptr [esi + 0x18], eax
0xf50:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0xf54:     89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0xf57:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0xf5b:     85 c0                              	test eax, eax
0xf5d:     74 08                              	je 0xf67 <function_f67>
0xf5f:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xf62 -- 0xf63
0xf62:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf63 -- 0xf64
; data inside code section at 0xf64 -- 0xf67
0xf64:     ff ff ff                                           |...             |
; function: function_f67 at 0xf67 -- 0xfc3
0xf67:     8b 47 20                           	mov eax, dword ptr [edi + 0x20]
0xf6a:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0xf6d:     8d 04 80                           	lea eax, [eax + eax*4]
0xf70:     8d 04 81                           	lea eax, [ecx + eax*4]
0xf73:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0xf76:     c7 00 ff ff ff ff                  	mov dword ptr [eax], 0xffffffff
0xf7c:     c7 40 04 ff ff ff ff               	mov dword ptr [eax + 4], 0xffffffff
0xf83:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xf86:     8b 7b 04                           	mov edi, dword ptr [ebx + 4]
0xf89:     8b 53 08                           	mov edx, dword ptr [ebx + 8]
0xf8c:     89 d0                              	mov eax, edx
0xf8e:     29 f8                              	sub eax, edi
0xf90:     c1 f8 02                           	sar eax, 2
0xf93:     69 c8 cd cc cc cc                  	imul ecx, eax, 0xcccccccd
0xf99:     85 c9                              	test ecx, ecx
0xf9b:     75 43                              	jne 0xfe0 <function_fe0>
0xf9d:     39 fa                              	cmp edx, edi
0xf9f:     74 67                              	je 0x1008 <function_1008>
0xfa1:     85 c9                              	test ecx, ecx
0xfa3:     b8 01 00 00 00                     	mov eax, 1
0xfa8:     75 20                              	jne 0xfca <function_fca>
0xfaa:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0xfad:     89 46 18                           	mov dword ptr [esi + 0x18], eax
0xfb0:     0f b6 03                           	movzx eax, byte ptr [ebx]
0xfb3:     88 46 14                           	mov byte ptr [esi + 0x14], al
0xfb6:     8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0xfb9:     89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0xfbc:     b8 01 00 00 00                     	mov eax, 1
0xfc1:     eb 07                              	jmp 0xfca <function_fca>
; data inside code section at 0xfc3 -- 0xfc8
0xfc3:     90 8d 74 26 00                                     |..t&.           |
; function: function_fc8 at 0xfc8 -- 0xfca
0xfc8:     31 c0                              	xor eax, eax
; function: function_fca at 0xfca -- 0xfdf
0xfca:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xfce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xfd5:     75 66                              	jne 0x103d <function_103d>
0xfd7:     83 c4 5c                           	add esp, 0x5c
0xfda:     5b                                 	pop ebx
0xfdb:     5e                                 	pop esi
0xfdc:     5f                                 	pop edi
0xfdd:     5d                                 	pop ebp
0xfde:     c3                                 	ret 
; data inside code section at 0xfdf -- 0xfe0
0xfdf:     90                                                 |.               |
; function: function_fe0 at 0xfe0 -- 0xffb
0xfe0:     8b 42 ec                           	mov eax, dword ptr [edx - 0x14]
0xfe3:     23 42 f0                           	and eax, dword ptr [edx - 0x10]
0xfe6:     83 f8 ff                           	cmp eax, -1
0xfe9:     75 b2                              	jne 0xf9d
0xfeb:     83 ea 14                           	sub edx, 0x14
0xfee:     89 53 08                           	mov dword ptr [ebx + 8], edx
0xff1:     8b 42 08                           	mov eax, dword ptr [edx + 8]
0xff4:     85 c0                              	test eax, eax
0xff6:     74 94                              	je 0xf8c
0xff8:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xffb -- 0xffc
0xffb:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xffc -- 0xffd
; data inside code section at 0xffd -- 0x1000
0xffd:     ff ff ff                                           |...             |
; function: function_1000 at 0x1000 -- 0x1002
0x1000:    eb 84                              	jmp 0xf86
; data inside code section at 0x1002 -- 0x1008
0x1002:    8d b6 00 00 00 00                                  |......          |
; function: function_1008 at 0x1008 -- 0x1024
0x1008:    85 d2                              	test edx, edx
0x100a:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x1011:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x1018:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x101f:    74 89                              	je 0xfaa
0x1021:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x1024 -- 0x1025
0x1024:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1025 -- 0x1026
; data inside code section at 0x1026 -- 0x1028
0x1026:    ff ff                                              |..              |
; function: function_1028 at 0x1028 -- 0x103d
0x1028:    ff 8b 4b 08 2b 4b                  	dec dword ptr [ebx + 0x4b2b084b]
0x102e:    04 c1                              	add al, 0xc1
0x1030:    f9                                 	stc 
0x1031:    02 69 c9                           	add ch, byte ptr [ecx - 0x37]
0x1034:    cd cc                              	int 0xcc
0x1036:    cc                                 	int3 
0x1037:    cc                                 	int3 
0x1038:    e9 64 ff ff ff                     	jmp 0xfa1
; function: function_103d at 0x103d -- 0x103e
; dynamically linked function: __stack_chk_fail at 0x103e -- 0x103f
; data inside code section at 0x103f -- 0x1042
0x103f:    ff ff ff                                           |...             |
; function: function_1042 at 0x1042 -- 0x1043
; function: function_1043 at 0x1043 -- 0x1044
0x1043:    c3                                 	ret 
; data inside code section at 0x1044 -- 0x1051
0x1044:    8b 44 24 34 e8 b3 ef ff  ff 89 1c 24 e8            |.D$4.......$.   |
; dynamically linked function: _Unwind_Resume at 0x1051 -- 0x1052
; data inside code section at 0x1052 -- 0x1055
0x1052:    ff ff ff                                           |...             |
; function: function_1055 at 0x1055 -- 0x1057
0x1055:    eb eb                              	jmp 0x1042 <function_1042>
; data inside code section at 0x1057 -- 0x1060
0x1057:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN6CCoins5SpendEi at 0x1060 -- 0x111e
0x1060:    53                                 	push ebx
0x1061:    83 ec 68                           	sub esp, 0x68
0x1064:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x106a:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x106e:    31 c0                              	xor eax, eax
0x1070:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x1074:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x107c:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x1084:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x108c:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1090:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x1094:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1098:    8d 44 24 38                        	lea eax, [esp + 0x38]
0x109c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10a0:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x10a4:    c7 44 24 18 ff ff ff ff            	mov dword ptr [esp + 0x18], 0xffffffff
0x10ac:    c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x10b4:    c6 44 24 2c 00                     	mov byte ptr [esp + 0x2c], 0
0x10b9:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x10c1:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x10c9:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x10d1:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x10d9:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x10e1:    c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x10e9:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x10f1:    c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x10f9:    c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0x1101:    c7 44 24 54 00 00 00 00            	mov dword ptr [esp + 0x54], 0
0x1109:    89 04 24                           	mov dword ptr [esp], eax
0x110c:    e8 3f fd ff ff                     	call 0xe50 <_ZN6CCoins5SpendERK9COutPointR9CTxInUndo>
0x1111:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1115:    89 c3                              	mov ebx, eax
0x1117:    85 d2                              	test edx, edx
0x1119:    74 08                              	je 0x1123 <function_1123>
0x111b:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x111e -- 0x111f
0x111e:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x111f -- 0x1120
; data inside code section at 0x1120 -- 0x1123
0x1120:    ff ff ff                                           |...             |
; function: function_1123 at 0x1123 -- 0x1137
0x1123:    8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x1127:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x112e:    89 d8                              	mov eax, ebx
0x1130:    75 05                              	jne 0x1137 <function_1123+0x13>
0x1132:    83 c4 68                           	add esp, 0x68
0x1135:    5b                                 	pop ebx
0x1136:    c3                                 	ret 
; data inside code section at 0x1137 -- 0x1138
0x1137:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1138 -- 0x1139
; data inside code section at 0x1139 -- 0x113d
0x1139:    ff ff ff 89                                        |....            |
; function: function_113d at 0x113d -- 0x113e
0x113d:    c3                                 	ret 
; data inside code section at 0x113e -- 0x114b
0x113e:    8b 44 24 20 e8 b9 ee ff  ff 89 1c 24 e8            |.D$ .......$.   |
; dynamically linked function: _Unwind_Resume at 0x114b -- 0x114c
; data inside code section at 0x114c -- 0x1150
0x114c:    ff ff ff 90                                        |....            |
; function: _ZNK9COutPoint8ToStringEv at 0x1150 -- 0x11b2
0x1150:    55                                 	push ebp
0x1151:    57                                 	push edi
0x1152:    56                                 	push esi
0x1153:    53                                 	push ebx
0x1154:    bb 1f 00 00 00                     	mov ebx, 0x1f
0x1159:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x115f:    8b ac 24 a4 00 00 00               	mov ebp, dword ptr [esp + 0xa4]
0x1166:    8d 74 24 3b                        	lea esi, [esp + 0x3b]
0x116a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1170:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x1174:    31 c0                              	xor eax, eax
0x1176:    8b bc 24 a0 00 00 00               	mov edi, dword ptr [esp + 0xa0]
0x117d:    8b 55 20                           	mov edx, dword ptr [ebp + 0x20]
0x1180:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1184:    8d 74 26 00                        	lea esi, [esi]
0x1188:    0f b6 44 1d 00                     	movzx eax, byte ptr [ebp + ebx]
0x118d:    83 eb 01                           	sub ebx, 1
0x1190:    89 34 24                           	mov dword ptr [esp], esi
0x1193:    83 c6 02                           	add esi, 2
0x1196:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x119e:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x11a6:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x11aa:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x11b2 -- 0x11b3
0x11b2:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x11b3 -- 0x11b4
; data inside code section at 0x11b4 -- 0x11fc
0x11b4:    ff ff ff 83 fb ff 75 cc  8d 44 24 3a 89 44 24 0c   |......u..D$:.D$.|
0x11c4:    8d 44 24 7b 89 44 24 08  8d 5c 24 30 8d 44 24 3b   |.D${.D$..\$0.D$;|
0x11d4:    8d 74 24 34 89 44 24 04  89 1c 24 e8 cc 2e 00 00   |.t$4.D$...$.....|
0x11e4:    c7 44 24 0c 0a 00 00 00  c7 44 24 08 00 00 00 00   |.D$......D$.....|
0x11f4:    89 5c 24 04 89 34 24 e8                            |.\$..4$.        |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x11fc -- 0x11fd
; data inside code section at 0x11fd -- 0x1224
0x11fd:    ff ff ff 8b 54 24 2c 8b  44 24 34 c7 44 24 08 00   |....T$,.D$4.D$..|
0x120d:    00 00 00 c7 44 24 04 30  31 00 00 89 54 24 10 89   |....D$.01...T$..|
0x121d:    44 24 0c 89 3c 24 e8                               |D$..<$.         |
; dynamically linked function: _Z14real_strprintfPKciz at 0x1224 -- 0x1225
; data inside code section at 0x1225 -- 0x122f
0x1225:    ff ff ff 83 ec 04 89 34  24 e8                     |.......4$.      |
; dynamically linked function: _ZNSsD1Ev at 0x122f -- 0x1230
; data inside code section at 0x1230 -- 0x1237
0x1230:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1237 -- 0x1238
; data inside code section at 0x1238 -- 0x123a
0x1238:    ff ff                                              |..              |
; function: function_123a at 0x123a -- 0x1257
0x123a:    ff 89 f8 8b 54 24                  	dec dword ptr [ecx + 0x24548bf8]
0x1240:    7c 65                              	jl 0x12a7
0x1242:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1248:    75 1f                              	jne 0x1269 <function_1269>
0x124a:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x1250:    5b                                 	pop ebx
0x1251:    5e                                 	pop esi
0x1252:    5f                                 	pop edi
0x1253:    5d                                 	pop ebp
0x1254:    c2 04 00                           	ret 4
; data inside code section at 0x1257 -- 0x1259
0x1257:    89 c6                                              |..              |
; function: function_1259 at 0x1259 -- 0x125a
; data inside code section at 0x125a -- 0x125d
0x125a:    1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsD1Ev at 0x125d -- 0x125e
; data inside code section at 0x125e -- 0x1265
0x125e:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x1265 -- 0x1266
; data inside code section at 0x1266 -- 0x1269
0x1266:    ff ff ff                                           |...             |
; function: function_1269 at 0x1269 -- 0x126a
; dynamically linked function: __stack_chk_fail at 0x126a -- 0x126b
; data inside code section at 0x126b -- 0x1276
0x126b:    ff ff ff 89 c7 89 34 24  89 fe e8                  |......4$...     |
; dynamically linked function: _ZNSsD1Ev at 0x1276 -- 0x1277
; data inside code section at 0x1277 -- 0x127a
0x1277:    ff ff ff                                           |...             |
; function: function_127a at 0x127a -- 0x127c
0x127a:    eb dd                              	jmp 0x1259 <function_1259>
; data inside code section at 0x127c -- 0x1280
0x127c:    8d 74 26 00                                        |.t&.            |
; function: _ZNK9COutPoint5printEv at 0x1280 -- 0x12b6
0x1280:    53                                 	push ebx
0x1281:    83 ec 38                           	sub esp, 0x38
0x1284:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x128a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x128e:    31 c0                              	xor eax, eax
0x1290:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1294:    8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x1298:    89 1c 24                           	mov dword ptr [esp], ebx
0x129b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x129f:    e8 ac fe ff ff                     	call 0x1150 <_ZNK9COutPoint8ToStringEv>
0x12a4:    83 ec 04                           	sub esp, 4
0x12a7:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x12ab:    c7 04 24 42 31 00 00               	mov dword ptr [esp], 0x3142 ; "%s\n"
0x12b2:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x12b6 -- 0x12b7
0x12b6:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x12b7 -- 0x12b8
; data inside code section at 0x12b8 -- 0x12bf
0x12b8:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x12bf -- 0x12c0
; data inside code section at 0x12c0 -- 0x12c2
0x12c0:    ff ff                                              |..              |
; function: function_12c2 at 0x12c2 -- 0x12d5
0x12c2:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x12c8:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x12ce:    75 05                              	jne 0x12d5 <function_12c2+0x12>
0x12d0:    83 c4 38                           	add esp, 0x38
0x12d3:    5b                                 	pop ebx
0x12d4:    c3                                 	ret 
; data inside code section at 0x12d5 -- 0x12d6
0x12d5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12d6 -- 0x12d7
; data inside code section at 0x12d7 -- 0x12e2
0x12d7:    ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0x12e2 -- 0x12e3
; data inside code section at 0x12e3 -- 0x12ee
0x12e3:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x12ee -- 0x12ef
; data inside code section at 0x12ef -- 0x1300
0x12ef:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x12ff:    00                                                 |.               |
; function: _ZNK6CTxOut8ToStringEv at 0x1300 -- 0x1367
0x1300:    83 ec 5c                           	sub esp, 0x5c
0x1303:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x1307:    8b 5c 24 64                        	mov ebx, dword ptr [esp + 0x64]
0x130b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1311:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1315:    31 c0                              	xor eax, eax
0x1317:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x131b:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x131f:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1323:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1326:    2b 43 08                           	sub eax, dword ptr [ebx + 8]
0x1329:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x132d:    83 f8 05                           	cmp eax, 5
0x1330:    0f 86 ea 00 00 00                  	jbe 0x1420 <function_1420>
0x1336:    8d 7c 24 30                        	lea edi, [esp + 0x30]
0x133a:    8d 43 08                           	lea eax, [ebx + 8]
0x133d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1341:    89 3c 24                           	mov dword ptr [esp], edi
0x1344:    e8 b7 2f 00 00                     	call 0x4300 <_ZNK7CScript8ToStringEv>
0x1349:    83 ec 04                           	sub esp, 4
0x134c:    8d 6c 24 34                        	lea ebp, [esp + 0x34]
0x1350:    c7 44 24 0c 1e 00 00 00            	mov dword ptr [esp + 0xc], 0x1e
0x1358:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1360:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1364:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1367 -- 0x1368
0x1367:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x1368 -- 0x1369
; data inside code section at 0x1369 -- 0x1395
0x1369:    ff ff ff 8b 0b 8b 5b 04  8b 44 24 34 c7 44 24 08   |......[..D$4.D$.|
0x1379:    00 e1 f5 05 89 0c 24 c7  44 24 0c 00 00 00 00 89   |......$.D$......|
0x1389:    5c 24 04 89 4c 24 2c 89  44 24 1c e8               |\$..L$,.D$..    |
; dynamically linked function: __moddi3 at 0x1395 -- 0x1396
; data inside code section at 0x1396 -- 0x13bd
0x1396:    ff ff ff 8b 4c 24 2c c7  44 24 08 00 e1 f5 05 c7   |....L$,.D$......|
0x13a6:    44 24 0c 00 00 00 00 89  5c 24 04 89 0c 24 89 44   |D$......\$...$.D|
0x13b6:    24 14 89 54 24 18 e8                               |$..T$..         |
; dynamically linked function: __divdi3 at 0x13bd -- 0x13be
; data inside code section at 0x13be -- 0x13e8
0x13be:    ff ff ff c7 44 24 08 00  00 00 00 c7 44 24 04 f0   |....D$......D$..|
0x13ce:    37 00 00 89 34 24 89 44  24 0c 89 54 24 10 e8 fc   |7...4$.D$..T$...|
0x13de:    ff ff ff 83 ec 04 89 2c  24 e8                     |.......,$.      |
; dynamically linked function: _ZNSsD1Ev at 0x13e8 -- 0x13e9
; data inside code section at 0x13e9 -- 0x13f0
0x13e9:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x13f0 -- 0x13f1
; data inside code section at 0x13f1 -- 0x13f3
0x13f1:    ff ff                                              |..              |
; function: function_13f3 at 0x13f3 -- 0x1419
0x13f3:    ff 8b 54 24 3c 65                  	dec dword ptr [ebx + 0x653c2454]
0x13f9:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x13ff:    89 f0                              	mov eax, esi
0x1401:    75 37                              	jne 0x143a <function_143a>
0x1403:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x1407:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x140b:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x140f:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1413:    83 c4 5c                           	add esp, 0x5c
0x1416:    c2 04 00                           	ret 4
; data inside code section at 0x1419 -- 0x1420
0x1419:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1420 at 0x1420 -- 0x1433
0x1420:    8d 44 24 3b                        	lea eax, [esp + 0x3b]
0x1424:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1428:    c7 44 24 04 53 31 00 00            	mov dword ptr [esp + 4], 0x3153 ; "CTxOut(error)"
0x1430:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1433 -- 0x1434
0x1433:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1434 -- 0x1435
; data inside code section at 0x1435 -- 0x1438
0x1435:    ff ff ff                                           |...             |
; function: function_1438 at 0x1438 -- 0x143a
0x1438:    eb ba                              	jmp 0x13f4
; function: function_143a at 0x143a -- 0x143b
; dynamically linked function: __stack_chk_fail at 0x143b -- 0x143c
; data inside code section at 0x143c -- 0x1440
0x143c:    ff ff ff 89                                        |....            |
; function: function_1440 at 0x1440 -- 0x1441
0x1440:    c3                                 	ret 
; data inside code section at 0x1441 -- 0x1445
0x1441:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1445 -- 0x1446
; data inside code section at 0x1446 -- 0x1449
0x1446:    ff ff ff                                           |...             |
; function: function_1449 at 0x1449 -- 0x144a
; data inside code section at 0x144a -- 0x144d
0x144a:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x144d -- 0x144e
; data inside code section at 0x144e -- 0x1455
0x144e:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1455 -- 0x1456
; data inside code section at 0x1456 -- 0x1459
0x1456:    ff ff ff                                           |...             |
; function: function_1459 at 0x1459 -- 0x145d
0x1459:    89 c3                              	mov ebx, eax
0x145b:    eb ec                              	jmp 0x1449 <function_1449>
; data inside code section at 0x145d -- 0x1460
0x145d:    90 66 90                                           |.f.             |
; function: _ZNK6CTxOut5printEv at 0x1460 -- 0x1496
0x1460:    53                                 	push ebx
0x1461:    83 ec 38                           	sub esp, 0x38
0x1464:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x146a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x146e:    31 c0                              	xor eax, eax
0x1470:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1474:    8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x1478:    89 1c 24                           	mov dword ptr [esp], ebx
0x147b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x147f:    e8 7c fe ff ff                     	call 0x1300 <_ZNK6CTxOut8ToStringEv>
0x1484:    83 ec 04                           	sub esp, 4
0x1487:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x148b:    c7 04 24 42 31 00 00               	mov dword ptr [esp], 0x3142 ; "%s\n"
0x1492:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1496 -- 0x1497
0x1496:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1497 -- 0x1498
; data inside code section at 0x1498 -- 0x149f
0x1498:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x149f -- 0x14a0
; data inside code section at 0x14a0 -- 0x14a2
0x14a0:    ff ff                                              |..              |
; function: function_14a2 at 0x14a2 -- 0x14b5
0x14a2:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x14a8:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x14ae:    75 05                              	jne 0x14b5 <function_14a2+0x12>
0x14b0:    83 c4 38                           	add esp, 0x38
0x14b3:    5b                                 	pop ebx
0x14b4:    c3                                 	ret 
; data inside code section at 0x14b5 -- 0x14b6
0x14b5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14b6 -- 0x14b7
; data inside code section at 0x14b7 -- 0x14c2
0x14b7:    ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0x14c2 -- 0x14c3
; data inside code section at 0x14c3 -- 0x14ce
0x14c3:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x14ce -- 0x14cf
; data inside code section at 0x14cf -- 0x14e0
0x14cf:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x14df:    00                                                 |.               |
; function: _ZNK5CTxIn8ToStringEv at 0x14e0 -- 0x14fb
0x14e0:    55                                 	push ebp
0x14e1:    57                                 	push edi
0x14e2:    56                                 	push esi
0x14e3:    53                                 	push ebx
0x14e4:    83 ec 5c                           	sub esp, 0x5c
0x14e7:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x14eb:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x14ef:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14f5:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x14f9:    31 c0                              	xor eax, eax
; data inside code section at 0x14fb -- 0x14fd
0x14fb:    c7 06                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x14fd -- 0x1514
; data inside code section at 0x1514 -- 0x1515
0x1514:    e8                                                 |.               |
; dynamically linked function: _ZNSs6appendEPKcj at 0x1515 -- 0x1516
; data inside code section at 0x1516 -- 0x1534
0x1516:    ff ff ff 8d 7c 24 10 89  5c 24 04 89 3c 24 e8 27   |....|$..\$..<$.'|
0x1526:    fc ff ff 83 ec 04 89 7c  24 04 89 34 24 e8         |.......|$..4$.  |
; dynamically linked function: _ZNSs6appendERKSs at 0x1534 -- 0x1535
; data inside code section at 0x1535 -- 0x153c
0x1535:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x153c -- 0x153d
; data inside code section at 0x153d -- 0x15b9
0x153d:    ff ff ff 8b 53 04 8b 03  89 54 24 30 8b 53 08 85   |....S....T$0.S..|
0x154d:    c0 89 44 24 2c 89 54 24  34 8b 53 0c 89 54 24 38   |..D$,.T$4.S..T$8|
0x155d:    8b 53 10 89 54 24 3c 8b  53 14 89 54 24 40 8b 53   |.S..T$<.S..T$@.S|
0x156d:    18 89 54 24 44 8b 53 1c  89 54 24 48 75 0c 8b 4c   |..T$D.S..T$Hu..L|
0x157d:    24 30 85 c9 0f 84 01 01  00 00 8d 7c 24 1c 8d 43   |$0.........|$..C|
0x158d:    24 89 44 24 04 89 3c 24  e8 66 2d 00 00 83 ec 04   |$.D$..<$.f-.....|
0x159d:    8d 6c 24 20 c7 44 24 0c  18 00 00 00 c7 44 24 08   |.l$ .D$......D$.|
0x15ad:    00 00 00 00 89 7c 24 04  89 2c 24 e8               |.....|$..,$.    |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x15b9 -- 0x15ba
; data inside code section at 0x15ba -- 0x15dd
0x15ba:    ff ff ff 8b 44 24 20 8d  54 24 24 c7 44 24 08 00   |....D$ .T$$.D$..|
0x15ca:    00 00 00 c7 44 24 04 76  31 00 00 89 14 24 89 44   |....D$.v1....$.D|
0x15da:    24 0c e8                                           |$..             |
; dynamically linked function: _Z14real_strprintfPKciz at 0x15dd -- 0x15de
; data inside code section at 0x15de -- 0x15fc
0x15de:    ff ff ff 83 ec 04 8d 44  24 24 89 44 24 04 89 34   |.......D$$.D$..4|
0x15ee:    24 e8 fc ff ff ff 8d 54  24 24 89 14 24 e8         |$......T$$..$.  |
; dynamically linked function: _ZNSsD1Ev at 0x15fc -- 0x15fd
; data inside code section at 0x15fd -- 0x160c
0x15fd:    ff ff ff 89 2c 24 e8 fc  ff ff ff 89 3c 24 e8      |....,$......<$. |
; dynamically linked function: _ZNSsD1Ev at 0x160c -- 0x160d
; data inside code section at 0x160d -- 0x1610
0x160d:    ff ff ff                                           |...             |
; function: function_1610 at 0x1610 -- 0x1611
; data inside code section at 0x1611 -- 0x1634
0x1611:    43 30 83 f8 ff 74 37 8d  5c 24 28 89 44 24 0c c7   |C0...t7.\$(.D$..|
0x1621:    44 24 08 00 00 00 00 c7  44 24 04 85 31 00 00 89   |D$......D$..1...|
0x1631:    1c 24 e8                                           |.$.             |
; dynamically linked function: _Z14real_strprintfPKciz at 0x1634 -- 0x1635
; data inside code section at 0x1635 -- 0x1643
0x1635:    ff ff ff 83 ec 04 89 5c  24 04 89 34 24 e8         |.......\$..4$.  |
; dynamically linked function: _ZNSs6appendERKSs at 0x1643 -- 0x1644
; data inside code section at 0x1644 -- 0x164b
0x1644:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x164b -- 0x164c
; data inside code section at 0x164c -- 0x1663
0x164c:    ff ff ff c7 44 24 08 01  00 00 00 c7 44 24 04 94   |....D$......D$..|
0x165c:    31 00 00 89 34 24 e8                               |1...4$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x1663 -- 0x1664
; data inside code section at 0x1664 -- 0x1666
0x1664:    ff ff                                              |..              |
; function: function_1666 at 0x1666 -- 0x1684
0x1666:    ff 8b 54 24 4c 65                  	dec dword ptr [ebx + 0x654c2454]
0x166c:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1672:    89 f0                              	mov eax, esi
0x1674:    0f 85 9b 00 00 00                  	jne 0x1715 <function_1715>
0x167a:    83 c4 5c                           	add esp, 0x5c
0x167d:    5b                                 	pop ebx
0x167e:    5e                                 	pop esi
0x167f:    5f                                 	pop edi
0x1680:    5d                                 	pop ebp
0x1681:    c2 04 00                           	ret 4
; data inside code section at 0x1684 -- 0x16ed
0x1684:    8d 74 26 00 b0 02 8b 54  84 2c 85 d2 0f 85 f1 fe   |.t&....T.,......|
0x1694:    ff ff 83 c0 01 83 f8 08  75 ec 83 7b 20 ff 0f 85   |........u..{ ...|
0x16a4:    df fe ff ff 8b 53 28 8d  6c 24 14 8b 43 24 c7 44   |.....S(.l$..C$.D|
0x16b4:    24 0c 00 00 00 00 89 2c  24 89 54 24 08 89 44 24   |$......,$.T$..D$|
0x16c4:    04 e8 76 24 00 00 83 ec  04 8b 44 24 14 8d 7c 24   |..v$......D$..|$|
0x16d4:    18 c7 44 24 08 00 00 00  00 c7 44 24 04 68 31 00   |..D$......D$.h1.|
0x16e4:    00 89 3c 24 89 44 24 0c  e8                        |..<$.D$..       |
; dynamically linked function: _Z14real_strprintfPKciz at 0x16ed -- 0x16ee
; data inside code section at 0x16ee -- 0x16fc
0x16ee:    ff ff ff 83 ec 04 89 7c  24 04 89 34 24 e8         |.......|$..4$.  |
; dynamically linked function: _ZNSs6appendERKSs at 0x16fc -- 0x16fd
; data inside code section at 0x16fd -- 0x1704
0x16fd:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1704 -- 0x1705
; data inside code section at 0x1705 -- 0x170c
0x1705:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x170c -- 0x170d
; data inside code section at 0x170d -- 0x1710
0x170d:    ff ff ff                                           |...             |
; function: function_1710 at 0x1710 -- 0x1715
0x1710:    e9 fb fe ff ff                     	jmp 0x1610 <function_1610>
; function: function_1715 at 0x1715 -- 0x1716
; dynamically linked function: __stack_chk_fail at 0x1716 -- 0x1717
; data inside code section at 0x1717 -- 0x171b
0x1717:    ff ff ff 89                                        |....            |
; function: function_171b at 0x171b -- 0x171c
0x171b:    c3                                 	ret 
; data inside code section at 0x171c -- 0x1720
0x171c:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1720 -- 0x1721
; data inside code section at 0x1721 -- 0x1728
0x1721:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1728 -- 0x1729
; data inside code section at 0x1729 -- 0x172c
0x1729:    ff ff ff                                           |...             |
; function: function_172c at 0x172c -- 0x172d
; data inside code section at 0x172d -- 0x1730
0x172d:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x1730 -- 0x1731
; data inside code section at 0x1731 -- 0x1738
0x1731:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1738 -- 0x1739
; data inside code section at 0x1739 -- 0x173b
0x1739:    ff ff                                              |..              |
; function: function_173b at 0x173b -- 0x1742
0x173b:    ff 89 c3 eb e4 89                  	dec dword ptr [ecx - 0x761b143d]
0x1741:    c3                                 	ret 
; function: function_1742 at 0x1742 -- 0x1744
0x1742:    eb e8                              	jmp 0x172c <function_172c>
; data inside code section at 0x1744 -- 0x174c
0x1744:    89 c7 89 1c 24 89 fb e8                            |....$...        |
; dynamically linked function: _ZNSsD1Ev at 0x174c -- 0x174d
; data inside code section at 0x174d -- 0x1750
0x174d:    ff ff ff                                           |...             |
; function: function_1750 at 0x1750 -- 0x1752
0x1750:    eb da                              	jmp 0x172c <function_172c>
; data inside code section at 0x1752 -- 0x1753
0x1752:    89                                                 |.               |
; function: function_1753 at 0x1753 -- 0x1754
0x1753:    c3                                 	ret 
; data inside code section at 0x1754 -- 0x1758
0x1754:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1758 -- 0x1759
; data inside code section at 0x1759 -- 0x175c
0x1759:    ff ff ff                                           |...             |
; function: function_175c at 0x175c -- 0x175e
0x175c:    eb ce                              	jmp 0x172c <function_172c>
; data inside code section at 0x175e -- 0x175f
0x175e:    89                                                 |.               |
; function: function_175f at 0x175f -- 0x1760
0x175f:    c3                                 	ret 
; function: function_1760 at 0x1760 -- 0x1761
; data inside code section at 0x1761 -- 0x1764
0x1761:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x1764 -- 0x1765
; data inside code section at 0x1765 -- 0x1768
0x1765:    ff ff ff                                           |...             |
; function: function_1768 at 0x1768 -- 0x176a
0x1768:    eb c2                              	jmp 0x172c <function_172c>
; data inside code section at 0x176a -- 0x176b
0x176a:    89                                                 |.               |
; function: function_176b at 0x176b -- 0x176c
0x176b:    c3                                 	ret 
; data inside code section at 0x176c -- 0x1774
0x176c:    8d 44 24 24 89 04 24 e8                            |.D$$..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x1774 -- 0x1775
; data inside code section at 0x1775 -- 0x1778
0x1775:    ff ff ff                                           |...             |
; function: function_1778 at 0x1778 -- 0x1779
; data inside code section at 0x1779 -- 0x177c
0x1779:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x177c -- 0x177d
; data inside code section at 0x177d -- 0x1780
0x177d:    ff ff ff                                           |...             |
; function: function_1780 at 0x1780 -- 0x1782
0x1780:    eb de                              	jmp 0x1760 <function_1760>
; function: function_1782 at 0x1782 -- 0x1786
0x1782:    89 c3                              	mov ebx, eax
0x1784:    eb f2                              	jmp 0x1778 <function_1778>
; data inside code section at 0x1786 -- 0x1790
0x1786:    8d 76 00 8d bc 27 00 00  00 00                     |.v...'....      |
; function: _ZNK5CTxIn5printEv at 0x1790 -- 0x17c6
0x1790:    53                                 	push ebx
0x1791:    83 ec 38                           	sub esp, 0x38
0x1794:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x179a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x179e:    31 c0                              	xor eax, eax
0x17a0:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x17a4:    8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x17a8:    89 1c 24                           	mov dword ptr [esp], ebx
0x17ab:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17af:    e8 2c fd ff ff                     	call 0x14e0 <_ZNK5CTxIn8ToStringEv>
0x17b4:    83 ec 04                           	sub esp, 4
0x17b7:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x17bb:    c7 04 24 42 31 00 00               	mov dword ptr [esp], 0x3142 ; "%s\n"
0x17c2:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x17c6 -- 0x17c7
0x17c6:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x17c7 -- 0x17c8
; data inside code section at 0x17c8 -- 0x17cf
0x17c8:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x17cf -- 0x17d0
; data inside code section at 0x17d0 -- 0x17d2
0x17d0:    ff ff                                              |..              |
; function: function_17d2 at 0x17d2 -- 0x17e5
0x17d2:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x17d8:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x17de:    75 05                              	jne 0x17e5 <function_17d2+0x12>
0x17e0:    83 c4 38                           	add esp, 0x38
0x17e3:    5b                                 	pop ebx
0x17e4:    c3                                 	ret 
; data inside code section at 0x17e5 -- 0x17e6
0x17e5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17e6 -- 0x17e7
; data inside code section at 0x17e7 -- 0x17f2
0x17e7:    ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0x17f2 -- 0x17f3
; data inside code section at 0x17f3 -- 0x17fe
0x17f3:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x17fe -- 0x17ff
; data inside code section at 0x17ff -- 0x1810
0x17ff:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x180f:    00                                                 |.               |
; function: _ZNK6CTxOut7GetHashEv at 0x1810 -- 0x1853
0x1810:    57                                 	push edi
0x1811:    56                                 	push esi
0x1812:    53                                 	push ebx
0x1813:    81 ec c0 00 00 00                  	sub esp, 0xc0
0x1819:    8b b4 24 d4 00 00 00               	mov esi, dword ptr [esp + 0xd4]
0x1820:    8d 7c 24 24                        	lea edi, [esp + 0x24]
0x1824:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x182a:    89 84 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], eax
0x1831:    31 c0                              	xor eax, eax
0x1833:    8b 9c 24 d0 00 00 00               	mov ebx, dword ptr [esp + 0xd0]
0x183a:    c7 84 24 94 00 00 00 04 00 00 00   	mov dword ptr [esp + 0x94], 4
0x1845:    c7 84 24 98 00 00 00 80 38 01 00   	mov dword ptr [esp + 0x98], 0x13880
0x1850:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1853 -- 0x1854
0x1853:    e8                                                 |.               |
; dynamically linked function: SHA256_Init at 0x1854 -- 0x1855
; data inside code section at 0x1855 -- 0x1879
0x1855:    ff ff ff 8b 06 8b 56 04  c7 44 24 08 08 00 00 00   |......V..D$.....|
0x1865:    89 3c 24 89 44 24 18 8d  44 24 18 89 54 24 1c 89   |.<$.D$..D$..T$..|
0x1875:    44 24 04 e8                                        |D$..            |
; dynamically linked function: SHA256_Update at 0x1879 -- 0x187a
; data inside code section at 0x187a -- 0x1896
0x187a:    ff ff ff 8b 46 0c 2b 46  08 c7 44 24 08 00 00 00   |....F.+F..D$....|
0x188a:    00 89 3c 24 89 44 24 04  e8 39 2e 00               |..<$.D$..9..    |
; function: function_1896 at 0x1896 -- 0x18a1
0x1896:    00 8b 56 0c 8b 46                  	add byte ptr [ebx + 0x468b0c56], cl
0x189c:    08 39                              	or byte ptr [ecx], bh
0x189e:    c2 74 12                           	ret 0x1274
; data inside code section at 0x18a1 -- 0x18a2
0x18a1:    29                                                 |)               |
; function: function_18a2 at 0x18a2 -- 0x18a5
0x18a2:    c2 89 54                           	ret 0x5489
; data inside code section at 0x18a5 -- 0x18af
0x18a5:    24 08 89 44 24 04 89 3c  24 e8                     |$..D$..<$.      |
; dynamically linked function: SHA256_Update at 0x18af -- 0x18b0
; data inside code section at 0x18b0 -- 0x191a
0x18b0:    ff ff ff 8d b4 24 9c 00  00 00 c7 84 24 9c 00 00   |.....$......$...|
0x18c0:    00 00 00 00 00 c7 84 24  a0 00 00 00 00 00 00 00   |.......$........|
0x18d0:    c7 84 24 a4 00 00 00 00  00 00 00 c7 84 24 a8 00   |..$..........$..|
0x18e0:    00 00 00 00 00 00 c7 84  24 ac 00 00 00 00 00 00   |........$.......|
0x18f0:    00 c7 84 24 b0 00 00 00  00 00 00 00 c7 84 24 b4   |...$..........$.|
0x1900:    00 00 00 00 00 00 00 c7  84 24 b8 00 00 00 00 00   |.........$......|
0x1910:    00 00 89 7c 24 04 89 34  24 e8                     |...|$..4$.      |
; dynamically linked function: SHA256_Final at 0x191a -- 0x191b
; data inside code section at 0x191b -- 0x1965
0x191b:    ff ff ff c7 03 00 00 00  00 c7 43 04 00 00 00 00   |..........C.....|
0x192b:    c7 43 08 00 00 00 00 c7  43 0c 00 00 00 00 c7 43   |.C......C......C|
0x193b:    10 00 00 00 00 c7 43 14  00 00 00 00 c7 43 18 00   |......C......C..|
0x194b:    00 00 00 c7 43 1c 00 00  00 00 89 5c 24 08 c7 44   |....C......\$..D|
0x195b:    24 04 20 00 00 00 89 34  24 e8                     |$. ....4$.      |
; dynamically linked function: SHA256 at 0x1965 -- 0x1966
; data inside code section at 0x1966 -- 0x1968
0x1966:    ff ff                                              |..              |
; function: function_1968 at 0x1968 -- 0x1987
0x1968:    ff 89 d8 8b 94 24                  	dec dword ptr [ecx + 0x24948bd8]
0x196e:    bc 00 00 00 65                     	mov esp, 0x65000000
0x1973:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1979:    75 0c                              	jne 0x1987 <function_1968+0x1c>
0x197b:    81 c4 c0 00 00 00                  	add esp, 0xc0
0x1981:    5b                                 	pop ebx
0x1982:    5e                                 	pop esi
0x1983:    5f                                 	pop edi
0x1984:    c2 04 00                           	ret 4
; data inside code section at 0x1987 -- 0x1988
0x1987:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1988 -- 0x1989
; data inside code section at 0x1989 -- 0x1990
0x1989:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: _ZNK12CTransaction7GetHashEv at 0x1990 -- 0x19dd
0x1990:    53                                 	push ebx
0x1991:    83 ec 28                           	sub esp, 0x28
0x1994:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1998:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x199e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x19a2:    31 c0                              	xor eax, eax
0x19a4:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x19a8:    c7 44 24 0c 80 38 01 00            	mov dword ptr [esp + 0xc], 0x13880
0x19b0:    c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0x19b8:    89 1c 24                           	mov dword ptr [esp], ebx
0x19bb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19bf:    e8 4c 2e 00 00                     	call 0x4810 <_Z13SerializeHashI12CTransactionE7uint256RKT_ii>
0x19c4:    89 d8                              	mov eax, ebx
0x19c6:    83 ec 04                           	sub esp, 4
0x19c9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x19cd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x19d4:    75 07                              	jne 0x19dd <_ZNK12CTransaction7GetHashEv+0x4a>
0x19d6:    83 c4 28                           	add esp, 0x28
0x19d9:    5b                                 	pop ebx
0x19da:    c2 04 00                           	ret 4
; data inside code section at 0x19dd -- 0x19de
0x19dd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19de -- 0x19df
; data inside code section at 0x19df -- 0x19f0
0x19df:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x19ef:    00                                                 |.               |
; function: _ZNK6CBlock15BuildMerkleTreeEv at 0x19f0 -- 0x1b7d
0x19f0:    55                                 	push ebp
0x19f1:    57                                 	push edi
0x19f2:    56                                 	push esi
0x19f3:    53                                 	push ebx
0x19f4:    81 ec 1c 01 00 00                  	sub esp, 0x11c
0x19fa:    8b 9c 24 34 01 00 00               	mov ebx, dword ptr [esp + 0x134]
0x1a01:    8b 84 24 30 01 00 00               	mov eax, dword ptr [esp + 0x130]
0x1a08:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1a0f:    89 94 24 0c 01 00 00               	mov dword ptr [esp + 0x10c], edx
0x1a16:    31 d2                              	xor edx, edx
0x1a18:    8b 73 50                           	mov esi, dword ptr [ebx + 0x50]
0x1a1b:    8b 6b 54                           	mov ebp, dword ptr [ebx + 0x54]
0x1a1e:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1a22:    8b 43 5c                           	mov eax, dword ptr [ebx + 0x5c]
0x1a25:    89 f2                              	mov edx, esi
0x1a27:    39 ee                              	cmp esi, ebp
0x1a29:    89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x1a2c:    0f 84 92 00 00 00                  	je 0x1ac4 <_ZNK6CBlock15BuildMerkleTreeEv+0xd4>
0x1a32:    8d 4b 5c                           	lea ecx, [ebx + 0x5c]
0x1a35:    8d bc 24 ac 00 00 00               	lea edi, [esp + 0xac]
0x1a3c:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x1a40:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1a44:    89 3c 24                           	mov dword ptr [esp], edi
0x1a47:    e8 44 ff ff ff                     	call 0x1990 <_ZNK12CTransaction7GetHashEv>
0x1a4c:    8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x1a4f:    83 ec 04                           	sub esp, 4
0x1a52:    3b 43 64                           	cmp eax, dword ptr [ebx + 0x64]
0x1a55:    0f 84 9d 02 00 00                  	je 0x1cf8 <function_1cf8>
0x1a5b:    85 c0                              	test eax, eax
0x1a5d:    74 4f                              	je 0x1aae <_ZNK6CBlock15BuildMerkleTreeEv+0xbe>
0x1a5f:    8b 94 24 ac 00 00 00               	mov edx, dword ptr [esp + 0xac]
0x1a66:    89 10                              	mov dword ptr [eax], edx
0x1a68:    8b 94 24 b0 00 00 00               	mov edx, dword ptr [esp + 0xb0]
0x1a6f:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1a72:    8b 94 24 b4 00 00 00               	mov edx, dword ptr [esp + 0xb4]
0x1a79:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1a7c:    8b 94 24 b8 00 00 00               	mov edx, dword ptr [esp + 0xb8]
0x1a83:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1a86:    8b 94 24 bc 00 00 00               	mov edx, dword ptr [esp + 0xbc]
0x1a8d:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x1a90:    8b 94 24 c0 00 00 00               	mov edx, dword ptr [esp + 0xc0]
0x1a97:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x1a9a:    8b 94 24 c4 00 00 00               	mov edx, dword ptr [esp + 0xc4]
0x1aa1:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x1aa4:    8b 94 24 c8 00 00 00               	mov edx, dword ptr [esp + 0xc8]
0x1aab:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1aae:    83 c0 20                           	add eax, 0x20
0x1ab1:    89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x1ab4:    83 c6 20                           	add esi, 0x20
0x1ab7:    39 f5                              	cmp ebp, esi
0x1ab9:    75 85                              	jne 0x1a40 <_ZNK6CBlock15BuildMerkleTreeEv+0x50>
0x1abb:    8b 73 50                           	mov esi, dword ptr [ebx + 0x50]
0x1abe:    8b 53 54                           	mov edx, dword ptr [ebx + 0x54]
0x1ac1:    8b 43 5c                           	mov eax, dword ptr [ebx + 0x5c]
0x1ac4:    29 f2                              	sub edx, esi
0x1ac6:    c1 fa 05                           	sar edx, 5
0x1ac9:    83 fa 01                           	cmp edx, 1
0x1acc:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x1ad0:    0f 8e 3e 02 00 00                  	jle 0x1d14 <function_1d14>
0x1ad6:    8d 53 5c                           	lea edx, [ebx + 0x5c]
0x1ad9:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x1ae1:    8d 7c 24 3c                        	lea edi, [esp + 0x3c]
0x1ae5:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1ae9:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x1aed:    31 f6                              	xor esi, esi
0x1aef:    8b 6c 24 24                        	mov ebp, dword ptr [esp + 0x24]
0x1af3:    83 e9 01                           	sub ecx, 1
0x1af6:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x1afa:    c1 e5 05                           	shl ebp, 5
0x1afd:    eb 04                              	jmp 0x1b03 <_ZNK6CBlock15BuildMerkleTreeEv+0x113>
; data inside code section at 0x1aff -- 0x1b00
0x1aff:    90                                                 |.               |
0x1b00:    8b 43 5c                           	mov eax, dword ptr [ebx + 0x5c]
0x1b03:    8d 56 01                           	lea edx, [esi + 1]
0x1b06:    39 54 24 14                        	cmp dword ptr [esp + 0x14], edx
0x1b0a:    0f 4e 54 24 14                     	cmovle edx, dword ptr [esp + 0x14]
0x1b0f:    03 54 24 24                        	add edx, dword ptr [esp + 0x24]
0x1b13:    c7 84 24 ec 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xec], 0
0x1b1e:    c7 84 24 f0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf0], 0
0x1b29:    c1 e2 05                           	shl edx, 5
0x1b2c:    01 c2                              	add edx, eax
0x1b2e:    01 e8                              	add eax, ebp
0x1b30:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1b34:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1b38:    c7 84 24 f4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf4], 0
0x1b43:    c7 84 24 f8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf8], 0
0x1b4e:    c7 84 24 fc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xfc], 0
0x1b59:    c7 84 24 00 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x100], 0
0x1b64:    c7 84 24 04 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x104], 0
0x1b6f:    c7 84 24 08 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x108], 0
0x1b7a:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1b7d -- 0x1b7e
0x1b7d:    e8                                                 |.               |
; dynamically linked function: SHA256_Init at 0x1b7e -- 0x1b7f
; data inside code section at 0x1b7f -- 0x1b96
0x1b7f:    ff ff ff 8b 54 24 1c c7  44 24 08 20 00 00 00 89   |....T$..D$. ....|
0x1b8f:    3c 24 89 54 24 04 e8                               |<$.T$..         |
; dynamically linked function: SHA256_Update at 0x1b96 -- 0x1b97
; data inside code section at 0x1b97 -- 0x1bae
0x1b97:    ff ff ff 8b 4c 24 18 c7  44 24 08 20 00 00 00 89   |....L$..D$. ....|
0x1ba7:    3c 24 89 4c 24 04 e8                               |<$.L$..         |
; dynamically linked function: SHA256_Update at 0x1bae -- 0x1baf
; data inside code section at 0x1baf -- 0x1bc1
0x1baf:    ff ff ff 8d 84 24 ec 00  00 00 89 7c 24 04 89 04   |.....$.....|$...|
0x1bbf:    24 e8                                              |$.              |
; dynamically linked function: SHA256_Final at 0x1bc1 -- 0x1bc2
; data inside code section at 0x1bc2 -- 0x1c3b
0x1bc2:    ff ff ff 8d 94 24 cc 00  00 00 8d 8c 24 ec 00 00   |.....$......$...|
0x1bd2:    00 c7 84 24 cc 00 00 00  00 00 00 00 c7 84 24 d0   |...$..........$.|
0x1be2:    00 00 00 00 00 00 00 c7  84 24 d4 00 00 00 00 00   |.........$......|
0x1bf2:    00 00 c7 84 24 d8 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0x1c02:    dc 00 00 00 00 00 00 00  c7 84 24 e0 00 00 00 00   |..........$.....|
0x1c12:    00 00 00 c7 84 24 e4 00  00 00 00 00 00 00 c7 84   |.....$..........|
0x1c22:    24 e8 00 00 00 00 00 00  00 89 54 24 08 c7 44 24   |$.........T$..D$|
0x1c32:    04 20 00 00 00 89 0c 24  e8                        |. .....$.       |
; dynamically linked function: SHA256 at 0x1c3b -- 0x1c3c
; data inside code section at 0x1c3c -- 0x1c3e
0x1c3c:    ff ff                                              |..              |
; function: function_1c3e at 0x1c3e -- 0x1cf5
0x1c3e:    ff 8b 43 60 3b 43                  	dec dword ptr [ebx + 0x433b6043]
0x1c44:    64 0f 84 8d 00 00 00               	je 0x1cd8 <function_1c3e+0x9a>
0x1c4b:    85 c0                              	test eax, eax
0x1c4d:    74 4f                              	je 0x1c9e <function_1c3e+0x60>
0x1c4f:    8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0x1c56:    89 10                              	mov dword ptr [eax], edx
0x1c58:    8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0x1c5f:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1c62:    8b 94 24 d4 00 00 00               	mov edx, dword ptr [esp + 0xd4]
0x1c69:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1c6c:    8b 94 24 d8 00 00 00               	mov edx, dword ptr [esp + 0xd8]
0x1c73:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1c76:    8b 94 24 dc 00 00 00               	mov edx, dword ptr [esp + 0xdc]
0x1c7d:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x1c80:    8b 94 24 e0 00 00 00               	mov edx, dword ptr [esp + 0xe0]
0x1c87:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x1c8a:    8b 94 24 e4 00 00 00               	mov edx, dword ptr [esp + 0xe4]
0x1c91:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x1c94:    8b 94 24 e8 00 00 00               	mov edx, dword ptr [esp + 0xe8]
0x1c9b:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1c9e:    83 c0 20                           	add eax, 0x20
0x1ca1:    89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x1ca4:    83 c6 02                           	add esi, 2
0x1ca7:    83 c5 40                           	add ebp, 0x40
0x1caa:    39 74 24 20                        	cmp dword ptr [esp + 0x20], esi
0x1cae:    0f 8f 4c fe ff ff                  	jg 0x1b00
0x1cb4:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1cb8:    83 c2 01                           	add edx, 1
0x1cbb:    d1 fa                              	sar edx, 1
0x1cbd:    83 fa 01                           	cmp edx, 1
0x1cc0:    7e 4f                              	jle 0x1d11 <function_1d11>
0x1cc2:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x1cc6:    01 4c 24 24                        	add dword ptr [esp + 0x24], ecx
0x1cca:    8b 43 5c                           	mov eax, dword ptr [ebx + 0x5c]
0x1ccd:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x1cd1:    e9 13 fe ff ff                     	jmp 0x1ae9
; data inside code section at 0x1cd6 -- 0x1cd8
0x1cd6:    66 90                                              |f.              |
0x1cd8:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1cdc:    8d 94 24 cc 00 00 00               	lea edx, [esp + 0xcc]
0x1ce3:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1ce7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1ceb:    89 0c 24                           	mov dword ptr [esp], ecx
0x1cee:    e8 bd 20 00 00                     	call 0x3db0 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x1cf3:    eb af                              	jmp 0x1ca4 <function_1c3e+0x66>
; data inside code section at 0x1cf5 -- 0x1cf8
0x1cf5:    8d 76 00                                           |.v.             |
; function: function_1cf8 at 0x1cf8 -- 0x1d11
0x1cf8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1cfc:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x1d00:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1d04:    89 04 24                           	mov dword ptr [esp], eax
0x1d07:    e8 a4 20 00 00                     	call 0x3db0 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x1d0c:    e9 a3 fd ff ff                     	jmp 0x1ab4
; function: function_1d11 at 0x1d11 -- 0x1d14
0x1d11:    8b 43 5c                           	mov eax, dword ptr [ebx + 0x5c]
; function: function_1d14 at 0x1d14 -- 0x1dac
0x1d14:    8b 53 60                           	mov edx, dword ptr [ebx + 0x60]
0x1d17:    39 c2                              	cmp edx, eax
0x1d19:    74 54                              	je 0x1d6f <function_1d14+0x5b>
0x1d1b:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x1d1f:    8b 42 e0                           	mov eax, dword ptr [edx - 0x20]
0x1d22:    89 01                              	mov dword ptr [ecx], eax
0x1d24:    8b 42 e4                           	mov eax, dword ptr [edx - 0x1c]
0x1d27:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x1d2a:    8b 42 e8                           	mov eax, dword ptr [edx - 0x18]
0x1d2d:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x1d30:    8b 42 ec                           	mov eax, dword ptr [edx - 0x14]
0x1d33:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x1d36:    8b 42 f0                           	mov eax, dword ptr [edx - 0x10]
0x1d39:    89 41 10                           	mov dword ptr [ecx + 0x10], eax
0x1d3c:    8b 42 f4                           	mov eax, dword ptr [edx - 0xc]
0x1d3f:    89 41 14                           	mov dword ptr [ecx + 0x14], eax
0x1d42:    8b 42 f8                           	mov eax, dword ptr [edx - 8]
0x1d45:    89 41 18                           	mov dword ptr [ecx + 0x18], eax
0x1d48:    8b 42 fc                           	mov eax, dword ptr [edx - 4]
0x1d4b:    89 41 1c                           	mov dword ptr [ecx + 0x1c], eax
0x1d4e:    8b 94 24 0c 01 00 00               	mov edx, dword ptr [esp + 0x10c]
0x1d55:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1d5c:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1d60:    75 4a                              	jne 0x1dac <function_1d14+0x96>
0x1d62:    81 c4 1c 01 00 00                  	add esp, 0x11c
0x1d68:    5b                                 	pop ebx
0x1d69:    5e                                 	pop esi
0x1d6a:    5f                                 	pop edi
0x1d6b:    5d                                 	pop ebp
0x1d6c:    c2 04 00                           	ret 4
0x1d6f:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1d73:    c7 00 00 00 00 00                  	mov dword ptr [eax], 0
0x1d79:    c7 40 04 00 00 00 00               	mov dword ptr [eax + 4], 0
0x1d80:    c7 40 08 00 00 00 00               	mov dword ptr [eax + 8], 0
0x1d87:    c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0x1d8e:    c7 40 10 00 00 00 00               	mov dword ptr [eax + 0x10], 0
0x1d95:    c7 40 14 00 00 00 00               	mov dword ptr [eax + 0x14], 0
0x1d9c:    c7 40 18 00 00 00 00               	mov dword ptr [eax + 0x18], 0
0x1da3:    c7 40 1c 00 00 00 00               	mov dword ptr [eax + 0x1c], 0
0x1daa:    eb a2                              	jmp 0x1d4e <function_1d14+0x3a>
; data inside code section at 0x1dac -- 0x1dad
0x1dac:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1dad -- 0x1dae
; data inside code section at 0x1dae -- 0x1dc0
0x1dae:    ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x1dbe:    00 00                                              |..              |
; function: _ZNK6CBlock15GetMerkleBranchEi at 0x1dc0 -- 0x1eed
0x1dc0:    55                                 	push ebp
0x1dc1:    57                                 	push edi
0x1dc2:    56                                 	push esi
0x1dc3:    53                                 	push ebx
0x1dc4:    83 ec 5c                           	sub esp, 0x5c
0x1dc7:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x1dcb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1dd2:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x1dd6:    31 d2                              	xor edx, edx
0x1dd8:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x1ddc:    8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
0x1de0:    8b 48 5c                           	mov ecx, dword ptr [eax + 0x5c]
0x1de3:    39 48 60                           	cmp dword ptr [eax + 0x60], ecx
0x1de6:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1dea:    0f 84 e1 00 00 00                  	je 0x1ed1 <_ZNK6CBlock15GetMerkleBranchEi+0x111>
0x1df0:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1df4:    c7 06 00 00 00 00                  	mov dword ptr [esi], 0
0x1dfa:    c7 46 04 00 00 00 00               	mov dword ptr [esi + 4], 0
0x1e01:    c7 46 08 00 00 00 00               	mov dword ptr [esi + 8], 0
0x1e08:    8b 59 54                           	mov ebx, dword ptr [ecx + 0x54]
0x1e0b:    2b 59 50                           	sub ebx, dword ptr [ecx + 0x50]
0x1e0e:    c1 fb 05                           	sar ebx, 5
0x1e11:    83 fb 01                           	cmp ebx, 1
0x1e14:    0f 8e 9e 00 00 00                  	jle 0x1eb8 <_ZNK6CBlock15GetMerkleBranchEi+0xf8>
0x1e1a:    31 ed                              	xor ebp, ebp
0x1e1c:    31 c0                              	xor eax, eax
0x1e1e:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x1e26:    eb 50                              	jmp 0x1e78 <_ZNK6CBlock15GetMerkleBranchEi+0xb8>
0x1e28:    85 c0                              	test eax, eax
0x1e2a:    74 2e                              	je 0x1e5a <_ZNK6CBlock15GetMerkleBranchEi+0x9a>
0x1e2c:    8b 0a                              	mov ecx, dword ptr [edx]
0x1e2e:    89 08                              	mov dword ptr [eax], ecx
0x1e30:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x1e33:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x1e36:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x1e39:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x1e3c:    8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0x1e3f:    89 48 0c                           	mov dword ptr [eax + 0xc], ecx
0x1e42:    8b 4a 10                           	mov ecx, dword ptr [edx + 0x10]
0x1e45:    89 48 10                           	mov dword ptr [eax + 0x10], ecx
0x1e48:    8b 4a 14                           	mov ecx, dword ptr [edx + 0x14]
0x1e4b:    89 48 14                           	mov dword ptr [eax + 0x14], ecx
0x1e4e:    8b 4a 18                           	mov ecx, dword ptr [edx + 0x18]
0x1e51:    89 48 18                           	mov dword ptr [eax + 0x18], ecx
0x1e54:    8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0x1e57:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1e5a:    8d 53 01                           	lea edx, [ebx + 1]
0x1e5d:    83 c0 20                           	add eax, 0x20
0x1e60:    d1 fa                              	sar edx, 1
0x1e62:    83 fa 01                           	cmp edx, 1
0x1e65:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1e68:    74 4e                              	je 0x1eb8 <_ZNK6CBlock15GetMerkleBranchEi+0xf8>
0x1e6a:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1e6d:    d1 ff                              	sar edi, 1
0x1e6f:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x1e72:    01 5c 24 18                        	add dword ptr [esp + 0x18], ebx
0x1e76:    89 d3                              	mov ebx, edx
0x1e78:    89 f9                              	mov ecx, edi
0x1e7a:    83 f1 01                           	xor ecx, 1
0x1e7d:    8d 53 ff                           	lea edx, [ebx - 1]
0x1e80:    39 d1                              	cmp ecx, edx
0x1e82:    0f 4e d1                           	cmovle edx, ecx
0x1e85:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1e89:    03 54 24 18                        	add edx, dword ptr [esp + 0x18]
0x1e8d:    c1 e2 05                           	shl edx, 5
0x1e90:    03 51 5c                           	add edx, dword ptr [ecx + 0x5c]
0x1e93:    39 e8                              	cmp eax, ebp
0x1e95:    75 91                              	jne 0x1e28 <_ZNK6CBlock15GetMerkleBranchEi+0x68>
0x1e97:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1e9b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e9f:    89 34 24                           	mov dword ptr [esp], esi
0x1ea2:    e8 09 1f 00 00                     	call 0x3db0 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x1ea7:    8d 53 01                           	lea edx, [ebx + 1]
0x1eaa:    d1 fa                              	sar edx, 1
0x1eac:    83 fa 01                           	cmp edx, 1
0x1eaf:    75 b9                              	jne 0x1e6a <_ZNK6CBlock15GetMerkleBranchEi+0xaa>
0x1eb1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x1eb8:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x1ebc:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1ec3:    89 f0                              	mov eax, esi
0x1ec5:    75 3e                              	jne 0x1f05 <function_1f05>
0x1ec7:    83 c4 5c                           	add esp, 0x5c
0x1eca:    5b                                 	pop ebx
0x1ecb:    5e                                 	pop esi
0x1ecc:    5f                                 	pop edi
0x1ecd:    5d                                 	pop ebp
0x1ece:    c2 04 00                           	ret 4
0x1ed1:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1ed5:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1ed9:    89 04 24                           	mov dword ptr [esp], eax
0x1edc:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1ee0:    e8 0b fb ff ff                     	call 0x19f0 <_ZNK6CBlock15BuildMerkleTreeEv>
0x1ee5:    83 ec 04                           	sub esp, 4
0x1ee8:    e9 03 ff ff ff                     	jmp 0x1df0 <_ZNK6CBlock15GetMerkleBranchEi+0x30>
; data inside code section at 0x1eed -- 0x1ef0
0x1eed:    8b 16 89                                           |...             |
; function: function_1ef0 at 0x1ef0 -- 0x1ef1
0x1ef0:    c3                                 	ret 
; data inside code section at 0x1ef1 -- 0x1ef9
0x1ef1:    85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x1ef9 -- 0x1efa
; data inside code section at 0x1efa -- 0x1f01
0x1efa:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1f01 -- 0x1f02
; data inside code section at 0x1f02 -- 0x1f05
0x1f02:    ff ff ff                                           |...             |
; function: function_1f05 at 0x1f05 -- 0x1f06
; dynamically linked function: __stack_chk_fail at 0x1f06 -- 0x1f07
; data inside code section at 0x1f07 -- 0x1f10
0x1f07:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZNK12CTransaction8ToStringEv at 0x1f10 -- 0x1f3b
0x1f10:    55                                 	push ebp
0x1f11:    57                                 	push edi
0x1f12:    56                                 	push esi
0x1f13:    53                                 	push ebx
0x1f14:    81 ec dc 00 00 00                  	sub esp, 0xdc
0x1f1a:    8b ac 24 f4 00 00 00               	mov ebp, dword ptr [esp + 0xf4]
0x1f21:    8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0x1f28:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1f2f:    89 94 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], edx
0x1f36:    31 d2                              	xor edx, edx
0x1f38:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
; data inside code section at 0x1f3b -- 0x1f3d
0x1f3b:    c7 00                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1f3d -- 0x1fc0
; data inside code section at 0x1fc0 -- 0x1fc1
0x1fc0:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x1fc1 -- 0x1fc2
; data inside code section at 0x1fc2 -- 0x1fcc
0x1fc2:    ff ff ff 39 fb 75 cf 8d  84 24                     |...9.u...$      |
; function: function_1fcc at 0x1fcc -- 0x1fcd
0x1fcc:    cb                                 	retf 
; data inside code section at 0x1fcd -- 0x200b
0x1fcd:    00 00 00 89 44 24 08 8d  74 24 40 8d 84 24 8b 00   |....D$..t$@..$..|
0x1fdd:    00 00 89 5c 24 0c 89 44  24 04 89 34 24 e8 c1 20   |...\$..D$..4$.. |
0x1fed:    00 00 8d 7c 24 44 c7 44  24 0c 0a 00 00 00 c7 44   |...|$D.D$......D|
0x1ffd:    24 08 00 00 00 00 89 74  24 04 89 3c 24 e8         |$......t$..<$.  |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x200b -- 0x200c
; data inside code section at 0x200c -- 0x2069
0x200c:    ff ff ff 8b 44 24 30 8d  5c 24 48 2b 44 24 28 8b   |....D$0.\$H+D$(.|
0x201c:    54 24 24 c7 44 24 08 00  00 00 00 c1 f8 02 69 c0   |T$$.D$........i.|
0x202c:    cd cc cc cc 89 54 24 1c  c7 44 24 04 1c 38 00 00   |.....T$..D$..8..|
0x203c:    89 1c 24 89 44 24 18 8b  44 24 38 2b 44 24 34 c1   |..$.D$..D$8+D$4.|
0x204c:    f8 02 69 c0 c5 4e ec c4  89 44 24 14 8b 44 24 3c   |..i..N...D$..D$<|
0x205c:    89 44 24 10 8b 44 24 44  89 44 24 0c e8            |.D$..D$D.D$..   |
; dynamically linked function: _Z14real_strprintfPKciz at 0x2069 -- 0x206a
; data inside code section at 0x206a -- 0x207c
0x206a:    ff ff ff 83 ec 04 8b 44  24 2c 89 5c 24 04 89 04   |.......D$,.\$...|
0x207a:    24 e8                                              |$.              |
; dynamically linked function: _ZNSs6appendERKSs at 0x207c -- 0x207d
; data inside code section at 0x207d -- 0x2084
0x207d:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2084 -- 0x2085
; data inside code section at 0x2085 -- 0x208c
0x2085:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x208c -- 0x208d
; data inside code section at 0x208d -- 0x2094
0x208d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2094 -- 0x2095
; data inside code section at 0x2095 -- 0x20cf
0x2095:    ff ff ff 8b 55 04 8b 45  08 29 d0 c1 f8 02 69 c0   |....U..E.)....i.|
0x20a5:    c5 4e ec c4 85 c0 0f 84  b0 00 00 00 c7 44 24 24   |.N...........D$$|
0x20b5:    00 00 00 00 8d 7c 24 4c  8d 74 24 50 8d 5c 24 54   |.....|$L.t$P.\$T|
0x20c5:    8d 76 00 6b 44 24 24 34  89 3c                     |.v.kD$$4.<      |
; function: function_20cf at 0x20cf -- 0x20d4
0x20cf:    24 01                              	and al, 1
0x20d1:    c2 89 54                           	ret 0x5489
; data inside code section at 0x20d4 -- 0x20fd
0x20d4:    24 04 e8 05 f4 ff ff 83  ec 04 89 7c 24 08 c7 44   |$..........|$..D|
0x20e4:    24 04 96 31 00 00 89 34  24 e8 0e 1c 00 00 83 ec   |$..1...4$.......|
0x20f4:    04 89 74 24 04 89 1c 24  e8                        |..t$...$.       |
; dynamically linked function: _ZNSsC1ERKSs at 0x20fd -- 0x20fe
; data inside code section at 0x20fe -- 0x2115
0x20fe:    ff ff ff c7 44 24 08 01  00 00 00 c7 44 24 04 9b   |....D$......D$..|
0x210e:    31 00 00 89 1c 24 e8                               |1....$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x2115 -- 0x2116
; data inside code section at 0x2116 -- 0x2125
0x2116:    ff ff ff 8b 44 24 2c 89  5c 24 04 89 04 24 e8      |....D$,.\$...$. |
; dynamically linked function: _ZNSs6appendERKSs at 0x2125 -- 0x2126
; data inside code section at 0x2126 -- 0x212d
0x2126:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x212d -- 0x212e
; data inside code section at 0x212e -- 0x2135
0x212e:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2135 -- 0x2136
; data inside code section at 0x2136 -- 0x213d
0x2136:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x213d -- 0x213e
; data inside code section at 0x213e -- 0x2198
0x213e:    ff ff ff 8b 55 04 8b 45  08 83 44 24 24 01 29 d0   |....U..E..D$$.).|
0x214e:    c1 f8 02 69 c0 c5 4e ec  c4 39 44 24 24 0f 82 67   |...i..N..9D$$..g|
0x215e:    ff ff ff 8b 55 10 8b 45  14 29 d0 c1 f8 02 69 c0   |....U..E.)....i.|
0x216e:    cd cc cc cc 85 c0 0f 84  b9 00 00 00 c7 44 24 28   |.............D$(|
0x217e:    00 00 00 00 8d 7c 24 58  c7 44 24 24 00 00 00 00   |.....|$X.D$$....|
0x218e:    8d 74 24 5c 8d 5c 24 60  66 90                     |.t$\.\$`f.      |
; function: function_2198 at 0x2198 -- 0x2199
; data inside code section at 0x2199 -- 0x21ca
0x2199:    54 24 28 89 3c 24 89 54  24 04 e8 58 f1 ff ff 83   |T$(.<$.T$..X....|
0x21a9:    ec 04 89 7c 24 08 c7 44  24 04 96 31 00 00 89 34   |...|$..D$..1...4|
0x21b9:    24 e8 41 1b 00 00 83 ec  04 89 74 24 04 89 1c 24   |$.A.......t$...$|
0x21c9:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x21ca -- 0x21cb
; data inside code section at 0x21cb -- 0x21e2
0x21cb:    ff ff ff c7 44 24 08 01  00 00 00 c7 44 24 04 9b   |....D$......D$..|
0x21db:    31 00 00 89 1c 24 e8                               |1....$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x21e2 -- 0x21e3
; data inside code section at 0x21e3 -- 0x21f2
0x21e3:    ff ff ff 8b 44 24 2c 89  5c 24 04 89 04 24 e8      |....D$,.\$...$. |
; dynamically linked function: _ZNSs6appendERKSs at 0x21f2 -- 0x21f3
; data inside code section at 0x21f3 -- 0x21fa
0x21f3:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x21fa -- 0x21fb
; data inside code section at 0x21fb -- 0x2202
0x21fb:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2202 -- 0x2203
; data inside code section at 0x2203 -- 0x220a
0x2203:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x220a -- 0x220b
; data inside code section at 0x220b -- 0x220d
0x220b:    ff ff                                              |..              |
; function: function_220d at 0x220d -- 0x2254
0x220d:    ff 8b 55 10 8b 45                  	dec dword ptr [ebx + 0x458b1055]
0x2213:    14 83                              	adc al, 0x83
0x2215:    44                                 	inc esp
0x2216:    24 24                              	and al, 0x24
0x2218:    01 83 44 24 28 14                  	add dword ptr [ebx + 0x14282444], eax
0x221e:    29 d0                              	sub eax, edx
0x2220:    c1 f8 02                           	sar eax, 2
0x2223:    69 c0 cd cc cc cc                  	imul eax, eax, 0xcccccccd
0x2229:    39 44 24 24                        	cmp dword ptr [esp + 0x24], eax
0x222d:    0f 82 65 ff ff ff                  	jb 0x2198 <function_2198>
0x2233:    8b 94 24 cc 00 00 00               	mov edx, dword ptr [esp + 0xcc]
0x223a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2241:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x2245:    75 23                              	jne 0x226a <function_226a>
0x2247:    81 c4 dc 00 00 00                  	add esp, 0xdc
0x224d:    5b                                 	pop ebx
0x224e:    5e                                 	pop esi
0x224f:    5f                                 	pop edi
0x2250:    5d                                 	pop ebp
0x2251:    c2 04 00                           	ret 4
; data inside code section at 0x2254 -- 0x2255
0x2254:    89                                                 |.               |
; function: function_2255 at 0x2255 -- 0x2256
0x2255:    c3                                 	ret 
; function: function_2256 at 0x2256 -- 0x2257
; data inside code section at 0x2257 -- 0x225e
0x2257:    44 24 2c 89 04 24 e8                               |D$,..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x225e -- 0x225f
; function: function_225f at 0x225f -- 0x2260
; data inside code section at 0x2260 -- 0x2266
0x2260:    ff ff 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _Unwind_Resume at 0x2266 -- 0x2267
; data inside code section at 0x2267 -- 0x226a
0x2267:    ff ff ff                                           |...             |
; function: function_226a at 0x226a -- 0x226b
; dynamically linked function: __stack_chk_fail at 0x226b -- 0x226c
; data inside code section at 0x226c -- 0x226f
0x226c:    ff ff ff                                           |...             |
; function: function_226f at 0x226f -- 0x2270
; data inside code section at 0x2270 -- 0x2273
0x2270:    c5 89 1c                                           |...             |
; function: function_2273 at 0x2273 -- 0x2277
0x2273:    24 89                              	and al, 0x89
0x2275:    eb e8                              	jmp 0x225f <function_225f>
; dynamically linked function: _ZNSsD1Ev at 0x2277 -- 0x2278
; data inside code section at 0x2278 -- 0x227b
0x2278:    ff ff ff                                           |...             |
; function: function_227b at 0x227b -- 0x227c
; data inside code section at 0x227c -- 0x227f
0x227c:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x227f -- 0x2280
; data inside code section at 0x2280 -- 0x2283
0x2280:    ff ff ff                                           |...             |
; function: function_2283 at 0x2283 -- 0x2284
; data inside code section at 0x2284 -- 0x2287
0x2284:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x2287 -- 0x2288
; data inside code section at 0x2288 -- 0x228b
0x2288:    ff ff ff                                           |...             |
; function: function_228b at 0x228b -- 0x228d
0x228b:    eb c9                              	jmp 0x2256 <function_2256>
; data inside code section at 0x228d -- 0x2290
0x228d:    8d 76 00                                           |.v.             |
; function: function_2290 at 0x2290 -- 0x2292
0x2290:    eb dd                              	jmp 0x226f <function_226f>
; function: function_2292 at 0x2292 -- 0x2296
0x2292:    89 c3                              	mov ebx, eax
0x2294:    eb e5                              	jmp 0x227b <function_227b>
; function: function_2296 at 0x2296 -- 0x229a
0x2296:    89 c3                              	mov ebx, eax
0x2298:    eb e9                              	jmp 0x2283 <function_2283>
; data inside code section at 0x229a -- 0x22a0
0x229a:    8d b6 00 00 00 00                                  |......          |
; function: function_22a0 at 0x22a0 -- 0x22a2
0x22a0:    eb cd                              	jmp 0x226f <function_226f>
; function: function_22a2 at 0x22a2 -- 0x22a4
0x22a2:    eb cb                              	jmp 0x226f <function_226f>
; function: function_22a4 at 0x22a4 -- 0x22a6
0x22a4:    eb ec                              	jmp 0x2292 <function_2292>
; data inside code section at 0x22a6 -- 0x22b0
0x22a6:    8d 76 00 8d bc 27 00 00  00 00                     |.v...'....      |
; function: function_22b0 at 0x22b0 -- 0x22b2
0x22b0:    eb e4                              	jmp 0x2296 <function_2296>
; data inside code section at 0x22b2 -- 0x22b6
0x22b2:    89 c5 89 1c                                        |....            |
; function: function_22b6 at 0x22b6 -- 0x22ba
0x22b6:    24 89                              	and al, 0x89
0x22b8:    eb e8                              	jmp 0x22a2 <function_22a2>
; dynamically linked function: _ZNSsD1Ev at 0x22ba -- 0x22bb
; data inside code section at 0x22bb -- 0x22be
0x22bb:    ff ff ff                                           |...             |
; function: function_22be at 0x22be -- 0x22bf
; data inside code section at 0x22bf -- 0x22c2
0x22bf:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x22c2 -- 0x22c3
; data inside code section at 0x22c3 -- 0x22c6
0x22c3:    ff ff ff                                           |...             |
; function: function_22c6 at 0x22c6 -- 0x22c7
; data inside code section at 0x22c7 -- 0x22ca
0x22c7:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x22ca -- 0x22cb
; data inside code section at 0x22cb -- 0x22ce
0x22cb:    ff ff ff                                           |...             |
; function: function_22ce at 0x22ce -- 0x22d0
0x22ce:    eb 86                              	jmp 0x2256 <function_2256>
; function: function_22d0 at 0x22d0 -- 0x22d4
0x22d0:    89 c3                              	mov ebx, eax
0x22d2:    eb ea                              	jmp 0x22be <function_22be>
; function: function_22d4 at 0x22d4 -- 0x22d8
0x22d4:    89 c3                              	mov ebx, eax
0x22d6:    eb ee                              	jmp 0x22c6 <function_22c6>
; data inside code section at 0x22d8 -- 0x22e0
0x22d8:    90 8d b4 26 00 00 00 00                            |...&....        |
; function: _ZNK12CTransaction5printEv at 0x22e0 -- 0x2316
0x22e0:    53                                 	push ebx
0x22e1:    83 ec 38                           	sub esp, 0x38
0x22e4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x22ea:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x22ee:    31 c0                              	xor eax, eax
0x22f0:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x22f4:    8d 5c 24 28                        	lea ebx, [esp + 0x28]
0x22f8:    89 1c 24                           	mov dword ptr [esp], ebx
0x22fb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x22ff:    e8 0c fc ff ff                     	call 0x1f10 <_ZNK12CTransaction8ToStringEv>
0x2304:    83 ec 04                           	sub esp, 4
0x2307:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x230b:    c7 04 24 9d 31 00 00               	mov dword ptr [esp], 0x319d ; "%s"
0x2312:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x2316 -- 0x2317
0x2316:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2317 -- 0x2318
; data inside code section at 0x2318 -- 0x231f
0x2318:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x231f -- 0x2320
; data inside code section at 0x2320 -- 0x2322
0x2320:    ff ff                                              |..              |
; function: function_2322 at 0x2322 -- 0x2335
0x2322:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x2328:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x232e:    75 05                              	jne 0x2335 <function_2322+0x12>
0x2330:    83 c4 38                           	add esp, 0x38
0x2333:    5b                                 	pop ebx
0x2334:    c3                                 	ret 
; data inside code section at 0x2335 -- 0x2336
0x2335:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2336 -- 0x2337
; data inside code section at 0x2337 -- 0x2342
0x2337:    ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0x2342 -- 0x2343
; data inside code section at 0x2343 -- 0x234e
0x2343:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x234e -- 0x234f
; data inside code section at 0x234f -- 0x2360
0x234f:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x235f:    00                                                 |.               |
; function: _ZNK6CBlock5printEv at 0x2360 -- 0x23e2
0x2360:    55                                 	push ebp
0x2361:    57                                 	push edi
0x2362:    56                                 	push esi
0x2363:    be 1f 00 00 00                     	mov esi, 0x1f
0x2368:    53                                 	push ebx
0x2369:    81 ec 3c 01 00 00                  	sub esp, 0x13c
0x236f:    8b 9c 24 50 01 00 00               	mov ebx, dword ptr [esp + 0x150]
0x2376:    8d bc 24 eb 00 00 00               	lea edi, [esp + 0xeb]
0x237d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2383:    89 84 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], eax
0x238a:    31 c0                              	xor eax, eax
0x238c:    8b 43 50                           	mov eax, dword ptr [ebx + 0x50]
0x238f:    8d 6b 24                           	lea ebp, [ebx + 0x24]
0x2392:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x2396:    8b 43 54                           	mov eax, dword ptr [ebx + 0x54]
0x2399:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x239d:    8b 43 4c                           	mov eax, dword ptr [ebx + 0x4c]
0x23a0:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x23a4:    8b 43 48                           	mov eax, dword ptr [ebx + 0x48]
0x23a7:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x23ab:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x23ae:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x23b2:    8d b6 00 00 00 00                  	lea esi, [esi]
0x23b8:    0f b6 44 35 00                     	movzx eax, byte ptr [ebp + esi]
0x23bd:    83 ee 01                           	sub esi, 1
0x23c0:    89 3c 24                           	mov dword ptr [esp], edi
0x23c3:    83 c7 02                           	add edi, 2
0x23c6:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x23ce:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x23d6:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x23da:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x23e2 -- 0x23e3
0x23e2:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x23e3 -- 0x23e4
; data inside code section at 0x23e4 -- 0x240a
0x23e4:    ff ff ff 83 fe ff 75 cc  8d 84 24 83 00 00 00 be   |......u...$.....|
0x23f4:    1f 00 00 00 89 44 24 0c  8d 84 24 2b 01 00 00 89   |.....D$...$+....|
0x2404:    44 24 08 8d 84 24                                  |D$...$          |
; function: function_240a at 0x240a -- 0x245a
0x240a:    eb 00                              	jmp 0x240c
0x240c:    00 00                              	add byte ptr [eax], al
0x240e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2412:    8d 44 24 78                        	lea eax, [esp + 0x78]
0x2416:    89 04 24                           	mov dword ptr [esp], eax
0x2419:    8d 6b 04                           	lea ebp, [ebx + 4]
0x241c:    e8 8f 1c 00 00                     	call 0x40b0 <_ZNSsC1IPcEET_S1_RKSaIcE>
0x2421:    8b 44 24 78                        	mov eax, dword ptr [esp + 0x78]
0x2425:    8d bc 24 eb 00 00 00               	lea edi, [esp + 0xeb]
0x242c:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x2430:    0f b6 44 35 00                     	movzx eax, byte ptr [ebp + esi]
0x2435:    83 ee 01                           	sub esi, 1
0x2438:    89 3c 24                           	mov dword ptr [esp], edi
0x243b:    83 c7 02                           	add edi, 2
0x243e:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x2446:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x244e:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x2452:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x245a -- 0x245b
0x245a:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x245b -- 0x245c
; data inside code section at 0x245c -- 0x247d
0x245c:    ff ff ff 83 fe ff 75 cc  8d 84 24 84 00 00 00 89   |......u...$.....|
0x246c:    44 24 0c 8d 84 24 2b 01  00 00 89 44 24 08 8d 84   |D$...$+....D$...|
0x247c:    24                                                 |$               |
; function: function_247d at 0x247d -- 0x2500
0x247d:    eb 00                              	jmp 0x247f
0x247f:    00 00                              	add byte ptr [eax], al
0x2481:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2485:    8d 44 24 74                        	lea eax, [esp + 0x74]
0x2489:    89 04 24                           	mov dword ptr [esp], eax
0x248c:    e8 1f 1c 00 00                     	call 0x40b0 <_ZNSsC1IPcEET_S1_RKSaIcE>
0x2491:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x2495:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x2499:    8b 03                              	mov eax, dword ptr [ebx]
0x249b:    25 00 0e 00 00                     	and eax, 0xe00
0x24a0:    3d 00 02 00 00                     	cmp eax, 0x200
0x24a5:    0f 84 0a 03 00 00                  	je 0x27b5 <function_27b5>
0x24ab:    8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x24b2:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x24b6:    89 04 24                           	mov dword ptr [esp], eax
0x24b9:    e8 c2 e0 ff ff                     	call 0x580 <_ZNK12CBlockHeader7GetHashEv>
0x24be:    83 ec 04                           	sub esp, 4
0x24c1:    8d bc 24 c7 00 00 00               	lea edi, [esp + 0xc7]
0x24c8:    8d ac 24 eb 00 00 00               	lea ebp, [esp + 0xeb]
0x24cf:    8d b4 24 a7 00 00 00               	lea esi, [esp + 0xa7]
0x24d6:    66 90                              	nop 
0x24d8:    0f b6 07                           	movzx eax, byte ptr [edi]
0x24db:    83 ef 01                           	sub edi, 1
0x24de:    89 2c 24                           	mov dword ptr [esp], ebp
0x24e1:    83 c5 02                           	add ebp, 2
0x24e4:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x24ec:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x24f4:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x24f8:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x2500 -- 0x2501
0x2500:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x2501 -- 0x2502
; data inside code section at 0x2502 -- 0x2526
0x2502:    ff ff ff 39 f7 75 cf 8d  84 24 85 00 00 00 89 44   |...9.u...$.....D|
0x2512:    24 0c 8d 84 24 2b 01 00  00 89 44 24 08 8d 6c 24   |$...$+....D$..l$|
0x2522:    70 8d 84 24                                        |p..$            |
; function: function_2526 at 0x2526 -- 0x2598
0x2526:    eb 00                              	jmp 0x2528
0x2528:    00 00                              	add byte ptr [eax], al
0x252a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x252e:    89 2c 24                           	mov dword ptr [esp], ebp
0x2531:    e8 7a 1b 00 00                     	call 0x40b0 <_ZNSsC1IPcEET_S1_RKSaIcE>
0x2536:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x253a:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x253e:    8b 03                              	mov eax, dword ptr [ebx]
0x2540:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x2544:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2548:    8d 84 24 88 00 00 00               	lea eax, [esp + 0x88]
0x254f:    89 04 24                           	mov dword ptr [esp], eax
0x2552:    e8 29 e0 ff ff                     	call 0x580 <_ZNK12CBlockHeader7GetHashEv>
0x2557:    83 ec 04                           	sub esp, 4
0x255a:    8d 84 24 87 00 00 00               	lea eax, [esp + 0x87]
0x2561:    8d bc 24 eb 00 00 00               	lea edi, [esp + 0xeb]
0x2568:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x256c:    8d 74 26 00                        	lea esi, [esi]
0x2570:    0f b6 06                           	movzx eax, byte ptr [esi]
0x2573:    83 ee 01                           	sub esi, 1
0x2576:    89 3c 24                           	mov dword ptr [esp], edi
0x2579:    83 c7 02                           	add edi, 2
0x257c:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x2584:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x258c:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x2590:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x2598 -- 0x2599
0x2598:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x2599 -- 0x259a
; data inside code section at 0x259a -- 0x25c0
0x259a:    ff ff ff 3b 74 24 38 75  cd 8d 84 24 86 00 00 00   |...;t$8u...$....|
0x25aa:    89 44 24 0c 8d 84 24 2b  01 00 00 89 44 24 08 8d   |.D$...$+....D$..|
0x25ba:    74 24 6c 8d 84 24                                  |t$l..$          |
; function: function_25c0 at 0x25c0 -- 0x263e
0x25c0:    eb 00                              	jmp 0x25c2
0x25c2:    00 00                              	add byte ptr [eax], al
0x25c4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x25c8:    89 34 24                           	mov dword ptr [esp], esi
0x25cb:    e8 e0 1a 00 00                     	call 0x40b0 <_ZNSsC1IPcEET_S1_RKSaIcE>
0x25d0:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x25d4:    2b 44 24 40                        	sub eax, dword ptr [esp + 0x40]
0x25d8:    c7 04 24 68 38 00 00               	mov dword ptr [esp], 0x3868 ; "CBlock(hash=%s, ver=%d, pow_algo=%d, pow_hash=%s, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%zu)\n"
0x25df:    c1 f8 05                           	sar eax, 5
0x25e2:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x25e6:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x25ea:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x25ee:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x25f2:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x25f6:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x25fa:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x25fe:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x2602:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x2606:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x260a:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x260e:    8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x2612:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x2616:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x261a:    25 00 0e 00 00                     	and eax, 0xe00
0x261f:    3d 00 02 00 00                     	cmp eax, 0x200
0x2624:    0f 94 c0                           	sete al
0x2627:    0f b6 c0                           	movzx eax, al
0x262a:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x262e:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x2632:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2636:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x263a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x263e -- 0x263f
0x263e:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x263f -- 0x2640
; data inside code section at 0x2640 -- 0x2647
0x2640:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2647 -- 0x2648
; data inside code section at 0x2648 -- 0x264f
0x2648:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x264f -- 0x2650
; data inside code section at 0x2650 -- 0x265b
0x2650:    ff ff ff 8d 44 24 74 89  04 24 e8                  |....D$t..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x265b -- 0x265c
; data inside code section at 0x265c -- 0x2667
0x265c:    ff ff ff 8d 44 24 78 89  04 24 e8                  |....D$x..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x2667 -- 0x2668
; data inside code section at 0x2668 -- 0x2688
0x2668:    ff ff ff 8b 43 54 2b 43  50 c1 f8 05 85 c0 74 34   |....CT+CP.....t4|
0x2678:    31 f6 8d b6 00 00 00 00  c7 04 24 a0 31 00 00 e8   |1.........$.1...|
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2688 -- 0x2689
; data inside code section at 0x2689 -- 0x26b4
0x2689:    ff ff ff 89 f0 83 c6 01  c1 e0 05 03 43 50 89 04   |............CP..|
0x2699:    24 e8 41 fc ff ff 8b 43  54 2b 43 50 c1 f8 05 39   |$.A....CT+CP...9|
0x26a9:    c6 72 d4 c7 04 24 a3 31  00 00 e8                  |.r...$.1...     |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x26b4 -- 0x26b5
; data inside code section at 0x26b5 -- 0x26e3
0x26b5:    ff ff ff 8b 53 5c 8b 43  60 29 d0 c1 f8 05 85 c0   |....S\.C`)......|
0x26c5:    0f 84 bf 00 00 00 31 f6  8d 76 00 89 f0 bf 1f 00   |......1..v......|
0x26d5:    00 00 c1 e0 05 01 d0 89  5c 24 3c 8d ac 24         |........\$<..$  |
; function: function_26e3 at 0x26e3 -- 0x2719
0x26e3:    eb 00                              	jmp 0x26e5
0x26e5:    00 00                              	add byte ptr [eax], al
0x26e7:    89 c3                              	mov ebx, eax
0x26e9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x26f0:    0f b6 04 3b                        	movzx eax, byte ptr [ebx + edi]
0x26f4:    83 ef 01                           	sub edi, 1
0x26f7:    89 2c 24                           	mov dword ptr [esp], ebp
0x26fa:    83 c5 02                           	add ebp, 2
0x26fd:    c7 44 24 0c 2b 31 00 00            	mov dword ptr [esp + 0xc], 0x312b ; "%02x"
0x2705:    c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x270d:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x2711:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
; data inside code section at 0x2719 -- 0x271a
0x2719:    e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x271a -- 0x271b
; data inside code section at 0x271b -- 0x2740
0x271b:    ff ff ff 83 ff ff 75 cd  8d 84 24 87 00 00 00 8b   |......u...$.....|
0x272b:    5c 24 3c 89 44 24 0c 8d  84 24 2b 01 00 00 89 44   |\$<.D$...$+....D|
0x273b:    24 08 8d 84 24                                     |$...$           |
; function: function_2740 at 0x2740 -- 0x2763
0x2740:    eb 00                              	jmp 0x2742
0x2742:    00 00                              	add byte ptr [eax], al
0x2744:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2748:    8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x274c:    89 04 24                           	mov dword ptr [esp], eax
0x274f:    e8 5c 19 00 00                     	call 0x40b0 <_ZNSsC1IPcEET_S1_RKSaIcE>
0x2754:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x2758:    c7 04 24 b3 31 00 00               	mov dword ptr [esp], 0x31b3 ; "%s "
0x275f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x2763 -- 0x2764
0x2763:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2764 -- 0x2765
; data inside code section at 0x2765 -- 0x2773
0x2765:    ff ff ff 8d 44 24 7c 83  c6 01 89 04 24 e8         |....D$|.....$.  |
; dynamically linked function: _ZNSsD1Ev at 0x2773 -- 0x2774
; data inside code section at 0x2774 -- 0x2792
0x2774:    ff ff ff 8b 53 5c 8b 43  60 29 d0 c1 f8 05 39 c6   |....S\.C`)....9.|
0x2784:    0f 82 46 ff ff ff c7 04  24 9b 31 00 00 e8         |..F.....$.1...  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2792 -- 0x2793
; data inside code section at 0x2793 -- 0x2795
0x2793:    ff ff                                              |..              |
; function: function_2795 at 0x2795 -- 0x27b5
0x2795:    ff 8b 84 24 2c 01                  	dec dword ptr [ebx + 0x12c2484]
0x279b:    00 00                              	add byte ptr [eax], al
0x279d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x27a4:    0f 85 3f 01 00 00                  	jne 0x28e9 <function_28e9>
0x27aa:    81 c4 3c 01 00 00                  	add esp, 0x13c
0x27b0:    5b                                 	pop ebx
0x27b1:    5e                                 	pop esi
0x27b2:    5f                                 	pop edi
0x27b3:    5d                                 	pop ebp
0x27b4:    c3                                 	ret 
; function: function_27b5 at 0x27b5 -- 0x281b
0x27b5:    8d 84 24 c8 00 00 00               	lea eax, [esp + 0xc8]
0x27bc:    c7 84 24 c8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc8], 0
0x27c7:    c7 84 24 cc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xcc], 0
0x27d2:    c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x27dd:    c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x27e8:    c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x27f3:    c7 84 24 dc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdc], 0
0x27fe:    c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x2809:    c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x2814:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2818:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x281b -- 0x281c
0x281b:    e8                                                 |.               |
; dynamically linked function: _Z19scrypt_1024_1_1_256PKcPc at 0x281c -- 0x281d
; data inside code section at 0x281d -- 0x281f
0x281d:    ff ff                                              |..              |
; function: function_281f at 0x281f -- 0x2895
0x281f:    ff 8b 84 24 c8 00                  	dec dword ptr [ebx + 0xc82484]
0x2825:    00 00                              	add byte ptr [eax], al
0x2827:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x282e:    8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0x2835:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x283c:    8b 84 24 d0 00 00 00               	mov eax, dword ptr [esp + 0xd0]
0x2843:    89 84 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], eax
0x284a:    8b 84 24 d4 00 00 00               	mov eax, dword ptr [esp + 0xd4]
0x2851:    89 84 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], eax
0x2858:    8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x285f:    89 84 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], eax
0x2866:    8b 84 24 dc 00 00 00               	mov eax, dword ptr [esp + 0xdc]
0x286d:    89 84 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], eax
0x2874:    8b 84 24 e0 00 00 00               	mov eax, dword ptr [esp + 0xe0]
0x287b:    89 84 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], eax
0x2882:    8b 84 24 e4 00 00 00               	mov eax, dword ptr [esp + 0xe4]
0x2889:    89 84 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], eax
0x2890:    e9 2c fc ff ff                     	jmp 0x24c1
; data inside code section at 0x2895 -- 0x2896
0x2895:    89                                                 |.               |
; function: function_2896 at 0x2896 -- 0x2897
0x2896:    c3                                 	ret 
; function: function_2897 at 0x2897 -- 0x2898
; data inside code section at 0x2898 -- 0x289f
0x2898:    44 24 78 89 04 24 e8                               |D$x..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x289f -- 0x28a0
; data inside code section at 0x28a0 -- 0x28a7
0x28a0:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x28a7 -- 0x28a8
; data inside code section at 0x28a8 -- 0x28ac
0x28a8:    ff ff ff 89                                        |....            |
; function: function_28ac at 0x28ac -- 0x28ad
0x28ac:    c3                                 	ret 
; function: function_28ad at 0x28ad -- 0x28ae
; data inside code section at 0x28ae -- 0x28b5
0x28ae:    44 24 74 89 04 24 e8                               |D$t..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x28b5 -- 0x28b6
; data inside code section at 0x28b6 -- 0x28b9
0x28b6:    ff ff ff                                           |...             |
; function: function_28b9 at 0x28b9 -- 0x28bb
0x28b9:    eb dc                              	jmp 0x2897 <function_2897>
; data inside code section at 0x28bb -- 0x28bc
0x28bb:    89                                                 |.               |
; function: function_28bc at 0x28bc -- 0x28bd
0x28bc:    c3                                 	ret 
; function: function_28bd at 0x28bd -- 0x28be
; data inside code section at 0x28be -- 0x28c1
0x28be:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x28c1 -- 0x28c2
; data inside code section at 0x28c2 -- 0x28c5
0x28c2:    ff ff ff                                           |...             |
; function: function_28c5 at 0x28c5 -- 0x28c7
0x28c5:    eb e6                              	jmp 0x28ad <function_28ad>
; data inside code section at 0x28c7 -- 0x28c8
0x28c7:    89                                                 |.               |
; function: function_28c8 at 0x28c8 -- 0x28c9
0x28c8:    c3                                 	ret 
; data inside code section at 0x28c9 -- 0x28cd
0x28c9:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x28cd -- 0x28ce
; data inside code section at 0x28ce -- 0x28d1
0x28ce:    ff ff ff                                           |...             |
; function: function_28d1 at 0x28d1 -- 0x28d3
0x28d1:    eb ea                              	jmp 0x28bd <function_28bd>
; data inside code section at 0x28d3 -- 0x28d4
0x28d3:    89                                                 |.               |
; function: function_28d4 at 0x28d4 -- 0x28d5
0x28d4:    c3                                 	ret 
; data inside code section at 0x28d5 -- 0x28dd
0x28d5:    8d 44 24 7c 89 04 24 e8                            |.D$|..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x28dd -- 0x28de
; data inside code section at 0x28de -- 0x28e5
0x28de:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x28e5 -- 0x28e6
; data inside code section at 0x28e6 -- 0x28e9
0x28e6:    ff ff ff                                           |...             |
; function: function_28e9 at 0x28e9 -- 0x28ea
; dynamically linked function: __stack_chk_fail at 0x28ea -- 0x28eb
; data inside code section at 0x28eb -- 0x28ee
0x28eb:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x28f0 -- 0x291a
0x28f0:    83 ec 1c                           	sub esp, 0x1c
0x28f3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x28f9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x28fd:    31 c0                              	xor eax, eax
0x28ff:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2903:    c7 00 50 4d 00 00                  	mov dword ptr [eax], 0x4d50
0x2909:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x290d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2914:    75 04                              	jne 0x291a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x2916:    83 c4 1c                           	add esp, 0x1c
0x2919:    c3                                 	ret 
; data inside code section at 0x291a -- 0x291b
0x291a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x291b -- 0x291c
; data inside code section at 0x291c -- 0x291f
0x291c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x2920 -- 0x294a
0x2920:    83 ec 1c                           	sub esp, 0x1c
0x2923:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2929:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x292d:    31 c0                              	xor eax, eax
0x292f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2933:    c7 00 b0 4d 00 00                  	mov dword ptr [eax], 0x4db0
0x2939:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x293d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2944:    75 04                              	jne 0x294a <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0x2946:    83 c4 1c                           	add esp, 0x1c
0x2949:    c3                                 	ret 
; data inside code section at 0x294a -- 0x294b
0x294a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x294b -- 0x294c
; data inside code section at 0x294c -- 0x294f
0x294c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x2950 -- 0x29a0
0x2950:    83 ec 1c                           	sub esp, 0x1c
0x2953:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2957:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x295e:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2962:    31 d2                              	xor edx, edx
0x2964:    85 c0                              	test eax, eax
0x2966:    74 20                              	je 0x2988 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0x2968:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x296c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2973:    75 24                              	jne 0x2999 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2975:    8b 10                              	mov edx, dword ptr [eax]
0x2977:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x297b:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x297e:    83 c4 1c                           	add esp, 0x1c
0x2981:    ff e0                              	jmp eax
; data inside code section at 0x2983 -- 0x2988
0x2983:    90 8d 74 26 00                                     |..t&.           |
0x2988:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x298c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2993:    75 04                              	jne 0x2999 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x2995:    83 c4 1c                           	add esp, 0x1c
0x2998:    c3                                 	ret 
0x2999:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x29a0 -- 0x29a1
0x29a0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x29a1 -- 0x29a2
; data inside code section at 0x29a2 -- 0x29a5
0x29a2:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x29b0 -- 0x29df
0x29b0:    83 ec 1c                           	sub esp, 0x1c
0x29b3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x29b9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x29bd:    31 c0                              	xor eax, eax
0x29bf:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x29c3:    c7 00 c8 4b 00 00                  	mov dword ptr [eax], 0x4bc8
0x29c9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x29cd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x29d4:    75 04                              	jne 0x29da <_ZN5boost6system14error_categoryD1Ev+0x2a>
0x29d6:    83 c4 1c                           	add esp, 0x1c
0x29d9:    c3                                 	ret 
0x29da:    e8 fc ff ff ff                     	call 0x29db
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x29e0 -- 0x2a14
0x29e0:    83 ec 1c                           	sub esp, 0x1c
0x29e3:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x29e7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x29ee:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x29f2:    31 d2                              	xor edx, edx
0x29f4:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x29f8:    89 10                              	mov dword ptr [eax], edx
0x29fa:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x29fe:    89 50 04                           	mov dword ptr [eax + 4], edx
0x2a01:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2a05:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a0c:    75 06                              	jne 0x2a14 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0x2a0e:    83 c4 1c                           	add esp, 0x1c
0x2a11:    c2 04 00                           	ret 4
; data inside code section at 0x2a14 -- 0x2a15
0x2a14:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a15 -- 0x2a16
; data inside code section at 0x2a16 -- 0x2a19
0x2a16:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x2a20 -- 0x2a84
0x2a20:    56                                 	push esi
0x2a21:    53                                 	push ebx
0x2a22:    83 ec 34                           	sub esp, 0x34
0x2a25:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2a29:    8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x2a2d:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2a34:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x2a38:    31 d2                              	xor edx, edx
0x2a3a:    8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x2a3e:    8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x2a42:    8b 10                              	mov edx, dword ptr [eax]
0x2a44:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2a48:    89 0c 24                           	mov dword ptr [esp], ecx
0x2a4b:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x2a4f:    ff 52 10                           	call dword ptr [edx + 0x10]
0x2a52:    31 c0                              	xor eax, eax
0x2a54:    83 ec 04                           	sub esp, 4
0x2a57:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x2a5b:    39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0x2a5e:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x2a62:    74 14                              	je 0x2a78 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0x2a64:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2a68:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a6f:    75 0e                              	jne 0x2a7f <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5f>
0x2a71:    83 c4 34                           	add esp, 0x34
0x2a74:    5b                                 	pop ebx
0x2a75:    5e                                 	pop esi
0x2a76:    c3                                 	ret 
; data inside code section at 0x2a77 -- 0x2a78
0x2a77:    90                                                 |.               |
0x2a78:    39 13                              	cmp dword ptr [ebx], edx
0x2a7a:    0f 94 c0                           	sete al
0x2a7d:    eb e5                              	jmp 0x2a64 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
0x2a7f:    e8 fc ff ff ff                     	call 0x2a80
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x2a90 -- 0x2acf
0x2a90:    53                                 	push ebx
0x2a91:    83 ec 18                           	sub esp, 0x18
0x2a94:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2a98:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x2a9c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2aa2:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2aa6:    31 c0                              	xor eax, eax
0x2aa8:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x2aac:    39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x2aaf:    74 17                              	je 0x2ac8 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0x2ab1:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2ab5:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2abc:    75 11                              	jne 0x2acf <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0x2abe:    83 c4 18                           	add esp, 0x18
0x2ac1:    5b                                 	pop ebx
0x2ac2:    c3                                 	ret 
; data inside code section at 0x2ac3 -- 0x2ac8
0x2ac3:    90 8d 74 26 00                                     |..t&.           |
0x2ac8:    39 0a                              	cmp dword ptr [edx], ecx
0x2aca:    0f 94 c0                           	sete al
0x2acd:    eb e2                              	jmp 0x2ab1 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0x2acf -- 0x2ad0
0x2acf:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2ad0 -- 0x2ad1
; data inside code section at 0x2ad1 -- 0x2ad4
0x2ad1:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x2ae0 -- 0x2b0a
0x2ae0:    83 ec 1c                           	sub esp, 0x1c
0x2ae3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2ae9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2aed:    31 c0                              	xor eax, eax
0x2aef:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2af3:    c7 00 b0 4d 00 00                  	mov dword ptr [eax], 0x4db0
0x2af9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x2afd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2b04:    75 04                              	jne 0x2b0a <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0x2b06:    83 c4 1c                           	add esp, 0x1c
0x2b09:    c3                                 	ret 
; data inside code section at 0x2b0a -- 0x2b0b
0x2b0a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2b0b -- 0x2b0c
; data inside code section at 0x2b0c -- 0x2b0f
0x2b0c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x2b10 -- 0x2b60
0x2b10:    83 ec 1c                           	sub esp, 0x1c
0x2b13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2b19:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2b1d:    31 c0                              	xor eax, eax
0x2b1f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2b23:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x2b26:    85 c0                              	test eax, eax
0x2b28:    74 1e                              	je 0x2b48 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0x2b2a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2b2e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2b35:    75 22                              	jne 0x2b59 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x2b37:    8b 10                              	mov edx, dword ptr [eax]
0x2b39:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2b3d:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x2b40:    83 c4 1c                           	add esp, 0x1c
0x2b43:    ff e0                              	jmp eax
; data inside code section at 0x2b45 -- 0x2b48
0x2b45:    8d 76 00                                           |.v.             |
0x2b48:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x2b4c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2b53:    75 04                              	jne 0x2b59 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x2b55:    83 c4 1c                           	add esp, 0x1c
0x2b58:    c3                                 	ret 
0x2b59:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x2b60 -- 0x2b61
0x2b60:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2b61 -- 0x2b62
; data inside code section at 0x2b62 -- 0x2b65
0x2b62:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x2b70 -- 0x2b90
0x2b70:    83 ec 1c                           	sub esp, 0x1c
0x2b73:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2b79:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2b7d:    31 c0                              	xor eax, eax
0x2b7f:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2b83:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2b8a:    75 04                              	jne 0x2b90 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x1f>
0x2b8c:    83 c4 1c                           	add esp, 0x1c
0x2b8f:    c3                                 	ret 
; data inside code section at 0x2b90 -- 0x2b91
0x2b90:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2b91 -- 0x2b92
; data inside code section at 0x2b92 -- 0x2b95
0x2b92:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x2ba0 -- 0x2bce
0x2ba0:    83 ec 1c                           	sub esp, 0x1c
0x2ba3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2baa:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2bae:    31 d2                              	xor edx, edx
0x2bb0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2bb4:    c7 00 b0 4d 00 00                  	mov dword ptr [eax], 0x4db0
0x2bba:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2bbe:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2bc5:    75 0c                              	jne 0x2bd3 <function_2bd3>
0x2bc7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2bcb:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2bce -- 0x2bcf
0x2bce:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2bcf -- 0x2bd0
; data inside code section at 0x2bd0 -- 0x2bd3
0x2bd0:    ff ff ff                                           |...             |
; function: function_2bd3 at 0x2bd3 -- 0x2bd4
; dynamically linked function: __stack_chk_fail at 0x2bd4 -- 0x2bd5
; data inside code section at 0x2bd5 -- 0x2bd8
0x2bd5:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x2be0 -- 0x2c0e
0x2be0:    83 ec 1c                           	sub esp, 0x1c
0x2be3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2bea:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2bee:    31 d2                              	xor edx, edx
0x2bf0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2bf4:    c7 00 b0 4d 00 00                  	mov dword ptr [eax], 0x4db0
0x2bfa:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2bfe:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2c05:    75 0c                              	jne 0x2c13 <function_2c13>
0x2c07:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2c0b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2c0e -- 0x2c0f
0x2c0e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2c0f -- 0x2c10
; data inside code section at 0x2c10 -- 0x2c13
0x2c10:    ff ff ff                                           |...             |
; function: function_2c13 at 0x2c13 -- 0x2c14
; dynamically linked function: __stack_chk_fail at 0x2c14 -- 0x2c15
; data inside code section at 0x2c15 -- 0x2c18
0x2c15:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x2c20 -- 0x2c4e
0x2c20:    83 ec 1c                           	sub esp, 0x1c
0x2c23:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2c2a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2c2e:    31 d2                              	xor edx, edx
0x2c30:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2c34:    c7 00 50 4d 00 00                  	mov dword ptr [eax], 0x4d50
0x2c3a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2c3e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2c45:    75 0c                              	jne 0x2c53 <function_2c53>
0x2c47:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2c4b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2c4e -- 0x2c4f
0x2c4e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2c4f -- 0x2c50
; data inside code section at 0x2c50 -- 0x2c53
0x2c50:    ff ff ff                                           |...             |
; function: function_2c53 at 0x2c53 -- 0x2c54
; dynamically linked function: __stack_chk_fail at 0x2c54 -- 0x2c55
; data inside code section at 0x2c55 -- 0x2c58
0x2c55:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x2c60 -- 0x2c8e
0x2c60:    83 ec 1c                           	sub esp, 0x1c
0x2c63:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2c6a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2c6e:    31 d2                              	xor edx, edx
0x2c70:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2c74:    c7 00 c8 4b 00 00                  	mov dword ptr [eax], 0x4bc8
0x2c7a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x2c7e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2c85:    75 0c                              	jne 0x2c93 <function_2c93>
0x2c87:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2c8b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x2c8e -- 0x2c8f
0x2c8e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2c8f -- 0x2c90
; data inside code section at 0x2c90 -- 0x2c93
0x2c90:    ff ff ff                                           |...             |
; function: function_2c93 at 0x2c93 -- 0x2c94
; dynamically linked function: __stack_chk_fail at 0x2c94 -- 0x2c95
; data inside code section at 0x2c95 -- 0x2c98
0x2c95:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x2ca0 -- 0x2cc0
0x2ca0:    53                                 	push ebx
0x2ca1:    83 ec 28                           	sub esp, 0x28
0x2ca4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x2ca8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2cae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2cb2:    31 c0                              	xor eax, eax
0x2cb4:    c7 03 f0 4b 00 00                  	mov dword ptr [ebx], 0x4bf0
0x2cba:    8d 43 10                           	lea eax, [ebx + 0x10]
0x2cbd:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2cc0 -- 0x2cc1
0x2cc0:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x2cc1 -- 0x2cc2
; data inside code section at 0x2cc2 -- 0x2cdb
0x2cc2:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x2cd2:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x2cdb -- 0x2cdc
; data inside code section at 0x2cdc -- 0x2ce0
0x2cdc:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x2ce0 -- 0x2ce1
; data inside code section at 0x2ce1 -- 0x2ce4
0x2ce1:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2cf0 -- 0x2cf7
0x2cf0:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x2cf5:    eb 09                              	jmp 0x2d00 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x2cf7 -- 0x2d00
0x2cf7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x2d00 -- 0x2d1c
0x2d00:    56                                 	push esi
0x2d01:    53                                 	push ebx
0x2d02:    83 ec 24                           	sub esp, 0x24
0x2d05:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x2d09:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2d0f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2d13:    31 c0                              	xor eax, eax
0x2d15:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x2d1c -- 0x2d1d
0x2d1c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x2d1d -- 0x2d1e
; data inside code section at 0x2d1e -- 0x2d22
0x2d1e:    ff ff ff 89                                        |....            |
; function: function_2d22 at 0x2d22 -- 0x2d23
0x2d22:    c3                                 	ret 
; data inside code section at 0x2d23 -- 0x2d75
0x2d23:    c7 00 18 4d 00 00 8b 46  04 85 c0 89 43 04 74 08   |...M...F....C.t.|
0x2d33:    8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 68 4d 00   |....$.R..F...hM.|
0x2d43:    00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0x2d53:    80 4d 00 00 c7 43 18 94  4d 00 00 89 43 10 c7 44   |.M...C..M...C..D|
0x2d63:    24 08 e0 34 00 00 c7 44  24 04 00 4e 00 00 89 1c   |$..4...D$..N....|
0x2d73:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x2d75 -- 0x2d76
; data inside code section at 0x2d76 -- 0x2d7f
0x2d76:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x2d7f -- 0x2d80
; data inside code section at 0x2d80 -- 0x2d87
0x2d80:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2d87 -- 0x2d88
; data inside code section at 0x2d88 -- 0x2d8b
0x2d88:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x3020 -- 0x3040
0x3020:    53                                 	push ebx
0x3021:    83 ec 28                           	sub esp, 0x28
0x3024:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3028:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x302e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3032:    31 c0                              	xor eax, eax
0x3034:    c7 03 f0 4b 00 00                  	mov dword ptr [ebx], 0x4bf0
0x303a:    8d 43 10                           	lea eax, [ebx + 0x10]
0x303d:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3040 -- 0x3041
0x3040:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3041 -- 0x3042
; data inside code section at 0x3042 -- 0x3049
0x3042:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x3049 -- 0x304a
; data inside code section at 0x304a -- 0x3063
0x304a:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x305a:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x3063 -- 0x3064
; data inside code section at 0x3064 -- 0x3068
0x3064:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x3068 -- 0x3069
; data inside code section at 0x3069 -- 0x306c
0x3069:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3070 -- 0x3077
0x3070:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3075:    eb 09                              	jmp 0x3080 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x3077 -- 0x3080
0x3077:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x3080 -- 0x309c
0x3080:    56                                 	push esi
0x3081:    53                                 	push ebx
0x3082:    83 ec 24                           	sub esp, 0x24
0x3085:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3089:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x308f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3093:    31 c0                              	xor eax, eax
0x3095:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x309c -- 0x309d
0x309c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x309d -- 0x309e
; data inside code section at 0x309e -- 0x30a0
0x309e:    ff ff                                              |..              |
; function: function_30a0 at 0x30a0 -- 0x30f7
0x30a0:    ff 89 c3 c7 00 18                  	dec dword ptr [ecx + 0x1800c7c3]
0x30a6:    4d                                 	dec ebp
0x30a7:    00 00                              	add byte ptr [eax], al
0x30a9:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x30ac:    85 c0                              	test eax, eax
0x30ae:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x30b1:    74 08                              	je 0x30bb <function_30a0+0x1b>
0x30b3:    8b 10                              	mov edx, dword ptr [eax]
0x30b5:    89 04 24                           	mov dword ptr [esp], eax
0x30b8:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x30bb:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x30be:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x30c2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x30c9:    c7 03 68 4d 00 00                  	mov dword ptr [ebx], 0x4d68
0x30cf:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x30d2:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x30d5:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x30d8:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x30db:    c7 43 14 80 4d 00 00               	mov dword ptr [ebx + 0x14], 0x4d80
0x30e2:    c7 43 18 94 4d 00 00               	mov dword ptr [ebx + 0x18], 0x4d94
0x30e9:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x30ec:    8d 43 18                           	lea eax, [ebx + 0x18]
0x30ef:    75 06                              	jne 0x30f7 <function_30a0+0x56>
0x30f1:    83 c4 24                           	add esp, 0x24
0x30f4:    5b                                 	pop ebx
0x30f5:    5e                                 	pop esi
0x30f6:    c3                                 	ret 
; data inside code section at 0x30f7 -- 0x30f8
0x30f7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x30f8 -- 0x30f9
; data inside code section at 0x30f9 -- 0x3102
0x30f9:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x3102 -- 0x3103
; data inside code section at 0x3103 -- 0x310a
0x3103:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x310a -- 0x310b
; data inside code section at 0x310b -- 0x310e
0x310b:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x31c0 -- 0x3216
0x31c0:    83 ec 2c                           	sub esp, 0x2c
0x31c3:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x31c7:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x31cb:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x31cf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x31d5:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x31d9:    31 c0                              	xor eax, eax
0x31db:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x31df:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x31e2:    8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0x31e5:    85 d2                              	test edx, edx
0x31e7:    74 27                              	je 0x3210 <_ZNK5boost6system12system_error4whatEv+0x50>
0x31e9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x31ed:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x31f4:    89 d8                              	mov eax, ebx
0x31f6:    0f 85 96 00 00 00                  	jne 0x3292 <function_3292>
0x31fc:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x3200:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x3204:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x3208:    83 c4 2c                           	add esp, 0x2c
0x320b:    c3                                 	ret 
; data inside code section at 0x320c -- 0x3210
0x320c:    8d 74 26 00                                        |.t&.            |
0x3210:    89 34 24                           	mov dword ptr [esp], esi
0x3213:    8d 7e 10                           	lea edi, [esi + 0x10]
; data inside code section at 0x3216 -- 0x3217
0x3216:    e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x3217 -- 0x3218
; data inside code section at 0x3218 -- 0x321d
0x3218:    ff ff ff 89 04                                     |.....           |
; function: function_321d at 0x321d -- 0x3220
0x321d:    24 89                              	and al, 0x89
0x321f:    c3                                 	ret 
; data inside code section at 0x3220 -- 0x3221
0x3220:    e8                                                 |.               |
; dynamically linked function: strlen at 0x3221 -- 0x3222
; data inside code section at 0x3222 -- 0x3231
0x3222:    ff ff ff 89 5c 24 04 89  3c 24 89 44 24 08 e8      |....\$..<$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0x3231 -- 0x3232
; data inside code section at 0x3232 -- 0x323f
0x3232:    ff ff ff 8b 46 10 8b 40  f4 85 c0 75 39            |....F..@...u9   |
; function: function_323f at 0x323f -- 0x3240
; data inside code section at 0x3240 -- 0x3264
0x3240:    46 0c 8d 5c 24 18 8b 4e  08 8b 10 89 4c 24 08 89   |F..\$..N....L$..|
0x3250:    44 24 04 89 1c 24 ff 52  0c 83 ec 04 89 5c 24 04   |D$...$.R.....\$.|
0x3260:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0x3264 -- 0x3265
; data inside code section at 0x3265 -- 0x326c
0x3265:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x326c -- 0x326d
; data inside code section at 0x326d -- 0x3270
0x326d:    ff ff ff                                           |...             |
; function: function_3270 at 0x3270 -- 0x3278
0x3270:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x3273:    e9 71 ff ff ff                     	jmp 0x31e9
; data inside code section at 0x3278 -- 0x328c
0x3278:    c7 44 24 08 02 00 00 00  c7 44 24 04 0e 31 00 00   |.D$......D$..1..|
0x3288:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendEPKcj at 0x328c -- 0x328d
; data inside code section at 0x328d -- 0x3290
0x328d:    ff ff ff                                           |...             |
; function: function_3290 at 0x3290 -- 0x3292
0x3290:    eb ad                              	jmp 0x323f <function_323f>
; function: function_3292 at 0x3292 -- 0x329c
0x3292:    e8 fc ff ff ff                     	call 0x3293
0x3297:    89 c7                              	mov edi, eax
0x3299:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x329c -- 0x329d
0x329c:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x329d -- 0x329e
; data inside code section at 0x329e -- 0x32a3
0x329e:    ff ff ff 89 f8                                     |.....           |
; function: function_32a3 at 0x32a3 -- 0x32a4
; data inside code section at 0x32a4 -- 0x32a7
0x32a4:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x32a7 -- 0x32a8
; data inside code section at 0x32a8 -- 0x32af
0x32a8:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x32af -- 0x32b0
; data inside code section at 0x32b0 -- 0x32b4
0x32b0:    ff ff ff 89                                        |....            |
; function: function_32b4 at 0x32b4 -- 0x32b5
0x32b4:    c3                                 	ret 
; data inside code section at 0x32b5 -- 0x32b6
0x32b5:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x32b6 -- 0x32b7
; data inside code section at 0x32b7 -- 0x32ba
0x32b7:    ff ff ff                                           |...             |
; function: function_32ba at 0x32ba -- 0x32bf
0x32ba:    e9 2a ff ff ff                     	jmp 0x31e9
; data inside code section at 0x32bf -- 0x32c0
0x32bf:    90                                                 |.               |
; function: function_32c0 at 0x32c0 -- 0x32c2
0x32c0:    eb e1                              	jmp 0x32a3 <function_32a3>
; data inside code section at 0x32c2 -- 0x32c3
0x32c2:    83                                                 |.               |
; function: function_32c3 at 0x32c3 -- 0x32c6
0x32c3:    c2 01 89                           	ret 0x8901
; data inside code section at 0x32c6 -- 0x32d0
0x32c6:    04 24 74 05 e8 fc ff ff  ff e8                     |.$t.......      |
; dynamically linked function: __cxa_call_unexpected at 0x32d0 -- 0x32d1
; data inside code section at 0x32d1 -- 0x32d4
0x32d1:    ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x32e0 -- 0x3365
0x32e0:    83 ec 2c                           	sub esp, 0x2c
0x32e3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x32e9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x32ed:    31 c0                              	xor eax, eax
0x32ef:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x32f3:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x32f7:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x32fb:    8b 58 04                           	mov ebx, dword ptr [eax + 4]
0x32fe:    85 db                              	test ebx, ebx
0x3300:    74 11                              	je 0x3313 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x3302:    be ff ff ff ff                     	mov esi, 0xffffffff
0x3307:    89 f0                              	mov eax, esi
0x3309:    f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x330e:    83 f8 01                           	cmp eax, 1
0x3311:    74 1d                              	je 0x3330 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x50>
0x3313:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3317:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x331e:    75 45                              	jne 0x3365 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x3320:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x3324:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3328:    83 c4 2c                           	add esp, 0x2c
0x332b:    c3                                 	ret 
; data inside code section at 0x332c -- 0x3330
0x332c:    8d 74 26 00                                        |.t&.            |
0x3330:    8b 03                              	mov eax, dword ptr [ebx]
0x3332:    89 1c 24                           	mov dword ptr [esp], ebx
0x3335:    ff 50 08                           	call dword ptr [eax + 8]
0x3338:    f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x333d:    83 fe 01                           	cmp esi, 1
0x3340:    75 d1                              	jne 0x3313 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x3342:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3346:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x334d:    75 16                              	jne 0x3365 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x334f:    8b 03                              	mov eax, dword ptr [ebx]
0x3351:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x3355:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3359:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x335d:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x3360:    83 c4 2c                           	add esp, 0x2c
0x3363:    ff e0                              	jmp eax
; data inside code section at 0x3365 -- 0x3366
0x3365:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3366 -- 0x3367
; data inside code section at 0x3367 -- 0x336a
0x3367:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x3370 -- 0x33c1
0x3370:    53                                 	push ebx
0x3371:    83 ec 28                           	sub esp, 0x28
0x3374:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3378:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x337e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3382:    31 c0                              	xor eax, eax
0x3384:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3387:    c7 03 18 4d 00 00                  	mov dword ptr [ebx], 0x4d18
0x338d:    85 c0                              	test eax, eax
0x338f:    74 0c                              	je 0x339d <_ZN5boost9exceptionD1Ev+0x2d>
0x3391:    8b 10                              	mov edx, dword ptr [eax]
0x3393:    89 04 24                           	mov dword ptr [esp], eax
0x3396:    ff 52 10                           	call dword ptr [edx + 0x10]
0x3399:    84 c0                              	test al, al
0x339b:    75 1b                              	jne 0x33b8 <_ZN5boost9exceptionD1Ev+0x48>
0x339d:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x33a1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x33a8:    75 17                              	jne 0x33c1 <_ZN5boost9exceptionD1Ev+0x4f>
0x33aa:    83 c4 28                           	add esp, 0x28
0x33ad:    5b                                 	pop ebx
0x33ae:    66 90                              	nop 
0x33b0:    c3                                 	ret 
; data inside code section at 0x33b1 -- 0x33b8
0x33b1:    8d b4 26 00 00 00 00                               |..&....         |
0x33b8:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x33bf:    eb dc                              	jmp 0x339d <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x33c1 -- 0x33c2
0x33c1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x33c2 -- 0x33c3
; data inside code section at 0x33c3 -- 0x33c7
0x33c3:    ff ff ff 83                                        |....            |
; function: function_33c7 at 0x33c7 -- 0x33ca
0x33c7:    c2 01 89                           	ret 0x8901
; data inside code section at 0x33ca -- 0x33cf
0x33ca:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x33cf -- 0x33d0
; data inside code section at 0x33d0 -- 0x33d4
0x33d0:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x33d4 -- 0x33d5
; data inside code section at 0x33d5 -- 0x33d8
0x33d5:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x33e0 -- 0x33ea
0x33e0:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x33e5:    e9 e6 33 00 00                     	jmp 0x67d0 <function_67d0>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x33f0 -- 0x3436
0x33f0:    53                                 	push ebx
0x33f1:    83 ec 28                           	sub esp, 0x28
0x33f4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x33f8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x33fe:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3402:    31 c0                              	xor eax, eax
0x3404:    c7 03 28 4d 00 00                  	mov dword ptr [ebx], 0x4d28
0x340a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x340d:    c7 43 14 38 4d 00 00               	mov dword ptr [ebx + 0x14], 0x4d38
0x3414:    89 04 24                           	mov dword ptr [esp], eax
0x3417:    e8 fc ff ff ff                     	call 0x3418
0x341c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3420:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3427:    75 0d                              	jne 0x3436 <_ZN5boost16exception_detail10bad_alloc_D1Ev+0x41>
0x3429:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x342d:    83 c4 28                           	add esp, 0x28
0x3430:    5b                                 	pop ebx
0x3431:    e9 2a 33 00 00                     	jmp 0x6760 <function_6760>
; data inside code section at 0x3436 -- 0x3437
0x3436:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3437 -- 0x3438
; data inside code section at 0x3438 -- 0x343b
0x3438:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x3440 -- 0x3447
0x3440:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x3445:    eb 19                              	jmp 0x3460 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x3447 -- 0x3450
0x3447:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x3450 -- 0x3457
0x3450:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3455:    eb 09                              	jmp 0x3460 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x3457 -- 0x3460
0x3457:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x3460 -- 0x348e
0x3460:    53                                 	push ebx
0x3461:    83 ec 28                           	sub esp, 0x28
0x3464:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3468:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x346e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3472:    31 c0                              	xor eax, eax
0x3474:    c7 43 18 50 4d 00 00               	mov dword ptr [ebx + 0x18], 0x4d50
0x347b:    8d 43 14                           	lea eax, [ebx + 0x14]
0x347e:    c7 03 28 4d 00 00                  	mov dword ptr [ebx], 0x4d28
0x3484:    c7 43 14 38 4d 00 00               	mov dword ptr [ebx + 0x14], 0x4d38
0x348b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x348e -- 0x348f
0x348e:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x348f -- 0x3490
; data inside code section at 0x3490 -- 0x34b1
0x3490:    ff ff ff 89 1c 24 e8 15  33 00 00 8b 44 24 1c 65   |.....$..3...D$.e|
0x34a0:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x34b0:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x34b1 -- 0x34b2
; data inside code section at 0x34b2 -- 0x34b6
0x34b2:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x34b6 -- 0x34b7
; data inside code section at 0x34b7 -- 0x34ba
0x34b7:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x34c0 -- 0x34ca
0x34c0:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x34c5:    e9 d6 34 00 00                     	jmp 0x69a0 <function_69a0>
; data inside code section at 0x34ca -- 0x34d0
0x34ca:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x34d0 -- 0x34da
0x34d0:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x34d5:    e9 c6 34 00 00                     	jmp 0x69a0 <function_69a0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x34e0 -- 0x350e
0x34e0:    53                                 	push ebx
0x34e1:    83 ec 28                           	sub esp, 0x28
0x34e4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x34e8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x34ee:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x34f2:    31 c0                              	xor eax, eax
0x34f4:    c7 43 18 50 4d 00 00               	mov dword ptr [ebx + 0x18], 0x4d50
0x34fb:    8d 43 14                           	lea eax, [ebx + 0x14]
0x34fe:    c7 03 28 4d 00 00                  	mov dword ptr [ebx], 0x4d28
0x3504:    c7 43 14 38 4d 00 00               	mov dword ptr [ebx + 0x14], 0x4d38
0x350b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x350e -- 0x350f
0x350e:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x350f -- 0x3510
; data inside code section at 0x3510 -- 0x3512
0x3510:    ff ff                                              |..              |
; function: function_3512 at 0x3512 -- 0x352d
0x3512:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x3518:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x351e:    75 0d                              	jne 0x352d <function_3512+0x16>
0x3520:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3524:    83 c4 28                           	add esp, 0x28
0x3527:    5b                                 	pop ebx
0x3528:    e9 23 33 00 00                     	jmp 0x6850 <function_6850>
; data inside code section at 0x352d -- 0x352e
0x352d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x352e -- 0x352f
; data inside code section at 0x352f -- 0x3532
0x352f:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x3540 -- 0x3547
0x3540:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x3545:    eb 09                              	jmp 0x3550 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x3547 -- 0x3550
0x3547:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x3550 -- 0x3599
0x3550:    53                                 	push ebx
0x3551:    83 ec 28                           	sub esp, 0x28
0x3554:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3558:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x355e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3562:    31 c0                              	xor eax, eax
0x3564:    c7 03 28 4d 00 00                  	mov dword ptr [ebx], 0x4d28
0x356a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x356d:    c7 43 14 38 4d 00 00               	mov dword ptr [ebx + 0x14], 0x4d38
0x3574:    89 04 24                           	mov dword ptr [esp], eax
0x3577:    e8 fc ff ff ff                     	call 0x3578
0x357c:    89 1c 24                           	mov dword ptr [esp], ebx
0x357f:    e8 2c 33 00 00                     	call 0x68b0 <unknown_68b0>
0x3584:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3588:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x358f:    75 0d                              	jne 0x359e <function_359e>
0x3591:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3595:    83 c4 28                           	add esp, 0x28
0x3598:    5b                                 	pop ebx
; data inside code section at 0x3599 -- 0x359a
0x3599:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x359a -- 0x359b
; data inside code section at 0x359b -- 0x359e
0x359b:    ff ff ff                                           |...             |
; function: function_359e at 0x359e -- 0x359f
; dynamically linked function: __stack_chk_fail at 0x359f -- 0x35a0
; data inside code section at 0x35a0 -- 0x35a3
0x35a0:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x35b0 -- 0x35e1
0x35b0:    53                                 	push ebx
0x35b1:    83 ec 28                           	sub esp, 0x28
0x35b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x35b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x35be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x35c2:    31 c0                              	xor eax, eax
0x35c4:    89 1c 24                           	mov dword ptr [esp], ebx
0x35c7:    e8 54 33 00 00                     	call 0x6920 <unknown_6920>
0x35cc:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x35d0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x35d7:    75 0d                              	jne 0x35e6 <function_35e6>
0x35d9:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x35dd:    83 c4 28                           	add esp, 0x28
0x35e0:    5b                                 	pop ebx
; data inside code section at 0x35e1 -- 0x35e2
0x35e1:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x35e2 -- 0x35e3
; data inside code section at 0x35e3 -- 0x35e6
0x35e3:    ff ff ff                                           |...             |
; function: function_35e6 at 0x35e6 -- 0x35e7
; dynamically linked function: __stack_chk_fail at 0x35e7 -- 0x35e8
; data inside code section at 0x35e8 -- 0x35eb
0x35e8:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x35f0 -- 0x3630
0x35f0:    53                                 	push ebx
0x35f1:    83 ec 28                           	sub esp, 0x28
0x35f4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x35f8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x35fe:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3602:    31 c0                              	xor eax, eax
0x3604:    8b 03                              	mov eax, dword ptr [ebx]
0x3606:    85 c0                              	test eax, eax
0x3608:    74 0c                              	je 0x3616 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x360a:    8b 10                              	mov edx, dword ptr [eax]
0x360c:    89 04 24                           	mov dword ptr [esp], eax
0x360f:    ff 52 10                           	call dword ptr [edx + 0x10]
0x3612:    84 c0                              	test al, al
0x3614:    75 12                              	jne 0x3628 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x3616:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x361a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3621:    75 0d                              	jne 0x3630 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x3623:    83 c4 28                           	add esp, 0x28
0x3626:    5b                                 	pop ebx
0x3627:    c3                                 	ret 
0x3628:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x362e:    eb e6                              	jmp 0x3616 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x3630 -- 0x3631
0x3630:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3631 -- 0x3632
; data inside code section at 0x3632 -- 0x3635
0x3632:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIhSaIhEEaSERKS1_
; function: _ZNSt6vectorIhSaIhEEaSERKS1_ at 0x3640 -- 0x3698
0x3640:    83 ec 4c                           	sub esp, 0x4c
0x3643:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x3647:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x364b:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x364f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x3653:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3659:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x365d:    31 c0                              	xor eax, eax
0x365f:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x3663:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x3667:    39 df                              	cmp edi, ebx
0x3669:    74 4b                              	je 0x36b6 <function_36b6>
0x366b:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x366e:    8b 2f                              	mov ebp, dword ptr [edi]
0x3670:    8b 03                              	mov eax, dword ptr [ebx]
0x3672:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x3675:    89 d6                              	mov esi, edx
0x3677:    29 ee                              	sub esi, ebp
0x3679:    29 c1                              	sub ecx, eax
0x367b:    39 ce                              	cmp esi, ecx
0x367d:    76 61                              	jbe 0x36e0 <function_36e0>
0x367f:    89 34 24                           	mov dword ptr [esp], esi
0x3682:    e8 fc ff ff ff                     	call 0x3683
0x3687:    85 f6                              	test esi, esi
0x3689:    89 c7                              	mov edi, eax
0x368b:    74 10                              	je 0x369d <function_369d>
0x368d:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x3691:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3695:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3698 -- 0x3699
0x3698:    e8                                                 |.               |
; dynamically linked function: memmove at 0x3699 -- 0x369a
; data inside code section at 0x369a -- 0x369d
0x369a:    ff ff ff                                           |...             |
; function: function_369d at 0x369d -- 0x36a6
0x369d:    8b 03                              	mov eax, dword ptr [ebx]
0x369f:    85 c0                              	test eax, eax
0x36a1:    74 08                              	je 0x36ab <function_36ab>
0x36a3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x36a6 -- 0x36a7
0x36a6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x36a7 -- 0x36a8
; data inside code section at 0x36a8 -- 0x36ab
0x36a8:    ff ff ff                                           |...             |
; function: function_36ab at 0x36ab -- 0x36b6
0x36ab:    8d 04 37                           	lea eax, [edi + esi]
0x36ae:    89 3b                              	mov dword ptr [ebx], edi
0x36b0:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x36b3:    89 43 04                           	mov dword ptr [ebx + 4], eax
; function: function_36b6 at 0x36b6 -- 0x36dd
0x36b6:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x36ba:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x36c1:    89 d8                              	mov eax, ebx
0x36c3:    0f 85 bb 00 00 00                  	jne 0x3784 <function_3784>
0x36c9:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x36cd:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x36d1:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x36d5:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x36d9:    83 c4 4c                           	add esp, 0x4c
0x36dc:    c3                                 	ret 
; data inside code section at 0x36dd -- 0x36e0
0x36dd:    8d 76 00                                           |.v.             |
; function: function_36e0 at 0x36e0 -- 0x3700
0x36e0:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x36e3:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x36e7:    29 c1                              	sub ecx, eax
0x36e9:    39 ce                              	cmp esi, ecx
0x36eb:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x36ef:    77 1f                              	ja 0x3710 <function_3710>
0x36f1:    85 f6                              	test esi, esi
0x36f3:    74 be                              	je 0x36b3
0x36f5:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x36f9:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x36fd:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3700 -- 0x3701
0x3700:    e8                                                 |.               |
; dynamically linked function: memmove at 0x3701 -- 0x3702
; data inside code section at 0x3702 -- 0x3705
0x3702:    ff ff ff                                           |...             |
; function: function_3705 at 0x3705 -- 0x370b
0x3705:    8b 03                              	mov eax, dword ptr [ebx]
0x3707:    01 f0                              	add eax, esi
0x3709:    eb a8                              	jmp 0x36b3
; data inside code section at 0x370b -- 0x3710
0x370b:    90 8d 74 26 00                                     |..t&.           |
; function: function_3710 at 0x3710 -- 0x3784
0x3710:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x3714:    01 e9                              	add ecx, ebp
0x3716:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x371a:    29 e9                              	sub ecx, ebp
0x371c:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x3720:    75 36                              	jne 0x3758 <function_3710+0x48>
0x3722:    2b 54 24 18                        	sub edx, dword ptr [esp + 0x18]
0x3726:    75 08                              	jne 0x3730 <function_3710+0x20>
0x3728:    01 f0                              	add eax, esi
0x372a:    eb 87                              	jmp 0x36b3
; data inside code section at 0x372c -- 0x3730
0x372c:    8d 74 26 00                                        |.t&.            |
0x3730:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x3734:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x3738:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x373c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3740:    89 14 24                           	mov dword ptr [esp], edx
0x3743:    e8 fc ff ff ff                     	call 0x3744
0x3748:    8b 03                              	mov eax, dword ptr [ebx]
0x374a:    01 f0                              	add eax, esi
0x374c:    e9 62 ff ff ff                     	jmp 0x36b3
; data inside code section at 0x3751 -- 0x3758
0x3751:    8d b4 26 00 00 00 00                               |..&....         |
0x3758:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x375c:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3760:    89 04 24                           	mov dword ptr [esp], eax
0x3763:    e8 fc ff ff ff                     	call 0x3764
0x3768:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x376b:    8b 0f                              	mov ecx, dword ptr [edi]
0x376d:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x3771:    8b 03                              	mov eax, dword ptr [ebx]
0x3773:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x3777:    29 c2                              	sub edx, eax
0x3779:    01 ca                              	add edx, ecx
0x377b:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x377f:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x3782:    eb 9e                              	jmp 0x3722 <function_3710+0x12>
; function: function_3784 at 0x3784 -- 0x3785
; dynamically linked function: __stack_chk_fail at 0x3785 -- 0x3786
; data inside code section at 0x3786 -- 0x3789
0x3786:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x38f0 -- 0x39bc
0x38f0:    56                                 	push esi
0x38f1:    53                                 	push ebx
0x38f2:    83 ec 54                           	sub esp, 0x54
0x38f5:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x38fb:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x38ff:    31 c0                              	xor eax, eax
0x3901:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x3905:    80 3d a8 4d 00 00 00               	cmp byte ptr [0x4da8], 0
0x390c:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x3914:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x391c:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x3924:    c7 44 24 40 ff ff ff ff            	mov dword ptr [esp + 0x40], 0xffffffff
0x392c:    c7 44 24 30 28 4d 00 00            	mov dword ptr [esp + 0x30], 0x4d28
0x3934:    c7 44 24 44 38 4d 00 00            	mov dword ptr [esp + 0x44], 0x4d38
0x393c:    c7 44 24 14 68 4d 00 00            	mov dword ptr [esp + 0x14], 0x4d68
0x3944:    c7 44 24 28 80 4d 00 00            	mov dword ptr [esp + 0x28], 0x4d80
0x394c:    c7 44 24 2c 94 4d 00 00            	mov dword ptr [esp + 0x2c], 0x4d94
0x3954:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x395c:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x3964:    c7 44 24 1c 60 4c 00 00            	mov dword ptr [esp + 0x1c], 0x4c60 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x396c:    c7 44 24 20 8c 37 00 00            	mov dword ptr [esp + 0x20], 0x378c ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x3974:    c7 44 24 24 51 00 00 00            	mov dword ptr [esp + 0x24], 0x51
0x397c:    0f 84 8e 00 00 00                  	je 0x3a10 <function_3a10>
0x3982:    a1 a8 4d 00 00                     	mov eax, dword ptr [0x4da8]
0x3987:    89 03                              	mov dword ptr [ebx], eax
0x3989:    a1 ac 4d 00 00                     	mov eax, dword ptr [0x4dac]
0x398e:    85 c0                              	test eax, eax
0x3990:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3993:    74 04                              	je 0x3999 <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xa9>
0x3995:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x3999:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x399d:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x39a1:    89 04 24                           	mov dword ptr [esp], eax
0x39a4:    c7 44 24 2c 50 4d 00 00            	mov dword ptr [esp + 0x2c], 0x4d50
0x39ac:    c7 44 24 14 28 4d 00 00            	mov dword ptr [esp + 0x14], 0x4d28
0x39b4:    c7 44 24 28 38 4d 00 00            	mov dword ptr [esp + 0x28], 0x4d38
; data inside code section at 0x39bc -- 0x39bd
0x39bc:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x39bd -- 0x39be
; data inside code section at 0x39be -- 0x39e5
0x39be:    ff ff ff 89 34 24 8d 74  24 30 e8 93 32 00 00 8d   |....4$.t$0..2...|
0x39ce:    44 24 44 89 04 24 c7 44  24 30 28 4d 00 00 c7 44   |D$D..$.D$0(M...D|
0x39de:    24 44 38 4d 00 00 e8                               |$D8M...         |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x39e5 -- 0x39e6
; data inside code section at 0x39e6 -- 0x39e8
0x39e6:    ff ff                                              |..              |
; function: function_39e8 at 0x39e8 -- 0x3a0c
0x39e8:    ff 89 34 24 e8 6f                  	dec dword ptr [ecx + 0x6fe82434]
0x39ee:    32 00                              	xor al, byte ptr [eax]
0x39f0:    00 89 d8 8b 54 24                  	add byte ptr [ecx + 0x24548bd8], cl
0x39f6:    4c                                 	dec esp
0x39f7:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x39fe:    0f 85 d7 00 00 00                  	jne 0x3adb <function_3adb>
0x3a04:    83 c4 54                           	add esp, 0x54
0x3a07:    5b                                 	pop ebx
0x3a08:    5e                                 	pop esi
0x3a09:    c2 04 00                           	ret 4
; data inside code section at 0x3a0c -- 0x3a10
0x3a0c:    8d 74 26 00                                        |.t&.            |
; function: function_3a10 at 0x3a10 -- 0x3a17
0x3a10:    c7 04 24 a8 4d 00 00               	mov dword ptr [esp], 0x4da8
; data inside code section at 0x3a17 -- 0x3a18
0x3a17:    e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x3a18 -- 0x3a19
; data inside code section at 0x3a19 -- 0x3a8e
0x3a19:    ff ff ff 85 c0 0f 84 5e  ff ff ff c7 04 24 1c 00   |.......^.....$..|
0x3a29:    00 00 e8 fc ff ff ff 89  c6 c7 00 18 4d 00 00 8b   |............M...|
0x3a39:    44 24 18 85 c0 89 46 04  74 08 8b 10 89 04 24 ff   |D$....F.t.....$.|
0x3a49:    52 0c 8b 44 24 1c c7 06  68 4d 00 00 c7 46 14 80   |R..D$...hM...F..|
0x3a59:    4d 00 00 c7 46 18 94 4d  00 00 89 46 08 8b 44 24   |M...F..M...F..D$|
0x3a69:    20 c7 05 ac 4d 00 00 00  00 00 00 89 46 0c 8b 44   | ...M.......F..D|
0x3a79:    24 24 89 46 10 8d 46 18  a3 a8 4d 00 00 c7 04 24   |$$.F..F...M....$|
0x3a89:    10 00 00 00 e8                                     |.....           |
; dynamically linked function: _Znwj at 0x3a8e -- 0x3a8f
; data inside code section at 0x3a8f -- 0x3ab6
0x3a8f:    ff ff ff c7 40 04 01 00  00 00 c7 00 d0 4d 00 00   |....@........M..|
0x3a9f:    89 70 0c c7 40 08 01 00  00 00 a3 ac 4d 00 00 c7   |.p..@.......M...|
0x3aaf:    04 24 a8 4d 00 00 e8                               |.$.M...         |
; dynamically linked function: __cxa_guard_release at 0x3ab6 -- 0x3ab7
; data inside code section at 0x3ab7 -- 0x3abe
0x3ab7:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x3abe -- 0x3ad1
; data inside code section at 0x3ad1 -- 0x3ad2
0x3ad1:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x3ad2 -- 0x3ad3
; data inside code section at 0x3ad3 -- 0x3ad6
0x3ad3:    ff ff ff                                           |...             |
; function: function_3ad6 at 0x3ad6 -- 0x3adb
0x3ad6:    e9 a7 fe ff ff                     	jmp 0x3982
; function: function_3adb at 0x3adb -- 0x3af0
0x3adb:    e8 fc ff ff ff                     	call 0x3adc
0x3ae0:    89 04 24                           	mov dword ptr [esp], eax
0x3ae3:    e8 fc ff ff ff                     	call 0x3ae4
0x3ae8:    8b 06                              	mov eax, dword ptr [esi]
0x3aea:    89 34 24                           	mov dword ptr [esp], esi
0x3aed:    ff 50 04                           	call dword ptr [eax + 4]
; data inside code section at 0x3af0 -- 0x3af1
0x3af0:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x3af1 -- 0x3af2
; data inside code section at 0x3af2 -- 0x3af6
0x3af2:    ff ff ff 89                                        |....            |
; function: function_3af6 at 0x3af6 -- 0x3af7
0x3af6:    c3                                 	ret 
; data inside code section at 0x3af7 -- 0x3aff
0x3af7:    89 34 24 e8 fc ff ff ff                            |.4$.....        |
; function: function_3aff at 0x3aff -- 0x3b00
; data inside code section at 0x3b00 -- 0x3b07
0x3b00:    04 24 a8 4d 00 00 e8                               |.$.M...         |
; dynamically linked function: __cxa_guard_abort at 0x3b07 -- 0x3b08
; data inside code section at 0x3b08 -- 0x3b27
0x3b08:    ff ff ff 8d 44 24 14 89  04 24 e8 b9 32 00 00 8d   |....D$...$..2...|
0x3b18:    44 24 30 89 04 24 e8 bd  31 00 00 89 1c 24 e8      |D$0..$..1....$. |
; dynamically linked function: _Unwind_Resume at 0x3b27 -- 0x3b28
; data inside code section at 0x3b28 -- 0x3b2a
0x3b28:    ff ff                                              |..              |
; function: function_3b2a at 0x3b2a -- 0x3b31
0x3b2a:    ff 89 c3 eb d0 89                  	dec dword ptr [ecx - 0x762f143d]
0x3b30:    c3                                 	ret 
; data inside code section at 0x3b31 -- 0x3b32
0x3b31:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x3b32 -- 0x3b33
; data inside code section at 0x3b33 -- 0x3b36
0x3b33:    ff ff ff                                           |...             |
; function: function_3b36 at 0x3b36 -- 0x3b38
0x3b36:    eb c7                              	jmp 0x3aff <function_3aff>
; section: .text._Z6HexStrIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEESsT_S8_b
; function: _Z6HexStrIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEESsT_S8_b at 0x3b40 -- 0x3b86
0x3b40:    55                                 	push ebp
0x3b41:    57                                 	push edi
0x3b42:    56                                 	push esi
0x3b43:    53                                 	push ebx
0x3b44:    83 ec 3c                           	sub esp, 0x3c
0x3b47:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x3b4b:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x3b4f:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x3b53:    0f b6 4c 24 5c                     	movzx ecx, byte ptr [esp + 0x5c]
0x3b58:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3b5c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3b62:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x3b66:    31 c0                              	xor eax, eax
0x3b68:    89 d0                              	mov eax, edx
0x3b6a:    2b 44 24 1c                        	sub eax, dword ptr [esp + 0x1c]
0x3b6e:    c7 03 0c 00 00 00                  	mov dword ptr [ebx], 0xc
0x3b74:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x3b78:    8d 04 40                           	lea eax, [eax + eax*2]
0x3b7b:    88 4c 24 1b                        	mov byte ptr [esp + 0x1b], cl
0x3b7f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3b83:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3b86 -- 0x3b87
0x3b86:    e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x3b87 -- 0x3b88
; data inside code section at 0x3b88 -- 0x3b8a
0x3b88:    ff ff                                              |..              |
; function: function_3b8a at 0x3b8a -- 0x3ba2
0x3b8a:    ff 8b 54 24 14 39                  	dec dword ptr [ebx + 0x39142454]
0x3b90:    54                                 	push esp
0x3b91:    24 1c                              	and al, 0x1c
0x3b93:    0f 83 ef 00 00 00                  	jae 0x3c88
0x3b99:    8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0x3b9d:    e9 d0 00 00 00                     	jmp 0x3c72
; data inside code section at 0x3ba2 -- 0x3ba8
0x3ba2:    8d b6 00 00 00 00                                  |......          |
; function: function_3ba8 at 0x3ba8 -- 0x3bc9
0x3ba8:    39 74 24 1c                        	cmp dword ptr [esp + 0x1c], esi
0x3bac:    8b 03                              	mov eax, dword ptr [ebx]
0x3bae:    74 34                              	je 0x3be4
0x3bb0:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x3bb3:    8d 7a 01                           	lea edi, [edx + 1]
0x3bb6:    3b 78 f8                           	cmp edi, dword ptr [eax - 8]
0x3bb9:    77 07                              	ja 0x3bc2 <function_3ba8+0x1a>
0x3bbb:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x3bbe:    85 c9                              	test ecx, ecx
0x3bc0:    7e 11                              	jle 0x3bd3 <function_3bd3>
0x3bc2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x3bc6:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3bc9 -- 0x3bca
0x3bc9:    e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x3bca -- 0x3bcb
; data inside code section at 0x3bcb -- 0x3bd3
0x3bcb:    ff ff ff 8b 03 8b 50 f4                            |......P.        |
; function: function_3bd3 at 0x3bd3 -- 0x3bd9
0x3bd3:    c6 04 10 20                        	mov byte ptr [eax + edx], 0x20
0x3bd7:    8b 03                              	mov eax, dword ptr [ebx]
; data inside code section at 0x3bd9 -- 0x3bda
0x3bd9:    3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3bda -- 0x3c27
; data inside code section at 0x3c27 -- 0x3c28
0x3c27:    3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3c28 -- 0x3c51
; data inside code section at 0x3c51 -- 0x3c52
0x3c51:    e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x3c52 -- 0x3c53
; data inside code section at 0x3c53 -- 0x3c5b
0x3c53:    ff ff ff 8b 03 8b 50 f4                            |......P.        |
; function: function_3c5b at 0x3c5b -- 0x3c62
0x3c5b:    89 e9                              	mov ecx, ebp
0x3c5d:    88 0c 10                           	mov byte ptr [eax + edx], cl
0x3c60:    8b 03                              	mov eax, dword ptr [ebx]
; data inside code section at 0x3c62 -- 0x3c63
0x3c62:    3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3c63 -- 0x3ca1
; function: function_3ca1 at 0x3ca1 -- 0x3cb6
0x3ca1:    c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x3ca8:    89 78 f4                           	mov dword ptr [eax - 0xc], edi
0x3cab:    c6 04 38 00                        	mov byte ptr [eax + edi], 0
0x3caf:    8b 03                              	mov eax, dword ptr [ebx]
0x3cb1:    e9 78 ff ff ff                     	jmp 0x3c2e
; function: function_3cb6 at 0x3cb6 -- 0x3cc6
0x3cb6:    c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x3cbd:    89 78 f4                           	mov dword ptr [eax - 0xc], edi
0x3cc0:    c6 04 38 00                        	mov byte ptr [eax + edi], 0
0x3cc4:    eb a3                              	jmp 0x3c69
; function: function_3cc6 at 0x3cc6 -- 0x3cdb
0x3cc6:    c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x3ccd:    89 78 f4                           	mov dword ptr [eax - 0xc], edi
0x3cd0:    c6 04 38 00                        	mov byte ptr [eax + edi], 0
0x3cd4:    8b 03                              	mov eax, dword ptr [ebx]
0x3cd6:    e9 09 ff ff ff                     	jmp 0x3be4
; function: function_3cdb at 0x3cdb -- 0x3ce5
0x3cdb:    e8 fc ff ff ff                     	call 0x3cdc
0x3ce0:    89 c6                              	mov esi, eax
0x3ce2:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3ce5 -- 0x3ce6
0x3ce5:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3ce6 -- 0x3ce7
; data inside code section at 0x3ce7 -- 0x3cee
0x3ce7:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3cee -- 0x3cef
; data inside code section at 0x3cef -- 0x3cf2
0x3cef:    ff ff ff                                           |...             |
; section: .text._ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
; function: _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_ at 0x3d00 -- 0x3d2e
0x3d00:    83 ec 3c                           	sub esp, 0x3c
0x3d03:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x3d07:    8b 6c 24 44                        	mov ebp, dword ptr [esp + 0x44]
0x3d0b:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x3d0f:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x3d13:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x3d17:    8b 74 24 48                        	mov esi, dword ptr [esp + 0x48]
0x3d1b:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x3d1f:    89 2c 24                           	mov dword ptr [esp], ebp
0x3d22:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3d28:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3d2c:    31 c0                              	xor eax, eax
; data inside code section at 0x3d2e -- 0x3d2f
0x3d2e:    e8                                                 |.               |
; dynamically linked function: strlen at 0x3d2f -- 0x3d30
; data inside code section at 0x3d30 -- 0x3d35
0x3d30:    ff ff ff c7 03                                     |.....           |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x3d35 -- 0x3d49
; data inside code section at 0x3d49 -- 0x3d4a
0x3d49:    e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x3d4a -- 0x3d4b
; data inside code section at 0x3d4b -- 0x3d5a
0x3d4b:    ff ff ff 89 7c 24 08 89  6c 24 04 89 1c 24 e8      |....|$..l$...$. |
; dynamically linked function: _ZNSs6appendEPKcj at 0x3d5a -- 0x3d5b
; data inside code section at 0x3d5b -- 0x3d66
0x3d5b:    ff ff ff 89 74 24 04 89  1c 24 e8                  |....t$...$.     |
; dynamically linked function: _ZNSs6appendERKSs at 0x3d66 -- 0x3d67
; data inside code section at 0x3d67 -- 0x3d69
0x3d67:    ff ff                                              |..              |
; function: function_3d69 at 0x3d69 -- 0x3d8f
0x3d69:    ff 8b 54 24 1c 65                  	dec dword ptr [ebx + 0x651c2454]
0x3d6f:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x3d75:    89 d8                              	mov eax, ebx
0x3d77:    75 16                              	jne 0x3d8f <function_3d69+0x23>
0x3d79:    8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x3d7d:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x3d81:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x3d85:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x3d89:    83 c4 3c                           	add esp, 0x3c
0x3d8c:    c2 04 00                           	ret 4
; data inside code section at 0x3d8f -- 0x3d90
0x3d8f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3d90 -- 0x3d91
; data inside code section at 0x3d91 -- 0x3d9a
0x3d91:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x3d9a -- 0x3d9b
; data inside code section at 0x3d9b -- 0x3da2
0x3d9b:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x3da2 -- 0x3da3
; data inside code section at 0x3da3 -- 0x3da6
0x3da3:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
; function: _ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_ at 0x3db0 -- 0x3f2b
0x3db0:    55                                 	push ebp
0x3db1:    57                                 	push edi
0x3db2:    56                                 	push esi
0x3db3:    53                                 	push ebx
0x3db4:    83 ec 5c                           	sub esp, 0x5c
0x3db7:    8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0x3dbb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3dc1:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x3dc5:    31 c0                              	xor eax, eax
0x3dc7:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x3dcb:    8b 74 24 78                        	mov esi, dword ptr [esp + 0x78]
0x3dcf:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x3dd2:    3b 47 08                           	cmp eax, dword ptr [edi + 8]
0x3dd5:    0f 84 1d 01 00 00                  	je 0x3ef8 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x148>
0x3ddb:    85 c0                              	test eax, eax
0x3ddd:    74 2f                              	je 0x3e0e <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x5e>
0x3ddf:    8b 50 e0                           	mov edx, dword ptr [eax - 0x20]
0x3de2:    89 10                              	mov dword ptr [eax], edx
0x3de4:    8b 50 e4                           	mov edx, dword ptr [eax - 0x1c]
0x3de7:    89 50 04                           	mov dword ptr [eax + 4], edx
0x3dea:    8b 50 e8                           	mov edx, dword ptr [eax - 0x18]
0x3ded:    89 50 08                           	mov dword ptr [eax + 8], edx
0x3df0:    8b 50 ec                           	mov edx, dword ptr [eax - 0x14]
0x3df3:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x3df6:    8b 50 f0                           	mov edx, dword ptr [eax - 0x10]
0x3df9:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x3dfc:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x3dff:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x3e02:    8b 50 f8                           	mov edx, dword ptr [eax - 8]
0x3e05:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x3e08:    8b 50 fc                           	mov edx, dword ptr [eax - 4]
0x3e0b:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x3e0e:    8d 50 20                           	lea edx, [eax + 0x20]
0x3e11:    89 57 04                           	mov dword ptr [edi + 4], edx
0x3e14:    8b 16                              	mov edx, dword ptr [esi]
0x3e16:    8d 48 e0                           	lea ecx, [eax - 0x20]
0x3e19:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x3e1d:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x3e20:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x3e24:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x3e27:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x3e2b:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x3e2e:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x3e32:    8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0x3e35:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x3e39:    8b 56 14                           	mov edx, dword ptr [esi + 0x14]
0x3e3c:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x3e40:    8b 56 18                           	mov edx, dword ptr [esi + 0x18]
0x3e43:    89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0x3e47:    8b 56 1c                           	mov edx, dword ptr [esi + 0x1c]
0x3e4a:    89 ce                              	mov esi, ecx
0x3e4c:    29 de                              	sub esi, ebx
0x3e4e:    c1 fe 05                           	sar esi, 5
0x3e51:    85 f6                              	test esi, esi
0x3e53:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x3e57:    7e 4f                              	jle 0x3ea8 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xf8>
0x3e59:    31 d2                              	xor edx, edx
0x3e5b:    90                                 	nop 
0x3e5c:    8d 74 26 00                        	lea esi, [esi]
0x3e60:    8b 7c 11 e0                        	mov edi, dword ptr [ecx + edx - 0x20]
0x3e64:    89 7c 10 e0                        	mov dword ptr [eax + edx - 0x20], edi
0x3e68:    8b 7c 11 e4                        	mov edi, dword ptr [ecx + edx - 0x1c]
0x3e6c:    89 7c 10 e4                        	mov dword ptr [eax + edx - 0x1c], edi
0x3e70:    8b 7c 11 e8                        	mov edi, dword ptr [ecx + edx - 0x18]
0x3e74:    89 7c 10 e8                        	mov dword ptr [eax + edx - 0x18], edi
0x3e78:    8b 7c 11 ec                        	mov edi, dword ptr [ecx + edx - 0x14]
0x3e7c:    89 7c 10 ec                        	mov dword ptr [eax + edx - 0x14], edi
0x3e80:    8b 7c 11 f0                        	mov edi, dword ptr [ecx + edx - 0x10]
0x3e84:    89 7c 10 f0                        	mov dword ptr [eax + edx - 0x10], edi
0x3e88:    8b 7c 11 f4                        	mov edi, dword ptr [ecx + edx - 0xc]
0x3e8c:    89 7c 10 f4                        	mov dword ptr [eax + edx - 0xc], edi
0x3e90:    8b 7c 11 f8                        	mov edi, dword ptr [ecx + edx - 8]
0x3e94:    89 7c 10 f8                        	mov dword ptr [eax + edx - 8], edi
0x3e98:    8b 7c 11 fc                        	mov edi, dword ptr [ecx + edx - 4]
0x3e9c:    89 7c 10 fc                        	mov dword ptr [eax + edx - 4], edi
0x3ea0:    83 ea 20                           	sub edx, 0x20
0x3ea3:    83 ee 01                           	sub esi, 1
0x3ea6:    75 b8                              	jne 0x3e60 <_ZNSt6vectorI7uint256SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xb0>
0x3ea8:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x3eac:    89 03                              	mov dword ptr [ebx], eax
0x3eae:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x3eb2:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3eb5:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x3eb9:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3ebc:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x3ec0:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3ec3:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x3ec7:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3eca:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x3ece:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3ed1:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x3ed5:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x3ed8:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x3edc:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x3edf:    8b 74 24 4c                        	mov esi, dword ptr [esp + 0x4c]
0x3ee3:    65 33 35 14 00 00 00               	xor esi, dword ptr gs:[0x14]
0x3eea:    0f 85 ba 01 00 00                  	jne 0x40aa <function_40aa>
0x3ef0:    83 c4 5c                           	add esp, 0x5c
0x3ef3:    5b                                 	pop ebx
0x3ef4:    5e                                 	pop esi
0x3ef5:    5f                                 	pop edi
0x3ef6:    5d                                 	pop ebp
0x3ef7:    c3                                 	ret 
0x3ef8:    8b 0f                              	mov ecx, dword ptr [edi]
0x3efa:    89 c5                              	mov ebp, eax
0x3efc:    29 cd                              	sub ebp, ecx
0x3efe:    c1 fd 05                           	sar ebp, 5
0x3f01:    85 ed                              	test ebp, ebp
0x3f03:    0f 84 54 01 00 00                  	je 0x405d <function_405d>
0x3f09:    8d 54 2d 00                        	lea edx, [ebp + ebp]
0x3f0d:    39 d5                              	cmp ebp, edx
0x3f0f:    0f 86 5c 01 00 00                  	jbe 0x4071 <function_4071>
0x3f15:    89 dd                              	mov ebp, ebx
0x3f17:    29 cd                              	sub ebp, ecx
0x3f19:    c1 fd 05                           	sar ebp, 5
0x3f1c:    c7 44 24 1c e0 ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffe0
0x3f24:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3f28:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x3f2b -- 0x3f2c
0x3f2b:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3f2c -- 0x3f2d
; data inside code section at 0x3f2d -- 0x3f39
0x3f2d:    ff ff ff 8b 0f 89 44 24  14 8b 54 24               |......D$..T$    |
; function: function_3f39 at 0x3f39 -- 0x3f41
0x3f39:    14 8b                              	adc al, 0x8b
0x3f3b:    47                                 	inc edi
0x3f3c:    04 83                              	add al, 0x83
0x3f3e:    c2 20 89                           	ret 0x8920
; data inside code section at 0x3f41 -- 0x3f44
0x3f41:    54 24 18                                           |T$.             |
; function: function_3f44 at 0x3f44 -- 0x405d
0x3f44:    c1 e5 05                           	shl ebp, 5
0x3f47:    03 6c 24 14                        	add ebp, dword ptr [esp + 0x14]
0x3f4b:    74 2f                              	je 0x3f7c <function_3f44+0x38>
0x3f4d:    8b 16                              	mov edx, dword ptr [esi]
0x3f4f:    89 55 00                           	mov dword ptr [ebp], edx
0x3f52:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x3f55:    89 55 04                           	mov dword ptr [ebp + 4], edx
0x3f58:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x3f5b:    89 55 08                           	mov dword ptr [ebp + 8], edx
0x3f5e:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x3f61:    89 55 0c                           	mov dword ptr [ebp + 0xc], edx
0x3f64:    8b 56 10                           	mov edx, dword ptr [esi + 0x10]
0x3f67:    89 55 10                           	mov dword ptr [ebp + 0x10], edx
0x3f6a:    8b 56 14                           	mov edx, dword ptr [esi + 0x14]
0x3f6d:    89 55 14                           	mov dword ptr [ebp + 0x14], edx
0x3f70:    8b 56 18                           	mov edx, dword ptr [esi + 0x18]
0x3f73:    89 55 18                           	mov dword ptr [ebp + 0x18], edx
0x3f76:    8b 56 1c                           	mov edx, dword ptr [esi + 0x1c]
0x3f79:    89 55 1c                           	mov dword ptr [ebp + 0x1c], edx
0x3f7c:    39 d9                              	cmp ecx, ebx
0x3f7e:    74 5c                              	je 0x3fdc <function_3f44+0x98>
0x3f80:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x3f84:    89 ce                              	mov esi, ecx
0x3f86:    66 90                              	nop 
0x3f88:    85 d2                              	test edx, edx
0x3f8a:    74 2e                              	je 0x3fba <function_3f44+0x76>
0x3f8c:    8b 2e                              	mov ebp, dword ptr [esi]
0x3f8e:    89 2a                              	mov dword ptr [edx], ebp
0x3f90:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x3f93:    89 6a 04                           	mov dword ptr [edx + 4], ebp
0x3f96:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x3f99:    89 6a 08                           	mov dword ptr [edx + 8], ebp
0x3f9c:    8b 6e 0c                           	mov ebp, dword ptr [esi + 0xc]
0x3f9f:    89 6a 0c                           	mov dword ptr [edx + 0xc], ebp
0x3fa2:    8b 6e 10                           	mov ebp, dword ptr [esi + 0x10]
0x3fa5:    89 6a 10                           	mov dword ptr [edx + 0x10], ebp
0x3fa8:    8b 6e 14                           	mov ebp, dword ptr [esi + 0x14]
0x3fab:    89 6a 14                           	mov dword ptr [edx + 0x14], ebp
0x3fae:    8b 6e 18                           	mov ebp, dword ptr [esi + 0x18]
0x3fb1:    89 6a 18                           	mov dword ptr [edx + 0x18], ebp
0x3fb4:    8b 6e 1c                           	mov ebp, dword ptr [esi + 0x1c]
0x3fb7:    89 6a 1c                           	mov dword ptr [edx + 0x1c], ebp
0x3fba:    83 c6 20                           	add esi, 0x20
0x3fbd:    83 c2 20                           	add edx, 0x20
0x3fc0:    39 de                              	cmp esi, ebx
0x3fc2:    75 c4                              	jne 0x3f88 <function_3f44+0x44>
0x3fc4:    8d 51 20                           	lea edx, [ecx + 0x20]
0x3fc7:    89 de                              	mov esi, ebx
0x3fc9:    29 d6                              	sub esi, edx
0x3fcb:    89 f2                              	mov edx, esi
0x3fcd:    8b 74 24 14                        	mov esi, dword ptr [esp + 0x14]
0x3fd1:    83 e2 e0                           	and edx, 0xffffffe0
0x3fd4:    8d 54 16 40                        	lea edx, [esi + edx + 0x40]
0x3fd8:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x3fdc:    39 d8                              	cmp eax, ebx
0x3fde:    74 58                              	je 0x4038 <function_3f44+0xf4>
0x3fe0:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x3fe4:    89 de                              	mov esi, ebx
0x3fe6:    66 90                              	nop 
0x3fe8:    85 d2                              	test edx, edx
0x3fea:    74 2e                              	je 0x401a <function_3f44+0xd6>
0x3fec:    8b 2e                              	mov ebp, dword ptr [esi]
0x3fee:    89 2a                              	mov dword ptr [edx], ebp
0x3ff0:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x3ff3:    89 6a 04                           	mov dword ptr [edx + 4], ebp
0x3ff6:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x3ff9:    89 6a 08                           	mov dword ptr [edx + 8], ebp
0x3ffc:    8b 6e 0c                           	mov ebp, dword ptr [esi + 0xc]
0x3fff:    89 6a 0c                           	mov dword ptr [edx + 0xc], ebp
0x4002:    8b 6e 10                           	mov ebp, dword ptr [esi + 0x10]
0x4005:    89 6a 10                           	mov dword ptr [edx + 0x10], ebp
0x4008:    8b 6e 14                           	mov ebp, dword ptr [esi + 0x14]
0x400b:    89 6a 14                           	mov dword ptr [edx + 0x14], ebp
0x400e:    8b 6e 18                           	mov ebp, dword ptr [esi + 0x18]
0x4011:    89 6a 18                           	mov dword ptr [edx + 0x18], ebp
0x4014:    8b 6e 1c                           	mov ebp, dword ptr [esi + 0x1c]
0x4017:    89 6a 1c                           	mov dword ptr [edx + 0x1c], ebp
0x401a:    83 c6 20                           	add esi, 0x20
0x401d:    83 c2 20                           	add edx, 0x20
0x4020:    39 f0                              	cmp eax, esi
0x4022:    75 c4                              	jne 0x3fe8 <function_3f44+0xa4>
0x4024:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x4028:    83 c3 20                           	add ebx, 0x20
0x402b:    29 d8                              	sub eax, ebx
0x402d:    83 e0 e0                           	and eax, 0xffffffe0
0x4030:    8d 54 02 20                        	lea edx, [edx + eax + 0x20]
0x4034:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x4038:    85 c9                              	test ecx, ecx
0x403a:    74 08                              	je 0x4044 <function_3f44+0x100>
0x403c:    89 0c 24                           	mov dword ptr [esp], ecx
0x403f:    e8 fc ff ff ff                     	call 0x4040
0x4044:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x4048:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x404c:    89 07                              	mov dword ptr [edi], eax
0x404e:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x4052:    89 57 04                           	mov dword ptr [edi + 4], edx
0x4055:    89 47 08                           	mov dword ptr [edi + 8], eax
0x4058:    e9 82 fe ff ff                     	jmp 0x3edf
; function: function_405d at 0x405d -- 0x4071
0x405d:    89 dd                              	mov ebp, ebx
0x405f:    29 cd                              	sub ebp, ecx
0x4061:    c1 fd 05                           	sar ebp, 5
0x4064:    c7 44 24 1c 20 00 00 00            	mov dword ptr [esp + 0x1c], 0x20
0x406c:    e9 b3 fe ff ff                     	jmp 0x3f24
; function: function_4071 at 0x4071 -- 0x40aa
0x4071:    81 fa ff ff ff 07                  	cmp edx, 0x7ffffff
0x4077:    0f 87 98 fe ff ff                  	ja 0x3f15
0x407d:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x4081:    89 dd                              	mov ebp, ebx
0x4083:    29 cd                              	sub ebp, ecx
0x4085:    c1 64 24 1c 06                     	shl dword ptr [esp + 0x1c], 6
0x408a:    c1 fd 05                           	sar ebp, 5
0x408d:    85 d2                              	test edx, edx
0x408f:    0f 85 8f fe ff ff                  	jne 0x3f24
0x4095:    c7 44 24 18 20 00 00 00            	mov dword ptr [esp + 0x18], 0x20
0x409d:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x40a5:    e9 9a fe ff ff                     	jmp 0x3f44 <function_3f44>
; function: function_40aa at 0x40aa -- 0x40ab
; dynamically linked function: __stack_chk_fail at 0x40ab -- 0x40ac
; data inside code section at 0x40ac -- 0x40af
0x40ac:    ff ff ff                                           |...             |
; section: .text._ZNSsC2IPcEET_S1_RKSaIcE
; function: _ZNSsC1IPcEET_S1_RKSaIcE at 0x40b0 -- 0x40f9
0x40b0:    83 ec 4c                           	sub esp, 0x4c
0x40b3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x40b7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x40bb:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x40bf:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x40c3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x40ca:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x40ce:    31 d2                              	xor edx, edx
0x40d0:    8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x40d4:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x40d8:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x40dc:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x40e0:    39 eb                              	cmp ebx, ebp
0x40e2:    74 74                              	je 0x4158 <function_4158>
0x40e4:    85 db                              	test ebx, ebx
0x40e6:    74 78                              	je 0x4160 <function_4160>
0x40e8:    29 dd                              	sub ebp, ebx
0x40ea:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x40ee:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x40f6:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x40f9 -- 0x40fa
0x40f9:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x40fa -- 0x40fb
; data inside code section at 0x40fb -- 0x4102
0x40fb:    ff ff ff 83 fd 01 89                               |.......         |
; function: function_4102 at 0x4102 -- 0x4105
0x4102:    c2 8d 70                           	ret 0x708d
; data inside code section at 0x4105 -- 0x4108
0x4105:    0c 74 48                                           |.tH             |
; function: function_4108 at 0x4108 -- 0x4109
; data inside code section at 0x4109 -- 0x4118
0x4109:    54 24 1c 89 6c 24 08 89  5c 24 04 89 34 24 e8      |T$..l$..\$..4$. |
; dynamically linked function: memcpy at 0x4118 -- 0x4119
; data inside code section at 0x4119 -- 0x4120
0x4119:    ff ff ff 8b 54 24 1c                               |....T$.         |
; function: function_4120 at 0x4120 -- 0x4121
; data inside code section at 0x4121 -- 0x4128
0x4121:    fa 00 00 00 00 75 71                               |.....uq         |
; function: function_4128 at 0x4128 -- 0x414b
0x4128:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x412c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4133:    89 37                              	mov dword ptr [edi], esi
0x4135:    75 5d                              	jne 0x4194 <function_4194>
0x4137:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x413b:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x413f:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x4143:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4147:    83 c4 4c                           	add esp, 0x4c
0x414a:    c3                                 	ret 
; data inside code section at 0x414b -- 0x4150
0x414b:    90 8d 74 26 00                                     |..t&.           |
; function: function_4150 at 0x4150 -- 0x4158
0x4150:    0f b6 03                           	movzx eax, byte ptr [ebx]
0x4153:    88 42 0c                           	mov byte ptr [edx + 0xc], al
0x4156:    eb c8                              	jmp 0x4120 <function_4120>
; function: function_4158 at 0x4158 -- 0x4159
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x4159 -- 0x415f
; data inside code section at 0x415f -- 0x4160
0x415f:    90                                                 |.               |
; function: function_4160 at 0x4160 -- 0x416b
0x4160:    85 ed                              	test ebp, ebp
0x4162:    74 0c                              	je 0x4170 <function_4170>
0x4164:    c7 04 24 c4 37 00 00               	mov dword ptr [esp], 0x37c4 ; "basic_string::_S_construct null not valid"
; data inside code section at 0x416b -- 0x416c
0x416b:    e8                                                 |.               |
; dynamically linked function: _ZSt19__throw_logic_errorPKc at 0x416c -- 0x416d
; data inside code section at 0x416d -- 0x4170
0x416d:    ff ff ff                                           |...             |
; function: function_4170 at 0x4170 -- 0x4185
0x4170:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x4174:    31 ed                              	xor ebp, ebp
0x4176:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x417e:    c7 04 24 00 00 00 00               	mov dword ptr [esp], 0
; data inside code section at 0x4185 -- 0x4186
0x4185:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x4186 -- 0x4187
; data inside code section at 0x4187 -- 0x4189
0x4187:    ff ff                                              |..              |
; function: function_4189 at 0x4189 -- 0x4194
0x4189:    ff 89 c2 8d 70 0c                  	dec dword ptr [ecx + 0xc708dc2]
0x418f:    e9 74 ff ff ff                     	jmp 0x4108 <function_4108>
; function: function_4194 at 0x4194 -- 0x41a8
0x4194:    e8 fc ff ff ff                     	call 0x4195
0x4199:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x41a0:    89 2a                              	mov dword ptr [edx], ebp
0x41a2:    c6 04 2e 00                        	mov byte ptr [esi + ebp], 0
0x41a6:    eb 80                              	jmp 0x4128 <function_4128>
; section: .text._ZNSt6vectorIhSaIhEE13_M_assign_auxIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag
; function: _ZNSt6vectorIhSaIhEE13_M_assign_auxIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag at 0x41b0 -- 0x4205
0x41b0:    83 ec 4c                           	sub esp, 0x4c
0x41b3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x41b7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x41bb:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x41bf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x41c5:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x41c9:    31 c0                              	xor eax, eax
0x41cb:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x41cf:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x41d3:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x41d7:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x41da:    8b 2b                              	mov ebp, dword ptr [ebx]
0x41dc:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x41e0:    89 d6                              	mov esi, edx
0x41e2:    29 fe                              	sub esi, edi
0x41e4:    29 e8                              	sub eax, ebp
0x41e6:    39 c6                              	cmp esi, eax
0x41e8:    76 56                              	jbe 0x4240 <function_4240>
0x41ea:    89 34 24                           	mov dword ptr [esp], esi
0x41ed:    e8 fc ff ff ff                     	call 0x41ee
0x41f2:    85 f6                              	test esi, esi
0x41f4:    89 c5                              	mov ebp, eax
0x41f6:    0f 85 8c 00 00 00                  	jne 0x4288 <function_4288>
0x41fc:    8b 03                              	mov eax, dword ptr [ebx]
0x41fe:    85 c0                              	test eax, eax
0x4200:    74 08                              	je 0x420a <function_420a>
0x4202:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x4205 -- 0x4206
0x4205:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x4206 -- 0x4207
; data inside code section at 0x4207 -- 0x420a
0x4207:    ff ff ff                                           |...             |
; function: function_420a at 0x420a -- 0x4239
0x420a:    01 ee                              	add esi, ebp
0x420c:    89 2b                              	mov dword ptr [ebx], ebp
0x420e:    89 73 04                           	mov dword ptr [ebx + 4], esi
0x4211:    89 73 08                           	mov dword ptr [ebx + 8], esi
0x4214:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4218:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x421f:    0f 85 d2 00 00 00                  	jne 0x42f7 <function_42f7>
0x4225:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x4229:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x422d:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x4231:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x4235:    83 c4 4c                           	add esp, 0x4c
0x4238:    c3                                 	ret 
; data inside code section at 0x4239 -- 0x4240
0x4239:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_4240 at 0x4240 -- 0x4283
0x4240:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x4243:    89 c8                              	mov eax, ecx
0x4245:    29 e8                              	sub eax, ebp
0x4247:    39 c6                              	cmp esi, eax
0x4249:    76 1d                              	jbe 0x4268 <function_4240+0x28>
0x424b:    8d 34 07                           	lea esi, [edi + eax]
0x424e:    89 f0                              	mov eax, esi
0x4250:    29 f8                              	sub eax, edi
0x4252:    75 7c                              	jne 0x42d0 <function_42d0>
0x4254:    31 ff                              	xor edi, edi
0x4256:    29 f2                              	sub edx, esi
0x4258:    75 4e                              	jne 0x42a8 <function_42a8>
0x425a:    01 f9                              	add ecx, edi
0x425c:    89 4b 04                           	mov dword ptr [ebx + 4], ecx
0x425f:    eb b3                              	jmp 0x4214
; data inside code section at 0x4261 -- 0x4268
0x4261:    8d b4 26 00 00 00 00                               |..&....         |
0x4268:    85 f6                              	test esi, esi
0x426a:    74 10                              	je 0x427c <function_4240+0x3c>
0x426c:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x4270:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4274:    89 2c 24                           	mov dword ptr [esp], ebp
0x4277:    e8 fc ff ff ff                     	call 0x4278
0x427c:    01 ee                              	add esi, ebp
0x427e:    89 73 04                           	mov dword ptr [ebx + 4], esi
0x4281:    eb 91                              	jmp 0x4214
; data inside code section at 0x4283 -- 0x4288
0x4283:    90 8d 74 26 00                                     |..t&.           |
; function: function_4288 at 0x4288 -- 0x42a7
0x4288:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x428c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4290:    89 04 24                           	mov dword ptr [esp], eax
0x4293:    e8 fc ff ff ff                     	call 0x4294
0x4298:    8b 03                              	mov eax, dword ptr [ebx]
0x429a:    85 c0                              	test eax, eax
0x429c:    0f 85 60 ff ff ff                  	jne 0x4202
0x42a2:    e9 63 ff ff ff                     	jmp 0x420a <function_420a>
; data inside code section at 0x42a7 -- 0x42a8
0x42a7:    90                                                 |.               |
; function: function_42a8 at 0x42a8 -- 0x42cc
0x42a8:    89 d7                              	mov edi, edx
0x42aa:    89 0c 24                           	mov dword ptr [esp], ecx
0x42ad:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x42b1:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x42b5:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x42b9:    e8 fc ff ff ff                     	call 0x42ba
0x42be:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x42c2:    01 f9                              	add ecx, edi
0x42c4:    89 4b 04                           	mov dword ptr [ebx + 4], ecx
0x42c7:    e9 48 ff ff ff                     	jmp 0x4214
; data inside code section at 0x42cc -- 0x42d0
0x42cc:    8d 74 26 00                                        |.t&.            |
; function: function_42d0 at 0x42d0 -- 0x42e1
0x42d0:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x42d4:    31 ff                              	xor edi, edi
0x42d6:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x42da:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x42de:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x42e1 -- 0x42e2
0x42e1:    e8                                                 |.               |
; dynamically linked function: memmove at 0x42e2 -- 0x42e3
; data inside code section at 0x42e3 -- 0x42e5
0x42e3:    ff ff                                              |..              |
; function: function_42e5 at 0x42e5 -- 0x42f7
0x42e5:    ff 8b 54 24 1c 8b                  	dec dword ptr [ebx - 0x74e3dbac]
0x42eb:    4b                                 	dec ebx
0x42ec:    04 29                              	add al, 0x29
0x42ee:    f2 0f 84 65 ff ff ff               	je 0x425a
0x42f5:    eb b1                              	jmp 0x42a8 <function_42a8>
; function: function_42f7 at 0x42f7 -- 0x42f8
; dynamically linked function: __stack_chk_fail at 0x42f8 -- 0x42f9
; data inside code section at 0x42f9 -- 0x42fc
0x42f9:    ff ff ff                                           |...             |
; section: .text._ZNK7CScript8ToStringEv
; function: _ZNK7CScript8ToStringEv at 0x4300 -- 0x4336
0x4300:    55                                 	push ebp
0x4301:    57                                 	push edi
0x4302:    56                                 	push esi
0x4303:    53                                 	push ebx
0x4304:    83 ec 5c                           	sub esp, 0x5c
0x4307:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x430b:    8d 74 24 38                        	lea esi, [esp + 0x38]
0x430f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x4316:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x431a:    31 d2                              	xor edx, edx
0x431c:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x4320:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x4328:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x4330:    8b 08                              	mov ecx, dword ptr [eax]
0x4332:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
; data inside code section at 0x4336 -- 0x4338
0x4336:    c7 03                                              |..              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x4338 -- 0x441b
; data inside code section at 0x441b -- 0x441c
0x441b:    e8                                                 |.               |
; dynamically linked function: _ZNSs6appendEPKcj at 0x441c -- 0x441d
; data inside code section at 0x441d -- 0x441f
0x441d:    ff ff                                              |..              |
; function: function_441f at 0x441f -- 0x443a
0x441f:    ff 8b 54 24 18 8b                  	dec dword ptr [ebx - 0x74e7dbac]
0x4425:    42                                 	inc edx
0x4426:    04 8b                              	add al, 0x8b
0x4428:    54                                 	push esp
0x4429:    24 38                              	and al, 0x38
0x442b:    39 44 24 10                        	cmp dword ptr [esp + 0x10], eax
0x442f:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x4433:    73 8b                              	jae 0x43c0
0x4435:    e9 34 ff ff ff                     	jmp 0x436e
; data inside code section at 0x443a -- 0x4440
0x443a:    8d b6 00 00 00 00                                  |......          |
; function: function_4440 at 0x4440 -- 0x4443
0x4440:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x4443 -- 0x4444
0x4443:    e8                                                 |.               |
; dynamically linked function: _Z9GetOpName10opcodetype at 0x4444 -- 0x4445
; data inside code section at 0x4445 -- 0x444e
0x4445:    ff ff ff 89 04 24 89 c5  e8                        |.....$...       |
; dynamically linked function: strlen at 0x444e -- 0x444f
; data inside code section at 0x444f -- 0x445e
0x444f:    ff ff ff 89 6c 24 04 89  1c 24 89 44 24 08 e8      |....l$...$.D$.. |
; dynamically linked function: _ZNSs6appendEPKcj at 0x445e -- 0x445f
; data inside code section at 0x445f -- 0x4462
0x445f:    ff ff ff                                           |...             |
; function: function_4462 at 0x4462 -- 0x446b
0x4462:    89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0x4466:    e9 dd fe ff ff                     	jmp 0x4348
; function: function_446b at 0x446b -- 0x4488
0x446b:    89 c2                              	mov edx, eax
0x446d:    29 fa                              	sub edx, edi
0x446f:    85 d2                              	test edx, edx
0x4471:    0f 8e 49 ff ff ff                  	jle 0x43c0
0x4477:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x447b:    8b 7c 24 10                        	mov edi, dword ptr [esp + 0x10]
0x447f:    0f b6 51 01                        	movzx edx, byte ptr [ecx + 1]
0x4483:    83 c7 02                           	add edi, 2
0x4486:    66 90                              	nop 
; function: function_4488 at 0x4488 -- 0x44d4
0x4488:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x448c:    29 f8                              	sub eax, edi
0x448e:    0f 88 2c ff ff ff                  	js 0x43c0
0x4494:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x4498:    39 d0                              	cmp eax, edx
0x449a:    0f 82 20 ff ff ff                  	jb 0x43c0
0x44a0:    01 fa                              	add edx, edi
0x44a2:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x44a6:    c6 44 24 0c 00                     	mov byte ptr [esp + 0xc], 0
0x44ab:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x44af:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x44b3:    89 34 24                           	mov dword ptr [esp], esi
0x44b6:    e8 f5 3f 00 00                     	call 0x84b0 <unknown_84b0>
0x44bb:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x44be:    8b 06                              	mov eax, dword ptr [esi]
0x44c0:    89 d1                              	mov ecx, edx
0x44c2:    29 c1                              	sub ecx, eax
0x44c4:    83 f9 04                           	cmp ecx, 4
0x44c7:    0f 87 23 01 00 00                  	ja 0x45f0 <function_45f0>
0x44cd:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x44d1:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x44d4 -- 0x44d5
0x44d4:    e8                                                 |.               |
; dynamically linked function: BN_init at 0x44d5 -- 0x44d6
; data inside code section at 0x44d6 -- 0x44f3
0x44d6:    ff ff ff 8b 6e 04 2b 2e  83 c5 04 0f 85 49 01 00   |....n.+......I..|
0x44e6:    00 c7 44 24 1c 04 00 00  00 31 c0 31 ff            |..D$.....1.1.   |
; function: function_44f3 at 0x44f3 -- 0x44f4
; data inside code section at 0x44f4 -- 0x4511
0x44f4:    fd 89 6c 24 14 29 44 24  14 8b 4c 24 14 c7 44 24   |..l$.)D$..L$..D$|
0x4504:    04 00 00 00 00 89 3c 24  89 4c 24 08 e8            |......<$.L$..   |
; dynamically linked function: memset at 0x4511 -- 0x4512
; data inside code section at 0x4512 -- 0x451b
0x4512:    ff ff ff 8b 46 04 2b 06  89                        |....F.+..       |
; function: function_451b at 0x451b -- 0x451e
0x451b:    c2 c1 ea                           	ret 0xeac1
; function: function_451e at 0x451e -- 0x452b
0x451e:    18 88 17 89 c2 c1                  	sbb byte ptr [eax - 0x3e3d76e9], cl
0x4524:    ea 10 88 57 01 89 c2               	ljmp 0xc289:0x1578810 <function_1578810>
; data inside code section at 0x452b -- 0x452c
0x452b:    c1                                                 |.               |
; function: function_452c at 0x452c -- 0x4533
0x452c:    ea 08 88 57 02 88 47               	ljmp 0x4788:0x2578808 <function_2578808>
; data inside code section at 0x4533 -- 0x454d
0x4533:    03 8b 46 04 8b 2e 39 e8  74 1b 8b 54 24 1c 8d b4   |..F...9.t..T$...|
0x4543:    26 00 00 00 00 0f b6 48  ff 83                     |&......H..      |
; function: function_454d at 0x454d -- 0x4555
0x454d:    e8 01 88 0a 83                     	call 0x830acd53 <unknown_830acd53>
0x4552:    c2 01 39                           	ret 0x3901
; data inside code section at 0x4555 -- 0x456c
0x4555:    e8 75 f0 8b 54 24 14 8d  44 24 24 89 44 24 08 89   |.u..T$..D$$.D$..|
0x4565:    3c 24 89 54 24 04 e8                               |<$.T$..         |
; dynamically linked function: BN_mpi2bn at 0x456c -- 0x456d
; data inside code section at 0x456d -- 0x4574
0x456d:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZdlPv at 0x4574 -- 0x4575
; data inside code section at 0x4575 -- 0x4580
0x4575:    ff ff ff 8d 4c 24 24 89  0c 24 e8                  |....L$$..$.     |
; dynamically linked function: BN_get_word at 0x4580 -- 0x4581
; data inside code section at 0x4581 -- 0x459d
0x4581:    ff ff ff 8b 7c 24 30 85  ff 0f 85 88 00 00 00 ba   |....|$0.........|
0x4591:    ff ff ff 7f 3d ff ff ff  7f 0f 46 d0               |....=.....F.    |
; function: function_459d at 0x459d -- 0x459e
; data inside code section at 0x459e -- 0x45b9
0x459e:    44 24 44 89 54 24 0c c7  44 24 08 00 00 00 00 c7   |D$D.T$..D$......|
0x45ae:    44 24 04 50 31 00 00 89  04 24 e8                  |D$.P1....$.     |
; dynamically linked function: _Z14real_strprintfPKciz at 0x45b9 -- 0x45ba
; data inside code section at 0x45ba -- 0x45c8
0x45ba:    ff ff ff 83 ec 04 8d 54  24 24 89 14 24 e8         |.......T$$..$.  |
; dynamically linked function: BN_clear_free at 0x45c8 -- 0x45c9
; data inside code section at 0x45c9 -- 0x45cc
0x45c9:    ff ff ff                                           |...             |
; function: function_45cc at 0x45cc -- 0x45d7
0x45cc:    8d 54 24 44                        	lea edx, [esp + 0x44]
0x45d0:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x45d4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x45d7 -- 0x45d8
0x45d7:    e8                                                 |.               |
; dynamically linked function: _ZNSs6appendERKSs at 0x45d8 -- 0x45d9
; data inside code section at 0x45d9 -- 0x45e4
0x45d9:    ff ff ff 8d 4c 24 44 89  0c 24 e8                  |....L$D..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x45e4 -- 0x45e5
; data inside code section at 0x45e5 -- 0x45e8
0x45e5:    ff ff ff                                           |...             |
; function: function_45e8 at 0x45e8 -- 0x45ed
0x45e8:    e9 5b fd ff ff                     	jmp 0x4348
; data inside code section at 0x45ed -- 0x45f0
0x45ed:    8d 76 00                                           |.v.             |
; function: function_45f0 at 0x45f0 -- 0x4611
0x45f0:    8d 4c 24 44                        	lea ecx, [esp + 0x44]
0x45f4:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x45fc:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x4600:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4604:    89 0c 24                           	mov dword ptr [esp], ecx
0x4607:    e8 34 38 00 00                     	call 0x7e40 <unknown_7e40>
0x460c:    83 ec 04                           	sub esp, 4
0x460f:    eb bb                              	jmp 0x45cc <function_45cc>
; data inside code section at 0x4611 -- 0x4618
0x4611:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_4618 at 0x4618 -- 0x462e
0x4618:    89 c1                              	mov ecx, eax
0x461a:    ba 00 00 00 80                     	mov edx, 0x80000000
0x461f:    f7 d9                              	neg ecx
0x4621:    3d ff ff ff 7f                     	cmp eax, 0x7fffffff
0x4626:    0f 46 d1                           	cmovbe edx, ecx
0x4629:    e9 6f ff ff ff                     	jmp 0x459d <function_459d>
; data inside code section at 0x462e -- 0x4634
0x462e:    66 90 89 2c 24 e8                                  |f..,$.          |
; dynamically linked function: _Znwj at 0x4634 -- 0x4635
; data inside code section at 0x4635 -- 0x4637
0x4635:    ff ff                                              |..              |
; function: function_4637 at 0x4637 -- 0x4646
0x4637:    ff 89 c7 8d 57 04                  	dec dword ptr [ecx + 0x4578dc7]
0x463d:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x4641:    e9 ad fe ff ff                     	jmp 0x44f3 <function_44f3>
; function: function_4646 at 0x4646 -- 0x4665
0x4646:    29 fa                              	sub edx, edi
0x4648:    83 fa 01                           	cmp edx, 1
0x464b:    0f 8e 6f fd ff ff                  	jle 0x43c0
0x4651:    0f b7 17                           	movzx edx, word ptr [edi]
0x4654:    8b 7c 24 10                        	mov edi, dword ptr [esp + 0x10]
0x4658:    66 89 54 24 48                     	mov word ptr [esp + 0x48], dx
0x465d:    83 c7 03                           	add edi, 3
0x4660:    e9 27 fe ff ff                     	jmp 0x448c
; function: function_4665 at 0x4665 -- 0x4677
0x4665:    8b 17                              	mov edx, dword ptr [edi]
0x4667:    8b 7c 24 10                        	mov edi, dword ptr [esp + 0x10]
0x466b:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x466f:    83 c7 05                           	add edi, 5
0x4672:    e9 15 fe ff ff                     	jmp 0x448c
; data inside code section at 0x4677 -- 0x4679
0x4677:    89 c6                                              |..              |
; function: function_4679 at 0x4679 -- 0x467a
; data inside code section at 0x467a -- 0x4686
0x467a:    44 24 38 e8 7e fc ff ff  89 1c 24 e8               |D$8.~.....$.    |
; dynamically linked function: _ZNSsD1Ev at 0x4686 -- 0x4687
; data inside code section at 0x4687 -- 0x468e
0x4687:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x468e -- 0x468f
; data inside code section at 0x468f -- 0x4692
0x468f:    ff ff ff                                           |...             |
; function: function_4692 at 0x4692 -- 0x46a2
0x4692:    8d 4c 24 44                        	lea ecx, [esp + 0x44]
0x4696:    89 c6                              	mov esi, eax
0x4698:    89 0c 24                           	mov dword ptr [esp], ecx
0x469b:    e8 fc ff ff ff                     	call 0x469c
0x46a0:    eb d7                              	jmp 0x4679 <function_4679>
; function: function_46a2 at 0x46a2 -- 0x46b2
0x46a2:    89 c6                              	mov esi, eax
0x46a4:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x46a8:    89 04 24                           	mov dword ptr [esp], eax
0x46ab:    e8 fc ff ff ff                     	call 0x46ac
0x46b0:    eb c7                              	jmp 0x4679 <function_4679>
; function: function_46b2 at 0x46b2 -- 0x46bd
0x46b2:    89 c6                              	mov esi, eax
0x46b4:    89 f8                              	mov eax, edi
0x46b6:    e8 45 fc ff ff                     	call 0x4300 <_ZNK7CScript8ToStringEv>
0x46bb:    eb bc                              	jmp 0x4679 <function_4679>
; function: function_46bd at 0x46bd -- 0x46be
; dynamically linked function: __stack_chk_fail at 0x46be -- 0x46bf
; data inside code section at 0x46bf -- 0x46c2
0x46bf:    ff ff ff                                           |...             |
; section: .text._Z16WriteCompactSizeI11CHashWriterEvRT_y
; function: _Z16WriteCompactSizeI11CHashWriterEvRT_y at 0x46d0 -- 0x4712
0x46d0:    53                                 	push ebx
0x46d1:    83 ec 38                           	sub esp, 0x38
0x46d4:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x46d8:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x46df:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x46e3:    31 c9                              	xor ecx, ecx
0x46e5:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x46e9:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x46ed:    83 fa 00                           	cmp edx, 0
0x46f0:    76 56                              	jbe 0x4748 <function_4748>
0x46f2:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x46f6:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x46fa:    c6 44 24 2b ff                     	mov byte ptr [esp + 0x2b], 0xff
0x46ff:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x4703:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x470b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x470f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4712 -- 0x4713
0x4712:    e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x4713 -- 0x4714
; data inside code section at 0x4714 -- 0x472b
0x4714:    ff ff ff 8d 44 24 18 c7  44 24 08 08 00 00 00 89   |....D$..D$......|
0x4724:    44 24 04 89 1c 24 e8                               |D$...$.         |
; dynamically linked function: SHA256_Update at 0x472b -- 0x472c
; data inside code section at 0x472c -- 0x472f
0x472c:    ff ff ff                                           |...             |
; function: function_472f at 0x472f -- 0x4745
0x472f:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x4733:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x473a:    0f 85 bf 00 00 00                  	jne 0x47ff <function_47ff>
0x4740:    83 c4 38                           	add esp, 0x38
0x4743:    5b                                 	pop ebx
0x4744:    c3                                 	ret 
; data inside code section at 0x4745 -- 0x4748
0x4745:    8d 76 00                                           |.v.             |
; function: function_4748 at 0x4748 -- 0x4772
0x4748:    3d fc 00 00 00                     	cmp eax, 0xfc
0x474d:    76 49                              	jbe 0x4798 <function_4798>
0x474f:    3d ff ff 00 00                     	cmp eax, 0xffff
0x4754:    76 6a                              	jbe 0x47c0 <function_47c0>
0x4756:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x475a:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x475e:    c6 44 24 2b fe                     	mov byte ptr [esp + 0x2b], 0xfe
0x4763:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x476b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x476f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4772 -- 0x4773
0x4772:    e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x4773 -- 0x4774
; data inside code section at 0x4774 -- 0x4776
0x4774:    ff ff                                              |..              |
; function: function_4776 at 0x4776 -- 0x4791
0x4776:    ff 8d 44 24 24 c7                  	dec dword ptr [ebp - 0x38dbdbbc]
0x477c:    44                                 	inc esp
0x477d:    24 08                              	and al, 8
0x477f:    04 00                              	add al, 0
0x4781:    00 00                              	add byte ptr [eax], al
0x4783:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4787:    89 1c 24                           	mov dword ptr [esp], ebx
0x478a:    e8 fc ff ff ff                     	call 0x478b
0x478f:    eb 9e                              	jmp 0x472f <function_472f>
; data inside code section at 0x4791 -- 0x4798
0x4791:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_4798 at 0x4798 -- 0x47b9
0x4798:    88 44 24 2b                        	mov byte ptr [esp + 0x2b], al
0x479c:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x47a0:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x47a8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x47ac:    89 1c 24                           	mov dword ptr [esp], ebx
0x47af:    e8 fc ff ff ff                     	call 0x47b0
0x47b4:    e9 76 ff ff ff                     	jmp 0x472f <function_472f>
; data inside code section at 0x47b9 -- 0x47c0
0x47b9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_47c0 at 0x47c0 -- 0x47dd
0x47c0:    66 89 44 24 28                     	mov word ptr [esp + 0x28], ax
0x47c5:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x47c9:    c6 44 24 2b fd                     	mov byte ptr [esp + 0x2b], 0xfd
0x47ce:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x47d6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x47da:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x47dd -- 0x47de
0x47dd:    e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x47de -- 0x47df
; data inside code section at 0x47df -- 0x47e1
0x47df:    ff ff                                              |..              |
; function: function_47e1 at 0x47e1 -- 0x47ff
0x47e1:    ff 8d 44 24 28 c7                  	dec dword ptr [ebp - 0x38d7dbbc]
0x47e7:    44                                 	inc esp
0x47e8:    24 08                              	and al, 8
0x47ea:    02 00                              	add al, byte ptr [eax]
0x47ec:    00 00                              	add byte ptr [eax], al
0x47ee:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x47f2:    89 1c 24                           	mov dword ptr [esp], ebx
0x47f5:    e8 fc ff ff ff                     	call 0x47f6
0x47fa:    e9 30 ff ff ff                     	jmp 0x472f <function_472f>
; function: function_47ff at 0x47ff -- 0x4804
0x47ff:    e8 fc ff ff ff                     	call 0x4800
; section: .text._Z13SerializeHashI12CTransactionE7uint256RKT_ii
; function: _Z13SerializeHashI12CTransactionE7uint256RKT_ii at 0x4810 -- 0x487d
0x4810:    55                                 	push ebp
0x4811:    57                                 	push edi
0x4812:    56                                 	push esi
0x4813:    53                                 	push ebx
0x4814:    81 ec dc 00 00 00                  	sub esp, 0xdc
0x481a:    8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0x4821:    8d 74 24 34                        	lea esi, [esp + 0x34]
0x4825:    8b bc 24 f4 00 00 00               	mov edi, dword ptr [esp + 0xf4]
0x482c:    8d 6c 24 30                        	lea ebp, [esp + 0x30]
0x4830:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x4837:    89 94 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], edx
0x483e:    31 d2                              	xor edx, edx
0x4840:    89 34 24                           	mov dword ptr [esp], esi
0x4843:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4847:    8b 84 24 f8 00 00 00               	mov eax, dword ptr [esp + 0xf8]
0x484e:    89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x4855:    8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x485c:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x4863:    e8 fc ff ff ff                     	call 0x4864
0x4868:    8b 07                              	mov eax, dword ptr [edi]
0x486a:    c7 44 24 08 04 00 00 00            	mov dword ptr [esp + 8], 4
0x4872:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x4876:    89 34 24                           	mov dword ptr [esp], esi
0x4879:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
; data inside code section at 0x487d -- 0x487e
0x487d:    e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x487e -- 0x487f
; data inside code section at 0x487f -- 0x48c0
0x487f:    ff ff ff 8b 47 08 2b 47  04 c7 44 24 08 00 00 00   |....G.+G..D$....|
0x488f:    00 89 34 24 c1 f8 02 69  c0 c5 4e ec c4 89 44 24   |..4$...i..N...D$|
0x489f:    04 e8 3b 46 00 00 8b 5f  04 3b 5f 08 74 70 8d 76   |..;F..._.;_.tp.v|
0x48af:    00 c7 44 24 08 24 00 00  00 89 5c 24 04 89 34 24   |..D$.$....\$..4$|
0x48bf:    e8                                                 |.               |
; dynamically linked function: SHA256_Update at 0x48c0 -- 0x48c1
; data inside code section at 0x48c1 -- 0x48d8
0x48c1:    ff ff ff 8b 43 28 2b 43  24 c7 44 24 08 00 00 00   |....C(+C$.D$....|
0x48d1:    00 89 34 24 89 44 24                               |..4$.D$         |
; function: function_48d8 at 0x48d8 -- 0x48e8
0x48d8:    04 e8                              	add al, 0xe8
0x48da:    02 46 00                           	add al, byte ptr [esi]
0x48dd:    00 8b 53 28 8b 43                  	add byte ptr [ebx + 0x438b2853], cl
0x48e3:    24 39                              	and al, 0x39
0x48e5:    c2 74 12                           	ret 0x1274
; data inside code section at 0x48e8 -- 0x48e9
0x48e8:    29                                                 |)               |
; function: function_48e9 at 0x48e9 -- 0x48ec
0x48e9:    c2 89 54                           	ret 0x5489
; data inside code section at 0x48ec -- 0x48f6
0x48ec:    24 08 89 44 24 04 89 34  24 e8                     |$..D$..4$.      |
; dynamically linked function: SHA256_Update at 0x48f6 -- 0x48f7
; data inside code section at 0x48f7 -- 0x48fe
0x48f7:    ff ff ff 8b 43 30 83                               |....C0.         |
; function: function_48fe at 0x48fe -- 0x48ff
0x48fe:    c3                                 	ret 
; data inside code section at 0x48ff -- 0x4969
0x48ff:    34 c7 44 24 08 04 00 00  00 89 6c 24 04 89 34 24   |4.D$......l$..4$|
0x490f:    89 44 24 30 e8 fc ff ff  ff 3b 5f 08 75 93 8b 47   |.D$0.....;_.u..G|
0x491f:    14 2b 47 10 c7 44 24 08  00 00 00 00 89 34 24 c1   |.+G..D$......4$.|
0x492f:    f8 02 69 c0 cd cc cc cc  89 44 24 04 e8 a0 45 00   |..i......D$...E.|
0x493f:    00 8b 5f 10 3b 5f 14 74  63 8b 03 8b 53 04 c7 44   |.._.;_.tc...S..D|
0x494f:    24 08 08 00 00 00 89 34  24 89 44 24 28 8d 44 24   |$......4$.D$(.D$|
0x495f:    28 89 54 24 2c 89 44 24  04 e8                     |(.T$,.D$..      |
; dynamically linked function: SHA256_Update at 0x4969 -- 0x496a
; data inside code section at 0x496a -- 0x4986
0x496a:    ff ff ff 8b 43 0c 2b 43  08 c7 44 24 08 00 00 00   |....C.+C..D$....|
0x497a:    00 89 34 24 89 44 24 04  e8 59 45 00               |..4$.D$..YE.    |
; function: function_4986 at 0x4986 -- 0x4991
0x4986:    00 8b 53 0c 8b 43                  	add byte ptr [ebx + 0x438b0c53], cl
0x498c:    08 39                              	or byte ptr [ecx], bh
0x498e:    c2 74 12                           	ret 0x1274
; data inside code section at 0x4991 -- 0x4992
0x4991:    29                                                 |)               |
; function: function_4992 at 0x4992 -- 0x4995
0x4992:    c2 89 54                           	ret 0x5489
; data inside code section at 0x4995 -- 0x499f
0x4995:    24 08 89 44 24 04 89 34  24 e8                     |$..D$..4$.      |
; dynamically linked function: SHA256_Update at 0x499f -- 0x49a0
; data inside code section at 0x49a0 -- 0x49a4
0x49a0:    ff ff ff 83                                        |....            |
; function: function_49a4 at 0x49a4 -- 0x49a5
0x49a4:    c3                                 	ret 
; data inside code section at 0x49a5 -- 0x49c9
0x49a5:    14 3b 5f 14 75 9d 8b 47  1c 8d 9c 24 ac 00 00 00   |.;_.u..G...$....|
0x49b5:    c7 44 24 08 04 00 00 00  89 6c 24 04 89 34 24 89   |.D$......l$..4$.|
0x49c5:    44 24 30 e8                                        |D$0.            |
; dynamically linked function: SHA256_Update at 0x49c9 -- 0x49ca
; data inside code section at 0x49ca -- 0x4a2d
0x49ca:    ff ff ff c7 84 24 ac 00  00 00 00 00 00 00 c7 84   |.....$..........|
0x49da:    24 b0 00 00 00 00 00 00  00 c7 84 24 b4 00 00 00   |$..........$....|
0x49ea:    00 00 00 00 c7 84 24 b8  00 00 00 00 00 00 00 c7   |......$.........|
0x49fa:    84 24 bc 00 00 00 00 00  00 00 c7 84 24 c0 00 00   |.$..........$...|
0x4a0a:    00 00 00 00 00 c7 84 24  c4 00 00 00 00 00 00 00   |.......$........|
0x4a1a:    c7 84 24 c8 00 00 00 00  00 00 00 89 74 24 04 89   |..$.........t$..|
0x4a2a:    1c 24 e8                                           |.$.             |
; dynamically linked function: SHA256_Final at 0x4a2d -- 0x4a2e
; data inside code section at 0x4a2e -- 0x4a7c
0x4a2e:    ff ff ff 8b 44 24 1c c7  00 00 00 00 00 c7 40 04   |....D$........@.|
0x4a3e:    00 00 00 00 c7 40 08 00  00 00 00 c7 40 0c 00 00   |.....@......@...|
0x4a4e:    00 00 c7 40 10 00 00 00  00 c7 40 14 00 00 00 00   |...@......@.....|
0x4a5e:    c7 40 18 00 00 00 00 c7  40 1c 00 00 00 00 89 44   |.@......@......D|
0x4a6e:    24 08 c7 44 24 04 20 00  00 00 89 1c 24 e8         |$..D$. .....$.  |
; dynamically linked function: SHA256 at 0x4a7c -- 0x4a7d
; data inside code section at 0x4a7d -- 0x4a7f
0x4a7d:    ff ff                                              |..              |
; function: function_4a7f at 0x4a7f -- 0x4aa1
0x4a7f:    ff 8b 44 24 1c 8b                  	dec dword ptr [ebx - 0x74e3dbbc]
0x4a85:    94                                 	xchg eax, esp
0x4a86:    24 cc                              	and al, 0xcc
0x4a88:    00 00                              	add byte ptr [eax], al
0x4a8a:    00 65 33                           	add byte ptr [ebp + 0x33], ah
0x4a8d:    15 14 00 00 00                     	adc eax, 0x14
0x4a92:    75 0d                              	jne 0x4aa1 <function_4a7f+0x1f>
0x4a94:    81 c4 dc 00 00 00                  	add esp, 0xdc
0x4a9a:    5b                                 	pop ebx
0x4a9b:    5e                                 	pop esi
0x4a9c:    5f                                 	pop edi
0x4a9d:    5d                                 	pop ebp
0x4a9e:    c2 04 00                           	ret 4
; data inside code section at 0x4aa1 -- 0x4aa2
0x4aa1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4aa2 -- 0x4aa3
; data inside code section at 0x4aa3 -- 0x4aa6
0x4aa3:    ff ff ff                                           |...             |
; section: .text.startup
; function: _GLOBAL__sub_I__ZNK9COutPoint8ToStringEv at 0x4ab0 -- 0x4ac6
0x4ab0:    83 ec 2c                           	sub esp, 0x2c
0x4ab3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4ab9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4abd:    31 c0                              	xor eax, eax
0x4abf:    c7 04 24 f0 28 00 00               	mov dword ptr [esp], 0x28f0
; data inside code section at 0x4ac6 -- 0x4ac7
0x4ac6:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x4ac7 -- 0x4ac8
; data inside code section at 0x4ac8 -- 0x4acf
0x4ac8:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x4acf -- 0x4adb
; data inside code section at 0x4adb -- 0x4ade
0x4adb:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x4ade -- 0x4ae2
; data inside code section at 0x4ae2 -- 0x4ae3
0x4ae2:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x4ae3 -- 0x4ae4
; data inside code section at 0x4ae4 -- 0x4b08
0x4ae4:    ff ff ff 80 3d 10 4d 00  00 00 75 30 c6 05 10 4d   |....=.M...u0...M|
0x4af4:    00 00 01 c7 04 24 10 4d  00 00 e8 9d 38 00 00 50   |.....$.M....8..P|
0x4b04:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x4b08 -- 0x4b20
; data inside code section at 0x4b20 -- 0x4b21
0x4b20:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x4b21 -- 0x4b22
; data inside code section at 0x4b22 -- 0x4b24
0x4b22:    ff ff                                              |..              |
; function: function_4b24 at 0x4b24 -- 0x4b2a
0x4b24:    ff a3 f4 28 00 00                  	jmp dword ptr [ebx + 0x28f4]
; data inside code section at 0x4b2a -- 0x4b2e
0x4b2a:    e8 fc ff ff                                        |....            |
; function: function_4b2e at 0x4b2e -- 0x4b34
0x4b2e:    ff a3 f8 28 00 00                  	jmp dword ptr [ebx + 0x28f8]
; data inside code section at 0x4b34 -- 0x4b35
0x4b34:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x4b35 -- 0x4b36
; data inside code section at 0x4b36 -- 0x4b38
0x4b36:    ff ff                                              |..              |
; function: function_4b38 at 0x4b38 -- 0x4b3e
0x4b38:    ff a3 fc 28 00 00                  	jmp dword ptr [ebx + 0x28fc]
; function: function_4b3e at 0x4b3e -- 0x4b4f
0x4b3e:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x4b42:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4b49:    75 04                              	jne 0x4b4f <function_4b3e+0x10>
0x4b4b:    83 c4 2c                           	add esp, 0x2c
0x4b4e:    c3                                 	ret 
; data inside code section at 0x4b4f -- 0x4b50
0x4b4f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4b50 -- 0x4b51
; data inside code section at 0x4b51 -- 0x4b54
0x4b51:    ff ff ff                                           |...             |

;;
;; Data Segment
;;

; section: .gcc_except_table
0x2d8c:    ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0d   |....8.y.t.......|
0x2d9c:    1c 05 00 00 38 03 7c 00  89 01 05 00 00 00 00 00   |....8.|.........|
0x2dac:    ff 00 29 01 1c 70 29 ff  01 01 a3 01 05 d7 01 03   |..)..p).........|
0x2dbc:    cb 01 05 ff 01 01 f5 01  05 82 02 05 8a 02 0a 00   |................|
0x2dcc:    00 01 00 00 7d 7f 00 00  00 00 00 00 00 00 00 00   |....}...........|
0x2ddc:    ff 00 0d 01 08 26 03 56  01 5e 0a 00 00 7f 00 00   |.....&.V.^......|
0x2dec:    00 ff ff 01 08 4b 05 6e  00 7b 05 00 00 ff ff 01   |.....K.n.{......|
0x2dfc:    0b f6 02 05 b5 03 00 c2  03 05 00 00 ff ff 01 0b   |................|
0x2e0c:    e4 01 05 91 02 00 9e 02  05 00 00 ff ff 01 11 88   |................|
0x2e1c:    01 05 f2 03 00 ec 01 05  85 04 00 80 04 05 00 00   |................|
0x2e2c:    ff ff 01 0b ac 01 05 dc  01 00 ea 01 05 00 00 00   |................|
0x2e3c:    ff 00 25 01 1d bb 02 05  bb 04 00 d8 02 03 85 04   |..%.............|
0x2e4c:    00 9d 03 05 f0 03 01 80  04 05 bf 04 00 b6 04 05   |................|
0x2e5c:    00 00 01 00 00 00 00 00  ff ff 01 0b 46 d0 01 a0   |............F...|
0x2e6c:    03 00 ad 03 05 00 00 ff  ff 01 0a 49 21 94 01 00   |...........I!...|
0x2e7c:    a1 01 05 00 00 ff ff 01  16 8f 01 05 00 00 ab 01   |................|
0x2e8c:    05 87 02 00 d3 01 05 9e  02 00 94 02 05 00 00 ff   |................|
0x2e9c:    ff 01 0c 1f 05 00 00 36  05 5a 00 6d 05 00 00 ff   |.......6.Z.m....|
0x2eac:    ff 01 2a d3 01 86 02 f7  06 00 eb 04 05 b2 07 00   |..*.............|
0x2ebc:    ff 04 3e a2 07 00 c7 05  05 f7 06 00 d7 05 05 92   |..>.............|
0x2ecc:    07 00 87 06 31 f7 06 00  8d 07 05 00 00 ff ff 01   |....1...........|
0x2edc:    14 44 05 00 00 67 05 d9  02 00 dc 01 05 bf 02 00   |.D...g..........|
0x2eec:    b3 02 26 00 00 ff ff 01  0c 1f 05 00 00 36 05 5a   |..&..........6.Z|
0x2efc:    00 6d 05 00 00 ff ff 01  45 34 15 e0 04 00 53 05   |.m......E4....S.|
0x2f0c:    f2 04 00 b5 01 05 e0 04  00 d8 01 05 fe 04 00 fc   |................|
0x2f1c:    01 05 a2 05 00 8f 02 05  8a 05 00 d3 02 05 e0 04   |................|
0x2f2c:    00 e2 02 05 e4 04 00 82  03 68 e0 04 00 8c 04 05   |.........h......|
0x2f3c:    dc 04 00 9b 04 05 ba 04  00 d7 04 05 00 00 ff ff   |................|
0x2f4c:    01 0c 1f 05 00 00 36 05  5a 00 6d 05 00 00 ff ff   |......6.Z.m.....|
0x2f5c:    01 0b e2 01 05 ad 02 00  a0 02 25 00 00 ff ff 01   |..........%.....|
0x2f6c:    58 67 78 c4 06 00 fa 01  05 c4 07 00 d8 02 05 c0   |Xgx.............|
0x2f7c:    07 00 eb 02 05 a2 07 00  c6 03 05 c4 06 00 dd 03   |................|
0x2f8c:    05 96 07 00 ec 03 05 94  07 00 84 04 05 92 07 00   |................|
0x2f9c:    94 04 05 8a 07 00 93 05  05 c4 06 00 aa 05 05 86   |................|
0x2fac:    07 00 b9 05 05 82 07 00  d1 05 05 fd 06 00 e1 05   |................|
0x2fbc:    05 df 06 00 d5 06 05 00  00 ff ff 01 0c 1f 05 00   |................|
0x2fcc:    00 36 05 5a 00 6d 05 00  00 ff ff 01 39 bc 01 05   |.6.Z.m......9...|
0x2fdc:    00 00 ac 02 05 b5 0a 00  d9 02 7d cb 0a 00 f2 03   |..........}.....|
0x2fec:    7e db 0a 00 de 05 05 e7  0a 00 a7 06 cd 01 00 00   |~...............|
0x2ffc:    83 08 05 f3 0a 00 b1 08  05 00 00 bb 09 05 cb 0a   |................|
0x300c:    00 c6 0a 43 00 00 ??                               |...C..?         |
; section: .rodata.str1.1
0x310e:    3a 20 00                                           |: .             |
0x3111:    63 6f 72 65 2e 63 70 70  00                        |core.cpp.       |   "core.cpp"
0x311a:    64 20 3e 3d 20 31 20 26  26 20 64 20 3c 3d 20 39   |d >= 1 && d <= 9|   "d >= 1 && d <= 9"
0x312a:    00                                                 |.               |
0x312b:    25 30 32 78 00                                     |%02x.           |   "%02x"
0x3130:    43 4f 75 74 50 6f 69 6e  74 28 25 73 2c 20 25 75   |COutPoint(%s, %u|
0x3140:    29 00                                              |).              |
0x3142:    25 73 0a 00                                        |%s..            |   "%s\n"
0x3146:    20 00 5b 65 72 72 6f 72  5d 00 25 64 00            | .[error].%d.   |
0x3153:    43 54 78 4f 75 74 28 65  72 72 6f 72 29 00         |CTxOut(error).  |   "CTxOut(error)"
0x3161:    43 54 78 49 6e 28 00 2c  20 63 6f 69 6e 62 61 73   |CTxIn(., coinbas|
0x3171:    65 20 25 73 00 2c 20 73  63 72 69 70 74 53 69 67   |e %s., scriptSig|
0x3181:    3d 25 73 00 2c 20 6e 53  65 71 75 65 6e 63 65 3d   |=%s., nSequence=|
0x3191:    25 75 00 29 00 20 20 20  20 00 0a 00               |%u.).    ...    |
0x319d:    25 73 00                                           |%s.             |   "%s"
0x31a0:    20 20 00 20 20 76 4d 65  72 6b 6c 65 54 72 65 65   |  .  vMerkleTree|
0x31b0:    3a 20 00                                           |: .             |
0x31b3:    25 73 20 00                                        |%s .            |   "%s "
0x31b7:    ??                                                 |?               |
; section: .rodata.str1.4
0x378c:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x379c:    73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x37ac:    61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x37bc:    72 2e 68 70 70 00                                  |r.hpp.          |
0x37c2:    00 00                                              |..              |
0x37c4:    62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 5f 53   |basic_string::_S|   "basic_string::_S_construct null not valid"
0x37d4:    5f 63 6f 6e 73 74 72 75  63 74 20 6e 75 6c 6c 20   |_construct null |
0x37e4:    6e 6f 74 20 76 61 6c 69  64 00                     |not valid.      |
0x37ee:    00 00 43 54 78 4f 75 74  28 6e 56 61 6c 75 65 3d   |..CTxOut(nValue=|
0x37fe:    25 6c 6c 64 2e 25 30 38  6c 6c 64 2c 20 73 63 72   |%lld.%08lld, scr|
0x380e:    69 70 74 50 75 62 4b 65  79 3d 25 73 29 00 43 54   |iptPubKey=%s).CT|
0x381e:    72 61 6e 73 61 63 74 69  6f 6e 28 68 61 73 68 3d   |ransaction(hash=|
0x382e:    25 73 2c 20 76 65 72 3d  25 64 2c 20 76 69 6e 2e   |%s, ver=%d, vin.|
0x383e:    73 69 7a 65 3d 25 7a 75  2c 20 76 6f 75 74 2e 73   |size=%zu, vout.s|
0x384e:    69 7a 65 3d 25 7a 75 2c  20 6e 4c 6f 63 6b 54 69   |ize=%zu, nLockTi|
0x385e:    6d 65 3d 25 75 29 0a 00  00 00                     |me=%u)....      |
0x3868:    43 42 6c 6f 63 6b 28 68  61 73 68 3d 25 73 2c 20   |CBlock(hash=%s, |   "CBlock(hash=%s, ver=%d, pow_algo=%d, pow_hash=%s, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%zu)\n"
0x3878:    76 65 72 3d 25 64 2c 20  70 6f 77 5f 61 6c 67 6f   |ver=%d, pow_algo|
0x3888:    3d 25 64 2c 20 70 6f 77  5f 68 61 73 68 3d 25 73   |=%d, pow_hash=%s|
0x3898:    2c 20 68 61 73 68 50 72  65 76 42 6c 6f 63 6b 3d   |, hashPrevBlock=|
0x38a8:    25 73 2c 20 68 61 73 68  4d 65 72 6b 6c 65 52 6f   |%s, hashMerkleRo|
0x38b8:    6f 74 3d 25 73 2c 20 6e  54 69 6d 65 3d 25 75 2c   |ot=%s, nTime=%u,|
0x38c8:    20 6e 42 69 74 73 3d 25  30 38 78 2c 20 6e 4e 6f   | nBits=%08x, nNo|
0x38d8:    6e 63 65 3d 25 75 2c 20  76 74 78 3d 25 7a 75 29   |nce=%u, vtx=%zu)|
0x38e8:    0a 00                                              |..              |
0x38ea:    ??                                                 |?               |
; section: .ctors
0x4b54:    b0 4a 00 00 ??                                     |.J..?           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x4b60:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x4b70:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x4b80:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x4b80:    08 00 00 00 60 4b 00 00  20 4e 00 00 4e            |....`K.. N..N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x4b8c:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x4b9c:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x4bac:    08 00 00 00 8c 4b 00 00  00 00 00 00 ??            |.....K......?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x4bc0:    00 00 00 00 80 4b 00 00  b0 29 00 00 60 2c 00 00   |.....K...)..`,..|
0x4bd0:    00 00 00 00 00 00 00 00  e0 29 00 00 20 2a 00 00   |.........).. *..|
0x4be0:    90 2a 00 00 ??                                     |.*..?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x4be8:    00 00 00 00 ac 4b 00 00  a0 2c 00 00 20 30 00 00   |.....K...,.. 0..|
0x4bf8:    c0 31 00 00 30                                     |.1..0           |
; section: .rodata._ZZ6HexStrIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEESsT_S8_bE6hexmap
0x4bfc:    30 31 32 33 34 35 36 37  38 39 61 62 63 64 65 66   |0123456789abcdef|
0x4c0c:    ??                                                 |?               |
; section: .rodata
0x4c20:    73 74 61 74 69 63 20 75  69 6e 74 36 34 20 43 54   |static uint64 CT|   "static uint64 CTxOutCompressor::CompressAmount(uint64)"
0x4c30:    78 4f 75 74 43 6f 6d 70  72 65 73 73 6f 72 3a 3a   |xOutCompressor::|
0x4c40:    43 6f 6d 70 72 65 73 73  41 6d 6f 75 6e 74 28 75   |CompressAmount(u|
0x4c50:    69 6e 74 36 34 29 00                               |int64).         |
0x4c57:    00 00 00 00 00 00 00 00  00                        |.........       |
0x4c60:    62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x4c70:    5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x4c80:    70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x4c90:    74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x4ca0:    69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x4cb0:    34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x4cc0:    74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x4cd0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x4ce0:    73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x4cf0:    69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x4d00:    65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x4d09:    00                                                 |.               |
; section: .rodata._ZTVN5boost9exceptionE
0x4d10:    00 00 00 00 28 4e 00 00  00 00 00 00 00 00 00 00   |....(N..........|
0x4d20:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x4d20:    00 00 00 00 40 4e 00 00  f0 33 00 00 50 35 00 00   |....@N...3..P5..|
0x4d30:    ec ff ff ff 40 4e 00 00  e0 33 00 00 40 35 00 00   |....@N...3..@5..|
0x4d40:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x4d48:    00 00 00 00 60 4e 00 00  00 00 00 00 00 00 00 00   |....`N..........|
0x4d58:    f0 28 00 00 20 2c 00 00  00                        |.(.. ,...       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x4d60:    00 00 00 00 00 4e 00 00  e0 34 00 00 60 34 00 00   |.....N...4..`4..|
0x4d70:    80 30 00 00 00 2d 00 00  ec ff ff ff 00 4e 00 00   |.0...-.......N..|
0x4d80:    d0 34 00 00 50 34 00 00  00 00 00 00 e8 ff ff ff   |.4..P4..........|
0x4d90:    00 4e 00 00 70 30 00 00  f0 2c 00 00 c0 34 00 00   |.N..p0...,...4..|
0x4da0:    40 34 00 00 ??                                     |@4..?           |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x4da8:    00 00 00 00 68 4e 00 00  20 29 00 00 e0 2b 00 00   |....hN.. )...+..|
0x4db8:    00 00 00 00 50 29 00 00  00 00 00 00 ??            |....P)......?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x4dc8:    00 00 00 00 70 4e 00 00  e0 2a 00 00 a0 2b 00 00   |....pN...*...+..|
0x4dd8:    10 2b 00 00 50 29 00 00  70 2b 00 00 ??            |.+..P)..p+..?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x4e00:    08 00 00 00 80 4e 00 00  00 00 00 00 02 00 00 00   |.....N..........|
0x4e10:    40 4e 00 00 02 00 00 00  60 4e 00 00 02 18 00 00   |@N......`N......|
0x4e20:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x4e20:    08 00 00 00 c0 4e 00 00  08                        |.....N...       |
; section: .rodata._ZTIN5boost9exceptionE
0x4e28:    08 00 00 00 e4 4e 00 00  ??                        |.....N..?       |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x4e40:    08 00 00 00 00 4f 00 00  00 00 00 00 02 00 00 00   |.....O..........|
0x4e50:    28 4e 00 00 02 00 00 00  00 00 00 00 02 14 00 00   |(N..............|
0x4e60:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x4e60:    08 00 00 00 40 4f 00 00  08                        |....@O...       |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x4e68:    08 00 00 00 80 4f 00 00  08                        |.....O...       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x4e70:    08 00 00 00 c0 4f 00 00  68 4e 00 00 ??            |.....O..hN..?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x4e80:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x4e90:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x4ea0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x4eb0:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x4ec0:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x4ed0:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x4ee0:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost9exceptionE
0x4ee4:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x4ef4:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x4f00:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x4f10:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x4f20:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x4f40:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x4f50:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x4f60:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x4f80:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|   "N5boost6detail15sp_counted_baseE"
0x4f90:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x4fa0:    00                                                 |.               |
0x4fa1:    ??                                                 |?               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x4fc0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x4fd0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x4fe0:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x4ff0:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x5000:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x5010:    6c 6f 63 5f 45 45 45 45  45 00 ??                  |loc_EEEEE.?     |
; section: .eh_frame
0xe17a0:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0xe17b0:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0xe17c0:   d0 28 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |.(../....C. f...|
0xe17d0:   41 0b 00 00 18 00 00 00  38 00 00 00 e4 28 00 00   |A.......8....(..|
0xe17e0:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0xe17f0:   1c 00 00 00 54 00 00 00  f8 28 00 00 55 00 00 00   |....T....(..U...|
0xe1800:   00 43 0e 20 6e 0a 0e 04  47 0b 50 0a 0e 04 41 0b   |.C. n...G.P...A.|
0xe1810:   18 00 00 00 74 00 00 00  38 29 00 00 2f 00 00 00   |....t...8)../...|
0xe1820:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0xe1830:   90 00 00 00 4c 29 00 00  39 00 00 00 00 43 0e 20   |....L)..9....C. |
0xe1840:   6e 0a 0e 04 43 0b 00 00  2c 00 00 00 ac 00 00 00   |n...C...,.......|
0xe1850:   70 29 00 00 64 00 00 00  00 41 0e 08 86 02 41 0e   |p)..d....A....A.|
0xe1860:   0c 83 03 43 0e 40 02 4f  0a 0e 0c 41 0e 08 c3 41   |...C.@.O...A...A|
0xe1870:   0e 04 c6 42 0b 00 00 00  20 00 00 00 dc 00 00 00   |...B.... .......|
0xe1880:   b0 29 00 00 44 00 00 00  00 41 0e 08 83 02 43 0e   |.)..D....A....C.|
0xe1890:   20 6d 0a 0e 08 41 0e 04  c3 46 0b 00 18 00 00 00   | m...A...F......|
0xe18a0:   00 01 00 00 dc 29 00 00  2f 00 00 00 00 43 0e 20   |.....)../....C. |
0xe18b0:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 1c 01 00 00   |f...A...........|
0xe18c0:   f0 29 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |.)..U....C. p...|
0xe18d0:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 3c 01 00 00   |E.P...A.....<...|
0xe18e0:   30 2a 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |0*..%....C. \...|
0xe18f0:   41 0b 00 00 18 00 00 00  58 01 00 00 44 2a 00 00   |A.......X...D*..|
0xe1900:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0xe1910:   18 00 00 00 74 01 00 00  68 2a 00 00 38 00 00 00   |....t...h*..8...|
0xe1920:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0xe1930:   90 01 00 00 8c 2a 00 00  38 00 00 00 00 43 0e 20   |.....*..8....C. |
0xe1940:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 ac 01 00 00   |k...E...........|
0xe1950:   b0 2a 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.*..8....C. k...|
0xe1960:   45 0b 00 00 20 00 00 00  c8 01 00 00 d4 2a 00 00   |E... ........*..|
0xe1970:   44 00 00 00 00 41 0e 08  83 02 43 0e 30 75 0a 0e   |D....A....C.0u..|
0xe1980:   08 41 0e 04 c3 45 0b 00  10 00 00 00 ec 01 00 00   |.A...E..........|
0xe1990:   00 2b 00 00 07 00 00 00  00 00 00 00 1c 00 00 00   |.+..............|
0xe19a0:   00 00 00 00 01 7a 50 4c  52 00 01 7c 08 07 00 00   |.....zPLR..|....|
0xe19b0:   00 00 00 00 1b 0c 04 04  88 01 00 00 20 00 00 00   |............ ...|
0xe19c0:   24 00 00 00 dc 2a 00 00  8b 00 00 00 04 8c 2d 00   |$....*........-.|
0xe19d0:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0xe19e0:   18 00 00 00 44 02 00 00  b8 fd ff ff 35 00 00 00   |....D.......5...|
0xe19f0:   00 43 0e 30 69 0a 0e 04  41 0b 00 00 20 00 00 00   |.C.0i...A... ...|
0xe1a00:   60 02 00 00 bc 2d 00 00  4c 00 00 00 00 41 0e 08   |`....-..L....A..|
0xe1a10:   83 02 43 0e 30 7d 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0}...A...E..|
0xe1a20:   10 00 00 00 84 02 00 00  e8 2d 00 00 07 00 00 00   |.........-......|
0xe1a30:   00 00 00 00 30 00 00 00  9c 00 00 00 e4 2d 00 00   |....0........-..|
0xe1a40:   8e 00 00 00 04 98 2d 00  00 41 0e 08 86 02 41 0e   |......-..A....A.|
0xe1a50:   0c 83 03 43 0e 30 02 6f  0a 0e 0c 41 0e 08 c3 41   |...C.0.o...A...A|
0xe1a60:   0e 04 c6 41 0b 00 00 00  28 00 00 00 d0 00 00 00   |...A....(.......|
0xe1a70:   f0 2e 00 00 14 01 00 00  04 ac 2d 00 00 43 0e 30   |..........-..C.0|
0xe1a80:   48 86 03 57 87 02 83 04  69 0a 0e 04 c7 c6 c3 45   |H..W....i......E|
0xe1a90:   0b 00 00 00 28 00 00 00  f8 02 00 00 e4 2f 00 00   |....(......../..|
0xe1aa0:   8a 00 00 00 00 43 0e 30  5b 86 02 83 03 6d 0a 0e   |.....C.0[....m..|
0xe1ab0:   04 c6 c3 45 0b 73 0a 0e  04 c6 c3 42 0b 00 00 00   |...E.s.....B....|
0xe1ac0:   24 00 00 00 28 01 00 00  48 30 00 00 68 00 00 00   |$...(...H0..h...|
0xe1ad0:   04 dc 2d 00 00 41 0e 08  83 02 43 0e 30 79 0a 0e   |..-..A....C.0y..|
0xe1ae0:   08 41 0e 04 c3 4a 0b 00  10 00 00 00 4c 03 00 00   |.A...J......L...|
0xe1af0:   90 30 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   |.0.......... ...|
0xe1b00:   60 03 00 00 8c 30 00 00  4b 00 00 00 00 41 0e 08   |`....0..K....A..|
0xe1b10:   83 02 43 0e 30 7c 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0|...A...E..|
0xe1b20:   10 00 00 00 84 03 00 00  b8 30 00 00 07 00 00 00   |.........0......|
0xe1b30:   00 00 00 00 10 00 00 00  98 03 00 00 b4 30 00 00   |.............0..|
0xe1b40:   07 00 00 00 00 00 00 00  20 00 00 00 ac 03 00 00   |........ .......|
0xe1b50:   b0 30 00 00 5a 00 00 00  00 41 0e 08 83 02 43 0e   |.0..Z....A....C.|
0xe1b60:   30 02 4b 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.K...A...E.....|
0xe1b70:   d0 03 00 00 ec 30 00 00  0a 00 00 00 00 00 00 00   |.....0..........|
0xe1b80:   10 00 00 00 e4 03 00 00  e8 30 00 00 0a 00 00 00   |.........0......|
0xe1b90:   00 00 00 00 20 00 00 00  f8 03 00 00 e4 30 00 00   |.... ........0..|
0xe1ba0:   52 00 00 00 00 41 0e 08  83 02 43 0e 30 02 43 0a   |R....A....C.0.C.|
0xe1bb0:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 1c 04 00 00   |..A...E.........|
0xe1bc0:   20 31 00 00 07 00 00 00  00 00 00 00 20 00 00 00   | 1.......... ...|
0xe1bd0:   30 04 00 00 1c 31 00 00  53 00 00 00 00 41 0e 08   |0....1..S....A..|
0xe1be0:   83 02 43 0e 30 02 44 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.D...A...E.|
0xe1bf0:   20 00 00 00 54 04 00 00  58 31 00 00 3b 00 00 00   | ...T...X1..;...|
0xe1c00:   00 41 0e 08 83 02 43 0e  30 6c 0a 0e 08 41 0e 04   |.A....C.0l...A..|
0xe1c10:   c3 45 0b 00 3c 00 00 00  78 04 00 00 c4 fb ff ff   |.E..<...x.......|
0xe1c20:   85 01 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0xe1c30:   0e 10 86 04 41 0e 14 83  05 43 0e 80 01 02 5d 0a   |....A....C....].|
0xe1c40:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0xe1c50:   04 c5 48 0b 3c 00 00 00  b8 04 00 00 14 fd ff ff   |..H.<...........|
0xe1c60:   5a 01 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |Z....A....A....A|
0xe1c70:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 b2 0a 0e   |....A....C.P....|
0xe1c80:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0xe1c90:   c5 43 0b 00 34 00 00 00  f8 04 00 00 34 fe ff ff   |.C..4.......4...|
0xe1ca0:   4a 01 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |J....A....A....A|
0xe1cb0:   0e 10 83 04 43 0e 40 02  c4 0a 0e 10 41 0e 0c c3   |....C.@.....A...|
0xe1cc0:   41 0e 08 c6 41 0e 04 c7  43 0b 00 00 3c 00 00 00   |A...A...C...<...|
0xe1cd0:   30 05 00 00 4c ff ff ff  fd 00 00 00 00 41 0e 08   |0...L........A..|
0xe1ce0:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xe1cf0:   05 43 0e 50 02 e2 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0xe1d00:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 2c 00 00 00   |.A...A...A..,...|
0xe1d10:   70 05 00 00 0c 00 00 00  d8 00 00 00 00 41 0e 08   |p............A..|
0xe1d20:   86 02 41 0e 0c 83 03 43  0e 50 02 c9 0a 0e 0c 41   |..A....C.P.....A|
0xe1d30:   0e 08 c3 41 0e 04 c6 43  0b 00 00 00 40 00 00 00   |...A...C....@...|
0xe1d40:   a0 05 00 00 bc 00 00 00  61 04 00 00 00 41 0e 08   |........a....A..|
0xe1d50:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xe1d60:   05 46 0e c0 02 03 99 02  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0xe1d70:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 49 0b 00 00 00   |...A...A...I....|
0xe1d80:   20 00 00 00 e4 05 00 00  08 30 00 00 45 00 00 00   | ........0..E...|
0xe1d90:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0xe1da0:   c3 41 0b 00 28 00 00 00  08 06 00 00 34 30 00 00   |.A..(.......40..|
0xe1db0:   49 01 00 00 00 43 0e 50  48 83 05 48 87 03 58 85   |I....C.PH..H..X.|
0xe1dc0:   02 86 04 02 71 0a 0e 04  c5 c7 c6 c3 44 0b 00 00   |....q.......D...|
0xe1dd0:   24 00 00 00 38 04 00 00  98 04 00 00 80 00 00 00   |$...8...........|
0xe1de0:   04 ed 2d 00 00 43 0e 30  48 83 03 02 40 86 02 5d   |..-..C.0H...@..]|
0xe1df0:   0a 0e 04 c6 c3 41 0b 00  30 00 00 00 60 04 00 00   |.....A..0...`...|
0xe1e00:   f0 04 00 00 cc 01 00 00  04 f9 2d 00 00 46 0e b0   |..........-..F..|
0xe1e10:   01 63 83 05 59 86 04 4e  87 03 4e 85 02 03 56 01   |.c..Y..N..N...V.|
0xe1e20:   0a 0e 04 c5 c7 c6 c3 41  0b 00 00 00 2c 00 00 00   |.......A....,...|
0xe1e30:   94 04 00 00 8c 06 00 00  28 01 00 00 04 08 2e 00   |........(.......|
0xe1e40:   00 43 0e 70 56 83 05 5e  87 03 86 04 4c 85 02 02   |.C.pV..^....L...|
0xe1e50:   cd 0a 0e 04 c5 c7 c6 c3  41 0b 00 00 40 00 00 00   |........A...@...|
0xe1e60:   c4 04 00 00 8c 07 00 00  07 02 00 00 04 17 2e 00   |................|
0xe1e70:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xe1e80:   41 0e 14 83 05 43 0e 70  03 83 01 0a 0e 14 41 0e   |A....C.p......A.|
0xe1e90:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 42 0b   |..A...A...A...B.|
0xe1ea0:   24 00 00 00 08 05 00 00  58 09 00 00 ef 00 00 00   |$.......X.......|
0xe1eb0:   04 2c 2e 00 00 41 0e 08  83 02 43 0e 70 02 d1 0a   |.,...A....C.p...|
0xe1ec0:   0e 08 41 0e 04 c3 41 0b  30 00 00 00 30 05 00 00   |..A...A.0...0...|
0xe1ed0:   c0 31 00 00 48 02 00 00  04 3c 2e 00 00 41 0e 08   |.1..H....<...A..|
0xe1ee0:   86 02 41 0e 0c 83 03 43  0e 60 03 12 01 0a 0e 0c   |..A....C.`......|
0xe1ef0:   41 0e 08 c3 41 0e 04 c6  47 0b 00 00 40 00 00 00   |A...A...G...@...|
0xe1f00:   64 05 00 00 dc 33 00 00  b2 01 00 00 04 64 2e 00   |d....3.......d..|
0xe1f10:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xe1f20:   41 0e 14 83 05 43 0e 50  03 53 01 0a 0e 14 41 0e   |A....C.P.S....A.|
0xe1f30:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 43 0b   |..A...A...A...C.|
0xe1f40:   2c 00 00 00 a8 05 00 00  58 35 00 00 a6 00 00 00   |,.......X5......|
0xe1f50:   04 73 2e 00 00 43 0e 40  48 85 02 48 83 05 48 86   |.s...C.@H..H..H.|
0xe1f60:   04 53 87 03 02 5e 0a 0e  04 c5 c7 c6 c3 43 0b 00   |.S...^.......C..|
0xe1f70:   3c 00 00 00 d4 07 00 00  d8 35 00 00 ff 02 00 00   |<........5......|
0xe1f80:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xe1f90:   41 0e 14 83 05 43 0e 70  03 3c 01 0a 0e 14 41 0e   |A....C.p.<....A.|
0xe1fa0:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0xe1fb0:   28 00 00 00 14 08 00 00  98 38 00 00 f8 00 00 00   |(........8......|
0xe1fc0:   00 43 0e 50 48 83 05 48  85 02 59 87 03 48 86 04   |.C.PH..H..Y..H..|
0xe1fd0:   02 66 0a 0e 04 c5 c7 c6  c3 46 0b 00 40 00 00 00   |.f.......F..@...|
0xe1fe0:   44 06 00 00 0c 09 00 00  2c 01 00 00 04 81 2e 00   |D.......,.......|
0xe1ff0:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xe2000:   41 0e 14 83 05 4b 0e a0  01 02 f1 0a 0e 14 41 0e   |A....K........A.|
0xe2010:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 43 0b   |..A...A...A...C.|
0xe2020:   24 00 00 00 88 06 00 00  f8 09 00 00 72 00 00 00   |$...........r...|
0xe2030:   04 9b 2e 00 00 41 0e 08  83 02 43 0e 40 02 4f 0a   |.....A....C.@.O.|
0xe2040:   0e 08 41 0e 04 c3 41 0b  28 00 00 00 ac 08 00 00   |..A...A.(.......|
0xe2050:   00 39 00 00 4c 01 00 00  00 43 0e 50 48 83 05 58   |.9..L....C.PH..X|
0xe2060:   87 03 49 85 02 46 86 04  02 56 0a 0e 04 c5 c7 c6   |..I..F...V......|
0xe2070:   c3 48 0b 00 40 00 00 00  dc 06 00 00 24 3a 00 00   |.H..@.......$:..|
0xe2080:   c2 03 00 00 04 ab 2e 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0xe2090:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0xe20a0:   02 f7 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0xe20b0:   c7 41 0e 04 c5 46 0b 00  2c 00 00 00 20 07 00 00   |.A...F..,... ...|
0xe20c0:   e0 09 00 00 5d 01 00 00  04 d9 2e 00 00 43 0e 60   |....]........C.`|
0xe20d0:   48 83 05 54 86 04 57 85  02 87 03 02 e0 0a 0e 04   |H..T..W.........|
0xe20e0:   c5 c7 c6 c3 4a 0b 00 00  24 00 00 00 50 07 00 00   |....J...$...P...|
0xe20f0:   10 0b 00 00 72 00 00 00  04 f1 2e 00 00 41 0e 08   |....r........A..|
0xe2100:   83 02 43 0e 40 02 4f 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.O...A...A.|
0xe2110:   40 00 00 00 78 07 00 00  68 0b 00 00 a6 02 00 00   |@...x...h.......|
0xe2120:   04 01 2f 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |../..A....A....A|
0xe2130:   0e 10 86 04 41 0e 14 83  05 43 0e 70 03 96 01 0a   |....A....C.p....|
0xe2140:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0xe2150:   04 c5 47 0b 24 00 00 00  bc 07 00 00 d4 0d 00 00   |..G.$...........|
0xe2160:   72 00 00 00 04 4a 2f 00  00 41 0e 08 83 02 43 0e   |r....J/..A....C.|
0xe2170:   40 02 4f 0a 0e 08 41 0e  04 c3 41 0b 20 00 00 00   |@.O...A...A. ...|
0xe2180:   e0 09 00 00 ec 3c 00 00  34 01 00 00 00 41 0e 08   |.....<..4....A..|
0xe2190:   83 02 43 0e 40 02 6f 0a  0e 08 41 0e 04 c3 44 0b   |..C.@.o...A...D.|
0xe21a0:   34 00 00 00 04 0a 00 00  08 0e 00 00 7c 01 00 00   |4...........|...|
0xe21b0:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0xe21c0:   46 0e d0 01 03 68 01 0a  0e 10 41 0e 0c c3 41 0e   |F....h....A...A.|
0xe21d0:   08 c6 41 0e 04 c7 43 0b  40 00 00 00 3c 0a 00 00   |..A...C.@...<...|
0xe21e0:   d0 3d 00 00 96 02 00 00  00 41 0e 08 85 02 41 0e   |.=.......A....A.|
0xe21f0:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e f0   |...A....A....F..|
0xe2200:   01 03 80 02 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0xe2210:   0e 08 c7 41 0e 04 c5 43  0b 00 00 00 20 00 00 00   |...A...C.... ...|
0xe2220:   80 0a 00 00 0c 0f 00 00  52 00 00 00 00 41 0e 08   |........R....A..|
0xe2230:   83 02 43 0e 30 02 45 0a  0e 08 41 0e 04 c3 43 0b   |..C.0.E...A...C.|
0xe2240:   40 00 00 00 a4 0a 00 00  48 0f 00 00 c1 03 00 00   |@.......H.......|
0xe2250:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0xe2260:   41 0e 14 83 05 46 0e b0  02 03 6e 03 0a 0e 14 41   |A....F....n....A|
0xe2270:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 43   |...A...A...A...C|
0xe2280:   0b 00 00 00 40 00 00 00  ec 08 00 00 d4 12 00 00   |....@...........|
0xe2290:   4a 01 00 00 04 5a 2f 00  00 41 0e 08 85 02 41 0e   |J....Z/..A....A.|
0xe22a0:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0xe22b0:   03 03 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0xe22c0:   08 c7 41 0e 04 c5 43 0b  44 00 00 00 30 09 00 00   |..A...C.D...0...|
0xe22d0:   e0 13 00 00 c8 03 00 00  04 69 2f 00 00 41 0e 08   |.........i/..A..|
0xe22e0:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0xe22f0:   05 46 0e f0 01 03 33 03  0a 0e 14 41 0e 10 c3 41   |.F....3....A...A|
0xe2300:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 43 0b 00 00 00   |...A...A...C....|
0xe2310:   24 00 00 00 78 09 00 00  68 17 00 00 72 00 00 00   |$...x...h...r...|
0xe2320:   04 c5 2f 00 00 41 0e 08  83 02 43 0e 40 02 4f 0a   |../..A....C.@.O.|
0xe2330:   0e 08 41 0e 04 c3 41 0b  44 00 00 00 a0 09 00 00   |..A...A.D.......|
0xe2340:   c0 17 00 00 8e 05 00 00  04 d5 2f 00 00 41 0e 08   |........../..A..|
0xe2350:   85 02 41 0e 0c 87 03 41  0e 10 86 04 46 0e 14 83   |..A....A....F...|
0xe2360:   05 46 0e d0 02 03 41 04  0a 0e 14 41 0e 10 c3 41   |.F....A....A...A|
0xe2370:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 41 0b 00 00 00   |...A...A...A....|
0xe2380:   18 00 00 00 e4 0b 00 00  c8 3e 00 00 a4 00 00 00   |.........>......|
0xe2390:   00 43 0e 30 02 9b 0a 0e  04 41 0b 00 ??            |.C.0.....A..?   |

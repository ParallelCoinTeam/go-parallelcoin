source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%once_flag = type { i64 }
%vtable_38618_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_386d0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38788_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38840_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38908_type = type { i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_38968_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38990_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38a48_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38b00_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38b18_type = type { i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_38be8_type = type { i32 (i32*)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_38c48_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_38c88_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_38ce8_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38d28_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_38d88_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38db0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32, i32)* }
%vtable_38dcc_type = type { i32 (i32*)*, i32 (i32)* }
%vtable_38e70_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32, i32)* }
%vtable_38e88_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38ea0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38ef0_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_38f08_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_38f68_type = type { i32 (i32*)*, i32 (i32)* }
%vtable_38fd8_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38ff0_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_39008_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%uint256 = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.27" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.28" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.29" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.2" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.1" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.30" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.19" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.18" = type { i32 }
%_IO_FILE = type { i32 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@cs = internal unnamed_addr global i16 0
@es = internal unnamed_addr global i16 0
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@fpu_stat_TOP = internal unnamed_addr global i3 0
@eax = internal unnamed_addr global i32 0, align 8
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0, align 8
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0, align 8
@0 = external local_unnamed_addr global i32
@global_var_14.2373 = constant i32 30
@global_var_5b44.2374 = constant [9 x i8] c"util.cpp\00"
@global_var_5b4d.2375 = constant [19 x i8] c"*ppmutexOpenSSL[i]\00"
@global_var_4.2376 = constant i32 -1587205908
@global_var_3.2378 = constant i32 1697180803
@global_var_8.2379 = constant i32 20
@global_var_5504.2384 = local_unnamed_addr constant i32 20
@global_var_5b8a.2386 = constant [10 x i8] c"debug.log\00"
@global_var_543c = external local_unnamed_addr global i32
@global_var_5b96.2388 = constant [18 x i8] c"%Y-%m-%d %H:%M:%S\00"
@global_var_c.2390 = constant i32 838092169
@global_var_5bcb.2396 = constant i32 757923888
@global_var_5458.2397 = constant i32 13100101
@global_var_e4e0.2398 = constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\00"
@global_var_5438.2399 = local_unnamed_addr global [65 x i8]* @global_var_e4e0.2398
@global_var_e0e0.2400 = constant i32 -1
@global_var_7.2402 = constant i32 5281
@global_var_c000.2403 = constant [278 x i8] c"::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<bool, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int, boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex>]\00"
@global_var_5bd4.2404 = constant i32 9412
@global_var_e0a0.2406 = constant [33 x i8] c"abcdefghijklmnopqrstuvwxyz234567\00"
@global_var_5434.2407 = local_unnamed_addr global [33 x i8]* @global_var_e0a0.2406
@global_var_e0c4.2408 = constant i32 0
@global_var_dca0.2409 = constant i32 -1
@global_var_5be8.2410 = constant i32 10266
@global_var_5c08.2411 = constant i32 11010
@global_var_5c28.2412 = constant [13 x i8] c"parallelcoin\00"
@global_var_5c38.2413 = constant [48 x i8] c"EXCEPTION: %s       \0A%s       \0A%s in %s       \0A\00"
@global_var_5c68.2414 = constant [42 x i8] c"UNKNOWN EXCEPTION       \0A%s in %s       \0A\00"
@global_var_5cbc.2416 = constant i32 1882062895
@global_var_5cbe.2417 = constant [14 x i8] c".parallelcoin\00"
@global_var_5ccc.2419 = constant [13 x i8] c"csPathCached\00"
@global_var_5bd0.2421 = constant i32 0
@global_var_58.2423 = constant i32 -1587162043
@global_var_5d1c.2425 = constant [59 x i8] c"Added time data, samples %d, offset %+lld (%+lld minutes)\0A\00"
@global_var_5d58.2426 = constant [130 x i8] c"Warning: Please check that your computer's date and time are correct! If your clock is wrong Parallelcoin will not work properly.\00"
@global_var_5de2.2427 = constant [8 x i8] c"%+lld  \00"
@global_var_5dea.2428 = constant [4 x i8] c"|  \00"
@global_var_5df0.2430 = constant [38 x i8] c"nTimeOffset = %+lld  (%+lld minutes)\0A\00"
@global_var_5e16.2433 = constant [9 x i8] c"%d.%d.%d\00"
@global_var_5e1f.2434 = constant [12 x i8] c"%d.%d.%d.%d\00"
@debugPrintInitFlag = constant %once_flag { i64 88607152197 }
@global_var_58c0.2438 = constant [18 x i8] c"boost::lock_error\00"
@global_var_58d2.2440 = constant [29 x i8] c"boost::thread_resource_error\00"
@global_var_38fc8.2441 = constant i32 0
@global_var_38fb0.2442 = constant i32 0
@global_var_38f90.2443 = constant i32 66142
@global_var_5a08.2446 = constant [40 x i8] c"!pthread_mutex_destroy(&internal_mutex)\00"
@global_var_5a30.2448 = constant [29 x i8] c"!pthread_cond_destroy(&cond)\00"
@global_var_5c.2450 = constant i32 20
@global_var_38ec8.2459 = constant i32 71254
@global_var_5b24.2467 = constant [32 x i8] c"boost::signals2::no_slots_error\00"
@global_var_2c.2469 = constant i32 -402295808
@global_var_38d9c.2472 = constant i32 95855
@global_var_38d44.2474 = constant i32 96129
@global_var_38d54.2475 = constant i32 238872
@global_var_38cfc.2478 = constant i32 96409
@global_var_38ca4.2480 = constant i32 96683
@global_var_38cb4.2481 = constant i32 238640
@global_var_38f78.2487 = constant i32 81716
@global_var_38f20.2489 = constant i32 97369
@global_var_38f34.2490 = constant i32 239338
@global_var_5f20.2491 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_6540.2492 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_3ab58.2493 = global i32 0
@global_var_5f63.2496 = constant [29 x i8] c"!(page_size & (page_size-1))\00"
@global_var_5fac.2499 = constant [8 x i8] c"px != 0\00"
@global_var_5fb4.2500 = constant [16 x i8] c"vector::reserve\00"
@global_var_38de0.2502 = constant i32 91782
@global_var_38dec.2504 = constant i32 232972
@global_var_5fcb.2508 = constant [7 x i8] c"size>0\00"
@global_var_38c5c.2510 = constant i32 119274
@global_var_38c04.2512 = constant i32 119547
@global_var_38c14.2513 = constant i32 238408
@global_var_39720.2514 = constant i32 8
@global_var_5fd2.2515 = constant [22 x i8] c"vector::_M_insert_aux\00"
@global_var_89d8.2524 = constant [272 x i8] c"riant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::destroyer, VoidPtrCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void]\00"
@global_var_6093.2528 = constant [23 x i8] c"_shared_state.unique()\00"
@global_var_7c.2533 = constant i32 -1587210004
@global_var_80.2540 = constant i32 20
@global_var_6116.2546 = constant [23 x i8] c"vector::_M_fill_insert\00"
@global_var_27d90.2551 = constant i32 161853
@global_var_282bc.2552 = constant i32 163391
@global_var_8800.2553 = constant [347 x i8] c"GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]\00"
@global_var_287e8.2554 = constant i32 164715
@global_var_28d90.2555 = constant i32 166165
@global_var_3897c.2575 = constant i32 190646
@global_var_38924.2577 = constant i32 190919
@global_var_38934.2578 = constant i32 237748
@global_var_108.2581 = constant i32 -1962934188
@global_var_88c2.2596 = constant [153 x i8] c"::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]\00"
@global_var_6257.2603 = constant [24 x i8] c"members_.capacity_ >= n\00"
@global_var_eb.2611 = constant [5 x i8] c"D$\08]\00"
@global_var_89d0.2613 = constant [280 x i8] c"tail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::destroyer, VoidPtrCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void]\00"
@1 = external global i32
@global_var_f.2389 = constant i8 49
@2 = internal constant [49 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00"
@global_var_6300.2393 = constant i8* getelementptr inbounds ([49 x i8], [49 x i8]* @2, i32 0, i32 0)
@global_var_5bc9.2395 = constant i1 true
@global_var_24.2401 = constant i8 85
@global_var_542c.2432 = local_unnamed_addr global i8 11
@global_var_b.2405 = constant i8 0
@global_var_5430.2431 = local_unnamed_addr global i8 11
@global_var_8b.2420 = constant i8 -12
@3 = internal constant [3 x i8] c"\A1\14\00"
@global_var_5480.2424 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@4 = internal constant [6 x i8] c"\C0\C7\04$\1E\00"
@global_var_10.2429 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i32 0, i32 0)
@5 = internal constant [19 x i8] c"\E8\FC\FF\FF\FF\89E\F0\8BE\F0\8BU\F4e3\15\14\00"
@global_var_18.2447 = constant i8* getelementptr inbounds ([19 x i8], [19 x i8]* @5, i32 0, i32 0)
@global_var_93.2455 = constant i8 116
@6 = internal constant [7 x i8] c"\C7D$\04D[\00"
@global_var_f2.2591 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @6, i32 0, i32 0)
@global_var_38618.2605 = constant %vtable_38618_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_386d0.2604 = constant %vtable_386d0_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_38788.2598 = constant %vtable_38788_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_38840.2597 = constant %vtable_38840_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_38908.2576 = constant %vtable_38908_type { i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev, i32 (i32)* @_ZNK5boost8signals214no_slots_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.2371, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv }
@global_var_38968.2574 = constant %vtable_38968_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev, i32 (i32)* @_ZNK5boost8signals214no_slots_error4whatEv }
@global_var_38990.2610 = constant %vtable_38990_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEE11get_deleterERKSt9type_info }
@global_var_38a48.2568 = constant %vtable_38a48_type { i32 (i32*)* @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEED1Ev, i32 (i32)* @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEED0Ev, i32 (i32)* @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEE11get_deleterERKSt9type_info }
@global_var_38b00.2580 = constant %vtable_38b00_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEE3runEv }
@global_var_38b18.2537 = constant %vtable_38b18_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_38be8.2511 = constant %vtable_38be8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, i32 ()* @instance_of_cinit, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv }
@global_var_38c48.2509 = constant %vtable_38c48_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, i32 ()* @instance_of_cinit }
@global_var_38c88.2479 = constant %vtable_38c88_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_38ce8.2477 = constant %vtable_38ce8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_38d28.2473 = constant %vtable_38d28_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv }
@global_var_38d88.2471 = constant %vtable_38d88_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38db0.2470 = constant %vtable_38db0_type { i32 (i32*)* @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev, i32 (i32)* @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED0Ev, i32 (i32, i32)* @_ZN5boost15program_options6detail26basic_config_file_iteratorIcE7getlineERSs }
@global_var_38dcc.2501 = constant %vtable_38dcc_type { i32 (i32*)* @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev, i32 (i32)* @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED0Ev }
@global_var_38e70.2468 = constant %vtable_38e70_type { i32 (i32*)* @_ZN5boost15program_options6detail27common_config_file_iteratorD1Ev, i32 (i32)* @_ZN5boost15program_options6detail27common_config_file_iteratorD0Ev, i32 (i32, i32)* @_ZN5boost15program_options6detail27common_config_file_iterator7getlineERSs }
@global_var_38e88.2550 = constant %vtable_38e88_type { i32 (i32*)* @_ZN5boost8signals214no_slots_errorD1Ev, i32 (i32)* @_ZN5boost8signals214no_slots_errorD0Ev, i32 (i32)* @_ZNK5boost8signals214no_slots_error4whatEv }
@global_var_38ea0.2466 = constant %vtable_38ea0_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_38ef0.2458 = constant %vtable_38ef0_type { i32 (i32*)* @_ZN5boost17bad_function_callD1Ev, i32 (i32)* @_ZN5boost17bad_function_callD0Ev, i32 ()* @instance_of_cinit }
@global_var_38f08.2488 = constant %vtable_38f08_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_38f68.2486 = constant %vtable_38f68_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_38fd8.2439 = constant %vtable_38fd8_type { i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, i32 (i32)* @_ZN5boost21thread_resource_errorD0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38ff0.2437 = constant %vtable_38ff0_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32)* @_ZN5boost10lock_errorD0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_39008.2436 = constant %vtable_39008_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @instance_of_cinit }

define i32 @instance_of_cinit() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define void @"~basic_ifstream"(i32 %this, i32 %__in_chrg, i8** %__vtt_parm) local_unnamed_addr {
dec_label_pc_10:
  ret void
}

define void @EnterCritical(i8* %pszName, i8* %pszFile, i32 %nLine, i8* %cs, i1 %fTry) local_unnamed_addr {
dec_label_pc_36:
  ret void
}

define i32 @function_75() local_unnamed_addr {
dec_label_pc_75:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_75 = load i32, i32* %ecx.global-to-local, align 4
  %v1_75 = add i32 %v0_75, -1
  store i32 %v1_75, i32* %ecx.global-to-local, align 4
  %v0_77 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_77
}

define void @LeaveCritical() local_unnamed_addr {
dec_label_pc_78:
  ret void
}

define i32 @function_99() local_unnamed_addr {
dec_label_pc_99:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_99 = load i32, i32* %ecx.global-to-local, align 4
  %v1_99 = add i32 %v0_99, -1
  store i32 %v1_99, i32* %ecx.global-to-local, align 4
  %v0_9b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9b
}

define void @_Z16locking_callbackiiPKci(i32 %mode, i32 %i, i8* %file, i32 %line) local_unnamed_addr {
dec_label_pc_9c:
  %v1_c8 = urem i32 %mode, 2
  %v2_c8 = icmp eq i32 %v1_c8, 0
  %v0_11f = load i32, i32* inttoptr (i32 21748 to i32*), align 4
  %v2_127 = mul i32 %i, 4
  %v2_12a = add i32 %v0_11f, %v2_127
  %v1_12c = inttoptr i32 %v2_12a to i32*
  %v2_12c = load i32, i32* %v1_12c, align 4
  br i1 %v2_c8, label %dec_label_pc_11f, label %dec_label_pc_cf

dec_label_pc_cf:                                  ; preds = %dec_label_pc_9c
  %v3_12e = inttoptr i32 %v2_12c to i8*
  call void @EnterCritical(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_5b4d.2375, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_5b44.2374, i32 0, i32 0), i32 93, i8* %v3_12e, i1 false)
  %v0_106 = load i32, i32* inttoptr (i32 21748 to i32*), align 4
  %v2_111 = add i32 %v0_106, %v2_127
  %v1_113 = inttoptr i32 %v2_111 to i32*
  %v2_113 = load i32, i32* %v1_113, align 4
  %v2_118 = call i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %v2_113)
  br label %dec_label_pc_13b

dec_label_pc_11f:                                 ; preds = %dec_label_pc_9c
  %v2_131 = call i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %v2_12c)
  call void @LeaveCritical()
  br label %dec_label_pc_13b

dec_label_pc_13b:                                 ; preds = %dec_label_pc_11f, %dec_label_pc_cf
  store i32 0, i32* @eax, align 8
  %v1_145 = call i32 @function_14c()
  ret void

; uselistorder directives
  uselistorder i32 %v2_127, { 1, 0 }
}

define i32 @function_14c() local_unnamed_addr {
dec_label_pc_14c:
  %v0_14d = load i32, i32* @eax, align 8
  ret i32 %v0_14d
}

define void @_Z11RandAddSeedv() local_unnamed_addr {
dec_label_pc_14e:
  %v1_15f = call i32 @_Z21GetPerformanceCounterv(i32 30)
  ret void
}

define i32 @function_1a5() local_unnamed_addr {
dec_label_pc_1a5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a5 = add i32 %v0_1a5, -1
  store i32 %v1_1a5, i32* %ecx.global-to-local, align 4
  %v0_1a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a7
}

define void @_Z18RandAddSeedPerfmonv() local_unnamed_addr {
dec_label_pc_1a8:
  call void @_Z11RandAddSeedv()
  %v0_1c0 = call i64 @_Z7GetTimev()
  %v2_1c0 = trunc i64 %v0_1c0 to i32
  %v0_1c5 = load i32, i32* inttoptr (i32 21944 to i32*), align 8
  %v0_1cb = load i32, i32* inttoptr (i32 21948 to i32*), align 4
  %v1_1d1 = add i32 %v0_1c5, 600
  %v5_1d1 = icmp ugt i32 %v0_1c5, -601
  %v2_1d7 = zext i1 %v5_1d1 to i32
  %v3_1d7 = add i32 %v2_1d7, %v0_1cb
  %v0_1df = load i32, i32* @edx, align 8
  %v5_1e1 = icmp slt i32 %v0_1df, %v3_1d7
  br i1 %v5_1e1, label %dec_label_pc_1f0, label %dec_label_pc_1e3

dec_label_pc_1e3:                                 ; preds = %dec_label_pc_1a8
  %v8_1e5 = icmp sgt i32 %v0_1df, %v3_1d7
  br i1 %v8_1e5, label %dec_label_pc_1eb, label %dec_label_pc_1e7

dec_label_pc_1e7:                                 ; preds = %dec_label_pc_1e3
  %v7_1e7 = icmp ult i32 %v2_1c0, %v1_1d1
  br i1 %v7_1e7, label %dec_label_pc_1f0, label %dec_label_pc_1eb

dec_label_pc_1eb:                                 ; preds = %dec_label_pc_1e7, %dec_label_pc_1e3
  br label %dec_label_pc_1f0

dec_label_pc_1f0:                                 ; preds = %dec_label_pc_1eb, %dec_label_pc_1e7, %dec_label_pc_1a8
  %v0_1f0 = phi i1 [ false, %dec_label_pc_1eb ], [ true, %dec_label_pc_1e7 ], [ true, %dec_label_pc_1a8 ]
  br i1 %v0_1f0, label %dec_label_pc_209, label %dec_label_pc_1f6

dec_label_pc_1f6:                                 ; preds = %dec_label_pc_1f0
  %v0_1f6 = call i64 @_Z7GetTimev()
  %v2_1f6 = trunc i64 %v0_1f6 to i32
  store i32 %v2_1f6, i32* inttoptr (i32 21944 to i32*), align 8
  %v0_200 = load i32, i32* @edx, align 8
  store i32 %v0_200, i32* inttoptr (i32 21948 to i32*), align 4
  br label %dec_label_pc_209

dec_label_pc_209:                                 ; preds = %dec_label_pc_1f0, %dec_label_pc_1f6
  store i32 0, i32* @eax, align 8
  %v1_213 = call i32 @function_21a()
  ret void

; uselistorder directives
  uselistorder label %dec_label_pc_209, { 1, 0 }
}

define i32 @function_21a() local_unnamed_addr {
dec_label_pc_21a:
  %v0_220 = load i32, i32* @eax, align 8
  ret i32 %v0_220
}

define i64 @_Z7GetRandy(i64 %nMax) local_unnamed_addr {
dec_label_pc_221:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v4_228 = trunc i64 %nMax to i32
  %v2_245 = or i32 %tmp10, %v4_228
  %v3_245 = icmp eq i32 %v2_245, 0
  %v1_249 = icmp eq i1 %v3_245, false
  br i1 %v1_249, label %dec_label_pc_25a, label %dec_label_pc_24b

dec_label_pc_24b:                                 ; preds = %dec_label_pc_221
  store i32 0, i32* @eax, align 8
  %v3_255 = call i32 @function_300(i32 %v4_228, i32 %tmp10)
  %v5_255 = sext i32 %v3_255 to i64
  ret i64 %v5_255

dec_label_pc_25a:                                 ; preds = %dec_label_pc_221
  %v3_25a = call i32 @_ZNSt14numeric_limitsIyE3maxEv(i32 %v4_228, i32 %tmp10)
  %v5_270 = sext i32 %v3_25a to i64
  ret i64 %v5_270

; uselistorder directives
  uselistorder i32 %v4_228, { 1, 2, 0 }
  uselistorder i32 %tmp10, { 2, 1, 0 }
}

define i32 @function_27d(i16 %arg1) local_unnamed_addr {
dec_label_pc_27d:
  %eax.global-to-local = alloca i32, align 4
  %v6_27d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_27d
}

define i32 @function_28f(i16 %arg1) local_unnamed_addr {
dec_label_pc_28f:
  %eax.global-to-local = alloca i32, align 4
  %v6_28f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_28f
}

define i32 @function_2df(i16 %arg1) local_unnamed_addr {
dec_label_pc_2df:
  %eax.global-to-local = alloca i32, align 4
  %v6_2df = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_2df
}

define i32 @function_300(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_300:
  %v0_300 = load i32, i32* @ebp, align 4
  %v1_300 = add i32 %v0_300, -12
  %v2_300 = inttoptr i32 %v1_300 to i32*
  %v3_300 = load i32, i32* %v2_300, align 4
  %v3_303 = icmp eq i32 %v3_300, 30
  br i1 %v3_303, label %bb, label %dec_label_pc_300.dec_label_pc_30c_crit_edge

dec_label_pc_300.dec_label_pc_30c_crit_edge:      ; preds = %dec_label_pc_300
  %v2_30a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30c

bb:                                               ; preds = %dec_label_pc_300
  %v1_30a = call i32 @function_311()
  br label %dec_label_pc_30c

dec_label_pc_30c:                                 ; preds = %dec_label_pc_300.dec_label_pc_30c_crit_edge, %bb
  %v2_30a = phi i32 [ %v2_30a.pre, %dec_label_pc_300.dec_label_pc_30c_crit_edge ], [ %v1_30a, %bb ]
  ret i32 %v2_30a

; uselistorder directives
  uselistorder label %dec_label_pc_30c, { 1, 0 }
}

define i32 @function_311() local_unnamed_addr {
dec_label_pc_311:
  %v0_316 = load i32, i32* @eax, align 8
  ret i32 %v0_316
}

define i32 @_Z10GetRandInti(i32 %nMax) local_unnamed_addr {
dec_label_pc_317:
  %v2_33d = sext i32 %nMax to i64
  %v3_33d = call i64 @_Z7GetRandy(i64 %v2_33d)
  %v5_33d = trunc i64 %v3_33d to i32
  store i32 %v5_33d, i32* @eax, align 8
  %v1_34c = call i32 @function_353()
  ret i32 %v1_34c
}

define i32 @function_353() local_unnamed_addr {
dec_label_pc_353:
  %v0_354 = load i32, i32* @eax, align 8
  ret i32 %v0_354
}

define %uint256 @_Z11GetRandHashv() local_unnamed_addr {
dec_label_pc_355:
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %v1_372 = call i32 @_ZN7uint256C1Ev(i32 %tmp99)
  %v4_382 = insertvalue %uint256 undef, i32 %tmp99, 0
  ret %uint256 %v4_382
}

define i32 @function_39d() local_unnamed_addr {
dec_label_pc_39d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_39d = load i32, i32* %ecx.global-to-local, align 4
  %v1_39d = add i32 %v0_39d, -1
  store i32 %v1_39d, i32* %ecx.global-to-local, align 4
  %v0_39f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39f
}

define void @DebugPrintInit() local_unnamed_addr {
dec_label_pc_3a2:
  ret void
}

define i32 @function_3e2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3e2:
  ret i32 ptrtoint (i32* @global_var_14.2373 to i32)
}

define i32 @function_40f() local_unnamed_addr {
dec_label_pc_40f:
  %v0_41f = load i32, i32* @ebp, align 4
  %v1_41f = add i32 %v0_41f, -16
  %tmp8 = urem i32 %v1_41f, 2
  %v3_422 = icmp ne i32 %tmp8, 0
  %v1_425 = sext i1 %v3_422 to i32
  %v5_425 = call i32 @_ZN5boost11filesystem34pathC1IA10_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v1_425, i32 ptrtoint ([10 x i8]* @global_var_5b8a.2386 to i32), i32 0)
  %v3_431 = call i32 @_Z10GetDataDirb(i1 true)
  %v0_438 = load i32, i32* @ebp, align 4
  %v1_438 = add i32 %v0_438, -20
  %v1_43b = add i32 %v0_438, -16
  %tmp9 = urem i32 %v1_438, 2
  %v3_446 = icmp ne i32 %tmp9, 0
  %v1_449 = sext i1 %v3_446 to i32
  %v5_449 = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %v1_449, i32 %v3_431, i32 %v1_43b)
  %v0_451 = load i32, i32* @ebp, align 4
  %v1_451 = add i32 %v0_451, -16
  %v1_457 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_451)
  %v0_45c = load i32, i32* @ebp, align 4
  %v1_45c = add i32 %v0_45c, -20
  %v1_462 = call i32 @_ZNK5boost11filesystem34path6stringEv(i32 %v1_45c)
  ret i32 %v1_462
}

define i32 @function_47e() local_unnamed_addr {
dec_label_pc_47e:
  %eax.global-to-local = alloca i32, align 4
  %v0_47e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_47e
}

define i32 @function_4ad() local_unnamed_addr {
dec_label_pc_4ad:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_4ad = add i32 %v0_4ad, 605850051
  %v2_4ad = inttoptr i32 %v1_4ad to i32*
  %v3_4ad = load i32, i32* %v2_4ad, align 4
  %v4_4ad = add i32 %v3_4ad, -1
  store i32 %v4_4ad, i32* %v2_4ad, align 4
  %v0_4b3 = call i32 @_ZN5boost5mutexC1Ev()
  %v0_4b8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_4b8, i32* @global_var_5504.2384, align 4
  %v0_4be = load i32, i32* @ebp, align 4
  %v1_4be = add i32 %v0_4be, -20
  %v1_4c4 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_4be)
  %v0_4c9 = load i32, i32* @ebp, align 4
  %v1_4c9 = add i32 %v0_4c9, -12
  %v2_4c9 = inttoptr i32 %v1_4c9 to i32*
  %v3_4c9 = load i32, i32* %v2_4c9, align 4
  %v2_4cc = xor i32 %v3_4c9, 30
  %v3_4cc = icmp eq i32 %v2_4cc, 0
  store i32 %v2_4cc, i32* @eax, align 8
  br i1 %v3_4cc, label %bb, label %dec_label_pc_4d5

bb:                                               ; preds = %dec_label_pc_4ad
  %v1_4d3 = call i32 @function_518()
  store i32 %v1_4d3, i32* @eax, align 8
  br label %dec_label_pc_4d5

dec_label_pc_4d5:                                 ; preds = %bb, %dec_label_pc_4ad
  %v0_4d5 = call i32 @function_513()
  ret i32 %v0_4d5
}

define i32 @function_4d8() local_unnamed_addr {
dec_label_pc_4d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4d8
}

define i32 @function_4f7() local_unnamed_addr {
dec_label_pc_4f7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4f7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_4f7 = add i32 %v0_4f7, -1996297229
  %v2_4f7 = inttoptr i32 %v1_4f7 to i32*
  %v3_4f7 = load i32, i32* %v2_4f7, align 4
  %v4_4f7 = add i32 %v3_4f7, -1
  store i32 %v4_4f7, i32* %v2_4f7, align 4
  %v0_4fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fd
}

define i32 @function_503() local_unnamed_addr {
dec_label_pc_503:
  %eax.global-to-local = alloca i32, align 4
  %v0_503 = load i32, i32* %eax.global-to-local, align 8
  %v11_503 = and i32 %v0_503, -24
  store i32 %v11_503, i32* %eax.global-to-local, align 8
  ret i32 %v11_503

; uselistorder directives
  uselistorder i32 %v11_503, { 1, 0 }
}

define i32 @function_513() local_unnamed_addr {
dec_label_pc_513:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_518() local_unnamed_addr {
dec_label_pc_518:
  %v0_51e = load i32, i32* @eax, align 8
  ret i32 %v0_51e
}

define i32 @_Z18OutputDebugStringFPKcz(i8* %pszFormat, ...) local_unnamed_addr {
dec_label_pc_51f:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_53e = load i8, i8* inttoptr (i32 21618 to i8*), align 2
  %v5_545 = icmp eq i8 %v0_53e, 0
  br i1 %v5_545, label %bb, label %dec_label_pc_549

bb:                                               ; preds = %dec_label_pc_51f
  %v2_547 = call i32 @function_56b(i32 %tmp6)
  br label %dec_label_pc_549

dec_label_pc_549:                                 ; preds = %bb, %dec_label_pc_51f
  ret i32 %tmp6
}

define i32 @function_563() local_unnamed_addr {
dec_label_pc_563:
  %eax.global-to-local = alloca i32, align 4
  %v0_563 = load i32, i32* @ebp, align 4
  %v1_563 = add i32 %v0_563, -16
  %v2_563 = inttoptr i32 %v1_563 to i32*
  %v3_563 = load i32, i32* %v2_563, align 4
  %v4_563 = load i32, i32* %eax.global-to-local, align 8
  %v5_563 = add i32 %v4_563, %v3_563
  store i32 %v5_563, i32* %v2_563, align 4
  %v0_566 = call i32 @function_735()
  store i32 %v0_566, i32* %eax.global-to-local, align 8
  ret i32 %v0_566
}

define i32 @function_56b(i32 %arg1) local_unnamed_addr {
dec_label_pc_56b:
  %v0_56b = load i8, i8* inttoptr (i32 21619 to i8*), align 1
  %v5_575 = icmp eq i8 %v0_56b, 1
  br i1 %v5_575, label %bb, label %dec_label_pc_57d

bb:                                               ; preds = %dec_label_pc_56b
  %v1_577 = call i32 @function_735()
  br label %dec_label_pc_57d

dec_label_pc_57d:                                 ; preds = %bb, %dec_label_pc_56b
  %v3_58c = call i32 @_ZN5boost9call_onceEPFvvERNS_9once_flagE(i32 0, i32 21752)
  %v0_5ab = load i32, i32* @ebp, align 4
  %v1_5ab = add i32 %v0_5ab, -40
  %tmp8 = urem i32 %v1_5ab, 2
  %v3_5ae = icmp ne i32 %tmp8, 0
  %v1_5b1 = sext i1 %v3_5ae to i32
  %v3_5b1 = inttoptr i32 %v1_5b1 to i32*
  %v4_5b1 = call i32 @_ZN5boost11unique_lockINS_5mutexEEC1ERS1_(i32* %v3_5b1, i32 ptrtoint (i32* @global_var_14.2373 to i32))
  %v0_5b6 = load i8, i8* inttoptr (i32 21660 to i8*), align 4
  %v5_5bd = icmp eq i8 %v0_5b6, 0
  br i1 %v5_5bd, label %bb9, label %dec_label_pc_5c5

bb9:                                              ; preds = %dec_label_pc_57d
  %v1_5bf = call i32 @function_66f()
  br label %dec_label_pc_5c5

dec_label_pc_5c5:                                 ; preds = %bb9, %dec_label_pc_57d
  store i8 0, i8* inttoptr (i32 21660 to i8*), align 4
  %v0_5dc = load i32, i32* @ebp, align 4
  %v1_5dc = add i32 %v0_5dc, -24
  %tmp10 = urem i32 %v1_5dc, 2
  %v3_5df = icmp ne i32 %tmp10, 0
  %v1_5e2 = sext i1 %v3_5df to i32
  %v4_5e2 = call i32 @_ZN5boost11filesystem34pathC1IA10_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v1_5e2, i32 ptrtoint ([10 x i8]* @global_var_5b8a.2386 to i32), i32 0)
  %v3_5ee = call i32 @_Z10GetDataDirb(i1 true)
  %v0_5f5 = load i32, i32* @ebp, align 4
  %v1_5f5 = add i32 %v0_5f5, -28
  %v1_5f8 = add i32 %v0_5f5, -24
  store i32 %v1_5f8, i32* @ecx, align 4
  %tmp11 = urem i32 %v1_5f5, 2
  %v3_603 = icmp ne i32 %tmp11, 0
  %v1_606 = sext i1 %v3_603 to i32
  %v4_606 = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %v1_606, i32 %v3_5ee, i32 %v1_5f8)
  %v0_60e = load i32, i32* @ebp, align 4
  %v1_60e = add i32 %v0_60e, -24
  %v1_614 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_60e)
  store i32 -1587158971, i32* @ebx, align 4
  %v0_61f = load i32, i32* @ebp, align 4
  %v1_61f = add i32 %v0_61f, -28
  %v1_625 = call i32 @_ZNK5boost11filesystem34path6stringEv(i32 %v1_61f)
  ret i32 %v1_625
}

define i32 @function_66f() local_unnamed_addr {
dec_label_pc_66f:
  %v0_67a = load i8, i8* inttoptr (i32 21564 to i8*), align 4
  %v5_681 = icmp eq i8 %v0_67a, 0
  br i1 %v5_681, label %bb, label %dec_label_pc_685

bb:                                               ; preds = %dec_label_pc_66f
  %v1_683 = call i32 @function_6dc()
  br label %dec_label_pc_685

dec_label_pc_685:                                 ; preds = %bb, %dec_label_pc_66f
  %v0_685 = call i64 @_Z7GetTimev()
  %v2_685 = trunc i64 %v0_685 to i32
  %v0_68a = load i32, i32* @ebp, align 4
  %v1_68a = add i32 %v0_68a, -20
  store i32 %v1_68a, i32* @ecx, align 4
  %v0_691 = load i32, i32* @edx, align 8
  %v5_6a0 = call i32 @_Z17DateTimeStrFormatPKcx(i32 %v1_68a, i32 ptrtoint ([18 x i8]* @global_var_5b96.2388 to i32), i32 %v2_685, i32 %v0_691)
  %v0_6a8 = load i32, i32* @ebp, align 4
  %v1_6a8 = add i32 %v0_6a8, -20
  ret i32 %v1_6a8
}

define i32 @function_6b4() local_unnamed_addr {
dec_label_pc_6b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_6b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_6b4
}

define i32 @function_6dc() local_unnamed_addr {
dec_label_pc_6dc:
  %v0_6dc = load i32, i32* @ebp, align 4
  %v1_6dc = add i32 %v0_6dc, -44
  %v2_6dc = inttoptr i32 %v1_6dc to i32*
  %v3_6dc = load i32, i32* %v2_6dc, align 4
  ret i32 %v3_6dc
}

define i32 @function_6e6() local_unnamed_addr {
dec_label_pc_6e6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_6e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6e6 = add i32 %v0_6e6, 1157825000
  %v2_6e6 = inttoptr i32 %v1_6e6 to i32*
  %v3_6e6 = load i32, i32* %v2_6e6, align 4
  %v4_6e6 = add i32 %v3_6e6, 1
  store i32 %v4_6e6, i32* %v2_6e6, align 4
  %v0_6ec = load i32, i32* %eax.global-to-local, align 8
  %v1_6ec = trunc i32 %v0_6ec to i8
  %v3_6ec = urem i8 %v1_6ec, ptrtoint (i8* @global_var_f.2389 to i8)
  %v11_6f0 = icmp eq i8 %v3_6ec, 10
  %. = zext i1 %v11_6f0 to i8
  store i8 %., i8* bitcast (i32* @global_var_543c to i8*), align 4
  %v0_704 = load i32, i32* %ebp.global-to-local, align 4
  %v1_704 = add i32 %v0_704, ptrtoint (i32* @global_var_c.2390 to i32)
  %v1_707 = add i32 %v0_704, -32
  store i32 %v1_707, i32* %eax.global-to-local, align 8
  %v2_70a = inttoptr i32 %v1_707 to i32*
  store i32 %v1_704, i32* %v2_70a, align 4
  store i32 -1587158971, i32* %eax.global-to-local, align 8
  ret i32 -1587158971
}

define i32 @function_735() local_unnamed_addr {
dec_label_pc_735:
  %v0_735 = load i32, i32* @ebp, align 4
  %v1_735 = add i32 %v0_735, -16
  %v2_735 = inttoptr i32 %v1_735 to i32*
  %v3_735 = load i32, i32* %v2_735, align 4
  ret i32 %v3_735
}

define i32 @function_738() local_unnamed_addr {
dec_label_pc_738:
  %v0_738 = load i32, i32* @ebp, align 4
  %v1_738 = add i32 %v0_738, -12
  %v2_738 = inttoptr i32 %v1_738 to i32*
  %v3_738 = load i32, i32* %v2_738, align 4
  %v3_73b = icmp eq i32 %v3_738, 30
  br i1 %v3_73b, label %bb, label %dec_label_pc_744

bb:                                               ; preds = %dec_label_pc_738
  %v1_742 = call i32 @function_78f()
  store i32 %v1_742, i32* @eax, align 8
  br label %dec_label_pc_744

dec_label_pc_744:                                 ; preds = %bb, %dec_label_pc_738
  %v0_744 = call i32 @function_78a()
  ret i32 %v0_744
}

define i32 @function_746() local_unnamed_addr {
dec_label_pc_746:
  %eax.global-to-local = alloca i32, align 4
  %v0_746 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_746, i32* @ebx, align 4
  %v0_748 = load i32, i32* @ebp, align 4
  %v1_748 = add i32 %v0_748, -24
  store i32 %v1_748, i32* %eax.global-to-local, align 8
  %v1_74e = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_748)
  store i32 %v1_74e, i32* %eax.global-to-local, align 8
  %v0_753 = call i32 @function_775()
  store i32 %v0_753, i32* %eax.global-to-local, align 8
  ret i32 %v0_753
}

define i32 @function_755() local_unnamed_addr {
dec_label_pc_755:
  %eax.global-to-local = alloca i32, align 4
  %v0_755 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_755, i32* @ebx, align 4
  %v0_757 = load i32, i32* @ebp, align 4
  %v1_757 = add i32 %v0_757, -28
  store i32 %v1_757, i32* %eax.global-to-local, align 8
  %v1_75d = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_757)
  store i32 %v1_75d, i32* %eax.global-to-local, align 8
  %v0_762 = call i32 @function_775()
  store i32 %v0_762, i32* %eax.global-to-local, align 8
  ret i32 %v0_762
}

define i32 @function_765() local_unnamed_addr {
dec_label_pc_765:
  %eax.global-to-local = alloca i32, align 4
  %v0_765 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_765
}

define i32 @function_771() local_unnamed_addr {
dec_label_pc_771:
  %v0_771 = call i32 @function_775()
  ret i32 %v0_771

; uselistorder directives
  uselistorder i32 ()* @function_775, { 2, 1, 0 }
}

define i32 @function_774() local_unnamed_addr {
dec_label_pc_774:
  %eax.global-to-local = alloca i32, align 4
  %v0_774 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_774
}

define i32 @function_775() local_unnamed_addr {
dec_label_pc_775:
  %v0_775 = load i32, i32* @ebp, align 4
  %v1_775 = add i32 %v0_775, -40
  %v1_77b = inttoptr i32 %v1_775 to i32*
  %v2_77b = call i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %v1_77b)
  %v0_780 = load i32, i32* @ebx, align 4
  ret i32 %v0_780
}

define i32 @function_78a() local_unnamed_addr {
dec_label_pc_78a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_78f() local_unnamed_addr {
dec_label_pc_78f:
  %v0_793 = load i32, i32* @eax, align 8
  ret i32 %v0_793
}

define i32 @_Z10vstrprintfPKcPc(i8* %format, i8* %ap) local_unnamed_addr {
dec_label_pc_794:
  %stack_var_-50016 = alloca i32, align 4
  %v2_7c4 = ptrtoint i32* %stack_var_-50016 to i32
  ret i32 %v2_7c4
}

define i32 @function_88b() local_unnamed_addr {
dec_label_pc_88b:
  %eax.global-to-local = alloca i32, align 4
  %v0_88b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_88b
}

define i32 @function_921() local_unnamed_addr {
dec_label_pc_921:
  %v0_921 = call i32 @function_93e()
  ret i32 %v0_921
}

define i32 @function_924() local_unnamed_addr {
dec_label_pc_924:
  %eax.global-to-local = alloca i32, align 4
  %v0_924 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_924
}

define i32 @function_93e() local_unnamed_addr {
dec_label_pc_93e:
  %v0_93e = load i32, i32* @ebp, align 4
  %v1_93e = add i32 %v0_93e, -50044
  %v2_93e = inttoptr i32 %v1_93e to i32*
  %v3_93e = load i32, i32* %v2_93e, align 4
  store i32 %v3_93e, i32* @eax, align 8
  %v1_944 = add i32 %v0_93e, -12
  %v2_944 = inttoptr i32 %v1_944 to i32*
  %v3_944 = load i32, i32* %v2_944, align 4
  %v3_947 = icmp eq i32 %v3_944, 30
  br i1 %v3_947, label %bb, label %dec_label_pc_950

bb:                                               ; preds = %dec_label_pc_93e
  %v1_94e = call i32 @function_955()
  br label %dec_label_pc_950

dec_label_pc_950:                                 ; preds = %bb, %dec_label_pc_93e
  %v2_94e = phi i32 [ %v1_94e, %bb ], [ %v3_93e, %dec_label_pc_93e ]
  ret i32 %v2_94e
}

define i32 @function_955() local_unnamed_addr {
dec_label_pc_955:
  %v0_95d = load i32, i32* @eax, align 8
  ret i32 %v0_95d
}

define i32 @_Z14real_strprintfPKciz(i8* %format, i32 %dummy, ...) local_unnamed_addr {
dec_label_pc_960:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v4_998 = inttoptr i32 %tmp11 to i8*
  %v4_99f = inttoptr i32 %tmp13 to i8*
  %v6_99f = call i32 @_Z10vstrprintfPKcPc(i8* %v4_99f, i8* %v4_998)
  %v1_9b4 = call i32 @function_9bb()
  ret i32 %v1_9b4
}

define i32 @function_9bb() local_unnamed_addr {
dec_label_pc_9bb:
  %v0_9bc = load i32, i32* @eax, align 8
  ret i32 %v0_9bc
}

define i32 @_Z14real_strprintfRKSsiz(i32 %format, i32 %dummy, ...) local_unnamed_addr {
dec_label_pc_9bf:
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp102
}

define i32 @function_9fa() local_unnamed_addr {
dec_label_pc_9fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_9fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_9fa
}

define i32 @function_a25() local_unnamed_addr {
dec_label_pc_a25:
  %eax.global-to-local = alloca i32, align 4
  %v0_a29 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_a29
}

define i1 @_Z5errorPKcz(i8* %format, ...) local_unnamed_addr {
dec_label_pc_a2c:
  %stack_var_-20 = alloca i32, align 4
  %tmp108 = call i8* @__decompiler_undefined_function_1()
  %tmp114 = bitcast i32* %stack_var_-20 to i8*
  %v7_a60 = call i32 @_Z10vstrprintfPKcPc(i8* %tmp114, i8* %tmp108)
  ret i1 false

; uselistorder directives
  uselistorder i32 (i8*, i8*)* @_Z10vstrprintfPKcPc, { 1, 0 }
}

define i32 @function_a92() local_unnamed_addr {
dec_label_pc_a92:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_a92 = load i32, i32* %ecx.global-to-local, align 4
  %v1_a92 = add i32 %v0_a92, -195720232
  %v2_a92 = inttoptr i32 %v1_a92 to i32*
  %v3_a92 = load i32, i32* %v2_a92, align 4
  %v4_a92 = add i32 %v3_a92, -1
  store i32 %v4_a92, i32* %v2_a92, align 4
  %v0_a98 = load i32, i32* %edx.global-to-local, align 8
  %v2_a98 = xor i32 %v0_a98, 30
  %v3_a98 = icmp eq i32 %v2_a98, 0
  store i32 %v2_a98, i32* %edx.global-to-local, align 8
  br i1 %v3_a98, label %bb, label %dec_label_pc_aa1

bb:                                               ; preds = %dec_label_pc_a92
  %v1_a9f = call i32 @function_abf()
  store i32 %v1_a9f, i32* @eax, align 8
  br label %dec_label_pc_aa1

dec_label_pc_aa1:                                 ; preds = %bb, %dec_label_pc_a92
  %v0_aa1 = call i32 @function_aba()
  ret i32 %v0_aa1
}

define i32 @function_aa4() local_unnamed_addr {
dec_label_pc_aa4:
  %eax.global-to-local = alloca i32, align 4
  %v0_aa4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_aa4
}

define i32 @function_aba() local_unnamed_addr {
dec_label_pc_aba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_abf() local_unnamed_addr {
dec_label_pc_abf:
  %v0_ac3 = load i32, i32* @eax, align 8
  ret i32 %v0_ac3
}

define void @_Z11ParseStringRKSscRSt6vectorISsSaISsEE(i32 %str, i8 %c, i32 %v) local_unnamed_addr {
dec_label_pc_ac4:
  ret void
}

define i32 @function_b02() local_unnamed_addr {
dec_label_pc_b02:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_b66() local_unnamed_addr {
dec_label_pc_b66:
  %v0_b66 = call i32 @function_bbc()
  ret i32 %v0_b66
}

define i32 @function_b6f() local_unnamed_addr {
dec_label_pc_b6f:
  %eax.global-to-local = alloca i32, align 4
  %v0_b6f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_b6f
}

define i32 @function_bad() local_unnamed_addr {
dec_label_pc_bad:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_bad = add i32 %tmp91, -16
  %v2_bad = inttoptr i32 %v1_bad to i32*
  %v3_bad = load i32, i32* %v2_bad, align 4
  %v1_bb0 = add i32 %v3_bad, 1
  store i32 %v1_bb0, i32* @eax, align 8
  %v2_bb3 = add i32 %tmp91, -20
  %v3_bb3 = inttoptr i32 %v2_bb3 to i32*
  store i32 %v1_bb0, i32* %v3_bb3, align 4
  %v0_bb6 = call i32 @function_b02()
  ret i32 %v0_bb6

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_bbc() local_unnamed_addr {
dec_label_pc_bbc:
  %v0_bbc = load i32, i32* @ebp, align 4
  %v1_bbc = add i32 %v0_bbc, -12
  %v2_bbc = inttoptr i32 %v1_bbc to i32*
  %v3_bbc = load i32, i32* %v2_bbc, align 4
  %v2_bbf = xor i32 %v3_bbc, 30
  %v3_bbf = icmp eq i32 %v2_bbf, 0
  store i32 %v2_bbf, i32* @eax, align 8
  br i1 %v3_bbf, label %bb, label %dec_label_pc_bc8

bb:                                               ; preds = %dec_label_pc_bbc
  %v1_bc6 = call i32 @function_bfd()
  store i32 %v1_bc6, i32* @eax, align 8
  br label %dec_label_pc_bc8

dec_label_pc_bc8:                                 ; preds = %bb, %dec_label_pc_bbc
  %v0_bc8 = call i32 @function_bf8()
  ret i32 %v0_bc8
}

define i32 @function_bcb() local_unnamed_addr {
dec_label_pc_bcb:
  %eax.global-to-local = alloca i32, align 4
  %v0_bcb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_bcb
}

define i32 @function_be2() local_unnamed_addr {
dec_label_pc_be2:
  %eax.global-to-local = alloca i32, align 4
  %v0_be2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_be2
}

define i32 @function_bf8() local_unnamed_addr {
dec_label_pc_bf8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_bfd() local_unnamed_addr {
dec_label_pc_bfd:
  %v0_c01 = load i32, i32* @eax, align 8
  ret i32 %v0_c01
}

define i32 @_Z11FormatMoneyxb(i64 %n, i1 %fPlus) local_unnamed_addr {
dec_label_pc_c02:
  %tmp110 = call i32 @__decompiler_undefined_function_0()
  %v4_c2c = sext i1 %fPlus to i32
  %v2_c34 = ashr i32 %tmp110, 31
  %v6_c3b = xor i32 %v2_c34, %v4_c2c
  %v6_c49 = sub nsw i32 %v6_c3b, %v2_c34
  ret i32 %v6_c49

; uselistorder directives
  uselistorder i32 %v2_c34, { 1, 0 }
}

define i32 @function_ceb() local_unnamed_addr {
dec_label_pc_ceb:
  %eax.global-to-local = alloca i32, align 4
  %v0_ceb = load i32, i32* %eax.global-to-local, align 8
  %v1_ceb = add i32 %v0_ceb, -1
  store i32 %v1_ceb, i32* %eax.global-to-local, align 8
  %v1_cee = load i32, i32* @ebp, align 4
  %v2_cee = add i32 %v1_cee, -16
  %v3_cee = inttoptr i32 %v2_cee to i32*
  store i32 %v1_ceb, i32* %v3_cee, align 4
  %v0_cf1 = call i32 @function_cfb()
  store i32 %v0_cf1, i32* %eax.global-to-local, align 8
  ret i32 %v0_cf1
}

define i32 @function_cf3() local_unnamed_addr {
dec_label_pc_cf3:
  %v0_cf3 = load i32, i32* @ebp, align 4
  %v1_cf3 = add i32 %v0_cf3, -20
  %v2_cf3 = inttoptr i32 %v1_cf3 to i32*
  %v3_cf3 = load i32, i32* %v2_cf3, align 4
  %v4_cf3 = add i32 %v3_cf3, 1
  store i32 %v4_cf3, i32* %v2_cf3, align 4
  %v0_cf7 = load i32, i32* @ebp, align 4
  %v1_cf7 = add i32 %v0_cf7, -16
  %v2_cf7 = inttoptr i32 %v1_cf7 to i32*
  %v3_cf7 = load i32, i32* %v2_cf7, align 4
  %v4_cf7 = add i32 %v3_cf7, -1
  store i32 %v4_cf7, i32* %v2_cf7, align 4
  %v22_cf7 = load i32, i32* @eax, align 8
  ret i32 %v22_cf7
}

define i32 @function_cfb() local_unnamed_addr {
dec_label_pc_cfb:
  %v0_cfb = load i32, i32* @ebp, align 4
  %v1_d02 = add i32 %v0_cfb, -60
  %v2_d02 = inttoptr i32 %v1_d02 to i32*
  %v3_d02 = load i32, i32* %v2_d02, align 4
  ret i32 %v3_d02
}

define i32 @function_d28() local_unnamed_addr {
dec_label_pc_d28:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp95 = call i32 @__decompiler_undefined_function_0()
  %v3_d28 = add i32 %tmp95, -1
  %v18_d28 = inttoptr i32 %tmp95 to i32*
  store i32 %v3_d28, i32* %v18_d28, align 4
  %v0_d2a = load i32, i32* %edx.global-to-local, align 8
  %v1_d2a = and i32 %v0_d2a, -65281
  store i32 %v1_d2a, i32* %edx.global-to-local, align 8
  %v0_d2f = load i32, i32* %eax.global-to-local, align 8
  %v1_d2f = add i32 %v0_d2f, -48
  %tmp99 = icmp ult i32 %v1_d2f, 10
  %. = zext i1 %tmp99 to i32
  store i32 %., i32* @eax, align 8
  %v5_d43 = icmp eq i1 %tmp99, false
  %v1_d45 = icmp eq i1 %v5_d43, false
  br i1 %v1_d45, label %bb, label %dec_label_pc_d47

bb:                                               ; preds = %dec_label_pc_d28
  %v2_d45 = call i32 @function_cf3()
  store i32 %v2_d45, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_d47

dec_label_pc_d47:                                 ; preds = %bb, %dec_label_pc_d28
  %v0_d47 = load i32, i32* @ebp, align 4
  %v1_d47 = add i32 %v0_d47, -20
  %v2_d47 = inttoptr i32 %v1_d47 to i32*
  %v3_d47 = load i32, i32* %v2_d47, align 4
  %v10_d47 = icmp eq i32 %v3_d47, 0
  br i1 %v10_d47, label %bb100, label %dec_label_pc_d4d

bb100:                                            ; preds = %dec_label_pc_d47
  %v1_d4b = call i32 @function_d79()
  store i32 %v1_d4b, i32* %eax.global-to-local, align 8
  %v0_d4d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_d4d

dec_label_pc_d4d:                                 ; preds = %bb100, %dec_label_pc_d47
  %v0_d4d = phi i32 [ %v0_d4d.pre, %bb100 ], [ %v0_d47, %dec_label_pc_d47 ]
  %v1_d50 = add i32 %v0_d4d, -60
  %v2_d50 = inttoptr i32 %v1_d50 to i32*
  %v3_d50 = load i32, i32* %v2_d50, align 4
  store i32 %v3_d50, i32* %eax.global-to-local, align 8
  ret i32 %v3_d50

; uselistorder directives
  uselistorder i32 %tmp95, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
}

define i32 @function_d5c() local_unnamed_addr {
dec_label_pc_d5c:
  %eax.global-to-local = alloca i32, align 4
  %v0_d5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_d5c
}

define i32 @function_d79() local_unnamed_addr {
dec_label_pc_d79:
  %v0_d79 = load i32, i32* @ebp, align 4
  %v1_d79 = add i32 %v0_d79, -68
  %v2_d79 = inttoptr i32 %v1_d79 to i32*
  %v3_d79 = load i32, i32* %v2_d79, align 4
  %v11_d79 = icmp slt i32 %v3_d79, 0
  %v1_d7d = icmp eq i1 %v11_d79, false
  br i1 %v1_d7d, label %bb, label %dec_label_pc_d7f

bb:                                               ; preds = %dec_label_pc_d79
  %v2_d7d = call i32 @function_da4()
  %v0_d97.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_d7f

dec_label_pc_d7f:                                 ; preds = %bb, %dec_label_pc_d79
  %v0_d97 = phi i32 [ %v0_d97.pre, %bb ], [ %v0_d79, %dec_label_pc_d79 ]
  %v1_d97 = add i32 %v0_d97, -60
  %v2_d97 = inttoptr i32 %v1_d97 to i32*
  %v3_d97 = load i32, i32* %v2_d97, align 4
  ret i32 %v3_d97
}

define i32 @function_da2() local_unnamed_addr {
dec_label_pc_da2:
  %v0_da2 = call i32 @function_df8()
  ret i32 %v0_da2
}

define i32 @function_da4() local_unnamed_addr {
dec_label_pc_da4:
  %v0_da4 = load i32, i32* @ebp, align 4
  %v1_da4 = add i32 %v0_da4, -64
  %v2_da4 = inttoptr i32 %v1_da4 to i8*
  %v3_da4 = load i8, i8* %v2_da4, align 1
  %v10_da4 = icmp eq i8 %v3_da4, 0
  br i1 %v10_da4, label %bb, label %dec_label_pc_daa

bb:                                               ; preds = %dec_label_pc_da4
  %v1_da8 = call i32 @function_df8()
  %v0_daa.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_daa

dec_label_pc_daa:                                 ; preds = %bb, %dec_label_pc_da4
  %v0_daa = phi i32 [ %v0_daa.pre, %bb ], [ %v0_da4, %dec_label_pc_da4 ]
  %v1_daa = add i32 %v0_daa, -68
  %v2_daa = inttoptr i32 %v1_daa to i32*
  %v3_daa = load i32, i32* %v2_daa, align 4
  %v11_daa = icmp slt i32 %v3_daa, 0
  br i1 %v11_daa, label %bb7, label %dec_label_pc_db0

bb7:                                              ; preds = %dec_label_pc_daa
  %v1_dae = call i32 @function_df8()
  %v0_db0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_db0

dec_label_pc_db0:                                 ; preds = %bb7, %dec_label_pc_daa
  %v0_db6 = phi i32 [ %v0_db0.pre, %bb7 ], [ %v0_daa, %dec_label_pc_daa ]
  %v1_db0 = add i32 %v0_db6, -68
  %v2_db0 = inttoptr i32 %v1_db0 to i32*
  %v3_db0 = load i32, i32* %v2_db0, align 4
  %v10_db0 = icmp eq i32 %v3_db0, 0
  %v11_db0 = icmp slt i32 %v3_db0, 0
  %v3_db4 = icmp eq i1 %v11_db0, false
  %v4_db4 = icmp eq i1 %v10_db0, false
  %v5_db4 = icmp eq i1 %v3_db4, %v4_db4
  br i1 %v5_db4, label %dec_label_pc_dbc, label %dec_label_pc_db6

dec_label_pc_db6:                                 ; preds = %dec_label_pc_db0
  %v1_db6 = add i32 %v0_db6, -72
  %v2_db6 = inttoptr i32 %v1_db6 to i32*
  %v3_db6 = load i32, i32* %v2_db6, align 4
  %v10_db6 = icmp eq i32 %v3_db6, 0
  br i1 %v10_db6, label %bb8, label %dec_label_pc_dbc

bb8:                                              ; preds = %dec_label_pc_db6
  %v3_dba = call i32 @function_df8()
  %v0_dd4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_dbc

dec_label_pc_dbc:                                 ; preds = %bb8, %dec_label_pc_db6, %dec_label_pc_db0
  %v0_dd4 = phi i32 [ %v0_dd4.pre, %bb8 ], [ %v0_db6, %dec_label_pc_db6 ], [ %v0_db6, %dec_label_pc_db0 ]
  %v1_dd4 = add i32 %v0_dd4, -60
  %v2_dd4 = inttoptr i32 %v1_dd4 to i32*
  %v3_dd4 = load i32, i32* %v2_dd4, align 4
  ret i32 %v3_dd4

; uselistorder directives
  uselistorder i32 %v3_db0, { 1, 0 }
}

define i32 @function_ddf() local_unnamed_addr {
dec_label_pc_ddf:
  %v0_ddf = call i32 @function_df8()
  ret i32 %v0_ddf

; uselistorder directives
  uselistorder i32 ()* @function_df8, { 4, 2, 1, 0, 3 }
}

define i32 @function_de2() local_unnamed_addr {
dec_label_pc_de2:
  %eax.global-to-local = alloca i32, align 4
  %v0_de2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_de2
}

define i32 @function_df8() local_unnamed_addr {
dec_label_pc_df8:
  %v0_df9 = load i32, i32* @ebp, align 4
  %v1_df9 = add i32 %v0_df9, -60
  %v2_df9 = inttoptr i32 %v1_df9 to i32*
  %v3_df9 = load i32, i32* %v2_df9, align 4
  store i32 %v3_df9, i32* @eax, align 8
  %v1_dfc = add i32 %v0_df9, -12
  %v2_dfc = inttoptr i32 %v1_dfc to i32*
  %v3_dfc = load i32, i32* %v2_dfc, align 4
  %v3_dff = icmp eq i32 %v3_dfc, 30
  br i1 %v3_dff, label %bb, label %dec_label_pc_e08

bb:                                               ; preds = %dec_label_pc_df8
  %v1_e06 = call i32 @function_e0d()
  br label %dec_label_pc_e08

dec_label_pc_e08:                                 ; preds = %bb, %dec_label_pc_df8
  %v2_e06 = phi i32 [ %v1_e06, %bb ], [ %v3_df9, %dec_label_pc_df8 ]
  ret i32 %v2_e06
}

define i32 @function_e0d() local_unnamed_addr {
dec_label_pc_e0d:
  %v0_e11 = load i32, i32* @eax, align 8
  ret i32 %v0_e11
}

define i1 @_Z10ParseMoneyRKSsRx(i32 %str, i64 %nRet) local_unnamed_addr {
dec_label_pc_e14:
  %tmp110 = urem i32 %str, 2
  %tmp111 = icmp ne i32 %tmp110, 0
  ret i1 %tmp111
}

define i32 @function_e5b() local_unnamed_addr {
dec_label_pc_e5b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e5b = load i32, i32* %ecx.global-to-local, align 4
  %v1_e5b = add i32 %v0_e5b, -1
  store i32 %v1_e5b, i32* %ecx.global-to-local, align 4
  %v0_e5d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e5d
}

define i1 @_Z10ParseMoneyPKcRx(i8* %pszIn, i64 %nRet) local_unnamed_addr {
dec_label_pc_e5e:
  ret i1 false
}

define i32 @function_e86() local_unnamed_addr {
dec_label_pc_e86:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_e88 = add i32 %tmp91, 1
  store i32 %v1_e88, i32* @ebp, align 4
  %v2_e8c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_e8c = load i32, i32* %eax.global-to-local, align 8
  %v4_e8c = trunc i32 %v3_e8c to i8
  %v5_e8c = add i8 %v4_e8c, %v2_e8c
  %v21_e8c = inttoptr i32 %v3_e8c to i8*
  store i8 %v5_e8c, i8* %v21_e8c, align 1
  %v0_e8e = load i32, i32* @ebp, align 4
  %v1_e8e = add i32 %v0_e8e, -60
  %v2_e8e = inttoptr i32 %v1_e8e to i32*
  store i32 0, i32* %v2_e8e, align 4
  %v0_e95 = load i32, i32* @ebp, align 4
  %v1_e95 = add i32 %v0_e95, -76
  %v2_e95 = inttoptr i32 %v1_e95 to i32*
  %v3_e95 = load i32, i32* %v2_e95, align 4
  store i32 %v3_e95, i32* %eax.global-to-local, align 8
  %v2_e98 = add i32 %v0_e95, -16
  %v3_e98 = inttoptr i32 %v2_e98 to i32*
  store i32 %v3_e95, i32* %v3_e98, align 4
  %v0_e9b = call i32 @function_ea1()
  store i32 %v0_e9b, i32* %eax.global-to-local, align 8
  ret i32 %v0_e9b
}

define i32 @function_e9d() local_unnamed_addr {
dec_label_pc_e9d:
  %v0_e9d = load i32, i32* @ebp, align 4
  %v1_e9d = add i32 %v0_e9d, -16
  %v2_e9d = inttoptr i32 %v1_e9d to i32*
  %v3_e9d = load i32, i32* %v2_e9d, align 4
  %v4_e9d = add i32 %v3_e9d, 1
  store i32 %v4_e9d, i32* %v2_e9d, align 4
  %v22_e9d = load i32, i32* @eax, align 8
  ret i32 %v22_e9d
}

define i32 @function_ea1() local_unnamed_addr {
dec_label_pc_ea1:
  %v0_ea1 = load i32, i32* @ebp, align 4
  %v1_ea1 = add i32 %v0_ea1, -16
  %v2_ea1 = inttoptr i32 %v1_ea1 to i32*
  %v3_ea1 = load i32, i32* %v2_ea1, align 4
  %v1_ea4 = inttoptr i32 %v3_ea1 to i8*
  %v2_ea4 = load i8, i8* %v1_ea4, align 1
  %v3_ea4 = zext i8 %v2_ea4 to i32
  ret i32 %v3_ea4
}

define i32 @function_eb1() local_unnamed_addr {
dec_label_pc_eb1:
  %v0_eb1 = load i32, i32* @ebp, align 4
  %v1_eb1 = add i32 %v0_eb1, -1063972928
  %v2_eb1 = inttoptr i32 %v1_eb1 to i32*
  %v3_eb1 = load i32, i32* %v2_eb1, align 4
  %v4_eb1 = add i32 %v3_eb1, 1
  store i32 %v4_eb1, i32* %v2_eb1, align 4
  %v0_eb7 = load i32, i32* @eax, align 8
  %v4_eb7 = trunc i32 %v0_eb7 to i8
  %v5_eb7 = icmp eq i8 %v4_eb7, 0
  %v1_eb9 = icmp eq i1 %v5_eb7, false
  br i1 %v1_eb9, label %bb, label %dec_label_pc_ebb

bb:                                               ; preds = %dec_label_pc_eb1
  %v2_eb9 = call i32 @function_e9d()
  br label %dec_label_pc_ebb

dec_label_pc_ebb:                                 ; preds = %bb, %dec_label_pc_eb1
  %v0_ebb = call i32 @function_fea()
  ret i32 %v0_ebb
}

define i32 @function_ec0() local_unnamed_addr {
dec_label_pc_ec0:
  %v0_ec0 = load i32, i32* @ebp, align 4
  %v1_ec0 = add i32 %v0_ec0, -16
  %v2_ec0 = inttoptr i32 %v1_ec0 to i32*
  %v3_ec0 = load i32, i32* %v2_ec0, align 4
  %v1_ec3 = inttoptr i32 %v3_ec0 to i8*
  %v2_ec3 = load i8, i8* %v1_ec3, align 1
  %v11_ec6 = icmp eq i8 %v2_ec3, 46
  %v1_ec8 = icmp eq i1 %v11_ec6, false
  br i1 %v1_ec8, label %bb, label %dec_label_pc_ece

bb:                                               ; preds = %dec_label_pc_ec0
  %v2_ec8 = call i32 @function_f78()
  %v0_ece.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_ece

dec_label_pc_ece:                                 ; preds = %bb, %dec_label_pc_ec0
  %v19_ece = phi i32 [ %v0_ece.pre, %bb ], [ %v0_ec0, %dec_label_pc_ec0 ]
  %v1_ece = add i32 %v19_ece, -16
  %v2_ece = inttoptr i32 %v1_ece to i32*
  %v3_ece = load i32, i32* %v2_ece, align 4
  %v4_ece = add i32 %v3_ece, 1
  store i32 %v4_ece, i32* %v2_ece, align 4
  %v0_ed2 = load i32, i32* @ebp, align 4
  %v1_ed2 = add i32 %v0_ed2, -56
  %v2_ed2 = inttoptr i32 %v1_ed2 to i32*
  store i32 10000000, i32* %v2_ed2, align 4
  %v0_ed9 = load i32, i32* @ebp, align 4
  %v1_ed9 = add i32 %v0_ed9, -52
  %v2_ed9 = inttoptr i32 %v1_ed9 to i32*
  store i32 0, i32* %v2_ed9, align 4
  %v0_ee0 = call i32 @function_f3c()
  ret i32 %v0_ee0
}

define i32 @function_ee2() local_unnamed_addr {
dec_label_pc_ee2:
  %edx.global-to-local = alloca i32, align 4
  %v0_ee2 = load i32, i32* @ebp, align 4
  %v1_ee2 = add i32 %v0_ee2, -16
  %v2_ee2 = inttoptr i32 %v1_ee2 to i32*
  %v3_ee2 = load i32, i32* %v2_ee2, align 4
  %v1_ee5 = inttoptr i32 %v3_ee2 to i8*
  %v2_ee5 = load i8, i8* %v1_ee5, align 1
  %v3_ee5 = zext i8 %v2_ee5 to i32
  %v1_eeb = add nsw i32 %v3_ee5, -48
  %v2_ef0 = ashr i32 %v1_eeb, 31
  store i32 %v2_ef0, i32* %edx.global-to-local, align 8
  %v1_ef3 = add i32 %v0_ee2, -56
  %v2_ef3 = inttoptr i32 %v1_ef3 to i32*
  %v3_ef3 = load i32, i32* %v2_ef3, align 4
  %v4_ef8 = mul i32 %v2_ef0, %v3_ef3
  %v1_efb = add i32 %v0_ee2, -52
  %v2_efb = inttoptr i32 %v1_efb to i32*
  %v3_efb = load i32, i32* %v2_efb, align 4
  %v4_efe = mul i32 %v3_efb, %v1_eeb
  %v2_f01 = add i32 %v4_efe, %v4_ef8
  %v3_f03 = load i32, i32* %v2_ef3, align 4
  %v5_f03 = zext i32 %v3_f03 to i64
  %v6_f03 = zext i32 %v1_eeb to i64
  %v7_f03 = mul nuw i64 %v5_f03, %v6_f03
  %v8_f03 = trunc i64 %v7_f03 to i32
  %v9_f03 = udiv i64 %v7_f03, 4294967296
  %v10_f03 = trunc i64 %v9_f03 to i32
  %v2_f06 = add i32 %v10_f03, %v2_f01
  store i32 %v2_f06, i32* %edx.global-to-local, align 8
  %v1_f0a = add i32 %v0_ee2, -64
  %v2_f0a = inttoptr i32 %v1_f0a to i32*
  %v3_f0a = load i32, i32* %v2_f0a, align 4
  %v5_f0a = add i32 %v3_f0a, %v8_f03
  %v10_f0a = icmp ult i32 %v5_f0a, %v3_f0a
  store i32 %v5_f0a, i32* %v2_f0a, align 4
  %v0_f0d = load i32, i32* @ebp, align 4
  %v1_f0d = add i32 %v0_f0d, -60
  %v2_f0d = inttoptr i32 %v1_f0d to i32*
  %v3_f0d = load i32, i32* %v2_f0d, align 4
  %v4_f0d = load i32, i32* %edx.global-to-local, align 8
  %v6_f0d = zext i1 %v10_f0a to i32
  %v7_f0d = add i32 %v6_f0d, %v3_f0d
  %v8_f0d = add i32 %v7_f0d, %v4_f0d
  store i32 %v8_f0d, i32* %v2_f0d, align 4
  %v0_f10 = load i32, i32* @ebp, align 4
  %v1_f10 = add i32 %v0_f10, -16
  %v2_f10 = inttoptr i32 %v1_f10 to i32*
  %v3_f10 = load i32, i32* %v2_f10, align 4
  %v4_f10 = add i32 %v3_f10, 1
  store i32 %v4_f10, i32* %v2_f10, align 4
  %v0_f14 = load i32, i32* @ebp, align 4
  %v1_f14 = add i32 %v0_f14, -56
  %v2_f14 = inttoptr i32 %v1_f14 to i32*
  %v3_f14 = load i32, i32* %v2_f14, align 4
  %v1_f17 = add i32 %v0_f14, -52
  %v2_f17 = inttoptr i32 %v1_f17 to i32*
  %v3_f17 = load i32, i32* %v2_f17, align 4
  store i32 %v3_f17, i32* %edx.global-to-local, align 8
  ret i32 %v3_f14

; uselistorder directives
  uselistorder i32 %v3_f0a, { 1, 0 }
  uselistorder i32 %v1_eeb, { 1, 0, 2 }
}

define i32 @function_f3c() local_unnamed_addr {
dec_label_pc_f3c:
  %v0_f3c = load i32, i32* @ebp, align 4
  %v1_f3c = add i32 %v0_f3c, -16
  %v2_f3c = inttoptr i32 %v1_f3c to i32*
  %v3_f3c = load i32, i32* %v2_f3c, align 4
  %v1_f3f = inttoptr i32 %v3_f3c to i8*
  %v2_f3f = load i8, i8* %v1_f3f, align 1
  %v3_f3f = zext i8 %v2_f3f to i32
  %v1_f45 = add nsw i32 %v3_f3f, -48
  %v5_f48 = icmp ult i32 %v1_f45, 9
  %v10_f48 = icmp eq i8 %v2_f3f, 57
  %v2_f4b = or i1 %v10_f48, %v5_f48
  br i1 %v2_f4b, label %dec_label_pc_f4d, label %dec_label_pc_f66

dec_label_pc_f4d:                                 ; preds = %dec_label_pc_f3c
  %v1_f4d = add i32 %v0_f3c, -52
  %v2_f4d = inttoptr i32 %v1_f4d to i32*
  %v3_f4d = load i32, i32* %v2_f4d, align 4
  %v11_f4d = icmp slt i32 %v3_f4d, 0
  br i1 %v11_f4d, label %dec_label_pc_f66, label %dec_label_pc_f53

dec_label_pc_f53:                                 ; preds = %dec_label_pc_f4d
  %v10_f4d = icmp eq i32 %v3_f4d, 0
  %v4_f57 = icmp eq i1 %v10_f4d, false
  br i1 %v4_f57, label %dec_label_pc_f6b, label %dec_label_pc_f59

dec_label_pc_f59:                                 ; preds = %dec_label_pc_f53
  %v1_f59 = add i32 %v0_f3c, -56
  %v2_f59 = inttoptr i32 %v1_f59 to i32*
  %v3_f59 = load i32, i32* %v2_f59, align 4
  %v10_f59 = icmp eq i32 %v3_f59, 0
  br i1 %v10_f59, label %dec_label_pc_f66, label %dec_label_pc_f6b

dec_label_pc_f66:                                 ; preds = %dec_label_pc_f3c, %dec_label_pc_f59, %dec_label_pc_f4d
  br label %dec_label_pc_f6b

dec_label_pc_f6b:                                 ; preds = %dec_label_pc_f53, %dec_label_pc_f59, %dec_label_pc_f66
  %storemerge = phi i1 [ false, %dec_label_pc_f66 ], [ true, %dec_label_pc_f59 ], [ true, %dec_label_pc_f53 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_f73

bb:                                               ; preds = %dec_label_pc_f6b
  %v2_f6d = call i32 @function_ee2()
  br label %dec_label_pc_f73

dec_label_pc_f73:                                 ; preds = %bb, %dec_label_pc_f6b
  %v0_f73 = call i32 @function_1000()
  ret i32 %v0_f73

; uselistorder directives
  uselistorder label %dec_label_pc_f6b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f66, { 1, 2, 0 }
}

define i32 @function_f78() local_unnamed_addr {
dec_label_pc_f78:
  %v0_f78 = load i32, i32* @ebp, align 4
  %v1_f78 = add i32 %v0_f78, -16
  %v2_f78 = inttoptr i32 %v1_f78 to i32*
  %v3_f78 = load i32, i32* %v2_f78, align 4
  %v1_f7b = inttoptr i32 %v3_f78 to i8*
  %v2_f7b = load i8, i8* %v1_f7b, align 1
  %v3_f7b = zext i8 %v2_f7b to i32
  ret i32 %v3_f7b
}

define i32 @function_f89() local_unnamed_addr {
dec_label_pc_f89:
  %v0_f89 = load i32, i32* @eax, align 8
  %v1_f89 = icmp eq i32 %v0_f89, 0
  %v1_f8b = icmp eq i1 %v1_f89, false
  br i1 %v1_f8b, label %bb, label %dec_label_pc_f8d

bb:                                               ; preds = %dec_label_pc_f89
  %v2_f8b = call i32 @function_fff()
  br label %dec_label_pc_f8d

dec_label_pc_f8d:                                 ; preds = %bb, %dec_label_pc_f89
  %v0_f8d = load i32, i32* @ebp, align 4
  %v1_f8d = add i32 %v0_f8d, -16
  %v2_f8d = inttoptr i32 %v1_f8d to i32*
  %v3_f8d = load i32, i32* %v2_f8d, align 4
  %v1_f90 = inttoptr i32 %v3_f8d to i8*
  %v2_f90 = load i8, i8* %v1_f90, align 1
  %v3_f90 = zext i8 %v2_f90 to i32
  %v1_f96 = add nsw i32 %v3_f90, -48
  %v5_f99 = icmp ult i32 %v1_f96, 9
  %v10_f99 = icmp eq i8 %v2_f90, 57
  %v2_f9c = or i1 %v10_f99, %v5_f99
  br i1 %v2_f9c, label %dec_label_pc_fa8, label %dec_label_pc_f9e

dec_label_pc_f9e:                                 ; preds = %dec_label_pc_f8d
  %v0_fa3 = call i32 @function_10c0()
  ret i32 %v0_fa3

dec_label_pc_fa8:                                 ; preds = %dec_label_pc_f8d
  %v1_fb1 = add i32 %v0_f8d, -24
  ret i32 %v1_fb1
}

define i32 @function_fea() local_unnamed_addr {
dec_label_pc_fea:
  %v0_fea = load i32, i32* @ebp, align 4
  %v1_fea = add i32 %v0_fea, -16
  %v2_fea = inttoptr i32 %v1_fea to i32*
  %v3_fea = load i32, i32* %v2_fea, align 4
  %v1_fed = inttoptr i32 %v3_fea to i8*
  %v2_fed = load i8, i8* %v1_fed, align 1
  %v5_ff0 = icmp eq i8 %v2_fed, 0
  %v1_ff2 = icmp eq i1 %v5_ff0, false
  %v5_ff5 = icmp eq i1 %v1_ff2, false
  %v1_ff7 = icmp eq i1 %v5_ff5, false
  br i1 %v1_ff7, label %bb, label %dec_label_pc_ffd

bb:                                               ; preds = %dec_label_pc_fea
  %v2_ff7 = call i32 @function_ec0()
  br label %dec_label_pc_ffd

dec_label_pc_ffd:                                 ; preds = %bb, %dec_label_pc_fea
  %v0_ffd = call i32 @function_1025()
  ret i32 %v0_ffd
}

define i32 @function_fff() local_unnamed_addr {
dec_label_pc_fff:
  %v0_fff = load i32, i32* @eax, align 8
  ret i32 %v0_fff
}

define i32 @function_1000() local_unnamed_addr {
dec_label_pc_1000:
  %v0_1000 = call i32 @function_1025()
  ret i32 %v0_1000

; uselistorder directives
  uselistorder i32 ()* @function_1025, { 1, 0 }
}

define i32 @function_1002() local_unnamed_addr {
dec_label_pc_1002:
  %v0_1002 = load i32, i32* @ebp, align 4
  %v1_1002 = add i32 %v0_1002, -16
  %v2_1002 = inttoptr i32 %v1_1002 to i32*
  %v3_1002 = load i32, i32* %v2_1002, align 4
  %v1_1005 = inttoptr i32 %v3_1002 to i8*
  %v2_1005 = load i8, i8* %v1_1005, align 1
  %v3_1005 = zext i8 %v2_1005 to i32
  ret i32 %v3_1005
}

define i32 @function_1012() local_unnamed_addr {
dec_label_pc_1012:
  %eax.global-to-local = alloca i32, align 4
  %v0_1012 = load i32, i32* @ebp, align 4
  %v1_1012 = add i32 %v0_1012, -1156942400
  %v2_1012 = inttoptr i32 %v1_1012 to i32*
  %v3_1012 = load i32, i32* %v2_1012, align 4
  %v4_1012 = add i32 %v3_1012, 1
  store i32 %v4_1012, i32* %v2_1012, align 4
  %v2_1018 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1018 = load i32, i32* %eax.global-to-local, align 8
  %v4_1018 = trunc i32 %v3_1018 to i8
  %v5_1018 = add i8 %v4_1018, %v2_1018
  %v21_1018 = inttoptr i32 %v3_1018 to i8*
  store i8 %v5_1018, i8* %v21_1018, align 1
  %v2_101a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_101a = load i32, i32* %eax.global-to-local, align 8
  %v4_101a = trunc i32 %v3_101a to i8
  %v5_101a = add i8 %v4_101a, %v2_101a
  %v21_101a = inttoptr i32 %v3_101a to i8*
  store i8 %v5_101a, i8* %v21_101a, align 1
  %v0_101c = call i32 @function_10c0()
  store i32 %v0_101c, i32* %eax.global-to-local, align 8
  ret i32 %v0_101c
}

define i32 @function_1025() local_unnamed_addr {
dec_label_pc_1025:
  %v0_1025 = load i32, i32* @ebp, align 4
  %v1_1025 = add i32 %v0_1025, -16
  %v2_1025 = inttoptr i32 %v1_1025 to i32*
  %v3_1025 = load i32, i32* %v2_1025, align 4
  %v1_1028 = inttoptr i32 %v3_1025 to i8*
  %v2_1028 = load i8, i8* %v1_1028, align 1
  %v5_102b = icmp eq i8 %v2_1028, 0
  %v1_102d = icmp eq i1 %v5_102b, false
  %v5_1030 = icmp eq i1 %v1_102d, false
  %v1_1032 = icmp eq i1 %v5_1030, false
  br i1 %v1_1032, label %bb, label %dec_label_pc_1034

bb:                                               ; preds = %dec_label_pc_1025
  %v2_1032 = call i32 @function_1002()
  %v0_1034.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1034

dec_label_pc_1034:                                ; preds = %bb, %dec_label_pc_1025
  %v0_1034 = phi i32 [ %v0_1034.pre, %bb ], [ %v0_1025, %dec_label_pc_1025 ]
  %v1_1034 = add i32 %v0_1034, -28
  ret i32 %v1_1034
}

define i32 @function_103e() local_unnamed_addr {
dec_label_pc_103e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_103e = load i32, i32* %ebx.global-to-local, align 4
  %v1_103e = add i32 %v0_103e, -1760621832
  %v2_103e = inttoptr i32 %v1_103e to i32*
  %v3_103e = load i32, i32* %v2_103e, align 4
  %v4_103e = add i32 %v3_103e, 1
  store i32 %v4_103e, i32* %v2_103e, align 4
  %v2_104c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_104c = load i32, i32* %eax.global-to-local, align 8
  %v4_104c = trunc i32 %v3_104c to i8
  %v5_104c = add i8 %v4_104c, %v2_104c
  %v21_104c = inttoptr i32 %v3_104c to i8*
  store i8 %v5_104c, i8* %v21_104c, align 1
  %v0_104e = call i32 @function_10c0()
  store i32 %v0_104e, i32* %eax.global-to-local, align 8
  ret i32 %v0_104e
}

define i32 @function_1050() local_unnamed_addr {
dec_label_pc_1050:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1050 = load i32, i32* @ebp, align 4
  %v1_1050 = add i32 %v0_1050, -60
  %v2_1050 = inttoptr i32 %v1_1050 to i32*
  %v3_1050 = load i32, i32* %v2_1050, align 4
  %v11_1050 = icmp slt i32 %v3_1050, 0
  br i1 %v11_1050, label %dec_label_pc_106b, label %dec_label_pc_105c

dec_label_pc_105c:                                ; preds = %dec_label_pc_1050
  %v10_1050 = icmp eq i32 %v3_1050, 0
  %v4_1060 = icmp eq i1 %v10_1050, false
  br i1 %v4_1060, label %dec_label_pc_106b, label %dec_label_pc_1062

dec_label_pc_1062:                                ; preds = %dec_label_pc_105c
  %v1_1062 = add i32 %v0_1050, -64
  %v2_1062 = inttoptr i32 %v1_1062 to i32*
  %v3_1062 = load i32, i32* %v2_1062, align 4
  %tmp98 = icmp ult i32 %v3_1062, 100000001
  br i1 %tmp98, label %dec_label_pc_1072, label %dec_label_pc_106b

dec_label_pc_106b:                                ; preds = %dec_label_pc_1062, %dec_label_pc_105c, %dec_label_pc_1050
  %v0_1070 = call i32 @function_10c0()
  store i32 %v0_1070, i32* %eax.global-to-local, align 8
  ret i32 %v0_1070

dec_label_pc_1072:                                ; preds = %dec_label_pc_1062
  %v1_1072 = add i32 %v0_1050, -28
  store i32 %v1_1072, i32* %eax.global-to-local, align 8
  %v1_1078 = call i32 @_Z6atoi64RKSs(i32 %v1_1072)
  store i32 %v1_1078, i32* %eax.global-to-local, align 8
  %v1_107d = load i32, i32* @ebp, align 4
  %v2_107d = add i32 %v1_107d, -48
  %v3_107d = inttoptr i32 %v2_107d to i32*
  store i32 %v1_1078, i32* %v3_107d, align 4
  %v0_1080 = load i32, i32* %edx.global-to-local, align 8
  %v1_1080 = load i32, i32* @ebp, align 4
  %v2_1080 = add i32 %v1_1080, -44
  %v3_1080 = inttoptr i32 %v2_1080 to i32*
  store i32 %v0_1080, i32* %v3_1080, align 4
  %v0_1083 = load i32, i32* @ebp, align 4
  %v1_1083 = add i32 %v0_1083, -44
  %v2_1083 = inttoptr i32 %v1_1083 to i32*
  %v3_1083 = load i32, i32* %v2_1083, align 4
  %v3_1086 = mul i32 %v3_1083, 100000000
  store i32 %v3_1086, i32* %edx.global-to-local, align 8
  store i32 %v3_1086, i32* %ecx.global-to-local, align 4
  store i32 100000000, i32* %eax.global-to-local, align 8
  %v1_109a = add i32 %v0_1083, -48
  %v2_109a = inttoptr i32 %v1_109a to i32*
  %v3_109a = load i32, i32* %v2_109a, align 4
  %v10_109a = udiv i32 %v3_109a, 43
  %v2_109d = add i32 %v10_109a, %v3_1086
  store i32 %v2_109d, i32* %ecx.global-to-local, align 4
  store i32 %v2_109d, i32* %edx.global-to-local, align 8
  %v2_10a4 = add i32 %v0_1083, -60
  %v3_10a4 = inttoptr i32 %v2_10a4 to i32*
  %v4_10a4 = load i32, i32* %v3_10a4, align 4
  %v8_10a4 = add i32 %v4_10a4, %v2_109d
  store i32 %v8_10a4, i32* %edx.global-to-local, align 8
  %v1_10aa = load i32, i32* @ebp, align 4
  %v2_10aa = add i32 %v1_10aa, -36
  %v3_10aa = inttoptr i32 %v2_10aa to i32*
  store i32 %v8_10a4, i32* %v3_10aa, align 4
  %v0_10ad = load i32, i32* @ebp, align 4
  %v1_10ad = add i32 %v0_10ad, -80
  %v2_10ad = inttoptr i32 %v1_10ad to i32*
  %v3_10ad = load i32, i32* %v2_10ad, align 4
  store i32 %v3_10ad, i32* %ecx.global-to-local, align 4
  %v1_10b0 = add i32 %v0_10ad, -40
  %v2_10b0 = inttoptr i32 %v1_10b0 to i32*
  %v3_10b0 = load i32, i32* %v2_10b0, align 4
  store i32 %v3_10b0, i32* %eax.global-to-local, align 8
  %v1_10b3 = add i32 %v0_10ad, -36
  %v2_10b3 = inttoptr i32 %v1_10b3 to i32*
  %v3_10b3 = load i32, i32* %v2_10b3, align 4
  store i32 %v3_10b3, i32* %edx.global-to-local, align 8
  %v2_10b6 = inttoptr i32 %v3_10ad to i32*
  store i32 %v3_10b0, i32* %v2_10b6, align 4
  %v0_10b8 = load i32, i32* %edx.global-to-local, align 8
  %v1_10b8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_10b8 = add i32 %v1_10b8, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_10b8 = inttoptr i32 %v2_10b8 to i32*
  store i32 %v0_10b8, i32* %v3_10b8, align 4
  %v0_10bb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10bb

; uselistorder directives
  uselistorder i32 %v3_1086, { 0, 2, 1 }
  uselistorder i32 100000000, { 1, 0 }
  uselistorder i32 ()* @function_10c0, { 3, 2, 1, 0 }
}

define i32 @function_10c0() local_unnamed_addr {
dec_label_pc_10c0:
  %v0_10c0 = load i32, i32* @ebp, align 4
  %v1_10c0 = add i32 %v0_10c0, -28
  ret i32 %v1_10c0
}

define i32 @function_10ca() local_unnamed_addr {
dec_label_pc_10ca:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_10ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_10ca = add i32 %v0_10ca, -195720232
  %v2_10ca = inttoptr i32 %v1_10ca to i32*
  %v3_10ca = load i32, i32* %v2_10ca, align 4
  %v4_10ca = add i32 %v3_10ca, -1
  store i32 %v4_10ca, i32* %v2_10ca, align 4
  %v0_10d0 = load i32, i32* %edx.global-to-local, align 8
  %v2_10d0 = xor i32 %v0_10d0, 30
  %v3_10d0 = icmp eq i32 %v2_10d0, 0
  store i32 %v2_10d0, i32* %edx.global-to-local, align 8
  br i1 %v3_10d0, label %bb, label %dec_label_pc_10d9

bb:                                               ; preds = %dec_label_pc_10ca
  %v1_10d7 = call i32 @function_10f7()
  store i32 %v1_10d7, i32* @eax, align 8
  br label %dec_label_pc_10d9

dec_label_pc_10d9:                                ; preds = %bb, %dec_label_pc_10ca
  %v0_10d9 = call i32 @function_10f2()
  ret i32 %v0_10d9
}

define i32 @function_10dc() local_unnamed_addr {
dec_label_pc_10dc:
  %eax.global-to-local = alloca i32, align 4
  %v0_10dc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10dc
}

define i32 @function_10f2() local_unnamed_addr {
dec_label_pc_10f2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10f7() local_unnamed_addr {
dec_label_pc_10f7:
  %v0_10fb = load i32, i32* @eax, align 8
  ret i32 %v0_10fb
}

define i1 @_Z5IsHexRKSs(i32 %str) local_unnamed_addr {
dec_label_pc_10fc:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %_foreach_cur478_-36 = alloca i32, align 4
  %_foreach_col478_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp129 = urem i32 %str, 2
  %tmp130 = icmp ne i32 %tmp129, 0
  %v2_1113 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1113, i32* %eax.global-to-local, align 8
  %v4_111e = sext i1 %tmp130 to i32
  %v4_1128 = call i32 @_ZN5boost15foreach_detail_7containIKSsEENS0_8auto_anyIPT_EERS4_PN4mpl_5bool_ILb0EEE(i32 %v2_1113, i32 %v4_111e, i32 0)
  store i32 %v2_1113, i32* %eax.global-to-local, align 8
  %v1_113c = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_1113)
  store i32 %v1_113c, i32* %eax.global-to-local, align 8
  %v4_1141 = trunc i32 %v1_113c to i8
  %v5_1141 = icmp eq i8 %v4_1141, 0
  %v1_1143 = icmp eq i1 %v5_1141, false
  br i1 %v1_1143, label %dec_label_pc_1275, label %dec_label_pc_1149

dec_label_pc_1149:                                ; preds = %dec_label_pc_10fc
  %v2_1149 = ptrtoint i32* %_foreach_col478_-40 to i32
  store i32 %v2_1149, i32* %eax.global-to-local, align 8
  store i32 %v2_1113, i32* @edx, align 8
  %v5_1166 = call i32 @_ZN5boost15foreach_detail_5beginISsN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeIS7_S8_EEPNS3_ILb0EEE(i32 %v2_1149, i32 %v2_1113, i32 0, i32 0)
  store i32 %v2_1149, i32* %eax.global-to-local, align 8
  %v1_117a = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_1149)
  store i32 %v1_117a, i32* %eax.global-to-local, align 8
  %v4_117f = trunc i32 %v1_117a to i8
  %v5_117f = icmp eq i8 %v4_117f, 0
  %v1_1181 = icmp eq i1 %v5_117f, false
  br i1 %v1_1181, label %dec_label_pc_1275, label %dec_label_pc_1187

dec_label_pc_1187:                                ; preds = %dec_label_pc_1149
  %v2_1187 = ptrtoint i32* %_foreach_cur478_-36 to i32
  store i32 %v2_1187, i32* %eax.global-to-local, align 8
  %v5_11a4 = call i32 @_ZN5boost15foreach_detail_3endISsN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeIS7_S8_EEPNS3_ILb0EEE(i32 %v2_1187, i32 %v2_1113, i32 0, i32 0)
  store i32 %v2_1187, i32* %eax.global-to-local, align 8
  %v1_11b8 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_1187)
  store i32 %v1_11b8, i32* %eax.global-to-local, align 8
  %v4_11bd = trunc i32 %v1_11b8 to i8
  %v5_11bd = icmp eq i8 %v4_11bd, 0
  %v1_11bf = icmp eq i1 %v5_11bd, false
  br i1 %v1_11bf, label %dec_label_pc_1275, label %dec_label_pc_11c5

dec_label_pc_11c5:                                ; preds = %dec_label_pc_1187
  store i8 1, i8* %stack_var_-18, align 1
  %v2_11cb = ptrtoint i8* %stack_var_-18 to i32
  br label %dec_label_pc_1238

dec_label_pc_11cb:                                ; preds = %dec_label_pc_126d
  store i32 %v2_11cb, i32* %eax.global-to-local, align 8
  %v2_11d1 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* nonnull %stack_var_-18)
  store i32 %v2_11d1, i32* %eax.global-to-local, align 8
  %v4_11d6 = trunc i32 %v2_11d1 to i8
  %v5_11d6 = icmp eq i8 %v4_11d6, 0
  %v1_11d8 = icmp eq i1 %v5_11d6, false
  br i1 %v1_11d8, label %dec_label_pc_11cb.dec_label_pc_121d_crit_edge, label %dec_label_pc_11da

dec_label_pc_11cb.dec_label_pc_121d_crit_edge:    ; preds = %dec_label_pc_11cb
  %v3_121d.pre = load i8, i8* %stack_var_-18, align 1
  br label %dec_label_pc_121d

dec_label_pc_11da:                                ; preds = %dec_label_pc_11cb
  store i32 %v2_1149, i32* %eax.global-to-local, align 8
  %v2_11e8 = call i32 @_ZN5boost15foreach_detail_5derefISsN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS6_S7_EE(i32 %v2_1149, i32 0)
  store i32 %v2_11e8, i32* %eax.global-to-local, align 8
  %v1_11ed = inttoptr i32 %v2_11e8 to i8*
  %v2_11ed = load i8, i8* %v1_11ed, align 1
  %v3_11ed = zext i8 %v2_11ed to i32
  %v3_1212.pre = load i8, i8* %stack_var_-18, align 1
  %v4_1212139 = zext i8 %v3_1212.pre to i32
  %v1_1216140 = xor i32 %v4_1212139, 1
  store i32 %v1_1216140, i32* %eax.global-to-local, align 8
  %v5_1219142 = icmp eq i32 %v1_1216140, 0
  %v1_121b144 = icmp eq i1 %v5_1219142, false
  br i1 %v1_121b144, label %dec_label_pc_11f5, label %dec_label_pc_121d

dec_label_pc_11f5:                                ; preds = %dec_label_pc_11da
  %v1_11f9 = add i32 %v3_11ed, ptrtoint (i8** @global_var_6300.2393 to i32)
  %v2_11f9 = inttoptr i32 %v1_11f9 to i8*
  store i32 %v3_11ed, i32* %eax.global-to-local, align 8
  %v3_11f9 = load i8, i8* %v2_11f9, align 1
  %v4_11f9 = zext i8 %v3_11f9 to i32
  store i32 %v4_11f9, i32* %eax.global-to-local, align 8
  %v6_1200 = icmp slt i8 %v3_11f9, 0
  %v1_1202 = icmp eq i1 %v6_1200, false
  br i1 %v1_1202, label %dec_label_pc_1212.dec_label_pc_121d.loopexit_crit_edge, label %dec_label_pc_1204

dec_label_pc_1204:                                ; preds = %dec_label_pc_11f5
  store i32 0, i32* @eax, align 8
  %v0_1209 = call i32 @function_12a2()
  store i32 %v0_1209, i32* %eax.global-to-local, align 8
  %tmp136 = urem i32 %v0_1209, 2
  %v2_1209 = icmp ne i32 %tmp136, 0
  ret i1 %v2_1209

dec_label_pc_1212.dec_label_pc_121d.loopexit_crit_edge: ; preds = %dec_label_pc_11f5
  store i8 1, i8* %stack_var_-18, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_121d

dec_label_pc_121d:                                ; preds = %dec_label_pc_11da, %dec_label_pc_1212.dec_label_pc_121d.loopexit_crit_edge, %dec_label_pc_11cb.dec_label_pc_121d_crit_edge
  %v3_121d = phi i8 [ %v3_121d.pre, %dec_label_pc_11cb.dec_label_pc_121d_crit_edge ], [ 1, %dec_label_pc_1212.dec_label_pc_121d.loopexit_crit_edge ], [ %v3_1212.pre, %dec_label_pc_11da ]
  %v4_121d = zext i8 %v3_121d to i32
  store i32 %v4_121d, i32* %eax.global-to-local, align 8
  %v5_1221 = icmp eq i8 %v3_121d, 0
  br i1 %v5_1221, label %dec_label_pc_1238, label %dec_label_pc_1225

dec_label_pc_1225:                                ; preds = %dec_label_pc_121d
  store i32 %v2_1149, i32* %eax.global-to-local, align 8
  %v2_1233 = call i32 @_ZN5boost15foreach_detail_4nextISsN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v2_1149, i32 0)
  store i32 %v2_1233, i32* %eax.global-to-local, align 8
  %v3_1238.pre.pre = load i8, i8* %stack_var_-18, align 1
  br label %dec_label_pc_1238

dec_label_pc_1238:                                ; preds = %dec_label_pc_1225, %dec_label_pc_121d, %dec_label_pc_11c5
  %v3_1238 = phi i8 [ 1, %dec_label_pc_11c5 ], [ 0, %dec_label_pc_121d ], [ %v3_1238.pre.pre, %dec_label_pc_1225 ]
  %v4_1238 = zext i8 %v3_1238 to i32
  store i32 %v4_1238, i32* %eax.global-to-local, align 8
  %v5_123c = icmp eq i8 %v3_1238, 0
  br i1 %v5_123c, label %dec_label_pc_1268, label %dec_label_pc_1240

dec_label_pc_1240:                                ; preds = %dec_label_pc_1238
  store i32 %v2_1149, i32* %eax.global-to-local, align 8
  %v3_1255 = call i32 @_ZN5boost15foreach_detail_4doneISsN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseES7_PNS0_9type2typeIT_T0_EE(i32 %v2_1149, i32 %v2_1187, i32 0)
  %v1_125a = xor i32 %v3_1255, 1
  %v4_125a = trunc i32 %v1_125a to i8
  store i32 %v1_125a, i32* %eax.global-to-local, align 8
  %v5_125d = icmp eq i8 %v4_125a, 0
  br i1 %v5_125d, label %dec_label_pc_1268, label %dec_label_pc_126d

dec_label_pc_1268:                                ; preds = %dec_label_pc_1240, %dec_label_pc_1238
  br label %dec_label_pc_126d

dec_label_pc_126d:                                ; preds = %dec_label_pc_1240, %dec_label_pc_1268
  %storemerge = phi i32 [ 0, %dec_label_pc_1268 ], [ 1, %dec_label_pc_1240 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_126d = icmp eq i32 %storemerge, 0
  %v1_126f = icmp eq i1 %v5_126d, false
  br i1 %v1_126f, label %dec_label_pc_11cb, label %dec_label_pc_1275

dec_label_pc_1275:                                ; preds = %dec_label_pc_126d, %dec_label_pc_1187, %dec_label_pc_1149, %dec_label_pc_10fc
  store i32 %v4_111e, i32* %eax.global-to-local, align 8
  %v1_1278 = load i32, i32* @esp, align 4
  %v2_1278 = inttoptr i32 %v1_1278 to i32*
  store i32 %v4_111e, i32* %v2_1278, align 4
  %v3_1278 = load i32, i32* %eax.global-to-local, align 8
  %tmp137 = urem i32 %v3_1278, 2
  %v4_1278 = icmp ne i32 %tmp137, 0
  ret i1 %v4_1278

; uselistorder directives
  uselistorder i8 %v3_1238, { 1, 0 }
  uselistorder i8 %v3_121d, { 1, 0 }
  uselistorder i32 %v2_1187, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_1149, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9 }
  uselistorder i32 %v4_111e, { 1, 0, 2 }
  uselistorder i32 %v2_1113, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i8* %stack_var_-18, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 13, 14, 1, 15, 16, 17, 5, 6, 7, 8, 2, 3, 4, 0, 9, 10, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_126d, { 1, 0 }
  uselistorder label %dec_label_pc_121d, { 1, 0, 2 }
}

define i32 @function_128e() local_unnamed_addr {
dec_label_pc_128e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_128e = load i32, i32* %ebx.global-to-local, align 4
  %v1_128e = add i32 %v0_128e, -1065025056
  %v2_128e = inttoptr i32 %v1_128e to i32*
  %v3_128e = load i32, i32* %v2_128e, align 4
  %v4_128e = add i32 %v3_128e, 1
  %v12_128e = icmp eq i32 %v4_128e, 0
  store i32 %v4_128e, i32* %v2_128e, align 4
  %v1_1294 = icmp eq i1 %v12_128e, false
  br i1 %v1_1294, label %dec_label_pc_129d, label %dec_label_pc_1296

dec_label_pc_1296:                                ; preds = %dec_label_pc_128e
  store i32 1, i32* @eax, align 8
  %v0_129b = call i32 @function_12a2()
  ret i32 %v0_129b

dec_label_pc_129d:                                ; preds = %dec_label_pc_128e
  ret i32 0

; uselistorder directives
  uselistorder i32 ()* @function_12a2, { 1, 0 }
}

define i32 @function_12a2() local_unnamed_addr {
dec_label_pc_12a2:
  %v0_12a2 = load i32, i32* @ebp, align 4
  %v1_12a2 = add i32 %v0_12a2, -12
  %v2_12a2 = inttoptr i32 %v1_12a2 to i32*
  %v3_12a2 = load i32, i32* %v2_12a2, align 4
  %v3_12a5 = icmp eq i32 %v3_12a2, 30
  br i1 %v3_12a5, label %bb, label %dec_label_pc_12a2.dec_label_pc_12ae_crit_edge

dec_label_pc_12a2.dec_label_pc_12ae_crit_edge:    ; preds = %dec_label_pc_12a2
  %v2_12ac.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_12ae

bb:                                               ; preds = %dec_label_pc_12a2
  %v1_12ac = call i32 @function_12b3()
  br label %dec_label_pc_12ae

dec_label_pc_12ae:                                ; preds = %dec_label_pc_12a2.dec_label_pc_12ae_crit_edge, %bb
  %v2_12ac = phi i32 [ %v2_12ac.pre, %dec_label_pc_12a2.dec_label_pc_12ae_crit_edge ], [ %v1_12ac, %bb ]
  ret i32 %v2_12ac

; uselistorder directives
  uselistorder label %dec_label_pc_12ae, { 1, 0 }
}

define i32 @function_12b3() local_unnamed_addr {
dec_label_pc_12b3:
  %v0_12b4 = load i32, i32* @eax, align 8
  ret i32 %v0_12b4
}

define %"vector<unsignedchar,std::allocator<unsignedchar>>.27" @_Z8ParseHexPKc(i8* %psz) local_unnamed_addr {
dec_label_pc_12b5:
  %vch_-36 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>", align 8
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %v4_12c5 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %tmp101, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>" %v4_12c5, %"vector<unsignedchar,std::allocator<unsignedchar>>"* %vch_-36, align 8
  %v4_12d3 = ptrtoint i8* %psz to i32
  %v2_12d9 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v4_12d3)
  %v4_12e6 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %vch_-36, i32 0, i32 0
  %v5_12e6 = load i32, i32* %v4_12e6, align 8
  %v1_12e9 = inttoptr i32 %v5_12e6 to i8*
  %v2_12e9 = load i8, i8* %v1_12e9, align 1
  %v3_12e9 = zext i8 %v2_12e9 to i32
  %v5_12ef = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.27" undef, i32 %v3_12e9, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.27" %v5_12ef
}

define i32 @function_12f6() local_unnamed_addr {
dec_label_pc_12f6:
  %v0_12f6 = load i32, i32* @ebp, align 4
  %v1_12f6 = add i32 %v0_12f6, -1063972928
  %v2_12f6 = inttoptr i32 %v1_12f6 to i32*
  %v3_12f6 = load i32, i32* %v2_12f6, align 4
  %v4_12f6 = add i32 %v3_12f6, 1
  store i32 %v4_12f6, i32* %v2_12f6, align 4
  %v0_1300 = load i32, i32* @ebp, align 4
  %v1_1300 = add i32 %v0_1300, -32
  %v2_1300 = inttoptr i32 %v1_1300 to i32*
  %v3_1300 = load i32, i32* %v2_1300, align 4
  %v1_1303 = inttoptr i32 %v3_1300 to i8*
  %v2_1303 = load i8, i8* %v1_1303, align 1
  %v3_1303 = zext i8 %v2_1303 to i32
  %v1_1309 = add i32 %v3_1303, ptrtoint (i8** @global_var_6300.2393 to i32)
  %v2_1309 = inttoptr i32 %v1_1309 to i8*
  %v3_1309 = load i8, i8* %v2_1309, align 1
  %v3_1310 = add i32 %v0_1300, -13
  %v4_1310 = inttoptr i32 %v3_1310 to i8*
  store i8 %v3_1309, i8* %v4_1310, align 1
  %v0_1313 = load i32, i32* @ebp, align 4
  %v1_1313 = add i32 %v0_1313, -32
  %v2_1313 = inttoptr i32 %v1_1313 to i32*
  %v3_1313 = load i32, i32* %v2_1313, align 4
  %v4_1313 = add i32 %v3_1313, 1
  store i32 %v4_1313, i32* %v2_1313, align 4
  %v0_1317 = load i32, i32* @ebp, align 4
  %v1_1317 = add i32 %v0_1317, -13
  %v2_1317 = inttoptr i32 %v1_1317 to i8*
  %v3_1317 = load i8, i8* %v2_1317, align 1
  %v13_1317 = icmp eq i8 %v3_1317, -1
  br i1 %v13_1317, label %dec_label_pc_1369, label %dec_label_pc_131d

dec_label_pc_131d:                                ; preds = %dec_label_pc_12f6
  %v3_131d = load i8, i8* %v2_1317, align 1
  %v4_131d = zext i8 %v3_131d to i32
  %v2_1321 = shl i32 %v4_131d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v5_1321 = trunc i32 %v2_1321 to i8
  %v3_1324 = add i32 %v0_1317, -14
  %v4_1324 = inttoptr i32 %v3_1324 to i8*
  store i8 %v5_1321, i8* %v4_1324, align 1
  %v0_1327 = load i32, i32* @ebp, align 4
  %v1_1327 = add i32 %v0_1327, -32
  %v2_1327 = inttoptr i32 %v1_1327 to i32*
  %v3_1327 = load i32, i32* %v2_1327, align 4
  %v1_132a = inttoptr i32 %v3_1327 to i8*
  %v2_132a = load i8, i8* %v1_132a, align 1
  %v3_132a = zext i8 %v2_132a to i32
  %v1_1330 = add i32 %v3_132a, ptrtoint (i8** @global_var_6300.2393 to i32)
  %v2_1330 = inttoptr i32 %v1_1330 to i8*
  %v3_1330 = load i8, i8* %v2_1330, align 1
  %v3_1337 = add i32 %v0_1327, -13
  %v4_1337 = inttoptr i32 %v3_1337 to i8*
  store i8 %v3_1330, i8* %v4_1337, align 1
  %v0_133a = load i32, i32* @ebp, align 4
  %v1_133a = add i32 %v0_133a, -32
  %v2_133a = inttoptr i32 %v1_133a to i32*
  %v3_133a = load i32, i32* %v2_133a, align 4
  %v4_133a = add i32 %v3_133a, 1
  store i32 %v4_133a, i32* %v2_133a, align 4
  %v0_133e = load i32, i32* @ebp, align 4
  %v1_133e = add i32 %v0_133e, -13
  %v2_133e = inttoptr i32 %v1_133e to i8*
  %v3_133e = load i8, i8* %v2_133e, align 1
  %v13_133e = icmp eq i8 %v3_133e, -1
  br i1 %v13_133e, label %dec_label_pc_1369, label %dec_label_pc_1344

dec_label_pc_1344:                                ; preds = %dec_label_pc_131d
  %v1_1344 = add i32 %v0_133e, -14
  %v2_1344 = inttoptr i32 %v1_1344 to i8*
  %v3_1344 = load i8, i8* %v2_1344, align 1
  %v5_1348 = load i8, i8* %v2_133e, align 1
  %v6_1348 = or i8 %v5_1348, %v3_1344
  store i8 %v6_1348, i8* %v2_1344, align 1
  %v0_134e = load i32, i32* @ebp, align 4
  %v1_134e = add i32 %v0_134e, -14
  %v1_1355 = add i32 %v0_134e, -28
  %v2_1355 = inttoptr i32 %v1_1355 to i32*
  %v3_1355 = load i32, i32* %v2_1355, align 4
  %v2_135b = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v3_1355, i32 %v1_134e)
  ret i32 %v2_135b

dec_label_pc_1369:                                ; preds = %dec_label_pc_131d, %dec_label_pc_12f6
  %v0_1369 = phi i32 [ %v0_133e, %dec_label_pc_131d ], [ %v0_1317, %dec_label_pc_12f6 ]
  %v1_1369 = add i32 %v0_1369, -28
  %v2_1369 = inttoptr i32 %v1_1369 to i32*
  %v3_1369 = load i32, i32* %v2_1369, align 4
  store i32 %v3_1369, i32* @eax, align 8
  %v1_136c = add i32 %v0_1369, -12
  %v2_136c = inttoptr i32 %v1_136c to i32*
  %v3_136c = load i32, i32* %v2_136c, align 4
  %v3_136f = icmp eq i32 %v3_136c, 30
  br i1 %v3_136f, label %bb, label %dec_label_pc_1378

bb:                                               ; preds = %dec_label_pc_1369
  %v1_1376 = call i32 @function_1396()
  store i32 %v1_1376, i32* @eax, align 8
  br label %dec_label_pc_1378

dec_label_pc_1378:                                ; preds = %bb, %dec_label_pc_1369
  %v0_1378 = call i32 @function_1391()
  ret i32 %v0_1378

; uselistorder directives
  uselistorder i32 %v0_1369, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_6300.2393 to i32), { 2, 1, 0 }
}

define i32 @function_137b() local_unnamed_addr {
dec_label_pc_137b:
  %eax.global-to-local = alloca i32, align 4
  %v0_137b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_137b
}

define i32 @function_1391() local_unnamed_addr {
dec_label_pc_1391:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1396() local_unnamed_addr {
dec_label_pc_1396:
  %v0_139b = load i32, i32* @eax, align 8
  ret i32 %v0_139b
}

define %"vector<unsignedchar,std::allocator<unsignedchar>>.28" @_Z8ParseHexRKSs(i32 %str) local_unnamed_addr {
dec_label_pc_139e:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %v4_13be = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.28" undef, i32 %tmp98, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.28" %v4_13be
}

define i32 @function_13c7() local_unnamed_addr {
dec_label_pc_13c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13c7
}

define i32 @function_13ed() local_unnamed_addr {
dec_label_pc_13ed:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13ed = load i32, i32* %ecx.global-to-local, align 4
  %v1_13ed = add i32 %v0_13ed, -1
  store i32 %v1_13ed, i32* %ecx.global-to-local, align 4
  %v0_13ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13ef
}

define void @InterpretNegativeSetting(i32 %name, i32 %mapSettingsRet) local_unnamed_addr {
dec_label_pc_13f2:
  ret void
}

define i32 @function_1495() local_unnamed_addr {
dec_label_pc_1495:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1495 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1495 = add i32 %v0_1495, 1166869740
  %v2_1495 = inttoptr i32 %v1_1495 to i32*
  %v3_1495 = load i32, i32* %v2_1495, align 4
  %v4_1495 = add i32 %v3_1495, 1
  store i32 %v4_1495, i32* %v2_1495, align 4
  %v0_149b = call i32 @unknown_89e46a2d()
  %v0_14a3 = load i32, i32* @ebp, align 4
  %v1_14a3 = add i32 %v0_14a3, -32
  %v3_14ad = inttoptr i32 %v1_14a3 to i32*
  %v4_14ad = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplERKi(i32 0, i32* %v3_14ad)
  %v0_14b5 = load i32, i32* @ebp, align 4
  %v1_14b5 = add i32 %v0_14b5, -20
  %v2_14b5 = inttoptr i32 %v1_14b5 to i32*
  %v3_14b5 = load i32, i32* %v2_14b5, align 4
  %v1_14bc = add i32 %v0_14b5, -24
  %v2_14bc = inttoptr i32 %v1_14bc to i32*
  %v3_14bc = load i32, i32* %v2_14bc, align 4
  %tmp105 = urem i32 %v3_14bc, 2
  %v4_14bf = icmp ne i32 %tmp105, 0
  %v1_14c3 = add i32 %v0_14b5, -36
  %v2_14c9 = sext i1 %v4_14bf to i32
  %v4_14c9 = call i32 @_ZNSs6appendIN9__gnu_cxx17__normal_iteratorIPcSsEEEERSsT_S5_(i32 %v1_14c3, i32 %v2_14c9, i32 %v3_14b5)
  %v0_14ce = load i32, i32* @ebp, align 4
  %v1_14ce = add i32 %v0_14ce, -36
  %tmp106 = urem i32 %v1_14ce, 2
  %v4_14d1 = icmp ne i32 %tmp106, 0
  %v1_14d5 = add i32 %v0_14ce, -48
  %v2_14d5 = inttoptr i32 %v1_14d5 to i32*
  %v3_14d5 = load i32, i32* %v2_14d5, align 4
  %v2_14db = sext i1 %v4_14d1 to i32
  %v3_14db = call i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 %v3_14d5, i32 %v2_14db)
  %v1_14e0 = icmp eq i32 %v3_14db, 0
  %v5_14e5 = icmp eq i1 %v1_14e0, false
  br i1 %v5_14e5, label %bb, label %dec_label_pc_14e9

bb:                                               ; preds = %dec_label_pc_1495
  %v1_14e7 = call i32 @function_1532()
  br label %dec_label_pc_14e9

dec_label_pc_14e9:                                ; preds = %bb, %dec_label_pc_1495
  %v0_14f1 = load i32, i32* @ebp, align 4
  %v1_14f1 = add i32 %v0_14f1, -44
  %v2_14f1 = inttoptr i32 %v1_14f1 to i32*
  %v3_14f1 = load i32, i32* %v2_14f1, align 4
  %v4_14f7 = call i1 @_Z10GetBoolArgRKSsb(i32 %v3_14f1, i1 false)
  %v6_14f7 = sext i1 %v4_14f7 to i8
  %v1_14fc = xor i8 %v6_14f7, 1
  %v2_14ff = load i32, i32* @ebp, align 4
  %v3_14ff = add i32 %v2_14ff, -13
  %v4_14ff = inttoptr i32 %v3_14ff to i8*
  store i8 %v1_14fc, i8* %v4_14ff, align 1
  %v0_1502 = load i32, i32* @ebp, align 4
  %v1_1502 = add i32 %v0_1502, -13
  %v2_1502 = inttoptr i32 %v1_1502 to i8*
  %v3_1502 = load i8, i8* %v2_1502, align 1
  %v10_1502 = icmp eq i8 %v3_1502, 0
  %. = select i1 %v10_1502, i32 ptrtoint (i32* @global_var_5bcb.2396 to i32), i32 ptrtoint (i1* @global_var_5bc9.2395 to i32)
  store i32 %., i32* %ebx.global-to-local, align 4
  %v1_1514 = add i32 %v0_1502, -36
  %tmp107 = urem i32 %v1_1514, 2
  %v4_1517 = icmp ne i32 %tmp107, 0
  %v1_151b = add i32 %v0_1502, -48
  %v2_151b = inttoptr i32 %v1_151b to i32*
  %v3_151b = load i32, i32* %v2_151b, align 4
  %v2_1521 = sext i1 %v4_1517 to i32
  %v3_1521 = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %v3_151b, i32 %v2_1521)
  ret i32 %v3_1521

; uselistorder directives
  uselistorder i32 %v0_1502, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1532() local_unnamed_addr {
dec_label_pc_1532:
  %v0_1532 = load i32, i32* @ebp, align 4
  %v1_1532 = add i32 %v0_1532, -36
  %v1_153d = call i32 @function_156d(i32 %v1_1532)
  ret i32 %v1_153d
}

define i32 @function_1540() local_unnamed_addr {
dec_label_pc_1540:
  %eax.global-to-local = alloca i32, align 4
  %v0_1540 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1540
}

define i32 @function_1557() local_unnamed_addr {
dec_label_pc_1557:
  %eax.global-to-local = alloca i32, align 4
  %v0_1557 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1557
}

define i32 @function_156d(i32 %arg1) local_unnamed_addr {
dec_label_pc_156d:
  %v0_156d = load i32, i32* @ebp, align 4
  %v1_156d = add i32 %v0_156d, -12
  %v2_156d = inttoptr i32 %v1_156d to i32*
  %v3_156d = load i32, i32* %v2_156d, align 4
  %v2_1570 = xor i32 %v3_156d, 30
  %v3_1570 = icmp eq i32 %v2_1570, 0
  store i32 %v2_1570, i32* @eax, align 8
  br i1 %v3_1570, label %bb, label %dec_label_pc_1579

bb:                                               ; preds = %dec_label_pc_156d
  %v1_1577 = call i32 @function_157e()
  br label %dec_label_pc_1579

dec_label_pc_1579:                                ; preds = %bb, %dec_label_pc_156d
  %v2_1577 = phi i32 [ %v1_1577, %bb ], [ %v2_1570, %dec_label_pc_156d ]
  ret i32 %v2_1577
}

define i32 @function_157e() local_unnamed_addr {
dec_label_pc_157e:
  %v0_1582 = load i32, i32* @eax, align 8
  ret i32 %v0_1582
}

define void @_Z15ParseParametersiPKPKc(i32 %argc, i8** %argv) local_unnamed_addr {
dec_label_pc_1583:
  %v1_15ab = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5clearEv(i32 21568)
  %v1_15b7 = call i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE5clearEv(i32 ptrtoint (i32* @global_var_5458.2397 to i32))
  %v1_15c3 = call i32 @function_1756(i32 1)
  ret void
}

define i32 @function_16c9() local_unnamed_addr {
dec_label_pc_16c9:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_16c9 = add i32 %tmp93, -1
  %v18_16c9 = inttoptr i32 %tmp93 to i32*
  store i32 %v3_16c9, i32* %v18_16c9, align 4
  %v0_16cb = load i32, i32* %edx.global-to-local, align 8
  %v1_16cb = and i32 %v0_16cb, -65281
  store i32 %v1_16cb, i32* %edx.global-to-local, align 8
  %v0_16cd = load i32, i32* %eax.global-to-local, align 8
  %v1_16cd = trunc i32 %v0_16cd to i8
  %v11_16cd = icmp eq i8 %v1_16cd, 45
  %v1_16cf = icmp eq i1 %v11_16cd, false
  %v2_16cf = zext i1 %v1_16cf to i32
  %v4_16cf = and i32 %v0_16cd, -256
  %v5_16cf = or i32 %v2_16cf, %v4_16cf
  store i32 %v5_16cf, i32* %eax.global-to-local, align 8
  %v5_16d2 = icmp eq i1 %v1_16cf, false
  br i1 %v5_16d2, label %dec_label_pc_16dd, label %dec_label_pc_16d6

dec_label_pc_16d6:                                ; preds = %dec_label_pc_16c9
  %v0_16db = call i32 @function_1726()
  store i32 %v0_16db, i32* %eax.global-to-local, align 8
  ret i32 %v0_16db

dec_label_pc_16dd:                                ; preds = %dec_label_pc_16c9
  %v0_16dd = load i32, i32* @ebp, align 4
  %v1_16dd = add i32 %v0_16dd, -88
  store i32 %v1_16dd, i32* %eax.global-to-local, align 8
  %v2_16eb = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %v1_16dd)
  store i32 %v2_16eb, i32* %eax.global-to-local, align 8
  %v0_16f0 = load i32, i32* @ebp, align 4
  %v1_16f0 = add i32 %v0_16f0, -84
  store i32 %v1_16f0, i32* %edx.global-to-local, align 8
  ret i32 %v2_16eb

; uselistorder directives
  uselistorder i32 %tmp93, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @function_1726() local_unnamed_addr {
dec_label_pc_1726:
  %v0_1726 = load i32, i32* @ebp, align 4
  %v1_1726 = add i32 %v0_1726, -84
  ret i32 %v1_1726
}

define i32 @function_1730() local_unnamed_addr {
dec_label_pc_1730:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1730 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1730 = add i32 %v0_1730, 125043195
  %v2_1730 = inttoptr i32 %v1_1730 to i32*
  %v3_1730 = load i32, i32* %v2_1730, align 4
  %v4_1730 = add i32 %v3_1730, 1
  store i32 %v4_1730, i32* %v2_1730, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_173b = call i32 @function_1742()
  ret i32 %v0_173b

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_173d() local_unnamed_addr {
dec_label_pc_173d:
  %eax.global-to-local = alloca i32, align 4
  %v0_173d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_173d
}

define i32 @function_1742() local_unnamed_addr {
dec_label_pc_1742:
  %v0_1742 = load i32, i32* @ebp, align 4
  %v1_1742 = add i32 %v0_1742, -88
  ret i32 %v1_1742
}

define i32 @function_1756(i32 %arg1) local_unnamed_addr {
dec_label_pc_1756:
  %v0_1756 = load i32, i32* @ebp, align 4
  %v1_1767 = add i32 %v0_1756, -72
  %v3_177d = call i32 @_ZN5boost15foreach_detail_7containISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS0_8auto_anyIPT_EERSB_PN4mpl_5bool_ILb0EEE(i32 %v1_1767, i32 21568, i32 0)
  %v0_1785 = load i32, i32* @ebp, align 4
  %v1_1785 = add i32 %v0_1785, -72
  %v2_1788 = add i32 %v0_1785, -32
  %v3_1788 = inttoptr i32 %v2_1788 to i32*
  store i32 %v1_1785, i32* %v3_1788, align 4
  %v0_178b = load i32, i32* @ebp, align 4
  %v1_178b = add i32 %v0_178b, -32
  %v2_178b = inttoptr i32 %v1_178b to i32*
  %v3_178b = load i32, i32* %v2_178b, align 4
  %v1_1791 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_178b)
  %v4_1796 = trunc i32 %v1_1791 to i8
  %v5_1796 = icmp eq i8 %v4_1796, 0
  %v1_1798 = icmp eq i1 %v5_1796, false
  br i1 %v1_1798, label %bb, label %dec_label_pc_179e

bb:                                               ; preds = %dec_label_pc_1756
  %v2_1798 = call i32 @function_1aea()
  br label %dec_label_pc_179e

dec_label_pc_179e:                                ; preds = %bb, %dec_label_pc_1756
  %v0_179e = load i32, i32* @ebp, align 4
  %v1_179e = add i32 %v0_179e, -68
  %v1_17b1 = add i32 %v0_179e, -32
  %v2_17b1 = inttoptr i32 %v1_17b1 to i32*
  %v3_17b1 = load i32, i32* %v2_17b1, align 4
  %v4_17bb = call i32 @_ZN5boost15foreach_detail_5beginISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %v1_179e, i32 %v3_17b1, i32 0, i32 0)
  %v0_17c3 = load i32, i32* @ebp, align 4
  %v1_17c3 = add i32 %v0_17c3, -68
  %v2_17c6 = add i32 %v0_17c3, -28
  %v3_17c6 = inttoptr i32 %v2_17c6 to i32*
  store i32 %v1_17c3, i32* %v3_17c6, align 4
  %v0_17c9 = load i32, i32* @ebp, align 4
  %v1_17c9 = add i32 %v0_17c9, -28
  %v2_17c9 = inttoptr i32 %v1_17c9 to i32*
  %v3_17c9 = load i32, i32* %v2_17c9, align 4
  %v1_17cf = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_17c9)
  %v4_17d4 = trunc i32 %v1_17cf to i8
  %v5_17d4 = icmp eq i8 %v4_17d4, 0
  %v1_17d6 = icmp eq i1 %v5_17d4, false
  br i1 %v1_17d6, label %bb11, label %dec_label_pc_17dc

bb11:                                             ; preds = %dec_label_pc_179e
  %v2_17d6 = call i32 @function_1aea()
  br label %dec_label_pc_17dc

dec_label_pc_17dc:                                ; preds = %bb11, %dec_label_pc_179e
  %v0_17dc = load i32, i32* @ebp, align 4
  %v1_17dc = add i32 %v0_17dc, -64
  %v1_17ef = add i32 %v0_17dc, -32
  %v2_17ef = inttoptr i32 %v1_17ef to i32*
  %v3_17ef = load i32, i32* %v2_17ef, align 4
  store i32 %v3_17ef, i32* @edx, align 8
  %v4_17f9 = call i32 @_ZN5boost15foreach_detail_3endISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %v1_17dc, i32 %v3_17ef, i32 0, i32 0)
  %v0_1801 = load i32, i32* @ebp, align 4
  %v1_1801 = add i32 %v0_1801, -64
  %v2_1804 = add i32 %v0_1801, -24
  %v3_1804 = inttoptr i32 %v2_1804 to i32*
  store i32 %v1_1801, i32* %v3_1804, align 4
  %v0_1807 = load i32, i32* @ebp, align 4
  %v1_1807 = add i32 %v0_1807, -24
  %v2_1807 = inttoptr i32 %v1_1807 to i32*
  %v3_1807 = load i32, i32* %v2_1807, align 4
  %v1_180d = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_1807)
  %v4_1812 = trunc i32 %v1_180d to i8
  %v5_1812 = icmp eq i8 %v4_1812, 0
  %v1_1814 = icmp eq i1 %v5_1812, false
  br i1 %v1_1814, label %bb13, label %dec_label_pc_181a

bb13:                                             ; preds = %dec_label_pc_17dc
  %v2_1814 = call i32 @function_1aea()
  br label %dec_label_pc_181a

dec_label_pc_181a:                                ; preds = %bb13, %dec_label_pc_17dc
  %v0_181a = load i32, i32* @ebp, align 4
  %v1_181a = add i32 %v0_181a, -14
  %v2_181a = inttoptr i32 %v1_181a to i8*
  store i8 1, i8* %v2_181a, align 1
  %v0_181e = call i32 @function_19f2()
  ret i32 %v0_181e
}

define i32 @function_1823() local_unnamed_addr {
dec_label_pc_1823:
  %v0_1823 = load i32, i32* @ebp, align 4
  %v1_1823 = add i32 %v0_1823, -14
  %v1_1829 = inttoptr i32 %v1_1823 to i8*
  %v2_1829 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_1829)
  %v4_182e = trunc i32 %v2_1829 to i8
  %v5_182e = icmp eq i8 %v4_182e, 0
  %v1_1830 = icmp eq i1 %v5_182e, false
  br i1 %v1_1830, label %bb, label %dec_label_pc_1836

bb:                                               ; preds = %dec_label_pc_1823
  %v2_1830 = call i32 @function_19d7()
  br label %dec_label_pc_1836

dec_label_pc_1836:                                ; preds = %bb, %dec_label_pc_1823
  %v0_183e = load i32, i32* @ebp, align 4
  %v1_183e = add i32 %v0_183e, -28
  %v2_183e = inttoptr i32 %v1_183e to i32*
  %v3_183e = load i32, i32* %v2_183e, align 4
  %v2_1844 = call i32 @_ZN5boost15foreach_detail_5derefISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISE_SF_EE(i32 %v3_183e, i32 0)
  %v0_184d = load i32, i32* @ebp, align 4
  %v1_184d = add i32 %v0_184d, -96
  %v2_1853 = call i32 @_ZNSt4pairISsSsEC1IKSsSsEERKS_IT_T0_E(i32 %v1_184d, i32 %v2_1844)
  %v0_1858 = load i32, i32* @ebp, align 4
  %v1_1858 = add i32 %v0_1858, -96
  %v2_185b = add i32 %v0_1858, -20
  %v3_185b = inttoptr i32 %v2_185b to i32*
  store i32 %v1_1858, i32* %v3_185b, align 4
  %v0_185e = call i32 @function_19bd()
  ret i32 %v0_185e
}

define i32 @function_1863() local_unnamed_addr {
dec_label_pc_1863:
  %v0_1863 = load i32, i32* @ebp, align 4
  %v1_186a = add i32 %v0_1863, -84
  ret i32 %v1_186a
}

define i32 @function_19bd() local_unnamed_addr {
dec_label_pc_19bd:
  %v0_19bd = load i32, i32* @ebp, align 4
  %v1_19bd = add i32 %v0_19bd, -14
  %v2_19bd = inttoptr i32 %v1_19bd to i8*
  %v3_19bd = load i8, i8* %v2_19bd, align 1
  %v5_19c4 = icmp eq i8 %v3_19bd, 1
  %v1_19c6 = icmp eq i1 %v5_19c4, false
  br i1 %v1_19c6, label %bb, label %dec_label_pc_19cc

bb:                                               ; preds = %dec_label_pc_19bd
  %v2_19c6 = call i32 @function_1863()
  %v0_19cc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19cc

dec_label_pc_19cc:                                ; preds = %bb, %dec_label_pc_19bd
  %v0_19cc = phi i32 [ %v0_19cc.pre, %bb ], [ %v0_19bd, %dec_label_pc_19bd ]
  %v1_19cc = add i32 %v0_19cc, -96
  %v1_19d2 = call i32 @_ZNSt4pairISsSsED1Ev(i32 %v1_19cc)
  ret i32 %v1_19d2
}

define i32 @function_19d7() local_unnamed_addr {
dec_label_pc_19d7:
  %v0_19d7 = load i32, i32* @ebp, align 4
  %v1_19d7 = add i32 %v0_19d7, -14
  %v2_19d7 = inttoptr i32 %v1_19d7 to i8*
  %v3_19d7 = load i8, i8* %v2_19d7, align 1
  %v5_19db = icmp eq i8 %v3_19d7, 0
  br i1 %v5_19db, label %bb, label %dec_label_pc_19df

bb:                                               ; preds = %dec_label_pc_19d7
  %v1_19dd = call i32 @function_19f2()
  %v0_19e7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_19df

dec_label_pc_19df:                                ; preds = %bb, %dec_label_pc_19d7
  %v0_19e7 = phi i32 [ %v0_19e7.pre, %bb ], [ %v0_19d7, %dec_label_pc_19d7 ]
  %v1_19e7 = add i32 %v0_19e7, -28
  %v2_19e7 = inttoptr i32 %v1_19e7 to i32*
  %v3_19e7 = load i32, i32* %v2_19e7, align 4
  %v2_19ed = call i32 @_ZN5boost15foreach_detail_4nextISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_19e7, i32 0)
  ret i32 %v2_19ed

; uselistorder directives
  uselistorder i32 ()* @function_19f2, { 1, 0 }
}

define i32 @function_19f2() local_unnamed_addr {
dec_label_pc_19f2:
  %v0_19f2 = load i32, i32* @ebp, align 4
  %v1_19f2 = add i32 %v0_19f2, -14
  %v2_19f2 = inttoptr i32 %v1_19f2 to i8*
  %v3_19f2 = load i8, i8* %v2_19f2, align 1
  %v5_19f6 = icmp eq i8 %v3_19f2, 0
  br i1 %v5_19f6, label %dec_label_pc_1a22, label %dec_label_pc_19fa

dec_label_pc_19fa:                                ; preds = %dec_label_pc_19f2
  %v1_1a02 = add i32 %v0_19f2, -24
  %v2_1a02 = inttoptr i32 %v1_1a02 to i32*
  %v3_1a02 = load i32, i32* %v2_1a02, align 4
  %v1_1a09 = add i32 %v0_19f2, -28
  %v2_1a09 = inttoptr i32 %v1_1a09 to i32*
  %v3_1a09 = load i32, i32* %v2_1a09, align 4
  %v3_1a0f = call i32 @_ZN5boost15foreach_detail_4doneISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESF_PNS0_9type2typeIT_T0_EE(i32 %v3_1a09, i32 %v3_1a02, i32 0)
  %v1_1a14 = xor i32 %v3_1a0f, 1
  %v4_1a14 = trunc i32 %v1_1a14 to i8
  %v5_1a17 = icmp eq i8 %v4_1a14, 0
  br i1 %v5_1a17, label %dec_label_pc_1a22, label %dec_label_pc_1a27

dec_label_pc_1a22:                                ; preds = %dec_label_pc_19fa, %dec_label_pc_19f2
  br label %dec_label_pc_1a27

dec_label_pc_1a27:                                ; preds = %dec_label_pc_19fa, %dec_label_pc_1a22
  %storemerge = phi i1 [ false, %dec_label_pc_1a22 ], [ true, %dec_label_pc_19fa ]
  br i1 %storemerge, label %bb, label %dec_label_pc_1a2f

bb:                                               ; preds = %dec_label_pc_1a27
  %v2_1a29 = call i32 @function_1823()
  br label %dec_label_pc_1a2f

dec_label_pc_1a2f:                                ; preds = %bb, %dec_label_pc_1a27
  %v0_1a2f = call i32 @function_1aea()
  ret i32 %v0_1a2f

; uselistorder directives
  uselistorder i32 %v0_19f2, { 1, 0, 2 }
  uselistorder i32 ()* @function_1aea, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a27, { 1, 0 }
}

define i32 @function_1a35() local_unnamed_addr {
dec_label_pc_1a35:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a35 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a35
}

define i32 @function_1a4c() local_unnamed_addr {
dec_label_pc_1a4c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a4c
}

define i32 @function_1a58() local_unnamed_addr {
dec_label_pc_1a58:
  %v0_1a58 = call i32 @function_1a6b()
  ret i32 %v0_1a58
}

define i32 @function_1a5b() local_unnamed_addr {
dec_label_pc_1a5b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a5b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a5b
}

define i32 @function_1a67() local_unnamed_addr {
dec_label_pc_1a67:
  %v0_1a67 = call i32 @function_1a6b()
  ret i32 %v0_1a67

; uselistorder directives
  uselistorder i32 ()* @function_1a6b, { 1, 0 }
}

define i32 @function_1a6a() local_unnamed_addr {
dec_label_pc_1a6a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a6a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a6a
}

define i32 @function_1a6b() local_unnamed_addr {
dec_label_pc_1a6b:
  %v0_1a6b = load i32, i32* @ebp, align 4
  %v1_1a6b = add i32 %v0_1a6b, -84
  ret i32 %v1_1a6b
}

define i32 @function_1a76() local_unnamed_addr {
dec_label_pc_1a76:
  %v0_1a76 = call i32 @function_1a7a()
  ret i32 %v0_1a76
}

define i32 @function_1a78() local_unnamed_addr {
dec_label_pc_1a78:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a78 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a78
}

define i32 @function_1a7a() local_unnamed_addr {
dec_label_pc_1a7a:
  %v0_1a7a = load i32, i32* @ebp, align 4
  %v1_1a7a = add i32 %v0_1a7a, -88
  ret i32 %v1_1a7a
}

define i32 @function_1a84() local_unnamed_addr {
dec_label_pc_1a84:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a84 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a84 = add i32 %v0_1a84, 604277208
  %v2_1a84 = inttoptr i32 %v1_1a84 to i32*
  %v3_1a84 = load i32, i32* %v2_1a84, align 4
  %v4_1a84 = add i32 %v3_1a84, -1
  store i32 %v4_1a84, i32* %v2_1a84, align 4
  %v0_1a95 = call i32 @function_1a99()
  ret i32 %v0_1a95
}

define i32 @function_1a97() local_unnamed_addr {
dec_label_pc_1a97:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a97 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a97
}

define i32 @function_1a99() local_unnamed_addr {
dec_label_pc_1a99:
  %v0_1a99 = load i32, i32* @ebp, align 4
  %v1_1a99 = add i32 %v0_1a99, -13
  %v1_1aa4 = call i32 @function_1ac6(i32 %v1_1a99)
  ret i32 %v1_1aa4
}

define i32 @function_1aa7() local_unnamed_addr {
dec_label_pc_1aa7:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa7
}

define i32 @function_1ab3() local_unnamed_addr {
dec_label_pc_1ab3:
  %v1_1ab3 = call i32 @function_1ac6(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_1ab3
}

define i32 @function_1ab6() local_unnamed_addr {
dec_label_pc_1ab6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ab6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ab6
}

define i32 @function_1ac2() local_unnamed_addr {
dec_label_pc_1ac2:
  %v1_1ac2 = call i32 @function_1ac6(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_1ac2

; uselistorder directives
  uselistorder i32 (i32)* @function_1ac6, { 2, 1, 0 }
}

define i32 @function_1ac5() local_unnamed_addr {
dec_label_pc_1ac5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ac5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ac5
}

define i32 @function_1ac6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac6:
  %v0_1ac6 = load i32, i32* @ebp, align 4
  %v1_1ac6 = add i32 %v0_1ac6, -84
  ret i32 %v1_1ac6
}

define i32 @function_1ad1() local_unnamed_addr {
dec_label_pc_1ad1:
  %v0_1ad1 = call i32 @function_1ad5()
  ret i32 %v0_1ad1
}

define i32 @function_1ad3() local_unnamed_addr {
dec_label_pc_1ad3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ad3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ad3
}

define i32 @function_1ad5() local_unnamed_addr {
dec_label_pc_1ad5:
  %v0_1ad5 = load i32, i32* @ebp, align 4
  %v1_1ad5 = add i32 %v0_1ad5, -96
  %v1_1adb = call i32 @_ZNSt4pairISsSsED1Ev(i32 %v1_1ad5)
  %v0_1ae0 = load i32, i32* @ebx, align 4
  ret i32 %v0_1ae0

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt4pairISsSsED1Ev, { 1, 0 }
}

define i32 @function_1aea() local_unnamed_addr {
dec_label_pc_1aea:
  %v0_1aea = load i32, i32* @ebp, align 4
  %v1_1aea = add i32 %v0_1aea, -12
  %v2_1aea = inttoptr i32 %v1_1aea to i32*
  %v3_1aea = load i32, i32* %v2_1aea, align 4
  %v2_1aed = xor i32 %v3_1aea, 30
  %v3_1aed = icmp eq i32 %v2_1aed, 0
  store i32 %v2_1aed, i32* @eax, align 8
  br i1 %v3_1aed, label %bb, label %dec_label_pc_1af6

bb:                                               ; preds = %dec_label_pc_1aea
  %v1_1af4 = call i32 @function_1afb()
  br label %dec_label_pc_1af6

dec_label_pc_1af6:                                ; preds = %bb, %dec_label_pc_1aea
  %v2_1af4 = phi i32 [ %v1_1af4, %bb ], [ %v2_1aed, %dec_label_pc_1aea ]
  ret i32 %v2_1af4
}

define i32 @function_1afb() local_unnamed_addr {
dec_label_pc_1afb:
  %v0_1afb = load i32, i32* @ebp, align 4
  %v1_1afb = add i32 %v0_1afb, -4
  %v2_1afb = inttoptr i32 %v1_1afb to i32*
  %v3_1afb = load i32, i32* %v2_1afb, align 4
  store i32 %v3_1afb, i32* @ebx, align 4
  %v0_1aff = load i32, i32* @eax, align 8
  ret i32 %v0_1aff
}

define i32 @_Z6GetArgRKSsS0_(i32 %strArg, i32 %strDefault) local_unnamed_addr {
dec_label_pc_1b00:
  %v2_1b31 = call i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 21568, i32 %strDefault)
  %v1_1b36 = icmp eq i32 %v2_1b31, 0
  %v1_1b38 = icmp eq i1 %v1_1b36, false
  %v5_1b3b = icmp eq i1 %v1_1b38, false
  br i1 %v5_1b3b, label %bb, label %dec_label_pc_1b3f

bb:                                               ; preds = %dec_label_pc_1b00
  %v1_1b3d = call i32 @function_1b63()
  br label %dec_label_pc_1b3f

dec_label_pc_1b3f:                                ; preds = %bb, %dec_label_pc_1b00
  %v2_1b4d = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %strDefault)
  ret i32 %strArg
}

define i32 @function_1b61() local_unnamed_addr {
dec_label_pc_1b61:
  %v0_1b61 = call i32 @function_1b75()
  ret i32 %v0_1b61
}

define i32 @function_1b63() local_unnamed_addr {
dec_label_pc_1b63:
  %v0_1b63 = load i32, i32* @ebp, align 4
  %v1_1b6a = add i32 %v0_1b63, -28
  %v2_1b6a = inttoptr i32 %v1_1b6a to i32*
  %v3_1b6a = load i32, i32* %v2_1b6a, align 4
  ret i32 %v3_1b6a
}

define i32 @function_1b75() local_unnamed_addr {
dec_label_pc_1b75:
  %v0_1b75 = load i32, i32* @ebp, align 4
  %v1_1b75 = add i32 %v0_1b75, -28
  %v2_1b75 = inttoptr i32 %v1_1b75 to i32*
  %v3_1b75 = load i32, i32* %v2_1b75, align 4
  store i32 %v3_1b75, i32* @eax, align 8
  %v1_1b78 = add i32 %v0_1b75, -12
  %v2_1b78 = inttoptr i32 %v1_1b78 to i32*
  %v3_1b78 = load i32, i32* %v2_1b78, align 4
  %v3_1b7b = icmp eq i32 %v3_1b78, 30
  br i1 %v3_1b7b, label %bb, label %dec_label_pc_1b84

bb:                                               ; preds = %dec_label_pc_1b75
  %v1_1b82 = call i32 @function_1b89()
  br label %dec_label_pc_1b84

dec_label_pc_1b84:                                ; preds = %bb, %dec_label_pc_1b75
  %v2_1b82 = phi i32 [ %v1_1b82, %bb ], [ %v3_1b75, %dec_label_pc_1b75 ]
  ret i32 %v2_1b82
}

define i32 @function_1b89() local_unnamed_addr {
dec_label_pc_1b89:
  %v0_1b8a = load i32, i32* @eax, align 8
  ret i32 %v0_1b8a
}

define i64 @_Z6GetArgRKSsx(i32 %strArg, i64 %nDefault) local_unnamed_addr {
dec_label_pc_1b8d:
  %v2_1bbe = call i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 21568, i32 %strArg)
  %v1_1bc3 = icmp eq i32 %v2_1bbe, 0
  %v1_1bc5 = icmp eq i1 %v1_1bc3, false
  %v5_1bc8 = icmp eq i1 %v1_1bc5, false
  br i1 %v5_1bc8, label %dec_label_pc_1be9, label %dec_label_pc_1bcc

dec_label_pc_1bcc:                                ; preds = %dec_label_pc_1b8d
  %v2_1bda = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %strArg)
  %v1_1be2 = call i32 @_Z6atoi64RKSs(i32 %v2_1bda)
  br label %dec_label_pc_1bef

dec_label_pc_1be9:                                ; preds = %dec_label_pc_1b8d
  %v4_1b99 = trunc i64 %nDefault to i32
  br label %dec_label_pc_1bef

dec_label_pc_1bef:                                ; preds = %dec_label_pc_1be9, %dec_label_pc_1bcc
  %storemerge = phi i32 [ %v1_1be2, %dec_label_pc_1bcc ], [ %v4_1b99, %dec_label_pc_1be9 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1bf9 = call i32 @function_1c00()
  %v3_1bf9 = sext i32 %v1_1bf9 to i64
  ret i64 %v3_1bf9
}

define i32 @function_1c00() local_unnamed_addr {
dec_label_pc_1c00:
  %v0_1c01 = load i32, i32* @eax, align 8
  ret i32 %v0_1c01
}

define i1 @_Z10GetBoolArgRKSsb(i32 %strArg, i1 %fDefault) local_unnamed_addr {
dec_label_pc_1c02:
  %v2_1c2d = call i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 21568, i32 %strArg)
  %v1_1c32 = icmp eq i32 %v2_1c2d, 0
  %v1_1c34 = icmp eq i1 %v1_1c32, false
  %v5_1c37 = icmp eq i1 %v1_1c34, false
  br i1 %v5_1c37, label %bb, label %dec_label_pc_1c3b

bb:                                               ; preds = %dec_label_pc_1c02
  %v1_1c39 = call i32 @function_1c83()
  br label %dec_label_pc_1c3b

dec_label_pc_1c3b:                                ; preds = %bb, %dec_label_pc_1c02
  %v2_1c49 = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %strArg)
  %tmp13 = urem i32 %v2_1c49, 2
  %v4_1c4e = icmp ne i32 %tmp13, 0
  ret i1 %v4_1c4e
}

define i32 @function_1c55() local_unnamed_addr {
dec_label_pc_1c55:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c55 = load i32, i32* %eax.global-to-local, align 8
  %v2_1c55 = mul i32 %v0_1c55, 8
  %v3_1c55 = add i32 %v0_1c55, 28837748
  %v4_1c55 = add i32 %v3_1c55, %v2_1c55
  %v5_1c55 = inttoptr i32 %v4_1c55 to i32*
  %v6_1c55 = load i32, i32* %v5_1c55, align 4
  %v7_1c55 = add i32 %v6_1c55, 1
  store i32 %v7_1c55, i32* %v5_1c55, align 4
  %v2_1c5c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1c5c = load i32, i32* %eax.global-to-local, align 8
  %v4_1c5c = trunc i32 %v3_1c5c to i8
  %v5_1c5c = add i8 %v4_1c5c, %v2_1c5c
  %v21_1c5c = inttoptr i32 %v3_1c5c to i8*
  store i8 %v5_1c5c, i8* %v21_1c5c, align 1
  %v0_1c5e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c5e = load i32, i32* %ecx.global-to-local, align 4
  %v3_1c5e = lshr i32 %v2_1c5e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_1c5e = add i32 %v3_1c5e, %v0_1c5e
  %v20_1c5e = and i32 %v5_1c5e, 255
  %v22_1c5e = and i32 %v0_1c5e, -256
  %v23_1c5e = or i32 %v20_1c5e, %v22_1c5e
  store i32 %v23_1c5e, i32* %ebx.global-to-local, align 4
  %v0_1c60 = load i32, i32* @ebp, align 4
  %v1_1c60 = add i32 %v0_1c60, -28
  %v2_1c60 = inttoptr i32 %v1_1c60 to i32*
  %v3_1c60 = load i32, i32* %v2_1c60, align 4
  store i32 %v3_1c60, i32* %eax.global-to-local, align 8
  %v2_1c6f = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %v3_1c60)
  store i32 %v2_1c6f, i32* %eax.global-to-local, align 8
  %v1_1c77 = call i32 @_Z4atoiRKSs(i32 %v2_1c6f)
  %v1_1c7c = icmp eq i32 %v1_1c77, 0
  %v1_1c7e = icmp eq i1 %v1_1c7c, false
  %v2_1c7e = zext i1 %v1_1c7e to i32
  %v4_1c7e = and i32 %v1_1c77, -256
  %v5_1c7e = or i32 %v2_1c7e, %v4_1c7e
  store i32 %v5_1c7e, i32* %eax.global-to-local, align 8
  ret i32 %v5_1c7e

; uselistorder directives
  uselistorder i32 %v0_1c5e, { 1, 0 }
  uselistorder i32 %v0_1c55, { 1, 0 }
}

define i32 @function_1c83() local_unnamed_addr {
dec_label_pc_1c83:
  %v0_1c83 = load i32, i32* @ebp, align 4
  %v1_1c83 = add i32 %v0_1c83, -32
  %v2_1c83 = inttoptr i32 %v1_1c83 to i8*
  %v3_1c83 = load i8, i8* %v2_1c83, align 1
  %v4_1c83 = zext i8 %v3_1c83 to i32
  ret i32 %v4_1c83
}

define i1 @_Z10SoftSetArgRKSsS0_(i32 %strArg, i32 %strValue) local_unnamed_addr {
dec_label_pc_1c9a:
  %v2_1cc5 = call i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 21568, i32 %strArg)
  %v1_1cca = icmp eq i32 %v2_1cc5, 0
  %v1_1ccc = icmp eq i1 %v1_1cca, false
  %v5_1ccf = icmp eq i1 %v1_1ccc, false
  br i1 %v5_1ccf, label %dec_label_pc_1cda, label %dec_label_pc_1d01

dec_label_pc_1cda:                                ; preds = %dec_label_pc_1c9a
  %v2_1ce8 = call i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 21568, i32 %strArg)
  br label %dec_label_pc_1d01

dec_label_pc_1d01:                                ; preds = %dec_label_pc_1c9a, %dec_label_pc_1cda
  %storemerge = phi i32 [ 1, %dec_label_pc_1cda ], [ 0, %dec_label_pc_1c9a ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1d0b = call i32 @function_1d12()
  %tmp105 = urem i32 %v1_1d0b, 2
  %v3_1d0b = icmp ne i32 %tmp105, 0
  ret i1 %v3_1d0b

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_, { 3, 6, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32, i32)* @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1d01, { 1, 0 }
}

define i32 @function_1d12() local_unnamed_addr {
dec_label_pc_1d12:
  %v0_1d13 = load i32, i32* @eax, align 8
  ret i32 %v0_1d13
}

define i1 @_Z14SoftSetBoolArgRKSsb(i32 %strArg, i1 %fValue) local_unnamed_addr {
dec_label_pc_1d14:
  %v11_1d32 = icmp eq i1 %fValue, false
  br i1 %v11_1d32, label %bb, label %dec_label_pc_1d38

bb:                                               ; preds = %dec_label_pc_1d14
  %v5_1d36 = call i32 @function_1d89(i32 0, i32 %strArg)
  br label %dec_label_pc_1d38

dec_label_pc_1d38:                                ; preds = %bb, %dec_label_pc_1d14
  ret i1 false
}

define i32 @function_1d70() local_unnamed_addr {
dec_label_pc_1d70:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d70 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d70
}

define i32 @function_1d87() local_unnamed_addr {
dec_label_pc_1d87:
  %v0_1d87 = call i32 @function_1dd8()
  ret i32 %v0_1d87
}

define i32 @function_1d89(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d89:
  %v0_1d89 = load i32, i32* @ebp, align 4
  %v1_1da3 = add i32 %v0_1d89, -20
  ret i32 %v1_1da3
}

define i32 @function_1dc1() local_unnamed_addr {
dec_label_pc_1dc1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dc1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc1
}

define i32 @function_1dd8() local_unnamed_addr {
dec_label_pc_1dd8:
  %v0_1dd8 = load i32, i32* @ebx, align 4
  store i32 %v0_1dd8, i32* @eax, align 8
  %v0_1dda = load i32, i32* @ebp, align 4
  %v1_1dda = add i32 %v0_1dda, -12
  %v2_1dda = inttoptr i32 %v1_1dda to i32*
  %v3_1dda = load i32, i32* %v2_1dda, align 4
  %v3_1ddd = icmp eq i32 %v3_1dda, 30
  br i1 %v3_1ddd, label %bb, label %dec_label_pc_1de6

bb:                                               ; preds = %dec_label_pc_1dd8
  %v1_1de4 = call i32 @function_1e39()
  store i32 %v1_1de4, i32* @eax, align 8
  br label %dec_label_pc_1de6

dec_label_pc_1de6:                                ; preds = %bb, %dec_label_pc_1dd8
  %v0_1de6 = call i32 @function_1e34()
  ret i32 %v0_1de6
}

define i32 @function_1de9() local_unnamed_addr {
dec_label_pc_1de9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1de9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1de9
}

define i32 @function_1df5() local_unnamed_addr {
dec_label_pc_1df5:
  %v0_1df5 = call i32 @function_1df9()
  ret i32 %v0_1df5
}

define i32 @function_1df7() local_unnamed_addr {
dec_label_pc_1df7:
  %eax.global-to-local = alloca i32, align 4
  %v0_1df7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1df7
}

define i32 @function_1df9() local_unnamed_addr {
dec_label_pc_1df9:
  %v0_1e04 = load i32, i32* @ebx, align 4
  ret i32 %v0_1e04
}

define i32 @function_1e0f() local_unnamed_addr {
dec_label_pc_1e0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e0f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e0f
}

define i32 @function_1e1b() local_unnamed_addr {
dec_label_pc_1e1b:
  %v0_1e1b = call i32 @function_1e1f()
  ret i32 %v0_1e1b
}

define i32 @function_1e1d() local_unnamed_addr {
dec_label_pc_1e1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e1d
}

define i32 @function_1e1f() local_unnamed_addr {
dec_label_pc_1e1f:
  %v0_1e1f = load i32, i32* @ebp, align 4
  %v1_1e1f = add i32 %v0_1e1f, -13
  ret i32 %v1_1e1f
}

define i32 @function_1e34() local_unnamed_addr {
dec_label_pc_1e34:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e39() local_unnamed_addr {
dec_label_pc_1e39:
  %v0_1e3e = load i32, i32* @eax, align 8
  ret i32 %v0_1e3e
}

define i32 @_Z12EncodeBase64PKhj(i8* %pch, i32 %len) local_unnamed_addr {
dec_label_pc_1e3f:
  %stack_var_-17 = alloca i32, align 4
  %v2_1e63 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_1e63
}

define i32 @function_1e92() local_unnamed_addr {
dec_label_pc_1e92:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1e92 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e92 = add i32 %v0_1e92, -1065104315
  %v2_1e92 = inttoptr i32 %v1_1e92 to i32*
  %v3_1e92 = load i32, i32* %v2_1e92, align 4
  %v4_1e92 = add i32 %v3_1e92, -1
  store i32 %v4_1e92, i32* %v2_1e92, align 4
  %v0_1e98 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e98 = trunc i32 %v0_1e98 to i8
  %v3_1e98 = add i32 %v0_1e98, -1413822395
  %v4_1e98 = inttoptr i32 %v3_1e98 to i8*
  %v5_1e98 = load i8, i8* %v4_1e98, align 1
  %v6_1e98 = add i8 %v1_1e98, %v5_1e98
  %v21_1e98 = zext i8 %v6_1e98 to i32
  %v23_1e98 = and i32 %v0_1e98, -256
  %v24_1e98 = or i32 %v21_1e98, %v23_1e98
  store i32 %v24_1e98, i32* %ecx.global-to-local, align 4
  %v0_1e9e = load i32, i32* %eax.global-to-local, align 8
  %v1_1e9e = trunc i32 %v0_1e9e to i8
  %v2_1e9e = load i32, i32* %edi.global-to-local, align 8
  %v3_1e9e = inttoptr i32 %v2_1e9e to i8*
  store i8 %v1_1e9e, i8* %v3_1e9e, align 1
  %v4_1e9e = load i32, i32* %edi.global-to-local, align 8
  %v5_1e9e = load i1, i1* %df.global-to-local, align 1
  %v6_1e9e = select i1 %v5_1e9e, i32 -1, i32 1
  %v7_1e9e = add i32 %v6_1e9e, %v4_1e9e
  store i32 %v7_1e9e, i32* %edi.global-to-local, align 8
  %v0_1e9f = load i32, i32* %eax.global-to-local, align 8
  %v1_1e9f = trunc i32 %v0_1e9f to i8
  %v3_1e9f = inttoptr i32 %v7_1e9e to i8*
  store i8 %v1_1e9f, i8* %v3_1e9f, align 1
  %v4_1e9f = load i32, i32* %edi.global-to-local, align 8
  %v5_1e9f = load i1, i1* %df.global-to-local, align 1
  %v6_1e9f = select i1 %v5_1e9f, i32 -1, i32 1
  %v7_1e9f = add i32 %v6_1e9f, %v4_1e9f
  store i32 %v7_1e9f, i32* %edi.global-to-local, align 8
  %v0_1ea0 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ea0 = trunc i32 %v0_1ea0 to i8
  %v3_1ea0 = inttoptr i32 %v7_1e9f to i8*
  store i8 %v1_1ea0, i8* %v3_1ea0, align 1
  %v4_1ea0 = load i32, i32* %edi.global-to-local, align 8
  %v5_1ea0 = load i1, i1* %df.global-to-local, align 1
  %v6_1ea0 = select i1 %v5_1ea0, i32 -1, i32 1
  %v7_1ea0 = add i32 %v6_1ea0, %v4_1ea0
  store i32 %v7_1ea0, i32* %edi.global-to-local, align 8
  %v0_1ea1 = load i32, i32* @ebp, align 4
  %v1_1ea1 = add i32 %v0_1ea1, -56
  %v2_1ea1 = inttoptr i32 %v1_1ea1 to i32*
  %v3_1ea1 = load i32, i32* %v2_1ea1, align 4
  %v0_1ea4 = load i32, i32* %edx.global-to-local, align 8
  %v2_1ea4 = zext i32 %v0_1ea4 to i64
  %v3_1ea4 = zext i32 %v3_1ea1 to i64
  %v4_1ea4 = mul nuw i64 %v2_1ea4, %v3_1ea4
  %v6_1ea4 = udiv i64 %v4_1ea4, 4294967296
  %v7_1ea4 = trunc i64 %v6_1ea4 to i32
  store i32 %v7_1ea4, i32* %edx.global-to-local, align 8
  %v2_1ea81 = udiv i64 %v4_1ea4, 8589934592
  %v2_1eaa3 = mul nuw nsw i64 %v2_1ea81, 4
  %v2_1eaa = trunc i64 %v2_1eaa3 to i32
  store i32 %v2_1eaa, i32* %eax.global-to-local, align 8
  %v1_1eb1 = add i32 %v0_1ea1, -44
  %v2_1eb1 = inttoptr i32 %v1_1eb1 to i32*
  %v3_1eb1 = load i32, i32* %v2_1eb1, align 4
  store i32 %v3_1eb1, i32* %eax.global-to-local, align 8
  %v1_1ebc = add i32 %v0_1ea1, -32
  %v2_1ebc = inttoptr i32 %v1_1ebc to i32*
  store i32 0, i32* %v2_1ebc, align 4
  %v0_1ec3 = load i32, i32* @ebp, align 4
  %v1_1ec3 = add i32 %v0_1ec3, -28
  %v2_1ec3 = inttoptr i32 %v1_1ec3 to i32*
  store i32 0, i32* %v2_1ec3, align 4
  %v0_1eca = load i32, i32* @ebp, align 4
  %v1_1eca = add i32 %v0_1eca, -52
  %v2_1eca = inttoptr i32 %v1_1eca to i32*
  %v3_1eca = load i32, i32* %v2_1eca, align 4
  store i32 %v3_1eca, i32* %eax.global-to-local, align 8
  %v1_1ecd = add i32 %v0_1eca, -48
  %v2_1ecd = inttoptr i32 %v1_1ecd to i32*
  %v3_1ecd = load i32, i32* %v2_1ecd, align 4
  store i32 %v3_1ecd, i32* %edx.global-to-local, align 8
  %v2_1ed0 = add i32 %v3_1ecd, %v3_1eca
  store i32 %v2_1ed0, i32* %eax.global-to-local, align 8
  %v2_1ed2 = add i32 %v0_1eca, -24
  %v3_1ed2 = inttoptr i32 %v2_1ed2 to i32*
  store i32 %v2_1ed0, i32* %v3_1ed2, align 4
  %v2_1ed5 = call i32 @function_1fc5(i32 %v3_1eb1, i32 %v2_1eaa)
  store i32 %v2_1ed5, i32* %eax.global-to-local, align 8
  ret i32 %v2_1ed5

; uselistorder directives
  uselistorder i32 %v0_1ea1, { 1, 0, 2 }
}

define i32 @function_1eda() local_unnamed_addr {
dec_label_pc_1eda:
  %v0_1eda = load i32, i32* @ebp, align 4
  %v1_1eda = add i32 %v0_1eda, -48
  %v2_1eda = inttoptr i32 %v1_1eda to i32*
  %v3_1eda = load i32, i32* %v2_1eda, align 4
  %v1_1edd = inttoptr i32 %v3_1eda to i8*
  %v2_1edd = load i8, i8* %v1_1edd, align 1
  %v3_1edd = zext i8 %v2_1edd to i32
  %v2_1ee3 = add i32 %v0_1eda, -20
  %v3_1ee3 = inttoptr i32 %v2_1ee3 to i32*
  store i32 %v3_1edd, i32* %v3_1ee3, align 4
  %v0_1ee6 = load i32, i32* @ebp, align 4
  %v1_1ee6 = add i32 %v0_1ee6, -48
  %v2_1ee6 = inttoptr i32 %v1_1ee6 to i32*
  %v3_1ee6 = load i32, i32* %v2_1ee6, align 4
  %v4_1ee6 = add i32 %v3_1ee6, 1
  store i32 %v4_1ee6, i32* %v2_1ee6, align 4
  %v0_1eea = load i32, i32* @ebp, align 4
  %v1_1eea = add i32 %v0_1eea, -32
  %v2_1eea = inttoptr i32 %v1_1eea to i32*
  %v3_1eea = load i32, i32* %v2_1eea, align 4
  %v10_1eed = icmp eq i32 %v3_1eea, 1
  br i1 %v10_1eed, label %bb, label %dec_label_pc_1ef2

bb:                                               ; preds = %dec_label_pc_1eda
  %v1_1ef0 = call i32 @function_1f3a()
  br label %dec_label_pc_1ef2

dec_label_pc_1ef2:                                ; preds = %bb, %dec_label_pc_1eda
  %v0_1ef2 = phi i32 [ %v1_1ef0, %bb ], [ %v3_1eea, %dec_label_pc_1eda ]
  %v10_1ef2 = icmp eq i32 %v0_1ef2, 2
  br i1 %v10_1ef2, label %bb7, label %dec_label_pc_1ef7

bb7:                                              ; preds = %dec_label_pc_1ef2
  %v1_1ef5 = call i32 @function_1f75()
  br label %dec_label_pc_1ef7

dec_label_pc_1ef7:                                ; preds = %bb7, %dec_label_pc_1ef2
  %v0_1ef7 = phi i32 [ %v1_1ef5, %bb7 ], [ %v0_1ef2, %dec_label_pc_1ef2 ]
  %v1_1ef7 = icmp eq i32 %v0_1ef7, 0
  %v1_1ef9 = icmp eq i1 %v1_1ef7, false
  br i1 %v1_1ef9, label %bb8, label %dec_label_pc_1eff

bb8:                                              ; preds = %dec_label_pc_1ef7
  %v4_1ef9 = call i32 @function_1fc5(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_1eff

dec_label_pc_1eff:                                ; preds = %bb8, %dec_label_pc_1ef7
  %v0_1f05 = load i32, i32* @ebp, align 4
  %v1_1f17 = add i32 %v0_1f05, -44
  %v2_1f17 = inttoptr i32 %v1_1f17 to i32*
  %v3_1f17 = load i32, i32* %v2_1f17, align 4
  ret i32 %v3_1f17

; uselistorder directives
  uselistorder i32 %v0_1ef2, { 1, 0 }
  uselistorder i32 %v3_1eea, { 1, 0 }
}

define i32 @function_1f21() local_unnamed_addr {
dec_label_pc_1f21:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f21 = add i32 %v0_1f21, -528225211
  %v2_1f21 = inttoptr i32 %v1_1f21 to i32*
  %v3_1f21 = load i32, i32* %v2_1f21, align 4
  %v4_1f21 = add i32 %v3_1f21, -1
  store i32 %v4_1f21, i32* %v2_1f21, align 4
  %v0_1f27 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f27 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1f27 = add i32 %v1_1f27, %v0_1f27
  %v12_1f27 = icmp eq i32 %v2_1f27, 0
  %v14_1f27 = trunc i32 %v2_1f27 to i8
  store i32 %v2_1f27, i32* %eax.global-to-local, align 8
  %v1_1f29 = add i32 %v1_1f27, -1
  store i32 %v1_1f29, i32* %ecx.global-to-local, align 4
  %v2_1f29 = icmp eq i32 %v1_1f29, 0
  %v4_1f29 = or i1 %v2_1f29, %v12_1f27
  %v1_1f2b = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v4_1f29, label %dec_label_pc_1f2b, label %dec_label_pc_1f2f

dec_label_pc_1f2b:                                ; preds = %dec_label_pc_1f21
  %v2_1f2b = add i32 %v1_1f2b, -28
  %v3_1f2b = inttoptr i32 %v2_1f2b to i32*
  store i32 %v2_1f27, i32* %v3_1f2b, align 4
  %v4_1f2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_1f2b

dec_label_pc_1f2f:                                ; preds = %dec_label_pc_1f21
  %v1_1f2f = add i32 %v1_1f2b, 1
  %v9_1f2f = icmp eq i32 %v1_1f2f, 0
  store i32 %v1_1f2f, i32* @ebp, align 4
  %v1_1f30 = add i32 %v1_1f27, -2
  store i32 %v1_1f30, i32* %ecx.global-to-local, align 4
  %v2_1f30 = icmp eq i32 %v1_1f30, 0
  %v4_1f30 = or i1 %v2_1f30, %v9_1f2f
  br i1 %v4_1f30, label %dec_label_pc_1f32, label %dec_label_pc_1f33

dec_label_pc_1f32:                                ; preds = %dec_label_pc_1f2f
  ret i32 %v2_1f27

dec_label_pc_1f33:                                ; preds = %dec_label_pc_1f2f
  %v1_1f33 = inttoptr i32 %v2_1f27 to i8*
  %v2_1f33 = load i8, i8* %v1_1f33, align 1
  %v5_1f33 = add i8 %v2_1f33, %v14_1f27
  store i8 %v5_1f33, i8* %v1_1f33, align 1
  %v2_1f35 = call i32 @function_1fc5(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_1f35, i32* %eax.global-to-local, align 8
  ret i32 %v2_1f35

; uselistorder directives
  uselistorder i32 %v1_1f30, { 1, 0 }
  uselistorder i32 %v1_1f29, { 1, 0 }
  uselistorder i32 %v2_1f27, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v1_1f27, { 1, 2, 0 }
}

define i32 @function_1f3a() local_unnamed_addr {
dec_label_pc_1f3a:
  %v0_1f40 = load i32, i32* @ebp, align 4
  %v1_1f55 = add i32 %v0_1f40, -44
  %v2_1f55 = inttoptr i32 %v1_1f55 to i32*
  %v3_1f55 = load i32, i32* %v2_1f55, align 4
  ret i32 %v3_1f55
}

define i32 @function_1f60() local_unnamed_addr {
dec_label_pc_1f60:
  %v0_1f60 = load i32, i32* @ebp, align 4
  %v1_1f60 = add i32 %v0_1f60, -20
  %v2_1f60 = inttoptr i32 %v1_1f60 to i32*
  %v3_1f60 = load i32, i32* %v2_1f60, align 4
  %v1_1f63 = and i32 %v3_1f60, ptrtoint (i8* @global_var_f.2389 to i32)
  %v2_1f66 = mul i32 %v1_1f63, 4
  %v2_1f69 = add i32 %v0_1f60, -28
  %v3_1f69 = inttoptr i32 %v2_1f69 to i32*
  store i32 %v2_1f66, i32* %v3_1f69, align 4
  %v0_1f6c = load i32, i32* @ebp, align 4
  %v1_1f6c = add i32 %v0_1f6c, -32
  %v2_1f6c = inttoptr i32 %v1_1f6c to i32*
  store i32 2, i32* %v2_1f6c, align 4
  %v2_1f73 = call i32 @function_1fc5(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 %v2_1f73

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1fc5, { 3, 2, 1, 0 }
}

define i32 @function_1f75() local_unnamed_addr {
dec_label_pc_1f75:
  %v0_1f7b = load i32, i32* @ebp, align 4
  %v1_1f90 = add i32 %v0_1f7b, -44
  %v2_1f90 = inttoptr i32 %v1_1f90 to i32*
  %v3_1f90 = load i32, i32* %v2_1f90, align 4
  ret i32 %v3_1f90
}

define i32 @function_1f9a() local_unnamed_addr {
dec_label_pc_1f9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f9a
}

define i32 @function_1fc5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc5:
  %v0_1fc5 = load i32, i32* @ebp, align 4
  %v1_1fc5 = add i32 %v0_1fc5, -48
  %v2_1fc5 = inttoptr i32 %v1_1fc5 to i32*
  %v3_1fc5 = load i32, i32* %v2_1fc5, align 4
  %v2_1fc8 = add i32 %v0_1fc5, -24
  %v3_1fc8 = inttoptr i32 %v2_1fc8 to i32*
  %v4_1fc8 = load i32, i32* %v3_1fc8, align 4
  %v10_1fc8 = icmp ult i32 %v3_1fc5, %v4_1fc8
  %v5_1fce = icmp eq i1 %v10_1fc8, false
  %v1_1fd0 = icmp eq i1 %v5_1fce, false
  br i1 %v1_1fd0, label %bb, label %dec_label_pc_1fd6

bb:                                               ; preds = %dec_label_pc_1fc5
  %v2_1fd0 = call i32 @function_1eda()
  %v0_1fd6.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1fd6

dec_label_pc_1fd6:                                ; preds = %bb, %dec_label_pc_1fc5
  %v0_1fd6 = phi i32 [ %v0_1fd6.pre, %bb ], [ %v0_1fc5, %dec_label_pc_1fc5 ]
  %v1_1fd6 = add i32 %v0_1fd6, -32
  %v2_1fd6 = inttoptr i32 %v1_1fd6 to i32*
  %v3_1fd6 = load i32, i32* %v2_1fd6, align 4
  %v10_1fd6 = icmp eq i32 %v3_1fd6, 0
  br i1 %v10_1fd6, label %bb5, label %dec_label_pc_1fdc

bb5:                                              ; preds = %dec_label_pc_1fd6
  %v1_1fda = call i32 @function_2058()
  %v0_1fe2.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1fdc

dec_label_pc_1fdc:                                ; preds = %bb5, %dec_label_pc_1fd6
  %v0_1ff1 = phi i32 [ %v0_1fe2.pre, %bb5 ], [ %v0_1fd6, %dec_label_pc_1fd6 ]
  %v1_1ff1 = add i32 %v0_1ff1, -44
  %v2_1ff1 = inttoptr i32 %v1_1ff1 to i32*
  %v3_2004 = load i32, i32* %v2_1ff1, align 4
  ret i32 %v3_2004
}

define i32 @function_2028() local_unnamed_addr {
dec_label_pc_2028:
  %v0_2028 = call i32 @function_2058()
  ret i32 %v0_2028

; uselistorder directives
  uselistorder i32 ()* @function_2058, { 1, 0 }
}

define i32 @function_202b() local_unnamed_addr {
dec_label_pc_202b:
  %eax.global-to-local = alloca i32, align 4
  %v0_202b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_202b
}

define i32 @function_2042() local_unnamed_addr {
dec_label_pc_2042:
  %eax.global-to-local = alloca i32, align 4
  %v0_2042 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2042
}

define i32 @function_2058() local_unnamed_addr {
dec_label_pc_2058:
  %v0_2059 = load i32, i32* @ebp, align 4
  %v1_2059 = add i32 %v0_2059, -44
  %v2_2059 = inttoptr i32 %v1_2059 to i32*
  %v3_2059 = load i32, i32* %v2_2059, align 4
  store i32 %v3_2059, i32* @eax, align 8
  %v1_205c = add i32 %v0_2059, -12
  %v2_205c = inttoptr i32 %v1_205c to i32*
  %v3_205c = load i32, i32* %v2_205c, align 4
  %v3_205f = icmp eq i32 %v3_205c, 30
  br i1 %v3_205f, label %bb, label %dec_label_pc_2068

bb:                                               ; preds = %dec_label_pc_2058
  %v1_2066 = call i32 @function_206d()
  br label %dec_label_pc_2068

dec_label_pc_2068:                                ; preds = %bb, %dec_label_pc_2058
  %v2_2066 = phi i32 [ %v1_2066, %bb ], [ %v3_2059, %dec_label_pc_2058 ]
  ret i32 %v2_2066
}

define i32 @function_206d() local_unnamed_addr {
dec_label_pc_206d:
  %v0_2072 = load i32, i32* @eax, align 8
  ret i32 %v0_2072
}

define i32 @_Z12EncodeBase64RKSs(i32 %str) local_unnamed_addr {
dec_label_pc_2075:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp98
}

define i32 @function_209f() local_unnamed_addr {
dec_label_pc_209f:
  %eax.global-to-local = alloca i32, align 4
  %v0_209f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_209f
}

define i32 @function_20ac() local_unnamed_addr {
dec_label_pc_20ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_20ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20ac
}

define i32 @function_20d7() local_unnamed_addr {
dec_label_pc_20d7:
  %eax.global-to-local = alloca i32, align 4
  %v0_20db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20db
}

define %"vector<unsignedchar,std::allocator<unsignedchar>>.29" @_Z12DecodeBase64PKcPb(i8* %p, i1* %pfInvalid) local_unnamed_addr {
dec_label_pc_20de:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-19 = alloca i8, align 1
  %vchRet_-56 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>.2", align 8
  %tmp125 = call i32 @__decompiler_undefined_function_0()
  %vchRet_-52 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>.1", align 8
  %v4_20eb = ptrtoint i1* %pfInvalid to i32
  %v4_20ee = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.1" undef, i32 %v4_20eb, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.1" %v4_20ee, %"vector<unsignedchar,std::allocator<unsignedchar>>.1"* %vchRet_-52, align 8
  %v4_20f4 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.2" undef, i32 %tmp125, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.2" %v4_20f4, %"vector<unsignedchar,std::allocator<unsignedchar>>.2"* %vchRet_-56, align 8
  %v4_2102 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>.2", %"vector<unsignedchar,std::allocator<unsignedchar>>.2"* %vchRet_-56, i32 0, i32 0
  %v5_2102 = load i32, i32* %v4_2102, align 8
  %v12_2102 = icmp eq i32 %v5_2102, 0
  br i1 %v12_2102, label %dec_label_pc_210e, label %dec_label_pc_2108

dec_label_pc_2108:                                ; preds = %dec_label_pc_20de
  %v1_210b = inttoptr i32 %v5_2102 to i8*
  store i8 0, i8* %v1_210b, align 1
  br label %dec_label_pc_210e

dec_label_pc_210e:                                ; preds = %dec_label_pc_2108, %dec_label_pc_20de
  %v4_210e = ptrtoint i8* %p to i32
  %v2_2114 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v4_210e)
  %v4_2119 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>.1", %"vector<unsignedchar,std::allocator<unsignedchar>>.1"* %vchRet_-52, i32 0, i32 0
  %v5_2119 = load i32, i32* %v4_2119, align 8
  store i32 %v5_2119, i32* @edx, align 8
  %v2_212a = mul i32 %v5_2119, 3
  %v2_212c = udiv i32 %v2_212a, 4
  %tmp141 = bitcast i8* %p to i32*
  %v4_2139 = call i32 @_ZNSt6vectorIhSaIhEE7reserveEj(i32* %tmp141, i32 %v2_212c)
  %v2_2220 = ptrtoint i8* %stack_var_-17 to i32
  %v2_21b5 = ptrtoint i8* %stack_var_-19 to i32
  %v2_21ec = ptrtoint i8* %stack_var_-18 to i32
  br label %dec_label_pc_214c.outer.outer

dec_label_pc_214c.outer.outer:                    ; preds = %dec_label_pc_21a2, %dec_label_pc_21d9, %dec_label_pc_2190, %dec_label_pc_210e
  %dec_-28.0.ph.ph = phi i32 [ 0, %dec_label_pc_210e ], [ %v1_21ca, %dec_label_pc_21a2 ], [ %v1_2201, %dec_label_pc_21d9 ], [ %v4_2155, %dec_label_pc_2190 ]
  %dec_-32.0.ph.ph = phi i32 [ 0, %dec_label_pc_210e ], [ 2, %dec_label_pc_21a2 ], [ ptrtoint (i32* @global_var_3.2378 to i32), %dec_label_pc_21d9 ], [ 1, %dec_label_pc_2190 ]
  %v2_2213 = mul i32 %dec_-28.0.ph.ph, 64
  br label %dec_label_pc_214c.outer

dec_label_pc_214c.outer:                          ; preds = %dec_label_pc_214c.outer.outer, %dec_label_pc_2210
  %dec_-32.0.ph = phi i32 [ 0, %dec_label_pc_2210 ], [ %dec_-32.0.ph.ph, %dec_label_pc_214c.outer.outer ]
  %v5_2170 = icmp eq i32 %dec_-32.0.ph, 0
  %v10_2170 = icmp eq i32 %dec_-32.0.ph, 1
  %v8_2178 = icmp sgt i32 %dec_-32.0.ph, 1
  %v10_2180 = icmp eq i32 %dec_-32.0.ph, 2
  %v10_2185 = icmp eq i32 %dec_-32.0.ph, 3
  br label %dec_label_pc_214c

dec_label_pc_214c:                                ; preds = %dec_label_pc_2185, %dec_label_pc_217a, %dec_label_pc_214c.outer
  %v5_214c = load i32, i32* %v4_2119, align 8
  %v1_214f = inttoptr i32 %v5_214c to i8*
  %v2_214f = load i8, i8* %v1_214f, align 1
  %v3_214f = zext i8 %v2_214f to i32
  %v1_2155 = mul i32 %v3_214f, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2155 = add i32 %v1_2155, ptrtoint (i32* @global_var_e0e0.2400 to i32)
  %v3_2155 = inttoptr i32 %v2_2155 to i32*
  %v4_2155 = load i32, i32* %v3_2155, align 4
  %v13_215f = icmp eq i32 %v4_2155, -1
  br i1 %v13_215f, label %dec_label_pc_223f, label %dec_label_pc_2169

dec_label_pc_2169:                                ; preds = %dec_label_pc_214c
  %v6_2169 = add i32 %v5_214c, 1
  %v24_2169 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.1" undef, i32 %v6_2169, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.1" %v24_2169, %"vector<unsignedchar,std::allocator<unsignedchar>>.1"* %vchRet_-52, align 8
  br i1 %v10_2170, label %dec_label_pc_21a2, label %dec_label_pc_2175

dec_label_pc_2175:                                ; preds = %dec_label_pc_2169
  br i1 %v8_2178, label %dec_label_pc_2180, label %dec_label_pc_217a

dec_label_pc_217a:                                ; preds = %dec_label_pc_2175
  br i1 %v5_2170, label %dec_label_pc_2190, label %dec_label_pc_214c

dec_label_pc_2180:                                ; preds = %dec_label_pc_2175
  br i1 %v10_2180, label %dec_label_pc_21d9, label %dec_label_pc_2185

dec_label_pc_2185:                                ; preds = %dec_label_pc_2180
  br i1 %v10_2185, label %dec_label_pc_2210, label %dec_label_pc_214c

dec_label_pc_2190:                                ; preds = %dec_label_pc_217a
  br label %dec_label_pc_214c.outer.outer

dec_label_pc_21a2:                                ; preds = %dec_label_pc_2169
  %v2_21a5 = mul i32 %dec_-28.0.ph.ph, 4
  %v2_21ad = ashr i32 %v4_2155, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_21b0 = or i32 %v2_21ad, %v2_21a5
  %v5_21b0 = trunc i32 %v2_21b0 to i8
  store i8 %v5_21b0, i8* %stack_var_-19, align 1
  %v3_21c2 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_210e, i32 %v2_21b5)
  %v1_21ca = and i32 %v4_2155, ptrtoint (i8* @global_var_f.2389 to i32)
  br label %dec_label_pc_214c.outer.outer

dec_label_pc_21d9:                                ; preds = %dec_label_pc_2180
  %v2_21dc = shl i32 %dec_-28.0.ph.ph, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_21e4 = sdiv i32 %v4_2155, 4
  %v2_21e7 = or i32 %v2_21e4, %v2_21dc
  %v5_21e7 = trunc i32 %v2_21e7 to i8
  store i8 %v5_21e7, i8* %stack_var_-18, align 1
  %v3_21f9 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_210e, i32 %v2_21ec)
  %v1_2201 = and i32 %v4_2155, ptrtoint (i32* @global_var_3.2378 to i32)
  br label %dec_label_pc_214c.outer.outer

dec_label_pc_2210:                                ; preds = %dec_label_pc_2185
  %v2_221b = or i32 %v4_2155, %v2_2213
  %v5_221b = trunc i32 %v2_221b to i8
  store i8 %v5_221b, i8* %stack_var_-17, align 1
  %v3_222d = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_210e, i32 %v2_2220)
  br label %dec_label_pc_214c.outer

dec_label_pc_223f:                                ; preds = %dec_label_pc_214c
  %v5_2240 = load i32, i32* %v4_2102, align 8
  %v12_2240 = icmp eq i32 %v5_2240, 0
  br i1 %v12_2240, label %bb, label %dec_label_pc_224a

bb:                                               ; preds = %dec_label_pc_223f
  %v2_2244 = call i32 @function_22fd(i32 %v4_2155)
  br label %dec_label_pc_224a

dec_label_pc_224a:                                ; preds = %bb, %dec_label_pc_223f
  br i1 %v10_2170, label %dec_label_pc_226d, label %dec_label_pc_2252

dec_label_pc_2252:                                ; preds = %dec_label_pc_224a
  br i1 %v8_2178, label %dec_label_pc_225e, label %dec_label_pc_2257

dec_label_pc_2257:                                ; preds = %dec_label_pc_2252
  %v0_2259 = call i32 @function_2304()
  %v2_2259 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.29" undef, i32 %v0_2259, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.29" %v2_2259

dec_label_pc_225e:                                ; preds = %dec_label_pc_2252
  br i1 %v10_2180, label %dec_label_pc_2278, label %dec_label_pc_2263

dec_label_pc_2263:                                ; preds = %dec_label_pc_225e
  br i1 %v10_2185, label %dec_label_pc_22b5, label %dec_label_pc_2268

dec_label_pc_2268:                                ; preds = %dec_label_pc_2263
  %v1_2268 = call i32 @function_22fd(i32 %dec_-32.0.ph)
  %v3_2268 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.29" undef, i32 %v1_2268, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.29" %v3_2268

dec_label_pc_226d:                                ; preds = %dec_label_pc_224a
  %v1_2270 = inttoptr i32 %v5_2240 to i8*
  store i8 1, i8* %v1_2270, align 1
  %v0_2273 = call i32 @function_2304()
  %v2_2273 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.29" undef, i32 %v0_2273, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.29" %v2_2273

dec_label_pc_2278:                                ; preds = %dec_label_pc_225e
  %v10_2278 = icmp eq i32 %dec_-28.0.ph.ph, 0
  %v1_227c = icmp eq i1 %v10_2278, false
  br i1 %v1_227c, label %dec_label_pc_22ad, label %dec_label_pc_227e

dec_label_pc_227e:                                ; preds = %dec_label_pc_2278
  %v2_2281 = load i8, i8* %v1_214f, align 1
  %v11_2284 = icmp eq i8 %v2_2281, 61
  %v1_2286 = icmp eq i1 %v11_2284, false
  br i1 %v1_2286, label %dec_label_pc_22ad, label %dec_label_pc_2288

dec_label_pc_2288:                                ; preds = %dec_label_pc_227e
  %v1_228b = add i32 %v5_214c, 1
  %v1_228e = inttoptr i32 %v1_228b to i8*
  %v2_228e = load i8, i8* %v1_228e, align 1
  %v11_2291 = icmp eq i8 %v2_228e, 61
  %v1_2293 = icmp eq i1 %v11_2291, false
  br i1 %v1_2293, label %dec_label_pc_22ad, label %dec_label_pc_2295

dec_label_pc_2295:                                ; preds = %dec_label_pc_2288
  %v1_2298 = add i32 %v5_214c, 2
  %v1_229b = inttoptr i32 %v1_2298 to i8*
  %v2_229b = load i8, i8* %v1_229b, align 1
  %v3_229b = zext i8 %v2_229b to i32
  %v1_22a1 = mul nuw nsw i32 %v3_229b, 4
  %v2_22a1 = add i32 %v1_22a1, ptrtoint (i32* @global_var_e0e0.2400 to i32)
  %v3_22a1 = inttoptr i32 %v2_22a1 to i32*
  %v4_22a1 = load i32, i32* %v3_22a1, align 4
  %v10_22a8 = icmp eq i32 %v4_22a1, -1
  br i1 %v10_22a8, label %bb148, label %dec_label_pc_22ad

bb148:                                            ; preds = %dec_label_pc_2295
  %v1_22ab = call i32 @function_2300()
  br label %dec_label_pc_22ad

dec_label_pc_22ad:                                ; preds = %bb148, %dec_label_pc_2295, %dec_label_pc_2288, %dec_label_pc_227e, %dec_label_pc_2278
  %v1_22b0 = inttoptr i32 %v5_2240 to i8*
  store i8 1, i8* %v1_22b0, align 1
  %v0_22b3 = call i32 @function_2300()
  %v2_22b3 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.29" undef, i32 %v0_22b3, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.29" %v2_22b3

dec_label_pc_22b5:                                ; preds = %dec_label_pc_2263
  %v10_22b5 = icmp eq i32 %dec_-28.0.ph.ph, 0
  %v1_22b9 = icmp eq i1 %v10_22b5, false
  br i1 %v1_22b9, label %dec_label_pc_22dd, label %dec_label_pc_22bb

dec_label_pc_22bb:                                ; preds = %dec_label_pc_22b5
  %v2_22be = load i8, i8* %v1_214f, align 1
  %v11_22c1 = icmp eq i8 %v2_22be, 61
  %v1_22c3 = icmp eq i1 %v11_22c1, false
  br i1 %v1_22c3, label %dec_label_pc_22dd, label %dec_label_pc_22c5

dec_label_pc_22c5:                                ; preds = %dec_label_pc_22bb
  %v1_22c8 = add i32 %v5_214c, 1
  %v1_22cb = inttoptr i32 %v1_22c8 to i8*
  %v2_22cb = load i8, i8* %v1_22cb, align 1
  %v3_22cb = zext i8 %v2_22cb to i32
  %v1_22d1 = mul nuw nsw i32 %v3_22cb, 4
  %v2_22d1 = add i32 %v1_22d1, ptrtoint (i32* @global_var_e0e0.2400 to i32)
  %v3_22d1 = inttoptr i32 %v2_22d1 to i32*
  %v4_22d1 = load i32, i32* %v3_22d1, align 4
  store i32 %v4_22d1, i32* @eax, align 8
  %v10_22d8 = icmp eq i32 %v4_22d1, -1
  br i1 %v10_22d8, label %bb151, label %dec_label_pc_22dd

bb151:                                            ; preds = %dec_label_pc_22c5
  %v1_22db = call i32 @function_2303()
  br label %dec_label_pc_22dd

dec_label_pc_22dd:                                ; preds = %bb151, %dec_label_pc_22c5, %dec_label_pc_22bb, %dec_label_pc_22b5
  store i32 %v5_2240, i32* @eax, align 8
  %v1_22e0 = inttoptr i32 %v5_2240 to i8*
  store i8 1, i8* %v1_22e0, align 1
  %v0_22e4 = call i32 @function_2303()
  %v2_22e4 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.29" undef, i32 %v0_22e4, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.29" %v2_22e4

; uselistorder directives
  uselistorder i32 %v5_2240, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_2155, { 3, 7, 6, 1, 4, 5, 0, 2 }
  uselistorder i8* %v1_214f, { 1, 0, 2 }
  uselistorder i32 %v5_214c, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v10_2185, { 1, 0 }
  uselistorder i1 %v10_2180, { 1, 0 }
  uselistorder i1 %v10_2170, { 1, 0 }
  uselistorder i32 %dec_-32.0.ph, { 3, 0, 1, 5, 2, 4 }
  uselistorder i32 %dec_-28.0.ph.ph, { 2, 3, 4, 0, 1 }
  uselistorder %"vector<unsignedchar,std::allocator<unsignedchar>>.1"* %vchRet_-52, { 1, 0, 2 }
  uselistorder i8* %stack_var_-19, { 1, 0 }
  uselistorder i8* %stack_var_-18, { 1, 0 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32 ()* @function_2303, { 1, 0 }
  uselistorder i32 ()* @function_2300, { 1, 0 }
  uselistorder i32 (i32)* @function_22fd, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_e0e0.2400 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_214c.outer, { 1, 0 }
  uselistorder label %dec_label_pc_214c.outer.outer, { 1, 0, 2, 3 }
}

define i32 @function_22e7() local_unnamed_addr {
dec_label_pc_22e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_22e7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22e7
}

define i32 @function_22fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_22fd:
  %v0_22fe = call i32 @function_2304()
  ret i32 %v0_22fe
}

define i32 @function_2300() local_unnamed_addr {
dec_label_pc_2300:
  %v0_2301 = call i32 @function_2304()
  ret i32 %v0_2301

; uselistorder directives
  uselistorder i32 ()* @function_2304, { 3, 2, 1, 0 }
}

define i32 @function_2303() local_unnamed_addr {
dec_label_pc_2303:
  %v0_2303 = load i32, i32* @eax, align 8
  ret i32 %v0_2303
}

define i32 @function_2304() local_unnamed_addr {
dec_label_pc_2304:
  %v0_2304 = load i32, i32* @ebp, align 4
  %v1_2304 = add i32 %v0_2304, -44
  %v2_2304 = inttoptr i32 %v1_2304 to i32*
  %v3_2304 = load i32, i32* %v2_2304, align 4
  ret i32 %v3_2304
}

define i32 @_Z12DecodeBase64RKSs(i32 %str) local_unnamed_addr {
dec_label_pc_2320:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp98
}

define i32 @function_234a() local_unnamed_addr {
dec_label_pc_234a:
  %eax.global-to-local = alloca i32, align 4
  %v0_234a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_234a
}

define i32 @function_237c() local_unnamed_addr {
dec_label_pc_237c:
  %eax.global-to-local = alloca i32, align 4
  %v0_237c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_237c
}

define i32 @function_23b4() local_unnamed_addr {
dec_label_pc_23b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23b4 = load i32, i32* @ebp, align 4
  %v1_23b4 = add i32 %v0_23b4, 76145733
  %v2_23b4 = inttoptr i32 %v1_23b4 to i32*
  %v3_23b4 = load i32, i32* %v2_23b4, align 4
  %v4_23b4 = add i32 %v3_23b4, -1
  store i32 %v4_23b4, i32* %v2_23b4, align 4
  %v0_23ba = load i32, i32* %eax.global-to-local, align 8
  %v11_23ba = and i32 %v0_23ba, -24
  store i32 %v11_23ba, i32* @eax, align 8
  %v0_23bc = load i32, i32* %ecx.global-to-local, align 4
  %v1_23bc = add i32 %v0_23bc, -1
  store i32 %v1_23bc, i32* %ecx.global-to-local, align 4
  %v2_23bc = icmp eq i32 %v1_23bc, 0
  br i1 %v2_23bc, label %dec_label_pc_23be, label %bb

bb:                                               ; preds = %dec_label_pc_23b4
  %v3_23bc = call i32 @function_23e0()
  store i32 %v3_23bc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_23be

dec_label_pc_23be:                                ; preds = %dec_label_pc_23b4, %bb
  %v20_23be = phi i32 [ %v11_23ba, %dec_label_pc_23b4 ], [ %v3_23bc, %bb ]
  %v1_23be = inttoptr i32 %v20_23be to i32*
  %v2_23be = load i32, i32* %v1_23be, align 4
  %v4_23be = add i32 %v2_23be, %v20_23be
  store i32 %v4_23be, i32* %v1_23be, align 4
  %v0_23c0 = load i32, i32* @ebp, align 4
  %v1_23c0 = add i32 %v0_23c0, -44
  %v2_23c0 = inttoptr i32 %v1_23c0 to i32*
  %v3_23c0 = load i32, i32* %v2_23c0, align 4
  store i32 %v3_23c0, i32* @eax, align 8
  %v1_23c3 = add i32 %v0_23c0, -12
  %v2_23c3 = inttoptr i32 %v1_23c3 to i32*
  %v3_23c3 = load i32, i32* %v2_23c3, align 4
  %v3_23c6 = icmp eq i32 %v3_23c3, 30
  br i1 %v3_23c6, label %bb97, label %dec_label_pc_23cf

bb97:                                             ; preds = %dec_label_pc_23be
  %v1_23cd = call i32 @function_23f8()
  store i32 %v1_23cd, i32* @eax, align 8
  br label %dec_label_pc_23cf

dec_label_pc_23cf:                                ; preds = %bb97, %dec_label_pc_23be
  %v0_23cf = call i32 @function_23f3()
  store i32 %v0_23cf, i32* %eax.global-to-local, align 8
  ret i32 %v0_23cf

; uselistorder directives
  uselistorder i32 %v1_23bc, { 1, 0 }
  uselistorder i32 %v11_23ba, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_23be, { 1, 0 }
}

define i32 @function_23d2() local_unnamed_addr {
dec_label_pc_23d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_23d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23d2
}

define i32 @function_23e0() local_unnamed_addr {
dec_label_pc_23e0:
  %v0_23e4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev()
  %v0_23e9 = load i32, i32* @ebx, align 4
  ret i32 %v0_23e9
}

define i32 @function_23f3() local_unnamed_addr {
dec_label_pc_23f3:
  %v0_23f3 = load i32, i32* @eax, align 8
  ret i32 %v0_23f3
}

define i32 @function_23f8() local_unnamed_addr {
dec_label_pc_23f8:
  %v0_23fc = load i32, i32* @eax, align 8
  ret i32 %v0_23fc
}

define i32 @_Z12EncodeBase32PKhj(i8* %pch, i32 %len) local_unnamed_addr {
dec_label_pc_23ff:
  %stack_var_-17 = alloca i32, align 4
  %v2_2423 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2423
}

define i32 @function_247c() local_unnamed_addr {
dec_label_pc_247c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %tmp95 = call i32 @__decompiler_undefined_function_0()
  %v1_247c = add i32 %tmp95, 1
  store i32 %v1_247c, i32* %edi.global-to-local, align 8
  %v0_247e = load i32, i32* %ebp.global-to-local, align 4
  %v1_247e = add i32 %v0_247e, 1
  store i32 %v1_247e, i32* %ebp.global-to-local, align 4
  %v3_247f = load double, double* bitcast (i32* @eax to double*), align 8
  %v4_247f = fpext double %v3_247f to x86_fp80
  %v5_247f = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_247f = fadd x86_fp80 %v4_247f, %v5_247f
  store x86_fp80 %v6_247f, x86_fp80* %st0.global-to-local, align 4
  %tmp98 = bitcast double %v3_247f to i64
  %tmp99 = trunc i64 %tmp98 to i8
  %tmp100 = trunc i64 %tmp98 to i32
  %v5_2481 = mul i8 %tmp99, 2
  %v21_2481 = inttoptr i32 %tmp100 to i8*
  store i8 %v5_2481, i8* %v21_2481, align 1
  %v0_2483 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2483 = lshr i32 %v0_2483, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2483 = load i32, i32* %eax.global-to-local, align 8
  %v4_2483 = trunc i32 %v3_2483 to i8
  %v5_2483 = add i32 %v1_2483, %v3_2483
  %v20_2483 = urem i32 %v5_2483, 256
  %v22_2483 = shl i32 %v20_2483, ptrtoint (i32* @global_var_8.2379 to i32)
  %v23_2483 = and i32 %v0_2483, -65281
  %v24_2483 = or i32 %v22_2483, %v23_2483
  store i32 %v24_2483, i32* %ebx.global-to-local, align 4
  %v0_2485 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2485 = add i32 %v0_2485, 1
  store i32 %v1_2485, i32* @ebp, align 4
  %v0_2486 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2486 = add i32 %v0_2486, -1
  store i32 %v1_2486, i32* %ecx.global-to-local, align 4
  %v5_2488 = mul i8 %v4_2483, 2
  %v21_2488 = inttoptr i32 %v3_2483 to i8*
  store i8 %v5_2488, i8* %v21_2488, align 1
  %v0_248a = load i32, i32* %ebx.global-to-local, align 4
  %v1_248a = add i32 %v0_248a, 1435225157
  %v2_248a = inttoptr i32 %v1_248a to i8*
  %v3_248a = load i8, i8* %v2_248a, align 1
  %v4_248a = load i32, i32* %ecx.global-to-local, align 4
  %v5_248a = trunc i32 %v4_248a to i8
  %v6_248a = add i8 %v5_248a, %v3_248a
  store i8 %v6_248a, i8* %v2_248a, align 1
  %v0_2490 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2490 = inttoptr i32 %v0_2490 to i8*
  %v2_2490 = load i8, i8* %v1_2490, align 1
  %v3_2490 = mul i8 %v2_2490, 2
  %v4_2490 = lshr i8 %v2_2490, ptrtoint (i32* @global_var_7.2402 to i8)
  %v5_2490 = or i8 %v4_2490, %v3_2490
  store i8 %v5_2490, i8* %v1_2490, align 1
  %v0_2492 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2492 = add i32 %v0_2492, -1293293499
  %v2_2492 = inttoptr i32 %v1_2492 to i8*
  %v3_2492 = load i8, i8* %v2_2492, align 1
  %v4_2492 = udiv i8 %v3_2492, 2
  %v5_2492 = shl i8 %v3_2492, ptrtoint (i32* @global_var_7.2402 to i8)
  %v6_2492 = or i8 %v4_2492, %v5_2492
  store i8 %v6_2492, i8* %v2_2492, align 1
  %v2_2498 = load i32, i32* %eax.global-to-local, align 8
  %v4_2498 = mul i32 %v2_2498, 2
  %v21_2498 = inttoptr i32 %v2_2498 to i32*
  store i32 %v4_2498, i32* %v21_2498, align 4
  %v0_249a = load i32, i32* %ebx.global-to-local, align 4
  %v1_249a = add i32 %v0_249a, -1240477627
  %v2_249a = inttoptr i32 %v1_249a to i8*
  %v3_249a = load i8, i8* %v2_249a, align 1
  %v4_249a = load i32, i32* %ecx.global-to-local, align 4
  %v5_249a = trunc i32 %v4_249a to i8
  %v6_249a = add i8 %v5_249a, %v3_249a
  store i8 %v6_249a, i8* %v2_249a, align 1
  %v0_24a0 = load i32, i32* %edi.global-to-local, align 8
  %v1_24a0 = inttoptr i32 %v0_24a0 to i8*
  %v2_24a0 = load i8, i8* %v1_24a0, align 1
  %v3_24a0 = load i32, i32* %ecx.global-to-local, align 4
  %v4_24a0 = trunc i32 %v3_24a0 to i8
  %v5_24a0 = add i8 %v4_24a0, %v2_24a0
  store i8 %v5_24a0, i8* %v1_24a0, align 1
  %v0_24a2 = load i32, i32* %edx.global-to-local, align 8
  %v1_24a2 = and i32 %v0_24a2, -65281
  %v2_24a2 = or i32 %v1_24a2, ptrtoint ([278 x i8]* @global_var_c000.2403 to i32)
  store i32 %v2_24a2, i32* %edx.global-to-local, align 8
  %v0_24a4 = load i32, i32* %eax.global-to-local, align 8
  %v1_24a4 = load i32, i32* @ebp, align 4
  %v2_24a4 = add i32 %v1_24a4, -20
  %v3_24a4 = inttoptr i32 %v2_24a4 to i32*
  store i32 %v0_24a4, i32* %v3_24a4, align 4
  %v0_24a7 = load i32, i32* @ebp, align 4
  %v1_24a7 = add i32 %v0_24a7, -48
  %v2_24a7 = inttoptr i32 %v1_24a7 to i32*
  %v3_24a7 = load i32, i32* %v2_24a7, align 4
  %v4_24a7 = add i32 %v3_24a7, 1
  store i32 %v4_24a7, i32* %v2_24a7, align 4
  %v0_24ab = load i32, i32* @ebp, align 4
  %v1_24ab = add i32 %v0_24ab, -36
  %v2_24ab = inttoptr i32 %v1_24ab to i32*
  %v3_24ab = load i32, i32* %v2_24ab, align 4
  %tmp103 = icmp ult i32 %v3_24ab, 5
  br i1 %tmp103, label %dec_label_pc_24b5, label %bb

bb:                                               ; preds = %dec_label_pc_247c
  %v4_24af = call i32 @function_264d()
  store i32 %v4_24af, i32* %eax.global-to-local, align 8
  %v0_24b5.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24b5

dec_label_pc_24b5:                                ; preds = %dec_label_pc_247c, %bb
  %v0_24b5 = phi i32 [ %v0_24ab, %dec_label_pc_247c ], [ %v0_24b5.pre, %bb ]
  %v1_24b5 = add i32 %v0_24b5, -36
  %v2_24b5 = inttoptr i32 %v1_24b5 to i32*
  %v3_24b5 = load i32, i32* %v2_24b5, align 4
  %v2_24b8 = mul i32 %v3_24b5, 4
  %v1_24bb = add i32 %v2_24b8, ptrtoint (i32* @global_var_5bd4.2404 to i32)
  store i32 %v1_24bb, i32* %eax.global-to-local, align 8
  %v1_24c0 = inttoptr i32 %v1_24bb to i32*
  %v2_24c0 = load i32, i32* %v1_24c0, align 4
  store i32 %v2_24c0, i32* %eax.global-to-local, align 8
  ret i32 %v2_24c0

; uselistorder directives
  uselistorder i32 %v2_2498, { 1, 0 }
  uselistorder i8 %v3_2492, { 1, 0 }
  uselistorder i8 %v2_2490, { 1, 0 }
  uselistorder i32 %v3_2483, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_24b5, { 1, 0 }
}

define i32 @function_24e6(i16 %arg1) local_unnamed_addr {
dec_label_pc_24e6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_24e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24e6 = add i32 %v0_24e6, -528225211
  %v2_24e6 = inttoptr i32 %v1_24e6 to i32*
  %v3_24e6 = load i32, i32* %v2_24e6, align 4
  %v4_24e6 = add i32 %v3_24e6, -1
  store i32 %v4_24e6, i32* %v2_24e6, align 4
  %v0_24ed = load i32, i32* %eax.global-to-local, align 8
  %v2_24ed = mul i32 %v0_24ed, 4
  store i32 %v2_24ed, i32* %eax.global-to-local, align 8
  %v1_24f0 = load i32, i32* @ebp, align 4
  %v2_24f0 = add i32 %v1_24f0, -32
  %v3_24f0 = inttoptr i32 %v2_24f0 to i32*
  store i32 %v2_24ed, i32* %v3_24f0, align 4
  %v0_24f3 = load i32, i32* @ebp, align 4
  %v1_24f3 = add i32 %v0_24f3, -36
  %v2_24f3 = inttoptr i32 %v1_24f3 to i32*
  store i32 1, i32* %v2_24f3, align 4
  %v0_24fa = call i32 @function_264d()
  store i32 %v0_24fa, i32* %eax.global-to-local, align 8
  ret i32 %v0_24fa

; uselistorder directives
  uselistorder i32 %v2_24ed, { 1, 0 }
}

define i32 @function_2524() local_unnamed_addr {
dec_label_pc_2524:
  %eax.global-to-local = alloca i32, align 4
  %v0_2524 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2524
}

define i32 @function_2548() local_unnamed_addr {
dec_label_pc_2548:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_2548 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2548 = add i32 %v0_2548, -528225211
  %v2_2548 = inttoptr i32 %v1_2548 to i32*
  %v3_2548 = load i32, i32* %v2_2548, align 4
  %v4_2548 = add i32 %v3_2548, -1
  store i32 %v4_2548, i32* %v2_2548, align 4
  %v0_254e = load i32, i32* %ecx.global-to-local, align 4
  %v1_254e = load i32, i32* %eax.global-to-local, align 8
  %v2_254e = add i32 %v1_254e, %v0_254e
  %v12_254e = icmp eq i32 %v2_254e, 0
  %v1_2550 = add i32 %v2_254e, -1
  store i32 %v1_2550, i32* %ecx.global-to-local, align 4
  %v2_2550 = icmp eq i32 %v1_2550, 0
  %v4_2550 = or i1 %v12_254e, %v2_2550
  %v1_2552 = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v4_2550, label %dec_label_pc_2552, label %dec_label_pc_2556

dec_label_pc_2552:                                ; preds = %dec_label_pc_2548
  %v2_2552 = add i32 %v1_2552, -32
  %v3_2552 = inttoptr i32 %v2_2552 to i32*
  store i32 %v1_254e, i32* %v3_2552, align 4
  %v4_2552 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_2552

dec_label_pc_2556:                                ; preds = %dec_label_pc_2548
  %tmp98 = trunc i32 %v1_254e to i8
  %v1_2556 = add i32 %v1_2552, 1
  store i32 %v1_2556, i32* %ebp.global-to-local, align 4
  %v3_2557 = load double, double* bitcast (i32* @edx to double*), align 8
  %v4_2557 = fpext double %v3_2557 to x86_fp80
  %v5_2557 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_2557 = fadd x86_fp80 %v4_2557, %v5_2557
  store x86_fp80 %v6_2557, x86_fp80* %st0.global-to-local, align 4
  %v5_2559 = mul i8 %tmp98, 2
  %v21_2559 = inttoptr i32 %v1_254e to i8*
  store i8 %v5_2559, i8* %v21_2559, align 1
  %v0_255b = load i32, i32* %ecx.global-to-local, align 4
  %v3_255b = lshr i32 %v0_255b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_255b = add i32 %v3_255b, %v0_255b
  %v20_255b = urem i32 %v5_255b, 256
  %v22_255b = and i32 %v0_255b, -256
  %v23_255b = or i32 %v20_255b, %v22_255b
  store i32 %v23_255b, i32* %ecx.global-to-local, align 4
  %v2_255e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_255e = load i32, i32* %eax.global-to-local, align 8
  %v4_255e = trunc i32 %v3_255e to i8
  %v5_255e = add i8 %v4_255e, %v2_255e
  %v21_255e = inttoptr i32 %v3_255e to i8*
  store i8 %v5_255e, i8* %v21_255e, align 1
  %v0_2560 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2560 = add i32 %v0_2560, 5518357
  %v2_2560 = inttoptr i32 %v1_2560 to i8*
  %v3_2560 = load i8, i8* %v2_2560, align 1
  %v4_2560 = load i32, i32* %ecx.global-to-local, align 4
  %v5_2560 = trunc i32 %v4_2560 to i8
  %v6_2560 = add i8 %v5_2560, %v3_2560
  store i8 %v6_2560, i8* %v2_2560, align 1
  %v0_2566 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2566 = add i32 %v0_2566, -121508795
  %v2_2566 = inttoptr i32 %v1_2566 to i8*
  %v3_2566 = load i8, i8* %v2_2566, align 1
  %v4_2566 = load i32, i32* %ecx.global-to-local, align 4
  %v5_2566 = trunc i32 %v4_2566 to i8
  %v6_2566 = add i8 %v5_2566, %v3_2566
  store i8 %v6_2566, i8* %v2_2566, align 1
  %v0_256c = load i32, i32* %eax.global-to-local, align 8
  %v2_256c = add i32 %v0_256c, zext (i8 ptrtoint (i8* @global_var_b.2405 to i8) to i32)
  %v16_256c = and i32 %v2_256c, 255
  %v18_256c = and i32 %v0_256c, -256
  %v19_256c = or i32 %v16_256c, %v18_256c
  store i32 %v19_256c, i32* %eax.global-to-local, align 8
  %v0_256e = load i32, i32* %ebp.global-to-local, align 4
  %v1_256e = add i32 %v0_256e, 1
  %v9_256e = icmp eq i32 %v1_256e, 0
  store i32 %v1_256e, i32* %ebp.global-to-local, align 4
  %v0_256f = load i32, i32* %ecx.global-to-local, align 4
  %v1_256f = add i32 %v0_256f, -1
  store i32 %v1_256f, i32* %ecx.global-to-local, align 4
  %v2_256f = icmp eq i32 %v1_256f, 0
  %v4_256f = or i1 %v9_256e, %v2_256f
  br i1 %v4_256f, label %dec_label_pc_2571, label %dec_label_pc_2572

dec_label_pc_2571:                                ; preds = %dec_label_pc_2556
  ret i32 %v19_256c

dec_label_pc_2572:                                ; preds = %dec_label_pc_2556
  %v1_2572 = inttoptr i32 %v19_256c to i8*
  %v2_2572 = load i8, i8* %v1_2572, align 1
  %v3_2572 = zext i8 %v2_2572 to i32
  store i32 %v3_2572, i32* %eax.global-to-local, align 8
  %v1_257c = add i32 %v0_256e, -43
  %v2_257c = inttoptr i32 %v1_257c to i32*
  %v3_257c = load i32, i32* %v2_257c, align 4
  store i32 %v3_257c, i32* %eax.global-to-local, align 8
  ret i32 %v3_257c

; uselistorder directives
  uselistorder i32 %v1_256f, { 1, 0 }
  uselistorder i32 %v19_256c, { 1, 0, 2 }
  uselistorder i32 %v0_256c, { 1, 0 }
  uselistorder i32 %v0_255b, { 1, 0, 2 }
  uselistorder i32 %v1_2550, { 1, 0 }
  uselistorder i32 %v1_254e, { 2, 3, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
}

define i32 @function_2587() local_unnamed_addr {
dec_label_pc_2587:
  %v0_2587 = load i32, i32* @ebp, align 4
  %v1_2587 = add i32 %v0_2587, -20
  %v2_2587 = inttoptr i32 %v1_2587 to i32*
  %v3_2587 = load i32, i32* %v2_2587, align 4
  %v1_258a = and i32 %v3_2587, ptrtoint (i8* @global_var_f.2389 to i32)
  %v2_258d = mul i32 %v1_258a, 2
  %v2_258f = add i32 %v0_2587, -32
  %v3_258f = inttoptr i32 %v2_258f to i32*
  store i32 %v2_258d, i32* %v3_258f, align 4
  %v0_2592 = load i32, i32* @ebp, align 4
  %v1_2592 = add i32 %v0_2592, -36
  %v2_2592 = inttoptr i32 %v1_2592 to i32*
  store i32 ptrtoint (i32* @global_var_3.2378 to i32), i32* %v2_2592, align 4
  %v0_2599 = call i32 @function_264d()
  ret i32 %v0_2599
}

define i32 @function_25c3() local_unnamed_addr {
dec_label_pc_25c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_25c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25c3
}

define i32 @function_25e8() local_unnamed_addr {
dec_label_pc_25e8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25e8 = add i32 %v0_25e8, -528225211
  %v2_25e8 = inttoptr i32 %v1_25e8 to i32*
  %v3_25e8 = load i32, i32* %v2_25e8, align 4
  %v4_25e8 = add i32 %v3_25e8, -1
  store i32 %v4_25e8, i32* %v2_25e8, align 4
  %v0_25ee = load i32, i32* %eax.global-to-local, align 8
  %v1_25ee = load i32, i32* %ecx.global-to-local, align 4
  %v2_25ee = add i32 %v1_25ee, %v0_25ee
  %v12_25ee = icmp eq i32 %v2_25ee, 0
  store i32 %v2_25ee, i32* %eax.global-to-local, align 8
  %v1_25f0 = add i32 %v1_25ee, -1
  store i32 %v1_25f0, i32* %ecx.global-to-local, align 4
  %v2_25f0 = icmp eq i32 %v1_25f0, 0
  %v4_25f0 = or i1 %v2_25f0, %v12_25ee
  br i1 %v4_25f0, label %dec_label_pc_25f2, label %dec_label_pc_25f5

dec_label_pc_25f2:                                ; preds = %dec_label_pc_25e8
  %v1_25f2 = load i32, i32* @ebp, align 4
  %v2_25f2 = add i32 %v1_25f2, -32
  %v3_25f2 = inttoptr i32 %v2_25f2 to i32*
  store i32 %v2_25ee, i32* %v3_25f2, align 4
  br label %dec_label_pc_25f5

dec_label_pc_25f5:                                ; preds = %dec_label_pc_25e8, %dec_label_pc_25f2
  %v0_25f5 = load i32, i32* @ebp, align 4
  %v1_25f5 = add i32 %v0_25f5, -36
  %v2_25f5 = inttoptr i32 %v1_25f5 to i32*
  store i32 ptrtoint (i32* @global_var_4.2376 to i32), i32* %v2_25f5, align 4
  %v0_25fc = call i32 @function_264d()
  store i32 %v0_25fc, i32* %eax.global-to-local, align 8
  ret i32 %v0_25fc

; uselistorder directives
  uselistorder i32 %v1_25f0, { 1, 0 }
  uselistorder i32 %v1_25ee, { 1, 0 }
  uselistorder i32 ()* @function_264d, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_25f5, { 1, 0 }
}

define i32 @function_2623() local_unnamed_addr {
dec_label_pc_2623:
  %eax.global-to-local = alloca i32, align 4
  %v0_2623 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2623
}

define i32 @function_264d() local_unnamed_addr {
dec_label_pc_264d:
  %v0_264d = load i32, i32* @ebp, align 4
  %v1_265e = add i32 %v0_264d, -36
  %v2_265e = inttoptr i32 %v1_265e to i32*
  %v3_265e = load i32, i32* %v2_265e, align 4
  %v10_265e = icmp eq i32 %v3_265e, 0
  br i1 %v10_265e, label %bb, label %dec_label_pc_2668

bb:                                               ; preds = %dec_label_pc_264d
  %v1_2662 = call i32 @function_26ec()
  %v0_266e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2668

dec_label_pc_2668:                                ; preds = %bb, %dec_label_pc_264d
  %v0_267d = phi i32 [ %v0_266e.pre, %bb ], [ %v0_264d, %dec_label_pc_264d ]
  %v1_2688 = add i32 %v0_267d, -28
  %v2_2688 = inttoptr i32 %v1_2688 to i32*
  store i32 0, i32* %v2_2688, align 4
  br label %dec_label_pc_26a8

dec_label_pc_2691:                                ; preds = %dec_label_pc_26a8
  %v3_26a4 = load i32, i32* %v3_26b2, align 4
  %v4_26a4 = add i32 %v3_26a4, 1
  store i32 %v4_26a4, i32* %v3_26b2, align 4
  br label %dec_label_pc_26a8

dec_label_pc_26a8:                                ; preds = %dec_label_pc_2691, %dec_label_pc_2668
  %v0_26a8 = load i32, i32* @ebp, align 4
  %v1_26a8 = add i32 %v0_26a8, -36
  %v2_26a8 = inttoptr i32 %v1_26a8 to i32*
  %v3_26a8 = load i32, i32* %v2_26a8, align 4
  %v1_26ab = mul i32 %v3_26a8, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26ab = add i32 %v1_26ab, ptrtoint (i32* @global_var_e0c4.2408 to i32)
  %v3_26ab = inttoptr i32 %v2_26ab to i32*
  %v4_26ab = load i32, i32* %v3_26ab, align 4
  %v2_26b2 = add i32 %v0_26a8, -28
  %v3_26b2 = inttoptr i32 %v2_26b2 to i32*
  %v4_26b2 = load i32, i32* %v3_26b2, align 4
  %v5_26b2 = sub i32 %v4_26ab, %v4_26b2
  %v11_26b2 = xor i32 %v4_26b2, %v4_26ab
  %v12_26b2 = xor i32 %v5_26b2, %v4_26ab
  %v13_26b2 = and i32 %v12_26b2, %v11_26b2
  %v14_26b2 = icmp slt i32 %v13_26b2, 0
  %v15_26b2 = icmp eq i32 %v5_26b2, 0
  %v16_26b2 = icmp slt i32 %v5_26b2, 0
  %v3_26b5 = icmp eq i1 %v16_26b2, %v14_26b2
  %v4_26b5 = icmp eq i1 %v15_26b2, false
  %v5_26b5 = icmp eq i1 %v3_26b5, %v4_26b5
  %v5_26b8 = icmp eq i1 %v5_26b5, false
  %v1_26ba = icmp eq i1 %v5_26b8, false
  br i1 %v1_26ba, label %dec_label_pc_2691, label %dec_label_pc_26bc

dec_label_pc_26bc:                                ; preds = %dec_label_pc_26a8
  %v0_26bc = call i32 @function_26ec()
  ret i32 %v0_26bc

; uselistorder directives
  uselistorder i32 %v5_26b2, { 1, 2, 0 }
  uselistorder i32* %v3_26b2, { 2, 1, 0 }
  uselistorder i32 ()* @function_26ec, { 1, 0 }
}

define i32 @function_26bf() local_unnamed_addr {
dec_label_pc_26bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_26bf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26bf
}

define i32 @function_26d6() local_unnamed_addr {
dec_label_pc_26d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_26d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26d6
}

define i32 @function_26ec() local_unnamed_addr {
dec_label_pc_26ec:
  %v0_26ed = load i32, i32* @ebp, align 4
  %v1_26ed = add i32 %v0_26ed, -44
  %v2_26ed = inttoptr i32 %v1_26ed to i32*
  %v3_26ed = load i32, i32* %v2_26ed, align 4
  store i32 %v3_26ed, i32* @eax, align 8
  %v1_26f0 = add i32 %v0_26ed, -12
  %v2_26f0 = inttoptr i32 %v1_26f0 to i32*
  %v3_26f0 = load i32, i32* %v2_26f0, align 4
  %v3_26f3 = icmp eq i32 %v3_26f0, 30
  br i1 %v3_26f3, label %bb, label %dec_label_pc_26fc

bb:                                               ; preds = %dec_label_pc_26ec
  %v1_26fa = call i32 @function_2701()
  br label %dec_label_pc_26fc

dec_label_pc_26fc:                                ; preds = %bb, %dec_label_pc_26ec
  %v2_26fa = phi i32 [ %v1_26fa, %bb ], [ %v3_26ed, %dec_label_pc_26ec ]
  ret i32 %v2_26fa
}

define i32 @function_2701() local_unnamed_addr {
dec_label_pc_2701:
  %v0_2706 = load i32, i32* @eax, align 8
  ret i32 %v0_2706
}

define i32 @_Z12EncodeBase32RKSs(i32 %str) local_unnamed_addr {
dec_label_pc_2709:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp98
}

define i32 @function_2733() local_unnamed_addr {
dec_label_pc_2733:
  %eax.global-to-local = alloca i32, align 4
  %v0_2733 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2733
}

define i32 @function_2740() local_unnamed_addr {
dec_label_pc_2740:
  %eax.global-to-local = alloca i32, align 4
  %v0_2740 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2740
}

define i32 @function_276b() local_unnamed_addr {
dec_label_pc_276b:
  %eax.global-to-local = alloca i32, align 4
  %v0_276f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_276f
}

define %"vector<unsignedchar,std::allocator<unsignedchar>>.30" @_Z12DecodeBase32PKcPb(i8* %p, i1* %pfInvalid) local_unnamed_addr {
dec_label_pc_2772:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-20 = alloca i8, align 1
  %stack_var_-21 = alloca i8, align 1
  %vchRet_-56 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>.19", align 8
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %vchRet_-52 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>.18", align 8
  %v4_277f = ptrtoint i1* %pfInvalid to i32
  %v4_2782 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.18" undef, i32 %v4_277f, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.18" %v4_2782, %"vector<unsignedchar,std::allocator<unsignedchar>>.18"* %vchRet_-52, align 8
  %v4_2788 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.19" undef, i32 %tmp17, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.19" %v4_2788, %"vector<unsignedchar,std::allocator<unsignedchar>>.19"* %vchRet_-56, align 8
  %v4_2796 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>.19", %"vector<unsignedchar,std::allocator<unsignedchar>>.19"* %vchRet_-56, i32 0, i32 0
  %v5_2796 = load i32, i32* %v4_2796, align 8
  %v12_2796 = icmp eq i32 %v5_2796, 0
  br i1 %v12_2796, label %dec_label_pc_27a2, label %dec_label_pc_279c

dec_label_pc_279c:                                ; preds = %dec_label_pc_2772
  %v1_279f = inttoptr i32 %v5_2796 to i8*
  store i8 0, i8* %v1_279f, align 1
  br label %dec_label_pc_27a2

dec_label_pc_27a2:                                ; preds = %dec_label_pc_279c, %dec_label_pc_2772
  %v4_27a2 = ptrtoint i8* %p to i32
  %v2_27a8 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v4_27a2)
  %v4_27ad = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>.18", %"vector<unsignedchar,std::allocator<unsignedchar>>.18"* %vchRet_-52, i32 0, i32 0
  %v5_27ad = load i32, i32* %v4_27ad, align 8
  store i32 %v5_27ad, i32* @edx, align 8
  %v2_27bf = mul i32 %v5_27ad, 5
  %v2_27c1 = lshr i32 %v2_27bf, ptrtoint (i32* @global_var_3.2378 to i32)
  %tmp29 = bitcast i8* %p to i32*
  %v4_27ce = call i32 @_ZNSt6vectorIhSaIhEE7reserveEj(i32* %tmp29, i32 %v2_27c1)
  %v2_283f = ptrtoint i8* %stack_var_-21 to i32
  %v2_2890 = ptrtoint i8* %stack_var_-20 to i32
  %v2_28c9 = ptrtoint i8* %stack_var_-19 to i32
  %v2_2915 = ptrtoint i8* %stack_var_-18 to i32
  %v2_2949 = ptrtoint i8* %stack_var_-17 to i32
  br label %dec_label_pc_27e4

dec_label_pc_27e4:                                ; preds = %dec_label_pc_27e4.backedge, %dec_label_pc_27a2
  %v5_2801 = phi i32 [ %v5_27ad, %dec_label_pc_27a2 ], [ %v5_27e4.pre, %dec_label_pc_27e4.backedge ]
  %dec_-36.0 = phi i32 [ 0, %dec_label_pc_27a2 ], [ %dec_-36.0.be, %dec_label_pc_27e4.backedge ]
  %dec_-32.0 = phi i32 [ 0, %dec_label_pc_27a2 ], [ %dec_-32.0.be, %dec_label_pc_27e4.backedge ]
  %v1_27e7 = inttoptr i32 %v5_2801 to i8*
  %v2_27e7 = load i8, i8* %v1_27e7, align 1
  %v3_27e7 = zext i8 %v2_27e7 to i32
  %v1_27ed = mul i32 %v3_27e7, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_27ed = add i32 %v1_27ed, ptrtoint (i32* @global_var_dca0.2409 to i32)
  %v3_27ed = inttoptr i32 %v2_27ed to i32*
  %v4_27ed = load i32, i32* %v3_27ed, align 4
  %v13_27f7 = icmp eq i32 %v4_27ed, -1
  br i1 %v13_27f7, label %dec_label_pc_2968, label %dec_label_pc_2801

dec_label_pc_2801:                                ; preds = %dec_label_pc_27e4
  %v6_2801 = add i32 %v5_2801, 1
  %v24_2801 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.18" undef, i32 %v6_2801, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.18" %v24_2801, %"vector<unsignedchar,std::allocator<unsignedchar>>.18"* %vchRet_-52, align 8
  store i32 %dec_-36.0, i32* @0, align 4
  switch i32 %dec_-36.0, label %dec_label_pc_27e4.backedge [
    i32 0, label %dec_label_pc_281a
    i32 1, label %dec_label_pc_282c
    i32 2, label %dec_label_pc_2866
    i32 3, label %dec_label_pc_287e
    i32 4, label %dec_label_pc_28b7
    i32 5, label %dec_label_pc_28ed
    i32 6, label %dec_label_pc_2902
    i32 7, label %dec_label_pc_2939
  ]

dec_label_pc_27e4.backedge:                       ; preds = %dec_label_pc_2801, %dec_label_pc_2939, %dec_label_pc_2902, %dec_label_pc_28ed, %dec_label_pc_28b7, %dec_label_pc_287e, %dec_label_pc_2866, %dec_label_pc_282c, %dec_label_pc_281a
  %dec_-36.0.be = phi i32 [ %dec_-36.0, %dec_label_pc_2801 ], [ 0, %dec_label_pc_2939 ], [ ptrtoint (i32* @global_var_7.2402 to i32), %dec_label_pc_2902 ], [ 6, %dec_label_pc_28ed ], [ 5, %dec_label_pc_28b7 ], [ ptrtoint (i32* @global_var_4.2376 to i32), %dec_label_pc_287e ], [ ptrtoint (i32* @global_var_3.2378 to i32), %dec_label_pc_2866 ], [ 2, %dec_label_pc_282c ], [ 1, %dec_label_pc_281a ]
  %dec_-32.0.be = phi i32 [ %dec_-32.0, %dec_label_pc_2801 ], [ %dec_-32.0, %dec_label_pc_2939 ], [ %v1_292a, %dec_label_pc_2902 ], [ %v5_28f3, %dec_label_pc_28ed ], [ %v9_28c2, %dec_label_pc_28b7 ], [ %v1_28a5, %dec_label_pc_287e ], [ %v5_286c, %dec_label_pc_2866 ], [ %v1_2854, %dec_label_pc_282c ], [ %v4_27ed, %dec_label_pc_281a ]
  %v5_27e4.pre = load i32, i32* %v4_27ad, align 8
  br label %dec_label_pc_27e4

dec_label_pc_281a:                                ; preds = %dec_label_pc_2801
  br label %dec_label_pc_27e4.backedge

dec_label_pc_282c:                                ; preds = %dec_label_pc_2801
  %v2_282f = shl i32 %dec_-32.0, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_2837 = sdiv i32 %v4_27ed, 4
  %v2_283a = or i32 %v2_2837, %v2_282f
  %v5_283a = trunc i32 %v2_283a to i8
  store i8 %v5_283a, i8* %stack_var_-21, align 1
  %v3_284c = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_27a2, i32 %v2_283f)
  %v1_2854 = and i32 %v4_27ed, ptrtoint (i32* @global_var_3.2378 to i32)
  br label %dec_label_pc_27e4.backedge

dec_label_pc_2866:                                ; preds = %dec_label_pc_2801
  %v2_2869 = mul i32 %dec_-32.0, 32
  %v5_286c = or i32 %v4_27ed, %v2_2869
  br label %dec_label_pc_27e4.backedge

dec_label_pc_287e:                                ; preds = %dec_label_pc_2801
  %v2_2881 = mul i32 %dec_-32.0, 2
  %v2_2888 = ashr i32 %v4_27ed, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_288b = or i32 %v2_2888, %v2_2881
  %v5_288b = trunc i32 %v2_288b to i8
  store i8 %v5_288b, i8* %stack_var_-20, align 1
  %v3_289d = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_27a2, i32 %v2_2890)
  %v1_28a5 = and i32 %v4_27ed, ptrtoint (i8* @global_var_f.2389 to i32)
  br label %dec_label_pc_27e4.backedge

dec_label_pc_28b7:                                ; preds = %dec_label_pc_2801
  %v2_28ba = shl i32 %dec_-32.0, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_28c2 = sdiv i32 %v4_27ed, 2
  %v9_28c2 = urem i32 %v4_27ed, 2
  %v2_28c4 = or i32 %v2_28c2, %v2_28ba
  %v5_28c4 = trunc i32 %v2_28c4 to i8
  store i8 %v5_28c4, i8* %stack_var_-19, align 1
  %v3_28d6 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_27a2, i32 %v2_28c9)
  br label %dec_label_pc_27e4.backedge

dec_label_pc_28ed:                                ; preds = %dec_label_pc_2801
  %v2_28f0 = mul i32 %dec_-32.0, 32
  %v5_28f3 = or i32 %v4_27ed, %v2_28f0
  br label %dec_label_pc_27e4.backedge

dec_label_pc_2902:                                ; preds = %dec_label_pc_2801
  %v2_2905 = mul i32 %dec_-32.0, 4
  %v2_290d = ashr i32 %v4_27ed, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_2910 = or i32 %v2_290d, %v2_2905
  %v5_2910 = trunc i32 %v2_2910 to i8
  store i8 %v5_2910, i8* %stack_var_-18, align 1
  %v3_2922 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_27a2, i32 %v2_2915)
  %v1_292a = and i32 %v4_27ed, ptrtoint (i32* @global_var_7.2402 to i32)
  br label %dec_label_pc_27e4.backedge

dec_label_pc_2939:                                ; preds = %dec_label_pc_2801
  %v2_293c = mul i32 %dec_-32.0, 32
  %v2_2944 = or i32 %v4_27ed, %v2_293c
  %v5_2944 = trunc i32 %v2_2944 to i8
  store i8 %v5_2944, i8* %stack_var_-17, align 1
  %v3_2956 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v4_27a2, i32 %v2_2949)
  br label %dec_label_pc_27e4.backedge

dec_label_pc_2968:                                ; preds = %dec_label_pc_27e4
  %v5_2969 = load i32, i32* %v4_2796, align 8
  %v12_2969 = icmp eq i32 %v5_2969, 0
  br i1 %v12_2969, label %bb, label %dec_label_pc_2973

bb:                                               ; preds = %dec_label_pc_2968
  %v2_296d = call i32 @function_2aff(i32 %v4_27ed)
  br label %dec_label_pc_2973

dec_label_pc_2973:                                ; preds = %bb, %dec_label_pc_2968
  %tmp34 = icmp ult i32 %dec_-36.0, 8
  br i1 %tmp34, label %dec_label_pc_297d, label %bb32

bb32:                                             ; preds = %dec_label_pc_2973
  %v5_2977 = call i32 @function_2aff(i32 %dec_-36.0)
  br label %dec_label_pc_297d

dec_label_pc_297d:                                ; preds = %dec_label_pc_2973, %bb32
  %v2_2980 = mul i32 %dec_-36.0, 4
  %v1_2983 = add i32 %v2_2980, ptrtoint (i32* @global_var_5c08.2411 to i32)
  %v1_2988 = inttoptr i32 %v1_2983 to i32*
  %v2_2988 = load i32, i32* %v1_2988, align 4
  %v1_298a = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.30" undef, i32 %v2_2988, 0
  ret %"vector<unsignedchar,std::allocator<unsignedchar>>.30" %v1_298a

; uselistorder directives
  uselistorder i32 %v4_27ed, { 4, 5, 12, 13, 6, 2, 1, 10, 11, 7, 9, 3, 8, 0 }
  uselistorder i32 %dec_-32.0, { 0, 1, 2, 8, 3, 4, 7, 5, 6 }
  uselistorder i32 %dec_-36.0, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v5_27ad, { 1, 0, 2 }
  uselistorder %"vector<unsignedchar,std::allocator<unsignedchar>>.18"* %vchRet_-52, { 1, 0, 2 }
  uselistorder i8* %stack_var_-21, { 1, 0 }
  uselistorder i8* %stack_var_-20, { 1, 0 }
  uselistorder i8* %stack_var_-19, { 1, 0 }
  uselistorder i8* %stack_var_-18, { 1, 0 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32 (i32)* @function_2aff, { 1, 0 }
  uselistorder i8* @global_var_f.2389, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_f.2389 to i32), { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIhSaIhEE9push_backERKh, { 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i32)* @_ZNSt6vectorIhSaIhEEC1Ev, { 2, 1, 0 }
  uselistorder label %dec_label_pc_297d, { 1, 0 }
  uselistorder label %dec_label_pc_27e4.backedge, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
}

define i32 @function_298c() local_unnamed_addr {
dec_label_pc_298c:
  %v0_298c = load i32, i32* @ebp, align 4
  %v1_298c = add i32 %v0_298c, -52
  %v2_298c = inttoptr i32 %v1_298c to i32*
  %v3_298c = load i32, i32* %v2_298c, align 4
  %v1_298f = inttoptr i32 %v3_298c to i8*
  store i8 1, i8* %v1_298f, align 1
  %v0_2992 = call i32 @function_2b0f()
  ret i32 %v0_2992
}

define i32 @function_2997() local_unnamed_addr {
dec_label_pc_2997:
  %v0_2997 = load i32, i32* @ebp, align 4
  %v1_2997 = add i32 %v0_2997, -28
  %v2_2997 = inttoptr i32 %v1_2997 to i32*
  %v3_2997 = load i32, i32* %v2_2997, align 4
  %v10_2997 = icmp eq i32 %v3_2997, 0
  %v1_299b = icmp eq i1 %v10_2997, false
  br i1 %v1_299b, label %dec_label_pc_2a04, label %dec_label_pc_299d

dec_label_pc_299d:                                ; preds = %dec_label_pc_2997
  %v1_299d = add i32 %v0_2997, -48
  %v2_299d = inttoptr i32 %v1_299d to i32*
  %v3_299d = load i32, i32* %v2_299d, align 4
  %v1_29a0 = inttoptr i32 %v3_299d to i8*
  %v2_29a0 = load i8, i8* %v1_29a0, align 1
  %v11_29a3 = icmp eq i8 %v2_29a0, 61
  %v1_29a5 = icmp eq i1 %v11_29a3, false
  br i1 %v1_29a5, label %dec_label_pc_2a04, label %dec_label_pc_29a7

dec_label_pc_29a7:                                ; preds = %dec_label_pc_299d
  %v3_29a7 = load i32, i32* %v2_299d, align 4
  %v1_29aa = add i32 %v3_29a7, 1
  %v1_29ad = inttoptr i32 %v1_29aa to i8*
  %v2_29ad = load i8, i8* %v1_29ad, align 1
  %v11_29b0 = icmp eq i8 %v2_29ad, 61
  %v1_29b2 = icmp eq i1 %v11_29b0, false
  br i1 %v1_29b2, label %dec_label_pc_2a04, label %dec_label_pc_29b4

dec_label_pc_29b4:                                ; preds = %dec_label_pc_29a7
  %v3_29b4 = load i32, i32* %v2_299d, align 4
  %v1_29b7 = add i32 %v3_29b4, 2
  %v1_29ba = inttoptr i32 %v1_29b7 to i8*
  %v2_29ba = load i8, i8* %v1_29ba, align 1
  %v11_29bd = icmp eq i8 %v2_29ba, 61
  %v1_29bf = icmp eq i1 %v11_29bd, false
  br i1 %v1_29bf, label %dec_label_pc_2a04, label %dec_label_pc_29c1

dec_label_pc_29c1:                                ; preds = %dec_label_pc_29b4
  %v3_29c1 = load i32, i32* %v2_299d, align 4
  %v1_29c4 = add i32 %v3_29c1, ptrtoint (i32* @global_var_3.2378 to i32)
  %v1_29c7 = inttoptr i32 %v1_29c4 to i8*
  %v2_29c7 = load i8, i8* %v1_29c7, align 1
  %v11_29ca = icmp eq i8 %v2_29c7, 61
  %v1_29cc = icmp eq i1 %v11_29ca, false
  br i1 %v1_29cc, label %dec_label_pc_2a04, label %dec_label_pc_29ce

dec_label_pc_29ce:                                ; preds = %dec_label_pc_29c1
  %v3_29ce = load i32, i32* %v2_299d, align 4
  %v1_29d1 = add i32 %v3_29ce, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_29d4 = inttoptr i32 %v1_29d1 to i8*
  %v2_29d4 = load i8, i8* %v1_29d4, align 1
  %v11_29d7 = icmp eq i8 %v2_29d4, 61
  %v1_29d9 = icmp eq i1 %v11_29d7, false
  br i1 %v1_29d9, label %dec_label_pc_2a04, label %dec_label_pc_29db

dec_label_pc_29db:                                ; preds = %dec_label_pc_29ce
  %v3_29db = load i32, i32* %v2_299d, align 4
  %v1_29de = add i32 %v3_29db, 5
  %v1_29e1 = inttoptr i32 %v1_29de to i8*
  %v2_29e1 = load i8, i8* %v1_29e1, align 1
  %v11_29e4 = icmp eq i8 %v2_29e1, 61
  %v1_29e6 = icmp eq i1 %v11_29e4, false
  br i1 %v1_29e6, label %dec_label_pc_2a04, label %dec_label_pc_29e8

dec_label_pc_29e8:                                ; preds = %dec_label_pc_29db
  %v3_29e8 = load i32, i32* %v2_299d, align 4
  %v1_29eb = add i32 %v3_29e8, 6
  %v1_29ee = inttoptr i32 %v1_29eb to i8*
  %v2_29ee = load i8, i8* %v1_29ee, align 1
  %v3_29ee = zext i8 %v2_29ee to i32
  %v1_29f4 = mul nuw nsw i32 %v3_29ee, 4
  %v2_29f4 = add i32 %v1_29f4, ptrtoint (i32* @global_var_dca0.2409 to i32)
  %v3_29f4 = inttoptr i32 %v2_29f4 to i32*
  %v4_29f4 = load i32, i32* %v3_29f4, align 4
  %v10_29fb = icmp eq i32 %v4_29f4, -1
  br i1 %v10_29fb, label %bb, label %dec_label_pc_2a04

bb:                                               ; preds = %dec_label_pc_29e8
  %v1_29fe = call i32 @function_2b05()
  %v0_2a04.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2a04

dec_label_pc_2a04:                                ; preds = %bb, %dec_label_pc_29e8, %dec_label_pc_29db, %dec_label_pc_29ce, %dec_label_pc_29c1, %dec_label_pc_29b4, %dec_label_pc_29a7, %dec_label_pc_299d, %dec_label_pc_2997
  %v0_2a04 = phi i32 [ %v0_2a04.pre, %bb ], [ %v0_2997, %dec_label_pc_29e8 ], [ %v0_2997, %dec_label_pc_29db ], [ %v0_2997, %dec_label_pc_29ce ], [ %v0_2997, %dec_label_pc_29c1 ], [ %v0_2997, %dec_label_pc_29b4 ], [ %v0_2997, %dec_label_pc_29a7 ], [ %v0_2997, %dec_label_pc_299d ], [ %v0_2997, %dec_label_pc_2997 ]
  %v1_2a04 = add i32 %v0_2a04, -52
  %v2_2a04 = inttoptr i32 %v1_2a04 to i32*
  %v3_2a04 = load i32, i32* %v2_2a04, align 4
  %v1_2a07 = inttoptr i32 %v3_2a04 to i8*
  store i8 1, i8* %v1_2a07, align 1
  %v0_2a0a = call i32 @function_2b05()
  ret i32 %v0_2a0a

; uselistorder directives
  uselistorder i32 ()* @function_2b05, { 1, 0 }
  uselistorder i32 6, { 1, 0, 2 }
  uselistorder i32 5, { 3, 2, 4, 1, 0 }
}

define i32 @function_2a0f() local_unnamed_addr {
dec_label_pc_2a0f:
  %v0_2a0f = load i32, i32* @ebp, align 4
  %v1_2a0f = add i32 %v0_2a0f, -28
  %v2_2a0f = inttoptr i32 %v1_2a0f to i32*
  %v3_2a0f = load i32, i32* %v2_2a0f, align 4
  %v10_2a0f = icmp eq i32 %v3_2a0f, 0
  %v1_2a13 = icmp eq i1 %v10_2a0f, false
  br i1 %v1_2a13, label %dec_label_pc_2a62, label %dec_label_pc_2a15

dec_label_pc_2a15:                                ; preds = %dec_label_pc_2a0f
  %v1_2a15 = add i32 %v0_2a0f, -48
  %v2_2a15 = inttoptr i32 %v1_2a15 to i32*
  %v3_2a15 = load i32, i32* %v2_2a15, align 4
  %v1_2a18 = inttoptr i32 %v3_2a15 to i8*
  %v2_2a18 = load i8, i8* %v1_2a18, align 1
  %v11_2a1b = icmp eq i8 %v2_2a18, 61
  %v1_2a1d = icmp eq i1 %v11_2a1b, false
  br i1 %v1_2a1d, label %dec_label_pc_2a62, label %dec_label_pc_2a1f

dec_label_pc_2a1f:                                ; preds = %dec_label_pc_2a15
  %v3_2a1f = load i32, i32* %v2_2a15, align 4
  %v1_2a22 = add i32 %v3_2a1f, 1
  %v1_2a25 = inttoptr i32 %v1_2a22 to i8*
  %v2_2a25 = load i8, i8* %v1_2a25, align 1
  %v11_2a28 = icmp eq i8 %v2_2a25, 61
  %v1_2a2a = icmp eq i1 %v11_2a28, false
  br i1 %v1_2a2a, label %dec_label_pc_2a62, label %dec_label_pc_2a2c

dec_label_pc_2a2c:                                ; preds = %dec_label_pc_2a1f
  %v3_2a2c = load i32, i32* %v2_2a15, align 4
  %v1_2a2f = add i32 %v3_2a2c, 2
  %v1_2a32 = inttoptr i32 %v1_2a2f to i8*
  %v2_2a32 = load i8, i8* %v1_2a32, align 1
  %v11_2a35 = icmp eq i8 %v2_2a32, 61
  %v1_2a37 = icmp eq i1 %v11_2a35, false
  br i1 %v1_2a37, label %dec_label_pc_2a62, label %dec_label_pc_2a39

dec_label_pc_2a39:                                ; preds = %dec_label_pc_2a2c
  %v3_2a39 = load i32, i32* %v2_2a15, align 4
  %v1_2a3c = add i32 %v3_2a39, ptrtoint (i32* @global_var_3.2378 to i32)
  %v1_2a3f = inttoptr i32 %v1_2a3c to i8*
  %v2_2a3f = load i8, i8* %v1_2a3f, align 1
  %v11_2a42 = icmp eq i8 %v2_2a3f, 61
  %v1_2a44 = icmp eq i1 %v11_2a42, false
  br i1 %v1_2a44, label %dec_label_pc_2a62, label %dec_label_pc_2a46

dec_label_pc_2a46:                                ; preds = %dec_label_pc_2a39
  %v3_2a46 = load i32, i32* %v2_2a15, align 4
  %v1_2a49 = add i32 %v3_2a46, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2a4c = inttoptr i32 %v1_2a49 to i8*
  %v2_2a4c = load i8, i8* %v1_2a4c, align 1
  %v3_2a4c = zext i8 %v2_2a4c to i32
  %v1_2a52 = mul nuw nsw i32 %v3_2a4c, 4
  %v2_2a52 = add i32 %v1_2a52, ptrtoint (i32* @global_var_dca0.2409 to i32)
  %v3_2a52 = inttoptr i32 %v2_2a52 to i32*
  %v4_2a52 = load i32, i32* %v3_2a52, align 4
  %v10_2a59 = icmp eq i32 %v4_2a52, -1
  br i1 %v10_2a59, label %bb, label %dec_label_pc_2a62

bb:                                               ; preds = %dec_label_pc_2a46
  %v1_2a5c = call i32 @function_2b08()
  %v0_2a62.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2a62

dec_label_pc_2a62:                                ; preds = %bb, %dec_label_pc_2a46, %dec_label_pc_2a39, %dec_label_pc_2a2c, %dec_label_pc_2a1f, %dec_label_pc_2a15, %dec_label_pc_2a0f
  %v0_2a62 = phi i32 [ %v0_2a62.pre, %bb ], [ %v0_2a0f, %dec_label_pc_2a46 ], [ %v0_2a0f, %dec_label_pc_2a39 ], [ %v0_2a0f, %dec_label_pc_2a2c ], [ %v0_2a0f, %dec_label_pc_2a1f ], [ %v0_2a0f, %dec_label_pc_2a15 ], [ %v0_2a0f, %dec_label_pc_2a0f ]
  %v1_2a62 = add i32 %v0_2a62, -52
  %v2_2a62 = inttoptr i32 %v1_2a62 to i32*
  %v3_2a62 = load i32, i32* %v2_2a62, align 4
  %v1_2a65 = inttoptr i32 %v3_2a62 to i8*
  store i8 1, i8* %v1_2a65, align 1
  %v0_2a68 = call i32 @function_2b08()
  ret i32 %v0_2a68

; uselistorder directives
  uselistorder i32 ()* @function_2b08, { 1, 0 }
}

define i32 @function_2a6d() local_unnamed_addr {
dec_label_pc_2a6d:
  %v0_2a6d = load i32, i32* @ebp, align 4
  %v1_2a6d = add i32 %v0_2a6d, -28
  %v2_2a6d = inttoptr i32 %v1_2a6d to i32*
  %v3_2a6d = load i32, i32* %v2_2a6d, align 4
  %v10_2a6d = icmp eq i32 %v3_2a6d, 0
  %v1_2a71 = icmp eq i1 %v10_2a6d, false
  br i1 %v1_2a71, label %dec_label_pc_2aaf, label %dec_label_pc_2a73

dec_label_pc_2a73:                                ; preds = %dec_label_pc_2a6d
  %v1_2a73 = add i32 %v0_2a6d, -48
  %v2_2a73 = inttoptr i32 %v1_2a73 to i32*
  %v3_2a73 = load i32, i32* %v2_2a73, align 4
  %v1_2a76 = inttoptr i32 %v3_2a73 to i8*
  %v2_2a76 = load i8, i8* %v1_2a76, align 1
  %v11_2a79 = icmp eq i8 %v2_2a76, 61
  %v1_2a7b = icmp eq i1 %v11_2a79, false
  br i1 %v1_2a7b, label %dec_label_pc_2aaf, label %dec_label_pc_2a7d

dec_label_pc_2a7d:                                ; preds = %dec_label_pc_2a73
  %v3_2a7d = load i32, i32* %v2_2a73, align 4
  %v1_2a80 = add i32 %v3_2a7d, 1
  %v1_2a83 = inttoptr i32 %v1_2a80 to i8*
  %v2_2a83 = load i8, i8* %v1_2a83, align 1
  %v11_2a86 = icmp eq i8 %v2_2a83, 61
  %v1_2a88 = icmp eq i1 %v11_2a86, false
  br i1 %v1_2a88, label %dec_label_pc_2aaf, label %dec_label_pc_2a8a

dec_label_pc_2a8a:                                ; preds = %dec_label_pc_2a7d
  %v3_2a8a = load i32, i32* %v2_2a73, align 4
  %v1_2a8d = add i32 %v3_2a8a, 2
  %v1_2a90 = inttoptr i32 %v1_2a8d to i8*
  %v2_2a90 = load i8, i8* %v1_2a90, align 1
  %v11_2a93 = icmp eq i8 %v2_2a90, 61
  %v1_2a95 = icmp eq i1 %v11_2a93, false
  br i1 %v1_2a95, label %dec_label_pc_2aaf, label %dec_label_pc_2a97

dec_label_pc_2a97:                                ; preds = %dec_label_pc_2a8a
  %v3_2a97 = load i32, i32* %v2_2a73, align 4
  %v1_2a9a = add i32 %v3_2a97, ptrtoint (i32* @global_var_3.2378 to i32)
  %v1_2a9d = inttoptr i32 %v1_2a9a to i8*
  %v2_2a9d = load i8, i8* %v1_2a9d, align 1
  %v3_2a9d = zext i8 %v2_2a9d to i32
  %v1_2aa3 = mul nuw nsw i32 %v3_2a9d, 4
  %v2_2aa3 = add i32 %v1_2aa3, ptrtoint (i32* @global_var_dca0.2409 to i32)
  %v3_2aa3 = inttoptr i32 %v2_2aa3 to i32*
  %v4_2aa3 = load i32, i32* %v3_2aa3, align 4
  %v10_2aaa = icmp eq i32 %v4_2aa3, -1
  br i1 %v10_2aaa, label %bb, label %dec_label_pc_2aaf

bb:                                               ; preds = %dec_label_pc_2a97
  %v1_2aad = call i32 @function_2b0b()
  %v0_2aaf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2aaf

dec_label_pc_2aaf:                                ; preds = %bb, %dec_label_pc_2a97, %dec_label_pc_2a8a, %dec_label_pc_2a7d, %dec_label_pc_2a73, %dec_label_pc_2a6d
  %v0_2aaf = phi i32 [ %v0_2aaf.pre, %bb ], [ %v0_2a6d, %dec_label_pc_2a97 ], [ %v0_2a6d, %dec_label_pc_2a8a ], [ %v0_2a6d, %dec_label_pc_2a7d ], [ %v0_2a6d, %dec_label_pc_2a73 ], [ %v0_2a6d, %dec_label_pc_2a6d ]
  %v1_2aaf = add i32 %v0_2aaf, -52
  %v2_2aaf = inttoptr i32 %v1_2aaf to i32*
  %v3_2aaf = load i32, i32* %v2_2aaf, align 4
  %v1_2ab2 = inttoptr i32 %v3_2aaf to i8*
  store i8 1, i8* %v1_2ab2, align 1
  %v0_2ab5 = call i32 @function_2b0b()
  ret i32 %v0_2ab5

; uselistorder directives
  uselistorder i32 ()* @function_2b0b, { 1, 0 }
}

define i32 @function_2ab7() local_unnamed_addr {
dec_label_pc_2ab7:
  %ebp.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_2ab7 = add i32 %tmp92, -28
  %v2_2ab7 = inttoptr i32 %v1_2ab7 to i32*
  %v3_2ab7 = load i32, i32* %v2_2ab7, align 4
  %v10_2ab7 = icmp eq i32 %v3_2ab7, 0
  %v1_2abb = icmp eq i1 %v10_2ab7, false
  br i1 %v1_2abb, label %dec_label_pc_2adf, label %dec_label_pc_2abd

dec_label_pc_2abd:                                ; preds = %dec_label_pc_2ab7
  %v1_2abd = add i32 %tmp92, -48
  %v2_2abd = inttoptr i32 %v1_2abd to i32*
  %v3_2abd = load i32, i32* %v2_2abd, align 4
  %v1_2ac0 = inttoptr i32 %v3_2abd to i8*
  %v2_2ac0 = load i8, i8* %v1_2ac0, align 1
  %v11_2ac3 = icmp eq i8 %v2_2ac0, 61
  %v1_2ac5 = icmp eq i1 %v11_2ac3, false
  br i1 %v1_2ac5, label %dec_label_pc_2adf, label %dec_label_pc_2ac7

dec_label_pc_2ac7:                                ; preds = %dec_label_pc_2abd
  %v3_2ac7 = load i32, i32* %v2_2abd, align 4
  %v1_2aca = add i32 %v3_2ac7, 1
  %v1_2acd = inttoptr i32 %v1_2aca to i8*
  %v2_2acd = load i8, i8* %v1_2acd, align 1
  %v3_2acd = zext i8 %v2_2acd to i32
  %v1_2ad3 = mul nuw nsw i32 %v3_2acd, 4
  %v2_2ad3 = add i32 %v1_2ad3, ptrtoint (i32* @global_var_dca0.2409 to i32)
  %v3_2ad3 = inttoptr i32 %v2_2ad3 to i32*
  %v4_2ad3 = load i32, i32* %v3_2ad3, align 4
  store i32 %v4_2ad3, i32* @eax, align 8
  %v10_2ada = icmp eq i32 %v4_2ad3, -1
  br i1 %v10_2ada, label %bb, label %dec_label_pc_2adf

bb:                                               ; preds = %dec_label_pc_2ac7
  %v1_2add = call i32 @function_2b0e()
  %v0_2adf.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2adf

dec_label_pc_2adf:                                ; preds = %bb, %dec_label_pc_2ac7, %dec_label_pc_2abd, %dec_label_pc_2ab7
  %v0_2adf = phi i32 [ %v0_2adf.pre, %bb ], [ %tmp92, %dec_label_pc_2ac7 ], [ %tmp92, %dec_label_pc_2abd ], [ %tmp92, %dec_label_pc_2ab7 ]
  %v1_2adf = add i32 %v0_2adf, -52
  %v2_2adf = inttoptr i32 %v1_2adf to i32*
  %v3_2adf = load i32, i32* %v2_2adf, align 4
  store i32 %v3_2adf, i32* @eax, align 8
  %v1_2ae2 = inttoptr i32 %v3_2adf to i8*
  store i8 1, i8* %v1_2ae2, align 1
  %v0_2ae6 = call i32 @function_2b0e()
  ret i32 %v0_2ae6

; uselistorder directives
  uselistorder i32 %tmp92, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_2b0e, { 1, 0 }
  uselistorder i8 61, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15 }
}

define i32 @function_2ae9() local_unnamed_addr {
dec_label_pc_2ae9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ae9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ae9
}

define i32 @function_2aff(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aff:
  %v0_2b00 = call i32 @function_2b0f()
  ret i32 %v0_2b00
}

define i32 @function_2b03() local_unnamed_addr {
dec_label_pc_2b03:
  %v0_2b03 = call i32 @function_2b0f()
  ret i32 %v0_2b03
}

define i32 @function_2b05() local_unnamed_addr {
dec_label_pc_2b05:
  %v0_2b06 = call i32 @function_2b0f()
  ret i32 %v0_2b06
}

define i32 @function_2b08() local_unnamed_addr {
dec_label_pc_2b08:
  %v0_2b09 = call i32 @function_2b0f()
  ret i32 %v0_2b09
}

define i32 @function_2b0b() local_unnamed_addr {
dec_label_pc_2b0b:
  %v0_2b0c = call i32 @function_2b0f()
  ret i32 %v0_2b0c

; uselistorder directives
  uselistorder i32 ()* @function_2b0f, { 4, 3, 2, 5, 0, 1 }
}

define i32 @function_2b0e() local_unnamed_addr {
dec_label_pc_2b0e:
  %v0_2b0e = load i32, i32* @eax, align 8
  ret i32 %v0_2b0e
}

define i32 @function_2b0f() local_unnamed_addr {
dec_label_pc_2b0f:
  %v0_2b0f = load i32, i32* @ebp, align 4
  %v1_2b0f = add i32 %v0_2b0f, -44
  %v2_2b0f = inttoptr i32 %v1_2b0f to i32*
  %v3_2b0f = load i32, i32* %v2_2b0f, align 4
  store i32 %v3_2b0f, i32* @eax, align 8
  %v1_2b12 = add i32 %v0_2b0f, -12
  %v2_2b12 = inttoptr i32 %v1_2b12 to i32*
  %v3_2b12 = load i32, i32* %v2_2b12, align 4
  %v3_2b15 = icmp eq i32 %v3_2b12, 30
  br i1 %v3_2b15, label %bb, label %dec_label_pc_2b1e

bb:                                               ; preds = %dec_label_pc_2b0f
  %v1_2b1c = call i32 @function_2b23()
  br label %dec_label_pc_2b1e

dec_label_pc_2b1e:                                ; preds = %bb, %dec_label_pc_2b0f
  %v2_2b1c = phi i32 [ %v1_2b1c, %bb ], [ %v3_2b0f, %dec_label_pc_2b0f ]
  ret i32 %v2_2b1c
}

define i32 @function_2b23() local_unnamed_addr {
dec_label_pc_2b23:
  %v0_2b28 = load i32, i32* @eax, align 8
  ret i32 %v0_2b28
}

define i32 @_Z12DecodeBase32RKSs(i32 %str) local_unnamed_addr {
dec_label_pc_2b2b:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %v4_2b61 = inttoptr i32 %tmp108 to i1*
  %tmp115 = bitcast i32* %stack_var_-32 to i8*
  %v7_2b68 = call %"vector<unsignedchar,std::allocator<unsignedchar>>.30" @_Z12DecodeBase32PKcPb(i8* %tmp115, i1* %v4_2b61)
  %v2_2b70 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2b70
}

define i32 @function_2b87() local_unnamed_addr {
dec_label_pc_2b87:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b87 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b87
}

define i32 @function_2bbf() local_unnamed_addr {
dec_label_pc_2bbf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2bbf = load i32, i32* @ebp, align 4
  %v1_2bbf = add i32 %v0_2bbf, 76145733
  %v2_2bbf = inttoptr i32 %v1_2bbf to i32*
  %v3_2bbf = load i32, i32* %v2_2bbf, align 4
  %v4_2bbf = add i32 %v3_2bbf, -1
  store i32 %v4_2bbf, i32* %v2_2bbf, align 4
  %v0_2bc5 = load i32, i32* %eax.global-to-local, align 8
  %v2_2bc5 = and i32 %v0_2bc5, 232
  %v10_2bc5 = and i32 %v0_2bc5, -256
  %v11_2bc5 = and i32 %v0_2bc5, -24
  store i32 %v11_2bc5, i32* %eax.global-to-local, align 8
  %v1_2bc7 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2bc7 = add i32 %v1_2bc7, %v2_2bc5
  %v4_2bc7 = inttoptr i32 %v3_2bc7 to i8*
  %v5_2bc7 = load i8, i8* %v4_2bc7, align 1
  %v4_2bc8 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v7_2bc8 = sub i8 %v5_2bc7, %v4_2bc8
  %v36_2bc8 = zext i8 %v7_2bc8 to i32
  %v39_2bc8 = or i32 %v36_2bc8, %v10_2bc5
  store i32 %v39_2bc8, i32* @eax, align 8
  %v1_2bca = add i32 %v1_2bc7, 1435227205
  %v2_2bca = inttoptr i32 %v1_2bca to i8*
  %v3_2bca = load i8, i8* %v2_2bca, align 1
  %v4_2bca = load i32, i32* %ecx.global-to-local, align 4
  %v5_2bca = trunc i32 %v4_2bca to i8
  %v6_2bca = add i8 %v5_2bca, %v3_2bca
  store i8 %v6_2bca, i8* %v2_2bca, align 1
  %v0_2bd1 = load i32, i32* %edx.global-to-local, align 8
  %v2_2bd1 = xor i32 %v0_2bd1, 30
  %v3_2bd1 = icmp eq i32 %v2_2bd1, 0
  store i32 %v2_2bd1, i32* %edx.global-to-local, align 8
  br i1 %v3_2bd1, label %bb, label %dec_label_pc_2bda

bb:                                               ; preds = %dec_label_pc_2bbf
  %v1_2bd8 = call i32 @function_2c03()
  store i32 %v1_2bd8, i32* @eax, align 8
  br label %dec_label_pc_2bda

dec_label_pc_2bda:                                ; preds = %bb, %dec_label_pc_2bbf
  %v0_2bda = call i32 @function_2bfe()
  store i32 %v0_2bda, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bda

; uselistorder directives
  uselistorder i32 %v1_2bc7, { 1, 0 }
  uselistorder i32 %v0_2bc5, { 0, 2, 1 }
}

define i32 @function_2bdd() local_unnamed_addr {
dec_label_pc_2bdd:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bdd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bdd
}

define i32 @function_2bfe() local_unnamed_addr {
dec_label_pc_2bfe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c03() local_unnamed_addr {
dec_label_pc_2c03:
  %v0_2c07 = load i32, i32* @eax, align 8
  ret i32 %v0_2c07
}

define i1 @_Z13WildcardMatchPKcS0_(i8* %psz, i8* %mask) local_unnamed_addr {
dec_label_pc_2c0a:
  %v4_2c2758 = ptrtoint i8* %mask to i32
  %v2_2c2a59 = load i8, i8* %mask, align 1
  %v10_2c3062 = icmp eq i8 %v2_2c2a59, 42
  br i1 %v10_2c3062, label %dec_label_pc_2c4e, label %dec_label_pc_2c35

dec_label_pc_2c35:                                ; preds = %dec_label_pc_2c0a, %dec_label_pc_2cc4
  %v2_2c2a66 = phi i8 [ %v2_2c2a, %dec_label_pc_2cc4 ], [ %v2_2c2a59, %dec_label_pc_2c0a ]
  %v4_2c2765 = phi i32 [ %v5_2cc8, %dec_label_pc_2cc4 ], [ %v4_2c2758, %dec_label_pc_2c0a ]
  %stack_var_-36.064 = phi i8* [ %v23_2cc8, %dec_label_pc_2cc4 ], [ %mask, %dec_label_pc_2c0a ]
  %stack_var_-32.063 = phi i8* [ %v23_2cc4, %dec_label_pc_2cc4 ], [ %psz, %dec_label_pc_2c0a ]
  %v10_2c35 = icmp eq i8 %v2_2c2a66, 63
  br i1 %v10_2c35, label %dec_label_pc_2c98, label %dec_label_pc_2c3a

dec_label_pc_2c3a:                                ; preds = %dec_label_pc_2c35
  %v1_2c3a = icmp eq i8 %v2_2c2a66, 0
  %v1_2c3c = icmp eq i1 %v1_2c3a, false
  %v2_2cac = load i8, i8* %stack_var_-32.063, align 1
  br i1 %v1_2c3c, label %dec_label_pc_2ca9, label %dec_label_pc_2c3e

dec_label_pc_2c3e:                                ; preds = %dec_label_pc_2c3a
  %v5_2c44 = icmp eq i8 %v2_2cac, 0
  %v1_2c46 = zext i1 %v5_2c44 to i32
  store i32 %v1_2c46, i32* @eax, align 8
  br label %dec_label_pc_2cd1

dec_label_pc_2c4e:                                ; preds = %dec_label_pc_2cc4, %dec_label_pc_2c0a
  %stack_var_-32.0.lcssa = phi i8* [ %psz, %dec_label_pc_2c0a ], [ %v23_2cc4, %dec_label_pc_2cc4 ]
  %stack_var_-36.0.lcssa = phi i8* [ %mask, %dec_label_pc_2c0a ], [ %v23_2cc8, %dec_label_pc_2cc4 ]
  %v4_2c27.lcssa = phi i32 [ %v4_2c2758, %dec_label_pc_2c0a ], [ %v5_2cc8, %dec_label_pc_2cc4 ]
  %v1_2c51 = add i32 %v4_2c27.lcssa, 1
  %v4_2c54 = inttoptr i32 %v1_2c51 to i8*
  %v4_2c58 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v6_2c5e = call i1 @_Z13WildcardMatchPKcS0_(i8* %stack_var_-32.0.lcssa, i8* %v4_2c54)
  %v5_2c63 = icmp eq i1 %v6_2c5e, false
  %v1_2c65 = icmp eq i1 %v5_2c63, false
  br i1 %v1_2c65, label %dec_label_pc_2c96, label %dec_label_pc_2c67

dec_label_pc_2c67:                                ; preds = %dec_label_pc_2c4e
  %v2_2c6a = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v5_2c6d = icmp eq i8 %v2_2c6a, 0
  br i1 %v5_2c6d, label %dec_label_pc_2c91, label %dec_label_pc_2c71

dec_label_pc_2c71:                                ; preds = %dec_label_pc_2c67
  %v1_2c74 = add i32 %v4_2c58, 1
  %v3_2c7e = inttoptr i32 %v1_2c74 to i8*
  %v6_2c81 = call i1 @_Z13WildcardMatchPKcS0_(i8* %v3_2c7e, i8* %stack_var_-36.0.lcssa)
  %v5_2c86 = icmp eq i1 %v6_2c81, false
  br i1 %v5_2c86, label %dec_label_pc_2c91, label %dec_label_pc_2c96

dec_label_pc_2c91:                                ; preds = %dec_label_pc_2c71, %dec_label_pc_2c67
  br label %dec_label_pc_2c96

dec_label_pc_2c96:                                ; preds = %dec_label_pc_2c4e, %dec_label_pc_2c71, %dec_label_pc_2c91
  %storemerge = phi i32 [ 0, %dec_label_pc_2c91 ], [ 1, %dec_label_pc_2c71 ], [ 1, %dec_label_pc_2c4e ]
  store i32 %storemerge, i32* @eax, align 8
  br label %dec_label_pc_2cd1

dec_label_pc_2c98:                                ; preds = %dec_label_pc_2c35
  %v2_2c9b = load i8, i8* %stack_var_-32.063, align 1
  %v5_2c9e = icmp eq i8 %v2_2c9b, 0
  %v1_2ca0 = icmp eq i1 %v5_2c9e, false
  br i1 %v1_2ca0, label %dec_label_pc_2cc4, label %dec_label_pc_2ca2

dec_label_pc_2ca2:                                ; preds = %dec_label_pc_2c98
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_2cd1

dec_label_pc_2ca9:                                ; preds = %dec_label_pc_2c3a
  %v2_2cb2 = load i8, i8* %stack_var_-36.064, align 1
  %v14_2cb5 = icmp eq i8 %v2_2cac, %v2_2cb2
  br i1 %v14_2cb5, label %dec_label_pc_2cc4, label %dec_label_pc_2cb9

dec_label_pc_2cb9:                                ; preds = %dec_label_pc_2ca9
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_2cd1

dec_label_pc_2cc4:                                ; preds = %dec_label_pc_2ca9, %dec_label_pc_2c98
  %v4_2cc4.pre-phi = ptrtoint i8* %stack_var_-32.063 to i32
  %v5_2cc4 = add i32 %v4_2cc4.pre-phi, 1
  %v23_2cc4 = inttoptr i32 %v5_2cc4 to i8*
  %v5_2cc8 = add i32 %v4_2c2765, 1
  %v23_2cc8 = inttoptr i32 %v5_2cc8 to i8*
  %v2_2c2a = load i8, i8* %v23_2cc8, align 1
  %v10_2c30 = icmp eq i8 %v2_2c2a, 42
  br i1 %v10_2c30, label %dec_label_pc_2c4e, label %dec_label_pc_2c35

dec_label_pc_2cd1:                                ; preds = %dec_label_pc_2cb9, %dec_label_pc_2ca2, %dec_label_pc_2c96, %dec_label_pc_2c3e
  %v1_2cdb = call i32 @function_2ce2()
  %tmp47 = urem i32 %v1_2cdb, 2
  %v3_2cdb = icmp ne i32 %tmp47, 0
  ret i1 %v3_2cdb

; uselistorder directives
  uselistorder i8 %v2_2c2a, { 1, 0 }
  uselistorder i8* %v23_2cc8, { 2, 1, 0 }
  uselistorder i32 %v5_2cc8, { 2, 1, 0 }
  uselistorder i8* %v23_2cc4, { 1, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 2, 0, 1 }
  uselistorder i1 (i8*, i8*)* @_Z13WildcardMatchPKcS0_, { 1, 0 }
  uselistorder label %dec_label_pc_2c96, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2c35, { 1, 0 }
}

define i32 @function_2ce2() local_unnamed_addr {
dec_label_pc_2ce2:
  %v0_2ce3 = load i32, i32* @eax, align 8
  ret i32 %v0_2ce3
}

define i1 @_Z13WildcardMatchRKSsS0_(i32 %str, i32 %mask) local_unnamed_addr {
dec_label_pc_2ce4:
  %tmp104 = urem i32 %mask, 2
  %tmp105 = icmp ne i32 %tmp104, 0
  ret i1 %tmp105
}

define i32 @function_2d0e() local_unnamed_addr {
dec_label_pc_2d0e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d0e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d0e
}

define i32 @function_2d36() local_unnamed_addr {
dec_label_pc_2d36:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2d36 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2d36 = add i32 %v0_2d36, 1566258372
  %v2_2d36 = inttoptr i32 %v1_2d36 to i32*
  %v3_2d36 = load i32, i32* %v2_2d36, align 4
  %v4_2d36 = add i32 %v3_2d36, 1
  store i32 %v4_2d36, i32* %v2_2d36, align 4
  %v0_2d3c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d3c
}

define i32 @FormatException(i32 %pex, i8* %pszThread) local_unnamed_addr {
dec_label_pc_2d3d:
  %ebx.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v4_2d68 = ptrtoint i8* %pszThread to i32
  %v11_2d68 = icmp eq i8* %pszThread, null
  br i1 %v11_2d68, label %bb, label %dec_label_pc_2d6e

bb:                                               ; preds = %dec_label_pc_2d3d
  %v5_2d6c = call i32 @function_2dd3(i32 %tmp24, i32 %v4_2d68, i32 %pex)
  br label %dec_label_pc_2d6e

dec_label_pc_2d6e:                                ; preds = %bb, %dec_label_pc_2d3d
  store i32 %v4_2d68, i32* %ebx.global-to-local, align 4
  br i1 %v11_2d68, label %dec_label_pc_2dce, label %dec_label_pc_2d88

dec_label_pc_2d88:                                ; preds = %dec_label_pc_2d6e
  %v1_2d71 = bitcast i8* %pszThread to i32*
  %v2_2d8b = load i32, i32* %v1_2d71, align 4
  %v1_2d8d = add i32 %v2_2d8b, -4
  %v2_2d8d = inttoptr i32 %v1_2d8d to i32*
  %v3_2d8d = load i32, i32* %v2_2d8d, align 4
  %v1_2d93 = call i32 @_ZNKSt9type_info4nameEv(i32 %v3_2d8d)
  %v0_2da9 = load i32, i32* %ebx.global-to-local, align 4
  %v4_2da9 = inttoptr i32 %v0_2da9 to i8*
  %v4_2dad = inttoptr i32 %v1_2d93 to i8*
  %v1_2dc4 = inttoptr i32 %pex to i8*
  %v16_2dc4 = call i32 (i8*, i32, ...) @_Z14real_strprintfPKciz(i8* %v1_2dc4, i32 ptrtoint ([48 x i8]* @global_var_5c38.2413 to i32), i8* null, i8* %v4_2dad, i8* %v4_2da9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_5c28.2412, i32 0, i32 0))
  %v0_2dcc = call i32 @function_2dff()
  ret i32 %v0_2dcc

dec_label_pc_2dce:                                ; preds = %dec_label_pc_2d6e
  ret i32 %v4_2d68

; uselistorder directives
  uselistorder i1 %v11_2d68, { 1, 0 }
  uselistorder i8* %pszThread, { 0, 2, 1 }
}

define i32 @function_2dd3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dd3:
  %v0_2dd3 = load i32, i32* @ebp, align 4
  %v1_2dd3 = add i32 %v0_2dd3, -28
  %v2_2dd3 = inttoptr i32 %v1_2dd3 to i32*
  %v3_2dd3 = load i32, i32* %v2_2dd3, align 4
  %v1_2ddd = add i32 %v0_2dd3, -16
  %v2_2ddd = inttoptr i32 %v1_2ddd to i32*
  %v3_2ddd = load i32, i32* %v2_2ddd, align 4
  %v4_2de0 = inttoptr i32 %v3_2ddd to i8*
  %v3_2df4 = inttoptr i32 %v3_2dd3 to i8*
  %v11_2df7 = call i32 (i8*, i32, ...) @_Z14real_strprintfPKciz(i8* %v3_2df4, i32 ptrtoint ([42 x i8]* @global_var_5c68.2414 to i32), i8* null, i8* %v4_2de0)
  ret i32 %v11_2df7
}

define i32 @function_2dff() local_unnamed_addr {
dec_label_pc_2dff:
  %v0_2dff = load i32, i32* @ebp, align 4
  %v1_2dff = add i32 %v0_2dff, -28
  %v2_2dff = inttoptr i32 %v1_2dff to i32*
  %v3_2dff = load i32, i32* %v2_2dff, align 4
  store i32 %v3_2dff, i32* @eax, align 8
  %v1_2e02 = add i32 %v0_2dff, -12
  %v2_2e02 = inttoptr i32 %v1_2e02 to i32*
  %v3_2e02 = load i32, i32* %v2_2e02, align 4
  %v3_2e05 = icmp eq i32 %v3_2e02, 30
  br i1 %v3_2e05, label %bb, label %dec_label_pc_2e0e

bb:                                               ; preds = %dec_label_pc_2dff
  %v1_2e0c = call i32 @function_2e13()
  br label %dec_label_pc_2e0e

dec_label_pc_2e0e:                                ; preds = %bb, %dec_label_pc_2dff
  %v2_2e0c = phi i32 [ %v1_2e0c, %bb ], [ %v3_2dff, %dec_label_pc_2dff ]
  ret i32 %v2_2e0c
}

define i32 @function_2e13() local_unnamed_addr {
dec_label_pc_2e13:
  %v0_2e17 = load i32, i32* @eax, align 8
  ret i32 %v0_2e17
}

define void @_Z12LogExceptionPSt9exceptionPKc(i32 %pex, i8* %pszThread) local_unnamed_addr {
dec_label_pc_2e1a:
  %stack_var_-20 = alloca i32, align 4
  %v2_2e38 = ptrtoint i32* %stack_var_-20 to i32
  %v4_2e4c = inttoptr i32 %pex to i8*
  %v5_2e4c = call i32 @FormatException(i32 %v2_2e38, i8* %v4_2e4c)
  ret void
}

define i32 @function_2e79() local_unnamed_addr {
dec_label_pc_2e79:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e79 = add i32 %v0_2e79, 862319685
  %v2_2e79 = inttoptr i32 %v1_2e79 to i32*
  %v3_2e79 = load i32, i32* %v2_2e79, align 4
  %v4_2e79 = add i32 %v3_2e79, -1
  store i32 %v4_2e79, i32* %v2_2e79, align 4
  %v0_2e7f = load i32, i32* %eax.global-to-local, align 8
  %v1_2e7f = add i32 %v0_2e7f, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_2e7f = icmp eq i32 %v1_2e7f, 0
  store i32 %v1_2e7f, i32* @eax, align 8
  br i1 %v10_2e7f, label %bb, label %dec_label_pc_2e86

bb:                                               ; preds = %dec_label_pc_2e79
  %v1_2e84 = call i32 @function_2ea4()
  store i32 %v1_2e84, i32* @eax, align 8
  br label %dec_label_pc_2e86

dec_label_pc_2e86:                                ; preds = %bb, %dec_label_pc_2e79
  %v0_2e86 = call i32 @function_2e9f()
  store i32 %v0_2e86, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e86
}

define i32 @function_2e89() local_unnamed_addr {
dec_label_pc_2e89:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e89
}

define i32 @function_2e9f() local_unnamed_addr {
dec_label_pc_2e9f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ea4() local_unnamed_addr {
dec_label_pc_2ea4:
  %v0_2ea8 = load i32, i32* @eax, align 8
  ret i32 %v0_2ea8
}

define void @_Z14PrintExceptionPSt9exceptionPKc(i32 %pex, i8* %pszThread) local_unnamed_addr {
dec_label_pc_2ea9:
  %stack_var_-20 = alloca i32, align 4
  %v2_2ec7 = ptrtoint i32* %stack_var_-20 to i32
  %v4_2edb = inttoptr i32 %pex to i8*
  %v5_2edb = call i32 @FormatException(i32 %v2_2ec7, i8* %v4_2edb)
  ret void
}

define i32 @function_2f3d() local_unnamed_addr {
dec_label_pc_2f3d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f3d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f3d
}

define void @_Z22PrintExceptionContinuePSt9exceptionPKc(i32 %pex, i8* %pszThread) local_unnamed_addr {
dec_label_pc_2f53:
  %stack_var_-20 = alloca i32, align 4
  %v2_2f71 = ptrtoint i32* %stack_var_-20 to i32
  %v4_2f85 = inttoptr i32 %pex to i8*
  %v5_2f85 = call i32 @FormatException(i32 %v2_2f71, i8* %v4_2f85)
  ret void

; uselistorder directives
  uselistorder i32 (i32, i8*)* @FormatException, { 2, 1, 0 }
}

define i32 @function_2feb() local_unnamed_addr {
dec_label_pc_2feb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2feb = load i32, i32* %ebx.global-to-local, align 4
  %v1_2feb = add i32 %v0_2feb, 862319685
  %v2_2feb = inttoptr i32 %v1_2feb to i32*
  %v3_2feb = load i32, i32* %v2_2feb, align 4
  %v4_2feb = add i32 %v3_2feb, -1
  store i32 %v4_2feb, i32* %v2_2feb, align 4
  %v0_2ff1 = load i32, i32* %eax.global-to-local, align 8
  %v1_2ff1 = add i32 %v0_2ff1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_2ff1 = icmp eq i32 %v1_2ff1, 0
  store i32 %v1_2ff1, i32* @eax, align 8
  br i1 %v10_2ff1, label %bb, label %dec_label_pc_2ff8

bb:                                               ; preds = %dec_label_pc_2feb
  %v1_2ff6 = call i32 @function_3016()
  store i32 %v1_2ff6, i32* @eax, align 8
  br label %dec_label_pc_2ff8

dec_label_pc_2ff8:                                ; preds = %bb, %dec_label_pc_2feb
  %v0_2ff8 = call i32 @function_3011()
  store i32 %v0_2ff8, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ff8
}

define i32 @function_2ffb() local_unnamed_addr {
dec_label_pc_2ffb:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ffb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ffb
}

define i32 @function_3011() local_unnamed_addr {
dec_label_pc_3011:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3016() local_unnamed_addr {
dec_label_pc_3016:
  %v0_301a = load i32, i32* @eax, align 8
  ret i32 %v0_301a
}

define i32 @_Z17GetDefaultDataDirv() local_unnamed_addr {
dec_label_pc_301b:
  %pszHome_-36 = alloca i8*, align 4
  %v2_3033 = ptrtoint i8** %pszHome_-36 to i32
  %v2_3039 = call i32 @_ZN5boost11filesystem34pathC1Ev(i32 %v2_3033)
  ret i32 %v2_3039
}

define i32 @function_3049() local_unnamed_addr {
dec_label_pc_3049:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3049 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3049 = add i32 %v0_3049, 1166795845
  %v2_3049 = inttoptr i32 %v1_3049 to i32*
  %v3_3049 = load i32, i32* %v2_3049, align 4
  %v4_3049 = add i32 %v3_3049, -1
  store i32 %v4_3049, i32* %v2_3049, align 4
  %v0_3051 = load i32, i32* %edx.global-to-local, align 8
  %v1_3051 = load i32, i32* %ecx.global-to-local, align 4
  %v3_3051 = add i32 %v0_3051, -117
  %v4_3051 = add i32 %v3_3051, %v1_3051
  %v5_3051 = inttoptr i32 %v4_3051 to i8*
  %v6_3051 = load i8, i8* %v5_3051, align 1
  %v8_3051 = mul i8 %v6_3051, 32
  store i8 %v8_3051, i8* %v5_3051, align 1
  %v0_3058 = load i32, i32* %edx.global-to-local, align 8
  %v1_3058 = and i32 %v0_3058, -65281
  store i32 %v1_3058, i32* @edx, align 8
  %v0_305a = load i32, i32* %eax.global-to-local, align 8
  %v4_305a = trunc i32 %v0_305a to i8
  %v5_305a = icmp eq i8 %v4_305a, 0
  %v1_305c = icmp eq i1 %v5_305a, false
  %v0_30a0 = load i32, i32* @ebp, align 4
  br i1 %v1_305c, label %dec_label_pc_3098, label %dec_label_pc_305e

dec_label_pc_305e:                                ; preds = %dec_label_pc_3049
  %v1_306e = add i32 %v0_30a0, -24
  store i32 %v1_306e, i32* %eax.global-to-local, align 8
  %v3_3074 = call i32 @_ZN5boost11filesystem34pathC1IA2_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v1_306e, i32 ptrtoint (i32* @global_var_5cbc.2416 to i32), i32 0)
  %v0_3079 = load i32, i32* @ebp, align 4
  %v1_3079 = add i32 %v0_3079, -24
  %v1_3080 = add i32 %v0_3079, -32
  store i32 %v1_3080, i32* %eax.global-to-local, align 8
  %v2_3086 = call i32 @_ZN5boost11filesystem34pathaSERKS1_(i32 %v1_3080, i32 %v1_3079)
  %v0_308b = load i32, i32* @ebp, align 4
  %v1_308b = add i32 %v0_308b, -24
  store i32 %v1_308b, i32* %eax.global-to-local, align 8
  %v1_3091 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_308b)
  br label %dec_label_pc_30cf

dec_label_pc_3098:                                ; preds = %dec_label_pc_3049
  %v1_30a0 = add i32 %v0_30a0, -28
  %v1_30a7 = add i32 %v0_30a0, -20
  store i32 %v1_30a7, i32* %eax.global-to-local, align 8
  %v3_30ad = call i32 @_ZN5boost11filesystem34pathC1IPcEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v1_30a7, i32 %v1_30a0, i32 0)
  %v0_30b2 = load i32, i32* @ebp, align 4
  %v1_30b2 = add i32 %v0_30b2, -20
  %v1_30b9 = add i32 %v0_30b2, -32
  store i32 %v1_30b9, i32* %eax.global-to-local, align 8
  %v2_30bf = call i32 @_ZN5boost11filesystem34pathaSERKS1_(i32 %v1_30b9, i32 %v1_30b2)
  %v0_30c4 = load i32, i32* @ebp, align 4
  %v1_30c4 = add i32 %v0_30c4, -20
  store i32 %v1_30c4, i32* %eax.global-to-local, align 8
  %v1_30ca = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_30c4)
  br label %dec_label_pc_30cf

dec_label_pc_30cf:                                ; preds = %dec_label_pc_3098, %dec_label_pc_305e
  %v0_30df = load i32, i32* @ebp, align 4
  %v1_30df = add i32 %v0_30df, -16
  store i32 %v1_30df, i32* %eax.global-to-local, align 8
  %v3_30e5 = call i32 @_ZN5boost11filesystem34pathC1IA14_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %v1_30df, i32 ptrtoint ([14 x i8]* @global_var_5cbe.2417 to i32), i32 0)
  store i32 %v3_30e5, i32* %eax.global-to-local, align 8
  %v0_30ea = load i32, i32* @ebp, align 4
  %v1_30ea = add i32 %v0_30ea, -44
  %v2_30ea = inttoptr i32 %v1_30ea to i32*
  %v3_30ea = load i32, i32* %v2_30ea, align 4
  store i32 %v3_30ea, i32* %eax.global-to-local, align 8
  %v1_30ed = add i32 %v0_30ea, -16
  %v1_30f4 = add i32 %v0_30ea, -32
  store i32 %v1_30f4, i32* %edx.global-to-local, align 8
  %v3_30fe = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %v3_30ea, i32 %v1_30f4, i32 %v1_30ed)
  %v0_3106 = load i32, i32* @ebp, align 4
  %v1_3106 = add i32 %v0_3106, -16
  store i32 %v1_3106, i32* %eax.global-to-local, align 8
  %v1_310c = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3106)
  %v0_3111 = load i32, i32* @ebp, align 4
  %v1_3111 = add i32 %v0_3111, -32
  store i32 %v1_3111, i32* %eax.global-to-local, align 8
  %v1_3117 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3111)
  store i32 %v1_3117, i32* %eax.global-to-local, align 8
  %v0_311c = load i32, i32* @ebp, align 4
  %v1_311c = add i32 %v0_311c, -44
  %v2_311c = inttoptr i32 %v1_311c to i32*
  %v3_311c = load i32, i32* %v2_311c, align 4
  store i32 %v3_311c, i32* @eax, align 8
  %v1_311f = add i32 %v0_311c, -12
  %v2_311f = inttoptr i32 %v1_311f to i32*
  %v3_311f = load i32, i32* %v2_311f, align 4
  %v2_3122 = xor i32 %v3_311f, 30
  %v3_3122 = icmp eq i32 %v2_3122, 0
  store i32 %v2_3122, i32* %edx.global-to-local, align 8
  br i1 %v3_3122, label %bb, label %dec_label_pc_312b

bb:                                               ; preds = %dec_label_pc_30cf
  %v1_3129 = call i32 @function_3176()
  store i32 %v1_3129, i32* @eax, align 8
  br label %dec_label_pc_312b

dec_label_pc_312b:                                ; preds = %bb, %dec_label_pc_30cf
  %v0_312b = call i32 @function_3171()
  store i32 %v0_312b, i32* %eax.global-to-local, align 8
  ret i32 %v0_312b

; uselistorder directives
  uselistorder i32 %v0_30a0, { 1, 2, 0 }
}

define i32 @function_312d() local_unnamed_addr {
dec_label_pc_312d:
  %eax.global-to-local = alloca i32, align 4
  %v0_312d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_312d, i32* @ebx, align 4
  %v0_312f = load i32, i32* @ebp, align 4
  %v1_312f = add i32 %v0_312f, -24
  store i32 %v1_312f, i32* %eax.global-to-local, align 8
  %v1_3135 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_312f)
  store i32 %v1_3135, i32* %eax.global-to-local, align 8
  %v0_313a = call i32 @function_315c()
  store i32 %v0_313a, i32* %eax.global-to-local, align 8
  ret i32 %v0_313a
}

define i32 @function_313c() local_unnamed_addr {
dec_label_pc_313c:
  %eax.global-to-local = alloca i32, align 4
  %v0_313c = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_313c, i32* @ebx, align 4
  %v0_313e = load i32, i32* @ebp, align 4
  %v1_313e = add i32 %v0_313e, -20
  store i32 %v1_313e, i32* %eax.global-to-local, align 8
  %v1_3144 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_313e)
  store i32 %v1_3144, i32* %eax.global-to-local, align 8
  %v0_3149 = call i32 @function_315c()
  store i32 %v0_3149, i32* %eax.global-to-local, align 8
  ret i32 %v0_3149
}

define i32 @function_314b() local_unnamed_addr {
dec_label_pc_314b:
  %eax.global-to-local = alloca i32, align 4
  %v0_314b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_314b, i32* @ebx, align 4
  %v0_314d = load i32, i32* @ebp, align 4
  %v1_314d = add i32 %v0_314d, -16
  store i32 %v1_314d, i32* %eax.global-to-local, align 8
  %v1_3153 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_314d)
  store i32 %v1_3153, i32* %eax.global-to-local, align 8
  %v0_3158 = call i32 @function_315c()
  store i32 %v0_3158, i32* %eax.global-to-local, align 8
  ret i32 %v0_3158

; uselistorder directives
  uselistorder i32 ()* @function_315c, { 2, 1, 0 }
}

define i32 @function_315b() local_unnamed_addr {
dec_label_pc_315b:
  %eax.global-to-local = alloca i32, align 4
  %v0_315b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_315b
}

define i32 @function_315c() local_unnamed_addr {
dec_label_pc_315c:
  %v0_315c = load i32, i32* @ebp, align 4
  %v1_315c = add i32 %v0_315c, -32
  %v1_3162 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_315c)
  %v0_3167 = load i32, i32* @ebx, align 4
  ret i32 %v0_3167
}

define i32 @function_3171() local_unnamed_addr {
dec_label_pc_3171:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3176() local_unnamed_addr {
dec_label_pc_3176:
  %v0_317a = load i32, i32* @eax, align 8
  ret i32 %v0_317a
}

define void @__tcf_0(i8* %arg0) local_unnamed_addr {
dec_label_pc_317d:
  br label %dec_label_pc_31a2

dec_label_pc_31a2:                                ; preds = %dec_label_pc_317d, %dec_label_pc_31a2
  %v0_31a2109 = phi i32 [ 21844, %dec_label_pc_317d ], [ %v1_31a2, %dec_label_pc_31a2 ]
  %v1_31a2 = add i32 %v0_31a2109, -4
  %v1_31a8 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_31a2)
  %v10_319a = icmp eq i32 %v0_31a2109, 21840
  br i1 %v10_319a, label %dec_label_pc_31af, label %dec_label_pc_31a2

dec_label_pc_31af:                                ; preds = %dec_label_pc_31a2
  store i32 0, i32* @eax, align 8
  %v1_31b9 = call i32 @function_31c0()
  ret void

; uselistorder directives
  uselistorder i32 %v1_31a2, { 1, 0 }
  uselistorder label %dec_label_pc_31a2, { 1, 0 }
}

define i32 @function_31c0() local_unnamed_addr {
dec_label_pc_31c0:
  %v0_31c5 = load i32, i32* @eax, align 8
  ret i32 %v0_31c5
}

define i32 @_Z10GetDataDirb(i1 %fNetSpecific) local_unnamed_addr {
dec_label_pc_31c6:
  %tmp12 = zext i1 %fNetSpecific to i32
  %v5_31ea = call i32 @function_3253(i32 %tmp12)
  ret i32 %v5_31ea
}

define i32 @function_31f7() local_unnamed_addr {
dec_label_pc_31f7:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_31f7 = load i32, i32* @ebp, align 4
  %v1_31f7 = add i32 %v0_31f7, -1063972928
  %v2_31f7 = inttoptr i32 %v1_31f7 to i32*
  %v3_31f7 = load i32, i32* %v2_31f7, align 4
  %v4_31f7 = add i32 %v3_31f7, 1
  store i32 %v4_31f7, i32* %v2_31f7, align 4
  %v0_31fd = load i32, i32* %eax.global-to-local, align 8
  %v4_31fd = trunc i32 %v0_31fd to i8
  %v5_31fd = icmp eq i8 %v4_31fd, 0
  br i1 %v5_31fd, label %bb, label %dec_label_pc_3201

bb:                                               ; preds = %dec_label_pc_31f7
  %v2_31ff = call i32 @function_3253(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_31ff, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3201

dec_label_pc_3201:                                ; preds = %bb, %dec_label_pc_31f7
  %v0_3201 = load i32, i32* @ebp, align 4
  %v1_3201 = add i32 %v0_3201, -73
  %v2_3201 = inttoptr i32 %v1_3201 to i8*
  store i8 0, i8* %v2_3201, align 1
  store i32 21836, i32* %edi.global-to-local, align 8
  %v3_3224.pre = load i32, i32* %eax.global-to-local, align 8
  store i32 1, i32* %esi.global-to-local, align 4
  %v4_3224101 = and i32 %v3_3224.pre, -256
  %v5_3224102 = or i32 %v4_3224101, 1
  store i32 %v5_3224102, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3213

dec_label_pc_3213:                                ; preds = %dec_label_pc_3201, %dec_label_pc_3213
  %v0_3213103 = phi i32 [ 21836, %dec_label_pc_3201 ], [ %v1_321b, %dec_label_pc_3213 ]
  %v1_3216 = call i32 @_ZN5boost11filesystem34pathC1Ev(i32 %v0_3213103)
  %v0_321b = load i32, i32* %edi.global-to-local, align 8
  %v1_321b = add i32 %v0_321b, 4
  store i32 %v1_321b, i32* %edi.global-to-local, align 8
  %v0_321e = load i32, i32* %esi.global-to-local, align 4
  %v1_321e = add i32 %v0_321e, -1
  %v5_321e = icmp eq i32 %v0_321e, 0
  store i32 %v1_321e, i32* %esi.global-to-local, align 4
  %v1_3224 = icmp eq i1 %v5_321e, false
  %v2_3224 = zext i1 %v1_3224 to i32
  %v4_3224 = and i32 %v1_3216, -256
  %v5_3224 = or i32 %v2_3224, %v4_3224
  store i32 %v5_3224, i32* %eax.global-to-local, align 8
  %v5_3227 = icmp eq i1 %v1_3224, false
  %v1_3229 = icmp eq i1 %v5_3227, false
  br i1 %v1_3229, label %dec_label_pc_3213, label %dec_label_pc_322b

dec_label_pc_322b:                                ; preds = %dec_label_pc_3213
  ret i32 %v5_3224

; uselistorder directives
  uselistorder i32 %v1_321b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 0, 3 }
  uselistorder i32 (i32)* @_ZN5boost11filesystem34pathC1Ev, { 1, 0 }
  uselistorder i32 (i32)* @function_3253, { 1, 0 }
  uselistorder label %dec_label_pc_3213, { 1, 0 }
}

define i32 @function_3253(i32 %arg1) local_unnamed_addr {
dec_label_pc_3253:
  %v2_3258 = load i8, i8* inttoptr (i32 21776 to i8*), align 16
  %v3_3258 = zext i8 %v2_3258 to i32
  %v5_325b = icmp eq i8 %v2_3258, 0
  %v1_325d = icmp eq i1 %v5_325b, false
  br i1 %v1_325d, label %bb, label %dec_label_pc_325f

bb:                                               ; preds = %dec_label_pc_3253
  %v2_325d = call i32 @function_32ae()
  br label %dec_label_pc_325f

dec_label_pc_325f:                                ; preds = %bb, %dec_label_pc_3253
  %v2_325f = phi i32 [ %v2_325d, %bb ], [ %v3_3258, %dec_label_pc_3253 ]
  ret i32 %v2_325f
}

define i32 @function_32ae() local_unnamed_addr {
dec_label_pc_32ae:
  %v0_32ae = load i32, i32* @ebp, align 4
  %v1_32ae = add i32 %v0_32ae, -76
  %v2_32ae = inttoptr i32 %v1_32ae to i8*
  %v3_32ae = load i8, i8* %v2_32ae, align 1
  %v4_32ae = zext i8 %v3_32ae to i32
  %v2_32b2 = mul nuw nsw i32 %v4_32ae, 4
  %v1_32b5 = add nuw nsw i32 %v2_32b2, 21836
  %v2_32ba = add i32 %v0_32ae, -36
  %v3_32ba = inttoptr i32 %v2_32ba to i32*
  store i32 %v1_32b5, i32* %v3_32ba, align 4
  %v0_32bd = load i32, i32* @ebp, align 4
  %v1_32bd = add i32 %v0_32bd, -76
  %v2_32bd = inttoptr i32 %v1_32bd to i8*
  %v3_32bd = load i8, i8* %v2_32bd, align 1
  %v4_32bd = zext i8 %v3_32bd to i32
  %v1_32c1 = add nuw nsw i32 %v4_32bd, 21661
  %v2_32c1 = inttoptr i32 %v1_32c1 to i8*
  %v3_32c1 = load i8, i8* %v2_32c1, align 1
  %v5_32c8 = icmp eq i8 %v3_32c1, 0
  br i1 %v5_32c8, label %dec_label_pc_32d4, label %dec_label_pc_32cc

dec_label_pc_32cc:                                ; preds = %dec_label_pc_32ae
  %v1_32cc = add i32 %v0_32bd, -36
  %v2_32cc = inttoptr i32 %v1_32cc to i32*
  %v3_32cc = load i32, i32* %v2_32cc, align 4
  store i32 %v3_32cc, i32* @ebx, align 4
  %v0_32cf = call i32 @function_349f()
  ret i32 %v0_32cf

dec_label_pc_32d4:                                ; preds = %dec_label_pc_32ae
  %v1_32fc = add i32 %v0_32bd, -64
  %v9_3302 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32 %v1_32fc, i32 21856, i32 ptrtoint ([13 x i8]* @global_var_5ccc.2419 to i32), i8 ptrtoint ([9 x i8]* @global_var_5b44.2374 to i8), i32 1060, i32 0)
  %v0_3307 = load i32, i32* @ebp, align 4
  %v1_3307 = add i32 %v0_3307, -30
  ret i32 %v1_3307

; uselistorder directives
  uselistorder i32 21836, { 2, 0, 1 }
}

define i32 @function_3340() local_unnamed_addr {
dec_label_pc_3340:
  %eax.global-to-local = alloca i32, align 4
  %v0_3343 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3343
}

define i32 @function_3394(i16 %arg1) local_unnamed_addr {
dec_label_pc_3394:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3394 = load i32, i32* %eax.global-to-local, align 8
  %v2_3394 = load i32, i32* %ecx.global-to-local, align 4
  %v3_3394 = lshr i32 %v2_3394, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_3394 = add i32 %v3_3394, %v0_3394
  %v20_3394 = and i32 %v5_3394, 255
  %v22_3394 = and i32 %v0_3394, -256
  %v23_3394 = or i32 %v20_3394, %v22_3394
  store i32 %v23_3394, i32* %eax.global-to-local, align 8
  ret i32 %v23_3394

; uselistorder directives
  uselistorder i32 %v0_3394, { 1, 0 }
}

define i32 @function_33cc() local_unnamed_addr {
dec_label_pc_33cc:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_33cc = load i32, i32* %eax.global-to-local, align 8
  %v2_33cc = add i32 %v0_33cc, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v16_33cc = and i32 %v2_33cc, 255
  %v18_33cc = and i32 %v0_33cc, -256
  %v19_33cc = or i32 %v16_33cc, %v18_33cc
  store i32 %v19_33cc, i32* @eax, align 8
  %v0_33ce = load i32, i32* %ebp.global-to-local, align 4
  %v1_33ce = add i32 %v0_33ce, 1
  store i32 %v1_33ce, i32* %ebp.global-to-local, align 4
  %v1_33cf = load i32, i32* %ecx.global-to-local, align 4
  %v2_33cf = add i32 %v1_33cf, -1561844732
  %v3_33cf = inttoptr i32 %v2_33cf to double*
  %v4_33cf = load double, double* %v3_33cf, align 4
  %v5_33cf = fpext double %v4_33cf to x86_fp80
  %v6_33cf = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_33cf = fmul x86_fp80 %v5_33cf, %v6_33cf
  store x86_fp80 %v7_33cf, x86_fp80* %st0.global-to-local, align 4
  %v0_33d5 = call i32 @function_458d33da()
  store i32 %v0_33d5, i32* %eax.global-to-local, align 8
  ret i32 %v0_33d5

; uselistorder directives
  uselistorder i32 %v0_33cc, { 1, 0 }
}

define i32 @function_33dd() local_unnamed_addr {
dec_label_pc_33dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_33dd = load i32, i32* %eax.global-to-local, align 8
  %v11_33dd = and i32 %v0_33dd, -24
  store i32 %v11_33dd, i32* @eax, align 8
  %v0_33df = call i32 @function_8d0034cc()
  store i32 %v0_33df, i32* %eax.global-to-local, align 8
  ret i32 %v0_33df
}

define i32 @function_3403(i32 %arg1) local_unnamed_addr {
dec_label_pc_3403:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3403 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3403 = add i32 %v0_3403, 76143685
  %v2_3403 = inttoptr i32 %v1_3403 to i32*
  %v3_3403 = load i32, i32* %v2_3403, align 4
  %v4_3403 = add i32 %v3_3403, -1
  store i32 %v4_3403, i32* %v2_3403, align 4
  %v0_3409 = load i32, i32* %eax.global-to-local, align 8
  %v1_3409 = trunc i32 %v0_3409 to i8
  %v2_3409 = and i8 %v1_3409, -24
  %v8_3409 = zext i8 %v2_3409 to i32
  %v10_3409 = and i32 %v0_3409, -256
  %v11_3409 = or i32 %v8_3409, %v10_3409
  store i32 %v11_3409, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_340d = inttoptr i32 %v11_3409 to i8*
  %v2_340d = load i8, i8* %v1_340d, align 8
  %v5_340d = add i8 %v2_340d, %v2_3409
  store i8 %v5_340d, i8* %v1_340d, align 8
  %v0_340f = load i32, i32* %eax.global-to-local, align 8
  %v1_340f = xor i32 %v0_340f, 1
  %v4_340f = trunc i32 %v1_340f to i8
  store i32 %v1_340f, i32* %eax.global-to-local, align 8
  %v5_3412 = icmp eq i8 %v4_340f, 0
  %v0_3459 = load i32, i32* @ebp, align 4
  br i1 %v5_3412, label %dec_label_pc_3459, label %dec_label_pc_3416

dec_label_pc_3416:                                ; preds = %dec_label_pc_3403
  %v1_341e = add i32 %v0_3459, -36
  %v2_341e = inttoptr i32 %v1_341e to i32*
  %v3_341e = load i32, i32* %v2_341e, align 4
  store i32 %v3_341e, i32* %eax.global-to-local, align 8
  %v2_3424 = call i32 @_ZN5boost11filesystem34pathaSIA1_cEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS8_(i32 %v3_341e, i32 ptrtoint (i32* @global_var_5bd0.2421 to i32))
  store i32 %v2_3424, i32* %eax.global-to-local, align 8
  %v0_3429 = load i32, i32* @ebp, align 4
  %v1_3429 = add i32 %v0_3429, -36
  %v2_3429 = inttoptr i32 %v1_3429 to i32*
  %v3_3429 = load i32, i32* %v2_3429, align 4
  store i32 %v3_3429, i32* @ebx, align 4
  %v0_342c = call i32 @function_3494()
  store i32 %v0_342c, i32* %eax.global-to-local, align 8
  ret i32 %v0_342c

dec_label_pc_3459:                                ; preds = %dec_label_pc_3403
  %v1_3459 = add i32 %v0_3459, -76
  %v2_3459 = inttoptr i32 %v1_3459 to i8*
  %v3_3459 = load i8, i8* %v2_3459, align 1
  %v10_3459 = icmp eq i8 %v3_3459, 0
  br i1 %v10_3459, label %bb, label %dec_label_pc_345f

bb:                                               ; preds = %dec_label_pc_3459
  %v1_345d = call i32 @function_347b()
  store i32 %v1_345d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_345f

dec_label_pc_345f:                                ; preds = %bb, %dec_label_pc_3459
  %v2_345d = phi i32 [ %v1_345d, %bb ], [ %v1_340f, %dec_label_pc_3459 ]
  ret i32 %v2_345d

; uselistorder directives
  uselistorder i32 %v0_3459, { 1, 0 }
}

define i32 @function_347b() local_unnamed_addr {
dec_label_pc_347b:
  %eax.global-to-local = alloca i32, align 4
  %v0_347b = load i32, i32* @ebp, align 4
  %v1_347b = add i32 %v0_347b, -36
  %v2_347b = inttoptr i32 %v1_347b to i32*
  %v3_347b = load i32, i32* %v2_347b, align 4
  store i32 %v3_347b, i32* %eax.global-to-local, align 8
  %v1_3481 = call i32 @_ZN5boost11filesystem318create_directoriesERKNS0_4pathE(i32 %v3_347b)
  store i32 %v1_3481, i32* %eax.global-to-local, align 8
  %v0_3486 = load i32, i32* @ebp, align 4
  %v1_3486 = add i32 %v0_3486, -76
  %v2_3486 = inttoptr i32 %v1_3486 to i8*
  %v3_3486 = load i8, i8* %v2_3486, align 1
  %v4_3486 = zext i8 %v3_3486 to i32
  store i32 %v4_3486, i32* %eax.global-to-local, align 8
  %v1_348a = add nuw nsw i32 %v4_3486, 21661
  %v2_348a = inttoptr i32 %v1_348a to i8*
  store i8 1, i8* %v2_348a, align 1
  %v4_3491 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_3491
}

define i32 @function_3494() local_unnamed_addr {
dec_label_pc_3494:
  %v0_3494 = load i32, i32* @ebp, align 4
  %v1_3494 = add i32 %v0_3494, -64
  %v1_349a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %v1_3494)
  ret i32 %v1_349a
}

define i32 @function_349f() local_unnamed_addr {
dec_label_pc_349f:
  %v0_349f = load i32, i32* @ebx, align 4
  store i32 %v0_349f, i32* @eax, align 8
  %v0_34a1 = load i32, i32* @ebp, align 4
  %v1_34a1 = add i32 %v0_34a1, -28
  %v2_34a1 = inttoptr i32 %v1_34a1 to i32*
  %v3_34a1 = load i32, i32* %v2_34a1, align 4
  %v3_34a4 = icmp eq i32 %v3_34a1, 30
  br i1 %v3_34a4, label %bb, label %dec_label_pc_34b1

bb:                                               ; preds = %dec_label_pc_349f
  %v1_34ab = call i32 @function_359e()
  store i32 %v1_34ab, i32* @eax, align 8
  br label %dec_label_pc_34b1

dec_label_pc_34b1:                                ; preds = %bb, %dec_label_pc_349f
  %v0_34b1 = call i32 @function_3599()
  ret i32 %v0_34b1
}

define i32 @function_34b6() local_unnamed_addr {
dec_label_pc_34b6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_34b6 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_34b6, i32* %edi.global-to-local, align 8
  %v0_34b8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_34b8 = icmp eq i32 %v0_34b8, 0
  br i1 %v1_34b8, label %dec_label_pc_34dd, label %dec_label_pc_34bc

dec_label_pc_34bc:                                ; preds = %dec_label_pc_34b6
  %v1_34c1 = load i32, i32* %esi.global-to-local, align 4
  %v2_34c3 = mul i32 %v1_34c1, -4
  %v1_34c6 = add i32 %v2_34c3, ptrtoint (i32* @global_var_4.2376 to i32)
  %v10_34c6 = icmp eq i32 %v1_34c6, 0
  store i32 %v1_34c6, i32* %eax.global-to-local, align 8
  %v3_34c9 = add i32 %v1_34c6, %v0_34b8
  store i32 %v3_34c9, i32* %esi.global-to-local, align 4
  br i1 %v10_34c6, label %dec_label_pc_34dd, label %dec_label_pc_34d0

dec_label_pc_34d0:                                ; preds = %dec_label_pc_34bc, %dec_label_pc_34d0
  %v0_34d0112 = phi i32 [ %v1_34d0, %dec_label_pc_34d0 ], [ %v3_34c9, %dec_label_pc_34bc ]
  %v1_34d0 = sub i32 %v0_34d0112, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_34d0, i32* %esi.global-to-local, align 4
  %v1_34d6 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_34d0)
  store i32 %v1_34d6, i32* %eax.global-to-local, align 8
  %v1_34cc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_34cc = icmp eq i32 %v1_34d0, %v1_34cc.pre
  br i1 %v12_34cc, label %dec_label_pc_34cc.dec_label_pc_34dd.loopexit_crit_edge, label %dec_label_pc_34d0

dec_label_pc_34cc.dec_label_pc_34dd.loopexit_crit_edge: ; preds = %dec_label_pc_34d0
  %v0_34dd.pre.pre = load i32, i32* %edi.global-to-local, align 8
  br label %dec_label_pc_34dd

dec_label_pc_34dd:                                ; preds = %dec_label_pc_34bc, %dec_label_pc_34cc.dec_label_pc_34dd.loopexit_crit_edge, %dec_label_pc_34b6
  %v0_34dd = phi i32 [ %v0_34b6, %dec_label_pc_34b6 ], [ %v0_34dd.pre.pre, %dec_label_pc_34cc.dec_label_pc_34dd.loopexit_crit_edge ], [ %v0_34b6, %dec_label_pc_34bc ]
  %v2_34e55 = phi i32 [ %v0_34b6, %dec_label_pc_34b6 ], [ %v1_34d6, %dec_label_pc_34cc.dec_label_pc_34dd.loopexit_crit_edge ], [ 0, %dec_label_pc_34bc ]
  store i32 %v0_34dd, i32* @ebx, align 4
  %v0_34df = load i32, i32* @ebp, align 4
  %v1_34df = add i32 %v0_34df, -73
  %v2_34df = inttoptr i32 %v1_34df to i8*
  %v3_34df = load i8, i8* %v2_34df, align 1
  %v10_34df = icmp eq i8 %v3_34df, 0
  %v1_34e3 = icmp eq i1 %v10_34df, false
  br i1 %v1_34e3, label %bb, label %dec_label_pc_34e5

bb:                                               ; preds = %dec_label_pc_34dd
  %v2_34e3 = call i32 @function_34f1()
  store i32 %v2_34e3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34e5

dec_label_pc_34e5:                                ; preds = %bb, %dec_label_pc_34dd
  %v2_34e5 = phi i32 [ %v2_34e3, %bb ], [ %v2_34e55, %dec_label_pc_34dd ]
  ret i32 %v2_34e5

; uselistorder directives
  uselistorder i32 %v1_34d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_34b6, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_34dd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_34d0, { 1, 0 }
}

define i32 @function_34f1() local_unnamed_addr {
dec_label_pc_34f1:
  %v0_34f1 = load i32, i32* @ebx, align 4
  ret i32 %v0_34f1
}

define i32 @function_34fc() local_unnamed_addr {
dec_label_pc_34fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_34fc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34fc
}

define i32 @function_351a() local_unnamed_addr {
dec_label_pc_351a:
  %eax.global-to-local = alloca i32, align 4
  %v0_351a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_351a
}

define i32 @function_3526() local_unnamed_addr {
dec_label_pc_3526:
  %v0_3526 = call i32 @function_352a()
  ret i32 %v0_3526
}

define i32 @function_3528() local_unnamed_addr {
dec_label_pc_3528:
  %eax.global-to-local = alloca i32, align 4
  %v0_3528 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3528
}

define i32 @function_352a() local_unnamed_addr {
dec_label_pc_352a:
  %v0_352a = load i32, i32* @ebp, align 4
  %v1_352a = add i32 %v0_352a, -30
  ret i32 %v1_352a
}

define i32 @function_3535() local_unnamed_addr {
dec_label_pc_3535:
  %v0_3535 = call i32 @function_3584()
  ret i32 %v0_3535
}

define i32 @function_3537() local_unnamed_addr {
dec_label_pc_3537:
  %v0_3539 = load i32, i32* @ebp, align 4
  %v1_3539 = add i32 %v0_3539, -44
  %v1_353f = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3539)
  %v0_3544 = call i32 @function_3548()
  ret i32 %v0_3544
}

define i32 @function_3546() local_unnamed_addr {
dec_label_pc_3546:
  %eax.global-to-local = alloca i32, align 4
  %v0_3546 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3546
}

define i32 @function_3548() local_unnamed_addr {
dec_label_pc_3548:
  %v0_3548 = load i32, i32* @ebp, align 4
  %v1_3548 = add i32 %v0_3548, -48
  %v1_354e = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3548)
  %v0_3553 = call i32 @function_3557()
  ret i32 %v0_3553
}

define i32 @function_3555() local_unnamed_addr {
dec_label_pc_3555:
  %eax.global-to-local = alloca i32, align 4
  %v0_3555 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3555
}

define i32 @function_3557() local_unnamed_addr {
dec_label_pc_3557:
  %v0_3557 = load i32, i32* @ebp, align 4
  %v1_3557 = add i32 %v0_3557, -52
  ret i32 %v1_3557
}

define i32 @function_3562() local_unnamed_addr {
dec_label_pc_3562:
  %v0_3562 = call i32 @function_3566()
  ret i32 %v0_3562
}

define i32 @function_3564() local_unnamed_addr {
dec_label_pc_3564:
  %eax.global-to-local = alloca i32, align 4
  %v0_3564 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3564
}

define i32 @function_3566() local_unnamed_addr {
dec_label_pc_3566:
  %v0_3566 = load i32, i32* @ebp, align 4
  %v1_3566 = add i32 %v0_3566, -29
  ret i32 %v1_3566
}

define i32 @function_3571() local_unnamed_addr {
dec_label_pc_3571:
  %v0_3571 = call i32 @function_3584()
  ret i32 %v0_3571
}

define i32 @function_3573() local_unnamed_addr {
dec_label_pc_3573:
  %eax.global-to-local = alloca i32, align 4
  %v0_3573 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_3573, i32* @ebx, align 4
  %v0_3575 = load i32, i32* @ebp, align 4
  %v1_3575 = add i32 %v0_3575, -40
  store i32 %v1_3575, i32* %eax.global-to-local, align 8
  %v1_357b = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3575)
  store i32 %v1_357b, i32* %eax.global-to-local, align 8
  %v0_3580 = call i32 @function_3584()
  store i32 %v0_3580, i32* %eax.global-to-local, align 8
  ret i32 %v0_3580

; uselistorder directives
  uselistorder i32 ()* @function_3584, { 2, 1, 0 }
}

define i32 @function_3583() local_unnamed_addr {
dec_label_pc_3583:
  %eax.global-to-local = alloca i32, align 4
  %v0_3583 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3583
}

define i32 @function_3584() local_unnamed_addr {
dec_label_pc_3584:
  %v0_3584 = load i32, i32* @ebp, align 4
  %v1_3584 = add i32 %v0_3584, -64
  %v1_358a = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %v1_3584)
  %v0_358f = load i32, i32* @ebx, align 4
  ret i32 %v0_358f

; uselistorder directives
  uselistorder i32 (i32)* @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev, { 1, 0 }
}

define i32 @function_3599() local_unnamed_addr {
dec_label_pc_3599:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_359e() local_unnamed_addr {
dec_label_pc_359e:
  %v0_359e = load i32, i32* @ebp, align 4
  %v3_35a2 = add i32 %v0_359e, -4
  %v1_35a3 = inttoptr i32 %v3_35a2 to i32*
  %v2_35a3 = load i32, i32* %v1_35a3, align 4
  store i32 %v2_35a3, i32* @edi, align 8
  %v1_35a4 = inttoptr i32 %v0_359e to i32*
  %v2_35a4 = load i32, i32* %v1_35a4, align 4
  store i32 %v2_35a4, i32* @ebp, align 4
  %v0_35a5 = load i32, i32* @eax, align 8
  ret i32 %v0_35a5
}

define i32 @_Z13GetConfigFilev() local_unnamed_addr {
dec_label_pc_35a6:
  %stack_var_-17 = alloca i32, align 4
  %v2_35be = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_35be
}

define i32 @function_3674() local_unnamed_addr {
dec_label_pc_3674:
  %eax.global-to-local = alloca i32, align 4
  %v0_3674 = load i32, i32* @ebx, align 4
  %v1_3674 = add i32 %v0_3674, 76141637
  %v2_3674 = inttoptr i32 %v1_3674 to i32*
  %v3_3674 = load i32, i32* %v2_3674, align 4
  %v4_3674 = add i32 %v3_3674, -1
  store i32 %v4_3674, i32* %v2_3674, align 4
  %v0_367a = load i32, i32* %eax.global-to-local, align 8
  %v1_367a = trunc i32 %v0_367a to i8
  %v2_367a = and i8 %v1_367a, -24
  %v1_367c = and i32 %v0_367a, -65304
  %v2_367c = or i32 %v1_367c, 59392
  store i32 %v2_367c, i32* %eax.global-to-local, align 8
  %v1_367e = inttoptr i32 %v2_367c to i8*
  %v2_367e = load i8, i8* %v1_367e, align 8
  %v5_367e = add i8 %v2_367e, %v2_367a
  store i8 %v5_367e, i8* %v1_367e, align 8
  %v0_3680 = load i32, i32* %eax.global-to-local, align 8
  %v1_3680 = xor i32 %v0_3680, 1
  %v4_3680 = trunc i32 %v1_3680 to i8
  store i32 %v1_3680, i32* %eax.global-to-local, align 8
  %v5_3683 = icmp eq i8 %v4_3680, 0
  br i1 %v5_3683, label %bb, label %dec_label_pc_368b

bb:                                               ; preds = %dec_label_pc_3674
  %v1_3685 = call i32 @function_3776()
  store i32 %v1_3685, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_368b

dec_label_pc_368b:                                ; preds = %bb, %dec_label_pc_3674
  %v3_3692 = call i32 @_Z10GetDataDirb(i1 false)
  %v0_3699 = load i32, i32* @ebp, align 4
  %v1_3699 = add i32 %v0_3699, -20
  store i32 %v1_3699, i32* %eax.global-to-local, align 8
  %v1_369c = add i32 %v0_3699, -44
  %v2_369c = inttoptr i32 %v1_369c to i32*
  %v3_369c = load i32, i32* %v2_369c, align 4
  %tmp103 = urem i32 %v1_3699, 2
  %v3_36a7 = icmp ne i32 %tmp103, 0
  %v1_36aa = sext i1 %v3_36a7 to i32
  %v4_36aa = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %v1_36aa, i32 %v3_3692, i32 %v3_369c)
  %v0_36b2 = load i32, i32* @ebp, align 4
  %v1_36b2 = add i32 %v0_36b2, -20
  store i32 %v1_36b2, i32* %eax.global-to-local, align 8
  %tmp105 = urem i32 %v1_36b2, 2
  %v4_36b5 = icmp ne i32 %tmp105, 0
  %v1_36b9 = add i32 %v0_36b2, -44
  %v2_36b9 = inttoptr i32 %v1_36b9 to i32*
  %v3_36b9 = load i32, i32* %v2_36b9, align 4
  store i32 %v3_36b9, i32* %eax.global-to-local, align 8
  %v2_36bf = sext i1 %v4_36b5 to i32
  %v3_36bf = call i32 @_ZN5boost11filesystem34pathaSERKS1_(i32 %v3_36b9, i32 %v2_36bf)
  %v0_36c4 = load i32, i32* @ebp, align 4
  %v1_36c4 = add i32 %v0_36c4, -20
  store i32 %v1_36c4, i32* %eax.global-to-local, align 8
  %v1_36ca = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_36c4)
  store i32 %v1_36ca, i32* %eax.global-to-local, align 8
  %v0_36cf = call i32 @function_3776()
  store i32 %v0_36cf, i32* %eax.global-to-local, align 8
  ret i32 %v0_36cf

; uselistorder directives
  uselistorder i32 %v2_367c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10 }
  uselistorder i32 ()* @function_3776, { 1, 0 }
}

define i32 @function_36d5() local_unnamed_addr {
dec_label_pc_36d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_36d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36d5
}

define i32 @function_36e1() local_unnamed_addr {
dec_label_pc_36e1:
  %v0_36e1 = call i32 @function_36f4()
  ret i32 %v0_36e1
}

define i32 @function_36e3() local_unnamed_addr {
dec_label_pc_36e3:
  %v0_36e5 = load i32, i32* @ebp, align 4
  %v1_36e5 = add i32 %v0_36e5, -44
  %v2_36e5 = inttoptr i32 %v1_36e5 to i32*
  %v3_36e5 = load i32, i32* %v2_36e5, align 4
  %v1_36eb = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_36e5)
  %v0_36f0 = call i32 @function_36f4()
  ret i32 %v0_36f0

; uselistorder directives
  uselistorder i32 ()* @function_36f4, { 1, 0 }
}

define i32 @function_36f3() local_unnamed_addr {
dec_label_pc_36f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_36f3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36f3
}

define i32 @function_36f4() local_unnamed_addr {
dec_label_pc_36f4:
  %v0_36f4 = load i32, i32* @ebp, align 4
  %v1_36f4 = add i32 %v0_36f4, -32
  ret i32 %v1_36f4
}

define i32 @function_36ff() local_unnamed_addr {
dec_label_pc_36ff:
  %v0_36ff = call i32 @function_3712()
  ret i32 %v0_36ff
}

define i32 @function_3701() local_unnamed_addr {
dec_label_pc_3701:
  %v0_3703 = load i32, i32* @ebp, align 4
  %v1_3703 = add i32 %v0_3703, -44
  %v2_3703 = inttoptr i32 %v1_3703 to i32*
  %v3_3703 = load i32, i32* %v2_3703, align 4
  %v1_3709 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3703)
  %v0_370e = call i32 @function_3712()
  ret i32 %v0_370e

; uselistorder directives
  uselistorder i32 ()* @function_3712, { 1, 0 }
}

define i32 @function_3711() local_unnamed_addr {
dec_label_pc_3711:
  %eax.global-to-local = alloca i32, align 4
  %v0_3711 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3711
}

define i32 @function_3712() local_unnamed_addr {
dec_label_pc_3712:
  %v0_3712 = load i32, i32* @ebp, align 4
  %v1_3712 = add i32 %v0_3712, -14
  ret i32 %v1_3712
}

define i32 @function_3728() local_unnamed_addr {
dec_label_pc_3728:
  %v0_3728 = call i32 @function_373b()
  ret i32 %v0_3728
}

define i32 @function_372a() local_unnamed_addr {
dec_label_pc_372a:
  %v0_372c = load i32, i32* @ebp, align 4
  %v1_372c = add i32 %v0_372c, -44
  %v2_372c = inttoptr i32 %v1_372c to i32*
  %v3_372c = load i32, i32* %v2_372c, align 4
  %v1_3732 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_372c)
  %v0_3737 = call i32 @function_373b()
  ret i32 %v0_3737

; uselistorder directives
  uselistorder i32 ()* @function_373b, { 1, 0 }
}

define i32 @function_373a() local_unnamed_addr {
dec_label_pc_373a:
  %eax.global-to-local = alloca i32, align 4
  %v0_373a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_373a
}

define i32 @function_373b() local_unnamed_addr {
dec_label_pc_373b:
  %v0_373b = load i32, i32* @ebp, align 4
  %v1_373b = add i32 %v0_373b, -13
  ret i32 %v1_373b
}

define i32 @function_3745() local_unnamed_addr {
dec_label_pc_3745:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3745 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3745 = add i32 %v0_3745, 604277208
  %v2_3745 = inttoptr i32 %v1_3745 to i32*
  %v3_3745 = load i32, i32* %v2_3745, align 4
  %v4_3745 = add i32 %v3_3745, -1
  store i32 %v4_3745, i32* %v2_3745, align 4
  %v0_3750 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_3750, i32* @ebx, align 4
  %v0_3752 = load i32, i32* @ebp, align 4
  %v1_3752 = add i32 %v0_3752, -20
  store i32 %v1_3752, i32* %eax.global-to-local, align 8
  %v1_3758 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3752)
  store i32 %v1_3758, i32* %eax.global-to-local, align 8
  %v0_375d = call i32 @function_3761()
  store i32 %v0_375d, i32* %eax.global-to-local, align 8
  ret i32 %v0_375d
}

define i32 @function_375f() local_unnamed_addr {
dec_label_pc_375f:
  %eax.global-to-local = alloca i32, align 4
  %v0_375f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_375f
}

define i32 @function_3761() local_unnamed_addr {
dec_label_pc_3761:
  %v0_3761 = load i32, i32* @ebp, align 4
  %v1_3761 = add i32 %v0_3761, -44
  %v2_3761 = inttoptr i32 %v1_3761 to i32*
  %v3_3761 = load i32, i32* %v2_3761, align 4
  %v1_3767 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3761)
  %v0_376c = load i32, i32* @ebx, align 4
  ret i32 %v0_376c
}

define i32 @function_3776() local_unnamed_addr {
dec_label_pc_3776:
  %v0_3777 = load i32, i32* @ebp, align 4
  %v1_3777 = add i32 %v0_3777, -44
  %v2_3777 = inttoptr i32 %v1_3777 to i32*
  %v3_3777 = load i32, i32* %v2_3777, align 4
  store i32 %v3_3777, i32* @eax, align 8
  %v1_377a = add i32 %v0_3777, -12
  %v2_377a = inttoptr i32 %v1_377a to i32*
  %v3_377a = load i32, i32* %v2_377a, align 4
  %v3_377d = icmp eq i32 %v3_377a, 30
  br i1 %v3_377d, label %bb, label %dec_label_pc_3786

bb:                                               ; preds = %dec_label_pc_3776
  %v1_3784 = call i32 @function_378b()
  br label %dec_label_pc_3786

dec_label_pc_3786:                                ; preds = %bb, %dec_label_pc_3776
  %v2_3784 = phi i32 [ %v1_3784, %bb ], [ %v3_3777, %dec_label_pc_3776 ]
  ret i32 %v2_3784
}

define i32 @function_378b() local_unnamed_addr {
dec_label_pc_378b:
  %v0_378b = load i32, i32* @ebp, align 4
  %v1_378b = add i32 %v0_378b, -4
  %v2_378b = inttoptr i32 %v1_378b to i32*
  %v3_378b = load i32, i32* %v2_378b, align 4
  store i32 %v3_378b, i32* @ebx, align 4
  %v0_378f = load i32, i32* @eax, align 8
  ret i32 %v0_378f
}

define void @_Z14ReadConfigFileRSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEERS_ISsSt6vectorISsSaISsEES1_SaIS2_IS3_SA_EEE(i32 %mapSettingsRet, i32 %mapMultiSettingsRet) local_unnamed_addr {
dec_label_pc_3792:
  %stack_var_-296 = alloca i32, align 4
  %strKey_-320 = alloca i32, align 4
  %v2_37b9 = ptrtoint i32* %strKey_-320 to i32
  %v1_37c2 = call i32 @_Z13GetConfigFilev()
  %v2_37d4 = ptrtoint i32* %stack_var_-296 to i32
  %v2_37dd = call i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEEC1ERKNS0_4pathE(i32 %v2_37d4, i32 %v2_37b9)
  %v1_37eb = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v2_37b9)
  ret void
}

define i32 @function_389d() local_unnamed_addr {
dec_label_pc_389d:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_389d = add i32 %tmp93, 1
  store i32 %v1_389d, i32* @edi, align 8
  %v0_38a0 = load i32, i32* %eax.global-to-local, align 8
  %v1_38a0 = trunc i32 %v0_38a0 to i8
  %v2_38a0 = and i8 %v1_38a0, ptrtoint (i32* @global_var_c.2390 to i8)
  %v8_38a0 = zext i8 %v2_38a0 to i32
  %v10_38a0 = and i32 %v0_38a0, -256
  %v11_38a0 = or i32 %v8_38a0, %v10_38a0
  store i32 %v11_38a0, i32* %eax.global-to-local, align 8
  %v1_38a2 = inttoptr i32 %v11_38a0 to i8*
  %v2_38a2 = load i8, i8* %v1_38a2, align 4
  %v5_38a2 = add i8 %v2_38a2, %v2_38a0
  store i8 %v5_38a2, i8* %v1_38a2, align 4
  %v0_38a4 = load i32, i32* %eax.global-to-local, align 8
  %v1_38a4 = inttoptr i32 %v0_38a4 to i8*
  %v2_38a4 = load i8, i8* %v1_38a4, align 1
  %v4_38a4 = trunc i32 %v0_38a4 to i8
  %v5_38a4 = add i8 %v2_38a4, %v4_38a4
  store i8 %v5_38a4, i8* %v1_38a4, align 1
  %v0_38a6 = load i32, i32* @ebp, align 4
  %v1_38a6 = add i32 %v0_38a6, -348
  %v1_38b0 = add i32 %v0_38a6, -292
  %v1_38ba = add i32 %v0_38a6, -564
  store i32 %v1_38ba, i32* %eax.global-to-local, align 8
  %v3_38c3 = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcEC1ERSiRKSt3setISsSt4lessISsESaISsEEb(i32 %v1_38ba, i32 %v1_38b0, i32 %v1_38a6)
  %v0_38c8 = load i32, i32* @ebp, align 4
  %v1_38c8 = add i32 %v0_38c8, -456
  store i32 %v1_38c8, i32* %eax.global-to-local, align 8
  %v1_38d1 = inttoptr i32 %v1_38c8 to i32*
  %v2_38d1 = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcEC1Ev(i32* %v1_38d1)
  store i32 %v2_38d1, i32* %eax.global-to-local, align 8
  %v0_38d6 = call i32 @function_3a6d()
  store i32 %v0_38d6, i32* %eax.global-to-local, align 8
  ret i32 %v0_38d6
}

define i32 @function_38db() local_unnamed_addr {
dec_label_pc_38db:
  %v0_38db = load i32, i32* @ebp, align 4
  %v1_38e1 = add i32 %v0_38db, -560
  %v1_38e7 = call i32 @_ZNK5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iEptEv(i32 %v1_38e1)
  %v0_38ee = load i32, i32* @ebp, align 4
  %v1_391c = add i32 %v0_38ee, -308
  %v1_3926 = add i32 %v0_38ee, -304
  %v3_3933 = call i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %v1_391c, i32 %v1_3926, i32 %v1_38e7)
  %v0_393b = load i32, i32* @ebp, align 4
  %v1_393b = add i32 %v0_393b, -304
  ret i32 %v1_393b
}

define i32 @function_39a1() local_unnamed_addr {
dec_label_pc_39a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_39a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39a1
}

define i32 @function_3a29() local_unnamed_addr {
dec_label_pc_3a29:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a29 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a29
}

define i32 @function_3a6d() local_unnamed_addr {
dec_label_pc_3a6d:
  %v0_3a6d = load i32, i32* @ebp, align 4
  %v1_3a73 = add i32 %v0_3a6d, -452
  %v1_3a7c = add i32 %v0_3a6d, -560
  %v2_3a86 = call i32 @_ZN5boostneINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iS3_S6_S7_S8_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS9_12always_bool2ESB_SC_E4typeEE4typeERKNS_15iterator_facadeISB_T0_T1_T2_T3_EERKNSK_ISC_T5_T6_T7_T8_EE(i32 %v1_3a7c, i32 %v1_3a73)
  %v4_3a8b = trunc i32 %v2_3a86 to i8
  %v5_3a8b = icmp eq i8 %v4_3a8b, 0
  %v1_3a8d = icmp eq i1 %v5_3a8b, false
  br i1 %v1_3a8d, label %bb, label %dec_label_pc_3a93

bb:                                               ; preds = %dec_label_pc_3a6d
  %v2_3a8d = call i32 @function_38db()
  br label %dec_label_pc_3a93

dec_label_pc_3a93:                                ; preds = %bb, %dec_label_pc_3a6d
  %v0_3a93 = load i32, i32* @ebp, align 4
  %v1_3a93 = add i32 %v0_3a93, -456
  %v1_3a9c = inttoptr i32 %v1_3a93 to i32*
  %v2_3a9c = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev(i32* %v1_3a9c)
  %v0_3aa1 = load i32, i32* @ebp, align 4
  %v1_3aa1 = add i32 %v0_3aa1, -564
  %v1_3aaa = inttoptr i32 %v1_3aa1 to i32*
  %v2_3aaa = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev(i32* %v1_3aaa)
  %v0_3aaf = load i32, i32* @ebp, align 4
  %v1_3aaf = add i32 %v0_3aaf, -348
  %v1_3ab8 = call i32 @_ZNSt3setISsSt4lessISsESaISsEED1Ev(i32 %v1_3aaf)
  %v0_3abd = load i32, i32* @ebp, align 4
  %v1_3abd = add i32 %v0_3abd, -292
  %v1_3ac6 = inttoptr i32 %v1_3abd to i32*
  %v2_3ac6 = call i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev(i32* %v1_3ac6)
  %v0_3acb = load i32, i32* @ebp, align 4
  %v1_3acb = add i32 %v0_3acb, -12
  %v2_3acb = inttoptr i32 %v1_3acb to i32*
  %v3_3acb = load i32, i32* %v2_3acb, align 4
  %v2_3ace = xor i32 %v3_3acb, 30
  %v3_3ace = icmp eq i32 %v2_3ace, 0
  store i32 %v2_3ace, i32* @eax, align 8
  br i1 %v3_3ace, label %bb4, label %dec_label_pc_3adb

bb4:                                              ; preds = %dec_label_pc_3a93
  %v1_3ad5 = call i32 @function_3bd0()
  store i32 %v1_3ad5, i32* @eax, align 8
  br label %dec_label_pc_3adb

dec_label_pc_3adb:                                ; preds = %bb4, %dec_label_pc_3a93
  %v0_3adb = call i32 @function_3bcb()
  ret i32 %v0_3adb
}

define i32 @function_3ae1() local_unnamed_addr {
dec_label_pc_3ae1:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ae1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3ae1
}

define i32 @function_3afb() local_unnamed_addr {
dec_label_pc_3afb:
  %eax.global-to-local = alloca i32, align 4
  %v0_3afb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3afb
}

define i32 @function_3b0a() local_unnamed_addr {
dec_label_pc_3b0a:
  %v0_3b0a = call i32 @function_3b0e()
  ret i32 %v0_3b0a
}

define i32 @function_3b0c() local_unnamed_addr {
dec_label_pc_3b0c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b0c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b0c
}

define i32 @function_3b0e() local_unnamed_addr {
dec_label_pc_3b0e:
  %v0_3b0e = load i32, i32* @ebp, align 4
  %v1_3b0e = add i32 %v0_3b0e, -294
  %v1_3b1c = call i32 @function_3ba1(i32 %v1_3b0e)
  ret i32 %v1_3b1c
}

define i32 @function_3b22() local_unnamed_addr {
dec_label_pc_3b22:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b22
}

define i32 @function_3b31() local_unnamed_addr {
dec_label_pc_3b31:
  %v0_3b31 = call i32 @function_3b47()
  ret i32 %v0_3b31
}

define i32 @function_3b34() local_unnamed_addr {
dec_label_pc_3b34:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b34 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b34
}

define i32 @function_3b43() local_unnamed_addr {
dec_label_pc_3b43:
  %v0_3b43 = call i32 @function_3b47()
  ret i32 %v0_3b43

; uselistorder directives
  uselistorder i32 ()* @function_3b47, { 1, 0 }
}

define i32 @function_3b46() local_unnamed_addr {
dec_label_pc_3b46:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b46 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b46
}

define i32 @function_3b47() local_unnamed_addr {
dec_label_pc_3b47:
  %v0_3b47 = load i32, i32* @ebp, align 4
  %v1_3b47 = add i32 %v0_3b47, -293
  ret i32 %v1_3b47
}

define i32 @function_3b55() local_unnamed_addr {
dec_label_pc_3b55:
  %v0_3b55 = call i32 @function_3b7d()
  ret i32 %v0_3b55
}

define i32 @function_3b58() local_unnamed_addr {
dec_label_pc_3b58:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b58 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b58
}

define i32 @function_3b67() local_unnamed_addr {
dec_label_pc_3b67:
  %v0_3b67 = call i32 @function_3b6b()
  ret i32 %v0_3b67
}

define i32 @function_3b69() local_unnamed_addr {
dec_label_pc_3b69:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b69
}

define i32 @function_3b6b() local_unnamed_addr {
dec_label_pc_3b6b:
  %v0_3b6b = load i32, i32* @ebp, align 4
  %v1_3b6b = add i32 %v0_3b6b, -308
  ret i32 %v1_3b6b
}

define i32 @function_3b79() local_unnamed_addr {
dec_label_pc_3b79:
  %v0_3b79 = call i32 @function_3b7d()
  ret i32 %v0_3b79

; uselistorder directives
  uselistorder i32 ()* @function_3b7d, { 1, 0 }
}

define i32 @function_3b7c() local_unnamed_addr {
dec_label_pc_3b7c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b7c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b7c
}

define i32 @function_3b7d() local_unnamed_addr {
dec_label_pc_3b7d:
  %v0_3b7d = load i32, i32* @ebp, align 4
  %v1_3b7d = add i32 %v0_3b7d, -456
  %v1_3b86 = inttoptr i32 %v1_3b7d to i32*
  %v2_3b86 = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev(i32* %v1_3b86)
  %v0_3b8b = call i32 @function_3b8f()
  ret i32 %v0_3b8b
}

define i32 @function_3b8d() local_unnamed_addr {
dec_label_pc_3b8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b8d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3b8d
}

define i32 @function_3b8f() local_unnamed_addr {
dec_label_pc_3b8f:
  %v0_3b8f = load i32, i32* @ebp, align 4
  %v1_3b8f = add i32 %v0_3b8f, -564
  %v1_3b98 = inttoptr i32 %v1_3b8f to i32*
  %v2_3b98 = call i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev(i32* %v1_3b98)
  %v1_3b9d = call i32 @function_3ba1(i32 %v1_3b8f)
  ret i32 %v1_3b9d

; uselistorder directives
  uselistorder i32 (i32)* @function_3ba1, { 1, 0 }
}

define i32 @function_3ba0() local_unnamed_addr {
dec_label_pc_3ba0:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ba0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3ba0
}

define i32 @function_3ba1(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ba1:
  %v0_3ba1 = load i32, i32* @ebp, align 4
  %v1_3ba1 = add i32 %v0_3ba1, -348
  %v1_3baa = call i32 @_ZNSt3setISsSt4lessISsESaISsEED1Ev(i32 %v1_3ba1)
  %v0_3baf = call i32 @function_3bb3()
  ret i32 %v0_3baf

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt3setISsSt4lessISsESaISsEED1Ev, { 1, 0 }
}

define i32 @function_3bb1() local_unnamed_addr {
dec_label_pc_3bb1:
  %eax.global-to-local = alloca i32, align 4
  %v0_3bb1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3bb1
}

define i32 @function_3bb3() local_unnamed_addr {
dec_label_pc_3bb3:
  %v0_3bb3 = load i32, i32* @ebp, align 4
  %v1_3bb3 = add i32 %v0_3bb3, -292
  %v1_3bbc = inttoptr i32 %v1_3bb3 to i32*
  %v2_3bbc = call i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev(i32* %v1_3bbc)
  %v0_3bc1 = load i32, i32* @ebx, align 4
  ret i32 %v0_3bc1
}

define i32 @function_3bcb() local_unnamed_addr {
dec_label_pc_3bcb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3bd0() local_unnamed_addr {
dec_label_pc_3bd0:
  %v0_3bd4 = load i32, i32* @eax, align 8
  ret i32 %v0_3bd4
}

define i32 @_Z10GetPidFilev() local_unnamed_addr {
dec_label_pc_3bd5:
  %stack_var_-17 = alloca i32, align 4
  %v2_3bed = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_3bed
}

define i32 @function_3c99() local_unnamed_addr {
dec_label_pc_3c99:
  %v0_3c99 = load i32, i32* @ebp, align 4
  %v1_3ca4 = add i32 %v0_3c99, -44
  %v2_3ca4 = inttoptr i32 %v1_3ca4 to i32*
  %v3_3ca4 = load i32, i32* %v2_3ca4, align 4
  %tmp103 = urem i32 %v3_3ca4, 2
  %v3_3ca7 = icmp ne i32 %tmp103, 0
  %v1_3caa = sext i1 %v3_3ca7 to i32
  %v2_3caa = call i32 @_ZNK5boost11filesystem34path11is_completeEv(i32 %v1_3caa)
  %v1_3caf = xor i32 %v2_3caa, 1
  %v4_3caf = trunc i32 %v1_3caf to i8
  %v5_3cb2 = icmp eq i8 %v4_3caf, 0
  br i1 %v5_3cb2, label %bb, label %dec_label_pc_3cba

bb:                                               ; preds = %dec_label_pc_3c99
  %v1_3cb4 = call i32 @function_3da5()
  br label %dec_label_pc_3cba

dec_label_pc_3cba:                                ; preds = %bb, %dec_label_pc_3c99
  %v3_3cc1 = call i32 @_Z10GetDataDirb(i1 true)
  %v0_3cc8 = load i32, i32* @ebp, align 4
  %v1_3cc8 = add i32 %v0_3cc8, -20
  %v1_3ccb = add i32 %v0_3cc8, -44
  %v2_3ccb = inttoptr i32 %v1_3ccb to i32*
  %v3_3ccb = load i32, i32* %v2_3ccb, align 4
  %tmp104 = urem i32 %v1_3cc8, 2
  %v3_3cd6 = icmp ne i32 %tmp104, 0
  %v1_3cd9 = sext i1 %v3_3cd6 to i32
  %v4_3cd9 = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %v1_3cd9, i32 %v3_3cc1, i32 %v3_3ccb)
  %v0_3ce1 = load i32, i32* @ebp, align 4
  %v1_3ce1 = add i32 %v0_3ce1, -20
  %tmp106 = urem i32 %v1_3ce1, 2
  %v4_3ce4 = icmp ne i32 %tmp106, 0
  %v1_3ce8 = add i32 %v0_3ce1, -44
  %v2_3ce8 = inttoptr i32 %v1_3ce8 to i32*
  %v3_3ce8 = load i32, i32* %v2_3ce8, align 4
  %v2_3cee = sext i1 %v4_3ce4 to i32
  %v3_3cee = call i32 @_ZN5boost11filesystem34pathaSERKS1_(i32 %v3_3ce8, i32 %v2_3cee)
  %v0_3cf3 = load i32, i32* @ebp, align 4
  %v1_3cf3 = add i32 %v0_3cf3, -20
  %v1_3cf9 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_3cf3)
  %v0_3cfe = call i32 @function_3da5()
  ret i32 %v0_3cfe

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZN5boost11filesystem34pathaSERKS1_, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_3da5, { 1, 0 }
}

define i32 @function_3d04() local_unnamed_addr {
dec_label_pc_3d04:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d04 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d04
}

define i32 @function_3d10() local_unnamed_addr {
dec_label_pc_3d10:
  %v0_3d10 = call i32 @function_3d23()
  ret i32 %v0_3d10
}

define i32 @function_3d12() local_unnamed_addr {
dec_label_pc_3d12:
  %v0_3d14 = load i32, i32* @ebp, align 4
  %v1_3d14 = add i32 %v0_3d14, -44
  %v2_3d14 = inttoptr i32 %v1_3d14 to i32*
  %v3_3d14 = load i32, i32* %v2_3d14, align 4
  %v1_3d1a = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3d14)
  %v0_3d1f = call i32 @function_3d23()
  ret i32 %v0_3d1f

; uselistorder directives
  uselistorder i32 ()* @function_3d23, { 1, 0 }
}

define i32 @function_3d22() local_unnamed_addr {
dec_label_pc_3d22:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d22
}

define i32 @function_3d23() local_unnamed_addr {
dec_label_pc_3d23:
  %v0_3d23 = load i32, i32* @ebp, align 4
  %v1_3d23 = add i32 %v0_3d23, -32
  ret i32 %v1_3d23
}

define i32 @function_3d2e() local_unnamed_addr {
dec_label_pc_3d2e:
  %v0_3d2e = call i32 @function_3d41()
  ret i32 %v0_3d2e
}

define i32 @function_3d30() local_unnamed_addr {
dec_label_pc_3d30:
  %v0_3d32 = load i32, i32* @ebp, align 4
  %v1_3d32 = add i32 %v0_3d32, -44
  %v2_3d32 = inttoptr i32 %v1_3d32 to i32*
  %v3_3d32 = load i32, i32* %v2_3d32, align 4
  %v1_3d38 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3d32)
  %v0_3d3d = call i32 @function_3d41()
  ret i32 %v0_3d3d

; uselistorder directives
  uselistorder i32 ()* @function_3d41, { 1, 0 }
}

define i32 @function_3d40() local_unnamed_addr {
dec_label_pc_3d40:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d40 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d40
}

define i32 @function_3d41() local_unnamed_addr {
dec_label_pc_3d41:
  %v0_3d41 = load i32, i32* @ebp, align 4
  %v1_3d4c = add i32 %v0_3d41, -28
  ret i32 %v1_3d4c
}

define i32 @function_3d57() local_unnamed_addr {
dec_label_pc_3d57:
  %v0_3d57 = call i32 @function_3d6a()
  ret i32 %v0_3d57
}

define i32 @function_3d59() local_unnamed_addr {
dec_label_pc_3d59:
  %v0_3d5b = load i32, i32* @ebp, align 4
  %v1_3d5b = add i32 %v0_3d5b, -44
  %v2_3d5b = inttoptr i32 %v1_3d5b to i32*
  %v3_3d5b = load i32, i32* %v2_3d5b, align 4
  %v1_3d61 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3d5b)
  %v0_3d66 = call i32 @function_3d6a()
  ret i32 %v0_3d66

; uselistorder directives
  uselistorder i32 ()* @function_3d6a, { 1, 0 }
}

define i32 @function_3d69() local_unnamed_addr {
dec_label_pc_3d69:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d69
}

define i32 @function_3d6a() local_unnamed_addr {
dec_label_pc_3d6a:
  %v0_3d6a = load i32, i32* @ebp, align 4
  %v1_3d6a = add i32 %v0_3d6a, -13
  ret i32 %v1_3d6a
}

define i32 @function_3d7e() local_unnamed_addr {
dec_label_pc_3d7e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3d7e = load i32, i32* %ecx.global-to-local, align 4
  %v1_3d7e = add i32 %v0_3d7e, -330986045
  %v2_3d7e = inttoptr i32 %v1_3d7e to i32*
  %v3_3d7e = load i32, i32* %v2_3d7e, align 4
  %v4_3d7e = add i32 %v3_3d7e, -1
  store i32 %v4_3d7e, i32* %v2_3d7e, align 4
  %v0_3d84 = load i32, i32* %eax.global-to-local, align 8
  %v1_3d87 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v0_3d84)
  store i32 %v1_3d87, i32* %eax.global-to-local, align 8
  %v0_3d8c = call i32 @function_3d90()
  store i32 %v0_3d8c, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d8c
}

define i32 @function_3d8e() local_unnamed_addr {
dec_label_pc_3d8e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d8e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d8e
}

define i32 @function_3d90() local_unnamed_addr {
dec_label_pc_3d90:
  %v0_3d90 = load i32, i32* @ebp, align 4
  %v1_3d90 = add i32 %v0_3d90, -44
  %v2_3d90 = inttoptr i32 %v1_3d90 to i32*
  %v3_3d90 = load i32, i32* %v2_3d90, align 4
  %v1_3d96 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v3_3d90)
  %v0_3d9b = load i32, i32* @ebx, align 4
  ret i32 %v0_3d9b
}

define i32 @function_3da5() local_unnamed_addr {
dec_label_pc_3da5:
  %v0_3da6 = load i32, i32* @ebp, align 4
  %v1_3da6 = add i32 %v0_3da6, -44
  %v2_3da6 = inttoptr i32 %v1_3da6 to i32*
  %v3_3da6 = load i32, i32* %v2_3da6, align 4
  store i32 %v3_3da6, i32* @eax, align 8
  %v1_3da9 = add i32 %v0_3da6, -12
  %v2_3da9 = inttoptr i32 %v1_3da9 to i32*
  %v3_3da9 = load i32, i32* %v2_3da9, align 4
  %v3_3dac = icmp eq i32 %v3_3da9, 30
  br i1 %v3_3dac, label %bb, label %dec_label_pc_3db5

bb:                                               ; preds = %dec_label_pc_3da5
  %v1_3db3 = call i32 @function_3dba()
  br label %dec_label_pc_3db5

dec_label_pc_3db5:                                ; preds = %bb, %dec_label_pc_3da5
  %v2_3db3 = phi i32 [ %v1_3db3, %bb ], [ %v3_3da6, %dec_label_pc_3da5 ]
  ret i32 %v2_3db3
}

define i32 @function_3dba() local_unnamed_addr {
dec_label_pc_3dba:
  %v0_3dba = load i32, i32* @ebp, align 4
  %v1_3dba = add i32 %v0_3dba, -4
  %v2_3dba = inttoptr i32 %v1_3dba to i32*
  %v3_3dba = load i32, i32* %v2_3dba, align 4
  store i32 %v3_3dba, i32* @ebx, align 4
  %v0_3dbe = load i32, i32* @eax, align 8
  ret i32 %v0_3dbe
}

define void @_Z13CreatePidFileRKN5boost11filesystem34pathEi(i32 %path, i32 %pid) local_unnamed_addr {
dec_label_pc_3dc1:
  %v1_3de4 = call i32 @_ZNK5boost11filesystem34path6stringEv(i32 %path)
  ret void
}

define i32 @function_3e3f() local_unnamed_addr {
dec_label_pc_3e3f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3e3f = load i32, i32* %ecx.global-to-local, align 4
  %v1_3e3f = add i32 %v0_3e3f, -1
  store i32 %v1_3e3f, i32* %ecx.global-to-local, align 4
  %v0_3e41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e41
}

define i1 @_Z10RenameOverN5boost11filesystem34pathES1_(i32 %src, i32 %dest) local_unnamed_addr {
dec_label_pc_3e42:
  %v1_3e66 = call i32 @_ZNK5boost11filesystem34path6stringEv(i32 %dest)
  %tmp104 = urem i32 %v1_3e66, 2
  %v4_3e6b = icmp ne i32 %tmp104, 0
  ret i1 %v4_3e6b
}

define i32 @function_3e74() local_unnamed_addr {
dec_label_pc_3e74:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e74
}

define i32 @function_3eae() local_unnamed_addr {
dec_label_pc_3eae:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3eae = load i32, i32* %ebx.global-to-local, align 4
  %v1_3eae = add i32 %v0_3eae, 1566258372
  %v2_3eae = inttoptr i32 %v1_3eae to i32*
  %v3_3eae = load i32, i32* %v2_3eae, align 4
  %v4_3eae = add i32 %v3_3eae, 1
  store i32 %v4_3eae, i32* %v2_3eae, align 4
  %v0_3eb4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3eb4
}

define void @_Z10FileCommitP8_IO_FILE(%_IO_FILE* %fileout) local_unnamed_addr {
dec_label_pc_3eb5:
  ret void
}

define i32 @function_3efa() local_unnamed_addr {
dec_label_pc_3efa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3efa = load i32, i32* %ecx.global-to-local, align 4
  %v1_3efa = add i32 %v0_3efa, -1
  store i32 %v1_3efa, i32* %ecx.global-to-local, align 4
  %v0_3efc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3efc
}

define i32 @_Z11GetFilesizeP8_IO_FILE(%_IO_FILE* %file) local_unnamed_addr {
dec_label_pc_3efd:
  %v4_3f03 = ptrtoint %_IO_FILE* %file to i32
  ret i32 %v4_3f03
}

define i32 @function_3f88() local_unnamed_addr {
dec_label_pc_3f88:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3f88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3f88 = add i32 %v0_3f88, -1
  store i32 %v1_3f88, i32* %ecx.global-to-local, align 4
  %v0_3f8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3f8a
}

define i1 @_Z12TruncateFileP8_IO_FILEj(%_IO_FILE* %file, i32 %length) local_unnamed_addr {
dec_label_pc_3f8b:
  %v4_3fb2 = ptrtoint %_IO_FILE* %file to i32
  %tmp111 = urem i32 %v4_3fb2, 2
  %v5_3fb5 = icmp ne i32 %tmp111, 0
  ret i1 %v5_3fb5
}

define i32 @function_3fe2(i32 %arg1) local_unnamed_addr {
dec_label_pc_3fe2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3fe2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3fe2 = add i32 %v0_3fe2, 1583034564
  %v2_3fe2 = inttoptr i32 %v1_3fe2 to i32*
  %v3_3fe2 = load i32, i32* %v2_3fe2, align 4
  %v4_3fe2 = add i32 %v3_3fe2, 1
  store i32 %v4_3fe2, i32* %v2_3fe2, align 4
  %v0_3fe9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3fe9
}

define i32 @_Z24RaiseFileDescriptorLimiti(i32 %nMinFD) local_unnamed_addr {
dec_label_pc_3fea:
  %stack_var_-32 = alloca i32, align 4
  %v2_4002 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_4002
}

define i32 @function_401c(i32 %arg1) local_unnamed_addr {
dec_label_pc_401c:
  %v0_4024 = call i32 @unknown_89d485b4()
  ret i32 %v0_4024
}

define i32 @function_4034() local_unnamed_addr {
dec_label_pc_4034:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4034 = load i32, i32* %eax.global-to-local, align 8
  %v2_4034 = add i32 %v0_4034, 57
  %v16_4034 = urem i32 %v2_4034, 256
  %v18_4034 = and i32 %v0_4034, -256
  %v19_4034 = or i32 %v16_4034, %v18_4034
  store i32 %v19_4034, i32* %eax.global-to-local, align 8
  %v0_4036 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4036 = add i32 %v0_4036, ptrtoint (i32* @global_var_58.2423 to i32)
  %v2_4036 = inttoptr i32 %v1_4036 to i32*
  %v3_4036 = load i32, i32* %v2_4036, align 4
  %v5_4036 = shl i32 %v3_4036, ptrtoint (i8* @global_var_b.2405 to i32)
  store i32 %v5_4036, i32* %v2_4036, align 4
  %v0_403a = load i32, i32* %ebp.global-to-local, align 4
  %v1_403a = add i32 %v0_403a, 1
  store i32 %v1_403a, i32* %ebp.global-to-local, align 4
  %v0_403b = load i32, i32* %eax.global-to-local, align 8
  %v1_403b = trunc i32 %v0_403b to i8
  %not. = icmp ugt i8 %v1_403b, -120
  %v3_403b = urem i8 %v1_403b, -119
  %v4_403b = zext i8 %v3_403b to i32
  %v6_403b = and i32 %v0_403b, -65536
  %v10_403b = select i1 %not., i32 256, i32 0
  %v11_403b = or i32 %v4_403b, %v6_403b
  %v12_403b = or i32 %v11_403b, %v10_403b
  store i32 %v12_403b, i32* %eax.global-to-local, align 8
  ret i32 %v12_403b

; uselistorder directives
  uselistorder i8 %v1_403b, { 1, 0 }
  uselistorder i32 %v0_4034, { 1, 0 }
}

define i32 @function_4091() local_unnamed_addr {
dec_label_pc_4091:
  %v0_4091 = load i32, i32* @ebp, align 4
  %v1_4091 = add i32 %v0_4091, -28
  %v2_4091 = inttoptr i32 %v1_4091 to i32*
  %v3_4091 = load i32, i32* %v2_4091, align 4
  store i32 %v3_4091, i32* @eax, align 8
  %v0_4097 = call i32 @function_409c()
  ret i32 %v0_4097
}

define i32 @function_4099() local_unnamed_addr {
dec_label_pc_4099:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_4099 = add i32 %tmp91, -44
  %v2_4099 = inttoptr i32 %v1_4099 to i32*
  %v3_4099 = load i32, i32* %v2_4099, align 4
  ret i32 %v3_4099
}

define i32 @function_409c() local_unnamed_addr {
dec_label_pc_409c:
  %v0_409c = load i32, i32* @ebp, align 4
  %v1_409c = add i32 %v0_409c, -12
  %v2_409c = inttoptr i32 %v1_409c to i32*
  %v3_409c = load i32, i32* %v2_409c, align 4
  %v3_409f = icmp eq i32 %v3_409c, 30
  br i1 %v3_409f, label %bb, label %dec_label_pc_409c.dec_label_pc_40a8_crit_edge

dec_label_pc_409c.dec_label_pc_40a8_crit_edge:    ; preds = %dec_label_pc_409c
  %v2_40a6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_40a8

bb:                                               ; preds = %dec_label_pc_409c
  %v1_40a6 = call i32 @function_40ad()
  br label %dec_label_pc_40a8

dec_label_pc_40a8:                                ; preds = %dec_label_pc_409c.dec_label_pc_40a8_crit_edge, %bb
  %v2_40a6 = phi i32 [ %v2_40a6.pre, %dec_label_pc_409c.dec_label_pc_40a8_crit_edge ], [ %v1_40a6, %bb ]
  ret i32 %v2_40a6

; uselistorder directives
  uselistorder label %dec_label_pc_40a8, { 1, 0 }
}

define i32 @function_40ad() local_unnamed_addr {
dec_label_pc_40ad:
  %v0_40b2 = load i32, i32* @eax, align 8
  ret i32 %v0_40b2
}

define void @_Z17AllocateFileRangeP8_IO_FILEjj(%_IO_FILE* %file, i32 %offset, i32 %length) local_unnamed_addr {
dec_label_pc_40b3:
  ret void
}

define i32 @function_4134() local_unnamed_addr {
dec_label_pc_4134:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4134 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4134 = add i32 %v0_4134, 1566262468
  %v2_4134 = inttoptr i32 %v1_4134 to i32*
  %v3_4134 = load i32, i32* %v2_4134, align 4
  %v4_4134 = add i32 %v3_4134, 1
  store i32 %v4_4134, i32* %v2_4134, align 4
  %v0_413a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_413a
}

define void @_Z15ShrinkDebugFilev() local_unnamed_addr {
dec_label_pc_413b:
  %file_-200032 = alloca i32, align 4
  %nBytes_-200028 = alloca i32, align 4
  %v2_4160 = ptrtoint i32* %nBytes_-200028 to i32
  %v5_4169 = call i32 @_ZN5boost11filesystem34pathC1IA10_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 0, i32 ptrtoint ([10 x i8]* @global_var_5b8a.2386 to i32), i32 0)
  %v3_4175 = call i32 @_Z10GetDataDirb(i1 true)
  %v2_417c = ptrtoint i32* %file_-200032 to i32
  %v5_4193 = call i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 0, i32 %v3_4175, i32 %v2_4160)
  %v1_41a4 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v2_4160)
  %v1_41b2 = call i32 @_ZNK5boost11filesystem34path6stringEv(i32 %v2_417c)
  ret void

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost11filesystem34path6stringEv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost11filesystem3dvERKNS0_4pathES3_, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 (i1)* @_Z10GetDataDirb, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost11filesystem34pathC1IA10_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE, { 2, 1, 0 }
  uselistorder i32 ptrtoint ([10 x i8]* @global_var_5b8a.2386 to i32), { 2, 1, 0 }
}

define i32 @function_41ce() local_unnamed_addr {
dec_label_pc_41ce:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_41ce = load i32, i32* %ecx.global-to-local, align 4
  %v1_41ce = add i32 %v0_41ce, -51204987
  %v2_41ce = inttoptr i32 %v1_41ce to i32*
  %v3_41ce = load i32, i32* %v2_41ce, align 4
  %v4_41ce = add i32 %v3_41ce, -1
  store i32 %v4_41ce, i32* %v2_41ce, align 4
  %v0_41d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_41d4 = add i32 %v0_41d4, -51204931
  %v2_41d4 = inttoptr i32 %v1_41d4 to i32*
  %v3_41d4 = load i32, i32* %v2_41d4, align 4
  %v4_41d4 = add i32 %v3_41d4, 1
  store i32 %v4_41d4, i32* %v2_41d4, align 4
  %v2_41da = load i32, i32* %eax.global-to-local, align 8
  %v3_41da = add i32 %v2_41da, 1
  %v11_41da = icmp eq i32 %v3_41da, 0
  %v18_41da = inttoptr i32 %v2_41da to i32*
  store i32 %v3_41da, i32* %v18_41da, align 4
  br i1 %v11_41da, label %bb, label %dec_label_pc_41de

dec_label_pc_41de:                                ; preds = %dec_label_pc_41ce
  %v0_41de = load i32, i32* @ebp, align 4
  %v1_41de = add i32 %v0_41de, -200020
  %v2_41de = inttoptr i32 %v1_41de to i32*
  %v3_41de = load i32, i32* %v2_41de, align 4
  store i32 %v3_41de, i32* %eax.global-to-local, align 8
  %v3_41e4 = inttoptr i32 %v3_41de to %_IO_FILE*
  %v3_41e7 = call i32 @_Z11GetFilesizeP8_IO_FILE(%_IO_FILE* %v3_41e4)
  store i32 %v3_41e7, i32* %eax.global-to-local, align 8
  %v7_41f1 = icmp sgt i32 %v3_41e7, 10000000
  br i1 %v7_41f1, label %dec_label_pc_41ff, label %bb

dec_label_pc_41ff:                                ; preds = %dec_label_pc_41de
  br label %dec_label_pc_4207

bb:                                               ; preds = %dec_label_pc_41ce, %dec_label_pc_41de
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_4201 = call i32 @function_42d0()
  br label %dec_label_pc_4207

dec_label_pc_4207:                                ; preds = %dec_label_pc_41ff, %bb
  %storemerge = phi i32 [ %v1_4201, %bb ], [ 1, %dec_label_pc_41ff ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v0_4217 = load i32, i32* @ebp, align 4
  %v1_4217 = add i32 %v0_4217, -200020
  %v2_4217 = inttoptr i32 %v1_4217 to i32*
  %v3_4217 = load i32, i32* %v2_4217, align 4
  store i32 %v3_4217, i32* %eax.global-to-local, align 8
  ret i32 %v3_4217

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_4207, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_42ce() local_unnamed_addr {
dec_label_pc_42ce:
  %v0_42ce = call i32 @function_42e7()
  ret i32 %v0_42ce
}

define i32 @function_42d0() local_unnamed_addr {
dec_label_pc_42d0:
  %v0_42d0 = load i32, i32* @ebp, align 4
  %v1_42d0 = add i32 %v0_42d0, -200020
  %v2_42d0 = inttoptr i32 %v1_42d0 to i32*
  %v3_42d0 = load i32, i32* %v2_42d0, align 4
  %v10_42d0 = icmp eq i32 %v3_42d0, 0
  br i1 %v10_42d0, label %bb, label %dec_label_pc_42d9

bb:                                               ; preds = %dec_label_pc_42d0
  %v1_42d7 = call i32 @function_42e7()
  %v0_42d9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_42d9

dec_label_pc_42d9:                                ; preds = %bb, %dec_label_pc_42d0
  %v0_42d9 = phi i32 [ %v0_42d9.pre, %bb ], [ %v0_42d0, %dec_label_pc_42d0 ]
  %v1_42d9 = add i32 %v0_42d9, -200020
  %v2_42d9 = inttoptr i32 %v1_42d9 to i32*
  %v3_42d9 = load i32, i32* %v2_42d9, align 4
  ret i32 %v3_42d9
}

define i32 @function_42e7() local_unnamed_addr {
dec_label_pc_42e7:
  %v0_42e7 = load i32, i32* @ebp, align 4
  %v1_42e7 = add i32 %v0_42e7, -200028
  %v1_42f0 = call i32 @_ZN5boost11filesystem34pathD1Ev(i32 %v1_42e7)
  %v0_42f5 = load i32, i32* @ebp, align 4
  %v1_42f5 = add i32 %v0_42f5, -12
  %v2_42f5 = inttoptr i32 %v1_42f5 to i32*
  %v3_42f5 = load i32, i32* %v2_42f5, align 4
  %v2_42f8 = xor i32 %v3_42f5, 30
  %v3_42f8 = icmp eq i32 %v2_42f8, 0
  store i32 %v2_42f8, i32* @eax, align 8
  br i1 %v3_42f8, label %bb, label %dec_label_pc_4301

bb:                                               ; preds = %dec_label_pc_42e7
  %v1_42ff = call i32 @function_433c()
  store i32 %v1_42ff, i32* @eax, align 8
  br label %dec_label_pc_4301

dec_label_pc_4301:                                ; preds = %bb, %dec_label_pc_42e7
  %v0_4301 = call i32 @function_4337()
  ret i32 %v0_4301

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost11filesystem34pathD1Ev, { 32, 4, 31, 30, 29, 28, 27, 26, 3, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 2, 13, 15, 14, 12, 11, 10, 9, 8, 7, 6, 1, 5, 0 }
}

define i32 @function_4304() local_unnamed_addr {
dec_label_pc_4304:
  %eax.global-to-local = alloca i32, align 4
  %v0_4304 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4304
}

define i32 @function_431e() local_unnamed_addr {
dec_label_pc_431e:
  %eax.global-to-local = alloca i32, align 4
  %v0_431e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_431e
}

define i32 @function_4337() local_unnamed_addr {
dec_label_pc_4337:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_433c() local_unnamed_addr {
dec_label_pc_433c:
  %v0_4340 = load i32, i32* @eax, align 8
  ret i32 %v0_4340
}

define i64 @_Z7GetTimev() local_unnamed_addr {
dec_label_pc_4341:
  %v0_4352 = load i32, i32* inttoptr (i32 21784 to i32*), align 8
  %v0_4357 = load i32, i32* inttoptr (i32 21788 to i32*), align 4
  store i32 %v0_4357, i32* @edx, align 8
  %v2_435d = or i32 %v0_4357, %v0_4352
  %v3_435d = icmp eq i32 %v2_435d, 0
  br i1 %v3_435d, label %dec_label_pc_4370, label %dec_label_pc_4363

dec_label_pc_4363:                                ; preds = %dec_label_pc_4341
  %v0_4363 = load i32, i32* inttoptr (i32 21784 to i32*), align 8
  store i32 %v0_4363, i32* @eax, align 8
  %v0_4368 = load i32, i32* inttoptr (i32 21788 to i32*), align 4
  store i32 %v0_4368, i32* @edx, align 8
  %v1_436e = call i32 @function_4381(i32 30)
  %v3_436e = sext i32 %v1_436e to i64
  ret i64 %v3_436e

dec_label_pc_4370:                                ; preds = %dec_label_pc_4341
  ret i64 0
}

define i32 @function_437d() local_unnamed_addr {
dec_label_pc_437d:
  %eax.global-to-local = alloca i32, align 4
  %v0_437d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_437d
}

define i32 @function_4381(i32 %arg1) local_unnamed_addr {
dec_label_pc_4381:
  %v0_4381 = load i32, i32* @ebp, align 4
  %v1_4381 = add i32 %v0_4381, -12
  %v2_4381 = inttoptr i32 %v1_4381 to i32*
  %v3_4381 = load i32, i32* %v2_4381, align 4
  %v3_4384 = icmp eq i32 %v3_4381, 30
  br i1 %v3_4384, label %bb, label %dec_label_pc_4381.dec_label_pc_438d_crit_edge

dec_label_pc_4381.dec_label_pc_438d_crit_edge:    ; preds = %dec_label_pc_4381
  %v2_438b.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_438d

bb:                                               ; preds = %dec_label_pc_4381
  %v1_438b = call i32 @function_4392()
  br label %dec_label_pc_438d

dec_label_pc_438d:                                ; preds = %dec_label_pc_4381.dec_label_pc_438d_crit_edge, %bb
  %v2_438b = phi i32 [ %v2_438b.pre, %dec_label_pc_4381.dec_label_pc_438d_crit_edge ], [ %v1_438b, %bb ]
  ret i32 %v2_438b

; uselistorder directives
  uselistorder label %dec_label_pc_438d, { 1, 0 }
}

define i32 @function_4392() local_unnamed_addr {
dec_label_pc_4392:
  %v0_4393 = load i32, i32* @eax, align 8
  ret i32 %v0_4393
}

define void @_Z11SetMockTimex(i64 %nMockTimeIn) local_unnamed_addr {
dec_label_pc_4394:
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %v4_439a = trunc i64 %nMockTimeIn to i32
  store i32 %v4_439a, i32* inttoptr (i32 21784 to i32*), align 8
  store i32 0, i32* @eax, align 8
  %v4_43cc = call i32 @function_43d3(i32 %v4_439a, i32 %tmp100)
  ret void
}

define i32 @function_43d3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_43d3:
  %v0_43d4 = load i32, i32* @eax, align 8
  ret i32 %v0_43d4
}

define i64 @_Z13GetTimeOffsetv() local_unnamed_addr {
dec_label_pc_43d5:
  %v0_43e6 = load i32, i32* inttoptr (i32 21792 to i32*), align 32
  store i32 %v0_43e6, i32* @eax, align 8
  %v0_43eb = load i32, i32* inttoptr (i32 21796 to i32*), align 4
  store i32 %v0_43eb, i32* @edx, align 8
  %v2_43fb = call i32 @function_4402(i32 30)
  %v4_43fb = sext i32 %v2_43fb to i64
  ret i64 %v4_43fb
}

define i32 @function_4402(i32 %arg1) local_unnamed_addr {
dec_label_pc_4402:
  %v0_4403 = load i32, i32* @eax, align 8
  ret i32 %v0_4403
}

define i64 @_Z15GetAdjustedTimev() local_unnamed_addr {
dec_label_pc_4404:
  %v3_4417 = call i64 @_Z7GetTimev()
  %v5_4417 = trunc i64 %v3_4417 to i32
  %v0_4420 = call i64 @_Z13GetTimeOffsetv()
  %v2_4420 = trunc i64 %v0_4420 to i32
  %v2_4425 = add i32 %v5_4417, %v2_4420
  store i32 %v2_4425, i32* @eax, align 8
  %v1_4433 = call i32 @function_443a()
  %v3_4433 = sext i32 %v1_4433 to i64
  ret i64 %v3_4433
}

define i32 @function_443a() local_unnamed_addr {
dec_label_pc_443a:
  %v0_4440 = load i32, i32* @eax, align 8
  ret i32 %v0_4440
}

define void @_Z11AddTimeDataRK8CNetAddrx(i32 %ip, i64 %nTime) local_unnamed_addr {
dec_label_pc_4441:
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %v4_4456 = trunc i64 %nTime to i32
  %v4_4473 = call i64 @_Z7GetTimev()
  %v6_4473 = trunc i64 %v4_4473 to i32
  %v2_449b = load i8, i8* inttoptr (i32 21800 to i8*), align 8
  %v5_449e = icmp eq i8 %v2_449b, 0
  %v1_44a0 = icmp eq i1 %v5_449e, false
  br i1 %v1_44a0, label %bb, label %dec_label_pc_44a2

bb:                                               ; preds = %dec_label_pc_4441
  %v1_448a = load i32, i32* @edx, align 8
  %v4_448a = sub i32 %tmp103, %v1_448a
  %v7_4488 = icmp ult i32 %v4_4456, %v6_4473
  %v3_448a = zext i1 %v7_4488 to i32
  %v5_448a = add i32 %v4_448a, %v3_448a
  %v2_4488 = sub i32 %v4_4456, %v6_4473
  %v6_44a0 = call i32 @function_44f1(i32 %v2_4488, i32 %v5_448a)
  br label %dec_label_pc_44a2

dec_label_pc_44a2:                                ; preds = %bb, %dec_label_pc_4441
  ret void

; uselistorder directives
  uselistorder i64 ()* @_Z7GetTimev, { 4, 3, 2, 1, 0 }
}

define i32 @function_44f1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_44f1:
  %v0_44f1 = load i32, i32* @ebp, align 4
  %v1_44f1 = add i32 %v0_44f1, -96
  %v1_44f4 = add i32 %v0_44f1, -156
  %v2_44f4 = inttoptr i32 %v1_44f4 to i32*
  %v3_44f4 = load i32, i32* %v2_44f4, align 4
  %v3_4509 = call i32 @_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EE6insertERKS0_(i32 %v1_44f1, i32 21808, i32 %v3_44f4)
  %v0_4511 = load i32, i32* @ebp, align 4
  %v1_4511 = add i32 %v0_4511, -92
  %v2_4511 = inttoptr i32 %v1_4511 to i8*
  %v3_4511 = load i8, i8* %v2_4511, align 1
  %v4_4511 = zext i8 %v3_4511 to i32
  %v1_4515 = xor i32 %v4_4511, 1
  store i32 %v1_4515, i32* @eax, align 8
  %v5_4518 = icmp eq i32 %v1_4515, 0
  %v1_451a = icmp eq i1 %v5_4518, false
  br i1 %v1_451a, label %bb, label %dec_label_pc_4520

bb:                                               ; preds = %dec_label_pc_44f1
  %v2_451a = call i32 @function_4b17()
  %v0_4520.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_4520

dec_label_pc_4520:                                ; preds = %bb, %dec_label_pc_44f1
  %v0_4520 = phi i32 [ %v0_4520.pre, %bb ], [ %v0_4511, %dec_label_pc_44f1 ]
  %v1_4520 = add i32 %v0_4520, -128
  %v2_4520 = inttoptr i32 %v1_4520 to i32*
  %v3_4520 = load i32, i32* %v2_4520, align 4
  %v1_4523 = add i32 %v0_4520, -124
  %v2_4523 = inttoptr i32 %v1_4523 to i32*
  %v3_4523 = load i32, i32* %v2_4523, align 4
  %v4_4535 = call i32 @_ZN13CMedianFilterIxE5inputEx(i32 ptrtoint (i8** @global_var_5480.2424 to i32), i32 %v3_4520, i32 %v3_4523)
  %v0_453a = load i32, i32* @ebp, align 4
  %v1_453a = add i32 %v0_453a, -128
  %v2_453a = inttoptr i32 %v1_453a to i32*
  %v3_453a = load i32, i32* %v2_453a, align 4
  ret i32 %v3_453a

; uselistorder directives
  uselistorder i32 %v0_4520, { 1, 0 }
  uselistorder i32 -96, { 1, 0, 2, 3, 4 }
}

define i32 @function_455b(i32 %arg1) local_unnamed_addr {
dec_label_pc_455b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp123 = call i8* @__decompiler_undefined_function_1()
  %v0_455b = load i32, i32* @ecx, align 4
  %v1_455b = add i32 %v0_455b, -942241341
  %v2_455b = inttoptr i32 %v1_455b to i32*
  %v3_455b = load i32, i32* %v2_455b, align 4
  %v4_455b = add i32 %v3_455b, -1
  store i32 %v4_455b, i32* %v2_455b, align 4
  %v0_4561 = load i32, i32* %eax.global-to-local, align 8
  %v1_4561 = trunc i32 %v0_4561 to i8
  %v2_4561 = add i8 %v1_4561, ptrtoint (i8* @global_var_24.2401 to i8)
  %v6_4561 = icmp ult i8 %v2_4561, %v1_4561
  store i1 %v6_4561, i1* %cf.global-to-local, align 1
  %v16_4561 = zext i8 %v2_4561 to i32
  %v18_4561 = and i32 %v0_4561, -256
  %v19_4561 = or i32 %v16_4561, %v18_4561
  store i32 %v19_4561, i32* %eax.global-to-local, align 8
  %v3_4563 = mul i32 %v19_4561, 2
  %v4_4563 = inttoptr i32 %v3_4563 to i8*
  %v5_4563 = load i8, i8* %v4_4563, align 2
  %v8_4563 = select i1 %v6_4561, i8 -23, i8 -24
  %v9_4563 = add i8 %v8_4563, %v5_4563
  store i8 %v9_4563, i8* %v4_4563, align 2
  store i32 %arg1, i32* %edx.global-to-local, align 8
  %v2_4569 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_4569 = load i32, i32* %eax.global-to-local, align 8
  %v4_4569 = trunc i32 %v3_4569 to i8
  %v5_4569 = sub i8 %v2_4569, %v4_4569
  %v10_4569 = icmp ult i8 %v2_4569, %v4_4569
  store i1 %v10_4569, i1* %cf.global-to-local, align 1
  %v20_4569 = load i32, i32* @ecx, align 4
  %v21_4569 = inttoptr i32 %v20_4569 to i8*
  store i8 %v5_4569, i8* %v21_4569, align 1
  %v0_456b = load i32, i32* @ecx, align 4
  %v1_456b = add i32 %v0_456b, 610044353
  %v2_456b = inttoptr i32 %v1_456b to i8*
  %v3_456b = load i8, i8* %v2_456b, align 1
  %v5_456b = trunc i32 %v0_456b to i8
  %v6_456b = add i8 %v3_456b, %v5_456b
  %v11_456b = icmp ult i8 %v6_456b, %v3_456b
  store i1 %v11_456b, i1* %cf.global-to-local, align 1
  store i8 %v6_456b, i8* %v2_456b, align 1
  %v0_4571 = load i32, i32* @ecx, align 4
  %v1_4571 = add i32 %v0_4571, -1961614220
  %v2_4571 = inttoptr i32 %v1_4571 to i8*
  %v3_4571 = load i8, i8* %v2_4571, align 1
  %v5_4571 = trunc i32 %v0_4571 to i8
  %v6_4571 = load i1, i1* %cf.global-to-local, align 1
  %v7_4571 = zext i1 %v6_4571 to i8
  %v8_4571 = add i8 %v3_4571, %v5_4571
  %v9_4571 = add i8 %v7_4571, %v8_4571
  %v27_4571 = icmp ule i8 %v9_4571, %v3_4571
  %v28_4571 = icmp ult i8 %v8_4571, %v3_4571
  %v29_4571 = select i1 %v6_4571, i1 %v27_4571, i1 %v28_4571
  store i1 %v29_4571, i1* %cf.global-to-local, align 1
  store i8 %v9_4571, i8* %v2_4571, align 1
  %v0_4577 = load i32, i32* %ebp.global-to-local, align 4
  %v1_4577 = add i32 %v0_4577, 1
  store i32 %v1_4577, i32* @ebp, align 4
  %v0_4578 = load i32, i32* @ebx, align 4
  %v1_4578 = add i32 %v0_4578, 1149862997
  %v2_4578 = inttoptr i32 %v1_4578 to i8*
  %v3_4578 = load i8, i8* %v2_4578, align 1
  %v4_4578 = or i8 %v3_4578, 36
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v4_4578, i8* %v2_4578, align 1
  %v0_457f = load i32, i32* @ecx, align 4
  %v1_457f = add i32 %v0_457f, -1995692972
  %v2_457f = inttoptr i32 %v1_457f to i8*
  %v3_457f = load i8, i8* %v2_457f, align 1
  %v5_457f = trunc i32 %v0_457f to i8
  %v6_457f = or i8 %v3_457f, %v5_457f
  store i8 %v6_457f, i8* %v2_457f, align 1
  %v0_4586 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_4586 = and i32 %v0_4586, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_4586, i32* %eax.global-to-local, align 8
  %v4_458f = ptrtoint i8* %tmp123 to i32
  %v5_458f = call i32 (i8*, ...) @_Z18OutputDebugStringFPKcz(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_5d1c.2425, i32 0, i32 0), i32 %v4_458f)
  store i32 %v5_458f, i32* %eax.global-to-local, align 8
  %v2_459b = call i32 @_ZNK13CMedianFilterIxE4sizeEv(i32 ptrtoint (i8** @global_var_5480.2424 to i32))
  store i32 %v2_459b, i32* %eax.global-to-local, align 8
  %v5_45a0 = icmp ult i32 %v2_459b, 4
  store i1 %v5_45a0, i1* %cf.global-to-local, align 1
  %v7_45a3 = icmp sgt i32 %v2_459b, ptrtoint (i32* @global_var_4.2376 to i32)
  br i1 %v7_45a3, label %dec_label_pc_45a5, label %bb

dec_label_pc_45a5:                                ; preds = %dec_label_pc_455b
  %v2_45ac = call i32 @_ZNK13CMedianFilterIxE4sizeEv(i32 ptrtoint (i8** @global_var_5480.2424 to i32))
  %v2_45be = srem i32 %v2_45ac, 2
  %v12_45be = icmp eq i32 %v2_45be, 0
  store i32 %v2_45be, i32* %eax.global-to-local, align 8
  store i1 %v12_45be, i1* %cf.global-to-local, align 1
  %v10_45c0 = icmp eq i32 %v2_45be, 1
  %v1_45c3 = icmp eq i1 %v10_45c0, false
  br i1 %v1_45c3, label %bb, label %dec_label_pc_45d1

dec_label_pc_45d1:                                ; preds = %dec_label_pc_45a5
  store i32 1, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_45d9

bb:                                               ; preds = %dec_label_pc_45a5, %dec_label_pc_455b
  store i32 0, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_45d3 = call i32 @function_4b17()
  store i32 %v1_45d3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_45d9

dec_label_pc_45d9:                                ; preds = %dec_label_pc_45d1, %bb
  %v2_45e0 = call i32 @_ZNK13CMedianFilterIxE6medianEv(i32 ptrtoint (i8** @global_var_5480.2424 to i32))
  %v1_45e5 = load i32, i32* @ebp, align 4
  %v2_45e5 = add i32 %v1_45e5, -120
  %v3_45e5 = inttoptr i32 %v2_45e5 to i32*
  store i32 %v2_45e0, i32* %v3_45e5, align 4
  %v0_45e8 = load i32, i32* @edx, align 8
  %v1_45e8 = load i32, i32* @ebp, align 4
  %v2_45e8 = add i32 %v1_45e8, -116
  %v3_45e8 = inttoptr i32 %v2_45e8 to i32*
  store i32 %v0_45e8, i32* %v3_45e8, align 4
  %v0_45eb = load i32, i32* @ebp, align 4
  %v1_45eb = add i32 %v0_45eb, -140
  store i32 %v1_45eb, i32* %eax.global-to-local, align 8
  %v4_45fc = call i32 @_ZNK13CMedianFilterIxE6sortedEv(i32 %v1_45eb, i32 ptrtoint (i8** @global_var_5480.2424 to i32))
  store i32 %v4_45fc, i32* %eax.global-to-local, align 8
  %v0_4601 = load i32, i32* @esp, align 4
  %v5_4601 = icmp ult i32 %v0_4601, 4
  store i1 %v5_4601, i1* %cf.global-to-local, align 1
  %v0_4604 = load i32, i32* @ebp, align 4
  %v1_4604 = add i32 %v0_4604, -120
  %v2_4604 = inttoptr i32 %v1_4604 to i32*
  %v3_4604 = load i32, i32* %v2_4604, align 4
  store i32 %v3_4604, i32* %eax.global-to-local, align 8
  %v1_4607 = add i32 %v0_4604, -116
  %v2_4607 = inttoptr i32 %v1_4607 to i32*
  %v3_4607 = load i32, i32* %v2_4607, align 4
  store i32 %v3_4607, i32* %edx.global-to-local, align 8
  %v3_4611 = call i32 @_Z5abs64x(i32 %v3_4604, i32 %v3_4607)
  store i32 %v3_4611, i32* %eax.global-to-local, align 8
  store i32 1, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_461b = icmp slt i32 %v3_4607, 0
  br i1 %v2_461b, label %dec_label_pc_4633, label %dec_label_pc_461f

dec_label_pc_461f:                                ; preds = %dec_label_pc_45d9
  %v1_461b = icmp eq i32 %v3_4607, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_4621 = icmp eq i1 %v1_461b, false
  br i1 %v4_4621, label %dec_label_pc_4649, label %dec_label_pc_4623

dec_label_pc_4623:                                ; preds = %dec_label_pc_461f
  %v5_4623 = icmp ult i32 %v3_4611, 4199
  store i1 %v5_4623, i1* %cf.global-to-local, align 1
  %tmp158 = icmp ult i32 %v3_4611, 4200
  br i1 %tmp158, label %dec_label_pc_4633, label %dec_label_pc_4649

dec_label_pc_4633:                                ; preds = %dec_label_pc_4623, %dec_label_pc_45d9
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_4633 = load i32, i32* @ebp, align 4
  %v1_4633 = add i32 %v0_4633, -120
  %v2_4633 = inttoptr i32 %v1_4633 to i32*
  %v3_4633 = load i32, i32* %v2_4633, align 4
  store i32 %v3_4633, i32* %eax.global-to-local, align 8
  %v1_4636 = add i32 %v0_4633, -116
  %v2_4636 = inttoptr i32 %v1_4636 to i32*
  %v3_4636 = load i32, i32* %v2_4636, align 4
  store i32 %v3_4636, i32* %edx.global-to-local, align 8
  store i32 %v3_4633, i32* inttoptr (i32 21792 to i32*), align 32
  store i32 %v3_4636, i32* inttoptr (i32 21796 to i32*), align 4
  %v0_4644 = call i32 @function_48ca()
  store i32 %v0_4644, i32* %eax.global-to-local, align 8
  ret i32 %v0_4644

dec_label_pc_4649:                                ; preds = %dec_label_pc_4623, %dec_label_pc_461f
  store i32 0, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* inttoptr (i32 21792 to i32*), align 32
  store i32 0, i32* inttoptr (i32 21796 to i32*), align 4
  %v0_465d = load i8, i8* inttoptr (i32 21832 to i8*), align 8
  %v1_465d = zext i8 %v0_465d to i32
  %v1_4664 = xor i32 %v1_465d, 1
  store i32 %v1_4664, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_4667 = icmp eq i32 %v1_4664, 0
  br i1 %v5_4667, label %bb137, label %dec_label_pc_466f

bb137:                                            ; preds = %dec_label_pc_4649
  %v1_4669 = call i32 @function_48ca()
  store i32 %v1_4669, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_466f

dec_label_pc_466f:                                ; preds = %bb137, %dec_label_pc_4649
  %v0_466f = load i32, i32* @ebp, align 4
  %v1_466f = add i32 %v0_466f, -29
  %v2_466f = inttoptr i32 %v1_466f to i8*
  store i8 0, i8* %v2_466f, align 1
  %v0_4673 = load i32, i32* @ebp, align 4
  %v1_4673 = add i32 %v0_4673, -88
  store i32 %v1_4673, i32* %eax.global-to-local, align 8
  %v1_467e = add i32 %v0_4673, -140
  store i32 %v1_467e, i32* @edx, align 8
  %v5_468b = call i32 @_ZN5boost15foreach_detail_7containISt6vectorIxSaIxEEEENS0_8auto_anyIPT_EERS6_PN4mpl_5bool_ILb0EEE(i32 %v1_4673, i32 %v1_467e, i32 0)
  %v0_4690 = load i32, i32* @esp, align 4
  %v5_4690 = icmp ult i32 %v0_4690, 4
  store i1 %v5_4690, i1* %cf.global-to-local, align 1
  %v0_4693 = load i32, i32* @ebp, align 4
  %v1_4693 = add i32 %v0_4693, -88
  store i32 %v1_4693, i32* %eax.global-to-local, align 8
  %v2_4696 = add i32 %v0_4693, -56
  %v3_4696 = inttoptr i32 %v2_4696 to i32*
  store i32 %v1_4693, i32* %v3_4696, align 4
  %v0_4699 = load i32, i32* @ebp, align 4
  %v1_4699 = add i32 %v0_4699, -56
  %v2_4699 = inttoptr i32 %v1_4699 to i32*
  %v3_4699 = load i32, i32* %v2_4699, align 4
  store i32 %v3_4699, i32* %eax.global-to-local, align 8
  %v1_469f = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_4699)
  store i32 %v1_469f, i32* %eax.global-to-local, align 8
  %v4_46a4 = trunc i32 %v1_469f to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_46a4 = icmp eq i8 %v4_46a4, 0
  %v1_46a6 = icmp eq i1 %v5_46a4, false
  br i1 %v1_46a6, label %dec_label_pc_4808, label %dec_label_pc_46ac

dec_label_pc_46ac:                                ; preds = %dec_label_pc_466f
  %v0_46ac = load i32, i32* @ebp, align 4
  %v1_46ac = add i32 %v0_46ac, -84
  store i32 %v1_46ac, i32* %eax.global-to-local, align 8
  %v1_46bf = add i32 %v0_46ac, -56
  %v2_46bf = inttoptr i32 %v1_46bf to i32*
  %v3_46bf = load i32, i32* %v2_46bf, align 4
  store i32 %v3_46bf, i32* %edx.global-to-local, align 8
  %v6_46c9 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %v1_46ac, i32 %v3_46bf, i32 0, i32 0)
  %v0_46ce = load i32, i32* @esp, align 4
  %v5_46ce = icmp ult i32 %v0_46ce, 4
  store i1 %v5_46ce, i1* %cf.global-to-local, align 1
  %v0_46d1 = load i32, i32* @ebp, align 4
  %v1_46d1 = add i32 %v0_46d1, -84
  store i32 %v1_46d1, i32* %eax.global-to-local, align 8
  %v2_46d4 = add i32 %v0_46d1, -52
  %v3_46d4 = inttoptr i32 %v2_46d4 to i32*
  store i32 %v1_46d1, i32* %v3_46d4, align 4
  %v0_46d7 = load i32, i32* @ebp, align 4
  %v1_46d7 = add i32 %v0_46d7, -52
  %v2_46d7 = inttoptr i32 %v1_46d7 to i32*
  %v3_46d7 = load i32, i32* %v2_46d7, align 4
  store i32 %v3_46d7, i32* %eax.global-to-local, align 8
  %v1_46dd = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_46d7)
  store i32 %v1_46dd, i32* %eax.global-to-local, align 8
  %v4_46e2 = trunc i32 %v1_46dd to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_46e2 = icmp eq i8 %v4_46e2, 0
  %v1_46e4 = icmp eq i1 %v5_46e2, false
  br i1 %v1_46e4, label %dec_label_pc_4808, label %dec_label_pc_46ea

dec_label_pc_46ea:                                ; preds = %dec_label_pc_46ac
  %v0_46ea = load i32, i32* @ebp, align 4
  %v1_46ea = add i32 %v0_46ea, -80
  store i32 %v1_46ea, i32* %eax.global-to-local, align 8
  %v1_46fd = add i32 %v0_46ea, -56
  %v2_46fd = inttoptr i32 %v1_46fd to i32*
  %v3_46fd = load i32, i32* %v2_46fd, align 4
  store i32 %v3_46fd, i32* %edx.global-to-local, align 8
  %v5_4707 = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %v1_46ea, i32 %v3_46fd, i32 0, i32 0)
  %v0_470c = load i32, i32* @esp, align 4
  %v5_470c = icmp ult i32 %v0_470c, 4
  store i1 %v5_470c, i1* %cf.global-to-local, align 1
  %v0_470f = load i32, i32* @ebp, align 4
  %v1_470f = add i32 %v0_470f, -80
  store i32 %v1_470f, i32* %eax.global-to-local, align 8
  %v2_4712 = add i32 %v0_470f, -48
  %v3_4712 = inttoptr i32 %v2_4712 to i32*
  store i32 %v1_470f, i32* %v3_4712, align 4
  %v0_4715 = load i32, i32* @ebp, align 4
  %v1_4715 = add i32 %v0_4715, -48
  %v2_4715 = inttoptr i32 %v1_4715 to i32*
  %v3_4715 = load i32, i32* %v2_4715, align 4
  store i32 %v3_4715, i32* %eax.global-to-local, align 8
  %v1_471b = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_4715)
  store i32 %v1_471b, i32* %eax.global-to-local, align 8
  %v4_4720 = trunc i32 %v1_471b to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_4720 = icmp eq i8 %v4_4720, 0
  %v1_4722 = icmp eq i1 %v5_4720, false
  br i1 %v1_4722, label %dec_label_pc_4808, label %dec_label_pc_4728

dec_label_pc_4728:                                ; preds = %dec_label_pc_46ea
  %v0_4728 = load i32, i32* @ebp, align 4
  %v1_4728 = add i32 %v0_4728, -31
  %v2_4728 = inttoptr i32 %v1_4728 to i8*
  store i8 1, i8* %v2_4728, align 1
  br label %dec_label_pc_47cb

dec_label_pc_4731:                                ; preds = %dec_label_pc_4800
  %v0_4731 = load i32, i32* @ebp, align 4
  %v1_4731 = add i32 %v0_4731, -31
  store i32 %v1_4731, i32* %eax.global-to-local, align 8
  %v1_4737 = inttoptr i32 %v1_4731 to i8*
  %v2_4737 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_4737)
  store i32 %v2_4737, i32* %eax.global-to-local, align 8
  %v4_473c = trunc i32 %v2_4737 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_473c = icmp eq i8 %v4_473c, 0
  %v1_473e = icmp eq i1 %v5_473c, false
  br i1 %v1_473e, label %dec_label_pc_4731.dec_label_pc_47b0_crit_edge, label %dec_label_pc_4740

dec_label_pc_4731.dec_label_pc_47b0_crit_edge:    ; preds = %dec_label_pc_4731
  %v0_47b0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_47b0

dec_label_pc_4740:                                ; preds = %dec_label_pc_4731
  %v0_4748 = load i32, i32* @ebp, align 4
  %v1_4748 = add i32 %v0_4748, -52
  %v2_4748 = inttoptr i32 %v1_4748 to i32*
  %v3_4748 = load i32, i32* %v2_4748, align 4
  store i32 %v3_4748, i32* %eax.global-to-local, align 8
  %v2_474e = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS9_SA_EE(i32 %v3_4748, i32 0)
  store i32 %v2_474e, i32* %eax.global-to-local, align 8
  %v1_4753 = add i32 %v2_474e, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_4753 = inttoptr i32 %v1_4753 to i32*
  %v3_4753 = load i32, i32* %v2_4753, align 4
  store i32 %v3_4753, i32* %edx.global-to-local, align 8
  %v1_4756 = inttoptr i32 %v2_474e to i32*
  %v2_4756 = load i32, i32* %v1_4756, align 4
  store i32 %v2_4756, i32* %eax.global-to-local, align 8
  %v1_4758 = load i32, i32* @ebp, align 4
  %v2_4758 = add i32 %v1_4758, -112
  %v3_4758 = inttoptr i32 %v2_4758 to i32*
  store i32 %v2_4756, i32* %v3_4758, align 4
  %v0_475b = load i32, i32* %edx.global-to-local, align 8
  %v1_475b = load i32, i32* @ebp, align 4
  %v2_475b = add i32 %v1_475b, -108
  %v3_475b = inttoptr i32 %v2_475b to i32*
  store i32 %v0_475b, i32* %v3_475b, align 4
  %v0_47a5146 = load i32, i32* @ebp, align 4
  %v1_47a5147 = add i32 %v0_47a5146, -31
  %v2_47a5148 = inttoptr i32 %v1_47a5147 to i8*
  %v3_47a5149 = load i8, i8* %v2_47a5148, align 1
  %v4_47a5150 = zext i8 %v3_47a5149 to i32
  %v1_47a9151 = xor i32 %v4_47a5150, 1
  store i32 %v1_47a9151, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_47ac153 = icmp eq i32 %v1_47a9151, 0
  %v1_47ae155 = icmp eq i1 %v5_47ac153, false
  br i1 %v1_47ae155, label %dec_label_pc_4760, label %dec_label_pc_47b0

dec_label_pc_4760:                                ; preds = %dec_label_pc_4740, %dec_label_pc_47a1
  %v0_47a5156 = phi i32 [ %v0_47a5, %dec_label_pc_47a1 ], [ %v0_47a5146, %dec_label_pc_4740 ]
  %v1_4760 = add i32 %v0_47a5156, -112
  %v2_4760 = inttoptr i32 %v1_4760 to i32*
  %v3_4760 = load i32, i32* %v2_4760, align 4
  store i32 %v3_4760, i32* %eax.global-to-local, align 8
  %v1_4763 = add i32 %v0_47a5156, -108
  %v2_4763 = inttoptr i32 %v1_4763 to i32*
  %v3_4763 = load i32, i32* %v2_4763, align 4
  store i32 %v3_4763, i32* %edx.global-to-local, align 8
  %v2_4766 = or i32 %v3_4763, %v3_4760
  %v3_4766 = icmp eq i32 %v2_4766, 0
  store i32 %v2_4766, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v3_4766, label %dec_label_pc_4799, label %dec_label_pc_476c

dec_label_pc_476c:                                ; preds = %dec_label_pc_4760
  %v3_476c = load i32, i32* %v2_4760, align 4
  store i32 %v3_476c, i32* %eax.global-to-local, align 8
  %v3_476f = load i32, i32* %v2_4763, align 4
  store i32 %v3_476f, i32* %edx.global-to-local, align 8
  %v2_4779 = call i32 @_Z5abs64x(i32 %v3_476c, i32 %v3_476f)
  store i32 %v2_4779, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_477e = icmp eq i32 %v3_476f, 0
  %v2_477e = icmp slt i32 %v3_476f, 0
  %v3_4780 = icmp eq i1 %v2_477e, false
  %v4_4780 = icmp eq i1 %v1_477e, false
  %v5_4780 = icmp eq i1 %v3_4780, %v4_4780
  br i1 %v5_4780, label %dec_label_pc_4799, label %dec_label_pc_4782

dec_label_pc_4782:                                ; preds = %dec_label_pc_476c
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v2_477e, label %dec_label_pc_479d, label %dec_label_pc_4786

dec_label_pc_4786:                                ; preds = %dec_label_pc_4782
  %v5_4786 = icmp ult i32 %v2_4779, 299
  store i1 %v5_4786, i1* %cf.global-to-local, align 1
  %tmp159 = icmp ult i32 %v2_4779, 300
  br i1 %tmp159, label %dec_label_pc_479d, label %dec_label_pc_4799

dec_label_pc_4799:                                ; preds = %dec_label_pc_4760, %dec_label_pc_476c, %dec_label_pc_4786
  store i32 0, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_47a1

dec_label_pc_479d:                                ; preds = %dec_label_pc_4786, %dec_label_pc_4782
  store i32 1, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_479d = load i32, i32* @ebp, align 4
  %v1_479d = add i32 %v0_479d, -29
  %v2_479d = inttoptr i32 %v1_479d to i8*
  store i8 1, i8* %v2_479d, align 1
  br label %dec_label_pc_47a1

dec_label_pc_47a1:                                ; preds = %dec_label_pc_4799, %dec_label_pc_479d
  %v0_47a1 = load i32, i32* @ebp, align 4
  %v1_47a1 = add i32 %v0_47a1, -31
  %v2_47a1 = inttoptr i32 %v1_47a1 to i8*
  store i8 1, i8* %v2_47a1, align 1
  %v0_47a5 = load i32, i32* @ebp, align 4
  %v1_47a5 = add i32 %v0_47a5, -31
  %v2_47a5 = inttoptr i32 %v1_47a5 to i8*
  %v3_47a5 = load i8, i8* %v2_47a5, align 1
  %v4_47a5 = zext i8 %v3_47a5 to i32
  %v1_47a9 = xor i32 %v4_47a5, 1
  store i32 %v1_47a9, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_47ac = icmp eq i32 %v1_47a9, 0
  %v1_47ae = icmp eq i1 %v5_47ac, false
  br i1 %v1_47ae, label %dec_label_pc_4760, label %dec_label_pc_47b0

dec_label_pc_47b0:                                ; preds = %dec_label_pc_4740, %dec_label_pc_47a1, %dec_label_pc_4731.dec_label_pc_47b0_crit_edge
  %v0_47c0 = phi i32 [ %v0_47b0.pre, %dec_label_pc_4731.dec_label_pc_47b0_crit_edge ], [ %v0_47a5146, %dec_label_pc_4740 ], [ %v0_47a5, %dec_label_pc_47a1 ]
  %v1_47b0 = add i32 %v0_47c0, -31
  %v2_47b0 = inttoptr i32 %v1_47b0 to i8*
  %v3_47b0 = load i8, i8* %v2_47b0, align 1
  %v4_47b0 = zext i8 %v3_47b0 to i32
  store i32 %v4_47b0, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_47b4 = icmp eq i8 %v3_47b0, 0
  br i1 %v5_47b4, label %dec_label_pc_47cb, label %dec_label_pc_47b8

dec_label_pc_47b8:                                ; preds = %dec_label_pc_47b0
  %v1_47c0 = add i32 %v0_47c0, -52
  %v2_47c0 = inttoptr i32 %v1_47c0 to i32*
  %v3_47c0 = load i32, i32* %v2_47c0, align 4
  store i32 %v3_47c0, i32* %eax.global-to-local, align 8
  %v2_47c6 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_47c0, i32 0)
  store i32 %v2_47c6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_47cb

dec_label_pc_47cb:                                ; preds = %dec_label_pc_47b8, %dec_label_pc_47b0, %dec_label_pc_4728
  %v0_47cb = load i32, i32* @ebp, align 4
  %v1_47cb = add i32 %v0_47cb, -31
  %v2_47cb = inttoptr i32 %v1_47cb to i8*
  %v3_47cb = load i8, i8* %v2_47cb, align 1
  %v4_47cb = zext i8 %v3_47cb to i32
  store i32 %v4_47cb, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_47cf = icmp eq i8 %v3_47cb, 0
  br i1 %v5_47cf, label %dec_label_pc_47fb, label %dec_label_pc_47d3

dec_label_pc_47d3:                                ; preds = %dec_label_pc_47cb
  %v1_47db = add i32 %v0_47cb, -48
  %v2_47db = inttoptr i32 %v1_47db to i32*
  %v3_47db = load i32, i32* %v2_47db, align 4
  store i32 %v3_47db, i32* %eax.global-to-local, align 8
  %v1_47e2 = add i32 %v0_47cb, -52
  %v2_47e2 = inttoptr i32 %v1_47e2 to i32*
  %v3_47e2 = load i32, i32* %v2_47e2, align 4
  store i32 %v3_47e2, i32* %eax.global-to-local, align 8
  %v3_47e8 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESA_PNS0_9type2typeIT_T0_EE(i32 %v3_47e2, i32 %v3_47db, i32 0)
  %v1_47ed = xor i32 %v3_47e8, 1
  %v4_47ed = trunc i32 %v1_47ed to i8
  store i32 %v1_47ed, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_47f0 = icmp eq i8 %v4_47ed, 0
  br i1 %v5_47f0, label %dec_label_pc_47fb, label %dec_label_pc_4800

dec_label_pc_47fb:                                ; preds = %dec_label_pc_47d3, %dec_label_pc_47cb
  br label %dec_label_pc_4800

dec_label_pc_4800:                                ; preds = %dec_label_pc_47d3, %dec_label_pc_47fb
  %storemerge15 = phi i32 [ 0, %dec_label_pc_47fb ], [ 1, %dec_label_pc_47d3 ]
  store i32 %storemerge15, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_4800 = icmp eq i32 %storemerge15, 0
  %v1_4802 = icmp eq i1 %v5_4800, false
  br i1 %v1_4802, label %dec_label_pc_4731, label %dec_label_pc_4808

dec_label_pc_4808:                                ; preds = %dec_label_pc_4800, %dec_label_pc_46ea, %dec_label_pc_46ac, %dec_label_pc_466f
  %v0_4808 = load i32, i32* @ebp, align 4
  %v1_4808 = add i32 %v0_4808, -29
  %v2_4808 = inttoptr i32 %v1_4808 to i8*
  %v3_4808 = load i8, i8* %v2_4808, align 1
  %v4_4808 = zext i8 %v3_4808 to i32
  %v1_480c = xor i32 %v4_4808, 1
  store i32 %v1_480c, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_480f = icmp eq i32 %v1_480c, 0
  br i1 %v5_480f, label %bb142, label %dec_label_pc_4817

bb142:                                            ; preds = %dec_label_pc_4808
  %v1_4811 = call i32 @function_48ca()
  store i32 %v1_4811, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_4817

dec_label_pc_4817:                                ; preds = %bb142, %dec_label_pc_4808
  store i8 1, i8* inttoptr (i32 21832 to i8*), align 8
  %v0_481e = load i32, i32* @ebp, align 4
  %v1_481e = add i32 %v0_481e, -76
  store i32 %v1_481e, i32* %eax.global-to-local, align 8
  %v0_4821 = load i32, i32* @esp, align 4
  %v1_4821 = add i32 %v0_4821, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_4821 = inttoptr i32 %v1_4821 to i32*
  store i32 ptrtoint ([130 x i8]* @global_var_5d58.2426 to i32), i32* %v2_4821, align 4
  %v0_4829 = load i32, i32* %eax.global-to-local, align 8
  %v1_4829 = load i32, i32* @esp, align 4
  %v2_4829 = inttoptr i32 %v1_4829 to i32*
  store i32 %v0_4829, i32* %v2_4829, align 4
  %v0_482c = call i32 @_Z1_PKc()
  %v0_4831 = load i32, i32* @esp, align 4
  %v5_4831 = icmp ult i32 %v0_4831, 4
  store i1 %v5_4831, i1* %cf.global-to-local, align 1
  %v0_4834 = load i32, i32* @ebp, align 4
  %v1_4834 = add i32 %v0_4834, -76
  store i32 %v1_4834, i32* %eax.global-to-local, align 8
  %v3_4837 = inttoptr i32 %v0_4831 to i32*
  store i32 %v1_4834, i32* %v3_4837, align 4
  %v0_483b = load i32, i32* @esp, align 4
  %v1_483b = inttoptr i32 %v0_483b to i32*
  store i32 21624, i32* %v1_483b, align 4
  %v2_483b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_483b

; uselistorder directives
  uselistorder i32 %v0_47cb, { 1, 0, 2 }
  uselistorder i32 %v0_47a5, { 0, 2, 1 }
  uselistorder i1 %v2_477e, { 1, 0 }
  uselistorder i32 %v3_4607, { 1, 0, 2, 3 }
  uselistorder i32 %v2_45be, { 2, 1, 0 }
  uselistorder i8 %v9_4571, { 1, 0 }
  uselistorder i8 %v8_4571, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 18, 19, 20, 21, 1, 22, 4, 24, 25, 26, 27, 9, 10, 11, 12, 56, 3, 5, 6, 7, 8, 54, 13, 14, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 2, 23, 47, 48, 49, 50, 51, 52, 53, 55 }
  uselistorder i1* %cf.global-to-local, { 8, 9, 10, 11, 12, 5, 6, 37, 0, 1, 2, 3, 4, 38, 7, 13, 14, 15, 16, 17, 18, 19, 20, 35, 21, 22, 23, 24, 36, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 -84, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 ()* @function_48ca, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_Z5abs64x, { 1, 0 }
  uselistorder i32 ()* @function_4b17, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK13CMedianFilterIxE4sizeEv, { 1, 0 }
  uselistorder label %dec_label_pc_4800, { 1, 0 }
  uselistorder label %dec_label_pc_47b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_47a1, { 1, 0 }
  uselistorder label %dec_label_pc_4799, { 2, 1, 0 }
  uselistorder label %dec_label_pc_4760, { 1, 0 }
  uselistorder label %dec_label_pc_45d9, { 1, 0 }
}

define i32 @function_48ca() local_unnamed_addr {
dec_label_pc_48ca:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_48ca = load i8, i8* inttoptr (i32 21616 to i8*), align 16
  %v1_48ca = zext i8 %v0_48ca to i32
  store i32 %v1_48ca, i32* %eax.global-to-local, align 8
  %v5_48d1 = icmp eq i8 %v0_48ca, 0
  br i1 %v5_48d1, label %dec_label_pc_4a50, label %dec_label_pc_48d9

dec_label_pc_48d9:                                ; preds = %dec_label_pc_48ca
  %v0_48d9 = load i32, i32* @ebp, align 4
  %v1_48d9 = add i32 %v0_48d9, -68
  store i32 %v1_48d9, i32* %eax.global-to-local, align 8
  %v1_48e4 = add i32 %v0_48d9, -140
  store i32 %v1_48e4, i32* @edx, align 8
  %v3_48f1 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorIxSaIxEEEENS0_8auto_anyIPT_EERS6_PN4mpl_5bool_ILb0EEE(i32 %v1_48d9, i32 %v1_48e4, i32 0)
  %v0_48f9 = load i32, i32* @ebp, align 4
  %v1_48f9 = add i32 %v0_48f9, -68
  store i32 %v1_48f9, i32* %eax.global-to-local, align 8
  %v2_48fc = add i32 %v0_48f9, -44
  %v3_48fc = inttoptr i32 %v2_48fc to i32*
  store i32 %v1_48f9, i32* %v3_48fc, align 4
  %v0_48ff = load i32, i32* @ebp, align 4
  %v1_48ff = add i32 %v0_48ff, -44
  %v2_48ff = inttoptr i32 %v1_48ff to i32*
  %v3_48ff = load i32, i32* %v2_48ff, align 4
  store i32 %v3_48ff, i32* %eax.global-to-local, align 8
  %v1_4905 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_48ff)
  store i32 %v1_4905, i32* %eax.global-to-local, align 8
  %v4_490a = trunc i32 %v1_4905 to i8
  %v5_490a = icmp eq i8 %v4_490a, 0
  %v1_490c = icmp eq i1 %v5_490a, false
  br i1 %v1_490c, label %dec_label_pc_4a44, label %dec_label_pc_4912

dec_label_pc_4912:                                ; preds = %dec_label_pc_48d9
  %v0_4912 = load i32, i32* @ebp, align 4
  %v1_4912 = add i32 %v0_4912, -64
  store i32 %v1_4912, i32* %eax.global-to-local, align 8
  %v1_4925 = add i32 %v0_4912, -44
  %v2_4925 = inttoptr i32 %v1_4925 to i32*
  %v3_4925 = load i32, i32* %v2_4925, align 4
  store i32 %v3_4925, i32* %edx.global-to-local, align 8
  %v4_492f = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %v1_4912, i32 %v3_4925, i32 0, i32 0)
  %v0_4937 = load i32, i32* @ebp, align 4
  %v1_4937 = add i32 %v0_4937, -64
  store i32 %v1_4937, i32* %eax.global-to-local, align 8
  %v2_493a = add i32 %v0_4937, -40
  %v3_493a = inttoptr i32 %v2_493a to i32*
  store i32 %v1_4937, i32* %v3_493a, align 4
  %v0_493d = load i32, i32* @ebp, align 4
  %v1_493d = add i32 %v0_493d, -40
  %v2_493d = inttoptr i32 %v1_493d to i32*
  %v3_493d = load i32, i32* %v2_493d, align 4
  store i32 %v3_493d, i32* %eax.global-to-local, align 8
  %v2_4943 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_493d)
  store i32 %v2_4943, i32* %eax.global-to-local, align 8
  %v4_4948 = trunc i32 %v2_4943 to i8
  %v5_4948 = icmp eq i8 %v4_4948, 0
  %v1_494a = icmp eq i1 %v5_4948, false
  br i1 %v1_494a, label %dec_label_pc_4a44, label %dec_label_pc_4950

dec_label_pc_4950:                                ; preds = %dec_label_pc_4912
  %v0_4950 = load i32, i32* @ebp, align 4
  %v1_4950 = add i32 %v0_4950, -60
  store i32 %v1_4950, i32* %eax.global-to-local, align 8
  %v1_4963 = add i32 %v0_4950, -44
  %v2_4963 = inttoptr i32 %v1_4963 to i32*
  %v3_4963 = load i32, i32* %v2_4963, align 4
  store i32 %v3_4963, i32* %edx.global-to-local, align 8
  %v5_496d = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %v1_4950, i32 %v3_4963, i32 0, i32 0)
  %v0_4975 = load i32, i32* @ebp, align 4
  %v1_4975 = add i32 %v0_4975, -60
  store i32 %v1_4975, i32* %eax.global-to-local, align 8
  %v2_4978 = add i32 %v0_4975, -36
  %v3_4978 = inttoptr i32 %v2_4978 to i32*
  store i32 %v1_4975, i32* %v3_4978, align 4
  %v0_497b = load i32, i32* @ebp, align 4
  %v1_497b = add i32 %v0_497b, -36
  %v2_497b = inttoptr i32 %v1_497b to i32*
  %v3_497b = load i32, i32* %v2_497b, align 4
  store i32 %v3_497b, i32* %eax.global-to-local, align 8
  %v2_4981 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_497b)
  store i32 %v2_4981, i32* %eax.global-to-local, align 8
  %v4_4986 = trunc i32 %v2_4981 to i8
  %v5_4986 = icmp eq i8 %v4_4986, 0
  %v1_4988 = icmp eq i1 %v5_4986, false
  br i1 %v1_4988, label %dec_label_pc_4a44, label %dec_label_pc_498e

dec_label_pc_498e:                                ; preds = %dec_label_pc_4950
  %v0_498e = load i32, i32* @ebp, align 4
  %v1_498e = add i32 %v0_498e, -31
  %v2_498e = inttoptr i32 %v1_498e to i8*
  store i8 1, i8* %v2_498e, align 1
  br label %dec_label_pc_4a07

dec_label_pc_4994:                                ; preds = %dec_label_pc_4a3c
  %v0_4994 = load i32, i32* @ebp, align 4
  %v1_4994 = add i32 %v0_4994, -31
  store i32 %v1_4994, i32* %eax.global-to-local, align 8
  %v3_4997 = inttoptr i32 %v1_4994 to i8*
  %v3_499a = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v3_4997)
  store i32 %v3_499a, i32* %eax.global-to-local, align 8
  %v4_499f = trunc i32 %v3_499a to i8
  %v5_499f = icmp eq i8 %v4_499f, 0
  %v1_49a1 = icmp eq i1 %v5_499f, false
  br i1 %v1_49a1, label %dec_label_pc_4994.dec_label_pc_49ec_crit_edge, label %dec_label_pc_49a3

dec_label_pc_4994.dec_label_pc_49ec_crit_edge:    ; preds = %dec_label_pc_4994
  %v0_49ec.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_49ec

dec_label_pc_49a3:                                ; preds = %dec_label_pc_4994
  %v0_49ab = load i32, i32* @ebp, align 4
  %v1_49ab = add i32 %v0_49ab, -40
  %v2_49ab = inttoptr i32 %v1_49ab to i32*
  %v3_49ab = load i32, i32* %v2_49ab, align 4
  store i32 %v3_49ab, i32* %eax.global-to-local, align 8
  %v4_49b1 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS9_SA_EE(i32 %v3_49ab, i32 0)
  store i32 %v4_49b1, i32* %eax.global-to-local, align 8
  %v1_49b6 = add i32 %v4_49b1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_49b6 = inttoptr i32 %v1_49b6 to i32*
  %v3_49b6 = load i32, i32* %v2_49b6, align 4
  store i32 %v3_49b6, i32* %edx.global-to-local, align 8
  %v1_49b9 = inttoptr i32 %v4_49b1 to i32*
  %v2_49b9 = load i32, i32* %v1_49b9, align 4
  store i32 %v2_49b9, i32* %eax.global-to-local, align 8
  %v1_49bb = load i32, i32* @ebp, align 4
  %v2_49bb = add i32 %v1_49bb, -104
  %v3_49bb = inttoptr i32 %v2_49bb to i32*
  store i32 %v2_49b9, i32* %v3_49bb, align 4
  %v0_49be = load i32, i32* %edx.global-to-local, align 8
  %v1_49be = load i32, i32* @ebp, align 4
  %v2_49be = add i32 %v1_49be, -100
  %v3_49be = inttoptr i32 %v2_49be to i32*
  store i32 %v0_49be, i32* %v3_49be, align 4
  %v0_49e121 = load i32, i32* @ebp, align 4
  %v1_49e122 = add i32 %v0_49e121, -31
  %v2_49e123 = inttoptr i32 %v1_49e122 to i8*
  %v3_49e124 = load i8, i8* %v2_49e123, align 1
  %v4_49e125 = zext i8 %v3_49e124 to i32
  %v1_49e526 = xor i32 %v4_49e125, 1
  store i32 %v1_49e526, i32* %eax.global-to-local, align 8
  %v5_49e828 = icmp eq i32 %v1_49e526, 0
  %v1_49ea30 = icmp eq i1 %v5_49e828, false
  br i1 %v1_49ea30, label %dec_label_pc_49c3, label %dec_label_pc_49ec

dec_label_pc_49c3:                                ; preds = %dec_label_pc_49a3, %dec_label_pc_49c3
  %v0_49e131 = phi i32 [ %v0_49e1, %dec_label_pc_49c3 ], [ %v0_49e121, %dec_label_pc_49a3 ]
  %v1_49c3 = add i32 %v0_49e131, -104
  %v2_49c3 = inttoptr i32 %v1_49c3 to i32*
  %v3_49c3 = load i32, i32* %v2_49c3, align 4
  store i32 %v3_49c3, i32* %eax.global-to-local, align 8
  %v1_49c6 = add i32 %v0_49e131, -100
  %v2_49c6 = inttoptr i32 %v1_49c6 to i32*
  %v3_49c6 = load i32, i32* %v2_49c6, align 4
  store i32 %v3_49c6, i32* %edx.global-to-local, align 8
  %v4_49c9 = sext i32 %v3_49c3 to i64
  %v6_49d8 = call i32 (i8*, ...) @_Z18OutputDebugStringFPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_5de2.2427, i32 0, i32 0), i64 %v4_49c9)
  store i32 %v6_49d8, i32* %eax.global-to-local, align 8
  %v0_49dd = load i32, i32* @ebp, align 4
  %v1_49dd = add i32 %v0_49dd, -31
  %v2_49dd = inttoptr i32 %v1_49dd to i8*
  store i8 1, i8* %v2_49dd, align 1
  %v0_49e1 = load i32, i32* @ebp, align 4
  %v1_49e1 = add i32 %v0_49e1, -31
  %v2_49e1 = inttoptr i32 %v1_49e1 to i8*
  %v3_49e1 = load i8, i8* %v2_49e1, align 1
  %v4_49e1 = zext i8 %v3_49e1 to i32
  %v1_49e5 = xor i32 %v4_49e1, 1
  store i32 %v1_49e5, i32* %eax.global-to-local, align 8
  %v5_49e8 = icmp eq i32 %v1_49e5, 0
  %v1_49ea = icmp eq i1 %v5_49e8, false
  br i1 %v1_49ea, label %dec_label_pc_49c3, label %dec_label_pc_49ec

dec_label_pc_49ec:                                ; preds = %dec_label_pc_49a3, %dec_label_pc_49c3, %dec_label_pc_4994.dec_label_pc_49ec_crit_edge
  %v0_49fc = phi i32 [ %v0_49ec.pre, %dec_label_pc_4994.dec_label_pc_49ec_crit_edge ], [ %v0_49e121, %dec_label_pc_49a3 ], [ %v0_49e1, %dec_label_pc_49c3 ]
  %v1_49ec = add i32 %v0_49fc, -31
  %v2_49ec = inttoptr i32 %v1_49ec to i8*
  %v3_49ec = load i8, i8* %v2_49ec, align 1
  %v4_49ec = zext i8 %v3_49ec to i32
  store i32 %v4_49ec, i32* %eax.global-to-local, align 8
  %v5_49f0 = icmp eq i8 %v3_49ec, 0
  br i1 %v5_49f0, label %dec_label_pc_4a07, label %dec_label_pc_49f4

dec_label_pc_49f4:                                ; preds = %dec_label_pc_49ec
  %v1_49fc = add i32 %v0_49fc, -40
  %v2_49fc = inttoptr i32 %v1_49fc to i32*
  %v3_49fc = load i32, i32* %v2_49fc, align 4
  store i32 %v3_49fc, i32* %eax.global-to-local, align 8
  %v4_4a02 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_49fc, i32 0)
  store i32 %v4_4a02, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_4a07

dec_label_pc_4a07:                                ; preds = %dec_label_pc_49f4, %dec_label_pc_49ec, %dec_label_pc_498e
  %v0_4a07 = load i32, i32* @ebp, align 4
  %v1_4a07 = add i32 %v0_4a07, -31
  %v2_4a07 = inttoptr i32 %v1_4a07 to i8*
  %v3_4a07 = load i8, i8* %v2_4a07, align 1
  %v4_4a07 = zext i8 %v3_4a07 to i32
  store i32 %v4_4a07, i32* %eax.global-to-local, align 8
  %v5_4a0b = icmp eq i8 %v3_4a07, 0
  br i1 %v5_4a0b, label %dec_label_pc_4a37, label %dec_label_pc_4a0f

dec_label_pc_4a0f:                                ; preds = %dec_label_pc_4a07
  %v1_4a17 = add i32 %v0_4a07, -36
  %v2_4a17 = inttoptr i32 %v1_4a17 to i32*
  %v3_4a17 = load i32, i32* %v2_4a17, align 4
  store i32 %v3_4a17, i32* %eax.global-to-local, align 8
  %v1_4a1e = add i32 %v0_4a07, -40
  %v2_4a1e = inttoptr i32 %v1_4a1e to i32*
  %v3_4a1e = load i32, i32* %v2_4a1e, align 4
  store i32 %v3_4a1e, i32* %eax.global-to-local, align 8
  %v5_4a24 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESA_PNS0_9type2typeIT_T0_EE(i32 %v3_4a1e, i32 %v3_4a17, i32 0)
  %v1_4a29 = xor i32 %v5_4a24, 1
  %v4_4a29 = trunc i32 %v1_4a29 to i8
  store i32 %v1_4a29, i32* %eax.global-to-local, align 8
  %v5_4a2c = icmp eq i8 %v4_4a29, 0
  br i1 %v5_4a2c, label %dec_label_pc_4a37, label %dec_label_pc_4a3c

dec_label_pc_4a37:                                ; preds = %dec_label_pc_4a0f, %dec_label_pc_4a07
  br label %dec_label_pc_4a3c

dec_label_pc_4a3c:                                ; preds = %dec_label_pc_4a0f, %dec_label_pc_4a37
  %storemerge = phi i32 [ 0, %dec_label_pc_4a37 ], [ 1, %dec_label_pc_4a0f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_4a3c = icmp eq i32 %storemerge, 0
  %v1_4a3e = icmp eq i1 %v5_4a3c, false
  br i1 %v1_4a3e, label %dec_label_pc_4994, label %dec_label_pc_4a44

dec_label_pc_4a44:                                ; preds = %dec_label_pc_4a3c, %dec_label_pc_4950, %dec_label_pc_4912, %dec_label_pc_48d9
  %v0_4a44 = load i32, i32* @esp, align 4
  %v1_4a44 = inttoptr i32 %v0_4a44 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_5dea.2428 to i32), i32* %v1_4a44, align 4
  %v1_4a4b = call i32 (i8*, ...) @_Z18OutputDebugStringFPKcz(i8* bitcast (i32* @1 to i8*))
  store i32 %v1_4a4b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_4a50

dec_label_pc_4a50:                                ; preds = %dec_label_pc_4a44, %dec_label_pc_48ca
  %v0_4a50 = load i32, i32* inttoptr (i32 21792 to i32*), align 32
  store i32 %v0_4a50, i32* %eax.global-to-local, align 8
  %v0_4a55 = load i32, i32* inttoptr (i32 21796 to i32*), align 4
  store i32 %v0_4a55, i32* %edx.global-to-local, align 8
  %v0_4a5b = load i32, i32* @esp, align 4
  %v1_4a5b = add i32 %v0_4a5b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_4a5b = inttoptr i32 %v1_4a5b to i32*
  store i32 60, i32* %v2_4a5b, align 4
  %v0_4a63 = load i32, i32* @esp, align 4
  %v1_4a63 = add i32 %v0_4a63, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_4a63 = inttoptr i32 %v1_4a63 to i32*
  store i32 0, i32* %v2_4a63, align 4
  %v0_4a6b = load i32, i32* %eax.global-to-local, align 8
  %v1_4a6b = load i32, i32* @esp, align 4
  %v2_4a6b = inttoptr i32 %v1_4a6b to i32*
  store i32 %v0_4a6b, i32* %v2_4a6b, align 4
  %v0_4a6e = load i32, i32* %edx.global-to-local, align 8
  %v1_4a6e = load i32, i32* @esp, align 4
  %v2_4a6e = add i32 %v1_4a6e, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_4a6e = inttoptr i32 %v2_4a6e to i32*
  store i32 %v0_4a6e, i32* %v3_4a6e, align 4
  %v4_4a6e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_4a6e

; uselistorder directives
  uselistorder i32 %v0_49e1, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 15, 8, 16, 17, 18, 19, 5, 6, 7, 9, 3, 4, 33, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost15foreach_detail_4doneISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESA_PNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN5boost15foreach_detail_4nextISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN5boost15foreach_detail_5derefISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS9_SA_EE, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_3endISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_5beginISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost15foreach_detail_13auto_any_basecvbEv, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost15foreach_detail_7containISt6vectorIxSaIxEEEENS0_8auto_anyIPT_EERS6_PN4mpl_5bool_ILb0EEE, { 1, 0 }
  uselistorder label %dec_label_pc_4a3c, { 1, 0 }
  uselistorder label %dec_label_pc_49ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_49c3, { 1, 0 }
}

define i32 @function_4a76(i32 %arg1) local_unnamed_addr {
dec_label_pc_4a76:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_4a76 = load i32, i32* @ecx, align 4
  %v1_4a76 = add i32 %v0_4a76, -1579972159
  %v2_4a76 = inttoptr i32 %v1_4a76 to i32*
  %v3_4a76 = load i32, i32* %v2_4a76, align 4
  %v4_4a76 = add i32 %v3_4a76, -1
  store i32 %v4_4a76, i32* %v2_4a76, align 4
  %v2_4a7c = load i8, i8* bitcast (i32* @ebp to i8*), align 4
  %v3_4a7c = load i32, i32* %edx.global-to-local, align 8
  %v4_4a7c = trunc i32 %v3_4a7c to i8
  %v5_4a7c = and i8 %v4_4a7c, %v2_4a7c
  %v11_4a7c = load i32, i32* @ebp, align 4
  %v12_4a7c = inttoptr i32 %v11_4a7c to i8*
  store i8 %v5_4a7c, i8* %v12_4a7c, align 1
  %v0_4a7f = load i32, i32* @ebx, align 4
  %v1_4a7f = add i32 %v0_4a7f, 5579797
  %v2_4a7f = inttoptr i32 %v1_4a7f to i8*
  %v3_4a7f = load i8, i8* %v2_4a7f, align 1
  %v4_4a7f = load i32, i32* @ecx, align 4
  %v5_4a7f = trunc i32 %v4_4a7f to i8
  %v6_4a7f = add i8 %v5_4a7f, %v3_4a7f
  store i8 %v6_4a7f, i8* %v2_4a7f, align 1
  %v0_4a85 = load i32, i32* @ecx, align 4
  %v1_4a85 = add i32 %v0_4a85, -1995692980
  %v2_4a85 = inttoptr i32 %v1_4a85 to i8*
  %v3_4a85 = load i8, i8* %v2_4a85, align 1
  %v5_4a85 = trunc i32 %v0_4a85 to i8
  %v6_4a85 = add i8 %v3_4a85, %v5_4a85
  store i8 %v6_4a85, i8* %v2_4a85, align 1
  %v0_4a8c = load i32, i32* %eax.global-to-local, align 8
  %v11_4a8c = and i32 %v0_4a8c, or (i32 zext (i8 ptrtoint (i8** @global_var_10.2429 to i8) to i32), i32 -256)
  store i32 %v11_4a8c, i32* %eax.global-to-local, align 8
  %v4_4a8e = sext i32 %v11_4a8c to i64
  %v6_4a9d = call i32 (i8*, ...) @_Z18OutputDebugStringFPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_5df0.2430, i32 0, i32 0), i64 %v4_4a8e)
  %v0_4aa2 = load i32, i32* @ebp, align 4
  %v1_4aa2 = add i32 %v0_4aa2, -140
  store i32 %v1_4aa2, i32* %eax.global-to-local, align 8
  %tmp104 = inttoptr i32 %v1_4aa2 to i32*
  %v3_4aab = call i32 @_ZNSt6vectorIxSaIxEED1Ev(i32* %tmp104)
  store i32 %v3_4aab, i32* %eax.global-to-local, align 8
  ret i32 %v3_4aab

; uselistorder directives
  uselistorder i32 %v11_4a8c, { 1, 0 }
  uselistorder i32 (i8*, ...)* @_Z18OutputDebugStringFPKcz, { 3, 1, 2, 0 }
}

define i32 @function_4ab3() local_unnamed_addr {
dec_label_pc_4ab3:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ab3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ab3
}

define i32 @function_4ad1() local_unnamed_addr {
dec_label_pc_4ad1:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ad1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4ad1
}

define i32 @function_4add() local_unnamed_addr {
dec_label_pc_4add:
  %v0_4add = call i32 @function_4ae1()
  ret i32 %v0_4add
}

define i32 @function_4adf() local_unnamed_addr {
dec_label_pc_4adf:
  %eax.global-to-local = alloca i32, align 4
  %v0_4adf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4adf
}

define i32 @function_4ae1() local_unnamed_addr {
dec_label_pc_4ae1:
  %v0_4ae1 = load i32, i32* @ebp, align 4
  %v1_4ae1 = add i32 %v0_4ae1, -30
  ret i32 %v1_4ae1
}

define i32 @function_4aec() local_unnamed_addr {
dec_label_pc_4aec:
  %v0_4aec = call i32 @function_4af0()
  ret i32 %v0_4aec
}

define i32 @function_4aee() local_unnamed_addr {
dec_label_pc_4aee:
  %eax.global-to-local = alloca i32, align 4
  %v0_4aee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4aee
}

define i32 @function_4af0() local_unnamed_addr {
dec_label_pc_4af0:
  %v0_4af0 = load i32, i32* @ebp, align 4
  %v1_4af0 = add i32 %v0_4af0, -76
  ret i32 %v1_4af0
}

define i32 @function_4afb() local_unnamed_addr {
dec_label_pc_4afb:
  %v0_4afb = call i32 @function_4aff()
  ret i32 %v0_4afb
}

define i32 @function_4afd() local_unnamed_addr {
dec_label_pc_4afd:
  %eax.global-to-local = alloca i32, align 4
  %v0_4afd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4afd
}

define i32 @function_4aff() local_unnamed_addr {
dec_label_pc_4aff:
  %v0_4aff = load i32, i32* @ebp, align 4
  %v1_4aff = add i32 %v0_4aff, -140
  %v1_4b08 = inttoptr i32 %v1_4aff to i32*
  %v2_4b08 = call i32 @_ZNSt6vectorIxSaIxEED1Ev(i32* %v1_4b08)
  %v0_4b0d = load i32, i32* @ebx, align 4
  ret i32 %v0_4b0d
}

define i32 @function_4b17() local_unnamed_addr {
dec_label_pc_4b17:
  %v0_4b18 = load i32, i32* @ebp, align 4
  %v1_4b18 = add i32 %v0_4b18, -28
  %v2_4b18 = inttoptr i32 %v1_4b18 to i32*
  %v3_4b18 = load i32, i32* %v2_4b18, align 4
  %v3_4b1b = icmp eq i32 %v3_4b18, 30
  br i1 %v3_4b1b, label %bb, label %dec_label_pc_4b17.dec_label_pc_4b24_crit_edge

dec_label_pc_4b17.dec_label_pc_4b24_crit_edge:    ; preds = %dec_label_pc_4b17
  %v2_4b22.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_4b24

bb:                                               ; preds = %dec_label_pc_4b17
  %v1_4b22 = call i32 @function_4b29()
  br label %dec_label_pc_4b24

dec_label_pc_4b24:                                ; preds = %dec_label_pc_4b17.dec_label_pc_4b24_crit_edge, %bb
  %v2_4b22 = phi i32 [ %v2_4b22.pre, %dec_label_pc_4b17.dec_label_pc_4b24_crit_edge ], [ %v1_4b22, %bb ]
  ret i32 %v2_4b22

; uselistorder directives
  uselistorder label %dec_label_pc_4b24, { 1, 0 }
}

define i32 @function_4b29() local_unnamed_addr {
dec_label_pc_4b29:
  %v0_4b29 = load i32, i32* @ebp, align 4
  %v1_4b29 = add i32 %v0_4b29, -12
  %v1_4b2c = inttoptr i32 %v1_4b29 to i32*
  %v2_4b2c = load i32, i32* %v1_4b2c, align 4
  store i32 %v2_4b2c, i32* @ebx, align 4
  %v3_4b2d = add i32 %v0_4b29, -4
  %v1_4b2e = inttoptr i32 %v3_4b2d to i32*
  %v2_4b2e = load i32, i32* %v1_4b2e, align 4
  store i32 %v2_4b2e, i32* @edi, align 8
  %v1_4b2f = inttoptr i32 %v0_4b29 to i32*
  %v2_4b2f = load i32, i32* %v1_4b2f, align 4
  store i32 %v2_4b2f, i32* @ebp, align 4
  %v0_4b30 = load i32, i32* @eax, align 8
  ret i32 %v0_4b30
}

define void @_Z18seed_insecure_randb(i1 %fDeterministic) local_unnamed_addr {
dec_label_pc_4b31:
  %v11_4b48 = icmp eq i1 %fDeterministic, false
  br i1 %v11_4b48, label %dec_label_pc_4b64, label %dec_label_pc_4b4e

dec_label_pc_4b4e:                                ; preds = %dec_label_pc_4b31
  store i8 ptrtoint (i8* @global_var_b.2405 to i8), i8* @global_var_5430.2431, align 1
  store i8 ptrtoint (i8* @global_var_b.2405 to i8), i8* @global_var_542c.2432, align 1
  %tmp107 = zext i1 %fDeterministic to i32
  %v3_4b62 = call i32 @function_4bdc(i32 %tmp107)
  ret void

dec_label_pc_4b64:                                ; preds = %dec_label_pc_4b31
  ret void

; uselistorder directives
  uselistorder i8* @global_var_b.2405, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_b.2405 to i8), { 1, 2, 0 }
}

define i32 @function_4b76() local_unnamed_addr {
dec_label_pc_4b76:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4b76 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4b76 = add i32 %v0_4b76, -1064964027
  %v2_4b76 = inttoptr i32 %v1_4b76 to i32*
  %v3_4b76 = load i32, i32* %v2_4b76, align 4
  %v4_4b76 = add i32 %v3_4b76, -1
  %v12_4b76 = icmp eq i32 %v4_4b76, 0
  store i32 %v4_4b76, i32* %v2_4b76, align 4
  %v0_4b98.pre = load i32, i32* %ebp.global-to-local, align 4
  %.pre = add i32 %v0_4b98.pre, -16
  %.pre101 = inttoptr i32 %.pre to i32*
  br i1 %v12_4b76, label %dec_label_pc_4b94, label %dec_label_pc_4b7e

dec_label_pc_4b7e:                                ; preds = %dec_label_pc_4b76
  br label %dec_label_pc_4b94

dec_label_pc_4b94:                                ; preds = %dec_label_pc_4b76, %dec_label_pc_4b7e
  %v3_4b98 = load i32, i32* %.pre101, align 4
  %v1_4b9b = trunc i32 %v3_4b98 to i8
  store i8 %v1_4b9b, i8* @global_var_542c.2432, align 1
  ret i32 %.pre

; uselistorder directives
  uselistorder i32 %v4_4b76, { 1, 0 }
  uselistorder i8* @global_var_542c.2432, { 1, 0 }
  uselistorder label %dec_label_pc_4b94, { 1, 0 }
}

define i32 @function_4bb2() local_unnamed_addr {
dec_label_pc_4bb2:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4bb2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4bb2 = add i32 %v0_4bb2, -1064964027
  %v2_4bb2 = inttoptr i32 %v1_4bb2 to i32*
  %v3_4bb2 = load i32, i32* %v2_4bb2, align 4
  %v4_4bb2 = add i32 %v3_4bb2, -1
  %v12_4bb2 = icmp eq i32 %v4_4bb2, 0
  store i32 %v4_4bb2, i32* %v2_4bb2, align 4
  %v0_4bd4.pre = load i32, i32* %ebp.global-to-local, align 4
  %.pre = add i32 %v0_4bd4.pre, -16
  %.pre100 = inttoptr i32 %.pre to i32*
  br i1 %v12_4bb2, label %dec_label_pc_4bd0, label %dec_label_pc_4bba

dec_label_pc_4bba:                                ; preds = %dec_label_pc_4bb2
  br label %dec_label_pc_4bd0

dec_label_pc_4bd0:                                ; preds = %dec_label_pc_4bb2, %dec_label_pc_4bba
  %v3_4bd4 = load i32, i32* %.pre100, align 4
  %v1_4bd7 = trunc i32 %v3_4bd4 to i8
  store i8 %v1_4bd7, i8* @global_var_5430.2431, align 1
  ret i32 %v3_4bd4

; uselistorder directives
  uselistorder i32 %v4_4bb2, { 1, 0 }
  uselistorder i8* @global_var_5430.2431, { 1, 0 }
  uselistorder label %dec_label_pc_4bd0, { 1, 0 }
}

define i32 @function_4bdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_4bdc:
  %v0_4bdc = load i32, i32* @ebp, align 4
  %v1_4bdc = add i32 %v0_4bdc, -12
  %v2_4bdc = inttoptr i32 %v1_4bdc to i32*
  %v3_4bdc = load i32, i32* %v2_4bdc, align 4
  %v2_4bdf = xor i32 %v3_4bdc, 30
  %v3_4bdf = icmp eq i32 %v2_4bdf, 0
  store i32 %v2_4bdf, i32* @eax, align 8
  br i1 %v3_4bdf, label %bb, label %dec_label_pc_4be8

bb:                                               ; preds = %dec_label_pc_4bdc
  %v1_4be6 = call i32 @function_4bed()
  br label %dec_label_pc_4be8

dec_label_pc_4be8:                                ; preds = %bb, %dec_label_pc_4bdc
  %v2_4be6 = phi i32 [ %v1_4be6, %bb ], [ %v2_4bdf, %dec_label_pc_4bdc ]
  ret i32 %v2_4be6
}

define i32 @function_4bed() local_unnamed_addr {
dec_label_pc_4bed:
  %v0_4bee = load i32, i32* @eax, align 8
  ret i32 %v0_4bee
}

define i32 @_Z13FormatVersioni(i32 %nVersion) local_unnamed_addr {
dec_label_pc_4bef:
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %v2_4c25 = sdiv i32 %tmp117, 100
  %tmp125 = mul i32 %v2_4c25, -100
  %v2_4c2e = sub i32 0, %tmp117
  %v12_4c2e = icmp eq i32 %tmp125, %v2_4c2e
  %v1_4c34 = icmp eq i1 %v12_4c2e, false
  br i1 %v1_4c34, label %dec_label_pc_4ce7, label %dec_label_pc_4c3a

dec_label_pc_4c3a:                                ; preds = %dec_label_pc_4bef
  %v1_4cda = inttoptr i32 %nVersion to i8*
  %v7_4cda = call i32 (i8*, i32, ...) @_Z14real_strprintfPKciz(i8* %v1_4cda, i32 ptrtoint ([9 x i8]* @global_var_5e16.2433 to i32), i32 0, i32 undef, i32 undef)
  br label %dec_label_pc_4db2

dec_label_pc_4ce7:                                ; preds = %dec_label_pc_4bef
  %v2_4d31 = sdiv i32 %tmp117, 10000
  %tmp128 = mul nsw i32 %v2_4d31, -100
  %v2_4d38 = add i32 %tmp128, %v2_4c25
  %v1_4daa = inttoptr i32 %nVersion to i8*
  %v8_4daa = call i32 (i8*, i32, ...) @_Z14real_strprintfPKciz(i8* %v1_4daa, i32 ptrtoint ([12 x i8]* @global_var_5e1f.2434 to i32), i32 0, i32 undef, i32 undef, i32 %v2_4d38)
  br label %dec_label_pc_4db2

dec_label_pc_4db2:                                ; preds = %dec_label_pc_4ce7, %dec_label_pc_4c3a
  store i32 %nVersion, i32* @eax, align 8
  %v1_4dbf = call i32 @function_4dc6()
  ret i32 %v1_4dbf

; uselistorder directives
  uselistorder i32 %v2_4c25, { 1, 0 }
  uselistorder i32 (i8*, i32, ...)* @_Z14real_strprintfPKciz, { 3, 2, 1, 0 }
  uselistorder i32 undef, { 1, 0, 3, 2 }
  uselistorder i32 %nVersion, { 1, 2, 0 }
}

define i32 @function_4dc6() local_unnamed_addr {
dec_label_pc_4dc6:
  %v0_4dcd = load i32, i32* @eax, align 8
  ret i32 %v0_4dcd
}

define i32 @_Z17FormatFullVersionv() local_unnamed_addr {
dec_label_pc_4dd0:
  ret i32 0
}

define i32 @function_4e0d() local_unnamed_addr {
dec_label_pc_4e0d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4e0d = load i32, i32* %ecx.global-to-local, align 4
  %v1_4e0d = add i32 %v0_4e0d, -1
  store i32 %v1_4e0d, i32* %ecx.global-to-local, align 4
  %v0_4e0f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4e0f
}

define i32 @_Z16FormatSubVersionRKSsiRKSt6vectorISsSaISsEE(i32 %name, i32 %nClientVersion, i32 %comments) local_unnamed_addr {
dec_label_pc_4e12:
  %stack_var_-196 = alloca i32, align 4
  %v2_4e53 = ptrtoint i32* %stack_var_-196 to i32
  ret i32 %v2_4e53
}

define i32 @function_4f96() local_unnamed_addr {
dec_label_pc_4f96:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4f96 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4f96 = add i32 %v0_4f96, -52091
  %v2_4f96 = inttoptr i32 %v1_4f96 to i32*
  %v3_4f96 = load i32, i32* %v2_4f96, align 4
  %v4_4f96 = add i32 %v3_4f96, -1
  store i32 %v4_4f96, i32* %v2_4f96, align 4
  %v0_4f9c = load i32, i32* %ebx.global-to-local, align 4
  %v1_4f9c = add i32 %v0_4f9c, 862319701
  %v2_4f9c = inttoptr i32 %v1_4f9c to i32*
  %v3_4f9c = load i32, i32* %v2_4f9c, align 4
  %v4_4f9c = add i32 %v3_4f9c, -1
  store i32 %v4_4f9c, i32* %v2_4f9c, align 4
  %v0_4fa2 = load i32, i32* %eax.global-to-local, align 8
  %v1_4fa2 = load i1, i1* %cf.global-to-local, align 1
  %v2_4fa2 = zext i1 %v1_4fa2 to i32
  %v3_4fa2 = add i32 %v0_4fa2, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_4fa2 = add i32 %v3_4fa2, %v2_4fa2
  %v14_4fa2 = icmp eq i32 %v4_4fa2, 0
  %v20_4fa2 = add i32 %v0_4fa2, 20
  %v21_4fa2 = add i32 %v20_4fa2, %v2_4fa2
  %v22_4fa2 = icmp ule i32 %v21_4fa2, %v0_4fa2
  %v23_4fa2 = icmp ugt i32 %v0_4fa2, -21
  %v24_4fa2 = select i1 %v1_4fa2, i1 %v22_4fa2, i1 %v23_4fa2
  store i1 %v24_4fa2, i1* %cf.global-to-local, align 1
  store i32 %v4_4fa2, i32* @eax, align 8
  br i1 %v14_4fa2, label %bb, label %dec_label_pc_4fa9

bb:                                               ; preds = %dec_label_pc_4f96
  %v1_4fa7 = call i32 @function_4fee()
  store i32 %v1_4fa7, i32* @eax, align 8
  br label %dec_label_pc_4fa9

dec_label_pc_4fa9:                                ; preds = %bb, %dec_label_pc_4f96
  %v0_4fa9 = call i32 @function_4fe9()
  store i32 %v0_4fa9, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fa9
}

define i32 @function_4fac() local_unnamed_addr {
dec_label_pc_4fac:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fac
}

define i32 @function_4fbb() local_unnamed_addr {
dec_label_pc_4fbb:
  %v0_4fbb = call i32 @function_4fd1()
  ret i32 %v0_4fbb
}

define i32 @function_4fbe() local_unnamed_addr {
dec_label_pc_4fbe:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fbe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fbe
}

define i32 @function_4fcd() local_unnamed_addr {
dec_label_pc_4fcd:
  %v0_4fcd = call i32 @function_4fd1()
  ret i32 %v0_4fcd

; uselistorder directives
  uselistorder i32 ()* @function_4fd1, { 1, 0 }
}

define i32 @function_4fd0() local_unnamed_addr {
dec_label_pc_4fd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_4fd0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_4fd0
}

define i32 @function_4fd1() local_unnamed_addr {
dec_label_pc_4fd1:
  %v0_4fd1 = load i32, i32* @ebp, align 4
  %v1_4fd1 = add i32 %v0_4fd1, -192
  ret i32 %v1_4fd1
}

define i32 @function_4fe9() local_unnamed_addr {
dec_label_pc_4fe9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4fee() local_unnamed_addr {
dec_label_pc_4fee:
  %v0_4ff2 = load i32, i32* @eax, align 8
  ret i32 %v0_4ff2
}

define i32 @_Z11GetTempPathv() local_unnamed_addr {
dec_label_pc_4ff5:
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %v1_5012 = call i32 @_ZN5boost11filesystem319temp_directory_pathEv(i32 %tmp99)
  %v1_5027 = call i32 @function_502e()
  ret i32 %v1_5027
}

define i32 @function_502e() local_unnamed_addr {
dec_label_pc_502e:
  %v0_502f = load i32, i32* @eax, align 8
  ret i32 %v0_502f
}

define void @_Z10runCommandSs(i32 %strCommand) local_unnamed_addr {
dec_label_pc_5032:
  ret void
}

define i32 @function_5097() local_unnamed_addr {
dec_label_pc_5097:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5097 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5097 = add i32 %v0_5097, -1
  store i32 %v1_5097, i32* %ecx.global-to-local, align 4
  %v0_5099 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5099
}

define void @_Z12RenameThreadPKc(i8* %name) local_unnamed_addr {
dec_label_pc_509a:
  ret void
}

define i32 @function_50ec() local_unnamed_addr {
dec_label_pc_50ec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_50ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_50ec = add i32 %v0_50ec, -1
  store i32 %v1_50ec, i32* %ecx.global-to-local, align 4
  %v0_50ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_50ee
}

define i1 @_Z9NewThreadPFvPvES_(void (i8*)* %pfn, i8* %parg) local_unnamed_addr {
dec_label_pc_50ef:
  %e_-28 = alloca i32, align 4
  %v2_511b = ptrtoint i32* %e_-28 to i32
  %v2_5121 = ptrtoint void (i8*)* %pfn to i32
  %v4_5121 = ptrtoint i8* %parg to i32
  %v5_5121 = call i32 @_ZN5boost6threadC1IPFvPvES2_EET_T0_(i32 %v2_511b, i32 %v2_5121, i32 %v4_5121)
  ret i1 false
}

define i32 @function_5131() local_unnamed_addr {
dec_label_pc_5131:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  store i32 1, i32* @eax, align 8
  %v1_5138 = add i32 %tmp91, -12
  %v2_5138 = inttoptr i32 %v1_5138 to i32*
  %v3_5138 = load i32, i32* %v2_5138, align 4
  %v3_513b = icmp eq i32 %v3_5138, 30
  br i1 %v3_513b, label %bb, label %dec_label_pc_5144

bb:                                               ; preds = %dec_label_pc_5131
  %v1_5142 = call i32 @function_51a2()
  store i32 %v1_5142, i32* @eax, align 8
  br label %dec_label_pc_5144

dec_label_pc_5144:                                ; preds = %bb, %dec_label_pc_5131
  %v0_5144 = call i32 @function_519d()
  ret i32 %v0_5144
}

define i32 @function_5147() local_unnamed_addr {
dec_label_pc_5147:
  %eax.global-to-local = alloca i32, align 4
  %v0_5147 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5147
}

define i32 @function_519b() local_unnamed_addr {
dec_label_pc_519b:
  %eax.global-to-local = alloca i32, align 4
  %v0_519b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_519b
}

define i32 @function_519d() local_unnamed_addr {
dec_label_pc_519d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_51a2() local_unnamed_addr {
dec_label_pc_51a2:
  %v0_51a7 = load i32, i32* @eax, align 8
  ret i32 %v0_51a7
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_51a8:
  %v13_51c5 = icmp eq i32 %__initialize_p, 1
  %v1_51c9 = icmp eq i1 %v13_51c5, false
  br i1 %v1_51c9, label %bb, label %dec_label_pc_51cf

bb:                                               ; preds = %dec_label_pc_51a8
  %v4_51c9 = call i32 @function_53de(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_51cf

dec_label_pc_51cf:                                ; preds = %bb, %dec_label_pc_51a8
  %v13_51cf = icmp eq i32 %__priority, 65535
  %v1_51d6 = icmp eq i1 %v13_51cf, false
  br i1 %v1_51d6, label %bb9, label %dec_label_pc_51dc

bb9:                                              ; preds = %dec_label_pc_51cf
  %v4_51d6 = call i32 @function_53de(i32 30, i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_51dc

dec_label_pc_51dc:                                ; preds = %bb9, %dec_label_pc_51cf
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_53de, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_5293() local_unnamed_addr {
dec_label_pc_5293:
  %eax.global-to-local = alloca i32, align 4
  %v0_5294 = load i32, i32* %eax.global-to-local, align 8
  %v2_5294 = add i32 %v0_5294, zext (i8 ptrtoint (%once_flag* @debugPrintInitFlag to i8) to i32)
  %v16_5294 = and i32 %v2_5294, 255
  %v18_5294 = and i32 %v0_5294, -256
  %v19_5294 = or i32 %v16_5294, %v18_5294
  store i32 %v19_5294, i32* @eax, align 8
  %v0_5296 = call i32 @function_c7000114()
  store i32 %v0_5296, i32* %eax.global-to-local, align 8
  ret i32 %v0_5296

; uselistorder directives
  uselistorder i32 %v0_5294, { 1, 0 }
}

define i32 @function_52b6() local_unnamed_addr {
dec_label_pc_52b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_52b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52b6
}

define i32 @function_52c0() local_unnamed_addr {
dec_label_pc_52c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_52c0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52c0
}

define i32 @function_52ca() local_unnamed_addr {
dec_label_pc_52ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_52ca = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_52ca
}

define i32 @function_53de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_53de:
  %v0_53de = load i32, i32* @ebp, align 4
  %v1_53de = add i32 %v0_53de, -12
  %v2_53de = inttoptr i32 %v1_53de to i32*
  %v3_53de = load i32, i32* %v2_53de, align 4
  %v2_53e1 = xor i32 %v3_53de, 30
  %v3_53e1 = icmp eq i32 %v2_53e1, 0
  store i32 %v2_53e1, i32* @eax, align 8
  br i1 %v3_53e1, label %bb, label %dec_label_pc_53ea

bb:                                               ; preds = %dec_label_pc_53de
  %v1_53e8 = call i32 @function_53ef()
  br label %dec_label_pc_53ea

dec_label_pc_53ea:                                ; preds = %bb, %dec_label_pc_53de
  %v2_53e8 = phi i32 [ %v1_53e8, %bb ], [ %v2_53e1, %dec_label_pc_53de ]
  ret i32 %v2_53e8
}

define i32 @function_53ef() local_unnamed_addr {
dec_label_pc_53ef:
  %v0_53f0 = load i32, i32* @eax, align 8
  ret i32 %v0_53f0
}

define void @_GLOBAL__sub_I_mapArgs() local_unnamed_addr {
dec_label_pc_53f1:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 0, i32* @eax, align 8
  %v1_5420 = call i32 @function_5427()
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_5427() local_unnamed_addr {
dec_label_pc_5427:
  %v0_5428 = load i32, i32* @eax, align 8
  ret i32 %v0_5428
}

define i32 @_ZNSt9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5440:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_8.2379 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_546a = call i32 @fDebugNet(i32 %tmp99)
  ret i32 %v2_546a
}

define i32 @fDebugNet(i32 %arg1) local_unnamed_addr {
dec_label_pc_5471:
  %v4_5471 = load i32, i32* @eax, align 8
  ret i32 %v4_5471
}

define i32 @_ZSt4__lgi() local_unnamed_addr {
dec_label_pc_5473:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_54ae() local_unnamed_addr {
dec_label_pc_54ae:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_54ae = load i32, i32* %ecx.global-to-local, align 4
  %v1_54ae = add i32 %v0_54ae, -1
  store i32 %v1_54ae, i32* %ecx.global-to-local, align 4
  %v0_54b0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_54b0
}

define i32 @_ZNSt9bad_allocC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_54b2:
  store i32 %arg1, i32* @eax, align 8
  %v1_54cf = call i32 @function_a8f2(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_54ee() local_unnamed_addr {
dec_label_pc_54ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_54ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_54ef
}

define i32 @_ZnwjPv() local_unnamed_addr {
dec_label_pc_54f0:
  %eax.global-to-local = alloca i32, align 4
  %v2_54f1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_54f1
}

define i32 @_ZdlPvS_() local_unnamed_addr {
dec_label_pc_5523:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_5550() local_unnamed_addr {
dec_label_pc_5550:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5550 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5550 = add i32 %v0_5550, -1
  store i32 %v1_5550, i32* %ecx.global-to-local, align 4
  %v0_5552 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5552
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_5554:
  ret i32 0
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_557e:
  store i32 %arg1, i32* @eax, align 8
  %v1_559b = call i32 @function_aad2(i32 %arg1)
  ret i32 %v1_559b
}

define i32 @function_55d5() local_unnamed_addr {
dec_label_pc_55d5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_55d5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_55d5 = add i32 %v0_55d5, -1
  store i32 %v1_55d5, i32* %ecx.global-to-local, align 4
  %v0_55d7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_55d7
}

define i32 @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_55d8:
  %v1_55fd103 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_55fd104 = inttoptr i32 %v1_55fd103 to i32*
  %v3_55fd105 = load i32, i32* %v2_55fd104, align 4
  %v1_5600106 = icmp eq i32 %v3_55fd105, 0
  %v1_5602107 = icmp eq i1 %v1_5600106, false
  %v5_5605108 = icmp eq i1 %v1_5602107, false
  %v1_5607109 = icmp eq i1 %v5_5605108, false
  store i32 %arg1, i32* @eax, align 8
  br i1 %v1_5607109, label %dec_label_pc_55f1, label %dec_label_pc_5609

dec_label_pc_55f1:                                ; preds = %dec_label_pc_55d8, %dec_label_pc_55f1
  %v2_55fd110 = phi i32* [ %v2_55fd, %dec_label_pc_55f1 ], [ %v2_55fd104, %dec_label_pc_55d8 ]
  %v3_55f4 = load i32, i32* %v2_55fd110, align 4
  %v1_55fd = add i32 %v3_55f4, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_55fd = inttoptr i32 %v1_55fd to i32*
  %v3_55fd = load i32, i32* %v2_55fd, align 4
  %v1_5600 = icmp eq i32 %v3_55fd, 0
  %v1_5602 = icmp eq i1 %v1_5600, false
  %v5_5605 = icmp eq i1 %v1_5602, false
  %v1_5607 = icmp eq i1 %v5_5605, false
  store i32 %v3_55f4, i32* @eax, align 8
  br i1 %v1_5607, label %dec_label_pc_55f1, label %dec_label_pc_5609

dec_label_pc_5609:                                ; preds = %dec_label_pc_55f1, %dec_label_pc_55d8
  %v1_5616 = call i32 @function_561d()
  ret i32 %v1_5616

; uselistorder directives
  uselistorder i32* %v2_55fd, { 1, 0 }
  uselistorder i32 %v3_55f4, { 1, 0 }
  uselistorder label %dec_label_pc_55f1, { 1, 0 }
}

define i32 @function_561d() local_unnamed_addr {
dec_label_pc_561d:
  %v0_561e = load i32, i32* @eax, align 8
  ret i32 %v0_561e
}

define i32 @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_561f:
  %ebp.global-to-local = alloca i32, align 4
  %v0_561f = load i32, i32* %ebp.global-to-local, align 4
  %v1_5644104 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_5644105 = inttoptr i32 %v1_5644104 to i32*
  %v3_5644106 = load i32, i32* %v2_5644105, align 4
  %v1_5647107 = icmp eq i32 %v3_5644106, 0
  %v1_5649108 = icmp eq i1 %v1_5647107, false
  %v5_564c109 = icmp eq i1 %v1_5649108, false
  %v1_564e110 = icmp eq i1 %v5_564c109, false
  br i1 %v1_564e110, label %dec_label_pc_5638, label %dec_label_pc_5650

dec_label_pc_5638:                                ; preds = %dec_label_pc_561f, %dec_label_pc_5638
  %v2_5644111 = phi i32* [ %v2_5644, %dec_label_pc_5638 ], [ %v2_5644105, %dec_label_pc_561f ]
  %v3_563b = load i32, i32* %v2_5644111, align 4
  %v1_5644 = add i32 %v3_563b, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_5644 = inttoptr i32 %v1_5644 to i32*
  %v3_5644 = load i32, i32* %v2_5644, align 4
  %v1_5647 = icmp eq i32 %v3_5644, 0
  %v1_5649 = icmp eq i1 %v1_5647, false
  %v5_564c = icmp eq i1 %v1_5649, false
  %v1_564e = icmp eq i1 %v5_564c, false
  br i1 %v1_564e, label %dec_label_pc_5638, label %dec_label_pc_5650

dec_label_pc_5650:                                ; preds = %dec_label_pc_5638, %dec_label_pc_561f
  %v0_5665.lcssa = phi i32 [ %arg1, %dec_label_pc_561f ], [ %v3_563b, %dec_label_pc_5638 ]
  store i32 %v0_561f, i32* %ebp.global-to-local, align 4
  ret i32 %v0_5665.lcssa

; uselistorder directives
  uselistorder i32* %v2_5644, { 1, 0 }
  uselistorder label %dec_label_pc_5638, { 1, 0 }
}

define i32 @_ZN5boost16thread_exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5666:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_5683 = call i32 @function_aaa6(i32 %tmp100)
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.2436 to i32), i32* %arg1, align 4
  %v1_5694 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_5694 = inttoptr i32 %v1_5694 to i32*
  store i32 0, i32* %v2_5694, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZN5boost16thread_exceptionC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_56ae:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 8
  %v1_56d1 = call i32 @function_aaee(i32 %tmp101)
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.2436 to i32), i32* %arg1, align 4
  %v2_56e5 = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_56e5 = inttoptr i32 %v2_56e5 to i32*
  store i32 %arg2, i32* %v3_56e5, align 4
  store i32 0, i32* @eax, align 8
  %v1_56f2 = call i32 @function_56f9()
  ret i32 %v1_56f2

; uselistorder directives
  uselistorder i32 %tmp101, { 2, 1, 0 }
}

define i32 @function_56f9() local_unnamed_addr {
dec_label_pc_56f9:
  %v0_56fa = load i32, i32* @eax, align 8
  ret i32 %v0_56fa
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_56fc:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.2436 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_574e() local_unnamed_addr {
dec_label_pc_574e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_574e = load i32, i32* %ecx.global-to-local, align 4
  %v1_574e = add i32 %v0_574e, -1
  store i32 %v1_574e, i32* %ecx.global-to-local, align 4
  %v0_5750 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5750
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32 %arg1) {
dec_label_pc_5752:
  store i32 %arg1, i32* @eax, align 8
  %v1_576f = call i32 @function_ae4e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_577e() local_unnamed_addr {
dec_label_pc_577e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_577e = load i32, i32* %ebx.global-to-local, align 4
  %v1_577e = add i32 %v0_577e, 862319685
  %v2_577e = inttoptr i32 %v1_577e to i32*
  %v3_577e = load i32, i32* %v2_577e, align 4
  %v4_577e = add i32 %v3_577e, -1
  store i32 %v4_577e, i32* %v2_577e, align 4
  %v0_5784 = load i32, i32* %eax.global-to-local, align 8
  %v1_5784 = add i32 %v0_5784, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_5784, i32* %eax.global-to-local, align 8
  ret i32 %v1_5784
}

define i32 @_ZN5boost10lock_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_5792:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 8
  %v1_57af = call i32 @function_adf8(i32 %tmp99)
  store i32 ptrtoint (%vtable_38ff0_type* @global_var_38ff0.2437 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_57c7 = call i32 @function_57ce()
  ret i32 %v1_57c7

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_57ce() local_unnamed_addr {
dec_label_pc_57ce:
  %v0_57cf = load i32, i32* @eax, align 8
  ret i32 %v0_57cf
}

define i32 @_ZN5boost10lock_errorC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_57d0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_57fa = call i32 @function_ae7e(i32 %tmp102, i32 %arg2)
  store i32 ptrtoint (%vtable_38ff0_type* @global_var_38ff0.2437 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_5812 = call i32 @function_5819()
  ret i32 %v1_5812

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_5819() local_unnamed_addr {
dec_label_pc_5819:
  %v0_581a = load i32, i32* @eax, align 8
  ret i32 %v0_581a
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_581c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38ff0_type* @global_var_38ff0.2437 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_5842 = call i32 @function_af18(i32 %tmp99)
  %v1_5851 = call i32 @function_585e()
  ret i32 %tmp99
}

define i32 @function_585e() local_unnamed_addr {
dec_label_pc_585e:
  %v0_585e = load i32, i32* @ebp, align 4
  %v1_585e = add i32 %v0_585e, -12
  %v2_585e = inttoptr i32 %v1_585e to i32*
  %v3_585e = load i32, i32* %v2_585e, align 4
  %v2_5861 = xor i32 %v3_585e, 30
  %v3_5861 = icmp eq i32 %v2_5861, 0
  store i32 %v2_5861, i32* @eax, align 8
  br i1 %v3_5861, label %bb, label %dec_label_pc_586a

bb:                                               ; preds = %dec_label_pc_585e
  %v1_5868 = call i32 @function_586f()
  br label %dec_label_pc_586a

dec_label_pc_586a:                                ; preds = %bb, %dec_label_pc_585e
  %v2_5868 = phi i32 [ %v1_5868, %bb ], [ %v2_5861, %dec_label_pc_585e ]
  ret i32 %v2_5868
}

define i32 @function_586f() local_unnamed_addr {
dec_label_pc_586f:
  %v0_5870 = load i32, i32* @eax, align 8
  ret i32 %v0_5870
}

define i32 @_ZN5boost10lock_errorD0Ev(i32 %arg1) {
dec_label_pc_5872:
  store i32 %arg1, i32* @eax, align 8
  %v1_588f = call i32 @function_b08e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_589e() local_unnamed_addr {
dec_label_pc_589e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_589e = load i32, i32* %ebx.global-to-local, align 4
  %v1_589e = add i32 %v0_589e, 862319685
  %v2_589e = inttoptr i32 %v1_589e to i32*
  %v3_589e = load i32, i32* %v2_589e, align 4
  %v4_589e = add i32 %v3_589e, -1
  store i32 %v4_589e, i32* %v2_589e, align 4
  %v0_58a4 = load i32, i32* %eax.global-to-local, align 8
  %v1_58a4 = add i32 %v0_58a4, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_58a4, i32* %eax.global-to-local, align 8
  ret i32 %v1_58a4
}

define i32 @function_a8f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_a8f2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_aaa6(i32 %arg1) local_unnamed_addr {
dec_label_pc_aaa6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_aad2(i32 %arg1) local_unnamed_addr {
dec_label_pc_aad2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_aaee(i32 %arg1) local_unnamed_addr {
dec_label_pc_aaee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_adf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_adf8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_ae4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_ae4e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_ae7e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ae7e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_af18(i32 %arg1) local_unnamed_addr {
dec_label_pc_af18:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_b08e(i32 %arg1) local_unnamed_addr {
dec_label_pc_b08e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost10lock_error4whatEv(i32 %arg1) {
dec_label_pc_e688:
  store i32 ptrtoint ([18 x i8]* @global_var_58c0.2438 to i32), i32* @eax, align 8
  %v2_e6ae = call i32 @function_e6b5(i32 %arg1)
  ret i32 %v2_e6ae
}

define i32 @function_e6b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6b5:
  %v0_e6b6 = load i32, i32* @eax, align 8
  ret i32 %v0_e6b6
}

define i32 @_ZN5boost21thread_resource_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e6b8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i1 true, i1* @zf, align 1
  store i32 %tmp100, i32* @eax, align 8
  %v1_e6d5 = call i32 @function_13d1e(i32 %tmp100)
  store i32 ptrtoint (%vtable_38fd8_type* @global_var_38fd8.2439 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZN5boost21thread_resource_errorD1Ev(i32* %arg1) {
dec_label_pc_e6f6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38fd8_type* @global_var_38fd8.2439 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_e71c = call i32 @function_13df2(i32 %tmp99)
  store i32 0, i32* @eax, align 8
  %v1_e742 = call i32 @function_e749()
  ret i32 %v1_e742

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_e749() local_unnamed_addr {
dec_label_pc_e749:
  %v0_e74a = load i32, i32* @eax, align 8
  ret i32 %v0_e74a
}

define i32 @_ZN5boost21thread_resource_errorD0Ev(i32 %arg1) {
dec_label_pc_e74c:
  store i1 false, i1* @cf, align 1
  %v1_e769 = call i32 @function_1ce42(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_e783 = call i32 @function_e78a(i32 %arg1)
  ret i32 %v2_e783
}

define i32 @function_e78a(i32 %arg1) local_unnamed_addr {
dec_label_pc_e78a:
  %v0_e78b = load i32, i32* @eax, align 8
  ret i32 %v0_e78b
}

define i32 @_ZNK5boost21thread_resource_error4whatEv(i32 %arg1) {
dec_label_pc_e78c:
  ret i32 ptrtoint ([29 x i8]* @global_var_58d2.2440 to i32)
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e7bc:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_e7eb = call i32 @function_e7f2(i32 %arg2, i32 %tmp101)
  ret i32 %v3_e7eb
}

define i32 @function_e7f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e7f2:
  %v0_e7f3 = load i32, i32* @eax, align 8
  ret i32 %v0_e7f3
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e7f4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_e823 = call i32 @function_e82a(i32 %arg2, i32 %tmp101)
  ret i32 %v3_e823
}

define i32 @function_e82a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e82a:
  %v0_e82b = load i32, i32* @eax, align 8
  ret i32 %v0_e82b
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e82c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_e85b = call i32 @function_e862(i32 %arg2, i32 %tmp101)
  ret i32 %v3_e85b
}

define i32 @function_e862(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e862:
  %v0_e863 = load i32, i32* @eax, align 8
  ret i32 %v0_e863
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e864:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38fc8.2441 to i32), i32* %arg1, align 4
  %v1_e887 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_e887, i32* @eax, align 8
  %v1_e88d = call i32 @function_21bde(i32 %v1_e887)
  %v1_e895 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_e895 = inttoptr i32 %v1_e895 to i32*
  store i32 0, i32* %v2_e895, align 4
  %v1_e89f = add i32 %tmp99, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_e89f = inttoptr i32 %v1_e89f to i32*
  store i32 0, i32* %v2_e89f, align 4
  %v1_e8a9 = add i32 %tmp99, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_e8a9 = inttoptr i32 %v1_e8a9 to i32*
  store i32 -1, i32* %v2_e8a9, align 4
  store i32 0, i32* @eax, align 8
  %v1_e8ba = call i32 @function_e8c1()
  ret i32 %v1_e8ba

; uselistorder directives
  uselistorder i32 %tmp99, { 3, 2, 1, 0 }
}

define i32 @function_e8c1() local_unnamed_addr {
dec_label_pc_e8c1:
  %v0_e8c2 = load i32, i32* @eax, align 8
  ret i32 %v0_e8c2
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e8c4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38fc8.2441 to i32), i32* %arg1, align 4
  %v1_e8e7 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_e8e7, i32* @eax, align 8
  %v1_e8ed = call i32 @function_21c72(i32 %v1_e8e7)
  %v1_e8fc = call i32 @function_e920()
  ret i32 %tmp99
}

define i32 @function_e909() local_unnamed_addr {
dec_label_pc_e909:
  %v0_e909 = call i32 @function_e920()
  ret i32 %v0_e909

; uselistorder directives
  uselistorder i32 ()* @function_e920, { 1, 0 }
}

define i32 @function_e920() local_unnamed_addr {
dec_label_pc_e920:
  %v0_e920 = load i32, i32* @ebp, align 4
  %v1_e920 = add i32 %v0_e920, -12
  %v2_e920 = inttoptr i32 %v1_e920 to i32*
  %v3_e920 = load i32, i32* %v2_e920, align 4
  %v2_e923 = xor i32 %v3_e920, 30
  %v3_e923 = icmp eq i32 %v2_e923, 0
  store i32 %v2_e923, i32* @eax, align 8
  br i1 %v3_e923, label %bb, label %dec_label_pc_e92c

bb:                                               ; preds = %dec_label_pc_e920
  %v1_e92a = call i32 @function_e931()
  br label %dec_label_pc_e92c

dec_label_pc_e92c:                                ; preds = %bb, %dec_label_pc_e920
  %v2_e92a = phi i32 [ %v1_e92a, %bb ], [ %v2_e923, %dec_label_pc_e920 ]
  ret i32 %v2_e92a
}

define i32 @function_e931() local_unnamed_addr {
dec_label_pc_e931:
  %v0_e932 = load i32, i32* @eax, align 8
  ret i32 %v0_e932
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe94:
  store i32 %arg1, i32* @eax, align 8
  %v1_feb1 = call i32 @function_1e758(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_fed1() local_unnamed_addr {
dec_label_pc_fed1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fed1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_fed1 = add i32 %v0_fed1, -1
  store i32 %v1_fed1, i32* %ecx.global-to-local, align 4
  %v0_fed3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_fed3
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_fed4:
  store i32 ptrtoint (i32* @global_var_38fb0.2442 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_ff15 = call i32 @function_ff1c()
  ret i32 %v1_ff15
}

define i32 @function_ff1c() local_unnamed_addr {
dec_label_pc_ff1c:
  %v0_ff1d = load i32, i32* @eax, align 8
  ret i32 %v0_ff1d
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff1e:
  store i32 %arg1, i32* @eax, align 8
  %v1_ff3b = call i32 @function_1fdf2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_ff55 = call i32 @function_ff5c(i32 %arg1)
  ret i32 %v2_ff55

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_ff5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff5c:
  %v0_ff5d = load i32, i32* @eax, align 8
  ret i32 %v0_ff5d
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff5e:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_ff7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_ff7c, i32* %stack_var_-60, align 4
  %v1_ff82 = call i32 @function_232d8(i32 %v2_ff7c)
  %v1_ff8a = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_ff8a, i32* %stack_var_-60, align 4
  %v1_ff90 = call i32 @function_23342(i32 %v1_ff8a)
  %v10_ff98 = icmp eq i32 %v1_ff90, 0
  br i1 %v10_ff98, label %dec_label_pc_ffd7, label %dec_label_pc_ff9e

dec_label_pc_ff9e:                                ; preds = %dec_label_pc_ff5e
  %v2_ffa8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_ff90, i32* %edx.global-to-local, align 8
  store i32 %v2_ffa8, i32* %stack_var_-60, align 4
  store i32 %v2_ff7c, i32* %stack_var_-64, align 4
  %v3_ffc7 = call i32 @function_23372(i32 %v2_ff7c, i32 %v2_ffa8, i32 %v1_ff90)
  store i32 %v2_ffa8, i32* @eax, align 8
  store i32 %v2_ffa8, i32* %stack_var_-64, align 4
  %v1_ffd2 = call i32 @function_2330c(i32 %v2_ffa8)
  br label %dec_label_pc_ffd7

dec_label_pc_ffd7:                                ; preds = %dec_label_pc_ff9e, %dec_label_pc_ff5e
  %stack_var_-56.0 = phi i32 [ %tmp97, %dec_label_pc_ff5e ], [ %v1_ff90, %dec_label_pc_ff9e ]
  %v1_ffda = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_ffda = inttoptr i32 %v1_ffda to i32*
  %v3_ffda = load i32, i32* %v2_ffda, align 4
  store i32 %v3_ffda, i32* %edx.global-to-local, align 8
  %v2_ffe0 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_ffe0 = inttoptr i32 %v2_ffe0 to i32*
  store i32 %v3_ffda, i32* %v3_ffe0, align 4
  %v1_ffe6 = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_ffe6 = inttoptr i32 %v1_ffe6 to i32*
  %v3_ffe6 = load i32, i32* %v2_ffe6, align 4
  store i32 %v3_ffe6, i32* %edx.global-to-local, align 8
  %v2_ffec = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_ffec = inttoptr i32 %v2_ffec to i32*
  store i32 %v3_ffe6, i32* %v3_ffec, align 4
  %v1_fff2 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_fff2 = inttoptr i32 %v1_fff2 to i32*
  %v3_fff2 = load i32, i32* %v2_fff2, align 4
  %v2_fff8 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_fff8 = inttoptr i32 %v2_fff8 to i32*
  store i32 %v3_fff2, i32* %v3_fff8, align 4
  %v1_fffe = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_fffe, i32* %edx.global-to-local, align 8
  %v1_10004 = load i32, i32* @esp, align 4
  %v2_10004 = add i32 %v1_10004, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_10004 = inttoptr i32 %v2_10004 to i32*
  store i32 %v2_ff7c, i32* %v3_10004, align 4
  %v0_10008 = load i32, i32* %edx.global-to-local, align 8
  %v1_10008 = load i32, i32* @esp, align 4
  %v2_10008 = inttoptr i32 %v1_10008 to i32*
  store i32 %v0_10008, i32* %v2_10008, align 4
  %v0_1000b = load i32, i32* %stack_var_-64, align 4
  %v1_1000b = load i32, i32* %stack_var_-60, align 4
  %v3_1000b = call i32 @function_23372(i32 %v0_1000b, i32 %v1_1000b, i32 %stack_var_-56.0)
  store i32 %v2_ff7c, i32* @eax, align 8
  %v1_10013 = load i32, i32* @esp, align 4
  %v2_10013 = inttoptr i32 %v1_10013 to i32*
  store i32 %v2_ff7c, i32* %v2_10013, align 4
  %v0_10016 = load i32, i32* %stack_var_-64, align 4
  %v1_10016 = call i32 @function_2330c(i32 %v0_10016)
  store i32 0, i32* @eax, align 8
  %v1_10025 = call i32 @function_10054()
  store i32 %v1_10025, i32* @eax, align 8
  %v0_10027 = call i32 @function_1004f()
  ret i32 %v0_10027

; uselistorder directives
  uselistorder i32 %v2_ffa8, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_ff7c, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @function_23372, { 1, 0 }
}

define i32 @function_10029() local_unnamed_addr {
dec_label_pc_10029:
  %eax.global-to-local = alloca i32, align 4
  %v0_10029 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_10029, i32* @ebx, align 4
  %v0_1002b = load i32, i32* @ebp, align 4
  %v1_1002b = add i32 %v0_1002b, -20
  store i32 %v1_1002b, i32* @eax, align 8
  %v1_10031 = call i32 @function_2330c(i32 %v1_1002b)
  store i32 %v1_10031, i32* %eax.global-to-local, align 8
  %v0_10036 = call i32 @function_1003a()
  store i32 %v0_10036, i32* %eax.global-to-local, align 8
  ret i32 %v0_10036
}

define i32 @function_10038() local_unnamed_addr {
dec_label_pc_10038:
  %eax.global-to-local = alloca i32, align 4
  %v0_10038 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10038
}

define i32 @function_1003a() local_unnamed_addr {
dec_label_pc_1003a:
  %v0_1003a = load i32, i32* @ebp, align 4
  %v1_1003a = add i32 %v0_1003a, -24
  store i32 %v1_1003a, i32* @eax, align 8
  %v1_10040 = call i32 @function_2330c(i32 %v1_1003a)
  %v0_10045 = load i32, i32* @ebx, align 4
  ret i32 %v0_10045

; uselistorder directives
  uselistorder i32 (i32)* @function_2330c, { 3, 2, 1, 0 }
}

define i32 @function_1004f() local_unnamed_addr {
dec_label_pc_1004f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10054() local_unnamed_addr {
dec_label_pc_10054:
  %v0_10058 = load i32, i32* @eax, align 8
  ret i32 %v0_10058
}

define i32 @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(i32 %arg1) local_unnamed_addr {
dec_label_pc_10059:
  store i32 0, i32* @eax, align 8
  %v2_1007a = call i32 @function_10081(i32 %arg1)
  ret i32 %v2_1007a
}

define i32 @function_10081(i32 %arg1) local_unnamed_addr {
dec_label_pc_10081:
  %v0_10082 = load i32, i32* @eax, align 8
  ret i32 %v0_10082
}

define i32 @_ZNKSt9type_info4nameEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10084:
  %v1_1009e = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1009e = inttoptr i32 %v1_1009e to i32*
  %v3_1009e = load i32, i32* %v2_1009e, align 4
  %v1_100a1 = inttoptr i32 %v3_1009e to i8*
  %v2_100a1 = load i8, i8* %v1_100a1, align 1
  %v11_100a4 = icmp eq i8 %v2_100a1, 42
  %v1_100a6 = icmp eq i1 %v11_100a4, false
  br i1 %v1_100a6, label %dec_label_pc_100b9, label %dec_label_pc_100a8

dec_label_pc_100a8:                               ; preds = %dec_label_pc_10084
  %v1_100ae = add i32 %v3_1009e, 1
  br label %dec_label_pc_100b9

dec_label_pc_100b9:                               ; preds = %dec_label_pc_10084, %dec_label_pc_100a8
  %storemerge = phi i32 [ %v1_100ae, %dec_label_pc_100a8 ], [ %v3_1009e, %dec_label_pc_10084 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_100c3 = call i32 @function_100ca()
  ret i32 %v1_100c3

; uselistorder directives
  uselistorder i32 %v3_1009e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100b9, { 1, 0 }
}

define i32 @function_100ca() local_unnamed_addr {
dec_label_pc_100ca:
  %v0_100cb = load i32, i32* @eax, align 8
  ret i32 %v0_100cb
}

define i32 @_ZNKSt9type_infoeqERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100cc:
  %v1_100ec = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_100ec = inttoptr i32 %v1_100ec to i32*
  %v3_100ec = load i32, i32* %v2_100ec, align 4
  %v1_100f2 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_100f2 = inttoptr i32 %v1_100f2 to i32*
  %v3_100f2 = load i32, i32* %v2_100f2, align 4
  %v12_100f5 = icmp eq i32 %v3_100ec, %v3_100f2
  br i1 %v12_100f5, label %bb, label %dec_label_pc_100f9

bb:                                               ; preds = %dec_label_pc_100cc
  %v3_100f7 = call i32 @function_10122(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_100f9

dec_label_pc_100f9:                               ; preds = %bb, %dec_label_pc_100cc
  %v3_100fc = load i32, i32* %v2_100ec, align 4
  %v1_100ff = inttoptr i32 %v3_100fc to i8*
  %v2_100ff = load i8, i8* %v1_100ff, align 1
  %v11_10102 = icmp eq i8 %v2_100ff, 42
  br i1 %v11_10102, label %bb105, label %dec_label_pc_10106

bb105:                                            ; preds = %dec_label_pc_100f9
  %v1_10104 = call i32 @function_10129()
  br label %dec_label_pc_10106

dec_label_pc_10106:                               ; preds = %bb105, %dec_label_pc_100f9
  %v3_1010f = load i32, i32* %v2_100ec, align 4
  ret i32 %v3_1010f

; uselistorder directives
  uselistorder i8 42, { 0, 1, 3, 2 }
}

define i32 @function_10122(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10122:
  store i32 1, i32* @eax, align 8
  %v0_10127 = call i32 @function_1012e()
  ret i32 %v0_10127
}

define i32 @function_10129() local_unnamed_addr {
dec_label_pc_10129:
  ret i32 0
}

define i32 @function_1012e() local_unnamed_addr {
dec_label_pc_1012e:
  %v0_1012e = load i32, i32* @ebp, align 4
  %v1_1012e = add i32 %v0_1012e, -12
  %v2_1012e = inttoptr i32 %v1_1012e to i32*
  %v3_1012e = load i32, i32* %v2_1012e, align 4
  %v3_10131 = icmp eq i32 %v3_1012e, 30
  br i1 %v3_10131, label %bb, label %dec_label_pc_1012e.dec_label_pc_1013a_crit_edge

dec_label_pc_1012e.dec_label_pc_1013a_crit_edge:  ; preds = %dec_label_pc_1012e
  %v2_10138.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1013a

bb:                                               ; preds = %dec_label_pc_1012e
  %v1_10138 = call i32 @function_1013f()
  br label %dec_label_pc_1013a

dec_label_pc_1013a:                               ; preds = %dec_label_pc_1012e.dec_label_pc_1013a_crit_edge, %bb
  %v2_10138 = phi i32 [ %v2_10138.pre, %dec_label_pc_1012e.dec_label_pc_1013a_crit_edge ], [ %v1_10138, %bb ]
  ret i32 %v2_10138

; uselistorder directives
  uselistorder label %dec_label_pc_1013a, { 1, 0 }
}

define i32 @function_1013f() local_unnamed_addr {
dec_label_pc_1013f:
  %v0_10140 = load i32, i32* @eax, align 8
  ret i32 %v0_10140
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10141:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1016a = load i32, i32* %arg1, align 4
  %v4_1016a = add i32 %v2_1016a, %arg2
  store i32 %v4_1016a, i32* %arg1, align 4
  store i32 %v2_1016a, i32* @eax, align 8
  %v3_1017e = call i32 @function_10185(i32 %arg2, i32 %tmp102)
  ret i32 %v3_1017e

; uselistorder directives
  uselistorder i32 %v2_1016a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10185(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10185:
  %v0_1018a = load i32, i32* @eax, align 8
  ret i32 %v0_1018a
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_1018b:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_101a8 = load i32, i32* %arg1, align 4
  %v3_101a8 = add i32 %v2_101a8, 1
  store i32 %v3_101a8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_101b5 = call i32 @function_101bc(i32 %tmp99)
  ret i32 %v2_101b5
}

define i32 @function_101bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_101bc:
  %v0_101bd = load i32, i32* @eax, align 8
  ret i32 %v0_101bd
}

define i32 @_ZN5boost6detail28atomic_conditional_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_101be:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %tmp110, i32* %edx.global-to-local, align 8
  %v2_101e3 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_101e5

dec_label_pc_101e5:                               ; preds = %dec_label_pc_101e9, %dec_label_pc_101be
  %v0_101e9 = phi i32 [ %v2_101ec, %dec_label_pc_101e9 ], [ %v2_101e3, %dec_label_pc_101be ]
  %v1_101e5 = icmp eq i32 %v0_101e9, 0
  br i1 %v1_101e5, label %dec_label_pc_101f2, label %dec_label_pc_101e9

dec_label_pc_101e9:                               ; preds = %dec_label_pc_101e5
  %v1_101eb = add i32 %v0_101e9, 1
  store i32 %v1_101eb, i32* %ebx.global-to-local, align 4
  %v0_101ec = load i32, i32* %edx.global-to-local, align 8
  %v1_101ec = inttoptr i32 %v0_101ec to i32*
  %v2_101ec = load i32, i32* %v1_101ec, align 4
  %v15_101ec = icmp eq i32 %v0_101e9, %v2_101ec
  %v22_101ec = select i1 %v15_101ec, i32 %v1_101eb, i32 %v2_101ec
  store i32 %v22_101ec, i32* %v1_101ec, align 4
  %v1_101f0 = icmp eq i1 %v15_101ec, false
  br i1 %v1_101f0, label %dec_label_pc_101e5, label %dec_label_pc_101f2

dec_label_pc_101f2:                               ; preds = %dec_label_pc_101e9, %dec_label_pc_101e5
  %v0_101f2 = phi i32 [ %v0_101e9, %dec_label_pc_101e9 ], [ 0, %dec_label_pc_101e5 ]
  %v0_101f7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_101f2, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v3_10207 = call i32 @function_1020e(i32 %v0_101f2, i32 %v0_101f7)
  ret i32 %v3_10207

; uselistorder directives
  uselistorder i32 %v0_101f2, { 1, 0 }
  uselistorder i1 %v15_101ec, { 1, 0 }
  uselistorder i32 %v2_101ec, { 2, 0, 1 }
  uselistorder i32 %v0_101e9, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1020e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1020e:
  %v0_10214 = load i32, i32* @eax, align 8
  ret i32 %v0_10214
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10216:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38f90.2443 to i32), i32* %arg1, align 4
  %v1_10239 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_10239 = inttoptr i32 %v1_10239 to i32*
  store i32 1, i32* %v2_10239, align 4
  %v1_10243 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_10243 = inttoptr i32 %v1_10243 to i32*
  store i32 1, i32* %v2_10243, align 4
  store i32 0, i32* @eax, align 8
  %v2_10254 = call i32 @function_1025b(i32 %tmp99)
  ret i32 %v2_10254
}

define i32 @function_1025b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1025b:
  %v0_1025c = load i32, i32* @eax, align 8
  ret i32 %v0_1025c
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1025e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38f90.2443 to i32), i32* %arg1, align 4
  %v2_10288 = call i32 @function_10295(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_10295(i32 %arg1) local_unnamed_addr {
dec_label_pc_10295:
  %v0_10295 = load i32, i32* @ebp, align 4
  %v1_10295 = add i32 %v0_10295, -12
  %v2_10295 = inttoptr i32 %v1_10295 to i32*
  %v3_10295 = load i32, i32* %v2_10295, align 4
  %v2_10298 = xor i32 %v3_10295, 30
  %v3_10298 = icmp eq i32 %v2_10298, 0
  store i32 %v2_10298, i32* @eax, align 8
  br i1 %v3_10298, label %bb, label %dec_label_pc_102a1

bb:                                               ; preds = %dec_label_pc_10295
  %v1_1029f = call i32 @function_102a6()
  br label %dec_label_pc_102a1

dec_label_pc_102a1:                               ; preds = %bb, %dec_label_pc_10295
  %v2_1029f = phi i32 [ %v1_1029f, %bb ], [ %v2_10298, %dec_label_pc_10295 ]
  ret i32 %v2_1029f
}

define i32 @function_102a6() local_unnamed_addr {
dec_label_pc_102a6:
  %v0_102a7 = load i32, i32* @eax, align 8
  ret i32 %v0_102a7
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_102a8:
  store i32 %arg1, i32* @eax, align 8
  %v1_102c5 = call i32 @function_20506(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_102d4() local_unnamed_addr {
dec_label_pc_102d4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_102d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_102d4 = add i32 %v0_102d4, 862319685
  %v2_102d4 = inttoptr i32 %v1_102d4 to i32*
  %v3_102d4 = load i32, i32* %v2_102d4, align 4
  %v4_102d4 = add i32 %v3_102d4, -1
  store i32 %v4_102d4, i32* %v2_102d4, align 4
  %v0_102da = load i32, i32* %eax.global-to-local, align 8
  %v1_102da = add i32 %v0_102da, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_102da, i32* %eax.global-to-local, align 8
  ret i32 %v1_102da
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_102e8:
  %v10_102ff = icmp eq i32* %arg1, null
  br i1 %v10_102ff, label %dec_label_pc_10317, label %dec_label_pc_10305

dec_label_pc_10305:                               ; preds = %dec_label_pc_102e8
  br label %dec_label_pc_10317

dec_label_pc_10317:                               ; preds = %dec_label_pc_10305, %dec_label_pc_102e8
  store i32 0, i32* @eax, align 8
  %v1_10321 = call i32 @function_10328()
  ret i32 %v1_10321
}

define i32 @function_10328() local_unnamed_addr {
dec_label_pc_10328:
  %v0_10329 = load i32, i32* @eax, align 8
  ret i32 %v0_10329
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1032a:
  %v1_10344 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_10344, i32* @eax, align 8
  %v1_1034a = call i32 @function_204b5(i32 %v1_10344)
  store i32 0, i32* @eax, align 8
  %v1_10359 = call i32 @function_10360()
  ret i32 %v1_10359
}

define i32 @function_10360() local_unnamed_addr {
dec_label_pc_10360:
  %v0_10361 = load i32, i32* @eax, align 8
  ret i32 %v0_10361
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10362:
  %v1_1037c = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1037c, i32* @eax, align 8
  %v1_10382 = call i32 @function_20520(i32 %v1_1037c)
  %v1_10387 = icmp eq i32 %v1_10382, 0
  %v1_10389 = icmp eq i1 %v1_10387, false
  %v2_10389 = zext i1 %v1_10389 to i32
  %v4_10389 = and i32 %v1_10382, -256
  %v5_10389 = or i32 %v2_10389, %v4_10389
  store i32 %v5_10389, i32* @eax, align 8
  %v1_10396 = call i32 @function_1039d()
  ret i32 %v1_10396
}

define i32 @function_1039d() local_unnamed_addr {
dec_label_pc_1039d:
  %v0_1039e = load i32, i32* @eax, align 8
  ret i32 %v0_1039e
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_103a0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_103ba = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_103ba, i32* @eax, align 8
  %v2_103c8 = call i32 @function_204e1(i32 %v1_103ba, i32 -1)
  %v10_103cd = icmp eq i32 %v2_103c8, 1
  %v5_103d3 = icmp eq i1 %v10_103cd, false
  br i1 %v5_103d3, label %dec_label_pc_103f4, label %dec_label_pc_103d7

dec_label_pc_103d7:                               ; preds = %dec_label_pc_103a0
  %v2_103da = load i32, i32* %arg1, align 4
  %v1_103dc = add i32 %v2_103da, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_103dc = icmp ult i32 %v1_103dc, %v2_103da
  store i1 %v5_103dc, i1* @cf, align 1
  store i32 %tmp101, i32* @eax, align 8
  %v1_103ef = call i32 @function_207e0(i32 %tmp101)
  br label %dec_label_pc_103f4

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103d7, %dec_label_pc_103a0
  store i32 0, i32* @eax, align 8
  %v1_103fe = call i32 @function_10405()
  ret i32 %v1_103fe

; uselistorder directives
  uselistorder i32 %v2_103da, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 0, 2 }
}

define i32 @function_10405() local_unnamed_addr {
dec_label_pc_10405:
  %v0_10406 = load i32, i32* @eax, align 8
  ret i32 %v0_10406
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_add_refEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10408:
  %v1_10422 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 0, i32* @eax, align 8
  %v2_10437 = call i32 @function_1043e(i32 %v1_10422)
  ret i32 %v2_10437
}

define i32 @function_1043e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1043e:
  %v0_1043f = load i32, i32* @eax, align 8
  ret i32 %v0_1043f
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10440:
  %v10_1046d = icmp eq i32* %arg1, inttoptr (i32 sub (i32 0, i32 add (i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 -1)) to i32*)
  %v5_10473 = icmp eq i1 %v10_1046d, false
  br i1 %v5_10473, label %dec_label_pc_10489, label %dec_label_pc_10477

dec_label_pc_10477:                               ; preds = %dec_label_pc_10440
  br label %dec_label_pc_10489

dec_label_pc_10489:                               ; preds = %dec_label_pc_10477, %dec_label_pc_10440
  store i32 0, i32* @eax, align 8
  %v1_10493 = call i32 @function_1049a()
  ret i32 %v1_10493
}

define i32 @function_1049a() local_unnamed_addr {
dec_label_pc_1049a:
  %v0_1049b = load i32, i32* @eax, align 8
  ret i32 %v0_1049b
}

define i32 @_ZNK5boost6detail15sp_counted_base9use_countEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1049c:
  %v1_104b6 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_104b9 = inttoptr i32 %v1_104b6 to i32*
  %v2_104b9 = load i32, i32* %v1_104b9, align 4
  store i32 %v2_104b9, i32* @eax, align 8
  %v2_104c5 = call i32 @function_104cc(i32 %arg1)
  ret i32 %v2_104c5
}

define i32 @function_104cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_104cc:
  %v0_104cd = load i32, i32* @eax, align 8
  ret i32 %v0_104cd
}

define i32 @_ZN5boost6detail12shared_countC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_104ce:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_104f8 = call i32 @function_104ff(i32 %tmp99)
  ret i32 %v2_104f8
}

define i32 @function_104ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_104ff:
  %v0_10500 = load i32, i32* @eax, align 8
  ret i32 %v0_10500
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10502:
  %v2_1051c = load i32, i32* %arg1, align 4
  %v1_1051e = icmp eq i32 %v2_1051c, 0
  br i1 %v1_1051e, label %dec_label_pc_1052f, label %dec_label_pc_10522

dec_label_pc_10522:                               ; preds = %dec_label_pc_10502
  %v2_10525 = load i32, i32* %arg1, align 4
  %v1_1052a = call i32 @function_208a2(i32 %v2_10525)
  br label %dec_label_pc_1052f

dec_label_pc_1052f:                               ; preds = %dec_label_pc_10522, %dec_label_pc_10502
  store i32 0, i32* @eax, align 8
  %v1_10539 = call i32 @function_10540()
  ret i32 %v1_10539
}

define i32 @function_10540() local_unnamed_addr {
dec_label_pc_10540:
  %v0_10541 = load i32, i32* @eax, align 8
  ret i32 %v0_10541
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10542:
  %v1_10562 = inttoptr i32 %arg2 to i32*
  %v2_10562 = load i32, i32* %v1_10562, align 4
  store i32 %v2_10562, i32* %arg1, align 4
  %v1_1056e = icmp eq i32 %v2_10562, 0
  br i1 %v1_1056e, label %dec_label_pc_1057f, label %dec_label_pc_10572

dec_label_pc_10572:                               ; preds = %dec_label_pc_10542
  %v2_10575 = load i32, i32* %arg1, align 4
  store i32 %v2_10575, i32* @eax, align 8
  %v1_1057a = call i32 @function_2086c(i32 %v2_10575)
  br label %dec_label_pc_1057f

dec_label_pc_1057f:                               ; preds = %dec_label_pc_10572, %dec_label_pc_10542
  store i32 0, i32* @eax, align 8
  %v1_10589 = call i32 @function_10590()
  ret i32 %v1_10589
}

define i32 @function_10590() local_unnamed_addr {
dec_label_pc_10590:
  %v0_10591 = load i32, i32* @eax, align 8
  ret i32 %v0_10591
}

define i32 @_ZN5boost6detail12shared_count4swapERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10592:
  %v1_105b2 = inttoptr i32 %arg2 to i32*
  %v2_105b2 = load i32, i32* %v1_105b2, align 4
  %v2_105ba = load i32, i32* %arg1, align 4
  store i32 %v2_105ba, i32* %v1_105b2, align 4
  store i32 %v2_105b2, i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZNK5boost6detail12shared_count9use_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_105dc:
  %v2_105f6 = load i32, i32* %arg1, align 4
  %v1_105f8 = icmp eq i32 %v2_105f6, 0
  store i1 %v1_105f8, i1* @zf, align 1
  br i1 %v1_105f8, label %dec_label_pc_10610, label %dec_label_pc_105fc

dec_label_pc_105fc:                               ; preds = %dec_label_pc_105dc
  %v2_105ff = load i32, i32* %arg1, align 4
  store i32 %v2_105ff, i32* @eax, align 8
  %v1_10604 = call i32 @function_20a78(i32 %v2_105ff)
  br label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_105dc, %dec_label_pc_105fc
  %storemerge = phi i32 [ %v1_10604, %dec_label_pc_105fc ], [ 0, %dec_label_pc_105dc ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1061a = call i32 @function_10621()
  ret i32 %v1_1061a

; uselistorder directives
  uselistorder label %dec_label_pc_10610, { 1, 0 }
}

define i32 @function_10621() local_unnamed_addr {
dec_label_pc_10621:
  %v0_10622 = load i32, i32* @eax, align 8
  ret i32 %v0_10622
}

define i32 @_ZNK5boost6detail12shared_count6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10624:
  store i32 %arg1, i32* @eax, align 8
  %v1_10641 = call i32 @function_20c00(i32 %arg1)
  %v10_10646 = icmp eq i32 %v1_10641, 1
  %v1_10649 = zext i1 %v10_10646 to i32
  %v3_10649 = and i32 %v1_10641, -256
  %v4_10649 = or i32 %v1_10649, %v3_10649
  store i32 %v4_10649, i32* @eax, align 8
  %v1_10656 = call i32 @function_1065d()
  ret i32 %v1_10656

; uselistorder directives
  uselistorder i32 %v1_10641, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1065d() local_unnamed_addr {
dec_label_pc_1065d:
  %v0_1065e = load i32, i32* @eax, align 8
  ret i32 %v0_1065e
}

define i32 @_ZNK5boost6detail12shared_count5emptyEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10660:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1067a = load i32, i32* %arg1, align 4
  %v1_1067c = icmp eq i32 %v2_1067a, 0
  %v1_1067e = zext i1 %v1_1067c to i32
  %v3_1067e = and i32 %v2_1067a, -256
  %v4_1067e = or i32 %v1_1067e, %v3_1067e
  store i32 %v4_1067e, i32* @eax, align 8
  %v2_1068b = call i32 @function_10692(i32 %tmp100)
  ret i32 %v2_1068b
}

define i32 @function_10692(i32 %arg1) local_unnamed_addr {
dec_label_pc_10692:
  %v0_10693 = load i32, i32* @eax, align 8
  ret i32 %v0_10693
}

define i32 @_ZN5boost6detail10weak_countC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10694:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_106be = call i32 @function_106c5(i32 %tmp99)
  ret i32 %v2_106be
}

define i32 @function_106c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_106c5:
  %v0_106c6 = load i32, i32* @eax, align 8
  ret i32 %v0_106c6
}

define i32 @_ZN5boost6detail10weak_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_106c8:
  %v2_106e2 = load i32, i32* %arg1, align 4
  %v1_106e4 = icmp eq i32 %v2_106e2, 0
  br i1 %v1_106e4, label %dec_label_pc_106f5, label %dec_label_pc_106e8

dec_label_pc_106e8:                               ; preds = %dec_label_pc_106c8
  %v2_106eb = load i32, i32* %arg1, align 4
  %v1_106f0 = call i32 @function_20b08(i32 %v2_106eb)
  br label %dec_label_pc_106f5

dec_label_pc_106f5:                               ; preds = %dec_label_pc_106e8, %dec_label_pc_106c8
  store i32 0, i32* @eax, align 8
  %v1_106ff = call i32 @function_10706()
  ret i32 %v1_106ff
}

define i32 @function_10706() local_unnamed_addr {
dec_label_pc_10706:
  %v0_10707 = load i32, i32* @eax, align 8
  ret i32 %v0_10707
}

define i32 @_ZN5boost6detail10weak_countaSERKNS0_12shared_countE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10708:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_10728 = inttoptr i32 %arg2 to i32*
  %v2_10728 = load i32, i32* %v1_10728, align 4
  %v2_10730 = load i32, i32* %arg1, align 4
  %v15_10732 = icmp eq i32 %v2_10730, %v2_10728
  br i1 %v15_10732, label %dec_label_pc_10766, label %dec_label_pc_10737

dec_label_pc_10737:                               ; preds = %dec_label_pc_10708
  %v10_10737 = icmp eq i32 %v2_10728, 0
  br i1 %v10_10737, label %dec_label_pc_10748, label %dec_label_pc_1073d

dec_label_pc_1073d:                               ; preds = %dec_label_pc_10737
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_1073d, %dec_label_pc_10737
  %v2_1074b = load i32, i32* %arg1, align 4
  %v1_1074d = icmp eq i32 %v2_1074b, 0
  br i1 %v1_1074d, label %dec_label_pc_1075e, label %dec_label_pc_10751

dec_label_pc_10751:                               ; preds = %dec_label_pc_10748
  %v2_10754 = load i32, i32* %arg1, align 4
  %v1_10759 = call i32 @function_20b48(i32 %v2_10754)
  br label %dec_label_pc_1075e

dec_label_pc_1075e:                               ; preds = %dec_label_pc_10751, %dec_label_pc_10748
  store i32 %v2_10728, i32* %arg1, align 4
  br label %dec_label_pc_10766

dec_label_pc_10766:                               ; preds = %dec_label_pc_1075e, %dec_label_pc_10708
  store i32 %tmp103, i32* @eax, align 8
  %v1_10773 = call i32 @function_1077a()
  ret i32 %v1_10773

; uselistorder directives
  uselistorder i32 %v2_10728, { 1, 2, 0 }
}

define i32 @function_1077a() local_unnamed_addr {
dec_label_pc_1077a:
  %v0_1077b = load i32, i32* @eax, align 8
  ret i32 %v0_1077b
}

define i32 @_ZNK5boost6detail10weak_count9use_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1077c:
  %v2_10796 = load i32, i32* %arg1, align 4
  %v1_10798 = icmp eq i32 %v2_10796, 0
  br i1 %v1_10798, label %dec_label_pc_107b0, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_1077c
  %v2_1079f = load i32, i32* %arg1, align 4
  store i32 %v2_1079f, i32* @eax, align 8
  %v1_107a4 = call i32 @function_20c18(i32 %v2_1079f)
  br label %dec_label_pc_107b0

dec_label_pc_107b0:                               ; preds = %dec_label_pc_1077c, %dec_label_pc_1079c
  %storemerge = phi i32 [ %v1_107a4, %dec_label_pc_1079c ], [ 0, %dec_label_pc_1077c ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_107ba = call i32 @function_107c1()
  ret i32 %v1_107ba

; uselistorder directives
  uselistorder label %dec_label_pc_107b0, { 1, 0 }
}

define i32 @function_107c1() local_unnamed_addr {
dec_label_pc_107c1:
  %v0_107c2 = load i32, i32* @eax, align 8
  ret i32 %v0_107c2
}

define i32 @_ZN5boost6detail12shared_countC1ERKNS0_10weak_countENS0_14sp_nothrow_tagE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_107c4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_107c4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_107eb = inttoptr i32 %arg2 to i32*
  %v2_107eb = load i32, i32* %v1_107eb, align 4
  store i32 %v2_107eb, i32* %arg1, align 4
  %v1_107f7 = icmp eq i32 %v2_107eb, 0
  br i1 %v1_107f7, label %dec_label_pc_1081b.thread, label %dec_label_pc_107fb

dec_label_pc_107fb:                               ; preds = %dec_label_pc_107c4
  %v2_107fe = load i32, i32* %arg1, align 4
  %v1_10808 = xor i32 %v2_107fe, 1
  %v4_10808 = trunc i32 %v1_10808 to i8
  %v5_1080b = icmp eq i8 %v4_10808, 0
  br i1 %v5_1080b, label %dec_label_pc_1081b.thread, label %dec_label_pc_1081f

dec_label_pc_1081b.thread:                        ; preds = %dec_label_pc_107c4, %dec_label_pc_107fb
  br label %dec_label_pc_10828

dec_label_pc_1081f:                               ; preds = %dec_label_pc_107fb
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_10828

dec_label_pc_10828:                               ; preds = %dec_label_pc_1081b.thread, %dec_label_pc_1081f
  store i32 %v0_107c4, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_10828, { 1, 0 }
  uselistorder label %dec_label_pc_1081b.thread, { 1, 0 }
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_1083b:
  store i32 0, i32* @eax, align 8
  %v2_10856 = call i32 @function_1085d(i32 30)
  ret i32 %v2_10856
}

define i32 @function_1085d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1085d:
  %v0_1085e = load i32, i32* @eax, align 8
  ret i32 %v0_1085e
}

define i32 @_ZN5boost12noncopyable_11noncopyableC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10860:
  store i32 0, i32* @eax, align 8
  %v2_10881 = call i32 @function_10888(i32 %arg1)
  ret i32 %v2_10881
}

define i32 @function_10888(i32 %arg1) local_unnamed_addr {
dec_label_pc_10888:
  %v0_10889 = load i32, i32* @eax, align 8
  ret i32 %v0_10889
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1088a:
  store i32 0, i32* @eax, align 8
  %v2_108ab = call i32 @function_108b2(i32 %arg1)
  ret i32 %v2_108ab
}

define i32 @function_108b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_108b2:
  %v0_108b3 = load i32, i32* @eax, align 8
  ret i32 %v0_108b3
}

define i32 @_ZNSt14numeric_limitsIyE3maxEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108b4:
  store i32 -1, i32* @eax, align 8
  %v2_108d9 = call i32 @function_108e0(i32 30)
  ret i32 %v2_108d9
}

define i32 @function_108e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_108e0:
  %v0_108e1 = load i32, i32* @eax, align 8
  ret i32 %v0_108e1
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC1EP15pthread_mutex_t(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108e2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1090a = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1090a = inttoptr i32 %v1_1090a to i8*
  store i8 1, i8* %v2_1090a, align 1
  %v2_10911 = load i32, i32* %arg1, align 4
  ret i32 %v2_10911
}

define i32 @function_10942() local_unnamed_addr {
dec_label_pc_10942:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10942 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10942 = add i32 %v0_10942, 862319685
  %v2_10942 = inttoptr i32 %v1_10942 to i32*
  %v3_10942 = load i32, i32* %v2_10942, align 4
  %v4_10942 = add i32 %v3_10942, -1
  store i32 %v4_10942, i32* %v2_10942, align 4
  %v0_10948 = load i32, i32* %eax.global-to-local, align 8
  %v1_10948 = add i32 %v0_10948, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_10948, i32* %eax.global-to-local, align 8
  ret i32 %v1_10948
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lock6unlockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10956:
  %v2_10970 = load i32, i32* %arg1, align 4
  ret i32 %v2_10970
}

define i32 @function_109b9() local_unnamed_addr {
dec_label_pc_109b9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_109b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_109b9 = add i32 %v0_109b9, -1
  store i32 %v1_109b9, i32* %ecx.global-to-local, align 4
  %v0_109bb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_109bb
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_109bc:
  %v1_109d6 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_109d6 = inttoptr i32 %v1_109d6 to i8*
  %v3_109d6 = load i8, i8* %v2_109d6, align 1
  %v5_109da = icmp eq i8 %v3_109d6, 0
  br i1 %v5_109da, label %dec_label_pc_109e9, label %dec_label_pc_109de

dec_label_pc_109de:                               ; preds = %dec_label_pc_109bc
  %v1_109e4 = call i32 @function_21312(i32 %arg1)
  br label %dec_label_pc_109e9

dec_label_pc_109e9:                               ; preds = %dec_label_pc_109de, %dec_label_pc_109bc
  store i32 0, i32* @eax, align 8
  %v1_109f3 = call i32 @function_109fa()
  ret i32 %v1_109f3
}

define i32 @function_109fa() local_unnamed_addr {
dec_label_pc_109fa:
  %v0_109fb = load i32, i32* @eax, align 8
  ret i32 %v0_109fb
}

define i32 @_ZN5boost7pthread27pthread_mutex_scoped_unlockC1EP15pthread_mutex_t(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_109fc:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %arg2
}

define i32 @function_10a66() local_unnamed_addr {
dec_label_pc_10a66:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10a66 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10a66 = add i32 %v0_10a66, -1
  store i32 %v1_10a66, i32* %ecx.global-to-local, align 4
  %v0_10a68 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10a68
}

define i32 @_ZN5boost7pthread27pthread_mutex_scoped_unlockD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10a6a:
  %v2_10a84 = load i32, i32* %arg1, align 4
  ret i32 %v2_10a84
}

define i32 @function_10ac6() local_unnamed_addr {
dec_label_pc_10ac6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10ac6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10ac6 = add i32 %v0_10ac6, -1
  store i32 %v1_10ac6, i32* %ecx.global-to-local, align 4
  %v0_10ac8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10ac8
}

define i32 @_ZN5boost5mutexC1Ev() local_unnamed_addr {
dec_label_pc_10aca:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp3
}

define i32 @function_10b15() local_unnamed_addr {
dec_label_pc_10b15:
  %eax.global-to-local = alloca i32, align 4
  %v0_10b15 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10b15
}

define i32 @function_10b3b() local_unnamed_addr {
dec_label_pc_10b3b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10b3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_10b3b = add i32 %v0_10b3b, 1566258372
  %v2_10b3b = inttoptr i32 %v1_10b3b to i32*
  %v3_10b3b = load i32, i32* %v2_10b3b, align 4
  %v4_10b3b = add i32 %v3_10b3b, 1
  store i32 %v4_10b3b, i32* %v2_10b3b, align 4
  %v0_10b41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10b41
}

define i32 @_ZN5boost5mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b42:
  ret i32 %arg1
}

define i32 @function_10b9c() local_unnamed_addr {
dec_label_pc_10b9c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10b9c = load i32, i32* %ecx.global-to-local, align 4
  %v1_10b9c = add i32 %v0_10b9c, -1
  store i32 %v1_10b9c, i32* %ecx.global-to-local, align 4
  %v0_10b9e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10b9e
}

define i32 @_ZN5boost5mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ba0:
  ret i32 %arg1
}

define i32 @function_10bea() local_unnamed_addr {
dec_label_pc_10bea:
  %eax.global-to-local = alloca i32, align 4
  %v0_10bea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10bea
}

define i32 @function_10c10() local_unnamed_addr {
dec_label_pc_10c10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10c10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c10 = add i32 %v0_10c10, 1566258372
  %v2_10c10 = inttoptr i32 %v1_10c10 to i32*
  %v3_10c10 = load i32, i32* %v2_10c10, align 4
  %v4_10c10 = add i32 %v3_10c10, 1
  store i32 %v4_10c10, i32* %v2_10c10, align 4
  %v0_10c16 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10c16
}

define i32 @_ZN5boost5mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c18:
  ret i32 %arg1
}

define i32 @function_10c61() local_unnamed_addr {
dec_label_pc_10c61:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10c61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c61 = add i32 %v0_10c61, 862319685
  %v2_10c61 = inttoptr i32 %v1_10c61 to i32*
  %v3_10c61 = load i32, i32* %v2_10c61, align 4
  %v4_10c61 = add i32 %v3_10c61, -1
  store i32 %v4_10c61, i32* %v2_10c61, align 4
  %v0_10c67 = load i32, i32* %eax.global-to-local, align 8
  %v1_10c67 = add i32 %v0_10c67, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_10c67, i32* %eax.global-to-local, align 8
  ret i32 %v1_10c67
}

define i32 @_ZN5boost18condition_variableC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c76:
  ret i32 %arg1
}

define i32 @function_10d29() local_unnamed_addr {
dec_label_pc_10d29:
  %eax.global-to-local = alloca i32, align 4
  %v0_10d29 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10d29
}

define i32 @function_10d3e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d3e:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10d3e = load i32, i32* %ecx.global-to-local, align 4
  %v1_10d3e = add i32 %v0_10d3e, -465203773
  %v2_10d3e = inttoptr i32 %v1_10d3e to i32*
  %v3_10d3e = load i32, i32* %v2_10d3e, align 4
  %v4_10d3e = add i32 %v3_10d3e, -1
  store i32 %v4_10d3e, i32* %v2_10d3e, align 4
  %v0_10d44 = load i32, i32* @eax, align 8
  %v1_10d47 = call i32 @function_1f36c(i32 %v0_10d44)
  %v0_10d56 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10d56 = add i32 %v0_10d56, -12
  %v2_10d56 = inttoptr i32 %v1_10d56 to i32*
  %v3_10d56 = load i32, i32* %v2_10d56, align 4
  %v2_10d59 = xor i32 %v3_10d56, 30
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  ret i32 %v2_10d59
}

define i32 @_ZN5boost18condition_variableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d6e:
  %v1_10d90 = icmp eq i32 %arg1, 0
  br i1 %v1_10d90, label %dec_label_pc_10db8, label %dec_label_pc_10d94

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d6e
  br label %dec_label_pc_10db8

dec_label_pc_10db8:                               ; preds = %dec_label_pc_10d94, %dec_label_pc_10d6e
  %v1_10dbb = add i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v10_10dbb = icmp eq i32 %v1_10dbb, 0
  br i1 %v10_10dbb, label %bb, label %dec_label_pc_10dca

bb:                                               ; preds = %dec_label_pc_10db8
  %v3_10dc8 = call i32 @function_10dee(i32 0)
  br label %dec_label_pc_10dca

dec_label_pc_10dca:                               ; preds = %bb, %dec_label_pc_10db8
  %v3_10de2 = phi i32 [ %v3_10dc8, %bb ], [ %v1_10dbb, %dec_label_pc_10db8 ]
  ret i32 %v3_10de2
}

define i32 @function_10dee(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dee:
  %v0_10dee = load i32, i32* @ebp, align 4
  %v1_10dee = add i32 %v0_10dee, -12
  %v2_10dee = inttoptr i32 %v1_10dee to i32*
  %v3_10dee = load i32, i32* %v2_10dee, align 4
  %v2_10df1 = xor i32 %v3_10dee, 30
  ret i32 %v2_10df1
}

define i32 @_ZN5boost10shared_ptrINS_6detail16thread_data_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e02:
  %v1_10e1c = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_10e1c, i32* @eax, align 8
  %v1_10e22 = call i32 @function_21304(i32 %v1_10e1c)
  ret i32 0
}

define i32 @_ZN5boost6detail16thread_data_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e3a:
  %v1_10e55 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_10e5b = call i32 @function_24740(i32 %v1_10e55)
  ret i32 %arg1
}

define i32 @function_10f1b() local_unnamed_addr {
dec_label_pc_10f1b:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f1b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_10f1b, i32* @ebx, align 4
  %v0_10f1d = load i32, i32* @ebp, align 4
  %v1_10f1d = add i32 %v0_10f1d, -28
  %v2_10f1d = inttoptr i32 %v1_10f1d to i32*
  %v3_10f1d = load i32, i32* %v2_10f1d, align 4
  %v1_10f20 = add i32 %v3_10f1d, 144
  store i32 %v1_10f20, i32* %eax.global-to-local, align 8
  %v1_10f2d = call i32 @function_10f31(i32 %v1_10f20)
  store i32 %v1_10f2d, i32* %eax.global-to-local, align 8
  ret i32 %v1_10f2d
}

define i32 @function_10f2f() local_unnamed_addr {
dec_label_pc_10f2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f2f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f2f
}

define i32 @function_10f31(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f31:
  %v0_10f31 = load i32, i32* @ebp, align 4
  %v1_10f31 = add i32 %v0_10f31, -28
  %v2_10f31 = inttoptr i32 %v1_10f31 to i32*
  %v3_10f31 = load i32, i32* %v2_10f31, align 4
  %v1_10f34 = add i32 %v3_10f31, 120
  %v1_10f3f = call i32 @function_10f43(i32 %v1_10f34)
  ret i32 %v1_10f3f
}

define i32 @function_10f41() local_unnamed_addr {
dec_label_pc_10f41:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f41
}

define i32 @function_10f43(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f43:
  %v0_10f43 = load i32, i32* @ebp, align 4
  %v1_10f43 = add i32 %v0_10f43, -28
  %v2_10f43 = inttoptr i32 %v1_10f43 to i32*
  %v3_10f43 = load i32, i32* %v2_10f43, align 4
  %v1_10f46 = add i32 %v3_10f43, 48
  %v1_10f51 = call i32 @function_10f55(i32 %v1_10f46)
  ret i32 %v1_10f51
}

define i32 @function_10f53() local_unnamed_addr {
dec_label_pc_10f53:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f53 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f53
}

define i32 @function_10f55(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f55:
  %v0_10f55 = load i32, i32* @ebp, align 4
  %v1_10f55 = add i32 %v0_10f55, -28
  %v2_10f55 = inttoptr i32 %v1_10f55 to i32*
  %v3_10f55 = load i32, i32* %v2_10f55, align 4
  %v1_10f58 = add i32 %v3_10f55, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_10f63 = call i32 @function_10f67(i32 %v1_10f58)
  ret i32 %v2_10f63
}

define i32 @function_10f65() local_unnamed_addr {
dec_label_pc_10f65:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f65 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f65
}

define i32 @function_10f67(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f67:
  %v0_10f67 = load i32, i32* @ebp, align 4
  %v1_10f67 = add i32 %v0_10f67, -28
  %v2_10f67 = inttoptr i32 %v1_10f67 to i32*
  %v3_10f67 = load i32, i32* %v2_10f67, align 4
  %v1_10f6a = add i32 %v3_10f67, ptrtoint (i32* @global_var_c.2390 to i32)
  %v1_10f75 = call i32 @function_10f79(i32 %v1_10f6a)
  ret i32 %v1_10f75
}

define i32 @function_10f77() local_unnamed_addr {
dec_label_pc_10f77:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f77 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f77
}

define i32 @function_10f79(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f79:
  %v0_10f87 = load i32, i32* @ebx, align 4
  ret i32 %v0_10f87
}

define i32 @function_10f91() local_unnamed_addr {
dec_label_pc_10f91:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f91 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f91
}

define i32 @function_10f96(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f96:
  %eax.global-to-local = alloca i32, align 4
  %v0_10f9b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f9b
}

define i32 @_ZN5boost3_bi5list0C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f9c:
  ret i32 0
}

define i32 @_ZN5boost9call_onceEPFvvERNS_9once_flagE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10fc6:
  %v2_10ff0 = call i32 @function_24bba(i32 %arg2, i32 %arg1)
  ret i32 0
}

define i32 @_ZN5boost15recursive_mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11008:
  %stack_var_-40 = alloca i32, align 4
  %v10_11036 = icmp eq i32 %arg1, 0
  br i1 %v10_11036, label %dec_label_pc_11052, label %dec_label_pc_1103c

dec_label_pc_1103c:                               ; preds = %dec_label_pc_11008
  %v2_1103c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1103c, i32* @eax, align 8
  %v3_11042 = call i32 @function_1f6c0(i32 %v2_1103c, i32 0)
  br label %dec_label_pc_11052

dec_label_pc_11052:                               ; preds = %dec_label_pc_1103c, %dec_label_pc_11008
  %v10_11055 = icmp eq i32 %arg1, sub (i32 0, i32 ptrtoint (i8** @global_var_18.2447 to i32))
  br i1 %v10_11055, label %bb, label %dec_label_pc_11071

bb:                                               ; preds = %dec_label_pc_11052
  %v4_1106f = call i32 @function_110ba(i32 0, i32 0)
  br label %dec_label_pc_11071

dec_label_pc_11071:                               ; preds = %bb, %dec_label_pc_11052
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_110ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_110ba:
  %v0_110ba = load i32, i32* @ebp, align 4
  %v1_110ba = add i32 %v0_110ba, -44
  %v2_110ba = inttoptr i32 %v1_110ba to i32*
  %v3_110ba = load i32, i32* %v2_110ba, align 4
  %v1_110bd = add i32 %v3_110ba, 72
  %v2_110bd = inttoptr i32 %v1_110bd to i8*
  store i8 0, i8* %v2_110bd, align 1
  %v0_110c1 = load i32, i32* @ebp, align 4
  %v1_110c1 = add i32 %v0_110c1, -44
  %v2_110c1 = inttoptr i32 %v1_110c1 to i32*
  %v3_110c1 = load i32, i32* %v2_110c1, align 4
  %v1_110c4 = add i32 %v3_110c1, 80
  %v2_110c4 = inttoptr i32 %v1_110c4 to i32*
  store i32 0, i32* %v2_110c4, align 4
  %v0_110cb = load i32, i32* @ebp, align 4
  %v1_110cb = add i32 %v0_110cb, -12
  %v2_110cb = inttoptr i32 %v1_110cb to i32*
  %v3_110cb = load i32, i32* %v2_110cb, align 4
  %v2_110ce = xor i32 %v3_110cb, 30
  ret i32 %v2_110ce
}

define i32 @_ZN5boost15recursive_mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11112:
  %v1_11134 = icmp eq i32 %arg1, 0
  br i1 %v1_11134, label %bb, label %dec_label_pc_11138

bb:                                               ; preds = %dec_label_pc_11112
  %v3_11136 = call i32 @function_1115c(i32 0)
  br label %dec_label_pc_11138

dec_label_pc_11138:                               ; preds = %bb, %dec_label_pc_11112
  %v3_11150 = phi i32 [ %v3_11136, %bb ], [ %arg1, %dec_label_pc_11112 ]
  ret i32 %v3_11150
}

define i32 @function_1115c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1115c:
  %v0_1115c = load i32, i32* @ebp, align 4
  %v1_1115c = add i32 %v0_1115c, -28
  %v2_1115c = inttoptr i32 %v1_1115c to i32*
  %v3_1115c = load i32, i32* %v2_1115c, align 4
  %v1_1115f = add i32 %v3_1115c, ptrtoint (i8** @global_var_18.2447 to i32)
  ret i32 %v1_1115f
}

define i32 @function_11169() local_unnamed_addr {
dec_label_pc_11169:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11169 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11169 = add i32 %v0_11169, -953912128
  %v2_11169 = inttoptr i32 %v1_11169 to i32*
  %v3_11169 = load i32, i32* %v2_11169, align 4
  %v4_11169 = add i32 %v3_11169, 1
  store i32 %v4_11169, i32* %v2_11169, align 4
  %v0_11170 = load i32, i32* %eax.global-to-local, align 8
  %v11_11170 = and i32 %v0_11170, or (i32 zext (i8 ptrtoint (i32* @global_var_c.2390 to i8) to i32), i32 -256)
  store i32 %v11_11170, i32* %eax.global-to-local, align 8
  %v0_11192 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11192 = add i32 %v0_11192, -12
  %v2_11192 = inttoptr i32 %v1_11192 to i32*
  %v3_11192 = load i32, i32* %v2_11192, align 4
  %v2_11195 = xor i32 %v3_11192, 30
  store i32 %v2_11195, i32* %eax.global-to-local, align 8
  ret i32 %v2_11195
}

define i32 @_ZN5boost15recursive_mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_111a6:
  %stack_var_-24 = alloca i32, align 4
  %v2_111c5 = ptrtoint i32* %stack_var_-24 to i32
  %v2_111cb = call i32 @function_21a88(i32 %v2_111c5, i32 %arg1)
  %v1_111d3 = add i32 %arg1, 72
  %v2_111d3 = inttoptr i32 %v1_111d3 to i8*
  %v3_111d3 = load i8, i8* %v2_111d3, align 1
  %v4_111d3 = zext i8 %v3_111d3 to i32
  %v5_111d7 = icmp eq i8 %v3_111d3, 0
  br i1 %v5_111d7, label %bb, label %dec_label_pc_111db

bb:                                               ; preds = %dec_label_pc_111a6
  %v1_111d9 = call i32 @function_111fd()
  br label %dec_label_pc_111db

dec_label_pc_111db:                               ; preds = %bb, %dec_label_pc_111a6
  %v3_111ea = phi i32 [ %v1_111d9, %bb ], [ %v4_111d3, %dec_label_pc_111a6 ]
  ret i32 %v3_111ea
}

define i32 @function_111f1() local_unnamed_addr {
dec_label_pc_111f1:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_111f1 = add i32 %tmp91, -1207470912
  %v2_111f1 = inttoptr i32 %v1_111f1 to i32*
  %v3_111f1 = load i32, i32* %v2_111f1, align 4
  %v4_111f1 = add i32 %v3_111f1, 1
  store i32 %v4_111f1, i32* %v2_111f1, align 4
  %v2_111f7 = load i32, i32* %eax.global-to-local, align 8
  %v4_111f7 = mul i32 %v2_111f7, 2
  %v21_111f7 = inttoptr i32 %v2_111f7 to i32*
  store i32 %v4_111f7, i32* %v21_111f7, align 4
  %v2_111f9 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_111f9 = load i32, i32* %eax.global-to-local, align 8
  %v4_111f9 = trunc i32 %v3_111f9 to i8
  %v5_111f9 = add i8 %v4_111f9, %v2_111f9
  %v21_111f9 = inttoptr i32 %v3_111f9 to i8*
  store i8 %v5_111f9, i8* %v21_111f9, align 1
  %v0_111fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_111fb

; uselistorder directives
  uselistorder i32 %v2_111f7, { 1, 0 }
}

define i32 @function_111fd() local_unnamed_addr {
dec_label_pc_111fd:
  %v3_11204 = call i32 @function_11254(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v0_11206 = load i32, i32* @ebp, align 4
  %v1_11206 = add i32 %v0_11206, -28
  %v2_11206 = inttoptr i32 %v1_11206 to i32*
  %v3_11206 = load i32, i32* %v2_11206, align 4
  %v1_11209 = add i32 %v3_11206, 80
  %v2_11209 = inttoptr i32 %v1_11209 to i32*
  %v3_11209 = load i32, i32* %v2_11209, align 4
  %v1_1120c = add i32 %v3_11209, 1
  store i32 %v1_1120c, i32* @edx, align 8
  %v3_1120f = load i32, i32* %v2_11206, align 4
  %v2_11212 = add i32 %v3_1120f, 80
  %v3_11212 = inttoptr i32 %v2_11212 to i32*
  store i32 %v1_1120c, i32* %v3_11212, align 4
  %v0_11215 = call i32 @function_11280()
  ret i32 %v0_11215
}

define i32 @function_11217() local_unnamed_addr {
dec_label_pc_11217:
  %v0_11217 = load i32, i32* @ebp, align 4
  %v1_11217 = add i32 %v0_11217, -28
  %v2_11217 = inttoptr i32 %v1_11217 to i32*
  %v3_11217 = load i32, i32* %v2_11217, align 4
  %v1_1122c = icmp eq i32 %v3_11217, 0
  br i1 %v1_1122c, label %bb, label %dec_label_pc_11230

bb:                                               ; preds = %dec_label_pc_11217
  %v1_1121d = add i32 %v3_11217, ptrtoint (i8** @global_var_18.2447 to i32)
  %v5_1122e = call i32 @function_11254(i32 %v1_1121d, i32 0)
  br label %dec_label_pc_11230

dec_label_pc_11230:                               ; preds = %bb, %dec_label_pc_11217
  %v3_11248 = phi i32 [ %v5_1122e, %bb ], [ %v3_11217, %dec_label_pc_11217 ]
  ret i32 %v3_11248

; uselistorder directives
  uselistorder i32 %v3_11217, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_11254, { 1, 0 }
}

define i32 @function_11254(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11254:
  %eax.global-to-local = alloca i32, align 4
  %v0_11254 = load i32, i32* @ebp, align 4
  %v1_11254 = add i32 %v0_11254, -28
  %v2_11254 = inttoptr i32 %v1_11254 to i32*
  %v3_11254 = load i32, i32* %v2_11254, align 4
  store i32 %v3_11254, i32* %eax.global-to-local, align 8
  %v1_11257 = add i32 %v3_11254, 72
  %v2_11257 = inttoptr i32 %v1_11257 to i8*
  %v3_11257 = load i8, i8* %v2_11257, align 1
  %v4_11257 = zext i8 %v3_11257 to i32
  store i32 %v4_11257, i32* %eax.global-to-local, align 8
  %v5_1125b = icmp eq i8 %v3_11257, 0
  %v1_1125d = icmp eq i1 %v5_1125b, false
  br i1 %v1_1125d, label %bb, label %dec_label_pc_1125f

bb:                                               ; preds = %dec_label_pc_11254
  %v2_1125d = call i32 @function_11217()
  store i32 %v2_1125d, i32* %eax.global-to-local, align 8
  %v0_1125f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1125f

dec_label_pc_1125f:                               ; preds = %bb, %dec_label_pc_11254
  %v0_1125f = phi i32 [ %v0_1125f.pre, %bb ], [ %v0_11254, %dec_label_pc_11254 ]
  %v1_1125f = add i32 %v0_1125f, -28
  %v2_1125f = inttoptr i32 %v1_1125f to i32*
  %v3_1125f = load i32, i32* %v2_1125f, align 4
  store i32 %v3_1125f, i32* %eax.global-to-local, align 8
  %v1_11262 = add i32 %v3_1125f, 72
  %v2_11262 = inttoptr i32 %v1_11262 to i8*
  store i8 1, i8* %v2_11262, align 1
  %v0_11266 = load i32, i32* @ebp, align 4
  %v1_11266 = add i32 %v0_11266, -28
  %v2_11266 = inttoptr i32 %v1_11266 to i32*
  %v3_11266 = load i32, i32* %v2_11266, align 4
  store i32 %v3_11266, i32* %eax.global-to-local, align 8
  %v1_11269 = add i32 %v3_11266, 80
  %v2_11269 = inttoptr i32 %v1_11269 to i32*
  %v3_11269 = load i32, i32* %v2_11269, align 4
  store i32 %v3_11269, i32* %eax.global-to-local, align 8
  %v1_1126c = add i32 %v3_11269, 1
  %v3_1126f = load i32, i32* %v2_11266, align 4
  store i32 %v3_1126f, i32* %eax.global-to-local, align 8
  %v2_11272 = add i32 %v3_1126f, 80
  %v3_11272 = inttoptr i32 %v2_11272 to i32*
  store i32 %v1_1126c, i32* %v3_11272, align 4
  %v4_11272 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_11272

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 7 }
}

define i32 @function_11280() local_unnamed_addr {
dec_label_pc_11280:
  %v0_11280 = load i32, i32* @ebp, align 4
  %v1_11280 = add i32 %v0_11280, -20
  store i32 %v1_11280, i32* @eax, align 8
  %v1_11286 = call i32 @function_21b62(i32 %v1_11280)
  %v0_1128b = load i32, i32* @ebp, align 4
  %v1_1128b = add i32 %v0_1128b, -12
  %v2_1128b = inttoptr i32 %v1_1128b to i32*
  %v3_1128b = load i32, i32* %v2_1128b, align 4
  %v2_1128e = xor i32 %v3_1128b, 30
  %v3_1128e = icmp eq i32 %v2_1128e, 0
  store i32 %v2_1128e, i32* @eax, align 8
  br i1 %v3_1128e, label %bb, label %dec_label_pc_112b0

bb:                                               ; preds = %dec_label_pc_11280
  %v1_11295 = call i32 @function_112b5()
  br label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %dec_label_pc_11280, %bb
  %v0_11297 = phi i32 [ %v2_1128e, %dec_label_pc_11280 ], [ %v1_11295, %bb ]
  ret i32 %v0_11297

; uselistorder directives
  uselistorder label %dec_label_pc_112b0, { 1, 0 }
}

define i32 @function_11299() local_unnamed_addr {
dec_label_pc_11299:
  %eax.global-to-local = alloca i32, align 4
  %v0_11299 = load i32, i32* %eax.global-to-local, align 8
  %v0_1129b = load i32, i32* @ebp, align 4
  %v1_1129b = add i32 %v0_1129b, -20
  store i32 %v1_1129b, i32* @eax, align 8
  %v1_112a1 = call i32 @function_21b62(i32 %v1_1129b)
  store i32 %v0_11299, i32* %eax.global-to-local, align 8
  ret i32 %v0_11299

; uselistorder directives
  uselistorder i32 %v0_11299, { 1, 0 }
  uselistorder i32 (i32)* @function_21b62, { 1, 0 }
}

define i32 @function_112b5() local_unnamed_addr {
dec_label_pc_112b5:
  %v0_112ba = load i32, i32* @eax, align 8
  ret i32 %v0_112ba
}

define i32 @_ZN5boost15recursive_mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_112bc:
  %stack_var_-24 = alloca i32, align 4
  %v2_112da = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_112da, i32* @eax, align 8
  %v3_112e0 = call i32 @function_21b9e(i32 %v2_112da, i32 %arg1)
  %v1_112e8 = add i32 %arg1, 80
  %v2_112e8 = inttoptr i32 %v1_112e8 to i32*
  %v3_112e8 = load i32, i32* %v2_112e8, align 4
  %v1_112eb = add i32 %v3_112e8, -1
  store i32 %v1_112eb, i32* %v2_112e8, align 4
  %v1_112fa = icmp eq i32 %v1_112eb, 0
  %v5_112ff = icmp eq i1 %v1_112fa, false
  br i1 %v5_112ff, label %dec_label_pc_1130a, label %dec_label_pc_11303

dec_label_pc_11303:                               ; preds = %dec_label_pc_112bc
  %v1_11306 = add i32 %arg1, 72
  %v2_11306 = inttoptr i32 %v1_11306 to i8*
  store i8 0, i8* %v2_11306, align 1
  br label %dec_label_pc_1130a

dec_label_pc_1130a:                               ; preds = %dec_label_pc_11303, %dec_label_pc_112bc
  %v1_1130d = add i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  ret i32 %v1_1130d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
}

define i32 @function_11317() local_unnamed_addr {
dec_label_pc_11317:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11317 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11317 = add i32 %v0_11317, -953912128
  %v2_11317 = inttoptr i32 %v1_11317 to i32*
  %v3_11317 = load i32, i32* %v2_11317, align 4
  %v4_11317 = add i32 %v3_11317, 1
  store i32 %v4_11317, i32* %v2_11317, align 4
  %v0_1131e = load i32, i32* %eax.global-to-local, align 8
  %v1_1131e = trunc i32 %v0_1131e to i8
  %v2_1131e = and i8 %v1_1131e, ptrtoint (i32* @global_var_c.2390 to i8)
  %v8_1131e = zext i8 %v2_1131e to i32
  %v10_1131e = and i32 %v0_1131e, -256
  %v11_1131e = or i32 %v8_1131e, %v10_1131e
  store i32 %v11_1131e, i32* %eax.global-to-local, align 8
  %v1_11322 = inttoptr i32 %v11_1131e to i8*
  %v2_11322 = load i8, i8* %v1_11322, align 4
  %v5_11322 = add i8 %v2_11322, %v2_1131e
  store i8 %v5_11322, i8* %v1_11322, align 4
  %v0_11340 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11340 = add i32 %v0_11340, -20
  store i32 %v1_11340, i32* %eax.global-to-local, align 8
  %v1_1134b = add i32 %v0_11340, -12
  %v2_1134b = inttoptr i32 %v1_1134b to i32*
  %v3_1134b = load i32, i32* %v2_1134b, align 4
  %v2_1134e = xor i32 %v3_1134b, 30
  store i32 %v2_1134e, i32* %eax.global-to-local, align 8
  ret i32 %v2_1134e
}

define i32 @_ZN5boost15recursive_mutex8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1135e:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_1137d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1137d, i32* @eax, align 8
  store i32 %v2_1137d, i32* %stack_var_-60, align 4
  %v2_11383 = call i32 @function_21c40(i32 %v2_1137d, i32 %arg1)
  %v1_1138b = add i32 %arg1, 72
  %v2_1138b = inttoptr i32 %v1_1138b to i8*
  %v3_1138b = load i8, i8* %v2_1138b, align 1
  %v4_1138b = zext i8 %v3_1138b to i32
  %v5_1138f = icmp eq i8 %v3_1138b, 0
  br i1 %v5_1138f, label %bb, label %dec_label_pc_11393

bb:                                               ; preds = %dec_label_pc_1135e
  %v1_11391 = load i32, i32* %stack_var_-60, align 4
  %v3_11391 = call i32 @function_113b5(i32 %v1_11391, i32 %arg1)
  br label %dec_label_pc_11393

dec_label_pc_11393:                               ; preds = %bb, %dec_label_pc_1135e
  %v4_11391 = phi i32 [ %v3_11391, %bb ], [ %v4_1138b, %dec_label_pc_1135e ]
  ret i32 %v4_11391

; uselistorder directives
  uselistorder i32 %v2_1137d, { 1, 0, 2 }
}

define i32 @function_11397() local_unnamed_addr {
dec_label_pc_11397:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11397 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11397 = add i32 %v0_11397, 1384899669
  %v2_11397 = inttoptr i32 %v1_11397 to i32*
  %v3_11397 = load i32, i32* %v2_11397, align 4
  %v4_11397 = add i32 %v3_11397, -1
  store i32 %v4_11397, i32* %v2_11397, align 4
  %v0_1139e = load i32, i32* %eax.global-to-local, align 8
  %v1_113aa = icmp eq i32 %v0_1139e, 0
  %v1_113ac = icmp eq i1 %v1_113aa, false
  br i1 %v1_113ac, label %bb, label %dec_label_pc_113ae

bb:                                               ; preds = %dec_label_pc_11397
  %v0_113a2 = load i32, i32* %edx.global-to-local, align 8
  %v4_113ac = call i32 @function_113b5(i32 %v0_113a2, i32 %v0_1139e)
  store i32 %v4_113ac, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_113ae

dec_label_pc_113ae:                               ; preds = %bb, %dec_label_pc_11397
  store i32 1, i32* %eax.global-to-local, align 8
  ret i32 1

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_113b5, { 1, 0 }
}

define i32 @function_113b5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_113b5:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_113c5 = load i32, i32* @ebp, align 4
  %v1_113c5 = add i32 %v0_113c5, -28
  %v2_113c5 = inttoptr i32 %v1_113c5 to i32*
  %v3_113c5 = load i32, i32* %v2_113c5, align 4
  store i32 %v3_113c5, i32* %eax.global-to-local, align 8
  %v1_113c8 = add i32 %v3_113c5, 72
  %v2_113c8 = inttoptr i32 %v1_113c8 to i8*
  store i8 1, i8* %v2_113c8, align 1
  %v0_113cc = load i32, i32* @ebp, align 4
  %v1_113cc = add i32 %v0_113cc, -28
  %v2_113cc = inttoptr i32 %v1_113cc to i32*
  %v3_113cc = load i32, i32* %v2_113cc, align 4
  store i32 %v3_113cc, i32* %eax.global-to-local, align 8
  %v1_113cf = add i32 %v3_113cc, 80
  %v2_113cf = inttoptr i32 %v1_113cf to i32*
  %v3_113cf = load i32, i32* %v2_113cf, align 4
  store i32 %v3_113cf, i32* %eax.global-to-local, align 8
  %v1_113d2 = add i32 %v3_113cf, 1
  %v3_113d5 = load i32, i32* %v2_113cc, align 4
  store i32 %v3_113d5, i32* %eax.global-to-local, align 8
  %v2_113d8 = add i32 %v3_113d5, 80
  %v3_113d8 = inttoptr i32 %v2_113d8 to i32*
  store i32 %v1_113d2, i32* %v3_113d8, align 4
  %v0_113e0 = load i32, i32* @ebp, align 4
  %v1_113e0 = add i32 %v0_113e0, -28
  %v2_113e0 = inttoptr i32 %v1_113e0 to i32*
  %v3_113e0 = load i32, i32* %v2_113e0, align 4
  %v0_113e3 = load i32, i32* %eax.global-to-local, align 8
  %v2_113e3 = add i32 %v3_113e0, 76
  %v3_113e3 = inttoptr i32 %v2_113e3 to i32*
  store i32 %v0_113e3, i32* %v3_113e3, align 4
  %v0_113eb = load i32, i32* @ebp, align 4
  store i32 1, i32* @eax, align 8
  %v1_113f8 = add i32 %v0_113eb, -12
  %v2_113f8 = inttoptr i32 %v1_113f8 to i32*
  %v3_113f8 = load i32, i32* %v2_113f8, align 4
  %v3_113fb = icmp eq i32 %v3_113f8, 30
  br i1 %v3_113fb, label %bb, label %dec_label_pc_11404

bb:                                               ; preds = %dec_label_pc_113b5
  %v1_113eb = add i32 %v0_113eb, -20
  %v2_11402 = call i32 @function_11409(i32 %v1_113eb)
  store i32 %v2_11402, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %bb, %dec_label_pc_113b5
  %v3_11402 = phi i32 [ %v2_11402, %bb ], [ 1, %dec_label_pc_113b5 ]
  ret i32 %v3_11402

; uselistorder directives
  uselistorder i32 %v0_113eb, { 1, 0 }
}

define i32 @function_11409(i32 %arg1) local_unnamed_addr {
dec_label_pc_11409:
  %v0_1140e = load i32, i32* @eax, align 8
  ret i32 %v0_1140e
}

define i32 @_ZN5boost12range_detail6lengthEPKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1140f:
  ret i32 %arg1
}

define i32 @function_11441() local_unnamed_addr {
dec_label_pc_11441:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11441 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11441 = add i32 %v0_11441, -1
  store i32 %v1_11441, i32* %ecx.global-to-local, align 4
  %v0_11443 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11443
}

define i32 @_ZN5boost12range_detail11is_char_ptrEPKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_11444:
  store i32 1, i32* @eax, align 8
  %v2_1146a = call i32 @function_11471(i32 %arg1)
  ret i32 %v2_1146a
}

define i32 @function_11471(i32 %arg1) local_unnamed_addr {
dec_label_pc_11471:
  %v0_11472 = load i32, i32* @eax, align 8
  ret i32 %v0_11472
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11474:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38fc8.2441 to i32), i32* %arg1, align 4
  %v1_1149d = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_114a3 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v5_114a3 = icmp ult i32 %v1_114a3, %tmp102
  store i1 %v5_114a3, i1* @cf, align 1
  store i32 %v1_114a3, i32* @eax, align 8
  %v2_114ad = call i32 @function_2530c(i32 %v1_114a3, i32 %v1_1149d)
  %v1_114b5 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_114b5 = inttoptr i32 %v1_114b5 to i32*
  %v3_114b5 = load i32, i32* %v2_114b5, align 4
  %v2_114bb = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_114bb = inttoptr i32 %v2_114bb to i32*
  store i32 %v3_114b5, i32* %v3_114bb, align 4
  %v1_114c1 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_114c1 = inttoptr i32 %v1_114c1 to i32*
  %v3_114c1 = load i32, i32* %v2_114c1, align 4
  %v2_114c7 = add i32 %tmp102, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_114c7 = inttoptr i32 %v2_114c7 to i32*
  store i32 %v3_114c1, i32* %v3_114c7, align 4
  %v1_114cd = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_114cd = inttoptr i32 %v1_114cd to i32*
  %v3_114cd = load i32, i32* %v2_114cd, align 4
  %v2_114d3 = add i32 %tmp102, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_114d3 = inttoptr i32 %v2_114d3 to i32*
  store i32 %v3_114cd, i32* %v3_114d3, align 4
  store i32 0, i32* @eax, align 8
  %v1_114e0 = call i32 @function_114e7()
  ret i32 %v1_114e0

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_114e7() local_unnamed_addr {
dec_label_pc_114e7:
  %v0_114e8 = load i32, i32* @eax, align 8
  ret i32 %v0_114e8
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_114ea:
  %v1_11504 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1150a = call i32 @function_219ec(i32 %v1_11504)
  store i32 0, i32* @eax, align 8
  %v1_11519 = call i32 @function_11520()
  ret i32 %v1_11519
}

define i32 @function_11520() local_unnamed_addr {
dec_label_pc_11520:
  %v0_11521 = load i32, i32* @eax, align 8
  ret i32 %v0_11521
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11522:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_11542 = inttoptr i32 %arg2 to i32*
  %v2_11542 = load i32, i32* %v1_11542, align 4
  store i32 %v2_11542, i32* %arg1, align 4
  %v1_1154c = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_11552 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_11552, i32* @eax, align 8
  %v2_1155c = call i32 @function_21a64(i32 %v1_11552, i32 %v1_1154c)
  store i32 0, i32* @eax, align 8
  %v1_1156b = call i32 @function_11572()
  ret i32 %v1_1156b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_11572() local_unnamed_addr {
dec_label_pc_11572:
  %v0_11573 = load i32, i32* @eax, align 8
  ret i32 %v0_11573
}

define i32 @_ZNK5boost13function_base5emptyEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11574:
  %ebp.global-to-local = alloca i32, align 4
  %v0_11574 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1158e = load i32, i32* %arg1, align 4
  %v1_11590 = icmp eq i32 %v2_1158e, 0
  %v1_11592 = zext i1 %v1_11590 to i32
  %v3_11592 = and i32 %v2_1158e, -256
  %v4_11592 = or i32 %v1_11592, %v3_11592
  store i32 %v0_11574, i32* %ebp.global-to-local, align 4
  ret i32 %v4_11592
}

define i32 @_ZN5boost17bad_function_callC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_115a8:
  %stack_var_-24 = alloca i32, align 4
  %v2_115da = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_115da
}

define i32 @function_11602() local_unnamed_addr {
dec_label_pc_11602:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1160d = add i32 %tmp91, -28
  %v2_1160d = inttoptr i32 %v1_1160d to i32*
  %v3_1160d = load i32, i32* %v2_1160d, align 4
  %v1_11610 = inttoptr i32 %v3_1160d to i32*
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.2458 to i32), i32* %v1_11610, align 4
  %v0_11616 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11616 = add i32 %v0_11616, -12
  %v2_11616 = inttoptr i32 %v1_11616 to i32*
  %v3_11616 = load i32, i32* %v2_11616, align 4
  %v2_11619 = xor i32 %v3_11616, 30
  %v3_11619 = icmp eq i32 %v2_11619, 0
  store i32 %v2_11619, i32* @eax, align 8
  br i1 %v3_11619, label %bb, label %dec_label_pc_11622

bb:                                               ; preds = %dec_label_pc_11602
  %v1_11602 = add i32 %tmp91, -13
  %v2_11620 = call i32 @function_1164f(i32 %v1_11602)
  store i32 %v2_11620, i32* @eax, align 8
  br label %dec_label_pc_11622

dec_label_pc_11622:                               ; preds = %bb, %dec_label_pc_11602
  %v0_11622 = call i32 @function_1164a()
  ret i32 %v0_11622
}

define i32 @function_11625() local_unnamed_addr {
dec_label_pc_11625:
  %eax.global-to-local = alloca i32, align 4
  %v0_11625 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11625
}

define i32 @function_11631() local_unnamed_addr {
dec_label_pc_11631:
  %v0_11631 = call i32 @function_11635()
  ret i32 %v0_11631
}

define i32 @function_11633() local_unnamed_addr {
dec_label_pc_11633:
  %eax.global-to-local = alloca i32, align 4
  %v0_11633 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11633
}

define i32 @function_11635() local_unnamed_addr {
dec_label_pc_11635:
  %v0_11640 = load i32, i32* @ebx, align 4
  ret i32 %v0_11640
}

define i32 @function_1164a() local_unnamed_addr {
dec_label_pc_1164a:
  %v0_1164a = load i32, i32* @eax, align 8
  ret i32 %v0_1164a
}

define i32 @function_1164f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1164f:
  %v0_11654 = load i32, i32* @eax, align 8
  ret i32 %v0_11654
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11656:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38ec8.2459 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_1167c = call i32 @function_21ee0(i32 %tmp99)
  store i32 0, i32* @eax, align 8
  %v1_116a2 = call i32 @function_116a9()
  ret i32 %v1_116a2

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_116a9() local_unnamed_addr {
dec_label_pc_116a9:
  %v0_116aa = load i32, i32* @eax, align 8
  ret i32 %v0_116aa
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_116ac:
  %v1_116c9 = call i32 @function_22d02(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_116d8() local_unnamed_addr {
dec_label_pc_116d8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_116d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_116d8 = add i32 %v0_116d8, 862319685
  %v2_116d8 = inttoptr i32 %v1_116d8 to i32*
  %v3_116d8 = load i32, i32* %v2_116d8, align 4
  %v4_116d8 = add i32 %v3_116d8, -1
  store i32 %v4_116d8, i32* %v2_116d8, align 4
  %v0_116de = load i32, i32* %eax.global-to-local, align 8
  %v1_116de = add i32 %v0_116de, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_116de, i32* %eax.global-to-local, align 8
  ret i32 %v1_116de
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_116ec:
  %v15_1170c = icmp eq i32 %arg1, %arg2
  %v1_1170f = zext i1 %v15_1170c to i32
  %v3_1170f = and i32 %arg1, -256
  %v4_1170f = or i32 %v1_1170f, %v3_1170f
  store i32 %v4_1170f, i32* @eax, align 8
  %v3_1171c = call i32 @function_11723(i32 %arg2, i32 %arg1)
  ret i32 %v3_1171c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_11723(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11723:
  %v0_11724 = load i32, i32* @eax, align 8
  ret i32 %v0_11724
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11726:
  %ebp.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v0_11726 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_11757 = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_11757 = inttoptr i32 %v2_11757 to i32*
  store i32 %arg3, i32* %v3_11757, align 4
  store i32 %v0_11726, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1176d:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1178d = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1178d = inttoptr i32 %v1_1178d to i32*
  %v3_1178d = load i32, i32* %v2_1178d, align 4
  %v1_11793 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_11793 = inttoptr i32 %v1_11793 to i32*
  %v3_11793 = load i32, i32* %v2_11793, align 4
  %v12_11796 = icmp eq i32 %v3_1178d, %v3_11793
  %v1_11798 = icmp eq i1 %v12_11796, false
  br i1 %v1_11798, label %dec_label_pc_117af, label %dec_label_pc_1179a

dec_label_pc_1179a:                               ; preds = %dec_label_pc_1176d
  %v2_1179d = load i32, i32* %arg1, align 4
  %v1_117a2 = inttoptr i32 %arg2 to i32*
  %v2_117a2 = load i32, i32* %v1_117a2, align 4
  %v12_117a4 = icmp eq i32 %v2_1179d, %v2_117a2
  %v1_117a6 = icmp eq i1 %v12_117a4, false
  br i1 %v1_117a6, label %dec_label_pc_117af, label %dec_label_pc_117b4

dec_label_pc_117af:                               ; preds = %dec_label_pc_1179a, %dec_label_pc_1176d
  br label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_1179a, %dec_label_pc_117af
  %storemerge = phi i32 [ 0, %dec_label_pc_117af ], [ 1, %dec_label_pc_1179a ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_117be = call i32 @function_117c5()
  ret i32 %v1_117be

; uselistorder directives
  uselistorder label %dec_label_pc_117b4, { 1, 0 }
}

define i32 @function_117c5() local_unnamed_addr {
dec_label_pc_117c5:
  %v0_117c6 = load i32, i32* @eax, align 8
  ret i32 %v0_117c6
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_117c8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_117e2 = load i32, i32* %arg1, align 4
  store i32 %v2_117e2, i32* @eax, align 8
  %v2_117ee = call i32 @function_117f5(i32 %tmp99)
  ret i32 %v2_117ee
}

define i32 @function_117f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_117f5:
  %v0_117f6 = load i32, i32* @eax, align 8
  ret i32 %v0_117f6
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_117f8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_117f8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11812 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_11812 = inttoptr i32 %v1_11812 to i32*
  %v3_11812 = load i32, i32* %v2_11812, align 4
  store i32 %v0_117f8, i32* %ebp.global-to-local, align 4
  ret i32 %v3_11812
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11828:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1182b = load i32, i32* %ebx.global-to-local, align 4
  %v1_11849 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_11849 = inttoptr i32 %v1_11849 to i32*
  %v3_11849 = load i32, i32* %v2_11849, align 4
  %v1_1184c = inttoptr i32 %v3_11849 to i32*
  %v2_1184c = load i32, i32* %v1_1184c, align 4
  %v1_1184e = add i32 %v2_1184c, ptrtoint (i32* @global_var_c.2390 to i32)
  %v5_1184e = icmp ult i32 %v1_1184e, %v2_1184c
  store i1 %v5_1184e, i1* @cf, align 1
  %v1_11851 = inttoptr i32 %v1_1184e to i32*
  %v2_11851 = load i32, i32* %v1_11851, align 4
  store i32 %v2_11851, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_11859 = call i32 @function_22ff0(i32 %arg2)
  store i32 %v0_1182b, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_1184c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11892:
  store i32 %arg1, i32* @eax, align 8
  %v3_118c9 = call i32 @function_22fb8(i32 %arg1, i32 %arg3, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118e6:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v5_11939 = call i32 @function_23053(i32* nonnull %stack_var_-24, i32 %arg3, i32 %tmp108, i32 %arg2)
  ret i32 %v5_11939
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11952:
  store i32 %arg2, i32* @eax, align 8
  %sext = mul i32 %arg2, 16777216
  %v1_1197b = sdiv i32 %sext, 16777216
  %v2_1197b = call i32 @function_2314a(i32 %v1_1197b)
  %v5_1198f = icmp eq i8 %arg1, 0
  br i1 %v5_1198f, label %dec_label_pc_119aa, label %dec_label_pc_11993

dec_label_pc_11993:                               ; preds = %dec_label_pc_11952
  %v3_11999 = call i32 @function_2311a(i32 %v1_1197b, i32 %v2_1197b)
  %v15_1199e = icmp eq i32 %v3_11999, %arg3
  %v1_119a1 = icmp eq i1 %v15_1199e, false
  br i1 %v1_119a1, label %dec_label_pc_119aa, label %dec_label_pc_119af

dec_label_pc_119aa:                               ; preds = %dec_label_pc_11993, %dec_label_pc_11952
  br label %dec_label_pc_119af

dec_label_pc_119af:                               ; preds = %dec_label_pc_11993, %dec_label_pc_119aa
  %storemerge = phi i32 [ 0, %dec_label_pc_119aa ], [ 1, %dec_label_pc_11993 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1197b, { 1, 0 }
  uselistorder label %dec_label_pc_119af, { 1, 0 }
}

define i32 @_ZN5boost11filesystem311path_traits7convertEPKcS3_RSsRKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_119c2:
  %v10_119eb = icmp eq i32 %arg1, 0
  %v1_119ef = icmp eq i1 %v10_119eb, false
  br i1 %v1_119ef, label %bb, label %dec_label_pc_119f1

bb:                                               ; preds = %dec_label_pc_119c2
  %v6_119ef = call i32 @function_11a15(i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_119f1

dec_label_pc_119f1:                               ; preds = %bb, %dec_label_pc_119c2
  %v3_11a09 = phi i32 [ %v6_119ef, %bb ], [ 0, %dec_label_pc_119c2 ]
  ret i32 %v3_11a09
}

define i32 @function_11a15(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11a15:
  %v0_11a15 = load i32, i32* @ebp, align 4
  %v1_11a15 = add i32 %v0_11a15, -32
  %v2_11a15 = inttoptr i32 %v1_11a15 to i32*
  %v3_11a15 = load i32, i32* %v2_11a15, align 4
  %v1_11a46 = add i32 %v0_11a15, -28
  %v2_11a46 = inttoptr i32 %v1_11a46 to i32*
  %v3_11a46 = load i32, i32* %v2_11a46, align 4
  %v1_11a4d = add i32 %v0_11a15, -36
  %v2_11a4d = inttoptr i32 %v1_11a4d to i32*
  %v3_11a4d = load i32, i32* %v2_11a4d, align 4
  store i32 %v3_11a4d, i32* @eax, align 8
  %v5_11a53 = call i32 @function_25dd4(i32 %v3_11a4d, i32 %v3_11a46, i32 %v3_11a15)
  %v0_11a58 = load i32, i32* @ebp, align 4
  %v1_11a58 = add i32 %v0_11a58, -12
  %v2_11a58 = inttoptr i32 %v1_11a58 to i32*
  %v3_11a58 = load i32, i32* %v2_11a58, align 4
  %v2_11a5b = xor i32 %v3_11a58, 30
  %v3_11a5b = icmp eq i32 %v2_11a5b, 0
  store i32 %v2_11a5b, i32* @eax, align 8
  br i1 %v3_11a5b, label %bb, label %dec_label_pc_11a64

bb:                                               ; preds = %dec_label_pc_11a15
  %v1_11a62 = call i32 @function_11a69()
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %bb, %dec_label_pc_11a15
  %v2_11a62 = phi i32 [ %v1_11a62, %bb ], [ %v2_11a5b, %dec_label_pc_11a15 ]
  ret i32 %v2_11a62
}

define i32 @function_11a69() local_unnamed_addr {
dec_label_pc_11a69:
  %v0_11a6a = load i32, i32* @eax, align 8
  ret i32 %v0_11a6a
}

define i32 @_ZN5boost11filesystem311path_traits7convertEPKcRSsRKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11a6b:
  %v10_11a8e = icmp eq i32 %arg1, 0
  %v1_11a92 = icmp eq i1 %v10_11a8e, false
  br i1 %v1_11a92, label %bb, label %dec_label_pc_11a94

bb:                                               ; preds = %dec_label_pc_11a6b
  %v5_11a92 = call i32 @function_11ab8(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_11a94

dec_label_pc_11a94:                               ; preds = %bb, %dec_label_pc_11a6b
  %v3_11aac = phi i32 [ %v5_11a92, %bb ], [ 0, %dec_label_pc_11a6b ]
  ret i32 %v3_11aac
}

define i32 @function_11ab8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ab8:
  %v0_11ab8 = load i32, i32* @ebp, align 4
  %v1_11abf = add i32 %v0_11ab8, -32
  %v2_11abf = inttoptr i32 %v1_11abf to i32*
  %v3_11abf = load i32, i32* %v2_11abf, align 4
  ret i32 %v3_11abf
}

define i32 @function_11ada() local_unnamed_addr {
dec_label_pc_11ada:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11ada = load i32, i32* %ecx.global-to-local, align 4
  %v1_11ada = add i32 %v0_11ada, -1
  store i32 %v1_11ada, i32* %ecx.global-to-local, align 4
  %v0_11adc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11adc
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_11ade:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38ea0_type* @global_var_38ea0.2466 to i32), i32* %arg1, align 4
  %v1_11b03 = add i32 %tmp99, ptrtoint (i8** @global_var_10.2429 to i32)
  ret i32 %v1_11b03
}

define i32 @function_11b0e() local_unnamed_addr {
dec_label_pc_11b0e:
  %v0_11b0e = load i32, i32* @ebp, align 4
  %v1_11b0e = add i32 %v0_11b0e, -28
  %v2_11b0e = inttoptr i32 %v1_11b0e to i32*
  %v3_11b0e = load i32, i32* %v2_11b0e, align 4
  %v2_11b23 = call i32 @function_11b5a(i32 %v3_11b0e)
  %v0_11b25 = load i32, i32* @ebp, align 4
  %v1_11b25 = add i32 %v0_11b25, -28
  %v2_11b25 = inttoptr i32 %v1_11b25 to i32*
  %v3_11b25 = load i32, i32* %v2_11b25, align 4
  %v1_11b30 = call i32 @function_11b5a(i32 %v3_11b25)
  ret i32 %v1_11b30

; uselistorder directives
  uselistorder i32 (i32)* @function_11b5a, { 1, 0 }
}

define i32 @function_11b5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b5a:
  %v0_11b5a = load i32, i32* @ebp, align 4
  %v1_11b5a = add i32 %v0_11b5a, -12
  %v2_11b5a = inttoptr i32 %v1_11b5a to i32*
  %v3_11b5a = load i32, i32* %v2_11b5a, align 4
  %v2_11b5d = xor i32 %v3_11b5a, 30
  %v3_11b5d = icmp eq i32 %v2_11b5d, 0
  store i32 %v2_11b5d, i32* @eax, align 8
  br i1 %v3_11b5d, label %bb, label %dec_label_pc_11b66

bb:                                               ; preds = %dec_label_pc_11b5a
  %v1_11b64 = call i32 @function_11b6b()
  br label %dec_label_pc_11b66

dec_label_pc_11b66:                               ; preds = %bb, %dec_label_pc_11b5a
  %v2_11b64 = phi i32 [ %v1_11b64, %bb ], [ %v2_11b5d, %dec_label_pc_11b5a ]
  ret i32 %v2_11b64
}

define i32 @function_11b6b() local_unnamed_addr {
dec_label_pc_11b6b:
  %v0_11b71 = load i32, i32* @eax, align 8
  ret i32 %v0_11b71
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_11b72:
  store i32 %arg1, i32* @eax, align 8
  %v1_11b8f = call i32 @function_23650(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_11ba9 = call i32 @function_11bb0(i32 %arg1)
  ret i32 %v2_11ba9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bb0:
  %v0_11bb1 = load i32, i32* @eax, align 8
  ret i32 %v0_11bb1
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_11bb2:
  %v1_11bcd = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v11_11bcd = trunc i32 %v1_11bcd to i8
  %v5_11bd8 = icmp eq i8 %v11_11bcd, 0
  br i1 %v5_11bd8, label %bb, label %dec_label_pc_11be0

bb:                                               ; preds = %dec_label_pc_11bb2
  %v3_11bda = call i32 @function_11c60(i32 %v1_11bcd)
  br label %dec_label_pc_11be0

dec_label_pc_11be0:                               ; preds = %bb, %dec_label_pc_11bb2
  ret i32 %arg1
}

define i32 @function_11bec() local_unnamed_addr {
dec_label_pc_11bec:
  %eax.global-to-local = alloca i32, align 4
  %v0_11bef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11bef
}

define i32 @function_11c60(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c60:
  %v0_11c60 = load i32, i32* @ebp, align 4
  %v1_11c60 = add i32 %v0_11c60, -28
  %v2_11c60 = inttoptr i32 %v1_11c60 to i32*
  %v3_11c60 = load i32, i32* %v2_11c60, align 4
  %v1_11c63 = add i32 %v3_11c60, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_11c63, i32* @eax, align 8
  %v1_11c72 = add i32 %v0_11c60, -12
  %v2_11c72 = inttoptr i32 %v1_11c72 to i32*
  %v3_11c72 = load i32, i32* %v2_11c72, align 4
  %v3_11c75 = icmp eq i32 %v3_11c72, 30
  br i1 %v3_11c75, label %bb, label %dec_label_pc_11c7e

bb:                                               ; preds = %dec_label_pc_11c60
  %v3_11c7c = call i32 @function_11cc7(i32 %v1_11c63)
  store i32 %v3_11c7c, i32* @eax, align 8
  br label %dec_label_pc_11c7e

dec_label_pc_11c7e:                               ; preds = %bb, %dec_label_pc_11c60
  %v0_11c7e = call i32 @function_11cc2()
  ret i32 %v0_11c7e
}

define i32 @function_11c81() local_unnamed_addr {
dec_label_pc_11c81:
  %eax.global-to-local = alloca i32, align 4
  %v0_11c81 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11c81
}

define i32 @function_11c8d() local_unnamed_addr {
dec_label_pc_11c8d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_11c8d = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_11c8d
}

define i32 @function_11ca4() local_unnamed_addr {
dec_label_pc_11ca4:
  %eax.global-to-local = alloca i32, align 4
  %v0_11ca4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11ca4
}

define i32 @function_11cc2() local_unnamed_addr {
dec_label_pc_11cc2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11cc7(i32 %arg1) local_unnamed_addr {
dec_label_pc_11cc7:
  %v0_11ccb = load i32, i32* @eax, align 8
  ret i32 %v0_11ccb
}

define i32 @_ZN5boost11filesystem34pathD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ccc:
  store i32 0, i32* @eax, align 8
  %v2_11cf8 = call i32 @function_11cff(i32 %arg1)
  ret i32 %v2_11cf8
}

define i32 @function_11cff(i32 %arg1) local_unnamed_addr {
dec_label_pc_11cff:
  %v0_11d00 = load i32, i32* @eax, align 8
  ret i32 %v0_11d00
}

define i32 @_ZN5boost11filesystem34pathC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d02:
  store i32 0, i32* @eax, align 8
  %v2_11d2e = call i32 @function_11d35(i32 %arg1)
  ret i32 %v2_11d2e
}

define i32 @function_11d35(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d35:
  %v0_11d36 = load i32, i32* @eax, align 8
  ret i32 %v0_11d36
}

define i32 @_ZN5boost11filesystem34pathC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d38:
  ret i32 %arg1
}

define i32 @function_11d66() local_unnamed_addr {
dec_label_pc_11d66:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11d66 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11d66 = add i32 %v0_11d66, 862319685
  %v2_11d66 = inttoptr i32 %v1_11d66 to i32*
  %v3_11d66 = load i32, i32* %v2_11d66, align 4
  %v4_11d66 = add i32 %v3_11d66, -1
  store i32 %v4_11d66, i32* %v2_11d66, align 4
  %v0_11d6c = load i32, i32* %eax.global-to-local, align 8
  %v1_11d6c = add i32 %v0_11d6c, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_11d6c, i32* %eax.global-to-local, align 8
  ret i32 %v1_11d6c
}

define i32 @_ZN5boost11filesystem34pathaSERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d7a:
  ret i32 %arg1
}

define i32 @function_11da8() local_unnamed_addr {
dec_label_pc_11da8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11da8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11da8 = add i32 %v0_11da8, 1435231301
  %v2_11da8 = inttoptr i32 %v1_11da8 to i32*
  %v3_11da8 = load i32, i32* %v2_11da8, align 4
  %v4_11da8 = add i32 %v3_11da8, -1
  store i32 %v4_11da8, i32* %v2_11da8, align 4
  %v0_11daf = load i32, i32* %edx.global-to-local, align 8
  %v2_11daf = xor i32 %v0_11daf, 30
  store i32 %v2_11daf, i32* %edx.global-to-local, align 8
  %v0_11dbe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11dbe
}

define i32 @_ZNK5boost11filesystem34path5c_strEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11dc0:
  ret i32 %arg1
}

define i32 @function_11de1() local_unnamed_addr {
dec_label_pc_11de1:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11de1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11de1 = add i32 %v0_11de1, 862319701
  %v2_11de1 = inttoptr i32 %v1_11de1 to i32*
  %v3_11de1 = load i32, i32* %v2_11de1, align 4
  %v4_11de1 = add i32 %v3_11de1, -1
  store i32 %v4_11de1, i32* %v2_11de1, align 4
  %v0_11de7 = load i32, i32* %eax.global-to-local, align 8
  %v1_11de7 = load i1, i1* %cf.global-to-local, align 1
  %v2_11de7 = zext i1 %v1_11de7 to i32
  %v3_11de7 = add i32 %v0_11de7, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_11de7 = add i32 %v3_11de7, %v2_11de7
  %v20_11de7 = add i32 %v0_11de7, 20
  %v21_11de7 = add i32 %v20_11de7, %v2_11de7
  %v22_11de7 = icmp ule i32 %v21_11de7, %v0_11de7
  %v23_11de7 = icmp ugt i32 %v0_11de7, -21
  %v24_11de7 = select i1 %v1_11de7, i1 %v22_11de7, i1 %v23_11de7
  store i1 %v24_11de7, i1* %cf.global-to-local, align 1
  store i32 %v4_11de7, i32* %eax.global-to-local, align 8
  ret i32 %v4_11de7
}

define i32 @_ZNK5boost11filesystem34path6stringEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11df6:
  store i32 %arg1, i32* @eax, align 8
  %v2_11e1a = call i32 @function_11e21(i32 %arg1)
  ret i32 %v2_11e1a
}

define i32 @function_11e21(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e21:
  %v0_11e22 = load i32, i32* @eax, align 8
  ret i32 %v0_11e22
}

define i32 @_ZNK5boost11filesystem34path5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e24:
  ret i32 %arg1
}

define i32 @_ZNK5boost11filesystem34path18has_root_directoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e5a:
  %stack_var_-20 = alloca i32, align 4
  %v2_11e72 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_11e72
}

define i32 @function_11e84() local_unnamed_addr {
dec_label_pc_11e84:
  %v0_11e87 = load i32, i32* @ebp, align 4
  %v1_11e87 = add i32 %v0_11e87, -16
  store i32 %v1_11e87, i32* @eax, align 8
  %v1_11e8d = call i32 @function_23c7e(i32 %v1_11e87)
  %v1_11e94 = xor i32 %v1_11e8d, 1
  store i1 false, i1* @cf, align 1
  store i32 %v1_11e94, i32* @ebx, align 4
  %v0_11e97 = load i32, i32* @ebp, align 4
  %v1_11e97 = add i32 %v0_11e97, -16
  store i32 %v1_11e97, i32* @eax, align 8
  %v1_11e9d = call i32 @function_23b26(i32 %v1_11e97)
  %v0_11ea2 = load i32, i32* @ebx, align 4
  store i32 %v0_11ea2, i32* @eax, align 8
  %v0_11ea4 = load i32, i32* @ebp, align 4
  %v1_11ea4 = add i32 %v0_11ea4, -12
  %v2_11ea4 = inttoptr i32 %v1_11ea4 to i32*
  %v3_11ea4 = load i32, i32* %v2_11ea4, align 4
  %v3_11ea7 = icmp eq i32 %v3_11ea4, 30
  br i1 %v3_11ea7, label %bb, label %dec_label_pc_11eb0

bb:                                               ; preds = %dec_label_pc_11e84
  %v1_11eae = call i32 @function_11ece()
  store i32 %v1_11eae, i32* @eax, align 8
  br label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %bb, %dec_label_pc_11e84
  %v0_11eb0 = call i32 @function_11ec9()
  ret i32 %v0_11eb0
}

define i32 @function_11eb3() local_unnamed_addr {
dec_label_pc_11eb3:
  %eax.global-to-local = alloca i32, align 4
  %v0_11eb3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11eb3
}

define i32 @function_11ec9() local_unnamed_addr {
dec_label_pc_11ec9:
  %v0_11ec9 = load i32, i32* @eax, align 8
  ret i32 %v0_11ec9
}

define i32 @function_11ece() local_unnamed_addr {
dec_label_pc_11ece:
  %v0_11ed2 = load i32, i32* @eax, align 8
  ret i32 %v0_11ed2
}

define i32 @_ZNK5boost11filesystem34path11is_absoluteEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ed4:
  %v1_11ef1 = call i32 @function_23d2e(i32 %arg1)
  ret i32 %v1_11ef1
}

define i32 @_ZN5boost11filesystem34path7codecvtEv() local_unnamed_addr {
dec_label_pc_11f09:
  ret i32 0
}

define i32 @function_11f31() local_unnamed_addr {
dec_label_pc_11f31:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11f31 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11f31 = add i32 %v0_11f31, -1
  store i32 %v1_11f31, i32* %ecx.global-to-local, align 4
  %v0_11f33 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11f33
}

define i32 @_ZNK5boost11filesystem34path11is_completeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f34:
  store i32 %arg1, i32* @eax, align 8
  %v1_11f51 = call i32 @function_23e08(i32 %arg1)
  store i32 %v1_11f51, i32* @eax, align 8
  %v1_11f60 = call i32 @function_11f67()
  ret i32 %v1_11f60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11f67() local_unnamed_addr {
dec_label_pc_11f67:
  %v0_11f68 = load i32, i32* @eax, align 8
  ret i32 %v0_11f68
}

define i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11f69:
  %stack_var_-20 = alloca i32, align 4
  %v2_11f94 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_11f94, i32* @eax, align 8
  %v2_11f9a = call i32 @function_23ca1(i32 %v2_11f94, i32 %arg2)
  ret i32 %v2_11f94
}

define i32 @function_11fb0() local_unnamed_addr {
dec_label_pc_11fb0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11fb0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11fb0 = add i32 %v0_11fb0, -1962662844
  %v2_11fb0 = inttoptr i32 %v1_11fb0 to i32*
  %v3_11fb0 = load i32, i32* %v2_11fb0, align 4
  %v4_11fb0 = add i32 %v3_11fb0, -1
  store i32 %v4_11fb0, i32* %v2_11fb0, align 4
  %v0_11fb6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11fb6 = add i32 %v0_11fb6, 1
  store i32 %v1_11fb6, i32* %ebp.global-to-local, align 4
  %v0_11fb9 = load i32, i32* %eax.global-to-local, align 8
  %v2_11fb9 = add i32 %v0_11fb9, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_11fb9 = and i32 %v2_11fb9, 255
  %v18_11fb9 = and i32 %v0_11fb9, -256
  %v19_11fb9 = or i32 %v16_11fb9, %v18_11fb9
  store i32 %v19_11fb9, i32* @eax, align 8
  %v2_11fbb = call i32 @function_23ca1(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v0_11fc0 = load i32, i32* @ebp, align 4
  %v1_11fc0 = add i32 %v0_11fc0, -16
  store i32 %v1_11fc0, i32* @eax, align 8
  %v1_11fc6 = call i32 @function_23c35(i32 %v1_11fc0)
  store i32 %v1_11fc6, i32* %eax.global-to-local, align 8
  %v0_11fcb = load i32, i32* @ebp, align 4
  %v1_11fcb = add i32 %v0_11fcb, -28
  %v2_11fcb = inttoptr i32 %v1_11fcb to i32*
  %v3_11fcb = load i32, i32* %v2_11fcb, align 4
  store i32 %v3_11fcb, i32* @eax, align 8
  %v1_11fce = add i32 %v0_11fcb, -12
  %v2_11fce = inttoptr i32 %v1_11fce to i32*
  %v3_11fce = load i32, i32* %v2_11fce, align 4
  %v3_11fd1 = icmp eq i32 %v3_11fce, 30
  br i1 %v3_11fd1, label %bb, label %dec_label_pc_11ff3

bb:                                               ; preds = %dec_label_pc_11fb0
  %v1_11fd8 = call i32 @function_11ff8()
  store i32 %v1_11fd8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_11ff3

dec_label_pc_11ff3:                               ; preds = %dec_label_pc_11fb0, %bb
  %v0_11fda = phi i32 [ %v3_11fcb, %dec_label_pc_11fb0 ], [ %v1_11fd8, %bb ]
  ret i32 %v0_11fda

; uselistorder directives
  uselistorder i32 %v0_11fb9, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_23ca1, { 1, 0 }
  uselistorder label %dec_label_pc_11ff3, { 1, 0 }
}

define i32 @function_11fdc() local_unnamed_addr {
dec_label_pc_11fdc:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11fdc = load i32, i32* %eax.global-to-local, align 8
  %v0_11fde = load i32, i32* %ebp.global-to-local, align 4
  %v1_11fde = add i32 %v0_11fde, -16
  store i32 %v1_11fde, i32* @eax, align 8
  %v1_11fe4 = call i32 @function_23c35(i32 %v1_11fde)
  store i32 %v0_11fdc, i32* %eax.global-to-local, align 8
  ret i32 %v0_11fdc

; uselistorder directives
  uselistorder i32 %v0_11fdc, { 1, 0 }
  uselistorder i32 (i32)* @function_23c35, { 1, 0 }
}

define i32 @function_11ff8() local_unnamed_addr {
dec_label_pc_11ff8:
  %v0_11ffd = load i32, i32* @eax, align 8
  ret i32 %v0_11ffd
}

define i32 @_ZNK5boost11filesystem311file_status4typeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12000:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1201a = load i32, i32* %arg1, align 4
  store i32 %v2_1201a, i32* @eax, align 8
  %v2_12026 = call i32 @function_1202d(i32 %tmp99)
  ret i32 %v2_12026
}

define i32 @function_1202d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1202d:
  %v0_1202e = load i32, i32* @eax, align 8
  ret i32 %v0_1202e
}

define i32 @_ZN5boost11filesystem312is_directoryENS0_11file_statusE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1202f:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_12046 = ptrtoint i32* %stack_var_-32 to i32
  %v1_1204c = call i32 @_ZSt17__throw_bad_allocv.2263(i32 %v2_12046)
  %v10_12051 = icmp eq i32 %v1_1204c, 3
  %v1_12054 = zext i1 %v10_12051 to i32
  %v3_12054 = and i32 %v1_1204c, -256
  %v4_12054 = or i32 %v1_12054, %v3_12054
  store i32 %v4_12054, i32* @eax, align 8
  %v1_12061 = call i32 @function_12068()
  ret i32 %v1_12061

; uselistorder directives
  uselistorder i32 %v1_1204c, { 1, 0 }
}

define i32 @function_12068() local_unnamed_addr {
dec_label_pc_12068:
  %v0_12069 = load i32, i32* @eax, align 8
  ret i32 %v0_12069
}

define i32 @_ZN5boost11filesystem312is_directoryERKNS0_4pathE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1206a:
  %stack_var_-20 = alloca i32, align 4
  %v2_12081 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_12081
}

define i32 @function_120b9() local_unnamed_addr {
dec_label_pc_120b9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_120b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_120b9 = add i32 %v0_120b9, -1
  store i32 %v1_120b9, i32* %ecx.global-to-local, align 4
  %v0_120bb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_120bb
}

define i32 @_ZN5boost11filesystem318create_directoriesERKNS0_4pathE(i32 %arg1) local_unnamed_addr {
dec_label_pc_120bc:
  ret i32 %arg1
}

define i32 @function_120e5() local_unnamed_addr {
dec_label_pc_120e5:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_120e5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120e5 = add i32 %v0_120e5, 862319701
  %v2_120e5 = inttoptr i32 %v1_120e5 to i32*
  %v3_120e5 = load i32, i32* %v2_120e5, align 4
  %v4_120e5 = add i32 %v3_120e5, -1
  store i32 %v4_120e5, i32* %v2_120e5, align 4
  %v0_120eb = load i32, i32* %eax.global-to-local, align 8
  %v1_120eb = load i1, i1* %cf.global-to-local, align 1
  %v2_120eb = zext i1 %v1_120eb to i32
  %v3_120eb = add i32 %v0_120eb, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_120eb = add i32 %v3_120eb, %v2_120eb
  %v20_120eb = add i32 %v0_120eb, 20
  %v21_120eb = add i32 %v20_120eb, %v2_120eb
  %v22_120eb = icmp ule i32 %v21_120eb, %v0_120eb
  %v23_120eb = icmp ugt i32 %v0_120eb, -21
  %v24_120eb = select i1 %v1_120eb, i1 %v22_120eb, i1 %v23_120eb
  store i1 %v24_120eb, i1* %cf.global-to-local, align 1
  store i32 %v4_120eb, i32* %eax.global-to-local, align 8
  ret i32 %v4_120eb
}

define i32 @_ZN5boost11filesystem315system_completeERKNS0_4pathE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_120f9:
  ret i32 %arg1
}

define i32 @function_12146() local_unnamed_addr {
dec_label_pc_12146:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12146 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12146 = add i32 %v0_12146, -1
  store i32 %v1_12146, i32* %ecx.global-to-local, align 4
  %v0_12148 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12148
}

define i32 @_ZN5boost11filesystem319temp_directory_pathEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1214b:
  ret i32 %arg1
}

define i32 @function_1218b() local_unnamed_addr {
dec_label_pc_1218b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1218b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1218b = add i32 %v0_1218b, -1
  store i32 %v1_1218b, i32* %ecx.global-to-local, align 4
  %v0_1218d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1218d
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12190:
  store i32 %arg1, i32* @eax, align 8
  %v1_121ad = call i32 @function_26758(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_121bc = call i32 @function_121c3()
  ret i32 %v1_121bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_121c3() local_unnamed_addr {
dec_label_pc_121c3:
  %v0_121c4 = load i32, i32* @eax, align 8
  ret i32 %v0_121c4
}

define i32 @_ZN21LockedPageManagerBaseI16MemoryPageLockerED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_121c6:
  %v1_121e1 = add i32 %arg1, ptrtoint (i8* @global_var_24.2401 to i32)
  %v1_121e7 = call i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEED1Ev(i32 %v1_121e1)
  %v1_121ef = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 0, i32* @eax, align 8
  %v2_12204 = call i32 @function_12227(i32 %v1_121ef)
  store i32 %v2_12204, i32* @eax, align 8
  %v0_12206 = call i32 @function_12222()
  ret i32 %v0_12206

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12209() local_unnamed_addr {
dec_label_pc_12209:
  %eax.global-to-local = alloca i32, align 4
  %v0_12209 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12209
}

define i32 @function_12222() local_unnamed_addr {
dec_label_pc_12222:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_12227(i32 %arg1) local_unnamed_addr {
dec_label_pc_12227:
  %v0_1222c = load i32, i32* @eax, align 8
  ret i32 %v0_1222c
}

define i32 @_ZN17LockedPageManagerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1222e:
  %v1_12245 = call i32 @_ZN17LockedPageManagerC1Ev(i32 %arg1)
  %v1_12254 = call i32 @function_2670c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1226c:
  ret i32 %arg1
}

define i32 @function_122a3() local_unnamed_addr {
dec_label_pc_122a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_122a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_122a4
}

define i32 @_Z6atoi64RKSs(i32 %arg1) local_unnamed_addr {
dec_label_pc_122a5:
  ret i32 %arg1
}

define i32 @function_122de() local_unnamed_addr {
dec_label_pc_122de:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_122de = load i32, i32* %ebx.global-to-local, align 4
  %v1_122de = add i32 %v0_122de, 862319693
  %v2_122de = inttoptr i32 %v1_122de to i32*
  %v3_122de = load i32, i32* %v2_122de, align 4
  %v4_122de = add i32 %v3_122de, -1
  store i32 %v4_122de, i32* %v2_122de, align 4
  %v0_122e4 = load i32, i32* %eax.global-to-local, align 8
  %v1_122e4 = or i32 %v0_122e4, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_122e4, i32* %eax.global-to-local, align 8
  ret i32 %v1_122e4
}

define i32 @_Z4atoiRKSs(i32 %arg1) local_unnamed_addr {
dec_label_pc_122f2:
  ret i32 %arg1
}

define i32 @function_1231b() local_unnamed_addr {
dec_label_pc_1231b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1231b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1231b = add i32 %v0_1231b, 862319701
  %v2_1231b = inttoptr i32 %v1_1231b to i32*
  %v3_1231b = load i32, i32* %v2_1231b, align 4
  %v4_1231b = add i32 %v3_1231b, -1
  store i32 %v4_1231b, i32* %v2_1231b, align 4
  %v0_12321 = load i32, i32* %eax.global-to-local, align 8
  %v1_12321 = load i1, i1* %cf.global-to-local, align 1
  %v2_12321 = zext i1 %v1_12321 to i32
  %v3_12321 = add i32 %v0_12321, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_12321 = add i32 %v3_12321, %v2_12321
  %v20_12321 = add i32 %v0_12321, 20
  %v21_12321 = add i32 %v20_12321, %v2_12321
  %v22_12321 = icmp ule i32 %v21_12321, %v0_12321
  %v23_12321 = icmp ugt i32 %v0_12321, -21
  %v24_12321 = select i1 %v1_12321, i1 %v22_12321, i1 %v23_12321
  store i1 %v24_12321, i1* %cf.global-to-local, align 1
  store i32 %v4_12321, i32* %eax.global-to-local, align 8
  ret i32 %v4_12321
}

define i32 @_Z5abs64x(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1232f:
  %v2_12355 = ashr i32 %arg2, 31
  %v5_1235c = xor i32 %v2_12355, %arg1
  %v2_12364 = sub i32 %v5_1235c, %v2_12355
  store i32 %v2_12364, i32* @eax, align 8
  store i32 0, i32* @ecx, align 4
  %v3_12372 = call i32 @function_12379(i32 %arg1, i32 %arg2)
  ret i32 %v3_12372

; uselistorder directives
  uselistorder i32 %v2_12355, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12379(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12379:
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_1237e = load i32, i32* @eax, align 8
  ret i32 %v0_1237e
}

define i32 @_Z21GetPerformanceCounterv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1237f:
  %stack_var_-24 = alloca i32, align 4
  %v2_123a7 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_123a7
}

define i32 @function_123b6() local_unnamed_addr {
dec_label_pc_123b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_123b6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_123b6
}

define i32 @function_123bb(i16 %arg1) local_unnamed_addr {
dec_label_pc_123bb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v1_123bb = load i32, i32* %eax.global-to-local, align 8
  %v2_123bb = add i32 %v1_123bb, 66
  %v3_123bb = inttoptr i32 %v2_123bb to i32*
  %v4_123bb = load i32, i32* %v3_123bb, align 4
  %v5_123bb = sitofp i32 %v4_123bb to x86_fp80
  %v6_123bb = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_123bb = fadd x86_fp80 %v6_123bb, %v5_123bb
  store x86_fp80 %v7_123bb, x86_fp80* %st0.global-to-local, align 4
  %v2_123c2 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v4_123c2 = trunc i32 %v1_123bb to i8
  %v5_123c2 = add i8 %v2_123c2, %v4_123c2
  %v20_123c2 = load i32, i32* %ecx.global-to-local, align 4
  %v21_123c2 = inttoptr i32 %v20_123c2 to i8*
  store i8 %v5_123c2, i8* %v21_123c2, align 1
  %v6_123c4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_123c4
}

define i32 @function_123d0(i16 %arg1) local_unnamed_addr {
dec_label_pc_123d0:
  %eax.global-to-local = alloca i32, align 4
  %v6_123d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_123d0
}

define i32 @function_123d5(i16 %arg1) local_unnamed_addr {
dec_label_pc_123d5:
  %eax.global-to-local = alloca i32, align 4
  %v6_123d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_123d5
}

define i32 @function_123f9() local_unnamed_addr {
dec_label_pc_123f9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_123f9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_123f9 = add i32 %v0_123f9, 1566258372
  %v2_123f9 = inttoptr i32 %v1_123f9 to i32*
  %v3_123f9 = load i32, i32* %v2_123f9, align 4
  %v4_123f9 = add i32 %v3_123f9, 1
  store i32 %v4_123f9, i32* %v2_123f9, align 4
  %v0_123ff = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_123ff
}

define i32 @_Z17DateTimeStrFormatPKcx(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12400:
  %stack_var_-228 = alloca i32, align 4
  %v2_12445 = ptrtoint i32* %stack_var_-228 to i32
  ret i32 %v2_12445
}

define i32 @function_124c0() local_unnamed_addr {
dec_label_pc_124c0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_124c0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_124c0 = add i32 %v0_124c0, -60283
  %v2_124c0 = inttoptr i32 %v1_124c0 to i32*
  %v3_124c0 = load i32, i32* %v2_124c0, align 4
  %v4_124c0 = add i32 %v3_124c0, -1
  store i32 %v4_124c0, i32* %v2_124c0, align 4
  %v0_124c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_124c6 = add i32 %v0_124c6, 862319701
  %v2_124c6 = inttoptr i32 %v1_124c6 to i32*
  %v3_124c6 = load i32, i32* %v2_124c6, align 4
  %v4_124c6 = add i32 %v3_124c6, -1
  store i32 %v4_124c6, i32* %v2_124c6, align 4
  %v0_124cc = load i32, i32* %eax.global-to-local, align 8
  %v1_124cc = load i1, i1* %cf.global-to-local, align 1
  %v2_124cc = zext i1 %v1_124cc to i32
  %v3_124cc = add i32 %v0_124cc, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_124cc = add i32 %v3_124cc, %v2_124cc
  %v14_124cc = icmp eq i32 %v4_124cc, 0
  %v20_124cc = add i32 %v0_124cc, 20
  %v21_124cc = add i32 %v20_124cc, %v2_124cc
  %v22_124cc = icmp ule i32 %v21_124cc, %v0_124cc
  %v23_124cc = icmp ugt i32 %v0_124cc, -21
  %v24_124cc = select i1 %v1_124cc, i1 %v22_124cc, i1 %v23_124cc
  store i1 %v24_124cc, i1* %cf.global-to-local, align 1
  store i32 %v4_124cc, i32* @eax, align 8
  br i1 %v14_124cc, label %bb, label %dec_label_pc_124d3

bb:                                               ; preds = %dec_label_pc_124c0
  %v1_124d1 = call i32 @function_124f4()
  store i32 %v1_124d1, i32* @eax, align 8
  br label %dec_label_pc_124d3

dec_label_pc_124d3:                               ; preds = %bb, %dec_label_pc_124c0
  %v0_124d3 = call i32 @function_124ef()
  store i32 %v0_124d3, i32* %eax.global-to-local, align 8
  ret i32 %v0_124d3
}

define i32 @function_124d6() local_unnamed_addr {
dec_label_pc_124d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_124d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_124d6
}

define i32 @function_124ef() local_unnamed_addr {
dec_label_pc_124ef:
  %v0_124ef = load i32, i32* @eax, align 8
  ret i32 %v0_124ef
}

define i32 @function_124f4() local_unnamed_addr {
dec_label_pc_124f4:
  %v0_124fc = load i32, i32* @eax, align 8
  ret i32 %v0_124fc
}

define i32 @_ZNSt13runtime_errorC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12500:
  ret i32 %arg1
}

define i32 @function_12551() local_unnamed_addr {
dec_label_pc_12551:
  %v0_12551 = call i32 @function_1256a()
  ret i32 %v0_12551
}

define i32 @function_12554() local_unnamed_addr {
dec_label_pc_12554:
  %eax.global-to-local = alloca i32, align 4
  %v0_12554 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12554
}

define i32 @function_1256a() local_unnamed_addr {
dec_label_pc_1256a:
  %v0_1256a = load i32, i32* @ebp, align 4
  %v1_1256a = add i32 %v0_1256a, -12
  %v2_1256a = inttoptr i32 %v1_1256a to i32*
  %v3_1256a = load i32, i32* %v2_1256a, align 4
  %v2_1256d = xor i32 %v3_1256a, 30
  %v3_1256d = icmp eq i32 %v2_1256d, 0
  store i32 %v2_1256d, i32* @eax, align 8
  br i1 %v3_1256d, label %bb, label %dec_label_pc_12576

bb:                                               ; preds = %dec_label_pc_1256a
  %v1_12574 = call i32 @function_1257b()
  br label %dec_label_pc_12576

dec_label_pc_12576:                               ; preds = %bb, %dec_label_pc_1256a
  %v2_12574 = phi i32 [ %v1_12574, %bb ], [ %v2_1256d, %dec_label_pc_1256a ]
  ret i32 %v2_12574
}

define i32 @function_1257b() local_unnamed_addr {
dec_label_pc_1257b:
  %v0_12580 = load i32, i32* @eax, align 8
  ret i32 %v0_12580
}

define i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12582:
  ret i32 0
}

define i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %arg1) local_unnamed_addr {
dec_label_pc_125b1:
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @edx, align 8
  ret i32 0
}

define i32 @_ZN5boost6detail7variant9copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125e6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_12609 = call i32 @function_26e2c(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost8signals26detail23foreign_void_shared_ptrC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1262a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1262a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1264a = inttoptr i32 %arg2 to i32*
  %v2_12656 = load i32, i32* %v1_1264a, align 4
  store i32 %v2_12656, i32* %arg1, align 4
  store i32 %v0_1262a, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost8signals26detail23foreign_void_shared_ptrD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12678:
  %v2_12692 = load i32, i32* %arg1, align 4
  %v1_12694 = icmp eq i32 %v2_12692, 0
  br i1 %v1_12694, label %dec_label_pc_126ae, label %dec_label_pc_12698

dec_label_pc_12698:                               ; preds = %dec_label_pc_12678
  br label %dec_label_pc_126ae

dec_label_pc_126ae:                               ; preds = %dec_label_pc_12698, %dec_label_pc_12678
  store i32 0, i32* @eax, align 8
  %v1_126b8 = call i32 @function_126bf()
  ret i32 %v1_126b8
}

define i32 @function_126bf() local_unnamed_addr {
dec_label_pc_126bf:
  %v0_126c0 = load i32, i32* @eax, align 8
  ret i32 %v0_126c0
}

define i32 @_ZNK5boost8signals26detail21foreign_void_weak_ptr4lockEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126c2:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v1_126e5 = call i32 @function_26f68(i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail21foreign_void_weak_ptr7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12718:
  store i32 %arg1, i32* @eax, align 8
  %v1_12735 = call i32 @function_26fbe(i32 %arg1)
  ret i32 %v1_12735

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5boost8signals29slot_base15tracked_objectsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1275a:
  store i32 %arg1, i32* @eax, align 8
  %v2_1277e = call i32 @function_12785(i32 %arg1)
  ret i32 %v2_1277e
}

define i32 @function_12785(i32 %arg1) local_unnamed_addr {
dec_label_pc_12785:
  %v0_12786 = load i32, i32* @eax, align 8
  ret i32 %v0_12786
}

define i32 @_ZNK5boost8signals29slot_base7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12788:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i1 true, i1* @zf, align 1
  %v2_1279f = ptrtoint i32* %stack_var_-28 to i32
  %v1_127a5 = call i32 @function_2708a(i32 %v2_1279f)
  store i32 %arg1, i32* @eax, align 8
  %v1_127b0 = call i32 @function_24ee2(i32 %arg1)
  store i32 %v1_127b0, i32* @eax, align 8
  %v2_127b5 = ptrtoint i32* %stack_var_-36 to i32
  %v2_127bf = call i32 @function_270be(i32 %v2_127b5, i32 %v1_127b0)
  %v16_127c4 = ptrtoint i32* %stack_var_-64 to i32
  %v3_127c7 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_127c7, i32* %stack_var_-28, align 4
  %v2_1280a = ptrtoint i32* %stack_var_-24 to i32
  %v2_127de = ptrtoint i32* %stack_var_-17 to i32
  br label %dec_label_pc_127ff

dec_label_pc_127cf:                               ; preds = %dec_label_pc_127ff
  store i32 %v2_1279f, i32* @eax, align 8
  %v1_127d2 = load i32, i32* @esp, align 4
  %v2_127d2 = inttoptr i32 %v1_127d2 to i32*
  store i32 %v2_1279f, i32* %v2_127d2, align 4
  %v0_127d5 = call i32 @function_271ec()
  %v1_127da = load i32, i32* @esp, align 4
  %v2_127da = add i32 %v1_127da, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_127da = inttoptr i32 %v2_127da to i32*
  store i32 %v0_127d5, i32* %v3_127da, align 4
  store i32 %v2_127de, i32* @eax, align 8
  %v1_127e1 = load i32, i32* @esp, align 4
  %v2_127e1 = inttoptr i32 %v1_127e1 to i32*
  store i32 %v2_127de, i32* %v2_127e1, align 4
  %v0_127e4 = call i32 @function_272d6()
  %v4_127e9 = trunc i32 %v0_127e4 to i8
  %v5_127e9 = icmp eq i8 %v4_127e9, 0
  br i1 %v5_127e9, label %dec_label_pc_127f4, label %dec_label_pc_12837

dec_label_pc_127f4:                               ; preds = %dec_label_pc_127cf
  store i32 %v2_1279f, i32* @eax, align 8
  %v1_127f7 = load i32, i32* @esp, align 4
  %v2_127f7 = inttoptr i32 %v1_127f7 to i32*
  store i32 %v2_1279f, i32* %v2_127f7, align 4
  %v0_127fa = call i32 @function_271b2()
  %v1_12802.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_127ff

dec_label_pc_127ff:                               ; preds = %dec_label_pc_127f4, %dec_label_pc_12788
  %v1_12802 = phi i32 [ %v1_12802.pre, %dec_label_pc_127f4 ], [ %v16_127c4, %dec_label_pc_12788 ]
  store i32 %arg1, i32* @eax, align 8
  %v2_12802 = inttoptr i32 %v1_12802 to i32*
  store i32 %arg1, i32* %v2_12802, align 4
  %v0_12805 = load i32, i32* %stack_var_-28, align 4
  %v1_12805 = call i32 @function_24ee2(i32 %v0_12805)
  store i32 %v1_12805, i32* @eax, align 8
  %v1_1280d = load i32, i32* @esp, align 4
  %v2_1280d = add i32 %v1_1280d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1280d = inttoptr i32 %v2_1280d to i32*
  store i32 %v1_12805, i32* %v3_1280d, align 4
  %v1_12811 = load i32, i32* @esp, align 4
  %v2_12811 = inttoptr i32 %v1_12811 to i32*
  store i32 %v2_1280a, i32* %v2_12811, align 4
  %v0_12814 = call i32 @function_2710e()
  %v0_12819 = load i32, i32* @esp, align 4
  %v3_1281f = inttoptr i32 %v0_12819 to i32*
  store i32 %v2_1280a, i32* %v3_1281f, align 4
  store i32 %v2_1279f, i32* @eax, align 8
  %v1_12826 = load i32, i32* @esp, align 4
  %v2_12826 = inttoptr i32 %v1_12826 to i32*
  store i32 %v2_1279f, i32* %v2_12826, align 4
  %v0_12829 = call i32 @function_2715e()
  %v4_1282e = trunc i32 %v0_12829 to i8
  %v5_1282e = icmp eq i8 %v4_1282e, 0
  %v1_12830 = icmp eq i1 %v5_1282e, false
  br i1 %v1_12830, label %dec_label_pc_127cf, label %dec_label_pc_12837

dec_label_pc_12837:                               ; preds = %dec_label_pc_127ff, %dec_label_pc_127cf
  %storemerge = phi i32 [ 1, %dec_label_pc_127cf ], [ 0, %dec_label_pc_127ff ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_12841 = call i32 @function_12848()
  ret i32 %v1_12841

; uselistorder directives
  uselistorder i32 %v2_1279f, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 (i32)* @function_24ee2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
}

define i32 @function_12848() local_unnamed_addr {
dec_label_pc_12848:
  %v0_12849 = load i32, i32* @eax, align 8
  ret i32 %v0_12849
}

define i32 @_ZN5boost10shared_ptrIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1284a:
  %v1_12864 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_12864, i32* @eax, align 8
  %v1_1286a = call i32 @function_22d4c(i32 %v1_12864)
  store i32 0, i32* @eax, align 8
  %v1_12879 = call i32 @function_12880()
  ret i32 %v1_12879
}

define i32 @function_12880() local_unnamed_addr {
dec_label_pc_12880:
  %v0_12881 = load i32, i32* @eax, align 8
  ret i32 %v0_12881
}

define i32 @_ZN5boost8signals26detail20connection_body_base10disconnectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12882:
  %stack_var_-20 = alloca i32, align 4
  %v2_128a0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_128a0, i32* @eax, align 8
  %v2_128a6 = call i32 @function_27412(i32 %v2_128a0, i32 %arg1)
  %v1_128b1 = call i32 @function_25156(i32 %arg1)
  store i32 %v2_128a0, i32* @eax, align 8
  %v1_128bc = call i32 @function_2748a(i32 %v2_128a0)
  store i32 0, i32* @eax, align 8
  %v1_128cb = call i32 @function_128d2()
  ret i32 %v1_128cb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_128d2() local_unnamed_addr {
dec_label_pc_128d2:
  %v0_128d3 = load i32, i32* @eax, align 8
  ret i32 %v0_128d3
}

define i32 @_ZN5boost8signals26detail20connection_body_base17nolock_disconnectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_128d4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_128d4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_128ee = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_128ee = inttoptr i32 %v1_128ee to i8*
  store i8 0, i8* %v2_128ee, align 1
  store i32 %v0_128d4, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost10shared_ptrIvEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12906:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_12926 = inttoptr i32 %arg2 to i32*
  %v2_12926 = load i32, i32* %v1_12926, align 4
  store i32 %v2_12926, i32* %arg1, align 4
  %v1_12930 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_12936 = add i32 %tmp103, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_12936, i32* @eax, align 8
  %v2_12940 = call i32 @function_22e48(i32 %v1_12936, i32 %v1_12930)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20connection_body_base7blockedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12958:
  %v1_12972 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_12978 = call i32 @function_27616(i32 %v1_12972)
  %v1_1297d = xor i32 %v1_12978, 1
  store i32 %v1_1297d, i32* @eax, align 8
  %v1_1298a = call i32 @function_12991()
  ret i32 %v1_1298a
}

define i32 @function_12991() local_unnamed_addr {
dec_label_pc_12991:
  %v0_12992 = load i32, i32* @eax, align 8
  ret i32 %v0_12992
}

define i32 @_ZNK5boost8signals26detail20connection_body_base21nolock_nograb_blockedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12994:
  %v1_129b1 = call i32 @function_25380(i32 %arg1)
  %v1_129b6 = xor i32 %v1_129b1, 1
  %v4_129b6 = trunc i32 %v1_129b6 to i8
  %v5_129b9 = icmp eq i8 %v4_129b6, 0
  %v1_129bb = icmp eq i1 %v5_129b9, false
  br i1 %v1_129bb, label %dec_label_pc_129d8, label %dec_label_pc_129bd

dec_label_pc_129bd:                               ; preds = %dec_label_pc_12994
  %v1_129c3 = call i32 @function_252ec(i32 %arg1)
  %v4_129c8 = trunc i32 %v1_129c3 to i8
  %v5_129c8 = icmp ne i8 %v4_129c8, 0
  %. = zext i1 %v5_129c8 to i32
  br label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129bd, %dec_label_pc_12994
  %storemerge = phi i32 [ 1, %dec_label_pc_12994 ], [ %., %dec_label_pc_129bd ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_129e2 = call i32 @function_129e9()
  ret i32 %v1_129e2
}

define i32 @function_129e9() local_unnamed_addr {
dec_label_pc_129e9:
  %v0_129ea = load i32, i32* @eax, align 8
  ret i32 %v0_129ea
}

define i32 @_ZNK5boost8signals26detail20connection_body_base23nolock_nograb_connectedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_129ec:
  %ebp.global-to-local = alloca i32, align 4
  %v0_129ec = load i32, i32* %ebp.global-to-local, align 4
  %v1_12a06 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_12a06 = inttoptr i32 %v1_12a06 to i8*
  %v3_12a06 = load i8, i8* %v2_12a06, align 1
  %v4_12a06 = zext i8 %v3_12a06 to i32
  store i32 %v0_129ec, i32* %ebp.global-to-local, align 4
  ret i32 %v4_12a06
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_baseC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_12a1e:
  %v4_12a35 = ptrtoint i8* %arg1 to i32
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v3_12a45 = call i32 @function_12a4c(i32 %v4_12a35)
  ret i32 %v3_12a45

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_12a4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a4c:
  %v0_12a4d = load i32, i32* @eax, align 8
  ret i32 %v0_12a4d
}

define i32 @_ZNK5boost11multi_index6detail21scope_guard_impl_base7dismissEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_12a4e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_12a4e = load i32, i32* %ebp.global-to-local, align 4
  store i8 1, i8* %arg1, align 1
  store i32 %v0_12a4e, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_baseD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a7e:
  ret i32 0
}

define i32 @_ZN5boost8signals25mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12aa8:
  ret i32 %arg1
}

define i32 @function_12ac9() local_unnamed_addr {
dec_label_pc_12ac9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12ac9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12ac9 = add i32 %v0_12ac9, 862319685
  %v2_12ac9 = inttoptr i32 %v1_12ac9 to i32*
  %v3_12ac9 = load i32, i32* %v2_12ac9, align 4
  %v4_12ac9 = add i32 %v3_12ac9, -1
  store i32 %v4_12ac9, i32* %v2_12ac9, align 4
  %v0_12acf = load i32, i32* %eax.global-to-local, align 8
  %v1_12acf = add i32 %v0_12acf, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_12acf, i32* %eax.global-to-local, align 8
  ret i32 %v1_12acf
}

define i32 @_ZN5boost8signals25mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ade:
  ret i32 %arg1
}

define i32 @function_12aff() local_unnamed_addr {
dec_label_pc_12aff:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12aff = load i32, i32* %ebx.global-to-local, align 4
  %v1_12aff = add i32 %v0_12aff, 862319685
  %v2_12aff = inttoptr i32 %v1_12aff to i32*
  %v3_12aff = load i32, i32* %v2_12aff, align 4
  %v4_12aff = add i32 %v3_12aff, -1
  store i32 %v4_12aff, i32* %v2_12aff, align 4
  %v0_12b05 = load i32, i32* %eax.global-to-local, align 8
  %v1_12b05 = add i32 %v0_12b05, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_12b05, i32* %eax.global-to-local, align 8
  ret i32 %v1_12b05
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b14:
  store i32 %arg1, i32* @eax, align 8
  %v1_12b31 = call i32 @function_23c26(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b4a:
  %v1_12b67 = call i32 @function_23b52(i32 %arg1)
  ret i32 0
}

define i32 @_ZNK12CChainParams7DataDirEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b80:
  %v1_12b9a = add i32 %arg1, 104
  store i32 %v1_12b9a, i32* @eax, align 8
  %v2_12ba7 = call i32 @function_12bae(i32 %arg1)
  ret i32 %v2_12ba7
}

define i32 @function_12bae(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bae:
  %v0_12baf = load i32, i32* @eax, align 8
  ret i32 %v0_12baf
}

define i32 @_ZNK5boost8signals214no_slots_error4whatEv(i32 %arg1) {
dec_label_pc_12bb0:
  store i32 ptrtoint ([32 x i8]* @global_var_5b24.2467 to i32), i32* @eax, align 8
  %v2_12bd6 = call i32 @function_12bdd(i32 %arg1)
  ret i32 %v2_12bd6
}

define i32 @function_12bdd(i32 %arg1) local_unnamed_addr {
dec_label_pc_12bdd:
  %v0_12bde = load i32, i32* @eax, align 8
  ret i32 %v0_12bde
}

define i32 @_Z1_PKc() local_unnamed_addr {
dec_label_pc_12bdf:
  %stack_var_-24 = alloca i32, align 4
  %v2_12bfe = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_12bfe
}

define i32 @function_12cb5() local_unnamed_addr {
dec_label_pc_12cb5:
  %eax.global-to-local = alloca i32, align 4
  %v0_12cb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12cb6
}

define i32 @function_12cbe() local_unnamed_addr {
dec_label_pc_12cbe:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12cbe = load i32, i32* %ecx.global-to-local, align 4
  %v1_12cbe = add i32 %v0_12cbe, -1996297229
  %v2_12cbe = inttoptr i32 %v1_12cbe to i32*
  %v3_12cbe = load i32, i32* %v2_12cbe, align 4
  %v4_12cbe = add i32 %v3_12cbe, -1
  store i32 %v4_12cbe, i32* %v2_12cbe, align 4
  %v0_12cc4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12cc4
}

define i32 @function_12cda() local_unnamed_addr {
dec_label_pc_12cda:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_12cdf() local_unnamed_addr {
dec_label_pc_12cdf:
  %eax.global-to-local = alloca i32, align 4
  %v0_12ce5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12ce5
}

define i32 @_ZN5boost15program_options12basic_optionIcED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ce8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_12ceb = load i32, i32* %ebx.global-to-local, align 4
  %v1_12d03 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_12d03, i32* @eax, align 8
  %v1_12d09 = call i32 @function_27d70(i32 %v1_12d03)
  %v1_12d11 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_12d11, i32* @eax, align 8
  %v1_12d17 = call i32 @function_27d70(i32 %v1_12d11)
  store i32 %v0_12ceb, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_27d70, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d6a:
  %v1_12d84 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_12d84, i32* @eax, align 8
  %v1_12d8a = call i32 @function_25a52(i32 %v1_12d84)
  store i32 0, i32* @eax, align 8
  %v1_12d99 = call i32 @function_12da0()
  ret i32 %v1_12d99
}

define i32 @function_12da0() local_unnamed_addr {
dec_label_pc_12da0:
  %v0_12da1 = load i32, i32* @eax, align 8
  ret i32 %v0_12da1
}

define i32 @_ZNSt3setISsSt4lessISsESaISsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12da2:
  store i32 %arg1, i32* @eax, align 8
  %v1_12dbf = call i32 @function_27f10(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_12dce = call i32 @function_12dd5()
  ret i32 %v1_12dce

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12dd5() local_unnamed_addr {
dec_label_pc_12dd5:
  %v0_12dd6 = load i32, i32* @eax, align 8
  ret i32 %v0_12dd6
}

define i32 @_ZN5boost15program_options6detail27common_config_file_iteratorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12dd8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_12df3 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_12df3, i32* @eax, align 8
  %v1_12df9 = call i32 @function_27e16(i32 %v1_12df3)
  store i32 ptrtoint (%vtable_38e70_type* @global_var_38e70.2468 to i32), i32* %arg1, align 4
  %v1_12e0a = add i32 %tmp99, ptrtoint (i32* @global_var_2c.2469 to i32)
  store i32 %v1_12e0a, i32* @eax, align 8
  %v1_12e10 = call i32 @function_27eda(i32 %v1_12e0a)
  %v1_12e18 = add i32 %tmp99, 68
  store i32 %v1_12e18, i32* @eax, align 8
  %v1_12e1e = call i32 @function_27eda(i32 %v1_12e18)
  %v1_12e26 = add i32 %tmp99, ptrtoint (i32* @global_var_5c.2450 to i32)
  ret i32 %v1_12e26

; uselistorder directives
  uselistorder i32 (i32)* @function_27eda, { 1, 0 }
}

define i32 @function_12e30() local_unnamed_addr {
dec_label_pc_12e30:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12e30 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12e30 = add i32 %v0_12e30, -1065098171
  %v2_12e30 = inttoptr i32 %v1_12e30 to i32*
  %v3_12e30 = load i32, i32* %v2_12e30, align 4
  %v4_12e30 = add i32 %v3_12e30, -1
  store i32 %v4_12e30, i32* %v2_12e30, align 4
  %v0_12e36 = load i32, i32* %eax.global-to-local, align 8
  %v2_12e38 = add i32 %v0_12e36, zext (i8 add (i8 ptrtoint (i8* @global_var_24.2401 to i8), i8 -119) to i32)
  %v16_12e38 = and i32 %v2_12e38, 255
  %v18_12e38 = and i32 %v0_12e36, -256
  %v19_12e38 = or i32 %v16_12e38, %v18_12e38
  store i32 %v19_12e38, i32* %eax.global-to-local, align 8
  %v0_12e3a = call i32 @function_27fb4()
  store i32 %v0_12e3a, i32* %eax.global-to-local, align 8
  %v0_12e3f = load i32, i32* @ebp, align 4
  %v1_12e3f = add i32 %v0_12e3f, -12
  %v2_12e3f = inttoptr i32 %v1_12e3f to i32*
  %v3_12e3f = load i32, i32* %v2_12e3f, align 4
  %v2_12e42 = xor i32 %v3_12e3f, 30
  %v3_12e42 = icmp eq i32 %v2_12e42, 0
  store i32 %v2_12e42, i32* @eax, align 8
  br i1 %v3_12e42, label %bb, label %dec_label_pc_12e4b

bb:                                               ; preds = %dec_label_pc_12e30
  %v1_12e49 = call i32 @function_12e90()
  store i32 %v1_12e49, i32* @eax, align 8
  br label %dec_label_pc_12e4b

dec_label_pc_12e4b:                               ; preds = %bb, %dec_label_pc_12e30
  %v0_12e4b = call i32 @function_12e8b()
  store i32 %v0_12e4b, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e4b

; uselistorder directives
  uselistorder i32 %v0_12e36, { 1, 0 }
}

define i32 @function_12e4d() local_unnamed_addr {
dec_label_pc_12e4d:
  %eax.global-to-local = alloca i32, align 4
  %v0_12e4d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_12e4d, i32* @ebx, align 4
  %v0_12e4f = load i32, i32* @ebp, align 4
  %v1_12e4f = add i32 %v0_12e4f, -28
  %v2_12e4f = inttoptr i32 %v1_12e4f to i32*
  %v3_12e4f = load i32, i32* %v2_12e4f, align 4
  %v1_12e52 = add i32 %v3_12e4f, 68
  store i32 %v1_12e52, i32* @eax, align 8
  %v1_12e58 = call i32 @function_25b7a(i32 %v1_12e52)
  store i32 %v1_12e58, i32* %eax.global-to-local, align 8
  %v0_12e5d = call i32 @function_12e61()
  store i32 %v0_12e5d, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e5d
}

define i32 @function_12e5f() local_unnamed_addr {
dec_label_pc_12e5f:
  %eax.global-to-local = alloca i32, align 4
  %v0_12e5f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e5f
}

define i32 @function_12e61() local_unnamed_addr {
dec_label_pc_12e61:
  %v0_12e61 = load i32, i32* @ebp, align 4
  %v1_12e61 = add i32 %v0_12e61, -28
  %v2_12e61 = inttoptr i32 %v1_12e61 to i32*
  %v3_12e61 = load i32, i32* %v2_12e61, align 4
  %v1_12e64 = add i32 %v3_12e61, ptrtoint (i32* @global_var_2c.2469 to i32)
  store i32 %v1_12e64, i32* @eax, align 8
  %v1_12e6a = call i32 @function_25b7a(i32 %v1_12e64)
  %v0_12e6f = call i32 @function_12e73()
  ret i32 %v0_12e6f

; uselistorder directives
  uselistorder i32 (i32)* @function_25b7a, { 1, 0 }
}

define i32 @function_12e71() local_unnamed_addr {
dec_label_pc_12e71:
  %eax.global-to-local = alloca i32, align 4
  %v0_12e71 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e71
}

define i32 @function_12e73() local_unnamed_addr {
dec_label_pc_12e73:
  %v0_12e81 = load i32, i32* @ebx, align 4
  ret i32 %v0_12e81
}

define i32 @function_12e8b() local_unnamed_addr {
dec_label_pc_12e8b:
  %v0_12e8b = load i32, i32* @eax, align 8
  ret i32 %v0_12e8b
}

define i32 @function_12e90() local_unnamed_addr {
dec_label_pc_12e90:
  %v0_12e95 = load i32, i32* @eax, align 8
  ret i32 %v0_12e95
}

define i32 @_ZN5boost15program_options6detail27common_config_file_iteratorD1Ev(i32* %arg1) {
dec_label_pc_12e96:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38e70_type* @global_var_38e70.2468 to i32), i32* %arg1, align 4
  %v1_12ec8 = add i32 %tmp100, 68
  store i32 %v1_12ec8, i32* @eax, align 8
  %v1_12ece = call i32 @function_25c38(i32 %v1_12ec8)
  %v1_12ed6 = add i32 %tmp100, ptrtoint (i32* @global_var_2c.2469 to i32)
  store i32 %v1_12ed6, i32* @eax, align 8
  %v1_12edc = call i32 @function_25c38(i32 %v1_12ed6)
  %v1_12ee4 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_12ee4, i32* @eax, align 8
  %v1_12eea = call i32 @function_25c00(i32 %v1_12ee4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38e70_type* @global_var_38e70.2468 to i32), { 1, 0 }
}

define i32 @_ZN5boost15program_options6detail27common_config_file_iteratorD0Ev(i32 %arg1) {
dec_label_pc_12f5e:
  ret i32 %arg1
}

define i32 @function_12f8a() local_unnamed_addr {
dec_label_pc_12f8a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_12f8a = load i32, i32* %ebx.global-to-local, align 4
  %v1_12f8a = add i32 %v0_12f8a, 862319685
  %v2_12f8a = inttoptr i32 %v1_12f8a to i32*
  %v3_12f8a = load i32, i32* %v2_12f8a, align 4
  %v4_12f8a = add i32 %v3_12f8a, -1
  store i32 %v4_12f8a, i32* %v2_12f8a, align 4
  %v0_12f90 = load i32, i32* %eax.global-to-local, align 8
  %v1_12f90 = add i32 %v0_12f90, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_12f90, i32* %eax.global-to-local, align 8
  ret i32 %v1_12f90
}

define i32 @_ZN5boost15program_options6detail27common_config_file_iterator7getlineERSs(i32 %arg1, i32 %arg2) {
dec_label_pc_12f9e:
  store i32 0, i32* @eax, align 8
  %v3_12fca = call i32 @function_12fd1(i32 %arg2, i32 %arg1)
  ret i32 %v3_12fca
}

define i32 @function_12fd1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fd1:
  %v0_12fd2 = load i32, i32* @eax, align 8
  ret i32 %v0_12fd2
}

define i32 @_ZNK5boost15program_options6detail12null_deleterclEPKv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fd4:
  store i32 0, i32* @eax, align 8
  %v3_12ffb = call i32 @function_13002(i32 %arg2, i32 %arg1)
  ret i32 %v3_12ffb
}

define i32 @function_13002(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13002:
  %v0_13003 = load i32, i32* @eax, align 8
  ret i32 %v0_13003
}

define i32 @_ZN5CInitC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13004:
  ret i32 0
}

define i32 @function_1303d() local_unnamed_addr {
dec_label_pc_1303d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1303d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1303d
}

define i32 @function_13043() local_unnamed_addr {
dec_label_pc_13043:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_13043 = add i32 %tmp91, -32
  %v2_13043 = inttoptr i32 %v1_13043 to i32*
  store i32 0, i32* %v2_13043, align 4
  %v0_1304a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1304a
}

define i32 @function_1304c() local_unnamed_addr {
dec_label_pc_1304c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13058 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_13058, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_13066 = inttoptr i32 %v0_13058 to i8*
  call void @__asm_rep_stosd_memset(i8* %v1_13066, i32 0, i32 21)
  %v0_13074 = load i32, i32* inttoptr (i32 21748 to i32*), align 4
  store i32 %v0_13074, i32* %eax.global-to-local, align 8
  %v0_13079 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13079 = add i32 %v0_13079, -32
  %v2_13079 = inttoptr i32 %v1_13079 to i32*
  %v3_13079 = load i32, i32* %v2_13079, align 4
  %v2_1307c = mul i32 %v3_13079, 4
  %v2_1307f = add i32 %v2_1307c, %v0_13074
  store i32 %v2_1307f, i32* %eax.global-to-local, align 8
  %v0_13081 = load i32, i32* %ebx.global-to-local, align 4
  %v2_13081 = inttoptr i32 %v2_1307f to i32*
  store i32 %v0_13081, i32* %v2_13081, align 4
  %v0_13083 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13083 = add i32 %v0_13083, -32
  %v2_13083 = inttoptr i32 %v1_13083 to i32*
  %v3_13083 = load i32, i32* %v2_13083, align 4
  %v4_13083 = add i32 %v3_13083, 1
  store i32 %v4_13083, i32* %v2_13083, align 4
  %v22_13083 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_13083

; uselistorder directives
  uselistorder i32* inttoptr (i32 21748 to i32*), { 0, 2, 1 }
}

define i32 @function_130a2() local_unnamed_addr {
dec_label_pc_130a2:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v0_130a2 = call i32 @function_13152()
  %v1_130a7 = add i32 %tmp91, -28
  %v2_130a7 = inttoptr i32 %v1_130a7 to i32*
  %v3_130a7 = load i32, i32* %v2_130a7, align 4
  %v2_130aa = xor i32 %v3_130a7, 30
  %v3_130aa = icmp eq i32 %v2_130aa, 0
  store i32 %v2_130aa, i32* @eax, align 8
  br i1 %v3_130aa, label %bb, label %dec_label_pc_130b3

bb:                                               ; preds = %dec_label_pc_130a2
  %v1_130b1 = call i32 @function_130ce()
  store i32 %v1_130b1, i32* @eax, align 8
  br label %dec_label_pc_130b3

dec_label_pc_130b3:                               ; preds = %bb, %dec_label_pc_130a2
  %v0_130b3 = call i32 @function_130c9()
  ret i32 %v0_130b3
}

define i32 @function_130c9() local_unnamed_addr {
dec_label_pc_130c9:
  %v0_130c9 = load i32, i32* @eax, align 8
  ret i32 %v0_130c9
}

define i32 @function_130ce() local_unnamed_addr {
dec_label_pc_130ce:
  %v0_130d5 = load i32, i32* @eax, align 8
  ret i32 %v0_130d5
}

define i32 @_ZN5CInitD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_130d6:
  ret i32 0
}

define i32 @function_130f9() local_unnamed_addr {
dec_label_pc_130f9:
  %v2_130fc = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_130fc = load i32, i32* @eax, align 8
  %v4_130fc = trunc i32 %v3_130fc to i8
  %v5_130fc = add i8 %v4_130fc, %v2_130fc
  %v21_130fc = inttoptr i32 %v3_130fc to i8*
  store i8 %v5_130fc, i8* %v21_130fc, align 1
  %v2_130ff = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_130ff = load i32, i32* @eax, align 8
  %v4_130ff = trunc i32 %v3_130ff to i8
  %v5_130ff = add i8 %v4_130ff, %v2_130ff
  %v21_130ff = inttoptr i32 %v3_130ff to i8*
  store i8 %v5_130ff, i8* %v21_130ff, align 1
  %v0_13101 = call i32 @function_1312a()
  ret i32 %v0_13101
}

define i32 @function_1312a() local_unnamed_addr {
dec_label_pc_1312a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13138(i16 %arg1) local_unnamed_addr {
dec_label_pc_13138:
  %eax.global-to-local = alloca i32, align 4
  %v6_13138 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_13138
}

define i32 @function_13152() local_unnamed_addr {
dec_label_pc_13152:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13156() local_unnamed_addr {
dec_label_pc_13156:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13156 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13156 = add i32 %v0_13156, 1566258372
  %v2_13156 = inttoptr i32 %v1_13156 to i32*
  %v3_13156 = load i32, i32* %v2_13156, align 4
  %v4_13156 = add i32 %v3_13156, 1
  store i32 %v4_13156, i32* %v2_13156, align 4
  %v0_1315c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1315c
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1315e:
  ret i32 %arg1
}

define i32 @_ZNSt4pairISsSsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_131aa:
  store i32 0, i32* @eax, align 8
  %v2_131e5 = call i32 @function_13205(i32 %arg1)
  store i32 %v2_131e5, i32* @eax, align 8
  %v0_131e7 = call i32 @function_13200()
  ret i32 %v0_131e7
}

define i32 @function_131ea() local_unnamed_addr {
dec_label_pc_131ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_131ea = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_131ea
}

define i32 @function_13200() local_unnamed_addr {
dec_label_pc_13200:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13205(i32 %arg1) local_unnamed_addr {
dec_label_pc_13205:
  store i32 %arg1, i32* @ebx, align 4
  %v0_1320a = load i32, i32* @eax, align 8
  ret i32 %v0_1320a
}

define i32 @_ZN5boost10shared_ptrISiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1320c:
  %v1_13226 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1322c = call i32 @function_2370e(i32 %v1_13226)
  ret i32 0
}

define i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev(i32* %arg1) {
dec_label_pc_13244:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38db0_type* @global_var_38db0.2470 to i32), i32* %arg1, align 4
  %v1_13268 = add i32 %tmp3, 100
  store i32 %v1_13268, i32* @eax, align 8
  %v1_1326e = call i32 @function_26450(i32 %v1_13268)
  %v1_13279 = call i32 @function_260da(i32 %tmp3)
  %v1_13288 = call i32 @function_132ae()
  ret i32 %tmp3
}

define i32 @function_13295() local_unnamed_addr {
dec_label_pc_13295:
  %v0_13295 = call i32 @function_132ae()
  ret i32 %v0_13295

; uselistorder directives
  uselistorder i32 ()* @function_132ae, { 1, 0 }
}

define i32 @function_13298() local_unnamed_addr {
dec_label_pc_13298:
  %eax.global-to-local = alloca i32, align 4
  %v0_13298 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13298
}

define i32 @function_132ae() local_unnamed_addr {
dec_label_pc_132ae:
  %v0_132ae = load i32, i32* @ebp, align 4
  %v1_132ae = add i32 %v0_132ae, -12
  %v2_132ae = inttoptr i32 %v1_132ae to i32*
  %v3_132ae = load i32, i32* %v2_132ae, align 4
  %v2_132b1 = xor i32 %v3_132ae, 30
  ret i32 %v2_132b1
}

define i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED0Ev(i32 %arg1) {
dec_label_pc_132c6:
  %v1_132e3 = call i32 @function_2650a(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13306:
  store i32 %arg1, i32* @eax, align 8
  %v1_13323 = call i32 @function_29e70(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_13332 = call i32 @function_13339()
  ret i32 %v1_13332

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13339() local_unnamed_addr {
dec_label_pc_13339:
  %v0_1333a = load i32, i32* @eax, align 8
  ret i32 %v0_1333a
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1333c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1333c = load i32, i32* %ebp.global-to-local, align 4
  %v1_13356 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13356 = inttoptr i32 %v1_13356 to i32*
  %v3_13356 = load i32, i32* %v2_13356, align 4
  %v2_1335e = load i32, i32* %arg1, align 4
  %v2_13362 = sub i32 %v3_13356, %v2_1335e
  store i32 %v0_1333c, i32* %ebp.global-to-local, align 4
  ret i32 %v2_13362
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1337a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1337a = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_1337a, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_133ae:
  %v1_133cb = call i32 @function_2a970(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_133da = call i32 @function_133e1()
  ret i32 %v1_133da
}

define i32 @function_133e1() local_unnamed_addr {
dec_label_pc_133e1:
  %v0_133e2 = load i32, i32* @eax, align 8
  ret i32 %v0_133e2
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_133e4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_133fe = load i32, i32* %arg1, align 4
  store i32 %v2_133fe, i32* @eax, align 8
  %v2_1340a = call i32 @function_13411(i32 %tmp99)
  ret i32 %v2_1340a
}

define i32 @function_13411(i32 %arg1) local_unnamed_addr {
dec_label_pc_13411:
  %v0_13412 = load i32, i32* @eax, align 8
  ret i32 %v0_13412
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13414:
  %v2_13434 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_13440 = call i32 @function_2725e(i32 %arg1, i32 %v2_13434)
  store i32 %arg1, i32* @eax, align 8
  %v1_13452 = call i32 @function_13459()
  ret i32 %v1_13452

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_13459() local_unnamed_addr {
dec_label_pc_13459:
  %v0_1345a = load i32, i32* @eax, align 8
  ret i32 %v0_1345a
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1345c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38fb0.2442 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1348c = call i32 @function_13493(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1348c
}

define i32 @function_13493(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13493:
  %v0_13494 = load i32, i32* @eax, align 8
  ret i32 %v0_13494
}

define i32 @_ZN5boost16thread_exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13496:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp103, i32* @eax, align 8
  %v2_134c0 = call i32 @function_25702(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.2436 to i32), i32* %arg1, align 4
  %v1_134d1 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_134d1 = inttoptr i32 %v1_134d1 to i32*
  %v3_134d1 = load i32, i32* %v2_134d1, align 4
  %v2_134d7 = add i32 %tmp103, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_134d7 = inttoptr i32 %v2_134d7 to i32*
  store i32 %v3_134d1, i32* %v3_134d7, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39008_type* @global_var_39008.2436 to i32), { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost21thread_resource_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134ee:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_13518 = call i32 @function_26984(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38fd8_type* @global_var_38fd8.2439 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38fd8_type* @global_var_38fd8.2439 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1353a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_13565 = call i32 @function_26a28(i32 %tmp102, i32 %arg2)
  %v1_1356d = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_13573 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_13573, i32* @eax, align 8
  %v2_1357d = call i32 @function_249ae(i32 %v1_13573, i32 %v1_1356d)
  store i32 ptrtoint (%vtable_38d88_type* @global_var_38d88.2471 to i32), i32* %arg1, align 4
  %v2_1358e = inttoptr i32 %v1_13573 to i32*
  store i32 ptrtoint (i32* @global_var_38d9c.2472 to i32), i32* %v2_1358e, align 4
  store i32 0, i32* @eax, align 8
  %v1_1359f = call i32 @function_135bf()
  store i32 %v1_1359f, i32* @eax, align 8
  %v0_135a1 = call i32 @function_135ba()
  ret i32 %v0_135a1

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_135a4() local_unnamed_addr {
dec_label_pc_135a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_135a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_135a4
}

define i32 @function_135ba() local_unnamed_addr {
dec_label_pc_135ba:
  %v0_135ba = load i32, i32* @eax, align 8
  ret i32 %v0_135ba
}

define i32 @function_135bf() local_unnamed_addr {
dec_label_pc_135bf:
  %v0_135c4 = load i32, i32* @eax, align 8
  ret i32 %v0_135c4
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_135c6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_135f0 = call i32 @function_26b00(i32 %tmp103, i32 %arg2)
  %v1_135f8 = add i32 %arg2, 28
  %v1_135fe = add i32 %tmp103, 28
  store i32 %v1_135fe, i32* @eax, align 8
  %v2_13608 = call i32 @function_26a22(i32 %v1_135fe, i32 %v1_135f8)
  store i32 ptrtoint (%vtable_38d28_type* @global_var_38d28.2473 to i32), i32* %arg1, align 4
  %v1_13619 = add i32 %tmp103, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_13619 = inttoptr i32 %v1_13619 to i32*
  store i32 ptrtoint (i32* @global_var_38d44.2474 to i32), i32* %v2_13619, align 4
  %v2_13623 = inttoptr i32 %v1_135fe to i32*
  store i32 ptrtoint (i32* @global_var_38d54.2475 to i32), i32* %v2_13623, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1363d:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1365c = call i32 @function_23696(i32 %arg1)
  store i32 %v1_1365c, i32* @ebx, align 4
  %v2_1366f = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1366f, i32* @eax, align 8
  %v2_1367c = call i32 @function_2ac65(i32 %v2_1366f, i32 %arg1)
  %v0_13681 = load i32, i32* @esp, align 4
  %v10_13681 = icmp eq i32 %v0_13681, 4
  store i1 %v10_13681, i1* @zf, align 1
  %v0_1368b = load i32, i32* @ebx, align 4
  %v2_1368e = call i32 @function_2ad6d(i32 %v0_1368b, i32 %v2_1366f)
  store i32 %v2_1366f, i32* @eax, align 8
  %v1_1369c = call i32 @function_2acb7(i32 %v2_1366f)
  ret i32 96140
}

define i32 @function_136b9() local_unnamed_addr {
dec_label_pc_136b9:
  %ecx.global-to-local = alloca i32, align 4
  %v0_136b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_136b9 = add i32 %v0_136b9, -666530362
  %v2_136b9 = inttoptr i32 %v1_136b9 to i32*
  %v3_136b9 = load i32, i32* %v2_136b9, align 4
  %v4_136b9 = add i32 %v3_136b9, -1
  store i32 %v4_136b9, i32* %v2_136b9, align 4
  %v0_136bf = load i32, i32* @eax, align 8
  %v1_136c2 = call i32 @function_2acb7(i32 %v0_136bf)
  %v0_136c7 = call i32 @function_136cb()
  ret i32 %v0_136c7

; uselistorder directives
  uselistorder i32 (i32)* @function_2acb7, { 1, 0 }
}

define i32 @function_136c9() local_unnamed_addr {
dec_label_pc_136c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_136c9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_136c9
}

define i32 @function_136cb() local_unnamed_addr {
dec_label_pc_136cb:
  %v0_136d3 = load i32, i32* @esi, align 4
  ret i32 %v0_136d3
}

define i32 @_ZN5boost10lock_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136de:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_13708 = call i32 @function_26b74(i32 %tmp102, i32 %arg2)
  store i32 ptrtoint (%vtable_38ff0_type* @global_var_38ff0.2437 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_13720 = call i32 @function_13727()
  ret i32 %v1_13720

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38ff0_type* @global_var_38ff0.2437 to i32), { 3, 2, 1, 0 }
}

define i32 @function_13727() local_unnamed_addr {
dec_label_pc_13727:
  %v0_13728 = load i32, i32* @eax, align 8
  ret i32 %v0_13728
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1372a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_13755 = call i32 @function_26e08(i32 %tmp102, i32 %arg2)
  %v1_1375d = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_13763 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1376d = call i32 @__stack_chk_fail.672(i32 %v1_13763, i32 %v1_1375d)
  store i32 ptrtoint (%vtable_38ce8_type* @global_var_38ce8.2477 to i32), i32* %arg1, align 4
  %v2_1377e = inttoptr i32 %v1_13763 to i32*
  store i32 ptrtoint (i32* @global_var_38cfc.2478 to i32), i32* %v2_1377e, align 4
  store i32 0, i32* @eax, align 8
  %v1_1378f = call i32 @function_137af()
  store i32 %v1_1378f, i32* @eax, align 8
  %v0_13791 = call i32 @function_137aa()
  ret i32 %v0_13791

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_13794() local_unnamed_addr {
dec_label_pc_13794:
  %eax.global-to-local = alloca i32, align 4
  %v0_13794 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13794
}

define i32 @function_137aa() local_unnamed_addr {
dec_label_pc_137aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_137af() local_unnamed_addr {
dec_label_pc_137af:
  %v0_137b4 = load i32, i32* @eax, align 8
  ret i32 %v0_137b4
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137b6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_137e8 = add i32 %arg2, 28
  %v1_137ee = add i32 %tmp102, 28
  store i32 %v1_137ee, i32* @eax, align 8
  %v2_137f8 = call i32 @function_26c12(i32 %v1_137ee, i32 %v1_137e8)
  store i32 ptrtoint (%vtable_38c88_type* @global_var_38c88.2479 to i32), i32* %arg1, align 4
  %v1_13809 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_13809 = inttoptr i32 %v1_13809 to i32*
  store i32 ptrtoint (i32* @global_var_38ca4.2480 to i32), i32* %v2_13809, align 4
  %v2_13813 = inttoptr i32 %v1_137ee to i32*
  store i32 ptrtoint (i32* @global_var_38cb4.2481 to i32), i32* %v2_13813, align 4
  store i32 0, i32* @eax, align 8
  %v1_13824 = call i32 @function_1382b()
  ret i32 %v1_13824

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1382b() local_unnamed_addr {
dec_label_pc_1382b:
  %v0_1382c = load i32, i32* @eax, align 8
  ret i32 %v0_1382c
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1382d:
  %v1_1384c = call i32 @function_23886(i32 %arg1)
  ret i32 %v1_1384c
}

define i32 @function_1385e() local_unnamed_addr {
dec_label_pc_1385e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1385e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1385e
}

define i32 @function_138a9() local_unnamed_addr {
dec_label_pc_138a9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_138a9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_138a9 = add i32 %v0_138a9, -666530362
  %v2_138a9 = inttoptr i32 %v1_138a9 to i32*
  %v3_138a9 = load i32, i32* %v2_138a9, align 4
  %v4_138a9 = add i32 %v3_138a9, -1
  store i32 %v4_138a9, i32* %v2_138a9, align 4
  %v0_138af = load i32, i32* %eax.global-to-local, align 8
  %v1_138b7 = call i32 @function_138bb(i32 %v0_138af)
  store i32 %v1_138b7, i32* %eax.global-to-local, align 8
  ret i32 %v1_138b7
}

define i32 @function_138b9() local_unnamed_addr {
dec_label_pc_138b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_138b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_138b9
}

define i32 @function_138bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_138bb:
  %v0_138c3 = load i32, i32* @esi, align 4
  ret i32 %v0_138c3
}

define i32 @_ZN5boost8weak_ptrINS_6detail16thread_data_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_138ce:
  %v1_138e8 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_138e8, i32* @eax, align 8
  %v1_138ee = call i32 @function_23f96(i32 %v1_138e8)
  ret i32 0
}

define i32 @_ZN5boost23enable_shared_from_thisINS_6detail16thread_data_baseEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13906:
  store i32 %arg1, i32* @eax, align 8
  %v1_13923 = call i32 @function_2b382(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_13932 = call i32 @function_13939()
  ret i32 %v1_13932

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13939() local_unnamed_addr {
dec_label_pc_13939:
  %v0_1393a = load i32, i32* @eax, align 8
  ret i32 %v0_1393a
}

define i32 @_ZN5boost23enable_shared_from_thisINS_6detail16thread_data_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1393c:
  %v1_13959 = call i32 @_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_13968 = call i32 @function_1396f()
  ret i32 %v1_13968
}

define i32 @function_1396f() local_unnamed_addr {
dec_label_pc_1396f:
  %v0_13970 = load i32, i32* @eax, align 8
  ret i32 %v0_13970
}

define i32 @_ZN5boost10shared_ptrINS_6detail16thread_data_baseEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13972:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_13995 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_13995, i32* @eax, align 8
  %v1_1399b = call i32 @function_23e40(i32 %v1_13995)
  store i32 0, i32* @eax, align 8
  %v1_139aa = call i32 @function_139b1()
  ret i32 %v1_139aa
}

define i32 @function_139b1() local_unnamed_addr {
dec_label_pc_139b1:
  %v0_139b2 = load i32, i32* @eax, align 8
  ret i32 %v0_139b2
}

define i32 @_ZNSt3mapIPKvN5boost6detail13tss_data_nodeESt4lessIS1_ESaISt4pairIKS1_S4_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139b4:
  store i32 %arg1, i32* @eax, align 8
  %v1_139d1 = call i32 @function_2b472(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139ea:
  store i32 0, i32* @eax, align 8
  %v2_13a0b = call i32 @function_13a12(i32 %arg1)
  ret i32 %v2_13a0b
}

define i32 @function_13a12(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a12:
  %v0_13a13 = load i32, i32* @eax, align 8
  ret i32 %v0_13a13
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a14:
  ret i32 0
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a3e:
  ret i32 0
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a68:
  ret i32 0
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a92:
  store i32 0, i32* @eax, align 8
  %v2_13ab3 = call i32 @function_13aba(i32 %arg1)
  ret i32 %v2_13ab3
}

define i32 @function_13aba(i32 %arg1) local_unnamed_addr {
dec_label_pc_13aba:
  %v0_13abb = load i32, i32* @eax, align 8
  ret i32 %v0_13abb
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13abc:
  ret i32 0
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ae6:
  ret i32 0
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b10:
  ret i32 0
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b3a:
  store i32 0, i32* @eax, align 8
  %v2_13b5b = call i32 @function_13b62(i32 %arg1)
  ret i32 %v2_13b5b
}

define i32 @function_13b62(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b62:
  %v0_13b63 = load i32, i32* @eax, align 8
  ret i32 %v0_13b63
}

define i32 @_ZN5boost11unique_lockINS_5mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13b64:
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_13b8c = add i32 %tmp5, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13b8c = inttoptr i32 %v1_13b8c to i8*
  store i8 0, i8* %v2_13b8c, align 1
  %v1_13b96 = call i32 @function_27e5e(i32 %tmp5)
  store i32 0, i32* @eax, align 8
  %v1_13ba5 = call i32 @function_13bac()
  ret i32 %v1_13ba5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_13bac() local_unnamed_addr {
dec_label_pc_13bac:
  %v0_13bad = load i32, i32* @eax, align 8
  ret i32 %v0_13bad
}

define i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13bae:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* @eax, align 8
  %v1_13bcb = call i32 @function_2b6a2(i32 %tmp4)
  %v4_13bd0 = trunc i32 %v1_13bcb to i8
  store i1 false, i1* @cf, align 1
  %v5_13bd0 = icmp eq i8 %v4_13bd0, 0
  br i1 %v5_13bd0, label %dec_label_pc_13be1, label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13bae
  %v2_13bd7 = load i32, i32* %arg1, align 4
  store i32 %v2_13bd7, i32* @eax, align 8
  %v1_13bdc = call i32 @function_247c6(i32 %v2_13bd7)
  br label %dec_label_pc_13be1

dec_label_pc_13be1:                               ; preds = %dec_label_pc_13bd4, %dec_label_pc_13bae
  store i32 0, i32* @eax, align 8
  %v1_13beb = call i32 @function_13bf2()
  ret i32 %v1_13beb

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_13bf2() local_unnamed_addr {
dec_label_pc_13bf2:
  %v0_13bf3 = load i32, i32* @eax, align 8
  ret i32 %v0_13bf3
}

define i32 @_ZN5boost9call_onceIPFvvEEEvRNS_9once_flagET_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13bf4:
  %v2_13c19 = load i32, i32* %arg1, align 4
  ret i32 %v2_13c19
}

define i32 @function_13c44() local_unnamed_addr {
dec_label_pc_13c44:
  %v0_13c44 = call i32 @function_c7013c4a()
  ret i32 %v0_13c44
}

define i32 @function_13c60() local_unnamed_addr {
dec_label_pc_13c60:
  %eax.global-to-local = alloca i32, align 4
  %v0_13c60 = load i32, i32* @ebp, align 4
  %v1_13c60 = add i32 %v0_13c60, -44
  %v2_13c60 = inttoptr i32 %v1_13c60 to i32*
  %v3_13c60 = load i32, i32* %v2_13c60, align 4
  store i32 %v3_13c60, i32* %eax.global-to-local, align 8
  %v1_13c63 = add i32 %v3_13c60, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13c63 = inttoptr i32 %v1_13c63 to i32*
  %v3_13c63 = load i32, i32* %v2_13c63, align 4
  %v1_13c66 = inttoptr i32 %v3_13c60 to i32*
  %v2_13c66 = load i32, i32* %v1_13c66, align 4
  %v2_13c68 = or i32 %v2_13c66, %v3_13c63
  %v3_13c68 = icmp eq i32 %v2_13c68, 0
  store i32 %v2_13c68, i32* %eax.global-to-local, align 8
  %v1_13c6c = icmp eq i1 %v3_13c68, false
  br i1 %v1_13c6c, label %bb, label %dec_label_pc_13c72

bb:                                               ; preds = %dec_label_pc_13c60
  %v2_13c6c = call i32 @function_13d44()
  store i32 %v2_13c6c, i32* %eax.global-to-local, align 8
  %v0_13c72.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13c72

dec_label_pc_13c72:                               ; preds = %bb, %dec_label_pc_13c60
  %v0_13c72 = phi i32 [ %v0_13c72.pre, %bb ], [ %v0_13c60, %dec_label_pc_13c60 ]
  %v1_13c72 = add i32 %v0_13c72, -44
  %v2_13c72 = inttoptr i32 %v1_13c72 to i32*
  %v3_13c72 = load i32, i32* %v2_13c72, align 4
  store i32 %v3_13c72, i32* %eax.global-to-local, align 8
  %v1_13c75 = inttoptr i32 %v3_13c72 to i32*
  store i32 1, i32* %v1_13c75, align 4
  %v0_13c7b = load i32, i32* %eax.global-to-local, align 8
  %v1_13c7b = add i32 %v0_13c7b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13c7b = inttoptr i32 %v1_13c7b to i32*
  store i32 0, i32* %v2_13c7b, align 4
  %v3_13c7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_13c7b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5 }
}

define i32 @function_13d08() local_unnamed_addr {
dec_label_pc_13d08:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_13d1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d1e:
  %v0_13d1e = load i1, i1* @zf, align 1
  br i1 %v0_13d1e, label %bb, label %dec_label_pc_13d1e.dec_label_pc_13d20_crit_edge

dec_label_pc_13d1e.dec_label_pc_13d20_crit_edge:  ; preds = %dec_label_pc_13d1e
  %v0_13d3f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_13d20

bb:                                               ; preds = %dec_label_pc_13d1e
  %v1_13d1e = call i32 @function_13d44()
  br label %dec_label_pc_13d20

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13d1e.dec_label_pc_13d20_crit_edge, %bb
  %v0_13d3f = phi i32 [ %v0_13d3f.pre, %dec_label_pc_13d1e.dec_label_pc_13d20_crit_edge ], [ %v1_13d1e, %bb ]
  ret i32 %v0_13d3f

; uselistorder directives
  uselistorder i32 ()* @function_13d44, { 1, 0 }
  uselistorder label %dec_label_pc_13d20, { 1, 0 }
}

define i32 @function_13d44() local_unnamed_addr {
dec_label_pc_13d44:
  %v0_13d44 = load i32, i32* @ebp, align 4
  %v1_13d44 = add i32 %v0_13d44, -44
  %v2_13d44 = inttoptr i32 %v1_13d44 to i32*
  %v3_13d44 = load i32, i32* %v2_13d44, align 4
  %v1_13d47 = add i32 %v3_13d44, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13d47 = inttoptr i32 %v1_13d47 to i32*
  %v3_13d47 = load i32, i32* %v2_13d47, align 4
  %v1_13d4a = inttoptr i32 %v3_13d44 to i32*
  %v2_13d4a = load i32, i32* %v1_13d4a, align 4
  %v1_13d4e = xor i32 %v2_13d4a, 1
  %v2_13d58 = or i32 %v1_13d4e, %v3_13d47
  %v3_13d58 = icmp eq i32 %v2_13d58, 0
  %v1_13d5c = zext i1 %v3_13d58 to i32
  %v3_13d5c = and i32 %v2_13d58, -256
  %v4_13d5c = or i32 %v1_13d5c, %v3_13d5c
  ret i32 %v4_13d5c
}

define i32 @function_13d63() local_unnamed_addr {
dec_label_pc_13d75:
  %v0_13d63 = load i32, i32* @ebp, align 4
  %v1_13d63 = add i32 %v0_13d63, -44
  %v2_13d63 = inttoptr i32 %v1_13d63 to i32*
  %v3_13d63 = load i32, i32* %v2_13d63, align 4
  %v1_13d66 = add i32 %v3_13d63, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_13d66 = inttoptr i32 %v1_13d66 to i32*
  %v3_13d66 = load i32, i32* %v2_13d66, align 4
  %v7_13d70 = icmp eq i32 %v3_13d66, 0
  br i1 %v7_13d70, label %dec_label_pc_13d7a, label %dec_label_pc_13d84

dec_label_pc_13d7a:                               ; preds = %dec_label_pc_13d75
  %v1_13d69 = inttoptr i32 %v3_13d63 to i32*
  %v2_13d69 = load i32, i32* %v1_13d69, align 4
  %tmp102 = or i32 %v2_13d69, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %bb, label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d7a, %dec_label_pc_13d75
  br label %dec_label_pc_13d8c

bb:                                               ; preds = %dec_label_pc_13d7a
  %v2_13d86 = call i32 @function_13c60()
  br label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d84, %bb
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
}

define i32 @function_13db0() local_unnamed_addr {
dec_label_pc_13db0:
  %eax.global-to-local = alloca i32, align 4
  %v0_13db0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13db0
}

define i32 @function_13de2() local_unnamed_addr {
dec_label_pc_13de2:
  %v0_13de2 = load i32, i32* @eax, align 8
  %v1_13de2 = icmp eq i32 %v0_13de2, 0
  %v1_13de4 = icmp eq i1 %v1_13de2, false
  br i1 %v1_13de4, label %bb, label %dec_label_pc_13de6

bb:                                               ; preds = %dec_label_pc_13de2
  %v2_13de4 = call i32 @function_13df1()
  br label %dec_label_pc_13de6

dec_label_pc_13de6:                               ; preds = %bb, %dec_label_pc_13de2
  %v0_13de6 = phi i32 [ %v2_13de4, %bb ], [ %v0_13de2, %dec_label_pc_13de2 ]
  ret i32 %v0_13de6
}

define i32 @function_13de9() local_unnamed_addr {
dec_label_pc_13de9:
  %eax.global-to-local = alloca i32, align 4
  %v0_13de9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13de9
}

define i32 @function_13def() local_unnamed_addr {
dec_label_pc_13def:
  %eax.global-to-local = alloca i32, align 4
  %v0_13def = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13def
}

define i32 @function_13df1() local_unnamed_addr {
dec_label_pc_13df1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_13df2(i32 %arg1) local_unnamed_addr {
dec_label_pc_13df2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13df3 = load i32, i32* @eax, align 8
  %v11_13df3 = and i32 %v0_13df3, or (i32 zext (i8 ptrtoint (i32* @global_var_c.2390 to i8) to i32), i32 -256)
  %v1_13df5 = or i32 %v11_13df3, 1
  %v11_13df5 = trunc i32 %v11_13df3 to i8
  %v0_13df8 = load i32, i32* @ebx, align 4
  %v1_13df8 = lshr i32 %v0_13df8, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_13df8 = add i32 %v1_13df8, %v1_13df5
  %v20_13df8 = urem i32 %v5_13df8, 256
  %v22_13df8 = shl i32 %v20_13df8, ptrtoint (i32* @global_var_8.2379 to i32)
  %v23_13df8 = and i32 %v0_13df8, -65281
  %v24_13df8 = or i32 %v22_13df8, %v23_13df8
  store i32 %v24_13df8, i32* %ebx.global-to-local, align 4
  %v2_13dfb = and i8 %v11_13df5, ptrtoint (i32* @global_var_8.2379 to i8)
  %v8_13dfb = zext i8 %v2_13dfb to i32
  %v10_13dfb = and i32 %v0_13df3, -256
  %v11_13dfb = or i32 %v8_13dfb, %v10_13dfb
  store i32 %v11_13dfb, i32* %eax.global-to-local, align 8
  %v0_13dfd = load i32, i32* @ecx, align 4
  %v1_13dfd = add i32 %v0_13dfd, -1
  store i32 %v1_13dfd, i32* @ecx, align 4
  %v1_13dfe = inttoptr i32 %v11_13dfb to i8*
  %v2_13dfe = load i8, i8* %v1_13dfe, align 4
  %v5_13dfe = add i8 %v2_13dfe, %v2_13dfb
  store i8 %v5_13dfe, i8* %v1_13dfe, align 4
  %v0_13e00 = load i32, i32* %ebx.global-to-local, align 4
  %v3_13e00 = load i32, i32* %eax.global-to-local, align 8
  %v4_13e00 = trunc i32 %v3_13e00 to i8
  %v5_13e002 = mul i32 %v3_13e00, 256
  %v1_13e003 = add i32 %v5_13e002, %v0_13e00
  %v22_13e00 = and i32 %v1_13e003, 65280
  %v23_13e00 = and i32 %v0_13e00, -65281
  %v24_13e00 = or i32 %v22_13e00, %v23_13e00
  store i32 %v24_13e00, i32* %ebx.global-to-local, align 4
  %v2_13e03 = and i8 %v4_13e00, ptrtoint (i32* @global_var_4.2376 to i8)
  %v8_13e03 = zext i8 %v2_13e03 to i32
  %v10_13e03 = and i32 %v3_13e00, -256
  %v11_13e03 = or i32 %v8_13e03, %v10_13e03
  store i32 %v11_13e03, i32* %eax.global-to-local, align 8
  %v1_13e07 = inttoptr i32 %v11_13e03 to i8*
  %v2_13e07 = load i8, i8* %v1_13e07, align 4
  %v5_13e07 = add i8 %v2_13e07, %v2_13e03
  store i8 %v5_13e07, i8* %v1_13e07, align 4
  %v0_13e1a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_13e1a, i32* %ebx.global-to-local, align 4
  %v0_13e1c = load i32, i32* @ebp, align 4
  %v1_13e1c = add i32 %v0_13e1c, -28
  store i32 %v1_13e1c, i32* @eax, align 8
  %v2_13e22 = call i32 @function_245b0(i32 %v1_13e1c)
  %v0_13e27 = load i32, i32* @ebx, align 4
  store i32 %v0_13e27, i32* %eax.global-to-local, align 8
  ret i32 %v0_13e27

; uselistorder directives
  uselistorder i32 %v3_13e00, { 1, 0, 2 }
  uselistorder i32 %v0_13e00, { 1, 0 }
  uselistorder i32 %v0_13df3, { 1, 0 }
}

define i32 @function_13e31() local_unnamed_addr {
dec_label_pc_13e31:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_13e31 = add i32 %tmp92, -12
  %v2_13e31 = inttoptr i32 %v1_13e31 to i32*
  %v3_13e31 = load i32, i32* %v2_13e31, align 4
  %v2_13e34 = xor i32 %v3_13e31, 30
  %v3_13e34 = icmp eq i32 %v2_13e34, 0
  store i32 %v2_13e34, i32* @eax, align 8
  br i1 %v3_13e34, label %bb, label %dec_label_pc_13e3d

bb:                                               ; preds = %dec_label_pc_13e31
  %v1_13e3b = call i32 @function_13e42()
  br label %dec_label_pc_13e3d

dec_label_pc_13e3d:                               ; preds = %bb, %dec_label_pc_13e31
  %v2_13e3b = phi i32 [ %v1_13e3b, %bb ], [ %v2_13e34, %dec_label_pc_13e31 ]
  ret i32 %v2_13e3b
}

define i32 @function_13e42() local_unnamed_addr {
dec_label_pc_13e42:
  %v0_13e48 = load i32, i32* @eax, align 8
  ret i32 %v0_13e48
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13e4a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v1_13e80 = call i32 @function_2b970(i32 %tmp102)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13e98:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_13eb8 = inttoptr i32 %arg2 to i32*
  %v2_13eb8 = load i32, i32* %v1_13eb8, align 4
  store i32 %v2_13eb8, i32* %arg1, align 4
  %v1_13ec5 = call i32 @function_2b9be(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  %v1_13ed4 = call i32 @function_13edb()
  ret i32 %v1_13ed4
}

define i32 @function_13edb() local_unnamed_addr {
dec_label_pc_13edb:
  %v0_13edc = load i32, i32* @eax, align 8
  ret i32 %v0_13edc
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13ede:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp100, i32* @eax, align 8
  %v1_13efb = call i32 @function_22742(i32 %tmp100)
  %v1_13f03 = add i32 %tmp100, ptrtoint (i32* @global_var_14.2373 to i32)
  %v1_13f09 = call i32 @function_19390(i32 %v1_13f03)
  store i32 ptrtoint (%vtable_38f68_type* @global_var_38f68.2486 to i32), i32* %arg1, align 4
  %v2_13f1a = inttoptr i32 %v1_13f03 to i32*
  store i32 ptrtoint (i32* @global_var_38f78.2487 to i32), i32* %v2_13f1a, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f34:
  %eax.global-to-local = alloca i32, align 4
  %v0_13f39 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13f39
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_13f3e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38f68_type* @global_var_38f68.2486 to i32), i32* %arg1, align 4
  %v1_13f61 = add i32 %tmp99, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_13f61 = inttoptr i32 %v1_13f61 to i32*
  store i32 ptrtoint (i32* @global_var_38f78.2487 to i32), i32* %v2_13f61, align 4
  ret i32 %v1_13f61
}

define i32 @function_13fa8() local_unnamed_addr {
dec_label_pc_13fa8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13fa8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13fa8 = add i32 %v0_13fa8, -1
  store i32 %v1_13fa8, i32* %ecx.global-to-local, align 4
  %v0_13faa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13faa
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13fac:
  %v4_13fac = sub i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v1_13fb1 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_13fac)
  ret i32 %v1_13fb1
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_13fb4:
  store i32 %arg1, i32* @eax, align 8
  %v1_13fd1 = call i32 @function_27eea(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_13fe0() local_unnamed_addr {
dec_label_pc_13fe0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13fe0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13fe0 = add i32 %v0_13fe0, 862319685
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i32*
  %v3_13fe0 = load i32, i32* %v2_13fe0, align 4
  %v4_13fe0 = add i32 %v3_13fe0, -1
  store i32 %v4_13fe0, i32* %v2_13fe0, align 4
  %v0_13fe6 = load i32, i32* %eax.global-to-local, align 8
  %v1_13fe6 = add i32 %v0_13fe6, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_13fe6, i32* %eax.global-to-local, align 8
  ret i32 %v1_13fe6
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ff4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 8
  store i32 %tmp103, i32* @eax, align 8
  %v2_1401e = call i32 @function_25468(i32 %tmp103, i32 %arg2)
  %v1_14026 = add i32 %arg2, ptrtoint (i32* @global_var_14.2373 to i32)
  %v1_1402c = add i32 %tmp103, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_1402c, i32* @eax, align 8
  %v2_14036 = call i32 @function_27152(i32 %v1_1402c, i32 %v1_14026)
  store i32 ptrtoint (%vtable_38f68_type* @global_var_38f68.2486 to i32), i32* %arg1, align 4
  %v2_14047 = inttoptr i32 %v1_1402c to i32*
  store i32 ptrtoint (i32* @global_var_38f78.2487 to i32), i32* %v2_14047, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38f68_type* @global_var_38f68.2486 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14062:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v4_1408c = call i32 @function_28056(i32 %tmp104, i32 %arg2)
  %v1_14094 = add i32 %arg2, ptrtoint (i8** @global_var_18.2447 to i32)
  %v1_1409a = add i32 %tmp104, ptrtoint (i8** @global_var_18.2447 to i32)
  store i32 %v1_1409a, i32* @eax, align 8
  %v4_140a4 = call i32 @function_274be(i32 %v1_1409a, i32 %v1_14094)
  store i32 ptrtoint (%vtable_38f08_type* @global_var_38f08.2488 to i32), i32* %arg1, align 4
  %v1_140b5 = add i32 %tmp104, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_140b5 = inttoptr i32 %v1_140b5 to i32*
  store i32 ptrtoint (i32* @global_var_38f20.2489 to i32), i32* %v2_140b5, align 4
  %v2_140bf = inttoptr i32 %v1_1409a to i32*
  store i32 ptrtoint (i32* @global_var_38f34.2490 to i32), i32* %v2_140bf, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_140e0:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_140fa = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_140fa, i32* @eax, align 8
  %v1_14100 = call i32 @function_27fbe(i32 %v2_140fa)
  %v2_1410c = ptrtoint i32* %stack_var_-96 to i32
  %v3_14112 = call i32 @function_2bc84(i32 %v2_1410c, i32 %v2_140fa)
  %v2_1411f = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1411f, i32* @eax, align 8
  %v3_14125 = call i32 @function_2290c(i32 %v2_1411f, i32 81)
  %v2_14132 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_14132, i32* @eax, align 8
  %v3_14138 = call i32 @function_228d4(i32 %v2_14132, i32 ptrtoint ([54 x i8]* @global_var_5f20.2491 to i32))
  %v2_14145 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14145, i32* @eax, align 8
  %v3_1414b = call i32 @function_2289c(i32 %v2_14145, i32 ptrtoint ([169 x i8]* @global_var_6540.2492 to i32))
  store i32 %v2_1410c, i32* @eax, align 8
  %v3_1415d = call i32 @function_2be0a(i32 %v2_1410c, i32 %v2_14145)
  %v3_1416c = call i32 @function_2be4c(i32 %v3_1415d, i32 %v2_14132)
  store i32 %v3_1416c, i32* @eax, align 8
  %v3_1417b = call i32 @function_2be8e(i32 %v3_1416c, i32 %v2_1411f)
  %v2_14185 = load i8, i8* inttoptr (i32 82144 to i8*), align 32
  %v7_14188 = icmp eq i8 %v2_14185, 0
  %v1_1419a = icmp eq i1 %v7_14188, false
  %v2_1419a = zext i1 %v1_1419a to i32
  %v4_1419a = sext i8 %v2_14185 to i32
  %v5_1419a = and i32 %v4_1419a, -256
  %v6_1419a = or i32 %v2_1419a, %v5_1419a
  store i1 false, i1* @cf, align 1
  store i32 %v6_1419a, i32* @ebx, align 4
  store i32 %v2_1410c, i32* @eax, align 8
  %v3_141be = call i32 @function_28142(i32 %v6_1419a, i32 %v2_1410c)
  store i32 %v3_141be, i32* @eax, align 8
  %v0_141c3 = load i32, i32* @ebx, align 4
  %v3_141ce = call i32 @function_2bed0(i32 ptrtoint (i32* @global_var_3ab58.2493 to i32), i32 %v0_141c3)
  ret i32 %v3_141ce

; uselistorder directives
  uselistorder i32 %v6_1419a, { 1, 0 }
}

define i32 @function_141e0() local_unnamed_addr {
dec_label_pc_141e0:
  %v0_141e0 = call i32 @function_c7000114()
  ret i32 %v0_141e0

; uselistorder directives
  uselistorder i32 ()* @function_c7000114, { 1, 0 }
}

define i32 @function_14236() local_unnamed_addr {
dec_label_pc_14236:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14236 = load i32, i32* %eax.global-to-local, align 8
  %v0_14238 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_14236, i32* @ebx, align 4
  %v1_14242 = call i32 @function_14246(i32 %v0_14238)
  store i32 %v1_14242, i32* %eax.global-to-local, align 8
  ret i32 %v1_14242
}

define i32 @function_14244() local_unnamed_addr {
dec_label_pc_14244:
  %eax.global-to-local = alloca i32, align 4
  %v0_14244 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14244
}

define i32 @function_14246(i32 %arg1) local_unnamed_addr {
dec_label_pc_14246:
  %v0_14258 = call i32 @function_1425c()
  ret i32 %v0_14258
}

define i32 @function_1425a() local_unnamed_addr {
dec_label_pc_1425a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1425a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1425a
}

define i32 @function_1425c() local_unnamed_addr {
dec_label_pc_1425c:
  %v0_1425c = load i32, i32* @ebp, align 4
  %v1_1425c = add i32 %v0_1425c, -92
  store i32 %v1_1425c, i32* @eax, align 8
  %v1_14262 = call i32 @function_2bd44(i32 %v1_1425c)
  %v0_14267 = call i32 @function_1426b()
  ret i32 %v0_14267
}

define i32 @function_14269() local_unnamed_addr {
dec_label_pc_14269:
  %eax.global-to-local = alloca i32, align 4
  %v0_14269 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14269
}

define i32 @function_1426b() local_unnamed_addr {
dec_label_pc_1426b:
  %v0_1426b = load i32, i32* @ebp, align 4
  %v1_1426b = add i32 %v0_1426b, -64
  store i32 %v1_1426b, i32* @eax, align 8
  %v1_14271 = call i32 @function_2801e(i32 %v1_1426b)
  %v0_14276 = load i32, i32* @ebx, align 4
  ret i32 %v0_14276
}

define i32 @function_14285(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14285:
  %eax.global-to-local = alloca i32, align 4
  %v0_1428c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1428c
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14290:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_14290 = load i32, i32* %ebp.global-to-local, align 4
  %v2_142aa = load i32, i32* %arg1, align 4
  %v1_142ac = add i32 %v2_142aa, 1
  store i32 %v1_142ac, i32* %arg1, align 4
  store i32 %v0_14290, i32* %ebp.global-to-local, align 4
  ret i32 %tmp100
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_142ca:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_142e4 = load i32, i32* %arg1, align 4
  store i32 %v2_142e4, i32* @eax, align 8
  %v2_142f0 = call i32 @function_142f7(i32 %tmp99)
  ret i32 %v2_142f0
}

define i32 @function_142f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_142f7:
  %v0_142f8 = load i32, i32* @eax, align 8
  ret i32 %v0_142f8
}

define i32 @_ZN5boost11unique_lockINS_5mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_142fa:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_14318 = call i32 @function_2bdee(i32 %tmp101)
  %v4_1431d = trunc i32 %v1_14318 to i8
  store i1 false, i1* @cf, align 1
  %v5_1431d = icmp eq i8 %v4_1431d, 0
  br i1 %v5_1431d, label %dec_label_pc_14337, label %dec_label_pc_14321

dec_label_pc_14321:                               ; preds = %dec_label_pc_142fa
  %v2_14321 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_14321, i32* @eax, align 8
  %v1_14327 = call i32 @function_19a8c(i32 %v2_14321)
  store i32 %v2_14321, i32* @eax, align 8
  %v1_14332 = call i32 @function_27b27(i32 %v2_14321)
  br label %dec_label_pc_14337

dec_label_pc_14337:                               ; preds = %dec_label_pc_14321, %dec_label_pc_142fa
  %v2_1433a = load i32, i32* %arg1, align 4
  store i32 %v2_1433a, i32* @eax, align 8
  %v1_1433f = call i32 @function_24e9a(i32 %v2_1433a)
  %v1_14347 = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_14347 = inttoptr i32 %v1_14347 to i8*
  store i8 1, i8* %v2_14347, align 1
  store i32 0, i32* @eax, align 8
  %v1_14355 = call i32 @function_14375()
  ret i32 %v1_14355
}

define i32 @function_14359() local_unnamed_addr {
dec_label_pc_14359:
  %eax.global-to-local = alloca i32, align 4
  %v0_14359 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14359
}

define i32 @function_14375() local_unnamed_addr {
dec_label_pc_14375:
  %v0_1437a = load i32, i32* @eax, align 8
  ret i32 %v0_1437a
}

define i32 @_ZN5boost17bad_function_callD1Ev(i32* %arg1) {
dec_label_pc_1437c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.2458 to i32), i32* %arg1, align 4
  %v2_143b1 = call i32 @function_143be(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_143be(i32 %arg1) local_unnamed_addr {
dec_label_pc_143be:
  %v0_143be = load i32, i32* @ebp, align 4
  %v1_143be = add i32 %v0_143be, -12
  %v2_143be = inttoptr i32 %v1_143be to i32*
  %v3_143be = load i32, i32* %v2_143be, align 4
  %v2_143c1 = xor i32 %v3_143be, 30
  ret i32 %v2_143c1
}

define i32 @_ZN5boost17bad_function_callD0Ev(i32 %arg1) {
dec_label_pc_143d2:
  %v1_143ef = call i32 @function_2874e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_14409 = call i32 @function_14410(i32 %arg1)
  ret i32 %v2_14409
}

define i32 @function_14410(i32 %arg1) local_unnamed_addr {
dec_label_pc_14410:
  %v0_14411 = load i32, i32* @eax, align 8
  ret i32 %v0_14411
}

define i32 @_ZNSs6appendIPKcEERSsT_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14412:
  %stack_var_-20 = alloca i32, align 4
  %v2_14435 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_14435
}

define i32 @function_14496() local_unnamed_addr {
dec_label_pc_14496:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14496 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14496 = add i32 %v0_14496, -1
  store i32 %v1_14496, i32* %ecx.global-to-local, align 4
  %v0_14498 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14498
}

define i32 @_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14499:
  ret i32 %arg1
}

define i32 @function_144db() local_unnamed_addr {
dec_label_pc_144db:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_144db = load i32, i32* %ecx.global-to-local, align 4
  %v1_144db = add i32 %v0_144db, -1
  store i32 %v1_144db, i32* %ecx.global-to-local, align 4
  %v0_144dd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_144dd
}

define i32 @_ZN21LockedPageManagerBaseI16MemoryPageLockerEC1Ej(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_144de:
  %ebx.global-to-local = alloca i32, align 4
  %v0_144e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_14510 = add i32 %arg1, 28
  %v3_14510 = inttoptr i32 %v2_14510 to i32*
  store i32 %arg2, i32* %v3_14510, align 4
  %v1_14516 = add i32 %arg1, ptrtoint (i8* @global_var_24.2401 to i32)
  store i32 %v1_14516, i32* @eax, align 8
  %v1_1451c = call i32 @function_2c5ca(i32 %v1_14516)
  %v1_14524 = add i32 %arg2, -1
  %tmp114 = sub i32 0, %arg2
  %v5_14527 = and i32 %v1_14524, %arg2
  %v6_14527 = icmp eq i32 %v5_14527, 0
  br i1 %v6_14527, label %dec_label_pc_14552, label %dec_label_pc_1452e

dec_label_pc_1452e:                               ; preds = %dec_label_pc_144de
  br label %dec_label_pc_14552

dec_label_pc_14552:                               ; preds = %dec_label_pc_1452e, %dec_label_pc_144de
  %v2_1455c = add i32 %arg1, 32
  %v3_1455c = inttoptr i32 %v2_1455c to i32*
  store i32 %tmp114, i32* %v3_1455c, align 4
  store i32 %v0_144e1, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_24.2401 to i32), { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE13_Rb_tree_implIS6_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14592:
  store i32 %arg1, i32* @eax, align 8
  %v1_145af = call i32 @function_2c6b4(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_145c8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_145cb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_145e6 = call i32 @function_2c79e(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_145f5 = call i32 @function_2c720(i32 %arg1, i32 %v1_145e6)
  store i32 %arg1, i32* @eax, align 8
  %v1_14600 = call i32 @function_28b5a(i32 %arg1)
  store i32 %v0_145cb, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14636:
  store i32 %arg1, i32* @eax, align 8
  %v1_14653 = call i32 @function_2c83c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1466c:
  store i32 %arg1, i32* @eax, align 8
  %v1_14689 = call i32 @function_2c89c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev() local_unnamed_addr {
dec_label_pc_146a2:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_146c0 = call i32 @function_2c9b2(i32 %tmp5)
  %v1_146c8 = add i32 %tmp5, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  %v1_146ce = inttoptr i32 %tmp5 to i32*
  %v2_146ce = load i32, i32* %v1_146ce, align 4
  %v3_146db = call i32 @function_2c9df(i32 %v2_146ce, i32 %v3_146c8, i32 %v1_146c0)
  %v1_146e6 = call i32 @function_2c932(i32 %tmp5)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp5, { 3, 2, 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1471c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_1473c = load i32, i32* %arg1, align 4
  %v5_1473e = add i32 %v2_1473c, %arg2
  store i32 %v5_1473e, i32* @eax, align 8
  %v3_1474b = call i32 @function_14752(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1474b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_14752(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14752:
  %v0_14753 = load i32, i32* @eax, align 8
  ret i32 %v0_14753
}

define i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14754:
  %v2_1477e = call i32 @function_2cada(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1479c:
  store i32 %arg1, i32* @eax, align 8
  %v1_147b9 = call i32 @function_2cb8c(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_147d2:
  %v1_147f2 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %arg1, i32* @eax, align 8
  %v2_147ff = call i32 @function_2cb58(i32 %arg1, i32 %v1_147f2)
  store i32 %arg1, i32* @eax, align 8
  %v1_14811 = call i32 @function_14818()
  ret i32 %v1_14811

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_14818() local_unnamed_addr {
dec_label_pc_14818:
  %v0_14819 = load i32, i32* @eax, align 8
  ret i32 %v0_14819
}

define i32 @_ZN5boost6detail21is_static_visitor_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1481c:
  store i32 0, i32* @eax, align 8
  %v2_1483d = call i32 @function_14844(i32 %arg1)
  ret i32 %v2_1483d
}

define i32 @function_14844(i32 %arg1) local_unnamed_addr {
dec_label_pc_14844:
  %v0_14845 = load i32, i32* @eax, align 8
  ret i32 %v0_14845
}

define i32 @_ZN5boost14static_visitorIvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14846:
  store i32 %arg1, i32* @eax, align 8
  %v1_14863 = call i32 @function_29062(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_14872 = call i32 @function_14879()
  ret i32 %v1_14872

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14879() local_unnamed_addr {
dec_label_pc_14879:
  %v0_1487a = load i32, i32* @eax, align 8
  ret i32 %v0_1487a
}

define i32 @_ZN5boost14static_visitorIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1487c:
  ret i32 0
}

define i32 @_ZNK5boost10scoped_ptrINS_8signals26detail26foreign_weak_ptr_impl_baseEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_148a6:
  %ebp.global-to-local = alloca i32, align 4
  %v0_148a6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_148c0 = load i32, i32* %arg1, align 4
  %v1_148c2 = icmp eq i32 %v2_148c0, 0
  %v1_148c4 = icmp eq i1 %v1_148c2, false
  br i1 %v1_148c4, label %dec_label_pc_148ea, label %dec_label_pc_148c6

dec_label_pc_148c6:                               ; preds = %dec_label_pc_148a6
  br label %dec_label_pc_148ea

dec_label_pc_148ea:                               ; preds = %dec_label_pc_148c6, %dec_label_pc_148a6
  %v2_148ed = load i32, i32* %arg1, align 4
  store i32 %v0_148a6, i32* %ebp.global-to-local, align 4
  ret i32 %v2_148ed
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14902:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14902 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_14902, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNKSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_14936:
  %stack_var_-20 = alloca i32, align 4
  %v2_14956 = load i32, i32* %arg2, align 4
  store i32 %v2_14956, i32* %stack_var_-20, align 4
  %v2_1495b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_14968 = call i32 @function_2cf3a(i32 %arg1, i32 %v2_1495b)
  store i32 %arg1, i32* @eax, align 8
  %v1_1497a = call i32 @function_14981()
  ret i32 %v1_1497a

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_14981() local_unnamed_addr {
dec_label_pc_14981:
  %v0_14982 = load i32, i32* @eax, align 8
  ret i32 %v0_14982
}

define i32 @_ZNKSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14986:
  %stack_var_-20 = alloca i32, align 4
  %v1_149a6 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_149a6 = inttoptr i32 %v1_149a6 to i32*
  %v3_149a6 = load i32, i32* %v2_149a6, align 4
  store i32 %v3_149a6, i32* %stack_var_-20, align 4
  %v2_149ac = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_149b9 = call i32 @function_2cf8a(i32 %arg1, i32 %v2_149ac)
  store i32 %arg1, i32* @eax, align 8
  %v1_149cb = call i32 @function_149d2()
  ret i32 %v1_149cb

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_149d2() local_unnamed_addr {
dec_label_pc_149d2:
  %v0_149d3 = load i32, i32* @eax, align 8
  ret i32 %v0_149d3
}

define i32 @_ZN9__gnu_cxxneIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEEbRKNS_17__normal_iteratorIT_T0_EESM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149d6:
  %ebx.global-to-local = alloca i32, align 4
  %v0_149d9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_149fa = call i32 @function_2d014(i32 %arg1)
  %v1_149ff = inttoptr i32 %v1_149fa to i32*
  %v2_149ff = load i32, i32* %v1_149ff, align 4
  store i32 %v2_149ff, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_14a07 = call i32 @function_2d014(i32 %arg2)
  %v1_14a0c = inttoptr i32 %v1_14a07 to i32*
  %v2_14a0c = load i32, i32* %v1_14a0c, align 4
  %v12_14a0e = icmp eq i32 %v2_149ff, %v2_14a0c
  %v1_14a10 = icmp eq i1 %v12_14a0e, false
  %v2_14a10 = zext i1 %v1_14a10 to i32
  %v4_14a10 = and i32 %v2_14a0c, -256
  %v5_14a10 = or i32 %v2_14a10, %v4_14a10
  store i32 %v0_149d9, i32* %ebx.global-to-local, align 4
  ret i32 %v5_14a10

; uselistorder directives
  uselistorder i32 %v2_14a0c, { 1, 0 }
  uselistorder i32 (i32)* @function_2d014, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14a2a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_14a44 = load i32, i32* %arg1, align 4
  %v1_14a46 = add i32 %v2_14a44, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_14a46, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_14a5b = call i32 @function_14a62(i32 %tmp99)
  ret i32 %v2_14a5b
}

define i32 @function_14a62(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a62:
  %v0_14a63 = load i32, i32* @eax, align 8
  ret i32 %v0_14a63
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14a64:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14a64 = load i32, i32* %ebp.global-to-local, align 4
  %v2_14a7e = load i32, i32* %arg1, align 4
  store i32 %v0_14a64, i32* %ebp.global-to-local, align 4
  ret i32 %v2_14a7e
}

define i32 @_ZN5boost13apply_visitorINS_8signals26detail21lock_weak_ptr_visitorEKNS_7variantINS_8weak_ptrIvEENS2_21foreign_void_weak_ptrENS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEENT_11result_typeERKSD_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a93:
  %v3_14aca = call i32 @function_2d0ff(i32 %arg1, i32 %arg3, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14aea:
  %v1_14b08 = call i32 @function_2d34e(i32 %arg1)
  %v1_14b10 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_14b16 = call i32 @function_2d2b8(i32 %v1_14b10)
  store i32 0, i32* @eax, align 8
  %v1_14b25 = call i32 @function_14b48()
  ret i32 %v1_14b25

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14b29() local_unnamed_addr {
dec_label_pc_14b29:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14b29 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_14b29, i32* %ebx.global-to-local, align 4
  %v0_14b2b = load i32, i32* @ebp, align 4
  %v1_14b2b = add i32 %v0_14b2b, -28
  %v2_14b2b = inttoptr i32 %v1_14b2b to i32*
  %v3_14b2b = load i32, i32* %v2_14b2b, align 4
  %v1_14b2e = add i32 %v3_14b2b, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_14b2e, i32* %eax.global-to-local, align 8
  %v1_14b34 = call i32 @function_2d2b8(i32 %v1_14b2e)
  %v0_14b39 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_14b39, i32* %eax.global-to-local, align 8
  ret i32 %v0_14b39

; uselistorder directives
  uselistorder i32 (i32)* @function_2d2b8, { 1, 0 }
}

define i32 @function_14b48() local_unnamed_addr {
dec_label_pc_14b48:
  %v0_14b4d = load i32, i32* @eax, align 8
  ret i32 %v0_14b4d
}

define i32 @_ZN5boost13apply_visitorINS_8signals26detail24expired_weak_ptr_visitorEKNS_7variantINS_8weak_ptrIvEENS2_21foreign_void_weak_ptrENS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEENT_11result_typeERKSD_RT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b4e:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v2_14b78 = call i32 @function_2d422(i32 %arg2, i32 %arg1)
  ret i32 %v2_14b78

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11unique_lockINS1_20connection_body_baseEEC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b90:
  store i32 %arg2, i32* %arg1, align 4
  %v1_14bd7 = call i32 @function_14bf0(i32 %arg2)
  ret i32 %v1_14bd7
}

define i32 @function_14bda() local_unnamed_addr {
dec_label_pc_14bda:
  %eax.global-to-local = alloca i32, align 4
  %v0_14bda = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14bda
}

define i32 @function_14bf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14bf0:
  %v0_14bf0 = load i32, i32* @ebp, align 4
  %v1_14bf0 = add i32 %v0_14bf0, -12
  %v2_14bf0 = inttoptr i32 %v1_14bf0 to i32*
  %v3_14bf0 = load i32, i32* %v2_14bf0, align 4
  %v2_14bf3 = xor i32 %v3_14bf0, 30
  %v3_14bf3 = icmp eq i32 %v2_14bf3, 0
  store i32 %v2_14bf3, i32* @eax, align 8
  br i1 %v3_14bf3, label %bb, label %dec_label_pc_14bfc

bb:                                               ; preds = %dec_label_pc_14bf0
  %v1_14bfa = call i32 @function_14c01()
  br label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %bb, %dec_label_pc_14bf0
  %v2_14bfa = phi i32 [ %v1_14bfa, %bb ], [ %v2_14bf3, %dec_label_pc_14bf0 ]
  ret i32 %v2_14bfa
}

define i32 @function_14c01() local_unnamed_addr {
dec_label_pc_14c01:
  %v0_14c06 = load i32, i32* @eax, align 8
  ret i32 %v0_14c06
}

define i32 @_ZN5boost8signals26detail11unique_lockINS1_20connection_body_baseEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14c08:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_14c3c = call i32 @function_25492(i32 %tmp99)
  store i32 0, i32* @eax, align 8
  %v1_14c4b = call i32 @function_14c6b()
  ret i32 %v1_14c4b
}

define i32 @function_14c4f() local_unnamed_addr {
dec_label_pc_14c4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_14c4f = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_14c4f, i32* @ebx, align 4
  %v0_14c51 = load i32, i32* @ebp, align 4
  %v1_14c51 = add i32 %v0_14c51, -28
  %v2_14c51 = inttoptr i32 %v1_14c51 to i32*
  %v3_14c51 = load i32, i32* %v2_14c51, align 4
  store i32 %v3_14c51, i32* %eax.global-to-local, align 8
  %v1_14c57 = call i32 @function_25492(i32 %v3_14c51)
  %v0_14c5c = load i32, i32* @ebx, align 4
  store i32 %v0_14c5c, i32* %eax.global-to-local, align 8
  ret i32 %v0_14c5c

; uselistorder directives
  uselistorder i32 (i32)* @function_25492, { 1, 0 }
}

define i32 @function_14c6b() local_unnamed_addr {
dec_label_pc_14c6b:
  %v0_14c70 = load i32, i32* @eax, align 8
  ret i32 %v0_14c70
}

define i32 @_ZNK5boost8weak_ptrIvE4lockEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c72:
  %edx.global-to-local = alloca i32, align 4
  %v0_14c8f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_14c8f, 16777216
  %v3_14ca0 = sdiv i32 %sext, 16777216
  %v4_14ca0 = call i32 @function_2d5fa(i32 %arg1, i32 %arg2, i32 %v3_14ca0)
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_14cb2 = call i32 @function_14cb9()
  ret i32 %v1_14cb2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14cb9() local_unnamed_addr {
dec_label_pc_14cb9:
  %v0_14cba = load i32, i32* @eax, align 8
  ret i32 %v0_14cba
}

define i32 @_ZNK5boost8weak_ptrIvE7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14cbe:
  %v1_14cd8 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v10_14cd8 = icmp eq i32 %v1_14cd8, 0
  %v1_14ce5 = zext i1 %v10_14cd8 to i32
  %v3_14ce5 = and i32 %v1_14cd8, -256
  %v4_14ce5 = or i32 %v1_14ce5, %v3_14ce5
  ret i32 %v4_14ce5
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14cfc:
  %v1_14d24 = trunc i32 %arg6 to i8
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v2_14d43 = call i32 @function_2d700(i32 %arg1, i32 %arg2)
  %v10_14d48 = icmp eq i8 %v1_14d24, 0
  %v4_14d77 = sext i8 %arg4 to i32
  store i32 %arg1, i32* @eax, align 8
  br i1 %v10_14d48, label %dec_label_pc_14d70, label %dec_label_pc_14d4e

dec_label_pc_14d4e:                               ; preds = %dec_label_pc_14cfc
  %v5_14d69 = call i32 @function_2d78c(i32 %arg1, i32 %arg3, i32 %v4_14d77, i32 %arg5)
  %v0_14d6e = call i32 @function_14da9()
  ret i32 %v0_14d6e

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14cfc
  %v5_14d8b = call i32 @function_2d826(i32 %arg1, i32 %arg3, i32 %v4_14d77, i32 %arg5)
  %v0_14d90 = call i32 @function_14da9()
  ret i32 %v0_14d90

; uselistorder directives
  uselistorder i32 ()* @function_14da9, { 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 2, 1, 0 }
}

define i32 @function_14d93() local_unnamed_addr {
dec_label_pc_14d93:
  %eax.global-to-local = alloca i32, align 4
  %v0_14d93 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14d93
}

define i32 @function_14da9() local_unnamed_addr {
dec_label_pc_14da9:
  %v0_14da9 = load i32, i32* @ebp, align 4
  %v1_14da9 = add i32 %v0_14da9, -12
  %v2_14da9 = inttoptr i32 %v1_14da9 to i32*
  %v3_14da9 = load i32, i32* %v2_14da9, align 4
  %v2_14dac = xor i32 %v3_14da9, 30
  ret i32 %v2_14dac
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14dc0:
  store i32 %arg1, i32* @eax, align 8
  %v1_14ddd = call i32 @function_2d962(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_14df1 = call i32 @function_2d80a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e0a:
  %stack_var_-20 = alloca i32, align 4
  %v1_14e2a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_14e2a = inttoptr i32 %v1_14e2a to i32*
  %v3_14e2a = load i32, i32* %v2_14e2a, align 4
  %v1_14e30 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_14e30 = inttoptr i32 %v1_14e30 to i32*
  %v3_14e30 = load i32, i32* %v2_14e30, align 4
  %v12_14e33 = icmp eq i32 %v3_14e2a, %v3_14e30
  br i1 %v12_14e33, label %dec_label_pc_14e64, label %dec_label_pc_14e37

dec_label_pc_14e37:                               ; preds = %dec_label_pc_14e0a
  %v3_14e3a = load i32, i32* %v2_14e2a, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 4
  %v3_14e4e = call i32 @function_2da08(i32 %arg1, i32 %v3_14e3a, i32 %arg2)
  %v3_14e56 = load i32, i32* %v2_14e2a, align 4
  %v1_14e59 = add i32 %v3_14e56, 1
  store i32 %v1_14e59, i32* %v2_14e2a, align 4
  br label %dec_label_pc_14e92

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e0a
  %v2_14e64 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_14e64, i32* @eax, align 8
  %v2_14e71 = call i32 @function_295dc(i32 %v2_14e64, i32 %arg1)
  %v3_14e80 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_14e8d = call i32 @function_2da5e(i32 %arg1, i32 %v3_14e80, i32 %arg2)
  br label %dec_label_pc_14e92

dec_label_pc_14e92:                               ; preds = %dec_label_pc_14e64, %dec_label_pc_14e37
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @_ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ea5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14ea8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_14ec9 = call i32 @function_2d2f9(i32 %arg1)
  %v1_14ece = inttoptr i32 %v1_14ec9 to i32*
  %v2_14ece = load i32, i32* %v1_14ece, align 4
  store i32 %v2_14ece, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_14ed8 = call i32 @function_2d2f9(i32 %arg2)
  %v1_14edd = inttoptr i32 %v1_14ed8 to i32*
  %v2_14edd = load i32, i32* %v1_14edd, align 4
  %v2_14ee1 = sub i32 %v2_14ece, %v2_14edd
  store i32 %v0_14ea8, i32* %ebx.global-to-local, align 4
  ret i32 %v2_14ee1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEEclES3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14efc:
  %v1_14f22 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_14f22, i32* @eax, align 8
  %v1_14f28 = call i32 @function_2de08(i32 %v1_14f22)
  store i32 %v1_14f28, i32* @eax, align 8
  store i32 %arg1, i32* @edx, align 8
  %v1_14f3e = call i32 @function_2defe(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost8optionalISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f5e:
  store i32 %arg1, i32* @eax, align 8
  %v1_14f7b = call i32 @function_2e2b6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_14f8a = call i32 @function_14f91()
  ret i32 %v1_14f8a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14f91() local_unnamed_addr {
dec_label_pc_14f91:
  %v0_14f92 = load i32, i32* @eax, align 8
  ret i32 %v0_14f92
}

define i32 @_ZN5boost8optionalISsEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f94:
  store i32 %arg1, i32* @eax, align 8
  %v1_14fb1 = call i32 @function_2e34c(i32 %arg1)
  ret i32 %v1_14fb1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5boost8optionalISsEcvMNS_15optional_detail13optional_baseISsEEKFbvEEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14fca:
  store i32 %arg1, i32* @eax, align 8
  %v2_14ff4 = call i32 @function_2e3ea(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15014:
  store i32 0, i32* @eax, align 8
  %v2_15035 = call i32 @function_1503c(i32 %arg1)
  ret i32 %v2_15035
}

define i32 @function_1503c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1503c:
  %v0_1503d = load i32, i32* @eax, align 8
  ret i32 %v0_1503d
}

define i32 @_ZN5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEEC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_1503e:
  %v4_15055 = ptrtoint i8* %arg1 to i32
  store i32 %v4_15055, i32* @eax, align 8
  %v1_1505b = call i32 @function_2a052(i32 %v4_15055)
  store i8 0, i8* %arg1, align 1
  %v1_15069 = add i32 %v4_15055, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_15069, i32* @eax, align 8
  %v1_1506f = call i32 @function_2e4c6(i32 %v1_15069)
  store i32 0, i32* @eax, align 8
  %v1_1507e = call i32 @function_15085()
  ret i32 %v1_1507e

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_15085() local_unnamed_addr {
dec_label_pc_15085:
  %v0_15086 = load i32, i32* @eax, align 8
  ret i32 %v0_15086
}

define i32 @_ZNSt6vectorISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15088:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_1508b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v1_150cc = call i32 @function_2e5e0(i32 %tmp102)
  store i32 %v0_1508b, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZNSt3setISsSt4lessISsESaISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15102:
  store i32 %arg1, i32* @eax, align 8
  %v1_1511f = call i32 @function_2e754(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1512e = call i32 @function_15135()
  ret i32 %v1_1512e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15135() local_unnamed_addr {
dec_label_pc_15135:
  %v0_15136 = load i32, i32* @eax, align 8
  ret i32 %v0_15136
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE13_Rb_tree_implIS3_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15138:
  %v1_15155 = inttoptr i32 %arg1 to i32*
  %v2_15155 = call i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %v1_15155)
  ret i32 0
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1516e:
  store i32 %arg1, i32* @eax, align 8
  %v1_1518c = call i32 @function_2e8aa(i32 %arg1)
  %v2_1519b = call i32 @function_2e82c(i32 %arg1, i32 %v1_1518c)
  store i32 %arg1, i32* @eax, align 8
  %v1_151a6 = call i32 @function_2a2a6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_151b5 = call i32 @function_151d5()
  ret i32 %v1_151b5

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_151b9() local_unnamed_addr {
dec_label_pc_151b9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_151b9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_151b9, i32* %ebx.global-to-local, align 4
  %v0_151bb = load i32, i32* @ebp, align 4
  %v1_151bb = add i32 %v0_151bb, -28
  %v2_151bb = inttoptr i32 %v1_151bb to i32*
  %v3_151bb = load i32, i32* %v2_151bb, align 4
  store i32 %v3_151bb, i32* @eax, align 8
  %v1_151c1 = call i32 @function_2a2a6(i32 %v3_151bb)
  %v0_151c6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_151c6, i32* %eax.global-to-local, align 8
  ret i32 %v0_151c6

; uselistorder directives
  uselistorder i32 (i32)* @function_2a2a6, { 1, 0 }
}

define i32 @function_151d5() local_unnamed_addr {
dec_label_pc_151d5:
  %v0_151da = load i32, i32* @eax, align 8
  ret i32 %v0_151da
}

define i32 @_ZN5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEE9found_eofEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_151dc:
  %v4_151f3 = ptrtoint i8* %arg1 to i32
  store i8 1, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v3_15203 = call i32 @function_1520a(i32 %v4_151f3)
  ret i32 %v3_15203

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_1520a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1520a:
  %v0_1520b = load i32, i32* @eax, align 8
  ret i32 %v0_1520b
}

define i32 @_ZNSt6vectorISsSaISsEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1520c:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 8
  %v1_15231 = call i32 @function_2e9b8(i32 %arg2)
  store i32 %v1_15231, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1523e = call i32 @function_2e978(i32 %arg2)
  %v0_15246 = load i32, i32* @ebx, align 4
  %v3_15251 = call i32 @function_2e9e6(i32 %tmp107, i32 %v1_1523e, i32 %v0_15246)
  store i32 %tmp107, i32* @ebx, align 4
  %v2_15266 = load i32, i32* %arg1, align 4
  store i32 %v2_15266, i32* %esi.global-to-local, align 4
  %v2_15268 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_15268, i32* @eax, align 8
  %v2_15275 = call i32 @function_2ead4(i32 %v2_15268, i32 %arg2)
  %v2_1527d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1527d, i32* @eax, align 8
  %v2_1528a = call i32 @function_2ea84(i32 %v2_1527d, i32 %arg2)
  %v0_15292 = load i32, i32* @ebx, align 4
  %v0_15296 = load i32, i32* %esi.global-to-local, align 4
  %v3_1529a = load i32, i32* %stack_var_-20, align 4
  %v3_152a1 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_152a1, i32* @eax, align 8
  %v4_152a7 = call i32 @function_2eb24(i32 %v3_152a1, i32 %v3_1529a, i32 %v0_15296, i32 %v0_15292)
  %v2_152b1 = add i32 %tmp107, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_152b1 = inttoptr i32 %v2_152b1 to i32*
  store i32 %v4_152a7, i32* %v3_152b1, align 4
  store i32 0, i32* @eax, align 8
  %v1_152be = call i32 @function_152de()
  store i32 %v1_152be, i32* @eax, align 8
  %v0_152c0 = call i32 @function_152d9()
  ret i32 %v0_152c0

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_152c3() local_unnamed_addr {
dec_label_pc_152c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_152c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_152c3
}

define i32 @function_152d9() local_unnamed_addr {
dec_label_pc_152d9:
  %v0_152d9 = load i32, i32* @eax, align 8
  ret i32 %v0_152d9
}

define i32 @function_152de() local_unnamed_addr {
dec_label_pc_152de:
  %v0_152e4 = load i32, i32* @eax, align 8
  ret i32 %v0_152e4
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_152e6:
  store i32 %arg1, i32* @eax, align 8
  %v1_15303 = call i32 @function_2ec8a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1531c:
  %v1_15339 = call i32 @function_2ed9a(i32 %arg1)
  ret i32 0
}

define i32 @_ZN13CMedianFilterIxEC1Ejx(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15352:
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-44, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_15382 = call i32 @function_2ee74(i32 %arg1)
  %v1_1538a = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v5_1538a = icmp ult i32 %v1_1538a, %arg1
  store i1 %v5_1538a, i1* @cf, align 1
  store i32 %v1_1538a, i32* @eax, align 8
  %v1_15390 = call i32 @function_2ee74(i32 %v1_1538a)
  %v2_1539b = add i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v3_1539b = inttoptr i32 %v2_1539b to i32*
  store i32 %arg2, i32* %v3_1539b, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_153ab = call i32 @function_2eeaa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_153b3 = ptrtoint i32* %stack_var_-44 to i32
  %v2_153bd = call i32 @function_2efcc(i32 %arg1, i32 %v2_153b3)
  store i32 %arg1, i32* @eax, align 8
  store i1 %v5_1538a, i1* @cf, align 1
  %v2_153d2 = call i32 @function_2f068(i32 %v1_1538a, i32 %arg1)
  %v0_153d7 = call i32 @function_15402()
  ret i32 %v0_153d7

; uselistorder directives
  uselistorder i32 (i32)* @function_2ee74, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 10, 9, 8, 7, 6, 5, 3, 4, 2, 1 }
}

define i32 @function_153d9() local_unnamed_addr {
dec_label_pc_153d9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_153d9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_153d9, i32* @ebx, align 4
  %v0_153db = load i32, i32* %ebp.global-to-local, align 4
  %v1_153db = add i32 %v0_153db, -28
  %v2_153db = inttoptr i32 %v1_153db to i32*
  %v3_153db = load i32, i32* %v2_153db, align 4
  %v1_153de = add i32 %v3_153db, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_153de, i32* %eax.global-to-local, align 8
  %v1_153e9 = call i32 @function_153ed(i32 %v1_153de)
  store i32 %v1_153e9, i32* %eax.global-to-local, align 8
  ret i32 %v1_153e9
}

define i32 @function_153eb() local_unnamed_addr {
dec_label_pc_153eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_153eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_153eb
}

define i32 @function_153ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_153ed:
  %v0_153f8 = load i32, i32* @ebx, align 4
  ret i32 %v0_153f8
}

define i32 @function_15402() local_unnamed_addr {
dec_label_pc_15402:
  %v0_15402 = load i32, i32* @ebp, align 4
  %v1_15402 = add i32 %v0_15402, -12
  %v2_15402 = inttoptr i32 %v1_15402 to i32*
  %v3_15402 = load i32, i32* %v2_15402, align 4
  %v2_15405 = xor i32 %v3_15402, 30
  %v3_15405 = icmp eq i32 %v2_15405, 0
  store i32 %v2_15405, i32* @eax, align 8
  br i1 %v3_15405, label %bb, label %dec_label_pc_1540e

bb:                                               ; preds = %dec_label_pc_15402
  %v1_1540c = call i32 @function_15413()
  br label %dec_label_pc_1540e

dec_label_pc_1540e:                               ; preds = %bb, %dec_label_pc_15402
  %v2_1540c = phi i32 [ %v1_1540c, %bb ], [ %v2_15405, %dec_label_pc_15402 ]
  ret i32 %v2_1540c
}

define i32 @function_15413() local_unnamed_addr {
dec_label_pc_15413:
  %v0_15418 = load i32, i32* @eax, align 8
  ret i32 %v0_15418
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1541a:
  %v1_15437 = call i32 @function_265c0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_15446 = call i32 @function_1544d()
  ret i32 %v1_15446
}

define i32 @function_1544d() local_unnamed_addr {
dec_label_pc_1544d:
  %v0_1544e = load i32, i32* @eax, align 8
  ret i32 %v0_1544e
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15450:
  %v1_1546d = call i32 @function_2670c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1547c = call i32 @function_15483()
  ret i32 %v1_1547c
}

define i32 @function_15483() local_unnamed_addr {
dec_label_pc_15483:
  %v0_15484 = load i32, i32* @eax, align 8
  ret i32 %v0_15484
}

define i32 @_ZN5boost11filesystem34pathC1IA10_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15486:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_154b6 = call i32 @function_2738f(i32 %arg1)
  store i32 %arg1, i32* @ebx, align 4
  %v2_154d9 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_154d9, i32* @eax, align 8
  %v3_154f2 = call i32 @function_2f40c(i32 %v2_154d9, i32 %arg1, i32 %v1_154b6)
  ret i32 %v2_154d9
}

define i32 @function_15502() local_unnamed_addr {
dec_label_pc_15502:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1550d = add i32 %tmp91, -12
  %v2_1550d = inttoptr i32 %v1_1550d to i32*
  %v3_1550d = load i32, i32* %v2_1550d, align 4
  %v2_15510 = xor i32 %v3_1550d, 30
  %v3_15510 = icmp eq i32 %v2_15510, 0
  store i32 %v2_15510, i32* @eax, align 8
  br i1 %v3_15510, label %bb, label %dec_label_pc_15519

bb:                                               ; preds = %dec_label_pc_15502
  %v1_15502 = add i32 %tmp91, -13
  %v2_15517 = call i32 @function_15555(i32 %v1_15502)
  store i32 %v2_15517, i32* @eax, align 8
  br label %dec_label_pc_15519

dec_label_pc_15519:                               ; preds = %bb, %dec_label_pc_15502
  %v0_15519 = call i32 @function_15550()
  ret i32 %v0_15519
}

define i32 @function_1551b() local_unnamed_addr {
dec_label_pc_1551b:
  %v0_1551d = load i32, i32* @ebp, align 4
  %v1_1551d = add i32 %v0_1551d, -20
  %v1_15528 = call i32 @function_1552c(i32 %v1_1551d)
  ret i32 %v1_15528
}

define i32 @function_1552a() local_unnamed_addr {
dec_label_pc_1552a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1552a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1552a
}

define i32 @function_1552c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1552c:
  %v0_1552c = load i32, i32* @ebp, align 4
  %v1_1552c = add i32 %v0_1552c, -13
  ret i32 %v1_1552c
}

define i32 @function_15537() local_unnamed_addr {
dec_label_pc_15537:
  %v0_15537 = call i32 @function_1553b()
  ret i32 %v0_15537
}

define i32 @function_15539() local_unnamed_addr {
dec_label_pc_15539:
  %eax.global-to-local = alloca i32, align 4
  %v0_15539 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15539
}

define i32 @function_1553b() local_unnamed_addr {
dec_label_pc_1553b:
  %v0_15546 = load i32, i32* @ebx, align 4
  ret i32 %v0_15546
}

define i32 @function_15550() local_unnamed_addr {
dec_label_pc_15550:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_15555(i32 %arg1) local_unnamed_addr {
dec_label_pc_15555:
  %v0_1555b = load i32, i32* @eax, align 8
  ret i32 %v0_1555b
}

define i32 @_ZNSsC1IPcEET_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1555c:
  store i32 %arg2, i32* @eax, align 8
  %v7_15599 = call i32 @function_2f599(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_155c6() local_unnamed_addr {
dec_label_pc_155c6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_155c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_155c6 = add i32 %v0_155c6, -1
  store i32 %v1_155c6, i32* %ecx.global-to-local, align 4
  %v0_155c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_155c8
}

define i32 @_ZNSt6vectorISsSaISsEE9push_backERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_155ca:
  %stack_var_-20 = alloca i32, align 4
  %v1_155ea = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_155ea = inttoptr i32 %v1_155ea to i32*
  %v3_155ea = load i32, i32* %v2_155ea, align 4
  %v1_155f0 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_155f0 = inttoptr i32 %v1_155f0 to i32*
  %v3_155f0 = load i32, i32* %v2_155f0, align 4
  %v12_155f3 = icmp eq i32 %v3_155ea, %v3_155f0
  br i1 %v12_155f3, label %dec_label_pc_15624, label %dec_label_pc_155f7

dec_label_pc_155f7:                               ; preds = %dec_label_pc_155ca
  %v3_155fa = load i32, i32* %v2_155ea, align 4
  %v3_1560e = call i32 @function_2f65a(i32 %arg1, i32 %v3_155fa, i32 %arg2)
  %v3_15616 = load i32, i32* %v2_155ea, align 4
  %v1_15619 = add i32 %v3_15616, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_15619, i32* %v2_155ea, align 4
  br label %dec_label_pc_15652

dec_label_pc_15624:                               ; preds = %dec_label_pc_155ca
  %v2_15624 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15631 = call i32 @function_2f9da(i32 %v2_15624, i32 %arg1)
  %v0_15636 = load i32, i32* @esp, align 4
  %v5_15636 = icmp ult i32 %v0_15636, 4
  store i1 %v5_15636, i1* @cf, align 1
  %v3_15640 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_1564d = call i32 @function_2f6dc(i32 %arg1, i32 %v3_15640, i32 %arg2)
  br label %dec_label_pc_15652

dec_label_pc_15652:                               ; preds = %dec_label_pc_15624, %dec_label_pc_155f7
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 5, 4 }
}

define i32 @_ZN5boost15foreach_detail_7containIKSsEENS0_8auto_anyIPT_EERS4_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15665:
  %stack_var_-20 = alloca i32, align 4
  %v1_1568e = call i32 @function_2fb16(i32 %arg2)
  store i32 %v1_1568e, i32* %stack_var_-20, align 4
  %v2_15696 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_156a3 = call i32 @function_2fb6d(i32 %arg1, i32 %v2_15696)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_5beginISsN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeIS7_S8_EEPNS3_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_156c0:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_156ef = call i32 @function_2fc0d(i32 %arg2)
  %v1_156f4 = inttoptr i32 %v1_156ef to i32*
  %v2_156f4 = load i32, i32* %v1_156f4, align 4
  store i32 %v2_156f4, i32* @eax, align 8
  %v1_156f9 = call i32 @function_2fc3a(i32 %v2_156f4)
  %v2_156fe = ptrtoint i32* %stack_var_-20 to i32
  %v2_15708 = call i32 @function_2fc67(i32 %v2_156fe, i32 %v1_156f9)
  %v0_1570d = load i32, i32* @esp, align 4
  %v5_1570d = icmp ult i32 %v0_1570d, 4
  store i1 %v5_1570d, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_1571d = call i32 @function_2fcb2(i32 %arg1, i32 %v2_156fe)
  store i32 %arg1, i32* @eax, align 8
  %v1_1572f = call i32 @function_15736()
  ret i32 %v1_1572f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_15736() local_unnamed_addr {
dec_label_pc_15736:
  %v0_15737 = load i32, i32* @eax, align 8
  ret i32 %v0_15737
}

define i32 @_ZN5boost15foreach_detail_3endISsN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeIS7_S8_EEPNS3_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1573a:
  %stack_var_-20 = alloca i32, align 4
  %v1_15769 = call i32 @function_2fc87(i32 %arg2)
  %v1_1576e = inttoptr i32 %v1_15769 to i32*
  %v2_1576e = load i32, i32* %v1_1576e, align 4
  store i32 %v2_1576e, i32* @eax, align 8
  %v1_15773 = call i32 @function_2fcb4(i32 %v2_1576e)
  store i32 %v1_15773, i32* @eax, align 8
  %v2_15778 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15782 = call i32 @function_2fd71(i32 %v2_15778, i32 %v1_15773)
  store i32 %arg1, i32* @eax, align 8
  %v2_15797 = call i32 @function_2fd2c(i32 %arg1, i32 %v2_15778)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_4doneISsN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseES7_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_157b4:
  %v1_157de = call i32 @function_2fe35(i32 %arg2)
  store i32 %v1_157de, i32* @ebx, align 4
  %v1_157eb = call i32 @function_2fe35(i32 %arg1)
  store i32 %v1_157eb, i32* @eax, align 8
  %v0_157f0 = load i32, i32* @ebx, align 4
  %v2_157f7 = call i32 @function_2fe62(i32 %v1_157eb, i32 %v0_157f0)
  store i32 %v2_157f7, i32* @eax, align 8
  %v1_15806 = call i32 @function_1580d()
  ret i32 %v1_15806

; uselistorder directives
  uselistorder i32 (i32)* @function_2fe35, { 1, 0 }
}

define i32 @function_1580d() local_unnamed_addr {
dec_label_pc_1580d:
  %v0_15812 = load i32, i32* @eax, align 8
  ret i32 %v0_15812
}

define i32 @_ZN5boost15foreach_detail_4nextISsN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15813:
  store i32 %arg1, i32* @eax, align 8
  %v1_15836 = call i32 @function_2fe94(i32 %arg1)
  store i32 %v1_15836, i32* @eax, align 8
  %v1_1583e = call i32 @function_29aa3(i32 %v1_15836)
  store i32 0, i32* @eax, align 8
  %v1_1584d = call i32 @function_15854()
  ret i32 %v1_1584d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15854() local_unnamed_addr {
dec_label_pc_15854:
  %v0_15855 = load i32, i32* @eax, align 8
  ret i32 %v0_15855
}

define i32 @_ZN5boost15foreach_detail_5derefISsN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS6_S7_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15856:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_15879 = call i32 @function_2fed7(i32 %arg1)
  store i32 %v1_15879, i32* @eax, align 8
  %v1_15881 = call i32 @function_29b20(i32 %v1_15879)
  store i32 0, i32* @edx, align 8
  ret i32 %v1_15881

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplERKi(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1589a:
  %stack_var_-20 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v2_158c0 = load i32, i32* %arg2, align 4
  %v1_158c5 = inttoptr i32 %tmp4 to i32*
  %v2_158c5 = load i32, i32* %v1_158c5, align 4
  %v2_158c7 = add i32 %v2_158c5, %v2_158c0
  store i32 %v2_158c7, i32* %stack_var_-20, align 4
  %v2_158cc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_158d9 = call i32 @function_2d700(i32 %arg1, i32 %v2_158cc)
  store i32 %arg1, i32* @eax, align 8
  %v1_158eb = call i32 @function_158f2()
  ret i32 %v1_158eb

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2d700, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_158f2() local_unnamed_addr {
dec_label_pc_158f2:
  %v0_158f3 = load i32, i32* @eax, align 8
  ret i32 %v0_158f3
}

define i32 @_ZNSs6appendIN9__gnu_cxx17__normal_iteratorIPcSsEEEERSsT_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_158f6:
  ret i32 %arg1
}

define i32 @function_15969() local_unnamed_addr {
dec_label_pc_15969:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15969 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15969 = add i32 %v0_15969, 862319701
  %v2_15969 = inttoptr i32 %v1_15969 to i32*
  %v3_15969 = load i32, i32* %v2_15969, align 4
  %v4_15969 = add i32 %v3_15969, -1
  store i32 %v4_15969, i32* %v2_15969, align 4
  %v0_1596f = load i32, i32* %eax.global-to-local, align 8
  %v1_1596f = load i1, i1* %cf.global-to-local, align 1
  %v2_1596f = zext i1 %v1_1596f to i32
  %v3_1596f = add i32 %v0_1596f, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_1596f = add i32 %v3_1596f, %v2_1596f
  %v20_1596f = add i32 %v0_1596f, 20
  %v21_1596f = add i32 %v20_1596f, %v2_1596f
  %v22_1596f = icmp ule i32 %v21_1596f, %v0_1596f
  %v23_1596f = icmp ugt i32 %v0_1596f, -21
  %v24_1596f = select i1 %v1_1596f, i1 %v22_1596f, i1 %v23_1596f
  store i1 %v24_1596f, i1* %cf.global-to-local, align 1
  store i32 %v4_1596f, i32* %eax.global-to-local, align 8
  ret i32 %v4_1596f
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1597e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_1599e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1599e, i32* @eax, align 8
  %v2_159a8 = call i32 @function_30080(i32 %v2_1599e, i32 %arg1)
  store i32 %arg1, i32* @edx, align 8
  %v2_159b3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_159b3, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 4
  %v3_159c4 = call i32 @function_300ca(i32 %v2_159b3, i32 %arg1, i32 %arg2)
  store i32 %v2_159b3, i32* @eax, align 8
  %v2_159d9 = call i32 @function_301b6(i32 %v2_159b3, i32 %v2_1599e)
  %v4_159de = trunc i32 %v2_159d9 to i8
  %v5_159de = icmp eq i8 %v4_159de, 0
  %. = zext i1 %v5_159de to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt4pairIKSsSsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a02:
  %v1_15a1d = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_15a1d
}

define i32 @function_15a32() local_unnamed_addr {
dec_label_pc_15a32:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15a32 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15a32 = add i32 %v0_15a32, 862319685
  %v2_15a32 = inttoptr i32 %v1_15a32 to i32*
  %v3_15a32 = load i32, i32* %v2_15a32, align 4
  %v4_15a32 = add i32 %v3_15a32, -1
  store i32 %v4_15a32, i32* %v2_15a32, align 4
  %v0_15a38 = load i32, i32* %eax.global-to-local, align 8
  %v1_15a38 = add i32 %v0_15a38, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_15a38 = icmp eq i32 %v1_15a38, 0
  store i32 %v1_15a38, i32* @eax, align 8
  br i1 %v10_15a38, label %bb, label %dec_label_pc_15a58

bb:                                               ; preds = %dec_label_pc_15a32
  %v1_15a3d = call i32 @function_15a5d()
  store i32 %v1_15a3d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_15a58

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a32, %bb
  %v0_15a3f = phi i32 [ %v1_15a38, %dec_label_pc_15a32 ], [ %v1_15a3d, %bb ]
  ret i32 %v0_15a3f

; uselistorder directives
  uselistorder label %dec_label_pc_15a58, { 1, 0 }
}

define i32 @function_15a41() local_unnamed_addr {
dec_label_pc_15a41:
  %eax.global-to-local = alloca i32, align 4
  %v0_15a41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15a41
}

define i32 @function_15a5d() local_unnamed_addr {
dec_label_pc_15a5d:
  %v0_15a62 = load i32, i32* @eax, align 8
  ret i32 %v0_15a62
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15a64:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_15a82 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_15a82, i32* @eax, align 8
  %v3_15a96 = call i32 @function_302dc(i32 %v2_15a82, i32 %arg1, i32 %arg2)
  %v0_15a9b = load i32, i32* @esp, align 4
  %v5_15a9b = icmp ult i32 %v0_15a9b, 4
  store i1 %v5_15a9b, i1* @cf, align 1
  %v2_15a9e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15a9e, i32* @eax, align 8
  %v2_15aab = call i32 @function_303f8(i32 %v2_15a9e, i32 %arg1)
  store i32 %v2_15a82, i32* @eax, align 8
  %v2_15ac0 = call i32 @function_30442(i32 %v2_15a82, i32 %v2_15a9e)
  store i32 %v2_15ac0, i32* %eax.global-to-local, align 8
  %v4_15ac5 = trunc i32 %v2_15ac0 to i8
  store i1 false, i1* @cf, align 1
  %v5_15ac5 = icmp eq i8 %v4_15ac5, 0
  store i1 %v5_15ac5, i1* @zf, align 1
  %v1_15ac7 = icmp eq i1 %v5_15ac5, false
  br i1 %v1_15ac7, label %dec_label_pc_15b11, label %dec_label_pc_15ac9

dec_label_pc_15ac9:                               ; preds = %dec_label_pc_15a64
  store i32 %v2_15a82, i32* @eax, align 8
  %v1_15acf = call i32 @function_3037e(i32 %v2_15a82)
  store i32 %v1_15acf, i32* @ebx, align 4
  %v2_15ad6 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_15ad6, i32* @eax, align 8
  %v2_15ae3 = call i32 @function_30334(i32 %v2_15ad6, i32 %arg1)
  %v0_15aeb = load i32, i32* @ebx, align 4
  %v2_15af6 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_15af6, i32* %eax.global-to-local, align 8
  %v3_15afc = call i32 @function_303b0(i32 %v2_15af6, i32 %arg2, i32 %v0_15aeb)
  store i32 %v3_15afc, i32* %eax.global-to-local, align 8
  %v4_15b01 = trunc i32 %v3_15afc to i8
  %v5_15b01 = icmp ne i8 %v4_15b01, 0
  %. = zext i1 %v5_15b01 to i32
  br label %dec_label_pc_15b11

dec_label_pc_15b11:                               ; preds = %dec_label_pc_15ac9, %dec_label_pc_15a64
  %storemerge = phi i32 [ 1, %dec_label_pc_15a64 ], [ %., %dec_label_pc_15ac9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_15b11 = icmp eq i32 %storemerge, 0
  store i1 %v5_15b11, i1* @zf, align 1
  br i1 %v5_15b11, label %bb, label %dec_label_pc_15b15

bb:                                               ; preds = %dec_label_pc_15b11
  %v1_15b13 = call i32 @function_15b78()
  store i32 %v1_15b13, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_15b15

dec_label_pc_15b15:                               ; preds = %bb, %dec_label_pc_15b11
  %v2_15b15 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_15b15, i32* %eax.global-to-local, align 8
  %v1_15b18 = load i32, i32* @esp, align 4
  %v2_15b18 = inttoptr i32 %v1_15b18 to i32*
  store i32 %v2_15b15, i32* %v2_15b18, align 4
  %v4_15b18 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_15b18

; uselistorder directives
  uselistorder i1 %v5_15b11, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
}

define i32 @function_15b78() local_unnamed_addr {
dec_label_pc_15b78:
  %v0_15b78 = load i32, i32* @ebp, align 4
  %v1_15b78 = add i32 %v0_15b78, -28
  store i32 %v1_15b78, i32* @eax, align 8
  %v1_15b7e = call i32 @function_3037e(i32 %v1_15b78)
  %v1_15b83 = add i32 %v1_15b7e, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_15b83, i32* @eax, align 8
  %v0_15b86 = load i32, i32* @ebp, align 4
  %v1_15b86 = add i32 %v0_15b86, -12
  %v2_15b86 = inttoptr i32 %v1_15b86 to i32*
  %v3_15b86 = load i32, i32* %v2_15b86, align 4
  %v3_15b89 = icmp eq i32 %v3_15b86, 30
  br i1 %v3_15b89, label %bb, label %dec_label_pc_15b92

bb:                                               ; preds = %dec_label_pc_15b78
  %v1_15b90 = call i32 @function_15bbf()
  store i32 %v1_15b90, i32* @eax, align 8
  br label %dec_label_pc_15b92

dec_label_pc_15b92:                               ; preds = %bb, %dec_label_pc_15b78
  %v0_15b92 = call i32 @function_15bba()
  ret i32 %v0_15b92

; uselistorder directives
  uselistorder i32 (i32)* @function_3037e, { 1, 0 }
}

define i32 @function_15b94() local_unnamed_addr {
dec_label_pc_15b94:
  %v0_15b96 = load i32, i32* @ebp, align 4
  %v1_15b96 = add i32 %v0_15b96, -36
  %v1_15ba1 = call i32 @function_15ba5(i32 %v1_15b96)
  ret i32 %v1_15ba1
}

define i32 @function_15ba3() local_unnamed_addr {
dec_label_pc_15ba3:
  %eax.global-to-local = alloca i32, align 4
  %v0_15ba3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15ba3
}

define i32 @function_15ba5(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ba5:
  %v0_15ba5 = load i32, i32* @ebp, align 4
  %v1_15ba5 = add i32 %v0_15ba5, -20
  ret i32 %v1_15ba5
}

define i32 @function_15bba() local_unnamed_addr {
dec_label_pc_15bba:
  %v0_15bba = load i32, i32* @eax, align 8
  ret i32 %v0_15bba
}

define i32 @function_15bbf() local_unnamed_addr {
dec_label_pc_15bbf:
  %v0_15bc3 = load i32, i32* @eax, align 8
  ret i32 %v0_15bc3
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bc4:
  store i32 %arg1, i32* @eax, align 8
  %v1_15be1 = call i32 @function_306d4(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bfa:
  %v1_15c17 = call i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_15c26 = call i32 @function_15c2d()
  ret i32 %v1_15c26
}

define i32 @function_15c2d() local_unnamed_addr {
dec_label_pc_15c2d:
  %v0_15c2e = load i32, i32* @eax, align 8
  ret i32 %v0_15c2e
}

define i32 @_ZNSt4pairIKSsSt6vectorISsSaISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c30:
  ret i32 %arg1
}

define i32 @function_15c60() local_unnamed_addr {
dec_label_pc_15c60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15c60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15c60 = add i32 %v0_15c60, 862319685
  %v2_15c60 = inttoptr i32 %v1_15c60 to i32*
  %v3_15c60 = load i32, i32* %v2_15c60, align 4
  %v4_15c60 = add i32 %v3_15c60, -1
  store i32 %v4_15c60, i32* %v2_15c60, align 4
  %v0_15c66 = load i32, i32* %eax.global-to-local, align 8
  %v1_15c66 = add i32 %v0_15c66, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_15c66 = icmp eq i32 %v1_15c66, 0
  store i32 %v1_15c66, i32* @eax, align 8
  br i1 %v10_15c66, label %bb, label %dec_label_pc_15c6d

bb:                                               ; preds = %dec_label_pc_15c60
  %v1_15c6b = call i32 @function_15c8b()
  store i32 %v1_15c6b, i32* @eax, align 8
  br label %dec_label_pc_15c6d

dec_label_pc_15c6d:                               ; preds = %bb, %dec_label_pc_15c60
  %v0_15c6d = call i32 @function_15c86()
  store i32 %v0_15c6d, i32* %eax.global-to-local, align 8
  ret i32 %v0_15c6d
}

define i32 @function_15c70() local_unnamed_addr {
dec_label_pc_15c70:
  %eax.global-to-local = alloca i32, align 4
  %v0_15c70 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15c70
}

define i32 @function_15c86() local_unnamed_addr {
dec_label_pc_15c86:
  %v0_15c86 = load i32, i32* @eax, align 8
  ret i32 %v0_15c86
}

define i32 @function_15c8b() local_unnamed_addr {
dec_label_pc_15c8b:
  %v0_15c90 = load i32, i32* @eax, align 8
  ret i32 %v0_15c90
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c92:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-69 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i1 true, i1* @zf, align 1
  %v2_15cb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15cb0, i32* @eax, align 8
  %v3_15cc4 = call i32 @function_308d2(i32 %v2_15cb0, i32 %arg1, i32 %arg2)
  %v2_15ccc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_15ccc, i32* @eax, align 8
  %v2_15cd9 = call i32 @function_309a6(i32 %v2_15ccc, i32 %arg1)
  %v0_15cde = load i32, i32* @esp, align 4
  %v5_15cde = icmp ult i32 %v0_15cde, 4
  store i1 %v5_15cde, i1* @cf, align 1
  store i32 %v2_15cb0, i32* @eax, align 8
  %v2_15cee = call i32 @function_309f0(i32 %v2_15cb0, i32 %v2_15ccc)
  %v4_15cf3 = trunc i32 %v2_15cee to i8
  %v5_15cf3 = icmp eq i8 %v4_15cf3, 0
  %v1_15cf5 = icmp eq i1 %v5_15cf3, false
  br i1 %v1_15cf5, label %dec_label_pc_15d3f, label %dec_label_pc_15cf7

dec_label_pc_15cf7:                               ; preds = %dec_label_pc_15c92
  %v1_15cfd = call i32 @function_30974(i32 %v2_15cb0)
  %v2_15d04 = ptrtoint i32* %stack_var_-69 to i32
  store i32 %v2_15d04, i32* @eax, align 8
  %v2_15d11 = call i32 @function_3092a(i32 %v2_15d04, i32 %arg1)
  %v2_15d24 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_15d24, i32* @eax, align 8
  %v3_15d2a = call i32 @function_305de(i32 %v2_15d24, i32 %arg2, i32 %v1_15cfd)
  %v4_15d2f = trunc i32 %v3_15d2a to i8
  %v5_15d2f = icmp ne i8 %v4_15d2f, 0
  %phitmp124 = icmp eq i1 %v5_15d2f, false
  br label %dec_label_pc_15d3f

dec_label_pc_15d3f:                               ; preds = %dec_label_pc_15cf7, %dec_label_pc_15c92
  %storemerge = phi i1 [ false, %dec_label_pc_15c92 ], [ %phitmp124, %dec_label_pc_15cf7 ]
  br i1 %storemerge, label %dec_label_pc_15da6, label %dec_label_pc_15d43

dec_label_pc_15d43:                               ; preds = %dec_label_pc_15d3f
  %v2_15d43 = ptrtoint i32* %stack_var_-40 to i32
  %v1_15d46 = load i32, i32* @esp, align 4
  %v2_15d46 = inttoptr i32 %v1_15d46 to i32*
  store i32 %v2_15d43, i32* %v2_15d46, align 4
  %v0_15d49 = call i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_()
  %v1_15d51 = load i32, i32* @esp, align 4
  %v2_15d51 = add i32 %v1_15d51, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_15d51 = inttoptr i32 %v2_15d51 to i32*
  store i32 %v2_15d43, i32* %v3_15d51, align 4
  %v1_15d58 = load i32, i32* @esp, align 4
  %v2_15d58 = add i32 %v1_15d58, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_15d58 = inttoptr i32 %v2_15d58 to i32*
  store i32 %arg2, i32* %v3_15d58, align 4
  %v2_15d5c = ptrtoint i32* %stack_var_-56 to i32
  %v1_15d5f = load i32, i32* @esp, align 4
  %v2_15d5f = inttoptr i32 %v1_15d5f to i32*
  store i32 %v2_15d5c, i32* %v2_15d5f, align 4
  %v0_15d62 = call i32 @function_30a66()
  %v2_15d67 = ptrtoint i32* %stack_var_-76 to i32
  %v1_15d6d = load i32, i32* @esp, align 4
  %v2_15d6d = add i32 %v1_15d6d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_15d6d = inttoptr i32 %v2_15d6d to i32*
  store i32 %v2_15d5c, i32* %v3_15d6d, align 4
  %v3_15d71 = load i32, i32* %stack_var_-28, align 4
  %v1_15d74 = load i32, i32* @esp, align 4
  %v2_15d74 = add i32 %v1_15d74, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_15d74 = inttoptr i32 %v2_15d74 to i32*
  store i32 %v3_15d71, i32* %v3_15d74, align 4
  store i32 %arg1, i32* @edx, align 8
  %v1_15d7b = load i32, i32* @esp, align 4
  %v2_15d7b = add i32 %v1_15d7b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_15d7b = inttoptr i32 %v2_15d7b to i32*
  store i32 %arg1, i32* %v3_15d7b, align 4
  %v1_15d7f = load i32, i32* @esp, align 4
  %v2_15d7f = inttoptr i32 %v1_15d7f to i32*
  store i32 %v2_15d67, i32* %v2_15d7f, align 4
  %v0_15d82 = call i32 @function_30ae2()
  %v0_15d87 = load i32, i32* @esp, align 4
  %v1_15d87 = sub i32 %v0_15d87, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_15d8a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_15d8a, i32* %stack_var_-28, align 4
  store i32 %v2_15d5c, i32* @eax, align 8
  %v2_15d93 = inttoptr i32 %v1_15d87 to i32*
  store i32 %v2_15d5c, i32* %v2_15d93, align 4
  %v0_15d96 = load i32, i32* %stack_var_-28, align 4
  %v1_15d96 = call i32 @function_2b8c2(i32 %v0_15d96)
  store i32 %v2_15d43, i32* @eax, align 8
  %v1_15d9e = load i32, i32* @esp, align 4
  %v2_15d9e = inttoptr i32 %v1_15d9e to i32*
  store i32 %v2_15d43, i32* %v2_15d9e, align 4
  %v0_15da1 = load i32, i32* %stack_var_-28, align 4
  %v1_15da1 = call i32 @function_2ad1a(i32 %v0_15da1)
  br label %dec_label_pc_15da6

dec_label_pc_15da6:                               ; preds = %dec_label_pc_15d43, %dec_label_pc_15d3f
  %v1_15da9 = load i32, i32* @esp, align 4
  %v2_15da9 = inttoptr i32 %v1_15da9 to i32*
  store i32 %v2_15cb0, i32* %v2_15da9, align 4
  %v0_15dac = load i32, i32* %stack_var_-28, align 4
  %v1_15dac = call i32 @function_30974(i32 %v0_15dac)
  %v1_15db1 = add i32 %v1_15dac, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_15db1, i32* @eax, align 8
  %v1_15dbe = call i32 @function_15ded()
  ret i32 %v1_15dbe

; uselistorder directives
  uselistorder i32 %v2_15cb0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @function_30974, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
}

define i32 @function_15dc2() local_unnamed_addr {
dec_label_pc_15dc2:
  %eax.global-to-local = alloca i32, align 4
  %v0_15dc2 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_15dc2, i32* @ebx, align 4
  %v0_15dc4 = load i32, i32* @ebp, align 4
  %v1_15dc4 = add i32 %v0_15dc4, -52
  store i32 %v1_15dc4, i32* @eax, align 8
  %v1_15dca = call i32 @function_2b8c2(i32 %v1_15dc4)
  store i32 %v1_15dca, i32* %eax.global-to-local, align 8
  %v0_15dcf = call i32 @function_15dd3()
  store i32 %v0_15dcf, i32* %eax.global-to-local, align 8
  ret i32 %v0_15dcf

; uselistorder directives
  uselistorder i32 (i32)* @function_2b8c2, { 1, 0 }
}

define i32 @function_15dd1() local_unnamed_addr {
dec_label_pc_15dd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_15dd1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15dd1
}

define i32 @function_15dd3() local_unnamed_addr {
dec_label_pc_15dd3:
  %v0_15dd3 = load i32, i32* @ebp, align 4
  %v1_15dd3 = add i32 %v0_15dd3, -36
  store i32 %v1_15dd3, i32* @eax, align 8
  %v1_15dd9 = call i32 @function_2ad1a(i32 %v1_15dd3)
  %v0_15dde = load i32, i32* @ebx, align 4
  ret i32 %v0_15dde

; uselistorder directives
  uselistorder i32 (i32)* @function_2ad1a, { 1, 0 }
}

define i32 @function_15ded() local_unnamed_addr {
dec_label_pc_15ded:
  %v0_15df1 = load i32, i32* @eax, align 8
  ret i32 %v0_15df1
}

define i32 @_ZN5boost15foreach_detail_7containISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS0_8auto_anyIPT_EERSB_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15df2:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_15e1b = call i32 @function_30cb8(i32 %arg2)
  store i32 %v1_15e1b, i32* %stack_var_-20, align 4
  %v2_15e23 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15e30 = call i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1, i32 %v2_15e23)
  store i32 %arg1, i32* @eax, align 8
  %v1_15e42 = call i32 @function_15e49()
  ret i32 %v1_15e42

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15e49() local_unnamed_addr {
dec_label_pc_15e49:
  %v0_15e4a = load i32, i32* @eax, align 8
  ret i32 %v0_15e4a
}

define i32 @_ZN5boost15foreach_detail_5beginISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15e4d:
  %stack_var_-20 = alloca i32, align 4
  %v1_15e7c = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg2)
  %v1_15e81 = inttoptr i32 %v1_15e7c to i32*
  %v2_15e81 = load i32, i32* %v1_15e81, align 4
  store i32 %v2_15e81, i32* @eax, align 8
  %v1_15e86 = call i32 @function_30ddd(i32 %v2_15e81)
  store i32 %v1_15e86, i32* @eax, align 8
  %v2_15e8b = ptrtoint i32* %stack_var_-20 to i32
  %v2_15e95 = call i32 @function_30e0a(i32 %v2_15e8b, i32 %v1_15e86)
  store i32 %arg1, i32* @eax, align 8
  %v2_15eaa = call i32 @function_30e55(i32 %arg1, i32 %v2_15e8b)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15ec7:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_15ef6 = trunc i32 %arg2 to i16
  %v2_15ef6 = call i32 @function_30e2a(i16 %v1_15ef6)
  %v1_15efb = inttoptr i32 %v2_15ef6 to i32*
  %v2_15efb = load i32, i32* %v1_15efb, align 4
  %v1_15f00 = call i32 @function_30e57(i32 %v2_15efb)
  %v2_15f05 = ptrtoint i32* %stack_var_-20 to i32
  %v2_15f0f = call i32 @__stack_chk_fail.1080(i32 %v2_15f05, i32 %v1_15f00)
  store i32 %arg1, i32* @eax, align 8
  %v2_15f24 = call i32 @function_30ecf(i32 %arg1, i32 %v2_15f05)
  store i32 %arg1, i32* @eax, align 8
  %v1_15f36 = call i32 @function_15f3d()
  ret i32 %v1_15f36

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_15f3d() local_unnamed_addr {
dec_label_pc_15f3d:
  %v0_15f3e = load i32, i32* @eax, align 8
  ret i32 %v0_15f3e
}

define i32 @_ZN5boost15foreach_detail_4doneISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESF_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f41:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v1_15f6b = call i32 @function_30fd8(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_15f78 = call i32 @function_30fd8(i32 %arg1)
  store i32 %v1_15f78, i32* @eax, align 8
  %v2_15f84 = call i32 @function_3091f(i32 %v1_15f78, i32 %v1_15f6b)
  store i32 %v2_15f84, i32* @eax, align 8
  %v1_15f93 = call i32 @function_15f9a()
  ret i32 %v1_15f93

; uselistorder directives
  uselistorder i32 (i32)* @function_30fd8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15f9a() local_unnamed_addr {
dec_label_pc_15f9a:
  %v0_15f9f = load i32, i32* @eax, align 8
  ret i32 %v0_15f9f
}

define i32 @_ZN5boost15foreach_detail_4nextISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fa0:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_15fc3 = call i32 @function_31037(i32 %arg1)
  %v1_15fcb = call i32 @function_31064(i32 %v1_15fc3)
  store i32 0, i32* @eax, align 8
  %v1_15fda = call i32 @function_15fe1()
  ret i32 %v1_15fda

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15fe1() local_unnamed_addr {
dec_label_pc_15fe1:
  %v0_15fe2 = load i32, i32* @eax, align 8
  ret i32 %v0_15fe2
}

define i32 @_ZN5boost15foreach_detail_5derefISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISE_SF_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fe3:
  %v1_16006 = call i32 @function_3107a(i32 %arg1)
  %v1_1600e = call i32 @function_308fd(i32 %v1_16006)
  ret i32 %v1_1600e
}

define i32 @_ZNSt4pairISsSsEC1IKSsSsEERKS_IT_T0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16026:
  %v1_16059 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1605f = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1606e = call i32 @function_16087(i32 %v1_1605f, i32 %v1_16059)
  ret i32 %v2_1606e
}

define i32 @function_16071() local_unnamed_addr {
dec_label_pc_16071:
  %eax.global-to-local = alloca i32, align 4
  %v0_16071 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16071
}

define i32 @function_16087(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16087:
  %v0_16087 = load i32, i32* @ebp, align 4
  %v1_16087 = add i32 %v0_16087, -12
  %v2_16087 = inttoptr i32 %v1_16087 to i32*
  %v3_16087 = load i32, i32* %v2_16087, align 4
  %v2_1608a = xor i32 %v3_16087, 30
  %v3_1608a = icmp eq i32 %v2_1608a, 0
  store i32 %v2_1608a, i32* @eax, align 8
  br i1 %v3_1608a, label %bb, label %dec_label_pc_16093

bb:                                               ; preds = %dec_label_pc_16087
  %v1_16091 = call i32 @function_16098()
  br label %dec_label_pc_16093

dec_label_pc_16093:                               ; preds = %bb, %dec_label_pc_16087
  %v2_16091 = phi i32 [ %v1_16091, %bb ], [ %v2_1608a, %dec_label_pc_16087 ]
  ret i32 %v2_16091
}

define i32 @function_16098() local_unnamed_addr {
dec_label_pc_16098:
  %v0_1609d = load i32, i32* @eax, align 8
  ret i32 %v0_1609d
}

define i32 @_ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1609e:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v7_160db = call i32 @function_311a1(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16108() local_unnamed_addr {
dec_label_pc_16108:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16108 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16108 = add i32 %v0_16108, -1
  store i32 %v1_16108, i32* %ecx.global-to-local, align 4
  %v0_1610a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1610a
}

define i32 @_ZNSt6vectorIhSaIhEE7reserveEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1610c:
  %tmp13 = ptrtoint i32* %arg1 to i32
  store i32 %tmp13, i32* @eax, align 8
  %v2_1612f = call i32 @function_31262(i32 %tmp13)
  %v10_16134 = icmp ult i32 %v2_1612f, %arg2
  %v5_1613a = icmp eq i1 %v10_16134, false
  br i1 %v5_1613a, label %dec_label_pc_1614a, label %dec_label_pc_1613e

dec_label_pc_1613e:                               ; preds = %dec_label_pc_1610c
  br label %dec_label_pc_1614a

dec_label_pc_1614a:                               ; preds = %dec_label_pc_1613e, %dec_label_pc_1610c
  %v2_16150 = call i32 @function_2e5c2(i32 %tmp13)
  %v10_16155 = icmp ult i32 %v2_16150, %arg2
  %v5_1615b = icmp eq i1 %v10_16155, false
  br i1 %v5_1615b, label %dec_label_pc_16212, label %dec_label_pc_16163

dec_label_pc_16163:                               ; preds = %dec_label_pc_1614a
  store i32 %tmp13, i32* @eax, align 8
  %v2_16169 = call i32 @function_29448(i32 %tmp13)
  %v1_16174 = add i32 %tmp13, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16174 = inttoptr i32 %v1_16174 to i32*
  %v3_16174 = load i32, i32* %v2_16174, align 4
  %v2_1617a = load i32, i32* %arg1, align 4
  store i32 %tmp13, i32* @eax, align 8
  %v5_16191 = call i32 @function_312a0(i32 %tmp13, i32 %arg2, i32 %v2_1617a, i32 %v3_16174)
  %v2_1619f = call i32 @function_2e41c(i32 %tmp13)
  store i32 %v2_1619f, i32* @eax, align 8
  %v3_161a7 = load i32, i32* %v2_16174, align 4
  store i32 %v3_161a7, i32* @ecx, align 4
  %v2_161ad = load i32, i32* %arg1, align 4
  %v4_161ba = call i32 @function_2e449(i32 %v2_161ad, i32 %v3_161a7, i32 %v2_1619f)
  %v1_161c2 = add i32 %tmp13, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_161c2 = inttoptr i32 %v1_161c2 to i32*
  %v3_161c2 = load i32, i32* %v2_161c2, align 4
  %v2_161ca = load i32, i32* %arg1, align 4
  %v2_161ce = sub i32 %v3_161c2, %v2_161ca
  store i32 %v2_161ce, i32* @ecx, align 4
  %v2_161d7 = load i32, i32* %arg1, align 4
  store i32 %v2_161d7, i32* @edx, align 8
  store i32 %tmp13, i32* @eax, align 8
  %v4_161e7 = call i32 @function_2e600(i32 %tmp13, i32 %v2_161d7, i32 %v2_161ce)
  store i32 %v5_16191, i32* %arg1, align 4
  %v2_161fa = add i32 %v5_16191, %v2_16169
  store i32 %v2_161fa, i32* %v2_16174, align 4
  %v2_16205 = load i32, i32* %arg1, align 4
  %v5_16209 = add i32 %v2_16205, %arg2
  store i32 %v5_16209, i32* %v2_161c2, align 4
  br label %dec_label_pc_16212

dec_label_pc_16212:                               ; preds = %dec_label_pc_16163, %dec_label_pc_1614a
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp13, { 1, 0, 2, 3, 5, 4, 6, 8, 7, 9, 11, 10 }
}

define i32 @_ZN5boost11filesystem34pathC1IA2_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16226:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_16256 = call i32 @function_2812f(i32 %arg1)
  %v2_16279 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_16279
}

define i32 @function_162ac() local_unnamed_addr {
dec_label_pc_162ac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_162ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_162ac = add i32 %v0_162ac, 862319685
  %v2_162ac = inttoptr i32 %v1_162ac to i32*
  %v3_162ac = load i32, i32* %v2_162ac, align 4
  %v4_162ac = add i32 %v3_162ac, -1
  store i32 %v4_162ac, i32* %v2_162ac, align 4
  %v0_162b2 = load i32, i32* %eax.global-to-local, align 8
  %v1_162b2 = add i32 %v0_162b2, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_162b2 = icmp eq i32 %v1_162b2, 0
  store i32 %v1_162b2, i32* @eax, align 8
  br i1 %v10_162b2, label %bb, label %dec_label_pc_162b9

bb:                                               ; preds = %dec_label_pc_162ac
  %v1_162b7 = call i32 @function_162f5()
  store i32 %v1_162b7, i32* @eax, align 8
  br label %dec_label_pc_162b9

dec_label_pc_162b9:                               ; preds = %bb, %dec_label_pc_162ac
  %v0_162b9 = call i32 @function_162f0()
  store i32 %v0_162b9, i32* %eax.global-to-local, align 8
  ret i32 %v0_162b9
}

define i32 @function_162bc() local_unnamed_addr {
dec_label_pc_162bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_162bc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_162bc
}

define i32 @function_162c8() local_unnamed_addr {
dec_label_pc_162c8:
  %v0_162c8 = call i32 @function_162cc()
  ret i32 %v0_162c8
}

define i32 @function_162ca() local_unnamed_addr {
dec_label_pc_162ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_162ca = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_162ca
}

define i32 @function_162cc() local_unnamed_addr {
dec_label_pc_162cc:
  %v0_162cc = load i32, i32* @ebp, align 4
  %v1_162cc = add i32 %v0_162cc, -13
  %v1_162d7 = call i32 @function_162db(i32 %v1_162cc)
  ret i32 %v1_162d7
}

define i32 @function_162d9() local_unnamed_addr {
dec_label_pc_162d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_162d9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_162d9
}

define i32 @function_162db(i32 %arg1) local_unnamed_addr {
dec_label_pc_162db:
  %v0_162e6 = load i32, i32* @ebx, align 4
  ret i32 %v0_162e6
}

define i32 @function_162f0() local_unnamed_addr {
dec_label_pc_162f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_162f5() local_unnamed_addr {
dec_label_pc_162f5:
  %v0_162fb = load i32, i32* @eax, align 8
  ret i32 %v0_162fb
}

define i32 @_ZN5boost11filesystem34pathC1IPcEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_162fc:
  ret i32 %arg1
}

define i32 @function_1632b() local_unnamed_addr {
dec_label_pc_1632b:
  %v0_1632b = call i32 @function_28205()
  %v0_16332 = load i32, i32* @ebp, align 4
  %v1_16332 = add i32 %v0_16332, -28
  %v2_16332 = inttoptr i32 %v1_16332 to i32*
  %v3_16332 = load i32, i32* %v2_16332, align 4
  %v1_1633d = add i32 %v0_16332, -32
  %v2_1633d = inttoptr i32 %v1_1633d to i32*
  %v3_1633d = load i32, i32* %v2_1633d, align 4
  store i32 %v3_1633d, i32* @eax, align 8
  %v3_16343 = call i32 @function_3154a(i32 %v3_1633d, i32 %v3_16332, i32 %v0_1632b)
  %v0_16348 = call i32 @function_16361()
  ret i32 %v0_16348
}

define i32 @function_1634b() local_unnamed_addr {
dec_label_pc_1634b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1634b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1634b
}

define i32 @function_16361() local_unnamed_addr {
dec_label_pc_16361:
  %v0_16361 = load i32, i32* @ebp, align 4
  %v1_16361 = add i32 %v0_16361, -12
  %v2_16361 = inttoptr i32 %v1_16361 to i32*
  %v3_16361 = load i32, i32* %v2_16361, align 4
  %v2_16364 = xor i32 %v3_16361, 30
  %v3_16364 = icmp eq i32 %v2_16364, 0
  store i32 %v2_16364, i32* @eax, align 8
  br i1 %v3_16364, label %bb, label %dec_label_pc_1636d

bb:                                               ; preds = %dec_label_pc_16361
  %v1_1636b = call i32 @function_16372()
  br label %dec_label_pc_1636d

dec_label_pc_1636d:                               ; preds = %bb, %dec_label_pc_16361
  %v2_1636b = phi i32 [ %v1_1636b, %bb ], [ %v2_16364, %dec_label_pc_16361 ]
  ret i32 %v2_1636b
}

define i32 @function_16372() local_unnamed_addr {
dec_label_pc_16372:
  %v0_16377 = load i32, i32* @eax, align 8
  ret i32 %v0_16377
}

define i32 @_ZN5boost11filesystem34pathC1IA14_cEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS4_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16378:
  ret i32 %arg1
}

define i32 @function_163fe() local_unnamed_addr {
dec_label_pc_163fe:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_163fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_163fe = add i32 %v0_163fe, 862319685
  %v2_163fe = inttoptr i32 %v1_163fe to i32*
  %v3_163fe = load i32, i32* %v2_163fe, align 4
  %v4_163fe = add i32 %v3_163fe, -1
  store i32 %v4_163fe, i32* %v2_163fe, align 4
  %v0_16404 = load i32, i32* %eax.global-to-local, align 8
  %v1_16404 = add i32 %v0_16404, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_16404 = icmp eq i32 %v1_16404, 0
  store i32 %v1_16404, i32* @eax, align 8
  br i1 %v10_16404, label %bb, label %dec_label_pc_1640b

bb:                                               ; preds = %dec_label_pc_163fe
  %v1_16409 = call i32 @function_16447()
  store i32 %v1_16409, i32* @eax, align 8
  br label %dec_label_pc_1640b

dec_label_pc_1640b:                               ; preds = %bb, %dec_label_pc_163fe
  %v0_1640b = call i32 @function_16442()
  store i32 %v0_1640b, i32* %eax.global-to-local, align 8
  ret i32 %v0_1640b
}

define i32 @function_1640e() local_unnamed_addr {
dec_label_pc_1640e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1640e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1640e
}

define i32 @function_1641a() local_unnamed_addr {
dec_label_pc_1641a:
  %v0_1641a = call i32 @function_1641e()
  ret i32 %v0_1641a
}

define i32 @function_1641c() local_unnamed_addr {
dec_label_pc_1641c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1641c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1641c
}

define i32 @function_1641e() local_unnamed_addr {
dec_label_pc_1641e:
  %v0_1641e = load i32, i32* @ebp, align 4
  %v1_1641e = add i32 %v0_1641e, -13
  %v1_16429 = call i32 @function_1642d(i32 %v1_1641e)
  ret i32 %v1_16429
}

define i32 @function_1642b() local_unnamed_addr {
dec_label_pc_1642b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1642b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1642b
}

define i32 @function_1642d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1642d:
  %v0_1642d = load i32, i32* @ebp, align 4
  %v1_1642d = add i32 %v0_1642d, -28
  %v2_1642d = inttoptr i32 %v1_1642d to i32*
  %v3_1642d = load i32, i32* %v2_1642d, align 4
  ret i32 %v3_1642d
}

define i32 @function_16442() local_unnamed_addr {
dec_label_pc_16442:
  %v0_16442 = load i32, i32* @eax, align 8
  ret i32 %v0_16442
}

define i32 @function_16447() local_unnamed_addr {
dec_label_pc_16447:
  %v0_1644d = load i32, i32* @eax, align 8
  ret i32 %v0_1644d
}

define i32 @_ZN5boost11filesystem34pathC1ISsEERKT_PNS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIS3_E4typeEEEvE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1644e:
  ret i32 %arg1
}

define i32 @function_1647d() local_unnamed_addr {
dec_label_pc_1647d:
  %eax.global-to-local = alloca i32, align 4
  %v0_16482 = load i32, i32* %eax.global-to-local, align 8
  %v0_16484 = load i32, i32* @ebp, align 4
  %v1_16484 = add i32 %v0_16484, -28
  %v2_16484 = inttoptr i32 %v1_16484 to i32*
  %v3_16484 = load i32, i32* %v2_16484, align 4
  store i32 %v3_16484, i32* %eax.global-to-local, align 8
  %v1_1648f = add i32 %v0_16484, -32
  %v2_1648f = inttoptr i32 %v1_1648f to i32*
  %v3_1648f = load i32, i32* %v2_1648f, align 4
  store i32 %v3_1648f, i32* %eax.global-to-local, align 8
  %v3_1649a = call i32 @function_164b3(i32 %v3_1648f, i32 %v3_16484, i32 %v0_16482)
  store i32 %v3_1649a, i32* %eax.global-to-local, align 8
  ret i32 %v3_1649a
}

define i32 @function_1649d() local_unnamed_addr {
dec_label_pc_1649d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1649d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1649d
}

define i32 @function_164b3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_164b3:
  %v0_164b3 = load i32, i32* @ebp, align 4
  %v1_164b3 = add i32 %v0_164b3, -12
  %v2_164b3 = inttoptr i32 %v1_164b3 to i32*
  %v3_164b3 = load i32, i32* %v2_164b3, align 4
  %v2_164b6 = xor i32 %v3_164b3, 30
  ret i32 %v2_164b6
}

define i32 @_ZN5boost11filesystem34pathaSIA1_cEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_164ca:
  ret i32 %arg1
}

define i32 @function_164f4() local_unnamed_addr {
dec_label_pc_164f4:
  %v0_164f4 = call i32 @function_283d3()
  %v0_164fb = load i32, i32* @ebp, align 4
  %v1_164fb = add i32 %v0_164fb, -28
  %v2_164fb = inttoptr i32 %v1_164fb to i32*
  %v3_164fb = load i32, i32* %v2_164fb, align 4
  %v1_16517 = add i32 %v0_164fb, -20
  store i32 %v1_16517, i32* @eax, align 8
  %v3_16530 = call i32 @function_30450(i32 %v1_16517, i32 %v3_164fb, i32 %v0_164f4)
  %v0_16535 = load i32, i32* @ebp, align 4
  %v1_1654b = add i32 %v0_16535, -28
  %v2_1654b = inttoptr i32 %v1_1654b to i32*
  %v3_1654b = load i32, i32* %v2_1654b, align 4
  store i32 %v3_1654b, i32* @eax, align 8
  %v1_1654e = add i32 %v0_16535, -12
  %v2_1654e = inttoptr i32 %v1_1654e to i32*
  %v3_1654e = load i32, i32* %v2_1654e, align 4
  %v3_16551 = icmp eq i32 %v3_1654e, 30
  br i1 %v3_16551, label %bb, label %dec_label_pc_1655a

bb:                                               ; preds = %dec_label_pc_164f4
  %v1_16540 = add i32 %v0_16535, -13
  %v2_16558 = call i32 @function_16587(i32 %v1_16540)
  store i32 %v2_16558, i32* @eax, align 8
  br label %dec_label_pc_1655a

dec_label_pc_1655a:                               ; preds = %bb, %dec_label_pc_164f4
  %v0_1655a = call i32 @function_16582()
  ret i32 %v0_1655a

; uselistorder directives
  uselistorder i32 %v0_16535, { 2, 1, 0 }
  uselistorder i32 %v1_16517, { 1, 0 }
}

define i32 @function_1655d() local_unnamed_addr {
dec_label_pc_1655d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1655d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1655d
}

define i32 @function_16569() local_unnamed_addr {
dec_label_pc_16569:
  %v0_16569 = call i32 @function_1656d()
  ret i32 %v0_16569
}

define i32 @function_1656b() local_unnamed_addr {
dec_label_pc_1656b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1656b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1656b
}

define i32 @function_1656d() local_unnamed_addr {
dec_label_pc_1656d:
  %v0_16578 = load i32, i32* @ebx, align 4
  ret i32 %v0_16578
}

define i32 @function_16582() local_unnamed_addr {
dec_label_pc_16582:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16587(i32 %arg1) local_unnamed_addr {
dec_label_pc_16587:
  %v0_1658d = load i32, i32* @eax, align 8
  ret i32 %v0_1658d
}

define i32 @_ZN5boost11filesystem34pathdVISsEENS_9enable_ifINS0_11path_traits11is_pathableINS_5decayIT_E4typeEEERS1_E4typeERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1658e:
  store i32 0, i32* @eax, align 8
  %v2_165ab = call i32 @function_28497(i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v3_165c1 = call i32 @function_3185a(i32 %arg1, i32 %arg2, i32 %v2_165ab)
  store i32 %v3_165c1, i32* @eax, align 8
  %v1_165d0 = call i32 @function_165d7()
  ret i32 %v1_165d0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_165d7() local_unnamed_addr {
dec_label_pc_165d7:
  %v0_165d8 = load i32, i32* @eax, align 8
  ret i32 %v0_165d8
}

define i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEEC1ERKNS0_4pathE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_165da:
  %v1_165fb = add i32 %arg1, 144
  ret i32 %v1_165fb
}

define i32 @function_16614() local_unnamed_addr {
dec_label_pc_16614:
  %eax.global-to-local = alloca i32, align 4
  %v0_16614 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16614
}

define i32 @function_16638() local_unnamed_addr {
dec_label_pc_16638:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1663d = add i32 %tmp91, -28
  %v2_1663d = inttoptr i32 %v1_1663d to i32*
  %v3_1663d = load i32, i32* %v2_1663d, align 4
  %v2_16640 = inttoptr i32 %v3_1663d to i32*
  store i32 ptrtoint (%vtable_38dcc_type* @global_var_38dcc.2501 to i32), i32* %v2_16640, align 4
  %v1_16647 = load i32, i32* %ebp.global-to-local, align 4
  %v2_16647 = add i32 %v1_16647, -28
  %v3_16647 = inttoptr i32 %v2_16647 to i32*
  %v4_16647 = load i32, i32* %v3_16647, align 4
  %v5_16647 = add i32 %v4_16647, 144
  %v2_1664f = inttoptr i32 %v5_16647 to i32*
  store i32 ptrtoint (i32* @global_var_38de0.2502 to i32), i32* %v2_1664f, align 4
  %v0_16651 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16651 = add i32 %v0_16651, -12
  %v2_16651 = inttoptr i32 %v1_16651 to i32*
  %v3_16651 = load i32, i32* %v2_16651, align 4
  %v2_16654 = xor i32 %v3_16651, 30
  %v3_16654 = icmp eq i32 %v2_16654, 0
  store i32 %v2_16654, i32* @eax, align 8
  br i1 %v3_16654, label %bb, label %dec_label_pc_1665d

bb:                                               ; preds = %dec_label_pc_16638
  %v1_1665b = call i32 @function_16680()
  store i32 %v1_1665b, i32* @eax, align 8
  br label %dec_label_pc_1665d

dec_label_pc_1665d:                               ; preds = %bb, %dec_label_pc_16638
  %v0_1665d = call i32 @function_1667b()
  ret i32 %v0_1665d
}

define i32 @function_16660() local_unnamed_addr {
dec_label_pc_16660:
  %eax.global-to-local = alloca i32, align 4
  %v0_16660 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16660
}

define i32 @function_1667b() local_unnamed_addr {
dec_label_pc_1667b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16680() local_unnamed_addr {
dec_label_pc_16680:
  %v0_16685 = load i32, i32* @eax, align 8
  ret i32 %v0_16685
}

define i32 @_ZTv0_n12_N5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16686:
  %tmp97 = ptrtoint i32* %arg1 to i32
  %v2_1668a = load i32, i32* %arg1, align 4
  %v2_1668c = add i32 %v2_1668a, -12
  %v3_1668c = inttoptr i32 %v2_1668c to i32*
  %v4_1668c = load i32, i32* %v3_1668c, align 4
  %v5_1668c = add i32 %v4_1668c, %tmp97
  %v1_16693 = inttoptr i32 %v5_1668c to i32*
  %v2_16693 = call i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev(i32* %v1_16693)
  ret i32 %v2_16693
}

define i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev(i32* %arg1) {
dec_label_pc_16696:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38dcc_type* @global_var_38dcc.2501 to i32), i32* %arg1, align 4
  %v5_166bd = add i32 %tmp4, 144
  %v2_166c5 = inttoptr i32 %v5_166bd to i32*
  store i32 ptrtoint (i32* @global_var_38de0.2502 to i32), i32* %v2_166c5, align 4
  ret i32 %tmp4

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED1Ev, { 3, 1, 2, 0 }
}

define i32 @function_16711() local_unnamed_addr {
dec_label_pc_16711:
  %v0_16711 = call i32 @function_1673b()
  ret i32 %v0_16711
}

define i32 @function_16714() local_unnamed_addr {
dec_label_pc_16714:
  %eax.global-to-local = alloca i32, align 4
  %v0_16714 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16714
}

define i32 @function_1673b() local_unnamed_addr {
dec_label_pc_1673b:
  %v0_1673b = load i32, i32* @ebp, align 4
  %v1_1673b = add i32 %v0_1673b, -12
  %v2_1673b = inttoptr i32 %v1_1673b to i32*
  %v3_1673b = load i32, i32* %v2_1673b, align 4
  %v2_1673e = xor i32 %v3_1673b, 30
  ret i32 %v2_1673e
}

define i32 @_ZTv0_n12_N5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16752:
  %tmp97 = ptrtoint i32* %arg1 to i32
  %v2_16756 = load i32, i32* %arg1, align 4
  %v2_16758 = add i32 %v2_16756, -12
  %v3_16758 = inttoptr i32 %v2_16758 to i32*
  %v4_16758 = load i32, i32* %v3_16758, align 4
  %v5_16758 = add i32 %v4_16758, %tmp97
  %v1_1675f = call i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED0Ev(i32 %v5_16758)
  ret i32 %v1_1675f

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED0Ev, { 1, 0 }
}

define i32 @_ZN5boost11filesystem314basic_ifstreamIcSt11char_traitsIcEED0Ev(i32 %arg1) {
dec_label_pc_16762:
  %v1_1677f = call i32 @function_2cde8(i32 %arg1)
  ret i32 0
}

define i32 @_ZNSt3setISsSt4lessISsESaISsEE6insertERKSs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_167a2:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_167c8 = ptrtoint i32* %stack_var_-28 to i32
  %v3_167d9 = call i32 @function_31afa(i32 %v2_167c8, i32 %arg2, i32 %arg3)
  %v2_167e8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_167ee = call i32 @function_31cfe(i32 %v2_167e8, i32 %v2_167c8)
  %v16_167f6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_1680a = call i32 @function_31d38(i32 %arg1, i32 %v2_167e8, i32 %v16_167f6)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcEC1ERSiRKSt3setISsSt4lessISsESaISsEEb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16828:
  ret i32 %arg1
}

define i32 @function_1686b() local_unnamed_addr {
dec_label_pc_1686b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1686b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1686b = add i32 %v0_1686b, 13100101
  %v2_1686b = inttoptr i32 %v1_1686b to i32*
  %v3_1686b = load i32, i32* %v2_1686b, align 4
  %v4_1686b = add i32 %v3_1686b, -1
  store i32 %v4_1686b, i32* %v2_1686b, align 4
  %v0_16871 = load i32, i32* %eax.global-to-local, align 8
  %v1_16871 = and i32 %v0_16871, -256
  %v2_16871 = or i32 %v1_16871, 141
  store i32 %v2_16871, i32* %eax.global-to-local, align 8
  %v2_16873 = inttoptr i32 %v2_16871 to i32*
  %v3_16873 = load i32, i32* %v2_16873, align 4
  %v4_16873 = add i32 %v2_16871, %v3_16873
  store i32 %v4_16873, i32* %eax.global-to-local, align 8
  %v0_16875 = load i32, i32* @ebp, align 4
  %v1_16875 = add i32 %v0_16875, -28
  %v2_16875 = inttoptr i32 %v1_16875 to i32*
  %v3_16875 = load i32, i32* %v2_16875, align 4
  %v1_16878 = add i32 %v3_16875, 100
  store i32 %v1_16878, i32* %eax.global-to-local, align 8
  %v3_16883 = load i32, i32* %v2_16875, align 4
  store i32 %v3_16883, i32* %eax.global-to-local, align 8
  %v1_16886 = add i32 %v3_16883, 100
  %v0_16889 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1688d = add i32 %v0_16875, -32
  %v2_1688d = inttoptr i32 %v1_1688d to i32*
  %v3_1688d = load i32, i32* %v2_1688d, align 4
  store i32 %v3_1688d, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_16889, 16777216
  %v3_16897 = sdiv i32 %sext, 16777216
  %v4_16897 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %v1_16886, i32 %v3_1688d, i32 %v3_16897)
  store i32 %v4_16897, i32* %eax.global-to-local, align 8
  %v0_1689c = load i32, i32* @ebp, align 4
  %v1_1689c = add i32 %v0_1689c, -28
  %v2_1689c = inttoptr i32 %v1_1689c to i32*
  %v3_1689c = load i32, i32* %v2_1689c, align 4
  store i32 %v3_1689c, i32* %eax.global-to-local, align 8
  %v1_168a7 = call i32 @function_168d2(i32 %v3_1689c)
  store i32 %v1_168a7, i32* %eax.global-to-local, align 8
  ret i32 %v1_168a7

; uselistorder directives
  uselistorder i32 %v2_16871, { 1, 0, 2 }
  uselistorder i32 13100101, { 1, 0 }
}

define i32 @function_168a9() local_unnamed_addr {
dec_label_pc_168a9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_168a9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_168a9, i32* @ebx, align 4
  %v0_168ab = load i32, i32* %ebp.global-to-local, align 4
  %v1_168ab = add i32 %v0_168ab, -28
  %v2_168ab = inttoptr i32 %v1_168ab to i32*
  %v3_168ab = load i32, i32* %v2_168ab, align 4
  %v1_168ae = add i32 %v3_168ab, 100
  store i32 %v1_168ae, i32* %eax.global-to-local, align 8
  %v1_168b9 = call i32 @function_168bd(i32 %v1_168ae)
  store i32 %v1_168b9, i32* %eax.global-to-local, align 8
  ret i32 %v1_168b9
}

define i32 @function_168bb() local_unnamed_addr {
dec_label_pc_168bb:
  %eax.global-to-local = alloca i32, align 4
  %v0_168bb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_168bb
}

define i32 @function_168bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_168bd:
  %v0_168c8 = load i32, i32* @ebx, align 4
  ret i32 %v0_168c8
}

define i32 @function_168d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_168d2:
  %v0_168d2 = load i32, i32* @ebp, align 4
  %v1_168d2 = add i32 %v0_168d2, -12
  %v2_168d2 = inttoptr i32 %v1_168d2 to i32*
  %v3_168d2 = load i32, i32* %v2_168d2, align 4
  %v2_168d5 = xor i32 %v3_168d2, 30
  ret i32 %v2_168d5
}

define i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_168ea:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* @eax, align 8
  %v1_16908 = call i32 @function_296c2(i32 %tmp3)
  store i32 ptrtoint (%vtable_38db0_type* @global_var_38db0.2470 to i32), i32* %arg1, align 4
  %v1_16919 = add i32 %tmp3, 100
  store i32 %v1_16919, i32* @eax, align 8
  %v1_1691f = call i32 @function_31ecc(i32 %v1_16919)
  %v1_16927 = add i32 %tmp3, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_16927, i32* @eax, align 8
  %v1_1692d = call i32 @function_2bac6(i32 %v1_16927)
  store i32 0, i32* @eax, align 8
  %v1_1693c = call i32 @function_1695c()
  store i32 %v1_1693c, i32* @eax, align 8
  %v0_1693e = call i32 @function_16957()
  ret i32 %v0_1693e

; uselistorder directives
  uselistorder i32 %tmp3, { 3, 2, 1, 0 }
  uselistorder i32 100, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32 (i32*)* @_ZN5boost15program_options6detail26basic_config_file_iteratorIcED1Ev, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint (%vtable_38db0_type* @global_var_38db0.2470 to i32), { 1, 0 }
}

define i32 @function_16941() local_unnamed_addr {
dec_label_pc_16941:
  %eax.global-to-local = alloca i32, align 4
  %v0_16941 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16941
}

define i32 @function_16957() local_unnamed_addr {
dec_label_pc_16957:
  %v0_16957 = load i32, i32* @eax, align 8
  ret i32 %v0_16957
}

define i32 @function_1695c() local_unnamed_addr {
dec_label_pc_1695c:
  %v0_16961 = load i32, i32* @eax, align 8
  ret i32 %v0_16961
}

define i32 @_ZN5boostneINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iS3_S6_S7_S8_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS9_12always_bool2ESB_SC_E4typeEE4typeERKNS_15iterator_facadeISB_T0_T1_T2_T3_EERKNSK_ISC_T5_T6_T7_T8_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16962:
  %v1_16982 = add i32 %arg2, -4
  %v1_16988 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_16988, i32* @eax, align 8
  %v0_1698b = load i32, i32* @ecx, align 4
  %sext = mul i32 %v0_1698b, 16777216
  %v3_16996 = sdiv i32 %sext, 16777216
  %v4_16996 = call i32 @function_3200e(i32 %v1_16988, i32 %v1_16982, i32 %v3_16996)
  %v1_1699b = xor i32 %v4_16996, 1
  store i32 %v1_1699b, i32* @eax, align 8
  %v1_169a8 = call i32 @function_169af()
  ret i32 %v1_169a8
}

define i32 @function_169af() local_unnamed_addr {
dec_label_pc_169af:
  %v0_169b0 = load i32, i32* @eax, align 8
  ret i32 %v0_169b0
}

define i32 @_ZN5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_169b2:
  %v1_169cf = call i32 @function_320ae(i32 %arg1)
  store i32 %v1_169cf, i32* @eax, align 8
  %v1_169d7 = call i32 @function_320de(i32 %v1_169cf)
  %v1_169e2 = call i32 @function_320ae(i32 %arg1)
  ret i32 %v1_169e2

; uselistorder directives
  uselistorder i32 (i32)* @function_320ae, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iEptEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_169fa:
  store i32 %arg1, i32* @eax, align 8
  %v1_16a17 = call i32 @function_32194(i32 %arg1)
  %v1_16a1c = add i32 %v1_16a17, ptrtoint (i32* @global_var_4.2376 to i32)
  %v10_16a1c = icmp eq i32 %v1_16a1c, 0
  store i1 %v10_16a1c, i1* @zf, align 1
  store i32 %v1_16a1c, i32* @eax, align 8
  %v1_16a22 = call i32 @function_321c4(i32 %v1_16a1c)
  ret i32 %v1_16a22

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16a42:
  ret i32 %arg1
}

define i32 @function_16a8a() local_unnamed_addr {
dec_label_pc_16a8a:
  %v0_16a8a = call i32 @function_16aa3()
  ret i32 %v0_16a8a
}

define i32 @function_16a8d() local_unnamed_addr {
dec_label_pc_16a8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_16a8d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16a8d
}

define i32 @function_16aa3() local_unnamed_addr {
dec_label_pc_16aa3:
  %v0_16aa3 = load i32, i32* @ebp, align 4
  %v1_16aa3 = add i32 %v0_16aa3, -28
  %v2_16aa3 = inttoptr i32 %v1_16aa3 to i32*
  %v3_16aa3 = load i32, i32* %v2_16aa3, align 4
  ret i32 %v3_16aa3
}

define i32 @_ZNKSt6vectorISsSaISsEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16ac0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_16ac0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_16ae0 = load i32, i32* %arg1, align 4
  %v2_16ae5 = mul i32 %arg2, 4
  %v2_16ae8 = add i32 %v2_16ae0, %v2_16ae5
  store i32 %v0_16ac0, i32* %ebp.global-to-local, align 4
  ret i32 %v2_16ae8
}

define i32 @_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16afe:
  store i32 0, i32* @eax, align 8
  %v2_16b2a = call i32 @function_16b31(i32 %arg1)
  ret i32 %v2_16b2a
}

define i32 @function_16b31(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b31:
  %v0_16b32 = load i32, i32* @eax, align 8
  ret i32 %v0_16b32
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b34:
  ret i32 0
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b6a:
  store i32 %arg1, i32* @eax, align 8
  %v2_16ba2 = call i32 @function_2d69e(i32 %arg1, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_16bb1 = call i32 @function_16bd1()
  store i32 %v1_16bb1, i32* @eax, align 8
  %v0_16bb3 = call i32 @function_16bcc()
  ret i32 %v0_16bb3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_16bb6() local_unnamed_addr {
dec_label_pc_16bb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_16bb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16bb6
}

define i32 @function_16bcc() local_unnamed_addr {
dec_label_pc_16bcc:
  %v0_16bcc = load i32, i32* @eax, align 8
  ret i32 %v0_16bcc
}

define i32 @function_16bd1() local_unnamed_addr {
dec_label_pc_16bd1:
  %v0_16bd6 = load i32, i32* @eax, align 8
  ret i32 %v0_16bd6
}

define i32 @_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EE6insertERKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16bd8:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg2, i32* @edx, align 8
  %v2_16bfe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16bfe, i32* @eax, align 8
  %v3_16c0f = call i32 @function_324fa(i32 %v2_16bfe, i32 %arg2, i32 %arg3)
  %v2_16c1e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16c1e, i32* @eax, align 8
  %v2_16c24 = call i32 @function_326fe(i32 %v2_16c1e, i32 %v2_16bfe)
  %v16_16c2c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @eax, align 8
  %v3_16c40 = call i32 @function_32738(i32 %arg1, i32 %v2_16c1e, i32 %v16_16c2c)
  store i32 %arg1, i32* @eax, align 8
  %v1_16c52 = call i32 @function_16c59()
  ret i32 %v1_16c52

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_16c59() local_unnamed_addr {
dec_label_pc_16c59:
  %v0_16c5a = load i32, i32* @eax, align 8
  ret i32 %v0_16c5a
}

define i32 @_ZN13CMedianFilterIxE5inputEx(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16c5e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  store i32 %arg1, i32* @eax, align 8
  store i32 %arg1, i32* %stack_var_-92, align 4
  %v1_16c87 = call i32 @function_3280a(i32 %arg1)
  store i32 %v1_16c87, i32* %eax.global-to-local, align 8
  store i32 %arg1, i32* %edx.global-to-local, align 8
  %v1_16c8f = add i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_16c8f = inttoptr i32 %v1_16c8f to i32*
  %v3_16c8f = load i32, i32* %v2_16c8f, align 4
  store i32 %v3_16c8f, i32* %edx.global-to-local, align 8
  %v12_16c92 = icmp eq i32 %v1_16c87, %v3_16c8f
  %v1_16c94 = zext i1 %v12_16c92 to i32
  %v3_16c94 = and i32 %v1_16c87, -256
  %v4_16c94 = or i32 %v1_16c94, %v3_16c94
  store i32 %v4_16c94, i32* %eax.global-to-local, align 8
  %v5_16c97 = icmp eq i1 %v12_16c92, false
  br i1 %v5_16c97, label %dec_label_pc_16c5e.dec_label_pc_16ccc_crit_edge, label %dec_label_pc_16c9b

dec_label_pc_16c5e.dec_label_pc_16ccc_crit_edge:  ; preds = %dec_label_pc_16c5e
  %v1_16cd2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_16ccc

dec_label_pc_16c9b:                               ; preds = %dec_label_pc_16c5e
  store i32 %arg1, i32* @edx, align 8
  %v2_16c9e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_16c9e, i32* @eax, align 8
  store i32 %v2_16c9e, i32* %stack_var_-92, align 4
  %v2_16ca8 = call i32 @function_3284a(i32 %v2_16c9e, i32 %arg1)
  %v0_16cad = load i32, i32* @esp, align 4
  %v10_16cad = icmp eq i32 %v0_16cad, 4
  store i1 %v10_16cad, i1* @zf, align 1
  store i32 %arg1, i32* %edx.global-to-local, align 8
  %v2_16cb3 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_16cb3, i32* @eax, align 8
  %v3_16cb6 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_16cb6, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-92, align 4
  store i32 %v2_16cb3, i32* %stack_var_-96, align 4
  %v3_16cc4 = call i32 @function_32892(i32 %v2_16cb3, i32 %arg1, i32 %v3_16cb6)
  store i32 %v3_16cc4, i32* %eax.global-to-local, align 8
  %v16_16cc9 = ptrtoint i32* %stack_var_-100 to i32
  br label %dec_label_pc_16ccc

dec_label_pc_16ccc:                               ; preds = %dec_label_pc_16c5e.dec_label_pc_16ccc_crit_edge, %dec_label_pc_16c9b
  %v1_16cd2 = phi i32 [ %v1_16cd2.pre, %dec_label_pc_16c5e.dec_label_pc_16ccc_crit_edge ], [ %v16_16cc9, %dec_label_pc_16c9b ]
  store i32 %arg1, i32* @eax, align 8
  %v2_16ccf = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_16ccf, i32* %edx.global-to-local, align 8
  %v2_16cd2 = add i32 %v1_16cd2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_16cd2 = inttoptr i32 %v2_16cd2 to i32*
  store i32 %v2_16ccf, i32* %v3_16cd2, align 4
  %v0_16cd6 = load i32, i32* @eax, align 8
  %v1_16cd6 = load i32, i32* @esp, align 4
  %v2_16cd6 = inttoptr i32 %v1_16cd6 to i32*
  store i32 %v0_16cd6, i32* %v2_16cd6, align 4
  %v0_16cd9 = call i32 @function_308d8()
  store i32 %arg1, i32* @eax, align 8
  %v1_16ce1 = load i32, i32* @esp, align 4
  %v2_16ce1 = inttoptr i32 %v1_16ce1 to i32*
  store i32 %arg1, i32* %v2_16ce1, align 4
  %v0_16ce4 = load i32, i32* %stack_var_-96, align 4
  %v1_16ce4 = call i32 @function_3280a(i32 %v0_16ce4)
  store i32 %v1_16ce4, i32* %eax.global-to-local, align 8
  %v1_16cec = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_16cec, i32* %edx.global-to-local, align 8
  %v0_16cef = load i32, i32* @esp, align 4
  %v1_16cef = add i32 %v0_16cef, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_16cef = inttoptr i32 %v1_16cef to i32*
  store i32 0, i32* %v2_16cef, align 4
  %v0_16cf7 = load i32, i32* @esp, align 4
  %v1_16cf7 = add i32 %v0_16cf7, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_16cf7 = inttoptr i32 %v1_16cf7 to i32*
  store i32 0, i32* %v2_16cf7, align 4
  %v0_16cff = load i32, i32* %eax.global-to-local, align 8
  %v1_16cff = load i32, i32* @esp, align 4
  %v2_16cff = add i32 %v1_16cff, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_16cff = inttoptr i32 %v2_16cff to i32*
  store i32 %v0_16cff, i32* %v3_16cff, align 4
  %v0_16d03 = load i32, i32* %edx.global-to-local, align 8
  %v1_16d03 = load i32, i32* @esp, align 4
  %v2_16d03 = inttoptr i32 %v1_16d03 to i32*
  store i32 %v0_16d03, i32* %v2_16d03, align 4
  %v0_16d06 = call i32 @function_329a2()
  store i32 %v1_16cec, i32* @edx, align 8
  %v2_16d11 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16d11, i32* @eax, align 8
  %v1_16d14 = load i32, i32* @esp, align 4
  %v2_16d14 = add i32 %v1_16d14, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_16d14 = inttoptr i32 %v2_16d14 to i32*
  store i32 %v1_16cec, i32* %v3_16d14, align 4
  %v1_16d18 = load i32, i32* @esp, align 4
  %v2_16d18 = inttoptr i32 %v1_16d18 to i32*
  store i32 %v2_16d11, i32* %v2_16d18, align 4
  %v0_16d1b = load i32, i32* %stack_var_-96, align 4
  %v1_16d1b = load i32, i32* %stack_var_-92, align 4
  %v2_16d1b = call i32 @function_3284a(i32 %v0_16d1b, i32 %v1_16d1b)
  %v0_16d20 = load i32, i32* @esp, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 8
  %v2_16d26 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16d26, i32* @eax, align 8
  %v3_16d29 = inttoptr i32 %v0_16d20 to i32*
  store i32 %arg1, i32* %v3_16d29, align 4
  %v1_16d2d = load i32, i32* @esp, align 4
  %v2_16d2d = inttoptr i32 %v1_16d2d to i32*
  store i32 %v2_16d26, i32* %v2_16d2d, align 4
  %v0_16d30 = call i32 @function_32a6e()
  %v0_16d35 = load i32, i32* @esp, align 4
  store i32 %arg1, i32* @edx, align 8
  %v2_16d3b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_16d3b, i32* @eax, align 8
  %v3_16d3e = inttoptr i32 %v0_16d35 to i32*
  store i32 %arg1, i32* %v3_16d3e, align 4
  %v1_16d42 = load i32, i32* @esp, align 4
  %v2_16d42 = inttoptr i32 %v1_16d42 to i32*
  store i32 %v2_16d3b, i32* %v2_16d42, align 4
  %v0_16d45 = load i32, i32* %stack_var_-96, align 4
  %v1_16d45 = load i32, i32* %stack_var_-92, align 4
  %v2_16d45 = call i32 @function_3284a(i32 %v0_16d45, i32 %v1_16d45)
  %v0_16d4a = load i32, i32* @esp, align 4
  %v1_16d4a = sub i32 %v0_16d4a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16d4d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16d4d, i32* @eax, align 8
  %v3_16d50 = load i32, i32* %stack_var_-32, align 4
  %v2_16d53 = add i32 %v1_16d4a, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_16d53 = inttoptr i32 %v2_16d53 to i32*
  store i32 %v3_16d50, i32* %v3_16d53, align 4
  %v3_16d57 = load i32, i32* %stack_var_-36, align 4
  %v1_16d5a = load i32, i32* @esp, align 4
  %v2_16d5a = add i32 %v1_16d5a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_16d5a = inttoptr i32 %v2_16d5a to i32*
  store i32 %v3_16d57, i32* %v3_16d5a, align 4
  %v3_16d5e = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_16d5e, i32* %edx.global-to-local, align 8
  %v1_16d61 = load i32, i32* @esp, align 4
  %v2_16d61 = add i32 %v1_16d61, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_16d61 = inttoptr i32 %v2_16d61 to i32*
  store i32 %v3_16d5e, i32* %v3_16d61, align 4
  %v1_16d65 = load i32, i32* @esp, align 4
  %v2_16d65 = inttoptr i32 %v1_16d65 to i32*
  store i32 %v2_16d4d, i32* %v2_16d65, align 4
  %v0_16d68 = call i32 @function_32ab8()
  %v0_16d6d = load i32, i32* @esp, align 4
  store i32 %v1_16cec, i32* %edx.global-to-local, align 8
  %v2_16d76 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16d76, i32* @eax, align 8
  %v3_16d79 = inttoptr i32 %v0_16d6d to i32*
  store i32 %v1_16cec, i32* %v3_16d79, align 4
  %v1_16d7d = load i32, i32* @esp, align 4
  %v2_16d7d = inttoptr i32 %v1_16d7d to i32*
  store i32 %v2_16d76, i32* %v2_16d7d, align 4
  %v0_16d80 = call i32 @function_32a6e()
  %v0_16d85 = load i32, i32* @esp, align 4
  store i32 %v1_16cec, i32* @edx, align 8
  %v2_16d8e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16d8e, i32* @eax, align 8
  %v3_16d91 = inttoptr i32 %v0_16d85 to i32*
  store i32 %v1_16cec, i32* %v3_16d91, align 4
  %v1_16d95 = load i32, i32* @esp, align 4
  %v2_16d95 = inttoptr i32 %v1_16d95 to i32*
  store i32 %v2_16d8e, i32* %v2_16d95, align 4
  %v0_16d98 = load i32, i32* %stack_var_-96, align 4
  %v1_16d98 = load i32, i32* %stack_var_-92, align 4
  %v2_16d98 = call i32 @function_3284a(i32 %v0_16d98, i32 %v1_16d98)
  %v0_16d9d = load i32, i32* @esp, align 4
  %v3_16da0 = load i32, i32* %stack_var_-20, align 4
  %v3_16da3 = inttoptr i32 %v0_16d9d to i32*
  store i32 %v3_16da0, i32* %v3_16da3, align 4
  %v3_16da7 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_16da7, i32* @eax, align 8
  %v1_16daa = load i32, i32* @esp, align 4
  %v2_16daa = inttoptr i32 %v1_16daa to i32*
  store i32 %v3_16da7, i32* %v2_16daa, align 4
  %v0_16dad = call i32 @function_32b46()
  store i32 0, i32* @eax, align 8
  %v1_16dbc = call i32 @function_16dc3()
  store i32 %v1_16dbc, i32* %eax.global-to-local, align 8
  ret i32 %v1_16dbc

; uselistorder directives
  uselistorder i32 %v1_16cec, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_16cb3, { 1, 0, 2 }
  uselistorder i32 %v2_16c9e, { 1, 0, 2 }
  uselistorder i32 %v1_16c87, { 1, 0, 2 }
  uselistorder i32 ()* @function_32a6e, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_3284a, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_3280a, { 1, 0 }
  uselistorder i32 %arg1, { 6, 5, 8, 7, 9, 11, 10, 12, 2, 1, 0, 4, 3, 17, 16, 15, 14, 13 }
  uselistorder label %dec_label_pc_16ccc, { 1, 0 }
}

define i32 @function_16dc3() local_unnamed_addr {
dec_label_pc_16dc3:
  %v0_16dc4 = load i32, i32* @eax, align 8
  ret i32 %v0_16dc4
}

define i32 @_ZNK13CMedianFilterIxE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16dc6:
  store i32 %arg1, i32* @eax, align 8
  %v1_16de3 = call i32 @function_32972(i32 %arg1)
  store i32 %v1_16de3, i32* @eax, align 8
  %v1_16df2 = call i32 @function_16df9()
  ret i32 %v1_16df2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16df9() local_unnamed_addr {
dec_label_pc_16df9:
  %v0_16dfa = load i32, i32* @eax, align 8
  ret i32 %v0_16dfa
}

define i32 @_ZNK13CMedianFilterIxE6medianEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16dfc:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v1_16e18 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v10_16e18 = icmp eq i32 %v1_16e18, 0
  %v11_16e18 = icmp slt i32 %v1_16e18, 0
  %v3_16e2a = icmp eq i1 %v11_16e18, false
  %v4_16e2a = icmp eq i1 %v10_16e18, false
  %v5_16e2a = icmp eq i1 %v3_16e2a, %v4_16e2a
  br i1 %v5_16e2a, label %dec_label_pc_16e50, label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16dfc
  br label %dec_label_pc_16e50

dec_label_pc_16e50:                               ; preds = %dec_label_pc_16e2c, %dec_label_pc_16dfc
  %v1_16e53 = urem i32 %v1_16e18, 2
  %v2_16e53 = icmp eq i32 %v1_16e53, 0
  %tmp17 = icmp slt i32 %v1_16e18, 0
  %v2_16e84 = zext i1 %tmp17 to i32
  %v2_16e87 = add i32 %v2_16e84, %v1_16e18
  %v2_16e89 = sdiv i32 %v2_16e87, 2
  br i1 %v2_16e53, label %dec_label_pc_16e7f, label %dec_label_pc_16e5a

dec_label_pc_16e5a:                               ; preds = %dec_label_pc_16e50
  %v3_16e73 = call i32 @function_32d6e(i32 %v1_16e18, i32 %v2_16e89)
  %v1_16e78 = add i32 %v3_16e73, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16e78 = inttoptr i32 %v1_16e78 to i32*
  %v3_16e78 = load i32, i32* %v2_16e78, align 4
  store i32 %v3_16e78, i32* @edx, align 8
  %v1_16e7b = inttoptr i32 %v3_16e73 to i32*
  %v2_16e7b = load i32, i32* %v1_16e7b, align 4
  store i32 %v2_16e7b, i32* @eax, align 8
  br label %dec_label_pc_16ee0

dec_label_pc_16e7f:                               ; preds = %dec_label_pc_16e50
  %v1_16e8b = add nsw i32 %v2_16e89, -1
  %v3_16e9b = call i32 @function_32d6e(i32 %v1_16e18, i32 %v1_16e8b)
  %v1_16ea0 = inttoptr i32 %v3_16e9b to i32*
  %v2_16ea0 = load i32, i32* %v1_16ea0, align 4
  store i32 %v2_16ea0, i32* %ebx.global-to-local, align 4
  %v1_16ea2 = add i32 %v3_16e9b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16ea2 = inttoptr i32 %v1_16ea2 to i32*
  %v3_16ea2 = load i32, i32* %v2_16ea2, align 4
  store i32 %v3_16ea2, i32* %esi.global-to-local, align 4
  %v3_16ebe = call i32 @function_32d6e(i32 %v1_16e18, i32 %v2_16e89)
  %v1_16ec3 = add i32 %v3_16ebe, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16ec3 = inttoptr i32 %v1_16ec3 to i32*
  %v3_16ec3 = load i32, i32* %v2_16ec3, align 4
  %v1_16ec6 = inttoptr i32 %v3_16ebe to i32*
  %v2_16ec6 = load i32, i32* %v1_16ec6, align 4
  %v1_16ec8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_16ec8 = add i32 %v1_16ec8, %v2_16ec6
  %v7_16ec8 = icmp ult i32 %v2_16ec8, %v2_16ec6
  %v1_16eca = load i32, i32* %esi.global-to-local, align 4
  %v3_16eca = zext i1 %v7_16ec8 to i32
  %v4_16eca = add i32 %v1_16eca, %v3_16ec3
  %v5_16eca = add i32 %v4_16eca, %v3_16eca
  %tmp18 = icmp slt i32 %v5_16eca, 0
  %v2_16ece = zext i1 %tmp18 to i32
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_16ed6 = add i32 %v2_16ece, %v2_16ec8
  %v7_16ed6 = icmp ult i32 %v2_16ed6, %v2_16ec8
  %v3_16ed8 = zext i1 %v7_16ed6 to i32
  %v5_16ed8 = add i32 %v3_16ed8, %v5_16eca
  %v3_16eda = udiv i32 %v2_16ed6, 2
  %v4_16eda = shl i32 %v5_16ed8, 31
  %v5_16eda = or i32 %v4_16eda, %v3_16eda
  store i32 %v5_16eda, i32* @eax, align 8
  %v2_16ede = sdiv i32 %v5_16ed8, 2
  store i32 %v2_16ede, i32* @edx, align 8
  br label %dec_label_pc_16ee0

dec_label_pc_16ee0:                               ; preds = %dec_label_pc_16e7f, %dec_label_pc_16e5a
  %v1_16eea = call i32 @function_16ef1()
  ret i32 %v1_16eea

; uselistorder directives
  uselistorder i32 %v5_16eca, { 1, 0 }
  uselistorder i32 %v2_16ec8, { 1, 0, 2 }
  uselistorder i32 %v2_16ec6, { 1, 0 }
  uselistorder i32 %v2_16e89, { 2, 0, 1 }
  uselistorder i32 %v1_16e18, { 4, 5, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 (i32, i32)* @function_32d6e, { 2, 1, 0 }
}

define i32 @function_16ef1() local_unnamed_addr {
dec_label_pc_16ef1:
  %v0_16ef7 = load i32, i32* @eax, align 8
  ret i32 %v0_16ef7
}

define i32 @_ZNK13CMedianFilterIxE6sortedEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16ef8:
  %v1_16f18 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %arg1, i32* @eax, align 8
  %v2_16f25 = call i32 @function_2deb4(i32 %arg1, i32 %v1_16f18)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt6vectorIxSaIxEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16f42:
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i32 %tmp5, i32* @eax, align 8
  %v1_16f60 = call i32 @function_32fac(i32 %tmp5)
  store i32 %v1_16f60, i32* @eax, align 8
  %v1_16f68 = add i32 %tmp5, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_16f68 = inttoptr i32 %v1_16f68 to i32*
  %v3_16f68 = load i32, i32* %v2_16f68, align 4
  store i32 %v3_16f68, i32* @ecx, align 4
  %v2_16f6e = load i32, i32* %arg1, align 4
  %v3_16f7b = call i32 @function_32fd9(i32 %v2_16f6e, i32 %v3_16f68, i32 %v1_16f60)
  store i32 %tmp5, i32* @eax, align 8
  %v1_16f86 = call i32 @function_32f28(i32 %tmp5)
  store i32 0, i32* @eax, align 8
  %v1_16f95 = call i32 @function_16fb5()
  store i32 %v1_16f95, i32* @eax, align 8
  %v0_16f97 = call i32 @function_16fb0()
  ret i32 %v0_16f97

; uselistorder directives
  uselistorder i32 %tmp5, { 4, 3, 2, 1, 0 }
}

define i32 @function_16f9a() local_unnamed_addr {
dec_label_pc_16f9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_16f9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16f9a
}

define i32 @function_16fb0() local_unnamed_addr {
dec_label_pc_16fb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16fb5() local_unnamed_addr {
dec_label_pc_16fb5:
  %v0_16fba = load i32, i32* @eax, align 8
  ret i32 %v0_16fba
}

define i32 @_ZNSt6vectorIxSaIxEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16fbc:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 8
  %v1_16fe1 = call i32 @function_3309c(i32 %arg2)
  store i32 %arg2, i32* @eax, align 8
  %v3_17001 = call i32 @function_330ca(i32 %tmp107, i32 %arg2, i32 %v1_16fe1)
  store i32 %tmp107, i32* @eax, align 8
  %v1_1700c = call i32 @function_33026(i32 %tmp107)
  store i32 %v1_1700c, i32* @ebx, align 4
  %v2_17016 = load i32, i32* %arg1, align 4
  store i32 %v2_17016, i32* %esi.global-to-local, align 4
  %v2_17018 = ptrtoint i32* %stack_var_-20 to i32
  %v2_17025 = call i32 @function_331b8(i32 %v2_17018, i32 %arg2)
  %v2_1702d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1702d, i32* @eax, align 8
  %v2_1703a = call i32 @function_33168(i32 %v2_1702d, i32 %arg2)
  %v0_17042 = load i32, i32* @ebx, align 4
  %v0_17046 = load i32, i32* %esi.global-to-local, align 4
  %v3_1704a = load i32, i32* %stack_var_-20, align 4
  %v3_17051 = load i32, i32* %stack_var_-24, align 4
  %v4_17057 = call i32 @function_33208(i32 %v3_17051, i32 %v3_1704a, i32 %v0_17046, i32 %v0_17042)
  %v2_17061 = add i32 %tmp107, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_17061 = inttoptr i32 %v2_17061 to i32*
  store i32 %v4_17057, i32* %v3_17061, align 4
  store i32 0, i32* @eax, align 8
  %v1_1706e = call i32 @function_1708e()
  store i32 %v1_1706e, i32* @eax, align 8
  %v0_17070 = call i32 @function_17089()
  ret i32 %v0_17070

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_17073() local_unnamed_addr {
dec_label_pc_17073:
  %eax.global-to-local = alloca i32, align 4
  %v0_17073 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17073
}

define i32 @function_17089() local_unnamed_addr {
dec_label_pc_17089:
  %v0_17089 = load i32, i32* @eax, align 8
  ret i32 %v0_17089
}

define i32 @function_1708e() local_unnamed_addr {
dec_label_pc_1708e:
  %v0_17094 = load i32, i32* @eax, align 8
  ret i32 %v0_17094
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorIxSaIxEEEENS0_8auto_anyIPT_EERS6_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17095:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_170be = call i32 @function_33336(i32 %arg2)
  store i32 %v1_170be, i32* %stack_var_-20, align 4
  %v2_170c6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_170d3 = call i32 @function_3338d(i32 %arg1, i32 %v2_170c6)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_170f0:
  %stack_var_-20 = alloca i32, align 4
  %v1_1711f = call i32 @function_3342d(i32 %arg2)
  %v1_17124 = inttoptr i32 %v1_1711f to i32*
  %v2_17124 = load i32, i32* %v1_17124, align 4
  store i32 %v2_17124, i32* @eax, align 8
  %v1_17129 = call i32 @function_3345a(i32 %v2_17124)
  %v2_1712e = ptrtoint i32* %stack_var_-20 to i32
  %v2_17138 = call i32 @function_33487(i32 %v2_1712e, i32 %v1_17129)
  store i32 %arg1, i32* @eax, align 8
  %v2_1714d = call i32 @function_334d2(i32 %arg1, i32 %v2_1712e)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EEPS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1716a:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_17199 = call i32 @function_334a7(i32 %arg2)
  %v1_1719e = inttoptr i32 %v1_17199 to i32*
  %v2_1719e = load i32, i32* %v1_1719e, align 4
  %v2_171a8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_171b2 = call i32 @function_33591(i32 %v2_171a8, i32 %v2_1719e)
  store i32 %arg1, i32* @eax, align 8
  %v3_171d9 = call i32 @function_171e0(i32 %arg1, i32 %v2_171a8)
  ret i32 %v3_171d9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_171e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_171e0:
  %v0_171e1 = load i32, i32* @eax, align 8
  ret i32 %v0_171e1
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESA_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_171e4:
  %v1_1720e = call i32 @function_33655(i32 %arg2)
  %v1_1721b = call i32 @function_33655(i32 %arg1)
  %v2_17227 = call i32 @function_33682(i32 %v1_1721b, i32 %v1_1720e)
  store i32 %v2_17227, i32* @eax, align 8
  %v1_17236 = call i32 @function_1723d()
  ret i32 %v1_17236

; uselistorder directives
  uselistorder i32 (i32)* @function_33655, { 1, 0 }
}

define i32 @function_1723d() local_unnamed_addr {
dec_label_pc_1723d:
  %v0_17242 = load i32, i32* @eax, align 8
  ret i32 %v0_17242
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17243:
  %v1_17266 = call i32 @function_336b4(i32 %arg1)
  store i32 %v1_17266, i32* @eax, align 8
  %v1_1726e = call i32 @function_33735(i32 %v1_17266)
  ret i32 0
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeIS9_SA_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17286:
  store i32 %arg1, i32* @eax, align 8
  %v1_172a9 = call i32 @function_336f7(i32 %arg1)
  ret i32 %v1_172a9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEEclES3_S3_j(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_172ca:
  %v1_172f6 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_172f6, i32* @eax, align 8
  %v1_172fc = call i32 @function_33826(i32 %v1_172f6)
  store i32 %v1_172fc, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v4_17319 = call i32 @function_3391c(i32 %v1_172fc, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_17319, i32* @eax, align 8
  %v1_17328 = call i32 @function_1732f()
  ret i32 %v1_17328

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1732f() local_unnamed_addr {
dec_label_pc_1732f:
  %v0_17330 = load i32, i32* @eax, align 8
  ret i32 %v0_17330
}

define i32 @_ZNKSt6vectorISsSaISsEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17332:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_17349 = ptrtoint i32* %stack_var_-24 to i32
  %v2_17356 = call i32 @function_30bfa(i32 %v2_17349, i32 %arg1)
  %v2_1735e = ptrtoint i32* %stack_var_-20 to i32
  %v2_1736b = call i32 @_ZN5boost15optional_detail13optional_baseIbE12get_ptr_implEv(i32 %v2_1735e, i32 %arg1)
  %v2_17380 = call i32 @function_33ce4(i32 %v2_1735e, i32 %v2_17349)
  ret i32 %v2_17380

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost9algorithm4joinISt6vectorISsSaISsEEA3_cEENS_11range_valueIT_E4typeERKS7_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17398:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_173bc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_173bc, i32* @eax, align 8
  %v2_173c9 = call i32 @function_33d9e(i32 %v2_173bc, i32 %arg2)
  %v2_173d1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_173d1, i32* @eax, align 8
  %v2_173de = call i32 @function_33de8(i32 %v2_173d1, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_173f0() local_unnamed_addr {
dec_label_pc_173f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_173f0 = load i32, i32* @ebp, align 4
  %v1_173f0 = add i32 %v0_173f0, 1149887557
  %v2_173f0 = inttoptr i32 %v1_173f0 to i32*
  %v3_173f0 = load i32, i32* %v2_173f0, align 4
  %v4_173f0 = add i32 %v3_173f0, -1
  store i32 %v4_173f0, i32* %v2_173f0, align 4
  %v0_173f8 = load i32, i32* @ebp, align 4
  %v1_173f8 = add i32 %v0_173f8, -32
  store i32 %v1_173f8, i32* %eax.global-to-local, align 8
  %v4_17403 = trunc i32 %v1_173f8 to i8
  %v5_17403 = icmp eq i8 %v4_17403, 0
  br i1 %v5_17403, label %dec_label_pc_173f0.dec_label_pc_174d9.preheader_crit_edge, label %dec_label_pc_1740b

dec_label_pc_173f0.dec_label_pc_174d9.preheader_crit_edge: ; preds = %dec_label_pc_173f0
  %v1_174dc104.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_174d9.preheader

dec_label_pc_1740b:                               ; preds = %dec_label_pc_173f0
  store i32 %v1_173f8, i32* %ebx.global-to-local, align 4
  %v16_1742a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v1_173f8, i32* %eax.global-to-local, align 8
  store i32 %v1_173f8, i32* %stack_var_-4, align 4
  br label %dec_label_pc_174d9.preheader

dec_label_pc_174d9.preheader:                     ; preds = %dec_label_pc_173f0.dec_label_pc_174d9.preheader_crit_edge, %dec_label_pc_1740b
  %v1_174dc104 = phi i32 [ %v1_174dc104.pre, %dec_label_pc_173f0.dec_label_pc_174d9.preheader_crit_edge ], [ %v16_1742a, %dec_label_pc_1740b ]
  %v1_174d9103 = add i32 %v0_173f8, -28
  %v2_174dc105 = add i32 %v1_174dc104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_174dc106 = inttoptr i32 %v2_174dc105 to i32*
  store i32 %v1_174d9103, i32* %v3_174dc106, align 4
  %v0_174e0107 = load i32, i32* @ebp, align 4
  %v1_174e0108 = add i32 %v0_174e0107, -32
  store i32 %v1_174e0108, i32* %eax.global-to-local, align 8
  %v1_174e3109 = load i32, i32* @esp, align 4
  %v2_174e3110 = inttoptr i32 %v1_174e3109 to i32*
  store i32 %v1_174e0108, i32* %v2_174e3110, align 4
  %v0_174eb111 = load i32, i32* %eax.global-to-local, align 8
  %v4_174eb112 = trunc i32 %v0_174eb111 to i8
  %v5_174eb113 = icmp eq i8 %v4_174eb112, 0
  %v1_174ed114 = icmp eq i1 %v5_174eb113, false
  br i1 %v1_174ed114, label %dec_label_pc_17453, label %dec_label_pc_174f3

dec_label_pc_17453:                               ; preds = %dec_label_pc_174d9.preheader, %dec_label_pc_17453
  %v0_17453 = load i32, i32* @ebp, align 4
  %v1_17453 = add i32 %v0_17453, -40
  store i32 %v1_17453, i32* %eax.global-to-local, align 8
  %v1_17456 = add i32 %v0_17453, -52
  %v2_17456 = inttoptr i32 %v1_17456 to i32*
  %v3_17456 = load i32, i32* %v2_17456, align 4
  %v1_17459 = load i32, i32* @esp, align 4
  %v2_17459 = add i32 %v1_17459, 4
  %v3_17459 = inttoptr i32 %v2_17459 to i32*
  store i32 %v3_17456, i32* %v3_17459, align 4
  %v0_1745d = load i32, i32* %eax.global-to-local, align 8
  %v1_1745d = load i32, i32* @esp, align 4
  %v2_1745d = inttoptr i32 %v1_1745d to i32*
  store i32 %v0_1745d, i32* %v2_1745d, align 4
  %v0_17465 = load i32, i32* @esp, align 4
  %v0_17468 = load i32, i32* @ebp, align 4
  %v1_17468 = add i32 %v0_17468, -20
  store i32 %v1_17468, i32* %eax.global-to-local, align 8
  %v1_1746b = add i32 %v0_17468, -44
  %v2_1746b = inttoptr i32 %v1_1746b to i32*
  %v3_1746b = load i32, i32* %v2_1746b, align 4
  %v3_1746e = inttoptr i32 %v0_17465 to i32*
  store i32 %v3_1746b, i32* %v3_1746e, align 4
  %v0_17472 = load i32, i32* %eax.global-to-local, align 8
  %v1_17472 = load i32, i32* @esp, align 4
  %v2_17472 = inttoptr i32 %v1_17472 to i32*
  store i32 %v0_17472, i32* %v2_17472, align 4
  %v0_1747a = load i32, i32* @esp, align 4
  %v1_1747a = sub i32 %v0_1747a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_1747d = load i32, i32* @ebp, align 4
  %v1_1747d = add i32 %v0_1747d, -40
  store i32 %v1_1747d, i32* %eax.global-to-local, align 8
  %v2_17480 = add i32 %v1_1747a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_17480 = inttoptr i32 %v2_17480 to i32*
  store i32 %v1_1747d, i32* %v3_17480, align 4
  %v0_17484 = load i32, i32* @ebp, align 4
  %v1_17484 = add i32 %v0_17484, -20
  %v2_17484 = inttoptr i32 %v1_17484 to i32*
  %v3_17484 = load i32, i32* %v2_17484, align 4
  store i32 %v3_17484, i32* %eax.global-to-local, align 8
  %v1_17487 = load i32, i32* @esp, align 4
  %v2_17487 = add i32 %v1_17487, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_17487 = inttoptr i32 %v2_17487 to i32*
  store i32 %v3_17484, i32* %v3_17487, align 4
  %v0_1748b = load i32, i32* @ebp, align 4
  %v1_1748b = add i32 %v0_1748b, -44
  %v2_1748b = inttoptr i32 %v1_1748b to i32*
  %v3_1748b = load i32, i32* %v2_1748b, align 4
  %v1_1748e = load i32, i32* @esp, align 4
  %v2_1748e = inttoptr i32 %v1_1748e to i32*
  store i32 %v3_1748b, i32* %v2_1748e, align 4
  %v0_17496 = load i32, i32* @ebp, align 4
  %v1_17496 = add i32 %v0_17496, -32
  store i32 %v1_17496, i32* %eax.global-to-local, align 8
  %v1_17499 = load i32, i32* @esp, align 4
  %v2_17499 = inttoptr i32 %v1_17499 to i32*
  store i32 %v1_17496, i32* %v2_17499, align 4
  %v0_174a1 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_174a1, i32* %ebx.global-to-local, align 4
  %v0_174a3 = load i32, i32* @ebp, align 4
  %v1_174a3 = add i32 %v0_174a3, -16
  store i32 %v1_174a3, i32* %eax.global-to-local, align 8
  %v1_174a6 = add i32 %v0_174a3, -44
  %v2_174a6 = inttoptr i32 %v1_174a6 to i32*
  %v3_174a6 = load i32, i32* %v2_174a6, align 4
  %v1_174a9 = load i32, i32* @esp, align 4
  %v2_174a9 = add i32 %v1_174a9, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_174a9 = inttoptr i32 %v2_174a9 to i32*
  store i32 %v3_174a6, i32* %v3_174a9, align 4
  %v0_174ad = load i32, i32* %eax.global-to-local, align 8
  %v1_174ad = load i32, i32* @esp, align 4
  %v2_174ad = inttoptr i32 %v1_174ad to i32*
  store i32 %v0_174ad, i32* %v2_174ad, align 4
  %v0_174b5 = load i32, i32* @esp, align 4
  %v1_174b5 = sub i32 %v0_174b5, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_174b8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_174b8 = add i32 %v1_174b5, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_174b8 = inttoptr i32 %v2_174b8 to i32*
  store i32 %v0_174b8, i32* %v3_174b8, align 4
  %v0_174bc = load i32, i32* @ebp, align 4
  %v1_174bc = add i32 %v0_174bc, -16
  %v2_174bc = inttoptr i32 %v1_174bc to i32*
  %v3_174bc = load i32, i32* %v2_174bc, align 4
  store i32 %v3_174bc, i32* %eax.global-to-local, align 8
  %v1_174bf = load i32, i32* @esp, align 4
  %v2_174bf = add i32 %v1_174bf, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_174bf = inttoptr i32 %v2_174bf to i32*
  store i32 %v3_174bc, i32* %v3_174bf, align 4
  %v0_174c3 = load i32, i32* @ebp, align 4
  %v1_174c3 = add i32 %v0_174c3, -44
  %v2_174c3 = inttoptr i32 %v1_174c3 to i32*
  %v3_174c3 = load i32, i32* %v2_174c3, align 4
  %v1_174c6 = load i32, i32* @esp, align 4
  %v2_174c6 = inttoptr i32 %v1_174c6 to i32*
  store i32 %v3_174c3, i32* %v2_174c6, align 4
  %v0_174ce = load i32, i32* @ebp, align 4
  %v1_174ce = add i32 %v0_174ce, -32
  %v1_174d1 = load i32, i32* @esp, align 4
  %v2_174d1 = inttoptr i32 %v1_174d1 to i32*
  store i32 %v1_174ce, i32* %v2_174d1, align 4
  %v0_174d9.pre = load i32, i32* @ebp, align 4
  %v1_174d9 = add i32 %v0_174d9.pre, -28
  %v1_174dc = load i32, i32* @esp, align 4
  %v2_174dc = add i32 %v1_174dc, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_174dc = inttoptr i32 %v2_174dc to i32*
  store i32 %v1_174d9, i32* %v3_174dc, align 4
  %v0_174e0 = load i32, i32* @ebp, align 4
  %v1_174e0 = add i32 %v0_174e0, -32
  store i32 %v1_174e0, i32* %eax.global-to-local, align 8
  %v1_174e3 = load i32, i32* @esp, align 4
  %v2_174e3 = inttoptr i32 %v1_174e3 to i32*
  store i32 %v1_174e0, i32* %v2_174e3, align 4
  %v0_174eb = load i32, i32* %eax.global-to-local, align 8
  %v4_174eb = trunc i32 %v0_174eb to i8
  %v5_174eb = icmp eq i8 %v4_174eb, 0
  %v1_174ed = icmp eq i1 %v5_174eb, false
  br i1 %v1_174ed, label %dec_label_pc_17453, label %dec_label_pc_174f3

dec_label_pc_174f3:                               ; preds = %dec_label_pc_17453, %dec_label_pc_174d9.preheader
  %v0_174f3 = call i32 @function_1750c()
  store i32 %v0_174f3, i32* %eax.global-to-local, align 8
  ret i32 %v0_174f3

; uselistorder directives
  uselistorder i32 %v1_173f8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 12, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 14, 15 }
  uselistorder label %dec_label_pc_17453, { 1, 0 }
  uselistorder label %dec_label_pc_174d9.preheader, { 1, 0 }
}

define i32 @function_174f5() local_unnamed_addr {
dec_label_pc_174f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_174f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_174f5
}

define i32 @function_1750c() local_unnamed_addr {
dec_label_pc_1750c:
  %v0_1750c = load i32, i32* @ebp, align 4
  %v1_1750c = add i32 %v0_1750c, -44
  %v2_1750c = inttoptr i32 %v1_1750c to i32*
  %v3_1750c = load i32, i32* %v2_1750c, align 4
  ret i32 %v3_1750c
}

define i32 @_ZN5boost6threadC1IPFvPvES2_EET_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17528:
  %tmp2 = call i8 @__decompiler_undefined_function_6()
  %stack_var_-24 = alloca i32, align 4
  %v2_1754c = ptrtoint i32* %stack_var_-24 to i32
  %v0_1755d = load i32, i32* @ecx, align 4
  %sext = mul i32 %v0_1755d, 16777216
  %v7_17564 = sdiv i32 %sext, 16777216
  %v8_17564 = call i32 @function_34213(i32 %v2_1754c, i32 %v7_17564, i32 %arg2, i32 %arg3, i32 %arg3, i32 %arg2, i32 %arg1)
  %v3_1756f = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1756f, i32* @eax, align 8
  %v4_17572 = sext i8 %tmp2 to i32
  %v4_17580 = call i32 @function_34292(i32 %arg1, i32 %v3_1756f, i32 %v4_17572)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_17593() local_unnamed_addr {
dec_label_pc_17593:
  %v0_17593 = call i32 @function_175ac()
  ret i32 %v0_17593
}

define i32 @function_17595() local_unnamed_addr {
dec_label_pc_17595:
  %eax.global-to-local = alloca i32, align 4
  %v0_17595 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17595
}

define i32 @function_175ac() local_unnamed_addr {
dec_label_pc_175ac:
  %v0_175ac = load i32, i32* @ebp, align 4
  %v1_175ac = add i32 %v0_175ac, -12
  %v2_175ac = inttoptr i32 %v1_175ac to i32*
  %v3_175ac = load i32, i32* %v2_175ac, align 4
  %v2_175af = xor i32 %v3_175ac, 30
  %v3_175af = icmp eq i32 %v2_175af, 0
  store i32 %v2_175af, i32* @eax, align 8
  br i1 %v3_175af, label %bb, label %dec_label_pc_175b8

bb:                                               ; preds = %dec_label_pc_175ac
  %v1_175b6 = call i32 @function_175bd()
  br label %dec_label_pc_175b8

dec_label_pc_175b8:                               ; preds = %bb, %dec_label_pc_175ac
  %v2_175b6 = phi i32 [ %v1_175b6, %bb ], [ %v2_175af, %dec_label_pc_175ac ]
  ret i32 %v2_175b6
}

define i32 @function_175bd() local_unnamed_addr {
dec_label_pc_175bd:
  %v0_175c1 = load i32, i32* @eax, align 8
  ret i32 %v0_175c1
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_175c2:
  %ebp.global-to-local = alloca i32, align 4
  %v0_175c2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_175dc = load i32, i32* %arg1, align 4
  %v1_175de = icmp eq i32 %v2_175dc, 0
  br i1 %v1_175de, label %dec_label_pc_17608.thread, label %dec_label_pc_175e2

dec_label_pc_175e2:                               ; preds = %dec_label_pc_175c2
  %v2_175f1 = load i32, i32* %arg1, align 4
  %v4_175f8 = trunc i32 %v2_175f1 to i8
  %v5_175f8 = icmp eq i8 %v4_175f8, 0
  br i1 %v5_175f8, label %dec_label_pc_17608.thread, label %dec_label_pc_1760c

dec_label_pc_17608.thread:                        ; preds = %dec_label_pc_175c2, %dec_label_pc_175e2
  br label %dec_label_pc_17615

dec_label_pc_1760c:                               ; preds = %dec_label_pc_175e2
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_17615

dec_label_pc_17615:                               ; preds = %dec_label_pc_17608.thread, %dec_label_pc_1760c
  store i32 %v0_175c2, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_17615, { 1, 0 }
  uselistorder label %dec_label_pc_17608.thread, { 1, 0 }
}

define i32 @_ZN5boost17enable_error_infoINS_21thread_resource_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17628:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v2_17652 = call i32 @function_343e8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_17664 = call i32 @function_1766b()
  ret i32 %v1_17664

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1766b() local_unnamed_addr {
dec_label_pc_1766b:
  %v0_1766c = load i32, i32* @eax, align 8
  ret i32 %v0_1766c
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1766f:
  %v4_1766f = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_17674 = call i32 @function_2ece9(i32 %v4_1766f)
  ret i32 %v1_17674
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32* %arg1) {
dec_label_pc_1767a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38d88_type* @global_var_38d88.2471 to i32), i32* %arg1, align 4
  %v1_1769d = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1769d = inttoptr i32 %v1_1769d to i32*
  store i32 ptrtoint (i32* @global_var_38d9c.2472 to i32), i32* %v2_1769d, align 4
  store i32 %v1_1769d, i32* @eax, align 8
  %v1_176ad = call i32 @function_25f3e(i32 %v1_1769d)
  store i32 %tmp99, i32* @eax, align 8
  %v1_176b8 = call i32 @function_25d70(i32 %tmp99)
  store i32 0, i32* @eax, align 8
  %v1_176de = call i32 @function_176e5()
  ret i32 %v1_176de

; uselistorder directives
  uselistorder i32 %v1_1769d, { 1, 0, 2 }
  uselistorder i32 %tmp99, { 2, 1, 0 }
}

define i32 @function_176e5() local_unnamed_addr {
dec_label_pc_176e5:
  %v0_176e6 = load i32, i32* @eax, align 8
  ret i32 %v0_176e6
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_176e8:
  %v4_176e8 = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_176ed = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %v4_176e8)
  ret i32 %v1_176ed
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) {
dec_label_pc_176f0:
  store i1 false, i1* @cf, align 1
  %v1_1770d = call i32 @function_2ed62(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1771c() local_unnamed_addr {
dec_label_pc_1771c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1771c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1771c = add i32 %v0_1771c, 862319685
  %v2_1771c = inttoptr i32 %v1_1771c to i32*
  %v3_1771c = load i32, i32* %v2_1771c, align 4
  %v4_1771c = add i32 %v3_1771c, -1
  store i32 %v4_1771c, i32* %v2_1771c, align 4
  %v0_17722 = load i32, i32* %eax.global-to-local, align 8
  %v1_17722 = add i32 %v0_17722, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_17722, i32* %eax.global-to-local, align 8
  ret i32 %v1_17722
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_21thread_resource_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17730:
  store i32 %arg1, i32* @eax, align 8
  %v2_1775a = call i32 @function_34554(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17777:
  %eax.global-to-local = alloca i32, align 4
  %v0_1777c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1777c
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17781:
  %eax.global-to-local = alloca i32, align 4
  %v0_17786 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17786
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_1778c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38d28_type* @global_var_38d28.2473 to i32), i32* %arg1, align 4
  %v1_177af = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_177af = inttoptr i32 %v1_177af to i32*
  store i32 ptrtoint (i32* @global_var_38d44.2474 to i32), i32* %v2_177af, align 4
  %v1_177b9 = add i32 %tmp99, 28
  %v2_177b9 = inttoptr i32 %v1_177b9 to i32*
  store i32 ptrtoint (i32* @global_var_38d54.2475 to i32), i32* %v2_177b9, align 4
  store i32 %v1_177b9, i32* @eax, align 8
  %v1_177c9 = call i32 @function_27660(i32 %v1_177b9)
  store i32 0, i32* @eax, align 8
  %v1_177fa = call i32 @function_17801()
  ret i32 %v1_177fa

; uselistorder directives
  uselistorder i32 %v1_177b9, { 1, 0, 2 }
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_17801() local_unnamed_addr {
dec_label_pc_17801:
  %v0_17802 = load i32, i32* @eax, align 8
  ret i32 %v0_17802
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17804:
  %v4_17804 = add i32 %arg1, -28
  %v1_17809 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %v4_17804)
  ret i32 %v1_17809
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1780b:
  %v4_1780b = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_17810 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %v4_1780b)
  ret i32 %v1_17810
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_17812:
  %v1_1782f = call i32 @function_2ef90(i32 %arg1)
  ret i32 0
}

define i32 @_ZN5boost17enable_error_infoINS_10lock_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17852:
  store i32 %arg1, i32* @eax, align 8
  %v2_1787c = call i32 @function_34728(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1788e = call i32 @function_17895()
  ret i32 %v1_1788e

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_17895() local_unnamed_addr {
dec_label_pc_17895:
  %v0_17896 = load i32, i32* @eax, align 8
  ret i32 %v0_17896
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17899:
  %eax.global-to-local = alloca i32, align 4
  %v0_1789e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1789e
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_178a4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38ce8_type* @global_var_38ce8.2477 to i32), i32* %arg1, align 4
  %v1_178c7 = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_178c7 = inttoptr i32 %v1_178c7 to i32*
  store i32 ptrtoint (i32* @global_var_38cfc.2478 to i32), i32* %v2_178c7, align 4
  store i32 %v1_178c7, i32* @eax, align 8
  %v1_178d7 = call i32 @function_26168(i32 %v1_178c7)
  store i32 %tmp100, i32* @eax, align 8
  %v1_178e2 = call i32 @function_1d0c0(i32 %tmp100)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_178c7, { 1, 0, 2 }
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17912:
  %v4_17912 = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_17917 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %v4_17912)
  ret i32 %v1_17917
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) {
dec_label_pc_1791a:
  ret i32 0
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_10lock_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1795a:
  %v2_17984 = call i32 @function_34894(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_179a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_179a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_179a6
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_179ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_179b0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_179b0
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_179b6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38c88_type* @global_var_38c88.2479 to i32), i32* %arg1, align 4
  %v1_179d9 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_179d9 = inttoptr i32 %v1_179d9 to i32*
  store i32 ptrtoint (i32* @global_var_38ca4.2480 to i32), i32* %v2_179d9, align 4
  %v1_179e3 = add i32 %tmp99, 28
  %v2_179e3 = inttoptr i32 %v1_179e3 to i32*
  store i32 ptrtoint (i32* @global_var_38cb4.2481 to i32), i32* %v2_179e3, align 4
  store i32 %v1_179e3, i32* @eax, align 8
  %v1_179f3 = call i32 @function_2788a(i32 %v1_179e3)
  store i32 %tmp99, i32* @eax, align 8
  %v1_179fe = call i32 @function_2f25a(i32 %tmp99)
  %v1_17a0d = call i32 @function_17a1a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_179e3, { 1, 0, 2 }
}

define i32 @function_17a1a() local_unnamed_addr {
dec_label_pc_17a1a:
  %v0_17a1a = load i32, i32* @ebp, align 4
  %v1_17a1a = add i32 %v0_17a1a, -12
  %v2_17a1a = inttoptr i32 %v1_17a1a to i32*
  %v3_17a1a = load i32, i32* %v2_17a1a, align 4
  %v2_17a1d = xor i32 %v3_17a1a, 30
  ret i32 %v2_17a1d
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a2e:
  %v4_17a2e = add i32 %arg1, -28
  %v1_17a33 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_17a2e)
  ret i32 %v1_17a33
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a35:
  %v4_17a35 = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_17a3a = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_17a35)
  ret i32 %v1_17a3a
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_17a3c:
  %v1_17a59 = call i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_17a68() local_unnamed_addr {
dec_label_pc_17a68:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17a68 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17a68 = add i32 %v0_17a68, 862319685
  %v2_17a68 = inttoptr i32 %v1_17a68 to i32*
  %v3_17a68 = load i32, i32* %v2_17a68, align 4
  %v4_17a68 = add i32 %v3_17a68, -1
  store i32 %v4_17a68, i32* %v2_17a68, align 4
  %v0_17a6e = load i32, i32* %eax.global-to-local, align 8
  %v1_17a6e = add i32 %v0_17a6e, ptrtoint (i32* @global_var_14.2373 to i32)
  store i32 %v1_17a6e, i32* %eax.global-to-local, align 8
  ret i32 %v1_17a6e
}

define i32 @_ZN5boost8weak_ptrINS_6detail16thread_data_baseEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17a7c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_17a9f = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_17a9f, i32* @eax, align 8
  %v1_17aa5 = call i32 @function_28110(i32 %v1_17a9f)
  ret i32 0
}

define i32 @_ZNSt8_Rb_treeIPKvSt4pairIKS1_N5boost6detail13tss_data_nodeEESt10_Select1stIS7_ESt4lessIS1_ESaIS7_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17abe:
  %v1_17adb = call i32 @function_34aaa(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_17aea = call i32 @function_17af1()
  ret i32 %v1_17aea
}

define i32 @function_17af1() local_unnamed_addr {
dec_label_pc_17af1:
  %v0_17af2 = load i32, i32* @eax, align 8
  ret i32 %v0_17af2
}

define i32 @_ZNK5boost11unique_lockINS_5mutexEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17af4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_17af4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17b0e = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_17b0e = inttoptr i32 %v1_17b0e to i8*
  %v3_17b0e = load i8, i8* %v2_17b0e, align 1
  %v4_17b0e = zext i8 %v3_17b0e to i32
  store i32 %v0_17af4, i32* %ebp.global-to-local, align 4
  ret i32 %v4_17b0e
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17b26:
  %v2_17b40 = load i32, i32* %arg1, align 4
  %v1_17b42 = icmp eq i32 %v2_17b40, 0
  br i1 %v1_17b42, label %dec_label_pc_17b5c, label %dec_label_pc_17b46

dec_label_pc_17b46:                               ; preds = %dec_label_pc_17b26
  br label %dec_label_pc_17b5c

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17b46, %dec_label_pc_17b26
  store i32 0, i32* @eax, align 8
  %v1_17b66 = call i32 @function_17b6d()
  ret i32 %v1_17b66
}

define i32 @function_17b6d() local_unnamed_addr {
dec_label_pc_17b6d:
  %v0_17b6e = load i32, i32* @eax, align 8
  ret i32 %v0_17b6e
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17b70:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38fb0.2442 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_17b9a = call i32 @function_17ba1(i32 %tmp99)
  ret i32 %v2_17b9a
}

define i32 @function_17ba1(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ba1:
  %v0_17ba2 = load i32, i32* @eax, align 8
  ret i32 %v0_17ba2
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17ba4:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @eax, align 8
  %v3_17bcf = call i32 @function_2bb98(i32 %tmp104, i32 %arg2)
  %v1_17bd7 = add i32 %tmp104, ptrtoint (i8** @global_var_18.2447 to i32)
  store i32 ptrtoint (%vtable_38f08_type* @global_var_38f08.2488 to i32), i32* %arg1, align 4
  %v1_17bee = add i32 %tmp104, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_17bee = inttoptr i32 %v1_17bee to i32*
  store i32 ptrtoint (i32* @global_var_38f20.2489 to i32), i32* %v2_17bee, align 4
  %v2_17bf8 = inttoptr i32 %v1_17bd7 to i32*
  store i32 ptrtoint (i32* @global_var_38f34.2490 to i32), i32* %v2_17bf8, align 4
  store i32 %tmp104, i32* @eax, align 8
  %v3_17c0c = call i32 @function_27b02(i32 %tmp104, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_17c42 = call i32 @function_17c49()
  ret i32 %v1_17c42

; uselistorder directives
  uselistorder i32 %tmp104, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17c49() local_unnamed_addr {
dec_label_pc_17c49:
  %v0_17c4e = load i32, i32* @eax, align 8
  ret i32 %v0_17c4e
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c4f:
  %v5_17c4f = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_17c54 = call i32 @function_2f8b3(i32 %v5_17c4f)
  ret i32 %v2_17c54
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c59:
  %v4_17c59 = sub i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v1_17c5e = call i32 @function_2f8b3(i32 %v4_17c59)
  ret i32 %v1_17c5e
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_17c64:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38f08_type* @global_var_38f08.2488 to i32), i32* %arg1, align 4
  %v1_17c87 = add i32 %tmp99, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_17c87 = inttoptr i32 %v1_17c87 to i32*
  store i32 ptrtoint (i32* @global_var_38f20.2489 to i32), i32* %v2_17c87, align 4
  %v1_17c91 = add i32 %tmp99, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_17c91 = inttoptr i32 %v1_17c91 to i32*
  store i32 ptrtoint (i32* @global_var_38f34.2490 to i32), i32* %v2_17c91, align 4
  store i32 0, i32* @eax, align 8
  %v1_17cd2 = call i32 @function_17cd9()
  ret i32 %v1_17cd2

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38f08_type* @global_var_38f08.2488 to i32), { 2, 1, 0 }
}

define i32 @function_17cd9() local_unnamed_addr {
dec_label_pc_17cd9:
  %v0_17cda = load i32, i32* @eax, align 8
  ret i32 %v0_17cda
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17cdc:
  %v5_17cdc = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_17ce1 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v5_17cdc)
  ret i32 %v2_17ce1
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ce3:
  %v4_17ce3 = sub i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v1_17ce8 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_17ce3)
  ret i32 %v1_17ce8

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_17cea:
  %v1_17d07 = call i32 @function_2f940(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_17d21 = call i32 @function_17d28(i32 %arg1)
  ret i32 %v2_17d21
}

define i32 @function_17d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d28:
  %v0_17d29 = load i32, i32* @eax, align 8
  ret i32 %v0_17d29
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17d2a:
  %v2_17d54 = call i32 @function_34d88(i32 %arg1, i32 %arg2)
  ret i32 %v2_17d54
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17d6c:
  ret i32 %arg1
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17dae:
  store i32 %arg1, i32* @eax, align 8
  %v3_17de7 = call i32 @function_17dee(i32 %arg1, i32 %arg2)
  ret i32 %v3_17de7
}

define i32 @function_17dee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17dee:
  %v0_17def = load i32, i32* @eax, align 8
  ret i32 %v0_17def
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17df0:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v10_17e0d = icmp eq i32 %arg2, 0
  br i1 %v10_17e0d, label %dec_label_pc_17e20, label %dec_label_pc_17e13

dec_label_pc_17e13:                               ; preds = %dec_label_pc_17df0
  %v1_17e16 = add i32 %arg2, ptrtoint (i8** @global_var_18.2447 to i32)
  br label %dec_label_pc_17e20

dec_label_pc_17e20:                               ; preds = %dec_label_pc_17df0, %dec_label_pc_17e13
  %storemerge = phi i32 [ %v1_17e16, %dec_label_pc_17e13 ], [ 0, %dec_label_pc_17df0 ]
  store i32 %storemerge, i32* %arg1, align 4
  store i32 %tmp103, i32* @eax, align 8
  %v3_17e4e = call i32 @function_2862b(i32 %tmp103, i32 %arg2, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_17e5d = call i32 @function_17e64()
  ret i32 %v1_17e5d

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17e20, { 1, 0 }
}

define i32 @function_17e64() local_unnamed_addr {
dec_label_pc_17e64:
  %v0_17e65 = load i32, i32* @eax, align 8
  ret i32 %v0_17e65
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPcSsEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17e66:
  %ebp.global-to-local = alloca i32, align 4
  %v0_17e66 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17e86 = inttoptr i32 %arg2 to i32*
  %v2_17e86 = load i32, i32* %v1_17e86, align 4
  store i32 %v2_17e86, i32* %arg1, align 4
  store i32 %v0_17e66, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ea0:
  ret i32 %arg1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ece:
  store i32 %arg1, i32* @eax, align 8
  %v2_17ef2 = call i32 @function_17ef9(i32 %arg1)
  ret i32 %v2_17ef2
}

define i32 @function_17ef9(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ef9:
  %v0_17efa = load i32, i32* @eax, align 8
  ret i32 %v0_17efa
}

define i32 @_ZN5boost17bad_function_callC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17efc:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_17f26 = call i32 @function_2a3fc(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.2458 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.2458 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f48:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_17f73 = call i32 @function_2fe44(i32 %tmp102, i32 %arg2)
  %v1_17f7b = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_17f81 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_17f81, i32* @eax, align 8
  %v2_17f8b = call i32 @function_293bc(i32 %v1_17f81, i32 %v1_17f7b)
  store i32 ptrtoint (%vtable_38c48_type* @global_var_38c48.2509 to i32), i32* %arg1, align 4
  %v2_17f9c = inttoptr i32 %v1_17f81 to i32*
  store i32 ptrtoint (i32* @global_var_38c5c.2510 to i32), i32* %v2_17f9c, align 4
  store i32 0, i32* @eax, align 8
  %v1_17fad = call i32 @function_17fcd()
  store i32 %v1_17fad, i32* @eax, align 8
  %v0_17faf = call i32 @function_17fc8()
  ret i32 %v0_17faf

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17fb2() local_unnamed_addr {
dec_label_pc_17fb2:
  %eax.global-to-local = alloca i32, align 4
  %v0_17fb2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17fb2
}

define i32 @function_17fc8() local_unnamed_addr {
dec_label_pc_17fc8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_17fcd() local_unnamed_addr {
dec_label_pc_17fcd:
  %v0_17fd2 = load i32, i32* @eax, align 8
  ret i32 %v0_17fd2
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17fd4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_17ffe = call i32 @function_2ff1c(i32 %tmp102, i32 %arg2)
  %v1_18006 = add i32 %arg2, 28
  %v1_1800c = add i32 %tmp102, 28
  store i32 %v1_1800c, i32* @eax, align 8
  %v2_18016 = call i32 @function_2b430(i32 %v1_1800c, i32 %v1_18006)
  store i32 ptrtoint (%vtable_38be8_type* @global_var_38be8.2511 to i32), i32* %arg1, align 4
  %v1_18027 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_18027 = inttoptr i32 %v1_18027 to i32*
  store i32 ptrtoint (i32* @global_var_38c04.2512 to i32), i32* %v2_18027, align 4
  %v2_18031 = inttoptr i32 %v1_1800c to i32*
  store i32 ptrtoint (i32* @global_var_38c14.2513 to i32), i32* %v2_18031, align 4
  store i32 0, i32* @eax, align 8
  %v1_18042 = call i32 @function_18049()
  ret i32 %v1_18042

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_18049() local_unnamed_addr {
dec_label_pc_18049:
  %v0_1804a = load i32, i32* @eax, align 8
  ret i32 %v0_1804a
}

define i32 @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1804b:
  store i32 %arg1, i32* @eax, align 8
  %v1_1806a = call i32 @function_280a4(i32 %arg1)
  ret i32 %v1_1806a
}

define i32 @function_1807a() local_unnamed_addr {
dec_label_pc_1807a:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1807a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1807a = add i32 %v0_1807a, -666530365
  %v2_1807a = inttoptr i32 %v1_1807a to i32*
  %v3_1807a = load i32, i32* %v2_1807a, align 4
  %v4_1807a = add i32 %v3_1807a, -1
  store i32 %v4_1807a, i32* %v2_1807a, align 4
  %v0_18080 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18080 = add i32 %v0_18080, -44
  %v2_18080 = inttoptr i32 %v1_18080 to i32*
  %v3_18080 = load i32, i32* %v2_18080, align 4
  %v1_18092 = add i32 %v0_18080, -40
  store i32 %v1_18092, i32* @eax, align 8
  %v4_180d5 = call i32 @function_180d9(i32 %v1_18092, i32 ptrtoint (i32* @global_var_39720.2514 to i32), i32 119558, i32 %v3_18080)
  ret i32 %v4_180d5

; uselistorder directives
  uselistorder i32 %v1_18092, { 1, 0 }
}

define i32 @function_180d7() local_unnamed_addr {
dec_label_pc_180d7:
  %eax.global-to-local = alloca i32, align 4
  %v0_180d7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_180d7
}

define i32 @function_180d9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_180d9:
  %v3_180d9 = load i32, i32* @eax, align 8
  ret i32 %v3_180d9
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_180ec:
  store i32 %arg1, i32* @eax, align 8
  %v1_18109 = call i32 @function_354b8(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKjiEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18122:
  store i32 0, i32* @eax, align 8
  %v2_1814e = call i32 @function_18155(i32 %arg1)
  ret i32 %v2_1814e
}

define i32 @function_18155(i32 %arg1) local_unnamed_addr {
dec_label_pc_18155:
  %v0_18156 = load i32, i32* @eax, align 8
  ret i32 %v0_18156
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18158:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_18158 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_18158, i32* %stack_var_-4, align 4
  %v4_18158 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_18158, i32* @ebp, align 4
  %v10_181b7106 = icmp eq i32 %arg2, 0
  %v1_181bb107 = icmp eq i1 %v10_181b7106, false
  %v5_181be109 = icmp eq i1 %v1_181bb107, false
  %v1_181c0110 = icmp eq i1 %v5_181be109, false
  br i1 %v1_181c0110, label %dec_label_pc_18177, label %dec_label_pc_181c2

dec_label_pc_18177:                               ; preds = %dec_label_pc_18158, %dec_label_pc_18177
  %stack_var_-36.0111 = phi i32 [ %v1_18197, %dec_label_pc_18177 ], [ %arg2, %dec_label_pc_18158 ]
  store i32 %stack_var_-36.0111, i32* @eax, align 8
  %v1_1817d = call i32 @function_35584(i32 %stack_var_-36.0111)
  store i32 %arg1, i32* @eax, align 8
  %v2_1818c = call i32 @function_302b0(i32 %arg1, i32 %v1_1817d)
  store i32 %stack_var_-36.0111, i32* @eax, align 8
  %v1_18197 = call i32 @function_355b4(i32 %stack_var_-36.0111)
  store i32 %arg1, i32* @eax, align 8
  %v2_181ac = call i32 @function_355e4(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_181b7 = icmp eq i32 %v1_18197, 0
  %v1_181bb = icmp eq i1 %v10_181b7, false
  %v5_181be = icmp eq i1 %v1_181bb, false
  %v1_181c0 = icmp eq i1 %v5_181be, false
  br i1 %v1_181c0, label %dec_label_pc_18177, label %dec_label_pc_181b7.dec_label_pc_181c2_crit_edge

dec_label_pc_181b7.dec_label_pc_181c2_crit_edge:  ; preds = %dec_label_pc_18177
  %v2_181d3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_181c2

dec_label_pc_181c2:                               ; preds = %dec_label_pc_181b7.dec_label_pc_181c2_crit_edge, %dec_label_pc_18158
  %v2_181d3 = phi i32 [ %v2_181d3.pre, %dec_label_pc_181b7.dec_label_pc_181c2_crit_edge ], [ %v0_18158, %dec_label_pc_18158 ]
  store i32 %v2_181d3, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_18197, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_18177, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_181d6:
  %v1_181f0 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_181f0 = inttoptr i32 %v1_181f0 to i32*
  %v3_181f0 = load i32, i32* %v2_181f0, align 4
  store i32 %v3_181f0, i32* @eax, align 8
  %v2_181fd = call i32 @function_18204(i32 %arg1)
  ret i32 %v2_181fd
}

define i32 @function_18204(i32 %arg1) local_unnamed_addr {
dec_label_pc_18204:
  %v0_18205 = load i32, i32* @eax, align 8
  ret i32 %v0_18205
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18206:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18230:
  ret i32 0
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1825a:
  %v1_18277 = call i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_18286 = call i32 @function_1828d()
  ret i32 %v1_18286
}

define i32 @function_1828d() local_unnamed_addr {
dec_label_pc_1828d:
  %v0_1828e = load i32, i32* @eax, align 8
  ret i32 %v0_1828e
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_18290:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_182ab = add i32 %tmp101, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_182ab = inttoptr i32 %v1_182ab to i32*
  %v3_182ab = load i32, i32* %v2_182ab, align 4
  %v2_182b3 = load i32, i32* %arg1, align 4
  %v2_182b7 = sub i32 %v3_182ab, %v2_182b3
  store i32 %v2_182b7, i32* @edx, align 8
  %v2_182c0 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_182d0 = call i32 @function_30784(i32 %tmp101, i32 %v2_182c0, i32 %v2_182b7)
  %v1_182db = call i32 @function_304ea(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  %v1_182ea = call i32 @function_1830a()
  store i32 %v1_182ea, i32* @eax, align 8
  %v0_182ec = call i32 @function_18305()
  ret i32 %v0_182ec

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 3, 0 }
}

define i32 @function_182ef() local_unnamed_addr {
dec_label_pc_182ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_182ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_182ef
}

define i32 @function_18305() local_unnamed_addr {
dec_label_pc_18305:
  %v0_18305 = load i32, i32* @eax, align 8
  ret i32 %v0_18305
}

define i32 @function_1830a() local_unnamed_addr {
dec_label_pc_1830a:
  %v0_1830f = load i32, i32* @eax, align 8
  ret i32 %v0_1830f
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18310:
  store i32 %arg1, i32* @eax, align 8
  %v2_18334 = call i32 @function_1833b(i32 %arg1)
  ret i32 %v2_18334
}

define i32 @function_1833b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1833b:
  %v0_1833c = load i32, i32* @eax, align 8
  ret i32 %v0_1833c
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1833d:
  store i32 %arg1, i32* @eax, align 8
  %v2_1836d = call i32 @function_358a6(i32 %arg1, i32 %arg2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18386:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_183a6 = inttoptr i32 %arg2 to i32*
  %v2_183a6 = load i32, i32* %v1_183a6, align 4
  store i32 %v2_183a6, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_183b7 = call i32 @function_183be(i32 %arg2, i32 %tmp101)
  ret i32 %v3_183b7
}

define i32 @function_183be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_183be:
  %v0_183bf = load i32, i32* @eax, align 8
  ret i32 %v0_183bf
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_183c0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_183da = load i32, i32* %arg1, align 4
  store i32 %v2_183da, i32* @eax, align 8
  %v2_183e6 = call i32 @function_183ed(i32 %tmp99)
  ret i32 %v2_183e6
}

define i32 @function_183ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_183ed:
  %v0_183ee = load i32, i32* @eax, align 8
  ret i32 %v0_183ee
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_183f0:
  store i32 %arg1, i32* @eax, align 8
  %v1_1840d = call i32 @function_3599c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1841c = call i32 @function_18423()
  ret i32 %v1_1841c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18423() local_unnamed_addr {
dec_label_pc_18423:
  %v0_18424 = load i32, i32* @eax, align 8
  ret i32 %v0_18424
}

define i32 @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18426:
  store i32 %arg1, i32* @eax, align 8
  %v2_1844a = call i32 @function_18451(i32 %arg1)
  ret i32 %v2_1844a
}

define i32 @function_18451(i32 %arg1) local_unnamed_addr {
dec_label_pc_18451:
  %v0_18452 = load i32, i32* @eax, align 8
  ret i32 %v0_18452
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18454:
  store i32 %arg1, i32* @eax, align 8
  %v2_18478 = call i32 @function_1847f(i32 %arg1)
  ret i32 %v2_18478
}

define i32 @function_1847f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1847f:
  %v0_18480 = load i32, i32* @eax, align 8
  ret i32 %v0_18480
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPcSsEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18481:
  store i32 %arg1, i32* @eax, align 8
  %v3_184ab = call i32 @function_184b2(i32 %arg2, i32 %arg1)
  ret i32 %v3_184ab
}

define i32 @function_184b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_184b2:
  %v0_184b3 = load i32, i32* @eax, align 8
  ret i32 %v0_184b3
}

define i32 @_ZNKSt6vectorIhSaIhEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_184b6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_184d0 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_184d0 = inttoptr i32 %v1_184d0 to i32*
  %v3_184d0 = load i32, i32* %v2_184d0, align 4
  %v2_184d8 = load i32, i32* %arg1, align 4
  %v2_184dc = sub i32 %v3_184d0, %v2_184d8
  store i32 %v2_184dc, i32* @eax, align 8
  %v2_184ea = call i32 @function_184f1(i32 %tmp99)
  ret i32 %v2_184ea
}

define i32 @function_184f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_184f1:
  %v0_184f2 = load i32, i32* @eax, align 8
  ret i32 %v0_184f2
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_184f4:
  %v10_18517 = icmp eq i32 %arg2, 0
  br i1 %v10_18517, label %dec_label_pc_18536, label %dec_label_pc_1851d

dec_label_pc_1851d:                               ; preds = %dec_label_pc_184f4
  store i32 %arg1, i32* @eax, align 8
  %v3_18531 = call i32 @function_35b46(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_18536

dec_label_pc_18536:                               ; preds = %dec_label_pc_1851d, %dec_label_pc_184f4
  store i32 0, i32* @eax, align 8
  %v1_18540 = call i32 @function_18547()
  ret i32 %v1_18540

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18547() local_unnamed_addr {
dec_label_pc_18547:
  %v0_18548 = load i32, i32* @eax, align 8
  ret i32 %v0_18548
}

define i32 @_ZSt4copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18549:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1854c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_18573 = call i32 @function_35bdc(i32 %arg2)
  store i32 %v1_18573, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_18580 = call i32 @function_35bdc(i32 %arg1)
  store i32 %v1_18580, i32* @eax, align 8
  %v3_18593 = call i32 @function_35c11(i32 %v1_18580, i32 %v1_18573, i32 %arg3)
  store i32 %v0_1854c, i32* %ebx.global-to-local, align 4
  ret i32 %v3_18593

; uselistorder directives
  uselistorder i32 (i32)* @function_35bdc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_185af:
  store i32 %arg1, i32* @eax, align 8
  %v8_185fb = call i32 @function_18602(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v8_185fb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_18602(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_18602:
  %v0_18603 = load i32, i32* @eax, align 8
  ret i32 %v0_18603
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEC1ERKSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18604:
  %ebp.global-to-local = alloca i32, align 4
  %v0_18604 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18624 = inttoptr i32 %arg2 to i32*
  %v2_18624 = load i32, i32* %v1_18624, align 4
  store i32 %v2_18624, i32* %arg1, align 4
  store i32 %v0_18604, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1863e:
  store i32 %arg1, i32* @eax, align 8
  %v2_18662 = call i32 @function_18669(i32 %arg1)
  ret i32 %v2_18662
}

define i32 @function_18669(i32 %arg1) local_unnamed_addr {
dec_label_pc_18669:
  %v0_1866a = load i32, i32* @eax, align 8
  ret i32 %v0_1866a
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E13apply_visitorIKNS4_21lock_weak_ptr_visitorEEENT_11result_typeERSD_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1866c:
  %stack_var_-20 = alloca i32, align 4
  store i1 true, i1* @zf, align 1
  %v2_18696 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18696, i32* @eax, align 8
  %v1_1869c = call i32 @function_35e9a(i32 %v2_18696)
  store i32 %arg1, i32* @eax, align 8
  %v3_186b5 = call i32 @function_35ed2(i32 %arg1, i32 %arg2, i32 %v2_18696)
  store i32 %arg1, i32* @eax, align 8
  %v1_186ca = call i32 @function_186d1()
  ret i32 %v1_186ca

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_186d1() local_unnamed_addr {
dec_label_pc_186d1:
  %v0_186d2 = load i32, i32* @eax, align 8
  ret i32 %v0_186d2
}

define i32 @_ZN5boost6detail7variant9copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_186d6:
  store i32 %arg1, i32* @eax, align 8
  %v1_186f3 = call i32 @function_2cf52(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_18702 = call i32 @function_18709()
  ret i32 %v1_18702

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18709() local_unnamed_addr {
dec_label_pc_18709:
  %v0_1870a = load i32, i32* @eax, align 8
  ret i32 %v0_1870a
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1870c:
  %stack_var_-20 = alloca i32, align 4
  %v1_1872d = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_18741 = call i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEED1Ev(i32 %v1_1872d)
  %v2_1874a = ptrtoint i32* %stack_var_-20 to i32
  %v2_18750 = call i32 @function_2acf2(i32 %v2_1874a, i32 %v1_18741)
  %v2_18762 = call i32 @function_3602a(i32 %arg2, i32 %v2_1874a)
  %v1_1876d = call i32 @function_360d0(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_1877c = call i32 @function_36098(i32 %arg1, i32 %v1_1876d)
  store i32 %v2_1874a, i32* @eax, align 8
  %v1_18787 = call i32 @function_30de2(i32 %v2_1874a)
  store i32 0, i32* @eax, align 8
  %v1_18796 = call i32 @function_187c8()
  store i32 %v1_18796, i32* @eax, align 8
  %v0_18798 = call i32 @function_187c3()
  ret i32 %v0_18798

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1879a() local_unnamed_addr {
dec_label_pc_1879a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1879a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1879a, i32* @ebx, align 4
  %v0_1879c = load i32, i32* @ebp, align 4
  %v1_1879c = add i32 %v0_1879c, -16
  store i32 %v1_1879c, i32* @eax, align 8
  %v1_187a2 = call i32 @function_30de2(i32 %v1_1879c)
  store i32 %v1_187a2, i32* %eax.global-to-local, align 8
  %v0_187a7 = call i32 @function_187ab()
  store i32 %v0_187a7, i32* %eax.global-to-local, align 8
  ret i32 %v0_187a7

; uselistorder directives
  uselistorder i32 (i32)* @function_30de2, { 1, 0 }
}

define i32 @function_187a9() local_unnamed_addr {
dec_label_pc_187a9:
  %eax.global-to-local = alloca i32, align 4
  %v0_187a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_187a9
}

define i32 @function_187ab() local_unnamed_addr {
dec_label_pc_187ab:
  %v0_187b9 = load i32, i32* @ebx, align 4
  ret i32 %v0_187b9
}

define i32 @function_187c3() local_unnamed_addr {
dec_label_pc_187c3:
  %v0_187c3 = load i32, i32* @eax, align 8
  ret i32 %v0_187c3
}

define i32 @function_187c8() local_unnamed_addr {
dec_label_pc_187c8:
  %v0_187cd = load i32, i32* @eax, align 8
  ret i32 %v0_187cd
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_187ce:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant9destroyerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_187f8:
  store i32 %arg1, i32* @eax, align 8
  %v1_18815 = call i32 @function_2d03e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant9destroyerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1882e:
  store i32 %arg1, i32* @eax, align 8
  %v1_1884b = call i32 @function_2d0aa(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1885a = call i32 @function_18861()
  ret i32 %v1_1885a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18861() local_unnamed_addr {
dec_label_pc_18861:
  %v0_18862 = load i32, i32* @eax, align 8
  ret i32 %v0_18862
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18864:
  %stack_var_-17 = alloca i32, align 4
  %v2_1887c = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_1887c, i32* @eax, align 8
  %v1_18882 = call i32 @function_3105c(i32 %v2_1887c)
  store i32 %arg1, i32* @eax, align 8
  %v2_18894 = call i32 @function_36270(i32 %arg1, i32 %v2_1887c)
  store i32 0, i32* @eax, align 8
  %v2_188ae = call i32 @function_188ce(i32 %v2_1887c)
  store i32 %v2_188ae, i32* @eax, align 8
  %v0_188b0 = call i32 @function_188c9()
  ret i32 %v0_188b0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_188b3() local_unnamed_addr {
dec_label_pc_188b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_188b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_188b3
}

define i32 @function_188c9() local_unnamed_addr {
dec_label_pc_188c9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_188ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_188ce:
  %v0_188d3 = load i32, i32* @eax, align 8
  ret i32 %v0_188d3
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E13apply_visitorIKNS4_24expired_weak_ptr_visitorEEENT_11result_typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_188d4:
  %stack_var_-20 = alloca i32, align 4
  %v2_188f8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_188fe = call i32 @function_3634e(i32 %v2_188f8, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_18910 = call i32 @function_36386(i32 %arg1, i32 %v2_188f8)
  ret i32 %v2_18910

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18928:
  store i32 0, i32* @eax, align 8
  %v2_18949 = call i32 @function_18950(i32 %arg1)
  ret i32 %v2_18949
}

define i32 @function_18950(i32 %arg1) local_unnamed_addr {
dec_label_pc_18950:
  %v0_18951 = load i32, i32* @eax, align 8
  ret i32 %v0_18951
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18952:
  %v1_1896f = call i32 @function_3127a(i32 %arg1)
  ret i32 0
}

define i32 @_ZN5boost10shared_ptrIvEC1IvEERKNS_8weak_ptrIT_EENS_6detail14sp_nothrow_tagE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18988:
  %ecx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_189b8 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_189be = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_189c1 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_189be, i32* @eax, align 8
  %sext = mul i32 %v0_189c1, 16777216
  %v3_189da = sdiv i32 %sext, 16777216
  %v4_189da = call i32 @function_28fe8(i32 %v1_189be, i32 %v1_189b8, i32 %v3_189da)
  %v1_189df = xor i32 %v4_189da, 1
  %v4_189df = trunc i32 %v1_189df to i8
  %v5_189e2 = icmp eq i8 %v4_189df, 0
  br i1 %v5_189e2, label %dec_label_pc_189f0, label %dec_label_pc_189e6

dec_label_pc_189e6:                               ; preds = %dec_label_pc_18988
  %v1_189e9 = inttoptr i32 %arg2 to i32*
  %v2_189e9 = load i32, i32* %v1_189e9, align 4
  store i32 %v2_189e9, i32* %arg1, align 4
  br label %dec_label_pc_189f0

dec_label_pc_189f0:                               ; preds = %dec_label_pc_189e6, %dec_label_pc_18988
  store i32 0, i32* @eax, align 8
  %v1_189fa = call i32 @function_18a01()
  ret i32 %v1_189fa

; uselistorder directives
  uselistorder i32 %v1_189be, { 1, 0 }
}

define i32 @function_18a01() local_unnamed_addr {
dec_label_pc_18a01:
  %v0_18a02 = load i32, i32* @eax, align 8
  ret i32 %v0_18a02
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEEC1ERS3_NS_12defer_lock_tE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a04:
  %ebp.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v0_18a04 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v1_18a33 = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_18a33 = inttoptr i32 %v1_18a33 to i8*
  store i8 0, i8* %v2_18a33, align 1
  store i32 %v0_18a04, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_18a4a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp100, i32* @eax, align 8
  %v1_18a67 = call i32 @function_315ec(i32 %tmp100)
  %v4_18a6c = trunc i32 %v1_18a67 to i8
  %v5_18a6c = icmp eq i8 %v4_18a6c, 0
  br i1 %v5_18a6c, label %dec_label_pc_18a7d, label %dec_label_pc_18a70

dec_label_pc_18a70:                               ; preds = %dec_label_pc_18a4a
  %v2_18a73 = load i32, i32* %arg1, align 4
  store i32 %v2_18a73, i32* @eax, align 8
  %v1_18a78 = call i32 @function_2de9a(i32 %v2_18a73)
  br label %dec_label_pc_18a7d

dec_label_pc_18a7d:                               ; preds = %dec_label_pc_18a70, %dec_label_pc_18a4a
  store i32 0, i32* @eax, align 8
  %v1_18a87 = call i32 @function_18a8e()
  ret i32 %v1_18a87

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_18a8e() local_unnamed_addr {
dec_label_pc_18a8e:
  %v0_18a8f = load i32, i32* @eax, align 8
  ret i32 %v0_18a8f
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE8TryEnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18a90:
  %v1_18abf = call i32 @function_365b0(i32 %arg1)
  ret i32 %arg2
}

define i32 @function_18ae9() local_unnamed_addr {
dec_label_pc_18ae9:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_18ae9 = add i32 %tmp92, -28
  %v2_18ae9 = inttoptr i32 %v1_18ae9 to i32*
  %v3_18b0b = load i32, i32* %v2_18ae9, align 4
  ret i32 %v3_18b0b
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEE5EnterEPKcS6_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18b2a:
  store i32 %arg1, i32* @eax, align 8
  %v1_18b59 = call i32 @function_3664a(i32 %arg1)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18b9e() local_unnamed_addr {
dec_label_pc_18b9e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18b9e = load i32, i32* %ecx.global-to-local, align 4
  %v1_18b9e = add i32 %v0_18b9e, -1
  store i32 %v1_18b9e, i32* %ecx.global-to-local, align 4
  %v0_18ba0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18ba0
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ba2:
  %v1_18bbc = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_18bbc = inttoptr i32 %v1_18bbc to i8*
  %v3_18bbc = load i8, i8* %v2_18bbc, align 1
  %v4_18bbc = zext i8 %v3_18bbc to i32
  store i32 %v4_18bbc, i32* @eax, align 8
  %v2_18bca = call i32 @function_18bd1(i32 %arg1)
  ret i32 %v2_18bca
}

define i32 @function_18bd1(i32 %arg1) local_unnamed_addr {
dec_label_pc_18bd1:
  %v0_18bd2 = load i32, i32* @eax, align 8
  ret i32 %v0_18bd2
}

define i32 @_ZN5boost15foreach_detail_13auto_any_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18bd4:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE9constructEPhRKh(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_18bfe:
  %v2_18c2f = call i32 @function_1e0ee(i32 1, i32 %arg2)
  %v2_18c34 = icmp eq i32 %v2_18c2f, 0
  br i1 %v2_18c34, label %dec_label_pc_18c40, label %dec_label_pc_18c38

dec_label_pc_18c38:                               ; preds = %dec_label_pc_18bfe
  %v3_18c2f = inttoptr i32 %v2_18c2f to i8*
  %v2_18c3b = load i8, i8* %arg3, align 1
  store i8 %v2_18c3b, i8* %v3_18c2f, align 1
  br label %dec_label_pc_18c40

dec_label_pc_18c40:                               ; preds = %dec_label_pc_18c38, %dec_label_pc_18bfe
  store i32 0, i32* @eax, align 8
  %v1_18c4a = call i32 @function_18c51()
  ret i32 %v1_18c4a

; uselistorder directives
  uselistorder i32 %v2_18c2f, { 1, 0 }
}

define i32 @function_18c51() local_unnamed_addr {
dec_label_pc_18c51:
  %v0_18c52 = load i32, i32* @eax, align 8
  ret i32 %v0_18c52
}

define i32 @_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18c54:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  %stack_var_-76 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_18c7c = add i32 %tmp117, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_18c7c = inttoptr i32 %v1_18c7c to i32*
  %v3_18c7c = load i32, i32* %v2_18c7c, align 4
  %v1_18c82 = add i32 %tmp117, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_18c82 = inttoptr i32 %v1_18c82 to i32*
  %v3_18c82 = load i32, i32* %v2_18c82, align 4
  %v12_18c85 = icmp eq i32 %v3_18c7c, %v3_18c82
  br i1 %v12_18c85, label %dec_label_pc_18d08, label %dec_label_pc_18c89

dec_label_pc_18c89:                               ; preds = %dec_label_pc_18c54
  %tmp122 = inttoptr i32 %arg3 to i8*
  %v3_18c8c = load i32, i32* %v2_18c7c, align 4
  %v1_18c8f = add i32 %v3_18c8c, -1
  store i32 %v1_18c8f, i32* @ecx, align 4
  %v3_18c95 = load i32, i32* %v2_18c7c, align 4
  store i32 %tmp117, i32* @eax, align 8
  store i32 %tmp117, i32* %stack_var_-76, align 4
  %v4_18ca6 = call i32 @function_31852(i32 %tmp117, i32 %v3_18c95, i32 %v1_18c8f)
  %v3_18cae = load i32, i32* %v2_18c7c, align 4
  %v1_18cb1 = add i32 %v3_18cae, 1
  store i32 %v1_18cb1, i32* %v2_18c7c, align 4
  %v2_18cbd = load i8, i8* %tmp122, align 1
  %v1_18cd2 = add i32 %v3_18cae, -1
  store i32 %v1_18cd2, i32* @ebx, align 4
  %v2_18cd5 = ptrtoint i32* %stack_var_-52 to i32
  %v2_18ce0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_18ce0, i32* @eax, align 8
  store i32 %v2_18ce0, i32* %stack_var_-76, align 4
  %v4_18ced = call i32 @function_368de(i32 %v2_18ce0, i32 %v1_18cd2, i32 %v3_18cae)
  store i32 %v2_18cd5, i32* @eax, align 8
  store i32 %v2_18cd5, i32* %stack_var_-76, align 4
  %v1_18cf8 = call i32 @function_31014(i32 %v2_18cd5)
  %v3_18d01 = inttoptr i32 %v1_18cf8 to i8*
  store i8 %v2_18cbd, i8* %v3_18d01, align 1
  %v0_18d03 = load i32, i32* %stack_var_-76, align 4
  %v4_18d03 = call i32 @function_18ef3(i32 %v0_18d03, i32 %v1_18cd2, i32 %v3_18cae)
  ret i32 %v4_18d03

dec_label_pc_18d08:                               ; preds = %dec_label_pc_18c54
  store i32 %tmp117, i32* @eax, align 8
  store i32 %tmp117, i32* %stack_var_-76, align 4
  %v4_18d1e = call i32 @function_36944(i32 %tmp117, i32 1, i32 ptrtoint ([22 x i8]* @global_var_5fd2.2515 to i32))
  %v2_18d26 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_18d26, i32* %stack_var_-76, align 4
  %v2_18d33 = call i32 @function_2d3a8(i32 %v2_18d26, i32 %tmp117)
  store i32 %v2_18d26, i32* %stack_var_-76, align 4
  %v2_18d42 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_18d42, i32* @eax, align 8
  store i32 %v2_18d42, i32* %stack_var_-80, align 4
  %v2_18d48 = call i32 @function_2daf9(i32 %v2_18d42, i32 %v2_18d26)
  store i32 %v4_18d1e, i32* %stack_var_-76, align 4
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v2_18d5d = call i32 @function_36166(i32 %tmp117, i32 %v4_18d1e)
  %v3_18d71 = add i32 %v2_18d5d, %v2_18d48
  store i32 %tmp117, i32* @eax, align 8
  store i32 %v3_18d71, i32* %stack_var_-76, align 4
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v3_18d85 = call i32 @function_31852(i32 %tmp117, i32 %v3_18d71, i32 %arg3)
  store i32 %tmp117, i32* @eax, align 8
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v1_18d97 = call i32 @function_30f64(i32 %tmp117)
  %v2_18da9 = load i32, i32* %stack_var_-52, align 4
  %v2_18dae = load i32, i32* %arg1, align 4
  store i32 %v2_18dae, i32* @eax, align 8
  store i32 %v2_18da9, i32* %stack_var_-76, align 4
  store i32 %v2_18dae, i32* %stack_var_-80, align 4
  %v5_18dc2 = call i32 @function_36a16(i32 %v2_18dae, i32 %v2_18da9, i32 %v2_18d5d, i32 %v1_18d97)
  %v4_18dca = add i32 %v5_18dc2, 1
  store i32 %tmp117, i32* @eax, align 8
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v1_18dd4 = call i32 @function_30f64(i32 %tmp117)
  %v3_18dde = load i32, i32* %v2_18c7c, align 4
  %v2_18dec = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_18dec, i32* @eax, align 8
  store i32 %v3_18dde, i32* %stack_var_-76, align 4
  store i32 %v2_18dec, i32* %stack_var_-80, align 4
  %v5_18e00 = call i32 @function_36a16(i32 %v2_18dec, i32 %v3_18dde, i32 %v4_18dca, i32 %v1_18dd4)
  store i32 %tmp117, i32* @eax, align 8
  store i32 %tmp117, i32* %stack_var_-80, align 4
  %v1_18e0e = call i32 @function_30f64(i32 %tmp117)
  store i32 %v1_18e0e, i32* @eax, align 8
  %v3_18e16 = load i32, i32* %v2_18c7c, align 4
  %v2_18e1c = load i32, i32* %arg1, align 4
  store i32 %v3_18e16, i32* %stack_var_-76, align 4
  store i32 %v2_18e1c, i32* %stack_var_-80, align 4
  %v3_18e29 = call i32 @function_30f91(i32 %v2_18e1c, i32 %v3_18e16, i32 %v1_18e0e)
  %v3_18e31 = load i32, i32* %v2_18c82, align 4
  %v2_18e39 = load i32, i32* %arg1, align 4
  %v2_18e3d = sub i32 %v3_18e31, %v2_18e39
  store i32 %v2_18e39, i32* %stack_var_-76, align 4
  store i32 %tmp117, i32* %stack_var_-80, align 4
  store i32 %v2_18d5d, i32* %arg1, align 4
  store i32 %v5_18e00, i32* %v2_18c7c, align 4
  %v2_18e72 = add i32 %v2_18d5d, %v4_18d1e
  store i32 %v2_18e72, i32* %v2_18c82, align 4
  %v0_18e7a = load i32, i32* %stack_var_-80, align 4
  %v1_18e7a = load i32, i32* %stack_var_-76, align 4
  %v3_18e7a = call i32 @function_18ef3(i32 %v0_18e7a, i32 %v1_18e7a, i32 %v2_18e3d)
  ret i32 %v3_18e7a

; uselistorder directives
  uselistorder i32 %v3_18e16, { 1, 0 }
  uselistorder i32 %v2_18dec, { 1, 0, 2 }
  uselistorder i32 %v3_18dde, { 1, 0 }
  uselistorder i32 %v2_18dae, { 1, 0, 2 }
  uselistorder i32 %v2_18da9, { 1, 0 }
  uselistorder i32 %v3_18d71, { 1, 0 }
  uselistorder i32 %v2_18d5d, { 0, 2, 3, 1 }
  uselistorder i32 %v2_18d42, { 1, 0, 2 }
  uselistorder i32 %v2_18d26, { 1, 0, 3, 2 }
  uselistorder i32 %v4_18d1e, { 0, 2, 1 }
  uselistorder i32 %v2_18cd5, { 1, 0, 2 }
  uselistorder i32 %v1_18cd2, { 1, 0, 2 }
  uselistorder i32 %v3_18cae, { 1, 2, 0, 3 }
  uselistorder i32* %v2_18c7c, { 4, 5, 6, 0, 1, 2, 3, 7 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13 }
  uselistorder i32 %tmp117, { 5, 8, 7, 6, 11, 10, 9, 14, 13, 12, 1, 0, 15, 17, 16, 18, 21, 20, 19, 4, 3, 2, 23, 22 }
  uselistorder i32 (i32, i32, i32, i32)* @function_36a16, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_18ef3, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_31852, { 1, 0 }
}

define i32 @function_18e7d() local_unnamed_addr {
dec_label_pc_18e7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_18e7d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_18e7d
}

define i32 @function_18e8d() local_unnamed_addr {
dec_label_pc_18e8d:
  %v0_18e95 = load i32, i32* @ebp, align 4
  %v1_18e95 = add i32 %v0_18e95, -32
  %v2_18e95 = inttoptr i32 %v1_18e95 to i32*
  %v3_18e95 = load i32, i32* %v2_18e95, align 4
  %v10_18e95 = icmp eq i32 %v3_18e95, 0
  %v1_18e99 = icmp eq i1 %v10_18e95, false
  br i1 %v1_18e99, label %dec_label_pc_18eb4, label %dec_label_pc_18e9b

dec_label_pc_18e9b:                               ; preds = %dec_label_pc_18e8d
  br label %dec_label_pc_18ed5

dec_label_pc_18eb4:                               ; preds = %dec_label_pc_18e8d
  %v1_18eb4 = add i32 %v0_18e95, -44
  %v2_18eb4 = inttoptr i32 %v1_18eb4 to i32*
  %v3_18eb4 = load i32, i32* %v2_18eb4, align 4
  store i32 %v3_18eb4, i32* @eax, align 8
  %v1_18eba = call i32 @function_30f64(i32 %v3_18eb4)
  %v0_18ec3 = load i32, i32* @ebp, align 4
  %v1_18ec3 = add i32 %v0_18ec3, -32
  %v2_18ec3 = inttoptr i32 %v1_18ec3 to i32*
  %v3_18ec3 = load i32, i32* %v2_18ec3, align 4
  %v1_18eca = add i32 %v0_18ec3, -20
  %v2_18eca = inttoptr i32 %v1_18eca to i32*
  %v3_18eca = load i32, i32* %v2_18eca, align 4
  store i32 %v3_18eca, i32* @eax, align 8
  %v3_18ed0 = call i32 @function_30f91(i32 %v3_18eca, i32 %v3_18ec3, i32 %v1_18eba)
  %v0_18ed5.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_18ed5

dec_label_pc_18ed5:                               ; preds = %dec_label_pc_18eb4, %dec_label_pc_18e9b
  %v0_18edf = phi i32 [ %v0_18ed5.pre, %dec_label_pc_18eb4 ], [ %v0_18e95, %dec_label_pc_18e9b ]
  %v1_18ed5 = add i32 %v0_18edf, -44
  %v2_18ed5 = inttoptr i32 %v1_18ed5 to i32*
  %v3_18ed5 = load i32, i32* %v2_18ed5, align 4
  ret i32 %v3_18ed5

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_30f91, { 1, 0 }
  uselistorder i32 (i32)* @function_30f64, { 3, 2, 1, 0 }
}

define i32 @function_18ef3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18ef3:
  %v0_18ef3 = load i32, i32* @ebp, align 4
  %v1_18ef3 = add i32 %v0_18ef3, -12
  %v2_18ef3 = inttoptr i32 %v1_18ef3 to i32*
  %v3_18ef3 = load i32, i32* %v2_18ef3, align 4
  %v2_18ef6 = xor i32 %v3_18ef3, 30
  ret i32 %v2_18ef6
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_18f0c:
  %v2_18f26 = load i32, i32* %arg1, align 4
  %v1_18f28 = icmp eq i32 %v2_18f26, 0
  %v1_18f2a = icmp eq i1 %v1_18f28, false
  br i1 %v1_18f2a, label %bb, label %dec_label_pc_18f2c

bb:                                               ; preds = %dec_label_pc_18f0c
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_18f2a = call i32 @function_18f50(i32 %tmp105)
  br label %dec_label_pc_18f2c

dec_label_pc_18f2c:                               ; preds = %bb, %dec_label_pc_18f0c
  %v3_18f44 = phi i32 [ %v3_18f2a, %bb ], [ %v2_18f26, %dec_label_pc_18f0c ]
  ret i32 %v3_18f44

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f50:
  %v0_18f50 = load i32, i32* @ebp, align 4
  %v1_18f50 = add i32 %v0_18f50, -28
  %v2_18f50 = inttoptr i32 %v1_18f50 to i32*
  %v3_18f50 = load i32, i32* %v2_18f50, align 4
  %v1_18f53 = inttoptr i32 %v3_18f50 to i32*
  %v2_18f53 = load i32, i32* %v1_18f53, align 4
  ret i32 %v2_18f53
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f68:
  %v1_18f82 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 0, i32* @eax, align 8
  %v2_18f97 = call i32 @function_18f9e(i32 %v1_18f82)
  ret i32 %v2_18f97
}

define i32 @function_18f9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f9e:
  %v0_18f9f = load i32, i32* @eax, align 8
  ret i32 %v0_18f9f
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18fa0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18fa3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18fbb = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_18fc1 = call i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %v1_18fbb)
  store i32 %arg1, i32* @eax, align 8
  %v1_18fcc = call i32 @function_2defe(i32 %arg1)
  store i32 %v0_18fa3, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_2defe, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19002:
  %stack_var_-169 = alloca i32, align 4
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-264, align 4
  %v2_19032 = ptrtoint i32* %stack_var_-208 to i32
  %v1_1903b = call i32 @function_36e20(i32 %v2_19032)
  %v2_19040 = ptrtoint i32* %stack_var_-200 to i32
  %v1_19049 = call i32 @function_36e62(i32 %v2_19040)
  %v1_19054 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1905b = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1905b, i32* @eax, align 8
  %v2_19064 = call i32 @function_36e96(i32 %v2_1905b, i32 %v1_19054)
  %v1_19072 = call i32 @function_36f28(i32 %arg2)
  %v4_19077 = trunc i32 %v1_19072 to i8
  %v5_19077 = icmp eq i8 %v4_19077, 0
  br i1 %v5_19077, label %dec_label_pc_19099, label %dec_label_pc_1907b

dec_label_pc_1907b:                               ; preds = %dec_label_pc_19002
  %v3_19094 = call i32 @function_36f60(i32 %arg2, i32 0, i32 1)
  br label %dec_label_pc_19099

dec_label_pc_19099:                               ; preds = %dec_label_pc_1907b, %dec_label_pc_19002
  %v2_190ac = call i32 @function_370c0(i32 %v2_19032, i32 %arg2)
  store i32 %v2_1905b, i32* @eax, align 8
  %v1_190ba = call i32 @function_36ee6(i32 %v2_1905b)
  %v2_190bf = ptrtoint i32* %stack_var_-264 to i32
  %v2_190c9 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_190c9, i32* @eax, align 8
  %v2_190d2 = call i32 @function_37140(i32 %v2_190c9, i32 %v2_190bf)
  %v2_190e1 = ptrtoint i32* %stack_var_-168 to i32
  %v2_190ea = call i32 @function_37178(i32 %v2_190e1, i32 %v2_190c9)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_190f8 = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_190f8, i32* @eax, align 8
  %v1_19100 = call i32 @function_37352(i32 %v1_190f8)
  %v2_1911d = ptrtoint i32* %stack_var_-220 to i32
  %v4_19126 = call i32 @function_37388(i32 %v2_1911d, i32 %v2_190e1, i32 %arg2, i32 %v1_19100)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_19134 = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_19134, i32* @eax, align 8
  %v1_1913c = call i32 @function_37352(i32 %v1_19134)
  %v2_19143 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_19143, i32* @eax, align 8
  %v2_19150 = call i32 @function_374bc(i32 %v2_19143, i32 %v1_1913c)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_19161 = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_19161, i32* @eax, align 8
  %v1_19169 = call i32 @function_37352(i32 %v1_19161)
  %v2_19170 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19170, i32* @eax, align 8
  %v2_1917d = call i32 @function_374bc(i32 %v2_19170, i32 %v1_19169)
  %v3_1918f = load i32, i32* %stack_var_-176, align 4
  %v3_19199 = load i32, i32* %stack_var_-180, align 4
  %v2_191a3 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v2_191a3, i32* @eax, align 8
  %v4_191ac = call i32 @function_37530(i32 %v2_191a3, i32 %v3_19199, i32 %v3_1918f, i32 %v2_190e1)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_191ba = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_191ba, i32* @eax, align 8
  %v1_191c2 = call i32 @function_37352(i32 %v1_191ba)
  %v2_191c9 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_191c9, i32* @eax, align 8
  %v2_191d6 = call i32 @function_374bc(i32 %v2_191c9, i32 %v1_191c2)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_191e7 = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_191e7, i32* @eax, align 8
  %v1_191ef = call i32 @function_37352(i32 %v1_191e7)
  %v2_191f6 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %v2_191f6, i32* @eax, align 8
  %v2_19203 = call i32 @function_37472(i32 %v2_191f6, i32 %v1_191ef)
  %v3_19215 = load i32, i32* %stack_var_-184, align 4
  %v3_1921f = load i32, i32* %stack_var_-188, align 4
  %v2_19229 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_19229, i32* @eax, align 8
  %v4_19232 = call i32 @function_37530(i32 %v2_19229, i32 %v3_1921f, i32 %v3_19215, i32 %v2_190e1)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_19240 = call i32 @function_372f6(i32 %v2_19032)
  store i32 %v1_19240, i32* @eax, align 8
  %v1_19248 = call i32 @function_3743a(i32 %v1_19240)
  store i32 %arg1, i32* @eax, align 8
  %v3_19255 = load i32, i32* %stack_var_-236, align 4
  %v3_1927d = load i32, i32* %stack_var_-252, align 4
  %v2_192a9 = ptrtoint i32* %stack_var_-169 to i32
  store i32 %v2_192a9, i32* @edx, align 8
  %v11_192b6 = call i32 @function_375a6(i32 %arg1, i32 %v2_192a9, i32 %v1_19248, i32 %v3_1927d, i32 %tmp101, i32 %tmp100, i32 %tmp99, i32 %v3_19255, i32 %tmp107, i32 %tmp105, i32 %tmp103)
  %v1_192c7 = call i32 @_ZNK5boost9function3IbRKSsS2_jEclES2_S2_j(i32 %v2_1911d)
  store i32 %v2_190e1, i32* @eax, align 8
  %v1_192d5 = call i32 @function_31fa2(i32 %v2_190e1)
  store i32 %v2_19032, i32* @eax, align 8
  %v1_192e3 = call i32 @function_31f6a(i32 %v2_19032)
  store i32 %arg1, i32* @eax, align 8
  %v1_192f8 = call i32 @function_19351()
  ret i32 %v1_192f8

; uselistorder directives
  uselistorder i32 %v2_190e1, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_37530, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_374bc, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_37352, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_372f6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_192fc() local_unnamed_addr {
dec_label_pc_192fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_192fc = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_192fc, i32* @ebx, align 4
  %v0_192fe = load i32, i32* @ebp, align 4
  %v1_192fe = add i32 %v0_192fe, -192
  store i32 %v1_192fe, i32* @eax, align 8
  %v1_19307 = call i32 @function_36ee6(i32 %v1_192fe)
  store i32 %v1_19307, i32* %eax.global-to-local, align 8
  %v0_1930c = call i32 @function_19334()
  store i32 %v0_1930c, i32* %eax.global-to-local, align 8
  ret i32 %v0_1930c

; uselistorder directives
  uselistorder i32 (i32)* @function_36ee6, { 1, 0 }
}

define i32 @function_1930e() local_unnamed_addr {
dec_label_pc_1930e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1930e = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1930e, i32* @ebx, align 4
  %v0_19310 = load i32, i32* @ebp, align 4
  %v1_19310 = add i32 %v0_19310, -216
  store i32 %v1_19310, i32* %eax.global-to-local, align 8
  %v1_19319 = call i32 @_ZNK5boost9function3IbRKSsS2_jEclES2_S2_j(i32 %v1_19310)
  store i32 %v1_19319, i32* %eax.global-to-local, align 8
  %v0_1931e = call i32 @function_19322()
  store i32 %v0_1931e, i32* %eax.global-to-local, align 8
  ret i32 %v0_1931e

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost9function3IbRKSsS2_jEclES2_S2_j, { 1, 0 }
}

define i32 @function_19320() local_unnamed_addr {
dec_label_pc_19320:
  %eax.global-to-local = alloca i32, align 4
  %v0_19320 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19320
}

define i32 @function_19322() local_unnamed_addr {
dec_label_pc_19322:
  %v0_19322 = load i32, i32* @ebp, align 4
  %v1_19322 = add i32 %v0_19322, -164
  store i32 %v1_19322, i32* @eax, align 8
  %v1_1932b = call i32 @function_31fa2(i32 %v1_19322)
  %v0_19330 = call i32 @function_19334()
  ret i32 %v0_19330

; uselistorder directives
  uselistorder i32 ()* @function_19334, { 1, 0 }
  uselistorder i32 (i32)* @function_31fa2, { 1, 0 }
}

define i32 @function_19333() local_unnamed_addr {
dec_label_pc_19333:
  %eax.global-to-local = alloca i32, align 4
  %v0_19333 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19333
}

define i32 @function_19334() local_unnamed_addr {
dec_label_pc_19334:
  %v0_19334 = load i32, i32* @ebp, align 4
  %v1_19334 = add i32 %v0_19334, -204
  store i32 %v1_19334, i32* @eax, align 8
  %v1_1933d = call i32 @function_31f6a(i32 %v1_19334)
  %v0_19342 = load i32, i32* @ebx, align 4
  ret i32 %v0_19342

; uselistorder directives
  uselistorder i32 (i32)* @function_31f6a, { 1, 0 }
}

define i32 @function_19351() local_unnamed_addr {
dec_label_pc_19351:
  %v0_19355 = load i32, i32* @eax, align 8
  ret i32 %v0_19355
}

define i32 @_ZN5boost15optional_detail13optional_baseISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19358:
  store i32 %arg1, i32* @eax, align 8
  %v1_19375 = call i32 @function_379b4(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost15optional_detail12optional_tagC1Ev() local_unnamed_addr {
dec_label_pc_1938e:
  %eax.global-to-local = alloca i32, align 4
  %v5_1938e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_1938e
}

define i32 @function_19390(i32 %arg1) local_unnamed_addr {
dec_label_pc_19390:
  %v0_19393 = load i32, i32* @ebx, align 4
  %v1_19393 = add i32 %v0_19393, 1166608453
  %v2_19393 = inttoptr i32 %v1_19393 to i8*
  %v3_19393 = load i8, i8* %v2_19393, align 1
  %v4_19393 = load i32, i32* @ecx, align 4
  %v5_19393 = trunc i32 %v4_19393 to i8
  %v6_19393 = sub i8 %v3_19393, %v5_19393
  store i8 %v6_19393, i8* %v2_19393, align 1
  %v1_193a0 = load i32, i32* @ebp, align 4
  %v2_193a0 = add i32 %v1_193a0, -12
  %v3_193a0 = inttoptr i32 %v2_193a0 to i32*
  store i32 30, i32* %v3_193a0, align 4
  %v0_193a5 = load i32, i32* @ebp, align 4
  %v1_193a5 = add i32 %v0_193a5, -12
  %v2_193a5 = inttoptr i32 %v1_193a5 to i32*
  %v3_193a5 = load i32, i32* %v2_193a5, align 4
  %v2_193a8 = xor i32 %v3_193a5, 30
  ret i32 %v2_193a8
}

define i32 @_ZN5boost8optionalISsE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_193b8:
  store i32 %arg1, i32* @eax, align 8
  %v2_193d5 = call i32 @function_37a58(i32 %arg1)
  %v4_193da = trunc i32 %v2_193d5 to i8
  %v5_193da = icmp eq i8 %v4_193da, 0
  %v1_193dc = icmp eq i1 %v5_193da, false
  br i1 %v1_193dc, label %bb, label %dec_label_pc_193de

bb:                                               ; preds = %dec_label_pc_193b8
  %v2_193dc = call i32 @function_19402()
  br label %dec_label_pc_193de

dec_label_pc_193de:                               ; preds = %bb, %dec_label_pc_193b8
  %v3_193f6 = phi i32 [ %v2_193dc, %bb ], [ %v2_193d5, %dec_label_pc_193b8 ]
  ret i32 %v3_193f6
}

define i32 @function_19402() local_unnamed_addr {
dec_label_pc_19402:
  %v0_19402 = load i32, i32* @ebp, align 4
  %v1_19402 = add i32 %v0_19402, -28
  %v2_19402 = inttoptr i32 %v1_19402 to i32*
  %v3_19402 = load i32, i32* %v2_19402, align 4
  store i32 %v3_19402, i32* @eax, align 8
  %v1_19408 = call i32 @function_37b16(i32 %v3_19402)
  store i32 %v1_19408, i32* @eax, align 8
  %v0_1940d = load i32, i32* @ebp, align 4
  %v1_1940d = add i32 %v0_1940d, -12
  %v2_1940d = inttoptr i32 %v1_1940d to i32*
  %v3_1940d = load i32, i32* %v2_1940d, align 4
  %v3_19410 = icmp eq i32 %v3_1940d, 30
  br i1 %v3_19410, label %bb, label %dec_label_pc_19419

bb:                                               ; preds = %dec_label_pc_19402
  %v1_19417 = call i32 @function_1941e()
  br label %dec_label_pc_19419

dec_label_pc_19419:                               ; preds = %bb, %dec_label_pc_19402
  %v2_19417 = phi i32 [ %v1_19417, %bb ], [ %v1_19408, %dec_label_pc_19402 ]
  ret i32 %v2_19417
}

define i32 @function_1941e() local_unnamed_addr {
dec_label_pc_1941e:
  %v0_1941f = load i32, i32* @eax, align 8
  ret i32 %v0_1941f
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE9safe_boolEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19420:
  %tmp103 = inttoptr i32 %arg2 to i8*
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v2_19441 = load i8, i8* %tmp103, align 1
  %v5_19444 = icmp eq i8 %v2_19441, 0
  br i1 %v5_19444, label %dec_label_pc_1945c, label %dec_label_pc_19448

dec_label_pc_19448:                               ; preds = %dec_label_pc_19420
  store i32 124576, i32* %arg1, align 4
  %v2_19457 = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_19457 = inttoptr i32 %v2_19457 to i32*
  store i32 0, i32* %v3_19457, align 4
  br label %dec_label_pc_1946f

dec_label_pc_1945c:                               ; preds = %dec_label_pc_19420
  store i32 0, i32* %arg1, align 4
  %v1_19468 = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19468 = inttoptr i32 %v1_19468 to i32*
  store i32 0, i32* %v2_19468, align 4
  br label %dec_label_pc_1946f

dec_label_pc_1946f:                               ; preds = %dec_label_pc_1945c, %dec_label_pc_19448
  store i32 %tmp106, i32* @eax, align 8
  %v1_1947c = call i32 @function_19483()
  ret i32 %v1_1947c

; uselistorder directives
  uselistorder i32 %tmp106, { 1, 2, 0 }
}

define i32 @function_19483() local_unnamed_addr {
dec_label_pc_19483:
  %v0_19484 = load i32, i32* @eax, align 8
  ret i32 %v0_19484
}

define i32 @_ZN5boost15program_options12basic_optionIcEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19488:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19488 = load i32, i32* %ebp.global-to-local, align 4
  %v0_1948b = load i32, i32* %ebx.global-to-local, align 4
  %v1_194ae = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_194ae = inttoptr i32 %v1_194ae to i32*
  store i32 -1, i32* %v2_194ae, align 4
  %v1_194d4 = add i32 %arg1, 32
  %v2_194d4 = inttoptr i32 %v1_194d4 to i8*
  store i8 0, i8* %v2_194d4, align 1
  %v1_194db = add i32 %arg1, 33
  %v2_194db = inttoptr i32 %v1_194db to i8*
  store i8 0, i8* %v2_194db, align 1
  store i32 %v0_1948b, i32* %ebx.global-to-local, align 4
  store i32 %v0_19488, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19522:
  store i32 %arg1, i32* @eax, align 8
  %v1_1953f = call i32 @function_37cce(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19558:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_19573 = add i32 %tmp101, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_19573 = inttoptr i32 %v1_19573 to i32*
  %v3_19573 = load i32, i32* %v2_19573, align 4
  %v2_1957b = load i32, i32* %arg1, align 4
  %v2_1957f = sub i32 %v3_19573, %v2_1957b
  %v2_19583 = sdiv i32 %v2_1957f, 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_1959b = call i32 @function_37d3a(i32 %tmp101, i32 %v2_1957b, i32 %v2_19583)
  store i32 0, i32* @eax, align 8
  %v2_195b5 = call i32 @function_195d5(i32 %tmp101)
  store i32 %v2_195b5, i32* @eax, align 8
  %v0_195b7 = call i32 @function_195d0()
  ret i32 %v0_195b7

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 2, 3, 1 }
}

define i32 @function_195ba() local_unnamed_addr {
dec_label_pc_195ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_195ba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_195ba
}

define i32 @function_195d0() local_unnamed_addr {
dec_label_pc_195d0:
  %v0_195d0 = load i32, i32* @eax, align 8
  ret i32 %v0_195d0
}

define i32 @function_195d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_195d5:
  %v0_195da = load i32, i32* @eax, align 8
  ret i32 %v0_195da
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_195dc:
  ret i32 %arg1
}

define i32 @_ZSt8_DestroyIPSsSsEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19609:
  store i32 %arg1, i32* @eax, align 8
  %v2_19639 = call i32 @function_37e40(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_19648 = call i32 @function_1964f()
  ret i32 %v1_19648

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1964f() local_unnamed_addr {
dec_label_pc_1964f:
  %v0_19650 = load i32, i32* @eax, align 8
  ret i32 %v0_19650
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19652:
  ret i32 0
}

define i32 @_ZNSaISt13_Rb_tree_nodeISsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19688:
  %v1_196a5 = call i32 @function_37f74(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_196b4 = call i32 @function_196bb()
  ret i32 %v1_196b4
}

define i32 @function_196bb() local_unnamed_addr {
dec_label_pc_196bb:
  %v0_196bc = load i32, i32* @eax, align 8
  ret i32 %v0_196bc
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_196be:
  %v10_1971d105 = icmp eq i32 %arg2, 0
  %v1_19721106 = icmp eq i1 %v10_1971d105, false
  %v5_19724108 = icmp eq i1 %v1_19721106, false
  %v1_19726109 = icmp eq i1 %v5_19724108, false
  br i1 %v1_19726109, label %dec_label_pc_196dd, label %dec_label_pc_19728

dec_label_pc_196dd:                               ; preds = %dec_label_pc_196be, %dec_label_pc_196dd
  %stack_var_-36.0110 = phi i32 [ %v2_196fd, %dec_label_pc_196dd ], [ %arg2, %dec_label_pc_196be ]
  store i32 %stack_var_-36.0110, i32* @eax, align 8
  %v1_196e3 = call i32 @function_37fd4(i32 %stack_var_-36.0110)
  %v2_196fd = call i32 @function_38004(i32 %stack_var_-36.0110, i32 %v1_196e3)
  store i32 %arg1, i32* @eax, align 8
  %v2_19712 = call i32 @function_38034(i32 %arg1, i32 %stack_var_-36.0110)
  %v10_1971d = icmp eq i32 %v2_196fd, 0
  %v1_19721 = icmp eq i1 %v10_1971d, false
  %v5_19724 = icmp eq i1 %v1_19721, false
  %v1_19726 = icmp eq i1 %v5_19724, false
  br i1 %v1_19726, label %dec_label_pc_196dd, label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %dec_label_pc_196dd, %dec_label_pc_196be
  store i32 0, i32* @eax, align 8
  %v1_19732 = call i32 @function_19739()
  ret i32 %v1_19732

; uselistorder directives
  uselistorder i32 %v2_196fd, { 1, 0 }
  uselistorder i32 %stack_var_-36.0110, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_196dd, { 1, 0 }
}

define i32 @function_19739() local_unnamed_addr {
dec_label_pc_19739:
  %v0_1973a = load i32, i32* @eax, align 8
  ret i32 %v0_1973a
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1973c:
  %v1_19756 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_19756 = inttoptr i32 %v1_19756 to i32*
  %v3_19756 = load i32, i32* %v2_19756, align 4
  store i32 %v3_19756, i32* @eax, align 8
  %v2_19763 = call i32 @function_1976a(i32 %arg1)
  ret i32 %v2_19763
}

define i32 @function_1976a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1976a:
  %v0_1976b = load i32, i32* @eax, align 8
  ret i32 %v0_1976b
}

define i32 @_ZNKSt6vectorISsSaISsEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1976c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_19786 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19786 = inttoptr i32 %v1_19786 to i32*
  %v3_19786 = load i32, i32* %v2_19786, align 4
  %v2_1978e = load i32, i32* %arg1, align 4
  %v2_19792 = sub i32 %v3_19786, %v2_1978e
  %v2_19796 = sdiv i32 %v2_19792, 4
  store i32 %v2_19796, i32* @eax, align 8
  %v2_197a3 = call i32 @function_197aa(i32 %tmp99)
  ret i32 %v2_197a3
}

define i32 @function_197aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_197aa:
  %v0_197ab = load i32, i32* @eax, align 8
  ret i32 %v0_197ab
}

define i32 @_ZNKSt12_Vector_baseISsSaISsEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_197ac:
  ret i32 %arg1
}

define i32 @_ZNSt12_Vector_baseISsSaISsEEC1EjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_197da:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp104, i32* @eax, align 8
  store i32 %arg3, i32* @edx, align 8
  %v2_1980b = call i32 @function_381ee(i32 %tmp104, i32 %arg3)
  store i32 %tmp104, i32* @eax, align 8
  %v2_1981d = call i32 @function_3824e(i32 %tmp104, i32 %arg2)
  store i32 %v2_1981d, i32* %arg1, align 4
  %v2_19831 = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_19831 = inttoptr i32 %v2_19831 to i32*
  store i32 %v2_1981d, i32* %v3_19831, align 4
  %v2_19837 = load i32, i32* %arg1, align 4
  %v2_1983c = mul i32 %arg2, 4
  %v2_1983f = add i32 %v2_19837, %v2_1983c
  %v2_19844 = add i32 %tmp104, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_19844 = inttoptr i32 %v2_19844 to i32*
  store i32 %v2_1983f, i32* %v3_19844, align 4
  store i32 0, i32* @eax, align 8
  %v1_19851 = call i32 @function_19871()
  ret i32 %v1_19851

; uselistorder directives
  uselistorder i32 %tmp104, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_19855() local_unnamed_addr {
dec_label_pc_19855:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_19855 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_19855, i32* %ebx.global-to-local, align 4
  %v0_19857 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19857 = add i32 %v0_19857, -28
  %v2_19857 = inttoptr i32 %v1_19857 to i32*
  %v3_19857 = load i32, i32* %v2_19857, align 4
  store i32 %v3_19857, i32* @eax, align 8
  %v1_1985d = call i32 @function_32cfc(i32 %v3_19857)
  %v0_19862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_19862, i32* %eax.global-to-local, align 8
  ret i32 %v0_19862
}

define i32 @function_19871() local_unnamed_addr {
dec_label_pc_19871:
  %v0_19876 = load i32, i32* @eax, align 8
  ret i32 %v0_19876
}

define i32 @_ZNKSt6vectorISsSaISsEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_19878:
  %stack_var_-20 = alloca i32, align 4
  %v2_19898 = load i32, i32* %arg2, align 4
  store i32 %v2_19898, i32* %stack_var_-20, align 4
  %v2_1989d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_198aa = call i32 @function_38344(i32 %arg1, i32 %v2_1989d)
  store i32 %arg1, i32* @eax, align 8
  %v1_198bc = call i32 @function_198c3()
  ret i32 %v1_198bc

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_198c3() local_unnamed_addr {
dec_label_pc_198c3:
  %v0_198c4 = load i32, i32* @eax, align 8
  ret i32 %v0_198c4
}

define i32 @_ZNKSt6vectorISsSaISsEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_198c8:
  %stack_var_-20 = alloca i32, align 4
  %v1_198e8 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_198e8 = inttoptr i32 %v1_198e8 to i32*
  %v3_198e8 = load i32, i32* %v2_198e8, align 4
  store i32 %v3_198e8, i32* %stack_var_-20, align 4
  %v2_198ee = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_198fb = call i32 @function_38394(i32 %arg1, i32 %v2_198ee)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEEPSsSsET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19918:
  store i32 %arg1, i32* @eax, align 8
  %v7_19955 = call i32 @function_3841e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_19955

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1996e:
  store i32 %arg1, i32* @eax, align 8
  %v1_1998b = call i32 @function_38536(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1999a = call i32 @function_199a1()
  ret i32 %v1_1999a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_199a1() local_unnamed_addr {
dec_label_pc_199a1:
  %v0_199a2 = load i32, i32* @eax, align 8
  ret i32 %v0_199a2
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_199a4:
  store i32 %arg1, i32* @eax, align 8
  %v1_199c1 = call i32 @function_384fa(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_199da:
  store i32 %arg1, i32* @eax, align 8
  %v1_199f8 = call i32 @function_38656(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_19a07 = call i32 @function_385d8(i32 %arg1, i32 %v1_199f8)
  store i32 0, i32* @eax, align 8
  %v2_19a21 = call i32 @function_19a41(i32 %arg1)
  ret i32 %v2_19a21

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_19a25() local_unnamed_addr {
dec_label_pc_19a25:
  %eax.global-to-local = alloca i32, align 4
  %v0_19a25 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19a25
}

define i32 @function_19a41(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a41:
  %v0_19a46 = load i32, i32* @eax, align 8
  ret i32 %v0_19a46
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE13_Rb_tree_implIS9_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a48:
  store i32 %arg1, i32* @eax, align 8
  %v1_19a65 = call i32 @function_38766(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a7e:
  ret i32 %arg1
}

define i32 @function_19a8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a8c:
  %eax.global-to-local = alloca i32, align 4
  %v0_19a8c = load i32, i32* @eax, align 8
  %v1_19a8c = trunc i32 %v0_19a8c to i8
  %v2_19a8c = load i1, i1* @cf, align 1
  %v3_19a8c = zext i1 %v2_19a8c to i8
  %v4_19a8c = add i8 %v3_19a8c, %v1_19a8c
  %v22_19a8c = zext i8 %v4_19a8c to i32
  %v24_19a8c = and i32 %v0_19a8c, -256
  %v25_19a8c = or i32 %v22_19a8c, %v24_19a8c
  store i32 %v25_19a8c, i32* %eax.global-to-local, align 8
  %v1_19a8e = inttoptr i32 %v25_19a8c to i8*
  %v2_19a8e = load i8, i8* %v1_19a8e, align 1
  %v5_19a8e = add i8 %v2_19a8e, %v4_19a8c
  store i8 %v5_19a8e, i8* %v1_19a8e, align 1
  %v0_19a90 = load i32, i32* %eax.global-to-local, align 8
  %v1_19a90 = load i32, i32* @ebp, align 4
  %v2_19a90 = add i32 %v1_19a90, -12
  %v3_19a90 = inttoptr i32 %v2_19a90 to i32*
  store i32 %v0_19a90, i32* %v3_19a90, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_19a95 = load i32, i32* @ebp, align 4
  %v1_19a95 = add i32 %v0_19a95, -28
  %v2_19a95 = inttoptr i32 %v1_19a95 to i32*
  %v3_19a95 = load i32, i32* %v2_19a95, align 4
  store i32 %v3_19a95, i32* @eax, align 8
  %v1_19a9b = call i32 @function_3872a(i32 %v3_19a95)
  store i32 %v1_19a9b, i32* %eax.global-to-local, align 8
  %v0_19aa0 = load i32, i32* @ebp, align 4
  %v1_19aa0 = add i32 %v0_19aa0, -12
  %v2_19aa0 = inttoptr i32 %v1_19aa0 to i32*
  %v3_19aa0 = load i32, i32* %v2_19aa0, align 4
  %v2_19aa3 = xor i32 %v3_19aa0, 30
  %v3_19aa3 = icmp eq i32 %v2_19aa3, 0
  store i32 %v2_19aa3, i32* @eax, align 8
  br i1 %v3_19aa3, label %bb, label %dec_label_pc_19aac

bb:                                               ; preds = %dec_label_pc_19a8c
  %v1_19aaa = call i32 @function_19ab1()
  store i32 %v1_19aaa, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_19aac

dec_label_pc_19aac:                               ; preds = %bb, %dec_label_pc_19a8c
  %v2_19aaa = phi i32 [ %v1_19aaa, %bb ], [ %v2_19aa3, %dec_label_pc_19a8c ]
  ret i32 %v2_19aaa
}

define i32 @function_19ab1() local_unnamed_addr {
dec_label_pc_19ab1:
  %v0_19ab2 = load i32, i32* @eax, align 8
  ret i32 %v0_19ab2
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ab4:
  store i32 %arg1, i32* @eax, align 8
  %v1_19ad2 = call i32 @function_38886(i32 %arg1)
  %v2_19ae1 = call i32 @function_38808(i32 %arg1, i32 %v1_19ad2)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNSt6vectorIxSaIxEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b22:
  store i32 %arg1, i32* @eax, align 8
  %v1_19b3f = call i32 @function_38924(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIxSaIxEE7reserveEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19b58:
  %tmp109 = ptrtoint i32* %arg1 to i32
  store i32 %tmp109, i32* @eax, align 8
  %v2_19b7b = call i32 @function_38990(i32 %tmp109)
  %v10_19b80 = icmp ult i32 %v2_19b7b, %arg2
  %v5_19b86 = icmp eq i1 %v10_19b80, false
  br i1 %v5_19b86, label %dec_label_pc_19b96, label %dec_label_pc_19b8a

dec_label_pc_19b8a:                               ; preds = %dec_label_pc_19b58
  br label %dec_label_pc_19b96

dec_label_pc_19b96:                               ; preds = %dec_label_pc_19b8a, %dec_label_pc_19b58
  store i32 %tmp109, i32* @eax, align 8
  %v2_19b9c = call i32 @function_389ce(i32 %tmp109)
  %v10_19ba1 = icmp ult i32 %v2_19b9c, %arg2
  %v5_19ba7 = icmp eq i1 %v10_19ba1, false
  br i1 %v5_19ba7, label %dec_label_pc_19c67, label %dec_label_pc_19baf

dec_label_pc_19baf:                               ; preds = %dec_label_pc_19b96
  store i32 %tmp109, i32* @eax, align 8
  %v2_19bb5 = call i32 @function_35704(i32 %tmp109)
  %v1_19bc0 = add i32 %tmp109, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19bc0 = inttoptr i32 %v1_19bc0 to i32*
  %v3_19bc0 = load i32, i32* %v2_19bc0, align 4
  %v2_19bc6 = load i32, i32* %arg1, align 4
  %v5_19bdd = call i32 @function_38a0e(i32 %tmp109, i32 %arg2, i32 %v2_19bc6, i32 %v3_19bc0)
  store i32 %tmp109, i32* @eax, align 8
  %v2_19beb = call i32 @function_35bc2(i32 %tmp109)
  store i32 %v2_19beb, i32* @eax, align 8
  %v3_19bf3 = load i32, i32* %v2_19bc0, align 4
  %v2_19bf9 = load i32, i32* %arg1, align 4
  %v4_19c06 = call i32 @function_35bef(i32 %v2_19bf9, i32 %v3_19bf3, i32 %v2_19beb)
  %v1_19c0e = add i32 %tmp109, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_19c0e = inttoptr i32 %v1_19c0e to i32*
  %v3_19c0e = load i32, i32* %v2_19c0e, align 4
  %v2_19c16 = load i32, i32* %arg1, align 4
  %v2_19c1a = sub i32 %v3_19c0e, %v2_19c16
  %v2_19c1e = ashr i32 %v2_19c1a, ptrtoint (i32* @global_var_3.2378 to i32)
  %v4_19c36 = call i32 @function_38ac8(i32 %tmp109, i32 %v2_19c16, i32 %v2_19c1e)
  store i32 %v5_19bdd, i32* %arg1, align 4
  %v2_19c46 = shl i32 %v2_19bb5, ptrtoint (i32* @global_var_3.2378 to i32)
  %v5_19c4b = add i32 %v5_19bdd, %v2_19c46
  store i32 %v5_19c4b, i32* %v2_19bc0, align 4
  %v2_19c57 = load i32, i32* %arg1, align 4
  %v2_19c5c = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_19c5f = add i32 %v2_19c57, %v2_19c5c
  store i32 %v2_19c5f, i32* %v2_19c0e, align 4
  br label %dec_label_pc_19c67

dec_label_pc_19c67:                               ; preds = %dec_label_pc_19baf, %dec_label_pc_19b96
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp109, { 0, 1, 3, 2, 4, 5, 7, 6, 9, 8, 11, 10 }
}

define i32 @_ZNSt6vectorIxSaIxEE9push_backERKx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19c7a:
  %stack_var_-20 = alloca i32, align 4
  %v1_19c9a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19c9a = inttoptr i32 %v1_19c9a to i32*
  %v3_19c9a = load i32, i32* %v2_19c9a, align 4
  %v1_19ca0 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_19ca0 = inttoptr i32 %v1_19ca0 to i32*
  %v3_19ca0 = load i32, i32* %v2_19ca0, align 4
  %v12_19ca3 = icmp eq i32 %v3_19c9a, %v3_19ca0
  br i1 %v12_19ca3, label %dec_label_pc_19cd4, label %dec_label_pc_19ca7

dec_label_pc_19ca7:                               ; preds = %dec_label_pc_19c7a
  %v3_19caa = load i32, i32* %v2_19c9a, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_19cbe = call i32 @_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(i32 %arg1, i32 %v3_19caa, i32 %arg2)
  %v3_19cc6 = load i32, i32* %v2_19c9a, align 4
  %v1_19cc9 = add i32 %v3_19cc6, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_19cc9, i32* %v2_19c9a, align 4
  br label %dec_label_pc_19d02

dec_label_pc_19cd4:                               ; preds = %dec_label_pc_19c7a
  %v2_19cd4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_19cd4, i32* @eax, align 8
  %v2_19ce1 = call i32 @function_35a8a(i32 %v2_19cd4, i32 %arg1)
  %v3_19cf0 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_19cfd = call i32 @function_38c9c(i32 %arg1, i32 %v3_19cf0, i32 %arg2)
  br label %dec_label_pc_19d02

dec_label_pc_19d02:                               ; preds = %dec_label_pc_19cd4, %dec_label_pc_19ca7
  store i32 0, i32* @eax, align 8
  %v1_19d0c = call i32 @function_19d13()
  ret i32 %v1_19d0c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @function_19d13() local_unnamed_addr {
dec_label_pc_19d13:
  %v0_19d14 = load i32, i32* @eax, align 8
  ret i32 %v0_19d14
}

define i32 @_ZNSt6vectorIxSaIxEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d16:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp121 = ptrtoint i32* %arg1 to i32
  %v15_19d39 = icmp eq i32 %tmp121, %arg2
  br i1 %v15_19d39, label %dec_label_pc_19f6a, label %dec_label_pc_19d42

dec_label_pc_19d42:                               ; preds = %dec_label_pc_19d16
  %v1_19d56 = call i32 @function_38b8c(i32 %tmp121)
  %v10_19d5b = icmp ult i32 %v1_19d56, %arg2
  %v5_19d61 = icmp eq i1 %v10_19d5b, false
  br i1 %v5_19d61, label %dec_label_pc_19e2c, label %dec_label_pc_19d69

dec_label_pc_19d69:                               ; preds = %dec_label_pc_19d42
  %v2_19d69 = ptrtoint i32* %stack_var_-64 to i32
  %v2_19d76 = call i32 @function_35f12(i32 %v2_19d69, i32 %arg2)
  %v2_19d7e = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_19d7e, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v2_19d8b = call i32 @function_35ec2(i32 %v2_19d7e, i32 %arg2)
  %v3_19d93 = load i32, i32* %stack_var_-64, align 4
  %v3_19d9a = load i32, i32* %stack_var_-68, align 4
  store i32 %tmp121, i32* @eax, align 8
  %v4_19dae = call i32 @function_3900a(i32 %tmp121, i32 %arg2, i32 %v3_19d9a, i32 %v3_19d93)
  %v1_19dc4 = add i32 %tmp121, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19dc4 = inttoptr i32 %v1_19dc4 to i32*
  %v1_19ddf = add i32 %tmp121, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_19ddf = inttoptr i32 %v1_19ddf to i32*
  %v3_19ddf = load i32, i32* %v2_19ddf, align 4
  %v2_19de7 = load i32, i32* %arg1, align 4
  %v2_19deb = sub i32 %v3_19ddf, %v2_19de7
  %v2_19def = ashr i32 %v2_19deb, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %tmp121, i32* @eax, align 8
  %v3_19e07 = call i32 @function_38c86(i32 %tmp121, i32 %v2_19de7, i32 %v2_19def)
  store i32 %v4_19dae, i32* %arg1, align 4
  %v2_19e1c = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_19e1f = add i32 %v4_19dae, %v2_19e1c
  store i32 %v2_19e1f, i32* %v2_19ddf, align 4
  br label %dec_label_pc_19f57

dec_label_pc_19e2c:                               ; preds = %dec_label_pc_19d42
  %v10_19e37 = icmp ult i32 %tmp121, %arg2
  %v1_19e3a = icmp eq i1 %v10_19e37, false
  %v5_19e3d = icmp eq i1 %v1_19e3a, false
  br i1 %v5_19e3d, label %dec_label_pc_19ee1, label %dec_label_pc_19e45

dec_label_pc_19e45:                               ; preds = %dec_label_pc_19e2c
  store i32 %tmp121, i32* @ebx, align 4
  %v2_19e52 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19e52, i32* @eax, align 8
  store i32 %tmp121, i32* @edx, align 8
  %v2_19e5f = call i32 @function_35b26(i32 %v2_19e52, i32 %tmp121)
  %v2_19e7c = ptrtoint i32* %stack_var_-56 to i32
  %v2_19e89 = call i32 @function_35f12(i32 %v2_19e7c, i32 %arg2)
  %v2_19e91 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_19e91, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v2_19e9e = call i32 @function_35ec2(i32 %v2_19e91, i32 %arg2)
  %v2_19ea6 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19ea6, i32* @eax, align 8
  %v3_19eb0 = load i32, i32* %stack_var_-56, align 4
  %v3_19eb7 = load i32, i32* %stack_var_-60, align 4
  %v4_19ec1 = call i32 @function_390c4(i32 %v2_19ea6, i32 %v3_19eb7, i32 %v3_19eb0, i32 %tmp107)
  %v0_19ec9 = load i32, i32* @ebx, align 4
  %v3_19ecd = load i32, i32* %stack_var_-44, align 4
  %v3_19ed4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_19ed4, i32* @eax, align 8
  %v3_19eda = call i32 @function_39152(i32 %v3_19ed4, i32 %v3_19ecd, i32 %v0_19ec9)
  %.pre = add i32 %tmp121, ptrtoint (i32* @global_var_4.2376 to i32)
  %.pre2 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_19f57

dec_label_pc_19ee1:                               ; preds = %dec_label_pc_19e2c
  %v2_19ee4 = load i32, i32* %arg1, align 4
  %v1_19ee9 = inttoptr i32 %arg2 to i32*
  %v2_19ee9 = load i32, i32* %v1_19ee9, align 4
  %v2_19ef6 = shl i32 %tmp121, ptrtoint (i32* @global_var_3.2378 to i32)
  %v3_19ef9 = add i32 %v2_19ee9, %v2_19ef6
  store i32 %v2_19ee9, i32* @eax, align 8
  %v3_19f0c = call i32 @function_3919a(i32 %v2_19ee9, i32 %v3_19ef9, i32 %v2_19ee4)
  %v1_19f21 = add i32 %tmp121, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19f21 = inttoptr i32 %v1_19f21 to i32*
  %v3_19f21 = load i32, i32* %v2_19f21, align 4
  %v1_19f27 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_19f27 = inttoptr i32 %v1_19f27 to i32*
  %v3_19f27 = load i32, i32* %v2_19f27, align 4
  %v2_19f2d = load i32, i32* %v1_19ee9, align 4
  %v5_19f40 = add i32 %v2_19f2d, %v2_19ef6
  store i32 %v5_19f40, i32* @eax, align 8
  %v5_19f52 = call i32 @_ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE(i32 %v5_19f40, i32 %v3_19f27, i32 %v3_19f21, i32 %tmp121, i32 %v2_19f2d)
  br label %dec_label_pc_19f57

dec_label_pc_19f57:                               ; preds = %dec_label_pc_19ee1, %dec_label_pc_19e45, %dec_label_pc_19d69
  %v3_19f67.pre-phi = phi i32* [ %v2_19f21, %dec_label_pc_19ee1 ], [ %.pre2, %dec_label_pc_19e45 ], [ %v2_19dc4, %dec_label_pc_19d69 ]
  %v2_19f5a = load i32, i32* %arg1, align 4
  %v2_19f5f = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_19f62 = add i32 %v2_19f5a, %v2_19f5f
  store i32 %v2_19f62, i32* %v3_19f67.pre-phi, align 4
  br label %dec_label_pc_19f6a

dec_label_pc_19f6a:                               ; preds = %dec_label_pc_19f57, %dec_label_pc_19d16
  store i32 %tmp121, i32* @eax, align 8
  %v1_19f77 = call i32 @function_19f7e()
  ret i32 %v1_19f77

; uselistorder directives
  uselistorder i32 %v2_19f2d, { 1, 0 }
  uselistorder i32 %v2_19ee9, { 1, 0, 2 }
  uselistorder i32 %tmp121, { 16, 2, 9, 10, 1, 11, 12, 13, 14, 4, 3, 5, 6, 8, 7, 15, 0 }
  uselistorder i32 (i32, i32)* @function_35ec2, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_35f12, { 1, 0 }
  uselistorder i32 %arg2, { 9, 10, 11, 7, 6, 8, 12, 1, 2, 4, 3, 5, 13, 0 }
  uselistorder i32* %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_19f7e() local_unnamed_addr {
dec_label_pc_19f7e:
  %v0_19f85 = load i32, i32* @eax, align 8
  ret i32 %v0_19f85
}

define i32 @_ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19f86:
  %stack_var_-20 = alloca i32, align 4
  %v1_19fb5 = icmp eq i32 %arg1, 0
  %v1_19fb7 = icmp eq i1 %v1_19fb5, false
  %v5_19fba = icmp eq i1 %v1_19fb7, false
  br i1 %v5_19fba, label %bb, label %dec_label_pc_19fbe

bb:                                               ; preds = %dec_label_pc_19f86
  %v2_19fbc = call i32 @function_1a027(i32 %arg1)
  br label %dec_label_pc_19fbe

dec_label_pc_19fbe:                               ; preds = %bb, %dec_label_pc_19f86
  %v2_19fbe = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_19fbe
}

define i32 @function_19fdf() local_unnamed_addr {
dec_label_pc_19fdf:
  %eax.global-to-local = alloca i32, align 4
  %v0_19fdf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19fdf
}

define i32 @function_19fea() local_unnamed_addr {
dec_label_pc_19fea:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_19fea = load i32, i32* %ecx.global-to-local, align 4
  %v3_19fea = add i32 %v2_19fea, 1
  %v18_19fea = inttoptr i32 %v2_19fea to i32*
  store i32 %v3_19fea, i32* %v18_19fea, align 4
  %v0_19fec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_19fec
}

define i32 @function_1a027(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a027:
  %v0_1a027 = load i32, i32* @ebp, align 4
  %v1_1a027 = add i32 %v0_1a027, -12
  %v2_1a027 = inttoptr i32 %v1_1a027 to i32*
  %v3_1a027 = load i32, i32* %v2_1a027, align 4
  %v2_1a02a = xor i32 %v3_1a027, 30
  ret i32 %v2_1a02a
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a03d:
  %edx.global-to-local = alloca i32, align 4
  %v0_1a060 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1a060, 16777216
  %v7_1a078 = sdiv i32 %sext, 16777216
  %v8_1a078 = call i32 @unknown_3957c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_1a078, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_1a078, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_1a087 = call i32 @function_1a08e()
  ret i32 %v1_1a087

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a08e() local_unnamed_addr {
dec_label_pc_1a08e:
  %v0_1a08f = load i32, i32* @eax, align 8
  ret i32 %v0_1a08f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsE9constructEPSsRKSs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a090:
  store i32 0, i32* @eax, align 8
  %v2_1a0c4 = call i32 @function_1f580(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 %arg2)
  %v1_1a0cb = icmp eq i32 %v2_1a0c4, 0
  br i1 %v1_1a0cb, label %bb, label %dec_label_pc_1a0cf

bb:                                               ; preds = %dec_label_pc_1a090
  %v1_1a0cd = call i32 @function_1a0f8()
  br label %dec_label_pc_1a0cf

dec_label_pc_1a0cf:                               ; preds = %bb, %dec_label_pc_1a090
  ret i32 %arg3
}

define i32 @function_1a0de() local_unnamed_addr {
dec_label_pc_1a0de:
  %v0_1a0de = call i32 @function_1a0f8()
  ret i32 %v0_1a0de

; uselistorder directives
  uselistorder i32 ()* @function_1a0f8, { 1, 0 }
}

define i32 @function_1a0f8() local_unnamed_addr {
dec_label_pc_1a0f8:
  %v0_1a0f8 = load i32, i32* @ebp, align 4
  %v1_1a0f8 = add i32 %v0_1a0f8, -28
  %v2_1a0f8 = inttoptr i32 %v1_1a0f8 to i32*
  %v3_1a0f8 = load i32, i32* %v2_1a0f8, align 4
  %v2_1a0fb = xor i32 %v3_1a0f8, 30
  %v3_1a0fb = icmp eq i32 %v2_1a0fb, 0
  store i32 %v2_1a0fb, i32* @eax, align 8
  br i1 %v3_1a0fb, label %bb, label %dec_label_pc_1a104

bb:                                               ; preds = %dec_label_pc_1a0f8
  %v1_1a102 = call i32 @function_1a109()
  br label %dec_label_pc_1a104

dec_label_pc_1a104:                               ; preds = %bb, %dec_label_pc_1a0f8
  %v2_1a102 = phi i32 [ %v1_1a102, %bb ], [ %v2_1a0fb, %dec_label_pc_1a0f8 ]
  ret i32 %v2_1a102
}

define i32 @function_1a109() local_unnamed_addr {
dec_label_pc_1a109:
  %v0_1a110 = load i32, i32* @eax, align 8
  ret i32 %v0_1a110
}

define i32 @_ZNSt6vectorISsSaISsEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPSsS1_EERKSs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a112:
  %stack_var_-40 = alloca i32, align 4
  %v1_1a13a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1a13a = inttoptr i32 %v1_1a13a to i32*
  %v3_1a13a = load i32, i32* %v2_1a13a, align 4
  %v1_1a140 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1a140 = inttoptr i32 %v1_1a140 to i32*
  %v3_1a140 = load i32, i32* %v2_1a140, align 4
  %v12_1a143 = icmp eq i32 %v3_1a13a, %v3_1a140
  br i1 %v12_1a143, label %bb, label %dec_label_pc_1a14b

bb:                                               ; preds = %dec_label_pc_1a112
  %v4_1a145 = call i32 @function_1a1e7(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1a14b

dec_label_pc_1a14b:                               ; preds = %bb, %dec_label_pc_1a112
  %v3_1a14e = load i32, i32* %v2_1a13a, align 4
  %v1_1a151 = add i32 %v3_1a14e, -4
  %v3_1a168 = call i32 @function_341a2(i32 %arg1, i32 %v3_1a14e, i32 %v1_1a151)
  %v3_1a170 = load i32, i32* %v2_1a13a, align 4
  %v1_1a173 = add i32 %v3_1a170, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1a173, i32* %v2_1a13a, align 4
  %v2_1a183 = ptrtoint i32* %stack_var_-40 to i32
  ret i32 %v2_1a183

; uselistorder directives
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
}

define i32 @function_1a1e2() local_unnamed_addr {
dec_label_pc_1a1e2:
  %v0_1a1e2 = call i32 @function_1a3f7()
  ret i32 %v0_1a1e2
}

define i32 @function_1a1e7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a1e7:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1a1f7 = load i32, i32* @ebp, align 4
  %v1_1a1f7 = add i32 %v0_1a1f7, -44
  %v2_1a1f7 = inttoptr i32 %v1_1a1f7 to i32*
  %v3_1a1f7 = load i32, i32* %v2_1a1f7, align 4
  store i32 %v3_1a1f7, i32* @eax, align 8
  %v4_1a1fd = call i32 @function_39770(i32 %v3_1a1f7, i32 1, i32 ptrtoint ([22 x i8]* @global_var_5fd2.2515 to i32))
  %v1_1a202 = load i32, i32* @ebp, align 4
  %v2_1a202 = add i32 %v1_1a202, -24
  %v3_1a202 = inttoptr i32 %v2_1a202 to i32*
  store i32 %v4_1a1fd, i32* %v3_1a202, align 4
  %v0_1a205 = load i32, i32* @ebp, align 4
  %v1_1a205 = add i32 %v0_1a205, -32
  store i32 %v1_1a205, i32* @eax, align 8
  %v1_1a208 = add i32 %v0_1a205, -44
  %v2_1a208 = inttoptr i32 %v1_1a208 to i32*
  %v3_1a208 = load i32, i32* %v2_1a208, align 4
  %v2_1a212 = call i32 @function_39842(i32 %v1_1a205, i32 %v3_1a208)
  %v0_1a21a = load i32, i32* @ebp, align 4
  %v1_1a21a = add i32 %v0_1a21a, -32
  %v1_1a221 = add i32 %v0_1a21a, -48
  %v2_1a227 = call i32 @unknown_39889(i32 %v1_1a221, i32 %v1_1a21a)
  %v1_1a22c = load i32, i32* @ebp, align 4
  %v2_1a22c = add i32 %v1_1a22c, -20
  %v3_1a22c = inttoptr i32 %v2_1a22c to i32*
  store i32 %v2_1a227, i32* %v3_1a22c, align 4
  %v0_1a22f = load i32, i32* @ebp, align 4
  %v1_1a22f = add i32 %v0_1a22f, -44
  %v2_1a22f = inttoptr i32 %v1_1a22f to i32*
  %v3_1a22f = load i32, i32* %v2_1a22f, align 4
  store i32 %v3_1a22f, i32* @eax, align 8
  %v1_1a232 = add i32 %v0_1a22f, -24
  %v2_1a232 = inttoptr i32 %v1_1a232 to i32*
  %v3_1a232 = load i32, i32* %v2_1a232, align 4
  %v2_1a23c = call i32 @function_38b86(i32 %v3_1a22f, i32 %v3_1a232)
  %v1_1a241 = load i32, i32* @ebp, align 4
  %v2_1a241 = add i32 %v1_1a241, -16
  %v3_1a241 = inttoptr i32 %v2_1a241 to i32*
  store i32 %v2_1a23c, i32* %v3_1a241, align 4
  %v0_1a244 = load i32, i32* @ebp, align 4
  %v1_1a244 = add i32 %v0_1a244, -16
  %v2_1a244 = inttoptr i32 %v1_1a244 to i32*
  %v3_1a244 = load i32, i32* %v2_1a244, align 4
  %v2_1a247 = add i32 %v0_1a244, -28
  %v3_1a247 = inttoptr i32 %v2_1a247 to i32*
  store i32 %v3_1a244, i32* %v3_1a247, align 4
  %v0_1a24a = load i32, i32* @ebp, align 4
  %v1_1a24a = add i32 %v0_1a24a, -20
  %v2_1a24a = inttoptr i32 %v1_1a24a to i32*
  %v3_1a24a = load i32, i32* %v2_1a24a, align 4
  %v2_1a24d = mul i32 %v3_1a24a, 4
  %v2_1a252 = add i32 %v0_1a24a, -16
  %v3_1a252 = inttoptr i32 %v2_1a252 to i32*
  %v4_1a252 = load i32, i32* %v3_1a252, align 4
  %v5_1a252 = add i32 %v4_1a252, %v2_1a24d
  %v1_1a255 = add i32 %v0_1a24a, -44
  %v2_1a255 = inttoptr i32 %v1_1a255 to i32*
  %v3_1a255 = load i32, i32* %v2_1a255, align 4
  %v1_1a258 = add i32 %v0_1a24a, -52
  %v2_1a258 = inttoptr i32 %v1_1a258 to i32*
  %v3_1a258 = load i32, i32* %v2_1a258, align 4
  %v3_1a266 = call i32 @function_341a2(i32 %v3_1a255, i32 %v5_1a252, i32 %v3_1a258)
  %v0_1a26b = load i32, i32* @ebp, align 4
  %v1_1a26b = add i32 %v0_1a26b, -28
  %v2_1a26b = inttoptr i32 %v1_1a26b to i32*
  store i32 0, i32* %v2_1a26b, align 4
  %v0_1a272 = load i32, i32* @ebp, align 4
  %v1_1a272 = add i32 %v0_1a272, -44
  %v2_1a272 = inttoptr i32 %v1_1a272 to i32*
  %v3_1a272 = load i32, i32* %v2_1a272, align 4
  %v1_1a278 = call i32 @function_336ee(i32 %v3_1a272)
  store i32 %v1_1a278, i32* %ebx.global-to-local, align 4
  %v0_1a27f = load i32, i32* @ebp, align 4
  %v1_1a27f = add i32 %v0_1a27f, -48
  %v1_1a285 = call i32 @unknown_396ac(i32 %v1_1a27f)
  %v1_1a28a = inttoptr i32 %v1_1a285 to i32*
  %v2_1a28a = load i32, i32* %v1_1a28a, align 4
  %v0_1a28c = load i32, i32* @ebp, align 4
  %v1_1a28c = add i32 %v0_1a28c, -44
  %v2_1a28c = inttoptr i32 %v1_1a28c to i32*
  %v3_1a28c = load i32, i32* %v2_1a28c, align 4
  %v1_1a28f = inttoptr i32 %v3_1a28c to i32*
  %v2_1a28f = load i32, i32* %v1_1a28f, align 4
  store i32 %v2_1a28f, i32* @eax, align 8
  %v0_1a291 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a295 = add i32 %v0_1a28c, -16
  %v2_1a295 = inttoptr i32 %v1_1a295 to i32*
  %v3_1a295 = load i32, i32* %v2_1a295, align 4
  %v5_1a2a3 = call i32 @function_398e3(i32 %v2_1a28f, i32 %v2_1a28a, i32 %v3_1a295, i32 %v0_1a291)
  %v1_1a2a8 = load i32, i32* @ebp, align 4
  %v2_1a2a8 = add i32 %v1_1a2a8, -28
  %v3_1a2a8 = inttoptr i32 %v2_1a2a8 to i32*
  store i32 %v5_1a2a3, i32* %v3_1a2a8, align 4
  %v0_1a2ab = load i32, i32* @ebp, align 4
  %v1_1a2ab = add i32 %v0_1a2ab, -28
  %v2_1a2ab = inttoptr i32 %v1_1a2ab to i32*
  %v3_1a2ab = load i32, i32* %v2_1a2ab, align 4
  %v4_1a2ab = add i32 %v3_1a2ab, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v4_1a2ab, i32* %v2_1a2ab, align 4
  %v0_1a2af = load i32, i32* @ebp, align 4
  %v1_1a2af = add i32 %v0_1a2af, -44
  %v2_1a2af = inttoptr i32 %v1_1a2af to i32*
  %v3_1a2af = load i32, i32* %v2_1a2af, align 4
  %v1_1a2b5 = call i32 @function_336ee(i32 %v3_1a2af)
  store i32 %v1_1a2b5, i32* %ebx.global-to-local, align 4
  %v0_1a2bc = load i32, i32* @ebp, align 4
  %v1_1a2bc = add i32 %v0_1a2bc, -44
  %v2_1a2bc = inttoptr i32 %v1_1a2bc to i32*
  %v3_1a2bc = load i32, i32* %v2_1a2bc, align 4
  %v1_1a2bf = add i32 %v3_1a2bc, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1a2bf = inttoptr i32 %v1_1a2bf to i32*
  %v3_1a2bf = load i32, i32* %v2_1a2bf, align 4
  store i32 %v3_1a2bf, i32* %esi.global-to-local, align 4
  %v1_1a2c2 = add i32 %v0_1a2bc, -48
  %v1_1a2c8 = call i32 @unknown_396ac(i32 %v1_1a2c2)
  %v1_1a2cd = inttoptr i32 %v1_1a2c8 to i32*
  %v2_1a2cd = load i32, i32* %v1_1a2cd, align 4
  store i32 %v2_1a2cd, i32* @eax, align 8
  %v0_1a2cf = load i32, i32* %ebx.global-to-local, align 4
  %v0_1a2d3 = load i32, i32* @ebp, align 4
  %v1_1a2d3 = add i32 %v0_1a2d3, -28
  %v2_1a2d3 = inttoptr i32 %v1_1a2d3 to i32*
  %v3_1a2d3 = load i32, i32* %v2_1a2d3, align 4
  %v0_1a2da = load i32, i32* %esi.global-to-local, align 4
  %v5_1a2e1 = call i32 @function_398e3(i32 %v2_1a2cd, i32 %v0_1a2da, i32 %v3_1a2d3, i32 %v0_1a2cf)
  %v1_1a2e6 = load i32, i32* @ebp, align 4
  %v2_1a2e6 = add i32 %v1_1a2e6, -28
  %v3_1a2e6 = inttoptr i32 %v2_1a2e6 to i32*
  store i32 %v5_1a2e1, i32* %v3_1a2e6, align 4
  %v0_1a2e9 = load i32, i32* @ebp, align 4
  %v1_1a2e9 = add i32 %v0_1a2e9, -44
  %v2_1a2e9 = inttoptr i32 %v1_1a2e9 to i32*
  %v3_1a2e9 = load i32, i32* %v2_1a2e9, align 4
  %v1_1a2ef = call i32 @function_336ee(i32 %v3_1a2e9)
  %v0_1a2f4 = load i32, i32* @ebp, align 4
  %v1_1a2f4 = add i32 %v0_1a2f4, -44
  %v2_1a2f4 = inttoptr i32 %v1_1a2f4 to i32*
  %v3_1a30f = load i32, i32* %v2_1a2f4, align 4
  %v1_1a312 = add i32 %v3_1a30f, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1a312 = inttoptr i32 %v1_1a312 to i32*
  %v3_1a312 = load i32, i32* %v2_1a312, align 4
  %v1_1a31a = inttoptr i32 %v3_1a30f to i32*
  %v2_1a31a = load i32, i32* %v1_1a31a, align 4
  %v2_1a31e = sub i32 %v3_1a312, %v2_1a31a
  %v2_1a322 = sdiv i32 %v2_1a31e, 4
  %v3_1a327 = load i32, i32* %v2_1a2f4, align 4
  %v1_1a32a = inttoptr i32 %v3_1a327 to i32*
  %v2_1a32a = load i32, i32* %v1_1a32a, align 4
  %v3_1a33a = call i32 @unknown_388f4(i32 %v3_1a327, i32 %v2_1a32a, i32 %v2_1a322)
  %v0_1a33f = load i32, i32* @ebp, align 4
  %v1_1a33f = add i32 %v0_1a33f, -44
  %v2_1a33f = inttoptr i32 %v1_1a33f to i32*
  %v3_1a33f = load i32, i32* %v2_1a33f, align 4
  %v1_1a342 = add i32 %v0_1a33f, -16
  %v2_1a342 = inttoptr i32 %v1_1a342 to i32*
  %v3_1a342 = load i32, i32* %v2_1a342, align 4
  %v2_1a345 = inttoptr i32 %v3_1a33f to i32*
  store i32 %v3_1a342, i32* %v2_1a345, align 4
  %v0_1a347 = load i32, i32* @ebp, align 4
  %v1_1a347 = add i32 %v0_1a347, -44
  %v2_1a347 = inttoptr i32 %v1_1a347 to i32*
  %v3_1a347 = load i32, i32* %v2_1a347, align 4
  %v1_1a34a = add i32 %v0_1a347, -28
  %v2_1a34a = inttoptr i32 %v1_1a34a to i32*
  %v3_1a34a = load i32, i32* %v2_1a34a, align 4
  %v2_1a34d = add i32 %v3_1a347, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1a34d = inttoptr i32 %v2_1a34d to i32*
  store i32 %v3_1a34a, i32* %v3_1a34d, align 4
  %v0_1a350 = load i32, i32* @ebp, align 4
  %v1_1a350 = add i32 %v0_1a350, -24
  %v2_1a350 = inttoptr i32 %v1_1a350 to i32*
  %v3_1a350 = load i32, i32* %v2_1a350, align 4
  %v2_1a353 = mul i32 %v3_1a350, 4
  %v2_1a358 = add i32 %v0_1a350, -16
  %v3_1a358 = inttoptr i32 %v2_1a358 to i32*
  %v4_1a358 = load i32, i32* %v3_1a358, align 4
  %v5_1a358 = add i32 %v4_1a358, %v2_1a353
  %v1_1a35b = add i32 %v0_1a350, -44
  %v2_1a35b = inttoptr i32 %v1_1a35b to i32*
  %v3_1a35b = load i32, i32* %v2_1a35b, align 4
  %v2_1a35e = add i32 %v3_1a35b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1a35e = inttoptr i32 %v2_1a35e to i32*
  store i32 %v5_1a358, i32* %v3_1a35e, align 4
  %v0_1a361 = call i32 @function_1a3f7()
  ret i32 %v0_1a361

; uselistorder directives
  uselistorder i32 %v0_1a24a, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_398e3, { 1, 0 }
  uselistorder i32 (i32)* @unknown_396ac, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_341a2, { 1, 0 }
}

define i32 @function_1a367() local_unnamed_addr {
dec_label_pc_1a367:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a367 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a367
}

define i32 @function_1a37e() local_unnamed_addr {
dec_label_pc_1a37e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a37e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a37e
}

define i32 @function_1a38e() local_unnamed_addr {
dec_label_pc_1a38e:
  %v0_1a396 = load i32, i32* @ebp, align 4
  %v1_1a396 = add i32 %v0_1a396, -28
  %v2_1a396 = inttoptr i32 %v1_1a396 to i32*
  %v3_1a396 = load i32, i32* %v2_1a396, align 4
  %v10_1a396 = icmp eq i32 %v3_1a396, 0
  %v1_1a39a = icmp eq i1 %v10_1a396, false
  br i1 %v1_1a39a, label %dec_label_pc_1a3b8, label %dec_label_pc_1a39c

dec_label_pc_1a39c:                               ; preds = %dec_label_pc_1a38e
  %v1_1a39c = add i32 %v0_1a396, -20
  %v2_1a39c = inttoptr i32 %v1_1a39c to i32*
  %v3_1a39c = load i32, i32* %v2_1a39c, align 4
  %v2_1a39f = mul i32 %v3_1a39c, 4
  %v2_1a3a4 = add i32 %v0_1a396, -16
  %v3_1a3a4 = inttoptr i32 %v2_1a3a4 to i32*
  %v4_1a3a4 = load i32, i32* %v3_1a3a4, align 4
  %v5_1a3a4 = add i32 %v4_1a3a4, %v2_1a39f
  %v1_1a3a7 = add i32 %v0_1a396, -44
  %v2_1a3a7 = inttoptr i32 %v1_1a3a7 to i32*
  %v3_1a3a7 = load i32, i32* %v2_1a3a7, align 4
  store i32 %v3_1a3a7, i32* @eax, align 8
  %v2_1a3b1 = call i32 @_ZTSN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE(i32 %v3_1a3a7, i32 %v5_1a3a4)
  br label %dec_label_pc_1a3d9

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a38e
  %v1_1a3b8 = add i32 %v0_1a396, -44
  %v2_1a3b8 = inttoptr i32 %v1_1a3b8 to i32*
  %v3_1a3b8 = load i32, i32* %v2_1a3b8, align 4
  %v1_1a3be = call i32 @function_336ee(i32 %v3_1a3b8)
  br label %dec_label_pc_1a3d9

dec_label_pc_1a3d9:                               ; preds = %dec_label_pc_1a3b8, %dec_label_pc_1a39c
  %v0_1a3e3 = load i32, i32* @ebp, align 4
  %v1_1a3d9 = add i32 %v0_1a3e3, -44
  %v2_1a3d9 = inttoptr i32 %v1_1a3d9 to i32*
  %v3_1a3d9 = load i32, i32* %v2_1a3d9, align 4
  %v1_1a3dc = add i32 %v0_1a3e3, -24
  %v2_1a3dc = inttoptr i32 %v1_1a3dc to i32*
  %v3_1a3dc = load i32, i32* %v2_1a3dc, align 4
  %v1_1a3e3 = add i32 %v0_1a3e3, -16
  %v2_1a3e3 = inttoptr i32 %v1_1a3e3 to i32*
  %v3_1a3e3 = load i32, i32* %v2_1a3e3, align 4
  %v3_1a3ed = call i32 @unknown_388f4(i32 %v3_1a3d9, i32 %v3_1a3e3, i32 %v3_1a3dc)
  ret i32 %v3_1a3ed

; uselistorder directives
  uselistorder i32 %v0_1a3e3, { 2, 0, 1 }
  uselistorder i32 %v0_1a396, { 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_388f4, { 1, 0 }
  uselistorder i32 (i32)* @function_336ee, { 3, 2, 1, 0 }
}

define i32 @function_1a3f7() local_unnamed_addr {
dec_label_pc_1a3f7:
  %v0_1a3f7 = load i32, i32* @ebp, align 4
  %v1_1a3f7 = add i32 %v0_1a3f7, -12
  %v2_1a3f7 = inttoptr i32 %v1_1a3f7 to i32*
  %v3_1a3f7 = load i32, i32* %v2_1a3f7, align 4
  %v2_1a3fa = xor i32 %v3_1a3f7, 30
  %v1_1a40d = inttoptr i32 %v0_1a3f7 to i32*
  %v2_1a40d = load i32, i32* %v1_1a40d, align 4
  store i32 %v2_1a40d, i32* @ebp, align 4
  ret i32 %v2_1a3fa
}

define i32 @_ZNSt6vectorISsSaISsEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a410:
  %v1_1a430 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %arg1, i32* @eax, align 8
  %v2_1a43d = call i32 @function_39c7a(i32 %arg1, i32 %v1_1a430)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN9__gnu_cxxmiIPcSsEENS_17__normal_iteratorIT_T0_E15difference_typeERKS5_S8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a45a:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1a45a = load i32, i32* %ebp.global-to-local, align 4
  %v0_1a45d = load i32, i32* %ebx.global-to-local, align 4
  %v2_1a483 = load i32, i32* %arg1, align 4
  store i32 %v2_1a483, i32* %ebx.global-to-local, align 4
  %v1_1a492 = inttoptr i32 %arg2 to i32*
  %v2_1a492 = load i32, i32* %v1_1a492, align 4
  %v2_1a496 = sub i32 %v2_1a483, %v2_1a492
  store i32 %v0_1a45d, i32* %ebx.global-to-local, align 4
  store i32 %v0_1a45a, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1a496
}

define i32 @_ZN5boost9addressofIKSsEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4b1:
  %stack_var_-20 = alloca i32, align 4
  %v2_1a4cf = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1a4cf, i32* @eax, align 8
  %v2_1a4d5 = call i32 @function_39d55(i32 %v2_1a4cf, i32 %arg1)
  store i32 %v2_1a4cf, i32* @eax, align 8
  %v1_1a4e0 = call i32 @function_39d8d(i32 %v2_1a4cf)
  store i32 %v1_1a4e0, i32* @eax, align 8
  %v2_1a4f0 = call i32 @function_39dbc(i32 %v1_1a4e0, i32 0)
  store i32 %v2_1a4f0, i32* @eax, align 8
  %v1_1a4ff = call i32 @function_1a506()
  ret i32 %v1_1a4ff
}

define i32 @function_1a506() local_unnamed_addr {
dec_label_pc_1a506:
  %v0_1a507 = load i32, i32* @eax, align 8
  ret i32 %v0_1a507
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPKSsEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a508:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1a52b = call i32 @function_330dc(i32 %tmp102)
  %v1_1a533 = inttoptr i32 %arg2 to i32*
  %v2_1a533 = load i32, i32* %v1_1a533, align 4
  store i32 %v2_1a533, i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPKSsN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SA_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a54d:
  ret i32 %arg1
}

define i32 @_ZN5boost15foreach_detail_7derefofIKSsEERT_PS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a57a:
  ret i32 %arg1
}

define i32 @_ZN5boost17range_adl_barrier5beginISsEENS_14range_iteratorIKT_E4typeERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a5a7:
  store i32 %arg1, i32* @eax, align 8
  %v2_1a5d1 = call i32 @function_39ee5(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1a5e6 = call i32 @function_1a5ed()
  ret i32 %v1_1a5e6

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1a5ed() local_unnamed_addr {
dec_label_pc_1a5ed:
  %v0_1a5ee = load i32, i32* @eax, align 8
  ret i32 %v0_1a5ee
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPKcSsEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a5f2:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1a5f2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a620 = inttoptr i32 %arg2 to i32*
  %v2_1a620 = load i32, i32* %v1_1a620, align 4
  store i32 %v2_1a620, i32* %arg1, align 4
  store i32 %v0_1a5f2, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost17range_adl_barrier3endISsEENS_14range_iteratorIKT_E4typeERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a637:
  %v2_1a661 = call i32 @function_39fbf(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1a676 = call i32 @function_1a67d()
  ret i32 %v1_1a676

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a67d() local_unnamed_addr {
dec_label_pc_1a67d:
  %v0_1a67e = load i32, i32* @eax, align 8
  ret i32 %v0_1a67e
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPKcSsEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a681:
  ret i32 %arg1
}

define i32 @_ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6ae:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1a6b1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1a6d2 = call i32 @function_3257c(i32 %arg1)
  %v1_1a6d7 = inttoptr i32 %v1_1a6d2 to i32*
  %v2_1a6d7 = load i32, i32* %v1_1a6d7, align 4
  store i32 %v2_1a6d7, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1a6df = call i32 @function_3257c(i32 %arg2)
  %v1_1a6e4 = inttoptr i32 %v1_1a6df to i32*
  %v2_1a6e4 = load i32, i32* %v1_1a6e4, align 4
  %v12_1a6e6 = icmp eq i32 %v2_1a6d7, %v2_1a6e4
  %v1_1a6e8 = zext i1 %v12_1a6e6 to i32
  %v3_1a6e8 = and i32 %v2_1a6e4, -256
  %v4_1a6e8 = or i32 %v1_1a6e8, %v3_1a6e8
  store i32 %v0_1a6b1, i32* %ebx.global-to-local, align 4
  ret i32 %v4_1a6e8

; uselistorder directives
  uselistorder i32 %v2_1a6e4, { 1, 0 }
  uselistorder i32 (i32)* @function_3257c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a702:
  %v1_1a722 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %arg1, i32* @eax, align 8
  %v2_1a72f = call i32 @function_3a0d4(i32 %arg1, i32 %v1_1a722)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a74c:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 8
  %v1_1a776 = call i32 @function_3a186(i32 %arg2)
  store i32 %v1_1a776, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1a783 = call i32 @function_3a156(i32 %arg2)
  %v2_1a788 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1a792 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v5_1a7a4 = call i32 @function_3a1b6(i32 %v2_1a788, i32 %arg2, i32 %v1_1a783, i32 %v0_1a792, i32 %arg3)
  %v2_1a7ac = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1a788, i32* @eax, align 8
  %v3_1a7ce = call i32 @function_34f84(i32 %v2_1a788, i32 %v2_1a7ac, i32 %arg2)
  %v4_1a7d3 = trunc i32 %v3_1a7ce to i8
  %v5_1a7d3 = icmp eq i8 %v4_1a7d3, 0
  %v1_1a7d5 = icmp eq i1 %v5_1a7d3, false
  br i1 %v1_1a7d5, label %dec_label_pc_1a7fe, label %dec_label_pc_1a7d7

dec_label_pc_1a7d7:                               ; preds = %dec_label_pc_1a74c
  %v3_1a7d7 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1a7d7, i32* @eax, align 8
  %v1_1a7dd = call i32 @function_3a26a(i32 %v3_1a7d7)
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg3, i32* @edx, align 8
  %v3_1a7f5 = call i32 @function_35098(i32 %arg2, i32 %arg3, i32 %v1_1a7dd)
  %v4_1a7fa = trunc i32 %v3_1a7f5 to i8
  %v5_1a7fa = icmp eq i8 %v4_1a7fa, 0
  br i1 %v5_1a7fa, label %dec_label_pc_1a815, label %dec_label_pc_1a7fe

dec_label_pc_1a7fe:                               ; preds = %dec_label_pc_1a7d7, %dec_label_pc_1a74c
  br label %dec_label_pc_1a81d

dec_label_pc_1a815:                               ; preds = %dec_label_pc_1a7d7
  %v3_1a818 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1a818, i32* %arg1, align 4
  br label %dec_label_pc_1a81d

dec_label_pc_1a81d:                               ; preds = %dec_label_pc_1a815, %dec_label_pc_1a7fe
  store i32 %tmp114, i32* @eax, align 8
  %v1_1a82a = call i32 @function_1a831()
  ret i32 %v1_1a82a

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 4, 3, 8, 7, 6, 5 }
}

define i32 @function_1a831() local_unnamed_addr {
dec_label_pc_1a831:
  %v0_1a835 = load i32, i32* @eax, align 8
  ret i32 %v0_1a835
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a838:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1a838 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1a858 = load i32, i32* %arg1, align 4
  %v1_1a85d = inttoptr i32 %arg2 to i32*
  %v2_1a85d = load i32, i32* %v1_1a85d, align 4
  %v12_1a85f = icmp eq i32 %v2_1a858, %v2_1a85d
  %v1_1a861 = zext i1 %v12_1a85f to i32
  %v3_1a861 = and i32 %v2_1a85d, -256
  %v4_1a861 = or i32 %v1_1a861, %v3_1a861
  store i32 %v0_1a838, i32* %ebp.global-to-local, align 4
  ret i32 %v4_1a861

; uselistorder directives
  uselistorder i32 %v2_1a85d, { 1, 0 }
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE11lower_boundERS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a878:
  %v3_1a8af = call i32 @function_3a3da(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %arg1
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a8d0:
  store i32 %arg1, i32* @eax, align 8
  %v2_1a8fa = call i32 @function_3a4ae(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a91a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1a934 = load i32, i32* %arg1, align 4
  %v1_1a936 = add i32 %v2_1a934, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_1a936, i32* @eax, align 8
  %v2_1a943 = call i32 @function_1a94a(i32 %tmp99)
  ret i32 %v2_1a943
}

define i32 @function_1a94a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a94a:
  %v0_1a94b = load i32, i32* @eax, align 8
  ret i32 %v0_1a94b
}

define i32 @_ZNKSt4lessISsEclERKSsS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a94c:
  store i32 %arg2, i32* @eax, align 8
  %v3_1a98b = call i32 @function_1a992(i32 %arg2, i32 %arg3)
  ret i32 %v3_1a98b
}

define i32 @function_1a992(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a992:
  %v0_1a993 = load i32, i32* @eax, align 8
  ret i32 %v0_1a993
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a994:
  %v2_1a9be = call i32 @function_3a5a8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1a9d3 = call i32 @function_1a9da()
  ret i32 %v1_1a9d3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a9da() local_unnamed_addr {
dec_label_pc_1a9da:
  %v0_1a9db = load i32, i32* @eax, align 8
  ret i32 %v0_1a9db
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a9de:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_1a9fe = load i32, i32* %arg1, align 4
  %v1_1aa03 = inttoptr i32 %arg2 to i32*
  %v2_1aa03 = load i32, i32* %v1_1aa03, align 4
  %v12_1aa05 = icmp eq i32 %v2_1a9fe, %v2_1aa03
  %v1_1aa07 = zext i1 %v12_1aa05 to i32
  %v3_1aa07 = and i32 %v2_1aa03, -256
  %v4_1aa07 = or i32 %v1_1aa07, %v3_1aa07
  store i32 %v4_1aa07, i32* @eax, align 8
  %v3_1aa14 = call i32 @function_1aa1b(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1aa14

; uselistorder directives
  uselistorder i32 %v2_1aa03, { 1, 0 }
}

define i32 @function_1aa1b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa1b:
  %v0_1aa1c = load i32, i32* @eax, align 8
  ret i32 %v0_1aa1c
}

define i32 @_ZNSt4pairIKSsSsEC1ERS0_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1aa1e:
  ret i32 %arg3
}

define i32 @function_1aa69() local_unnamed_addr {
dec_label_pc_1aa69:
  %v0_1aa69 = call i32 @function_1aa82()
  ret i32 %v0_1aa69
}

define i32 @function_1aa6c() local_unnamed_addr {
dec_label_pc_1aa6c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa6c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aa6c
}

define i32 @function_1aa82() local_unnamed_addr {
dec_label_pc_1aa82:
  %v0_1aa82 = load i32, i32* @ebp, align 4
  %v1_1aa82 = add i32 %v0_1aa82, -12
  %v2_1aa82 = inttoptr i32 %v1_1aa82 to i32*
  %v3_1aa82 = load i32, i32* %v2_1aa82, align 4
  %v2_1aa85 = xor i32 %v3_1aa82, 30
  %v3_1aa85 = icmp eq i32 %v2_1aa85, 0
  store i32 %v2_1aa85, i32* @eax, align 8
  br i1 %v3_1aa85, label %bb, label %dec_label_pc_1aa8e

bb:                                               ; preds = %dec_label_pc_1aa82
  %v1_1aa8c = call i32 @function_1aa93()
  br label %dec_label_pc_1aa8e

dec_label_pc_1aa8e:                               ; preds = %bb, %dec_label_pc_1aa82
  %v2_1aa8c = phi i32 [ %v1_1aa8c, %bb ], [ %v2_1aa85, %dec_label_pc_1aa82 ]
  ret i32 %v2_1aa8c
}

define i32 @function_1aa93() local_unnamed_addr {
dec_label_pc_1aa93:
  %v0_1aa98 = load i32, i32* @eax, align 8
  ret i32 %v0_1aa98
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1aa9a:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_1aac6 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1aaca = ptrtoint i32* %stack_var_-20 to i32
  %v2_1aad0 = call i32 @function_3a6f8(i32 %v2_1aaca, i32 %v4_1aac6)
  store i32 %arg1, i32* @eax, align 8
  %v3_1aae2 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1aae2, i32* @ecx, align 4
  %v4_1aaf0 = call i32 @function_3a732(i32 %arg1, i32 %arg2, i32 %v3_1aae2, i32 %arg4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab10:
  %v1_1ab2e = call i32 @unknown_3978c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_1ab3d = call i32 @function_3970e(i32 %arg1, i32 %v1_1ab2e)
  %v1_1ab48 = call i32 @unknown_3abf4(i32 %arg1)
  %v1_1ab55 = call i32 @unknown_3abc4(i32 %arg1)
  %v2_1ab5a = inttoptr i32 %v1_1ab48 to i32*
  store i32 %v1_1ab55, i32* %v2_1ab5a, align 4
  %v1_1ab62 = call i32 @unknown_3ac24(i32 %arg1)
  %v1_1ab67 = inttoptr i32 %v1_1ab62 to i32*
  store i32 0, i32* %v1_1ab67, align 4
  %v1_1ab73 = call i32 @unknown_3ac54(i32 %arg1)
  %v1_1ab80 = call i32 @unknown_3abc4(i32 %arg1)
  %v2_1ab85 = inttoptr i32 %v1_1ab73 to i32*
  store i32 %v1_1ab80, i32* %v2_1ab85, align 4
  %v1_1ab8a = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1ab8a = inttoptr i32 %v1_1ab8a to i32*
  store i32 0, i32* %v2_1ab8a, align 4
  store i32 0, i32* @eax, align 8
  %v1_1ab9b = call i32 @function_1aba2()
  ret i32 %v1_1ab9b

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3abc4, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1aba2() local_unnamed_addr {
dec_label_pc_1aba2:
  %v0_1aba7 = load i32, i32* @eax, align 8
  ret i32 %v0_1aba7
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aba8:
  store i32 %arg1, i32* @eax, align 8
  %v1_1abc6 = call i32 @function_3997a(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_1abd5 = call i32 @function_398fc(i32 %arg1, i32 %v1_1abc6)
  %v1_1abe0 = call i32 @unknown_3ad4c(i32 %arg1)
  %v1_1abed = call i32 @unknown_3ad1c(i32 %arg1)
  %v2_1abf2 = inttoptr i32 %v1_1abe0 to i32*
  store i32 %v1_1abed, i32* %v2_1abf2, align 4
  %v1_1abfa = call i32 @unknown_3ad7c(i32 %arg1)
  %v1_1abff = inttoptr i32 %v1_1abfa to i32*
  store i32 0, i32* %v1_1abff, align 4
  %v1_1ac0b = call i32 @unknown_3adac(i32 %arg1)
  %v1_1ac18 = call i32 @unknown_3ad1c(i32 %arg1)
  %v2_1ac1d = inttoptr i32 %v1_1ac0b to i32*
  store i32 %v1_1ac18, i32* %v2_1ac1d, align 4
  %v1_1ac22 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1ac22 = inttoptr i32 %v1_1ac22 to i32*
  store i32 0, i32* %v2_1ac22, align 4
  store i32 0, i32* @eax, align 8
  %v1_1ac33 = call i32 @function_1ac3a()
  ret i32 %v1_1ac33

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3ad1c, { 1, 0 }
  uselistorder i32 %arg1, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1ac3a() local_unnamed_addr {
dec_label_pc_1ac3a:
  %v0_1ac3f = load i32, i32* @eax, align 8
  ret i32 %v0_1ac3f
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE11lower_boundERS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ac40:
  %v3_1ac77 = call i32 @unknown_3ae74(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v1_1ac8c = call i32 @function_1ac93()
  ret i32 %v1_1ac8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ac93() local_unnamed_addr {
dec_label_pc_1ac93:
  %v0_1ac94 = load i32, i32* @eax, align 8
  ret i32 %v0_1ac94
}

define i32 @_ZNKSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ac98:
  %v2_1acc2 = call i32 @unknown_3af48(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1acd7 = call i32 @function_1acde()
  ret i32 %v1_1acd7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1acde() local_unnamed_addr {
dec_label_pc_1acde:
  %v0_1acdf = load i32, i32* @eax, align 8
  ret i32 %v0_1acdf
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ace2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1acfc = load i32, i32* %arg1, align 4
  %v1_1acfe = add i32 %v2_1acfc, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_1acfe, i32* @eax, align 8
  %v2_1ad0b = call i32 @function_1ad12(i32 %tmp99)
  ret i32 %v2_1ad0b
}

define i32 @function_1ad12(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad12:
  %v0_1ad13 = load i32, i32* @eax, align 8
  ret i32 %v0_1ad13
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ad14:
  %v2_1ad3e = call i32 @unknown_3affa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1ad53 = call i32 @function_1ad5a()
  ret i32 %v1_1ad53

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ad5a() local_unnamed_addr {
dec_label_pc_1ad5a:
  %v0_1ad5b = load i32, i32* @eax, align 8
  ret i32 %v0_1ad5b
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ad5e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1ad5e = load i32, i32* %ebp.global-to-local, align 4
  %v2_1ad7e = load i32, i32* %arg1, align 4
  %v1_1ad83 = inttoptr i32 %arg2 to i32*
  %v2_1ad83 = load i32, i32* %v1_1ad83, align 4
  %v12_1ad85 = icmp eq i32 %v2_1ad7e, %v2_1ad83
  %v1_1ad87 = zext i1 %v12_1ad85 to i32
  %v3_1ad87 = and i32 %v2_1ad83, -256
  %v4_1ad87 = or i32 %v1_1ad87, %v3_1ad87
  store i32 %v0_1ad5e, i32* %ebp.global-to-local, align 4
  ret i32 %v4_1ad87

; uselistorder directives
  uselistorder i32 %v2_1ad83, { 1, 0 }
}

define i32 @_ZNSt6vectorISsSaISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad9e:
  %v1_1adbb = call i32 @unknown_3b0ce(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1adca = call i32 @function_1add1()
  ret i32 %v1_1adca
}

define i32 @function_1add1() local_unnamed_addr {
dec_label_pc_1add1:
  %v0_1add2 = load i32, i32* @eax, align 8
  ret i32 %v0_1add2
}

define i32 @_ZNSt4pairIKSsSt6vectorISsSaISsEEEC1ERS0_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1add4:
  ret i32 %arg1
}

define i32 @function_1ae09() local_unnamed_addr {
dec_label_pc_1ae09:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_1ae09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ae09 = add i32 %v0_1ae09, 1351476293
  %v2_1ae09 = inttoptr i32 %v1_1ae09 to i32*
  %v3_1ae09 = load i32, i32* %v2_1ae09, align 4
  %v4_1ae09 = add i32 %v3_1ae09, -1
  store i32 %v4_1ae09, i32* %v2_1ae09, align 4
  %v0_1ae0f = load i32, i32* %eax.global-to-local, align 8
  %v1_1ae0f = trunc i32 %v0_1ae0f to i8
  %v2_1ae0f = add i8 %v1_1ae0f, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v6_1ae0f = icmp ult i8 %v2_1ae0f, %v1_1ae0f
  %v16_1ae0f = zext i8 %v2_1ae0f to i32
  %v18_1ae0f = and i32 %v0_1ae0f, -256
  %v19_1ae0f = or i32 %v16_1ae0f, %v18_1ae0f
  store i32 %v19_1ae0f, i32* %eax.global-to-local, align 8
  %v0_1ae11 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ae11 = add i32 %v0_1ae11, 1
  store i32 %v1_1ae11, i32* @ebp, align 4
  %v1_1ae12 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1ae12 = add i32 %v1_1ae12, -1996217276
  %v3_1ae12 = inttoptr i32 %v2_1ae12 to double*
  %v4_1ae12 = load double, double* %v3_1ae12, align 4
  %v5_1ae12 = fpext double %v4_1ae12 to x86_fp80
  %v6_1ae12 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_1ae12 = fmul x86_fp80 %v5_1ae12, %v6_1ae12
  store x86_fp80 %v7_1ae12, x86_fp80* %st0.global-to-local, align 4
  %v3_1ae18 = zext i1 %v6_1ae0f to i32
  %v4_1ae18 = add i32 %v0_1ae0f, zext (i8 add (i8 ptrtoint (i8* @global_var_8b.2420 to i8), i8 ptrtoint (i8* @global_var_24.2401 to i8)) to i32)
  %v5_1ae18 = add i32 %v4_1ae18, %v3_1ae18
  %v25_1ae18 = and i32 %v5_1ae18, 255
  %v28_1ae18 = or i32 %v25_1ae18, %v18_1ae0f
  store i32 %v28_1ae18, i32* %eax.global-to-local, align 8
  %v0_1ae1f = call i32 @function_1ae38()
  store i32 %v0_1ae1f, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ae1f
}

define i32 @function_1ae22() local_unnamed_addr {
dec_label_pc_1ae22:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ae22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ae22
}

define i32 @function_1ae38() local_unnamed_addr {
dec_label_pc_1ae38:
  %v0_1ae38 = load i32, i32* @ebp, align 4
  %v1_1ae38 = add i32 %v0_1ae38, -12
  %v2_1ae38 = inttoptr i32 %v1_1ae38 to i32*
  %v3_1ae38 = load i32, i32* %v2_1ae38, align 4
  %v2_1ae3b = xor i32 %v3_1ae38, 30
  %v3_1ae3b = icmp eq i32 %v2_1ae3b, 0
  store i32 %v2_1ae3b, i32* @eax, align 8
  br i1 %v3_1ae3b, label %bb, label %dec_label_pc_1ae44

bb:                                               ; preds = %dec_label_pc_1ae38
  %v1_1ae42 = call i32 @function_1ae49()
  br label %dec_label_pc_1ae44

dec_label_pc_1ae44:                               ; preds = %bb, %dec_label_pc_1ae38
  %v2_1ae42 = phi i32 [ %v1_1ae42, %bb ], [ %v2_1ae3b, %dec_label_pc_1ae38 ]
  ret i32 %v2_1ae42
}

define i32 @function_1ae49() local_unnamed_addr {
dec_label_pc_1ae49:
  %v0_1ae4e = load i32, i32* @eax, align 8
  ret i32 %v0_1ae4e
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEE6insertESt17_Rb_tree_iteratorIS7_ERKS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ae50:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_1ae7c = ptrtoint i32* %stack_var_-40 to i32
  %v2_1ae80 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ae86 = call i32 @unknown_3b1b6(i32 %v2_1ae80, i32 %v4_1ae7c)
  %v3_1ae98 = load i32, i32* %stack_var_-20, align 4
  %v4_1aea6 = call i32 @unknown_3b1f0(i32 %arg1, i32 %arg2, i32 %v3_1ae98, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  %v1_1aebb = call i32 @function_1aec2()
  ret i32 %v1_1aebb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1aec2() local_unnamed_addr {
dec_label_pc_1aec2:
  %v0_1aec3 = load i32, i32* @eax, align 8
  ret i32 %v0_1aec3
}

define i32 @_ZN5boost9addressofISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEEPT_RS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aec6:
  %stack_var_-20 = alloca i32, align 4
  %v2_1aee4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1aeea = call i32 @unknown_3b682(i32 %v2_1aee4, i32 %arg1)
  %v1_1aef5 = call i32 @unknown_3b6ba(i32 %v2_1aee4)
  %v2_1af05 = call i32 @unknown_3b6e9(i32 %v1_1aef5, i32 0)
  ret i32 %v2_1af05
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1af1e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1af49 = inttoptr i32 %arg2 to i32*
  %v2_1af49 = load i32, i32* %v1_1af49, align 4
  store i32 %v2_1af49, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_1af5a = call i32 @function_1af61(i32 %tmp101)
  ret i32 %v2_1af5a
}

define i32 @function_1af61(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af61:
  %v0_1af62 = load i32, i32* @eax, align 8
  ret i32 %v0_1af62
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af63:
  store i32 %arg1, i32* @eax, align 8
  %v2_1af87 = call i32 @function_1af8e(i32 %arg1)
  ret i32 %v2_1af87
}

define i32 @function_1af8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af8e:
  %v0_1af8f = load i32, i32* @eax, align 8
  ret i32 %v0_1af8f
}

define i32 @_ZN5boost15foreach_detail_7derefofISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEERT_PSA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af90:
  ret i32 %arg1
}

define i32 @_ZN5boost17range_adl_barrier5beginISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1afbd:
  %v2_1afe7 = call i32 @unknown_3b813(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1affc = call i32 @function_1b003()
  ret i32 %v1_1affc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b003() local_unnamed_addr {
dec_label_pc_1b003:
  %v0_1b004 = load i32, i32* @eax, align 8
  ret i32 %v0_1b004
}

define i32 @_ZN5boost15foreach_detail_8auto_anyISt17_Rb_tree_iteratorISt4pairIKSsSsEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b008:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i1 false, i1* @of, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v1_1b02b = call i32 @function_33bdc(i32 %tmp102)
  %v1_1b036 = inttoptr i32 %arg2 to i32*
  %v2_1b036 = load i32, i32* %v1_1b036, align 4
  store i32 %v2_1b036, i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZN5boost17range_adl_barrier3endISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b04d:
  %v2_1b077 = call i32 @unknown_3b8ed(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1b08c = call i32 @function_1b093()
  ret i32 %v1_1b08c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b093() local_unnamed_addr {
dec_label_pc_1b093:
  %v0_1b094 = load i32, i32* @eax, align 8
  ret i32 %v0_1b094
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castISt17_Rb_tree_iteratorISt4pairIKSsSsEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b097:
  store i32 %arg1, i32* @eax, align 8
  %v2_1b0bb = call i32 @function_1b0c2(i32 %arg1)
  ret i32 %v2_1b0bb
}

define i32 @function_1b0c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0c2:
  %v0_1b0c3 = load i32, i32* @eax, align 8
  ret i32 %v0_1b0c3
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b0c4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1b0de = load i32, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_1b0fa = call i32 @function_1b101(i32 %v2_1b0de)
  ret i32 %v2_1b0fa
}

define i32 @function_1b101(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b101:
  %v0_1b102 = load i32, i32* @eax, align 8
  ret i32 %v0_1b102
}

define i32 @_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b103:
  %edx.global-to-local = alloca i32, align 4
  %v0_1b126 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1b126, 16777216
  %v7_1b13e = sdiv i32 %sext, 16777216
  %v8_1b13e = call i32 @unknown_3b9ed(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_1b13e, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* %edx.global-to-local, align 8
  ret i32 %v8_1b13e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt6vectorIhSaIhEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b156:
  %v1_1b173 = call i32 @__stack_chk_fail.1182(i32 %arg1)
  %v1_1b17b = call i32 @unknown_3ba9a(i32 %v1_1b173)
  store i32 %v1_1b17b, i32* @eax, align 8
  %v1_1b18a = call i32 @function_1b191()
  ret i32 %v1_1b18a
}

define i32 @function_1b191() local_unnamed_addr {
dec_label_pc_1b191:
  %v0_1b192 = load i32, i32* @eax, align 8
  ret i32 %v0_1b192
}

define i32 @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIPhEES3_jT_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b194:
  store i32 %arg1, i32* @eax, align 8
  %v2_1b1cb = call i32 @function_386a6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1b1d9 = call i32 @function_334a4(i32 %arg1)
  store i32 %v2_1b1cb, i32* @eax, align 8
  %v5_1b208 = call i32 @function_1b248(i32 %arg3, i32 %arg4, i32 %v2_1b1cb, i32 %v1_1b1d9)
  store i32 %v5_1b208, i32* @eax, align 8
  %v0_1b20a = call i32 @function_1b243()
  ret i32 %v0_1b20a

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1b20d() local_unnamed_addr {
dec_label_pc_1b20d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b20d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b20d
}

define i32 @function_1b243() local_unnamed_addr {
dec_label_pc_1b243:
  %v0_1b243 = load i32, i32* @eax, align 8
  ret i32 %v0_1b243
}

define i32 @function_1b248(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b248:
  %v0_1b24d = load i32, i32* @eax, align 8
  ret i32 %v0_1b24d
}

define i32 @_ZN5boost11filesystem311path_traits8dispatchIcSsEEvRKPT_RT0_RKSt7codecvtIwc11__mbstate_tE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b24e:
  %v2_1b274 = load i32, i32* %arg1, align 4
  %v1_1b276 = icmp eq i32 %v2_1b274, 0
  %v1_1b278 = icmp eq i1 %v1_1b276, false
  br i1 %v1_1b278, label %bb, label %dec_label_pc_1b27a

bb:                                               ; preds = %dec_label_pc_1b24e
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v5_1b278 = call i32 @function_1b29e(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_1b27a

dec_label_pc_1b27a:                               ; preds = %bb, %dec_label_pc_1b24e
  %v3_1b292 = phi i32 [ %v5_1b278, %bb ], [ %v2_1b274, %dec_label_pc_1b24e ]
  ret i32 %v3_1b292

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1b29e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b29e:
  %v0_1b29e = load i32, i32* @ebp, align 4
  %v1_1b29e = add i32 %v0_1b29e, -28
  %v2_1b29e = inttoptr i32 %v1_1b29e to i32*
  %v3_1b29e = load i32, i32* %v2_1b29e, align 4
  %v1_1b2a1 = inttoptr i32 %v3_1b29e to i32*
  %v2_1b2a1 = load i32, i32* %v1_1b2a1, align 4
  store i32 %v2_1b2a1, i32* @eax, align 8
  %v1_1b2a3 = add i32 %v0_1b29e, -36
  %v2_1b2a3 = inttoptr i32 %v1_1b2a3 to i32*
  %v3_1b2a3 = load i32, i32* %v2_1b2a3, align 4
  %v1_1b2aa = add i32 %v0_1b29e, -32
  %v2_1b2aa = inttoptr i32 %v1_1b2aa to i32*
  %v3_1b2aa = load i32, i32* %v2_1b2aa, align 4
  %v3_1b2b4 = call i32 @function_2ccb9(i32 %v2_1b2a1, i32 %v3_1b2aa, i32 %v3_1b2a3)
  %v0_1b2b9 = load i32, i32* @ebp, align 4
  %v1_1b2b9 = add i32 %v0_1b2b9, -12
  %v2_1b2b9 = inttoptr i32 %v1_1b2b9 to i32*
  %v3_1b2b9 = load i32, i32* %v2_1b2b9, align 4
  %v2_1b2bc = xor i32 %v3_1b2b9, 30
  %v3_1b2bc = icmp eq i32 %v2_1b2bc, 0
  store i32 %v2_1b2bc, i32* @eax, align 8
  br i1 %v3_1b2bc, label %bb, label %dec_label_pc_1b2c5

bb:                                               ; preds = %dec_label_pc_1b29e
  %v1_1b2c3 = call i32 @function_1b2ca()
  br label %dec_label_pc_1b2c5

dec_label_pc_1b2c5:                               ; preds = %bb, %dec_label_pc_1b29e
  %v2_1b2c3 = phi i32 [ %v1_1b2c3, %bb ], [ %v2_1b2bc, %dec_label_pc_1b29e ]
  ret i32 %v2_1b2c3

; uselistorder directives
  uselistorder i32 %v0_1b29e, { 1, 0, 2 }
}

define i32 @function_1b2ca() local_unnamed_addr {
dec_label_pc_1b2ca:
  %v0_1b2cb = load i32, i32* @eax, align 8
  ret i32 %v0_1b2cb
}

define i32 @_ZN5boost11filesystem34path6appendISsEERS1_RKT_RKSt7codecvtIwc11__mbstate_tE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b2cc:
  %v1_1b2f5 = call i32 @unknown_3bc3f(i32 %arg2)
  %v4_1b2fa = trunc i32 %v1_1b2f5 to i8
  %v5_1b2fa = icmp eq i8 %v4_1b2fa, 0
  store i32 %arg1, i32* @eax, align 8
  br i1 %v5_1b2fa, label %dec_label_pc_1b303, label %dec_label_pc_1b2fe

dec_label_pc_1b2fe:                               ; preds = %dec_label_pc_1b2cc
  %v0_1b301 = call i32 @function_1b345()
  ret i32 %v0_1b301

dec_label_pc_1b303:                               ; preds = %dec_label_pc_1b2cc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b345() local_unnamed_addr {
dec_label_pc_1b345:
  %v0_1b357 = load i32, i32* @eax, align 8
  ret i32 %v0_1b357
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b358:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_1b35b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1b382 = call i32 @function_34a94(i32 %arg2)
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1b390 = call i32 @unknown_3bd32(i32 %arg2)
  %v2_1b3b8 = ptrtoint i32* %stack_var_-22 to i32
  %v10_1b3fa130 = icmp eq i32 %v1_1b382, 0
  %v1_1b3fe131 = icmp eq i1 %v10_1b3fa130, false
  %v2_1b3fe132 = zext i1 %v1_1b3fe131 to i32
  %v4_1b3fe133 = and i32 %v1_1b390, -256
  %v5_1b3fe134 = or i32 %v2_1b3fe132, %v4_1b3fe133
  store i32 %v5_1b3fe134, i32* %eax.global-to-local, align 8
  %v5_1b401135 = icmp eq i1 %v1_1b3fe131, false
  %v1_1b403136 = icmp eq i1 %v5_1b401135, false
  br i1 %v1_1b403136, label %dec_label_pc_1b39e, label %dec_label_pc_1b405

dec_label_pc_1b39e:                               ; preds = %dec_label_pc_1b358, %dec_label_pc_1b3fa.backedge
  %stack_var_-32.0137 = phi i32 [ %storemerge3.be, %dec_label_pc_1b3fa.backedge ], [ %v1_1b382, %dec_label_pc_1b358 ]
  store i32 %stack_var_-32.0137, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-32.0137, i32* %stack_var_-108, align 4
  %v1_1b3aa = call i32 @unknown_3bd95(i32 %stack_var_-32.0137)
  store i32 %v1_1b3aa, i32* @ebx, align 4
  store i32 %v2_1b3b8, i32* %eax.global-to-local, align 8
  store i32 %v2_1b3b8, i32* %stack_var_-108, align 4
  %v2_1b3be = call i32 @unknown_3bd62(i32 %v2_1b3b8, i32 %arg3)
  store i32 %v2_1b3be, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1b3d1 = call i32 @function_35ca4(i32 %arg2)
  %v1_1b3d6 = trunc i32 %v1_1b3d1 to i8
  %v10_1b3d9 = icmp eq i8 %v1_1b3d6, 0
  store i32 %stack_var_-32.0137, i32* @eax, align 8
  store i32 %stack_var_-32.0137, i32* %stack_var_-108, align 4
  br i1 %v10_1b3d9, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3df

dec_label_pc_1b3df:                               ; preds = %dec_label_pc_1b39e
  %v1_1b3e5 = call i32 @unknown_39c9e(i32 %stack_var_-32.0137)
  br label %dec_label_pc_1b3fa.backedge

dec_label_pc_1b3ec:                               ; preds = %dec_label_pc_1b39e
  %v1_1b3f2 = call i32 @function_39c6e(i32 %stack_var_-32.0137)
  br label %dec_label_pc_1b3fa.backedge

dec_label_pc_1b3fa.backedge:                      ; preds = %dec_label_pc_1b3ec, %dec_label_pc_1b3df
  %storemerge3.be = phi i32 [ %v1_1b3f2, %dec_label_pc_1b3ec ], [ %v1_1b3e5, %dec_label_pc_1b3df ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_1b3ec ], [ %v1_1b3d6, %dec_label_pc_1b3df ]
  %v10_1b3fa = icmp eq i32 %storemerge3.be, 0
  %v1_1b3fe = icmp eq i1 %v10_1b3fa, false
  %v2_1b3fe = zext i1 %v1_1b3fe to i32
  %v4_1b3fe = and i32 %storemerge3.be, -256
  %v5_1b3fe = or i32 %v2_1b3fe, %v4_1b3fe
  store i32 %v5_1b3fe, i32* %eax.global-to-local, align 8
  %v5_1b401 = icmp eq i1 %v1_1b3fe, false
  %v1_1b403 = icmp eq i1 %v5_1b401, false
  br i1 %v1_1b403, label %dec_label_pc_1b39e, label %dec_label_pc_1b405

dec_label_pc_1b405:                               ; preds = %dec_label_pc_1b3fa.backedge, %dec_label_pc_1b358
  %stack_var_-32.0.lcssa = phi i32 [ %v1_1b382, %dec_label_pc_1b358 ], [ %storemerge3.be, %dec_label_pc_1b3fa.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_1b390, %dec_label_pc_1b358 ], [ %stack_var_-32.0137, %dec_label_pc_1b3fa.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_1b358 ], [ %stack_var_-17.0.be, %dec_label_pc_1b3fa.backedge ]
  %v2_1b40c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1b40c, i32* %eax.global-to-local, align 8
  store i32 %v2_1b40c, i32* %stack_var_-108, align 4
  %v2_1b412 = call i32 @unknown_3bdda(i32 %v2_1b40c, i32 %stack_var_-28.0.lcssa)
  store i32 %v2_1b412, i32* %eax.global-to-local, align 8
  %v10_1b417 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_1b417, label %dec_label_pc_1b4a3, label %dec_label_pc_1b421

dec_label_pc_1b421:                               ; preds = %dec_label_pc_1b405
  %v2_1b421 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1b421, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %v2_1b421, i32* %stack_var_-108, align 4
  %v2_1b42e = call i32 @unknown_3be12(i32 %v2_1b421, i32 %arg2)
  store i32 %v2_1b421, i32* %stack_var_-108, align 4
  store i32 %v2_1b40c, i32* %eax.global-to-local, align 8
  store i32 %v2_1b40c, i32* %stack_var_-112, align 4
  %v2_1b443 = call i32 @unknown_3be5c(i32 %v2_1b40c, i32 %v2_1b421)
  store i32 %v2_1b443, i32* %eax.global-to-local, align 8
  %v4_1b448 = trunc i32 %v2_1b443 to i8
  %v5_1b448 = icmp eq i8 %v4_1b448, 0
  br i1 %v5_1b448, label %dec_label_pc_1b498, label %dec_label_pc_1b44c

dec_label_pc_1b44c:                               ; preds = %dec_label_pc_1b421
  store i8 1, i8* %stack_var_-21, align 1
  %v2_1b450 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1b450, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_1b450, i32* %stack_var_-112, align 4
  %v1_1b472 = call i32 @unknown_3be9c(i32 %v2_1b450)
  %v2_1b47a = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_1b47a, i32* %stack_var_-108, align 4
  store i32 %v2_1b450, i32* %stack_var_-112, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1b48e = call i32 @unknown_3bf9e(i32 %arg1)
  store i32 %v1_1b48e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b541

dec_label_pc_1b498:                               ; preds = %dec_label_pc_1b421
  store i32 %v2_1b40c, i32* %eax.global-to-local, align 8
  store i32 %v2_1b40c, i32* %stack_var_-112, align 4
  %v1_1b49e = call i32 @unknown_3bfea(i32 %v2_1b40c)
  store i32 %v1_1b49e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b4a3

dec_label_pc_1b4a3:                               ; preds = %dec_label_pc_1b498, %dec_label_pc_1b405
  %v1_1b4a6 = load i32, i32* @esp, align 4
  %v2_1b4a6 = add i32 %v1_1b4a6, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1b4a6 = inttoptr i32 %v2_1b4a6 to i32*
  store i32 %arg3, i32* %v3_1b4a6, align 4
  %v2_1b4aa = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1b4aa, i32* %eax.global-to-local, align 8
  %v1_1b4ad = load i32, i32* @esp, align 4
  %v2_1b4ad = inttoptr i32 %v1_1b4ad to i32*
  store i32 %v2_1b4aa, i32* %v2_1b4ad, align 4
  %v0_1b4b0 = load i32, i32* %stack_var_-112, align 4
  %v1_1b4b0 = load i32, i32* %stack_var_-108, align 4
  %v2_1b4b0 = call i32 @unknown_3bd62(i32 %v0_1b4b0, i32 %v1_1b4b0)
  store i32 %v2_1b4b0, i32* @ebx, align 4
  %v3_1b4b7 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1b4b7, i32* %eax.global-to-local, align 8
  %v1_1b4ba = load i32, i32* @esp, align 4
  %v2_1b4ba = inttoptr i32 %v1_1b4ba to i32*
  store i32 %v3_1b4b7, i32* %v2_1b4ba, align 4
  %v0_1b4bd = call i32 @unknown_3c029()
  store i32 %v0_1b4bd, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v0_1b4c7 = load i32, i32* @ebx, align 4
  %v1_1b4c7 = load i32, i32* @esp, align 4
  %v2_1b4c7 = add i32 %v1_1b4c7, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1b4c7 = inttoptr i32 %v2_1b4c7 to i32*
  store i32 %v0_1b4c7, i32* %v3_1b4c7, align 4
  %v0_1b4cb = load i32, i32* %edx.global-to-local, align 8
  %v1_1b4cb = load i32, i32* @esp, align 4
  %v2_1b4cb = add i32 %v1_1b4cb, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1b4cb = inttoptr i32 %v2_1b4cb to i32*
  store i32 %v0_1b4cb, i32* %v3_1b4cb, align 4
  %v0_1b4cf = load i32, i32* %eax.global-to-local, align 8
  %v1_1b4cf = load i32, i32* @esp, align 4
  %v2_1b4cf = inttoptr i32 %v1_1b4cf to i32*
  store i32 %v0_1b4cf, i32* %v2_1b4cf, align 4
  %v0_1b4d2 = load i32, i32* %stack_var_-112, align 4
  %v1_1b4d2 = call i32 @function_35ca4(i32 %v0_1b4d2)
  store i32 %v1_1b4d2, i32* %eax.global-to-local, align 8
  %v4_1b4d7 = trunc i32 %v1_1b4d2 to i8
  %v5_1b4d7 = icmp eq i8 %v4_1b4d7, 0
  br i1 %v5_1b4d7, label %dec_label_pc_1b524, label %dec_label_pc_1b4db

dec_label_pc_1b4db:                               ; preds = %dec_label_pc_1b4a3
  store i8 1, i8* %stack_var_-19, align 1
  %v2_1b4df = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1b4df, i32* %eax.global-to-local, align 8
  %v1_1b4e5 = load i32, i32* @esp, align 4
  %v2_1b4e5 = add i32 %v1_1b4e5, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_1b4e5 = inttoptr i32 %v2_1b4e5 to i32*
  store i32 %arg3, i32* %v3_1b4e5, align 4
  %v1_1b4ec = load i32, i32* @esp, align 4
  %v2_1b4ec = add i32 %v1_1b4ec, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_1b4ec = inttoptr i32 %v2_1b4ec to i32*
  store i32 %stack_var_-28.0.lcssa, i32* %v3_1b4ec, align 4
  %v1_1b4f3 = load i32, i32* @esp, align 4
  %v2_1b4f3 = add i32 %v1_1b4f3, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1b4f3 = inttoptr i32 %v2_1b4f3 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v3_1b4f3, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1b4fa = load i32, i32* @esp, align 4
  %v2_1b4fa = add i32 %v1_1b4fa, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1b4fa = inttoptr i32 %v2_1b4fa to i32*
  store i32 %arg2, i32* %v3_1b4fa, align 4
  %v1_1b4fe = load i32, i32* @esp, align 4
  %v2_1b4fe = inttoptr i32 %v1_1b4fe to i32*
  store i32 %v2_1b4df, i32* %v2_1b4fe, align 4
  %v2_1b501 = call i32 @unknown_3be9c(i32 1)
  %v0_1b506 = load i32, i32* @esp, align 4
  %v1_1b506 = sub i32 %v0_1b506, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1b509 = ptrtoint i8* %stack_var_-19 to i32
  %v2_1b50c = add i32 %v1_1b506, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1b50c = inttoptr i32 %v2_1b50c to i32*
  store i32 %v2_1b509, i32* %v3_1b50c, align 4
  %v1_1b513 = load i32, i32* @esp, align 4
  %v2_1b513 = add i32 %v1_1b513, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1b513 = inttoptr i32 %v2_1b513 to i32*
  store i32 %v2_1b4df, i32* %v3_1b513, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1b51a = load i32, i32* @esp, align 4
  %v2_1b51a = inttoptr i32 %v1_1b51a to i32*
  store i32 %arg1, i32* %v2_1b51a, align 4
  %v2_1b51d = call i32 @unknown_3bf9e(i32 1)
  store i32 %v2_1b51d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b541

dec_label_pc_1b524:                               ; preds = %dec_label_pc_1b4a3
  store i8 0, i8* %stack_var_-18, align 1
  %v2_1b528 = ptrtoint i8* %stack_var_-18 to i32
  %v1_1b52b = load i32, i32* @esp, align 4
  %v2_1b52b = add i32 %v1_1b52b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1b52b = inttoptr i32 %v2_1b52b to i32*
  store i32 %v2_1b528, i32* %v3_1b52b, align 4
  %v1_1b532 = load i32, i32* @esp, align 4
  %v2_1b532 = add i32 %v1_1b532, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1b532 = inttoptr i32 %v2_1b532 to i32*
  store i32 %v2_1b40c, i32* %v3_1b532, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1b539 = load i32, i32* @esp, align 4
  %v2_1b539 = inttoptr i32 %v1_1b539 to i32*
  store i32 %arg1, i32* %v2_1b539, align 4
  %v2_1b53c = call i32 @unknown_3bf9e(i32 0)
  store i32 %v2_1b53c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1b541

dec_label_pc_1b541:                               ; preds = %dec_label_pc_1b524, %dec_label_pc_1b4db, %dec_label_pc_1b44c
  store i32 %arg1, i32* %eax.global-to-local, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  store i32 %v0_1b35b, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_1b450, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1b421, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1b40c, { 6, 1, 0, 2, 4, 3, 5, 8, 7, 9 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %storemerge3.be, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0137, { 0, 5, 4, 6, 7, 1, 2, 3 }
  uselistorder i32 %v2_1b3b8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 14, 15, 16, 0, 26, 27 }
  uselistorder i32 (i32)* @unknown_3bf9e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3be9c, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3bd62, { 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 6, 1, 0, 3, 2, 9, 8, 7, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 %arg1, { 0, 5, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1b39e, { 1, 0 }
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISsEC1ERKSt17_Rb_tree_iteratorISsE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b55c:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1b55c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b57c = inttoptr i32 %arg2 to i32*
  %v2_1b57c = load i32, i32* %v1_1b57c, align 4
  store i32 %v2_1b57c, i32* %arg1, align 4
  store i32 %v0_1b55c, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNSt4pairISt23_Rb_tree_const_iteratorISsEbEC1ERKS1_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b596:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_1b5bf = inttoptr i32 %arg2 to i32*
  %v2_1b5bf = load i32, i32* %v1_1b5bf, align 4
  store i32 %v2_1b5bf, i32* %arg1, align 4
  %v2_1b5c6 = load i8, i8* %tmp103, align 1
  %v3_1b5cc = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_1b5cc = inttoptr i32 %v3_1b5cc to i8*
  store i8 %v2_1b5c6, i8* %v4_1b5cc, align 1
  store i32 0, i32* @eax, align 8
  %v5_1b5d9 = call i32 @function_1b5e0(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_1b5d9
}

define i32 @function_1b5e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b5e0:
  %v0_1b5e1 = load i32, i32* @eax, align 8
  ret i32 %v0_1b5e1
}

define i32 @_ZN5boost10shared_ptrISiEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b5e2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_1b605 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1b605, i32* @eax, align 8
  %v1_1b60b = call i32 @function_2bab0(i32 %v1_1b605)
  store i32 0, i32* @eax, align 8
  %v1_1b61a = call i32 @function_1b621()
  ret i32 %v1_1b61a
}

define i32 @function_1b621() local_unnamed_addr {
dec_label_pc_1b621:
  %v0_1b622 = load i32, i32* @eax, align 8
  ret i32 %v0_1b622
}

define i32 @_ZN5boost10shared_ptrISiE5resetISiNS_15program_options6detail12null_deleterEEEvPT_T0_(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1b624:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1b649 = load i32, i32* %edx.global-to-local, align 8
  %v2_1b654 = ptrtoint i32* %stack_var_-24 to i32
  %sext = mul i32 %v0_1b649, 16777216
  %v3_1b65a = sdiv i32 %sext, 16777216
  %v4_1b65a = call i32 @unknown_3c33a(i32 %v2_1b654, i32 %arg2, i32 %v3_1b65a)
  %v2_1b66c = call i32 @unknown_3c3ac(i32 %v2_1b654, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v2_1b686 = call i32 @function_1b6a6(i32 %v2_1b654)
  store i32 %v2_1b686, i32* @eax, align 8
  %v0_1b688 = call i32 @function_1b6a1()
  ret i32 %v0_1b688
}

define i32 @function_1b68b() local_unnamed_addr {
dec_label_pc_1b68b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b68b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b68b
}

define i32 @function_1b6a1() local_unnamed_addr {
dec_label_pc_1b6a1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1b6a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b6a6:
  %v0_1b6ab = load i32, i32* @eax, align 8
  ret i32 %v0_1b6ab
}

define i32 @_ZN5boost20iterator_core_access5equalINS_15program_options6detail27common_config_file_iteratorES4_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1b6ac:
  %v1_1b6d3 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1b6d9 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1b6e3 = call i32 @unknown_3c48e(i32 %v1_1b6d9, i32 %v1_1b6d3)
  store i32 %v2_1b6e3, i32* @eax, align 8
  %v1_1b6f2 = call i32 @function_1b6f9()
  ret i32 %v1_1b6f2
}

define i32 @function_1b6f9() local_unnamed_addr {
dec_label_pc_1b6f9:
  %v0_1b6fa = load i32, i32* @eax, align 8
  ret i32 %v0_1b6fa
}

define i32 @_ZN5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b6fc:
  %v1_1b716 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1b716, i32* @eax, align 8
  %v2_1b723 = call i32 @function_1b72a(i32 %arg1)
  ret i32 %v2_1b723
}

define i32 @function_1b72a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b72a:
  %v0_1b72b = load i32, i32* @eax, align 8
  ret i32 %v0_1b72b
}

define i32 @_ZN5boost20iterator_core_access9incrementINS_15program_options6detail27common_config_file_iteratorEEEvRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b72c:
  %v1_1b746 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1b74c = call i32 @unknown_3c55e(i32 %v1_1b746)
  store i32 0, i32* @eax, align 8
  %v1_1b75b = call i32 @function_1b762()
  ret i32 %v1_1b75b
}

define i32 @function_1b762() local_unnamed_addr {
dec_label_pc_1b762:
  %v0_1b763 = load i32, i32* @eax, align 8
  ret i32 %v0_1b763
}

define i32 @_ZN5boost6detail21operator_arrow_resultINS_15program_options12basic_optionIcEERKS4_PS5_E4makeES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b764:
  %v1_1b781 = call i32 @unknown_3c5ce(i32 %arg1)
  store i32 %v1_1b781, i32* @eax, align 8
  %v1_1b790 = call i32 @function_1b797()
  ret i32 %v1_1b790
}

define i32 @function_1b797() local_unnamed_addr {
dec_label_pc_1b797:
  %v0_1b798 = load i32, i32* @eax, align 8
  ret i32 %v0_1b798
}

define i32 @_ZNK5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b79a:
  %v1_1b7b4 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1b7b4, i32* @eax, align 8
  %v2_1b7c1 = call i32 @function_1b7c8(i32 %arg1)
  ret i32 %v2_1b7c1
}

define i32 @function_1b7c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b7c8:
  %v0_1b7c9 = load i32, i32* @eax, align 8
  ret i32 %v0_1b7c9
}

define i32 @_ZNK5boost15iterator_facadeINS_15program_options6detail27common_config_file_iteratorEKNS1_12basic_optionIcEENS_21forward_traversal_tagERS6_iEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b7ca:
  %v1_1b7ef = call i32 @unknown_3c661(i32 %arg1)
  store i32 %v1_1b7ef, i32* @eax, align 8
  %v1_1b7fe = call i32 @function_1b805()
  ret i32 %v1_1b7fe
}

define i32 @function_1b805() local_unnamed_addr {
dec_label_pc_1b805:
  %v0_1b806 = load i32, i32* @eax, align 8
  ret i32 %v0_1b806
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b808:
  %v1_1b825 = call i32 @unknown_3c6d8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1b834 = call i32 @function_1b83b()
  ret i32 %v1_1b834
}

define i32 @function_1b83b() local_unnamed_addr {
dec_label_pc_1b83b:
  %v0_1b83c = load i32, i32* @eax, align 8
  ret i32 %v0_1b83c
}

define i32 @_ZNSaISt13_Rb_tree_nodeI8CNetAddrEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b83e:
  %v1_1b85b = call i32 @unknown_3c780(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1b86a = call i32 @function_1b871()
  ret i32 %v1_1b86a
}

define i32 @function_1b871() local_unnamed_addr {
dec_label_pc_1b871:
  %v0_1b872 = load i32, i32* @eax, align 8
  ret i32 %v0_1b872
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b874:
  %v10_1b8d3105 = icmp eq i32 %arg2, 0
  %v1_1b8d7106 = icmp eq i1 %v10_1b8d3105, false
  %v5_1b8da108 = icmp eq i1 %v1_1b8d7106, false
  %v1_1b8dc109 = icmp eq i1 %v5_1b8da108, false
  br i1 %v1_1b8dc109, label %dec_label_pc_1b893, label %dec_label_pc_1b8de

dec_label_pc_1b893:                               ; preds = %dec_label_pc_1b874, %dec_label_pc_1b893
  %stack_var_-36.0110 = phi i32 [ %v2_1b8b3, %dec_label_pc_1b893 ], [ %arg2, %dec_label_pc_1b874 ]
  %v1_1b899 = call i32 @unknown_3c7e0(i32 %stack_var_-36.0110)
  %v2_1b8b3 = call i32 @unknown_3c810(i32 %stack_var_-36.0110, i32 %v1_1b899)
  %v2_1b8c8 = call i32 @unknown_3c840(i32 %arg1, i32 %stack_var_-36.0110)
  %v10_1b8d3 = icmp eq i32 %v2_1b8b3, 0
  %v1_1b8d7 = icmp eq i1 %v10_1b8d3, false
  %v5_1b8da = icmp eq i1 %v1_1b8d7, false
  %v1_1b8dc = icmp eq i1 %v5_1b8da, false
  br i1 %v1_1b8dc, label %dec_label_pc_1b893, label %dec_label_pc_1b8de

dec_label_pc_1b8de:                               ; preds = %dec_label_pc_1b893, %dec_label_pc_1b874
  store i32 0, i32* @eax, align 8
  %v1_1b8e8 = call i32 @function_1b8ef()
  ret i32 %v1_1b8e8

; uselistorder directives
  uselistorder i32 %v2_1b8b3, { 1, 0 }
  uselistorder i32 %stack_var_-36.0110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b893, { 1, 0 }
}

define i32 @function_1b8ef() local_unnamed_addr {
dec_label_pc_1b8ef:
  %v0_1b8f0 = load i32, i32* @eax, align 8
  ret i32 %v0_1b8f0
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b8f2:
  %v1_1b90c = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1b90c = inttoptr i32 %v1_1b90c to i32*
  %v3_1b90c = load i32, i32* %v2_1b90c, align 4
  store i32 %v3_1b90c, i32* @eax, align 8
  %v2_1b919 = call i32 @function_1b920(i32 %arg1)
  ret i32 %v2_1b919
}

define i32 @function_1b920(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b920:
  %v0_1b921 = load i32, i32* @eax, align 8
  ret i32 %v0_1b921
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b922:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1b95a = call i32 @unknown_3c974(i32 %arg2)
  %v2_1b982 = ptrtoint i32* %stack_var_-22 to i32
  %v10_1b9c4129 = icmp eq i32 %arg2, 0
  %v1_1b9c8130 = icmp eq i1 %v10_1b9c4129, false
  %v2_1b9c8131 = zext i1 %v1_1b9c8130 to i32
  %v4_1b9c8132 = and i32 %v1_1b95a, -256
  %v5_1b9c8133 = or i32 %v2_1b9c8131, %v4_1b9c8132
  store i32 %v5_1b9c8133, i32* %eax.global-to-local, align 8
  %v5_1b9cb134 = icmp eq i1 %v1_1b9c8130, false
  %v1_1b9cd135 = icmp eq i1 %v5_1b9cb134, false
  br i1 %v1_1b9cd135, label %dec_label_pc_1b968, label %dec_label_pc_1b9cf

dec_label_pc_1b968:                               ; preds = %dec_label_pc_1b922, %dec_label_pc_1b9c4.backedge
  %stack_var_-32.0136 = phi i32 [ %storemerge3.be, %dec_label_pc_1b9c4.backedge ], [ %arg2, %dec_label_pc_1b922 ]
  store i32 %stack_var_-32.0136, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-32.0136, i32* %stack_var_-108, align 4
  %v1_1b974 = call i32 @unknown_3c9d7(i32 %stack_var_-32.0136)
  store i32 %v1_1b974, i32* %ebx.global-to-local, align 4
  store i32 %v2_1b982, i32* %eax.global-to-local, align 8
  store i32 %v2_1b982, i32* %stack_var_-108, align 4
  %v2_1b988 = call i32 @unknown_3c9a4(i32 %v2_1b982, i32 %arg3)
  store i32 %v2_1b988, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v3_1b99b = call i32 @unknown_3ca1c(i32 %arg2, i32 %v2_1b988, i32 %v1_1b974)
  %v1_1b9a0 = trunc i32 %v3_1b99b to i8
  %v10_1b9a3 = icmp eq i8 %v1_1b9a0, 0
  store i32 %stack_var_-32.0136, i32* %eax.global-to-local, align 8
  store i32 %stack_var_-32.0136, i32* %stack_var_-108, align 4
  br i1 %v10_1b9a3, label %dec_label_pc_1b9b6, label %dec_label_pc_1b9a9

dec_label_pc_1b9a9:                               ; preds = %dec_label_pc_1b968
  %v1_1b9af = call i32 @unknown_3c8be(i32 %stack_var_-32.0136)
  br label %dec_label_pc_1b9c4.backedge

dec_label_pc_1b9b6:                               ; preds = %dec_label_pc_1b968
  %v1_1b9bc = call i32 @unknown_3c88e(i32 %stack_var_-32.0136)
  br label %dec_label_pc_1b9c4.backedge

dec_label_pc_1b9c4.backedge:                      ; preds = %dec_label_pc_1b9b6, %dec_label_pc_1b9a9
  %storemerge3.be = phi i32 [ %v1_1b9bc, %dec_label_pc_1b9b6 ], [ %v1_1b9af, %dec_label_pc_1b9a9 ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_1b9b6 ], [ %v1_1b9a0, %dec_label_pc_1b9a9 ]
  %v10_1b9c4 = icmp eq i32 %storemerge3.be, 0
  %v1_1b9c8 = icmp eq i1 %v10_1b9c4, false
  %v2_1b9c8 = zext i1 %v1_1b9c8 to i32
  %v4_1b9c8 = and i32 %storemerge3.be, -256
  %v5_1b9c8 = or i32 %v2_1b9c8, %v4_1b9c8
  store i32 %v5_1b9c8, i32* %eax.global-to-local, align 8
  %v5_1b9cb = icmp eq i1 %v1_1b9c8, false
  %v1_1b9cd = icmp eq i1 %v5_1b9cb, false
  br i1 %v1_1b9cd, label %dec_label_pc_1b968, label %dec_label_pc_1b9cf

dec_label_pc_1b9cf:                               ; preds = %dec_label_pc_1b9c4.backedge, %dec_label_pc_1b922
  %stack_var_-32.0.lcssa = phi i32 [ %arg2, %dec_label_pc_1b922 ], [ %storemerge3.be, %dec_label_pc_1b9c4.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_1b95a, %dec_label_pc_1b922 ], [ %stack_var_-32.0136, %dec_label_pc_1b9c4.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_1b922 ], [ %stack_var_-17.0.be, %dec_label_pc_1b9c4.backedge ]
  %v2_1b9d6 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1b9d6, i32* %eax.global-to-local, align 8
  store i32 %v2_1b9d6, i32* %stack_var_-108, align 4
  %v2_1b9dc = call i32 @unknown_3ca64(i32 %v2_1b9d6, i32 %stack_var_-28.0.lcssa)
  store i32 %v2_1b9dc, i32* %eax.global-to-local, align 8
  %v10_1b9e1 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_1b9e1, label %dec_label_pc_1ba6d, label %dec_label_pc_1b9eb

dec_label_pc_1b9eb:                               ; preds = %dec_label_pc_1b9cf
  %v2_1b9eb = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1b9eb, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %v2_1b9eb, i32* %stack_var_-108, align 4
  %v2_1b9f8 = call i32 @unknown_3ca9c(i32 %v2_1b9eb, i32 %arg2)
  store i32 %v2_1b9eb, i32* %stack_var_-108, align 4
  store i32 %v2_1b9d6, i32* %eax.global-to-local, align 8
  store i32 %v2_1b9d6, i32* %stack_var_-112, align 4
  %v2_1ba0d = call i32 @unknown_3cae6(i32 %v2_1b9d6, i32 %v2_1b9eb)
  store i32 %v2_1ba0d, i32* %eax.global-to-local, align 8
  %v4_1ba12 = trunc i32 %v2_1ba0d to i8
  %v5_1ba12 = icmp eq i8 %v4_1ba12, 0
  br i1 %v5_1ba12, label %dec_label_pc_1ba62, label %dec_label_pc_1ba16

dec_label_pc_1ba16:                               ; preds = %dec_label_pc_1b9eb
  store i8 1, i8* %stack_var_-21, align 1
  %v2_1ba1a = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1ba1a, i32* %eax.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_1ba1a, i32* %stack_var_-112, align 4
  %v1_1ba3c = call i32 @unknown_3cb26(i32 %v2_1ba1a)
  %v2_1ba44 = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_1ba44, i32* %stack_var_-108, align 4
  store i32 %v2_1ba1a, i32* %stack_var_-112, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1ba58 = call i32 @unknown_3cc28(i32 %arg1)
  store i32 %v1_1ba58, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bb0b

dec_label_pc_1ba62:                               ; preds = %dec_label_pc_1b9eb
  store i32 %v2_1b9d6, i32* %eax.global-to-local, align 8
  store i32 %v2_1b9d6, i32* %stack_var_-112, align 4
  %v1_1ba68 = call i32 @unknown_3cc74(i32 %v2_1b9d6)
  store i32 %v1_1ba68, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ba6d

dec_label_pc_1ba6d:                               ; preds = %dec_label_pc_1ba62, %dec_label_pc_1b9cf
  %stack_var_-104.0 = phi i32 [ %stack_var_-28.0.lcssa, %dec_label_pc_1b9cf ], [ %arg2, %dec_label_pc_1ba62 ]
  %v1_1ba70 = load i32, i32* @esp, align 4
  %v2_1ba70 = add i32 %v1_1ba70, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1ba70 = inttoptr i32 %v2_1ba70 to i32*
  store i32 %arg3, i32* %v3_1ba70, align 4
  %v2_1ba74 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1ba74, i32* %eax.global-to-local, align 8
  %v1_1ba77 = load i32, i32* @esp, align 4
  %v2_1ba77 = inttoptr i32 %v1_1ba77 to i32*
  store i32 %v2_1ba74, i32* %v2_1ba77, align 4
  %v0_1ba7a = load i32, i32* %stack_var_-112, align 4
  %v1_1ba7a = load i32, i32* %stack_var_-108, align 4
  %v2_1ba7a = call i32 @unknown_3c9a4(i32 %v0_1ba7a, i32 %v1_1ba7a)
  store i32 %v2_1ba7a, i32* %ebx.global-to-local, align 4
  %v3_1ba81 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1ba81, i32* %eax.global-to-local, align 8
  %v1_1ba84 = load i32, i32* @esp, align 4
  %v2_1ba84 = inttoptr i32 %v1_1ba84 to i32*
  store i32 %v3_1ba81, i32* %v2_1ba84, align 4
  %v0_1ba87 = call i32 @unknown_3ccb3()
  store i32 %v0_1ba87, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v0_1ba91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ba91 = load i32, i32* @esp, align 4
  %v2_1ba91 = add i32 %v1_1ba91, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1ba91 = inttoptr i32 %v2_1ba91 to i32*
  store i32 %v0_1ba91, i32* %v3_1ba91, align 4
  %v0_1ba95 = load i32, i32* %edx.global-to-local, align 8
  %v1_1ba95 = load i32, i32* @esp, align 4
  %v2_1ba95 = add i32 %v1_1ba95, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1ba95 = inttoptr i32 %v2_1ba95 to i32*
  store i32 %v0_1ba95, i32* %v3_1ba95, align 4
  %v0_1ba99 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ba99 = load i32, i32* @esp, align 4
  %v2_1ba99 = inttoptr i32 %v1_1ba99 to i32*
  store i32 %v0_1ba99, i32* %v2_1ba99, align 4
  %v0_1ba9c = load i32, i32* %stack_var_-112, align 4
  %v1_1ba9c = load i32, i32* %stack_var_-108, align 4
  %v3_1ba9c = call i32 @unknown_3ca1c(i32 %v0_1ba9c, i32 %v1_1ba9c, i32 %stack_var_-104.0)
  store i32 %v3_1ba9c, i32* %eax.global-to-local, align 8
  %v4_1baa1 = trunc i32 %v3_1ba9c to i8
  %v5_1baa1 = icmp eq i8 %v4_1baa1, 0
  br i1 %v5_1baa1, label %dec_label_pc_1baee, label %dec_label_pc_1baa5

dec_label_pc_1baa5:                               ; preds = %dec_label_pc_1ba6d
  store i8 1, i8* %stack_var_-19, align 1
  %v2_1baa9 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1baa9, i32* %eax.global-to-local, align 8
  %v1_1baaf = load i32, i32* @esp, align 4
  %v2_1baaf = add i32 %v1_1baaf, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_1baaf = inttoptr i32 %v2_1baaf to i32*
  store i32 %arg3, i32* %v3_1baaf, align 4
  %v1_1bab6 = load i32, i32* @esp, align 4
  %v2_1bab6 = add i32 %v1_1bab6, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_1bab6 = inttoptr i32 %v2_1bab6 to i32*
  store i32 %stack_var_-28.0.lcssa, i32* %v3_1bab6, align 4
  %v1_1babd = load i32, i32* @esp, align 4
  %v2_1babd = add i32 %v1_1babd, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1babd = inttoptr i32 %v2_1babd to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v3_1babd, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1bac4 = load i32, i32* @esp, align 4
  %v2_1bac4 = add i32 %v1_1bac4, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1bac4 = inttoptr i32 %v2_1bac4 to i32*
  store i32 %arg2, i32* %v3_1bac4, align 4
  %v1_1bac8 = load i32, i32* @esp, align 4
  %v2_1bac8 = inttoptr i32 %v1_1bac8 to i32*
  store i32 %v2_1baa9, i32* %v2_1bac8, align 4
  %v2_1bacb = call i32 @unknown_3cb26(i32 1)
  %v0_1bad0 = load i32, i32* @esp, align 4
  %v1_1bad0 = sub i32 %v0_1bad0, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1bad3 = ptrtoint i8* %stack_var_-19 to i32
  %v2_1bad6 = add i32 %v1_1bad0, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1bad6 = inttoptr i32 %v2_1bad6 to i32*
  store i32 %v2_1bad3, i32* %v3_1bad6, align 4
  %v1_1badd = load i32, i32* @esp, align 4
  %v2_1badd = add i32 %v1_1badd, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1badd = inttoptr i32 %v2_1badd to i32*
  store i32 %v2_1baa9, i32* %v3_1badd, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1bae4 = load i32, i32* @esp, align 4
  %v2_1bae4 = inttoptr i32 %v1_1bae4 to i32*
  store i32 %arg1, i32* %v2_1bae4, align 4
  %v2_1bae7 = call i32 @unknown_3cc28(i32 1)
  store i32 %v2_1bae7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bb0b

dec_label_pc_1baee:                               ; preds = %dec_label_pc_1ba6d
  store i8 0, i8* %stack_var_-18, align 1
  %v2_1baf2 = ptrtoint i8* %stack_var_-18 to i32
  %v1_1baf5 = load i32, i32* @esp, align 4
  %v2_1baf5 = add i32 %v1_1baf5, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1baf5 = inttoptr i32 %v2_1baf5 to i32*
  store i32 %v2_1baf2, i32* %v3_1baf5, align 4
  %v1_1bafc = load i32, i32* @esp, align 4
  %v2_1bafc = add i32 %v1_1bafc, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1bafc = inttoptr i32 %v2_1bafc to i32*
  store i32 %v2_1b9d6, i32* %v3_1bafc, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1bb03 = load i32, i32* @esp, align 4
  %v2_1bb03 = inttoptr i32 %v1_1bb03 to i32*
  store i32 %arg1, i32* %v2_1bb03, align 4
  %v2_1bb06 = call i32 @unknown_3cc28(i32 0)
  store i32 %v2_1bb06, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bb0b

dec_label_pc_1bb0b:                               ; preds = %dec_label_pc_1baee, %dec_label_pc_1baa5, %dec_label_pc_1ba16
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_1bb18 = call i32 @function_1bb1f()
  store i32 %v1_1bb18, i32* %eax.global-to-local, align 8
  ret i32 %v1_1bb18

; uselistorder directives
  uselistorder i32 %v2_1ba1a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1b9eb, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1b9d6, { 6, 1, 0, 2, 4, 3, 5, 8, 7, 9 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 2, 1, 0 }
  uselistorder i32 %storemerge3.be, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0136, { 0, 5, 4, 6, 7, 1, 2, 3 }
  uselistorder i32 %v2_1b982, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 14, 15, 16, 17, 1, 27 }
  uselistorder i32 (i32)* @unknown_3cc28, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3cb26, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3ca1c, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3c9a4, { 1, 0 }
  uselistorder i32 %arg2, { 9, 8, 10, 5, 4, 3, 7, 6, 0, 13, 12, 11, 1, 2, 16, 15, 14 }
  uselistorder i32 %arg1, { 4, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b968, { 1, 0 }
}

define i32 @function_1bb1f() local_unnamed_addr {
dec_label_pc_1bb1f:
  %v0_1bb23 = load i32, i32* @eax, align 8
  ret i32 %v0_1bb23
}

define i32 @_ZNSt23_Rb_tree_const_iteratorI8CNetAddrEC1ERKSt17_Rb_tree_iteratorIS0_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb26:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1bb46 = inttoptr i32 %arg2 to i32*
  %v2_1bb46 = load i32, i32* %v1_1bb46, align 4
  store i32 %v2_1bb46, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1bb57 = call i32 @function_1bb5e(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1bb57
}

define i32 @function_1bb5e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb5e:
  %v0_1bb5f = load i32, i32* @eax, align 8
  ret i32 %v0_1bb5f
}

define i32 @_ZNSt4pairISt23_Rb_tree_const_iteratorI8CNetAddrEbEC1ERKS2_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb60:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_1bb89 = inttoptr i32 %arg2 to i32*
  %v2_1bb89 = load i32, i32* %v1_1bb89, align 4
  store i32 %v2_1bb89, i32* %arg1, align 4
  %v2_1bb90 = load i8, i8* %tmp103, align 1
  %v3_1bb96 = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_1bb96 = inttoptr i32 %v3_1bb96 to i8*
  store i8 %v2_1bb90, i8* %v4_1bb96, align 1
  store i32 0, i32* @eax, align 8
  %v5_1bba3 = call i32 @function_1bbaa(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_1bba3
}

define i32 @function_1bbaa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bbaa:
  %v0_1bbab = load i32, i32* @eax, align 8
  ret i32 %v0_1bbab
}

define i32 @_ZNKSt6vectorIxSaIxEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bbac:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_1bbc6 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1bbc6 = inttoptr i32 %v1_1bbc6 to i32*
  %v3_1bbc6 = load i32, i32* %v2_1bbc6, align 4
  %v2_1bbce = load i32, i32* %arg1, align 4
  %v2_1bbd2 = sub i32 %v3_1bbc6, %v2_1bbce
  %v2_1bbd6 = ashr i32 %v2_1bbd2, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v2_1bbd6, i32* @eax, align 8
  %v2_1bbe3 = call i32 @function_1bbea(i32 %tmp99)
  ret i32 %v2_1bbe3
}

define i32 @function_1bbea(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bbea:
  %v0_1bbeb = load i32, i32* @eax, align 8
  ret i32 %v0_1bbeb
}

define i32 @_ZNSt6vectorIxSaIxEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bbec:
  %v2_1bc16 = call i32 @unknown_3cfc2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1bc28 = call i32 @function_1bc2f()
  ret i32 %v1_1bc28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bc2f() local_unnamed_addr {
dec_label_pc_1bc2f:
  %v0_1bc30 = load i32, i32* @eax, align 8
  ret i32 %v0_1bc30
}

define i32 @_ZNSt6vectorIxSaIxEE5eraseEN9__gnu_cxx17__normal_iteratorIPxS1_EE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bc34:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_1bc57 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1bc57, i32* @eax, align 8
  %v2_1bc64 = call i32 @function_37a44(i32 %v2_1bc57, i32 %arg2)
  store i32 1, i32* %stack_var_-40, align 4
  %v2_1bc73 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1bc73, i32* %eax.global-to-local, align 8
  %v2_1bc76 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1bc7d = ptrtoint i32* %stack_var_-56 to i32
  %v3_1bc87 = call i32 @unknown_3d044(i32 %v2_1bc73, i32 %v2_1bc7d, i32 %v2_1bc76)
  store i32 %v2_1bc73, i32* %eax.global-to-local, align 8
  %v2_1bc9c = call i32 @unknown_3d0a3(i32 %v2_1bc73, i32 %v2_1bc57)
  store i32 %v2_1bc9c, i32* %eax.global-to-local, align 8
  %v4_1bca1 = trunc i32 %v2_1bc9c to i8
  %v5_1bca1 = icmp eq i8 %v4_1bca1, 0
  br i1 %v5_1bca1, label %dec_label_pc_1bd00, label %dec_label_pc_1bca5

dec_label_pc_1bca5:                               ; preds = %dec_label_pc_1bc34
  %v2_1bca5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1bca5, i32* @eax, align 8
  %v2_1bcb2 = call i32 @function_37a44(i32 %v2_1bca5, i32 %arg2)
  store i32 1, i32* %stack_var_-32, align 4
  %v2_1bcc1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1bcc1, i32* %eax.global-to-local, align 8
  %v2_1bcc4 = ptrtoint i32* %stack_var_-32 to i32
  %v3_1bcd5 = call i32 @unknown_3d044(i32 %v2_1bcc1, i32 %v2_1bc7d, i32 %v2_1bcc4)
  %v2_1bcdd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1bcdd, i32* @eax, align 8
  %v3_1bce0 = load i32, i32* %stack_var_-56, align 4
  %v3_1bce7 = load i32, i32* %stack_var_-24, align 4
  %v3_1bcee = load i32, i32* %stack_var_-28, align 4
  %v4_1bcf8 = call i32 @function_37a8e(i32 %v2_1bcdd, i32 %v3_1bcee, i32 %v3_1bce7, i32 %v3_1bce0)
  store i32 %v4_1bcf8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1bd00

dec_label_pc_1bd00:                               ; preds = %dec_label_pc_1bca5, %dec_label_pc_1bc34
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_1bd03 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1bd03 = inttoptr i32 %v1_1bd03 to i32*
  %v3_1bd03 = load i32, i32* %v2_1bd03, align 4
  %v1_1bd06 = add i32 %v3_1bd03, -8
  store i32 %v1_1bd06, i32* %v2_1bd03, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v3_1bd12 = load i32, i32* %v2_1bd03, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_1bd18 = load i32, i32* @esp, align 4
  %v2_1bd18 = add i32 %v1_1bd18, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1bd18 = inttoptr i32 %v2_1bd18 to i32*
  store i32 %v3_1bd12, i32* %v3_1bd18, align 4
  %v0_1bd1c = load i32, i32* %eax.global-to-local, align 8
  %v1_1bd1c = load i32, i32* @esp, align 4
  %v2_1bd1c = inttoptr i32 %v1_1bd1c to i32*
  store i32 %v0_1bd1c, i32* %v2_1bd1c, align 4
  %v0_1bd1f = call i32 @unknown_3d0f8()
  %v3_1bd27 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1bd27, i32* %arg1, align 4
  store i32 %tmp117, i32* @eax, align 8
  %v1_1bd39 = call i32 @function_1bd40()
  store i32 %v1_1bd39, i32* %eax.global-to-local, align 8
  ret i32 %v1_1bd39

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_3d044, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_37a44, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 3, 0, 5 }
}

define i32 @function_1bd40() local_unnamed_addr {
dec_label_pc_1bd40:
  %v0_1bd41 = load i32, i32* @eax, align 8
  ret i32 %v0_1bd41
}

define i32 @_ZNSt6vectorIxSaIxEE6resizeEjx(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bd44:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %stack_var_-44, align 4
  store i32 %tmp110, i32* @eax, align 8
  %v1_1bd74 = call i32 @function_378f0(i32 %tmp110)
  %v10_1bd79 = icmp ult i32 %v1_1bd74, %arg2
  %v5_1bd7f = icmp eq i1 %v10_1bd79, false
  store i32 %tmp110, i32* @eax, align 8
  %v1_1bdcf = call i32 @function_378f0(i32 %tmp110)
  br i1 %v5_1bd7f, label %dec_label_pc_1bdc9, label %dec_label_pc_1bd83

dec_label_pc_1bd83:                               ; preds = %dec_label_pc_1bd44
  %v2_1bd93 = sub i32 %arg2, %v1_1bdcf
  %v2_1bd95 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1bd95, i32* @eax, align 8
  %v2_1bda2 = call i32 @function_37b54(i32 %v2_1bd95, i32 %tmp110)
  %v2_1bdaa = ptrtoint i32* %stack_var_-44 to i32
  %v3_1bdb5 = load i32, i32* %stack_var_-20, align 4
  %v4_1bdc2 = call i32 @unknown_3d238(i32 %tmp110, i32 %v3_1bdb5, i32 %v2_1bd93, i32 %v2_1bdaa)
  br label %dec_label_pc_1bdfa

dec_label_pc_1bdc9:                               ; preds = %dec_label_pc_1bd44
  %tmp115 = icmp ule i32 %v1_1bdcf, %arg2
  %v3_1bdd7 = icmp ne i1 %tmp115, true
  %v5_1bdda = icmp eq i1 %v3_1bdd7, false
  br i1 %v5_1bdda, label %dec_label_pc_1bdfa, label %dec_label_pc_1bdde

dec_label_pc_1bdde:                               ; preds = %dec_label_pc_1bdc9
  %v2_1bde1 = load i32, i32* %arg1, align 4
  %v2_1bde6 = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_1bde9 = add i32 %v2_1bde1, %v2_1bde6
  %v2_1bdf5 = call i32 @unknown_3d294(i32 %tmp110, i32 %v2_1bde9)
  br label %dec_label_pc_1bdfa

dec_label_pc_1bdfa:                               ; preds = %dec_label_pc_1bdde, %dec_label_pc_1bdc9, %dec_label_pc_1bd83
  store i32 0, i32* @eax, align 8
  %v1_1be04 = call i32 @function_1be0b()
  ret i32 %v1_1be04

; uselistorder directives
  uselistorder i32 %tmp110, { 2, 0, 1, 4, 3, 6, 5 }
  uselistorder i32 (i32)* @function_378f0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_1be0b() local_unnamed_addr {
dec_label_pc_1be0b:
  %v0_1be0f = load i32, i32* @eax, align 8
  ret i32 %v0_1be0f
}

define i32 @_ZNSt6vectorIxSaIxEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1be10:
  %v1_1be30 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1be3d = call i32 @unknown_3d1e6(i32 %arg1, i32 %v1_1be30)
  store i32 %arg1, i32* @eax, align 8
  %v1_1be4f = call i32 @function_1be56()
  ret i32 %v1_1be4f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1be56() local_unnamed_addr {
dec_label_pc_1be56:
  %v0_1be57 = load i32, i32* @eax, align 8
  ret i32 %v0_1be57
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1be5a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1be83 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1be90 = call i32 @unknown_3d407(i32 %v2_1be83, i32 %arg3)
  %v2_1be98 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1bea5 = call i32 @unknown_3d407(i32 %v2_1be98, i32 %arg2)
  %v3_1beb7 = load i32, i32* %stack_var_-20, align 4
  %v3_1bebe = load i32, i32* %stack_var_-24, align 4
  %v4_1bec8 = call i32 @unknown_3d451(i32 %arg1, i32 %v3_1bebe, i32 %v3_1beb7, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  %v1_1bedd = call i32 @function_1bee4()
  ret i32 %v1_1bedd

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3d407, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bee4() local_unnamed_addr {
dec_label_pc_1bee4:
  %v0_1bee5 = load i32, i32* @eax, align 8
  ret i32 %v0_1bee5
}

define i32 @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bee8:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1bf08 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1bf0c = ptrtoint i32* %stack_var_-32 to i32
  %v2_1bf12 = call i32 @unknown_3d357(i32 %v2_1bf0c, i32 %v4_1bf08)
  %v4_1bf17 = trunc i32 %v2_1bf12 to i8
  %v5_1bf17 = icmp eq i8 %v4_1bf17, 0
  br i1 %v5_1bf17, label %dec_label_pc_1bf5f, label %dec_label_pc_1bf1b

dec_label_pc_1bf1b:                               ; preds = %dec_label_pc_1bee8
  %v2_1bf28 = call i32 @unknown_3d571(i32 %v4_1bf08, i32 %v2_1bf0c)
  store i32 %v2_1bf28, i32* @eax, align 8
  %v1_1bf30 = call i32 @function_2135b(i32 %v2_1bf28)
  %v2_1bf35 = mul i32 %v1_1bf30, 2
  %v3_1bf3b = load i32, i32* %stack_var_-36, align 4
  %v3_1bf42 = load i32, i32* %stack_var_-32, align 4
  %v3_1bf48 = call i32 @unknown_3d5cb(i32 %v3_1bf42, i32 %v3_1bf3b, i32 %v2_1bf35)
  %v3_1bf4d = load i32, i32* %stack_var_-36, align 4
  %v3_1bf54 = load i32, i32* %stack_var_-32, align 4
  %v2_1bf5a = call i32 @unknown_3d67f(i32 %v3_1bf54, i32 %v3_1bf4d)
  br label %dec_label_pc_1bf5f

dec_label_pc_1bf5f:                               ; preds = %dec_label_pc_1bf1b, %dec_label_pc_1bee8
  store i32 0, i32* @eax, align 8
  %v1_1bf69 = call i32 @function_1bf70()
  ret i32 %v1_1bf69
}

define i32 @function_1bf70() local_unnamed_addr {
dec_label_pc_1bf70:
  %v0_1bf71 = load i32, i32* @eax, align 8
  ret i32 %v0_1bf71
}

define i32 @_ZNKSt6vectorIxSaIxEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf72:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_1bf92 = load i32, i32* %arg1, align 4
  %v2_1bf97 = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_1bf9a = add i32 %v2_1bf92, %v2_1bf97
  store i32 %v2_1bf9a, i32* @eax, align 8
  %v3_1bfa6 = call i32 @function_1bfad(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1bfa6
}

define i32 @function_1bfad(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bfad:
  %v0_1bfae = load i32, i32* @eax, align 8
  ret i32 %v0_1bfae
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bfb0:
  %v1_1bfcd = call i32 @unknown_3d812(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1bfdc = call i32 @function_1bfe3()
  ret i32 %v1_1bfdc
}

define i32 @function_1bfe3() local_unnamed_addr {
dec_label_pc_1bfe3:
  %v0_1bfe4 = load i32, i32* @eax, align 8
  ret i32 %v0_1bfe4
}

define i32 @_ZNSt12_Vector_baseIxSaIxEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bfe6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1c001 = add i32 %tmp101, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1c001 = inttoptr i32 %v1_1c001 to i32*
  %v3_1c001 = load i32, i32* %v2_1c001, align 4
  %v2_1c009 = load i32, i32* %arg1, align 4
  %v2_1c00d = sub i32 %v3_1c001, %v2_1c009
  %v2_1c011 = ashr i32 %v2_1c00d, ptrtoint (i32* @global_var_3.2378 to i32)
  %v3_1c029 = call i32 @unknown_3af56(i32 %tmp101, i32 %v2_1c009, i32 %v2_1c011)
  %v1_1c034 = call i32 @__stack_chk_fail.1392(i32 %tmp101)
  store i32 0, i32* @eax, align 8
  %v1_1c043 = call i32 @function_1c063()
  store i32 %v1_1c043, i32* @eax, align 8
  %v0_1c045 = call i32 @function_1c05e()
  ret i32 %v0_1c045

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1c048() local_unnamed_addr {
dec_label_pc_1c048:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c048 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c048
}

define i32 @function_1c05e() local_unnamed_addr {
dec_label_pc_1c05e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c063() local_unnamed_addr {
dec_label_pc_1c063:
  %v0_1c068 = load i32, i32* @eax, align 8
  ret i32 %v0_1c068
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c06a:
  store i32 %arg1, i32* @eax, align 8
  %v2_1c08e = call i32 @function_1c095(i32 %arg1)
  ret i32 %v2_1c08e
}

define i32 @function_1c095(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c095:
  %v0_1c096 = load i32, i32* @eax, align 8
  ret i32 %v0_1c096
}

define i32 @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c097:
  %v2_1c0c7 = call i32 @unknown_3d92e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1c0d6 = call i32 @function_1c0dd()
  ret i32 %v1_1c0d6
}

define i32 @function_1c0dd() local_unnamed_addr {
dec_label_pc_1c0dd:
  %v0_1c0de = load i32, i32* @eax, align 8
  ret i32 %v0_1c0de
}

define i32 @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c0e0:
  store i32 %arg1, i32* @eax, align 8
  %v2_1c104 = call i32 @function_1c10b(i32 %arg1)
  ret i32 %v2_1c104
}

define i32 @function_1c10b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c10b:
  %v0_1c10c = load i32, i32* @eax, align 8
  ret i32 %v0_1c10c
}

define i32 @_ZNSt12_Vector_baseIxSaIxEEC1EjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c10e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1c13f = call i32 @unknown_3d9e8(i32 %tmp104, i32 %arg3)
  %v2_1c151 = call i32 @unknown_3da48(i32 %tmp104, i32 %arg2)
  store i32 %v2_1c151, i32* %arg1, align 4
  %v2_1c165 = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1c165 = inttoptr i32 %v2_1c165 to i32*
  store i32 %v2_1c151, i32* %v3_1c165, align 4
  %v2_1c16b = load i32, i32* %arg1, align 4
  %v2_1c170 = shl i32 %arg2, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_1c173 = add i32 %v2_1c16b, %v2_1c170
  %v2_1c178 = add i32 %tmp104, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1c178 = inttoptr i32 %v2_1c178 to i32*
  store i32 %v2_1c173, i32* %v3_1c178, align 4
  store i32 0, i32* @eax, align 8
  %v1_1c185 = call i32 @function_1c1a5()
  store i32 %v1_1c185, i32* @eax, align 8
  %v0_1c187 = call i32 @function_1c1a0()
  ret i32 %v0_1c187

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1c18a() local_unnamed_addr {
dec_label_pc_1c18a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c18a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c18a
}

define i32 @function_1c1a0() local_unnamed_addr {
dec_label_pc_1c1a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c1a5() local_unnamed_addr {
dec_label_pc_1c1a5:
  %v0_1c1aa = load i32, i32* @eax, align 8
  ret i32 %v0_1c1aa
}

define i32 @_ZNKSt6vectorIxSaIxEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c1ac:
  %stack_var_-20 = alloca i32, align 4
  %v2_1c1cc = load i32, i32* %arg2, align 4
  store i32 %v2_1c1cc, i32* %stack_var_-20, align 4
  %v2_1c1d1 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1c1de = call i32 @unknown_3db3e(i32 %arg1, i32 %v2_1c1d1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1c1f0 = call i32 @function_1c1f7()
  ret i32 %v1_1c1f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c1f7() local_unnamed_addr {
dec_label_pc_1c1f7:
  %v0_1c1f8 = load i32, i32* @eax, align 8
  ret i32 %v0_1c1f8
}

define i32 @_ZNKSt6vectorIxSaIxEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c1fc:
  %stack_var_-20 = alloca i32, align 4
  %v1_1c21c = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1c21c = inttoptr i32 %v1_1c21c to i32*
  %v3_1c21c = load i32, i32* %v2_1c21c, align 4
  store i32 %v3_1c21c, i32* %stack_var_-20, align 4
  %v2_1c222 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1c22f = call i32 @unknown_3db8e(i32 %arg1, i32 %v2_1c222)
  store i32 %arg1, i32* @eax, align 8
  %v1_1c241 = call i32 @function_1c248()
  ret i32 %v1_1c241

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c248() local_unnamed_addr {
dec_label_pc_1c248:
  %v0_1c249 = load i32, i32* @eax, align 8
  ret i32 %v0_1c249
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c24c:
  %v7_1c289 = call i32 @unknown_3dc18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1c289, i32* @eax, align 8
  %v1_1c298 = call i32 @function_1c29f()
  ret i32 %v1_1c298

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c29f() local_unnamed_addr {
dec_label_pc_1c29f:
  %v0_1c2a0 = load i32, i32* @eax, align 8
  ret i32 %v0_1c2a0
}

define i32 @_ZN5boost9addressofISt6vectorIxSaIxEEEEPT_RS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c2a1:
  %stack_var_-20 = alloca i32, align 4
  %v2_1c2bf = ptrtoint i32* %stack_var_-20 to i32
  %v2_1c2c5 = call i32 @unknown_3dcbd(i32 %v2_1c2bf, i32 %arg1)
  %v1_1c2d0 = call i32 @unknown_3dcf5(i32 %v2_1c2bf)
  %v2_1c2e0 = call i32 @unknown_3dd24(i32 %v1_1c2d0, i32 0)
  store i32 %v2_1c2e0, i32* @eax, align 8
  %v1_1c2ef = call i32 @function_1c2f6()
  ret i32 %v1_1c2ef
}

define i32 @function_1c2f6() local_unnamed_addr {
dec_label_pc_1c2f6:
  %v0_1c2f7 = load i32, i32* @eax, align 8
  ret i32 %v0_1c2f7
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorIxSaIxEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c2f8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1c323 = inttoptr i32 %arg2 to i32*
  %v2_1c323 = load i32, i32* %v1_1c323, align 4
  store i32 %v2_1c323, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_1c334 = call i32 @function_1c33b(i32 %tmp101)
  ret i32 %v2_1c334
}

define i32 @function_1c33b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c33b:
  %v0_1c33c = load i32, i32* @eax, align 8
  ret i32 %v0_1c33c
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorIxSaIxEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SC_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c33d:
  store i32 %arg1, i32* @eax, align 8
  %v2_1c361 = call i32 @function_1c368(i32 %arg1)
  ret i32 %v2_1c361
}

define i32 @function_1c368(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c368:
  %v0_1c369 = load i32, i32* @eax, align 8
  ret i32 %v0_1c369
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorIxSaIxEEEERT_PS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c36a:
  store i32 %arg1, i32* @eax, align 8
  %v2_1c38e = call i32 @function_1c395(i32 %arg1)
  ret i32 %v2_1c38e
}

define i32 @function_1c395(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c395:
  %v0_1c396 = load i32, i32* @eax, align 8
  ret i32 %v0_1c396
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorIxSaIxEEEENS_14range_iteratorIT_E4typeERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c397:
  %v2_1c3c1 = call i32 @unknown_3de4d(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1c3d6 = call i32 @function_1c3dd()
  ret i32 %v1_1c3d6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c3dd() local_unnamed_addr {
dec_label_pc_1c3dd:
  %v0_1c3de = load i32, i32* @eax, align 8
  ret i32 %v0_1c3de
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEC1ERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c3e2:
  %v2_1c405 = call i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1)
  %v1_1c410 = inttoptr i32 %arg2 to i32*
  %v2_1c410 = load i32, i32* %v1_1c410, align 4
  store i32 %v2_1c410, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_1c41e = call i32 @function_1c425()
  ret i32 %v1_1c41e
}

define i32 @function_1c425() local_unnamed_addr {
dec_label_pc_1c425:
  %v0_1c426 = load i32, i32* @eax, align 8
  ret i32 %v0_1c426
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorIxSaIxEEEENS_14range_iteratorIT_E4typeERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c427:
  %v2_1c451 = call i32 @unknown_3df27(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1c466 = call i32 @function_1c46d()
  ret i32 %v1_1c466

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c46d() local_unnamed_addr {
dec_label_pc_1c46d:
  %v0_1c46e = load i32, i32* @eax, align 8
  ret i32 %v0_1c46e
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SF_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c471:
  ret i32 %arg1
}

define i32 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c49e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1c4a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c4c2 = call i32 @unknown_3dfe8(i32 %arg1)
  %v1_1c4c7 = inttoptr i32 %v1_1c4c2 to i32*
  %v2_1c4c7 = load i32, i32* %v1_1c4c7, align 4
  store i32 %v2_1c4c7, i32* %ebx.global-to-local, align 4
  %v1_1c4cf = call i32 @unknown_3dfe8(i32 %arg2)
  %v1_1c4d4 = inttoptr i32 %v1_1c4cf to i32*
  %v2_1c4d4 = load i32, i32* %v1_1c4d4, align 4
  %v12_1c4d6 = icmp eq i32 %v2_1c4c7, %v2_1c4d4
  %v1_1c4d8 = zext i1 %v12_1c4d6 to i32
  %v3_1c4d8 = and i32 %v2_1c4d4, -256
  %v4_1c4d8 = or i32 %v1_1c4d8, %v3_1c4d8
  store i32 %v0_1c4a1, i32* %ebx.global-to-local, align 4
  ret i32 %v4_1c4d8

; uselistorder directives
  uselistorder i32 %v2_1c4d4, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c4f2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1c50c = load i32, i32* %arg1, align 4
  %v1_1c50e = add i32 %v2_1c50c, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_1c50e, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_1c523 = call i32 @function_1c52a(i32 %tmp99)
  ret i32 %v2_1c523
}

define i32 @function_1c52a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c52a:
  %v0_1c52b = load i32, i32* @eax, align 8
  ret i32 %v0_1c52b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c52c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1c546 = load i32, i32* %arg1, align 4
  store i32 %v2_1c546, i32* @eax, align 8
  %v2_1c552 = call i32 @function_1c559(i32 %tmp99)
  ret i32 %v2_1c552
}

define i32 @function_1c559(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c559:
  %v0_1c55a = load i32, i32* @eax, align 8
  ret i32 %v0_1c55a
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c55c:
  %v2_1c576 = load i32, i32* %arg1, align 4
  %v1_1c578 = icmp eq i32 %v2_1c576, 0
  %v1_1c57a = icmp eq i1 %v1_1c578, false
  br i1 %v1_1c57a, label %bb, label %dec_label_pc_1c57c

bb:                                               ; preds = %dec_label_pc_1c55c
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1c57a = call i32 @function_1c5a0(i32 %tmp105)
  br label %dec_label_pc_1c57c

dec_label_pc_1c57c:                               ; preds = %bb, %dec_label_pc_1c55c
  %v3_1c594 = phi i32 [ %v3_1c57a, %bb ], [ %v2_1c576, %dec_label_pc_1c55c ]
  ret i32 %v3_1c594

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c5a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5a0:
  %v0_1c5a0 = load i32, i32* @ebp, align 4
  %v1_1c5a0 = add i32 %v0_1c5a0, -28
  %v2_1c5a0 = inttoptr i32 %v1_1c5a0 to i32*
  %v3_1c5a0 = load i32, i32* %v2_1c5a0, align 4
  %v1_1c5a3 = inttoptr i32 %v3_1c5a0 to i32*
  %v2_1c5a3 = load i32, i32* %v1_1c5a3, align 4
  store i32 %v2_1c5a3, i32* @eax, align 8
  %v1_1c5a5 = add i32 %v0_1c5a0, -12
  %v2_1c5a5 = inttoptr i32 %v1_1c5a5 to i32*
  %v3_1c5a5 = load i32, i32* %v2_1c5a5, align 4
  %v3_1c5a8 = icmp eq i32 %v3_1c5a5, 30
  br i1 %v3_1c5a8, label %bb, label %dec_label_pc_1c5b1

bb:                                               ; preds = %dec_label_pc_1c5a0
  %v1_1c5af = call i32 @function_1c5b6()
  br label %dec_label_pc_1c5b1

dec_label_pc_1c5b1:                               ; preds = %bb, %dec_label_pc_1c5a0
  %v2_1c5af = phi i32 [ %v1_1c5af, %bb ], [ %v2_1c5a3, %dec_label_pc_1c5a0 ]
  ret i32 %v2_1c5af
}

define i32 @function_1c5b6() local_unnamed_addr {
dec_label_pc_1c5b6:
  %v0_1c5b7 = load i32, i32* @eax, align 8
  ret i32 %v0_1c5b7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5b8:
  %v1_1c5d2 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1c5d2, i32* @eax, align 8
  %v1_1c5d8 = call i32 @function_2caba(i32 %v1_1c5d2)
  store i32 0, i32* @eax, align 8
  %v1_1c5e7 = call i32 @function_1c5ee()
  ret i32 %v1_1c5e7
}

define i32 @function_1c5ee() local_unnamed_addr {
dec_label_pc_1c5ee:
  %v0_1c5ef = load i32, i32* @eax, align 8
  ret i32 %v0_1c5ef
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5f0:
  %v1_1c60b = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1c60b, i32* @eax, align 8
  %v1_1c611 = call i32 @function_3a82c(i32 %v1_1c60b)
  %v1_1c61c = call i32 @unknown_3e4ee(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1c62b = call i32 @function_1c64b()
  store i32 %v1_1c62b, i32* @eax, align 8
  %v0_1c62d = call i32 @function_1c646()
  ret i32 %v0_1c62d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c630() local_unnamed_addr {
dec_label_pc_1c630:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c630 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c630
}

define i32 @function_1c646() local_unnamed_addr {
dec_label_pc_1c646:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c64b() local_unnamed_addr {
dec_label_pc_1c64b:
  %v0_1c650 = load i32, i32* @eax, align 8
  ret i32 %v0_1c650
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEEclES4_S4_j(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c652:
  %stack_var_-173 = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-232 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-284, align 4
  %v2_1c68b = ptrtoint i32* %stack_var_-208 to i32
  %v1_1c694 = call i32 @unknown_3e1ca(i32 %v2_1c68b)
  %v2_1c699 = ptrtoint i32* %stack_var_-200 to i32
  %v1_1c6a2 = call i32 @unknown_3e20c(i32 %v2_1c699)
  %v1_1c6ad = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v11_1c6ad = icmp slt i32 %v1_1c6ad, 0
  store i1 %v11_1c6ad, i1* @sf, align 1
  %v2_1c6b4 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1c6b4, i32* @eax, align 8
  %v2_1c6bd = call i32 @function_3a4e6(i32 %v2_1c6b4, i32 %v1_1c6ad)
  %v1_1c6cb = call i32 @unknown_3e240(i32 %arg1)
  %v4_1c6d0 = trunc i32 %v1_1c6cb to i8
  %v5_1c6d0 = icmp eq i8 %v4_1c6d0, 0
  br i1 %v5_1c6d0, label %dec_label_pc_1c6f2, label %dec_label_pc_1c6d4

dec_label_pc_1c6d4:                               ; preds = %dec_label_pc_1c652
  %v3_1c6ed = call i32 @unknown_3e278(i32 %arg1, i32 0, i32 1)
  br label %dec_label_pc_1c6f2

dec_label_pc_1c6f2:                               ; preds = %dec_label_pc_1c6d4, %dec_label_pc_1c652
  %v2_1c705 = call i32 @unknown_3e3d8(i32 %v2_1c68b, i32 %arg1)
  %v1_1c713 = call i32 @function_3a536(i32 %v2_1c6b4)
  %v2_1c718 = ptrtoint i32* %stack_var_-284 to i32
  %v2_1c736 = ptrtoint i32* %stack_var_-232 to i32
  %v4_1c73f = call i32 @unknown_3e458(i32 %v2_1c736, i32 %arg2, i32 %arg3, i32 %v2_1c718)
  %v2_1c74e = ptrtoint i32* %stack_var_-172 to i32
  %v2_1c757 = call i32 @unknown_3e4ae(i32 %v2_1c74e, i32 %v2_1c736)
  %v1_1c765 = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c76d = call i32 @unknown_3e5e2(i32 %v1_1c765)
  %v2_1c78a = ptrtoint i32* %stack_var_-220 to i32
  %v4_1c793 = call i32 @unknown_3e618(i32 %v2_1c78a, i32 %v2_1c74e, i32 %arg1, i32 %v1_1c76d)
  %v1_1c7a1 = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c7a9 = call i32 @unknown_3e5e2(i32 %v1_1c7a1)
  %v2_1c7b0 = ptrtoint i32* %stack_var_-180 to i32
  %v2_1c7bd = call i32 @unknown_3e74c(i32 %v2_1c7b0, i32 %v1_1c7a9)
  %v1_1c7ce = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c7d6 = call i32 @unknown_3e5e2(i32 %v1_1c7ce)
  %v2_1c7dd = ptrtoint i32* %stack_var_-184 to i32
  %v2_1c7ea = call i32 @unknown_3e74c(i32 %v2_1c7dd, i32 %v1_1c7d6)
  %v3_1c7fc = load i32, i32* %stack_var_-180, align 4
  %v3_1c806 = load i32, i32* %stack_var_-184, align 4
  %v2_1c810 = ptrtoint i32* %stack_var_-248 to i32
  %v4_1c819 = call i32 @unknown_3e7c0(i32 %v2_1c810, i32 %v3_1c806, i32 %v3_1c7fc, i32 %v2_1c74e)
  %v1_1c827 = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c82f = call i32 @unknown_3e5e2(i32 %v1_1c827)
  %v2_1c836 = ptrtoint i32* %stack_var_-188 to i32
  %v2_1c843 = call i32 @unknown_3e74c(i32 %v2_1c836, i32 %v1_1c82f)
  %v1_1c854 = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c85c = call i32 @unknown_3e5e2(i32 %v1_1c854)
  %v2_1c863 = ptrtoint i32* %stack_var_-192 to i32
  %v2_1c870 = call i32 @unknown_3e702(i32 %v2_1c863, i32 %v1_1c85c)
  %v3_1c882 = load i32, i32* %stack_var_-188, align 4
  %v3_1c88c = load i32, i32* %stack_var_-192, align 4
  %v2_1c896 = ptrtoint i32* %stack_var_-264 to i32
  %v4_1c89f = call i32 @unknown_3e7c0(i32 %v2_1c896, i32 %v3_1c88c, i32 %v3_1c882, i32 %v2_1c74e)
  %v1_1c8ad = call i32 @unknown_3e586(i32 %v2_1c68b)
  %v1_1c8b5 = call i32 @unknown_3e6ca(i32 %v1_1c8ad)
  %v3_1c8ba = load i32, i32* %stack_var_-248, align 4
  %v3_1c8e2 = load i32, i32* %stack_var_-264, align 4
  %v2_1c90e = ptrtoint i32* %stack_var_-173 to i32
  %v10_1c917 = call i32 @unknown_3e836(i32 %v2_1c90e, i32 %v1_1c8b5, i32 %v3_1c8e2, i32 %tmp100, i32 %tmp99, i32 %tmp98, i32 %v3_1c8ba, i32 %tmp105, i32 %tmp104, i32 %tmp102)
  %v1_1c927 = call i32 @unknown_3e66e(i32 %v2_1c78a)
  store i32 %v2_1c74e, i32* @eax, align 8
  %v1_1c935 = call i32 @function_38c42(i32 %v2_1c74e)
  store i32 %v2_1c68b, i32* @eax, align 8
  %v1_1c943 = call i32 @function_38c0a(i32 %v2_1c68b)
  store i32 %v10_1c917, i32* @eax, align 8
  %v1_1c954 = call i32 @function_1c9ad()
  store i32 %v1_1c954, i32* @eax, align 8
  %v0_1c956 = call i32 @function_1c9a8()
  ret i32 %v0_1c956

; uselistorder directives
  uselistorder i32 %v2_1c74e, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_3e7c0, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3e74c, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3e5e2, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3e586, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
}

define i32 @function_1c958() local_unnamed_addr {
dec_label_pc_1c958:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c958 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c958, i32* @ebx, align 4
  %v0_1c95a = load i32, i32* @ebp, align 4
  %v1_1c95a = add i32 %v0_1c95a, -192
  store i32 %v1_1c95a, i32* %eax.global-to-local, align 8
  %v1_1c963 = call i32 @function_3a536(i32 %v1_1c95a)
  store i32 %v1_1c963, i32* %eax.global-to-local, align 8
  %v0_1c968 = call i32 @function_1c990()
  store i32 %v0_1c968, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c968

; uselistorder directives
  uselistorder i32 (i32)* @function_3a536, { 1, 0 }
}

define i32 @function_1c96a() local_unnamed_addr {
dec_label_pc_1c96a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c96a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c96a, i32* @ebx, align 4
  %v0_1c96c = load i32, i32* @ebp, align 4
  %v1_1c96c = add i32 %v0_1c96c, -216
  store i32 %v1_1c96c, i32* %eax.global-to-local, align 8
  %v1_1c975 = call i32 @unknown_3e66e(i32 %v1_1c96c)
  store i32 %v1_1c975, i32* %eax.global-to-local, align 8
  %v0_1c97a = call i32 @function_1c97e()
  store i32 %v0_1c97a, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c97a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3e66e, { 1, 0 }
}

define i32 @function_1c97c() local_unnamed_addr {
dec_label_pc_1c97c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c97c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c97c
}

define i32 @function_1c97e() local_unnamed_addr {
dec_label_pc_1c97e:
  %v0_1c97e = load i32, i32* @ebp, align 4
  %v1_1c97e = add i32 %v0_1c97e, -168
  store i32 %v1_1c97e, i32* @eax, align 8
  %v1_1c987 = call i32 @function_38c42(i32 %v1_1c97e)
  %v0_1c98c = call i32 @function_1c990()
  ret i32 %v0_1c98c

; uselistorder directives
  uselistorder i32 ()* @function_1c990, { 1, 0 }
  uselistorder i32 (i32)* @function_38c42, { 1, 0 }
}

define i32 @function_1c98f() local_unnamed_addr {
dec_label_pc_1c98f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c98f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c98f
}

define i32 @function_1c990() local_unnamed_addr {
dec_label_pc_1c990:
  %v0_1c990 = load i32, i32* @ebp, align 4
  %v1_1c990 = add i32 %v0_1c990, -204
  store i32 %v1_1c990, i32* @eax, align 8
  %v1_1c999 = call i32 @function_38c0a(i32 %v1_1c990)
  %v0_1c99e = load i32, i32* @ebx, align 4
  ret i32 %v0_1c99e

; uselistorder directives
  uselistorder i32 (i32)* @function_38c0a, { 1, 0 }
}

define i32 @function_1c9a8() local_unnamed_addr {
dec_label_pc_1c9a8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1c9ad() local_unnamed_addr {
dec_label_pc_1c9ad:
  %v0_1c9b1 = load i32, i32* @eax, align 8
  ret i32 %v0_1c9b1
}

define i32 @_ZN9__gnu_cxxeqIPKSsSt6vectorISsSaISsEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c9b2:
  %v1_1c9d6 = call i32 @unknown_3ec3a(i32 %arg1)
  %v1_1c9db = inttoptr i32 %v1_1c9d6 to i32*
  %v2_1c9db = load i32, i32* %v1_1c9db, align 4
  %v1_1c9e3 = call i32 @unknown_3ec3a(i32 %arg2)
  %v1_1c9e8 = inttoptr i32 %v1_1c9e3 to i32*
  %v2_1c9e8 = load i32, i32* %v1_1c9e8, align 4
  %v12_1c9ea = icmp eq i32 %v2_1c9db, %v2_1c9e8
  %v1_1c9ec = zext i1 %v12_1c9ea to i32
  %v3_1c9ec = and i32 %v2_1c9e8, -256
  %v4_1c9ec = or i32 %v1_1c9ec, %v3_1c9ec
  store i32 %v4_1c9ec, i32* @eax, align 8
  %v1_1c9f9 = call i32 @function_1ca00()
  ret i32 %v1_1c9f9

; uselistorder directives
  uselistorder i32 %v2_1c9e8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3ec3a, { 1, 0 }
}

define i32 @function_1ca00() local_unnamed_addr {
dec_label_pc_1ca00:
  %v0_1ca05 = load i32, i32* @eax, align 8
  ret i32 %v0_1ca05
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorISsSaISsEEEENS_14range_iteratorIKT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca06:
  %v2_1ca30 = call i32 @unknown_3ecbb(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorISsSaISsEEEENS_14range_iteratorIKT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca50:
  %v2_1ca7a = call i32 @unknown_3ed4f(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1ca8f = call i32 @function_1ca96()
  ret i32 %v1_1ca8f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ca96() local_unnamed_addr {
dec_label_pc_1ca96:
  %v0_1ca97 = load i32, i32* @eax, align 8
  ret i32 %v0_1ca97
}

define i32 @_ZN9__gnu_cxxneIPKSsSt6vectorISsSaISsEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca9a:
  %v1_1cabe = call i32 @unknown_3ed22(i32 %arg1)
  %v1_1cac3 = inttoptr i32 %v1_1cabe to i32*
  %v2_1cac3 = load i32, i32* %v1_1cac3, align 4
  %v1_1cacb = call i32 @unknown_3ed22(i32 %arg2)
  %v1_1cad0 = inttoptr i32 %v1_1cacb to i32*
  %v2_1cad0 = load i32, i32* %v1_1cad0, align 4
  %v12_1cad2 = icmp eq i32 %v2_1cac3, %v2_1cad0
  %v1_1cad4 = icmp eq i1 %v12_1cad2, false
  %v2_1cad4 = zext i1 %v1_1cad4 to i32
  %v4_1cad4 = and i32 %v2_1cad0, -256
  %v5_1cad4 = or i32 %v2_1cad4, %v4_1cad4
  store i32 %v5_1cad4, i32* @eax, align 8
  %v1_1cae1 = call i32 @function_1cae8()
  ret i32 %v1_1cae1

; uselistorder directives
  uselistorder i32 %v2_1cad0, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3ed22, { 1, 0 }
}

define i32 @function_1cae8() local_unnamed_addr {
dec_label_pc_1cae8:
  %v0_1caed = load i32, i32* @eax, align 8
  ret i32 %v0_1caed
}

define i32 @_ZN5boost17range_adl_barrier3endISsEENS_14range_iteratorIT_E4typeERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1caee:
  %v2_1cb18 = call i32 @unknown_3ee37(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cb38:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1cb52 = load i32, i32* %arg1, align 4
  store i32 %v2_1cb52, i32* @eax, align 8
  %v2_1cb5e = call i32 @function_1cb65(i32 %tmp99)
  ret i32 %v2_1cb5e
}

define i32 @function_1cb65(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cb65:
  %v0_1cb66 = load i32, i32* @eax, align 8
  ret i32 %v0_1cb66
}

define i32 @_ZN5boost9algorithm6detail6insertISsSsEEvRT_NS3_8iteratorERKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cb67:
  %stack_var_-24 = alloca i32, align 4
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %v2_1cb9f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1cb9f, i32* @eax, align 8
  %v3_1cbac = call i32 @function_3710e(i32 %v2_1cb9f, i32 %arg3, i32 %arg3)
  %v3_1cbbb = load i32, i32* %stack_var_-24, align 4
  %v4_1cbcf = call i32 @unknown_3eefa(i32 %arg1, i32 %arg2, i32 %v3_1cbbb, i32 %tmp100)
  store i32 0, i32* @eax, align 8
  %v1_1cbde = call i32 @function_1cbe5()
  ret i32 %v1_1cbde
}

define i32 @function_1cbe5() local_unnamed_addr {
dec_label_pc_1cbe5:
  %v0_1cbe6 = load i32, i32* @eax, align 8
  ret i32 %v0_1cbe6
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cbe8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1cc02 = load i32, i32* %arg1, align 4
  %v1_1cc04 = add i32 %v2_1cc02, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1cc04, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_1cc19 = call i32 @function_1cc20(i32 %tmp99)
  ret i32 %v2_1cc19
}

define i32 @function_1cc20(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cc20:
  %v0_1cc21 = load i32, i32* @eax, align 8
  ret i32 %v0_1cc21
}

define i32 @_ZN5boost10as_literalIcLj3EEENS_14iterator_rangeIPKT_EERAT0__S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cc22:
  store i32 %arg2, i32* @eax, align 8
  %v1_1cc45 = call i32 @function_2e066(i32 %arg2)
  %v1_1cc4a = urem i32 %v1_1cc45, 256
  %v3_1cc5e = call i32 @unknown_3f011(i32 %arg1, i32 %arg2, i32 %v1_1cc4a)
  store i32 %arg1, i32* @eax, align 8
  %v1_1cc73 = call i32 @function_1cc7a()
  ret i32 %v1_1cc73

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cc7a() local_unnamed_addr {
dec_label_pc_1cc7a:
  %v0_1cc7b = load i32, i32* @eax, align 8
  ret i32 %v0_1cc7b
}

define i32 @_ZN5boost9algorithm6detail6insertISsNS_14iterator_rangeIPKcEEEEvRT_NS7_8iteratorERKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cc7e:
  %v1_1cca8 = call i32 @unknown_3f101(i32 %arg3)
  %v1_1ccb5 = call i32 @unknown_3f0cc(i32 %arg3)
  %v4_1cccf = call i32 @unknown_3f136(i32 %arg1, i32 %arg2, i32 %v1_1ccb5, i32 %v1_1cca8)
  store i32 0, i32* @eax, align 8
  %v1_1ccde = call i32 @function_1cce5()
  ret i32 %v1_1ccde

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1cce5() local_unnamed_addr {
dec_label_pc_1cce5:
  %v0_1ccea = load i32, i32* @eax, align 8
  ret i32 %v0_1ccea
}

define i32 @_ZN5boost4bindIvPFvPvES1_EENS_3_bi6bind_tIT_T0_NS4_9list_av_1IT1_E4typeEEENS_4typeIS6_EES7_S9_(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cceb:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  %v4_1cd18 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1cd1c = ptrtoint i32* %stack_var_-24 to i32
  %v2_1cd22 = call i32 @unknown_3f1ff(i32 %v2_1cd1c, i32 %v4_1cd18)
  %v3_1cd27 = load i32, i32* %stack_var_-24, align 4
  %v2_1cd2e = ptrtoint i32* %stack_var_-20 to i32
  %v2_1cd34 = call i32 @unknown_3f239(i32 %v2_1cd2e, i32 %v3_1cd27)
  %v3_1cd4d = call i32 @unknown_3f27b(i32 %arg1, i32 %arg3, i32 %v2_1cd2e)
  store i32 %arg1, i32* @eax, align 8
  %v1_1cd5f = call i32 @function_1cd66()
  ret i32 %v1_1cd5f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cd66() local_unnamed_addr {
dec_label_pc_1cd66:
  %v0_1cd67 = load i32, i32* @eax, align 8
  ret i32 %v0_1cd67
}

define i32 @_ZN5boost6thread16make_thread_infoINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEEENS_10shared_ptrINS_6detail16thread_data_baseEEET_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cd6a:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-40, align 4
  %v2_1cd8d = ptrtoint i32* %stack_var_-40 to i32
  %v1_1cd93 = call i32 @unknown_3f343(i32 %v2_1cd8d)
  %v2_1cda2 = call i32 @unknown_3f378(i32 %arg1, i32 %v1_1cd93)
  store i32 %arg1, i32* @eax, align 8
  %v1_1cdb4 = call i32 @function_1cdbb()
  ret i32 %v1_1cdb4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cdbb() local_unnamed_addr {
dec_label_pc_1cdbb:
  %v0_1cdbc = load i32, i32* @eax, align 8
  ret i32 %v0_1cdbc
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cdc0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v2_1cdea = call i32 @function_302ae(i32 %tmp102, i32 %arg2)
  %v1_1cdf2 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1cdf8 = call i32 @function_2b624(i32 %v1_1cdf2)
  store i32 ptrtoint (%vtable_38d88_type* @global_var_38d88.2471 to i32), i32* %arg1, align 4
  %v2_1ce09 = inttoptr i32 %v1_1cdf2 to i32*
  store i32 ptrtoint (i32* @global_var_38d9c.2472 to i32), i32* %v2_1ce09, align 4
  store i32 0, i32* @eax, align 8
  %v1_1ce1a = call i32 @function_1ce21()
  ret i32 %v1_1ce1a

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38d88_type* @global_var_38d88.2471 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1ce21() local_unnamed_addr {
dec_label_pc_1ce21:
  %v0_1ce22 = load i32, i32* @eax, align 8
  ret i32 %v0_1ce22
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ce24:
  ret i32 0
}

define i32 @function_1ce42(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ce42:
  %v0_1ce42 = load i32, i32* @ebp, align 4
  %v1_1ce42 = add i32 %v0_1ce42, -28
  %v2_1ce42 = inttoptr i32 %v1_1ce42 to i32*
  %v3_1ce42 = load i32, i32* %v2_1ce42, align 4
  store i32 %v3_1ce42, i32* @eax, align 8
  %v1_1ce45 = add i32 %v0_1ce42, -32
  %v2_1ce45 = inttoptr i32 %v1_1ce45 to i32*
  %v3_1ce45 = load i32, i32* %v2_1ce45, align 4
  %v2_1ce4f = call i32 @function_3035e(i32 %v3_1ce42, i32 %v3_1ce45)
  %v0_1ce54 = load i32, i32* @ebp, align 4
  %v1_1ce54 = add i32 %v0_1ce54, -28
  %v2_1ce54 = inttoptr i32 %v1_1ce54 to i32*
  %v3_1ce54 = load i32, i32* %v2_1ce54, align 4
  %v1_1ce57 = add i32 %v3_1ce54, 28
  %v10_1ce57 = icmp eq i32 %v1_1ce57, 0
  store i1 %v10_1ce57, i1* @zf, align 1
  store i32 %v1_1ce57, i32* @eax, align 8
  %v1_1ce5d = call i32 @function_34994(i32 %v1_1ce57)
  %v0_1ce62 = load i32, i32* @ebp, align 4
  %v1_1ce62 = add i32 %v0_1ce62, -28
  %v2_1ce62 = inttoptr i32 %v1_1ce62 to i32*
  %v3_1ce62 = load i32, i32* %v2_1ce62, align 4
  %v1_1ce65 = inttoptr i32 %v3_1ce62 to i32*
  store i32 ptrtoint (%vtable_38d28_type* @global_var_38d28.2473 to i32), i32* %v1_1ce65, align 4
  %v0_1ce6b = load i32, i32* @ebp, align 4
  %v1_1ce6b = add i32 %v0_1ce6b, -28
  %v2_1ce6b = inttoptr i32 %v1_1ce6b to i32*
  %v3_1ce6b = load i32, i32* %v2_1ce6b, align 4
  %v1_1ce6e = add i32 %v3_1ce6b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1ce6e = inttoptr i32 %v1_1ce6e to i32*
  store i32 ptrtoint (i32* @global_var_38d44.2474 to i32), i32* %v2_1ce6e, align 4
  %v0_1ce75 = load i32, i32* @ebp, align 4
  %v1_1ce75 = add i32 %v0_1ce75, -28
  %v2_1ce75 = inttoptr i32 %v1_1ce75 to i32*
  %v3_1ce75 = load i32, i32* %v2_1ce75, align 4
  %v1_1ce78 = add i32 %v3_1ce75, 28
  %v2_1ce78 = inttoptr i32 %v1_1ce78 to i32*
  store i32 ptrtoint (i32* @global_var_38d54.2475 to i32), i32* %v2_1ce78, align 4
  %v0_1ce7f = load i32, i32* @ebp, align 4
  %v1_1ce7f = add i32 %v0_1ce7f, -32
  %v2_1ce7f = inttoptr i32 %v1_1ce7f to i32*
  %v3_1ce7f = load i32, i32* %v2_1ce7f, align 4
  %v1_1ce82 = add i32 %v3_1ce7f, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1ce85 = add i32 %v0_1ce7f, -28
  %v2_1ce85 = inttoptr i32 %v1_1ce85 to i32*
  %v3_1ce85 = load i32, i32* %v2_1ce85, align 4
  %v1_1ce88 = add i32 %v3_1ce85, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_1ce88, i32* @eax, align 8
  %v2_1ce92 = call i32 @function_2cd82(i32 %v1_1ce88, i32 %v1_1ce82)
  %v0_1ce97 = call i32 @function_1cebe()
  ret i32 %v0_1ce97

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38d28_type* @global_var_38d28.2473 to i32), { 2, 1, 0 }
}

define i32 @function_1ce9a() local_unnamed_addr {
dec_label_pc_1ce9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ce9a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ce9a
}

define i32 @function_1ce9c() local_unnamed_addr {
dec_label_pc_1ce9c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1ce9f = load i32, i32* %ecx.global-to-local, align 4
  %v3_1ce9f = mul i32 %v0_1ce9f, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 1)
  %v4_1ce9f = inttoptr i32 %v3_1ce9f to i8*
  %v5_1ce9f = load i8, i8* %v4_1ce9f, align 1
  %v6_1ce9f = load i1, i1* %cf.global-to-local, align 1
  %v8_1ce9f = udiv i8 %v5_1ce9f, 16
  %v11_1ce9f = mul i8 %v5_1ce9f, 32
  %v12_1ce9f = select i1 %v6_1ce9f, i8 16, i8 0
  %v14_1ce9f = or i8 %v11_1ce9f, %v8_1ce9f
  %v15_1ce9f = or i8 %v14_1ce9f, %v12_1ce9f
  store i8 %v15_1ce9f, i8* %v4_1ce9f, align 1
  %v0_1cea3 = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_1cea3 = and i32 %v0_1cea3, -24
  store i32 %v11_1cea3, i32* %eax.global-to-local, align 8
  %v0_1cea5 = load i32, i32* %edi.global-to-local, align 8
  %v1_1cea5 = add i32 %v0_1cea5, -1
  store i32 %v1_1cea5, i32* %edi.global-to-local, align 8
  %v1_1cea6 = inttoptr i32 %v11_1cea3 to i8*
  %v2_1cea6 = load i8, i8* %v1_1cea6, align 8
  %v3_1cea6 = add i8 %v2_1cea6, 1
  store i8 %v3_1cea6, i8* %v1_1cea6, align 8
  %v0_1cea8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1cea8 = add i32 %v0_1cea8, 76145733
  %v2_1cea8 = inttoptr i32 %v1_1cea8 to i8*
  %v3_1cea8 = load i8, i8* %v2_1cea8, align 1
  %v4_1cea8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1cea8 = trunc i32 %v4_1cea8 to i8
  %v6_1cea8 = add i8 %v5_1cea8, %v3_1cea8
  store i8 %v6_1cea8, i8* %v2_1cea8, align 1
  %v0_1ceae = load i32, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_1ceae = and i32 %v0_1ceae, -24
  store i32 %v11_1ceae, i32* @eax, align 8
  %v0_1ceb0 = call i32 @function_89000175()
  store i32 %v0_1ceb0, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ceb0

; uselistorder directives
  uselistorder i32 %v11_1cea3, { 1, 0 }
}

define i32 @function_1cebe() local_unnamed_addr {
dec_label_pc_1cebe:
  %v0_1cebe = load i32, i32* @ebp, align 4
  %v1_1cebe = add i32 %v0_1cebe, -12
  %v2_1cebe = inttoptr i32 %v1_1cebe to i32*
  %v3_1cebe = load i32, i32* %v2_1cebe, align 4
  %v2_1cec1 = xor i32 %v3_1cebe, 30
  %v3_1cec1 = icmp eq i32 %v2_1cec1, 0
  store i32 %v2_1cec1, i32* @eax, align 8
  br i1 %v3_1cec1, label %bb, label %dec_label_pc_1ceca

bb:                                               ; preds = %dec_label_pc_1cebe
  %v1_1cec8 = call i32 @function_1cecf()
  br label %dec_label_pc_1ceca

dec_label_pc_1ceca:                               ; preds = %bb, %dec_label_pc_1cebe
  %v2_1cec8 = phi i32 [ %v1_1cec8, %bb ], [ %v2_1cec1, %dec_label_pc_1cebe ]
  ret i32 %v2_1cec8
}

define i32 @function_1cecf() local_unnamed_addr {
dec_label_pc_1cecf:
  %v0_1ced4 = load i32, i32* @eax, align 8
  ret i32 %v0_1ced4
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ced6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_1cf00 = call i32 @function_305b4(i32 %tmp102, i32 %arg2)
  %v1_1cf08 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_1cf08, i32* @eax, align 8
  %v1_1cf0e = call i32 @function_2b73a(i32 %v1_1cf08)
  store i32 ptrtoint (%vtable_38ce8_type* @global_var_38ce8.2477 to i32), i32* %arg1, align 4
  %v2_1cf1f = inttoptr i32 %v1_1cf08 to i32*
  store i32 ptrtoint (i32* @global_var_38cfc.2478 to i32), i32* %v2_1cf1f, align 4
  store i32 0, i32* @eax, align 8
  %v1_1cf30 = call i32 @function_1cf37()
  ret i32 %v1_1cf30

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38ce8_type* @global_var_38ce8.2477 to i32), { 2, 1, 0 }
}

define i32 @function_1cf37() local_unnamed_addr {
dec_label_pc_1cf37:
  %v0_1cf38 = load i32, i32* @eax, align 8
  ret i32 %v0_1cf38
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cf3a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_1cf6d = add i32 %tmp103, 28
  %v1_1cf73 = call i32 @function_34aaa(i32 %v1_1cf6d)
  store i32 ptrtoint (%vtable_38c88_type* @global_var_38c88.2479 to i32), i32* %arg1, align 4
  %v1_1cf84 = add i32 %tmp103, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1cf84 = inttoptr i32 %v1_1cf84 to i32*
  store i32 ptrtoint (i32* @global_var_38ca4.2480 to i32), i32* %v2_1cf84, align 4
  %v2_1cf8e = inttoptr i32 %v1_1cf6d to i32*
  store i32 ptrtoint (i32* @global_var_38cb4.2481 to i32), i32* %v2_1cf8e, align 4
  %v1_1cf98 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_1cf84, i32* @eax, align 8
  %v2_1cfa8 = call i32 @function_2ce98(i32 %v1_1cf84, i32 %v1_1cf98)
  store i32 0, i32* @eax, align 8
  %v1_1cfde = call i32 @function_1cfe5()
  ret i32 %v1_1cfde

; uselistorder directives
  uselistorder i32 %v1_1cf84, { 1, 0, 2 }
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38c88_type* @global_var_38c88.2479 to i32), { 2, 1, 0 }
  uselistorder i32 (i32)* @function_34aaa, { 1, 0 }
}

define i32 @function_1cfe5() local_unnamed_addr {
dec_label_pc_1cfe5:
  %v0_1cfea = load i32, i32* @eax, align 8
  ret i32 %v0_1cfea
}

define i32 @_ZNSt8_Rb_treeIPKvSt4pairIKS1_N5boost6detail13tss_data_nodeEESt10_Select1stIS7_ESt4lessIS1_ESaIS7_EE13_Rb_tree_implISB_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cfec:
  %v1_1d009 = call i32 @unknown_3f692(i32 %arg1)
  %v1_1d011 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1d011 = inttoptr i32 %v1_1d011 to i32*
  store i32 0, i32* %v2_1d011, align 4
  %v1_1d01b = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1d01b = inttoptr i32 %v1_1d01b to i32*
  store i32 0, i32* %v2_1d01b, align 4
  %v1_1d025 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1d025 = inttoptr i32 %v1_1d025 to i32*
  store i32 0, i32* %v2_1d025, align 4
  %v1_1d02f = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1d02f = inttoptr i32 %v1_1d02f to i32*
  store i32 0, i32* %v2_1d02f, align 4
  %v1_1d039 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1d039 = inttoptr i32 %v1_1d039 to i32*
  store i32 0, i32* %v2_1d039, align 4
  %v1_1d046 = call i32 @unknown_3f6c8(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d05e:
  %tmp99 = ptrtoint i32* %arg2 to i32
  %v2_1d07e = load i32, i32* %arg2, align 4
  %v2_1d083 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1d083 = inttoptr i32 %v2_1d083 to i32*
  store i32 %v2_1d07e, i32* %v3_1d083, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_1d093 = call i32 @function_1d09a(i32 %tmp99, i32 %arg1)
  ret i32 %v3_1d093
}

define i32 @function_1d09a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d09a:
  %v0_1d09b = load i32, i32* @eax, align 8
  ret i32 %v0_1d09b
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d09c:
  %tmp99 = ptrtoint i32* %arg2 to i32
  ret i32 %tmp99
}

define i32 @function_1d0c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0c0:
  %v0_1d0c2 = load i32, i32* @eax, align 8
  %v2_1d0c3 = or i32 %v0_1d0c2, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  store i32 %v2_1d0c3, i32* @eax, align 8
  %v0_1d0c5 = load i32, i32* @ebp, align 4
  %v1_1d0c5 = add i32 %v0_1d0c5, 1
  store i32 %v1_1d0c5, i32* @ebp, align 4
  %v0_1d0ca = load i32, i32* @edx, align 8
  %v3_1d0ca = icmp eq i32 %v0_1d0ca, 30
  br i1 %v3_1d0ca, label %bb, label %dec_label_pc_1d0d3

bb:                                               ; preds = %dec_label_pc_1d0c0
  %v2_1d0d1 = call i32 @function_1d0d8(i32 %v0_1d0c2)
  br label %dec_label_pc_1d0d3

dec_label_pc_1d0d3:                               ; preds = %bb, %dec_label_pc_1d0c0
  %v3_1d0d1 = phi i32 [ %v2_1d0d1, %bb ], [ %v2_1d0c3, %dec_label_pc_1d0c0 ]
  ret i32 %v3_1d0d1

; uselistorder directives
  uselistorder i32 %v0_1d0c2, { 1, 0 }
}

define i32 @function_1d0d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d0d8:
  %v0_1d0d9 = load i32, i32* @eax, align 8
  ret i32 %v0_1d0d9
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d0da:
  %tmp99 = ptrtoint i32* %arg2 to i32
  %v2_1d0fa = load i32, i32* %arg2, align 4
  %v2_1d0ff = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_1d0ff = inttoptr i32 %v2_1d0ff to i32*
  store i32 %v2_1d0fa, i32* %v3_1d0ff, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_1d10f = call i32 @function_1d116(i32 %tmp99, i32 %arg1)
  ret i32 %v3_1d10f
}

define i32 @function_1d116(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d116:
  %v0_1d117 = load i32, i32* @eax, align 8
  ret i32 %v0_1d117
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d118:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_1d14a() local_unnamed_addr {
dec_label_pc_1d14a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d14a = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d14a = add i32 %v0_1d14a, -532313149
  %v2_1d14a = inttoptr i32 %v1_1d14a to i32*
  %v3_1d14a = load i32, i32* %v2_1d14a, align 4
  %v4_1d14a = add i32 %v3_1d14a, -1
  store i32 %v4_1d14a, i32* %v2_1d14a, align 4
  %v0_1d150 = load i32, i32* %eax.global-to-local, align 8
  %v0_1d154 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1d157 = call i32 @unknown_3f946(i32 %v0_1d154, i32 %v0_1d150)
  store i32 %v2_1d157, i32* %eax.global-to-local, align 8
  %v0_1d15c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d15c = add i32 %v0_1d15c, -28
  %v2_1d15c = inttoptr i32 %v1_1d15c to i32*
  %v3_1d15c = load i32, i32* %v2_1d15c, align 4
  store i32 %v3_1d15c, i32* %eax.global-to-local, align 8
  %v0_1d15f = load i32, i32* %ebx.global-to-local, align 4
  %v2_1d15f = inttoptr i32 %v3_1d15c to i32*
  store i32 %v0_1d15f, i32* %v2_1d15f, align 4
  %v0_1d161 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d161 = add i32 %v0_1d161, -12
  %v2_1d161 = inttoptr i32 %v1_1d161 to i32*
  %v3_1d161 = load i32, i32* %v2_1d161, align 4
  %v2_1d164 = xor i32 %v3_1d161, 30
  %v3_1d164 = icmp eq i32 %v2_1d164, 0
  store i32 %v2_1d164, i32* @eax, align 8
  br i1 %v3_1d164, label %bb, label %dec_label_pc_1d16d

bb:                                               ; preds = %dec_label_pc_1d14a
  %v1_1d16b = call i32 @function_1d19d()
  store i32 %v1_1d16b, i32* @eax, align 8
  br label %dec_label_pc_1d16d

dec_label_pc_1d16d:                               ; preds = %bb, %dec_label_pc_1d14a
  %v0_1d16d = call i32 @function_1d198()
  store i32 %v0_1d16d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d16d
}

define i32 @function_1d170() local_unnamed_addr {
dec_label_pc_1d170:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d170 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d170
}

define i32 @function_1d198() local_unnamed_addr {
dec_label_pc_1d198:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d19d() local_unnamed_addr {
dec_label_pc_1d19d:
  %v0_1d1a2 = load i32, i32* @eax, align 8
  ret i32 %v0_1d1a2
}

define i32 @_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d1a3:
  %v2_1d1cd = call i32 @unknown_3fa61(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1d1df = call i32 @function_1d1e6()
  ret i32 %v1_1d1df

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d1e6() local_unnamed_addr {
dec_label_pc_1d1e6:
  %v0_1d1e7 = load i32, i32* @eax, align 8
  ret i32 %v0_1d1e7
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d1ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d1ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d1ef
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32* %arg1) {
dec_label_pc_1d1f4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38c48_type* @global_var_38c48.2509 to i32), i32* %arg1, align 4
  %v1_1d217 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1d217 = inttoptr i32 %v1_1d217 to i32*
  store i32 ptrtoint (i32* @global_var_38c5c.2510 to i32), i32* %v2_1d217, align 4
  store i32 %v1_1d217, i32* @eax, align 8
  %v1_1d227 = call i32 @function_2bab8(i32 %v1_1d217)
  store i32 %tmp99, i32* @eax, align 8
  %v1_1d232 = call i32 @function_31570(i32 %tmp99)
  %v1_1d241 = call i32 @function_1d24e()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1d217, { 1, 0, 2 }
}

define i32 @function_1d24e() local_unnamed_addr {
dec_label_pc_1d24e:
  %v0_1d24e = load i32, i32* @ebp, align 4
  %v1_1d24e = add i32 %v0_1d24e, -12
  %v2_1d24e = inttoptr i32 %v1_1d24e to i32*
  %v3_1d24e = load i32, i32* %v2_1d24e, align 4
  %v2_1d251 = xor i32 %v3_1d24e, 30
  %v3_1d251 = icmp eq i32 %v2_1d251, 0
  store i32 %v2_1d251, i32* @eax, align 8
  br i1 %v3_1d251, label %bb, label %dec_label_pc_1d25a

bb:                                               ; preds = %dec_label_pc_1d24e
  %v1_1d258 = call i32 @function_1d25f()
  br label %dec_label_pc_1d25a

dec_label_pc_1d25a:                               ; preds = %bb, %dec_label_pc_1d24e
  %v2_1d258 = phi i32 [ %v1_1d258, %bb ], [ %v2_1d251, %dec_label_pc_1d24e ]
  ret i32 %v2_1d258
}

define i32 @function_1d25f() local_unnamed_addr {
dec_label_pc_1d25f:
  %v0_1d260 = load i32, i32* @eax, align 8
  ret i32 %v0_1d260
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d262:
  %v4_1d262 = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1d267 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %v4_1d262)
  ret i32 %v1_1d267
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) {
dec_label_pc_1d26a:
  store i32 %arg1, i32* @eax, align 8
  %v1_1d287 = call i32 @function_3a456(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1d2a7() local_unnamed_addr {
dec_label_pc_1d2a7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d2a7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d2a7 = add i32 %v0_1d2a7, -1
  store i32 %v1_1d2a7, i32* %ecx.global-to-local, align 4
  %v0_1d2a9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d2a9
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d2aa:
  %v2_1d2d4 = call i32 @unknown_3fbcc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1d2e6 = call i32 @function_1d2ed()
  ret i32 %v1_1d2e6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d2ed() local_unnamed_addr {
dec_label_pc_1d2ed:
  %v0_1d2ee = load i32, i32* @eax, align 8
  ret i32 %v0_1d2ee
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d2f1:
  %v4_1d2f1 = add i32 %arg1, -28
  %v1_1d2f6 = call i32 @function_3a5f7(i32 %v4_1d2f1)
  ret i32 %v1_1d2f6
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d2fb:
  %v4_1d2fb = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1d300 = call i32 @function_3a5f7(i32 %v4_1d2fb)
  ret i32 %v1_1d300

; uselistorder directives
  uselistorder i32 (i32)* @function_3a5f7, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32* %arg1) {
dec_label_pc_1d306:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38be8_type* @global_var_38be8.2511 to i32), i32* %arg1, align 4
  %v1_1d329 = add i32 %tmp99, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1d329 = inttoptr i32 %v1_1d329 to i32*
  store i32 ptrtoint (i32* @global_var_38c04.2512 to i32), i32* %v2_1d329, align 4
  %v1_1d333 = add i32 %tmp99, 28
  %v2_1d333 = inttoptr i32 %v1_1d333 to i32*
  store i32 ptrtoint (i32* @global_var_38c14.2513 to i32), i32* %v2_1d333, align 4
  store i32 %v1_1d333, i32* @eax, align 8
  %v1_1d343 = call i32 @function_2d1da(i32 %v1_1d333)
  store i32 %tmp99, i32* @eax, align 8
  %v1_1d34e = call i32 @function_3a4fa(i32 %tmp99)
  %v1_1d35d = call i32 @function_1d36a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1d333, { 1, 0, 2 }
}

define i32 @function_1d36a() local_unnamed_addr {
dec_label_pc_1d36a:
  %v0_1d36a = load i32, i32* @ebp, align 4
  %v1_1d36a = add i32 %v0_1d36a, -12
  %v2_1d36a = inttoptr i32 %v1_1d36a to i32*
  %v3_1d36a = load i32, i32* %v2_1d36a, align 4
  %v2_1d36d = xor i32 %v3_1d36a, 30
  %v3_1d36d = icmp eq i32 %v2_1d36d, 0
  store i32 %v2_1d36d, i32* @eax, align 8
  br i1 %v3_1d36d, label %bb, label %dec_label_pc_1d376

bb:                                               ; preds = %dec_label_pc_1d36a
  %v1_1d374 = call i32 @function_1d37b()
  br label %dec_label_pc_1d376

dec_label_pc_1d376:                               ; preds = %bb, %dec_label_pc_1d36a
  %v2_1d374 = phi i32 [ %v1_1d374, %bb ], [ %v2_1d36d, %dec_label_pc_1d36a ]
  ret i32 %v2_1d374
}

define i32 @function_1d37b() local_unnamed_addr {
dec_label_pc_1d37b:
  %v0_1d37c = load i32, i32* @eax, align 8
  ret i32 %v0_1d37c
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d37e:
  %v4_1d37e = add i32 %arg1, -28
  %v1_1d383 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %v4_1d37e)
  ret i32 %v1_1d383
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d385:
  %v4_1d385 = sub i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1d38a = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %v4_1d385)
  ret i32 %v1_1d38a
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) {
dec_label_pc_1d38c:
  store i32 %arg1, i32* @eax, align 8
  %v1_1d3a9 = call i32 @function_3a684(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1d3c9() local_unnamed_addr {
dec_label_pc_1d3c9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d3c9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d3c9 = add i32 %v0_1d3c9, -1
  store i32 %v1_1d3c9, i32* %ecx.global-to-local, align 4
  %v0_1d3cb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d3cb
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d3cc:
  %v1_1d3e9 = call i32 @unknown_3fda0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1d3f8 = call i32 @function_1d3ff()
  ret i32 %v1_1d3f8
}

define i32 @function_1d3ff() local_unnamed_addr {
dec_label_pc_1d3ff:
  %v0_1d400 = load i32, i32* @eax, align 8
  ret i32 %v0_1d400
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d402:
  store i32 0, i32* @eax, align 8
  %v2_1d423 = call i32 @function_1d42a(i32 %arg1)
  ret i32 %v2_1d423
}

define i32 @function_1d42a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d42a:
  %v0_1d42b = load i32, i32* @eax, align 8
  ret i32 %v0_1d42b
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d42c:
  %v1_1d446 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1d446 = inttoptr i32 %v1_1d446 to i32*
  %v3_1d446 = load i32, i32* %v2_1d446, align 4
  store i32 %v3_1d446, i32* @eax, align 8
  %v2_1d453 = call i32 @function_1d45a(i32 %arg1)
  ret i32 %v2_1d453
}

define i32 @function_1d45a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d45a:
  %v0_1d45b = load i32, i32* @eax, align 8
  ret i32 %v0_1d45b
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d45c:
  %v1_1d476 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1d476 = inttoptr i32 %v1_1d476 to i32*
  %v3_1d476 = load i32, i32* %v2_1d476, align 4
  store i32 %v3_1d476, i32* @eax, align 8
  %v2_1d483 = call i32 @function_1d48a(i32 %arg1)
  ret i32 %v2_1d483
}

define i32 @function_1d48a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d48a:
  %v0_1d48b = load i32, i32* @eax, align 8
  ret i32 %v0_1d48b
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d48c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v0_1d48f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4ad = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1d4b3 = call i32 @unknown_3ac15(i32 %v1_1d4ad)
  store i32 %v2_1d4b3, i32* %ebx.global-to-local, align 4
  %v2_1d4ba = ptrtoint i32* %stack_var_-17 to i32
  %v3_1d4c7 = call i32 @unknown_3fed2(i32 %v2_1d4ba, i32 %arg1)
  %v3_1d4d9 = call i32 @unknown_3ff82(i32 %v2_1d4ba, i32 %v2_1d4b3)
  %v1_1d4e4 = call i32 @unknown_3ff22(i32 %v2_1d4ba)
  %v3_1d4f6 = call i32 @unknown_3ffbe(i32 %arg1, i32 %arg2)
  store i32 %v0_1d48f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d512:
  %v10_1d52f = icmp eq i32 %arg2, 0
  br i1 %v10_1d52f, label %dec_label_pc_1d556, label %dec_label_pc_1d535

dec_label_pc_1d535:                               ; preds = %dec_label_pc_1d512
  %v3_1d54a = call i32 @unknown_40134(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_1d556

dec_label_pc_1d556:                               ; preds = %dec_label_pc_1d512, %dec_label_pc_1d535
  %storemerge = phi i32 [ %v3_1d54a, %dec_label_pc_1d535 ], [ 0, %dec_label_pc_1d512 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1d560 = call i32 @function_1d567()
  ret i32 %v1_1d560

; uselistorder directives
  uselistorder label %dec_label_pc_1d556, { 1, 0 }
}

define i32 @function_1d567() local_unnamed_addr {
dec_label_pc_1d567:
  %v0_1d568 = load i32, i32* @eax, align 8
  ret i32 %v0_1d568
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d569:
  %v2_1d593 = call i32 @unknown_401e6(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1d5a2 = call i32 @function_1d5a9()
  ret i32 %v1_1d5a2
}

define i32 @function_1d5a9() local_unnamed_addr {
dec_label_pc_1d5a9:
  %v0_1d5aa = load i32, i32* @eax, align 8
  ret i32 %v0_1d5aa
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d5ac:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1d5c9 = call i32 @function_31be2(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_1d5da = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1d5da = inttoptr i32 %v1_1d5da to i32*
  store i32 0, i32* %v2_1d5da, align 4
  %v1_1d5e4 = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1d5e4 = inttoptr i32 %v1_1d5e4 to i32*
  store i32 0, i32* %v2_1d5e4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d5fe:
  store i32 %arg1, i32* @eax, align 8
  %v1_1d622 = call i32 @function_3549e(i32 %arg1)
  %v1_1d627 = inttoptr i32 %v1_1d622 to i32*
  %v2_1d627 = load i32, i32* %v1_1d627, align 4
  store i32 %v2_1d627, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1d62f = call i32 @function_3549e(i32 %arg2)
  %v1_1d634 = inttoptr i32 %v1_1d62f to i32*
  %v2_1d634 = load i32, i32* %v1_1d634, align 4
  %v0_1d636 = load i32, i32* @ebx, align 4
  %v12_1d636 = icmp eq i32 %v0_1d636, %v2_1d634
  %v1_1d638 = zext i1 %v12_1d636 to i32
  %v3_1d638 = and i32 %v2_1d634, -256
  %v4_1d638 = or i32 %v1_1d638, %v3_1d638
  ret i32 %v4_1d638

; uselistorder directives
  uselistorder i32 %v2_1d634, { 1, 0 }
  uselistorder i32 (i32)* @function_3549e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d652:
  ret i32 %arg2
}

define i32 @function_1d690() local_unnamed_addr {
dec_label_pc_1d690:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d690 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d690 = add i32 %v0_1d690, -1
  store i32 %v1_1d690, i32* %ecx.global-to-local, align 4
  %v0_1d692 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d692
}

define i32 @_ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d693:
  %v1_1d6b0 = call i32 @unknown_40393(i32 %arg1)
  store i32 %v1_1d6b0, i32* @eax, align 8
  %v1_1d6bf = call i32 @function_1d6c6()
  ret i32 %v1_1d6bf
}

define i32 @function_1d6c6() local_unnamed_addr {
dec_label_pc_1d6c6:
  %v0_1d6c7 = load i32, i32* @eax, align 8
  ret i32 %v0_1d6c7
}

define i32 @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d6c8:
  %v1_1d6f3 = call i32 @unknown_403f5(i32 %arg3)
  %v1_1d700 = call i32 @unknown_403f5(i32 %arg2)
  %v1_1d70d = call i32 @unknown_403f5(i32 %arg1)
  %v3_1d71d = call i32 @unknown_40375(i32 %v1_1d70d, i32 %v1_1d700, i32 %v1_1d6f3)
  store i32 %v3_1d71d, i32* @eax, align 8
  %v1_1d72c = call i32 @function_1d733()
  ret i32 %v1_1d72c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_403f5, { 2, 1, 0 }
}

define i32 @function_1d733() local_unnamed_addr {
dec_label_pc_1d733:
  %v0_1d739 = load i32, i32* @eax, align 8
  ret i32 %v0_1d739
}

define i32 @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d73a:
  %v3_1d771 = call i32 @unknown_4049c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1d771, i32* @eax, align 8
  %v1_1d780 = call i32 @function_1d787()
  ret i32 %v1_1d780
}

define i32 @function_1d787() local_unnamed_addr {
dec_label_pc_1d787:
  %v0_1d788 = load i32, i32* @eax, align 8
  ret i32 %v0_1d788
}

define i32 @_ZSt11__addressofISt4pairIKjiEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d789:
  ret i32 %arg1
}

define i32 @_ZNSaIN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d7b6:
  %v1_1d7d3 = call i32 @unknown_4059e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1d7e2 = call i32 @function_1d7e9()
  ret i32 %v1_1d7e2
}

define i32 @function_1d7e9() local_unnamed_addr {
dec_label_pc_1d7e9:
  %v0_1d7ea = load i32, i32* @eax, align 8
  ret i32 %v0_1d7ea
}

define i32 @_ZSt8_DestroyIPN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d7eb:
  %v2_1d815 = call i32 @unknown_4063e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1d824 = call i32 @function_1d82b()
  ret i32 %v1_1d824
}

define i32 @function_1d82b() local_unnamed_addr {
dec_label_pc_1d82b:
  %v0_1d82c = load i32, i32* @eax, align 8
  ret i32 %v0_1d82c
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d82e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1d82e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_1d82e, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_14invoke_visitorIKNS4_21lock_weak_ptr_visitorEEEEENT_11result_typeERSF_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d866:
  %tmp106 = ptrtoint i32* %arg2 to i32
  %v1_1d88d = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1d893 = call i32 @unknown_40758(i32 %v1_1d88d)
  %v1_1d8a0 = call i32 @unknown_40710(i32 %tmp106)
  %v2_1d8aa = load i32, i32* %arg2, align 4
  %v5_1d8c5 = call i32 @unknown_4078d(i32 %arg1, i32 %v2_1d8aa, i32 %v1_1d8a0, i32 %arg3, i32 %v1_1d893)
  store i32 %arg1, i32* @eax, align 8
  %v1_1d8da = call i32 @function_1d8e1()
  ret i32 %v1_1d8da

; uselistorder directives
  uselistorder i32 %tmp106, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d8e1() local_unnamed_addr {
dec_label_pc_1d8e1:
  %v0_1d8e5 = load i32, i32* @eax, align 8
  ret i32 %v0_1d8e5
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d8e8:
  %v1_1d905 = call i32 @unknown_40898(i32 %arg1)
  store i32 %v1_1d905, i32* @eax, align 8
  %v1_1d914 = call i32 @function_1d91b()
  ret i32 %v1_1d914
}

define i32 @function_1d91b() local_unnamed_addr {
dec_label_pc_1d91b:
  %v0_1d91c = load i32, i32* @eax, align 8
  ret i32 %v0_1d91c
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9copy_intoEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d91e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_1d93f = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1d945 = call i32 @unknown_40810(i32 %v1_1d93f)
  %v1_1d952 = call i32 @unknown_3b2e2(i32 %tmp104)
  %v2_1d95c = load i32, i32* %arg1, align 4
  %v4_1d970 = call i32 @unknown_408fb(i32 %v2_1d95c, i32 %v1_1d952, i32 %arg2, i32 %v1_1d945)
  store i32 0, i32* @eax, align 8
  %v1_1d97f = call i32 @function_1d986()
  ret i32 %v1_1d97f

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
}

define i32 @function_1d986() local_unnamed_addr {
dec_label_pc_1d986:
  %v0_1d98b = load i32, i32* @eax, align 8
  ret i32 %v0_1d98b
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d98c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1d9bb = call i32 @function_1d9c2(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1d9bb
}

define i32 @function_1d9c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d9c2:
  %v0_1d9c3 = load i32, i32* @eax, align 8
  ret i32 %v0_1d9c3
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d9c4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1d9e1 = call i32 @unknown_40a16(i32 %tmp100)
  %v4_1d9e6 = trunc i32 %v1_1d9e1 to i8
  %v2_1d9f6 = load i32, i32* %arg1, align 4
  %not.v0_1d9e8 = icmp ne i8 %v4_1d9e6, 0
  %v1_1d9ef = sext i1 %not.v0_1d9e8 to i32
  %storemerge = xor i32 %v1_1d9ef, %v2_1d9f6
  store i32 %storemerge, i32* @eax, align 8
  %v1_1da02 = call i32 @function_1da09()
  ret i32 %v1_1da02
}

define i32 @function_1da09() local_unnamed_addr {
dec_label_pc_1da09:
  %v0_1da0a = load i32, i32* @eax, align 8
  ret i32 %v0_1da0a
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9destroyerEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1da0c:
  %ebx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v0_1da0f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1da2d = add i32 %tmp105, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1da33 = call i32 @unknown_3b2f4(i32 %v1_1da2d)
  store i32 %v1_1da33, i32* %ebx.global-to-local, align 4
  %v1_1da40 = call i32 @unknown_3b3d0(i32 %tmp105)
  %v2_1da4a = load i32, i32* %arg1, align 4
  %v4_1da5e = call i32 @unknown_40a90(i32 %v2_1da4a, i32 %v1_1da40, i32 %arg2, i32 %v1_1da33)
  store i32 %v0_1da0f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1da7a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1daa9 = call i32 @function_1dab0(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1daa9
}

define i32 @function_1dab0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dab0:
  %v0_1dab1 = load i32, i32* @eax, align 8
  ret i32 %v0_1dab1
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_14invoke_visitorIKNS4_24expired_weak_ptr_visitorEEEEENT_11result_typeERSF_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dab2:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_1dad3 = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1dad9 = call i32 @unknown_409a4(i32 %v1_1dad3)
  %v1_1dae6 = call i32 @unknown_4095c(i32 %tmp104)
  %v2_1daf0 = load i32, i32* %arg1, align 4
  %v4_1db04 = call i32 @unknown_40c0e(i32 %v2_1daf0, i32 %v1_1dae6, i32 %arg2, i32 %v1_1dad9)
  store i32 %v4_1db04, i32* @eax, align 8
  %v1_1db13 = call i32 @function_1db1a()
  ret i32 %v1_1db13

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
}

define i32 @function_1db1a() local_unnamed_addr {
dec_label_pc_1db1a:
  %v0_1db1f = load i32, i32* @eax, align 8
  ret i32 %v0_1db1f
}

define i32 @_ZNK5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE5mutexEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1db20:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1db3a = load i32, i32* %arg1, align 4
  store i32 %v2_1db3a, i32* @eax, align 8
  %v2_1db46 = call i32 @function_1db4d(i32 %tmp99)
  ret i32 %v2_1db46
}

define i32 @function_1db4d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1db4d:
  %v0_1db4e = load i32, i32* @eax, align 8
  ret i32 %v0_1db4e
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE8try_lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1db50:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 8
  %v1_1db6e = call i32 @function_366f2(i32 %tmp101)
  %v4_1db73 = trunc i32 %v1_1db6e to i8
  %v5_1db73 = icmp eq i8 %v4_1db73, 0
  br i1 %v5_1db73, label %dec_label_pc_1db8d, label %dec_label_pc_1db77

dec_label_pc_1db77:                               ; preds = %dec_label_pc_1db50
  %v2_1db77 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1db77, i32* @eax, align 8
  %v1_1db88 = call i32 @function_3137d(i32 %v2_1db77)
  br label %dec_label_pc_1db8d

dec_label_pc_1db8d:                               ; preds = %dec_label_pc_1db77, %dec_label_pc_1db50
  %v2_1db90 = load i32, i32* %arg1, align 4
  %v1_1db95 = call i32 @unknown_40d20(i32 %v2_1db90)
  %v1_1db9d = trunc i32 %v1_1db95 to i8
  %v3_1db9d = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_1db9d = inttoptr i32 %v3_1db9d to i8*
  store i8 %v1_1db9d, i8* %v4_1db9d, align 1
  %v4_1dba3 = and i32 %v1_1db95, 255
  store i32 %v4_1dba3, i32* @eax, align 8
  %v1_1dbb1 = call i32 @function_1dbd1()
  ret i32 %v1_1dbb1

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 2, 1 }
}

define i32 @function_1dbb5() local_unnamed_addr {
dec_label_pc_1dbb5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1dbb5 = load i32, i32* %eax.global-to-local, align 8
  %v0_1dbb7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1dbb7 = add i32 %v0_1dbb7, -20
  store i32 %v1_1dbb7, i32* @eax, align 8
  %v1_1dbbd = call i32 @function_2336c(i32 %v1_1dbb7)
  store i32 %v0_1dbb5, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dbb5

; uselistorder directives
  uselistorder i32 %v0_1dbb5, { 1, 0 }
}

define i32 @function_1dbd1() local_unnamed_addr {
dec_label_pc_1dbd1:
  %v0_1dbd6 = load i32, i32* @eax, align 8
  ret i32 %v0_1dbd6
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1dbd8:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 8
  %v1_1dbf6 = call i32 @function_3677a(i32 %tmp101)
  %v4_1dbfb = trunc i32 %v1_1dbf6 to i8
  %v5_1dbfb = icmp eq i8 %v4_1dbfb, 0
  br i1 %v5_1dbfb, label %dec_label_pc_1dc15, label %dec_label_pc_1dbff

dec_label_pc_1dbff:                               ; preds = %dec_label_pc_1dbd8
  %v2_1dbff = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1dbff, i32* @eax, align 8
  %v1_1dc10 = call i32 @function_31405(i32 %v2_1dbff)
  br label %dec_label_pc_1dc15

dec_label_pc_1dc15:                               ; preds = %dec_label_pc_1dbff, %dec_label_pc_1dbd8
  %v2_1dc18 = load i32, i32* %arg1, align 4
  store i32 %v2_1dc18, i32* @eax, align 8
  %v1_1dc1d = call i32 @function_32ff2(i32 %v2_1dc18)
  %v1_1dc25 = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1dc25 = inttoptr i32 %v1_1dc25 to i8*
  store i8 1, i8* %v2_1dc25, align 1
  store i32 0, i32* @eax, align 8
  %v1_1dc33 = call i32 @function_1dc53()
  store i32 %v1_1dc33, i32* @eax, align 8
  %v0_1dc35 = call i32 @function_1dc4e()
  ret i32 %v0_1dc35

; uselistorder directives
  uselistorder i32 %tmp101, { 0, 2, 1 }
}

define i32 @function_1dc38() local_unnamed_addr {
dec_label_pc_1dc38:
  %eax.global-to-local = alloca i32, align 4
  %v0_1dc38 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc38
}

define i32 @function_1dc4e() local_unnamed_addr {
dec_label_pc_1dc4e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1dc53() local_unnamed_addr {
dec_label_pc_1dc53:
  %v0_1dc58 = load i32, i32* @eax, align 8
  ret i32 %v0_1dc58
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE7destroyEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc5a:
  store i32 0, i32* @eax, align 8
  %v3_1dc81 = call i32 @function_1dc88(i32 %arg2, i32 %arg1)
  ret i32 %v3_1dc81
}

define i32 @function_1dc88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc88:
  %v0_1dc89 = load i32, i32* @eax, align 8
  ret i32 %v0_1dc89
}

define i32 @_ZSt13copy_backwardIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1dc8a:
  %v1_1dcb4 = call i32 @unknown_3b31d(i32 %arg2)
  %v1_1dcc1 = call i32 @unknown_3b31d(i32 %arg1)
  %v3_1dcd4 = call i32 @unknown_40e8f(i32 %v1_1dcc1, i32 %v1_1dcb4, i32 %arg3)
  store i32 %v3_1dcd4, i32* @eax, align 8
  %v1_1dce3 = call i32 @function_1dcea()
  ret i32 %v1_1dce3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3b31d, { 1, 0 }
}

define i32 @function_1dcea() local_unnamed_addr {
dec_label_pc_1dcea:
  %v0_1dcef = load i32, i32* @eax, align 8
  ret i32 %v0_1dcef
}

define i32 @_ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1dcf0:
  store i32 %arg1, i32* @eax, align 8
  %v1_1dd1a = call i32 @function_38e46(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1dd27 = call i32 @function_3102c(i32 %arg1)
  %v2_1dd2e = sub i32 %v1_1dd1a, %v1_1dd27
  %v7_1dd33 = icmp ult i32 %v2_1dd2e, %arg2
  %v5_1dd38 = icmp eq i1 %v7_1dd33, false
  br i1 %v5_1dd38, label %bb, label %dec_label_pc_1dd3c

bb:                                               ; preds = %dec_label_pc_1dcf0
  %v1_1dd3a = call i32 @function_1dd47()
  br label %dec_label_pc_1dd3c

dec_label_pc_1dd3c:                               ; preds = %bb, %dec_label_pc_1dcf0
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1dd47() local_unnamed_addr {
dec_label_pc_1dd47:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1dd47 = load i32, i32* @ebp, align 4
  %v1_1dd47 = add i32 %v0_1dd47, -28
  %v2_1dd47 = inttoptr i32 %v1_1dd47 to i32*
  %v3_1dd47 = load i32, i32* %v2_1dd47, align 4
  store i32 %v3_1dd47, i32* @eax, align 8
  %v1_1dd4d = call i32 @function_3102c(i32 %v3_1dd47)
  store i32 %v1_1dd4d, i32* %ebx.global-to-local, align 4
  %v0_1dd54 = load i32, i32* @ebp, align 4
  %v1_1dd54 = add i32 %v0_1dd54, -28
  %v2_1dd54 = inttoptr i32 %v1_1dd54 to i32*
  %v3_1dd54 = load i32, i32* %v2_1dd54, align 4
  store i32 %v3_1dd54, i32* @eax, align 8
  %v1_1dd5a = call i32 @function_3102c(i32 %v3_1dd54)
  %v1_1dd5f = load i32, i32* @ebp, align 4
  %v2_1dd5f = add i32 %v1_1dd5f, -20
  %v3_1dd5f = inttoptr i32 %v2_1dd5f to i32*
  store i32 %v1_1dd5a, i32* %v3_1dd5f, align 4
  %v0_1dd62 = load i32, i32* @ebp, align 4
  %v1_1dd62 = add i32 %v0_1dd62, -32
  %v1_1dd69 = add i32 %v0_1dd62, -20
  %v2_1dd6f = call i32 @unknown_408cb(i32 %v1_1dd69, i32 %v1_1dd62)
  %v1_1dd74 = inttoptr i32 %v2_1dd6f to i32*
  %v2_1dd74 = load i32, i32* %v1_1dd74, align 4
  %v1_1dd76 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1dd76 = add i32 %v1_1dd76, %v2_1dd74
  %v1_1dd78 = load i32, i32* @ebp, align 4
  %v2_1dd78 = add i32 %v1_1dd78, -16
  %v3_1dd78 = inttoptr i32 %v2_1dd78 to i32*
  store i32 %v2_1dd76, i32* %v3_1dd78, align 4
  %v0_1dd7b = load i32, i32* @ebp, align 4
  %v1_1dd7b = add i32 %v0_1dd7b, -28
  %v2_1dd7b = inttoptr i32 %v1_1dd7b to i32*
  %v3_1dd7b = load i32, i32* %v2_1dd7b, align 4
  store i32 %v3_1dd7b, i32* @eax, align 8
  %v1_1dd81 = call i32 @function_3102c(i32 %v3_1dd7b)
  %v1_1dd86 = load i32, i32* @ebp, align 4
  %v2_1dd86 = add i32 %v1_1dd86, -16
  %v3_1dd86 = inttoptr i32 %v2_1dd86 to i32*
  %v4_1dd86 = load i32, i32* %v3_1dd86, align 4
  %tmp8 = icmp ugt i32 %v1_1dd81, %v4_1dd86
  br i1 %tmp8, label %dec_label_pc_1dd9b, label %dec_label_pc_1dd8b

dec_label_pc_1dd8b:                               ; preds = %dec_label_pc_1dd47
  %v1_1dd8b = add i32 %v1_1dd86, -28
  %v2_1dd8b = inttoptr i32 %v1_1dd8b to i32*
  %v3_1dd8b = load i32, i32* %v2_1dd8b, align 4
  store i32 %v3_1dd8b, i32* @eax, align 8
  %v1_1dd91 = call i32 @function_38e46(i32 %v3_1dd8b)
  %v1_1dd96 = load i32, i32* @ebp, align 4
  %v2_1dd96 = add i32 %v1_1dd96, -16
  %v3_1dd96 = inttoptr i32 %v2_1dd96 to i32*
  %v4_1dd96 = load i32, i32* %v3_1dd96, align 4
  %v10_1dd96 = icmp ult i32 %v1_1dd91, %v4_1dd96
  %v1_1dd99 = icmp eq i1 %v10_1dd96, false
  br i1 %v1_1dd99, label %dec_label_pc_1ddab, label %dec_label_pc_1dd9b

dec_label_pc_1dd9b:                               ; preds = %dec_label_pc_1dd47, %dec_label_pc_1dd8b
  %v0_1dd9b = phi i32 [ %v1_1dd86, %dec_label_pc_1dd47 ], [ %v1_1dd96, %dec_label_pc_1dd8b ]
  %v1_1dd9b = add i32 %v0_1dd9b, -28
  %v2_1dd9b = inttoptr i32 %v1_1dd9b to i32*
  %v3_1dd9b = load i32, i32* %v2_1dd9b, align 4
  store i32 %v3_1dd9b, i32* @eax, align 8
  %v1_1dda1 = call i32 @function_38e46(i32 %v3_1dd9b)
  br label %dec_label_pc_1ddab

dec_label_pc_1ddab:                               ; preds = %dec_label_pc_1dd8b, %dec_label_pc_1dd9b
  %storemerge = phi i32 [ %v1_1dda1, %dec_label_pc_1dd9b ], [ %v4_1dd96, %dec_label_pc_1dd8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32)* @function_38e46, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_3102c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1ddab, { 1, 0 }
  uselistorder label %dec_label_pc_1dd9b, { 1, 0 }
}

define i32 @_ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ddc2:
  ret i32 %arg1
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1de1e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_1de41 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1de41, i32* @eax, align 8
  %v1_1de47 = call i32 @function_2e2ec(i32 %v1_1de41)
  store i32 0, i32* @eax, align 8
  %v1_1de56 = call i32 @function_1de5d()
  ret i32 %v1_1de56
}

define i32 @function_1de5d() local_unnamed_addr {
dec_label_pc_1de5d:
  %v0_1de5e = load i32, i32* @eax, align 8
  ret i32 %v0_1de5e
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1de60:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_1de8a = call i32 @function_1de91(i32 %tmp99)
  ret i32 %v2_1de8a
}

define i32 @function_1de91(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de91:
  %v0_1de92 = load i32, i32* @eax, align 8
  ret i32 %v0_1de92
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEEC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1de94:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_1dedb = call i32 @function_1dee2(i32 %arg2)
  ret i32 %v2_1dedb
}

define i32 @function_1dee2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dee2:
  %v0_1dee3 = load i32, i32* @eax, align 8
  ret i32 %v0_1dee3
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1dee4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp100, i32* @eax, align 8
  %v1_1df0e = call i32 @function_2e76e(i32 %tmp100)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1df26:
  %v1_1df40 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v10_1df40 = icmp eq i32 %v1_1df40, 0
  store i1 %v10_1df40, i1* @zf, align 1
  store i32 %v1_1df40, i32* @eax, align 8
  %v1_1df46 = call i32 @function_2e54a(i32 %v1_1df40)
  ret i32 %v1_1df46
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1df5e:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v2_1df87 = call i32 @unknown_3be84(i32 %arg1)
  store i32 %v2_1df87, i32* %eax.global-to-local, align 8
  %v4_1df8c = trunc i32 %v2_1df87 to i8
  %v5_1df8c = icmp eq i8 %v4_1df8c, 0
  %v1_1df8e = icmp eq i1 %v5_1df8c, false
  br i1 %v1_1df8e, label %dec_label_pc_1dfb4, label %dec_label_pc_1df90

dec_label_pc_1df90:                               ; preds = %dec_label_pc_1df5e
  br label %dec_label_pc_1dfb4

dec_label_pc_1dfb4:                               ; preds = %dec_label_pc_1df90, %dec_label_pc_1df5e
  %v2_1dfb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1dfb4, i32* %eax.global-to-local, align 8
  %v2_1dfba = call i32 @unknown_3bdbe(i32 %v2_1dfb4)
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v2_1dfc5 = call i32 @unknown_3c252(i32 %arg1)
  store i32 %v2_1dfc5, i32* %eax.global-to-local, align 8
  %v2_1dfcd = call i32 @unknown_3c2ae(i32 %v2_1dfc5)
  %v2_1dfd4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1dfd4, i32* %eax.global-to-local, align 8
  %v4_1dfde = call i32 @unknown_3c418(i32 %v2_1dfd4, i32 %v2_1dfcd)
  %v1_1dfe9 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v2_1dfd4, i32* %eax.global-to-local, align 8
  %v3_1dff6 = call i32 @unknown_411d6(i32 %v1_1dfe9, i32 %v2_1dfd4)
  %v4_1dffb = trunc i32 %v3_1dff6 to i8
  %v5_1dffb = icmp eq i8 %v4_1dffb, 0
  store i32 %arg1, i32* %eax.global-to-local, align 8
  br i1 %v5_1dffb, label %dec_label_pc_1e02e, label %dec_label_pc_1dfff

dec_label_pc_1dfff:                               ; preds = %dec_label_pc_1dfb4
  %v1_1e005 = call i32 @unknown_3c252(i32 %arg1)
  store i32 %v1_1e005, i32* %eax.global-to-local, align 8
  %v1_1e00d = call i32 @unknown_3c2ae(i32 %v1_1e005)
  %v2_1e014 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1e014, i32* %eax.global-to-local, align 8
  %v3_1e01e = call i32 @unknown_3c3ce(i32 %v2_1e014, i32 %v1_1e00d)
  store i32 %v3_1e01e, i32* %eax.global-to-local, align 8
  %v16_1e023 = ptrtoint i32* %stack_var_-68 to i32
  br label %dec_label_pc_1e037

dec_label_pc_1e02e:                               ; preds = %dec_label_pc_1dfb4
  %v2_1e031 = inttoptr i32 %v1_1dfe9 to i32*
  %v1_1e03e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_1e037

dec_label_pc_1e037:                               ; preds = %dec_label_pc_1e02e, %dec_label_pc_1dfff
  %v1_1e03e = phi i32 [ %v16_1e023, %dec_label_pc_1dfff ], [ %v1_1e03e.pre, %dec_label_pc_1e02e ]
  %storemerge3.in = phi i32* [ %stack_var_-44, %dec_label_pc_1dfff ], [ %v2_1e031, %dec_label_pc_1e02e ]
  %storemerge3 = load i32, i32* %storemerge3.in, align 4
  store i32 %storemerge3, i32* %stack_var_-24, align 4
  %v4_1e037 = zext i8 %arg2 to i32
  store i32 %v4_1e037, i32* %eax.global-to-local, align 8
  %v2_1e03e = add i32 %v1_1e03e, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_1e03e = inttoptr i32 %v2_1e03e to i32*
  store i32 %arg3, i32* %v3_1e03e, align 4
  %v1_1e045 = load i32, i32* @esp, align 4
  %v2_1e045 = add i32 %v1_1e045, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1e045 = inttoptr i32 %v2_1e045 to i32*
  store i32 %v2_1dfb4, i32* %v3_1e045, align 4
  %v0_1e049 = load i32, i32* %eax.global-to-local, align 8
  %v1_1e049 = load i32, i32* @esp, align 4
  %v2_1e049 = add i32 %v1_1e049, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1e049 = inttoptr i32 %v2_1e049 to i32*
  store i32 %v0_1e049, i32* %v3_1e049, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_1e050 = load i32, i32* @esp, align 4
  %v2_1e050 = inttoptr i32 %v1_1e050 to i32*
  store i32 %arg1, i32* %v2_1e050, align 4
  %v0_1e053 = call i32 @unknown_41216()
  store i32 0, i32* @eax, align 8
  %v1_1e062 = call i32 @function_1e069()
  store i32 %v1_1e062, i32* %eax.global-to-local, align 8
  ret i32 %v1_1e062

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 4, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @unknown_3c2ae, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3c252, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 4, 6, 5, 8, 7 }
}

define i32 @function_1e069() local_unnamed_addr {
dec_label_pc_1e069:
  %v0_1e06a = load i32, i32* @eax, align 8
  ret i32 %v0_1e06a
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1ERKSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e06c:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_1e08c = inttoptr i32 %arg2 to i32*
  %v2_1e08c = load i32, i32* %v1_1e08c, align 4
  store i32 %v2_1e08c, i32* %arg1, align 4
  %v1_1e096 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1e09c = add i32 %tmp103, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1e09c, i32* @eax, align 8
  %v2_1e0a6 = call i32 @function_2e5ae(i32 %v1_1e09c, i32 %v1_1e096)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEaSERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e0be:
  %stack_var_-24 = alloca i32, align 4
  %v2_1e0e3 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1e0e9 = call i32 @unknown_3c12a(i32 %v2_1e0e3, i32 %arg2)
  ret i32 %v2_1e0e9
}

define i32 @function_1e0ee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e0ee:
  %v0_1e0ee = load i32, i32* @ebp, align 4
  %v1_1e0ee = add i32 %v0_1e0ee, -28
  %v2_1e0ee = inttoptr i32 %v1_1e0ee to i32*
  %v3_1e0ee = load i32, i32* %v2_1e0ee, align 4
  %v1_1e0f5 = add i32 %v0_1e0ee, -20
  %v2_1e0fb = call i32 @unknown_41566(i32 %v1_1e0f5, i32 %v3_1e0ee)
  %v0_1e100 = load i32, i32* @ebp, align 4
  %v1_1e100 = add i32 %v0_1e100, -20
  %v1_1e106 = call i32 @function_37026(i32 %v1_1e100)
  %v0_1e10b = load i32, i32* @ebp, align 4
  %v1_1e10b = add i32 %v0_1e10b, -28
  %v2_1e10b = inttoptr i32 %v1_1e10b to i32*
  %v3_1e10b = load i32, i32* %v2_1e10b, align 4
  store i32 %v3_1e10b, i32* @eax, align 8
  %v1_1e10e = add i32 %v0_1e10b, -12
  %v2_1e10e = inttoptr i32 %v1_1e10e to i32*
  %v3_1e10e = load i32, i32* %v2_1e10e, align 4
  %v3_1e111 = icmp eq i32 %v3_1e10e, 30
  br i1 %v3_1e111, label %bb, label %dec_label_pc_1e11a

bb:                                               ; preds = %dec_label_pc_1e0ee
  %v1_1e118 = call i32 @function_1e138()
  store i32 %v1_1e118, i32* @eax, align 8
  br label %dec_label_pc_1e11a

dec_label_pc_1e11a:                               ; preds = %bb, %dec_label_pc_1e0ee
  %v0_1e11a = call i32 @function_1e133()
  ret i32 %v0_1e11a
}

define i32 @function_1e11d() local_unnamed_addr {
dec_label_pc_1e11d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e11d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e11d
}

define i32 @function_1e133() local_unnamed_addr {
dec_label_pc_1e133:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e138() local_unnamed_addr {
dec_label_pc_1e138:
  %v0_1e13d = load i32, i32* @eax, align 8
  ret i32 %v0_1e13d
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invokerC1ERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e13e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1e13e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_1e13e, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEEC1ERKSK_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1e176:
  %v1_1e19a = call i32 @unknown_41678(i32 %arg1)
  %v1_1e1a2 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1e1a8 = call i32 @unknown_416ae(i32 %v1_1e1a2)
  %v2_1e1b3 = load i32, i32* %arg2, align 4
  %v2_1e1b5 = add i32 %arg1, 140
  %v3_1e1b5 = inttoptr i32 %v2_1e1b5 to i32*
  store i32 %v2_1e1b3, i32* %v3_1e1b5, align 4
  %v1_1e1be = add i32 %arg1, 144
  %v2_1e1be = inttoptr i32 %v1_1e1be to i32*
  store i32 0, i32* %v2_1e1be, align 4
  %v1_1e1cb = add i32 %arg1, 148
  %v2_1e1cb = inttoptr i32 %v1_1e1cb to i32*
  store i32 0, i32* %v2_1e1cb, align 4
  store i32 0, i32* @eax, align 8
  %v1_1e1df = call i32 @function_1e1ff()
  store i32 %v1_1e1df, i32* @eax, align 8
  %v0_1e1e1 = call i32 @function_1e1fa()
  ret i32 %v0_1e1e1

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_1e1e4() local_unnamed_addr {
dec_label_pc_1e1e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e1e4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e1e4
}

define i32 @function_1e1fa() local_unnamed_addr {
dec_label_pc_1e1fa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e1ff() local_unnamed_addr {
dec_label_pc_1e1ff:
  %v0_1e204 = load i32, i32* @eax, align 8
  ret i32 %v0_1e204
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_typeD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e206:
  %v1_1e223 = call i32 @unknown_41804(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1e232 = call i32 @function_1e239()
  ret i32 %v1_1e232
}

define i32 @function_1e239() local_unnamed_addr {
dec_label_pc_1e239:
  %v0_1e23a = load i32, i32* @eax, align 8
  ret i32 %v0_1e23a
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e23c:
  %v2_1e25a = call i32 @unknown_41864(i32 %arg1)
  %v4_1e25f = trunc i32 %v2_1e25a to i8
  %v5_1e25f = icmp eq i8 %v4_1e25f, 0
  %v1_1e261 = icmp eq i1 %v5_1e25f, false
  br i1 %v1_1e261, label %bb, label %dec_label_pc_1e263

bb:                                               ; preds = %dec_label_pc_1e23c
  %v2_1e261 = call i32 @function_1e287()
  br label %dec_label_pc_1e263

dec_label_pc_1e263:                               ; preds = %bb, %dec_label_pc_1e23c
  %v3_1e27b = phi i32 [ %v2_1e261, %bb ], [ %v2_1e25a, %dec_label_pc_1e23c ]
  ret i32 %v3_1e27b
}

define i32 @function_1e287() local_unnamed_addr {
dec_label_pc_1e287:
  %v0_1e287 = load i32, i32* @ebp, align 4
  %v1_1e287 = add i32 %v0_1e287, -28
  %v2_1e287 = inttoptr i32 %v1_1e287 to i32*
  %v3_1e287 = load i32, i32* %v2_1e287, align 4
  %v1_1e28a = add i32 %v3_1e287, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v2_1e28a = inttoptr i32 %v1_1e28a to i32*
  %v3_1e28a = load i32, i32* %v2_1e28a, align 4
  %v1_1e28d = icmp eq i32 %v3_1e28a, 0
  br i1 %v1_1e28d, label %dec_label_pc_1e2a3, label %dec_label_pc_1e291

dec_label_pc_1e291:                               ; preds = %dec_label_pc_1e287
  %v1_1e291 = add i32 %v0_1e287, -13
  %v3_1e298 = load i32, i32* %v2_1e287, align 4
  %v2_1e29e = call i32 @unknown_41938(i32 %v3_1e298, i32 %v1_1e291)
  %v0_1e2a3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1e2a3

dec_label_pc_1e2a3:                               ; preds = %dec_label_pc_1e291, %dec_label_pc_1e287
  %v0_1e2a3 = phi i32 [ %v0_1e2a3.pre, %dec_label_pc_1e291 ], [ %v0_1e287, %dec_label_pc_1e287 ]
  %v1_1e2a3 = add i32 %v0_1e2a3, -28
  %v2_1e2a3 = inttoptr i32 %v1_1e2a3 to i32*
  %v3_1e2a3 = load i32, i32* %v2_1e2a3, align 4
  %v1_1e2a9 = call i32 @unknown_3c442(i32 %v3_1e2a3)
  %v0_1e2ae = load i32, i32* @ebp, align 4
  %v1_1e2ae = add i32 %v0_1e2ae, -28
  %v2_1e2ae = inttoptr i32 %v1_1e2ae to i32*
  %v3_1e2ae = load i32, i32* %v2_1e2ae, align 4
  %v1_1e2b4 = call i32 @unknown_3b9f2(i32 %v3_1e2ae)
  %v0_1e2b9 = load i32, i32* @ebp, align 4
  %v1_1e2b9 = add i32 %v0_1e2b9, -12
  %v2_1e2b9 = inttoptr i32 %v1_1e2b9 to i32*
  %v3_1e2b9 = load i32, i32* %v2_1e2b9, align 4
  %v2_1e2bc = xor i32 %v3_1e2b9, 30
  %v3_1e2bc = icmp eq i32 %v2_1e2bc, 0
  store i32 %v2_1e2bc, i32* @eax, align 8
  br i1 %v3_1e2bc, label %bb, label %dec_label_pc_1e2c5

bb:                                               ; preds = %dec_label_pc_1e2a3
  %v1_1e2c3 = call i32 @function_1e2ee()
  store i32 %v1_1e2c3, i32* @eax, align 8
  br label %dec_label_pc_1e2c5

dec_label_pc_1e2c5:                               ; preds = %bb, %dec_label_pc_1e2a3
  %v0_1e2c5 = call i32 @function_1e2e9()
  ret i32 %v0_1e2c5
}

define i32 @function_1e2c8() local_unnamed_addr {
dec_label_pc_1e2c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e2c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e2c8
}

define i32 @function_1e2e9() local_unnamed_addr {
dec_label_pc_1e2e9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e2ee() local_unnamed_addr {
dec_label_pc_1e2ee:
  %v0_1e2f3 = load i32, i32* @eax, align 8
  ret i32 %v0_1e2f3
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e2f4:
  %v2_1e30e = load i32, i32* %arg1, align 4
  %v1_1e310 = icmp eq i32 %v2_1e30e, 0
  %v1_1e312 = icmp eq i1 %v1_1e310, false
  br i1 %v1_1e312, label %bb, label %dec_label_pc_1e314

bb:                                               ; preds = %dec_label_pc_1e2f4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1e312 = call i32 @function_1e338(i32 %tmp105)
  br label %dec_label_pc_1e314

dec_label_pc_1e314:                               ; preds = %bb, %dec_label_pc_1e2f4
  %v3_1e32c = phi i32 [ %v3_1e312, %bb ], [ %v2_1e30e, %dec_label_pc_1e2f4 ]
  ret i32 %v3_1e32c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1e338(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e338:
  %v0_1e338 = load i32, i32* @ebp, align 4
  %v1_1e338 = add i32 %v0_1e338, -28
  %v2_1e338 = inttoptr i32 %v1_1e338 to i32*
  %v3_1e338 = load i32, i32* %v2_1e338, align 4
  %v1_1e33b = inttoptr i32 %v3_1e338 to i32*
  %v2_1e33b = load i32, i32* %v1_1e33b, align 4
  store i32 %v2_1e33b, i32* @eax, align 8
  %v1_1e33d = add i32 %v0_1e338, -12
  %v2_1e33d = inttoptr i32 %v1_1e33d to i32*
  %v3_1e33d = load i32, i32* %v2_1e33d, align 4
  %v3_1e340 = icmp eq i32 %v3_1e33d, 30
  br i1 %v3_1e340, label %bb, label %dec_label_pc_1e349

bb:                                               ; preds = %dec_label_pc_1e338
  %v1_1e347 = call i32 @function_1e34e()
  br label %dec_label_pc_1e349

dec_label_pc_1e349:                               ; preds = %bb, %dec_label_pc_1e338
  %v2_1e347 = phi i32 [ %v1_1e347, %bb ], [ %v2_1e33b, %dec_label_pc_1e338 ]
  ret i32 %v2_1e347
}

define i32 @function_1e34e() local_unnamed_addr {
dec_label_pc_1e34e:
  %v0_1e34f = load i32, i32* @eax, align 8
  ret i32 %v0_1e34f
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e350:
  %v1_1e36d = call i32 @unknown_41ac8(i32 %arg1)
  store i32 %v1_1e36d, i32* @eax, align 8
  %v1_1e37c = call i32 @function_1e383()
  ret i32 %v1_1e37c
}

define i32 @function_1e383() local_unnamed_addr {
dec_label_pc_1e383:
  %v0_1e384 = load i32, i32* @eax, align 8
  ret i32 %v0_1e384
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE18invocation_janitorC1ERKNS1_24slot_call_iterator_cacheISsNSI_12slot_invokerEEERKSI_PKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e386:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_1e3bd = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1e3bd = inttoptr i32 %v2_1e3bd to i32*
  store i32 %arg3, i32* %v3_1e3bd, align 4
  %v3_1e3c3 = load i32, i32* %stack_var_-44, align 4
  %v2_1e3c6 = add i32 %tmp104, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1e3c6 = inttoptr i32 %v2_1e3c6 to i32*
  store i32 %v3_1e3c3, i32* %v3_1e3c6, align 4
  store i32 0, i32* @eax, align 8
  %v1_1e3d3 = load i32, i32* %stack_var_-44, align 4
  %v5_1e3d3 = call i32 @function_1e3da(i32 %v1_1e3d3, i32 %arg3, i32 %arg2, i32 %tmp104)
  ret i32 %v5_1e3d3
}

define i32 @function_1e3da(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e3da:
  %v0_1e3db = load i32, i32* @eax, align 8
  ret i32 %v0_1e3db
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE18invocation_janitorD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e3dc:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1e3f6 = load i32, i32* %arg1, align 4
  %v1_1e3f8 = add i32 %v2_1e3f6, 148
  %v2_1e3f8 = inttoptr i32 %v1_1e3f8 to i32*
  %v3_1e3f8 = load i32, i32* %v2_1e3f8, align 4
  %v1_1e403 = add i32 %v2_1e3f6, 144
  %v2_1e403 = inttoptr i32 %v1_1e403 to i32*
  %v3_1e403 = load i32, i32* %v2_1e403, align 4
  %tmp103 = icmp ugt i32 %v3_1e3f8, %v3_1e403
  br i1 %tmp103, label %dec_label_pc_1e40d, label %dec_label_pc_1e425

dec_label_pc_1e40d:                               ; preds = %dec_label_pc_1e3dc
  %v1_1e410 = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1e410 = inttoptr i32 %v1_1e410 to i32*
  %v3_1e410 = load i32, i32* %v2_1e410, align 4
  %v1_1e416 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1e416 = inttoptr i32 %v1_1e416 to i32*
  %v3_1e416 = load i32, i32* %v2_1e416, align 4
  %v2_1e420 = call i32 @unknown_41bb0(i32 %v3_1e416, i32 %v3_1e410)
  br label %dec_label_pc_1e425

dec_label_pc_1e425:                               ; preds = %dec_label_pc_1e3dc, %dec_label_pc_1e40d
  store i32 0, i32* @eax, align 8
  %v1_1e42f = call i32 @function_1e436()
  ret i32 %v1_1e42f

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
  uselistorder label %dec_label_pc_1e425, { 1, 0 }
}

define i32 @function_1e436() local_unnamed_addr {
dec_label_pc_1e436:
  %v0_1e437 = load i32, i32* @eax, align 8
  ret i32 %v0_1e437
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state8combinerEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e438:
  %v1_1e452 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1e458 = call i32 @unknown_41d58(i32 %v1_1e452)
  store i32 %v1_1e458, i32* @eax, align 8
  %v1_1e467 = call i32 @function_1e46e()
  ret i32 %v1_1e467
}

define i32 @function_1e46e() local_unnamed_addr {
dec_label_pc_1e46e:
  %v0_1e46f = load i32, i32* @eax, align 8
  ret i32 %v0_1e46f
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e470:
  %v2_1e49a = call i32 @unknown_41dec(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1e4af = call i32 @function_1e4b6()
  ret i32 %v1_1e4af

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e4b6() local_unnamed_addr {
dec_label_pc_1e4b6:
  %v0_1e4b7 = load i32, i32* @eax, align 8
  ret i32 %v0_1e4b7
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e4ba:
  %v2_1e4e4 = call i32 @unknown_41e80(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1e4f9 = call i32 @function_1e500()
  ret i32 %v1_1e4f9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e500() local_unnamed_addr {
dec_label_pc_1e500:
  %v0_1e501 = load i32, i32* @eax, align 8
  ret i32 %v0_1e501
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e504:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_EC1ESX_SX_RNS1_24slot_call_iterator_cacheISsSK_EE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e52e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1e55d = call i32 @unknown_3ca32(i32 %tmp105)
  store i32 %arg2, i32* %arg1, align 4
  %v2_1e570 = add i32 %tmp105, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1e570 = inttoptr i32 %v2_1e570 to i32*
  store i32 %arg3, i32* %v3_1e570, align 4
  %v2_1e579 = add i32 %tmp105, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_1e579 = inttoptr i32 %v2_1e579 to i32*
  store i32 %arg4, i32* %v3_1e579, align 4
  %v2_1e582 = add i32 %tmp105, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_1e582 = inttoptr i32 %v2_1e582 to i32*
  store i32 %arg3, i32* %v3_1e582, align 4
  %v1_1e58b = call i32 @unknown_41f3c(i32 %tmp105)
  store i32 0, i32* @eax, align 8
  %v1_1e59a = call i32 @function_1e5a1()
  ret i32 %v1_1e59a

; uselistorder directives
  uselistorder i32 %tmp105, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1e5a1() local_unnamed_addr {
dec_label_pc_1e5a1:
  %v0_1e5a2 = load i32, i32* @eax, align 8
  ret i32 %v0_1e5a2
}

define i32 @_ZNK5boost8signals26detail16combiner_invokerINS_8optionalISsEEEclINS0_19optional_last_valueISsEENS1_20slot_call_iterator_tINS1_12signal1_implISsPKcS8_iSt4lessIiENS_8functionIFSsSC_EEENSF_IFSsRKNS0_10connectionESC_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS3_IiEEENS0_5slot1ISsSC_SH_EESN_EEEEESZ_EEEES4_RT_T0_S15_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_1e5a4:
  %v10_1e63c = call i32 @unknown_4216e(i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11)
  store i32 %arg1, i32* @eax, align 8
  %v1_1e651 = call i32 @function_1e658()
  ret i32 %v1_1e651

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e658() local_unnamed_addr {
dec_label_pc_1e658:
  %v0_1e659 = load i32, i32* @eax, align 8
  ret i32 %v0_1e659
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE7destroyEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_1e65c:
  %edx.global-to-local = alloca i32, align 4
  %v2_1e676 = load i8, i8* %arg1, align 1
  %v5_1e679 = icmp eq i8 %v2_1e676, 0
  br i1 %v5_1e679, label %dec_label_pc_1e68c, label %dec_label_pc_1e67d

dec_label_pc_1e67d:                               ; preds = %dec_label_pc_1e65c
  %v4_1e673 = ptrtoint i8* %arg1 to i32
  %v0_1e67d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1e67d, 16777216
  %v3_1e687 = sdiv i32 %sext, 16777216
  %v4_1e687 = call i32 @unknown_4230c(i32 %v4_1e673, i32 %v3_1e687)
  br label %dec_label_pc_1e68c

dec_label_pc_1e68c:                               ; preds = %dec_label_pc_1e67d, %dec_label_pc_1e65c
  store i32 0, i32* @eax, align 8
  %v1_1e696 = call i32 @function_1e69d()
  ret i32 %v1_1e696
}

define i32 @function_1e69d() local_unnamed_addr {
dec_label_pc_1e69d:
  %v0_1e69e = load i32, i32* @eax, align 8
  ret i32 %v0_1e69e
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_1e6a0:
  %v4_1e6b7 = ptrtoint i8* %arg1 to i32
  %v2_1e6ba = load i8, i8* %arg1, align 1
  %v3_1e6ba = zext i8 %v2_1e6ba to i32
  store i32 %v3_1e6ba, i32* @eax, align 8
  %v3_1e6c7 = call i32 @function_1e6ce(i32 %v4_1e6b7)
  ret i32 %v3_1e6c7

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_1e6ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6ce:
  %v0_1e6cf = load i32, i32* @eax, align 8
  ret i32 %v0_1e6cf
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE9constructERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e6d0:
  %v1_1e6f3 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_1e6f9 = call i32 @unknown_423ca(i32 %v1_1e6f3)
  %v1_1e712 = icmp eq i32 %v1_1e6f9, 0
  br i1 %v1_1e712, label %bb, label %dec_label_pc_1e716

bb:                                               ; preds = %dec_label_pc_1e6d0
  %v3_1e714 = call i32 @function_1e725(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 0)
  br label %dec_label_pc_1e716

dec_label_pc_1e716:                               ; preds = %bb, %dec_label_pc_1e6d0
  ret i32 %arg2
}

define i32 @function_1e725(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e725:
  %v0_1e725 = load i32, i32* @ebp, align 4
  %v1_1e725 = add i32 %v0_1e725, -44
  %v2_1e725 = inttoptr i32 %v1_1e725 to i32*
  %v3_1e725 = load i32, i32* %v2_1e725, align 4
  %v1_1e728 = inttoptr i32 %v3_1e725 to i8*
  store i8 1, i8* %v1_1e728, align 1
  %v0_1e72b = load i32, i32* @ebp, align 4
  %v1_1e72b = add i32 %v0_1e72b, -28
  %v2_1e72b = inttoptr i32 %v1_1e72b to i32*
  %v3_1e72b = load i32, i32* %v2_1e72b, align 4
  %v2_1e72e = xor i32 %v3_1e72b, 30
  %v3_1e72e = icmp eq i32 %v2_1e72e, 0
  store i32 %v2_1e72e, i32* @eax, align 8
  br i1 %v3_1e72e, label %bb, label %dec_label_pc_1e737

bb:                                               ; preds = %dec_label_pc_1e725
  %v1_1e735 = call i32 @function_1e756()
  store i32 %v1_1e735, i32* @eax, align 8
  br label %dec_label_pc_1e737

dec_label_pc_1e737:                               ; preds = %bb, %dec_label_pc_1e725
  %v0_1e737 = call i32 @function_1e751()
  ret i32 %v0_1e737
}

define i32 @function_1e751() local_unnamed_addr {
dec_label_pc_1e751:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e756() local_unnamed_addr {
dec_label_pc_1e756:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e758(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e758:
  %v0_1e758 = load i32, i32* @eax, align 8
  ret i32 %v0_1e758
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e75e:
  %ebx.global-to-local = alloca i32, align 4
  %v1_1e77c = call i32 @unknown_42486(i32 %arg1)
  %v0_1e781 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_1e781, 16777216
  %v3_1e78f = sdiv i32 %sext, 16777216
  %v4_1e78f = call i32 @unknown_424c4(i32 %arg1, i32 %v1_1e77c, i32 %v3_1e78f)
  store i32 %v4_1e78f, i32* @eax, align 8
  %v1_1e79e = call i32 @function_1e7a5()
  ret i32 %v1_1e79e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e7a5() local_unnamed_addr {
dec_label_pc_1e7a5:
  %v0_1e7aa = load i32, i32* @eax, align 8
  ret i32 %v0_1e7aa
}

define i32 @_ZNSaISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e7ac:
  %v1_1e7c9 = call i32 @unknown_4254c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1e7d8 = call i32 @function_1e7df()
  ret i32 %v1_1e7d8
}

define i32 @function_1e7df() local_unnamed_addr {
dec_label_pc_1e7df:
  %v0_1e7e0 = load i32, i32* @eax, align 8
  ret i32 %v0_1e7e0
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE13_M_deallocateEPSsj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e7e2:
  %v10_1e805 = icmp eq i32 %arg2, 0
  br i1 %v10_1e805, label %dec_label_pc_1e824, label %dec_label_pc_1e80b

dec_label_pc_1e80b:                               ; preds = %dec_label_pc_1e7e2
  %v3_1e81f = call i32 @unknown_425ac(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_1e824

dec_label_pc_1e824:                               ; preds = %dec_label_pc_1e80b, %dec_label_pc_1e7e2
  store i32 0, i32* @eax, align 8
  %v1_1e82e = call i32 @function_1e835()
  ret i32 %v1_1e82e
}

define i32 @function_1e835() local_unnamed_addr {
dec_label_pc_1e835:
  %v0_1e836 = load i32, i32* @eax, align 8
  ret i32 %v0_1e836
}

define i32 @_ZSt8_DestroyIPSsEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e837:
  %v2_1e861 = call i32 @unknown_42642(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1e870 = call i32 @function_1e877()
  ret i32 %v1_1e870
}

define i32 @function_1e877() local_unnamed_addr {
dec_label_pc_1e877:
  %v0_1e878 = load i32, i32* @eax, align 8
  ret i32 %v0_1e878
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE13_Rb_tree_implIS3_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e87a:
  %v1_1e897 = call i32 @unknown_426dc(i32 %arg1)
  %v1_1e89f = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1e89f = inttoptr i32 %v1_1e89f to i32*
  store i32 0, i32* %v2_1e89f, align 4
  %v1_1e8a9 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1e8a9 = inttoptr i32 %v1_1e8a9 to i32*
  store i32 0, i32* %v2_1e8a9, align 4
  %v1_1e8b3 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1e8b3 = inttoptr i32 %v1_1e8b3 to i32*
  store i32 0, i32* %v2_1e8b3, align 4
  %v1_1e8bd = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1e8bd = inttoptr i32 %v1_1e8bd to i32*
  store i32 0, i32* %v2_1e8bd, align 4
  %v1_1e8c7 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1e8c7 = inttoptr i32 %v1_1e8c7 to i32*
  store i32 0, i32* %v2_1e8c7, align 4
  %v1_1e8d4 = call i32 @unknown_42712(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1e8e3 = call i32 @function_1e8ea()
  ret i32 %v1_1e8e3

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1e8ea() local_unnamed_addr {
dec_label_pc_1e8ea:
  %v0_1e8eb = load i32, i32* @eax, align 8
  ret i32 %v0_1e8eb
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e8ec:
  ret i32 0
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e916:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1e916 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e930 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1e930 = inttoptr i32 %v1_1e930 to i32*
  %v3_1e930 = load i32, i32* %v2_1e930, align 4
  store i32 %v0_1e916, i32* %ebp.global-to-local, align 4
  ret i32 %v3_1e930
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e946:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1e946 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e960 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1e960 = inttoptr i32 %v1_1e960 to i32*
  %v3_1e960 = load i32, i32* %v2_1e960, align 4
  store i32 %v0_1e946, i32* %ebp.global-to-local, align 4
  ret i32 %v3_1e960
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE15_M_destroy_nodeEPSt13_Rb_tree_nodeISsE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e976:
  %stack_var_-17 = alloca i32, align 4
  %v1_1e997 = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1e99d = call i32 @unknown_428b3(i32 %v1_1e997)
  %v2_1e9a4 = ptrtoint i32* %stack_var_-17 to i32
  %v3_1e9b1 = call i32 @unknown_42864(i32 %v2_1e9a4, i32 %arg1)
  %v3_1e9c3 = call i32 @unknown_3e1a4(i32 %v2_1e9a4, i32 %v2_1e99d)
  %v1_1e9ce = call i32 @unknown_3d122(i32 %v2_1e9a4)
  %v3_1e9e0 = call i32 @unknown_428e0(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1e9ef = call i32 @function_1ea0f()
  store i32 %v1_1e9ef, i32* @eax, align 8
  %v0_1e9f1 = call i32 @function_1ea0a()
  ret i32 %v0_1e9f1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e9f4() local_unnamed_addr {
dec_label_pc_1e9f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e9f4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e9f4
}

define i32 @function_1ea0a() local_unnamed_addr {
dec_label_pc_1ea0a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ea0f() local_unnamed_addr {
dec_label_pc_1ea0f:
  %v0_1ea13 = load i32, i32* @eax, align 8
  ret i32 %v0_1ea13
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE12_Vector_implC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ea14:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1ea3e = call i32 @unknown_429c8(i32 %tmp102, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_1ea4f = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1ea4f = inttoptr i32 %v1_1ea4f to i32*
  store i32 0, i32* %v2_1ea4f, align 4
  %v1_1ea59 = add i32 %tmp102, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1ea59 = inttoptr i32 %v1_1ea59 to i32*
  store i32 0, i32* %v2_1ea59, align 4
  store i32 0, i32* @eax, align 8
  %v1_1ea6a = call i32 @function_1ea71()
  ret i32 %v1_1ea6a

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_1ea71() local_unnamed_addr {
dec_label_pc_1ea71:
  %v0_1ea72 = load i32, i32* @eax, align 8
  ret i32 %v0_1ea72
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ea74:
  %v10_1ea91 = icmp eq i32 %arg2, 0
  br i1 %v10_1ea91, label %dec_label_pc_1eab8, label %dec_label_pc_1ea97

dec_label_pc_1ea97:                               ; preds = %dec_label_pc_1ea74
  %v3_1eaac = call i32 @unknown_42a6a(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_1eab8

dec_label_pc_1eab8:                               ; preds = %dec_label_pc_1ea74, %dec_label_pc_1ea97
  %storemerge = phi i32 [ %v3_1eaac, %dec_label_pc_1ea97 ], [ 0, %dec_label_pc_1ea74 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1eac2 = call i32 @function_1eac9()
  ret i32 %v1_1eac2

; uselistorder directives
  uselistorder label %dec_label_pc_1eab8, { 1, 0 }
}

define i32 @function_1eac9() local_unnamed_addr {
dec_label_pc_1eac9:
  %v0_1eaca = load i32, i32* @eax, align 8
  ret i32 %v0_1eaca
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eacc:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1eacc = load i32, i32* %ebp.global-to-local, align 4
  %v1_1eaec = inttoptr i32 %arg2 to i32*
  %v2_1eaec = load i32, i32* %v1_1eaec, align 4
  store i32 %v2_1eaec, i32* %arg1, align 4
  store i32 %v0_1eacc, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEEPSsET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1eb06:
  %v3_1eb3d = call i32 @unknown_42b5a(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_1eb3d, i32* @eax, align 8
  %v1_1eb4c = call i32 @function_1eb53()
  ret i32 %v1_1eb4c
}

define i32 @function_1eb53() local_unnamed_addr {
dec_label_pc_1eb53:
  %v0_1eb54 = load i32, i32* @eax, align 8
  ret i32 %v0_1eb54
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb56:
  %v1_1eb73 = call i32 @unknown_42c6c(i32 %arg1)
  %v1_1eb7b = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1eb7b = inttoptr i32 %v1_1eb7b to i32*
  store i32 0, i32* %v2_1eb7b, align 4
  %v1_1eb85 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1eb85 = inttoptr i32 %v1_1eb85 to i32*
  store i32 0, i32* %v2_1eb85, align 4
  %v1_1eb8f = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1eb8f = inttoptr i32 %v1_1eb8f to i32*
  store i32 0, i32* %v2_1eb8f, align 4
  %v1_1eb99 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1eb99 = inttoptr i32 %v1_1eb99 to i32*
  store i32 0, i32* %v2_1eb99, align 4
  %v1_1eba3 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1eba3 = inttoptr i32 %v1_1eba3 to i32*
  store i32 0, i32* %v2_1eba3, align 4
  %v1_1ebb0 = call i32 @unknown_42ca2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1ebbf = call i32 @function_1ebc6()
  ret i32 %v1_1ebbf

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1ebc6() local_unnamed_addr {
dec_label_pc_1ebc6:
  %v0_1ebc7 = load i32, i32* @eax, align 8
  ret i32 %v0_1ebc7
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSsSsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ebc8:
  %v1_1ebe5 = call i32 @unknown_42d6a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1ebf4 = call i32 @function_1ebfb()
  ret i32 %v1_1ebf4
}

define i32 @function_1ebfb() local_unnamed_addr {
dec_label_pc_1ebfb:
  %v0_1ebfc = load i32, i32* @eax, align 8
  ret i32 %v0_1ebfc
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ebfe:
  %v10_1ec5d105 = icmp eq i32 %arg2, 0
  %v1_1ec61106 = icmp eq i1 %v10_1ec5d105, false
  %v5_1ec64108 = icmp eq i1 %v1_1ec61106, false
  %v1_1ec66109 = icmp eq i1 %v5_1ec64108, false
  br i1 %v1_1ec66109, label %dec_label_pc_1ec1d, label %dec_label_pc_1ec68

dec_label_pc_1ec1d:                               ; preds = %dec_label_pc_1ebfe, %dec_label_pc_1ec1d
  %stack_var_-36.0110 = phi i32 [ %v1_1ec3d, %dec_label_pc_1ec1d ], [ %arg2, %dec_label_pc_1ebfe ]
  %v1_1ec23 = call i32 @unknown_42dca(i32 %stack_var_-36.0110)
  %v2_1ec32 = call i32 @unknown_3d7fc(i32 %arg1, i32 %v1_1ec23)
  %v1_1ec3d = call i32 @unknown_42dfa(i32 %stack_var_-36.0110)
  %v2_1ec52 = call i32 @unknown_42e2a(i32 %arg1, i32 %stack_var_-36.0110)
  %v10_1ec5d = icmp eq i32 %v1_1ec3d, 0
  %v1_1ec61 = icmp eq i1 %v10_1ec5d, false
  %v5_1ec64 = icmp eq i1 %v1_1ec61, false
  %v1_1ec66 = icmp eq i1 %v5_1ec64, false
  br i1 %v1_1ec66, label %dec_label_pc_1ec1d, label %dec_label_pc_1ec68

dec_label_pc_1ec68:                               ; preds = %dec_label_pc_1ec1d, %dec_label_pc_1ebfe
  store i32 0, i32* @eax, align 8
  %v1_1ec72 = call i32 @function_1ec79()
  ret i32 %v1_1ec72

; uselistorder directives
  uselistorder i32 %v1_1ec3d, { 1, 0 }
  uselistorder i32 %stack_var_-36.0110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ec1d, { 1, 0 }
}

define i32 @function_1ec79() local_unnamed_addr {
dec_label_pc_1ec79:
  %v0_1ec7a = load i32, i32* @eax, align 8
  ret i32 %v0_1ec7a
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec7c:
  %v1_1ec96 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1ec96 = inttoptr i32 %v1_1ec96 to i32*
  %v3_1ec96 = load i32, i32* %v2_1ec96, align 4
  store i32 %v3_1ec96, i32* @eax, align 8
  %v2_1eca3 = call i32 @function_1ecaa(i32 %arg1)
  ret i32 %v2_1eca3
}

define i32 @function_1ecaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ecaa:
  %v0_1ecab = load i32, i32* @eax, align 8
  ret i32 %v0_1ecab
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE13_Rb_tree_implIS9_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ecac:
  %v1_1ecc9 = call i32 @unknown_42f76(i32 %arg1)
  %v1_1ecd1 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1ecd1 = inttoptr i32 %v1_1ecd1 to i32*
  store i32 0, i32* %v2_1ecd1, align 4
  %v1_1ecdb = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1ecdb = inttoptr i32 %v1_1ecdb to i32*
  store i32 0, i32* %v2_1ecdb, align 4
  %v1_1ece5 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_1ece5 = inttoptr i32 %v1_1ece5 to i32*
  store i32 0, i32* %v2_1ece5, align 4
  %v1_1ecef = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_1ecef = inttoptr i32 %v1_1ecef to i32*
  store i32 0, i32* %v2_1ecef, align 4
  %v1_1ecf9 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_1ecf9 = inttoptr i32 %v1_1ecf9 to i32*
  store i32 0, i32* %v2_1ecf9, align 4
  %v1_1ed06 = call i32 @unknown_42fac(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed1e:
  %v1_1ed3b = call i32 @unknown_43074(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1ed4a = call i32 @function_1ed51()
  ret i32 %v1_1ed4a
}

define i32 @function_1ed51() local_unnamed_addr {
dec_label_pc_1ed51:
  %v0_1ed52 = load i32, i32* @eax, align 8
  ret i32 %v0_1ed52
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ed54:
  %v10_1edb3105 = icmp eq i32 %arg2, 0
  %v1_1edb7106 = icmp eq i1 %v10_1edb3105, false
  %v5_1edba108 = icmp eq i1 %v1_1edb7106, false
  %v1_1edbc109 = icmp eq i1 %v5_1edba108, false
  br i1 %v1_1edbc109, label %dec_label_pc_1ed73, label %dec_label_pc_1edbe

dec_label_pc_1ed73:                               ; preds = %dec_label_pc_1ed54, %dec_label_pc_1ed73
  %stack_var_-36.0110 = phi i32 [ %v1_1ed93, %dec_label_pc_1ed73 ], [ %arg2, %dec_label_pc_1ed54 ]
  %v1_1ed79 = call i32 @unknown_430d4(i32 %stack_var_-36.0110)
  %v2_1ed88 = call i32 @unknown_3daa8(i32 %arg1, i32 %v1_1ed79)
  %v1_1ed93 = call i32 @unknown_43104(i32 %stack_var_-36.0110)
  %v2_1eda8 = call i32 @unknown_43134(i32 %arg1, i32 %stack_var_-36.0110)
  %v10_1edb3 = icmp eq i32 %v1_1ed93, 0
  %v1_1edb7 = icmp eq i1 %v10_1edb3, false
  %v5_1edba = icmp eq i1 %v1_1edb7, false
  %v1_1edbc = icmp eq i1 %v5_1edba, false
  br i1 %v1_1edbc, label %dec_label_pc_1ed73, label %dec_label_pc_1edbe

dec_label_pc_1edbe:                               ; preds = %dec_label_pc_1ed73, %dec_label_pc_1ed54
  store i32 0, i32* @eax, align 8
  %v1_1edc8 = call i32 @function_1edcf()
  ret i32 %v1_1edc8

; uselistorder directives
  uselistorder i32 %v1_1ed93, { 1, 0 }
  uselistorder i32 %stack_var_-36.0110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ed73, { 1, 0 }
}

define i32 @function_1edcf() local_unnamed_addr {
dec_label_pc_1edcf:
  %v0_1edd0 = load i32, i32* @eax, align 8
  ret i32 %v0_1edd0
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1edd2:
  %v1_1edec = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1edec = inttoptr i32 %v1_1edec to i32*
  %v3_1edec = load i32, i32* %v2_1edec, align 4
  store i32 %v3_1edec, i32* @eax, align 8
  %v2_1edf9 = call i32 @function_1ee00(i32 %arg1)
  ret i32 %v2_1edf9
}

define i32 @function_1ee00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee00:
  %v0_1ee01 = load i32, i32* @eax, align 8
  ret i32 %v0_1ee01
}

define i32 @_ZNSt12_Vector_baseIxSaIxEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee02:
  %v1_1ee1f = call i32 @unknown_43280(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_1ee2e = call i32 @function_1ee35()
  ret i32 %v1_1ee2e
}

define i32 @function_1ee35() local_unnamed_addr {
dec_label_pc_1ee35:
  %v0_1ee36 = load i32, i32* @eax, align 8
  ret i32 %v0_1ee36
}

define i32 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee38:
  %v1_1ee55 = call i32 @unknown_3af18(i32 %arg1)
  %v1_1ee5d = call i32 @unknown_43308(i32 %v1_1ee55)
  store i32 %v1_1ee5d, i32* @eax, align 8
  %v1_1ee6c = call i32 @function_1ee73()
  ret i32 %v1_1ee6c
}

define i32 @function_1ee73() local_unnamed_addr {
dec_label_pc_1ee73:
  %v0_1ee74 = load i32, i32* @eax, align 8
  ret i32 %v0_1ee74
}

define i32 @_ZNKSt6vectorIxSaIxEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ee76:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1ee76 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ee90 = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1ee90 = inttoptr i32 %v1_1ee90 to i32*
  %v3_1ee90 = load i32, i32* %v2_1ee90, align 4
  %v2_1ee98 = load i32, i32* %arg1, align 4
  %v2_1ee9c = sub i32 %v3_1ee90, %v2_1ee98
  %v2_1eea0 = ashr i32 %v2_1ee9c, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v0_1ee76, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1eea0
}

define i32 @_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyIPxEES3_jT_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1eeb6:
  %v2_1eeed = call i32 @unknown_407f0(i32 %arg1, i32 %arg2)
  %v1_1eefb = call i32 @unknown_3af20(i32 %arg1)
  %v4_1ef18 = call i32 @unknown_3e3a0(i32 %arg3, i32 %arg4, i32 %v2_1eeed, i32 %v1_1eefb)
  store i32 %v2_1eeed, i32* @eax, align 8
  %v1_1ef2a = call i32 @function_1ef6a()
  store i32 %v1_1ef2a, i32* @eax, align 8
  %v0_1ef2c = call i32 @function_1ef65()
  ret i32 %v0_1ef2c

; uselistorder directives
  uselistorder i32 %v2_1eeed, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ef2f() local_unnamed_addr {
dec_label_pc_1ef2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ef2f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ef2f
}

define i32 @function_1ef65() local_unnamed_addr {
dec_label_pc_1ef65:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ef6a() local_unnamed_addr {
dec_label_pc_1ef6a:
  %v0_1ef6f = load i32, i32* @eax, align 8
  ret i32 %v0_1ef6f
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ef70:
  %v10_1ef93 = icmp eq i32 %arg2, 0
  br i1 %v10_1ef93, label %dec_label_pc_1efb2, label %dec_label_pc_1ef99

dec_label_pc_1ef99:                               ; preds = %dec_label_pc_1ef70
  %v3_1efad = call i32 @unknown_43470(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_1efb2

dec_label_pc_1efb2:                               ; preds = %dec_label_pc_1ef99, %dec_label_pc_1ef70
  store i32 0, i32* @eax, align 8
  %v1_1efbc = call i32 @function_1efc3()
  ret i32 %v1_1efbc
}

define i32 @function_1efc3() local_unnamed_addr {
dec_label_pc_1efc3:
  %v0_1efc4 = load i32, i32* @eax, align 8
  ret i32 %v0_1efc4
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxE9constructEPxRKx(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_1efc6:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v2_1eff7 = call i32 @function_244b6(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %arg2)
  %v1_1effe = icmp eq i32 %v2_1eff7, 0
  br i1 %v1_1effe, label %dec_label_pc_1f00f, label %dec_label_pc_1f002

dec_label_pc_1f002:                               ; preds = %dec_label_pc_1efc6
  %tmp101 = ptrtoint i32* %arg3 to i32
  %v1_1f005 = add i32 %tmp101, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1f005 = inttoptr i32 %v1_1f005 to i32*
  %v3_1f005 = load i32, i32* %v2_1f005, align 4
  store i32 %v3_1f005, i32* %edx.global-to-local, align 8
  %v2_1f008 = load i32, i32* %arg3, align 4
  %v2_1f00a = inttoptr i32 %v2_1eff7 to i32*
  store i32 %v2_1f008, i32* %v2_1f00a, align 4
  %v0_1f00c = load i32, i32* %edx.global-to-local, align 8
  %v2_1f00c = add i32 %v2_1eff7, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1f00c = inttoptr i32 %v2_1f00c to i32*
  store i32 %v0_1f00c, i32* %v3_1f00c, align 4
  br label %dec_label_pc_1f00f

dec_label_pc_1f00f:                               ; preds = %dec_label_pc_1f002, %dec_label_pc_1efc6
  store i32 0, i32* @eax, align 8
  %v1_1f019 = call i32 @function_1f020()
  ret i32 %v1_1f019

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1f020() local_unnamed_addr {
dec_label_pc_1f020:
  %v0_1f021 = load i32, i32* @eax, align 8
  ret i32 %v0_1f021
}

define i32 @_ZNSt6vectorIxSaIxEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPxS1_EERKx(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f022:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_1f04a = add i32 %tmp114, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1f04a = inttoptr i32 %v1_1f04a to i32*
  %v3_1f04a = load i32, i32* %v2_1f04a, align 4
  store i32 %v3_1f04a, i32* %edx.global-to-local, align 8
  %v1_1f050 = add i32 %tmp114, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1f050 = inttoptr i32 %v1_1f050 to i32*
  %v3_1f050 = load i32, i32* %v2_1f050, align 4
  %v12_1f053 = icmp eq i32 %v3_1f04a, %v3_1f050
  br i1 %v12_1f053, label %dec_label_pc_1f0e6, label %dec_label_pc_1f05b

dec_label_pc_1f05b:                               ; preds = %dec_label_pc_1f022
  %v3_1f05e = load i32, i32* %v2_1f04a, align 4
  %v1_1f061 = add i32 %v3_1f05e, -8
  store i32 %v1_1f061, i32* %ecx.global-to-local, align 4
  %v3_1f067 = load i32, i32* %v2_1f04a, align 4
  store i32 %v3_1f067, i32* %edx.global-to-local, align 8
  %v1_1f078 = call i32 @unknown_3dfe8(i32 %tmp114)
  %v3_1f080 = load i32, i32* %v2_1f04a, align 4
  %v1_1f083 = add i32 %v3_1f080, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_1f083, i32* %edx.global-to-local, align 8
  store i32 %v1_1f083, i32* %v2_1f04a, align 4
  %v1_1f08f = add i32 %arg3, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1f08f = inttoptr i32 %v1_1f08f to i32*
  %v3_1f08f = load i32, i32* %v2_1f08f, align 4
  store i32 %v3_1f08f, i32* %edx.global-to-local, align 8
  %v1_1f092 = inttoptr i32 %arg3 to i32*
  %v2_1f092 = load i32, i32* %v1_1f092, align 4
  %v3_1f09d = load i32, i32* %v2_1f04a, align 4
  %v1_1f0a0 = add i32 %v3_1f09d, -8
  store i32 %v1_1f0a0, i32* %esi.global-to-local, align 4
  %v3_1f0a6 = load i32, i32* %v2_1f04a, align 4
  %v1_1f0a9 = add i32 %v3_1f0a6, -16
  %v2_1f0ac = ptrtoint i32* %stack_var_-52 to i32
  %v1_1f0b2 = call i32 @unknown_40b6c(i32 %v2_1f0ac)
  %v1_1f0b7 = inttoptr i32 %v1_1f0b2 to i32*
  %v2_1f0b7 = load i32, i32* %v1_1f0b7, align 4
  %v0_1f0b9 = load i32, i32* %esi.global-to-local, align 4
  %v4_1f0c4 = call i32 @unknown_43563(i32 %v2_1f0b7, i32 %v1_1f0a9, i32 %v0_1f0b9)
  %v1_1f0cf = call i32 @unknown_3b54e(i32 %v2_1f0ac)
  store i32 %v1_1f0cf, i32* %ecx.global-to-local, align 4
  store i32 %v3_1f08f, i32* %edx.global-to-local, align 8
  %v2_1f0dc = inttoptr i32 %v1_1f0cf to i32*
  store i32 %v2_1f092, i32* %v2_1f0dc, align 4
  %v0_1f0de = load i32, i32* %edx.global-to-local, align 8
  %v1_1f0de = load i32, i32* %ecx.global-to-local, align 4
  %v2_1f0de = add i32 %v1_1f0de, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_1f0de = inttoptr i32 %v2_1f0de to i32*
  store i32 %v0_1f0de, i32* %v3_1f0de, align 4
  %v0_1f0e1 = call i32 @function_1f2dc()
  ret i32 %v0_1f0e1

dec_label_pc_1f0e6:                               ; preds = %dec_label_pc_1f022
  %v4_1f0fc = call i32 @unknown_435ca(i32 %tmp114, i32 1, i32 ptrtoint ([22 x i8]* @global_var_5fd2.2515 to i32))
  %v2_1f104 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp114, i32* %edx.global-to-local, align 8
  %v2_1f111 = call i32 @unknown_3ac0e(i32 %v2_1f104, i32 %tmp114)
  %v2_1f120 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1f126 = call i32 @unknown_406ab(i32 %v2_1f120, i32 %v2_1f104)
  store i32 %v4_1f0fc, i32* %edx.global-to-local, align 8
  %v1_1f13b = call i32 @unknown_4095c(i32 %tmp114)
  %v2_1f14c = shl i32 %v2_1f126, ptrtoint (i32* @global_var_3.2378 to i32)
  %v5_1f151 = add i32 %v1_1f13b, %v2_1f14c
  store i32 %v5_1f151, i32* %edx.global-to-local, align 8
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_1f165 = call i32 @unknown_3dfe8(i32 %tmp114)
  %v1_1f177 = call i32 @unknown_3b08c(i32 %tmp114)
  %v1_1f184 = call i32 @unknown_40b6c(i32 %v2_1f120)
  %v1_1f189 = inttoptr i32 %v1_1f184 to i32*
  %v2_1f189 = load i32, i32* %v1_1f189, align 4
  store i32 %v2_1f189, i32* %edx.global-to-local, align 8
  %v2_1f18e = load i32, i32* %arg1, align 4
  store i32 %v1_1f13b, i32* %ecx.global-to-local, align 4
  %v5_1f1a2 = call i32 @unknown_4369c(i32 %v2_1f18e, i32 %v2_1f189, i32 %v1_1f13b, i32 %v1_1f177)
  %v4_1f1aa = add i32 %v5_1f1a2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_1f1b4 = call i32 @unknown_3b08c(i32 %tmp114)
  %v3_1f1be = load i32, i32* %v2_1f04a, align 4
  store i32 %v3_1f1be, i32* %esi.global-to-local, align 4
  %v1_1f1c7 = call i32 @unknown_40b6c(i32 %v2_1f120)
  %v1_1f1cc = inttoptr i32 %v1_1f1c7 to i32*
  %v2_1f1cc = load i32, i32* %v1_1f1cc, align 4
  store i32 %v4_1f1aa, i32* %edx.global-to-local, align 8
  %v5_1f1e0 = call i32 @unknown_4369c(i32 %v2_1f1cc, i32 %v3_1f1be, i32 %v4_1f1aa, i32 %v1_1f1b4)
  %v1_1f1ee = call i32 @unknown_3b08c(i32 %tmp114)
  store i32 %tmp114, i32* %edx.global-to-local, align 8
  %v3_1f1f6 = load i32, i32* %v2_1f04a, align 4
  store i32 %v3_1f1f6, i32* %ecx.global-to-local, align 4
  store i32 %tmp114, i32* %edx.global-to-local, align 8
  %v2_1f1fc = load i32, i32* %arg1, align 4
  store i32 %v2_1f1fc, i32* %edx.global-to-local, align 8
  %v3_1f209 = call i32 @unknown_3b0b9(i32 %v2_1f1fc, i32 %v3_1f1f6, i32 %v1_1f1ee)
  %v3_1f211 = load i32, i32* %v2_1f050, align 4
  store i32 %v3_1f211, i32* %edx.global-to-local, align 8
  %v2_1f219 = load i32, i32* %arg1, align 4
  %v2_1f21d = sub i32 %v3_1f211, %v2_1f219
  %v2_1f221 = ashr i32 %v2_1f21d, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v2_1f221, i32* %ecx.global-to-local, align 4
  store i32 %v2_1f219, i32* %edx.global-to-local, align 8
  %v3_1f239 = call i32 @unknown_3df92(i32 %tmp114, i32 %v2_1f219, i32 %v2_1f221)
  store i32 %v1_1f13b, i32* %arg1, align 4
  store i32 %v5_1f1e0, i32* %v2_1f04a, align 4
  %v2_1f252 = shl i32 %v4_1f0fc, ptrtoint (i32* @global_var_3.2378 to i32)
  %v5_1f257 = add i32 %v1_1f13b, %v2_1f252
  store i32 %v5_1f257, i32* %edx.global-to-local, align 8
  store i32 %v5_1f257, i32* %v2_1f050, align 4
  %v0_1f260 = call i32 @function_1f2dc()
  ret i32 %v0_1f260

; uselistorder directives
  uselistorder i32 %v2_1f219, { 1, 0, 2 }
  uselistorder i32 %v4_1f1aa, { 1, 0 }
  uselistorder i32 %v1_1f13b, { 0, 2, 4, 3, 1 }
  uselistorder i32* %v2_1f04a, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 %tmp114, { 1, 3, 2, 4, 5, 6, 7, 8, 10, 9, 11, 0, 13, 12 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4369c, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4095c, { 1, 0 }
  uselistorder i32 ()* @function_1f2dc, { 1, 0 }
  uselistorder i32 (i32)* @unknown_40b6c, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3dfe8, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
}

define i32 @function_1f263() local_unnamed_addr {
dec_label_pc_1f263:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f263 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f263
}

define i32 @function_1f27a() local_unnamed_addr {
dec_label_pc_1f27a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f27a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f27a = add i32 %v0_1f27a, 1962992765
  %v2_1f27a = inttoptr i32 %v1_1f27a to i32*
  %v3_1f27a = load i32, i32* %v2_1f27a, align 4
  %v4_1f27a = add i32 %v3_1f27a, 1
  store i32 %v4_1f27a, i32* %v2_1f27a, align 4
  %v0_1f280 = load i32, i32* %eax.global-to-local, align 8
  %v2_1f280 = load i1, i1* %cf.global-to-local, align 1
  %v3_1f280 = zext i1 %v2_1f280 to i32
  %v4_1f280 = add i32 %v0_1f280, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32))
  %v5_1f280 = add i32 %v4_1f280, %v3_1f280
  %v31_1f280 = urem i32 %v5_1f280, 256
  %v33_1f280 = and i32 %v0_1f280, -256
  %v34_1f280 = or i32 %v31_1f280, %v33_1f280
  %v0_1f282 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f282 = add i32 %v0_1f282, 1
  store i32 %v1_1f282, i32* @ebp, align 4
  %v2_1f284 = shl i32 %v34_1f280, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v2_1f284, i32* %eax.global-to-local, align 8
  %v2_1f289 = add i32 %v0_1f282, -15
  %v3_1f289 = inttoptr i32 %v2_1f289 to i32*
  %v4_1f289 = load i32, i32* %v3_1f289, align 4
  %v5_1f289 = add i32 %v4_1f289, %v2_1f284
  %v10_1f289 = icmp ult i32 %v5_1f289, %v2_1f284
  store i1 %v10_1f289, i1* %cf.global-to-local, align 1
  %v1_1f28c = add i32 %v0_1f282, -43
  %v2_1f28c = inttoptr i32 %v1_1f28c to i32*
  %v3_1f28c = load i32, i32* %v2_1f28c, align 4
  store i32 %v3_1f28c, i32* %eax.global-to-local, align 8
  %v2_1f296 = call i32 @unknown_404e6(i32 %v3_1f28c, i32 %v5_1f289)
  store i32 %v2_1f296, i32* %eax.global-to-local, align 8
  %v0_1f29b = call i32 @function_1f2be()
  store i32 %v0_1f29b, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f29b

; uselistorder directives
  uselistorder i32 %v2_1f284, { 1, 0, 2 }
  uselistorder i32 %v0_1f280, { 1, 0 }
}

define i32 @function_1f29d() local_unnamed_addr {
dec_label_pc_1f29d:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1f29d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f29d = add i32 %v0_1f29d, -44
  %v2_1f29d = inttoptr i32 %v1_1f29d to i32*
  %v3_1f29d = load i32, i32* %v2_1f29d, align 4
  %v1_1f2a3 = call i32 @unknown_3b08c(i32 %v3_1f29d)
  %v1_1f2ac = add i32 %v0_1f29d, -28
  %v2_1f2ac = inttoptr i32 %v1_1f2ac to i32*
  %v3_1f2ac = load i32, i32* %v2_1f2ac, align 4
  %v1_1f2b3 = add i32 %v0_1f29d, -16
  %v2_1f2b3 = inttoptr i32 %v1_1f2b3 to i32*
  %v3_1f2b3 = load i32, i32* %v2_1f2b3, align 4
  %v3_1f2b9 = call i32 @unknown_3b0b9(i32 %v3_1f2b3, i32 %v3_1f2ac, i32 %v1_1f2a3)
  ret i32 %v3_1f2b9

; uselistorder directives
  uselistorder i32 %v0_1f29d, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_3b0b9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3b08c, { 3, 2, 1, 0 }
}

define i32 @function_1f2be() local_unnamed_addr {
dec_label_pc_1f2be:
  %v0_1f2be = load i32, i32* @ebp, align 4
  %v1_1f2be = add i32 %v0_1f2be, -44
  %v2_1f2be = inttoptr i32 %v1_1f2be to i32*
  %v3_1f2be = load i32, i32* %v2_1f2be, align 4
  %v1_1f2c1 = add i32 %v0_1f2be, -24
  %v2_1f2c1 = inttoptr i32 %v1_1f2c1 to i32*
  %v3_1f2c1 = load i32, i32* %v2_1f2c1, align 4
  %v1_1f2c8 = add i32 %v0_1f2be, -16
  %v2_1f2c8 = inttoptr i32 %v1_1f2c8 to i32*
  %v3_1f2c8 = load i32, i32* %v2_1f2c8, align 4
  %v3_1f2d2 = call i32 @unknown_3df92(i32 %v3_1f2be, i32 %v3_1f2c8, i32 %v3_1f2c1)
  ret i32 %v3_1f2d2

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_3df92, { 1, 0 }
}

define i32 @function_1f2dc() local_unnamed_addr {
dec_label_pc_1f2dc:
  %v0_1f2dc = load i32, i32* @ebp, align 4
  %v1_1f2dc = add i32 %v0_1f2dc, -12
  %v2_1f2dc = inttoptr i32 %v1_1f2dc to i32*
  %v3_1f2dc = load i32, i32* %v2_1f2dc, align 4
  %v2_1f2df = xor i32 %v3_1f2dc, 30
  %v3_1f2df = icmp eq i32 %v2_1f2df, 0
  store i32 %v2_1f2df, i32* @eax, align 8
  br i1 %v3_1f2df, label %bb, label %dec_label_pc_1f2e8

bb:                                               ; preds = %dec_label_pc_1f2dc
  %v1_1f2e6 = call i32 @function_1f2ed()
  br label %dec_label_pc_1f2e8

dec_label_pc_1f2e8:                               ; preds = %bb, %dec_label_pc_1f2dc
  %v2_1f2e6 = phi i32 [ %v1_1f2e6, %bb ], [ %v2_1f2df, %dec_label_pc_1f2dc ]
  ret i32 %v2_1f2e6
}

define i32 @function_1f2ed() local_unnamed_addr {
dec_label_pc_1f2ed:
  %v0_1f2f3 = load i32, i32* @eax, align 8
  ret i32 %v0_1f2f3
}

define i32 @_ZNSt6vectorIxSaIxEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKxS1_EEEEPxjT_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f2f4:
  %v2_1f32b = call i32 @unknown_40c2e(i32 %arg1, i32 %arg2)
  %v1_1f339 = call i32 @unknown_3b35e(i32 %arg1)
  %v4_1f356 = call i32 @unknown_3b540(i32 %arg3, i32 %arg4, i32 %v2_1f32b, i32 %v1_1f339)
  store i32 %v2_1f32b, i32* @eax, align 8
  %v1_1f368 = call i32 @function_1f3a8()
  store i32 %v1_1f368, i32* @eax, align 8
  %v0_1f36a = call i32 @function_1f3a3()
  ret i32 %v0_1f36a

; uselistorder directives
  uselistorder i32 %v2_1f32b, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f36c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f36c:
  %v0_1f36c = load i32, i32* @eax, align 8
  store i32 %v0_1f36c, i32* @ebx, align 4
  ret i32 %v0_1f36c
}

define i32 @function_1f3a3() local_unnamed_addr {
dec_label_pc_1f3a3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f3a8() local_unnamed_addr {
dec_label_pc_1f3a8:
  %v0_1f3ad = load i32, i32* @eax, align 8
  ret i32 %v0_1f3ad
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEENS1_IPxS6_EEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f3ae:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1f3d7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1f3e4 = call i32 @unknown_43a84(i32 %v2_1f3d7, i32 %arg3)
  %v2_1f3ec = ptrtoint i32* %stack_var_-24 to i32
  %v2_1f3f9 = call i32 @unknown_43a84(i32 %v2_1f3ec, i32 %arg2)
  %v3_1f40b = load i32, i32* %stack_var_-20, align 4
  %v3_1f412 = load i32, i32* %stack_var_-24, align 4
  %v4_1f41c = call i32 @unknown_43ace(i32 %arg1, i32 %v3_1f412, i32 %v3_1f40b, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  %v1_1f431 = call i32 @function_1f438()
  ret i32 %v1_1f431

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_43a84, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f438() local_unnamed_addr {
dec_label_pc_1f438:
  %v0_1f439 = load i32, i32* @eax, align 8
  ret i32 %v0_1f439
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f43c:
  %v2_1f46c = call i32 @unknown_43bee(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_1f47b = call i32 @function_1f482()
  ret i32 %v1_1f47b
}

define i32 @function_1f482() local_unnamed_addr {
dec_label_pc_1f482:
  %v0_1f483 = load i32, i32* @eax, align 8
  ret i32 %v0_1f483
}

define i32 @_ZSt4copyIPxS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f484:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f487 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f4ae = call i32 @unknown_43c78(i32 %arg2)
  store i32 %v1_1f4ae, i32* %ebx.global-to-local, align 4
  %v1_1f4bb = call i32 @unknown_43c78(i32 %arg1)
  %v3_1f4ce = call i32 @unknown_43cad(i32 %v1_1f4bb, i32 %v1_1f4ae, i32 %arg3)
  store i32 %v0_1f487, i32* %ebx.global-to-local, align 4
  ret i32 %v3_1f4ce

; uselistorder directives
  uselistorder i32 (i32)* @unknown_43c78, { 1, 0 }
}

define i32 @_ZSt22__uninitialized_copy_aIPxS0_xET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f4ea:
  %v7_1f527 = call i32 @unknown_43d85(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1f527, i32* @eax, align 8
  %v1_1f536 = call i32 @function_1f53d()
  ret i32 %v1_1f536

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f53d() local_unnamed_addr {
dec_label_pc_1f53d:
  %v0_1f53e = load i32, i32* @eax, align 8
  ret i32 %v0_1f53e
}

define i32 @_ZNSs16_S_construct_auxIPcEES0_T_S1_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1f53f:
  ret i32 %arg1
}

define i32 @function_1f580(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f580:
  %v0_1f580 = load i32, i32* @eax, align 8
  %v11_1f580 = and i32 %v0_1f580, -24
  store i32 %v11_1f580, i32* @eax, align 8
  store i32 %v11_1f580, i32* inttoptr (i32 -1962933688 to i32*), align 8
  %v0_1f589 = load i32, i32* @edx, align 8
  %v3_1f589 = icmp eq i32 %v0_1f589, 30
  br i1 %v3_1f589, label %bb, label %dec_label_pc_1f580.dec_label_pc_1f592_crit_edge

dec_label_pc_1f580.dec_label_pc_1f592_crit_edge:  ; preds = %dec_label_pc_1f580
  %v2_1f590.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1f592

bb:                                               ; preds = %dec_label_pc_1f580
  %v1_1f590 = call i32 @function_1f597()
  br label %dec_label_pc_1f592

dec_label_pc_1f592:                               ; preds = %dec_label_pc_1f580.dec_label_pc_1f592_crit_edge, %bb
  %v2_1f590 = phi i32 [ %v2_1f590.pre, %dec_label_pc_1f580.dec_label_pc_1f592_crit_edge ], [ %v1_1f590, %bb ]
  ret i32 %v2_1f590

; uselistorder directives
  uselistorder i32 %v11_1f580, { 1, 0 }
  uselistorder label %dec_label_pc_1f592, { 1, 0 }
}

define i32 @function_1f597() local_unnamed_addr {
dec_label_pc_1f597:
  %v0_1f598 = load i32, i32* @eax, align 8
  ret i32 %v0_1f598
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f59a:
  store i32 %arg1, i32* @eax, align 8
  %v2_1f5be = call i32 @function_1f5c5(i32 %arg1)
  ret i32 %v2_1f5be
}

define i32 @function_1f5c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5c5:
  %v0_1f5c6 = load i32, i32* @eax, align 8
  ret i32 %v0_1f5c6
}

define i32 @_ZSt13copy_backwardIPSsS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f5c7:
  %v1_1f5f1 = call i32 @unknown_44032(i32 %arg2)
  %v1_1f5fe = call i32 @unknown_44032(i32 %arg1)
  %v3_1f611 = call i32 @unknown_44067(i32 %v1_1f5fe, i32 %v1_1f5f1, i32 %arg3)
  store i32 %v3_1f611, i32* @eax, align 8
  %v1_1f620 = call i32 @function_1f627()
  ret i32 %v1_1f620

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44032, { 1, 0 }
}

define i32 @function_1f627() local_unnamed_addr {
dec_label_pc_1f627:
  %v0_1f62c = load i32, i32* @eax, align 8
  ret i32 %v0_1f62c
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f62e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1f648 = load i32, i32* %arg1, align 4
  store i32 %v2_1f648, i32* @eax, align 8
  %v2_1f654 = call i32 @function_1f65b(i32 %tmp99)
  ret i32 %v2_1f654
}

define i32 @function_1f65b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f65b:
  %v0_1f65c = load i32, i32* @eax, align 8
  ret i32 %v0_1f65c
}

define i32 @_ZNKSt6vectorISsSaISsEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f65e:
  %v1_1f688 = call i32 @unknown_44170(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1f695 = call i32 @function_38dca(i32 %arg1)
  %v2_1f69c = sub i32 %v1_1f688, %v1_1f695
  %v7_1f6a1 = icmp ult i32 %v2_1f69c, %arg2
  %v5_1f6a6 = icmp eq i1 %v7_1f6a1, false
  br i1 %v5_1f6a6, label %bb, label %dec_label_pc_1f6aa

bb:                                               ; preds = %dec_label_pc_1f65e
  %v1_1f6a8 = call i32 @function_1f6b5()
  br label %dec_label_pc_1f6aa

dec_label_pc_1f6aa:                               ; preds = %bb, %dec_label_pc_1f65e
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1f6b5() local_unnamed_addr {
dec_label_pc_1f6b5:
  %v0_1f6b5 = load i32, i32* @ebp, align 4
  %v1_1f6b5 = add i32 %v0_1f6b5, -28
  %v2_1f6b5 = inttoptr i32 %v1_1f6b5 to i32*
  %v3_1f6b5 = load i32, i32* %v2_1f6b5, align 4
  store i32 %v3_1f6b5, i32* @eax, align 8
  %v1_1f6bb = call i32 @function_38dca(i32 %v3_1f6b5)
  ret i32 %v1_1f6bb
}

define i32 @function_1f6c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f6c0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f6c0 = load i32, i32* @eax, align 8
  store i32 %v0_1f6c0, i32* %ebx.global-to-local, align 4
  %v0_1f6c2 = load i32, i32* @ebp, align 4
  %v1_1f6c2 = add i32 %v0_1f6c2, -28
  %v2_1f6c2 = inttoptr i32 %v1_1f6c2 to i32*
  %v3_1f6c2 = load i32, i32* %v2_1f6c2, align 4
  store i32 %v3_1f6c2, i32* @eax, align 8
  %v1_1f6c8 = call i32 @function_38dca(i32 %v3_1f6c2)
  %v1_1f6cd = load i32, i32* @ebp, align 4
  %v2_1f6cd = add i32 %v1_1f6cd, -20
  %v3_1f6cd = inttoptr i32 %v2_1f6cd to i32*
  store i32 %v1_1f6c8, i32* %v3_1f6cd, align 4
  %v0_1f6d0 = load i32, i32* @ebp, align 4
  %v1_1f6d0 = add i32 %v0_1f6d0, -32
  %v1_1f6d7 = add i32 %v0_1f6d0, -20
  %v2_1f6dd = call i32 @unknown_42239(i32 %v1_1f6d7, i32 %v1_1f6d0)
  %v1_1f6e2 = inttoptr i32 %v2_1f6dd to i32*
  %v2_1f6e2 = load i32, i32* %v1_1f6e2, align 4
  %v1_1f6e4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1f6e4 = add i32 %v1_1f6e4, %v2_1f6e2
  %v1_1f6e6 = load i32, i32* @ebp, align 4
  %v2_1f6e6 = add i32 %v1_1f6e6, -16
  %v3_1f6e6 = inttoptr i32 %v2_1f6e6 to i32*
  store i32 %v2_1f6e4, i32* %v3_1f6e6, align 4
  %v0_1f6e9 = load i32, i32* @ebp, align 4
  %v1_1f6e9 = add i32 %v0_1f6e9, -28
  %v2_1f6e9 = inttoptr i32 %v1_1f6e9 to i32*
  %v3_1f6e9 = load i32, i32* %v2_1f6e9, align 4
  store i32 %v3_1f6e9, i32* @eax, align 8
  %v1_1f6ef = call i32 @function_38dca(i32 %v3_1f6e9)
  %v1_1f6f4 = load i32, i32* @ebp, align 4
  %v2_1f6f4 = add i32 %v1_1f6f4, -16
  %v3_1f6f4 = inttoptr i32 %v2_1f6f4 to i32*
  %v4_1f6f4 = load i32, i32* %v3_1f6f4, align 4
  %tmp5 = icmp ugt i32 %v1_1f6ef, %v4_1f6f4
  br i1 %tmp5, label %dec_label_pc_1f709, label %dec_label_pc_1f6f9

dec_label_pc_1f6f9:                               ; preds = %dec_label_pc_1f6c0
  %v1_1f6f9 = add i32 %v1_1f6f4, -28
  %v2_1f6f9 = inttoptr i32 %v1_1f6f9 to i32*
  %v3_1f6f9 = load i32, i32* %v2_1f6f9, align 4
  %v1_1f6ff = call i32 @unknown_44170(i32 %v3_1f6f9)
  %v1_1f704 = load i32, i32* @ebp, align 4
  %v2_1f704 = add i32 %v1_1f704, -16
  %v3_1f704 = inttoptr i32 %v2_1f704 to i32*
  %v4_1f704 = load i32, i32* %v3_1f704, align 4
  %v10_1f704 = icmp ult i32 %v1_1f6ff, %v4_1f704
  %v1_1f707 = icmp eq i1 %v10_1f704, false
  br i1 %v1_1f707, label %dec_label_pc_1f719, label %dec_label_pc_1f709

dec_label_pc_1f709:                               ; preds = %dec_label_pc_1f6c0, %dec_label_pc_1f6f9
  %v0_1f709 = phi i32 [ %v1_1f6f4, %dec_label_pc_1f6c0 ], [ %v1_1f704, %dec_label_pc_1f6f9 ]
  %v1_1f709 = add i32 %v0_1f709, -28
  %v2_1f709 = inttoptr i32 %v1_1f709 to i32*
  %v3_1f709 = load i32, i32* %v2_1f709, align 4
  %v1_1f70f = call i32 @unknown_44170(i32 %v3_1f709)
  %v0_1f719.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1f719

dec_label_pc_1f719:                               ; preds = %dec_label_pc_1f6f9, %dec_label_pc_1f709
  %v0_1f719 = phi i32 [ %v0_1f719.pre, %dec_label_pc_1f709 ], [ %v1_1f704, %dec_label_pc_1f6f9 ]
  %storemerge = phi i32 [ %v1_1f70f, %dec_label_pc_1f709 ], [ %v4_1f704, %dec_label_pc_1f6f9 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_1f719 = add i32 %v0_1f719, -12
  %v2_1f719 = inttoptr i32 %v1_1f719 to i32*
  %v3_1f719 = load i32, i32* %v2_1f719, align 4
  %v3_1f71c = icmp eq i32 %v3_1f719, 30
  br i1 %v3_1f71c, label %bb, label %dec_label_pc_1f725

bb:                                               ; preds = %dec_label_pc_1f719
  %v1_1f723 = call i32 @function_1f72a()
  br label %dec_label_pc_1f725

dec_label_pc_1f725:                               ; preds = %bb, %dec_label_pc_1f719
  %v2_1f723 = phi i32 [ %v1_1f723, %bb ], [ %storemerge, %dec_label_pc_1f719 ]
  ret i32 %v2_1f723

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44170, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_38dca, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1f719, { 1, 0 }
  uselistorder label %dec_label_pc_1f709, { 1, 0 }
}

define i32 @function_1f72a() local_unnamed_addr {
dec_label_pc_1f72a:
  %v0_1f72f = load i32, i32* @eax, align 8
  ret i32 %v0_1f72f
}

define i32 @_ZNSt6vectorISsSaISsEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f730:
  %v2_1f75a = call i32 @unknown_3ef9a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_1f76c = call i32 @function_1f773()
  ret i32 %v1_1f76c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f773() local_unnamed_addr {
dec_label_pc_1f773:
  %v0_1f774 = load i32, i32* @eax, align 8
  ret i32 %v0_1f774
}

define i32 @_ZN9__gnu_cxxmiIPSsSt6vectorISsSaISsEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f777:
  %v1_1f79b = call i32 @unknown_3ed11(i32 %arg1)
  %v1_1f7a0 = inttoptr i32 %v1_1f79b to i32*
  %v2_1f7a0 = load i32, i32* %v1_1f7a0, align 4
  %v1_1f7aa = call i32 @unknown_3ed11(i32 %arg2)
  %v1_1f7af = inttoptr i32 %v1_1f7aa to i32*
  %v2_1f7af = load i32, i32* %v1_1f7af, align 4
  %v2_1f7b3 = sub i32 %v2_1f7a0, %v2_1f7af
  %v2_1f7b7 = sdiv i32 %v2_1f7b3, 4
  store i32 %v2_1f7b7, i32* @eax, align 8
  %v1_1f7c4 = call i32 @function_1f7cb()
  ret i32 %v1_1f7c4

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3ed11, { 1, 0 }
}

define i32 @function_1f7cb() local_unnamed_addr {
dec_label_pc_1f7cb:
  %v0_1f7d0 = load i32, i32* @eax, align 8
  ret i32 %v0_1f7d0
}

define i32 @_ZSt22__uninitialized_move_aIPSsS0_SaISsEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f7d1:
  %v8_1f815 = call i32 @unknown_44320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_1f815, i32* @eax, align 8
  %v1_1f824 = call i32 @function_1f82b()
  ret i32 %v1_1f824

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f82b() local_unnamed_addr {
dec_label_pc_1f82b:
  %v0_1f82c = load i32, i32* @eax, align 8
  ret i32 %v0_1f82c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsE7destroyEPSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f82e:
  ret i32 %arg2
}

define i32 @function_1f866() local_unnamed_addr {
dec_label_pc_1f866:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f866 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f866 = add i32 %v0_1f866, -1
  store i32 %v1_1f866, i32* %ecx.global-to-local, align 4
  %v0_1f868 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f868
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPSsSt6vectorISsSaISsEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f86a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1f88a = inttoptr i32 %arg2 to i32*
  %v2_1f88a = load i32, i32* %v1_1f88a, align 4
  store i32 %v2_1f88a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1f89b = call i32 @function_1f8a2(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1f89b
}

define i32 @function_1f8a2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8a2:
  %v0_1f8a3 = load i32, i32* @eax, align 8
  ret i32 %v0_1f8a3
}

define i32 @_ZN5boost6detail13addr_impl_refIKSsEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8a4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1f8d3 = call i32 @function_1f8da(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1f8d3
}

define i32 @function_1f8da(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8da:
  %v0_1f8db = load i32, i32* @eax, align 8
  ret i32 %v0_1f8db
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSsEcvRS2_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f8dc:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_1f8f6 = load i32, i32* %arg1, align 4
  store i32 %v2_1f8f6, i32* @eax, align 8
  %v2_1f902 = call i32 @function_1f909(i32 %tmp99)
  ret i32 %v2_1f902
}

define i32 @function_1f909(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f909:
  %v0_1f90a = load i32, i32* @eax, align 8
  ret i32 %v0_1f90a
}

define i32 @_ZN5boost6detail14addressof_implIKSsE1fERS2_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f90b:
  ret i32 %arg1
}

define i32 @_ZN5boost12range_detail11range_beginIKSsEENS_14range_iteratorIT_E4typeERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f93e:
  ret i32 %arg1
}

define i32 @function_1f96c() local_unnamed_addr {
dec_label_pc_1f96c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1f96c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f96c = add i32 %v0_1f96c, 1166738668
  %v2_1f96c = inttoptr i32 %v1_1f96c to i32*
  %v3_1f96c = load i32, i32* %v2_1f96c, align 4
  %v4_1f96c = add i32 %v3_1f96c, 1
  store i32 %v4_1f96c, i32* %v2_1f96c, align 4
  %v0_1f976 = load i32, i32* %edx.global-to-local, align 8
  %v2_1f976 = xor i32 %v0_1f976, 30
  store i32 %v2_1f976, i32* %edx.global-to-local, align 8
  %v0_1f985 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f985
}

define i32 @_ZN5boost12range_detail9range_endIKSsEENS_14range_iteratorIT_E4typeERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f988:
  ret i32 %arg1
}

define i32 @function_1f9cd() local_unnamed_addr {
dec_label_pc_1f9cd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f9cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f9cd = add i32 %v0_1f9cd, -1
  store i32 %v1_1f9cd, i32* %ecx.global-to-local, align 4
  %v0_1f9cf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f9cf
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1EPKSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f9d2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1fa01 = call i32 @function_1fa08(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1fa01
}

define i32 @function_1fa08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa08:
  %v0_1fa09 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa09
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa0a:
  %v1_1fa24 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_1fa24 = inttoptr i32 %v1_1fa24 to i32*
  %v3_1fa24 = load i32, i32* %v2_1fa24, align 4
  store i32 %v3_1fa24, i32* @eax, align 8
  %v2_1fa31 = call i32 @function_1fa38(i32 %arg1)
  ret i32 %v2_1fa31
}

define i32 @function_1fa38(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa38:
  %v0_1fa39 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa39
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa3a:
  %v1_1fa54 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_1fa54, i32* @eax, align 8
  %v2_1fa61 = call i32 @function_1fa68(i32 %arg1)
  ret i32 %v2_1fa61
}

define i32 @function_1fa68(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa68:
  %v0_1fa69 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa69
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1fa6a:
  %v10_1fae9116125 = icmp eq i32 %arg3, 0
  %v1_1faed117126 = icmp eq i1 %v10_1fae9116125, false
  %v5_1faf0121128 = icmp eq i1 %v1_1faed117126, false
  %v1_1faf2122129 = icmp eq i1 %v5_1faf0121128, false
  br i1 %v1_1faf2122129, label %dec_label_pc_1fa9b.lr.ph, label %dec_label_pc_1faf4

dec_label_pc_1fa9b.lr.ph:                         ; preds = %dec_label_pc_1fa6a, %dec_label_pc_1fac5
  %stack_var_-44.0.ph131 = phi i32 [ %stack_var_-40.0123, %dec_label_pc_1fac5 ], [ %arg4, %dec_label_pc_1fa6a ]
  %stack_var_-40.0.ph130 = phi i32 [ %v1_1fad1, %dec_label_pc_1fac5 ], [ %arg3, %dec_label_pc_1fa6a ]
  br label %dec_label_pc_1fa9b

dec_label_pc_1fa9b:                               ; preds = %dec_label_pc_1fa9b.lr.ph, %dec_label_pc_1fadb
  %stack_var_-40.0123 = phi i32 [ %stack_var_-40.0.ph130, %dec_label_pc_1fa9b.lr.ph ], [ %v1_1fae1, %dec_label_pc_1fadb ]
  %v1_1faa1 = call i32 @unknown_4460e(i32 %stack_var_-40.0123)
  store i32 %arg2, i32* @eax, align 8
  %v3_1fab9 = call i32 @function_3a3b6(i32 %arg2, i32 %v1_1faa1, i32 %arg5)
  %v1_1fabe = xor i32 %v3_1fab9, 1
  %v4_1fabe = trunc i32 %v1_1fabe to i8
  %v5_1fac1 = icmp eq i8 %v4_1fabe, 0
  br i1 %v5_1fac1, label %dec_label_pc_1fadb, label %dec_label_pc_1fac5

dec_label_pc_1fac5:                               ; preds = %dec_label_pc_1fa9b
  %v1_1fad1 = call i32 @unknown_44652(i32 %stack_var_-40.0123)
  %v10_1fae9116 = icmp eq i32 %v1_1fad1, 0
  %v1_1faed117 = icmp eq i1 %v10_1fae9116, false
  %v5_1faf0121 = icmp eq i1 %v1_1faed117, false
  %v1_1faf2122 = icmp eq i1 %v5_1faf0121, false
  br i1 %v1_1faf2122, label %dec_label_pc_1fa9b.lr.ph, label %dec_label_pc_1faf4

dec_label_pc_1fadb:                               ; preds = %dec_label_pc_1fa9b
  %v1_1fae1 = call i32 @unknown_44682(i32 %stack_var_-40.0123)
  %v10_1fae9 = icmp eq i32 %v1_1fae1, 0
  %v1_1faed = icmp eq i1 %v10_1fae9, false
  %v5_1faf0 = icmp eq i1 %v1_1faed, false
  %v1_1faf2 = icmp eq i1 %v5_1faf0, false
  br i1 %v1_1faf2, label %dec_label_pc_1fa9b, label %dec_label_pc_1faf4

dec_label_pc_1faf4:                               ; preds = %dec_label_pc_1fadb, %dec_label_pc_1fa6a, %dec_label_pc_1fac5
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_1fa6a ], [ %stack_var_-40.0123, %dec_label_pc_1fac5 ], [ %stack_var_-44.0.ph131, %dec_label_pc_1fadb ]
  %v2_1fb01 = call i32 @unknown_3f43c(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  %v1_1fb13 = call i32 @function_1fb1a()
  ret i32 %v1_1fb13

; uselistorder directives
  uselistorder i32 %v1_1fad1, { 1, 0 }
  uselistorder i32 %stack_var_-40.0123, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1faf4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1fa9b, { 1, 0 }
  uselistorder label %dec_label_pc_1fa9b.lr.ph, { 1, 0 }
}

define i32 @function_1fb1a() local_unnamed_addr {
dec_label_pc_1fb1a:
  %v0_1fb1b = load i32, i32* @eax, align 8
  ret i32 %v0_1fb1b
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb1e:
  %stack_var_-17 = alloca i32, align 4
  %v1_1fb3b = call i32 @unknown_44766(i32 %arg1)
  %v2_1fb44 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1fb4a = call i32 @unknown_44796(i32 %v2_1fb44, i32 %v1_1fb3b)
  store i32 %v2_1fb4a, i32* @eax, align 8
  %v1_1fb59 = call i32 @function_1fb60()
  ret i32 %v1_1fb59
}

define i32 @function_1fb60() local_unnamed_addr {
dec_label_pc_1fb60:
  %v0_1fb61 = load i32, i32* @eax, align 8
  ret i32 %v0_1fb61
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fb62:
  %v1_1fb8c = call i32 @unknown_3fc16(i32 %arg2)
  %v1_1fb99 = call i32 @unknown_3e7de(i32 %arg2)
  %v5_1fbba = call i32 @unknown_4480e(i32 %arg1, i32 %arg2, i32 %v1_1fb99, i32 %v1_1fb8c, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v1_1fbcf = call i32 @function_1fbd6()
  ret i32 %v1_1fbcf

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fbd6() local_unnamed_addr {
dec_label_pc_1fbd6:
  %v0_1fbda = load i32, i32* @eax, align 8
  ret i32 %v0_1fbda
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fbde:
  store i32 %arg1, i32* @eax, align 8
  %v3_1fc08 = call i32 @function_1fc0f(i32 %arg2, i32 %arg1)
  ret i32 %v3_1fc08
}

define i32 @function_1fc0f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc0f:
  %v0_1fc10 = load i32, i32* @eax, align 8
  ret i32 %v0_1fc10
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc14:
  %v1_1fc34 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_1fc41 = call i32 @unknown_44974(i32 %arg1, i32 %v1_1fc34)
  store i32 %arg1, i32* @eax, align 8
  %v1_1fc53 = call i32 @function_1fc5a()
  ret i32 %v1_1fc53

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fc5a() local_unnamed_addr {
dec_label_pc_1fc5a:
  %v0_1fc5b = load i32, i32* @eax, align 8
  ret i32 %v0_1fc5b
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1ERKSt17_Rb_tree_iteratorIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc5e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1fc7e = inttoptr i32 %arg2 to i32*
  %v2_1fc7e = load i32, i32* %v1_1fc7e, align 4
  store i32 %v2_1fc7e, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_1fc8f = call i32 @function_1fc96(i32 %arg2, i32 %tmp101)
  ret i32 %v3_1fc8f
}

define i32 @function_1fc96(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc96:
  %v0_1fc97 = load i32, i32* @eax, align 8
  ret i32 %v0_1fc97
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fc98:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  %v1_1fccb = call i32 @unknown_3fd4c(i32 %arg2)
  %v12_1fcd0 = icmp eq i32 %v1_1fccb, %arg3
  store i1 false, i1* @cf, align 1
  %v5_1fcd5 = icmp eq i1 %v12_1fcd0, false
  br i1 %v5_1fcd5, label %dec_label_pc_1fda1, label %dec_label_pc_1fcdd

dec_label_pc_1fcdd:                               ; preds = %dec_label_pc_1fc98
  %v1_1fce3 = call i32 @unknown_44a30(i32 %arg2)
  store i1 false, i1* @cf, align 1
  %v1_1fce8 = icmp eq i32 %v1_1fce3, 0
  br i1 %v1_1fce8, label %dec_label_pc_1fd78, label %dec_label_pc_1fcec

dec_label_pc_1fcec:                               ; preds = %dec_label_pc_1fcdd
  %v2_1fcf3 = ptrtoint i32* %stack_var_-21 to i32
  %v2_1fcf9 = call i32 @unknown_44910(i32 %v2_1fcf3, i32 %arg4)
  %v1_1fd06 = call i32 @unknown_3fddc(i32 %arg2)
  %v1_1fd0b = inttoptr i32 %v1_1fd06 to i32*
  %v2_1fd0b = load i32, i32* %v1_1fd0b, align 4
  %v1_1fd10 = call i32 @unknown_3f7b6(i32 %v2_1fd0b)
  store i32 %arg2, i32* @eax, align 8
  %v3_1fd25 = call i32 @function_3a5e4(i32 %arg2, i32 %v1_1fd10, i32 %v2_1fcf9)
  %v4_1fd2a = trunc i32 %v3_1fd25 to i8
  %v5_1fd2a = icmp eq i8 %v4_1fd2a, 0
  br i1 %v5_1fd2a, label %dec_label_pc_1fd78, label %dec_label_pc_1fd3e

dec_label_pc_1fd3e:                               ; preds = %dec_label_pc_1fcec
  %v1_1fd44 = call i32 @unknown_3fddc(i32 %arg2)
  %v1_1fd49 = inttoptr i32 %v1_1fd44 to i32*
  %v2_1fd49 = load i32, i32* %v1_1fd49, align 4
  %v5_1fd6b = call i32 @unknown_44a60(i32 %tmp119, i32 %arg2, i32 0, i32 %v2_1fd49, i32 %arg4)
  %v0_1fd73 = call i32 @function_20098()
  ret i32 %v0_1fd73

dec_label_pc_1fd78:                               ; preds = %dec_label_pc_1fcdd, %dec_label_pc_1fcec
  %v2_1fd78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1fd8c = call i32 @unknown_44b62(i32 %v2_1fd78, i32 %arg2, i32 %arg4)
  %v3_1fd97 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1fd97, i32* %arg1, align 4
  %v0_1fd9c = call i32 @function_20098()
  ret i32 %v0_1fd9c

dec_label_pc_1fda1:                               ; preds = %dec_label_pc_1fc98
  %v1_1fda7 = call i32 @unknown_3f7b6(i32 %arg3)
  %v2_1fdb5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1fdbb = call i32 @unknown_44910(i32 %v2_1fdb5, i32 %arg4)
  store i32 %v2_1fdbb, i32* @eax, align 8
  %v3_1fdce = call i32 @function_3a5e4(i32 %arg2, i32 %v2_1fdbb, i32 %v1_1fda7)
  %v4_1fdd3 = trunc i32 %v3_1fdce to i8
  store i1 false, i1* @cf, align 1
  %v5_1fdd3 = icmp eq i8 %v4_1fdd3, 0
  br i1 %v5_1fdd3, label %bb, label %dec_label_pc_1fddb

bb:                                               ; preds = %dec_label_pc_1fda1
  %v1_1fdd5 = call i32 @function_1ff1b()
  br label %dec_label_pc_1fddb

dec_label_pc_1fddb:                               ; preds = %bb, %dec_label_pc_1fda1
  %v1_1fdea = call i32 @unknown_3fd7c(i32 %arg2)
  %v1_1fdef = inttoptr i32 %v1_1fdea to i32*
  %v2_1fdef = load i32, i32* %v1_1fdef, align 4
  ret i32 %v2_1fdef

; uselistorder directives
  uselistorder i32 %arg4, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 7, 8, 5, 3, 4, 1, 0, 2, 6, 9 }
  uselistorder label %dec_label_pc_1fd78, { 1, 0 }
}

define i32 @function_1fdf2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fdf2:
  %v0_1fdf2 = load i32, i32* @eax, align 8
  ret i32 %v0_1fdf2
}

define i32 @function_1fdf3() local_unnamed_addr {
dec_label_pc_1fdf3:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1fdf3 = load i1, i1* %zf.global-to-local, align 1
  %v1_1fdf3 = zext i1 %v0_1fdf3 to i32
  %v2_1fdf3 = load i32, i32* %eax.global-to-local, align 8
  %v3_1fdf3 = and i32 %v2_1fdf3, -256
  %v4_1fdf3 = or i32 %v3_1fdf3, %v1_1fdf3
  store i32 %v4_1fdf3, i32* %eax.global-to-local, align 8
  store i1 false, i1* @cf, align 1
  %v5_1fdf6 = icmp eq i1 %v0_1fdf3, false
  store i1 %v5_1fdf6, i1* %zf.global-to-local, align 1
  %v0_1fe3d = load i32, i32* @ebp, align 4
  br i1 %v5_1fdf6, label %dec_label_pc_1fe3d, label %dec_label_pc_1fdfa

dec_label_pc_1fdfa:                               ; preds = %dec_label_pc_1fdf3
  %v1_1fdfa = add i32 %v0_1fe3d, -64
  %v2_1fdfa = inttoptr i32 %v1_1fdfa to i32*
  %v3_1fdfa = load i32, i32* %v2_1fdfa, align 4
  store i32 %v3_1fdfa, i32* %eax.global-to-local, align 8
  %v1_1fe00 = call i32 @unknown_3fd7c(i32 %v3_1fdfa)
  store i32 %v1_1fe00, i32* %eax.global-to-local, align 8
  %v1_1fe05 = inttoptr i32 %v1_1fe00 to i32*
  %v2_1fe05 = load i32, i32* %v1_1fe05, align 4
  store i32 %v2_1fe05, i32* %ebx.global-to-local, align 4
  %v0_1fe07 = load i32, i32* @ebp, align 4
  %v1_1fe07 = add i32 %v0_1fe07, -64
  %v2_1fe07 = inttoptr i32 %v1_1fe07 to i32*
  %v3_1fe07 = load i32, i32* %v2_1fe07, align 4
  store i32 %v3_1fe07, i32* %eax.global-to-local, align 8
  %v1_1fe0d = call i32 @unknown_3fd7c(i32 %v3_1fe07)
  store i32 %v1_1fe0d, i32* %eax.global-to-local, align 8
  %v1_1fe12 = inttoptr i32 %v1_1fe0d to i32*
  %v2_1fe12 = load i32, i32* %v1_1fe12, align 4
  %v0_1fe14 = load i32, i32* @ebp, align 4
  %v1_1fe14 = add i32 %v0_1fe14, -60
  %v2_1fe14 = inttoptr i32 %v1_1fe14 to i32*
  %v3_1fe14 = load i32, i32* %v2_1fe14, align 4
  store i32 %v3_1fe14, i32* %eax.global-to-local, align 8
  %v1_1fe17 = add i32 %v0_1fe14, -72
  %v2_1fe17 = inttoptr i32 %v1_1fe17 to i32*
  %v3_1fe17 = load i32, i32* %v2_1fe17, align 4
  %v0_1fe1e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fe26 = add i32 %v0_1fe14, -64
  %v2_1fe26 = inttoptr i32 %v1_1fe26 to i32*
  %v3_1fe26 = load i32, i32* %v2_1fe26, align 4
  %v5_1fe30 = call i32 @unknown_44a60(i32 %v3_1fe14, i32 %v3_1fe26, i32 %v2_1fe12, i32 %v0_1fe1e, i32 %v3_1fe17)
  store i32 %v5_1fe30, i32* %eax.global-to-local, align 8
  %v0_1fe35 = load i32, i32* @esp, align 4
  %v10_1fe35 = icmp eq i32 %v0_1fe35, 4
  store i1 %v10_1fe35, i1* %zf.global-to-local, align 1
  %v0_1fe38 = call i32 @function_20098()
  store i32 %v0_1fe38, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fe38

dec_label_pc_1fe3d:                               ; preds = %dec_label_pc_1fdf3
  %v1_1fe3d = add i32 %v0_1fe3d, -72
  %v2_1fe3d = inttoptr i32 %v1_1fe3d to i32*
  %v3_1fe3d = load i32, i32* %v2_1fe3d, align 4
  %v1_1fe44 = add i32 %v0_1fe3d, -15
  store i32 %v1_1fe44, i32* %eax.global-to-local, align 8
  %v2_1fe4a = call i32 @unknown_44910(i32 %v1_1fe44, i32 %v3_1fe3d)
  store i32 %v2_1fe4a, i32* %ebx.global-to-local, align 4
  %v0_1fe51 = load i32, i32* @ebp, align 4
  %v1_1fe51 = add i32 %v0_1fe51, -24
  store i32 %v1_1fe51, i32* %eax.global-to-local, align 8
  %v1_1fe57 = call i32 @unknown_44d66(i32 %v1_1fe51)
  store i32 %v1_1fe57, i32* %eax.global-to-local, align 8
  %v1_1fe5c = inttoptr i32 %v1_1fe57 to i32*
  %v2_1fe5c = load i32, i32* %v1_1fe5c, align 4
  store i32 %v2_1fe5c, i32* %eax.global-to-local, align 8
  %v1_1fe61 = call i32 @unknown_3f7b6(i32 %v2_1fe5c)
  store i32 %v1_1fe61, i32* %eax.global-to-local, align 8
  %v0_1fe68 = load i32, i32* @ebp, align 4
  %v1_1fe68 = add i32 %v0_1fe68, -64
  %v2_1fe68 = inttoptr i32 %v1_1fe68 to i32*
  %v3_1fe68 = load i32, i32* %v2_1fe68, align 4
  store i32 %v3_1fe68, i32* @eax, align 8
  %v0_1fe6b = load i32, i32* %ebx.global-to-local, align 4
  %v3_1fe76 = call i32 @function_3a5e4(i32 %v3_1fe68, i32 %v1_1fe61, i32 %v0_1fe6b)
  store i32 %v3_1fe76, i32* %eax.global-to-local, align 8
  %v4_1fe7b = trunc i32 %v3_1fe76 to i8
  %v5_1fe7b = icmp eq i8 %v4_1fe7b, 0
  store i1 %v5_1fe7b, i1* %zf.global-to-local, align 1
  %v0_1fef2 = load i32, i32* @ebp, align 4
  br i1 %v5_1fe7b, label %dec_label_pc_1fef2, label %dec_label_pc_1fe7f

dec_label_pc_1fe7f:                               ; preds = %dec_label_pc_1fe3d
  %v1_1fe7f = add i32 %v0_1fef2, -24
  %v2_1fe7f = inttoptr i32 %v1_1fe7f to i32*
  %v3_1fe7f = load i32, i32* %v2_1fe7f, align 4
  store i32 %v3_1fe7f, i32* %eax.global-to-local, align 8
  %v1_1fe85 = call i32 @unknown_448b0(i32 %v3_1fe7f)
  %v1_1fe8a = icmp eq i32 %v1_1fe85, 0
  %v1_1fe8c = zext i1 %v1_1fe8a to i32
  %v3_1fe8c = and i32 %v1_1fe85, -256
  %v4_1fe8c = or i32 %v1_1fe8c, %v3_1fe8c
  store i32 %v4_1fe8c, i32* %eax.global-to-local, align 8
  %v5_1fe8f = icmp eq i1 %v1_1fe8a, false
  store i1 %v5_1fe8f, i1* %zf.global-to-local, align 1
  %v0_1fec3 = load i32, i32* @ebp, align 4
  br i1 %v5_1fe8f, label %dec_label_pc_1fec3, label %dec_label_pc_1fe93

dec_label_pc_1fe93:                               ; preds = %dec_label_pc_1fe7f
  %v1_1fe93 = add i32 %v0_1fec3, -24
  %v2_1fe93 = inttoptr i32 %v1_1fe93 to i32*
  %v3_1fe93 = load i32, i32* %v2_1fe93, align 4
  %v1_1fe96 = add i32 %v0_1fec3, -60
  %v2_1fe96 = inttoptr i32 %v1_1fe96 to i32*
  %v3_1fe96 = load i32, i32* %v2_1fe96, align 4
  store i32 %v3_1fe96, i32* %eax.global-to-local, align 8
  %v1_1fe99 = add i32 %v0_1fec3, -72
  %v2_1fe99 = inttoptr i32 %v1_1fe99 to i32*
  %v3_1fe99 = load i32, i32* %v2_1fe99, align 4
  %v1_1feac = add i32 %v0_1fec3, -64
  %v2_1feac = inttoptr i32 %v1_1feac to i32*
  %v3_1feac = load i32, i32* %v2_1feac, align 4
  %v5_1feb6 = call i32 @unknown_44a60(i32 %v3_1fe96, i32 %v3_1feac, i32 0, i32 %v3_1fe93, i32 %v3_1fe99)
  store i32 %v5_1feb6, i32* %eax.global-to-local, align 8
  %v0_1febb = load i32, i32* @esp, align 4
  %v10_1febb = icmp eq i32 %v0_1febb, 4
  store i1 %v10_1febb, i1* %zf.global-to-local, align 1
  %v0_1febe = call i32 @function_20098()
  store i32 %v0_1febe, i32* %eax.global-to-local, align 8
  ret i32 %v0_1febe

dec_label_pc_1fec3:                               ; preds = %dec_label_pc_1fe7f
  %v1_1fec3 = add i32 %v0_1fec3, -68
  %v2_1fec3 = inttoptr i32 %v1_1fec3 to i32*
  %v3_1fec3 = load i32, i32* %v2_1fec3, align 4
  %v1_1fec9 = add i32 %v0_1fec3, -60
  %v2_1fec9 = inttoptr i32 %v1_1fec9 to i32*
  %v3_1fec9 = load i32, i32* %v2_1fec9, align 4
  store i32 %v3_1fec9, i32* %eax.global-to-local, align 8
  %v1_1fecc = add i32 %v0_1fec3, -72
  %v2_1fecc = inttoptr i32 %v1_1fecc to i32*
  %v3_1fecc = load i32, i32* %v2_1fecc, align 4
  store i32 %v3_1fecc, i32* %ebx.global-to-local, align 4
  %v1_1fedb = add i32 %v0_1fec3, -64
  %v2_1fedb = inttoptr i32 %v1_1fedb to i32*
  %v3_1fedb = load i32, i32* %v2_1fedb, align 4
  %v5_1fee5 = call i32 @unknown_44a60(i32 %v3_1fec9, i32 %v3_1fedb, i32 %v3_1fec3, i32 %v3_1fec3, i32 %v3_1fecc)
  store i32 %v5_1fee5, i32* %eax.global-to-local, align 8
  %v0_1feea = load i32, i32* @esp, align 4
  %v10_1feea = icmp eq i32 %v0_1feea, 4
  store i1 %v10_1feea, i1* %zf.global-to-local, align 1
  %v0_1feed = call i32 @function_20098()
  store i32 %v0_1feed, i32* %eax.global-to-local, align 8
  ret i32 %v0_1feed

dec_label_pc_1fef2:                               ; preds = %dec_label_pc_1fe3d
  %v1_1fef2 = add i32 %v0_1fef2, -40
  store i32 %v1_1fef2, i32* %eax.global-to-local, align 8
  %v1_1fef5 = add i32 %v0_1fef2, -72
  %v2_1fef5 = inttoptr i32 %v1_1fef5 to i32*
  %v3_1fef5 = load i32, i32* %v2_1fef5, align 4
  %v1_1fefc = add i32 %v0_1fef2, -64
  %v2_1fefc = inttoptr i32 %v1_1fefc to i32*
  %v3_1fefc = load i32, i32* %v2_1fefc, align 4
  %v3_1ff06 = call i32 @unknown_44b62(i32 %v1_1fef2, i32 %v3_1fefc, i32 %v3_1fef5)
  store i32 %v3_1ff06, i32* %eax.global-to-local, align 8
  %v0_1ff0b = load i32, i32* @esp, align 4
  %v10_1ff0b = icmp eq i32 %v0_1ff0b, 4
  store i1 %v10_1ff0b, i1* %zf.global-to-local, align 1
  %v0_1ff0e = load i32, i32* @ebp, align 4
  %v1_1ff0e = add i32 %v0_1ff0e, -60
  %v2_1ff0e = inttoptr i32 %v1_1ff0e to i32*
  %v3_1ff0e = load i32, i32* %v2_1ff0e, align 4
  store i32 %v3_1ff0e, i32* %eax.global-to-local, align 8
  %v1_1ff11 = add i32 %v0_1ff0e, -40
  %v2_1ff11 = inttoptr i32 %v1_1ff11 to i32*
  %v3_1ff11 = load i32, i32* %v2_1ff11, align 4
  %v2_1ff14 = inttoptr i32 %v3_1ff0e to i32*
  store i32 %v3_1ff11, i32* %v2_1ff14, align 4
  %v0_1ff16 = call i32 @function_20098()
  store i32 %v0_1ff16, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ff16

; uselistorder directives
  uselistorder i32 %v3_1fec3, { 1, 0 }
  uselistorder i32 %v0_1fec3, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i1 %v1_1fe8a, { 1, 0 }
  uselistorder i32 %v0_1fef2, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1fe3d, { 1, 2, 0 }
  uselistorder i32 (i32)* @unknown_3fd7c, { 2, 1, 0 }
}

define i32 @function_1ff1b() local_unnamed_addr {
dec_label_pc_1ff1b:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ff1b = load i32, i32* @ebp, align 4
  %v1_1ff1b = add i32 %v0_1ff1b, -72
  %v2_1ff1b = inttoptr i32 %v1_1ff1b to i32*
  %v3_1ff1b = load i32, i32* %v2_1ff1b, align 4
  %v1_1ff22 = add i32 %v0_1ff1b, -14
  %v2_1ff28 = call i32 @unknown_44910(i32 %v1_1ff22, i32 %v3_1ff1b)
  store i32 %v2_1ff28, i32* %ebx.global-to-local, align 4
  %v0_1ff2f = load i32, i32* @ebp, align 4
  %v1_1ff2f = add i32 %v0_1ff2f, -68
  %v2_1ff2f = inttoptr i32 %v1_1ff2f to i32*
  %v3_1ff2f = load i32, i32* %v2_1ff2f, align 4
  %v1_1ff35 = call i32 @unknown_3f7b6(i32 %v3_1ff2f)
  %v0_1ff3c = load i32, i32* @ebp, align 4
  %v1_1ff3c = add i32 %v0_1ff3c, -64
  %v2_1ff3c = inttoptr i32 %v1_1ff3c to i32*
  %v3_1ff3c = load i32, i32* %v2_1ff3c, align 4
  store i32 %v3_1ff3c, i32* @eax, align 8
  %v0_1ff3f = load i32, i32* %ebx.global-to-local, align 4
  %v3_1ff4a = call i32 @function_3a5e4(i32 %v3_1ff3c, i32 %v1_1ff35, i32 %v0_1ff3f)
  %v4_1ff4f = trunc i32 %v3_1ff4a to i8
  %v5_1ff4f = icmp eq i8 %v4_1ff4f, 0
  %v0_20083 = load i32, i32* @ebp, align 4
  br i1 %v5_1ff4f, label %dec_label_pc_20083, label %dec_label_pc_1ff57

dec_label_pc_1ff57:                               ; preds = %dec_label_pc_1ff1b
  %v1_1ff57 = add i32 %v0_20083, -68
  %v2_1ff57 = inttoptr i32 %v1_1ff57 to i32*
  %v3_1ff57 = load i32, i32* %v2_1ff57, align 4
  %v2_1ff5a = add i32 %v0_20083, -24
  %v3_1ff5a = inttoptr i32 %v2_1ff5a to i32*
  store i32 %v3_1ff57, i32* %v3_1ff5a, align 4
  %v0_1ff5d = load i32, i32* @ebp, align 4
  %v1_1ff5d = add i32 %v0_1ff5d, -68
  %v2_1ff5d = inttoptr i32 %v1_1ff5d to i32*
  %v3_1ff5d = load i32, i32* %v2_1ff5d, align 4
  store i32 %v3_1ff5d, i32* %ebx.global-to-local, align 4
  %v1_1ff60 = add i32 %v0_1ff5d, -64
  %v2_1ff60 = inttoptr i32 %v1_1ff60 to i32*
  %v3_1ff60 = load i32, i32* %v2_1ff60, align 4
  %v1_1ff66 = call i32 @unknown_3fddc(i32 %v3_1ff60)
  %v1_1ff6b = inttoptr i32 %v1_1ff66 to i32*
  %v2_1ff6b = load i32, i32* %v1_1ff6b, align 4
  %v0_1ff6d = load i32, i32* %ebx.global-to-local, align 4
  %v12_1ff6d = icmp eq i32 %v0_1ff6d, %v2_1ff6b
  store i1 false, i1* @cf, align 1
  %v5_1ff72 = icmp eq i1 %v12_1ff6d, false
  %v0_1ffb0 = load i32, i32* @ebp, align 4
  br i1 %v5_1ff72, label %dec_label_pc_1ffb0, label %dec_label_pc_1ff76

dec_label_pc_1ff76:                               ; preds = %dec_label_pc_1ff57
  %v1_1ff76 = add i32 %v0_1ffb0, -64
  %v2_1ff76 = inttoptr i32 %v1_1ff76 to i32*
  %v3_1ff76 = load i32, i32* %v2_1ff76, align 4
  %v1_1ff7c = call i32 @unknown_3fddc(i32 %v3_1ff76)
  %v1_1ff81 = inttoptr i32 %v1_1ff7c to i32*
  %v2_1ff81 = load i32, i32* %v1_1ff81, align 4
  %v0_1ff83 = load i32, i32* @ebp, align 4
  %v1_1ff83 = add i32 %v0_1ff83, -60
  %v2_1ff83 = inttoptr i32 %v1_1ff83 to i32*
  %v3_1ff83 = load i32, i32* %v2_1ff83, align 4
  %v1_1ff86 = add i32 %v0_1ff83, -72
  %v2_1ff86 = inttoptr i32 %v1_1ff86 to i32*
  %v3_1ff86 = load i32, i32* %v2_1ff86, align 4
  %v1_1ff99 = add i32 %v0_1ff83, -64
  %v2_1ff99 = inttoptr i32 %v1_1ff99 to i32*
  %v3_1ff99 = load i32, i32* %v2_1ff99, align 4
  %v5_1ffa3 = call i32 @unknown_44a60(i32 %v3_1ff83, i32 %v3_1ff99, i32 0, i32 %v2_1ff81, i32 %v3_1ff86)
  %v0_1ffab = call i32 @function_20098()
  ret i32 %v0_1ffab

dec_label_pc_1ffb0:                               ; preds = %dec_label_pc_1ff57
  %v1_1ffb0 = add i32 %v0_1ffb0, -24
  %v1_1ffb6 = call i32 @unknown_44da6(i32 %v1_1ffb0)
  %v1_1ffbb = inttoptr i32 %v1_1ffb6 to i32*
  %v2_1ffbb = load i32, i32* %v1_1ffbb, align 4
  %v1_1ffc0 = call i32 @unknown_3f7b6(i32 %v2_1ffbb)
  store i32 %v1_1ffc0, i32* %ebx.global-to-local, align 4
  %v0_1ffc7 = load i32, i32* @ebp, align 4
  %v1_1ffc7 = add i32 %v0_1ffc7, -72
  %v2_1ffc7 = inttoptr i32 %v1_1ffc7 to i32*
  %v3_1ffc7 = load i32, i32* %v2_1ffc7, align 4
  %v1_1ffce = add i32 %v0_1ffc7, -13
  %v2_1ffd4 = call i32 @unknown_44910(i32 %v1_1ffce, i32 %v3_1ffc7)
  store i32 %v2_1ffd4, i32* @eax, align 8
  %v0_1ffd9 = load i32, i32* @ebp, align 4
  %v1_1ffd9 = add i32 %v0_1ffd9, -64
  %v2_1ffd9 = inttoptr i32 %v1_1ffd9 to i32*
  %v3_1ffd9 = load i32, i32* %v2_1ffd9, align 4
  %v0_1ffdc = load i32, i32* %ebx.global-to-local, align 4
  %v3_1ffe7 = call i32 @function_3a5e4(i32 %v3_1ffd9, i32 %v2_1ffd4, i32 %v0_1ffdc)
  %v4_1ffec = trunc i32 %v3_1ffe7 to i8
  %v5_1ffec = icmp eq i8 %v4_1ffec, 0
  %v0_2005d = load i32, i32* @ebp, align 4
  br i1 %v5_1ffec, label %dec_label_pc_2005d, label %dec_label_pc_1fff0

dec_label_pc_1fff0:                               ; preds = %dec_label_pc_1ffb0
  %v1_1fff0 = add i32 %v0_2005d, -68
  %v2_1fff0 = inttoptr i32 %v1_1fff0 to i32*
  %v3_1fff0 = load i32, i32* %v2_1fff0, align 4
  %v1_1fff6 = call i32 @unknown_448b0(i32 %v3_1fff0)
  %v1_1fffb = icmp eq i32 %v1_1fff6, 0
  %v5_20000 = icmp eq i1 %v1_1fffb, false
  %v0_20031 = load i32, i32* @ebp, align 4
  br i1 %v5_20000, label %dec_label_pc_20031, label %dec_label_pc_20004

dec_label_pc_20004:                               ; preds = %dec_label_pc_1fff0
  %v1_20004 = add i32 %v0_20031, -68
  %v2_20004 = inttoptr i32 %v1_20004 to i32*
  %v3_20004 = load i32, i32* %v2_20004, align 4
  %v1_20007 = add i32 %v0_20031, -60
  %v2_20007 = inttoptr i32 %v1_20007 to i32*
  %v3_20007 = load i32, i32* %v2_20007, align 4
  %v1_2000a = add i32 %v0_20031, -72
  %v2_2000a = inttoptr i32 %v1_2000a to i32*
  %v3_2000a = load i32, i32* %v2_2000a, align 4
  %v1_2001d = add i32 %v0_20031, -64
  %v2_2001d = inttoptr i32 %v1_2001d to i32*
  %v3_2001d = load i32, i32* %v2_2001d, align 4
  %v5_20027 = call i32 @unknown_44a60(i32 %v3_20007, i32 %v3_2001d, i32 0, i32 %v3_20004, i32 %v3_2000a)
  %v0_2002f = call i32 @function_20098()
  ret i32 %v0_2002f

dec_label_pc_20031:                               ; preds = %dec_label_pc_1fff0
  %v1_20031 = add i32 %v0_20031, -24
  %v2_20031 = inttoptr i32 %v1_20031 to i32*
  %v3_20031 = load i32, i32* %v2_20031, align 4
  %v1_20037 = add i32 %v0_20031, -60
  %v2_20037 = inttoptr i32 %v1_20037 to i32*
  %v3_20037 = load i32, i32* %v2_20037, align 4
  %v1_2003a = add i32 %v0_20031, -72
  %v2_2003a = inttoptr i32 %v1_2003a to i32*
  %v3_2003a = load i32, i32* %v2_2003a, align 4
  store i32 %v3_2003a, i32* %ebx.global-to-local, align 4
  %v1_20049 = add i32 %v0_20031, -64
  %v2_20049 = inttoptr i32 %v1_20049 to i32*
  %v3_20049 = load i32, i32* %v2_20049, align 4
  %v5_20053 = call i32 @unknown_44a60(i32 %v3_20037, i32 %v3_20049, i32 %v3_20031, i32 %v3_20031, i32 %v3_2003a)
  %v0_2005b = call i32 @function_20098()
  ret i32 %v0_2005b

dec_label_pc_2005d:                               ; preds = %dec_label_pc_1ffb0
  %v1_2005d = add i32 %v0_2005d, -32
  %v1_20060 = add i32 %v0_2005d, -72
  %v2_20060 = inttoptr i32 %v1_20060 to i32*
  %v3_20060 = load i32, i32* %v2_20060, align 4
  %v1_20067 = add i32 %v0_2005d, -64
  %v2_20067 = inttoptr i32 %v1_20067 to i32*
  %v3_20067 = load i32, i32* %v2_20067, align 4
  %v3_20071 = call i32 @unknown_44b62(i32 %v1_2005d, i32 %v3_20067, i32 %v3_20060)
  %v0_20079 = load i32, i32* @ebp, align 4
  %v1_20079 = add i32 %v0_20079, -60
  %v2_20079 = inttoptr i32 %v1_20079 to i32*
  %v3_20079 = load i32, i32* %v2_20079, align 4
  %v1_2007c = add i32 %v0_20079, -32
  %v2_2007c = inttoptr i32 %v1_2007c to i32*
  %v3_2007c = load i32, i32* %v2_2007c, align 4
  %v2_2007f = inttoptr i32 %v3_20079 to i32*
  store i32 %v3_2007c, i32* %v2_2007f, align 4
  %v0_20081 = call i32 @function_20098()
  ret i32 %v0_20081

dec_label_pc_20083:                               ; preds = %dec_label_pc_1ff1b
  %v1_20083 = add i32 %v0_20083, -60
  %v2_20083 = inttoptr i32 %v1_20083 to i32*
  %v3_20083 = load i32, i32* %v2_20083, align 4
  %v1_20086 = add i32 %v0_20083, -68
  %v2_20090 = call i32 @unknown_44de6(i32 %v3_20083, i32 %v1_20086)
  ret i32 %v2_20090

; uselistorder directives
  uselistorder i32 %v3_20031, { 1, 0 }
  uselistorder i32 %v0_20031, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_2005d, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1ffb0, { 1, 0 }
  uselistorder i32 %v0_20083, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_44b62, { 1, 2, 0 }
  uselistorder i32 ()* @function_20098, { 5, 4, 3, 2, 9, 8, 7, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_44a60, { 3, 2, 1, 6, 5, 4, 0 }
  uselistorder i32 (i32)* @unknown_3fddc, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_3a5e4, { 3, 2, 4, 1, 0 }
  uselistorder i32 (i32)* @unknown_3f7b6, { 3, 2, 4, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_44910, { 3, 2, 4, 1, 0 }
}

define i32 @function_20098() local_unnamed_addr {
dec_label_pc_20098:
  %v0_20098 = load i32, i32* @ebp, align 4
  %v1_20098 = add i32 %v0_20098, -60
  %v2_20098 = inttoptr i32 %v1_20098 to i32*
  %v3_20098 = load i32, i32* %v2_20098, align 4
  ret i32 %v3_20098
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_200b4:
  %v1_200ce = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_200ce, i32* @eax, align 8
  %v2_200db = call i32 @function_200e2(i32 %arg1)
  ret i32 %v2_200db
}

define i32 @function_200e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e2:
  %v0_200e3 = load i32, i32* @eax, align 8
  ret i32 %v0_200e3
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e4:
  %v1_200fe = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_200fe, i32* @eax, align 8
  %v2_2010b = call i32 @function_20112(i32 %arg1)
  ret i32 %v2_2010b
}

define i32 @function_20112(i32 %arg1) local_unnamed_addr {
dec_label_pc_20112:
  %v0_20113 = load i32, i32* @eax, align 8
  ret i32 %v0_20113
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20114:
  %v1_2012e = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_2012e, i32* @eax, align 8
  %v2_2013b = call i32 @function_20142(i32 %arg1)
  ret i32 %v2_2013b
}

define i32 @function_20142(i32 %arg1) local_unnamed_addr {
dec_label_pc_20142:
  %v0_20143 = load i32, i32* @eax, align 8
  ret i32 %v0_20143
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20144:
  %v1_2015e = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2015e, i32* @eax, align 8
  %v2_2016b = call i32 @function_20172(i32 %arg1)
  ret i32 %v2_2016b
}

define i32 @function_20172(i32 %arg1) local_unnamed_addr {
dec_label_pc_20172:
  %v0_20173 = load i32, i32* @eax, align 8
  ret i32 %v0_20173
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20174:
  %v1_2018e = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_2018e, i32* @eax, align 8
  %v2_2019b = call i32 @function_201a2(i32 %arg1)
  ret i32 %v2_2019b
}

define i32 @function_201a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_201a2:
  %v0_201a3 = load i32, i32* @eax, align 8
  ret i32 %v0_201a3
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_201a4:
  %v1_201be = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_201be, i32* @eax, align 8
  %v2_201cb = call i32 @function_201d2(i32 %arg1)
  ret i32 %v2_201cb
}

define i32 @function_201d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_201d2:
  %v0_201d3 = load i32, i32* @eax, align 8
  ret i32 %v0_201d3
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_201d4:
  %v1_201ee = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_201ee, i32* @eax, align 8
  %v2_201fb = call i32 @function_20202(i32 %arg1)
  ret i32 %v2_201fb
}

define i32 @function_20202(i32 %arg1) local_unnamed_addr {
dec_label_pc_20202:
  %v0_20203 = load i32, i32* @eax, align 8
  ret i32 %v0_20203
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20204:
  %v1_2021e = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2021e, i32* @eax, align 8
  %v2_2022b = call i32 @function_20232(i32 %arg1)
  ret i32 %v2_2022b
}

define i32 @function_20232(i32 %arg1) local_unnamed_addr {
dec_label_pc_20232:
  %v0_20233 = load i32, i32* @eax, align 8
  ret i32 %v0_20233
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11lower_boundERS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20234:
  %v1_2025e = call i32 @unknown_403a8(i32 %arg2)
  %v1_2026b = call i32 @unknown_3f006(i32 %arg2)
  %v5_2028c = call i32 @unknown_453cc(i32 %arg1, i32 %arg2, i32 %v1_2026b, i32 %v1_2025e, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v1_202a1 = call i32 @function_202a8()
  ret i32 %v1_202a1

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_202a8() local_unnamed_addr {
dec_label_pc_202a8:
  %v0_202ac = load i32, i32* @eax, align 8
  ret i32 %v0_202ac
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_202b0:
  store i32 %arg1, i32* @eax, align 8
  %v3_202da = call i32 @function_202e1(i32 %arg2, i32 %arg1)
  ret i32 %v3_202da
}

define i32 @function_202e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_202e1:
  %v0_202e2 = load i32, i32* @eax, align 8
  ret i32 %v0_202e2
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_202e6:
  %v1_20306 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_20313 = call i32 @unknown_45532(i32 %arg1, i32 %v1_20306)
  ret i32 %arg1
}

define i32 @_ZNSt12_Vector_baseISsSaISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20330:
  %v1_2034d = call i32 @unknown_455b4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2035c = call i32 @function_20363()
  ret i32 %v1_2035c
}

define i32 @function_20363() local_unnamed_addr {
dec_label_pc_20363:
  %v0_20364 = load i32, i32* @eax, align 8
  ret i32 %v0_20364
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEC1ERKSt17_Rb_tree_iteratorIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20366:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_20386 = inttoptr i32 %arg2 to i32*
  %v2_20386 = load i32, i32* %v1_20386, align 4
  store i32 %v2_20386, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_20397 = call i32 @function_2039e(i32 %arg2, i32 %tmp101)
  ret i32 %v3_20397
}

define i32 @function_2039e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2039e:
  %v0_2039f = load i32, i32* @eax, align 8
  ret i32 %v0_2039f
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_203a0:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v1_203d3 = call i32 @unknown_40514(i32 %arg2)
  %v12_203d8 = icmp eq i32 %v1_203d3, %arg3
  %v5_203dd = icmp eq i1 %v12_203d8, false
  br i1 %v5_203dd, label %dec_label_pc_204a9, label %dec_label_pc_203e5

dec_label_pc_203e5:                               ; preds = %dec_label_pc_203a0
  %v1_203eb = call i32 @unknown_456ee(i32 %arg2)
  %v1_203f0 = icmp eq i32 %v1_203eb, 0
  br i1 %v1_203f0, label %dec_label_pc_20480, label %dec_label_pc_203f4

dec_label_pc_203f4:                               ; preds = %dec_label_pc_203e5
  %v2_203fb = ptrtoint i32* %stack_var_-21 to i32
  %v2_20401 = call i32 @unknown_456ba(i32 %v2_203fb, i32 %arg4)
  %v1_2040e = call i32 @unknown_405a4(i32 %arg2)
  %v1_20413 = inttoptr i32 %v1_2040e to i32*
  %v2_20413 = load i32, i32* %v1_20413, align 4
  %v1_20418 = call i32 @unknown_45676(i32 %v2_20413)
  %v3_2042d = call i32 @unknown_3acec(i32 %arg2, i32 %v1_20418, i32 %v2_20401)
  %v4_20432 = trunc i32 %v3_2042d to i8
  %v5_20432 = icmp eq i8 %v4_20432, 0
  br i1 %v5_20432, label %dec_label_pc_20480, label %dec_label_pc_20446

dec_label_pc_20446:                               ; preds = %dec_label_pc_203f4
  %v1_2044c = call i32 @unknown_405a4(i32 %arg2)
  %v1_20451 = inttoptr i32 %v1_2044c to i32*
  %v2_20451 = load i32, i32* %v1_20451, align 4
  %v5_20473 = call i32 @unknown_4571e(i32 %tmp116, i32 %arg2, i32 0, i32 %v2_20451, i32 %arg4)
  %v0_2047b = call i32 @function_207a0()
  ret i32 %v0_2047b

dec_label_pc_20480:                               ; preds = %dec_label_pc_203e5, %dec_label_pc_203f4
  %v2_20480 = ptrtoint i32* %stack_var_-52 to i32
  %v3_20494 = call i32 @unknown_45820(i32 %v2_20480, i32 %arg2, i32 %arg4)
  %v3_2049f = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_2049f, i32* %arg1, align 4
  %v0_204a4 = call i32 @function_207a0()
  ret i32 %v0_204a4

dec_label_pc_204a9:                               ; preds = %dec_label_pc_203a0
  %v1_204af = call i32 @unknown_45676(i32 %arg3)
  ret i32 %v1_204af

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_20480, { 1, 0 }
}

define i32 @function_204b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_204b5:
  %v0_204b5 = load i32, i32* @eax, align 8
  ret i32 %v0_204b5
}

define i32 @function_204e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_204e1:
  %v2_204e1 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_204e1 = load i32, i32* @eax, align 8
  %v4_204e1 = trunc i32 %v3_204e1 to i8
  %v5_204e1 = add i8 %v4_204e1, %v2_204e1
  %v21_204e1 = inttoptr i32 %v3_204e1 to i8*
  store i8 %v5_204e1, i8* %v21_204e1, align 1
  %v0_204e3 = load i32, i32* @ebp, align 4
  %v1_204e3 = add i32 %v0_204e3, -68
  %v2_204e3 = inttoptr i32 %v1_204e3 to i32*
  %v3_204e3 = load i32, i32* %v2_204e3, align 4
  %v2_204e6 = add i32 %v0_204e3, -24
  %v3_204e6 = inttoptr i32 %v2_204e6 to i32*
  store i32 %v3_204e3, i32* %v3_204e6, align 4
  %v0_204e9 = load i32, i32* @ebp, align 4
  %v1_204e9 = add i32 %v0_204e9, -68
  %v2_204e9 = inttoptr i32 %v1_204e9 to i32*
  %v3_204e9 = load i32, i32* %v2_204e9, align 4
  store i32 %v3_204e9, i32* @ebx, align 4
  %v1_204ec = add i32 %v0_204e9, -64
  %v2_204ec = inttoptr i32 %v1_204ec to i32*
  %v3_204ec = load i32, i32* %v2_204ec, align 4
  %v1_204f2 = call i32 @unknown_40544(i32 %v3_204ec)
  %v1_204f7 = inttoptr i32 %v1_204f2 to i32*
  %v2_204f7 = load i32, i32* %v1_204f7, align 4
  %v0_204f9 = load i32, i32* @ebx, align 4
  %v12_204f9 = icmp eq i32 %v0_204f9, %v2_204f7
  %v5_204fe = icmp eq i1 %v12_204f9, false
  br i1 %v5_204fe, label %bb, label %dec_label_pc_20502

bb:                                               ; preds = %dec_label_pc_204e1
  %v1_20500 = call i32 @function_20545()
  br label %dec_label_pc_20502

dec_label_pc_20502:                               ; preds = %bb, %dec_label_pc_204e1
  %v0_20502 = load i32, i32* @ebp, align 4
  %v1_20502 = add i32 %v0_20502, -64
  %v2_20502 = inttoptr i32 %v1_20502 to i32*
  %v3_20502 = load i32, i32* %v2_20502, align 4
  ret i32 %v3_20502
}

define i32 @function_20506(i32 %arg1) local_unnamed_addr {
dec_label_pc_20506:
  %ebx.global-to-local = alloca i32, align 4
  %v1_20508 = call i32 @unknown_40544(i32 ptrtoint (i32* @1 to i32))
  %v1_2050d = inttoptr i32 %v1_20508 to i32*
  %v2_2050d = load i32, i32* %v1_2050d, align 4
  store i32 %v2_2050d, i32* %ebx.global-to-local, align 4
  %v0_2050f = load i32, i32* @ebp, align 4
  %v1_2050f = add i32 %v0_2050f, -64
  %v2_2050f = inttoptr i32 %v1_2050f to i32*
  %v3_2050f = load i32, i32* %v2_2050f, align 4
  %v1_20515 = call i32 @unknown_40544(i32 %v3_2050f)
  %v1_2051a = inttoptr i32 %v1_20515 to i32*
  %v2_2051a = load i32, i32* %v1_2051a, align 4
  %v0_2051c = load i32, i32* @ebp, align 4
  %v1_2051c = add i32 %v0_2051c, -60
  %v2_2051c = inttoptr i32 %v1_2051c to i32*
  %v3_2051c = load i32, i32* %v2_2051c, align 4
  %v1_2051f = add i32 %v0_2051c, -72
  %v2_2051f = inttoptr i32 %v1_2051f to i32*
  %v3_2051f = load i32, i32* %v2_2051f, align 4
  %v0_20526 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2052e = add i32 %v0_2051c, -64
  %v2_2052e = inttoptr i32 %v1_2052e to i32*
  %v3_2052e = load i32, i32* %v2_2052e, align 4
  %v5_20538 = call i32 @unknown_4571e(i32 %v3_2051c, i32 %v3_2052e, i32 %v2_2051a, i32 %v0_20526, i32 %v3_2051f)
  %v0_20540 = call i32 @function_207a0()
  ret i32 %v0_20540

; uselistorder directives
  uselistorder i32 (i32)* @unknown_40544, { 1, 0, 2 }
}

define i32 @function_20520(i32 %arg1) local_unnamed_addr {
dec_label_pc_20520:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20545() local_unnamed_addr {
dec_label_pc_20545:
  %ebx.global-to-local = alloca i32, align 4
  %v0_20545 = load i32, i32* @ebp, align 4
  %v1_20545 = add i32 %v0_20545, -72
  %v2_20545 = inttoptr i32 %v1_20545 to i32*
  %v3_20545 = load i32, i32* %v2_20545, align 4
  %v1_2054c = add i32 %v0_20545, -15
  %v2_20552 = call i32 @unknown_456ba(i32 %v1_2054c, i32 %v3_20545)
  store i32 %v2_20552, i32* %ebx.global-to-local, align 4
  %v0_20559 = load i32, i32* @ebp, align 4
  %v1_20559 = add i32 %v0_20559, -24
  %v1_2055f = call i32 @unknown_45a24(i32 %v1_20559)
  %v1_20564 = inttoptr i32 %v1_2055f to i32*
  %v2_20564 = load i32, i32* %v1_20564, align 4
  %v1_20569 = call i32 @unknown_45676(i32 %v2_20564)
  %v0_20570 = load i32, i32* @ebp, align 4
  %v1_20570 = add i32 %v0_20570, -64
  %v2_20570 = inttoptr i32 %v1_20570 to i32*
  %v3_20570 = load i32, i32* %v2_20570, align 4
  %v0_20573 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2057e = call i32 @unknown_3acec(i32 %v3_20570, i32 %v1_20569, i32 %v0_20573)
  %v4_20583 = trunc i32 %v3_2057e to i8
  %v5_20583 = icmp eq i8 %v4_20583, 0
  %v0_205fa = load i32, i32* @ebp, align 4
  br i1 %v5_20583, label %dec_label_pc_205fa, label %dec_label_pc_20587

dec_label_pc_20587:                               ; preds = %dec_label_pc_20545
  %v1_20587 = add i32 %v0_205fa, -24
  %v2_20587 = inttoptr i32 %v1_20587 to i32*
  %v3_20587 = load i32, i32* %v2_20587, align 4
  %v1_2058d = call i32 @unknown_45a63(i32 %v3_20587)
  %v1_20592 = icmp eq i32 %v1_2058d, 0
  %v5_20597 = icmp eq i1 %v1_20592, false
  %v0_205cb = load i32, i32* @ebp, align 4
  br i1 %v5_20597, label %dec_label_pc_205cb, label %dec_label_pc_2059b

dec_label_pc_2059b:                               ; preds = %dec_label_pc_20587
  %v1_2059b = add i32 %v0_205cb, -24
  %v2_2059b = inttoptr i32 %v1_2059b to i32*
  %v3_2059b = load i32, i32* %v2_2059b, align 4
  %v1_2059e = add i32 %v0_205cb, -60
  %v2_2059e = inttoptr i32 %v1_2059e to i32*
  %v3_2059e = load i32, i32* %v2_2059e, align 4
  %v1_205a1 = add i32 %v0_205cb, -72
  %v2_205a1 = inttoptr i32 %v1_205a1 to i32*
  %v3_205a1 = load i32, i32* %v2_205a1, align 4
  store i32 %v3_205a1, i32* @ecx, align 4
  %v1_205b4 = add i32 %v0_205cb, -64
  %v2_205b4 = inttoptr i32 %v1_205b4 to i32*
  %v3_205b4 = load i32, i32* %v2_205b4, align 4
  %v5_205be = call i32 @unknown_4571e(i32 %v3_2059e, i32 %v3_205b4, i32 0, i32 %v3_2059b, i32 %v3_205a1)
  %v0_205c6 = call i32 @function_207a0()
  ret i32 %v0_205c6

dec_label_pc_205cb:                               ; preds = %dec_label_pc_20587
  %v1_205cb = add i32 %v0_205cb, -68
  %v2_205cb = inttoptr i32 %v1_205cb to i32*
  %v3_205cb = load i32, i32* %v2_205cb, align 4
  store i32 %v3_205cb, i32* @ecx, align 4
  %v3_205ce = load i32, i32* %v2_205cb, align 4
  %v1_205d1 = add i32 %v0_205cb, -60
  %v2_205d1 = inttoptr i32 %v1_205d1 to i32*
  %v3_205d1 = load i32, i32* %v2_205d1, align 4
  %v1_205d4 = add i32 %v0_205cb, -72
  %v2_205d4 = inttoptr i32 %v1_205d4 to i32*
  %v3_205d4 = load i32, i32* %v2_205d4, align 4
  store i32 %v3_205d4, i32* %ebx.global-to-local, align 4
  %v1_205e3 = add i32 %v0_205cb, -64
  %v2_205e3 = inttoptr i32 %v1_205e3 to i32*
  %v3_205e3 = load i32, i32* %v2_205e3, align 4
  %v5_205ed = call i32 @unknown_4571e(i32 %v3_205d1, i32 %v3_205e3, i32 %v3_205ce, i32 %v3_205cb, i32 %v3_205d4)
  %v0_205f5 = call i32 @function_207a0()
  ret i32 %v0_205f5

dec_label_pc_205fa:                               ; preds = %dec_label_pc_20545
  %v1_205fa = add i32 %v0_205fa, -40
  %v1_205fd = add i32 %v0_205fa, -72
  %v2_205fd = inttoptr i32 %v1_205fd to i32*
  %v3_205fd = load i32, i32* %v2_205fd, align 4
  %v1_20604 = add i32 %v0_205fa, -64
  %v2_20604 = inttoptr i32 %v1_20604 to i32*
  %v3_20604 = load i32, i32* %v2_20604, align 4
  %v3_2060e = call i32 @unknown_45820(i32 %v1_205fa, i32 %v3_20604, i32 %v3_205fd)
  %v0_20616 = load i32, i32* @ebp, align 4
  %v1_20616 = add i32 %v0_20616, -60
  %v2_20616 = inttoptr i32 %v1_20616 to i32*
  %v3_20616 = load i32, i32* %v2_20616, align 4
  %v1_20619 = add i32 %v0_20616, -40
  %v2_20619 = inttoptr i32 %v1_20619 to i32*
  %v3_20619 = load i32, i32* %v2_20619, align 4
  %v2_2061c = inttoptr i32 %v3_20616 to i32*
  store i32 %v3_20619, i32* %v2_2061c, align 4
  %v0_2061e = call i32 @function_207a0()
  ret i32 %v0_2061e

; uselistorder directives
  uselistorder i32 %v0_205cb, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_205fa, { 0, 2, 3, 1 }
}

define i32 @function_20623() local_unnamed_addr {
dec_label_pc_20623:
  %ebx.global-to-local = alloca i32, align 4
  %v0_20623 = load i32, i32* @ebp, align 4
  %v1_20623 = add i32 %v0_20623, -72
  %v2_20623 = inttoptr i32 %v1_20623 to i32*
  %v3_20623 = load i32, i32* %v2_20623, align 4
  %v1_2062a = add i32 %v0_20623, -14
  %v2_20630 = call i32 @unknown_456ba(i32 %v1_2062a, i32 %v3_20623)
  store i32 %v2_20630, i32* %ebx.global-to-local, align 4
  %v0_20637 = load i32, i32* @ebp, align 4
  %v1_20637 = add i32 %v0_20637, -68
  %v2_20637 = inttoptr i32 %v1_20637 to i32*
  %v3_20637 = load i32, i32* %v2_20637, align 4
  %v1_2063d = call i32 @unknown_45676(i32 %v3_20637)
  %v0_20644 = load i32, i32* @ebp, align 4
  %v1_20644 = add i32 %v0_20644, -64
  %v2_20644 = inttoptr i32 %v1_20644 to i32*
  %v3_20644 = load i32, i32* %v2_20644, align 4
  %v0_20647 = load i32, i32* %ebx.global-to-local, align 4
  %v3_20652 = call i32 @unknown_3acec(i32 %v3_20644, i32 %v1_2063d, i32 %v0_20647)
  %v4_20657 = trunc i32 %v3_20652 to i8
  %v5_20657 = icmp eq i8 %v4_20657, 0
  %v0_2078b = load i32, i32* @ebp, align 4
  br i1 %v5_20657, label %dec_label_pc_2078b, label %dec_label_pc_2065f

dec_label_pc_2065f:                               ; preds = %dec_label_pc_20623
  %v1_2065f = add i32 %v0_2078b, -68
  %v2_2065f = inttoptr i32 %v1_2065f to i32*
  %v3_2065f = load i32, i32* %v2_2065f, align 4
  %v2_20662 = add i32 %v0_2078b, -24
  %v3_20662 = inttoptr i32 %v2_20662 to i32*
  store i32 %v3_2065f, i32* %v3_20662, align 4
  %v0_20665 = load i32, i32* @ebp, align 4
  %v1_20665 = add i32 %v0_20665, -68
  %v2_20665 = inttoptr i32 %v1_20665 to i32*
  %v3_20665 = load i32, i32* %v2_20665, align 4
  store i32 %v3_20665, i32* %ebx.global-to-local, align 4
  %v1_20668 = add i32 %v0_20665, -64
  %v2_20668 = inttoptr i32 %v1_20668 to i32*
  %v3_20668 = load i32, i32* %v2_20668, align 4
  %v1_2066e = call i32 @unknown_405a4(i32 %v3_20668)
  %v1_20673 = inttoptr i32 %v1_2066e to i32*
  %v2_20673 = load i32, i32* %v1_20673, align 4
  %v0_20675 = load i32, i32* %ebx.global-to-local, align 4
  %v12_20675 = icmp eq i32 %v0_20675, %v2_20673
  %v5_2067a = icmp eq i1 %v12_20675, false
  %v0_206b8 = load i32, i32* @ebp, align 4
  br i1 %v5_2067a, label %dec_label_pc_206b8, label %dec_label_pc_2067e

dec_label_pc_2067e:                               ; preds = %dec_label_pc_2065f
  %v1_2067e = add i32 %v0_206b8, -64
  %v2_2067e = inttoptr i32 %v1_2067e to i32*
  %v3_2067e = load i32, i32* %v2_2067e, align 4
  %v1_20684 = call i32 @unknown_405a4(i32 %v3_2067e)
  %v1_20689 = inttoptr i32 %v1_20684 to i32*
  %v2_20689 = load i32, i32* %v1_20689, align 4
  %v0_2068b = load i32, i32* @ebp, align 4
  %v1_2068b = add i32 %v0_2068b, -60
  %v2_2068b = inttoptr i32 %v1_2068b to i32*
  %v3_2068b = load i32, i32* %v2_2068b, align 4
  %v1_2068e = add i32 %v0_2068b, -72
  %v2_2068e = inttoptr i32 %v1_2068e to i32*
  %v3_2068e = load i32, i32* %v2_2068e, align 4
  %v1_206a1 = add i32 %v0_2068b, -64
  %v2_206a1 = inttoptr i32 %v1_206a1 to i32*
  %v3_206a1 = load i32, i32* %v2_206a1, align 4
  %v5_206ab = call i32 @unknown_4571e(i32 %v3_2068b, i32 %v3_206a1, i32 0, i32 %v2_20689, i32 %v3_2068e)
  %v0_206b3 = call i32 @function_207a0()
  ret i32 %v0_206b3

dec_label_pc_206b8:                               ; preds = %dec_label_pc_2065f
  %v1_206b8 = add i32 %v0_206b8, -24
  %v1_206be = call i32 @unknown_45a94(i32 %v1_206b8)
  %v1_206c3 = inttoptr i32 %v1_206be to i32*
  %v2_206c3 = load i32, i32* %v1_206c3, align 4
  %v1_206c8 = call i32 @unknown_45676(i32 %v2_206c3)
  store i32 %v1_206c8, i32* %ebx.global-to-local, align 4
  %v0_206cf = load i32, i32* @ebp, align 4
  %v1_206cf = add i32 %v0_206cf, -72
  %v2_206cf = inttoptr i32 %v1_206cf to i32*
  %v3_206cf = load i32, i32* %v2_206cf, align 4
  %v1_206d6 = add i32 %v0_206cf, -13
  %v2_206dc = call i32 @unknown_456ba(i32 %v1_206d6, i32 %v3_206cf)
  %v0_206e1 = load i32, i32* @ebp, align 4
  %v1_206e1 = add i32 %v0_206e1, -64
  %v2_206e1 = inttoptr i32 %v1_206e1 to i32*
  %v3_206e1 = load i32, i32* %v2_206e1, align 4
  %v0_206e4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_206ef = call i32 @unknown_3acec(i32 %v3_206e1, i32 %v2_206dc, i32 %v0_206e4)
  %v4_206f4 = trunc i32 %v3_206ef to i8
  %v5_206f4 = icmp eq i8 %v4_206f4, 0
  %v0_20765 = load i32, i32* @ebp, align 4
  br i1 %v5_206f4, label %dec_label_pc_20765, label %dec_label_pc_206f8

dec_label_pc_206f8:                               ; preds = %dec_label_pc_206b8
  %v1_206f8 = add i32 %v0_20765, -68
  %v2_206f8 = inttoptr i32 %v1_206f8 to i32*
  %v3_206f8 = load i32, i32* %v2_206f8, align 4
  %v1_206fe = call i32 @unknown_45a63(i32 %v3_206f8)
  %v1_20703 = icmp eq i32 %v1_206fe, 0
  %v5_20708 = icmp eq i1 %v1_20703, false
  %v0_20739 = load i32, i32* @ebp, align 4
  br i1 %v5_20708, label %dec_label_pc_20739, label %dec_label_pc_2070c

dec_label_pc_2070c:                               ; preds = %dec_label_pc_206f8
  %v1_2070c = add i32 %v0_20739, -68
  %v2_2070c = inttoptr i32 %v1_2070c to i32*
  %v3_2070c = load i32, i32* %v2_2070c, align 4
  %v1_2070f = add i32 %v0_20739, -60
  %v2_2070f = inttoptr i32 %v1_2070f to i32*
  %v3_2070f = load i32, i32* %v2_2070f, align 4
  %v1_20712 = add i32 %v0_20739, -72
  %v2_20712 = inttoptr i32 %v1_20712 to i32*
  %v3_20712 = load i32, i32* %v2_20712, align 4
  %v1_20725 = add i32 %v0_20739, -64
  %v2_20725 = inttoptr i32 %v1_20725 to i32*
  %v3_20725 = load i32, i32* %v2_20725, align 4
  %v5_2072f = call i32 @unknown_4571e(i32 %v3_2070f, i32 %v3_20725, i32 0, i32 %v3_2070c, i32 %v3_20712)
  %v0_20737 = call i32 @function_207a0()
  ret i32 %v0_20737

dec_label_pc_20739:                               ; preds = %dec_label_pc_206f8
  %v1_20739 = add i32 %v0_20739, -24
  %v2_20739 = inttoptr i32 %v1_20739 to i32*
  %v3_20739 = load i32, i32* %v2_20739, align 4
  %v1_2073f = add i32 %v0_20739, -60
  %v2_2073f = inttoptr i32 %v1_2073f to i32*
  %v3_2073f = load i32, i32* %v2_2073f, align 4
  %v1_20742 = add i32 %v0_20739, -72
  %v2_20742 = inttoptr i32 %v1_20742 to i32*
  %v3_20742 = load i32, i32* %v2_20742, align 4
  store i32 %v3_20742, i32* %ebx.global-to-local, align 4
  %v1_20751 = add i32 %v0_20739, -64
  %v2_20751 = inttoptr i32 %v1_20751 to i32*
  %v3_20751 = load i32, i32* %v2_20751, align 4
  %v5_2075b = call i32 @unknown_4571e(i32 %v3_2073f, i32 %v3_20751, i32 %v3_20739, i32 %v3_20739, i32 %v3_20742)
  %v0_20763 = call i32 @function_207a0()
  ret i32 %v0_20763

dec_label_pc_20765:                               ; preds = %dec_label_pc_206b8
  %v1_20765 = add i32 %v0_20765, -32
  %v1_20768 = add i32 %v0_20765, -72
  %v2_20768 = inttoptr i32 %v1_20768 to i32*
  %v3_20768 = load i32, i32* %v2_20768, align 4
  %v1_2076f = add i32 %v0_20765, -64
  %v2_2076f = inttoptr i32 %v1_2076f to i32*
  %v3_2076f = load i32, i32* %v2_2076f, align 4
  %v3_20779 = call i32 @unknown_45820(i32 %v1_20765, i32 %v3_2076f, i32 %v3_20768)
  %v0_20781 = load i32, i32* @ebp, align 4
  %v1_20781 = add i32 %v0_20781, -60
  %v2_20781 = inttoptr i32 %v1_20781 to i32*
  %v3_20781 = load i32, i32* %v2_20781, align 4
  %v1_20784 = add i32 %v0_20781, -32
  %v2_20784 = inttoptr i32 %v1_20784 to i32*
  %v3_20784 = load i32, i32* %v2_20784, align 4
  %v2_20787 = inttoptr i32 %v3_20781 to i32*
  store i32 %v3_20784, i32* %v2_20787, align 4
  %v0_20789 = call i32 @function_207a0()
  ret i32 %v0_20789

dec_label_pc_2078b:                               ; preds = %dec_label_pc_20623
  %v1_2078b = add i32 %v0_2078b, -60
  %v2_2078b = inttoptr i32 %v1_2078b to i32*
  %v3_2078b = load i32, i32* %v2_2078b, align 4
  %v1_2078e = add i32 %v0_2078b, -68
  %v2_20798 = call i32 @unknown_45ad4(i32 %v3_2078b, i32 %v1_2078e)
  ret i32 %v2_20798

; uselistorder directives
  uselistorder i32 %v3_20739, { 1, 0 }
  uselistorder i32 %v0_20739, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_20765, { 0, 2, 3, 1 }
  uselistorder i32 %v0_206b8, { 1, 0 }
  uselistorder i32 %v0_2078b, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_45820, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_45a63, { 1, 0 }
  uselistorder i32 ()* @function_207a0, { 9, 8, 7, 6, 3, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_4571e, { 6, 5, 4, 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_405a4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3acec, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_45676, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32)* @unknown_456ba, { 3, 2, 0, 1 }
}

define i32 @function_207a0() local_unnamed_addr {
dec_label_pc_207a0:
  %v0_207a0 = load i32, i32* @ebp, align 4
  %v1_207a0 = add i32 %v0_207a0, -60
  %v2_207a0 = inttoptr i32 %v1_207a0 to i32*
  %v3_207a0 = load i32, i32* %v2_207a0, align 4
  %v1_207b4 = add i32 %v0_207a0, -4
  %v2_207b4 = inttoptr i32 %v1_207b4 to i32*
  %v3_207b4 = load i32, i32* %v2_207b4, align 4
  store i32 %v3_207b4, i32* @ebx, align 4
  ret i32 %v3_207a0
}

define i32 @_ZN5boost6detail13addr_impl_refISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEC1ERS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_207bc:
  ret i32 %arg1
}

define i32 @function_207e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_207e0:
  %v0_207e0 = load i32, i32* @ebx, align 4
  %v1_207e0 = add i32 %v0_207e0, 862319685
  %v2_207e0 = inttoptr i32 %v1_207e0 to i8*
  %v3_207e0 = load i8, i8* %v2_207e0, align 1
  %v4_207e0 = load i32, i32* @ecx, align 4
  %v5_207e0 = trunc i32 %v4_207e0 to i8
  %v6_207e0 = load i1, i1* @cf, align 1
  %v7_207e0 = zext i1 %v6_207e0 to i8
  %v8_207e0 = add i8 %v5_207e0, %v3_207e0
  %v9_207e0 = add i8 %v8_207e0, %v7_207e0
  store i8 %v9_207e0, i8* %v2_207e0, align 1
  %v0_207e6 = load i32, i32* @eax, align 8
  %v1_207e6 = add i32 %v0_207e6, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_207e6 = icmp eq i32 %v1_207e6, 0
  store i32 %v1_207e6, i32* @eax, align 8
  br i1 %v10_207e6, label %bb, label %dec_label_pc_207ed

bb:                                               ; preds = %dec_label_pc_207e0
  %v1_207eb = call i32 @function_207f2()
  br label %dec_label_pc_207ed

dec_label_pc_207ed:                               ; preds = %bb, %dec_label_pc_207e0
  %v2_207eb = phi i32 [ %v1_207eb, %bb ], [ %v1_207e6, %dec_label_pc_207e0 ]
  ret i32 %v2_207eb
}

define i32 @function_207f2() local_unnamed_addr {
dec_label_pc_207f2:
  %v0_207f3 = load i32, i32* @eax, align 8
  ret i32 %v0_207f3
}

define i32 @_ZNK5boost6detail13addr_impl_refISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEcvRS9_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_207f4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2080e = load i32, i32* %arg1, align 4
  store i32 %v2_2080e, i32* @eax, align 8
  %v2_2081a = call i32 @function_20821(i32 %tmp99)
  ret i32 %v2_2081a
}

define i32 @function_20821(i32 %arg1) local_unnamed_addr {
dec_label_pc_20821:
  %v0_20822 = load i32, i32* @eax, align 8
  ret i32 %v0_20822
}

define i32 @_ZN5boost6detail14addressof_implISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEE1fERS9_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20823:
  ret i32 %arg1
}

define i32 @_ZN5boost12range_detail11range_beginISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20856:
  ret i32 %arg2
}

define i32 @function_2086c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2086c:
  %v2_2086c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2086c = load i32, i32* @eax, align 8
  %v4_2086c = trunc i32 %v3_2086c to i8
  %v5_2086c = add i8 %v4_2086c, %v2_2086c
  %v21_2086c = inttoptr i32 %v3_2086c to i8*
  store i8 %v5_2086c, i8* %v21_2086c, align 1
  %v0_2086e = load i32, i32* @eax, align 8
  %v1_2086e = load i32, i32* @ebp, align 4
  %v2_2086e = add i32 %v1_2086e, -12
  %v3_2086e = inttoptr i32 %v2_2086e to i32*
  store i32 %v0_2086e, i32* %v3_2086e, align 4
  %v0_20873 = load i32, i32* @ebp, align 4
  %v1_20873 = add i32 %v0_20873, -28
  %v2_20873 = inttoptr i32 %v1_20873 to i32*
  %v3_20873 = load i32, i32* %v2_20873, align 4
  %v1_20876 = add i32 %v0_20873, -32
  %v2_20876 = inttoptr i32 %v1_20876 to i32*
  %v3_20876 = load i32, i32* %v2_20876, align 4
  %v2_20880 = call i32 @unknown_45fd4(i32 %v3_20873, i32 %v3_20876)
  %v0_20888 = load i32, i32* @ebp, align 4
  %v1_20888 = add i32 %v0_20888, -28
  %v2_20888 = inttoptr i32 %v1_20888 to i32*
  %v3_20888 = load i32, i32* %v2_20888, align 4
  ret i32 %v3_20888
}

define i32 @_ZN5boost12range_detail9range_endISt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEEENS_14range_iteratorIT_E4typeERSB_() local_unnamed_addr {
dec_label_pc_208a0:
  %eax.global-to-local = alloca i32, align 4
  %v5_208a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_208a0
}

define i32 @function_208a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_208a2:
  %v0_208ad = load i32, i32* @ebp, align 4
  %v1_208b0 = add i32 %v0_208ad, 2
  store i32 %v1_208b0, i32* @ebp, align 4
  %v2_208b8 = add i32 %v0_208ad, -10
  %v3_208b8 = inttoptr i32 %v2_208b8 to i32*
  store i32 30, i32* %v3_208b8, align 4
  %v0_208bd = load i32, i32* @ebp, align 4
  %v1_208bd = add i32 %v0_208bd, -28
  %v2_208bd = inttoptr i32 %v1_208bd to i32*
  %v3_208bd = load i32, i32* %v2_208bd, align 4
  %v1_208c0 = add i32 %v0_208bd, -32
  %v2_208c0 = inttoptr i32 %v1_208c0 to i32*
  %v3_208c0 = load i32, i32* %v2_208c0, align 4
  %v2_208ca = call i32 @unknown_3b234(i32 %v3_208bd, i32 %v3_208c0)
  %v0_208d2 = load i32, i32* @ebp, align 4
  %v1_208d2 = add i32 %v0_208d2, -28
  %v2_208d2 = inttoptr i32 %v1_208d2 to i32*
  %v3_208d2 = load i32, i32* %v2_208d2, align 4
  store i32 %v3_208d2, i32* @eax, align 8
  %v1_208d5 = add i32 %v0_208d2, -12
  %v2_208d5 = inttoptr i32 %v1_208d5 to i32*
  %v3_208d5 = load i32, i32* %v2_208d5, align 4
  %v3_208d8 = icmp eq i32 %v3_208d5, 30
  br i1 %v3_208d8, label %bb, label %dec_label_pc_208e1

bb:                                               ; preds = %dec_label_pc_208a2
  %v1_208df = call i32 @function_208e6()
  br label %dec_label_pc_208e1

dec_label_pc_208e1:                               ; preds = %bb, %dec_label_pc_208a2
  %v3_208df = phi i32 [ %v1_208df, %bb ], [ %v3_208d2, %dec_label_pc_208a2 ]
  ret i32 %v3_208df
}

define i32 @function_208e6() local_unnamed_addr {
dec_label_pc_208e6:
  %v0_208e7 = load i32, i32* @eax, align 8
  ret i32 %v0_208e7
}

define i32 @_ZNSs16_S_construct_auxIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_208ea:
  ret i32 0
}

define i32 @function_20941() local_unnamed_addr {
dec_label_pc_20941:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20941 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20941 = add i32 %v0_20941, -1
  store i32 %v1_20941, i32* %ecx.global-to-local, align 4
  %v0_20943 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20943
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20944:
  store i32 -1, i32* @eax, align 8
  %v2_2096a = call i32 @function_20971(i32 %arg1)
  ret i32 %v2_2096a
}

define i32 @function_20971(i32 %arg1) local_unnamed_addr {
dec_label_pc_20971:
  %v0_20972 = load i32, i32* @eax, align 8
  ret i32 %v0_20972
}

define i32 @_ZN5boost11filesystem311path_traits5emptyISsEENS_10disable_ifINS_8is_arrayIT_EEbE4typeERKS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20973:
  %stack_var_-20 = alloca i32, align 4
  %v2_2099f = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_2099f
}

define i32 @function_209d6() local_unnamed_addr {
dec_label_pc_209d6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_209d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_209d6 = add i32 %v0_209d6, -1
  store i32 %v1_209d6, i32* %ecx.global-to-local, align 4
  %v0_209d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_209d8
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_209da:
  %v1_209f4 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_209f4, i32* @eax, align 8
  %v2_20a01 = call i32 @function_20a08(i32 %arg1)
  ret i32 %v2_20a01
}

define i32 @function_20a08(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a08:
  %v0_20a09 = load i32, i32* @eax, align 8
  ret i32 %v0_20a09
}

define i32 @_ZNKSt9_IdentityISsEclERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a0a:
  store i32 %arg2, i32* @eax, align 8
  %v3_20a34 = call i32 @function_20a3b(i32 %arg2, i32 %arg1)
  ret i32 %v3_20a34
}

define i32 @function_20a3b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a3b:
  %v0_20a3c = load i32, i32* @eax, align 8
  ret i32 %v0_20a3c
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE6_S_keyEPKSt13_Rb_tree_nodeISsE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a3d:
  %stack_var_-17 = alloca i32, align 4
  %v1_20a5a = call i32 @unknown_463a2(i32 %arg1)
  %v2_20a63 = ptrtoint i32* %stack_var_-17 to i32
  %v2_20a69 = call i32 @unknown_41447(i32 %v2_20a63, i32 %v1_20a5a)
  ret i32 %v2_20a69
}

define i32 @function_20a78(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a78:
  %v0_20a78 = load i1, i1* @zf, align 1
  br i1 %v0_20a78, label %bb, label %dec_label_pc_20a78.dec_label_pc_20a7a_crit_edge

dec_label_pc_20a78.dec_label_pc_20a7a_crit_edge:  ; preds = %dec_label_pc_20a78
  %v2_20a78.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_20a7a

bb:                                               ; preds = %dec_label_pc_20a78
  %v1_20a78 = call i32 @function_20a7f()
  br label %dec_label_pc_20a7a

dec_label_pc_20a7a:                               ; preds = %dec_label_pc_20a78.dec_label_pc_20a7a_crit_edge, %bb
  %v2_20a78 = phi i32 [ %v2_20a78.pre, %dec_label_pc_20a78.dec_label_pc_20a7a_crit_edge ], [ %v1_20a78, %bb ]
  ret i32 %v2_20a78

; uselistorder directives
  uselistorder label %dec_label_pc_20a7a, { 1, 0 }
}

define i32 @function_20a7f() local_unnamed_addr {
dec_label_pc_20a7f:
  %v0_20a80 = load i32, i32* @eax, align 8
  ret i32 %v0_20a80
}

define i32 @_ZNSt17_Rb_tree_iteratorISsEC1EPSt13_Rb_tree_nodeISsE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a82:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_20ab1 = call i32 @function_20ab8(i32 %arg2, i32 %tmp101)
  ret i32 %v3_20ab1
}

define i32 @function_20ab8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20ab8:
  %v0_20ab9 = load i32, i32* @eax, align 8
  ret i32 %v0_20ab9
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20aba:
  %v1_20ada = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_20ada = inttoptr i32 %v1_20ada to i32*
  %v3_20ada = load i32, i32* %v2_20ada, align 4
  %v2_20ae7 = call i32 @unknown_4153c(i32 %arg1, i32 %v3_20ada)
  store i32 %arg1, i32* @eax, align 8
  %v1_20af9 = call i32 @function_20b00()
  ret i32 %v1_20af9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20b00() local_unnamed_addr {
dec_label_pc_20b00:
  %v0_20b01 = load i32, i32* @eax, align 8
  ret i32 %v0_20b01
}

define i32 @_ZNKSt17_Rb_tree_iteratorISsEeqERKS0_() local_unnamed_addr {
dec_label_pc_20b04:
  %eax.global-to-local = alloca i32, align 4
  %v2_20b05 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_20b05
}

define i32 @function_20b08(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b08:
  %v0_20b09 = load i32, i32* @ebx, align 4
  %v1_20b09 = add i32 %v0_20b09, 1166608453
  %v2_20b09 = inttoptr i32 %v1_20b09 to i8*
  %v3_20b09 = load i8, i8* %v2_20b09, align 1
  %v4_20b09 = load i32, i32* @ecx, align 4
  %v5_20b09 = trunc i32 %v4_20b09 to i8
  %v6_20b09 = sub i8 %v3_20b09, %v5_20b09
  store i8 %v6_20b09, i8* %v2_20b09, align 1
  %v0_20b11 = load i32, i32* @ebp, align 4
  %v1_20b14 = add i32 %v0_20b11, 2
  store i32 %v1_20b14, i32* @ebp, align 4
  %v2_20b1c = add i32 %v0_20b11, -10
  %v3_20b1c = inttoptr i32 %v2_20b1c to i32*
  store i32 30, i32* %v3_20b1c, align 4
  %v0_20b21 = load i32, i32* @ebp, align 4
  %v1_20b21 = add i32 %v0_20b21, -28
  %v2_20b21 = inttoptr i32 %v1_20b21 to i32*
  %v3_20b21 = load i32, i32* %v2_20b21, align 4
  %v1_20b24 = inttoptr i32 %v3_20b21 to i32*
  %v2_20b24 = load i32, i32* %v1_20b24, align 4
  %v1_20b26 = add i32 %v0_20b21, -32
  %v2_20b26 = inttoptr i32 %v1_20b26 to i32*
  %v3_20b26 = load i32, i32* %v2_20b26, align 4
  %v1_20b29 = inttoptr i32 %v3_20b26 to i32*
  %v2_20b29 = load i32, i32* %v1_20b29, align 4
  %v12_20b2b = icmp eq i32 %v2_20b24, %v2_20b29
  %v1_20b2d = zext i1 %v12_20b2b to i32
  %v3_20b2d = and i32 %v2_20b29, -256
  %v4_20b2d = or i32 %v1_20b2d, %v3_20b2d
  store i32 %v4_20b2d, i32* @eax, align 8
  %v1_20b30 = add i32 %v0_20b21, -12
  %v2_20b30 = inttoptr i32 %v1_20b30 to i32*
  %v3_20b30 = load i32, i32* %v2_20b30, align 4
  %v3_20b33 = icmp eq i32 %v3_20b30, 30
  br i1 %v3_20b33, label %bb, label %dec_label_pc_20b3c

bb:                                               ; preds = %dec_label_pc_20b08
  %v1_20b3a = call i32 @function_20b41()
  br label %dec_label_pc_20b3c

dec_label_pc_20b3c:                               ; preds = %bb, %dec_label_pc_20b08
  %v4_20b3a = phi i32 [ %v1_20b3a, %bb ], [ %v4_20b2d, %dec_label_pc_20b08 ]
  ret i32 %v4_20b3a

; uselistorder directives
  uselistorder i32 %v2_20b29, { 1, 0 }
}

define i32 @function_20b41() local_unnamed_addr {
dec_label_pc_20b41:
  %v0_20b42 = load i32, i32* @eax, align 8
  ret i32 %v0_20b42
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKSs() local_unnamed_addr {
dec_label_pc_20b44:
  %eax.global-to-local = alloca i32, align 4
  %v5_20b47 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_20b47
}

define i32 @function_20b48(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b48:
  %v0_20b4b = load i32, i32* @ebp, align 4
  %v1_20b4b = add i32 %v0_20b4b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_20b4b = inttoptr i32 %v1_20b4b to i32*
  %v3_20b4b = load i32, i32* %v2_20b4b, align 4
  %v2_20b4e = add i32 %v0_20b4b, -28
  %v3_20b4e = inttoptr i32 %v2_20b4e to i32*
  store i32 %v3_20b4b, i32* %v3_20b4e, align 4
  %v0_20b51 = load i32, i32* @ebp, align 4
  %v1_20b51 = add i32 %v0_20b51, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_20b51 = inttoptr i32 %v1_20b51 to i32*
  %v3_20b51 = load i32, i32* %v2_20b51, align 4
  %v2_20b54 = add i32 %v0_20b51, -32
  %v3_20b54 = inttoptr i32 %v2_20b54 to i32*
  store i32 %v3_20b51, i32* %v3_20b54, align 4
  %v0_20b57 = load i32, i32* @ebp, align 4
  %v1_20b57 = add i32 %v0_20b57, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_20b57 = inttoptr i32 %v1_20b57 to i32*
  %v3_20b57 = load i32, i32* %v2_20b57, align 4
  %v2_20b5a = add i32 %v0_20b57, -36
  %v3_20b5a = inttoptr i32 %v2_20b5a to i32*
  store i32 %v3_20b57, i32* %v3_20b5a, align 4
  %v0_20b5d = load i32, i32* @ebp, align 4
  %v1_20b5d = add i32 %v0_20b5d, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_20b5d = inttoptr i32 %v1_20b5d to i32*
  %v3_20b5d = load i32, i32* %v2_20b5d, align 4
  %v2_20b60 = add i32 %v0_20b5d, -40
  %v3_20b60 = inttoptr i32 %v2_20b60 to i32*
  store i32 %v3_20b5d, i32* %v3_20b60, align 4
  %v0_20b63 = load i32, i32* @ebp, align 4
  %v1_20b63 = add i32 %v0_20b63, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_20b63 = inttoptr i32 %v1_20b63 to i32*
  %v3_20b63 = load i32, i32* %v2_20b63, align 4
  %v2_20b66 = add i32 %v0_20b63, -44
  %v3_20b66 = inttoptr i32 %v2_20b66 to i32*
  store i32 %v3_20b63, i32* %v3_20b66, align 4
  %v1_20b6f = load i32, i32* @ebp, align 4
  %v2_20b6f = add i32 %v1_20b6f, -12
  %v3_20b6f = inttoptr i32 %v2_20b6f to i32*
  store i32 30, i32* %v3_20b6f, align 4
  ret i32 0
}

define i32 @function_20b7b() local_unnamed_addr {
dec_label_pc_20b7b:
  %eax.global-to-local = alloca i32, align 4
  %v15_20b7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_20b7b
}

define i32 @function_20c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c00:
  %v3_20c00 = load i32, i32* @eax, align 8
  ret i32 %v3_20c00
}

define i32 @function_20c18(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c18:
  %v0_20c18 = load i32, i32* @ebp, align 4
  %v1_20c18 = add i32 %v0_20c18, 1
  store i32 %v1_20c18, i32* @ebp, align 4
  %v0_20c1a = load i32, i32* @eax, align 8
  %v1_20c1e = add i32 %v0_20c18, -27
  %v2_20c1e = inttoptr i32 %v1_20c1e to i32*
  %v3_20c1e = load i32, i32* %v2_20c1e, align 4
  %v2_20c24 = call i32 @unknown_415c6(i32 %v3_20c1e, i32 %v0_20c1a)
  %v0_20c29 = load i32, i32* @ebp, align 4
  %v1_20c29 = add i32 %v0_20c29, -28
  %v2_20c29 = inttoptr i32 %v1_20c29 to i32*
  %v3_20c29 = load i32, i32* %v2_20c29, align 4
  store i32 %v3_20c29, i32* @eax, align 8
  %v1_20c2c = add i32 %v0_20c29, -12
  %v2_20c2c = inttoptr i32 %v1_20c2c to i32*
  %v3_20c2c = load i32, i32* %v2_20c2c, align 4
  %v3_20c2f = icmp eq i32 %v3_20c2c, 30
  br i1 %v3_20c2f, label %bb, label %dec_label_pc_20c38

bb:                                               ; preds = %dec_label_pc_20c18
  %v1_20c36 = call i32 @function_20c3d()
  br label %dec_label_pc_20c38

dec_label_pc_20c38:                               ; preds = %bb, %dec_label_pc_20c18
  %v2_20c36 = phi i32 [ %v1_20c36, %bb ], [ %v3_20c29, %dec_label_pc_20c18 ]
  ret i32 %v2_20c36
}

define i32 @function_20c3d() local_unnamed_addr {
dec_label_pc_20c3d:
  %v0_20c42 = load i32, i32* @eax, align 8
  ret i32 %v0_20c42
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorISsEbEC1ERKS1_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20c46:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_20c6f = inttoptr i32 %arg2 to i32*
  %v2_20c6f = load i32, i32* %v1_20c6f, align 4
  store i32 %v2_20c6f, i32* %arg1, align 4
  %v2_20c76 = load i8, i8* %tmp103, align 1
  %v3_20c7c = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_20c7c = inttoptr i32 %v3_20c7c to i8*
  store i8 %v2_20c76, i8* %v4_20c7c, align 1
  store i32 0, i32* @eax, align 8
  %v5_20c89 = call i32 @function_20c90(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_20c89
}

define i32 @function_20c90(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20c90:
  %v0_20c91 = load i32, i32* @eax, align 8
  ret i32 %v0_20c91
}

define i32 @_ZNSt17_Rb_tree_iteratorISsEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20c92:
  %v2_20cac = load i32, i32* %arg1, align 4
  ret i32 %v2_20cac
}

define i32 @function_20cce() local_unnamed_addr {
dec_label_pc_20cce:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20cce = load i32, i32* %ecx.global-to-local, align 4
  %v1_20cce = add i32 %v0_20cce, -1
  store i32 %v1_20cce, i32* %ecx.global-to-local, align 4
  %v0_20cd0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20cd0
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_20cd1:
  %stack_var_-17 = alloca i32, align 4
  %v1_20cee = call i32 @unknown_46733(i32 %arg1)
  %v2_20cf7 = ptrtoint i32* %stack_var_-17 to i32
  %v2_20cfd = call i32 @unknown_416db(i32 %v2_20cf7, i32 %v1_20cee)
  store i32 %v2_20cfd, i32* @eax, align 8
  %v1_20d0c = call i32 @function_20d13()
  ret i32 %v1_20d0c
}

define i32 @function_20d13() local_unnamed_addr {
dec_label_pc_20d13:
  %v0_20d14 = load i32, i32* @eax, align 8
  ret i32 %v0_20d14
}

define i32 @_ZN5boost10shared_ptrISiEC1ISiNS_15program_options6detail12null_deleterEEEPT_T0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20d16:
  %ecx.global-to-local = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg2, 16777216
  %v4_20d3d = sdiv i32 %sext, 16777216
  store i32 %v4_20d3d, i32* %arg1, align 4
  %v1_20d45 = add i32 %tmp115, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_20d48 = load i32, i32* %ecx.global-to-local, align 4
  %sext5 = mul i32 %v0_20d48, 16777216
  %v4_20d56 = sdiv i32 %sext5, 16777216
  %v5_20d56 = call i32 @unknown_467a8(i32 %v1_20d45, i32 %v4_20d3d, i32 %v4_20d56)
  %v5_20d6f = call i32 @function_31551(i32 %tmp115, i32 %v4_20d3d, i32 %v4_20d3d)
  store i32 0, i32* @eax, align 8
  %v1_20d7e = call i32 @function_20d85()
  ret i32 %v1_20d7e

; uselistorder directives
  uselistorder i32 %v4_20d3d, { 3, 2, 1, 0 }
  uselistorder i32 %tmp115, { 1, 0 }
}

define i32 @function_20d85() local_unnamed_addr {
dec_label_pc_20d85:
  %v0_20d86 = load i32, i32* @eax, align 8
  ret i32 %v0_20d86
}

define i32 @_ZN5boost10shared_ptrISiE4swapERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20d88:
  %v2_20db2 = call i32 @unknown_468bb(i32 %arg1, i32 %arg2)
  %v1_20dba = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_20dc0 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_20dca = inttoptr i32 %v1_20dc0 to i32*
  %v3_20dca = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEEC1ERKS5_(i32* %v2_20dca, i32 %v1_20dba)
  store i32 0, i32* @eax, align 8
  %v1_20dd9 = call i32 @function_20de0()
  ret i32 %v1_20dd9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20de0() local_unnamed_addr {
dec_label_pc_20de0:
  %v0_20de1 = load i32, i32* @eax, align 8
  ret i32 %v0_20de1
}

define i32 @_ZNK5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEE5equalERKS6_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20de2:
  %v2_20e02 = load i8, i8* %arg1, align 1
  %v5_20e05 = icmp eq i8 %v2_20e02, 0
  br i1 %v5_20e05, label %dec_label_pc_20e1a, label %dec_label_pc_20e09

dec_label_pc_20e09:                               ; preds = %dec_label_pc_20de2
  %tmp109 = inttoptr i32 %arg2 to i8*
  %v2_20e0c = load i8, i8* %tmp109, align 1
  %v5_20e0f = icmp eq i8 %v2_20e0c, 0
  br i1 %v5_20e0f, label %dec_label_pc_20e1a, label %dec_label_pc_20e1f

dec_label_pc_20e1a:                               ; preds = %dec_label_pc_20e09, %dec_label_pc_20de2
  br label %dec_label_pc_20e1f

dec_label_pc_20e1f:                               ; preds = %dec_label_pc_20e09, %dec_label_pc_20e1a
  %storemerge = phi i32 [ 0, %dec_label_pc_20e1a ], [ 1, %dec_label_pc_20e09 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_20e29 = call i32 @function_20e30()
  ret i32 %v1_20e29

; uselistorder directives
  uselistorder label %dec_label_pc_20e1f, { 1, 0 }
}

define i32 @function_20e30() local_unnamed_addr {
dec_label_pc_20e30:
  %v0_20e31 = load i32, i32* @eax, align 8
  ret i32 %v0_20e31
}

define i32 @_ZN5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEE9incrementEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e32:
  %v1_20e4c = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_20e4c
}

define i32 @function_20e67() local_unnamed_addr {
dec_label_pc_20e67:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20e67 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20e67 = add i32 %v0_20e67, -1
  store i32 %v1_20e67, i32* %ecx.global-to-local, align 4
  %v0_20e69 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20e69
}

define i32 @_ZN5boost13implicit_castIPKNS_15program_options12basic_optionIcEEEET_NS_3mpl8identityIS6_E4typeE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e6a:
  store i32 %arg1, i32* @eax, align 8
  %v2_20e8e = call i32 @function_20e95(i32 %arg1)
  ret i32 %v2_20e8e
}

define i32 @function_20e95(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e95:
  %v0_20e96 = load i32, i32* @eax, align 8
  ret i32 %v0_20e96
}

define i32 @_ZN5boost20iterator_core_access11dereferenceINS_15program_options6detail27common_config_file_iteratorEEENT_9referenceERKS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e97:
  %v1_20eb1 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_20eb7 = call i32 @unknown_46a15(i32 %v1_20eb1)
  store i32 %v1_20eb7, i32* @eax, align 8
  %v1_20ec6 = call i32 @function_20ecd()
  ret i32 %v1_20ec6
}

define i32 @function_20ecd() local_unnamed_addr {
dec_label_pc_20ecd:
  %v0_20ece = load i32, i32* @eax, align 8
  ret i32 %v0_20ece
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ed0:
  %v1_20eed = call i32 @unknown_46a7e(i32 %arg1)
  %v1_20ef5 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_20ef5 = inttoptr i32 %v1_20ef5 to i32*
  store i32 0, i32* %v2_20ef5, align 4
  %v1_20eff = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_20eff = inttoptr i32 %v1_20eff to i32*
  store i32 0, i32* %v2_20eff, align 4
  %v1_20f09 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_20f09 = inttoptr i32 %v1_20f09 to i32*
  store i32 0, i32* %v2_20f09, align 4
  %v1_20f13 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_20f13 = inttoptr i32 %v1_20f13 to i32*
  store i32 0, i32* %v2_20f13, align 4
  %v1_20f1d = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_20f1d = inttoptr i32 %v1_20f1d to i32*
  store i32 0, i32* %v2_20f1d, align 4
  %v1_20f2a = call i32 @unknown_46ab4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_20f39 = call i32 @function_20f40()
  ret i32 %v1_20f39

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_20f40() local_unnamed_addr {
dec_label_pc_20f40:
  %v0_20f41 = load i32, i32* @eax, align 8
  ret i32 %v0_20f41
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI8CNetAddrEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f42:
  store i32 0, i32* @eax, align 8
  %v2_20f63 = call i32 @function_20f6a(i32 %arg1)
  ret i32 %v2_20f63
}

define i32 @function_20f6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f6a:
  %v0_20f6b = load i32, i32* @eax, align 8
  ret i32 %v0_20f6b
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f6c:
  %v1_20f86 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_20f86 = inttoptr i32 %v1_20f86 to i32*
  %v3_20f86 = load i32, i32* %v2_20f86, align 4
  store i32 %v3_20f86, i32* @eax, align 8
  %v2_20f93 = call i32 @function_20f9a(i32 %arg1)
  ret i32 %v2_20f93
}

define i32 @function_20f9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f9a:
  %v0_20f9b = load i32, i32* @eax, align 8
  ret i32 %v0_20f9b
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f9c:
  %v1_20fb6 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_20fb6 = inttoptr i32 %v1_20fb6 to i32*
  %v3_20fb6 = load i32, i32* %v2_20fb6, align 4
  store i32 %v3_20fb6, i32* @eax, align 8
  %v2_20fc3 = call i32 @function_20fca(i32 %arg1)
  ret i32 %v2_20fc3
}

define i32 @function_20fca(i32 %arg1) local_unnamed_addr {
dec_label_pc_20fca:
  %v0_20fcb = load i32, i32* @eax, align 8
  ret i32 %v0_20fcb
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20fcc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v0_20fcf = load i32, i32* %ebx.global-to-local, align 4
  %v1_20fed = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_20ff3 = call i32 @unknown_46c8b(i32 %v1_20fed)
  store i32 %v2_20ff3, i32* %ebx.global-to-local, align 4
  %v2_20ffa = ptrtoint i32* %stack_var_-17 to i32
  %v3_21007 = call i32 @unknown_46c06(i32 %v2_20ffa, i32 %arg1)
  %v3_21019 = call i32 @unknown_46ce2(i32 %v2_20ffa, i32 %v2_20ff3)
  %v1_21024 = call i32 @unknown_46c56(i32 %v2_20ffa)
  %v3_21036 = call i32 @unknown_46d1e(i32 %arg1, i32 %arg2)
  store i32 %v0_20fcf, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21052:
  %v1_2106c = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_2106c, i32* @eax, align 8
  %v2_21079 = call i32 @function_21080(i32 %arg1)
  ret i32 %v2_21079
}

define i32 @function_21080(i32 %arg1) local_unnamed_addr {
dec_label_pc_21080:
  %v0_21081 = load i32, i32* @eax, align 8
  ret i32 %v0_21081
}

define i32 @_ZNKSt9_IdentityI8CNetAddrEclERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21082:
  store i32 %arg2, i32* @eax, align 8
  %v3_210ac = call i32 @function_210b3(i32 %arg2, i32 %arg1)
  ret i32 %v3_210ac
}

define i32 @function_210b3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_210b3:
  %v0_210b4 = load i32, i32* @eax, align 8
  ret i32 %v0_210b4
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt13_Rb_tree_nodeIS0_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_210b5:
  %stack_var_-17 = alloca i32, align 4
  %v1_210d2 = call i32 @unknown_46e51(i32 %arg1)
  %v2_210db = ptrtoint i32* %stack_var_-17 to i32
  %v2_210e1 = call i32 @unknown_42137(i32 %v2_210db, i32 %v1_210d2)
  store i32 %v2_210e1, i32* @eax, align 8
  %v1_210f0 = call i32 @function_210f7()
  ret i32 %v1_210f0
}

define i32 @function_210f7() local_unnamed_addr {
dec_label_pc_210f7:
  %v0_210f8 = load i32, i32* @eax, align 8
  ret i32 %v0_210f8
}

define i32 @_ZNKSt4lessI8CNetAddrEclERKS0_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_210fa:
  ret i32 %arg2
}

define i32 @function_2113f() local_unnamed_addr {
dec_label_pc_2113f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2113f = load i32, i32* %ecx.global-to-local, align 4
  %v1_2113f = add i32 %v0_2113f, -1
  store i32 %v1_2113f, i32* %ecx.global-to-local, align 4
  %v0_21141 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21141
}

define i32 @_ZNSt17_Rb_tree_iteratorI8CNetAddrEC1EPSt13_Rb_tree_nodeIS0_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21142:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_21171 = call i32 @function_21178(i32 %arg2, i32 %tmp101)
  ret i32 %v3_21171
}

define i32 @function_21178(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21178:
  %v0_21179 = load i32, i32* @eax, align 8
  ret i32 %v0_21179
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2117a:
  %v1_2119a = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2119a = inttoptr i32 %v1_2119a to i32*
  %v3_2119a = load i32, i32* %v2_2119a, align 4
  %v2_211a7 = call i32 @unknown_422bc(i32 %arg1, i32 %v3_2119a)
  store i32 %arg1, i32* @eax, align 8
  %v1_211b9 = call i32 @function_211c0()
  ret i32 %v1_211b9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_211c0() local_unnamed_addr {
dec_label_pc_211c0:
  %v0_211c1 = load i32, i32* @eax, align 8
  ret i32 %v0_211c1
}

define i32 @_ZNKSt17_Rb_tree_iteratorI8CNetAddrEeqERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_211c4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_211e4 = load i32, i32* %arg1, align 4
  %v1_211e9 = inttoptr i32 %arg2 to i32*
  %v2_211e9 = load i32, i32* %v1_211e9, align 4
  %v12_211eb = icmp eq i32 %v2_211e4, %v2_211e9
  %v1_211ed = zext i1 %v12_211eb to i32
  %v3_211ed = and i32 %v2_211e9, -256
  %v4_211ed = or i32 %v1_211ed, %v3_211ed
  store i32 %v4_211ed, i32* @eax, align 8
  %v3_211fa = call i32 @function_21201(i32 %arg2, i32 %tmp101)
  ret i32 %v3_211fa

; uselistorder directives
  uselistorder i32 %v2_211e9, { 1, 0 }
}

define i32 @function_21201(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21201:
  %v0_21202 = load i32, i32* @eax, align 8
  ret i32 %v0_21202
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21204:
  %stack_var_-18 = alloca i32, align 4
  %v10_21234 = icmp eq i32 %arg3, 0
  %v1_21238 = icmp eq i1 %v10_21234, false
  br i1 %v1_21238, label %dec_label_pc_2128c, label %dec_label_pc_2123a

dec_label_pc_2123a:                               ; preds = %dec_label_pc_21204
  %v1_21240 = call i32 @unknown_42256(i32 %arg2)
  %v15_21245 = icmp eq i32 %v1_21240, %arg4
  br i1 %v15_21245, label %dec_label_pc_2128c, label %dec_label_pc_2124a

dec_label_pc_2124a:                               ; preds = %dec_label_pc_2123a
  %v1_21250 = call i32 @unknown_42595(i32 %arg4)
  %v2_2125e = ptrtoint i32* %stack_var_-18 to i32
  %v2_21264 = call i32 @unknown_42286(i32 %v2_2125e, i32 %arg5)
  %v3_21277 = call i32 @unknown_422fe(i32 %arg2, i32 %v2_21264, i32 %v1_21250)
  %v4_2127c = trunc i32 %v3_21277 to i8
  %v5_2127c = icmp ne i8 %v4_2127c, 0
  %phitmp = zext i1 %v5_2127c to i32
  br label %dec_label_pc_2128c

dec_label_pc_2128c:                               ; preds = %dec_label_pc_2124a, %dec_label_pc_21204, %dec_label_pc_2123a
  %storemerge = phi i32 [ 1, %dec_label_pc_2123a ], [ 1, %dec_label_pc_21204 ], [ %phitmp, %dec_label_pc_2124a ]
  %v2_2129c = call i32 @unknown_46fd0(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2128c, { 0, 2, 1 }
}

define i32 @function_21304(i32 %arg1) local_unnamed_addr {
dec_label_pc_21304:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorI8CNetAddrEbEC1ERKS2_RKb(i32 %arg1) local_unnamed_addr {
dec_label_pc_21306:
  ret i32 %arg1
}

define i32 @function_21312(i32 %arg1) local_unnamed_addr {
dec_label_pc_21312:
  %v0_21312 = load i32, i32* @ebp, align 4
  %v1_21312 = add i32 %v0_21312, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_21312 = inttoptr i32 %v1_21312 to i32*
  %v3_21312 = load i32, i32* %v2_21312, align 4
  %v2_21315 = add i32 %v0_21312, -32
  %v3_21315 = inttoptr i32 %v2_21315 to i32*
  store i32 %v3_21312, i32* %v3_21315, align 4
  %v0_21318 = load i32, i32* @ebp, align 4
  %v1_21318 = add i32 %v0_21318, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_21318 = inttoptr i32 %v1_21318 to i32*
  %v3_21318 = load i32, i32* %v2_21318, align 4
  %v2_2131b = add i32 %v0_21318, -36
  %v3_2131b = inttoptr i32 %v2_2131b to i32*
  store i32 %v3_21318, i32* %v3_2131b, align 4
  %v1_21324 = load i32, i32* @ebp, align 4
  %v2_21324 = add i32 %v1_21324, -12
  %v3_21324 = inttoptr i32 %v2_21324 to i32*
  store i32 30, i32* %v3_21324, align 4
  %v0_21329 = load i32, i32* @ebp, align 4
  %v1_21329 = add i32 %v0_21329, -28
  %v2_21329 = inttoptr i32 %v1_21329 to i32*
  %v3_21329 = load i32, i32* %v2_21329, align 4
  %v1_2132c = add i32 %v0_21329, -32
  %v2_2132c = inttoptr i32 %v1_2132c to i32*
  %v3_2132c = load i32, i32* %v2_2132c, align 4
  %v1_2132f = inttoptr i32 %v3_2132c to i32*
  %v2_2132f = load i32, i32* %v1_2132f, align 4
  %v2_21331 = inttoptr i32 %v3_21329 to i32*
  store i32 %v2_2132f, i32* %v2_21331, align 4
  %v0_21333 = load i32, i32* @ebp, align 4
  %v1_21333 = add i32 %v0_21333, -36
  %v2_21333 = inttoptr i32 %v1_21333 to i32*
  %v3_21333 = load i32, i32* %v2_21333, align 4
  %v1_21336 = inttoptr i32 %v3_21333 to i8*
  %v2_21336 = load i8, i8* %v1_21336, align 1
  %v1_21339 = add i32 %v0_21333, -28
  %v2_21339 = inttoptr i32 %v1_21339 to i32*
  %v3_21339 = load i32, i32* %v2_21339, align 4
  %v3_2133c = add i32 %v3_21339, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_2133c = inttoptr i32 %v3_2133c to i8*
  store i8 %v2_21336, i8* %v4_2133c, align 1
  %v0_2133f = load i32, i32* @ebp, align 4
  %v1_2133f = add i32 %v0_2133f, -12
  %v2_2133f = inttoptr i32 %v1_2133f to i32*
  %v3_2133f = load i32, i32* %v2_2133f, align 4
  %v2_21342 = xor i32 %v3_2133f, 30
  %v3_21342 = icmp eq i32 %v2_21342, 0
  store i32 %v2_21342, i32* @eax, align 8
  br i1 %v3_21342, label %bb, label %dec_label_pc_2134b

bb:                                               ; preds = %dec_label_pc_21312
  %v1_21349 = call i32 @function_21350()
  br label %dec_label_pc_2134b

dec_label_pc_2134b:                               ; preds = %bb, %dec_label_pc_21312
  %v2_21349 = phi i32 [ %v1_21349, %bb ], [ %v2_21342, %dec_label_pc_21312 ]
  ret i32 %v2_21349
}

define i32 @function_21350() local_unnamed_addr {
dec_label_pc_21350:
  %v0_21351 = load i32, i32* @eax, align 8
  ret i32 %v0_21351
}

define i32 @_ZNSt17_Rb_tree_iteratorI8CNetAddrEmmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21352:
  ret i32 %arg1
}

define i32 @function_2135b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2135b:
  %v0_2135b = load i32, i32* @eax, align 8
  %v1_2135b = load i32, i32* @ebp, align 4
  %v2_2135b = add i32 %v1_2135b, -28
  %v3_2135b = inttoptr i32 %v2_2135b to i32*
  store i32 %v0_2135b, i32* %v3_2135b, align 4
  %v1_21364 = load i32, i32* @ebp, align 4
  %v2_21364 = add i32 %v1_21364, -12
  %v3_21364 = inttoptr i32 %v2_21364 to i32*
  store i32 30, i32* %v3_21364, align 4
  %v0_21369 = load i32, i32* @ebp, align 4
  %v1_21369 = add i32 %v0_21369, -28
  %v2_21369 = inttoptr i32 %v1_21369 to i32*
  %v3_21369 = load i32, i32* %v2_21369, align 4
  %v1_2136c = inttoptr i32 %v3_21369 to i32*
  %v2_2136c = load i32, i32* %v1_2136c, align 4
  ret i32 %v2_2136c
}

define i32 @function_2138e() local_unnamed_addr {
dec_label_pc_2138e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2138e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2138e = add i32 %v0_2138e, -1
  store i32 %v1_2138e, i32* %ecx.global-to-local, align 4
  %v0_21390 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21390
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_21391:
  %stack_var_-17 = alloca i32, align 4
  %v1_213ae = call i32 @unknown_471e8(i32 %arg1)
  %v2_213b7 = ptrtoint i32* %stack_var_-17 to i32
  %v2_213bd = call i32 @unknown_42413(i32 %v2_213b7, i32 %v1_213ae)
  store i32 %v2_213bd, i32* @eax, align 8
  %v1_213cc = call i32 @function_213d3()
  ret i32 %v1_213cc
}

define i32 @function_213d3() local_unnamed_addr {
dec_label_pc_213d3:
  %v0_213d4 = load i32, i32* @eax, align 8
  ret i32 %v0_213d4
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_213d6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_213f6 = inttoptr i32 %arg2 to i32*
  %v2_213f6 = load i32, i32* %v1_213f6, align 4
  store i32 %v2_213f6, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_21407 = call i32 @function_2140e(i32 %arg2, i32 %tmp101)
  ret i32 %v3_21407
}

define i32 @function_2140e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2140e:
  %v0_2140f = load i32, i32* @eax, align 8
  ret i32 %v0_2140f
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21410:
  %stack_var_-20 = alloca i32, align 4
  %v2_21436 = load i32, i32* %arg2, align 4
  %v1_2143b = inttoptr i32 %arg3 to i32*
  %v2_2143b = load i32, i32* %v1_2143b, align 4
  %v2_2143d = shl i32 %v2_2143b, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_21440 = add i32 %v2_2143d, %v2_21436
  store i32 %v2_21440, i32* %stack_var_-20, align 4
  %v2_21445 = ptrtoint i32* %stack_var_-20 to i32
  %v2_21452 = call i32 @unknown_427e6(i32 %arg1, i32 %v2_21445)
  store i32 %arg1, i32* @eax, align 8
  %v1_21464 = call i32 @function_2146b()
  ret i32 %v1_21464

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2146b() local_unnamed_addr {
dec_label_pc_2146b:
  %v0_2146c = load i32, i32* @eax, align 8
  ret i32 %v0_2146c
}

define i32 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2146f:
  %v1_21493 = call i32 @unknown_42fb9(i32 %arg1)
  %v1_21498 = inttoptr i32 %v1_21493 to i32*
  %v2_21498 = load i32, i32* %v1_21498, align 4
  %v1_214a0 = call i32 @unknown_42fb9(i32 %arg2)
  %v1_214a5 = inttoptr i32 %v1_214a0 to i32*
  %v2_214a5 = load i32, i32* %v1_214a5, align 4
  %v12_214a7 = icmp eq i32 %v2_21498, %v2_214a5
  %v1_214a9 = icmp eq i1 %v12_214a7, false
  %v2_214a9 = zext i1 %v1_214a9 to i32
  %v4_214a9 = and i32 %v2_214a5, -256
  %v5_214a9 = or i32 %v2_214a9, %v4_214a9
  store i32 %v5_214a9, i32* @eax, align 8
  %v1_214b6 = call i32 @function_214bd()
  ret i32 %v1_214b6

; uselistorder directives
  uselistorder i32 %v2_214a5, { 1, 0 }
  uselistorder i32 (i32)* @unknown_42fb9, { 1, 0 }
}

define i32 @function_214bd() local_unnamed_addr {
dec_label_pc_214bd:
  %v0_214c2 = load i32, i32* @eax, align 8
  ret i32 %v0_214c2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxE7destroyEPx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_214c4:
  store i32 0, i32* @eax, align 8
  %v3_214eb = call i32 @function_214f2(i32 %arg2, i32 %arg1)
  ret i32 %v3_214eb
}

define i32 @function_214f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_214f2:
  %v0_214f3 = load i32, i32* @eax, align 8
  ret i32 %v0_214f3
}

define i32 @_ZNSt6vectorIxSaIxEE6insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEjRKx(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_214f4:
  %v8_21538 = call i32 @unknown_4737c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_21547 = call i32 @function_2154e()
  ret i32 %v1_21547

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2154e() local_unnamed_addr {
dec_label_pc_2154e:
  %v0_2154f = load i32, i32* @eax, align 8
  ret i32 %v0_2154f
}

define i32 @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21550:
  %v1_21573 = call i32 @unknown_3d5ba(i32 %arg1)
  %v1_2157b = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2157b = inttoptr i32 %v1_2157b to i32*
  %v3_2157b = load i32, i32* %v2_2157b, align 4
  %v3_2158c = call i32 @unknown_3d5e7(i32 %arg2, i32 %v3_2157b, i32 %v1_21573)
  store i32 %arg2, i32* %v2_2157b, align 4
  store i32 0, i32* @eax, align 8
  %v1_215a4 = call i32 @function_215ab()
  ret i32 %v1_215a4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_215ab() local_unnamed_addr {
dec_label_pc_215ab:
  %v0_215ac = load i32, i32* @eax, align 8
  ret i32 %v0_215ac
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215ad:
  %v2_215d7 = call i32 @unknown_4788a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_215ec = call i32 @function_215f3()
  ret i32 %v1_215ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_215f3() local_unnamed_addr {
dec_label_pc_215f3:
  %v0_215f4 = load i32, i32* @eax, align 8
  ret i32 %v0_215f4
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_215f7:
  %stack_var_-20 = alloca i32, align 4
  %v1_21628 = call i32 @unknown_47911(i32 %arg4)
  %v1_21635 = call i32 @unknown_47911(i32 %arg3)
  %v1_21642 = call i32 @unknown_47911(i32 %arg2)
  %v3_21652 = call i32 @unknown_47946(i32 %v1_21642, i32 %v1_21635, i32 %v1_21628)
  store i32 %v3_21652, i32* %stack_var_-20, align 4
  %v2_2165a = ptrtoint i32* %stack_var_-20 to i32
  %v2_21667 = call i32 @unknown_429cd(i32 %arg1, i32 %v2_2165a)
  store i32 %arg1, i32* @eax, align 8
  %v1_21679 = call i32 @function_21680()
  ret i32 %v1_21679

; uselistorder directives
  uselistorder i32 (i32)* @unknown_47911, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21680() local_unnamed_addr {
dec_label_pc_21680:
  %v0_21686 = load i32, i32* @eax, align 8
  ret i32 %v0_21686
}

define i32 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21689:
  %v1_216ad = call i32 @unknown_431d3(i32 %arg1)
  %v1_216b2 = inttoptr i32 %v1_216ad to i32*
  %v2_216b2 = load i32, i32* %v1_216b2, align 4
  %v1_216bc = call i32 @unknown_431d3(i32 %arg2)
  %v1_216c1 = inttoptr i32 %v1_216bc to i32*
  %v2_216c1 = load i32, i32* %v1_216c1, align 4
  %v2_216c5 = sub i32 %v2_216b2, %v2_216c1
  %v2_216c9 = ashr i32 %v2_216c5, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v2_216c9, i32* @eax, align 8
  %v1_216d6 = call i32 @function_216dd()
  ret i32 %v1_216d6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_431d3, { 1, 0 }
}

define i32 @function_216dd() local_unnamed_addr {
dec_label_pc_216dd:
  %v0_216e2 = load i32, i32* @eax, align 8
  ret i32 %v0_216e2
}

define i32 @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEiEvT_S7_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_216e3:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v16_216e6 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_21768 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2176f = ptrtoint i32* %stack_var_-36 to i32
  %v2_2172d = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_21768

dec_label_pc_21708:                               ; preds = %dec_label_pc_21768
  %v10_21708 = icmp eq i32 %stack_var_-40.0, 0
  %v1_2170c = icmp eq i1 %v10_21708, false
  br i1 %v1_2170c, label %dec_label_pc_21729, label %dec_label_pc_2170e

dec_label_pc_2170e:                               ; preds = %dec_label_pc_21708
  %v3_2170e = load i32, i32* %stack_var_-36, align 4
  %v1_21711 = load i32, i32* @esp, align 4
  %v2_21711 = add i32 %v1_21711, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_21711 = inttoptr i32 %v2_21711 to i32*
  store i32 %v3_2170e, i32* %v3_21711, align 4
  %v3_21715 = load i32, i32* %stack_var_-36, align 4
  %v1_21718 = load i32, i32* @esp, align 4
  %v2_21718 = add i32 %v1_21718, 4
  %v3_21718 = inttoptr i32 %v2_21718 to i32*
  store i32 %v3_21715, i32* %v3_21718, align 4
  %v3_2171c = load i32, i32* %stack_var_-32, align 4
  %v1_2171f = load i32, i32* @esp, align 4
  %v2_2171f = inttoptr i32 %v1_2171f to i32*
  store i32 %v3_2171c, i32* %v2_2171f, align 4
  %v0_21722 = call i32 @unknown_47a85()
  br label %dec_label_pc_21784

dec_label_pc_21729:                               ; preds = %dec_label_pc_21708
  %v4_21729 = add i32 %stack_var_-40.0, -1
  %v3_21730 = load i32, i32* %stack_var_-36, align 4
  %v1_21733 = load i32, i32* @esp, align 4
  %v2_21733 = add i32 %v1_21733, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_21733 = inttoptr i32 %v2_21733 to i32*
  store i32 %v3_21730, i32* %v3_21733, align 4
  %v3_21737 = load i32, i32* %stack_var_-32, align 4
  %v1_2173a = load i32, i32* @esp, align 4
  %v2_2173a = add i32 %v1_2173a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2173a = inttoptr i32 %v2_2173a to i32*
  store i32 %v3_21737, i32* %v3_2173a, align 4
  %v1_2173e = load i32, i32* @esp, align 4
  %v2_2173e = inttoptr i32 %v1_2173e to i32*
  store i32 %v2_2172d, i32* %v2_2173e, align 4
  %v1_21741 = call i32 @unknown_47ae6(i32 %v4_21729)
  %v0_21746 = load i32, i32* @esp, align 4
  %v1_21746 = sub i32 %v0_21746, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2174c = add i32 %v1_21746, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2174c = inttoptr i32 %v2_2174c to i32*
  store i32 %v4_21729, i32* %v3_2174c, align 4
  %v3_21750 = load i32, i32* %stack_var_-36, align 4
  %v1_21753 = load i32, i32* @esp, align 4
  %v2_21753 = add i32 %v1_21753, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_21753 = inttoptr i32 %v2_21753 to i32*
  store i32 %v3_21750, i32* %v3_21753, align 4
  %v3_21757 = load i32, i32* %stack_var_-20, align 4
  %v1_2175a = load i32, i32* @esp, align 4
  %v2_2175a = inttoptr i32 %v1_2175a to i32*
  store i32 %v3_21757, i32* %v2_2175a, align 4
  %v1_2175d = load i32, i32* %stack_var_-36, align 4
  %v2_2175d = call i32 @unknown_42dc6(i32 %v4_21729, i32 %v1_2175d)
  %v3_21762 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_21762, i32* %stack_var_-36, align 4
  %v1_2176b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_21768

dec_label_pc_21768:                               ; preds = %dec_label_pc_21729, %dec_label_pc_216e3
  %v1_2176b = phi i32 [ %v16_216e6, %dec_label_pc_216e3 ], [ %v1_2176b.pre, %dec_label_pc_21729 ]
  %stack_var_-40.0 = phi i32 [ %arg3, %dec_label_pc_216e3 ], [ %v4_21729, %dec_label_pc_21729 ]
  %v2_2176b = add i32 %v1_2176b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2176b = inttoptr i32 %v2_2176b to i32*
  store i32 %v2_21768, i32* %v3_2176b, align 4
  %v1_21772 = load i32, i32* @esp, align 4
  %v2_21772 = inttoptr i32 %v1_21772 to i32*
  store i32 %v2_2176f, i32* %v2_21772, align 4
  %v0_21775 = call i32 @unknown_42d6c()
  %v1_2177a = add i32 %v0_21775, -16
  %tmp109 = sub i32 15, %v0_21775
  %v7_2177a = and i32 %tmp109, %v0_21775
  %v8_2177a = icmp slt i32 %v7_2177a, 0
  %v9_2177a = icmp eq i32 %v1_2177a, 0
  %v10_2177a = icmp slt i32 %v1_2177a, 0
  %v3_2177d = icmp eq i1 %v10_2177a, %v8_2177a
  %v4_2177d = icmp eq i1 %v9_2177a, false
  %v5_2177d = icmp eq i1 %v3_2177d, %v4_2177d
  %v5_21780 = icmp eq i1 %v5_2177d, false
  %v1_21782 = icmp eq i1 %v5_21780, false
  br i1 %v1_21782, label %dec_label_pc_21708, label %dec_label_pc_21784

dec_label_pc_21784:                               ; preds = %dec_label_pc_21768, %dec_label_pc_2170e
  store i32 0, i32* @eax, align 8
  %v1_2178e = call i32 @function_21795()
  ret i32 %v1_2178e

; uselistorder directives
  uselistorder i32 %v1_2177a, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-36, { 2, 0, 3, 4, 5, 6, 1, 7 }
}

define i32 @function_21795() local_unnamed_addr {
dec_label_pc_21795:
  %v0_21796 = load i32, i32* @eax, align 8
  ret i32 %v0_21796
}

define i32 @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21797:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v2_217b4 = ptrtoint i32* %stack_var_-48 to i32
  %v2_217bb = ptrtoint i32* %stack_var_-52 to i32
  %v2_217c1 = call i32 @unknown_42e20(i32 %v2_217bb, i32 %v2_217b4)
  %v1_217c6 = add i32 %v2_217c1, -16
  %tmp115 = sub i32 15, %v2_217c1
  %v7_217c6 = and i32 %tmp115, %v2_217c1
  %v8_217c6 = icmp slt i32 %v7_217c6, 0
  %v9_217c6 = icmp eq i32 %v1_217c6, 0
  %v10_217c6 = icmp slt i32 %v1_217c6, 0
  %v3_217c9 = icmp eq i1 %v10_217c6, %v8_217c6
  %v4_217c9 = icmp eq i1 %v9_217c6, false
  %v5_217c9 = icmp eq i1 %v3_217c9, %v4_217c9
  %v5_217cc = icmp eq i1 %v5_217c9, false
  br i1 %v5_217cc, label %dec_label_pc_2183c, label %dec_label_pc_217d0

dec_label_pc_217d0:                               ; preds = %dec_label_pc_21797
  store i8* bitcast (i8** @global_var_10.2429 to i8*), i8** %stack_var_-32, align 4
  %v2_217d7 = ptrtoint i32* %stack_var_-28 to i32
  %v2_217da = ptrtoint i8** %stack_var_-32 to i32
  %v3_217eb = call i32 @unknown_42ba7(i32 %v2_217d7, i32 %v2_217b4, i32 %v2_217da)
  %v3_217f3 = load i32, i32* %stack_var_-28, align 4
  %v3_217fa = load i32, i32* %stack_var_-48, align 4
  %v2_21800 = call i32 @unknown_47c9f(i32 %v3_217fa, i32 %v3_217f3)
  store i8* bitcast (i8** @global_var_10.2429 to i8*), i8** %stack_var_-24, align 4
  %v2_2180c = ptrtoint i32* %stack_var_-20 to i32
  %v2_2180f = ptrtoint i8** %stack_var_-24 to i32
  %v3_21820 = call i32 @unknown_42ba7(i32 %v2_2180c, i32 %v2_217b4, i32 %v2_2180f)
  %v3_21828 = load i32, i32* %stack_var_-52, align 4
  %v3_2182f = load i32, i32* %stack_var_-20, align 4
  %v2_21835 = call i32 @unknown_47dfb(i32 %v3_2182f, i32 %v3_21828)
  br label %dec_label_pc_2184e

dec_label_pc_2183c:                               ; preds = %dec_label_pc_21797
  %v3_2183c = load i32, i32* %stack_var_-52, align 4
  %v3_21843 = load i32, i32* %stack_var_-48, align 4
  %v2_21849 = call i32 @unknown_47c9f(i32 %v3_21843, i32 %v3_2183c)
  br label %dec_label_pc_2184e

dec_label_pc_2184e:                               ; preds = %dec_label_pc_2183c, %dec_label_pc_217d0
  store i32 0, i32* @eax, align 8
  %v1_21858 = call i32 @function_2185f()
  ret i32 %v1_21858

; uselistorder directives
  uselistorder i32 %v1_217c6, { 1, 0 }
  uselistorder i8** %stack_var_-32, { 1, 0 }
  uselistorder i8** %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_47c9f, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_42ba7, { 1, 0 }
}

define i32 @function_2185f() local_unnamed_addr {
dec_label_pc_2185f:
  %v0_21860 = load i32, i32* @eax, align 8
  ret i32 %v0_21860
}

define i32 @_ZNSaIxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21862:
  %v1_2187f = call i32 @unknown_47f2a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2188e = call i32 @function_21895()
  ret i32 %v1_2188e
}

define i32 @function_21895() local_unnamed_addr {
dec_label_pc_21895:
  %v0_21896 = load i32, i32* @eax, align 8
  ret i32 %v0_21896
}

define i32 @_ZSt8_DestroyIPxEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21897:
  %v2_218c1 = call i32 @unknown_47f89(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_218d0 = call i32 @function_218d7()
  ret i32 %v1_218d0
}

define i32 @function_218d7() local_unnamed_addr {
dec_label_pc_218d7:
  %v0_218d8 = load i32, i32* @eax, align 8
  ret i32 %v0_218d8
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_218da:
  ret i32 %arg1
}

define i32 @function_21904() local_unnamed_addr {
dec_label_pc_21904:
  %v0_21904 = call i32 @unknown_47ffc()
  %v0_21909 = load i32, i32* @ebp, align 4
  %v1_21909 = add i32 %v0_21909, -28
  %v2_21909 = inttoptr i32 %v1_21909 to i32*
  %v3_21909 = load i32, i32* %v2_21909, align 4
  %v1_2190c = inttoptr i32 %v3_21909 to i32*
  store i32 0, i32* %v1_2190c, align 4
  %v0_21912 = load i32, i32* @ebp, align 4
  %v1_21912 = add i32 %v0_21912, -28
  %v2_21912 = inttoptr i32 %v1_21912 to i32*
  %v3_21912 = load i32, i32* %v2_21912, align 4
  %v1_21915 = add i32 %v3_21912, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_21915 = inttoptr i32 %v1_21915 to i32*
  store i32 0, i32* %v2_21915, align 4
  %v0_2191c = load i32, i32* @ebp, align 4
  %v1_2191c = add i32 %v0_2191c, -28
  %v2_2191c = inttoptr i32 %v1_2191c to i32*
  %v3_2191c = load i32, i32* %v2_2191c, align 4
  %v1_2191f = add i32 %v3_2191c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2191f = inttoptr i32 %v1_2191f to i32*
  store i32 0, i32* %v2_2191f, align 4
  %v0_21926 = load i32, i32* @ebp, align 4
  %v1_21926 = add i32 %v0_21926, -12
  %v2_21926 = inttoptr i32 %v1_21926 to i32*
  %v3_21926 = load i32, i32* %v2_21926, align 4
  %v2_21929 = xor i32 %v3_21926, 30
  %v3_21929 = icmp eq i32 %v2_21929, 0
  store i32 %v2_21929, i32* @eax, align 8
  br i1 %v3_21929, label %bb, label %dec_label_pc_21932

bb:                                               ; preds = %dec_label_pc_21904
  %v1_21930 = call i32 @function_21937()
  br label %dec_label_pc_21932

dec_label_pc_21932:                               ; preds = %bb, %dec_label_pc_21904
  %v2_21930 = phi i32 [ %v1_21930, %bb ], [ %v2_21929, %dec_label_pc_21904 ]
  ret i32 %v2_21930
}

define i32 @function_21937() local_unnamed_addr {
dec_label_pc_21937:
  %v0_21938 = load i32, i32* @eax, align 8
  ret i32 %v0_21938
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2193a:
  %v10_21957 = icmp eq i32 %arg2, 0
  br i1 %v10_21957, label %dec_label_pc_2197e, label %dec_label_pc_2195d

dec_label_pc_2195d:                               ; preds = %dec_label_pc_2193a
  %v3_21972 = call i32 @unknown_4809e(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_2197e

dec_label_pc_2197e:                               ; preds = %dec_label_pc_2193a, %dec_label_pc_2195d
  %storemerge = phi i32 [ %v3_21972, %dec_label_pc_2195d ], [ 0, %dec_label_pc_2193a ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_21988 = call i32 @function_2198f()
  ret i32 %v1_21988

; uselistorder directives
  uselistorder label %dec_label_pc_2197e, { 1, 0 }
}

define i32 @function_2198f() local_unnamed_addr {
dec_label_pc_2198f:
  %v0_21990 = load i32, i32* @eax, align 8
  ret i32 %v0_21990
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21992:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_219b2 = inttoptr i32 %arg2 to i32*
  %v2_219b2 = load i32, i32* %v1_219b2, align 4
  store i32 %v2_219b2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_219c3 = call i32 @function_219ca(i32 %arg2, i32 %tmp101)
  ret i32 %v3_219c3
}

define i32 @function_219ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_219ca:
  %v0_219cb = load i32, i32* @eax, align 8
  ret i32 %v0_219cb
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_219cc:
  ret i32 30
}

define i32 @function_219ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_219ec:
  %v0_219ef = load i32, i32* @ebp, align 4
  %v1_219ef = add i32 %v0_219ef, -36
  %v2_219ef = inttoptr i32 %v1_219ef to i32*
  %v3_219ef = load i32, i32* %v2_219ef, align 4
  %v1_219f6 = add i32 %v0_219ef, -32
  %v2_219f6 = inttoptr i32 %v1_219f6 to i32*
  %v3_219f6 = load i32, i32* %v2_219f6, align 4
  %v1_219fd = add i32 %v0_219ef, -28
  %v2_219fd = inttoptr i32 %v1_219fd to i32*
  %v3_219fd = load i32, i32* %v2_219fd, align 4
  %v3_21a03 = call i32 @unknown_4818e(i32 %v3_219fd, i32 %v3_219f6, i32 %v3_219ef)
  store i32 %v3_21a03, i32* @eax, align 8
  %v0_21a08 = load i32, i32* @ebp, align 4
  %v1_21a08 = add i32 %v0_21a08, -12
  %v2_21a08 = inttoptr i32 %v1_21a08 to i32*
  %v3_21a08 = load i32, i32* %v2_21a08, align 4
  %v3_21a0b = icmp eq i32 %v3_21a08, 30
  br i1 %v3_21a0b, label %bb, label %dec_label_pc_21a14

bb:                                               ; preds = %dec_label_pc_219ec
  %v1_21a12 = call i32 @function_21a19()
  br label %dec_label_pc_21a14

dec_label_pc_21a14:                               ; preds = %bb, %dec_label_pc_219ec
  %v2_21a12 = phi i32 [ %v1_21a12, %bb ], [ %v3_21a03, %dec_label_pc_219ec ]
  ret i32 %v2_21a12
}

define i32 @function_21a19() local_unnamed_addr {
dec_label_pc_21a19:
  %v0_21a1a = load i32, i32* @eax, align 8
  ret i32 %v0_21a1a
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorIxSaIxEEEC1ERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a1c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_21a4b = call i32 @function_21a52(i32 %arg2, i32 %tmp101)
  ret i32 %v3_21a4b
}

define i32 @function_21a52(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a52:
  %v0_21a53 = load i32, i32* @eax, align 8
  ret i32 %v0_21a53
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorIxSaIxEEEcvRS4_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a54:
  ret i32 %arg1
}

define i32 @function_21a64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a64:
  %v2_21a64 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_21a64 = load i32, i32* @eax, align 8
  %v4_21a64 = trunc i32 %v3_21a64 to i8
  %v5_21a64 = add i8 %v4_21a64, %v2_21a64
  %v21_21a64 = inttoptr i32 %v3_21a64 to i8*
  store i8 %v5_21a64, i8* %v21_21a64, align 1
  %v0_21a66 = load i32, i32* @eax, align 8
  %v1_21a66 = load i32, i32* @ebp, align 4
  %v2_21a66 = add i32 %v1_21a66, -12
  %v3_21a66 = inttoptr i32 %v2_21a66 to i32*
  store i32 %v0_21a66, i32* %v3_21a66, align 4
  %v0_21a6b = load i32, i32* @ebp, align 4
  %v1_21a6b = add i32 %v0_21a6b, -28
  %v2_21a6b = inttoptr i32 %v1_21a6b to i32*
  %v3_21a6b = load i32, i32* %v2_21a6b, align 4
  %v1_21a6e = inttoptr i32 %v3_21a6b to i32*
  %v2_21a6e = load i32, i32* %v1_21a6e, align 4
  store i32 %v2_21a6e, i32* @eax, align 8
  %v1_21a70 = add i32 %v0_21a6b, -12
  %v2_21a70 = inttoptr i32 %v1_21a70 to i32*
  %v3_21a70 = load i32, i32* %v2_21a70, align 4
  %v3_21a73 = icmp eq i32 %v3_21a70, 30
  br i1 %v3_21a73, label %bb, label %dec_label_pc_21a7c

bb:                                               ; preds = %dec_label_pc_21a64
  %v1_21a7a = call i32 @function_21a81()
  br label %dec_label_pc_21a7c

dec_label_pc_21a7c:                               ; preds = %bb, %dec_label_pc_21a64
  %v2_21a7a = phi i32 [ %v1_21a7a, %bb ], [ %v2_21a6e, %dec_label_pc_21a64 ]
  ret i32 %v2_21a7a
}

define i32 @function_21a81() local_unnamed_addr {
dec_label_pc_21a81:
  %v0_21a82 = load i32, i32* @eax, align 8
  ret i32 %v0_21a82
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorIxSaIxEEE1fERS4_l() local_unnamed_addr {
dec_label_pc_21a83:
  %eax.global-to-local = alloca i32, align 4
  %v2_21a84 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_21a84
}

define i32 @function_21a88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a88:
  %v0_21a88 = load i32, i32* @ebx, align 4
  %v1_21a88 = add i32 %v0_21a88, 1166608453
  %v2_21a88 = inttoptr i32 %v1_21a88 to i8*
  %v3_21a88 = load i8, i8* %v2_21a88, align 1
  %v4_21a88 = load i32, i32* @ecx, align 4
  %v5_21a88 = trunc i32 %v4_21a88 to i8
  %v6_21a88 = sub i8 %v3_21a88, %v5_21a88
  store i8 %v6_21a88, i8* %v2_21a88, align 1
  %v0_21a90 = load i32, i32* @ebp, align 4
  %v1_21a93 = add i32 %v0_21a90, 2
  store i32 %v1_21a93, i32* @ebp, align 4
  %v2_21a9b = add i32 %v0_21a90, -10
  %v3_21a9b = inttoptr i32 %v2_21a9b to i32*
  store i32 30, i32* %v3_21a9b, align 4
  %v0_21aa0 = load i32, i32* @ebp, align 4
  %v1_21aa0 = add i32 %v0_21aa0, -28
  %v2_21aa0 = inttoptr i32 %v1_21aa0 to i32*
  %v3_21aa0 = load i32, i32* %v2_21aa0, align 4
  store i32 %v3_21aa0, i32* @eax, align 8
  %v1_21aa3 = add i32 %v0_21aa0, -12
  %v2_21aa3 = inttoptr i32 %v1_21aa3 to i32*
  %v3_21aa3 = load i32, i32* %v2_21aa3, align 4
  %v3_21aa6 = icmp eq i32 %v3_21aa3, 30
  br i1 %v3_21aa6, label %bb, label %dec_label_pc_21aaf

bb:                                               ; preds = %dec_label_pc_21a88
  %v1_21aad = call i32 @function_21ab4()
  br label %dec_label_pc_21aaf

dec_label_pc_21aaf:                               ; preds = %bb, %dec_label_pc_21a88
  %v3_21aad = phi i32 [ %v1_21aad, %bb ], [ %v3_21aa0, %dec_label_pc_21a88 ]
  ret i32 %v3_21aad
}

define i32 @__stack_chk_fail.2372() local_unnamed_addr {
dec_label_pc_21ab0:
  %eax.global-to-local = alloca i32, align 4
  %v0_21ab0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21ab0
}

define i32 @function_21ab4() local_unnamed_addr {
dec_label_pc_21ab4:
  %v0_21ab5 = load i32, i32* @eax, align 8
  ret i32 %v0_21ab5
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorIxSaIxEEEENS_14range_iteratorIT_E4typeERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21ab6:
  %v2_21ae0 = call i32 @unknown_3d6a2(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorIxSaIxEEEENS_14range_iteratorIT_E4typeERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21b00:
  %v2_21b2a = call i32 @unknown_3d910(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_21b3f = call i32 @function_21b46()
  ret i32 %v1_21b3f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21b46() local_unnamed_addr {
dec_label_pc_21b46:
  %v0_21b47 = load i32, i32* @eax, align 8
  ret i32 %v0_21b47
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b4a:
  ret i32 0
}

define i32 @function_21b62(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b62:
  %v0_21b62 = load i32, i32* @ebp, align 4
  %v1_21b62 = add i32 %v0_21b62, 1
  store i32 %v1_21b62, i32* @ebp, align 4
  %v0_21b67 = load i32, i32* @edx, align 8
  %v3_21b67 = icmp eq i32 %v0_21b67, 30
  br i1 %v3_21b67, label %bb, label %dec_label_pc_21b62.dec_label_pc_21b70_crit_edge

dec_label_pc_21b62.dec_label_pc_21b70_crit_edge:  ; preds = %dec_label_pc_21b62
  %v2_21b6e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_21b70

bb:                                               ; preds = %dec_label_pc_21b62
  %v1_21b6e = call i32 @function_21b75()
  br label %dec_label_pc_21b70

dec_label_pc_21b70:                               ; preds = %dec_label_pc_21b62.dec_label_pc_21b70_crit_edge, %bb
  %v2_21b6e = phi i32 [ %v2_21b6e.pre, %dec_label_pc_21b62.dec_label_pc_21b70_crit_edge ], [ %v1_21b6e, %bb ]
  ret i32 %v2_21b6e

; uselistorder directives
  uselistorder label %dec_label_pc_21b70, { 1, 0 }
}

define i32 @function_21b75() local_unnamed_addr {
dec_label_pc_21b75:
  %v0_21b76 = load i32, i32* @eax, align 8
  ret i32 %v0_21b76
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21b78:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_21b9b = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_21b9b
}

define i32 @function_21b9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21b9e:
  %v0_21b9e = load i32, i32* @eax, align 8
  %v1_21ba1 = call i32 @function_32046(i32 %v0_21b9e)
  %v0_21ba6 = load i32, i32* @ebp, align 4
  %v1_21ba6 = add i32 %v0_21ba6, -12
  %v2_21ba6 = inttoptr i32 %v1_21ba6 to i32*
  %v3_21ba6 = load i32, i32* %v2_21ba6, align 4
  %v2_21ba9 = xor i32 %v3_21ba6, 30
  %v3_21ba9 = icmp eq i32 %v2_21ba9, 0
  store i32 %v2_21ba9, i32* @eax, align 8
  br i1 %v3_21ba9, label %bb, label %dec_label_pc_21bb2

bb:                                               ; preds = %dec_label_pc_21b9e
  %v1_21bb0 = call i32 @function_21bb7()
  br label %dec_label_pc_21bb2

dec_label_pc_21bb2:                               ; preds = %bb, %dec_label_pc_21b9e
  %v3_21bb0 = phi i32 [ %v1_21bb0, %bb ], [ %v2_21ba9, %dec_label_pc_21b9e ]
  ret i32 %v3_21bb0
}

define i32 @function_21bb7() local_unnamed_addr {
dec_label_pc_21bb7:
  %v0_21bb8 = load i32, i32* @eax, align 8
  ret i32 %v0_21bb8
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21bba:
  store i32 0, i32* %arg1, align 4
  ret i32 30
}

define i32 @function_21bde(i32 %arg1) local_unnamed_addr {
dec_label_pc_21bde:
  %v0_21bde = load i32, i32* @eax, align 8
  %v2_21bde = xor i32 %v0_21bde, 30
  %v3_21bde = icmp eq i32 %v2_21bde, 0
  store i32 %v2_21bde, i32* @eax, align 8
  br i1 %v3_21bde, label %bb, label %dec_label_pc_21be6

bb:                                               ; preds = %dec_label_pc_21bde
  %v1_21be4 = call i32 @function_21beb()
  br label %dec_label_pc_21be6

dec_label_pc_21be6:                               ; preds = %bb, %dec_label_pc_21bde
  %v2_21be4 = phi i32 [ %v1_21be4, %bb ], [ %v2_21bde, %dec_label_pc_21bde ]
  ret i32 %v2_21be4
}

define i32 @function_21beb() local_unnamed_addr {
dec_label_pc_21beb:
  %v0_21bec = load i32, i32* @eax, align 8
  ret i32 %v0_21bec
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21bee:
  %v1_21c08 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_21c08
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21c26:
  ret i32 %arg3
}

define i32 @function_21c40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21c40:
  %eax.global-to-local = alloca i32, align 4
  %v0_21c40 = load i32, i32* @eax, align 8
  %v1_21c40 = trunc i32 %v0_21c40 to i8
  %v2_21c40 = load i1, i1* @cf, align 1
  %v3_21c40 = zext i1 %v2_21c40 to i8
  %v4_21c40 = add i8 %v3_21c40, %v1_21c40
  %v22_21c40 = zext i8 %v4_21c40 to i32
  %v24_21c40 = and i32 %v0_21c40, -256
  %v25_21c40 = or i32 %v22_21c40, %v24_21c40
  store i32 %v25_21c40, i32* %eax.global-to-local, align 8
  %v1_21c42 = inttoptr i32 %v25_21c40 to i8*
  %v2_21c42 = load i8, i8* %v1_21c42, align 1
  %v5_21c42 = add i8 %v2_21c42, %v4_21c40
  store i8 %v5_21c42, i8* %v1_21c42, align 1
  %v0_21c44 = load i32, i32* %eax.global-to-local, align 8
  %v1_21c44 = load i32, i32* @ebp, align 4
  %v2_21c44 = add i32 %v1_21c44, -12
  %v3_21c44 = inttoptr i32 %v2_21c44 to i32*
  store i32 %v0_21c44, i32* %v3_21c44, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_21c49 = load i32, i32* @ebp, align 4
  %v1_21c49 = add i32 %v0_21c49, -28
  %v2_21c49 = inttoptr i32 %v1_21c49 to i32*
  %v3_21c49 = load i32, i32* %v2_21c49, align 4
  store i32 %v3_21c49, i32* %eax.global-to-local, align 8
  %v1_21c4f = call i32 @unknown_43814(i32 %v3_21c49)
  store i32 %v1_21c4f, i32* %eax.global-to-local, align 8
  ret i32 %v1_21c4f
}

define i32 @function_21c72(i32 %arg1) local_unnamed_addr {
dec_label_pc_21c72:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_21c72 = load i32, i32* @eax, align 8
  %v11_21c72 = and i32 %v0_21c72, or (i32 zext (i8 ptrtoint (i8* @global_var_93.2455 to i8) to i32), i32 -256)
  store i32 %v11_21c72, i32* %eax.global-to-local, align 8
  %v0_21c74 = load i32, i32* @esp, align 4
  %v8_21c74 = add i32 %v0_21c74, add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)))))))))
  %v12_21c74 = load i32, i32* @ecx, align 4
  %v14_21c74 = load i32, i32* @edx, align 8
  %v16_21c74 = load i32, i32* @ebx, align 4
  %v18_21c74 = ptrtoint i32* %stack_var_0 to i32
  %v22_21c74 = load i32, i32* @esi, align 4
  %v23_21c74 = inttoptr i32 %v8_21c74 to i32*
  %v24_21c74 = load i32, i32* @edi, align 8
  store i32 %v24_21c74, i32* %v23_21c74, align 4
  %v0_21c75 = load i32, i32* %eax.global-to-local, align 8
  %v1_21c75 = inttoptr i32 %v0_21c75 to i8*
  %v2_21c75 = load i8, i8* %v1_21c75, align 1
  %v4_21c75 = trunc i32 %v0_21c75 to i8
  %v5_21c75 = add i8 %v2_21c75, %v4_21c75
  store i8 %v5_21c75, i8* %v1_21c75, align 1
  %v0_21c7c = load i32, i32* @ebp, align 4
  %v1_21c7c = add i32 %v0_21c7c, -20
  store i32 %v1_21c7c, i32* %eax.global-to-local, align 8
  %v1_21c7f = load i32, i32* @esp, align 4
  %v2_21c7f = inttoptr i32 %v1_21c7f to i32*
  store i32 %v1_21c7c, i32* %v2_21c7f, align 4
  %v6_21c82 = call i32 @unknown_437e0(i32 %v22_21c74, i32 %v18_21c74, i32 %v16_21c74, i32 %v14_21c74, i32 %v12_21c74, i32 %v11_21c72)
  store i32 %v6_21c82, i32* %eax.global-to-local, align 8
  %v0_21c87 = load i32, i32* @ebp, align 4
  %v1_21c87 = add i32 %v0_21c87, -28
  %v2_21c87 = inttoptr i32 %v1_21c87 to i32*
  %v3_21c87 = load i32, i32* %v2_21c87, align 4
  store i32 %v3_21c87, i32* %eax.global-to-local, align 8
  %v1_21c8a = load i32, i32* @esp, align 4
  %v2_21c8a = inttoptr i32 %v1_21c8a to i32*
  store i32 %v3_21c87, i32* %v2_21c8a, align 4
  %v0_21c8d = call i32 @unknown_43b5a()
  store i32 %v0_21c8d, i32* %eax.global-to-local, align 8
  %v1_21c92 = load i32, i32* @esp, align 4
  %v2_21c92 = inttoptr i32 %v1_21c92 to i32*
  store i32 %v0_21c8d, i32* %v2_21c92, align 4
  %v0_21c95 = call i32 @unknown_43bb6()
  store i32 %v0_21c95, i32* %edx.global-to-local, align 8
  %v0_21c9c = load i32, i32* @ebp, align 4
  %v1_21c9c = add i32 %v0_21c9c, -16
  store i32 %v1_21c9c, i32* %eax.global-to-local, align 8
  %v1_21c9f = load i32, i32* @esp, align 4
  %v2_21c9f = add i32 %v1_21c9f, 4
  %v3_21c9f = inttoptr i32 %v2_21c9f to i32*
  store i32 %v0_21c95, i32* %v3_21c9f, align 4
  %v0_21ca3 = load i32, i32* %eax.global-to-local, align 8
  %v1_21ca3 = load i32, i32* @esp, align 4
  %v2_21ca3 = inttoptr i32 %v1_21ca3 to i32*
  store i32 %v0_21ca3, i32* %v2_21ca3, align 4
  %v0_21ca6 = call i32 @unknown_43d20()
  store i32 %v0_21ca6, i32* %eax.global-to-local, align 8
  %v0_21cab = load i32, i32* @esp, align 4
  %v1_21cab = sub i32 %v0_21cab, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_21cae = load i32, i32* @ebp, align 4
  %v1_21cae = add i32 %v0_21cae, -28
  %v2_21cae = inttoptr i32 %v1_21cae to i32*
  %v3_21cae = load i32, i32* %v2_21cae, align 4
  %v1_21cb1 = add i32 %v3_21cae, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_21cb1, i32* %edx.global-to-local, align 8
  %v1_21cb4 = add i32 %v0_21cae, -16
  store i32 %v1_21cb4, i32* %eax.global-to-local, align 8
  %v2_21cb7 = add i32 %v1_21cab, 4
  %v3_21cb7 = inttoptr i32 %v2_21cb7 to i32*
  store i32 %v1_21cb4, i32* %v3_21cb7, align 4
  %v0_21cbb = load i32, i32* %edx.global-to-local, align 8
  %v1_21cbb = load i32, i32* @esp, align 4
  %v2_21cbb = inttoptr i32 %v1_21cbb to i32*
  store i32 %v0_21cbb, i32* %v2_21cbb, align 4
  %v0_21cbe = call i32 @unknown_48438()
  store i32 %v0_21cbe, i32* %eax.global-to-local, align 8
  %v4_21cc3 = trunc i32 %v0_21cbe to i8
  %v5_21cc3 = icmp eq i8 %v4_21cc3, 0
  %v0_21cf6 = load i32, i32* @ebp, align 4
  %v1_21cf6 = add i32 %v0_21cf6, -28
  %v2_21cf6 = inttoptr i32 %v1_21cf6 to i32*
  %v3_21cf6 = load i32, i32* %v2_21cf6, align 4
  store i32 %v3_21cf6, i32* %eax.global-to-local, align 8
  br i1 %v5_21cc3, label %dec_label_pc_21cf6, label %dec_label_pc_21cc7

dec_label_pc_21cc7:                               ; preds = %dec_label_pc_21c72
  %v1_21cca = load i32, i32* @esp, align 4
  %v2_21cca = inttoptr i32 %v1_21cca to i32*
  store i32 %v3_21cf6, i32* %v2_21cca, align 4
  %v0_21ccd = call i32 @unknown_43b5a()
  store i32 %v0_21ccd, i32* %eax.global-to-local, align 8
  %v1_21cd2 = load i32, i32* @esp, align 4
  %v2_21cd2 = inttoptr i32 %v1_21cd2 to i32*
  store i32 %v0_21ccd, i32* %v2_21cd2, align 4
  %v0_21cd5 = call i32 @unknown_43bb6()
  store i32 %v0_21cd5, i32* %edx.global-to-local, align 8
  %v0_21cdc = load i32, i32* @ebp, align 4
  %v1_21cdc = add i32 %v0_21cdc, -40
  store i32 %v1_21cdc, i32* %eax.global-to-local, align 8
  %v1_21cdf = load i32, i32* @esp, align 4
  %v2_21cdf = add i32 %v1_21cdf, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_21cdf = inttoptr i32 %v2_21cdf to i32*
  store i32 %v0_21cd5, i32* %v3_21cdf, align 4
  %v0_21ce3 = load i32, i32* %eax.global-to-local, align 8
  %v1_21ce3 = load i32, i32* @esp, align 4
  %v2_21ce3 = inttoptr i32 %v1_21ce3 to i32*
  store i32 %v0_21ce3, i32* %v2_21ce3, align 4
  %v0_21ce6 = call i32 @unknown_43cd6()
  store i32 %v0_21ce6, i32* %eax.global-to-local, align 8
  %v0_21cee = load i32, i32* @ebp, align 4
  %v1_21cee = add i32 %v0_21cee, -40
  %v2_21cee = inttoptr i32 %v1_21cee to i32*
  %v3_21cee = load i32, i32* %v2_21cee, align 4
  store i32 %v3_21cee, i32* %eax.global-to-local, align 8
  %v2_21cf1 = add i32 %v0_21cee, -20
  %v3_21cf1 = inttoptr i32 %v2_21cf1 to i32*
  store i32 %v3_21cee, i32* %v3_21cf1, align 4
  br label %dec_label_pc_21cff

dec_label_pc_21cf6:                               ; preds = %dec_label_pc_21c72
  %v1_21cf9 = add i32 %v3_21cf6, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_21cf9 = inttoptr i32 %v1_21cf9 to i32*
  %v3_21cf9 = load i32, i32* %v2_21cf9, align 4
  store i32 %v3_21cf9, i32* %eax.global-to-local, align 8
  %v2_21cfc = add i32 %v0_21cf6, -20
  %v3_21cfc = inttoptr i32 %v2_21cfc to i32*
  store i32 %v3_21cf9, i32* %v3_21cfc, align 4
  br label %dec_label_pc_21cff

dec_label_pc_21cff:                               ; preds = %dec_label_pc_21cf6, %dec_label_pc_21cc7
  %v0_21cff = load i32, i32* @ebp, align 4
  %v1_21cff = add i32 %v0_21cff, -32
  %v2_21cff = inttoptr i32 %v1_21cff to i8*
  %v3_21cff = load i8, i8* %v2_21cff, align 1
  %v4_21cff = zext i8 %v3_21cff to i32
  store i32 %v4_21cff, i32* %eax.global-to-local, align 8
  %v1_21d03 = add i32 %v0_21cff, -36
  %v2_21d03 = inttoptr i32 %v1_21d03 to i32*
  %v3_21d03 = load i32, i32* %v2_21d03, align 4
  %v1_21d06 = load i32, i32* @esp, align 4
  %v2_21d06 = add i32 %v1_21d06, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_21d06 = inttoptr i32 %v2_21d06 to i32*
  store i32 %v3_21d03, i32* %v3_21d06, align 4
  %v0_21d0a = load i32, i32* @ebp, align 4
  %v1_21d0a = add i32 %v0_21d0a, -20
  store i32 %v1_21d0a, i32* %edx.global-to-local, align 8
  %v1_21d0d = load i32, i32* @esp, align 4
  %v2_21d0d = add i32 %v1_21d0d, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_21d0d = inttoptr i32 %v2_21d0d to i32*
  store i32 %v1_21d0a, i32* %v3_21d0d, align 4
  %v0_21d11 = load i32, i32* %eax.global-to-local, align 8
  %v1_21d11 = load i32, i32* @esp, align 4
  %v2_21d11 = add i32 %v1_21d11, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_21d11 = inttoptr i32 %v2_21d11 to i32*
  store i32 %v0_21d11, i32* %v3_21d11, align 4
  %v0_21d15 = load i32, i32* @ebp, align 4
  %v1_21d15 = add i32 %v0_21d15, -28
  %v2_21d15 = inttoptr i32 %v1_21d15 to i32*
  %v3_21d15 = load i32, i32* %v2_21d15, align 4
  store i32 %v3_21d15, i32* %eax.global-to-local, align 8
  %v1_21d18 = load i32, i32* @esp, align 4
  %v2_21d18 = inttoptr i32 %v1_21d18 to i32*
  store i32 %v3_21d15, i32* %v2_21d18, align 4
  %v0_21d1b = call i32 @unknown_48478()
  store i32 %v0_21d1b, i32* %eax.global-to-local, align 8
  %v0_21d20 = load i32, i32* @ebp, align 4
  %v1_21d20 = add i32 %v0_21d20, -12
  %v2_21d20 = inttoptr i32 %v1_21d20 to i32*
  %v3_21d20 = load i32, i32* %v2_21d20, align 4
  %v2_21d23 = xor i32 %v3_21d20, 30
  %v3_21d23 = icmp eq i32 %v2_21d23, 0
  store i32 %v2_21d23, i32* @eax, align 8
  br i1 %v3_21d23, label %bb, label %dec_label_pc_21d2c

bb:                                               ; preds = %dec_label_pc_21cff
  %v1_21d2a = call i32 @function_21d31()
  store i32 %v1_21d2a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21d2c

dec_label_pc_21d2c:                               ; preds = %bb, %dec_label_pc_21cff
  %v3_21d2a = phi i32 [ %v1_21d2a, %bb ], [ %v2_21d23, %dec_label_pc_21cff ]
  ret i32 %v3_21d2a

; uselistorder directives
  uselistorder i32 %v3_21cf6, { 1, 0, 2 }
  uselistorder i32 %v11_21c72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 ()* @unknown_43bb6, { 1, 0 }
  uselistorder i32 ()* @unknown_43b5a, { 1, 0 }
}

define i32 @function_21d31() local_unnamed_addr {
dec_label_pc_21d31:
  %v0_21d32 = load i32, i32* @eax, align 8
  ret i32 %v0_21d32
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEC1ERKSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21d34:
  %ebp.global-to-local = alloca i32, align 4
  %v0_21d34 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21d54 = inttoptr i32 %arg2 to i32*
  %v2_21d54 = load i32, i32* %v1_21d54, align 4
  store i32 %v2_21d54, i32* %arg1, align 4
  store i32 %v0_21d34, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEaSERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21d86:
  %stack_var_-24 = alloca i32, align 4
  %v2_21dab = ptrtoint i32* %stack_var_-24 to i32
  %v2_21db1 = call i32 @unknown_43aba(i32 %v2_21dab, i32 %arg2)
  %v2_21dc3 = call i32 @unknown_487c8(i32 %v2_21dab, i32 %arg1)
  %v1_21dce = call i32 @unknown_3e33e(i32 %v2_21dab)
  store i32 %arg1, i32* @eax, align 8
  %v1_21de0 = call i32 @function_21e00()
  store i32 %v1_21de0, i32* @eax, align 8
  %v0_21de2 = call i32 @function_21dfb()
  ret i32 %v0_21de2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21de5() local_unnamed_addr {
dec_label_pc_21de5:
  %eax.global-to-local = alloca i32, align 4
  %v0_21de5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21de5
}

define i32 @function_21dfb() local_unnamed_addr {
dec_label_pc_21dfb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21e00() local_unnamed_addr {
dec_label_pc_21e00:
  %v0_21e05 = load i32, i32* @eax, align 8
  ret i32 %v0_21e05
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE12slot_invokerC1ES4_S4_Rj(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21e06:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_21e3d = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_21e3d = inttoptr i32 %v2_21e3d to i32*
  store i32 %arg3, i32* %v3_21e3d, align 4
  %v3_21e43 = load i32, i32* %stack_var_-44, align 4
  %v2_21e46 = add i32 %tmp104, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_21e46 = inttoptr i32 %v2_21e46 to i32*
  store i32 %v3_21e43, i32* %v3_21e46, align 4
  store i32 0, i32* @eax, align 8
  %v1_21e53 = load i32, i32* %stack_var_-44, align 4
  %v5_21e53 = call i32 @function_21e5a(i32 %v1_21e53, i32 %arg3, i32 %arg2, i32 %tmp104)
  ret i32 %v5_21e53
}

define i32 @function_21e5a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21e5a:
  %v0_21e5b = load i32, i32* @eax, align 8
  ret i32 %v0_21e5b
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerEEC1ERKSK_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_21e5c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_21e80 = call i32 @unknown_488f8(i32 %arg1)
  %v1_21e88 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_21e88, i32* %eax.global-to-local, align 8
  %v1_21e8e = call i32 @unknown_45394(i32 %v1_21e88)
  store i32 %arg1, i32* %eax.global-to-local, align 8
  store i32 %tmp99, i32* %edx.global-to-local, align 8
  %v2_21e99 = load i32, i32* %arg2, align 4
  %v2_21e9b = add i32 %arg1, 136
  %v3_21e9b = inttoptr i32 %v2_21e9b to i32*
  store i32 %v2_21e99, i32* %v3_21e9b, align 4
  %v0_21ea1 = load i32, i32* %edx.global-to-local, align 8
  %v1_21ea1 = add i32 %v0_21ea1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_21ea1 = inttoptr i32 %v1_21ea1 to i32*
  %v3_21ea1 = load i32, i32* %v2_21ea1, align 4
  %v1_21ea4 = load i32, i32* %eax.global-to-local, align 8
  %v2_21ea4 = add i32 %v1_21ea4, 140
  %v3_21ea4 = inttoptr i32 %v2_21ea4 to i32*
  store i32 %v3_21ea1, i32* %v3_21ea4, align 4
  %v0_21eaa = load i32, i32* %edx.global-to-local, align 8
  %v1_21eaa = add i32 %v0_21eaa, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_21eaa = inttoptr i32 %v1_21eaa to i32*
  %v3_21eaa = load i32, i32* %v2_21eaa, align 4
  store i32 %v3_21eaa, i32* %edx.global-to-local, align 8
  %v1_21ead = load i32, i32* %eax.global-to-local, align 8
  %v2_21ead = add i32 %v1_21ead, 144
  %v3_21ead = inttoptr i32 %v2_21ead to i32*
  store i32 %v3_21eaa, i32* %v3_21ead, align 4
  %v1_21eb6 = add i32 %arg1, 148
  %v2_21eb6 = inttoptr i32 %v1_21eb6 to i32*
  store i32 0, i32* %v2_21eb6, align 4
  %v1_21ec3 = add i32 %arg1, 152
  %v2_21ec3 = inttoptr i32 %v1_21ec3 to i32*
  store i32 0, i32* %v2_21ec3, align 4
  store i32 0, i32* @eax, align 8
  %v1_21ed7 = call i32 @function_21ef7()
  store i32 %v1_21ed7, i32* @eax, align 8
  %v0_21ed9 = call i32 @function_21ef2()
  store i32 %v0_21ed9, i32* %eax.global-to-local, align 8
  ret i32 %v0_21ed9

; uselistorder directives
  uselistorder i32 144, { 3, 4, 5, 0, 1, 6, 2 }
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_21edc() local_unnamed_addr {
dec_label_pc_21edc:
  %eax.global-to-local = alloca i32, align 4
  %v0_21edc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21edc
}

define i32 @function_21ee0(i32 %arg1) local_unnamed_addr {
dec_label_pc_21ee0:
  %v0_21ee0 = load i32, i32* @eax, align 8
  %v1_21ee3 = call i32 @unknown_43d5a(i32 %v0_21ee0)
  %v0_21ee8 = load i32, i32* @ebx, align 4
  ret i32 %v0_21ee8
}

define i32 @function_21ef2() local_unnamed_addr {
dec_label_pc_21ef2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21ef7() local_unnamed_addr {
dec_label_pc_21ef7:
  %v0_21efc = load i32, i32* @eax, align 8
  ret i32 %v0_21efc
}

define i32 @_ZN5boost8optionalIbED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21efe:
  %v1_21f1b = call i32 @unknown_489d0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_21f2a = call i32 @function_21f31()
  ret i32 %v1_21f2a
}

define i32 @function_21f31() local_unnamed_addr {
dec_label_pc_21f31:
  %v0_21f32 = load i32, i32* @eax, align 8
  ret i32 %v0_21f32
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21f34:
  %v2_21f4e = load i32, i32* %arg1, align 4
  %v1_21f50 = icmp eq i32 %v2_21f4e, 0
  %v1_21f52 = icmp eq i1 %v1_21f50, false
  br i1 %v1_21f52, label %bb, label %dec_label_pc_21f54

bb:                                               ; preds = %dec_label_pc_21f34
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_21f52 = call i32 @function_21f78(i32 %tmp105)
  br label %dec_label_pc_21f54

dec_label_pc_21f54:                               ; preds = %bb, %dec_label_pc_21f34
  %v3_21f6c = phi i32 [ %v3_21f52, %bb ], [ %v2_21f4e, %dec_label_pc_21f34 ]
  ret i32 %v3_21f6c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21f78(i32 %arg1) local_unnamed_addr {
dec_label_pc_21f78:
  %v0_21f78 = load i32, i32* @ebp, align 4
  %v1_21f78 = add i32 %v0_21f78, -28
  %v2_21f78 = inttoptr i32 %v1_21f78 to i32*
  %v3_21f78 = load i32, i32* %v2_21f78, align 4
  %v1_21f7b = inttoptr i32 %v3_21f78 to i32*
  %v2_21f7b = load i32, i32* %v1_21f7b, align 4
  store i32 %v2_21f7b, i32* @eax, align 8
  %v1_21f7d = add i32 %v0_21f78, -12
  %v2_21f7d = inttoptr i32 %v1_21f7d to i32*
  %v3_21f7d = load i32, i32* %v2_21f7d, align 4
  %v3_21f80 = icmp eq i32 %v3_21f7d, 30
  br i1 %v3_21f80, label %bb, label %dec_label_pc_21f89

bb:                                               ; preds = %dec_label_pc_21f78
  %v1_21f87 = call i32 @function_21f8e()
  br label %dec_label_pc_21f89

dec_label_pc_21f89:                               ; preds = %bb, %dec_label_pc_21f78
  %v2_21f87 = phi i32 [ %v1_21f87, %bb ], [ %v2_21f7b, %dec_label_pc_21f78 ]
  ret i32 %v2_21f87
}

define i32 @function_21f8e() local_unnamed_addr {
dec_label_pc_21f8e:
  %v0_21f8f = load i32, i32* @eax, align 8
  ret i32 %v0_21f8f
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21f90:
  %v1_21fad = call i32 @unknown_48a98(i32 %arg1)
  store i32 %v1_21fad, i32* @eax, align 8
  %v1_21fbc = call i32 @function_21fc3()
  ret i32 %v1_21fbc
}

define i32 @function_21fc3() local_unnamed_addr {
dec_label_pc_21fc3:
  %v0_21fc4 = load i32, i32* @eax, align 8
  ret i32 %v0_21fc4
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE18invocation_janitorC1ERKNS1_24slot_call_iterator_cacheIbNSI_12slot_invokerEEERKSI_PKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21fc6:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_21ffd = add i32 %tmp104, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_21ffd = inttoptr i32 %v2_21ffd to i32*
  store i32 %arg3, i32* %v3_21ffd, align 4
  %v3_22003 = load i32, i32* %stack_var_-44, align 4
  %v2_22006 = add i32 %tmp104, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_22006 = inttoptr i32 %v2_22006 to i32*
  store i32 %v3_22003, i32* %v3_22006, align 4
  store i32 0, i32* @eax, align 8
  %v1_22013 = load i32, i32* %stack_var_-44, align 4
  %v5_22013 = call i32 @function_2201a(i32 %v1_22013, i32 %arg3, i32 %arg2, i32 %tmp104)
  ret i32 %v5_22013
}

define i32 @function_2201a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2201a:
  %v0_2201b = load i32, i32* @eax, align 8
  ret i32 %v0_2201b
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE18invocation_janitorD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2201c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22036 = load i32, i32* %arg1, align 4
  %v1_22038 = add i32 %v2_22036, 152
  %v2_22038 = inttoptr i32 %v1_22038 to i32*
  %v3_22038 = load i32, i32* %v2_22038, align 4
  %v1_22043 = add i32 %v2_22036, 148
  %v2_22043 = inttoptr i32 %v1_22043 to i32*
  %v3_22043 = load i32, i32* %v2_22043, align 4
  %tmp103 = icmp ugt i32 %v3_22038, %v3_22043
  br i1 %tmp103, label %dec_label_pc_2204d, label %dec_label_pc_22065

dec_label_pc_2204d:                               ; preds = %dec_label_pc_2201c
  %v1_22050 = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_22050 = inttoptr i32 %v1_22050 to i32*
  %v3_22050 = load i32, i32* %v2_22050, align 4
  %v1_22056 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_22056 = inttoptr i32 %v1_22056 to i32*
  %v3_22056 = load i32, i32* %v2_22056, align 4
  %v2_22060 = call i32 @unknown_48b80(i32 %v3_22056, i32 %v3_22050)
  br label %dec_label_pc_22065

dec_label_pc_22065:                               ; preds = %dec_label_pc_2201c, %dec_label_pc_2204d
  store i32 0, i32* @eax, align 8
  %v1_2206f = call i32 @function_22076()
  ret i32 %v1_2206f

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
  uselistorder label %dec_label_pc_22065, { 1, 0 }
}

define i32 @function_22076() local_unnamed_addr {
dec_label_pc_22076:
  %v0_22077 = load i32, i32* @eax, align 8
  ret i32 %v0_22077
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_state8combinerEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22078:
  %v1_22092 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_22098 = call i32 @unknown_48d28(i32 %v1_22092)
  store i32 %v1_22098, i32* @eax, align 8
  %v1_220a7 = call i32 @function_220ae()
  ret i32 %v1_220a7
}

define i32 @function_220ae() local_unnamed_addr {
dec_label_pc_220ae:
  %v0_220af = load i32, i32* @eax, align 8
  ret i32 %v0_220af
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_220b0:
  %v2_220da = call i32 @unknown_48dbc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_220ef = call i32 @function_220f6()
  ret i32 %v1_220ef

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_220f6() local_unnamed_addr {
dec_label_pc_220f6:
  %v0_220f7 = load i32, i32* @eax, align 8
  ret i32 %v0_220f7
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_220fa:
  %v2_22124 = call i32 @unknown_48e50(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22144:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_EC1ESX_SX_RNS1_24slot_call_iterator_cacheIbSK_EE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2216e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2219d = call i32 @unknown_442b2(i32 %tmp105)
  store i32 %arg2, i32* %arg1, align 4
  %v2_221b0 = add i32 %tmp105, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_221b0 = inttoptr i32 %v2_221b0 to i32*
  store i32 %arg3, i32* %v3_221b0, align 4
  %v2_221b9 = add i32 %tmp105, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_221b9 = inttoptr i32 %v2_221b9 to i32*
  store i32 %arg4, i32* %v3_221b9, align 4
  %v2_221c2 = add i32 %tmp105, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_221c2 = inttoptr i32 %v2_221c2 to i32*
  store i32 %arg3, i32* %v3_221c2, align 4
  %v1_221cb = call i32 @unknown_48f0c(i32 %tmp105)
  store i32 0, i32* @eax, align 8
  %v1_221da = call i32 @function_221e1()
  ret i32 %v1_221da

; uselistorder directives
  uselistorder i32 %tmp105, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_221e1() local_unnamed_addr {
dec_label_pc_221e1:
  %v0_221e2 = load i32, i32* @eax, align 8
  ret i32 %v0_221e2
}

define i32 @_ZNK5boost8signals26detail16combiner_invokerIbEclINS0_10last_valueIbEENS1_20slot_call_iterator_tINS1_12signal3_implIbRKSsSA_jS6_iSt4lessIiENS_8functionIFbSA_SA_jEEENSD_IFbRKNS0_10connectionESA_SA_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbSA_SA_jSF_EESL_EEEEESY_EEEEbRT_T0_S14_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_221e4:
  %v9_2226f = call i32 @unknown_49212(i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10)
  store i32 %v9_2226f, i32* @eax, align 8
  %v1_2227e = call i32 @function_22285()
  ret i32 %v1_2227e
}

define i32 @function_22285() local_unnamed_addr {
dec_label_pc_22285:
  %v0_22286 = load i32, i32* @eax, align 8
  ret i32 %v0_22286
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22288:
  store i32 %arg1, i32* @eax, align 8
  %v2_222ac = call i32 @function_222b3(i32 %arg1)
  ret i32 %v2_222ac
}

define i32 @function_222b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_222b3:
  %v0_222b4 = load i32, i32* @eax, align 8
  ret i32 %v0_222b4
}

define i32 @_ZN5boost12range_detail11range_beginIKSt6vectorISsSaISsEEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222b5:
  %v2_222df = call i32 @unknown_3bb2d(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_222f4 = call i32 @function_222fb()
  ret i32 %v1_222f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_222fb() local_unnamed_addr {
dec_label_pc_222fb:
  %v0_222fc = load i32, i32* @eax, align 8
  ret i32 %v0_222fc
}

define i32 @_ZN5boost12range_detail9range_endIKSt6vectorISsSaISsEEEENS_14range_iteratorIT_E4typeERS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222ff:
  %v2_22329 = call i32 @unknown_3bbc7(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2233e = call i32 @function_22345()
  ret i32 %v1_2233e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22345() local_unnamed_addr {
dec_label_pc_22345:
  %v0_22346 = load i32, i32* @eax, align 8
  ret i32 %v0_22346
}

define i32 @_ZN5boost12range_detail9range_endISsEENS_14range_iteratorIT_E4typeERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22349:
  store i32 %arg1, i32* @eax, align 8
  %v3_22388 = call i32 @function_2238f(i32 %arg1, i32 %arg2)
  ret i32 %v3_22388
}

define i32 @function_2238f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2238f:
  %v0_22390 = load i32, i32* @eax, align 8
  ret i32 %v0_22390
}

define i32 @_ZN5boost9algorithm6detail6insertISsN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvRT_NS8_8iteratorET0_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22393:
  %v8_223d7 = call i32 @unknown_49551(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_223e6 = call i32 @function_223ed()
  ret i32 %v1_223e6

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_223ed() local_unnamed_addr {
dec_label_pc_223ed:
  %v0_223ee = load i32, i32* @eax, align 8
  ret i32 %v0_223ee
}

define i32 @_ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_223ef:
  %v1_22418 = call i32 @function_337fe(i32 %arg2)
  %v5_2241d = add i32 %v1_22418, %arg2
  %v3_22431 = call i32 @unknown_44b21(i32 %arg1, i32 %arg2, i32 %v5_2241d)
  store i32 %arg1, i32* @eax, align 8
  %v1_22443 = call i32 @function_2244a()
  ret i32 %v1_22443

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2244a() local_unnamed_addr {
dec_label_pc_2244a:
  %v0_2244b = load i32, i32* @eax, align 8
  ret i32 %v0_2244b
}

define i32 @_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2244e:
  %v1_2246b = call i32 @unknown_4966f(i32 %arg1)
  store i32 %v1_2246b, i32* @eax, align 8
  %v1_2247a = call i32 @function_22481()
  ret i32 %v1_2247a
}

define i32 @function_22481() local_unnamed_addr {
dec_label_pc_22481:
  %v0_22482 = load i32, i32* @eax, align 8
  ret i32 %v0_22482
}

define i32 @_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22483:
  %v1_224a0 = call i32 @unknown_496d9(i32 %arg1)
  store i32 %v1_224a0, i32* @eax, align 8
  %v1_224af = call i32 @function_224b6()
  ret i32 %v1_224af
}

define i32 @function_224b6() local_unnamed_addr {
dec_label_pc_224b6:
  %v0_224b7 = load i32, i32* @eax, align 8
  ret i32 %v0_224b7
}

define i32 @_ZN5boost9algorithm6detail6insertISsPKcEEvRT_NS5_8iteratorET0_S8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_224b8:
  %v8_224fc = call i32 @unknown_49744(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2250b = call i32 @function_22512()
  ret i32 %v1_2250b

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22512() local_unnamed_addr {
dec_label_pc_22512:
  %v0_22513 = load i32, i32* @eax, align 8
  ret i32 %v0_22513
}

define i32 @_ZN5boost3_bi5valueIPvEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22514:
  %ebp.global-to-local = alloca i32, align 4
  %v0_22514 = load i32, i32* %ebp.global-to-local, align 4
  %v1_22534 = inttoptr i32 %arg2 to i32*
  %v2_22534 = load i32, i32* %v1_22534, align 4
  store i32 %v2_22534, i32* %arg1, align 4
  store i32 %v0_22514, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost3_bi5list1INS0_5valueIPvEEEC1ES4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2254e:
  %v2_22578 = call i32 @unknown_4983e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_22587 = call i32 @function_2258e()
  ret i32 %v1_22587
}

define i32 @function_2258e() local_unnamed_addr {
dec_label_pc_2258e:
  %v0_2258f = load i32, i32* @eax, align 8
  ret i32 %v0_2258f
}

define i32 @_ZN5boost3_bi6bind_tIvPFvPvENS0_5list1INS0_5valueIS2_EEEEEC1ES4_RKS8_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22590:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_225c1 = inttoptr i32 %arg3 to i32*
  %v2_225c1 = load i32, i32* %v1_225c1, align 4
  %v2_225c3 = add i32 %tmp103, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_225c3 = inttoptr i32 %v2_225c3 to i32*
  store i32 %v2_225c1, i32* %v3_225c3, align 4
  store i32 0, i32* @eax, align 8
  %v4_225d0 = call i32 @function_225d7(i32 %arg3, i32 %arg2, i32 %tmp103)
  ret i32 %v4_225d0
}

define i32 @function_225d7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_225d7:
  %v0_225d8 = load i32, i32* @eax, align 8
  ret i32 %v0_225d8
}

define i32 @_ZN5boost6detail8heap_newINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEESC_EEPT_RT0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_225d9:
  %v1_225f6 = call i32 @unknown_49901(i32 %arg1)
  ret i32 %v1_225f6
}

define i32 @_ZN5boost10shared_ptrINS_6detail16thread_data_baseEEC1INS1_11thread_dataINS_3_bi6bind_tIvPFvPvENS6_5list1INS6_5valueIS8_EEEEEEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2260e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_22637 = add i32 %tmp103, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_22644 = call i32 @unknown_499a6(i32 %v1_22637, i32 %arg2)
  %v10_22649 = icmp eq i32 %arg2, 0
  br i1 %v10_22649, label %dec_label_pc_2265c, label %dec_label_pc_2264f

dec_label_pc_2264f:                               ; preds = %dec_label_pc_2260e
  %v1_22652 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  br label %dec_label_pc_2265c

dec_label_pc_2265c:                               ; preds = %dec_label_pc_2260e, %dec_label_pc_2264f
  %storemerge = phi i32 [ %v1_22652, %dec_label_pc_2264f ], [ 0, %dec_label_pc_2260e ]
  %v3_2266d = call i32 @unknown_49a31(i32 %tmp103, i32 %arg2, i32 %storemerge)
  %v0_22672 = call i32 @function_2268e()
  ret i32 %v0_22672

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_2265c, { 1, 0 }
}

define i32 @function_22675() local_unnamed_addr {
dec_label_pc_22675:
  %eax.global-to-local = alloca i32, align 4
  %v0_22675 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22675
}

define i32 @function_2268e() local_unnamed_addr {
dec_label_pc_2268e:
  %v0_2268e = load i32, i32* @ebp, align 4
  %v1_2268e = add i32 %v0_2268e, -12
  %v2_2268e = inttoptr i32 %v1_2268e to i32*
  %v3_2268e = load i32, i32* %v2_2268e, align 4
  %v2_22691 = xor i32 %v3_2268e, 30
  %v3_22691 = icmp eq i32 %v2_22691, 0
  store i32 %v2_22691, i32* @eax, align 8
  br i1 %v3_22691, label %bb, label %dec_label_pc_2269a

bb:                                               ; preds = %dec_label_pc_2268e
  %v1_22698 = call i32 @function_2269f()
  br label %dec_label_pc_2269a

dec_label_pc_2269a:                               ; preds = %bb, %dec_label_pc_2268e
  %v2_22698 = phi i32 [ %v1_22698, %bb ], [ %v2_22691, %dec_label_pc_2268e ]
  ret i32 %v2_22698
}

define i32 @function_2269f() local_unnamed_addr {
dec_label_pc_2269f:
  %v0_226a4 = load i32, i32* @eax, align 8
  ret i32 %v0_226a4
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKPKvN5boost6detail13tss_data_nodeEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_226a6:
  %v1_226c3 = call i32 @unknown_49b1e(i32 %arg1)
  ret i32 30
}

define i32 @function_226ce() local_unnamed_addr {
dec_label_pc_226ce:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_226ce = load i32, i32* %eax.global-to-local, align 8
  %v1_226ce = trunc i32 %v0_226ce to i8
  %v2_226ce = load i1, i1* %cf.global-to-local, align 1
  %v3_226ce = zext i1 %v2_226ce to i8
  %v4_226ce = add i8 %v3_226ce, %v1_226ce
  %v19_226ce = icmp ule i8 %v4_226ce, %v1_226ce
  %v21_226ce = icmp eq i1 %v2_226ce, %v19_226ce
  store i1 %v21_226ce, i1* %cf.global-to-local, align 1
  %v22_226ce = zext i8 %v4_226ce to i32
  %v24_226ce = and i32 %v0_226ce, -256
  %v25_226ce = or i32 %v22_226ce, %v24_226ce
  store i32 %v25_226ce, i32* %eax.global-to-local, align 8
  ret i32 %v25_226ce

; uselistorder directives
  uselistorder i8 %v4_226ce, { 1, 0 }
  uselistorder i8 %v1_226ce, { 1, 0 }
}

define i32 @function_226d8() local_unnamed_addr {
dec_label_pc_226d8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_226d8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_226d8 = add i32 %v0_226d8, -1
  store i32 %v1_226d8, i32* %ecx.global-to-local, align 4
  %v0_226da = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_226da
}

define i32 @_ZNSt8_Rb_treeIPKvSt4pairIKS1_N5boost6detail13tss_data_nodeEESt10_Select1stIS7_ESt4lessIS1_ESaIS7_EE13_Rb_tree_implISB_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_226dc:
  %v1_226f6 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_226f6 = inttoptr i32 %v1_226f6 to i32*
  store i32 0, i32* %v2_226f6, align 4
  %v1_22700 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_22700 = inttoptr i32 %v1_22700 to i32*
  store i32 0, i32* %v2_22700, align 4
  %v2_22710 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_22710 = inttoptr i32 %v2_22710 to i32*
  store i32 %v1_226f6, i32* %v3_22710, align 4
  %v2_2271c = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_2271c = inttoptr i32 %v2_2271c to i32*
  store i32 %v1_226f6, i32* %v3_2271c, align 4
  store i32 0, i32* @eax, align 8
  %v2_22729 = call i32 @function_22730(i32 %arg1)
  ret i32 %v2_22729
}

define i32 @function_22730(i32 %arg1) local_unnamed_addr {
dec_label_pc_22730:
  %v0_22731 = load i32, i32* @eax, align 8
  ret i32 %v0_22731
}

define i32 @_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22732:
  ret i32 %arg2
}

define i32 @function_22742(i32 %arg1) local_unnamed_addr {
dec_label_pc_22742:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_22742 = load i32, i32* @ebp, align 4
  %v0_22743 = load i32, i32* @ecx, align 4
  %v1_22743 = add i32 %v0_22743, -1
  store i32 %v1_22743, i32* @ecx, align 4
  %v1_22745 = add i32 %v0_22742, 2
  store i32 %v1_22745, i32* @ebp, align 4
  %v1_22746 = add i32 %v0_22743, -1587159996
  %v2_22746 = inttoptr i32 %v1_22746 to i8*
  %v3_22746 = load i8, i8* %v2_22746, align 1
  %v5_22746 = trunc i32 %v1_22743 to i8
  %v6_22746 = load i1, i1* @cf, align 1
  %v7_22746 = zext i1 %v6_22746 to i8
  %v8_22746 = add i8 %v3_22746, %v5_22746
  %v9_22746 = add i8 %v7_22746, %v8_22746
  %v27_22746 = icmp ule i8 %v9_22746, %v3_22746
  %v28_22746 = icmp ult i8 %v8_22746, %v3_22746
  %v29_22746 = select i1 %v6_22746, i1 %v27_22746, i1 %v28_22746
  store i1 %v29_22746, i1* %cf.global-to-local, align 1
  store i8 %v9_22746, i8* %v2_22746, align 1
  %v0_2274c = load i32, i32* @eax, align 8
  %v1_2274c = trunc i32 %v0_2274c to i8
  %v2_2274c = load i1, i1* %cf.global-to-local, align 1
  %v3_2274c = zext i1 %v2_2274c to i8
  %v4_2274c = add i8 %v3_2274c, %v1_2274c
  %v19_2274c = icmp ule i8 %v4_2274c, %v1_2274c
  %v21_2274c = icmp eq i1 %v2_2274c, %v19_2274c
  store i1 %v21_2274c, i1* %cf.global-to-local, align 1
  %v22_2274c = zext i8 %v4_2274c to i32
  %v24_2274c = and i32 %v0_2274c, -256
  %v25_2274c = or i32 %v22_2274c, %v24_2274c
  store i32 %v25_2274c, i32* %eax.global-to-local, align 8
  %v1_2274e = inttoptr i32 %v25_2274c to i8*
  %v2_2274e = load i8, i8* %v1_2274e, align 1
  %v5_2274e = add i8 %v2_2274e, %v4_2274c
  store i8 %v5_2274e, i8* %v1_2274e, align 1
  %v0_22750 = load i32, i32* %eax.global-to-local, align 8
  %v1_22750 = load i32, i32* @ebp, align 4
  %v2_22750 = add i32 %v1_22750, -12
  %v3_22750 = inttoptr i32 %v2_22750 to i32*
  store i32 %v0_22750, i32* %v3_22750, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_22755 = load i32, i32* @ebp, align 4
  %v1_22755 = add i32 %v0_22755, -28
  %v2_22755 = inttoptr i32 %v1_22755 to i32*
  %v3_22755 = load i32, i32* %v2_22755, align 4
  store i32 %v3_22755, i32* %eax.global-to-local, align 8
  %v1_22758 = add i32 %v0_22755, -32
  %v2_22758 = inttoptr i32 %v1_22758 to i32*
  %v3_22758 = load i32, i32* %v2_22758, align 4
  %v2_2275b = inttoptr i32 %v3_22755 to i32*
  store i32 %v3_22758, i32* %v2_2275b, align 4
  %v0_2275d = load i32, i32* @ebp, align 4
  %v1_2275d = add i32 %v0_2275d, -28
  %v2_2275d = inttoptr i32 %v1_2275d to i32*
  %v3_2275d = load i32, i32* %v2_2275d, align 4
  store i32 %v3_2275d, i32* %eax.global-to-local, align 8
  %v1_22760 = add i32 %v0_2275d, -36
  %v2_22760 = inttoptr i32 %v1_22760 to i32*
  %v3_22760 = load i32, i32* %v2_22760, align 4
  %v2_22763 = add i32 %v3_2275d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_22763 = inttoptr i32 %v2_22763 to i32*
  store i32 %v3_22760, i32* %v3_22763, align 4
  %v0_22766 = load i32, i32* @ebp, align 4
  %v1_22766 = add i32 %v0_22766, -12
  %v2_22766 = inttoptr i32 %v1_22766 to i32*
  %v3_22766 = load i32, i32* %v2_22766, align 4
  %v2_22769 = xor i32 %v3_22766, 30
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_22769 = icmp eq i32 %v2_22769, 0
  store i32 %v2_22769, i32* @eax, align 8
  br i1 %v3_22769, label %bb, label %dec_label_pc_22772

bb:                                               ; preds = %dec_label_pc_22742
  %v1_22770 = call i32 @function_22777()
  store i32 %v1_22770, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22772

dec_label_pc_22772:                               ; preds = %bb, %dec_label_pc_22742
  %v3_22770 = phi i32 [ %v1_22770, %bb ], [ %v2_22769, %dec_label_pc_22742 ]
  ret i32 %v3_22770

; uselistorder directives
  uselistorder i8 %v4_2274c, { 0, 2, 1 }
  uselistorder i8 %v1_2274c, { 1, 0 }
  uselistorder i8 %v9_22746, { 1, 0 }
  uselistorder i8 %v8_22746, { 1, 0 }
  uselistorder i8 %v3_22746, { 1, 2, 0 }
}

define i32 @function_22777() local_unnamed_addr {
dec_label_pc_22777:
  %v0_22778 = load i32, i32* @eax, align 8
  ret i32 %v0_22778
}

define i32 @_ZN9__gnu_cxxneIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22779:
  store i32 %arg1, i32* @eax, align 8
  %v1_2279d = call i32 @function_3a619(i32 %arg1)
  %v1_227a2 = inttoptr i32 %v1_2279d to i32*
  %v2_227a2 = load i32, i32* %v1_227a2, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_227aa = call i32 @function_3a619(i32 %arg2)
  %v1_227af = inttoptr i32 %v1_227aa to i32*
  %v2_227af = load i32, i32* %v1_227af, align 4
  %v12_227b1 = icmp eq i32 %v2_227a2, %v2_227af
  %v1_227b3 = icmp eq i1 %v12_227b1, false
  %v2_227b3 = zext i1 %v1_227b3 to i32
  %v4_227b3 = and i32 %v2_227af, -256
  %v5_227b3 = or i32 %v2_227b3, %v4_227b3
  store i32 %v5_227b3, i32* @eax, align 8
  %v1_227c0 = call i32 @function_227c7()
  ret i32 %v1_227c0

; uselistorder directives
  uselistorder i32 %v2_227af, { 1, 0 }
  uselistorder i32 (i32)* @function_3a619, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_227c7() local_unnamed_addr {
dec_label_pc_227c7:
  %v0_227cc = load i32, i32* @eax, align 8
  ret i32 %v0_227cc
}

define i32 @_ZNK5boost14iterator_rangeIPKcE5beginEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_227ce:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_227e8 = load i32, i32* %arg1, align 4
  store i32 %v2_227e8, i32* @eax, align 8
  %v2_227f4 = call i32 @function_227fb(i32 %tmp99)
  ret i32 %v2_227f4
}

define i32 @function_227fb(i32 %arg1) local_unnamed_addr {
dec_label_pc_227fb:
  %v0_227fc = load i32, i32* @eax, align 8
  ret i32 %v0_227fc
}

define i32 @_ZNK5boost14iterator_rangeIPKcE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_227fe:
  %ebp.global-to-local = alloca i32, align 4
  %v0_227fe = load i32, i32* %ebp.global-to-local, align 4
  %v1_22818 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_22818 = inttoptr i32 %v1_22818 to i32*
  %v3_22818 = load i32, i32* %v2_22818, align 4
  store i32 %v0_227fe, i32* %ebp.global-to-local, align 4
  ret i32 %v3_22818
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2282e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp101, i32* %stack_var_-60, align 4
  store i32 ptrtoint (%vtable_38b18_type* @global_var_38b18.2537 to i32), i32* %arg1, align 4
  %v2_22865 = add i32 %tmp101, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_22865 = inttoptr i32 %v2_22865 to i32*
  store i32 %arg2, i32* %v3_22865, align 4
  store i32 0, i32* @eax, align 8
  %v1_22872 = load i32, i32* %stack_var_-60, align 4
  %v2_22872 = call i32 @function_22879(i32 %v1_22872)
  ret i32 %v2_22872

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_22879(i32 %arg1) local_unnamed_addr {
dec_label_pc_22879:
  %v0_2287a = load i32, i32* @eax, align 8
  ret i32 %v0_2287a
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2287b:
  ret i32 %arg1
}

define i32 @function_2289c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2289c:
  %v0_2289c = load i32, i32* @ebx, align 4
  %v1_2289c = add i32 %v0_2289c, 277546176
  %v2_2289c = inttoptr i32 %v1_2289c to i8*
  %v3_2289c = load i8, i8* %v2_2289c, align 1
  %v4_2289c = load i32, i32* @eax, align 8
  %v5_2289c = trunc i32 %v4_2289c to i8
  %v6_2289c = add i8 %v5_2289c, %v3_2289c
  store i8 %v6_2289c, i8* %v2_2289c, align 1
  %v0_228a2 = load i32, i32* @ebp, align 4
  %v1_228a2 = add i32 %v0_228a2, -28
  %v2_228a2 = inttoptr i32 %v1_228a2 to i32*
  %v3_228a2 = load i32, i32* %v2_228a2, align 4
  %v1_228aa = add i32 %v0_228a2, -12
  %v2_228aa = inttoptr i32 %v1_228aa to i32*
  %v3_228aa = load i32, i32* %v2_228aa, align 4
  %v2_228ad = xor i32 %v3_228aa, 30
  store i1 false, i1* @cf, align 1
  %v3_228ad = icmp eq i32 %v2_228ad, 0
  store i1 %v3_228ad, i1* @zf, align 1
  store i32 %v2_228ad, i32* @eax, align 8
  br i1 %v3_228ad, label %bb, label %dec_label_pc_228b6

bb:                                               ; preds = %dec_label_pc_2289c
  %v2_228b4 = call i32 @function_228bb(i32 %v3_228a2)
  br label %dec_label_pc_228b6

dec_label_pc_228b6:                               ; preds = %bb, %dec_label_pc_2289c
  %v3_228b4 = phi i32 [ %v2_228b4, %bb ], [ %v2_228ad, %dec_label_pc_2289c ]
  ret i32 %v3_228b4
}

define i32 @function_228bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_228bb:
  %v0_228bc = load i32, i32* @eax, align 8
  ret i32 %v0_228bc
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_228be:
  ret i32 %arg2
}

define i32 @function_228d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_228d4:
  %v2_228d4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_228d4 = load i32, i32* @eax, align 8
  %v4_228d4 = trunc i32 %v3_228d4 to i8
  %v5_228d4 = add i8 %v4_228d4, %v2_228d4
  %v21_228d4 = inttoptr i32 %v3_228d4 to i8*
  store i8 %v5_228d4, i8* %v21_228d4, align 1
  %v0_228d6 = load i32, i32* @eax, align 8
  %v1_228d6 = load i32, i32* @ebp, align 4
  %v2_228d6 = add i32 %v1_228d6, -12
  %v3_228d6 = inttoptr i32 %v2_228d6 to i32*
  store i32 %v0_228d6, i32* %v3_228d6, align 4
  %v0_228db = load i32, i32* @ebp, align 4
  %v1_228db = add i32 %v0_228db, -28
  %v2_228db = inttoptr i32 %v1_228db to i32*
  %v3_228db = load i32, i32* %v2_228db, align 4
  store i32 %v3_228db, i32* @eax, align 8
  %v1_228de = add i32 %v0_228db, -32
  %v2_228de = inttoptr i32 %v1_228de to i32*
  %v3_228de = load i32, i32* %v2_228de, align 4
  %v2_228e8 = call i32 @function_3a7ba(i32 %v3_228db, i32 %v3_228de)
  %v0_228ed = load i32, i32* @ebp, align 4
  %v1_228ed = add i32 %v0_228ed, -28
  %v2_228ed = inttoptr i32 %v1_228ed to i32*
  %v3_228ed = load i32, i32* %v2_228ed, align 4
  %v1_228f0 = add i32 %v3_228ed, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_228f6 = inttoptr i32 %v1_228f0 to i32*
  %v2_228f6 = call i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEppEv(i32* %v1_228f6)
  %v0_228fb = load i32, i32* @ebp, align 4
  %v1_228fb = add i32 %v0_228fb, -28
  %v2_228fb = inttoptr i32 %v1_228fb to i32*
  %v3_228fb = load i32, i32* %v2_228fb, align 4
  %v1_228fe = inttoptr i32 %v3_228fb to i32*
  store i32 ptrtoint (%vtable_38c48_type* @global_var_38c48.2509 to i32), i32* %v1_228fe, align 4
  %v0_22904 = load i32, i32* @ebp, align 4
  %v1_22904 = add i32 %v0_22904, -28
  %v2_22904 = inttoptr i32 %v1_22904 to i32*
  %v3_22904 = load i32, i32* %v2_22904, align 4
  ret i32 %v3_22904

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38c48_type* @global_var_38c48.2509 to i32), { 2, 1, 0 }
}

define i32 @function_2290c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2290c:
  %v0_2290e = load i32, i32* @ebp, align 4
  %v1_2290e = add i32 %v0_2290e, -12
  %v2_2290e = inttoptr i32 %v1_2290e to i32*
  %v3_2290e = load i32, i32* %v2_2290e, align 4
  %v2_22911 = xor i32 %v3_2290e, 30
  %v3_22911 = icmp eq i32 %v2_22911, 0
  store i32 %v2_22911, i32* @eax, align 8
  br i1 %v3_22911, label %bb, label %dec_label_pc_2291a

bb:                                               ; preds = %dec_label_pc_2290c
  %v1_22918 = call i32 @function_2291f()
  br label %dec_label_pc_2291a

dec_label_pc_2291a:                               ; preds = %bb, %dec_label_pc_2290c
  %v2_22918 = phi i32 [ %v1_22918, %bb ], [ %v2_22911, %dec_label_pc_2290c ]
  ret i32 %v2_22918
}

define i32 @function_2291f() local_unnamed_addr {
dec_label_pc_2291f:
  %v0_22920 = load i32, i32* @eax, align 8
  ret i32 %v0_22920
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22922:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_2294d = call i32 @function_3a86a(i32 %tmp103, i32 %arg2)
  %v1_22955 = add i32 %tmp103, 28
  %v1_2295b = call i32 @_ZdlPv.1531(i32 %v1_22955)
  store i32 ptrtoint (%vtable_38be8_type* @global_var_38be8.2511 to i32), i32* %arg1, align 4
  %v1_2296c = add i32 %tmp103, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2296c = inttoptr i32 %v1_2296c to i32*
  store i32 ptrtoint (i32* @global_var_38c04.2512 to i32), i32* %v2_2296c, align 4
  %v2_22976 = inttoptr i32 %v1_22955 to i32*
  store i32 ptrtoint (i32* @global_var_38c14.2513 to i32), i32* %v2_22976, align 4
  %v1_22980 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_22990 = call i32 @function_32880(i32 %v1_2296c, i32 %v1_22980)
  store i32 0, i32* @eax, align 8
  %v1_229c6 = call i32 @function_229cd()
  ret i32 %v1_229c6

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38be8_type* @global_var_38be8.2511 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_229cd() local_unnamed_addr {
dec_label_pc_229cd:
  %v0_229d2 = load i32, i32* @eax, align 8
  ret i32 %v0_229d2
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE13_Rb_tree_implIS6_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_229d4:
  %v1_229f1 = call i32 @unknown_49e76(i32 %arg1)
  %v1_229f9 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_229f9 = inttoptr i32 %v1_229f9 to i32*
  store i32 0, i32* %v2_229f9, align 4
  %v1_22a03 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_22a03 = inttoptr i32 %v1_22a03 to i32*
  store i32 0, i32* %v2_22a03, align 4
  %v1_22a0d = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_22a0d = inttoptr i32 %v1_22a0d to i32*
  store i32 0, i32* %v2_22a0d, align 4
  %v1_22a17 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_22a17 = inttoptr i32 %v1_22a17 to i32*
  store i32 0, i32* %v2_22a17, align 4
  %v1_22a21 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_22a21 = inttoptr i32 %v1_22a21 to i32*
  store i32 0, i32* %v2_22a21, align 4
  %v1_22a2e = call i32 @unknown_49eac(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNKSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a46:
  %v1_22a69 = call i32 @unknown_49f74(i32 %arg2)
  %v2_22a78 = call i32 @unknown_49fa2(i32 %arg1, i32 %v1_22a69)
  store i32 %arg1, i32* @eax, align 8
  %v1_22a8a = call i32 @function_22a91()
  ret i32 %v1_22a8a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22a91() local_unnamed_addr {
dec_label_pc_22a91:
  %v0_22a92 = load i32, i32* @eax, align 8
  ret i32 %v0_22a92
}

define i32 @_ZNSaISt4pairIKjiEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22a96:
  %v1_22ab3 = call i32 @unknown_4a02e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_22ac2 = call i32 @function_22ac9()
  ret i32 %v1_22ac2
}

define i32 @function_22ac9() local_unnamed_addr {
dec_label_pc_22ac9:
  %v0_22aca = load i32, i32* @eax, align 8
  ret i32 %v0_22aca
}

define i32 @_ZNSt4pairIKjiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22acc:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEE7destroyEPS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22af6:
  %v1_22b19 = call i32 @unknown_455c2(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_22b28 = call i32 @function_22b2f()
  ret i32 %v1_22b28
}

define i32 @function_22b2f() local_unnamed_addr {
dec_label_pc_22b2f:
  %v0_22b30 = load i32, i32* @eax, align 8
  ret i32 %v0_22b30
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b32:
  %v3_22b64 = call i32 @unknown_4a0f4(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  %v1_22b73 = call i32 @function_22b7a()
  ret i32 %v1_22b73
}

define i32 @function_22b7a() local_unnamed_addr {
dec_label_pc_22b7a:
  %v0_22b7b = load i32, i32* @eax, align 8
  ret i32 %v0_22b7b
}

define i32 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b7c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_22b9a = ptrtoint i32* %stack_var_-37 to i32
  %v2_22b9d = ptrtoint i32* %stack_var_-32 to i32
  %v2_22ba7 = call i32 @unknown_4a17f(i32 %v2_22b9a, i32 %v2_22b9d)
  %v3_22baf = load i32, i32* %stack_var_-32, align 4
  %v0_22bb2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_22bc0 = call i32 @unknown_4a1b4(i32 %v3_22baf, i32 %arg2, i32 %v0_22bb2)
  store i32 %v3_22bc0, i32* @eax, align 8
  %v1_22bcf = call i32 @function_22bd6()
  ret i32 %v1_22bcf
}

define i32 @function_22bd6() local_unnamed_addr {
dec_label_pc_22bd6:
  %v0_22bda = load i32, i32* @eax, align 8
  ret i32 %v0_22bda
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22bdb:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_22bfb = load i32, i32* %arg1, align 4
  %v1_22c00 = inttoptr i32 %arg2 to i32*
  %v2_22c00 = load i32, i32* %v1_22c00, align 4
  %v7_22c02 = icmp ult i32 %v2_22bfb, %v2_22c00
  %v1_22c04 = icmp eq i1 %v7_22c02, false
  %storemerge = select i1 %v1_22c04, i32 %tmp101, i32 %arg2
  store i32 %storemerge, i32* @eax, align 8
  %v1_22c18 = call i32 @function_22c1f()
  ret i32 %v1_22c18

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_22c1f() local_unnamed_addr {
dec_label_pc_22c1f:
  %v0_22c20 = load i32, i32* @eax, align 8
  ret i32 %v0_22c20
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22c22:
  %v1_22c4b = call i32 @unknown_43566(i32 %arg1)
  %v10_22c50 = icmp ult i32 %v1_22c4b, %arg2
  %v1_22c53 = zext i1 %v10_22c50 to i32
  %v3_22c53 = and i32 %v1_22c4b, -256
  %v4_22c53 = or i32 %v1_22c53, %v3_22c53
  %v5_22c56 = icmp eq i1 %v10_22c50, false
  br i1 %v5_22c56, label %bb, label %dec_label_pc_22c5a

bb:                                               ; preds = %dec_label_pc_22c22
  %v1_22c58 = call i32 @function_22c5f()
  br label %dec_label_pc_22c5a

dec_label_pc_22c5a:                               ; preds = %bb, %dec_label_pc_22c22
  %v2_22c58 = phi i32 [ %v1_22c58, %bb ], [ %v4_22c53, %dec_label_pc_22c22 ]
  ret i32 %v2_22c58

; uselistorder directives
  uselistorder i1 %v10_22c50, { 1, 0 }
}

define i32 @function_22c5f() local_unnamed_addr {
dec_label_pc_22c5f:
  %v0_22c5f = load i32, i32* @ebp, align 4
  %v1_22c5f = add i32 %v0_22c5f, -32
  %v2_22c5f = inttoptr i32 %v1_22c5f to i32*
  %v3_22c5f = load i32, i32* %v2_22c5f, align 4
  ret i32 %v3_22c5f
}

define i32 @function_22c7a() local_unnamed_addr {
dec_label_pc_22c7a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22c7a = load i32, i32* %ecx.global-to-local, align 4
  %v1_22c7a = add i32 %v0_22c7a, -1
  store i32 %v1_22c7a, i32* %ecx.global-to-local, align 4
  %v0_22c7c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22c7c
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22c7d:
  store i32 0, i32* @eax, align 8
  %v3_22ca4 = call i32 @function_22cab(i32 %arg2, i32 %arg1)
  ret i32 %v3_22ca4
}

define i32 @function_22cab(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22cab:
  %v0_22cac = load i32, i32* @eax, align 8
  ret i32 %v0_22cac
}

define i32 @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22cad:
  %v3_22ce8 = call i32 @unknown_4a35d(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_22ce8, i32* @eax, align 8
  %v1_22cf7 = call i32 @function_22cfe()
  ret i32 %v1_22cf7
}

define i32 @function_22cfe() local_unnamed_addr {
dec_label_pc_22cfe:
  %v0_22cff = load i32, i32* @eax, align 8
  ret i32 %v0_22cff
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_() local_unnamed_addr {
dec_label_pc_22d00:
  %eax.global-to-local = alloca i32, align 4
  %v5_22d00 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_22d00
}

define i32 @function_22d02(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d02:
  %v0_22d05 = load i32, i32* @ebx, align 4
  %v1_22d05 = add i32 %v0_22d05, 1166608453
  %v2_22d05 = inttoptr i32 %v1_22d05 to i8*
  %v3_22d05 = load i8, i8* %v2_22d05, align 1
  %v4_22d05 = load i32, i32* @ecx, align 4
  %v5_22d05 = trunc i32 %v4_22d05 to i8
  %v6_22d05 = sub i8 %v3_22d05, %v5_22d05
  store i8 %v6_22d05, i8* %v2_22d05, align 1
  %v1_22d12 = load i32, i32* @ebp, align 4
  %v2_22d12 = add i32 %v1_22d12, -12
  %v3_22d12 = inttoptr i32 %v2_22d12 to i32*
  store i32 30, i32* %v3_22d12, align 4
  %v0_22d17 = load i32, i32* @ebp, align 4
  %v1_22d17 = add i32 %v0_22d17, -28
  %v2_22d17 = inttoptr i32 %v1_22d17 to i32*
  %v3_22d17 = load i32, i32* %v2_22d17, align 4
  store i32 %v3_22d17, i32* @eax, align 8
  %v1_22d1a = add i32 %v0_22d17, -12
  %v2_22d1a = inttoptr i32 %v1_22d1a to i32*
  %v3_22d1a = load i32, i32* %v2_22d1a, align 4
  %v3_22d1d = icmp eq i32 %v3_22d1a, 30
  br i1 %v3_22d1d, label %bb, label %dec_label_pc_22d26

bb:                                               ; preds = %dec_label_pc_22d02
  %v1_22d24 = call i32 @function_22d2b()
  br label %dec_label_pc_22d26

dec_label_pc_22d26:                               ; preds = %bb, %dec_label_pc_22d02
  %v3_22d24 = phi i32 [ %v1_22d24, %bb ], [ %v3_22d17, %dec_label_pc_22d02 ]
  ret i32 %v3_22d24
}

define i32 @function_22d2b() local_unnamed_addr {
dec_label_pc_22d2b:
  %v0_22d2c = load i32, i32* @eax, align 8
  ret i32 %v0_22d2c
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d2d:
  ret i32 %arg1
}

define i32 @function_22d4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d4c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_22d4c = load i32, i32* @eax, align 8
  %v1_22d4c = trunc i32 %v0_22d4c to i8
  %v2_22d4c = add i32 %v0_22d4c, 254
  %v6_22d4c = icmp ult i8 %v1_22d4c, 2
  store i1 %v6_22d4c, i1* %cf.global-to-local, align 1
  %v16_22d4c = and i32 %v2_22d4c, 255
  %v18_22d4c = and i32 %v0_22d4c, -256
  %v19_22d4c = or i32 %v16_22d4c, %v18_22d4c
  store i32 %v19_22d4c, i32* %eax.global-to-local, align 8
  %v0_22d4e = load i32, i32* @ebx, align 4
  %v1_22d4e = add i32 %v0_22d4e, 862319701
  %v2_22d4e = inttoptr i32 %v1_22d4e to i8*
  %v3_22d4e = load i8, i8* %v2_22d4e, align 1
  %v4_22d4e = load i32, i32* @ecx, align 4
  %v5_22d4e = trunc i32 %v4_22d4e to i8
  %v6_22d4e = add i8 %v5_22d4e, %v3_22d4e
  %v11_22d4e = icmp ult i8 %v6_22d4e, %v3_22d4e
  store i1 %v11_22d4e, i1* %cf.global-to-local, align 1
  store i8 %v6_22d4e, i8* %v2_22d4e, align 1
  %v0_22d54 = load i32, i32* %eax.global-to-local, align 8
  %v1_22d54 = load i1, i1* %cf.global-to-local, align 1
  %v2_22d54 = zext i1 %v1_22d54 to i32
  %v3_22d54 = add i32 %v0_22d54, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_22d54 = add i32 %v3_22d54, %v2_22d54
  %v20_22d54 = add i32 %v0_22d54, 20
  %v21_22d54 = add i32 %v20_22d54, %v2_22d54
  %v22_22d54 = icmp ule i32 %v21_22d54, %v0_22d54
  %v23_22d54 = icmp ugt i32 %v0_22d54, -21
  %v24_22d54 = select i1 %v1_22d54, i1 %v22_22d54, i1 %v23_22d54
  store i1 %v24_22d54, i1* %cf.global-to-local, align 1
  store i32 %v4_22d54, i32* %eax.global-to-local, align 8
  ret i32 %v4_22d54

; uselistorder directives
  uselistorder i8 %v3_22d4e, { 1, 0 }
  uselistorder i32 %v0_22d4c, { 1, 0, 2 }
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22d62:
  %v3_22d99 = call i32 @unknown_3b2ab(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_22d99, i32* @eax, align 8
  %v1_22da8 = call i32 @function_22daf()
  ret i32 %v1_22da8
}

define i32 @function_22daf() local_unnamed_addr {
dec_label_pc_22daf:
  %v0_22db0 = load i32, i32* @eax, align 8
  ret i32 %v0_22db0
}

define i32 @_ZNSaIN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22db2:
  %v1_22dcf = call i32 @unknown_4a4cc(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_22dde = call i32 @function_22de5()
  ret i32 %v1_22dde
}

define i32 @function_22de5() local_unnamed_addr {
dec_label_pc_22de5:
  %v0_22de6 = load i32, i32* @eax, align 8
  ret i32 %v0_22de6
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_22de8:
  store i32 0, i32* @eax, align 8
  %v2_22e09 = call i32 @function_22e10(i32 %arg1)
  ret i32 %v2_22e09
}

define i32 @function_22e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_22e10:
  %v0_22e11 = load i32, i32* @eax, align 8
  ret i32 %v0_22e11
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE10deallocateEPSB_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22e12:
  ret i32 %arg2
}

define i32 @function_22e48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22e48:
  %zf.global-to-local = alloca i1, align 1
  %v2_22e48 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_22e48 = load i32, i32* @eax, align 8
  %v4_22e48 = trunc i32 %v3_22e48 to i8
  %v5_22e48 = add i8 %v4_22e48, %v2_22e48
  %v15_22e48 = icmp eq i8 %v5_22e48, 0
  store i1 %v15_22e48, i1* %zf.global-to-local, align 1
  %v21_22e48 = inttoptr i32 %v3_22e48 to i8*
  store i8 %v5_22e48, i8* %v21_22e48, align 1
  %v0_22e4a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_22e4a, label %bb, label %dec_label_pc_22e48.dec_label_pc_22e4c_crit_edge

dec_label_pc_22e48.dec_label_pc_22e4c_crit_edge:  ; preds = %dec_label_pc_22e48
  %v2_22e4a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_22e4c

bb:                                               ; preds = %dec_label_pc_22e48
  %v1_22e4a = call i32 @function_22e51()
  br label %dec_label_pc_22e4c

dec_label_pc_22e4c:                               ; preds = %dec_label_pc_22e48.dec_label_pc_22e4c_crit_edge, %bb
  %v2_22e4a = phi i32 [ %v2_22e4a.pre, %dec_label_pc_22e48.dec_label_pc_22e4c_crit_edge ], [ %v1_22e4a, %bb ]
  ret i32 %v2_22e4a

; uselistorder directives
  uselistorder label %dec_label_pc_22e4c, { 1, 0 }
}

define i32 @function_22e51() local_unnamed_addr {
dec_label_pc_22e51:
  %v0_22e52 = load i32, i32* @eax, align 8
  ret i32 %v0_22e52
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost7variantINS2_10shared_ptrIvEENS2_8signals26detail23foreign_void_shared_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEEvT_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22e53:
  %v15_22e8c104 = icmp eq i32 %arg1, %arg2
  %v1_22e8f105 = icmp eq i1 %v15_22e8c104, false
  %v5_22e92109 = icmp eq i1 %v1_22e8f105, false
  %v1_22e94110 = icmp eq i1 %v5_22e92109, false
  br i1 %v1_22e94110, label %dec_label_pc_22e72, label %dec_label_pc_22e96

dec_label_pc_22e72:                               ; preds = %dec_label_pc_22e53, %dec_label_pc_22e72
  %stack_var_-32.0111 = phi i32 [ %v4_22e85, %dec_label_pc_22e72 ], [ %arg1, %dec_label_pc_22e53 ]
  %v1_22e78 = call i32 @unknown_4a597(i32 %stack_var_-32.0111)
  %v1_22e80 = call i32 @unknown_4a5c4(i32 %v1_22e78)
  %v4_22e85 = add i32 %stack_var_-32.0111, ptrtoint (i32* @global_var_c.2390 to i32)
  %v15_22e8c = icmp eq i32 %v4_22e85, %arg2
  %v1_22e8f = icmp eq i1 %v15_22e8c, false
  %v5_22e92 = icmp eq i1 %v1_22e8f, false
  %v1_22e94 = icmp eq i1 %v5_22e92, false
  br i1 %v1_22e94, label %dec_label_pc_22e72, label %dec_label_pc_22e96

dec_label_pc_22e96:                               ; preds = %dec_label_pc_22e72, %dec_label_pc_22e53
  store i32 0, i32* @eax, align 8
  %v1_22ea0 = call i32 @function_22ea7()
  ret i32 %v1_22ea0

; uselistorder directives
  uselistorder i32 %v4_22e85, { 1, 0 }
  uselistorder i32 %stack_var_-32.0111, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_22e72, { 1, 0 }
}

define i32 @function_22ea7() local_unnamed_addr {
dec_label_pc_22ea7:
  %v0_22ea8 = load i32, i32* @eax, align 8
  ret i32 %v0_22ea8
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22eaa:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_22ec7 = call i32 @unknown_4a650(i32 %tmp100)
  %v4_22ecc = trunc i32 %v1_22ec7 to i8
  %v2_22edc = load i32, i32* %arg1, align 4
  %not.v0_22ece = icmp ne i8 %v4_22ecc, 0
  %v1_22ed5 = sext i1 %not.v0_22ece to i32
  %storemerge = xor i32 %v1_22ed5, %v2_22edc
  store i32 %storemerge, i32* @eax, align 8
  %v1_22ee8 = call i32 @function_22eef()
  ret i32 %v1_22ee8
}

define i32 @function_22eef() local_unnamed_addr {
dec_label_pc_22eef:
  %v0_22ef0 = load i32, i32* @eax, align 8
  ret i32 %v0_22ef0
}

define i32 @_ZNK5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ef2:
  %v1_22f0f = call i32 @unknown_45ea2(i32 %arg1)
  store i32 %v1_22f0f, i32* @eax, align 8
  %v1_22f1e = call i32 @function_22f25()
  ret i32 %v1_22f1e
}

define i32 @function_22f25() local_unnamed_addr {
dec_label_pc_22f25:
  %v0_22f26 = load i32, i32* @eax, align 8
  ret i32 %v0_22f26
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_14invoke_visitorIKNS4_21lock_weak_ptr_visitorEEEPKvEENT_11result_typeEiiRSH_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_22f27:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22f69 = load i32, i32* %ecx.global-to-local, align 4
  %v0_22f6d = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_22f6d, 16777216
  %v9_22f90 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_22f69, 16777216
  %v10_22f90 = sdiv i32 %sext1, 16777216
  %v11_22f90 = call i32 @unknown_4a6ff(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %v9_22f90, i32 %v10_22f90, i32 0, i32 0)
  store i32 0, i32* %edx.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EE7addressEv() local_unnamed_addr {
dec_label_pc_22fb0:
  %eax.global-to-local = alloca i32, align 4
  %v17_22fb3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_22fb3
}

define i32 @function_22fb8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22fb8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_22fb8 = load i32, i32* @ecx, align 4
  %v1_22fb8 = add i32 %v0_22fb8, -1587157947
  %v2_22fb8 = inttoptr i32 %v1_22fb8 to i8*
  %v3_22fb8 = load i8, i8* %v2_22fb8, align 1
  %v5_22fb8 = trunc i32 %v0_22fb8 to i8
  %v6_22fb8 = or i8 %v3_22fb8, %v5_22fb8
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_22fb8, i8* %v2_22fb8, align 1
  %v0_22fbe = load i32, i32* @eax, align 8
  %v1_22fbe = trunc i32 %v0_22fbe to i8
  %v2_22fbe = load i1, i1* %cf.global-to-local, align 1
  %v3_22fbe = zext i1 %v2_22fbe to i8
  %v4_22fbe = add i8 %v3_22fbe, %v1_22fbe
  %v19_22fbe = icmp ule i8 %v4_22fbe, %v1_22fbe
  %v21_22fbe = icmp eq i1 %v2_22fbe, %v19_22fbe
  store i1 %v21_22fbe, i1* %cf.global-to-local, align 1
  %v22_22fbe = zext i8 %v4_22fbe to i32
  %v24_22fbe = and i32 %v0_22fbe, -256
  %v25_22fbe = or i32 %v22_22fbe, %v24_22fbe
  store i32 %v25_22fbe, i32* %eax.global-to-local, align 8
  %v1_22fc0 = inttoptr i32 %v25_22fbe to i8*
  %v2_22fc0 = load i8, i8* %v1_22fc0, align 1
  %v5_22fc0 = add i8 %v2_22fc0, %v4_22fbe
  store i8 %v5_22fc0, i8* %v1_22fc0, align 1
  %v0_22fc2 = load i32, i32* %eax.global-to-local, align 8
  %v1_22fc2 = load i32, i32* @ebp, align 4
  %v2_22fc2 = add i32 %v1_22fc2, -12
  %v3_22fc2 = inttoptr i32 %v2_22fc2 to i32*
  store i32 %v0_22fc2, i32* %v3_22fc2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_22fc7 = load i32, i32* @ebp, align 4
  %v1_22fc7 = add i32 %v0_22fc7, -28
  %v2_22fc7 = inttoptr i32 %v1_22fc7 to i32*
  %v3_22fc7 = load i32, i32* %v2_22fc7, align 4
  store i32 %v3_22fc7, i32* @eax, align 8
  %v1_22fca = add i32 %v0_22fc7, -12
  %v2_22fca = inttoptr i32 %v1_22fca to i32*
  %v3_22fca = load i32, i32* %v2_22fca, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_22fcd = icmp eq i32 %v3_22fca, 30
  br i1 %v3_22fcd, label %bb, label %dec_label_pc_22fd6

bb:                                               ; preds = %dec_label_pc_22fb8
  %v1_22fd4 = call i32 @function_22fdb()
  store i32 %v1_22fd4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22fd6

dec_label_pc_22fd6:                               ; preds = %bb, %dec_label_pc_22fb8
  %v2_22fd4 = phi i32 [ %v1_22fd4, %bb ], [ %v3_22fc7, %dec_label_pc_22fb8 ]
  ret i32 %v2_22fd4

; uselistorder directives
  uselistorder i8 %v4_22fbe, { 0, 2, 1 }
  uselistorder i8 %v1_22fbe, { 1, 0 }
}

define i32 @function_22fdb() local_unnamed_addr {
dec_label_pc_22fdb:
  %v0_22fdc = load i32, i32* @eax, align 8
  ret i32 %v0_22fdc
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9copy_intoEPKvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22fdd:
  ret i32 %arg2
}

define i32 @function_22ff0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ff0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_22ff0 = load i32, i32* @ebp, align 4
  %v1_22ff0 = add i32 %v0_22ff0, 1
  store i32 %v1_22ff0, i32* %ebp.global-to-local, align 4
  %v0_22ff1 = load i32, i32* @ecx, align 4
  %v1_22ff1 = add i32 %v0_22ff1, 1166793797
  %v2_22ff1 = inttoptr i32 %v1_22ff1 to i8*
  %v3_22ff1 = load i8, i8* %v2_22ff1, align 1
  %v5_22ff1 = trunc i32 %v0_22ff1 to i8
  %v6_22ff1 = load i1, i1* @cf, align 1
  %v7_22ff1 = zext i1 %v6_22ff1 to i8
  %v8_22ff1 = add i8 %v3_22ff1, %v5_22ff1
  %v9_22ff1 = add i8 %v7_22ff1, %v8_22ff1
  %v27_22ff1 = icmp ule i8 %v9_22ff1, %v3_22ff1
  %v28_22ff1 = icmp ult i8 %v8_22ff1, %v3_22ff1
  %v29_22ff1 = select i1 %v6_22ff1, i1 %v27_22ff1, i1 %v28_22ff1
  store i1 %v29_22ff1, i1* %cf.global-to-local, align 1
  store i8 %v9_22ff1, i8* %v2_22ff1, align 1
  %v0_22ff7 = load i32, i32* @eax, align 8
  %v1_22ff7 = trunc i32 %v0_22ff7 to i8
  %v2_22ff7 = load i1, i1* %cf.global-to-local, align 1
  %v3_22ff7 = zext i1 %v2_22ff7 to i8
  %v4_22ff7 = add i8 %v1_22ff7, -119
  %v5_22ff7 = add i8 %v4_22ff7, %v3_22ff7
  %v22_22ff7 = icmp ule i8 %v5_22ff7, %v1_22ff7
  %v23_22ff7 = icmp ugt i8 %v1_22ff7, 118
  %v24_22ff7 = select i1 %v2_22ff7, i1 %v22_22ff7, i1 %v23_22ff7
  %v25_22ff7 = zext i8 %v5_22ff7 to i32
  %v27_22ff7 = and i32 %v0_22ff7, -256
  %v28_22ff7 = or i32 %v25_22ff7, %v27_22ff7
  store i32 %v28_22ff7, i32* %eax.global-to-local, align 8
  %v0_22ff9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_22ff9 = add i32 %v0_22ff9, 1
  store i32 %v1_22ff9, i32* @ebp, align 4
  %v3_22ffd = zext i1 %v24_22ff7 to i8
  %v4_22ffd = add i8 %v3_22ffd, %v5_22ff7
  %v19_22ffd = icmp ule i8 %v4_22ffd, %v5_22ff7
  %v21_22ffd = icmp eq i1 %v24_22ff7, %v19_22ffd
  store i1 %v21_22ffd, i1* %cf.global-to-local, align 1
  %v22_22ffd = zext i8 %v4_22ffd to i32
  %v25_22ffd = or i32 %v22_22ffd, %v27_22ff7
  store i32 %v25_22ffd, i32* %eax.global-to-local, align 8
  %v1_22fff = inttoptr i32 %v25_22ffd to i8*
  %v2_22fff = load i8, i8* %v1_22fff, align 1
  %v5_22fff = add i8 %v2_22fff, %v4_22ffd
  store i8 %v5_22fff, i8* %v1_22fff, align 1
  %v0_23001 = load i32, i32* %eax.global-to-local, align 8
  %v1_23001 = load i32, i32* @ebp, align 4
  %v2_23001 = add i32 %v1_23001, -12
  %v3_23001 = inttoptr i32 %v2_23001 to i32*
  store i32 %v0_23001, i32* %v3_23001, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_23016 = load i32, i32* @ecx, align 4
  %v0_2301a = load i32, i32* @edx, align 8
  %v0_2301e = load i32, i32* @ebp, align 4
  %v1_2301e = add i32 %v0_2301e, -40
  %v2_2301e = inttoptr i32 %v1_2301e to i32*
  %v3_2301e = load i32, i32* %v2_2301e, align 4
  store i32 %v3_2301e, i32* %eax.global-to-local, align 8
  %v1_23025 = add i32 %v0_2301e, -36
  %v2_23025 = inttoptr i32 %v1_23025 to i32*
  %v3_23025 = load i32, i32* %v2_23025, align 4
  store i32 %v3_23025, i32* %eax.global-to-local, align 8
  %v1_2302c = add i32 %v0_2301e, -32
  %v2_2302c = inttoptr i32 %v1_2302c to i32*
  %v3_2302c = load i32, i32* %v2_2302c, align 4
  store i32 %v3_2302c, i32* %eax.global-to-local, align 8
  %v1_23033 = add i32 %v0_2301e, -28
  %v2_23033 = inttoptr i32 %v1_23033 to i32*
  %v3_23033 = load i32, i32* %v2_23033, align 4
  store i32 %v3_23033, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_2301a, 16777216
  %v8_23039 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_23016, 16777216
  %v9_23039 = sdiv i32 %sext1, 16777216
  %v10_23039 = call i32 @unknown_4adbd(i32 %v3_23033, i32 %v3_2302c, i32 %v3_23025, i32 %v3_2301e, i32 %v8_23039, i32 %v9_23039, i32 0, i32 0)
  store i32 %v10_23039, i32* %eax.global-to-local, align 8
  %v0_2303e = load i32, i32* @ebp, align 4
  %v1_2303e = add i32 %v0_2303e, -12
  %v2_2303e = inttoptr i32 %v1_2303e to i32*
  %v3_2303e = load i32, i32* %v2_2303e, align 4
  %v2_23041 = xor i32 %v3_2303e, 30
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_23041 = icmp eq i32 %v2_23041, 0
  store i32 %v2_23041, i32* @eax, align 8
  br i1 %v3_23041, label %bb, label %dec_label_pc_2304a

bb:                                               ; preds = %dec_label_pc_22ff0
  %v1_23048 = call i32 @function_2304f()
  store i32 %v1_23048, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2304a

dec_label_pc_2304a:                               ; preds = %bb, %dec_label_pc_22ff0
  %v2_23048 = phi i32 [ %v1_23048, %bb ], [ %v2_23041, %dec_label_pc_22ff0 ]
  ret i32 %v2_23048

; uselistorder directives
  uselistorder i32 %v0_2301e, { 1, 0, 2, 3 }
  uselistorder i8 %v4_22ffd, { 0, 2, 1 }
  uselistorder i8 %v5_22ff7, { 1, 0, 3, 2 }
  uselistorder i8 %v9_22ff1, { 1, 0 }
  uselistorder i8 %v8_22ff1, { 1, 0 }
}

define i32 @function_2304f() local_unnamed_addr {
dec_label_pc_2304f:
  %v0_23050 = load i32, i32* @eax, align 8
  ret i32 %v0_23050
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E12using_backupEv() local_unnamed_addr {
dec_label_pc_23052:
  %eax.global-to-local = alloca i32, align 4
  %v5_23052 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_23052
}

define i32 @function_23053(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23053:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_23053 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_23053, i32* @ebp, align 4
  %v2_2306c = load i32, i32* %arg1, align 4
  %tmp6 = icmp slt i32 %v2_2306c, 0
  %v2_2306e = zext i1 %tmp6 to i32
  store i32 %v2_2306e, i32* @eax, align 8
  %v2_2307b = call i32 @function_23082(i32 %tmp3)
  ret i32 %v2_2307b
}

define i32 @function_23082(i32 %arg1) local_unnamed_addr {
dec_label_pc_23082:
  %v0_23083 = load i32, i32* @eax, align 8
  ret i32 %v0_23083
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9destroyerEPvEENT_11result_typeEiiRSD_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23084:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_230bd = load i32, i32* %ecx.global-to-local, align 4
  %v0_230c1 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_230c1, 16777216
  %v12_230e0 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_230bd, 16777216
  %v13_230e0 = sdiv i32 %sext1, 16777216
  %v14_230e0 = call i32 @unknown_4b390(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_230e0, i32 %v13_230e0, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_230ef = call i32 @function_230f6()
  ret i32 %v1_230ef

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_230f6() local_unnamed_addr {
dec_label_pc_230f6:
  %v0_230f7 = load i32, i32* @eax, align 8
  ret i32 %v0_230f7
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_230f8:
  ret i32 30
}

define i32 @function_2311a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2311a:
  %v0_2311a = load i32, i32* @ebx, align 4
  %v1_2311a = add i32 %v0_2311a, 76145733
  %v2_2311a = inttoptr i32 %v1_2311a to i8*
  %v3_2311a = load i8, i8* %v2_2311a, align 1
  %v4_2311a = udiv i8 %v3_2311a, 16
  %v5_2311a = mul i8 %v3_2311a, 16
  %v6_2311a = or i8 %v4_2311a, %v5_2311a
  store i8 %v6_2311a, i8* %v2_2311a, align 1
  %v0_23121 = call i32 @unknown_4b930()
  %v1_23126 = load i32, i32* @ebp, align 4
  %v2_23126 = add i32 %v1_23126, -32
  %v3_23126 = inttoptr i32 %v2_23126 to i32*
  %v4_23126 = load i32, i32* %v3_23126, align 4
  %v10_23126 = icmp ult i32 %v0_23121, %v4_23126
  %v1_23129 = zext i1 %v10_23126 to i32
  %v3_23129 = and i32 %v0_23121, -256
  %v4_23129 = or i32 %v1_23129, %v3_23129
  %v5_2312c = icmp eq i1 %v10_23126, false
  br i1 %v5_2312c, label %bb, label %dec_label_pc_23130

bb:                                               ; preds = %dec_label_pc_2311a
  %v1_2312e = call i32 @function_23135()
  br label %dec_label_pc_23130

dec_label_pc_23130:                               ; preds = %bb, %dec_label_pc_2311a
  %v2_2312e = phi i32 [ %v1_2312e, %bb ], [ %v4_23129, %dec_label_pc_2311a ]
  ret i32 %v2_2312e

; uselistorder directives
  uselistorder i1 %v10_23126, { 1, 0 }
}

define i32 @function_23135() local_unnamed_addr {
dec_label_pc_23135:
  %v0_23135 = load i32, i32* @ebp, align 4
  %v1_23135 = add i32 %v0_23135, -32
  %v2_23135 = inttoptr i32 %v1_23135 to i32*
  %v3_23135 = load i32, i32* %v2_23135, align 4
  %v2_2313e = mul i32 %v3_23135, 12
  ret i32 %v2_2313e
}

define i32 @function_2314a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2314a:
  %v0_2314c = load i32, i32* @edx, align 8
  %v3_2314c = icmp eq i32 %v0_2314c, 30
  br i1 %v3_2314c, label %bb, label %dec_label_pc_2314a.dec_label_pc_23155_crit_edge

dec_label_pc_2314a.dec_label_pc_23155_crit_edge:  ; preds = %dec_label_pc_2314a
  %v2_23153.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_23155

bb:                                               ; preds = %dec_label_pc_2314a
  %v1_23153 = call i32 @function_2315a()
  br label %dec_label_pc_23155

dec_label_pc_23155:                               ; preds = %dec_label_pc_2314a.dec_label_pc_23155_crit_edge, %bb
  %v2_23153 = phi i32 [ %v2_23153.pre, %dec_label_pc_2314a.dec_label_pc_23155_crit_edge ], [ %v1_23153, %bb ]
  ret i32 %v2_23153

; uselistorder directives
  uselistorder label %dec_label_pc_23155, { 1, 0 }
}

define i32 @function_2315a() local_unnamed_addr {
dec_label_pc_2315a:
  %v0_2315b = load i32, i32* @eax, align 8
  ret i32 %v0_2315b
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_14invoke_visitorIKNS4_24expired_weak_ptr_visitorEEEPKvEENT_11result_typeEiiRSH_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2315c:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23195 = load i32, i32* %ecx.global-to-local, align 4
  %v0_23199 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23199, 16777216
  %v12_231b8 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_23195, 16777216
  %v13_231b8 = sdiv i32 %sext1, 16777216
  %v14_231b8 = call i32 @unknown_4ba12(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_231b8, i32 %v13_231b8, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_231b8, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_231c7 = call i32 @function_231ce()
  ret i32 %v1_231c7

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_231ce() local_unnamed_addr {
dec_label_pc_231ce:
  %v0_231cf = load i32, i32* @eax, align 8
  ret i32 %v0_231cf
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE8try_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_231d0:
  %v1_231ed = call i32 @function_3452e(i32 %arg1)
  store i32 %v1_231ed, i32* @eax, align 8
  %v1_231fc = call i32 @function_23203()
  ret i32 %v1_231fc
}

define i32 @function_23203() local_unnamed_addr {
dec_label_pc_23203:
  %v0_23204 = load i32, i32* @eax, align 8
  ret i32 %v0_23204
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23205:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23208 = load i32, i32* %esi.global-to-local, align 4
  %v0_23209 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23230 = call i32 @unknown_45f32(i32 %arg3)
  store i32 %v1_23230, i32* %esi.global-to-local, align 4
  %v1_2323d = call i32 @unknown_45f32(i32 %arg2)
  store i32 %v1_2323d, i32* %ebx.global-to-local, align 4
  %v1_2324a = call i32 @unknown_45f32(i32 %arg1)
  %v3_2325a = call i32 @unknown_4c060(i32 %v1_2324a, i32 %v1_2323d, i32 %v1_23230)
  store i32 %v0_23209, i32* %ebx.global-to-local, align 4
  store i32 %v0_23208, i32* %esi.global-to-local, align 4
  ret i32 %v3_2325a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_45f32, { 2, 1, 0 }
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEeqERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23278:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_23298 = load i32, i32* %arg1, align 4
  %v1_2329d = inttoptr i32 %arg2 to i32*
  %v2_2329d = load i32, i32* %v1_2329d, align 4
  %v12_2329f = icmp eq i32 %v2_23298, %v2_2329d
  %v1_232a1 = zext i1 %v12_2329f to i32
  %v3_232a1 = and i32 %v2_2329d, -256
  %v4_232a1 = or i32 %v1_232a1, %v3_232a1
  store i32 %v4_232a1, i32* @eax, align 8
  %v3_232ae = call i32 @function_232b5(i32 %arg2, i32 %tmp101)
  ret i32 %v3_232ae

; uselistorder directives
  uselistorder i32 %v2_2329d, { 1, 0 }
}

define i32 @function_232b5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_232b5:
  %v0_232b6 = load i32, i32* @eax, align 8
  ret i32 %v0_232b6
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_232b8:
  ret i32 %arg4
}

define i32 @function_232d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_232d8:
  %v1_232dd = load i32, i32* @ebp, align 4
  %v2_232dd = add i32 %v1_232dd, -12
  %v3_232dd = inttoptr i32 %v2_232dd to i32*
  store i32 30, i32* %v3_232dd, align 4
  %v0_232e2 = load i32, i32* @ebp, align 4
  %v1_232e2 = add i32 %v0_232e2, -44
  %v2_232e2 = inttoptr i32 %v1_232e2 to i32*
  %v3_232e2 = load i32, i32* %v2_232e2, align 4
  %v1_232e8 = call i32 @unknown_411de(i32 %v3_232e2)
  %v4_232ed = trunc i32 %v1_232e8 to i8
  %v5_232ed = icmp eq i8 %v4_232ed, 0
  %v1_232ef = icmp eq i1 %v5_232ed, false
  br i1 %v1_232ef, label %bb, label %dec_label_pc_232f1

bb:                                               ; preds = %dec_label_pc_232d8
  %v2_232ef = call i32 @function_23315()
  br label %dec_label_pc_232f1

dec_label_pc_232f1:                               ; preds = %bb, %dec_label_pc_232d8
  %v4_23301 = phi i32 [ %v2_232ef, %bb ], [ %v1_232e8, %dec_label_pc_232d8 ]
  ret i32 %v4_23301
}

define i32 @function_2330c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2330c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2330c = load i32, i32* @eax, align 8
  %v1_2330c = load i32, i32* @ebx, align 4
  store i32 %v1_2330c, i32* %eax.global-to-local, align 8
  store i32 %v0_2330c, i32* @ebx, align 4
  %v0_2330d = load i32, i32* @esp, align 4
  %v8_2330d = add i32 %v0_2330d, add (i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32))), i32 -24)
  %v23_2330d = inttoptr i32 %v8_2330d to i32*
  %v24_2330d = load i32, i32* @edi, align 8
  store i32 %v24_2330d, i32* %v23_2330d, align 4
  %v2_2330e = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_2330e = load i32, i32* %eax.global-to-local, align 8
  %v4_2330e = trunc i32 %v3_2330e to i8
  %v5_2330e = add i8 %v4_2330e, %v2_2330e
  %v21_2330e = inttoptr i32 %v3_2330e to i8*
  store i8 %v5_2330e, i8* %v21_2330e, align 1
  %v22_2330e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2330e
}

define i32 @function_23315() local_unnamed_addr {
dec_label_pc_23315:
  %v0_23315 = load i32, i32* @ebp, align 4
  %v1_23315 = add i32 %v0_23315, -32
  %v1_2331b = call i32 @unknown_41118(i32 %v1_23315)
  %v0_23320 = load i32, i32* @ebp, align 4
  %v1_23320 = add i32 %v0_23320, -52
  %v2_23320 = inttoptr i32 %v1_23320 to i32*
  %v3_23320 = load i32, i32* %v2_23320, align 4
  %v1_23323 = inttoptr i32 %v3_23320 to i32*
  %v2_23323 = load i32, i32* %v1_23323, align 4
  %v2_23325 = add i32 %v0_23320, -32
  %v3_23325 = inttoptr i32 %v2_23325 to i32*
  store i32 %v2_23323, i32* %v3_23325, align 4
  %v0_23328 = load i32, i32* @ebp, align 4
  %v1_23328 = add i32 %v0_23328, -20
  %v2_23328 = inttoptr i32 %v1_23328 to i32*
  store i32 0, i32* %v2_23328, align 4
  %v0_2332f = call i32 @function_23411()
  ret i32 %v0_2332f
}

define i32 @function_23334() local_unnamed_addr {
dec_label_pc_23334:
  %v0_23334 = load i32, i32* @ebp, align 4
  %v1_23334 = add i32 %v0_23334, -32
  %v1_2333a = call i32 @unknown_4c1a6(i32 %v1_23334)
  ret i32 %v1_2333a
}

define i32 @function_23342(i32 %arg1) local_unnamed_addr {
dec_label_pc_23342:
  %v0_23342 = call i32 @unknown_4c1d8()
  %v0_2334b = load i32, i32* @ebp, align 4
  %v1_2334b = add i32 %v0_2334b, -24
  %v2_23351 = call i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list2INS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrEEEEEE16initializer_node10initializeEPvRKSE_(i32 %v1_2334b, i32 %v0_23342)
  %v0_23356 = load i32, i32* @ebp, align 4
  %v1_23356 = add i32 %v0_23356, -48
  %v2_23356 = inttoptr i32 %v1_23356 to i8*
  %v3_23356 = load i8, i8* %v2_23356, align 1
  %v10_23356 = icmp eq i8 %v3_23356, 0
  br i1 %v10_23356, label %bb, label %dec_label_pc_2335c

bb:                                               ; preds = %dec_label_pc_23342
  %v1_2335a = call i32 @function_23377()
  %v0_2335c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2335c

dec_label_pc_2335c:                               ; preds = %bb, %dec_label_pc_23342
  %v0_2335c = phi i32 [ %v0_2335c.pre, %bb ], [ %v0_23356, %dec_label_pc_23342 ]
  %v1_2335c = add i32 %v0_2335c, -32
  %v1_23362 = call i32 @unknown_4c1a6(i32 %v1_2335c)
  %v1_2336a = call i32 @unknown_4c234(i32 %v1_23362)
  ret i32 %v1_2336a
}

define i32 @function_2336c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2336c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23372(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23372:
  %v3_23372 = call i32 @unknown_4c290(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 %v3_23372
}

define i32 @function_23377() local_unnamed_addr {
dec_label_pc_23377:
  %eax.global-to-local = alloca i32, align 4
  %v0_23377 = load i32, i32* @ebp, align 4
  %v1_23377 = add i32 %v0_23377, -32
  store i32 %v1_23377, i32* %eax.global-to-local, align 8
  %v1_2337d = call i32 @unknown_4c1a6(i32 %v1_23377)
  store i32 %v1_2337d, i32* %eax.global-to-local, align 8
  %v1_23385 = call i32 @unknown_4c234(i32 %v1_2337d)
  store i32 %v1_23385, i32* %eax.global-to-local, align 8
  %v1_2338d = call i32 @function_35ca4(i32 %v1_23385)
  %v1_23392 = trunc i32 %v1_2338d to i8
  %v2_23392 = load i32, i32* @ebp, align 4
  %v3_23392 = add i32 %v2_23392, -13
  %v4_23392 = inttoptr i32 %v3_23392 to i8*
  store i8 %v1_23392, i8* %v4_23392, align 1
  %v0_23395 = load i32, i32* @ebp, align 4
  %v1_23395 = add i32 %v0_23395, -24
  store i32 %v1_23395, i32* @eax, align 8
  %v1_2339b = call i32 @function_37ec0(i32 %v1_23395)
  store i32 %v1_2339b, i32* %eax.global-to-local, align 8
  %v0_233a0 = load i32, i32* @ebp, align 4
  %v1_233a0 = add i32 %v0_233a0, -13
  %v2_233a0 = inttoptr i32 %v1_233a0 to i8*
  %v3_233a0 = load i8, i8* %v2_233a0, align 1
  %v5_233a7 = icmp eq i8 %v3_233a0, 1
  %v1_23402 = add i32 %v0_233a0, -32
  store i32 %v1_23402, i32* %eax.global-to-local, align 8
  br i1 %v5_233a7, label %dec_label_pc_23402, label %dec_label_pc_233ab

dec_label_pc_233ab:                               ; preds = %dec_label_pc_23377
  %v1_233b1 = call i32 @unknown_4c1a6(i32 %v1_23402)
  store i32 %v1_233b1, i32* %eax.global-to-local, align 8
  %v1_233b9 = call i32 @unknown_4c234(i32 %v1_233b1)
  store i32 %v1_233b9, i32* %eax.global-to-local, align 8
  %v1_233c1 = call i32 @unknown_4c2dc(i32 %v1_233b9)
  store i32 %v1_233c1, i32* %eax.global-to-local, align 8
  store i32 %v1_233c1, i32* @ebx, align 4
  %v0_233c8 = load i32, i32* @ebp, align 4
  %v1_233c8 = add i32 %v0_233c8, -44
  %v2_233c8 = inttoptr i32 %v1_233c8 to i32*
  %v3_233c8 = load i32, i32* %v2_233c8, align 4
  store i32 %v3_233c8, i32* %eax.global-to-local, align 8
  %v1_233ce = call i32 @unknown_415ac(i32 %v3_233c8)
  store i32 %v1_233ce, i32* %eax.global-to-local, align 8
  %v1_233d6 = call i32 @unknown_41608(i32 %v1_233ce)
  %v0_233dd = load i32, i32* @ebp, align 4
  %v1_233dd = add i32 %v0_233dd, -60
  store i32 %v1_233dd, i32* %eax.global-to-local, align 8
  %v1_233e0 = add i32 %v0_233dd, -32
  %v0_233e7 = load i32, i32* @ebx, align 4
  %v4_233f2 = call i32 @unknown_4c30c(i32 %v1_233dd, i32 %v1_233d6, i32 %v0_233e7, i32 %v1_233e0)
  store i32 %v4_233f2, i32* %eax.global-to-local, align 8
  %v0_233fa = load i32, i32* @ebp, align 4
  %v1_233fa = add i32 %v0_233fa, -60
  %v2_233fa = inttoptr i32 %v1_233fa to i32*
  %v3_233fa = load i32, i32* %v2_233fa, align 4
  store i32 %v3_233fa, i32* %eax.global-to-local, align 8
  %v2_233fd = add i32 %v0_233fa, -32
  %v3_233fd = inttoptr i32 %v2_233fd to i32*
  store i32 %v3_233fa, i32* %v3_233fd, align 4
  br label %dec_label_pc_2340d

dec_label_pc_23402:                               ; preds = %dec_label_pc_23377
  %v1_23408 = call i32 @unknown_4c50c(i32 %v1_23402)
  store i32 %v1_23408, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2340d

dec_label_pc_2340d:                               ; preds = %dec_label_pc_23402, %dec_label_pc_233ab
  %v0_2340d = load i32, i32* @ebp, align 4
  %v1_2340d = add i32 %v0_2340d, -20
  %v2_2340d = inttoptr i32 %v1_2340d to i32*
  %v3_2340d = load i32, i32* %v2_2340d, align 4
  %v4_2340d = add i32 %v3_2340d, 1
  store i32 %v4_2340d, i32* %v2_2340d, align 4
  %v22_2340d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2340d

; uselistorder directives
  uselistorder i32 %v1_23402, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @function_35ca4, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_4c234, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_4c1a6, { 3, 2, 1, 0 }
}

define i32 @function_23411() local_unnamed_addr {
dec_label_pc_23411:
  %v0_23411 = load i32, i32* @ebp, align 4
  %v1_23411 = add i32 %v0_23411, -44
  %v2_23411 = inttoptr i32 %v1_23411 to i32*
  %v3_23411 = load i32, i32* %v2_23411, align 4
  %v1_23417 = call i32 @unknown_415ac(i32 %v3_23411)
  %v1_2341f = call i32 @unknown_41608(i32 %v1_23417)
  %v0_23426 = load i32, i32* @ebp, align 4
  %v1_23426 = add i32 %v0_23426, -28
  %v2_23430 = call i32 @unknown_41772(i32 %v1_23426, i32 %v1_2341f)
  %v0_23438 = load i32, i32* @ebp, align 4
  %v1_23438 = add i32 %v0_23438, -28
  %v1_2343f = add i32 %v0_23438, -32
  %v2_23445 = call i32 @unknown_4c166(i32 %v1_2343f, i32 %v1_23438)
  %v4_2344a = trunc i32 %v2_23445 to i8
  %v5_2344a = icmp eq i8 %v4_2344a, 0
  br i1 %v5_2344a, label %dec_label_pc_23463, label %dec_label_pc_2344e

dec_label_pc_2344e:                               ; preds = %dec_label_pc_23411
  %v0_2344e = load i32, i32* @ebp, align 4
  %v1_2344e = add i32 %v0_2344e, -56
  %v2_2344e = inttoptr i32 %v1_2344e to i32*
  %v3_2344e = load i32, i32* %v2_2344e, align 4
  %v10_2344e = icmp eq i32 %v3_2344e, 0
  br i1 %v10_2344e, label %dec_label_pc_23468, label %dec_label_pc_23454

dec_label_pc_23454:                               ; preds = %dec_label_pc_2344e
  %v1_23454 = add i32 %v0_2344e, -20
  %v2_23454 = inttoptr i32 %v1_23454 to i32*
  %v3_23454 = load i32, i32* %v2_23454, align 4
  %v4_23457 = load i32, i32* %v2_2344e, align 4
  %v10_23457 = icmp ult i32 %v3_23454, %v4_23457
  %v1_2345a = icmp eq i1 %v10_23457, false
  br i1 %v1_2345a, label %dec_label_pc_23463, label %dec_label_pc_23468

dec_label_pc_23463:                               ; preds = %dec_label_pc_23454, %dec_label_pc_23411
  br label %dec_label_pc_23468

dec_label_pc_23468:                               ; preds = %dec_label_pc_2344e, %dec_label_pc_23454, %dec_label_pc_23463
  %storemerge = phi i1 [ false, %dec_label_pc_23463 ], [ true, %dec_label_pc_23454 ], [ true, %dec_label_pc_2344e ]
  br i1 %storemerge, label %bb, label %dec_label_pc_23470

bb:                                               ; preds = %dec_label_pc_23468
  %v2_2346a = call i32 @function_23334()
  br label %dec_label_pc_23470

dec_label_pc_23470:                               ; preds = %bb, %dec_label_pc_23468
  %v0_23470 = load i32, i32* @ebp, align 4
  %v1_23470 = add i32 %v0_23470, -44
  %v2_23470 = inttoptr i32 %v1_23470 to i32*
  %v3_23470 = load i32, i32* %v2_23470, align 4
  %v1_23473 = add i32 %v0_23470, -32
  %v2_23473 = inttoptr i32 %v1_23473 to i32*
  %v3_23473 = load i32, i32* %v2_23473, align 4
  %v2_23476 = add i32 %v3_23470, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_23476 = inttoptr i32 %v2_23476 to i32*
  store i32 %v3_23473, i32* %v3_23476, align 4
  %v0_23479 = load i32, i32* @ebp, align 4
  %v1_23479 = add i32 %v0_23479, -12
  %v2_23479 = inttoptr i32 %v1_23479 to i32*
  %v3_23479 = load i32, i32* %v2_23479, align 4
  %v2_2347c = xor i32 %v3_23479, 30
  %v3_2347c = icmp eq i32 %v2_2347c, 0
  store i32 %v2_2347c, i32* @eax, align 8
  br i1 %v3_2347c, label %bb6, label %dec_label_pc_23485

bb6:                                              ; preds = %dec_label_pc_23470
  %v1_23483 = call i32 @function_234a3()
  store i32 %v1_23483, i32* @eax, align 8
  br label %dec_label_pc_23485

dec_label_pc_23485:                               ; preds = %bb6, %dec_label_pc_23470
  %v0_23485 = call i32 @function_2349e()
  ret i32 %v0_23485

; uselistorder directives
  uselistorder label %dec_label_pc_23468, { 2, 1, 0 }
}

define i32 @function_23488() local_unnamed_addr {
dec_label_pc_23488:
  %eax.global-to-local = alloca i32, align 4
  %v0_23488 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23488
}

define i32 @function_2349e() local_unnamed_addr {
dec_label_pc_2349e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_234a3() local_unnamed_addr {
dec_label_pc_234a3:
  %v0_234a3 = load i32, i32* @ebp, align 4
  %v1_234a3 = add i32 %v0_234a3, -4
  %v2_234a3 = inttoptr i32 %v1_234a3 to i32*
  %v3_234a3 = load i32, i32* %v2_234a3, align 4
  store i32 %v3_234a3, i32* @ebx, align 4
  %v0_234a7 = load i32, i32* @eax, align 8
  ret i32 %v0_234a7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE4swapERSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_234a8:
  %v2_234d2 = call i32 @unknown_4c735(i32 %arg1, i32 %arg2)
  %v1_234da = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_234e0 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_234e0, i32* @eax, align 8
  %v2_234ea = call i32 @function_33a3a(i32 %v1_234e0, i32 %v1_234da)
  store i32 0, i32* @eax, align 8
  %v1_234f9 = call i32 @function_23500()
  ret i32 %v1_234f9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23500() local_unnamed_addr {
dec_label_pc_23500:
  %v0_23501 = load i32, i32* @eax, align 8
  ret i32 %v0_23501
}

define i32 @_ZN5boost8optionalISsEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23502:
  %v1_2351f = call i32 @unknown_4c7da(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2352e = call i32 @function_23535()
  ret i32 %v1_2352e
}

define i32 @function_23535() local_unnamed_addr {
dec_label_pc_23535:
  %v0_23536 = load i32, i32* @eax, align 8
  ret i32 %v0_23536
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23538:
  %v2_23556 = call i32 @unknown_462ea(i32 %arg1)
  %v4_23569 = call i32 @unknown_4c882(i32 %arg1, i32 10)
  %v2_23574 = call i32 @unknown_4c84c(i32 %arg1)
  %v2_2357e = add i32 %arg1, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v3_2357e = inttoptr i32 %v2_2357e to i32*
  store i32 %v2_23574, i32* %v3_2357e, align 4
  %v1_23584 = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_23584 = inttoptr i32 %v1_23584 to i32*
  store i32 0, i32* %v2_23584, align 4
  %v2_23594 = call i32 @unknown_46b60(i32 %arg1)
  %v4_23599 = trunc i32 %v2_23594 to i8
  %v5_23599 = icmp eq i8 %v4_23599, 0
  %v1_2359b = icmp eq i1 %v5_23599, false
  br i1 %v1_2359b, label %bb, label %dec_label_pc_2359d

bb:                                               ; preds = %dec_label_pc_23538
  %v2_2359b = call i32 @function_235e7()
  br label %dec_label_pc_2359d

dec_label_pc_2359d:                               ; preds = %bb, %dec_label_pc_23538
  %v3_235b5 = phi i32 [ %v2_2359b, %bb ], [ %v2_23594, %dec_label_pc_23538 ]
  ret i32 %v3_235b5
}

define i32 @function_235c0() local_unnamed_addr {
dec_label_pc_235c0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_235c0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_235c0 = add i32 %v0_235c0, -465204285
  %v2_235c0 = inttoptr i32 %v1_235c0 to i32*
  %v3_235c0 = load i32, i32* %v2_235c0, align 4
  %v4_235c0 = add i32 %v3_235c0, -1
  store i32 %v4_235c0, i32* %v2_235c0, align 4
  %v0_235c6 = load i32, i32* %eax.global-to-local, align 8
  %v1_235c9 = call i32 @unknown_4173e(i32 %v0_235c6)
  store i32 %v1_235c9, i32* %eax.global-to-local, align 8
  %v0_235ce = call i32 @function_235d2()
  store i32 %v0_235ce, i32* %eax.global-to-local, align 8
  ret i32 %v0_235ce
}

define i32 @function_235d0() local_unnamed_addr {
dec_label_pc_235d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_235d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_235d0
}

define i32 @function_235d2() local_unnamed_addr {
dec_label_pc_235d2:
  %v0_235d2 = load i32, i32* @ebp, align 4
  %v1_235d2 = add i32 %v0_235d2, -28
  %v2_235d2 = inttoptr i32 %v1_235d2 to i32*
  %v3_235d2 = load i32, i32* %v2_235d2, align 4
  %v1_235d8 = call i32 @unknown_40cee(i32 %v3_235d2)
  ret i32 %v1_235d8
}

define i32 @function_235de() local_unnamed_addr {
dec_label_pc_235de:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_235e7() local_unnamed_addr {
dec_label_pc_235e7:
  %v0_235e7 = load i32, i32* @ebp, align 4
  %v1_235e7 = add i32 %v0_235e7, -12
  %v2_235e7 = inttoptr i32 %v1_235e7 to i32*
  %v3_235e7 = load i32, i32* %v2_235e7, align 4
  %v2_235ea = xor i32 %v3_235e7, 30
  ret i32 %v2_235ea
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_235fe:
  store i32 0, i32* @eax, align 8
  %v2_2361f = call i32 @function_23626(i32 %arg1)
  ret i32 %v2_2361f
}

define i32 @function_23626(i32 %arg1) local_unnamed_addr {
dec_label_pc_23626:
  %v0_23627 = load i32, i32* @eax, align 8
  ret i32 %v0_23627
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8is_validEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23628:
  ret i32 1
}

define i32 @function_23650(i32 %arg1) local_unnamed_addr {
dec_label_pc_23650:
  %ecx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %v0_23650 = load i32, i32* @eax, align 8
  %v1_23650 = load i32, i32* @ecx, align 4
  store i32 %v1_23650, i32* @eax, align 8
  store i32 %v0_23650, i32* %ecx.global-to-local, align 4
  %tmp = trunc i32 %v0_23650 to i8
  %v4_23651 = trunc i32 %v1_23650 to i8
  %v5_23651 = add i8 %v4_23651, %tmp
  %v16_23651 = icmp slt i8 %v5_23651, 0
  store i1 %v16_23651, i1* %sf.global-to-local, align 1
  %v21_23651 = inttoptr i32 %v1_23650 to i8*
  store i8 %v5_23651, i8* %v21_23651, align 1
  %v0_23653 = load i32, i32* @ebx, align 4
  %v1_23653 = add i32 %v0_23653, 1082909765
  %v2_23653 = inttoptr i32 %v1_23653 to i8*
  %v3_23653 = load i8, i8* %v2_23653, align 1
  %v4_23653 = load i32, i32* %ecx.global-to-local, align 4
  %v5_23653 = trunc i32 %v4_23653 to i8
  %v6_23653 = add i8 %v5_23653, %v3_23653
  %v17_23653 = icmp slt i8 %v6_23653, 0
  store i1 %v17_23653, i1* %sf.global-to-local, align 1
  store i8 %v6_23653, i8* %v2_23653, align 1
  %v0_23659 = load i1, i1* %sf.global-to-local, align 1
  br i1 %v0_23659, label %bb, label %dec_label_pc_2365b

bb:                                               ; preds = %dec_label_pc_23650
  %v1_23659 = call i32 @function_235de()
  br label %dec_label_pc_2365b

dec_label_pc_2365b:                               ; preds = %bb, %dec_label_pc_23650
  %v0_2365c = load i32, i32* @edi, align 8
  %v1_2365c = add i32 %v0_2365c, ptrtoint (i32* @global_var_7.2402 to i32)
  %v2_2365c = inttoptr i32 %v1_2365c to i32*
  %v3_2365c = load i32, i32* %v2_2365c, align 4
  %v4_2365c = load i32, i32* @esi, align 4
  %v5_2365c = or i32 %v4_2365c, %v3_2365c
  %v7_2365c = icmp slt i32 %v5_2365c, 0
  store i1 %v7_2365c, i1* %sf.global-to-local, align 1
  store i32 %v5_2365c, i32* %v2_2365c, align 4
  store i32 0, i32* @eax, align 8
  %v0_23664 = call i32 @function_236e5()
  ret i32 %v0_23664

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_7.2402 to i32), { 1, 2, 0 }
}

define i32 @function_23666() local_unnamed_addr {
dec_label_pc_23666:
  %v0_23666 = load i32, i32* @ebp, align 4
  %v1_23666 = add i32 %v0_23666, -28
  %v2_23666 = inttoptr i32 %v1_23666 to i32*
  %v3_23666 = load i32, i32* %v2_23666, align 4
  %v1_2366c = call i32 @unknown_4c9b6(i32 %v3_23666)
  %v1_23671 = xor i32 %v1_2366c, 1
  %v4_23671 = trunc i32 %v1_23671 to i8
  %v5_23674 = icmp eq i8 %v4_23671, 0
  br i1 %v5_23674, label %bb, label %dec_label_pc_23678

dec_label_pc_23678:                               ; preds = %dec_label_pc_23666
  %v0_23678 = load i32, i32* @ebp, align 4
  %v1_23678 = add i32 %v0_23678, -28
  %v2_23678 = inttoptr i32 %v1_23678 to i32*
  %v3_23678 = load i32, i32* %v2_23678, align 4
  %v1_2367b = add i32 %v3_23678, 120
  %v2_2367b = inttoptr i32 %v1_2367b to i32*
  %v3_2367b = load i32, i32* %v2_2367b, align 4
  %tmp102 = icmp ult i32 %v3_2367b, 11
  br i1 %tmp102, label %dec_label_pc_2368f, label %bb

dec_label_pc_2368f:                               ; preds = %dec_label_pc_23678
  br label %dec_label_pc_23693

bb:                                               ; preds = %dec_label_pc_23666, %dec_label_pc_23678
  %v1_23691 = call i32 @function_2369a()
  br label %dec_label_pc_23693

dec_label_pc_23693:                               ; preds = %dec_label_pc_2368f, %bb
  %v2_23691 = phi i32 [ %v1_23691, %bb ], [ 1, %dec_label_pc_2368f ]
  ret i32 %v2_23691

; uselistorder directives
  uselistorder label %dec_label_pc_23693, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_23696(i32 %arg1) local_unnamed_addr {
dec_label_pc_23696:
  %v2_23696 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23696 = load i32, i32* @eax, align 8
  %v4_23696 = trunc i32 %v3_23696 to i8
  %v5_23696 = add i8 %v4_23696, %v2_23696
  %v21_23696 = inttoptr i32 %v3_23696 to i8*
  store i8 %v5_23696, i8* %v21_23696, align 1
  %v0_23698 = call i32 @function_236e5()
  ret i32 %v0_23698
}

define i32 @function_2369a() local_unnamed_addr {
dec_label_pc_2369a:
  %v0_2369a = load i32, i32* @ebp, align 4
  %v1_2369a = add i32 %v0_2369a, -28
  %v2_2369a = inttoptr i32 %v1_2369a to i32*
  %v3_2369a = load i32, i32* %v2_2369a, align 4
  %v1_2369d = add i32 %v3_2369a, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v2_2369d = inttoptr i32 %v1_2369d to i32*
  %v3_2369d = load i32, i32* %v2_2369d, align 4
  %v1_236a6 = call i32 @unknown_4c93c(i32 %v3_2369a)
  %v12_236ab = icmp eq i32 %v3_2369d, %v1_236a6
  %v5_236b0 = icmp eq i1 %v12_236ab, false
  %v0_236c6.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %v0_236c6.pre, -28
  %.pre4 = inttoptr i32 %.pre to i32*
  br i1 %v5_236b0, label %dec_label_pc_236c6, label %dec_label_pc_236b4

dec_label_pc_236b4:                               ; preds = %dec_label_pc_2369a
  %v3_236b4 = load i32, i32* %.pre4, align 4
  %v1_236b7 = add i32 %v3_236b4, 120
  %v2_236b7 = inttoptr i32 %v1_236b7 to i32*
  %v3_236b7 = load i32, i32* %v2_236b7, align 4
  %tmp5 = icmp ult i32 %v3_236b7, 11
  br i1 %tmp5, label %dec_label_pc_236c6, label %dec_label_pc_236bf

dec_label_pc_236bf:                               ; preds = %dec_label_pc_236b4
  store i32 0, i32* @eax, align 8
  %v0_236c4 = call i32 @function_236e5()
  ret i32 %v0_236c4

dec_label_pc_236c6:                               ; preds = %dec_label_pc_2369a, %dec_label_pc_236b4
  %v3_236c6 = load i32, i32* %.pre4, align 4
  %v1_236c9 = add i32 %v3_236c6, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_236c9 = inttoptr i32 %v1_236c9 to i32*
  %v3_236c9 = load i32, i32* %v2_236c9, align 4
  %v1_236d2 = add i32 %v3_236c6, 120
  %v2_236d2 = inttoptr i32 %v1_236d2 to i32*
  %v3_236d2 = load i32, i32* %v2_236d2, align 4
  %tmp6 = icmp ugt i32 %v3_236c9, %v3_236d2
  br i1 %tmp6, label %dec_label_pc_236d9, label %dec_label_pc_236e0

dec_label_pc_236d9:                               ; preds = %dec_label_pc_236c6
  store i32 0, i32* @eax, align 8
  %v0_236de = call i32 @function_236e5()
  ret i32 %v0_236de

dec_label_pc_236e0:                               ; preds = %dec_label_pc_236c6
  ret i32 1

; uselistorder directives
  uselistorder i32 ()* @function_236e5, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_236c6, { 1, 0 }
}

define i32 @function_236e5() local_unnamed_addr {
dec_label_pc_236e5:
  %v0_236e5 = load i32, i32* @ebp, align 4
  %v1_236e5 = add i32 %v0_236e5, -12
  %v2_236e5 = inttoptr i32 %v1_236e5 to i32*
  %v3_236e5 = load i32, i32* %v2_236e5, align 4
  store i1 false, i1* @cf, align 1
  %v3_236e8 = icmp eq i32 %v3_236e5, 30
  br i1 %v3_236e8, label %bb, label %dec_label_pc_236e5.dec_label_pc_236f1_crit_edge

dec_label_pc_236e5.dec_label_pc_236f1_crit_edge:  ; preds = %dec_label_pc_236e5
  %v2_236ef.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_236f1

bb:                                               ; preds = %dec_label_pc_236e5
  %v1_236ef = call i32 @function_236f6()
  br label %dec_label_pc_236f1

dec_label_pc_236f1:                               ; preds = %dec_label_pc_236e5.dec_label_pc_236f1_crit_edge, %bb
  %v2_236ef = phi i32 [ %v2_236ef.pre, %dec_label_pc_236e5.dec_label_pc_236f1_crit_edge ], [ %v1_236ef, %bb ]
  ret i32 %v2_236ef

; uselistorder directives
  uselistorder label %dec_label_pc_236f1, { 1, 0 }
}

define i32 @function_236f6() local_unnamed_addr {
dec_label_pc_236f6:
  %v0_236f6 = load i32, i32* @esp, align 4
  %v5_236f6 = icmp ugt i32 %v0_236f6, -53
  store i1 %v5_236f6, i1* @cf, align 1
  %v0_236fb = load i32, i32* @eax, align 8
  ret i32 %v0_236fb
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyERKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_236fc:
  ret i32 %arg2
}

define i32 @function_2370e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2370e:
  %v1_23714 = load i32, i32* @ebp, align 4
  %v2_23714 = add i32 %v1_23714, -12
  %v3_23714 = inttoptr i32 %v2_23714 to i32*
  store i32 30, i32* %v3_23714, align 4
  %v0_23719 = load i32, i32* @ebp, align 4
  %v1_23719 = add i32 %v0_23719, -28
  %v2_23719 = inttoptr i32 %v1_23719 to i32*
  %v3_23719 = load i32, i32* %v2_23719, align 4
  %v1_2371c = add i32 %v3_23719, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2371c = inttoptr i32 %v1_2371c to i32*
  %v3_2371c = load i32, i32* %v2_2371c, align 4
  %v1_23722 = icmp eq i32 %v3_2371c, 0
  br i1 %v1_23722, label %dec_label_pc_23745, label %dec_label_pc_23726

dec_label_pc_23726:                               ; preds = %dec_label_pc_2370e
  %v3_23726 = load i32, i32* %v2_23719, align 4
  %v1_23729 = add i32 %v3_23726, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_23729 = inttoptr i32 %v1_23729 to i32*
  %v3_23729 = load i32, i32* %v2_23729, align 4
  %v1_2372f = add i32 %v0_23719, -32
  %v2_2372f = inttoptr i32 %v1_2372f to i32*
  %v3_2372f = load i32, i32* %v2_2372f, align 4
  %v3_2373a = load i32, i32* %v2_23719, align 4
  %v3_23740 = call i32 @unknown_4cac0(i32 %v3_2373a, i32 %v3_23729, i32 %v3_2372f)
  %v0_23745.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_23745

dec_label_pc_23745:                               ; preds = %dec_label_pc_23726, %dec_label_pc_2370e
  %v0_23759 = phi i32 [ %v0_23745.pre, %dec_label_pc_23726 ], [ %v0_23719, %dec_label_pc_2370e ]
  %v1_23745 = add i32 %v0_23759, -28
  %v2_23745 = inttoptr i32 %v1_23745 to i32*
  %v3_23745 = load i32, i32* %v2_23745, align 4
  %v1_23748 = add i32 %v3_23745, 120
  %v2_23748 = inttoptr i32 %v1_23748 to i32*
  %v3_23748 = load i32, i32* %v2_23748, align 4
  %v1_2374e = add i32 %v3_23745, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v2_2374e = inttoptr i32 %v1_2374e to i32*
  %v3_2374e = load i32, i32* %v2_2374e, align 4
  %v3_23759 = load i32, i32* %v2_23745, align 4
  %v3_2375f = call i32 @unknown_4cb7a(i32 %v3_23759, i32 %v3_2374e, i32 %v3_23748)
  %v0_23764 = load i32, i32* @ebp, align 4
  %v1_23764 = add i32 %v0_23764, -12
  %v2_23764 = inttoptr i32 %v1_23764 to i32*
  %v3_23764 = load i32, i32* %v2_23764, align 4
  %v2_23767 = xor i32 %v3_23764, 30
  %v3_23767 = icmp eq i32 %v2_23767, 0
  store i32 %v2_23767, i32* @eax, align 8
  br i1 %v3_23767, label %bb, label %dec_label_pc_23770

bb:                                               ; preds = %dec_label_pc_23745
  %v1_2376e = call i32 @function_23775()
  br label %dec_label_pc_23770

dec_label_pc_23770:                               ; preds = %bb, %dec_label_pc_23745
  %v2_2376e = phi i32 [ %v1_2376e, %bb ], [ %v2_23767, %dec_label_pc_23745 ]
  ret i32 %v2_2376e
}

define i32 @function_23775() local_unnamed_addr {
dec_label_pc_23775:
  %v0_23776 = load i32, i32* @eax, align 8
  ret i32 %v0_23776
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23778:
  %v2_23792 = load i32, i32* %arg1, align 4
  %v1_23794 = icmp eq i32 %v2_23792, 0
  %v1_23796 = icmp eq i1 %v1_23794, false
  br i1 %v1_23796, label %dec_label_pc_237bc, label %dec_label_pc_23798

dec_label_pc_23798:                               ; preds = %dec_label_pc_23778
  br label %dec_label_pc_237bc

dec_label_pc_237bc:                               ; preds = %dec_label_pc_23798, %dec_label_pc_23778
  %v2_237bf = load i32, i32* %arg1, align 4
  store i32 %v2_237bf, i32* @eax, align 8
  %v1_237cb = call i32 @function_237d2()
  ret i32 %v1_237cb
}

define i32 @function_237d2() local_unnamed_addr {
dec_label_pc_237d2:
  %v0_237d3 = load i32, i32* @eax, align 8
  ret i32 %v0_237d3
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_237d4:
  %stack_var_-40 = alloca i32, align 4
  %v1_237f7 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_237fe = ptrtoint i32* %stack_var_-40 to i32
  %v3_23804 = call i32 @unknown_41668(i32 %v2_237fe, i32 %v1_237f7)
  %v2_2380f = call i32 @unknown_41ac8(i32 %arg1)
  %v2_23817 = call i32 @unknown_41b24(i32 %v2_2380f)
  %v2_23830 = call i32 @unknown_416fa(i32 %arg1)
  %v2_23842 = call i32 @unknown_4ccb2(i32 %arg1)
  %v2_2384f = call i32 @unknown_41ac8(i32 %arg1)
  %v2_23857 = call i32 @unknown_41b24(i32 %v2_2384f)
  ret i32 %v2_23857

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_2386b() local_unnamed_addr {
dec_label_pc_2386b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2386b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2386b
}

define i32 @function_23886(i32 %arg1) local_unnamed_addr {
dec_label_pc_23886:
  %v0_23886 = call i32 @unknown_4ce68()
  %v0_2388b = load i32, i32* @ebp, align 4
  %v1_2388b = add i32 %v0_2388b, -44
  %v2_2388b = inttoptr i32 %v1_2388b to i32*
  %v3_2388b = load i32, i32* %v2_2388b, align 4
  %v1_23891 = call i32 @unknown_41ac8(i32 %v3_2388b)
  %v1_23899 = call i32 @unknown_41b24(i32 %v1_23891)
  %v0_238a0 = load i32, i32* @ebp, align 4
  %v1_238a0 = add i32 %v0_238a0, -32
  %v2_238aa = call i32 @unknown_41c44(i32 %v1_238a0, i32 %v1_23899)
  %v0_238ba = load i32, i32* @ebp, align 4
  %v1_238ba = add i32 %v0_238ba, -32
  %v1_238c9 = add i32 %v0_238ba, -44
  %v2_238c9 = inttoptr i32 %v1_238c9 to i32*
  %v3_238c9 = load i32, i32* %v2_238c9, align 4
  %v4_238cf = call i32 @unknown_46a8c(i32 %v3_238c9, i32 0, i32 %v1_238ba, i32 0)
  %v0_238d4 = load i32, i32* @ebp, align 4
  %v1_238d4 = add i32 %v0_238d4, -36
  %v1_238da = call i32 @unknown_416b8(i32 %v1_238d4)
  %v0_238df = load i32, i32* @ebp, align 4
  %v1_238df = add i32 %v0_238df, -28
  %v2_238df = inttoptr i32 %v1_238df to i32*
  %v3_238df = load i32, i32* %v2_238df, align 4
  %v2_238e2 = xor i32 %v3_238df, 30
  %v3_238e2 = icmp eq i32 %v2_238e2, 0
  store i32 %v2_238e2, i32* @eax, align 8
  br i1 %v3_238e2, label %bb, label %dec_label_pc_238eb

bb:                                               ; preds = %dec_label_pc_23886
  %v1_238e9 = call i32 @function_23917()
  store i32 %v1_238e9, i32* @eax, align 8
  br label %dec_label_pc_238eb

dec_label_pc_238eb:                               ; preds = %bb, %dec_label_pc_23886
  %v0_238eb = call i32 @function_23912()
  ret i32 %v0_238eb

; uselistorder directives
  uselistorder i32 (i32)* @unknown_41b24, { 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_41ac8, { 0, 3, 2, 1 }
}

define i32 @function_238f6() local_unnamed_addr {
dec_label_pc_238f6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_238f6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_238f6 = add i32 %v0_238f6, -1996297229
  %v2_238f6 = inttoptr i32 %v1_238f6 to i32*
  %v3_238f6 = load i32, i32* %v2_238f6, align 4
  %v4_238f6 = add i32 %v3_238f6, -1
  store i32 %v4_238f6, i32* %v2_238f6, align 4
  %v0_238fc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_238fc
}

define i32 @function_23912() local_unnamed_addr {
dec_label_pc_23912:
  %v0_23912 = load i32, i32* @eax, align 8
  ret i32 %v0_23912
}

define i32 @function_23917() local_unnamed_addr {
dec_label_pc_23917:
  %v0_2391e = load i32, i32* @eax, align 8
  ret i32 %v0_2391e
}

define i32 @_ZNK5boost10shared_ptrINS_8signals219optional_last_valueISsEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23920:
  %v2_2393a = load i32, i32* %arg1, align 4
  %v1_2393c = icmp eq i32 %v2_2393a, 0
  %v1_2393e = icmp eq i1 %v1_2393c, false
  br i1 %v1_2393e, label %dec_label_pc_23964, label %dec_label_pc_23940

dec_label_pc_23940:                               ; preds = %dec_label_pc_23920
  br label %dec_label_pc_23964

dec_label_pc_23964:                               ; preds = %dec_label_pc_23940, %dec_label_pc_23920
  %v2_23967 = load i32, i32* %arg1, align 4
  store i32 %v2_23967, i32* @eax, align 8
  %v1_23973 = call i32 @function_2397a()
  ret i32 %v1_23973
}

define i32 @function_2397a() local_unnamed_addr {
dec_label_pc_2397a:
  %v0_2397b = load i32, i32* @eax, align 8
  ret i32 %v0_2397b
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2397c:
  %v2_2399c = load i32, i32* %arg2, align 4
  %v2_239a8 = call i32 @unknown_4d0a4(i32 %arg1, i32 %v2_2399c)
  store i32 %arg1, i32* @eax, align 8
  %v1_239ba = call i32 @function_239c1()
  ret i32 %v1_239ba

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_239c1() local_unnamed_addr {
dec_label_pc_239c1:
  %v0_239c2 = load i32, i32* @eax, align 8
  ret i32 %v0_239c2
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_239c6:
  %v2_239f0 = call i32 @unknown_4d0ee(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_23a02 = call i32 @function_23a09()
  ret i32 %v1_23a02

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23a09() local_unnamed_addr {
dec_label_pc_23a09:
  %v0_23a0a = load i32, i32* @eax, align 8
  ret i32 %v0_23a0a
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23a0e:
  %v1_23a29 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_23a36 = call i32 @unknown_46c86(i32 %arg1, i32 %v1_23a29)
  store i32 %v2_23a36, i32* @eax, align 8
  %v0_23a43 = call i32 @function_23bb2()
  ret i32 %v0_23a43
}

define i32 @function_23b26(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b26:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23b26 = load i32, i32* @ebp, align 4
  %v1_23b26 = add i32 %v0_23b26, 1
  store i32 %v1_23b26, i32* @ebp, align 4
  %v0_23b2c = load i32, i32* @ecx, align 4
  %v1_23b2c = trunc i32 %v0_23b2c to i8
  %v3_23b2c = add i32 %v0_23b2c, 12258384
  %v4_23b2c = inttoptr i32 %v3_23b2c to i8*
  %v5_23b2c = load i8, i8* %v4_23b2c, align 1
  %v6_23b2c = load i1, i1* @cf, align 1
  %v7_23b2c = zext i1 %v6_23b2c to i8
  %v8_23b2c = add i8 %v1_23b2c, %v5_23b2c
  %v9_23b2c = add i8 %v8_23b2c, %v7_23b2c
  %v30_23b2c = zext i8 %v9_23b2c to i32
  %v32_23b2c = and i32 %v0_23b2c, -256
  %v33_23b2c = or i32 %v30_23b2c, %v32_23b2c
  store i32 %v33_23b2c, i32* %ecx.global-to-local, align 4
  %v2_23b32 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23b32 = load i32, i32* @eax, align 8
  %v4_23b32 = trunc i32 %v3_23b32 to i8
  %v5_23b32 = add i8 %v4_23b32, %v2_23b32
  %v21_23b32 = inttoptr i32 %v3_23b32 to i8*
  store i8 %v5_23b32, i8* %v21_23b32, align 1
  %v0_23b34 = load i32, i32* @ebx, align 4
  %v2_23b34 = load i32, i32* %ecx.global-to-local, align 4
  %v3_23b34 = udiv i32 %v2_23b34, 256
  %v5_23b34 = add i32 %v3_23b34, %v0_23b34
  %v20_23b34 = urem i32 %v5_23b34, 256
  %v22_23b34 = and i32 %v0_23b34, -256
  %v23_23b34 = or i32 %v20_23b34, %v22_23b34
  store i32 %v23_23b34, i32* @ebx, align 4
  %v0_23b36 = load i32, i32* @eax, align 8
  %v1_23b36 = add i32 %v0_23b36, 443
  store i32 %v1_23b36, i32* %eax.global-to-local, align 8
  %v0_23b3b = load i32, i32* @ebp, align 4
  %v1_23b3b = add i32 %v0_23b3b, 76147781
  %v2_23b3b = inttoptr i32 %v1_23b3b to i8*
  %v3_23b3b = load i8, i8* %v2_23b3b, align 1
  %v5_23b3b = trunc i32 %v2_23b34 to i8
  %v6_23b3b = add i8 %v3_23b3b, %v5_23b3b
  store i8 %v6_23b3b, i8* %v2_23b3b, align 1
  %v0_23b41 = load i32, i32* %eax.global-to-local, align 8
  %v11_23b41 = and i32 %v0_23b41, -24
  store i32 %v11_23b41, i32* %eax.global-to-local, align 8
  %v1_23b45 = inttoptr i32 %v11_23b41 to i32*
  %v2_23b45 = load i32, i32* %v1_23b45, align 8
  %v4_23b45 = add i32 %v2_23b45, %v11_23b41
  store i32 %v4_23b45, i32* %v1_23b45, align 8
  %v0_23b4c = load i32, i32* @ebp, align 4
  %v1_23b4c = add i32 %v0_23b4c, -28
  %v2_23b4c = inttoptr i32 %v1_23b4c to i32*
  %v3_23b4c = load i32, i32* %v2_23b4c, align 4
  store i32 %v3_23b4c, i32* %eax.global-to-local, align 8
  ret i32 %v3_23b4c

; uselistorder directives
  uselistorder i32 %v11_23b41, { 0, 2, 1 }
  uselistorder i32 %v2_23b34, { 1, 0 }
  uselistorder i32 %v0_23b34, { 1, 0 }
}

define i32 @function_23b52(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b52:
  %v0_23b52 = call i32 @unknown_4cc62()
  %v0_23b57 = load i32, i32* @ebp, align 4
  %v1_23b57 = add i32 %v0_23b57, -28
  %v2_23b57 = inttoptr i32 %v1_23b57 to i32*
  %v3_23b57 = load i32, i32* %v2_23b57, align 4
  %v1_23b5a = add i32 %v3_23b57, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_23b67 = call i32 @unknown_4c8bc(i32 %v3_23b57, i32 %v1_23b5a)
  %v0_23b74 = load i32, i32* @ebp, align 4
  %v1_23b74 = add i32 %v0_23b74, -28
  %v2_23b74 = inttoptr i32 %v1_23b74 to i32*
  %v3_23b74 = load i32, i32* %v2_23b74, align 4
  %v1_23b77 = add i32 %v3_23b74, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_23b84 = call i32 @unknown_46c86(i32 %v3_23b74, i32 %v1_23b77)
  store i32 %v2_23b84, i32* @eax, align 8
  %v4_23b89 = trunc i32 %v2_23b84 to i8
  %v5_23b89 = icmp eq i8 %v4_23b89, 0
  br i1 %v5_23b89, label %bb, label %dec_label_pc_23b8d

bb:                                               ; preds = %dec_label_pc_23b52
  %v1_23b8b = call i32 @function_23bb2()
  br label %dec_label_pc_23b8d

dec_label_pc_23b8d:                               ; preds = %bb, %dec_label_pc_23b52
  %v0_23b8d = load i32, i32* @ebp, align 4
  %v1_23b8d = add i32 %v0_23b8d, -28
  %v2_23b8d = inttoptr i32 %v1_23b8d to i32*
  %v3_23b8d = load i32, i32* %v2_23b8d, align 4
  %v1_23b93 = add i32 %v3_23b8d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_23b93 = inttoptr i32 %v1_23b93 to i32*
  %v3_23b93 = load i32, i32* %v2_23b93, align 4
  %v2_23b96 = add i32 %v3_23b8d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_23b96 = inttoptr i32 %v2_23b96 to i32*
  store i32 %v3_23b93, i32* %v3_23b96, align 4
  %v0_23b99 = call i32 @function_23bb3()
  ret i32 %v0_23b99

; uselistorder directives
  uselistorder i32 %v3_23b8d, { 1, 0 }
}

define i32 @function_23b9c() local_unnamed_addr {
dec_label_pc_23b9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_23b9c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23b9c
}

define i32 @function_23bb2() local_unnamed_addr {
dec_label_pc_23bb2:
  %v0_23bb2 = load i32, i32* @eax, align 8
  ret i32 %v0_23bb2
}

define i32 @function_23bb3() local_unnamed_addr {
dec_label_pc_23bb3:
  %v0_23bb3 = load i32, i32* @ebp, align 4
  %v1_23bb3 = add i32 %v0_23bb3, -12
  %v2_23bb3 = inttoptr i32 %v1_23bb3 to i32*
  %v3_23bb3 = load i32, i32* %v2_23bb3, align 4
  %v2_23bb6 = xor i32 %v3_23bb3, 30
  ret i32 %v2_23bb6
}

define i32 @_ZNK5boost8signals219optional_last_valueISsEclINS0_6detail20slot_call_iterator_tINS4_12signal1_implISsPKcS2_iSt4lessIiENS_8functionIFSsS8_EEENSB_IFSsRKNS0_10connectionES8_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS8_SD_EESJ_EEEEESW_EEEENSR_ISsEET_S11_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_23bca:
  %v1_23c1e = call i32 @unknown_470cc(i32 %arg1)
  ret i32 %v1_23c1e
}

define i32 @function_23c26(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c26:
  %v0_23c26 = load i32, i32* @ebp, align 4
  %v1_23c26 = add i32 %v0_23c26, 1
  store i32 %v1_23c26, i32* @ebp, align 4
  %v0_23c27 = load i32, i32* @ecx, align 4
  %v1_23c27 = add i32 %v0_23c27, 887628804
  %v2_23c27 = inttoptr i32 %v1_23c27 to i8*
  %v3_23c27 = load i8, i8* %v2_23c27, align 1
  %v4_23c27 = udiv i8 %v3_23c27, 2
  %v5_23c27 = shl i8 %v3_23c27, 7
  %v6_23c27 = or i8 %v4_23c27, %v5_23c27
  store i8 %v6_23c27, i8* %v2_23c27, align 1
  %v0_23c2d = load i32, i32* @eax, align 8
  %v5_23c2e = mul i32 %v0_23c2d, 2
  %v20_23c2e = and i32 %v5_23c2e, 254
  %v22_23c2e = and i32 %v0_23c2d, -256
  %v23_23c2e = or i32 %v20_23c2e, %v22_23c2e
  %v0_23c34 = load i32, i32* @ebp, align 4
  %v1_23c34 = add i32 %v0_23c34, -28
  %v2_23c34 = inttoptr i32 %v1_23c34 to i32*
  %v3_23c34 = load i32, i32* %v2_23c34, align 4
  %v2_23c3a = call i32 @unknown_4d5a2(i32 %v3_23c34, i32 %v23_23c2e)
  %v0_23c3f = load i32, i32* @ebp, align 4
  %v1_23c3f = add i32 %v0_23c3f, -48
  %v1_23c45 = call i32 @unknown_4d5e8(i32 %v1_23c3f)
  %v0_23c4a = load i32, i32* @ebp, align 4
  %v1_23c4a = add i32 %v0_23c4a, -64
  %v1_23c51 = add i32 %v0_23c4a, -48
  %v2_23c57 = call i32 @unknown_4d51a(i32 %v1_23c51, i32 %v1_23c4a)
  %v0_23c60 = call i32 @function_23c94()
  ret i32 %v0_23c60

; uselistorder directives
  uselistorder i32 %v0_23c2d, { 1, 0 }
  uselistorder i8 %v3_23c27, { 1, 0 }
}

define i32 @function_23c35(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c35:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23c3f() local_unnamed_addr {
dec_label_pc_23c3f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23c62() local_unnamed_addr {
dec_label_pc_23c62:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23c62 = load i32, i32* %edx.global-to-local, align 8
  %v10_23c62 = icmp eq i32 %v0_23c62, 1
  %v3_23c6b = load i32, i32* %eax.global-to-local, align 8
  br i1 %v10_23c62, label %dec_label_pc_23c6b, label %dec_label_pc_23c67

dec_label_pc_23c67:                               ; preds = %dec_label_pc_23c62
  store i32 %v3_23c6b, i32* @ebx, align 4
  %v0_23c69 = call i32 @function_23c7f()
  store i32 %v0_23c69, i32* %eax.global-to-local, align 8
  ret i32 %v0_23c69

dec_label_pc_23c6b:                               ; preds = %dec_label_pc_23c62
  ret i32 %v3_23c6b

; uselistorder directives
  uselistorder i32 %v3_23c6b, { 1, 0 }
}

define i32 @function_23c7b() local_unnamed_addr {
dec_label_pc_23c7b:
  %v0_23c7b = call i32 @function_23c3f()
  ret i32 %v0_23c7b
}

define i32 @function_23c7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c7e:
  %v0_23c7e = load i32, i32* @eax, align 8
  ret i32 %v0_23c7e
}

define i32 @function_23c7f() local_unnamed_addr {
dec_label_pc_23c7f:
  %v0_23c7f = load i32, i32* @ebp, align 4
  %v1_23c7f = add i32 %v0_23c7f, -28
  %v2_23c7f = inttoptr i32 %v1_23c7f to i32*
  %v3_23c7f = load i32, i32* %v2_23c7f, align 4
  store i32 %v3_23c7f, i32* @eax, align 8
  %v1_23c85 = call i32 @function_38b28(i32 %v3_23c7f)
  %v0_23c8a = load i32, i32* @ebx, align 4
  ret i32 %v0_23c8a
}

define i32 @function_23c94() local_unnamed_addr {
dec_label_pc_23c94:
  %v0_23c94 = load i32, i32* @ebp, align 4
  %v1_23c94 = add i32 %v0_23c94, -28
  %v2_23c94 = inttoptr i32 %v1_23c94 to i32*
  %v3_23c94 = load i32, i32* %v2_23c94, align 4
  ret i32 %v3_23c94
}

define i32 @function_23ca1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23ca1:
  store i32 %arg2, i32* @ebp, align 4
  %v0_23cad = load i32, i32* @eax, align 8
  ret i32 %v0_23cad
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12destroy_implEN4mpl_5bool_ILb0EEE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_23cb0:
  %v1_23cd4 = call i32 @unknown_4d716(i32 %arg1)
  ret i32 %v1_23cd4
}

define i32 @function_23cf7() local_unnamed_addr {
dec_label_pc_23cf7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23cf7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23cf7 = add i32 %v0_23cf7, -1
  store i32 %v1_23cf7, i32* %ecx.global-to-local, align 4
  %v0_23cf9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23cf9
}

define i32 @_ZN5boost15optional_detail15aligned_storageISsE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23cfa:
  store i32 %arg1, i32* @eax, align 8
  %v2_23d1e = call i32 @function_23d25(i32 %arg1)
  ret i32 %v2_23d1e
}

define i32 @function_23d25(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d25:
  %v0_23d26 = load i32, i32* @eax, align 8
  ret i32 %v0_23d26
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE10get_objectEv() local_unnamed_addr {
dec_label_pc_23d28:
  %eax.global-to-local = alloca i32, align 4
  %v17_23d2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_23d2b
}

define i32 @function_23d2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d2e:
  %v0_23d2e = load i32, i32* @ebp, align 4
  %v1_23d2e = add i32 %v0_23d2e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_23d2e = inttoptr i32 %v1_23d2e to i32*
  %v3_23d2e = load i32, i32* %v2_23d2e, align 4
  %v2_23d31 = add i32 %v0_23d2e, -28
  %v3_23d31 = inttoptr i32 %v2_23d31 to i32*
  store i32 %v3_23d2e, i32* %v3_23d31, align 4
  %v1_23d3a = load i32, i32* @ebp, align 4
  %v2_23d3a = add i32 %v1_23d3a, -12
  %v3_23d3a = inttoptr i32 %v2_23d3a to i32*
  store i32 30, i32* %v3_23d3a, align 4
  %v0_23d3f = load i32, i32* @ebp, align 4
  %v1_23d3f = add i32 %v0_23d3f, -28
  %v2_23d3f = inttoptr i32 %v1_23d3f to i32*
  %v3_23d3f = load i32, i32* %v2_23d3f, align 4
  %v1_23d42 = add i32 %v3_23d3f, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_23d48 = call i32 @unknown_47a22(i32 %v1_23d42)
  %v1_23d4d = load i32, i32* @ebp, align 4
  %v2_23d4d = add i32 %v1_23d4d, -16
  %v3_23d4d = inttoptr i32 %v2_23d4d to i32*
  store i32 %v1_23d48, i32* %v3_23d4d, align 4
  %v0_23d50 = load i32, i32* @ebp, align 4
  %v1_23d50 = add i32 %v0_23d50, -16
  %v2_23d50 = inttoptr i32 %v1_23d50 to i32*
  %v3_23d50 = load i32, i32* %v2_23d50, align 4
  ret i32 %v3_23d50
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE11dereferenceEPSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_23d66:
  store i32 %arg2, i32* @eax, align 8
  %v4_23d97 = sext i8 %arg3 to i32
  %v5_23d97 = call i32 @function_23d9e(i32 %v4_23d97, i32 %arg2, i32 %arg1)
  ret i32 %v5_23d97
}

define i32 @function_23d9e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23d9e:
  %v0_23d9f = load i32, i32* @eax, align 8
  ret i32 %v0_23d9f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23da0:
  store i32 0, i32* @eax, align 8
  %v2_23dc1 = call i32 @function_23dc8(i32 %arg1)
  ret i32 %v2_23dc1
}

define i32 @function_23dc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_23dc8:
  %v0_23dc9 = load i32, i32* @eax, align 8
  ret i32 %v0_23dc9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsE10deallocateEPSsj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23dca:
  ret i32 %arg2
}

define i32 @function_23e08(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e08:
  %v0_23e08 = load i32, i32* @ecx, align 4
  %v1_23e08 = add i32 %v0_23e08, -1
  store i32 %v1_23e08, i32* @ecx, align 4
  %v0_23e0a = load i32, i32* @eax, align 8
  ret i32 %v0_23e0a
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPSsEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e0b:
  ret i32 0
}

define i32 @function_23e40(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e40:
  %eax.global-to-local = alloca i32, align 4
  %v0_23e40 = load i32, i32* @eax, align 8
  %v2_23e40 = add i32 %v0_23e40, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v16_23e40 = and i32 %v2_23e40, 255
  %v18_23e40 = and i32 %v0_23e40, -256
  %v19_23e40 = or i32 %v16_23e40, %v18_23e40
  store i32 %v19_23e40, i32* %eax.global-to-local, align 8
  %v0_23e42 = load i32, i32* @ebp, align 4
  %v1_23e45 = add i32 %v0_23e42, 2
  %v9_23e45 = icmp eq i32 %v1_23e45, 0
  store i32 %v1_23e45, i32* @ebp, align 4
  %v0_23e46 = load i32, i32* @ecx, align 4
  %v2_23e46 = icmp eq i32 %v0_23e46, 1
  %v4_23e46 = or i1 %v9_23e45, %v2_23e46
  br i1 %v4_23e46, label %dec_label_pc_23e48, label %dec_label_pc_23e57

dec_label_pc_23e48:                               ; preds = %dec_label_pc_23e40
  store i32 %v1_23e45, i32* %eax.global-to-local, align 8
  store i32 %v19_23e40, i32* @ebp, align 4
  ret i32 %v1_23e45

dec_label_pc_23e57:                               ; preds = %dec_label_pc_23e40
  %v3_23e57 = add i32 %v0_23e42, -22
  %v4_23e57 = add i32 %v3_23e57, %v19_23e40
  %v5_23e57 = inttoptr i32 %v4_23e57 to i8*
  %v6_23e57 = load i8, i8* %v5_23e57, align 1
  %v7_23e57 = load i32, i32* @edx, align 8
  %v8_23e57 = lshr i32 %v7_23e57, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_23e57 = trunc i32 %v8_23e57 to i8
  %v10_23e57 = add i8 %v9_23e57, %v6_23e57
  store i8 %v10_23e57, i8* %v5_23e57, align 1
  %v31_23e57 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v31_23e57

; uselistorder directives
  uselistorder i32 %v1_23e45, { 1, 0, 2, 3 }
  uselistorder i32 %v19_23e40, { 1, 0, 2 }
  uselistorder i32 %v0_23e40, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_23e5e() local_unnamed_addr {
dec_label_pc_23e5e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23e5e = load i32, i32* %ecx.global-to-local, align 4
  %v1_23e5e = add i32 %v0_23e5e, -1
  store i32 %v1_23e5e, i32* %ecx.global-to-local, align 4
  %v0_23e60 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23e60
}

define i32 @_ZNSaISt13_Rb_tree_nodeISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e62:
  %v1_23e7f = call i32 @unknown_4d94a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_23e8e = call i32 @function_23e95()
  ret i32 %v1_23e8e
}

define i32 @function_23e95() local_unnamed_addr {
dec_label_pc_23e95:
  %v0_23e96 = load i32, i32* @eax, align 8
  ret i32 %v0_23e96
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e98:
  %ebp.global-to-local = alloca i32, align 4
  %v0_23e98 = load i32, i32* %ebp.global-to-local, align 4
  %v1_23eb2 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_23eb2 = inttoptr i32 %v1_23eb2 to i32*
  store i32 0, i32* %v2_23eb2, align 4
  %v1_23ebc = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_23ebc = inttoptr i32 %v1_23ebc to i32*
  store i32 0, i32* %v2_23ebc, align 4
  %v2_23ecc = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_23ecc = inttoptr i32 %v2_23ecc to i32*
  store i32 %v1_23eb2, i32* %v3_23ecc, align 4
  %v2_23ed8 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_23ed8 = inttoptr i32 %v2_23ed8 to i32*
  store i32 %v1_23eb2, i32* %v3_23ed8, align 4
  store i32 %v0_23e98, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNKSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23eee:
  %v1_23f11 = call i32 @unknown_4da00(i32 %arg2)
  %v2_23f20 = call i32 @unknown_4da2e(i32 %arg1, i32 %v1_23f11)
  store i32 %arg1, i32* @eax, align 8
  %v1_23f32 = call i32 @function_23f39()
  ret i32 %v1_23f32

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23f39() local_unnamed_addr {
dec_label_pc_23f39:
  %v0_23f3a = load i32, i32* @eax, align 8
  ret i32 %v0_23f3a
}

define i32 @_ZSt11__addressofISsEPT_RS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f3d:
  store i32 %arg1, i32* @eax, align 8
  %v2_23f61 = call i32 @function_23f68(i32 %arg1)
  ret i32 %v2_23f61
}

define i32 @function_23f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f68:
  %v0_23f69 = load i32, i32* @eax, align 8
  ret i32 %v0_23f69
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE11_M_put_nodeEPSt13_Rb_tree_nodeISsE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23f6a:
  ret i32 %arg1
}

define i32 @function_23f96(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f96:
  %v0_23f97 = load i32, i32* @eax, align 8
  %v11_23f97 = and i32 %v0_23f97, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_23f9c = call i32 @unknown_4dae6(i32 %v11_23f97)
  %v0_23fa1 = load i32, i32* @ebp, align 4
  %v1_23fa1 = add i32 %v0_23fa1, -12
  %v2_23fa1 = inttoptr i32 %v1_23fa1 to i32*
  %v3_23fa1 = load i32, i32* %v2_23fa1, align 4
  %v2_23fa4 = xor i32 %v3_23fa1, 30
  %v3_23fa4 = icmp eq i32 %v2_23fa4, 0
  store i32 %v2_23fa4, i32* @eax, align 8
  br i1 %v3_23fa4, label %bb, label %dec_label_pc_23fad

bb:                                               ; preds = %dec_label_pc_23f96
  %v1_23fab = call i32 @function_23fb2()
  br label %dec_label_pc_23fad

dec_label_pc_23fad:                               ; preds = %bb, %dec_label_pc_23f96
  %v2_23fab = phi i32 [ %v1_23fab, %bb ], [ %v2_23fa4, %dec_label_pc_23f96 ]
  ret i32 %v2_23fab
}

define i32 @function_23fb2() local_unnamed_addr {
dec_label_pc_23fb2:
  %v0_23fb3 = load i32, i32* @eax, align 8
  ret i32 %v0_23fb3
}

define i32 @_ZNSaISsEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23fb4:
  %v2_23fde = call i32 @unknown_4db72(i32 %arg1, i32 %arg2)
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23ff6:
  %v1_2401f = call i32 @unknown_4dbe4(i32 %arg1)
  %v10_24024 = icmp ult i32 %v1_2401f, %arg2
  %v1_24027 = zext i1 %v10_24024 to i32
  %v3_24027 = and i32 %v1_2401f, -256
  %v4_24027 = or i32 %v1_24027, %v3_24027
  %v5_2402a = icmp eq i1 %v10_24024, false
  br i1 %v5_2402a, label %bb, label %dec_label_pc_2402e

bb:                                               ; preds = %dec_label_pc_23ff6
  %v1_2402c = call i32 @function_24033()
  br label %dec_label_pc_2402e

dec_label_pc_2402e:                               ; preds = %bb, %dec_label_pc_23ff6
  %v2_2402c = phi i32 [ %v1_2402c, %bb ], [ %v4_24027, %dec_label_pc_23ff6 ]
  ret i32 %v2_2402c

; uselistorder directives
  uselistorder i1 %v10_24024, { 1, 0 }
}

declare i32 @_ZSt17__throw_bad_allocv.2263(i32) local_unnamed_addr

define i32 @function_24033() local_unnamed_addr {
dec_label_pc_24033:
  %v0_24033 = load i32, i32* @ebp, align 4
  %v1_24033 = add i32 %v0_24033, -32
  %v2_24033 = inttoptr i32 %v1_24033 to i32*
  %v3_24033 = load i32, i32* %v2_24033, align 4
  %v2_24036 = mul i32 %v3_24033, 4
  ret i32 %v2_24036
}

define i32 @function_24051() local_unnamed_addr {
dec_label_pc_24051:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_24051 = load i32, i32* %ecx.global-to-local, align 4
  %v1_24051 = add i32 %v0_24051, -1
  store i32 %v1_24051, i32* %ecx.global-to-local, align 4
  %v0_24053 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24053
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSsSt6vectorISsSaISsEEEEPSsEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24054:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_240b6 = ptrtoint i32* %stack_var_-36 to i32
  %v2_240ba = ptrtoint i32* %stack_var_-32 to i32
  %v2_240c0110 = call i32 @unknown_40aee(i32 %v2_240ba, i32 %v4_240b6)
  %v4_240c5111 = trunc i32 %v2_240c0110 to i8
  %v5_240c5112 = icmp eq i8 %v4_240c5111, 0
  %v1_240c7114 = icmp eq i1 %v5_240c5112, false
  br i1 %v1_240c7114, label %dec_label_pc_24080, label %dec_label_pc_240c9

dec_label_pc_24080:                               ; preds = %dec_label_pc_24054, %dec_label_pc_24080
  %storemerge115 = phi i32 [ %v4_240af, %dec_label_pc_24080 ], [ %arg3, %dec_label_pc_24054 ]
  %v1_24086 = call i32 @unknown_40b8c(i32 %v2_240ba)
  %v1_24093 = call i32 @unknown_47f91(i32 %storemerge115)
  %v2_2409f = call i32 @unknown_4dc71(i32 %v1_24093, i32 %v1_24086)
  %v1_240aa = call i32 @unknown_40c3c(i32 %v2_240ba)
  %v4_240af = add i32 %storemerge115, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_240c0 = call i32 @unknown_40aee(i32 %v2_240ba, i32 %v4_240b6)
  %v4_240c5 = trunc i32 %v2_240c0 to i8
  %v5_240c5 = icmp eq i8 %v4_240c5, 0
  %v1_240c7 = icmp eq i1 %v5_240c5, false
  br i1 %v1_240c7, label %dec_label_pc_24080, label %dec_label_pc_240c9

dec_label_pc_240c9:                               ; preds = %dec_label_pc_24080, %dec_label_pc_24054
  %storemerge.lcssa = phi i32 [ %arg3, %dec_label_pc_24054 ], [ %v4_240af, %dec_label_pc_24080 ]
  store i32 %storemerge.lcssa, i32* @eax, align 8
  %v1_240d6 = call i32 @function_2410f()
  store i32 %v1_240d6, i32* @eax, align 8
  %v0_240d8 = call i32 @function_2410a()
  ret i32 %v0_240d8

; uselistorder directives
  uselistorder i32 %storemerge115, { 1, 0 }
  uselistorder i32 %v2_240ba, { 3, 1, 2, 0 }
  uselistorder i32 %v4_240b6, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_40aee, { 1, 0 }
  uselistorder label %dec_label_pc_24080, { 1, 0 }
}

define i32 @function_240db() local_unnamed_addr {
dec_label_pc_240db:
  %eax.global-to-local = alloca i32, align 4
  %v0_240db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_240db
}

define i32 @function_2410a() local_unnamed_addr {
dec_label_pc_2410a:
  %v0_2410a = load i32, i32* @eax, align 8
  ret i32 %v0_2410a
}

define i32 @function_2410f() local_unnamed_addr {
dec_label_pc_2410f:
  %v0_24114 = load i32, i32* @eax, align 8
  ret i32 %v0_24114
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSsSsEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24116:
  %v1_24133 = call i32 @unknown_4ddae(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_24142 = call i32 @function_24149()
  ret i32 %v1_24142
}

define i32 @function_24149() local_unnamed_addr {
dec_label_pc_24149:
  %v0_2414a = load i32, i32* @eax, align 8
  ret i32 %v0_2414a
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2414c:
  %v1_24166 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_24166 = inttoptr i32 %v1_24166 to i32*
  store i32 0, i32* %v2_24166, align 4
  %v1_24170 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_24170 = inttoptr i32 %v1_24170 to i32*
  store i32 0, i32* %v2_24170, align 4
  %v2_24180 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_24180 = inttoptr i32 %v2_24180 to i32*
  store i32 %v1_24166, i32* %v3_24180, align 4
  %v2_2418c = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_2418c = inttoptr i32 %v2_2418c to i32*
  store i32 %v1_24166, i32* %v3_2418c, align 4
  store i32 0, i32* @eax, align 8
  %v2_24199 = call i32 @function_241a0(i32 %arg1)
  ret i32 %v2_24199
}

define i32 @function_241a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_241a0:
  %v0_241a1 = load i32, i32* @eax, align 8
  ret i32 %v0_241a1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_241a2:
  store i32 0, i32* @eax, align 8
  %v2_241c3 = call i32 @function_241ca(i32 %arg1)
  ret i32 %v2_241c3
}

define i32 @function_241ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_241ca:
  %v0_241cb = load i32, i32* @eax, align 8
  ret i32 %v0_241cb
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_241cc:
  %v1_241e6 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_241e6 = inttoptr i32 %v1_241e6 to i32*
  %v3_241e6 = load i32, i32* %v2_241e6, align 4
  store i32 %v3_241e6, i32* @eax, align 8
  %v2_241f3 = call i32 @function_241fa(i32 %arg1)
  ret i32 %v2_241f3
}

define i32 @function_241fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_241fa:
  %v0_241fb = load i32, i32* @eax, align 8
  ret i32 %v0_241fb
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_241fc:
  %v1_24216 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_24216 = inttoptr i32 %v1_24216 to i32*
  %v3_24216 = load i32, i32* %v2_24216, align 4
  store i32 %v3_24216, i32* @eax, align 8
  %v2_24223 = call i32 @function_2422a(i32 %arg1)
  ret i32 %v2_24223
}

define i32 @function_2422a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2422a:
  %v0_2422b = load i32, i32* @eax, align 8
  ret i32 %v0_2422b
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2422c:
  %stack_var_-17 = alloca i32, align 4
  %v1_2424d = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_24253 = call i32 @unknown_4df73(i32 %v1_2424d)
  %v2_2425a = ptrtoint i32* %stack_var_-17 to i32
  %v3_24267 = call i32 @unknown_4deee(i32 %v2_2425a, i32 %arg1)
  %v3_24279 = call i32 @unknown_4dfa0(i32 %v2_2425a, i32 %v2_24253)
  %v1_24284 = call i32 @unknown_4df3e(i32 %v2_2425a)
  %v3_24296 = call i32 @unknown_4dfdc(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_242a5 = call i32 @function_242c5()
  store i32 %v1_242a5, i32* @eax, align 8
  %v0_242a7 = call i32 @function_242c0()
  ret i32 %v0_242a7

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_242aa() local_unnamed_addr {
dec_label_pc_242aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_242aa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_242aa
}

define i32 @function_242c0() local_unnamed_addr {
dec_label_pc_242c0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_242c5() local_unnamed_addr {
dec_label_pc_242c5:
  %v0_242c9 = load i32, i32* @eax, align 8
  ret i32 %v0_242c9
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_242ca:
  %v1_242e7 = call i32 @unknown_4e0c4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_242f6 = call i32 @function_242fd()
  ret i32 %v1_242f6
}

define i32 @function_242fd() local_unnamed_addr {
dec_label_pc_242fd:
  %v0_242fe = load i32, i32* @eax, align 8
  ret i32 %v0_242fe
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE13_Rb_tree_implIS9_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24300:
  %ebp.global-to-local = alloca i32, align 4
  %v0_24300 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2431a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2431a = inttoptr i32 %v1_2431a to i32*
  store i32 0, i32* %v2_2431a, align 4
  %v1_24324 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_24324 = inttoptr i32 %v1_24324 to i32*
  store i32 0, i32* %v2_24324, align 4
  %v2_24334 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_24334 = inttoptr i32 %v2_24334 to i32*
  store i32 %v1_2431a, i32* %v3_24334, align 4
  %v2_24340 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_24340 = inttoptr i32 %v2_24340 to i32*
  store i32 %v1_2431a, i32* %v3_24340, align 4
  store i32 %v0_24300, i32* %ebp.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24356:
  store i32 0, i32* @eax, align 8
  %v2_24377 = call i32 @function_2437e(i32 %arg1)
  ret i32 %v2_24377
}

define i32 @function_2437e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2437e:
  %v0_2437f = load i32, i32* @eax, align 8
  ret i32 %v0_2437f
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_24380:
  %v1_2439a = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2439a = inttoptr i32 %v1_2439a to i32*
  %v3_2439a = load i32, i32* %v2_2439a, align 4
  store i32 %v3_2439a, i32* @eax, align 8
  %v2_243a7 = call i32 @function_243ae(i32 %arg1)
  ret i32 %v2_243a7
}

define i32 @function_243ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_243ae:
  %v0_243af = load i32, i32* @eax, align 8
  ret i32 %v0_243af
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_243b0:
  %v1_243ca = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_243ca = inttoptr i32 %v1_243ca to i32*
  %v3_243ca = load i32, i32* %v2_243ca, align 4
  store i32 %v3_243ca, i32* @eax, align 8
  %v2_243d7 = call i32 @function_243de(i32 %arg1)
  ret i32 %v2_243d7
}

define i32 @function_243de(i32 %arg1) local_unnamed_addr {
dec_label_pc_243de:
  %v0_243df = load i32, i32* @eax, align 8
  ret i32 %v0_243df
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243e0:
  %stack_var_-17 = alloca i32, align 4
  %v1_24401 = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_24407 = call i32 @unknown_4e289(i32 %v1_24401)
  %v2_2440e = ptrtoint i32* %stack_var_-17 to i32
  %v3_2441b = call i32 @unknown_4e204(i32 %v2_2440e, i32 %arg1)
  %v3_2442d = call i32 @unknown_4e2b6(i32 %v2_2440e, i32 %v2_24407)
  %v1_24438 = call i32 @unknown_4e254(i32 %v2_2440e)
  %v3_2444a = call i32 @unknown_4e2f2(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_24459 = call i32 @function_24479()
  ret i32 %v1_24459

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2445d() local_unnamed_addr {
dec_label_pc_2445d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2445d = load i32, i32* %eax.global-to-local, align 8
  %v0_2445f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2445f = add i32 %v0_2445f, -13
  store i32 %v1_2445f, i32* %eax.global-to-local, align 8
  %v1_24465 = call i32 @unknown_4e254(i32 %v1_2445f)
  store i32 %v0_2445d, i32* %eax.global-to-local, align 8
  ret i32 %v0_2445d

; uselistorder directives
  uselistorder i32 %v0_2445d, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4e254, { 1, 0 }
}

define i32 @function_24479() local_unnamed_addr {
dec_label_pc_24479:
  %v0_2447d = load i32, i32* @eax, align 8
  ret i32 %v0_2447d
}

define i32 @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2447e:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_2449b = call i32 @unknown_4e3da(i32 %tmp99)
  store i32 0, i32* %arg1, align 4
  %v1_244ac = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_244ac = inttoptr i32 %v1_244ac to i32*
  store i32 0, i32* %v2_244ac, align 4
  ret i32 %tmp99
}

define i32 @function_244b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_244b6:
  %v0_244b6 = load i32, i32* @eax, align 8
  %v1_244b6 = add i32 %v0_244b6, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_244b6 = inttoptr i32 %v1_244b6 to i32*
  store i32 0, i32* %v2_244b6, align 4
  %v0_244bd = load i32, i32* @ebp, align 4
  %v1_244bd = add i32 %v0_244bd, -12
  %v2_244bd = inttoptr i32 %v1_244bd to i32*
  %v3_244bd = load i32, i32* %v2_244bd, align 4
  %v2_244c0 = xor i32 %v3_244bd, 30
  %v3_244c0 = icmp eq i32 %v2_244c0, 0
  store i32 %v2_244c0, i32* @eax, align 8
  br i1 %v3_244c0, label %bb, label %dec_label_pc_244c9

bb:                                               ; preds = %dec_label_pc_244b6
  %v1_244c7 = call i32 @function_244ce()
  br label %dec_label_pc_244c9

dec_label_pc_244c9:                               ; preds = %bb, %dec_label_pc_244b6
  %v2_244c7 = phi i32 [ %v1_244c7, %bb ], [ %v2_244c0, %dec_label_pc_244b6 ]
  ret i32 %v2_244c7
}

define i32 @function_244ce() local_unnamed_addr {
dec_label_pc_244ce:
  %v0_244cf = load i32, i32* @eax, align 8
  ret i32 %v0_244cf
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv() local_unnamed_addr {
dec_label_pc_244d0:
  %eax.global-to-local = alloca i32, align 4
  %v17_244d3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_244d3
}

define i32 @function_244d6() local_unnamed_addr {
dec_label_pc_244d6:
  %v0_244d6 = load i32, i32* @ebp, align 4
  %v1_244d6 = add i32 %v0_244d6, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_244d6 = inttoptr i32 %v1_244d6 to i32*
  %v3_244d6 = load i32, i32* %v2_244d6, align 4
  %v2_244d9 = add i32 %v0_244d6, -28
  %v3_244d9 = inttoptr i32 %v2_244d9 to i32*
  store i32 %v3_244d6, i32* %v3_244d9, align 4
  %v1_244e2 = load i32, i32* @ebp, align 4
  %v2_244e2 = add i32 %v1_244e2, -12
  %v3_244e2 = inttoptr i32 %v2_244e2 to i32*
  store i32 30, i32* %v3_244e2, align 4
  store i32 536870911, i32* @eax, align 8
  %v0_244ec = load i32, i32* @ebp, align 4
  %v1_244ec = add i32 %v0_244ec, -12
  %v2_244ec = inttoptr i32 %v1_244ec to i32*
  %v3_244ec = load i32, i32* %v2_244ec, align 4
  %v3_244ef = icmp eq i32 %v3_244ec, 30
  br i1 %v3_244ef, label %bb, label %dec_label_pc_244f8

bb:                                               ; preds = %dec_label_pc_244d6
  %v1_244f6 = call i32 @function_244fd()
  br label %dec_label_pc_244f8

dec_label_pc_244f8:                               ; preds = %bb, %dec_label_pc_244d6
  %v2_244f6 = phi i32 [ %v1_244f6, %bb ], [ 536870911, %dec_label_pc_244d6 ]
  ret i32 %v2_244f6
}

define i32 @function_244fd() local_unnamed_addr {
dec_label_pc_244fd:
  %v0_244fe = load i32, i32* @eax, align 8
  ret i32 %v0_244fe
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24500:
  ret i32 %arg2
}

define i32 @function_2453e() local_unnamed_addr {
dec_label_pc_2453e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2453e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2453e = add i32 %v0_2453e, -1
  store i32 %v1_2453e, i32* %ecx.global-to-local, align 4
  %v0_24540 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24540
}

define i32 @_ZSt13copy_backwardIPxS0_ET0_T_S2_S1_() local_unnamed_addr {
dec_label_pc_24541:
  %eax.global-to-local = alloca i32, align 4
  %v5_24544 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_24544
}

define i32 @function_24546() local_unnamed_addr {
dec_label_pc_24546:
  %eax.global-to-local = alloca i32, align 4
  %v0_24546 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24546
}

define i32 @function_24571() local_unnamed_addr {
dec_label_pc_24571:
  %eax.global-to-local = alloca i32, align 4
  %v0_24571 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24571
}

define i32 @function_245a0() local_unnamed_addr {
dec_label_pc_245a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_245a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_245a0 = add i32 %v0_245a0, 1566258372
  %v2_245a0 = inttoptr i32 %v1_245a0 to i32*
  %v3_245a0 = load i32, i32* %v2_245a0, align 4
  %v4_245a0 = add i32 %v3_245a0, 1
  store i32 %v4_245a0, i32* %v2_245a0, align 4
  %v0_245a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_245a6
}

define i32 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEjPKc() local_unnamed_addr {
dec_label_pc_245a8:
  %eax.global-to-local = alloca i32, align 4
  %v17_245ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_245ac
}

define i32 @function_245b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_245b0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_245b0 = load i32, i32* @ebp, align 4
  %v1_245b0 = add i32 %v0_245b0, 1
  store i32 %v1_245b0, i32* %ebp.global-to-local, align 4
  %v0_245b1 = load i32, i32* @ecx, align 4
  %v1_245b1 = add i32 %v0_245b1, 1166795845
  %v2_245b1 = inttoptr i32 %v1_245b1 to i8*
  %v3_245b1 = load i8, i8* %v2_245b1, align 1
  %v5_245b1 = trunc i32 %v0_245b1 to i8
  %v6_245b1 = or i8 %v3_245b1, %v5_245b1
  store i8 %v6_245b1, i8* %v2_245b1, align 1
  %v0_245b7 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_245b7 = or i32 %v0_245b7, 137
  store i32 %v11_245b7, i32* %eax.global-to-local, align 8
  %v0_245b9 = load i32, i32* %ebp.global-to-local, align 4
  %v0_245ba = load i32, i32* @ecx, align 4
  %v1_245ba = add i32 %v0_245ba, 255
  %v1_245bc = add i32 %v0_245b9, 2
  store i32 %v1_245bc, i32* @ebp, align 4
  %v1_245bd = add i32 %v0_245ba, -1587159996
  %v2_245bd = inttoptr i32 %v1_245bd to i8*
  %v3_245bd = load i8, i8* %v2_245bd, align 1
  %v5_245bd = trunc i32 %v1_245ba to i8
  %v8_245bd = add i8 %v3_245bd, %v5_245bd
  %v28_245bd = icmp ult i8 %v8_245bd, %v3_245bd
  store i1 %v28_245bd, i1* %cf.global-to-local, align 1
  store i8 %v8_245bd, i8* %v2_245bd, align 1
  %v0_245c3 = load i32, i32* %eax.global-to-local, align 8
  %v1_245c3 = trunc i32 %v0_245c3 to i8
  %v2_245c3 = load i1, i1* %cf.global-to-local, align 1
  %v3_245c3 = zext i1 %v2_245c3 to i8
  %v4_245c3 = add i8 %v3_245c3, %v1_245c3
  %v19_245c3 = icmp ule i8 %v4_245c3, %v1_245c3
  %v21_245c3 = icmp eq i1 %v2_245c3, %v19_245c3
  store i1 %v21_245c3, i1* %cf.global-to-local, align 1
  %v22_245c3 = zext i8 %v4_245c3 to i32
  %v24_245c3 = and i32 %v0_245c3, -256
  %v25_245c3 = or i32 %v22_245c3, %v24_245c3
  store i32 %v25_245c3, i32* %eax.global-to-local, align 8
  %v1_245c5 = inttoptr i32 %v25_245c3 to i8*
  %v2_245c5 = load i8, i8* %v1_245c5, align 1
  %v5_245c5 = add i8 %v2_245c5, %v4_245c3
  store i8 %v5_245c5, i8* %v1_245c5, align 1
  %v0_245c7 = load i32, i32* %eax.global-to-local, align 8
  %v1_245c7 = load i32, i32* @ebp, align 4
  %v2_245c7 = add i32 %v1_245c7, -12
  %v3_245c7 = inttoptr i32 %v2_245c7 to i32*
  store i32 %v0_245c7, i32* %v3_245c7, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_245cc = load i32, i32* @ebp, align 4
  %v1_245cc = add i32 %v0_245cc, -28
  %v2_245cc = inttoptr i32 %v1_245cc to i32*
  %v3_245cc = load i32, i32* %v2_245cc, align 4
  store i32 %v3_245cc, i32* %eax.global-to-local, align 8
  %v1_245d2 = call i32 @unknown_433e0(i32 %v3_245cc)
  store i32 %v1_245d2, i32* %eax.global-to-local, align 8
  store i32 %v1_245d2, i32* @ebx, align 4
  %v0_245d9 = load i32, i32* @ebp, align 4
  %v1_245d9 = add i32 %v0_245d9, -28
  %v2_245d9 = inttoptr i32 %v1_245d9 to i32*
  %v3_245d9 = load i32, i32* %v2_245d9, align 4
  store i32 %v3_245d9, i32* %eax.global-to-local, align 8
  %v1_245df = call i32 @unknown_40154(i32 %v3_245d9)
  store i32 %v1_245df, i32* %eax.global-to-local, align 8
  %v0_245e4 = load i32, i32* @ebx, align 4
  %v2_245e6 = sub i32 %v0_245e4, %v1_245df
  %v0_245e8 = load i32, i32* @ebp, align 4
  %v1_245e8 = add i32 %v0_245e8, -32
  %v2_245e8 = inttoptr i32 %v1_245e8 to i32*
  %v3_245e8 = load i32, i32* %v2_245e8, align 4
  %v7_245eb = icmp ult i32 %v2_245e6, %v3_245e8
  store i1 %v7_245eb, i1* %cf.global-to-local, align 1
  %v1_245ed = zext i1 %v7_245eb to i32
  %v3_245ed = and i32 %v3_245e8, -256
  %v4_245ed = or i32 %v1_245ed, %v3_245ed
  store i32 %v4_245ed, i32* %eax.global-to-local, align 8
  ret i32 %v4_245ed

; uselistorder directives
  uselistorder i8 %v4_245c3, { 0, 2, 1 }
  uselistorder i8 %v1_245c3, { 1, 0 }
  uselistorder i8 %v3_245bd, { 1, 0 }
}

define i32 @function_245f0() local_unnamed_addr {
dec_label_pc_245f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_245f0 = load i32, i32* %eax.global-to-local, align 8
  %v4_245f0 = trunc i32 %v0_245f0 to i8
  %v5_245f0 = icmp eq i8 %v4_245f0, 0
  %v0_245ff.pre = load i32, i32* @ebp, align 4
  br i1 %v5_245f0, label %dec_label_pc_245ff, label %dec_label_pc_245f4

dec_label_pc_245f4:                               ; preds = %dec_label_pc_245f0
  %v1_245f4 = add i32 %v0_245ff.pre, -36
  %v2_245f4 = inttoptr i32 %v1_245f4 to i32*
  %v3_245f4 = load i32, i32* %v2_245f4, align 4
  store i32 %v3_245f4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_245ff

dec_label_pc_245ff:                               ; preds = %dec_label_pc_245f0, %dec_label_pc_245f4
  %v1_245ff = add i32 %v0_245ff.pre, -28
  %v2_245ff = inttoptr i32 %v1_245ff to i32*
  %v3_245ff = load i32, i32* %v2_245ff, align 4
  store i32 %v3_245ff, i32* %eax.global-to-local, align 8
  %v1_24605 = call i32 @unknown_40154(i32 %v3_245ff)
  store i32 %v1_24605, i32* %eax.global-to-local, align 8
  store i32 %v1_24605, i32* %ebx.global-to-local, align 4
  %v0_2460c = load i32, i32* @ebp, align 4
  %v1_2460c = add i32 %v0_2460c, -28
  %v2_2460c = inttoptr i32 %v1_2460c to i32*
  %v3_2460c = load i32, i32* %v2_2460c, align 4
  store i32 %v3_2460c, i32* %eax.global-to-local, align 8
  %v1_24612 = call i32 @unknown_40154(i32 %v3_2460c)
  %v1_24617 = load i32, i32* @ebp, align 4
  %v2_24617 = add i32 %v1_24617, -20
  %v3_24617 = inttoptr i32 %v2_24617 to i32*
  store i32 %v1_24612, i32* %v3_24617, align 4
  %v0_2461a = load i32, i32* @ebp, align 4
  %v1_2461a = add i32 %v0_2461a, -32
  %v1_24621 = add i32 %v0_2461a, -20
  store i32 %v1_24621, i32* %eax.global-to-local, align 8
  %v2_24627 = call i32 @unknown_47183(i32 %v1_24621, i32 %v1_2461a)
  store i32 %v2_24627, i32* %eax.global-to-local, align 8
  %v1_2462c = inttoptr i32 %v2_24627 to i32*
  %v2_2462c = load i32, i32* %v1_2462c, align 4
  %v1_2462e = load i32, i32* %ebx.global-to-local, align 4
  %v2_2462e = add i32 %v1_2462e, %v2_2462c
  store i32 %v2_2462e, i32* %eax.global-to-local, align 8
  %v1_24630 = load i32, i32* @ebp, align 4
  %v2_24630 = add i32 %v1_24630, -16
  %v3_24630 = inttoptr i32 %v2_24630 to i32*
  store i32 %v2_2462e, i32* %v3_24630, align 4
  %v0_24633 = load i32, i32* @ebp, align 4
  %v1_24633 = add i32 %v0_24633, -28
  %v2_24633 = inttoptr i32 %v1_24633 to i32*
  %v3_24633 = load i32, i32* %v2_24633, align 4
  store i32 %v3_24633, i32* %eax.global-to-local, align 8
  %v1_24639 = call i32 @unknown_40154(i32 %v3_24633)
  store i32 %v1_24639, i32* %eax.global-to-local, align 8
  %v1_2463e = load i32, i32* @ebp, align 4
  %v2_2463e = add i32 %v1_2463e, -16
  %v3_2463e = inttoptr i32 %v2_2463e to i32*
  %v4_2463e = load i32, i32* %v3_2463e, align 4
  %tmp101 = icmp ugt i32 %v1_24639, %v4_2463e
  br i1 %tmp101, label %dec_label_pc_24653, label %dec_label_pc_24643

dec_label_pc_24643:                               ; preds = %dec_label_pc_245ff
  %v1_24643 = add i32 %v1_2463e, -28
  %v2_24643 = inttoptr i32 %v1_24643 to i32*
  %v3_24643 = load i32, i32* %v2_24643, align 4
  store i32 %v3_24643, i32* %eax.global-to-local, align 8
  %v1_24649 = call i32 @unknown_433e0(i32 %v3_24643)
  store i32 %v1_24649, i32* %eax.global-to-local, align 8
  %v1_2464e = load i32, i32* @ebp, align 4
  %v2_2464e = add i32 %v1_2464e, -16
  %v3_2464e = inttoptr i32 %v2_2464e to i32*
  %v4_2464e = load i32, i32* %v3_2464e, align 4
  %v10_2464e = icmp ult i32 %v1_24649, %v4_2464e
  %v1_24651 = icmp eq i1 %v10_2464e, false
  br i1 %v1_24651, label %bb, label %dec_label_pc_24653

bb:                                               ; preds = %dec_label_pc_24643
  %v2_24651 = call i32 @function_24660()
  store i32 %v2_24651, i32* %eax.global-to-local, align 8
  %v0_24653.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24653

dec_label_pc_24653:                               ; preds = %dec_label_pc_245ff, %bb, %dec_label_pc_24643
  %v0_24653 = phi i32 [ %v1_2463e, %dec_label_pc_245ff ], [ %v0_24653.pre, %bb ], [ %v1_2464e, %dec_label_pc_24643 ]
  %v1_24653 = add i32 %v0_24653, -28
  %v2_24653 = inttoptr i32 %v1_24653 to i32*
  %v3_24653 = load i32, i32* %v2_24653, align 4
  store i32 %v3_24653, i32* %eax.global-to-local, align 8
  %v1_24659 = call i32 @unknown_433e0(i32 %v3_24653)
  store i32 %v1_24659, i32* %eax.global-to-local, align 8
  ret i32 %v1_24659

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1 }
  uselistorder i32 (i32)* @unknown_433e0, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_40154, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_24653, { 1, 2, 0 }
  uselistorder label %dec_label_pc_245ff, { 1, 0 }
}

define i32 @function_2465e() local_unnamed_addr {
dec_label_pc_2465e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2465e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2465e
}

define i32 @function_24660() local_unnamed_addr {
dec_label_pc_24660:
  %v0_24660 = load i32, i32* @ebp, align 4
  %v1_24660 = add i32 %v0_24660, -16
  %v2_24660 = inttoptr i32 %v1_24660 to i32*
  %v3_24660 = load i32, i32* %v2_24660, align 4
  ret i32 %v3_24660
}

define i32 @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2467a:
  %v8_246be = call i32 @unknown_43b64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v8_246be

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246d6:
  %v2_24700 = call i32 @unknown_4e6d9(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEENS1_IPxS6_EEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24720:
  ret i32 %arg4
}

define i32 @function_24740(i32 %arg1) local_unnamed_addr {
dec_label_pc_24740:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v1_24746 = load i32, i32* @ebp, align 4
  %v2_24746 = add i32 %v1_24746, -12
  %v3_24746 = inttoptr i32 %v2_24746 to i32*
  store i32 30, i32* %v3_24746, align 4
  %v0_2474b = load i32, i32* @ebp, align 4
  %v1_2474b = add i32 %v0_2474b, -40
  %v2_2474b = inttoptr i32 %v1_2474b to i32*
  %v3_2474b = load i32, i32* %v2_2474b, align 4
  %v1_24751 = call i32 @unknown_4aa3a(i32 %v3_2474b)
  store i32 %v1_24751, i32* %esi.global-to-local, align 4
  %v0_24758 = load i32, i32* @ebp, align 4
  %v1_24758 = add i32 %v0_24758, -36
  %v2_24758 = inttoptr i32 %v1_24758 to i32*
  %v3_24758 = load i32, i32* %v2_24758, align 4
  %v1_2475e = call i32 @unknown_4e760(i32 %v3_24758)
  store i32 %v1_2475e, i32* %ebx.global-to-local, align 4
  %v0_24765 = load i32, i32* @ebp, align 4
  %v1_24765 = add i32 %v0_24765, -32
  %v2_24765 = inttoptr i32 %v1_24765 to i32*
  %v3_24765 = load i32, i32* %v2_24765, align 4
  %v1_2476b = call i32 @unknown_4e760(i32 %v3_24765)
  %v0_24770 = load i32, i32* %esi.global-to-local, align 4
  %v0_24774 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2477b = call i32 @unknown_4e795(i32 %v1_2476b, i32 %v0_24774, i32 %v0_24770)
  %v1_24780 = load i32, i32* @ebp, align 4
  %v2_24780 = add i32 %v1_24780, -16
  %v3_24780 = inttoptr i32 %v2_24780 to i32*
  store i32 %v3_2477b, i32* %v3_24780, align 4
  %v0_24783 = load i32, i32* @ebp, align 4
  %v1_24783 = add i32 %v0_24783, -16
  %v1_2478a = add i32 %v0_24783, -28
  %v2_2478a = inttoptr i32 %v1_2478a to i32*
  %v3_2478a = load i32, i32* %v2_2478a, align 4
  %v2_24790 = call i32 @unknown_45af6(i32 %v3_2478a, i32 %v1_24783)
  %v0_24795 = load i32, i32* @ebp, align 4
  %v1_24795 = add i32 %v0_24795, -28
  %v2_24795 = inttoptr i32 %v1_24795 to i32*
  %v3_24795 = load i32, i32* %v2_24795, align 4
  store i32 %v3_24795, i32* @eax, align 8
  %v1_24798 = add i32 %v0_24795, -12
  %v2_24798 = inttoptr i32 %v1_24798 to i32*
  %v3_24798 = load i32, i32* %v2_24798, align 4
  %v3_2479b = icmp eq i32 %v3_24798, 30
  br i1 %v3_2479b, label %bb, label %dec_label_pc_247a4

bb:                                               ; preds = %dec_label_pc_24740
  %v1_247a2 = call i32 @function_247a9()
  br label %dec_label_pc_247a4

dec_label_pc_247a4:                               ; preds = %bb, %dec_label_pc_24740
  %v4_247a2 = phi i32 [ %v1_247a2, %bb ], [ %v3_24795, %dec_label_pc_24740 ]
  ret i32 %v4_247a2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4e760, { 1, 0 }
}

define i32 @function_247a9() local_unnamed_addr {
dec_label_pc_247a9:
  %v16_247a9 = load i32, i32* @eax, align 8
  ret i32 %v16_247a9
}

define i32 @function_247ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_247ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_247af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_247af
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_247b2:
  ret i32 %arg2
}

define i32 @function_247c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_247c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_247c6 = load i32, i32* @eax, align 8
  %v1_247c6 = trunc i32 %v0_247c6 to i8
  %v2_247c6 = load i1, i1* @cf, align 1
  %v3_247c6 = zext i1 %v2_247c6 to i8
  %v4_247c6 = add i8 %v3_247c6, %v1_247c6
  %v22_247c6 = zext i8 %v4_247c6 to i32
  %v24_247c6 = and i32 %v0_247c6, -256
  %v25_247c6 = or i32 %v22_247c6, %v24_247c6
  store i32 %v25_247c6, i32* %eax.global-to-local, align 8
  %v1_247c8 = inttoptr i32 %v25_247c6 to i8*
  %v2_247c8 = load i8, i8* %v1_247c8, align 1
  %v5_247c8 = add i8 %v2_247c8, %v4_247c6
  store i8 %v5_247c8, i8* %v1_247c8, align 1
  %v0_247ca = load i32, i32* %eax.global-to-local, align 8
  %v1_247ca = load i32, i32* @ebp, align 4
  %v2_247ca = add i32 %v1_247ca, -12
  %v3_247ca = inttoptr i32 %v2_247ca to i32*
  store i32 %v0_247ca, i32* %v3_247ca, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_247cf = load i32, i32* @ebp, align 4
  %v1_247cf = add i32 %v0_247cf, -32
  %v2_247cf = inttoptr i32 %v1_247cf to i32*
  %v3_247cf = load i32, i32* %v2_247cf, align 4
  store i32 %v3_247cf, i32* %eax.global-to-local, align 8
  %v1_247d6 = add i32 %v0_247cf, -28
  %v2_247d6 = inttoptr i32 %v1_247d6 to i32*
  %v3_247d6 = load i32, i32* %v2_247d6, align 4
  store i32 %v3_247d6, i32* %eax.global-to-local, align 8
  %v2_247dc = call i32 @unknown_4e87a(i32 %v3_247d6, i32 %v3_247cf)
  store i32 %v2_247dc, i32* %eax.global-to-local, align 8
  %v0_247e1 = load i32, i32* @ebp, align 4
  %v1_247e1 = add i32 %v0_247e1, -12
  %v2_247e1 = inttoptr i32 %v1_247e1 to i32*
  %v3_247e1 = load i32, i32* %v2_247e1, align 4
  %v2_247e4 = xor i32 %v3_247e1, 30
  %v3_247e4 = icmp eq i32 %v2_247e4, 0
  store i32 %v2_247e4, i32* @eax, align 8
  br i1 %v3_247e4, label %bb, label %dec_label_pc_247ed

bb:                                               ; preds = %dec_label_pc_247c6
  %v1_247eb = call i32 @function_247f2()
  store i32 %v1_247eb, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_247ed

dec_label_pc_247ed:                               ; preds = %bb, %dec_label_pc_247c6
  %v2_247eb = phi i32 [ %v1_247eb, %bb ], [ %v2_247e4, %dec_label_pc_247c6 ]
  ret i32 %v2_247eb
}

define i32 @function_247f2() local_unnamed_addr {
dec_label_pc_247f2:
  %v0_247f3 = load i32, i32* @eax, align 8
  ret i32 %v0_247f3
}

define i32 @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_247f4:
  %v1_24811 = call i32 @unknown_4e8ec(i32 %arg1)
  store i32 %v1_24811, i32* @eax, align 8
  %v1_24820 = call i32 @function_24827()
  ret i32 %v1_24820
}

define i32 @function_24827() local_unnamed_addr {
dec_label_pc_24827:
  %v0_24828 = load i32, i32* @eax, align 8
  ret i32 %v0_24828
}

define i32 @_ZSt14__copy_move_a2ILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24829:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_2482c = load i32, i32* %esi.global-to-local, align 4
  %v0_2482d = load i32, i32* %ebx.global-to-local, align 4
  %v1_24854 = call i32 @unknown_4e94e(i32 %arg3)
  store i32 %v1_24854, i32* %esi.global-to-local, align 4
  %v1_24861 = call i32 @unknown_4e94e(i32 %arg2)
  store i32 %v1_24861, i32* %ebx.global-to-local, align 4
  %v1_2486e = call i32 @unknown_4e94e(i32 %arg1)
  %v3_2487e = call i32 @unknown_4ab78(i32 %v1_2486e, i32 %v1_24861, i32 %v1_24854)
  store i32 %v0_2482d, i32* %ebx.global-to-local, align 4
  store i32 %v0_2482c, i32* %esi.global-to-local, align 4
  ret i32 %v3_2487e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4e94e, { 2, 1, 0 }
}

define i32 @_ZSt18uninitialized_copyIPxS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2489b:
  %v3_248d2 = call i32 @unknown_4e9f5(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_248d2
}

define i32 @_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_248ea:
  %stack_var_-17 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  %v15_2491e = icmp eq i32 %arg1, %arg2
  %v1_24921 = icmp eq i1 %v15_2491e, false
  br i1 %v1_24921, label %bb, label %dec_label_pc_24923

bb:                                               ; preds = %dec_label_pc_248ea
  %v6_24921 = sext i8 %arg4 to i32
  %v7_24921 = call i32 @function_24950(i32 %v6_24921, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_24923

dec_label_pc_24923:                               ; preds = %bb, %dec_label_pc_248ea
  %v2_24923 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_24923

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2492e() local_unnamed_addr {
dec_label_pc_2492e:
  store i32 1, i32* @ebx, align 4
  %v0_24933 = load i32, i32* @ebp, align 4
  %v1_24933 = add i32 %v0_24933, -13
  %v1_2493a = add i32 %v0_24933, -36
  %v2_2493a = inttoptr i32 %v1_2493a to i32*
  %v3_2493a = load i32, i32* %v2_2493a, align 4
  %v2_24940 = call i32 @unknown_4bf65(i32 %v3_2493a, i32 %v1_24933)
  %v4_24945 = trunc i32 %v2_24940 to i8
  %v5_24945 = icmp eq i8 %v4_24945, 0
  br i1 %v5_24945, label %bb, label %dec_label_pc_24949

bb:                                               ; preds = %dec_label_pc_2492e
  %v5_24947 = call i32 @function_24950(i32 %v3_2493a, i32 %v1_24933, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_24949

dec_label_pc_24949:                               ; preds = %bb, %dec_label_pc_2492e
  ret i32 1

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_24950, { 1, 0 }
}

define i32 @function_24950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24950:
  store i32 0, i32* @eax, align 8
  store i32 0, i32* @esi, align 4
  %v0_24957 = load i32, i32* @ebx, align 4
  %v4_24957 = trunc i32 %v0_24957 to i8
  %v5_24957 = icmp eq i8 %v4_24957, 0
  br i1 %v5_24957, label %bb, label %dec_label_pc_2495b

bb:                                               ; preds = %dec_label_pc_24950
  %v1_24959 = call i32 @function_24966()
  br label %dec_label_pc_2495b

dec_label_pc_2495b:                               ; preds = %bb, %dec_label_pc_24950
  %v0_2495b = load i32, i32* @ebp, align 4
  %v1_2495b = add i32 %v0_2495b, -13
  ret i32 %v1_2495b
}

define i32 @function_24966() local_unnamed_addr {
dec_label_pc_24966:
  %v0_24966 = load i32, i32* @esi, align 4
  %v4_24968 = trunc i32 %v0_24966 to i8
  %v5_24968 = icmp eq i8 %v4_24968, 0
  br i1 %v5_24968, label %bb, label %dec_label_pc_24966.dec_label_pc_2496c_crit_edge

dec_label_pc_24966.dec_label_pc_2496c_crit_edge:  ; preds = %dec_label_pc_24966
  %v2_2496a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2496c

bb:                                               ; preds = %dec_label_pc_24966
  %v1_2496a = call i32 @function_2497e()
  br label %dec_label_pc_2496c

dec_label_pc_2496c:                               ; preds = %dec_label_pc_24966.dec_label_pc_2496c_crit_edge, %bb
  %v2_2496a = phi i32 [ %v2_2496a.pre, %dec_label_pc_24966.dec_label_pc_2496c_crit_edge ], [ %v1_2496a, %bb ]
  ret i32 %v2_2496a

; uselistorder directives
  uselistorder label %dec_label_pc_2496c, { 1, 0 }
}

define i32 @function_24979() local_unnamed_addr {
dec_label_pc_24979:
  %v0_24979 = call i32 @function_24a21()
  ret i32 %v0_24979
}

define i32 @function_2497e() local_unnamed_addr {
dec_label_pc_2497e:
  %v0_2497e = load i32, i32* @ebp, align 4
  %v1_2497e = add i32 %v0_2497e, -28
  %v2_2497e = inttoptr i32 %v1_2497e to i32*
  %v3_2497e = load i32, i32* %v2_2497e, align 4
  %v2_24984 = call i32 @unknown_4ea93(i32 %v3_2497e)
  %v4_24989 = trunc i32 %v2_24984 to i8
  %v5_24989 = icmp eq i8 %v4_24989, 0
  br i1 %v5_24989, label %bb, label %dec_label_pc_2498d

dec_label_pc_2498d:                               ; preds = %dec_label_pc_2497e
  %v0_2498d = load i32, i32* @ebp, align 4
  %v1_2498d = add i32 %v0_2498d, -28
  %v2_2498d = inttoptr i32 %v1_2498d to i32*
  %v3_2498d = load i32, i32* %v2_2498d, align 4
  %v2_24990 = add i32 %v0_2498d, -32
  %v3_24990 = inttoptr i32 %v2_24990 to i32*
  %v4_24990 = load i32, i32* %v3_24990, align 4
  %v15_24990 = icmp eq i32 %v3_2498d, %v4_24990
  br i1 %v15_24990, label %bb, label %dec_label_pc_249a1

dec_label_pc_249a1:                               ; preds = %dec_label_pc_2498d
  br label %dec_label_pc_249a5

bb:                                               ; preds = %dec_label_pc_2497e, %dec_label_pc_2498d
  %v1_249a3 = call i32 @function_249b1()
  br label %dec_label_pc_249a5

dec_label_pc_249a5:                               ; preds = %dec_label_pc_249a1, %bb
  %v3_249a5 = phi i32 [ %v1_249a3, %bb ], [ 1, %dec_label_pc_249a1 ]
  ret i32 %v3_249a5

; uselistorder directives
  uselistorder label %dec_label_pc_249a5, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_249ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_249ae:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_249b1() local_unnamed_addr {
dec_label_pc_249b1:
  %v0_249b1 = load i32, i32* @ebp, align 4
  %v1_249b1 = add i32 %v0_249b1, -32
  %v2_249b1 = inttoptr i32 %v1_249b1 to i32*
  %v3_249b1 = load i32, i32* %v2_249b1, align 4
  %v1_249b8 = add i32 %v0_249b1, -28
  %v2_249b8 = inttoptr i32 %v1_249b8 to i32*
  %v3_249b8 = load i32, i32* %v2_249b8, align 4
  %v2_249be = call i32 @unknown_47466(i32 %v3_249b8, i32 %v3_249b1)
  %v1_249c3 = load i32, i32* @ebp, align 4
  %v2_249c3 = add i32 %v1_249c3, -24
  %v3_249c3 = inttoptr i32 %v2_249c3 to i32*
  store i32 %v2_249be, i32* %v3_249c3, align 4
  %v0_249c6 = load i32, i32* @ebp, align 4
  %v1_249d5 = add i32 %v0_249c6, -24
  %v2_249d5 = inttoptr i32 %v1_249d5 to i32*
  %v3_249d5 = load i32, i32* %v2_249d5, align 4
  ret i32 %v3_249d5
}

define i32 @function_24a21() local_unnamed_addr {
dec_label_pc_24a21:
  %v0_24a21 = load i32, i32* @ebp, align 4
  %v1_24a21 = add i32 %v0_24a21, -12
  %v2_24a21 = inttoptr i32 %v1_24a21 to i32*
  %v3_24a21 = load i32, i32* %v2_24a21, align 4
  %v3_24a24 = icmp eq i32 %v3_24a21, 30
  br i1 %v3_24a24, label %bb, label %dec_label_pc_24a2d

bb:                                               ; preds = %dec_label_pc_24a21
  %v1_24a2b = call i32 @function_24a64()
  store i32 %v1_24a2b, i32* @eax, align 8
  br label %dec_label_pc_24a2d

dec_label_pc_24a2d:                               ; preds = %bb, %dec_label_pc_24a21
  %v0_24a2d = call i32 @function_24a5f()
  ret i32 %v0_24a2d
}

define i32 @function_24a30() local_unnamed_addr {
dec_label_pc_24a30:
  %eax.global-to-local = alloca i32, align 4
  %v0_24a30 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24a30
}

define i32 @function_24a5f() local_unnamed_addr {
dec_label_pc_24a5f:
  %v0_24a5f = load i32, i32* @eax, align 8
  ret i32 %v0_24a5f
}

define i32 @function_24a64() local_unnamed_addr {
dec_label_pc_24a64:
  %v0_24a6a = load i32, i32* @eax, align 8
  ret i32 %v0_24a6a
}

define i32 @_ZSt12__miter_baseIPSsENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_24a6b:
  %v1_24a88 = call i32 @unknown_4ec45(i32 %arg1)
  store i32 %v1_24a88, i32* @eax, align 8
  %v1_24a97 = call i32 @function_24a9e()
  ret i32 %v1_24a97
}

define i32 @function_24a9e() local_unnamed_addr {
dec_label_pc_24a9e:
  %v0_24a9f = load i32, i32* @eax, align 8
  ret i32 %v0_24a9f
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPSsS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24aa0:
  %v1_24acb = call i32 @unknown_4eca7(i32 %arg3)
  %v1_24ad8 = call i32 @unknown_4eca7(i32 %arg2)
  %v1_24ae5 = call i32 @unknown_4eca7(i32 %arg1)
  %v3_24af5 = call i32 @unknown_4ecdc(i32 %v1_24ae5, i32 %v1_24ad8, i32 %v1_24acb)
  store i32 %v3_24af5, i32* @eax, align 8
  %v1_24b04 = call i32 @function_24b0b()
  ret i32 %v1_24b04

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4eca7, { 2, 1, 0 }
}

define i32 @function_24b0b() local_unnamed_addr {
dec_label_pc_24b0b:
  %v0_24b11 = load i32, i32* @eax, align 8
  ret i32 %v0_24b11
}

define i32 @_ZNKSt6vectorISsSaISsEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24b12:
  %v1_24b2f = call i32 @unknown_3e2be(i32 %arg1)
  %v1_24b37 = call i32 @unknown_4e700(i32 %v1_24b2f)
  store i32 %v1_24b37, i32* @eax, align 8
  %v1_24b46 = call i32 @function_24b4d()
  ret i32 %v1_24b46
}

define i32 @function_24b4d() local_unnamed_addr {
dec_label_pc_24b4d:
  %v0_24b4e = load i32, i32* @eax, align 8
  ret i32 %v0_24b4e
}

define i32 @_ZSt22__uninitialized_copy_aIPSsS0_SsET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24b4f:
  %v7_24b8c = call i32 @unknown_4edde(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_24b8c, i32* @eax, align 8
  %v1_24b9b = call i32 @function_24ba2()
  ret i32 %v1_24b9b

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

declare i32 @__stack_chk_fail.672(i32, i32) local_unnamed_addr

define i32 @function_24ba2() local_unnamed_addr {
dec_label_pc_24ba2:
  %v0_24ba3 = load i32, i32* @eax, align 8
  ret i32 %v0_24ba3
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ba4:
  ret i32 30
}

define i32 @function_24bba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24bba:
  %v0_24bba = load i32, i32* @ebx, align 4
  %v1_24bba = add i32 %v0_24bba, 76145733
  %v2_24bba = inttoptr i32 %v1_24bba to i8*
  %v3_24bba = load i8, i8* %v2_24bba, align 1
  %v4_24bba = udiv i8 %v3_24bba, 16
  %v5_24bba = mul i8 %v3_24bba, 16
  %v6_24bba = or i8 %v4_24bba, %v5_24bba
  store i8 %v6_24bba, i8* %v2_24bba, align 1
  %v0_24bc1 = call i32 @unknown_4ee82()
  %v0_24bca = load i32, i32* @ebp, align 4
  %v1_24bca = add i32 %v0_24bca, -13
  %v2_24bd0 = call i32 @unknown_4981c(i32 %v1_24bca, i32 %v0_24bc1)
  store i32 %v2_24bd0, i32* @eax, align 8
  %v0_24bd5 = load i32, i32* @ebp, align 4
  %v1_24bd5 = add i32 %v0_24bd5, -12
  %v2_24bd5 = inttoptr i32 %v1_24bd5 to i32*
  %v3_24bd5 = load i32, i32* %v2_24bd5, align 4
  %v3_24bd8 = icmp eq i32 %v3_24bd5, 30
  br i1 %v3_24bd8, label %bb, label %dec_label_pc_24be1

bb:                                               ; preds = %dec_label_pc_24bba
  %v1_24bdf = call i32 @function_24be6()
  br label %dec_label_pc_24be1

dec_label_pc_24be1:                               ; preds = %bb, %dec_label_pc_24bba
  %v2_24bdf = phi i32 [ %v1_24bdf, %bb ], [ %v2_24bd0, %dec_label_pc_24bba ]
  ret i32 %v2_24bdf
}

define i32 @function_24be6() local_unnamed_addr {
dec_label_pc_24be6:
  %v0_24be7 = load i32, i32* @eax, align 8
  ret i32 %v0_24be7
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_24be8:
  %v1_24c02 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_24c02 = inttoptr i32 %v1_24c02 to i32*
  %v3_24c02 = load i32, i32* %v2_24c02, align 4
  store i32 %v3_24c02, i32* @eax, align 8
  %v2_24c0f = call i32 @function_24c16(i32 %arg1)
  ret i32 %v2_24c0f
}

define i32 @function_24c16(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c16:
  %v0_24c17 = load i32, i32* @eax, align 8
  ret i32 %v0_24c17
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c18:
  %v1_24c32 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_24c32 = inttoptr i32 %v1_24c32 to i32*
  %v3_24c32 = load i32, i32* %v2_24c32, align 4
  store i32 %v3_24c32, i32* @eax, align 8
  %v2_24c3f = call i32 @function_24c46(i32 %arg1)
  ret i32 %v2_24c3f
}

define i32 @function_24c46(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c46:
  %v0_24c47 = load i32, i32* @eax, align 8
  ret i32 %v0_24c47
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c48:
  %v1_24c62 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_24c62, i32* @eax, align 8
  %v2_24c6f = call i32 @function_24c76(i32 %arg1)
  ret i32 %v2_24c6f
}

define i32 @function_24c76(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c76:
  %v0_24c77 = load i32, i32* @eax, align 8
  ret i32 %v0_24c77
}

define i32 @_ZNKSt10_Select1stISt4pairIKSsSsEEclERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c78:
  store i32 %arg2, i32* @eax, align 8
  %v3_24ca2 = call i32 @function_24ca9(i32 %arg2, i32 %arg1)
  ret i32 %v3_24ca2
}

define i32 @function_24ca9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ca9:
  %v0_24caa = load i32, i32* @eax, align 8
  ret i32 %v0_24caa
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24cac:
  %v10_24d2b117126 = icmp eq i32 %arg3, 0
  %v1_24d2f118127 = icmp eq i1 %v10_24d2b117126, false
  %v5_24d32122129 = icmp eq i1 %v1_24d2f118127, false
  %v1_24d34123130 = icmp eq i1 %v5_24d32122129, false
  br i1 %v1_24d34123130, label %dec_label_pc_24cdd.lr.ph, label %dec_label_pc_24d36

dec_label_pc_24cdd.lr.ph:                         ; preds = %dec_label_pc_24cac, %dec_label_pc_24d07
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_24d07 ], [ %arg4, %dec_label_pc_24cac ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_24d13, %dec_label_pc_24d07 ], [ %arg3, %dec_label_pc_24cac ]
  br label %dec_label_pc_24cdd

dec_label_pc_24cdd:                               ; preds = %dec_label_pc_24cdd.lr.ph, %dec_label_pc_24d1d
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_24cdd.lr.ph ], [ %v1_24d23, %dec_label_pc_24d1d ]
  %v1_24ce3 = call i32 @unknown_49850(i32 %stack_var_-40.0124)
  %v3_24cfb = call i32 @unknown_3f5f8(i32 %arg2, i32 %v1_24ce3, i32 %arg5)
  %v1_24d00 = xor i32 %v3_24cfb, 1
  %v4_24d00 = trunc i32 %v1_24d00 to i8
  %v5_24d03 = icmp eq i8 %v4_24d00, 0
  br i1 %v5_24d03, label %dec_label_pc_24d1d, label %dec_label_pc_24d07

dec_label_pc_24d07:                               ; preds = %dec_label_pc_24cdd
  %v1_24d13 = call i32 @unknown_48ea8(i32 %stack_var_-40.0124)
  %v10_24d2b117 = icmp eq i32 %v1_24d13, 0
  %v1_24d2f118 = icmp eq i1 %v10_24d2b117, false
  %v5_24d32122 = icmp eq i1 %v1_24d2f118, false
  %v1_24d34123 = icmp eq i1 %v5_24d32122, false
  br i1 %v1_24d34123, label %dec_label_pc_24cdd.lr.ph, label %dec_label_pc_24d36

dec_label_pc_24d1d:                               ; preds = %dec_label_pc_24cdd
  %v1_24d23 = call i32 @unknown_48e78(i32 %stack_var_-40.0124)
  %v10_24d2b = icmp eq i32 %v1_24d23, 0
  %v1_24d2f = icmp eq i1 %v10_24d2b, false
  %v5_24d32 = icmp eq i1 %v1_24d2f, false
  %v1_24d34 = icmp eq i1 %v5_24d32, false
  br i1 %v1_24d34, label %dec_label_pc_24cdd, label %dec_label_pc_24d36

dec_label_pc_24d36:                               ; preds = %dec_label_pc_24d1d, %dec_label_pc_24cac, %dec_label_pc_24d07
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_24cac ], [ %stack_var_-40.0124, %dec_label_pc_24d07 ], [ %stack_var_-44.0.ph132, %dec_label_pc_24d1d ]
  %v2_24d43 = call i32 @unknown_49a0c(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_24d13, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder label %dec_label_pc_24d36, { 0, 2, 1 }
  uselistorder label %dec_label_pc_24cdd, { 1, 0 }
  uselistorder label %dec_label_pc_24cdd.lr.ph, { 1, 0 }
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEC1EPSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d60:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_24d8f = call i32 @function_24d96(i32 %arg2, i32 %tmp101)
  ret i32 %v3_24d8f
}

define i32 @function_24d96(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d96:
  %v0_24d97 = load i32, i32* @eax, align 8
  ret i32 %v0_24d97
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24d98:
  %v1_24db2 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_24db2 = inttoptr i32 %v1_24db2 to i32*
  %v3_24db2 = load i32, i32* %v2_24db2, align 4
  store i32 %v3_24db2, i32* @eax, align 8
  %v2_24dbf = call i32 @function_24dc6(i32 %arg1)
  ret i32 %v2_24dbf
}

define i32 @function_24dc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_24dc6:
  %v0_24dc7 = load i32, i32* @eax, align 8
  ret i32 %v0_24dc7
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24dc8:
  %stack_var_-18 = alloca i32, align 4
  %v10_24df8 = icmp eq i32 %arg3, 0
  %v1_24dfc = icmp eq i1 %v10_24df8, false
  br i1 %v1_24dfc, label %dec_label_pc_24e50, label %dec_label_pc_24dfe

dec_label_pc_24dfe:                               ; preds = %dec_label_pc_24dc8
  %v1_24e04 = call i32 @unknown_44e7c(i32 %arg2)
  %v15_24e09 = icmp eq i32 %v1_24e04, %arg4
  br i1 %v15_24e09, label %dec_label_pc_24e50, label %dec_label_pc_24e0e

dec_label_pc_24e0e:                               ; preds = %dec_label_pc_24dfe
  %v1_24e14 = call i32 @unknown_448e6(i32 %arg4)
  %v2_24e22 = ptrtoint i32* %stack_var_-18 to i32
  %v2_24e28 = call i32 @unknown_49a40(i32 %v2_24e22, i32 %arg5)
  %v3_24e3b = call i32 @unknown_3f714(i32 %arg2, i32 %v2_24e28, i32 %v1_24e14)
  br label %dec_label_pc_24e50

dec_label_pc_24e50:                               ; preds = %dec_label_pc_24e0e, %dec_label_pc_24dc8, %dec_label_pc_24dfe
  %v2_24e60 = call i32 @unknown_4f0d6(i32 %arg2, i32 %arg5)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_24e50, { 0, 2, 1 }
}

define i32 @function_24e9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_24e9a:
  %v0_24e9a = load i32, i32* @eax, align 8
  %v2_24e9a = load i1, i1* @cf, align 1
  %v3_24e9a = zext i1 %v2_24e9a to i32
  %v4_24e9a = add i32 %v0_24e9a, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v5_24e9a = add i32 %v4_24e9a, %v3_24e9a
  %v25_24e9a = and i32 %v5_24e9a, 255
  %v27_24e9a = and i32 %v0_24e9a, -256
  %v28_24e9a = or i32 %v25_24e9a, %v27_24e9a
  %v0_24e9c = load i32, i32* @ebp, align 4
  %v1_24ea2 = add i32 %v0_24e9c, -27
  %v2_24ea2 = inttoptr i32 %v1_24ea2 to i32*
  %v3_24ea2 = load i32, i32* %v2_24ea2, align 4
  %v2_24ea8 = call i32 @unknown_49b28(i32 %v3_24ea2, i32 %v28_24e9a)
  %v1_24ead = add i32 %v0_24e9c, -27
  %v2_24ead = inttoptr i32 %v1_24ead to i32*
  %v3_24ead = load i32, i32* %v2_24ead, align 4
  store i32 %v3_24ead, i32* @eax, align 8
  %v1_24eb0 = add i32 %v0_24e9c, -11
  %v2_24eb0 = inttoptr i32 %v1_24eb0 to i32*
  %v3_24eb0 = load i32, i32* %v2_24eb0, align 4
  %v3_24eb3 = icmp eq i32 %v3_24eb0, 30
  br i1 %v3_24eb3, label %bb, label %dec_label_pc_24ebc

bb:                                               ; preds = %dec_label_pc_24e9a
  %v1_24eba = call i32 @function_24ec1()
  br label %dec_label_pc_24ebc

dec_label_pc_24ebc:                               ; preds = %bb, %dec_label_pc_24e9a
  %v2_24eba = phi i32 [ %v1_24eba, %bb ], [ %v3_24ead, %dec_label_pc_24e9a ]
  ret i32 %v2_24eba

; uselistorder directives
  uselistorder i32 %v0_24e9a, { 1, 0 }
}

define i32 @function_24ec1() local_unnamed_addr {
dec_label_pc_24ec1:
  %v0_24ec6 = load i32, i32* @eax, align 8
  ret i32 %v0_24ec6
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24eca:
  ret i32 %arg3
}

define i32 @function_24ee2(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ee2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_24ee7 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_24ee7 = load i32, i32* @eax, align 8
  %v4_24ee7 = trunc i32 %v3_24ee7 to i8
  %v5_24ee7 = add i8 %v4_24ee7, %v2_24ee7
  %v21_24ee7 = inttoptr i32 %v3_24ee7 to i8*
  store i8 %v5_24ee7, i8* %v21_24ee7, align 1
  %v0_24ee9 = load i32, i32* @eax, align 8
  %v1_24ee9 = load i32, i32* @ebp, align 4
  %v2_24ee9 = add i32 %v1_24ee9, -12
  %v3_24ee9 = inttoptr i32 %v2_24ee9 to i32*
  store i32 %v0_24ee9, i32* %v3_24ee9, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_24eee = load i32, i32* @ebp, align 4
  %v1_24eee = add i32 %v0_24eee, -64
  %v2_24eee = inttoptr i32 %v1_24eee to i32*
  %v3_24eee = load i32, i32* %v2_24eee, align 4
  store i32 %v3_24eee, i32* %eax.global-to-local, align 8
  %v1_24ef1 = load i32, i32* @esp, align 4
  %v2_24ef1 = inttoptr i32 %v1_24ef1 to i32*
  store i32 %v3_24eee, i32* %v2_24ef1, align 4
  %v0_24ef4 = call i32 @unknown_43b46()
  store i32 %v0_24ef4, i32* %eax.global-to-local, align 8
  %v1_24ef9 = load i32, i32* @ebp, align 4
  %v2_24ef9 = add i32 %v1_24ef9, -28
  %v3_24ef9 = inttoptr i32 %v2_24ef9 to i32*
  store i32 %v0_24ef4, i32* %v3_24ef9, align 4
  %v0_24efc = load i32, i32* @ebp, align 4
  %v1_24efc = add i32 %v0_24efc, -64
  %v2_24efc = inttoptr i32 %v1_24efc to i32*
  %v3_24efc = load i32, i32* %v2_24efc, align 4
  store i32 %v3_24efc, i32* %eax.global-to-local, align 8
  %v1_24eff = load i32, i32* @esp, align 4
  %v2_24eff = inttoptr i32 %v1_24eff to i32*
  store i32 %v3_24efc, i32* %v2_24eff, align 4
  %v0_24f02 = call i32 @unknown_44f7e()
  store i32 %v0_24f02, i32* %eax.global-to-local, align 8
  %v1_24f07 = load i32, i32* @ebp, align 4
  %v2_24f07 = add i32 %v1_24f07, -24
  %v3_24f07 = inttoptr i32 %v2_24f07 to i32*
  store i32 %v0_24f02, i32* %v3_24f07, align 4
  %v0_24f0a = load i32, i32* @ebp, align 4
  %v1_24f0a = add i32 %v0_24f0a, -13
  %v2_24f0a = inttoptr i32 %v1_24f0a to i8*
  store i8 1, i8* %v2_24f0a, align 1
  %v0_24f6c7 = load i32, i32* @ebp, align 4
  %v1_24f6c8 = add i32 %v0_24f6c7, -28
  %v2_24f6c9 = inttoptr i32 %v1_24f6c8 to i32*
  %v3_24f6c10 = load i32, i32* %v2_24f6c9, align 4
  %v10_24f6c11 = icmp eq i32 %v3_24f6c10, 0
  %v1_24f7012 = icmp eq i1 %v10_24f6c11, false
  %v2_24f7013 = zext i1 %v1_24f7012 to i32
  %v3_24f7014 = load i32, i32* %eax.global-to-local, align 8
  %v4_24f7015 = and i32 %v3_24f7014, -256
  %v5_24f7016 = or i32 %v2_24f7013, %v4_24f7015
  store i32 %v5_24f7016, i32* %eax.global-to-local, align 8
  %v5_24f7317 = icmp eq i1 %v1_24f7012, false
  %v1_24f7518 = icmp eq i1 %v5_24f7317, false
  br i1 %v1_24f7518, label %dec_label_pc_24f10, label %dec_label_pc_24f77

dec_label_pc_24f10:                               ; preds = %dec_label_pc_24ee2, %dec_label_pc_24f69
  %v2_24f6c20 = phi i32* [ %v2_24f6c, %dec_label_pc_24f69 ], [ %v2_24f6c9, %dec_label_pc_24ee2 ]
  %v0_24f6c19 = phi i32 [ %v0_24f6c, %dec_label_pc_24f69 ], [ %v0_24f6c7, %dec_label_pc_24ee2 ]
  %v3_24f10 = load i32, i32* %v2_24f6c20, align 4
  store i32 %v3_24f10, i32* %eax.global-to-local, align 8
  %v2_24f13 = add i32 %v0_24f6c19, -24
  %v3_24f13 = inttoptr i32 %v2_24f13 to i32*
  store i32 %v3_24f10, i32* %v3_24f13, align 4
  %v0_24f16 = load i32, i32* @ebp, align 4
  %v1_24f16 = add i32 %v0_24f16, -28
  %v2_24f16 = inttoptr i32 %v1_24f16 to i32*
  %v3_24f16 = load i32, i32* %v2_24f16, align 4
  store i32 %v3_24f16, i32* %eax.global-to-local, align 8
  %v1_24f19 = load i32, i32* @esp, align 4
  %v2_24f19 = inttoptr i32 %v1_24f19 to i32*
  store i32 %v3_24f16, i32* %v2_24f19, align 4
  %v0_24f1c = call i32 @unknown_49a6e()
  store i32 %v0_24f1c, i32* %eax.global-to-local, align 8
  store i32 %v0_24f1c, i32* %ebx.global-to-local, align 4
  %v0_24f23 = load i32, i32* @ebp, align 4
  %v1_24f23 = add i32 %v0_24f23, -68
  %v2_24f23 = inttoptr i32 %v1_24f23 to i32*
  %v3_24f23 = load i32, i32* %v2_24f23, align 4
  %v1_24f26 = load i32, i32* @esp, align 4
  %v2_24f26 = add i32 %v1_24f26, 4
  %v3_24f26 = inttoptr i32 %v2_24f26 to i32*
  store i32 %v3_24f23, i32* %v3_24f26, align 4
  %v0_24f2a = load i32, i32* @ebp, align 4
  %v1_24f2a = add i32 %v0_24f2a, -18
  store i32 %v1_24f2a, i32* %eax.global-to-local, align 8
  %v1_24f2d = load i32, i32* @esp, align 4
  %v2_24f2d = inttoptr i32 %v1_24f2d to i32*
  store i32 %v1_24f2a, i32* %v2_24f2d, align 4
  %v0_24f30 = call i32 @unknown_49b42()
  store i32 %v0_24f30, i32* %eax.global-to-local, align 8
  %v0_24f35 = load i32, i32* @ebp, align 4
  %v1_24f35 = add i32 %v0_24f35, -64
  %v2_24f35 = inttoptr i32 %v1_24f35 to i32*
  %v3_24f35 = load i32, i32* %v2_24f35, align 4
  store i32 %v3_24f35, i32* %edx.global-to-local, align 8
  %v0_24f38 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24f38 = load i32, i32* @esp, align 4
  %v2_24f38 = add i32 %v1_24f38, 8
  %v3_24f38 = inttoptr i32 %v2_24f38 to i32*
  store i32 %v0_24f38, i32* %v3_24f38, align 4
  %v0_24f3c = load i32, i32* %eax.global-to-local, align 8
  %v1_24f3c = load i32, i32* @esp, align 4
  %v2_24f3c = add i32 %v1_24f3c, 4
  %v3_24f3c = inttoptr i32 %v2_24f3c to i32*
  store i32 %v0_24f3c, i32* %v3_24f3c, align 4
  %v0_24f40 = load i32, i32* %edx.global-to-local, align 8
  %v1_24f40 = load i32, i32* @esp, align 4
  %v2_24f40 = inttoptr i32 %v1_24f40 to i32*
  store i32 %v0_24f40, i32* %v2_24f40, align 4
  %v0_24f43 = call i32 @unknown_3f816()
  store i32 %v0_24f43, i32* %eax.global-to-local, align 8
  %v1_24f48 = trunc i32 %v0_24f43 to i8
  %v2_24f48 = load i32, i32* @ebp, align 4
  %v3_24f48 = add i32 %v2_24f48, -13
  %v4_24f48 = inttoptr i32 %v3_24f48 to i8*
  store i8 %v1_24f48, i8* %v4_24f48, align 1
  %v0_24f4b = load i32, i32* @ebp, align 4
  %v1_24f4b = add i32 %v0_24f4b, -13
  %v2_24f4b = inttoptr i32 %v1_24f4b to i8*
  %v3_24f4b = load i8, i8* %v2_24f4b, align 1
  %v10_24f4b = icmp eq i8 %v3_24f4b, 0
  %v1_24f5e = add i32 %v0_24f4b, -28
  %v2_24f5e = inttoptr i32 %v1_24f5e to i32*
  %v3_24f5e = load i32, i32* %v2_24f5e, align 4
  store i32 %v3_24f5e, i32* %eax.global-to-local, align 8
  %v1_24f61 = load i32, i32* @esp, align 4
  %v2_24f61 = inttoptr i32 %v1_24f61 to i32*
  store i32 %v3_24f5e, i32* %v2_24f61, align 4
  br i1 %v10_24f4b, label %dec_label_pc_24f5e, label %dec_label_pc_24f51

dec_label_pc_24f51:                               ; preds = %dec_label_pc_24f10
  %v0_24f57 = call i32 @unknown_490c6()
  br label %dec_label_pc_24f69

dec_label_pc_24f5e:                               ; preds = %dec_label_pc_24f10
  %v0_24f64 = call i32 @unknown_49096()
  br label %dec_label_pc_24f69

dec_label_pc_24f69:                               ; preds = %dec_label_pc_24f5e, %dec_label_pc_24f51
  %storemerge = phi i32 [ %v0_24f64, %dec_label_pc_24f5e ], [ %v0_24f57, %dec_label_pc_24f51 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_24f69 = load i32, i32* @ebp, align 4
  %v2_24f69 = add i32 %v1_24f69, -28
  %v3_24f69 = inttoptr i32 %v2_24f69 to i32*
  store i32 %storemerge, i32* %v3_24f69, align 4
  %v0_24f6c = load i32, i32* @ebp, align 4
  %v1_24f6c = add i32 %v0_24f6c, -28
  %v2_24f6c = inttoptr i32 %v1_24f6c to i32*
  %v3_24f6c = load i32, i32* %v2_24f6c, align 4
  %v10_24f6c = icmp eq i32 %v3_24f6c, 0
  %v1_24f70 = icmp eq i1 %v10_24f6c, false
  %v2_24f70 = zext i1 %v1_24f70 to i32
  %v3_24f70 = load i32, i32* %eax.global-to-local, align 8
  %v4_24f70 = and i32 %v3_24f70, -256
  %v5_24f70 = or i32 %v2_24f70, %v4_24f70
  store i32 %v5_24f70, i32* %eax.global-to-local, align 8
  %v5_24f73 = icmp eq i1 %v1_24f70, false
  %v1_24f75 = icmp eq i1 %v5_24f73, false
  br i1 %v1_24f75, label %dec_label_pc_24f10, label %dec_label_pc_24f77

dec_label_pc_24f77:                               ; preds = %dec_label_pc_24f69, %dec_label_pc_24ee2
  %v0_24f6c.lcssa = phi i32 [ %v0_24f6c7, %dec_label_pc_24ee2 ], [ %v0_24f6c, %dec_label_pc_24f69 ]
  %v1_24f77 = add i32 %v0_24f6c.lcssa, -24
  %v2_24f77 = inttoptr i32 %v1_24f77 to i32*
  %v3_24f77 = load i32, i32* %v2_24f77, align 4
  %v1_24f7a = load i32, i32* @esp, align 4
  %v2_24f7a = add i32 %v1_24f7a, 4
  %v3_24f7a = inttoptr i32 %v2_24f7a to i32*
  store i32 %v3_24f77, i32* %v3_24f7a, align 4
  %v0_24f7e = load i32, i32* @ebp, align 4
  %v1_24f7e = add i32 %v0_24f7e, -44
  store i32 %v1_24f7e, i32* %eax.global-to-local, align 8
  %v1_24f81 = load i32, i32* @esp, align 4
  %v2_24f81 = inttoptr i32 %v1_24f81 to i32*
  store i32 %v1_24f7e, i32* %v2_24f81, align 4
  %v0_24f84 = call i32 @unknown_49c2a()
  store i32 %v0_24f84, i32* %eax.global-to-local, align 8
  %v0_24f89 = load i32, i32* @ebp, align 4
  %v1_24f89 = add i32 %v0_24f89, -13
  %v2_24f89 = inttoptr i32 %v1_24f89 to i8*
  %v3_24f89 = load i8, i8* %v2_24f89, align 1
  %v10_24f89 = icmp eq i8 %v3_24f89, 0
  br i1 %v10_24f89, label %dec_label_pc_25015, label %dec_label_pc_24f93

dec_label_pc_24f93:                               ; preds = %dec_label_pc_24f77
  %v1_24f93 = add i32 %v0_24f89, -40
  store i32 %v1_24f93, i32* %eax.global-to-local, align 8
  %v1_24f96 = add i32 %v0_24f89, -64
  %v2_24f96 = inttoptr i32 %v1_24f96 to i32*
  %v3_24f96 = load i32, i32* %v2_24f96, align 4
  store i32 %v3_24f96, i32* %edx.global-to-local, align 8
  %v1_24f99 = load i32, i32* @esp, align 4
  %v2_24f99 = add i32 %v1_24f99, 4
  %v3_24f99 = inttoptr i32 %v2_24f99 to i32*
  store i32 %v3_24f96, i32* %v3_24f99, align 4
  %v0_24f9d = load i32, i32* %eax.global-to-local, align 8
  %v1_24f9d = load i32, i32* @esp, align 4
  %v2_24f9d = inttoptr i32 %v1_24f9d to i32*
  store i32 %v0_24f9d, i32* %v2_24f9d, align 4
  %v0_24fa0 = call i32 @unknown_4f2a4()
  %v0_24fa5 = load i32, i32* @esp, align 4
  %v0_24fa8 = load i32, i32* @ebp, align 4
  %v1_24fa8 = add i32 %v0_24fa8, -40
  %v3_24fab = inttoptr i32 %v0_24fa5 to i32*
  store i32 %v1_24fa8, i32* %v3_24fab, align 4
  %v0_24faf = load i32, i32* @ebp, align 4
  %v1_24faf = add i32 %v0_24faf, -44
  store i32 %v1_24faf, i32* %eax.global-to-local, align 8
  %v1_24fb2 = load i32, i32* @esp, align 4
  %v2_24fb2 = inttoptr i32 %v1_24fb2 to i32*
  store i32 %v1_24faf, i32* %v2_24fb2, align 4
  %v0_24fb5 = call i32 @unknown_3f8a8()
  store i32 %v0_24fb5, i32* %eax.global-to-local, align 8
  %v4_24fba = trunc i32 %v0_24fb5 to i8
  %v5_24fba = icmp eq i8 %v4_24fba, 0
  %v0_2500a = load i32, i32* @ebp, align 4
  br i1 %v5_24fba, label %dec_label_pc_2500a, label %dec_label_pc_24fbe

dec_label_pc_24fbe:                               ; preds = %dec_label_pc_24f93
  %v1_24fbe = add i32 %v0_2500a, -17
  %v2_24fbe = inttoptr i32 %v1_24fbe to i8*
  store i8 1, i8* %v2_24fbe, align 1
  %v0_24fc2 = load i32, i32* @ebp, align 4
  %v1_24fc2 = add i32 %v0_24fc2, -36
  store i32 %v1_24fc2, i32* %eax.global-to-local, align 8
  %v1_24fc5 = add i32 %v0_24fc2, -68
  %v2_24fc5 = inttoptr i32 %v1_24fc5 to i32*
  %v3_24fc5 = load i32, i32* %v2_24fc5, align 4
  store i32 %v3_24fc5, i32* %edx.global-to-local, align 8
  %v1_24fc8 = load i32, i32* @esp, align 4
  %v2_24fc8 = add i32 %v1_24fc8, 16
  %v3_24fc8 = inttoptr i32 %v2_24fc8 to i32*
  store i32 %v3_24fc5, i32* %v3_24fc8, align 4
  %v0_24fcc = load i32, i32* @ebp, align 4
  %v1_24fcc = add i32 %v0_24fcc, -24
  %v2_24fcc = inttoptr i32 %v1_24fcc to i32*
  %v3_24fcc = load i32, i32* %v2_24fcc, align 4
  store i32 %v3_24fcc, i32* %edx.global-to-local, align 8
  %v1_24fcf = load i32, i32* @esp, align 4
  %v2_24fcf = add i32 %v1_24fcf, 12
  %v3_24fcf = inttoptr i32 %v2_24fcf to i32*
  store i32 %v3_24fcc, i32* %v3_24fcf, align 4
  %v0_24fd3 = load i32, i32* @ebp, align 4
  %v1_24fd3 = add i32 %v0_24fd3, -28
  %v2_24fd3 = inttoptr i32 %v1_24fd3 to i32*
  %v3_24fd3 = load i32, i32* %v2_24fd3, align 4
  store i32 %v3_24fd3, i32* %edx.global-to-local, align 8
  %v1_24fd6 = load i32, i32* @esp, align 4
  %v2_24fd6 = add i32 %v1_24fd6, 8
  %v3_24fd6 = inttoptr i32 %v2_24fd6 to i32*
  store i32 %v3_24fd3, i32* %v3_24fd6, align 4
  %v0_24fda = load i32, i32* @ebp, align 4
  %v1_24fda = add i32 %v0_24fda, -64
  %v2_24fda = inttoptr i32 %v1_24fda to i32*
  %v3_24fda = load i32, i32* %v2_24fda, align 4
  store i32 %v3_24fda, i32* %edx.global-to-local, align 8
  %v1_24fdd = load i32, i32* @esp, align 4
  %v2_24fdd = add i32 %v1_24fdd, 4
  %v3_24fdd = inttoptr i32 %v2_24fdd to i32*
  store i32 %v3_24fda, i32* %v3_24fdd, align 4
  %v0_24fe1 = load i32, i32* %eax.global-to-local, align 8
  %v1_24fe1 = load i32, i32* @esp, align 4
  %v2_24fe1 = inttoptr i32 %v1_24fe1 to i32*
  store i32 %v0_24fe1, i32* %v2_24fe1, align 4
  %v0_24fe4 = call i32 @unknown_49c92()
  %v0_24fe9 = load i32, i32* @esp, align 4
  %v0_24fec = load i32, i32* @ebp, align 4
  %v1_24fec = add i32 %v0_24fec, -17
  %v2_24fef = add i32 %v0_24fe9, 4
  %v3_24fef = inttoptr i32 %v2_24fef to i32*
  store i32 %v1_24fec, i32* %v3_24fef, align 4
  %v0_24ff3 = load i32, i32* @ebp, align 4
  %v1_24ff3 = add i32 %v0_24ff3, -36
  store i32 %v1_24ff3, i32* %eax.global-to-local, align 8
  %v1_24ff6 = load i32, i32* @esp, align 4
  %v2_24ff6 = add i32 %v1_24ff6, 4
  %v3_24ff6 = inttoptr i32 %v2_24ff6 to i32*
  store i32 %v1_24ff3, i32* %v3_24ff6, align 4
  %v0_24ffa = load i32, i32* @ebp, align 4
  %v1_24ffa = add i32 %v0_24ffa, -60
  %v2_24ffa = inttoptr i32 %v1_24ffa to i32*
  %v3_24ffa = load i32, i32* %v2_24ffa, align 4
  store i32 %v3_24ffa, i32* %eax.global-to-local, align 8
  %v1_24ffd = load i32, i32* @esp, align 4
  %v2_24ffd = inttoptr i32 %v1_24ffd to i32*
  store i32 %v3_24ffa, i32* %v2_24ffd, align 4
  %v0_25000 = call i32 @unknown_4f2ee()
  store i32 %v0_25000, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_250b3

dec_label_pc_2500a:                               ; preds = %dec_label_pc_24f93
  %v1_2500a = add i32 %v0_2500a, -44
  store i32 %v1_2500a, i32* %eax.global-to-local, align 8
  %v1_2500d = load i32, i32* @esp, align 4
  %v2_2500d = inttoptr i32 %v1_2500d to i32*
  store i32 %v1_2500a, i32* %v2_2500d, align 4
  %v0_25010 = call i32 @unknown_4f33a()
  store i32 %v0_25010, i32* %eax.global-to-local, align 8
  %v0_25015.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_25015

dec_label_pc_25015:                               ; preds = %dec_label_pc_2500a, %dec_label_pc_24f77
  %v0_25015 = phi i32 [ %v0_25015.pre, %dec_label_pc_2500a ], [ %v0_24f89, %dec_label_pc_24f77 ]
  %v1_25015 = add i32 %v0_25015, -68
  %v2_25015 = inttoptr i32 %v1_25015 to i32*
  %v3_25015 = load i32, i32* %v2_25015, align 4
  %v1_25018 = load i32, i32* @esp, align 4
  %v2_25018 = add i32 %v1_25018, 4
  %v3_25018 = inttoptr i32 %v2_25018 to i32*
  store i32 %v3_25015, i32* %v3_25018, align 4
  %v0_2501c = load i32, i32* @ebp, align 4
  %v1_2501c = add i32 %v0_2501c, -16
  store i32 %v1_2501c, i32* %eax.global-to-local, align 8
  %v1_2501f = load i32, i32* @esp, align 4
  %v2_2501f = inttoptr i32 %v1_2501f to i32*
  store i32 %v1_2501c, i32* %v2_2501f, align 4
  %v0_25022 = call i32 @unknown_49b42()
  store i32 %v0_25022, i32* %eax.global-to-local, align 8
  store i32 %v0_25022, i32* %ebx.global-to-local, align 4
  %v0_25029 = load i32, i32* @ebp, align 4
  %v1_25029 = add i32 %v0_25029, -44
  %v2_25029 = inttoptr i32 %v1_25029 to i32*
  %v3_25029 = load i32, i32* %v2_25029, align 4
  store i32 %v3_25029, i32* %eax.global-to-local, align 8
  %v1_2502c = load i32, i32* @esp, align 4
  %v2_2502c = inttoptr i32 %v1_2502c to i32*
  store i32 %v3_25029, i32* %v2_2502c, align 4
  %v0_2502f = call i32 @unknown_449e8()
  store i32 %v0_2502f, i32* %eax.global-to-local, align 8
  store i32 %v0_2502f, i32* %edx.global-to-local, align 8
  %v0_25036 = load i32, i32* @ebp, align 4
  %v1_25036 = add i32 %v0_25036, -64
  %v2_25036 = inttoptr i32 %v1_25036 to i32*
  %v3_25036 = load i32, i32* %v2_25036, align 4
  store i32 %v3_25036, i32* %eax.global-to-local, align 8
  %v0_25039 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25039 = load i32, i32* @esp, align 4
  %v2_25039 = add i32 %v1_25039, 8
  %v3_25039 = inttoptr i32 %v2_25039 to i32*
  store i32 %v0_25039, i32* %v3_25039, align 4
  %v0_2503d = load i32, i32* %edx.global-to-local, align 8
  %v1_2503d = load i32, i32* @esp, align 4
  %v2_2503d = add i32 %v1_2503d, 4
  %v3_2503d = inttoptr i32 %v2_2503d to i32*
  store i32 %v0_2503d, i32* %v3_2503d, align 4
  %v0_25041 = load i32, i32* %eax.global-to-local, align 8
  %v1_25041 = load i32, i32* @esp, align 4
  %v2_25041 = inttoptr i32 %v1_25041 to i32*
  store i32 %v0_25041, i32* %v2_25041, align 4
  %v0_25044 = call i32 @unknown_3f816()
  store i32 %v0_25044, i32* %eax.global-to-local, align 8
  %v4_25049 = trunc i32 %v0_25044 to i8
  %v5_25049 = icmp eq i8 %v4_25049, 0
  %v0_25096 = load i32, i32* @ebp, align 4
  br i1 %v5_25049, label %dec_label_pc_25096, label %dec_label_pc_2504d

dec_label_pc_2504d:                               ; preds = %dec_label_pc_25015
  %v1_2504d = add i32 %v0_25096, -15
  %v2_2504d = inttoptr i32 %v1_2504d to i8*
  store i8 1, i8* %v2_2504d, align 1
  %v0_25051 = load i32, i32* @ebp, align 4
  %v1_25051 = add i32 %v0_25051, -32
  store i32 %v1_25051, i32* %eax.global-to-local, align 8
  %v1_25054 = add i32 %v0_25051, -68
  %v2_25054 = inttoptr i32 %v1_25054 to i32*
  %v3_25054 = load i32, i32* %v2_25054, align 4
  store i32 %v3_25054, i32* %edx.global-to-local, align 8
  %v1_25057 = load i32, i32* @esp, align 4
  %v2_25057 = add i32 %v1_25057, 16
  %v3_25057 = inttoptr i32 %v2_25057 to i32*
  store i32 %v3_25054, i32* %v3_25057, align 4
  %v0_2505b = load i32, i32* @ebp, align 4
  %v1_2505b = add i32 %v0_2505b, -24
  %v2_2505b = inttoptr i32 %v1_2505b to i32*
  %v3_2505b = load i32, i32* %v2_2505b, align 4
  store i32 %v3_2505b, i32* %edx.global-to-local, align 8
  %v1_2505e = load i32, i32* @esp, align 4
  %v2_2505e = add i32 %v1_2505e, 12
  %v3_2505e = inttoptr i32 %v2_2505e to i32*
  store i32 %v3_2505b, i32* %v3_2505e, align 4
  %v0_25062 = load i32, i32* @ebp, align 4
  %v1_25062 = add i32 %v0_25062, -28
  %v2_25062 = inttoptr i32 %v1_25062 to i32*
  %v3_25062 = load i32, i32* %v2_25062, align 4
  store i32 %v3_25062, i32* %edx.global-to-local, align 8
  %v1_25065 = load i32, i32* @esp, align 4
  %v2_25065 = add i32 %v1_25065, 8
  %v3_25065 = inttoptr i32 %v2_25065 to i32*
  store i32 %v3_25062, i32* %v3_25065, align 4
  %v0_25069 = load i32, i32* @ebp, align 4
  %v1_25069 = add i32 %v0_25069, -64
  %v2_25069 = inttoptr i32 %v1_25069 to i32*
  %v3_25069 = load i32, i32* %v2_25069, align 4
  store i32 %v3_25069, i32* %edx.global-to-local, align 8
  %v1_2506c = load i32, i32* @esp, align 4
  %v2_2506c = add i32 %v1_2506c, 4
  %v3_2506c = inttoptr i32 %v2_2506c to i32*
  store i32 %v3_25069, i32* %v3_2506c, align 4
  %v0_25070 = load i32, i32* %eax.global-to-local, align 8
  %v1_25070 = load i32, i32* @esp, align 4
  %v2_25070 = inttoptr i32 %v1_25070 to i32*
  store i32 %v0_25070, i32* %v2_25070, align 4
  %v0_25073 = call i32 @unknown_49c92()
  %v0_25078 = load i32, i32* @esp, align 4
  %v0_2507b = load i32, i32* @ebp, align 4
  %v1_2507b = add i32 %v0_2507b, -15
  %v2_2507e = add i32 %v0_25078, 4
  %v3_2507e = inttoptr i32 %v2_2507e to i32*
  store i32 %v1_2507b, i32* %v3_2507e, align 4
  %v0_25082 = load i32, i32* @ebp, align 4
  %v1_25082 = add i32 %v0_25082, -32
  store i32 %v1_25082, i32* %eax.global-to-local, align 8
  %v1_25085 = load i32, i32* @esp, align 4
  %v2_25085 = add i32 %v1_25085, 4
  %v3_25085 = inttoptr i32 %v2_25085 to i32*
  store i32 %v1_25082, i32* %v3_25085, align 4
  %v0_25089 = load i32, i32* @ebp, align 4
  %v1_25089 = add i32 %v0_25089, -60
  %v2_25089 = inttoptr i32 %v1_25089 to i32*
  %v3_25089 = load i32, i32* %v2_25089, align 4
  store i32 %v3_25089, i32* %eax.global-to-local, align 8
  %v1_2508c = load i32, i32* @esp, align 4
  %v2_2508c = inttoptr i32 %v1_2508c to i32*
  store i32 %v3_25089, i32* %v2_2508c, align 4
  %v0_2508f = call i32 @unknown_4f2ee()
  store i32 %v0_2508f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_250b3

dec_label_pc_25096:                               ; preds = %dec_label_pc_25015
  %v1_25096 = add i32 %v0_25096, -14
  %v2_25096 = inttoptr i32 %v1_25096 to i8*
  store i8 0, i8* %v2_25096, align 1
  %v0_2509a = load i32, i32* @ebp, align 4
  %v1_2509a = add i32 %v0_2509a, -14
  %v1_2509d = load i32, i32* @esp, align 4
  %v2_2509d = add i32 %v1_2509d, 8
  %v3_2509d = inttoptr i32 %v2_2509d to i32*
  store i32 %v1_2509a, i32* %v3_2509d, align 4
  %v0_250a1 = load i32, i32* @ebp, align 4
  %v1_250a1 = add i32 %v0_250a1, -44
  store i32 %v1_250a1, i32* %eax.global-to-local, align 8
  %v1_250a4 = load i32, i32* @esp, align 4
  %v2_250a4 = add i32 %v1_250a4, 4
  %v3_250a4 = inttoptr i32 %v2_250a4 to i32*
  store i32 %v1_250a1, i32* %v3_250a4, align 4
  %v0_250a8 = load i32, i32* @ebp, align 4
  %v1_250a8 = add i32 %v0_250a8, -60
  %v2_250a8 = inttoptr i32 %v1_250a8 to i32*
  %v3_250a8 = load i32, i32* %v2_250a8, align 4
  store i32 %v3_250a8, i32* %eax.global-to-local, align 8
  %v1_250ab = load i32, i32* @esp, align 4
  %v2_250ab = inttoptr i32 %v1_250ab to i32*
  store i32 %v3_250a8, i32* %v2_250ab, align 4
  %v0_250ae = call i32 @unknown_4f2ee()
  store i32 %v0_250ae, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_250b3

dec_label_pc_250b3:                               ; preds = %dec_label_pc_25096, %dec_label_pc_2504d, %dec_label_pc_24fbe
  %v0_250b3 = load i32, i32* @ebp, align 4
  %v1_250b3 = add i32 %v0_250b3, -60
  %v2_250b3 = inttoptr i32 %v1_250b3 to i32*
  %v3_250b3 = load i32, i32* %v2_250b3, align 4
  store i32 %v3_250b3, i32* @eax, align 8
  %v1_250b6 = add i32 %v0_250b3, -12
  %v2_250b6 = inttoptr i32 %v1_250b6 to i32*
  %v3_250b6 = load i32, i32* %v2_250b6, align 4
  %v2_250b9 = xor i32 %v3_250b6, 30
  %v3_250b9 = icmp eq i32 %v2_250b9, 0
  store i32 %v2_250b9, i32* %edx.global-to-local, align 8
  br i1 %v3_250b9, label %bb, label %dec_label_pc_250c2

bb:                                               ; preds = %dec_label_pc_250b3
  %v1_250c0 = call i32 @function_250c7()
  store i32 %v1_250c0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_250c2

dec_label_pc_250c2:                               ; preds = %bb, %dec_label_pc_250b3
  %v2_250c0 = phi i32 [ %v1_250c0, %bb ], [ %v3_250b3, %dec_label_pc_250b3 ]
  ret i32 %v2_250c0

; uselistorder directives
  uselistorder i32 %v0_25096, { 1, 0 }
  uselistorder i32 %v0_2500a, { 1, 0 }
  uselistorder i32 %v0_24f89, { 0, 2, 1, 3 }
  uselistorder i32* %v2_24f6c, { 1, 0 }
  uselistorder i32 %v0_24f6c, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 8, 9, 21, 22, 23, 24, 25, 26, 27, 28, 1, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 ()* @unknown_4f2ee, { 2, 1, 0 }
  uselistorder i32 ()* @unknown_49c92, { 1, 0 }
  uselistorder i32 ()* @unknown_3f816, { 1, 0 }
  uselistorder i32 ()* @unknown_49b42, { 1, 0 }
  uselistorder label %dec_label_pc_24f10, { 1, 0 }
}

define i32 @function_250c7() local_unnamed_addr {
dec_label_pc_250c7:
  %v0_250cb = load i32, i32* @eax, align 8
  ret i32 %v0_250cb
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_250ce:
  %v2_250e8 = load i32, i32* %arg1, align 4
  ret i32 %v2_250e8
}

define i32 @function_2510a() local_unnamed_addr {
dec_label_pc_2510a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2510a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2510a = add i32 %v0_2510a, -1
  store i32 %v1_2510a, i32* %ecx.global-to-local, align 4
  %v0_2510c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2510c
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2510e:
  %v2_25128 = load i32, i32* %arg1, align 4
  ret i32 %v2_25128
}

define i32 @function_2514a() local_unnamed_addr {
dec_label_pc_2514a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2514a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2514a = add i32 %v0_2514a, -1
  store i32 %v1_2514a, i32* %ecx.global-to-local, align 4
  %v0_2514c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2514c
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEE13_M_const_castEv() local_unnamed_addr {
dec_label_pc_2514e:
  %eax.global-to-local = alloca i32, align 4
  %v17_25151 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_25151
}

define i32 @function_25156(i32 %arg1) local_unnamed_addr {
dec_label_pc_25156:
  %v0_25156 = load i32, i32* @ecx, align 4
  %v1_25156 = add i32 %v0_25156, 1166795845
  %v2_25156 = inttoptr i32 %v1_25156 to i8*
  %v3_25156 = load i8, i8* %v2_25156, align 1
  %v5_25156 = trunc i32 %v0_25156 to i8
  %v6_25156 = or i8 %v3_25156, %v5_25156
  store i8 %v6_25156, i8* %v2_25156, align 1
  %v0_2515e = load i32, i32* @ebp, align 4
  %v1_2515e = add i32 %v0_2515e, 1
  store i32 %v1_2515e, i32* @ebp, align 4
  %v2_25166 = add i32 %v0_2515e, -11
  %v3_25166 = inttoptr i32 %v2_25166 to i32*
  store i32 30, i32* %v3_25166, align 4
  %v0_2516b = load i32, i32* @ebp, align 4
  %v1_2516b = add i32 %v0_2516b, -32
  %v2_2516b = inttoptr i32 %v1_2516b to i32*
  %v3_2516b = load i32, i32* %v2_2516b, align 4
  %v1_2516e = inttoptr i32 %v3_2516b to i32*
  %v2_2516e = load i32, i32* %v1_2516e, align 4
  %v1_25174 = add i32 %v0_2516b, -28
  %v2_25174 = inttoptr i32 %v1_25174 to i32*
  %v3_25174 = load i32, i32* %v2_25174, align 4
  %v2_2517a = call i32 @unknown_49eae(i32 %v3_25174, i32 %v2_2516e)
  %v0_2517f = load i32, i32* @ebp, align 4
  %v1_2517f = add i32 %v0_2517f, -28
  %v2_2517f = inttoptr i32 %v1_2517f to i32*
  %v3_2517f = load i32, i32* %v2_2517f, align 4
  store i32 %v3_2517f, i32* @eax, align 8
  %v1_25182 = add i32 %v0_2517f, -12
  %v2_25182 = inttoptr i32 %v1_25182 to i32*
  %v3_25182 = load i32, i32* %v2_25182, align 4
  %v3_25185 = icmp eq i32 %v3_25182, 30
  br i1 %v3_25185, label %bb, label %dec_label_pc_2518e

bb:                                               ; preds = %dec_label_pc_25156
  %v1_2518c = call i32 @function_25193()
  br label %dec_label_pc_2518e

dec_label_pc_2518e:                               ; preds = %bb, %dec_label_pc_25156
  %v3_2518c = phi i32 [ %v1_2518c, %bb ], [ %v3_2517f, %dec_label_pc_25156 ]
  ret i32 %v3_2518c
}

define i32 @function_25193() local_unnamed_addr {
dec_label_pc_25193:
  %v0_25194 = load i32, i32* @eax, align 8
  ret i32 %v0_25194
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25198:
  ret i32 30
}

define i32 @function_25248() local_unnamed_addr {
dec_label_pc_25248:
  %v0_25249 = load i32, i32* @eax, align 8
  ret i32 %v0_25249
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEC1EPSt13_Rb_tree_nodeIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2524c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_2527b = call i32 @function_25282(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2527b
}

define i32 @function_25282(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25282:
  %v0_25283 = load i32, i32* @eax, align 8
  ret i32 %v0_25283
}

define i32 @_ZNSt12_Vector_baseISsSaISsEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_25284:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_252a1 = call i32 @unknown_4f778(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_252b2 = add i32 %tmp100, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_252b2 = inttoptr i32 %v1_252b2 to i32*
  store i32 0, i32* %v2_252b2, align 4
  %v1_252bc = add i32 %tmp100, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_252bc = inttoptr i32 %v1_252bc to i32*
  store i32 0, i32* %v2_252bc, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d6:
  ret i32 30
}

define i32 @function_252ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_252ec:
  %v0_252ec = load i32, i32* @ebx, align 4
  %v1_252ec = add i32 %v0_252ec, 76145733
  %v2_252ec = inttoptr i32 %v1_252ec to i8*
  %v3_252ec = load i8, i8* %v2_252ec, align 1
  %v4_252ec = udiv i8 %v3_252ec, 16
  %v5_252ec = mul i8 %v3_252ec, 16
  %v6_252ec = or i8 %v4_252ec, %v5_252ec
  store i8 %v6_252ec, i8* %v2_252ec, align 1
  %v0_252f3 = call i32 @unknown_4f7ff()
  %v0_252fc = load i32, i32* @ebp, align 4
  %v1_252fc = add i32 %v0_252fc, -13
  %v2_25302 = call i32 @unknown_4a5f0(i32 %v1_252fc, i32 %v0_252f3)
  ret i32 %v2_25302
}

define i32 @function_2530c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2530c:
  %v0_2530c = load i32, i32* @eax, align 8
  %v1_2530c = load i1, i1* @cf, align 1
  %v2_2530c = zext i1 %v1_2530c to i32
  %v3_2530c = add i32 %v0_2530c, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_2530c = add i32 %v3_2530c, %v2_2530c
  %v14_2530c = icmp eq i32 %v4_2530c, 0
  store i32 %v4_2530c, i32* @eax, align 8
  br i1 %v14_2530c, label %bb, label %dec_label_pc_25313

bb:                                               ; preds = %dec_label_pc_2530c
  %v1_25311 = call i32 @function_25318()
  br label %dec_label_pc_25313

dec_label_pc_25313:                               ; preds = %bb, %dec_label_pc_2530c
  %v2_25311 = phi i32 [ %v1_25311, %bb ], [ %v4_2530c, %dec_label_pc_2530c ]
  ret i32 %v2_25311
}

define i32 @function_25318() local_unnamed_addr {
dec_label_pc_25318:
  %v0_25319 = load i32, i32* @eax, align 8
  ret i32 %v0_25319
}

define i32 @_ZNKSt10_Select1stISt4pairIKSsSt6vectorISsSaISsEEEEclERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2531a:
  store i32 %arg2, i32* @eax, align 8
  %v3_25344 = call i32 @function_2534b(i32 %arg2, i32 %arg1)
  ret i32 %v3_25344
}

define i32 @function_2534b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2534b:
  %v0_2534c = load i32, i32* @eax, align 8
  ret i32 %v0_2534c
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2534e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2534e = load i32, i32* %ebp.global-to-local, align 4
  %v1_25368 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_25368 = inttoptr i32 %v1_25368 to i32*
  %v3_25368 = load i32, i32* %v2_25368, align 4
  store i32 %v0_2534e, i32* %ebp.global-to-local, align 4
  ret i32 %v3_25368
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_() local_unnamed_addr {
dec_label_pc_2537e:
  %eax.global-to-local = alloca i32, align 4
  %v5_2537e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2537e
}

define i32 @function_25380(i32 %arg1) local_unnamed_addr {
dec_label_pc_25380:
  %v0_25385 = load i32, i32* @ebp, align 4
  %v1_25385 = add i32 %v0_25385, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_25385 = inttoptr i32 %v1_25385 to i32*
  %v3_25385 = load i32, i32* %v2_25385, align 4
  %v2_25388 = add i32 %v0_25385, -28
  %v3_25388 = inttoptr i32 %v2_25388 to i32*
  store i32 %v3_25385, i32* %v3_25388, align 4
  %v0_2538b = load i32, i32* @ebp, align 4
  %v1_2538b = add i32 %v0_2538b, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2538b = inttoptr i32 %v1_2538b to i32*
  %v3_2538b = load i32, i32* %v2_2538b, align 4
  %v2_2538e = add i32 %v0_2538b, -32
  %v3_2538e = inttoptr i32 %v2_2538e to i32*
  store i32 %v3_2538b, i32* %v3_2538e, align 4
  %v0_25391 = load i32, i32* @ebp, align 4
  %v1_25391 = add i32 %v0_25391, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_25391 = inttoptr i32 %v1_25391 to i32*
  %v3_25391 = load i32, i32* %v2_25391, align 4
  %v2_25394 = add i32 %v0_25391, -36
  %v3_25394 = inttoptr i32 %v2_25394 to i32*
  store i32 %v3_25391, i32* %v3_25394, align 4
  %v0_25397 = load i32, i32* @ebp, align 4
  %v1_25397 = add i32 %v0_25397, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_25397 = inttoptr i32 %v1_25397 to i32*
  %v3_25397 = load i32, i32* %v2_25397, align 4
  %v2_2539a = add i32 %v0_25397, -40
  %v3_2539a = inttoptr i32 %v2_2539a to i32*
  store i32 %v3_25397, i32* %v3_2539a, align 4
  %v0_2539d = load i32, i32* @ebp, align 4
  %v1_2539d = add i32 %v0_2539d, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_2539d = inttoptr i32 %v1_2539d to i32*
  %v3_2539d = load i32, i32* %v2_2539d, align 4
  %v2_253a0 = add i32 %v0_2539d, -44
  %v3_253a0 = inttoptr i32 %v2_253a0 to i32*
  store i32 %v3_2539d, i32* %v3_253a0, align 4
  %v1_253a9 = load i32, i32* @ebp, align 4
  %v2_253a9 = add i32 %v1_253a9, -12
  %v3_253a9 = inttoptr i32 %v2_253a9 to i32*
  store i32 30, i32* %v3_253a9, align 4
  %v0_253ae = load i32, i32* @ebp, align 4
  %v1_253ae = add i32 %v0_253ae, -36
  %v2_253ae = inttoptr i32 %v1_253ae to i32*
  %v3_253ae = load i32, i32* %v2_253ae, align 4
  %v10_253ae = icmp eq i32 %v3_253ae, 0
  %v1_253b2 = icmp eq i1 %v10_253ae, false
  br i1 %v1_253b2, label %dec_label_pc_25406, label %dec_label_pc_253b4

dec_label_pc_253b4:                               ; preds = %dec_label_pc_25380
  %v1_253b4 = add i32 %v0_253ae, -32
  %v2_253b4 = inttoptr i32 %v1_253b4 to i32*
  %v3_253b4 = load i32, i32* %v2_253b4, align 4
  %v1_253ba = call i32 @unknown_454f2(i32 %v3_253b4)
  %v1_253bf = load i32, i32* @ebp, align 4
  %v2_253bf = add i32 %v1_253bf, -40
  %v3_253bf = inttoptr i32 %v2_253bf to i32*
  %v4_253bf = load i32, i32* %v3_253bf, align 4
  %v15_253bf = icmp eq i32 %v1_253ba, %v4_253bf
  br i1 %v15_253bf, label %dec_label_pc_25406, label %dec_label_pc_253c4

dec_label_pc_253c4:                               ; preds = %dec_label_pc_253b4
  %v1_253ca = call i32 @unknown_4a654(i32 %v4_253bf)
  store i32 %v1_253ca, i32* @ebx, align 4
  %v0_253d1 = load i32, i32* @ebp, align 4
  %v1_253d1 = add i32 %v0_253d1, -44
  %v2_253d1 = inttoptr i32 %v1_253d1 to i32*
  %v3_253d1 = load i32, i32* %v2_253d1, align 4
  %v1_253d8 = add i32 %v0_253d1, -14
  %v2_253de = call i32 @unknown_4a698(i32 %v1_253d8, i32 %v3_253d1)
  %v0_253e3 = load i32, i32* @ebp, align 4
  %v1_253e3 = add i32 %v0_253e3, -32
  %v2_253e3 = inttoptr i32 %v1_253e3 to i32*
  %v3_253e3 = load i32, i32* %v2_253e3, align 4
  %v0_253e6 = load i32, i32* @ebx, align 4
  %v3_253f1 = call i32 @unknown_3fcca(i32 %v3_253e3, i32 %v2_253de, i32 %v0_253e6)
  %v4_253f6 = trunc i32 %v3_253f1 to i8
  %v5_253f6 = icmp ne i8 %v4_253f6, 0
  %v2_25406.pre = load i32, i32* @ebp, align 4
  %phitmp = zext i1 %v5_253f6 to i8
  br label %dec_label_pc_25406

dec_label_pc_25406:                               ; preds = %dec_label_pc_253c4, %dec_label_pc_25380, %dec_label_pc_253b4
  %v2_25406 = phi i32 [ %v1_253bf, %dec_label_pc_253b4 ], [ %v0_253ae, %dec_label_pc_25380 ], [ %v2_25406.pre, %dec_label_pc_253c4 ]
  %storemerge = phi i8 [ 1, %dec_label_pc_253b4 ], [ 1, %dec_label_pc_25380 ], [ %phitmp, %dec_label_pc_253c4 ]
  %v3_25406 = add i32 %v2_25406, -13
  %v4_25406 = inttoptr i32 %v3_25406 to i8*
  store i8 %storemerge, i8* %v4_25406, align 1
  %v0_25409 = load i32, i32* @ebp, align 4
  %v1_25409 = add i32 %v0_25409, -44
  %v2_25409 = inttoptr i32 %v1_25409 to i32*
  %v3_25409 = load i32, i32* %v2_25409, align 4
  %v1_25410 = add i32 %v0_25409, -32
  %v2_25410 = inttoptr i32 %v1_25410 to i32*
  %v3_25410 = load i32, i32* %v2_25410, align 4
  %v2_25416 = call i32 @unknown_4f8d8(i32 %v3_25410, i32 %v3_25409)
  %v1_2541b = load i32, i32* @ebp, align 4
  %v2_2541b = add i32 %v1_2541b, -20
  %v3_2541b = inttoptr i32 %v2_2541b to i32*
  store i32 %v2_25416, i32* %v3_2541b, align 4
  %v0_2541e = load i32, i32* @ebp, align 4
  %v1_25424 = add i32 %v0_2541e, -13
  %v2_25424 = inttoptr i32 %v1_25424 to i8*
  %v3_25424 = load i8, i8* %v2_25424, align 1
  %v4_25424 = zext i8 %v3_25424 to i32
  ret i32 %v4_25424

; uselistorder directives
  uselistorder i32 %v4_253bf, { 1, 0 }
  uselistorder label %dec_label_pc_25406, { 0, 2, 1 }
}

define i32 @function_25468(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25468:
  %v0_25469 = load i32, i32* @edx, align 8
  %v3_25469 = icmp eq i32 %v0_25469, 30
  br i1 %v3_25469, label %bb, label %dec_label_pc_25468.dec_label_pc_25472_crit_edge

dec_label_pc_25468.dec_label_pc_25472_crit_edge:  ; preds = %dec_label_pc_25468
  %v2_25470.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25472

bb:                                               ; preds = %dec_label_pc_25468
  %v1_25470 = call i32 @function_25477()
  br label %dec_label_pc_25472

dec_label_pc_25472:                               ; preds = %dec_label_pc_25468.dec_label_pc_25472_crit_edge, %bb
  %v2_25470 = phi i32 [ %v2_25470.pre, %dec_label_pc_25468.dec_label_pc_25472_crit_edge ], [ %v1_25470, %bb ]
  ret i32 %v2_25470

; uselistorder directives
  uselistorder label %dec_label_pc_25472, { 1, 0 }
}

define i32 @function_25477() local_unnamed_addr {
dec_label_pc_25477:
  %v0_2547c = load i32, i32* @eax, align 8
  ret i32 %v0_2547c
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25480:
  ret i32 %arg2
}

define i32 @function_25492(i32 %arg1) local_unnamed_addr {
dec_label_pc_25492:
  %eax.global-to-local = alloca i32, align 4
  %v1_2549f = load i32, i32* @ebp, align 4
  %v2_2549f = add i32 %v1_2549f, -12
  %v3_2549f = inttoptr i32 %v2_2549f to i32*
  store i32 30, i32* %v3_2549f, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_254a4 = load i32, i32* @ebp, align 4
  %v1_254a4 = add i32 %v0_254a4, -64
  %v2_254a4 = inttoptr i32 %v1_254a4 to i32*
  %v3_254a4 = load i32, i32* %v2_254a4, align 4
  store i32 %v3_254a4, i32* %eax.global-to-local, align 8
  %v1_254aa = call i32 @unknown_44252(i32 %v3_254a4)
  store i32 %v1_254aa, i32* %eax.global-to-local, align 8
  %v1_254af = load i32, i32* @ebp, align 4
  %v2_254af = add i32 %v1_254af, -28
  %v3_254af = inttoptr i32 %v2_254af to i32*
  store i32 %v1_254aa, i32* %v3_254af, align 4
  %v0_254b2 = load i32, i32* @ebp, align 4
  %v1_254b2 = add i32 %v0_254b2, -64
  %v2_254b2 = inttoptr i32 %v1_254b2 to i32*
  %v3_254b2 = load i32, i32* %v2_254b2, align 4
  store i32 %v3_254b2, i32* %eax.global-to-local, align 8
  %v1_254b8 = call i32 @unknown_455f4(i32 %v3_254b2)
  store i32 %v1_254b8, i32* %eax.global-to-local, align 8
  %v1_254bd = load i32, i32* @ebp, align 4
  %v2_254bd = add i32 %v1_254bd, -24
  %v3_254bd = inttoptr i32 %v2_254bd to i32*
  store i32 %v1_254b8, i32* %v3_254bd, align 4
  %v0_254c0 = load i32, i32* @ebp, align 4
  %v1_254c0 = add i32 %v0_254c0, -13
  %v2_254c0 = inttoptr i32 %v1_254c0 to i8*
  store i8 1, i8* %v2_254c0, align 1
  %v0_2552211 = load i32, i32* @ebp, align 4
  %v1_2552212 = add i32 %v0_2552211, -28
  %v2_2552213 = inttoptr i32 %v1_2552212 to i32*
  %v3_2552214 = load i32, i32* %v2_2552213, align 4
  %v10_2552215 = icmp eq i32 %v3_2552214, 0
  %v1_2552616 = icmp eq i1 %v10_2552215, false
  %v2_2552617 = zext i1 %v1_2552616 to i32
  %v3_2552618 = load i32, i32* %eax.global-to-local, align 8
  %v4_2552619 = and i32 %v3_2552618, -256
  %v5_2552620 = or i32 %v2_2552617, %v4_2552619
  store i32 %v5_2552620, i32* %eax.global-to-local, align 8
  %v5_2552921 = icmp eq i1 %v1_2552616, false
  %v1_2552b22 = icmp eq i1 %v5_2552921, false
  br i1 %v1_2552b22, label %dec_label_pc_254c6, label %dec_label_pc_2552d

dec_label_pc_254c6:                               ; preds = %dec_label_pc_25492, %dec_label_pc_2551f
  %v2_2552224 = phi i32* [ %v2_25522, %dec_label_pc_2551f ], [ %v2_2552213, %dec_label_pc_25492 ]
  %v0_2552223 = phi i32 [ %v0_25522, %dec_label_pc_2551f ], [ %v0_2552211, %dec_label_pc_25492 ]
  %v3_254c6 = load i32, i32* %v2_2552224, align 4
  store i32 %v3_254c6, i32* %eax.global-to-local, align 8
  %v2_254c9 = add i32 %v0_2552223, -24
  %v3_254c9 = inttoptr i32 %v2_254c9 to i32*
  store i32 %v3_254c6, i32* %v3_254c9, align 4
  %v0_254cc = load i32, i32* @ebp, align 4
  %v1_254cc = add i32 %v0_254cc, -28
  %v2_254cc = inttoptr i32 %v1_254cc to i32*
  %v3_254cc = load i32, i32* %v2_254cc, align 4
  store i32 %v3_254cc, i32* %eax.global-to-local, align 8
  %v1_254d2 = call i32 @unknown_4f92f(i32 %v3_254cc)
  store i32 %v1_254d2, i32* %eax.global-to-local, align 8
  store i32 %v1_254d2, i32* @ebx, align 4
  %v0_254d9 = load i32, i32* @ebp, align 4
  %v1_254d9 = add i32 %v0_254d9, -68
  %v2_254d9 = inttoptr i32 %v1_254d9 to i32*
  %v3_254d9 = load i32, i32* %v2_254d9, align 4
  %v1_254e0 = add i32 %v0_254d9, -18
  store i32 %v1_254e0, i32* %eax.global-to-local, align 8
  %v2_254e6 = call i32 @unknown_4a79a(i32 %v1_254e0, i32 %v3_254d9)
  store i32 %v2_254e6, i32* %eax.global-to-local, align 8
  %v0_254eb = load i32, i32* @ebp, align 4
  %v1_254eb = add i32 %v0_254eb, -64
  %v2_254eb = inttoptr i32 %v1_254eb to i32*
  %v3_254eb = load i32, i32* %v2_254eb, align 4
  %v0_254ee = load i32, i32* @ebx, align 4
  %v3_254f9 = call i32 @unknown_3fdcc(i32 %v3_254eb, i32 %v2_254e6, i32 %v0_254ee)
  store i32 %v3_254f9, i32* %eax.global-to-local, align 8
  %v1_254fe = trunc i32 %v3_254f9 to i8
  %v2_254fe = load i32, i32* @ebp, align 4
  %v3_254fe = add i32 %v2_254fe, -13
  %v4_254fe = inttoptr i32 %v3_254fe to i8*
  store i8 %v1_254fe, i8* %v4_254fe, align 1
  %v0_25501 = load i32, i32* @ebp, align 4
  %v1_25501 = add i32 %v0_25501, -13
  %v2_25501 = inttoptr i32 %v1_25501 to i8*
  %v3_25501 = load i8, i8* %v2_25501, align 1
  %v10_25501 = icmp eq i8 %v3_25501, 0
  %v1_25514 = add i32 %v0_25501, -28
  %v2_25514 = inttoptr i32 %v1_25514 to i32*
  %v3_25514 = load i32, i32* %v2_25514, align 4
  store i32 %v3_25514, i32* %eax.global-to-local, align 8
  br i1 %v10_25501, label %dec_label_pc_25514, label %dec_label_pc_25507

dec_label_pc_25507:                               ; preds = %dec_label_pc_254c6
  %v1_2550d = call i32 @unknown_49830(i32 %v3_25514)
  br label %dec_label_pc_2551f

dec_label_pc_25514:                               ; preds = %dec_label_pc_254c6
  %v1_2551a = call i32 @unknown_49800(i32 %v3_25514)
  br label %dec_label_pc_2551f

dec_label_pc_2551f:                               ; preds = %dec_label_pc_25514, %dec_label_pc_25507
  %storemerge = phi i32 [ %v1_2551a, %dec_label_pc_25514 ], [ %v1_2550d, %dec_label_pc_25507 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_2551f = load i32, i32* @ebp, align 4
  %v2_2551f = add i32 %v1_2551f, -28
  %v3_2551f = inttoptr i32 %v2_2551f to i32*
  store i32 %storemerge, i32* %v3_2551f, align 4
  %v0_25522 = load i32, i32* @ebp, align 4
  %v1_25522 = add i32 %v0_25522, -28
  %v2_25522 = inttoptr i32 %v1_25522 to i32*
  %v3_25522 = load i32, i32* %v2_25522, align 4
  %v10_25522 = icmp eq i32 %v3_25522, 0
  %v1_25526 = icmp eq i1 %v10_25522, false
  %v2_25526 = zext i1 %v1_25526 to i32
  %v3_25526 = load i32, i32* %eax.global-to-local, align 8
  %v4_25526 = and i32 %v3_25526, -256
  %v5_25526 = or i32 %v2_25526, %v4_25526
  store i32 %v5_25526, i32* %eax.global-to-local, align 8
  %v5_25529 = icmp eq i1 %v1_25526, false
  %v1_2552b = icmp eq i1 %v5_25529, false
  br i1 %v1_2552b, label %dec_label_pc_254c6, label %dec_label_pc_2552d

dec_label_pc_2552d:                               ; preds = %dec_label_pc_2551f, %dec_label_pc_25492
  %v0_25522.lcssa = phi i32 [ %v0_2552211, %dec_label_pc_25492 ], [ %v0_25522, %dec_label_pc_2551f ]
  %v1_2552d = add i32 %v0_25522.lcssa, -24
  %v2_2552d = inttoptr i32 %v1_2552d to i32*
  %v3_2552d = load i32, i32* %v2_2552d, align 4
  %v1_25534 = add i32 %v0_25522.lcssa, -44
  store i32 %v1_25534, i32* %eax.global-to-local, align 8
  %v2_2553a = call i32 @unknown_4a6cc(i32 %v1_25534, i32 %v3_2552d)
  store i32 %v2_2553a, i32* %eax.global-to-local, align 8
  %v0_2553f = load i32, i32* @ebp, align 4
  %v1_2553f = add i32 %v0_2553f, -13
  %v2_2553f = inttoptr i32 %v1_2553f to i8*
  %v3_2553f = load i8, i8* %v2_2553f, align 1
  %v10_2553f = icmp eq i8 %v3_2553f, 0
  br i1 %v10_2553f, label %dec_label_pc_255cb, label %dec_label_pc_25549

dec_label_pc_25549:                               ; preds = %dec_label_pc_2552d
  %v1_25549 = add i32 %v0_2553f, -40
  store i32 %v1_25549, i32* %eax.global-to-local, align 8
  %v1_2554c = add i32 %v0_2553f, -64
  %v2_2554c = inttoptr i32 %v1_2554c to i32*
  %v3_2554c = load i32, i32* %v2_2554c, align 4
  %v2_25556 = call i32 @unknown_4faa6(i32 %v1_25549, i32 %v3_2554c)
  %v0_2555e = load i32, i32* @ebp, align 4
  %v1_2555e = add i32 %v0_2555e, -40
  %v1_25565 = add i32 %v0_2555e, -44
  store i32 %v1_25565, i32* %eax.global-to-local, align 8
  %v2_2556b = call i32 @unknown_401de(i32 %v1_25565, i32 %v1_2555e)
  store i32 %v2_2556b, i32* %eax.global-to-local, align 8
  %v4_25570 = trunc i32 %v2_2556b to i8
  %v5_25570 = icmp eq i8 %v4_25570, 0
  %v0_255c0 = load i32, i32* @ebp, align 4
  br i1 %v5_25570, label %dec_label_pc_255c0, label %dec_label_pc_25574

dec_label_pc_25574:                               ; preds = %dec_label_pc_25549
  %v1_25574 = add i32 %v0_255c0, -17
  %v2_25574 = inttoptr i32 %v1_25574 to i8*
  store i8 1, i8* %v2_25574, align 1
  %v0_25578 = load i32, i32* @ebp, align 4
  %v1_25578 = add i32 %v0_25578, -36
  store i32 %v1_25578, i32* %eax.global-to-local, align 8
  %v1_2557b = add i32 %v0_25578, -68
  %v2_2557b = inttoptr i32 %v1_2557b to i32*
  %v3_2557b = load i32, i32* %v2_2557b, align 4
  %v1_25582 = add i32 %v0_25578, -24
  %v2_25582 = inttoptr i32 %v1_25582 to i32*
  %v3_25582 = load i32, i32* %v2_25582, align 4
  %v1_25589 = add i32 %v0_25578, -28
  %v2_25589 = inttoptr i32 %v1_25589 to i32*
  %v3_25589 = load i32, i32* %v2_25589, align 4
  %v1_25590 = add i32 %v0_25578, -64
  %v2_25590 = inttoptr i32 %v1_25590 to i32*
  %v3_25590 = load i32, i32* %v2_25590, align 4
  %v5_2559a = call i32 @unknown_4a7fe(i32 %v1_25578, i32 %v3_25590, i32 %v3_25589, i32 %v3_25582, i32 %v3_2557b)
  %v0_255a2 = load i32, i32* @ebp, align 4
  %v1_255a2 = add i32 %v0_255a2, -17
  %v1_255a9 = add i32 %v0_255a2, -36
  store i32 %v1_255a9, i32* %eax.global-to-local, align 8
  %v1_255b0 = add i32 %v0_255a2, -60
  %v2_255b0 = inttoptr i32 %v1_255b0 to i32*
  %v3_255b0 = load i32, i32* %v2_255b0, align 4
  store i32 %v3_255b0, i32* %eax.global-to-local, align 8
  %v3_255b6 = call i32 @unknown_4faf0(i32 %v3_255b0, i32 %v1_255a9, i32 %v1_255a2)
  store i32 %v3_255b6, i32* %eax.global-to-local, align 8
  %v0_255bb = call i32 @function_25669()
  store i32 %v0_255bb, i32* %eax.global-to-local, align 8
  ret i32 %v0_255bb

dec_label_pc_255c0:                               ; preds = %dec_label_pc_25549
  %v1_255c0 = add i32 %v0_255c0, -44
  store i32 %v1_255c0, i32* %eax.global-to-local, align 8
  %v1_255c6 = call i32 @unknown_4fb3c(i32 %v1_255c0)
  store i32 %v1_255c6, i32* %eax.global-to-local, align 8
  %v0_255cb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_255cb

dec_label_pc_255cb:                               ; preds = %dec_label_pc_255c0, %dec_label_pc_2552d
  %v0_255cb = phi i32 [ %v0_255cb.pre, %dec_label_pc_255c0 ], [ %v0_2553f, %dec_label_pc_2552d ]
  %v1_255cb = add i32 %v0_255cb, -68
  %v2_255cb = inttoptr i32 %v1_255cb to i32*
  %v3_255cb = load i32, i32* %v2_255cb, align 4
  %v1_255d2 = add i32 %v0_255cb, -16
  store i32 %v1_255d2, i32* %eax.global-to-local, align 8
  %v2_255d8 = call i32 @unknown_4a79a(i32 %v1_255d2, i32 %v3_255cb)
  store i32 %v2_255d8, i32* %eax.global-to-local, align 8
  store i32 %v2_255d8, i32* @ebx, align 4
  %v0_255df = load i32, i32* @ebp, align 4
  %v1_255df = add i32 %v0_255df, -44
  %v2_255df = inttoptr i32 %v1_255df to i32*
  %v3_255df = load i32, i32* %v2_255df, align 4
  store i32 %v3_255df, i32* %eax.global-to-local, align 8
  %v1_255e5 = call i32 @unknown_4a756(i32 %v3_255df)
  store i32 %v1_255e5, i32* %eax.global-to-local, align 8
  %v0_255ec = load i32, i32* @ebp, align 4
  %v1_255ec = add i32 %v0_255ec, -64
  %v2_255ec = inttoptr i32 %v1_255ec to i32*
  %v3_255ec = load i32, i32* %v2_255ec, align 4
  store i32 %v3_255ec, i32* %eax.global-to-local, align 8
  %v0_255ef = load i32, i32* @ebx, align 4
  %v3_255fa = call i32 @unknown_3fdcc(i32 %v3_255ec, i32 %v1_255e5, i32 %v0_255ef)
  store i32 %v3_255fa, i32* %eax.global-to-local, align 8
  ret i32 %v3_255fa

; uselistorder directives
  uselistorder i32 %v0_255cb, { 1, 0 }
  uselistorder i32 %v0_25578, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_255c0, { 1, 0 }
  uselistorder i32 %v0_2553f, { 0, 2, 1, 3 }
  uselistorder i32* %v2_25522, { 1, 0 }
  uselistorder i32 %v0_25522, { 0, 2, 1 }
  uselistorder i32 %v3_25514, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 11, 12, 13, 14, 15, 16, 17, 0, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32)* @unknown_3fdcc, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4a79a, { 1, 0 }
  uselistorder label %dec_label_pc_254c6, { 1, 0 }
}

define i32 @function_25602() local_unnamed_addr {
dec_label_pc_25602:
  %ecx.global-to-local = alloca i32, align 4
  %v0_25602 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25602 = add i32 %v0_25602, -1
  store i32 %v1_25602, i32* %ecx.global-to-local, align 4
  %v0_25603 = load i32, i32* @ebp, align 4
  %v1_25603 = add i32 %v0_25603, -15
  %v2_25603 = inttoptr i32 %v1_25603 to i8*
  store i8 1, i8* %v2_25603, align 1
  %v0_25607 = load i32, i32* @ebp, align 4
  %v1_25607 = add i32 %v0_25607, -32
  %v1_2560a = add i32 %v0_25607, -68
  %v2_2560a = inttoptr i32 %v1_2560a to i32*
  %v3_2560a = load i32, i32* %v2_2560a, align 4
  %v1_25611 = add i32 %v0_25607, -24
  %v2_25611 = inttoptr i32 %v1_25611 to i32*
  %v3_25611 = load i32, i32* %v2_25611, align 4
  %v1_25618 = add i32 %v0_25607, -28
  %v2_25618 = inttoptr i32 %v1_25618 to i32*
  %v3_25618 = load i32, i32* %v2_25618, align 4
  %v1_2561f = add i32 %v0_25607, -64
  %v2_2561f = inttoptr i32 %v1_2561f to i32*
  %v3_2561f = load i32, i32* %v2_2561f, align 4
  %v5_25629 = call i32 @unknown_4a7fe(i32 %v1_25607, i32 %v3_2561f, i32 %v3_25618, i32 %v3_25611, i32 %v3_2560a)
  %v0_25631 = load i32, i32* @ebp, align 4
  %v1_25631 = add i32 %v0_25631, -15
  %v1_25638 = add i32 %v0_25631, -32
  %v1_2563f = add i32 %v0_25631, -60
  %v2_2563f = inttoptr i32 %v1_2563f to i32*
  %v3_2563f = load i32, i32* %v2_2563f, align 4
  %v3_25645 = call i32 @unknown_4faf0(i32 %v3_2563f, i32 %v1_25638, i32 %v1_25631)
  %v0_2564a = call i32 @function_25669()
  ret i32 %v0_2564a

; uselistorder directives
  uselistorder i32 %v0_25607, { 0, 2, 1, 3, 4 }
  uselistorder i32* %ecx.global-to-local, { 1, 0 }
}

define i32 @function_25669() local_unnamed_addr {
dec_label_pc_25669:
  %v0_25669 = load i32, i32* @ebp, align 4
  %v1_25669 = add i32 %v0_25669, -60
  %v2_25669 = inttoptr i32 %v1_25669 to i32*
  %v3_25669 = load i32, i32* %v2_25669, align 4
  store i32 %v3_25669, i32* @eax, align 8
  %v1_2566c = add i32 %v0_25669, -12
  %v2_2566c = inttoptr i32 %v1_2566c to i32*
  %v3_2566c = load i32, i32* %v2_2566c, align 4
  %v3_2566f = icmp eq i32 %v3_2566c, 30
  br i1 %v3_2566f, label %bb, label %dec_label_pc_25678

bb:                                               ; preds = %dec_label_pc_25669
  %v1_25676 = call i32 @function_2567d()
  br label %dec_label_pc_25678

dec_label_pc_25678:                               ; preds = %bb, %dec_label_pc_25669
  %v2_25676 = phi i32 [ %v1_25676, %bb ], [ %v3_25669, %dec_label_pc_25669 ]
  ret i32 %v2_25676
}

define i32 @function_2567d() local_unnamed_addr {
dec_label_pc_2567d:
  %v0_2567d = load i32, i32* @ebp, align 4
  %v1_2567d = add i32 %v0_2567d, -4
  %v2_2567d = inttoptr i32 %v1_2567d to i32*
  %v3_2567d = load i32, i32* %v2_2567d, align 4
  store i32 %v3_2567d, i32* @ebx, align 4
  %v0_25681 = load i32, i32* @eax, align 8
  ret i32 %v0_25681
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_25684:
  %v2_2569e = load i32, i32* %arg1, align 4
  ret i32 %v2_2569e
}

define i32 @function_256c0() local_unnamed_addr {
dec_label_pc_256c0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_256c0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_256c0 = add i32 %v0_256c0, -1
  store i32 %v1_256c0, i32* %ecx.global-to-local, align 4
  %v0_256c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_256c2
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_256c3:
  %v1_256dd = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_256dd = inttoptr i32 %v1_256dd to i32*
  %v3_256dd = load i32, i32* %v2_256dd, align 4
  store i32 %v3_256dd, i32* @eax, align 8
  %v2_256ea = call i32 @function_256f1(i32 %arg1)
  ret i32 %v2_256ea
}

define i32 @function_256f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_256f1:
  %v0_256f2 = load i32, i32* @eax, align 8
  ret i32 %v0_256f2
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_256f4:
  ret i32 %arg1
}

define i32 @function_25702(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25702:
  %eax.global-to-local = alloca i32, align 4
  %v0_25702 = load i32, i32* @eax, align 8
  %v1_25702 = trunc i32 %v0_25702 to i8
  %v2_25702 = load i1, i1* @cf, align 1
  %v3_25702 = zext i1 %v2_25702 to i8
  %v4_25702 = add i8 %v3_25702, %v1_25702
  %v22_25702 = zext i8 %v4_25702 to i32
  %v24_25702 = and i32 %v0_25702, -256
  %v25_25702 = or i32 %v22_25702, %v24_25702
  store i32 %v25_25702, i32* %eax.global-to-local, align 8
  %v1_25704 = inttoptr i32 %v25_25702 to i8*
  %v2_25704 = load i8, i8* %v1_25704, align 1
  %v5_25704 = add i8 %v2_25704, %v4_25702
  store i8 %v5_25704, i8* %v1_25704, align 1
  %v0_25706 = load i32, i32* %eax.global-to-local, align 8
  %v1_25706 = load i32, i32* @ebp, align 4
  %v2_25706 = add i32 %v1_25706, -12
  %v3_25706 = inttoptr i32 %v2_25706 to i32*
  store i32 %v0_25706, i32* %v3_25706, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2570b = load i32, i32* @ebp, align 4
  %v1_2570b = add i32 %v0_2570b, -28
  %v2_2570b = inttoptr i32 %v1_2570b to i32*
  %v3_2570b = load i32, i32* %v2_2570b, align 4
  store i32 %v3_2570b, i32* %eax.global-to-local, align 8
  %v1_2570e = inttoptr i32 %v3_2570b to i32*
  %v2_2570e = load i32, i32* %v1_2570e, align 4
  store i32 %v2_2570e, i32* %eax.global-to-local, align 8
  ret i32 %v2_2570e
}

define i32 @function_25730() local_unnamed_addr {
dec_label_pc_25730:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25730 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25730 = add i32 %v0_25730, -1
  store i32 %v1_25730, i32* %ecx.global-to-local, align 4
  %v0_25732 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25732
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSt6vectorISsSaISsEEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_25734:
  %v2_25754 = load i32, i32* %arg2, align 4
  %v2_25760 = call i32 @unknown_4a980(i32 %arg1, i32 %v2_25754)
  store i32 %arg1, i32* @eax, align 8
  %v1_25772 = call i32 @function_25779()
  ret i32 %v1_25772

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25779() local_unnamed_addr {
dec_label_pc_25779:
  %v0_2577a = load i32, i32* @eax, align 8
  ret i32 %v0_2577a
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2577e:
  %v2_257a8 = call i32 @unknown_4fb58(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_257bd = call i32 @function_257c4()
  ret i32 %v1_257bd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_257c4() local_unnamed_addr {
dec_label_pc_257c4:
  %v0_257c5 = load i32, i32* @eax, align 8
  ret i32 %v0_257c5
}

define i32 @_ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_257c8:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* @ebx, align 4
  %v4_257fc = ptrtoint i32* %stack_var_-36 to i32
  %v2_25800 = ptrtoint i32* %stack_var_-32 to i32
  %v2_25806 = call i32 @unknown_42dc6(i32 %v2_25800, i32 %v4_257fc)
  %v4_2580b = trunc i32 %v2_25806 to i8
  %v5_2580b = icmp eq i8 %v4_2580b, 0
  br i1 %v5_2580b, label %bb, label %dec_label_pc_2580f

bb:                                               ; preds = %dec_label_pc_257c8
  %v1_2580d = call i32 @function_2583c()
  br label %dec_label_pc_2580f

dec_label_pc_2580f:                               ; preds = %bb, %dec_label_pc_257c8
  %v2_2580f = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_2580f

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_42dc6, { 1, 0 }
}

define i32 @function_2581a() local_unnamed_addr {
dec_label_pc_2581a:
  store i32 1, i32* @ebx, align 4
  %v0_2581f = load i32, i32* @ebp, align 4
  %v1_2581f = add i32 %v0_2581f, -13
  %v1_25826 = add i32 %v0_2581f, -36
  %v2_25826 = inttoptr i32 %v1_25826 to i32*
  %v3_25826 = load i32, i32* %v2_25826, align 4
  %v2_2582c = call i32 @unknown_4ce43(i32 %v3_25826, i32 %v1_2581f)
  %v4_25831 = trunc i32 %v2_2582c to i8
  %v5_25831 = icmp eq i8 %v4_25831, 0
  br i1 %v5_25831, label %bb, label %dec_label_pc_25835

bb:                                               ; preds = %dec_label_pc_2581a
  %v1_25833 = call i32 @function_2583c()
  br label %dec_label_pc_25835

dec_label_pc_25835:                               ; preds = %bb, %dec_label_pc_2581a
  ret i32 1

; uselistorder directives
  uselistorder i32 ()* @function_2583c, { 1, 0 }
}

define i32 @function_2583c() local_unnamed_addr {
dec_label_pc_2583c:
  store i32 0, i32* @eax, align 8
  store i32 0, i32* @esi, align 4
  %v0_25843 = load i32, i32* @ebx, align 4
  %v4_25843 = trunc i32 %v0_25843 to i8
  %v5_25843 = icmp eq i8 %v4_25843, 0
  br i1 %v5_25843, label %bb, label %dec_label_pc_25847

bb:                                               ; preds = %dec_label_pc_2583c
  %v1_25845 = call i32 @function_25852()
  br label %dec_label_pc_25847

dec_label_pc_25847:                               ; preds = %bb, %dec_label_pc_2583c
  %v0_25847 = load i32, i32* @ebp, align 4
  %v1_25847 = add i32 %v0_25847, -13
  ret i32 %v1_25847
}

define i32 @function_25852() local_unnamed_addr {
dec_label_pc_25852:
  %v0_25852 = load i32, i32* @esi, align 4
  %v4_25854 = trunc i32 %v0_25852 to i8
  %v5_25854 = icmp eq i8 %v4_25854, 0
  br i1 %v5_25854, label %bb, label %dec_label_pc_25852.dec_label_pc_25858_crit_edge

dec_label_pc_25852.dec_label_pc_25858_crit_edge:  ; preds = %dec_label_pc_25852
  %v2_25856.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25858

bb:                                               ; preds = %dec_label_pc_25852
  %v1_25856 = call i32 @function_2586a()
  br label %dec_label_pc_25858

dec_label_pc_25858:                               ; preds = %dec_label_pc_25852.dec_label_pc_25858_crit_edge, %bb
  %v2_25856 = phi i32 [ %v2_25856.pre, %dec_label_pc_25852.dec_label_pc_25858_crit_edge ], [ %v1_25856, %bb ]
  ret i32 %v2_25856

; uselistorder directives
  uselistorder label %dec_label_pc_25858, { 1, 0 }
}

define i32 @function_25865() local_unnamed_addr {
dec_label_pc_25865:
  %v0_25865 = call i32 @function_2591b()
  ret i32 %v0_25865
}

define i32 @function_2586a() local_unnamed_addr {
dec_label_pc_2586a:
  %v0_2586a = load i32, i32* @ebp, align 4
  %v1_2586a = add i32 %v0_2586a, -28
  %v2_2586a = inttoptr i32 %v1_2586a to i32*
  %v3_2586a = load i32, i32* %v2_2586a, align 4
  %v2_25870 = call i32 @unknown_4fec3(i32 %v3_2586a)
  %v4_25875 = trunc i32 %v2_25870 to i8
  %v5_25875 = icmp eq i8 %v4_25875, 0
  br i1 %v5_25875, label %bb, label %dec_label_pc_25879

dec_label_pc_25879:                               ; preds = %dec_label_pc_2586a
  %v0_25879 = load i32, i32* @ebp, align 4
  %v1_25879 = add i32 %v0_25879, -32
  %v1_25880 = add i32 %v0_25879, -28
  %v3_25886 = call i32 @unknown_47f41(i32 %v1_25880, i32 %v1_25879)
  %v4_2588b = trunc i32 %v3_25886 to i8
  %v5_2588b = icmp eq i8 %v4_2588b, 0
  br i1 %v5_2588b, label %bb, label %dec_label_pc_2589b

dec_label_pc_2589b:                               ; preds = %dec_label_pc_25879
  br label %dec_label_pc_2589f

bb:                                               ; preds = %dec_label_pc_2586a, %dec_label_pc_25879
  %v1_2589d = call i32 @function_258ab()
  br label %dec_label_pc_2589f

dec_label_pc_2589f:                               ; preds = %dec_label_pc_2589b, %bb
  %v3_2589f = phi i32 [ %v1_2589d, %bb ], [ 1, %dec_label_pc_2589b ]
  ret i32 %v3_2589f

; uselistorder directives
  uselistorder label %dec_label_pc_2589f, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_258ab() local_unnamed_addr {
dec_label_pc_258ab:
  %v0_258ab = load i32, i32* @ebp, align 4
  %v1_258ab = add i32 %v0_258ab, -32
  %v2_258ab = inttoptr i32 %v1_258ab to i32*
  %v3_258ab = load i32, i32* %v2_258ab, align 4
  %v1_258b2 = add i32 %v0_258ab, -28
  %v2_258b2 = inttoptr i32 %v1_258b2 to i32*
  %v3_258b2 = load i32, i32* %v2_258b2, align 4
  %v2_258b8 = call i32 @unknown_4fef2(i32 %v3_258b2, i32 %v3_258ab)
  %v1_258bd = load i32, i32* @ebp, align 4
  %v2_258bd = add i32 %v1_258bd, -24
  %v3_258bd = inttoptr i32 %v2_258bd to i32*
  store i32 %v2_258b8, i32* %v3_258bd, align 4
  %v0_258c0 = load i32, i32* @ebp, align 4
  %v1_258cf = add i32 %v0_258c0, -24
  %v2_258cf = inttoptr i32 %v1_258cf to i32*
  %v3_258cf = load i32, i32* %v2_258cf, align 4
  ret i32 %v3_258cf
}

define i32 @function_2591b() local_unnamed_addr {
dec_label_pc_2591b:
  %v0_2591b = load i32, i32* @ebp, align 4
  %v1_2591b = add i32 %v0_2591b, -12
  %v2_2591b = inttoptr i32 %v1_2591b to i32*
  %v3_2591b = load i32, i32* %v2_2591b, align 4
  %v3_2591e = icmp eq i32 %v3_2591b, 30
  br i1 %v3_2591e, label %bb, label %dec_label_pc_25927

bb:                                               ; preds = %dec_label_pc_2591b
  %v1_25925 = call i32 @function_2595e()
  store i32 %v1_25925, i32* @eax, align 8
  br label %dec_label_pc_25927

dec_label_pc_25927:                               ; preds = %bb, %dec_label_pc_2591b
  %v0_25927 = call i32 @function_25959()
  ret i32 %v0_25927
}

define i32 @function_2592a() local_unnamed_addr {
dec_label_pc_2592a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2592a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2592a
}

define i32 @function_25959() local_unnamed_addr {
dec_label_pc_25959:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2595e() local_unnamed_addr {
dec_label_pc_2595e:
  %v0_25964 = load i32, i32* @eax, align 8
  ret i32 %v0_25964
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_S_valueEPKSt13_Rb_tree_nodeISsE(i32 %arg1) local_unnamed_addr {
dec_label_pc_25965:
  %v1_2597f = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2597f, i32* @eax, align 8
  %v2_2598c = call i32 @function_25993(i32 %arg1)
  ret i32 %v2_2598c
}

define i32 @function_25993(i32 %arg1) local_unnamed_addr {
dec_label_pc_25993:
  %v0_25994 = load i32, i32* @eax, align 8
  ret i32 %v0_25994
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE14_M_create_nodeERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25996:
  %stack_var_-17 = alloca i32, align 4
  %v2_259ba = call i32 @unknown_50120(i32 %arg1)
  %v1_259c5 = add i32 %v2_259ba, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_259cb = call i32 @unknown_498d3(i32 %v1_259c5)
  %v2_259d2 = ptrtoint i32* %stack_var_-17 to i32
  %v3_259df = call i32 @unknown_49884(i32 %v2_259d2, i32 %arg1)
  %v4_259f8 = call i32 @unknown_3fa26(i32 %v2_259d2, i32 %v2_259cb, i32 %arg2)
  %v1_25a03 = call i32 @unknown_44142(i32 %v2_259d2)
  store i32 %v2_259ba, i32* @eax, align 8
  %v1_25a15 = call i32 @function_25a5d()
  store i32 %v1_25a15, i32* @eax, align 8
  %v0_25a17 = call i32 @function_25a58()
  ret i32 %v0_25a17

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25a1a() local_unnamed_addr {
dec_label_pc_25a1a:
  %eax.global-to-local = alloca i32, align 4
  %v0_25a1a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25a1a
}

define i32 @function_25a48() local_unnamed_addr {
dec_label_pc_25a48:
  %eax.global-to-local = alloca i32, align 4
  %v0_25a48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25a48
}

define i32 @function_25a52(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a52:
  %v0_25a52 = load i32, i32* @eax, align 8
  %v11_25a52 = and i32 %v0_25a52, -24
  ret i32 %v11_25a52
}

define i32 @function_25a58() local_unnamed_addr {
dec_label_pc_25a58:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25a5d() local_unnamed_addr {
dec_label_pc_25a5d:
  %v0_25a61 = load i32, i32* @eax, align 8
  ret i32 %v0_25a61
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a62:
  %v1_25a7c = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_25a7c, i32* @eax, align 8
  %v2_25a89 = call i32 @function_25a90(i32 %arg1)
  ret i32 %v2_25a89
}

define i32 @function_25a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a90:
  %v0_25a91 = load i32, i32* @eax, align 8
  ret i32 %v0_25a91
}

define i32 @_ZN5boost6detail12shared_countC1IPSiNS_15program_options6detail12null_deleterEEET_T0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25a92:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp103
}

define i32 @function_25acc() local_unnamed_addr {
dec_label_pc_25acc:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25acc = load i32, i32* %ecx.global-to-local, align 4
  %v1_25acc = add i32 %v0_25acc, -1997502013
  %v2_25acc = inttoptr i32 %v1_25acc to i32*
  %v3_25acc = load i32, i32* %v2_25acc, align 4
  %v4_25acc = add i32 %v3_25acc, -1
  store i32 %v4_25acc, i32* %v2_25acc, align 4
  %v0_25ad3 = load i32, i32* %eax.global-to-local, align 8
  %v11_25ad3 = and i32 %v0_25ad3, or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256)
  store i32 %v11_25ad3, i32* %eax.global-to-local, align 8
  %v0_25ad5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25ad5 = add i32 %v0_25ad5, -32
  %v2_25ad5 = inttoptr i32 %v1_25ad5 to i32*
  %v3_25ad5 = load i32, i32* %v2_25ad5, align 4
  store i32 %v3_25ad5, i32* %eax.global-to-local, align 8
  %v0_25adc = load i32, i32* %ebx.global-to-local, align 4
  %v2_25adf = call i32 @unknown_50262(i32 %v0_25adc, i32 %v3_25ad5)
  store i32 %v2_25adf, i32* %eax.global-to-local, align 8
  %v0_25ae4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25ae4 = add i32 %v0_25ae4, -28
  %v2_25ae4 = inttoptr i32 %v1_25ae4 to i32*
  %v3_25ae4 = load i32, i32* %v2_25ae4, align 4
  store i32 %v3_25ae4, i32* %eax.global-to-local, align 8
  %v0_25ae7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_25ae7 = inttoptr i32 %v3_25ae4 to i32*
  store i32 %v0_25ae7, i32* %v2_25ae7, align 4
  %v0_25ae9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25ae9 = add i32 %v0_25ae9, -12
  %v2_25ae9 = inttoptr i32 %v1_25ae9 to i32*
  %v3_25ae9 = load i32, i32* %v2_25ae9, align 4
  %v2_25aec = xor i32 %v3_25ae9, 30
  %v3_25aec = icmp eq i32 %v2_25aec, 0
  store i32 %v2_25aec, i32* @eax, align 8
  br i1 %v3_25aec, label %bb, label %dec_label_pc_25af5

bb:                                               ; preds = %dec_label_pc_25acc
  %v1_25af3 = call i32 @function_25b2c()
  store i32 %v1_25af3, i32* @eax, align 8
  br label %dec_label_pc_25af5

dec_label_pc_25af5:                               ; preds = %bb, %dec_label_pc_25acc
  %v0_25af5 = call i32 @function_25b27()
  store i32 %v0_25af5, i32* %eax.global-to-local, align 8
  ret i32 %v0_25af5
}

define i32 @function_25af8() local_unnamed_addr {
dec_label_pc_25af8:
  %eax.global-to-local = alloca i32, align 4
  %v0_25af8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25af8
}

define i32 @function_25b27() local_unnamed_addr {
dec_label_pc_25b27:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25b2c() local_unnamed_addr {
dec_label_pc_25b2c:
  %v0_25b32 = load i32, i32* @eax, align 8
  ret i32 %v0_25b32
}

define i32 @_ZSt4swapIPSiEvRT_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25b33:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_25b53 = load i32, i32* %arg1, align 4
  %v1_25b5b = inttoptr i32 %arg2 to i32*
  %v2_25b5b = load i32, i32* %v1_25b5b, align 4
  store i32 %v2_25b5b, i32* %arg1, align 4
  store i32 %v2_25b53, i32* %v1_25b5b, align 4
  store i32 0, i32* @eax, align 8
  %v3_25b74 = call i32 @function_25b7b(i32 %arg2, i32 %tmp102)
  ret i32 %v3_25b74
}

define i32 @function_25b7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b7a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25b7b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25b7b:
  %v0_25b7c = load i32, i32* @eax, align 8
  ret i32 %v0_25b7c
}

define i32 @_ZNK5boost12eof_iteratorINS_15program_options6detail27common_config_file_iteratorENS1_12basic_optionIcEEE11dereferenceEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b7e:
  %v1_25b98 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_25b98, i32* @eax, align 8
  %v2_25ba5 = call i32 @function_25bac(i32 %arg1)
  ret i32 %v2_25ba5
}

define i32 @function_25bac(i32 %arg1) local_unnamed_addr {
dec_label_pc_25bac:
  %v0_25bad = load i32, i32* @eax, align 8
  ret i32 %v0_25bad
}

define i32 @_ZNSaISt13_Rb_tree_nodeI8CNetAddrEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25bae:
  %v1_25bcb = call i32 @unknown_503d2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_25bda = call i32 @function_25be1()
  ret i32 %v1_25bda
}

define i32 @function_25be1() local_unnamed_addr {
dec_label_pc_25be1:
  %v0_25be2 = load i32, i32* @eax, align 8
  ret i32 %v0_25be2
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13_Rb_tree_implIS4_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25be4:
  ret i32 %arg1
}

define i32 @function_25c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c00:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_25c00 = load i32, i32* @eax, align 8
  %v1_25c00 = trunc i32 %v0_25c00 to i8
  %v1_25c02 = inttoptr i32 %v0_25c00 to i8*
  %v2_25c02 = load i8, i8* %v1_25c02, align 1
  %v5_25c02 = add i8 %v2_25c02, %v1_25c00
  store i8 %v5_25c02, i8* %v1_25c02, align 1
  %v0_25c04 = load i32, i32* @ebx, align 4
  %v1_25c04 = add i32 %v0_25c04, 1086841925
  %v2_25c04 = inttoptr i32 %v1_25c04 to i8*
  %v3_25c04 = load i8, i8* %v2_25c04, align 1
  %v4_25c04 = load i32, i32* @ecx, align 4
  %v5_25c04 = trunc i32 %v4_25c04 to i8
  %v6_25c04 = add i8 %v5_25c04, %v3_25c04
  store i8 %v6_25c04, i8* %v2_25c04, align 1
  %v0_25c0a = load i32, i32* @eax, align 8
  %v1_25c0a = inttoptr i32 %v0_25c0a to i8*
  %v2_25c0a = load i8, i8* %v1_25c0a, align 1
  %v4_25c0a = trunc i32 %v0_25c0a to i8
  %v5_25c0a = or i8 %v2_25c0a, %v4_25c0a
  store i8 %v5_25c0a, i8* %v1_25c0a, align 1
  %v0_25c0c = load i32, i32* @eax, align 8
  %v1_25c0c = inttoptr i32 %v0_25c0c to i8*
  %v2_25c0c = load i8, i8* %v1_25c0c, align 1
  %v4_25c0c = trunc i32 %v0_25c0c to i8
  %v5_25c0c = add i8 %v2_25c0c, %v4_25c0c
  store i8 %v5_25c0c, i8* %v1_25c0c, align 1
  %v0_25c0e = load i32, i32* @ebx, align 4
  %v1_25c0e = add i32 %v0_25c0e, 1351476293
  %v2_25c0e = inttoptr i32 %v1_25c0e to i8*
  %v3_25c0e = load i8, i8* %v2_25c0e, align 1
  %v4_25c0e = load i32, i32* @ecx, align 4
  %v5_25c0e = trunc i32 %v4_25c0e to i8
  %v6_25c0e = add i8 %v5_25c0e, %v3_25c0e
  store i8 %v6_25c0e, i8* %v2_25c0e, align 1
  %v0_25c14 = load i32, i32* @eax, align 8
  %v1_25c14 = trunc i32 %v0_25c14 to i8
  %v2_25c14 = add i8 %v1_25c14, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v0_25c16 = load i32, i32* @ebp, align 4
  %v2_25c1a = or i8 %v2_25c14, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v2_25c20 = add i8 %v2_25c1a, -117
  %v6_25c20 = icmp ugt i8 %v2_25c1a, 116
  %v16_25c20 = zext i8 %v2_25c20 to i32
  %v18_25c20 = and i32 %v0_25c14, -256
  %v19_25c20 = or i32 %v16_25c20, %v18_25c20
  store i32 %v19_25c20, i32* %eax.global-to-local, align 8
  %v1_25c22 = add i32 %v0_25c16, 3
  store i32 %v1_25c22, i32* @ebp, align 4
  store i32 %v19_25c20, i32* %stack_var_-12, align 4
  %v0_25c26 = load i32, i32* @ebx, align 4
  %v1_25c26 = add i32 %v0_25c26, 862319685
  %v2_25c26 = inttoptr i32 %v1_25c26 to i8*
  %v3_25c26 = load i8, i8* %v2_25c26, align 1
  %v4_25c26 = load i32, i32* @ecx, align 4
  %v5_25c26 = trunc i32 %v4_25c26 to i8
  %v7_25c26 = zext i1 %v6_25c20 to i8
  %v8_25c26 = add i8 %v3_25c26, %v7_25c26
  %v9_25c26 = add i8 %v8_25c26, %v5_25c26
  store i8 %v9_25c26, i8* %v2_25c26, align 1
  %v0_25c2c = load i32, i32* %eax.global-to-local, align 8
  %v1_25c2c = add i32 %v0_25c2c, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_25c2c = icmp eq i32 %v1_25c2c, 0
  store i32 %v1_25c2c, i32* @eax, align 8
  br i1 %v10_25c2c, label %bb, label %dec_label_pc_25c33

bb:                                               ; preds = %dec_label_pc_25c00
  %v1_25c31 = load i32, i32* %stack_var_-12, align 4
  %v2_25c31 = call i32 @function_25c38(i32 %v1_25c31)
  store i32 %v2_25c31, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25c33

dec_label_pc_25c33:                               ; preds = %bb, %dec_label_pc_25c00
  %v3_25c31 = phi i32 [ %v2_25c31, %bb ], [ %v1_25c2c, %dec_label_pc_25c00 ]
  ret i32 %v3_25c31

; uselistorder directives
  uselistorder i32 (i32)* @function_25c38, { 2, 1, 0 }
  uselistorder i32 1351476293, { 1, 0 }
}

define i32 @function_25c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c38:
  %v0_25c39 = load i32, i32* @eax, align 8
  ret i32 %v0_25c39
}

define i32 @_ZNKSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25c3a:
  %v1_25c5d = call i32 @unknown_50488(i32 %arg2)
  %v2_25c6c = call i32 @unknown_504b6(i32 %arg1, i32 %v1_25c5d)
  store i32 %arg1, i32* @eax, align 8
  %v1_25c7e = call i32 @function_25c85()
  ret i32 %v1_25c7e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25c85() local_unnamed_addr {
dec_label_pc_25c85:
  %v0_25c86 = load i32, i32* @eax, align 8
  ret i32 %v0_25c86
}

define i32 @_ZNSaI8CNetAddrED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c8a:
  %v1_25ca7 = call i32 @unknown_50542(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_25cb6 = call i32 @function_25cbd()
  ret i32 %v1_25cb6
}

define i32 @function_25cbd() local_unnamed_addr {
dec_label_pc_25cbd:
  %v0_25cbe = load i32, i32* @eax, align 8
  ret i32 %v0_25cbe
}

define i32 @_ZSt11__addressofI8CNetAddrEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25cbf:
  store i32 %arg1, i32* @eax, align 8
  %v2_25ce3 = call i32 @function_25cea(i32 %arg1)
  ret i32 %v2_25ce3
}

define i32 @function_25cea(i32 %arg1) local_unnamed_addr {
dec_label_pc_25cea:
  %v0_25ceb = load i32, i32* @eax, align 8
  ret i32 %v0_25ceb
}

define i32 @_ZN8CNetAddrD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25cec:
  store i32 0, i32* @eax, align 8
  %v2_25d0d = call i32 @function_25d14(i32 %arg1)
  ret i32 %v2_25d0d
}

define i32 @function_25d14(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d14:
  %v0_25d15 = load i32, i32* @eax, align 8
  ret i32 %v0_25d15
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CNetAddrE7destroyEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25d16:
  %v1_25d39 = call i32 @unknown_4ba02(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_25d48 = call i32 @function_25d4f()
  ret i32 %v1_25d48
}

define i32 @function_25d4f() local_unnamed_addr {
dec_label_pc_25d4f:
  %v0_25d50 = load i32, i32* @eax, align 8
  ret i32 %v0_25d50
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25d52:
  ret i32 0
}

define i32 @function_25d70(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d70:
  %eax.global-to-local = alloca i32, align 4
  %v0_25d70 = load i32, i32* @ebp, align 4
  %v1_25d70 = add i32 %v0_25d70, 1
  store i32 %v1_25d70, i32* @ebp, align 4
  %v0_25d74 = load i32, i32* @eax, align 8
  %v11_25d74 = and i32 %v0_25d74, or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256)
  store i32 %v11_25d74, i32* %eax.global-to-local, align 8
  %v1_25d76 = inttoptr i32 %v11_25d74 to i32*
  %v2_25d76 = load i32, i32* %v1_25d76, align 4
  %v4_25d76 = add i32 %v2_25d76, %v11_25d74
  store i32 %v4_25d76, i32* %v1_25d76, align 4
  %v0_25d78 = load i32, i32* %eax.global-to-local, align 8
  %v1_25d78 = inttoptr i32 %v0_25d78 to i8*
  %v2_25d78 = load i8, i8* %v1_25d78, align 1
  %v4_25d78 = trunc i32 %v0_25d78 to i8
  %v5_25d78 = add i8 %v2_25d78, %v4_25d78
  store i8 %v5_25d78, i8* %v1_25d78, align 1
  %v0_25d7a = load i32, i32* @ebp, align 4
  %v1_25d7a = add i32 %v0_25d7a, -32
  %v2_25d7a = inttoptr i32 %v1_25d7a to i32*
  %v3_25d7a = load i32, i32* %v2_25d7a, align 4
  %v0_25d81 = load i32, i32* %eax.global-to-local, align 8
  %v2_25d84 = call i32 @unknown_50634(i32 %v0_25d81, i32 %v3_25d7a)
  store i32 %v2_25d84, i32* %eax.global-to-local, align 8
  %v0_25d89 = load i32, i32* @ebp, align 4
  %v1_25d89 = add i32 %v0_25d89, -12
  %v2_25d89 = inttoptr i32 %v1_25d89 to i32*
  %v3_25d89 = load i32, i32* %v2_25d89, align 4
  %v2_25d8c = xor i32 %v3_25d89, 30
  %v3_25d8c = icmp eq i32 %v2_25d8c, 0
  store i32 %v2_25d8c, i32* @eax, align 8
  br i1 %v3_25d8c, label %bb, label %dec_label_pc_25d95

bb:                                               ; preds = %dec_label_pc_25d70
  %v1_25d93 = call i32 @function_25d9a()
  store i32 %v1_25d93, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25d95

dec_label_pc_25d95:                               ; preds = %bb, %dec_label_pc_25d70
  %v2_25d93 = phi i32 [ %v1_25d93, %bb ], [ %v2_25d8c, %dec_label_pc_25d70 ]
  ret i32 %v2_25d93

; uselistorder directives
  uselistorder i32 %v11_25d74, { 0, 2, 1 }
}

define i32 @function_25d9a() local_unnamed_addr {
dec_label_pc_25d9a:
  %v0_25d9b = load i32, i32* @eax, align 8
  ret i32 %v0_25d9b
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt13_Rb_tree_nodeIS0_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d9c:
  %v1_25db6 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_25db6, i32* @eax, align 8
  %v2_25dc3 = call i32 @function_25dca(i32 %arg1)
  ret i32 %v2_25dc3
}

define i32 @function_25dca(i32 %arg1) local_unnamed_addr {
dec_label_pc_25dca:
  %v0_25dcb = load i32, i32* @eax, align 8
  ret i32 %v0_25dcb
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE14_M_create_nodeERKS0_() local_unnamed_addr {
dec_label_pc_25dcc:
  %eax.global-to-local = alloca i32, align 4
  %v17_25dd0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_25dd0
}

define i32 @function_25dd4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25dd4:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_25dd4 = load i32, i32* @ebp, align 4
  %v1_25dd4 = add i32 %v0_25dd4, 1
  store i32 %v1_25dd4, i32* %ebp.global-to-local, align 4
  %v0_25dd5 = load i32, i32* @ecx, align 4
  %v1_25dd5 = add i32 %v0_25dd5, 1166795845
  %v2_25dd5 = inttoptr i32 %v1_25dd5 to i8*
  %v3_25dd5 = load i8, i8* %v2_25dd5, align 1
  %v5_25dd5 = trunc i32 %v0_25dd5 to i8
  %v6_25dd5 = or i8 %v3_25dd5, %v5_25dd5
  store i8 %v6_25dd5, i8* %v2_25dd5, align 1
  %v0_25ddb = load i32, i32* @eax, align 8
  %v11_25ddb = or i32 %v0_25ddb, 137
  store i32 %v11_25ddb, i32* @eax, align 8
  %v0_25ddd = load i32, i32* %ebp.global-to-local, align 4
  %v1_25ddd = add i32 %v0_25ddd, 1
  %v9_25ddd = icmp eq i32 %v1_25ddd, 0
  store i32 %v1_25ddd, i32* @ebp, align 4
  %v0_25dde = load i32, i32* @ecx, align 4
  %v2_25dde = icmp eq i32 %v0_25dde, 1
  %v4_25dde = or i1 %v9_25ddd, %v2_25dde
  br i1 %v4_25dde, label %dec_label_pc_25de0, label %dec_label_pc_25e45

dec_label_pc_25de0:                               ; preds = %dec_label_pc_25dd4
  %v2_25de5 = add i32 %v0_25ddd, -11
  %v3_25de5 = inttoptr i32 %v2_25de5 to i32*
  store i32 30, i32* %v3_25de5, align 4
  %v0_25dea = load i32, i32* @ebp, align 4
  %v1_25dea = add i32 %v0_25dea, -28
  %v2_25dea = inttoptr i32 %v1_25dea to i32*
  %v3_25dea = load i32, i32* %v2_25dea, align 4
  %v2_25df0 = call i32 @unknown_506f0(i32 %v3_25dea)
  %v1_25df5 = load i32, i32* @ebp, align 4
  %v2_25df5 = add i32 %v1_25df5, -20
  %v3_25df5 = inttoptr i32 %v2_25df5 to i32*
  store i32 %v2_25df0, i32* %v3_25df5, align 4
  %v0_25df8 = load i32, i32* @ebp, align 4
  %v1_25df8 = add i32 %v0_25df8, -20
  %v2_25df8 = inttoptr i32 %v1_25df8 to i32*
  %v3_25df8 = load i32, i32* %v2_25df8, align 4
  %v1_25dfb = add i32 %v3_25df8, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_25e01 = call i32 @unknown_4ba8b(i32 %v1_25dfb)
  store i32 %v2_25e01, i32* %ebx.global-to-local, align 4
  %v0_25e08 = load i32, i32* @ebp, align 4
  %v1_25e08 = add i32 %v0_25e08, -13
  %v1_25e0b = add i32 %v0_25e08, -28
  %v2_25e0b = inttoptr i32 %v1_25e0b to i32*
  %v3_25e0b = load i32, i32* %v2_25e0b, align 4
  %v3_25e15 = call i32 @unknown_4ba06(i32 %v1_25e08, i32 %v3_25e0b)
  %v0_25e1d = load i32, i32* @ebp, align 4
  %v1_25e1d = add i32 %v0_25e1d, -32
  %v2_25e1d = inttoptr i32 %v1_25e1d to i32*
  %v3_25e1d = load i32, i32* %v2_25e1d, align 4
  %v0_25e24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25e28 = add i32 %v0_25e1d, -13
  %v4_25e2e = call i32 @unknown_50736(i32 %v1_25e28, i32 %v0_25e24, i32 %v3_25e1d)
  %v0_25e33 = load i32, i32* @ebp, align 4
  %v1_25e33 = add i32 %v0_25e33, -13
  %v1_25e39 = call i32 @unknown_4ba56(i32 %v1_25e33)
  %v0_25e3e = load i32, i32* @ebp, align 4
  %v1_25e3e = add i32 %v0_25e3e, -20
  %v2_25e3e = inttoptr i32 %v1_25e3e to i32*
  %v3_25e3e = load i32, i32* %v2_25e3e, align 4
  ret i32 %v3_25e3e

dec_label_pc_25e45:                               ; preds = %dec_label_pc_25dd4
  %v0_25e45 = load i32, i32* @edx, align 8
  %v3_25e45 = icmp eq i32 %v0_25e45, 30
  br i1 %v3_25e45, label %bb, label %dec_label_pc_25e4d

bb:                                               ; preds = %dec_label_pc_25e45
  %v1_25e4b = call i32 @function_25e52()
  br label %dec_label_pc_25e4d

dec_label_pc_25e4d:                               ; preds = %bb, %dec_label_pc_25e45
  %v2_25e4b = phi i32 [ %v1_25e4b, %bb ], [ %v11_25ddb, %dec_label_pc_25e45 ]
  ret i32 %v2_25e4b

; uselistorder directives
  uselistorder i32 %v11_25ddb, { 1, 0 }
}

define i32 @function_25e52() local_unnamed_addr {
dec_label_pc_25e52:
  %v0_25e56 = load i32, i32* @eax, align 8
  ret i32 %v0_25e56
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e57:
  %v1_25e71 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_25e71, i32* @eax, align 8
  %v2_25e7e = call i32 @function_25e85(i32 %arg1)
  ret i32 %v2_25e7e
}

define i32 @function_25e85(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e85:
  %v0_25e86 = load i32, i32* @eax, align 8
  ret i32 %v0_25e86
}

define i32 @_ZNSt6vectorIxSaIxEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEjRKx(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_25e88:
  %stack_var_-48 = alloca i32, align 4
  store i32 0, i32* @eax, align 8
  %v10_25eb3 = icmp eq i32 %arg3, 0
  br i1 %v10_25eb3, label %bb, label %dec_label_pc_25ebd

bb:                                               ; preds = %dec_label_pc_25e88
  %tmp116 = ptrtoint i32* %arg4 to i32
  %v5_25eb7 = call i32 @function_262c5(i32 %tmp116, i32 0, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_25ebd

dec_label_pc_25ebd:                               ; preds = %bb, %dec_label_pc_25e88
  %v1_25ec0 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_25ec0 = inttoptr i32 %v1_25ec0 to i32*
  %v3_25ec0 = load i32, i32* %v2_25ec0, align 4
  %v1_25ec8 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_25ec8 = inttoptr i32 %v1_25ec8 to i32*
  %v3_25ec8 = load i32, i32* %v2_25ec8, align 4
  %v2_25ecd = sub i32 %v3_25ec0, %v3_25ec8
  %v2_25ed1 = ashr i32 %v2_25ecd, ptrtoint (i32* @global_var_3.2378 to i32)
  %v10_25ed4 = icmp ult i32 %v2_25ed1, %arg3
  br i1 %v10_25ed4, label %bb117, label %dec_label_pc_25edd

bb117:                                            ; preds = %dec_label_pc_25ebd
  %v1_25ed7 = call i32 @function_260a1()
  br label %dec_label_pc_25edd

dec_label_pc_25edd:                               ; preds = %bb117, %dec_label_pc_25ebd
  %v2_25eeb = ptrtoint i32* %stack_var_-48 to i32
  %v2_25ef8 = call i32 @unknown_41c98(i32 %v2_25eeb, i32 %arg1)
  %v1_25f0d = call i32 @unknown_47511(i32 %v2_25eeb)
  %tmp120 = icmp ugt i32 %v1_25f0d, %arg3
  br i1 %tmp120, label %dec_label_pc_25f2a, label %bb119

bb119:                                            ; preds = %dec_label_pc_25edd
  %v3_25f18 = load i32, i32* %v2_25ec8, align 4
  %v5_25f24 = call i32 @function_25fe1(i32 %v1_25f0d, i32 %v3_25f18)
  br label %dec_label_pc_25f2a

dec_label_pc_25f2a:                               ; preds = %dec_label_pc_25edd, %bb119
  %v1_25f30 = call i32 @unknown_41ef2(i32 %arg1)
  ret i32 %v1_25f30

; uselistorder directives
  uselistorder i32 %v1_25f0d, { 1, 0 }
  uselistorder label %dec_label_pc_25f2a, { 1, 0 }
}

define i32 @function_25f3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f3e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_25f3e = load i32, i32* @edx, align 8
  %v1_25f3e = add i32 %v0_25f3e, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_25f3e = inttoptr i32 %v1_25f3e to i32*
  %v3_25f3e = load i32, i32* %v2_25f3e, align 4
  %v0_25f41 = load i32, i32* @ebp, align 4
  %v1_25f41 = add i32 %v0_25f41, -60
  %v2_25f41 = inttoptr i32 %v1_25f41 to i32*
  %v3_25f41 = load i32, i32* %v2_25f41, align 4
  store i32 %v3_25f41, i32* %ebx.global-to-local, align 4
  %v1_25f44 = add i32 %v3_25f41, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_25f44 = inttoptr i32 %v1_25f44 to i32*
  %v3_25f44 = load i32, i32* %v2_25f44, align 4
  store i32 %v3_25f44, i32* %ebx.global-to-local, align 4
  %v1_25f47 = add i32 %v0_25f41, -68
  %v2_25f47 = inttoptr i32 %v1_25f47 to i32*
  %v3_25f47 = load i32, i32* %v2_25f47, align 4
  %v2_25f4a = shl i32 %v3_25f47, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_25f4f = sub i32 %v3_25f44, %v2_25f4a
  store i32 %v2_25f4f, i32* %ebx.global-to-local, align 4
  %v0_25f51 = load i32, i32* @eax, align 8
  %v0_25f55 = load i32, i32* @ecx, align 4
  %v4_25f60 = call i32 @unknown_4a502(i32 %v2_25f4f, i32 %v3_25f3e, i32 %v0_25f55, i32 %v0_25f51)
  %v0_25f65 = load i32, i32* @ebp, align 4
  %v1_25f65 = add i32 %v0_25f65, -60
  %v2_25f65 = inttoptr i32 %v1_25f65 to i32*
  %v3_25f65 = load i32, i32* %v2_25f65, align 4
  %v1_25f68 = add i32 %v3_25f65, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_25f68 = inttoptr i32 %v1_25f68 to i32*
  %v3_25f68 = load i32, i32* %v2_25f68, align 4
  %v1_25f6b = add i32 %v0_25f65, -68
  %v2_25f6b = inttoptr i32 %v1_25f6b to i32*
  %v3_25f6b = load i32, i32* %v2_25f6b, align 4
  %v2_25f6e = shl i32 %v3_25f6b, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_25f71 = add i32 %v2_25f6e, %v3_25f68
  %v3_25f73 = load i32, i32* %v2_25f65, align 4
  %v2_25f76 = add i32 %v3_25f73, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_25f76 = inttoptr i32 %v2_25f76 to i32*
  store i32 %v2_25f71, i32* %v3_25f76, align 4
  %v0_25f79 = load i32, i32* @ebp, align 4
  %v1_25f79 = add i32 %v0_25f79, -68
  %v2_25f79 = inttoptr i32 %v1_25f79 to i32*
  %v3_25f79 = load i32, i32* %v2_25f79, align 4
  %v2_25f7c = shl i32 %v3_25f79, ptrtoint (i32* @global_var_3.2378 to i32)
  %v1_25f7f = sub i32 0, %v2_25f7c
  store i32 %v1_25f7f, i32* %ebx.global-to-local, align 4
  %v2_25f83 = add i32 %v0_25f79, -28
  %v3_25f83 = inttoptr i32 %v2_25f83 to i32*
  %v4_25f83 = load i32, i32* %v3_25f83, align 4
  %v5_25f83 = sub i32 %v4_25f83, %v2_25f7c
  store i32 %v5_25f83, i32* %ebx.global-to-local, align 4
  %v1_25f86 = add i32 %v0_25f79, -64
  %v1_25f8c = call i32 @unknown_479d2(i32 %v1_25f86)
  %v1_25f91 = inttoptr i32 %v1_25f8c to i32*
  %v2_25f91 = load i32, i32* %v1_25f91, align 4
  %v0_25f93 = load i32, i32* @ebp, align 4
  %v1_25f93 = add i32 %v0_25f93, -28
  %v2_25f93 = inttoptr i32 %v1_25f93 to i32*
  %v3_25f93 = load i32, i32* %v2_25f93, align 4
  %v0_25f9a = load i32, i32* %ebx.global-to-local, align 4
  %v3_25fa1 = call i32 @unknown_4a3c9(i32 %v2_25f91, i32 %v0_25f9a, i32 %v3_25f93)
  %v0_25fa6 = load i32, i32* @ebp, align 4
  %v1_25fa6 = add i32 %v0_25fa6, -64
  %v1_25fac = call i32 @unknown_479d2(i32 %v1_25fa6)
  %v1_25fb1 = inttoptr i32 %v1_25fac to i32*
  %v2_25fb1 = load i32, i32* %v1_25fb1, align 4
  %v0_25fb3 = load i32, i32* @ebp, align 4
  %v1_25fb3 = add i32 %v0_25fb3, -68
  %v2_25fb3 = inttoptr i32 %v1_25fb3 to i32*
  %v3_25fb3 = load i32, i32* %v2_25fb3, align 4
  %v2_25fb6 = shl i32 %v3_25fb3, ptrtoint (i32* @global_var_3.2378 to i32)
  %v3_25fb9 = add i32 %v2_25fb6, %v2_25fb1
  store i32 %v3_25fb9, i32* %ebx.global-to-local, align 4
  %v1_25fbc = add i32 %v0_25fb3, -64
  %v1_25fc2 = call i32 @unknown_479d2(i32 %v1_25fbc)
  %v1_25fc7 = inttoptr i32 %v1_25fc2 to i32*
  %v2_25fc7 = load i32, i32* %v1_25fc7, align 4
  %v0_25fc9 = load i32, i32* @ebp, align 4
  %v1_25fc9 = add i32 %v0_25fc9, -56
  %v0_25fd0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_25fd7 = call i32 @unknown_50858(i32 %v2_25fc7, i32 %v0_25fd0, i32 %v1_25fc9)
  store i32 %v3_25fd7, i32* @eax, align 8
  %v4_25fdc = call i32 @function_262c5(i32 %v2_25fc7, i32 %v0_25fd0, i32 %v1_25fc9, i32 %v0_25f51)
  ret i32 %v4_25fdc

; uselistorder directives
  uselistorder i32 %v2_25fc7, { 1, 0 }
}

define i32 @function_25fe1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25fe1:
  %ebx.global-to-local = alloca i32, align 4
  %v0_25fe1 = load i32, i32* @ebp, align 4
  %v1_25fe1 = add i32 %v0_25fe1, -60
  %v2_25fe1 = inttoptr i32 %v1_25fe1 to i32*
  %v3_25fe1 = load i32, i32* %v2_25fe1, align 4
  %v1_25fe7 = call i32 @unknown_41ef2(i32 %v3_25fe1)
  %v0_25fec = load i32, i32* @ebp, align 4
  %v1_25fec = add i32 %v0_25fec, -32
  %v2_25fec = inttoptr i32 %v1_25fec to i32*
  %v3_25fec = load i32, i32* %v2_25fec, align 4
  %v1_25fef = add i32 %v0_25fec, -68
  %v2_25fef = inttoptr i32 %v1_25fef to i32*
  %v3_25fef = load i32, i32* %v2_25fef, align 4
  %v2_25ff2 = sub i32 %v3_25fef, %v3_25fec
  %v1_25ff4 = add i32 %v0_25fec, -60
  %v2_25ff4 = inttoptr i32 %v1_25ff4 to i32*
  %v3_25ff4 = load i32, i32* %v2_25ff4, align 4
  %v1_25ff7 = add i32 %v3_25ff4, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_25ff7 = inttoptr i32 %v1_25ff7 to i32*
  %v3_25ff7 = load i32, i32* %v2_25ff7, align 4
  %v1_25ffe = add i32 %v0_25fec, -56
  %v4_2600c = call i32 @unknown_508be(i32 %v3_25ff7, i32 %v2_25ff2, i32 %v1_25ffe, i32 %v1_25fe7)
  %v0_26011 = load i32, i32* @ebp, align 4
  %v1_26011 = add i32 %v0_26011, -60
  %v2_26011 = inttoptr i32 %v1_26011 to i32*
  %v3_26011 = load i32, i32* %v2_26011, align 4
  %v1_26014 = add i32 %v3_26011, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26014 = inttoptr i32 %v1_26014 to i32*
  %v3_26014 = load i32, i32* %v2_26014, align 4
  %v1_26017 = add i32 %v0_26011, -32
  %v2_26017 = inttoptr i32 %v1_26017 to i32*
  %v3_26017 = load i32, i32* %v2_26017, align 4
  %v1_2601a = add i32 %v0_26011, -68
  %v2_2601a = inttoptr i32 %v1_2601a to i32*
  %v3_2601a = load i32, i32* %v2_2601a, align 4
  %v2_2601f = sub i32 %v3_2601a, %v3_26017
  store i32 %v2_2601f, i32* %ebx.global-to-local, align 4
  %v2_26023 = shl i32 %v2_2601f, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_26026 = add i32 %v2_26023, %v3_26014
  %v3_26028 = load i32, i32* %v2_26011, align 4
  %v2_2602b = add i32 %v3_26028, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2602b = inttoptr i32 %v2_2602b to i32*
  store i32 %v2_26026, i32* %v3_2602b, align 4
  %v0_2602e = load i32, i32* @ebp, align 4
  %v1_2602e = add i32 %v0_2602e, -60
  %v2_2602e = inttoptr i32 %v1_2602e to i32*
  %v3_2602e = load i32, i32* %v2_2602e, align 4
  %v1_26034 = call i32 @unknown_41ef2(i32 %v3_2602e)
  store i32 %v1_26034, i32* %ebx.global-to-local, align 4
  %v0_2603b = load i32, i32* @ebp, align 4
  %v1_2603b = add i32 %v0_2603b, -60
  %v2_2603b = inttoptr i32 %v1_2603b to i32*
  %v3_2603b = load i32, i32* %v2_2603b, align 4
  %v1_2603e = add i32 %v3_2603b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2603e = inttoptr i32 %v1_2603e to i32*
  %v3_2603e = load i32, i32* %v2_2603e, align 4
  %v1_26041 = add i32 %v0_2603b, -64
  %v1_26047 = call i32 @unknown_479d2(i32 %v1_26041)
  %v1_2604c = inttoptr i32 %v1_26047 to i32*
  %v2_2604c = load i32, i32* %v1_2604c, align 4
  %v0_2604e = load i32, i32* %ebx.global-to-local, align 4
  %v0_26056 = load i32, i32* @ebp, align 4
  %v1_26056 = add i32 %v0_26056, -28
  %v2_26056 = inttoptr i32 %v1_26056 to i32*
  %v3_26056 = load i32, i32* %v2_26056, align 4
  %v4_26060 = call i32 @unknown_4a502(i32 %v2_2604c, i32 %v3_26056, i32 %v3_2603e, i32 %v0_2604e)
  %v0_26065 = load i32, i32* @ebp, align 4
  %v1_26065 = add i32 %v0_26065, -60
  %v2_26065 = inttoptr i32 %v1_26065 to i32*
  %v3_26065 = load i32, i32* %v2_26065, align 4
  %v1_26068 = add i32 %v3_26065, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26068 = inttoptr i32 %v1_26068 to i32*
  %v3_26068 = load i32, i32* %v2_26068, align 4
  %v1_2606b = add i32 %v0_26065, -32
  %v2_2606b = inttoptr i32 %v1_2606b to i32*
  %v3_2606b = load i32, i32* %v2_2606b, align 4
  %v2_2606e = shl i32 %v3_2606b, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_26071 = add i32 %v2_2606e, %v3_26068
  %v3_26073 = load i32, i32* %v2_26065, align 4
  %v2_26076 = add i32 %v3_26073, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_26076 = inttoptr i32 %v2_26076 to i32*
  store i32 %v2_26071, i32* %v3_26076, align 4
  %v0_26079 = load i32, i32* @ebp, align 4
  %v1_26079 = add i32 %v0_26079, -64
  %v1_2607f = call i32 @unknown_479d2(i32 %v1_26079)
  %v1_26084 = inttoptr i32 %v1_2607f to i32*
  %v2_26084 = load i32, i32* %v1_26084, align 4
  %v0_26086 = load i32, i32* @ebp, align 4
  %v1_26086 = add i32 %v0_26086, -56
  %v1_2608d = add i32 %v0_26086, -28
  %v2_2608d = inttoptr i32 %v1_2608d to i32*
  %v3_2608d = load i32, i32* %v2_2608d, align 4
  %v3_26097 = call i32 @unknown_50858(i32 %v2_26084, i32 %v3_2608d, i32 %v1_26086)
  store i32 %v3_26097, i32* @eax, align 8
  %v4_2609c = call i32 @function_262c5(i32 %v2_26084, i32 %v3_2608d, i32 %v1_26086, i32 %v0_2604e)
  ret i32 %v4_2609c

; uselistorder directives
  uselistorder i32 %v1_26086, { 1, 0 }
  uselistorder i32 %v2_26084, { 1, 0 }
  uselistorder i32 %v0_2604e, { 1, 0 }
  uselistorder i32 %v0_26011, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_50858, { 1, 0 }
}

define i32 @function_260a1() local_unnamed_addr {
dec_label_pc_260a1:
  %v0_260a9 = load i32, i32* @ebp, align 4
  %v1_260a9 = add i32 %v0_260a9, -68
  %v2_260a9 = inttoptr i32 %v1_260a9 to i32*
  %v3_260a9 = load i32, i32* %v2_260a9, align 4
  %v1_260b0 = add i32 %v0_260a9, -60
  %v2_260b0 = inttoptr i32 %v1_260b0 to i32*
  %v3_260b0 = load i32, i32* %v2_260b0, align 4
  %v4_260b6 = call i32 @unknown_4a430(i32 %v3_260b0, i32 %v3_260a9, i32 ptrtoint ([23 x i8]* @global_var_6116.2546 to i32))
  %v1_260bb = load i32, i32* @ebp, align 4
  %v2_260bb = add i32 %v1_260bb, -24
  %v3_260bb = inttoptr i32 %v2_260bb to i32*
  store i32 %v4_260b6, i32* %v3_260bb, align 4
  %v0_260be = load i32, i32* @ebp, align 4
  %v1_260be = add i32 %v0_260be, -40
  %v1_260c1 = add i32 %v0_260be, -60
  %v2_260c1 = inttoptr i32 %v1_260c1 to i32*
  %v3_260c1 = load i32, i32* %v2_260c1, align 4
  %v2_260cb = call i32 @unknown_41a74(i32 %v1_260be, i32 %v3_260c1)
  %v0_260d3 = load i32, i32* @ebp, align 4
  %v1_260d3 = add i32 %v0_260d3, -40
  ret i32 %v1_260d3
}

define i32 @function_260da(i32 %arg1) local_unnamed_addr {
dec_label_pc_260da:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_260da = load i32, i32* @ebp, align 4
  %v1_260da = add i32 %v0_260da, -64
  %v1_260e0 = call i32 @unknown_47511(i32 %v1_260da)
  %v1_260e5 = load i32, i32* @ebp, align 4
  %v2_260e5 = add i32 %v1_260e5, -20
  %v3_260e5 = inttoptr i32 %v2_260e5 to i32*
  store i32 %v1_260e0, i32* %v3_260e5, align 4
  %v0_260e8 = load i32, i32* @ebp, align 4
  %v1_260e8 = add i32 %v0_260e8, -60
  %v2_260e8 = inttoptr i32 %v1_260e8 to i32*
  %v3_260e8 = load i32, i32* %v2_260e8, align 4
  %v1_260eb = add i32 %v0_260e8, -24
  %v2_260eb = inttoptr i32 %v1_260eb to i32*
  %v3_260eb = load i32, i32* %v2_260eb, align 4
  %v2_260f5 = call i32 @unknown_477c2(i32 %v3_260e8, i32 %v3_260eb)
  %v1_260fa = load i32, i32* @ebp, align 4
  %v2_260fa = add i32 %v1_260fa, -16
  %v3_260fa = inttoptr i32 %v2_260fa to i32*
  store i32 %v2_260f5, i32* %v3_260fa, align 4
  %v0_260fd = load i32, i32* @ebp, align 4
  %v1_260fd = add i32 %v0_260fd, -16
  %v2_260fd = inttoptr i32 %v1_260fd to i32*
  %v3_260fd = load i32, i32* %v2_260fd, align 4
  %v2_26100 = add i32 %v0_260fd, -36
  %v3_26100 = inttoptr i32 %v2_26100 to i32*
  store i32 %v3_260fd, i32* %v3_26100, align 4
  %v0_26103 = load i32, i32* @ebp, align 4
  %v1_26103 = add i32 %v0_26103, -60
  %v2_26103 = inttoptr i32 %v1_26103 to i32*
  %v3_26103 = load i32, i32* %v2_26103, align 4
  %v1_26109 = call i32 @unknown_41ef2(i32 %v3_26103)
  %v0_2610e = load i32, i32* @ebp, align 4
  %v1_2610e = add i32 %v0_2610e, -20
  %v2_2610e = inttoptr i32 %v1_2610e to i32*
  %v3_2610e = load i32, i32* %v2_2610e, align 4
  %v2_26111 = shl i32 %v3_2610e, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_26114 = add i32 %v0_2610e, -16
  %v3_26114 = inttoptr i32 %v2_26114 to i32*
  %v4_26114 = load i32, i32* %v3_26114, align 4
  %v5_26114 = add i32 %v4_26114, %v2_26111
  %v1_2611b = add i32 %v0_2610e, -72
  %v2_2611b = inttoptr i32 %v1_2611b to i32*
  %v3_2611b = load i32, i32* %v2_2611b, align 4
  %v1_26122 = add i32 %v0_2610e, -68
  %v2_26122 = inttoptr i32 %v1_26122 to i32*
  %v3_26122 = load i32, i32* %v2_26122, align 4
  %v4_2612c = call i32 @unknown_508be(i32 %v5_26114, i32 %v3_26122, i32 %v3_2611b, i32 %v1_26109)
  %v0_26131 = load i32, i32* @ebp, align 4
  %v1_26131 = add i32 %v0_26131, -36
  %v2_26131 = inttoptr i32 %v1_26131 to i32*
  store i32 0, i32* %v2_26131, align 4
  %v0_26138 = load i32, i32* @ebp, align 4
  %v1_26138 = add i32 %v0_26138, -60
  %v2_26138 = inttoptr i32 %v1_26138 to i32*
  %v3_26138 = load i32, i32* %v2_26138, align 4
  %v1_2613e = call i32 @unknown_41ef2(i32 %v3_26138)
  store i32 %v1_2613e, i32* %ebx.global-to-local, align 4
  %v0_26145 = load i32, i32* @ebp, align 4
  %v1_26145 = add i32 %v0_26145, -64
  %v1_2614b = call i32 @unknown_479d2(i32 %v1_26145)
  %v1_26150 = inttoptr i32 %v1_2614b to i32*
  %v2_26150 = load i32, i32* %v1_26150, align 4
  %v0_26152 = load i32, i32* @ebp, align 4
  %v1_26152 = add i32 %v0_26152, -60
  %v2_26152 = inttoptr i32 %v1_26152 to i32*
  %v3_26152 = load i32, i32* %v2_26152, align 4
  %v1_26155 = inttoptr i32 %v3_26152 to i32*
  %v2_26155 = load i32, i32* %v1_26155, align 4
  %v0_26157 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2615b = add i32 %v0_26152, -16
  %v2_2615b = inttoptr i32 %v1_2615b to i32*
  %v3_2615b = load i32, i32* %v2_2615b, align 4
  %v4_26169 = call i32 @unknown_4a502(i32 %v2_26155, i32 %v2_26150, i32 %v3_2615b, i32 %v0_26157)
  %v1_2616e = load i32, i32* @ebp, align 4
  %v2_2616e = add i32 %v1_2616e, -36
  %v3_2616e = inttoptr i32 %v2_2616e to i32*
  store i32 %v4_26169, i32* %v3_2616e, align 4
  %v0_26171 = load i32, i32* @ebp, align 4
  %v1_26171 = add i32 %v0_26171, -68
  %v2_26171 = inttoptr i32 %v1_26171 to i32*
  %v3_26171 = load i32, i32* %v2_26171, align 4
  %v2_26174 = shl i32 %v3_26171, ptrtoint (i32* @global_var_3.2378 to i32)
  %v1_26177 = add i32 %v0_26171, -36
  %v2_26177 = inttoptr i32 %v1_26177 to i32*
  %v3_26177 = load i32, i32* %v2_26177, align 4
  %v5_26177 = add i32 %v3_26177, %v2_26174
  store i32 %v5_26177, i32* %v2_26177, align 4
  %v0_2617a = load i32, i32* @ebp, align 4
  %v1_2617a = add i32 %v0_2617a, -60
  %v2_2617a = inttoptr i32 %v1_2617a to i32*
  %v3_2617a = load i32, i32* %v2_2617a, align 4
  %v1_26180 = call i32 @unknown_41ef2(i32 %v3_2617a)
  store i32 %v1_26180, i32* %ebx.global-to-local, align 4
  %v0_26187 = load i32, i32* @ebp, align 4
  %v1_26187 = add i32 %v0_26187, -60
  %v2_26187 = inttoptr i32 %v1_26187 to i32*
  %v3_26187 = load i32, i32* %v2_26187, align 4
  %v1_2618a = add i32 %v3_26187, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2618a = inttoptr i32 %v1_2618a to i32*
  %v3_2618a = load i32, i32* %v2_2618a, align 4
  store i32 %v3_2618a, i32* %esi.global-to-local, align 4
  %v1_2618d = add i32 %v0_26187, -64
  %v1_26193 = call i32 @unknown_479d2(i32 %v1_2618d)
  %v1_26198 = inttoptr i32 %v1_26193 to i32*
  %v2_26198 = load i32, i32* %v1_26198, align 4
  %v0_2619a = load i32, i32* %ebx.global-to-local, align 4
  %v0_2619e = load i32, i32* @ebp, align 4
  %v1_2619e = add i32 %v0_2619e, -36
  %v2_2619e = inttoptr i32 %v1_2619e to i32*
  %v3_2619e = load i32, i32* %v2_2619e, align 4
  %v0_261a5 = load i32, i32* %esi.global-to-local, align 4
  %v4_261ac = call i32 @unknown_4a502(i32 %v2_26198, i32 %v0_261a5, i32 %v3_2619e, i32 %v0_2619a)
  %v1_261b1 = load i32, i32* @ebp, align 4
  %v2_261b1 = add i32 %v1_261b1, -36
  %v3_261b1 = inttoptr i32 %v2_261b1 to i32*
  store i32 %v4_261ac, i32* %v3_261b1, align 4
  %v0_261b4 = load i32, i32* @ebp, align 4
  %v1_261b4 = add i32 %v0_261b4, -60
  %v2_261b4 = inttoptr i32 %v1_261b4 to i32*
  %v3_261b4 = load i32, i32* %v2_261b4, align 4
  %v1_261ba = call i32 @unknown_41ef2(i32 %v3_261b4)
  %v0_261bf = load i32, i32* @ebp, align 4
  %v1_261bf = add i32 %v0_261bf, -60
  %v2_261bf = inttoptr i32 %v1_261bf to i32*
  %v3_261bf = load i32, i32* %v2_261bf, align 4
  %v1_261c2 = add i32 %v3_261bf, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_261c2 = inttoptr i32 %v1_261c2 to i32*
  %v3_261c2 = load i32, i32* %v2_261c2, align 4
  %v1_261c8 = inttoptr i32 %v3_261bf to i32*
  %v2_261c8 = load i32, i32* %v1_261c8, align 4
  %v3_261d5 = call i32 @unknown_41f1f(i32 %v2_261c8, i32 %v3_261c2, i32 %v1_261ba)
  %v0_261da = load i32, i32* @ebp, align 4
  %v1_261da = add i32 %v0_261da, -60
  %v2_261da = inttoptr i32 %v1_261da to i32*
  %v3_261da = load i32, i32* %v2_261da, align 4
  %v1_261dd = add i32 %v3_261da, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_261dd = inttoptr i32 %v1_261dd to i32*
  %v3_261dd = load i32, i32* %v2_261dd, align 4
  %v1_261e5 = inttoptr i32 %v3_261da to i32*
  %v2_261e5 = load i32, i32* %v1_261e5, align 4
  %v2_261e9 = sub i32 %v3_261dd, %v2_261e5
  %v2_261ed = ashr i32 %v2_261e9, ptrtoint (i32* @global_var_3.2378 to i32)
  store i32 %v2_261ed, i32* @ecx, align 4
  %v3_261f2 = load i32, i32* %v2_261da, align 4
  %v1_261f5 = inttoptr i32 %v3_261f2 to i32*
  %v2_261f5 = load i32, i32* %v1_261f5, align 4
  %v3_26205 = call i32 @unknown_44df8(i32 %v3_261f2, i32 %v2_261f5, i32 %v2_261ed)
  %v0_2620a = load i32, i32* @ebp, align 4
  %v1_2620a = add i32 %v0_2620a, -60
  %v2_2620a = inttoptr i32 %v1_2620a to i32*
  %v3_2620a = load i32, i32* %v2_2620a, align 4
  %v1_2620d = add i32 %v0_2620a, -16
  %v2_2620d = inttoptr i32 %v1_2620d to i32*
  %v3_2620d = load i32, i32* %v2_2620d, align 4
  %v2_26210 = inttoptr i32 %v3_2620a to i32*
  store i32 %v3_2620d, i32* %v2_26210, align 4
  %v0_26212 = load i32, i32* @ebp, align 4
  %v1_26212 = add i32 %v0_26212, -60
  %v2_26212 = inttoptr i32 %v1_26212 to i32*
  %v3_26212 = load i32, i32* %v2_26212, align 4
  %v1_26215 = add i32 %v0_26212, -36
  %v2_26215 = inttoptr i32 %v1_26215 to i32*
  %v3_26215 = load i32, i32* %v2_26215, align 4
  %v2_26218 = add i32 %v3_26212, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_26218 = inttoptr i32 %v2_26218 to i32*
  store i32 %v3_26215, i32* %v3_26218, align 4
  %v0_2621b = load i32, i32* @ebp, align 4
  %v1_2621b = add i32 %v0_2621b, -24
  %v2_2621b = inttoptr i32 %v1_2621b to i32*
  %v3_2621b = load i32, i32* %v2_2621b, align 4
  %v2_2621e = shl i32 %v3_2621b, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_26223 = add i32 %v0_2621b, -16
  %v3_26223 = inttoptr i32 %v2_26223 to i32*
  %v4_26223 = load i32, i32* %v3_26223, align 4
  %v5_26223 = add i32 %v4_26223, %v2_2621e
  %v1_26226 = add i32 %v0_2621b, -60
  %v2_26226 = inttoptr i32 %v1_26226 to i32*
  %v3_26226 = load i32, i32* %v2_26226, align 4
  store i32 %v3_26226, i32* @eax, align 8
  %v2_26229 = add i32 %v3_26226, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_26229 = inttoptr i32 %v2_26229 to i32*
  store i32 %v5_26223, i32* %v3_26229, align 4
  %v4_2622c = call i32 @function_262c5(i32 %v3_261f2, i32 %v2_261f5, i32 %v2_261ed, i32 %v0_2619a)
  ret i32 %v4_2622c

; uselistorder directives
  uselistorder i32 %v2_261f5, { 1, 0 }
  uselistorder i32 %v3_261f2, { 1, 0, 2 }
  uselistorder i32 %v2_261ed, { 1, 0, 2 }
  uselistorder i32 %v0_2619a, { 1, 0 }
  uselistorder i32 %v0_2610e, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_262c5, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4a502, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @unknown_479d2, { 1, 0, 6, 5, 4, 3, 2 }
}

define i32 @function_26168(i32 %arg1) local_unnamed_addr {
dec_label_pc_26168:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26232() local_unnamed_addr {
dec_label_pc_26232:
  %eax.global-to-local = alloca i32, align 4
  %v0_26232 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26232
}

define i32 @function_26249() local_unnamed_addr {
dec_label_pc_26249:
  %ebx.global-to-local = alloca i32, align 4
  %v0_26249 = load i32, i32* %ebx.global-to-local, align 4
  %v1_26249 = add i32 %v0_26249, 1962990717
  %v2_26249 = inttoptr i32 %v1_26249 to i32*
  %v3_26249 = load i32, i32* %v2_26249, align 4
  %v4_26249 = add i32 %v3_26249, 1
  store i32 %v4_26249, i32* %v2_26249, align 4
  %v0_2624f = load i32, i32* @ebp, align 4
  %v1_2624f = add i32 %v0_2624f, -60
  %v2_2624f = inttoptr i32 %v1_2624f to i32*
  %v3_2624f = load i32, i32* %v2_2624f, align 4
  %v1_26256 = call i32 @unknown_41ef2(i32 %v3_2624f)
  %v0_2625b = load i32, i32* @ebp, align 4
  %v1_2625b = add i32 %v0_2625b, -68
  %v2_2625b = inttoptr i32 %v1_2625b to i32*
  %v3_2625b = load i32, i32* %v2_2625b, align 4
  %v1_2625e = add i32 %v0_2625b, -20
  %v2_2625e = inttoptr i32 %v1_2625e to i32*
  %v3_2625e = load i32, i32* %v2_2625e, align 4
  %v2_26261 = add i32 %v3_2625e, %v3_2625b
  %v2_26263 = shl i32 %v2_26261, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_26268 = add i32 %v0_2625b, -16
  %v3_26268 = inttoptr i32 %v2_26268 to i32*
  %v4_26268 = load i32, i32* %v3_26268, align 4
  %v5_26268 = add i32 %v4_26268, %v2_26263
  %v3_2626b = load i32, i32* %v2_2625e, align 4
  %v2_2626e = shl i32 %v3_2626b, ptrtoint (i32* @global_var_3.2378 to i32)
  %v5_26271 = add i32 %v4_26268, %v2_2626e
  %v3_2627f = call i32 @unknown_41f1f(i32 %v5_26271, i32 %v5_26268, i32 %v1_26256)
  %v0_26284 = call i32 @function_262a7()
  ret i32 %v0_26284
}

define i32 @function_26286() local_unnamed_addr {
dec_label_pc_26286:
  %ebp.global-to-local = alloca i32, align 4
  %v0_26286 = load i32, i32* %ebp.global-to-local, align 4
  %v1_26286 = add i32 %v0_26286, -60
  %v2_26286 = inttoptr i32 %v1_26286 to i32*
  %v3_26286 = load i32, i32* %v2_26286, align 4
  %v1_2628c = call i32 @unknown_41ef2(i32 %v3_26286)
  %v1_26295 = add i32 %v0_26286, -36
  %v2_26295 = inttoptr i32 %v1_26295 to i32*
  %v3_26295 = load i32, i32* %v2_26295, align 4
  %v1_2629c = add i32 %v0_26286, -16
  %v2_2629c = inttoptr i32 %v1_2629c to i32*
  %v3_2629c = load i32, i32* %v2_2629c, align 4
  %v3_262a2 = call i32 @unknown_41f1f(i32 %v3_2629c, i32 %v3_26295, i32 %v1_2628c)
  ret i32 %v3_262a2

; uselistorder directives
  uselistorder i32 %v0_26286, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_41f1f, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_41ef2, { 8, 7, 3, 2, 1, 0, 6, 5, 4 }
}

define i32 @function_262a7() local_unnamed_addr {
dec_label_pc_262a7:
  %v0_262a7 = load i32, i32* @ebp, align 4
  %v1_262a7 = add i32 %v0_262a7, -60
  %v2_262a7 = inttoptr i32 %v1_262a7 to i32*
  %v3_262a7 = load i32, i32* %v2_262a7, align 4
  %v1_262aa = add i32 %v0_262a7, -24
  %v2_262aa = inttoptr i32 %v1_262aa to i32*
  %v3_262aa = load i32, i32* %v2_262aa, align 4
  %v1_262b1 = add i32 %v0_262a7, -16
  %v2_262b1 = inttoptr i32 %v1_262b1 to i32*
  %v3_262b1 = load i32, i32* %v2_262b1, align 4
  %v3_262bb = call i32 @unknown_44df8(i32 %v3_262a7, i32 %v3_262b1, i32 %v3_262aa)
  ret i32 %v3_262bb

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_44df8, { 1, 0 }
}

define i32 @function_262c5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_262c5:
  %v0_262c5 = load i32, i32* @ebp, align 4
  %v1_262c5 = add i32 %v0_262c5, -12
  %v2_262c5 = inttoptr i32 %v1_262c5 to i32*
  %v3_262c5 = load i32, i32* %v2_262c5, align 4
  %v3_262c8 = icmp eq i32 %v3_262c5, 30
  br i1 %v3_262c8, label %bb, label %dec_label_pc_262c5.dec_label_pc_262d1_crit_edge

dec_label_pc_262c5.dec_label_pc_262d1_crit_edge:  ; preds = %dec_label_pc_262c5
  %v2_262cf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_262d1

bb:                                               ; preds = %dec_label_pc_262c5
  %v1_262cf = call i32 @function_262d6()
  br label %dec_label_pc_262d1

dec_label_pc_262d1:                               ; preds = %dec_label_pc_262c5.dec_label_pc_262d1_crit_edge, %bb
  %v2_262cf = phi i32 [ %v2_262cf.pre, %dec_label_pc_262c5.dec_label_pc_262d1_crit_edge ], [ %v1_262cf, %bb ]
  ret i32 %v2_262cf

; uselistorder directives
  uselistorder label %dec_label_pc_262d1, { 1, 0 }
}

define i32 @function_262d6() local_unnamed_addr {
dec_label_pc_262d6:
  %v0_262d6 = load i32, i32* @ebp, align 4
  %v1_262db = inttoptr i32 %v0_262d6 to i32*
  %v2_262db = load i32, i32* %v1_262db, align 4
  store i32 %v2_262db, i32* @ebp, align 4
  %v0_262dc = load i32, i32* @eax, align 8
  ret i32 %v0_262dc
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262dd:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_2630f = call i32 @function_26316(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2630f
}

define i32 @function_26316(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26316:
  %v0_26317 = load i32, i32* @eax, align 8
  ret i32 %v0_26317
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2631a:
  %v1_26337 = call i32 @unknown_50da5(i32 %arg1)
  store i32 %v1_26337, i32* @eax, align 8
  %v1_26346 = call i32 @function_2634d()
  ret i32 %v1_26346
}

define i32 @function_2634d() local_unnamed_addr {
dec_label_pc_2634d:
  %v0_2634e = load i32, i32* @eax, align 8
  ret i32 %v0_2634e
}

define i32 @_ZSt13__copy_move_aILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2634f:
  %v3_2638a = call i32 @unknown_50e11(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_2638a
}

define i32 @_ZSt12partial_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_263a2:
  %v3_263d9 = call i32 @unknown_50ed7(i32 %arg1, i32 %arg2, i32 %arg3)
  %v2_263eb = call i32 @unknown_50fa2(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_263fa = call i32 @function_26401()
  ret i32 %v1_263fa

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26401() local_unnamed_addr {
dec_label_pc_26401:
  %v0_26402 = load i32, i32* @eax, align 8
  ret i32 %v0_26402
}

define i32 @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEET_S7_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26403:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v4_2642a = ptrtoint i32* %stack_var_-52 to i32
  %v2_2642e = ptrtoint i32* %stack_var_-56 to i32
  %v2_26434 = call i32 @unknown_47a8c(i32 %v2_2642e, i32 %v4_2642a)
  %v2_26445 = ptrtoint i32* %stack_var_-40 to i32
  ret i32 %v2_26445
}

define i32 @function_26450(i32 %arg1) local_unnamed_addr {
dec_label_pc_26450:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_26450 = load i32, i32* @ebp, align 4
  store i32 %v0_26450, i32* %stack_var_-4, align 4
  %v0_26451 = load i32, i32* @ecx, align 4
  %v1_26451 = add i32 %v0_26451, -1996217260
  %v2_26451 = inttoptr i32 %v1_26451 to i8*
  %v3_26451 = load i8, i8* %v2_26451, align 1
  %v4_26451 = udiv i8 %v3_26451, 2
  %v5_26451 = shl i8 %v3_26451, ptrtoint (i32* @global_var_7.2402 to i8)
  %v6_26451 = or i8 %v4_26451, %v5_26451
  store i8 %v6_26451, i8* %v2_26451, align 1
  %v0_26459 = load i32, i32* %stack_var_-4, align 4
  %v3_26459 = call i32 @unknown_47813(i32 %v0_26459, i32 %tmp4, i32 ptrtoint (i32* @1 to i32))
  %v0_26461 = load i32, i32* @ebp, align 4
  %v1_26461 = add i32 %v0_26461, -28
  %v2_26461 = inttoptr i32 %v1_26461 to i32*
  store i32 1, i32* %v2_26461, align 4
  %v0_26468 = load i32, i32* @ebp, align 4
  %v1_26468 = add i32 %v0_26468, -24
  %v1_2646b = add i32 %v0_26468, -28
  %v1_26472 = add i32 %v0_26468, -52
  store i32 %v1_26472, i32* %stack_var_-4, align 4
  %v3_2647c = call i32 @unknown_51075(i32 %v1_26468, i32 %v1_26472, i32 %v1_2646b)
  %v0_26484 = load i32, i32* @ebp, align 4
  %v1_26484 = add i32 %v0_26484, -24
  %v2_26484 = inttoptr i32 %v1_26484 to i32*
  %v3_26484 = load i32, i32* %v2_26484, align 4
  store i32 %v3_26484, i32* %stack_var_-4, align 4
  %v1_2648b = add i32 %v0_26484, -36
  %v2_2648b = inttoptr i32 %v1_2648b to i32*
  %v3_2648b = load i32, i32* %v2_2648b, align 4
  %v1_26492 = add i32 %v0_26484, -48
  %v2_26492 = inttoptr i32 %v1_26492 to i32*
  %v3_26492 = load i32, i32* %v2_26492, align 4
  %v3_26498 = call i32 @unknown_510d6(i32 %v3_26492, i32 %v3_2648b, i32 %v3_26484)
  %v0_2649d = load i32, i32* @ebp, align 4
  %v1_2649d = add i32 %v0_2649d, -48
  %v1_264a3 = call i32 @unknown_4292f(i32 %v1_2649d)
  store i32 %v1_264a3, i32* %ebx.global-to-local, align 4
  %v0_264aa = load i32, i32* @ebp, align 4
  %v1_264aa = add i32 %v0_264aa, -20
  %v2_264aa = inttoptr i32 %v1_264aa to i32*
  store i32 1, i32* %v2_264aa, align 4
  %v0_264b1 = load i32, i32* @ebp, align 4
  %v1_264b1 = add i32 %v0_264b1, -16
  %v1_264b4 = add i32 %v0_264b1, -20
  store i32 %v1_264b4, i32* %stack_var_-4, align 4
  %v1_264bb = add i32 %v0_264b1, -48
  %v3_264c5 = call i32 @unknown_47813(i32 %v1_264b1, i32 %v1_264bb, i32 %v1_264b4)
  %v0_264cd = load i32, i32* @ebp, align 4
  %v1_264cd = add i32 %v0_264cd, -44
  %v2_264cd = inttoptr i32 %v1_264cd to i32*
  %v3_264cd = load i32, i32* %v2_264cd, align 4
  %v0_264d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_264d0, i32* %stack_var_-4, align 4
  %v1_264d4 = add i32 %v0_264cd, -52
  %v2_264d4 = inttoptr i32 %v1_264d4 to i32*
  %v3_264d4 = load i32, i32* %v2_264d4, align 4
  %v1_264db = add i32 %v0_264cd, -16
  %v2_264db = inttoptr i32 %v1_264db to i32*
  %v3_264db = load i32, i32* %v2_264db, align 4
  %v4_264e5 = call i32 @unknown_51294(i32 %v3_264cd, i32 %v3_264db, i32 %v3_264d4, i32 %v0_264d0)
  %v0_264ed = load i32, i32* @ebp, align 4
  %v1_264ed = add i32 %v0_264ed, -44
  %v2_264ed = inttoptr i32 %v1_264ed to i32*
  %v3_264ed = load i32, i32* %v2_264ed, align 4
  store i32 %v3_264ed, i32* @eax, align 8
  %v1_264f0 = add i32 %v0_264ed, -12
  %v2_264f0 = inttoptr i32 %v1_264f0 to i32*
  %v3_264f0 = load i32, i32* %v2_264f0, align 4
  %v3_264f3 = icmp eq i32 %v3_264f0, 30
  br i1 %v3_264f3, label %bb, label %dec_label_pc_264fc

bb:                                               ; preds = %dec_label_pc_26450
  %v1_264fa = call i32 @function_26501()
  br label %dec_label_pc_264fc

dec_label_pc_264fc:                               ; preds = %bb, %dec_label_pc_26450
  %v2_264fa = phi i32 [ %v1_264fa, %bb ], [ %v3_264ed, %dec_label_pc_26450 ]
  ret i32 %v2_264fa

; uselistorder directives
  uselistorder i32 %v0_264cd, { 1, 0, 2 }
  uselistorder i8 %v3_26451, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 (i32, i32, i32)* @unknown_47813, { 1, 0 }
}

define i32 @function_26501() local_unnamed_addr {
dec_label_pc_26501:
  %v0_26505 = load i32, i32* @eax, align 8
  ret i32 %v0_26505
}

define i32 @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_() local_unnamed_addr {
dec_label_pc_26508:
  %eax.global-to-local = alloca i32, align 4
  %v5_26508 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_26508
}

define i32 @function_2650a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2650a:
  %v0_26510 = load i32, i32* @ebp, align 4
  %v1_26510 = add i32 %v0_26510, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_26510 = inttoptr i32 %v1_26510 to i32*
  %v3_26510 = load i32, i32* %v2_26510, align 4
  %v2_26513 = add i32 %v0_26510, -44
  %v3_26513 = inttoptr i32 %v2_26513 to i32*
  store i32 %v3_26510, i32* %v3_26513, align 4
  %v0_26516 = load i32, i32* @ebp, align 4
  %v1_26516 = add i32 %v0_26516, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_26516 = inttoptr i32 %v1_26516 to i32*
  %v3_26516 = load i32, i32* %v2_26516, align 4
  %v2_26519 = add i32 %v0_26516, -48
  %v3_26519 = inttoptr i32 %v2_26519 to i32*
  store i32 %v3_26516, i32* %v3_26519, align 4
  %v1_26522 = load i32, i32* @ebp, align 4
  %v2_26522 = add i32 %v1_26522, -12
  %v3_26522 = inttoptr i32 %v2_26522 to i32*
  store i32 30, i32* %v3_26522, align 4
  %v0_26527 = load i32, i32* @ebp, align 4
  %v1_26527 = add i32 %v0_26527, -48
  %v1_2652e = add i32 %v0_26527, -44
  %v2_26534 = call i32 @unknown_429a6(i32 %v1_2652e, i32 %v1_26527)
  store i32 %v2_26534, i32* @eax, align 8
  %v4_26539 = trunc i32 %v2_26534 to i8
  %v5_26539 = icmp eq i8 %v4_26539, 0
  %v1_2653b = icmp eq i1 %v5_26539, false
  br i1 %v1_2653b, label %bb, label %dec_label_pc_26541

bb:                                               ; preds = %dec_label_pc_2650a
  %v2_2653b = call i32 @function_2664b()
  br label %dec_label_pc_26541

dec_label_pc_26541:                               ; preds = %bb, %dec_label_pc_2650a
  %v0_26541 = load i32, i32* @ebp, align 4
  %v1_26541 = add i32 %v0_26541, -28
  %v2_26541 = inttoptr i32 %v1_26541 to i32*
  store i32 1, i32* %v2_26541, align 4
  %v0_26548 = load i32, i32* @ebp, align 4
  %v1_26548 = add i32 %v0_26548, -32
  %v1_2654b = add i32 %v0_26548, -28
  %v1_26552 = add i32 %v0_26548, -44
  %v3_2655c = call i32 @unknown_47918(i32 %v1_26548, i32 %v1_26552, i32 %v1_2654b)
  ret i32 %v3_2655c
}

define i32 @function_26595() local_unnamed_addr {
dec_label_pc_26595:
  %eax.global-to-local = alloca i32, align 4
  %v0_26595 = load i32, i32* %eax.global-to-local, align 8
  %v2_26595 = add i32 %v0_26595, 57
  %v16_26595 = and i32 %v2_26595, 255
  %v18_26595 = and i32 %v0_26595, -256
  %v19_26595 = or i32 %v16_26595, %v18_26595
  store i32 %v19_26595, i32* %eax.global-to-local, align 8
  ret i32 %v19_26595

; uselistorder directives
  uselistorder i32 %v0_26595, { 1, 0 }
}

define i32 @function_265c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_265c0:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_265c0 = load i32, i32* @ebp, align 4
  %v1_265c0 = add i32 %v0_265c0, -20
  %v1_265c3 = add i32 %v0_265c0, -24
  %v1_265ca = add i32 %v0_265c0, -32
  store i32 %v1_265ca, i32* %edx.global-to-local, align 8
  %v3_265d4 = call i32 @unknown_47918(i32 %v1_265c0, i32 %v1_265ca, i32 %v1_265c3)
  %v0_265dc = load i32, i32* @ebp, align 4
  %v1_265dc = add i32 %v0_265dc, -16
  %v1_265df = add i32 %v0_265dc, -20
  %v2_265df = inttoptr i32 %v1_265df to i32*
  %v3_265df = load i32, i32* %v2_265df, align 4
  store i32 %v3_265df, i32* %edx.global-to-local, align 8
  %v1_265e6 = add i32 %v0_265dc, -32
  %v2_265e6 = inttoptr i32 %v1_265e6 to i32*
  %v3_265e6 = load i32, i32* %v2_265e6, align 4
  store i32 %v3_265e6, i32* %edx.global-to-local, align 8
  %v1_265ed = add i32 %v0_265dc, -44
  %v2_265ed = inttoptr i32 %v1_265ed to i32*
  %v3_265ed = load i32, i32* %v2_265ed, align 4
  store i32 %v3_265ed, i32* %edx.global-to-local, align 8
  %v4_265f7 = call i32 @unknown_514b2(i32 %v1_265dc, i32 %v3_265ed, i32 %v3_265e6, i32 %v3_265df)
  %v0_265ff = load i32, i32* @ebp, align 4
  %v1_265ff = add i32 %v0_265ff, -44
  %v1_26605 = call i32 @unknown_42a34(i32 %v1_265ff)
  store i32 %v1_26605, i32* %ecx.global-to-local, align 4
  %v0_2660c = load i32, i32* @ebp, align 4
  %v1_2660c = add i32 %v0_2660c, -40
  %v2_2660c = inttoptr i32 %v1_2660c to i32*
  %v3_2660c = load i32, i32* %v2_2660c, align 4
  %v1_2660f = add i32 %v0_2660c, -36
  %v2_2660f = inttoptr i32 %v1_2660f to i32*
  %v3_2660f = load i32, i32* %v2_2660f, align 4
  store i32 %v3_2660f, i32* %edx.global-to-local, align 8
  %v2_26612 = inttoptr i32 %v1_26605 to i32*
  store i32 %v3_2660c, i32* %v2_26612, align 4
  %v0_26614 = load i32, i32* %edx.global-to-local, align 8
  %v1_26614 = load i32, i32* %ecx.global-to-local, align 4
  %v2_26614 = add i32 %v1_26614, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_26614 = inttoptr i32 %v2_26614 to i32*
  store i32 %v0_26614, i32* %v3_26614, align 4
  %v0_26617 = call i32 @function_26624()
  ret i32 %v0_26617

; uselistorder directives
  uselistorder i32 %v0_265dc, { 1, 0, 2, 3 }
}

define i32 @function_26619() local_unnamed_addr {
dec_label_pc_26619:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_26619 = add i32 %tmp91, -32
  %v2_26619 = inttoptr i32 %v1_26619 to i32*
  %v3_26619 = load i32, i32* %v2_26619, align 4
  %v1_2661f = call i32 @unknown_51540(i32 %v3_26619)
  ret i32 %v1_2661f
}

define i32 @function_26624() local_unnamed_addr {
dec_label_pc_26624:
  %v0_26624 = load i32, i32* @ebp, align 4
  %v1_26624 = add i32 %v0_26624, -32
  %v1_2662a = call i32 @unknown_429fa(i32 %v1_26624)
  %v0_2662f = load i32, i32* @ebp, align 4
  %v1_2662f = add i32 %v0_2662f, -48
  %v1_26636 = add i32 %v0_2662f, -32
  %v2_2663c = call i32 @unknown_47977(i32 %v1_26636, i32 %v1_2662f)
  %v0_26649 = call i32 @function_2664c()
  ret i32 %v0_26649
}

define i32 @function_2664b() local_unnamed_addr {
dec_label_pc_2664b:
  %v0_2664b = load i32, i32* @eax, align 8
  ret i32 %v0_2664b
}

define i32 @function_2664c() local_unnamed_addr {
dec_label_pc_2664c:
  %v0_2664c = load i32, i32* @ebp, align 4
  %v1_2664c = add i32 %v0_2664c, -12
  %v2_2664c = inttoptr i32 %v1_2664c to i32*
  %v3_2664c = load i32, i32* %v2_2664c, align 4
  %v2_2664f = xor i32 %v3_2664c, 30
  %v3_2664f = icmp eq i32 %v2_2664f, 0
  store i32 %v2_2664f, i32* @eax, align 8
  br i1 %v3_2664f, label %bb, label %dec_label_pc_26658

bb:                                               ; preds = %dec_label_pc_2664c
  %v1_26656 = call i32 @function_2665d()
  br label %dec_label_pc_26658

dec_label_pc_26658:                               ; preds = %bb, %dec_label_pc_2664c
  %v2_26656 = phi i32 [ %v1_26656, %bb ], [ %v2_2664f, %dec_label_pc_2664c ]
  ret i32 %v2_26656
}

define i32 @function_2665d() local_unnamed_addr {
dec_label_pc_2665d:
  %v0_2665d = load i32, i32* @ebp, align 4
  %v1_26662 = inttoptr i32 %v0_2665d to i32*
  %v2_26662 = load i32, i32* %v1_26662, align 4
  store i32 %v2_26662, i32* @ebp, align 4
  %v0_26663 = load i32, i32* @eax, align 8
  ret i32 %v0_26663
}

define i32 @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26664:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v4_266a2 = ptrtoint i32* %stack_var_-36 to i32
  %v2_266a6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_266ac106 = call i32 @unknown_47ad3(i32 %v2_266a6, i32 %v4_266a2)
  %v4_266b1107 = trunc i32 %v2_266ac106 to i8
  %v5_266b1108 = icmp eq i8 %v4_266b1107, 0
  %v1_266b3110 = icmp eq i1 %v5_266b1108, false
  br i1 %v1_266b3110, label %dec_label_pc_26689, label %dec_label_pc_266b5

dec_label_pc_26689:                               ; preds = %dec_label_pc_26664, %dec_label_pc_26689
  %v3_26689 = load i32, i32* %stack_var_-20, align 4
  %v1_2668f = call i32 @unknown_5169c(i32 %v3_26689)
  %v1_2669a = call i32 @unknown_42b56(i32 %v2_266a6)
  %v2_266ac = call i32 @unknown_47ad3(i32 %v2_266a6, i32 %v4_266a2)
  %v4_266b1 = trunc i32 %v2_266ac to i8
  %v5_266b1 = icmp eq i8 %v4_266b1, 0
  %v1_266b3 = icmp eq i1 %v5_266b1, false
  br i1 %v1_266b3, label %dec_label_pc_26689, label %dec_label_pc_266b5

dec_label_pc_266b5:                               ; preds = %dec_label_pc_26689, %dec_label_pc_26664
  store i32 0, i32* @eax, align 8
  %v1_266bf = call i32 @function_266c6()
  ret i32 %v1_266bf

; uselistorder directives
  uselistorder i32 %v2_266a6, { 2, 1, 0 }
  uselistorder i32 %v4_266a2, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @unknown_47ad3, { 1, 0 }
  uselistorder label %dec_label_pc_26689, { 1, 0 }
}

define i32 @function_266c6() local_unnamed_addr {
dec_label_pc_266c6:
  %v0_266c7 = load i32, i32* @eax, align 8
  ret i32 %v0_266c7
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_266c8:
  store i32 0, i32* @eax, align 8
  %v2_266e9 = call i32 @function_266f0(i32 %arg1)
  ret i32 %v2_266e9
}

define i32 @function_266f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_266f0:
  %v0_266f1 = load i32, i32* @eax, align 8
  ret i32 %v0_266f1
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_266f2:
  ret i32 30
}

define i32 @function_2670c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2670c:
  %v0_2670f = load i32, i32* @ebp, align 4
  %v1_2670f = add i32 %v0_2670f, -12
  %v2_2670f = inttoptr i32 %v1_2670f to i32*
  %v3_2670f = load i32, i32* %v2_2670f, align 4
  %v2_26712 = xor i32 %v3_2670f, 30
  ret i32 %v2_26712
}

define i32 @_ZNSaIxEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26722:
  %v2_2674c = call i32 @unknown_5182a(i32 %arg1, i32 %arg2)
  ret i32 30
}

define i32 @function_26758(i32 %arg1) local_unnamed_addr {
dec_label_pc_26758:
  %v2_26758 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26758 = load i32, i32* @eax, align 8
  %v4_26758 = trunc i32 %v3_26758 to i8
  %v5_26758 = add i8 %v4_26758, %v2_26758
  %v21_26758 = inttoptr i32 %v3_26758 to i8*
  store i8 %v5_26758, i8* %v21_26758, align 1
  %v0_2675a = load i32, i32* @ebp, align 4
  %v1_2675a = load i32, i32* @eax, align 8
  %v3_2675a = add i32 %v0_2675a, -24
  %v4_2675a = add i32 %v3_2675a, %v1_2675a
  %v5_2675a = inttoptr i32 %v4_2675a to i8*
  %v6_2675a = load i8, i8* %v5_2675a, align 1
  %v7_2675a = load i32, i32* @edx, align 8
  %v8_2675a = lshr i32 %v7_2675a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_2675a = trunc i32 %v8_2675a to i8
  %v10_2675a = add i8 %v9_2675a, %v6_2675a
  store i8 %v10_2675a, i8* %v5_2675a, align 1
  %v31_2675a = load i32, i32* @eax, align 8
  ret i32 %v31_2675a
}

define i32 @function_26761() local_unnamed_addr {
dec_label_pc_26761:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26761 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26761 = add i32 %v0_26761, -1
  store i32 %v1_26761, i32* %ecx.global-to-local, align 4
  %v0_26763 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26763
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26764:
  %v1_2678d = call i32 @unknown_4ac34(i32 %arg1)
  %v10_26792 = icmp ult i32 %v1_2678d, %arg2
  %v1_26795 = zext i1 %v10_26792 to i32
  %v3_26795 = and i32 %v1_2678d, -256
  %v4_26795 = or i32 %v1_26795, %v3_26795
  %v5_26798 = icmp eq i1 %v10_26792, false
  br i1 %v5_26798, label %bb, label %dec_label_pc_2679c

bb:                                               ; preds = %dec_label_pc_26764
  %v1_2679a = call i32 @function_267a1()
  br label %dec_label_pc_2679c

dec_label_pc_2679c:                               ; preds = %bb, %dec_label_pc_26764
  %v2_2679a = phi i32 [ %v1_2679a, %bb ], [ %v4_26795, %dec_label_pc_26764 ]
  ret i32 %v2_2679a

; uselistorder directives
  uselistorder i1 %v10_26792, { 1, 0 }
}

define i32 @function_267a1() local_unnamed_addr {
dec_label_pc_267a1:
  %v0_267a1 = load i32, i32* @ebp, align 4
  %v1_267a1 = add i32 %v0_267a1, -32
  %v2_267a1 = inttoptr i32 %v1_267a1 to i32*
  %v3_267a1 = load i32, i32* %v2_267a1, align 4
  %v2_267a4 = shl i32 %v3_267a1, ptrtoint (i32* @global_var_3.2378 to i32)
  ret i32 %v2_267a4
}

define i32 @function_267ae() local_unnamed_addr {
dec_label_pc_267ae:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_267ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_267ae = add i32 %v0_267ae, 862319701
  %v2_267ae = inttoptr i32 %v1_267ae to i32*
  %v3_267ae = load i32, i32* %v2_267ae, align 4
  %v4_267ae = add i32 %v3_267ae, -1
  store i32 %v4_267ae, i32* %v2_267ae, align 4
  %v0_267b4 = load i32, i32* %eax.global-to-local, align 8
  %v1_267b4 = load i1, i1* %cf.global-to-local, align 1
  %v2_267b4 = zext i1 %v1_267b4 to i32
  %v3_267b4 = add i32 %v0_267b4, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_267b4 = add i32 %v3_267b4, %v2_267b4
  %v20_267b4 = add i32 %v0_267b4, 20
  %v21_267b4 = add i32 %v20_267b4, %v2_267b4
  %v22_267b4 = icmp ule i32 %v21_267b4, %v0_267b4
  %v23_267b4 = icmp ugt i32 %v0_267b4, -21
  %v24_267b4 = select i1 %v1_267b4, i1 %v22_267b4, i1 %v23_267b4
  store i1 %v24_267b4, i1* %cf.global-to-local, align 1
  store i32 %v4_267b4, i32* %eax.global-to-local, align 8
  ret i32 %v4_267b4
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_267c2:
  %v3_267f9 = call i32 @unknown_518fa(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_267f9, i32* @eax, align 8
  %v1_26808 = call i32 @function_2680f()
  ret i32 %v1_26808
}

define i32 @function_2680f() local_unnamed_addr {
dec_label_pc_2680f:
  %v0_26810 = load i32, i32* @eax, align 8
  ret i32 %v0_26810
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEeqERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26812:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_26832 = load i32, i32* %arg1, align 4
  %v1_26837 = inttoptr i32 %arg2 to i32*
  %v2_26837 = load i32, i32* %v1_26837, align 4
  %v12_26839 = icmp eq i32 %v2_26832, %v2_26837
  %v1_2683b = zext i1 %v12_26839 to i32
  %v3_2683b = and i32 %v2_26837, -256
  %v4_2683b = or i32 %v1_2683b, %v3_2683b
  store i32 %v4_2683b, i32* @eax, align 8
  %v3_26848 = call i32 @function_2684f(i32 %arg2, i32 %tmp101)
  ret i32 %v3_26848

; uselistorder directives
  uselistorder i32 %v2_26837, { 1, 0 }
}

define i32 @function_2684f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2684f:
  %v0_26850 = load i32, i32* @eax, align 8
  ret i32 %v0_26850
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEj(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26852:
  %v2_26882 = call i32 @unknown_48440(i32 %arg1)
  %v4_26887 = trunc i32 %v2_26882 to i8
  %v5_26887 = icmp eq i8 %v4_26887, 0
  %v1_26889 = icmp eq i1 %v5_26887, false
  br i1 %v1_26889, label %bb, label %dec_label_pc_2688b

bb:                                               ; preds = %dec_label_pc_26852
  %v2_26889 = call i32 @function_268af()
  br label %dec_label_pc_2688b

dec_label_pc_2688b:                               ; preds = %bb, %dec_label_pc_26852
  %v3_268a3 = phi i32 [ %v2_26889, %bb ], [ %v2_26882, %dec_label_pc_26852 ]
  ret i32 %v3_268a3
}

define i32 @function_268af() local_unnamed_addr {
dec_label_pc_268af:
  %eax.global-to-local = alloca i32, align 4
  %v0_268af = load i32, i32* @ebp, align 4
  %v1_268af = add i32 %v0_268af, -32
  store i32 %v1_268af, i32* %eax.global-to-local, align 8
  %v1_268b5 = call i32 @unknown_4840c(i32 %v1_268af)
  store i32 %v1_268b5, i32* %eax.global-to-local, align 8
  %v0_268ba = load i32, i32* @ebp, align 4
  %v1_268ba = add i32 %v0_268ba, -52
  %v2_268ba = inttoptr i32 %v1_268ba to i32*
  %v3_268ba = load i32, i32* %v2_268ba, align 4
  store i32 %v3_268ba, i32* %eax.global-to-local, align 8
  %v1_268bd = inttoptr i32 %v3_268ba to i32*
  %v2_268bd = load i32, i32* %v1_268bd, align 4
  store i32 %v2_268bd, i32* %eax.global-to-local, align 8
  %v2_268bf = add i32 %v0_268ba, -32
  %v3_268bf = inttoptr i32 %v2_268bf to i32*
  store i32 %v2_268bd, i32* %v3_268bf, align 4
  %v0_268c2 = load i32, i32* @ebp, align 4
  %v1_268c2 = add i32 %v0_268c2, -20
  %v2_268c2 = inttoptr i32 %v1_268c2 to i32*
  store i32 0, i32* %v2_268c2, align 4
  %v0_268c9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_268c9
}

define i32 @function_268ce() local_unnamed_addr {
dec_label_pc_268ce:
  %v0_268ce = load i32, i32* @ebp, align 4
  %v1_268ce = add i32 %v0_268ce, -32
  %v1_268d4 = call i32 @unknown_51a44(i32 %v1_268ce)
  %v1_268dc = call i32 @unknown_51a76(i32 %v1_268d4)
  %v0_268e5 = load i32, i32* @ebp, align 4
  %v1_268e5 = add i32 %v0_268e5, -24
  %v2_268eb = call i32 @unknown_3b3e2(i32 %v1_268e5, i32 %v1_268dc)
  %v0_268f0 = load i32, i32* @ebp, align 4
  %v1_268f0 = add i32 %v0_268f0, -48
  %v2_268f0 = inttoptr i32 %v1_268f0 to i8*
  %v3_268f0 = load i8, i8* %v2_268f0, align 1
  %v10_268f0 = icmp eq i8 %v3_268f0, 0
  br i1 %v10_268f0, label %dec_label_pc_26911, label %dec_label_pc_268f6

dec_label_pc_268f6:                               ; preds = %dec_label_pc_268ce
  %v1_268f6 = add i32 %v0_268f0, -32
  %v1_268fc = call i32 @unknown_51a44(i32 %v1_268f6)
  %v1_26904 = call i32 @unknown_51ad2(i32 %v1_268fc)
  %v1_2690c = call i32 @unknown_51b2e(i32 %v1_26904)
  %v0_26911.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_26911

dec_label_pc_26911:                               ; preds = %dec_label_pc_268f6, %dec_label_pc_268ce
  %v0_26911 = phi i32 [ %v0_26911.pre, %dec_label_pc_268f6 ], [ %v0_268f0, %dec_label_pc_268ce ]
  %v1_26911 = add i32 %v0_26911, -32
  %v1_26917 = call i32 @unknown_51a44(i32 %v1_26911)
  %v1_2691f = call i32 @unknown_51ad2(i32 %v1_26917)
  store i32 %v1_2691f, i32* @eax, align 8
  %v1_26927 = call i32 @function_3923e(i32 %v1_2691f)
  %v1_2692c = trunc i32 %v1_26927 to i8
  %v2_2692c = load i32, i32* @ebp, align 4
  %v3_2692c = add i32 %v2_2692c, -13
  %v4_2692c = inttoptr i32 %v3_2692c to i8*
  store i8 %v1_2692c, i8* %v4_2692c, align 1
  %v0_2692f = load i32, i32* @ebp, align 4
  %v1_2692f = add i32 %v0_2692f, -24
  %v1_26935 = call i32 @unknown_3b45a(i32 %v1_2692f)
  %v0_2693a = load i32, i32* @ebp, align 4
  %v1_2693a = add i32 %v0_2693a, -13
  %v2_2693a = inttoptr i32 %v1_2693a to i8*
  %v3_2693a = load i8, i8* %v2_2693a, align 1
  %v5_26941 = icmp eq i8 %v3_2693a, 1
  br i1 %v5_26941, label %bb, label %dec_label_pc_26945

bb:                                               ; preds = %dec_label_pc_26911
  %v1_26943 = call i32 @function_2699c()
  %v0_26945.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_26945

dec_label_pc_26945:                               ; preds = %bb, %dec_label_pc_26911
  %v0_26945 = phi i32 [ %v0_26945.pre, %bb ], [ %v0_2693a, %dec_label_pc_26911 ]
  %v1_26945 = add i32 %v0_26945, -32
  %v1_2694b = call i32 @unknown_51a44(i32 %v1_26945)
  %v1_26953 = call i32 @unknown_51ad2(i32 %v1_2694b)
  %v1_2695b = call i32 @unknown_51b7a(i32 %v1_26953)
  %v0_26962 = load i32, i32* @ebp, align 4
  %v1_26962 = add i32 %v0_26962, -44
  %v2_26962 = inttoptr i32 %v1_26962 to i32*
  %v3_26962 = load i32, i32* %v2_26962, align 4
  %v1_26968 = call i32 @unknown_48786(i32 %v3_26962)
  %v1_26970 = call i32 @unknown_487e2(i32 %v1_26968)
  %v0_26977 = load i32, i32* @ebp, align 4
  %v1_26977 = add i32 %v0_26977, -60
  ret i32 %v1_26977

; uselistorder directives
  uselistorder i32 (i32)* @unknown_51ad2, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_51a44, { 3, 2, 1, 0 }
}

define i32 @function_26984(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26984:
  %v0_26984 = load i32, i32* @ecx, align 4
  %v1_26984 = add i32 %v0_26984, -1996217260
  %v2_26984 = inttoptr i32 %v1_26984 to i8*
  %v3_26984 = load i8, i8* %v2_26984, align 1
  %v5_26984 = trunc i32 %v0_26984 to i8
  %v6_26984 = or i8 %v3_26984, %v5_26984
  store i8 %v6_26984, i8* %v2_26984, align 1
  %v0_2698c = call i32 @unknown_51baa()
  %v0_26994 = load i32, i32* @ebp, align 4
  %v1_26994 = add i32 %v0_26994, -60
  %v2_26994 = inttoptr i32 %v1_26994 to i32*
  %v3_26994 = load i32, i32* %v2_26994, align 4
  %v2_26997 = add i32 %v0_26994, -32
  %v3_26997 = inttoptr i32 %v2_26997 to i32*
  store i32 %v3_26994, i32* %v3_26997, align 4
  %v0_2699a = call i32 @function_269a7()
  ret i32 %v0_2699a
}

define i32 @function_2699c() local_unnamed_addr {
dec_label_pc_2699c:
  %v0_2699c = load i32, i32* @ebp, align 4
  %v1_2699c = add i32 %v0_2699c, -32
  %v1_269a2 = call i32 @unknown_51daa(i32 %v1_2699c)
  ret i32 %v1_269a2
}

define i32 @function_269a7() local_unnamed_addr {
dec_label_pc_269a7:
  %v0_269a7 = load i32, i32* @ebp, align 4
  %v1_269a7 = add i32 %v0_269a7, -20
  %v2_269a7 = inttoptr i32 %v1_269a7 to i32*
  %v3_269a7 = load i32, i32* %v2_269a7, align 4
  %v4_269a7 = add i32 %v3_269a7, 1
  store i32 %v4_269a7, i32* %v2_269a7, align 4
  %v0_269ab = load i32, i32* @ebp, align 4
  %v1_269ab = add i32 %v0_269ab, -44
  %v2_269ab = inttoptr i32 %v1_269ab to i32*
  %v3_269ab = load i32, i32* %v2_269ab, align 4
  %v1_269b1 = call i32 @unknown_48786(i32 %v3_269ab)
  %v1_269b9 = call i32 @unknown_487e2(i32 %v1_269b1)
  %v0_269c0 = load i32, i32* @ebp, align 4
  %v1_269c0 = add i32 %v0_269c0, -28
  %v2_269ca = call i32 @unknown_4894c(i32 %v1_269c0, i32 %v1_269b9)
  %v0_269d2 = load i32, i32* @ebp, align 4
  %v1_269d2 = add i32 %v0_269d2, -28
  %v1_269d9 = add i32 %v0_269d2, -32
  %v2_269df = call i32 @unknown_51a04(i32 %v1_269d9, i32 %v1_269d2)
  %v4_269e4 = trunc i32 %v2_269df to i8
  %v5_269e4 = icmp eq i8 %v4_269e4, 0
  br i1 %v5_269e4, label %dec_label_pc_269fd, label %dec_label_pc_269e8

dec_label_pc_269e8:                               ; preds = %dec_label_pc_269a7
  %v0_269e8 = load i32, i32* @ebp, align 4
  %v1_269e8 = add i32 %v0_269e8, -56
  %v2_269e8 = inttoptr i32 %v1_269e8 to i32*
  %v3_269e8 = load i32, i32* %v2_269e8, align 4
  %v10_269e8 = icmp eq i32 %v3_269e8, 0
  br i1 %v10_269e8, label %dec_label_pc_26a02, label %dec_label_pc_269ee

dec_label_pc_269ee:                               ; preds = %dec_label_pc_269e8
  %v1_269ee = add i32 %v0_269e8, -20
  %v2_269ee = inttoptr i32 %v1_269ee to i32*
  %v3_269ee = load i32, i32* %v2_269ee, align 4
  %v4_269f1 = load i32, i32* %v2_269e8, align 4
  %v10_269f1 = icmp ult i32 %v3_269ee, %v4_269f1
  %v1_269f4 = icmp eq i1 %v10_269f1, false
  br i1 %v1_269f4, label %dec_label_pc_269fd, label %dec_label_pc_26a02

dec_label_pc_269fd:                               ; preds = %dec_label_pc_269ee, %dec_label_pc_269a7
  br label %dec_label_pc_26a02

dec_label_pc_26a02:                               ; preds = %dec_label_pc_269e8, %dec_label_pc_269ee, %dec_label_pc_269fd
  %storemerge = phi i1 [ false, %dec_label_pc_269fd ], [ true, %dec_label_pc_269ee ], [ true, %dec_label_pc_269e8 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_26a0a

bb:                                               ; preds = %dec_label_pc_26a02
  %v2_26a04 = call i32 @function_268ce()
  br label %dec_label_pc_26a0a

dec_label_pc_26a0a:                               ; preds = %bb, %dec_label_pc_26a02
  %v0_26a0a = load i32, i32* @ebp, align 4
  %v1_26a0a = add i32 %v0_26a0a, -44
  %v2_26a0a = inttoptr i32 %v1_26a0a to i32*
  %v3_26a0a = load i32, i32* %v2_26a0a, align 4
  %v1_26a0d = add i32 %v0_26a0a, -32
  %v2_26a0d = inttoptr i32 %v1_26a0d to i32*
  %v3_26a0d = load i32, i32* %v2_26a0d, align 4
  %v2_26a10 = add i32 %v3_26a0a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_26a10 = inttoptr i32 %v2_26a10 to i32*
  store i32 %v3_26a0d, i32* %v3_26a10, align 4
  %v0_26a13 = load i32, i32* @ebp, align 4
  %v1_26a13 = add i32 %v0_26a13, -12
  %v2_26a13 = inttoptr i32 %v1_26a13 to i32*
  %v3_26a13 = load i32, i32* %v2_26a13, align 4
  %v2_26a16 = xor i32 %v3_26a13, 30
  %v3_26a16 = icmp eq i32 %v2_26a16, 0
  store i32 %v2_26a16, i32* @eax, align 8
  br i1 %v3_26a16, label %bb8, label %dec_label_pc_26a38

bb8:                                              ; preds = %dec_label_pc_26a0a
  %v1_26a1d = call i32 @function_26a3d()
  br label %dec_label_pc_26a38

dec_label_pc_26a38:                               ; preds = %dec_label_pc_26a0a, %bb8
  %v0_26a1f = phi i32 [ %v2_26a16, %dec_label_pc_26a0a ], [ %v1_26a1d, %bb8 ]
  ret i32 %v0_26a1f

; uselistorder directives
  uselistorder label %dec_label_pc_26a38, { 1, 0 }
  uselistorder label %dec_label_pc_26a02, { 2, 1, 0 }
}

define i32 @function_26a22(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a22:
  %v0_26a22 = load i32, i32* @eax, align 8
  ret i32 %v0_26a22
}

define i32 @function_26a28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a28:
  %v0_26a28 = load i32, i32* @eax, align 8
  %v2_26a28 = and i32 %v0_26a28, 232
  %v2_26a2a = add nuw nsw i32 %v2_26a28, 182
  %v16_26a2a = and i32 %v2_26a2a, 254
  %v18_26a2a = and i32 %v0_26a28, -256
  %v19_26a2a = or i32 %v16_26a2a, %v18_26a2a
  %v1_26a2c = inttoptr i32 %v19_26a2a to i32*
  %v2_26a2c = load i32, i32* %v1_26a2c, align 4
  %v4_26a2c = add i32 %v19_26a2a, %v2_26a2c
  store i32 %v4_26a2c, i32* %v1_26a2c, align 4
  %v0_26a2e = load i32, i32* @ebx, align 4
  ret i32 %v0_26a2e

; uselistorder directives
  uselistorder i32 %v0_26a28, { 1, 0 }
  uselistorder i32 232, { 1, 0 }
}

define i32 @function_26a3d() local_unnamed_addr {
dec_label_pc_26a3d:
  %v0_26a41 = load i32, i32* @eax, align 8
  ret i32 %v0_26a41
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE4swapERSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a42:
  %v2_26a6c = call i32 @unknown_51fd3(i32 %arg1, i32 %arg2)
  %v1_26a74 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_26a7a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_26a7a, i32* @eax, align 8
  %v2_26a84 = call i32 @function_36fd4(i32 %v1_26a7a, i32 %v1_26a74)
  store i32 0, i32* @eax, align 8
  %v1_26a93 = call i32 @function_26a9a()
  ret i32 %v1_26a93

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26a9a() local_unnamed_addr {
dec_label_pc_26a9a:
  %v0_26a9b = load i32, i32* @eax, align 8
  ret i32 %v0_26a9b
}

define i32 @_ZN5boost8optionalIbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a9c:
  %v1_26ab9 = call i32 @unknown_52078(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_26ac8 = call i32 @function_26acf()
  ret i32 %v1_26ac8
}

define i32 @function_26acf() local_unnamed_addr {
dec_label_pc_26acf:
  %v0_26ad0 = load i32, i32* @eax, align 8
  ret i32 %v0_26ad0
}

define i32 @_ZN5boost15optional_detail13optional_baseIbED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ad2:
  %v1_26aef = call i32 @unknown_520ea(i32 %arg1)
  ret i32 0
}

define i32 @function_26b00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26b00:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26b05() local_unnamed_addr {
dec_label_pc_26b05:
  %eax.global-to-local = alloca i32, align 4
  %v0_26b06 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26b06
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26b08:
  %v2_26b22 = load i32, i32* %arg1, align 4
  %v1_26b24 = icmp eq i32 %v2_26b22, 0
  %v1_26b26 = icmp eq i1 %v1_26b24, false
  br i1 %v1_26b26, label %bb, label %dec_label_pc_26b28

bb:                                               ; preds = %dec_label_pc_26b08
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_26b26 = call i32 @function_26b4c(i32 %tmp105)
  br label %dec_label_pc_26b28

dec_label_pc_26b28:                               ; preds = %bb, %dec_label_pc_26b08
  %v3_26b40 = phi i32 [ %v3_26b26, %bb ], [ %v2_26b22, %dec_label_pc_26b08 ]
  ret i32 %v3_26b40

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26b4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b4c:
  %v0_26b4c = load i32, i32* @ebp, align 4
  %v1_26b4c = add i32 %v0_26b4c, -28
  %v2_26b4c = inttoptr i32 %v1_26b4c to i32*
  %v3_26b4c = load i32, i32* %v2_26b4c, align 4
  %v1_26b4f = inttoptr i32 %v3_26b4c to i32*
  %v2_26b4f = load i32, i32* %v1_26b4f, align 4
  store i32 %v2_26b4f, i32* @eax, align 8
  %v1_26b51 = add i32 %v0_26b4c, -12
  %v2_26b51 = inttoptr i32 %v1_26b51 to i32*
  %v3_26b51 = load i32, i32* %v2_26b51, align 4
  %v3_26b54 = icmp eq i32 %v3_26b51, 30
  br i1 %v3_26b54, label %bb, label %dec_label_pc_26b5d

bb:                                               ; preds = %dec_label_pc_26b4c
  %v1_26b5b = call i32 @function_26b62()
  br label %dec_label_pc_26b5d

dec_label_pc_26b5d:                               ; preds = %bb, %dec_label_pc_26b4c
  %v2_26b5b = phi i32 [ %v1_26b5b, %bb ], [ %v2_26b4f, %dec_label_pc_26b4c ]
  ret i32 %v2_26b5b
}

define i32 @function_26b62() local_unnamed_addr {
dec_label_pc_26b62:
  %v0_26b63 = load i32, i32* @eax, align 8
  ret i32 %v0_26b63
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b64:
  ret i32 %arg1
}

define i32 @function_26b74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26b74:
  %eax.global-to-local = alloca i32, align 4
  %v0_26b74 = load i32, i32* @ebp, align 4
  %v0_26b75 = load i32, i32* @eax, align 8
  %v11_26b75 = or i32 %v0_26b75, 137
  store i32 %v11_26b75, i32* %eax.global-to-local, align 8
  %v1_26b77 = add i32 %v0_26b74, 2
  store i32 %v1_26b77, i32* @ebp, align 4
  %v1_26b78 = add i32 %v0_26b74, -93
  %v2_26b78 = inttoptr i32 %v1_26b78 to i8*
  %v3_26b78 = load i8, i8* %v2_26b78, align 1
  %v5_26b78 = mul i8 %v3_26b78, 2
  store i8 %v5_26b78, i8* %v2_26b78, align 1
  %v16_26b78 = icmp slt i8 %v3_26b78, 0
  %v0_26b7b = load i32, i32* %eax.global-to-local, align 8
  %v1_26b7b = trunc i32 %v0_26b7b to i8
  %v3_26b7b = zext i1 %v16_26b78 to i8
  %v4_26b7b = add i8 %v1_26b7b, %v3_26b7b
  %v22_26b7b = zext i8 %v4_26b7b to i32
  %v24_26b7b = and i32 %v0_26b7b, -256
  %v25_26b7b = or i32 %v22_26b7b, %v24_26b7b
  store i32 %v25_26b7b, i32* %eax.global-to-local, align 8
  %v1_26b7d = inttoptr i32 %v25_26b7b to i8*
  %v2_26b7d = load i8, i8* %v1_26b7d, align 1
  %v5_26b7d = add i8 %v2_26b7d, %v4_26b7b
  store i8 %v5_26b7d, i8* %v1_26b7d, align 1
  %v0_26b7f = load i32, i32* %eax.global-to-local, align 8
  %v1_26b7f = load i32, i32* @ebp, align 4
  %v2_26b7f = add i32 %v1_26b7f, -28
  %v3_26b7f = inttoptr i32 %v2_26b7f to i32*
  store i32 %v0_26b7f, i32* %v3_26b7f, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_26b84 = load i32, i32* @ebp, align 4
  %v1_26b84 = add i32 %v0_26b84, -44
  %v2_26b84 = inttoptr i32 %v1_26b84 to i32*
  %v3_26b84 = load i32, i32* %v2_26b84, align 4
  %v1_26b87 = add i32 %v3_26b84, ptrtoint (i32* @global_var_c.2390 to i32)
  %v1_26b8e = add i32 %v0_26b84, -36
  store i32 %v1_26b8e, i32* %eax.global-to-local, align 8
  %v3_26b94 = call i32 @unknown_449f8(i32 %v1_26b8e, i32 %v1_26b87)
  store i32 %v3_26b94, i32* %eax.global-to-local, align 8
  %v0_26b99 = load i32, i32* @ebp, align 4
  %v1_26b99 = add i32 %v0_26b99, -44
  %v2_26b99 = inttoptr i32 %v1_26b99 to i32*
  %v3_26b99 = load i32, i32* %v2_26b99, align 4
  store i32 %v3_26b99, i32* %eax.global-to-local, align 8
  %v2_26b9f = call i32 @unknown_48a98(i32 %v3_26b99)
  store i32 %v2_26b9f, i32* %eax.global-to-local, align 8
  %v2_26ba7 = call i32 @unknown_48af4(i32 %v2_26b9f)
  store i32 %v2_26ba7, i32* %eax.global-to-local, align 8
  %v1_26bac = load i32, i32* @ebp, align 4
  %v2_26bac = add i32 %v1_26bac, -48
  %v3_26bac = inttoptr i32 %v2_26bac to i32*
  %v4_26bac = load i32, i32* %v3_26bac, align 4
  %v15_26bac = icmp eq i32 %v2_26ba7, %v4_26bac
  %v1_26baf = icmp eq i1 %v15_26bac, false
  %v2_26baf = zext i1 %v1_26baf to i32
  %v4_26baf = and i32 %v2_26ba7, -256
  %v5_26baf = or i32 %v2_26baf, %v4_26baf
  store i32 %v5_26baf, i32* %eax.global-to-local, align 8
  %v5_26bb2 = icmp eq i1 %v1_26baf, false
  %v1_26bb4 = icmp eq i1 %v5_26bb2, false
  br i1 %v1_26bb4, label %bb, label %dec_label_pc_26bba

bb:                                               ; preds = %dec_label_pc_26b74
  %v2_26bb4 = call i32 @function_26c64()
  store i32 %v2_26bb4, i32* %eax.global-to-local, align 8
  %v0_26bba.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_26bba

dec_label_pc_26bba:                               ; preds = %bb, %dec_label_pc_26b74
  %v0_26bba = phi i32 [ %v0_26bba.pre, %bb ], [ %v1_26bac, %dec_label_pc_26b74 ]
  %v1_26bba = add i32 %v0_26bba, -44
  %v2_26bba = inttoptr i32 %v1_26bba to i32*
  %v3_26bba = load i32, i32* %v2_26bba, align 4
  store i32 %v3_26bba, i32* %eax.global-to-local, align 8
  %v2_26bc0 = call i32 @unknown_48752(i32 %v3_26bba)
  %v1_26bc5 = xor i32 %v2_26bc0, 1
  %v4_26bc5 = trunc i32 %v1_26bc5 to i8
  store i32 %v1_26bc5, i32* %eax.global-to-local, align 8
  %v5_26bc8 = icmp eq i8 %v4_26bc5, 0
  br i1 %v5_26bc8, label %bb9, label %dec_label_pc_26bcc

bb9:                                              ; preds = %dec_label_pc_26bba
  %v1_26bca = call i32 @function_26c1b()
  store i32 %v1_26bca, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26bcc

dec_label_pc_26bcc:                               ; preds = %bb9, %dec_label_pc_26bba
  %v0_26bcc = load i32, i32* @ebp, align 4
  %v1_26bcc = add i32 %v0_26bcc, -44
  %v2_26bcc = inttoptr i32 %v1_26bcc to i32*
  %v3_26bcc = load i32, i32* %v2_26bcc, align 4
  store i32 %v3_26bcc, i32* %eax.global-to-local, align 8
  %v2_26bd2 = call i32 @unknown_521c0(i32 %v3_26bcc)
  store i32 %v2_26bd2, i32* %eax.global-to-local, align 8
  %v0_26bd9 = load i32, i32* @ebp, align 4
  %v1_26bd9 = add i32 %v0_26bd9, -44
  %v2_26bd9 = inttoptr i32 %v1_26bd9 to i32*
  %v3_26bd9 = load i32, i32* %v2_26bd9, align 4
  store i32 %v3_26bd9, i32* %eax.global-to-local, align 8
  %v2_26bdf = call i32 @unknown_48a98(i32 %v3_26bd9)
  store i32 %v2_26bdf, i32* %eax.global-to-local, align 8
  %v2_26be7 = call i32 @unknown_48af4(i32 %v2_26bdf)
  store i32 %v2_26be7, i32* %eax.global-to-local, align 8
  ret i32 %v2_26be7

; uselistorder directives
  uselistorder i32 %v2_26ba7, { 1, 0, 2 }
  uselistorder i8 %v3_26b78, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
}

define i32 @function_26bfb() local_unnamed_addr {
dec_label_pc_26bfb:
  %eax.global-to-local = alloca i32, align 4
  %v0_26bfb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26bfb
}

define i32 @function_26c12(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c12:
  %v0_26c16 = call i32 @unknown_52376()
  ret i32 %v0_26c16
}

define i32 @function_26c1b() local_unnamed_addr {
dec_label_pc_26c1b:
  %v0_26c1b = load i32, i32* @ebp, align 4
  %v1_26c1b = add i32 %v0_26c1b, -44
  %v2_26c1b = inttoptr i32 %v1_26c1b to i32*
  %v3_26c1b = load i32, i32* %v2_26c1b, align 4
  %v1_26c21 = call i32 @unknown_48a98(i32 %v3_26c1b)
  %v1_26c29 = call i32 @unknown_48af4(i32 %v1_26c21)
  %v0_26c30 = load i32, i32* @ebp, align 4
  %v1_26c30 = add i32 %v0_26c30, -32
  %v2_26c3a = call i32 @unknown_48c14(i32 %v1_26c30, i32 %v1_26c29)
  %v0_26c4a = load i32, i32* @ebp, align 4
  %v1_26c4a = add i32 %v0_26c4a, -32
  %v1_26c59 = add i32 %v0_26c4a, -44
  %v2_26c59 = inttoptr i32 %v1_26c59 to i32*
  %v3_26c59 = load i32, i32* %v2_26c59, align 4
  %v4_26c5f = call i32 @unknown_4d3b6(i32 %v3_26c59, i32 0, i32 %v1_26c4a, i32 0)
  ret i32 %v4_26c5f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_48af4, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_48a98, { 2, 1, 0, 3 }
}

define i32 @function_26c64() local_unnamed_addr {
dec_label_pc_26c64:
  %v0_26c64 = load i32, i32* @ebp, align 4
  %v1_26c64 = add i32 %v0_26c64, -36
  %v1_26c6a = call i32 @unknown_44a48(i32 %v1_26c64)
  %v0_26c6f = load i32, i32* @ebp, align 4
  %v1_26c6f = add i32 %v0_26c6f, -28
  %v2_26c6f = inttoptr i32 %v1_26c6f to i32*
  %v3_26c6f = load i32, i32* %v2_26c6f, align 4
  %v2_26c72 = xor i32 %v3_26c6f, 30
  %v3_26c72 = icmp eq i32 %v2_26c72, 0
  store i32 %v2_26c72, i32* @eax, align 8
  br i1 %v3_26c72, label %bb, label %dec_label_pc_26c7b

bb:                                               ; preds = %dec_label_pc_26c64
  %v1_26c79 = call i32 @function_26ca7()
  store i32 %v1_26c79, i32* @eax, align 8
  br label %dec_label_pc_26c7b

dec_label_pc_26c7b:                               ; preds = %bb, %dec_label_pc_26c64
  %v0_26c7b = call i32 @function_26ca2()
  ret i32 %v0_26c7b
}

define i32 @function_26c86() local_unnamed_addr {
dec_label_pc_26c86:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26c86 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26c86 = add i32 %v0_26c86, -1996297229
  %v2_26c86 = inttoptr i32 %v1_26c86 to i32*
  %v3_26c86 = load i32, i32* %v2_26c86, align 4
  %v4_26c86 = add i32 %v3_26c86, -1
  store i32 %v4_26c86, i32* %v2_26c86, align 4
  %v0_26c8c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26c8c
}

define i32 @function_26ca2() local_unnamed_addr {
dec_label_pc_26ca2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26ca7() local_unnamed_addr {
dec_label_pc_26ca7:
  %v0_26ca7 = load i32, i32* @ebp, align 4
  %v1_26cad = inttoptr i32 %v0_26ca7 to i32*
  %v2_26cad = load i32, i32* %v1_26cad, align 4
  store i32 %v2_26cad, i32* @ebp, align 4
  %v0_26cae = load i32, i32* @eax, align 8
  ret i32 %v0_26cae
}

define i32 @_ZNK5boost10shared_ptrINS_8signals210last_valueIbEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26cb0:
  %v2_26cca = load i32, i32* %arg1, align 4
  %v1_26ccc = icmp eq i32 %v2_26cca, 0
  %v1_26cce = icmp eq i1 %v1_26ccc, false
  br i1 %v1_26cce, label %bb, label %dec_label_pc_26cd0

bb:                                               ; preds = %dec_label_pc_26cb0
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_26cce = call i32 @function_26cf4(i32 %tmp105)
  br label %dec_label_pc_26cd0

dec_label_pc_26cd0:                               ; preds = %bb, %dec_label_pc_26cb0
  %v3_26ce8 = phi i32 [ %v3_26cce, %bb ], [ %v2_26cca, %dec_label_pc_26cb0 ]
  ret i32 %v3_26ce8

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26cf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_26cf4:
  %v0_26cf4 = load i32, i32* @ebp, align 4
  %v1_26cf4 = add i32 %v0_26cf4, -28
  %v2_26cf4 = inttoptr i32 %v1_26cf4 to i32*
  %v3_26cf4 = load i32, i32* %v2_26cf4, align 4
  %v1_26cf7 = inttoptr i32 %v3_26cf4 to i32*
  %v2_26cf7 = load i32, i32* %v1_26cf7, align 4
  store i32 %v2_26cf7, i32* @eax, align 8
  %v1_26cf9 = add i32 %v0_26cf4, -12
  %v2_26cf9 = inttoptr i32 %v1_26cf9 to i32*
  %v3_26cf9 = load i32, i32* %v2_26cf9, align 4
  %v3_26cfc = icmp eq i32 %v3_26cf9, 30
  br i1 %v3_26cfc, label %bb, label %dec_label_pc_26d05

bb:                                               ; preds = %dec_label_pc_26cf4
  %v1_26d03 = call i32 @function_26d0a()
  br label %dec_label_pc_26d05

dec_label_pc_26d05:                               ; preds = %bb, %dec_label_pc_26cf4
  %v2_26d03 = phi i32 [ %v1_26d03, %bb ], [ %v2_26cf7, %dec_label_pc_26cf4 ]
  ret i32 %v2_26d03
}

define i32 @function_26d0a() local_unnamed_addr {
dec_label_pc_26d0a:
  %v0_26d0b = load i32, i32* @eax, align 8
  ret i32 %v0_26d0b
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_26d0c:
  %v2_26d2c = load i32, i32* %arg2, align 4
  %v2_26d38 = call i32 @unknown_525b2(i32 %arg1, i32 %v2_26d2c)
  store i32 %arg1, i32* @eax, align 8
  %v1_26d4a = call i32 @function_26d51()
  ret i32 %v1_26d4a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26d51() local_unnamed_addr {
dec_label_pc_26d51:
  %v0_26d52 = load i32, i32* @eax, align 8
  ret i32 %v0_26d52
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26d56:
  %v2_26d80 = call i32 @unknown_525fc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_26d92 = call i32 @function_26d99()
  ret i32 %v1_26d92

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26d99() local_unnamed_addr {
dec_label_pc_26d99:
  %v0_26d9a = load i32, i32* @eax, align 8
  ret i32 %v0_26d9a
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_E18lock_next_callableEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d9e:
  %v1_26db9 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_26dc6 = call i32 @unknown_4d5b0(i32 %arg1, i32 %v1_26db9)
  store i32 %v2_26dc6, i32* @eax, align 8
  %v0_26dd3 = call i32 @function_26f42()
  ret i32 %v0_26dd3
}

define i32 @function_26e08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26e08:
  %v0_26e0b = load i32, i32* @ebp, align 4
  %v1_26e0b = add i32 %v0_26e0b, -28
  %v2_26e0b = inttoptr i32 %v1_26e0b to i32*
  %v3_26e0b = load i32, i32* %v2_26e0b, align 4
  %v1_26e0e = add i32 %v3_26e0b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_26e0e = inttoptr i32 %v1_26e0e to i32*
  %v3_26e0e = load i32, i32* %v2_26e0e, align 4
  %v1_26e11 = add i32 %v3_26e0e, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_26e14 = add i32 %v0_26e0b, -16
  %v2_26e1e = call i32 @unknown_50540(i32 %v1_26e14, i32 %v1_26e11)
  %v0_26e26 = load i32, i32* @ebp, align 4
  %v1_26e26 = add i32 %v0_26e26, -28
  %v2_26e26 = inttoptr i32 %v1_26e26 to i32*
  %v3_26e26 = load i32, i32* %v2_26e26, align 4
  ret i32 %v3_26e26
}

define i32 @function_26e2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e2c:
  %v1_26e2c = call i32 @unknown_51f90(i32 ptrtoint (i32* @1 to i32))
  %v1_26e34 = call i32 @unknown_5201e(i32 %v1_26e2c)
  %v0_26e39 = load i32, i32* @ebp, align 4
  %v1_26e39 = add i32 %v0_26e39, -16
  %v2_26e39 = inttoptr i32 %v1_26e39 to i32*
  %v3_26e39 = load i32, i32* %v2_26e39, align 4
  %v2_26e43 = call i32 @unknown_5267c(i32 %v1_26e34, i32 %v3_26e39)
  %v0_26e48 = load i32, i32* @ebp, align 4
  %v1_26e48 = add i32 %v0_26e48, -28
  %v2_26e48 = inttoptr i32 %v1_26e48 to i32*
  %v3_26e48 = load i32, i32* %v2_26e48, align 4
  %v1_26e4e = call i32 @unknown_51f90(i32 %v3_26e48)
  %v1_26e56 = call i32 @unknown_5201e(i32 %v1_26e4e)
  %v1_26e5e = call i32 @unknown_3978a(i32 %v1_26e56)
  %v4_26e63 = trunc i32 %v1_26e5e to i8
  %v5_26e63 = icmp eq i8 %v4_26e63, 0
  %v0_26e7e = load i32, i32* @ebp, align 4
  %v1_26e7e = add i32 %v0_26e7e, -28
  %v2_26e7e = inttoptr i32 %v1_26e7e to i32*
  %v3_26e7e = load i32, i32* %v2_26e7e, align 4
  %v1_26e81 = add i32 %v3_26e7e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_26e81 = inttoptr i32 %v1_26e81 to i32*
  %v3_26e81 = load i32, i32* %v2_26e81, align 4
  br i1 %v5_26e63, label %dec_label_pc_26e7e, label %dec_label_pc_26e67

dec_label_pc_26e67:                               ; preds = %dec_label_pc_26e2c
  %v1_26e6d = add i32 %v3_26e81, 148
  %v2_26e6d = inttoptr i32 %v1_26e6d to i32*
  %v3_26e6d = load i32, i32* %v2_26e6d, align 4
  %v1_26e73 = add i32 %v3_26e6d, 1
  store i32 %v1_26e73, i32* %v2_26e6d, align 4
  br label %dec_label_pc_26e93

dec_label_pc_26e7e:                               ; preds = %dec_label_pc_26e2c
  %v1_26e84 = add i32 %v3_26e81, 152
  %v2_26e84 = inttoptr i32 %v1_26e84 to i32*
  %v3_26e84 = load i32, i32* %v2_26e84, align 4
  %v1_26e8a = add i32 %v3_26e84, 1
  store i32 %v1_26e8a, i32* %v2_26e84, align 4
  br label %dec_label_pc_26e93

dec_label_pc_26e93:                               ; preds = %dec_label_pc_26e7e, %dec_label_pc_26e67
  %v0_26e93 = load i32, i32* @ebp, align 4
  %v1_26e93 = add i32 %v0_26e93, -28
  %v2_26e93 = inttoptr i32 %v1_26e93 to i32*
  %v3_26e93 = load i32, i32* %v2_26e93, align 4
  %v1_26e99 = call i32 @unknown_51f90(i32 %v3_26e93)
  %v1_26ea1 = call i32 @unknown_5201e(i32 %v1_26e99)
  store i32 %v1_26ea1, i32* @eax, align 8
  %v1_26ea9 = call i32 @function_39732(i32 %v1_26ea1)
  %v1_26eae = xor i32 %v1_26ea9, 1
  %v4_26eae = trunc i32 %v1_26eae to i8
  %v5_26eb1 = icmp eq i8 %v4_26eae, 0
  br i1 %v5_26eb1, label %dec_label_pc_26ecc, label %dec_label_pc_26eb5

dec_label_pc_26eb5:                               ; preds = %dec_label_pc_26e93
  %v0_26eb5 = load i32, i32* @ebp, align 4
  %v1_26eb5 = add i32 %v0_26eb5, -28
  %v2_26eb5 = inttoptr i32 %v1_26eb5 to i32*
  %v3_26eb5 = load i32, i32* %v2_26eb5, align 4
  %v1_26ebb = inttoptr i32 %v3_26eb5 to i32*
  %v2_26ebb = load i32, i32* %v1_26ebb, align 4
  %v2_26ebd = add i32 %v3_26eb5, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_26ebd = inttoptr i32 %v2_26ebd to i32*
  store i32 %v2_26ebb, i32* %v3_26ebd, align 4
  br label %dec_label_pc_26ecc

dec_label_pc_26ecc:                               ; preds = %dec_label_pc_26e93, %dec_label_pc_26eb5
  %storemerge = phi i1 [ true, %dec_label_pc_26eb5 ], [ false, %dec_label_pc_26e93 ]
  %v0_26ecc = load i32, i32* @ebp, align 4
  %v1_26ecc = add i32 %v0_26ecc, -20
  %v1_26ed2 = call i32 @unknown_3b9a6(i32 %v1_26ecc)
  br i1 %storemerge, label %dec_label_pc_26f04, label %dec_label_pc_26edc

dec_label_pc_26edc:                               ; preds = %dec_label_pc_26ecc
  %v0_26edc = load i32, i32* @ebp, align 4
  %v1_26edc = add i32 %v0_26edc, -28
  %v2_26edc = inttoptr i32 %v1_26edc to i32*
  %v3_26edc = load i32, i32* %v2_26edc, align 4
  %v1_26ee2 = call i32 @unknown_522f6(i32 %v3_26edc)
  %v0_26ee7 = load i32, i32* @ebp, align 4
  %v1_26ee7 = add i32 %v0_26ee7, -28
  %v2_26ee7 = inttoptr i32 %v1_26ee7 to i32*
  %v3_26ee7 = load i32, i32* %v2_26ee7, align 4
  %v1_26eea = add i32 %v3_26ee7, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26ef7 = call i32 @unknown_51f50(i32 %v3_26ee7, i32 %v1_26eea)
  br label %dec_label_pc_26f04

dec_label_pc_26f04:                               ; preds = %dec_label_pc_26edc, %dec_label_pc_26ecc
  %v0_26f04 = load i32, i32* @ebp, align 4
  %v1_26f04 = add i32 %v0_26f04, -28
  %v2_26f04 = inttoptr i32 %v1_26f04 to i32*
  %v3_26f04 = load i32, i32* %v2_26f04, align 4
  %v1_26f07 = add i32 %v3_26f04, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26f14 = call i32 @unknown_4d5b0(i32 %v3_26f04, i32 %v1_26f07)
  store i32 %v2_26f14, i32* @eax, align 8
  %v4_26f19 = trunc i32 %v2_26f14 to i8
  %v5_26f19 = icmp eq i8 %v4_26f19, 0
  br i1 %v5_26f19, label %bb, label %dec_label_pc_26f1d

bb:                                               ; preds = %dec_label_pc_26f04
  %v1_26f1b = call i32 @function_26f42()
  br label %dec_label_pc_26f1d

dec_label_pc_26f1d:                               ; preds = %bb, %dec_label_pc_26f04
  %v0_26f1d = load i32, i32* @ebp, align 4
  %v1_26f1d = add i32 %v0_26f1d, -28
  %v2_26f1d = inttoptr i32 %v1_26f1d to i32*
  %v3_26f1d = load i32, i32* %v2_26f1d, align 4
  %v1_26f23 = add i32 %v3_26f1d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_26f23 = inttoptr i32 %v1_26f23 to i32*
  %v3_26f23 = load i32, i32* %v2_26f23, align 4
  %v2_26f26 = add i32 %v3_26f1d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_26f26 = inttoptr i32 %v2_26f26 to i32*
  store i32 %v3_26f23, i32* %v3_26f26, align 4
  %v0_26f29 = call i32 @function_26f43()
  ret i32 %v0_26f29

; uselistorder directives
  uselistorder i32 %v3_26f1d, { 1, 0 }
  uselistorder i32 %v3_26eb5, { 1, 0 }
  uselistorder i32 %v3_26e81, { 1, 0 }
  uselistorder i32 152, { 2, 0, 1 }
  uselistorder i32 148, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @unknown_5201e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_51f90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_26ecc, { 1, 0 }
}

define i32 @function_26f2c() local_unnamed_addr {
dec_label_pc_26f2c:
  %eax.global-to-local = alloca i32, align 4
  %v0_26f2c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26f2c
}

define i32 @function_26f42() local_unnamed_addr {
dec_label_pc_26f42:
  %v0_26f42 = load i32, i32* @eax, align 8
  ret i32 %v0_26f42
}

define i32 @function_26f43() local_unnamed_addr {
dec_label_pc_26f43:
  %v0_26f43 = load i32, i32* @ebp, align 4
  %v1_26f43 = add i32 %v0_26f43, -12
  %v2_26f43 = inttoptr i32 %v1_26f43 to i32*
  %v3_26f43 = load i32, i32* %v2_26f43, align 4
  %v2_26f46 = xor i32 %v3_26f43, 30
  %v3_26f46 = icmp eq i32 %v2_26f46, 0
  store i32 %v2_26f46, i32* @eax, align 8
  br i1 %v3_26f46, label %bb, label %dec_label_pc_26f4f

bb:                                               ; preds = %dec_label_pc_26f43
  %v1_26f4d = call i32 @function_26f54()
  br label %dec_label_pc_26f4f

dec_label_pc_26f4f:                               ; preds = %bb, %dec_label_pc_26f43
  %v2_26f4d = phi i32 [ %v1_26f4d, %bb ], [ %v2_26f46, %dec_label_pc_26f43 ]
  ret i32 %v2_26f4d
}

define i32 @function_26f54() local_unnamed_addr {
dec_label_pc_26f54:
  %v0_26f58 = load i32, i32* @eax, align 8
  ret i32 %v0_26f58
}

define i32 @_ZN5boost8signals214no_slots_errorC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f5a:
  ret i32 %arg1
}

define i32 @function_26f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f68:
  %eax.global-to-local = alloca i32, align 4
  %v0_26f68 = load i32, i32* @eax, align 8
  %v1_26f68 = trunc i32 %v0_26f68 to i8
  %v2_26f68 = load i1, i1* @cf, align 1
  %v3_26f68 = zext i1 %v2_26f68 to i8
  %v4_26f68 = add i8 %v3_26f68, %v1_26f68
  %v22_26f68 = zext i8 %v4_26f68 to i32
  %v24_26f68 = and i32 %v0_26f68, -256
  %v25_26f68 = or i32 %v22_26f68, %v24_26f68
  store i32 %v25_26f68, i32* %eax.global-to-local, align 8
  %v1_26f6a = inttoptr i32 %v25_26f68 to i8*
  %v2_26f6a = load i8, i8* %v1_26f6a, align 1
  %v5_26f6a = add i8 %v2_26f6a, %v4_26f68
  store i8 %v5_26f6a, i8* %v1_26f6a, align 1
  %v0_26f6c = load i32, i32* %eax.global-to-local, align 8
  %v1_26f6c = load i32, i32* @ebp, align 4
  %v2_26f6c = add i32 %v1_26f6c, -12
  %v3_26f6c = inttoptr i32 %v2_26f6c to i32*
  store i32 %v0_26f6c, i32* %v3_26f6c, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_26f71 = load i32, i32* @ebp, align 4
  %v1_26f71 = add i32 %v0_26f71, -28
  %v2_26f71 = inttoptr i32 %v1_26f71 to i32*
  %v3_26f71 = load i32, i32* %v2_26f71, align 4
  store i32 %v3_26f71, i32* %eax.global-to-local, align 8
  %v1_26f77 = call i32 @function_2c39a(i32 %v3_26f71)
  store i32 %v1_26f77, i32* %eax.global-to-local, align 8
  %v0_26f7c = load i32, i32* @ebp, align 4
  %v1_26f7c = add i32 %v0_26f7c, -28
  %v2_26f7c = inttoptr i32 %v1_26f7c to i32*
  %v3_26f7c = load i32, i32* %v2_26f7c, align 4
  store i32 %v3_26f7c, i32* %eax.global-to-local, align 8
  %v1_26f7f = inttoptr i32 %v3_26f7c to i32*
  store i32 ptrtoint (%vtable_38e88_type* @global_var_38e88.2550 to i32), i32* %v1_26f7f, align 4
  %v0_26f85 = load i32, i32* @ebp, align 4
  %v1_26f85 = add i32 %v0_26f85, -12
  %v2_26f85 = inttoptr i32 %v1_26f85 to i32*
  %v3_26f85 = load i32, i32* %v2_26f85, align 4
  %v2_26f88 = xor i32 %v3_26f85, 30
  %v3_26f88 = icmp eq i32 %v2_26f88, 0
  store i32 %v2_26f88, i32* @eax, align 8
  br i1 %v3_26f88, label %bb, label %dec_label_pc_26f91

bb:                                               ; preds = %dec_label_pc_26f68
  %v1_26f8f = call i32 @function_26f96()
  store i32 %v1_26f8f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26f91

dec_label_pc_26f91:                               ; preds = %bb, %dec_label_pc_26f68
  %v2_26f8f = phi i32 [ %v1_26f8f, %bb ], [ %v2_26f88, %dec_label_pc_26f68 ]
  ret i32 %v2_26f8f
}

define i32 @function_26f96() local_unnamed_addr {
dec_label_pc_26f96:
  %v0_26f97 = load i32, i32* @eax, align 8
  ret i32 %v0_26f97
}

define i32 @_ZN5boost8signals214no_slots_errorD1Ev(i32* %arg1) {
dec_label_pc_26f98:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38e88_type* @global_var_38e88.2550 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_26fbe(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fbe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26fea() local_unnamed_addr {
dec_label_pc_26fea:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26fea = load i32, i32* %ecx.global-to-local, align 4
  %v1_26fea = add i32 %v0_26fea, -1
  store i32 %v1_26fea, i32* %ecx.global-to-local, align 4
  %v0_26fec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26fec
}

define i32 @_ZN5boost8signals214no_slots_errorD0Ev(i32 %arg1) {
dec_label_pc_26fee:
  %v1_2700b = call i32 @unknown_4df86(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2702b() local_unnamed_addr {
dec_label_pc_2702b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2702b = load i32, i32* %ecx.global-to-local, align 4
  %v1_2702b = add i32 %v0_2702b, -1
  store i32 %v1_2702b, i32* %ecx.global-to-local, align 4
  %v0_2702d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2702d
}

define i32 @_ZNK5boost8signals210last_valueIbEclINS0_6detail20slot_call_iterator_tINS4_12signal3_implIbRKSsS8_jS2_iSt4lessIiENS_8functionIFbS8_S8_jEEENSB_IFbRKNS0_10connectionES8_S8_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS8_S8_jSD_EESJ_EEEEESW_EEEEbT_S10_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_2702e:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-64, align 4
  store i32 %arg6, i32* %stack_var_-80, align 4
  %v4_27079 = ptrtoint i32* %stack_var_-80 to i32
  %v2_2707d = ptrtoint i32* %stack_var_-64 to i32
  %v2_27083 = call i32 @unknown_52a72(i32 %v2_2707d, i32 %v4_27079)
  ret i32 %v2_27083
}

define i32 @function_2708a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2708a:
  %v0_2708a = load i1, i1* @zf, align 1
  br i1 %v0_2708a, label %dec_label_pc_270a9, label %dec_label_pc_2708c

dec_label_pc_2708c:                               ; preds = %dec_label_pc_2708a
  %v0_2708c = load i32, i32* @ebp, align 4
  %v1_2708c = add i32 %v0_2708c, -28
  %v2_2708c = inttoptr i32 %v1_2708c to i32*
  store i32 0, i32* %v2_2708c, align 4
  %v0_27093 = load i32, i32* @ebp, align 4
  %v1_27093 = add i32 %v0_27093, -28
  %v1_27099 = call i32 @unknown_4df88(i32 %v1_27093)
  %v0_2709e = load i32, i32* @ebp, align 4
  %v1_2709e = add i32 %v0_2709e, -28
  %v1_270a4 = call i32 @unknown_52c07(i32 %v1_2709e)
  br label %dec_label_pc_270a9

dec_label_pc_270a9:                               ; preds = %dec_label_pc_2708c, %dec_label_pc_2708a
  %v0_270a9 = load i32, i32* @ebp, align 4
  %v1_270a9 = add i32 %v0_270a9, -14
  %v1_270af = call i32 @unknown_4daca(i32 %v1_270a9)
  %v0_270b4 = call i32 @function_270db()
  ret i32 %v0_270b4
}

define i32 @function_270b6() local_unnamed_addr {
dec_label_pc_270b6:
  %v0_270b6 = load i32, i32* @ebp, align 4
  %v1_270b6 = add i32 %v0_270b6, -60
  ret i32 %v1_270b6
}

define i32 @function_270be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_270be:
  %v0_270c5 = load i32, i32* @ebp, align 4
  %v1_270c5 = add i32 %v0_270c5, -14
  store i32 %v1_270c5, i32* inttoptr (i32 1149829122 to i32*), align 4
  %v0_270cb = call i32 @unknown_52d2e()
  %v0_270d0 = load i32, i32* @ebp, align 4
  %v1_270d0 = add i32 %v0_270d0, -60
  %v1_270d3 = load i32, i32* @esp, align 4
  %v2_270d3 = inttoptr i32 %v1_270d3 to i32*
  store i32 %v1_270d0, i32* %v2_270d3, align 4
  %v0_270d6 = call i32 @unknown_52d74()
  ret i32 %v0_270d6
}

define i32 @function_270db() local_unnamed_addr {
dec_label_pc_270db:
  %v0_270db = load i32, i32* @ebp, align 4
  %v1_270db = add i32 %v0_270db, -76
  %v1_270e2 = add i32 %v0_270db, -60
  %v2_270e8 = call i32 @unknown_52ca7(i32 %v1_270e2, i32 %v1_270db)
  %v4_270ed = trunc i32 %v2_270e8 to i8
  %v5_270ed = icmp eq i8 %v4_270ed, 0
  %v1_270ef = icmp eq i1 %v5_270ed, false
  br i1 %v1_270ef, label %bb, label %dec_label_pc_270f1

bb:                                               ; preds = %dec_label_pc_270db
  %v2_270ef = call i32 @function_270b6()
  br label %dec_label_pc_270f1

dec_label_pc_270f1:                               ; preds = %bb, %dec_label_pc_270db
  %v0_270f1 = load i32, i32* @ebp, align 4
  %v1_270f1 = add i32 %v0_270f1, -36
  %v1_270f4 = add i32 %v0_270f1, -14
  %v2_270fe = call i32 @unknown_52dbc(i32 %v1_270f1, i32 %v1_270f4)
  %v0_27106 = load i32, i32* @ebp, align 4
  %v1_27106 = add i32 %v0_27106, -36
  %v2_27106 = inttoptr i32 %v1_27106 to i32*
  %v3_27106 = load i32, i32* %v2_27106, align 4
  %v1_27109 = icmp eq i32 %v3_27106, 0
  %v1_2710b = icmp eq i1 %v1_27109, false
  %v2_2710b = zext i1 %v1_2710b to i32
  %v4_2710b = and i32 %v3_27106, -256
  %v5_2710b = or i32 %v2_2710b, %v4_2710b
  ret i32 %v5_2710b
}

define i32 @function_2710e() local_unnamed_addr {
dec_label_pc_2710e:
  %v0_2710e = load i32, i32* @eax, align 8
  %v4_2710e = trunc i32 %v0_2710e to i8
  %v5_2710e = icmp eq i8 %v4_2710e, 0
  %v0_2713b = load i32, i32* @ebp, align 4
  br i1 %v5_2710e, label %dec_label_pc_2713b, label %dec_label_pc_27112

dec_label_pc_27112:                               ; preds = %dec_label_pc_2710e
  %v1_27112 = add i32 %v0_2713b, -14
  %v1_27118 = call i32 @unknown_52e06(i32 %v1_27112)
  %v1_2711d = inttoptr i32 %v1_27118 to i8*
  %v2_2711d = load i8, i8* %v1_2711d, align 1
  %v3_2711d = zext i8 %v2_2711d to i32
  store i32 %v3_2711d, i32* @ebx, align 4
  %v0_27120 = load i32, i32* @ebp, align 4
  %v1_27120 = add i32 %v0_27120, -14
  %v1_27126 = call i32 @unknown_48f2c(i32 %v1_27120)
  %v0_2712b = load i32, i32* @ebx, align 4
  store i32 %v0_2712b, i32* @eax, align 8
  %v0_2712d = load i32, i32* @ebp, align 4
  %v1_2712d = add i32 %v0_2712d, -12
  %v2_2712d = inttoptr i32 %v1_2712d to i32*
  %v3_2712d = load i32, i32* %v2_2712d, align 4
  %v3_27130 = icmp eq i32 %v3_2712d, 30
  br i1 %v3_27130, label %bb, label %dec_label_pc_27139

bb:                                               ; preds = %dec_label_pc_27112
  %v1_27137 = call i32 @function_271b8()
  store i32 %v1_27137, i32* @eax, align 8
  br label %dec_label_pc_27139

dec_label_pc_27139:                               ; preds = %bb, %dec_label_pc_27112
  %v0_27139 = call i32 @function_271b3()
  ret i32 %v0_27139

dec_label_pc_2713b:                               ; preds = %dec_label_pc_2710e
  %v1_2713b = add i32 %v0_2713b, -24
  %v2_2713b = inttoptr i32 %v1_2713b to i32*
  store i32 0, i32* %v2_2713b, align 4
  %v0_27142 = load i32, i32* @ebp, align 4
  %v1_27142 = add i32 %v0_27142, -24
  %v1_27148 = call i32 @unknown_4df88(i32 %v1_27142)
  %v0_2714d = load i32, i32* @ebp, align 4
  %v1_2714d = add i32 %v0_2714d, -24
  %v1_27153 = call i32 @unknown_52c07(i32 %v1_2714d)
  store i32 %v1_27153, i32* @ebx, align 4
  %v0_2715a = load i32, i32* @ebp, align 4
  %v1_2715a = add i32 %v0_2715a, -28
  ret i32 %v1_2715a

; uselistorder directives
  uselistorder i32 %v0_2713b, { 1, 0 }
  uselistorder i32 (i32)* @unknown_52c07, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4df88, { 1, 0 }
}

define i32 @function_27152(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27152:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2715e() local_unnamed_addr {
dec_label_pc_2715e:
  %v1_27160 = call i32 @unknown_4dfc6(i32 ptrtoint (i32* @1 to i32))
  %v0_27165 = load i32, i32* @ebx, align 4
  ret i32 %v0_27165
}

define i32 @function_2716e() local_unnamed_addr {
dec_label_pc_2716e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2716e = load i32, i32* %ebx.global-to-local, align 4
  %v1_2716e = add i32 %v0_2716e, 74711546
  %v2_2716e = inttoptr i32 %v1_2716e to i32*
  %v3_2716e = load i32, i32* %v2_2716e, align 4
  %v4_2716e = add i32 %v3_2716e, 1
  store i32 %v4_2716e, i32* %v2_2716e, align 4
  %v0_27174 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_27174, i32* @ebx, align 4
  %v0_27176 = call i32 @function_2719e()
  store i32 %v0_27176, i32* %eax.global-to-local, align 8
  ret i32 %v0_27176
}

define i32 @function_27188() local_unnamed_addr {
dec_label_pc_27188:
  %eax.global-to-local = alloca i32, align 4
  %v0_27188 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27188
}

define i32 @function_2718d() local_unnamed_addr {
dec_label_pc_2718d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2718d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2718d, i32* @ebx, align 4
  %v0_2718f = load i32, i32* @ebp, align 4
  %v1_2718f = add i32 %v0_2718f, -24
  store i32 %v1_2718f, i32* %eax.global-to-local, align 8
  %v1_27195 = call i32 @unknown_4dfc6(i32 %v1_2718f)
  store i32 %v1_27195, i32* %eax.global-to-local, align 8
  %v0_2719a = call i32 @function_2719e()
  store i32 %v0_2719a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2719a

; uselistorder directives
  uselistorder i32 ()* @function_2719e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4dfc6, { 1, 0 }
}

define i32 @function_2719d() local_unnamed_addr {
dec_label_pc_2719d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2719d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2719d
}

define i32 @function_2719e() local_unnamed_addr {
dec_label_pc_2719e:
  %v0_2719e = load i32, i32* @ebp, align 4
  %v1_2719e = add i32 %v0_2719e, -14
  %v1_271a4 = call i32 @unknown_48f2c(i32 %v1_2719e)
  %v0_271a9 = load i32, i32* @ebx, align 4
  ret i32 %v0_271a9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_48f2c, { 1, 0 }
}

define i32 @function_271b2() local_unnamed_addr {
dec_label_pc_271b2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_271b3() local_unnamed_addr {
dec_label_pc_271b3:
  %v0_271b3 = load i32, i32* @eax, align 8
  ret i32 %v0_271b3
}

define i32 @function_271b8() local_unnamed_addr {
dec_label_pc_271b8:
  %v0_271b8 = load i32, i32* @ebp, align 4
  %v1_271b8 = add i32 %v0_271b8, -4
  %v2_271b8 = inttoptr i32 %v1_271b8 to i32*
  %v3_271b8 = load i32, i32* %v2_271b8, align 4
  store i32 %v3_271b8, i32* @ebx, align 4
  %v0_271bc = load i32, i32* @eax, align 8
  ret i32 %v0_271bc
}

define i32 @_ZNSs6insertIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvNS1_IPcSsEET_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_271be:
  ret i32 %arg4
}

define i32 @function_271ec() local_unnamed_addr {
dec_label_pc_271ec:
  %v0_271ee = load i32, i32* @ebp, align 4
  %v1_27203 = add i32 %v0_271ee, -28
  %v2_27203 = inttoptr i32 %v1_27203 to i32*
  %v3_27203 = load i32, i32* %v2_27203, align 4
  ret i32 %v3_27203
}

declare i32 @_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_(i32) local_unnamed_addr

define i32 @function_2721e() local_unnamed_addr {
dec_label_pc_2721e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2721e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2721e = add i32 %v0_2721e, -1
  store i32 %v1_2721e, i32* %ecx.global-to-local, align 4
  %v0_27220 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27220
}

define i32 @_ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27221:
  %v1_2723e = call i32 @unknown_499ef(i32 %arg1)
  store i32 %v1_2723e, i32* @eax, align 8
  %v1_2724d = call i32 @function_27254()
  ret i32 %v1_2724d
}

define i32 @function_27254() local_unnamed_addr {
dec_label_pc_27254:
  %v0_27255 = load i32, i32* @eax, align 8
  ret i32 %v0_27255
}

define i32 @_ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_E4typeERS8_() local_unnamed_addr {
dec_label_pc_27256:
  %eax.global-to-local = alloca i32, align 4
  %v17_27259 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_27259
}

define i32 @function_2725e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2725e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2725e = load i32, i32* @ecx, align 4
  %v1_2725e = add i32 %v0_2725e, -1587157947
  %v2_2725e = inttoptr i32 %v1_2725e to i8*
  %v3_2725e = load i8, i8* %v2_2725e, align 1
  %v5_2725e = trunc i32 %v0_2725e to i8
  %v6_2725e = or i8 %v3_2725e, %v5_2725e
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2725e, i8* %v2_2725e, align 1
  %v0_27264 = load i32, i32* @eax, align 8
  %v1_27264 = trunc i32 %v0_27264 to i8
  %v2_27264 = load i1, i1* %cf.global-to-local, align 1
  %v3_27264 = zext i1 %v2_27264 to i8
  %v4_27264 = add i8 %v3_27264, %v1_27264
  %v19_27264 = icmp ule i8 %v4_27264, %v1_27264
  %v21_27264 = icmp eq i1 %v2_27264, %v19_27264
  store i1 %v21_27264, i1* %cf.global-to-local, align 1
  %v22_27264 = zext i8 %v4_27264 to i32
  %v24_27264 = and i32 %v0_27264, -256
  %v25_27264 = or i32 %v22_27264, %v24_27264
  store i32 %v25_27264, i32* %eax.global-to-local, align 8
  %v1_27266 = inttoptr i32 %v25_27264 to i8*
  %v2_27266 = load i8, i8* %v1_27266, align 1
  %v5_27266 = add i8 %v2_27266, %v4_27264
  store i8 %v5_27266, i8* %v1_27266, align 1
  %v0_27268 = load i32, i32* %eax.global-to-local, align 8
  %v1_27268 = load i32, i32* @ebp, align 4
  %v2_27268 = add i32 %v1_27268, -12
  %v3_27268 = inttoptr i32 %v2_27268 to i32*
  store i32 %v0_27268, i32* %v3_27268, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2726d = load i32, i32* @ebp, align 4
  %v1_2726d = add i32 %v0_2726d, -28
  %v2_2726d = inttoptr i32 %v1_2726d to i32*
  %v3_2726d = load i32, i32* %v2_2726d, align 4
  store i32 %v3_2726d, i32* %eax.global-to-local, align 8
  %v1_27273 = call i32 @unknown_49a54(i32 %v3_2726d)
  store i32 %v1_27273, i32* @eax, align 8
  %v0_27278 = load i32, i32* @ebp, align 4
  %v1_27278 = add i32 %v0_27278, -12
  %v2_27278 = inttoptr i32 %v1_27278 to i32*
  %v3_27278 = load i32, i32* %v2_27278, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2727b = icmp eq i32 %v3_27278, 30
  br i1 %v3_2727b, label %bb, label %dec_label_pc_27284

bb:                                               ; preds = %dec_label_pc_2725e
  %v1_27282 = call i32 @function_27289()
  store i32 %v1_27282, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_27284

dec_label_pc_27284:                               ; preds = %bb, %dec_label_pc_2725e
  %v2_27282 = phi i32 [ %v1_27282, %bb ], [ %v1_27273, %dec_label_pc_2725e ]
  ret i32 %v2_27282

; uselistorder directives
  uselistorder i8 %v4_27264, { 0, 2, 1 }
  uselistorder i8 %v1_27264, { 1, 0 }
}

define i32 @function_27289() local_unnamed_addr {
dec_label_pc_27289:
  %v0_2728a = load i32, i32* @eax, align 8
  ret i32 %v0_2728a
}

define i32 @_ZNSs6insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcSsEET_S6_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2728c:
  ret i32 %arg1
}

define i32 @function_272d6() local_unnamed_addr {
dec_label_pc_272d6:
  %v0_272d6 = load i32, i32* @eax, align 8
  %v11_272d6 = and i32 %v0_272d6, -24
  ret i32 %v11_272d6
}

define i32 @function_272ec() local_unnamed_addr {
dec_label_pc_272ec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_272ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_272ec = add i32 %v0_272ec, -1
  store i32 %v1_272ec, i32* %ecx.global-to-local, align 4
  %v0_272ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_272ee
}

define i32 @_ZN5boost3_bi8storage1INS0_5valueIPvEEEC1ES4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_272f0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_2731f = call i32 @function_27326(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2731f
}

define i32 @function_27326(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27326:
  %v0_27327 = load i32, i32* @eax, align 8
  ret i32 %v0_27327
}

define i32 @_ZN5boost6detail13heap_new_implINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEERSC_EEPT_T0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27328:
  ret i32 0
}

define i32 @function_2734c() local_unnamed_addr {
dec_label_pc_2734c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2734c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2734c = add i32 %v0_2734c, -465204285
  %v2_2734c = inttoptr i32 %v1_2734c to i32*
  %v3_2734c = load i32, i32* %v2_2734c, align 4
  %v4_2734c = add i32 %v3_2734c, -1
  store i32 %v4_2734c, i32* %v2_2734c, align 4
  %v0_27352 = load i32, i32* %eax.global-to-local, align 8
  %v1_27352 = add i32 %v0_27352, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_27352 = inttoptr i32 %v1_27352 to i32*
  %v3_27352 = load i32, i32* %v2_27352, align 4
  %v0_2735f = load i32, i32* %ebx.global-to-local, align 4
  %v3_27362 = call i32 @unknown_53168(i32 %v0_2735f, i32 %v0_27352, i32 %v3_27352)
  store i32 %v0_2735f, i32* @eax, align 8
  %v0_27375 = call i32 @function_2738b()
  store i32 %v0_27375, i32* %eax.global-to-local, align 8
  ret i32 %v0_27375
}

define i32 @function_2738b() local_unnamed_addr {
dec_label_pc_2738b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2738f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2738f:
  %v0_2738f = load i32, i32* @ebx, align 4
  %v1_2738f = add i32 %v0_2738f, 1583034564
  %v2_2738f = inttoptr i32 %v1_2738f to i32*
  %v3_2738f = load i32, i32* %v2_2738f, align 4
  %v4_2738f = add i32 %v3_2738f, 1
  store i32 %v4_2738f, i32* %v2_2738f, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v0_27396 = load i32, i32* @eax, align 8
  ret i32 %v0_27396
}

define i32 @_ZN5boost6detail12shared_countC1INS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS4_5list1INS4_5valueIS6_EEEEEEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27398:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_273ca() local_unnamed_addr {
dec_label_pc_273ca:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_273ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_273ca = add i32 %v0_273ca, -532313149
  %v2_273ca = inttoptr i32 %v1_273ca to i32*
  %v3_273ca = load i32, i32* %v2_273ca, align 4
  %v4_273ca = add i32 %v3_273ca, -1
  store i32 %v4_273ca, i32* %v2_273ca, align 4
  %v0_273d0 = load i32, i32* %eax.global-to-local, align 8
  %v0_273d4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_273d7 = call i32 @unknown_53238(i32 %v0_273d4, i32 %v0_273d0)
  store i32 %v2_273d7, i32* %eax.global-to-local, align 8
  %v0_273dc = load i32, i32* %ebp.global-to-local, align 4
  %v1_273dc = add i32 %v0_273dc, -28
  %v2_273dc = inttoptr i32 %v1_273dc to i32*
  %v3_273dc = load i32, i32* %v2_273dc, align 4
  store i32 %v3_273dc, i32* %eax.global-to-local, align 8
  %v0_273df = load i32, i32* %ebx.global-to-local, align 4
  %v2_273df = inttoptr i32 %v3_273dc to i32*
  store i32 %v0_273df, i32* %v2_273df, align 4
  %v0_273e1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_273e1 = add i32 %v0_273e1, -12
  %v2_273e1 = inttoptr i32 %v1_273e1 to i32*
  %v3_273e1 = load i32, i32* %v2_273e1, align 4
  %v2_273e4 = xor i32 %v3_273e1, 30
  %v3_273e4 = icmp eq i32 %v2_273e4, 0
  store i32 %v2_273e4, i32* @eax, align 8
  br i1 %v3_273e4, label %bb, label %dec_label_pc_273ed

bb:                                               ; preds = %dec_label_pc_273ca
  %v1_273eb = call i32 @function_2741d()
  store i32 %v1_273eb, i32* @eax, align 8
  br label %dec_label_pc_273ed

dec_label_pc_273ed:                               ; preds = %bb, %dec_label_pc_273ca
  %v0_273ed = call i32 @function_27418()
  store i32 %v0_273ed, i32* %eax.global-to-local, align 8
  ret i32 %v0_273ed
}

define i32 @function_273f0() local_unnamed_addr {
dec_label_pc_273f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_273f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_273f0
}

define i32 @function_27412(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27412:
  %v0_27412 = load i32, i32* @eax, align 8
  %v2_27412 = load i32, i32* @ecx, align 4
  %v3_27412 = lshr i32 %v2_27412, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_27412 = add i32 %v3_27412, %v0_27412
  %v20_27412 = and i32 %v5_27412, 255
  %v22_27412 = and i32 %v0_27412, -256
  %v23_27412 = or i32 %v20_27412, %v22_27412
  ret i32 %v23_27412

; uselistorder directives
  uselistorder i32 %v0_27412, { 1, 0 }
}

define i32 @function_27418() local_unnamed_addr {
dec_label_pc_27418:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2741d() local_unnamed_addr {
dec_label_pc_2741d:
  %v0_27422 = load i32, i32* @eax, align 8
  ret i32 %v0_27422
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisINS0_16thread_data_baseENS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS4_5list1INS4_5valueIS6_EEEEEEEES2_EEvPKNS_10shared_ptrIT_EEPKT0_PKNS_23enable_shared_from_thisIT1_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27423:
  %v10_27446 = icmp eq i32 %arg3, 0
  br i1 %v10_27446, label %dec_label_pc_27465, label %dec_label_pc_2744c

dec_label_pc_2744c:                               ; preds = %dec_label_pc_27423
  %v3_27460 = call i32 @unknown_533e9(i32 %arg3, i32 %arg1, i32 %arg2)
  br label %dec_label_pc_27465

dec_label_pc_27465:                               ; preds = %dec_label_pc_2744c, %dec_label_pc_27423
  store i32 0, i32* @eax, align 8
  %v1_2746f = call i32 @function_27476()
  ret i32 %v1_2746f
}

define i32 @function_27476() local_unnamed_addr {
dec_label_pc_27476:
  %v0_27477 = load i32, i32* @eax, align 8
  ret i32 %v0_27477
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKPKvN5boost6detail13tss_data_nodeEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27478:
  ret i32 30
}

define i32 @function_2748a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2748a:
  %v0_2748a = load i32, i32* @eax, align 8
  %v1_2748a = load i32, i32* @ebp, align 4
  %v2_2748a = add i32 %v1_2748a, -12
  %v3_2748a = inttoptr i32 %v2_2748a to i32*
  store i32 %v0_2748a, i32* %v3_2748a, align 4
  %v0_2748f = load i32, i32* @ebp, align 4
  %v1_2748f = add i32 %v0_2748f, -12
  %v2_2748f = inttoptr i32 %v1_2748f to i32*
  %v3_2748f = load i32, i32* %v2_2748f, align 4
  %v2_27492 = xor i32 %v3_2748f, 30
  ret i32 %v2_27492
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKjiEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_274a2:
  ret i32 %arg1
}

define i32 @function_274be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274be:
  %v0_274c4 = load i32, i32* @ebp, align 4
  %v1_274c4 = add i32 %v0_274c4, -12
  %v2_274c4 = inttoptr i32 %v1_274c4 to i32*
  %v3_274c4 = load i32, i32* %v2_274c4, align 4
  %v2_274c7 = xor i32 %v3_274c4, 30
  %v3_274c7 = icmp eq i32 %v2_274c7, 0
  store i32 %v2_274c7, i32* @eax, align 8
  br i1 %v3_274c7, label %bb, label %dec_label_pc_274d0

bb:                                               ; preds = %dec_label_pc_274be
  %v1_274ce = call i32 @function_274d5()
  br label %dec_label_pc_274d0

dec_label_pc_274d0:                               ; preds = %bb, %dec_label_pc_274be
  %v2_274ce = phi i32 [ %v1_274ce, %bb ], [ %v2_274c7, %dec_label_pc_274be ]
  ret i32 %v2_274ce
}

define i32 @function_274d5() local_unnamed_addr {
dec_label_pc_274d5:
  %v0_274d6 = load i32, i32* @eax, align 8
  ret i32 %v0_274d6
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_274d8:
  %v1_274f2 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_274f2 = inttoptr i32 %v1_274f2 to i32*
  store i32 0, i32* %v2_274f2, align 4
  %v1_274fc = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_274fc = inttoptr i32 %v1_274fc to i32*
  store i32 0, i32* %v2_274fc, align 4
  %v2_2750c = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2750c = inttoptr i32 %v2_2750c to i32*
  store i32 %v1_274f2, i32* %v3_2750c, align 4
  %v2_27518 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_27518 = inttoptr i32 %v2_27518 to i32*
  store i32 %v1_274f2, i32* %v3_27518, align 4
  store i32 0, i32* @eax, align 8
  %v2_27525 = call i32 @function_2752c(i32 %arg1)
  ret i32 %v2_27525
}

define i32 @function_2752c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2752c:
  %v0_2752d = load i32, i32* @eax, align 8
  ret i32 %v0_2752d
}

define i32 @_ZNKSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2752e:
  store i32 %arg1, i32* @eax, align 8
  %v2_27552 = call i32 @function_27559(i32 %arg1)
  ret i32 %v2_27552
}

define i32 @function_27559(i32 %arg1) local_unnamed_addr {
dec_label_pc_27559:
  %v0_2755a = load i32, i32* @eax, align 8
  ret i32 %v0_2755a
}

define i32 @_ZNSaISt4pairIKjiEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2755c:
  %v1_2757f = call i32 @unknown_535e6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2758e = call i32 @function_27595()
  ret i32 %v1_2758e
}

define i32 @function_27595() local_unnamed_addr {
dec_label_pc_27595:
  %v0_27596 = load i32, i32* @eax, align 8
  ret i32 %v0_27596
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27598:
  store i32 0, i32* @eax, align 8
  %v2_275b9 = call i32 @function_275c0(i32 %arg1)
  ret i32 %v2_275b9
}

define i32 @function_275c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_275c0:
  %v0_275c1 = load i32, i32* @eax, align 8
  ret i32 %v0_275c1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_275c2:
  ret i32 %arg2
}

define i32 @function_27600() local_unnamed_addr {
dec_label_pc_27600:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27600 = load i32, i32* %ecx.global-to-local, align 4
  %v1_27600 = add i32 %v0_27600, -1
  store i32 %v1_27600, i32* %ecx.global-to-local, align 4
  %v0_27602 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27602
}

define i32 @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27603:
  ret i32 %arg2
}

define i32 @function_27616(i32 %arg1) local_unnamed_addr {
dec_label_pc_27616:
  %v1_2761b = load i32, i32* @ebp, align 4
  %v2_2761b = add i32 %v1_2761b, -12
  %v3_2761b = inttoptr i32 %v2_2761b to i32*
  store i32 30, i32* %v3_2761b, align 4
  %v0_27620 = load i32, i32* @ebp, align 4
  %v1_27620 = add i32 %v0_27620, -28
  %v2_27620 = inttoptr i32 %v1_27620 to i32*
  %v3_27620 = load i32, i32* %v2_27620, align 4
  store i32 %v3_27620, i32* @eax, align 8
  %v1_27623 = add i32 %v0_27620, -12
  %v2_27623 = inttoptr i32 %v1_27623 to i32*
  %v3_27623 = load i32, i32* %v2_27623, align 4
  %v3_27626 = icmp eq i32 %v3_27623, 30
  br i1 %v3_27626, label %bb, label %dec_label_pc_2762f

bb:                                               ; preds = %dec_label_pc_27616
  %v1_2762d = call i32 @function_27634()
  br label %dec_label_pc_2762f

dec_label_pc_2762f:                               ; preds = %bb, %dec_label_pc_27616
  %v2_2762d = phi i32 [ %v1_2762d, %bb ], [ %v3_27620, %dec_label_pc_27616 ]
  ret i32 %v2_2762d
}

define i32 @function_27634() local_unnamed_addr {
dec_label_pc_27634:
  %v0_27635 = load i32, i32* @eax, align 8
  ret i32 %v0_27635
}

define i32 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_27638:
  ret i32 0
}

define i32 @function_27660(i32 %arg1) local_unnamed_addr {
dec_label_pc_27660:
  %v0_27660 = load i32, i32* @ebp, align 4
  %v1_27660 = add i32 %v0_27660, 1
  store i32 %v1_27660, i32* @ebp, align 4
  %v2_27663 = load i32, i32* @ecx, align 4
  %v4_27663 = udiv i32 %v2_27663, 2
  %v12_27663 = inttoptr i32 %v2_27663 to i32*
  store i32 %v4_27663, i32* %v12_27663, align 4
  %v0_27665 = load i32, i32* @ecx, align 4
  %v1_27665 = add i32 %v0_27665, -195720248
  %v2_27665 = inttoptr i32 %v1_27665 to i32*
  %v3_27665 = load i32, i32* %v2_27665, align 4
  %v4_27665 = udiv i32 %v3_27665, 32
  %v5_27665 = mul i32 %v3_27665, 134217728
  %v6_27665 = or i32 %v4_27665, %v5_27665
  store i32 %v6_27665, i32* %v2_27665, align 4
  %v0_2766c = load i32, i32* @edx, align 8
  %v3_2766c = icmp eq i32 %v0_2766c, 30
  br i1 %v3_2766c, label %bb, label %dec_label_pc_27660.dec_label_pc_27674_crit_edge

dec_label_pc_27660.dec_label_pc_27674_crit_edge:  ; preds = %dec_label_pc_27660
  %v2_27672.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27674

bb:                                               ; preds = %dec_label_pc_27660
  %v1_27672 = call i32 @function_27679()
  br label %dec_label_pc_27674

dec_label_pc_27674:                               ; preds = %dec_label_pc_27660.dec_label_pc_27674_crit_edge, %bb
  %v2_27672 = phi i32 [ %v2_27672.pre, %dec_label_pc_27660.dec_label_pc_27674_crit_edge ], [ %v1_27672, %bb ]
  ret i32 %v2_27672

; uselistorder directives
  uselistorder i32 %v2_27663, { 1, 0 }
  uselistorder label %dec_label_pc_27674, { 1, 0 }
}

define i32 @function_27679() local_unnamed_addr {
dec_label_pc_27679:
  %v0_2767a = load i32, i32* @eax, align 8
  ret i32 %v0_2767a
}

define i32 @_ZSteqIcEbRKSaIT_ES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2767b:
  store i32 1, i32* @eax, align 8
  %v3_276a7 = call i32 @function_276ae(i32 %arg2, i32 %arg1)
  ret i32 %v3_276a7
}

define i32 @function_276ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_276ae:
  %v0_276af = load i32, i32* @eax, align 8
  ret i32 %v0_276af
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_276b0:
  %v12_276db = icmp eq i32 %arg2, %arg1
  br i1 %v12_276db, label %bb, label %dec_label_pc_276e8

bb:                                               ; preds = %dec_label_pc_276b0
  %v4_276e6 = call i32 @function_27701(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_276e8

dec_label_pc_276e8:                               ; preds = %bb, %dec_label_pc_276b0
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_27701(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27701:
  %v0_27701 = load i32, i32* @ebp, align 4
  %v1_27701 = add i32 %v0_27701, -16
  %v2_27701 = inttoptr i32 %v1_27701 to i32*
  %v3_27701 = load i32, i32* %v2_27701, align 4
  %v2_27704 = add i32 %v0_27701, -36
  %v3_27704 = inttoptr i32 %v2_27704 to i32*
  %v4_27704 = load i32, i32* %v3_27704, align 4
  %v5_27704 = add i32 %v4_27704, %v3_27701
  ret i32 %v5_27704
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2771a:
  store i32 0, i32* @eax, align 8
  %v2_2773b = call i32 @function_27742(i32 %arg1)
  ret i32 %v2_2773b
}

define i32 @function_27742(i32 %arg1) local_unnamed_addr {
dec_label_pc_27742:
  %v0_27743 = load i32, i32* @eax, align 8
  ret i32 %v0_27743
}

define i32 @_ZSt11__addressofIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEPT_RSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27744:
  store i32 %arg1, i32* @eax, align 8
  %v2_27768 = call i32 @function_2776f(i32 %arg1)
  ret i32 %v2_27768
}

define i32 @function_2776f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2776f:
  %v0_27770 = load i32, i32* @eax, align 8
  ret i32 %v0_27770
}

define i32 @_ZSt8_DestroyIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27771:
  %v1_2778e = call i32 @unknown_3c25b(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2779d = call i32 @function_277a4()
  ret i32 %v1_2779d
}

define i32 @function_277a4() local_unnamed_addr {
dec_label_pc_277a4:
  %v0_277a5 = load i32, i32* @eax, align 8
  ret i32 %v0_277a5
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E12using_backupEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_277a6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_277c0 = load i32, i32* %arg1, align 4
  %tmp102 = icmp slt i32 %v2_277c0, 0
  %v2_277c2 = zext i1 %tmp102 to i32
  store i32 %v2_277c2, i32* @eax, align 8
  %v2_277cf = call i32 @function_277d6(i32 %tmp99)
  ret i32 %v2_277cf
}

define i32 @function_277d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_277d6:
  %v0_277d7 = load i32, i32* @eax, align 8
  ret i32 %v0_277d7
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_277d8:
  %tmp123 = icmp ult i32 %arg3, 20
  br i1 %tmp123, label %dec_label_pc_2782e, label %bb

bb:                                               ; preds = %dec_label_pc_277d8
  %sext = mul i32 %arg7, 16777216
  %v13_27828 = sdiv i32 %sext, 16777216
  %v14_27828 = sext i8 %arg6 to i32
  %v15_27828 = call i32 @function_27d2f(i32 %arg9, i32 %arg8, i32 %v13_27828, i32 %v14_27828, i32 %arg5, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2782e

dec_label_pc_2782e:                               ; preds = %dec_label_pc_277d8, %bb
  %v2_27831 = mul i32 %arg3, 4
  %v1_27834 = add i32 %v2_27831, ptrtoint (i32* @global_var_27d90.2551 to i32)
  %v1_27839 = inttoptr i32 %v1_27834 to i32*
  %v2_27839 = load i32, i32* %v1_27839, align 4
  ret i32 %v2_27839

; uselistorder directives
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2782e, { 1, 0 }
}

define i32 @function_2783d() local_unnamed_addr {
dec_label_pc_2783d:
  %v0_2783d = load i32, i32* @ebp, align 4
  %v1_2783d = add i32 %v0_2783d, -44
  %v2_2783d = inttoptr i32 %v1_2783d to i32*
  %v3_2783d = load i32, i32* %v2_2783d, align 4
  %v1_27848 = add i32 %v0_2783d, -87
  %v2_27848 = inttoptr i32 %v1_27848 to i8*
  %v3_27848 = load i8, i8* %v2_27848, align 1
  %v1_27858 = add i32 %v0_2783d, -60
  %v2_27858 = inttoptr i32 %v1_27858 to i32*
  %v3_27858 = load i32, i32* %v2_27858, align 4
  %v1_2785f = add i32 %v0_2783d, -56
  %v2_2785f = inttoptr i32 %v1_2785f to i32*
  %v3_2785f = load i32, i32* %v2_2785f, align 4
  %v1_27866 = add i32 %v0_2783d, -48
  %v2_27866 = inttoptr i32 %v1_27866 to i32*
  %v3_27866 = load i32, i32* %v2_27866, align 4
  %v7_27870 = sext i8 %v3_27848 to i32
  %v8_27870 = call i32 @unknown_5388c(i32 %v3_2783d, i32 %v3_27866, i32 %v3_2785f, i32 %v3_27858, i32 0, i32 %v7_27870, i32 1)
  %v0_27878 = call i32 @function_27d71()
  ret i32 %v0_27878

; uselistorder directives
  uselistorder i32 %v0_2783d, { 0, 2, 1, 3, 4 }
}

define i32 @function_2788a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2788a:
  %v0_2788b = load i32, i32* @eax, align 8
  %v1_2788b = trunc i32 %v0_2788b to i8
  %v2_2788b = load i32, i32* @edi, align 8
  %v3_2788b = inttoptr i32 %v2_2788b to i8*
  store i8 %v1_2788b, i8* %v3_2788b, align 1
  %v0_2788c = load i32, i32* @edx, align 8
  %v0_27898 = load i32, i32* @ebp, align 4
  %v1_27898 = add i32 %v0_27898, -60
  %v2_27898 = inttoptr i32 %v1_27898 to i32*
  %v3_27898 = load i32, i32* %v2_27898, align 4
  %v1_2789f = add i32 %v0_27898, -56
  %v2_2789f = inttoptr i32 %v1_2789f to i32*
  %v3_2789f = load i32, i32* %v2_2789f, align 4
  %v1_278a6 = add i32 %v0_27898, -48
  %v2_278a6 = inttoptr i32 %v1_278a6 to i32*
  %v3_278a6 = load i32, i32* %v2_278a6, align 4
  %v0_278ad = load i32, i32* @eax, align 8
  %sext = mul i32 %v0_2788c, 16777216
  %v6_278b0 = sdiv i32 %sext, 16777216
  %v7_278b0 = call i32 @unknown_5390e(i32 %v0_278ad, i32 %v3_278a6, i32 %v3_2789f, i32 %v3_27898, i32 0, i32 %v6_278b0)
  %v0_278b8 = call i32 @function_27d71()
  ret i32 %v0_278b8
}

define i32 @function_278bd() local_unnamed_addr {
dec_label_pc_278bd:
  %v0_278bd = load i32, i32* @ebp, align 4
  %v1_278bd = add i32 %v0_278bd, -44
  %v2_278bd = inttoptr i32 %v1_278bd to i32*
  %v3_278bd = load i32, i32* %v2_278bd, align 4
  %v1_278e6 = add i32 %v0_278bd, -48
  %v2_278e6 = inttoptr i32 %v1_278e6 to i32*
  %v3_278e6 = load i32, i32* %v2_278e6, align 4
  %v2_278f0 = call i32 @unknown_53990(i32 %v3_278bd, i32 %v3_278e6)
  %v0_278f8 = call i32 @function_27d71()
  ret i32 %v0_278f8
}

define i32 @function_278fd() local_unnamed_addr {
dec_label_pc_278fd:
  %v0_278fd = load i32, i32* @ebp, align 4
  %v1_278fd = add i32 %v0_278fd, -44
  %v2_278fd = inttoptr i32 %v1_278fd to i32*
  %v3_278fd = load i32, i32* %v2_278fd, align 4
  %v1_27926 = add i32 %v0_278fd, -48
  %v2_27926 = inttoptr i32 %v1_27926 to i32*
  %v3_27926 = load i32, i32* %v2_27926, align 4
  %v2_27930 = call i32 @unknown_53990(i32 %v3_278fd, i32 %v3_27926)
  %v0_27938 = call i32 @function_27d71()
  ret i32 %v0_27938
}

define i32 @function_2793d() local_unnamed_addr {
dec_label_pc_2793d:
  %v0_2793d = load i32, i32* @ebp, align 4
  %v1_2793d = add i32 %v0_2793d, -44
  %v2_2793d = inttoptr i32 %v1_2793d to i32*
  %v3_2793d = load i32, i32* %v2_2793d, align 4
  %v1_27966 = add i32 %v0_2793d, -48
  %v2_27966 = inttoptr i32 %v1_27966 to i32*
  %v3_27966 = load i32, i32* %v2_27966, align 4
  %v2_27970 = call i32 @unknown_53990(i32 %v3_2793d, i32 %v3_27966)
  %v0_27978 = call i32 @function_27d71()
  ret i32 %v0_27978
}

define i32 @function_2797d() local_unnamed_addr {
dec_label_pc_2797d:
  %v0_2797d = load i32, i32* @ebp, align 4
  %v1_2797d = add i32 %v0_2797d, -44
  %v2_2797d = inttoptr i32 %v1_2797d to i32*
  %v3_2797d = load i32, i32* %v2_2797d, align 4
  %v1_279a6 = add i32 %v0_2797d, -48
  %v2_279a6 = inttoptr i32 %v1_279a6 to i32*
  %v3_279a6 = load i32, i32* %v2_279a6, align 4
  %v2_279b0 = call i32 @unknown_53990(i32 %v3_2797d, i32 %v3_279a6)
  %v0_279b8 = call i32 @function_27d71()
  ret i32 %v0_279b8
}

define i32 @function_279bd() local_unnamed_addr {
dec_label_pc_279bd:
  %v0_279bd = load i32, i32* @ebp, align 4
  %v1_279bd = add i32 %v0_279bd, -44
  %v2_279bd = inttoptr i32 %v1_279bd to i32*
  %v3_279bd = load i32, i32* %v2_279bd, align 4
  %v1_279e6 = add i32 %v0_279bd, -48
  %v2_279e6 = inttoptr i32 %v1_279e6 to i32*
  %v3_279e6 = load i32, i32* %v2_279e6, align 4
  %v2_279f0 = call i32 @unknown_53990(i32 %v3_279bd, i32 %v3_279e6)
  %v0_279f8 = call i32 @function_27d71()
  ret i32 %v0_279f8
}

define i32 @function_279fd() local_unnamed_addr {
dec_label_pc_279fd:
  %v0_279fd = load i32, i32* @ebp, align 4
  %v1_279fd = add i32 %v0_279fd, -44
  %v2_279fd = inttoptr i32 %v1_279fd to i32*
  %v3_279fd = load i32, i32* %v2_279fd, align 4
  %v1_27a26 = add i32 %v0_279fd, -48
  %v2_27a26 = inttoptr i32 %v1_27a26 to i32*
  %v3_27a26 = load i32, i32* %v2_27a26, align 4
  %v2_27a30 = call i32 @unknown_53990(i32 %v3_279fd, i32 %v3_27a26)
  %v0_27a38 = call i32 @function_27d71()
  ret i32 %v0_27a38
}

define i32 @function_27a78(i32 %arg1) local_unnamed_addr {
dec_label_pc_27a78:
  %v0_27a78 = call i32 @function_27d71()
  ret i32 %v0_27a78
}

define i32 @function_27a7d() local_unnamed_addr {
dec_label_pc_27a7d:
  %v0_27a7d = load i32, i32* @ebp, align 4
  %v1_27a7d = add i32 %v0_27a7d, -44
  %v2_27a7d = inttoptr i32 %v1_27a7d to i32*
  %v3_27a7d = load i32, i32* %v2_27a7d, align 4
  %v1_27aa6 = add i32 %v0_27a7d, -48
  %v2_27aa6 = inttoptr i32 %v1_27aa6 to i32*
  %v3_27aa6 = load i32, i32* %v2_27aa6, align 4
  %v2_27ab0 = call i32 @unknown_53990(i32 %v3_27a7d, i32 %v3_27aa6)
  %v0_27ab8 = call i32 @function_27d71()
  ret i32 %v0_27ab8
}

define i32 @function_27adb() local_unnamed_addr {
dec_label_pc_27adb:
  %eax.global-to-local = alloca i32, align 4
  %v0_27adf = load i32, i32* @ebp, align 4
  %v1_27ae6 = add i32 %v0_27adf, -48
  %v2_27ae6 = inttoptr i32 %v1_27ae6 to i32*
  %v3_27ae6 = load i32, i32* %v2_27ae6, align 4
  %v0_27aed = load i32, i32* %eax.global-to-local, align 8
  %v2_27af0 = call i32 @unknown_53990(i32 %v0_27aed, i32 %v3_27ae6)
  store i32 %v2_27af0, i32* %eax.global-to-local, align 8
  %v0_27af8 = call i32 @function_27d71()
  store i32 %v0_27af8, i32* %eax.global-to-local, align 8
  ret i32 %v0_27af8

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_27b02(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b02:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b02 = load i32, i32* @eax, align 8
  %v11_27b02 = and i32 %v0_27b02, or (i32 zext (i8 ptrtoint (i8** @global_var_18.2447 to i8) to i32), i32 -256)
  store i32 %v11_27b02, i32* %eax.global-to-local, align 8
  %v1_27b04 = inttoptr i32 %v11_27b02 to i32*
  %v2_27b04 = load i32, i32* %v1_27b04, align 4
  %v4_27b04 = add i32 %v2_27b04, %v11_27b02
  store i32 %v4_27b04, i32* %v1_27b04, align 4
  %v0_27b06 = load i32, i32* %eax.global-to-local, align 8
  %v1_27b06 = inttoptr i32 %v0_27b06 to i8*
  %v2_27b06 = load i8, i8* %v1_27b06, align 1
  %v4_27b06 = trunc i32 %v0_27b06 to i8
  %v5_27b06 = add i8 %v2_27b06, %v4_27b06
  store i8 %v5_27b06, i8* %v1_27b06, align 1
  %v4_27b22 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_27b22

; uselistorder directives
  uselistorder i32 %v11_27b02, { 0, 2, 1 }
}

define i32 @function_27b27(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b27:
  %stack_var_-4 = alloca i32, align 4
  %v0_27b27 = load i32, i32* @ebp, align 4
  store i32 %v0_27b27, i32* %stack_var_-4, align 4
  %v0_27b28 = load i32, i32* @ecx, align 4
  %v1_27b28 = add i32 %v0_27b28, -1996217260
  %v2_27b28 = inttoptr i32 %v1_27b28 to i8*
  %v3_27b28 = load i8, i8* %v2_27b28, align 1
  %v4_27b28 = udiv i8 %v3_27b28, 2
  %v5_27b28 = shl i8 %v3_27b28, ptrtoint (i32* @global_var_7.2402 to i8)
  %v6_27b28 = or i8 %v4_27b28, %v5_27b28
  store i8 %v6_27b28, i8* %v2_27b28, align 1
  %v0_27b30 = load i32, i32* %stack_var_-4, align 4
  %v2_27b30 = call i32 @unknown_53990(i32 %v0_27b30, i32 ptrtoint (i32* @1 to i32))
  %v0_27b38 = call i32 @function_27d71()
  ret i32 %v0_27b38

; uselistorder directives
  uselistorder i8 %v3_27b28, { 1, 0 }
}

define i32 @function_27b3d() local_unnamed_addr {
dec_label_pc_27b3d:
  %ebp.global-to-local = alloca i32, align 4
  %v0_27b3d = load i32, i32* %ebp.global-to-local, align 4
  %v1_27b3d = add i32 %v0_27b3d, -44
  %v2_27b3d = inttoptr i32 %v1_27b3d to i32*
  %v3_27b3d = load i32, i32* %v2_27b3d, align 4
  ret i32 %v3_27b3d
}

define i32 @function_27b73() local_unnamed_addr {
dec_label_pc_27b73:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b73 = load i32, i32* %eax.global-to-local, align 8
  %v5_27b73 = mul i32 %v0_27b73, 2
  %v20_27b73 = and i32 %v5_27b73, 254
  %v22_27b73 = and i32 %v0_27b73, -256
  %v23_27b73 = or i32 %v20_27b73, %v22_27b73
  store i32 %v23_27b73, i32* %eax.global-to-local, align 8
  %v0_27b78 = call i32 @function_27d71()
  store i32 %v0_27b78, i32* %eax.global-to-local, align 8
  ret i32 %v0_27b78

; uselistorder directives
  uselistorder i32 %v0_27b73, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_27ba9() local_unnamed_addr {
dec_label_pc_27ba9:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_27ba9 = load i32, i32* %edx.global-to-local, align 8
  %v0_27bad = load i32, i32* %eax.global-to-local, align 8
  %v2_27bb0 = call i32 @unknown_53990(i32 %v0_27bad, i32 %v0_27ba9)
  store i32 %v2_27bb0, i32* %eax.global-to-local, align 8
  %v0_27bb8 = call i32 @function_27d71()
  store i32 %v0_27bb8, i32* %eax.global-to-local, align 8
  ret i32 %v0_27bb8

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_27bbd() local_unnamed_addr {
dec_label_pc_27bbd:
  %v0_27bbd = load i32, i32* @ebp, align 4
  %v1_27bbd = add i32 %v0_27bbd, -44
  %v2_27bbd = inttoptr i32 %v1_27bbd to i32*
  %v3_27bbd = load i32, i32* %v2_27bbd, align 4
  %v1_27be6 = add i32 %v0_27bbd, -48
  %v2_27be6 = inttoptr i32 %v1_27be6 to i32*
  %v3_27be6 = load i32, i32* %v2_27be6, align 4
  %v2_27bf0 = call i32 @unknown_53990(i32 %v3_27bbd, i32 %v3_27be6)
  %v0_27bf8 = call i32 @function_27d71()
  ret i32 %v0_27bf8
}

define i32 @function_27bfd() local_unnamed_addr {
dec_label_pc_27bfd:
  %v0_27bfd = load i32, i32* @ebp, align 4
  %v1_27bfd = add i32 %v0_27bfd, -44
  %v2_27bfd = inttoptr i32 %v1_27bfd to i32*
  %v3_27bfd = load i32, i32* %v2_27bfd, align 4
  %v1_27c26 = add i32 %v0_27bfd, -48
  %v2_27c26 = inttoptr i32 %v1_27c26 to i32*
  %v3_27c26 = load i32, i32* %v2_27c26, align 4
  %v2_27c30 = call i32 @unknown_53990(i32 %v3_27bfd, i32 %v3_27c26)
  %v0_27c38 = call i32 @function_27d71()
  ret i32 %v0_27c38
}

define i32 @function_27c3d() local_unnamed_addr {
dec_label_pc_27c3d:
  %v0_27c3d = load i32, i32* @ebp, align 4
  %v1_27c3d = add i32 %v0_27c3d, -44
  %v2_27c3d = inttoptr i32 %v1_27c3d to i32*
  %v3_27c3d = load i32, i32* %v2_27c3d, align 4
  %v1_27c66 = add i32 %v0_27c3d, -48
  %v2_27c66 = inttoptr i32 %v1_27c66 to i32*
  %v3_27c66 = load i32, i32* %v2_27c66, align 4
  %v2_27c70 = call i32 @unknown_53990(i32 %v3_27c3d, i32 %v3_27c66)
  %v0_27c78 = call i32 @function_27d71()
  ret i32 %v0_27c78
}

define i32 @function_27c7d() local_unnamed_addr {
dec_label_pc_27c7d:
  %v0_27c7d = load i32, i32* @ebp, align 4
  %v1_27c7d = add i32 %v0_27c7d, -44
  %v2_27c7d = inttoptr i32 %v1_27c7d to i32*
  %v3_27c7d = load i32, i32* %v2_27c7d, align 4
  %v1_27ca4 = add i32 %v0_27c7d, -48
  %v2_27ca4 = inttoptr i32 %v1_27ca4 to i32*
  %v3_27ca4 = load i32, i32* %v2_27ca4, align 4
  %v2_27cae = call i32 @unknown_53990(i32 %v3_27c7d, i32 %v3_27ca4)
  %v0_27cb6 = call i32 @function_27d71()
  ret i32 %v0_27cb6
}

define i32 @function_27cbb() local_unnamed_addr {
dec_label_pc_27cbb:
  %v0_27cbb = load i32, i32* @ebp, align 4
  %v1_27cbb = add i32 %v0_27cbb, -44
  %v2_27cbb = inttoptr i32 %v1_27cbb to i32*
  %v3_27cbb = load i32, i32* %v2_27cbb, align 4
  %v1_27ce2 = add i32 %v0_27cbb, -48
  %v2_27ce2 = inttoptr i32 %v1_27ce2 to i32*
  %v3_27ce2 = load i32, i32* %v2_27ce2, align 4
  %v2_27cec = call i32 @unknown_53990(i32 %v3_27cbb, i32 %v3_27ce2)
  %v0_27cf4 = call i32 @function_27d71()
  ret i32 %v0_27cf4
}

define i32 @function_27cf6() local_unnamed_addr {
dec_label_pc_27cf6:
  %v0_27cf6 = load i32, i32* @ebp, align 4
  %v1_27cf6 = add i32 %v0_27cf6, -44
  %v2_27cf6 = inttoptr i32 %v1_27cf6 to i32*
  %v3_27cf6 = load i32, i32* %v2_27cf6, align 4
  %v1_27d1b = add i32 %v0_27cf6, -48
  %v2_27d1b = inttoptr i32 %v1_27d1b to i32*
  %v3_27d1b = load i32, i32* %v2_27d1b, align 4
  %v2_27d25 = call i32 @unknown_53990(i32 %v3_27cf6, i32 %v3_27d1b)
  %v0_27d2d = call i32 @function_27d71()
  ret i32 %v0_27d2d

; uselistorder directives
  uselistorder i32 ()* @function_27d71, { 19, 18, 17, 16, 15, 14, 2, 1, 3, 0, 13, 5, 12, 11, 10, 9, 8, 7, 4, 6 }
  uselistorder i32 (i32, i32)* @unknown_53990, { 15, 14, 13, 12, 11, 10, 1, 2, 0, 9, 8, 7, 6, 5, 4, 3 }
}

define i32 @function_27d2f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_27d2f:
  %v0_27d2f = load i32, i32* @ebp, align 4
  %v1_27d2f = add i32 %v0_27d2f, -44
  %v2_27d2f = inttoptr i32 %v1_27d2f to i32*
  %v3_27d2f = load i32, i32* %v2_27d2f, align 4
  %v0_27d42 = load i32, i32* @ecx, align 4
  %v0_27d46 = load i32, i32* @edx, align 8
  %v1_27d4a = add i32 %v0_27d2f, -60
  %v2_27d4a = inttoptr i32 %v1_27d4a to i32*
  %v3_27d4a = load i32, i32* %v2_27d4a, align 4
  %v1_27d51 = add i32 %v0_27d2f, -56
  %v2_27d51 = inttoptr i32 %v1_27d51 to i32*
  %v3_27d51 = load i32, i32* %v2_27d51, align 4
  %v1_27d58 = add i32 %v0_27d2f, -52
  %v2_27d58 = inttoptr i32 %v1_27d58 to i32*
  %v3_27d58 = load i32, i32* %v2_27d58, align 4
  %v1_27d5f = add i32 %v0_27d2f, -48
  %v2_27d5f = inttoptr i32 %v1_27d5f to i32*
  %v3_27d5f = load i32, i32* %v2_27d5f, align 4
  %sext = mul i32 %v0_27d46, 16777216
  %v9_27d69 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_27d42, 16777216
  %v10_27d69 = sdiv i32 %sext1, 16777216
  %v11_27d69 = call i32 @unknown_539f0(i32 %v3_27d2f, i32 %v3_27d5f, i32 %v3_27d58, i32 %v3_27d51, i32 %v3_27d4a, i32 %v9_27d69, i32 %v10_27d69, i32 0, i32 0)
  ret i32 %v11_27d69

; uselistorder directives
  uselistorder i32 %v0_27d2f, { 1, 0, 3, 2, 4 }
}

define i32 @function_27d70(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d70:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27d71() local_unnamed_addr {
dec_label_pc_27d71:
  %v0_27d71 = load i32, i32* @ebp, align 4
  %v1_27d71 = add i32 %v0_27d71, -44
  %v2_27d71 = inttoptr i32 %v1_27d71 to i32*
  %v3_27d71 = load i32, i32* %v2_27d71, align 4
  store i32 %v3_27d71, i32* @eax, align 8
  %v1_27d74 = add i32 %v0_27d71, -28
  %v2_27d74 = inttoptr i32 %v1_27d74 to i32*
  %v3_27d74 = load i32, i32* %v2_27d74, align 4
  store i1 false, i1* @cf, align 1
  %v3_27d77 = icmp eq i32 %v3_27d74, 30
  br i1 %v3_27d77, label %bb, label %dec_label_pc_27d80

bb:                                               ; preds = %dec_label_pc_27d71
  %v1_27d7e = call i32 @function_27d85()
  br label %dec_label_pc_27d80

dec_label_pc_27d80:                               ; preds = %bb, %dec_label_pc_27d71
  %v2_27d7e = phi i32 [ %v1_27d7e, %bb ], [ %v3_27d71, %dec_label_pc_27d71 ]
  ret i32 %v2_27d7e
}

define i32 @function_27d85() local_unnamed_addr {
dec_label_pc_27d85:
  %v0_27d85 = load i32, i32* @ebp, align 4
  %v1_27d8b = inttoptr i32 %v0_27d85 to i32*
  %v2_27d8b = load i32, i32* %v1_27d8b, align 4
  store i32 %v2_27d8b, i32* @ebp, align 4
  %v0_27d8c = load i32, i32* @eax, align 8
  ret i32 %v0_27d8c
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_10shared_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail23foreign_void_shared_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9copy_intoEPKvNS_7variantISD_SH_NS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_27de0:
  ret i32 %arg7
}

define i32 @function_27e16(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e16:
  %eax.global-to-local = alloca i32, align 4
  %v0_27e16 = load i32, i32* @ebp, align 4
  %v0_27e17 = load i32, i32* @eax, align 8
  %v1_27e17 = trunc i32 %v0_27e17 to i8
  %v2_27e17 = and i8 %v1_27e17, -119
  %v8_27e17 = zext i8 %v2_27e17 to i32
  %v10_27e17 = and i32 %v0_27e17, -256
  %v11_27e17 = or i32 %v8_27e17, %v10_27e17
  store i32 %v11_27e17, i32* %eax.global-to-local, align 8
  %v1_27e19 = add i32 %v0_27e16, 2
  store i32 %v1_27e19, i32* @ebp, align 4
  %v1_27e1f = inttoptr i32 %v11_27e17 to i8*
  %v2_27e1f = load i8, i8* %v1_27e1f, align 1
  %v5_27e1f = add i8 %v2_27e1f, %v2_27e17
  store i8 %v5_27e1f, i8* %v1_27e1f, align 1
  %v0_27e21 = load i32, i32* %eax.global-to-local, align 8
  %v1_27e21 = load i32, i32* @ebp, align 4
  %v2_27e21 = add i32 %v1_27e21, -28
  %v3_27e21 = inttoptr i32 %v2_27e21 to i32*
  store i32 %v0_27e21, i32* %v3_27e21, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_27e26 = load i32, i32* @ebp, align 4
  %v1_27e26 = add i32 %v0_27e26, -48
  %v2_27e26 = inttoptr i32 %v1_27e26 to i32*
  %v3_27e26 = load i32, i32* %v2_27e26, align 4
  %tmp = icmp ult i32 %v3_27e26, 20
  br i1 %tmp, label %dec_label_pc_27e30, label %bb

bb:                                               ; preds = %dec_label_pc_27e16
  %v4_27e2a = call i32 @function_28269()
  store i32 %v4_27e2a, i32* %eax.global-to-local, align 8
  %v0_27e30.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27e30

dec_label_pc_27e30:                               ; preds = %dec_label_pc_27e16, %bb
  %v0_27e30 = phi i32 [ %v0_27e26, %dec_label_pc_27e16 ], [ %v0_27e30.pre, %bb ]
  %v1_27e30 = add i32 %v0_27e30, -48
  %v2_27e30 = inttoptr i32 %v1_27e30 to i32*
  %v3_27e30 = load i32, i32* %v2_27e30, align 4
  %v2_27e33 = mul i32 %v3_27e30, 4
  %v1_27e36 = add i32 %v2_27e33, ptrtoint (i32* @global_var_282bc.2552 to i32)
  store i32 %v1_27e36, i32* %eax.global-to-local, align 8
  %v1_27e3b = inttoptr i32 %v1_27e36 to i32*
  %v2_27e3b = load i32, i32* %v1_27e3b, align 4
  store i32 %v2_27e3b, i32* %eax.global-to-local, align 8
  ret i32 %v2_27e3b

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_27e30, { 1, 0 }
}

define i32 @function_27e5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e5e:
  %v0_27e5e = load i32, i32* @ebp, align 4
  %v1_27e5e = add i32 %v0_27e5e, -52
  %v2_27e5e = inttoptr i32 %v1_27e5e to i32*
  %v3_27e5e = load i32, i32* %v2_27e5e, align 4
  %v1_27e65 = add i32 %v0_27e5e, -44
  %v2_27e65 = inttoptr i32 %v1_27e65 to i32*
  %v3_27e65 = load i32, i32* %v2_27e65, align 4
  %v2_27e6b = call i32 @unknown_54065(i32 %v3_27e65, i32 %v3_27e5e)
  %v0_27e70 = call i32 @function_282a1()
  ret i32 %v0_27e70
}

define i32 @function_27e75() local_unnamed_addr {
dec_label_pc_27e75:
  %v0_27e7d = load i32, i32* @ebp, align 4
  %v1_27e7d = add i32 %v0_27e7d, -82
  %v2_27e7d = inttoptr i32 %v1_27e7d to i8*
  %v3_27e7d = load i8, i8* %v2_27e7d, align 1
  %v1_27e8d = add i32 %v0_27e7d, -56
  %v2_27e8d = inttoptr i32 %v1_27e8d to i32*
  %v3_27e8d = load i32, i32* %v2_27e8d, align 4
  %v1_27e94 = add i32 %v0_27e7d, -52
  %v2_27e94 = inttoptr i32 %v1_27e94 to i32*
  %v3_27e94 = load i32, i32* %v2_27e94, align 4
  %v1_27e9b = add i32 %v0_27e7d, -44
  %v2_27e9b = inttoptr i32 %v1_27e9b to i32*
  %v3_27e9b = load i32, i32* %v2_27e9b, align 4
  %v6_27ea1 = sext i8 %v3_27e7d to i32
  %v7_27ea1 = call i32 @unknown_540d2(i32 %v3_27e9b, i32 %v3_27e94, i32 %v3_27e8d, i32 0, i32 %v6_27ea1, i32 1)
  %v0_27ea6 = call i32 @function_282a1()
  ret i32 %v0_27ea6

; uselistorder directives
  uselistorder i32 %v0_27e7d, { 0, 2, 1, 3 }
}

define i32 @function_27eda(i32 %arg1) local_unnamed_addr {
dec_label_pc_27eda:
  %v0_27edc = call i32 @function_282a1()
  ret i32 %v0_27edc
}

define i32 @function_27eea(i32 %arg1) local_unnamed_addr {
dec_label_pc_27eea:
  %v0_27ef9 = load i32, i32* @ebp, align 4
  %v1_27f07 = add i32 %v0_27ef9, -44
  %v2_27f07 = inttoptr i32 %v1_27f07 to i32*
  %v3_27f07 = load i32, i32* %v2_27f07, align 4
  ret i32 %v3_27f07
}

define i32 @function_27f10(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f10:
  %v0_27f12 = call i32 @function_282a1()
  ret i32 %v0_27f12
}

define i32 @function_27f17() local_unnamed_addr {
dec_label_pc_27f17:
  %v0_27f1f = load i32, i32* @ebp, align 4
  %v1_27f36 = add i32 %v0_27f1f, -52
  %v2_27f36 = inttoptr i32 %v1_27f36 to i32*
  %v3_27f36 = load i32, i32* %v2_27f36, align 4
  %v1_27f3d = add i32 %v0_27f1f, -44
  %v2_27f3d = inttoptr i32 %v1_27f3d to i32*
  %v3_27f3d = load i32, i32* %v2_27f3d, align 4
  %v2_27f43 = call i32 @unknown_5413f(i32 %v3_27f3d, i32 %v3_27f36)
  %v0_27f48 = call i32 @function_282a1()
  ret i32 %v0_27f48

; uselistorder directives
  uselistorder i32 %v0_27f1f, { 1, 0 }
}

define i32 @function_27f4d() local_unnamed_addr {
dec_label_pc_27f4d:
  %v0_27f55 = load i32, i32* @ebp, align 4
  %v1_27f6c = add i32 %v0_27f55, -52
  %v2_27f6c = inttoptr i32 %v1_27f6c to i32*
  %v3_27f6c = load i32, i32* %v2_27f6c, align 4
  %v1_27f73 = add i32 %v0_27f55, -44
  %v2_27f73 = inttoptr i32 %v1_27f73 to i32*
  %v3_27f73 = load i32, i32* %v2_27f73, align 4
  %v2_27f79 = call i32 @unknown_5413f(i32 %v3_27f73, i32 %v3_27f6c)
  %v0_27f7e = call i32 @function_282a1()
  ret i32 %v0_27f7e

; uselistorder directives
  uselistorder i32 %v0_27f55, { 1, 0 }
}

define i32 @function_27fb4() local_unnamed_addr {
dec_label_pc_27fb4:
  %v0_27fb4 = call i32 @function_282a1()
  ret i32 %v0_27fb4
}

define i32 @function_27fbe(i32 %arg1) local_unnamed_addr {
dec_label_pc_27fbe:
  %v2_27fbe = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27fbe = load i32, i32* @eax, align 8
  %v4_27fbe = trunc i32 %v3_27fbe to i8
  %v5_27fbe = add i8 %v4_27fbe, %v2_27fbe
  %v21_27fbe = inttoptr i32 %v3_27fbe to i8*
  store i8 %v5_27fbe, i8* %v21_27fbe, align 1
  %v2_27fc0 = load i8, i8* bitcast (i32* @edi to i8*), align 8
  %v3_27fc0 = load i32, i32* @ecx, align 4
  %v4_27fc0 = trunc i32 %v3_27fc0 to i8
  %v5_27fc0 = add i8 %v4_27fc0, %v2_27fc0
  %v20_27fc0 = load i32, i32* @edi, align 8
  %v21_27fc0 = inttoptr i32 %v20_27fc0 to i8*
  store i8 %v5_27fc0, i8* %v21_27fc0, align 1
  %v0_27fc2 = load i32, i32* @edx, align 8
  %v1_27fc2 = and i32 %v0_27fc2, -65281
  %v2_27fc2 = or i32 %v1_27fc2, 17664
  store i32 %v2_27fc2, i32* @edx, align 8
  %v0_27fd1 = load i32, i32* @ebp, align 4
  %v1_27fd8 = add i32 %v0_27fd1, -52
  %v2_27fd8 = inttoptr i32 %v1_27fd8 to i32*
  %v3_27fd8 = load i32, i32* %v2_27fd8, align 4
  %v1_27fdf = add i32 %v0_27fd1, -44
  %v2_27fdf = inttoptr i32 %v1_27fdf to i32*
  %v3_27fdf = load i32, i32* %v2_27fdf, align 4
  %v2_27fe5 = call i32 @unknown_5413f(i32 %v3_27fdf, i32 %v3_27fd8)
  %v0_27fea = call i32 @function_282a1()
  ret i32 %v0_27fea
}

define i32 @function_2801e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2801e:
  %v0_28020 = call i32 @function_282a1()
  ret i32 %v0_28020
}

define i32 @function_28056(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28056:
  %v0_28056 = call i32 @function_282a1()
  ret i32 %v0_28056
}

define i32 @function_2805b() local_unnamed_addr {
dec_label_pc_2805b:
  %v0_28063 = load i32, i32* @ebp, align 4
  %v1_2807a = add i32 %v0_28063, -52
  %v2_2807a = inttoptr i32 %v1_2807a to i32*
  %v3_2807a = load i32, i32* %v2_2807a, align 4
  %v1_28081 = add i32 %v0_28063, -44
  %v2_28081 = inttoptr i32 %v1_28081 to i32*
  %v3_28081 = load i32, i32* %v2_28081, align 4
  %v2_28087 = call i32 @unknown_5413f(i32 %v3_28081, i32 %v3_2807a)
  %v0_2808c = call i32 @function_282a1()
  ret i32 %v0_2808c

; uselistorder directives
  uselistorder i32 %v0_28063, { 1, 0 }
}

define i32 @function_280a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_280a4:
  %v0_280a4 = load i32, i32* @eax, align 8
  %v1_280a4 = trunc i32 %v0_280a4 to i8
  %v1_280a6 = inttoptr i32 %v0_280a4 to i8*
  %v2_280a6 = load i8, i8* %v1_280a6, align 1
  %v5_280a6 = add i8 %v2_280a6, %v1_280a4
  store i8 %v5_280a6, i8* %v1_280a6, align 1
  %v0_280a8 = load i32, i32* @ebx, align 4
  %v1_280a8 = add i32 %v0_280a8, 1149880389
  %v2_280a8 = inttoptr i32 %v1_280a8 to i8*
  %v3_280a8 = load i8, i8* %v2_280a8, align 1
  %v4_280a8 = load i32, i32* @ecx, align 4
  %v5_280a8 = trunc i32 %v4_280a8 to i8
  %v6_280a8 = add i8 %v5_280a8, %v3_280a8
  store i8 %v6_280a8, i8* %v2_280a8, align 1
  %v0_280b0 = load i32, i32* @ebp, align 4
  %v1_280b0 = add i32 %v0_280b0, -52
  %v2_280b0 = inttoptr i32 %v1_280b0 to i32*
  %v3_280b0 = load i32, i32* %v2_280b0, align 4
  %v1_280b7 = add i32 %v0_280b0, -44
  %v2_280b7 = inttoptr i32 %v1_280b7 to i32*
  %v3_280b7 = load i32, i32* %v2_280b7, align 4
  %v2_280bd = call i32 @unknown_5413f(i32 %v3_280b7, i32 %v3_280b0)
  %v0_280c2 = call i32 @function_282a1()
  ret i32 %v0_280c2
}

define i32 @function_280c7() local_unnamed_addr {
dec_label_pc_280c7:
  %v0_280cf = load i32, i32* @ebp, align 4
  %v1_280e6 = add i32 %v0_280cf, -52
  %v2_280e6 = inttoptr i32 %v1_280e6 to i32*
  %v3_280e6 = load i32, i32* %v2_280e6, align 4
  %v1_280ed = add i32 %v0_280cf, -44
  %v2_280ed = inttoptr i32 %v1_280ed to i32*
  %v3_280ed = load i32, i32* %v2_280ed, align 4
  %v2_280f3 = call i32 @unknown_5413f(i32 %v3_280ed, i32 %v3_280e6)
  %v0_280f8 = call i32 @function_282a1()
  ret i32 %v0_280f8

; uselistorder directives
  uselistorder i32 %v0_280cf, { 1, 0 }
}

define i32 @function_28110(i32 %arg1) local_unnamed_addr {
dec_label_pc_28110:
  %v0_28110 = load i32, i32* @eax, align 8
  %v1_28110 = trunc i32 %v0_28110 to i8
  %v1_28112 = inttoptr i32 %v0_28110 to i8*
  %v2_28112 = load i8, i8* %v1_28112, align 1
  %v5_28112 = add i8 %v2_28112, %v1_28110
  store i8 %v5_28112, i8* %v1_28112, align 1
  %v0_28114 = load i32, i32* @ebx, align 4
  %v1_28114 = add i32 %v0_28114, 1149880389
  %v2_28114 = inttoptr i32 %v1_28114 to i8*
  %v3_28114 = load i8, i8* %v2_28114, align 1
  %v4_28114 = load i32, i32* @ecx, align 4
  %v5_28114 = trunc i32 %v4_28114 to i8
  %v6_28114 = add i8 %v5_28114, %v3_28114
  store i8 %v6_28114, i8* %v2_28114, align 1
  %v0_2811c = load i32, i32* @ebp, align 4
  %v1_2811c = add i32 %v0_2811c, -52
  %v2_2811c = inttoptr i32 %v1_2811c to i32*
  %v3_2811c = load i32, i32* %v2_2811c, align 4
  %v1_28123 = add i32 %v0_2811c, -44
  %v2_28123 = inttoptr i32 %v1_28123 to i32*
  %v3_28123 = load i32, i32* %v2_28123, align 4
  %v2_28129 = call i32 @unknown_5413f(i32 %v3_28123, i32 %v3_2811c)
  ret i32 %v2_28129

; uselistorder directives
  uselistorder i32 1149880389, { 1, 0 }
}

define i32 @function_2812f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2812f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2812f = load i32, i32* @edx, align 8
  %v1_2812f = trunc i32 %v0_2812f to i16
  %v4_2812f = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_2812f, i8 %v4_2812f)
  %v2_28130 = load i32, i32* @eax, align 8
  %v4_28130 = mul i32 %v2_28130, 2
  %v21_28130 = inttoptr i32 %v2_28130 to i32*
  store i32 %v4_28130, i32* %v21_28130, align 4
  %v3_28132 = load i32, i32* @eax, align 8
  %v11_28135 = and i32 %v3_28132, or (i32 zext (i8 ptrtoint (i32* @global_var_14.2373 to i8) to i32), i32 -256)
  store i32 %v11_28135, i32* %eax.global-to-local, align 8
  %v1_28137 = inttoptr i32 %v11_28135 to i32*
  %v2_28137 = load i32, i32* %v1_28137, align 4
  %v4_28137 = add i32 %v2_28137, %v11_28135
  store i32 %v4_28137, i32* %v1_28137, align 4
  %v0_28139 = load i32, i32* %eax.global-to-local, align 8
  %v1_28139 = inttoptr i32 %v0_28139 to i8*
  %v2_28139 = load i8, i8* %v1_28139, align 1
  %v4_28139 = trunc i32 %v0_28139 to i8
  %v5_28139 = add i8 %v2_28139, %v4_28139
  store i8 %v5_28139, i8* %v1_28139, align 1
  %v0_2813b = load i32, i32* @ebp, align 4
  %v1_2813b = add i32 %v0_2813b, -69
  %v2_2813b = inttoptr i32 %v1_2813b to i8*
  %v3_2813b = load i8, i8* %v2_2813b, align 1
  %v4_2813b = zext i8 %v3_2813b to i32
  store i32 %v4_2813b, i32* %eax.global-to-local, align 8
  ret i32 %v4_2813b

; uselistorder directives
  uselistorder i32 %v11_28135, { 0, 2, 1 }
  uselistorder i32 %v2_28130, { 1, 0 }
}

define i32 @function_28142(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28142:
  %eax.global-to-local = alloca i32, align 4
  %v0_28142 = load i32, i32* @ebx, align 4
  %v1_28142 = lshr i32 %v0_28142, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_28142 = load i32, i32* @eax, align 8
  %v4_28142 = trunc i32 %v3_28142 to i8
  %v5_28142 = load i1, i1* @cf, align 1
  %v6_28142 = zext i1 %v5_28142 to i32
  %v7_28142 = add i32 %v1_28142, %v3_28142
  %v8_28142 = add i32 %v7_28142, %v6_28142
  %v29_28142 = mul i32 %v8_28142, 256
  %v31_28142 = and i32 %v29_28142, 65280
  %v32_28142 = and i32 %v0_28142, -65281
  %v33_28142 = or i32 %v31_28142, %v32_28142
  store i32 %v33_28142, i32* @ebx, align 4
  %v2_28145 = and i8 %v4_28142, ptrtoint (i32* @global_var_c.2390 to i8)
  %v8_28145 = zext i8 %v2_28145 to i32
  %v10_28145 = and i32 %v3_28142, -256
  %v11_28145 = or i32 %v8_28145, %v10_28145
  store i32 %v11_28145, i32* %eax.global-to-local, align 8
  %v1_28147 = inttoptr i32 %v11_28145 to i8*
  %v2_28147 = load i8, i8* %v1_28147, align 4
  %v5_28147 = add i8 %v2_28147, %v2_28145
  store i8 %v5_28147, i8* %v1_28147, align 4
  %v0_28149 = load i32, i32* %eax.global-to-local, align 8
  %v1_28149 = inttoptr i32 %v0_28149 to i8*
  %v2_28149 = load i8, i8* %v1_28149, align 1
  %v4_28149 = trunc i32 %v0_28149 to i8
  %v5_28149 = add i8 %v2_28149, %v4_28149
  store i8 %v5_28149, i8* %v1_28149, align 1
  %v0_2814b = load i32, i32* @ebp, align 4
  %v1_2814b = add i32 %v0_2814b, -56
  %v2_2814b = inttoptr i32 %v1_2814b to i32*
  %v3_2814b = load i32, i32* %v2_2814b, align 4
  store i32 %v3_2814b, i32* %eax.global-to-local, align 8
  %v1_28152 = add i32 %v0_2814b, -52
  %v2_28152 = inttoptr i32 %v1_28152 to i32*
  %v3_28152 = load i32, i32* %v2_28152, align 4
  store i32 %v3_28152, i32* %eax.global-to-local, align 8
  %v1_28159 = add i32 %v0_2814b, -44
  %v2_28159 = inttoptr i32 %v1_28159 to i32*
  %v3_28159 = load i32, i32* %v2_28159, align 4
  store i32 %v3_28159, i32* %eax.global-to-local, align 8
  %v2_2815f = call i32 @unknown_5413f(i32 %v3_28159, i32 %v3_28152)
  store i32 %v2_2815f, i32* %eax.global-to-local, align 8
  %v0_28164 = call i32 @function_282a1()
  store i32 %v0_28164, i32* %eax.global-to-local, align 8
  ret i32 %v0_28164

; uselistorder directives
  uselistorder i32 %v3_28142, { 1, 0, 2 }
}

define i32 @function_28169() local_unnamed_addr {
dec_label_pc_28169:
  %v0_28171 = load i32, i32* @ebp, align 4
  %v1_28188 = add i32 %v0_28171, -52
  %v2_28188 = inttoptr i32 %v1_28188 to i32*
  %v3_28188 = load i32, i32* %v2_28188, align 4
  %v1_2818f = add i32 %v0_28171, -44
  %v2_2818f = inttoptr i32 %v1_2818f to i32*
  %v3_2818f = load i32, i32* %v2_2818f, align 4
  %v2_28195 = call i32 @unknown_5413f(i32 %v3_2818f, i32 %v3_28188)
  %v0_2819a = call i32 @function_282a1()
  ret i32 %v0_2819a

; uselistorder directives
  uselistorder i32 %v0_28171, { 1, 0 }
}

define i32 @function_2819f() local_unnamed_addr {
dec_label_pc_2819f:
  %v0_281a7 = load i32, i32* @ebp, align 4
  %v1_281be = add i32 %v0_281a7, -52
  %v2_281be = inttoptr i32 %v1_281be to i32*
  %v3_281be = load i32, i32* %v2_281be, align 4
  %v1_281c5 = add i32 %v0_281a7, -44
  %v2_281c5 = inttoptr i32 %v1_281c5 to i32*
  %v3_281c5 = load i32, i32* %v2_281c5, align 4
  %v2_281cb = call i32 @unknown_5413f(i32 %v3_281c5, i32 %v3_281be)
  %v0_281d0 = call i32 @function_282a1()
  ret i32 %v0_281d0

; uselistorder directives
  uselistorder i32 %v0_281a7, { 1, 0 }
}

define i32 @function_28205() local_unnamed_addr {
dec_label_pc_28205:
  %eax.global-to-local = alloca i32, align 4
  %v2_28206 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_28206 = load i32, i32* @eax, align 8
  %v4_28206 = trunc i32 %v3_28206 to i8
  %v5_28206 = add i8 %v4_28206, %v2_28206
  %v21_28206 = inttoptr i32 %v3_28206 to i8*
  store i8 %v5_28206, i8* %v21_28206, align 1
  %v3_28208 = load i32, i32* @eax, align 8
  %v11_2820b = and i32 %v3_28208, or (i32 zext (i8 ptrtoint (i32* @global_var_14.2373 to i8) to i32), i32 -256)
  store i32 %v11_2820b, i32* %eax.global-to-local, align 8
  %v1_2820d = inttoptr i32 %v11_2820b to i32*
  %v2_2820d = load i32, i32* %v1_2820d, align 4
  %v4_2820d = add i32 %v2_2820d, %v11_2820b
  store i32 %v4_2820d, i32* %v1_2820d, align 4
  %v0_2820f = load i32, i32* %eax.global-to-local, align 8
  %v1_2820f = inttoptr i32 %v0_2820f to i8*
  %v2_2820f = load i8, i8* %v1_2820f, align 1
  %v4_2820f = trunc i32 %v0_2820f to i8
  %v5_2820f = add i8 %v2_2820f, %v4_2820f
  store i8 %v5_2820f, i8* %v1_2820f, align 1
  %v0_28211 = load i32, i32* @esi, align 4
  store i32 %v0_28211, i32* %eax.global-to-local, align 8
  %v0_2821f = load i32, i32* @ebp, align 4
  %v1_2821f = add i32 %v0_2821f, -56
  %v2_2821f = inttoptr i32 %v1_2821f to i32*
  %v3_2821f = load i32, i32* %v2_2821f, align 4
  store i32 %v3_2821f, i32* %eax.global-to-local, align 8
  %v1_28226 = add i32 %v0_2821f, -52
  %v2_28226 = inttoptr i32 %v1_28226 to i32*
  %v3_28226 = load i32, i32* %v2_28226, align 4
  store i32 %v3_28226, i32* %eax.global-to-local, align 8
  %v1_2822d = add i32 %v0_2821f, -44
  %v2_2822d = inttoptr i32 %v1_2822d to i32*
  %v3_2822d = load i32, i32* %v2_2822d, align 4
  store i32 %v3_2822d, i32* %eax.global-to-local, align 8
  %v2_28233 = call i32 @unknown_5413f(i32 %v3_2822d, i32 %v3_28226)
  store i32 %v2_28233, i32* %eax.global-to-local, align 8
  %v0_28238 = call i32 @function_282a1()
  store i32 %v0_28238, i32* %eax.global-to-local, align 8
  ret i32 %v0_28238

; uselistorder directives
  uselistorder i32 %v11_2820b, { 0, 2, 1 }
}

define i32 @function_2823a() local_unnamed_addr {
dec_label_pc_2823a:
  %v0_2824e = load i32, i32* @ebp, align 4
  %v1_28255 = add i32 %v0_2824e, -52
  %v2_28255 = inttoptr i32 %v1_28255 to i32*
  %v3_28255 = load i32, i32* %v2_28255, align 4
  %v1_2825c = add i32 %v0_2824e, -44
  %v2_2825c = inttoptr i32 %v1_2825c to i32*
  %v3_2825c = load i32, i32* %v2_2825c, align 4
  %v2_28262 = call i32 @unknown_5413f(i32 %v3_2825c, i32 %v3_28255)
  %v0_28267 = call i32 @function_282a1()
  ret i32 %v0_28267

; uselistorder directives
  uselistorder i32 ()* @function_282a1, { 17, 9, 16, 15, 6, 14, 7, 13, 4, 0, 5, 8, 12, 11, 2, 3, 10, 1 }
  uselistorder i32 (i32, i32)* @unknown_5413f, { 11, 4, 10, 9, 1, 2, 8, 3, 7, 0, 6, 5 }
}

define i32 @function_28269() local_unnamed_addr {
dec_label_pc_28269:
  %v0_28279 = load i32, i32* @ecx, align 4
  %v0_2827d = load i32, i32* @edx, align 8
  %v0_28281 = load i32, i32* @ebp, align 4
  %v1_28281 = add i32 %v0_28281, -56
  %v2_28281 = inttoptr i32 %v1_28281 to i32*
  %v3_28281 = load i32, i32* %v2_28281, align 4
  %v1_28288 = add i32 %v0_28281, -52
  %v2_28288 = inttoptr i32 %v1_28288 to i32*
  %v3_28288 = load i32, i32* %v2_28288, align 4
  %v1_2828f = add i32 %v0_28281, -48
  %v2_2828f = inttoptr i32 %v1_2828f to i32*
  %v3_2828f = load i32, i32* %v2_2828f, align 4
  %v1_28296 = add i32 %v0_28281, -44
  %v2_28296 = inttoptr i32 %v1_28296 to i32*
  %v3_28296 = load i32, i32* %v2_28296, align 4
  %sext = mul i32 %v0_2827d, 16777216
  %v8_2829c = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_28279, 16777216
  %v9_2829c = sdiv i32 %sext1, 16777216
  %v10_2829c = call i32 @unknown_54199(i32 %v3_28296, i32 %v3_2828f, i32 %v3_28288, i32 %v3_28281, i32 %v8_2829c, i32 %v9_2829c, i32 0, i32 0)
  ret i32 %v10_2829c

; uselistorder directives
  uselistorder i32 %v0_28281, { 1, 0, 2, 3 }
}

define i32 @function_282a1() local_unnamed_addr {
dec_label_pc_282a1:
  %v0_282a1 = load i32, i32* @ebp, align 4
  %v1_282a1 = add i32 %v0_282a1, -28
  %v2_282a1 = inttoptr i32 %v1_282a1 to i32*
  %v3_282a1 = load i32, i32* %v2_282a1, align 4
  %v2_282a4 = xor i32 %v3_282a1, 30
  %v3_282a4 = icmp eq i32 %v2_282a4, 0
  store i32 %v2_282a4, i32* @eax, align 8
  br i1 %v3_282a4, label %bb, label %dec_label_pc_282ad

bb:                                               ; preds = %dec_label_pc_282a1
  %v1_282ab = call i32 @function_282b2()
  br label %dec_label_pc_282ad

dec_label_pc_282ad:                               ; preds = %bb, %dec_label_pc_282a1
  %v2_282ab = phi i32 [ %v1_282ab, %bb ], [ %v2_282a4, %dec_label_pc_282a1 ]
  ret i32 %v2_282ab
}

define i32 @function_282b2() local_unnamed_addr {
dec_label_pc_282b2:
  %v0_282b9 = load i32, i32* @eax, align 8
  ret i32 %v0_282b9
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_10shared_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail23foreign_void_shared_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9destroyerEPvNS_7variantISD_SH_NS1_5void_ESR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_E18has_fallback_type_EEENT1_11result_typeEiiRSU_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2830c:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_2835c, label %bb

bb:                                               ; preds = %dec_label_pc_2830c
  %sext = mul i32 %arg6, 16777216
  %v12_28356 = sdiv i32 %sext, 16777216
  %v13_28356 = sext i8 %arg5 to i32
  %v14_28356 = call i32 @function_28795(i32 %arg8, i32 %arg7, i32 %v12_28356, i32 %v13_28356, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2835c

dec_label_pc_2835c:                               ; preds = %dec_label_pc_2830c, %bb
  %v2_2835f = mul i32 %arg2, 4
  %v1_28362 = add i32 %v2_2835f, ptrtoint (i32* @global_var_287e8.2554 to i32)
  %v1_28367 = inttoptr i32 %v1_28362 to i32*
  %v2_28367 = load i32, i32* %v1_28367, align 4
  ret i32 %v2_28367

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2835c, { 1, 0 }
}

define i32 @function_2836b() local_unnamed_addr {
dec_label_pc_2836b:
  %v0_28373 = load i32, i32* @ebp, align 4
  %v1_28373 = add i32 %v0_28373, -83
  %v2_28373 = inttoptr i32 %v1_28373 to i8*
  %v3_28373 = load i8, i8* %v2_28373, align 1
  %v1_28383 = add i32 %v0_28373, -56
  %v2_28383 = inttoptr i32 %v1_28383 to i32*
  %v3_28383 = load i32, i32* %v2_28383, align 4
  %v1_2838a = add i32 %v0_28373, -52
  %v2_2838a = inttoptr i32 %v1_2838a to i32*
  %v3_2838a = load i32, i32* %v2_2838a, align 4
  %v1_28391 = add i32 %v0_28373, -44
  %v2_28391 = inttoptr i32 %v1_28391 to i32*
  %v3_28391 = load i32, i32* %v2_28391, align 4
  %v6_28397 = sext i8 %v3_28373 to i32
  %v7_28397 = call i32 @unknown_5472c(i32 %v3_28391, i32 %v3_2838a, i32 %v3_28383, i32 0, i32 %v6_28397, i32 1)
  %v0_2839c = call i32 @function_287cd()
  ret i32 %v0_2839c

; uselistorder directives
  uselistorder i32 %v0_28373, { 0, 2, 1, 3 }
}

define i32 @function_283cf() local_unnamed_addr {
dec_label_pc_283cf:
  %eax.global-to-local = alloca i32, align 4
  %v0_283cf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_283cf
}

define i32 @function_283d3() local_unnamed_addr {
dec_label_pc_283d3:
  %eax.global-to-local = alloca i32, align 4
  %v3_283d6 = load i32, i32* @eax, align 8
  %v11_283d9 = and i32 %v3_283d6, or (i32 zext (i8 ptrtoint (i32* @global_var_14.2373 to i8) to i32), i32 -256)
  store i32 %v11_283d9, i32* %eax.global-to-local, align 8
  %v1_283db = inttoptr i32 %v11_283d9 to i32*
  %v2_283db = load i32, i32* %v1_283db, align 4
  %v4_283db = add i32 %v2_283db, %v11_283d9
  store i32 %v4_283db, i32* %v1_283db, align 4
  %v0_283dd = load i32, i32* %eax.global-to-local, align 8
  %v1_283dd = inttoptr i32 %v0_283dd to i8*
  %v2_283dd = load i8, i8* %v1_283dd, align 1
  %v4_283dd = trunc i32 %v0_283dd to i8
  %v5_283dd = add i8 %v2_283dd, %v4_283dd
  store i8 %v5_283dd, i8* %v1_283dd, align 1
  %v0_283df = load i32, i32* @ebp, align 4
  %v1_283df = add i32 %v0_283df, -81
  %v2_283df = inttoptr i32 %v1_283df to i8*
  %v3_283df = load i8, i8* %v2_283df, align 1
  %v4_283df = zext i8 %v3_283df to i32
  store i32 %v4_283df, i32* %eax.global-to-local, align 8
  %v1_283ef = add i32 %v0_283df, -56
  %v2_283ef = inttoptr i32 %v1_283ef to i32*
  %v3_283ef = load i32, i32* %v2_283ef, align 4
  store i32 %v3_283ef, i32* %eax.global-to-local, align 8
  %v1_283f6 = add i32 %v0_283df, -52
  %v2_283f6 = inttoptr i32 %v1_283f6 to i32*
  %v3_283f6 = load i32, i32* %v2_283f6, align 4
  store i32 %v3_283f6, i32* %eax.global-to-local, align 8
  %v1_283fd = add i32 %v0_283df, -44
  %v2_283fd = inttoptr i32 %v1_283fd to i32*
  %v3_283fd = load i32, i32* %v2_283fd, align 4
  store i32 %v3_283fd, i32* %eax.global-to-local, align 8
  %v1_28403 = call i32 @unknown_54806(i32 %v3_283fd)
  store i32 %v1_28403, i32* %eax.global-to-local, align 8
  %v0_28408 = call i32 @function_287cd()
  store i32 %v0_28408, i32* %eax.global-to-local, align 8
  ret i32 %v0_28408

; uselistorder directives
  uselistorder i32 %v0_283df, { 1, 0, 2, 3 }
  uselistorder i32 %v11_283d9, { 0, 2, 1 }
}

define i32 @function_2840d() local_unnamed_addr {
dec_label_pc_2840d:
  %v0_28415 = load i32, i32* @ebp, align 4
  %v1_28433 = add i32 %v0_28415, -44
  %v2_28433 = inttoptr i32 %v1_28433 to i32*
  %v3_28433 = load i32, i32* %v2_28433, align 4
  %v1_28439 = call i32 @unknown_54806(i32 %v3_28433)
  %v0_2843e = call i32 @function_287cd()
  ret i32 %v0_2843e
}

define i32 @function_28443() local_unnamed_addr {
dec_label_pc_28443:
  %v0_2844b = load i32, i32* @ebp, align 4
  %v1_28469 = add i32 %v0_2844b, -44
  %v2_28469 = inttoptr i32 %v1_28469 to i32*
  %v3_28469 = load i32, i32* %v2_28469, align 4
  %v1_2846f = call i32 @unknown_54806(i32 %v3_28469)
  %v0_28474 = call i32 @function_287cd()
  ret i32 %v0_28474
}

define i32 @function_28497(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28497:
  %v0_28497 = load i32, i32* @ebx, align 4
  %v1_28497 = add i32 %v0_28497, 1149881413
  %v2_28497 = inttoptr i32 %v1_28497 to i8*
  %v3_28497 = load i8, i8* %v2_28497, align 1
  %v4_28497 = load i32, i32* @ecx, align 4
  %v5_28497 = trunc i32 %v4_28497 to i8
  %v6_28497 = or i8 %v5_28497, %v3_28497
  store i8 %v6_28497, i8* %v2_28497, align 1
  %v0_2849f = load i32, i32* @ebp, align 4
  %v1_2849f = add i32 %v0_2849f, -44
  %v2_2849f = inttoptr i32 %v1_2849f to i32*
  %v3_2849f = load i32, i32* %v2_2849f, align 4
  %v1_284a5 = call i32 @unknown_54806(i32 %v3_2849f)
  %v0_284aa = call i32 @function_287cd()
  ret i32 %v0_284aa
}

define i32 @function_284af() local_unnamed_addr {
dec_label_pc_284af:
  %v0_284b7 = load i32, i32* @ebp, align 4
  %v1_284d5 = add i32 %v0_284b7, -44
  %v2_284d5 = inttoptr i32 %v1_284d5 to i32*
  %v3_284d5 = load i32, i32* %v2_284d5, align 4
  %v1_284db = call i32 @unknown_54806(i32 %v3_284d5)
  %v0_284e0 = call i32 @function_287cd()
  ret i32 %v0_284e0
}

define i32 @function_284e5() local_unnamed_addr {
dec_label_pc_284e5:
  %v0_284ed = load i32, i32* @ebp, align 4
  %v1_2850b = add i32 %v0_284ed, -44
  %v2_2850b = inttoptr i32 %v1_2850b to i32*
  %v3_2850b = load i32, i32* %v2_2850b, align 4
  %v1_28511 = call i32 @unknown_54806(i32 %v3_2850b)
  %v0_28516 = call i32 @function_287cd()
  ret i32 %v0_28516
}

define i32 @function_2851b() local_unnamed_addr {
dec_label_pc_2851b:
  %v0_28523 = load i32, i32* @ebp, align 4
  %v1_28541 = add i32 %v0_28523, -44
  %v2_28541 = inttoptr i32 %v1_28541 to i32*
  %v3_28541 = load i32, i32* %v2_28541, align 4
  %v1_28547 = call i32 @unknown_54806(i32 %v3_28541)
  %v0_2854c = call i32 @function_287cd()
  ret i32 %v0_2854c
}

define i32 @function_28551() local_unnamed_addr {
dec_label_pc_28551:
  %v0_28559 = load i32, i32* @ebp, align 4
  %v1_28577 = add i32 %v0_28559, -44
  %v2_28577 = inttoptr i32 %v1_28577 to i32*
  %v3_28577 = load i32, i32* %v2_28577, align 4
  %v1_2857d = call i32 @unknown_54806(i32 %v3_28577)
  %v0_28582 = call i32 @function_287cd()
  ret i32 %v0_28582
}

define i32 @function_28587() local_unnamed_addr {
dec_label_pc_28587:
  %v0_2858f = load i32, i32* @ebp, align 4
  %v1_285ad = add i32 %v0_2858f, -44
  %v2_285ad = inttoptr i32 %v1_285ad to i32*
  %v3_285ad = load i32, i32* %v2_285ad, align 4
  %v1_285b3 = call i32 @unknown_54806(i32 %v3_285ad)
  %v0_285b8 = call i32 @function_287cd()
  ret i32 %v0_285b8
}

define i32 @function_285bd() local_unnamed_addr {
dec_label_pc_285bd:
  %v0_285c5 = load i32, i32* @ebp, align 4
  %v1_285e3 = add i32 %v0_285c5, -44
  %v2_285e3 = inttoptr i32 %v1_285e3 to i32*
  %v3_285e3 = load i32, i32* %v2_285e3, align 4
  %v1_285e9 = call i32 @unknown_54806(i32 %v3_285e3)
  %v0_285ee = call i32 @function_287cd()
  ret i32 %v0_285ee
}

define i32 @function_285f3() local_unnamed_addr {
dec_label_pc_285f3:
  %v0_285fb = load i32, i32* @ebp, align 4
  %v1_28619 = add i32 %v0_285fb, -44
  %v2_28619 = inttoptr i32 %v1_28619 to i32*
  %v3_28619 = load i32, i32* %v2_28619, align 4
  %v1_2861f = call i32 @unknown_54806(i32 %v3_28619)
  %v0_28624 = call i32 @function_287cd()
  ret i32 %v0_28624
}

define i32 @function_2862b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2862b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2862b = load i32, i32* @eax, align 8
  %v11_2862b = and i32 %v0_2862b, or (i32 zext (i8 ptrtoint (i32* @global_var_14.2373 to i8) to i32), i32 -256)
  store i32 %v11_2862b, i32* %eax.global-to-local, align 8
  %v1_2862d = inttoptr i32 %v11_2862b to i32*
  %v2_2862d = load i32, i32* %v1_2862d, align 4
  %v4_2862d = add i32 %v2_2862d, %v11_2862b
  store i32 %v4_2862d, i32* %v1_2862d, align 4
  %v0_2862f = load i32, i32* %eax.global-to-local, align 8
  %v1_2862f = inttoptr i32 %v0_2862f to i8*
  %v2_2862f = load i8, i8* %v1_2862f, align 1
  %v4_2862f = trunc i32 %v0_2862f to i8
  %v5_2862f = add i8 %v2_2862f, %v4_2862f
  store i8 %v5_2862f, i8* %v1_2862f, align 1
  %v0_28631 = load i32, i32* @ebp, align 4
  %v1_28631 = add i32 %v0_28631, -70
  %v2_28631 = inttoptr i32 %v1_28631 to i8*
  %v3_28631 = load i8, i8* %v2_28631, align 1
  %v4_28631 = zext i8 %v3_28631 to i32
  store i32 %v4_28631, i32* %eax.global-to-local, align 8
  %v1_28641 = add i32 %v0_28631, -56
  %v2_28641 = inttoptr i32 %v1_28641 to i32*
  %v3_28641 = load i32, i32* %v2_28641, align 4
  store i32 %v3_28641, i32* %eax.global-to-local, align 8
  %v1_28648 = add i32 %v0_28631, -52
  %v2_28648 = inttoptr i32 %v1_28648 to i32*
  %v3_28648 = load i32, i32* %v2_28648, align 4
  store i32 %v3_28648, i32* %eax.global-to-local, align 8
  %v1_2864f = add i32 %v0_28631, -44
  %v2_2864f = inttoptr i32 %v1_2864f to i32*
  %v3_2864f = load i32, i32* %v2_2864f, align 4
  store i32 %v3_2864f, i32* %eax.global-to-local, align 8
  %v1_28655 = call i32 @unknown_54806(i32 %v3_2864f)
  store i32 %v1_28655, i32* %eax.global-to-local, align 8
  %v0_2865a = call i32 @function_287cd()
  store i32 %v0_2865a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2865a

; uselistorder directives
  uselistorder i32 %v0_28631, { 1, 0, 2, 3 }
  uselistorder i32 %v11_2862b, { 0, 2, 1 }
}

define i32 @function_2865f() local_unnamed_addr {
dec_label_pc_2865f:
  %v0_28667 = load i32, i32* @ebp, align 4
  %v1_28685 = add i32 %v0_28667, -44
  %v2_28685 = inttoptr i32 %v1_28685 to i32*
  %v3_28685 = load i32, i32* %v2_28685, align 4
  %v1_2868b = call i32 @unknown_54806(i32 %v3_28685)
  %v0_28690 = call i32 @function_287cd()
  ret i32 %v0_28690
}

define i32 @function_28695() local_unnamed_addr {
dec_label_pc_28695:
  %v0_2869d = load i32, i32* @ebp, align 4
  %v1_286bb = add i32 %v0_2869d, -44
  %v2_286bb = inttoptr i32 %v1_286bb to i32*
  %v3_286bb = load i32, i32* %v2_286bb, align 4
  %v1_286c1 = call i32 @unknown_54806(i32 %v3_286bb)
  %v0_286c6 = call i32 @function_287cd()
  ret i32 %v0_286c6
}

define i32 @function_286cb() local_unnamed_addr {
dec_label_pc_286cb:
  %v0_286d3 = load i32, i32* @ebp, align 4
  %v1_286f1 = add i32 %v0_286d3, -44
  %v2_286f1 = inttoptr i32 %v1_286f1 to i32*
  %v3_286f1 = load i32, i32* %v2_286f1, align 4
  %v1_286f7 = call i32 @unknown_54806(i32 %v3_286f1)
  %v0_286fc = call i32 @function_287cd()
  ret i32 %v0_286fc
}

define i32 @function_28701() local_unnamed_addr {
dec_label_pc_28701:
  %v0_28717 = load i32, i32* @ebp, align 4
  %v1_28725 = add i32 %v0_28717, -44
  %v2_28725 = inttoptr i32 %v1_28725 to i32*
  %v3_28725 = load i32, i32* %v2_28725, align 4
  %v1_2872b = call i32 @unknown_54806(i32 %v3_28725)
  %v0_28730 = call i32 @function_287cd()
  ret i32 %v0_28730
}

define i32 @function_2874e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2874e:
  %v0_28752 = load i32, i32* @ebp, align 4
  %v1_28759 = add i32 %v0_28752, -44
  %v2_28759 = inttoptr i32 %v1_28759 to i32*
  %v3_28759 = load i32, i32* %v2_28759, align 4
  %v1_2875f = call i32 @unknown_54806(i32 %v3_28759)
  %v0_28764 = call i32 @function_287cd()
  ret i32 %v0_28764
}

define i32 @function_28766() local_unnamed_addr {
dec_label_pc_28766:
  %v0_2877a = load i32, i32* @ebp, align 4
  %v1_28788 = add i32 %v0_2877a, -44
  %v2_28788 = inttoptr i32 %v1_28788 to i32*
  %v3_28788 = load i32, i32* %v2_28788, align 4
  %v1_2878e = call i32 @unknown_54806(i32 %v3_28788)
  %v0_28793 = call i32 @function_287cd()
  ret i32 %v0_28793

; uselistorder directives
  uselistorder i32 ()* @function_287cd, { 18, 0, 17, 16, 15, 14, 2, 13, 12, 11, 10, 9, 8, 7, 1, 6, 5, 3, 4 }
  uselistorder i32 (i32)* @unknown_54806, { 17, 0, 16, 15, 14, 13, 2, 12, 11, 10, 9, 8, 7, 6, 1, 5, 4, 3 }
}

define i32 @function_28795(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_28795:
  %v0_287a5 = load i32, i32* @ecx, align 4
  %v0_287a9 = load i32, i32* @edx, align 8
  %v0_287ad = load i32, i32* @ebp, align 4
  %v1_287ad = add i32 %v0_287ad, -56
  %v2_287ad = inttoptr i32 %v1_287ad to i32*
  %v3_287ad = load i32, i32* %v2_287ad, align 4
  %v1_287b4 = add i32 %v0_287ad, -52
  %v2_287b4 = inttoptr i32 %v1_287b4 to i32*
  %v3_287b4 = load i32, i32* %v2_287b4, align 4
  %v1_287bb = add i32 %v0_287ad, -48
  %v2_287bb = inttoptr i32 %v1_287bb to i32*
  %v3_287bb = load i32, i32* %v2_287bb, align 4
  %v1_287c2 = add i32 %v0_287ad, -44
  %v2_287c2 = inttoptr i32 %v1_287c2 to i32*
  %v3_287c2 = load i32, i32* %v2_287c2, align 4
  %sext = mul i32 %v0_287a9, 16777216
  %v8_287c8 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_287a5, 16777216
  %v9_287c8 = sdiv i32 %sext1, 16777216
  %v10_287c8 = call i32 @unknown_54860(i32 %v3_287c2, i32 %v3_287bb, i32 %v3_287b4, i32 %v3_287ad, i32 %v8_287c8, i32 %v9_287c8, i32 0, i32 0)
  ret i32 %v10_287c8

; uselistorder directives
  uselistorder i32 %v0_287ad, { 1, 0, 2, 3 }
}

define i32 @function_287cd() local_unnamed_addr {
dec_label_pc_287cd:
  %v0_287cd = load i32, i32* @ebp, align 4
  %v1_287cd = add i32 %v0_287cd, -28
  %v2_287cd = inttoptr i32 %v1_287cd to i32*
  %v3_287cd = load i32, i32* %v2_287cd, align 4
  %v2_287d0 = xor i32 %v3_287cd, 30
  %v3_287d0 = icmp eq i32 %v2_287d0, 0
  store i32 %v2_287d0, i32* @eax, align 8
  br i1 %v3_287d0, label %bb, label %dec_label_pc_287d9

bb:                                               ; preds = %dec_label_pc_287cd
  %v1_287d7 = call i32 @function_287de()
  br label %dec_label_pc_287d9

dec_label_pc_287d9:                               ; preds = %bb, %dec_label_pc_287cd
  %v2_287d7 = phi i32 [ %v1_287d7, %bb ], [ %v2_287d0, %dec_label_pc_287cd ]
  ret i32 %v2_287d7
}

define i32 @function_287de() local_unnamed_addr {
dec_label_pc_287de:
  %v0_287e5 = load i32, i32* @eax, align 8
  ret i32 %v0_287e5
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28838:
  store i32 357913941, i32* @eax, align 8
  %v2_2885e = call i32 @function_28865(i32 %arg1)
  ret i32 %v2_2885e
}

define i32 @function_28865(i32 %arg1) local_unnamed_addr {
dec_label_pc_28865:
  %v0_28866 = load i32, i32* @eax, align 8
  ret i32 %v0_28866
}

define i32 @_ZSt18uninitialized_copyIPN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESB_ET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28867:
  %v3_2889e = call i32 @unknown_54e22(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2889e, i32* @eax, align 8
  %v1_288ad = call i32 @function_288b4()
  ret i32 %v1_288ad
}

define i32 @function_288b4() local_unnamed_addr {
dec_label_pc_288b4:
  %v0_288b5 = load i32, i32* @eax, align 8
  ret i32 %v0_288b5
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_288b6:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_28906, label %bb

bb:                                               ; preds = %dec_label_pc_288b6
  %sext = mul i32 %arg6, 16777216
  %v12_28900 = sdiv i32 %sext, 16777216
  %v13_28900 = sext i8 %arg5 to i32
  %v14_28900 = call i32 @function_28d3f(i32 %arg8, i32 %arg7, i32 %v12_28900, i32 %v13_28900, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28906

dec_label_pc_28906:                               ; preds = %dec_label_pc_288b6, %bb
  %v2_28909 = mul i32 %arg2, 4
  %v1_2890c = add i32 %v2_28909, ptrtoint (i32* @global_var_28d90.2555 to i32)
  %v1_28911 = inttoptr i32 %v1_2890c to i32*
  %v2_28911 = load i32, i32* %v1_28911, align 4
  ret i32 %v2_28911

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_28906, { 1, 0 }
}

define i32 @function_28915() local_unnamed_addr {
dec_label_pc_28915:
  %v0_2891d = load i32, i32* @ebp, align 4
  %v1_2891d = add i32 %v0_2891d, -83
  %v2_2891d = inttoptr i32 %v1_2891d to i8*
  %v3_2891d = load i8, i8* %v2_2891d, align 1
  %v1_2892d = add i32 %v0_2891d, -56
  %v2_2892d = inttoptr i32 %v1_2892d to i32*
  %v3_2892d = load i32, i32* %v2_2892d, align 4
  %v1_28934 = add i32 %v0_2891d, -52
  %v2_28934 = inttoptr i32 %v1_28934 to i32*
  %v3_28934 = load i32, i32* %v2_28934, align 4
  %v1_2893b = add i32 %v0_2891d, -44
  %v2_2893b = inttoptr i32 %v1_2893b to i32*
  %v3_2893b = load i32, i32* %v2_2893b, align 4
  %v6_28941 = sext i8 %v3_2891d to i32
  %v7_28941 = call i32 @unknown_54f18(i32 %v3_2893b, i32 %v3_28934, i32 %v3_2892d, i32 0, i32 %v6_28941, i32 1)
  store i32 %v7_28941, i32* @eax, align 8
  %v0_28946 = call i32 @function_28d77()
  ret i32 %v0_28946

; uselistorder directives
  uselistorder i32 %v0_2891d, { 0, 2, 1, 3 }
}

define i32 @function_2894b() local_unnamed_addr {
dec_label_pc_2894b:
  %v0_28953 = load i32, i32* @ebp, align 4
  %v1_28953 = add i32 %v0_28953, -82
  %v2_28953 = inttoptr i32 %v1_28953 to i8*
  %v3_28953 = load i8, i8* %v2_28953, align 1
  %v1_28963 = add i32 %v0_28953, -56
  %v2_28963 = inttoptr i32 %v1_28963 to i32*
  %v3_28963 = load i32, i32* %v2_28963, align 4
  %v1_2896a = add i32 %v0_28953, -52
  %v2_2896a = inttoptr i32 %v1_2896a to i32*
  %v3_2896a = load i32, i32* %v2_2896a, align 4
  %v1_28971 = add i32 %v0_28953, -44
  %v2_28971 = inttoptr i32 %v1_28971 to i32*
  %v3_28971 = load i32, i32* %v2_28971, align 4
  %v6_28977 = sext i8 %v3_28953 to i32
  %v7_28977 = call i32 @unknown_54f85(i32 %v3_28971, i32 %v3_2896a, i32 %v3_28963, i32 0, i32 %v6_28977, i32 1)
  store i32 %v7_28977, i32* @eax, align 8
  %v0_2897c = call i32 @function_28d77()
  ret i32 %v0_2897c

; uselistorder directives
  uselistorder i32 %v0_28953, { 0, 2, 1, 3 }
}

define i32 @function_28981() local_unnamed_addr {
dec_label_pc_28981:
  %v0_28989 = load i32, i32* @ebp, align 4
  %v1_289a7 = add i32 %v0_28989, -44
  %v2_289a7 = inttoptr i32 %v1_289a7 to i32*
  %v3_289a7 = load i32, i32* %v2_289a7, align 4
  %v1_289ad = call i32 @unknown_54ff2(i32 %v3_289a7)
  store i32 %v1_289ad, i32* @eax, align 8
  %v0_289b2 = call i32 @function_28d77()
  ret i32 %v0_289b2
}

define i32 @function_289b7() local_unnamed_addr {
dec_label_pc_289b7:
  %v0_289bf = load i32, i32* @ebp, align 4
  %v1_289dd = add i32 %v0_289bf, -44
  %v2_289dd = inttoptr i32 %v1_289dd to i32*
  %v3_289dd = load i32, i32* %v2_289dd, align 4
  %v1_289e3 = call i32 @unknown_54ff2(i32 %v3_289dd)
  store i32 %v1_289e3, i32* @eax, align 8
  %v0_289e8 = call i32 @function_28d77()
  ret i32 %v0_289e8
}

define i32 @function_289ed() local_unnamed_addr {
dec_label_pc_289ed:
  %v0_289f5 = load i32, i32* @ebp, align 4
  %v1_28a13 = add i32 %v0_289f5, -44
  %v2_28a13 = inttoptr i32 %v1_28a13 to i32*
  %v3_28a13 = load i32, i32* %v2_28a13, align 4
  %v1_28a19 = call i32 @unknown_54ff2(i32 %v3_28a13)
  store i32 %v1_28a19, i32* @eax, align 8
  %v0_28a1e = call i32 @function_28d77()
  ret i32 %v0_28a1e
}

define i32 @function_28a23() local_unnamed_addr {
dec_label_pc_28a23:
  %v0_28a2b = load i32, i32* @ebp, align 4
  %v1_28a49 = add i32 %v0_28a2b, -44
  %v2_28a49 = inttoptr i32 %v1_28a49 to i32*
  %v3_28a49 = load i32, i32* %v2_28a49, align 4
  %v1_28a4f = call i32 @unknown_54ff2(i32 %v3_28a49)
  store i32 %v1_28a4f, i32* @eax, align 8
  %v0_28a54 = call i32 @function_28d77()
  ret i32 %v0_28a54
}

define i32 @function_28a59() local_unnamed_addr {
dec_label_pc_28a59:
  %v0_28a61 = load i32, i32* @ebp, align 4
  %v1_28a7f = add i32 %v0_28a61, -44
  %v2_28a7f = inttoptr i32 %v1_28a7f to i32*
  %v3_28a7f = load i32, i32* %v2_28a7f, align 4
  %v1_28a85 = call i32 @unknown_54ff2(i32 %v3_28a7f)
  store i32 %v1_28a85, i32* @eax, align 8
  %v0_28a8a = call i32 @function_28d77()
  ret i32 %v0_28a8a
}

define i32 @function_28a8f() local_unnamed_addr {
dec_label_pc_28a8f:
  %v0_28a97 = load i32, i32* @ebp, align 4
  %v1_28ab5 = add i32 %v0_28a97, -44
  %v2_28ab5 = inttoptr i32 %v1_28ab5 to i32*
  %v3_28ab5 = load i32, i32* %v2_28ab5, align 4
  %v1_28abb = call i32 @unknown_54ff2(i32 %v3_28ab5)
  store i32 %v1_28abb, i32* @eax, align 8
  %v0_28ac0 = call i32 @function_28d77()
  ret i32 %v0_28ac0
}

define i32 @function_28ac5() local_unnamed_addr {
dec_label_pc_28ac5:
  %v0_28acd = load i32, i32* @ebp, align 4
  %v1_28aeb = add i32 %v0_28acd, -44
  %v2_28aeb = inttoptr i32 %v1_28aeb to i32*
  %v3_28aeb = load i32, i32* %v2_28aeb, align 4
  %v1_28af1 = call i32 @unknown_54ff2(i32 %v3_28aeb)
  store i32 %v1_28af1, i32* @eax, align 8
  %v0_28af6 = call i32 @function_28d77()
  ret i32 %v0_28af6
}

define i32 @function_28afb() local_unnamed_addr {
dec_label_pc_28afb:
  %v0_28b03 = load i32, i32* @ebp, align 4
  %v1_28b21 = add i32 %v0_28b03, -44
  %v2_28b21 = inttoptr i32 %v1_28b21 to i32*
  %v3_28b21 = load i32, i32* %v2_28b21, align 4
  %v1_28b27 = call i32 @unknown_54ff2(i32 %v3_28b21)
  store i32 %v1_28b27, i32* @eax, align 8
  %v0_28b2c = call i32 @function_28d77()
  ret i32 %v0_28b2c
}

define i32 @function_28b5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b5a:
  %v0_28b5a = load i32, i32* @eax, align 8
  %v1_28b5d = call i32 @unknown_54ff2(i32 %v0_28b5a)
  store i32 %v1_28b5d, i32* @eax, align 8
  %v0_28b62 = call i32 @function_28d77()
  ret i32 %v0_28b62
}

define i32 @function_28b67() local_unnamed_addr {
dec_label_pc_28b67:
  %v0_28b6f = load i32, i32* @ebp, align 4
  %v1_28b8d = add i32 %v0_28b6f, -44
  %v2_28b8d = inttoptr i32 %v1_28b8d to i32*
  %v3_28b8d = load i32, i32* %v2_28b8d, align 4
  %v1_28b93 = call i32 @unknown_54ff2(i32 %v3_28b8d)
  store i32 %v1_28b93, i32* @eax, align 8
  %v0_28b98 = call i32 @function_28d77()
  ret i32 %v0_28b98
}

define i32 @function_28b9d() local_unnamed_addr {
dec_label_pc_28b9d:
  %v0_28ba5 = load i32, i32* @ebp, align 4
  %v1_28bc3 = add i32 %v0_28ba5, -44
  %v2_28bc3 = inttoptr i32 %v1_28bc3 to i32*
  %v3_28bc3 = load i32, i32* %v2_28bc3, align 4
  %v1_28bc9 = call i32 @unknown_54ff2(i32 %v3_28bc3)
  store i32 %v1_28bc9, i32* @eax, align 8
  %v0_28bce = call i32 @function_28d77()
  ret i32 %v0_28bce
}

define i32 @function_28bd3() local_unnamed_addr {
dec_label_pc_28bd3:
  %v0_28bdb = load i32, i32* @ebp, align 4
  %v1_28bf9 = add i32 %v0_28bdb, -44
  %v2_28bf9 = inttoptr i32 %v1_28bf9 to i32*
  %v3_28bf9 = load i32, i32* %v2_28bf9, align 4
  %v1_28bff = call i32 @unknown_54ff2(i32 %v3_28bf9)
  store i32 %v1_28bff, i32* @eax, align 8
  %v0_28c04 = call i32 @function_28d77()
  ret i32 %v0_28c04
}

define i32 @function_28c09() local_unnamed_addr {
dec_label_pc_28c09:
  %v0_28c11 = load i32, i32* @ebp, align 4
  %v1_28c2f = add i32 %v0_28c11, -44
  %v2_28c2f = inttoptr i32 %v1_28c2f to i32*
  %v3_28c2f = load i32, i32* %v2_28c2f, align 4
  %v1_28c35 = call i32 @unknown_54ff2(i32 %v3_28c2f)
  store i32 %v1_28c35, i32* @eax, align 8
  %v0_28c3a = call i32 @function_28d77()
  ret i32 %v0_28c3a
}

define i32 @function_28c3f() local_unnamed_addr {
dec_label_pc_28c3f:
  %v0_28c47 = load i32, i32* @ebp, align 4
  %v1_28c65 = add i32 %v0_28c47, -44
  %v2_28c65 = inttoptr i32 %v1_28c65 to i32*
  %v3_28c65 = load i32, i32* %v2_28c65, align 4
  %v1_28c6b = call i32 @unknown_54ff2(i32 %v3_28c65)
  store i32 %v1_28c6b, i32* @eax, align 8
  %v0_28c70 = call i32 @function_28d77()
  ret i32 %v0_28c70
}

define i32 @function_28c75() local_unnamed_addr {
dec_label_pc_28c75:
  %v0_28c7d = load i32, i32* @ebp, align 4
  %v1_28c9b = add i32 %v0_28c7d, -44
  %v2_28c9b = inttoptr i32 %v1_28c9b to i32*
  %v3_28c9b = load i32, i32* %v2_28c9b, align 4
  %v1_28ca1 = call i32 @unknown_54ff2(i32 %v3_28c9b)
  store i32 %v1_28ca1, i32* @eax, align 8
  %v0_28ca6 = call i32 @function_28d77()
  ret i32 %v0_28ca6
}

define i32 @function_28cab() local_unnamed_addr {
dec_label_pc_28cab:
  %v0_28cc1 = load i32, i32* @ebp, align 4
  %v1_28ccf = add i32 %v0_28cc1, -44
  %v2_28ccf = inttoptr i32 %v1_28ccf to i32*
  %v3_28ccf = load i32, i32* %v2_28ccf, align 4
  %v1_28cd5 = call i32 @unknown_54ff2(i32 %v3_28ccf)
  store i32 %v1_28cd5, i32* @eax, align 8
  %v0_28cda = call i32 @function_28d77()
  ret i32 %v0_28cda
}

define i32 @function_28cdf() local_unnamed_addr {
dec_label_pc_28cdf:
  %v0_28cf5 = load i32, i32* @ebp, align 4
  %v1_28d03 = add i32 %v0_28cf5, -44
  %v2_28d03 = inttoptr i32 %v1_28d03 to i32*
  %v3_28d03 = load i32, i32* %v2_28d03, align 4
  %v1_28d09 = call i32 @unknown_54ff2(i32 %v3_28d03)
  store i32 %v1_28d09, i32* @eax, align 8
  %v0_28d0e = call i32 @function_28d77()
  ret i32 %v0_28d0e
}

define i32 @function_28d10() local_unnamed_addr {
dec_label_pc_28d10:
  %v0_28d24 = load i32, i32* @ebp, align 4
  %v1_28d32 = add i32 %v0_28d24, -44
  %v2_28d32 = inttoptr i32 %v1_28d32 to i32*
  %v3_28d32 = load i32, i32* %v2_28d32, align 4
  %v1_28d38 = call i32 @unknown_54ff2(i32 %v3_28d32)
  store i32 %v1_28d38, i32* @eax, align 8
  %v0_28d3d = call i32 @function_28d77()
  ret i32 %v0_28d3d

; uselistorder directives
  uselistorder i32 ()* @function_28d77, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_54ff2, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_28d3f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_28d3f:
  %v0_28d4f = load i32, i32* @ecx, align 4
  %v0_28d53 = load i32, i32* @edx, align 8
  %v0_28d57 = load i32, i32* @ebp, align 4
  %v1_28d57 = add i32 %v0_28d57, -56
  %v2_28d57 = inttoptr i32 %v1_28d57 to i32*
  %v3_28d57 = load i32, i32* %v2_28d57, align 4
  %v1_28d5e = add i32 %v0_28d57, -52
  %v2_28d5e = inttoptr i32 %v1_28d5e to i32*
  %v3_28d5e = load i32, i32* %v2_28d5e, align 4
  %v1_28d65 = add i32 %v0_28d57, -48
  %v2_28d65 = inttoptr i32 %v1_28d65 to i32*
  %v3_28d65 = load i32, i32* %v2_28d65, align 4
  %v1_28d6c = add i32 %v0_28d57, -44
  %v2_28d6c = inttoptr i32 %v1_28d6c to i32*
  %v3_28d6c = load i32, i32* %v2_28d6c, align 4
  %sext = mul i32 %v0_28d53, 16777216
  %v8_28d72 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_28d4f, 16777216
  %v9_28d72 = sdiv i32 %sext1, 16777216
  %v10_28d72 = call i32 @unknown_5504c(i32 %v3_28d6c, i32 %v3_28d65, i32 %v3_28d5e, i32 %v3_28d57, i32 %v8_28d72, i32 %v9_28d72, i32 0, i32 0)
  ret i32 %v10_28d72

; uselistorder directives
  uselistorder i32 %v0_28d57, { 1, 0, 2, 3 }
}

define i32 @function_28d77() local_unnamed_addr {
dec_label_pc_28d77:
  %v0_28d77 = load i32, i32* @ebp, align 4
  %v1_28d77 = add i32 %v0_28d77, -28
  %v2_28d77 = inttoptr i32 %v1_28d77 to i32*
  %v3_28d77 = load i32, i32* %v2_28d77, align 4
  %v3_28d7a = icmp eq i32 %v3_28d77, 30
  br i1 %v3_28d7a, label %bb, label %dec_label_pc_28d77.dec_label_pc_28d83_crit_edge

dec_label_pc_28d77.dec_label_pc_28d83_crit_edge:  ; preds = %dec_label_pc_28d77
  %v2_28d81.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_28d83

bb:                                               ; preds = %dec_label_pc_28d77
  %v1_28d81 = call i32 @function_28d88()
  br label %dec_label_pc_28d83

dec_label_pc_28d83:                               ; preds = %dec_label_pc_28d77.dec_label_pc_28d83_crit_edge, %bb
  %v2_28d81 = phi i32 [ %v2_28d81.pre, %dec_label_pc_28d77.dec_label_pc_28d83_crit_edge ], [ %v1_28d81, %bb ]
  ret i32 %v2_28d81

; uselistorder directives
  uselistorder label %dec_label_pc_28d83, { 1, 0 }
}

define i32 @function_28d88() local_unnamed_addr {
dec_label_pc_28d88:
  %v0_28d8f = load i32, i32* @eax, align 8
  ret i32 %v0_28d8f
}

define i32 @_ZSt10_ConstructIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESA_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28de0:
  %v2_28e0e = call i32 @function_2e2d0(i32 ptrtoint (i32* @global_var_c.2390 to i32), i32 %arg1)
  %v1_28e15 = icmp eq i32 %v2_28e0e, 0
  br i1 %v1_28e15, label %bb, label %dec_label_pc_28e19

bb:                                               ; preds = %dec_label_pc_28de0
  %v1_28e17 = call i32 @function_28e42()
  br label %dec_label_pc_28e19

dec_label_pc_28e19:                               ; preds = %bb, %dec_label_pc_28de0
  %v2_28e23 = call i32 @unknown_414ec(i32 %v2_28e0e, i32 %arg2)
  %v0_28e28 = call i32 @function_28e42()
  ret i32 %v0_28e28

; uselistorder directives
  uselistorder i32 ()* @function_28e42, { 1, 0 }
}

define i32 @function_28e32(i16 %arg1) local_unnamed_addr {
dec_label_pc_28e32:
  %eax.global-to-local = alloca i32, align 4
  %v0_28e32 = load i32, i32* %eax.global-to-local, align 8
  %v11_28e32 = and i32 %v0_28e32, -24
  store i32 %v11_28e32, i32* %eax.global-to-local, align 8
  ret i32 %v11_28e32

; uselistorder directives
  uselistorder i32 %v11_28e32, { 1, 0 }
}

define i32 @function_28e42() local_unnamed_addr {
dec_label_pc_28e42:
  %v0_28e42 = load i32, i32* @ebp, align 4
  %v1_28e42 = add i32 %v0_28e42, -28
  %v2_28e42 = inttoptr i32 %v1_28e42 to i32*
  %v3_28e42 = load i32, i32* %v2_28e42, align 4
  %v2_28e45 = xor i32 %v3_28e42, 30
  %v3_28e45 = icmp eq i32 %v2_28e45, 0
  store i32 %v2_28e45, i32* @eax, align 8
  br i1 %v3_28e45, label %bb, label %dec_label_pc_28e4e

bb:                                               ; preds = %dec_label_pc_28e42
  %v1_28e4c = call i32 @function_28e53()
  br label %dec_label_pc_28e4e

dec_label_pc_28e4e:                               ; preds = %bb, %dec_label_pc_28e42
  %v2_28e4c = phi i32 [ %v1_28e4c, %bb ], [ %v2_28e45, %dec_label_pc_28e42 ]
  ret i32 %v2_28e4c
}

define i32 @function_28e53() local_unnamed_addr {
dec_label_pc_28e53:
  %v0_28e5a = load i32, i32* @eax, align 8
  ret i32 %v0_28e5a
}

define i32 @_ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28e5b:
  %v3_28e96 = call i32 @unknown_55658(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_28e96, i32* @eax, align 8
  %v1_28ea5 = call i32 @function_28eac()
  ret i32 %v1_28ea5
}

define i32 @function_28eac() local_unnamed_addr {
dec_label_pc_28eac:
  %v0_28ead = load i32, i32* @eax, align 8
  ret i32 %v0_28ead
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28eae:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_28ece = load i32, i32* %arg1, align 4
  %v1_28ed3 = inttoptr i32 %arg2 to i32*
  %v2_28ed3 = load i32, i32* %v1_28ed3, align 4
  %v12_28ed5 = icmp eq i32 %v2_28ece, %v2_28ed3
  %v1_28ed7 = icmp eq i1 %v12_28ed5, false
  %v2_28ed7 = zext i1 %v1_28ed7 to i32
  %v4_28ed7 = and i32 %v2_28ed3, -256
  %v5_28ed7 = or i32 %v2_28ed7, %v4_28ed7
  store i32 %v5_28ed7, i32* @eax, align 8
  %v3_28ee4 = call i32 @function_28eeb(i32 %arg2, i32 %tmp101)
  ret i32 %v3_28ee4

; uselistorder directives
  uselistorder i32 %v2_28ed3, { 1, 0 }
}

define i32 @function_28eeb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28eeb:
  %v0_28eec = load i32, i32* @eax, align 8
  ret i32 %v0_28eec
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_28eee:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_28f08 = load i32, i32* %arg1, align 4
  %v1_28f0a = add i32 %v2_28f08, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_28f0a, i32* @eax, align 8
  %v2_28f17 = call i32 @function_28f1e(i32 %tmp99)
  ret i32 %v2_28f17
}

define i32 @function_28f1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f1e:
  %v0_28f1f = load i32, i32* @eax, align 8
  ret i32 %v0_28f1f
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_28f20:
  %v2_28f3a = load i32, i32* %arg1, align 4
  %v1_28f3c = icmp eq i32 %v2_28f3a, 0
  %v1_28f3e = icmp eq i1 %v1_28f3c, false
  br i1 %v1_28f3e, label %bb, label %dec_label_pc_28f40

bb:                                               ; preds = %dec_label_pc_28f20
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_28f3e = call i32 @function_28f64(i32 %tmp105)
  br label %dec_label_pc_28f40

dec_label_pc_28f40:                               ; preds = %bb, %dec_label_pc_28f20
  %v3_28f58 = phi i32 [ %v3_28f3e, %bb ], [ %v2_28f3a, %dec_label_pc_28f20 ]
  ret i32 %v3_28f58

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_28f64(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f64:
  %v0_28f64 = load i32, i32* @ebp, align 4
  %v1_28f64 = add i32 %v0_28f64, -28
  %v2_28f64 = inttoptr i32 %v1_28f64 to i32*
  %v3_28f64 = load i32, i32* %v2_28f64, align 4
  %v1_28f67 = inttoptr i32 %v3_28f64 to i32*
  %v2_28f67 = load i32, i32* %v1_28f67, align 4
  store i32 %v2_28f67, i32* @eax, align 8
  %v1_28f69 = add i32 %v0_28f64, -12
  %v2_28f69 = inttoptr i32 %v1_28f69 to i32*
  %v3_28f69 = load i32, i32* %v2_28f69, align 4
  %v3_28f6c = icmp eq i32 %v3_28f69, 30
  br i1 %v3_28f6c, label %bb, label %dec_label_pc_28f75

bb:                                               ; preds = %dec_label_pc_28f64
  %v1_28f73 = call i32 @function_28f7a()
  br label %dec_label_pc_28f75

dec_label_pc_28f75:                               ; preds = %bb, %dec_label_pc_28f64
  %v2_28f73 = phi i32 [ %v1_28f73, %bb ], [ %v2_28f67, %dec_label_pc_28f64 ]
  ret i32 %v2_28f73
}

define i32 @function_28f7a() local_unnamed_addr {
dec_label_pc_28f7a:
  %v0_28f7b = load i32, i32* @eax, align 8
  ret i32 %v0_28f7b
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_28f7c:
  %v2_28f96 = load i32, i32* %arg1, align 4
  %v1_28f98 = icmp eq i32 %v2_28f96, 0
  %v1_28f9a = icmp eq i1 %v1_28f98, false
  br i1 %v1_28f9a, label %bb, label %dec_label_pc_28f9c

bb:                                               ; preds = %dec_label_pc_28f7c
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_28f9a = call i32 @function_28fc0(i32 %tmp105)
  br label %dec_label_pc_28f9c

dec_label_pc_28f9c:                               ; preds = %bb, %dec_label_pc_28f7c
  %v3_28fb4 = phi i32 [ %v3_28f9a, %bb ], [ %v2_28f96, %dec_label_pc_28f7c ]
  ret i32 %v3_28fb4

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_28fc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fc0:
  %v0_28fc0 = load i32, i32* @ebp, align 4
  %v1_28fc0 = add i32 %v0_28fc0, -28
  %v2_28fc0 = inttoptr i32 %v1_28fc0 to i32*
  %v3_28fc0 = load i32, i32* %v2_28fc0, align 4
  %v1_28fc3 = inttoptr i32 %v3_28fc0 to i32*
  %v2_28fc3 = load i32, i32* %v1_28fc3, align 4
  store i32 %v2_28fc3, i32* @eax, align 8
  %v1_28fc5 = add i32 %v0_28fc0, -12
  %v2_28fc5 = inttoptr i32 %v1_28fc5 to i32*
  %v3_28fc5 = load i32, i32* %v2_28fc5, align 4
  %v3_28fc8 = icmp eq i32 %v3_28fc5, 30
  br i1 %v3_28fc8, label %bb, label %dec_label_pc_28fd1

bb:                                               ; preds = %dec_label_pc_28fc0
  %v1_28fcf = call i32 @function_28fd6()
  br label %dec_label_pc_28fd1

dec_label_pc_28fd1:                               ; preds = %bb, %dec_label_pc_28fc0
  %v2_28fcf = phi i32 [ %v1_28fcf, %bb ], [ %v2_28fc3, %dec_label_pc_28fc0 ]
  ret i32 %v2_28fcf
}

define i32 @function_28fd6() local_unnamed_addr {
dec_label_pc_28fd6:
  %v0_28fd7 = load i32, i32* @eax, align 8
  ret i32 %v0_28fd7
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE19nolock_slot_expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fd8:
  ret i32 %arg1
}

define i32 @function_28fe8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28fe8:
  %v2_28fe8 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_28fe8 = load i32, i32* @eax, align 8
  %v4_28fe8 = trunc i32 %v3_28fe8 to i8
  %v5_28fe8 = add i8 %v4_28fe8, %v2_28fe8
  %v21_28fe8 = inttoptr i32 %v3_28fe8 to i8*
  store i8 %v5_28fe8, i8* %v21_28fe8, align 1
  %v0_28fea = load i32, i32* @eax, align 8
  %v1_28fea = load i32, i32* @ebp, align 4
  %v2_28fea = add i32 %v1_28fea, -12
  %v3_28fea = inttoptr i32 %v2_28fea to i32*
  store i32 %v0_28fea, i32* %v3_28fea, align 4
  %v0_28fef = load i32, i32* @ebp, align 4
  %v1_28fef = add i32 %v0_28fef, -28
  %v2_28fef = inttoptr i32 %v1_28fef to i32*
  %v3_28fef = load i32, i32* %v2_28fef, align 4
  %v1_28ff2 = add i32 %v3_28fef, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_28ff8 = call i32 @unknown_3b760(i32 %v1_28ff2)
  %v1_28ffd = trunc i32 %v2_28ff8 to i8
  %v2_28ffd = load i32, i32* @ebp, align 4
  %v3_28ffd = add i32 %v2_28ffd, -13
  %v4_28ffd = inttoptr i32 %v3_28ffd to i8*
  store i8 %v1_28ffd, i8* %v4_28ffd, align 1
  %v0_29000 = load i32, i32* @ebp, align 4
  %v1_29000 = add i32 %v0_29000, -13
  %v2_29000 = inttoptr i32 %v1_29000 to i8*
  %v3_29000 = load i8, i8* %v2_29000, align 1
  %v10_29000 = icmp eq i8 %v3_29000, 0
  br i1 %v10_29000, label %dec_label_pc_2900d, label %dec_label_pc_29006

dec_label_pc_29006:                               ; preds = %dec_label_pc_28fe8
  %v1_29006 = add i32 %v0_29000, -28
  %v2_29006 = inttoptr i32 %v1_29006 to i32*
  %v3_29006 = load i32, i32* %v2_29006, align 4
  %v1_29009 = add i32 %v3_29006, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_29009 = inttoptr i32 %v1_29009 to i8*
  store i8 0, i8* %v2_29009, align 1
  %v0_2900d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2900d

dec_label_pc_2900d:                               ; preds = %dec_label_pc_29006, %dec_label_pc_28fe8
  %v0_2900d = phi i32 [ %v0_2900d.pre, %dec_label_pc_29006 ], [ %v0_29000, %dec_label_pc_28fe8 ]
  %v1_2900d = add i32 %v0_2900d, -13
  %v2_2900d = inttoptr i32 %v1_2900d to i8*
  %v3_2900d = load i8, i8* %v2_2900d, align 1
  %v4_2900d = zext i8 %v3_2900d to i32
  store i32 %v4_2900d, i32* @eax, align 8
  %v1_29011 = add i32 %v0_2900d, -12
  %v2_29011 = inttoptr i32 %v1_29011 to i32*
  %v3_29011 = load i32, i32* %v2_29011, align 4
  %v3_29014 = icmp eq i32 %v3_29011, 30
  br i1 %v3_29014, label %bb, label %dec_label_pc_2901d

bb:                                               ; preds = %dec_label_pc_2900d
  %v1_2901b = call i32 @function_29022()
  br label %dec_label_pc_2901d

dec_label_pc_2901d:                               ; preds = %bb, %dec_label_pc_2900d
  %v2_2901b = phi i32 [ %v1_2901b, %bb ], [ %v4_2900d, %dec_label_pc_2900d ]
  ret i32 %v2_2901b

; uselistorder directives
  uselistorder i32 %v0_2900d, { 1, 0 }
}

define i32 @function_29022() local_unnamed_addr {
dec_label_pc_29022:
  %v0_29023 = load i32, i32* @eax, align 8
  ret i32 %v0_29023
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29024:
  %v1_2903e = add i32 %arg1, 68
  store i32 %v1_2903e, i32* @eax, align 8
  %v2_2904b = call i32 @function_29052(i32 %arg1)
  ret i32 %v2_2904b
}

define i32 @function_29052(i32 %arg1) local_unnamed_addr {
dec_label_pc_29052:
  %v0_29053 = load i32, i32* @eax, align 8
  ret i32 %v0_29053
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_29054:
  ret i32 %arg1
}

define i32 @function_29062(i32 %arg1) local_unnamed_addr {
dec_label_pc_29062:
  %v0_29064 = load i32, i32* @ebp, align 4
  %v1_29064 = add i32 %v0_29064, 1
  store i32 %v1_29064, i32* @ebp, align 4
  %v0_29065 = load i32, i32* @ebx, align 4
  %v1_29065 = add i32 %v0_29065, 1166610501
  %v2_29065 = inttoptr i32 %v1_29065 to i8*
  %v3_29065 = load i8, i8* %v2_29065, align 1
  %v4_29065 = udiv i8 %v3_29065, 2
  %v5_29065 = shl i8 %v3_29065, 7
  %v6_29065 = or i8 %v4_29065, %v5_29065
  store i8 %v6_29065, i8* %v2_29065, align 1
  %v0_2906c = load i32, i32* @ebp, align 4
  %v1_2906c = add i32 %v0_2906c, 20
  %v2_2906c = inttoptr i32 %v1_2906c to i32*
  %v3_2906c = load i32, i32* %v2_2906c, align 4
  %v2_2906f = add i32 %v0_2906c, -56
  %v3_2906f = inttoptr i32 %v2_2906f to i32*
  store i32 %v3_2906c, i32* %v3_2906f, align 4
  %v1_29078 = load i32, i32* @ebp, align 4
  %v2_29078 = add i32 %v1_29078, -12
  %v3_29078 = inttoptr i32 %v2_29078 to i32*
  store i32 30, i32* %v3_29078, align 4
  %v0_2907d = load i32, i32* @ebp, align 4
  %v1_2907d = add i32 %v0_2907d, -48
  %v2_2907d = inttoptr i32 %v1_2907d to i32*
  %v3_2907d = load i32, i32* %v2_2907d, align 4
  %v1_29080 = add i32 %v0_2907d, -32
  %v3_2908a = call i32 @unknown_4ca1a(i32 %v1_29080, i32 %v3_2907d)
  %v0_29092 = load i32, i32* @ebp, align 4
  %v1_29092 = add i32 %v0_29092, -32
  %v1_29099 = add i32 %v0_29092, -56
  %v2_29099 = inttoptr i32 %v1_29099 to i32*
  %v3_29099 = load i32, i32* %v2_29099, align 4
  %v4_2909f = call i32 @unknown_51f02(i32 %v3_29099, i32 %v1_29092)
  %v4_290a4 = trunc i32 %v4_2909f to i8
  %v5_290a4 = icmp eq i8 %v4_290a4, 0
  %v1_290a6 = icmp eq i1 %v5_290a4, false
  br i1 %v1_290a6, label %bb, label %dec_label_pc_290a8

bb:                                               ; preds = %dec_label_pc_29062
  %v2_290a6 = call i32 @function_290cc()
  br label %dec_label_pc_290a8

dec_label_pc_290a8:                               ; preds = %bb, %dec_label_pc_29062
  %v3_290c0 = phi i32 [ %v2_290a6, %bb ], [ %v4_2909f, %dec_label_pc_29062 ]
  ret i32 %v3_290c0

; uselistorder directives
  uselistorder i8 %v3_29065, { 1, 0 }
}

define i32 @function_290cc() local_unnamed_addr {
dec_label_pc_290cc:
  %v0_290cc = load i32, i32* @ebp, align 4
  %v1_290cc = add i32 %v0_290cc, -48
  %v2_290cc = inttoptr i32 %v1_290cc to i32*
  %v3_290cc = load i32, i32* %v2_290cc, align 4
  %v1_290cf = add i32 %v3_290cc, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_290d2 = add i32 %v0_290cc, -28
  %v1_290d5 = add i32 %v0_290cc, -52
  %v2_290d5 = inttoptr i32 %v1_290d5 to i32*
  %v3_290d5 = load i32, i32* %v2_290d5, align 4
  %v3_290e3 = call i32 @unknown_558c2(i32 %v1_290d2, i32 %v1_290cf, i32 %v3_290d5)
  %v0_290eb = load i32, i32* @ebp, align 4
  %v1_290eb = add i32 %v0_290eb, -48
  %v2_290eb = inttoptr i32 %v1_290eb to i32*
  %v3_290eb = load i32, i32* %v2_290eb, align 4
  %v1_290ee = add i32 %v3_290eb, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_290f1 = add i32 %v0_290eb, -24
  %v3_290fb = call i32 @unknown_5591a(i32 %v1_290f1, i32 %v1_290ee)
  %v0_29103 = load i32, i32* @ebp, align 4
  %v1_29103 = add i32 %v0_29103, -24
  %v1_2910a = add i32 %v0_29103, -28
  %v4_29110 = call i32 @unknown_55964(i32 %v1_2910a, i32 %v1_29103)
  %v4_29115 = trunc i32 %v4_29110 to i8
  %v5_29115 = icmp eq i8 %v4_29115, 0
  %v1_29117 = icmp eq i1 %v5_29115, false
  br i1 %v1_29117, label %bb, label %dec_label_pc_29119

bb:                                               ; preds = %dec_label_pc_290cc
  %v2_29117 = call i32 @function_2913d()
  br label %dec_label_pc_29119

dec_label_pc_29119:                               ; preds = %bb, %dec_label_pc_290cc
  %v3_29131 = phi i32 [ %v2_29117, %bb ], [ %v4_29110, %dec_label_pc_290cc ]
  ret i32 %v3_29131

; uselistorder directives
  uselistorder i32 %v0_290cc, { 1, 0, 2 }
}

define i32 @function_2913d() local_unnamed_addr {
dec_label_pc_2913d:
  %v0_2913d = load i32, i32* @ebp, align 4
  %v1_2913d = add i32 %v0_2913d, -28
  %v2_29143 = call i32 @unknown_55a2e(i32 %v1_2913d)
  %v0_29148 = load i32, i32* @ebp, align 4
  %v1_29148 = add i32 %v0_29148, -52
  %v2_29148 = inttoptr i32 %v1_29148 to i32*
  %v3_29148 = load i32, i32* %v2_29148, align 4
  %v1_29153 = add i32 %v0_29148, -48
  %v2_29153 = inttoptr i32 %v1_29153 to i32*
  %v3_29153 = load i32, i32* %v2_29153, align 4
  %v5_29159 = call i32 @unknown_559a4(i32 %v3_29153, i32 %v2_29143, i32 %v3_29148)
  %v4_2915e = trunc i32 %v5_29159 to i8
  %v5_2915e = icmp eq i8 %v4_2915e, 0
  %v1_29160 = icmp eq i1 %v5_2915e, false
  br i1 %v1_29160, label %bb, label %dec_label_pc_29162

bb:                                               ; preds = %dec_label_pc_2913d
  %v2_29160 = call i32 @function_29186()
  br label %dec_label_pc_29162

dec_label_pc_29162:                               ; preds = %bb, %dec_label_pc_2913d
  %v3_2917a = phi i32 [ %v2_29160, %bb ], [ %v5_29159, %dec_label_pc_2913d ]
  ret i32 %v3_2917a
}

define i32 @function_29186() local_unnamed_addr {
dec_label_pc_29186:
  %v0_29186 = load i32, i32* @ebp, align 4
  %v1_29186 = add i32 %v0_29186, -28
  %v1_2918c = call i32 @unknown_55a2e(i32 %v1_29186)
  %v1_29191 = add i32 %v1_2918c, ptrtoint (i32* @global_var_c.2390 to i32)
  %v0_29194 = load i32, i32* @ebp, align 4
  %v1_29194 = add i32 %v0_29194, -56
  %v2_29194 = inttoptr i32 %v1_29194 to i32*
  %v3_29194 = load i32, i32* %v2_29194, align 4
  %v2_2919e = call i32 @unknown_4c2cc(i32 %v1_29191, i32 %v3_29194)
  %v4_291a3 = trunc i32 %v2_2919e to i8
  %v5_291a3 = icmp eq i8 %v4_291a3, 0
  br i1 %v5_291a3, label %dec_label_pc_2921d, label %dec_label_pc_291a7

dec_label_pc_291a7:                               ; preds = %dec_label_pc_29186
  %v0_291a7 = load i32, i32* @ebp, align 4
  %v1_291a7 = add i32 %v0_291a7, -56
  %v2_291a7 = inttoptr i32 %v1_291a7 to i32*
  %v3_291a7 = load i32, i32* %v2_291a7, align 4
  %v1_291aa = inttoptr i32 %v3_291a7 to i32*
  %v2_291aa = load i32, i32* %v1_291aa, align 4
  %v2_291ac = add i32 %v0_291a7, -20
  %v3_291ac = inttoptr i32 %v2_291ac to i32*
  store i32 %v2_291aa, i32* %v3_291ac, align 4
  %v0_291af = load i32, i32* @ebp, align 4
  %v1_291af = add i32 %v0_291af, -20
  %v1_291b5 = call i32 @unknown_522a8(i32 %v1_291af)
  %v0_291ba = load i32, i32* @ebp, align 4
  %v1_291ba = add i32 %v0_291ba, -16
  %v1_291bd = add i32 %v0_291ba, -52
  %v2_291bd = inttoptr i32 %v1_291bd to i32*
  %v3_291bd = load i32, i32* %v2_291bd, align 4
  %v1_291c4 = add i32 %v0_291ba, -48
  %v2_291c4 = inttoptr i32 %v1_291c4 to i32*
  %v3_291c4 = load i32, i32* %v2_291c4, align 4
  %v3_291ce = call i32 @unknown_55a68(i32 %v1_291ba, i32 %v3_291c4, i32 %v3_291bd)
  %v0_291d6 = load i32, i32* @ebp, align 4
  %v1_291d6 = add i32 %v0_291d6, -16
  %v1_291dd = add i32 %v0_291d6, -20
  %v2_291e3 = call i32 @unknown_51f02(i32 %v1_291dd, i32 %v1_291d6)
  %v4_291e8 = trunc i32 %v2_291e3 to i8
  %v5_291e8 = icmp eq i8 %v4_291e8, 0
  %v0_29208 = load i32, i32* @ebp, align 4
  %v1_29208 = add i32 %v0_29208, -48
  %v2_29208 = inttoptr i32 %v1_29208 to i32*
  %v3_29208 = load i32, i32* %v2_29208, align 4
  %v1_2920b = add i32 %v3_29208, ptrtoint (i32* @global_var_8.2379 to i32)
  br i1 %v5_291e8, label %dec_label_pc_29208, label %dec_label_pc_291ec

dec_label_pc_291ec:                               ; preds = %dec_label_pc_291a7
  %v1_291f2 = add i32 %v0_29208, -52
  %v2_291f2 = inttoptr i32 %v1_291f2 to i32*
  %v3_291f2 = load i32, i32* %v2_291f2, align 4
  %v2_291fc = call i32 @unknown_55b5e(i32 %v1_2920b, i32 %v3_291f2)
  %v0_29201 = load i32, i32* @ebp, align 4
  %v1_29201 = add i32 %v0_29201, -20
  %v2_29201 = inttoptr i32 %v1_29201 to i32*
  %v3_29201 = load i32, i32* %v2_29201, align 4
  %v2_29204 = inttoptr i32 %v2_291fc to i32*
  store i32 %v3_29201, i32* %v2_29204, align 4
  br label %dec_label_pc_2921d

dec_label_pc_29208:                               ; preds = %dec_label_pc_291a7
  %v1_2920e = add i32 %v0_29208, -28
  %v2_2920e = inttoptr i32 %v1_2920e to i32*
  %v3_2920e = load i32, i32* %v2_2920e, align 4
  %v2_29218 = call i32 @unknown_55ca4(i32 %v1_2920b, i32 %v3_2920e)
  br label %dec_label_pc_2921d

dec_label_pc_2921d:                               ; preds = %dec_label_pc_29208, %dec_label_pc_291ec, %dec_label_pc_29186
  %v0_2921d = load i32, i32* @ebp, align 4
  %v1_2921d = add i32 %v0_2921d, -48
  %v2_2921d = inttoptr i32 %v1_2921d to i32*
  %v3_2921d = load i32, i32* %v2_2921d, align 4
  %v1_29220 = add i32 %v0_2921d, -44
  %v2_29220 = inttoptr i32 %v1_29220 to i32*
  %v3_29220 = load i32, i32* %v2_29220, align 4
  %v1_29223 = add i32 %v0_2921d, -56
  %v2_29223 = inttoptr i32 %v1_29223 to i32*
  %v3_29223 = load i32, i32* %v2_29223, align 4
  %v1_29226 = inttoptr i32 %v3_29223 to i32*
  %v2_29226 = load i32, i32* %v1_29226, align 4
  %v3_29233 = call i32 @unknown_55ce6(i32 %v3_29220, i32 %v3_2921d, i32 %v2_29226)
  %v0_2923b = load i32, i32* @ebp, align 4
  %v1_2923b = add i32 %v0_2923b, -44
  %v2_2923b = inttoptr i32 %v1_2923b to i32*
  %v3_2923b = load i32, i32* %v2_2923b, align 4
  store i32 %v3_2923b, i32* @eax, align 8
  %v1_2923e = add i32 %v0_2923b, -12
  %v2_2923e = inttoptr i32 %v1_2923e to i32*
  %v3_2923e = load i32, i32* %v2_2923e, align 4
  %v3_29241 = icmp eq i32 %v3_2923e, 30
  br i1 %v3_29241, label %bb, label %dec_label_pc_2924a

bb:                                               ; preds = %dec_label_pc_2921d
  %v1_29248 = call i32 @function_2924f()
  br label %dec_label_pc_2924a

dec_label_pc_2924a:                               ; preds = %bb, %dec_label_pc_2921d
  %v2_29248 = phi i32 [ %v1_29248, %bb ], [ %v3_2923b, %dec_label_pc_2921d ]
  ret i32 %v2_29248

; uselistorder directives
  uselistorder i32 %v1_2920b, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_51f02, { 1, 0 }
  uselistorder i32 (i32)* @unknown_55a2e, { 1, 0 }
}

define i32 @function_2924f() local_unnamed_addr {
dec_label_pc_2924f:
  %v0_29250 = load i32, i32* @eax, align 8
  ret i32 %v0_29250
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_29254:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2926e = load i32, i32* %arg1, align 4
  %v1_29270 = inttoptr i32 %v2_2926e to i32*
  %v2_29270 = load i32, i32* %v1_29270, align 4
  store i32 %v2_29270, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_29284 = call i32 @function_2928b(i32 %tmp99)
  ret i32 %v2_29284
}

define i32 @function_2928b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2928b:
  %v0_2928c = load i32, i32* @eax, align 8
  ret i32 %v0_2928c
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS0_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEvRT_SN_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2928d:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_292ad = load i32, i32* %arg1, align 4
  %v1_292b5 = inttoptr i32 %arg2 to i32*
  %v2_292b5 = load i32, i32* %v1_292b5, align 4
  store i32 %v2_292b5, i32* %arg1, align 4
  store i32 %v2_292ad, i32* %v1_292b5, align 4
  store i32 0, i32* @eax, align 8
  %v3_292ce = call i32 @function_292d5(i32 %arg2, i32 %tmp102)
  ret i32 %v3_292ce
}

define i32 @function_292d5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_292d5:
  %v0_292d6 = load i32, i32* @eax, align 8
  ret i32 %v0_292d6
}

define i32 @_ZN5boost15optional_detail13optional_baseISsEC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_292d8:
  %v4_292ef = ptrtoint i8* %arg1 to i32
  %v2_292f5 = call i32 @unknown_42666(i32 %v4_292ef)
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v1_2930a = call i32 @function_29311()
  ret i32 %v1_2930a
}

define i32 @function_29311() local_unnamed_addr {
dec_label_pc_29311:
  %v0_29312 = load i32, i32* @eax, align 8
  ret i32 %v0_29312
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_type7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29314:
  %v1_29331 = call i32 @unknown_56008(i32 %arg1)
  store i32 %v1_29331, i32* @eax, align 8
  %v1_29340 = call i32 @function_29347()
  ret i32 %v1_29340
}

define i32 @function_29347() local_unnamed_addr {
dec_label_pc_29347:
  %v0_29348 = load i32, i32* @eax, align 8
  ret i32 %v0_29348
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_typeC1Ej(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2934a:
  %v1_2936d = call i32 @unknown_5609e(i32 %arg1)
  %v2_29378 = add i32 %arg1, 120
  %v3_29378 = inttoptr i32 %v2_29378 to i32*
  store i32 %arg2, i32* %v3_29378, align 4
  store i32 0, i32* @eax, align 8
  %v1_29385 = call i32 @function_2938c()
  ret i32 %v1_29385

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2938c() local_unnamed_addr {
dec_label_pc_2938c:
  %v0_2938d = load i32, i32* @eax, align 8
  ret i32 %v0_2938d
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE11is_on_stackEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2938e:
  %v1_293a8 = add i32 %arg1, 120
  %v2_293a8 = inttoptr i32 %v1_293a8 to i32*
  %v3_293a8 = load i32, i32* %v2_293a8, align 4
  %tmp101 = icmp ult i32 %v3_293a8, 11
  %v3_293ae = zext i1 %tmp101 to i32
  %v5_293ae = and i32 %v3_293a8, -256
  %v6_293ae = or i32 %v3_293ae, %v5_293ae
  ret i32 %v6_293ae

; uselistorder directives
  uselistorder i32 %v3_293a8, { 1, 0 }
}

define i32 @function_293bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293bc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_293c1() local_unnamed_addr {
dec_label_pc_293c1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_293c1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_293c1 = add i32 %v0_293c1, -1
  store i32 %v1_293c1, i32* %ecx.global-to-local, align 4
  %v0_293c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_293c3
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_293c4:
  %v10_293e7 = icmp eq i32 %arg2, 0
  %v1_293eb = icmp eq i1 %v10_293e7, false
  br i1 %v1_293eb, label %bb, label %dec_label_pc_293ed

bb:                                               ; preds = %dec_label_pc_293c4
  %v5_293eb = call i32 @function_29411(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_293ed

dec_label_pc_293ed:                               ; preds = %bb, %dec_label_pc_293c4
  %v3_29405 = phi i32 [ %v5_293eb, %bb ], [ 0, %dec_label_pc_293c4 ]
  ret i32 %v3_29405
}

define i32 @function_29411(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29411:
  %eax.global-to-local = alloca i32, align 4
  %v0_29411 = load i32, i32* @ebp, align 4
  %v1_29411 = add i32 %v0_29411, -28
  %v2_29411 = inttoptr i32 %v1_29411 to i32*
  %v3_29411 = load i32, i32* %v2_29411, align 4
  store i32 %v3_29411, i32* %eax.global-to-local, align 8
  %v1_29414 = add i32 %v3_29411, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v2_29414 = inttoptr i32 %v1_29414 to i32*
  %v3_29414 = load i32, i32* %v2_29414, align 4
  %v3_29417 = load i32, i32* %v2_29411, align 4
  store i32 %v3_29417, i32* %eax.global-to-local, align 8
  %v1_2941a = add i32 %v3_29417, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2941a = inttoptr i32 %v1_2941a to i32*
  %v3_2941a = load i32, i32* %v2_2941a, align 4
  %tmp = mul i32 %v3_2941a, 12
  %v2_29429 = add i32 %tmp, -12
  %v2_2942c = add i32 %v2_29429, %v3_29414
  store i32 %v2_2942c, i32* %eax.global-to-local, align 8
  %v2_2942e = add i32 %v0_29411, -20
  %v3_2942e = inttoptr i32 %v2_2942e to i32*
  store i32 %v2_2942c, i32* %v3_2942e, align 4
  %v0_29431 = load i32, i32* @ebp, align 4
  %v1_29431 = add i32 %v0_29431, -32
  %v2_29431 = inttoptr i32 %v1_29431 to i32*
  %v3_29431 = load i32, i32* %v2_29431, align 4
  %v2_2943a = mul i32 %v3_29431, 12
  %v1_2943d = sub i32 0, %v2_2943a
  store i32 %v1_2943d, i32* %eax.global-to-local, align 8
  %v2_2943f = add i32 %v0_29431, -20
  %v3_2943f = inttoptr i32 %v2_2943f to i32*
  %v4_2943f = load i32, i32* %v3_2943f, align 4
  %v5_2943f = sub i32 %v4_2943f, %v2_2943a
  store i32 %v5_2943f, i32* %eax.global-to-local, align 8
  %v2_29442 = add i32 %v0_29431, -16
  %v3_29442 = inttoptr i32 %v2_29442 to i32*
  store i32 %v5_2943f, i32* %v3_29442, align 4
  %v0_29445 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29445

; uselistorder directives
  uselistorder i32 12, { 1, 0, 3, 4, 2 }
}

define i32 @function_29447() local_unnamed_addr {
dec_label_pc_29447:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29448(i32 %arg1) local_unnamed_addr {
dec_label_pc_29448:
  %v0_29448 = load i32, i32* @ebp, align 4
  %v1_29448 = add i32 %v0_29448, 1
  store i32 %v1_29448, i32* @ebp, align 4
  %v0_2944a = load i32, i32* @eax, align 8
  %v1_2944e = add i32 %v0_29448, -27
  %v2_2944e = inttoptr i32 %v1_2944e to i32*
  %v3_2944e = load i32, i32* %v2_2944e, align 4
  %v2_29454 = call i32 @unknown_5614e(i32 %v3_2944e, i32 %v0_2944a)
  %v0_29459 = load i32, i32* @ebp, align 4
  %v1_29459 = add i32 %v0_29459, -20
  %v2_29459 = inttoptr i32 %v1_29459 to i32*
  %v3_29459 = load i32, i32* %v2_29459, align 4
  %v4_29459 = sub i32 %v3_29459, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v4_29459, i32* %v2_29459, align 4
  %v0_2945d = load i32, i32* @ebp, align 4
  %v1_2945d = add i32 %v0_2945d, -20
  %v2_2945d = inttoptr i32 %v1_2945d to i32*
  %v3_2945d = load i32, i32* %v2_2945d, align 4
  %v2_29460 = add i32 %v0_2945d, -16
  %v3_29460 = inttoptr i32 %v2_29460 to i32*
  %v4_29460 = load i32, i32* %v3_29460, align 4
  %tmp5 = icmp ule i32 %v3_2945d, %v4_29460
  %v3_29463 = icmp ne i1 %tmp5, true
  %v4_29463 = zext i1 %v3_29463 to i32
  %v6_29463 = and i32 %v3_2945d, -256
  %v7_29463 = or i32 %v4_29463, %v6_29463
  store i32 %v7_29463, i32* @eax, align 8
  %v5_29466 = icmp eq i1 %v3_29463, false
  %v1_29468 = icmp eq i1 %v5_29466, false
  br i1 %v1_29468, label %bb, label %dec_label_pc_2946a

bb:                                               ; preds = %dec_label_pc_29448
  %v2_29468 = call i32 @function_29447()
  %v0_2946a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2946a

dec_label_pc_2946a:                               ; preds = %bb, %dec_label_pc_29448
  %v0_2946a = phi i32 [ %v0_2946a.pre, %bb ], [ %v0_2945d, %dec_label_pc_29448 ]
  %v1_2946a = add i32 %v0_2946a, -12
  %v2_2946a = inttoptr i32 %v1_2946a to i32*
  %v3_2946a = load i32, i32* %v2_2946a, align 4
  %v2_2946d = xor i32 %v3_2946a, 30
  %v3_2946d = icmp eq i32 %v2_2946d, 0
  store i32 %v2_2946d, i32* @eax, align 8
  br i1 %v3_2946d, label %bb6, label %dec_label_pc_29476

bb6:                                              ; preds = %dec_label_pc_2946a
  %v1_29474 = call i32 @function_2947b()
  br label %dec_label_pc_29476

dec_label_pc_29476:                               ; preds = %bb6, %dec_label_pc_2946a
  %v2_29474 = phi i32 [ %v1_29474, %bb6 ], [ %v2_2946d, %dec_label_pc_2946a ]
  ret i32 %v2_29474

; uselistorder directives
  uselistorder i32 %v3_2945d, { 1, 0 }
}

define i32 @function_2947b() local_unnamed_addr {
dec_label_pc_2947b:
  %v0_2947c = load i32, i32* @eax, align 8
  ret i32 %v0_2947c
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2947e:
  %tmp108 = icmp ult i32 %arg3, 11
  br i1 %tmp108, label %dec_label_pc_294cb, label %dec_label_pc_294a7

dec_label_pc_294a7:                               ; preds = %dec_label_pc_2947e
  %v1_294ad = call i32 @unknown_56252(i32 %arg1)
  %v3_294c3 = call i32 @unknown_4c290(i32 %v1_294ad, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_294cb

dec_label_pc_294cb:                               ; preds = %dec_label_pc_2947e, %dec_label_pc_294a7
  store i32 0, i32* @eax, align 8
  %v1_294d5 = call i32 @function_294dc()
  ret i32 %v1_294d5

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_4c290, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_294cb, { 1, 0 }
}

define i32 @function_294dc() local_unnamed_addr {
dec_label_pc_294dc:
  %v0_294dd = load i32, i32* @eax, align 8
  ret i32 %v0_294dd
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_294de:
  %v2_294f8 = load i32, i32* %arg1, align 4
  %v1_294fa = icmp eq i32 %v2_294f8, 0
  %v1_294fc = icmp eq i1 %v1_294fa, false
  br i1 %v1_294fc, label %bb, label %dec_label_pc_294fe

bb:                                               ; preds = %dec_label_pc_294de
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_294fc = call i32 @function_29522(i32 %tmp105)
  br label %dec_label_pc_294fe

dec_label_pc_294fe:                               ; preds = %bb, %dec_label_pc_294de
  %v3_29516 = phi i32 [ %v3_294fc, %bb ], [ %v2_294f8, %dec_label_pc_294de ]
  ret i32 %v3_29516

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_29522(i32 %arg1) local_unnamed_addr {
dec_label_pc_29522:
  %v0_29522 = load i32, i32* @ebp, align 4
  %v1_29522 = add i32 %v0_29522, -28
  %v2_29522 = inttoptr i32 %v1_29522 to i32*
  %v3_29522 = load i32, i32* %v2_29522, align 4
  %v1_29525 = inttoptr i32 %v3_29522 to i32*
  %v2_29525 = load i32, i32* %v1_29525, align 4
  store i32 %v2_29525, i32* @eax, align 8
  %v1_29527 = add i32 %v0_29522, -12
  %v2_29527 = inttoptr i32 %v1_29527 to i32*
  %v3_29527 = load i32, i32* %v2_29527, align 4
  %v3_2952a = icmp eq i32 %v3_29527, 30
  br i1 %v3_2952a, label %bb, label %dec_label_pc_29533

bb:                                               ; preds = %dec_label_pc_29522
  %v1_29531 = call i32 @function_29538()
  br label %dec_label_pc_29533

dec_label_pc_29533:                               ; preds = %bb, %dec_label_pc_29522
  %v2_29531 = phi i32 [ %v1_29531, %bb ], [ %v2_29525, %dec_label_pc_29522 ]
  ret i32 %v2_29531
}

define i32 @function_29538() local_unnamed_addr {
dec_label_pc_29538:
  %v0_29539 = load i32, i32* @eax, align 8
  ret i32 %v0_29539
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2953a:
  %v1_29554 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_29554, i32* @eax, align 8
  %v1_2955a = call i32 @function_39a3c(i32 %v1_29554)
  store i32 0, i32* @eax, align 8
  %v1_29569 = call i32 @function_29570()
  ret i32 %v1_29569
}

define i32 @function_29570() local_unnamed_addr {
dec_label_pc_29570:
  %v0_29571 = load i32, i32* @eax, align 8
  ret i32 %v0_29571
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueISsEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29572:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_29592 = inttoptr i32 %arg2 to i32*
  %v2_29592 = load i32, i32* %v1_29592, align 4
  store i32 %v2_29592, i32* %arg1, align 4
  %v1_2959c = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_295a2 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_295a2, i32* @eax, align 8
  %v2_295ac = call i32 @function_39ab4(i32 %v1_295a2, i32 %v1_2959c)
  store i32 0, i32* @eax, align 8
  %v1_295bb = call i32 @function_295c2()
  ret i32 %v1_295bb

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_295c2() local_unnamed_addr {
dec_label_pc_295c2:
  %v0_295c3 = load i32, i32* @eax, align 8
  ret i32 %v0_295c3
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_295c4:
  ret i32 0
}

define i32 @function_295dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_295dc:
  %eax.global-to-local = alloca i32, align 4
  %v0_295dc = load i32, i32* @ebp, align 4
  %v1_295dc = add i32 %v0_295dc, 1
  store i32 %v1_295dc, i32* @ebp, align 4
  %v0_295df = load i32, i32* @ecx, align 4
  %v3_295df = mul i32 %v0_295df, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 1)
  %v4_295df = inttoptr i32 %v3_295df to i8*
  %v5_295df = load i8, i8* %v4_295df, align 1
  %v6_295df = mul i8 %v5_295df, 16
  %v7_295df = lshr i8 %v5_295df, ptrtoint (i32* @global_var_4.2376 to i8)
  %v8_295df = or i8 %v7_295df, %v6_295df
  store i8 %v8_295df, i8* %v4_295df, align 1
  %v0_295e3 = load i32, i32* @eax, align 8
  %v11_295e3 = and i32 %v0_295e3, -24
  store i32 %v11_295e3, i32* %eax.global-to-local, align 8
  %v0_295e5 = load i32, i32* @ecx, align 4
  %v7_295e5 = load i3, i3* @fpu_stat_TOP, align 1
  %v8_295e5 = add i3 %v7_295e5, -1
  store i3 %v8_295e5, i3* @fpu_stat_TOP, align 1
  %v0_295e8 = load i32, i32* @ebx, align 4
  %v1_295e8 = add i32 %v0_295e8, 862319685
  %v2_295e8 = inttoptr i32 %v1_295e8 to i8*
  %v3_295e8 = load i8, i8* %v2_295e8, align 1
  %v5_295e8 = trunc i32 %v0_295e5 to i8
  %v6_295e8 = add i8 %v3_295e8, %v5_295e8
  store i8 %v6_295e8, i8* %v2_295e8, align 1
  %v0_295ee = load i32, i32* %eax.global-to-local, align 8
  %v1_295ee = add i32 %v0_295ee, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_295ee = icmp eq i32 %v1_295ee, 0
  store i32 %v1_295ee, i32* @eax, align 8
  br i1 %v10_295ee, label %bb, label %dec_label_pc_295f5

bb:                                               ; preds = %dec_label_pc_295dc
  %v1_295f3 = call i32 @function_295fa()
  store i32 %v1_295f3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_295f5

dec_label_pc_295f5:                               ; preds = %bb, %dec_label_pc_295dc
  %v2_295f3 = phi i32 [ %v1_295f3, %bb ], [ %v1_295ee, %dec_label_pc_295dc ]
  ret i32 %v2_295f3

; uselistorder directives
  uselistorder i8 %v5_295df, { 1, 0 }
}

define i32 @function_295fa() local_unnamed_addr {
dec_label_pc_295fa:
  %v0_295fb = load i32, i32* @eax, align 8
  ret i32 %v0_295fb
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_295fc:
  ret i32 0
}

define i32 @function_2962c() local_unnamed_addr {
dec_label_pc_2962c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2962c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2962c = add i32 %v0_2962c, -599422013
  %v2_2962c = inttoptr i32 %v1_2962c to i32*
  %v3_2962c = load i32, i32* %v2_2962c, align 4
  %v4_2962c = add i32 %v3_2962c, -1
  store i32 %v4_2962c, i32* %v2_2962c, align 4
  %v0_29632 = load i32, i32* %eax.global-to-local, align 8
  %v0_29636 = load i32, i32* %ebx.global-to-local, align 4
  %v2_29639 = call i32 @unknown_5646a(i32 %v0_29636, i32 %v0_29632)
  store i32 %v2_29639, i32* %eax.global-to-local, align 8
  %v0_2963e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2963e = add i32 %v0_2963e, -28
  %v2_2963e = inttoptr i32 %v1_2963e to i32*
  %v3_2963e = load i32, i32* %v2_2963e, align 4
  store i32 %v3_2963e, i32* %eax.global-to-local, align 8
  %v0_29641 = load i32, i32* %ebx.global-to-local, align 4
  %v2_29648 = call i32 @unknown_56670(i32 %v3_2963e, i32 %v0_29641)
  store i32 %v2_29648, i32* %eax.global-to-local, align 8
  %v0_2964d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2964d = add i32 %v0_2964d, -32
  %v2_2964d = inttoptr i32 %v1_2964d to i32*
  %v3_2964d = load i32, i32* %v2_2964d, align 4
  store i32 %v3_2964d, i32* %eax.global-to-local, align 8
  %v1_29650 = add i32 %v3_2964d, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_29653 = add i32 %v0_2964d, -28
  %v2_29653 = inttoptr i32 %v1_29653 to i32*
  %v3_29653 = load i32, i32* %v2_29653, align 4
  %v1_29656 = add i32 %v3_29653, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_29656, i32* %eax.global-to-local, align 8
  %v2_29660 = call i32 @unknown_52b6e(i32 %v1_29656, i32 %v1_29650)
  store i32 %v2_29660, i32* %eax.global-to-local, align 8
  %v0_29665 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29665 = add i32 %v0_29665, -12
  %v2_29665 = inttoptr i32 %v1_29665 to i32*
  %v3_29665 = load i32, i32* %v2_29665, align 4
  %v2_29668 = xor i32 %v3_29665, 30
  %v3_29668 = icmp eq i32 %v2_29668, 0
  store i32 %v2_29668, i32* @eax, align 8
  br i1 %v3_29668, label %bb, label %dec_label_pc_29671

bb:                                               ; preds = %dec_label_pc_2962c
  %v1_2966f = call i32 @function_2968c()
  store i32 %v1_2966f, i32* @eax, align 8
  br label %dec_label_pc_29671

dec_label_pc_29671:                               ; preds = %bb, %dec_label_pc_2962c
  %v0_29671 = call i32 @function_29687()
  store i32 %v0_29671, i32* %eax.global-to-local, align 8
  ret i32 %v0_29671
}

define i32 @function_29673() local_unnamed_addr {
dec_label_pc_29673:
  %v0_29673 = load i32, i32* @eax, align 8
  ret i32 %v0_29673
}

define i32 @function_29687() local_unnamed_addr {
dec_label_pc_29687:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2968c() local_unnamed_addr {
dec_label_pc_2968c:
  %v0_29692 = load i32, i32* @eax, align 8
  ret i32 %v0_29692
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29694:
  %v10_296b1 = icmp eq i32 %arg2, 0
  br i1 %v10_296b1, label %bb, label %dec_label_pc_296b7

bb:                                               ; preds = %dec_label_pc_29694
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_296b5 = call i32 @function_296e5(i32 0, i32 %tmp102)
  br label %dec_label_pc_296b7

dec_label_pc_296b7:                               ; preds = %bb, %dec_label_pc_29694
  %v2_296ba = load i32, i32* %arg1, align 4
  %v15_296bc = icmp eq i32 %v2_296ba, %arg2
  %v1_296bf = icmp eq i1 %v15_296bc, false
  br i1 %v1_296bf, label %bb105, label %dec_label_pc_296c1

bb105:                                            ; preds = %dec_label_pc_296b7
  %v4_296bf = call i32 @function_296e5(i32 30, i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_296c1

dec_label_pc_296c1:                               ; preds = %bb105, %dec_label_pc_296b7
  %v6_296bf = phi i32 [ %v4_296bf, %bb105 ], [ %v2_296ba, %dec_label_pc_296b7 ]
  ret i32 %v6_296bf

; uselistorder directives
  uselistorder i32 %v2_296ba, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_296e5, { 1, 0 }
}

define i32 @function_296c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_296c2:
  %v0_296c3 = load i32, i32* @eax, align 8
  %v1_296c3 = trunc i32 %v0_296c3 to i8
  %v2_296c3 = and i8 %v1_296c3, ptrtoint (i32* @global_var_c.2390 to i8)
  %v3_296c3 = icmp eq i8 %v2_296c3, 0
  %v8_296c3 = zext i8 %v2_296c3 to i32
  %v10_296c3 = and i32 %v0_296c3, -256
  %v11_296c3 = or i32 %v8_296c3, %v10_296c3
  store i32 %v11_296c3, i32* @eax, align 8
  %v0_296c5 = load i32, i32* @ecx, align 4
  %v1_296c5 = add i32 %v0_296c5, -1
  store i32 %v1_296c5, i32* @ecx, align 4
  %v2_296c5 = icmp eq i32 %v1_296c5, 0
  %v4_296c5 = or i1 %v3_296c3, %v2_296c5
  br i1 %v4_296c5, label %dec_label_pc_296c7, label %bb

bb:                                               ; preds = %dec_label_pc_296c2
  %v6_296c5 = call i32 @function_29673()
  store i32 %v6_296c5, i32* @eax, align 8
  br label %dec_label_pc_296c7

dec_label_pc_296c7:                               ; preds = %dec_label_pc_296c2, %bb
  %v20_296c7 = phi i32 [ %v11_296c3, %dec_label_pc_296c2 ], [ %v6_296c5, %bb ]
  %v1_296c7 = inttoptr i32 %v20_296c7 to i8*
  %v2_296c7 = load i8, i8* %v1_296c7, align 1
  %v4_296c7 = trunc i32 %v20_296c7 to i8
  %v5_296c7 = add i8 %v2_296c7, %v4_296c7
  store i8 %v5_296c7, i8* %v1_296c7, align 1
  %v3_296d9 = load i32, i32* @eax, align 8
  ret i32 %v3_296d9

; uselistorder directives
  uselistorder i32 %v20_296c7, { 1, 0 }
  uselistorder i32 %v1_296c5, { 1, 0 }
  uselistorder label %dec_label_pc_296c7, { 1, 0 }
}

define i32 @function_296e5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_296e5:
  %v0_296e5 = load i32, i32* @ebp, align 4
  %v1_296e5 = add i32 %v0_296e5, -32
  %v2_296e5 = inttoptr i32 %v1_296e5 to i32*
  %v3_296e5 = load i32, i32* %v2_296e5, align 4
  %v1_296ec = add i32 %v0_296e5, -20
  %v2_296f2 = call i32 @unknown_5676e(i32 %v1_296ec, i32 %v3_296e5)
  %v0_296f7 = load i32, i32* @ebp, align 4
  %v1_296f7 = add i32 %v0_296f7, -28
  %v2_296f7 = inttoptr i32 %v1_296f7 to i32*
  %v3_296f7 = load i32, i32* %v2_296f7, align 4
  %v1_296fe = add i32 %v0_296f7, -20
  %v2_29704 = call i32 @unknown_4cb3c(i32 %v1_296fe, i32 %v3_296f7)
  %v0_29709 = load i32, i32* @ebp, align 4
  %v1_29709 = add i32 %v0_29709, -20
  %v1_2970f = call i32 @unknown_425fc(i32 %v1_29709)
  %v0_29714 = load i32, i32* @ebp, align 4
  %v1_29714 = add i32 %v0_29714, -12
  %v2_29714 = inttoptr i32 %v1_29714 to i32*
  %v3_29714 = load i32, i32* %v2_29714, align 4
  %v2_29717 = xor i32 %v3_29714, 30
  %v3_29717 = icmp eq i32 %v2_29717, 0
  store i32 %v2_29717, i32* @eax, align 8
  br i1 %v3_29717, label %bb, label %dec_label_pc_29720

bb:                                               ; preds = %dec_label_pc_296e5
  %v1_2971e = call i32 @function_29725()
  br label %dec_label_pc_29720

dec_label_pc_29720:                               ; preds = %bb, %dec_label_pc_296e5
  %v2_2971e = phi i32 [ %v1_2971e, %bb ], [ %v2_29717, %dec_label_pc_296e5 ]
  ret i32 %v2_2971e
}

define i32 @function_29725() local_unnamed_addr {
dec_label_pc_29725:
  %v0_29726 = load i32, i32* @eax, align 8
  ret i32 %v0_29726
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29728:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_29757 = call i32 @function_2975e(i32 %arg2, i32 %tmp101)
  ret i32 %v3_29757
}

define i32 @function_2975e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2975e:
  %v0_2975f = load i32, i32* @eax, align 8
  ret i32 %v0_2975f
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29760:
  %v1_2977a = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2977a = inttoptr i32 %v1_2977a to i32*
  %v3_2977a = load i32, i32* %v2_2977a, align 4
  %v2_2978a = call i32 @unknown_568a0(i32 %arg1, i32 %v3_2977a)
  store i32 0, i32* @eax, align 8
  %v1_29799 = call i32 @function_297a0()
  ret i32 %v1_29799

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_297a0() local_unnamed_addr {
dec_label_pc_297a0:
  %v0_297a1 = load i32, i32* @eax, align 8
  ret i32 %v0_297a1
}

define i32 @_ZSt13back_inserterIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEESt20back_insert_iteratorIT_ERSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_297a2:
  %v2_297cc = call i32 @unknown_5699e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_297de = call i32 @function_297e5()
  ret i32 %v1_297de

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_297e5() local_unnamed_addr {
dec_label_pc_297e5:
  %v0_297e6 = load i32, i32* @eax, align 8
  ret i32 %v0_297e6
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_297ea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-29 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v2_29808 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_29808, i32* %eax.global-to-local, align 8
  %v2_2980e = call i32 @unknown_3e0ec(i32 %v2_29808)
  %v1_29816 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_29816, i32* %eax.global-to-local, align 8
  %v2_2981c = call i32 @unknown_3bf44(i32 %v1_29816)
  store i32 %v2_2981c, i32* %eax.global-to-local, align 8
  %v2_29821 = ptrtoint i32* %stack_var_-56 to i32
  %v3_2982b = call i32 @unknown_3e120(i32 %v2_29821, i32 %v2_2981c)
  %v16_29830 = ptrtoint i32* %stack_var_-80 to i32
  %v3_29833 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_29833, i32* %eax.global-to-local, align 8
  store i32 %v3_29833, i32* %stack_var_-44, align 4
  %v2_298f5 = ptrtoint i32* %stack_var_-40 to i32
  %v2_29849 = ptrtoint i32* %stack_var_-28 to i32
  %v2_29850 = ptrtoint i32* %stack_var_-30 to i32
  %v2_29871 = ptrtoint i32* %stack_var_-29 to i32
  %v2_2988e = ptrtoint i32* %stack_var_-36 to i32
  %v2_29899 = ptrtoint i32* %stack_var_-52 to i32
  %v1_29883 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_29883 = inttoptr i32 %v1_29883 to i8*
  br label %dec_label_pc_298e7

dec_label_pc_2983e:                               ; preds = %dec_label_pc_298e7
  store i32 %v2_29808, i32* %eax.global-to-local, align 8
  %v1_29841 = load i32, i32* @esp, align 4
  %v2_29841 = inttoptr i32 %v1_29841 to i32*
  store i32 %v2_29808, i32* %v2_29841, align 4
  %v0_29844 = call i32 @unknown_3e24e()
  %v1_2984c = load i32, i32* @esp, align 4
  %v2_2984c = add i32 %v1_2984c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2984c = inttoptr i32 %v2_2984c to i32*
  store i32 %v0_29844, i32* %v3_2984c, align 4
  store i32 %v2_29850, i32* %eax.global-to-local, align 8
  %v1_29853 = load i32, i32* @esp, align 4
  %v2_29853 = add i32 %v1_29853, 4
  %v3_29853 = inttoptr i32 %v2_29853 to i32*
  store i32 %v2_29850, i32* %v3_29853, align 4
  %v1_29857 = load i32, i32* @esp, align 4
  %v2_29857 = inttoptr i32 %v1_29857 to i32*
  store i32 %v2_29849, i32* %v2_29857, align 4
  %v0_2985a = call i32 @unknown_3e27d()
  %v0_2985f = load i32, i32* @esp, align 4
  %v1_2985f = sub i32 %v0_2985f, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v2_29808, i32* %eax.global-to-local, align 8
  %v2_29865 = inttoptr i32 %v1_2985f to i32*
  store i32 %v2_29808, i32* %v2_29865, align 4
  %v0_29868 = call i32 @unknown_3e24e()
  %v1_2986d = load i32, i32* @esp, align 4
  %v2_2986d = add i32 %v1_2986d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2986d = inttoptr i32 %v2_2986d to i32*
  store i32 %v0_29868, i32* %v3_2986d, align 4
  store i32 %v2_29871, i32* %eax.global-to-local, align 8
  %v1_29874 = load i32, i32* @esp, align 4
  %v2_29874 = inttoptr i32 %v1_29874 to i32*
  store i32 %v2_29871, i32* %v2_29874, align 4
  %v0_29877 = call i32 @unknown_3e338()
  store i32 %v0_29877, i32* %eax.global-to-local, align 8
  %v4_2987c = trunc i32 %v0_29877 to i8
  %v5_2987c = icmp eq i8 %v4_2987c, 0
  br i1 %v5_2987c, label %dec_label_pc_2988e, label %dec_label_pc_29880

dec_label_pc_29880:                               ; preds = %dec_label_pc_2983e
  store i32 %arg1, i32* %eax.global-to-local, align 8
  store i8 0, i8* %v2_29883, align 1
  br label %dec_label_pc_298ca

dec_label_pc_2988e:                               ; preds = %dec_label_pc_2983e
  store i32 %v2_2988e, i32* %eax.global-to-local, align 8
  %v0_29891 = load i32, i32* @esp, align 4
  %v1_29891 = add i32 %v0_29891, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_29891 = inttoptr i32 %v1_29891 to i32*
  store i32 0, i32* %v2_29891, align 4
  %v1_2989c = load i32, i32* @esp, align 4
  %v2_2989c = add i32 %v1_2989c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2989c = inttoptr i32 %v2_2989c to i32*
  store i32 %v2_29899, i32* %v3_2989c, align 4
  %v1_298a0 = load i32, i32* @esp, align 4
  %v2_298a0 = inttoptr i32 %v1_298a0 to i32*
  store i32 %v2_2988e, i32* %v2_298a0, align 4
  %v0_298a3 = call i32 @unknown_56a2a()
  %v0_298a8 = load i32, i32* @esp, align 4
  %v1_298a8 = sub i32 %v0_298a8, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v2_2988e, i32* %eax.global-to-local, align 8
  %v2_298ae = inttoptr i32 %v1_298a8 to i32*
  store i32 %v2_2988e, i32* %v2_298ae, align 4
  %v0_298b1 = call i32 @unknown_56a70()
  store i32 %v0_298b1, i32* %eax.global-to-local, align 8
  %v1_298b9 = load i32, i32* @esp, align 4
  %v2_298b9 = add i32 %v1_298b9, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_298b9 = inttoptr i32 %v2_298b9 to i32*
  store i32 %v2_29849, i32* %v3_298b9, align 4
  %v0_298bd = load i32, i32* %eax.global-to-local, align 8
  %v1_298bd = load i32, i32* @esp, align 4
  %v2_298bd = inttoptr i32 %v1_298bd to i32*
  store i32 %v0_298bd, i32* %v2_298bd, align 4
  %v0_298c0 = call i32 @unknown_56a9e()
  store i32 %v0_298c0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_298ca

dec_label_pc_298ca:                               ; preds = %dec_label_pc_2988e, %dec_label_pc_29880
  %storemerge = phi i32 [ 1, %dec_label_pc_2988e ], [ 0, %dec_label_pc_29880 ]
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  store i32 %v2_29849, i32* %eax.global-to-local, align 8
  %v1_298cd = load i32, i32* @esp, align 4
  %v2_298cd = inttoptr i32 %v1_298cd to i32*
  store i32 %v2_29849, i32* %v2_298cd, align 4
  %v0_298d0 = call i32 @unknown_3e2d4()
  store i32 %v0_298d0, i32* %eax.global-to-local, align 8
  %v0_298d5 = load i32, i32* %ebx.global-to-local, align 4
  %v10_298d5 = icmp eq i32 %v0_298d5, 1
  br i1 %v10_298d5, label %dec_label_pc_298dc, label %dec_label_pc_298da

dec_label_pc_298da:                               ; preds = %dec_label_pc_298ca
  %v0_298da = call i32 @function_2993a()
  store i32 %v0_298da, i32* %eax.global-to-local, align 8
  ret i32 %v0_298da

dec_label_pc_298dc:                               ; preds = %dec_label_pc_298ca
  store i32 %v2_29808, i32* %eax.global-to-local, align 8
  %v1_298df = load i32, i32* @esp, align 4
  %v2_298df = inttoptr i32 %v1_298df to i32*
  store i32 %v2_29808, i32* %v2_298df, align 4
  %v0_298e2 = call i32 @unknown_3e214()
  store i32 %v0_298e2, i32* %eax.global-to-local, align 8
  %v1_298ed.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_298e7

dec_label_pc_298e7:                               ; preds = %dec_label_pc_298dc, %dec_label_pc_297ea
  %v1_298ed = phi i32 [ %v1_298ed.pre, %dec_label_pc_298dc ], [ %v16_29830, %dec_label_pc_297ea ]
  store i32 %v1_29816, i32* %eax.global-to-local, align 8
  %v2_298ed = inttoptr i32 %v1_298ed to i32*
  store i32 %v1_29816, i32* %v2_298ed, align 4
  %v0_298f0 = load i32, i32* %stack_var_-44, align 4
  %v1_298f0 = call i32 @unknown_3bf44(i32 %v0_298f0)
  store i32 %v1_298f0, i32* %eax.global-to-local, align 8
  %v1_298f8 = load i32, i32* @esp, align 4
  %v2_298f8 = add i32 %v1_298f8, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_298f8 = inttoptr i32 %v2_298f8 to i32*
  store i32 %v1_298f0, i32* %v3_298f8, align 4
  %v1_298fc = load i32, i32* @esp, align 4
  %v2_298fc = inttoptr i32 %v1_298fc to i32*
  store i32 %v2_298f5, i32* %v2_298fc, align 4
  %v0_298ff = call i32 @unknown_3e170()
  %v0_29904 = load i32, i32* @esp, align 4
  %v3_2990a = inttoptr i32 %v0_29904 to i32*
  store i32 %v2_298f5, i32* %v3_2990a, align 4
  store i32 %v2_29808, i32* %eax.global-to-local, align 8
  %v1_29911 = load i32, i32* @esp, align 4
  %v2_29911 = inttoptr i32 %v1_29911 to i32*
  store i32 %v2_29808, i32* %v2_29911, align 4
  %v0_29914 = call i32 @unknown_3e1c0()
  store i32 %v0_29914, i32* %eax.global-to-local, align 8
  %v4_29919 = trunc i32 %v0_29914 to i8
  %v5_29919 = icmp eq i8 %v4_29919, 0
  %v1_2991b = icmp eq i1 %v5_29919, false
  br i1 %v1_2991b, label %dec_label_pc_2983e, label %dec_label_pc_29921

dec_label_pc_29921:                               ; preds = %dec_label_pc_298e7
  %v0_29921 = call i32 @function_2993a()
  store i32 %v0_29921, i32* %eax.global-to-local, align 8
  ret i32 %v0_29921

; uselistorder directives
  uselistorder i32 %v1_29816, { 1, 0, 2, 3 }
  uselistorder i32 %v2_29808, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32* %eax.global-to-local, { 16, 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24 }
  uselistorder i32 ()* @unknown_3e24e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3bf44, { 1, 0 }
}

define i32 @function_29924() local_unnamed_addr {
dec_label_pc_29924:
  %eax.global-to-local = alloca i32, align 4
  %v0_29924 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29924
}

define i32 @function_2993a() local_unnamed_addr {
dec_label_pc_2993a:
  %v0_2993a = load i32, i32* @ebp, align 4
  %v1_2993a = add i32 %v0_2993a, -12
  %v2_2993a = inttoptr i32 %v1_2993a to i32*
  %v3_2993a = load i32, i32* %v2_2993a, align 4
  %v2_2993d = xor i32 %v3_2993a, 30
  %v3_2993d = icmp eq i32 %v2_2993d, 0
  store i32 %v2_2993d, i32* @eax, align 8
  br i1 %v3_2993d, label %bb, label %dec_label_pc_29946

bb:                                               ; preds = %dec_label_pc_2993a
  %v1_29944 = call i32 @function_2994b()
  br label %dec_label_pc_29946

dec_label_pc_29946:                               ; preds = %bb, %dec_label_pc_2993a
  %v2_29944 = phi i32 [ %v1_29944, %bb ], [ %v2_2993d, %dec_label_pc_2993a ]
  ret i32 %v2_29944
}

define i32 @function_2994b() local_unnamed_addr {
dec_label_pc_2994b:
  %v0_2994f = load i32, i32* @eax, align 8
  ret i32 %v0_2994f
}

define i32 @_ZN5boostneINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiSZ_SsS10_S12_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS13_12always_bool2ES15_S16_E4typeEE4typeERKNS_15iterator_facadeIS15_T0_T1_T2_T3_EERKNS1E_IS16_T5_T6_T7_T8_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29950:
  %edx.global-to-local = alloca i32, align 4
  %v0_2996d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2996d, 16777216
  %v3_2997e = sdiv i32 %sext, 16777216
  %v4_2997e = call i32 @unknown_56c4b(i32 %arg1, i32 %arg2, i32 %v3_2997e)
  %v1_29983 = xor i32 %v4_2997e, 1
  store i32 %v1_29983, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_29990 = call i32 @function_29997()
  ret i32 %v1_29990
}

define i32 @function_29997() local_unnamed_addr {
dec_label_pc_29997:
  %v0_29998 = load i32, i32* @eax, align 8
  ret i32 %v0_29998
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2999a:
  %v1_299b7 = call i32 @unknown_56cde(i32 %arg1)
  %v1_299bf = call i32 @unknown_56d0b(i32 %v1_299b7)
  store i32 %v1_299bf, i32* @eax, align 8
  %v1_299ce = call i32 @function_299d5()
  ret i32 %v1_299ce
}

define i32 @function_299d5() local_unnamed_addr {
dec_label_pc_299d5:
  %v0_299d6 = load i32, i32* @eax, align 8
  ret i32 %v0_299d6
}

define i32 @_ZN5boost8optionalISsEaSERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299d8:
  %v2_29a02 = call i32 @unknown_56d7e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_29a14 = call i32 @function_29a1b()
  ret i32 %v1_29a14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29a1b() local_unnamed_addr {
dec_label_pc_29a1b:
  %v0_29a1c = load i32, i32* @eax, align 8
  ret i32 %v0_29a1c
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a1e:
  %v1_29a3b = call i32 @unknown_56e32(i32 %arg1)
  %v1_29a43 = call i32 @unknown_56e5f(i32 %v1_29a3b)
  %v1_29a4e = call i32 @unknown_56e32(i32 %arg1)
  store i32 %v1_29a4e, i32* @eax, align 8
  %v1_29a5d = call i32 @function_29a64()
  ret i32 %v1_29a5d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_56e32, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29a64() local_unnamed_addr {
dec_label_pc_29a64:
  %v0_29a65 = load i32, i32* @eax, align 8
  ret i32 %v0_29a65
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12get_ptr_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a66:
  %ebx.global-to-local = alloca i32, align 4
  %v1_29a84 = call i32 @unknown_4d78e(i32 %arg1)
  %v0_29a89 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_29a89, 16777216
  %v3_29a97 = sdiv i32 %sext, 16777216
  %v4_29a97 = call i32 @unknown_56edc(i32 %arg1, i32 %v1_29a84, i32 %v3_29a97)
  ret i32 %v4_29a97

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29aa3(i32 %arg1) local_unnamed_addr {
dec_label_pc_29aa3:
  %v2_29aa3 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_29aa3 = load i32, i32* @eax, align 8
  %v4_29aa3 = trunc i32 %v3_29aa3 to i8
  %v5_29aa3 = add i8 %v4_29aa3, %v2_29aa3
  %v21_29aa3 = inttoptr i32 %v3_29aa3 to i8*
  store i8 %v5_29aa3, i8* %v21_29aa3, align 1
  %v0_29aa5 = load i32, i32* @ebp, align 4
  %v1_29aa5 = load i32, i32* @eax, align 8
  %v3_29aa5 = add i32 %v0_29aa5, -24
  %v4_29aa5 = add i32 %v3_29aa5, %v1_29aa5
  %v5_29aa5 = inttoptr i32 %v4_29aa5 to i8*
  %v6_29aa5 = load i8, i8* %v5_29aa5, align 1
  %v7_29aa5 = load i32, i32* @edx, align 8
  %v8_29aa5 = lshr i32 %v7_29aa5, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_29aa5 = trunc i32 %v8_29aa5 to i8
  %v10_29aa5 = add i8 %v9_29aa5, %v6_29aa5
  store i8 %v10_29aa5, i8* %v5_29aa5, align 1
  %v31_29aa5 = load i32, i32* @eax, align 8
  ret i32 %v31_29aa5
}

define i32 @function_29aac() local_unnamed_addr {
dec_label_pc_29aac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_29aac = load i32, i32* %ebx.global-to-local, align 4
  %v1_29aac = add i32 %v0_29aac, 1566258372
  %v2_29aac = inttoptr i32 %v1_29aac to i32*
  %v3_29aac = load i32, i32* %v2_29aac, align 4
  %v4_29aac = add i32 %v3_29aac, 1
  store i32 %v4_29aac, i32* %v2_29aac, align 4
  %v0_29ab2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ab2
}

define i32 @_ZSt8_DestroyISsEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ab3:
  ret i32 %arg1
}

define i32 @function_29ae5() local_unnamed_addr {
dec_label_pc_29ae5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29ae5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29ae5 = add i32 %v0_29ae5, -1
  store i32 %v1_29ae5, i32* %ecx.global-to-local, align 4
  %v0_29ae7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ae7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ae8:
  ret i32 0
}

define i32 @_ZNKSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b12:
  ret i32 %arg1
}

define i32 @function_29b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b20:
  %eax.global-to-local = alloca i32, align 4
  %v0_29b20 = load i32, i32* @eax, align 8
  %v1_29b20 = trunc i32 %v0_29b20 to i8
  %v2_29b20 = load i1, i1* @cf, align 1
  %v3_29b20 = zext i1 %v2_29b20 to i8
  %v4_29b20 = add i8 %v3_29b20, %v1_29b20
  %v22_29b20 = zext i8 %v4_29b20 to i32
  %v24_29b20 = and i32 %v0_29b20, -256
  %v25_29b20 = or i32 %v22_29b20, %v24_29b20
  store i32 %v25_29b20, i32* %eax.global-to-local, align 8
  %v1_29b22 = inttoptr i32 %v25_29b20 to i8*
  %v2_29b22 = load i8, i8* %v1_29b22, align 1
  %v5_29b22 = add i8 %v2_29b22, %v4_29b20
  store i8 %v5_29b22, i8* %v1_29b22, align 1
  %v0_29b24 = load i32, i32* %eax.global-to-local, align 8
  %v1_29b24 = load i32, i32* @ebp, align 4
  %v2_29b24 = add i32 %v1_29b24, -12
  %v3_29b24 = inttoptr i32 %v2_29b24 to i32*
  store i32 %v0_29b24, i32* %v3_29b24, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_29b29 = load i32, i32* @ebp, align 4
  %v1_29b29 = add i32 %v0_29b29, -28
  %v2_29b29 = inttoptr i32 %v1_29b29 to i32*
  %v3_29b29 = load i32, i32* %v2_29b29, align 4
  store i32 %v3_29b29, i32* @eax, align 8
  %v1_29b2c = add i32 %v0_29b29, -12
  %v2_29b2c = inttoptr i32 %v1_29b2c to i32*
  %v3_29b2c = load i32, i32* %v2_29b2c, align 4
  %v3_29b2f = icmp eq i32 %v3_29b2c, 30
  br i1 %v3_29b2f, label %bb, label %dec_label_pc_29b38

bb:                                               ; preds = %dec_label_pc_29b20
  %v1_29b36 = call i32 @function_29b3d()
  store i32 %v1_29b36, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_29b38

dec_label_pc_29b38:                               ; preds = %bb, %dec_label_pc_29b20
  %v2_29b36 = phi i32 [ %v1_29b36, %bb ], [ %v3_29b29, %dec_label_pc_29b20 ]
  ret i32 %v2_29b36
}

define i32 @function_29b3d() local_unnamed_addr {
dec_label_pc_29b3d:
  %v0_29b3e = load i32, i32* @eax, align 8
  ret i32 %v0_29b3e
}

define i32 @_ZNSaISsEC1ISt13_Rb_tree_nodeISsEEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29b40:
  %v1_29b63 = call i32 @unknown_56ff0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_29b72 = call i32 @function_29b79()
  ret i32 %v1_29b72
}

define i32 @function_29b79() local_unnamed_addr {
dec_label_pc_29b79:
  %v0_29b7a = load i32, i32* @eax, align 8
  ret i32 %v0_29b7a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISsEE10deallocateEPS2_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29b7c:
  ret i32 %arg2
}

define i32 @function_29bba() local_unnamed_addr {
dec_label_pc_29bba:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29bba = load i32, i32* %ecx.global-to-local, align 4
  %v1_29bba = add i32 %v0_29bba, -1
  store i32 %v1_29bba, i32* %ecx.global-to-local, align 4
  %v0_29bbc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29bbc
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29bbe:
  store i32 0, i32* @eax, align 8
  %v3_29be5 = call i32 @function_29bec(i32 %arg2, i32 %arg1)
  ret i32 %v3_29be5
}

define i32 @function_29bec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29bec:
  %v0_29bed = load i32, i32* @eax, align 8
  ret i32 %v0_29bed
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISsE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29bee:
  store i32 1073741823, i32* @eax, align 8
  %v2_29c14 = call i32 @function_29c1b(i32 %arg1)
  ret i32 %v2_29c14
}

define i32 @function_29c1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c1b:
  %v0_29c1c = load i32, i32* @eax, align 8
  ret i32 %v0_29c1c
}

define i32 @_ZSt10_ConstructISsSsEvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29c1d:
  store i32 0, i32* @eax, align 8
  %v2_29c4b = call i32 @function_2f10d(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 %arg1)
  %v1_29c52 = icmp eq i32 %v2_29c4b, 0
  br i1 %v1_29c52, label %bb, label %dec_label_pc_29c56

bb:                                               ; preds = %dec_label_pc_29c1d
  %v1_29c54 = call i32 @function_29c7f()
  br label %dec_label_pc_29c56

dec_label_pc_29c56:                               ; preds = %bb, %dec_label_pc_29c1d
  ret i32 %arg2
}

define i32 @function_29c65() local_unnamed_addr {
dec_label_pc_29c65:
  %v0_29c65 = call i32 @function_29c7f()
  ret i32 %v0_29c65

; uselistorder directives
  uselistorder i32 ()* @function_29c7f, { 1, 0 }
}

define i32 @function_29c6f(i16 %arg1) local_unnamed_addr {
dec_label_pc_29c6f:
  %eax.global-to-local = alloca i32, align 4
  %v0_29c6f = load i32, i32* %eax.global-to-local, align 8
  %v11_29c6f = and i32 %v0_29c6f, -24
  store i32 %v11_29c6f, i32* %eax.global-to-local, align 8
  ret i32 %v11_29c6f

; uselistorder directives
  uselistorder i32 %v11_29c6f, { 1, 0 }
}

define i32 @function_29c7f() local_unnamed_addr {
dec_label_pc_29c7f:
  %v0_29c7f = load i32, i32* @ebp, align 4
  %v1_29c7f = add i32 %v0_29c7f, -28
  %v2_29c7f = inttoptr i32 %v1_29c7f to i32*
  %v3_29c7f = load i32, i32* %v2_29c7f, align 4
  %v2_29c82 = xor i32 %v3_29c7f, 30
  %v3_29c82 = icmp eq i32 %v2_29c82, 0
  store i32 %v2_29c82, i32* @eax, align 8
  br i1 %v3_29c82, label %bb, label %dec_label_pc_29c8b

bb:                                               ; preds = %dec_label_pc_29c7f
  %v1_29c89 = call i32 @function_29c90()
  br label %dec_label_pc_29c8b

dec_label_pc_29c8b:                               ; preds = %bb, %dec_label_pc_29c7f
  %v2_29c89 = phi i32 [ %v1_29c89, %bb ], [ %v2_29c82, %dec_label_pc_29c7f ]
  ret i32 %v2_29c89
}

define i32 @function_29c90() local_unnamed_addr {
dec_label_pc_29c90:
  %v0_29c97 = load i32, i32* @eax, align 8
  ret i32 %v0_29c97
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c98:
  ret i32 0
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29cc2:
  %v1_29ce5 = call i32 @unknown_5719c(i32 %arg2)
  %v2_29cf4 = call i32 @unknown_571ca(i32 %arg1, i32 %v1_29ce5)
  store i32 %arg1, i32* @eax, align 8
  %v1_29d06 = call i32 @function_29d0d()
  ret i32 %v1_29d06

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29d0d() local_unnamed_addr {
dec_label_pc_29d0d:
  %v0_29d0e = load i32, i32* @eax, align 8
  ret i32 %v0_29d0e
}

define i32 @_ZNSaISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d12:
  %v1_29d2f = call i32 @unknown_57256(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_29d3e = call i32 @function_29d45()
  ret i32 %v1_29d3e
}

define i32 @function_29d45() local_unnamed_addr {
dec_label_pc_29d45:
  %v0_29d46 = load i32, i32* @eax, align 8
  ret i32 %v0_29d46
}

define i32 @_ZSt11__addressofISt4pairIKSsSsEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d47:
  store i32 %arg1, i32* @eax, align 8
  %v2_29d6b = call i32 @function_29d72(i32 %arg1)
  ret i32 %v2_29d6b
}

define i32 @function_29d72(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d72:
  %v0_29d73 = load i32, i32* @eax, align 8
  ret i32 %v0_29d73
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEE7destroyEPS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d74:
  %v1_29d97 = call i32 @unknown_3f776(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_29da6 = call i32 @function_29dad()
  ret i32 %v1_29da6
}

define i32 @function_29dad() local_unnamed_addr {
dec_label_pc_29dad:
  %v0_29dae = load i32, i32* @eax, align 8
  ret i32 %v0_29dae
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29db0:
  %v3_29de2 = call i32 @unknown_5731e(i32 %arg1, i32 %arg2, i32 1)
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29dfa:
  store i32 0, i32* @eax, align 8
  %v2_29e1b = call i32 @function_29e22(i32 %arg1)
  ret i32 %v2_29e1b
}

define i32 @function_29e22(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e22:
  %v0_29e23 = load i32, i32* @eax, align 8
  ret i32 %v0_29e23
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e24:
  %v1_29e47 = call i32 @unknown_573d4(i32 %arg2)
  %v2_29e56 = call i32 @unknown_57402(i32 %arg1, i32 %v1_29e47)
  store i32 %arg1, i32* @eax, align 8
  %v1_29e68 = call i32 @function_29e6f()
  ret i32 %v1_29e68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29e6f() local_unnamed_addr {
dec_label_pc_29e6f:
  %v4_29e6f = load i32, i32* @eax, align 8
  ret i32 %v4_29e6f
}

define i32 @function_29e70(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e70:
  %v0_29e70 = load i32, i32* @eax, align 8
  ret i32 %v0_29e70
}

define i32 @_ZNSaISt4pairIKSsSt6vectorISsSaISsEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e74:
  %v1_29e91 = call i32 @unknown_5748e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_29ea0 = call i32 @function_29ea7()
  ret i32 %v1_29ea0
}

define i32 @function_29ea7() local_unnamed_addr {
dec_label_pc_29ea7:
  %v0_29ea8 = load i32, i32* @eax, align 8
  ret i32 %v0_29ea8
}

define i32 @_ZSt11__addressofISt4pairIKSsSt6vectorISsSaISsEEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ea9:
  store i32 %arg1, i32* @eax, align 8
  %v2_29ecd = call i32 @function_29ed4(i32 %arg1)
  ret i32 %v2_29ecd
}

define i32 @function_29ed4(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ed4:
  %v0_29ed5 = load i32, i32* @eax, align 8
  ret i32 %v0_29ed5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSt6vectorISsSaISsEEEE7destroyEPS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29ed6:
  %v1_29ef9 = call i32 @unknown_3fb06(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_29f08 = call i32 @function_29f0f()
  ret i32 %v1_29f08
}

define i32 @function_29f0f() local_unnamed_addr {
dec_label_pc_29f0f:
  %v0_29f10 = load i32, i32* @eax, align 8
  ret i32 %v0_29f10
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29f12:
  %v3_29f44 = call i32 @unknown_57556(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  %v1_29f53 = call i32 @function_29f5a()
  ret i32 %v1_29f53
}

define i32 @function_29f5a() local_unnamed_addr {
dec_label_pc_29f5a:
  %v0_29f5b = load i32, i32* @eax, align 8
  ret i32 %v0_29f5b
}

define i32 @_ZNSaIxEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29f5c:
  %v1_29f79 = call i32 @unknown_575e2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_29f88 = call i32 @function_29f8f()
  ret i32 %v1_29f88
}

define i32 @function_29f8f() local_unnamed_addr {
dec_label_pc_29f8f:
  %v0_29f90 = load i32, i32* @eax, align 8
  ret i32 %v0_29f90
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29f91:
  %v1_29fbc = call i32 @unknown_540b6(i32 %arg3)
  %v1_29fc9 = call i32 @unknown_540b6(i32 %arg2)
  %v1_29fd6 = call i32 @unknown_540b6(i32 %arg1)
  %v3_29fe6 = call i32 @unknown_57641(i32 %v1_29fd6, i32 %v1_29fc9, i32 %v1_29fbc)
  store i32 %v3_29fe6, i32* @eax, align 8
  %v1_29ff5 = call i32 @function_29ffc()
  ret i32 %v1_29ff5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_540b6, { 2, 1, 0 }
}

define i32 @function_29ffc() local_unnamed_addr {
dec_label_pc_29ffc:
  %v0_2a002 = load i32, i32* @eax, align 8
  ret i32 %v0_2a002
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a003:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 8
  %v3_2a035 = call i32 @function_2a03c(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2a035
}

define i32 @function_2a03c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a03c:
  %v0_2a03d = load i32, i32* @eax, align 8
  ret i32 %v0_2a03d
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a040:
  ret i32 30
}

define i32 @function_2a052(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a052:
  %v0_2a052 = load i32, i32* @eax, align 8
  %v1_2a052 = load i32, i32* @ebp, align 4
  %v2_2a052 = add i32 %v1_2a052, -12
  %v3_2a052 = inttoptr i32 %v2_2a052 to i32*
  store i32 %v0_2a052, i32* %v3_2a052, align 4
  %v0_2a057 = load i32, i32* @ebp, align 4
  %v1_2a057 = add i32 %v0_2a057, -28
  %v2_2a057 = inttoptr i32 %v1_2a057 to i32*
  %v3_2a057 = load i32, i32* %v2_2a057, align 4
  %v1_2a05d = call i32 @unknown_57743(i32 %v3_2a057)
  store i32 %v1_2a05d, i32* @eax, align 8
  %v0_2a062 = load i32, i32* @ebp, align 4
  %v1_2a062 = add i32 %v0_2a062, -12
  %v2_2a062 = inttoptr i32 %v1_2a062 to i32*
  %v3_2a062 = load i32, i32* %v2_2a062, align 4
  %v3_2a065 = icmp eq i32 %v3_2a062, 30
  br i1 %v3_2a065, label %bb, label %dec_label_pc_2a06e

bb:                                               ; preds = %dec_label_pc_2a052
  %v1_2a06c = call i32 @function_2a073()
  br label %dec_label_pc_2a06e

dec_label_pc_2a06e:                               ; preds = %bb, %dec_label_pc_2a052
  %v2_2a06c = phi i32 [ %v1_2a06c, %bb ], [ %v1_2a05d, %dec_label_pc_2a052 ]
  ret i32 %v2_2a06c
}

define i32 @function_2a073() local_unnamed_addr {
dec_label_pc_2a073:
  %v0_2a074 = load i32, i32* @eax, align 8
  ret i32 %v0_2a074
}

define i32 @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a075:
  %v3_2a0b0 = call i32 @unknown_54b37(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2a0b0, i32* @eax, align 8
  %v1_2a0bf = call i32 @function_2a0c6()
  ret i32 %v1_2a0bf
}

define i32 @function_2a0c6() local_unnamed_addr {
dec_label_pc_2a0c6:
  %v0_2a0c7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a0c7
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEEvT_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a0c8:
  store i32 0, i32* @eax, align 8
  %v3_2a0ef = call i32 @function_2a0f6(i32 %arg2, i32 %arg1)
  ret i32 %v3_2a0ef
}

define i32 @function_2a0f6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a0f6:
  %v0_2a0f7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a0f7
}

define i32 @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a0f8:
  store i32 %arg1, i32* @eax, align 8
  %v2_2a11c = call i32 @function_2a123(i32 %arg1)
  ret i32 %v2_2a11c
}

define i32 @function_2a123(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a123:
  %v0_2a124 = load i32, i32* @eax, align 8
  ret i32 %v0_2a124
}

define i32 @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a125:
  %v1_2a142 = call i32 @unknown_5421d(i32 %arg1)
  ret i32 %v1_2a142
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPxS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a15a:
  %v3_2a191 = call i32 @unknown_495de(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2a191, i32* @eax, align 8
  %v1_2a1a0 = call i32 @function_2a1a7()
  ret i32 %v1_2a1a0
}

define i32 @function_2a1a7() local_unnamed_addr {
dec_label_pc_2a1a7:
  %v0_2a1a8 = load i32, i32* @eax, align 8
  ret i32 %v0_2a1a8
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a1a9:
  %v10_2a1c0 = icmp eq i32 %arg1, 0
  %v1_2a1c4 = zext i1 %v10_2a1c0 to i32
  ret i32 %v1_2a1c4
}

define i32 @_ZNSt10_Iter_baseIPSsLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a1da:
  store i32 %arg1, i32* @eax, align 8
  %v2_2a1fe = call i32 @function_2a205(i32 %arg1)
  ret i32 %v2_2a1fe
}

define i32 @function_2a205(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a205:
  %v0_2a206 = load i32, i32* @eax, align 8
  ret i32 %v0_2a206
}

define i32 @_ZSt12__niter_baseIPSsENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a207:
  %v1_2a224 = call i32 @unknown_543e1(i32 %arg1)
  store i32 %v1_2a224, i32* @eax, align 8
  %v1_2a233 = call i32 @function_2a23a()
  ret i32 %v1_2a233
}

define i32 @function_2a23a() local_unnamed_addr {
dec_label_pc_2a23a:
  %v0_2a23b = load i32, i32* @eax, align 8
  ret i32 %v0_2a23b
}

define i32 @_ZSt22__copy_move_backward_aILb0EPSsS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a23c:
  %v3_2a277 = call i32 @unknown_57976(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2a277, i32* @eax, align 8
  %v1_2a286 = call i32 @function_2a28d()
  ret i32 %v1_2a286
}

define i32 @function_2a28d() local_unnamed_addr {
dec_label_pc_2a28d:
  %v0_2a28e = load i32, i32* @eax, align 8
  ret i32 %v0_2a28e
}

define i32 @_ZSt18uninitialized_copyIPSsS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a28f:
  ret i32 %arg3
}

define i32 @function_2a2a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a2a9 = load i32, i32* @eax, align 8
  %v1_2a2a9 = trunc i32 %v0_2a2a9 to i8
  %v2_2a2a9 = load i1, i1* @cf, align 1
  %v3_2a2a9 = zext i1 %v2_2a2a9 to i8
  %v4_2a2a9 = add i8 %v3_2a2a9, %v1_2a2a9
  %v22_2a2a9 = zext i8 %v4_2a2a9 to i32
  %v24_2a2a9 = and i32 %v0_2a2a9, -256
  %v25_2a2a9 = or i32 %v22_2a2a9, %v24_2a2a9
  store i32 %v25_2a2a9, i32* %eax.global-to-local, align 8
  %v1_2a2ab = inttoptr i32 %v25_2a2a9 to i8*
  %v2_2a2ab = load i8, i8* %v1_2a2ab, align 1
  %v5_2a2ab = add i8 %v2_2a2ab, %v4_2a2a9
  store i8 %v5_2a2ab, i8* %v1_2a2ab, align 1
  %v0_2a2ad = load i32, i32* %eax.global-to-local, align 8
  %v1_2a2ad = load i32, i32* @ebp, align 4
  %v2_2a2ad = add i32 %v1_2a2ad, -12
  %v3_2a2ad = inttoptr i32 %v2_2a2ad to i32*
  store i32 %v0_2a2ad, i32* %v3_2a2ad, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2a2b2 = load i32, i32* @ebp, align 4
  %v1_2a2b2 = add i32 %v0_2a2b2, -36
  %v2_2a2b2 = inttoptr i32 %v1_2a2b2 to i32*
  %v3_2a2b2 = load i32, i32* %v2_2a2b2, align 4
  store i32 %v3_2a2b2, i32* %eax.global-to-local, align 8
  %v1_2a2b9 = add i32 %v0_2a2b2, -32
  %v2_2a2b9 = inttoptr i32 %v1_2a2b9 to i32*
  %v3_2a2b9 = load i32, i32* %v2_2a2b9, align 4
  store i32 %v3_2a2b9, i32* %eax.global-to-local, align 8
  %v1_2a2c0 = add i32 %v0_2a2b2, -28
  %v2_2a2c0 = inttoptr i32 %v1_2a2c0 to i32*
  %v3_2a2c0 = load i32, i32* %v2_2a2c0, align 4
  store i32 %v3_2a2c0, i32* %eax.global-to-local, align 8
  %v3_2a2c6 = call i32 @unknown_57a3f(i32 %v3_2a2c0, i32 %v3_2a2b9, i32 %v3_2a2b2)
  store i32 %v3_2a2c6, i32* @eax, align 8
  %v0_2a2cb = load i32, i32* @ebp, align 4
  %v1_2a2cb = add i32 %v0_2a2cb, -12
  %v2_2a2cb = inttoptr i32 %v1_2a2cb to i32*
  %v3_2a2cb = load i32, i32* %v2_2a2cb, align 4
  %v3_2a2ce = icmp eq i32 %v3_2a2cb, 30
  br i1 %v3_2a2ce, label %bb, label %dec_label_pc_2a2d7

bb:                                               ; preds = %dec_label_pc_2a2a6
  %v1_2a2d5 = call i32 @function_2a2dc()
  store i32 %v1_2a2d5, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2a2d7

dec_label_pc_2a2d7:                               ; preds = %bb, %dec_label_pc_2a2a6
  %v2_2a2d5 = phi i32 [ %v1_2a2d5, %bb ], [ %v3_2a2c6, %dec_label_pc_2a2a6 ]
  ret i32 %v2_2a2d5
}

define i32 @function_2a2dc() local_unnamed_addr {
dec_label_pc_2a2dc:
  %v0_2a2dd = load i32, i32* @eax, align 8
  ret i32 %v0_2a2dd
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2de:
  %v1_2a2f8 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2a2f8, i32* @eax, align 8
  %v2_2a305 = call i32 @function_2a30c(i32 %arg1)
  ret i32 %v2_2a305
}

define i32 @function_2a30c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a30c:
  %v0_2a30d = load i32, i32* @eax, align 8
  ret i32 %v0_2a30d
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a30e:
  %stack_var_-17 = alloca i32, align 4
  %v2_2a332 = call i32 @unknown_57b66(i32 %arg1)
  %v1_2a33d = add i32 %v2_2a332, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2a343 = call i32 @unknown_54055(i32 %v1_2a33d)
  %v2_2a34a = ptrtoint i32* %stack_var_-17 to i32
  %v3_2a357 = call i32 @unknown_53fd0(i32 %v2_2a34a, i32 %arg1)
  %v4_2a370 = call i32 @unknown_57c24(i32 %v2_2a34a, i32 %v2_2a343, i32 %arg2)
  %v1_2a37b = call i32 @unknown_54020(i32 %v2_2a34a)
  store i32 %v2_2a332, i32* @eax, align 8
  %v1_2a38d = call i32 @function_2a3d5()
  store i32 %v1_2a38d, i32* @eax, align 8
  %v0_2a38f = call i32 @function_2a3d0()
  ret i32 %v0_2a38f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a392() local_unnamed_addr {
dec_label_pc_2a392:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a392 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a392
}

define i32 @function_2a3c0() local_unnamed_addr {
dec_label_pc_2a3c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a3c0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a3c0
}

define i32 @function_2a3d0() local_unnamed_addr {
dec_label_pc_2a3d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a3d5() local_unnamed_addr {
dec_label_pc_2a3d5:
  %v0_2a3d9 = load i32, i32* @eax, align 8
  ret i32 %v0_2a3d9
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a3da:
  ret i32 %arg2
}

define i32 @function_2a3fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a3fc:
  %v0_2a401 = load i32, i32* @ebp, align 4
  %v1_2a401 = add i32 %v0_2a401, -28
  %v2_2a401 = inttoptr i32 %v1_2a401 to i32*
  %v3_2a401 = load i32, i32* %v2_2a401, align 4
  %v1_2a407 = call i32 @unknown_4f13a(i32 %v3_2a401)
  %v0_2a40c = load i32, i32* @ebp, align 4
  %v1_2a40c = add i32 %v0_2a40c, -28
  %v2_2a40c = inttoptr i32 %v1_2a40c to i32*
  %v3_2a40c = load i32, i32* %v2_2a40c, align 4
  ret i32 %v3_2a40c
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKSsSsEEbEC1ERKS3_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a424:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_2a44d = inttoptr i32 %arg2 to i32*
  %v2_2a44d = load i32, i32* %v1_2a44d, align 4
  store i32 %v2_2a44d, i32* %arg1, align 4
  %v2_2a454 = load i8, i8* %tmp103, align 1
  %v3_2a45a = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_2a45a = inttoptr i32 %v3_2a45a to i8*
  store i8 %v2_2a454, i8* %v4_2a45a, align 1
  store i32 0, i32* @eax, align 8
  %v5_2a467 = call i32 @function_2a46e(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_2a467
}

define i32 @function_2a46e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a46e:
  %v0_2a46f = load i32, i32* @eax, align 8
  ret i32 %v0_2a46f
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a470:
  %v2_2a48a = load i32, i32* %arg1, align 4
  ret i32 %v2_2a48a
}

define i32 @function_2a4ac() local_unnamed_addr {
dec_label_pc_2a4ac:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a4ac = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a4ac = add i32 %v0_2a4ac, -1
  store i32 %v1_2a4ac, i32* %ecx.global-to-local, align 4
  %v0_2a4ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a4ae
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4af:
  %stack_var_-17 = alloca i32, align 4
  %v1_2a4cc = call i32 @unknown_57e46(i32 %arg1)
  %v2_2a4d5 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2a4db = call i32 @unknown_4f7c9(i32 %v2_2a4d5, i32 %v1_2a4cc)
  store i32 %v2_2a4db, i32* @eax, align 8
  %v1_2a4ea = call i32 @function_2a4f1()
  ret i32 %v1_2a4ea
}

define i32 @function_2a4f1() local_unnamed_addr {
dec_label_pc_2a4f1:
  %v0_2a4f2 = load i32, i32* @eax, align 8
  ret i32 %v0_2a4f2
}

define i32 @_ZNSaISsEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4f4:
  %v1_2a511 = call i32 @unknown_579a4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2a520 = call i32 @function_2a527()
  ret i32 %v1_2a520
}

define i32 @function_2a527() local_unnamed_addr {
dec_label_pc_2a527:
  %v0_2a528 = load i32, i32* @eax, align 8
  ret i32 %v0_2a528
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a529:
  %v1_2a543 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2a543, i32* @eax, align 8
  %v2_2a550 = call i32 @function_2a557(i32 %arg1)
  ret i32 %v2_2a550
}

define i32 @function_2a557(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a557:
  %v0_2a558 = load i32, i32* @eax, align 8
  ret i32 %v0_2a558
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE14_M_create_nodeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a55a:
  %stack_var_-17 = alloca i32, align 4
  %v2_2a57e = call i32 @unknown_57f22(i32 %arg1)
  %v1_2a589 = add i32 %v2_2a57e, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2a58f = call i32 @unknown_54403(i32 %v1_2a589)
  %v2_2a596 = ptrtoint i32* %stack_var_-17 to i32
  %v3_2a5a3 = call i32 @unknown_5437e(i32 %v2_2a596, i32 %arg1)
  %v4_2a5bc = call i32 @unknown_57fe0(i32 %v2_2a596, i32 %v2_2a58f, i32 %arg2)
  %v1_2a5c7 = call i32 @unknown_543ce(i32 %v2_2a596)
  store i32 %v2_2a57e, i32* @eax, align 8
  %v1_2a5d9 = call i32 @function_2a621()
  store i32 %v1_2a5d9, i32* @eax, align 8
  %v0_2a5db = call i32 @function_2a61c()
  ret i32 %v0_2a5db

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a5de() local_unnamed_addr {
dec_label_pc_2a5de:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a5de = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a5de
}

define i32 @function_2a60c() local_unnamed_addr {
dec_label_pc_2a60c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a60c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a60c
}

define i32 @function_2a61c() local_unnamed_addr {
dec_label_pc_2a61c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a621() local_unnamed_addr {
dec_label_pc_2a621:
  %v0_2a625 = load i32, i32* @eax, align 8
  ret i32 %v0_2a625
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a626:
  %v1_2a646 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2a646 = inttoptr i32 %v1_2a646 to i32*
  %v3_2a646 = load i32, i32* %v2_2a646, align 4
  %v2_2a653 = call i32 @unknown_4f872(i32 %arg1, i32 %v3_2a646)
  store i32 %arg1, i32* @eax, align 8
  %v1_2a665 = call i32 @function_2a66c()
  ret i32 %v1_2a665

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a66c() local_unnamed_addr {
dec_label_pc_2a66c:
  %v0_2a66d = load i32, i32* @eax, align 8
  ret i32 %v0_2a66d
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKSsSt6vectorISsSaISsEEEEbEC1ERKS6_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a670:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_2a699 = inttoptr i32 %arg2 to i32*
  %v2_2a699 = load i32, i32* %v1_2a699, align 4
  store i32 %v2_2a699, i32* %arg1, align 4
  %v2_2a6a0 = load i8, i8* %tmp103, align 1
  %v3_2a6a6 = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_2a6a6 = inttoptr i32 %v3_2a6a6 to i8*
  store i8 %v2_2a6a0, i8* %v4_2a6a6, align 1
  store i32 0, i32* @eax, align 8
  %v5_2a6b3 = call i32 @function_2a6ba(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_2a6b3
}

define i32 @function_2a6ba(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a6ba:
  %v0_2a6bb = load i32, i32* @eax, align 8
  ret i32 %v0_2a6bb
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSt6vectorISsSaISsEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a6bc:
  %v2_2a6d6 = load i32, i32* %arg1, align 4
  ret i32 %v2_2a6d6
}

define i32 @function_2a6f8() local_unnamed_addr {
dec_label_pc_2a6f8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a6f8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a6f8 = add i32 %v0_2a6f8, -1
  store i32 %v1_2a6f8, i32* %ecx.global-to-local, align 4
  %v0_2a6fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a6fa
}

define i32 @_ZN9__gnu_cxx17__is_null_pointerINS_17__normal_iteratorIPcSsEEEEbT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a6fb:
  store i32 0, i32* @eax, align 8
  %v2_2a721 = call i32 @function_2a728(i32 %arg1)
  ret i32 %v2_2a721
}

define i32 @function_2a728(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a728:
  %v0_2a729 = load i32, i32* @eax, align 8
  ret i32 %v0_2a729
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPcSsEEENSt15iterator_traitsIT_E15difference_typeES5_S5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a72a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2a748 = ptrtoint i32* %stack_var_-37 to i32
  %v2_2a74b = ptrtoint i32* %stack_var_-32 to i32
  %v2_2a755 = call i32 @unknown_42bab(i32 %v2_2a748, i32 %v2_2a74b)
  %v0_2a75d = load i32, i32* %ebx.global-to-local, align 4
  %v3_2a768 = load i32, i32* %stack_var_-32, align 4
  %v3_2a76e = call i32 @unknown_58231(i32 %v3_2a768, i32 %arg2, i32 %v0_2a75d)
  store i32 %v3_2a76e, i32* @eax, align 8
  %v1_2a77d = call i32 @function_2a784()
  ret i32 %v1_2a77d
}

define i32 @function_2a784() local_unnamed_addr {
dec_label_pc_2a784:
  %v0_2a788 = load i32, i32* @eax, align 8
  ret i32 %v0_2a788
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a78a:
  %v3_2a7b7 = call i32 @unknown_582da(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2a7b7, i32* @eax, align 8
  %v1_2a7c6 = call i32 @function_2a7cd()
  ret i32 %v1_2a7c6
}

define i32 @function_2a7cd() local_unnamed_addr {
dec_label_pc_2a7cd:
  %v0_2a7ce = load i32, i32* @eax, align 8
  ret i32 %v0_2a7ce
}

define i32 @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEEC1ES2_S5_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a7d0:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v1_2a7fa = call i32 @function_3a9e6(i32 %tmp103)
  store i32 ptrtoint (%vtable_38a48_type* @global_var_38a48.2568 to i32), i32* %arg1, align 4
  %v2_2a80e = add i32 %tmp103, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2a80e = inttoptr i32 %v2_2a80e to i32*
  store i32 %arg2, i32* %v3_2a80e, align 4
  store i32 0, i32* @eax, align 8
  %v1_2a81b = call i32 @function_2a822()
  ret i32 %v1_2a81b

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_2a822() local_unnamed_addr {
dec_label_pc_2a822:
  %v0_2a823 = load i32, i32* @eax, align 8
  ret i32 %v0_2a823
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI8CNetAddrEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a824:
  store i32 0, i32* @eax, align 8
  %v2_2a845 = call i32 @function_2a84c(i32 %arg1)
  ret i32 %v2_2a845
}

define i32 @function_2a84c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a84c:
  %v0_2a84d = load i32, i32* @eax, align 8
  ret i32 %v0_2a84d
}

define i32 @_ZNKSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a84e:
  store i32 %arg1, i32* @eax, align 8
  %v2_2a872 = call i32 @function_2a879(i32 %arg1)
  ret i32 %v2_2a872
}

define i32 @function_2a879(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a879:
  %v0_2a87a = load i32, i32* @eax, align 8
  ret i32 %v0_2a87a
}

define i32 @_ZNSaI8CNetAddrEC1ISt13_Rb_tree_nodeIS_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a87c:
  %v1_2a89f = call i32 @unknown_58432(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2a8ae = call i32 @function_2a8b5()
  ret i32 %v1_2a8ae
}

define i32 @function_2a8b5() local_unnamed_addr {
dec_label_pc_2a8b5:
  %v0_2a8b6 = load i32, i32* @eax, align 8
  ret i32 %v0_2a8b6
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CNetAddrED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8b8:
  store i32 0, i32* @eax, align 8
  %v2_2a8d9 = call i32 @function_2a8e0(i32 %arg1)
  ret i32 %v2_2a8d9
}

define i32 @function_2a8e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8e0:
  %v0_2a8e1 = load i32, i32* @eax, align 8
  ret i32 %v0_2a8e1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI8CNetAddrEE10deallocateEPS3_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a8e2:
  ret i32 %arg2
}

define i32 @function_2a920() local_unnamed_addr {
dec_label_pc_2a920:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a920 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a920 = add i32 %v0_2a920, -1
  store i32 %v1_2a920, i32* %ecx.global-to-local, align 4
  %v0_2a922 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a922
}

define i32 @_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a924:
  %v3_2a951 = call i32 @unknown_58504(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2a951, i32* @eax, align 8
  %v1_2a960 = call i32 @function_2a967()
  ret i32 %v1_2a960
}

define i32 @function_2a967() local_unnamed_addr {
dec_label_pc_2a967:
  %v0_2a968 = load i32, i32* @eax, align 8
  ret i32 %v0_2a968
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CNetAddrE9constructEPS1_RKS1_() local_unnamed_addr {
dec_label_pc_2a96a:
  %eax.global-to-local = alloca i32, align 4
  %v17_2a96d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2a96d
}

define i32 @function_2a970(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a970:
  %edx.global-to-local = alloca i32, align 4
  %v0_2a970 = load i32, i32* @ebp, align 4
  %v1_2a970 = add i32 %v0_2a970, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2a970 = inttoptr i32 %v1_2a970 to i32*
  %v3_2a970 = load i32, i32* %v2_2a970, align 4
  %v2_2a973 = add i32 %v0_2a970, -28
  %v3_2a973 = inttoptr i32 %v2_2a973 to i32*
  store i32 %v3_2a970, i32* %v3_2a973, align 4
  %v0_2a976 = load i32, i32* @ebp, align 4
  %v1_2a976 = add i32 %v0_2a976, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2a976 = inttoptr i32 %v1_2a976 to i32*
  %v3_2a976 = load i32, i32* %v2_2a976, align 4
  %v2_2a979 = add i32 %v0_2a976, -32
  %v3_2a979 = inttoptr i32 %v2_2a979 to i32*
  store i32 %v3_2a976, i32* %v3_2a979, align 4
  %v0_2a97c = load i32, i32* @ebp, align 4
  %v1_2a97c = add i32 %v0_2a97c, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2a97c = inttoptr i32 %v1_2a97c to i32*
  %v3_2a97c = load i32, i32* %v2_2a97c, align 4
  %v2_2a97f = add i32 %v0_2a97c, -36
  %v3_2a97f = inttoptr i32 %v2_2a97f to i32*
  store i32 %v3_2a97c, i32* %v3_2a97f, align 4
  %v1_2a988 = load i32, i32* @ebp, align 4
  %v2_2a988 = add i32 %v1_2a988, -12
  %v3_2a988 = inttoptr i32 %v2_2a988 to i32*
  store i32 30, i32* %v3_2a988, align 4
  %v0_2a98d = load i32, i32* @ebp, align 4
  %v1_2a98d = add i32 %v0_2a98d, -32
  %v2_2a98d = inttoptr i32 %v1_2a98d to i32*
  %v3_2a98d = load i32, i32* %v2_2a98d, align 4
  store i32 %v3_2a98d, i32* @eax, align 8
  %v3_2a99b = call i32 @function_2fe5a(i32 ptrtoint (i8** @global_var_10.2429 to i32), i32 %v3_2a98d)
  %v1_2a9a0 = icmp eq i32 %v3_2a99b, 0
  br i1 %v1_2a9a0, label %dec_label_pc_2a9bd, label %dec_label_pc_2a9a4

dec_label_pc_2a9a4:                               ; preds = %dec_label_pc_2a970
  %v0_2a9a4 = load i32, i32* @ebp, align 4
  %v1_2a9a4 = add i32 %v0_2a9a4, -36
  %v2_2a9a4 = inttoptr i32 %v1_2a9a4 to i32*
  %v3_2a9a4 = load i32, i32* %v2_2a9a4, align 4
  store i32 %v3_2a9a4, i32* %edx.global-to-local, align 8
  %v1_2a9a7 = inttoptr i32 %v3_2a9a4 to i32*
  %v2_2a9a7 = load i32, i32* %v1_2a9a7, align 4
  %v2_2a9a9 = inttoptr i32 %v3_2a99b to i32*
  store i32 %v2_2a9a7, i32* %v2_2a9a9, align 4
  %v0_2a9ab = load i32, i32* %edx.global-to-local, align 8
  %v1_2a9ab = add i32 %v0_2a9ab, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2a9ab = inttoptr i32 %v1_2a9ab to i32*
  %v3_2a9ab = load i32, i32* %v2_2a9ab, align 4
  %v2_2a9ae = add i32 %v3_2a99b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2a9ae = inttoptr i32 %v2_2a9ae to i32*
  store i32 %v3_2a9ab, i32* %v3_2a9ae, align 4
  %v0_2a9b1 = load i32, i32* %edx.global-to-local, align 8
  %v1_2a9b1 = add i32 %v0_2a9b1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2a9b1 = inttoptr i32 %v1_2a9b1 to i32*
  %v3_2a9b1 = load i32, i32* %v2_2a9b1, align 4
  %v2_2a9b4 = add i32 %v3_2a99b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2a9b4 = inttoptr i32 %v2_2a9b4 to i32*
  store i32 %v3_2a9b1, i32* %v3_2a9b4, align 4
  %v0_2a9b7 = load i32, i32* %edx.global-to-local, align 8
  %v1_2a9b7 = add i32 %v0_2a9b7, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2a9b7 = inttoptr i32 %v1_2a9b7 to i32*
  %v3_2a9b7 = load i32, i32* %v2_2a9b7, align 4
  store i32 %v3_2a9b7, i32* %edx.global-to-local, align 8
  %v2_2a9ba = add i32 %v3_2a99b, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2a9ba = inttoptr i32 %v2_2a9ba to i32*
  store i32 %v3_2a9b7, i32* %v3_2a9ba, align 4
  br label %dec_label_pc_2a9bd

dec_label_pc_2a9bd:                               ; preds = %dec_label_pc_2a9a4, %dec_label_pc_2a970
  %v0_2a9bd = load i32, i32* @ebp, align 4
  %v1_2a9bd = add i32 %v0_2a9bd, -12
  %v2_2a9bd = inttoptr i32 %v1_2a9bd to i32*
  %v3_2a9bd = load i32, i32* %v2_2a9bd, align 4
  %v2_2a9c0 = xor i32 %v3_2a9bd, 30
  %v3_2a9c0 = icmp eq i32 %v2_2a9c0, 0
  store i32 %v2_2a9c0, i32* @eax, align 8
  br i1 %v3_2a9c0, label %bb, label %dec_label_pc_2a9c9

bb:                                               ; preds = %dec_label_pc_2a9bd
  %v1_2a9c7 = call i32 @function_2a9ce()
  br label %dec_label_pc_2a9c9

dec_label_pc_2a9c9:                               ; preds = %bb, %dec_label_pc_2a9bd
  %v2_2a9c7 = phi i32 [ %v1_2a9c7, %bb ], [ %v2_2a9c0, %dec_label_pc_2a9bd ]
  ret i32 %v2_2a9c7
}

define i32 @function_2a9ce() local_unnamed_addr {
dec_label_pc_2a9ce:
  %v0_2a9cf = load i32, i32* @eax, align 8
  ret i32 %v0_2a9cf
}

define i32 @_ZSt4fillIPxxEvT_S1_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a9d0:
  %v1_2a9fa = call i32 @unknown_54af5(i32 %arg2)
  %v1_2aa07 = call i32 @unknown_54af5(i32 %arg1)
  %v3_2aa1a = call i32 @unknown_5860e(i32 %v1_2aa07, i32 %v1_2a9fa, i32 %arg3)
  store i32 0, i32* @eax, align 8
  %v1_2aa29 = call i32 @function_2aa30()
  ret i32 %v1_2aa29

; uselistorder directives
  uselistorder i32 (i32)* @unknown_54af5, { 1, 0 }
}

define i32 @function_2aa30() local_unnamed_addr {
dec_label_pc_2aa30:
  %v0_2aa35 = load i32, i32* @eax, align 8
  ret i32 %v0_2aa35
}

define i32 @_ZSt24__uninitialized_fill_n_aIPxjxxEvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2aa36:
  %v7_2aa73 = call i32 @unknown_586d9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2aa82 = call i32 @function_2aa89()
  ret i32 %v1_2aa82

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2aa89() local_unnamed_addr {
dec_label_pc_2aa89:
  %v0_2aa8a = load i32, i32* @eax, align 8
  ret i32 %v0_2aa8a
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aa8b:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2aaa2 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2aaa8 = call i32 @unknown_4c5d5(i32 %v2_2aaa2)
  %v1_2aaad = inttoptr i32 %v1_2aaa8 to i32*
  %v2_2aaad = load i32, i32* %v1_2aaad, align 4
  ret i32 %v2_2aaad
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2aac2:
  %v2_2aaed = sub i32 %arg2, %arg1
  %v2_2aaf1 = ashr i32 %v2_2aaed, ptrtoint (i32* @global_var_3.2378 to i32)
  %v3_2aaf1 = icmp eq i32 %v2_2aaf1, 0
  br i1 %v3_2aaf1, label %bb, label %dec_label_pc_2aafd

bb:                                               ; preds = %dec_label_pc_2aac2
  %v4_2aafb = call i32 @function_2ab19(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2aafd

dec_label_pc_2aafd:                               ; preds = %bb, %dec_label_pc_2aac2
  ret i32 %arg3
}

define i32 @function_2ab19(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ab19:
  %v0_2ab19 = load i32, i32* @ebp, align 4
  %v1_2ab19 = add i32 %v0_2ab19, -16
  %v2_2ab19 = inttoptr i32 %v1_2ab19 to i32*
  %v3_2ab19 = load i32, i32* %v2_2ab19, align 4
  %v2_2ab1c = shl i32 %v3_2ab19, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_2ab1f = add i32 %v0_2ab19, -36
  %v3_2ab1f = inttoptr i32 %v2_2ab1f to i32*
  %v4_2ab1f = load i32, i32* %v3_2ab1f, align 4
  %v5_2ab1f = add i32 %v4_2ab1f, %v2_2ab1c
  store i32 %v5_2ab1f, i32* @eax, align 8
  %v1_2ab22 = add i32 %v0_2ab19, -12
  %v2_2ab22 = inttoptr i32 %v1_2ab22 to i32*
  %v3_2ab22 = load i32, i32* %v2_2ab22, align 4
  store i1 false, i1* @of, align 1
  %v3_2ab25 = icmp eq i32 %v3_2ab22, 30
  br i1 %v3_2ab25, label %bb, label %dec_label_pc_2ab2e

bb:                                               ; preds = %dec_label_pc_2ab19
  %v1_2ab2c = call i32 @function_2ab33()
  br label %dec_label_pc_2ab2e

dec_label_pc_2ab2e:                               ; preds = %bb, %dec_label_pc_2ab19
  %v2_2ab2c = phi i32 [ %v1_2ab2c, %bb ], [ %v5_2ab1f, %dec_label_pc_2ab19 ]
  ret i32 %v2_2ab2c
}

define i32 @function_2ab33() local_unnamed_addr {
dec_label_pc_2ab33:
  %v0_2ab34 = load i32, i32* @eax, align 8
  ret i32 %v0_2ab34
}

define i32 @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ab35:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v2_2ab67 = call i32 @unknown_58827(i32 %arg1, i32 %arg2)
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v4_2abd5 = ptrtoint i32* %stack_var_-40 to i32
  %v2_2abd9 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2ab84 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2abdf117 = call i32 @unknown_5890d(i32 %v2_2abd9, i32 %v4_2abd5)
  %v4_2abe4118 = trunc i32 %v2_2abdf117 to i8
  %v5_2abe4119 = icmp eq i8 %v4_2abe4118, 0
  %v1_2abe6121 = icmp eq i1 %v5_2abe4119, false
  br i1 %v1_2abe6121, label %dec_label_pc_2ab74, label %dec_label_pc_2abe8

dec_label_pc_2ab74:                               ; preds = %dec_label_pc_2ab35, %dec_label_pc_2abc7
  %v1_2ab7a = call i32 @unknown_47061(i32 %v2_2abd9)
  %v1_2ab7f = inttoptr i32 %v1_2ab7a to i32*
  %v2_2ab7f = load i32, i32* %v1_2ab7f, align 4
  store i32 %v2_2ab7f, i32* %ebx.global-to-local, align 4
  %v1_2ab81 = add i32 %v1_2ab7a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ab81 = inttoptr i32 %v1_2ab81 to i32*
  %v3_2ab81 = load i32, i32* %v2_2ab81, align 4
  store i32 %v3_2ab81, i32* %esi.global-to-local, align 4
  %v1_2ab8a = call i32 @unknown_47061(i32 %v2_2ab84)
  %v1_2ab8f = add i32 %v1_2ab8a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ab8f = inttoptr i32 %v1_2ab8f to i32*
  %v3_2ab8f = load i32, i32* %v2_2ab8f, align 4
  %v1_2ab92 = inttoptr i32 %v1_2ab8a to i32*
  %v2_2ab92 = load i32, i32* %v1_2ab92, align 4
  %v0_2ab99 = load i32, i32* %esi.global-to-local, align 4
  %v5_2ab9b = icmp slt i32 %v0_2ab99, %v3_2ab8f
  br i1 %v5_2ab9b, label %dec_label_pc_2abae, label %dec_label_pc_2ab9d

dec_label_pc_2ab9d:                               ; preds = %dec_label_pc_2ab74
  %v8_2ab9f = icmp sgt i32 %v0_2ab99, %v3_2ab8f
  br i1 %v8_2ab9f, label %dec_label_pc_2abaa, label %dec_label_pc_2aba1

dec_label_pc_2aba1:                               ; preds = %dec_label_pc_2ab9d
  %v0_2aba1 = load i32, i32* %ebx.global-to-local, align 4
  %v7_2aba1 = icmp ult i32 %v0_2aba1, %v2_2ab92
  br i1 %v7_2aba1, label %dec_label_pc_2abae, label %dec_label_pc_2abaa

dec_label_pc_2abaa:                               ; preds = %dec_label_pc_2ab9d, %dec_label_pc_2aba1
  br label %dec_label_pc_2abc7

dec_label_pc_2abae:                               ; preds = %dec_label_pc_2aba1, %dec_label_pc_2ab74
  %v3_2abae = load i32, i32* %stack_var_-20, align 4
  %v3_2abbc = load i32, i32* %stack_var_-32, align 4
  %v3_2abc2 = call i32 @unknown_58961(i32 %v3_2abbc, i32 %arg2, i32 %v3_2abae)
  br label %dec_label_pc_2abc7

dec_label_pc_2abc7:                               ; preds = %dec_label_pc_2abaa, %dec_label_pc_2abae
  %v1_2abcd = call i32 @unknown_47027(i32 %v2_2abd9)
  %v2_2abdf = call i32 @unknown_5890d(i32 %v2_2abd9, i32 %v4_2abd5)
  %v4_2abe4 = trunc i32 %v2_2abdf to i8
  %v5_2abe4 = icmp eq i8 %v4_2abe4, 0
  %v1_2abe6 = icmp eq i1 %v5_2abe4, false
  br i1 %v1_2abe6, label %dec_label_pc_2ab74, label %dec_label_pc_2abe8

dec_label_pc_2abe8:                               ; preds = %dec_label_pc_2abc7, %dec_label_pc_2ab35
  store i32 0, i32* @eax, align 8
  %v1_2abf2 = call i32 @function_2abf9()
  ret i32 %v1_2abf2

; uselistorder directives
  uselistorder i32 %v2_2abd9, { 3, 1, 2, 0 }
  uselistorder i32 %v4_2abd5, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_47061, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5890d, { 1, 0 }
  uselistorder label %dec_label_pc_2abc7, { 1, 0 }
  uselistorder label %dec_label_pc_2abaa, { 1, 0 }
  uselistorder label %dec_label_pc_2ab74, { 1, 0 }
}

define i32 @function_2abf9() local_unnamed_addr {
dec_label_pc_2abf9:
  %v0_2abff = load i32, i32* @eax, align 8
  ret i32 %v0_2abff
}

define i32 @_ZSt9sort_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ac00:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2ac46 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2ac4a = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_2ac43

dec_label_pc_2ac1f:                               ; preds = %dec_label_pc_2ac43
  %v1_2ac25 = call i32 @unknown_58ad8(i32 %v2_2ac4a)
  %v3_2ac2a = load i32, i32* %stack_var_-36, align 4
  %v3_2ac38 = load i32, i32* %stack_var_-32, align 4
  %v3_2ac3e = call i32 @unknown_58a2c(i32 %v3_2ac38, i32 %v3_2ac2a, i32 %v3_2ac2a)
  br label %dec_label_pc_2ac43

dec_label_pc_2ac43:                               ; preds = %dec_label_pc_2ac1f, %dec_label_pc_2ac00
  %v2_2ac50 = call i32 @unknown_4c289(i32 %v2_2ac4a, i32 %v4_2ac46)
  %v1_2ac55 = add i32 %v2_2ac50, -1
  %tmp105 = sub i32 0, %v2_2ac50
  %v8_2ac55 = and i32 %v2_2ac50, %tmp105
  %v9_2ac55 = icmp slt i32 %v8_2ac55, 0
  %v10_2ac55 = icmp eq i32 %v1_2ac55, 0
  %v11_2ac55 = icmp slt i32 %v1_2ac55, 0
  %v3_2ac58 = icmp eq i1 %v11_2ac55, %v9_2ac55
  %v4_2ac58 = icmp eq i1 %v10_2ac55, false
  %v5_2ac58 = icmp eq i1 %v3_2ac58, %v4_2ac58
  %v5_2ac5b = icmp eq i1 %v5_2ac58, false
  %v1_2ac5d = icmp eq i1 %v5_2ac5b, false
  br i1 %v1_2ac5d, label %dec_label_pc_2ac1f, label %dec_label_pc_2ac5f

dec_label_pc_2ac5f:                               ; preds = %dec_label_pc_2ac43
  ret i32 30

; uselistorder directives
  uselistorder i32 %v1_2ac55, { 1, 0 }
  uselistorder i32 %v2_2ac50, { 1, 0, 2 }
  uselistorder i32 %v2_2ac4a, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
}

define i32 @function_2ac65(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ac65:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ac65 = load i32, i32* @eax, align 8
  %v1_2ac65 = trunc i32 %v0_2ac65 to i8
  %v2_2ac65 = load i1, i1* @cf, align 1
  %v3_2ac65 = zext i1 %v2_2ac65 to i8
  %v4_2ac65 = add i8 %v3_2ac65, %v1_2ac65
  %v22_2ac65 = zext i8 %v4_2ac65 to i32
  %v24_2ac65 = and i32 %v0_2ac65, -256
  %v25_2ac65 = or i32 %v22_2ac65, %v24_2ac65
  store i32 %v25_2ac65, i32* %eax.global-to-local, align 8
  %v1_2ac67 = inttoptr i32 %v25_2ac65 to i8*
  %v2_2ac67 = load i8, i8* %v1_2ac67, align 1
  %v5_2ac67 = add i8 %v2_2ac67, %v4_2ac65
  store i8 %v5_2ac67, i8* %v1_2ac67, align 1
  %v0_2ac71 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ac71
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmiERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ac72:
  ret i32 %arg1
}

define i32 @function_2acb7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2acb7:
  %v0_2acbb = load i32, i32* @ebp, align 4
  %v1_2acbb = add i32 %v0_2acbb, -28
  %v2_2acbb = inttoptr i32 %v1_2acbb to i32*
  %v3_2acbb = load i32, i32* %v2_2acbb, align 4
  store i32 %v3_2acbb, i32* @eax, align 8
  %v1_2acbe = add i32 %v0_2acbb, -12
  %v2_2acbe = inttoptr i32 %v1_2acbe to i32*
  %v3_2acbe = load i32, i32* %v2_2acbe, align 4
  %v3_2acc1 = icmp eq i32 %v3_2acbe, 30
  br i1 %v3_2acc1, label %bb, label %dec_label_pc_2acca

bb:                                               ; preds = %dec_label_pc_2acb7
  %v1_2acc8 = call i32 @function_2accf()
  br label %dec_label_pc_2acca

dec_label_pc_2acca:                               ; preds = %bb, %dec_label_pc_2acb7
  %v3_2acc8 = phi i32 [ %v1_2acc8, %bb ], [ %v3_2acbb, %dec_label_pc_2acb7 ]
  ret i32 %v3_2acc8
}

define i32 @function_2accf() local_unnamed_addr {
dec_label_pc_2accf:
  %v0_2acd0 = load i32, i32* @eax, align 8
  ret i32 %v0_2acd0
}

define i32 @_ZSt19__move_median_firstIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2acd3:
  ret i32 %arg3
}

define i32 @function_2acf2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2acf2:
  %v0_2acf2 = load i32, i32* @ecx, align 4
  %v1_2acf2 = add i32 %v0_2acf2, -1070468027
  %v2_2acf2 = inttoptr i32 %v1_2acf2 to i8*
  %v3_2acf2 = load i8, i8* %v2_2acf2, align 1
  %v5_2acf2 = trunc i32 %v0_2acf2 to i8
  %v6_2acf2 = add i8 %v3_2acf2, %v5_2acf2
  store i8 %v6_2acf2, i8* %v2_2acf2, align 1
  %v0_2acf8 = load i32, i32* @ebp, align 4
  %v1_2acf8 = add i32 %v0_2acf8, -28
  %v1_2acfe = call i32 @unknown_471ff(i32 %v1_2acf8)
  %v1_2ad03 = inttoptr i32 %v1_2acfe to i32*
  %v2_2ad03 = load i32, i32* %v1_2ad03, align 4
  store i32 %v2_2ad03, i32* @ebx, align 4
  %v0_2ad08 = load i32, i32* @ebp, align 4
  %v1_2ad08 = add i32 %v0_2ad08, -32
  %v1_2ad0e = call i32 @unknown_471ff(i32 %v1_2ad08)
  %v1_2ad16 = inttoptr i32 %v1_2ad0e to i32*
  %v2_2ad16 = load i32, i32* %v1_2ad16, align 4
  ret i32 %v2_2ad16
}

define i32 @function_2ad1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad1a:
  %cf.global-to-local = alloca i1, align 1
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v2_2ad1a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2ad1a = load i32, i32* @eax, align 8
  %v4_2ad1a = trunc i32 %v3_2ad1a to i8
  %v5_2ad1a = add i8 %v4_2ad1a, %v2_2ad1a
  %v21_2ad1a = inttoptr i32 %v3_2ad1a to i8*
  store i8 %v5_2ad1a, i8* %v21_2ad1a, align 1
  %v2_2ad1c = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_2ad1c = load i32, i32* @ebx, align 4
  %v4_2ad1c = lshr i32 %v3_2ad1c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_2ad1c = trunc i32 %v4_2ad1c to i8
  %v6_2ad1c = add i8 %v5_2ad1c, %v2_2ad1c
  %v11_2ad1c = icmp ult i8 %v6_2ad1c, %v2_2ad1c
  %v12_2ad1c = xor i8 %v6_2ad1c, %v2_2ad1c
  %v13_2ad1c = xor i8 %v6_2ad1c, %v5_2ad1c
  %v14_2ad1c = and i8 %v12_2ad1c, %v13_2ad1c
  %v15_2ad1c = icmp slt i8 %v14_2ad1c, 0
  store i1 %v11_2ad1c, i1* %cf.global-to-local, align 1
  store i1 %v15_2ad1c, i1* %of.global-to-local, align 1
  %v17_2ad1c = icmp slt i8 %v6_2ad1c, 0
  store i1 %v17_2ad1c, i1* %sf.global-to-local, align 1
  %v21_2ad1c = load i32, i32* @ecx, align 4
  %v22_2ad1c = inttoptr i32 %v21_2ad1c to i8*
  store i8 %v6_2ad1c, i8* %v22_2ad1c, align 1
  %v0_2ad1e = load i1, i1* %cf.global-to-local, align 1
  %v3_2ad1e = select i1 %v0_2ad1e, i32 255, i32 0
  %v4_2ad1e = load i32, i32* @eax, align 8
  %v5_2ad1e = and i32 %v4_2ad1e, -256
  %v6_2ad1e = or i32 %v5_2ad1e, %v3_2ad1e
  %v0_2ad1f = load i1, i1* %sf.global-to-local, align 1
  %v1_2ad1f = load i1, i1* %of.global-to-local, align 1
  %v2_2ad1f = icmp eq i1 %v0_2ad1f, %v1_2ad1f
  br i1 %v2_2ad1f, label %dec_label_pc_2ad21, label %dec_label_pc_2ad2e

dec_label_pc_2ad21:                               ; preds = %dec_label_pc_2ad1a
  %v0_2ad21 = load i32, i32* @esi, align 4
  %v1_2ad21 = load i32, i32* @edx, align 8
  %v2_2ad21 = sub i32 %v0_2ad21, %v1_2ad21
  %v7_2ad21 = icmp ult i32 %v0_2ad21, %v1_2ad21
  %v8_2ad21 = xor i32 %v1_2ad21, %v0_2ad21
  %v9_2ad21 = xor i32 %v2_2ad21, %v0_2ad21
  %v10_2ad21 = and i32 %v9_2ad21, %v8_2ad21
  %v11_2ad21 = icmp slt i32 %v10_2ad21, 0
  store i1 %v7_2ad21, i1* %cf.global-to-local, align 1
  store i1 %v11_2ad21, i1* %of.global-to-local, align 1
  %v13_2ad21 = icmp slt i32 %v2_2ad21, 0
  store i1 %v13_2ad21, i1* %sf.global-to-local, align 1
  %v8_2ad23 = icmp sgt i32 %v0_2ad21, %v1_2ad21
  br i1 %v8_2ad23, label %dec_label_pc_2ad29, label %dec_label_pc_2ad25

dec_label_pc_2ad25:                               ; preds = %dec_label_pc_2ad21
  %v0_2ad25 = load i32, i32* @ebx, align 4
  %v2_2ad25 = sub i32 %v0_2ad25, %v6_2ad1e
  %v7_2ad25 = icmp ult i32 %v0_2ad25, %v6_2ad1e
  %v8_2ad25 = xor i32 %v0_2ad25, %v4_2ad1e
  %v9_2ad25 = xor i32 %v2_2ad25, %v0_2ad25
  %v10_2ad25 = and i32 %v9_2ad25, %v8_2ad25
  %v11_2ad25 = icmp slt i32 %v10_2ad25, 0
  store i1 %v7_2ad25, i1* %cf.global-to-local, align 1
  store i1 %v11_2ad25, i1* %of.global-to-local, align 1
  %v13_2ad25 = icmp slt i32 %v2_2ad25, 0
  store i1 %v13_2ad25, i1* %sf.global-to-local, align 1
  br i1 %v7_2ad25, label %dec_label_pc_2ad2e, label %dec_label_pc_2ad29

dec_label_pc_2ad29:                               ; preds = %dec_label_pc_2ad25, %dec_label_pc_2ad21
  store i32 0, i32* @ecx, align 4
  br label %dec_label_pc_2ad2e

dec_label_pc_2ad2e:                               ; preds = %dec_label_pc_2ad1a, %dec_label_pc_2ad29, %dec_label_pc_2ad25
  %v0_2ad2e = load i32, i32* @ecx, align 4
  %v4_2ad2e = trunc i32 %v0_2ad2e to i8
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v6_2ad2e = icmp slt i8 %v4_2ad2e, 0
  store i1 %v6_2ad2e, i1* %sf.global-to-local, align 1
  %v0_2ad36 = load i32, i32* @ebp, align 4
  %v1_2ad36 = add i32 %v0_2ad36, -32
  %v1_2ad3c = call i32 @unknown_471ff(i32 %v1_2ad36)
  %v1_2ad41 = inttoptr i32 %v1_2ad3c to i32*
  %v2_2ad41 = load i32, i32* %v1_2ad41, align 4
  store i32 %v2_2ad41, i32* @ebx, align 4
  %v1_2ad43 = add i32 %v1_2ad3c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ad43 = inttoptr i32 %v1_2ad43 to i32*
  %v3_2ad43 = load i32, i32* %v2_2ad43, align 4
  store i32 %v3_2ad43, i32* %esi.global-to-local, align 4
  %v0_2ad46 = load i32, i32* @ebp, align 4
  %v1_2ad46 = add i32 %v0_2ad46, -36
  %v1_2ad4c = call i32 @unknown_471ff(i32 %v1_2ad46)
  %v1_2ad51 = add i32 %v1_2ad4c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ad51 = inttoptr i32 %v1_2ad51 to i32*
  %v3_2ad51 = load i32, i32* %v2_2ad51, align 4
  %v1_2ad54 = inttoptr i32 %v1_2ad4c to i32*
  %v2_2ad54 = load i32, i32* %v1_2ad54, align 4
  %v0_2ad5b = load i32, i32* %esi.global-to-local, align 4
  %v2_2ad5b = sub i32 %v0_2ad5b, %v3_2ad51
  %v7_2ad5b = icmp ult i32 %v0_2ad5b, %v3_2ad51
  %v8_2ad5b = xor i32 %v0_2ad5b, %v3_2ad51
  %v9_2ad5b = xor i32 %v2_2ad5b, %v0_2ad5b
  %v10_2ad5b = and i32 %v9_2ad5b, %v8_2ad5b
  %v11_2ad5b = icmp slt i32 %v10_2ad5b, 0
  store i1 %v7_2ad5b, i1* %cf.global-to-local, align 1
  store i1 %v11_2ad5b, i1* %of.global-to-local, align 1
  %v13_2ad5b = icmp slt i32 %v2_2ad5b, 0
  store i1 %v13_2ad5b, i1* %sf.global-to-local, align 1
  %v5_2ad5d = icmp slt i32 %v0_2ad5b, %v3_2ad51
  br i1 %v5_2ad5d, label %dec_label_pc_2ad6c, label %dec_label_pc_2ad5f

dec_label_pc_2ad5f:                               ; preds = %dec_label_pc_2ad2e
  store i1 %v7_2ad5b, i1* %cf.global-to-local, align 1
  store i1 %v11_2ad5b, i1* %of.global-to-local, align 1
  store i1 %v13_2ad5b, i1* %sf.global-to-local, align 1
  %v8_2ad61 = icmp sgt i32 %v0_2ad5b, %v3_2ad51
  br i1 %v8_2ad61, label %dec_label_pc_2ad67, label %dec_label_pc_2ad63

dec_label_pc_2ad63:                               ; preds = %dec_label_pc_2ad5f
  %v0_2ad63 = load i32, i32* @ebx, align 4
  %v2_2ad63 = sub i32 %v0_2ad63, %v2_2ad54
  %v7_2ad63 = icmp ult i32 %v0_2ad63, %v2_2ad54
  %v8_2ad63 = xor i32 %v0_2ad63, %v2_2ad54
  %v9_2ad63 = xor i32 %v2_2ad63, %v0_2ad63
  %v10_2ad63 = and i32 %v9_2ad63, %v8_2ad63
  %v11_2ad63 = icmp slt i32 %v10_2ad63, 0
  store i1 %v7_2ad63, i1* %cf.global-to-local, align 1
  store i1 %v11_2ad63, i1* %of.global-to-local, align 1
  %v13_2ad63 = icmp slt i32 %v2_2ad63, 0
  store i1 %v13_2ad63, i1* %sf.global-to-local, align 1
  br i1 %v7_2ad63, label %dec_label_pc_2ad6c, label %dec_label_pc_2ad67

dec_label_pc_2ad67:                               ; preds = %dec_label_pc_2ad63, %dec_label_pc_2ad5f
  br label %dec_label_pc_2ad6c

dec_label_pc_2ad6c:                               ; preds = %dec_label_pc_2ad67, %dec_label_pc_2ad63, %dec_label_pc_2ad2e
  ret i32 %v2_2ad54

; uselistorder directives
  uselistorder i32 %v2_2ad63, { 1, 0 }
  uselistorder i32 %v2_2ad5b, { 1, 0 }
  uselistorder i32 %v0_2ad5b, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_2ad54, { 1, 0, 3, 2 }
  uselistorder i32 %v3_2ad51, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_2ad25, { 1, 0 }
  uselistorder i32 %v2_2ad21, { 1, 0 }
  uselistorder i32 %v1_2ad21, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2ad21, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v6_2ad1e, { 1, 0 }
  uselistorder i8 %v6_2ad1c, { 2, 3, 0, 1, 4 }
  uselistorder i8 %v2_2ad1c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2ad2e, { 1, 2, 0 }
}

define i32 @function_2ad6d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ad6d:
  %esi.global-to-local = alloca i32, align 4
  %v0_2ad6d = load i32, i32* @ebp, align 4
  %v0_2ad6e = load i1, i1* @zf, align 1
  br i1 %v0_2ad6e, label %dec_label_pc_2ad87, label %dec_label_pc_2ad70

dec_label_pc_2ad70:                               ; preds = %dec_label_pc_2ad6d
  %v1_2ad70 = add i32 %v0_2ad6d, -32
  %v2_2ad70 = inttoptr i32 %v1_2ad70 to i32*
  %v3_2ad70 = load i32, i32* %v2_2ad70, align 4
  %v2_2ad73 = add i32 %v0_2ad6d, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 ptrtoint (i32* @global_var_4.2376 to i32))
  %v3_2ad73 = inttoptr i32 %v2_2ad73 to i32*
  store i32 %v3_2ad70, i32* %v3_2ad73, align 4
  %v0_2ad77 = load i32, i32* @ebp, align 4
  %v1_2ad77 = add i32 %v0_2ad77, -28
  %v2_2ad77 = inttoptr i32 %v1_2ad77 to i32*
  %v3_2ad77 = load i32, i32* %v2_2ad77, align 4
  %v1_2ad7a = load i32, i32* @esp, align 4
  %v2_2ad7a = inttoptr i32 %v1_2ad7a to i32*
  store i32 %v3_2ad77, i32* %v2_2ad7a, align 4
  %v2_2ad7d = call i32 @unknown_58be5(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2ae79

dec_label_pc_2ad87:                               ; preds = %dec_label_pc_2ad6d
  %v3_2ad6d = add i32 %v0_2ad6d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2ad87 = add i32 %v0_2ad6d, -28
  %v2_2ad8a = inttoptr i32 %v3_2ad6d to i32*
  store i32 %v1_2ad87, i32* %v2_2ad8a, align 4
  %v1_2ad8d = call i32 @unknown_471ff(i32 ptrtoint (i32* @1 to i32))
  %v1_2ad92 = inttoptr i32 %v1_2ad8d to i32*
  %v2_2ad92 = load i32, i32* %v1_2ad92, align 4
  store i32 %v2_2ad92, i32* @ebx, align 4
  %v1_2ad94 = add i32 %v1_2ad8d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ad94 = inttoptr i32 %v1_2ad94 to i32*
  %v3_2ad94 = load i32, i32* %v2_2ad94, align 4
  store i32 %v3_2ad94, i32* %esi.global-to-local, align 4
  %v0_2ad97 = load i32, i32* @ebp, align 4
  %v1_2ad97 = add i32 %v0_2ad97, -36
  %v1_2ad9a = load i32, i32* @esp, align 4
  %v2_2ad9a = inttoptr i32 %v1_2ad9a to i32*
  store i32 %v1_2ad97, i32* %v2_2ad9a, align 4
  %v1_2ad9d = call i32 @unknown_471ff(i32 ptrtoint (i32* @1 to i32))
  %v1_2ada2 = add i32 %v1_2ad9d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ada2 = inttoptr i32 %v1_2ada2 to i32*
  %v3_2ada2 = load i32, i32* %v2_2ada2, align 4
  %v1_2ada5 = inttoptr i32 %v1_2ad9d to i32*
  %v2_2ada5 = load i32, i32* %v1_2ada5, align 4
  %v0_2adac = load i32, i32* %esi.global-to-local, align 4
  %v5_2adae = icmp slt i32 %v0_2adac, %v3_2ada2
  br i1 %v5_2adae, label %dec_label_pc_2adc5, label %dec_label_pc_2adb0

dec_label_pc_2adb0:                               ; preds = %dec_label_pc_2ad87
  %v8_2adb2 = icmp sgt i32 %v0_2adac, %v3_2ada2
  br i1 %v8_2adb2, label %dec_label_pc_2adbd, label %dec_label_pc_2adb4

dec_label_pc_2adb4:                               ; preds = %dec_label_pc_2adb0
  %v0_2adb4 = load i32, i32* @ebx, align 4
  %v7_2adb4 = icmp ult i32 %v0_2adb4, %v2_2ada5
  br i1 %v7_2adb4, label %dec_label_pc_2adc5, label %dec_label_pc_2adbd

dec_label_pc_2adbd:                               ; preds = %dec_label_pc_2adb0, %dec_label_pc_2adb4
  br label %dec_label_pc_2ae79

dec_label_pc_2adc5:                               ; preds = %dec_label_pc_2adb4, %dec_label_pc_2ad87
  %v0_2adc5 = load i32, i32* @ebp, align 4
  %v1_2adc5 = add i32 %v0_2adc5, -36
  %v2_2adc5 = inttoptr i32 %v1_2adc5 to i32*
  %v3_2adc5 = load i32, i32* %v2_2adc5, align 4
  %v1_2adc8 = load i32, i32* @esp, align 4
  %v2_2adc8 = add i32 %v1_2adc8, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2adc8 = inttoptr i32 %v2_2adc8 to i32*
  store i32 %v3_2adc5, i32* %v3_2adc8, align 4
  %v0_2adcc = load i32, i32* @ebp, align 4
  %v1_2adcc = add i32 %v0_2adcc, -28
  %v2_2adcc = inttoptr i32 %v1_2adcc to i32*
  %v3_2adcc = load i32, i32* %v2_2adcc, align 4
  %v1_2adcf = load i32, i32* @esp, align 4
  %v2_2adcf = inttoptr i32 %v1_2adcf to i32*
  store i32 %v3_2adcc, i32* %v2_2adcf, align 4
  %v2_2add2 = call i32 @unknown_58be5(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2ae79

dec_label_pc_2ae79:                               ; preds = %dec_label_pc_2adbd, %dec_label_pc_2adc5, %dec_label_pc_2ad70
  %v0_2ae79 = load i32, i32* @ebp, align 4
  %v1_2ae79 = add i32 %v0_2ae79, -12
  %v2_2ae79 = inttoptr i32 %v1_2ae79 to i32*
  %v3_2ae79 = load i32, i32* %v2_2ae79, align 4
  %v2_2ae7c = xor i32 %v3_2ae79, 30
  %v3_2ae7c = icmp eq i32 %v2_2ae7c, 0
  store i32 %v2_2ae7c, i32* @eax, align 8
  br i1 %v3_2ae7c, label %bb, label %dec_label_pc_2ae85

bb:                                               ; preds = %dec_label_pc_2ae79
  %v1_2ae83 = call i32 @function_2ae8a()
  br label %dec_label_pc_2ae85

dec_label_pc_2ae85:                               ; preds = %bb, %dec_label_pc_2ae79
  %v2_2ae83 = phi i32 [ %v1_2ae83, %bb ], [ %v2_2ae7c, %dec_label_pc_2ae79 ]
  ret i32 %v2_2ae83

; uselistorder directives
  uselistorder i32 %v0_2ad6d, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @unknown_471ff, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 (i32, i32)* @unknown_58be5, { 1, 0 }
  uselistorder label %dec_label_pc_2ae79, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2adbd, { 1, 0 }
}

define i32 @function_2ae8a() local_unnamed_addr {
dec_label_pc_2ae8a:
  %v0_2ae90 = load i32, i32* @eax, align 8
  ret i32 %v0_2ae90
}

define i32 @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExET_S7_S7_RKT0_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ae91:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v2_2aec9 = ptrtoint i32* %stack_var_-36 to i32
  %v1_2aedc = add i32 %arg4, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2aedc = inttoptr i32 %v1_2aedc to i32*
  %v1_2aedf = inttoptr i32 %arg4 to i32*
  %v2_2aefd = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_2aec9

dec_label_pc_2aebe:                               ; preds = %dec_label_pc_2aef7
  %v1_2aec4 = call i32 @unknown_47383(i32 %v2_2aec9)
  br label %dec_label_pc_2aec9.backedge

dec_label_pc_2aec9.backedge:                      ; preds = %dec_label_pc_2aebe, %dec_label_pc_2af79
  br label %dec_label_pc_2aec9

dec_label_pc_2aec9:                               ; preds = %dec_label_pc_2aec9.backedge, %dec_label_pc_2ae91
  %v1_2aecf = call i32 @unknown_473bd(i32 %v2_2aec9)
  %v1_2aed4 = inttoptr i32 %v1_2aecf to i32*
  %v2_2aed4 = load i32, i32* %v1_2aed4, align 4
  %v1_2aed6 = add i32 %v1_2aecf, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2aed6 = inttoptr i32 %v1_2aed6 to i32*
  %v3_2aed6 = load i32, i32* %v2_2aed6, align 4
  store i32 %v3_2aed6, i32* %ebx.global-to-local, align 4
  %v3_2aedc = load i32, i32* %v2_2aedc, align 4
  %v2_2aedf = load i32, i32* %v1_2aedf, align 4
  store i32 1, i32* %esi.global-to-local, align 4
  %v5_2aee8 = icmp slt i32 %v3_2aed6, %v3_2aedc
  br i1 %v5_2aee8, label %dec_label_pc_2aef7, label %dec_label_pc_2aeea

dec_label_pc_2aeea:                               ; preds = %dec_label_pc_2aec9
  %v8_2aeec = icmp sgt i32 %v3_2aed6, %v3_2aedc
  br i1 %v8_2aeec, label %dec_label_pc_2aef2, label %dec_label_pc_2aeee

dec_label_pc_2aeee:                               ; preds = %dec_label_pc_2aeea
  %v7_2aeee = icmp ult i32 %v2_2aed4, %v2_2aedf
  br i1 %v7_2aeee, label %dec_label_pc_2aef7, label %dec_label_pc_2aef2

dec_label_pc_2aef2:                               ; preds = %dec_label_pc_2aeee, %dec_label_pc_2aeea
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_2aef7

dec_label_pc_2aef7:                               ; preds = %dec_label_pc_2aef2, %dec_label_pc_2aeee, %dec_label_pc_2aec9
  %v0_2aef7 = phi i1 [ false, %dec_label_pc_2aef2 ], [ true, %dec_label_pc_2aeee ], [ true, %dec_label_pc_2aec9 ]
  br i1 %v0_2aef7, label %dec_label_pc_2aebe, label %dec_label_pc_2aefd

dec_label_pc_2aefd:                               ; preds = %dec_label_pc_2aef7
  %v1_2af03 = call i32 @unknown_58d69(i32 %v2_2aefd)
  br label %dec_label_pc_2af15

dec_label_pc_2af0a:                               ; preds = %dec_label_pc_2af3a, %dec_label_pc_2af15
  %v1_2af10 = call i32 @unknown_58d69(i32 %v2_2aefd)
  br label %dec_label_pc_2af15

dec_label_pc_2af15:                               ; preds = %dec_label_pc_2af0a, %dec_label_pc_2aefd
  %v2_2af18 = load i32, i32* %v1_2aedf, align 4
  store i32 %v2_2af18, i32* %ebx.global-to-local, align 4
  %v3_2af1a = load i32, i32* %v2_2aedc, align 4
  store i32 %v3_2af1a, i32* %esi.global-to-local, align 4
  %v1_2af23 = call i32 @unknown_473bd(i32 %v2_2aefd)
  %v1_2af28 = add i32 %v1_2af23, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2af28 = inttoptr i32 %v1_2af28 to i32*
  %v3_2af28 = load i32, i32* %v2_2af28, align 4
  %v1_2af2b = inttoptr i32 %v1_2af23 to i32*
  %v2_2af2b = load i32, i32* %v1_2af2b, align 4
  %v0_2af32 = load i32, i32* %esi.global-to-local, align 4
  %v5_2af34 = icmp slt i32 %v0_2af32, %v3_2af28
  br i1 %v5_2af34, label %dec_label_pc_2af0a, label %dec_label_pc_2af36

dec_label_pc_2af36:                               ; preds = %dec_label_pc_2af15
  %v8_2af38 = icmp sgt i32 %v0_2af32, %v3_2af28
  br i1 %v8_2af38, label %dec_label_pc_2af47, label %dec_label_pc_2af3a

dec_label_pc_2af3a:                               ; preds = %dec_label_pc_2af36
  %v0_2af3a = load i32, i32* %ebx.global-to-local, align 4
  %v7_2af3a = icmp ult i32 %v0_2af3a, %v2_2af2b
  br i1 %v7_2af3a, label %dec_label_pc_2af0a, label %dec_label_pc_2af47

dec_label_pc_2af47:                               ; preds = %dec_label_pc_2af3a, %dec_label_pc_2af36
  %v2_2af54 = call i32 @unknown_58c69(i32 %v2_2aec9, i32 %v2_2aefd)
  %v1_2af59 = xor i32 %v2_2af54, 1
  %v4_2af59 = trunc i32 %v1_2af59 to i8
  %v5_2af5c = icmp eq i8 %v4_2af59, 0
  br i1 %v5_2af5c, label %dec_label_pc_2af79, label %dec_label_pc_2af60

dec_label_pc_2af60:                               ; preds = %dec_label_pc_2af47
  %tmp123 = ptrtoint i32* %arg1 to i32
  %v3_2af63 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_2af63, i32* %arg1, align 4
  store i32 %tmp123, i32* @eax, align 8
  %v1_2af75 = call i32 @function_2afa1()
  ret i32 %v1_2af75

dec_label_pc_2af79:                               ; preds = %dec_label_pc_2af47
  %v3_2af79 = load i32, i32* %stack_var_-40, align 4
  %v3_2af80 = load i32, i32* %stack_var_-36, align 4
  %v2_2af86 = call i32 @unknown_58da3(i32 %v3_2af80, i32 %v3_2af79)
  %v1_2af91 = call i32 @unknown_47383(i32 %v2_2aec9)
  br label %dec_label_pc_2aec9.backedge

; uselistorder directives
  uselistorder i32 %v2_2aefd, { 1, 2, 0, 3 }
  uselistorder i32 %v2_2aec9, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @unknown_58d69, { 1, 0 }
  uselistorder i32 (i32)* @unknown_473bd, { 1, 0 }
  uselistorder i32 (i32)* @unknown_47383, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_2aec9.backedge, { 1, 0 }
}

define i32 @function_2afa1() local_unnamed_addr {
dec_label_pc_2afa1:
  %v0_2afa7 = load i32, i32* @eax, align 8
  ret i32 %v0_2afa7
}

define i32 @_ZSt13copy_backwardIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2afaa:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_2afd3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2afe0 = call i32 @unknown_4c557(i32 %v2_2afd3, i32 %arg3)
  %v2_2afe8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2aff5 = call i32 @unknown_4c557(i32 %v2_2afe8, i32 %arg2)
  %v3_2b007 = load i32, i32* %stack_var_-20, align 4
  %v3_2b00e = load i32, i32* %stack_var_-24, align 4
  %v4_2b018 = call i32 @unknown_58efe(i32 %arg1, i32 %v3_2b00e, i32 %v3_2b007, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  %v1_2b02d = call i32 @function_2b034()
  ret i32 %v1_2b02d

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4c557, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2b034() local_unnamed_addr {
dec_label_pc_2b034:
  %v0_2b035 = load i32, i32* @eax, align 8
  ret i32 %v0_2b035
}

define i32 @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b038:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2b050 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2b056 = call i32 @unknown_47564(i32 %v2_2b050)
  %v1_2b05b = add i32 %v1_2b056, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2b05b = inttoptr i32 %v1_2b05b to i32*
  %v3_2b05b = load i32, i32* %v2_2b05b, align 4
  store i32 %v3_2b05b, i32* %edx.global-to-local, align 8
  %v1_2b05e = inttoptr i32 %v1_2b056 to i32*
  %v2_2b05e = load i32, i32* %v1_2b05e, align 4
  %v3_2b066 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_2b066, i32* %stack_var_-20, align 4
  %v2_2b06c = ptrtoint i32* %stack_var_-20 to i32
  %v1_2b072 = call i32 @unknown_58f10(i32 %v2_2b06c)
  br label %dec_label_pc_2b0ac

dec_label_pc_2b079:                               ; preds = %dec_label_pc_2b0d5
  store i32 %v1_2b07f, i32* %ebx.global-to-local, align 4
  %v1_2b08c = call i32 @unknown_47564(i32 %v2_2b06c)
  %v1_2b091 = add i32 %v1_2b08c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2b091 = inttoptr i32 %v1_2b091 to i32*
  %v3_2b091 = load i32, i32* %v2_2b091, align 4
  store i32 %v3_2b091, i32* %edx.global-to-local, align 8
  %v1_2b094 = inttoptr i32 %v1_2b08c to i32*
  %v2_2b094 = load i32, i32* %v1_2b094, align 4
  %v1_2b096 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2b096 = inttoptr i32 %v1_2b096 to i32*
  store i32 %v2_2b094, i32* %v2_2b096, align 4
  %v0_2b098 = load i32, i32* %edx.global-to-local, align 8
  %v1_2b098 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2b098 = add i32 %v1_2b098, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2b098 = inttoptr i32 %v2_2b098 to i32*
  store i32 %v0_2b098, i32* %v3_2b098, align 4
  %v3_2b09b = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_2b09b, i32* %stack_var_-32, align 4
  %v1_2b0a7 = call i32 @unknown_58f10(i32 %v2_2b06c)
  br label %dec_label_pc_2b0ac

dec_label_pc_2b0ac:                               ; preds = %dec_label_pc_2b079, %dec_label_pc_2b038
  %v1_2b0b2 = call i32 @unknown_47564(i32 %v2_2b06c)
  %v1_2b0b7 = add i32 %v1_2b0b2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2b0b7 = inttoptr i32 %v1_2b0b7 to i32*
  %v3_2b0b7 = load i32, i32* %v2_2b0b7, align 4
  store i32 %v3_2b0b7, i32* %edx.global-to-local, align 8
  %v1_2b0ba = inttoptr i32 %v1_2b0b2 to i32*
  %v2_2b0ba = load i32, i32* %v1_2b0ba, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v8_2b0c4 = icmp sgt i32 %v3_2b0b7, %v3_2b05b
  br i1 %v8_2b0c4, label %dec_label_pc_2b0d5, label %dec_label_pc_2b0c6

dec_label_pc_2b0c6:                               ; preds = %dec_label_pc_2b0ac
  %v5_2b0c9 = icmp slt i32 %v3_2b0b7, %v3_2b05b
  br i1 %v5_2b0c9, label %dec_label_pc_2b0d0, label %dec_label_pc_2b0cb

dec_label_pc_2b0cb:                               ; preds = %dec_label_pc_2b0c6
  %tmp111 = icmp ugt i32 %v2_2b0ba, %v2_2b05e
  br i1 %tmp111, label %dec_label_pc_2b0d5, label %dec_label_pc_2b0d0

dec_label_pc_2b0d0:                               ; preds = %dec_label_pc_2b0cb, %dec_label_pc_2b0c6
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_2b0d5

dec_label_pc_2b0d5:                               ; preds = %dec_label_pc_2b0cb, %dec_label_pc_2b0d0, %dec_label_pc_2b0ac
  %v0_2b0d5 = phi i1 [ true, %dec_label_pc_2b0cb ], [ false, %dec_label_pc_2b0d0 ], [ true, %dec_label_pc_2b0ac ]
  %v1_2b07f = call i32 @unknown_47564(i32 %v2_2b050)
  br i1 %v0_2b0d5, label %dec_label_pc_2b079, label %dec_label_pc_2b0d9

dec_label_pc_2b0d9:                               ; preds = %dec_label_pc_2b0d5
  store i32 %v1_2b07f, i32* %ecx.global-to-local, align 4
  store i32 %v3_2b05b, i32* %edx.global-to-local, align 8
  %v2_2b0ec = inttoptr i32 %v1_2b07f to i32*
  store i32 %v2_2b05e, i32* %v2_2b0ec, align 4
  %v0_2b0ee = load i32, i32* %edx.global-to-local, align 8
  %v1_2b0ee = load i32, i32* %ecx.global-to-local, align 4
  %v2_2b0ee = add i32 %v1_2b0ee, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2b0ee = inttoptr i32 %v2_2b0ee to i32*
  store i32 %v0_2b0ee, i32* %v3_2b0ee, align 4
  store i32 0, i32* @eax, align 8
  %v1_2b0fb = call i32 @function_2b102()
  ret i32 %v1_2b0fb

; uselistorder directives
  uselistorder i32 %v1_2b07f, { 1, 0, 2 }
  uselistorder i32 %v2_2b06c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_2b05e, { 1, 0 }
  uselistorder i32 %v3_2b05b, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 (i32)* @unknown_58f10, { 1, 0 }
  uselistorder i32 (i32)* @unknown_47564, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_2b0d5, { 1, 0, 2 }
}

define i32 @function_2b102() local_unnamed_addr {
dec_label_pc_2b102:
  %v0_2b107 = load i32, i32* @eax, align 8
  ret i32 %v0_2b107
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b108:
  store i32 0, i32* @eax, align 8
  %v3_2b12f = call i32 @function_2b136(i32 %arg2, i32 %arg1)
  ret i32 %v3_2b12f
}

define i32 @function_2b136(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b136:
  %v0_2b137 = load i32, i32* @eax, align 8
  ret i32 %v0_2b137
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b138:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_2b15b = ptrtoint i32* %stack_var_-20 to i32
  %v2_2b168 = call i32 @unknown_4f80e(i32 %v2_2b15b, i32 %arg2)
  %v2_2b170 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2b17d = call i32 @unknown_4f80e(i32 %v2_2b170, i32 %arg1)
  %v3_2b18c = load i32, i32* %stack_var_-20, align 4
  %v3_2b193 = load i32, i32* %stack_var_-24, align 4
  %v3_2b199 = call i32 @unknown_5911e(i32 %v3_2b193, i32 %v3_2b18c, i32 %arg3)
  store i32 %v3_2b199, i32* @eax, align 8
  %v1_2b1a8 = call i32 @function_2b1af()
  ret i32 %v1_2b1a8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4f80e, { 1, 0 }
}

define i32 @function_2b1af() local_unnamed_addr {
dec_label_pc_2b1af:
  %v0_2b1b0 = load i32, i32* @eax, align 8
  ret i32 %v0_2b1b0
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b1b2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2b1d2 = load i32, i32* %arg1, align 4
  %v1_2b1d7 = inttoptr i32 %arg2 to i32*
  %v2_2b1d7 = load i32, i32* %v1_2b1d7, align 4
  %v12_2b1d9 = icmp eq i32 %v2_2b1d2, %v2_2b1d7
  %v1_2b1db = icmp eq i1 %v12_2b1d9, false
  %v2_2b1db = zext i1 %v1_2b1db to i32
  %v4_2b1db = and i32 %v2_2b1d7, -256
  %v5_2b1db = or i32 %v2_2b1db, %v4_2b1db
  store i32 %v5_2b1db, i32* @eax, align 8
  %v3_2b1e8 = call i32 @function_2b1ef(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2b1e8

; uselistorder directives
  uselistorder i32 %v2_2b1d7, { 1, 0 }
}

define i32 @function_2b1ef(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b1ef:
  %v0_2b1f0 = load i32, i32* @eax, align 8
  ret i32 %v0_2b1f0
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b1f2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2b20c = load i32, i32* %arg1, align 4
  %v1_2b20e = add i32 %v2_2b20c, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_2b20e, i32* @eax, align 8
  %v2_2b21b = call i32 @function_2b222(i32 %tmp99)
  ret i32 %v2_2b21b
}

define i32 @function_2b222(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b222:
  %v0_2b223 = load i32, i32* @eax, align 8
  ret i32 %v0_2b223
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b224:
  %v2_2b23e = load i32, i32* %arg1, align 4
  %v1_2b240 = icmp eq i32 %v2_2b23e, 0
  %v1_2b242 = icmp eq i1 %v1_2b240, false
  br i1 %v1_2b242, label %dec_label_pc_2b268, label %dec_label_pc_2b244

dec_label_pc_2b244:                               ; preds = %dec_label_pc_2b224
  br label %dec_label_pc_2b268

dec_label_pc_2b268:                               ; preds = %dec_label_pc_2b244, %dec_label_pc_2b224
  %v2_2b26b = load i32, i32* %arg1, align 4
  store i32 %v2_2b26b, i32* @eax, align 8
  %v1_2b277 = call i32 @function_2b27e()
  ret i32 %v1_2b277
}

define i32 @function_2b27e() local_unnamed_addr {
dec_label_pc_2b27e:
  %v0_2b27f = load i32, i32* @eax, align 8
  ret i32 %v0_2b27f
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b280:
  %v2_2b29a = load i32, i32* %arg1, align 4
  %v1_2b29c = icmp eq i32 %v2_2b29a, 0
  %v1_2b29e = icmp eq i1 %v1_2b29c, false
  br i1 %v1_2b29e, label %bb, label %dec_label_pc_2b2a0

bb:                                               ; preds = %dec_label_pc_2b280
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_2b29e = call i32 @function_2b2c4(i32 %tmp105)
  br label %dec_label_pc_2b2a0

dec_label_pc_2b2a0:                               ; preds = %bb, %dec_label_pc_2b280
  %v3_2b2b8 = phi i32 [ %v3_2b29e, %bb ], [ %v2_2b29a, %dec_label_pc_2b280 ]
  ret i32 %v3_2b2b8

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2b2c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b2c4:
  %v0_2b2c4 = load i32, i32* @ebp, align 4
  %v1_2b2c4 = add i32 %v0_2b2c4, -28
  %v2_2b2c4 = inttoptr i32 %v1_2b2c4 to i32*
  %v3_2b2c4 = load i32, i32* %v2_2b2c4, align 4
  %v1_2b2c7 = inttoptr i32 %v3_2b2c4 to i32*
  %v2_2b2c7 = load i32, i32* %v1_2b2c7, align 4
  store i32 %v2_2b2c7, i32* @eax, align 8
  %v1_2b2c9 = add i32 %v0_2b2c4, -12
  %v2_2b2c9 = inttoptr i32 %v1_2b2c9 to i32*
  %v3_2b2c9 = load i32, i32* %v2_2b2c9, align 4
  %v3_2b2cc = icmp eq i32 %v3_2b2c9, 30
  br i1 %v3_2b2cc, label %bb, label %dec_label_pc_2b2d5

bb:                                               ; preds = %dec_label_pc_2b2c4
  %v1_2b2d3 = call i32 @function_2b2da()
  br label %dec_label_pc_2b2d5

dec_label_pc_2b2d5:                               ; preds = %bb, %dec_label_pc_2b2c4
  %v2_2b2d3 = phi i32 [ %v1_2b2d3, %bb ], [ %v2_2b2c7, %dec_label_pc_2b2c4 ]
  ret i32 %v2_2b2d3
}

define i32 @function_2b2da() local_unnamed_addr {
dec_label_pc_2b2da:
  %v0_2b2db = load i32, i32* @eax, align 8
  ret i32 %v0_2b2db
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE19nolock_slot_expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b2dc:
  %v1_2b2f6 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2b2fc = call i32 @unknown_3da64(i32 %v1_2b2f6)
  %v1_2b301 = trunc i32 %v2_2b2fc to i8
  %v10_2b304 = icmp eq i8 %v1_2b301, 0
  br i1 %v10_2b304, label %dec_label_pc_2b311, label %dec_label_pc_2b30a

dec_label_pc_2b30a:                               ; preds = %dec_label_pc_2b2dc
  %v1_2b30d = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2b30d = inttoptr i32 %v1_2b30d to i8*
  store i8 0, i8* %v2_2b30d, align 1
  br label %dec_label_pc_2b311

dec_label_pc_2b311:                               ; preds = %dec_label_pc_2b30a, %dec_label_pc_2b2dc
  %v4_2b311 = urem i32 %v2_2b2fc, 256
  store i32 %v4_2b311, i32* @eax, align 8
  %v1_2b31f = call i32 @function_2b326()
  ret i32 %v1_2b31f
}

define i32 @function_2b326() local_unnamed_addr {
dec_label_pc_2b326:
  %v0_2b327 = load i32, i32* @eax, align 8
  ret i32 %v0_2b327
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b328:
  %v1_2b342 = add i32 %arg1, 68
  store i32 %v1_2b342, i32* @eax, align 8
  %v2_2b34f = call i32 @function_2b356(i32 %arg1)
  ret i32 %v2_2b34f

; uselistorder directives
  uselistorder i32 68, { 1, 2, 3, 0, 4 }
}

define i32 @function_2b356(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b356:
  %v0_2b357 = load i32, i32* @eax, align 8
  ret i32 %v0_2b357
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2b358:
  ret i32 0
}

define i32 @function_2b382(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b382:
  %v0_2b382 = load i32, i32* @ebp, align 4
  %v1_2b383 = add i32 %v0_2b382, 1418321989
  %v2_2b383 = inttoptr i32 %v1_2b383 to i8*
  %v3_2b383 = load i8, i8* %v2_2b383, align 1
  %v4_2b383 = udiv i8 %v3_2b383, 2
  %v5_2b383 = shl i8 %v3_2b383, 7
  %v6_2b383 = or i8 %v4_2b383, %v5_2b383
  store i8 %v6_2b383, i8* %v2_2b383, align 1
  %v0_2b389 = load i32, i32* @eax, align 8
  %v11_2b389 = and i32 %v0_2b389, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v2_2b38e = call i32 @unknown_520ae(i32 %v11_2b389)
  %v0_2b396 = load i32, i32* @ebp, align 4
  %v1_2b396 = add i32 %v0_2b396, -32
  %v1_2b39d = add i32 %v0_2b396, -56
  %v2_2b39d = inttoptr i32 %v1_2b39d to i32*
  %v3_2b39d = load i32, i32* %v2_2b39d, align 4
  %v4_2b3a3 = call i32 @unknown_5650a(i32 %v3_2b39d, i32 %v1_2b396)
  %v4_2b3a8 = trunc i32 %v4_2b3a3 to i8
  %v5_2b3a8 = icmp eq i8 %v4_2b3a8, 0
  %v1_2b3aa = icmp eq i1 %v5_2b3a8, false
  br i1 %v1_2b3aa, label %bb, label %dec_label_pc_2b3ac

bb:                                               ; preds = %dec_label_pc_2b382
  %v2_2b3aa = call i32 @function_2b3d0()
  br label %dec_label_pc_2b3ac

dec_label_pc_2b3ac:                               ; preds = %bb, %dec_label_pc_2b382
  %v3_2b3c4 = phi i32 [ %v2_2b3aa, %bb ], [ %v4_2b3a3, %dec_label_pc_2b382 ]
  ret i32 %v3_2b3c4

; uselistorder directives
  uselistorder i8 %v3_2b383, { 1, 0 }
  uselistorder i8 7, { 1, 0, 2 }
}

define i32 @function_2b3d0() local_unnamed_addr {
dec_label_pc_2b3d0:
  %v0_2b3d0 = load i32, i32* @ebp, align 4
  %v1_2b3d0 = add i32 %v0_2b3d0, -48
  %v2_2b3d0 = inttoptr i32 %v1_2b3d0 to i32*
  %v3_2b3d0 = load i32, i32* %v2_2b3d0, align 4
  %v1_2b3d3 = add i32 %v3_2b3d0, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2b3d6 = add i32 %v0_2b3d0, -28
  %v1_2b3d9 = add i32 %v0_2b3d0, -52
  %v2_2b3d9 = inttoptr i32 %v1_2b3d9 to i32*
  %v3_2b3d9 = load i32, i32* %v2_2b3d9, align 4
  %v3_2b3e7 = call i32 @unknown_593b0(i32 %v1_2b3d6, i32 %v1_2b3d3, i32 %v3_2b3d9)
  %v0_2b3ef = load i32, i32* @ebp, align 4
  %v1_2b3ef = add i32 %v0_2b3ef, -48
  %v2_2b3ef = inttoptr i32 %v1_2b3ef to i32*
  %v3_2b3ef = load i32, i32* %v2_2b3ef, align 4
  %v1_2b3f2 = add i32 %v3_2b3ef, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2b3f5 = add i32 %v0_2b3ef, -24
  %v3_2b3ff = call i32 @unknown_59408(i32 %v1_2b3f5, i32 %v1_2b3f2)
  %v0_2b407 = load i32, i32* @ebp, align 4
  %v1_2b407 = add i32 %v0_2b407, -24
  %v1_2b40e = add i32 %v0_2b407, -28
  %v4_2b414 = call i32 @unknown_59452(i32 %v1_2b40e, i32 %v1_2b407)
  %v4_2b419 = trunc i32 %v4_2b414 to i8
  %v5_2b419 = icmp eq i8 %v4_2b419, 0
  %v1_2b41b = icmp eq i1 %v5_2b419, false
  br i1 %v1_2b41b, label %bb, label %dec_label_pc_2b41d

bb:                                               ; preds = %dec_label_pc_2b3d0
  %v2_2b41b = call i32 @function_2b441()
  br label %dec_label_pc_2b41d

dec_label_pc_2b41d:                               ; preds = %bb, %dec_label_pc_2b3d0
  %v3_2b435 = phi i32 [ %v2_2b41b, %bb ], [ %v4_2b414, %dec_label_pc_2b3d0 ]
  ret i32 %v3_2b435

; uselistorder directives
  uselistorder i32 %v0_2b3d0, { 1, 0, 2 }
}

define i32 @function_2b430(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b430:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b441() local_unnamed_addr {
dec_label_pc_2b441:
  %v0_2b441 = load i32, i32* @ebp, align 4
  %v1_2b441 = add i32 %v0_2b441, -28
  %v2_2b447 = call i32 @unknown_5951c(i32 %v1_2b441)
  %v0_2b44c = load i32, i32* @ebp, align 4
  %v1_2b44c = add i32 %v0_2b44c, -52
  %v2_2b44c = inttoptr i32 %v1_2b44c to i32*
  %v3_2b44c = load i32, i32* %v2_2b44c, align 4
  %v1_2b457 = add i32 %v0_2b44c, -48
  %v2_2b457 = inttoptr i32 %v1_2b457 to i32*
  %v3_2b457 = load i32, i32* %v2_2b457, align 4
  %v5_2b45d = call i32 @unknown_59492(i32 %v3_2b457, i32 %v2_2b447, i32 %v3_2b44c)
  %v4_2b462 = trunc i32 %v5_2b45d to i8
  %v5_2b462 = icmp eq i8 %v4_2b462, 0
  %v1_2b464 = icmp eq i1 %v5_2b462, false
  br i1 %v1_2b464, label %bb, label %dec_label_pc_2b466

bb:                                               ; preds = %dec_label_pc_2b441
  %v2_2b464 = call i32 @function_2b48a()
  br label %dec_label_pc_2b466

dec_label_pc_2b466:                               ; preds = %bb, %dec_label_pc_2b441
  %v3_2b47e = phi i32 [ %v2_2b464, %bb ], [ %v5_2b45d, %dec_label_pc_2b441 ]
  ret i32 %v3_2b47e
}

define i32 @function_2b472(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b472:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b48a() local_unnamed_addr {
dec_label_pc_2b48a:
  %v0_2b48a = load i32, i32* @ebp, align 4
  %v1_2b48a = add i32 %v0_2b48a, -28
  %v1_2b490 = call i32 @unknown_5951c(i32 %v1_2b48a)
  %v1_2b495 = add i32 %v1_2b490, ptrtoint (i32* @global_var_c.2390 to i32)
  %v0_2b498 = load i32, i32* @ebp, align 4
  %v1_2b498 = add i32 %v0_2b498, -56
  %v2_2b498 = inttoptr i32 %v1_2b498 to i32*
  %v3_2b498 = load i32, i32* %v2_2b498, align 4
  %v2_2b4a2 = call i32 @unknown_51b6a(i32 %v1_2b495, i32 %v3_2b498)
  %v4_2b4a7 = trunc i32 %v2_2b4a2 to i8
  %v5_2b4a7 = icmp eq i8 %v4_2b4a7, 0
  br i1 %v5_2b4a7, label %dec_label_pc_2b521, label %dec_label_pc_2b4ab

dec_label_pc_2b4ab:                               ; preds = %dec_label_pc_2b48a
  %v0_2b4ab = load i32, i32* @ebp, align 4
  %v1_2b4ab = add i32 %v0_2b4ab, -56
  %v2_2b4ab = inttoptr i32 %v1_2b4ab to i32*
  %v3_2b4ab = load i32, i32* %v2_2b4ab, align 4
  %v1_2b4ae = inttoptr i32 %v3_2b4ab to i32*
  %v2_2b4ae = load i32, i32* %v1_2b4ae, align 4
  %v2_2b4b0 = add i32 %v0_2b4ab, -20
  %v3_2b4b0 = inttoptr i32 %v2_2b4b0 to i32*
  store i32 %v2_2b4ae, i32* %v3_2b4b0, align 4
  %v0_2b4b3 = load i32, i32* @ebp, align 4
  %v1_2b4b3 = add i32 %v0_2b4b3, -20
  %v1_2b4b9 = call i32 @unknown_568b0(i32 %v1_2b4b3)
  %v0_2b4be = load i32, i32* @ebp, align 4
  %v1_2b4be = add i32 %v0_2b4be, -16
  %v1_2b4c1 = add i32 %v0_2b4be, -52
  %v2_2b4c1 = inttoptr i32 %v1_2b4c1 to i32*
  %v3_2b4c1 = load i32, i32* %v2_2b4c1, align 4
  %v1_2b4c8 = add i32 %v0_2b4be, -48
  %v2_2b4c8 = inttoptr i32 %v1_2b4c8 to i32*
  %v3_2b4c8 = load i32, i32* %v2_2b4c8, align 4
  %v3_2b4d2 = call i32 @unknown_59556(i32 %v1_2b4be, i32 %v3_2b4c8, i32 %v3_2b4c1)
  %v0_2b4da = load i32, i32* @ebp, align 4
  %v1_2b4da = add i32 %v0_2b4da, -16
  %v1_2b4e1 = add i32 %v0_2b4da, -20
  %v2_2b4e7 = call i32 @unknown_5650a(i32 %v1_2b4e1, i32 %v1_2b4da)
  %v4_2b4ec = trunc i32 %v2_2b4e7 to i8
  %v5_2b4ec = icmp eq i8 %v4_2b4ec, 0
  %v0_2b50c = load i32, i32* @ebp, align 4
  %v1_2b50c = add i32 %v0_2b50c, -48
  %v2_2b50c = inttoptr i32 %v1_2b50c to i32*
  %v3_2b50c = load i32, i32* %v2_2b50c, align 4
  %v1_2b50f = add i32 %v3_2b50c, ptrtoint (i32* @global_var_8.2379 to i32)
  br i1 %v5_2b4ec, label %dec_label_pc_2b50c, label %dec_label_pc_2b4f0

dec_label_pc_2b4f0:                               ; preds = %dec_label_pc_2b4ab
  %v1_2b4f6 = add i32 %v0_2b50c, -52
  %v2_2b4f6 = inttoptr i32 %v1_2b4f6 to i32*
  %v3_2b4f6 = load i32, i32* %v2_2b4f6, align 4
  %v2_2b500 = call i32 @unknown_59614(i32 %v1_2b50f, i32 %v3_2b4f6)
  %v0_2b505 = load i32, i32* @ebp, align 4
  %v1_2b505 = add i32 %v0_2b505, -20
  %v2_2b505 = inttoptr i32 %v1_2b505 to i32*
  %v3_2b505 = load i32, i32* %v2_2b505, align 4
  %v2_2b508 = inttoptr i32 %v2_2b500 to i32*
  store i32 %v3_2b505, i32* %v2_2b508, align 4
  br label %dec_label_pc_2b521

dec_label_pc_2b50c:                               ; preds = %dec_label_pc_2b4ab
  %v1_2b512 = add i32 %v0_2b50c, -28
  %v2_2b512 = inttoptr i32 %v1_2b512 to i32*
  %v3_2b512 = load i32, i32* %v2_2b512, align 4
  %v2_2b51c = call i32 @unknown_5975a(i32 %v1_2b50f, i32 %v3_2b512)
  br label %dec_label_pc_2b521

dec_label_pc_2b521:                               ; preds = %dec_label_pc_2b50c, %dec_label_pc_2b4f0, %dec_label_pc_2b48a
  %v0_2b521 = load i32, i32* @ebp, align 4
  %v1_2b521 = add i32 %v0_2b521, -48
  %v2_2b521 = inttoptr i32 %v1_2b521 to i32*
  %v3_2b521 = load i32, i32* %v2_2b521, align 4
  %v1_2b524 = add i32 %v0_2b521, -44
  %v2_2b524 = inttoptr i32 %v1_2b524 to i32*
  %v3_2b524 = load i32, i32* %v2_2b524, align 4
  %v1_2b527 = add i32 %v0_2b521, -56
  %v2_2b527 = inttoptr i32 %v1_2b527 to i32*
  %v3_2b527 = load i32, i32* %v2_2b527, align 4
  %v1_2b52a = inttoptr i32 %v3_2b527 to i32*
  %v2_2b52a = load i32, i32* %v1_2b52a, align 4
  %v3_2b537 = call i32 @unknown_5979c(i32 %v3_2b524, i32 %v3_2b521, i32 %v2_2b52a)
  %v0_2b53f = load i32, i32* @ebp, align 4
  %v1_2b53f = add i32 %v0_2b53f, -44
  %v2_2b53f = inttoptr i32 %v1_2b53f to i32*
  %v3_2b53f = load i32, i32* %v2_2b53f, align 4
  store i32 %v3_2b53f, i32* @eax, align 8
  %v1_2b542 = add i32 %v0_2b53f, -12
  %v2_2b542 = inttoptr i32 %v1_2b542 to i32*
  %v3_2b542 = load i32, i32* %v2_2b542, align 4
  %v3_2b545 = icmp eq i32 %v3_2b542, 30
  br i1 %v3_2b545, label %bb, label %dec_label_pc_2b54e

bb:                                               ; preds = %dec_label_pc_2b521
  %v1_2b54c = call i32 @function_2b553()
  br label %dec_label_pc_2b54e

dec_label_pc_2b54e:                               ; preds = %bb, %dec_label_pc_2b521
  %v2_2b54c = phi i32 [ %v1_2b54c, %bb ], [ %v3_2b53f, %dec_label_pc_2b521 ]
  ret i32 %v2_2b54c

; uselistorder directives
  uselistorder i32 %v1_2b50f, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5650a, { 1, 0 }
  uselistorder i32 -56, { 30, 31, 32, 33, 24, 25, 26, 27, 28, 16, 0, 1, 17, 21, 5, 2, 35, 6, 29, 3, 18, 22, 4, 34, 19, 20, 23, 36, 7, 8, 9, 10, 11, 14, 12, 13, 15 }
  uselistorder i32 (i32)* @unknown_5951c, { 1, 0 }
}

define i32 @function_2b553() local_unnamed_addr {
dec_label_pc_2b553:
  %v0_2b554 = load i32, i32* @eax, align 8
  ret i32 %v0_2b554
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b558:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2b572 = load i32, i32* %arg1, align 4
  %v1_2b574 = inttoptr i32 %v2_2b572 to i32*
  %v2_2b574 = load i32, i32* %v1_2b574, align 4
  store i32 %v2_2b574, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_2b588 = call i32 @function_2b58f(i32 %tmp99)
  ret i32 %v2_2b588
}

define i32 @function_2b58f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b58f:
  %v0_2b590 = load i32, i32* @eax, align 8
  ret i32 %v0_2b590
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS0_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEvRT_SN_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b591:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2b5b1 = load i32, i32* %arg1, align 4
  %v1_2b5b9 = inttoptr i32 %arg2 to i32*
  %v2_2b5b9 = load i32, i32* %v1_2b5b9, align 4
  store i32 %v2_2b5b9, i32* %arg1, align 4
  store i32 %v2_2b5b1, i32* %v1_2b5b9, align 4
  store i32 0, i32* @eax, align 8
  %v3_2b5d2 = call i32 @function_2b5d9(i32 %arg2, i32 %tmp102)
  ret i32 %v3_2b5d2
}

define i32 @function_2b5d9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b5d9:
  %v0_2b5da = load i32, i32* @eax, align 8
  ret i32 %v0_2b5da
}

define i32 @_ZN5boost15optional_detail13optional_baseIbEC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_2b5dc:
  %v4_2b5f3 = ptrtoint i8* %arg1 to i32
  %v2_2b5f9 = call i32 @unknown_4496a(i32 %v4_2b5f3)
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v1_2b60e = call i32 @function_2b615()
  ret i32 %v1_2b60e
}

define i32 @function_2b615() local_unnamed_addr {
dec_label_pc_2b615:
  %v0_2b616 = load i32, i32* @eax, align 8
  ret i32 %v0_2b616
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE7destroyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b618:
  ret i32 %arg1
}

define i32 @function_2b624(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b624:
  %v1_2b62a = load i32, i32* @ebp, align 4
  %v2_2b62a = add i32 %v1_2b62a, -12
  %v3_2b62a = inttoptr i32 %v2_2b62a to i32*
  store i32 30, i32* %v3_2b62a, align 4
  %v0_2b62f = load i32, i32* @ebp, align 4
  %v1_2b62f = add i32 %v0_2b62f, -28
  %v2_2b62f = inttoptr i32 %v1_2b62f to i32*
  %v3_2b62f = load i32, i32* %v2_2b62f, align 4
  %v1_2b632 = inttoptr i32 %v3_2b62f to i8*
  %v2_2b632 = load i8, i8* %v1_2b632, align 1
  %v5_2b635 = icmp eq i8 %v2_2b632, 0
  br i1 %v5_2b635, label %dec_label_pc_2b648, label %dec_label_pc_2b639

dec_label_pc_2b639:                               ; preds = %dec_label_pc_2b624
  %v0_2b639 = load i32, i32* @edx, align 8
  %v3_2b63d = load i32, i32* %v2_2b62f, align 4
  %sext = mul i32 %v0_2b639, 16777216
  %v2_2b643 = sdiv i32 %sext, 16777216
  %v3_2b643 = call i32 @unknown_59abe(i32 %v3_2b63d, i32 %v2_2b643)
  %v0_2b648.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2b648

dec_label_pc_2b648:                               ; preds = %dec_label_pc_2b639, %dec_label_pc_2b624
  %v0_2b648 = phi i32 [ %v0_2b648.pre, %dec_label_pc_2b639 ], [ %v0_2b62f, %dec_label_pc_2b624 ]
  %v1_2b648 = add i32 %v0_2b648, -12
  %v2_2b648 = inttoptr i32 %v1_2b648 to i32*
  %v3_2b648 = load i32, i32* %v2_2b648, align 4
  %v2_2b64b = xor i32 %v3_2b648, 30
  %v3_2b64b = icmp eq i32 %v2_2b64b, 0
  store i32 %v2_2b64b, i32* @eax, align 8
  br i1 %v3_2b64b, label %bb, label %dec_label_pc_2b654

bb:                                               ; preds = %dec_label_pc_2b648
  %v1_2b652 = call i32 @function_2b659()
  br label %dec_label_pc_2b654

dec_label_pc_2b654:                               ; preds = %bb, %dec_label_pc_2b648
  %v2_2b652 = phi i32 [ %v1_2b652, %bb ], [ %v2_2b64b, %dec_label_pc_2b648 ]
  ret i32 %v2_2b652
}

define i32 @function_2b659() local_unnamed_addr {
dec_label_pc_2b659:
  %v0_2b65a = load i32, i32* @eax, align 8
  ret i32 %v0_2b65a
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b65c:
  %v2_2b676 = load i32, i32* %arg1, align 4
  store i32 %v2_2b676, i32* @eax, align 8
  %v1_2b678 = icmp eq i32 %v2_2b676, 0
  %v1_2b67a = icmp eq i1 %v1_2b678, false
  br i1 %v1_2b67a, label %bb, label %dec_label_pc_2b67c

bb:                                               ; preds = %dec_label_pc_2b65c
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_2b67a = call i32 @function_2b6a0(i32 %tmp105)
  br label %dec_label_pc_2b67c

dec_label_pc_2b67c:                               ; preds = %bb, %dec_label_pc_2b65c
  %v3_2b694 = phi i32 [ %v3_2b67a, %bb ], [ %v2_2b676, %dec_label_pc_2b65c ]
  ret i32 %v3_2b694

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2b6a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b6a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b6a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b6a2:
  %cf.global-to-local = alloca i1, align 1
  %v0_2b6a4 = load i32, i32* @ebx, align 4
  %v1_2b6a4 = add i32 %v0_2b6a4, 862319701
  %v2_2b6a4 = inttoptr i32 %v1_2b6a4 to i8*
  %v3_2b6a4 = load i8, i8* %v2_2b6a4, align 1
  %v4_2b6a4 = load i32, i32* @ecx, align 4
  %v5_2b6a4 = trunc i32 %v4_2b6a4 to i8
  %v6_2b6a4 = add i8 %v5_2b6a4, %v3_2b6a4
  %v11_2b6a4 = icmp ult i8 %v6_2b6a4, %v3_2b6a4
  store i1 %v11_2b6a4, i1* %cf.global-to-local, align 1
  store i8 %v6_2b6a4, i8* %v2_2b6a4, align 1
  %v0_2b6aa = load i32, i32* @eax, align 8
  %v1_2b6aa = load i1, i1* %cf.global-to-local, align 1
  %v2_2b6aa = zext i1 %v1_2b6aa to i32
  %v3_2b6aa = add i32 %v0_2b6aa, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_2b6aa = add i32 %v3_2b6aa, %v2_2b6aa
  %v14_2b6aa = icmp eq i32 %v4_2b6aa, 0
  %v20_2b6aa = add i32 %v0_2b6aa, 20
  %v21_2b6aa = add i32 %v20_2b6aa, %v2_2b6aa
  %v22_2b6aa = icmp ule i32 %v21_2b6aa, %v0_2b6aa
  %v23_2b6aa = icmp ugt i32 %v0_2b6aa, -21
  %v24_2b6aa = select i1 %v1_2b6aa, i1 %v22_2b6aa, i1 %v23_2b6aa
  store i1 %v24_2b6aa, i1* %cf.global-to-local, align 1
  store i32 %v4_2b6aa, i32* @eax, align 8
  br i1 %v14_2b6aa, label %bb, label %dec_label_pc_2b6b1

bb:                                               ; preds = %dec_label_pc_2b6a2
  %v1_2b6af = call i32 @function_2b6b6()
  br label %dec_label_pc_2b6b1

dec_label_pc_2b6b1:                               ; preds = %bb, %dec_label_pc_2b6a2
  %v2_2b6af = phi i32 [ %v1_2b6af, %bb ], [ %v4_2b6aa, %dec_label_pc_2b6a2 ]
  ret i32 %v2_2b6af

; uselistorder directives
  uselistorder i8 %v3_2b6a4, { 1, 0 }
}

define i32 @function_2b6b6() local_unnamed_addr {
dec_label_pc_2b6b6:
  %v0_2b6b7 = load i32, i32* @eax, align 8
  ret i32 %v0_2b6b7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b6b8:
  %v1_2b6d2 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2b6d8 = call i32 @unknown_3bbba(i32 %v1_2b6d2)
  store i32 0, i32* @eax, align 8
  %v1_2b6e7 = call i32 @function_2b6ee()
  ret i32 %v1_2b6e7
}

define i32 @function_2b6ee() local_unnamed_addr {
dec_label_pc_2b6ee:
  %v0_2b6ef = load i32, i32* @eax, align 8
  ret i32 %v0_2b6ef
}

define i32 @_ZN5boost10shared_ptrINS_8signals210last_valueIbEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b6f0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2b710 = inttoptr i32 %arg2 to i32*
  %v2_2b710 = load i32, i32* %v1_2b710, align 4
  store i32 %v2_2b710, i32* %arg1, align 4
  %v1_2b720 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2b72a = call i32 @unknown_3bc32(i32 %v1_2b720)
  ret i32 0
}

define i32 @function_2b73a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b73a:
  %v0_2b73a = load i32, i32* @eax, align 8
  %v1_2b73a = add i32 %v0_2b73a, -792
  ret i32 %v1_2b73a
}

define i32 @_ZN5boost10shared_ptrINS_8signals210last_valueIbEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b742:
  %v1_2b75c = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2b762 = call i32 @unknown_3bc44(i32 %v1_2b75c)
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b77a:
  ret i32 0
}

define i32 @function_2b7aa() local_unnamed_addr {
dec_label_pc_2b7aa:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b7aa = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b7aa = add i32 %v0_2b7aa, -599422013
  %v2_2b7aa = inttoptr i32 %v1_2b7aa to i32*
  %v3_2b7aa = load i32, i32* %v2_2b7aa, align 4
  %v4_2b7aa = add i32 %v3_2b7aa, -1
  store i32 %v4_2b7aa, i32* %v2_2b7aa, align 4
  %v0_2b7b0 = load i32, i32* %eax.global-to-local, align 8
  %v0_2b7b4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2b7b7 = call i32 @unknown_59cce(i32 %v0_2b7b4, i32 %v0_2b7b0)
  store i32 %v2_2b7b7, i32* %eax.global-to-local, align 8
  %v0_2b7bc = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b7bc = add i32 %v0_2b7bc, -28
  %v2_2b7bc = inttoptr i32 %v1_2b7bc to i32*
  %v3_2b7bc = load i32, i32* %v2_2b7bc, align 4
  store i32 %v3_2b7bc, i32* %eax.global-to-local, align 8
  %v0_2b7bf = load i32, i32* %ebx.global-to-local, align 4
  %v2_2b7c6 = call i32 @unknown_59ed4(i32 %v3_2b7bc, i32 %v0_2b7bf)
  store i32 %v2_2b7c6, i32* %eax.global-to-local, align 8
  %v0_2b7cb = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b7cb = add i32 %v0_2b7cb, -32
  %v2_2b7cb = inttoptr i32 %v1_2b7cb to i32*
  %v3_2b7cb = load i32, i32* %v2_2b7cb, align 4
  store i32 %v3_2b7cb, i32* %eax.global-to-local, align 8
  %v1_2b7ce = add i32 %v3_2b7cb, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2b7d1 = add i32 %v0_2b7cb, -28
  %v2_2b7d1 = inttoptr i32 %v1_2b7d1 to i32*
  %v3_2b7d1 = load i32, i32* %v2_2b7d1, align 4
  %v1_2b7d4 = add i32 %v3_2b7d1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_2b7d4, i32* %eax.global-to-local, align 8
  %v2_2b7de = call i32 @unknown_56e6a(i32 %v1_2b7d4, i32 %v1_2b7ce)
  store i32 %v2_2b7de, i32* %eax.global-to-local, align 8
  %v0_2b7e3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b7e3 = add i32 %v0_2b7e3, -12
  %v2_2b7e3 = inttoptr i32 %v1_2b7e3 to i32*
  %v3_2b7e3 = load i32, i32* %v2_2b7e3, align 4
  %v2_2b7e6 = xor i32 %v3_2b7e3, 30
  %v3_2b7e6 = icmp eq i32 %v2_2b7e6, 0
  store i32 %v2_2b7e6, i32* @eax, align 8
  br i1 %v3_2b7e6, label %bb, label %dec_label_pc_2b7ef

bb:                                               ; preds = %dec_label_pc_2b7aa
  %v1_2b7ed = call i32 @function_2b80a()
  store i32 %v1_2b7ed, i32* @eax, align 8
  br label %dec_label_pc_2b7ef

dec_label_pc_2b7ef:                               ; preds = %bb, %dec_label_pc_2b7aa
  %v0_2b7ef = call i32 @function_2b805()
  store i32 %v0_2b7ef, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b7ef
}

define i32 @function_2b805() local_unnamed_addr {
dec_label_pc_2b805:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b80a() local_unnamed_addr {
dec_label_pc_2b80a:
  %v0_2b810 = load i32, i32* @eax, align 8
  ret i32 %v0_2b810
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b812:
  %v10_2b82f = icmp eq i32 %arg2, 0
  br i1 %v10_2b82f, label %bb, label %dec_label_pc_2b835

bb:                                               ; preds = %dec_label_pc_2b812
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v3_2b833 = call i32 @function_2b863(i32 0, i32 %tmp107)
  br label %dec_label_pc_2b835

dec_label_pc_2b835:                               ; preds = %bb, %dec_label_pc_2b812
  %v2_2b838 = load i32, i32* %arg1, align 4
  %v15_2b83a = icmp eq i32 %v2_2b838, %arg2
  %v1_2b83d = icmp eq i1 %v15_2b83a, false
  br i1 %v1_2b83d, label %bb111, label %dec_label_pc_2b83f

bb111:                                            ; preds = %dec_label_pc_2b835
  %v4_2b83d = call i32 @function_2b863(i32 30, i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_2b83f

dec_label_pc_2b83f:                               ; preds = %bb111, %dec_label_pc_2b835
  %v3_2b857 = phi i32 [ %v4_2b83d, %bb111 ], [ %v2_2b838, %dec_label_pc_2b835 ]
  ret i32 %v3_2b857

; uselistorder directives
  uselistorder i32 %v2_2b838, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2b863, { 1, 0 }
}

define i32 @function_2b863(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b863:
  %v0_2b863 = load i32, i32* @ebp, align 4
  %v1_2b863 = add i32 %v0_2b863, -32
  %v2_2b863 = inttoptr i32 %v1_2b863 to i32*
  %v3_2b863 = load i32, i32* %v2_2b863, align 4
  %v1_2b86a = add i32 %v0_2b863, -20
  %v2_2b870 = call i32 @unknown_59fd2(i32 %v1_2b86a, i32 %v3_2b863)
  %v0_2b875 = load i32, i32* @ebp, align 4
  %v1_2b875 = add i32 %v0_2b875, -28
  %v2_2b875 = inttoptr i32 %v1_2b875 to i32*
  %v3_2b875 = load i32, i32* %v2_2b875, align 4
  %v1_2b87c = add i32 %v0_2b875, -20
  %v2_2b882 = call i32 @unknown_52254(i32 %v1_2b87c, i32 %v3_2b875)
  %v0_2b887 = load i32, i32* @ebp, align 4
  %v1_2b887 = add i32 %v0_2b887, -20
  %v1_2b88d = call i32 @unknown_47dca(i32 %v1_2b887)
  %v0_2b892 = load i32, i32* @ebp, align 4
  %v1_2b892 = add i32 %v0_2b892, -12
  %v2_2b892 = inttoptr i32 %v1_2b892 to i32*
  %v3_2b892 = load i32, i32* %v2_2b892, align 4
  %v2_2b895 = xor i32 %v3_2b892, 30
  %v3_2b895 = icmp eq i32 %v2_2b895, 0
  store i32 %v2_2b895, i32* @eax, align 8
  br i1 %v3_2b895, label %bb, label %dec_label_pc_2b89e

bb:                                               ; preds = %dec_label_pc_2b863
  %v1_2b89c = call i32 @function_2b8a3()
  br label %dec_label_pc_2b89e

dec_label_pc_2b89e:                               ; preds = %bb, %dec_label_pc_2b863
  %v2_2b89c = phi i32 [ %v1_2b89c, %bb ], [ %v2_2b895, %dec_label_pc_2b863 ]
  ret i32 %v2_2b89c
}

define i32 @function_2b8a3() local_unnamed_addr {
dec_label_pc_2b8a3:
  %v0_2b8a4 = load i32, i32* @eax, align 8
  ret i32 %v0_2b8a4
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b8a6:
  ret i32 30
}

define i32 @function_2b8c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b8c2:
  %v0_2b8c9 = load i32, i32* @edx, align 8
  %v1_2b8c9 = load i32, i32* @eax, align 8
  %v2_2b8c9 = inttoptr i32 %v1_2b8c9 to i32*
  store i32 %v0_2b8c9, i32* %v2_2b8c9, align 4
  %v0_2b8cb = load i32, i32* @ebp, align 4
  %v1_2b8cb = add i32 %v0_2b8cb, -12
  %v2_2b8cb = inttoptr i32 %v1_2b8cb to i32*
  %v3_2b8cb = load i32, i32* %v2_2b8cb, align 4
  %v2_2b8ce = xor i32 %v3_2b8cb, 30
  %v3_2b8ce = icmp eq i32 %v2_2b8ce, 0
  store i32 %v2_2b8ce, i32* @eax, align 8
  br i1 %v3_2b8ce, label %bb, label %dec_label_pc_2b8d7

bb:                                               ; preds = %dec_label_pc_2b8c2
  %v1_2b8d5 = call i32 @function_2b8dc()
  br label %dec_label_pc_2b8d7

dec_label_pc_2b8d7:                               ; preds = %bb, %dec_label_pc_2b8c2
  %v2_2b8d5 = phi i32 [ %v1_2b8d5, %bb ], [ %v2_2b8ce, %dec_label_pc_2b8c2 ]
  ret i32 %v2_2b8d5
}

define i32 @function_2b8dc() local_unnamed_addr {
dec_label_pc_2b8dc:
  %v0_2b8dd = load i32, i32* @eax, align 8
  ret i32 %v0_2b8dd
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b8de:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_2b8fc = ptrtoint i32* %stack_var_-44 to i32
  %v2_2b902 = call i32 @unknown_401e0(i32 %v2_2b8fc)
  %v1_2b90a = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2b910 = call i32 @unknown_3e038(i32 %v1_2b90a)
  %v2_2b915 = ptrtoint i32* %stack_var_-56 to i32
  %v3_2b91f = call i32 @unknown_40214(i32 %v2_2b915, i32 %v2_2b910)
  %v3_2b927 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_2b927
}

define i32 @function_2b970(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b970:
  %v0_2b970 = load i32, i32* @eax, align 8
  %v4_2b970 = trunc i32 %v0_2b970 to i8
  %v5_2b970 = icmp eq i8 %v4_2b970, 0
  %v0_2b982 = load i32, i32* @ebp, align 4
  br i1 %v5_2b970, label %dec_label_pc_2b982, label %dec_label_pc_2b974

dec_label_pc_2b974:                               ; preds = %dec_label_pc_2b970
  %v1_2b974 = add i32 %v0_2b982, -44
  %v2_2b974 = inttoptr i32 %v1_2b974 to i32*
  %v3_2b974 = load i32, i32* %v2_2b974, align 4
  %v1_2b977 = add i32 %v3_2b974, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2b977 = inttoptr i32 %v1_2b977 to i8*
  store i8 0, i8* %v2_2b977, align 1
  store i32 0, i32* @ebx, align 4
  %v1_2b980 = call i32 @function_2b9be(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_2b980

dec_label_pc_2b982:                               ; preds = %dec_label_pc_2b970
  %v1_2b982 = add i32 %v0_2b982, -32
  %v1_2b98d = add i32 %v0_2b982, -48
  %v3_2b997 = call i32 @unknown_58b1e(i32 %v1_2b982, i32 %v1_2b98d, i32 0)
  %v0_2b99f = load i32, i32* @ebp, align 4
  %v1_2b99f = add i32 %v0_2b99f, -32
  %v1_2b9a5 = call i32 @unknown_58b64(i32 %v1_2b99f)
  %v0_2b9aa = load i32, i32* @ebp, align 4
  %v1_2b9aa = add i32 %v0_2b9aa, -24
  %v2_2b9b4 = call i32 @unknown_58b92(i32 %v1_2b9a5, i32 %v1_2b9aa)
  ret i32 %v2_2b9b4

; uselistorder directives
  uselistorder i32 %v0_2b982, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_2b9be, { 1, 0 }
}

define i32 @function_2b9be(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9be:
  %v0_2b9be = load i32, i32* @ebp, align 4
  %v1_2b9be = add i32 %v0_2b9be, -24
  %v2_2b9c4 = call i32 @unknown_403c8(i32 %v1_2b9be)
  %v0_2b9c9 = load i32, i32* @ebx, align 4
  %v10_2b9c9 = icmp eq i32 %v0_2b9c9, 1
  br i1 %v10_2b9c9, label %dec_label_pc_2b9d0, label %dec_label_pc_2b9ce

dec_label_pc_2b9ce:                               ; preds = %dec_label_pc_2b9be
  %v0_2b9ce = call i32 @function_2ba2e()
  ret i32 %v0_2b9ce

dec_label_pc_2b9d0:                               ; preds = %dec_label_pc_2b9be
  %v0_2b9d0 = load i32, i32* @ebp, align 4
  %v1_2b9d0 = add i32 %v0_2b9d0, -40
  %v2_2b9d6 = call i32 @unknown_40308(i32 %v1_2b9d0)
  %v0_2b9db = load i32, i32* @ebp, align 4
  %v1_2b9db = add i32 %v0_2b9db, -44
  %v2_2b9db = inttoptr i32 %v1_2b9db to i32*
  %v3_2b9db = load i32, i32* %v2_2b9db, align 4
  %v1_2b9de = add i32 %v3_2b9db, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2b9e4 = call i32 @unknown_3e038(i32 %v1_2b9de)
  %v0_2b9e9 = load i32, i32* @ebp, align 4
  %v1_2b9e9 = add i32 %v0_2b9e9, -36
  %v3_2b9f3 = call i32 @unknown_40264(i32 %v1_2b9e9, i32 %v2_2b9e4)
  %v0_2b9fb = load i32, i32* @ebp, align 4
  %v1_2b9fb = add i32 %v0_2b9fb, -36
  %v1_2ba02 = add i32 %v0_2b9fb, -40
  %v3_2ba08 = call i32 @unknown_402b4(i32 %v1_2ba02, i32 %v1_2b9fb)
  %v0_2ba15 = call i32 @function_2ba2e()
  ret i32 %v0_2ba15

; uselistorder directives
  uselistorder i32 ()* @function_2ba2e, { 1, 0 }
}

define i32 @function_2ba18() local_unnamed_addr {
dec_label_pc_2ba18:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ba18 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ba18
}

define i32 @function_2ba2e() local_unnamed_addr {
dec_label_pc_2ba2e:
  %v0_2ba2e = load i32, i32* @ebp, align 4
  %v1_2ba2e = add i32 %v0_2ba2e, -12
  %v2_2ba2e = inttoptr i32 %v1_2ba2e to i32*
  %v3_2ba2e = load i32, i32* %v2_2ba2e, align 4
  %v2_2ba31 = xor i32 %v3_2ba2e, 30
  %v3_2ba31 = icmp eq i32 %v2_2ba31, 0
  store i32 %v2_2ba31, i32* @eax, align 8
  br i1 %v3_2ba31, label %bb, label %dec_label_pc_2ba3a

bb:                                               ; preds = %dec_label_pc_2ba2e
  %v1_2ba38 = call i32 @function_2ba3f()
  br label %dec_label_pc_2ba3a

dec_label_pc_2ba3a:                               ; preds = %bb, %dec_label_pc_2ba2e
  %v2_2ba38 = phi i32 [ %v1_2ba38, %bb ], [ %v2_2ba31, %dec_label_pc_2ba2e ]
  ret i32 %v2_2ba38
}

define i32 @function_2ba3f() local_unnamed_addr {
dec_label_pc_2ba3f:
  %v0_2ba43 = load i32, i32* @eax, align 8
  ret i32 %v0_2ba43
}

define i32 @_ZN5boosteqINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiSZ_bS10_S12_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS13_12always_bool2ES15_S16_E4typeEE4typeERKNS_15iterator_facadeIS15_T0_T1_T2_T3_EERKNS1E_IS16_T5_T6_T7_T8_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba44:
  %edx.global-to-local = alloca i32, align 4
  %v0_2ba61 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2ba61, 16777216
  %v3_2ba72 = sdiv i32 %sext, 16777216
  %v4_2ba72 = call i32 @unknown_5a26a(i32 %arg1, i32 %arg2, i32 %v3_2ba72)
  store i32 %v4_2ba72, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_2ba81 = call i32 @function_2ba88()
  ret i32 %v1_2ba81
}

define i32 @function_2ba88() local_unnamed_addr {
dec_label_pc_2ba88:
  %v0_2ba89 = load i32, i32* @eax, align 8
  ret i32 %v0_2ba89
}

define i32 @_ZN5boost8signals214no_slots_errorC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba8a:
  ret i32 %arg1
}

define i32 @function_2bab0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bab0:
  %v0_2bab4 = call i32 @unknown_3dcf6()
  %v0_2bab9 = load i32, i32* @ebp, align 4
  %v1_2bab9 = add i32 %v0_2bab9, -28
  %v2_2bab9 = inttoptr i32 %v1_2bab9 to i32*
  %v3_2bab9 = load i32, i32* %v2_2bab9, align 4
  %v1_2babc = inttoptr i32 %v3_2bab9 to i32*
  store i32 ptrtoint (%vtable_38e88_type* @global_var_38e88.2550 to i32), i32* %v1_2babc, align 4
  %v0_2bac2 = load i32, i32* @ebp, align 4
  %v1_2bac2 = add i32 %v0_2bac2, -12
  %v2_2bac2 = inttoptr i32 %v1_2bac2 to i32*
  %v3_2bac2 = load i32, i32* %v2_2bac2, align 4
  ret i32 %v3_2bac2

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38e88_type* @global_var_38e88.2550 to i32), { 2, 1, 0 }
}

define i32 @function_2bab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bab8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bac6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bac6:
  %v0_2bac6 = load i32, i32* @eax, align 8
  %v2_2bac6 = xor i32 %v0_2bac6, 30
  %v3_2bac6 = icmp eq i32 %v2_2bac6, 0
  store i32 %v2_2bac6, i32* @eax, align 8
  br i1 %v3_2bac6, label %bb, label %dec_label_pc_2bace

bb:                                               ; preds = %dec_label_pc_2bac6
  %v1_2bacc = call i32 @function_2bad3()
  br label %dec_label_pc_2bace

dec_label_pc_2bace:                               ; preds = %bb, %dec_label_pc_2bac6
  %v2_2bacc = phi i32 [ %v1_2bacc, %bb ], [ %v2_2bac6, %dec_label_pc_2bac6 ]
  ret i32 %v2_2bacc
}

define i32 @function_2bad3() local_unnamed_addr {
dec_label_pc_2bad3:
  %v0_2bad4 = load i32, i32* @eax, align 8
  ret i32 %v0_2bad4
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bad6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2bb01 = call i32 @unknown_57560(i32 %tmp102, i32 %arg2)
  %v1_2bb09 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2bb0f = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2bb19 = call i32 @unknown_3cf4a(i32 %v1_2bb0f, i32 %v1_2bb09)
  store i32 ptrtoint (%vtable_38968_type* @global_var_38968.2574 to i32), i32* %arg1, align 4
  %v2_2bb2a = inttoptr i32 %v1_2bb0f to i32*
  store i32 ptrtoint (i32* @global_var_3897c.2575 to i32), i32* %v2_2bb2a, align 4
  store i32 0, i32* @eax, align 8
  %v1_2bb3b = call i32 @function_2bb5b()
  store i32 %v1_2bb3b, i32* @eax, align 8
  %v0_2bb3d = call i32 @function_2bb56()
  ret i32 %v0_2bb3d

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2bb40() local_unnamed_addr {
dec_label_pc_2bb40:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bb40 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bb40
}

define i32 @function_2bb56() local_unnamed_addr {
dec_label_pc_2bb56:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bb5b() local_unnamed_addr {
dec_label_pc_2bb5b:
  %v0_2bb60 = load i32, i32* @eax, align 8
  ret i32 %v0_2bb60
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEEC1ERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bb62:
  %v2_2bb8c = call i32 @unknown_57638(i32 %arg1, i32 %arg2)
  ret i32 %arg2
}

define i32 @function_2bb98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bb98:
  %v0_2bb98 = load i32, i32* @ebp, align 4
  %v1_2bb98 = add i32 %v0_2bb98, 1
  store i32 %v1_2bb98, i32* @ebp, align 4
  %v2_2bb9b = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v14_2bb9b = load i32, i32* @eax, align 8
  %v15_2bb9b = inttoptr i32 %v14_2bb9b to i8*
  store i8 %v2_2bb9b, i8* %v15_2bb9b, align 1
  %v0_2bb9f = load i32, i32* @eax, align 8
  %v11_2bb9f = and i32 %v0_2bb9f, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_2bba4 = call i32 @unknown_3efbe(i32 %v11_2bb9f)
  %v0_2bba9 = load i32, i32* @ebp, align 4
  %v1_2bba9 = add i32 %v0_2bba9, -28
  %v2_2bba9 = inttoptr i32 %v1_2bba9 to i32*
  %v3_2bba9 = load i32, i32* %v2_2bba9, align 4
  %v1_2bbac = inttoptr i32 %v3_2bba9 to i32*
  store i32 ptrtoint (%vtable_38908_type* @global_var_38908.2576 to i32), i32* %v1_2bbac, align 4
  %v0_2bbb2 = load i32, i32* @ebp, align 4
  %v1_2bbb2 = add i32 %v0_2bbb2, -28
  %v2_2bbb2 = inttoptr i32 %v1_2bbb2 to i32*
  %v3_2bbb2 = load i32, i32* %v2_2bbb2, align 4
  %v1_2bbb5 = add i32 %v3_2bbb2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2bbb5 = inttoptr i32 %v1_2bbb5 to i32*
  store i32 ptrtoint (i32* @global_var_38924.2577 to i32), i32* %v2_2bbb5, align 4
  %v0_2bbbc = load i32, i32* @ebp, align 4
  %v1_2bbbc = add i32 %v0_2bbbc, -28
  %v2_2bbbc = inttoptr i32 %v1_2bbbc to i32*
  %v3_2bbbc = load i32, i32* %v2_2bbbc, align 4
  %v1_2bbbf = add i32 %v3_2bbbc, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_2bbbf = inttoptr i32 %v1_2bbbf to i32*
  store i32 ptrtoint (i32* @global_var_38934.2578 to i32), i32* %v2_2bbbf, align 4
  %v0_2bbc6 = load i32, i32* @ebp, align 4
  %v1_2bbc6 = add i32 %v0_2bbc6, -12
  %v2_2bbc6 = inttoptr i32 %v1_2bbc6 to i32*
  %v3_2bbc6 = load i32, i32* %v2_2bbc6, align 4
  %v2_2bbc9 = xor i32 %v3_2bbc6, 30
  %v3_2bbc9 = icmp eq i32 %v2_2bbc9, 0
  store i32 %v2_2bbc9, i32* @eax, align 8
  br i1 %v3_2bbc9, label %bb, label %dec_label_pc_2bbd2

bb:                                               ; preds = %dec_label_pc_2bb98
  %v1_2bbd0 = call i32 @function_2bbd7()
  br label %dec_label_pc_2bbd2

dec_label_pc_2bbd2:                               ; preds = %bb, %dec_label_pc_2bb98
  %v3_2bbd0 = phi i32 [ %v1_2bbd0, %bb ], [ %v2_2bbc9, %dec_label_pc_2bb98 ]
  ret i32 %v3_2bbd0
}

define i32 @function_2bbd7() local_unnamed_addr {
dec_label_pc_2bbd7:
  %v0_2bbd8 = load i32, i32* @eax, align 8
  ret i32 %v0_2bbd8
}

define i32 @_ZN5boost15throw_exceptionINS_8signals214no_slots_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbd9:
  %v1_2bbf8 = call i32 @unknown_3bc32(i32 %arg1)
  ret i32 %v1_2bbf8

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3bc32, { 1, 0 }
}

define i32 @function_2bc0a() local_unnamed_addr {
dec_label_pc_2bc0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bc0a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bc0a
}

define i32 @function_2bc2c() local_unnamed_addr {
dec_label_pc_2bc2c:
  %v0_2bc2c = call i32 @function_ec85bc33()
  ret i32 %v0_2bc2c
}

define i32 @function_2bc31() local_unnamed_addr {
dec_label_pc_2bc31:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_2bc31 = load i32, i32* %eax.global-to-local, align 8
  %v2_2bc31 = add i32 %v0_2bc31, 141
  %v16_2bc31 = urem i32 %v2_2bc31, 256
  %v18_2bc31 = and i32 %v0_2bc31, -256
  %v19_2bc31 = or i32 %v16_2bc31, %v18_2bc31
  store i32 %v19_2bc31, i32* %eax.global-to-local, align 8
  %v0_2bc33 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2bc33 = add i32 %v0_2bc33, 1
  store i32 %v1_2bc33, i32* %ebp.global-to-local, align 4
  %v1_2bc34 = load i32, i32* %ecx.global-to-local, align 4
  %v2_2bc34 = add i32 %v1_2bc34, 1558717444
  %v3_2bc34 = inttoptr i32 %v2_2bc34 to double*
  %v4_2bc34 = load double, double* %v3_2bc34, align 4
  %v5_2bc34 = fpext double %v4_2bc34 to x86_fp80
  %v6_2bc34 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_2bc34 = fmul x86_fp80 %v5_2bc34, %v6_2bc34
  store x86_fp80 %v7_2bc34, x86_fp80* %st0.global-to-local, align 4
  %v0_2bc3a = call i32 @unknown_d2babc41()
  store i32 %v0_2bc3a, i32* @eax, align 8
  %v0_2bc3f = call i32 @function_448bbc46()
  store i32 %v0_2bc3f, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bc3f

; uselistorder directives
  uselistorder i32 %v0_2bc31, { 1, 0 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 0 }
}

define i32 @function_2bc55() local_unnamed_addr {
dec_label_pc_2bc55:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bc55 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bc55 = add i32 %v0_2bc55, -599421498
  %v2_2bc55 = inttoptr i32 %v1_2bc55 to i32*
  %v3_2bc55 = load i32, i32* %v2_2bc55, align 4
  %v4_2bc55 = add i32 %v3_2bc55, -1
  store i32 %v4_2bc55, i32* %v2_2bc55, align 4
  %v0_2bc5b = load i32, i32* %eax.global-to-local, align 8
  %v1_2bc5e = call i32 @unknown_5a499(i32 %v0_2bc5b)
  store i32 %v1_2bc5e, i32* @eax, align 8
  %v0_2bc63 = call i32 @function_2bc67()
  store i32 %v0_2bc63, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bc63
}

define i32 @function_2bc65() local_unnamed_addr {
dec_label_pc_2bc65:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bc65 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bc65
}

define i32 @function_2bc67() local_unnamed_addr {
dec_label_pc_2bc67:
  %v3_2bc67 = load i32, i32* @eax, align 8
  ret i32 %v3_2bc67
}

define i32 @_ZN5boostneINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiSZ_bS10_S12_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS13_12always_bool2ES15_S16_E4typeEE4typeERKNS_15iterator_facadeIS15_T0_T1_T2_T3_EERKNS1E_IS16_T5_T6_T7_T8_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc79:
  ret i32 %arg1
}

define i32 @function_2bc84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bc84:
  %v0_2bc86 = load i32, i32* @ebp, align 4
  %v1_2bc89 = add i32 %v0_2bc86, 2
  store i32 %v1_2bc89, i32* @ebp, align 4
  %v2_2bc91 = add i32 %v0_2bc86, -10
  %v3_2bc91 = inttoptr i32 %v2_2bc91 to i32*
  store i32 30, i32* %v3_2bc91, align 4
  %v0_2bc96 = load i32, i32* @edx, align 8
  %v0_2bc9a = load i32, i32* @ebp, align 4
  %v1_2bc9a = add i32 %v0_2bc9a, -32
  %v2_2bc9a = inttoptr i32 %v1_2bc9a to i32*
  %v3_2bc9a = load i32, i32* %v2_2bc9a, align 4
  %v1_2bca1 = add i32 %v0_2bc9a, -28
  %v2_2bca1 = inttoptr i32 %v1_2bca1 to i32*
  %v3_2bca1 = load i32, i32* %v2_2bca1, align 4
  %sext = mul i32 %v0_2bc96, 16777216
  %v3_2bca7 = sdiv i32 %sext, 16777216
  %v4_2bca7 = call i32 @unknown_5a49f(i32 %v3_2bca1, i32 %v3_2bc9a, i32 %v3_2bca7)
  %v1_2bcac = xor i32 %v4_2bca7, 1
  store i32 %v1_2bcac, i32* @eax, align 8
  %v0_2bcaf = load i32, i32* @ebp, align 4
  %v1_2bcaf = add i32 %v0_2bcaf, -12
  %v2_2bcaf = inttoptr i32 %v1_2bcaf to i32*
  %v3_2bcaf = load i32, i32* %v2_2bcaf, align 4
  %v3_2bcb2 = icmp eq i32 %v3_2bcaf, 30
  br i1 %v3_2bcb2, label %bb, label %dec_label_pc_2bcbb

bb:                                               ; preds = %dec_label_pc_2bc84
  %v1_2bcb9 = call i32 @function_2bcc0()
  br label %dec_label_pc_2bcbb

dec_label_pc_2bcbb:                               ; preds = %bb, %dec_label_pc_2bc84
  %v3_2bcb9 = phi i32 [ %v1_2bcb9, %bb ], [ %v1_2bcac, %dec_label_pc_2bc84 ]
  ret i32 %v3_2bcb9
}

define i32 @function_2bcc0() local_unnamed_addr {
dec_label_pc_2bcc0:
  %v0_2bcc1 = load i32, i32* @eax, align 8
  ret i32 %v0_2bcc1
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bcc2:
  %v1_2bcdf = call i32 @unknown_5a75a(i32 %arg1)
  %v1_2bce7 = call i32 @unknown_5a787(i32 %v1_2bcdf)
  ret i32 %v1_2bce7
}

define i32 @function_2bcfc() local_unnamed_addr {
dec_label_pc_2bcfc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bcfc = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bcfc = add i32 %v0_2bcfc, -1
  store i32 %v1_2bcfc, i32* %ecx.global-to-local, align 4
  %v0_2bcfe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bcfe
}

define i32 @_ZN5boost8optionalIbEaSERKb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bd00:
  %v2_2bd2a = call i32 @unknown_5a7fa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2bd3c = call i32 @function_2bd43()
  ret i32 %v1_2bd3c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bd43() local_unnamed_addr {
dec_label_pc_2bd43:
  %v4_2bd43 = load i32, i32* @eax, align 8
  ret i32 %v4_2bd43
}

define i32 @function_2bd44(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd44:
  %v0_2bd44 = load i32, i32* @eax, align 8
  ret i32 %v0_2bd44
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd46:
  %v1_2bd63 = call i32 @unknown_5a8ae(i32 %arg1)
  %v1_2bd6b = call i32 @unknown_5a8db(i32 %v1_2bd63)
  %v1_2bd76 = call i32 @unknown_5a8ae(i32 %arg1)
  store i32 %v1_2bd76, i32* @eax, align 8
  %v1_2bd85 = call i32 @function_2bd8c()
  ret i32 %v1_2bd85

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5a8ae, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bd8c() local_unnamed_addr {
dec_label_pc_2bd8c:
  %v0_2bd8d = load i32, i32* @eax, align 8
  ret i32 %v0_2bd8d
}

define i32 @_ZNK5boost8optionalIbEcvMNS_15optional_detail13optional_baseIbEEKFbvEEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bd8e:
  %v2_2bdb8 = call i32 @unknown_5a958(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2bdcd = call i32 @function_2bdd4()
  ret i32 %v1_2bdcd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bdd4() local_unnamed_addr {
dec_label_pc_2bdd4:
  %v0_2bdd5 = load i32, i32* @eax, align 8
  ret i32 %v0_2bdd5
}

define i32 @_ZN5boost8optionalIbE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bdd8:
  ret i32 30
}

define i32 @function_2bdee(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bdee:
  %v0_2bdee = load i32, i32* @ebx, align 4
  %v1_2bdee = add i32 %v0_2bdee, 76145733
  %v2_2bdee = inttoptr i32 %v1_2bdee to i8*
  %v3_2bdee = load i8, i8* %v2_2bdee, align 1
  %v4_2bdee = udiv i8 %v3_2bdee, 16
  %v5_2bdee = mul i8 %v3_2bdee, 16
  %v6_2bdee = or i8 %v4_2bdee, %v5_2bdee
  store i8 %v6_2bdee, i8* %v2_2bdee, align 1
  %v0_2bdf5 = call i32 @unknown_5aa0a()
  %v4_2bdfa = trunc i32 %v0_2bdf5 to i8
  %v5_2bdfa = icmp eq i8 %v4_2bdfa, 0
  %v1_2bdfc = icmp eq i1 %v5_2bdfa, false
  br i1 %v1_2bdfc, label %bb, label %dec_label_pc_2bdfe

bb:                                               ; preds = %dec_label_pc_2bdee
  %v2_2bdfc = call i32 @function_2be22()
  br label %dec_label_pc_2bdfe

dec_label_pc_2bdfe:                               ; preds = %bb, %dec_label_pc_2bdee
  %v4_2bdfe = phi i32 [ %v2_2bdfc, %bb ], [ %v0_2bdf5, %dec_label_pc_2bdee ]
  ret i32 %v4_2bdfe
}

define i32 @function_2be0a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2be0a:
  %v0_2be0a = load i1, i1* @cf, align 1
  %v1_2be0a = load i1, i1* @zf, align 1
  %v2_2be0a = or i1 %v0_2be0a, %v1_2be0a
  br i1 %v2_2be0a, label %dec_label_pc_2be0c, label %dec_label_pc_2be0e

dec_label_pc_2be0c:                               ; preds = %dec_label_pc_2be0a
  %v2_2be0c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2be0c = load i32, i32* @eax, align 8
  %v4_2be0c = trunc i32 %v3_2be0c to i8
  %v5_2be0c = add i8 %v4_2be0c, %v2_2be0c
  %v21_2be0c = inttoptr i32 %v3_2be0c to i8*
  store i8 %v5_2be0c, i8* %v21_2be0c, align 1
  br label %dec_label_pc_2be0e

dec_label_pc_2be0e:                               ; preds = %dec_label_pc_2be0a, %dec_label_pc_2be0c
  %v3_2be16 = load i32, i32* @eax, align 8
  ret i32 %v3_2be16

; uselistorder directives
  uselistorder label %dec_label_pc_2be0e, { 1, 0 }
}

define i32 @function_2be22() local_unnamed_addr {
dec_label_pc_2be22:
  %v0_2be22 = load i32, i32* @ebp, align 4
  %v1_2be22 = add i32 %v0_2be22, -28
  %v2_2be22 = inttoptr i32 %v1_2be22 to i32*
  %v3_2be22 = load i32, i32* %v2_2be22, align 4
  %v1_2be28 = call i32 @unknown_5aa3a(i32 %v3_2be22)
  store i32 %v1_2be28, i32* @eax, align 8
  %v0_2be2d = load i32, i32* @ebp, align 4
  %v1_2be2d = add i32 %v0_2be2d, -12
  %v2_2be2d = inttoptr i32 %v1_2be2d to i32*
  %v3_2be2d = load i32, i32* %v2_2be2d, align 4
  %v3_2be30 = icmp eq i32 %v3_2be2d, 30
  br i1 %v3_2be30, label %bb, label %dec_label_pc_2be39

bb:                                               ; preds = %dec_label_pc_2be22
  %v1_2be37 = call i32 @function_2be3e()
  br label %dec_label_pc_2be39

dec_label_pc_2be39:                               ; preds = %bb, %dec_label_pc_2be22
  %v2_2be37 = phi i32 [ %v1_2be37, %bb ], [ %v1_2be28, %dec_label_pc_2be22 ]
  ret i32 %v2_2be37
}

define i32 @function_2be3e() local_unnamed_addr {
dec_label_pc_2be3e:
  %v0_2be3f = load i32, i32* @eax, align 8
  ret i32 %v0_2be3f
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEEC1ESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be40:
  ret i32 %arg1
}

define i32 @function_2be4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2be4c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2be4c = load i32, i32* @ebp, align 4
  %v1_2be4c = add i32 %v0_2be4c, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2be4c = inttoptr i32 %v1_2be4c to i32*
  %v3_2be4c = load i32, i32* %v2_2be4c, align 4
  store i32 %v3_2be4c, i32* %eax.global-to-local, align 8
  %v2_2be4f = add i32 %v0_2be4c, -36
  %v3_2be4f = inttoptr i32 %v2_2be4f to i32*
  store i32 %v3_2be4c, i32* %v3_2be4f, align 4
  %v0_2be52 = load i32, i32* @ebp, align 4
  %v1_2be52 = add i32 %v0_2be52, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2be52 = inttoptr i32 %v1_2be52 to i32*
  %v3_2be52 = load i32, i32* %v2_2be52, align 4
  %v2_2be55 = add i32 %v0_2be52, -32
  %v3_2be55 = inttoptr i32 %v2_2be55 to i32*
  store i32 %v3_2be52, i32* %v3_2be55, align 4
  %v1_2be5e = load i32, i32* @ebp, align 4
  %v2_2be5e = add i32 %v1_2be5e, -12
  %v3_2be5e = inttoptr i32 %v2_2be5e to i32*
  store i32 30, i32* %v3_2be5e, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2be63 = load i32, i32* @ebp, align 4
  %v1_2be63 = add i32 %v0_2be63, -28
  %v2_2be63 = inttoptr i32 %v1_2be63 to i32*
  %v3_2be63 = load i32, i32* %v2_2be63, align 4
  store i32 %v3_2be63, i32* %eax.global-to-local, align 8
  %v1_2be69 = call i32 @unknown_3cc7a(i32 %v3_2be63)
  store i32 %v1_2be69, i32* %eax.global-to-local, align 8
  %v0_2be6e = load i32, i32* @ebp, align 4
  %v1_2be6e = add i32 %v0_2be6e, -28
  %v2_2be6e = inttoptr i32 %v1_2be6e to i32*
  %v3_2be6e = load i32, i32* %v2_2be6e, align 4
  store i32 %v3_2be6e, i32* %eax.global-to-local, align 8
  %v1_2be71 = inttoptr i32 %v3_2be6e to i32*
  store i32 ptrtoint (%vtable_38b00_type* @global_var_38b00.2580 to i32), i32* %v1_2be71, align 4
  %v0_2be77 = load i32, i32* @ebp, align 4
  %v1_2be77 = add i32 %v0_2be77, -28
  %v2_2be77 = inttoptr i32 %v1_2be77 to i32*
  %v3_2be77 = load i32, i32* %v2_2be77, align 4
  store i32 %v3_2be77, i32* @ecx, align 4
  %v1_2be7a = add i32 %v0_2be77, -36
  %v2_2be7a = inttoptr i32 %v1_2be7a to i32*
  %v3_2be7a = load i32, i32* %v2_2be7a, align 4
  store i32 %v3_2be7a, i32* %eax.global-to-local, align 8
  %v1_2be7d = add i32 %v0_2be77, -32
  %v2_2be7d = inttoptr i32 %v1_2be7d to i32*
  %v3_2be7d = load i32, i32* %v2_2be7d, align 4
  store i32 %v3_2be7d, i32* %edx.global-to-local, align 8
  %v2_2be80 = add i32 %v3_2be77, 260
  %v3_2be80 = inttoptr i32 %v2_2be80 to i32*
  store i32 %v3_2be7a, i32* %v3_2be80, align 4
  %v0_2be86 = load i32, i32* %edx.global-to-local, align 8
  %v1_2be86 = load i32, i32* @ecx, align 4
  %v2_2be86 = add i32 %v1_2be86, ptrtoint (i32* @global_var_108.2581 to i32)
  %v3_2be86 = inttoptr i32 %v2_2be86 to i32*
  store i32 %v0_2be86, i32* %v3_2be86, align 4
  %v4_2be86 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_2be86
}

define i32 @function_2be8e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2be8e:
  %v0_2be8f = load i32, i32* @eax, align 8
  %v2_2be8f = xor i32 %v0_2be8f, 30
  %v3_2be8f = icmp eq i32 %v2_2be8f, 0
  store i32 %v2_2be8f, i32* @eax, align 8
  br i1 %v3_2be8f, label %bb, label %dec_label_pc_2be98

bb:                                               ; preds = %dec_label_pc_2be8e
  %v1_2be96 = call i32 @function_2be9d()
  br label %dec_label_pc_2be98

dec_label_pc_2be98:                               ; preds = %bb, %dec_label_pc_2be8e
  %v2_2be96 = phi i32 [ %v1_2be96, %bb ], [ %v2_2be8f, %dec_label_pc_2be8e ]
  ret i32 %v2_2be96
}

define i32 @function_2be9d() local_unnamed_addr {
dec_label_pc_2be9d:
  %v0_2be9e = load i32, i32* @eax, align 8
  ret i32 %v0_2be9e
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEEC1EPSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bea0:
  %v1_2bec3 = call i32 @unknown_3c0b6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2bed0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bed0:
  %v0_2bed0 = load i32, i32* @ebx, align 4
  %v1_2bed0 = add i32 %v0_2bed0, 1435231301
  %v2_2bed0 = inttoptr i32 %v1_2bed0 to i8*
  %v3_2bed0 = load i8, i8* %v2_2bed0, align 1
  %v4_2bed0 = load i32, i32* @ecx, align 4
  %v5_2bed0 = trunc i32 %v4_2bed0 to i8
  %v6_2bed0 = add i8 %v5_2bed0, %v3_2bed0
  store i8 %v6_2bed0, i8* %v2_2bed0, align 1
  %v0_2bed8 = load i32, i32* @eax, align 8
  %v2_2bed9 = or i32 %v0_2bed8, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v0_2bedb = load i32, i32* @ebp, align 4
  %v1_2bedb = add i32 %v0_2bedb, 1
  store i32 %v1_2bedb, i32* @ebp, align 4
  %v2_2bedd = xor i32 %v2_2bed9, 30
  %v3_2bedd = icmp eq i32 %v2_2bedd, 0
  store i32 %v2_2bedd, i32* @eax, align 8
  br i1 %v3_2bedd, label %bb, label %dec_label_pc_2bee6

bb:                                               ; preds = %dec_label_pc_2bed0
  %v2_2bee4 = call i32 @function_2beeb(i32 %v0_2bed8)
  br label %dec_label_pc_2bee6

dec_label_pc_2bee6:                               ; preds = %bb, %dec_label_pc_2bed0
  %v4_2bee4 = phi i32 [ %v2_2bee4, %bb ], [ %v2_2bedd, %dec_label_pc_2bed0 ]
  ret i32 %v4_2bee4

; uselistorder directives
  uselistorder i32 %v0_2bed8, { 1, 0 }
  uselistorder i32 1435231301, { 1, 0 }
}

define i32 @function_2beeb(i32 %arg1) local_unnamed_addr {
dec_label_pc_2beeb:
  %v0_2beec = load i32, i32* @eax, align 8
  ret i32 %v0_2beec
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEED1Ev(i32* %arg1) {
dec_label_pc_2beee:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38b00_type* @global_var_38b00.2580 to i32), i32* %arg1, align 4
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38b00_type* @global_var_38b00.2580 to i32), { 1, 0 }
}

define i32 @function_2bf40() local_unnamed_addr {
dec_label_pc_2bf40:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bf40 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bf40 = add i32 %v0_2bf40, -1
  store i32 %v1_2bf40, i32* %ecx.global-to-local, align 4
  %v0_2bf42 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bf42
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEED0Ev(i32 %arg1) {
dec_label_pc_2bf44:
  %v1_2bf61 = call i32 @unknown_57e32(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2bf81() local_unnamed_addr {
dec_label_pc_2bf81:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bf81 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bf81 = add i32 %v0_2bf81, -1
  store i32 %v1_2bf81, i32* %ecx.global-to-local, align 4
  %v0_2bf83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bf83
}

define i32 @_ZN5boost14checked_deleteINS_6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_2bf84:
  %v10_2bf9b = icmp eq i32* %arg1, null
  br i1 %v10_2bf9b, label %dec_label_pc_2bfb3, label %dec_label_pc_2bfa1

dec_label_pc_2bfa1:                               ; preds = %dec_label_pc_2bf84
  br label %dec_label_pc_2bfb3

dec_label_pc_2bfb3:                               ; preds = %dec_label_pc_2bfa1, %dec_label_pc_2bf84
  store i32 0, i32* @eax, align 8
  %v1_2bfbd = call i32 @function_2bfc4()
  ret i32 %v1_2bfbd
}

define i32 @function_2bfc4() local_unnamed_addr {
dec_label_pc_2bfc4:
  %v0_2bfc5 = load i32, i32* @eax, align 8
  ret i32 %v0_2bfc5
}

define i32 @_ZNK5boost23enable_shared_from_thisINS_6detail16thread_data_baseEE22_internal_accept_ownerIS2_NS1_11thread_dataINS_3_bi6bind_tIvPFvPvENS6_5list1INS6_5valueIS8_EEEEEEEEEEvPKNS_10shared_ptrIT_EEPT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bfc6:
  %stack_var_-24 = alloca i32, align 4
  %v1_2bff0 = call i32 @unknown_5ac76(i32 %arg1)
  %v4_2bff5 = trunc i32 %v1_2bff0 to i8
  %v5_2bff5 = icmp eq i8 %v4_2bff5, 0
  br i1 %v5_2bff5, label %bb, label %dec_label_pc_2bff9

bb:                                               ; preds = %dec_label_pc_2bfc6
  %v1_2bff7 = call i32 @function_2c048()
  br label %dec_label_pc_2bff9

dec_label_pc_2bff9:                               ; preds = %bb, %dec_label_pc_2bfc6
  %v2_2c007 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2c00d = call i32 @unknown_5acb4(i32 %v2_2c007, i32 %arg2, i32 %arg3)
  %v2_2c01f = call i32 @unknown_5ad0a(i32 %arg1, i32 %v2_2c007)
  %v1_2c02a = call i32 @unknown_3cdc8(i32 %v2_2c007)
  %v0_2c02f = call i32 @function_2c048()
  ret i32 %v0_2c02f

; uselistorder directives
  uselistorder i32 ()* @function_2c048, { 1, 0 }
}

define i32 @function_2c032() local_unnamed_addr {
dec_label_pc_2c032:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c032 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c032
}

define i32 @function_2c048() local_unnamed_addr {
dec_label_pc_2c048:
  %v0_2c048 = load i32, i32* @ebp, align 4
  %v1_2c048 = add i32 %v0_2c048, -12
  %v2_2c048 = inttoptr i32 %v1_2c048 to i32*
  %v3_2c048 = load i32, i32* %v2_2c048, align 4
  %v2_2c04b = xor i32 %v3_2c048, 30
  %v3_2c04b = icmp eq i32 %v2_2c04b, 0
  store i32 %v2_2c04b, i32* @eax, align 8
  br i1 %v3_2c04b, label %bb, label %dec_label_pc_2c054

bb:                                               ; preds = %dec_label_pc_2c048
  %v1_2c052 = call i32 @function_2c059()
  br label %dec_label_pc_2c054

dec_label_pc_2c054:                               ; preds = %bb, %dec_label_pc_2c048
  %v2_2c052 = phi i32 [ %v1_2c052, %bb ], [ %v2_2c04b, %dec_label_pc_2c048 ]
  ret i32 %v2_2c052
}

define i32 @function_2c059() local_unnamed_addr {
dec_label_pc_2c059:
  %v0_2c05e = load i32, i32* @eax, align 8
  ret i32 %v0_2c05e
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c060:
  store i32 0, i32* @eax, align 8
  %v2_2c081 = call i32 @function_2c088(i32 %arg1)
  ret i32 %v2_2c081
}

define i32 @function_2c088(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c088:
  %v0_2c089 = load i32, i32* @eax, align 8
  ret i32 %v0_2c089
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c08a:
  store i32 0, i32* @eax, align 8
  %v2_2c0ab = call i32 @function_2c0b2(i32 %arg1)
  ret i32 %v2_2c0ab
}

define i32 @function_2c0b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c0b2:
  %v0_2c0b3 = load i32, i32* @eax, align 8
  ret i32 %v0_2c0b3
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEENS_7variantISC_NS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2c0b4:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c0f3 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c0f3, 16777216
  %v6_2c116 = sdiv i32 %sext, 16777216
  %v7_2c116 = call i32 @unknown_5ae4d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %v6_2c116)
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_2c12b = call i32 @function_2c132()
  ret i32 %v1_2c12b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c132() local_unnamed_addr {
dec_label_pc_2c132:
  %v0_2c133 = load i32, i32* @eax, align 8
  ret i32 %v0_2c133
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEESB_NS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2c136:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c175 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c175, 16777216
  %v6_2c198 = sdiv i32 %sext, 16777216
  %v7_2c198 = call i32 @unknown_5af7d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %v6_2c198)
  store i32 %arg1, i32* @eax, align 8
  store i32 0, i32* %edx.global-to-local, align 8
  %v1_2c1ad = call i32 @function_2c1b4()
  ret i32 %v1_2c1ad

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c1b4() local_unnamed_addr {
dec_label_pc_2c1b4:
  %v0_2c1b5 = load i32, i32* @eax, align 8
  ret i32 %v0_2c1b5
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2c1b8:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENSE_21foreign_void_weak_ptrENS1_5void_ESO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_E18has_fallback_type_EEENT1_11result_typeEiiRSR_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_2c218:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_10shared_ptrIvEENS_7variantIS7_NS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c285:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c2bb = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c2bb, 16777216
  %v5_2c2da = sdiv i32 %sext, 16777216
  %v6_2c2da = call i32 @unknown_5b17a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2c2da)
  store i32 0, i32* @eax, align 8
  %v1_2c2e9 = call i32 @function_2c2f0()
  ret i32 %v1_2c2e9
}

define i32 @function_2c2f0() local_unnamed_addr {
dec_label_pc_2c2f0:
  %v0_2c2f1 = load i32, i32* @eax, align 8
  ret i32 %v0_2c2f1
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_8signals26detail23foreign_void_shared_ptrENS_7variantINS_10shared_ptrIvEES8_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c2f2:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c328 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c328, 16777216
  %v5_2c347 = sdiv i32 %sext, 16777216
  %v6_2c347 = call i32 @unknown_5b276(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2c347)
  store i32 0, i32* @eax, align 8
  %v1_2c356 = call i32 @function_2c35d()
  ret i32 %v1_2c356
}

define i32 @function_2c35d() local_unnamed_addr {
dec_label_pc_2c35d:
  %v0_2c35e = load i32, i32* @eax, align 8
  ret i32 %v0_2c35e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c35f:
  ret i32 0
}

define i32 @function_2c39a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c39a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c39a = load i16, i16* @cs, align 2
  %v5_2c39a = sext i16 %v0_2c39a to i32
  %v6_2c39a = call i32 @unknown_44c70000(i32 %v5_2c39a)
  store i32 %v6_2c39a, i32* %eax.global-to-local, align 8
  %v1_2c3a3 = inttoptr i32 %v6_2c39a to i8*
  %v2_2c3a3 = load i8, i8* %v1_2c3a3, align 1
  %v4_2c3a3 = trunc i32 %v6_2c39a to i8
  %v5_2c3a3 = add i8 %v2_2c3a3, %v4_2c3a3
  store i8 %v5_2c3a3, i8* %v1_2c3a3, align 1
  %v3_2c3ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2c3ad
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2c3b9:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_10shared_ptrIvEENS_7variantIS6_NS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c420:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c456 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c456, 16777216
  %v5_2c475 = sdiv i32 %sext, 16777216
  %v6_2c475 = call i32 @unknown_5b433(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2c475)
  store i32 0, i32* @eax, align 8
  %v1_2c484 = call i32 @function_2c48b()
  ret i32 %v1_2c484
}

define i32 @function_2c48b() local_unnamed_addr {
dec_label_pc_2c48b:
  %v0_2c48c = load i32, i32* @eax, align 8
  ret i32 %v0_2c48c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_8signals26detail23foreign_void_shared_ptrENS_7variantINS_10shared_ptrIvEES7_NS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c48d:
  %edx.global-to-local = alloca i32, align 4
  %v0_2c4c3 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_2c4c3, 16777216
  %v5_2c4e2 = sdiv i32 %sext, 16777216
  %v6_2c4e2 = call i32 @unknown_5b52f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_2c4e2)
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c4fa:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_E18has_fallback_type_EEENT1_11result_typeEiiRSN_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_2c554:
  %eax.global-to-local = alloca i32, align 4
  %v17_2c557 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2c557
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5boost7variantINS2_10shared_ptrIvEENS2_8signals26detail23foreign_void_shared_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EESD_EET0_T_SF_SE_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c5bb:
  ret i32 %arg1
}

define i32 @function_2c5ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c5ca:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2c5ca = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2c5ca = or i32 %v0_2c5ca, 137
  store i32 %v11_2c5ca, i32* %eax.global-to-local, align 8
  %v0_2c5cc = load i32, i32* @ebp, align 4
  %v0_2c5cd = load i32, i32* @ecx, align 4
  %v1_2c5cd = add i32 %v0_2c5cd, 255
  %v1_2c5cf = add i32 %v0_2c5cc, 2
  store i32 %v1_2c5cf, i32* %ebp.global-to-local, align 4
  %v1_2c5d0 = add i32 %v0_2c5cd, -1587159996
  %v2_2c5d0 = inttoptr i32 %v1_2c5d0 to i8*
  %v3_2c5d0 = load i8, i8* %v2_2c5d0, align 1
  %v5_2c5d0 = trunc i32 %v1_2c5cd to i8
  %v8_2c5d0 = add i8 %v3_2c5d0, %v5_2c5d0
  %v28_2c5d0 = icmp ult i8 %v8_2c5d0, %v3_2c5d0
  store i1 %v28_2c5d0, i1* %cf.global-to-local, align 1
  store i8 %v8_2c5d0, i8* %v2_2c5d0, align 1
  %v0_2c5d6 = load i32, i32* %eax.global-to-local, align 8
  %v1_2c5d6 = trunc i32 %v0_2c5d6 to i8
  %v2_2c5d6 = load i1, i1* %cf.global-to-local, align 1
  %v3_2c5d6 = zext i1 %v2_2c5d6 to i8
  %v4_2c5d6 = add i8 %v3_2c5d6, %v1_2c5d6
  %v19_2c5d6 = icmp ule i8 %v4_2c5d6, %v1_2c5d6
  %v21_2c5d6 = icmp eq i1 %v2_2c5d6, %v19_2c5d6
  store i1 %v21_2c5d6, i1* %cf.global-to-local, align 1
  %v22_2c5d6 = zext i8 %v4_2c5d6 to i32
  %v24_2c5d6 = and i32 %v0_2c5d6, -256
  %v25_2c5d6 = or i32 %v22_2c5d6, %v24_2c5d6
  store i32 %v25_2c5d6, i32* %eax.global-to-local, align 8
  %v1_2c5d8 = inttoptr i32 %v25_2c5d6 to i8*
  %v2_2c5d8 = load i8, i8* %v1_2c5d8, align 1
  %v5_2c5d8 = add i8 %v2_2c5d8, %v4_2c5d6
  store i8 %v5_2c5d8, i8* %v1_2c5d8, align 1
  %v0_2c5da = load i32, i32* %eax.global-to-local, align 8
  %v1_2c5da = load i32, i32* %ebp.global-to-local, align 4
  %v2_2c5da = add i32 %v1_2c5da, -12
  %v3_2c5da = inttoptr i32 %v2_2c5da to i32*
  store i32 %v0_2c5da, i32* %v3_2c5da, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2c5df = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c5df = add i32 %v0_2c5df, -36
  %v2_2c5df = inttoptr i32 %v1_2c5df to i32*
  %v3_2c5df = load i32, i32* %v2_2c5df, align 4
  store i32 %v3_2c5df, i32* %eax.global-to-local, align 8
  %v2_2c5e2 = add i32 %v0_2c5df, -16
  %v3_2c5e2 = inttoptr i32 %v2_2c5e2 to i32*
  store i32 %v3_2c5df, i32* %v3_2c5e2, align 4
  br label %dec_label_pc_2c609

dec_label_pc_2c5e7:                               ; preds = %dec_label_pc_2c609
  %v1_2c5ed = call i32 @unknown_53cff(i32 %v3_2c5e7)
  store i32 %v1_2c5ed, i32* %eax.global-to-local, align 8
  %v0_2c5f2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c5f2 = add i32 %v0_2c5f2, -28
  %v2_2c5f2 = inttoptr i32 %v1_2c5f2 to i32*
  %v3_2c5f2 = load i32, i32* %v2_2c5f2, align 4
  %v2_2c5fc = call i32 @unknown_5539b(i32 %v1_2c5ed, i32 %v3_2c5f2)
  store i32 %v2_2c5fc, i32* %eax.global-to-local, align 8
  %v1_2c601 = add i32 %v0_2c5f2, -28
  %v2_2c601 = inttoptr i32 %v1_2c601 to i32*
  %v3_2c601 = load i32, i32* %v2_2c601, align 4
  %v4_2c601 = add i32 %v3_2c601, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v4_2c601, i32* %v2_2c601, align 4
  %v0_2c605 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c605 = add i32 %v0_2c605, -16
  %v2_2c605 = inttoptr i32 %v1_2c605 to i32*
  %v3_2c605 = load i32, i32* %v2_2c605, align 4
  %v4_2c605 = add i32 %v3_2c605, ptrtoint (i32* @global_var_c.2390 to i32)
  %v8_2c605 = icmp ult i32 %v4_2c605, %v3_2c605
  store i1 %v8_2c605, i1* %cf.global-to-local, align 1
  store i32 %v4_2c605, i32* %v2_2c605, align 4
  br label %dec_label_pc_2c609

dec_label_pc_2c609:                               ; preds = %dec_label_pc_2c5e7, %dec_label_pc_2c5ca
  %v0_2c609 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c609 = add i32 %v0_2c609, -28
  %v2_2c609 = inttoptr i32 %v1_2c609 to i32*
  %v3_2c609 = load i32, i32* %v2_2c609, align 4
  store i32 %v3_2c609, i32* %eax.global-to-local, align 8
  %v2_2c60c = add i32 %v0_2c609, -32
  %v3_2c60c = inttoptr i32 %v2_2c60c to i32*
  %v4_2c60c = load i32, i32* %v3_2c60c, align 4
  %v15_2c60c = icmp eq i32 %v3_2c609, %v4_2c60c
  %v1_2c60f = icmp eq i1 %v15_2c60c, false
  %v2_2c60f = zext i1 %v1_2c60f to i32
  %v4_2c60f = and i32 %v3_2c609, -256
  %v5_2c60f = or i32 %v2_2c60f, %v4_2c60f
  store i32 %v5_2c60f, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2c612 = icmp eq i1 %v1_2c60f, false
  %v1_2c614 = icmp eq i1 %v5_2c612, false
  %v1_2c5e7 = add i32 %v0_2c609, -16
  %v2_2c5e7 = inttoptr i32 %v1_2c5e7 to i32*
  %v3_2c5e7 = load i32, i32* %v2_2c5e7, align 4
  store i32 %v3_2c5e7, i32* @eax, align 8
  br i1 %v1_2c614, label %dec_label_pc_2c5e7, label %dec_label_pc_2c616

dec_label_pc_2c616:                               ; preds = %dec_label_pc_2c609
  %v1_2c619 = add i32 %v0_2c609, -12
  %v2_2c619 = inttoptr i32 %v1_2c619 to i32*
  %v3_2c619 = load i32, i32* %v2_2c619, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2c61c = icmp eq i32 %v3_2c619, 30
  br i1 %v3_2c61c, label %bb, label %dec_label_pc_2c625

bb:                                               ; preds = %dec_label_pc_2c616
  %v1_2c623 = call i32 @function_2c65c()
  store i32 %v1_2c623, i32* @eax, align 8
  br label %dec_label_pc_2c625

dec_label_pc_2c625:                               ; preds = %bb, %dec_label_pc_2c616
  %v0_2c625 = call i32 @function_2c657()
  store i32 %v0_2c625, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c625

; uselistorder directives
  uselistorder i32 %v3_2c5e7, { 1, 0 }
  uselistorder i32 %v3_2c609, { 1, 0, 2 }
  uselistorder i8 %v4_2c5d6, { 0, 2, 1 }
  uselistorder i8 %v1_2c5d6, { 1, 0 }
  uselistorder i8 %v3_2c5d0, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
}

define i32 @function_2c628() local_unnamed_addr {
dec_label_pc_2c628:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c628 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c628
}

define i32 @function_2c657() local_unnamed_addr {
dec_label_pc_2c657:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c65c() local_unnamed_addr {
dec_label_pc_2c65c:
  %v0_2c661 = load i32, i32* @eax, align 8
  ret i32 %v0_2c661
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEENS_7variantISC_NS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c662:
  ret i32 %arg1
}

define i32 @function_2c6b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c6b4:
  %v0_2c6b4 = load i32, i32* @eax, align 8
  %v1_2c6b7 = call i32 @unknown_5b793(i32 %v0_2c6b4)
  store i32 %v1_2c6b7, i32* @eax, align 8
  %v0_2c6bc = load i32, i32* @ebp, align 4
  %v1_2c6bc = add i32 %v0_2c6bc, -12
  %v2_2c6bc = inttoptr i32 %v1_2c6bc to i32*
  %v3_2c6bc = load i32, i32* %v2_2c6bc, align 4
  %v3_2c6bf = icmp eq i32 %v3_2c6bc, 30
  br i1 %v3_2c6bf, label %bb, label %dec_label_pc_2c6c8

bb:                                               ; preds = %dec_label_pc_2c6b4
  %v1_2c6c6 = call i32 @function_2c6cd()
  br label %dec_label_pc_2c6c8

dec_label_pc_2c6c8:                               ; preds = %bb, %dec_label_pc_2c6b4
  %v2_2c6c6 = phi i32 [ %v1_2c6c6, %bb ], [ %v1_2c6b7, %dec_label_pc_2c6b4 ]
  ret i32 %v2_2c6c6
}

define i32 @function_2c6cd() local_unnamed_addr {
dec_label_pc_2c6cd:
  %v0_2c6ce = load i32, i32* @eax, align 8
  ret i32 %v0_2c6ce
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEESB_NS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c6cf:
  ret i32 %arg2
}

define i32 @function_2c720(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c720:
  %v0_2c724 = call i32 @unknown_5b88f()
  store i32 %v0_2c724, i32* @eax, align 8
  %v0_2c729 = load i32, i32* @ebp, align 4
  %v1_2c729 = add i32 %v0_2c729, -12
  %v2_2c729 = inttoptr i32 %v1_2c729 to i32*
  %v3_2c729 = load i32, i32* %v2_2c729, align 4
  %v3_2c72c = icmp eq i32 %v3_2c729, 30
  br i1 %v3_2c72c, label %bb, label %dec_label_pc_2c735

bb:                                               ; preds = %dec_label_pc_2c720
  %v1_2c733 = call i32 @function_2c73a()
  br label %dec_label_pc_2c735

dec_label_pc_2c735:                               ; preds = %bb, %dec_label_pc_2c720
  %v2_2c733 = phi i32 [ %v1_2c733, %bb ], [ %v0_2c724, %dec_label_pc_2c720 ]
  ret i32 %v2_2c733
}

define i32 @function_2c73a() local_unnamed_addr {
dec_label_pc_2c73a:
  %v0_2c73b = load i32, i32* @eax, align 8
  ret i32 %v0_2c73b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2c73c:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENSE_21foreign_void_weak_ptrENS1_5void_ESO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_E18has_fallback_type_EEENT1_11result_typeEiiRSR_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_2c796:
  %eax.global-to-local = alloca i32, align 4
  %v17_2c799 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2c799
}

define i32 @function_2c79e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c79e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c79e = load i32, i32* @ecx, align 4
  %v1_2c79e = add i32 %v0_2c79e, 1166795845
  %v2_2c79e = inttoptr i32 %v1_2c79e to i8*
  %v3_2c79e = load i8, i8* %v2_2c79e, align 1
  %v5_2c79e = trunc i32 %v0_2c79e to i8
  %v6_2c79e = or i8 %v3_2c79e, %v5_2c79e
  store i8 %v6_2c79e, i8* %v2_2c79e, align 1
  %v0_2c7a4 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2c7a4 = or i32 %v0_2c7a4, 137
  store i32 %v11_2c7a4, i32* %eax.global-to-local, align 8
  %v0_2c7a6 = load i32, i32* @ebp, align 4
  %v0_2c7a7 = load i32, i32* @ecx, align 4
  %v1_2c7a7 = add i32 %v0_2c7a7, -1
  store i32 %v1_2c7a7, i32* %ecx.global-to-local, align 4
  %v1_2c7a9 = add i32 %v0_2c7a6, 2
  store i32 %v1_2c7a9, i32* %ebp.global-to-local, align 4
  %v1_2c7aa = add i32 %v0_2c7a7, 1166793796
  %v2_2c7aa = inttoptr i32 %v1_2c7aa to i8*
  %v3_2c7aa = load i8, i8* %v2_2c7aa, align 1
  %v5_2c7aa = trunc i32 %v1_2c7a7 to i8
  %v8_2c7aa = add i8 %v3_2c7aa, %v5_2c7aa
  %v28_2c7aa = icmp ult i8 %v8_2c7aa, %v3_2c7aa
  store i1 %v28_2c7aa, i1* %cf.global-to-local, align 1
  store i8 %v8_2c7aa, i8* %v2_2c7aa, align 1
  %v0_2c7b0 = load i32, i32* %eax.global-to-local, align 8
  %v1_2c7b0 = trunc i32 %v0_2c7b0 to i8
  %v2_2c7b0 = load i1, i1* %cf.global-to-local, align 1
  %v3_2c7b0 = zext i1 %v2_2c7b0 to i8
  %v4_2c7b0 = add i8 %v1_2c7b0, -119
  %v5_2c7b0 = add i8 %v4_2c7b0, %v3_2c7b0
  %v22_2c7b0 = icmp ule i8 %v5_2c7b0, %v1_2c7b0
  %v23_2c7b0 = icmp ugt i8 %v1_2c7b0, 118
  %v24_2c7b0 = select i1 %v2_2c7b0, i1 %v22_2c7b0, i1 %v23_2c7b0
  store i1 %v24_2c7b0, i1* %cf.global-to-local, align 1
  %v25_2c7b0 = zext i8 %v5_2c7b0 to i32
  %v27_2c7b0 = and i32 %v0_2c7b0, -256
  %v28_2c7b0 = or i32 %v25_2c7b0, %v27_2c7b0
  store i32 %v28_2c7b0, i32* %eax.global-to-local, align 8
  %v0_2c7b2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c7b2 = add i32 %v0_2c7b2, 1
  store i32 %v1_2c7b2, i32* %ebp.global-to-local, align 4
  %v1_2c7b7 = add i32 %v28_2c7b0, -1240475835
  %v2_2c7b7 = inttoptr i32 %v1_2c7b7 to i8*
  %v3_2c7b7 = load i8, i8* %v2_2c7b7, align 1
  %v4_2c7b7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_2c7b7 = trunc i32 %v4_2c7b7 to i8
  %v7_2c7b7 = zext i1 %v24_2c7b0 to i8
  %v8_2c7b7 = sub i8 %v3_2c7b7, %v5_2c7b7
  %v9_2c7b7 = add i8 %v8_2c7b7, %v7_2c7b7
  %v19_2c7b7 = sub i8 %v8_2c7b7, %v7_2c7b7
  %v20_2c7b7 = icmp ult i8 %v3_2c7b7, %v19_2c7b7
  %v21_2c7b7 = icmp ne i8 %v5_2c7b7, -1
  %v22_2c7b7 = or i1 %v21_2c7b7, %v20_2c7b7
  %v23_2c7b7 = icmp ult i8 %v3_2c7b7, %v5_2c7b7
  %v24_2c7b7 = select i1 %v24_2c7b0, i1 %v22_2c7b7, i1 %v23_2c7b7
  store i1 %v24_2c7b7, i1* %cf.global-to-local, align 1
  store i8 %v9_2c7b7, i8* %v2_2c7b7, align 1
  %v0_2c7bd = load i32, i32* %ebp.global-to-local, align 4
  %v0_2c7be = load i32, i32* %eax.global-to-local, align 8
  %v1_2c7be = trunc i32 %v0_2c7be to i8
  %v2_2c7be = load i1, i1* %cf.global-to-local, align 1
  %v17_2c7be = icmp ult i8 %v1_2c7be, -120
  %v18_2c7be = or i1 %v2_2c7be, %v17_2c7be
  %v1_2c7c0 = add i32 %v0_2c7bd, 2
  store i32 %v1_2c7c0, i32* @ebp, align 4
  %v3_2c7c1 = select i1 %v18_2c7be, i32 255, i32 0
  %v5_2c7c1 = and i32 %v0_2c7be, -256
  %v6_2c7c1 = or i32 %v3_2c7c1, %v5_2c7c1
  store i32 %v6_2c7c1, i32* %eax.global-to-local, align 8
  %v1_2c7c2 = add i32 %v0_2c7bd, 34
  %v2_2c7c2 = inttoptr i32 %v1_2c7c2 to i32*
  %v3_2c7c2 = load i32, i32* %v2_2c7c2, align 4
  store i32 %v3_2c7c2, i32* %eax.global-to-local, align 8
  %v2_2c7c5 = add i32 %v0_2c7bd, -46
  %v3_2c7c5 = inttoptr i32 %v2_2c7c5 to i32*
  store i32 %v3_2c7c2, i32* %v3_2c7c5, align 4
  %v0_2c7c8 = load i32, i32* @ebp, align 4
  %v1_2c7c8 = add i32 %v0_2c7c8, 36
  %v2_2c7c8 = inttoptr i32 %v1_2c7c8 to i32*
  %v3_2c7c8 = load i32, i32* %v2_2c7c8, align 4
  %v2_2c7cb = add i32 %v0_2c7c8, -52
  %v3_2c7cb = inttoptr i32 %v2_2c7cb to i32*
  store i32 %v3_2c7c8, i32* %v3_2c7cb, align 4
  %v1_2c7d4 = load i32, i32* @ebp, align 4
  %v2_2c7d4 = add i32 %v1_2c7d4, -12
  %v3_2c7d4 = inttoptr i32 %v2_2c7d4 to i32*
  store i32 30, i32* %v3_2c7d4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  ret i32 0

; uselistorder directives
  uselistorder i8 %v8_2c7b7, { 1, 0 }
  uselistorder i8 %v7_2c7b7, { 1, 0 }
  uselistorder i8 %v5_2c7b7, { 1, 0, 2 }
  uselistorder i1 %v24_2c7b0, { 1, 0, 2 }
  uselistorder i8 %v5_2c7b0, { 1, 0 }
  uselistorder i8 %v3_2c7aa, { 1, 0 }
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c7fd:
  %v2_2c828 = sub i32 %arg2, %arg1
  %v12_2c828 = icmp eq i32 %v2_2c828, 0
  br i1 %v12_2c828, label %bb, label %dec_label_pc_2c835

bb:                                               ; preds = %dec_label_pc_2c7fd
  %v4_2c833 = call i32 @function_2c853(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c835

dec_label_pc_2c835:                               ; preds = %bb, %dec_label_pc_2c7fd
  ret i32 %v2_2c828
}

define i32 @function_2c83c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c83c:
  %v0_2c849 = load i32, i32* @eax, align 8
  %v11_2c849 = and i32 %v0_2c849, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  ret i32 %v11_2c849
}

define i32 @function_2c853(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c853:
  %v0_2c853 = load i32, i32* @ebp, align 4
  %v1_2c853 = add i32 %v0_2c853, -16
  %v2_2c853 = inttoptr i32 %v1_2c853 to i32*
  %v3_2c853 = load i32, i32* %v2_2c853, align 4
  %v2_2c858 = add i32 %v0_2c853, -36
  %v3_2c858 = inttoptr i32 %v2_2c858 to i32*
  %v4_2c858 = load i32, i32* %v3_2c858, align 4
  %v5_2c858 = sub i32 %v4_2c858, %v3_2c853
  store i32 %v5_2c858, i32* @eax, align 8
  %v1_2c85b = add i32 %v0_2c853, -12
  %v2_2c85b = inttoptr i32 %v1_2c85b to i32*
  %v3_2c85b = load i32, i32* %v2_2c85b, align 4
  %v3_2c85e = icmp eq i32 %v3_2c85b, 30
  br i1 %v3_2c85e, label %bb, label %dec_label_pc_2c867

bb:                                               ; preds = %dec_label_pc_2c853
  %v1_2c865 = call i32 @function_2c86c()
  br label %dec_label_pc_2c867

dec_label_pc_2c867:                               ; preds = %bb, %dec_label_pc_2c853
  %v2_2c865 = phi i32 [ %v1_2c865, %bb ], [ %v5_2c858, %dec_label_pc_2c853 ]
  ret i32 %v2_2c865
}

define i32 @function_2c86c() local_unnamed_addr {
dec_label_pc_2c86c:
  %v0_2c86d = load i32, i32* @eax, align 8
  ret i32 %v0_2c86d
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11lower_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c86e:
  ret i32 %arg1
}

define i32 @function_2c89c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c89c:
  %v0_2c89c = load i32, i32* @eax, align 8
  %v11_2c89c = and i32 %v0_2c89c, or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256)
  %v0_2c89e = load i32, i32* @edx, align 8
  %v2_2c8a5 = call i32 @unknown_5babe(i32 %v11_2c89c, i32 %v0_2c89e)
  %v0_2c8ad = load i32, i32* @ebp, align 4
  %v1_2c8ad = add i32 %v0_2c8ad, -28
  %v2_2c8ad = inttoptr i32 %v1_2c8ad to i32*
  %v3_2c8ad = load i32, i32* %v2_2c8ad, align 4
  store i32 %v3_2c8ad, i32* @eax, align 8
  %v1_2c8b0 = add i32 %v0_2c8ad, -12
  %v2_2c8b0 = inttoptr i32 %v1_2c8b0 to i32*
  %v3_2c8b0 = load i32, i32* %v2_2c8b0, align 4
  %v3_2c8b3 = icmp eq i32 %v3_2c8b0, 30
  br i1 %v3_2c8b3, label %bb, label %dec_label_pc_2c8bc

bb:                                               ; preds = %dec_label_pc_2c89c
  %v1_2c8ba = call i32 @function_2c8c1()
  br label %dec_label_pc_2c8bc

dec_label_pc_2c8bc:                               ; preds = %bb, %dec_label_pc_2c89c
  %v2_2c8ba = phi i32 [ %v1_2c8ba, %bb ], [ %v3_2c8ad, %dec_label_pc_2c89c ]
  ret i32 %v2_2c8ba
}

define i32 @function_2c8c1() local_unnamed_addr {
dec_label_pc_2c8c1:
  %v0_2c8c2 = load i32, i32* @eax, align 8
  ret i32 %v0_2c8c2
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c8c6:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v2_2c8f0 = call i32 @unknown_5bb92(i32 %arg1, i32 %tmp4)
  store i32 %arg1, i32* @eax, align 8
  %v1_2c905 = call i32 @function_2c90c()
  ret i32 %v1_2c905

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c90c() local_unnamed_addr {
dec_label_pc_2c90c:
  %v0_2c90d = load i32, i32* @eax, align 8
  ret i32 %v0_2c90d
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c910:
  %tmp101 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp101
}

define i32 @function_2c932(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c932:
  %v0_2c932 = load i32, i32* @ebp, align 4
  %v1_2c932 = add i32 %v0_2c932, -32
  %v2_2c932 = inttoptr i32 %v1_2c932 to i32*
  %v3_2c932 = load i32, i32* %v2_2c932, align 4
  %v1_2c935 = inttoptr i32 %v3_2c932 to i32*
  %v2_2c935 = load i32, i32* %v1_2c935, align 4
  %v0_2c937 = load i32, i32* @edx, align 8
  %v12_2c937 = icmp eq i32 %v0_2c937, %v2_2c935
  %v1_2c939 = icmp eq i1 %v12_2c937, false
  %v2_2c939 = zext i1 %v1_2c939 to i32
  %v4_2c939 = and i32 %v2_2c935, -256
  %v5_2c939 = or i32 %v2_2c939, %v4_2c939
  store i32 %v5_2c939, i32* @eax, align 8
  %v1_2c93c = add i32 %v0_2c932, -12
  %v2_2c93c = inttoptr i32 %v1_2c93c to i32*
  %v3_2c93c = load i32, i32* %v2_2c93c, align 4
  %v3_2c93f = icmp eq i32 %v3_2c93c, 30
  br i1 %v3_2c93f, label %bb, label %dec_label_pc_2c948

bb:                                               ; preds = %dec_label_pc_2c932
  %v1_2c946 = call i32 @function_2c94d()
  br label %dec_label_pc_2c948

dec_label_pc_2c948:                               ; preds = %bb, %dec_label_pc_2c932
  %v2_2c946 = phi i32 [ %v1_2c946, %bb ], [ %v5_2c939, %dec_label_pc_2c932 ]
  ret i32 %v2_2c946

; uselistorder directives
  uselistorder i32 %v2_2c935, { 1, 0 }
}

define i32 @function_2c94d() local_unnamed_addr {
dec_label_pc_2c94d:
  %v0_2c94e = load i32, i32* @eax, align 8
  ret i32 %v0_2c94e
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c950:
  %v1_2c976 = add i32 %arg1, 32
  %v3_2c98a = call i32 @unknown_5bc66(i32 %v1_2c976, i32 %arg2, i32 %arg3)
  %v4_2c98f = trunc i32 %v3_2c98a to i8
  %v5_2c98f = icmp eq i8 %v4_2c98f, 0
  br i1 %v5_2c98f, label %dec_label_pc_2c99a, label %dec_label_pc_2c993

dec_label_pc_2c993:                               ; preds = %dec_label_pc_2c950
  ret i32 0

dec_label_pc_2c99a:                               ; preds = %dec_label_pc_2c950
  ret i32 %arg3
}

define i32 @function_2c9b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9b2:
  %v0_2c9b2 = load i32, i32* @eax, align 8
  %v1_2c9b2 = and i32 %v0_2c9b2, -256
  %v2_2c9b2 = or i32 %v1_2c9b2, ptrtoint (i8** @global_var_f2.2591 to i32)
  %v3_2c9b4 = inttoptr i32 %v2_2c9b2 to i8*
  %v4_2c9b4 = load i8, i8* %v3_2c9b4, align 4
  %v15_2c9b4 = icmp eq i8 %v4_2c9b4, sub (i8 0, i8 ptrtoint (i8** @global_var_f2.2591 to i8))
  %. = zext i1 %v15_2c9b4 to i32
  store i32 %., i32* @eax, align 8
  %v0_2c9c6 = load i32, i32* @ebp, align 4
  %v1_2c9c6 = add i32 %v0_2c9c6, -12
  %v2_2c9c6 = inttoptr i32 %v1_2c9c6 to i32*
  %v3_2c9c6 = load i32, i32* %v2_2c9c6, align 4
  %v3_2c9c9 = icmp eq i32 %v3_2c9c6, 30
  br i1 %v3_2c9c9, label %bb, label %dec_label_pc_2c9d2

bb:                                               ; preds = %dec_label_pc_2c9b2
  %v1_2c9d0 = call i32 @function_2c9d7()
  br label %dec_label_pc_2c9d2

dec_label_pc_2c9d2:                               ; preds = %bb, %dec_label_pc_2c9b2
  %v2_2c9d0 = phi i32 [ %v1_2c9d0, %bb ], [ %., %dec_label_pc_2c9b2 ]
  ret i32 %v2_2c9d0
}

define i32 @function_2c9d7() local_unnamed_addr {
dec_label_pc_2c9d7:
  %v0_2c9d8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c9d8
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEptEv() local_unnamed_addr {
dec_label_pc_2c9da:
  %eax.global-to-local = alloca i32, align 4
  %v2_2c9db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2c9db
}

define i32 @function_2c9df(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c9df:
  %v1_2c9ec = load i32, i32* @ebp, align 4
  %v2_2c9ec = add i32 %v1_2c9ec, -12
  %v3_2c9ec = inttoptr i32 %v2_2c9ec to i32*
  store i32 30, i32* %v3_2c9ec, align 4
  %v0_2c9f1 = load i32, i32* @ebp, align 4
  %v1_2c9f1 = add i32 %v0_2c9f1, -28
  %v2_2c9f1 = inttoptr i32 %v1_2c9f1 to i32*
  %v3_2c9f1 = load i32, i32* %v2_2c9f1, align 4
  %v1_2c9f4 = inttoptr i32 %v3_2c9f1 to i32*
  %v2_2c9f4 = load i32, i32* %v1_2c9f4, align 4
  %v1_2c9f6 = add i32 %v2_2c9f4, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2c9fc = call i32 @unknown_5bd90(i32 %v1_2c9f6)
  store i32 %v2_2c9fc, i32* @eax, align 8
  %v0_2ca01 = load i32, i32* @ebp, align 4
  %v1_2ca01 = add i32 %v0_2ca01, -12
  %v2_2ca01 = inttoptr i32 %v1_2ca01 to i32*
  %v3_2ca01 = load i32, i32* %v2_2ca01, align 4
  %v2_2ca04 = xor i32 %v3_2ca01, 30
  %v3_2ca04 = icmp eq i32 %v2_2ca04, 0
  store i32 %v2_2ca04, i32* @edx, align 8
  br i1 %v3_2ca04, label %bb, label %dec_label_pc_2ca0d

bb:                                               ; preds = %dec_label_pc_2c9df
  %v1_2ca0b = call i32 @function_2ca12()
  br label %dec_label_pc_2ca0d

dec_label_pc_2ca0d:                               ; preds = %bb, %dec_label_pc_2c9df
  %v2_2ca0b = phi i32 [ %v1_2ca0b, %bb ], [ %v2_2c9fc, %dec_label_pc_2c9df ]
  ret i32 %v2_2ca0b
}

define i32 @function_2ca12() local_unnamed_addr {
dec_label_pc_2ca12:
  %v0_2ca13 = load i32, i32* @eax, align 8
  ret i32 %v0_2ca13
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ca14:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_2ca3a = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2ca3d = ptrtoint i32* %stack_var_-24 to i32
  %v3_2ca4e = call i32 @unknown_5bdf8(i32 %v2_2ca3d, i32 %v1_2ca3a, i32 %arg3)
  %v2_2ca5d = ptrtoint i32* %stack_var_-20 to i32
  %v2_2ca63 = call i32 @unknown_5be50(i32 %v2_2ca5d, i32 %v2_2ca3d)
  %v3_2ca7c = call i32 @unknown_5be8a(i32 %arg1, i32 %arg2, i32 %v2_2ca5d)
  store i32 %arg1, i32* @eax, align 8
  %v1_2ca91 = call i32 @function_2ca98()
  ret i32 %v1_2ca91

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ca98() local_unnamed_addr {
dec_label_pc_2ca98:
  %v0_2ca99 = load i32, i32* @eax, align 8
  ret i32 %v0_2ca99
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca9c:
  %v1_2cab6 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_2cab6
}

define i32 @function_2caba(i32 %arg1) local_unnamed_addr {
dec_label_pc_2caba:
  %v0_2cabc = call i32 @unknown_5c132()
  %v0_2cac1 = load i32, i32* @ebp, align 4
  %v1_2cac1 = add i32 %v0_2cac1, -12
  %v2_2cac1 = inttoptr i32 %v1_2cac1 to i32*
  %v3_2cac1 = load i32, i32* %v2_2cac1, align 4
  %v2_2cac4 = xor i32 %v3_2cac1, 30
  %v3_2cac4 = icmp eq i32 %v2_2cac4, 0
  store i32 %v2_2cac4, i32* @eax, align 8
  br i1 %v3_2cac4, label %bb, label %dec_label_pc_2cacd

bb:                                               ; preds = %dec_label_pc_2caba
  %v1_2cacb = call i32 @function_2cad2()
  br label %dec_label_pc_2cacd

dec_label_pc_2cacd:                               ; preds = %bb, %dec_label_pc_2caba
  %v2_2cacb = phi i32 [ %v1_2cacb, %bb ], [ %v2_2cac4, %dec_label_pc_2caba ]
  ret i32 %v2_2cacb
}

define i32 @function_2cad2() local_unnamed_addr {
dec_label_pc_2cad2:
  %v0_2cad3 = load i32, i32* @eax, align 8
  ret i32 %v0_2cad3
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEED1Ev() local_unnamed_addr {
dec_label_pc_2cad4:
  %eax.global-to-local = alloca i32, align 4
  %v17_2cad7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2cad7
}

define i32 @function_2cada(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cada:
  %v0_2cada = load i32, i32* @ebp, align 4
  %v1_2cada = add i32 %v0_2cada, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2cada = inttoptr i32 %v1_2cada to i32*
  %v3_2cada = load i32, i32* %v2_2cada, align 4
  %v2_2cadd = add i32 %v0_2cada, -28
  %v3_2cadd = inttoptr i32 %v2_2cadd to i32*
  store i32 %v3_2cada, i32* %v3_2cadd, align 4
  %v1_2cae6 = load i32, i32* @ebp, align 4
  %v2_2cae6 = add i32 %v1_2cae6, -12
  %v3_2cae6 = inttoptr i32 %v2_2cae6 to i32*
  store i32 30, i32* %v3_2cae6, align 4
  %v0_2caeb = load i32, i32* @ebp, align 4
  %v1_2caeb = add i32 %v0_2caeb, -28
  %v2_2caeb = inttoptr i32 %v1_2caeb to i32*
  %v3_2caeb = load i32, i32* %v2_2caeb, align 4
  %v1_2caf1 = call i32 @unknown_59570(i32 %v3_2caeb)
  %v0_2caf6 = load i32, i32* @ebp, align 4
  %v1_2caf6 = add i32 %v0_2caf6, -12
  %v2_2caf6 = inttoptr i32 %v1_2caf6 to i32*
  %v3_2caf6 = load i32, i32* %v2_2caf6, align 4
  %v2_2caf9 = xor i32 %v3_2caf6, 30
  %v3_2caf9 = icmp eq i32 %v2_2caf9, 0
  store i32 %v2_2caf9, i32* @eax, align 8
  br i1 %v3_2caf9, label %bb, label %dec_label_pc_2cb02

bb:                                               ; preds = %dec_label_pc_2cada
  %v1_2cb00 = call i32 @function_2cb07()
  br label %dec_label_pc_2cb02

dec_label_pc_2cb02:                               ; preds = %bb, %dec_label_pc_2cada
  %v2_2cb00 = phi i32 [ %v1_2cb00, %bb ], [ %v2_2caf9, %dec_label_pc_2cada ]
  ret i32 %v2_2cb00
}

define i32 @function_2cb07() local_unnamed_addr {
dec_label_pc_2cb07:
  %v0_2cb08 = load i32, i32* @eax, align 8
  ret i32 %v0_2cb08
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEixERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb0a:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_2cb28 = ptrtoint i32* %stack_var_-48 to i32
  %v3_2cb3c = call i32 @unknown_59378(i32 %v2_2cb28, i32 %arg1, i32 %arg2)
  %v2_2cb44 = ptrtoint i32* %stack_var_-44 to i32
  %v2_2cb51 = call i32 @unknown_593d0(i32 %v2_2cb44, i32 %arg1)
  ret i32 %v2_2cb51

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2cb58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb58:
  %v0_2cb5a = load i32, i32* @ebp, align 4
  %v1_2cb61 = add i32 %v0_2cb5a, 2
  store i32 %v1_2cb61, i32* @ebp, align 4
  %v0_2cb66 = call i32 @unknown_5c0ba()
  %v0_2cb6f = load i32, i32* @ebp, align 4
  %v1_2cb6f = add i32 %v0_2cb6f, -44
  %v1_2cb75 = call i32 @unknown_5c088(i32 %v1_2cb6f)
  %v0_2cb7c = load i32, i32* @ebp, align 4
  %v1_2cb7c = add i32 %v0_2cb7c, -65
  ret i32 %v1_2cb7c
}

define i32 @function_2cb8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cb8c:
  %stack_var_-8 = alloca i32, align 4
  %v0_2cb91 = load i32, i32* @ebx, align 4
  %v0_2cb95 = load i32, i32* @ebp, align 4
  %v1_2cb95 = add i32 %v0_2cb95, -64
  %v2_2cb95 = inttoptr i32 %v1_2cb95 to i32*
  %v3_2cb95 = load i32, i32* %v2_2cb95, align 4
  %v1_2cb9c = add i32 %v0_2cb95, -29
  %v3_2cba2 = call i32 @unknown_5be20(i32 %v1_2cb9c, i32 %v3_2cb95, i32 %v0_2cb91)
  %v4_2cba7 = trunc i32 %v3_2cba2 to i8
  %v5_2cba7 = icmp ne i8 %v4_2cba7, 0
  %v5_2cbb7 = icmp eq i1 %v5_2cba7, false
  br i1 %v5_2cbb7, label %dec_label_pc_2cc13, label %dec_label_pc_2cbbb

dec_label_pc_2cbbb:                               ; preds = %dec_label_pc_2cb8c
  %v0_2cbbb = load i32, i32* @ebp, align 4
  %v1_2cbbb = add i32 %v0_2cbbb, -36
  %v1_2cbc1 = call i32 @unknown_4a96a(i32 %v1_2cbbb)
  %v0_2cbc6 = load i32, i32* @ebp, align 4
  %v1_2cbc6 = add i32 %v0_2cbc6, -36
  %v1_2cbcd = add i32 %v0_2cbc6, -64
  %v2_2cbcd = inttoptr i32 %v1_2cbcd to i32*
  %v3_2cbcd = load i32, i32* %v2_2cbcd, align 4
  %v1_2cbd4 = add i32 %v0_2cbc6, -28
  %v3_2cbda = call i32 @unknown_5c14c(i32 %v1_2cbd4, i32 %v3_2cbcd, i32 %v1_2cbc6)
  %v0_2cbdf = load i32, i32* @ebp, align 4
  %v1_2cbdf = add i32 %v0_2cbdf, -72
  %v1_2cbe2 = add i32 %v0_2cbdf, -28
  %v1_2cbe9 = add i32 %v0_2cbdf, -44
  %v2_2cbe9 = inttoptr i32 %v1_2cbe9 to i32*
  %v3_2cbe9 = load i32, i32* %v2_2cbe9, align 4
  %v1_2cbf0 = add i32 %v0_2cbdf, -60
  %v2_2cbf0 = inttoptr i32 %v1_2cbf0 to i32*
  %v3_2cbf0 = load i32, i32* %v2_2cbf0, align 4
  %v4_2cbfa = call i32 @unknown_5c1d6(i32 %v1_2cbdf, i32 %v3_2cbf0, i32 %v3_2cbe9, i32 %v1_2cbe2)
  %v0_2cc02 = load i32, i32* @ebp, align 4
  %v1_2cc02 = add i32 %v0_2cc02, -72
  %v2_2cc02 = inttoptr i32 %v1_2cc02 to i32*
  %v3_2cc02 = load i32, i32* %v2_2cc02, align 4
  %v2_2cc05 = add i32 %v0_2cc02, -44
  %v3_2cc05 = inttoptr i32 %v2_2cc05 to i32*
  store i32 %v3_2cc02, i32* %v3_2cc05, align 4
  %v0_2cc08 = load i32, i32* @ebp, align 4
  %v1_2cc08 = add i32 %v0_2cc08, -28
  store i32 %v1_2cc08, i32* %stack_var_-8, align 4
  %v1_2cc0e = call i32 @unknown_595de(i32 %v1_2cc08)
  br label %dec_label_pc_2cc13

dec_label_pc_2cc13:                               ; preds = %dec_label_pc_2cbbb, %dec_label_pc_2cb8c
  %v0_2cc13 = load i32, i32* @ebp, align 4
  %v1_2cc13 = add i32 %v0_2cc13, -44
  %v1_2cc16 = load i32, i32* @esp, align 4
  %v2_2cc16 = inttoptr i32 %v1_2cc16 to i32*
  store i32 %v1_2cc13, i32* %v2_2cc16, align 4
  %v0_2cc19 = load i32, i32* %stack_var_-8, align 4
  %v1_2cc19 = call i32 @unknown_5c088(i32 %v0_2cc19)
  %v1_2cc1e = add i32 %v1_2cc19, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_2cc1e, i32* @eax, align 8
  %v0_2cc21 = load i32, i32* @ebp, align 4
  %v1_2cc21 = add i32 %v0_2cc21, -12
  %v2_2cc21 = inttoptr i32 %v1_2cc21 to i32*
  %v3_2cc21 = load i32, i32* %v2_2cc21, align 4
  %v3_2cc24 = icmp eq i32 %v3_2cc21, 30
  br i1 %v3_2cc24, label %bb, label %dec_label_pc_2cc2d

bb:                                               ; preds = %dec_label_pc_2cc13
  %v1_2cc2b = call i32 @function_2cc4b()
  store i32 %v1_2cc2b, i32* @eax, align 8
  br label %dec_label_pc_2cc2d

dec_label_pc_2cc2d:                               ; preds = %bb, %dec_label_pc_2cc13
  %v0_2cc2d = call i32 @function_2cc46()
  ret i32 %v0_2cc2d
}

define i32 @function_2cc30() local_unnamed_addr {
dec_label_pc_2cc30:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cc30 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cc30
}

define i32 @function_2cc46() local_unnamed_addr {
dec_label_pc_2cc46:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cc4b() local_unnamed_addr {
dec_label_pc_2cc4b:
  %v0_2cc4b = load i32, i32* @ebp, align 4
  %v1_2cc4b = add i32 %v0_2cc4b, -4
  %v2_2cc4b = inttoptr i32 %v1_2cc4b to i32*
  %v3_2cc4b = load i32, i32* %v2_2cc4b, align 4
  store i32 %v3_2cc4b, i32* @ebx, align 4
  %v0_2cc4f = load i32, i32* @eax, align 8
  ret i32 %v0_2cc4f
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5eraseESt17_Rb_tree_iteratorISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cc50:
  %v2_2cc7a = call i32 @unknown_5c392(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_2cc89 = call i32 @function_2cc90()
  ret i32 %v1_2cc89
}

define i32 @function_2cc90() local_unnamed_addr {
dec_label_pc_2cc90:
  %v0_2cc91 = load i32, i32* @eax, align 8
  ret i32 %v0_2cc91
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cc92:
  ret i32 %arg3
}

define i32 @function_2ccb9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ccb9:
  %v0_2ccb9 = load i32, i32* @ecx, align 4
  %v1_2ccb9 = add i32 %v0_2ccb9, -1962662844
  %v2_2ccb9 = inttoptr i32 %v1_2ccb9 to i8*
  %v3_2ccb9 = load i8, i8* %v2_2ccb9, align 1
  %v5_2ccb9 = trunc i32 %v0_2ccb9 to i8
  %v6_2ccb9 = add i8 %v3_2ccb9, %v5_2ccb9
  store i8 %v6_2ccb9, i8* %v2_2ccb9, align 1
  %v0_2ccbf = load i32, i32* @ebp, align 4
  %v1_2ccbf = add i32 %v0_2ccbf, 1
  store i32 %v1_2ccbf, i32* @ebp, align 4
  %v0_2ccc4 = call i32 @unknown_563ba()
  %v0_2ccc9 = load i32, i32* @ebp, align 4
  %v1_2ccc9 = add i32 %v0_2ccc9, -36
  %v2_2ccc9 = inttoptr i32 %v1_2ccc9 to i32*
  %v3_2ccc9 = load i32, i32* %v2_2ccc9, align 4
  %v1_2ccd0 = add i32 %v0_2ccc9, -32
  %v2_2ccd0 = inttoptr i32 %v1_2ccd0 to i32*
  %v3_2ccd0 = load i32, i32* %v2_2ccd0, align 4
  %v2_2ccd6 = call i32 @unknown_5c428(i32 %v3_2ccd0, i32 %v3_2ccc9)
  %v0_2ccdb = load i32, i32* @ebp, align 4
  %v1_2ccdb = add i32 %v0_2ccdb, -28
  %v2_2ccdb = inttoptr i32 %v1_2ccdb to i32*
  %v3_2ccdb = load i32, i32* %v2_2ccdb, align 4
  store i32 %v3_2ccdb, i32* @eax, align 8
  %v1_2ccde = add i32 %v0_2ccdb, -12
  %v2_2ccde = inttoptr i32 %v1_2ccde to i32*
  %v3_2ccde = load i32, i32* %v2_2ccde, align 4
  %v3_2cce1 = icmp eq i32 %v3_2ccde, 30
  br i1 %v3_2cce1, label %bb, label %dec_label_pc_2ccea

bb:                                               ; preds = %dec_label_pc_2ccb9
  %v1_2cce8 = call i32 @function_2ccef()
  br label %dec_label_pc_2ccea

dec_label_pc_2ccea:                               ; preds = %bb, %dec_label_pc_2ccb9
  %v2_2cce8 = phi i32 [ %v1_2cce8, %bb ], [ %v3_2ccdb, %dec_label_pc_2ccb9 ]
  ret i32 %v2_2cce8
}

define i32 @function_2ccef() local_unnamed_addr {
dec_label_pc_2ccef:
  %v0_2ccf0 = load i32, i32* @eax, align 8
  ret i32 %v0_2ccf0
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ccf4:
  %v1_2cd11 = call i32 @unknown_5c53a(i32 %arg1)
  store i32 %v1_2cd11, i32* @eax, align 8
  %v1_2cd20 = call i32 @function_2cd27()
  ret i32 %v1_2cd20
}

define i32 @function_2cd27() local_unnamed_addr {
dec_label_pc_2cd27:
  %v0_2cd28 = load i32, i32* @eax, align 8
  ret i32 %v0_2cd28
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj120ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd2a:
  store i32 0, i32* @eax, align 8
  %v2_2cd4b = call i32 @function_2cd52(i32 %arg1)
  ret i32 %v2_2cd4b
}

define i32 @function_2cd52(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd52:
  %v0_2cd53 = load i32, i32* @eax, align 8
  ret i32 %v0_2cd53
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd54:
  %v1_2cd71 = call i32 @unknown_59a7e(i32 %arg1)
  ret i32 0
}

define i32 @function_2cd82(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd82:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cd87() local_unnamed_addr {
dec_label_pc_2cd87:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cd88 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cd88
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyEPSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd8a:
  %stack_var_-17 = alloca i32, align 4
  %v2_2cda7 = ptrtoint i32* %stack_var_-17 to i32
  %v3_2cdbb = call i32 @unknown_5c5fe(i32 %arg1, i32 %arg2, i32 %v2_2cda7)
  store i32 0, i32* @eax, align 8
  %v1_2cdca = call i32 @function_2cdd1()
  ret i32 %v1_2cdca
}

define i32 @function_2cdd1() local_unnamed_addr {
dec_label_pc_2cdd1:
  %v0_2cdd2 = load i32, i32* @eax, align 8
  ret i32 %v0_2cdd2
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE13get_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cdd4:
  ret i32 30
}

define i32 @function_2cde8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cde8:
  %v0_2cdeb = load i32, i32* @ebp, align 4
  %v1_2cdeb = add i32 %v0_2cdeb, -28
  %v2_2cdeb = inttoptr i32 %v1_2cdeb to i32*
  %v3_2cdeb = load i32, i32* %v2_2cdeb, align 4
  store i32 %v3_2cdeb, i32* @eax, align 8
  %v1_2cdee = add i32 %v0_2cdeb, -12
  %v2_2cdee = inttoptr i32 %v1_2cdee to i32*
  %v3_2cdee = load i32, i32* %v2_2cdee, align 4
  %v3_2cdf1 = icmp eq i32 %v3_2cdee, 30
  br i1 %v3_2cdf1, label %bb, label %dec_label_pc_2cdfa

bb:                                               ; preds = %dec_label_pc_2cde8
  %v1_2cdf8 = call i32 @function_2cdff()
  br label %dec_label_pc_2cdfa

dec_label_pc_2cdfa:                               ; preds = %bb, %dec_label_pc_2cde8
  %v2_2cdf8 = phi i32 [ %v1_2cdf8, %bb ], [ %v3_2cdeb, %dec_label_pc_2cde8 ]
  ret i32 %v2_2cdf8
}

define i32 @function_2cdff() local_unnamed_addr {
dec_label_pc_2cdff:
  %v0_2ce00 = load i32, i32* @eax, align 8
  ret i32 %v0_2ce00
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce02:
  %v1_2ce1f = call i32 @unknown_5c7d0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2ce2e = call i32 @function_2ce35()
  ret i32 %v1_2ce2e
}

define i32 @function_2ce35() local_unnamed_addr {
dec_label_pc_2ce35:
  %v0_2ce36 = load i32, i32* @eax, align 8
  ret i32 %v0_2ce36
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce38:
  %v1_2ce55 = call i32 @unknown_5c8dc(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2ce64 = call i32 @function_2ce6b()
  ret i32 %v1_2ce64
}

define i32 @function_2ce6b() local_unnamed_addr {
dec_label_pc_2ce6b:
  %v0_2ce6c = load i32, i32* @eax, align 8
  ret i32 %v0_2ce6c
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ce6e:
  ret i32 %arg1
}

define i32 @function_2ce98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ce98:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ce98 = load i32, i32* @eax, align 8
  %v10_2ce98 = and i32 %v0_2ce98, -256
  %v1_2ce9a = load i32, i32* @ebx, align 4
  %v2_2ce9a = udiv i32 %v1_2ce9a, 256
  %v3_2ce9a = urem i32 %v2_2ce9a, 256
  %v6_2ce9a = or i32 %v3_2ce9a, %v10_2ce98
  store i32 %v6_2ce9a, i32* %eax.global-to-local, align 8
  %v1_2ce9c = trunc i32 %v2_2ce9a to i8
  %v3_2ce9c = inttoptr i32 %v6_2ce9a to i8*
  %v4_2ce9c = load i8, i8* %v3_2ce9c, align 1
  %v5_2ce9c = add i8 %v4_2ce9c, %v1_2ce9c
  %v20_2ce9c = zext i8 %v5_2ce9c to i32
  %v23_2ce9c = or i32 %v20_2ce9c, %v10_2ce98
  store i32 %v23_2ce9c, i32* %eax.global-to-local, align 8
  %v0_2ce9e = load i32, i32* @ebp, align 4
  %v1_2ce9e = add i32 %v0_2ce9e, -64
  %v2_2ce9e = inttoptr i32 %v1_2ce9e to i32*
  %v3_2ce9e = load i32, i32* %v2_2ce9e, align 4
  store i32 %v3_2ce9e, i32* %eax.global-to-local, align 8
  %v1_2cea1 = add i32 %v3_2ce9e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2cea4 = add i32 %v0_2ce9e, -60
  %v2_2cea4 = inttoptr i32 %v1_2cea4 to i32*
  %v3_2cea4 = load i32, i32* %v2_2cea4, align 4
  %v1_2cea7 = add i32 %v3_2cea4, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_2cea7, i32* %eax.global-to-local, align 8
  %v2_2ceb1 = call i32 @unknown_5c89a(i32 %v1_2cea7, i32 %v1_2cea1)
  %v0_2ceb6 = load i32, i32* @ebp, align 4
  %v1_2ceb6 = add i32 %v0_2ceb6, -44
  store i32 %v1_2ceb6, i32* %eax.global-to-local, align 8
  %v1_2cebc = call i32 @unknown_5c980(i32 %v1_2ceb6)
  store i32 %v1_2cebc, i32* %eax.global-to-local, align 8
  %v0_2cec1 = load i32, i32* @ebp, align 4
  %v1_2cec1 = add i32 %v0_2cec1, -60
  %v2_2cec1 = inttoptr i32 %v1_2cec1 to i32*
  %v3_2cec1 = load i32, i32* %v2_2cec1, align 4
  %v1_2cec4 = add i32 %v0_2cec1, -40
  store i32 %v1_2cec4, i32* %eax.global-to-local, align 8
  %v2_2cece = call i32 @unknown_507ea(i32 %v1_2cec4, i32 %v3_2cec1)
  store i32 %v2_2cece, i32* %eax.global-to-local, align 8
  %v0_2ced6 = load i32, i32* @ebp, align 4
  %v1_2ced6 = add i32 %v0_2ced6, -60
  %v2_2ced6 = inttoptr i32 %v1_2ced6 to i32*
  %v3_2ced6 = load i32, i32* %v2_2ced6, align 4
  %v1_2ced9 = add i32 %v3_2ced6, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2cedc = add i32 %v0_2ced6, -36
  store i32 %v1_2cedc, i32* %eax.global-to-local, align 8
  %v2_2cee6 = call i32 @unknown_5c9b4(i32 %v1_2cedc, i32 %v1_2ced9)
  store i32 %v2_2cee6, i32* %eax.global-to-local, align 8
  %v0_2ceee = load i32, i32* @ebp, align 4
  %v1_2ceee = add i32 %v0_2ceee, -64
  %v2_2ceee = inttoptr i32 %v1_2ceee to i32*
  %v3_2ceee = load i32, i32* %v2_2ceee, align 4
  %v1_2cef1 = add i32 %v3_2ceee, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2cef4 = add i32 %v0_2ceee, -68
  store i32 %v1_2cef4, i32* %eax.global-to-local, align 8
  %v2_2cefe = call i32 @unknown_5c9fe(i32 %v1_2cef4, i32 %v1_2cef1)
  store i32 %v2_2cefe, i32* %eax.global-to-local, align 8
  %v0_2cf06 = load i32, i32* @ebp, align 4
  %v1_2cf06 = add i32 %v0_2cf06, -68
  %v2_2cf06 = inttoptr i32 %v1_2cf06 to i32*
  %v3_2cf06 = load i32, i32* %v2_2cf06, align 4
  store i32 %v3_2cf06, i32* %eax.global-to-local, align 8
  %v2_2cf09 = add i32 %v0_2cf06, -44
  %v3_2cf09 = inttoptr i32 %v2_2cf09 to i32*
  store i32 %v3_2cf06, i32* %v3_2cf09, align 4
  %v0_2cf0c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cf0c
}

define i32 @function_2cf3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf3a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2cf3a = load i32, i32* @eax, align 8
  %v2_2cf3a = mul i32 %v0_2cf3a, 8
  %v3_2cf3a = add i32 %v0_2cf3a, 1153901685
  %v4_2cf3a = add i32 %v3_2cf3a, %v2_2cf3a
  %v5_2cf3a = inttoptr i32 %v4_2cf3a to i8*
  %v6_2cf3a = load i8, i8* %v5_2cf3a, align 1
  %v8_2cf3a = trunc i32 %v0_2cf3a to i8
  %v9_2cf3a = add i8 %v6_2cf3a, %v8_2cf3a
  store i8 %v9_2cf3a, i8* %v5_2cf3a, align 1
  %v0_2cf41 = load i32, i32* @eax, align 8
  %v11_2cf41 = and i32 %v0_2cf41, or (i32 zext (i8 ptrtoint (i32* @global_var_c.2390 to i8) to i32), i32 -256)
  %v11_2cf43 = trunc i32 %v11_2cf41 to i8
  %v2_2cf49 = and i8 %v11_2cf43, ptrtoint (i32* @global_var_8.2379 to i8)
  %v8_2cf49 = zext i8 %v2_2cf49 to i32
  %v10_2cf49 = and i32 %v0_2cf41, -256
  %v11_2cf49 = or i32 %v8_2cf49, %v10_2cf49
  store i32 %v11_2cf49, i32* %eax.global-to-local, align 8
  %v1_2cf4c = inttoptr i32 %v11_2cf49 to i8*
  %v2_2cf4c = load i8, i8* %v1_2cf4c, align 4
  %v5_2cf4c = add i8 %v2_2cf4c, %v2_2cf49
  store i8 %v5_2cf4c, i8* %v1_2cf4c, align 4
  %v0_2cf4e = load i32, i32* @ebx, align 4
  %v1_2cf4e = lshr i32 %v0_2cf4e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2cf4e = load i32, i32* %eax.global-to-local, align 8
  %v5_2cf4e = add i32 %v1_2cf4e, %v3_2cf4e
  %v20_2cf4e = urem i32 %v5_2cf4e, 256
  %v22_2cf4e = shl i32 %v20_2cf4e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v23_2cf4e = and i32 %v0_2cf4e, -65281
  %v24_2cf4e = or i32 %v22_2cf4e, %v23_2cf4e
  store i32 %v24_2cf4e, i32* %ebx.global-to-local, align 4
  %v11_2cf51 = and i32 %v3_2cf4e, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_2cf51, i32* %eax.global-to-local, align 8
  %v2_2cf53 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v4_2cf53 = lshr i32 %v11_2cf51, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_2cf53 = trunc i32 %v4_2cf53 to i8
  %v6_2cf53 = xor i8 %v2_2cf53, %v5_2cf53
  %v12_2cf53 = load i32, i32* @ecx, align 4
  %v13_2cf53 = inttoptr i32 %v12_2cf53 to i8*
  store i8 %v6_2cf53, i8* %v13_2cf53, align 1
  %v0_2cf56 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2cf56 = load i32, i32* %eax.global-to-local, align 8
  %v4_2cf56 = trunc i32 %v3_2cf56 to i8
  %v5_2cf561 = mul i32 %v3_2cf56, 256
  %v1_2cf562 = add i32 %v5_2cf561, %v0_2cf56
  %v22_2cf56 = and i32 %v1_2cf562, 65280
  %v23_2cf56 = and i32 %v0_2cf56, -65281
  %v24_2cf56 = or i32 %v22_2cf56, %v23_2cf56
  store i32 %v24_2cf56, i32* %ebx.global-to-local, align 4
  %v2_2cf58 = add i8 %v4_2cf56, ptrtoint (i8* @global_var_24.2401 to i8)
  %v2_2cf5a = or i8 %v2_2cf58, 98
  %v8_2cf5a = zext i8 %v2_2cf5a to i32
  %v10_2cf5a = and i32 %v3_2cf56, -256
  %v11_2cf5a = or i32 %v8_2cf5a, %v10_2cf5a
  store i32 %v11_2cf5a, i32* %eax.global-to-local, align 8
  %v1_2cf5c = inttoptr i32 %v11_2cf5a to i8*
  %v2_2cf5c = load i8, i8* %v1_2cf5c, align 1
  %v5_2cf5c = add i8 %v2_2cf5c, %v2_2cf5a
  store i8 %v5_2cf5c, i8* %v1_2cf5c, align 1
  %v22_2cf5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_2cf5c

; uselistorder directives
  uselistorder i32 %v3_2cf56, { 1, 0, 2 }
  uselistorder i32 %v0_2cf56, { 1, 0 }
  uselistorder i32 %v11_2cf51, { 1, 0 }
  uselistorder i32 %v0_2cf41, { 1, 0 }
  uselistorder i32 %v0_2cf3a, { 0, 2, 1 }
}

define i32 @function_2cf52(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cf52:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cf8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf8a:
  %v0_2cf90 = load i32, i32* @ebp, align 4
  %v1_2cf90 = add i32 %v0_2cf90, -44
  %v2_2cf90 = inttoptr i32 %v1_2cf90 to i32*
  %v3_2cf90 = load i32, i32* %v2_2cf90, align 4
  %v2_2cf93 = add i32 %v0_2cf90, -24
  %v3_2cf93 = inttoptr i32 %v2_2cf93 to i32*
  store i32 %v3_2cf90, i32* %v3_2cf93, align 4
  %v0_2cf96 = load i32, i32* @ebp, align 4
  %v1_2cf96 = add i32 %v0_2cf96, -24
  %v1_2cf9c = call i32 @unknown_5cb12(i32 %v1_2cf96)
  %v0_2cfa1 = load i32, i32* @ebp, align 4
  %v1_2cfa1 = add i32 %v0_2cfa1, -20
  %v1_2cfa4 = add i32 %v0_2cfa1, -24
  %v1_2cfab = add i32 %v0_2cfa1, -64
  %v2_2cfab = inttoptr i32 %v1_2cfab to i32*
  %v3_2cfab = load i32, i32* %v2_2cfab, align 4
  %v3_2cfb5 = call i32 @unknown_5cb52(i32 %v1_2cfa1, i32 %v3_2cfab, i32 %v1_2cfa4)
  br label %dec_label_pc_2cfd5

dec_label_pc_2cfbf:                               ; preds = %dec_label_pc_2cfd5
  %v1_2cfbf = add i32 %v0_2cfbf, -28
  %v1_2cfc5 = call i32 @unknown_5cc4e(i32 %v1_2cfbf)
  %v0_2cfca = load i32, i32* @ebp, align 4
  %v1_2cfca = add i32 %v0_2cfca, -40
  %v1_2cfd0 = call i32 @unknown_560c2(i32 %v1_2cfca)
  br label %dec_label_pc_2cfd5

dec_label_pc_2cfd5:                               ; preds = %dec_label_pc_2cfbf, %dec_label_pc_2cf8a
  %v0_2cfd5 = load i32, i32* @ebp, align 4
  %v1_2cfd5 = add i32 %v0_2cfd5, -20
  %v1_2cfdc = add i32 %v0_2cfd5, -28
  %v2_2cfe2 = call i32 @unknown_5cc0e(i32 %v1_2cfdc, i32 %v1_2cfd5)
  %v4_2cfe7 = trunc i32 %v2_2cfe2 to i8
  %v5_2cfe7 = icmp eq i8 %v4_2cfe7, 0
  %v1_2cfe9 = icmp eq i1 %v5_2cfe7, false
  %v0_2cfbf = load i32, i32* @ebp, align 4
  br i1 %v1_2cfe9, label %dec_label_pc_2cfbf, label %dec_label_pc_2cfeb

dec_label_pc_2cfeb:                               ; preds = %dec_label_pc_2cfd5
  %v1_2cfeb = add i32 %v0_2cfbf, -44
  %v1_2cff1 = call i32 @unknown_5cb12(i32 %v1_2cfeb)
  %v0_2cff6 = load i32, i32* @ebp, align 4
  %v1_2cff6 = add i32 %v0_2cff6, -36
  %v1_2cffc = call i32 @unknown_5cad2(i32 %v1_2cff6)
  %v0_2d001 = load i32, i32* @ebp, align 4
  %v1_2d001 = add i32 %v0_2d001, -64
  %v2_2d001 = inttoptr i32 %v1_2d001 to i32*
  %v3_2d001 = load i32, i32* %v2_2d001, align 4
  %v1_2d004 = add i32 %v3_2d001, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2d007 = add i32 %v0_2d001, -32
  %v2_2d011 = call i32 @unknown_5ca48(i32 %v1_2d007, i32 %v1_2d004)
  %v0_2d019 = load i32, i32* @ebp, align 4
  %v1_2d019 = add i32 %v0_2d019, -32
  %v1_2d020 = add i32 %v0_2d019, -44
  %v2_2d026 = call i32 @unknown_5ca92(i32 %v1_2d020, i32 %v1_2d019)
  %v0_2d033 = call i32 @function_2d05e()
  ret i32 %v0_2d033

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5cb12, { 1, 0 }
}

define i32 @function_2d014(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d014:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d036() local_unnamed_addr {
dec_label_pc_2d036:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d036 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d036
}

define i32 @function_2d03e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d03e:
  %v0_2d040 = call i32 @unknown_59ca6()
  %v0_2d045 = call i32 @function_2d049()
  ret i32 %v0_2d045
}

define i32 @function_2d047() local_unnamed_addr {
dec_label_pc_2d047:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d047 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d047
}

define i32 @function_2d049() local_unnamed_addr {
dec_label_pc_2d049:
  %v0_2d049 = load i32, i32* @ebp, align 4
  %v1_2d049 = add i32 %v0_2d049, -60
  %v2_2d049 = inttoptr i32 %v1_2d049 to i32*
  %v3_2d049 = load i32, i32* %v2_2d049, align 4
  %v1_2d04f = call i32 @unknown_59c70(i32 %v3_2d049)
  %v0_2d054 = load i32, i32* @ebx, align 4
  ret i32 %v0_2d054
}

define i32 @function_2d05e() local_unnamed_addr {
dec_label_pc_2d05e:
  %v0_2d05e = load i32, i32* @ebp, align 4
  %v1_2d05e = add i32 %v0_2d05e, -12
  %v2_2d05e = inttoptr i32 %v1_2d05e to i32*
  %v3_2d05e = load i32, i32* %v2_2d05e, align 4
  %v2_2d061 = xor i32 %v3_2d05e, 30
  %v3_2d061 = icmp eq i32 %v2_2d061, 0
  store i32 %v2_2d061, i32* @eax, align 8
  br i1 %v3_2d061, label %bb, label %dec_label_pc_2d06a

bb:                                               ; preds = %dec_label_pc_2d05e
  %v1_2d068 = call i32 @function_2d06f()
  br label %dec_label_pc_2d06a

dec_label_pc_2d06a:                               ; preds = %bb, %dec_label_pc_2d05e
  %v2_2d068 = phi i32 [ %v1_2d068, %bb ], [ %v2_2d061, %dec_label_pc_2d05e ]
  ret i32 %v2_2d068
}

define i32 @function_2d06f() local_unnamed_addr {
dec_label_pc_2d06f:
  %v0_2d073 = load i32, i32* @eax, align 8
  ret i32 %v0_2d073
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEEC1ISM_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d074:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %arg2
}

define i32 @function_2d0aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d0aa:
  %v0_2d0ae = load i32, i32* @ebp, align 4
  %v1_2d0ae = add i32 %v0_2d0ae, -32
  %v2_2d0ae = inttoptr i32 %v1_2d0ae to i32*
  %v3_2d0ae = load i32, i32* %v2_2d0ae, align 4
  %v1_2d0bc = add i32 %v0_2d0ae, -28
  %v2_2d0bc = inttoptr i32 %v1_2d0bc to i32*
  %v3_2d0bc = load i32, i32* %v2_2d0bc, align 4
  %v3_2d0c2 = call i32 @unknown_3d8af(i32 %v3_2d0bc, i32 %v3_2d0ae, i32 %v3_2d0ae)
  %v0_2d0c7 = load i32, i32* @ebp, align 4
  %v1_2d0c7 = add i32 %v0_2d0c7, -12
  %v2_2d0c7 = inttoptr i32 %v1_2d0c7 to i32*
  %v3_2d0c7 = load i32, i32* %v2_2d0c7, align 4
  %v2_2d0ca = xor i32 %v3_2d0c7, 30
  ret i32 %v2_2d0ca

; uselistorder directives
  uselistorder i32 %v3_2d0ae, { 1, 0 }
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d0da:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2d0ff(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d0ff:
  %v0_2d0ff = load i32, i32* @ebp, align 4
  %v1_2d0ff = add i32 %v0_2d0ff, -28
  %v2_2d0ff = inttoptr i32 %v1_2d0ff to i32*
  %v3_2d0ff = load i32, i32* %v2_2d0ff, align 4
  %v1_2d102 = add i32 %v3_2d0ff, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2d105 = add i32 %v0_2d0ff, -32
  %v2_2d105 = inttoptr i32 %v1_2d105 to i32*
  %v3_2d105 = load i32, i32* %v2_2d105, align 4
  %v2_2d10f = call i32 @unknown_5cf80(i32 %v1_2d102, i32 %v3_2d105)
  %v0_2d114 = load i32, i32* @ebp, align 4
  %v1_2d114 = add i32 %v0_2d114, -32
  %v2_2d114 = inttoptr i32 %v1_2d114 to i32*
  %v3_2d114 = load i32, i32* %v2_2d114, align 4
  %v1_2d122 = add i32 %v0_2d114, -28
  %v2_2d122 = inttoptr i32 %v1_2d122 to i32*
  %v3_2d122 = load i32, i32* %v2_2d122, align 4
  %v3_2d128 = call i32 @unknown_3d915(i32 %v3_2d122, i32 %v3_2d114, i32 %v3_2d114)
  %v0_2d12d = load i32, i32* @ebp, align 4
  %v1_2d12d = add i32 %v0_2d12d, -12
  %v2_2d12d = inttoptr i32 %v1_2d12d to i32*
  %v3_2d12d = load i32, i32* %v2_2d12d, align 4
  %v2_2d130 = xor i32 %v3_2d12d, 30
  %v3_2d130 = icmp eq i32 %v2_2d130, 0
  store i32 %v2_2d130, i32* @eax, align 8
  br i1 %v3_2d130, label %bb, label %dec_label_pc_2d139

bb:                                               ; preds = %dec_label_pc_2d0ff
  %v1_2d137 = call i32 @function_2d13e()
  br label %dec_label_pc_2d139

dec_label_pc_2d139:                               ; preds = %bb, %dec_label_pc_2d0ff
  %v2_2d137 = phi i32 [ %v1_2d137, %bb ], [ %v2_2d130, %dec_label_pc_2d0ff ]
  ret i32 %v2_2d137

; uselistorder directives
  uselistorder i32 %v3_2d114, { 1, 0 }
}

define i32 @function_2d13e() local_unnamed_addr {
dec_label_pc_2d13e:
  %v0_2d13f = load i32, i32* @eax, align 8
  ret i32 %v0_2d13f
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10pop_back_nEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d140:
  %v1_2d160 = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2d160 = inttoptr i32 %v1_2d160 to i32*
  %v3_2d160 = load i32, i32* %v2_2d160, align 4
  %v10_2d166 = icmp ult i32 %v3_2d160, %arg2
  %v1_2d169 = icmp eq i1 %v10_2d166, false
  br i1 %v1_2d169, label %bb, label %dec_label_pc_2d16b

bb:                                               ; preds = %dec_label_pc_2d140
  %v4_2d169 = call i32 @function_2d18f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d16b

dec_label_pc_2d16b:                               ; preds = %bb, %dec_label_pc_2d140
  %v3_2d183 = phi i32 [ %v4_2d169, %bb ], [ %v3_2d160, %dec_label_pc_2d140 ]
  ret i32 %v3_2d183
}

define i32 @function_2d18f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d18f:
  %v0_2d18f = load i32, i32* @ebp, align 4
  %v1_2d18f = add i32 %v0_2d18f, -32
  %v2_2d18f = inttoptr i32 %v1_2d18f to i32*
  %v3_2d18f = load i32, i32* %v2_2d18f, align 4
  %v10_2d18f = icmp eq i32 %v3_2d18f, 0
  br i1 %v10_2d18f, label %dec_label_pc_2d1be, label %dec_label_pc_2d195

dec_label_pc_2d195:                               ; preds = %dec_label_pc_2d18f
  %v1_2d19c = add i32 %v0_2d18f, -28
  %v2_2d19c = inttoptr i32 %v1_2d19c to i32*
  %v3_2d19c = load i32, i32* %v2_2d19c, align 4
  %v2_2d1a2 = call i32 @unknown_5d072(i32 %v3_2d19c, i32 %v3_2d18f)
  %v0_2d1a7 = load i32, i32* @ebp, align 4
  %v1_2d1a7 = add i32 %v0_2d1a7, -28
  %v2_2d1a7 = inttoptr i32 %v1_2d1a7 to i32*
  %v3_2d1a7 = load i32, i32* %v2_2d1a7, align 4
  %v1_2d1aa = add i32 %v3_2d1a7, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2d1aa = inttoptr i32 %v1_2d1aa to i32*
  %v3_2d1aa = load i32, i32* %v2_2d1aa, align 4
  %v2_2d1b2 = add i32 %v0_2d1a7, -32
  %v3_2d1b2 = inttoptr i32 %v2_2d1b2 to i32*
  %v4_2d1b2 = load i32, i32* %v3_2d1b2, align 4
  %v5_2d1b2 = sub i32 %v3_2d1aa, %v4_2d1b2
  %v3_2d1b5 = load i32, i32* %v2_2d1a7, align 4
  %v2_2d1b8 = add i32 %v3_2d1b5, ptrtoint (i32* @global_var_80.2540 to i32)
  %v3_2d1b8 = inttoptr i32 %v2_2d1b8 to i32*
  store i32 %v5_2d1b2, i32* %v3_2d1b8, align 4
  %v0_2d1be.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2d1be

dec_label_pc_2d1be:                               ; preds = %dec_label_pc_2d195, %dec_label_pc_2d18f
  %v0_2d1be = phi i32 [ %v0_2d1be.pre, %dec_label_pc_2d195 ], [ %v0_2d18f, %dec_label_pc_2d18f ]
  %v1_2d1be = add i32 %v0_2d1be, -12
  %v2_2d1be = inttoptr i32 %v1_2d1be to i32*
  %v3_2d1be = load i32, i32* %v2_2d1be, align 4
  %v2_2d1c1 = xor i32 %v3_2d1be, 30
  %v3_2d1c1 = icmp eq i32 %v2_2d1c1, 0
  store i32 %v2_2d1c1, i32* @eax, align 8
  br i1 %v3_2d1c1, label %bb, label %dec_label_pc_2d1ca

bb:                                               ; preds = %dec_label_pc_2d1be
  %v1_2d1c8 = call i32 @function_2d1cf()
  br label %dec_label_pc_2d1ca

dec_label_pc_2d1ca:                               ; preds = %bb, %dec_label_pc_2d1be
  %v2_2d1c8 = phi i32 [ %v1_2d1c8, %bb ], [ %v2_2d1c1, %dec_label_pc_2d1be ]
  ret i32 %v2_2d1c8
}

define i32 @function_2d1cf() local_unnamed_addr {
dec_label_pc_2d1cf:
  %v0_2d1d0 = load i32, i32* @eax, align 8
  ret i32 %v0_2d1d0
}

define i32 @_ZNSt8iteratorISt19output_iterator_tagvvvvEC1Ev() local_unnamed_addr {
dec_label_pc_2d1d2:
  %eax.global-to-local = alloca i32, align 4
  %v17_2d1d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2d1d5
}

define i32 @function_2d1da(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d1da:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2d1da = load i32, i32* @ecx, align 4
  %v1_2d1da = add i32 %v0_2d1da, -1587157947
  %v2_2d1da = inttoptr i32 %v1_2d1da to i8*
  %v3_2d1da = load i8, i8* %v2_2d1da, align 1
  %v5_2d1da = trunc i32 %v0_2d1da to i8
  %v6_2d1da = or i8 %v3_2d1da, %v5_2d1da
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2d1da, i8* %v2_2d1da, align 1
  %v0_2d1e0 = load i32, i32* @eax, align 8
  %v1_2d1e0 = trunc i32 %v0_2d1e0 to i8
  %v2_2d1e0 = load i1, i1* %cf.global-to-local, align 1
  %v3_2d1e0 = zext i1 %v2_2d1e0 to i8
  %v4_2d1e0 = add i8 %v3_2d1e0, %v1_2d1e0
  %v19_2d1e0 = icmp ule i8 %v4_2d1e0, %v1_2d1e0
  %v21_2d1e0 = icmp eq i1 %v2_2d1e0, %v19_2d1e0
  store i1 %v21_2d1e0, i1* %cf.global-to-local, align 1
  %v22_2d1e0 = zext i8 %v4_2d1e0 to i32
  %v24_2d1e0 = and i32 %v0_2d1e0, -256
  %v25_2d1e0 = or i32 %v22_2d1e0, %v24_2d1e0
  store i32 %v25_2d1e0, i32* %eax.global-to-local, align 8
  %v1_2d1e2 = inttoptr i32 %v25_2d1e0 to i8*
  %v2_2d1e2 = load i8, i8* %v1_2d1e2, align 1
  %v5_2d1e2 = add i8 %v2_2d1e2, %v4_2d1e0
  store i8 %v5_2d1e2, i8* %v1_2d1e2, align 1
  %v0_2d1e4 = load i32, i32* %eax.global-to-local, align 8
  %v1_2d1e4 = load i32, i32* @ebp, align 4
  %v2_2d1e4 = add i32 %v1_2d1e4, -12
  %v3_2d1e4 = inttoptr i32 %v2_2d1e4 to i32*
  store i32 %v0_2d1e4, i32* %v3_2d1e4, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2d1e9 = load i32, i32* @ebp, align 4
  %v1_2d1e9 = add i32 %v0_2d1e9, -12
  %v2_2d1e9 = inttoptr i32 %v1_2d1e9 to i32*
  %v3_2d1e9 = load i32, i32* %v2_2d1e9, align 4
  %v2_2d1ec = xor i32 %v3_2d1e9, 30
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2d1ec = icmp eq i32 %v2_2d1ec, 0
  store i32 %v2_2d1ec, i32* @eax, align 8
  br i1 %v3_2d1ec, label %bb, label %dec_label_pc_2d1f5

bb:                                               ; preds = %dec_label_pc_2d1da
  %v1_2d1f3 = call i32 @function_2d1fa()
  store i32 %v1_2d1f3, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2d1f5

dec_label_pc_2d1f5:                               ; preds = %bb, %dec_label_pc_2d1da
  %v2_2d1f3 = phi i32 [ %v1_2d1f3, %bb ], [ %v2_2d1ec, %dec_label_pc_2d1da ]
  ret i32 %v2_2d1f3

; uselistorder directives
  uselistorder i8 %v4_2d1e0, { 0, 2, 1 }
  uselistorder i8 %v1_2d1e0, { 1, 0 }
}

define i32 @function_2d1fa() local_unnamed_addr {
dec_label_pc_2d1fa:
  %v0_2d1fb = load i32, i32* @eax, align 8
  ret i32 %v0_2d1fb
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEC1ERSG_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d1fc:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_2d21f = call i32 @unknown_5a3ce(i32 %tmp101)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v1_2d236 = call i32 @function_2d23d()
  ret i32 %v1_2d236
}

define i32 @function_2d23d() local_unnamed_addr {
dec_label_pc_2d23d:
  %v0_2d23e = load i32, i32* @eax, align 8
  ret i32 %v0_2d23e
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d240:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_2d269 = inttoptr i32 %arg2 to i32*
  %v2_2d269 = load i32, i32* %v1_2d269, align 4
  store i32 %v2_2d269, i32* %arg1, align 4
  store i32 %tmp103, i32* @eax, align 8
  %v4_2d27a = call i32 @function_2d281(i32 %arg3, i32 %arg2, i32 %tmp103)
  ret i32 %v4_2d27a
}

define i32 @function_2d281(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d281:
  %v0_2d282 = load i32, i32* @eax, align 8
  ret i32 %v0_2d282
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d286:
  store i32 %arg1, i32* @eax, align 8
  %v2_2d2aa = call i32 @function_2d2b1(i32 %arg1)
  ret i32 %v2_2d2aa
}

define i32 @function_2d2b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2b1:
  %v0_2d2b2 = load i32, i32* @eax, align 8
  ret i32 %v0_2d2b2
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_() local_unnamed_addr {
dec_label_pc_2d2b4:
  %eax.global-to-local = alloca i32, align 4
  %v2_2d2b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2d2b5
}

define i32 @function_2d2b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2b8:
  %v0_2d2c1 = load i32, i32* @ebp, align 4
  %v1_2d2c4 = add i32 %v0_2d2c1, 2
  store i32 %v1_2d2c4, i32* @ebp, align 4
  %v2_2d2cc = add i32 %v0_2d2c1, -10
  %v3_2d2cc = inttoptr i32 %v2_2d2cc to i32*
  store i32 30, i32* %v3_2d2cc, align 4
  %v0_2d2d1 = load i32, i32* @ebp, align 4
  %v1_2d2d1 = add i32 %v0_2d2d1, -28
  %v2_2d2d1 = inttoptr i32 %v1_2d2d1 to i32*
  %v3_2d2d1 = load i32, i32* %v2_2d2d1, align 4
  %v1_2d2d4 = inttoptr i32 %v3_2d2d1 to i32*
  %v2_2d2d4 = load i32, i32* %v1_2d2d4, align 4
  %v1_2d2d6 = add i32 %v0_2d2d1, -32
  %v2_2d2d6 = inttoptr i32 %v1_2d2d6 to i32*
  %v3_2d2d6 = load i32, i32* %v2_2d2d6, align 4
  %v2_2d2e0 = call i32 @unknown_5d230(i32 %v2_2d2d4, i32 %v3_2d2d6)
  %v0_2d2e5 = load i32, i32* @ebp, align 4
  %v1_2d2e5 = add i32 %v0_2d2e5, -28
  %v2_2d2e5 = inttoptr i32 %v1_2d2e5 to i32*
  %v3_2d2e5 = load i32, i32* %v2_2d2e5, align 4
  store i32 %v3_2d2e5, i32* @eax, align 8
  %v1_2d2e8 = add i32 %v0_2d2e5, -12
  %v2_2d2e8 = inttoptr i32 %v1_2d2e8 to i32*
  %v3_2d2e8 = load i32, i32* %v2_2d2e8, align 4
  %v3_2d2eb = icmp eq i32 %v3_2d2e8, 30
  br i1 %v3_2d2eb, label %bb, label %dec_label_pc_2d2f4

bb:                                               ; preds = %dec_label_pc_2d2b8
  %v2_2d2f2 = call i32 @function_2d2f9(i32 %v2_2d2d4)
  br label %dec_label_pc_2d2f4

dec_label_pc_2d2f4:                               ; preds = %bb, %dec_label_pc_2d2b8
  %v4_2d2f2 = phi i32 [ %v2_2d2f2, %bb ], [ %v3_2d2e5, %dec_label_pc_2d2b8 ]
  ret i32 %v4_2d2f2

; uselistorder directives
  uselistorder i32 (i32)* @function_2d2f9, { 0, 2, 1 }
}

define i32 @function_2d2f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2f9:
  %v0_2d2fa = load i32, i32* @eax, align 8
  ret i32 %v0_2d2fa
}

define i32 @_ZN5boost20iterator_core_access5equalINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EES10_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2d2fb:
  ret i32 %arg1
}

define i32 @function_2d32d(i16 %arg1) local_unnamed_addr {
dec_label_pc_2d32d:
  %eax.global-to-local = alloca i32, align 4
  %v6_2d32d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_2d32d
}

define i32 @function_2d341() local_unnamed_addr {
dec_label_pc_2d341:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d341 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d341 = add i32 %v0_2d341, -1
  store i32 %v1_2d341, i32* %ecx.global-to-local, align 4
  %v0_2d343 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d343
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d344:
  ret i32 %arg1
}

define i32 @function_2d34e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d34e:
  %v0_2d34e = load i32, i32* @ebp, align 4
  %v1_2d34e = add i32 %v0_2d34e, 1
  store i32 %v1_2d34e, i32* @ebp, align 4
  %v2_2d356 = add i32 %v0_2d34e, -11
  %v3_2d356 = inttoptr i32 %v2_2d356 to i32*
  store i32 30, i32* %v3_2d356, align 4
  %v0_2d35b = load i32, i32* @ebp, align 4
  %v1_2d35b = add i32 %v0_2d35b, -28
  %v2_2d35b = inttoptr i32 %v1_2d35b to i32*
  %v3_2d35b = load i32, i32* %v2_2d35b, align 4
  store i32 %v3_2d35b, i32* @eax, align 8
  %v1_2d35e = add i32 %v0_2d35b, -12
  %v2_2d35e = inttoptr i32 %v1_2d35e to i32*
  %v3_2d35e = load i32, i32* %v2_2d35e, align 4
  %v3_2d361 = icmp eq i32 %v3_2d35e, 30
  br i1 %v3_2d361, label %bb, label %dec_label_pc_2d36a

bb:                                               ; preds = %dec_label_pc_2d34e
  %v1_2d368 = call i32 @function_2d36f()
  br label %dec_label_pc_2d36a

dec_label_pc_2d36a:                               ; preds = %bb, %dec_label_pc_2d34e
  %v2_2d368 = phi i32 [ %v1_2d368, %bb ], [ %v3_2d35b, %dec_label_pc_2d34e ]
  ret i32 %v2_2d368
}

define i32 @function_2d36f() local_unnamed_addr {
dec_label_pc_2d36f:
  %v0_2d370 = load i32, i32* @eax, align 8
  ret i32 %v0_2d370
}

define i32 @_ZN5boost20iterator_core_access11dereferenceINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EEEENT_9referenceERKS11_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d371:
  %v1_2d38e = call i32 @unknown_5d3b3(i32 %arg1)
  store i32 %v1_2d38e, i32* @eax, align 8
  %v1_2d39d = call i32 @function_2d3a4()
  ret i32 %v1_2d39d
}

define i32 @function_2d3a4() local_unnamed_addr {
dec_label_pc_2d3a4:
  %v0_2d3a5 = load i32, i32* @eax, align 8
  ret i32 %v0_2d3a5
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE6assignERKSs() local_unnamed_addr {
dec_label_pc_2d3a6:
  %eax.global-to-local = alloca i32, align 4
  %v5_2d3a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2d3a6
}

define i32 @function_2d3a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d3a8:
  %v0_2d3ad = load i32, i32* @ebp, align 4
  %v1_2d3ad = add i32 %v0_2d3ad, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2d3ad = inttoptr i32 %v1_2d3ad to i32*
  %v3_2d3ad = load i32, i32* %v2_2d3ad, align 4
  %v2_2d3b0 = add i32 %v0_2d3ad, -28
  %v3_2d3b0 = inttoptr i32 %v2_2d3b0 to i32*
  store i32 %v3_2d3ad, i32* %v3_2d3b0, align 4
  %v0_2d3b3 = load i32, i32* @ebp, align 4
  %v1_2d3b3 = add i32 %v0_2d3b3, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2d3b3 = inttoptr i32 %v1_2d3b3 to i32*
  %v3_2d3b3 = load i32, i32* %v2_2d3b3, align 4
  %v2_2d3b6 = add i32 %v0_2d3b3, -32
  %v3_2d3b6 = inttoptr i32 %v2_2d3b6 to i32*
  store i32 %v3_2d3b3, i32* %v3_2d3b6, align 4
  %v1_2d3bf = load i32, i32* @ebp, align 4
  %v2_2d3bf = add i32 %v1_2d3bf, -12
  %v3_2d3bf = inttoptr i32 %v2_2d3bf to i32*
  store i32 30, i32* %v3_2d3bf, align 4
  %v0_2d3c4 = load i32, i32* @ebp, align 4
  %v1_2d3c4 = add i32 %v0_2d3c4, -28
  %v2_2d3c4 = inttoptr i32 %v1_2d3c4 to i32*
  %v3_2d3c4 = load i32, i32* %v2_2d3c4, align 4
  %v1_2d3ca = call i32 @unknown_4ba46(i32 %v3_2d3c4)
  %v4_2d3cf = trunc i32 %v1_2d3ca to i8
  %v5_2d3cf = icmp eq i8 %v4_2d3cf, 0
  br i1 %v5_2d3cf, label %dec_label_pc_2d3eb, label %dec_label_pc_2d3d3

dec_label_pc_2d3d3:                               ; preds = %dec_label_pc_2d3a8
  %v0_2d3d3 = load i32, i32* @ebx, align 4
  %v0_2d3d7 = load i32, i32* @ebp, align 4
  %v1_2d3d7 = add i32 %v0_2d3d7, -32
  %v2_2d3d7 = inttoptr i32 %v1_2d3d7 to i32*
  %v3_2d3d7 = load i32, i32* %v2_2d3d7, align 4
  %v1_2d3de = add i32 %v0_2d3d7, -28
  %v2_2d3de = inttoptr i32 %v1_2d3de to i32*
  %v3_2d3de = load i32, i32* %v2_2d3de, align 4
  %sext = mul i32 %v0_2d3d3, 16777216
  %v3_2d3e4 = sdiv i32 %sext, 16777216
  %v4_2d3e4 = call i32 @unknown_5d4e6(i32 %v3_2d3de, i32 %v3_2d3d7, i32 %v3_2d3e4)
  br label %dec_label_pc_2d3fd

dec_label_pc_2d3eb:                               ; preds = %dec_label_pc_2d3a8
  %v0_2d3eb = load i32, i32* @ebp, align 4
  %v1_2d3eb = add i32 %v0_2d3eb, -32
  %v2_2d3eb = inttoptr i32 %v1_2d3eb to i32*
  %v3_2d3eb = load i32, i32* %v2_2d3eb, align 4
  %v1_2d3f2 = add i32 %v0_2d3eb, -28
  %v2_2d3f2 = inttoptr i32 %v1_2d3f2 to i32*
  %v3_2d3f2 = load i32, i32* %v2_2d3f2, align 4
  %v2_2d3f8 = call i32 @unknown_4ba76(i32 %v3_2d3f2, i32 %v3_2d3eb)
  br label %dec_label_pc_2d3fd

dec_label_pc_2d3fd:                               ; preds = %dec_label_pc_2d3eb, %dec_label_pc_2d3d3
  %v0_2d3fd = load i32, i32* @ebp, align 4
  %v1_2d3fd = add i32 %v0_2d3fd, -12
  %v2_2d3fd = inttoptr i32 %v1_2d3fd to i32*
  %v3_2d3fd = load i32, i32* %v2_2d3fd, align 4
  %v2_2d400 = xor i32 %v3_2d3fd, 30
  %v3_2d400 = icmp eq i32 %v2_2d400, 0
  store i32 %v2_2d400, i32* @eax, align 8
  br i1 %v3_2d400, label %bb, label %dec_label_pc_2d409

bb:                                               ; preds = %dec_label_pc_2d3fd
  %v1_2d407 = call i32 @function_2d40e()
  br label %dec_label_pc_2d409

dec_label_pc_2d409:                               ; preds = %bb, %dec_label_pc_2d3fd
  %v2_2d407 = phi i32 [ %v1_2d407, %bb ], [ %v2_2d400, %dec_label_pc_2d3fd ]
  ret i32 %v2_2d407
}

define i32 @function_2d40e() local_unnamed_addr {
dec_label_pc_2d40e:
  %v0_2d413 = load i32, i32* @eax, align 8
  ret i32 %v0_2d413
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d414:
  ret i32 %arg1
}

define i32 @function_2d422(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d422:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d422 = load i32, i32* @eax, align 8
  %v1_2d422 = trunc i32 %v0_2d422 to i8
  %v2_2d422 = load i1, i1* @cf, align 1
  %v3_2d422 = zext i1 %v2_2d422 to i8
  %v4_2d422 = add i8 %v3_2d422, %v1_2d422
  %v22_2d422 = zext i8 %v4_2d422 to i32
  %v24_2d422 = and i32 %v0_2d422, -256
  %v25_2d422 = or i32 %v22_2d422, %v24_2d422
  store i32 %v25_2d422, i32* %eax.global-to-local, align 8
  %v1_2d424 = inttoptr i32 %v25_2d422 to i8*
  %v2_2d424 = load i8, i8* %v1_2d424, align 1
  %v5_2d424 = add i8 %v2_2d424, %v4_2d422
  store i8 %v5_2d424, i8* %v1_2d424, align 1
  %v0_2d426 = load i32, i32* %eax.global-to-local, align 8
  %v1_2d426 = load i32, i32* @ebp, align 4
  %v2_2d426 = add i32 %v1_2d426, -12
  %v3_2d426 = inttoptr i32 %v2_2d426 to i32*
  store i32 %v0_2d426, i32* %v3_2d426, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2d42b = load i32, i32* @ebp, align 4
  %v1_2d42b = add i32 %v0_2d42b, -28
  %v2_2d42b = inttoptr i32 %v1_2d42b to i32*
  %v3_2d42b = load i32, i32* %v2_2d42b, align 4
  store i32 %v3_2d42b, i32* @eax, align 8
  %v1_2d42e = add i32 %v0_2d42b, -12
  %v2_2d42e = inttoptr i32 %v1_2d42e to i32*
  %v3_2d42e = load i32, i32* %v2_2d42e, align 4
  %v3_2d431 = icmp eq i32 %v3_2d42e, 30
  br i1 %v3_2d431, label %bb, label %dec_label_pc_2d43a

bb:                                               ; preds = %dec_label_pc_2d422
  %v1_2d438 = call i32 @function_2d43f()
  store i32 %v1_2d438, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2d43a

dec_label_pc_2d43a:                               ; preds = %bb, %dec_label_pc_2d422
  %v2_2d438 = phi i32 [ %v1_2d438, %bb ], [ %v3_2d42b, %dec_label_pc_2d422 ]
  ret i32 %v2_2d438
}

define i32 @function_2d43f() local_unnamed_addr {
dec_label_pc_2d43f:
  %v0_2d440 = load i32, i32* @eax, align 8
  ret i32 %v0_2d440
}

define i32 @_ZN5boost20iterator_core_access9incrementINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EEEEvRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d441:
  %v1_2d45e = call i32 @unknown_5d5d3(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2d46d = call i32 @function_2d474()
  ret i32 %v1_2d46d
}

define i32 @function_2d474() local_unnamed_addr {
dec_label_pc_2d474:
  %v0_2d475 = load i32, i32* @eax, align 8
  ret i32 %v0_2d475
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE8cast_ptrEPSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2d476:
  store i32 %arg2, i32* @eax, align 8
  %v4_2d4a7 = sext i8 %arg3 to i32
  %v5_2d4a7 = call i32 @function_2d4ae(i32 %v4_2d4a7, i32 %arg2, i32 %arg1)
  ret i32 %v5_2d4a7
}

define i32 @function_2d4ae(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d4ae:
  %v0_2d4af = load i32, i32* @eax, align 8
  ret i32 %v0_2d4af
}

define i32 @_ZN9__gnu_cxx13new_allocatorISsEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4b0:
  ret i32 0
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4da:
  store i32 %arg1, i32* @eax, align 8
  %v2_2d4fe = call i32 @function_2d505(i32 %arg1)
  ret i32 %v2_2d4fe
}

define i32 @function_2d505(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d505:
  %v0_2d506 = load i32, i32* @eax, align 8
  ret i32 %v0_2d506
}

define i32 @_ZNSaISt4pairIKSsSsEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d508:
  %v1_2d52b = call i32 @unknown_5d6e8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2d53a = call i32 @function_2d541()
  ret i32 %v1_2d53a
}

define i32 @function_2d541() local_unnamed_addr {
dec_label_pc_2d541:
  %v0_2d542 = load i32, i32* @eax, align 8
  ret i32 %v0_2d542
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d544:
  store i32 0, i32* @eax, align 8
  %v2_2d565 = call i32 @function_2d56c(i32 %arg1)
  ret i32 %v2_2d565
}

define i32 @function_2d56c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d56c:
  %v0_2d56d = load i32, i32* @eax, align 8
  ret i32 %v0_2d56d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d56e:
  ret i32 %arg2
}

define i32 @function_2d5ac() local_unnamed_addr {
dec_label_pc_2d5ac:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d5ac = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d5ac = add i32 %v0_2d5ac, -1
  store i32 %v1_2d5ac, i32* %ecx.global-to-local, align 4
  %v0_2d5ae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d5ae
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d5b0:
  store i32 %arg1, i32* @eax, align 8
  %v2_2d5d4 = call i32 @function_2d5db(i32 %arg1)
  ret i32 %v2_2d5d4
}

define i32 @function_2d5db(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d5db:
  %v0_2d5dc = load i32, i32* @eax, align 8
  ret i32 %v0_2d5dc
}

define i32 @_ZNSaISt4pairIKSsSt6vectorISsSaISsEEEEC1ISt13_Rb_tree_nodeIS4_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d5de:
  ret i32 30
}

define i32 @function_2d5fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d5fa:
  %v0_2d5fa = load i32, i32* @ebx, align 4
  %v1_2d5fa = add i32 %v0_2d5fa, 76145733
  %v2_2d5fa = inttoptr i32 %v1_2d5fa to i8*
  %v3_2d5fa = load i8, i8* %v2_2d5fa, align 1
  %v4_2d5fa = udiv i8 %v3_2d5fa, 16
  %v5_2d5fa = mul i8 %v3_2d5fa, 16
  %v6_2d5fa = or i8 %v4_2d5fa, %v5_2d5fa
  store i8 %v6_2d5fa, i8* %v2_2d5fa, align 1
  %v0_2d601 = call i32 @unknown_5d7e8()
  %v0_2d606 = load i32, i32* @ebp, align 4
  %v1_2d606 = add i32 %v0_2d606, -12
  %v2_2d606 = inttoptr i32 %v1_2d606 to i32*
  %v3_2d606 = load i32, i32* %v2_2d606, align 4
  %v2_2d609 = xor i32 %v3_2d606, 30
  %v3_2d609 = icmp eq i32 %v2_2d609, 0
  store i32 %v2_2d609, i32* @eax, align 8
  br i1 %v3_2d609, label %bb, label %dec_label_pc_2d612

bb:                                               ; preds = %dec_label_pc_2d5fa
  %v1_2d610 = call i32 @function_2d617()
  br label %dec_label_pc_2d612

dec_label_pc_2d612:                               ; preds = %bb, %dec_label_pc_2d5fa
  %v2_2d610 = phi i32 [ %v1_2d610, %bb ], [ %v2_2d609, %dec_label_pc_2d5fa ]
  ret i32 %v2_2d610
}

define i32 @function_2d617() local_unnamed_addr {
dec_label_pc_2d617:
  %v0_2d618 = load i32, i32* @eax, align 8
  ret i32 %v0_2d618
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSt6vectorISsSaISsEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d61a:
  store i32 0, i32* @eax, align 8
  %v2_2d63b = call i32 @function_2d642(i32 %arg1)
  ret i32 %v2_2d63b
}

define i32 @function_2d642(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d642:
  %v0_2d643 = load i32, i32* @eax, align 8
  ret i32 %v0_2d643
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEE10deallocateEPS8_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d644:
  ret i32 %arg2
}

define i32 @function_2d682() local_unnamed_addr {
dec_label_pc_2d682:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d682 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d682 = add i32 %v0_2d682, -1
  store i32 %v1_2d682, i32* %ecx.global-to-local, align 4
  %v0_2d684 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d684
}

define i32 @_ZN9__gnu_cxx13new_allocatorIxEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d686:
  ret i32 0
}

define i32 @function_2d69e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d69e:
  %v0_2d69e = load i32, i32* @ebp, align 4
  %v1_2d69e = add i32 %v0_2d69e, 1
  store i32 %v1_2d69e, i32* @ebp, align 4
  %v0_2d6a0 = load i32, i32* @eax, align 8
  %v2_2d6a0 = xor i32 %v0_2d6a0, 30
  %v3_2d6a0 = icmp eq i32 %v2_2d6a0, 0
  store i32 %v2_2d6a0, i32* @eax, align 8
  br i1 %v3_2d6a0, label %bb, label %dec_label_pc_2d6a9

bb:                                               ; preds = %dec_label_pc_2d69e
  %v1_2d6a7 = call i32 @function_2d6ae()
  br label %dec_label_pc_2d6a9

dec_label_pc_2d6a9:                               ; preds = %bb, %dec_label_pc_2d69e
  %v2_2d6a7 = phi i32 [ %v1_2d6a7, %bb ], [ %v2_2d6a0, %dec_label_pc_2d69e ]
  ret i32 %v2_2d6a7
}

define i32 @function_2d6ae() local_unnamed_addr {
dec_label_pc_2d6ae:
  %v0_2d6af = load i32, i32* @eax, align 8
  ret i32 %v0_2d6af
}

define i32 @_ZSt22__copy_move_backward_aILb0EPxS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d6b0:
  %v3_2d6eb = call i32 @unknown_5d8e4(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_2d6eb
}

define i32 @function_2d700(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d700:
  %v0_2d700 = load i32, i32* @ecx, align 4
  %v1_2d700 = add i32 %v0_2d700, -1
  store i32 %v1_2d700, i32* @ecx, align 4
  %v0_2d702 = load i32, i32* @eax, align 8
  ret i32 %v0_2d702
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d703:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2d71a = ptrtoint i32* %stack_var_-32 to i32
  %v1_2d720 = call i32 @unknown_5d9b9(i32 %v2_2d71a)
  %v1_2d725 = inttoptr i32 %v1_2d720 to i32*
  %v2_2d725 = load i32, i32* %v1_2d725, align 4
  store i32 %v2_2d725, i32* @eax, align 8
  %v1_2d731 = call i32 @function_2d738()
  ret i32 %v1_2d731
}

define i32 @function_2d738() local_unnamed_addr {
dec_label_pc_2d738:
  %v0_2d739 = load i32, i32* @eax, align 8
  ret i32 %v0_2d739
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSsS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d73a:
  %v2_2d765 = sub i32 %arg2, %arg1
  %v2_2d769 = sdiv i32 %v2_2d765, 4
  ret i32 %v2_2d769
}

define i32 @function_2d78c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2d78c:
  %v0_2d78c = load i32, i32* @edx, align 8
  %v1_2d78c = trunc i32 %v0_2d78c to i16
  %v2_2d78c = call i32 @__asm_insd(i16 %v1_2d78c)
  %v3_2d78c = load i32, i32* @edi, align 8
  %v4_2d78c = inttoptr i32 %v3_2d78c to i32*
  store i32 %v2_2d78c, i32* %v4_2d78c, align 4
  %v0_2d78d = load i32, i32* @ebx, align 4
  %v1_2d78d = add i32 %v0_2d78d, 251719805
  %v2_2d78d = inttoptr i32 %v1_2d78d to i32*
  %v3_2d78d = load i32, i32* %v2_2d78d, align 4
  %v4_2d78d = load i32, i32* @eax, align 8
  %v5_2d78d = add i32 %v4_2d78d, %v3_2d78d
  %v6_2d78d = urem i32 %v3_2d78d, 16
  %v7_2d78d = urem i32 %v4_2d78d, 16
  %v8_2d78d = add nuw nsw i32 %v7_2d78d, %v6_2d78d
  %v9_2d78d = icmp ugt i32 %v8_2d78d, 15
  %v10_2d78d = icmp ult i32 %v5_2d78d, %v3_2d78d
  %v15_2d78d = icmp eq i32 %v5_2d78d, 0
  %v17_2d78d = trunc i32 %v5_2d78d to i8
  %v18_2d78d = call i8 @llvm.ctpop.i8(i8 %v17_2d78d)
  %v19_2d78d = urem i8 %v18_2d78d, 2
  %v20_2d78d = icmp eq i8 %v19_2d78d, 0
  store i32 %v5_2d78d, i32* %v2_2d78d, align 4
  %v1_2d794 = zext i1 %v10_2d78d to i32
  %v12_2d794 = select i1 %v20_2d78d, i32 4, i32 0
  %v14_2d794 = select i1 %v9_2d78d, i32 16, i32 0
  %v16_2d794 = select i1 %v15_2d78d, i32 64, i32 0
  %tmp = ashr i32 %v5_2d78d, 31
  %tmp2 = and i32 %tmp, 128
  %v11_2d794 = or i32 %v1_2d794, %v16_2d794
  %v13_2d794 = or i32 %v11_2d794, %tmp2
  %v15_2d794 = or i32 %v13_2d794, %v14_2d794
  %v17_2d794 = or i32 %v15_2d794, %v12_2d794
  %v20_2d794 = or i32 %v17_2d794, 2
  %v21_2d794 = load i32, i32* @eax, align 8
  %v22_2d794 = shl i32 %v20_2d794, ptrtoint (i32* @global_var_8.2379 to i32)
  %v23_2d794 = and i32 %v21_2d794, -65281
  %v24_2d794 = or i32 %v22_2d794, %v23_2d794
  store i32 %v24_2d794, i32* @eax, align 8
  %v0_2d79d = load i32, i32* @ebp, align 4
  %v1_2d79d = add i32 %v0_2d79d, -12
  %v2_2d79d = inttoptr i32 %v1_2d79d to i32*
  %v3_2d79d = load i32, i32* %v2_2d79d, align 4
  %v3_2d7a0 = icmp eq i32 %v3_2d79d, 30
  br i1 %v3_2d7a0, label %bb, label %dec_label_pc_2d7a9

bb:                                               ; preds = %dec_label_pc_2d78c
  %v1_2d7a7 = call i32 @function_2d7ae()
  br label %dec_label_pc_2d7a9

dec_label_pc_2d7a9:                               ; preds = %bb, %dec_label_pc_2d78c
  %v2_2d7a7 = phi i32 [ %v1_2d7a7, %bb ], [ %v24_2d794, %dec_label_pc_2d78c ]
  ret i32 %v2_2d7a7

; uselistorder directives
  uselistorder i32 %v3_2d78d, { 2, 0, 1 }
  uselistorder i32 15, { 2, 0, 1 }
}

define i32 @function_2d7ae() local_unnamed_addr {
dec_label_pc_2d7ae:
  %v0_2d7af = load i32, i32* @eax, align 8
  ret i32 %v0_2d7af
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSsS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d7b0:
  %v15_2d801 = icmp eq i32 %arg1, %arg2
  %v1_2d804 = icmp eq i1 %v15_2d801, false
  %v2_2d804 = zext i1 %v1_2d804 to i32
  %v4_2d804 = and i32 %arg1, -256
  %v5_2d804 = or i32 %v2_2d804, %v4_2d804
  ret i32 %v5_2d804

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2d80a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d80a:
  %v0_2d80a = load i32, i32* @ebx, align 4
  %v1_2d80a = add i32 %v0_2d80a, 1435234373
  %v2_2d80a = inttoptr i32 %v1_2d80a to i32*
  %v3_2d80a = load i32, i32* %v2_2d80a, align 4
  %v4_2d80a = udiv i32 %v3_2d80a, 2
  %v5_2d80a = shl i32 %v3_2d80a, 31
  %v6_2d80a = or i32 %v4_2d80a, %v5_2d80a
  store i32 %v6_2d80a, i32* %v2_2d80a, align 4
  %v0_2d811 = load i32, i32* @edx, align 8
  %v3_2d811 = icmp eq i32 %v0_2d811, 30
  br i1 %v3_2d811, label %bb, label %dec_label_pc_2d81a

bb:                                               ; preds = %dec_label_pc_2d80a
  %v1_2d818 = call i32 @function_2d851()
  store i32 %v1_2d818, i32* @eax, align 8
  br label %dec_label_pc_2d81a

dec_label_pc_2d81a:                               ; preds = %bb, %dec_label_pc_2d80a
  %v0_2d81a = call i32 @function_2d84c()
  ret i32 %v0_2d81a

; uselistorder directives
  uselistorder i32 %v3_2d80a, { 1, 0 }
  uselistorder i32 31, { 3, 0, 2, 4, 1, 5 }
}

define i32 @function_2d81d() local_unnamed_addr {
dec_label_pc_2d81d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d81d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d81d
}

define i32 @function_2d826(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2d826:
  %v0_2d826 = load i32, i32* @eax, align 8
  %v2_2d826 = add i32 %v0_2d826, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_2d826 = and i32 %v2_2d826, 255
  %v18_2d826 = and i32 %v0_2d826, -256
  %v19_2d826 = or i32 %v16_2d826, %v18_2d826
  ret i32 %v19_2d826

; uselistorder directives
  uselistorder i32 %v0_2d826, { 1, 0 }
}

define i32 @function_2d84c() local_unnamed_addr {
dec_label_pc_2d84c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d851() local_unnamed_addr {
dec_label_pc_2d851:
  %v0_2d856 = load i32, i32* @eax, align 8
  ret i32 %v0_2d856
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d858:
  %v3_2d885 = call i32 @unknown_5db3c(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2d885, i32* @eax, align 8
  %v1_2d894 = call i32 @function_2d89b()
  ret i32 %v1_2d894
}

define i32 @function_2d89b() local_unnamed_addr {
dec_label_pc_2d89b:
  %v0_2d89c = load i32, i32* @eax, align 8
  ret i32 %v0_2d89c
}

define i32 @_ZNSt4pairIKSsSsEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d89e:
  ret i32 %arg1
}

define i32 @function_2d8e6() local_unnamed_addr {
dec_label_pc_2d8e6:
  %v0_2d8e6 = call i32 @function_2d8ff()
  ret i32 %v0_2d8e6
}

define i32 @function_2d8e9() local_unnamed_addr {
dec_label_pc_2d8e9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d8e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d8e9
}

define i32 @function_2d8ff() local_unnamed_addr {
dec_label_pc_2d8ff:
  %v0_2d8ff = load i32, i32* @ebp, align 4
  %v1_2d8ff = add i32 %v0_2d8ff, -12
  %v2_2d8ff = inttoptr i32 %v1_2d8ff to i32*
  %v3_2d8ff = load i32, i32* %v2_2d8ff, align 4
  %v2_2d902 = xor i32 %v3_2d8ff, 30
  ret i32 %v2_2d902
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEE9constructEPS3_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d916:
  %v2_2d94a = call i32 @function_32e06(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %arg2)
  %v1_2d951 = icmp eq i32 %v2_2d94a, 0
  br i1 %v1_2d951, label %bb, label %dec_label_pc_2d955

bb:                                               ; preds = %dec_label_pc_2d916
  %v1_2d953 = call i32 @function_2d97e()
  br label %dec_label_pc_2d955

dec_label_pc_2d955:                               ; preds = %bb, %dec_label_pc_2d916
  ret i32 %arg3
}

define i32 @function_2d962(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d962:
  %v0_2d964 = call i32 @function_2d97e()
  ret i32 %v0_2d964
}

define i32 @function_2d97e() local_unnamed_addr {
dec_label_pc_2d97e:
  %v0_2d97e = load i32, i32* @ebp, align 4
  %v1_2d97e = add i32 %v0_2d97e, -28
  %v2_2d97e = inttoptr i32 %v1_2d97e to i32*
  %v3_2d97e = load i32, i32* %v2_2d97e, align 4
  %v2_2d981 = xor i32 %v3_2d97e, 30
  %v3_2d981 = icmp eq i32 %v2_2d981, 0
  store i32 %v2_2d981, i32* @eax, align 8
  br i1 %v3_2d981, label %bb, label %dec_label_pc_2d98a

bb:                                               ; preds = %dec_label_pc_2d97e
  %v1_2d988 = call i32 @function_2d98f()
  br label %dec_label_pc_2d98a

dec_label_pc_2d98a:                               ; preds = %bb, %dec_label_pc_2d97e
  %v2_2d988 = phi i32 [ %v1_2d988, %bb ], [ %v2_2d981, %dec_label_pc_2d97e ]
  ret i32 %v2_2d988
}

define i32 @function_2d98f() local_unnamed_addr {
dec_label_pc_2d98f:
  %v0_2d996 = load i32, i32* @eax, align 8
  ret i32 %v0_2d996
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d997:
  %v1_2d9b1 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_2d9b1, i32* @eax, align 8
  %v2_2d9be = call i32 @function_2d9c5(i32 %arg1)
  ret i32 %v2_2d9be
}

define i32 @function_2d9c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d9c5:
  %v0_2d9c6 = load i32, i32* @eax, align 8
  ret i32 %v0_2d9c6
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d9c8:
  %v3_2d9f5 = call i32 @unknown_5dd10(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2d9f5, i32* @eax, align 8
  %v1_2da04 = call i32 @function_2da0b()
  ret i32 %v1_2da04
}

define i32 @function_2da08(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2da08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2da0b() local_unnamed_addr {
dec_label_pc_2da0b:
  %v0_2da0c = load i32, i32* @eax, align 8
  ret i32 %v0_2da0c
}

define i32 @_ZNSt4pairIKSsSt6vectorISsSaISsEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2da0e:
  ret i32 %arg1
}

define i32 @function_2da3d() local_unnamed_addr {
dec_label_pc_2da3d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2da3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_2da3d = add i32 %v0_2da3d, 1351475269
  %v2_2da3d = inttoptr i32 %v1_2da3d to i32*
  %v3_2da3d = load i32, i32* %v2_2da3d, align 4
  %v4_2da3d = add i32 %v3_2da3d, -1
  store i32 %v4_2da3d, i32* %v2_2da3d, align 4
  %v0_2da43 = load i32, i32* %eax.global-to-local, align 8
  %v2_2da43 = add i32 %v0_2da43, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v16_2da43 = urem i32 %v2_2da43, 256
  %v18_2da43 = and i32 %v0_2da43, -256
  %v19_2da43 = or i32 %v16_2da43, %v18_2da43
  store i32 %v19_2da43, i32* %eax.global-to-local, align 8
  %v0_2da45 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2da45 = add i32 %v0_2da45, 1
  store i32 %v1_2da45, i32* @ebp, align 4
  %v9_2da48 = load i32, i32* %ecx.global-to-local, align 4
  %v12_2da48 = mul i32 %v9_2da48, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 1)
  %v13_2da48 = inttoptr i32 %v12_2da48 to i8*
  store i8 -1, i8* %v13_2da48, align 1
  %v0_2da4c = load i32, i32* %eax.global-to-local, align 8
  %v11_2da4c = and i32 %v0_2da4c, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_2da4c, i32* %eax.global-to-local, align 8
  %v1_2da51 = call i32 @unknown_42c1a(i32 %v11_2da4c)
  store i32 %v1_2da51, i32* %eax.global-to-local, align 8
  %v0_2da56 = call i32 @function_2da6f()
  store i32 %v0_2da56, i32* %eax.global-to-local, align 8
  ret i32 %v0_2da56

; uselistorder directives
  uselistorder i32 %v11_2da4c, { 1, 0 }
  uselistorder i32 %v0_2da43, { 1, 0 }
}

define i32 @function_2da59() local_unnamed_addr {
dec_label_pc_2da59:
  %eax.global-to-local = alloca i32, align 4
  %v0_2da59 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2da59
}

define i32 @function_2da5e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2da5e:
  %v0_2da5e = load i32, i32* @eax, align 8
  %v2_2da5e = add i32 %v0_2da5e, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_2da5e = and i32 %v2_2da5e, 255
  %v18_2da5e = and i32 %v0_2da5e, -256
  %v19_2da5e = or i32 %v16_2da5e, %v18_2da5e
  ret i32 %v19_2da5e

; uselistorder directives
  uselistorder i32 %v0_2da5e, { 1, 0 }
}

define i32 @function_2da6f() local_unnamed_addr {
dec_label_pc_2da6f:
  %v0_2da6f = load i32, i32* @ebp, align 4
  %v1_2da6f = add i32 %v0_2da6f, -12
  %v2_2da6f = inttoptr i32 %v1_2da6f to i32*
  %v3_2da6f = load i32, i32* %v2_2da6f, align 4
  %v2_2da72 = xor i32 %v3_2da6f, 30
  ret i32 %v2_2da72
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSt6vectorISsSaISsEEEE9constructEPS6_RKS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2da86:
  %v3_2daba = call i32 @function_32f76(i32 ptrtoint (i8** @global_var_10.2429 to i32), i32 %arg2)
  %v1_2dac1 = icmp eq i32 %v3_2daba, 0
  br i1 %v1_2dac1, label %bb, label %dec_label_pc_2dac5

bb:                                               ; preds = %dec_label_pc_2da86
  %v1_2dac3 = call i32 @function_2daee()
  br label %dec_label_pc_2dac5

dec_label_pc_2dac5:                               ; preds = %bb, %dec_label_pc_2da86
  %v3_2dacf = call i32 @unknown_5b494(i32 %v3_2daba, i32 %arg3)
  %v0_2dad4 = call i32 @function_2daee()
  ret i32 %v0_2dad4

; uselistorder directives
  uselistorder i32 ()* @function_2daee, { 1, 0 }
}

define i32 @function_2daee() local_unnamed_addr {
dec_label_pc_2daee:
  %v0_2daee = load i32, i32* @ebp, align 4
  %v1_2daee = add i32 %v0_2daee, -28
  %v2_2daee = inttoptr i32 %v1_2daee to i32*
  %v3_2daee = load i32, i32* %v2_2daee, align 4
  %v2_2daf1 = xor i32 %v3_2daee, 30
  ret i32 %v2_2daf1
}

define i32 @function_2daf9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2daf9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dafe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dafe:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2dafe = load i32, i32* %ebx.global-to-local, align 4
  %v1_2dafe = add i32 %v0_2dafe, 1583037636
  %v2_2dafe = inttoptr i32 %v1_2dafe to i32*
  %v3_2dafe = load i32, i32* %v2_2dafe, align 4
  %v4_2dafe = add i32 %v3_2dafe, 1
  store i32 %v4_2dafe, i32* %v2_2dafe, align 4
  %v0_2db06 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2db06
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPcSsEEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2db07:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2db2e = ptrtoint i32* %stack_var_-32 to i32
  %v2_2db32 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2db38 = call i32 @unknown_47f61(i32 %v2_2db32, i32 %v4_2db2e)
  store i32 %v2_2db38, i32* @eax, align 8
  %v1_2db47 = call i32 @function_2db4e()
  ret i32 %v1_2db47
}

define i32 @function_2db4e() local_unnamed_addr {
dec_label_pc_2db4e:
  %v0_2db4f = load i32, i32* @eax, align 8
  ret i32 %v0_2db4f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISsEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2db50:
  %v1_2db79 = call i32 @unknown_5def6(i32 %arg1)
  %v10_2db7e = icmp ult i32 %v1_2db79, %arg2
  %v1_2db81 = zext i1 %v10_2db7e to i32
  %v3_2db81 = and i32 %v1_2db79, -256
  %v4_2db81 = or i32 %v1_2db81, %v3_2db81
  %v5_2db84 = icmp eq i1 %v10_2db7e, false
  br i1 %v5_2db84, label %bb, label %dec_label_pc_2db88

bb:                                               ; preds = %dec_label_pc_2db50
  %v1_2db86 = call i32 @function_2db8d()
  br label %dec_label_pc_2db88

dec_label_pc_2db88:                               ; preds = %bb, %dec_label_pc_2db50
  %v2_2db86 = phi i32 [ %v1_2db86, %bb ], [ %v4_2db81, %dec_label_pc_2db50 ]
  ret i32 %v2_2db86

; uselistorder directives
  uselistorder i1 %v10_2db7e, { 1, 0 }
}

define i32 @function_2db8d() local_unnamed_addr {
dec_label_pc_2db8d:
  %v0_2db8d = load i32, i32* @ebp, align 4
  %v1_2db8d = add i32 %v0_2db8d, -32
  %v2_2db8d = inttoptr i32 %v1_2db8d to i32*
  %v3_2db8d = load i32, i32* %v2_2db8d, align 4
  %v2_2db97 = mul i32 %v3_2db8d, 20
  ret i32 %v2_2db97
}

define i32 @function_2dbb2() local_unnamed_addr {
dec_label_pc_2dbb2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2dbb2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2dbb2 = add i32 %v0_2dbb2, -1
  store i32 %v1_2dbb2, i32* %ecx.global-to-local, align 4
  %v0_2dbb4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dbb4
}

define i32 @_ZN9__gnu_cxx13new_allocatorI8CNetAddrEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbb6:
  store i32 0, i32* @eax, align 8
  %v2_2dbd7 = call i32 @function_2dbde(i32 %arg1)
  ret i32 %v2_2dbd7
}

define i32 @function_2dbde(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbde:
  %v0_2dbdf = load i32, i32* @eax, align 8
  ret i32 %v0_2dbdf
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI8CNetAddrEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dbe0:
  %v1_2dc09 = call i32 @unknown_5dfb6(i32 %arg1)
  %v10_2dc0e = icmp ult i32 %v1_2dc09, %arg2
  %v1_2dc11 = zext i1 %v10_2dc0e to i32
  %v3_2dc11 = and i32 %v1_2dc09, -256
  %v4_2dc11 = or i32 %v1_2dc11, %v3_2dc11
  %v5_2dc14 = icmp eq i1 %v10_2dc0e, false
  br i1 %v5_2dc14, label %bb, label %dec_label_pc_2dc18

bb:                                               ; preds = %dec_label_pc_2dbe0
  %v1_2dc16 = call i32 @function_2dc1d()
  br label %dec_label_pc_2dc18

dec_label_pc_2dc18:                               ; preds = %bb, %dec_label_pc_2dbe0
  %v2_2dc16 = phi i32 [ %v1_2dc16, %bb ], [ %v4_2dc11, %dec_label_pc_2dbe0 ]
  ret i32 %v2_2dc16

; uselistorder directives
  uselistorder i1 %v10_2dc0e, { 1, 0 }
}

define i32 @function_2dc1d() local_unnamed_addr {
dec_label_pc_2dc1d:
  %v0_2dc1d = load i32, i32* @ebp, align 4
  %v1_2dc1d = add i32 %v0_2dc1d, -32
  %v2_2dc1d = inttoptr i32 %v1_2dc1d to i32*
  %v3_2dc1d = load i32, i32* %v2_2dc1d, align 4
  %v2_2dc20 = mul i32 %v3_2dc1d, 32
  ret i32 %v2_2dc20
}

define i32 @function_2dc3b() local_unnamed_addr {
dec_label_pc_2dc3b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2dc3b = load i32, i32* %ecx.global-to-local, align 4
  %v1_2dc3b = add i32 %v0_2dc3b, -1
  store i32 %v1_2dc3b, i32* %ecx.global-to-local, align 4
  %v0_2dc3d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dc3d
}

define i32 @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S8_RKS4_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_2dc3e:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg3 to i32
  %v1_2dc64 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2dc64 = inttoptr i32 %v1_2dc64 to i32*
  %v3_2dc64 = load i32, i32* %v2_2dc64, align 4
  store i32 %v3_2dc64, i32* %edx.global-to-local, align 8
  %v2_2dc67 = load i32, i32* %arg3, align 4
  %v15_2dc86109 = icmp eq i32 %arg1, %arg2
  %v1_2dc89110 = icmp eq i1 %v15_2dc86109, false
  %v5_2dc8c114 = icmp eq i1 %v1_2dc89110, false
  %v1_2dc8e115 = icmp eq i1 %v5_2dc8c114, false
  br i1 %v1_2dc8e115, label %dec_label_pc_2dc71, label %dec_label_pc_2dc90

dec_label_pc_2dc71:                               ; preds = %dec_label_pc_2dc3e, %dec_label_pc_2dc71
  %stack_var_-32.0116 = phi i32 [ %v4_2dc7f, %dec_label_pc_2dc71 ], [ %arg1, %dec_label_pc_2dc3e ]
  store i32 %stack_var_-32.0116, i32* %ecx.global-to-local, align 4
  store i32 %v3_2dc64, i32* %edx.global-to-local, align 8
  %v2_2dc7a = inttoptr i32 %stack_var_-32.0116 to i32*
  store i32 %v2_2dc67, i32* %v2_2dc7a, align 4
  %v0_2dc7c = load i32, i32* %edx.global-to-local, align 8
  %v1_2dc7c = load i32, i32* %ecx.global-to-local, align 4
  %v2_2dc7c = add i32 %v1_2dc7c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2dc7c = inttoptr i32 %v2_2dc7c to i32*
  store i32 %v0_2dc7c, i32* %v3_2dc7c, align 4
  %v4_2dc7f = add i32 %stack_var_-32.0116, ptrtoint (i32* @global_var_8.2379 to i32)
  %v15_2dc86 = icmp eq i32 %v4_2dc7f, %arg2
  %v1_2dc89 = icmp eq i1 %v15_2dc86, false
  %v5_2dc8c = icmp eq i1 %v1_2dc89, false
  %v1_2dc8e = icmp eq i1 %v5_2dc8c, false
  br i1 %v1_2dc8e, label %dec_label_pc_2dc71, label %dec_label_pc_2dc90

dec_label_pc_2dc90:                               ; preds = %dec_label_pc_2dc71, %dec_label_pc_2dc3e
  store i32 0, i32* @eax, align 8
  %v1_2dc9a = call i32 @function_2dca1()
  ret i32 %v1_2dc9a

; uselistorder directives
  uselistorder i32 %v4_2dc7f, { 1, 0 }
  uselistorder i32 %stack_var_-32.0116, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2dc71, { 1, 0 }
}

define i32 @function_2dca1() local_unnamed_addr {
dec_label_pc_2dca1:
  %v0_2dca2 = load i32, i32* @eax, align 8
  ret i32 %v0_2dca2
}

define i32 @_ZSt20uninitialized_fill_nIPxjxEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dca3:
  %v3_2dcda = call i32 @unknown_5e0a8(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 0
}

define i32 @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dcf2:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v4_2dd12 = ptrtoint i32* %stack_var_-48 to i32
  %v2_2dd16 = ptrtoint i32* %stack_var_-52 to i32
  %v2_2dd1c = call i32 @unknown_4f37b(i32 %v2_2dd16, i32 %v4_2dd12)
  %v1_2dd21 = add i32 %v2_2dd1c, -1
  %tmp111 = sub i32 0, %v2_2dd1c
  %v8_2dd21 = and i32 %v2_2dd1c, %tmp111
  %v9_2dd21 = icmp slt i32 %v8_2dd21, 0
  %v10_2dd21 = icmp eq i32 %v1_2dd21, 0
  %v11_2dd21 = icmp slt i32 %v1_2dd21, 0
  %v3_2dd24 = icmp ne i1 %v11_2dd21, %v9_2dd21
  %v4_2dd24 = or i1 %v10_2dd21, %v3_2dd24
  %v5_2dd27 = icmp eq i1 %v4_2dd24, false
  %v1_2dd29 = icmp eq i1 %v5_2dd27, false
  br i1 %v1_2dd29, label %dec_label_pc_2ddc5, label %dec_label_pc_2dd2f

dec_label_pc_2dd2f:                               ; preds = %dec_label_pc_2dcf2
  %v2_2dd3c = call i32 @unknown_4f37b(i32 %v2_2dd16, i32 %v4_2dd12)
  %v1_2dd47 = add i32 %v2_2dd3c, -2
  %tmp114 = icmp slt i32 %v1_2dd47, 0
  %v2_2dd4c = zext i1 %tmp114 to i32
  store i32 %v2_2dd4c, i32* %edx.global-to-local, align 8
  %v2_2dd4f = add i32 %v2_2dd4c, %v1_2dd47
  %v2_2dd51 = sdiv i32 %v2_2dd4f, 2
  %v2_2dd56 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2dd59 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_2dd56

dec_label_pc_2dd56:                               ; preds = %dec_label_pc_2ddb6, %dec_label_pc_2dd2f
  %storemerge = phi i32 [ %v1_2ddb9, %dec_label_pc_2ddb6 ], [ %v2_2dd51, %dec_label_pc_2dd2f ]
  store i32 %storemerge, i32* %stack_var_-28, align 4
  %v1_2dd5c = load i32, i32* @esp, align 4
  %v2_2dd5c = add i32 %v1_2dd5c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2dd5c = inttoptr i32 %v2_2dd5c to i32*
  store i32 %v2_2dd59, i32* %v3_2dd5c, align 4
  store i32 %v4_2dd12, i32* %edx.global-to-local, align 8
  %v1_2dd63 = load i32, i32* @esp, align 4
  %v2_2dd63 = add i32 %v1_2dd63, 4
  %v3_2dd63 = inttoptr i32 %v2_2dd63 to i32*
  store i32 %v4_2dd12, i32* %v3_2dd63, align 4
  %v1_2dd67 = load i32, i32* @esp, align 4
  %v2_2dd67 = inttoptr i32 %v1_2dd67 to i32*
  store i32 %v2_2dd56, i32* %v2_2dd67, align 4
  %v0_2dd6a = call i32 @unknown_4f102()
  %v0_2dd6f = load i32, i32* @esp, align 4
  %v1_2dd6f = sub i32 %v0_2dd6f, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2dd75 = inttoptr i32 %v1_2dd6f to i32*
  store i32 %v2_2dd56, i32* %v2_2dd75, align 4
  %v0_2dd78 = call i32 @unknown_4a21e()
  %v1_2dd7d = add i32 %v0_2dd78, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2dd7d = inttoptr i32 %v1_2dd7d to i32*
  %v3_2dd7d = load i32, i32* %v2_2dd7d, align 4
  store i32 %v3_2dd7d, i32* %edx.global-to-local, align 8
  %v1_2dd80 = inttoptr i32 %v0_2dd78 to i32*
  %v2_2dd80 = load i32, i32* %v1_2dd80, align 4
  %v3_2dd88 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_2dd88, i32* %ecx.global-to-local, align 4
  store i32 %v3_2dd7d, i32* %edx.global-to-local, align 8
  %v1_2dd91 = load i32, i32* @esp, align 4
  %v2_2dd91 = add i32 %v1_2dd91, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2dd91 = inttoptr i32 %v2_2dd91 to i32*
  store i32 %v2_2dd80, i32* %v3_2dd91, align 4
  %v0_2dd95 = load i32, i32* %edx.global-to-local, align 8
  %v1_2dd95 = load i32, i32* @esp, align 4
  %v2_2dd95 = add i32 %v1_2dd95, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_2dd95 = inttoptr i32 %v2_2dd95 to i32*
  store i32 %v0_2dd95, i32* %v3_2dd95, align 4
  %v1_2dd9c = load i32, i32* @esp, align 4
  %v2_2dd9c = add i32 %v1_2dd9c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_2dd9c = inttoptr i32 %v2_2dd9c to i32*
  store i32 %v2_2dd3c, i32* %v3_2dd9c, align 4
  %v0_2dda0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2dda0 = load i32, i32* @esp, align 4
  %v2_2dda0 = add i32 %v1_2dda0, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2dda0 = inttoptr i32 %v2_2dda0 to i32*
  store i32 %v0_2dda0, i32* %v3_2dda0, align 4
  %v3_2dda4 = load i32, i32* %stack_var_-48, align 4
  %v1_2dda7 = load i32, i32* @esp, align 4
  %v2_2dda7 = inttoptr i32 %v1_2dda7 to i32*
  store i32 %v3_2dda4, i32* %v2_2dda7, align 4
  %v2_2ddaa = call i32 @unknown_5e146(i32 %v2_2dd80, i32 %v3_2dd7d)
  %v3_2ddaf = load i32, i32* %stack_var_-28, align 4
  %v1_2ddb2 = icmp eq i32 %v3_2ddaf, 0
  br i1 %v1_2ddb2, label %dec_label_pc_2ddc5, label %dec_label_pc_2ddb6

dec_label_pc_2ddb6:                               ; preds = %dec_label_pc_2dd56
  %v1_2ddb9 = add i32 %v3_2ddaf, -1
  br label %dec_label_pc_2dd56

dec_label_pc_2ddc5:                               ; preds = %dec_label_pc_2dd56, %dec_label_pc_2dcf2
  store i32 0, i32* @eax, align 8
  %v1_2ddcf = call i32 @function_2ddd6()
  ret i32 %v1_2ddcf

; uselistorder directives
  uselistorder i32 %v2_2dd4c, { 1, 0 }
  uselistorder i32 %v1_2dd47, { 1, 0 }
  uselistorder i32 %v1_2dd21, { 1, 0 }
  uselistorder i32 %v2_2dd1c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @unknown_4f37b, { 1, 0 }
}

define i32 @function_2ddd6() local_unnamed_addr {
dec_label_pc_2ddd6:
  %v0_2ddd7 = load i32, i32* @eax, align 8
  ret i32 %v0_2ddd7
}

define i32 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ddd8:
  %v1_2ddfc = call i32 @unknown_4f922(i32 %arg1)
  ret i32 %arg2
}

define i32 @function_2de08(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de08:
  %v0_2de08 = load i32, i32* @eax, align 8
  %v1_2de08 = trunc i32 %v0_2de08 to i8
  %v2_2de08 = and i8 %v1_2de08, -24
  %v4_2de0a = add i8 %v2_2de08, 27
  %v25_2de0a = zext i8 %v4_2de0a to i32
  %v27_2de0a = and i32 %v0_2de08, -256
  %v28_2de0a = or i32 %v25_2de0a, %v27_2de0a
  %v3_2de0c = inttoptr i32 %v28_2de0a to i8*
  %v4_2de0c = load i8, i8* %v3_2de0c, align 1
  %v5_2de0c = add i8 %v4_2de0c, %v4_2de0a
  %v20_2de0c = zext i8 %v5_2de0c to i32
  %v23_2de0c = or i32 %v20_2de0c, %v27_2de0a
  %v1_2de0e = inttoptr i32 %v23_2de0c to i32*
  %v2_2de0e = load i32, i32* %v1_2de0e, align 4
  %v0_2de10 = load i32, i32* @ebx, align 4
  %v7_2de10 = icmp ult i32 %v0_2de10, %v2_2de0e
  %v1_2de12 = zext i1 %v7_2de10 to i32
  %v3_2de12 = and i32 %v2_2de0e, -256
  %v4_2de12 = or i32 %v1_2de12, %v3_2de12
  store i32 %v4_2de12, i32* @eax, align 8
  %v0_2de15 = load i32, i32* @ebp, align 4
  %v1_2de15 = add i32 %v0_2de15, -12
  %v2_2de15 = inttoptr i32 %v1_2de15 to i32*
  %v3_2de15 = load i32, i32* %v2_2de15, align 4
  %v3_2de18 = icmp eq i32 %v3_2de15, 30
  br i1 %v3_2de18, label %bb, label %dec_label_pc_2de21

bb:                                               ; preds = %dec_label_pc_2de08
  %v1_2de1f = call i32 @function_2de26()
  br label %dec_label_pc_2de21

dec_label_pc_2de21:                               ; preds = %bb, %dec_label_pc_2de08
  %v2_2de1f = phi i32 [ %v1_2de1f, %bb ], [ %v4_2de12, %dec_label_pc_2de08 ]
  ret i32 %v2_2de1f
}

define i32 @function_2de26() local_unnamed_addr {
dec_label_pc_2de26:
  %v0_2de2b = load i32, i32* @eax, align 8
  ret i32 %v0_2de2b
}

define i32 @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2de2c:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v2_2de50 = ptrtoint i32* %stack_var_-40 to i32
  %v1_2de56 = call i32 @unknown_4a358(i32 %v2_2de50)
  %v1_2de5b = add i32 %v1_2de56, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2de5b = inttoptr i32 %v1_2de5b to i32*
  %v3_2de5b = load i32, i32* %v2_2de5b, align 4
  store i32 %v3_2de5b, i32* %edx.global-to-local, align 8
  %v1_2de6c = call i32 @unknown_4a358(i32 %v2_2de50)
  store i32 %v1_2de6c, i32* %ebx.global-to-local, align 4
  %v2_2de73 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2de79 = call i32 @unknown_4a358(i32 %v2_2de73)
  %v1_2de7e = add i32 %v1_2de79, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2de7e = inttoptr i32 %v1_2de7e to i32*
  %v3_2de7e = load i32, i32* %v2_2de7e, align 4
  store i32 %v3_2de7e, i32* %edx.global-to-local, align 8
  %v1_2de81 = inttoptr i32 %v1_2de79 to i32*
  %v2_2de81 = load i32, i32* %v1_2de81, align 4
  %v1_2de83 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2de83 = inttoptr i32 %v1_2de83 to i32*
  store i32 %v2_2de81, i32* %v2_2de83, align 4
  %v0_2de85 = load i32, i32* %edx.global-to-local, align 8
  %v1_2de85 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2de85 = add i32 %v1_2de85, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2de85 = inttoptr i32 %v2_2de85 to i32*
  store i32 %v0_2de85, i32* %v3_2de85, align 4
  %v2_2de8f = ptrtoint i32* %stack_var_-36 to i32
  %v2_2de95 = call i32 @unknown_4f4b5(i32 %v2_2de8f, i32 %v2_2de73)
  ret i32 %v2_2de95

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4a358, { 2, 1, 0 }
}

define i32 @function_2de9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de9a:
  %v0_2de9c = load i32, i32* @ebp, align 4
  %v1_2de9c = add i32 %v0_2de9c, -24
  %v2_2de9c = inttoptr i32 %v1_2de9c to i32*
  %v3_2de9c = load i32, i32* %v2_2de9c, align 4
  ret i32 %v3_2de9c
}

define i32 @function_2deb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2deb4:
  %v2_2deb4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2deb4 = load i32, i32* @eax, align 8
  %v4_2deb4 = trunc i32 %v3_2deb4 to i8
  %v5_2deb4 = add i8 %v4_2deb4, %v2_2deb4
  %v21_2deb4 = inttoptr i32 %v3_2deb4 to i8*
  store i8 %v5_2deb4, i8* %v21_2deb4, align 1
  %v0_2deb6 = load i32, i32* @ebp, align 4
  %v1_2deb6 = add i32 %v0_2deb6, -28
  %v2_2deb6 = inttoptr i32 %v1_2deb6 to i32*
  %v3_2deb6 = load i32, i32* %v2_2deb6, align 4
  %v1_2debc = call i32 @unknown_5e280(i32 %v3_2deb6)
  %v0_2dec1 = load i32, i32* @ebp, align 4
  %v1_2dec1 = add i32 %v0_2dec1, -12
  %v2_2dec1 = inttoptr i32 %v1_2dec1 to i32*
  %v3_2dec1 = load i32, i32* %v2_2dec1, align 4
  %v2_2dec4 = xor i32 %v3_2dec1, 30
  %v3_2dec4 = icmp eq i32 %v2_2dec4, 0
  store i32 %v2_2dec4, i32* @eax, align 8
  br i1 %v3_2dec4, label %bb, label %dec_label_pc_2decd

bb:                                               ; preds = %dec_label_pc_2deb4
  %v1_2decb = call i32 @function_2ded2()
  br label %dec_label_pc_2decd

dec_label_pc_2decd:                               ; preds = %bb, %dec_label_pc_2deb4
  %v2_2decb = phi i32 [ %v1_2decb, %bb ], [ %v2_2dec4, %dec_label_pc_2deb4 ]
  ret i32 %v2_2decb
}

define i32 @function_2ded2() local_unnamed_addr {
dec_label_pc_2ded2:
  %v0_2ded7 = load i32, i32* @eax, align 8
  ret i32 %v0_2ded7
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ded8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2def2 = load i32, i32* %arg1, align 4
  %v1_2def4 = add i32 %v2_2def2, -8
  store i32 %v1_2def4, i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_2defe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2defe:
  %v0_2df02 = load i32, i32* @edx, align 8
  %v3_2df02 = icmp eq i32 %v0_2df02, 30
  br i1 %v3_2df02, label %bb, label %dec_label_pc_2defe.dec_label_pc_2df0b_crit_edge

dec_label_pc_2defe.dec_label_pc_2df0b_crit_edge:  ; preds = %dec_label_pc_2defe
  %v2_2df09.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2df0b

bb:                                               ; preds = %dec_label_pc_2defe
  %v1_2df09 = call i32 @function_2df10()
  br label %dec_label_pc_2df0b

dec_label_pc_2df0b:                               ; preds = %dec_label_pc_2defe.dec_label_pc_2df0b_crit_edge, %bb
  %v2_2df09 = phi i32 [ %v2_2df09.pre, %dec_label_pc_2defe.dec_label_pc_2df0b_crit_edge ], [ %v1_2df09, %bb ]
  ret i32 %v2_2df09

; uselistorder directives
  uselistorder label %dec_label_pc_2df0b, { 1, 0 }
}

define i32 @function_2df10() local_unnamed_addr {
dec_label_pc_2df10:
  %v0_2df11 = load i32, i32* @eax, align 8
  ret i32 %v0_2df11
}

define i32 @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df12:
  %v2_2df3c = call i32 @unknown_5e594(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_2df4b = call i32 @function_2df52()
  ret i32 %v1_2df4b
}

define i32 @function_2df52() local_unnamed_addr {
dec_label_pc_2df52:
  %v0_2df53 = load i32, i32* @eax, align 8
  ret i32 %v0_2df53
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2df54:
  %stack_var_-20 = alloca i32, align 4
  %v1_2df85 = call i32 @unknown_5426e(i32 %arg4)
  %v1_2df92 = call i32 @unknown_5426e(i32 %arg3)
  %v1_2df9f = call i32 @unknown_5426e(i32 %arg2)
  %v3_2dfaf = call i32 @unknown_5b604(i32 %v1_2df9f, i32 %v1_2df92, i32 %v1_2df85)
  store i32 %v3_2dfaf, i32* %stack_var_-20, align 4
  %v2_2dfb7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2dfc4 = call i32 @unknown_4f32a(i32 %arg1, i32 %v2_2dfb7)
  store i32 %arg1, i32* @eax, align 8
  %v1_2dfd6 = call i32 @function_2dfdd()
  ret i32 %v1_2dfd6

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5426e, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2dfdd() local_unnamed_addr {
dec_label_pc_2dfdd:
  %v0_2dfe3 = load i32, i32* @eax, align 8
  ret i32 %v0_2dfe3
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfe6:
  ret i32 %arg1
}

define i32 @function_2dff5() local_unnamed_addr {
dec_label_pc_2dff5:
  %eax.global-to-local = alloca i32, align 4
  %v15_2dff5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_2dff5
}

define i32 @function_2e017() local_unnamed_addr {
dec_label_pc_2e017:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e017 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e017
}

define i32 @function_2e050(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e050:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e050 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e050 = add i32 %v0_2e050, 1583034564
  %v2_2e050 = inttoptr i32 %v1_2e050 to i32*
  %v3_2e050 = load i32, i32* %v2_2e050, align 4
  %v4_2e050 = add i32 %v3_2e050, 1
  store i32 %v4_2e050, i32* %v2_2e050, align 4
  %v0_2e057 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e057

; uselistorder directives
  uselistorder i32 1583034564, { 0, 2, 1 }
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11lower_boundERSQ_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e058:
  ret i32 %arg1
}

define i32 @function_2e066(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e066:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2e066 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2e066 = or i32 %v0_2e066, 137
  store i32 %v11_2e066, i32* %eax.global-to-local, align 8
  %v0_2e068 = load i32, i32* @ebp, align 4
  %v0_2e069 = load i32, i32* @ecx, align 4
  %v1_2e069 = add i32 %v0_2e069, 255
  %v1_2e06b = add i32 %v0_2e068, 2
  store i32 %v1_2e06b, i32* @ebp, align 4
  %v1_2e06c = add i32 %v0_2e069, -1587159996
  %v2_2e06c = inttoptr i32 %v1_2e06c to i8*
  %v3_2e06c = load i8, i8* %v2_2e06c, align 1
  %v5_2e06c = trunc i32 %v1_2e069 to i8
  %v8_2e06c = add i8 %v3_2e06c, %v5_2e06c
  %v28_2e06c = icmp ult i8 %v8_2e06c, %v3_2e06c
  store i1 %v28_2e06c, i1* %cf.global-to-local, align 1
  store i8 %v8_2e06c, i8* %v2_2e06c, align 1
  %v0_2e072 = load i32, i32* %eax.global-to-local, align 8
  %v1_2e072 = trunc i32 %v0_2e072 to i8
  %v2_2e072 = load i1, i1* %cf.global-to-local, align 1
  %v3_2e072 = zext i1 %v2_2e072 to i8
  %v4_2e072 = add i8 %v3_2e072, %v1_2e072
  %v19_2e072 = icmp ule i8 %v4_2e072, %v1_2e072
  %v21_2e072 = icmp eq i1 %v2_2e072, %v19_2e072
  store i1 %v21_2e072, i1* %cf.global-to-local, align 1
  %v22_2e072 = zext i8 %v4_2e072 to i32
  %v24_2e072 = and i32 %v0_2e072, -256
  %v25_2e072 = or i32 %v22_2e072, %v24_2e072
  store i32 %v25_2e072, i32* %eax.global-to-local, align 8
  %v1_2e074 = inttoptr i32 %v25_2e072 to i8*
  %v2_2e074 = load i8, i8* %v1_2e074, align 1
  %v5_2e074 = add i8 %v2_2e074, %v4_2e072
  store i8 %v5_2e074, i8* %v1_2e074, align 1
  %v0_2e076 = load i32, i32* %eax.global-to-local, align 8
  %v1_2e076 = load i32, i32* @ebp, align 4
  %v2_2e076 = add i32 %v1_2e076, -12
  %v3_2e076 = inttoptr i32 %v2_2e076 to i32*
  store i32 %v0_2e076, i32* %v3_2e076, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2e07b = load i32, i32* @ebp, align 4
  %v1_2e07b = add i32 %v0_2e07b, -32
  %v2_2e07b = inttoptr i32 %v1_2e07b to i32*
  %v3_2e07b = load i32, i32* %v2_2e07b, align 4
  %v1_2e07e = add i32 %v0_2e07b, -28
  %v2_2e07e = inttoptr i32 %v1_2e07e to i32*
  %v3_2e07e = load i32, i32* %v2_2e07e, align 4
  store i32 %v3_2e07e, i32* %eax.global-to-local, align 8
  %v1_2e081 = add i32 %v0_2e07b, -36
  %v2_2e081 = inttoptr i32 %v1_2e081 to i32*
  %v3_2e081 = load i32, i32* %v2_2e081, align 4
  %v3_2e08f = call i32 @unknown_5e734(i32 %v3_2e07e, i32 %v3_2e07b, i32 %v3_2e081)
  store i32 %v3_2e08f, i32* %eax.global-to-local, align 8
  %v0_2e097 = load i32, i32* @ebp, align 4
  %v1_2e097 = add i32 %v0_2e097, -28
  %v2_2e097 = inttoptr i32 %v1_2e097 to i32*
  %v3_2e097 = load i32, i32* %v2_2e097, align 4
  store i32 %v3_2e097, i32* @eax, align 8
  %v1_2e09a = add i32 %v0_2e097, -12
  %v2_2e09a = inttoptr i32 %v1_2e09a to i32*
  %v3_2e09a = load i32, i32* %v2_2e09a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2e09d = icmp eq i32 %v3_2e09a, 30
  br i1 %v3_2e09d, label %bb, label %dec_label_pc_2e0a6

bb:                                               ; preds = %dec_label_pc_2e066
  %v1_2e0a4 = call i32 @function_2e0ab()
  store i32 %v1_2e0a4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2e0a6

dec_label_pc_2e0a6:                               ; preds = %bb, %dec_label_pc_2e066
  %v3_2e0a4 = phi i32 [ %v1_2e0a4, %bb ], [ %v3_2e097, %dec_label_pc_2e066 ]
  ret i32 %v3_2e0a4

; uselistorder directives
  uselistorder i8 %v4_2e072, { 0, 2, 1 }
  uselistorder i8 %v1_2e072, { 1, 0 }
  uselistorder i8 %v3_2e06c, { 1, 0 }
}

define i32 @function_2e0ab() local_unnamed_addr {
dec_label_pc_2e0ab:
  %v0_2e0ac = load i32, i32* @eax, align 8
  ret i32 %v0_2e0ac
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e0b0:
  %v2_2e0da = call i32 @unknown_5e808(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2e0ef = call i32 @function_2e0f6()
  ret i32 %v1_2e0ef

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e0f6() local_unnamed_addr {
dec_label_pc_2e0f6:
  %v0_2e0f7 = load i32, i32* @eax, align 8
  ret i32 %v0_2e0f7
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e0fa:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2e11a = load i32, i32* %arg1, align 4
  %v1_2e11f = inttoptr i32 %arg2 to i32*
  %v2_2e11f = load i32, i32* %v1_2e11f, align 4
  %v12_2e121 = icmp eq i32 %v2_2e11a, %v2_2e11f
  %v1_2e123 = icmp eq i1 %v12_2e121, false
  %v2_2e123 = zext i1 %v1_2e123 to i32
  %v4_2e123 = and i32 %v2_2e11f, -256
  %v5_2e123 = or i32 %v2_2e123, %v4_2e123
  store i32 %v5_2e123, i32* @eax, align 8
  %v3_2e130 = call i32 @function_2e137(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2e130

; uselistorder directives
  uselistorder i32 %v2_2e11f, { 1, 0 }
}

define i32 @function_2e137(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e137:
  %v0_2e138 = load i32, i32* @eax, align 8
  ret i32 %v0_2e138
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e13a:
  %v1_2e160 = add i32 %arg1, 32
  %v3_2e174 = call i32 @unknown_5d450(i32 %v1_2e160, i32 %arg2, i32 %arg3)
  %v4_2e179 = trunc i32 %v3_2e174 to i8
  %v5_2e179 = icmp eq i8 %v4_2e179, 0
  br i1 %v5_2e179, label %dec_label_pc_2e184, label %dec_label_pc_2e17d

dec_label_pc_2e17d:                               ; preds = %dec_label_pc_2e13a
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_2e1b0

dec_label_pc_2e184:                               ; preds = %dec_label_pc_2e13a
  %v3_2e19b = call i32 @unknown_5d450(i32 %v1_2e160, i32 %arg3, i32 %arg2)
  %v4_2e1a0 = trunc i32 %v3_2e19b to i8
  %v5_2e1a0 = icmp eq i8 %v4_2e1a0, 0
  br i1 %v5_2e1a0, label %dec_label_pc_2e1ab, label %dec_label_pc_2e1a4

dec_label_pc_2e1a4:                               ; preds = %dec_label_pc_2e184
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_2e1b0

dec_label_pc_2e1ab:                               ; preds = %dec_label_pc_2e184
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_2e1b0

dec_label_pc_2e1b0:                               ; preds = %dec_label_pc_2e1ab, %dec_label_pc_2e1a4, %dec_label_pc_2e17d
  %v1_2e1ba = call i32 @function_2e1c1()
  ret i32 %v1_2e1ba

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_5d450, { 1, 0 }
}

define i32 @function_2e1c1() local_unnamed_addr {
dec_label_pc_2e1c1:
  %v0_2e1c2 = load i32, i32* @eax, align 8
  ret i32 %v0_2e1c2
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e1c4:
  %v2_2e1de = load i32, i32* %arg1, align 4
  %v1_2e1e0 = add i32 %v2_2e1de, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2e1e6 = call i32 @unknown_5e966(i32 %v1_2e1e0)
  store i32 %v2_2e1e6, i32* @eax, align 8
  %v1_2e1f5 = call i32 @function_2e1fc()
  ret i32 %v1_2e1f5
}

define i32 @function_2e1fc() local_unnamed_addr {
dec_label_pc_2e1fc:
  %v0_2e1fd = load i32, i32* @eax, align 8
  ret i32 %v0_2e1fd
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e1fe:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_2e224 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2e227 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2e238 = call i32 @unknown_5e9ce(i32 %v2_2e227, i32 %v1_2e224, i32 %arg3)
  %v2_2e247 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2e24d = call i32 @unknown_5ea26(i32 %v2_2e247, i32 %v2_2e227)
  %v3_2e266 = call i32 @unknown_5ea60(i32 %arg1, i32 %arg2, i32 %v2_2e247)
  store i32 %arg1, i32* @eax, align 8
  %v1_2e27b = call i32 @function_2e282()
  ret i32 %v1_2e27b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e282() local_unnamed_addr {
dec_label_pc_2e282:
  %v0_2e283 = load i32, i32* @eax, align 8
  ret i32 %v0_2e283
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e286:
  %v1_2e2a3 = call i32 @unknown_5ad22(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2e2b2 = call i32 @function_2e2b9()
  ret i32 %v1_2e2b2
}

define i32 @function_2e2b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e2b9() local_unnamed_addr {
dec_label_pc_2e2b9:
  %v0_2e2ba = load i32, i32* @eax, align 8
  ret i32 %v0_2e2ba
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEixERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e2bc:
  ret i32 %arg2
}

define i32 @function_2e2d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e2d0:
  %v1_2e2d5 = load i32, i32* @ebp, align 4
  %v2_2e2d5 = add i32 %v1_2e2d5, -12
  %v3_2e2d5 = inttoptr i32 %v2_2e2d5 to i32*
  store i32 30, i32* %v3_2e2d5, align 4
  %v0_2e2da = load i32, i32* @ebp, align 4
  %v1_2e2da = add i32 %v0_2e2da, -44
  ret i32 %v1_2e2da
}

define i32 @function_2e2ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2ec:
  %v0_2e2ee = call i32 @unknown_5c314()
  %v0_2e2f6 = load i32, i32* @ebp, align 4
  %v1_2e2f6 = add i32 %v0_2e2f6, -40
  %v1_2e2f9 = add i32 %v0_2e2f6, -60
  %v2_2e2f9 = inttoptr i32 %v1_2e2f9 to i32*
  %v3_2e2f9 = load i32, i32* %v2_2e2f9, align 4
  %v2_2e303 = call i32 @unknown_5c36c(i32 %v1_2e2f6, i32 %v3_2e2f9)
  %v0_2e30b = load i32, i32* @ebp, align 4
  %v1_2e30b = add i32 %v0_2e30b, -40
  %v1_2e312 = add i32 %v0_2e30b, -44
  %v2_2e318 = call i32 @unknown_5ec58(i32 %v1_2e312, i32 %v1_2e30b)
  %v0_2e321 = load i32, i32* @ebp, align 4
  %v1_2e321 = add i32 %v0_2e321, -44
  %v1_2e327 = call i32 @unknown_5ec26(i32 %v1_2e321)
  %v0_2e32e = load i32, i32* @ebp, align 4
  %v1_2e32e = add i32 %v0_2e32e, -65
  %v1_2e331 = add i32 %v0_2e32e, -60
  %v2_2e331 = inttoptr i32 %v1_2e331 to i32*
  %v3_2e331 = load i32, i32* %v2_2e331, align 4
  %v2_2e33b = call i32 @unknown_5ebdc(i32 %v1_2e32e, i32 %v3_2e331)
  %v0_2e347 = load i32, i32* @ebp, align 4
  %v1_2e347 = add i32 %v0_2e347, -64
  %v2_2e347 = inttoptr i32 %v1_2e347 to i32*
  %v3_2e347 = load i32, i32* %v2_2e347, align 4
  ret i32 %v3_2e347
}

define i32 @function_2e34c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e34c:
  %v0_2e34e = load i32, i32* @ebp, align 4
  %v1_2e34e = add i32 %v0_2e34e, -29
  %v1_2e354 = call i32 @unknown_5d5d2(i32 %v1_2e34e)
  %v4_2e359 = trunc i32 %v1_2e354 to i8
  %v5_2e359 = icmp ne i8 %v4_2e359, 0
  %v5_2e369 = icmp eq i1 %v5_2e359, false
  br i1 %v5_2e369, label %dec_label_pc_2e3c5, label %dec_label_pc_2e36d

dec_label_pc_2e36d:                               ; preds = %dec_label_pc_2e34c
  %v0_2e36d = load i32, i32* @ebp, align 4
  %v1_2e36d = add i32 %v0_2e36d, -36
  %v1_2e373 = call i32 @unknown_4fe76(i32 %v1_2e36d)
  %v0_2e378 = load i32, i32* @ebp, align 4
  %v1_2e378 = add i32 %v0_2e378, -36
  %v1_2e37f = add i32 %v0_2e378, -64
  %v2_2e37f = inttoptr i32 %v1_2e37f to i32*
  %v3_2e37f = load i32, i32* %v2_2e37f, align 4
  %v1_2e386 = add i32 %v0_2e378, -28
  %v3_2e38c = call i32 @unknown_5ec98(i32 %v1_2e386, i32 %v3_2e37f, i32 %v1_2e378)
  %v0_2e391 = load i32, i32* @ebp, align 4
  %v1_2e391 = add i32 %v0_2e391, -72
  %v1_2e394 = add i32 %v0_2e391, -28
  %v1_2e39b = add i32 %v0_2e391, -44
  %v2_2e39b = inttoptr i32 %v1_2e39b to i32*
  %v3_2e39b = load i32, i32* %v2_2e39b, align 4
  %v1_2e3a2 = add i32 %v0_2e391, -60
  %v2_2e3a2 = inttoptr i32 %v1_2e3a2 to i32*
  %v3_2e3a2 = load i32, i32* %v2_2e3a2, align 4
  %v4_2e3ac = call i32 @unknown_5ecec(i32 %v1_2e391, i32 %v3_2e3a2, i32 %v3_2e39b, i32 %v1_2e394)
  %v0_2e3b4 = load i32, i32* @ebp, align 4
  %v1_2e3b4 = add i32 %v0_2e3b4, -72
  %v2_2e3b4 = inttoptr i32 %v1_2e3b4 to i32*
  %v3_2e3b4 = load i32, i32* %v2_2e3b4, align 4
  %v2_2e3b7 = add i32 %v0_2e3b4, -44
  %v3_2e3b7 = inttoptr i32 %v2_2e3b7 to i32*
  store i32 %v3_2e3b4, i32* %v3_2e3b7, align 4
  %v0_2e3ba = load i32, i32* @ebp, align 4
  %v1_2e3ba = add i32 %v0_2e3ba, -28
  %v1_2e3c0 = call i32 @unknown_5c542(i32 %v1_2e3ba)
  br label %dec_label_pc_2e3c5

dec_label_pc_2e3c5:                               ; preds = %dec_label_pc_2e36d, %dec_label_pc_2e34c
  %v0_2e3c5 = load i32, i32* @ebp, align 4
  %v1_2e3c5 = add i32 %v0_2e3c5, -44
  %v1_2e3cb = call i32 @unknown_5ec26(i32 %v1_2e3c5)
  %v1_2e3d0 = add i32 %v1_2e3cb, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_2e3d0, i32* @eax, align 8
  %v0_2e3d3 = load i32, i32* @ebp, align 4
  %v1_2e3d3 = add i32 %v0_2e3d3, -12
  %v2_2e3d3 = inttoptr i32 %v1_2e3d3 to i32*
  %v3_2e3d3 = load i32, i32* %v2_2e3d3, align 4
  %v3_2e3d6 = icmp eq i32 %v3_2e3d3, 30
  br i1 %v3_2e3d6, label %bb, label %dec_label_pc_2e3df

bb:                                               ; preds = %dec_label_pc_2e3c5
  %v1_2e3dd = call i32 @function_2e3fd()
  store i32 %v1_2e3dd, i32* @eax, align 8
  br label %dec_label_pc_2e3df

dec_label_pc_2e3df:                               ; preds = %bb, %dec_label_pc_2e3c5
  %v0_2e3df = call i32 @function_2e3f8()
  ret i32 %v0_2e3df

; uselistorder directives
  uselistorder i32 -29, { 4, 5, 1, 0, 2, 3 }
}

define i32 @function_2e3ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e3ea:
  %v6_2e3eb = load i32, i32* @eax, align 8
  ret i32 %v6_2e3eb
}

define i32 @function_2e3f8() local_unnamed_addr {
dec_label_pc_2e3f8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e3fd() local_unnamed_addr {
dec_label_pc_2e3fd:
  %v0_2e401 = load i32, i32* @eax, align 8
  ret i32 %v0_2e401
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5eraseESt17_Rb_tree_iteratorISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e402:
  ret i32 30
}

define i32 @function_2e41c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e41c:
  %v0_2e41f = load i32, i32* @ebp, align 4
  %v1_2e41f = add i32 %v0_2e41f, -28
  %v2_2e41f = inttoptr i32 %v1_2e41f to i32*
  %v3_2e41f = load i32, i32* %v2_2e41f, align 4
  %v1_2e422 = add i32 %v0_2e41f, -32
  %v2_2e422 = inttoptr i32 %v1_2e422 to i32*
  %v3_2e422 = load i32, i32* %v2_2e422, align 4
  %v2_2e42c = call i32 @unknown_5eea8(i32 %v3_2e41f, i32 %v3_2e422)
  %v0_2e431 = load i32, i32* @ebp, align 4
  %v1_2e431 = add i32 %v0_2e431, -12
  %v2_2e431 = inttoptr i32 %v1_2e431 to i32*
  %v3_2e431 = load i32, i32* %v2_2e431, align 4
  %v2_2e434 = xor i32 %v3_2e431, 30
  %v3_2e434 = icmp eq i32 %v2_2e434, 0
  store i32 %v2_2e434, i32* @eax, align 8
  br i1 %v3_2e434, label %bb, label %dec_label_pc_2e43d

bb:                                               ; preds = %dec_label_pc_2e41c
  %v1_2e43b = call i32 @function_2e442()
  br label %dec_label_pc_2e43d

dec_label_pc_2e43d:                               ; preds = %bb, %dec_label_pc_2e41c
  %v2_2e43b = phi i32 [ %v1_2e43b, %bb ], [ %v2_2e434, %dec_label_pc_2e41c ]
  ret i32 %v2_2e43b
}

define i32 @function_2e442() local_unnamed_addr {
dec_label_pc_2e442:
  %v0_2e443 = load i32, i32* @eax, align 8
  ret i32 %v0_2e443
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5eraseESt14_List_iteratorISJ_E() local_unnamed_addr {
dec_label_pc_2e444:
  %eax.global-to-local = alloca i32, align 4
  %v2_2e445 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2e445
}

define i32 @function_2e449(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e449:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_2e449 = load i32, i32* @ecx, align 4
  %v0_2e451 = load i32, i32* @ebp, align 4
  %v0_2e452 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2e452 = or i32 %v0_2e452, 137
  store i32 %v11_2e452, i32* %eax.global-to-local, align 8
  %v1_2e455 = add i32 %v4_2e449, 255
  %v1_2e457 = add i32 %v0_2e451, 3
  store i32 %v1_2e457, i32* @ebp, align 4
  %v1_2e458 = add i32 %v4_2e449, -1587159996
  %v2_2e458 = inttoptr i32 %v1_2e458 to i8*
  %v3_2e458 = load i8, i8* %v2_2e458, align 1
  %v5_2e458 = trunc i32 %v1_2e455 to i8
  %v8_2e458 = add i8 %v3_2e458, %v5_2e458
  %v28_2e458 = icmp ult i8 %v8_2e458, %v3_2e458
  store i1 %v28_2e458, i1* %cf.global-to-local, align 1
  store i8 %v8_2e458, i8* %v2_2e458, align 1
  %v0_2e45e = load i32, i32* %eax.global-to-local, align 8
  %v1_2e45e = trunc i32 %v0_2e45e to i8
  %v2_2e45e = load i1, i1* %cf.global-to-local, align 1
  %v3_2e45e = zext i1 %v2_2e45e to i8
  %v4_2e45e = add i8 %v3_2e45e, %v1_2e45e
  %v19_2e45e = icmp ule i8 %v4_2e45e, %v1_2e45e
  %v21_2e45e = icmp eq i1 %v2_2e45e, %v19_2e45e
  store i1 %v21_2e45e, i1* %cf.global-to-local, align 1
  %v22_2e45e = zext i8 %v4_2e45e to i32
  %v24_2e45e = and i32 %v0_2e45e, -256
  %v25_2e45e = or i32 %v22_2e45e, %v24_2e45e
  store i32 %v25_2e45e, i32* %eax.global-to-local, align 8
  %v1_2e460 = inttoptr i32 %v25_2e45e to i8*
  %v2_2e460 = load i8, i8* %v1_2e460, align 1
  %v5_2e460 = add i8 %v2_2e460, %v4_2e45e
  store i8 %v5_2e460, i8* %v1_2e460, align 1
  %v0_2e462 = load i32, i32* %eax.global-to-local, align 8
  %v1_2e462 = load i32, i32* @ebp, align 4
  %v2_2e462 = add i32 %v1_2e462, -12
  %v3_2e462 = inttoptr i32 %v2_2e462 to i32*
  store i32 %v0_2e462, i32* %v3_2e462, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2e467 = load i32, i32* @ebp, align 4
  %v1_2e467 = add i32 %v0_2e467, -36
  %v2_2e467 = inttoptr i32 %v1_2e467 to i32*
  %v3_2e467 = load i32, i32* %v2_2e467, align 4
  store i32 %v3_2e467, i32* %eax.global-to-local, align 8
  %v1_2e46a = inttoptr i32 %v3_2e467 to i32*
  %v2_2e46a = load i32, i32* %v1_2e46a, align 4
  store i32 %v2_2e46a, i32* %eax.global-to-local, align 8
  %v1_2e470 = add i32 %v0_2e467, -28
  %v2_2e470 = inttoptr i32 %v1_2e470 to i32*
  %v3_2e470 = load i32, i32* %v2_2e470, align 4
  store i32 %v3_2e470, i32* %eax.global-to-local, align 8
  %v2_2e476 = call i32 @unknown_59cea(i32 %v3_2e470, i32 %v2_2e46a)
  store i32 %v2_2e476, i32* %eax.global-to-local, align 8
  %v0_2e47b = load i32, i32* @ebp, align 4
  %v1_2e47b = add i32 %v0_2e47b, -36
  %v2_2e47b = inttoptr i32 %v1_2e47b to i32*
  %v3_2e47b = load i32, i32* %v2_2e47b, align 4
  store i32 %v3_2e47b, i32* %eax.global-to-local, align 8
  %v1_2e482 = add i32 %v0_2e47b, -32
  %v2_2e482 = inttoptr i32 %v1_2e482 to i32*
  %v3_2e482 = load i32, i32* %v2_2e482, align 4
  store i32 %v3_2e482, i32* %eax.global-to-local, align 8
  %v2_2e488 = call i32 @unknown_5ef3e(i32 %v3_2e482, i32 %v3_2e47b)
  store i32 %v2_2e488, i32* %eax.global-to-local, align 8
  %v0_2e48d = load i32, i32* @ebp, align 4
  %v1_2e48d = add i32 %v0_2e48d, -28
  %v2_2e48d = inttoptr i32 %v1_2e48d to i32*
  %v3_2e48d = load i32, i32* %v2_2e48d, align 4
  store i32 %v3_2e48d, i32* @eax, align 8
  %v1_2e490 = add i32 %v0_2e48d, -12
  %v2_2e490 = inttoptr i32 %v1_2e490 to i32*
  %v3_2e490 = load i32, i32* %v2_2e490, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2e493 = icmp eq i32 %v3_2e490, 30
  br i1 %v3_2e493, label %bb, label %dec_label_pc_2e49c

bb:                                               ; preds = %dec_label_pc_2e449
  %v1_2e49a = call i32 @function_2e4a1()
  store i32 %v1_2e49a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2e49c

dec_label_pc_2e49c:                               ; preds = %bb, %dec_label_pc_2e449
  %v3_2e49a = phi i32 [ %v1_2e49a, %bb ], [ %v3_2e48d, %dec_label_pc_2e449 ]
  ret i32 %v3_2e49a

; uselistorder directives
  uselistorder i8 %v4_2e45e, { 0, 2, 1 }
  uselistorder i8 %v1_2e45e, { 1, 0 }
  uselistorder i8 %v3_2e458, { 1, 0 }
}

define i32 @function_2e4a1() local_unnamed_addr {
dec_label_pc_2e4a1:
  %v0_2e4a2 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4a2
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE12destroy_implEN4mpl_5bool_ILb0EEE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_2e4a6:
  ret i32 0
}

define i32 @function_2e4c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4c6:
  %v0_2e4ca = call i32 @unknown_5f050()
  %v0_2e4cf = load i32, i32* @ebp, align 4
  %v1_2e4cf = add i32 %v0_2e4cf, -28
  %v2_2e4cf = inttoptr i32 %v1_2e4cf to i32*
  %v3_2e4cf = load i32, i32* %v2_2e4cf, align 4
  %v1_2e4d2 = inttoptr i32 %v3_2e4cf to i8*
  store i8 0, i8* %v1_2e4d2, align 1
  %v0_2e4d5 = load i32, i32* @ebp, align 4
  %v1_2e4d5 = add i32 %v0_2e4d5, -12
  %v2_2e4d5 = inttoptr i32 %v1_2e4d5 to i32*
  %v3_2e4d5 = load i32, i32* %v2_2e4d5, align 4
  %v2_2e4d8 = xor i32 %v3_2e4d5, 30
  %v3_2e4d8 = icmp eq i32 %v2_2e4d8, 0
  store i32 %v2_2e4d8, i32* @eax, align 8
  br i1 %v3_2e4d8, label %bb, label %dec_label_pc_2e4e1

bb:                                               ; preds = %dec_label_pc_2e4c6
  %v1_2e4df = call i32 @function_2e4e6()
  br label %dec_label_pc_2e4e1

dec_label_pc_2e4e1:                               ; preds = %bb, %dec_label_pc_2e4c6
  %v2_2e4df = phi i32 [ %v1_2e4df, %bb ], [ %v2_2e4d8, %dec_label_pc_2e4c6 ]
  ret i32 %v2_2e4df
}

define i32 @function_2e4e6() local_unnamed_addr {
dec_label_pc_2e4e6:
  %v0_2e4e7 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4e7
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4e8:
  %v1_2e505 = call i32 @unknown_5f1f8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2e514 = call i32 @function_2e51b()
  ret i32 %v1_2e514
}

define i32 @function_2e51b() local_unnamed_addr {
dec_label_pc_2e51b:
  %v0_2e51c = load i32, i32* @eax, align 8
  ret i32 %v0_2e51c
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e51e:
  %v1_2e53b = call i32 @unknown_5f304(i32 %arg1)
  ret i32 0
}

define i32 @function_2e54a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e54a:
  %v0_2e54a = load i1, i1* @zf, align 1
  br i1 %v0_2e54a, label %bb, label %dec_label_pc_2e54a.dec_label_pc_2e54c_crit_edge

dec_label_pc_2e54a.dec_label_pc_2e54c_crit_edge:  ; preds = %dec_label_pc_2e54a
  %v2_2e54a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2e54c

bb:                                               ; preds = %dec_label_pc_2e54a
  %v1_2e54a = call i32 @function_2e551()
  br label %dec_label_pc_2e54c

dec_label_pc_2e54c:                               ; preds = %dec_label_pc_2e54a.dec_label_pc_2e54c_crit_edge, %bb
  %v2_2e54a = phi i32 [ %v2_2e54a.pre, %dec_label_pc_2e54a.dec_label_pc_2e54c_crit_edge ], [ %v1_2e54a, %bb ]
  ret i32 %v2_2e54a

; uselistorder directives
  uselistorder label %dec_label_pc_2e54c, { 1, 0 }
}

define i32 @function_2e551() local_unnamed_addr {
dec_label_pc_2e551:
  %v0_2e552 = load i32, i32* @eax, align 8
  ret i32 %v0_2e552
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e554:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_2e57f = call i32 @unknown_5f14c(i32 %arg1, i32 %arg2)
  %v1_2e587 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2e58d = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2e597 = call i32 @unknown_5f2c2(i32 %v1_2e58d, i32 %v1_2e587)
  %v2_2e59c = ptrtoint i32* %stack_var_-48 to i32
  %v1_2e5a2 = call i32 @unknown_5f3a8(i32 %v2_2e59c)
  %v2_2e5aa = ptrtoint i32* %stack_var_-44 to i32
  ret i32 %v2_2e5aa

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e5ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e5ae:
  %v0_2e5af = load i32, i32* @eax, align 8
  %v11_2e5af = and i32 %v0_2e5af, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_2e5b4 = call i32 @unknown_55260(i32 %v11_2e5af)
  %v0_2e5bc = load i32, i32* @ebp, align 4
  %v1_2e5bc = add i32 %v0_2e5bc, -60
  %v2_2e5bc = inttoptr i32 %v1_2e5bc to i32*
  %v3_2e5bc = load i32, i32* %v2_2e5bc, align 4
  ret i32 %v3_2e5bc
}

define i32 @function_2e5c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e5c2:
  %v0_2e5c2 = load i32, i32* @ebp, align 4
  %v1_2e5c2 = add i32 %v0_2e5c2, -36
  %v0_2e5c5 = load i32, i32* @edx, align 8
  %v2_2e5cc = call i32 @unknown_5f3dc(i32 %v1_2e5c2, i32 %v0_2e5c5)
  %v0_2e5d4 = load i32, i32* @ebp, align 4
  %v1_2e5d4 = add i32 %v0_2e5d4, -64
  %v2_2e5d4 = inttoptr i32 %v1_2e5d4 to i32*
  %v3_2e5d4 = load i32, i32* %v2_2e5d4, align 4
  %v1_2e5d7 = add i32 %v3_2e5d4, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2e5da = add i32 %v0_2e5d4, -68
  %v2_2e5e4 = call i32 @unknown_5f426(i32 %v1_2e5da, i32 %v1_2e5d7)
  %v0_2e5ec = load i32, i32* @ebp, align 4
  %v1_2e5ec = add i32 %v0_2e5ec, -68
  %v2_2e5ec = inttoptr i32 %v1_2e5ec to i32*
  %v3_2e5ec = load i32, i32* %v2_2e5ec, align 4
  %v2_2e5ef = add i32 %v0_2e5ec, -44
  %v3_2e5ef = inttoptr i32 %v2_2e5ef to i32*
  store i32 %v3_2e5ec, i32* %v3_2e5ef, align 4
  %v0_2e5f2 = call i32 @function_2e6e7()
  ret i32 %v0_2e5f2
}

define i32 @function_2e5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e5e0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e5f7() local_unnamed_addr {
dec_label_pc_2e5f7:
  %v0_2e5f7 = load i32, i32* @ebp, align 4
  %v1_2e5fd = add i32 %v0_2e5f7, -16
  ret i32 %v1_2e5fd
}

define i32 @function_2e600(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e600:
  %v0_2e600 = load i32, i32* @edx, align 8
  %v0_2e604 = load i32, i32* @eax, align 8
  %v3_2e607 = call i32 @unknown_5c604(i32 %v0_2e604, i32 %v0_2e600)
  %v0_2e60f = load i32, i32* @ebp, align 4
  %v1_2e60f = add i32 %v0_2e60f, -16
  %v1_2e616 = add i32 %v0_2e60f, -36
  %v4_2e61c = call i32 @unknown_5c64e(i32 %v1_2e616, i32 %v1_2e60f)
  %v4_2e621 = trunc i32 %v4_2e61c to i8
  %v5_2e621 = icmp eq i8 %v4_2e621, 0
  %v1_2e623 = icmp eq i1 %v5_2e621, false
  br i1 %v1_2e623, label %bb, label %dec_label_pc_2e625

bb:                                               ; preds = %dec_label_pc_2e600
  %v2_2e623 = call i32 @function_2e649()
  br label %dec_label_pc_2e625

dec_label_pc_2e625:                               ; preds = %bb, %dec_label_pc_2e600
  %v3_2e63d = phi i32 [ %v2_2e623, %bb ], [ %v4_2e61c, %dec_label_pc_2e600 ]
  ret i32 %v3_2e63d
}

define i32 @function_2e649() local_unnamed_addr {
dec_label_pc_2e649:
  %v0_2e649 = load i32, i32* @ebp, align 4
  %v1_2e649 = add i32 %v0_2e649, -36
  %v1_2e64f = call i32 @unknown_5c718(i32 %v1_2e649)
  %v0_2e654 = load i32, i32* @ebp, align 4
  %v1_2e654 = add i32 %v0_2e654, -40
  %v2_2e654 = inttoptr i32 %v1_2e654 to i32*
  %v3_2e654 = load i32, i32* %v2_2e654, align 4
  %v2_2e657 = add i32 %v1_2e64f, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2e657 = inttoptr i32 %v2_2e657 to i32*
  store i32 %v3_2e654, i32* %v3_2e657, align 4
  %v0_2e65a = load i32, i32* @ebp, align 4
  %v1_2e65a = add i32 %v0_2e65a, -28
  %v1_2e65d = add i32 %v0_2e65a, -44
  %v1_2e664 = add i32 %v0_2e65a, -64
  %v2_2e664 = inttoptr i32 %v1_2e664 to i32*
  %v3_2e664 = load i32, i32* %v2_2e664, align 4
  %v3_2e66e = call i32 @unknown_5f57a(i32 %v1_2e65a, i32 %v3_2e664, i32 %v1_2e65d)
  %v0_2e676 = load i32, i32* @ebp, align 4
  %v1_2e676 = add i32 %v0_2e676, -44
  %v2_2e676 = inttoptr i32 %v1_2e676 to i32*
  %v3_2e676 = load i32, i32* %v2_2e676, align 4
  %v2_2e679 = add i32 %v0_2e676, -24
  %v3_2e679 = inttoptr i32 %v2_2e679 to i32*
  store i32 %v3_2e676, i32* %v3_2e679, align 4
  %v0_2e67c = load i32, i32* @ebp, align 4
  %v1_2e67c = add i32 %v0_2e67c, -24
  %v1_2e682 = call i32 @unknown_5f53a(i32 %v1_2e67c)
  %v0_2e687 = load i32, i32* @ebp, align 4
  %v1_2e687 = add i32 %v0_2e687, -20
  %v1_2e68a = add i32 %v0_2e687, -24
  %v1_2e691 = add i32 %v0_2e687, -64
  %v2_2e691 = inttoptr i32 %v1_2e691 to i32*
  %v3_2e691 = load i32, i32* %v2_2e691, align 4
  %v3_2e69b = call i32 @unknown_5f57a(i32 %v1_2e687, i32 %v3_2e691, i32 %v1_2e68a)
  br label %dec_label_pc_2e6bb

dec_label_pc_2e6a5:                               ; preds = %dec_label_pc_2e6bb
  %v1_2e6a5 = add i32 %v0_2e6a5, -28
  %v1_2e6ab = call i32 @unknown_5f676(i32 %v1_2e6a5)
  %v0_2e6b0 = load i32, i32* @ebp, align 4
  %v1_2e6b0 = add i32 %v0_2e6b0, -40
  %v1_2e6b6 = call i32 @unknown_59aac(i32 %v1_2e6b0)
  br label %dec_label_pc_2e6bb

dec_label_pc_2e6bb:                               ; preds = %dec_label_pc_2e6a5, %dec_label_pc_2e649
  %v0_2e6bb = load i32, i32* @ebp, align 4
  %v1_2e6bb = add i32 %v0_2e6bb, -20
  %v1_2e6c2 = add i32 %v0_2e6bb, -28
  %v2_2e6c8 = call i32 @unknown_5f636(i32 %v1_2e6c2, i32 %v1_2e6bb)
  %v4_2e6cd = trunc i32 %v2_2e6c8 to i8
  %v5_2e6cd = icmp eq i8 %v4_2e6cd, 0
  %v1_2e6cf = icmp eq i1 %v5_2e6cd, false
  %v0_2e6a5 = load i32, i32* @ebp, align 4
  br i1 %v1_2e6cf, label %dec_label_pc_2e6a5, label %dec_label_pc_2e6d1

dec_label_pc_2e6d1:                               ; preds = %dec_label_pc_2e6bb
  %v1_2e6d1 = add i32 %v0_2e6a5, -44
  %v1_2e6d7 = call i32 @unknown_5f53a(i32 %v1_2e6d1)
  %v0_2e6dc = load i32, i32* @ebp, align 4
  %v1_2e6dc = add i32 %v0_2e6dc, -36
  %v1_2e6e2 = call i32 @unknown_5f4fa(i32 %v1_2e6dc)
  ret i32 %v1_2e6e2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5f53a, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_5f57a, { 1, 0 }
}

define i32 @function_2e6e7() local_unnamed_addr {
dec_label_pc_2e6e7:
  %v0_2e6e7 = load i32, i32* @ebp, align 4
  %v1_2e6e7 = add i32 %v0_2e6e7, -64
  %v2_2e6e7 = inttoptr i32 %v1_2e6e7 to i32*
  %v3_2e6e7 = load i32, i32* %v2_2e6e7, align 4
  %v1_2e6ea = add i32 %v3_2e6e7, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2e6ed = add i32 %v0_2e6e7, -32
  %v2_2e6f7 = call i32 @unknown_5f470(i32 %v1_2e6ed, i32 %v1_2e6ea)
  %v0_2e6ff = load i32, i32* @ebp, align 4
  %v1_2e6ff = add i32 %v0_2e6ff, -32
  %v1_2e706 = add i32 %v0_2e6ff, -44
  %v2_2e70c = call i32 @unknown_5f4ba(i32 %v1_2e706, i32 %v1_2e6ff)
  %v4_2e711 = trunc i32 %v2_2e70c to i8
  %v5_2e711 = icmp eq i8 %v4_2e711, 0
  %v1_2e713 = icmp eq i1 %v5_2e711, false
  br i1 %v1_2e713, label %bb, label %dec_label_pc_2e719

bb:                                               ; preds = %dec_label_pc_2e6e7
  %v2_2e713 = call i32 @function_2e5f7()
  br label %dec_label_pc_2e719

dec_label_pc_2e719:                               ; preds = %bb, %dec_label_pc_2e6e7
  %v0_2e719 = call i32 @function_2e744()
  ret i32 %v0_2e719
}

define i32 @function_2e71b() local_unnamed_addr {
dec_label_pc_2e71b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e71b = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2e71b, i32* @ebx, align 4
  %v0_2e71d = load i32, i32* @ebp, align 4
  %v1_2e71d = add i32 %v0_2e71d, -60
  %v2_2e71d = inttoptr i32 %v1_2e71d to i32*
  %v3_2e71d = load i32, i32* %v2_2e71d, align 4
  %v1_2e720 = add i32 %v3_2e71d, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_2e720, i32* %eax.global-to-local, align 8
  %v1_2e726 = call i32 @unknown_5ca72(i32 %v1_2e720)
  store i32 %v1_2e726, i32* %eax.global-to-local, align 8
  %v0_2e72b = call i32 @function_2e72f()
  store i32 %v0_2e72b, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e72b
}

define i32 @function_2e72d() local_unnamed_addr {
dec_label_pc_2e72d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e72d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e72d
}

define i32 @function_2e72f() local_unnamed_addr {
dec_label_pc_2e72f:
  %v0_2e72f = load i32, i32* @ebp, align 4
  %v1_2e72f = add i32 %v0_2e72f, -60
  %v2_2e72f = inttoptr i32 %v1_2e72f to i32*
  %v3_2e72f = load i32, i32* %v2_2e72f, align 4
  %v1_2e735 = call i32 @unknown_5ca3c(i32 %v3_2e72f)
  %v0_2e73a = load i32, i32* @ebx, align 4
  ret i32 %v0_2e73a
}

define i32 @function_2e744() local_unnamed_addr {
dec_label_pc_2e744:
  %v0_2e744 = load i32, i32* @ebp, align 4
  %v1_2e744 = add i32 %v0_2e744, -12
  %v2_2e744 = inttoptr i32 %v1_2e744 to i32*
  %v3_2e744 = load i32, i32* %v2_2e744, align 4
  %v2_2e747 = xor i32 %v3_2e744, 30
  %v3_2e747 = icmp eq i32 %v2_2e747, 0
  store i32 %v2_2e747, i32* @eax, align 8
  br i1 %v3_2e747, label %bb, label %dec_label_pc_2e750

bb:                                               ; preds = %dec_label_pc_2e744
  %v1_2e74e = call i32 @function_2e755()
  br label %dec_label_pc_2e750

dec_label_pc_2e750:                               ; preds = %bb, %dec_label_pc_2e744
  %v2_2e74e = phi i32 [ %v1_2e74e, %bb ], [ %v2_2e747, %dec_label_pc_2e744 ]
  ret i32 %v2_2e74e
}

define i32 @function_2e754(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e754:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e755() local_unnamed_addr {
dec_label_pc_2e755:
  %v0_2e755 = load i32, i32* @ebp, align 4
  %v1_2e755 = add i32 %v0_2e755, -4
  %v2_2e755 = inttoptr i32 %v1_2e755 to i32*
  %v3_2e755 = load i32, i32* %v2_2e755, align 4
  store i32 %v3_2e755, i32* @ebx, align 4
  %v0_2e759 = load i32, i32* @eax, align 8
  ret i32 %v0_2e759
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEEC1ISM_EEPT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e75a:
  ret i32 %arg2
}

define i32 @function_2e76e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e76e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e76e = load i32, i32* @eax, align 8
  %v1_2e76e = trunc i32 %v0_2e76e to i8
  %v2_2e76e = load i1, i1* @cf, align 1
  %v3_2e76e = zext i1 %v2_2e76e to i8
  %v4_2e76e = add i8 %v3_2e76e, %v1_2e76e
  %v22_2e76e = zext i8 %v4_2e76e to i32
  %v24_2e76e = and i32 %v0_2e76e, -256
  %v25_2e76e = or i32 %v22_2e76e, %v24_2e76e
  store i32 %v25_2e76e, i32* %eax.global-to-local, align 8
  %v1_2e770 = inttoptr i32 %v25_2e76e to i8*
  %v2_2e770 = load i8, i8* %v1_2e770, align 1
  %v5_2e770 = add i8 %v2_2e770, %v4_2e76e
  store i8 %v5_2e770, i8* %v1_2e770, align 1
  %v0_2e772 = load i32, i32* %eax.global-to-local, align 8
  %v1_2e772 = load i32, i32* @ebp, align 4
  %v2_2e772 = add i32 %v1_2e772, -12
  %v3_2e772 = inttoptr i32 %v2_2e772 to i32*
  store i32 %v0_2e772, i32* %v3_2e772, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2e777 = load i32, i32* @ebp, align 4
  %v1_2e777 = add i32 %v0_2e777, -28
  %v2_2e777 = inttoptr i32 %v1_2e777 to i32*
  %v3_2e777 = load i32, i32* %v2_2e777, align 4
  store i32 %v3_2e777, i32* %eax.global-to-local, align 8
  %v1_2e77a = add i32 %v0_2e777, -32
  %v2_2e77a = inttoptr i32 %v1_2e77a to i32*
  %v3_2e77a = load i32, i32* %v2_2e77a, align 4
  %v2_2e77d = inttoptr i32 %v3_2e777 to i32*
  store i32 %v3_2e77a, i32* %v2_2e77d, align 4
  %v0_2e77f = load i32, i32* @ebp, align 4
  %v1_2e77f = add i32 %v0_2e77f, -28
  %v2_2e77f = inttoptr i32 %v1_2e77f to i32*
  %v3_2e77f = load i32, i32* %v2_2e77f, align 4
  store i32 %v3_2e77f, i32* %eax.global-to-local, align 8
  %v1_2e782 = add i32 %v3_2e77f, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2e785 = add i32 %v0_2e77f, -32
  %v2_2e785 = inttoptr i32 %v1_2e785 to i32*
  %v3_2e785 = load i32, i32* %v2_2e785, align 4
  store i32 %v3_2e785, i32* %eax.global-to-local, align 8
  %v2_2e78f = call i32 @unknown_5f8b6(i32 %v1_2e782, i32 %v3_2e785)
  store i32 %v2_2e78f, i32* %eax.global-to-local, align 8
  %v0_2e794 = load i32, i32* @ebp, align 4
  %v1_2e794 = add i32 %v0_2e794, -32
  %v2_2e794 = inttoptr i32 %v1_2e794 to i32*
  %v3_2e794 = load i32, i32* %v2_2e794, align 4
  store i32 %v3_2e794, i32* %eax.global-to-local, align 8
  %v3_2e79b = load i32, i32* %v2_2e794, align 4
  store i32 %v3_2e79b, i32* %eax.global-to-local, align 8
  %v1_2e7a2 = add i32 %v0_2e794, -28
  %v2_2e7a2 = inttoptr i32 %v1_2e7a2 to i32*
  %v3_2e7a2 = load i32, i32* %v2_2e7a2, align 4
  store i32 %v3_2e7a2, i32* %eax.global-to-local, align 8
  %v3_2e7a8 = call i32 @unknown_3ef95(i32 %v3_2e7a2, i32 %v3_2e79b, i32 %v3_2e794)
  store i32 %v3_2e7a8, i32* %eax.global-to-local, align 8
  %v0_2e7ad = load i32, i32* @ebp, align 4
  %v1_2e7ad = add i32 %v0_2e7ad, -12
  %v2_2e7ad = inttoptr i32 %v1_2e7ad to i32*
  %v3_2e7ad = load i32, i32* %v2_2e7ad, align 4
  %v2_2e7b0 = xor i32 %v3_2e7ad, 30
  %v3_2e7b0 = icmp eq i32 %v2_2e7b0, 0
  store i32 %v2_2e7b0, i32* @eax, align 8
  br i1 %v3_2e7b0, label %bb, label %dec_label_pc_2e7b9

bb:                                               ; preds = %dec_label_pc_2e76e
  %v1_2e7b7 = call i32 @function_2e7be()
  store i32 %v1_2e7b7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2e7b9

dec_label_pc_2e7b9:                               ; preds = %bb, %dec_label_pc_2e76e
  %v2_2e7b7 = phi i32 [ %v1_2e7b7, %bb ], [ %v2_2e7b0, %dec_label_pc_2e76e ]
  ret i32 %v2_2e7b7
}

define i32 @function_2e7be() local_unnamed_addr {
dec_label_pc_2e7be:
  %v0_2e7bf = load i32, i32* @eax, align 8
  ret i32 %v0_2e7bf
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e7c0:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = ptrtoint i32* %arg1 to i32
  %v1_2e7e8 = add i32 %tmp7, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2e7f5 = call i32 @unknown_5f9a8(i32 %v1_2e7e8, i32 %tmp4)
  %v3_2e80e = call i32 @unknown_3effb(i32 %tmp7, i32 %tmp4, i32 %tmp4)
  store i32 0, i32* @eax, align 8
  %v1_2e81d = call i32 @function_2e824()
  ret i32 %v1_2e81d

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 %tmp4, { 2, 1, 0 }
}

define i32 @function_2e824() local_unnamed_addr {
dec_label_pc_2e824:
  %v0_2e825 = load i32, i32* @eax, align 8
  ret i32 %v0_2e825
}

define i32 @_ZN5boost20iterator_core_access5equalINS_8signals26detail20slot_call_iterator_tINS3_12signal3_implIbRKSsS7_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS7_S7_jEEENSC_IFbRKNS2_10connectionES7_S7_jEEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbS7_S7_jSE_EESK_EEEEESX_EES10_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_2e826:
  %eax.global-to-local = alloca i32, align 4
  %v17_2e829 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2e829
}

define i32 @function_2e82c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e82c:
  %v0_2e82c = load i32, i32* @ebp, align 4
  %v1_2e82c = add i32 %v0_2e82c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2e82c = inttoptr i32 %v1_2e82c to i32*
  %v3_2e82c = load i32, i32* %v2_2e82c, align 4
  %v2_2e82f = add i32 %v0_2e82c, -28
  %v3_2e82f = inttoptr i32 %v2_2e82f to i32*
  store i32 %v3_2e82c, i32* %v3_2e82f, align 4
  %v0_2e832 = load i32, i32* @ebp, align 4
  %v1_2e832 = add i32 %v0_2e832, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2e832 = inttoptr i32 %v1_2e832 to i32*
  %v3_2e832 = load i32, i32* %v2_2e832, align 4
  %v2_2e835 = add i32 %v0_2e832, -32
  %v3_2e835 = inttoptr i32 %v2_2e835 to i32*
  store i32 %v3_2e832, i32* %v3_2e835, align 4
  %v0_2e838 = load i32, i32* @ebp, align 4
  %v1_2e838 = add i32 %v0_2e838, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2e838 = inttoptr i32 %v1_2e838 to i8*
  %v3_2e838 = load i8, i8* %v2_2e838, align 1
  %v3_2e83c = add i32 %v0_2e838, -33
  %v4_2e83c = inttoptr i32 %v3_2e83c to i8*
  store i8 %v3_2e838, i8* %v4_2e83c, align 1
  %v1_2e845 = load i32, i32* @ebp, align 4
  %v2_2e845 = add i32 %v1_2e845, -12
  %v3_2e845 = inttoptr i32 %v2_2e845 to i32*
  store i32 30, i32* %v3_2e845, align 4
  %v0_2e84a = load i32, i32* @ebp, align 4
  %v1_2e84a = add i32 %v0_2e84a, -32
  %v2_2e84a = inttoptr i32 %v1_2e84a to i32*
  %v3_2e84a = load i32, i32* %v2_2e84a, align 4
  %v1_2e851 = add i32 %v0_2e84a, -28
  %v2_2e851 = inttoptr i32 %v1_2e851 to i32*
  %v3_2e851 = load i32, i32* %v2_2e851, align 4
  %v2_2e857 = call i32 @unknown_5fa9a(i32 %v3_2e851, i32 %v3_2e84a)
  store i32 %v2_2e857, i32* @eax, align 8
  %v0_2e85c = load i32, i32* @ebp, align 4
  %v1_2e85c = add i32 %v0_2e85c, -12
  %v2_2e85c = inttoptr i32 %v1_2e85c to i32*
  %v3_2e85c = load i32, i32* %v2_2e85c, align 4
  store i1 false, i1* @cf, align 1
  %v3_2e85f = icmp eq i32 %v3_2e85c, 30
  br i1 %v3_2e85f, label %bb, label %dec_label_pc_2e868

bb:                                               ; preds = %dec_label_pc_2e82c
  %v1_2e866 = call i32 @function_2e86d()
  br label %dec_label_pc_2e868

dec_label_pc_2e868:                               ; preds = %bb, %dec_label_pc_2e82c
  %v3_2e866 = phi i32 [ %v1_2e866, %bb ], [ %v2_2e857, %dec_label_pc_2e82c ]
  ret i32 %v3_2e866
}

define i32 @function_2e86d() local_unnamed_addr {
dec_label_pc_2e86d:
  %v0_2e86e = load i32, i32* @eax, align 8
  ret i32 %v0_2e86e
}

define i32 @_ZN5boost17enable_error_infoINS_8signals214no_slots_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e86f:
  %v2_2e899 = call i32 @unknown_5fb25(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e8aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8aa:
  %v0_2e8aa = load i32, i32* @ebp, align 4
  %v1_2e8aa = load i32, i32* @eax, align 8
  %v3_2e8aa = add i32 %v0_2e8aa, -24
  %v4_2e8aa = add i32 %v3_2e8aa, %v1_2e8aa
  %v5_2e8aa = inttoptr i32 %v4_2e8aa to i8*
  %v6_2e8aa = load i8, i8* %v5_2e8aa, align 1
  %v7_2e8aa = load i32, i32* @edx, align 8
  %v8_2e8aa = lshr i32 %v7_2e8aa, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_2e8aa = trunc i32 %v8_2e8aa to i8
  %v10_2e8aa = add i8 %v9_2e8aa, %v6_2e8aa
  store i8 %v10_2e8aa, i8* %v5_2e8aa, align 1
  %v31_2e8aa = load i32, i32* @eax, align 8
  ret i32 %v31_2e8aa
}

define i32 @function_2e8b1() local_unnamed_addr {
dec_label_pc_2e8b1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e8b1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e8b1 = add i32 %v0_2e8b1, -1
  store i32 %v1_2e8b1, i32* %ecx.global-to-local, align 4
  %v0_2e8b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e8b3
}

define i32 @_ZThn4_N5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8b6:
  %v4_2e8b6 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2e8bb = call i32 @function_5d176(i32 %v4_2e8b6)
  ret i32 %v1_2e8bb
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev(i32* %arg1) {
dec_label_pc_2e8c0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38968_type* @global_var_38968.2574 to i32), i32* %arg1, align 4
  %v1_2e8e3 = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2e8e3 = inttoptr i32 %v1_2e8e3 to i32*
  store i32 ptrtoint (i32* @global_var_3897c.2575 to i32), i32* %v2_2e8e3, align 4
  %v1_2e8f3 = call i32 @unknown_3d184(i32 %v1_2e8e3)
  %v1_2e8fe = call i32 @unknown_55858(i32 %tmp99)
  %v1_2e90d = call i32 @function_2e91a()
  ret i32 %tmp99
}

define i32 @function_2e91a() local_unnamed_addr {
dec_label_pc_2e91a:
  %v0_2e91a = load i32, i32* @ebp, align 4
  %v1_2e91a = add i32 %v0_2e91a, -12
  %v2_2e91a = inttoptr i32 %v1_2e91a to i32*
  %v3_2e91a = load i32, i32* %v2_2e91a, align 4
  %v2_2e91d = xor i32 %v3_2e91a, 30
  %v3_2e91d = icmp eq i32 %v2_2e91d, 0
  store i32 %v2_2e91d, i32* @eax, align 8
  br i1 %v3_2e91d, label %bb, label %dec_label_pc_2e926

bb:                                               ; preds = %dec_label_pc_2e91a
  %v1_2e924 = call i32 @function_2e92b()
  br label %dec_label_pc_2e926

dec_label_pc_2e926:                               ; preds = %bb, %dec_label_pc_2e91a
  %v2_2e924 = phi i32 [ %v1_2e924, %bb ], [ %v2_2e91d, %dec_label_pc_2e91a ]
  ret i32 %v2_2e924
}

define i32 @function_2e92b() local_unnamed_addr {
dec_label_pc_2e92b:
  %v0_2e92c = load i32, i32* @eax, align 8
  ret i32 %v0_2e92c
}

define i32 @_ZThn4_N5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e92e:
  %v4_2e92e = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2e933 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32 %v4_2e92e)
  ret i32 %v1_2e933
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32 %arg1) {
dec_label_pc_2e936:
  %v1_2e953 = call i32 @unknown_5d1ee(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2e973() local_unnamed_addr {
dec_label_pc_2e973:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e973 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e973 = add i32 %v0_2e973, -1
  store i32 %v1_2e973, i32* %ecx.global-to-local, align 4
  %v0_2e975 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e975
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_8signals214no_slots_errorEEEEENS1_10clone_implIT_EERKS7_() local_unnamed_addr {
dec_label_pc_2e976:
  %eax.global-to-local = alloca i32, align 4
  %v5_2e976 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2e976
}

define i32 @function_2e978(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e978:
  %v4_2e97b = load i32, i32* @ecx, align 4
  %v0_2e983 = load i32, i32* @ebp, align 4
  %v0_2e984 = load i32, i32* @eax, align 8
  %v11_2e984 = or i32 %v0_2e984, 137
  store i32 %v11_2e984, i32* @eax, align 8
  %v1_2e986 = add i32 %v0_2e983, 2
  %v9_2e986 = icmp eq i32 %v1_2e986, 0
  store i32 %v1_2e986, i32* @ebp, align 4
  %v1_2e987 = add i32 %v4_2e97b, -1
  store i32 %v1_2e987, i32* @ecx, align 4
  %v2_2e987 = icmp eq i32 %v1_2e987, 0
  %v4_2e987 = or i1 %v2_2e987, %v9_2e986
  br i1 %v4_2e987, label %dec_label_pc_2e989, label %bb

bb:                                               ; preds = %dec_label_pc_2e978
  %v6_2e987 = call i32 @function_2e9ee()
  %v1_2e98e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2e989

dec_label_pc_2e989:                               ; preds = %dec_label_pc_2e978, %bb
  %v1_2e98e = phi i32 [ %v1_2e986, %dec_label_pc_2e978 ], [ %v1_2e98e.pre, %bb ]
  %v2_2e98e = add i32 %v1_2e98e, -12
  %v3_2e98e = inttoptr i32 %v2_2e98e to i32*
  store i32 30, i32* %v3_2e98e, align 4
  %v0_2e993 = load i32, i32* @ebp, align 4
  %v1_2e993 = add i32 %v0_2e993, -32
  %v2_2e993 = inttoptr i32 %v1_2e993 to i32*
  %v3_2e993 = load i32, i32* %v2_2e993, align 4
  %v1_2e99a = add i32 %v0_2e993, -28
  %v2_2e99a = inttoptr i32 %v1_2e99a to i32*
  %v3_2e99a = load i32, i32* %v2_2e99a, align 4
  %v2_2e9a0 = call i32 @unknown_5fc90(i32 %v3_2e99a, i32 %v3_2e993)
  %v0_2e9a5 = load i32, i32* @ebp, align 4
  %v1_2e9a5 = add i32 %v0_2e9a5, -28
  %v2_2e9a5 = inttoptr i32 %v1_2e9a5 to i32*
  %v3_2e9a5 = load i32, i32* %v2_2e9a5, align 4
  store i32 %v3_2e9a5, i32* @eax, align 8
  %v1_2e9a8 = add i32 %v0_2e9a5, -12
  %v2_2e9a8 = inttoptr i32 %v1_2e9a8 to i32*
  %v3_2e9a8 = load i32, i32* %v2_2e9a8, align 4
  %v3_2e9ab = icmp eq i32 %v3_2e9a8, 30
  br i1 %v3_2e9ab, label %bb5, label %dec_label_pc_2e9b4

bb5:                                              ; preds = %dec_label_pc_2e989
  %v1_2e9b2 = call i32 @function_2e9b9()
  br label %dec_label_pc_2e9b4

dec_label_pc_2e9b4:                               ; preds = %bb5, %dec_label_pc_2e989
  %v2_2e9b2 = phi i32 [ %v1_2e9b2, %bb5 ], [ %v3_2e9a5, %dec_label_pc_2e989 ]
  ret i32 %v2_2e9b2

; uselistorder directives
  uselistorder i32 %v1_2e987, { 1, 0 }
  uselistorder label %dec_label_pc_2e989, { 1, 0 }
}

define i32 @function_2e9b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9b8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e9b9() local_unnamed_addr {
dec_label_pc_2e9b9:
  %v0_2e9ba = load i32, i32* @eax, align 8
  ret i32 %v0_2e9ba
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9bd:
  %v5_2e9bd = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_2e9c2 = call i32 @function_5d38f(i32 %v5_2e9bd)
  ret i32 %v2_2e9c2
}

define i32 @_ZThn4_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9c7:
  %v4_2e9c7 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2e9cc = call i32 @function_5d38f(i32 %v4_2e9c7)
  ret i32 %v1_2e9cc

; uselistorder directives
  uselistorder i32 (i32)* @function_5d38f, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32 %arg1) {
dec_label_pc_2e9d2:
  ret i32 30
}

define i32 @function_2e9e6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e9e6:
  %v0_2e9e9 = load i32, i32* @ebp, align 4
  %v1_2e9e9 = add i32 %v0_2e9e9, -28
  %v2_2e9e9 = inttoptr i32 %v1_2e9e9 to i32*
  %v3_2e9e9 = load i32, i32* %v2_2e9e9, align 4
  ret i32 %v3_2e9e9
}

define i32 @function_2e9ee() local_unnamed_addr {
dec_label_pc_2e9ee:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2e9ee = load i32, i32* @ecx, align 4
  %v1_2e9ee = add i32 %v0_2e9ee, 1166737411
  %v2_2e9ee = inttoptr i32 %v1_2e9ee to i8*
  %v3_2e9ee = load i8, i8* %v2_2e9ee, align 1
  %v5_2e9ee = trunc i32 %v0_2e9ee to i8
  %v6_2e9ee = or i8 %v3_2e9ee, %v5_2e9ee
  store i8 %v6_2e9ee, i8* %v2_2e9ee, align 1
  %v0_2e9f6 = load i32, i32* @eax, align 8
  %v1_2e9f6 = add i32 %v0_2e9f6, 1
  %v11_2e9f6 = trunc i32 %v1_2e9f6 to i8
  %v2_2e9f7 = add i8 %v11_2e9f6, ptrtoint (i8* @global_var_24.2401 to i8)
  %v6_2e9f7 = icmp ult i8 %v2_2e9f7, %v11_2e9f6
  store i1 %v6_2e9f7, i1* %cf.global-to-local, align 1
  %v16_2e9f7 = zext i8 %v2_2e9f7 to i32
  %v18_2e9f7 = and i32 %v1_2e9f6, -256
  %v19_2e9f7 = or i32 %v16_2e9f7, %v18_2e9f7
  store i32 %v19_2e9f7, i32* %eax.global-to-local, align 8
  %v1_2e9f9 = load i32, i32* @ebx, align 4
  %v2_2e9f9 = inttoptr i32 %v1_2e9f9 to i32*
  store i32 %v19_2e9f7, i32* %v2_2e9f9, align 4
  %v0_2e9fb = load i32, i32* @ebx, align 4
  %v1_2e9fb = add i32 %v0_2e9fb, 1086841925
  %v2_2e9fb = inttoptr i32 %v1_2e9fb to i8*
  %v3_2e9fb = load i8, i8* %v2_2e9fb, align 1
  %v4_2e9fb = load i32, i32* @ecx, align 4
  %v5_2e9fb = trunc i32 %v4_2e9fb to i8
  %v6_2e9fb = add i8 %v5_2e9fb, %v3_2e9fb
  %v11_2e9fb = icmp ult i8 %v6_2e9fb, %v3_2e9fb
  store i1 %v11_2e9fb, i1* %cf.global-to-local, align 1
  store i8 %v6_2e9fb, i8* %v2_2e9fb, align 1
  %v0_2ea01 = load i32, i32* @ecx, align 4
  %v3_2ea01 = mul i32 %v0_2ea01, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 1)
  %v4_2ea01 = inttoptr i32 %v3_2ea01 to i8*
  %v5_2ea01 = load i8, i8* %v4_2ea01, align 1
  %v6_2ea01 = load i32, i32* @edx, align 8
  %v7_2ea01 = lshr i32 %v6_2ea01, ptrtoint (i32* @global_var_8.2379 to i32)
  %v8_2ea01 = trunc i32 %v7_2ea01 to i8
  %v9_2ea01 = load i1, i1* %cf.global-to-local, align 1
  %v10_2ea01 = zext i1 %v9_2ea01 to i8
  %v11_2ea01 = sub i8 %v5_2ea01, %v8_2ea01
  %v12_2ea01 = add i8 %v11_2ea01, %v10_2ea01
  store i8 %v12_2ea01, i8* %v4_2ea01, align 1
  %v0_2ea04 = load i32, i32* %eax.global-to-local, align 8
  %v2_2ea04 = inttoptr i32 %v0_2ea04 to i32*
  %v3_2ea04 = load i32, i32* %v2_2ea04, align 4
  %v4_2ea04 = add i32 %v3_2ea04, %v0_2ea04
  store i32 %v4_2ea04, i32* %eax.global-to-local, align 8
  %v0_2ea06 = load i32, i32* @ebp, align 4
  %v1_2ea06 = add i32 %v0_2ea06, -28
  %v2_2ea06 = inttoptr i32 %v1_2ea06 to i32*
  %v3_2ea06 = load i32, i32* %v2_2ea06, align 4
  %v1_2ea09 = add i32 %v3_2ea06, ptrtoint (i8** @global_var_18.2447 to i32)
  %v5_2ea09 = icmp ult i32 %v1_2ea09, %v3_2ea06
  store i1 %v5_2ea09, i1* %cf.global-to-local, align 1
  store i32 %v1_2ea09, i32* %eax.global-to-local, align 8
  %v2_2ea0f = call i32 @unknown_3e8a6(i32 %v1_2ea09)
  store i32 %v2_2ea0f, i32* %eax.global-to-local, align 8
  %v0_2ea14 = load i32, i32* @ebp, align 4
  %v1_2ea14 = add i32 %v0_2ea14, -28
  %v2_2ea14 = inttoptr i32 %v1_2ea14 to i32*
  %v3_2ea14 = load i32, i32* %v2_2ea14, align 4
  store i32 %v3_2ea14, i32* %eax.global-to-local, align 8
  %v2_2ea1a = call i32 @unknown_5d292(i32 %v3_2ea14)
  store i32 0, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_2ea29 = call i32 @function_2ea36()
  store i32 %v1_2ea29, i32* %eax.global-to-local, align 8
  %v0_2ea2b = load i32, i32* @ebp, align 4
  %v1_2ea2b = add i32 %v0_2ea2b, -28
  %v2_2ea2b = inttoptr i32 %v1_2ea2b to i32*
  %v3_2ea2b = load i32, i32* %v2_2ea2b, align 4
  store i32 %v3_2ea2b, i32* %eax.global-to-local, align 8
  ret i32 %v3_2ea2b

; uselistorder directives
  uselistorder i32 %v3_2ea06, { 1, 0 }
  uselistorder i8 %v3_2e9fb, { 1, 0 }
  uselistorder i8 %v11_2e9f6, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
}

define i32 @function_2ea36() local_unnamed_addr {
dec_label_pc_2ea36:
  %v0_2ea36 = load i32, i32* @ebp, align 4
  %v1_2ea36 = add i32 %v0_2ea36, -12
  %v2_2ea36 = inttoptr i32 %v1_2ea36 to i32*
  %v3_2ea36 = load i32, i32* %v2_2ea36, align 4
  %v2_2ea39 = xor i32 %v3_2ea36, 30
  %v3_2ea39 = icmp eq i32 %v2_2ea39, 0
  store i32 %v2_2ea39, i32* @eax, align 8
  br i1 %v3_2ea39, label %bb, label %dec_label_pc_2ea42

bb:                                               ; preds = %dec_label_pc_2ea36
  %v1_2ea40 = call i32 @function_2ea47()
  br label %dec_label_pc_2ea42

dec_label_pc_2ea42:                               ; preds = %bb, %dec_label_pc_2ea36
  %v2_2ea40 = phi i32 [ %v1_2ea40, %bb ], [ %v2_2ea39, %dec_label_pc_2ea36 ]
  ret i32 %v2_2ea40
}

define i32 @function_2ea47() local_unnamed_addr {
dec_label_pc_2ea47:
  %v0_2ea48 = load i32, i32* @eax, align 8
  ret i32 %v0_2ea48
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea4a:
  %v5_2ea4a = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_2ea4f = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %v5_2ea4a)
  ret i32 %v2_2ea4f
}

define i32 @_ZThn4_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea51:
  %v4_2ea51 = sub i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2ea56 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %v4_2ea51)
  ret i32 %v1_2ea56
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_2ea58:
  %v1_2ea75 = call i32 @unknown_5d41c(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2ea84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ea84:
  %v0_2ea84 = load i32, i32* @ebx, align 4
  %v1_2ea84 = add i32 %v0_2ea84, 862319685
  %v2_2ea84 = inttoptr i32 %v1_2ea84 to i32*
  %v3_2ea84 = load i32, i32* %v2_2ea84, align 4
  %v4_2ea84 = add i32 %v3_2ea84, -1
  store i32 %v4_2ea84, i32* %v2_2ea84, align 4
  %v0_2ea8a = load i32, i32* @eax, align 8
  %v1_2ea8a = add i32 %v0_2ea8a, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_2ea8a = icmp eq i32 %v1_2ea8a, 0
  store i32 %v1_2ea8a, i32* @eax, align 8
  br i1 %v10_2ea8a, label %bb, label %dec_label_pc_2ea91

bb:                                               ; preds = %dec_label_pc_2ea84
  %v1_2ea8f = call i32 @function_2ea96()
  br label %dec_label_pc_2ea91

dec_label_pc_2ea91:                               ; preds = %bb, %dec_label_pc_2ea84
  %v2_2ea8f = phi i32 [ %v1_2ea8f, %bb ], [ %v1_2ea8a, %dec_label_pc_2ea84 ]
  ret i32 %v2_2ea8f
}

define i32 @function_2ea96() local_unnamed_addr {
dec_label_pc_2ea96:
  %v0_2ea97 = load i32, i32* @eax, align 8
  ret i32 %v0_2ea97
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea98:
  store i32 %arg1, i32* @eax, align 8
  %v2_2eabc = call i32 @function_2eac3(i32 %arg1)
  ret i32 %v2_2eabc
}

define i32 @function_2eac3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eac3:
  %v0_2eac4 = load i32, i32* @eax, align 8
  ret i32 %v0_2eac4
}

define i32 @_ZN5boost20iterator_core_access11dereferenceINS_8signals26detail20slot_call_iterator_tINS3_12signal3_implIbRKSsS7_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS7_S7_jEEENSC_IFbRKNS2_10connectionES7_S7_jEEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbS7_S7_jSE_EESK_EEEEESX_EEEENT_9referenceERKS11_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eac5:
  ret i32 %arg1
}

define i32 @function_2ead4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ead4:
  %v2_2ead4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2ead4 = load i32, i32* @eax, align 8
  %v4_2ead4 = trunc i32 %v3_2ead4 to i8
  %v5_2ead4 = add i8 %v4_2ead4, %v2_2ead4
  %v21_2ead4 = inttoptr i32 %v3_2ead4 to i8*
  store i8 %v5_2ead4, i8* %v21_2ead4, align 1
  %v0_2ead6 = load i32, i32* @ecx, align 4
  %v1_2ead6 = add i32 %v0_2ead6, -1070468027
  %v2_2ead6 = inttoptr i32 %v1_2ead6 to i8*
  %v3_2ead6 = load i8, i8* %v2_2ead6, align 1
  %v5_2ead6 = trunc i32 %v0_2ead6 to i8
  %v6_2ead6 = add i8 %v3_2ead6, %v5_2ead6
  store i8 %v6_2ead6, i8* %v2_2ead6, align 1
  %v0_2eadc = load i32, i32* @ebp, align 4
  %v1_2eadc = add i32 %v0_2eadc, -28
  %v2_2eadc = inttoptr i32 %v1_2eadc to i32*
  %v3_2eadc = load i32, i32* %v2_2eadc, align 4
  %v1_2eae2 = call i32 @unknown_5fe91(i32 %v3_2eadc)
  store i32 %v1_2eae2, i32* @eax, align 8
  %v0_2eae7 = load i32, i32* @ebp, align 4
  %v1_2eae7 = add i32 %v0_2eae7, -12
  %v2_2eae7 = inttoptr i32 %v1_2eae7 to i32*
  %v3_2eae7 = load i32, i32* %v2_2eae7, align 4
  %v3_2eaea = icmp eq i32 %v3_2eae7, 30
  br i1 %v3_2eaea, label %bb, label %dec_label_pc_2eaf3

bb:                                               ; preds = %dec_label_pc_2ead4
  %v1_2eaf1 = call i32 @function_2eaf8()
  br label %dec_label_pc_2eaf3

dec_label_pc_2eaf3:                               ; preds = %bb, %dec_label_pc_2ead4
  %v2_2eaf1 = phi i32 [ %v1_2eaf1, %bb ], [ %v1_2eae2, %dec_label_pc_2ead4 ]
  ret i32 %v2_2eaf1
}

define i32 @function_2eaf8() local_unnamed_addr {
dec_label_pc_2eaf8:
  %v0_2eaf9 = load i32, i32* @eax, align 8
  ret i32 %v0_2eaf9
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE6assignERKb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eafa:
  %v1_2eb1e = call i32 @unknown_5d72c(i32 %arg1)
  ret i32 %v1_2eb1e
}

define i32 @function_2eb24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2eb24:
  %v0_2eb2b = load i32, i32* @ebp, align 4
  %v1_2eb2b = add i32 %v0_2eb2b, -32
  %v2_2eb2b = inttoptr i32 %v1_2eb2b to i32*
  %v3_2eb2b = load i32, i32* %v2_2eb2b, align 4
  %v1_2eb32 = add i32 %v0_2eb2b, -28
  %v2_2eb32 = inttoptr i32 %v1_2eb32 to i32*
  %v3_2eb32 = load i32, i32* %v2_2eb32, align 4
  %v2_2eb38 = call i32 @unknown_5ff9c(i32 %v3_2eb32, i32 %v3_2eb2b)
  %v0_2eb3d = call i32 @function_2eb51()
  ret i32 %v0_2eb3d
}

define i32 @function_2eb3f() local_unnamed_addr {
dec_label_pc_2eb3f:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2eb3f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2eb3f = add i32 %v0_2eb3f, -32
  %v2_2eb3f = inttoptr i32 %v1_2eb3f to i32*
  %v3_2eb3f = load i32, i32* %v2_2eb3f, align 4
  %v1_2eb46 = add i32 %v0_2eb3f, -28
  %v2_2eb46 = inttoptr i32 %v1_2eb46 to i32*
  %v3_2eb46 = load i32, i32* %v2_2eb46, align 4
  %v2_2eb4c = call i32 @unknown_5ffe6(i32 %v3_2eb46, i32 %v3_2eb3f)
  ret i32 %v2_2eb4c
}

define i32 @function_2eb51() local_unnamed_addr {
dec_label_pc_2eb51:
  %v0_2eb51 = load i32, i32* @ebp, align 4
  %v1_2eb51 = add i32 %v0_2eb51, -12
  %v2_2eb51 = inttoptr i32 %v1_2eb51 to i32*
  %v3_2eb51 = load i32, i32* %v2_2eb51, align 4
  %v2_2eb54 = xor i32 %v3_2eb51, 30
  %v3_2eb54 = icmp eq i32 %v2_2eb54, 0
  store i32 %v2_2eb54, i32* @eax, align 8
  br i1 %v3_2eb54, label %bb, label %dec_label_pc_2eb5d

bb:                                               ; preds = %dec_label_pc_2eb51
  %v1_2eb5b = call i32 @function_2eb62()
  br label %dec_label_pc_2eb5d

dec_label_pc_2eb5d:                               ; preds = %bb, %dec_label_pc_2eb51
  %v2_2eb5b = phi i32 [ %v1_2eb5b, %bb ], [ %v2_2eb54, %dec_label_pc_2eb51 ]
  ret i32 %v2_2eb5b
}

define i32 @function_2eb62() local_unnamed_addr {
dec_label_pc_2eb62:
  %v0_2eb67 = load i32, i32* @eax, align 8
  ret i32 %v0_2eb67
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal3_implIbRKSsS6_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS1_10connectionES6_S6_jEEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbS6_S6_jSD_EESJ_EEEEESW_EEbNS_25single_pass_traversal_tagERKbiE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb68:
  store i32 %arg1, i32* @eax, align 8
  %v2_2eb8c = call i32 @function_2eb93(i32 %arg1)
  ret i32 %v2_2eb8c
}

define i32 @function_2eb93(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb93:
  %v0_2eb94 = load i32, i32* @eax, align 8
  ret i32 %v0_2eb94
}

define i32 @_ZN5boost20iterator_core_access9incrementINS_8signals26detail20slot_call_iterator_tINS3_12signal3_implIbRKSsS7_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS7_S7_jEEENSC_IFbRKNS2_10connectionES7_S7_jEEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbS7_S7_jSE_EESK_EEEEESX_EEEEvRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb95:
  %v1_2ebb2 = call i32 @unknown_600e1(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2ebc1 = call i32 @function_2ebc8()
  ret i32 %v1_2ebc1
}

define i32 @function_2ebc8() local_unnamed_addr {
dec_label_pc_2ebc8:
  %v0_2ebc9 = load i32, i32* @eax, align 8
  ret i32 %v0_2ebc9
}

define i32 @_ZNK5boost15optional_detail13optional_baseIbE9safe_boolEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ebca:
  %tmp103 = inttoptr i32 %arg2 to i8*
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v2_2ebeb = load i8, i8* %tmp103, align 1
  %v5_2ebee = icmp eq i8 %v2_2ebeb, 0
  br i1 %v5_2ebee, label %dec_label_pc_2ec06, label %dec_label_pc_2ebf2

dec_label_pc_2ebf2:                               ; preds = %dec_label_pc_2ebca
  store i32 191538, i32* %arg1, align 4
  %v2_2ec01 = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_2ec01 = inttoptr i32 %v2_2ec01 to i32*
  store i32 0, i32* %v3_2ec01, align 4
  br label %dec_label_pc_2ec19

dec_label_pc_2ec06:                               ; preds = %dec_label_pc_2ebca
  store i32 0, i32* %arg1, align 4
  %v1_2ec12 = add i32 %tmp106, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ec12 = inttoptr i32 %v1_2ec12 to i32*
  store i32 0, i32* %v2_2ec12, align 4
  br label %dec_label_pc_2ec19

dec_label_pc_2ec19:                               ; preds = %dec_label_pc_2ec06, %dec_label_pc_2ebf2
  store i32 %tmp106, i32* @eax, align 8
  %v1_2ec26 = call i32 @function_2ec2d()
  ret i32 %v1_2ec26

; uselistorder directives
  uselistorder i32 %tmp106, { 1, 2, 0 }
}

define i32 @function_2ec2d() local_unnamed_addr {
dec_label_pc_2ec2d:
  %v0_2ec2e = load i32, i32* @eax, align 8
  ret i32 %v0_2ec2e
}

define i32 @_ZNK5boost15optional_detail13optional_baseIbE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_2ec32:
  %v4_2ec49 = ptrtoint i8* %arg1 to i32
  %v2_2ec4c = load i8, i8* %arg1, align 1
  %v3_2ec4c = zext i8 %v2_2ec4c to i32
  store i32 %v3_2ec4c, i32* @eax, align 8
  %v3_2ec59 = call i32 @function_2ec60(i32 %v4_2ec49)
  ret i32 %v3_2ec59

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_2ec60(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec60:
  %v0_2ec61 = load i32, i32* @eax, align 8
  ret i32 %v0_2ec61
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec62:
  %v1_2ec80 = call i32 @unknown_601fc(i32 %arg1)
  ret i32 %v1_2ec80
}

define i32 @function_2ec8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec8a:
  %v0_2ec8d = load i32, i32* @ebp, align 4
  %v1_2ec8d = add i32 %v0_2ec8d, -28
  %v2_2ec8d = inttoptr i32 %v1_2ec8d to i32*
  %v3_2ec8d = load i32, i32* %v2_2ec8d, align 4
  %v1_2ec93 = call i32 @unknown_6023a(i32 %v3_2ec8d)
  store i32 %v1_2ec93, i32* @eax, align 8
  %v0_2ec98 = load i32, i32* @ebp, align 4
  %v1_2ec98 = add i32 %v0_2ec98, -12
  %v2_2ec98 = inttoptr i32 %v1_2ec98 to i32*
  %v3_2ec98 = load i32, i32* %v2_2ec98, align 4
  %v3_2ec9b = icmp eq i32 %v3_2ec98, 30
  br i1 %v3_2ec9b, label %bb, label %dec_label_pc_2eca4

bb:                                               ; preds = %dec_label_pc_2ec8a
  %v1_2eca2 = call i32 @function_2eca9()
  br label %dec_label_pc_2eca4

dec_label_pc_2eca4:                               ; preds = %bb, %dec_label_pc_2ec8a
  %v2_2eca2 = phi i32 [ %v1_2eca2, %bb ], [ %v1_2ec93, %dec_label_pc_2ec8a ]
  ret i32 %v2_2eca2
}

define i32 @function_2eca9() local_unnamed_addr {
dec_label_pc_2eca9:
  %v0_2ecae = load i32, i32* @eax, align 8
  ret i32 %v0_2ecae
}

define i32 @_ZNK5boost8weak_ptrINS_6detail16thread_data_baseEE7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ecb0:
  %v1_2ecca = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2ecd0 = call i32 @unknown_3f42c(i32 %v1_2ecca)
  %v1_2ecd5 = icmp eq i32 %v1_2ecd0, 0
  %v1_2ecd7 = zext i1 %v1_2ecd5 to i32
  %v3_2ecd7 = and i32 %v1_2ecd0, -256
  %v4_2ecd7 = or i32 %v1_2ecd7, %v3_2ecd7
  store i32 %v4_2ecd7, i32* @eax, align 8
  %v1_2ece4 = call i32 @function_2eceb()
  ret i32 %v1_2ece4
}

define i32 @function_2ece9(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ece9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eceb() local_unnamed_addr {
dec_label_pc_2eceb:
  %v0_2ecec = load i32, i32* @eax, align 8
  ret i32 %v0_2ecec
}

define i32 @_ZN5boost10shared_ptrINS_6detail16thread_data_baseEEC1IS2_EERKNS0_IT_EEPS2_() local_unnamed_addr {
dec_label_pc_2ecee:
  %eax.global-to-local = alloca i32, align 4
  %v5_2ecee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2ecee
}

define i32 @function_2ed41() local_unnamed_addr {
dec_label_pc_2ed41:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ed41 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ed41 = add i32 %v0_2ed41, -1
  store i32 %v1_2ed41, i32* %ecx.global-to-local, align 4
  %v0_2ed43 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ed43
}

define i32 @_ZN5boost8weak_ptrINS_6detail16thread_data_baseEEaSIS2_EERS3_RKNS_10shared_ptrIT_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ed44:
  ret i32 0
}

define i32 @function_2ed62(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed62:
  %v0_2ed62 = load i32, i32* @ebp, align 4
  %v1_2ed62 = add i32 %v0_2ed62, 1
  store i32 %v1_2ed62, i32* @ebp, align 4
  %v0_2ed63 = load i32, i32* @ecx, align 4
  %v1_2ed63 = add i32 %v0_2ed63, 255
  %v0_2ed65 = load i32, i32* @ebx, align 4
  %v1_2ed65 = add i32 %v0_2ed65, 277472325
  %v2_2ed65 = inttoptr i32 %v1_2ed65 to i8*
  %v3_2ed65 = load i8, i8* %v2_2ed65, align 1
  %v5_2ed65 = trunc i32 %v1_2ed63 to i8
  %v6_2ed65 = load i1, i1* @cf, align 1
  %v7_2ed65 = zext i1 %v6_2ed65 to i8
  %v8_2ed65 = add i8 %v3_2ed65, %v5_2ed65
  %v9_2ed65 = add i8 %v8_2ed65, %v7_2ed65
  store i8 %v9_2ed65, i8* %v2_2ed65, align 1
  %v0_2ed6b = load i32, i32* @ebp, align 4
  %v1_2ed6b = add i32 %v0_2ed6b, -32
  %v2_2ed6b = inttoptr i32 %v1_2ed6b to i32*
  %v3_2ed6b = load i32, i32* %v2_2ed6b, align 4
  %v1_2ed6e = add i32 %v3_2ed6b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2ed71 = add i32 %v0_2ed6b, -28
  %v2_2ed71 = inttoptr i32 %v1_2ed71 to i32*
  %v3_2ed71 = load i32, i32* %v2_2ed71, align 4
  %v1_2ed74 = add i32 %v3_2ed71, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2ed7e = call i32 @unknown_3f44c(i32 %v1_2ed74, i32 %v1_2ed6e)
  %v0_2ed83 = load i32, i32* @ebp, align 4
  %v1_2ed83 = add i32 %v0_2ed83, -28
  %v2_2ed83 = inttoptr i32 %v1_2ed83 to i32*
  %v3_2ed83 = load i32, i32* %v2_2ed83, align 4
  store i32 %v3_2ed83, i32* @eax, align 8
  %v1_2ed86 = add i32 %v0_2ed83, -12
  %v2_2ed86 = inttoptr i32 %v1_2ed86 to i32*
  %v3_2ed86 = load i32, i32* %v2_2ed86, align 4
  %v3_2ed89 = icmp eq i32 %v3_2ed86, 30
  br i1 %v3_2ed89, label %bb, label %dec_label_pc_2ed92

bb:                                               ; preds = %dec_label_pc_2ed62
  %v1_2ed90 = call i32 @function_2ed97()
  br label %dec_label_pc_2ed92

dec_label_pc_2ed92:                               ; preds = %bb, %dec_label_pc_2ed62
  %v3_2ed90 = phi i32 [ %v1_2ed90, %bb ], [ %v3_2ed83, %dec_label_pc_2ed62 ]
  ret i32 %v3_2ed90
}

define i32 @function_2ed97() local_unnamed_addr {
dec_label_pc_2ed97:
  %v0_2ed98 = load i32, i32* @eax, align 8
  ret i32 %v0_2ed98
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEEEENT_11result_typeEiRSD_T0_PT1_N4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_2ed99:
  %eax.global-to-local = alloca i32, align 4
  %v5_2ed99 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2ed99
}

define i32 @function_2ed9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed9a:
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_2ed9a = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_2ed9a, i32* @ebp, align 4
  %v11_2edcf = icmp slt i32 %tmp21, 0
  br i1 %v11_2edcf, label %dec_label_pc_2ee03, label %dec_label_pc_2edd5

dec_label_pc_2edd5:                               ; preds = %dec_label_pc_2ed9a
  %v1_2eddb = call i32 @unknown_603ab(i32 %tmp17)
  %v4_2edf9 = call i32 @unknown_603d9(i32 %arg1, i32 %tmp19, i32 %v1_2eddb, i32 1)
  br label %dec_label_pc_2ee2f

dec_label_pc_2ee03:                               ; preds = %dec_label_pc_2ed9a
  %v1_2ee09 = call i32 @unknown_60438(i32 %tmp17)
  %v4_2ee27 = call i32 @unknown_60465(i32 %arg1, i32 %tmp19, i32 %v1_2ee09, i32 1)
  br label %dec_label_pc_2ee2f

dec_label_pc_2ee2f:                               ; preds = %dec_label_pc_2ee03, %dec_label_pc_2edd5
  store i32 %arg1, i32* @eax, align 8
  %v1_2ee3c = call i32 @function_2ee43()
  ret i32 %v1_2ee3c

; uselistorder directives
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i32 %tmp17, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_2ee43() local_unnamed_addr {
dec_label_pc_2ee43:
  %v0_2ee44 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee44
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrEEENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6) local_unnamed_addr {
dec_label_pc_2ee47:
  %v4_2ee6b = zext i8 %arg6 to i32
  ret i32 %v4_2ee6b
}

define i32 @function_2ee74(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee74:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ee74 = load i32, i32* @eax, align 8
  %v1_2ee74 = trunc i32 %v0_2ee74 to i8
  %v2_2ee74 = load i1, i1* @cf, align 1
  %v3_2ee74 = zext i1 %v2_2ee74 to i8
  %v4_2ee74 = add i8 %v3_2ee74, %v1_2ee74
  %v22_2ee74 = zext i8 %v4_2ee74 to i32
  %v24_2ee74 = and i32 %v0_2ee74, -256
  %v25_2ee74 = or i32 %v22_2ee74, %v24_2ee74
  store i32 %v25_2ee74, i32* %eax.global-to-local, align 8
  %v1_2ee76 = inttoptr i32 %v25_2ee74 to i8*
  %v2_2ee76 = load i8, i8* %v1_2ee76, align 1
  %v5_2ee76 = add i8 %v2_2ee76, %v4_2ee74
  store i8 %v5_2ee76, i8* %v1_2ee76, align 1
  %v0_2ee78 = load i32, i32* %eax.global-to-local, align 8
  %v1_2ee78 = load i32, i32* @ebp, align 4
  %v2_2ee78 = add i32 %v1_2ee78, -12
  %v3_2ee78 = inttoptr i32 %v2_2ee78 to i32*
  store i32 %v0_2ee78, i32* %v3_2ee78, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2ee7d = load i32, i32* @ebp, align 4
  %v1_2ee7d = add i32 %v0_2ee7d, -32
  %v2_2ee7d = inttoptr i32 %v1_2ee7d to i32*
  %v3_2ee7d = load i32, i32* %v2_2ee7d, align 4
  %v11_2ee7d = icmp slt i32 %v3_2ee7d, 0
  br i1 %v11_2ee7d, label %bb, label %dec_label_pc_2ee83

bb:                                               ; preds = %dec_label_pc_2ee74
  %v1_2ee81 = call i32 @function_2eeb1()
  store i32 %v1_2ee81, i32* %eax.global-to-local, align 8
  %v0_2ee83.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2ee83

dec_label_pc_2ee83:                               ; preds = %bb, %dec_label_pc_2ee74
  %v0_2ee83 = phi i32 [ %v0_2ee83.pre, %bb ], [ %v0_2ee7d, %dec_label_pc_2ee74 ]
  %v1_2ee83 = add i32 %v0_2ee83, -40
  %v2_2ee83 = inttoptr i32 %v1_2ee83 to i32*
  %v3_2ee83 = load i32, i32* %v2_2ee83, align 4
  store i32 %v3_2ee83, i32* %eax.global-to-local, align 8
  %v1_2ee89 = call i32 @unknown_60580(i32 %v3_2ee83)
  store i32 %v1_2ee89, i32* %eax.global-to-local, align 8
  %v0_2ee8e = load i32, i32* @ebp, align 4
  %v1_2ee9d = add i32 %v0_2ee8e, -36
  %v2_2ee9d = inttoptr i32 %v1_2ee9d to i32*
  %v3_2ee9d = load i32, i32* %v2_2ee9d, align 4
  store i32 %v3_2ee9d, i32* %eax.global-to-local, align 8
  ret i32 %v3_2ee9d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6 }
}

define i32 @function_2eeaa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eeaa:
  %v0_2eeaa = load i32, i32* @eax, align 8
  %v4_2eeaa = mul i32 %v0_2eeaa, 2
  ret i32 %v4_2eeaa
}

define i32 @function_2eeb1() local_unnamed_addr {
dec_label_pc_2eeb1:
  %v0_2eeb1 = load i32, i32* @ebp, align 4
  %v1_2eeb1 = add i32 %v0_2eeb1, -40
  %v2_2eeb1 = inttoptr i32 %v1_2eeb1 to i32*
  %v3_2eeb1 = load i32, i32* %v2_2eeb1, align 4
  %v1_2eeb7 = call i32 @unknown_6060c(i32 %v3_2eeb1)
  %v0_2eebc = load i32, i32* @ebp, align 4
  %v1_2eebc = add i32 %v0_2eebc, -28
  %v2_2eebc = inttoptr i32 %v1_2eebc to i32*
  %v3_2eebc = load i32, i32* %v2_2eebc, align 4
  %v1_2eecb = add i32 %v0_2eebc, -36
  %v2_2eecb = inttoptr i32 %v1_2eecb to i32*
  %v3_2eecb = load i32, i32* %v2_2eecb, align 4
  %v4_2eed5 = call i32 @unknown_60639(i32 %v3_2eebc, i32 %v3_2eecb, i32 %v1_2eeb7, i32 1)
  %v0_2eedd = load i32, i32* @ebp, align 4
  %v1_2eedd = add i32 %v0_2eedd, -28
  %v2_2eedd = inttoptr i32 %v1_2eedd to i32*
  %v3_2eedd = load i32, i32* %v2_2eedd, align 4
  store i32 %v3_2eedd, i32* @eax, align 8
  %v1_2eee0 = add i32 %v0_2eedd, -12
  %v2_2eee0 = inttoptr i32 %v1_2eee0 to i32*
  %v3_2eee0 = load i32, i32* %v2_2eee0, align 4
  %v3_2eee3 = icmp eq i32 %v3_2eee0, 30
  br i1 %v3_2eee3, label %bb, label %dec_label_pc_2eeec

bb:                                               ; preds = %dec_label_pc_2eeb1
  %v1_2eeea = call i32 @function_2eef1()
  br label %dec_label_pc_2eeec

dec_label_pc_2eeec:                               ; preds = %bb, %dec_label_pc_2eeb1
  %v2_2eeea = phi i32 [ %v1_2eeea, %bb ], [ %v3_2eedd, %dec_label_pc_2eeb1 ]
  ret i32 %v2_2eeea
}

define i32 @function_2eef1() local_unnamed_addr {
dec_label_pc_2eef1:
  %v0_2eef2 = load i32, i32* @eax, align 8
  ret i32 %v0_2eef2
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_10shared_ptrIvEEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eef5:
  ret i32 %arg1
}

define i32 @function_2ef82() local_unnamed_addr {
dec_label_pc_2ef82:
  %v0_2ef83 = load i32, i32* @eax, align 8
  ret i32 %v0_2ef83
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_8signals26detail23foreign_void_shared_ptrEEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef84:
  ret i32 %arg1
}

define i32 @function_2ef90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef90:
  %v0_2ef90 = load i32, i32* @ebp, align 4
  %v1_2ef90 = add i32 %v0_2ef90, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2ef90 = inttoptr i32 %v1_2ef90 to i32*
  %v3_2ef90 = load i32, i32* %v2_2ef90, align 4
  %v2_2ef93 = add i32 %v0_2ef90, -32
  %v3_2ef93 = inttoptr i32 %v2_2ef93 to i32*
  store i32 %v3_2ef90, i32* %v3_2ef93, align 4
  %v0_2ef96 = load i32, i32* @ebp, align 4
  %v1_2ef96 = add i32 %v0_2ef96, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2ef96 = inttoptr i32 %v1_2ef96 to i32*
  %v3_2ef96 = load i32, i32* %v2_2ef96, align 4
  %v2_2ef99 = add i32 %v0_2ef96, -36
  %v3_2ef99 = inttoptr i32 %v2_2ef99 to i32*
  store i32 %v3_2ef96, i32* %v3_2ef99, align 4
  %v0_2ef9c = load i32, i32* @ebp, align 4
  %v1_2ef9c = add i32 %v0_2ef9c, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_2ef9c = inttoptr i32 %v1_2ef9c to i32*
  %v3_2ef9c = load i32, i32* %v2_2ef9c, align 4
  %v2_2ef9f = add i32 %v0_2ef9c, -40
  %v3_2ef9f = inttoptr i32 %v2_2ef9f to i32*
  store i32 %v3_2ef9c, i32* %v3_2ef9f, align 4
  %v0_2efa2 = load i32, i32* @ebp, align 4
  %v1_2efa2 = add i32 %v0_2efa2, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_2efa2 = inttoptr i32 %v1_2efa2 to i8*
  %v3_2efa2 = load i8, i8* %v2_2efa2, align 1
  %v3_2efa6 = add i32 %v0_2efa2, -41
  %v4_2efa6 = inttoptr i32 %v3_2efa6 to i8*
  store i8 %v3_2efa2, i8* %v4_2efa6, align 1
  %v1_2efaf = load i32, i32* @ebp, align 4
  %v2_2efaf = add i32 %v1_2efaf, -12
  %v3_2efaf = inttoptr i32 %v2_2efaf to i32*
  store i32 30, i32* %v3_2efaf, align 4
  %v0_2efb4 = load i32, i32* @ebp, align 4
  %v1_2efb4 = add i32 %v0_2efb4, -28
  %v2_2efb4 = inttoptr i32 %v1_2efb4 to i32*
  %v3_2efb4 = load i32, i32* %v2_2efb4, align 4
  %v11_2efb4 = icmp slt i32 %v3_2efb4, 0
  br i1 %v11_2efb4, label %bb, label %dec_label_pc_2efba

bb:                                               ; preds = %dec_label_pc_2ef90
  %v1_2efb8 = call i32 @function_2efde()
  %v0_2efba.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2efba

dec_label_pc_2efba:                               ; preds = %bb, %dec_label_pc_2ef90
  %v0_2efba = phi i32 [ %v0_2efba.pre, %bb ], [ %v0_2efb4, %dec_label_pc_2ef90 ]
  %v1_2efba = add i32 %v0_2efba, -36
  %v2_2efba = inttoptr i32 %v1_2efba to i32*
  %v3_2efba = load i32, i32* %v2_2efba, align 4
  %v1_2efc0 = call i32 @unknown_60909(i32 %v3_2efba)
  ret i32 %v1_2efc0
}

define i32 @function_2efcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2efcc:
  %v0_2efcc = load i32, i32* @ecx, align 4
  %v1_2efcc = add i32 %v0_2efcc, -1962662844
  %v2_2efcc = inttoptr i32 %v1_2efcc to i8*
  %v3_2efcc = load i8, i8* %v2_2efcc, align 1
  %v5_2efcc = trunc i32 %v0_2efcc to i8
  %v6_2efcc = add i8 %v3_2efcc, %v5_2efcc
  store i8 %v6_2efcc, i8* %v2_2efcc, align 1
  %v0_2efd2 = load i32, i32* @ebp, align 4
  %v1_2efd2 = add i32 %v0_2efd2, 1
  store i32 %v1_2efd2, i32* @ebp, align 4
  %v0_2efd3 = load i32, i32* @ecx, align 4
  %v1_2efd3 = add i32 %v0_2efd3, -1
  store i32 %v1_2efd3, i32* @ecx, align 4
  %v0_2efd7 = call i32 @unknown_60936()
  %v0_2efdc = call i32 @function_2f000()
  ret i32 %v0_2efdc
}

define i32 @function_2efde() local_unnamed_addr {
dec_label_pc_2efde:
  %v0_2efde = load i32, i32* @ebp, align 4
  %v1_2efde = add i32 %v0_2efde, -36
  %v2_2efde = inttoptr i32 %v1_2efde to i32*
  %v3_2efde = load i32, i32* %v2_2efde, align 4
  %v1_2efe4 = call i32 @unknown_609b9(i32 %v3_2efde)
  %v0_2eff5 = load i32, i32* @ebp, align 4
  %v1_2eff5 = add i32 %v0_2eff5, -32
  %v2_2eff5 = inttoptr i32 %v1_2eff5 to i32*
  %v3_2eff5 = load i32, i32* %v2_2eff5, align 4
  %v3_2effb = call i32 @unknown_609e6(i32 %v3_2eff5, i32 %v1_2efe4, i32 1)
  ret i32 %v3_2effb
}

define i32 @function_2f000() local_unnamed_addr {
dec_label_pc_2f000:
  %v0_2f000 = load i32, i32* @ebp, align 4
  %v1_2f000 = add i32 %v0_2f000, -12
  %v2_2f000 = inttoptr i32 %v1_2f000 to i32*
  %v3_2f000 = load i32, i32* %v2_2f000, align 4
  %v2_2f003 = xor i32 %v3_2f000, 30
  %v3_2f003 = icmp eq i32 %v2_2f003, 0
  store i32 %v2_2f003, i32* @eax, align 8
  br i1 %v3_2f003, label %bb, label %dec_label_pc_2f00c

bb:                                               ; preds = %dec_label_pc_2f000
  %v1_2f00a = call i32 @function_2f011()
  br label %dec_label_pc_2f00c

dec_label_pc_2f00c:                               ; preds = %bb, %dec_label_pc_2f000
  %v2_2f00a = phi i32 [ %v1_2f00a, %bb ], [ %v2_2f003, %dec_label_pc_2f000 ]
  ret i32 %v2_2f00a
}

define i32 @function_2f011() local_unnamed_addr {
dec_label_pc_2f011:
  %v0_2f012 = load i32, i32* @eax, align 8
  ret i32 %v0_2f012
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_10shared_ptrIvEEEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2f013:
  %v1_2f04f = call i32 @unknown_60b02(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_2f068(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f068:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f068 = load i32, i32* @eax, align 8
  %v1_2f068 = trunc i32 %v0_2f068 to i8
  %v4_2f068 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v5_2f068 = load i1, i1* @cf, align 1
  %v6_2f068 = zext i1 %v5_2f068 to i8
  %v7_2f068 = sub i8 %v1_2f068, %v4_2f068
  %v8_2f068 = add i8 %v6_2f068, %v7_2f068
  %v36_2f068 = zext i8 %v8_2f068 to i32
  %v38_2f068 = and i32 %v0_2f068, -256
  %v39_2f068 = or i32 %v36_2f068, %v38_2f068
  store i32 %v39_2f068, i32* %eax.global-to-local, align 8
  %v0_2f06a = load i32, i32* @ebx, align 4
  %v2_2f06a = load i32, i32* @ecx, align 4
  %v3_2f06a = lshr i32 %v2_2f06a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_2f06a = add i32 %v3_2f06a, %v0_2f06a
  %v20_2f06a = and i32 %v5_2f06a, 255
  %v22_2f06a = and i32 %v0_2f06a, -256
  %v23_2f06a = or i32 %v20_2f06a, %v22_2f06a
  %v2_2f072 = and i8 %v8_2f068, -24
  %v8_2f072 = zext i8 %v2_2f072 to i32
  %v11_2f072 = or i32 %v8_2f072, %v38_2f068
  store i32 %v11_2f072, i32* %eax.global-to-local, align 8
  %v3_2f075 = inttoptr i32 %v23_2f06a to i8*
  %v4_2f075 = load i8, i8* %v3_2f075, align 1
  %v7_2f075 = sub i8 %v2_2f072, %v4_2f075
  %v2_2f07a = and i8 %v7_2f075, ptrtoint (i32* @global_var_8.2379 to i8)
  %v8_2f07a = zext i8 %v2_2f07a to i32
  %v11_2f07a = or i32 %v8_2f07a, %v38_2f068
  store i32 %v11_2f07a, i32* %eax.global-to-local, align 8
  %v1_2f07c = inttoptr i32 %v11_2f07a to i32*
  %v2_2f07c = load i32, i32* %v1_2f07c, align 4
  %v4_2f07c = add i32 %v2_2f07c, %v11_2f07a
  store i32 %v4_2f07c, i32* %v1_2f07c, align 4
  %v0_2f07e = load i32, i32* %eax.global-to-local, align 8
  %v1_2f07e = inttoptr i32 %v0_2f07e to i8*
  %v2_2f07e = load i8, i8* %v1_2f07e, align 1
  %v4_2f07e = trunc i32 %v0_2f07e to i8
  %v5_2f07e = add i8 %v2_2f07e, %v4_2f07e
  store i8 %v5_2f07e, i8* %v1_2f07e, align 1
  %v0_2f080 = load i32, i32* %eax.global-to-local, align 8
  %v0_2f084 = load i32, i32* @ebp, align 4
  %v1_2f084 = add i32 %v0_2f084, -32
  %v2_2f084 = inttoptr i32 %v1_2f084 to i32*
  %v3_2f084 = load i32, i32* %v2_2f084, align 4
  store i32 %v3_2f084, i32* %eax.global-to-local, align 8
  %v2_2f08a = call i32 @unknown_60b9d(i32 %v3_2f084, i32 %v0_2f080)
  store i32 %v2_2f08a, i32* %eax.global-to-local, align 8
  %v0_2f08f = load i32, i32* @ebp, align 4
  %v1_2f08f = add i32 %v0_2f08f, -12
  %v2_2f08f = inttoptr i32 %v1_2f08f to i32*
  %v3_2f08f = load i32, i32* %v2_2f08f, align 4
  %v2_2f092 = xor i32 %v3_2f08f, 30
  %v3_2f092 = icmp eq i32 %v2_2f092, 0
  store i32 %v2_2f092, i32* @eax, align 8
  br i1 %v3_2f092, label %bb, label %dec_label_pc_2f09b

bb:                                               ; preds = %dec_label_pc_2f068
  %v1_2f099 = call i32 @function_2f0a0()
  store i32 %v1_2f099, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2f09b

dec_label_pc_2f09b:                               ; preds = %bb, %dec_label_pc_2f068
  %v2_2f099 = phi i32 [ %v1_2f099, %bb ], [ %v2_2f092, %dec_label_pc_2f068 ]
  ret i32 %v2_2f099

; uselistorder directives
  uselistorder i32 %v0_2f06a, { 1, 0 }
}

define i32 @function_2f0a0() local_unnamed_addr {
dec_label_pc_2f0a0:
  %v0_2f0a1 = load i32, i32* @eax, align 8
  ret i32 %v0_2f0a1
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_8signals26detail23foreign_void_shared_ptrEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2f0a2:
  %v11_2f0d2 = icmp slt i32 %arg1, 0
  br i1 %v11_2f0d2, label %dec_label_pc_2f0fc, label %dec_label_pc_2f0d8

dec_label_pc_2f0d8:                               ; preds = %dec_label_pc_2f0a2
  %v1_2f0de = call i32 @unknown_60c6d(i32 %arg3)
  %v3_2f0f5 = call i32 @unknown_60c9a(i32 %arg2, i32 %v1_2f0de, i32 1)
  ret i32 %v3_2f0f5

dec_label_pc_2f0fc:                               ; preds = %dec_label_pc_2f0a2
  %v1_2f102 = call i32 @unknown_60cdb(i32 %arg3)
  ret i32 %v1_2f102

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_2f10d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f10d:
  %v2_2f10d = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2f10d = load i32, i32* @eax, align 8
  %v4_2f10d = trunc i32 %v3_2f10d to i8
  %v5_2f10d = add i8 %v4_2f10d, %v2_2f10d
  %v21_2f10d = inttoptr i32 %v3_2f10d to i8*
  store i8 %v5_2f10d, i8* %v21_2f10d, align 1
  %v0_2f10f = load i32, i32* @eax, align 8
  %v0_2f113 = load i32, i32* @ebp, align 4
  %v1_2f113 = add i32 %v0_2f113, -32
  %v2_2f113 = inttoptr i32 %v1_2f113 to i32*
  %v3_2f113 = load i32, i32* %v2_2f113, align 4
  %v2_2f119 = call i32 @unknown_60d08(i32 %v3_2f113, i32 %v0_2f10f)
  %v0_2f11e = load i32, i32* @ebp, align 4
  %v1_2f11e = add i32 %v0_2f11e, -12
  %v2_2f11e = inttoptr i32 %v1_2f11e to i32*
  %v3_2f11e = load i32, i32* %v2_2f11e, align 4
  %v2_2f121 = xor i32 %v3_2f11e, 30
  %v3_2f121 = icmp eq i32 %v2_2f121, 0
  store i32 %v2_2f121, i32* @eax, align 8
  br i1 %v3_2f121, label %bb, label %dec_label_pc_2f12a

bb:                                               ; preds = %dec_label_pc_2f10d
  %v1_2f128 = call i32 @function_2f12f()
  br label %dec_label_pc_2f12a

dec_label_pc_2f12a:                               ; preds = %bb, %dec_label_pc_2f10d
  %v2_2f128 = phi i32 [ %v1_2f128, %bb ], [ %v2_2f121, %dec_label_pc_2f10d ]
  ret i32 %v2_2f128
}

define i32 @function_2f12f() local_unnamed_addr {
dec_label_pc_2f12f:
  %v0_2f130 = load i32, i32* @eax, align 8
  ret i32 %v0_2f130
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEEEENT_11result_typeEiRSD_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2f131:
  %v11_2f161 = icmp slt i32 %arg1, 0
  br i1 %v11_2f161, label %dec_label_pc_2f18b, label %dec_label_pc_2f167

dec_label_pc_2f167:                               ; preds = %dec_label_pc_2f131
  %v1_2f16d = call i32 @unknown_60743(i32 %arg3)
  %v3_2f184 = call i32 @unknown_60dd9(i32 %arg2, i32 %v1_2f16d, i32 1)
  br label %dec_label_pc_2f1ad

dec_label_pc_2f18b:                               ; preds = %dec_label_pc_2f131
  %v1_2f191 = call i32 @unknown_607d0(i32 %arg3)
  %v3_2f1a8 = call i32 @unknown_60e23(i32 %arg2, i32 %v1_2f191, i32 1)
  br label %dec_label_pc_2f1ad

dec_label_pc_2f1ad:                               ; preds = %dec_label_pc_2f18b, %dec_label_pc_2f167
  %storemerge = phi i32 [ %v3_2f1a8, %dec_label_pc_2f18b ], [ %v3_2f184, %dec_label_pc_2f167 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_2f1b7 = call i32 @function_2f1be()
  ret i32 %v1_2f1b7

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f1be() local_unnamed_addr {
dec_label_pc_2f1be:
  %v0_2f1bf = load i32, i32* @eax, align 8
  ret i32 %v0_2f1bf
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrEEENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2f1c0:
  %v11_2f1f0 = icmp slt i32 %arg1, 0
  br i1 %v11_2f1f0, label %dec_label_pc_2f21a, label %dec_label_pc_2f1f6

dec_label_pc_2f1f6:                               ; preds = %dec_label_pc_2f1c0
  %v1_2f1fc = call i32 @unknown_608f9(i32 %arg3)
  %v3_2f213 = call i32 @unknown_60f0a(i32 %arg2, i32 %v1_2f1fc, i32 1)
  br label %dec_label_pc_2f23c

dec_label_pc_2f21a:                               ; preds = %dec_label_pc_2f1c0
  %v1_2f220 = call i32 @unknown_60985(i32 %arg3)
  %v3_2f237 = call i32 @unknown_60f54(i32 %arg2, i32 %v1_2f220, i32 1)
  br label %dec_label_pc_2f23c

dec_label_pc_2f23c:                               ; preds = %dec_label_pc_2f21a, %dec_label_pc_2f1f6
  %storemerge = phi i32 [ %v3_2f237, %dec_label_pc_2f21a ], [ %v3_2f213, %dec_label_pc_2f1f6 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_2f246 = call i32 @function_2f24d()
  ret i32 %v1_2f246

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f24d() local_unnamed_addr {
dec_label_pc_2f24d:
  %v0_2f24e = load i32, i32* @eax, align 8
  ret i32 %v0_2f24e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11lower_boundERS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f250:
  ret i32 %arg1
}

define i32 @function_2f25a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f25a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2f25a = load i32, i32* @eax, align 8
  %v1_2f25a = load i32, i32* @ebp, align 4
  %v2_2f25a = add i32 %v1_2f25a, -28
  %v3_2f25a = inttoptr i32 %v2_2f25a to i32*
  store i32 %v0_2f25a, i32* %v3_2f25a, align 4
  %v0_2f25d = load i32, i32* @ebp, align 4
  %v1_2f25d = add i32 %v0_2f25d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2f25d = inttoptr i32 %v1_2f25d to i32*
  %v3_2f25d = load i32, i32* %v2_2f25d, align 4
  %v2_2f260 = add i32 %v0_2f25d, -32
  %v3_2f260 = inttoptr i32 %v2_2f260 to i32*
  store i32 %v3_2f25d, i32* %v3_2f260, align 4
  %v0_2f263 = load i32, i32* @ebp, align 4
  %v1_2f263 = add i32 %v0_2f263, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_2f263 = inttoptr i32 %v1_2f263 to i32*
  %v3_2f263 = load i32, i32* %v2_2f263, align 4
  %v2_2f266 = add i32 %v0_2f263, -36
  %v3_2f266 = inttoptr i32 %v2_2f266 to i32*
  store i32 %v3_2f263, i32* %v3_2f266, align 4
  %v1_2f26f = load i32, i32* @ebp, align 4
  %v2_2f26f = add i32 %v1_2f26f, -12
  %v3_2f26f = inttoptr i32 %v2_2f26f to i32*
  store i32 30, i32* %v3_2f26f, align 4
  %v0_2f274 = load i32, i32* @ebp, align 4
  %v1_2f274 = add i32 %v0_2f274, -32
  %v2_2f274 = inttoptr i32 %v1_2f274 to i32*
  %v3_2f274 = load i32, i32* %v2_2f274, align 4
  %v1_2f27a = call i32 @unknown_6106c(i32 %v3_2f274)
  store i32 %v1_2f27a, i32* %ebx.global-to-local, align 4
  %v0_2f281 = load i32, i32* @ebp, align 4
  %v1_2f281 = add i32 %v0_2f281, -32
  %v2_2f281 = inttoptr i32 %v1_2f281 to i32*
  %v3_2f281 = load i32, i32* %v2_2f281, align 4
  %v1_2f287 = call i32 @unknown_6103c(i32 %v3_2f281)
  %v0_2f28c = load i32, i32* @ebp, align 4
  %v1_2f28c = add i32 %v0_2f28c, -28
  %v2_2f28c = inttoptr i32 %v1_2f28c to i32*
  %v3_2f28c = load i32, i32* %v2_2f28c, align 4
  %v1_2f28f = add i32 %v0_2f28c, -36
  %v2_2f28f = inttoptr i32 %v1_2f28f to i32*
  %v3_2f28f = load i32, i32* %v2_2f28f, align 4
  %v0_2f296 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2f29e = add i32 %v0_2f28c, -32
  %v2_2f29e = inttoptr i32 %v1_2f29e to i32*
  %v3_2f29e = load i32, i32* %v2_2f29e, align 4
  %v5_2f2a8 = call i32 @unknown_6109c(i32 %v3_2f28c, i32 %v3_2f29e, i32 %v1_2f287, i32 %v0_2f296, i32 %v3_2f28f)
  %v0_2f2b0 = load i32, i32* @ebp, align 4
  %v1_2f2b0 = add i32 %v0_2f2b0, -28
  %v2_2f2b0 = inttoptr i32 %v1_2f2b0 to i32*
  %v3_2f2b0 = load i32, i32* %v2_2f2b0, align 4
  store i32 %v3_2f2b0, i32* @eax, align 8
  %v1_2f2b3 = add i32 %v0_2f2b0, -12
  %v2_2f2b3 = inttoptr i32 %v1_2f2b3 to i32*
  %v3_2f2b3 = load i32, i32* %v2_2f2b3, align 4
  %v3_2f2b6 = icmp eq i32 %v3_2f2b3, 30
  br i1 %v3_2f2b6, label %bb, label %dec_label_pc_2f2bf

bb:                                               ; preds = %dec_label_pc_2f25a
  %v1_2f2bd = call i32 @function_2f2c4()
  br label %dec_label_pc_2f2bf

dec_label_pc_2f2bf:                               ; preds = %bb, %dec_label_pc_2f25a
  %v2_2f2bd = phi i32 [ %v1_2f2bd, %bb ], [ %v3_2f2b0, %dec_label_pc_2f25a ]
  ret i32 %v2_2f2bd
}

define i32 @function_2f2c4() local_unnamed_addr {
dec_label_pc_2f2c4:
  %v0_2f2c8 = load i32, i32* @eax, align 8
  ret i32 %v0_2f2c8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f2cc:
  %v1_2f2ec = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2f2f9 = call i32 @unknown_611cc(i32 %arg1, i32 %v1_2f2ec)
  store i32 %arg1, i32* @eax, align 8
  %v1_2f30b = call i32 @function_2f312()
  ret i32 %v1_2f30b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f312() local_unnamed_addr {
dec_label_pc_2f312:
  %v0_2f313 = load i32, i32* @eax, align 8
  ret i32 %v0_2f313
}

define i32 @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f316:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_2f316 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_2f316, i32* %stack_var_-4, align 4
  %v4_2f316 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_2f316, i32* %ebp.global-to-local, align 4
  %v0_2f319 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2f33d = load i32, i32* %arg2, align 4
  %v1_2f342 = inttoptr i32 %arg3 to i32*
  %v2_2f342 = load i32, i32* %v1_2f342, align 4
  %v12_2f344 = icmp eq i32 %v2_2f33d, %v2_2f342
  br i1 %v12_2f344, label %dec_label_pc_2f35b, label %dec_label_pc_2f348

dec_label_pc_2f348:                               ; preds = %dec_label_pc_2f316
  %v2_2f352 = load i32, i32* %v1_2f342, align 4
  ret i32 %v2_2f352

dec_label_pc_2f35b:                               ; preds = %dec_label_pc_2f316
  %v10_2f360 = icmp eq i32 %v2_2f33d, 1
  br i1 %v10_2f360, label %dec_label_pc_2f36c, label %dec_label_pc_2f39f

dec_label_pc_2f36c:                               ; preds = %dec_label_pc_2f35b
  %v1_2f36f = add i32 %arg3, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2f375 = call i32 @unknown_6124e(i32 %v1_2f36f)
  store i32 %v1_2f375, i32* %ebx.global-to-local, align 4
  %v1_2f37f = add i32 %tmp107, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2f385 = call i32 @unknown_6124e(i32 %v1_2f37f)
  %v3_2f39a = call i32 @unknown_612b6(i32 %arg1, i32 %v1_2f385, i32 %v1_2f375)
  %v2_2f3b4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_2f39f

dec_label_pc_2f39f:                               ; preds = %dec_label_pc_2f35b, %dec_label_pc_2f36c
  %v2_2f3b4 = phi i32 [ %v2_2f3b4.pre, %dec_label_pc_2f36c ], [ %v0_2f316, %dec_label_pc_2f35b ]
  %storemerge = phi i32 [ %v3_2f39a, %dec_label_pc_2f36c ], [ 0, %dec_label_pc_2f35b ]
  store i32 %v0_2f319, i32* %ebx.global-to-local, align 4
  store i32 %v2_2f3b4, i32* %ebp.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_6124e, { 1, 0 }
  uselistorder label %dec_label_pc_2f39f, { 1, 0 }
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3b6:
  store i32 %arg1, i32* @eax, align 8
  %v2_2f3da = call i32 @function_2f3e1(i32 %arg1)
  ret i32 %v2_2f3da
}

define i32 @function_2f3e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3e1:
  %v0_2f3e2 = load i32, i32* @eax, align 8
  ret i32 %v0_2f3e2
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3e4:
  ret i32 0
}

define i32 @function_2f40c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f40c:
  %v0_2f40e = load i32, i32* @ebp, align 4
  %v1_2f40e = add i32 %v0_2f40e, -1
  store i32 %v1_2f40e, i32* @ebp, align 4
  %v1_2f40f = load i32, i32* @ecx, align 4
  %v2_2f40f = add i32 %v1_2f40f, -1995955124
  %v3_2f40f = inttoptr i32 %v2_2f40f to double*
  %v4_2f40f = load double, double* %v3_2f40f, align 4
  %v5_2f40f = fpext double %v4_2f40f to x86_fp80
  %v6_2f40f = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2f40f = fmul x86_fp80 %v5_2f40f, %v6_2f40f
  store x86_fp80 %v7_2f40f, x86_fp80* @st0, align 4
  %v0_2f416 = load i32, i32* @eax, align 8
  %v11_2f416 = and i32 %v0_2f416, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_2f41b = call i32 @unknown_613ca(i32 %v11_2f416)
  %v0_2f423 = load i32, i32* @ebp, align 4
  %v1_2f423 = add i32 %v0_2f423, -28
  %v2_2f423 = inttoptr i32 %v1_2f423 to i32*
  %v3_2f423 = load i32, i32* %v2_2f423, align 4
  store i32 %v3_2f423, i32* @eax, align 8
  %v1_2f426 = add i32 %v0_2f423, -12
  %v2_2f426 = inttoptr i32 %v1_2f426 to i32*
  %v3_2f426 = load i32, i32* %v2_2f426, align 4
  %v3_2f429 = icmp eq i32 %v3_2f426, 30
  br i1 %v3_2f429, label %bb, label %dec_label_pc_2f432

bb:                                               ; preds = %dec_label_pc_2f40c
  %v1_2f430 = call i32 @function_2f437()
  br label %dec_label_pc_2f432

dec_label_pc_2f432:                               ; preds = %bb, %dec_label_pc_2f40c
  %v2_2f430 = phi i32 [ %v1_2f430, %bb ], [ %v3_2f423, %dec_label_pc_2f40c ]
  ret i32 %v2_2f430
}

define i32 @function_2f437() local_unnamed_addr {
dec_label_pc_2f437:
  %v0_2f438 = load i32, i32* @eax, align 8
  ret i32 %v0_2f438
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f43c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_2f45c = inttoptr i32 %arg2 to i32*
  %v2_2f45c = load i32, i32* %v1_2f45c, align 4
  store i32 %v2_2f45c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_2f46d = call i32 @function_2f474(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2f46d
}

define i32 @function_2f474(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f474:
  %v0_2f475 = load i32, i32* @eax, align 8
  ret i32 %v0_2f475
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f476:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v1_2f4a0 = call i32 @unknown_4d2d6(i32 %tmp110)
  %v1_2f4a8 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2f4ab = ptrtoint i32* %stack_var_-24 to i32
  %v2_2f4b5 = call i32 @unknown_5bd3c(i32 %v2_2f4ab, i32 %v1_2f4a8)
  %v2_2f4c4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2f4ca = call i32 @unknown_5e8b2(i32 %v2_2f4c4, i32 %v2_2f4ab)
  %v2_2f4dc = call i32 @unknown_614d8(i32 %arg3, i32 %v2_2f4c4)
  %v4_2f4e1 = trunc i32 %v2_2f4dc to i8
  %v5_2f4e1 = icmp eq i8 %v4_2f4e1, 0
  br i1 %v5_2f4e1, label %dec_label_pc_2f504, label %dec_label_pc_2f4e5

dec_label_pc_2f4e5:                               ; preds = %dec_label_pc_2f476
  %v2_2f4eb = ptrtoint i32* %stack_var_-44 to i32
  %v2_2f4f5 = call i32 @unknown_52e3c(i32 %v2_2f4eb, i32 %arg2)
  br label %dec_label_pc_2f519

dec_label_pc_2f504:                               ; preds = %dec_label_pc_2f476
  %v1_2f50a = call i32 @unknown_61518(i32 %arg3)
  %v1_2f514 = add i32 %v1_2f50a, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_2f514 = inttoptr i32 %v1_2f514 to i32*
  br label %dec_label_pc_2f519

dec_label_pc_2f519:                               ; preds = %dec_label_pc_2f504, %dec_label_pc_2f4e5
  %storemerge.in = phi i32* [ %stack_var_-44, %dec_label_pc_2f4e5 ], [ %v2_2f514, %dec_label_pc_2f504 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %arg1, align 4
  store i32 %tmp110, i32* @eax, align 8
  %v1_2f526 = call i32 @function_2f52d()
  ret i32 %v1_2f526
}

define i32 @function_2f52d() local_unnamed_addr {
dec_label_pc_2f52d:
  %v0_2f531 = load i32, i32* @eax, align 8
  ret i32 %v0_2f531
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f534:
  %v2_2f55e = call i32 @unknown_61610(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2f573 = call i32 @function_2f57a()
  ret i32 %v1_2f573

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f57a() local_unnamed_addr {
dec_label_pc_2f57a:
  %v0_2f57b = load i32, i32* @eax, align 8
  ret i32 %v0_2f57b
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f57e:
  ret i32 %arg1
}

define i32 @function_2f599(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2f599:
  %v0_2f599 = load i32, i32* @ebx, align 4
  %v1_2f599 = add i32 %v0_2f599, 1435177152
  %v2_2f599 = inttoptr i32 %v1_2f599 to i8*
  %v3_2f599 = load i8, i8* %v2_2f599, align 1
  %v4_2f599 = load i32, i32* @eax, align 8
  %v5_2f599 = trunc i32 %v4_2f599 to i8
  %v6_2f599 = add i8 %v5_2f599, %v3_2f599
  store i8 %v6_2f599, i8* %v2_2f599, align 1
  %v0_2f5a0 = load i32, i32* @edx, align 8
  %v3_2f5a0 = icmp eq i32 %v0_2f5a0, 30
  br i1 %v3_2f5a0, label %bb, label %dec_label_pc_2f599.dec_label_pc_2f5a9_crit_edge

dec_label_pc_2f599.dec_label_pc_2f5a9_crit_edge:  ; preds = %dec_label_pc_2f599
  %v2_2f5a7.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2f5a9

bb:                                               ; preds = %dec_label_pc_2f599
  %v1_2f5a7 = call i32 @function_2f5ae()
  br label %dec_label_pc_2f5a9

dec_label_pc_2f5a9:                               ; preds = %dec_label_pc_2f599.dec_label_pc_2f5a9_crit_edge, %bb
  %v2_2f5a7 = phi i32 [ %v2_2f5a7.pre, %dec_label_pc_2f599.dec_label_pc_2f5a9_crit_edge ], [ %v1_2f5a7, %bb ]
  ret i32 %v2_2f5a7

; uselistorder directives
  uselistorder label %dec_label_pc_2f5a9, { 1, 0 }
}

define i32 @function_2f5ae() local_unnamed_addr {
dec_label_pc_2f5ae:
  %v0_2f5af = load i32, i32* @eax, align 8
  ret i32 %v0_2f5af
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f5b0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2f5d0 = load i32, i32* %arg1, align 4
  %v1_2f5d5 = inttoptr i32 %arg2 to i32*
  %v2_2f5d5 = load i32, i32* %v1_2f5d5, align 4
  %v12_2f5d7 = icmp eq i32 %v2_2f5d0, %v2_2f5d5
  %v1_2f5d9 = zext i1 %v12_2f5d7 to i32
  %v3_2f5d9 = and i32 %v2_2f5d5, -256
  %v4_2f5d9 = or i32 %v1_2f5d9, %v3_2f5d9
  store i32 %v4_2f5d9, i32* @eax, align 8
  %v3_2f5e6 = call i32 @function_2f5ed(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2f5e6

; uselistorder directives
  uselistorder i32 %v2_2f5d5, { 1, 0 }
}

define i32 @function_2f5ed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f5ed:
  %v0_2f5ee = load i32, i32* @eax, align 8
  ret i32 %v0_2f5ee
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f5f0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2f610 = inttoptr i32 %arg2 to i32*
  %v2_2f610 = load i32, i32* %v1_2f610, align 4
  store i32 %v2_2f610, i32* %arg1, align 4
  %v1_2f61a = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_2f620 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_2f62a = call i32 @unknown_61702(i32 %v1_2f620, i32 %v1_2f61a)
  store i32 0, i32* @eax, align 8
  %v1_2f639 = call i32 @function_2f640()
  ret i32 %v1_2f639

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f640() local_unnamed_addr {
dec_label_pc_2f640:
  %v0_2f641 = load i32, i32* @eax, align 8
  ret i32 %v0_2f641
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEC1ERS7_RKSL_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f642:
  ret i32 %arg3
}

define i32 @function_2f65a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f65a:
  %v1_2f660 = load i32, i32* @ebp, align 4
  %v2_2f660 = add i32 %v1_2f660, -12
  %v3_2f660 = inttoptr i32 %v2_2f660 to i32*
  store i32 30, i32* %v3_2f660, align 4
  %v0_2f665 = load i32, i32* @ebp, align 4
  %v1_2f665 = add i32 %v0_2f665, -28
  %v2_2f665 = inttoptr i32 %v1_2f665 to i32*
  %v3_2f665 = load i32, i32* %v2_2f665, align 4
  %v1_2f668 = add i32 %v0_2f665, -32
  %v2_2f668 = inttoptr i32 %v1_2f668 to i32*
  %v3_2f668 = load i32, i32* %v2_2f668, align 4
  %v2_2f672 = call i32 @unknown_5ec32(i32 %v3_2f665, i32 %v3_2f668)
  %v0_2f677 = load i32, i32* @ebp, align 4
  %v1_2f677 = add i32 %v0_2f677, -28
  %v2_2f677 = inttoptr i32 %v1_2f677 to i32*
  %v3_2f677 = load i32, i32* %v2_2f677, align 4
  %v1_2f67a = add i32 %v0_2f677, -36
  %v2_2f67a = inttoptr i32 %v1_2f67a to i32*
  %v3_2f67a = load i32, i32* %v2_2f67a, align 4
  %v1_2f67d = inttoptr i32 %v3_2f67a to i32*
  %v2_2f67d = load i32, i32* %v1_2f67d, align 4
  %v2_2f67f = add i32 %v3_2f677, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_2f67f = inttoptr i32 %v2_2f67f to i32*
  store i32 %v2_2f67d, i32* %v3_2f67f, align 4
  %v0_2f682 = load i32, i32* @ebp, align 4
  %v1_2f682 = add i32 %v0_2f682, -12
  %v2_2f682 = inttoptr i32 %v1_2f682 to i32*
  %v3_2f682 = load i32, i32* %v2_2f682, align 4
  %v2_2f685 = xor i32 %v3_2f682, 30
  %v3_2f685 = icmp eq i32 %v2_2f685, 0
  store i32 %v2_2f685, i32* @eax, align 8
  br i1 %v3_2f685, label %bb, label %dec_label_pc_2f68e

bb:                                               ; preds = %dec_label_pc_2f65a
  %v1_2f68c = call i32 @function_2f693()
  br label %dec_label_pc_2f68e

dec_label_pc_2f68e:                               ; preds = %bb, %dec_label_pc_2f65a
  %v2_2f68c = phi i32 [ %v1_2f68c, %bb ], [ %v2_2f685, %dec_label_pc_2f65a ]
  ret i32 %v2_2f68c
}

define i32 @function_2f693() local_unnamed_addr {
dec_label_pc_2f693:
  %v0_2f694 = load i32, i32* @eax, align 8
  ret i32 %v0_2f694
}

define i32 @_ZN5boost8optionalIiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f696:
  %v1_2f6b3 = call i32 @unknown_617ea(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2f6c2 = call i32 @function_2f6c9()
  ret i32 %v1_2f6c2
}

define i32 @function_2f6c9() local_unnamed_addr {
dec_label_pc_2f6c9:
  %v0_2f6ca = load i32, i32* @eax, align 8
  ret i32 %v0_2f6ca
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f6cc:
  ret i32 %arg2
}

define i32 @function_2f6dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f6dc:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2f6dc = load i32, i32* @ebp, align 4
  %v0_2f6dd = load i32, i32* @ecx, align 4
  %v1_2f6dd = add i32 %v0_2f6dd, 255
  %v1_2f6df = add i32 %v0_2f6dc, 2
  store i32 %v1_2f6df, i32* %ebp.global-to-local, align 4
  %v1_2f6e0 = add i32 %v0_2f6dd, 1166793796
  %v2_2f6e0 = inttoptr i32 %v1_2f6e0 to i8*
  %v3_2f6e0 = load i8, i8* %v2_2f6e0, align 1
  %v5_2f6e0 = trunc i32 %v1_2f6dd to i8
  %v6_2f6e0 = load i1, i1* @cf, align 1
  %v7_2f6e0 = zext i1 %v6_2f6e0 to i8
  %v8_2f6e0 = add i8 %v3_2f6e0, %v5_2f6e0
  %v9_2f6e0 = add i8 %v7_2f6e0, %v8_2f6e0
  %v27_2f6e0 = icmp ule i8 %v9_2f6e0, %v3_2f6e0
  %v28_2f6e0 = icmp ult i8 %v8_2f6e0, %v3_2f6e0
  %v29_2f6e0 = select i1 %v6_2f6e0, i1 %v27_2f6e0, i1 %v28_2f6e0
  store i1 %v29_2f6e0, i1* %cf.global-to-local, align 1
  store i8 %v9_2f6e0, i8* %v2_2f6e0, align 1
  %v0_2f6e6 = load i32, i32* @eax, align 8
  %v1_2f6e6 = trunc i32 %v0_2f6e6 to i8
  %v2_2f6e6 = load i1, i1* %cf.global-to-local, align 1
  %v3_2f6e6 = zext i1 %v2_2f6e6 to i8
  %v4_2f6e6 = add i8 %v1_2f6e6, -119
  %v5_2f6e6 = add i8 %v4_2f6e6, %v3_2f6e6
  %v22_2f6e6 = icmp ule i8 %v5_2f6e6, %v1_2f6e6
  %v23_2f6e6 = icmp ugt i8 %v1_2f6e6, 118
  %v24_2f6e6 = select i1 %v2_2f6e6, i1 %v22_2f6e6, i1 %v23_2f6e6
  %v25_2f6e6 = zext i8 %v5_2f6e6 to i32
  %v27_2f6e6 = and i32 %v0_2f6e6, -256
  %v28_2f6e6 = or i32 %v25_2f6e6, %v27_2f6e6
  store i32 %v28_2f6e6, i32* %eax.global-to-local, align 8
  %v0_2f6e8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2f6e8 = add i32 %v0_2f6e8, 1
  store i32 %v1_2f6e8, i32* @ebp, align 4
  %v3_2f6ec = zext i1 %v24_2f6e6 to i8
  %v4_2f6ec = add i8 %v3_2f6ec, %v5_2f6e6
  %v19_2f6ec = icmp ule i8 %v4_2f6ec, %v5_2f6e6
  %v21_2f6ec = icmp eq i1 %v24_2f6e6, %v19_2f6ec
  store i1 %v21_2f6ec, i1* %cf.global-to-local, align 1
  %v22_2f6ec = zext i8 %v4_2f6ec to i32
  %v25_2f6ec = or i32 %v22_2f6ec, %v27_2f6e6
  store i32 %v25_2f6ec, i32* %eax.global-to-local, align 8
  %v1_2f6ee = inttoptr i32 %v25_2f6ec to i8*
  %v2_2f6ee = load i8, i8* %v1_2f6ee, align 1
  %v5_2f6ee = add i8 %v2_2f6ee, %v4_2f6ec
  store i8 %v5_2f6ee, i8* %v1_2f6ee, align 1
  %v0_2f6f0 = load i32, i32* %eax.global-to-local, align 8
  %v1_2f6f0 = load i32, i32* @ebp, align 4
  %v2_2f6f0 = add i32 %v1_2f6f0, -12
  %v3_2f6f0 = inttoptr i32 %v2_2f6f0 to i32*
  store i32 %v0_2f6f0, i32* %v3_2f6f0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_2f6f5 = load i32, i32* @ebp, align 4
  %v1_2f6f5 = add i32 %v0_2f6f5, -36
  %v1_2f6fc = add i32 %v0_2f6f5, -16
  store i32 %v1_2f6fc, i32* %eax.global-to-local, align 8
  %v2_2f702 = call i32 @unknown_5eb08(i32 %v1_2f6fc, i32 %v1_2f6f5)
  store i32 %v2_2f702, i32* %eax.global-to-local, align 8
  %v0_2f707 = load i32, i32* @ebp, align 4
  %v1_2f707 = add i32 %v0_2f707, -32
  %v2_2f707 = inttoptr i32 %v1_2f707 to i32*
  %v3_2f707 = load i32, i32* %v2_2f707, align 4
  %v1_2f70a = add i32 %v0_2f707, -28
  %v2_2f70a = inttoptr i32 %v1_2f70a to i32*
  %v3_2f70a = load i32, i32* %v2_2f70a, align 4
  store i32 %v3_2f70a, i32* %eax.global-to-local, align 8
  %v1_2f70d = add i32 %v0_2f707, -40
  %v2_2f70d = inttoptr i32 %v1_2f70d to i32*
  %v3_2f70d = load i32, i32* %v2_2f70d, align 4
  %v1_2f714 = add i32 %v0_2f707, -16
  %v2_2f714 = inttoptr i32 %v1_2f714 to i32*
  %v3_2f714 = load i32, i32* %v2_2f714, align 4
  %v4_2f722 = call i32 @unknown_61856(i32 %v3_2f70a, i32 %v3_2f707, i32 %v3_2f714, i32 %v3_2f70d)
  store i32 %v4_2f722, i32* %eax.global-to-local, align 8
  %v0_2f72a = load i32, i32* @ebp, align 4
  %v1_2f72a = add i32 %v0_2f72a, -28
  %v2_2f72a = inttoptr i32 %v1_2f72a to i32*
  %v3_2f72a = load i32, i32* %v2_2f72a, align 4
  store i32 %v3_2f72a, i32* @eax, align 8
  %v1_2f72d = add i32 %v0_2f72a, -12
  %v2_2f72d = inttoptr i32 %v1_2f72d to i32*
  %v3_2f72d = load i32, i32* %v2_2f72d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2f730 = icmp eq i32 %v3_2f72d, 30
  br i1 %v3_2f730, label %bb, label %dec_label_pc_2f739

bb:                                               ; preds = %dec_label_pc_2f6dc
  %v1_2f737 = call i32 @function_2f73e()
  store i32 %v1_2f737, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2f739

dec_label_pc_2f739:                               ; preds = %bb, %dec_label_pc_2f6dc
  %v3_2f737 = phi i32 [ %v1_2f737, %bb ], [ %v3_2f72a, %dec_label_pc_2f6dc ]
  ret i32 %v3_2f737

; uselistorder directives
  uselistorder i32 %v0_2f707, { 1, 0, 2, 3 }
  uselistorder i8 %v4_2f6ec, { 0, 2, 1 }
  uselistorder i8 %v5_2f6e6, { 1, 0, 3, 2 }
  uselistorder i8 %v9_2f6e0, { 1, 0 }
  uselistorder i8 %v8_2f6e0, { 1, 0 }
  uselistorder i8 %v3_2f6e0, { 1, 2, 0 }
}

define i32 @function_2f73e() local_unnamed_addr {
dec_label_pc_2f73e:
  %v0_2f73f = load i32, i32* @eax, align 8
  ret i32 %v0_2f73f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5eraseESt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f742:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2f762 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2f766 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2f76c = call i32 @unknown_5eb7e(i32 %v2_2f766, i32 %v4_2f762)
  %v3_2f771 = load i32, i32* %stack_var_-20, align 4
  %v2_2f77e = call i32 @unknown_61ce8(i32 %arg1, i32 %v3_2f771)
  store i32 0, i32* @eax, align 8
  %v1_2f78d = call i32 @function_2f794()
  ret i32 %v1_2f78d
}

define i32 @function_2f794() local_unnamed_addr {
dec_label_pc_2f794:
  %v0_2f795 = load i32, i32* @eax, align 8
  ret i32 %v0_2f795
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f796:
  ret i32 %arg2
}

define i32 @function_2f7be() local_unnamed_addr {
dec_label_pc_2f7be:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2f7be = load i32, i32* %ebx.global-to-local, align 4
  %v1_2f7be = add i32 %v0_2f7be, 1166663749
  %v2_2f7be = inttoptr i32 %v1_2f7be to i32*
  %v3_2f7be = load i32, i32* %v2_2f7be, align 4
  %v4_2f7be = add i32 %v3_2f7be, -1
  store i32 %v4_2f7be, i32* %v2_2f7be, align 4
  %v0_2f7c5 = load i32, i32* @ebp, align 4
  %v1_2f7c5 = add i32 %v0_2f7c5, -20
  %v2_2f7c5 = inttoptr i32 %v1_2f7c5 to i32*
  %v3_2f7c5 = load i32, i32* %v2_2f7c5, align 4
  %v1_2f7c8 = add i32 %v3_2f7c5, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_2f7ce = call i32 @unknown_61e2b(i32 %v1_2f7c8)
  store i32 %v1_2f7ce, i32* %ebx.global-to-local, align 4
  %v0_2f7d5 = load i32, i32* @ebp, align 4
  %v1_2f7d5 = add i32 %v0_2f7d5, -28
  %v2_2f7d5 = inttoptr i32 %v1_2f7d5 to i32*
  %v3_2f7d5 = load i32, i32* %v2_2f7d5, align 4
  %v1_2f7d8 = add i32 %v0_2f7d5, -13
  %v2_2f7e2 = call i32 @unknown_61da6(i32 %v1_2f7d8, i32 %v3_2f7d5)
  %v0_2f7ea = load i32, i32* %ebx.global-to-local, align 4
  %v0_2f7ee = load i32, i32* @ebp, align 4
  %v1_2f7ee = add i32 %v0_2f7ee, -13
  %v2_2f7f4 = call i32 @unknown_61e90(i32 %v1_2f7ee, i32 %v0_2f7ea)
  %v0_2f7f9 = load i32, i32* @ebp, align 4
  %v1_2f7f9 = add i32 %v0_2f7f9, -13
  %v1_2f7ff = call i32 @unknown_61df6(i32 %v1_2f7f9)
  %v0_2f804 = load i32, i32* @ebp, align 4
  %v1_2f804 = add i32 %v0_2f804, -28
  %v2_2f804 = inttoptr i32 %v1_2f804 to i32*
  %v3_2f804 = load i32, i32* %v2_2f804, align 4
  %v1_2f807 = add i32 %v0_2f804, -20
  %v2_2f807 = inttoptr i32 %v1_2f807 to i32*
  %v3_2f807 = load i32, i32* %v2_2f807, align 4
  %v2_2f811 = call i32 @unknown_61ecc(i32 %v3_2f804, i32 %v3_2f807)
  %v0_2f816 = load i32, i32* @ebp, align 4
  %v1_2f816 = add i32 %v0_2f816, -12
  %v2_2f816 = inttoptr i32 %v1_2f816 to i32*
  %v3_2f816 = load i32, i32* %v2_2f816, align 4
  %v2_2f819 = xor i32 %v3_2f816, 30
  %v3_2f819 = icmp eq i32 %v2_2f819, 0
  store i32 %v2_2f819, i32* @eax, align 8
  br i1 %v3_2f819, label %bb, label %dec_label_pc_2f822

bb:                                               ; preds = %dec_label_pc_2f7be
  %v1_2f820 = call i32 @function_2f840()
  store i32 %v1_2f820, i32* @eax, align 8
  br label %dec_label_pc_2f822

dec_label_pc_2f822:                               ; preds = %bb, %dec_label_pc_2f7be
  %v0_2f822 = call i32 @function_2f83b()
  ret i32 %v0_2f822
}

define i32 @function_2f825() local_unnamed_addr {
dec_label_pc_2f825:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f825 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f825
}

define i32 @function_2f83b() local_unnamed_addr {
dec_label_pc_2f83b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f840() local_unnamed_addr {
dec_label_pc_2f840:
  %v0_2f844 = load i32, i32* @eax, align 8
  ret i32 %v0_2f844
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj120ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f846:
  store i32 %arg1, i32* @eax, align 8
  %v2_2f86a = call i32 @function_2f871(i32 %arg1)
  ret i32 %v2_2f86a
}

define i32 @function_2f871(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f871:
  %v0_2f872 = load i32, i32* @eax, align 8
  ret i32 %v0_2f872
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyEPSA_RKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f874:
  %v1_2f89d = call i32 @unknown_4435e(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v2_2f8ac = call i32 @function_2f8b3(i32 %arg2)
  ret i32 %v2_2f8ac

; uselistorder directives
  uselistorder i32 (i32)* @function_2f8b3, { 2, 1, 0 }
}

define i32 @function_2f8b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f8b3:
  %v0_2f8b4 = load i32, i32* @eax, align 8
  ret i32 %v0_2f8b4
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8b6:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v1_2f8da = call i32 @unknown_62036(i32 %arg2)
  %v2_2f8e3 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2f8e9 = call i32 @unknown_62064(i32 %v2_2f8e3, i32 %v1_2f8da)
  %v2_2f8fb = call i32 @unknown_620a0(i32 %arg1, i32 %v2_2f8e3)
  %v1_2f906 = call i32 @unknown_61f16(i32 %v2_2f8e3)
  %v2_2f90b = ptrtoint i32* %stack_var_-24 to i32
  %v2_2f918 = call i32 @unknown_62154(i32 %v2_2f90b, i32 %arg2)
  %v2_2f920 = ptrtoint i32* %stack_var_-28 to i32
  %v2_2f92d = call i32 @unknown_6210a(i32 %v2_2f920, i32 %arg2)
  %v3_2f939 = load i32, i32* %stack_var_-24, align 4
  ret i32 %v3_2f939
}

define i32 @function_2f940(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f940:
  %v0_2f940 = load i32, i32* @ebp, align 4
  %v1_2f940 = add i32 %v0_2f940, -24
  %v2_2f940 = inttoptr i32 %v1_2f940 to i32*
  %v3_2f940 = load i32, i32* %v2_2f940, align 4
  %v1_2f947 = add i32 %v0_2f940, -28
  %v2_2f947 = inttoptr i32 %v1_2f947 to i32*
  %v3_2f947 = load i32, i32* %v2_2f947, align 4
  %v2_2f94d = call i32 @unknown_6219c(i32 %v3_2f947, i32 %v3_2f940)
  %v0_2f952 = call i32 @function_2f982()
  ret i32 %v0_2f952
}

define i32 @function_2f955() local_unnamed_addr {
dec_label_pc_2f955:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f955 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f955
}

define i32 @function_2f96c() local_unnamed_addr {
dec_label_pc_2f96c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f96c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f96c
}

define i32 @function_2f982() local_unnamed_addr {
dec_label_pc_2f982:
  %v0_2f982 = load i32, i32* @ebp, align 4
  %v1_2f982 = add i32 %v0_2f982, -12
  %v2_2f982 = inttoptr i32 %v1_2f982 to i32*
  %v3_2f982 = load i32, i32* %v2_2f982, align 4
  %v2_2f985 = xor i32 %v3_2f982, 30
  %v3_2f985 = icmp eq i32 %v2_2f985, 0
  store i32 %v2_2f985, i32* @eax, align 8
  br i1 %v3_2f985, label %bb, label %dec_label_pc_2f98e

bb:                                               ; preds = %dec_label_pc_2f982
  %v1_2f98c = call i32 @function_2f993()
  br label %dec_label_pc_2f98e

dec_label_pc_2f98e:                               ; preds = %bb, %dec_label_pc_2f982
  %v2_2f98c = phi i32 [ %v1_2f98c, %bb ], [ %v2_2f985, %dec_label_pc_2f982 ]
  ret i32 %v2_2f98c
}

define i32 @function_2f993() local_unnamed_addr {
dec_label_pc_2f993:
  %v0_2f997 = load i32, i32* @eax, align 8
  ret i32 %v0_2f997
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f998:
  %v1_2f9b5 = call i32 @unknown_622f8(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2f9c4 = call i32 @function_2f9cb()
  ret i32 %v1_2f9c4
}

define i32 @function_2f9cb() local_unnamed_addr {
dec_label_pc_2f9cb:
  %v0_2f9cc = load i32, i32* @eax, align 8
  ret i32 %v0_2f9cc
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f9ce:
  ret i32 %arg1
}

define i32 @function_2f9da(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f9da:
  %v1_2f9e1 = load i32, i32* @ebp, align 4
  %v2_2f9e1 = add i32 %v1_2f9e1, -12
  %v3_2f9e1 = inttoptr i32 %v2_2f9e1 to i32*
  store i32 30, i32* %v3_2f9e1, align 4
  %v0_2f9e6 = load i32, i32* @ebp, align 4
  %v1_2f9e6 = add i32 %v0_2f9e6, -28
  %v2_2f9e6 = inttoptr i32 %v1_2f9e6 to i32*
  %v3_2f9e6 = load i32, i32* %v2_2f9e6, align 4
  %v1_2f9ec = call i32 @unknown_62364(i32 %v3_2f9e6)
  %v0_2f9f1 = load i32, i32* @ebp, align 4
  %v1_2f9f1 = add i32 %v0_2f9f1, -28
  %v2_2f9f1 = inttoptr i32 %v1_2f9f1 to i32*
  %v3_2f9f1 = load i32, i32* %v2_2f9f1, align 4
  %v1_2f9f7 = call i32 @unknown_5f366(i32 %v3_2f9f1)
  %v0_2f9fc = load i32, i32* @ebp, align 4
  %v1_2f9fc = add i32 %v0_2f9fc, -12
  %v2_2f9fc = inttoptr i32 %v1_2f9fc to i32*
  %v3_2f9fc = load i32, i32* %v2_2f9fc, align 4
  %v2_2f9ff = xor i32 %v3_2f9fc, 30
  %v3_2f9ff = icmp eq i32 %v2_2f9ff, 0
  store i32 %v2_2f9ff, i32* @eax, align 8
  br i1 %v3_2f9ff, label %bb, label %dec_label_pc_2fa08

bb:                                               ; preds = %dec_label_pc_2f9da
  %v1_2fa06 = call i32 @function_2fa26()
  store i32 %v1_2fa06, i32* @eax, align 8
  br label %dec_label_pc_2fa08

dec_label_pc_2fa08:                               ; preds = %bb, %dec_label_pc_2f9da
  %v0_2fa08 = call i32 @function_2fa21()
  ret i32 %v0_2fa08
}

define i32 @function_2fa0b() local_unnamed_addr {
dec_label_pc_2fa0b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fa0b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fa0b
}

define i32 @function_2fa21() local_unnamed_addr {
dec_label_pc_2fa21:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fa26() local_unnamed_addr {
dec_label_pc_2fa26:
  %v0_2fa2b = load i32, i32* @eax, align 8
  ret i32 %v0_2fa2b
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEC1ERKST_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fa2c:
  %v2_2fa56 = call i32 @unknown_62480(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_2fa65 = call i32 @function_2fa6c()
  ret i32 %v1_2fa65
}

define i32 @function_2fa6c() local_unnamed_addr {
dec_label_pc_2fa6c:
  %v0_2fa6d = load i32, i32* @eax, align 8
  ret i32 %v0_2fa6d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fa6e:
  %v1_2fa8b = call i32 @unknown_625da(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2fa9a = call i32 @function_2faa1()
  ret i32 %v1_2fa9a
}

define i32 @function_2faa1() local_unnamed_addr {
dec_label_pc_2faa1:
  %v0_2faa2 = load i32, i32* @eax, align 8
  ret i32 %v0_2faa2
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2faa4:
  %v1_2fac2 = call i32 @unknown_61890(i32 %arg1)
  %v2_2fad1 = call i32 @unknown_62646(i32 %arg1, i32 %v1_2fac2)
  %v1_2fadc = call i32 @unknown_5f512(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_2faeb = call i32 @function_2fb0b()
  store i32 %v1_2faeb, i32* @eax, align 8
  %v0_2faed = call i32 @function_2fb06()
  ret i32 %v0_2faed

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2faf0() local_unnamed_addr {
dec_label_pc_2faf0:
  %eax.global-to-local = alloca i32, align 4
  %v0_2faf0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2faf0
}

define i32 @function_2fb06() local_unnamed_addr {
dec_label_pc_2fb06:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fb0b() local_unnamed_addr {
dec_label_pc_2fb0b:
  %v0_2fb10 = load i32, i32* @eax, align 8
  ret i32 %v0_2fb10
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1Ev() local_unnamed_addr {
dec_label_pc_2fb12:
  %eax.global-to-local = alloca i32, align 4
  %v2_2fb13 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2fb13
}

define i32 @function_2fb16(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fb16:
  %v0_2fb17 = load i32, i32* @ebx, align 4
  %v1_2fb17 = add i32 %v0_2fb17, 1166608453
  %v2_2fb17 = inttoptr i32 %v1_2fb17 to i8*
  %v3_2fb17 = load i8, i8* %v2_2fb17, align 1
  %v4_2fb17 = load i32, i32* @ecx, align 4
  %v5_2fb17 = trunc i32 %v4_2fb17 to i8
  %v6_2fb17 = sub i8 %v3_2fb17, %v5_2fb17
  store i8 %v6_2fb17, i8* %v2_2fb17, align 1
  %v1_2fb24 = load i32, i32* @ebp, align 4
  %v2_2fb24 = add i32 %v1_2fb24, -12
  %v3_2fb24 = inttoptr i32 %v2_2fb24 to i32*
  store i32 30, i32* %v3_2fb24, align 4
  %v0_2fb29 = load i32, i32* @ebp, align 4
  %v1_2fb29 = add i32 %v0_2fb29, -28
  %v2_2fb29 = inttoptr i32 %v1_2fb29 to i32*
  %v3_2fb29 = load i32, i32* %v2_2fb29, align 4
  %v1_2fb2c = inttoptr i32 %v3_2fb29 to i32*
  store i32 0, i32* %v1_2fb2c, align 4
  %v0_2fb32 = load i32, i32* @ebp, align 4
  %v1_2fb32 = add i32 %v0_2fb32, -12
  %v2_2fb32 = inttoptr i32 %v1_2fb32 to i32*
  %v3_2fb32 = load i32, i32* %v2_2fb32, align 4
  %v2_2fb35 = xor i32 %v3_2fb32, 30
  %v3_2fb35 = icmp eq i32 %v2_2fb35, 0
  store i32 %v2_2fb35, i32* @eax, align 8
  br i1 %v3_2fb35, label %bb, label %dec_label_pc_2fb3e

bb:                                               ; preds = %dec_label_pc_2fb16
  %v1_2fb3c = call i32 @function_2fb43()
  br label %dec_label_pc_2fb3e

dec_label_pc_2fb3e:                               ; preds = %bb, %dec_label_pc_2fb16
  %v2_2fb3c = phi i32 [ %v1_2fb3c, %bb ], [ %v2_2fb35, %dec_label_pc_2fb16 ]
  ret i32 %v2_2fb3c
}

define i32 @function_2fb43() local_unnamed_addr {
dec_label_pc_2fb43:
  %v0_2fb44 = load i32, i32* @eax, align 8
  ret i32 %v0_2fb44
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fb46:
  ret i32 %arg1
}

define i32 @function_2fb6d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fb6d:
  %v0_2fb6d = load i32, i32* @eax, align 8
  %v1_2fb70 = call i32 @unknown_62766(i32 %v0_2fb6d)
  %v0_2fb78 = load i32, i32* @ebp, align 4
  %v1_2fb78 = add i32 %v0_2fb78, -28
  %v2_2fb78 = inttoptr i32 %v1_2fb78 to i32*
  %v3_2fb78 = load i32, i32* %v2_2fb78, align 4
  store i32 %v3_2fb78, i32* @eax, align 8
  %v1_2fb7b = add i32 %v0_2fb78, -12
  %v2_2fb7b = inttoptr i32 %v1_2fb7b to i32*
  %v3_2fb7b = load i32, i32* %v2_2fb7b, align 4
  %v3_2fb7e = icmp eq i32 %v3_2fb7b, 30
  br i1 %v3_2fb7e, label %bb, label %dec_label_pc_2fb87

bb:                                               ; preds = %dec_label_pc_2fb6d
  %v1_2fb85 = call i32 @function_2fb8c()
  br label %dec_label_pc_2fb87

dec_label_pc_2fb87:                               ; preds = %bb, %dec_label_pc_2fb6d
  %v2_2fb85 = phi i32 [ %v1_2fb85, %bb ], [ %v3_2fb78, %dec_label_pc_2fb6d ]
  ret i32 %v2_2fb85
}

define i32 @function_2fb8c() local_unnamed_addr {
dec_label_pc_2fb8c:
  %v0_2fb8d = load i32, i32* @eax, align 8
  ret i32 %v0_2fb8d
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fb90:
  %v2_2fbba = call i32 @unknown_627fa(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_2fbcf = call i32 @function_2fbd6()
  ret i32 %v1_2fbcf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2fbd6() local_unnamed_addr {
dec_label_pc_2fbd6:
  %v0_2fbd7 = load i32, i32* @eax, align 8
  ret i32 %v0_2fbd7
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fbda:
  %v2_2fc04 = call i32 @unknown_6288e(i32 %arg1, i32 %arg2)
  ret i32 %v2_2fc04
}

define i32 @function_2fc0d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fc0d:
  %v0_2fc0d = load i32, i32* @ebp, align 4
  %v1_2fc0d = add i32 %v0_2fc0d, 1
  %v1_2fc20 = inttoptr i32 %v1_2fc0d to i32*
  %v2_2fc20 = load i32, i32* %v1_2fc20, align 4
  store i32 %v2_2fc20, i32* @ebp, align 4
  %v0_2fc21 = load i32, i32* @eax, align 8
  ret i32 %v0_2fc21
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEneERKSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fc24:
  ret i32 %arg2
}

define i32 @function_2fc3a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fc3a:
  %v2_2fc3a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2fc3a = load i32, i32* @eax, align 8
  %v4_2fc3a = trunc i32 %v3_2fc3a to i8
  %v5_2fc3a = add i8 %v4_2fc3a, %v2_2fc3a
  %v21_2fc3a = inttoptr i32 %v3_2fc3a to i8*
  store i8 %v5_2fc3a, i8* %v21_2fc3a, align 1
  %v0_2fc3c = load i32, i32* @eax, align 8
  %v1_2fc3c = load i32, i32* @ebp, align 4
  %v2_2fc3c = add i32 %v1_2fc3c, -12
  %v3_2fc3c = inttoptr i32 %v2_2fc3c to i32*
  store i32 %v0_2fc3c, i32* %v3_2fc3c, align 4
  %v0_2fc41 = load i32, i32* @ebp, align 4
  %v1_2fc41 = add i32 %v0_2fc41, -28
  %v2_2fc41 = inttoptr i32 %v1_2fc41 to i32*
  %v3_2fc41 = load i32, i32* %v2_2fc41, align 4
  %v1_2fc44 = inttoptr i32 %v3_2fc41 to i32*
  %v2_2fc44 = load i32, i32* %v1_2fc44, align 4
  %v1_2fc46 = add i32 %v0_2fc41, -32
  %v2_2fc46 = inttoptr i32 %v1_2fc46 to i32*
  %v3_2fc46 = load i32, i32* %v2_2fc46, align 4
  %v1_2fc49 = inttoptr i32 %v3_2fc46 to i32*
  %v2_2fc49 = load i32, i32* %v1_2fc49, align 4
  %v12_2fc4b = icmp eq i32 %v2_2fc44, %v2_2fc49
  %v1_2fc4d = icmp eq i1 %v12_2fc4b, false
  %v2_2fc4d = zext i1 %v1_2fc4d to i32
  %v4_2fc4d = and i32 %v2_2fc49, -256
  %v5_2fc4d = or i32 %v2_2fc4d, %v4_2fc4d
  store i32 %v5_2fc4d, i32* @eax, align 8
  %v1_2fc50 = add i32 %v0_2fc41, -12
  %v2_2fc50 = inttoptr i32 %v1_2fc50 to i32*
  %v3_2fc50 = load i32, i32* %v2_2fc50, align 4
  %v3_2fc53 = icmp eq i32 %v3_2fc50, 30
  br i1 %v3_2fc53, label %bb, label %dec_label_pc_2fc5c

bb:                                               ; preds = %dec_label_pc_2fc3a
  %v1_2fc5a = call i32 @function_2fc61()
  br label %dec_label_pc_2fc5c

dec_label_pc_2fc5c:                               ; preds = %bb, %dec_label_pc_2fc3a
  %v2_2fc5a = phi i32 [ %v1_2fc5a, %bb ], [ %v5_2fc4d, %dec_label_pc_2fc3a ]
  ret i32 %v2_2fc5a

; uselistorder directives
  uselistorder i32 %v2_2fc49, { 1, 0 }
}

define i32 @function_2fc61() local_unnamed_addr {
dec_label_pc_2fc61:
  %v0_2fc62 = load i32, i32* @eax, align 8
  ret i32 %v0_2fc62
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEppEv() local_unnamed_addr {
dec_label_pc_2fc64:
  %eax.global-to-local = alloca i32, align 4
  %v2_2fc65 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2fc65
}

define i32 @function_2fc67(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fc67:
  %v0_2fc6a = load i32, i32* @ebp, align 4
  %v1_2fc6a = add i32 %v0_2fc6a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2fc6a = inttoptr i32 %v1_2fc6a to i32*
  %v3_2fc6a = load i32, i32* %v2_2fc6a, align 4
  %v2_2fc6d = add i32 %v0_2fc6a, -28
  %v3_2fc6d = inttoptr i32 %v2_2fc6d to i32*
  store i32 %v3_2fc6a, i32* %v3_2fc6d, align 4
  %v1_2fc76 = load i32, i32* @ebp, align 4
  %v2_2fc76 = add i32 %v1_2fc76, -12
  %v3_2fc76 = inttoptr i32 %v2_2fc76 to i32*
  store i32 30, i32* %v3_2fc76, align 4
  %v0_2fc7b = load i32, i32* @ebp, align 4
  %v1_2fc7b = add i32 %v0_2fc7b, -28
  %v2_2fc7b = inttoptr i32 %v1_2fc7b to i32*
  %v3_2fc7b = load i32, i32* %v2_2fc7b, align 4
  %v1_2fc7e = inttoptr i32 %v3_2fc7b to i32*
  %v2_2fc7e = load i32, i32* %v1_2fc7e, align 4
  ret i32 %v2_2fc7e
}

define i32 @function_2fc87(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fc87:
  %v0_2fc87 = load i32, i32* @ebx, align 4
  %v1_2fc87 = add i32 %v0_2fc87, 42591317
  %v2_2fc87 = inttoptr i32 %v1_2fc87 to i32*
  %v3_2fc87 = load i32, i32* %v2_2fc87, align 4
  %v4_2fc87 = add i32 %v3_2fc87, -1
  store i32 %v4_2fc87, i32* %v2_2fc87, align 4
  %v0_2fc8d = load i32, i32* @ebp, align 4
  %v1_2fc8d = add i32 %v0_2fc8d, -28
  %v2_2fc8d = inttoptr i32 %v1_2fc8d to i32*
  %v3_2fc8d = load i32, i32* %v2_2fc8d, align 4
  store i32 %v3_2fc8d, i32* @eax, align 8
  %v1_2fc90 = add i32 %v0_2fc8d, -12
  %v2_2fc90 = inttoptr i32 %v1_2fc90 to i32*
  %v3_2fc90 = load i32, i32* %v2_2fc90, align 4
  %v3_2fc93 = icmp eq i32 %v3_2fc90, 30
  br i1 %v3_2fc93, label %bb, label %dec_label_pc_2fc9c

bb:                                               ; preds = %dec_label_pc_2fc87
  %v1_2fc9a = call i32 @function_2fca1()
  br label %dec_label_pc_2fc9c

dec_label_pc_2fc9c:                               ; preds = %bb, %dec_label_pc_2fc87
  %v2_2fc9a = phi i32 [ %v1_2fc9a, %bb ], [ %v3_2fc8d, %dec_label_pc_2fc87 ]
  ret i32 %v2_2fc9a
}

define i32 @function_2fca1() local_unnamed_addr {
dec_label_pc_2fca1:
  %v0_2fca2 = load i32, i32* @eax, align 8
  ret i32 %v0_2fca2
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fca4:
  ret i32 %arg1
}

define i32 @function_2fcb2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fcb2:
  %v0_2fcb2 = load i32, i32* @eax, align 8
  %v2_2fcb2 = load i1, i1* @cf, align 1
  %v3_2fcb2 = zext i1 %v2_2fcb2 to i32
  %v4_2fcb2 = add i32 %v3_2fcb2, %v0_2fcb2
  %v22_2fcb2 = and i32 %v4_2fcb2, 255
  %v24_2fcb2 = and i32 %v0_2fcb2, -256
  %v25_2fcb2 = or i32 %v22_2fcb2, %v24_2fcb2
  ret i32 %v25_2fcb2

; uselistorder directives
  uselistorder i32 %v0_2fcb2, { 1, 0 }
}

define i32 @function_2fcb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fcb4:
  %v2_2fcb4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2fcb4 = load i32, i32* @eax, align 8
  %v4_2fcb4 = trunc i32 %v3_2fcb4 to i8
  %v5_2fcb4 = add i8 %v4_2fcb4, %v2_2fcb4
  %v21_2fcb4 = inttoptr i32 %v3_2fcb4 to i8*
  store i8 %v5_2fcb4, i8* %v21_2fcb4, align 1
  %v0_2fcb6 = load i32, i32* @eax, align 8
  %v1_2fcb6 = load i32, i32* @ebp, align 4
  %v2_2fcb6 = add i32 %v1_2fcb6, -12
  %v3_2fcb6 = inttoptr i32 %v2_2fcb6 to i32*
  store i32 %v0_2fcb6, i32* %v3_2fcb6, align 4
  %v0_2fcbb = load i32, i32* @ebp, align 4
  %v1_2fcbb = add i32 %v0_2fcbb, -28
  %v2_2fcbb = inttoptr i32 %v1_2fcbb to i32*
  %v3_2fcbb = load i32, i32* %v2_2fcbb, align 4
  %v1_2fcbe = inttoptr i32 %v3_2fcbb to i32*
  %v2_2fcbe = load i32, i32* %v1_2fcbe, align 4
  ret i32 %v2_2fcbe
}

define i32 @function_2fce0() local_unnamed_addr {
dec_label_pc_2fce0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2fce0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2fce0 = add i32 %v0_2fce0, -1
  store i32 %v1_2fce0, i32* %ecx.global-to-local, align 4
  %v0_2fce2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fce2
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2fce4:
  %stack_var_-24 = alloca i32, align 4
  %v1_2fd0e = call i32 @unknown_629e2(i32 %arg1)
  %v1_2fd16 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_2fd19 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2fd23 = call i32 @unknown_5f8be(i32 %v2_2fd19, i32 %v1_2fd16)
  ret i32 %v2_2fd23
}

define i32 @function_2fd2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd2c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2fd2c = load i32, i32* @ebp, align 4
  %v1_2fd2c = add i32 %v0_2fd2c, 1
  store i32 %v1_2fd2c, i32* @ebp, align 4
  %v0_2fd2e = load i32, i32* @eax, align 8
  %v1_2fd32 = add i32 %v0_2fd2c, -35
  %v2_2fd32 = inttoptr i32 %v1_2fd32 to i32*
  %v3_2fd32 = load i32, i32* %v2_2fd32, align 4
  %v2_2fd38 = call i32 @unknown_61d46(i32 %v3_2fd32, i32 %v0_2fd2e)
  %v4_2fd3d = trunc i32 %v2_2fd38 to i8
  %v5_2fd3d = icmp eq i8 %v4_2fd3d, 0
  %v0_2fd60 = load i32, i32* @ebp, align 4
  br i1 %v5_2fd3d, label %dec_label_pc_2fd60, label %dec_label_pc_2fd41

dec_label_pc_2fd41:                               ; preds = %dec_label_pc_2fd2c
  %v1_2fd41 = add i32 %v0_2fd60, -32
  %v2_2fd41 = inttoptr i32 %v1_2fd41 to i32*
  %v3_2fd41 = load i32, i32* %v2_2fd41, align 4
  %v1_2fd44 = add i32 %v0_2fd60, -28
  %v2_2fd44 = inttoptr i32 %v1_2fd44 to i32*
  %v3_2fd44 = load i32, i32* %v2_2fd44, align 4
  store i32 %v3_2fd44, i32* %ebx.global-to-local, align 4
  %v1_2fd47 = add i32 %v0_2fd60, -40
  %v2_2fd51 = call i32 @unknown_62582(i32 %v1_2fd47, i32 %v3_2fd41)
  %v0_2fd59 = load i32, i32* @ebp, align 4
  %v1_2fd59 = add i32 %v0_2fd59, -40
  %v2_2fd59 = inttoptr i32 %v1_2fd59 to i32*
  %v3_2fd59 = load i32, i32* %v2_2fd59, align 4
  %v1_2fd5c = load i32, i32* %ebx.global-to-local, align 4
  %v2_2fd5c = inttoptr i32 %v1_2fd5c to i32*
  store i32 %v3_2fd59, i32* %v2_2fd5c, align 4
  %v0_2fd5e = call i32 @function_2fd85()
  ret i32 %v0_2fd5e

dec_label_pc_2fd60:                               ; preds = %dec_label_pc_2fd2c
  %v1_2fd60 = add i32 %v0_2fd60, -36
  %v2_2fd60 = inttoptr i32 %v1_2fd60 to i32*
  %v3_2fd60 = load i32, i32* %v2_2fd60, align 4
  %v1_2fd66 = call i32 @unknown_61d86(i32 %v3_2fd60)
  %v1_2fd6b = add i32 %v1_2fd66, ptrtoint (i32* @global_var_c.2390 to i32)
  ret i32 %v1_2fd6b

; uselistorder directives
  uselistorder i32 %v0_2fd60, { 3, 0, 2, 1 }
}

define i32 @function_2fd71(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd71:
  %v0_2fd71 = load i32, i32* @eax, align 8
  %v2_2fd71 = add i32 %v0_2fd71, 141
  %v16_2fd71 = urem i32 %v2_2fd71, 256
  %v18_2fd71 = and i32 %v0_2fd71, -256
  %v19_2fd71 = or i32 %v16_2fd71, %v18_2fd71
  %v0_2fd73 = load i32, i32* @ebp, align 4
  %v1_2fd73 = add i32 %v0_2fd73, 1
  store i32 %v1_2fd73, i32* @ebp, align 4
  ret i32 %v19_2fd71

; uselistorder directives
  uselistorder i32 %v0_2fd71, { 1, 0 }
}

define i32 @function_2fd85() local_unnamed_addr {
dec_label_pc_2fd85:
  %v0_2fd85 = load i32, i32* @ebp, align 4
  %v1_2fd85 = add i32 %v0_2fd85, -28
  %v2_2fd85 = inttoptr i32 %v1_2fd85 to i32*
  %v3_2fd85 = load i32, i32* %v2_2fd85, align 4
  store i32 %v3_2fd85, i32* @eax, align 8
  %v1_2fd88 = add i32 %v0_2fd85, -12
  %v2_2fd88 = inttoptr i32 %v1_2fd88 to i32*
  %v3_2fd88 = load i32, i32* %v2_2fd88, align 4
  %v3_2fd8b = icmp eq i32 %v3_2fd88, 30
  br i1 %v3_2fd8b, label %bb, label %dec_label_pc_2fd94

bb:                                               ; preds = %dec_label_pc_2fd85
  %v1_2fd92 = call i32 @function_2fd99()
  br label %dec_label_pc_2fd94

dec_label_pc_2fd94:                               ; preds = %bb, %dec_label_pc_2fd85
  %v2_2fd92 = phi i32 [ %v1_2fd92, %bb ], [ %v3_2fd85, %dec_label_pc_2fd85 ]
  ret i32 %v2_2fd92
}

define i32 @function_2fd99() local_unnamed_addr {
dec_label_pc_2fd99:
  %v0_2fd9d = load i32, i32* @eax, align 8
  ret i32 %v0_2fd9d
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fda0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2fdc0 = load i32, i32* %arg1, align 4
  %v1_2fdc5 = inttoptr i32 %arg2 to i32*
  %v2_2fdc5 = load i32, i32* %v1_2fdc5, align 4
  %v12_2fdc7 = icmp eq i32 %v2_2fdc0, %v2_2fdc5
  %v1_2fdc9 = icmp eq i1 %v12_2fdc7, false
  %v2_2fdc9 = zext i1 %v1_2fdc9 to i32
  %v4_2fdc9 = and i32 %v2_2fdc5, -256
  %v5_2fdc9 = or i32 %v2_2fdc9, %v4_2fdc9
  store i32 %v5_2fdc9, i32* @eax, align 8
  %v3_2fdd6 = call i32 @function_2fddd(i32 %arg2, i32 %tmp101)
  ret i32 %v3_2fdd6

; uselistorder directives
  uselistorder i32 %v2_2fdc5, { 1, 0 }
}

define i32 @function_2fddd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fddd:
  %v0_2fdde = load i32, i32* @eax, align 8
  ret i32 %v0_2fdde
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2fde0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_2fdfa = load i32, i32* %arg1, align 4
  %v1_2fdfc = inttoptr i32 %v2_2fdfa to i32*
  %v2_2fdfc = load i32, i32* %v1_2fdfc, align 4
  store i32 %v2_2fdfc, i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v2_2fe10 = call i32 @function_2fe17(i32 %tmp99)
  ret i32 %v2_2fe10
}

define i32 @function_2fe17(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe17:
  %v0_2fe18 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe18
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1ISsPKcNS_8functionIFSsSH_EEEEENS3_5mutexEEEEEEEEEPT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe1a:
  ret i32 30
}

define i32 @function_2fe35(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe35:
  %eax.global-to-local = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2fe38 = load i32, i32* @ebp, align 4
  %v1_2fe38 = add i32 %v0_2fe38, -28
  %v2_2fe38 = inttoptr i32 %v1_2fe38 to i32*
  %v3_2fe38 = load i32, i32* %v2_2fe38, align 4
  store i32 %v3_2fe38, i32* %eax.global-to-local, align 8
  %v1_2fe3b = inttoptr i32 %v3_2fe38 to i32*
  store i32 0, i32* %v1_2fe3b, align 4
  %v3_2fe41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2fe41
}

define i32 @function_2fe44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe44:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fe4e() local_unnamed_addr {
dec_label_pc_2fe4e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fe4e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fe4e
}

define i32 @function_2fe5a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe5a:
  %v0_2fe5a = load i8, i8* inttoptr (i32 1166737411 to i8*), align 1
  %v1_2fe5a = load i32, i32* @ecx, align 4
  %v2_2fe5a = udiv i32 %v1_2fe5a, 256
  %v3_2fe5a = trunc i32 %v2_2fe5a to i8
  %v4_2fe5a = sub i8 %v0_2fe5a, %v3_2fe5a
  store i8 %v4_2fe5a, i8* inttoptr (i32 1166737411 to i8*), align 1
  %v0_2fe60 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe60
}

define i32 @function_2fe62(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe62:
  %v0_2fe62 = load i32, i32* @ebx, align 4
  %v1_2fe62 = add i32 %v0_2fe62, 862319685
  %v2_2fe62 = inttoptr i32 %v1_2fe62 to i8*
  %v3_2fe62 = load i8, i8* %v2_2fe62, align 1
  %v4_2fe62 = load i32, i32* @ecx, align 4
  %v5_2fe62 = trunc i32 %v4_2fe62 to i8
  %v6_2fe62 = load i1, i1* @cf, align 1
  %v7_2fe62 = zext i1 %v6_2fe62 to i8
  %v8_2fe62 = sub i8 %v3_2fe62, %v5_2fe62
  %v9_2fe62 = add i8 %v8_2fe62, %v7_2fe62
  store i8 %v9_2fe62, i8* %v2_2fe62, align 1
  %v0_2fe68 = load i32, i32* @eax, align 8
  %v1_2fe68 = add i32 %v0_2fe68, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_2fe68 = icmp eq i32 %v1_2fe68, 0
  store i32 %v1_2fe68, i32* @eax, align 8
  br i1 %v10_2fe68, label %bb, label %dec_label_pc_2fe6f

bb:                                               ; preds = %dec_label_pc_2fe62
  %v1_2fe6d = call i32 @function_2fe9f()
  store i32 %v1_2fe6d, i32* @eax, align 8
  br label %dec_label_pc_2fe6f

dec_label_pc_2fe6f:                               ; preds = %bb, %dec_label_pc_2fe62
  %v0_2fe6f = call i32 @function_2fe9a()
  ret i32 %v0_2fe6f
}

define i32 @function_2fe72() local_unnamed_addr {
dec_label_pc_2fe72:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fe72 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fe72
}

define i32 @function_2fe94(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe94:
  %v0_2fe94 = load i32, i32* @eax, align 8
  %v2_2fe94 = load i32, i32* @ecx, align 4
  %v3_2fe94 = lshr i32 %v2_2fe94, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_2fe94 = add i32 %v3_2fe94, %v0_2fe94
  %v20_2fe94 = and i32 %v5_2fe94, 255
  %v22_2fe94 = and i32 %v0_2fe94, -256
  %v23_2fe94 = or i32 %v20_2fe94, %v22_2fe94
  ret i32 %v23_2fe94

; uselistorder directives
  uselistorder i32 %v0_2fe94, { 1, 0 }
}

define i32 @function_2fe9a() local_unnamed_addr {
dec_label_pc_2fe9a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fe9f() local_unnamed_addr {
dec_label_pc_2fe9f:
  %v0_2fea4 = load i32, i32* @eax, align 8
  ret i32 %v0_2fea4
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal1_implISsPKcNS3_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS3_10connectionES7_EEENS3_5mutexEE16invocation_stateEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fea6:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2fed7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fed7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fed8() local_unnamed_addr {
dec_label_pc_2fed8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2fed8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2fed8 = add i32 %v0_2fed8, -532313149
  %v2_2fed8 = inttoptr i32 %v1_2fed8 to i32*
  %v3_2fed8 = load i32, i32* %v2_2fed8, align 4
  %v4_2fed8 = add i32 %v3_2fed8, -1
  store i32 %v4_2fed8, i32* %v2_2fed8, align 4
  %v0_2fede = load i32, i32* %eax.global-to-local, align 8
  %v0_2fee2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2fee5 = call i32 @unknown_62d08(i32 %v0_2fee2, i32 %v0_2fede)
  store i32 %v2_2fee5, i32* %eax.global-to-local, align 8
  %v0_2feea = load i32, i32* %ebp.global-to-local, align 4
  %v1_2feea = add i32 %v0_2feea, -28
  %v2_2feea = inttoptr i32 %v1_2feea to i32*
  %v3_2feea = load i32, i32* %v2_2feea, align 4
  store i32 %v3_2feea, i32* %eax.global-to-local, align 8
  %v0_2feed = load i32, i32* %ebx.global-to-local, align 4
  %v2_2feed = inttoptr i32 %v3_2feea to i32*
  store i32 %v0_2feed, i32* %v2_2feed, align 4
  %v0_2feef = load i32, i32* %ebp.global-to-local, align 4
  %v1_2feef = add i32 %v0_2feef, -12
  %v2_2feef = inttoptr i32 %v1_2feef to i32*
  %v3_2feef = load i32, i32* %v2_2feef, align 4
  %v2_2fef2 = xor i32 %v3_2feef, 30
  %v3_2fef2 = icmp eq i32 %v2_2fef2, 0
  store i32 %v2_2fef2, i32* @eax, align 8
  br i1 %v3_2fef2, label %bb, label %dec_label_pc_2fefb

bb:                                               ; preds = %dec_label_pc_2fed8
  %v1_2fef9 = call i32 @function_2ff2b()
  store i32 %v1_2fef9, i32* @eax, align 8
  br label %dec_label_pc_2fefb

dec_label_pc_2fefb:                               ; preds = %bb, %dec_label_pc_2fed8
  %v0_2fefb = call i32 @function_2ff26()
  store i32 %v0_2fefb, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fefb
}

define i32 @function_2fefe() local_unnamed_addr {
dec_label_pc_2fefe:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fefe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fefe
}

define i32 @function_2ff1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff1c:
  %v0_2ff1c = call i32 @unknown_62db7()
  ret i32 %v0_2ff1c
}

define i32 @function_2ff26() local_unnamed_addr {
dec_label_pc_2ff26:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ff2b() local_unnamed_addr {
dec_label_pc_2ff2b:
  %v0_2ff30 = load i32, i32* @eax, align 8
  ret i32 %v0_2ff30
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff32:
  %stack_var_-17 = alloca i32, align 4
  %v2_2ff4f = ptrtoint i32* %stack_var_-17 to i32
  %v3_2ff63 = call i32 @unknown_592f6(i32 %arg1, i32 %arg2, i32 %v2_2ff4f)
  store i32 0, i32* @eax, align 8
  %v1_2ff72 = call i32 @function_2ff79()
  ret i32 %v1_2ff72
}

define i32 @function_2ff79() local_unnamed_addr {
dec_label_pc_2ff79:
  %v0_2ff7a = load i32, i32* @eax, align 8
  ret i32 %v0_2ff7a
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9push_backERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff7c:
  %v1_2ff9c = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_2ff9c = inttoptr i32 %v1_2ff9c to i32*
  %v3_2ff9c = load i32, i32* %v2_2ff9c, align 4
  %v1_2ffa5 = add i32 %arg1, 120
  %v2_2ffa5 = inttoptr i32 %v1_2ffa5 to i32*
  %v3_2ffa5 = load i32, i32* %v2_2ffa5, align 4
  %v12_2ffa8 = icmp eq i32 %v3_2ff9c, %v3_2ffa5
  br i1 %v12_2ffa8, label %dec_label_pc_2ffc0, label %dec_label_pc_2ffac

dec_label_pc_2ffac:                               ; preds = %dec_label_pc_2ff7c
  %v2_2ffb9 = call i32 @unknown_62ed4(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_2ffed

dec_label_pc_2ffc0:                               ; preds = %dec_label_pc_2ff7c
  %v3_2ffc3 = load i32, i32* %v2_2ff9c, align 4
  %v1_2ffc9 = add i32 %v3_2ffc3, 1
  %v2_2ffd6 = call i32 @unknown_62fb0(i32 %arg1, i32 %v1_2ffc9)
  %v2_2ffe8 = call i32 @unknown_62ed4(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_2ffed

dec_label_pc_2ffed:                               ; preds = %dec_label_pc_2ffc0, %dec_label_pc_2ffac
  store i32 0, i32* @eax, align 8
  %v1_2fff7 = call i32 @function_2fffe()
  ret i32 %v1_2fff7

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_62ed4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 4, 3 }
}

define i32 @function_2fffe() local_unnamed_addr {
dec_label_pc_2fffe:
  %v0_2ffff = load i32, i32* @eax, align 8
  ret i32 %v0_2ffff
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E5equalERKSY_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30000:
  %v2_3002a = call i32 @unknown_53278(i32 %arg1, i32 %arg2)
  store i32 %v2_3002a, i32* @eax, align 8
  %v1_30039 = call i32 @function_30040()
  ret i32 %v1_30039
}

define i32 @function_30040() local_unnamed_addr {
dec_label_pc_30040:
  %v0_30041 = load i32, i32* @eax, align 8
  ret i32 %v0_30041
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E11dereferenceEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30042:
  %v1_3005e = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3005e = inttoptr i32 %v1_3005e to i32*
  %v3_3005e = load i32, i32* %v2_3005e, align 4
  %v1_30064 = call i32 @unknown_63132(i32 %v3_3005e)
  %v4_30069 = trunc i32 %v1_30064 to i8
  %v5_30069 = icmp eq i8 %v4_30069, 0
  br i1 %v5_30069, label %bb, label %dec_label_pc_3006d

bb:                                               ; preds = %dec_label_pc_30042
  %v1_3006b = call i32 @function_300ba()
  br label %dec_label_pc_3006d

dec_label_pc_3006d:                               ; preds = %bb, %dec_label_pc_30042
  %v1_30073 = call i32 @unknown_58f30(i32 %arg1)
  ret i32 %v1_30073
}

define i32 @function_30080(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30080:
  %v0_30080 = load i16, i16* @es, align 2
  %v1_30080 = load i32, i32* @eax, align 8
  %v2_30080 = inttoptr i32 %v1_30080 to i16*
  store i16 %v0_30080, i16* %v2_30080, align 2
  %v2_30082 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30082 = load i32, i32* @eax, align 8
  %v4_30082 = trunc i32 %v3_30082 to i8
  %v5_30082 = add i8 %v4_30082, %v2_30082
  %v21_30082 = inttoptr i32 %v3_30082 to i8*
  store i8 %v5_30082, i8* %v21_30082, align 1
  %v0_30084 = load i32, i32* @ebp, align 4
  %v1_30084 = add i32 %v0_30084, -20
  %v0_30087 = load i32, i32* @eax, align 8
  %v0_3008b = load i32, i32* @ecx, align 4
  %v3_30092 = call i32 @unknown_6316a(i32 %v1_30084, i32 %v0_3008b, i32 %v0_30087)
  %v0_3009a = load i32, i32* @ebp, align 4
  %v1_3009a = add i32 %v0_3009a, -28
  %v2_3009a = inttoptr i32 %v1_3009a to i32*
  %v3_3009a = load i32, i32* %v2_3009a, align 4
  %v1_3009d = add i32 %v3_3009a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3009d = inttoptr i32 %v1_3009d to i32*
  %v3_3009d = load i32, i32* %v2_3009d, align 4
  %v1_300a0 = add i32 %v0_3009a, -20
  %v2_300aa = call i32 @unknown_631d0(i32 %v3_3009d, i32 %v1_300a0)
  %v0_300af = load i32, i32* @ebp, align 4
  %v1_300af = add i32 %v0_300af, -20
  ret i32 %v1_300af
}

define i32 @function_300ba() local_unnamed_addr {
dec_label_pc_300ba:
  %v0_300ba = load i32, i32* @ebp, align 4
  %v1_300ba = add i32 %v0_300ba, -28
  %v2_300ba = inttoptr i32 %v1_300ba to i32*
  %v3_300ba = load i32, i32* %v2_300ba, align 4
  %v1_300bd = add i32 %v3_300ba, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_300bd = inttoptr i32 %v1_300bd to i32*
  %v3_300bd = load i32, i32* %v2_300bd, align 4
  %v1_300c3 = call i32 @unknown_493fa(i32 %v3_300bd)
  ret i32 %v1_300c3
}

define i32 @function_300ca(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_300ca:
  %v0_300cb = load i32, i32* @edx, align 8
  %v3_300cb = icmp eq i32 %v0_300cb, 30
  br i1 %v3_300cb, label %bb, label %dec_label_pc_300d4

bb:                                               ; preds = %dec_label_pc_300ca
  %v1_300d2 = call i32 @function_30139()
  store i32 %v1_300d2, i32* @eax, align 8
  br label %dec_label_pc_300d4

dec_label_pc_300d4:                               ; preds = %bb, %dec_label_pc_300ca
  %v0_300d4 = call i32 @function_30134()
  ret i32 %v0_300d4
}

define i32 @function_300e5() local_unnamed_addr {
dec_label_pc_300e5:
  %ebx.global-to-local = alloca i32, align 4
  %v0_300e7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_300e7, i32* @edx, align 8
  %v0_300e9 = call i32 @function_300fc()
  ret i32 %v0_300e9
}

define i32 @function_300ec() local_unnamed_addr {
dec_label_pc_300ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_300ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_300ec
}

define i32 @function_300fc() local_unnamed_addr {
dec_label_pc_300fc:
  %v0_300fc = load i32, i32* @edx, align 8
  %v10_300fc = icmp eq i32 %v0_300fc, 1
  br i1 %v10_300fc, label %bb, label %dec_label_pc_300fc.dec_label_pc_30101_crit_edge

dec_label_pc_300fc.dec_label_pc_30101_crit_edge:  ; preds = %dec_label_pc_300fc
  %v3_30101.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30101

bb:                                               ; preds = %dec_label_pc_300fc
  %v1_300ff = call i32 @function_30109()
  br label %dec_label_pc_30101

dec_label_pc_30101:                               ; preds = %dec_label_pc_300fc.dec_label_pc_30101_crit_edge, %bb
  %v3_30101 = phi i32 [ %v3_30101.pre, %dec_label_pc_300fc.dec_label_pc_30101_crit_edge ], [ %v1_300ff, %bb ]
  ret i32 %v3_30101

; uselistorder directives
  uselistorder label %dec_label_pc_30101, { 1, 0 }
}

define i32 @function_30109() local_unnamed_addr {
dec_label_pc_30109:
  %v3_30109 = load i32, i32* @eax, align 8
  ret i32 %v3_30109
}

define i32 @function_30134() local_unnamed_addr {
dec_label_pc_30134:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30139() local_unnamed_addr {
dec_label_pc_30139:
  %v0_30139 = load i32, i32* @ebp, align 4
  %v1_3013e = inttoptr i32 %v0_30139 to i32*
  %v2_3013e = load i32, i32* %v1_3013e, align 4
  store i32 %v2_3013e, i32* @ebp, align 4
  %v0_3013f = load i32, i32* @eax, align 8
  ret i32 %v0_3013f
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12assign_valueERKSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_30140:
  %v1_3016a = call i32 @unknown_4e89e(i32 %arg1)
  ret i32 %v1_3016a
}

define i32 @function_3018e() local_unnamed_addr {
dec_label_pc_3018e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3018e = load i32, i32* %ecx.global-to-local, align 4
  %v1_3018e = add i32 %v0_3018e, -1
  store i32 %v1_3018e, i32* %ecx.global-to-local, align 4
  %v0_30190 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30190
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E9incrementEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30192:
  %v1_301af = call i32 @unknown_593e6(i32 %arg1)
  ret i32 %v1_301af
}

define i32 @function_301b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_301b6:
  %v0_301ba = call i32 @unknown_53ba0()
  %v0_301bf = load i32, i32* @ebp, align 4
  %v1_301bf = add i32 %v0_301bf, -28
  %v2_301bf = inttoptr i32 %v1_301bf to i32*
  %v3_301bf = load i32, i32* %v2_301bf, align 4
  %v1_301c2 = add i32 %v3_301bf, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_301c2 = inttoptr i32 %v1_301c2 to i32*
  %v3_301c2 = load i32, i32* %v2_301c2, align 4
  %v1_301c8 = call i32 @unknown_63362(i32 %v3_301c2)
  %v0_301cd = load i32, i32* @ebp, align 4
  %v1_301cd = add i32 %v0_301cd, -12
  %v2_301cd = inttoptr i32 %v1_301cd to i32*
  %v3_301cd = load i32, i32* %v2_301cd, align 4
  %v2_301d0 = xor i32 %v3_301cd, 30
  %v3_301d0 = icmp eq i32 %v2_301d0, 0
  store i32 %v2_301d0, i32* @eax, align 8
  br i1 %v3_301d0, label %bb, label %dec_label_pc_301d9

bb:                                               ; preds = %dec_label_pc_301b6
  %v1_301d7 = call i32 @function_301de()
  br label %dec_label_pc_301d9

dec_label_pc_301d9:                               ; preds = %bb, %dec_label_pc_301b6
  %v2_301d7 = phi i32 [ %v1_301d7, %bb ], [ %v2_301d0, %dec_label_pc_301b6 ]
  ret i32 %v2_301d7
}

define i32 @function_301de() local_unnamed_addr {
dec_label_pc_301de:
  %v0_301df = load i32, i32* @eax, align 8
  ret i32 %v0_301df
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_301e0:
  ret i32 0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSt6vectorISsSaISsEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3020a:
  store i32 0, i32* @eax, align 8
  %v2_3022b = call i32 @function_30232(i32 %arg1)
  ret i32 %v2_3022b
}

define i32 @function_30232(i32 %arg1) local_unnamed_addr {
dec_label_pc_30232:
  %v0_30233 = load i32, i32* @eax, align 8
  ret i32 %v0_30233
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIxEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30234:
  %v2_3025f = sub i32 %arg2, %arg1
  %v2_30263 = ashr i32 %v2_3025f, ptrtoint (i32* @global_var_3.2378 to i32)
  %v3_30263 = icmp eq i32 %v2_30263, 0
  br i1 %v3_30263, label %bb, label %dec_label_pc_3026f

bb:                                               ; preds = %dec_label_pc_30234
  %v4_3026d = call i32 @function_30297(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3026f

dec_label_pc_3026f:                               ; preds = %bb, %dec_label_pc_30234
  %v2_3027c = shl i32 %v2_30263, ptrtoint (i32* @global_var_3.2378 to i32)
  %v5_30281 = sub i32 %arg3, %v2_3027c
  ret i32 %v5_30281
}

define i32 @function_30297(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30297:
  %v0_30297 = load i32, i32* @ebp, align 4
  %v1_30297 = add i32 %v0_30297, -16
  %v2_30297 = inttoptr i32 %v1_30297 to i32*
  %v3_30297 = load i32, i32* %v2_30297, align 4
  %v2_3029a = shl i32 %v3_30297, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_3029f = add i32 %v0_30297, -36
  %v3_3029f = inttoptr i32 %v2_3029f to i32*
  %v4_3029f = load i32, i32* %v3_3029f, align 4
  %v5_3029f = sub i32 %v4_3029f, %v2_3029a
  ret i32 %v5_3029f
}

define i32 @function_302ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_302ae:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_302b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_302b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_302b3() local_unnamed_addr {
dec_label_pc_302b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_302b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_302b4
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_302b6:
  ret i32 %arg1
}

define i32 @function_302dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_302dc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_302e1() local_unnamed_addr {
dec_label_pc_302e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_302e2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_302e2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_302e4:
  %v1_3030d = call i32 @unknown_634ea(i32 %arg1)
  %v10_30312 = icmp ult i32 %v1_3030d, %arg2
  %v1_30315 = zext i1 %v10_30312 to i32
  %v3_30315 = and i32 %v1_3030d, -256
  %v4_30315 = or i32 %v1_30315, %v3_30315
  %v5_30318 = icmp eq i1 %v10_30312, false
  br i1 %v5_30318, label %bb, label %dec_label_pc_3031c

bb:                                               ; preds = %dec_label_pc_302e4
  %v1_3031a = call i32 @function_30321()
  br label %dec_label_pc_3031c

dec_label_pc_3031c:                               ; preds = %bb, %dec_label_pc_302e4
  %v2_3031a = phi i32 [ %v1_3031a, %bb ], [ %v4_30315, %dec_label_pc_302e4 ]
  ret i32 %v2_3031a

; uselistorder directives
  uselistorder i1 %v10_30312, { 1, 0 }
}

define i32 @function_30321() local_unnamed_addr {
dec_label_pc_30321:
  %v0_30321 = load i32, i32* @ebp, align 4
  %v1_30321 = add i32 %v0_30321, -32
  %v2_30321 = inttoptr i32 %v1_30321 to i32*
  %v3_30321 = load i32, i32* %v2_30321, align 4
  %v2_30328 = mul i32 %v3_30321, 3
  %v2_3032a = shl i32 %v2_30328, ptrtoint (i32* @global_var_3.2378 to i32)
  ret i32 %v2_3032a
}

define i32 @function_30334(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30334:
  %v0_30334 = load i32, i32* @ebx, align 4
  %v1_30334 = add i32 %v0_30334, 862319701
  %v2_30334 = inttoptr i32 %v1_30334 to i32*
  %v3_30334 = load i32, i32* %v2_30334, align 4
  %v4_30334 = add i32 %v3_30334, -1
  store i32 %v4_30334, i32* %v2_30334, align 4
  %v0_3033a = load i32, i32* @eax, align 8
  %v1_3033a = load i1, i1* @cf, align 1
  %v2_3033a = zext i1 %v1_3033a to i32
  %v3_3033a = add i32 %v0_3033a, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_3033a = add i32 %v3_3033a, %v2_3033a
  %v14_3033a = icmp eq i32 %v4_3033a, 0
  store i32 %v4_3033a, i32* @eax, align 8
  br i1 %v14_3033a, label %bb, label %dec_label_pc_30341

bb:                                               ; preds = %dec_label_pc_30334
  %v1_3033f = call i32 @function_30346()
  br label %dec_label_pc_30341

dec_label_pc_30341:                               ; preds = %bb, %dec_label_pc_30334
  %v2_3033f = phi i32 [ %v1_3033f, %bb ], [ %v4_3033a, %dec_label_pc_30334 ]
  ret i32 %v2_3033f
}

define i32 @function_30346() local_unnamed_addr {
dec_label_pc_30346:
  %v0_30347 = load i32, i32* @eax, align 8
  ret i32 %v0_30347
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30348:
  ret i32 %arg3
}

define i32 @function_3035e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3035e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3035e = load i32, i32* @ebp, align 4
  %v1_3035e = add i32 %v0_3035e, 1
  store i32 %v1_3035e, i32* @ebp, align 4
  %v0_30362 = load i32, i32* @eax, align 8
  %v1_30362 = trunc i32 %v0_30362 to i8
  %v2_30362 = load i1, i1* @cf, align 1
  %v3_30362 = zext i1 %v2_30362 to i8
  %v4_30362 = add i8 %v3_30362, %v1_30362
  %v22_30362 = zext i8 %v4_30362 to i32
  %v24_30362 = and i32 %v0_30362, -256
  %v25_30362 = or i32 %v22_30362, %v24_30362
  store i32 %v25_30362, i32* %eax.global-to-local, align 8
  %v1_30364 = inttoptr i32 %v25_30362 to i8*
  %v2_30364 = load i8, i8* %v1_30364, align 1
  %v5_30364 = add i8 %v2_30364, %v4_30362
  store i8 %v5_30364, i8* %v1_30364, align 1
  %v0_30366 = load i32, i32* %eax.global-to-local, align 8
  %v1_30366 = load i32, i32* @ebp, align 4
  %v2_30366 = add i32 %v1_30366, -12
  %v3_30366 = inttoptr i32 %v2_30366 to i32*
  store i32 %v0_30366, i32* %v3_30366, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3036b = load i32, i32* @ebp, align 4
  %v1_3036b = add i32 %v0_3036b, -28
  %v2_3036b = inttoptr i32 %v1_3036b to i32*
  %v3_3036b = load i32, i32* %v2_3036b, align 4
  store i32 %v3_3036b, i32* %eax.global-to-local, align 8
  %v1_30371 = call i32 @unknown_6357e(i32 %v3_3036b)
  store i32 %v1_30371, i32* %eax.global-to-local, align 8
  %v1_30376 = load i32, i32* @ebp, align 4
  %v2_30376 = add i32 %v1_30376, -32
  %v3_30376 = inttoptr i32 %v2_30376 to i32*
  %v4_30376 = load i32, i32* %v3_30376, align 4
  %v10_30376 = icmp ult i32 %v1_30371, %v4_30376
  %v1_30379 = zext i1 %v10_30376 to i32
  %v3_30379 = and i32 %v1_30371, -256
  %v4_30379 = or i32 %v1_30379, %v3_30379
  store i32 %v4_30379, i32* %eax.global-to-local, align 8
  ret i32 %v4_30379
}

define i32 @function_3037e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3037e:
  %v0_3037e = load i1, i1* @zf, align 1
  br i1 %v0_3037e, label %bb, label %dec_label_pc_3037e.dec_label_pc_30380_crit_edge

dec_label_pc_3037e.dec_label_pc_30380_crit_edge:  ; preds = %dec_label_pc_3037e
  %v2_3037e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30380

bb:                                               ; preds = %dec_label_pc_3037e
  %v1_3037e = call i32 @function_30385()
  br label %dec_label_pc_30380

dec_label_pc_30380:                               ; preds = %dec_label_pc_3037e.dec_label_pc_30380_crit_edge, %bb
  %v2_3037e = phi i32 [ %v2_3037e.pre, %dec_label_pc_3037e.dec_label_pc_30380_crit_edge ], [ %v1_3037e, %bb ]
  ret i32 %v2_3037e

; uselistorder directives
  uselistorder label %dec_label_pc_30380, { 1, 0 }
}

define i32 @function_30385() local_unnamed_addr {
dec_label_pc_30385:
  %v0_30385 = load i32, i32* @ebp, align 4
  %v1_30385 = add i32 %v0_30385, -32
  %v2_30385 = inttoptr i32 %v1_30385 to i32*
  %v3_30385 = load i32, i32* %v2_30385, align 4
  %v2_30388 = mul i32 %v3_30385, 32
  %tmp1 = and i32 %v3_30385, 134217728
  %v11_30388 = icmp ne i32 %tmp1, 0
  store i1 %v11_30388, i1* @cf, align 1
  ret i32 %v2_30388

; uselistorder directives
  uselistorder i32 %v3_30385, { 1, 0 }
  uselistorder i32 134217728, { 1, 0 }
}

define i32 @function_303a3() local_unnamed_addr {
dec_label_pc_303a3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_303a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_303a3 = add i32 %v0_303a3, -1
  store i32 %v1_303a3, i32* %ecx.global-to-local, align 4
  %v0_303a5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_303a5
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISsEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_303a6:
  ret i32 %arg1
}

define i32 @function_303b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_303b0:
  %v0_303b0 = load i32, i32* @ebp, align 4
  %v1_303b0 = add i32 %v0_303b0, 1
  store i32 %v1_303b0, i32* @ebp, align 4
  %v2_303b8 = add i32 %v0_303b0, -11
  %v3_303b8 = inttoptr i32 %v2_303b8 to i32*
  store i32 30, i32* %v3_303b8, align 4
  store i32 214748364, i32* @eax, align 8
  %v0_303c2 = load i32, i32* @ebp, align 4
  %v1_303c2 = add i32 %v0_303c2, -12
  %v2_303c2 = inttoptr i32 %v1_303c2 to i32*
  %v3_303c2 = load i32, i32* %v2_303c2, align 4
  %v3_303c5 = icmp eq i32 %v3_303c2, 30
  br i1 %v3_303c5, label %bb, label %dec_label_pc_303ce

bb:                                               ; preds = %dec_label_pc_303b0
  %v1_303cc = call i32 @function_303d3()
  br label %dec_label_pc_303ce

dec_label_pc_303ce:                               ; preds = %bb, %dec_label_pc_303b0
  %v2_303cc = phi i32 [ %v1_303cc, %bb ], [ 214748364, %dec_label_pc_303b0 ]
  ret i32 %v2_303cc
}

define i32 @function_303d3() local_unnamed_addr {
dec_label_pc_303d3:
  %v0_303d4 = load i32, i32* @eax, align 8
  ret i32 %v0_303d4
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeI8CNetAddrEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_303d6:
  ret i32 134217727
}

define i32 @function_303f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_303f8:
  %zf.global-to-local = alloca i1, align 1
  %v0_303f8 = load i32, i32* @eax, align 8
  %v1_303f8 = trunc i32 %v0_303f8 to i8
  %v2_303f8 = load i1, i1* @cf, align 1
  %v3_303f8 = zext i1 %v2_303f8 to i8
  %v4_303f8 = add i8 %v3_303f8, %v1_303f8
  %v13_303f8 = icmp eq i8 %v4_303f8, 0
  store i1 %v13_303f8, i1* %zf.global-to-local, align 1
  %v22_303f8 = zext i8 %v4_303f8 to i32
  %v24_303f8 = and i32 %v0_303f8, -256
  %v25_303f8 = or i32 %v22_303f8, %v24_303f8
  store i32 %v25_303f8, i32* @eax, align 8
  %v1_303fa = inttoptr i32 %v25_303f8 to i8*
  %v2_303fa = load i8, i8* %v1_303fa, align 1
  %v5_303fa = add i8 %v2_303fa, %v4_303f8
  %v15_303fa = icmp eq i8 %v5_303fa, 0
  store i1 %v15_303fa, i1* %zf.global-to-local, align 1
  store i8 %v5_303fa, i8* %v1_303fa, align 1
  %v0_303fc = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_303fc, label %bb, label %dec_label_pc_303f8.dec_label_pc_303fe_crit_edge

dec_label_pc_303f8.dec_label_pc_303fe_crit_edge:  ; preds = %dec_label_pc_303f8
  %v2_303fc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_303fe

bb:                                               ; preds = %dec_label_pc_303f8
  %v1_303fc = call i32 @function_30403()
  br label %dec_label_pc_303fe

dec_label_pc_303fe:                               ; preds = %dec_label_pc_303f8.dec_label_pc_303fe_crit_edge, %bb
  %v2_303fc = phi i32 [ %v2_303fc.pre, %dec_label_pc_303f8.dec_label_pc_303fe_crit_edge ], [ %v1_303fc, %bb ]
  ret i32 %v2_303fc

; uselistorder directives
  uselistorder label %dec_label_pc_303fe, { 1, 0 }
}

define i32 @function_30403() local_unnamed_addr {
dec_label_pc_30403:
  %v0_30404 = load i32, i32* @eax, align 8
  ret i32 %v0_30404
}

define i32 @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxjxEEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30405:
  %v3_3043c = call i32 @unknown_6366a(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_3043c
}

define i32 @function_30442(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30442:
  %v0_30442 = load i32, i32* @ebp, align 4
  %v1_30442 = add i32 %v0_30442, 1
  store i32 %v1_30442, i32* @ebp, align 4
  %v0_30444 = load i32, i32* @eax, align 8
  %v2_30444 = xor i32 %v0_30444, 30
  %v3_30444 = icmp eq i32 %v2_30444, 0
  store i32 %v2_30444, i32* @eax, align 8
  br i1 %v3_30444, label %bb, label %dec_label_pc_3044d

bb:                                               ; preds = %dec_label_pc_30442
  %v1_3044b = call i32 @function_30452()
  br label %dec_label_pc_3044d

dec_label_pc_3044d:                               ; preds = %bb, %dec_label_pc_30442
  %v2_3044b = phi i32 [ %v1_3044b, %bb ], [ %v2_30444, %dec_label_pc_30442 ]
  ret i32 %v2_3044b
}

define i32 @function_30450(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30450:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30452() local_unnamed_addr {
dec_label_pc_30452:
  %v0_30453 = load i32, i32* @eax, align 8
  ret i32 %v0_30453
}

define i32 @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEixEvT_T0_S8_T1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_30454:
  ret i32 %arg2
}

define i32 @function_304ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_304ea:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_304ea = call i32 @unknown_51864(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v0_304f2 = load i32, i32* @ebp, align 4
  %v1_304f2 = add i32 %v0_304f2, -44
  %v1_304f8 = call i32 @unknown_4c980(i32 %v1_304f2)
  %v1_304fd = add i32 %v1_304f8, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_304fd = inttoptr i32 %v1_304fd to i32*
  %v3_304fd = load i32, i32* %v2_304fd, align 4
  store i32 %v3_304fd, i32* %edx.global-to-local, align 8
  %v1_30500 = inttoptr i32 %v1_304f8 to i32*
  %v2_30500 = load i32, i32* %v1_30500, align 4
  %v0_30507 = load i32, i32* @esi, align 4
  %v5_30509 = icmp slt i32 %v0_30507, %v3_304fd
  br i1 %v5_30509, label %dec_label_pc_3051c, label %dec_label_pc_3050b

dec_label_pc_3050b:                               ; preds = %dec_label_pc_304ea
  %v8_3050d = icmp sgt i32 %v0_30507, %v3_304fd
  br i1 %v8_3050d, label %dec_label_pc_30518, label %dec_label_pc_3050f

dec_label_pc_3050f:                               ; preds = %dec_label_pc_3050b
  %v0_3050f = load i32, i32* @ebx, align 4
  %v7_3050f = icmp ult i32 %v0_3050f, %v2_30500
  br i1 %v7_3050f, label %dec_label_pc_3051c, label %dec_label_pc_30518

dec_label_pc_30518:                               ; preds = %dec_label_pc_3050b, %dec_label_pc_3050f
  br label %dec_label_pc_30525

dec_label_pc_3051c:                               ; preds = %dec_label_pc_3050f, %dec_label_pc_304ea
  %v0_3051c = load i32, i32* @ebp, align 4
  %v1_3051c = add i32 %v0_3051c, -52
  %v2_3051c = inttoptr i32 %v1_3051c to i32*
  %v3_3051c = load i32, i32* %v2_3051c, align 4
  %v1_3051f = add i32 %v3_3051c, -1
  store i32 %v1_3051f, i32* %v2_3051c, align 4
  br label %dec_label_pc_30525

dec_label_pc_30525:                               ; preds = %dec_label_pc_30518, %dec_label_pc_3051c
  %v0_30525 = load i32, i32* @ebp, align 4
  %v1_30525 = add i32 %v0_30525, -32
  %v1_3052f = add i32 %v0_30525, -60
  store i32 %v1_3052f, i32* %edx.global-to-local, align 8
  %v2_30539 = call i32 @unknown_51864(i32 %v1_30525, i32 %v1_3052f)
  %v0_30541 = load i32, i32* @ebp, align 4
  %v1_30541 = add i32 %v0_30541, -32
  %v1_30547 = call i32 @unknown_4c980(i32 %v1_30541)
  store i32 %v1_30547, i32* %ebx.global-to-local, align 4
  %v0_3054e = load i32, i32* @ebp, align 4
  %v1_3054e = add i32 %v0_3054e, -36
  %v1_30558 = add i32 %v0_3054e, -60
  store i32 %v1_30558, i32* %edx.global-to-local, align 8
  %v2_30562 = call i32 @unknown_51864(i32 %v1_3054e, i32 %v1_30558)
  %v0_3056a = load i32, i32* @ebp, align 4
  %v1_3056a = add i32 %v0_3056a, -36
  %v1_30570 = call i32 @unknown_4c980(i32 %v1_3056a)
  %v1_30575 = add i32 %v1_30570, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_30575 = inttoptr i32 %v1_30575 to i32*
  %v3_30575 = load i32, i32* %v2_30575, align 4
  store i32 %v3_30575, i32* %edx.global-to-local, align 8
  %v1_30578 = inttoptr i32 %v1_30570 to i32*
  %v2_30578 = load i32, i32* %v1_30578, align 4
  %v1_3057a = load i32, i32* %ebx.global-to-local, align 4
  %v2_3057a = inttoptr i32 %v1_3057a to i32*
  store i32 %v2_30578, i32* %v2_3057a, align 4
  %v0_3057c = load i32, i32* %edx.global-to-local, align 8
  %v1_3057c = load i32, i32* %ebx.global-to-local, align 4
  %v2_3057c = add i32 %v1_3057c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_3057c = inttoptr i32 %v2_3057c to i32*
  store i32 %v0_3057c, i32* %v3_3057c, align 4
  %v0_3057f = load i32, i32* @ebp, align 4
  %v1_3057f = add i32 %v0_3057f, -52
  %v2_3057f = inttoptr i32 %v1_3057f to i32*
  %v3_3057f = load i32, i32* %v2_3057f, align 4
  %v2_30582 = add i32 %v0_3057f, -64
  %v3_30582 = inttoptr i32 %v2_30582 to i32*
  store i32 %v3_3057f, i32* %v3_30582, align 4
  %v0_30585 = load i32, i32* @ebp, align 4
  %v1_30585 = add i32 %v0_30585, -68
  %v2_30585 = inttoptr i32 %v1_30585 to i32*
  %v3_30585 = load i32, i32* %v2_30585, align 4
  %v1_30588 = add i32 %v3_30585, -1
  %tmp16 = icmp slt i32 %v1_30588, 0
  %v2_3058d = zext i1 %tmp16 to i32
  %v2_30590 = add i32 %v2_3058d, %v1_30588
  %v2_30592 = sdiv i32 %v2_30590, 2
  store i32 %v2_30592, i32* %edx.global-to-local, align 8
  %v1_30596 = add i32 %v0_30585, -52
  %v2_30596 = inttoptr i32 %v1_30596 to i32*
  %v3_305b4 = load i32, i32* %v2_30585, align 4
  %v1_305b7 = add i32 %v3_305b4, -2
  %tmp17 = icmp slt i32 %v1_305b7, 0
  %v2_305bc = zext i1 %tmp17 to i32
  %v2_305bf = add i32 %v2_305bc, %v1_305b7
  %v2_305c1 = sdiv i32 %v2_305bf, 2
  store i32 %v2_305c1, i32* %edx.global-to-local, align 8
  %v3_305cc = load i32, i32* %v2_30596, align 4
  %tmp18 = mul i32 %v3_305cc, 2
  %v2_305d2 = add i32 %tmp18, 2
  store i32 %v2_305d2, i32* %v2_30596, align 4
  %v0_305d7 = load i32, i32* @ebp, align 4
  %v1_305d7 = add i32 %v0_305d7, -20
  %v1_305da = add i32 %v0_305d7, -64
  store i32 %v1_305da, i32* %edx.global-to-local, align 8
  ret i32 %v1_305d7

; uselistorder directives
  uselistorder i32 %v1_305b7, { 1, 0 }
  uselistorder i32* %v2_30596, { 1, 0 }
  uselistorder i32 %v1_30588, { 1, 0 }
  uselistorder label %dec_label_pc_30525, { 1, 0 }
  uselistorder label %dec_label_pc_30518, { 1, 0 }
}

define i32 @function_305b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_305b4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_305de(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_305de:
  %edx.global-to-local = alloca i32, align 4
  %v0_305df = load i32, i32* @eax, align 8
  %v11_305df = and i32 %v0_305df, or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256)
  %v0_305e1 = load i32, i32* @ebp, align 4
  %v1_305e1 = add i32 %v0_305e1, -60
  store i32 %v1_305e1, i32* %edx.global-to-local, align 8
  %v2_305eb = call i32 @unknown_51864(i32 %v11_305df, i32 %v1_305e1)
  %v0_305f3 = load i32, i32* @ebp, align 4
  %v1_305f3 = add i32 %v0_305f3, -20
  %v1_305f9 = call i32 @unknown_4c980(i32 %v1_305f3)
  store i32 %v1_305f9, i32* @ebx, align 4
  %v0_30600 = load i32, i32* @ebp, align 4
  %v1_30600 = add i32 %v0_30600, -52
  %v2_30600 = inttoptr i32 %v1_30600 to i32*
  %v3_30600 = load i32, i32* %v2_30600, align 4
  %v1_30603 = add i32 %v3_30600, -1
  %v2_30606 = add i32 %v0_30600, -28
  %v3_30606 = inttoptr i32 %v2_30606 to i32*
  store i32 %v1_30603, i32* %v3_30606, align 4
  %v0_30609 = load i32, i32* @ebp, align 4
  %v1_30609 = add i32 %v0_30609, -24
  %v1_30613 = add i32 %v0_30609, -60
  store i32 %v1_30613, i32* %edx.global-to-local, align 8
  %v2_3061d = call i32 @unknown_51864(i32 %v1_30609, i32 %v1_30613)
  %v0_30625 = load i32, i32* @ebp, align 4
  %v1_30625 = add i32 %v0_30625, -24
  %v1_3062b = call i32 @unknown_4c980(i32 %v1_30625)
  %v1_30630 = add i32 %v1_3062b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_30630 = inttoptr i32 %v1_30630 to i32*
  %v3_30630 = load i32, i32* %v2_30630, align 4
  store i32 %v3_30630, i32* %edx.global-to-local, align 8
  %v1_30633 = inttoptr i32 %v1_3062b to i32*
  %v2_30633 = load i32, i32* %v1_30633, align 4
  %v1_30635 = load i32, i32* @ebx, align 4
  %v2_30635 = inttoptr i32 %v1_30635 to i32*
  store i32 %v2_30633, i32* %v2_30635, align 4
  %v0_30637 = load i32, i32* %edx.global-to-local, align 8
  %v1_30637 = load i32, i32* @ebx, align 4
  %v2_30637 = add i32 %v1_30637, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_30637 = inttoptr i32 %v2_30637 to i32*
  store i32 %v0_30637, i32* %v3_30637, align 4
  %v0_3063a = load i32, i32* @ebp, align 4
  %v1_3063a = add i32 %v0_3063a, -52
  %v2_3063a = inttoptr i32 %v1_3063a to i32*
  %v3_3063a = load i32, i32* %v2_3063a, align 4
  %v1_3063d = add i32 %v3_3063a, -1
  %v2_30640 = add i32 %v0_3063a, -64
  %v3_30640 = inttoptr i32 %v2_30640 to i32*
  store i32 %v1_3063d, i32* %v3_30640, align 4
  %v0_30643 = load i32, i32* @ebp, align 4
  %v1_30643 = add i32 %v0_30643, -64
  %v2_30643 = inttoptr i32 %v1_30643 to i32*
  %v3_30643 = load i32, i32* %v2_30643, align 4
  %v1_30646 = add i32 %v0_30643, -80
  %v2_30646 = inttoptr i32 %v1_30646 to i32*
  %v3_30646 = load i32, i32* %v2_30646, align 4
  %v1_30649 = add i32 %v0_30643, -76
  %v2_30649 = inttoptr i32 %v1_30649 to i32*
  %v3_30649 = load i32, i32* %v2_30649, align 4
  store i32 %v3_30649, i32* %edx.global-to-local, align 8
  %v1_30654 = add i32 %v0_30643, -16
  %v2_30654 = inttoptr i32 %v1_30654 to i32*
  %v3_30654 = load i32, i32* %v2_30654, align 4
  %v1_3065f = add i32 %v0_30643, -60
  %v2_3065f = inttoptr i32 %v1_3065f to i32*
  %v3_3065f = load i32, i32* %v2_3065f, align 4
  %v5_30665 = call i32 @unknown_63710(i32 %v3_3065f, i32 %v3_30643, i32 %v3_30654, i32 %v3_30646, i32 %v3_30649)
  %v0_3066a = load i32, i32* @ebp, align 4
  %v1_3066a = add i32 %v0_3066a, -12
  %v2_3066a = inttoptr i32 %v1_3066a to i32*
  %v3_3066a = load i32, i32* %v2_3066a, align 4
  %v2_3066d = xor i32 %v3_3066a, 30
  %v3_3066d = icmp eq i32 %v2_3066d, 0
  store i32 %v2_3066d, i32* @eax, align 8
  br i1 %v3_3066d, label %bb, label %dec_label_pc_30676

bb:                                               ; preds = %dec_label_pc_305de
  %v1_30674 = call i32 @function_3067b()
  br label %dec_label_pc_30676

dec_label_pc_30676:                               ; preds = %bb, %dec_label_pc_305de
  %v3_30674 = phi i32 [ %v1_30674, %bb ], [ %v2_3066d, %dec_label_pc_305de ]
  ret i32 %v3_30674

; uselistorder directives
  uselistorder i32 %v0_30643, { 0, 2, 1, 3, 4 }
  uselistorder i32 -76, { 6, 7, 0, 1, 2, 3, 4, 8, 9, 5 }
  uselistorder i32 -80, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @unknown_4c980, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_51864, { 1, 0, 4, 3, 2 }
}

define i32 @function_3067b() local_unnamed_addr {
dec_label_pc_3067b:
  %v0_3067b = load i32, i32* @ebp, align 4
  %v1_3067b = add i32 %v0_3067b, -8
  %v1_3067e = inttoptr i32 %v1_3067b to i32*
  %v2_3067e = load i32, i32* %v1_3067e, align 4
  store i32 %v2_3067e, i32* @ebx, align 4
  %v3_3067e = add i32 %v0_3067b, -4
  %v1_3067f = inttoptr i32 %v3_3067e to i32*
  %v2_3067f = load i32, i32* %v1_3067f, align 4
  store i32 %v2_3067f, i32* @esi, align 4
  %v1_30680 = inttoptr i32 %v0_3067b to i32*
  %v2_30680 = load i32, i32* %v1_30680, align 4
  store i32 %v2_30680, i32* @ebp, align 4
  %v0_30681 = load i32, i32* @eax, align 8
  ret i32 %v0_30681

; uselistorder directives
  uselistorder i32 -8, { 4, 0, 1, 2, 3 }
}

define i32 @_ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30682:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_306a0 = ptrtoint i32* %stack_var_-36 to i32
  %v1_306a6 = call i32 @unknown_4cbae(i32 %v2_306a0)
  %v2_306ad = ptrtoint i32* %stack_var_-32 to i32
  %v1_306b3 = call i32 @unknown_4cbae(i32 %v2_306ad)
  %v2_306bf = call i32 @unknown_63a95(i32 %v1_306b3, i32 %v1_306a6)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4cbae, { 1, 0 }
}

define i32 @function_306d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_306d4:
  %v0_306d4 = load i32, i32* @ebx, align 4
  %v1_306d4 = add i32 %v0_306d4, 1566258372
  %v2_306d4 = inttoptr i32 %v1_306d4 to i32*
  %v3_306d4 = load i32, i32* %v2_306d4, align 4
  %v4_306d4 = add i32 %v3_306d4, 1
  store i32 %v4_306d4, i32* %v2_306d4, align 4
  %v0_306da = load i32, i32* @eax, align 8
  ret i32 %v0_306da
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11lower_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_306dc:
  %v1_30706 = call i32 @unknown_63b7c(i32 %arg2)
  %v1_30713 = call i32 @unknown_63b4c(i32 %arg2)
  %v5_30734 = call i32 @unknown_63bac(i32 %arg1, i32 %arg2, i32 %v1_30713, i32 %v1_30706, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v1_30749 = call i32 @function_30750()
  ret i32 %v1_30749

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30750() local_unnamed_addr {
dec_label_pc_30750:
  %v0_30754 = load i32, i32* @eax, align 8
  ret i32 %v0_30754
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30758:
  ret i32 %arg1
}

define i32 @function_30784(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30784:
  %v0_30784 = load i32, i32* @eax, align 8
  %v11_30784 = and i32 %v0_30784, -24
  %v0_30786 = load i32, i32* @edx, align 8
  %v1_30787 = xor i32 %v11_30784, 1166737411
  store i32 %v1_30787, i32* @eax, align 8
  %v3_30790 = icmp eq i32 %v0_30786, 30
  br i1 %v3_30790, label %bb, label %dec_label_pc_30799

bb:                                               ; preds = %dec_label_pc_30784
  %v2_30797 = call i32 @function_3079e(i32 %v0_30786)
  br label %dec_label_pc_30799

dec_label_pc_30799:                               ; preds = %bb, %dec_label_pc_30784
  %v3_30797 = phi i32 [ %v2_30797, %bb ], [ %v1_30787, %dec_label_pc_30784 ]
  ret i32 %v3_30797

; uselistorder directives
  uselistorder i32 %v0_30786, { 1, 0 }
  uselistorder i32 1166737411, { 0, 2, 1 }
}

define i32 @function_3079e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3079e:
  %v0_3079f = load i32, i32* @eax, align 8
  ret i32 %v0_3079f
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_307a2:
  store i32 %arg1, i32* @eax, align 8
  %v2_307c6 = call i32 @function_307cd(i32 %arg1)
  ret i32 %v2_307c6
}

define i32 @function_307cd(i32 %arg1) local_unnamed_addr {
dec_label_pc_307cd:
  %v0_307ce = load i32, i32* @eax, align 8
  ret i32 %v0_307ce
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_307d0:
  %v3_30807 = call i32 @unknown_63d8c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  %v1_3081c = call i32 @function_30823()
  ret i32 %v1_3081c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30823() local_unnamed_addr {
dec_label_pc_30823:
  %v0_30824 = load i32, i32* @eax, align 8
  ret i32 %v0_30824
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30828:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_30848 = inttoptr i32 %arg2 to i32*
  %v2_30848 = load i32, i32* %v1_30848, align 4
  store i32 %v2_30848, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_30859 = call i32 @function_30860(i32 %arg2, i32 %tmp101)
  ret i32 %v3_30859
}

define i32 @function_30860(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30860:
  %v0_30861 = load i32, i32* @eax, align 8
  ret i32 %v0_30861
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30862:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_3088c = call i32 @unknown_5241c(i32 %arg1)
  %v1_30894 = add i32 %arg2, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_30897 = ptrtoint i32* %stack_var_-24 to i32
  %v2_308a1 = call i32 @unknown_5e912(i32 %v2_30897, i32 %v1_30894)
  %v2_308b0 = ptrtoint i32* %stack_var_-20 to i32
  %v2_308b6 = call i32 @unknown_6108a(i32 %v2_308b0, i32 %v2_30897)
  %v2_308c8 = call i32 @unknown_63e9a(i32 %arg3, i32 %v2_308b0)
  %v4_308cd = trunc i32 %v2_308c8 to i8
  %v5_308cd = icmp eq i8 %v4_308cd, 0
  br i1 %v5_308cd, label %bb, label %dec_label_pc_308d1

bb:                                               ; preds = %dec_label_pc_30862
  %v1_308cf = call i32 @function_308f0()
  br label %dec_label_pc_308d1

dec_label_pc_308d1:                               ; preds = %bb, %dec_label_pc_30862
  %v2_308cf = phi i32 [ %v1_308cf, %bb ], [ %v2_308c8, %dec_label_pc_30862 ]
  ret i32 %v2_308cf
}

define i32 @function_308d2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_308d2:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_308d2 = load i32, i32* @ebp, align 4
  store i32 %v0_308d2, i32* %stack_var_-4, align 4
  %v0_308d3 = load i32, i32* @ecx, align 4
  %v1_308d3 = add i32 %v0_308d3, -1
  store i32 %v1_308d3, i32* @ecx, align 4
  %v2_308d3 = icmp eq i32 %v1_308d3, 0
  %v3_308d3 = load i1, i1* @zf, align 1
  %v4_308d3 = or i1 %v2_308d3, %v3_308d3
  br i1 %v4_308d3, label %dec_label_pc_308d2.dec_label_pc_308d5_crit_edge, label %bb

dec_label_pc_308d2.dec_label_pc_308d5_crit_edge:  ; preds = %dec_label_pc_308d2
  %v0_308d6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_308d5

bb:                                               ; preds = %dec_label_pc_308d2
  %v8_308d3 = call i32 @function_30860(i32 %v0_308d2, i32 %tmp)
  %v2_308d5.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_308d5

dec_label_pc_308d5:                               ; preds = %dec_label_pc_308d2.dec_label_pc_308d5_crit_edge, %bb
  %v0_308d6 = phi i32 [ %v0_308d6.pre, %dec_label_pc_308d2.dec_label_pc_308d5_crit_edge ], [ %v8_308d3, %bb ]
  %v2_308d5 = phi i32 [ %v0_308d2, %dec_label_pc_308d2.dec_label_pc_308d5_crit_edge ], [ %v2_308d5.pre, %bb ]
  store i32 %v2_308d5, i32* @ebp, align 4
  ret i32 %v0_308d6

; uselistorder directives
  uselistorder i32 %v1_308d3, { 1, 0 }
  uselistorder label %dec_label_pc_308d5, { 1, 0 }
}

define i32 @function_308d8() local_unnamed_addr {
dec_label_pc_308d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_308d8 = load i32, i32* @ebp, align 4
  %v1_308d8 = add i32 %v0_308d8, 1
  store i32 %v1_308d8, i32* @ebp, align 4
  %v0_308df = load i32, i32* @eax, align 8
  %v2_308df = add i32 %v0_308df, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_308df = and i32 %v2_308df, 255
  %v18_308df = and i32 %v0_308df, -256
  %v19_308df = or i32 %v16_308df, %v18_308df
  store i32 %v19_308df, i32* %eax.global-to-local, align 8
  %v0_308e1 = call i32 @unknown_575b8()
  store i32 %v0_308e1, i32* %eax.global-to-local, align 8
  %v0_308e9 = load i32, i32* @ebp, align 4
  %v1_308e9 = add i32 %v0_308e9, -40
  %v2_308e9 = inttoptr i32 %v1_308e9 to i32*
  %v3_308e9 = load i32, i32* %v2_308e9, align 4
  store i32 %v3_308e9, i32* %eax.global-to-local, align 8
  %v1_308ec = load i32, i32* @ebx, align 4
  %v2_308ec = inttoptr i32 %v1_308ec to i32*
  store i32 %v3_308e9, i32* %v2_308ec, align 4
  %v0_308ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_308ee

; uselistorder directives
  uselistorder i32 %v0_308df, { 1, 0 }
}

define i32 @function_308f0() local_unnamed_addr {
dec_label_pc_308f0:
  %v0_308f0 = load i32, i32* @ebp, align 4
  %v1_308f0 = add i32 %v0_308f0, -36
  %v2_308f0 = inttoptr i32 %v1_308f0 to i32*
  %v3_308f0 = load i32, i32* %v2_308f0, align 4
  %v1_308f6 = call i32 @unknown_63eda(i32 %v3_308f0)
  ret i32 %v1_308f6
}

define i32 @function_308fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_308fd:
  %v0_308fd = load i32, i32* @ebp, align 4
  %v1_308fd = add i32 %v0_308fd, -28
  %v2_308fd = inttoptr i32 %v1_308fd to i32*
  %v3_308fd = load i32, i32* %v2_308fd, align 4
  %v0_30900 = load i32, i32* @edx, align 8
  %v1_30900 = add i32 %v0_30900, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_30900 = inttoptr i32 %v1_30900 to i32*
  %v3_30900 = load i32, i32* %v2_30900, align 4
  %v2_30903 = inttoptr i32 %v3_308fd to i32*
  store i32 %v3_30900, i32* %v2_30903, align 4
  %v0_30905 = load i32, i32* @ebp, align 4
  %v1_30905 = add i32 %v0_30905, -28
  %v2_30905 = inttoptr i32 %v1_30905 to i32*
  %v3_30905 = load i32, i32* %v2_30905, align 4
  store i32 %v3_30905, i32* @eax, align 8
  %v1_30908 = add i32 %v0_30905, -12
  %v2_30908 = inttoptr i32 %v1_30908 to i32*
  %v3_30908 = load i32, i32* %v2_30908, align 4
  %v3_3090b = icmp eq i32 %v3_30908, 30
  br i1 %v3_3090b, label %bb, label %dec_label_pc_30914

bb:                                               ; preds = %dec_label_pc_308fd
  %v1_30912 = call i32 @function_30919()
  br label %dec_label_pc_30914

dec_label_pc_30914:                               ; preds = %bb, %dec_label_pc_308fd
  %v2_30912 = phi i32 [ %v1_30912, %bb ], [ %v3_30905, %dec_label_pc_308fd ]
  ret i32 %v2_30912
}

define i32 @function_30919() local_unnamed_addr {
dec_label_pc_30919:
  %v4_3091c = load i32, i32* @eax, align 8
  ret i32 %v4_3091c
}

define i32 @function_3091f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3091f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE8key_compEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30920:
  ret i32 %arg1
}

define i32 @function_3092a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3092a:
  %v0_3092a = load i32, i32* @ebp, align 4
  %v0_3092e = load i32, i32* @eax, align 8
  %v11_3092e = or i32 %v0_3092e, 137
  store i32 %v11_3092e, i32* @eax, align 8
  %v1_30930 = add i32 %v0_3092a, 3
  %v9_30930 = icmp eq i32 %v1_30930, 0
  store i32 %v1_30930, i32* @ebp, align 4
  %v0_30931 = load i32, i32* @ecx, align 4
  %v2_30931 = icmp eq i32 %v0_30931, 1
  %v4_30931 = or i1 %v9_30930, %v2_30931
  br i1 %v4_30931, label %dec_label_pc_30933, label %bb

bb:                                               ; preds = %dec_label_pc_3092a
  %v6_30931 = call i32 @function_30998()
  %v1_30938.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_30933

dec_label_pc_30933:                               ; preds = %dec_label_pc_3092a, %bb
  %v1_30938 = phi i32 [ %v1_30930, %dec_label_pc_3092a ], [ %v1_30938.pre, %bb ]
  %v2_30938 = add i32 %v1_30938, -12
  %v3_30938 = inttoptr i32 %v2_30938 to i32*
  store i32 30, i32* %v3_30938, align 4
  %v0_3093d = load i32, i32* @ebp, align 4
  %v1_3093d = add i32 %v0_3093d, -32
  %v2_3093d = inttoptr i32 %v1_3093d to i32*
  %v3_3093d = load i32, i32* %v2_3093d, align 4
  %v1_30940 = add i32 %v0_3093d, -28
  %v2_30940 = inttoptr i32 %v1_30940 to i32*
  %v3_30940 = load i32, i32* %v2_30940, align 4
  %v2_3094a = call i32 @unknown_63fd2(i32 %v3_30940, i32 %v3_3093d)
  %v0_30952 = load i32, i32* @ebp, align 4
  %v1_30952 = add i32 %v0_30952, -28
  %v2_30952 = inttoptr i32 %v1_30952 to i32*
  %v3_30952 = load i32, i32* %v2_30952, align 4
  store i32 %v3_30952, i32* @eax, align 8
  %v1_30955 = add i32 %v0_30952, -12
  %v2_30955 = inttoptr i32 %v1_30955 to i32*
  %v3_30955 = load i32, i32* %v2_30955, align 4
  %v3_30958 = icmp eq i32 %v3_30955, 30
  br i1 %v3_30958, label %bb6, label %dec_label_pc_30961

bb6:                                              ; preds = %dec_label_pc_30933
  %v1_3095f = call i32 @function_30966()
  br label %dec_label_pc_30961

dec_label_pc_30961:                               ; preds = %bb6, %dec_label_pc_30933
  %v3_3095f = phi i32 [ %v1_3095f, %bb6 ], [ %v3_30952, %dec_label_pc_30933 ]
  ret i32 %v3_3095f

; uselistorder directives
  uselistorder label %dec_label_pc_30933, { 1, 0 }
}

define i32 @function_30966() local_unnamed_addr {
dec_label_pc_30966:
  %v0_30967 = load i32, i32* @eax, align 8
  ret i32 %v0_30967
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3096a:
  ret i32 %arg1
}

define i32 @function_30974(i32 %arg1) local_unnamed_addr {
dec_label_pc_30974:
  %v0_30974 = load i32, i32* @ebp, align 4
  %v1_30974 = add i32 %v0_30974, 1
  store i32 %v1_30974, i32* @ebp, align 4
  %v2_3097c = add i32 %v0_30974, -11
  %v3_3097c = inttoptr i32 %v2_3097c to i32*
  store i32 30, i32* %v3_3097c, align 4
  %v0_30981 = load i32, i32* @ebp, align 4
  %v1_30981 = add i32 %v0_30981, -28
  %v2_30981 = inttoptr i32 %v1_30981 to i32*
  %v3_30981 = load i32, i32* %v2_30981, align 4
  %v1_30984 = inttoptr i32 %v3_30981 to i32*
  %v2_30984 = load i32, i32* %v1_30984, align 4
  %v1_30986 = add i32 %v2_30984, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_30986, i32* @eax, align 8
  %v1_30989 = add i32 %v0_30981, -12
  %v2_30989 = inttoptr i32 %v1_30989 to i32*
  %v3_30989 = load i32, i32* %v2_30989, align 4
  %v3_3098c = icmp eq i32 %v3_30989, 30
  br i1 %v3_3098c, label %bb, label %dec_label_pc_30995

bb:                                               ; preds = %dec_label_pc_30974
  %v1_30993 = call i32 @function_3099a()
  br label %dec_label_pc_30995

dec_label_pc_30995:                               ; preds = %bb, %dec_label_pc_30974
  %v2_30993 = phi i32 [ %v1_30993, %bb ], [ %v1_30986, %dec_label_pc_30974 ]
  ret i32 %v2_30993
}

define i32 @function_30998() local_unnamed_addr {
dec_label_pc_30998:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3099a() local_unnamed_addr {
dec_label_pc_3099a:
  %v0_3099b = load i32, i32* @eax, align 8
  ret i32 %v0_3099b
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEeqERKSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3099c:
  ret i32 %arg1
}

define i32 @function_309a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_309a6:
  %v0_309a6 = load i32, i32* @ebp, align 4
  %v0_309aa = load i32, i32* @eax, align 8
  %v11_309aa = or i32 %v0_309aa, 137
  store i32 %v11_309aa, i32* @eax, align 8
  %v1_309ac = add i32 %v0_309a6, 3
  %v9_309ac = icmp eq i32 %v1_309ac, 0
  store i32 %v1_309ac, i32* @ebp, align 4
  %v0_309ad = load i32, i32* @ecx, align 4
  %v1_309ad = add i32 %v0_309ad, -1
  store i32 %v1_309ad, i32* @ecx, align 4
  %v2_309ad = icmp eq i32 %v1_309ad, 0
  %v4_309ad = or i1 %v9_309ac, %v2_309ad
  br i1 %v4_309ad, label %dec_label_pc_309af, label %bb

bb:                                               ; preds = %dec_label_pc_309a6
  %v6_309ad = call i32 @function_30a14()
  %v1_309b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_309af

dec_label_pc_309af:                               ; preds = %dec_label_pc_309a6, %bb
  %v1_309b4 = phi i32 [ %v1_309ac, %dec_label_pc_309a6 ], [ %v1_309b4.pre, %bb ]
  %v2_309b4 = add i32 %v1_309b4, -12
  %v3_309b4 = inttoptr i32 %v2_309b4 to i32*
  store i32 30, i32* %v3_309b4, align 4
  %v0_309b9 = load i32, i32* @ebp, align 4
  %v1_309b9 = add i32 %v0_309b9, -28
  %v2_309b9 = inttoptr i32 %v1_309b9 to i32*
  %v3_309b9 = load i32, i32* %v2_309b9, align 4
  %v1_309bc = inttoptr i32 %v3_309b9 to i32*
  %v2_309bc = load i32, i32* %v1_309bc, align 4
  %v1_309be = add i32 %v0_309b9, -32
  %v2_309be = inttoptr i32 %v1_309be to i32*
  %v3_309be = load i32, i32* %v2_309be, align 4
  %v1_309c1 = inttoptr i32 %v3_309be to i32*
  %v2_309c1 = load i32, i32* %v1_309c1, align 4
  %v12_309c3 = icmp eq i32 %v2_309bc, %v2_309c1
  %v1_309c5 = zext i1 %v12_309c3 to i32
  %v3_309c5 = and i32 %v2_309c1, -256
  %v4_309c5 = or i32 %v1_309c5, %v3_309c5
  store i32 %v4_309c5, i32* @eax, align 8
  %v1_309c8 = add i32 %v0_309b9, -12
  %v2_309c8 = inttoptr i32 %v1_309c8 to i32*
  %v3_309c8 = load i32, i32* %v2_309c8, align 4
  %v3_309cb = icmp eq i32 %v3_309c8, 30
  br i1 %v3_309cb, label %bb3, label %dec_label_pc_309d4

bb3:                                              ; preds = %dec_label_pc_309af
  %v1_309d2 = call i32 @function_309d9()
  br label %dec_label_pc_309d4

dec_label_pc_309d4:                               ; preds = %bb3, %dec_label_pc_309af
  %v3_309d2 = phi i32 [ %v1_309d2, %bb3 ], [ %v4_309c5, %dec_label_pc_309af ]
  ret i32 %v3_309d2

; uselistorder directives
  uselistorder i32 %v2_309c1, { 1, 0 }
  uselistorder i32 %v1_309ad, { 1, 0 }
  uselistorder label %dec_label_pc_309af, { 1, 0 }
}

define i32 @function_309d9() local_unnamed_addr {
dec_label_pc_309d9:
  %v0_309da = load i32, i32* @eax, align 8
  ret i32 %v0_309da
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEC1ERS7_RKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_309dc:
  ret i32 %arg2
}

define i32 @function_309f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_309f0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_309f0 = load i32, i32* @ecx, align 4
  %v1_309f0 = add i32 %v0_309f0, -1587159995
  %v2_309f0 = inttoptr i32 %v1_309f0 to i8*
  %v3_309f0 = load i8, i8* %v2_309f0, align 1
  %v5_309f0 = trunc i32 %v0_309f0 to i8
  %v6_309f0 = load i1, i1* @cf, align 1
  %v7_309f0 = zext i1 %v6_309f0 to i8
  %v8_309f0 = add i8 %v3_309f0, %v5_309f0
  %v9_309f0 = add i8 %v7_309f0, %v8_309f0
  %v27_309f0 = icmp ule i8 %v9_309f0, %v3_309f0
  %v28_309f0 = icmp ult i8 %v8_309f0, %v3_309f0
  %v29_309f0 = select i1 %v6_309f0, i1 %v27_309f0, i1 %v28_309f0
  store i1 %v29_309f0, i1* %cf.global-to-local, align 1
  store i8 %v9_309f0, i8* %v2_309f0, align 1
  %v0_309f6 = load i32, i32* @eax, align 8
  %v1_309f6 = trunc i32 %v0_309f6 to i8
  %v2_309f6 = load i1, i1* %cf.global-to-local, align 1
  %v3_309f6 = zext i1 %v2_309f6 to i8
  %v4_309f6 = add i8 %v3_309f6, %v1_309f6
  %v19_309f6 = icmp ule i8 %v4_309f6, %v1_309f6
  %v21_309f6 = icmp eq i1 %v2_309f6, %v19_309f6
  store i1 %v21_309f6, i1* %cf.global-to-local, align 1
  %v22_309f6 = zext i8 %v4_309f6 to i32
  %v24_309f6 = and i32 %v0_309f6, -256
  %v25_309f6 = or i32 %v22_309f6, %v24_309f6
  store i32 %v25_309f6, i32* %eax.global-to-local, align 8
  %v1_309f8 = inttoptr i32 %v25_309f6 to i8*
  %v2_309f8 = load i8, i8* %v1_309f8, align 1
  %v5_309f8 = add i8 %v2_309f8, %v4_309f6
  store i8 %v5_309f8, i8* %v1_309f8, align 1
  %v0_309fa = load i32, i32* %eax.global-to-local, align 8
  %v1_309fa = load i32, i32* @ebp, align 4
  %v2_309fa = add i32 %v1_309fa, -12
  %v3_309fa = inttoptr i32 %v2_309fa to i32*
  store i32 %v0_309fa, i32* %v3_309fa, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_309ff = load i32, i32* @ebp, align 4
  %v1_309ff = add i32 %v0_309ff, -28
  %v2_309ff = inttoptr i32 %v1_309ff to i32*
  %v3_309ff = load i32, i32* %v2_309ff, align 4
  store i32 %v3_309ff, i32* %eax.global-to-local, align 8
  %v1_30a02 = add i32 %v0_309ff, -32
  %v2_30a02 = inttoptr i32 %v1_30a02 to i32*
  %v3_30a02 = load i32, i32* %v2_30a02, align 4
  %v2_30a0c = call i32 @unknown_5ffcc(i32 %v3_309ff, i32 %v3_30a02)
  store i32 %v2_30a0c, i32* %eax.global-to-local, align 8
  %v0_30a11 = load i32, i32* @ebp, align 4
  %v1_30a11 = add i32 %v0_30a11, -28
  %v2_30a11 = inttoptr i32 %v1_30a11 to i32*
  %v3_30a11 = load i32, i32* %v2_30a11, align 4
  store i32 %v3_30a11, i32* %eax.global-to-local, align 8
  ret i32 %v3_30a11

; uselistorder directives
  uselistorder i8 %v4_309f6, { 0, 2, 1 }
  uselistorder i8 %v1_309f6, { 1, 0 }
  uselistorder i8 %v9_309f0, { 1, 0 }
  uselistorder i8 %v8_309f0, { 1, 0 }
}

define i32 @function_30a14() local_unnamed_addr {
dec_label_pc_30a14:
  %v0_30a14 = load i32, i32* @ebp, align 4
  %v1_30a14 = add i32 %v0_30a14, -36
  %v2_30a14 = inttoptr i32 %v1_30a14 to i32*
  %v3_30a14 = load i32, i32* %v2_30a14, align 4
  %v1_30a17 = inttoptr i32 %v3_30a14 to i32*
  %v2_30a17 = load i32, i32* %v1_30a17, align 4
  %v1_30a19 = load i32, i32* @eax, align 8
  %v2_30a19 = add i32 %v1_30a19, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_30a19 = inttoptr i32 %v2_30a19 to i32*
  store i32 %v2_30a17, i32* %v3_30a19, align 4
  %v0_30a1c = load i32, i32* @ebp, align 4
  %v1_30a1c = add i32 %v0_30a1c, -12
  %v2_30a1c = inttoptr i32 %v1_30a1c to i32*
  %v3_30a1c = load i32, i32* %v2_30a1c, align 4
  %v2_30a1f = xor i32 %v3_30a1c, 30
  %v3_30a1f = icmp eq i32 %v2_30a1f, 0
  store i32 %v2_30a1f, i32* @eax, align 8
  br i1 %v3_30a1f, label %bb, label %dec_label_pc_30a28

bb:                                               ; preds = %dec_label_pc_30a14
  %v1_30a26 = call i32 @function_30a2d()
  br label %dec_label_pc_30a28

dec_label_pc_30a28:                               ; preds = %bb, %dec_label_pc_30a14
  %v2_30a26 = phi i32 [ %v1_30a26, %bb ], [ %v2_30a1f, %dec_label_pc_30a14 ]
  ret i32 %v2_30a26
}

define i32 @function_30a2d() local_unnamed_addr {
dec_label_pc_30a2d:
  %v0_30a2e = load i32, i32* @eax, align 8
  ret i32 %v0_30a2e
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_() local_unnamed_addr {
dec_label_pc_30a30:
  %stack_var_-20 = alloca i32, align 4
  %v2_30a60 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_30a60
}

define i32 @function_30a66() local_unnamed_addr {
dec_label_pc_30a66:
  %v0_30a66 = call i32 @unknown_61258()
  %v0_30a6b = load i32, i32* @ebp, align 4
  %v1_30a6b = add i32 %v0_30a6b, -32
  %v2_30a6b = inttoptr i32 %v1_30a6b to i32*
  %v3_30a6b = load i32, i32* %v2_30a6b, align 4
  %v1_30a6e = add i32 %v0_30a6b, -28
  %v2_30a6e = inttoptr i32 %v1_30a6e to i32*
  %v3_30a6e = load i32, i32* %v2_30a6e, align 4
  %v1_30a71 = add i32 %v0_30a6b, -40
  %v2_30a71 = inttoptr i32 %v1_30a71 to i32*
  %v3_30a71 = load i32, i32* %v2_30a71, align 4
  %v1_30a78 = add i32 %v0_30a6b, -16
  %v2_30a78 = inttoptr i32 %v1_30a78 to i32*
  %v3_30a78 = load i32, i32* %v2_30a78, align 4
  store i32 %v3_30a78, i32* @ecx, align 4
  %v4_30a86 = call i32 @unknown_64118(i32 %v3_30a6e, i32 %v3_30a6b, i32 %v3_30a78, i32 %v3_30a71)
  %v0_30a8e = load i32, i32* @ebp, align 4
  %v1_30a8e = add i32 %v0_30a8e, -28
  %v2_30a8e = inttoptr i32 %v1_30a8e to i32*
  %v3_30a8e = load i32, i32* %v2_30a8e, align 4
  store i32 %v3_30a8e, i32* @eax, align 8
  %v1_30a91 = add i32 %v0_30a8e, -12
  %v2_30a91 = inttoptr i32 %v1_30a91 to i32*
  %v3_30a91 = load i32, i32* %v2_30a91, align 4
  %v3_30a94 = icmp eq i32 %v3_30a91, 30
  br i1 %v3_30a94, label %bb, label %dec_label_pc_30a9d

bb:                                               ; preds = %dec_label_pc_30a66
  %v1_30a9b = call i32 @function_30aa2()
  br label %dec_label_pc_30a9d

dec_label_pc_30a9d:                               ; preds = %bb, %dec_label_pc_30a66
  %v2_30a9b = phi i32 [ %v1_30a9b, %bb ], [ %v3_30a8e, %dec_label_pc_30a66 ]
  ret i32 %v2_30a9b

; uselistorder directives
  uselistorder i32 %v0_30a6b, { 1, 0, 2, 3 }
}

define i32 @function_30aa2() local_unnamed_addr {
dec_label_pc_30aa2:
  %v0_30aa3 = load i32, i32* @eax, align 8
  ret i32 %v0_30aa3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5eraseESt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30aa6:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_30ac6 = ptrtoint i32* %stack_var_-36 to i32
  %v2_30aca = ptrtoint i32* %stack_var_-20 to i32
  %v2_30ad0 = call i32 @unknown_612ce(i32 %v2_30aca, i32 %v4_30ac6)
  ret i32 %arg1
}

define i32 @function_30ae2() local_unnamed_addr {
dec_label_pc_30ae2:
  %v0_30ae2 = call i32 @unknown_645aa()
  %v0_30ae7 = load i32, i32* @ebp, align 4
  %v1_30ae7 = add i32 %v0_30ae7, -12
  %v2_30ae7 = inttoptr i32 %v1_30ae7 to i32*
  %v3_30ae7 = load i32, i32* %v2_30ae7, align 4
  %v2_30aea = xor i32 %v3_30ae7, 30
  %v3_30aea = icmp eq i32 %v2_30aea, 0
  store i32 %v2_30aea, i32* @eax, align 8
  br i1 %v3_30aea, label %bb, label %dec_label_pc_30af3

bb:                                               ; preds = %dec_label_pc_30ae2
  %v1_30af1 = call i32 @function_30af8()
  br label %dec_label_pc_30af3

dec_label_pc_30af3:                               ; preds = %bb, %dec_label_pc_30ae2
  %v2_30af1 = phi i32 [ %v1_30af1, %bb ], [ %v2_30aea, %dec_label_pc_30ae2 ]
  ret i32 %v2_30af1
}

define i32 @function_30af8() local_unnamed_addr {
dec_label_pc_30af8:
  %v0_30af9 = load i32, i32* @eax, align 8
  ret i32 %v0_30af9
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE8_M_eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30afa:
  ret i32 %arg2
}

define i32 @function_30b22() local_unnamed_addr {
dec_label_pc_30b22:
  %ebx.global-to-local = alloca i32, align 4
  %v0_30b22 = load i32, i32* %ebx.global-to-local, align 4
  %v1_30b22 = add i32 %v0_30b22, 1166663749
  %v2_30b22 = inttoptr i32 %v1_30b22 to i32*
  %v3_30b22 = load i32, i32* %v2_30b22, align 4
  %v4_30b22 = add i32 %v3_30b22, -1
  store i32 %v4_30b22, i32* %v2_30b22, align 4
  %v0_30b29 = load i32, i32* @ebp, align 4
  %v1_30b29 = add i32 %v0_30b29, -20
  %v2_30b29 = inttoptr i32 %v1_30b29 to i32*
  %v3_30b29 = load i32, i32* %v2_30b29, align 4
  %v1_30b2c = add i32 %v3_30b29, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_30b32 = call i32 @unknown_646ed(i32 %v1_30b2c)
  store i32 %v1_30b32, i32* %ebx.global-to-local, align 4
  %v0_30b39 = load i32, i32* @ebp, align 4
  %v1_30b39 = add i32 %v0_30b39, -28
  %v2_30b39 = inttoptr i32 %v1_30b39 to i32*
  %v3_30b39 = load i32, i32* %v2_30b39, align 4
  %v1_30b3c = add i32 %v0_30b39, -13
  %v2_30b46 = call i32 @unknown_64668(i32 %v1_30b3c, i32 %v3_30b39)
  %v0_30b4e = load i32, i32* %ebx.global-to-local, align 4
  %v0_30b52 = load i32, i32* @ebp, align 4
  %v1_30b52 = add i32 %v0_30b52, -13
  %v2_30b58 = call i32 @unknown_64752(i32 %v1_30b52, i32 %v0_30b4e)
  %v0_30b5d = load i32, i32* @ebp, align 4
  %v1_30b5d = add i32 %v0_30b5d, -13
  %v1_30b63 = call i32 @unknown_646b8(i32 %v1_30b5d)
  %v0_30b68 = load i32, i32* @ebp, align 4
  %v1_30b68 = add i32 %v0_30b68, -28
  %v2_30b68 = inttoptr i32 %v1_30b68 to i32*
  %v3_30b68 = load i32, i32* %v2_30b68, align 4
  %v1_30b6b = add i32 %v0_30b68, -20
  %v2_30b6b = inttoptr i32 %v1_30b6b to i32*
  %v3_30b6b = load i32, i32* %v2_30b6b, align 4
  %v2_30b75 = call i32 @unknown_6478e(i32 %v3_30b68, i32 %v3_30b6b)
  %v0_30b7a = load i32, i32* @ebp, align 4
  %v1_30b7a = add i32 %v0_30b7a, -12
  %v2_30b7a = inttoptr i32 %v1_30b7a to i32*
  %v3_30b7a = load i32, i32* %v2_30b7a, align 4
  %v2_30b7d = xor i32 %v3_30b7a, 30
  %v3_30b7d = icmp eq i32 %v2_30b7d, 0
  store i32 %v2_30b7d, i32* @eax, align 8
  br i1 %v3_30b7d, label %bb, label %dec_label_pc_30b86

bb:                                               ; preds = %dec_label_pc_30b22
  %v1_30b84 = call i32 @function_30ba4()
  store i32 %v1_30b84, i32* @eax, align 8
  br label %dec_label_pc_30b86

dec_label_pc_30b86:                               ; preds = %bb, %dec_label_pc_30b22
  %v0_30b86 = call i32 @function_30b9f()
  ret i32 %v0_30b86
}

define i32 @function_30b89() local_unnamed_addr {
dec_label_pc_30b89:
  %eax.global-to-local = alloca i32, align 4
  %v0_30b89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30b89
}

define i32 @function_30b9f() local_unnamed_addr {
dec_label_pc_30b9f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30ba4() local_unnamed_addr {
dec_label_pc_30ba4:
  %v0_30ba8 = load i32, i32* @eax, align 8
  ret i32 %v0_30ba8
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE12get_ptr_implEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30baa:
  %v1_30bc8 = call i32 @unknown_62144(i32 %arg1)
  %v0_30bcd = load i32, i32* @ebx, align 4
  %sext = mul i32 %v0_30bcd, 16777216
  %v3_30bdb = sdiv i32 %sext, 16777216
  %v4_30bdb = call i32 @unknown_64888(i32 %arg1, i32 %v1_30bc8, i32 %v3_30bdb)
  store i32 %v4_30bdb, i32* @eax, align 8
  %v1_30bea = call i32 @function_30bf1()
  ret i32 %v1_30bea

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30bf1() local_unnamed_addr {
dec_label_pc_30bf1:
  %v0_30bf6 = load i32, i32* @eax, align 8
  ret i32 %v0_30bf6
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EEC1ERKSL_() local_unnamed_addr {
dec_label_pc_30bf8:
  %eax.global-to-local = alloca i32, align 4
  %v5_30bf8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_30bf8
}

define i32 @function_30bfa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30bfa:
  %v0_30bff = load i32, i32* @ebp, align 4
  %v1_30bff = add i32 %v0_30bff, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_30bff = inttoptr i32 %v1_30bff to i32*
  %v3_30bff = load i32, i32* %v2_30bff, align 4
  %v2_30c02 = add i32 %v0_30bff, -28
  %v3_30c02 = inttoptr i32 %v2_30c02 to i32*
  store i32 %v3_30bff, i32* %v3_30c02, align 4
  %v0_30c05 = load i32, i32* @ebp, align 4
  %v1_30c05 = add i32 %v0_30c05, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_30c05 = inttoptr i32 %v1_30c05 to i32*
  %v3_30c05 = load i32, i32* %v2_30c05, align 4
  %v2_30c08 = add i32 %v0_30c05, -32
  %v3_30c08 = inttoptr i32 %v2_30c08 to i32*
  store i32 %v3_30c05, i32* %v3_30c08, align 4
  %v1_30c11 = load i32, i32* @ebp, align 4
  %v2_30c11 = add i32 %v1_30c11, -12
  %v3_30c11 = inttoptr i32 %v2_30c11 to i32*
  store i32 30, i32* %v3_30c11, align 4
  %v0_30c16 = load i32, i32* @ebp, align 4
  %v1_30c16 = add i32 %v0_30c16, -32
  %v2_30c16 = inttoptr i32 %v1_30c16 to i32*
  %v3_30c16 = load i32, i32* %v2_30c16, align 4
  %v1_30c1c = call i32 @unknown_64910(i32 %v3_30c16)
  %v0_30c25 = load i32, i32* @ebp, align 4
  %v1_30c25 = add i32 %v0_30c25, -13
  %v2_30c2b = call i32 @unknown_6493e(i32 %v1_30c25, i32 %v1_30c1c)
  %v0_30c30 = load i32, i32* @ebp, align 4
  %v1_30c30 = add i32 %v0_30c30, -28
  %v2_30c30 = inttoptr i32 %v1_30c30 to i32*
  %v3_30c30 = load i32, i32* %v2_30c30, align 4
  %v1_30c33 = add i32 %v0_30c30, -13
  %v2_30c3d = call i32 @unknown_6497a(i32 %v3_30c30, i32 %v1_30c33)
  %v0_30c42 = load i32, i32* @ebp, align 4
  %v1_30c42 = add i32 %v0_30c42, -13
  %v1_30c48 = call i32 @unknown_647b6(i32 %v1_30c42)
  %v0_30c4d = load i32, i32* @ebp, align 4
  %v1_30c4d = add i32 %v0_30c4d, -20
  %v1_30c50 = add i32 %v0_30c4d, -32
  %v2_30c50 = inttoptr i32 %v1_30c50 to i32*
  %v3_30c50 = load i32, i32* %v2_30c50, align 4
  %v2_30c5a = call i32 @unknown_64a2e(i32 %v1_30c4d, i32 %v3_30c50)
  %v0_30c62 = load i32, i32* @ebp, align 4
  %v1_30c62 = add i32 %v0_30c62, -24
  %v1_30c65 = add i32 %v0_30c62, -32
  %v2_30c65 = inttoptr i32 %v1_30c65 to i32*
  %v3_30c65 = load i32, i32* %v2_30c65, align 4
  %v2_30c6f = call i32 @unknown_649e4(i32 %v1_30c62, i32 %v3_30c65)
  %v0_30c77 = load i32, i32* @ebx, align 4
  %v0_30c7b = load i32, i32* @ebp, align 4
  %v1_30c7b = add i32 %v0_30c7b, -20
  %v2_30c7b = inttoptr i32 %v1_30c7b to i32*
  %v3_30c7b = load i32, i32* %v2_30c7b, align 4
  %v1_30c82 = add i32 %v0_30c7b, -24
  %v2_30c82 = inttoptr i32 %v1_30c82 to i32*
  %v3_30c82 = load i32, i32* %v2_30c82, align 4
  %v1_30c89 = add i32 %v0_30c7b, -28
  %v2_30c89 = inttoptr i32 %v1_30c89 to i32*
  %v3_30c89 = load i32, i32* %v2_30c89, align 4
  %v4_30c8f = call i32 @unknown_64a76(i32 %v3_30c89, i32 %v3_30c82, i32 %v3_30c7b, i32 %v0_30c77)
  %v0_30c94 = call i32 @function_30cc4()
  ret i32 %v0_30c94
}

define i32 @function_30c97() local_unnamed_addr {
dec_label_pc_30c97:
  %eax.global-to-local = alloca i32, align 4
  %v0_30c97 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30c97
}

define i32 @function_30cae() local_unnamed_addr {
dec_label_pc_30cae:
  %eax.global-to-local = alloca i32, align 4
  %v0_30cae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30cae
}

define i32 @function_30cb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_30cb8:
  %v0_30cba = load i32, i32* @ebx, align 4
  ret i32 %v0_30cba
}

define i32 @function_30cc4() local_unnamed_addr {
dec_label_pc_30cc4:
  %v0_30cc4 = load i32, i32* @ebp, align 4
  %v1_30cc4 = add i32 %v0_30cc4, -12
  %v2_30cc4 = inttoptr i32 %v1_30cc4 to i32*
  %v3_30cc4 = load i32, i32* %v2_30cc4, align 4
  %v2_30cc7 = xor i32 %v3_30cc4, 30
  %v3_30cc7 = icmp eq i32 %v2_30cc7, 0
  store i32 %v2_30cc7, i32* @eax, align 8
  br i1 %v3_30cc7, label %bb, label %dec_label_pc_30cd0

bb:                                               ; preds = %dec_label_pc_30cc4
  %v1_30cce = call i32 @function_30cd5()
  br label %dec_label_pc_30cd0

dec_label_pc_30cd0:                               ; preds = %bb, %dec_label_pc_30cc4
  %v2_30cce = phi i32 [ %v1_30cce, %bb ], [ %v2_30cc7, %dec_label_pc_30cc4 ]
  ret i32 %v2_30cce
}

define i32 @function_30cd5() local_unnamed_addr {
dec_label_pc_30cd5:
  %v0_30cd5 = load i32, i32* @ebp, align 4
  %v1_30cd5 = add i32 %v0_30cd5, -4
  %v2_30cd5 = inttoptr i32 %v1_30cd5 to i32*
  %v3_30cd5 = load i32, i32* %v2_30cd5, align 4
  store i32 %v3_30cd5, i32* @ebx, align 4
  %v0_30cd9 = load i32, i32* @eax, align 8
  ret i32 %v0_30cd9
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE10_List_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30cda:
  %v1_30cf7 = call i32 @unknown_64bd2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_30d06 = call i32 @function_30d0d()
  ret i32 %v1_30d06
}

define i32 @function_30d0d() local_unnamed_addr {
dec_label_pc_30d0d:
  %v0_30d0e = load i32, i32* @eax, align 8
  ret i32 %v0_30d0e
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30d10:
  %v1_30d2e = call i32 @unknown_64c3e(i32 %arg1)
  %v1_30d39 = call i32 @unknown_619ea(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_30d48 = call i32 @function_30d68()
  store i32 %v1_30d48, i32* @eax, align 8
  %v0_30d4a = call i32 @function_30d63()
  ret i32 %v0_30d4a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30d4d() local_unnamed_addr {
dec_label_pc_30d4d:
  %eax.global-to-local = alloca i32, align 4
  %v0_30d4d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30d4d
}

define i32 @function_30d63() local_unnamed_addr {
dec_label_pc_30d63:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30d68() local_unnamed_addr {
dec_label_pc_30d68:
  %v0_30d6d = load i32, i32* @eax, align 8
  ret i32 %v0_30d6d
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEC1ERKST_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30d6e:
  %v2_30d98 = call i32 @unknown_64d5a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_30da7 = call i32 @function_30dae()
  ret i32 %v1_30da7
}

define i32 @function_30dae() local_unnamed_addr {
dec_label_pc_30dae:
  %v0_30daf = load i32, i32* @eax, align 8
  ret i32 %v0_30daf
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30db0:
  %v1_30dcd = call i32 @unknown_64eb4(i32 %arg1)
  ret i32 0
}

define i32 @function_30ddd(i32 %arg1) local_unnamed_addr {
dec_label_pc_30ddd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30de2(i32 %arg1) local_unnamed_addr {
dec_label_pc_30de2:
  %v0_30de4 = load i32, i32* @eax, align 8
  ret i32 %v0_30de4
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30de6:
  %v1_30e04 = call i32 @unknown_64256(i32 %arg1)
  ret i32 %v1_30e04
}

define i32 @function_30e0a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30e0a:
  %v0_30e0d = load i32, i32* @ebp, align 4
  %v1_30e0d = add i32 %v0_30e0d, -28
  %v2_30e0d = inttoptr i32 %v1_30e0d to i32*
  %v3_30e0d = load i32, i32* %v2_30e0d, align 4
  %v1_30e13 = call i32 @unknown_64f20(i32 %v3_30e0d)
  %v0_30e18 = load i32, i32* @ebp, align 4
  %v1_30e18 = add i32 %v0_30e18, -28
  %v2_30e18 = inttoptr i32 %v1_30e18 to i32*
  %v3_30e18 = load i32, i32* %v2_30e18, align 4
  %v1_30e1e = call i32 @unknown_61b96(i32 %v3_30e18)
  %v0_30e23 = load i32, i32* @ebp, align 4
  %v1_30e23 = add i32 %v0_30e23, -12
  %v2_30e23 = inttoptr i32 %v1_30e23 to i32*
  %v3_30e23 = load i32, i32* %v2_30e23, align 4
  ret i32 %v3_30e23
}

define i32 @function_30e2a(i16 %arg1) local_unnamed_addr {
dec_label_pc_30e2a:
  %v2_30e2a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30e2a = load i32, i32* @eax, align 8
  %v4_30e2a = trunc i32 %v3_30e2a to i8
  %v5_30e2a = add i8 %v4_30e2a, %v2_30e2a
  %v21_30e2a = inttoptr i32 %v3_30e2a to i8*
  store i8 %v5_30e2a, i8* %v21_30e2a, align 1
  %v0_30e2c = load i32, i32* @esi, align 4
  %v1_30e2c = load i32, i32* @ebx, align 4
  %v3_30e2c = add i32 %v0_30e2c, -21
  %v4_30e2c = add i32 %v3_30e2c, %v1_30e2c
  %v5_30e2c = inttoptr i32 %v4_30e2c to i8*
  %v6_30e2c = load i8, i8* %v5_30e2c, align 1
  %v7_30e2c = load i32, i32* @edx, align 8
  %v8_30e2c = lshr i32 %v7_30e2c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_30e2c = trunc i32 %v8_30e2c to i8
  %v10_30e2c = add i8 %v9_30e2c, %v6_30e2c
  store i8 %v10_30e2c, i8* %v5_30e2c, align 1
  %v0_30e31 = load i32, i32* @eax, align 8
  %v0_30e33 = load i32, i32* @ebp, align 4
  %v1_30e33 = add i32 %v0_30e33, -28
  %v2_30e33 = inttoptr i32 %v1_30e33 to i32*
  %v3_30e33 = load i32, i32* %v2_30e33, align 4
  %v1_30e39 = call i32 @unknown_61b96(i32 %v3_30e33)
  ret i32 %v0_30e31

; uselistorder directives
  uselistorder i32 (i32)* @unknown_61b96, { 1, 0 }
}

define i32 @function_30e4c() local_unnamed_addr {
dec_label_pc_30e4c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_30e4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_30e4c = add i32 %v0_30e4c, 1566258372
  %v2_30e4c = inttoptr i32 %v1_30e4c to i32*
  %v3_30e4c = load i32, i32* %v2_30e4c, align 4
  %v4_30e4c = add i32 %v3_30e4c, 1
  store i32 %v4_30e4c, i32* %v2_30e4c, align 4
  %v0_30e52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30e52
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1Ev() local_unnamed_addr {
dec_label_pc_30e54:
  %eax.global-to-local = alloca i32, align 4
  %v5_30e54 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_30e54
}

define i32 @function_30e55(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30e55:
  %v2_30e55 = load i32, i32* @eax, align 8
  ret i32 %v2_30e55
}

define i32 @function_30e57(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e57:
  %v0_30e5a = load i32, i32* @ebp, align 4
  %v1_30e5a = add i32 %v0_30e5a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_30e5a = inttoptr i32 %v1_30e5a to i32*
  %v3_30e5a = load i32, i32* %v2_30e5a, align 4
  %v2_30e5d = add i32 %v0_30e5a, -28
  %v3_30e5d = inttoptr i32 %v2_30e5d to i32*
  store i32 %v3_30e5a, i32* %v3_30e5d, align 4
  %v1_30e66 = load i32, i32* @ebp, align 4
  %v2_30e66 = add i32 %v1_30e66, -12
  %v3_30e66 = inttoptr i32 %v2_30e66 to i32*
  store i32 30, i32* %v3_30e66, align 4
  %v0_30e6b = load i32, i32* @ebp, align 4
  %v1_30e6b = add i32 %v0_30e6b, -28
  %v2_30e6b = inttoptr i32 %v1_30e6b to i32*
  %v3_30e6b = load i32, i32* %v2_30e6b, align 4
  %v1_30e6e = inttoptr i32 %v3_30e6b to i32*
  store i32 0, i32* %v1_30e6e, align 4
  %v0_30e74 = load i32, i32* @ebp, align 4
  %v1_30e74 = add i32 %v0_30e74, -12
  %v2_30e74 = inttoptr i32 %v1_30e74 to i32*
  %v3_30e74 = load i32, i32* %v2_30e74, align 4
  %v2_30e77 = xor i32 %v3_30e74, 30
  %v3_30e77 = icmp eq i32 %v2_30e77, 0
  store i32 %v2_30e77, i32* @eax, align 8
  br i1 %v3_30e77, label %bb, label %dec_label_pc_30e80

bb:                                               ; preds = %dec_label_pc_30e57
  %v1_30e7e = call i32 @function_30e85()
  br label %dec_label_pc_30e80

dec_label_pc_30e80:                               ; preds = %bb, %dec_label_pc_30e57
  %v2_30e7e = phi i32 [ %v1_30e7e, %bb ], [ %v2_30e77, %dec_label_pc_30e57 ]
  ret i32 %v2_30e7e
}

define i32 @function_30e85() local_unnamed_addr {
dec_label_pc_30e85:
  %v0_30e86 = load i32, i32* @eax, align 8
  ret i32 %v0_30e86
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30e88:
  %v2_30eb2 = call i32 @unknown_65040(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_30ec7 = call i32 @function_30ece()
  ret i32 %v1_30ec7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30ece() local_unnamed_addr {
dec_label_pc_30ece:
  %v4_30ece = load i32, i32* @eax, align 8
  ret i32 %v4_30ece
}

define i32 @function_30ecf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30ecf:
  %v0_30ecf = load i32, i32* @eax, align 8
  ret i32 %v0_30ecf
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30ed2:
  %v2_30efc = call i32 @unknown_650d4(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_30f11 = call i32 @function_30f18()
  ret i32 %v1_30f11

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

declare i32 @__stack_chk_fail.1080(i32, i32) local_unnamed_addr

define i32 @function_30f18() local_unnamed_addr {
dec_label_pc_30f18:
  %v0_30f19 = load i32, i32* @eax, align 8
  ret i32 %v0_30f19
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30f1c:
  %v2_30f46 = call i32 @unknown_65168(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_30f5b = call i32 @function_30f62()
  ret i32 %v1_30f5b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30f62() local_unnamed_addr {
dec_label_pc_30f62:
  %v4_30f62 = load i32, i32* @eax, align 8
  ret i32 %v4_30f62
}

define i32 @function_30f64(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f64:
  %v0_30f64 = load i32, i32* @eax, align 8
  ret i32 %v0_30f64
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30f66:
  %v1_30f8b = inttoptr i32 %arg2 to i32*
  %v2_30f8b = load i32, i32* %v1_30f8b, align 4
  ret i32 %v2_30f8b
}

define i32 @function_30f91(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30f91:
  %zf.global-to-local = alloca i1, align 1
  %v0_30f98 = load i32, i32* @eax, align 8
  %v1_30f98 = trunc i32 %v0_30f98 to i8
  %v13_30f98 = icmp eq i8 %v1_30f98, 0
  store i1 %v13_30f98, i1* %zf.global-to-local, align 1
  %v1_30f9a = inttoptr i32 %v0_30f98 to i8*
  %v2_30f9a = load i8, i8* %v1_30f9a, align 1
  %v5_30f9a = add i8 %v2_30f9a, %v1_30f98
  %v15_30f9a = icmp eq i8 %v5_30f9a, 0
  store i1 %v15_30f9a, i1* %zf.global-to-local, align 1
  store i8 %v5_30f9a, i8* %v1_30f9a, align 1
  %v0_30f9c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_30f9c, label %bb, label %dec_label_pc_30f91.dec_label_pc_30f9e_crit_edge

dec_label_pc_30f91.dec_label_pc_30f9e_crit_edge:  ; preds = %dec_label_pc_30f91
  %v2_30f9c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30f9e

bb:                                               ; preds = %dec_label_pc_30f91
  %v1_30f9c = call i32 @function_30fa3()
  br label %dec_label_pc_30f9e

dec_label_pc_30f9e:                               ; preds = %dec_label_pc_30f91.dec_label_pc_30f9e_crit_edge, %bb
  %v2_30f9c = phi i32 [ %v2_30f9c.pre, %dec_label_pc_30f91.dec_label_pc_30f9e_crit_edge ], [ %v1_30f9c, %bb ]
  ret i32 %v2_30f9c

; uselistorder directives
  uselistorder label %dec_label_pc_30f9e, { 1, 0 }
}

define i32 @function_30fa3() local_unnamed_addr {
dec_label_pc_30fa3:
  %v0_30fa4 = load i32, i32* @eax, align 8
  ret i32 %v0_30fa4
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_30fa6:
  %v2_30fc0 = load i32, i32* %arg1, align 4
  ret i32 %v2_30fc0
}

define i32 @function_30fd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_30fd8:
  %zf.global-to-local = alloca i1, align 1
  %v0_30fd8 = load i32, i32* @eax, align 8
  %v1_30fd8 = trunc i32 %v0_30fd8 to i8
  %v2_30fd8 = load i1, i1* @cf, align 1
  %v3_30fd8 = zext i1 %v2_30fd8 to i8
  %v4_30fd8 = add i8 %v3_30fd8, %v1_30fd8
  %v13_30fd8 = icmp eq i8 %v4_30fd8, 0
  store i1 %v13_30fd8, i1* %zf.global-to-local, align 1
  %v22_30fd8 = zext i8 %v4_30fd8 to i32
  %v24_30fd8 = and i32 %v0_30fd8, -256
  %v25_30fd8 = or i32 %v22_30fd8, %v24_30fd8
  store i32 %v25_30fd8, i32* @eax, align 8
  %v1_30fda = inttoptr i32 %v25_30fd8 to i8*
  %v2_30fda = load i8, i8* %v1_30fda, align 1
  %v5_30fda = add i8 %v2_30fda, %v4_30fd8
  %v10_30fda = icmp ult i8 %v5_30fda, %v2_30fda
  store i1 %v10_30fda, i1* @cf, align 1
  %v15_30fda = icmp eq i8 %v5_30fda, 0
  store i1 %v15_30fda, i1* %zf.global-to-local, align 1
  store i8 %v5_30fda, i8* %v1_30fda, align 1
  %v0_30fdc = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_30fdc, label %bb, label %dec_label_pc_30fd8.dec_label_pc_30fde_crit_edge

dec_label_pc_30fd8.dec_label_pc_30fde_crit_edge:  ; preds = %dec_label_pc_30fd8
  %v2_30fdc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30fde

bb:                                               ; preds = %dec_label_pc_30fd8
  %v1_30fdc = call i32 @function_30fe3()
  br label %dec_label_pc_30fde

dec_label_pc_30fde:                               ; preds = %dec_label_pc_30fd8.dec_label_pc_30fde_crit_edge, %bb
  %v2_30fdc = phi i32 [ %v2_30fdc.pre, %dec_label_pc_30fd8.dec_label_pc_30fde_crit_edge ], [ %v1_30fdc, %bb ]
  ret i32 %v2_30fdc

; uselistorder directives
  uselistorder i8 %v2_30fda, { 1, 0 }
  uselistorder label %dec_label_pc_30fde, { 1, 0 }
}

define i32 @function_30fe3() local_unnamed_addr {
dec_label_pc_30fe3:
  %v0_30fe4 = load i32, i32* @eax, align 8
  ret i32 %v0_30fe4
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_30fe6:
  %v2_31000 = load i32, i32* %arg1, align 4
  ret i32 %v2_31000
}

define i32 @function_31014(i32 %arg1) local_unnamed_addr {
dec_label_pc_31014:
  %v0_31015 = load i32, i32* @edx, align 8
  %v3_31015 = icmp eq i32 %v0_31015, 30
  br i1 %v3_31015, label %bb, label %dec_label_pc_31014.dec_label_pc_3101e_crit_edge

dec_label_pc_31014.dec_label_pc_3101e_crit_edge:  ; preds = %dec_label_pc_31014
  %v2_3101c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3101e

bb:                                               ; preds = %dec_label_pc_31014
  %v1_3101c = call i32 @function_31023()
  br label %dec_label_pc_3101e

dec_label_pc_3101e:                               ; preds = %dec_label_pc_31014.dec_label_pc_3101e_crit_edge, %bb
  %v2_3101c = phi i32 [ %v2_3101c.pre, %dec_label_pc_31014.dec_label_pc_3101e_crit_edge ], [ %v1_3101c, %bb ]
  ret i32 %v2_3101c

; uselistorder directives
  uselistorder label %dec_label_pc_3101e, { 1, 0 }
}

define i32 @function_31023() local_unnamed_addr {
dec_label_pc_31023:
  %v0_31024 = load i32, i32* @eax, align 8
  ret i32 %v0_31024
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE() local_unnamed_addr {
dec_label_pc_31026:
  %eax.global-to-local = alloca i32, align 4
  %v5_31029 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_31029
}

define i32 @function_3102c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3102c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3102c = load i32, i32* @eax, align 8
  %v11_3102c = xor i32 %v0_3102c, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  store i32 %v11_3102c, i32* %eax.global-to-local, align 8
  %v0_3102e = load i32, i32* @ebp, align 4
  %v1_3102e = add i32 %v0_3102e, 1
  store i32 %v1_3102e, i32* @ebp, align 4
  %v0_3102f = load i32, i32* @ecx, align 4
  %v1_3102f = add i32 %v0_3102f, 1166795845
  %v2_3102f = inttoptr i32 %v1_3102f to i8*
  %v3_3102f = load i8, i8* %v2_3102f, align 1
  %v5_3102f = trunc i32 %v0_3102f to i8
  %v6_3102f = or i8 %v3_3102f, %v5_3102f
  store i8 %v6_3102f, i8* %v2_3102f, align 1
  %v0_31035 = load i32, i32* %eax.global-to-local, align 8
  %v11_31035 = or i32 %v0_31035, 137
  store i32 %v11_31035, i32* %eax.global-to-local, align 8
  ret i32 %v11_31035

; uselistorder directives
  uselistorder i32 %v11_31035, { 1, 0 }
}

define i32 @function_31037(i32 %arg1) local_unnamed_addr {
dec_label_pc_31037:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_31037 = load i32, i32* @ebp, align 4
  %v0_31038 = load i32, i32* @ecx, align 4
  %v1_31038 = add i32 %v0_31038, -1
  store i32 %v1_31038, i32* @ecx, align 4
  %v1_3103a = add i32 %v0_31037, 2
  store i32 %v1_3103a, i32* @ebp, align 4
  %v1_3103b = add i32 %v0_31038, -1587159996
  %v2_3103b = inttoptr i32 %v1_3103b to i8*
  %v3_3103b = load i8, i8* %v2_3103b, align 1
  %v5_3103b = trunc i32 %v1_31038 to i8
  %v6_3103b = load i1, i1* @cf, align 1
  %v7_3103b = zext i1 %v6_3103b to i8
  %v8_3103b = add i8 %v3_3103b, %v5_3103b
  %v9_3103b = add i8 %v7_3103b, %v8_3103b
  %v27_3103b = icmp ule i8 %v9_3103b, %v3_3103b
  %v28_3103b = icmp ult i8 %v8_3103b, %v3_3103b
  %v29_3103b = select i1 %v6_3103b, i1 %v27_3103b, i1 %v28_3103b
  store i1 %v29_3103b, i1* %cf.global-to-local, align 1
  store i8 %v9_3103b, i8* %v2_3103b, align 1
  %v0_31041 = load i32, i32* @eax, align 8
  %v1_31041 = trunc i32 %v0_31041 to i8
  %v2_31041 = load i1, i1* %cf.global-to-local, align 1
  %v3_31041 = zext i1 %v2_31041 to i8
  %v4_31041 = add i8 %v3_31041, %v1_31041
  %v19_31041 = icmp ule i8 %v4_31041, %v1_31041
  %v21_31041 = icmp eq i1 %v2_31041, %v19_31041
  store i1 %v21_31041, i1* %cf.global-to-local, align 1
  %v22_31041 = zext i8 %v4_31041 to i32
  %v24_31041 = and i32 %v0_31041, -256
  %v25_31041 = or i32 %v22_31041, %v24_31041
  store i32 %v25_31041, i32* %eax.global-to-local, align 8
  %v1_31043 = inttoptr i32 %v25_31041 to i8*
  %v2_31043 = load i8, i8* %v1_31043, align 1
  %v5_31043 = add i8 %v2_31043, %v4_31041
  store i8 %v5_31043, i8* %v1_31043, align 1
  %v0_31045 = load i32, i32* %eax.global-to-local, align 8
  %v1_31045 = load i32, i32* @ebp, align 4
  %v2_31045 = add i32 %v1_31045, -12
  %v3_31045 = inttoptr i32 %v2_31045 to i32*
  store i32 %v0_31045, i32* %v3_31045, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3104a = load i32, i32* @ebp, align 4
  %v1_3104a = add i32 %v0_3104a, -28
  %v2_3104a = inttoptr i32 %v1_3104a to i32*
  %v3_3104a = load i32, i32* %v2_3104a, align 4
  store i32 %v3_3104a, i32* %eax.global-to-local, align 8
  %v1_31050 = call i32 @unknown_652bc(i32 %v3_3104a)
  store i32 %v1_31050, i32* %eax.global-to-local, align 8
  %v0_31055 = load i32, i32* @ebp, align 4
  %v1_3105b = add i32 %v0_31055, -20
  store i32 %v1_3105b, i32* %eax.global-to-local, align 8
  ret i32 %v1_3105b

; uselistorder directives
  uselistorder i8 %v4_31041, { 0, 2, 1 }
  uselistorder i8 %v1_31041, { 1, 0 }
  uselistorder i8 %v9_3103b, { 1, 0 }
  uselistorder i8 %v8_3103b, { 1, 0 }
  uselistorder i8 %v3_3103b, { 1, 2, 0 }
}

define i32 @function_3105c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3105c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31064(i32 %arg1) local_unnamed_addr {
dec_label_pc_31064:
  %v3_31066 = load float, float* bitcast (i32* @esi to float*), align 4
  %v4_31066 = fpext float %v3_31066 to x86_fp80
  %v5_31066 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_31066 = fmul x86_fp80 %v4_31066, %v5_31066
  store x86_fp80 %v6_31066, x86_fp80* @st0, align 4
  %v0_3106d = load i32, i32* @ebp, align 4
  %v1_31074 = add i32 %v0_3106d, -36
  %v2_31074 = inttoptr i32 %v1_31074 to i32*
  %v3_31074 = load i32, i32* %v2_31074, align 4
  ret i32 %v3_31074
}

define i32 @function_3107a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3107a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3107a = call i32 @unknown_6465e()
  %v4_3107f = trunc i32 %v0_3107a to i8
  %v5_3107f = icmp eq i8 %v4_3107f, 0
  %v0_310a2 = load i32, i32* @ebp, align 4
  br i1 %v5_3107f, label %dec_label_pc_310a2, label %dec_label_pc_31083

dec_label_pc_31083:                               ; preds = %dec_label_pc_3107a
  %v1_31083 = add i32 %v0_310a2, -32
  %v2_31083 = inttoptr i32 %v1_31083 to i32*
  %v3_31083 = load i32, i32* %v2_31083, align 4
  %v1_31086 = add i32 %v0_310a2, -28
  %v2_31086 = inttoptr i32 %v1_31086 to i32*
  %v3_31086 = load i32, i32* %v2_31086, align 4
  store i32 %v3_31086, i32* %ebx.global-to-local, align 4
  %v1_31089 = add i32 %v0_310a2, -40
  %v2_31093 = call i32 @unknown_64e5c(i32 %v1_31089, i32 %v3_31083)
  %v0_3109b = load i32, i32* @ebp, align 4
  %v1_3109b = add i32 %v0_3109b, -40
  %v2_3109b = inttoptr i32 %v1_3109b to i32*
  %v3_3109b = load i32, i32* %v2_3109b, align 4
  %v1_3109e = load i32, i32* %ebx.global-to-local, align 4
  %v2_3109e = inttoptr i32 %v1_3109e to i32*
  store i32 %v3_3109b, i32* %v2_3109e, align 4
  br label %dec_label_pc_310c7

dec_label_pc_310a2:                               ; preds = %dec_label_pc_3107a
  %v1_310a2 = add i32 %v0_310a2, -36
  %v2_310a2 = inttoptr i32 %v1_310a2 to i32*
  %v3_310a2 = load i32, i32* %v2_310a2, align 4
  %v1_310a8 = call i32 @unknown_6469e(i32 %v3_310a2)
  %v1_310ad = add i32 %v1_310a8, ptrtoint (i32* @global_var_c.2390 to i32)
  %v0_310b4 = load i32, i32* @ebp, align 4
  %v1_310b4 = add i32 %v0_310b4, -16
  %v2_310ba = call i32 @unknown_652f0(i32 %v1_310b4, i32 %v1_310ad)
  %v0_310bf = load i32, i32* @ebp, align 4
  %v1_310bf = add i32 %v0_310bf, -28
  %v2_310bf = inttoptr i32 %v1_310bf to i32*
  %v3_310bf = load i32, i32* %v2_310bf, align 4
  %v1_310c2 = add i32 %v0_310bf, -16
  %v2_310c2 = inttoptr i32 %v1_310c2 to i32*
  %v3_310c2 = load i32, i32* %v2_310c2, align 4
  %v2_310c5 = inttoptr i32 %v3_310bf to i32*
  store i32 %v3_310c2, i32* %v2_310c5, align 4
  br label %dec_label_pc_310c7

dec_label_pc_310c7:                               ; preds = %dec_label_pc_310a2, %dec_label_pc_31083
  %v0_310c7 = load i32, i32* @ebp, align 4
  %v1_310c7 = add i32 %v0_310c7, -28
  %v2_310c7 = inttoptr i32 %v1_310c7 to i32*
  %v3_310c7 = load i32, i32* %v2_310c7, align 4
  store i32 %v3_310c7, i32* @eax, align 8
  %v1_310ca = add i32 %v0_310c7, -12
  %v2_310ca = inttoptr i32 %v1_310ca to i32*
  %v3_310ca = load i32, i32* %v2_310ca, align 4
  %v2_310cd = xor i32 %v3_310ca, 30
  %v3_310cd = icmp eq i32 %v2_310cd, 0
  store i32 %v2_310cd, i32* @edx, align 8
  br i1 %v3_310cd, label %bb, label %dec_label_pc_310d6

bb:                                               ; preds = %dec_label_pc_310c7
  %v1_310d4 = call i32 @function_310db()
  br label %dec_label_pc_310d6

dec_label_pc_310d6:                               ; preds = %bb, %dec_label_pc_310c7
  %v2_310d4 = phi i32 [ %v1_310d4, %bb ], [ %v3_310c7, %dec_label_pc_310c7 ]
  ret i32 %v2_310d4

; uselistorder directives
  uselistorder i32 %v0_310a2, { 3, 0, 2, 1 }
}

define i32 @function_310db() local_unnamed_addr {
dec_label_pc_310db:
  %v0_310df = load i32, i32* @eax, align 8
  ret i32 %v0_310df
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_310e2:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_31102 = load i32, i32* %arg1, align 4
  %v1_31107 = inttoptr i32 %arg2 to i32*
  %v2_31107 = load i32, i32* %v1_31107, align 4
  %v12_31109 = icmp eq i32 %v2_31102, %v2_31107
  %v1_3110b = icmp eq i1 %v12_31109, false
  %v2_3110b = zext i1 %v1_3110b to i32
  %v4_3110b = and i32 %v2_31107, -256
  %v5_3110b = or i32 %v2_3110b, %v4_3110b
  store i32 %v5_3110b, i32* @eax, align 8
  %v3_31118 = call i32 @function_3111f(i32 %arg2, i32 %tmp101)
  ret i32 %v3_31118

; uselistorder directives
  uselistorder i32 %v2_31107, { 1, 0 }
}

define i32 @function_3111f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3111f:
  %v0_31120 = load i32, i32* @eax, align 8
  ret i32 %v0_31120
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_31122:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_3113c = load i32, i32* %arg1, align 4
  %v1_3113e = inttoptr i32 %v2_3113c to i32*
  %v2_3113e = load i32, i32* %v1_3113e, align 4
  store i32 %v2_3113e, i32* %arg1, align 4
  store i32 %tmp3, i32* @eax, align 8
  %v2_31152 = call i32 @function_31159(i32 %tmp3)
  ret i32 %v2_31152
}

define i32 @function_31159(i32 %arg1) local_unnamed_addr {
dec_label_pc_31159:
  %v0_3115a = load i32, i32* @eax, align 8
  ret i32 %v0_3115a
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot3IbRKSsSH_jNS_8functionIFbSH_SH_jEEEEENS3_5mutexEEEEEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3115c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_31190() local_unnamed_addr {
dec_label_pc_31190:
  %eax.global-to-local = alloca i32, align 4
  %v0_31190 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31190
}

define i32 @function_311a1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_311a1:
  %v0_311a4 = load i32, i32* @ebx, align 4
  %v1_311a4 = add i32 %v0_311a4, 862319685
  %v2_311a4 = inttoptr i32 %v1_311a4 to i8*
  %v3_311a4 = load i8, i8* %v2_311a4, align 1
  %v4_311a4 = load i32, i32* @ecx, align 4
  %v5_311a4 = trunc i32 %v4_311a4 to i8
  %v6_311a4 = load i1, i1* @cf, align 1
  %v7_311a4 = zext i1 %v6_311a4 to i8
  %v8_311a4 = sub i8 %v3_311a4, %v5_311a4
  %v9_311a4 = add i8 %v8_311a4, %v7_311a4
  store i8 %v9_311a4, i8* %v2_311a4, align 1
  %v0_311aa = load i32, i32* @eax, align 8
  %v1_311aa = add i32 %v0_311aa, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_311aa = icmp eq i32 %v1_311aa, 0
  store i32 %v1_311aa, i32* @eax, align 8
  br i1 %v10_311aa, label %bb, label %dec_label_pc_311b1

bb:                                               ; preds = %dec_label_pc_311a1
  %v1_311af = call i32 @function_311e1()
  store i32 %v1_311af, i32* @eax, align 8
  br label %dec_label_pc_311b1

dec_label_pc_311b1:                               ; preds = %bb, %dec_label_pc_311a1
  %v0_311b1 = call i32 @function_311dc()
  ret i32 %v0_311b1
}

define i32 @function_311b4() local_unnamed_addr {
dec_label_pc_311b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_311b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_311b4
}

define i32 @function_311dc() local_unnamed_addr {
dec_label_pc_311dc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_311e1() local_unnamed_addr {
dec_label_pc_311e1:
  %v0_311e6 = load i32, i32* @eax, align 8
  ret i32 %v0_311e6
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal3_implIbRKSsS7_jNS3_10last_valueIbEEiSt4lessIiENS_8functionIFbS7_S7_jEEENSC_IFbRKNS3_10connectionES7_S7_jEEENS3_5mutexEE16invocation_stateEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_311e8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_3121a() local_unnamed_addr {
dec_label_pc_3121a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3121a = load i32, i32* %ecx.global-to-local, align 4
  %v1_3121a = add i32 %v0_3121a, -532313149
  %v2_3121a = inttoptr i32 %v1_3121a to i32*
  %v3_3121a = load i32, i32* %v2_3121a, align 4
  %v4_3121a = add i32 %v3_3121a, -1
  store i32 %v4_3121a, i32* %v2_3121a, align 4
  %v0_31220 = load i32, i32* %eax.global-to-local, align 8
  %v0_31224 = load i32, i32* %ebx.global-to-local, align 4
  %v2_31227 = call i32 @unknown_655e2(i32 %v0_31224, i32 %v0_31220)
  store i32 %v2_31227, i32* %eax.global-to-local, align 8
  %v0_3122c = load i32, i32* %ebp.global-to-local, align 4
  %v1_3122c = add i32 %v0_3122c, -28
  %v2_3122c = inttoptr i32 %v1_3122c to i32*
  %v3_3122c = load i32, i32* %v2_3122c, align 4
  store i32 %v3_3122c, i32* %eax.global-to-local, align 8
  %v0_3122f = load i32, i32* %ebx.global-to-local, align 4
  %v2_3122f = inttoptr i32 %v3_3122c to i32*
  store i32 %v0_3122f, i32* %v2_3122f, align 4
  %v0_31231 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31231 = add i32 %v0_31231, -12
  %v2_31231 = inttoptr i32 %v1_31231 to i32*
  %v3_31231 = load i32, i32* %v2_31231, align 4
  %v2_31234 = xor i32 %v3_31231, 30
  %v3_31234 = icmp eq i32 %v2_31234, 0
  store i32 %v2_31234, i32* @eax, align 8
  br i1 %v3_31234, label %bb, label %dec_label_pc_3123d

bb:                                               ; preds = %dec_label_pc_3121a
  %v1_3123b = call i32 @function_3126d()
  store i32 %v1_3123b, i32* @eax, align 8
  br label %dec_label_pc_3123d

dec_label_pc_3123d:                               ; preds = %bb, %dec_label_pc_3121a
  %v0_3123d = call i32 @function_31268()
  store i32 %v0_3123d, i32* %eax.global-to-local, align 8
  ret i32 %v0_3123d
}

define i32 @function_31240() local_unnamed_addr {
dec_label_pc_31240:
  %eax.global-to-local = alloca i32, align 4
  %v0_31240 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31240
}

define i32 @function_31262(i32 %arg1) local_unnamed_addr {
dec_label_pc_31262:
  %v0_31262 = load i32, i32* @eax, align 8
  %v2_31262 = load i32, i32* @ecx, align 4
  %v3_31262 = lshr i32 %v2_31262, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_31262 = add i32 %v3_31262, %v0_31262
  %v20_31262 = and i32 %v5_31262, 255
  %v22_31262 = and i32 %v0_31262, -256
  %v23_31262 = or i32 %v20_31262, %v22_31262
  ret i32 %v23_31262

; uselistorder directives
  uselistorder i32 %v0_31262, { 1, 0 }
}

define i32 @function_31268() local_unnamed_addr {
dec_label_pc_31268:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3126d() local_unnamed_addr {
dec_label_pc_3126d:
  %v0_31272 = load i32, i32* @eax, align 8
  ret i32 %v0_31272
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_E5equalERKSY_() local_unnamed_addr {
dec_label_pc_31274:
  %eax.global-to-local = alloca i32, align 4
  %v17_31277 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_31277
}

define i32 @function_3127a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3127a:
  %v0_3127a = load i32, i32* @ebp, align 4
  %v1_3127a = add i32 %v0_3127a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3127a = inttoptr i32 %v1_3127a to i32*
  %v3_3127a = load i32, i32* %v2_3127a, align 4
  %v2_3127d = add i32 %v0_3127a, -28
  %v3_3127d = inttoptr i32 %v2_3127d to i32*
  store i32 %v3_3127a, i32* %v3_3127d, align 4
  %v0_31280 = load i32, i32* @ebp, align 4
  %v1_31280 = add i32 %v0_31280, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_31280 = inttoptr i32 %v1_31280 to i32*
  %v3_31280 = load i32, i32* %v2_31280, align 4
  %v2_31283 = add i32 %v0_31280, -32
  %v3_31283 = inttoptr i32 %v2_31283 to i32*
  store i32 %v3_31280, i32* %v3_31283, align 4
  %v1_3128c = load i32, i32* @ebp, align 4
  %v2_3128c = add i32 %v1_3128c, -12
  %v3_3128c = inttoptr i32 %v2_3128c to i32*
  store i32 30, i32* %v3_3128c, align 4
  %v0_31291 = load i32, i32* @ebp, align 4
  %v1_31294 = add i32 %v0_31291, -28
  %v2_31294 = inttoptr i32 %v1_31294 to i32*
  %v3_31294 = load i32, i32* %v2_31294, align 4
  ret i32 %v3_31294
}

define i32 @function_312a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_312a0:
  %v0_312a0 = load i32, i32* @eax, align 8
  %v1_312a0 = trunc i32 %v0_312a0 to i8
  %v2_312a0 = load i32, i32* @ebx, align 4
  %v4_312a0 = load i32, i32* @esi, align 4
  %v7_312a0 = add i32 %v4_312a0, %v2_312a0
  %tmp = urem i32 %v7_312a0, 65536
  %v8_312a0 = inttoptr i32 %tmp to i8*
  %v9_312a0 = load i8, i8* %v8_312a0, align 1
  %v10_312a0 = add i8 %v9_312a0, %v1_312a0
  %v25_312a0 = zext i8 %v10_312a0 to i32
  %v27_312a0 = and i32 %v0_312a0, -256
  %v28_312a0 = or i32 %v25_312a0, %v27_312a0
  store i32 %v28_312a0, i32* @eax, align 8
  %v0_312a3 = load i32, i32* @ebp, align 4
  %v1_312a3 = add i32 %v0_312a3, -12
  %v2_312a3 = inttoptr i32 %v1_312a3 to i32*
  %v3_312a3 = load i32, i32* %v2_312a3, align 4
  %v3_312a6 = icmp eq i32 %v3_312a3, 30
  br i1 %v3_312a6, label %bb, label %dec_label_pc_312af

bb:                                               ; preds = %dec_label_pc_312a0
  %v1_312ad = call i32 @function_312b4()
  br label %dec_label_pc_312af

dec_label_pc_312af:                               ; preds = %bb, %dec_label_pc_312a0
  %v2_312ad = phi i32 [ %v1_312ad, %bb ], [ %v28_312a0, %dec_label_pc_312a0 ]
  ret i32 %v2_312ad
}

define i32 @function_312b4() local_unnamed_addr {
dec_label_pc_312b4:
  %v0_312b5 = load i32, i32* @eax, align 8
  ret i32 %v0_312b5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_312b6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_312e0 = call i32 @unknown_5cd40(i32 %tmp102, i32 %arg2)
  %v1_312e8 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_312ee = call i32 @unknown_3fb1a(i32 %v1_312e8)
  store i32 ptrtoint (%vtable_38968_type* @global_var_38968.2574 to i32), i32* %arg1, align 4
  %v2_312ff = inttoptr i32 %v1_312e8 to i32*
  store i32 ptrtoint (i32* @global_var_3897c.2575 to i32), i32* %v2_312ff, align 4
  store i32 0, i32* @eax, align 8
  %v1_31310 = call i32 @function_31317()
  ret i32 %v1_31310

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38968_type* @global_var_38968.2574 to i32), { 2, 1, 0 }
}

define i32 @function_31317() local_unnamed_addr {
dec_label_pc_31317:
  %v0_31318 = load i32, i32* @eax, align 8
  ret i32 %v0_31318
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3131a:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_31345 = call i32 @unknown_5cdf0(i32 %tmp6, i32 %arg2)
  %v1_3134d = add i32 %tmp6, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_31353 = call i32 @unknown_48e8a(i32 %v1_3134d)
  store i32 ptrtoint (%vtable_38908_type* @global_var_38908.2576 to i32), i32* %arg1, align 4
  %v1_31364 = add i32 %tmp6, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_31364 = inttoptr i32 %v1_31364 to i32*
  store i32 ptrtoint (i32* @global_var_38924.2577 to i32), i32* %v2_31364, align 4
  %v2_3136e = inttoptr i32 %v1_3134d to i32*
  store i32 ptrtoint (i32* @global_var_38934.2578 to i32), i32* %v2_3136e, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38908_type* @global_var_38908.2576 to i32), { 1, 0 }
}

define i32 @function_3137d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3137d:
  %v9_3137f = load i32, i32* @ecx, align 4
  %v12_3137f = mul i32 %v9_3137f, add (i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 1)
  %v13_3137f = inttoptr i32 %v12_3137f to i8*
  store i8 -1, i8* %v13_3137f, align 1
  %v0_31383 = load i32, i32* @eax, align 8
  %v11_31383 = and i32 %v0_31383, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_31388 = call i32 @unknown_41278(i32 %v11_31383)
  %v0_3138d = call i32 @function_313b4()
  ret i32 %v0_3138d
}

define i32 @function_31390() local_unnamed_addr {
dec_label_pc_31390:
  %eax.global-to-local = alloca i32, align 4
  %v0_31390 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31390
}

define i32 @function_313b4() local_unnamed_addr {
dec_label_pc_313b4:
  %v0_313b4 = load i32, i32* @ebp, align 4
  %v1_313b4 = add i32 %v0_313b4, -12
  %v2_313b4 = inttoptr i32 %v1_313b4 to i32*
  %v3_313b4 = load i32, i32* %v2_313b4, align 4
  %v2_313b7 = xor i32 %v3_313b4, 30
  %v3_313b7 = icmp eq i32 %v2_313b7, 0
  store i32 %v2_313b7, i32* @eax, align 8
  br i1 %v3_313b7, label %bb, label %dec_label_pc_313c0

bb:                                               ; preds = %dec_label_pc_313b4
  %v1_313be = call i32 @function_313c5()
  br label %dec_label_pc_313c0

dec_label_pc_313c0:                               ; preds = %bb, %dec_label_pc_313b4
  %v2_313be = phi i32 [ %v1_313be, %bb ], [ %v2_313b7, %dec_label_pc_313b4 ]
  ret i32 %v2_313be
}

define i32 @function_313c5() local_unnamed_addr {
dec_label_pc_313c5:
  %v0_313ca = load i32, i32* @eax, align 8
  ret i32 %v0_313ca
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_E11dereferenceEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_313cc:
  %v1_313e7 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_313e7 = inttoptr i32 %v1_313e7 to i32*
  %v3_313e7 = load i32, i32* %v2_313e7, align 4
  %v1_313ed = call i32 @unknown_658bc(i32 %v3_313e7)
  %v1_313fc = call i32 @unknown_5c5be(i32 %arg1)
  ret i32 %v1_313fc
}

define i32 @function_31405(i32 %arg1) local_unnamed_addr {
dec_label_pc_31405:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_31405 = load i32, i32* @edx, align 8
  store i32 %v0_31405, i32* %stack_var_-4, align 4
  %v0_31406 = load i32, i32* @ecx, align 4
  %v1_31406 = add i32 %v0_31406, ptrtoint ([153 x i8]* @global_var_88c2.2596 to i32)
  %v2_31406 = inttoptr i32 %v1_31406 to i8*
  %v3_31406 = load i8, i8* %v2_31406, align 1
  %v4_31406 = load i32, i32* @eax, align 8
  %v5_31406 = trunc i32 %v4_31406 to i8
  %v6_31406 = or i8 %v5_31406, %v3_31406
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_31406, i8* %v2_31406, align 1
  %v0_3140c = load i32, i32* @ecx, align 4
  %v1_3140c = add i32 %v0_3140c, -1996217276
  %v2_3140c = inttoptr i32 %v1_3140c to i8*
  %v3_3140c = load i8, i8* %v2_3140c, align 1
  %v5_3140c = trunc i32 %v0_3140c to i8
  %v6_3140c = add i8 %v3_3140c, %v5_3140c
  %v11_3140c = icmp ult i8 %v6_3140c, %v3_3140c
  store i1 %v11_3140c, i1* %cf.global-to-local, align 1
  store i8 %v6_3140c, i8* %v2_3140c, align 1
  %v0_31412 = load i32, i32* @eax, align 8
  %v1_31412 = trunc i32 %v0_31412 to i8
  %v2_31412 = load i1, i1* %cf.global-to-local, align 1
  %v3_31412 = zext i1 %v2_31412 to i8
  %v20_31412 = add i8 %v1_31412, 36
  %v21_31412 = add i8 %v20_31412, %v3_31412
  %v22_31412 = icmp ule i8 %v21_31412, %v1_31412
  %v23_31412 = icmp ugt i8 %v1_31412, -37
  %v24_31412 = select i1 %v2_31412, i1 %v22_31412, i1 %v23_31412
  store i1 %v24_31412, i1* %cf.global-to-local, align 1
  %v0_31414 = load i32, i32* %stack_var_-4, align 4
  %v1_31414 = call i32 @unknown_658f4(i32 %v0_31414)
  %v1_31419 = trunc i32 %v1_31414 to i8
  %v2_31419 = load i32, i32* @ebp, align 4
  %v3_31419 = add i32 %v2_31419, -13
  %v4_31419 = inttoptr i32 %v3_31419 to i8*
  store i8 %v1_31419, i8* %v4_31419, align 1
  %v0_3141c = load i32, i32* @ebp, align 4
  %v1_3141c = add i32 %v0_3141c, -28
  %v2_3141c = inttoptr i32 %v1_3141c to i32*
  %v3_3141c = load i32, i32* %v2_3141c, align 4
  %v1_3141f = add i32 %v3_3141c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3141f = inttoptr i32 %v1_3141f to i32*
  %v3_3141f = load i32, i32* %v2_3141f, align 4
  %v1_31422 = add i32 %v0_3141c, -13
  store i32 %v3_3141f, i32* %stack_var_-4, align 4
  %v2_3142c = call i32 @unknown_65944(i32 %v3_3141f, i32 %v1_31422)
  %v0_31431 = load i32, i32* @ebp, align 4
  %v1_31431 = add i32 %v0_31431, -28
  %v2_31431 = inttoptr i32 %v1_31431 to i32*
  %v3_31431 = load i32, i32* %v2_31431, align 4
  %v1_31434 = add i32 %v3_31431, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_31434 = inttoptr i32 %v1_31434 to i32*
  %v3_31434 = load i32, i32* %v2_31434, align 4
  store i32 %v3_31434, i32* %stack_var_-4, align 4
  %v1_3143a = call i32 @unknown_5d1a4(i32 %v3_31434)
  store i32 %v1_3143a, i32* @eax, align 8
  %v0_3143f = load i32, i32* @ebp, align 4
  %v1_3143f = add i32 %v0_3143f, -12
  %v2_3143f = inttoptr i32 %v1_3143f to i32*
  %v3_3143f = load i32, i32* %v2_3143f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_31442 = icmp eq i32 %v3_3143f, 30
  br i1 %v3_31442, label %bb, label %dec_label_pc_3144b

bb:                                               ; preds = %dec_label_pc_31405
  %v1_31449 = call i32 @function_3149b()
  store i32 %v1_31449, i32* @eax, align 8
  br label %dec_label_pc_3144b

dec_label_pc_3144b:                               ; preds = %bb, %dec_label_pc_31405
  %v0_3144b = call i32 @function_31496()
  ret i32 %v0_3144b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 2, 0, 3 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i32 -1996217276, { 1, 0 }
}

define i32 @function_3144e() local_unnamed_addr {
dec_label_pc_3144e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3144e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3144e
}

define i32 @function_31483() local_unnamed_addr {
dec_label_pc_31483:
  %eax.global-to-local = alloca i32, align 4
  %v0_31483 = load i32, i32* %eax.global-to-local, align 8
  %v11_31483 = and i32 %v0_31483, -24
  store i32 %v11_31483, i32* %eax.global-to-local, align 8
  ret i32 %v11_31483

; uselistorder directives
  uselistorder i32 %v11_31483, { 1, 0 }
}

define i32 @function_31496() local_unnamed_addr {
dec_label_pc_31496:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3149b() local_unnamed_addr {
dec_label_pc_3149b:
  %v0_314a0 = load i32, i32* @eax, align 8
  ret i32 %v0_314a0
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE12assign_valueERKbN4mpl_5bool_ILb0EEE(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_314a2:
  %v1_314cc = call i32 @unknown_60104(i32 %arg1)
  %v2_314d4 = load i8, i8* %arg2, align 1
  %v3_314d7 = inttoptr i32 %v1_314cc to i8*
  store i8 %v2_314d4, i8* %v3_314d7, align 1
  store i32 0, i32* @eax, align 8
  %v1_314e3 = call i32 @function_314ea()
  ret i32 %v1_314e3
}

define i32 @function_314ea() local_unnamed_addr {
dec_label_pc_314ea:
  %v0_314eb = load i32, i32* @eax, align 8
  ret i32 %v0_314eb
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE9constructERKb(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_314ec:
  %stack_var_-60 = alloca i8*, align 4
  %v4_31509 = ptrtoint i8* %arg1 to i32
  %v1_3150c = add i32 %v4_31509, 1
  %v3_3150f = inttoptr i32 %v1_3150c to i8*
  store i8* %v3_3150f, i8** %stack_var_-60, align 4
  %v2_31512 = call i32 @unknown_65aa6(i32 %v1_3150c)
  store i32 %v2_31512, i32* @eax, align 8
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-60, align 4
  %v3_31522 = call i32 @function_369dc(i32 1, i32 %v2_31512)
  %v2_31527 = icmp eq i32 %v3_31522, 0
  br i1 %v2_31527, label %dec_label_pc_31533, label %dec_label_pc_3152b

dec_label_pc_3152b:                               ; preds = %dec_label_pc_314ec
  %tmp114 = inttoptr i32 %arg2 to i8*
  %v4_31522 = inttoptr i32 %v3_31522 to i8*
  %v2_3152e = load i8, i8* %tmp114, align 1
  store i8 %v2_3152e, i8* %v4_31522, align 1
  br label %dec_label_pc_31533

dec_label_pc_31533:                               ; preds = %dec_label_pc_3152b, %dec_label_pc_314ec
  store i8 1, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v1_31543 = load i8*, i8** %stack_var_-60, align 4
  %v2_31543 = ptrtoint i8* %v1_31543 to i32
  %v5_31543 = call i32 @function_3154a(i32 %v2_31543, i32 %v2_31512, i32 ptrtoint (i32* @1 to i32))
  ret i32 %v5_31543

; uselistorder directives
  uselistorder i32 %v3_31522, { 1, 0 }
  uselistorder i8** %stack_var_-60, { 2, 1, 0 }
}

define i32 @function_3154a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3154a:
  %v0_3154b = load i32, i32* @eax, align 8
  ret i32 %v0_3154b
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_E9incrementEv() local_unnamed_addr {
dec_label_pc_3154c:
  %eax.global-to-local = alloca i32, align 4
  %v2_3154d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3154d
}

define i32 @function_31551(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31551:
  %v1_3155e = load i32, i32* @ebp, align 4
  %v2_3155e = add i32 %v1_3155e, -12
  %v3_3155e = inttoptr i32 %v2_3155e to i32*
  store i32 30, i32* %v3_3155e, align 4
  %v0_31563 = load i32, i32* @ebp, align 4
  %v1_31563 = add i32 %v0_31563, -28
  %v2_31563 = inttoptr i32 %v1_31563 to i32*
  %v3_31563 = load i32, i32* %v2_31563, align 4
  %v1_31569 = call i32 @unknown_5caa4(i32 %v3_31563)
  ret i32 %v1_31569
}

define i32 @function_31570(i32 %arg1) local_unnamed_addr {
dec_label_pc_31570:
  %v0_31574 = call i32 @unknown_582ea()
  %v0_31579 = load i32, i32* @ebp, align 4
  %v1_31579 = add i32 %v0_31579, -28
  %v2_31579 = inttoptr i32 %v1_31579 to i32*
  %v3_31579 = load i32, i32* %v2_31579, align 4
  %v1_3157c = add i32 %v3_31579, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3157c = inttoptr i32 %v1_3157c to i32*
  %v3_3157c = load i32, i32* %v2_3157c, align 4
  %v1_31582 = call i32 @unknown_65b34(i32 %v3_3157c)
  %v0_31587 = load i32, i32* @ebp, align 4
  %v1_31587 = add i32 %v0_31587, -12
  %v2_31587 = inttoptr i32 %v1_31587 to i32*
  %v3_31587 = load i32, i32* %v2_31587, align 4
  %v2_3158a = xor i32 %v3_31587, 30
  %v3_3158a = icmp eq i32 %v2_3158a, 0
  store i32 %v2_3158a, i32* @eax, align 8
  br i1 %v3_3158a, label %bb, label %dec_label_pc_31593

bb:                                               ; preds = %dec_label_pc_31570
  %v1_31591 = call i32 @function_31598()
  br label %dec_label_pc_31593

dec_label_pc_31593:                               ; preds = %bb, %dec_label_pc_31570
  %v2_31591 = phi i32 [ %v1_31591, %bb ], [ %v2_3158a, %dec_label_pc_31570 ]
  ret i32 %v2_31591
}

define i32 @function_31598() local_unnamed_addr {
dec_label_pc_31598:
  %v0_31599 = load i32, i32* @eax, align 8
  ret i32 %v0_31599
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3159a:
  %v1_315b4 = add i32 %arg1, 1
  %v1_315ba = call i32 @unknown_65b54(i32 %v1_315b4)
  store i32 %v1_315ba, i32* @eax, align 8
  %v2_315cf = call i32 @function_315d6(i32 %v1_315ba)
  ret i32 %v2_315cf
}

define i32 @function_315d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_315d6:
  %v0_315d7 = load i32, i32* @eax, align 8
  ret i32 %v0_315d7
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE11dereferenceEPbN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_315d8:
  ret i32 %arg2
}

define i32 @function_315ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_315ec:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_315ec = load i32, i32* @ebp, align 4
  %v1_315ec = add i32 %v0_315ec, 1
  store i32 %v1_315ec, i32* @ebp, align 4
  %v0_315ed = load i32, i32* @eax, align 8
  %v1_315ed = add i32 %v0_315ed, -1587159227
  %v2_315ed = inttoptr i32 %v1_315ed to i8*
  %v3_315ed = load i8, i8* %v2_315ed, align 1
  %v4_315ed = load i32, i32* @ecx, align 4
  %v5_315ed = trunc i32 %v4_315ed to i8
  %v6_315ed = load i1, i1* @cf, align 1
  %v7_315ed = zext i1 %v6_315ed to i8
  %v8_315ed = add i8 %v5_315ed, %v3_315ed
  %v9_315ed = add i8 %v8_315ed, %v7_315ed
  %v27_315ed = icmp ule i8 %v9_315ed, %v3_315ed
  %v28_315ed = icmp ult i8 %v8_315ed, %v3_315ed
  %v29_315ed = select i1 %v6_315ed, i1 %v27_315ed, i1 %v28_315ed
  store i1 %v29_315ed, i1* %cf.global-to-local, align 1
  store i8 %v9_315ed, i8* %v2_315ed, align 1
  %v0_315f3 = load i32, i32* @eax, align 8
  %v1_315f3 = trunc i32 %v0_315f3 to i8
  %v2_315f3 = load i1, i1* %cf.global-to-local, align 1
  %v3_315f3 = zext i1 %v2_315f3 to i8
  %v4_315f3 = add i8 %v3_315f3, %v1_315f3
  %v19_315f3 = icmp ule i8 %v4_315f3, %v1_315f3
  %v21_315f3 = icmp eq i1 %v2_315f3, %v19_315f3
  store i1 %v21_315f3, i1* %cf.global-to-local, align 1
  %v22_315f3 = zext i8 %v4_315f3 to i32
  %v24_315f3 = and i32 %v0_315f3, -256
  %v25_315f3 = or i32 %v22_315f3, %v24_315f3
  store i32 %v25_315f3, i32* %eax.global-to-local, align 8
  %v1_315f5 = inttoptr i32 %v25_315f3 to i8*
  %v2_315f5 = load i8, i8* %v1_315f5, align 1
  %v5_315f5 = add i8 %v2_315f5, %v4_315f3
  store i8 %v5_315f5, i8* %v1_315f5, align 1
  %v0_315f7 = load i32, i32* %eax.global-to-local, align 8
  %v1_315f7 = load i32, i32* @ebp, align 4
  %v2_315f7 = add i32 %v1_315f7, -12
  %v3_315f7 = inttoptr i32 %v2_315f7 to i32*
  store i32 %v0_315f7, i32* %v3_315f7, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_315fc = load i32, i32* @ebp, align 4
  %v1_315fc = add i32 %v0_315fc, -32
  %v2_315fc = inttoptr i32 %v1_315fc to i32*
  %v3_315fc = load i32, i32* %v2_315fc, align 4
  store i32 %v3_315fc, i32* @eax, align 8
  %v1_315ff = add i32 %v0_315fc, -12
  %v2_315ff = inttoptr i32 %v1_315ff to i32*
  %v3_315ff = load i32, i32* %v2_315ff, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_31602 = icmp eq i32 %v3_315ff, 30
  br i1 %v3_31602, label %bb, label %dec_label_pc_3160b

bb:                                               ; preds = %dec_label_pc_315ec
  %v1_31609 = call i32 @function_31610()
  store i32 %v1_31609, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3160b

dec_label_pc_3160b:                               ; preds = %bb, %dec_label_pc_315ec
  %v2_31609 = phi i32 [ %v1_31609, %bb ], [ %v3_315fc, %dec_label_pc_315ec ]
  ret i32 %v2_31609

; uselistorder directives
  uselistorder i8 %v4_315f3, { 0, 2, 1 }
  uselistorder i8 %v1_315f3, { 1, 0 }
  uselistorder i8 %v9_315ed, { 1, 0 }
  uselistorder i8 %v3_315ed, { 1, 2, 0 }
}

define i32 @function_31610() local_unnamed_addr {
dec_label_pc_31610:
  %v0_31611 = load i32, i32* @eax, align 8
  ret i32 %v0_31611
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8weak_ptrIvEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31612:
  store i32 %arg1, i32* @eax, align 8
  %v2_31636 = call i32 @function_3163d(i32 %arg1)
  ret i32 %v2_31636
}

define i32 @function_3163d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3163d:
  %v0_3163e = load i32, i32* @eax, align 8
  ret i32 %v0_3163e
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_31640:
  %tmp106 = ptrtoint i32* %arg2 to i32
  %v2_3166c = load i32, i32* %arg2, align 4
  %v7_3167f = call i32 @unknown_65c5e(i32 %arg1, i32 %v2_3166c, i32 %arg3, i32 %arg4, i32 %arg3, i32 %tmp106, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_31694 = call i32 @function_3169b()
  ret i32 %v1_31694

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_3169b() local_unnamed_addr {
dec_label_pc_3169b:
  %v0_3169c = load i32, i32* @eax, align 8
  ret i32 %v0_3169c
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8weak_ptrIvEEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3169f:
  store i32 %arg1, i32* @eax, align 8
  %v2_316c3 = call i32 @function_316ca(i32 %arg1)
  ret i32 %v2_316c3
}

define i32 @function_316ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_316ca:
  %v0_316cb = load i32, i32* @eax, align 8
  ret i32 %v0_316cb
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitINS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_316cc:
  %v1_316fb = call i32 @unknown_65d74(i32 %arg3)
  %v4_31719 = call i32 @unknown_62d0c(i32 %arg1, i32 %arg2, i32 %v1_316fb, i32 1)
  store i32 %arg1, i32* @eax, align 8
  %v1_3172e = call i32 @function_31735()
  ret i32 %v1_3172e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_31735() local_unnamed_addr {
dec_label_pc_31735:
  %v0_31736 = load i32, i32* @eax, align 8
  ret i32 %v0_31736
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail21foreign_void_weak_ptrEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31739:
  store i32 %arg1, i32* @eax, align 8
  %v2_3175d = call i32 @function_31764(i32 %arg1)
  ret i32 %v2_3175d
}

define i32 @function_31764(i32 %arg1) local_unnamed_addr {
dec_label_pc_31764:
  %v0_31765 = load i32, i32* @eax, align 8
  ret i32 %v0_31765
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_31766:
  %tmp106 = ptrtoint i32* %arg2 to i32
  %v2_31792 = load i32, i32* %arg2, align 4
  %v7_317a5 = call i32 @unknown_65e3e(i32 %arg1, i32 %v2_31792, i32 %arg3, i32 %arg4, i32 %arg3, i32 %tmp106, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_317ba = call i32 @function_317c1()
  ret i32 %v1_317ba

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_317c1() local_unnamed_addr {
dec_label_pc_317c1:
  %v0_317c2 = load i32, i32* @eax, align 8
  ret i32 %v0_317c2
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail21foreign_void_weak_ptrEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_317c5:
  store i32 %arg1, i32* @eax, align 8
  %v2_317e9 = call i32 @function_317f0(i32 %arg1)
  ret i32 %v2_317e9
}

define i32 @function_317f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_317f0:
  %v0_317f1 = load i32, i32* @eax, align 8
  ret i32 %v0_317f1
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitINS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_EERKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_317f2:
  %v1_31821 = call i32 @unknown_65f54(i32 %arg3)
  %v4_3183f = call i32 @unknown_62f58(i32 %arg1, i32 %arg2, i32 %v1_31821, i32 1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_31852(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31852:
  %v2_31852 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_31852 = load i32, i32* @eax, align 8
  %v4_31852 = trunc i32 %v3_31852 to i8
  %v5_31852 = add i8 %v4_31852, %v2_31852
  %v21_31852 = inttoptr i32 %v3_31852 to i8*
  store i8 %v5_31852, i8* %v21_31852, align 1
  %v0_31854 = load i32, i32* @eax, align 8
  ret i32 %v0_31854
}

define i32 @function_3185a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3185a:
  %v0_3185c = load i32, i32* @eax, align 8
  ret i32 %v0_3185c
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_10shared_ptrIvEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3185f:
  store i32 %arg1, i32* @eax, align 8
  %v2_31883 = call i32 @function_3188a(i32 %arg1)
  ret i32 %v2_31883
}

define i32 @function_3188a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3188a:
  %v0_3188b = load i32, i32* @eax, align 8
  ret i32 %v0_3188b
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_10shared_ptrIvEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3188c:
  store i1 false, i1* @sf, align 1
  %v2_318b2 = load i32, i32* %arg1, align 4
  store i32 %v2_318b2, i32* @eax, align 8
  %v2_318bf = call i32 @function_36d7c(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %v2_318b2)
  %v1_318c4 = icmp eq i32 %v2_318bf, 0
  br i1 %v1_318c4, label %dec_label_pc_318d7, label %dec_label_pc_318c8

dec_label_pc_318c8:                               ; preds = %dec_label_pc_3188c
  %v2_318d2 = call i32 @unknown_44192(i32 %v2_318bf, i32 %arg2)
  br label %dec_label_pc_318d7

dec_label_pc_318d7:                               ; preds = %dec_label_pc_318c8, %dec_label_pc_3188c
  store i32 0, i32* @eax, align 8
  %v1_318e1 = call i32 @function_318e8()
  ret i32 %v1_318e1
}

define i32 @function_318e8() local_unnamed_addr {
dec_label_pc_318e8:
  %v0_318e9 = load i32, i32* @eax, align 8
  ret i32 %v0_318e9
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_10shared_ptrIvEEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_318ea:
  store i32 %arg1, i32* @eax, align 8
  %v2_3190e = call i32 @function_31915(i32 %arg1)
  ret i32 %v2_3190e
}

define i32 @function_31915(i32 %arg1) local_unnamed_addr {
dec_label_pc_31915:
  %v0_31916 = load i32, i32* @eax, align 8
  ret i32 %v0_31916
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_10shared_ptrIvEEEEvRKNS1_13backup_holderIT_EEl(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31918:
  %ebx.global-to-local = alloca i32, align 4
  %v1_31942 = call i32 @unknown_660aa(i32 %arg2)
  store i32 %v1_31942, i32* %ebx.global-to-local, align 4
  %v2_3194c = load i32, i32* %arg1, align 4
  store i32 %v2_3194c, i32* @eax, align 8
  %v2_31959 = call i32 @function_36e08(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %v2_3194c)
  %v1_3195e = icmp eq i32 %v2_31959, 0
  br i1 %v1_3195e, label %dec_label_pc_3196e, label %dec_label_pc_31962

dec_label_pc_31962:                               ; preds = %dec_label_pc_31918
  %v0_31962 = load i32, i32* %ebx.global-to-local, align 4
  %v2_31969 = call i32 @unknown_4421e(i32 %v2_31959, i32 %v0_31962)
  br label %dec_label_pc_3196e

dec_label_pc_3196e:                               ; preds = %dec_label_pc_31962, %dec_label_pc_31918
  store i32 0, i32* @eax, align 8
  %v1_31978 = call i32 @function_3197f()
  ret i32 %v1_31978
}

define i32 @function_3197f() local_unnamed_addr {
dec_label_pc_3197f:
  %v0_31984 = load i32, i32* @eax, align 8
  ret i32 %v0_31984
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail23foreign_void_shared_ptrEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31985:
  store i32 %arg1, i32* @eax, align 8
  %v2_319a9 = call i32 @function_319b0(i32 %arg1)
  ret i32 %v2_319a9
}

define i32 @function_319b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_319b0:
  %v0_319b1 = load i32, i32* @eax, align 8
  ret i32 %v0_319b1
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_319b2:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_319ef = icmp eq i32* %arg1, null
  br i1 %v1_319ef, label %bb, label %dec_label_pc_319f3

bb:                                               ; preds = %dec_label_pc_319b2
  %v2_319db = load i32, i32* %arg1, align 4
  %v3_319f1 = call i32 @function_31a1c(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 %v2_319db)
  br label %dec_label_pc_319f3

dec_label_pc_319f3:                               ; preds = %bb, %dec_label_pc_319b2
  %v2_319fd = call i32 @unknown_43fdc(i32 %tmp105, i32 %arg2)
  %v2_31a02 = call i32 @function_31a1c(i32 %tmp105, i32 %arg2)
  ret i32 %v2_31a02

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_31a1c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0, 2 }
}

define i32 @function_31a0c() local_unnamed_addr {
dec_label_pc_31a0c:
  %eax.global-to-local = alloca i32, align 4
  %v0_31a0c = load i32, i32* %eax.global-to-local, align 8
  %v11_31a0c = and i32 %v0_31a0c, -24
  store i32 %v11_31a0c, i32* %eax.global-to-local, align 8
  ret i32 %v11_31a0c

; uselistorder directives
  uselistorder i32 %v11_31a0c, { 1, 0 }
}

define i32 @function_31a1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31a1c:
  %v0_31a1c = load i32, i32* @ebp, align 4
  %v1_31a1c = add i32 %v0_31a1c, -28
  %v2_31a1c = inttoptr i32 %v1_31a1c to i32*
  %v3_31a1c = load i32, i32* %v2_31a1c, align 4
  %v2_31a1f = xor i32 %v3_31a1c, 30
  %v3_31a1f = icmp eq i32 %v2_31a1f, 0
  store i32 %v2_31a1f, i32* @eax, align 8
  br i1 %v3_31a1f, label %bb, label %dec_label_pc_31a28

bb:                                               ; preds = %dec_label_pc_31a1c
  %v1_31a26 = call i32 @function_31a2d()
  br label %dec_label_pc_31a28

dec_label_pc_31a28:                               ; preds = %bb, %dec_label_pc_31a1c
  %v2_31a26 = phi i32 [ %v1_31a26, %bb ], [ %v2_31a1f, %dec_label_pc_31a1c ]
  ret i32 %v2_31a26
}

define i32 @function_31a2d() local_unnamed_addr {
dec_label_pc_31a2d:
  %v0_31a34 = load i32, i32* @eax, align 8
  ret i32 %v0_31a34
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a35:
  store i32 %arg1, i32* @eax, align 8
  %v2_31a59 = call i32 @function_31a60(i32 %arg1)
  ret i32 %v2_31a59
}

define i32 @function_31a60(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a60:
  %v0_31a61 = load i32, i32* @eax, align 8
  ret i32 %v0_31a61
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRKNS1_13backup_holderIT_EEl(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31a62:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_31a8e = call i32 @unknown_66224(i32 %arg2)
  store i32 %v1_31a8e, i32* @edi, align 8
  store i32 %tmp105, i32* @eax, align 8
  %v2_31a98 = load i32, i32* %arg1, align 4
  %v2_31aa5 = call i32 @function_36f52(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 %v2_31a98)
  %v1_31aac = icmp eq i32 %v2_31aa5, 0
  br i1 %v1_31aac, label %bb, label %dec_label_pc_31ab0

bb:                                               ; preds = %dec_label_pc_31a62
  %v1_31aae = call i32 @function_31ad6()
  br label %dec_label_pc_31ab0

dec_label_pc_31ab0:                               ; preds = %bb, %dec_label_pc_31a62
  %v0_31ab0 = load i32, i32* @edi, align 8
  %v2_31ab7 = call i32 @unknown_4408c(i32 %v2_31aa5, i32 %v0_31ab0)
  %v0_31abc = call i32 @function_31ad6()
  ret i32 %v0_31abc

; uselistorder directives
  uselistorder i32 ()* @function_31ad6, { 1, 0 }
}

define i32 @function_31ad6() local_unnamed_addr {
dec_label_pc_31ad6:
  %v0_31ad6 = load i32, i32* @ebp, align 4
  %v1_31ad6 = add i32 %v0_31ad6, -28
  %v2_31ad6 = inttoptr i32 %v1_31ad6 to i32*
  %v3_31ad6 = load i32, i32* %v2_31ad6, align 4
  %v2_31ad9 = xor i32 %v3_31ad6, 30
  %v3_31ad9 = icmp eq i32 %v2_31ad9, 0
  store i32 %v2_31ad9, i32* @eax, align 8
  br i1 %v3_31ad9, label %bb, label %dec_label_pc_31ae2

bb:                                               ; preds = %dec_label_pc_31ad6
  %v1_31ae0 = call i32 @function_31ae7()
  br label %dec_label_pc_31ae2

dec_label_pc_31ae2:                               ; preds = %bb, %dec_label_pc_31ad6
  %v2_31ae0 = phi i32 [ %v1_31ae0, %bb ], [ %v2_31ad9, %dec_label_pc_31ad6 ]
  ret i32 %v2_31ae0
}

define i32 @function_31ae7() local_unnamed_addr {
dec_label_pc_31ae7:
  %v0_31aee = load i32, i32* @eax, align 8
  ret i32 %v0_31aee
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_10shared_ptrIvEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31aef:
  ret i32 %arg1
}

define i32 @function_31afa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31afa:
  %v1_31b01 = load i32, i32* @ebp, align 4
  %v2_31b01 = add i32 %v1_31b01, -12
  %v3_31b01 = inttoptr i32 %v2_31b01 to i32*
  store i32 30, i32* %v3_31b01, align 4
  %v0_31b06 = load i32, i32* @ebp, align 4
  %v1_31b06 = add i32 %v0_31b06, -28
  %v2_31b06 = inttoptr i32 %v1_31b06 to i32*
  %v3_31b06 = load i32, i32* %v2_31b06, align 4
  store i32 %v3_31b06, i32* @eax, align 8
  %v1_31b09 = add i32 %v0_31b06, -12
  %v2_31b09 = inttoptr i32 %v1_31b09 to i32*
  %v3_31b09 = load i32, i32* %v2_31b09, align 4
  %v2_31b0c = xor i32 %v3_31b09, 30
  %v3_31b0c = icmp eq i32 %v2_31b0c, 0
  store i32 %v2_31b0c, i32* @edx, align 8
  br i1 %v3_31b0c, label %bb, label %dec_label_pc_31b15

bb:                                               ; preds = %dec_label_pc_31afa
  %v1_31b13 = call i32 @function_31b1a()
  br label %dec_label_pc_31b15

dec_label_pc_31b15:                               ; preds = %bb, %dec_label_pc_31afa
  %v2_31b13 = phi i32 [ %v1_31b13, %bb ], [ %v3_31b06, %dec_label_pc_31afa ]
  ret i32 %v2_31b13
}

define i32 @function_31b1a() local_unnamed_addr {
dec_label_pc_31b1a:
  %v0_31b1b = load i32, i32* @eax, align 8
  ret i32 %v0_31b1b
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_10shared_ptrIvEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31b1c:
  %v1_31b45 = call i32 @unknown_44366(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_31b54 = call i32 @function_31b5b()
  ret i32 %v1_31b54
}

define i32 @function_31b5b() local_unnamed_addr {
dec_label_pc_31b5b:
  %v0_31b5c = load i32, i32* @eax, align 8
  ret i32 %v0_31b5c
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_10shared_ptrIvEEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b5d:
  store i32 %arg1, i32* @eax, align 8
  %v2_31b81 = call i32 @function_31b88(i32 %arg1)
  ret i32 %v2_31b81
}

define i32 @function_31b88(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b88:
  %v0_31b89 = load i32, i32* @eax, align 8
  ret i32 %v0_31b89
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_10shared_ptrIvEEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31b8a:
  %v1_31bb3 = call i32 @unknown_6637c(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_31bc2 = call i32 @function_31bc9()
  ret i32 %v1_31bc2
}

define i32 @function_31bc9() local_unnamed_addr {
dec_label_pc_31bc9:
  %v0_31bca = load i32, i32* @eax, align 8
  ret i32 %v0_31bca
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail23foreign_void_shared_ptrEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31bcb:
  ret i32 0
}

define i32 @function_31be2(i32 %arg1) local_unnamed_addr {
dec_label_pc_31be2:
  %v0_31be2 = load i32, i32* @ebp, align 4
  %v1_31be2 = add i32 %v0_31be2, -28
  %v2_31be2 = inttoptr i32 %v1_31be2 to i32*
  %v3_31be2 = load i32, i32* %v2_31be2, align 4
  store i32 %v3_31be2, i32* @eax, align 8
  %v1_31be5 = add i32 %v0_31be2, -12
  %v2_31be5 = inttoptr i32 %v1_31be5 to i32*
  %v3_31be5 = load i32, i32* %v2_31be5, align 4
  %v3_31be8 = icmp eq i32 %v3_31be5, 30
  br i1 %v3_31be8, label %bb, label %dec_label_pc_31bf1

bb:                                               ; preds = %dec_label_pc_31be2
  %v1_31bef = call i32 @function_31bf6()
  br label %dec_label_pc_31bf1

dec_label_pc_31bf1:                               ; preds = %bb, %dec_label_pc_31be2
  %v2_31bef = phi i32 [ %v1_31bef, %bb ], [ %v3_31be2, %dec_label_pc_31be2 ]
  ret i32 %v2_31bef
}

define i32 @function_31bf6() local_unnamed_addr {
dec_label_pc_31bf6:
  %v0_31bf7 = load i32, i32* @eax, align 8
  ret i32 %v0_31bf7
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31bf8:
  %v1_31c21 = call i32 @unknown_44270(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_31c30 = call i32 @function_31c37()
  ret i32 %v1_31c30
}

define i32 @function_31c37() local_unnamed_addr {
dec_label_pc_31c37:
  %v0_31c38 = load i32, i32* @eax, align 8
  ret i32 %v0_31c38
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c39:
  store i32 %arg1, i32* @eax, align 8
  %v2_31c5d = call i32 @function_31c64(i32 %arg1)
  ret i32 %v2_31c5d
}

define i32 @function_31c64(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c64:
  %v0_31c65 = load i32, i32* @eax, align 8
  ret i32 %v0_31c65
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31c66:
  %v1_31c8f = call i32 @unknown_664a0(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_31c9e = call i32 @function_31ca5()
  ret i32 %v1_31c9e
}

define i32 @function_31ca5() local_unnamed_addr {
dec_label_pc_31ca5:
  %v0_31ca6 = load i32, i32* @eax, align 8
  ret i32 %v0_31ca6
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31ca8:
  %v2_31cce = load i32, i32* %arg1, align 4
  %v2_31cda = call i32 @unknown_6652a(i32 %v2_31cce, i32 %arg2)
  store i32 %v2_31cda, i32* @eax, align 8
  %v1_31ce9 = call i32 @function_31cf0()
  ret i32 %v1_31ce9
}

define i32 @function_31cf0() local_unnamed_addr {
dec_label_pc_31cf0:
  %v0_31cf1 = load i32, i32* @eax, align 8
  ret i32 %v0_31cf1
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitINS_8weak_ptrIvEEEEbRKNS1_13backup_holderIT_EEl(i32 %arg1) local_unnamed_addr {
dec_label_pc_31cf2:
  ret i32 %arg1
}

define i32 @function_31cfe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31cfe:
  %v0_31cfe = load i32, i32* @ebp, align 4
  %v1_31cfe = add i32 %v0_31cfe, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_31cfe = inttoptr i32 %v1_31cfe to i32*
  %v3_31cfe = load i32, i32* %v2_31cfe, align 4
  %v2_31d01 = add i32 %v0_31cfe, -32
  %v3_31d01 = inttoptr i32 %v2_31d01 to i32*
  store i32 %v3_31cfe, i32* %v3_31d01, align 4
  %v0_31d04 = load i32, i32* @ebp, align 4
  %v1_31d04 = add i32 %v0_31d04, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_31d04 = inttoptr i32 %v1_31d04 to i32*
  %v3_31d04 = load i32, i32* %v2_31d04, align 4
  %v2_31d07 = add i32 %v0_31d04, -36
  %v3_31d07 = inttoptr i32 %v2_31d07 to i32*
  store i32 %v3_31d04, i32* %v3_31d07, align 4
  %v1_31d10 = load i32, i32* @ebp, align 4
  %v2_31d10 = add i32 %v1_31d10, -12
  %v3_31d10 = inttoptr i32 %v2_31d10 to i32*
  store i32 30, i32* %v3_31d10, align 4
  %v0_31d15 = load i32, i32* @ebp, align 4
  %v1_31d15 = add i32 %v0_31d15, -32
  %v2_31d15 = inttoptr i32 %v1_31d15 to i32*
  %v3_31d15 = load i32, i32* %v2_31d15, align 4
  %v1_31d1b = call i32 @unknown_6639a(i32 %v3_31d15)
  %v0_31d2c = load i32, i32* @ebp, align 4
  %v1_31d2c = add i32 %v0_31d2c, -28
  %v2_31d2c = inttoptr i32 %v1_31d2c to i32*
  %v3_31d2c = load i32, i32* %v2_31d2c, align 4
  %v3_31d32 = call i32 @unknown_6399a(i32 %v3_31d2c, i32 %v1_31d1b, i32 1)
  ret i32 %v3_31d32
}

define i32 @function_31d38(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31d38:
  %v0_31d3a = load i32, i32* @edx, align 8
  %v3_31d3a = icmp eq i32 %v0_31d3a, 30
  br i1 %v3_31d3a, label %bb, label %dec_label_pc_31d38.dec_label_pc_31d43_crit_edge

dec_label_pc_31d38.dec_label_pc_31d43_crit_edge:  ; preds = %dec_label_pc_31d38
  %v2_31d41.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_31d43

bb:                                               ; preds = %dec_label_pc_31d38
  %v1_31d41 = call i32 @function_31d48()
  br label %dec_label_pc_31d43

dec_label_pc_31d43:                               ; preds = %dec_label_pc_31d38.dec_label_pc_31d43_crit_edge, %bb
  %v2_31d41 = phi i32 [ %v2_31d41.pre, %dec_label_pc_31d38.dec_label_pc_31d43_crit_edge ], [ %v1_31d41, %bb ]
  ret i32 %v2_31d41

; uselistorder directives
  uselistorder label %dec_label_pc_31d43, { 1, 0 }
}

define i32 @function_31d48() local_unnamed_addr {
dec_label_pc_31d48:
  %v0_31d49 = load i32, i32* @eax, align 8
  ret i32 %v0_31d49
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31d4a:
  %v2_31d70 = load i32, i32* %arg1, align 4
  %v2_31d7c = call i32 @unknown_66608(i32 %v2_31d70, i32 %arg2)
  store i32 %v2_31d7c, i32* @eax, align 8
  %v1_31d8b = call i32 @function_31d92()
  ret i32 %v1_31d8b
}

define i32 @function_31d92() local_unnamed_addr {
dec_label_pc_31d92:
  %v0_31d93 = load i32, i32* @eax, align 8
  ret i32 %v0_31d93
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitINS4_21foreign_void_weak_ptrEEEbRKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31d94:
  %v1_31dbd = call i32 @unknown_664f6(i32 %arg2)
  %v3_31dd4 = call i32 @unknown_63ade(i32 %arg1, i32 %v1_31dbd, i32 1)
  store i32 %v3_31dd4, i32* @eax, align 8
  %v1_31de3 = call i32 @function_31dea()
  ret i32 %v1_31de3
}

define i32 @function_31dea() local_unnamed_addr {
dec_label_pc_31dea:
  %v0_31deb = load i32, i32* @eax, align 8
  ret i32 %v0_31deb
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31dec:
  %v1_31e06 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_31e06 = inttoptr i32 %v1_31e06 to i32*
  %v3_31e06 = load i32, i32* %v2_31e06, align 4
  store i32 %v3_31e06, i32* @eax, align 8
  %v2_31e13 = call i32 @function_31e1a(i32 %arg1)
  ret i32 %v2_31e13
}

define i32 @function_31e1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e1a:
  %v0_31e1b = load i32, i32* @eax, align 8
  ret i32 %v0_31e1b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e1c:
  %v1_31e36 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_31e36, i32* @eax, align 8
  %v2_31e43 = call i32 @function_31e4a(i32 %arg1)
  ret i32 %v2_31e43
}

define i32 @function_31e4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e4a:
  %v0_31e4b = load i32, i32* @eax, align 8
  ret i32 %v0_31e4b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31e4c:
  ret i32 0
}

define i32 @function_31e7d() local_unnamed_addr {
dec_label_pc_31e7d:
  %ebp.global-to-local = alloca i32, align 4
  %v0_31e7d = load i32, i32* %ebp.global-to-local, align 4
  %v1_31e7d = add i32 %v0_31e7d, -36
  %v2_31e7d = inttoptr i32 %v1_31e7d to i32*
  %v3_31e7d = load i32, i32* %v2_31e7d, align 4
  %v1_31e83 = call i32 @unknown_66745(i32 %v3_31e7d)
  %v1_31e8a = add i32 %v0_31e7d, -32
  %v2_31e8a = inttoptr i32 %v1_31e8a to i32*
  %v3_31e8a = load i32, i32* %v2_31e8a, align 4
  %v1_31e8d = add i32 %v0_31e7d, -44
  %v2_31e8d = inttoptr i32 %v1_31e8d to i32*
  %v3_31e8d = load i32, i32* %v2_31e8d, align 4
  %v3_31e9b = call i32 @unknown_61162(i32 %v3_31e8a, i32 %v1_31e83, i32 %v3_31e8d)
  %v0_31ea7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31ea7 = add i32 %v0_31ea7, -36
  %v2_31ea7 = inttoptr i32 %v1_31ea7 to i32*
  %v3_31ea7 = load i32, i32* %v2_31ea7, align 4
  ret i32 %v3_31ea7

; uselistorder directives
  uselistorder i32 %v0_31e7d, { 1, 0, 2 }
}

define i32 @function_31ecc(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ecc:
  %v2_31ece = load i8, i8* bitcast (i32* @edi to i8*), align 8
  %v3_31ece = load i32, i32* @ecx, align 4
  %v4_31ece = trunc i32 %v3_31ece to i8
  %v5_31ece = add i8 %v4_31ece, %v2_31ece
  %v20_31ece = load i32, i32* @edi, align 8
  %v21_31ece = inttoptr i32 %v20_31ece to i8*
  store i8 %v5_31ece, i8* %v21_31ece, align 1
  %v0_31ed0 = load i32, i32* @eax, align 8
  %v1_31ed0 = load i32, i32* @ebp, align 4
  store i32 %v0_31ed0, i32* @ebp, align 4
  %v1_31edd = add i32 %v0_31ed0, -28
  %v2_31edd = inttoptr i32 %v1_31edd to i32*
  %v3_31edd = load i32, i32* %v2_31edd, align 4
  %v2_31ee3 = call i32 @unknown_63d4c(i32 %v3_31edd, i32 %v1_31ed0)
  %v0_31ee8 = load i32, i32* @ebp, align 4
  %v1_31ee8 = add i32 %v0_31ee8, -28
  %v2_31ee8 = inttoptr i32 %v1_31ee8 to i32*
  %v3_31ee8 = load i32, i32* %v2_31ee8, align 4
  store i32 %v3_31ee8, i32* @eax, align 8
  %v1_31eeb = add i32 %v0_31ee8, -12
  %v2_31eeb = inttoptr i32 %v1_31eeb to i32*
  %v3_31eeb = load i32, i32* %v2_31eeb, align 4
  %v3_31eee = icmp eq i32 %v3_31eeb, 30
  br i1 %v3_31eee, label %bb, label %dec_label_pc_31ef7

bb:                                               ; preds = %dec_label_pc_31ecc
  %v1_31ef5 = call i32 @function_31efc()
  br label %dec_label_pc_31ef7

dec_label_pc_31ef7:                               ; preds = %bb, %dec_label_pc_31ecc
  %v3_31ef5 = phi i32 [ %v1_31ef5, %bb ], [ %v3_31ee8, %dec_label_pc_31ecc ]
  ret i32 %v3_31ef5
}

define i32 @function_31efc() local_unnamed_addr {
dec_label_pc_31efc:
  %v0_31efd = load i32, i32* @eax, align 8
  ret i32 %v0_31efd
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31f00:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_31f2f = call i32 @function_31f36(i32 %arg2, i32 %tmp101)
  ret i32 %v3_31f2f
}

define i32 @function_31f36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31f36:
  %v0_31f37 = load i32, i32* @eax, align 8
  ret i32 %v0_31f37
}

define i32 @_ZNK5boost8optionalIiE3getEv() local_unnamed_addr {
dec_label_pc_31f38:
  %eax.global-to-local = alloca i32, align 4
  %v17_31f3b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_31f3b
}

define i32 @function_31f6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31f6a:
  %v0_31f6a = load i1, i1* @cf, align 1
  %v1_31f6a = load i1, i1* @zf, align 1
  %v2_31f6a = or i1 %v0_31f6a, %v1_31f6a
  br i1 %v2_31f6a, label %dec_label_pc_31f6e, label %dec_label_pc_31f6c

dec_label_pc_31f6c:                               ; preds = %dec_label_pc_31f6a
  %v2_31f6c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_31f6c = load i32, i32* @eax, align 8
  %v4_31f6c = trunc i32 %v3_31f6c to i8
  %v5_31f6c = add i8 %v4_31f6c, %v2_31f6c
  %v21_31f6c = inttoptr i32 %v3_31f6c to i8*
  store i8 %v5_31f6c, i8* %v21_31f6c, align 1
  br label %dec_label_pc_31f6e

dec_label_pc_31f6e:                               ; preds = %dec_label_pc_31f6c, %dec_label_pc_31f6a
  %v3_31f76 = load i32, i32* @eax, align 8
  ret i32 %v3_31f76
}

define i32 @function_31f9d() local_unnamed_addr {
dec_label_pc_31f9d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31f9d = load i32, i32* %ecx.global-to-local, align 4
  %v1_31f9d = add i32 %v0_31f9d, -1
  store i32 %v1_31f9d, i32* %ecx.global-to-local, align 4
  %v0_31f9f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31f9f
}

define i32 @_ZNKSt4lessIiEclERKiS2_() local_unnamed_addr {
dec_label_pc_31fa0:
  %eax.global-to-local = alloca i32, align 4
  %v5_31fa0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_31fa0
}

define i32 @function_31fa2(i32 %arg1) local_unnamed_addr {
dec_label_pc_31fa2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_31fa5 = load i32, i32* @ebx, align 4
  %v1_31fa5 = add i32 %v0_31fa5, 1166608453
  %v2_31fa5 = inttoptr i32 %v1_31fa5 to i8*
  %v3_31fa5 = load i8, i8* %v2_31fa5, align 1
  %v4_31fa5 = load i32, i32* @ecx, align 4
  %v5_31fa5 = trunc i32 %v4_31fa5 to i8
  %v6_31fa5 = sub i8 %v3_31fa5, %v5_31fa5
  store i8 %v6_31fa5, i8* %v2_31fa5, align 1
  %v0_31fad = load i32, i32* @ebp, align 4
  %v0_31fae = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_31fae = or i32 %v0_31fae, 137
  store i32 %v11_31fae, i32* %eax.global-to-local, align 8
  %v0_31fb1 = load i32, i32* @ecx, align 4
  %v1_31fb1 = add i32 %v0_31fb1, 255
  %v1_31fb3 = add i32 %v0_31fad, 3
  store i32 %v1_31fb3, i32* @ebp, align 4
  %v1_31fb4 = add i32 %v0_31fb1, -1587159996
  %v2_31fb4 = inttoptr i32 %v1_31fb4 to i8*
  %v3_31fb4 = load i8, i8* %v2_31fb4, align 1
  %v5_31fb4 = trunc i32 %v1_31fb1 to i8
  %v8_31fb4 = add i8 %v3_31fb4, %v5_31fb4
  %v28_31fb4 = icmp ult i8 %v8_31fb4, %v3_31fb4
  store i1 %v28_31fb4, i1* %cf.global-to-local, align 1
  store i8 %v8_31fb4, i8* %v2_31fb4, align 1
  %v0_31fba = load i32, i32* %eax.global-to-local, align 8
  %v1_31fba = trunc i32 %v0_31fba to i8
  %v2_31fba = load i1, i1* %cf.global-to-local, align 1
  %v3_31fba = zext i1 %v2_31fba to i8
  %v4_31fba = add i8 %v3_31fba, %v1_31fba
  %v19_31fba = icmp ule i8 %v4_31fba, %v1_31fba
  %v21_31fba = icmp eq i1 %v2_31fba, %v19_31fba
  store i1 %v21_31fba, i1* %cf.global-to-local, align 1
  %v22_31fba = zext i8 %v4_31fba to i32
  %v24_31fba = and i32 %v0_31fba, -256
  %v25_31fba = or i32 %v22_31fba, %v24_31fba
  store i32 %v25_31fba, i32* %eax.global-to-local, align 8
  %v1_31fbc = inttoptr i32 %v25_31fba to i8*
  %v2_31fbc = load i8, i8* %v1_31fbc, align 1
  %v5_31fbc = add i8 %v2_31fbc, %v4_31fba
  store i8 %v5_31fbc, i8* %v1_31fbc, align 1
  %v0_31fbe = load i32, i32* %eax.global-to-local, align 8
  %v1_31fbe = load i32, i32* @ebp, align 4
  %v2_31fbe = add i32 %v1_31fbe, -12
  %v3_31fbe = inttoptr i32 %v2_31fbe to i32*
  store i32 %v0_31fbe, i32* %v3_31fbe, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_31fc3 = load i32, i32* @ebp, align 4
  %v1_31fc3 = add i32 %v0_31fc3, -32
  %v2_31fc3 = inttoptr i32 %v1_31fc3 to i32*
  %v3_31fc3 = load i32, i32* %v2_31fc3, align 4
  store i32 %v3_31fc3, i32* %eax.global-to-local, align 8
  %v1_31fc6 = inttoptr i32 %v3_31fc3 to i32*
  %v2_31fc6 = load i32, i32* %v1_31fc6, align 4
  %v1_31fc8 = add i32 %v0_31fc3, -36
  %v2_31fc8 = inttoptr i32 %v1_31fc8 to i32*
  %v3_31fc8 = load i32, i32* %v2_31fc8, align 4
  store i32 %v3_31fc8, i32* %eax.global-to-local, align 8
  %v1_31fcb = inttoptr i32 %v3_31fc8 to i32*
  %v2_31fcb = load i32, i32* %v1_31fcb, align 4
  %v2_31fcd = sub i32 %v2_31fc6, %v2_31fcb
  %v8_31fcd = xor i32 %v2_31fcb, %v2_31fc6
  %v9_31fcd = xor i32 %v2_31fcd, %v2_31fc6
  %v10_31fcd = and i32 %v9_31fcd, %v8_31fcd
  %v11_31fcd = icmp slt i32 %v10_31fcd, 0
  %v13_31fcd = icmp slt i32 %v2_31fcd, 0
  %v2_31fcf = icmp ne i1 %v13_31fcd, %v11_31fcd
  %v3_31fcf = zext i1 %v2_31fcf to i32
  %v5_31fcf = and i32 %v2_31fcb, -256
  %v6_31fcf = or i32 %v3_31fcf, %v5_31fcf
  store i32 %v6_31fcf, i32* @eax, align 8
  %v1_31fd2 = add i32 %v0_31fc3, -12
  %v2_31fd2 = inttoptr i32 %v1_31fd2 to i32*
  %v3_31fd2 = load i32, i32* %v2_31fd2, align 4
  store i1 false, i1* @cf, align 1
  %v3_31fd5 = icmp eq i32 %v3_31fd2, 30
  store i1 %v3_31fd5, i1* @zf, align 1
  br i1 %v3_31fd5, label %bb, label %dec_label_pc_31fde

bb:                                               ; preds = %dec_label_pc_31fa2
  %v1_31fdc = call i32 @function_31fe3()
  store i32 %v1_31fdc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_31fde

dec_label_pc_31fde:                               ; preds = %bb, %dec_label_pc_31fa2
  %v3_31fdc = phi i32 [ %v1_31fdc, %bb ], [ %v6_31fcf, %dec_label_pc_31fa2 ]
  ret i32 %v3_31fdc

; uselistorder directives
  uselistorder i1 %v3_31fd5, { 1, 0 }
  uselistorder i32 %v2_31fcd, { 1, 0 }
  uselistorder i32 %v2_31fcb, { 1, 0, 2 }
  uselistorder i8 %v4_31fba, { 0, 2, 1 }
  uselistorder i8 %v1_31fba, { 1, 0 }
  uselistorder i8 %v3_31fb4, { 1, 0 }
}

define i32 @function_31fe3() local_unnamed_addr {
dec_label_pc_31fe3:
  %v0_31fe4 = load i32, i32* @eax, align 8
  ret i32 %v0_31fe4
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11upper_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31fe6:
  ret i32 %arg2
}

define i32 @function_3200e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3200e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_32010 = call i32 @unknown_63e02()
  store i32 %v0_32010, i32* %ebx.global-to-local, align 4
  %v0_32017 = load i32, i32* @ebp, align 4
  %v1_32017 = add i32 %v0_32017, -32
  %v2_32017 = inttoptr i32 %v1_32017 to i32*
  %v3_32017 = load i32, i32* %v2_32017, align 4
  %v1_3201d = call i32 @unknown_63dd2(i32 %v3_32017)
  %v0_32022 = load i32, i32* @ebp, align 4
  %v1_32022 = add i32 %v0_32022, -28
  %v2_32022 = inttoptr i32 %v1_32022 to i32*
  %v3_32022 = load i32, i32* %v2_32022, align 4
  %v1_32025 = add i32 %v0_32022, -36
  %v2_32025 = inttoptr i32 %v1_32025 to i32*
  %v3_32025 = load i32, i32* %v2_32025, align 4
  store i32 %v3_32025, i32* @ecx, align 4
  %v0_3202c = load i32, i32* %ebx.global-to-local, align 4
  %v1_32034 = add i32 %v0_32022, -32
  %v2_32034 = inttoptr i32 %v1_32034 to i32*
  %v3_32034 = load i32, i32* %v2_32034, align 4
  %v5_3203e = call i32 @unknown_66a02(i32 %v3_32022, i32 %v3_32034, i32 %v1_3201d, i32 %v0_3202c, i32 %v3_32025)
  ret i32 %v5_3203e
}

define i32 @function_32046(i32 %arg1) local_unnamed_addr {
dec_label_pc_32046:
  %v0_32046 = load i32, i32* @ebp, align 4
  %v1_32046 = add i32 %v0_32046, -28
  %v2_32046 = inttoptr i32 %v1_32046 to i32*
  %v3_32046 = load i32, i32* %v2_32046, align 4
  store i32 %v3_32046, i32* @eax, align 8
  %v1_32049 = add i32 %v0_32046, -12
  %v2_32049 = inttoptr i32 %v1_32049 to i32*
  %v3_32049 = load i32, i32* %v2_32049, align 4
  %v3_3204c = icmp eq i32 %v3_32049, 30
  br i1 %v3_3204c, label %bb, label %dec_label_pc_32055

bb:                                               ; preds = %dec_label_pc_32046
  %v1_32053 = call i32 @function_3205a()
  br label %dec_label_pc_32055

dec_label_pc_32055:                               ; preds = %bb, %dec_label_pc_32046
  %v2_32053 = phi i32 [ %v1_32053, %bb ], [ %v3_32046, %dec_label_pc_32046 ]
  ret i32 %v2_32053
}

define i32 @function_3205a() local_unnamed_addr {
dec_label_pc_3205a:
  %v0_3205e = load i32, i32* @eax, align 8
  ret i32 %v0_3205e
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32062:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_32082 = load i32, i32* %arg1, align 4
  %v1_32087 = inttoptr i32 %arg2 to i32*
  %v2_32087 = load i32, i32* %v1_32087, align 4
  %v12_32089 = icmp eq i32 %v2_32082, %v2_32087
  %v1_3208b = zext i1 %v12_32089 to i32
  %v3_3208b = and i32 %v2_32087, -256
  %v4_3208b = or i32 %v1_3208b, %v3_3208b
  store i32 %v4_3208b, i32* @eax, align 8
  %v3_32098 = call i32 @function_3209f(i32 %arg2, i32 %tmp101)
  ret i32 %v3_32098

; uselistorder directives
  uselistorder i32 %v2_32087, { 1, 0 }
}

define i32 @function_3209f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3209f:
  %v0_320a0 = load i32, i32* @eax, align 8
  ret i32 %v0_320a0
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEptEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_320a2:
  ret i32 %arg1
}

define i32 @function_320ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_320ae:
  %v1_320b4 = load i32, i32* @ebp, align 4
  %v2_320b4 = add i32 %v1_320b4, -12
  %v3_320b4 = inttoptr i32 %v2_320b4 to i32*
  store i32 30, i32* %v3_320b4, align 4
  %v0_320b9 = load i32, i32* @ebp, align 4
  %v1_320b9 = add i32 %v0_320b9, -28
  %v2_320b9 = inttoptr i32 %v1_320b9 to i32*
  %v3_320b9 = load i32, i32* %v2_320b9, align 4
  %v1_320bc = inttoptr i32 %v3_320b9 to i32*
  %v2_320bc = load i32, i32* %v1_320bc, align 4
  %v1_320be = add i32 %v2_320bc, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_320c4 = call i32 @unknown_66b6f(i32 %v1_320be)
  store i32 %v2_320c4, i32* @eax, align 8
  %v0_320c9 = load i32, i32* @ebp, align 4
  %v1_320c9 = add i32 %v0_320c9, -12
  %v2_320c9 = inttoptr i32 %v1_320c9 to i32*
  %v3_320c9 = load i32, i32* %v2_320c9, align 4
  %v3_320cc = icmp eq i32 %v3_320c9, 30
  br i1 %v3_320cc, label %bb, label %dec_label_pc_320d5

bb:                                               ; preds = %dec_label_pc_320ae
  %v1_320d3 = call i32 @function_320da()
  br label %dec_label_pc_320d5

dec_label_pc_320d5:                               ; preds = %bb, %dec_label_pc_320ae
  %v2_320d3 = phi i32 [ %v1_320d3, %bb ], [ %v2_320c4, %dec_label_pc_320ae ]
  ret i32 %v2_320d3
}

define i32 @function_320da() local_unnamed_addr {
dec_label_pc_320da:
  %v0_320db = load i32, i32* @eax, align 8
  ret i32 %v0_320db
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8key_compEv() local_unnamed_addr {
dec_label_pc_320dc:
  %eax.global-to-local = alloca i32, align 4
  %v5_320dc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_320dc
}

define i32 @function_320de(i32 %arg1) local_unnamed_addr {
dec_label_pc_320de:
  %v0_320e1 = load i32, i32* @ebx, align 4
  %v1_320e1 = add i32 %v0_320e1, 1166608453
  %v2_320e1 = inttoptr i32 %v1_320e1 to i8*
  %v3_320e1 = load i8, i8* %v2_320e1, align 1
  %v4_320e1 = load i32, i32* @ecx, align 4
  %v5_320e1 = trunc i32 %v4_320e1 to i8
  %v6_320e1 = sub i8 %v3_320e1, %v5_320e1
  store i8 %v6_320e1, i8* %v2_320e1, align 1
  %v0_320e9 = load i32, i32* @ebp, align 4
  %v1_320ec = add i32 %v0_320e9, 2
  %v9_320ec = icmp eq i32 %v1_320ec, 0
  store i32 %v1_320ec, i32* @ebp, align 4
  %v0_320ed = load i32, i32* @ecx, align 4
  %v2_320ed = icmp eq i32 %v0_320ed, 1
  %v4_320ed = or i1 %v9_320ec, %v2_320ed
  br i1 %v4_320ed, label %dec_label_pc_320ef, label %bb

bb:                                               ; preds = %dec_label_pc_320de
  %v6_320ed = call i32 @_ZN5boost15optional_detail13optional_baseIiED1Ev()
  %v1_320f4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_320ef

dec_label_pc_320ef:                               ; preds = %dec_label_pc_320de, %bb
  %v1_320f4 = phi i32 [ %v1_320ec, %dec_label_pc_320de ], [ %v1_320f4.pre, %bb ]
  %v2_320f4 = add i32 %v1_320f4, -12
  %v3_320f4 = inttoptr i32 %v2_320f4 to i32*
  store i32 30, i32* %v3_320f4, align 4
  %v0_320f9 = load i32, i32* @ebp, align 4
  %v1_320f9 = add i32 %v0_320f9, -28
  %v2_320f9 = inttoptr i32 %v1_320f9 to i32*
  %v3_320f9 = load i32, i32* %v2_320f9, align 4
  store i32 %v3_320f9, i32* @eax, align 8
  %v1_320fc = add i32 %v0_320f9, -12
  %v2_320fc = inttoptr i32 %v1_320fc to i32*
  %v3_320fc = load i32, i32* %v2_320fc, align 4
  %v3_320ff = icmp eq i32 %v3_320fc, 30
  br i1 %v3_320ff, label %bb3, label %dec_label_pc_32108

bb3:                                              ; preds = %dec_label_pc_320ef
  %v1_32106 = call i32 @function_3210d()
  br label %dec_label_pc_32108

dec_label_pc_32108:                               ; preds = %bb3, %dec_label_pc_320ef
  %v2_32106 = phi i32 [ %v1_32106, %bb3 ], [ %v3_320f9, %dec_label_pc_320ef ]
  ret i32 %v2_32106

; uselistorder directives
  uselistorder label %dec_label_pc_320ef, { 1, 0 }
}

define i32 @function_3210d() local_unnamed_addr {
dec_label_pc_3210d:
  %v0_3210e = load i32, i32* @eax, align 8
  ret i32 %v0_3210e
}

define i32 @_ZN5boost8optionalIiEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32112:
  %v2_3213c = call i32 @unknown_66c0c(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_3214b = call i32 @function_32152()
  ret i32 %v1_3214b
}

define i32 @function_32152() local_unnamed_addr {
dec_label_pc_32152:
  %v0_32153 = load i32, i32* @eax, align 8
  ret i32 %v0_32153
}

define i32 @_ZN5boost15optional_detail13optional_baseIiED1Ev() local_unnamed_addr {
dec_label_pc_32154:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_32171 = call i32 @unknown_66cb8(i32 %tmp2)
  store i32 0, i32* @eax, align 8
  %v1_32180 = call i32 @function_32187()
  ret i32 %v1_32180
}

define i32 @function_32187() local_unnamed_addr {
dec_label_pc_32187:
  %v0_32188 = load i32, i32* @eax, align 8
  ret i32 %v0_32188
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3218a:
  ret i32 %arg1
}

define i32 @function_32194(i32 %arg1) local_unnamed_addr {
dec_label_pc_32194:
  %v0_32194 = load i32, i32* @eax, align 8
  %v1_32194 = load i32, i32* @ebp, align 4
  %v2_32194 = add i32 %v1_32194, -60
  %v3_32194 = inttoptr i32 %v2_32194 to i32*
  store i32 %v0_32194, i32* %v3_32194, align 4
  %v0_32197 = load i32, i32* @ebp, align 4
  %v1_32197 = add i32 %v0_32197, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_32197 = inttoptr i32 %v1_32197 to i32*
  %v3_32197 = load i32, i32* %v2_32197, align 4
  %v2_3219a = add i32 %v0_32197, -64
  %v3_3219a = inttoptr i32 %v2_3219a to i32*
  store i32 %v3_32197, i32* %v3_3219a, align 4
  %v0_3219d = load i32, i32* @ebp, align 4
  %v1_3219d = add i32 %v0_3219d, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_3219d = inttoptr i32 %v1_3219d to i32*
  %v3_3219d = load i32, i32* %v2_3219d, align 4
  %v2_321a0 = add i32 %v0_3219d, -68
  %v3_321a0 = inttoptr i32 %v2_321a0 to i32*
  store i32 %v3_3219d, i32* %v3_321a0, align 4
  %v0_321a3 = load i32, i32* @ebp, align 4
  %v1_321a3 = add i32 %v0_321a3, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_321a3 = inttoptr i32 %v1_321a3 to i32*
  %v3_321a3 = load i32, i32* %v2_321a3, align 4
  %v2_321a6 = add i32 %v0_321a3, -72
  %v3_321a6 = inttoptr i32 %v2_321a6 to i32*
  store i32 %v3_321a3, i32* %v3_321a6, align 4
  %v1_321af = load i32, i32* @ebp, align 4
  %v2_321af = add i32 %v1_321af, -12
  %v3_321af = inttoptr i32 %v2_321af to i32*
  store i32 30, i32* %v3_321af, align 4
  %v0_321b4 = load i32, i32* @ebp, align 4
  %v1_321b7 = add i32 %v0_321b4, -64
  %v2_321b7 = inttoptr i32 %v1_321b7 to i32*
  %v3_321b7 = load i32, i32* %v2_321b7, align 4
  %v1_321bd = call i32 @unknown_63fa6(i32 %v3_321b7)
  ret i32 %v1_321bd
}

define i32 @function_321c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_321c4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_321c4 = load i1, i1* @zf, align 1
  %v5_321c7 = icmp eq i1 %v0_321c4, false
  %v0_32293 = load i32, i32* @ebp, align 4
  br i1 %v5_321c7, label %dec_label_pc_32293, label %dec_label_pc_321cf

dec_label_pc_321cf:                               ; preds = %dec_label_pc_321c4
  %v1_321cf = add i32 %v0_32293, -64
  %v2_321cf = inttoptr i32 %v1_321cf to i32*
  %v3_321cf = load i32, i32* %v2_321cf, align 4
  %v1_321d5 = call i32 @unknown_66dda(i32 %v3_321cf)
  %v1_321da = icmp eq i32 %v1_321d5, 0
  br i1 %v1_321da, label %dec_label_pc_32227, label %dec_label_pc_321de

dec_label_pc_321de:                               ; preds = %dec_label_pc_321cf
  %v0_321de = load i32, i32* @ebp, align 4
  %v1_321de = add i32 %v0_321de, -72
  %v2_321de = inttoptr i32 %v1_321de to i32*
  %v3_321de = load i32, i32* %v2_321de, align 4
  %v1_321e5 = add i32 %v0_321de, -17
  %v2_321eb = call i32 @unknown_66da6(i32 %v1_321e5, i32 %v3_321de)
  store i32 %v2_321eb, i32* %ebx.global-to-local, align 4
  %v0_321f2 = load i32, i32* @ebp, align 4
  %v1_321f2 = add i32 %v0_321f2, -64
  %v2_321f2 = inttoptr i32 %v1_321f2 to i32*
  %v3_321f2 = load i32, i32* %v2_321f2, align 4
  %v1_321f8 = call i32 @unknown_66d32(i32 %v3_321f2)
  %v1_321fd = inttoptr i32 %v1_321f8 to i32*
  %v2_321fd = load i32, i32* %v1_321fd, align 4
  %v1_32202 = call i32 @unknown_66d62(i32 %v2_321fd)
  %v0_32209 = load i32, i32* @ebp, align 4
  %v1_32209 = add i32 %v0_32209, -64
  %v2_32209 = inttoptr i32 %v1_32209 to i32*
  %v3_32209 = load i32, i32* %v2_32209, align 4
  %v0_3220c = load i32, i32* %ebx.global-to-local, align 4
  %v3_32217 = call i32 @unknown_614a0(i32 %v3_32209, i32 %v1_32202, i32 %v0_3220c)
  %v4_3221c = trunc i32 %v3_32217 to i8
  %v5_3221c = icmp eq i8 %v4_3221c, 0
  br i1 %v5_3221c, label %dec_label_pc_32227, label %dec_label_pc_3222c

dec_label_pc_32227:                               ; preds = %dec_label_pc_321de, %dec_label_pc_321cf
  br label %dec_label_pc_3222c

dec_label_pc_3222c:                               ; preds = %dec_label_pc_321de, %dec_label_pc_32227
  %storemerge = phi i1 [ true, %dec_label_pc_32227 ], [ false, %dec_label_pc_321de ]
  %v0_3226a = load i32, i32* @ebp, align 4
  br i1 %storemerge, label %dec_label_pc_3226a, label %dec_label_pc_32230

dec_label_pc_32230:                               ; preds = %dec_label_pc_3222c
  %v1_32230 = add i32 %v0_3226a, -64
  %v2_32230 = inttoptr i32 %v1_32230 to i32*
  %v3_32230 = load i32, i32* %v2_32230, align 4
  %v1_32236 = call i32 @unknown_66d32(i32 %v3_32230)
  %v1_3223b = inttoptr i32 %v1_32236 to i32*
  %v2_3223b = load i32, i32* %v1_3223b, align 4
  %v0_3223d = load i32, i32* @ebp, align 4
  %v1_3223d = add i32 %v0_3223d, -60
  %v2_3223d = inttoptr i32 %v1_3223d to i32*
  %v3_3223d = load i32, i32* %v2_3223d, align 4
  %v1_32240 = add i32 %v0_3223d, -72
  %v2_32240 = inttoptr i32 %v1_32240 to i32*
  %v3_32240 = load i32, i32* %v2_32240, align 4
  store i32 %v3_32240, i32* @ecx, align 4
  %v1_32253 = add i32 %v0_3223d, -64
  %v2_32253 = inttoptr i32 %v1_32253 to i32*
  %v3_32253 = load i32, i32* %v2_32253, align 4
  %v4_3225d = call i32 @unknown_66e0a(i32 %v3_3223d, i32 %v3_32253, i32 0, i32 %v2_3223b)
  %v0_32265 = call i32 @function_3258a()
  ret i32 %v0_32265

dec_label_pc_3226a:                               ; preds = %dec_label_pc_3222c
  %v1_3226a = add i32 %v0_3226a, -48
  %v1_3226d = add i32 %v0_3226a, -72
  %v2_3226d = inttoptr i32 %v1_3226d to i32*
  %v3_3226d = load i32, i32* %v2_3226d, align 4
  %v1_32274 = add i32 %v0_3226a, -64
  %v2_32274 = inttoptr i32 %v1_32274 to i32*
  %v3_32274 = load i32, i32* %v2_32274, align 4
  %v3_3227e = call i32 @unknown_66f0c(i32 %v1_3226a, i32 %v3_32274, i32 %v3_3226d)
  %v0_32286 = load i32, i32* @ebp, align 4
  %v1_32286 = add i32 %v0_32286, -60
  %v2_32286 = inttoptr i32 %v1_32286 to i32*
  %v3_32286 = load i32, i32* %v2_32286, align 4
  %v1_32289 = add i32 %v0_32286, -48
  %v2_32289 = inttoptr i32 %v1_32289 to i32*
  %v3_32289 = load i32, i32* %v2_32289, align 4
  %v2_3228c = inttoptr i32 %v3_32286 to i32*
  store i32 %v3_32289, i32* %v2_3228c, align 4
  %v0_3228e = call i32 @function_3258a()
  ret i32 %v0_3228e

dec_label_pc_32293:                               ; preds = %dec_label_pc_321c4
  %v1_32293 = add i32 %v0_32293, -68
  %v2_32293 = inttoptr i32 %v1_32293 to i32*
  %v3_32293 = load i32, i32* %v2_32293, align 4
  %v1_32299 = call i32 @unknown_66d62(i32 %v3_32293)
  store i32 %v1_32299, i32* %ebx.global-to-local, align 4
  %v0_322a0 = load i32, i32* @ebp, align 4
  %v1_322a0 = add i32 %v0_322a0, -72
  %v2_322a0 = inttoptr i32 %v1_322a0 to i32*
  %v3_322a0 = load i32, i32* %v2_322a0, align 4
  %v1_322a7 = add i32 %v0_322a0, -16
  %v2_322ad = call i32 @unknown_66da6(i32 %v1_322a7, i32 %v3_322a0)
  %v0_322b2 = load i32, i32* @ebp, align 4
  %v1_322b2 = add i32 %v0_322b2, -64
  %v2_322b2 = inttoptr i32 %v1_322b2 to i32*
  %v3_322b2 = load i32, i32* %v2_322b2, align 4
  %v0_322b5 = load i32, i32* %ebx.global-to-local, align 4
  %v3_322c0 = call i32 @unknown_614a0(i32 %v3_322b2, i32 %v2_322ad, i32 %v0_322b5)
  %v4_322c5 = trunc i32 %v3_322c0 to i8
  %v5_322c5 = icmp eq i8 %v4_322c5, 0
  %v0_3240d = load i32, i32* @ebp, align 4
  br i1 %v5_322c5, label %dec_label_pc_3240d, label %dec_label_pc_322cd

dec_label_pc_322cd:                               ; preds = %dec_label_pc_32293
  %v1_322cd = add i32 %v0_3240d, -68
  %v2_322cd = inttoptr i32 %v1_322cd to i32*
  %v3_322cd = load i32, i32* %v2_322cd, align 4
  %v2_322d0 = add i32 %v0_3240d, -24
  %v3_322d0 = inttoptr i32 %v2_322d0 to i32*
  store i32 %v3_322cd, i32* %v3_322d0, align 4
  %v0_322d3 = load i32, i32* @ebp, align 4
  %v1_322d3 = add i32 %v0_322d3, -68
  %v2_322d3 = inttoptr i32 %v1_322d3 to i32*
  %v3_322d3 = load i32, i32* %v2_322d3, align 4
  store i32 %v3_322d3, i32* %ebx.global-to-local, align 4
  %v1_322d6 = add i32 %v0_322d3, -64
  %v2_322d6 = inttoptr i32 %v1_322d6 to i32*
  %v3_322d6 = load i32, i32* %v2_322d6, align 4
  %v1_322dc = call i32 @unknown_67110(i32 %v3_322d6)
  %v1_322e1 = inttoptr i32 %v1_322dc to i32*
  %v2_322e1 = load i32, i32* %v1_322e1, align 4
  %v0_322e3 = load i32, i32* %ebx.global-to-local, align 4
  %v12_322e3 = icmp eq i32 %v0_322e3, %v2_322e1
  %v5_322e8 = icmp eq i1 %v12_322e3, false
  %v0_3232f = load i32, i32* @ebp, align 4
  br i1 %v5_322e8, label %dec_label_pc_3232f, label %dec_label_pc_322ec

dec_label_pc_322ec:                               ; preds = %dec_label_pc_322cd
  %v1_322ec = add i32 %v0_3232f, -64
  %v2_322ec = inttoptr i32 %v1_322ec to i32*
  %v3_322ec = load i32, i32* %v2_322ec, align 4
  %v1_322f2 = call i32 @unknown_67110(i32 %v3_322ec)
  %v1_322f7 = inttoptr i32 %v1_322f2 to i32*
  %v2_322f7 = load i32, i32* %v1_322f7, align 4
  store i32 %v2_322f7, i32* %ebx.global-to-local, align 4
  %v0_322f9 = load i32, i32* @ebp, align 4
  %v1_322f9 = add i32 %v0_322f9, -64
  %v2_322f9 = inttoptr i32 %v1_322f9 to i32*
  %v3_322f9 = load i32, i32* %v2_322f9, align 4
  %v1_322ff = call i32 @unknown_67110(i32 %v3_322f9)
  %v1_32304 = inttoptr i32 %v1_322ff to i32*
  %v2_32304 = load i32, i32* %v1_32304, align 4
  %v0_32306 = load i32, i32* @ebp, align 4
  %v1_32306 = add i32 %v0_32306, -60
  %v2_32306 = inttoptr i32 %v1_32306 to i32*
  %v3_32306 = load i32, i32* %v2_32306, align 4
  %v1_32309 = add i32 %v0_32306, -72
  %v2_32309 = inttoptr i32 %v1_32309 to i32*
  %v3_32309 = load i32, i32* %v2_32309, align 4
  store i32 %v3_32309, i32* @ecx, align 4
  %v0_32310 = load i32, i32* %ebx.global-to-local, align 4
  %v1_32318 = add i32 %v0_32306, -64
  %v2_32318 = inttoptr i32 %v1_32318 to i32*
  %v3_32318 = load i32, i32* %v2_32318, align 4
  %v4_32322 = call i32 @unknown_66e0a(i32 %v3_32306, i32 %v3_32318, i32 %v2_32304, i32 %v0_32310)
  %v0_3232a = call i32 @function_3258a()
  ret i32 %v0_3232a

dec_label_pc_3232f:                               ; preds = %dec_label_pc_322cd
  %v1_3232f = add i32 %v0_3232f, -72
  %v2_3232f = inttoptr i32 %v1_3232f to i32*
  %v3_3232f = load i32, i32* %v2_3232f, align 4
  %v1_32336 = add i32 %v0_3232f, -15
  %v2_3233c = call i32 @unknown_66da6(i32 %v1_32336, i32 %v3_3232f)
  store i32 %v2_3233c, i32* %ebx.global-to-local, align 4
  %v0_32343 = load i32, i32* @ebp, align 4
  %v1_32343 = add i32 %v0_32343, -24
  %v1_32349 = call i32 @unknown_67140(i32 %v1_32343)
  %v1_3234e = inttoptr i32 %v1_32349 to i32*
  %v2_3234e = load i32, i32* %v1_3234e, align 4
  %v1_32353 = call i32 @unknown_66d62(i32 %v2_3234e)
  %v0_3235a = load i32, i32* @ebp, align 4
  %v1_3235a = add i32 %v0_3235a, -64
  %v2_3235a = inttoptr i32 %v1_3235a to i32*
  %v3_3235a = load i32, i32* %v2_3235a, align 4
  %v0_3235d = load i32, i32* %ebx.global-to-local, align 4
  %v3_32368 = call i32 @unknown_614a0(i32 %v3_3235a, i32 %v1_32353, i32 %v0_3235d)
  %v4_3236d = trunc i32 %v3_32368 to i8
  %v5_3236d = icmp eq i8 %v4_3236d, 0
  %v0_323e4 = load i32, i32* @ebp, align 4
  br i1 %v5_3236d, label %dec_label_pc_323e4, label %dec_label_pc_32371

dec_label_pc_32371:                               ; preds = %dec_label_pc_3232f
  %v1_32371 = add i32 %v0_323e4, -24
  %v2_32371 = inttoptr i32 %v1_32371 to i32*
  %v3_32371 = load i32, i32* %v2_32371, align 4
  %v1_32377 = call i32 @unknown_6717f(i32 %v3_32371)
  %v1_3237c = icmp eq i32 %v1_32377, 0
  %v5_32381 = icmp eq i1 %v1_3237c, false
  %v0_323b5 = load i32, i32* @ebp, align 4
  br i1 %v5_32381, label %dec_label_pc_323b5, label %dec_label_pc_32385

dec_label_pc_32385:                               ; preds = %dec_label_pc_32371
  %v1_32385 = add i32 %v0_323b5, -24
  %v2_32385 = inttoptr i32 %v1_32385 to i32*
  %v3_32385 = load i32, i32* %v2_32385, align 4
  %v1_32388 = add i32 %v0_323b5, -60
  %v2_32388 = inttoptr i32 %v1_32388 to i32*
  %v3_32388 = load i32, i32* %v2_32388, align 4
  %v1_3238b = add i32 %v0_323b5, -72
  %v2_3238b = inttoptr i32 %v1_3238b to i32*
  %v3_3238b = load i32, i32* %v2_3238b, align 4
  store i32 %v3_3238b, i32* @ecx, align 4
  %v1_3239e = add i32 %v0_323b5, -64
  %v2_3239e = inttoptr i32 %v1_3239e to i32*
  %v3_3239e = load i32, i32* %v2_3239e, align 4
  %v4_323a8 = call i32 @unknown_66e0a(i32 %v3_32388, i32 %v3_3239e, i32 0, i32 %v3_32385)
  %v0_323b0 = call i32 @function_3258a()
  ret i32 %v0_323b0

dec_label_pc_323b5:                               ; preds = %dec_label_pc_32371
  %v1_323b5 = add i32 %v0_323b5, -68
  %v2_323b5 = inttoptr i32 %v1_323b5 to i32*
  %v3_323b5 = load i32, i32* %v2_323b5, align 4
  store i32 %v3_323b5, i32* @ecx, align 4
  %v3_323b8 = load i32, i32* %v2_323b5, align 4
  %v1_323bb = add i32 %v0_323b5, -60
  %v2_323bb = inttoptr i32 %v1_323bb to i32*
  %v3_323bb = load i32, i32* %v2_323bb, align 4
  %v1_323be = add i32 %v0_323b5, -72
  %v2_323be = inttoptr i32 %v1_323be to i32*
  %v3_323be = load i32, i32* %v2_323be, align 4
  store i32 %v3_323be, i32* %ebx.global-to-local, align 4
  %v1_323cd = add i32 %v0_323b5, -64
  %v2_323cd = inttoptr i32 %v1_323cd to i32*
  %v3_323cd = load i32, i32* %v2_323cd, align 4
  %v4_323d7 = call i32 @unknown_66e0a(i32 %v3_323bb, i32 %v3_323cd, i32 %v3_323b8, i32 %v3_323b5)
  %v0_323df = call i32 @function_3258a()
  ret i32 %v0_323df

dec_label_pc_323e4:                               ; preds = %dec_label_pc_3232f
  %v1_323e4 = add i32 %v0_323e4, -40
  %v1_323e7 = add i32 %v0_323e4, -72
  %v2_323e7 = inttoptr i32 %v1_323e7 to i32*
  %v3_323e7 = load i32, i32* %v2_323e7, align 4
  %v1_323ee = add i32 %v0_323e4, -64
  %v2_323ee = inttoptr i32 %v1_323ee to i32*
  %v3_323ee = load i32, i32* %v2_323ee, align 4
  %v3_323f8 = call i32 @unknown_66f0c(i32 %v1_323e4, i32 %v3_323ee, i32 %v3_323e7)
  %v0_32400 = load i32, i32* @ebp, align 4
  %v1_32400 = add i32 %v0_32400, -60
  %v2_32400 = inttoptr i32 %v1_32400 to i32*
  %v3_32400 = load i32, i32* %v2_32400, align 4
  %v1_32403 = add i32 %v0_32400, -40
  %v2_32403 = inttoptr i32 %v1_32403 to i32*
  %v3_32403 = load i32, i32* %v2_32403, align 4
  %v2_32406 = inttoptr i32 %v3_32400 to i32*
  store i32 %v3_32403, i32* %v2_32406, align 4
  %v0_32408 = call i32 @function_3258a()
  ret i32 %v0_32408

dec_label_pc_3240d:                               ; preds = %dec_label_pc_32293
  %v1_3240d = add i32 %v0_3240d, -72
  %v2_3240d = inttoptr i32 %v1_3240d to i32*
  %v3_3240d = load i32, i32* %v2_3240d, align 4
  %v1_32414 = add i32 %v0_3240d, -14
  %v2_3241a = call i32 @unknown_66da6(i32 %v1_32414, i32 %v3_3240d)
  store i32 %v2_3241a, i32* %ebx.global-to-local, align 4
  %v0_32421 = load i32, i32* @ebp, align 4
  %v1_32421 = add i32 %v0_32421, -68
  %v2_32421 = inttoptr i32 %v1_32421 to i32*
  %v3_32421 = load i32, i32* %v2_32421, align 4
  %v1_32427 = call i32 @unknown_66d62(i32 %v3_32421)
  %v0_3242e = load i32, i32* @ebp, align 4
  %v1_3242e = add i32 %v0_3242e, -64
  %v2_3242e = inttoptr i32 %v1_3242e to i32*
  %v3_3242e = load i32, i32* %v2_3242e, align 4
  %v0_32431 = load i32, i32* %ebx.global-to-local, align 4
  %v3_3243c = call i32 @unknown_614a0(i32 %v3_3242e, i32 %v1_32427, i32 %v0_32431)
  %v4_32441 = trunc i32 %v3_3243c to i8
  %v5_32441 = icmp eq i8 %v4_32441, 0
  br i1 %v5_32441, label %bb, label %dec_label_pc_32449

bb:                                               ; preds = %dec_label_pc_3240d
  %v1_32443 = call i32 @function_32575()
  br label %dec_label_pc_32449

dec_label_pc_32449:                               ; preds = %bb, %dec_label_pc_3240d
  %v0_32449 = load i32, i32* @ebp, align 4
  %v1_32449 = add i32 %v0_32449, -68
  %v2_32449 = inttoptr i32 %v1_32449 to i32*
  %v3_32449 = load i32, i32* %v2_32449, align 4
  %v2_3244c = add i32 %v0_32449, -24
  %v3_3244c = inttoptr i32 %v2_3244c to i32*
  store i32 %v3_32449, i32* %v3_3244c, align 4
  %v0_3244f = load i32, i32* @ebp, align 4
  %v1_3244f = add i32 %v0_3244f, -68
  %v2_3244f = inttoptr i32 %v1_3244f to i32*
  %v3_3244f = load i32, i32* %v2_3244f, align 4
  store i32 %v3_3244f, i32* %ebx.global-to-local, align 4
  %v1_32452 = add i32 %v0_3244f, -64
  %v2_32452 = inttoptr i32 %v1_32452 to i32*
  %v3_32452 = load i32, i32* %v2_32452, align 4
  %v1_32458 = call i32 @unknown_66d32(i32 %v3_32452)
  %v1_3245d = inttoptr i32 %v1_32458 to i32*
  %v2_3245d = load i32, i32* %v1_3245d, align 4
  %v0_3245f = load i32, i32* %ebx.global-to-local, align 4
  %v12_3245f = icmp eq i32 %v0_3245f, %v2_3245d
  %v5_32464 = icmp eq i1 %v12_3245f, false
  %v0_324a2 = load i32, i32* @ebp, align 4
  br i1 %v5_32464, label %dec_label_pc_324a2, label %dec_label_pc_32468

dec_label_pc_32468:                               ; preds = %dec_label_pc_32449
  %v1_32468 = add i32 %v0_324a2, -64
  %v2_32468 = inttoptr i32 %v1_32468 to i32*
  %v3_32468 = load i32, i32* %v2_32468, align 4
  %v1_3246e = call i32 @unknown_66d32(i32 %v3_32468)
  %v1_32473 = inttoptr i32 %v1_3246e to i32*
  %v2_32473 = load i32, i32* %v1_32473, align 4
  %v0_32475 = load i32, i32* @ebp, align 4
  %v1_32475 = add i32 %v0_32475, -60
  %v2_32475 = inttoptr i32 %v1_32475 to i32*
  %v3_32475 = load i32, i32* %v2_32475, align 4
  %v1_32478 = add i32 %v0_32475, -72
  %v2_32478 = inttoptr i32 %v1_32478 to i32*
  %v3_32478 = load i32, i32* %v2_32478, align 4
  store i32 %v3_32478, i32* @ecx, align 4
  %v1_3248b = add i32 %v0_32475, -64
  %v2_3248b = inttoptr i32 %v1_3248b to i32*
  %v3_3248b = load i32, i32* %v2_3248b, align 4
  %v4_32495 = call i32 @unknown_66e0a(i32 %v3_32475, i32 %v3_3248b, i32 0, i32 %v2_32473)
  %v0_3249d = call i32 @function_3258a()
  ret i32 %v0_3249d

dec_label_pc_324a2:                               ; preds = %dec_label_pc_32449
  %v1_324a2 = add i32 %v0_324a2, -24
  %v1_324a8 = call i32 @unknown_61e2e(i32 %v1_324a2)
  %v1_324ad = inttoptr i32 %v1_324a8 to i32*
  %v2_324ad = load i32, i32* %v1_324ad, align 4
  %v1_324b2 = call i32 @unknown_66d62(i32 %v2_324ad)
  store i32 %v1_324b2, i32* %ebx.global-to-local, align 4
  %v0_324b9 = load i32, i32* @ebp, align 4
  %v1_324b9 = add i32 %v0_324b9, -72
  %v2_324b9 = inttoptr i32 %v1_324b9 to i32*
  %v3_324b9 = load i32, i32* %v2_324b9, align 4
  %v1_324c0 = add i32 %v0_324b9, -13
  %v2_324c6 = call i32 @unknown_66da6(i32 %v1_324c0, i32 %v3_324b9)
  %v0_324cb = load i32, i32* @ebp, align 4
  %v1_324cb = add i32 %v0_324cb, -64
  %v2_324cb = inttoptr i32 %v1_324cb to i32*
  %v3_324cb = load i32, i32* %v2_324cb, align 4
  %v0_324ce = load i32, i32* %ebx.global-to-local, align 4
  %v3_324d9 = call i32 @unknown_614a0(i32 %v3_324cb, i32 %v2_324c6, i32 %v0_324ce)
  %v4_324de = trunc i32 %v3_324d9 to i8
  %v5_324de = icmp eq i8 %v4_324de, 0
  br i1 %v5_324de, label %bb28, label %dec_label_pc_324e2

bb28:                                             ; preds = %dec_label_pc_324a2
  %v1_324e0 = call i32 @function_3254f()
  br label %dec_label_pc_324e2

dec_label_pc_324e2:                               ; preds = %bb28, %dec_label_pc_324a2
  %v0_324e2 = load i32, i32* @ebp, align 4
  %v1_324e2 = add i32 %v0_324e2, -68
  %v2_324e2 = inttoptr i32 %v1_324e2 to i32*
  %v3_324e2 = load i32, i32* %v2_324e2, align 4
  %v1_324e8 = call i32 @unknown_6717f(i32 %v3_324e2)
  %v1_324ed = icmp eq i32 %v1_324e8, 0
  %v1_324ef = zext i1 %v1_324ed to i32
  %v3_324ef = and i32 %v1_324e8, -256
  %v4_324ef = or i32 %v1_324ef, %v3_324ef
  %v5_324f2 = icmp eq i1 %v1_324ed, false
  br i1 %v5_324f2, label %bb29, label %dec_label_pc_324f6

bb29:                                             ; preds = %dec_label_pc_324e2
  %v1_324f4 = call i32 @function_32523()
  br label %dec_label_pc_324f6

dec_label_pc_324f6:                               ; preds = %bb29, %dec_label_pc_324e2
  %v4_324f6 = phi i32 [ %v1_324f4, %bb29 ], [ %v4_324ef, %dec_label_pc_324e2 ]
  ret i32 %v4_324f6

; uselistorder directives
  uselistorder i1 %v1_324ed, { 1, 0 }
  uselistorder i32 %v0_324a2, { 1, 0 }
  uselistorder i32 %v0_323b5, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_323e4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_3232f, { 1, 2, 0 }
  uselistorder i32 %v0_3240d, { 2, 3, 1, 0 }
  uselistorder i32 %v0_3226a, { 0, 2, 3, 1 }
  uselistorder i32 %v0_32293, { 1, 0 }
  uselistorder i32 (i32)* @unknown_6717f, { 1, 0 }
  uselistorder i32 (i32)* @unknown_67110, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_614a0, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_66d62, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_66d32, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_66da6, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_3222c, { 1, 0 }
}

define i32 @function_324fa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_324fa:
  %v0_324fa = load i32, i32* @ebp, align 4
  %v1_324fa = add i32 %v0_324fa, 1
  store i32 %v1_324fa, i32* @ebp, align 4
  %v0_324fb = load i32, i32* @ebx, align 4
  %v1_324fb = add i32 %v0_324fb, 1284094029
  %v2_324fb = inttoptr i32 %v1_324fb to i32*
  %v3_324fb = load i32, i32* %v2_324fb, align 4
  store i32 %v3_324fb, i32* @ecx, align 4
  %v0_32501 = load i32, i32* @eax, align 8
  %v11_32501 = and i32 %v0_32501, or (i32 zext (i8 ptrtoint (i8** @global_var_10.2429 to i8) to i32), i32 -256)
  %v0_32503 = load i32, i32* @edx, align 8
  %v1_3250f = add i32 %v0_324fa, -63
  %v2_3250f = inttoptr i32 %v1_3250f to i32*
  %v3_3250f = load i32, i32* %v2_3250f, align 4
  %v4_32519 = call i32 @unknown_66e0a(i32 %v11_32501, i32 %v3_3250f, i32 0, i32 %v0_32503)
  %v0_32521 = call i32 @function_3258a()
  ret i32 %v0_32521
}

define i32 @function_32523() local_unnamed_addr {
dec_label_pc_32523:
  %v0_32523 = load i32, i32* @ebp, align 4
  %v1_32523 = add i32 %v0_32523, -24
  %v2_32523 = inttoptr i32 %v1_32523 to i32*
  %v3_32523 = load i32, i32* %v2_32523, align 4
  store i32 %v3_32523, i32* @ecx, align 4
  %v3_32526 = load i32, i32* %v2_32523, align 4
  %v1_32529 = add i32 %v0_32523, -60
  %v2_32529 = inttoptr i32 %v1_32529 to i32*
  %v3_32529 = load i32, i32* %v2_32529, align 4
  %v1_3253b = add i32 %v0_32523, -64
  %v2_3253b = inttoptr i32 %v1_3253b to i32*
  %v3_3253b = load i32, i32* %v2_3253b, align 4
  %v4_32545 = call i32 @unknown_66e0a(i32 %v3_32529, i32 %v3_3253b, i32 %v3_32526, i32 %v3_32523)
  %v0_3254d = call i32 @function_3258a()
  ret i32 %v0_3254d

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @unknown_66e0a, { 6, 0, 5, 4, 3, 2, 1 }
}

define i32 @function_3254f() local_unnamed_addr {
dec_label_pc_3254f:
  %v0_3254f = load i32, i32* @ebp, align 4
  %v1_3254f = add i32 %v0_3254f, -32
  %v1_32552 = add i32 %v0_3254f, -72
  %v2_32552 = inttoptr i32 %v1_32552 to i32*
  %v3_32552 = load i32, i32* %v2_32552, align 4
  %v1_32559 = add i32 %v0_3254f, -64
  %v2_32559 = inttoptr i32 %v1_32559 to i32*
  %v3_32559 = load i32, i32* %v2_32559, align 4
  %v3_32563 = call i32 @unknown_66f0c(i32 %v1_3254f, i32 %v3_32559, i32 %v3_32552)
  %v0_3256b = load i32, i32* @ebp, align 4
  %v1_3256b = add i32 %v0_3256b, -60
  %v2_3256b = inttoptr i32 %v1_3256b to i32*
  %v3_3256b = load i32, i32* %v2_3256b, align 4
  %v1_3256e = add i32 %v0_3256b, -32
  %v2_3256e = inttoptr i32 %v1_3256e to i32*
  %v3_3256e = load i32, i32* %v2_3256e, align 4
  %v2_32571 = inttoptr i32 %v3_3256b to i32*
  store i32 %v3_3256e, i32* %v2_32571, align 4
  %v0_32573 = call i32 @function_3258a()
  ret i32 %v0_32573

; uselistorder directives
  uselistorder i32 ()* @function_3258a, { 9, 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_66f0c, { 2, 1, 0 }
}

define i32 @function_32575() local_unnamed_addr {
dec_label_pc_32575:
  %v0_32575 = load i32, i32* @ebp, align 4
  %v1_32575 = add i32 %v0_32575, -60
  %v2_32575 = inttoptr i32 %v1_32575 to i32*
  %v3_32575 = load i32, i32* %v2_32575, align 4
  %v1_32578 = add i32 %v0_32575, -68
  %v2_32582 = call i32 @unknown_671b0(i32 %v3_32575, i32 %v1_32578)
  ret i32 %v2_32582
}

define i32 @function_3257c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3257c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3258a() local_unnamed_addr {
dec_label_pc_3258a:
  %v0_3258a = load i32, i32* @ebp, align 4
  %v1_3258a = add i32 %v0_3258a, -60
  %v2_3258a = inttoptr i32 %v1_3258a to i32*
  %v3_3258a = load i32, i32* %v2_3258a, align 4
  store i32 %v3_3258a, i32* @eax, align 8
  %v1_3258d = add i32 %v0_3258a, -12
  %v2_3258d = inttoptr i32 %v1_3258d to i32*
  %v3_3258d = load i32, i32* %v2_3258d, align 4
  %v3_32590 = icmp eq i32 %v3_3258d, 30
  br i1 %v3_32590, label %bb, label %dec_label_pc_32599

bb:                                               ; preds = %dec_label_pc_3258a
  %v1_32597 = call i32 @function_3259e()
  br label %dec_label_pc_32599

dec_label_pc_32599:                               ; preds = %bb, %dec_label_pc_3258a
  %v2_32597 = phi i32 [ %v1_32597, %bb ], [ %v3_3258a, %dec_label_pc_3258a ]
  ret i32 %v2_32597
}

define i32 @function_3259e() local_unnamed_addr {
dec_label_pc_3259e:
  %v0_3259e = load i32, i32* @ebp, align 4
  %v1_3259e = add i32 %v0_3259e, -4
  %v2_3259e = inttoptr i32 %v1_3259e to i32*
  %v3_3259e = load i32, i32* %v2_3259e, align 4
  store i32 %v3_3259e, i32* @ebx, align 4
  %v0_325a2 = load i32, i32* @eax, align 8
  ret i32 %v0_325a2
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_325a6:
  ret i32 %arg2
}

define i32 @function_3260c() local_unnamed_addr {
dec_label_pc_3260c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3260c = load i32, i32* %ecx.global-to-local, align 4
  %v1_3260c = add i32 %v0_3260c, -1
  store i32 %v1_3260c, i32* %ecx.global-to-local, align 4
  %v0_3260e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3260e
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32610:
  %v1_32633 = call i32 @unknown_64d90(i32 %arg2)
  %v2_32642 = call i32 @unknown_64dbe(i32 %arg1, i32 %v1_32633)
  store i32 %arg1, i32* @eax, align 8
  %v1_32654 = call i32 @function_3265b()
  ret i32 %v1_32654

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3265b() local_unnamed_addr {
dec_label_pc_3265b:
  %v0_3265c = load i32, i32* @eax, align 8
  ret i32 %v0_3265c
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32660:
  %v1_3267d = call i32 @unknown_6776e(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_3268c = call i32 @function_32693()
  ret i32 %v1_3268c
}

define i32 @function_32693() local_unnamed_addr {
dec_label_pc_32693:
  %v0_32694 = load i32, i32* @eax, align 8
  ret i32 %v0_32694
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEPT_RSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32695:
  store i32 %arg1, i32* @eax, align 8
  %v2_326b9 = call i32 @function_326c0(i32 %arg1)
  ret i32 %v2_326b9
}

define i32 @function_326c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_326c0:
  %v0_326c1 = load i32, i32* @eax, align 8
  ret i32 %v0_326c1
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_326c2:
  %v1_326dc = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_326e2 = call i32 @unknown_42bc4(i32 %v1_326dc)
  store i32 0, i32* @eax, align 8
  %v1_326f1 = call i32 @function_326f8()
  ret i32 %v1_326f1
}

define i32 @function_326f8() local_unnamed_addr {
dec_label_pc_326f8:
  %v0_326f9 = load i32, i32* @eax, align 8
  ret i32 %v0_326f9
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEE7destroyEPSK_() local_unnamed_addr {
dec_label_pc_326fa:
  %eax.global-to-local = alloca i32, align 4
  %v2_326fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_326fb
}

define i32 @function_326fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_326fe:
  %v4_326ff = load i32, i32* @ecx, align 4
  %v0_32707 = load i32, i32* @ebp, align 4
  %v0_32708 = load i32, i32* @eax, align 8
  %v11_32708 = or i32 %v0_32708, 137
  store i32 %v11_32708, i32* @eax, align 8
  %v1_3270a = add i32 %v0_32707, 2
  %v9_3270a = icmp eq i32 %v1_3270a, 0
  store i32 %v1_3270a, i32* @ebp, align 4
  %v1_3270b = add i32 %v4_326ff, -1
  store i32 %v1_3270b, i32* @ecx, align 4
  %v2_3270b = icmp eq i32 %v1_3270b, 0
  %v4_3270b = or i1 %v2_3270b, %v9_3270a
  br i1 %v4_3270b, label %dec_label_pc_3270d, label %bb

bb:                                               ; preds = %dec_label_pc_326fe
  %v6_3270b = call i32 @function_32772()
  %v1_32712.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3270d

dec_label_pc_3270d:                               ; preds = %dec_label_pc_326fe, %bb
  %v1_32712 = phi i32 [ %v1_3270a, %dec_label_pc_326fe ], [ %v1_32712.pre, %bb ]
  %v2_32712 = add i32 %v1_32712, -12
  %v3_32712 = inttoptr i32 %v2_32712 to i32*
  store i32 30, i32* %v3_32712, align 4
  %v0_32717 = load i32, i32* @ebp, align 4
  %v1_32717 = add i32 %v0_32717, -32
  %v2_32717 = inttoptr i32 %v1_32717 to i32*
  %v3_32717 = load i32, i32* %v2_32717, align 4
  %v1_3271d = call i32 @unknown_64dbc(i32 %v3_32717)
  %v0_32722 = load i32, i32* @ebp, align 4
  %v1_32722 = add i32 %v0_32722, -12
  %v2_32722 = inttoptr i32 %v1_32722 to i32*
  %v3_32722 = load i32, i32* %v2_32722, align 4
  %v2_32725 = xor i32 %v3_32722, 30
  %v3_32725 = icmp eq i32 %v2_32725, 0
  store i32 %v2_32725, i32* @eax, align 8
  br i1 %v3_32725, label %bb4, label %dec_label_pc_3272e

bb4:                                              ; preds = %dec_label_pc_3270d
  %v1_3272c = call i32 @function_32733()
  br label %dec_label_pc_3272e

dec_label_pc_3272e:                               ; preds = %bb4, %dec_label_pc_3270d
  %v2_3272c = phi i32 [ %v1_3272c, %bb4 ], [ %v2_32725, %dec_label_pc_3270d ]
  ret i32 %v2_3272c

; uselistorder directives
  uselistorder i32 %v1_3270b, { 1, 0 }
  uselistorder label %dec_label_pc_3270d, { 1, 0 }
}

define i32 @function_32733() local_unnamed_addr {
dec_label_pc_32733:
  %v0_32734 = load i32, i32* @eax, align 8
  ret i32 %v0_32734
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_put_nodeEPSt10_List_nodeISJ_E() local_unnamed_addr {
dec_label_pc_32736:
  %eax.global-to-local = alloca i32, align 4
  %v5_32736 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_32736
}

define i32 @function_32738(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32738:
  %v4_3273b = load i32, i32* @ecx, align 4
  %v0_32743 = load i32, i32* @ebp, align 4
  %v1_32746 = add i32 %v0_32743, 2
  %v9_32746 = icmp eq i32 %v1_32746, 0
  store i32 %v1_32746, i32* @ebp, align 4
  %v1_32747 = add i32 %v4_3273b, -1
  store i32 %v1_32747, i32* @ecx, align 4
  %v2_32747 = icmp eq i32 %v1_32747, 0
  %v4_32747 = or i1 %v2_32747, %v9_32746
  br i1 %v4_32747, label %dec_label_pc_32749, label %bb

bb:                                               ; preds = %dec_label_pc_32738
  %v6_32747 = call i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E()
  %v1_3274e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_32749

dec_label_pc_32749:                               ; preds = %dec_label_pc_32738, %bb
  %v1_3274e = phi i32 [ %v1_32746, %dec_label_pc_32738 ], [ %v1_3274e.pre, %bb ]
  %v2_3274e = add i32 %v1_3274e, -12
  %v3_3274e = inttoptr i32 %v2_3274e to i32*
  store i32 30, i32* %v3_3274e, align 4
  %v0_32753 = load i32, i32* @ebp, align 4
  %v1_32753 = add i32 %v0_32753, -28
  %v2_32753 = inttoptr i32 %v1_32753 to i32*
  %v3_32753 = load i32, i32* %v2_32753, align 4
  %v1_3275e = add i32 %v0_32753, -32
  %v2_3275e = inttoptr i32 %v1_3275e to i32*
  %v3_3275e = load i32, i32* %v2_3275e, align 4
  %v3_32768 = call i32 @unknown_6786e(i32 %v3_32753, i32 %v3_3275e, i32 1)
  %v0_3276d = load i32, i32* @ebp, align 4
  %v1_3276d = add i32 %v0_3276d, -12
  %v2_3276d = inttoptr i32 %v1_3276d to i32*
  %v3_3276d = load i32, i32* %v2_3276d, align 4
  ret i32 %v3_3276d

; uselistorder directives
  uselistorder i32 %v1_32747, { 1, 0 }
  uselistorder label %dec_label_pc_32749, { 1, 0 }
}

define i32 @function_32772() local_unnamed_addr {
dec_label_pc_32772:
  %v0_32772 = load i32, i32* @eax, align 8
  %v1_32772 = add i32 %v0_32772, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_32772 = icmp eq i32 %v1_32772, 0
  store i32 %v1_32772, i32* @eax, align 8
  br i1 %v10_32772, label %bb, label %dec_label_pc_32779

bb:                                               ; preds = %dec_label_pc_32772
  %v1_32777 = call i32 @function_3277e()
  br label %dec_label_pc_32779

dec_label_pc_32779:                               ; preds = %bb, %dec_label_pc_32772
  %v2_32777 = phi i32 [ %v1_32777, %bb ], [ %v1_32772, %dec_label_pc_32772 ]
  ret i32 %v2_32777
}

define i32 @function_3277e() local_unnamed_addr {
dec_label_pc_3277e:
  %v0_3277f = load i32, i32* @eax, align 8
  ret i32 %v0_3277f
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32780:
  store i32 %arg1, i32* @eax, align 8
  %v2_327a4 = call i32 @function_327ab(i32 %arg1)
  ret i32 %v2_327a4
}

define i32 @function_327ab(i32 %arg1) local_unnamed_addr {
dec_label_pc_327ab:
  %v0_327ac = load i32, i32* @eax, align 8
  ret i32 %v0_327ac
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E() local_unnamed_addr {
dec_label_pc_327ae:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_327d1 = call i32 @unknown_67928(i32 %tmp4)
  store i32 0, i32* @eax, align 8
  %v1_327e0 = call i32 @function_327e7()
  ret i32 %v1_327e0
}

define i32 @function_327e7() local_unnamed_addr {
dec_label_pc_327e7:
  %v0_327e8 = load i32, i32* @eax, align 8
  ret i32 %v0_327e8
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_327ea:
  ret i32 %arg2
}

define i32 @function_3280a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3280a:
  %v0_3280a = load i32, i32* @eax, align 8
  %v0_3280e = load i32, i32* @ebp, align 4
  %v1_3280e = add i32 %v0_3280e, -13
  %v2_32814 = call i32 @unknown_6798e(i32 %v1_3280e, i32 %v0_3280a)
  %v0_32819 = load i32, i32* @ebp, align 4
  %v1_32819 = add i32 %v0_32819, -28
  %v2_32819 = inttoptr i32 %v1_32819 to i32*
  %v3_32819 = load i32, i32* %v2_32819, align 4
  %v1_3281c = add i32 %v0_32819, -13
  %v2_32826 = call i32 @unknown_679ca(i32 %v3_32819, i32 %v1_3281c)
  %v0_3282b = load i32, i32* @ebp, align 4
  %v1_3282b = add i32 %v0_3282b, -13
  %v1_32831 = call i32 @unknown_6514a(i32 %v1_3282b)
  %v0_32836 = load i32, i32* @ebp, align 4
  %v1_32836 = add i32 %v0_32836, -28
  %v2_32836 = inttoptr i32 %v1_32836 to i32*
  %v3_32836 = load i32, i32* %v2_32836, align 4
  %v1_3283c = call i32 @unknown_67a20(i32 %v3_32836)
  %v0_32841 = load i32, i32* @ebp, align 4
  %v1_32841 = add i32 %v0_32841, -12
  %v2_32841 = inttoptr i32 %v1_32841 to i32*
  %v3_32841 = load i32, i32* %v2_32841, align 4
  ret i32 %v3_32841
}

define i32 @function_3284a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3284a:
  %v0_3284a = load i32, i32* @ebp, align 4
  %v1_3284a = load i32, i32* @eax, align 8
  %v3_3284a = add i32 %v0_3284a, -24
  %v4_3284a = add i32 %v3_3284a, %v1_3284a
  %v5_3284a = inttoptr i32 %v4_3284a to i8*
  %v6_3284a = load i8, i8* %v5_3284a, align 1
  %v7_3284a = load i32, i32* @edx, align 8
  %v8_3284a = lshr i32 %v7_3284a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_3284a = trunc i32 %v8_3284a to i8
  %v10_3284a = add i8 %v9_3284a, %v6_3284a
  store i8 %v10_3284a, i8* %v5_3284a, align 1
  %v31_3284a = load i32, i32* @eax, align 8
  ret i32 %v31_3284a
}

define i32 @function_32851() local_unnamed_addr {
dec_label_pc_32851:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32851 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32851 = add i32 %v0_32851, -1
  store i32 %v1_32851, i32* %ecx.global-to-local, align 4
  %v0_32853 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32853
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_32854:
  ret i32 %arg1
}

define i32 @function_32880(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32880:
  %v0_32880 = call i32 @unknown_67ac6()
  %v0_32885 = load i32, i32* @ebp, align 4
  %v1_32885 = add i32 %v0_32885, -28
  %v2_32885 = inttoptr i32 %v1_32885 to i32*
  %v3_32885 = load i32, i32* %v2_32885, align 4
  ret i32 %v3_32885
}

define i32 @function_32892(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32892:
  %v0_32892 = load i1, i1* @zf, align 1
  br i1 %v0_32892, label %bb, label %dec_label_pc_32892.dec_label_pc_32894_crit_edge

dec_label_pc_32892.dec_label_pc_32894_crit_edge:  ; preds = %dec_label_pc_32892
  %v2_32892.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_32894

bb:                                               ; preds = %dec_label_pc_32892
  %v1_32892 = call i32 @function_32899()
  br label %dec_label_pc_32894

dec_label_pc_32894:                               ; preds = %dec_label_pc_32892.dec_label_pc_32894_crit_edge, %bb
  %v2_32892 = phi i32 [ %v2_32892.pre, %dec_label_pc_32892.dec_label_pc_32894_crit_edge ], [ %v1_32892, %bb ]
  ret i32 %v2_32892

; uselistorder directives
  uselistorder label %dec_label_pc_32894, { 1, 0 }
}

define i32 @function_32899() local_unnamed_addr {
dec_label_pc_32899:
  %v0_3289a = load i32, i32* @eax, align 8
  ret i32 %v0_3289a
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3289e:
  %v2_328c8 = call i32 @unknown_67b10(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_328da = call i32 @function_328e1()
  ret i32 %v1_328da

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_328e1() local_unnamed_addr {
dec_label_pc_328e1:
  %v0_328e2 = load i32, i32* @eax, align 8
  ret i32 %v0_328e2
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE22_M_initialize_dispatchISt20_List_const_iteratorISJ_EEEvT_SP_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_328e6:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_3293a = ptrtoint i32* %stack_var_-40 to i32
  %v2_3293e = ptrtoint i32* %stack_var_-36 to i32
  %v2_32944109 = call i32 @unknown_62686(i32 %v2_3293e, i32 %v4_3293a)
  %v4_32949110 = trunc i32 %v2_32944109 to i8
  %v5_32949111 = icmp eq i8 %v4_32949110, 0
  %v1_3294b113 = icmp eq i1 %v5_32949111, false
  br i1 %v1_3294b113, label %dec_label_pc_32912, label %dec_label_pc_3294d

dec_label_pc_32912:                               ; preds = %dec_label_pc_328e6, %dec_label_pc_32912
  %v1_32918 = call i32 @unknown_67bee(i32 %v2_3293e)
  %v2_32927 = call i32 @unknown_67b90(i32 %arg1, i32 %v1_32918)
  %v1_32932 = call i32 @unknown_626c6(i32 %v2_3293e)
  %v2_32944 = call i32 @unknown_62686(i32 %v2_3293e, i32 %v4_3293a)
  %v4_32949 = trunc i32 %v2_32944 to i8
  %v5_32949 = icmp eq i8 %v4_32949, 0
  %v1_3294b = icmp eq i1 %v5_32949, false
  br i1 %v1_3294b, label %dec_label_pc_32912, label %dec_label_pc_3294d

dec_label_pc_3294d:                               ; preds = %dec_label_pc_32912, %dec_label_pc_328e6
  store i32 0, i32* @eax, align 8
  %v1_32957 = call i32 @function_3295e()
  ret i32 %v1_32957

; uselistorder directives
  uselistorder i32 %v2_3293e, { 3, 1, 2, 0 }
  uselistorder i32 %v4_3293a, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_62686, { 1, 0 }
  uselistorder label %dec_label_pc_32912, { 1, 0 }
}

define i32 @function_3295e() local_unnamed_addr {
dec_label_pc_3295e:
  %v0_3295f = load i32, i32* @eax, align 8
  ret i32 %v0_3295f
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32960:
  ret i32 30
}

define i32 @function_32972(i32 %arg1) local_unnamed_addr {
dec_label_pc_32972:
  %v0_32972 = load i32, i32* @eax, align 8
  %v1_32972 = load i32, i32* @ebp, align 4
  %v2_32972 = add i32 %v1_32972, -12
  %v3_32972 = inttoptr i32 %v2_32972 to i32*
  store i32 %v0_32972, i32* %v3_32972, align 4
  %v0_32977 = load i32, i32* @ebp, align 4
  %v1_32977 = add i32 %v0_32977, -28
  %v2_32977 = inttoptr i32 %v1_32977 to i32*
  %v3_32977 = load i32, i32* %v2_32977, align 4
  %v1_3297d = call i32 @unknown_67c9a(i32 %v3_32977)
  %v0_32982 = load i32, i32* @ebp, align 4
  %v1_32982 = add i32 %v0_32982, -12
  %v2_32982 = inttoptr i32 %v1_32982 to i32*
  %v3_32982 = load i32, i32* %v2_32982, align 4
  %v2_32985 = xor i32 %v3_32982, 30
  %v3_32985 = icmp eq i32 %v2_32985, 0
  store i32 %v2_32985, i32* @eax, align 8
  br i1 %v3_32985, label %bb, label %dec_label_pc_3298e

bb:                                               ; preds = %dec_label_pc_32972
  %v1_3298c = call i32 @function_32993()
  br label %dec_label_pc_3298e

dec_label_pc_3298e:                               ; preds = %bb, %dec_label_pc_32972
  %v2_3298c = phi i32 [ %v1_3298c, %bb ], [ %v2_32985, %dec_label_pc_32972 ]
  ret i32 %v2_3298c
}

define i32 @function_32993() local_unnamed_addr {
dec_label_pc_32993:
  %v0_32994 = load i32, i32* @eax, align 8
  ret i32 %v0_32994
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32996:
  ret i32 %arg1
}

define i32 @function_329a2() local_unnamed_addr {
dec_label_pc_329a2:
  %eax.global-to-local = alloca i32, align 4
  %v1_329a9 = load i32, i32* @ebp, align 4
  %v2_329a9 = add i32 %v1_329a9, -12
  %v3_329a9 = inttoptr i32 %v2_329a9 to i32*
  store i32 30, i32* %v3_329a9, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_329ae = load i32, i32* @ebp, align 4
  %v1_329ae = add i32 %v0_329ae, -28
  %v2_329ae = inttoptr i32 %v1_329ae to i32*
  %v3_329ae = load i32, i32* %v2_329ae, align 4
  store i32 %v3_329ae, i32* %eax.global-to-local, align 8
  %v1_329b1 = inttoptr i32 %v3_329ae to i32*
  %v2_329b1 = load i32, i32* %v1_329b1, align 4
  store i32 %v2_329b1, i32* %eax.global-to-local, align 8
  %v2_329b3 = add i32 %v0_329ae, -24
  %v3_329b3 = inttoptr i32 %v2_329b3 to i32*
  store i32 %v2_329b1, i32* %v3_329b3, align 4
  br label %dec_label_pc_32a17

dec_label_pc_329b8:                               ; preds = %dec_label_pc_32a17
  %v3_329b8 = load i32, i32* %v3_32a1a, align 4
  store i32 %v3_329b8, i32* %eax.global-to-local, align 8
  %v2_329bb = add i32 %v0_32a17, -20
  %v3_329bb = inttoptr i32 %v2_329bb to i32*
  store i32 %v3_329b8, i32* %v3_329bb, align 4
  %v0_329be = load i32, i32* @ebp, align 4
  %v1_329be = add i32 %v0_329be, -24
  %v2_329be = inttoptr i32 %v1_329be to i32*
  %v3_329be = load i32, i32* %v2_329be, align 4
  store i32 %v3_329be, i32* %eax.global-to-local, align 8
  %v1_329c1 = inttoptr i32 %v3_329be to i32*
  %v2_329c1 = load i32, i32* %v1_329c1, align 4
  store i32 %v2_329c1, i32* %eax.global-to-local, align 8
  store i32 %v2_329c1, i32* %v2_329be, align 4
  %v0_329c6 = load i32, i32* @ebp, align 4
  %v1_329c6 = add i32 %v0_329c6, -20
  %v2_329c6 = inttoptr i32 %v1_329c6 to i32*
  %v3_329c6 = load i32, i32* %v2_329c6, align 4
  %v1_329c9 = add i32 %v3_329c6, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_329c9, i32* %eax.global-to-local, align 8
  %v1_329cc = load i32, i32* @esp, align 4
  %v2_329cc = inttoptr i32 %v1_329cc to i32*
  store i32 %v1_329c9, i32* %v2_329cc, align 4
  %v0_329cf = call i32 @unknown_6502b()
  store i32 %v0_329cf, i32* @ebx, align 4
  %v0_329d6 = load i32, i32* @ebp, align 4
  %v1_329d6 = add i32 %v0_329d6, -13
  store i32 %v1_329d6, i32* %eax.global-to-local, align 8
  %v1_329d9 = add i32 %v0_329d6, -28
  %v2_329d9 = inttoptr i32 %v1_329d9 to i32*
  %v3_329d9 = load i32, i32* %v2_329d9, align 4
  %v1_329dc = load i32, i32* @esp, align 4
  %v2_329dc = add i32 %v1_329dc, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_329dc = inttoptr i32 %v2_329dc to i32*
  store i32 %v3_329d9, i32* %v3_329dc, align 4
  %v0_329e0 = load i32, i32* %eax.global-to-local, align 8
  %v1_329e0 = load i32, i32* @esp, align 4
  %v2_329e0 = inttoptr i32 %v1_329e0 to i32*
  store i32 %v0_329e0, i32* %v2_329e0, align 4
  %v0_329e3 = call i32 @unknown_64fa6()
  %v0_329e8 = load i32, i32* @esp, align 4
  %v0_329eb = load i32, i32* @ebx, align 4
  %v3_329eb = inttoptr i32 %v0_329e8 to i32*
  store i32 %v0_329eb, i32* %v3_329eb, align 4
  %v0_329ef = load i32, i32* @ebp, align 4
  %v1_329ef = add i32 %v0_329ef, -13
  store i32 %v1_329ef, i32* %eax.global-to-local, align 8
  %v1_329f2 = load i32, i32* @esp, align 4
  %v2_329f2 = inttoptr i32 %v1_329f2 to i32*
  store i32 %v1_329ef, i32* %v2_329f2, align 4
  %v0_329f5 = call i32 @unknown_65090()
  %v0_329fa = load i32, i32* @ebp, align 4
  %v1_329fa = add i32 %v0_329fa, -13
  store i32 %v1_329fa, i32* %eax.global-to-local, align 8
  %v1_329fd = load i32, i32* @esp, align 4
  %v2_329fd = inttoptr i32 %v1_329fd to i32*
  store i32 %v1_329fa, i32* %v2_329fd, align 4
  %v0_32a00 = call i32 @unknown_64ff6()
  store i32 %v0_32a00, i32* %eax.global-to-local, align 8
  %v0_32a05 = load i32, i32* @ebp, align 4
  %v1_32a05 = add i32 %v0_32a05, -20
  %v2_32a05 = inttoptr i32 %v1_32a05 to i32*
  %v3_32a05 = load i32, i32* %v2_32a05, align 4
  store i32 %v3_32a05, i32* %eax.global-to-local, align 8
  %v1_32a08 = load i32, i32* @esp, align 4
  %v2_32a08 = add i32 %v1_32a08, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_32a08 = inttoptr i32 %v2_32a08 to i32*
  store i32 %v3_32a05, i32* %v3_32a08, align 4
  %v0_32a0c = load i32, i32* @ebp, align 4
  %v1_32a0c = add i32 %v0_32a0c, -28
  %v2_32a0c = inttoptr i32 %v1_32a0c to i32*
  %v3_32a0c = load i32, i32* %v2_32a0c, align 4
  store i32 %v3_32a0c, i32* %eax.global-to-local, align 8
  %v1_32a0f = load i32, i32* @esp, align 4
  %v2_32a0f = inttoptr i32 %v1_32a0f to i32*
  store i32 %v3_32a0c, i32* %v2_32a0f, align 4
  %v0_32a12 = call i32 @unknown_650cc()
  store i32 %v0_32a12, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32a17

dec_label_pc_32a17:                               ; preds = %dec_label_pc_329b8, %dec_label_pc_329a2
  %v0_32a17 = load i32, i32* @ebp, align 4
  %v1_32a17 = add i32 %v0_32a17, -28
  %v2_32a17 = inttoptr i32 %v1_32a17 to i32*
  %v3_32a17 = load i32, i32* %v2_32a17, align 4
  store i32 %v3_32a17, i32* %eax.global-to-local, align 8
  %v2_32a1a = add i32 %v0_32a17, -24
  %v3_32a1a = inttoptr i32 %v2_32a1a to i32*
  %v4_32a1a = load i32, i32* %v3_32a1a, align 4
  %v15_32a1a = icmp eq i32 %v3_32a17, %v4_32a1a
  %v1_32a1d = icmp eq i1 %v15_32a1a, false
  %v2_32a1d = zext i1 %v1_32a1d to i32
  %v4_32a1d = and i32 %v3_32a17, -256
  %v5_32a1d = or i32 %v2_32a1d, %v4_32a1d
  store i32 %v5_32a1d, i32* %eax.global-to-local, align 8
  %v5_32a20 = icmp eq i1 %v1_32a1d, false
  %v1_32a22 = icmp eq i1 %v5_32a20, false
  br i1 %v1_32a22, label %dec_label_pc_329b8, label %dec_label_pc_32a24

dec_label_pc_32a24:                               ; preds = %dec_label_pc_32a17
  %v0_32a24 = call i32 @function_32a3d()
  store i32 %v0_32a24, i32* %eax.global-to-local, align 8
  ret i32 %v0_32a24

; uselistorder directives
  uselistorder i32* %v3_32a1a, { 1, 0 }
  uselistorder i32 %v3_32a17, { 1, 0, 2 }
  uselistorder i32 %v0_32a17, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17 }
}

define i32 @function_32a27() local_unnamed_addr {
dec_label_pc_32a27:
  %eax.global-to-local = alloca i32, align 4
  %v0_32a27 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32a27
}

define i32 @function_32a2d() local_unnamed_addr {
dec_label_pc_32a2d:
  %eax.global-to-local = alloca i32, align 4
  %v0_32a2d = load i32, i32* %eax.global-to-local, align 8
  %v11_32a2d = and i32 %v0_32a2d, -24
  store i32 %v11_32a2d, i32* %eax.global-to-local, align 8
  ret i32 %v11_32a2d

; uselistorder directives
  uselistorder i32 %v11_32a2d, { 1, 0 }
}

define i32 @function_32a3d() local_unnamed_addr {
dec_label_pc_32a3d:
  %v0_32a3d = load i32, i32* @ebp, align 4
  %v1_32a3d = add i32 %v0_32a3d, -12
  %v2_32a3d = inttoptr i32 %v1_32a3d to i32*
  %v3_32a3d = load i32, i32* %v2_32a3d, align 4
  %v2_32a40 = xor i32 %v3_32a3d, 30
  %v3_32a40 = icmp eq i32 %v2_32a40, 0
  store i32 %v2_32a40, i32* @eax, align 8
  br i1 %v3_32a40, label %bb, label %dec_label_pc_32a49

bb:                                               ; preds = %dec_label_pc_32a3d
  %v1_32a47 = call i32 @function_32a4e()
  br label %dec_label_pc_32a49

dec_label_pc_32a49:                               ; preds = %bb, %dec_label_pc_32a3d
  %v3_32a47 = phi i32 [ %v1_32a47, %bb ], [ %v2_32a40, %dec_label_pc_32a3d ]
  ret i32 %v3_32a47
}

define i32 @function_32a4e() local_unnamed_addr {
dec_label_pc_32a4e:
  %v0_32a4e = load i32, i32* @ebp, align 4
  %v1_32a4e = add i32 %v0_32a4e, -4
  %v2_32a4e = inttoptr i32 %v1_32a4e to i32*
  %v3_32a4e = load i32, i32* %v2_32a4e, align 4
  store i32 %v3_32a4e, i32* @ebx, align 4
  %v0_32a52 = load i32, i32* @eax, align 8
  ret i32 %v0_32a52
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EEC1ERKSV_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32a54:
  ret i32 30
}

define i32 @function_32a6e() local_unnamed_addr {
dec_label_pc_32a6e:
  %v0_32a6e = load i32, i32* @eax, align 8
  %v1_32a6e = load i32, i32* @ebp, align 4
  %v2_32a6e = add i32 %v1_32a6e, -12
  %v3_32a6e = inttoptr i32 %v2_32a6e to i32*
  store i32 %v0_32a6e, i32* %v3_32a6e, align 4
  %v0_32a73 = load i32, i32* @ebp, align 4
  %v1_32a73 = add i32 %v0_32a73, -32
  %v2_32a73 = inttoptr i32 %v1_32a73 to i32*
  %v3_32a73 = load i32, i32* %v2_32a73, align 4
  %v1_32a79 = call i32 @unknown_67db8(i32 %v3_32a73)
  %v0_32a7e = load i32, i32* @ebp, align 4
  %v1_32a7e = add i32 %v0_32a7e, -32
  %v2_32a7e = inttoptr i32 %v1_32a7e to i32*
  %v3_32a7e = load i32, i32* %v2_32a7e, align 4
  %v1_32a81 = add i32 %v0_32a7e, -28
  %v2_32a81 = inttoptr i32 %v1_32a81 to i32*
  %v3_32a81 = load i32, i32* %v2_32a81, align 4
  %v3_32a8f = call i32 @unknown_67de6(i32 %v3_32a81, i32 %v3_32a7e, i32 %v1_32a79)
  %v0_32a94 = load i32, i32* @ebp, align 4
  %v1_32a94 = add i32 %v0_32a94, -32
  %v2_32a94 = inttoptr i32 %v1_32a94 to i32*
  %v3_32a94 = load i32, i32* %v2_32a94, align 4
  %v1_32a9a = call i32 @unknown_67e6c(i32 %v3_32a94)
  %v1_32a9f = icmp eq i32 %v1_32a9a, 0
  %v1_32aa1 = icmp eq i1 %v1_32a9f, false
  %v5_32aa4 = icmp eq i1 %v1_32aa1, false
  br i1 %v5_32aa4, label %bb, label %dec_label_pc_32aac

bb:                                               ; preds = %dec_label_pc_32a6e
  %v1_32aa6 = call i32 @function_32b53()
  br label %dec_label_pc_32aac

dec_label_pc_32aac:                               ; preds = %bb, %dec_label_pc_32a6e
  %v0_32aac = load i32, i32* @ebp, align 4
  %v1_32aac = add i32 %v0_32aac, -28
  %v2_32aac = inttoptr i32 %v1_32aac to i32*
  %v3_32aac = load i32, i32* %v2_32aac, align 4
  %v1_32ab2 = call i32 @unknown_6801c(i32 %v3_32aac)
  ret i32 %v1_32ab2
}

define i32 @function_32ab8() local_unnamed_addr {
dec_label_pc_32ab8:
  %v0_32ab8 = load i32, i32* @eax, align 8
  ret i32 %v0_32ab8
}

define i32 @function_32ab9() local_unnamed_addr {
dec_label_pc_32ab9:
  %ebx.global-to-local = alloca i32, align 4
  %v0_32ab9 = load i32, i32* @ebp, align 4
  %v1_32ab9 = add i32 %v0_32ab9, -28
  %v2_32ab9 = inttoptr i32 %v1_32ab9 to i32*
  %v3_32ab9 = load i32, i32* %v2_32ab9, align 4
  %v1_32abf = call i32 @unknown_64870(i32 %v3_32ab9)
  %v0_32ac6 = load i32, i32* @ebp, align 4
  %v1_32ac6 = add i32 %v0_32ac6, -32
  %v2_32ac6 = inttoptr i32 %v1_32ac6 to i32*
  %v3_32ac6 = load i32, i32* %v2_32ac6, align 4
  %v1_32acc = call i32 @unknown_67fec(i32 %v3_32ac6)
  %v0_32ad9 = load i32, i32* @ebp, align 4
  %v1_32ad9 = add i32 %v0_32ad9, -28
  %v2_32ad9 = inttoptr i32 %v1_32ad9 to i32*
  %v3_32ad9 = load i32, i32* %v2_32ad9, align 4
  %v3_32adf = call i32 @unknown_67e9c(i32 %v3_32ad9, i32 %v1_32acc, i32 %v1_32abf)
  %v1_32ae4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_32ae4 = inttoptr i32 %v1_32ae4 to i32*
  store i32 %v3_32adf, i32* %v2_32ae4, align 4
  %v0_32ae6 = load i32, i32* @ebp, align 4
  %v1_32ae6 = add i32 %v0_32ae6, -28
  %v2_32ae6 = inttoptr i32 %v1_32ae6 to i32*
  %v3_32ae6 = load i32, i32* %v2_32ae6, align 4
  %v1_32aec = call i32 @unknown_679da(i32 %v3_32ae6)
  store i32 %v1_32aec, i32* %ebx.global-to-local, align 4
  %v0_32af3 = load i32, i32* @ebp, align 4
  %v1_32af3 = add i32 %v0_32af3, -28
  %v2_32af3 = inttoptr i32 %v1_32af3 to i32*
  %v3_32af3 = load i32, i32* %v2_32af3, align 4
  %v1_32af9 = call i32 @unknown_6801c(i32 %v3_32af3)
  %v1_32afe = inttoptr i32 %v1_32af9 to i32*
  %v2_32afe = load i32, i32* %v1_32afe, align 4
  %v1_32b03 = call i32 @unknown_6804c(i32 %v2_32afe)
  %v1_32b08 = load i32, i32* %ebx.global-to-local, align 4
  %v2_32b08 = inttoptr i32 %v1_32b08 to i32*
  store i32 %v1_32b03, i32* %v2_32b08, align 4
  %v0_32b0a = load i32, i32* @ebp, align 4
  %v1_32b0a = add i32 %v0_32b0a, -28
  %v2_32b0a = inttoptr i32 %v1_32b0a to i32*
  %v3_32b0a = load i32, i32* %v2_32b0a, align 4
  %v1_32b10 = call i32 @unknown_675fc(i32 %v3_32b0a)
  store i32 %v1_32b10, i32* %ebx.global-to-local, align 4
  %v0_32b17 = load i32, i32* @ebp, align 4
  %v1_32b17 = add i32 %v0_32b17, -28
  %v2_32b17 = inttoptr i32 %v1_32b17 to i32*
  %v3_32b17 = load i32, i32* %v2_32b17, align 4
  %v1_32b1d = call i32 @unknown_6801c(i32 %v3_32b17)
  %v1_32b22 = inttoptr i32 %v1_32b1d to i32*
  %v2_32b22 = load i32, i32* %v1_32b22, align 4
  %v1_32b27 = call i32 @unknown_68081(i32 %v2_32b22)
  %v1_32b2c = load i32, i32* %ebx.global-to-local, align 4
  %v2_32b2c = inttoptr i32 %v1_32b2c to i32*
  store i32 %v1_32b27, i32* %v2_32b2c, align 4
  %v0_32b2e = load i32, i32* @ebp, align 4
  %v1_32b2e = add i32 %v0_32b2e, -32
  %v2_32b2e = inttoptr i32 %v1_32b2e to i32*
  %v3_32b2e = load i32, i32* %v2_32b2e, align 4
  %v1_32b31 = add i32 %v3_32b2e, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_32b31 = inttoptr i32 %v1_32b31 to i32*
  %v3_32b31 = load i32, i32* %v2_32b31, align 4
  %v1_32b34 = add i32 %v0_32b2e, -28
  %v2_32b34 = inttoptr i32 %v1_32b34 to i32*
  %v3_32b34 = load i32, i32* %v2_32b34, align 4
  %v2_32b37 = add i32 %v3_32b34, ptrtoint (i32* @global_var_14.2373 to i32)
  %v3_32b37 = inttoptr i32 %v2_32b37 to i32*
  store i32 %v3_32b31, i32* %v3_32b37, align 4
  %v0_32b3a = call i32 @function_32b53()
  ret i32 %v0_32b3a

; uselistorder directives
  uselistorder i32 ()* @function_32b53, { 1, 0 }
  uselistorder i32 (i32)* @unknown_6801c, { 2, 1, 0 }
}

define i32 @function_32b3d() local_unnamed_addr {
dec_label_pc_32b3d:
  %eax.global-to-local = alloca i32, align 4
  %v0_32b3d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32b3d
}

define i32 @function_32b46() local_unnamed_addr {
dec_label_pc_32b46:
  %v0_32b49 = load i32, i32* @ebx, align 4
  ret i32 %v0_32b49
}

define i32 @function_32b53() local_unnamed_addr {
dec_label_pc_32b53:
  %v0_32b53 = load i32, i32* @ebp, align 4
  %v1_32b53 = add i32 %v0_32b53, -12
  %v2_32b53 = inttoptr i32 %v1_32b53 to i32*
  %v3_32b53 = load i32, i32* %v2_32b53, align 4
  %v2_32b56 = xor i32 %v3_32b53, 30
  %v3_32b56 = icmp eq i32 %v2_32b56, 0
  store i32 %v2_32b56, i32* @eax, align 8
  br i1 %v3_32b56, label %bb, label %dec_label_pc_32b5f

bb:                                               ; preds = %dec_label_pc_32b53
  %v1_32b5d = call i32 @function_32b64()
  br label %dec_label_pc_32b5f

dec_label_pc_32b5f:                               ; preds = %bb, %dec_label_pc_32b53
  %v2_32b5d = phi i32 [ %v1_32b5d, %bb ], [ %v2_32b56, %dec_label_pc_32b53 ]
  ret i32 %v2_32b5d
}

define i32 @function_32b64() local_unnamed_addr {
dec_label_pc_32b64:
  %v0_32b6a = load i32, i32* @eax, align 8
  ret i32 %v0_32b6a
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32b6c:
  %v1_32b89 = call i32 @unknown_681ce(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_32b98 = call i32 @function_32b9f()
  ret i32 %v1_32b98
}

define i32 @function_32b9f() local_unnamed_addr {
dec_label_pc_32b9f:
  %v0_32ba0 = load i32, i32* @eax, align 8
  ret i32 %v0_32ba0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ba2:
  %v10_32c01105 = icmp eq i32 %arg2, 0
  %v1_32c05106 = icmp eq i1 %v10_32c01105, false
  %v5_32c08108 = icmp eq i1 %v1_32c05106, false
  %v1_32c0a109 = icmp eq i1 %v5_32c08108, false
  br i1 %v1_32c0a109, label %dec_label_pc_32bc1, label %dec_label_pc_32c0c

dec_label_pc_32bc1:                               ; preds = %dec_label_pc_32ba2, %dec_label_pc_32bc1
  %stack_var_-36.0110 = phi i32 [ %v1_32be1, %dec_label_pc_32bc1 ], [ %arg2, %dec_label_pc_32ba2 ]
  %v1_32bc7 = call i32 @unknown_6750f(i32 %stack_var_-36.0110)
  %v2_32bd6 = call i32 @unknown_65744(i32 %arg1, i32 %v1_32bc7)
  %v1_32be1 = call i32 @unknown_674df(i32 %stack_var_-36.0110)
  %v2_32bf6 = call i32 @unknown_67c12(i32 %arg1, i32 %stack_var_-36.0110)
  %v10_32c01 = icmp eq i32 %v1_32be1, 0
  %v1_32c05 = icmp eq i1 %v10_32c01, false
  %v5_32c08 = icmp eq i1 %v1_32c05, false
  %v1_32c0a = icmp eq i1 %v5_32c08, false
  br i1 %v1_32c0a, label %dec_label_pc_32bc1, label %dec_label_pc_32c0c

dec_label_pc_32c0c:                               ; preds = %dec_label_pc_32bc1, %dec_label_pc_32ba2
  store i32 0, i32* @eax, align 8
  %v1_32c16 = call i32 @function_32c1d()
  ret i32 %v1_32c16

; uselistorder directives
  uselistorder i32 %v1_32be1, { 1, 0 }
  uselistorder i32 %stack_var_-36.0110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_32bc1, { 1, 0 }
}

define i32 @function_32c1d() local_unnamed_addr {
dec_label_pc_32c1d:
  %v0_32c1e = load i32, i32* @eax, align 8
  ret i32 %v0_32c1e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32c20:
  %v1_32c40 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_32c40 = inttoptr i32 %v1_32c40 to i32*
  %v3_32c40 = load i32, i32* %v2_32c40, align 4
  %v2_32c4d = call i32 @unknown_64b20(i32 %arg1, i32 %v3_32c40)
  store i32 %arg1, i32* @eax, align 8
  %v1_32c5f = call i32 @function_32c66()
  ret i32 %v1_32c5f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32c66() local_unnamed_addr {
dec_label_pc_32c66:
  %v0_32c67 = load i32, i32* @eax, align 8
  ret i32 %v0_32c67
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32c6a:
  %v1_32c8a = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_32c8a = inttoptr i32 %v1_32c8a to i32*
  %v3_32c8a = load i32, i32* %v2_32c8a, align 4
  %v2_32c97 = call i32 @unknown_682f6(i32 %arg1, i32 %v3_32c8a)
  store i32 %arg1, i32* @eax, align 8
  %v1_32ca9 = call i32 @function_32cb0()
  ret i32 %v1_32ca9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32cb0() local_unnamed_addr {
dec_label_pc_32cb0:
  %v0_32cb1 = load i32, i32* @eax, align 8
  ret i32 %v0_32cb1
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32cb4:
  %v1_32cd4 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_32ce1 = call i32 @unknown_68340(i32 %arg1, i32 %v1_32cd4)
  store i32 %arg1, i32* @eax, align 8
  %v1_32cf3 = call i32 @function_32cfa()
  ret i32 %v1_32cf3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32cfa() local_unnamed_addr {
dec_label_pc_32cfa:
  %v0_32cfb = load i32, i32* @eax, align 8
  ret i32 %v0_32cfb
}

define i32 @function_32cfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_32cfc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_32cfe:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v2_32d28 = call i32 @function_32d2f(i32 %tmp99)
  ret i32 %v2_32d28
}

define i32 @function_32d2f(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d2f:
  %v0_32d30 = load i32, i32* @eax, align 8
  ret i32 %v0_32d30
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISJ_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32d32:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_32d52 = inttoptr i32 %arg2 to i32*
  %v2_32d52 = load i32, i32* %v1_32d52, align 4
  store i32 %v2_32d52, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_32d63 = call i32 @function_32d6a(i32 %arg2, i32 %tmp101)
  ret i32 %v3_32d63
}

define i32 @function_32d6a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32d6a:
  %v0_32d6b = load i32, i32* @eax, align 8
  ret i32 %v0_32d6b
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEEC1EPSO_() local_unnamed_addr {
dec_label_pc_32d6c:
  %eax.global-to-local = alloca i32, align 4
  %v5_32d6c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_32d6c
}

define i32 @function_32d6e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32d6e:
  %v4_32d71 = load i32, i32* @ecx, align 4
  %v0_32d79 = load i32, i32* @ebp, align 4
  %v1_32d7c = add i32 %v0_32d79, 2
  store i32 %v1_32d7c, i32* @ebp, align 4
  %v1_32d7d = add i32 %v4_32d71, -1
  store i32 %v1_32d7d, i32* @ecx, align 4
  %v2_32d84 = add i32 %v0_32d79, -10
  %v3_32d84 = inttoptr i32 %v2_32d84 to i32*
  store i32 30, i32* %v3_32d84, align 4
  %v0_32d89 = load i32, i32* @ebp, align 4
  %v1_32d89 = add i32 %v0_32d89, -28
  %v2_32d89 = inttoptr i32 %v1_32d89 to i32*
  %v3_32d89 = load i32, i32* %v2_32d89, align 4
  %v1_32d8f = call i32 @unknown_42f82(i32 %v3_32d89)
  %v0_32d94 = load i32, i32* @ebp, align 4
  %v1_32d94 = add i32 %v0_32d94, -28
  %v2_32d94 = inttoptr i32 %v1_32d94 to i32*
  %v3_32d94 = load i32, i32* %v2_32d94, align 4
  %v1_32d97 = inttoptr i32 %v3_32d94 to i32*
  store i32 ptrtoint (%vtable_38840_type* @global_var_38840.2597 to i32), i32* %v1_32d97, align 4
  %v0_32d9d = load i32, i32* @ebp, align 4
  %v1_32d9d = add i32 %v0_32d9d, -28
  %v2_32d9d = inttoptr i32 %v1_32d9d to i32*
  %v3_32d9d = load i32, i32* %v2_32d9d, align 4
  %v1_32da0 = add i32 %v0_32d9d, -32
  %v2_32da0 = inttoptr i32 %v1_32da0 to i32*
  %v3_32da0 = load i32, i32* %v2_32da0, align 4
  %v2_32da3 = add i32 %v3_32d9d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_32da3 = inttoptr i32 %v2_32da3 to i32*
  store i32 %v3_32da0, i32* %v3_32da3, align 4
  %v0_32da6 = load i32, i32* @ebp, align 4
  %v1_32da6 = add i32 %v0_32da6, -12
  %v2_32da6 = inttoptr i32 %v1_32da6 to i32*
  %v3_32da6 = load i32, i32* %v2_32da6, align 4
  %v2_32da9 = xor i32 %v3_32da6, 30
  %v3_32da9 = icmp eq i32 %v2_32da9, 0
  store i32 %v2_32da9, i32* @eax, align 8
  br i1 %v3_32da9, label %bb, label %dec_label_pc_32db2

bb:                                               ; preds = %dec_label_pc_32d6e
  %v1_32db0 = call i32 @function_32db7()
  br label %dec_label_pc_32db2

dec_label_pc_32db2:                               ; preds = %bb, %dec_label_pc_32d6e
  %v3_32db0 = phi i32 [ %v1_32db0, %bb ], [ %v2_32da9, %dec_label_pc_32d6e ]
  ret i32 %v3_32db0
}

define i32 @function_32db7() local_unnamed_addr {
dec_label_pc_32db7:
  %v0_32db8 = load i32, i32* @eax, align 8
  ret i32 %v0_32db8
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dba:
  %v1_32dd5 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_32ddb = call i32 @unknown_5fbf2(i32 %v1_32dd5)
  ret i32 %arg1
}

define i32 @function_32dfa() local_unnamed_addr {
dec_label_pc_32dfa:
  %eax.global-to-local = alloca i32, align 4
  %v0_32dfa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32dfa
}

define i32 @function_32e06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e06:
  %v0_32e06 = load i32, i32* @ebx, align 4
  ret i32 %v0_32e06
}

define i32 @function_32e10() local_unnamed_addr {
dec_label_pc_32e10:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32e15() local_unnamed_addr {
dec_label_pc_32e15:
  %v0_32e1a = load i32, i32* @eax, align 8
  ret i32 %v0_32e1a
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e1b:
  %v1_32e36 = icmp eq i32 %arg1, 0
  br i1 %v1_32e36, label %bb, label %dec_label_pc_32e3a

bb:                                               ; preds = %dec_label_pc_32e1b
  %v2_32e38 = call i32 @function_32e4a(i32 0)
  br label %dec_label_pc_32e3a

dec_label_pc_32e3a:                               ; preds = %bb, %dec_label_pc_32e1b
  %v1_32e3d = call i32 @unknown_65bd5(i32 %arg1)
  ret i32 %v1_32e3d
}

define i32 @function_32e4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e4a:
  %v0_32e4a = load i32, i32* @ebp, align 4
  %v1_32e4a = add i32 %v0_32e4a, -12
  %v2_32e4a = inttoptr i32 %v1_32e4a to i32*
  %v3_32e4a = load i32, i32* %v2_32e4a, align 4
  %v2_32e4d = xor i32 %v3_32e4a, 30
  %v3_32e4d = icmp eq i32 %v2_32e4d, 0
  store i32 %v2_32e4d, i32* @eax, align 8
  br i1 %v3_32e4d, label %bb, label %dec_label_pc_32e56

bb:                                               ; preds = %dec_label_pc_32e4a
  %v1_32e54 = call i32 @function_32e5b()
  br label %dec_label_pc_32e56

dec_label_pc_32e56:                               ; preds = %bb, %dec_label_pc_32e4a
  %v2_32e54 = phi i32 [ %v1_32e54, %bb ], [ %v2_32e4d, %dec_label_pc_32e4a ]
  ret i32 %v2_32e54
}

define i32 @function_32e5b() local_unnamed_addr {
dec_label_pc_32e5b:
  %v0_32e60 = load i32, i32* @eax, align 8
  ret i32 %v0_32e60
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEC1EPSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e62:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_32e85 = call i32 @unknown_43078(i32 %tmp101)
  store i32 ptrtoint (%vtable_38788_type* @global_var_38788.2598 to i32), i32* %arg1, align 4
  %v2_32e99 = add i32 %tmp101, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_32e99 = inttoptr i32 %v2_32e99 to i32*
  store i32 %arg2, i32* %v3_32e99, align 4
  store i32 0, i32* @eax, align 8
  %v1_32ea6 = call i32 @function_32ead()
  ret i32 %v1_32ea6

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_32ead() local_unnamed_addr {
dec_label_pc_32ead:
  %v0_32eae = load i32, i32* @eax, align 8
  ret i32 %v0_32eae
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32eb0:
  %v1_32ecb = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_32ed1 = call i32 @unknown_5c474(i32 %v1_32ecb)
  %v1_32edc = call i32 @unknown_5c3ea(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_32eeb = call i32 @function_32f0b()
  store i32 %v1_32eeb, i32* @eax, align 8
  %v0_32eed = call i32 @function_32f06()
  ret i32 %v0_32eed

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32ef0() local_unnamed_addr {
dec_label_pc_32ef0:
  %eax.global-to-local = alloca i32, align 4
  %v0_32ef0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32ef0
}

define i32 @function_32f06() local_unnamed_addr {
dec_label_pc_32f06:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32f0b() local_unnamed_addr {
dec_label_pc_32f0b:
  %v0_32f10 = load i32, i32* @eax, align 8
  ret i32 %v0_32f10
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f11:
  ret i32 30
}

define i32 @function_32f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f28:
  %v7_32f28 = load i32, i32* @ebx, align 4
  %v8_32f28 = add i32 %v7_32f28, -611982243
  %v9_32f28 = inttoptr i32 %v8_32f28 to i8*
  store i8 -1, i8* %v9_32f28, align 1
  %v0_32f2f = load i32, i32* @ecx, align 4
  %v1_32f2f = add i32 %v0_32f2f, -1981275108
  %v2_32f2f = inttoptr i32 %v1_32f2f to i8*
  %v3_32f2f = load i8, i8* %v2_32f2f, align 1
  %v5_32f2f = trunc i32 %v0_32f2f to i8
  %v8_32f2f = add i8 %v5_32f2f, 1
  %v9_32f2f = add i8 %v8_32f2f, %v3_32f2f
  store i8 %v9_32f2f, i8* %v2_32f2f, align 1
  %v0_32f35 = load i32, i32* @eax, align 8
  %v4_32f35 = mul i32 %v0_32f35, 2
  ret i32 %v4_32f35

; uselistorder directives
  uselistorder i8 -1, { 2, 3, 4, 5, 0, 1 }
}

define i32 @function_32f3d() local_unnamed_addr {
dec_label_pc_32f3d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32f50() local_unnamed_addr {
dec_label_pc_32f50:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_32f50 = load i32, i32* %ebx.global-to-local, align 4
  %v1_32f50 = add i32 %v0_32f50, 1566258372
  %v2_32f50 = inttoptr i32 %v1_32f50 to i32*
  %v3_32f50 = load i32, i32* %v2_32f50, align 4
  %v4_32f50 = add i32 %v3_32f50, 1
  store i32 %v4_32f50, i32* %v2_32f50, align 4
  %v0_32f56 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32f56

; uselistorder directives
  uselistorder i32 1566258372, { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f58:
  ret i32 30
}

define i32 @function_32f76(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f76:
  %v0_32f78 = load i32, i32* @ebp, align 4
  %v1_32f78 = add i32 %v0_32f78, -44
  %v2_32f78 = inttoptr i32 %v1_32f78 to i32*
  %v3_32f78 = load i32, i32* %v2_32f78, align 4
  %v2_32f7e = call i32 @unknown_6861c(i32 %v3_32f78)
  store i32 %v2_32f7e, i32* @eax, align 8
  %v4_32f83 = trunc i32 %v2_32f7e to i8
  %v5_32f83 = icmp eq i8 %v4_32f83, 0
  br i1 %v5_32f83, label %bb, label %dec_label_pc_32f87

bb:                                               ; preds = %dec_label_pc_32f76
  %v1_32f85 = call i32 @function_32fab()
  br label %dec_label_pc_32f87

dec_label_pc_32f87:                               ; preds = %bb, %dec_label_pc_32f76
  %v3_32f9f = phi i32 [ %v1_32f85, %bb ], [ %v2_32f7e, %dec_label_pc_32f76 ]
  ret i32 %v3_32f9f
}

define i32 @function_32fab() local_unnamed_addr {
dec_label_pc_32fab:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32fac(i32 %arg1) local_unnamed_addr {
dec_label_pc_32fac:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_32fac = load i32, i32* @ebp, align 4
  %v1_32fac = add i32 %v0_32fac, 1
  store i32 %v1_32fac, i32* %ebp.global-to-local, align 4
  %v0_32fad = load i32, i32* @eax, align 8
  %v1_32fad = trunc i32 %v0_32fad to i8
  %v2_32fad = udiv i8 %v1_32fad, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v3_32fad = urem i8 %v1_32fad, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v4_32fad = zext i8 %v3_32fad to i32
  %v6_32fad = and i32 %v0_32fad, -65536
  %v8_32fad = zext i8 %v2_32fad to i32
  %v10_32fad = shl i32 %v8_32fad, ptrtoint (i32* @global_var_8.2379 to i32)
  %v11_32fad = or i32 %v4_32fad, %v6_32fad
  %v12_32fad = or i32 %v11_32fad, %v10_32fad
  %v1_32faf = add i32 %v12_32fad, -1
  %v9_32faf = icmp eq i32 %v1_32faf, 0
  store i1 %v9_32faf, i1* %zf.global-to-local, align 1
  store i32 %v1_32faf, i32* @eax, align 8
  %v5_32fb0 = icmp slt i32 %v12_32fad, 1
  br i1 %v5_32fb0, label %bb, label %dec_label_pc_32fb2

bb:                                               ; preds = %dec_label_pc_32fac
  %v6_32fb0 = call i32 @function_32f3d()
  store i32 %v6_32fb0, i32* %eax.global-to-local, align 8
  %v0_32fb2.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_32fb2

dec_label_pc_32fb2:                               ; preds = %bb, %dec_label_pc_32fac
  %v0_32fb3 = phi i32 [ %v6_32fb0, %bb ], [ %v1_32faf, %dec_label_pc_32fac ]
  %v0_32fb2 = phi i32 [ %v0_32fb2.pre, %bb ], [ %v1_32fac, %dec_label_pc_32fac ]
  %v1_32fb2 = add i32 %v0_32fb2, 1
  store i32 %v1_32fb2, i32* @ebp, align 4
  %v1_32fb3 = trunc i32 %v0_32fb3 to i8
  %not. = icmp ugt i8 %v1_32fb3, -118
  %v3_32fb3 = urem i8 %v1_32fb3, -117
  %v4_32fb3 = zext i8 %v3_32fb3 to i32
  %v6_32fb3 = and i32 %v0_32fb3, -65536
  %v8_32fb3 = zext i1 %not. to i32
  %v10_32fb3 = shl i32 %v8_32fb3, ptrtoint (i32* @global_var_8.2379 to i32)
  %v11_32fb3 = or i32 %v4_32fb3, %v6_32fb3
  %v12_32fb3 = or i32 %v11_32fb3, %v10_32fb3
  store i32 %v12_32fb3, i32* %eax.global-to-local, align 8
  %v13_32fb3 = icmp eq i8 %v3_32fb3, 0
  store i1 %v13_32fb3, i1* %zf.global-to-local, align 1
  %v1_32fb6 = inttoptr i32 %v12_32fb3 to i8*
  %v2_32fb6 = load i8, i8* %v1_32fb6, align 1
  %v9_32fb6 = icmp eq i8 %v2_32fb6, 0
  store i1 %v9_32fb6, i1* %zf.global-to-local, align 1
  store i8 %v2_32fb6, i8* %v1_32fb6, align 1
  %v0_32fb9 = load i32, i32* @ecx, align 4
  %v1_32fb9 = add i32 %v0_32fb9, 29360592
  %v2_32fb9 = inttoptr i32 %v1_32fb9 to i8*
  %v3_32fb9 = load i8, i8* %v2_32fb9, align 1
  %v5_32fb9 = trunc i32 %v0_32fb9 to i8
  %v6_32fb9 = add i8 %v3_32fb9, %v5_32fb9
  %v16_32fb9 = icmp eq i8 %v6_32fb9, 0
  store i1 %v16_32fb9, i1* %zf.global-to-local, align 1
  store i8 %v6_32fb9, i8* %v2_32fb9, align 1
  %v0_32fbf = load i32, i32* @ecx, align 4
  %v1_32fbf = trunc i32 %v0_32fbf to i8
  %v2_32fbf = mul i8 %v1_32fbf, 2
  %v3_32fbf = lshr i8 %v1_32fbf, ptrtoint (i32* @global_var_7.2402 to i8)
  %v4_32fbf = or i8 %v3_32fbf, %v2_32fbf
  %v5_32fbf = zext i8 %v4_32fbf to i32
  %v7_32fbf = and i32 %v0_32fbf, -256
  %v8_32fbf = or i32 %v5_32fbf, %v7_32fbf
  %v1_32fc1 = add i32 %v8_32fbf, -1
  store i32 %v1_32fc1, i32* @ecx, align 4
  %v2_32fc1 = icmp eq i32 %v1_32fc1, 0
  %v3_32fc1 = load i1, i1* %zf.global-to-local, align 1
  %v4_32fc1 = or i1 %v3_32fc1, %v2_32fc1
  br i1 %v4_32fc1, label %dec_label_pc_32fc3, label %dec_label_pc_32fc5

dec_label_pc_32fc3:                               ; preds = %dec_label_pc_32fb2
  %v6_32fc1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v6_32fc1

dec_label_pc_32fc5:                               ; preds = %dec_label_pc_32fb2
  %v1_32fc5 = add i32 %v8_32fbf, -956029837
  %v2_32fc5 = inttoptr i32 %v1_32fc5 to i32*
  %v3_32fc5 = load i32, i32* %v2_32fc5, align 4
  %v5_32fc5 = add i32 %v3_32fc5, %v1_32fc1
  store i32 %v5_32fc5, i32* %v2_32fc5, align 4
  %v0_32fcb = load i32, i32* %eax.global-to-local, align 8
  %v1_32fcb = trunc i32 %v0_32fcb to i8
  %v2_32fcb = add i8 %v1_32fcb, ptrtoint (i8* @global_var_24.2401 to i8)
  %v11_32fcb = icmp eq i8 %v2_32fcb, 0
  %v16_32fcb = zext i8 %v2_32fcb to i32
  %v18_32fcb = and i32 %v0_32fcb, -256
  %v19_32fcb = or i32 %v16_32fcb, %v18_32fcb
  store i1 %v11_32fcb, i1* %zf.global-to-local, align 1
  store i32 %v19_32fcb, i32* @eax, align 8
  %v1_32fcf = inttoptr i32 %v19_32fcb to i8*
  %v2_32fcf = load i8, i8* %v1_32fcf, align 1
  %v5_32fcf = add i8 %v2_32fcf, %v2_32fcb
  %v15_32fcf = icmp eq i8 %v5_32fcf, 0
  store i1 %v15_32fcf, i1* %zf.global-to-local, align 1
  store i8 %v5_32fcf, i8* %v1_32fcf, align 1
  %v0_32fd1 = call i32 @function_38448()
  store i32 %v0_32fd1, i32* %eax.global-to-local, align 8
  store i32 %v0_32fd1, i32* @ebx, align 4
  ret i32 %v0_32fd1

; uselistorder directives
  uselistorder i32 %v19_32fcb, { 1, 0 }
  uselistorder i32 %v1_32fc1, { 0, 2, 1 }
  uselistorder i32 %v8_32fbf, { 1, 0 }
  uselistorder i8 %v1_32fbf, { 1, 0 }
  uselistorder i8 %v2_32fb6, { 1, 0 }
  uselistorder i8 %v1_32fb3, { 1, 0 }
  uselistorder i32 %v0_32fb3, { 1, 0 }
  uselistorder i32 %v1_32faf, { 0, 2, 1 }
  uselistorder i32 %v12_32fad, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 2, 4, 0 }
}

define i32 @function_32fd9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32fd9:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32ff2(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ff2:
  %v2_32ff2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32ff2 = load i32, i32* @eax, align 8
  %v4_32ff2 = trunc i32 %v3_32ff2 to i8
  %v5_32ff2 = add i8 %v4_32ff2, %v2_32ff2
  %v21_32ff2 = inttoptr i32 %v3_32ff2 to i8*
  store i8 %v5_32ff2, i8* %v21_32ff2, align 1
  %v0_32ff4 = load i32, i32* @eax, align 8
  %v1_32ff4 = add i32 %v0_32ff4, 1
  %v0_32ff7 = load i32, i32* @ebp, align 4
  %v1_32ff7 = add i32 %v0_32ff7, -44
  %v2_32ff7 = inttoptr i32 %v1_32ff7 to i32*
  %v3_32ff7 = load i32, i32* %v2_32ff7, align 4
  %v2_32ffa = add i32 %v3_32ff7, ptrtoint (i32* @global_var_80.2540 to i32)
  %v3_32ffa = inttoptr i32 %v2_32ffa to i32*
  store i32 %v1_32ff4, i32* %v3_32ffa, align 4
  %v0_33000 = load i32, i32* @ebp, align 4
  %v1_33000 = add i32 %v0_33000, -28
  %v2_33000 = inttoptr i32 %v1_33000 to i32*
  %v3_33000 = load i32, i32* %v2_33000, align 4
  %v2_33003 = xor i32 %v3_33000, 30
  %v3_33003 = icmp eq i32 %v2_33003, 0
  store i32 %v2_33003, i32* @eax, align 8
  br i1 %v3_33003, label %bb, label %dec_label_pc_3300c

bb:                                               ; preds = %dec_label_pc_32ff2
  %v1_3300a = call i32 @function_3302b()
  store i32 %v1_3300a, i32* @eax, align 8
  br label %dec_label_pc_3300c

dec_label_pc_3300c:                               ; preds = %bb, %dec_label_pc_32ff2
  %v1_3300c = call i32 @function_33026(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_3300c

; uselistorder directives
  uselistorder i32 (i32)* @function_33026, { 1, 0 }
}

define i32 @function_33026(i32 %arg1) local_unnamed_addr {
dec_label_pc_33026:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3302b() local_unnamed_addr {
dec_label_pc_3302b:
  %v0_33032 = load i32, i32* @eax, align 8
  ret i32 %v0_33032
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE7reserveEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33034:
  %v1_33054 = add i32 %arg1, 120
  %v2_33054 = inttoptr i32 %v1_33054 to i32*
  %v3_33054 = load i32, i32* %v2_33054, align 4
  %tmp114 = icmp ult i32 %v3_33054, 10
  br i1 %tmp114, label %dec_label_pc_3305c, label %bb

bb:                                               ; preds = %dec_label_pc_33034
  %v6_3305a = call i32 @function_33080(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_3305c

dec_label_pc_3305c:                               ; preds = %dec_label_pc_33034, %bb
  %v3_33074 = phi i32 [ %v3_33054, %dec_label_pc_33034 ], [ %v6_3305a, %bb ]
  ret i32 %v3_33074

; uselistorder directives
  uselistorder i32 %v3_33054, { 1, 0 }
  uselistorder i32 10, { 0, 2, 1 }
  uselistorder label %dec_label_pc_3305c, { 1, 0 }
}

define i32 @function_33080(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33080:
  %v0_33080 = load i32, i32* @ebp, align 4
  %v1_33080 = add i32 %v0_33080, -28
  %v2_33080 = inttoptr i32 %v1_33080 to i32*
  %v3_33080 = load i32, i32* %v2_33080, align 4
  %v1_33083 = add i32 %v3_33080, 120
  %v2_33083 = inttoptr i32 %v1_33083 to i32*
  %v3_33083 = load i32, i32* %v2_33083, align 4
  store i32 %v3_33083, i32* @eax, align 8
  %v2_33086 = add i32 %v0_33080, -32
  %v3_33086 = inttoptr i32 %v2_33086 to i32*
  %v4_33086 = load i32, i32* %v3_33086, align 4
  %v10_33086 = icmp ult i32 %v3_33083, %v4_33086
  %v1_33089 = icmp eq i1 %v10_33086, false
  br i1 %v1_33089, label %bb, label %dec_label_pc_3308b

bb:                                               ; preds = %dec_label_pc_33080
  %v2_33089 = call i32 @function_330db()
  %v0_3308b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3308b

dec_label_pc_3308b:                               ; preds = %bb, %dec_label_pc_33080
  %v0_3308b = phi i32 [ %v0_3308b.pre, %bb ], [ %v0_33080, %dec_label_pc_33080 ]
  %v1_33092 = add i32 %v0_3308b, -28
  %v2_33092 = inttoptr i32 %v1_33092 to i32*
  %v3_33092 = load i32, i32* %v2_33092, align 4
  ret i32 %v3_33092
}

define i32 @function_3309c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3309c:
  %v0_3309c = load i32, i32* @ecx, align 4
  %v1_3309c = add i32 %v0_3309c, -1962662844
  %v2_3309c = inttoptr i32 %v1_3309c to i8*
  %v3_3309c = load i8, i8* %v2_3309c, align 1
  %v5_3309c = trunc i32 %v0_3309c to i8
  %v6_3309c = add i8 %v3_3309c, %v5_3309c
  store i8 %v6_3309c, i8* %v2_3309c, align 1
  %v0_330a2 = load i32, i32* @ebp, align 4
  %v1_330a2 = add i32 %v0_330a2, 1
  store i32 %v1_330a2, i32* @ebp, align 4
  %v0_330a7 = call i32 @unknown_68736()
  %v0_330ac = load i32, i32* @ebp, align 4
  %v1_330ac = add i32 %v0_330ac, -28
  %v2_330ac = inttoptr i32 %v1_330ac to i32*
  %v3_330ac = load i32, i32* %v2_330ac, align 4
  %v1_330af = add i32 %v3_330ac, 120
  %v2_330af = inttoptr i32 %v1_330af to i32*
  %v3_330af = load i32, i32* %v2_330af, align 4
  %v2_330b2 = add i32 %v0_330ac, -32
  %v3_330b2 = inttoptr i32 %v2_330b2 to i32*
  %v4_330b2 = load i32, i32* %v3_330b2, align 4
  %v10_330b2 = icmp ult i32 %v3_330af, %v4_330b2
  %v1_330b5 = icmp eq i1 %v10_330b2, false
  br i1 %v1_330b5, label %bb, label %dec_label_pc_330b7

bb:                                               ; preds = %dec_label_pc_3309c
  %v3_330b5 = call i32 @function_330dc(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_330b7

dec_label_pc_330b7:                               ; preds = %bb, %dec_label_pc_3309c
  %v3_330bf = phi i32 [ %v3_330b5, %bb ], [ %v3_330af, %dec_label_pc_3309c ]
  ret i32 %v3_330bf

; uselistorder directives
  uselistorder i32 -1962662844, { 2, 3, 1, 0 }
}

define i32 @function_330ca(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_330ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_330ca = load i32, i32* @eax, align 8
  %v2_330ca = add i32 %v0_330ca, 172
  %v16_330ca = and i32 %v2_330ca, 255
  %v18_330ca = and i32 %v0_330ca, -256
  %v19_330ca = or i32 %v16_330ca, %v18_330ca
  store i32 %v19_330ca, i32* %eax.global-to-local, align 8
  %v0_330cc = load i32, i32* @esp, align 4
  %v8_330cc = add i32 %v0_330cc, add (i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 add (i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)), i32 sub (i32 0, i32 ptrtoint (i32* @global_var_4.2376 to i32)))), i32 -20)
  %v23_330cc = inttoptr i32 %v8_330cc to i32*
  %v24_330cc = load i32, i32* @edi, align 8
  store i32 %v24_330cc, i32* %v23_330cc, align 4
  %v0_330cd = load i32, i32* %eax.global-to-local, align 8
  %v1_330cd = inttoptr i32 %v0_330cd to i8*
  %v2_330cd = load i8, i8* %v1_330cd, align 1
  %v4_330cd = trunc i32 %v0_330cd to i8
  %v5_330cd = add i8 %v2_330cd, %v4_330cd
  store i8 %v5_330cd, i8* %v1_330cd, align 1
  %v0_330cf = load i32, i32* @esp, align 4
  %v1_330cf = inttoptr i32 %v0_330cf to i32*
  store i32 ptrtoint ([24 x i8]* @global_var_6257.2603 to i32), i32* %v1_330cf, align 4
  %v2_330cf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_330cf

; uselistorder directives
  uselistorder i32 %v0_330ca, { 1, 0 }
}

define i32 @function_330db() local_unnamed_addr {
dec_label_pc_330db:
  %v0_330db = load i32, i32* @eax, align 8
  ret i32 %v0_330db
}

define i32 @function_330dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_330dc:
  %v0_330dc = load i32, i32* @ebp, align 4
  %v1_330dc = add i32 %v0_330dc, -12
  %v2_330dc = inttoptr i32 %v1_330dc to i32*
  %v3_330dc = load i32, i32* %v2_330dc, align 4
  %v2_330df = xor i32 %v3_330dc, 30
  %v3_330df = icmp eq i32 %v2_330df, 0
  store i32 %v2_330df, i32* @eax, align 8
  br i1 %v3_330df, label %bb, label %dec_label_pc_330e8

bb:                                               ; preds = %dec_label_pc_330dc
  %v1_330e6 = call i32 @function_330ed()
  br label %dec_label_pc_330e8

dec_label_pc_330e8:                               ; preds = %bb, %dec_label_pc_330dc
  %v2_330e6 = phi i32 [ %v1_330e6, %bb ], [ %v2_330df, %dec_label_pc_330dc ]
  ret i32 %v2_330e6
}

define i32 @function_330ed() local_unnamed_addr {
dec_label_pc_330ed:
  %v0_330ee = load i32, i32* @eax, align 8
  ret i32 %v0_330ee
}

define i32 @_ZNK5boost8optionalISsEntEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_330f0:
  %v1_3310d = call i32 @unknown_51790(i32 %arg1)
  %v1_33112 = xor i32 %v1_3310d, 1
  store i32 %v1_33112, i32* @eax, align 8
  %v1_3311f = call i32 @function_33126()
  ret i32 %v1_3311f
}

define i32 @function_33126() local_unnamed_addr {
dec_label_pc_33126:
  %v0_33127 = load i32, i32* @eax, align 8
  ret i32 %v0_33127
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invokerclERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33128:
  ret i32 %arg1
}

define i32 @function_33168(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33168:
  %v0_33168 = load i32, i32* @eax, align 8
  %v11_33168 = and i32 %v0_33168, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_3316d = call i32 @unknown_68950(i32 %v11_33168)
  %v0_33175 = load i32, i32* @ebp, align 4
  %v1_33175 = add i32 %v0_33175, -28
  %v2_33175 = inttoptr i32 %v1_33175 to i32*
  %v3_33175 = load i32, i32* %v2_33175, align 4
  store i32 %v3_33175, i32* @eax, align 8
  %v1_33178 = add i32 %v0_33175, -12
  %v2_33178 = inttoptr i32 %v1_33178 to i32*
  %v3_33178 = load i32, i32* %v2_33178, align 4
  %v3_3317b = icmp eq i32 %v3_33178, 30
  br i1 %v3_3317b, label %bb, label %dec_label_pc_33184

bb:                                               ; preds = %dec_label_pc_33168
  %v1_33182 = call i32 @function_33189()
  br label %dec_label_pc_33184

dec_label_pc_33184:                               ; preds = %bb, %dec_label_pc_33168
  %v2_33182 = phi i32 [ %v1_33182, %bb ], [ %v3_33175, %dec_label_pc_33168 ]
  ret i32 %v2_33182
}

define i32 @function_33189() local_unnamed_addr {
dec_label_pc_33189:
  %v0_3318a = load i32, i32* @eax, align 8
  ret i32 %v0_3318a
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE5resetERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3318e:
  ret i32 %arg1
}

define i32 @function_331b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_331b8:
  %v0_331b8 = call i32 @unknown_60534()
  %v0_331bd = load i32, i32* @ebp, align 4
  %v1_331bd = add i32 %v0_331bd, -12
  %v2_331bd = inttoptr i32 %v1_331bd to i32*
  %v3_331bd = load i32, i32* %v2_331bd, align 4
  %v2_331c0 = xor i32 %v3_331bd, 30
  %v3_331c0 = icmp eq i32 %v2_331c0, 0
  store i32 %v2_331c0, i32* @eax, align 8
  br i1 %v3_331c0, label %bb, label %dec_label_pc_331c9

bb:                                               ; preds = %dec_label_pc_331b8
  %v1_331c7 = call i32 @function_331ce()
  br label %dec_label_pc_331c9

dec_label_pc_331c9:                               ; preds = %bb, %dec_label_pc_331b8
  %v3_331c7 = phi i32 [ %v1_331c7, %bb ], [ %v2_331c0, %dec_label_pc_331b8 ]
  ret i32 %v3_331c7
}

define i32 @function_331ce() local_unnamed_addr {
dec_label_pc_331ce:
  %v0_331cf = load i32, i32* @eax, align 8
  ret i32 %v0_331cf
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE5resetEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_331d0:
  %v1_331ed = call i32 @unknown_5182c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_331fc = call i32 @function_33203()
  ret i32 %v1_331fc
}

define i32 @function_33203() local_unnamed_addr {
dec_label_pc_33203:
  %v0_33204 = load i32, i32* @eax, align 8
  ret i32 %v0_33204
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8max_sizeEv() local_unnamed_addr {
dec_label_pc_33206:
  %eax.global-to-local = alloca i32, align 4
  %v5_33206 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_33206
}

define i32 @function_33208(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33208:
  %v0_3320b = load i32, i32* @ebx, align 4
  %v1_3320b = add i32 %v0_3320b, 1166608453
  %v2_3320b = inttoptr i32 %v1_3320b to i8*
  %v3_3320b = load i8, i8* %v2_3320b, align 1
  %v4_3320b = load i32, i32* @ecx, align 4
  %v5_3320b = trunc i32 %v4_3320b to i8
  %v6_3320b = sub i8 %v3_3320b, %v5_3320b
  store i8 %v6_3320b, i8* %v2_3320b, align 1
  %v1_33218 = load i32, i32* @ebp, align 4
  %v2_33218 = add i32 %v1_33218, -12
  %v3_33218 = inttoptr i32 %v2_33218 to i32*
  store i32 30, i32* %v3_33218, align 4
  store i32 178956970, i32* @eax, align 8
  %v0_33222 = load i32, i32* @ebp, align 4
  %v1_33222 = add i32 %v0_33222, -12
  %v2_33222 = inttoptr i32 %v1_33222 to i32*
  %v3_33222 = load i32, i32* %v2_33222, align 4
  %v3_33225 = icmp eq i32 %v3_33222, 30
  br i1 %v3_33225, label %bb, label %dec_label_pc_3322e

bb:                                               ; preds = %dec_label_pc_33208
  %v1_3322c = call i32 @function_33233()
  br label %dec_label_pc_3322e

dec_label_pc_3322e:                               ; preds = %bb, %dec_label_pc_33208
  %v2_3322c = phi i32 [ %v1_3322c, %bb ], [ 178956970, %dec_label_pc_33208 ]
  ret i32 %v2_3322c
}

define i32 @function_33233() local_unnamed_addr {
dec_label_pc_33233:
  %v0_33234 = load i32, i32* @eax, align 8
  ret i32 %v0_33234
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSt6vectorISsSaISsEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33236:
  store i32 134217727, i32* @eax, align 8
  %v2_3325c = call i32 @function_33263(i32 %arg1)
  ret i32 %v2_3325c
}

define i32 @function_33263(i32 %arg1) local_unnamed_addr {
dec_label_pc_33263:
  %v0_33264 = load i32, i32* @eax, align 8
  ret i32 %v0_33264
}

define i32 @_ZSt6fill_nIPxjxET_S1_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33265:
  %v1_3328e = call i32 @unknown_5d38a(i32 %arg1)
  %v3_332a4 = call i32 @unknown_68b01(i32 %v1_3328e, i32 %arg2, i32 %arg3)
  store i32 %v3_332a4, i32* @eax, align 8
  %v1_332b3 = call i32 @function_332ba()
  ret i32 %v1_332b3
}

define i32 @function_332ba() local_unnamed_addr {
dec_label_pc_332ba:
  %v0_332bb = load i32, i32* @eax, align 8
  ret i32 %v0_332bb
}

define i32 @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEixEvT_T0_S8_T1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_332bc:
  %v1_332ef = add i32 %arg2, -1
  %tmp111 = icmp slt i32 %v1_332ef, 0
  %v2_332f4 = zext i1 %tmp111 to i32
  %v2_332f7 = add i32 %v2_332f4, %v1_332ef
  %v2_332f9 = sdiv i32 %v2_332f7, 2
  ret i32 %v2_332f9

; uselistorder directives
  uselistorder i32 %v1_332ef, { 1, 0 }
}

define i32 @function_33328() local_unnamed_addr {
dec_label_pc_33328:
  %eax.global-to-local = alloca i32, align 4
  %v0_33328 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33328
}

define i32 @function_33336(i32 %arg1) local_unnamed_addr {
dec_label_pc_33336:
  %edx.global-to-local = alloca i32, align 4
  %v0_33336 = load i32, i32* @edx, align 8
  %v0_3333a = load i32, i32* @eax, align 8
  %v2_3333d = call i32 @unknown_546cc(i32 %v0_3333a, i32 %v0_33336)
  %v0_33345 = load i32, i32* @ebp, align 4
  %v1_33345 = add i32 %v0_33345, -24
  %v1_3334b = call i32 @unknown_4f7e8(i32 %v1_33345)
  %v1_33350 = add i32 %v1_3334b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_33350 = inttoptr i32 %v1_33350 to i32*
  %v3_33350 = load i32, i32* %v2_33350, align 4
  store i32 %v3_33350, i32* %edx.global-to-local, align 8
  %v1_33353 = inttoptr i32 %v1_3334b to i32*
  %v2_33353 = load i32, i32* %v1_33353, align 4
  %v1_33355 = load i32, i32* @ebx, align 4
  %v2_33355 = inttoptr i32 %v1_33355 to i32*
  store i32 %v2_33353, i32* %v2_33355, align 4
  %v0_33357 = load i32, i32* %edx.global-to-local, align 8
  %v1_33357 = load i32, i32* @ebx, align 4
  %v2_33357 = add i32 %v1_33357, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_33357 = inttoptr i32 %v2_33357 to i32*
  store i32 %v0_33357, i32* %v3_33357, align 4
  %v0_3335a = load i32, i32* @ebp, align 4
  %v1_3335a = add i32 %v0_3335a, -32
  %v2_3335a = inttoptr i32 %v1_3335a to i32*
  %v3_3335a = load i32, i32* %v2_3335a, align 4
  %v2_3335d = add i32 %v0_3335a, -48
  %v3_3335d = inttoptr i32 %v2_3335d to i32*
  store i32 %v3_3335a, i32* %v3_3335d, align 4
  %v0_33360 = load i32, i32* @ebp, align 4
  %v1_33360 = add i32 %v0_33360, -48
  %v2_33360 = inttoptr i32 %v1_33360 to i32*
  %v3_33360 = load i32, i32* %v2_33360, align 4
  %v1_33363 = add i32 %v3_33360, -1
  %tmp7 = icmp slt i32 %v1_33363, 0
  %v2_33368 = zext i1 %tmp7 to i32
  store i32 %v2_33368, i32* %edx.global-to-local, align 8
  %v2_3336b = add i32 %v2_33368, %v1_33363
  %v2_3336d = sdiv i32 %v2_3336b, 2
  %v2_3336f = add i32 %v0_33360, -32
  %v3_3336f = inttoptr i32 %v2_3336f to i32*
  store i32 %v2_3336d, i32* %v3_3336f, align 4
  %v0_33372 = load i32, i32* @ebp, align 4
  %v1_33372 = add i32 %v0_33372, -48
  %v2_33372 = inttoptr i32 %v1_33372 to i32*
  %v3_33372 = load i32, i32* %v2_33372, align 4
  %v2_33375 = add i32 %v0_33372, -52
  %v3_33375 = inttoptr i32 %v2_33375 to i32*
  %v4_33375 = load i32, i32* %v3_33375, align 4
  %v7_33378 = icmp sgt i32 %v3_33372, %v4_33375
  br i1 %v7_33378, label %dec_label_pc_3337a, label %bb

bb:                                               ; preds = %dec_label_pc_33336
  %v8_33378 = call i32 @function_333bc()
  %v0_3337a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3337a

dec_label_pc_3337a:                               ; preds = %dec_label_pc_33336, %bb
  %v0_3337a = phi i32 [ %v0_33372, %dec_label_pc_33336 ], [ %v0_3337a.pre, %bb ]
  %v1_3337a = add i32 %v0_3337a, -28
  %v1_33384 = add i32 %v0_3337a, -44
  store i32 %v1_33384, i32* %edx.global-to-local, align 8
  ret i32 %v1_3337a

; uselistorder directives
  uselistorder i32 %v0_3337a, { 1, 0 }
  uselistorder i32 %v2_33368, { 1, 0 }
  uselistorder i32 %v1_33363, { 1, 0 }
  uselistorder i32 -52, { 42, 43, 44, 36, 37, 38, 49, 52, 53, 54, 55, 45, 46, 47, 48, 31, 0, 1, 32, 40, 12, 2, 58, 3, 13, 4, 5, 50, 41, 6, 39, 7, 51, 8, 9, 10, 60, 33, 34, 56, 57, 59, 35, 11, 14, 17, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 30 }
  uselistorder label %dec_label_pc_3337a, { 1, 0 }
}

define i32 @function_3338d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3338d:
  %v0_33396 = load i32, i32* @ebp, align 4
  %v1_33396 = add i32 %v0_33396, -28
  %v1_3339c = call i32 @unknown_4f7e8(i32 %v1_33396)
  %v1_333a1 = add i32 %v1_3339c, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_333a1 = inttoptr i32 %v1_333a1 to i32*
  %v3_333a1 = load i32, i32* %v2_333a1, align 4
  %v1_333a4 = inttoptr i32 %v1_3339c to i32*
  %v2_333a4 = load i32, i32* %v1_333a4, align 4
  %v1_333a6 = load i32, i32* @ebp, align 4
  %v2_333a6 = add i32 %v1_333a6, -60
  %v3_333a6 = inttoptr i32 %v2_333a6 to i32*
  %v4_333a6 = load i32, i32* %v3_333a6, align 4
  %v8_333a9 = icmp sgt i32 %v3_333a1, %v4_333a6
  br i1 %v8_333a9, label %bb, label %dec_label_pc_333ab

bb:                                               ; preds = %dec_label_pc_3338d
  %v9_333a9 = call i32 @function_333bc()
  %v0_333ab.pre = load i32, i32* @edx, align 8
  %v1_333ab.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_333ab

dec_label_pc_333ab:                               ; preds = %bb, %dec_label_pc_3338d
  %v0_333b0 = phi i32 [ %v9_333a9, %bb ], [ %v2_333a4, %dec_label_pc_3338d ]
  %v1_333b0 = phi i32 [ %v1_333ab.pre, %bb ], [ %v1_333a6, %dec_label_pc_3338d ]
  %v0_333ab = phi i32 [ %v0_333ab.pre, %bb ], [ %v3_333a1, %dec_label_pc_3338d ]
  %v2_333ab = add i32 %v1_333b0, -60
  %v3_333ab = inttoptr i32 %v2_333ab to i32*
  %v4_333ab = load i32, i32* %v3_333ab, align 4
  %v5_333ae = icmp slt i32 %v0_333ab, %v4_333ab
  br i1 %v5_333ae, label %dec_label_pc_333b5, label %dec_label_pc_333b0

dec_label_pc_333b0:                               ; preds = %dec_label_pc_333ab
  %v2_333b0 = add i32 %v1_333b0, -64
  %v3_333b0 = inttoptr i32 %v2_333b0 to i32*
  %v4_333b0 = load i32, i32* %v3_333b0, align 4
  %v10_333b0 = icmp ult i32 %v0_333b0, %v4_333b0
  %v1_333b3 = icmp eq i1 %v10_333b0, false
  br i1 %v1_333b3, label %bb9, label %dec_label_pc_333b5

bb9:                                              ; preds = %dec_label_pc_333b0
  %v2_333b3 = call i32 @function_333bc()
  br label %dec_label_pc_333b5

dec_label_pc_333b5:                               ; preds = %bb9, %dec_label_pc_333b0, %dec_label_pc_333ab
  ret i32 1

; uselistorder directives
  uselistorder i32 ()* @function_333bc, { 2, 1, 0 }
}

define i32 @function_333bc() local_unnamed_addr {
dec_label_pc_333bc:
  %v0_333c9 = load i32, i32* @ebp, align 4
  %v1_333c9 = add i32 %v0_333c9, -16
  %v1_333d3 = add i32 %v0_333c9, -44
  %v2_333dd = call i32 @unknown_546cc(i32 %v1_333c9, i32 %v1_333d3)
  %v0_333e5 = load i32, i32* @ebp, align 4
  %v1_333e5 = add i32 %v0_333e5, -16
  %v1_333eb = call i32 @unknown_4f7e8(i32 %v1_333e5)
  store i32 %v1_333eb, i32* @ecx, align 4
  %v0_333f2 = load i32, i32* @ebp, align 4
  %v1_333f2 = add i32 %v0_333f2, -64
  %v2_333f2 = inttoptr i32 %v1_333f2 to i32*
  %v3_333f2 = load i32, i32* %v2_333f2, align 4
  %v1_333f5 = add i32 %v0_333f2, -60
  %v2_333f5 = inttoptr i32 %v1_333f5 to i32*
  %v3_333f5 = load i32, i32* %v2_333f5, align 4
  store i32 %v3_333f5, i32* @edx, align 8
  %v2_333f8 = inttoptr i32 %v1_333eb to i32*
  store i32 %v3_333f2, i32* %v2_333f8, align 4
  %v0_333fa = load i32, i32* @edx, align 8
  %v1_333fa = load i32, i32* @ecx, align 4
  %v2_333fa = add i32 %v1_333fa, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_333fa = inttoptr i32 %v2_333fa to i32*
  store i32 %v0_333fa, i32* %v3_333fa, align 4
  %v0_333fd = load i32, i32* @ebp, align 4
  %v1_333fd = add i32 %v0_333fd, -12
  %v2_333fd = inttoptr i32 %v1_333fd to i32*
  %v3_333fd = load i32, i32* %v2_333fd, align 4
  %v2_33400 = xor i32 %v3_333fd, 30
  %v3_33400 = icmp eq i32 %v2_33400, 0
  store i32 %v2_33400, i32* @eax, align 8
  br i1 %v3_33400, label %bb, label %dec_label_pc_33409

bb:                                               ; preds = %dec_label_pc_333bc
  %v1_33407 = call i32 @function_3340e()
  br label %dec_label_pc_33409

dec_label_pc_33409:                               ; preds = %bb, %dec_label_pc_333bc
  %v3_33407 = phi i32 [ %v1_33407, %bb ], [ %v2_33400, %dec_label_pc_333bc ]
  ret i32 %v3_33407

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4f7e8, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @unknown_546cc, { 1, 0 }
}

define i32 @function_3340e() local_unnamed_addr {
dec_label_pc_3340e:
  %v0_3340e = load i32, i32* @ebp, align 4
  %v1_3340e = add i32 %v0_3340e, -4
  %v2_3340e = inttoptr i32 %v1_3340e to i32*
  %v3_3340e = load i32, i32* %v2_3340e, align 4
  store i32 %v3_3340e, i32* @ebx, align 4
  %v0_33412 = load i32, i32* @eax, align 8
  ret i32 %v0_33412
}

define i32 @_ZSt4swapIxEvRT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33413:
  ret i32 30
}

define i32 @function_3342d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3342d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_33430 = load i32, i32* @ebp, align 4
  %v1_33430 = add i32 %v0_33430, -28
  %v2_33430 = inttoptr i32 %v1_33430 to i32*
  %v3_33430 = load i32, i32* %v2_33430, align 4
  store i32 %v3_33430, i32* %eax.global-to-local, align 8
  %v1_33433 = add i32 %v3_33430, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_33433 = inttoptr i32 %v1_33433 to i32*
  %v3_33433 = load i32, i32* %v2_33433, align 4
  store i32 %v3_33433, i32* %edx.global-to-local, align 8
  %v1_33436 = inttoptr i32 %v3_33430 to i32*
  %v2_33436 = load i32, i32* %v1_33436, align 4
  store i32 %v2_33436, i32* %eax.global-to-local, align 8
  %v2_33438 = add i32 %v0_33430, -24
  %v3_33438 = inttoptr i32 %v2_33438 to i32*
  store i32 %v2_33436, i32* %v3_33438, align 4
  %v0_3343b = load i32, i32* %edx.global-to-local, align 8
  %v1_3343b = load i32, i32* @ebp, align 4
  %v2_3343b = add i32 %v1_3343b, -20
  %v3_3343b = inttoptr i32 %v2_3343b to i32*
  store i32 %v0_3343b, i32* %v3_3343b, align 4
  %v0_3343e = load i32, i32* @ebp, align 4
  %v1_3343e = add i32 %v0_3343e, -32
  %v2_3343e = inttoptr i32 %v1_3343e to i32*
  %v3_3343e = load i32, i32* %v2_3343e, align 4
  store i32 %v3_3343e, i32* %eax.global-to-local, align 8
  %v1_33441 = add i32 %v3_3343e, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_33441 = inttoptr i32 %v1_33441 to i32*
  %v3_33441 = load i32, i32* %v2_33441, align 4
  store i32 %v3_33441, i32* %edx.global-to-local, align 8
  %v1_33444 = inttoptr i32 %v3_3343e to i32*
  %v2_33444 = load i32, i32* %v1_33444, align 4
  store i32 %v2_33444, i32* %eax.global-to-local, align 8
  %v1_33446 = add i32 %v0_3343e, -28
  %v2_33446 = inttoptr i32 %v1_33446 to i32*
  %v3_33446 = load i32, i32* %v2_33446, align 4
  store i32 %v3_33446, i32* %ecx.global-to-local, align 4
  %v2_33449 = inttoptr i32 %v3_33446 to i32*
  store i32 %v2_33444, i32* %v2_33449, align 4
  %v0_3344b = load i32, i32* %edx.global-to-local, align 8
  %v1_3344b = load i32, i32* %ecx.global-to-local, align 4
  %v2_3344b = add i32 %v1_3344b, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_3344b = inttoptr i32 %v2_3344b to i32*
  store i32 %v0_3344b, i32* %v3_3344b, align 4
  %v0_3344e = load i32, i32* @ebp, align 4
  %v1_3344e = add i32 %v0_3344e, -32
  %v2_3344e = inttoptr i32 %v1_3344e to i32*
  %v3_3344e = load i32, i32* %v2_3344e, align 4
  store i32 %v3_3344e, i32* @ecx, align 4
  %v1_33451 = add i32 %v0_3344e, -24
  %v2_33451 = inttoptr i32 %v1_33451 to i32*
  %v3_33451 = load i32, i32* %v2_33451, align 4
  store i32 %v3_33451, i32* %eax.global-to-local, align 8
  %v1_33454 = add i32 %v0_3344e, -20
  %v2_33454 = inttoptr i32 %v1_33454 to i32*
  %v3_33454 = load i32, i32* %v2_33454, align 4
  store i32 %v3_33454, i32* %edx.global-to-local, align 8
  %v2_33457 = inttoptr i32 %v3_3344e to i32*
  store i32 %v3_33451, i32* %v2_33457, align 4
  %v3_33457 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_33457
}

define i32 @function_3345a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3345a:
  %v0_3345a = load i32, i32* @ecx, align 4
  %v0_3345b = load i32, i32* @eax, align 8
  %v2_3345b = add i32 %v0_3345b, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v16_3345b = urem i32 %v2_3345b, 256
  %v18_3345b = and i32 %v0_3345b, -256
  %v19_3345b = or i32 %v16_3345b, %v18_3345b
  %v0_3345d = load i32, i32* @ebp, align 4
  %v1_3345d = add i32 %v0_3345d, 1
  store i32 %v1_3345d, i32* @ebp, align 4
  %v2_3345f = xor i32 %v19_3345b, 30
  %v3_3345f = icmp eq i32 %v2_3345f, 0
  store i32 %v2_3345f, i32* @eax, align 8
  br i1 %v3_3345f, label %bb, label %dec_label_pc_33468

bb:                                               ; preds = %dec_label_pc_3345a
  %v2_33466 = call i32 @function_3346d(i32 %v0_3345a)
  br label %dec_label_pc_33468

dec_label_pc_33468:                               ; preds = %bb, %dec_label_pc_3345a
  %v3_33466 = phi i32 [ %v2_33466, %bb ], [ %v2_3345f, %dec_label_pc_3345a ]
  ret i32 %v3_33466

; uselistorder directives
  uselistorder i32 %v0_3345b, { 1, 0 }
}

define i32 @function_3346d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3346d:
  %v0_3346e = load i32, i32* @eax, align 8
  ret i32 %v0_3346e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33470:
  ret i32 0
}

define i32 @function_33487(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33487:
  %v0_33487 = load i32, i32* @ebp, align 4
  %v1_33487 = add i32 %v0_33487, -28
  %v2_33487 = inttoptr i32 %v1_33487 to i32*
  %v3_33487 = load i32, i32* %v2_33487, align 4
  %v1_3348a = add i32 %v3_33487, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3348a = inttoptr i32 %v1_3348a to i32*
  %v3_3348a = load i32, i32* %v2_3348a, align 4
  store i32 %v3_3348a, i32* @eax, align 8
  %v1_3348d = add i32 %v0_33487, -12
  %v2_3348d = inttoptr i32 %v1_3348d to i32*
  %v3_3348d = load i32, i32* %v2_3348d, align 4
  %v3_33490 = icmp eq i32 %v3_3348d, 30
  br i1 %v3_33490, label %bb, label %dec_label_pc_33499

bb:                                               ; preds = %dec_label_pc_33487
  %v1_33497 = call i32 @function_3349e()
  br label %dec_label_pc_33499

dec_label_pc_33499:                               ; preds = %bb, %dec_label_pc_33487
  %v2_33497 = phi i32 [ %v1_33497, %bb ], [ %v3_3348a, %dec_label_pc_33487 ]
  ret i32 %v2_33497
}

define i32 @function_3349e() local_unnamed_addr {
dec_label_pc_3349e:
  %v0_3349f = load i32, i32* @eax, align 8
  ret i32 %v0_3349f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_M_endEv() local_unnamed_addr {
dec_label_pc_334a0:
  %eax.global-to-local = alloca i32, align 4
  %v2_334a1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_334a1
}

define i32 @function_334a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_334a4:
  %v0_334a4 = load i32, i32* @eax, align 8
  ret i32 %v0_334a4
}

define i32 @function_334a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_334a7:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_334a7 = load i32, i32* @ebp, align 4
  %v1_334a7 = add i32 %v0_334a7, 1
  store i32 %v1_334a7, i32* @ebp, align 4
  %v0_334a8 = load i32, i32* @ecx, align 4
  %v1_334a8 = add i32 %v0_334a8, -1587157947
  %v2_334a8 = inttoptr i32 %v1_334a8 to i8*
  %v3_334a8 = load i8, i8* %v2_334a8, align 1
  %v5_334a8 = trunc i32 %v0_334a8 to i8
  %v6_334a8 = or i8 %v3_334a8, %v5_334a8
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_334a8, i8* %v2_334a8, align 1
  %v0_334ae = load i32, i32* @eax, align 8
  %v1_334ae = trunc i32 %v0_334ae to i8
  %v2_334ae = load i1, i1* %cf.global-to-local, align 1
  %v3_334ae = zext i1 %v2_334ae to i8
  %v4_334ae = add i8 %v3_334ae, %v1_334ae
  %v19_334ae = icmp ule i8 %v4_334ae, %v1_334ae
  %v21_334ae = icmp eq i1 %v2_334ae, %v19_334ae
  store i1 %v21_334ae, i1* %cf.global-to-local, align 1
  %v22_334ae = zext i8 %v4_334ae to i32
  %v24_334ae = and i32 %v0_334ae, -256
  %v25_334ae = or i32 %v22_334ae, %v24_334ae
  store i32 %v25_334ae, i32* %eax.global-to-local, align 8
  %v1_334b0 = inttoptr i32 %v25_334ae to i8*
  %v2_334b0 = load i8, i8* %v1_334b0, align 1
  %v5_334b0 = add i8 %v2_334b0, %v4_334ae
  store i8 %v5_334b0, i8* %v1_334b0, align 1
  %v0_334b2 = load i32, i32* %eax.global-to-local, align 8
  %v1_334b2 = load i32, i32* @ebp, align 4
  %v2_334b2 = add i32 %v1_334b2, -12
  %v3_334b2 = inttoptr i32 %v2_334b2 to i32*
  store i32 %v0_334b2, i32* %v3_334b2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_334b7 = load i32, i32* @ebp, align 4
  %v1_334b7 = add i32 %v0_334b7, -28
  %v2_334b7 = inttoptr i32 %v1_334b7 to i32*
  %v3_334b7 = load i32, i32* %v2_334b7, align 4
  %v1_334ba = add i32 %v3_334b7, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_334ba, i32* @eax, align 8
  %v1_334bd = add i32 %v0_334b7, -12
  %v2_334bd = inttoptr i32 %v1_334bd to i32*
  %v3_334bd = load i32, i32* %v2_334bd, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_334c0 = icmp eq i32 %v3_334bd, 30
  br i1 %v3_334c0, label %bb, label %dec_label_pc_334c9

bb:                                               ; preds = %dec_label_pc_334a7
  %v1_334c7 = call i32 @function_334ce()
  store i32 %v1_334c7, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_334c9

dec_label_pc_334c9:                               ; preds = %bb, %dec_label_pc_334a7
  %v2_334c7 = phi i32 [ %v1_334c7, %bb ], [ %v1_334ba, %dec_label_pc_334a7 ]
  ret i32 %v2_334c7

; uselistorder directives
  uselistorder i8 %v4_334ae, { 0, 2, 1 }
  uselistorder i8 %v1_334ae, { 1, 0 }
}

define i32 @function_334ce() local_unnamed_addr {
dec_label_pc_334ce:
  %v0_334cf = load i32, i32* @eax, align 8
  ret i32 %v0_334cf
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_() local_unnamed_addr {
dec_label_pc_334d0:
  %eax.global-to-local = alloca i32, align 4
  %v5_334d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_334d0
}

define i32 @function_334d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_334d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_334d5 = load i32, i32* @eax, align 8
  %v1_334d5 = add i32 %v0_334d5, -1
  store i32 %v1_334d5, i32* %eax.global-to-local, align 8
  %v0_334d6 = load i32, i32* @ebp, align 4
  %v1_334d6 = add i32 %v0_334d6, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_334d6 = inttoptr i32 %v1_334d6 to i32*
  %v3_334d6 = load i32, i32* %v2_334d6, align 4
  store i32 %v3_334d6, i32* %eax.global-to-local, align 8
  %v2_334d9 = add i32 %v0_334d6, -28
  %v3_334d9 = inttoptr i32 %v2_334d9 to i32*
  store i32 %v3_334d6, i32* %v3_334d9, align 4
  %v0_334dc = load i32, i32* @ebp, align 4
  %v1_334dc = add i32 %v0_334dc, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_334dc = inttoptr i32 %v1_334dc to i32*
  %v3_334dc = load i32, i32* %v2_334dc, align 4
  store i32 %v3_334dc, i32* %eax.global-to-local, align 8
  %v2_334df = add i32 %v0_334dc, -32
  %v3_334df = inttoptr i32 %v2_334df to i32*
  store i32 %v3_334dc, i32* %v3_334df, align 4
  %v0_334e2 = load i32, i32* @ebp, align 4
  %v1_334e2 = add i32 %v0_334e2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_334e2 = inttoptr i32 %v1_334e2 to i32*
  %v3_334e2 = load i32, i32* %v2_334e2, align 4
  store i32 %v3_334e2, i32* %eax.global-to-local, align 8
  %v2_334e5 = add i32 %v0_334e2, -36
  %v3_334e5 = inttoptr i32 %v2_334e5 to i32*
  store i32 %v3_334e2, i32* %v3_334e5, align 4
  %v0_334e8 = load i32, i32* @ebp, align 4
  %v1_334e8 = add i32 %v0_334e8, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_334e8 = inttoptr i32 %v1_334e8 to i32*
  %v3_334e8 = load i32, i32* %v2_334e8, align 4
  store i32 %v3_334e8, i32* %eax.global-to-local, align 8
  %v2_334eb = add i32 %v0_334e8, -40
  %v3_334eb = inttoptr i32 %v2_334eb to i32*
  store i32 %v3_334e8, i32* %v3_334eb, align 4
  %v0_334ee = load i32, i32* @ebp, align 4
  %v1_334ee = add i32 %v0_334ee, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_334ee = inttoptr i32 %v1_334ee to i32*
  %v3_334ee = load i32, i32* %v2_334ee, align 4
  %v2_334f1 = add i32 %v0_334ee, -44
  %v3_334f1 = inttoptr i32 %v2_334f1 to i32*
  store i32 %v3_334ee, i32* %v3_334f1, align 4
  %v1_334fa = load i32, i32* @ebp, align 4
  %v2_334fa = add i32 %v1_334fa, -12
  %v3_334fa = inttoptr i32 %v2_334fa to i32*
  store i32 30, i32* %v3_334fa, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3354f6 = load i32, i32* @ebp, align 4
  %v1_3354f7 = add i32 %v0_3354f6, -36
  %v2_3354f8 = inttoptr i32 %v1_3354f7 to i32*
  %v3_3354f9 = load i32, i32* %v2_3354f8, align 4
  %v10_3354f10 = icmp eq i32 %v3_3354f9, 0
  %v1_3355311 = icmp eq i1 %v10_3354f10, false
  %v2_3355312 = zext i1 %v1_3355311 to i32
  store i32 %v2_3355312, i32* %eax.global-to-local, align 8
  %v5_3355613 = icmp eq i1 %v1_3355311, false
  %v1_3355814 = icmp eq i1 %v5_3355613, false
  br i1 %v1_3355814, label %dec_label_pc_33501, label %dec_label_pc_3355a

dec_label_pc_33501:                               ; preds = %dec_label_pc_334d2, %dec_label_pc_3354f.backedge
  %v2_3354f15 = phi i32* [ %v2_3354f, %dec_label_pc_3354f.backedge ], [ %v2_3354f8, %dec_label_pc_334d2 ]
  %v3_33501 = load i32, i32* %v2_3354f15, align 4
  store i32 %v3_33501, i32* %eax.global-to-local, align 8
  %v1_33507 = call i32 @unknown_68ddc(i32 %v3_33501)
  store i32 %v1_33507, i32* %eax.global-to-local, align 8
  %v0_3350e = load i32, i32* @ebp, align 4
  %v1_3350e = add i32 %v0_3350e, -32
  %v2_3350e = inttoptr i32 %v1_3350e to i32*
  %v3_3350e = load i32, i32* %v2_3350e, align 4
  store i32 %v3_3350e, i32* %eax.global-to-local, align 8
  %v1_33511 = add i32 %v0_3350e, -44
  %v2_33511 = inttoptr i32 %v1_33511 to i32*
  %v3_33511 = load i32, i32* %v2_33511, align 4
  store i32 %v3_33511, i32* @ecx, align 4
  %v3_3351f = call i32 @unknown_627e6(i32 %v3_3350e, i32 %v1_33507, i32 %v3_33511)
  %v1_33524 = xor i32 %v3_3351f, 1
  %v4_33524 = trunc i32 %v1_33524 to i8
  store i32 %v1_33524, i32* %eax.global-to-local, align 8
  %v5_33527 = icmp eq i8 %v4_33524, 0
  %v0_33541 = load i32, i32* @ebp, align 4
  %v1_33541 = add i32 %v0_33541, -36
  %v2_33541 = inttoptr i32 %v1_33541 to i32*
  %v3_33541 = load i32, i32* %v2_33541, align 4
  store i32 %v3_33541, i32* %eax.global-to-local, align 8
  br i1 %v5_33527, label %dec_label_pc_33541, label %dec_label_pc_3352b

dec_label_pc_3352b:                               ; preds = %dec_label_pc_33501
  %v2_3352e = add i32 %v0_33541, -40
  %v3_3352e = inttoptr i32 %v2_3352e to i32*
  store i32 %v3_33541, i32* %v3_3352e, align 4
  %v0_33531 = load i32, i32* @ebp, align 4
  %v1_33531 = add i32 %v0_33531, -36
  %v2_33531 = inttoptr i32 %v1_33531 to i32*
  %v3_33531 = load i32, i32* %v2_33531, align 4
  store i32 %v3_33531, i32* %eax.global-to-local, align 8
  %v1_33537 = call i32 @unknown_68e20(i32 %v3_33531)
  store i32 %v1_33537, i32* %eax.global-to-local, align 8
  %v1_3353c = load i32, i32* @ebp, align 4
  %v2_3353c = add i32 %v1_3353c, -36
  %v3_3353c = inttoptr i32 %v2_3353c to i32*
  store i32 %v1_33537, i32* %v3_3353c, align 4
  br label %dec_label_pc_3354f.backedge

dec_label_pc_3354f.backedge:                      ; preds = %dec_label_pc_3352b, %dec_label_pc_33541
  %v3_33553.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_3354f = load i32, i32* @ebp, align 4
  %v1_3354f = add i32 %v0_3354f, -36
  %v2_3354f = inttoptr i32 %v1_3354f to i32*
  %v3_3354f = load i32, i32* %v2_3354f, align 4
  %v10_3354f = icmp eq i32 %v3_3354f, 0
  %v1_33553 = icmp eq i1 %v10_3354f, false
  %v2_33553 = zext i1 %v1_33553 to i32
  %v4_33553 = and i32 %v3_33553.pre, -256
  %v5_33553 = or i32 %v2_33553, %v4_33553
  store i32 %v5_33553, i32* %eax.global-to-local, align 8
  %v5_33556 = icmp eq i1 %v1_33553, false
  %v1_33558 = icmp eq i1 %v5_33556, false
  br i1 %v1_33558, label %dec_label_pc_33501, label %dec_label_pc_3355a

dec_label_pc_33541:                               ; preds = %dec_label_pc_33501
  %v1_33547 = call i32 @unknown_68e50(i32 %v3_33541)
  store i32 %v1_33547, i32* %eax.global-to-local, align 8
  %v1_3354c = load i32, i32* @ebp, align 4
  %v2_3354c = add i32 %v1_3354c, -36
  %v3_3354c = inttoptr i32 %v2_3354c to i32*
  store i32 %v1_33547, i32* %v3_3354c, align 4
  br label %dec_label_pc_3354f.backedge

dec_label_pc_3355a:                               ; preds = %dec_label_pc_3354f.backedge, %dec_label_pc_334d2
  %v0_3354f.lcssa = phi i32 [ %v0_3354f6, %dec_label_pc_334d2 ], [ %v0_3354f, %dec_label_pc_3354f.backedge ]
  %v1_3355a = add i32 %v0_3354f.lcssa, -40
  %v2_3355a = inttoptr i32 %v1_3355a to i32*
  %v3_3355a = load i32, i32* %v2_3355a, align 4
  store i32 %v3_3355a, i32* %eax.global-to-local, align 8
  %v1_33561 = add i32 %v0_3354f.lcssa, -28
  %v2_33561 = inttoptr i32 %v1_33561 to i32*
  %v3_33561 = load i32, i32* %v2_33561, align 4
  store i32 %v3_33561, i32* %eax.global-to-local, align 8
  %v2_33567 = call i32 @unknown_66a54(i32 %v3_33561, i32 %v3_3355a)
  store i32 %v2_33567, i32* %eax.global-to-local, align 8
  %v0_3356c = load i32, i32* @ebp, align 4
  %v1_3356c = add i32 %v0_3356c, -28
  %v2_3356c = inttoptr i32 %v1_3356c to i32*
  %v3_3356c = load i32, i32* %v2_3356c, align 4
  store i32 %v3_3356c, i32* @eax, align 8
  %v1_3356f = add i32 %v0_3356c, -12
  %v2_3356f = inttoptr i32 %v1_3356f to i32*
  %v3_3356f = load i32, i32* %v2_3356f, align 4
  %v3_33572 = icmp eq i32 %v3_3356f, 30
  br i1 %v3_33572, label %bb, label %dec_label_pc_3357b

bb:                                               ; preds = %dec_label_pc_3355a
  %v1_33579 = call i32 @function_33580()
  store i32 %v1_33579, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3357b

dec_label_pc_3357b:                               ; preds = %bb, %dec_label_pc_3355a
  %v2_33579 = phi i32 [ %v1_33579, %bb ], [ %v3_3356c, %dec_label_pc_3355a ]
  ret i32 %v2_33579

; uselistorder directives
  uselistorder i32* %v2_3354f, { 1, 0 }
  uselistorder i32 %v3_33541, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 11, 12, 13, 2, 14, 4, 5, 6, 3, 7, 8, 9, 10, 1, 15, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_3354f.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_33501, { 1, 0 }
}

declare i32 @__stack_chk_fail.1182(i32) local_unnamed_addr

define i32 @function_33580() local_unnamed_addr {
dec_label_pc_33580:
  %v0_33581 = load i32, i32* @eax, align 8
  ret i32 %v0_33581
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_33584:
  ret i32 %arg1
}

define i32 @function_33591(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33591:
  %v0_33591 = load i32, i32* @ebp, align 4
  %v1_33594 = add i32 %v0_33591, 2
  store i32 %v1_33594, i32* @ebp, align 4
  %v0_33595 = load i32, i32* @ecx, align 4
  %v1_33595 = add i32 %v0_33595, -1
  store i32 %v1_33595, i32* @ecx, align 4
  %v2_3359c = add i32 %v0_33591, -10
  %v3_3359c = inttoptr i32 %v2_3359c to i32*
  store i32 30, i32* %v3_3359c, align 4
  %v0_335a1 = load i32, i32* @ebp, align 4
  %v1_335a1 = add i32 %v0_335a1, -28
  %v2_335a1 = inttoptr i32 %v1_335a1 to i32*
  %v3_335a1 = load i32, i32* %v2_335a1, align 4
  %v1_335a4 = add i32 %v0_335a1, -32
  %v2_335a4 = inttoptr i32 %v1_335a4 to i32*
  %v3_335a4 = load i32, i32* %v2_335a4, align 4
  %v2_335a7 = inttoptr i32 %v3_335a1 to i32*
  store i32 %v3_335a4, i32* %v2_335a7, align 4
  %v0_335a9 = load i32, i32* @ebp, align 4
  %v1_335a9 = add i32 %v0_335a9, -12
  %v2_335a9 = inttoptr i32 %v1_335a9 to i32*
  %v3_335a9 = load i32, i32* %v2_335a9, align 4
  %v2_335ac = xor i32 %v3_335a9, 30
  %v3_335ac = icmp eq i32 %v2_335ac, 0
  store i32 %v2_335ac, i32* @eax, align 8
  br i1 %v3_335ac, label %bb, label %dec_label_pc_335b5

bb:                                               ; preds = %dec_label_pc_33591
  %v1_335b3 = call i32 @function_335ba()
  br label %dec_label_pc_335b5

dec_label_pc_335b5:                               ; preds = %bb, %dec_label_pc_33591
  %v3_335b3 = phi i32 [ %v1_335b3, %bb ], [ %v2_335ac, %dec_label_pc_33591 ]
  ret i32 %v3_335b3
}

define i32 @function_335ba() local_unnamed_addr {
dec_label_pc_335ba:
  %v0_335bb = load i32, i32* @eax, align 8
  ret i32 %v0_335bb
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11upper_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_335bc:
  %v1_335e6 = call i32 @unknown_66a5c(i32 %arg2)
  %v1_335f3 = call i32 @unknown_66a2c(i32 %arg2)
  ret i32 %v1_335f3
}

define i32 @function_33630() local_unnamed_addr {
dec_label_pc_33630:
  %eax.global-to-local = alloca i32, align 4
  %v0_33634 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33634
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEeqERKSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33638:
  ret i32 0
}

define i32 @function_33655(i32 %arg1) local_unnamed_addr {
dec_label_pc_33655:
  %v0_33655 = load i32, i32* @ebp, align 4
  %v1_33655 = add i32 %v0_33655, -28
  %v2_33655 = inttoptr i32 %v1_33655 to i32*
  %v3_33655 = load i32, i32* %v2_33655, align 4
  %v1_33658 = inttoptr i32 %v3_33655 to i32*
  %v2_33658 = load i32, i32* %v1_33658, align 4
  %v1_3365a = add i32 %v0_33655, -32
  %v2_3365a = inttoptr i32 %v1_3365a to i32*
  %v3_3365a = load i32, i32* %v2_3365a, align 4
  %v1_3365d = inttoptr i32 %v3_3365a to i32*
  %v2_3365d = load i32, i32* %v1_3365d, align 4
  %v12_3365f = icmp eq i32 %v2_33658, %v2_3365d
  %v1_33661 = zext i1 %v12_3365f to i32
  %v3_33661 = and i32 %v2_3365d, -256
  %v4_33661 = or i32 %v1_33661, %v3_33661
  store i32 %v4_33661, i32* @eax, align 8
  %v1_33664 = add i32 %v0_33655, -12
  %v2_33664 = inttoptr i32 %v1_33664 to i32*
  %v3_33664 = load i32, i32* %v2_33664, align 4
  %v3_33667 = icmp eq i32 %v3_33664, 30
  br i1 %v3_33667, label %bb, label %dec_label_pc_33670

bb:                                               ; preds = %dec_label_pc_33655
  %v1_3366e = call i32 @function_33675()
  br label %dec_label_pc_33670

dec_label_pc_33670:                               ; preds = %bb, %dec_label_pc_33655
  %v2_3366e = phi i32 [ %v1_3366e, %bb ], [ %v4_33661, %dec_label_pc_33655 ]
  ret i32 %v2_3366e

; uselistorder directives
  uselistorder i32 %v2_3365d, { 1, 0 }
}

define i32 @function_33675() local_unnamed_addr {
dec_label_pc_33675:
  %v0_33676 = load i32, i32* @eax, align 8
  ret i32 %v0_33676
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEptEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33678:
  ret i32 %arg1
}

define i32 @function_33682(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33682:
  %v0_33682 = load i32, i32* @ebp, align 4
  %v1_33682 = add i32 %v0_33682, 1
  store i32 %v1_33682, i32* @ebp, align 4
  %v2_3368a = add i32 %v0_33682, -11
  %v3_3368a = inttoptr i32 %v2_3368a to i32*
  store i32 30, i32* %v3_3368a, align 4
  %v0_3368f = load i32, i32* @ebp, align 4
  %v1_3368f = add i32 %v0_3368f, -28
  %v2_3368f = inttoptr i32 %v1_3368f to i32*
  %v3_3368f = load i32, i32* %v2_3368f, align 4
  %v1_33692 = inttoptr i32 %v3_3368f to i32*
  %v2_33692 = load i32, i32* %v1_33692, align 4
  %v1_33694 = add i32 %v2_33692, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_3369a = call i32 @unknown_690d9(i32 %v1_33694)
  store i32 %v2_3369a, i32* @eax, align 8
  %v0_3369f = load i32, i32* @ebp, align 4
  %v1_3369f = add i32 %v0_3369f, -12
  %v2_3369f = inttoptr i32 %v1_3369f to i32*
  %v3_3369f = load i32, i32* %v2_3369f, align 4
  %v3_336a2 = icmp eq i32 %v3_3369f, 30
  br i1 %v3_336a2, label %bb, label %dec_label_pc_336ab

bb:                                               ; preds = %dec_label_pc_33682
  %v1_336a9 = call i32 @function_336b0()
  br label %dec_label_pc_336ab

dec_label_pc_336ab:                               ; preds = %bb, %dec_label_pc_33682
  %v2_336a9 = phi i32 [ %v1_336a9, %bb ], [ %v2_3369a, %dec_label_pc_33682 ]
  ret i32 %v2_336a9
}

define i32 @function_336b0() local_unnamed_addr {
dec_label_pc_336b0:
  %v0_336b1 = load i32, i32* @eax, align 8
  ret i32 %v0_336b1
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8key_compEv() local_unnamed_addr {
dec_label_pc_336b2:
  %eax.global-to-local = alloca i32, align 4
  %v5_336b2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_336b2
}

define i32 @function_336b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_336b4:
  %v0_336b7 = load i32, i32* @ebx, align 4
  %v1_336b7 = add i32 %v0_336b7, 1166608453
  %v2_336b7 = inttoptr i32 %v1_336b7 to i8*
  %v3_336b7 = load i8, i8* %v2_336b7, align 1
  %v4_336b7 = load i32, i32* @ecx, align 4
  %v5_336b7 = trunc i32 %v4_336b7 to i8
  %v6_336b7 = sub i8 %v3_336b7, %v5_336b7
  store i8 %v6_336b7, i8* %v2_336b7, align 1
  %v0_336bf = load i32, i32* @ebp, align 4
  %v1_336c2 = add i32 %v0_336bf, 2
  store i32 %v1_336c2, i32* @ebp, align 4
  %v0_336c3 = load i32, i32* @ecx, align 4
  %v1_336c3 = add i32 %v0_336c3, -1
  store i32 %v1_336c3, i32* @ecx, align 4
  %v2_336ca = add i32 %v0_336bf, -10
  %v3_336ca = inttoptr i32 %v2_336ca to i32*
  store i32 30, i32* %v3_336ca, align 4
  %v0_336cf = load i32, i32* @ebp, align 4
  %v1_336cf = add i32 %v0_336cf, -28
  %v2_336cf = inttoptr i32 %v1_336cf to i32*
  %v3_336cf = load i32, i32* %v2_336cf, align 4
  store i32 %v3_336cf, i32* @eax, align 8
  %v1_336d2 = add i32 %v0_336cf, -12
  %v2_336d2 = inttoptr i32 %v1_336d2 to i32*
  %v3_336d2 = load i32, i32* %v2_336d2, align 4
  %v3_336d5 = icmp eq i32 %v3_336d2, 30
  br i1 %v3_336d5, label %bb, label %dec_label_pc_336de

bb:                                               ; preds = %dec_label_pc_336b4
  %v1_336dc = call i32 @function_336e3()
  br label %dec_label_pc_336de

dec_label_pc_336de:                               ; preds = %bb, %dec_label_pc_336b4
  %v3_336dc = phi i32 [ %v1_336dc, %bb ], [ %v3_336cf, %dec_label_pc_336b4 ]
  ret i32 %v3_336dc
}

define i32 @function_336e3() local_unnamed_addr {
dec_label_pc_336e3:
  %v0_336e4 = load i32, i32* @eax, align 8
  ret i32 %v0_336e4
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_() local_unnamed_addr {
dec_label_pc_336e8:
  %eax.global-to-local = alloca i32, align 4
  %v5_336eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_336eb
}

define i32 @function_336ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_336ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_336ee = load i32, i32* @ebp, align 4
  %v1_336ee = add i32 %v0_336ee, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_336ee = inttoptr i32 %v1_336ee to i32*
  %v3_336ee = load i32, i32* %v2_336ee, align 4
  store i32 %v3_336ee, i32* %eax.global-to-local, align 8
  %v2_336f2 = add i32 %v0_336ee, -60
  %v3_336f2 = inttoptr i32 %v2_336f2 to i32*
  store i32 %v3_336ee, i32* %v3_336f2, align 4
  %v4_336f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_336f2
}

define i32 @function_336f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_336f7:
  %v0_336f9 = load i32, i32* @ebp, align 4
  %v1_336f9 = add i32 %v0_336f9, 1
  store i32 %v1_336f9, i32* @ebp, align 4
  %v1_33701 = add i32 %v0_336f9, 21
  %v2_33701 = inttoptr i32 %v1_33701 to i32*
  %v3_33701 = load i32, i32* %v2_33701, align 4
  %v2_33704 = add i32 %v0_336f9, -71
  %v3_33704 = inttoptr i32 %v2_33704 to i32*
  store i32 %v3_33701, i32* %v3_33704, align 4
  %v1_3370d = load i32, i32* @ebp, align 4
  %v2_3370d = add i32 %v1_3370d, -12
  %v3_3370d = inttoptr i32 %v2_3370d to i32*
  store i32 30, i32* %v3_3370d, align 4
  %v0_33712 = load i32, i32* @ebp, align 4
  %v1_33712 = add i32 %v0_33712, -68
  %v2_33712 = inttoptr i32 %v1_33712 to i32*
  %v3_33712 = load i32, i32* %v2_33712, align 4
  store i32 %v3_33712, i32* @ebx, align 4
  %v1_33715 = add i32 %v0_33712, -64
  %v2_33715 = inttoptr i32 %v1_33715 to i32*
  %v3_33715 = load i32, i32* %v2_33715, align 4
  %v1_3371b = call i32 @unknown_66b88(i32 %v3_33715)
  %v0_33720 = load i32, i32* @ebx, align 4
  %v12_33720 = icmp eq i32 %v0_33720, %v1_3371b
  %v1_33722 = zext i1 %v12_33720 to i32
  %v3_33722 = and i32 %v1_3371b, -256
  %v4_33722 = or i32 %v1_33722, %v3_33722
  ret i32 %v4_33722

; uselistorder directives
  uselistorder i32 %v1_3371b, { 1, 0 }
}

define i32 @function_33728() local_unnamed_addr {
dec_label_pc_33728:
  %eax.global-to-local = alloca i32, align 4
  %v0_33728 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33728
}

define i32 @function_33735(i32 %arg1) local_unnamed_addr {
dec_label_pc_33735:
  %v0_33736 = load i32, i32* @eax, align 8
  %v4_33736 = mul i32 %v0_33736, 2
  %v14_33736 = icmp eq i32 %v4_33736, 0
  br i1 %v14_33736, label %dec_label_pc_33785, label %dec_label_pc_3373c

dec_label_pc_3373c:                               ; preds = %dec_label_pc_33735
  %v0_3373c = load i32, i32* @ebp, align 4
  %v1_3373c = add i32 %v0_3373c, -72
  %v2_3373c = inttoptr i32 %v1_3373c to i32*
  %v3_3373c = load i32, i32* %v2_3373c, align 4
  %v1_33743 = add i32 %v0_3373c, -17
  %v2_33749 = call i32 @unknown_691ea(i32 %v1_33743, i32 %v3_3373c)
  store i32 %v2_33749, i32* @ebx, align 4
  %v0_33750 = load i32, i32* @ebp, align 4
  %v1_33750 = add i32 %v0_33750, -64
  %v2_33750 = inttoptr i32 %v1_33750 to i32*
  %v3_33750 = load i32, i32* %v2_33750, align 4
  %v1_33756 = call i32 @unknown_69176(i32 %v3_33750)
  %v1_3375b = inttoptr i32 %v1_33756 to i32*
  %v2_3375b = load i32, i32* %v1_3375b, align 4
  %v1_33760 = call i32 @unknown_691a6(i32 %v2_3375b)
  %v0_33767 = load i32, i32* @ebp, align 4
  %v1_33767 = add i32 %v0_33767, -64
  %v2_33767 = inttoptr i32 %v1_33767 to i32*
  %v3_33767 = load i32, i32* %v2_33767, align 4
  %v0_3376a = load i32, i32* @ebx, align 4
  %v3_33775 = call i32 @unknown_629fe(i32 %v3_33767, i32 %v1_33760, i32 %v0_3376a)
  %v4_3377a = trunc i32 %v3_33775 to i8
  %v5_3377a = icmp eq i8 %v4_3377a, 0
  br i1 %v5_3377a, label %dec_label_pc_33785, label %dec_label_pc_3378a

dec_label_pc_33785:                               ; preds = %dec_label_pc_3373c, %dec_label_pc_33735
  br label %dec_label_pc_3378a

dec_label_pc_3378a:                               ; preds = %dec_label_pc_3373c, %dec_label_pc_33785
  %storemerge = phi i1 [ true, %dec_label_pc_33785 ], [ false, %dec_label_pc_3373c ]
  %v0_337c8 = load i32, i32* @ebp, align 4
  br i1 %storemerge, label %dec_label_pc_337c8, label %dec_label_pc_3378e

dec_label_pc_3378e:                               ; preds = %dec_label_pc_3378a
  %v1_3378e = add i32 %v0_337c8, -64
  %v2_3378e = inttoptr i32 %v1_3378e to i32*
  %v3_3378e = load i32, i32* %v2_3378e, align 4
  %v1_33794 = call i32 @unknown_69176(i32 %v3_3378e)
  %v1_33799 = inttoptr i32 %v1_33794 to i32*
  %v2_33799 = load i32, i32* %v1_33799, align 4
  %v0_3379b = load i32, i32* @ebp, align 4
  %v1_3379b = add i32 %v0_3379b, -60
  %v2_3379b = inttoptr i32 %v1_3379b to i32*
  %v3_3379b = load i32, i32* %v2_3379b, align 4
  %v1_3379e = add i32 %v0_3379b, -72
  %v2_3379e = inttoptr i32 %v1_3379e to i32*
  %v3_3379e = load i32, i32* %v2_3379e, align 4
  store i32 %v3_3379e, i32* @ecx, align 4
  %v1_337b1 = add i32 %v0_3379b, -64
  %v2_337b1 = inttoptr i32 %v1_337b1 to i32*
  %v3_337b1 = load i32, i32* %v2_337b1, align 4
  %v5_337bb = call i32 @unknown_6924e(i32 %v3_3379b, i32 %v3_337b1, i32 0, i32 %v2_33799, i32 %v3_3379e)
  %v0_337c3 = call i32 @function_33ae8()
  ret i32 %v0_337c3

dec_label_pc_337c8:                               ; preds = %dec_label_pc_3378a
  %v1_337c8 = add i32 %v0_337c8, -48
  %v1_337cb = add i32 %v0_337c8, -72
  %v2_337cb = inttoptr i32 %v1_337cb to i32*
  %v3_337cb = load i32, i32* %v2_337cb, align 4
  %v1_337d2 = add i32 %v0_337c8, -64
  %v2_337d2 = inttoptr i32 %v1_337d2 to i32*
  %v3_337d2 = load i32, i32* %v2_337d2, align 4
  %v3_337dc = call i32 @unknown_69350(i32 %v1_337c8, i32 %v3_337d2, i32 %v3_337cb)
  %v0_337e4 = load i32, i32* @ebp, align 4
  %v1_337e4 = add i32 %v0_337e4, -60
  %v2_337e4 = inttoptr i32 %v1_337e4 to i32*
  %v3_337e4 = load i32, i32* %v2_337e4, align 4
  %v1_337e7 = add i32 %v0_337e4, -48
  %v2_337e7 = inttoptr i32 %v1_337e7 to i32*
  %v3_337e7 = load i32, i32* %v2_337e7, align 4
  %v2_337ea = inttoptr i32 %v3_337e4 to i32*
  store i32 %v3_337e7, i32* %v2_337ea, align 4
  %v0_337ec = call i32 @function_33ae8()
  ret i32 %v0_337ec

; uselistorder directives
  uselistorder i32 %v0_337c8, { 0, 2, 3, 1 }
  uselistorder i1 true, { 0, 1, 2, 3, 4, 5, 25, 6, 7, 8, 9, 10, 26, 16, 17, 18, 19, 20, 21, 11, 12, 13, 22, 23, 14, 15, 24 }
  uselistorder label %dec_label_pc_3378a, { 1, 0 }
}

define i32 @function_337fd() local_unnamed_addr {
dec_label_pc_337fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_337fd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_337fd
}

define i32 @function_337fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_337fe:
  %v0_337fe = load i32, i32* @ebp, align 4
  %v1_337fe = add i32 %v0_337fe, -72
  %v2_337fe = inttoptr i32 %v1_337fe to i32*
  %v3_337fe = load i32, i32* %v2_337fe, align 4
  %v1_33805 = add i32 %v0_337fe, -16
  %v2_3380b = call i32 @unknown_691ea(i32 %v1_33805, i32 %v3_337fe)
  %v0_33810 = load i32, i32* @ebp, align 4
  %v1_33810 = add i32 %v0_33810, -64
  %v2_33810 = inttoptr i32 %v1_33810 to i32*
  %v3_33810 = load i32, i32* %v2_33810, align 4
  %v0_33813 = load i32, i32* @ebx, align 4
  %v3_3381e = call i32 @unknown_629fe(i32 %v3_33810, i32 %v2_3380b, i32 %v0_33813)
  ret i32 %v3_3381e
}

define i32 @function_33826(i32 %arg1) local_unnamed_addr {
dec_label_pc_33826:
  %ebx.global-to-local = alloca i32, align 4
  %v0_33826 = load i32, i32* @eax, align 8
  %v5_33826 = trunc i32 %v0_33826 to i8
  %v5_33829 = mul i8 %v5_33826, 2
  %v21_33829 = inttoptr i32 %v0_33826 to i8*
  store i8 %v5_33829, i8* %v21_33829, align 1
  %v0_3382b = load i32, i32* @ebp, align 4
  %v1_3382b = add i32 %v0_3382b, -68
  %v2_3382b = inttoptr i32 %v1_3382b to i32*
  %v3_3382b = load i32, i32* %v2_3382b, align 4
  %v2_3382e = add i32 %v0_3382b, -24
  %v3_3382e = inttoptr i32 %v2_3382e to i32*
  store i32 %v3_3382b, i32* %v3_3382e, align 4
  %v0_33831 = load i32, i32* @ebp, align 4
  %v1_33831 = add i32 %v0_33831, -68
  %v2_33831 = inttoptr i32 %v1_33831 to i32*
  %v3_33831 = load i32, i32* %v2_33831, align 4
  store i32 %v3_33831, i32* %ebx.global-to-local, align 4
  %v1_33834 = add i32 %v0_33831, -64
  %v2_33834 = inttoptr i32 %v1_33834 to i32*
  %v3_33834 = load i32, i32* %v2_33834, align 4
  %v1_3383a = call i32 @unknown_69554(i32 %v3_33834)
  %v1_3383f = inttoptr i32 %v1_3383a to i32*
  %v2_3383f = load i32, i32* %v1_3383f, align 4
  %v0_33841 = load i32, i32* %ebx.global-to-local, align 4
  %v12_33841 = icmp eq i32 %v0_33841, %v2_3383f
  %v5_33846 = icmp eq i1 %v12_33841, false
  %v0_3388d = load i32, i32* @ebp, align 4
  br i1 %v5_33846, label %dec_label_pc_3388d, label %dec_label_pc_3384a

dec_label_pc_3384a:                               ; preds = %dec_label_pc_33826
  %v1_3384a = add i32 %v0_3388d, -64
  %v2_3384a = inttoptr i32 %v1_3384a to i32*
  %v3_3384a = load i32, i32* %v2_3384a, align 4
  %v1_33850 = call i32 @unknown_69554(i32 %v3_3384a)
  %v1_33855 = inttoptr i32 %v1_33850 to i32*
  %v2_33855 = load i32, i32* %v1_33855, align 4
  store i32 %v2_33855, i32* %ebx.global-to-local, align 4
  %v0_33857 = load i32, i32* @ebp, align 4
  %v1_33857 = add i32 %v0_33857, -64
  %v2_33857 = inttoptr i32 %v1_33857 to i32*
  %v3_33857 = load i32, i32* %v2_33857, align 4
  %v1_3385d = call i32 @unknown_69554(i32 %v3_33857)
  %v1_33862 = inttoptr i32 %v1_3385d to i32*
  %v2_33862 = load i32, i32* %v1_33862, align 4
  %v0_33864 = load i32, i32* @ebp, align 4
  %v1_33864 = add i32 %v0_33864, -60
  %v2_33864 = inttoptr i32 %v1_33864 to i32*
  %v3_33864 = load i32, i32* %v2_33864, align 4
  %v1_33867 = add i32 %v0_33864, -72
  %v2_33867 = inttoptr i32 %v1_33867 to i32*
  %v3_33867 = load i32, i32* %v2_33867, align 4
  store i32 %v3_33867, i32* @ecx, align 4
  %v0_3386e = load i32, i32* %ebx.global-to-local, align 4
  %v1_33876 = add i32 %v0_33864, -64
  %v2_33876 = inttoptr i32 %v1_33876 to i32*
  %v3_33876 = load i32, i32* %v2_33876, align 4
  %v5_33880 = call i32 @unknown_6924e(i32 %v3_33864, i32 %v3_33876, i32 %v2_33862, i32 %v0_3386e, i32 %v3_33867)
  %v0_33888 = call i32 @function_33ae8()
  ret i32 %v0_33888

dec_label_pc_3388d:                               ; preds = %dec_label_pc_33826
  %v1_3388d = add i32 %v0_3388d, -72
  %v2_3388d = inttoptr i32 %v1_3388d to i32*
  %v3_3388d = load i32, i32* %v2_3388d, align 4
  %v1_33894 = add i32 %v0_3388d, -15
  %v2_3389a = call i32 @unknown_691ea(i32 %v1_33894, i32 %v3_3388d)
  store i32 %v2_3389a, i32* %ebx.global-to-local, align 4
  %v0_338a1 = load i32, i32* @ebp, align 4
  %v1_338a1 = add i32 %v0_338a1, -24
  %v1_338a7 = call i32 @unknown_69584(i32 %v1_338a1)
  %v1_338ac = inttoptr i32 %v1_338a7 to i32*
  %v2_338ac = load i32, i32* %v1_338ac, align 4
  %v1_338b1 = call i32 @unknown_691a6(i32 %v2_338ac)
  %v0_338b8 = load i32, i32* @ebp, align 4
  %v1_338b8 = add i32 %v0_338b8, -64
  %v2_338b8 = inttoptr i32 %v1_338b8 to i32*
  %v3_338b8 = load i32, i32* %v2_338b8, align 4
  %v0_338bb = load i32, i32* %ebx.global-to-local, align 4
  %v3_338c6 = call i32 @unknown_629fe(i32 %v3_338b8, i32 %v1_338b1, i32 %v0_338bb)
  %v4_338cb = trunc i32 %v3_338c6 to i8
  %v5_338cb = icmp eq i8 %v4_338cb, 0
  br i1 %v5_338cb, label %bb, label %dec_label_pc_338cf

bb:                                               ; preds = %dec_label_pc_3388d
  %v1_338cd = call i32 @function_33942()
  br label %dec_label_pc_338cf

dec_label_pc_338cf:                               ; preds = %bb, %dec_label_pc_3388d
  %v0_338cf = load i32, i32* @ebp, align 4
  %v1_338cf = add i32 %v0_338cf, -24
  %v2_338cf = inttoptr i32 %v1_338cf to i32*
  %v3_338cf = load i32, i32* %v2_338cf, align 4
  %v1_338d5 = call i32 @unknown_695c3(i32 %v3_338cf)
  %v1_338da = icmp eq i32 %v1_338d5, 0
  %v5_338df = icmp eq i1 %v1_338da, false
  %v0_33913 = load i32, i32* @ebp, align 4
  br i1 %v5_338df, label %dec_label_pc_33913, label %dec_label_pc_338e3

dec_label_pc_338e3:                               ; preds = %dec_label_pc_338cf
  %v1_338e3 = add i32 %v0_33913, -24
  %v2_338e3 = inttoptr i32 %v1_338e3 to i32*
  %v3_338e3 = load i32, i32* %v2_338e3, align 4
  %v1_338e6 = add i32 %v0_33913, -60
  %v2_338e6 = inttoptr i32 %v1_338e6 to i32*
  %v3_338e6 = load i32, i32* %v2_338e6, align 4
  %v1_338e9 = add i32 %v0_33913, -72
  %v2_338e9 = inttoptr i32 %v1_338e9 to i32*
  %v3_338e9 = load i32, i32* %v2_338e9, align 4
  store i32 %v3_338e9, i32* @ecx, align 4
  %v1_338fc = add i32 %v0_33913, -64
  %v2_338fc = inttoptr i32 %v1_338fc to i32*
  %v3_338fc = load i32, i32* %v2_338fc, align 4
  %v5_33906 = call i32 @unknown_6924e(i32 %v3_338e6, i32 %v3_338fc, i32 0, i32 %v3_338e3, i32 %v3_338e9)
  %v0_3390e = call i32 @function_33ae8()
  ret i32 %v0_3390e

dec_label_pc_33913:                               ; preds = %dec_label_pc_338cf
  %v1_33913 = add i32 %v0_33913, -68
  %v2_33913 = inttoptr i32 %v1_33913 to i32*
  %v3_33913 = load i32, i32* %v2_33913, align 4
  store i32 %v3_33913, i32* @ecx, align 4
  %v1_33919 = add i32 %v0_33913, -60
  %v2_33919 = inttoptr i32 %v1_33919 to i32*
  %v3_33919 = load i32, i32* %v2_33919, align 4
  ret i32 %v3_33919

; uselistorder directives
  uselistorder i32 %v0_33913, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_3388d, { 1, 2, 0 }
  uselistorder i32 (i32)* @unknown_69554, { 2, 1, 0 }
}

define i32 @function_3391c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3391c:
  %v0_3391c = load i32, i32* @ebp, align 4
  %v1_3391c = add i32 %v0_3391c, -72
  %v2_3391c = inttoptr i32 %v1_3391c to i32*
  %v3_3391c = load i32, i32* %v2_3391c, align 4
  %v0_33923 = load i32, i32* @ecx, align 4
  %v0_33927 = load i32, i32* @edx, align 8
  %v1_3392b = add i32 %v0_3391c, -64
  %v2_3392b = inttoptr i32 %v1_3392b to i32*
  %v3_3392b = load i32, i32* %v2_3392b, align 4
  %v0_33932 = load i32, i32* @eax, align 8
  %v5_33935 = call i32 @unknown_6924e(i32 %v0_33932, i32 %v3_3392b, i32 %v0_33927, i32 %v0_33923, i32 %v3_3391c)
  %v0_3393d = call i32 @function_33ae8()
  ret i32 %v0_3393d
}

define i32 @function_33942() local_unnamed_addr {
dec_label_pc_33942:
  %v0_33942 = load i32, i32* @ebp, align 4
  %v1_33942 = add i32 %v0_33942, -40
  %v1_33945 = add i32 %v0_33942, -72
  %v2_33945 = inttoptr i32 %v1_33945 to i32*
  %v3_33945 = load i32, i32* %v2_33945, align 4
  %v1_3394c = add i32 %v0_33942, -64
  %v2_3394c = inttoptr i32 %v1_3394c to i32*
  %v3_3394c = load i32, i32* %v2_3394c, align 4
  %v3_33956 = call i32 @unknown_69350(i32 %v1_33942, i32 %v3_3394c, i32 %v3_33945)
  %v0_3395e = load i32, i32* @ebp, align 4
  %v1_3395e = add i32 %v0_3395e, -60
  %v2_3395e = inttoptr i32 %v1_3395e to i32*
  %v3_3395e = load i32, i32* %v2_3395e, align 4
  %v1_33961 = add i32 %v0_3395e, -40
  %v2_33961 = inttoptr i32 %v1_33961 to i32*
  %v3_33961 = load i32, i32* %v2_33961, align 4
  %v2_33964 = inttoptr i32 %v3_3395e to i32*
  store i32 %v3_33961, i32* %v2_33964, align 4
  %v0_33966 = call i32 @function_33ae8()
  ret i32 %v0_33966
}

define i32 @function_3396b() local_unnamed_addr {
dec_label_pc_3396b:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3396b = load i32, i32* @ebp, align 4
  %v1_3396b = add i32 %v0_3396b, -72
  %v2_3396b = inttoptr i32 %v1_3396b to i32*
  %v3_3396b = load i32, i32* %v2_3396b, align 4
  %v1_33972 = add i32 %v0_3396b, -14
  %v2_33978 = call i32 @unknown_691ea(i32 %v1_33972, i32 %v3_3396b)
  store i32 %v2_33978, i32* %ebx.global-to-local, align 4
  %v0_3397f = load i32, i32* @ebp, align 4
  %v1_3397f = add i32 %v0_3397f, -68
  %v2_3397f = inttoptr i32 %v1_3397f to i32*
  %v3_3397f = load i32, i32* %v2_3397f, align 4
  %v1_33985 = call i32 @unknown_691a6(i32 %v3_3397f)
  %v0_3398c = load i32, i32* @ebp, align 4
  %v1_3398c = add i32 %v0_3398c, -64
  %v2_3398c = inttoptr i32 %v1_3398c to i32*
  %v3_3398c = load i32, i32* %v2_3398c, align 4
  %v0_3398f = load i32, i32* %ebx.global-to-local, align 4
  %v3_3399a = call i32 @unknown_629fe(i32 %v3_3398c, i32 %v1_33985, i32 %v0_3398f)
  %v4_3399f = trunc i32 %v3_3399a to i8
  %v5_3399f = icmp eq i8 %v4_3399f, 0
  br i1 %v5_3399f, label %bb, label %dec_label_pc_339a7

bb:                                               ; preds = %dec_label_pc_3396b
  %v1_339a1 = call i32 @function_33ad3()
  br label %dec_label_pc_339a7

dec_label_pc_339a7:                               ; preds = %bb, %dec_label_pc_3396b
  %v0_339a7 = load i32, i32* @ebp, align 4
  %v1_339a7 = add i32 %v0_339a7, -68
  %v2_339a7 = inttoptr i32 %v1_339a7 to i32*
  %v3_339a7 = load i32, i32* %v2_339a7, align 4
  %v2_339aa = add i32 %v0_339a7, -24
  %v3_339aa = inttoptr i32 %v2_339aa to i32*
  store i32 %v3_339a7, i32* %v3_339aa, align 4
  %v0_339ad = load i32, i32* @ebp, align 4
  %v1_339ad = add i32 %v0_339ad, -68
  %v2_339ad = inttoptr i32 %v1_339ad to i32*
  %v3_339ad = load i32, i32* %v2_339ad, align 4
  store i32 %v3_339ad, i32* %ebx.global-to-local, align 4
  %v1_339b0 = add i32 %v0_339ad, -64
  %v2_339b0 = inttoptr i32 %v1_339b0 to i32*
  %v3_339b0 = load i32, i32* %v2_339b0, align 4
  %v1_339b6 = call i32 @unknown_69176(i32 %v3_339b0)
  %v1_339bb = inttoptr i32 %v1_339b6 to i32*
  %v2_339bb = load i32, i32* %v1_339bb, align 4
  %v0_339bd = load i32, i32* %ebx.global-to-local, align 4
  %v12_339bd = icmp eq i32 %v0_339bd, %v2_339bb
  %v5_339c2 = icmp eq i1 %v12_339bd, false
  %v0_33a00 = load i32, i32* @ebp, align 4
  br i1 %v5_339c2, label %dec_label_pc_33a00, label %dec_label_pc_339c6

dec_label_pc_339c6:                               ; preds = %dec_label_pc_339a7
  %v1_339c6 = add i32 %v0_33a00, -64
  %v2_339c6 = inttoptr i32 %v1_339c6 to i32*
  %v3_339c6 = load i32, i32* %v2_339c6, align 4
  %v1_339cc = call i32 @unknown_69176(i32 %v3_339c6)
  %v1_339d1 = inttoptr i32 %v1_339cc to i32*
  %v2_339d1 = load i32, i32* %v1_339d1, align 4
  %v0_339d3 = load i32, i32* @ebp, align 4
  %v1_339d3 = add i32 %v0_339d3, -60
  %v2_339d3 = inttoptr i32 %v1_339d3 to i32*
  %v3_339d3 = load i32, i32* %v2_339d3, align 4
  %v1_339d6 = add i32 %v0_339d3, -72
  %v2_339d6 = inttoptr i32 %v1_339d6 to i32*
  %v3_339d6 = load i32, i32* %v2_339d6, align 4
  %v1_339e9 = add i32 %v0_339d3, -64
  %v2_339e9 = inttoptr i32 %v1_339e9 to i32*
  %v3_339e9 = load i32, i32* %v2_339e9, align 4
  %v5_339f3 = call i32 @unknown_6924e(i32 %v3_339d3, i32 %v3_339e9, i32 0, i32 %v2_339d1, i32 %v3_339d6)
  %v0_339fb = call i32 @function_33ae8()
  ret i32 %v0_339fb

dec_label_pc_33a00:                               ; preds = %dec_label_pc_339a7
  %v1_33a00 = add i32 %v0_33a00, -24
  %v1_33a06 = call i32 @unknown_646ce(i32 %v1_33a00)
  %v1_33a0b = inttoptr i32 %v1_33a06 to i32*
  %v2_33a0b = load i32, i32* %v1_33a0b, align 4
  %v1_33a10 = call i32 @unknown_691a6(i32 %v2_33a0b)
  store i32 %v1_33a10, i32* %ebx.global-to-local, align 4
  %v0_33a17 = load i32, i32* @ebp, align 4
  %v1_33a17 = add i32 %v0_33a17, -72
  %v2_33a17 = inttoptr i32 %v1_33a17 to i32*
  %v3_33a17 = load i32, i32* %v2_33a17, align 4
  %v1_33a1e = add i32 %v0_33a17, -13
  %v2_33a24 = call i32 @unknown_691ea(i32 %v1_33a1e, i32 %v3_33a17)
  ret i32 %v2_33a24

; uselistorder directives
  uselistorder i32 %v0_33a00, { 1, 0 }
  uselistorder i32 (i32)* @unknown_69176, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_629fe, { 3, 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_691a6, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @unknown_691ea, { 4, 3, 0, 2, 1 }
}

define i32 @function_33a3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33a3a:
  %v0_33a3a = load i32, i32* @eax, align 8
  %v1_33a3a = trunc i32 %v0_33a3a to i8
  %v5_33a3a = mul i8 %v1_33a3a, 2
  %v15_33a3a = icmp eq i8 %v5_33a3a, 0
  %v0_33aad = load i32, i32* @ebp, align 4
  br i1 %v15_33a3a, label %dec_label_pc_33aad, label %dec_label_pc_33a40

dec_label_pc_33a40:                               ; preds = %dec_label_pc_33a3a
  %v1_33a40 = add i32 %v0_33aad, -68
  %v2_33a40 = inttoptr i32 %v1_33a40 to i32*
  %v3_33a40 = load i32, i32* %v2_33a40, align 4
  %v1_33a46 = call i32 @unknown_695c3(i32 %v3_33a40)
  %v1_33a4b = icmp eq i32 %v1_33a46, 0
  %v5_33a50 = icmp eq i1 %v1_33a4b, false
  %v0_33a81 = load i32, i32* @ebp, align 4
  br i1 %v5_33a50, label %dec_label_pc_33a81, label %dec_label_pc_33a54

dec_label_pc_33a54:                               ; preds = %dec_label_pc_33a40
  %v1_33a54 = add i32 %v0_33a81, -68
  %v2_33a54 = inttoptr i32 %v1_33a54 to i32*
  %v3_33a54 = load i32, i32* %v2_33a54, align 4
  %v1_33a57 = add i32 %v0_33a81, -60
  %v2_33a57 = inttoptr i32 %v1_33a57 to i32*
  %v3_33a57 = load i32, i32* %v2_33a57, align 4
  %v1_33a5a = add i32 %v0_33a81, -72
  %v2_33a5a = inttoptr i32 %v1_33a5a to i32*
  %v3_33a5a = load i32, i32* %v2_33a5a, align 4
  %v1_33a6d = add i32 %v0_33a81, -64
  %v2_33a6d = inttoptr i32 %v1_33a6d to i32*
  %v3_33a6d = load i32, i32* %v2_33a6d, align 4
  %v5_33a77 = call i32 @unknown_6924e(i32 %v3_33a57, i32 %v3_33a6d, i32 0, i32 %v3_33a54, i32 %v3_33a5a)
  %v0_33a7f = call i32 @function_33ae8()
  ret i32 %v0_33a7f

dec_label_pc_33a81:                               ; preds = %dec_label_pc_33a40
  %v1_33a81 = add i32 %v0_33a81, -24
  %v2_33a81 = inttoptr i32 %v1_33a81 to i32*
  %v3_33a81 = load i32, i32* %v2_33a81, align 4
  %v1_33a87 = add i32 %v0_33a81, -60
  %v2_33a87 = inttoptr i32 %v1_33a87 to i32*
  %v3_33a87 = load i32, i32* %v2_33a87, align 4
  %v1_33a8a = add i32 %v0_33a81, -72
  %v2_33a8a = inttoptr i32 %v1_33a8a to i32*
  %v3_33a8a = load i32, i32* %v2_33a8a, align 4
  %v1_33a99 = add i32 %v0_33a81, -64
  %v2_33a99 = inttoptr i32 %v1_33a99 to i32*
  %v3_33a99 = load i32, i32* %v2_33a99, align 4
  %v5_33aa3 = call i32 @unknown_6924e(i32 %v3_33a87, i32 %v3_33a99, i32 %v3_33a81, i32 %v3_33a81, i32 %v3_33a8a)
  %v0_33aab = call i32 @function_33ae8()
  ret i32 %v0_33aab

dec_label_pc_33aad:                               ; preds = %dec_label_pc_33a3a
  %v1_33aad = add i32 %v0_33aad, -32
  %v1_33ab0 = add i32 %v0_33aad, -72
  %v2_33ab0 = inttoptr i32 %v1_33ab0 to i32*
  %v3_33ab0 = load i32, i32* %v2_33ab0, align 4
  %v1_33ab7 = add i32 %v0_33aad, -64
  %v2_33ab7 = inttoptr i32 %v1_33ab7 to i32*
  %v3_33ab7 = load i32, i32* %v2_33ab7, align 4
  %v3_33ac1 = call i32 @unknown_69350(i32 %v1_33aad, i32 %v3_33ab7, i32 %v3_33ab0)
  %v0_33ac9 = load i32, i32* @ebp, align 4
  %v1_33ac9 = add i32 %v0_33ac9, -60
  %v2_33ac9 = inttoptr i32 %v1_33ac9 to i32*
  %v3_33ac9 = load i32, i32* %v2_33ac9, align 4
  %v1_33acc = add i32 %v0_33ac9, -32
  %v2_33acc = inttoptr i32 %v1_33acc to i32*
  %v3_33acc = load i32, i32* %v2_33acc, align 4
  %v2_33acf = inttoptr i32 %v3_33ac9 to i32*
  store i32 %v3_33acc, i32* %v2_33acf, align 4
  %v0_33ad1 = call i32 @function_33ae8()
  ret i32 %v0_33ad1

; uselistorder directives
  uselistorder i32 %v3_33a81, { 1, 0 }
  uselistorder i32 %v0_33a81, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_33aad, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_69350, { 2, 0, 1 }
  uselistorder i32 ()* @function_33ae8, { 8, 7, 6, 9, 2, 3, 1, 0, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_6924e, { 5, 4, 6, 2, 1, 0, 3 }
  uselistorder i32 -72, { 15, 16, 17, 0, 1, 2, 55, 54, 56, 57, 58, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 44, 3, 4, 5, 6, 7, 8, 45, 46, 47, 48, 49, 19, 20, 21, 22, 23, 24, 9, 10, 11, 12, 13, 50, 51, 14 }
  uselistorder i32 (i32)* @unknown_695c3, { 1, 0 }
}

define i32 @function_33ad3() local_unnamed_addr {
dec_label_pc_33ad3:
  %v0_33ad3 = load i32, i32* @ebp, align 4
  %v1_33ad3 = add i32 %v0_33ad3, -60
  %v2_33ad3 = inttoptr i32 %v1_33ad3 to i32*
  %v3_33ad3 = load i32, i32* %v2_33ad3, align 4
  %v1_33ad6 = add i32 %v0_33ad3, -68
  %v2_33ae0 = call i32 @unknown_695f4(i32 %v3_33ad3, i32 %v1_33ad6)
  ret i32 %v2_33ae0
}

define i32 @function_33ae8() local_unnamed_addr {
dec_label_pc_33ae8:
  %v0_33ae8 = load i32, i32* @ebp, align 4
  %v1_33ae8 = add i32 %v0_33ae8, -60
  %v2_33ae8 = inttoptr i32 %v1_33ae8 to i32*
  %v3_33ae8 = load i32, i32* %v2_33ae8, align 4
  store i32 %v3_33ae8, i32* @eax, align 8
  %v1_33aeb = add i32 %v0_33ae8, -12
  %v2_33aeb = inttoptr i32 %v1_33aeb to i32*
  %v3_33aeb = load i32, i32* %v2_33aeb, align 4
  %v3_33aee = icmp eq i32 %v3_33aeb, 30
  br i1 %v3_33aee, label %bb, label %dec_label_pc_33af7

bb:                                               ; preds = %dec_label_pc_33ae8
  %v1_33af5 = call i32 @function_33afc()
  br label %dec_label_pc_33af7

dec_label_pc_33af7:                               ; preds = %bb, %dec_label_pc_33ae8
  %v3_33af5 = phi i32 [ %v1_33af5, %bb ], [ %v3_33ae8, %dec_label_pc_33ae8 ]
  ret i32 %v3_33af5
}

define i32 @function_33afc() local_unnamed_addr {
dec_label_pc_33afc:
  %v0_33afc = load i32, i32* @ebp, align 4
  %v1_33afc = add i32 %v0_33afc, -4
  %v2_33afc = inttoptr i32 %v1_33afc to i32*
  %v3_33afc = load i32, i32* %v2_33afc, align 4
  store i32 %v3_33afc, i32* @ebx, align 4
  %v0_33b00 = load i32, i32* @eax, align 8
  ret i32 %v0_33b00
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33b04:
  ret i32 %arg2
}

define i32 @function_33b6a() local_unnamed_addr {
dec_label_pc_33b6a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33b6a = load i32, i32* %ecx.global-to-local, align 4
  %v1_33b6a = add i32 %v0_33b6a, -1
  store i32 %v1_33b6a, i32* %ecx.global-to-local, align 4
  %v0_33b6c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33b6c
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33b6e:
  %v1_33b91 = call i32 @unknown_67886(i32 %arg2)
  %v2_33ba0 = call i32 @unknown_678b4(i32 %arg1, i32 %v1_33b91)
  store i32 %arg1, i32* @eax, align 8
  %v1_33bb2 = call i32 @function_33bb9()
  ret i32 %v1_33bb2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_33bb9() local_unnamed_addr {
dec_label_pc_33bb9:
  %v0_33bba = load i32, i32* @eax, align 8
  ret i32 %v0_33bba
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_33bbe:
  ret i32 %arg1
}

define i32 @function_33bdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_33bdc:
  %v0_33bdc = load i32, i32* @edi, align 8
  %v1_33bdc = add i32 %v0_33bdc, ptrtoint (i32* @global_var_3.2378 to i32)
  %v2_33bdc = inttoptr i32 %v1_33bdc to i8*
  %v3_33bdc = load i8, i8* %v2_33bdc, align 1
  %v4_33bdc = load i32, i32* @ecx, align 4
  %v5_33bdc = trunc i32 %v4_33bdc to i8
  %v6_33bdc = urem i8 %v5_33bdc, 32
  %v7_33bdc = icmp eq i8 %v6_33bdc, 0
  br i1 %v7_33bdc, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_33bdc
  %v8_33bdc = load i1, i1* @cf, align 1
  %v9_33bdc = zext i1 %v8_33bdc to i8
  %v10_33bdc = lshr i8 %v3_33bdc, %v6_33bdc
  %v11_33bdc = zext i8 %v10_33bdc to i16
  %v12_33bdc = zext i8 %v3_33bdc to i16
  %v13_33bdc = sub nsw i8 9, %v6_33bdc
  %v14_33bdc = zext i8 %v13_33bdc to i16
  %v15_33bdc = shl i16 %v12_33bdc, %v14_33bdc
  %v16_33bdc = sub nsw i8 8, %v6_33bdc
  %v17_33bdc = shl i8 %v9_33bdc, %v16_33bdc
  %v18_33bdc = zext i8 %v17_33bdc to i16
  %v19_33bdc = or i16 %v15_33bdc, %v11_33bdc
  %v20_33bdc = or i16 %v19_33bdc, %v18_33bdc
  %v21_33bdc = trunc i16 %v20_33bdc to i8
  store i8 %v21_33bdc, i8* %v2_33bdc, align 1
  %v4_33bdf.pre = load i32, i32* @ecx, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_33bdc, %bb
  %v4_33bdf = phi i32 [ %v4_33bdc, %dec_label_pc_33bdc ], [ %v4_33bdf.pre, %bb ]
  %v0_33bdf = load i32, i32* @ebx, align 4
  %v1_33bdf = add i32 %v0_33bdf, 862319685
  %v2_33bdf = inttoptr i32 %v1_33bdf to i8*
  %v3_33bdf = load i8, i8* %v2_33bdf, align 1
  %v5_33bdf = trunc i32 %v4_33bdf to i8
  %v6_33bdf = add i8 %v3_33bdf, %v5_33bdf
  store i8 %v6_33bdf, i8* %v2_33bdf, align 1
  %v0_33be5 = load i32, i32* @eax, align 8
  %v1_33be5 = add i32 %v0_33be5, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_33be5 = icmp eq i32 %v1_33be5, 0
  store i32 %v1_33be5, i32* @eax, align 8
  br i1 %v10_33be5, label %bb4, label %dec_label_pc_33bec

bb4:                                              ; preds = %bb3
  %v1_33bea = call i32 @function_33bf1()
  br label %dec_label_pc_33bec

dec_label_pc_33bec:                               ; preds = %bb4, %bb3
  %v2_33bea = phi i32 [ %v1_33bea, %bb4 ], [ %v1_33be5, %bb3 ]
  ret i32 %v2_33bea

; uselistorder directives
  uselistorder i8 %v6_33bdc, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_3.2378 to i32), { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 1, 48, 49, 50, 0 }
  uselistorder i32* @edi, { 4, 6, 7, 2, 3, 13, 8, 0, 5, 9, 10, 11, 12, 1, 14 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_33bf1() local_unnamed_addr {
dec_label_pc_33bf1:
  %v0_33bf2 = load i32, i32* @eax, align 8
  ret i32 %v0_33bf2
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEPT_RSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_33bf3:
  store i32 %arg1, i32* @eax, align 8
  %v2_33c17 = call i32 @function_33c1e(i32 %arg1)
  ret i32 %v2_33c17
}

define i32 @function_33c1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_33c1e:
  %v0_33c1f = load i32, i32* @eax, align 8
  ret i32 %v0_33c1f
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_33c20:
  %v1_33c3a = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_33c40 = call i32 @unknown_44122(i32 %v1_33c3a)
  store i32 0, i32* @eax, align 8
  %v1_33c4f = call i32 @function_33c56()
  ret i32 %v1_33c4f
}

define i32 @function_33c56() local_unnamed_addr {
dec_label_pc_33c56:
  %v0_33c57 = load i32, i32* @eax, align 8
  ret i32 %v0_33c57
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEE7destroyEPSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33c58:
  %v1_33c7b = call i32 @unknown_67878(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_33c8a = call i32 @function_33c91()
  ret i32 %v1_33c8a
}

define i32 @function_33c91() local_unnamed_addr {
dec_label_pc_33c91:
  %v0_33c92 = load i32, i32* @eax, align 8
  ret i32 %v0_33c92
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE11_M_put_nodeEPSt10_List_nodeISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33c94:
  %v3_33cc6 = call i32 @unknown_69cb2(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  %v1_33cd5 = call i32 @function_33cdc()
  ret i32 %v1_33cd5
}

define i32 @function_33cdc() local_unnamed_addr {
dec_label_pc_33cdc:
  %v0_33cdd = load i32, i32* @eax, align 8
  ret i32 %v0_33cdd
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE8cast_ptrEPbN4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_33cde:
  %eax.global-to-local = alloca i32, align 4
  %v17_33ce1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_33ce1
}

define i32 @function_33ce4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33ce4:
  %v0_33ce4 = load i32, i32* @ebp, align 4
  %v1_33ce4 = add i32 %v0_33ce4, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_33ce4 = inttoptr i32 %v1_33ce4 to i32*
  %v3_33ce4 = load i32, i32* %v2_33ce4, align 4
  %v2_33ce7 = add i32 %v0_33ce4, -28
  %v3_33ce7 = inttoptr i32 %v2_33ce7 to i32*
  store i32 %v3_33ce4, i32* %v3_33ce7, align 4
  %v0_33cea = load i32, i32* @ebp, align 4
  %v1_33cea = add i32 %v0_33cea, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_33cea = inttoptr i32 %v1_33cea to i32*
  %v3_33cea = load i32, i32* %v2_33cea, align 4
  %v2_33ced = add i32 %v0_33cea, -32
  %v3_33ced = inttoptr i32 %v2_33ced to i32*
  store i32 %v3_33cea, i32* %v3_33ced, align 4
  %v0_33cf0 = load i32, i32* @ebp, align 4
  %v1_33cf0 = add i32 %v0_33cf0, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_33cf0 = inttoptr i32 %v1_33cf0 to i8*
  %v3_33cf0 = load i8, i8* %v2_33cf0, align 1
  %v3_33cf4 = add i32 %v0_33cf0, -33
  %v4_33cf4 = inttoptr i32 %v3_33cf4 to i8*
  store i8 %v3_33cf0, i8* %v4_33cf4, align 1
  %v1_33cfd = load i32, i32* @ebp, align 4
  %v2_33cfd = add i32 %v1_33cfd, -12
  %v3_33cfd = inttoptr i32 %v2_33cfd to i32*
  store i32 30, i32* %v3_33cfd, align 4
  %v0_33d02 = load i32, i32* @ebp, align 4
  %v1_33d02 = add i32 %v0_33d02, -32
  %v2_33d02 = inttoptr i32 %v1_33d02 to i32*
  %v3_33d02 = load i32, i32* %v2_33d02, align 4
  store i32 %v3_33d02, i32* @eax, align 8
  %v1_33d05 = add i32 %v0_33d02, -12
  %v2_33d05 = inttoptr i32 %v1_33d05 to i32*
  %v3_33d05 = load i32, i32* %v2_33d05, align 4
  %v3_33d08 = icmp eq i32 %v3_33d05, 30
  br i1 %v3_33d08, label %bb, label %dec_label_pc_33d11

bb:                                               ; preds = %dec_label_pc_33ce4
  %v1_33d0f = call i32 @function_33d16()
  br label %dec_label_pc_33d11

dec_label_pc_33d11:                               ; preds = %bb, %dec_label_pc_33ce4
  %v2_33d0f = phi i32 [ %v1_33d0f, %bb ], [ %v3_33d02, %dec_label_pc_33ce4 ]
  ret i32 %v2_33d0f
}

define i32 @function_33d16() local_unnamed_addr {
dec_label_pc_33d16:
  %v0_33d17 = load i32, i32* @eax, align 8
  ret i32 %v0_33d17
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d18:
  store i32 %arg1, i32* @eax, align 8
  %v2_33d3c = call i32 @function_33d43(i32 %arg1)
  ret i32 %v2_33d3c
}

define i32 @function_33d43(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d43:
  %v0_33d44 = load i32, i32* @eax, align 8
  ret i32 %v0_33d44
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33d46:
  %v1_33d69 = call i32 @unknown_69da6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_33d78 = call i32 @function_33d7f()
  ret i32 %v1_33d78
}

define i32 @function_33d7f() local_unnamed_addr {
dec_label_pc_33d7f:
  %v0_33d80 = load i32, i32* @eax, align 8
  ret i32 %v0_33d80
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33d82:
  ret i32 30
}

define i32 @function_33d9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33d9e:
  %v0_33d9e = load i32, i32* @ebx, align 4
  %v1_33d9e = add i32 %v0_33d9e, 1149886533
  %v2_33d9e = inttoptr i32 %v1_33d9e to i8*
  %v3_33d9e = load i8, i8* %v2_33d9e, align 1
  %v4_33d9e = udiv i8 %v3_33d9e, 16
  %v5_33d9e = mul i8 %v3_33d9e, 16
  %v6_33d9e = or i8 %v4_33d9e, %v5_33d9e
  store i8 %v6_33d9e, i8* %v2_33d9e, align 1
  %v0_33da5 = load i32, i32* @eax, align 8
  %v2_33da5 = add i32 %v0_33da5, 141
  %v16_33da5 = urem i32 %v2_33da5, 256
  %v18_33da5 = and i32 %v0_33da5, -256
  %v19_33da5 = or i32 %v16_33da5, %v18_33da5
  %v0_33da7 = load i32, i32* @ebp, align 4
  %v1_33da7 = add i32 %v0_33da7, 1
  store i32 %v1_33da7, i32* @ebp, align 4
  %v1_33dac = call i32 @unknown_69e0c(i32 %v19_33da5)
  %v0_33db1 = load i32, i32* @ebp, align 4
  %v1_33db1 = add i32 %v0_33db1, -28
  %v2_33db1 = inttoptr i32 %v1_33db1 to i32*
  %v3_33db1 = load i32, i32* %v2_33db1, align 4
  %v1_33db4 = add i32 %v0_33db1, -13
  %v2_33dbe = call i32 @unknown_69e48(i32 %v3_33db1, i32 %v1_33db4)
  %v0_33dc3 = load i32, i32* @ebp, align 4
  %v1_33dc3 = add i32 %v0_33dc3, -13
  %v1_33dc9 = call i32 @unknown_67c7a(i32 %v1_33dc3)
  %v0_33dce = load i32, i32* @ebp, align 4
  %v1_33dce = add i32 %v0_33dce, -28
  %v2_33dce = inttoptr i32 %v1_33dce to i32*
  %v3_33dce = load i32, i32* %v2_33dce, align 4
  %v1_33dd4 = call i32 @unknown_69e9e(i32 %v3_33dce)
  %v0_33dd9 = load i32, i32* @ebp, align 4
  %v1_33dd9 = add i32 %v0_33dd9, -12
  %v2_33dd9 = inttoptr i32 %v1_33dd9 to i32*
  %v3_33dd9 = load i32, i32* %v2_33dd9, align 4
  %v2_33ddc = xor i32 %v3_33dd9, 30
  %v3_33ddc = icmp eq i32 %v2_33ddc, 0
  store i32 %v2_33ddc, i32* @eax, align 8
  br i1 %v3_33ddc, label %bb, label %dec_label_pc_33de5

bb:                                               ; preds = %dec_label_pc_33d9e
  %v1_33de3 = call i32 @function_33dea()
  br label %dec_label_pc_33de5

dec_label_pc_33de5:                               ; preds = %bb, %dec_label_pc_33d9e
  %v2_33de3 = phi i32 [ %v1_33de3, %bb ], [ %v2_33ddc, %dec_label_pc_33d9e ]
  ret i32 %v2_33de3

; uselistorder directives
  uselistorder i32 %v0_33da5, { 1, 0 }
}

define i32 @function_33de8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33de8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33dea() local_unnamed_addr {
dec_label_pc_33dea:
  %v0_33deb = load i32, i32* @eax, align 8
  ret i32 %v0_33deb
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_33dec:
  %v2_33e0c = load i32, i32* %arg2, align 4
  %v2_33e18 = call i32 @unknown_69f44(i32 %arg1, i32 %v2_33e0c)
  store i32 %arg1, i32* @eax, align 8
  %v1_33e2a = call i32 @function_33e31()
  ret i32 %v1_33e2a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_33e31() local_unnamed_addr {
dec_label_pc_33e31:
  %v0_33e32 = load i32, i32* @eax, align 8
  ret i32 %v0_33e32
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33e36:
  %v2_33e60 = call i32 @unknown_69f8e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v1_33e72 = call i32 @function_33e79()
  ret i32 %v1_33e72

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_33e79() local_unnamed_addr {
dec_label_pc_33e79:
  %v0_33e7a = load i32, i32* @eax, align 8
  ret i32 %v0_33e7a
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE22_M_initialize_dispatchISt20_List_const_iteratorISJ_EEEvT_SP_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_33e7e:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_33ed2 = ptrtoint i32* %stack_var_-40 to i32
  %v2_33ed6 = ptrtoint i32* %stack_var_-36 to i32
  %v2_33edc109 = call i32 @unknown_64f60(i32 %v2_33ed6, i32 %v4_33ed2)
  %v4_33ee1110 = trunc i32 %v2_33edc109 to i8
  %v5_33ee1111 = icmp eq i8 %v4_33ee1110, 0
  %v1_33ee3113 = icmp eq i1 %v5_33ee1111, false
  br i1 %v1_33ee3113, label %dec_label_pc_33eaa, label %dec_label_pc_33ee5

dec_label_pc_33eaa:                               ; preds = %dec_label_pc_33e7e, %dec_label_pc_33eaa
  %v1_33eb0 = call i32 @unknown_6a06c(i32 %v2_33ed6)
  %v2_33ebf = call i32 @unknown_6a00e(i32 %arg1, i32 %v1_33eb0)
  %v1_33eca = call i32 @unknown_64fa0(i32 %v2_33ed6)
  %v2_33edc = call i32 @unknown_64f60(i32 %v2_33ed6, i32 %v4_33ed2)
  %v4_33ee1 = trunc i32 %v2_33edc to i8
  %v5_33ee1 = icmp eq i8 %v4_33ee1, 0
  %v1_33ee3 = icmp eq i1 %v5_33ee1, false
  br i1 %v1_33ee3, label %dec_label_pc_33eaa, label %dec_label_pc_33ee5

dec_label_pc_33ee5:                               ; preds = %dec_label_pc_33eaa, %dec_label_pc_33e7e
  store i32 0, i32* @eax, align 8
  %v1_33eef = call i32 @function_33ef6()
  ret i32 %v1_33eef

; uselistorder directives
  uselistorder i32 %v2_33ed6, { 3, 1, 2, 0 }
  uselistorder i32 %v4_33ed2, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_64f60, { 1, 0 }
  uselistorder label %dec_label_pc_33eaa, { 1, 0 }
}

define i32 @function_33ef6() local_unnamed_addr {
dec_label_pc_33ef6:
  %v0_33ef7 = load i32, i32* @eax, align 8
  ret i32 %v0_33ef7
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_33ef8:
  %v1_33f15 = call i32 @unknown_6a118(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_33f24 = call i32 @function_33f2b()
  ret i32 %v1_33f24
}

define i32 @function_33f2b() local_unnamed_addr {
dec_label_pc_33f2b:
  %v0_33f2c = load i32, i32* @eax, align 8
  ret i32 %v0_33f2c
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE8_M_clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_33f2e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v16_33f32 = ptrtoint i32* %stack_var_-60 to i32
  %v2_33f49 = load i32, i32* %arg1, align 4
  %v2_33f6e = ptrtoint i32* %stack_var_-17 to i32
  %v15_33fb2108 = icmp eq i32 %tmp102, %v2_33f49
  %v1_33fb5109 = icmp eq i1 %v15_33fb2108, false
  %v5_33fb8112 = icmp eq i1 %v1_33fb5109, false
  %v1_33fba113 = icmp eq i1 %v5_33fb8112, false
  br i1 %v1_33fba113, label %dec_label_pc_33f50, label %dec_label_pc_33fbc

dec_label_pc_33f50:                               ; preds = %dec_label_pc_33f2e, %dec_label_pc_33f50.dec_label_pc_33f50_crit_edge
  %v1_33f64 = phi i32 [ %v1_33f64.pre, %dec_label_pc_33f50.dec_label_pc_33f50_crit_edge ], [ %v16_33f32, %dec_label_pc_33f2e ]
  %stack_var_-28.0114 = phi i32 [ %v2_33f59, %dec_label_pc_33f50.dec_label_pc_33f50_crit_edge ], [ %v2_33f49, %dec_label_pc_33f2e ]
  %v1_33f59 = inttoptr i32 %stack_var_-28.0114 to i32*
  %v2_33f59 = load i32, i32* %v1_33f59, align 4
  %v1_33f61 = add i32 %stack_var_-28.0114, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_33f64 = inttoptr i32 %v1_33f64 to i32*
  store i32 %v1_33f61, i32* %v2_33f64, align 4
  %v2_33f67 = call i32 @unknown_67b21(i32 %v2_33f59, i32 %stack_var_-28.0114)
  store i32 %v2_33f67, i32* %ebx.global-to-local, align 4
  %v1_33f74 = load i32, i32* @esp, align 4
  %v2_33f74 = add i32 %v1_33f74, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_33f74 = inttoptr i32 %v2_33f74 to i32*
  store i32 %tmp102, i32* %v3_33f74, align 4
  %v1_33f78 = load i32, i32* @esp, align 4
  %v2_33f78 = inttoptr i32 %v1_33f78 to i32*
  store i32 %v2_33f6e, i32* %v2_33f78, align 4
  %v0_33f7b = call i32 @unknown_67a9c()
  %v0_33f80 = load i32, i32* @esp, align 4
  %v0_33f83 = load i32, i32* %ebx.global-to-local, align 4
  %v3_33f83 = inttoptr i32 %v0_33f80 to i32*
  store i32 %v0_33f83, i32* %v3_33f83, align 4
  %v1_33f8a = load i32, i32* @esp, align 4
  %v2_33f8a = inttoptr i32 %v1_33f8a to i32*
  store i32 %v2_33f6e, i32* %v2_33f8a, align 4
  %v0_33f8d = call i32 @unknown_67b86()
  %v1_33f95 = load i32, i32* @esp, align 4
  %v2_33f95 = inttoptr i32 %v1_33f95 to i32*
  store i32 %v2_33f6e, i32* %v2_33f95, align 4
  %v0_33f98 = call i32 @unknown_67aec()
  %v1_33fa0 = load i32, i32* @esp, align 4
  %v2_33fa0 = add i32 %v1_33fa0, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_33fa0 = inttoptr i32 %v2_33fa0 to i32*
  store i32 %stack_var_-28.0114, i32* %v3_33fa0, align 4
  %v1_33fa7 = load i32, i32* @esp, align 4
  %v2_33fa7 = inttoptr i32 %v1_33fa7 to i32*
  store i32 %tmp102, i32* %v2_33fa7, align 4
  %v0_33faa = call i32 @unknown_67bc2()
  %v15_33fb2 = icmp eq i32 %tmp102, %v2_33f59
  %v1_33fb5 = icmp eq i1 %v15_33fb2, false
  %v5_33fb8 = icmp eq i1 %v1_33fb5, false
  %v1_33fba = icmp eq i1 %v5_33fb8, false
  br i1 %v1_33fba, label %dec_label_pc_33f50.dec_label_pc_33f50_crit_edge, label %dec_label_pc_33fbc

dec_label_pc_33f50.dec_label_pc_33f50_crit_edge:  ; preds = %dec_label_pc_33f50
  %v1_33f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_33f50

dec_label_pc_33fbc:                               ; preds = %dec_label_pc_33f50, %dec_label_pc_33f2e
  %v0_33fbc = call i32 @function_33fd5()
  ret i32 %v0_33fbc

; uselistorder directives
  uselistorder i32 %v2_33f59, { 1, 2, 0 }
  uselistorder i32 %stack_var_-28.0114, { 3, 2, 0, 1 }
  uselistorder i32 %tmp102, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_33f50, { 1, 0 }
}

define i32 @function_33fbf() local_unnamed_addr {
dec_label_pc_33fbf:
  %eax.global-to-local = alloca i32, align 4
  %v0_33fbf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33fbf
}

define i32 @function_33fd5() local_unnamed_addr {
dec_label_pc_33fd5:
  %v0_33fd5 = load i32, i32* @ebp, align 4
  %v1_33fd5 = add i32 %v0_33fd5, -12
  %v2_33fd5 = inttoptr i32 %v1_33fd5 to i32*
  %v3_33fd5 = load i32, i32* %v2_33fd5, align 4
  %v2_33fd8 = xor i32 %v3_33fd5, 30
  %v3_33fd8 = icmp eq i32 %v2_33fd8, 0
  store i32 %v2_33fd8, i32* @eax, align 8
  br i1 %v3_33fd8, label %bb, label %dec_label_pc_33fe1

bb:                                               ; preds = %dec_label_pc_33fd5
  %v1_33fdf = call i32 @function_33fe6()
  br label %dec_label_pc_33fe1

dec_label_pc_33fe1:                               ; preds = %bb, %dec_label_pc_33fd5
  %v2_33fdf = phi i32 [ %v1_33fdf, %bb ], [ %v2_33fd8, %dec_label_pc_33fd5 ]
  ret i32 %v2_33fdf
}

define i32 @function_33fe6() local_unnamed_addr {
dec_label_pc_33fe6:
  %v0_33fea = load i32, i32* @eax, align 8
  ret i32 %v0_33fea
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EEC1ERKSV_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33fec:
  %v1_34011 = call i32 @unknown_6a236(i32 %arg2)
  %v3_34027 = call i32 @unknown_6a264(i32 %arg1, i32 %arg2, i32 %v1_34011)
  %v1_34032 = call i32 @unknown_6a2ea(i32 %arg2)
  %v1_34037 = icmp eq i32 %v1_34032, 0
  %v1_34039 = icmp eq i1 %v1_34037, false
  %v5_3403c = icmp eq i1 %v1_34039, false
  br i1 %v5_3403c, label %bb, label %dec_label_pc_34044

bb:                                               ; preds = %dec_label_pc_33fec
  %v1_3403e = call i32 @function_340eb()
  br label %dec_label_pc_34044

dec_label_pc_34044:                               ; preds = %bb, %dec_label_pc_33fec
  %v1_3404a = call i32 @unknown_6a49a(i32 %arg1)
  %v1_34057 = call i32 @unknown_6748c(i32 %arg1)
  %v1_34064 = call i32 @unknown_6a46a(i32 %arg2)
  %v3_34077 = call i32 @unknown_6a31a(i32 %arg1, i32 %v1_34064, i32 %v1_34057)
  %v2_3407c = inttoptr i32 %v1_3404a to i32*
  store i32 %v3_34077, i32* %v2_3407c, align 4
  %v1_34084 = call i32 @unknown_69e58(i32 %arg1)
  %v1_34091 = call i32 @unknown_6a49a(i32 %arg1)
  %v1_34096 = inttoptr i32 %v1_34091 to i32*
  %v2_34096 = load i32, i32* %v1_34096, align 4
  %v1_3409b = call i32 @unknown_6a4ca(i32 %v2_34096)
  %v2_340a0 = inttoptr i32 %v1_34084 to i32*
  store i32 %v1_3409b, i32* %v2_340a0, align 4
  %v1_340a8 = call i32 @unknown_69a7a(i32 %arg1)
  %v1_340b5 = call i32 @unknown_6a49a(i32 %arg1)
  %v1_340ba = inttoptr i32 %v1_340b5 to i32*
  %v2_340ba = load i32, i32* %v1_340ba, align 4
  %v1_340bf = call i32 @unknown_6a4ff(i32 %v2_340ba)
  %v2_340c4 = inttoptr i32 %v1_340a8 to i32*
  store i32 %v1_340bf, i32* %v2_340c4, align 4
  %v1_340c9 = add i32 %arg2, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_340c9 = inttoptr i32 %v1_340c9 to i32*
  %v3_340c9 = load i32, i32* %v2_340c9, align 4
  %v2_340cf = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v3_340cf = inttoptr i32 %v2_340cf to i32*
  store i32 %v3_340c9, i32* %v3_340cf, align 4
  %v0_340d2 = call i32 @function_340eb()
  ret i32 %v0_340d2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_6a49a, { 2, 1, 0 }
  uselistorder i32 ()* @function_340eb, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3, 5, 7, 6, 8 }
}

define i32 @function_340d5() local_unnamed_addr {
dec_label_pc_340d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_340d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_340d5
}

define i32 @function_340eb() local_unnamed_addr {
dec_label_pc_340eb:
  %v0_340eb = load i32, i32* @ebp, align 4
  %v1_340eb = add i32 %v0_340eb, -12
  %v2_340eb = inttoptr i32 %v1_340eb to i32*
  %v3_340eb = load i32, i32* %v2_340eb, align 4
  %v2_340ee = xor i32 %v3_340eb, 30
  %v3_340ee = icmp eq i32 %v2_340ee, 0
  store i32 %v2_340ee, i32* @eax, align 8
  br i1 %v3_340ee, label %bb, label %dec_label_pc_340f7

bb:                                               ; preds = %dec_label_pc_340eb
  %v1_340f5 = call i32 @function_340fc()
  br label %dec_label_pc_340f7

dec_label_pc_340f7:                               ; preds = %bb, %dec_label_pc_340eb
  %v2_340f5 = phi i32 [ %v1_340f5, %bb ], [ %v2_340ee, %dec_label_pc_340eb ]
  ret i32 %v2_340f5
}

define i32 @function_340fc() local_unnamed_addr {
dec_label_pc_340fc:
  %v0_34102 = load i32, i32* @eax, align 8
  ret i32 %v0_34102
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_34104:
  %v1_34121 = call i32 @unknown_6a64c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_34130 = call i32 @function_34137()
  ret i32 %v1_34130
}

define i32 @function_34137() local_unnamed_addr {
dec_label_pc_34137:
  %v0_34138 = load i32, i32* @eax, align 8
  ret i32 %v0_34138
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3413a:
  %v10_34199 = icmp eq i32 %arg2, 0
  %v1_3419d = icmp eq i1 %v10_34199, false
  %v2_3419d = zext i1 %v1_3419d to i32
  ret i32 %v2_3419d
}

define i32 @function_341a2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_341a2:
  %v0_341a4 = load i32, i32* @ebp, align 4
  %v1_341a4 = add i32 %v0_341a4, -12
  %v2_341a4 = inttoptr i32 %v1_341a4 to i32*
  %v3_341a4 = load i32, i32* %v2_341a4, align 4
  %v2_341a7 = xor i32 %v3_341a4, 30
  %v3_341a7 = icmp eq i32 %v2_341a7, 0
  store i32 %v2_341a7, i32* @eax, align 8
  br i1 %v3_341a7, label %bb, label %dec_label_pc_341b0

bb:                                               ; preds = %dec_label_pc_341a2
  %v1_341ae = call i32 @function_341b5()
  br label %dec_label_pc_341b0

dec_label_pc_341b0:                               ; preds = %bb, %dec_label_pc_341a2
  %v3_341ae = phi i32 [ %v1_341ae, %bb ], [ %v2_341a7, %dec_label_pc_341a2 ]
  ret i32 %v3_341ae
}

define i32 @function_341b5() local_unnamed_addr {
dec_label_pc_341b5:
  %v0_341b6 = load i32, i32* @eax, align 8
  ret i32 %v0_341b6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_341b8:
  %v1_341d8 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_341d8 = inttoptr i32 %v1_341d8 to i32*
  %v3_341d8 = load i32, i32* %v2_341d8, align 4
  %v2_341e5 = call i32 @unknown_6773c(i32 %arg1, i32 %v3_341d8)
  store i32 %arg1, i32* @eax, align 8
  %v1_341f7 = call i32 @function_341fe()
  ret i32 %v1_341f7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_341fe() local_unnamed_addr {
dec_label_pc_341fe:
  %v0_341ff = load i32, i32* @eax, align 8
  ret i32 %v0_341ff
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34202:
  ret i32 %arg2
}

define i32 @function_34213(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_34213:
  %v1_3421a = load i32, i32* @ebp, align 4
  %v2_3421a = add i32 %v1_3421a, -12
  %v3_3421a = inttoptr i32 %v2_3421a to i32*
  store i32 30, i32* %v3_3421a, align 4
  %v0_3421f = load i32, i32* @ebp, align 4
  %v1_3421f = add i32 %v0_3421f, -32
  %v2_3421f = inttoptr i32 %v1_3421f to i32*
  %v3_3421f = load i32, i32* %v2_3421f, align 4
  %v1_34222 = add i32 %v3_3421f, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_34222 = inttoptr i32 %v1_34222 to i32*
  %v3_34222 = load i32, i32* %v2_34222, align 4
  %v1_34229 = add i32 %v0_3421f, -28
  %v2_34229 = inttoptr i32 %v1_34229 to i32*
  %v3_34229 = load i32, i32* %v2_34229, align 4
  %v2_3422f = call i32 @unknown_6a774(i32 %v3_34229, i32 %v3_34222)
  %v0_34234 = load i32, i32* @ebp, align 4
  %v1_34234 = add i32 %v0_34234, -28
  %v2_34234 = inttoptr i32 %v1_34234 to i32*
  %v3_34234 = load i32, i32* %v2_34234, align 4
  store i32 %v3_34234, i32* @eax, align 8
  %v1_34237 = add i32 %v0_34234, -12
  %v2_34237 = inttoptr i32 %v1_34237 to i32*
  %v3_34237 = load i32, i32* %v2_34237, align 4
  %v3_3423a = icmp eq i32 %v3_34237, 30
  br i1 %v3_3423a, label %bb, label %dec_label_pc_34243

bb:                                               ; preds = %dec_label_pc_34213
  %v1_34241 = call i32 @function_34248()
  br label %dec_label_pc_34243

dec_label_pc_34243:                               ; preds = %bb, %dec_label_pc_34213
  %v4_34241 = phi i32 [ %v1_34241, %bb ], [ %v3_34234, %dec_label_pc_34213 ]
  ret i32 %v4_34241
}

define i32 @function_34248() local_unnamed_addr {
dec_label_pc_34248:
  %v0_34249 = load i32, i32* @eax, align 8
  ret i32 %v0_34249
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3424c:
  ret i32 %arg1
}

define i32 @function_34292(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34292:
  %v0_34293 = load i32, i32* @eax, align 8
  ret i32 %v0_34293
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_34296:
  %ebp.global-to-local = alloca i32, align 4
  %v0_34296 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_34296, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISJ_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_342ca:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_342ea = inttoptr i32 %arg2 to i32*
  %v2_342ea = load i32, i32* %v1_342ea, align 4
  store i32 %v2_342ea, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_342fb = call i32 @function_34302(i32 %arg2, i32 %tmp101)
  ret i32 %v3_342fb
}

define i32 @function_34302(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34302:
  %v0_34303 = load i32, i32* @eax, align 8
  ret i32 %v0_34303
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEEC1EPSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34304:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_34327 = call i32 @unknown_4451a(i32 %tmp102)
  store i32 ptrtoint (%vtable_386d0_type* @global_var_386d0.2604 to i32), i32* %arg1, align 4
  %v2_3433b = add i32 %tmp102, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_3433b = inttoptr i32 %v2_3433b to i32*
  store i32 %arg2, i32* %v3_3433b, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_34352:
  %v1_3436d = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_34373 = call i32 @unknown_62870(i32 %v1_3436d)
  %v1_3437e = call i32 @unknown_6283a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_3438d = call i32 @function_343ad()
  store i32 %v1_3438d, i32* @eax, align 8
  %v0_3438f = call i32 @function_343a8()
  ret i32 %v0_3438f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34392() local_unnamed_addr {
dec_label_pc_34392:
  %eax.global-to-local = alloca i32, align 4
  %v0_34392 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34392
}

define i32 @function_343a8() local_unnamed_addr {
dec_label_pc_343a8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_343ad() local_unnamed_addr {
dec_label_pc_343ad:
  %v0_343b2 = load i32, i32* @eax, align 8
  ret i32 %v0_343b2
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSF_jNS_8functionIFbSF_SF_jEEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_343b3:
  %v1_343ce = icmp eq i32 %arg1, 0
  br i1 %v1_343ce, label %bb, label %dec_label_pc_343d2

bb:                                               ; preds = %dec_label_pc_343b3
  %v2_343d0 = call i32 @function_343e2(i32 0)
  br label %dec_label_pc_343d2

dec_label_pc_343d2:                               ; preds = %bb, %dec_label_pc_343b3
  %v1_343d5 = call i32 @unknown_68705(i32 %arg1)
  ret i32 %v1_343d5
}

define i32 @function_343e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_343e2:
  %v0_343e2 = load i32, i32* @ebp, align 4
  %v1_343e2 = add i32 %v0_343e2, -12
  %v2_343e2 = inttoptr i32 %v1_343e2 to i32*
  %v3_343e2 = load i32, i32* %v2_343e2, align 4
  ret i32 %v3_343e2
}

define i32 @function_343e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_343e8:
  %zf.global-to-local = alloca i1, align 1
  %v0_343e8 = load i32, i32* @eax, align 8
  %v1_343e8 = trunc i32 %v0_343e8 to i8
  %v2_343e8 = load i1, i1* @cf, align 1
  %v3_343e8 = zext i1 %v2_343e8 to i8
  %v4_343e8 = add i8 %v3_343e8, %v1_343e8
  %v13_343e8 = icmp eq i8 %v4_343e8, 0
  store i1 %v13_343e8, i1* %zf.global-to-local, align 1
  %v22_343e8 = zext i8 %v4_343e8 to i32
  %v24_343e8 = and i32 %v0_343e8, -256
  %v25_343e8 = or i32 %v22_343e8, %v24_343e8
  store i32 %v25_343e8, i32* @eax, align 8
  %v1_343ea = inttoptr i32 %v25_343e8 to i8*
  %v2_343ea = load i8, i8* %v1_343ea, align 1
  %v5_343ea = add i8 %v2_343ea, %v4_343e8
  %v15_343ea = icmp eq i8 %v5_343ea, 0
  store i1 %v15_343ea, i1* %zf.global-to-local, align 1
  store i8 %v5_343ea, i8* %v1_343ea, align 1
  %v0_343ec = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_343ec, label %bb, label %dec_label_pc_343e8.dec_label_pc_343ee_crit_edge

dec_label_pc_343e8.dec_label_pc_343ee_crit_edge:  ; preds = %dec_label_pc_343e8
  %v2_343ec.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_343ee

bb:                                               ; preds = %dec_label_pc_343e8
  %v1_343ec = call i32 @function_343f3()
  br label %dec_label_pc_343ee

dec_label_pc_343ee:                               ; preds = %dec_label_pc_343e8.dec_label_pc_343ee_crit_edge, %bb
  %v2_343ec = phi i32 [ %v2_343ec.pre, %dec_label_pc_343e8.dec_label_pc_343ee_crit_edge ], [ %v1_343ec, %bb ]
  ret i32 %v2_343ec

; uselistorder directives
  uselistorder label %dec_label_pc_343ee, { 1, 0 }
}

define i32 @function_343f3() local_unnamed_addr {
dec_label_pc_343f3:
  %v0_343f8 = load i32, i32* @eax, align 8
  ret i32 %v0_343f8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEEC1EPSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_343fa:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_3441d = call i32 @unknown_44610(i32 %tmp101)
  store i32 ptrtoint (%vtable_38618_type* @global_var_38618.2605 to i32), i32* %arg1, align 4
  %v2_34431 = add i32 %tmp101, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_34431 = inttoptr i32 %v2_34431 to i32*
  store i32 %arg2, i32* %v3_34431, align 4
  store i32 0, i32* @eax, align 8
  %v1_3443e = call i32 @function_34445()
  ret i32 %v1_3443e

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_34445() local_unnamed_addr {
dec_label_pc_34445:
  %v0_34446 = load i32, i32* @eax, align 8
  ret i32 %v0_34446
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_34448:
  %v1_34463 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_34469 = call i32 @unknown_5fb8a(i32 %v1_34463)
  %v1_34474 = call i32 @unknown_5fb00(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_34483 = call i32 @function_344a3()
  store i32 %v1_34483, i32* @eax, align 8
  %v0_34485 = call i32 @function_3449e()
  ret i32 %v0_34485

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34488() local_unnamed_addr {
dec_label_pc_34488:
  %eax.global-to-local = alloca i32, align 4
  %v0_34488 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34488
}

define i32 @function_3449e() local_unnamed_addr {
dec_label_pc_3449e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_344a3() local_unnamed_addr {
dec_label_pc_344a3:
  %v0_344a8 = load i32, i32* @eax, align 8
  ret i32 %v0_344a8
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_344a9:
  %v1_344c4 = icmp eq i32 %arg1, 0
  br i1 %v1_344c4, label %bb, label %dec_label_pc_344c8

bb:                                               ; preds = %dec_label_pc_344a9
  %v2_344c6 = call i32 @function_344d8(i32 0)
  br label %dec_label_pc_344c8

dec_label_pc_344c8:                               ; preds = %bb, %dec_label_pc_344a9
  %v1_344cb = call i32 @unknown_688f1(i32 %arg1)
  ret i32 %v1_344cb
}

define i32 @function_344d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_344d8:
  %v0_344d8 = load i32, i32* @ebp, align 4
  %v1_344d8 = add i32 %v0_344d8, -12
  %v2_344d8 = inttoptr i32 %v1_344d8 to i32*
  %v3_344d8 = load i32, i32* %v2_344d8, align 4
  ret i32 %v3_344d8
}

define i32 @function_344e0() local_unnamed_addr {
dec_label_pc_344e0:
  %zf.global-to-local = alloca i1, align 1
  %v2_344e0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_344e0 = load i32, i32* @eax, align 8
  %v4_344e0 = trunc i32 %v3_344e0 to i8
  %v5_344e0 = add i8 %v4_344e0, %v2_344e0
  %v15_344e0 = icmp eq i8 %v5_344e0, 0
  store i1 %v15_344e0, i1* %zf.global-to-local, align 1
  %v21_344e0 = inttoptr i32 %v3_344e0 to i8*
  store i8 %v5_344e0, i8* %v21_344e0, align 1
  %v0_344e2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_344e2, label %bb, label %dec_label_pc_344e0.dec_label_pc_344e4_crit_edge

dec_label_pc_344e0.dec_label_pc_344e4_crit_edge:  ; preds = %dec_label_pc_344e0
  %v2_344e2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_344e4

bb:                                               ; preds = %dec_label_pc_344e0
  %v1_344e2 = call i32 @function_344e9()
  br label %dec_label_pc_344e4

dec_label_pc_344e4:                               ; preds = %dec_label_pc_344e0.dec_label_pc_344e4_crit_edge, %bb
  %v2_344e2 = phi i32 [ %v2_344e2.pre, %dec_label_pc_344e0.dec_label_pc_344e4_crit_edge ], [ %v1_344e2, %bb ]
  ret i32 %v2_344e2

; uselistorder directives
  uselistorder label %dec_label_pc_344e4, { 1, 0 }
}

define i32 @function_344e9() local_unnamed_addr {
dec_label_pc_344e9:
  %v0_344ee = load i32, i32* @eax, align 8
  ret i32 %v0_344ee
}

define i32 @_ZNK5boost8optionalIbEntEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_344f0:
  %v1_3450d = call i32 @unknown_63122(i32 %arg1)
  %v1_34512 = xor i32 %v1_3450d, 1
  store i32 %v1_34512, i32* @eax, align 8
  %v1_3451f = call i32 @function_34526()
  ret i32 %v1_3451f
}

define i32 @function_34526() local_unnamed_addr {
dec_label_pc_34526:
  %v0_34527 = load i32, i32* @eax, align 8
  ret i32 %v0_34527
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE12slot_invokerclERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEE() local_unnamed_addr {
dec_label_pc_34528:
  %eax.global-to-local = alloca i32, align 4
  %v17_3452b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3452b
}

define i32 @function_3452e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3452e:
  %v0_3452e = load i32, i32* @ebp, align 4
  %v1_3452e = add i32 %v0_3452e, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3452e = inttoptr i32 %v1_3452e to i32*
  %v3_3452e = load i32, i32* %v2_3452e, align 4
  %v2_34531 = add i32 %v0_3452e, -28
  %v3_34531 = inttoptr i32 %v2_34531 to i32*
  store i32 %v3_3452e, i32* %v3_34531, align 4
  %v0_34534 = load i32, i32* @ebp, align 4
  %v1_34534 = add i32 %v0_34534, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_34534 = inttoptr i32 %v1_34534 to i32*
  %v3_34534 = load i32, i32* %v2_34534, align 4
  %v2_34537 = add i32 %v0_34534, -32
  %v3_34537 = inttoptr i32 %v2_34537 to i32*
  store i32 %v3_34534, i32* %v3_34537, align 4
  %v1_34540 = load i32, i32* @ebp, align 4
  %v2_34540 = add i32 %v1_34540, -12
  %v3_34540 = inttoptr i32 %v2_34540 to i32*
  store i32 30, i32* %v3_34540, align 4
  %v0_34545 = load i32, i32* @ebp, align 4
  %v1_34545 = add i32 %v0_34545, -16
  %v2_34545 = inttoptr i32 %v1_34545 to i32*
  store i32 0, i32* %v2_34545, align 4
  %v0_3454c = load i32, i32* @ebp, align 4
  %v1_3454c = add i32 %v0_3454c, -16
  %v2_3454c = inttoptr i32 %v1_3454c to i32*
  %v3_3454c = load i32, i32* %v2_3454c, align 4
  ret i32 %v3_3454c
}

define i32 @function_34554(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34554:
  %v0_34554 = load i32, i32* @ebp, align 4
  %v1_34554 = add i32 %v0_34554, 1
  %v9_34554 = icmp eq i32 %v1_34554, 0
  store i32 %v1_34554, i32* @ebp, align 4
  %v0_34555 = load i32, i32* @ecx, align 4
  %v2_34555 = icmp eq i32 %v0_34555, 1
  %v4_34555 = or i1 %v9_34554, %v2_34555
  br i1 %v4_34555, label %dec_label_pc_34554.dec_label_pc_34557_crit_edge, label %bb

dec_label_pc_34554.dec_label_pc_34557_crit_edge:  ; preds = %dec_label_pc_34554
  br label %dec_label_pc_34557

bb:                                               ; preds = %dec_label_pc_34554
  %v6_34555 = call i32 @function_344e0()
  %v0_3455a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_34557

dec_label_pc_34557:                               ; preds = %dec_label_pc_34554.dec_label_pc_34557_crit_edge, %bb
  %v0_3455a = phi i32 [ %v1_34554, %dec_label_pc_34554.dec_label_pc_34557_crit_edge ], [ %v0_3455a.pre, %bb ]
  %v1_3455a = add i32 %v0_3455a, -28
  %v2_3455a = inttoptr i32 %v1_3455a to i32*
  %v3_3455a = load i32, i32* %v2_3455a, align 4
  %v1_34560 = call i32 @unknown_6aad2(i32 %v3_3455a)
  store i32 %v1_34560, i32* @eax, align 8
  %v0_34565 = load i32, i32* @ebp, align 4
  %v1_34565 = add i32 %v0_34565, -12
  %v2_34565 = inttoptr i32 %v1_34565 to i32*
  %v3_34565 = load i32, i32* %v2_34565, align 4
  %v3_34568 = icmp eq i32 %v3_34565, 30
  br i1 %v3_34568, label %bb5, label %dec_label_pc_34571

bb5:                                              ; preds = %dec_label_pc_34557
  %v1_3456f = call i32 @function_34576()
  br label %dec_label_pc_34571

dec_label_pc_34571:                               ; preds = %bb5, %dec_label_pc_34557
  %v2_3456f = phi i32 [ %v1_3456f, %bb5 ], [ %v1_34560, %dec_label_pc_34557 ]
  ret i32 %v2_3456f

; uselistorder directives
  uselistorder label %dec_label_pc_34557, { 1, 0 }
}

define i32 @function_34576() local_unnamed_addr {
dec_label_pc_34576:
  %v0_34577 = load i32, i32* @eax, align 8
  ret i32 %v0_34577
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE5resetERKb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34578:
  %v2_345a2 = call i32 @unknown_63072(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_345b1 = call i32 @function_345b8()
  ret i32 %v1_345b1
}

define i32 @function_345b8() local_unnamed_addr {
dec_label_pc_345b8:
  %v0_345b9 = load i32, i32* @eax, align 8
  ret i32 %v0_345b9
}

define i32 @_ZN5boost15optional_detail15aligned_storageIbE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_345ba:
  store i32 %arg1, i32* @eax, align 8
  %v2_345de = call i32 @function_345e5(i32 %arg1)
  ret i32 %v2_345de
}

define i32 @function_345e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_345e5:
  %v0_345e6 = load i32, i32* @eax, align 8
  ret i32 %v0_345e6
}

define i32 @_ZN5boost15optional_detail13optional_baseIbE5resetEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_345e8:
  %v1_34605 = call i32 @unknown_5fc00(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_34614 = call i32 @function_3461b()
  ret i32 %v1_34614
}

define i32 @function_3461b() local_unnamed_addr {
dec_label_pc_3461b:
  %v0_3461c = load i32, i32* @eax, align 8
  ret i32 %v0_3461c
}

define i32 @_ZNK5boost8signals26detail21lock_weak_ptr_visitorclINS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKT_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3461e:
  %stack_var_-24 = alloca i32, align 4
  %v2_34642 = ptrtoint i32* %stack_var_-24 to i32
  %v2_3464f = call i32 @unknown_49290(i32 %v2_34642, i32 %arg3)
  %v2_34664 = call i32 @unknown_6ac3e(i32 %arg1, i32 %v2_34642)
  %v1_3466f = call i32 @unknown_46e68(i32 %v2_34642)
  store i32 %arg1, i32* @eax, align 8
  %v1_34681 = call i32 @function_346a1()
  store i32 %v1_34681, i32* @eax, align 8
  %v0_34683 = call i32 @function_3469c()
  ret i32 %v0_34683

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34686() local_unnamed_addr {
dec_label_pc_34686:
  %eax.global-to-local = alloca i32, align 4
  %v0_34686 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34686
}

define i32 @function_3469c() local_unnamed_addr {
dec_label_pc_3469c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_346a1() local_unnamed_addr {
dec_label_pc_346a1:
  %v0_346a5 = load i32, i32* @eax, align 8
  ret i32 %v0_346a5
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8weak_ptrIvEEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_346a8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_346c2 = load i32, i32* %arg1, align 4
  store i32 %v2_346c2, i32* @eax, align 8
  %v2_346ce = call i32 @function_346d5(i32 %tmp99)
  ret i32 %v2_346ce
}

define i32 @function_346d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_346d5:
  %v0_346d6 = load i32, i32* @eax, align 8
  ret i32 %v0_346d6
}

define i32 @_ZNK5boost8signals26detail21lock_weak_ptr_visitorclINS1_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EERKT_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_346d8:
  %stack_var_-20 = alloca i32, align 4
  %v2_346fc = ptrtoint i32* %stack_var_-20 to i32
  %v2_34709 = call i32 @unknown_46d9a(i32 %v2_346fc, i32 %arg3)
  %v2_3471e = call i32 @unknown_6ad76(i32 %arg1, i32 %v2_346fc)
  ret i32 %v2_346fc
}

define i32 @function_34728(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34728:
  %v0_34728 = load i32, i32* @eax, align 8
  %v11_34728 = and i32 %v0_34728, -24
  %v1_3472a = lshr i32 %v11_34728, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3472a = trunc i32 %v1_3472a to i8
  %v5_3472a = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v6_3472a = and i8 %v2_3472a, %v5_3472a
  %v12_3472a = zext i8 %v6_3472a to i32
  %v14_3472a = shl i32 %v12_3472a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v15_3472a = and i32 %v0_34728, -65304
  %v16_3472a = or i32 %v14_3472a, %v15_3472a
  %v1_3472c = inttoptr i32 %v16_3472a to i32*
  %v2_3472c = load i32, i32* %v1_3472c, align 4
  %v4_3472c = add i32 %v16_3472a, %v2_3472c
  store i32 %v4_3472c, i32* %v1_3472c, align 4
  %v0_3472e = load i32, i32* @ebp, align 4
  %v1_3472e = add i32 %v0_3472e, -28
  %v2_3472e = inttoptr i32 %v1_3472e to i32*
  %v3_3472e = load i32, i32* %v2_3472e, align 4
  store i32 %v3_3472e, i32* @eax, align 8
  %v1_34731 = add i32 %v0_3472e, -12
  %v2_34731 = inttoptr i32 %v1_34731 to i32*
  %v3_34731 = load i32, i32* %v2_34731, align 4
  %v3_34734 = icmp eq i32 %v3_34731, 30
  br i1 %v3_34734, label %bb, label %dec_label_pc_3473d

bb:                                               ; preds = %dec_label_pc_34728
  %v1_3473b = call i32 @function_3475b()
  store i32 %v1_3473b, i32* @eax, align 8
  br label %dec_label_pc_3473d

dec_label_pc_3473d:                               ; preds = %bb, %dec_label_pc_34728
  %v0_3473d = call i32 @function_34756()
  ret i32 %v0_3473d
}

define i32 @function_34740() local_unnamed_addr {
dec_label_pc_34740:
  %eax.global-to-local = alloca i32, align 4
  %v0_34740 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34740
}

define i32 @function_34756() local_unnamed_addr {
dec_label_pc_34756:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3475b() local_unnamed_addr {
dec_label_pc_3475b:
  %v0_3475f = load i32, i32* @eax, align 8
  ret i32 %v0_3475f
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8signals26detail21foreign_void_weak_ptrEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_34762:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_3477c = load i32, i32* %arg1, align 4
  store i32 %v2_3477c, i32* @eax, align 8
  %v2_34788 = call i32 @function_3478f(i32 %tmp99)
  ret i32 %v2_34788
}

define i32 @function_3478f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3478f:
  %v0_34790 = load i32, i32* @eax, align 8
  ret i32 %v0_34790
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_10shared_ptrIvEEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_34792:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_347ac = load i32, i32* %arg1, align 4
  store i32 %v2_347ac, i32* @eax, align 8
  %v2_347b8 = call i32 @function_347bf(i32 %tmp99)
  ret i32 %v2_347b8
}

define i32 @function_347bf(i32 %arg1) local_unnamed_addr {
dec_label_pc_347bf:
  %v0_347c0 = load i32, i32* @eax, align 8
  ret i32 %v0_347c0
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8signals26detail23foreign_void_shared_ptrEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_347c2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_347dc = load i32, i32* %arg1, align 4
  store i32 %v2_347dc, i32* @eax, align 8
  %v2_347e8 = call i32 @function_347ef(i32 %tmp99)
  ret i32 %v2_347e8
}

define i32 @function_347ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_347ef:
  %v0_347f0 = load i32, i32* @eax, align 8
  ret i32 %v0_347f0
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_10shared_ptrIvEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_347f2:
  %v2_3480d = load i32, i32* %arg1, align 4
  %v1_3480f = icmp eq i32 %v2_3480d, 0
  br i1 %v1_3480f, label %bb, label %dec_label_pc_34813

bb:                                               ; preds = %dec_label_pc_347f2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_34811 = call i32 @function_34823(i32 %tmp100)
  br label %dec_label_pc_34813

dec_label_pc_34813:                               ; preds = %bb, %dec_label_pc_347f2
  %v1_34816 = call i32 @unknown_4703c(i32 %v2_3480d)
  ret i32 %v1_34816

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_34823(i32 %arg1) local_unnamed_addr {
dec_label_pc_34823:
  %v0_34823 = load i32, i32* @ebp, align 4
  %v1_34823 = add i32 %v0_34823, -12
  %v2_34823 = inttoptr i32 %v1_34823 to i32*
  %v3_34823 = load i32, i32* %v2_34823, align 4
  %v2_34826 = xor i32 %v3_34823, 30
  %v3_34826 = icmp eq i32 %v2_34826, 0
  store i32 %v2_34826, i32* @eax, align 8
  br i1 %v3_34826, label %bb, label %dec_label_pc_3482f

bb:                                               ; preds = %dec_label_pc_34823
  %v1_3482d = call i32 @function_34834()
  br label %dec_label_pc_3482f

dec_label_pc_3482f:                               ; preds = %bb, %dec_label_pc_34823
  %v2_3482d = phi i32 [ %v1_3482d, %bb ], [ %v2_34826, %dec_label_pc_34823 ]
  ret i32 %v2_3482d
}

define i32 @function_34834() local_unnamed_addr {
dec_label_pc_34834:
  %v0_34839 = load i32, i32* @eax, align 8
  ret i32 %v0_34839
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_8signals26detail23foreign_void_shared_ptrEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_3483a:
  %v2_34855 = load i32, i32* %arg1, align 4
  %v1_34857 = icmp eq i32 %v2_34855, 0
  br i1 %v1_34857, label %bb, label %dec_label_pc_3485b

bb:                                               ; preds = %dec_label_pc_3483a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_34859 = call i32 @function_3486b(i32 %tmp100)
  br label %dec_label_pc_3485b

dec_label_pc_3485b:                               ; preds = %bb, %dec_label_pc_3483a
  %v1_3485e = call i32 @unknown_46eb2(i32 %v2_34855)
  ret i32 %v1_3485e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3486b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3486b:
  %v0_3486b = load i32, i32* @ebp, align 4
  %v1_3486b = add i32 %v0_3486b, -12
  %v2_3486b = inttoptr i32 %v1_3486b to i32*
  %v3_3486b = load i32, i32* %v2_3486b, align 4
  %v2_3486e = xor i32 %v3_3486b, 30
  %v3_3486e = icmp eq i32 %v2_3486e, 0
  store i32 %v2_3486e, i32* @eax, align 8
  br i1 %v3_3486e, label %bb, label %dec_label_pc_34877

bb:                                               ; preds = %dec_label_pc_3486b
  %v1_34875 = call i32 @function_3487c()
  br label %dec_label_pc_34877

dec_label_pc_34877:                               ; preds = %bb, %dec_label_pc_3486b
  %v2_34875 = phi i32 [ %v1_34875, %bb ], [ %v2_3486e, %dec_label_pc_3486b ]
  ret i32 %v2_34875
}

define i32 @function_3487c() local_unnamed_addr {
dec_label_pc_3487c:
  %v0_34881 = load i32, i32* @eax, align 8
  ret i32 %v0_34881
}

define i32 @_ZNK5boost8signals26detail24expired_weak_ptr_visitorclINS_8weak_ptrIvEEEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34882:
  ret i32 %arg2
}

define i32 @function_34894(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34894:
  %v1_3489a = load i32, i32* @ebp, align 4
  %v2_3489a = add i32 %v1_3489a, -12
  %v3_3489a = inttoptr i32 %v2_3489a to i32*
  store i32 30, i32* %v3_3489a, align 4
  %v0_3489f = load i32, i32* @ebp, align 4
  %v1_3489f = add i32 %v0_3489f, -32
  %v2_3489f = inttoptr i32 %v1_3489f to i32*
  %v3_3489f = load i32, i32* %v2_3489f, align 4
  %v1_348a5 = call i32 @unknown_49540(i32 %v3_3489f)
  store i32 %v1_348a5, i32* @eax, align 8
  %v0_348aa = load i32, i32* @ebp, align 4
  %v1_348aa = add i32 %v0_348aa, -12
  %v2_348aa = inttoptr i32 %v1_348aa to i32*
  %v3_348aa = load i32, i32* %v2_348aa, align 4
  %v3_348ad = icmp eq i32 %v3_348aa, 30
  br i1 %v3_348ad, label %bb, label %dec_label_pc_348b6

bb:                                               ; preds = %dec_label_pc_34894
  %v1_348b4 = call i32 @function_348bb()
  br label %dec_label_pc_348b6

dec_label_pc_348b6:                               ; preds = %bb, %dec_label_pc_34894
  %v2_348b4 = phi i32 [ %v1_348b4, %bb ], [ %v1_348a5, %dec_label_pc_34894 ]
  ret i32 %v2_348b4
}

define i32 @function_348bb() local_unnamed_addr {
dec_label_pc_348bb:
  %v0_348bc = load i32, i32* @eax, align 8
  ret i32 %v0_348bc
}

define i32 @_ZNK5boost8signals26detail24expired_weak_ptr_visitorclINS1_21foreign_void_weak_ptrEEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_348be:
  %v1_348e1 = call i32 @unknown_46fd6(i32 %arg2)
  store i32 %v1_348e1, i32* @eax, align 8
  %v1_348f0 = call i32 @function_348f7()
  ret i32 %v1_348f0
}

define i32 @function_348f7() local_unnamed_addr {
dec_label_pc_348f7:
  %v0_348f8 = load i32, i32* @eax, align 8
  ret i32 %v0_348f8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_348f9:
  %stack_var_-17 = alloca i32, align 4
  %v1_34916 = call i32 @unknown_6b014(i32 %arg1)
  %v2_3491f = ptrtoint i32* %stack_var_-17 to i32
  %v2_34925 = call i32 @unknown_69515(i32 %v2_3491f, i32 %v1_34916)
  store i32 %v2_34925, i32* @eax, align 8
  %v1_34934 = call i32 @function_3493b()
  ret i32 %v1_34934
}

define i32 @function_3493b() local_unnamed_addr {
dec_label_pc_3493b:
  %v0_3493c = load i32, i32* @eax, align 8
  ret i32 %v0_3493c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3493d:
  %v1_34957 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_34957 = inttoptr i32 %v1_34957 to i32*
  %v3_34957 = load i32, i32* %v2_34957, align 4
  store i32 %v3_34957, i32* @eax, align 8
  %v2_34964 = call i32 @function_3496b(i32 %arg1)
  ret i32 %v2_34964
}

define i32 @function_3496b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3496b:
  %v0_3496c = load i32, i32* @eax, align 8
  ret i32 %v0_3496c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3496d:
  %v1_34987 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_34987 = inttoptr i32 %v1_34987 to i32*
  %v3_34987 = load i32, i32* %v2_34987, align 4
  ret i32 %v3_34987
}

define i32 @function_34994(i32 %arg1) local_unnamed_addr {
dec_label_pc_34994:
  %v0_34994 = load i1, i1* @zf, align 1
  br i1 %v0_34994, label %bb, label %dec_label_pc_34994.dec_label_pc_34996_crit_edge

dec_label_pc_34994.dec_label_pc_34996_crit_edge:  ; preds = %dec_label_pc_34994
  %v2_34994.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_34996

bb:                                               ; preds = %dec_label_pc_34994
  %v1_34994 = call i32 @function_3499b()
  br label %dec_label_pc_34996

dec_label_pc_34996:                               ; preds = %dec_label_pc_34994.dec_label_pc_34996_crit_edge, %bb
  %v2_34994 = phi i32 [ %v2_34994.pre, %dec_label_pc_34994.dec_label_pc_34996_crit_edge ], [ %v1_34994, %bb ]
  ret i32 %v2_34994

; uselistorder directives
  uselistorder label %dec_label_pc_34996, { 1, 0 }
}

define i32 @function_3499b() local_unnamed_addr {
dec_label_pc_3499b:
  %v0_3499c = load i32, i32* @eax, align 8
  ret i32 %v0_3499c
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_3499e:
  %v4_349b5 = ptrtoint i8* %arg1 to i32
  %v2_349b8 = load i8, i8* %arg1, align 1
  %v3_349b8 = zext i8 %v2_349b8 to i32
  store i32 %v3_349b8, i32* @eax, align 8
  %v3_349c5 = call i32 @function_349cc(i32 %v4_349b5)
  ret i32 %v3_349c5

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_349cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_349cc:
  %v0_349cd = load i32, i32* @eax, align 8
  ret i32 %v0_349cd
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_349ce:
  %ebx.global-to-local = alloca i32, align 4
  %v1_349ec = call i32 @unknown_6b11a(i32 %arg1)
  %v0_349f1 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_349f1, 16777216
  %v3_349ff = sdiv i32 %sext, 16777216
  %v4_349ff = call i32 @unknown_6b158(i32 %arg1, i32 %v1_349ec, i32 %v3_349ff)
  store i32 %v4_349ff, i32* @eax, align 8
  %v1_34a0e = call i32 @function_34a15()
  ret i32 %v1_34a0e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34a15() local_unnamed_addr {
dec_label_pc_34a15:
  %v0_34a1a = load i32, i32* @eax, align 8
  ret i32 %v0_34a1a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_upper_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_34a1c:
  ret i32 0
}

define i32 @function_34a94(i32 %arg1) local_unnamed_addr {
dec_label_pc_34a94:
  %zf.global-to-local = alloca i1, align 1
  %v0_34a94 = load i32, i32* @ecx, align 4
  %v1_34a94 = add i32 %v0_34a94, 2105793605
  %v2_34a94 = inttoptr i32 %v1_34a94 to i8*
  %v3_34a94 = load i8, i8* %v2_34a94, align 1
  %v5_34a94 = trunc i32 %v0_34a94 to i8
  %v6_34a94 = add i8 %v3_34a94, %v5_34a94
  %v16_34a94 = icmp eq i8 %v6_34a94, 0
  store i1 %v16_34a94, i1* %zf.global-to-local, align 1
  store i8 %v6_34a94, i8* %v2_34a94, align 1
  %v0_34a9c = load i1, i1* %zf.global-to-local, align 1
  %v1_34a9c = icmp eq i1 %v0_34a9c, false
  %v5_34a9f = icmp eq i1 %v1_34a9c, false
  store i1 %v5_34a9f, i1* %zf.global-to-local, align 1
  %v0_34aa3 = load i32, i32* @ebp, align 4
  %v1_34aa3 = add i32 %v0_34aa3, -40
  %v2_34aa3 = inttoptr i32 %v1_34aa3 to i32*
  %v3_34aa3 = load i32, i32* %v2_34aa3, align 4
  ret i32 %v3_34aa3
}

define i32 @function_34aaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_34aaa:
  %v0_34aaa = load i32, i32* @ebp, align 4
  %v1_34aaa = add i32 %v0_34aaa, -28
  %v2_34aaa = inttoptr i32 %v1_34aaa to i32*
  %v3_34aaa = load i32, i32* %v2_34aaa, align 4
  %v1_34ab0 = call i32 @unknown_6691c(i32 %v3_34aaa)
  %v0_34ab5 = load i32, i32* @ebp, align 4
  %v1_34ab5 = add i32 %v0_34ab5, -28
  %v2_34ab5 = inttoptr i32 %v1_34ab5 to i32*
  %v3_34ab5 = load i32, i32* %v2_34ab5, align 4
  store i32 %v3_34ab5, i32* @eax, align 8
  %v1_34ab8 = add i32 %v0_34ab5, -12
  %v2_34ab8 = inttoptr i32 %v1_34ab8 to i32*
  %v3_34ab8 = load i32, i32* %v2_34ab8, align 4
  %v3_34abb = icmp eq i32 %v3_34ab8, 30
  br i1 %v3_34abb, label %bb, label %dec_label_pc_34ac4

bb:                                               ; preds = %dec_label_pc_34aaa
  %v1_34ac2 = call i32 @function_34ac9()
  br label %dec_label_pc_34ac4

dec_label_pc_34ac4:                               ; preds = %bb, %dec_label_pc_34aaa
  %v2_34ac2 = phi i32 [ %v1_34ac2, %bb ], [ %v3_34ab5, %dec_label_pc_34aaa ]
  ret i32 %v2_34ac2
}

define i32 @function_34ac9() local_unnamed_addr {
dec_label_pc_34ac9:
  %v0_34aca = load i32, i32* @eax, align 8
  ret i32 %v0_34aca
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEPT_RSP_(i32 %arg1) local_unnamed_addr {
dec_label_pc_34acd:
  store i32 %arg1, i32* @eax, align 8
  %v2_34af1 = call i32 @function_34af8(i32 %arg1)
  ret i32 %v2_34af1
}

define i32 @function_34af8(i32 %arg1) local_unnamed_addr {
dec_label_pc_34af8:
  %v0_34af9 = load i32, i32* @eax, align 8
  ret i32 %v0_34af9
}

define i32 @_ZN5boost15optional_detail13optional_baseIiEC1ERKS2_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34afa:
  %v4_34b17 = ptrtoint i8* %arg1 to i32
  %v2_34b1d = call i32 @unknown_4de88(i32 %v4_34b17)
  store i8 0, i8* %arg1, align 1
  %v2_34b2e = call i32 @unknown_69498(i32 %arg2)
  %v4_34b33 = trunc i32 %v2_34b2e to i8
  %v5_34b33 = icmp eq i8 %v4_34b33, 0
  br i1 %v5_34b33, label %dec_label_pc_34b51, label %dec_label_pc_34b37

dec_label_pc_34b37:                               ; preds = %dec_label_pc_34afa
  %v2_34b3d = call i32 @unknown_694c8(i32 %arg2)
  %v3_34b4c = call i32 @unknown_6b2be(i32 %v4_34b17, i32 %v2_34b3d)
  br label %dec_label_pc_34b51

dec_label_pc_34b51:                               ; preds = %dec_label_pc_34b37, %dec_label_pc_34afa
  store i32 0, i32* @eax, align 8
  %v1_34b5b = call i32 @function_34b62()
  ret i32 %v1_34b5b
}

define i32 @function_34b62() local_unnamed_addr {
dec_label_pc_34b62:
  %v0_34b63 = load i32, i32* @eax, align 8
  ret i32 %v0_34b63
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE7destroyEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_34b64:
  %edx.global-to-local = alloca i32, align 4
  %v2_34b7e = load i8, i8* %arg1, align 1
  %v5_34b81 = icmp eq i8 %v2_34b7e, 0
  br i1 %v5_34b81, label %dec_label_pc_34b94, label %dec_label_pc_34b85

dec_label_pc_34b85:                               ; preds = %dec_label_pc_34b64
  %v4_34b7b = ptrtoint i8* %arg1 to i32
  %v0_34b85 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_34b85, 16777216
  %v3_34b8f = sdiv i32 %sext, 16777216
  %v4_34b8f = call i32 @unknown_6b388(i32 %v4_34b7b, i32 %v3_34b8f)
  br label %dec_label_pc_34b94

dec_label_pc_34b94:                               ; preds = %dec_label_pc_34b85, %dec_label_pc_34b64
  store i32 0, i32* @eax, align 8
  %v1_34b9e = call i32 @function_34ba5()
  ret i32 %v1_34b9e
}

define i32 @function_34ba5() local_unnamed_addr {
dec_label_pc_34ba5:
  %v0_34ba6 = load i32, i32* @eax, align 8
  ret i32 %v0_34ba6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ba8:
  %v1_34bc2 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_34bc2, i32* @eax, align 8
  %v2_34bcf = call i32 @function_34bd6(i32 %arg1)
  ret i32 %v2_34bcf
}

define i32 @function_34bd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_34bd6:
  %v0_34bd7 = load i32, i32* @eax, align 8
  ret i32 %v0_34bd7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_34bd8:
  %stack_var_-17 = alloca i32, align 4
  %v1_34bf5 = call i32 @unknown_6b43e(i32 %arg1)
  %v2_34bfe = ptrtoint i32* %stack_var_-17 to i32
  %v2_34c04 = call i32 @unknown_697f4(i32 %v2_34bfe, i32 %v1_34bf5)
  store i32 %v2_34c04, i32* @eax, align 8
  %v1_34c13 = call i32 @function_34c1a()
  ret i32 %v1_34c13
}

define i32 @function_34c1a() local_unnamed_addr {
dec_label_pc_34c1a:
  %v0_34c1b = load i32, i32* @eax, align 8
  ret i32 %v0_34c1b
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEclERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34c1c:
  store i32 %arg2, i32* @eax, align 8
  %v3_34c46 = call i32 @function_34c4d(i32 %arg2, i32 %arg1)
  ret i32 %v3_34c46
}

define i32 @function_34c4d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34c4d:
  %v0_34c4e = load i32, i32* @eax, align 8
  ret i32 %v0_34c4e
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_34c50:
  %v1_34c6a = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_34c6a = inttoptr i32 %v1_34c6a to i32*
  %v3_34c6a = load i32, i32* %v2_34c6a, align 4
  store i32 %v3_34c6a, i32* @eax, align 8
  %v2_34c77 = call i32 @function_34c7e(i32 %arg1)
  ret i32 %v2_34c77
}

define i32 @function_34c7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_34c7e:
  %v0_34c7f = load i32, i32* @eax, align 8
  ret i32 %v0_34c7f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_34c80:
  %stack_var_-18 = alloca i32, align 4
  %v10_34cb0 = icmp eq i32 %arg3, 0
  %v1_34cb4 = icmp eq i1 %v10_34cb0, false
  br i1 %v1_34cb4, label %dec_label_pc_34d08, label %dec_label_pc_34cb6

dec_label_pc_34cb6:                               ; preds = %dec_label_pc_34c80
  %v1_34cbc = call i32 @unknown_66a9c(i32 %arg2)
  %v15_34cc1 = icmp eq i32 %v1_34cbc, %arg4
  br i1 %v15_34cc1, label %dec_label_pc_34d08, label %dec_label_pc_34cc6

dec_label_pc_34cc6:                               ; preds = %dec_label_pc_34cb6
  %v1_34ccc = call i32 @unknown_69858(i32 %arg4)
  %v2_34cda = ptrtoint i32* %stack_var_-18 to i32
  %v2_34ce0 = call i32 @unknown_6989c(i32 %v2_34cda, i32 %arg5)
  %v3_34cf3 = call i32 @unknown_63f96(i32 %arg2, i32 %v2_34ce0, i32 %v1_34ccc)
  %v4_34cf8 = trunc i32 %v3_34cf3 to i8
  %v5_34cf8 = icmp ne i8 %v4_34cf8, 0
  %phitmp = zext i1 %v5_34cf8 to i32
  br label %dec_label_pc_34d08

dec_label_pc_34d08:                               ; preds = %dec_label_pc_34cc6, %dec_label_pc_34c80, %dec_label_pc_34cb6
  %storemerge = phi i32 [ 1, %dec_label_pc_34cb6 ], [ 1, %dec_label_pc_34c80 ], [ %phitmp, %dec_label_pc_34cc6 ]
  %v2_34d18 = call i32 @unknown_6b516(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_34d08, { 0, 2, 1 }
}

define i32 @function_34d78() local_unnamed_addr {
dec_label_pc_34d78:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_34d78 = load i32, i32* %ebx.global-to-local, align 4
  %v1_34d78 = add i32 %v0_34d78, 1566262468
  %v2_34d78 = inttoptr i32 %v1_34d78 to i32*
  %v3_34d78 = load i32, i32* %v2_34d78, align 4
  %v4_34d78 = add i32 %v3_34d78, 1
  store i32 %v4_34d78, i32* %v2_34d78, align 4
  %v0_34d7e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34d7e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_() local_unnamed_addr {
dec_label_pc_34d82:
  %eax.global-to-local = alloca i32, align 4
  %v5_34d85 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_34d85
}

define i32 @function_34d88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34d88:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_34d88 = load i32, i32* @ebp, align 4
  %v1_34d88 = add i32 %v0_34d88, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_34d88 = inttoptr i32 %v1_34d88 to i32*
  %v3_34d88 = load i32, i32* %v2_34d88, align 4
  store i32 %v3_34d88, i32* %eax.global-to-local, align 8
  %v2_34d8c = add i32 %v0_34d88, -60
  %v3_34d8c = inttoptr i32 %v2_34d8c to i32*
  store i32 %v3_34d88, i32* %v3_34d8c, align 4
  %v0_34d8f = load i32, i32* @ebp, align 4
  %v1_34d8f = add i32 %v0_34d8f, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_34d8f = inttoptr i32 %v1_34d8f to i32*
  %v3_34d8f = load i32, i32* %v2_34d8f, align 4
  store i32 %v3_34d8f, i32* %eax.global-to-local, align 8
  %v2_34d92 = add i32 %v0_34d8f, -64
  %v3_34d92 = inttoptr i32 %v2_34d92 to i32*
  store i32 %v3_34d8f, i32* %v3_34d92, align 4
  %v0_34d95 = load i32, i32* @ebp, align 4
  %v1_34d95 = add i32 %v0_34d95, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_34d95 = inttoptr i32 %v1_34d95 to i32*
  %v3_34d95 = load i32, i32* %v2_34d95, align 4
  %v2_34d98 = add i32 %v0_34d95, -68
  %v3_34d98 = inttoptr i32 %v2_34d98 to i32*
  store i32 %v3_34d95, i32* %v3_34d98, align 4
  %v1_34da1 = load i32, i32* @ebp, align 4
  %v2_34da1 = add i32 %v1_34da1, -12
  %v3_34da1 = inttoptr i32 %v2_34da1 to i32*
  store i32 30, i32* %v3_34da1, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_34da6 = load i32, i32* @ebp, align 4
  %v1_34da6 = add i32 %v0_34da6, -64
  %v2_34da6 = inttoptr i32 %v1_34da6 to i32*
  %v3_34da6 = load i32, i32* %v2_34da6, align 4
  store i32 %v3_34da6, i32* %eax.global-to-local, align 8
  %v1_34dac = call i32 @unknown_66b6e(i32 %v3_34da6)
  store i32 %v1_34dac, i32* %eax.global-to-local, align 8
  %v1_34db1 = load i32, i32* @ebp, align 4
  %v2_34db1 = add i32 %v1_34db1, -28
  %v3_34db1 = inttoptr i32 %v2_34db1 to i32*
  store i32 %v1_34dac, i32* %v3_34db1, align 4
  %v0_34db4 = load i32, i32* @ebp, align 4
  %v1_34db4 = add i32 %v0_34db4, -64
  %v2_34db4 = inttoptr i32 %v1_34db4 to i32*
  %v3_34db4 = load i32, i32* %v2_34db4, align 4
  store i32 %v3_34db4, i32* %eax.global-to-local, align 8
  %v1_34dba = call i32 @unknown_66b9e(i32 %v3_34db4)
  store i32 %v1_34dba, i32* %eax.global-to-local, align 8
  %v1_34dbf = load i32, i32* @ebp, align 4
  %v2_34dbf = add i32 %v1_34dbf, -24
  %v3_34dbf = inttoptr i32 %v2_34dbf to i32*
  store i32 %v1_34dba, i32* %v3_34dbf, align 4
  %v0_34dc2 = load i32, i32* @ebp, align 4
  %v1_34dc2 = add i32 %v0_34dc2, -13
  %v2_34dc2 = inttoptr i32 %v1_34dc2 to i8*
  store i8 1, i8* %v2_34dc2, align 1
  %v0_34e2413 = load i32, i32* @ebp, align 4
  %v1_34e2414 = add i32 %v0_34e2413, -28
  %v2_34e2415 = inttoptr i32 %v1_34e2414 to i32*
  %v3_34e2416 = load i32, i32* %v2_34e2415, align 4
  %v10_34e2417 = icmp eq i32 %v3_34e2416, 0
  %v1_34e2818 = icmp eq i1 %v10_34e2417, false
  %v2_34e2819 = zext i1 %v1_34e2818 to i32
  %v3_34e2820 = load i32, i32* %eax.global-to-local, align 8
  %v4_34e2821 = and i32 %v3_34e2820, -256
  %v5_34e2822 = or i32 %v2_34e2819, %v4_34e2821
  store i32 %v5_34e2822, i32* %eax.global-to-local, align 8
  %v5_34e2b23 = icmp eq i1 %v1_34e2818, false
  %v1_34e2d24 = icmp eq i1 %v5_34e2b23, false
  br i1 %v1_34e2d24, label %dec_label_pc_34dc8, label %dec_label_pc_34e2f

dec_label_pc_34dc8:                               ; preds = %dec_label_pc_34d88, %dec_label_pc_34e21
  %v2_34e2426 = phi i32* [ %v2_34e24, %dec_label_pc_34e21 ], [ %v2_34e2415, %dec_label_pc_34d88 ]
  %v0_34e2425 = phi i32 [ %v0_34e24, %dec_label_pc_34e21 ], [ %v0_34e2413, %dec_label_pc_34d88 ]
  %v3_34dc8 = load i32, i32* %v2_34e2426, align 4
  store i32 %v3_34dc8, i32* %eax.global-to-local, align 8
  %v2_34dcb = add i32 %v0_34e2425, -24
  %v3_34dcb = inttoptr i32 %v2_34dcb to i32*
  store i32 %v3_34dc8, i32* %v3_34dcb, align 4
  %v0_34dce = load i32, i32* @ebp, align 4
  %v1_34dce = add i32 %v0_34dce, -28
  %v2_34dce = inttoptr i32 %v1_34dce to i32*
  %v3_34dce = load i32, i32* %v2_34dce, align 4
  store i32 %v3_34dce, i32* %eax.global-to-local, align 8
  %v1_34dd4 = call i32 @unknown_6967b(i32 %v3_34dce)
  store i32 %v1_34dd4, i32* %eax.global-to-local, align 8
  store i32 %v1_34dd4, i32* %ebx.global-to-local, align 4
  %v0_34ddb = load i32, i32* @ebp, align 4
  %v1_34ddb = add i32 %v0_34ddb, -68
  %v2_34ddb = inttoptr i32 %v1_34ddb to i32*
  %v3_34ddb = load i32, i32* %v2_34ddb, align 4
  %v1_34de2 = add i32 %v0_34ddb, -18
  store i32 %v1_34de2, i32* %eax.global-to-local, align 8
  %v2_34de8 = call i32 @unknown_6999e(i32 %v1_34de2, i32 %v3_34ddb)
  store i32 %v2_34de8, i32* %eax.global-to-local, align 8
  %v0_34ded = load i32, i32* @ebp, align 4
  %v1_34ded = add i32 %v0_34ded, -64
  %v2_34ded = inttoptr i32 %v1_34ded to i32*
  %v3_34ded = load i32, i32* %v2_34ded, align 4
  %v0_34df0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_34dfb = call i32 @unknown_64098(i32 %v3_34ded, i32 %v2_34de8, i32 %v0_34df0)
  store i32 %v3_34dfb, i32* %eax.global-to-local, align 8
  %v1_34e00 = trunc i32 %v3_34dfb to i8
  %v2_34e00 = load i32, i32* @ebp, align 4
  %v3_34e00 = add i32 %v2_34e00, -13
  %v4_34e00 = inttoptr i32 %v3_34e00 to i8*
  store i8 %v1_34e00, i8* %v4_34e00, align 1
  %v0_34e03 = load i32, i32* @ebp, align 4
  %v1_34e03 = add i32 %v0_34e03, -13
  %v2_34e03 = inttoptr i32 %v1_34e03 to i8*
  %v3_34e03 = load i8, i8* %v2_34e03, align 1
  %v10_34e03 = icmp eq i8 %v3_34e03, 0
  %v1_34e16 = add i32 %v0_34e03, -28
  %v2_34e16 = inttoptr i32 %v1_34e16 to i32*
  %v3_34e16 = load i32, i32* %v2_34e16, align 4
  store i32 %v3_34e16, i32* %eax.global-to-local, align 8
  br i1 %v10_34e03, label %dec_label_pc_34e16, label %dec_label_pc_34e09

dec_label_pc_34e09:                               ; preds = %dec_label_pc_34dc8
  %v1_34e0f = call i32 @unknown_696bf(i32 %v3_34e16)
  br label %dec_label_pc_34e21

dec_label_pc_34e16:                               ; preds = %dec_label_pc_34dc8
  %v1_34e1c = call i32 @unknown_696ef(i32 %v3_34e16)
  br label %dec_label_pc_34e21

dec_label_pc_34e21:                               ; preds = %dec_label_pc_34e16, %dec_label_pc_34e09
  %storemerge = phi i32 [ %v1_34e1c, %dec_label_pc_34e16 ], [ %v1_34e0f, %dec_label_pc_34e09 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_34e21 = load i32, i32* @ebp, align 4
  %v2_34e21 = add i32 %v1_34e21, -28
  %v3_34e21 = inttoptr i32 %v2_34e21 to i32*
  store i32 %storemerge, i32* %v3_34e21, align 4
  %v0_34e24 = load i32, i32* @ebp, align 4
  %v1_34e24 = add i32 %v0_34e24, -28
  %v2_34e24 = inttoptr i32 %v1_34e24 to i32*
  %v3_34e24 = load i32, i32* %v2_34e24, align 4
  %v10_34e24 = icmp eq i32 %v3_34e24, 0
  %v1_34e28 = icmp eq i1 %v10_34e24, false
  %v2_34e28 = zext i1 %v1_34e28 to i32
  %v3_34e28 = load i32, i32* %eax.global-to-local, align 8
  %v4_34e28 = and i32 %v3_34e28, -256
  %v5_34e28 = or i32 %v2_34e28, %v4_34e28
  store i32 %v5_34e28, i32* %eax.global-to-local, align 8
  %v5_34e2b = icmp eq i1 %v1_34e28, false
  %v1_34e2d = icmp eq i1 %v5_34e2b, false
  br i1 %v1_34e2d, label %dec_label_pc_34dc8, label %dec_label_pc_34e2f

dec_label_pc_34e2f:                               ; preds = %dec_label_pc_34e21, %dec_label_pc_34d88
  %v0_34e24.lcssa = phi i32 [ %v0_34e2413, %dec_label_pc_34d88 ], [ %v0_34e24, %dec_label_pc_34e21 ]
  %v1_34e2f = add i32 %v0_34e24.lcssa, -24
  %v2_34e2f = inttoptr i32 %v1_34e2f to i32*
  %v3_34e2f = load i32, i32* %v2_34e2f, align 4
  %v1_34e36 = add i32 %v0_34e24.lcssa, -44
  store i32 %v1_34e36, i32* %eax.global-to-local, align 8
  %v2_34e3c = call i32 @unknown_66c82(i32 %v1_34e36, i32 %v3_34e2f)
  store i32 %v2_34e3c, i32* %eax.global-to-local, align 8
  %v0_34e41 = load i32, i32* @ebp, align 4
  %v1_34e41 = add i32 %v0_34e41, -13
  %v2_34e41 = inttoptr i32 %v1_34e41 to i8*
  %v3_34e41 = load i8, i8* %v2_34e41, align 1
  %v10_34e41 = icmp eq i8 %v3_34e41, 0
  br i1 %v10_34e41, label %dec_label_pc_34ecd, label %dec_label_pc_34e4b

dec_label_pc_34e4b:                               ; preds = %dec_label_pc_34e2f
  %v1_34e4b = add i32 %v0_34e41, -40
  store i32 %v1_34e4b, i32* %eax.global-to-local, align 8
  %v1_34e4e = add i32 %v0_34e41, -64
  %v2_34e4e = inttoptr i32 %v1_34e4e to i32*
  %v3_34e4e = load i32, i32* %v2_34e4e, align 4
  %v2_34e58 = call i32 @unknown_679a2(i32 %v1_34e4b, i32 %v3_34e4e)
  %v0_34e60 = load i32, i32* @ebp, align 4
  %v1_34e60 = add i32 %v0_34e60, -40
  %v1_34e67 = add i32 %v0_34e60, -44
  store i32 %v1_34e67, i32* %eax.global-to-local, align 8
  %v2_34e6d = call i32 @unknown_64332(i32 %v1_34e67, i32 %v1_34e60)
  store i32 %v2_34e6d, i32* %eax.global-to-local, align 8
  %v4_34e72 = trunc i32 %v2_34e6d to i8
  %v5_34e72 = icmp eq i8 %v4_34e72, 0
  %v0_34ec2 = load i32, i32* @ebp, align 4
  br i1 %v5_34e72, label %dec_label_pc_34ec2, label %dec_label_pc_34e76

dec_label_pc_34e76:                               ; preds = %dec_label_pc_34e4b
  %v1_34e76 = add i32 %v0_34ec2, -17
  %v2_34e76 = inttoptr i32 %v1_34e76 to i8*
  store i8 1, i8* %v2_34e76, align 1
  %v0_34e7a = load i32, i32* @ebp, align 4
  %v1_34e7a = add i32 %v0_34e7a, -36
  store i32 %v1_34e7a, i32* %eax.global-to-local, align 8
  %v1_34e7d = add i32 %v0_34e7a, -68
  %v2_34e7d = inttoptr i32 %v1_34e7d to i32*
  %v3_34e7d = load i32, i32* %v2_34e7d, align 4
  %v1_34e84 = add i32 %v0_34e7a, -24
  %v2_34e84 = inttoptr i32 %v1_34e84 to i32*
  %v3_34e84 = load i32, i32* %v2_34e84, align 4
  %v1_34e8b = add i32 %v0_34e7a, -28
  %v2_34e8b = inttoptr i32 %v1_34e8b to i32*
  %v3_34e8b = load i32, i32* %v2_34e8b, align 4
  %v1_34e92 = add i32 %v0_34e7a, -64
  %v2_34e92 = inttoptr i32 %v1_34e92 to i32*
  %v3_34e92 = load i32, i32* %v2_34e92, align 4
  %v5_34e9c = call i32 @unknown_69a02(i32 %v1_34e7a, i32 %v3_34e92, i32 %v3_34e8b, i32 %v3_34e84, i32 %v3_34e7d)
  %v0_34ea4 = load i32, i32* @ebp, align 4
  %v1_34ea4 = add i32 %v0_34ea4, -17
  %v1_34eab = add i32 %v0_34ea4, -36
  store i32 %v1_34eab, i32* %eax.global-to-local, align 8
  %v1_34eb2 = add i32 %v0_34ea4, -60
  %v2_34eb2 = inttoptr i32 %v1_34eb2 to i32*
  %v3_34eb2 = load i32, i32* %v2_34eb2, align 4
  store i32 %v3_34eb2, i32* %eax.global-to-local, align 8
  %v3_34eb8 = call i32 @unknown_6b6e6(i32 %v3_34eb2, i32 %v1_34eab, i32 %v1_34ea4)
  store i32 %v3_34eb8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34f6b

dec_label_pc_34ec2:                               ; preds = %dec_label_pc_34e4b
  %v1_34ec2 = add i32 %v0_34ec2, -44
  store i32 %v1_34ec2, i32* %eax.global-to-local, align 8
  %v1_34ec8 = call i32 @unknown_6b732(i32 %v1_34ec2)
  store i32 %v1_34ec8, i32* %eax.global-to-local, align 8
  %v0_34ecd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_34ecd

dec_label_pc_34ecd:                               ; preds = %dec_label_pc_34ec2, %dec_label_pc_34e2f
  %v0_34ecd = phi i32 [ %v0_34ecd.pre, %dec_label_pc_34ec2 ], [ %v0_34e41, %dec_label_pc_34e2f ]
  %v1_34ecd = add i32 %v0_34ecd, -68
  %v2_34ecd = inttoptr i32 %v1_34ecd to i32*
  %v3_34ecd = load i32, i32* %v2_34ecd, align 4
  %v1_34ed4 = add i32 %v0_34ecd, -16
  store i32 %v1_34ed4, i32* %eax.global-to-local, align 8
  %v2_34eda = call i32 @unknown_6999e(i32 %v1_34ed4, i32 %v3_34ecd)
  store i32 %v2_34eda, i32* %eax.global-to-local, align 8
  store i32 %v2_34eda, i32* %ebx.global-to-local, align 4
  %v0_34ee1 = load i32, i32* @ebp, align 4
  %v1_34ee1 = add i32 %v0_34ee1, -44
  %v2_34ee1 = inttoptr i32 %v1_34ee1 to i32*
  %v3_34ee1 = load i32, i32* %v2_34ee1, align 4
  store i32 %v3_34ee1, i32* %eax.global-to-local, align 8
  %v1_34ee7 = call i32 @unknown_6995a(i32 %v3_34ee1)
  store i32 %v1_34ee7, i32* %eax.global-to-local, align 8
  %v0_34eee = load i32, i32* @ebp, align 4
  %v1_34eee = add i32 %v0_34eee, -64
  %v2_34eee = inttoptr i32 %v1_34eee to i32*
  %v3_34eee = load i32, i32* %v2_34eee, align 4
  store i32 %v3_34eee, i32* %eax.global-to-local, align 8
  %v0_34ef1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_34efc = call i32 @unknown_64098(i32 %v3_34eee, i32 %v1_34ee7, i32 %v0_34ef1)
  store i32 %v3_34efc, i32* %eax.global-to-local, align 8
  %v4_34f01 = trunc i32 %v3_34efc to i8
  %v5_34f01 = icmp eq i8 %v4_34f01, 0
  %v0_34f4e = load i32, i32* @ebp, align 4
  br i1 %v5_34f01, label %dec_label_pc_34f4e, label %dec_label_pc_34f05

dec_label_pc_34f05:                               ; preds = %dec_label_pc_34ecd
  %v1_34f05 = add i32 %v0_34f4e, -15
  %v2_34f05 = inttoptr i32 %v1_34f05 to i8*
  store i8 1, i8* %v2_34f05, align 1
  %v0_34f09 = load i32, i32* @ebp, align 4
  %v1_34f09 = add i32 %v0_34f09, -32
  store i32 %v1_34f09, i32* %eax.global-to-local, align 8
  %v1_34f0c = add i32 %v0_34f09, -68
  %v2_34f0c = inttoptr i32 %v1_34f0c to i32*
  %v3_34f0c = load i32, i32* %v2_34f0c, align 4
  %v1_34f13 = add i32 %v0_34f09, -24
  %v2_34f13 = inttoptr i32 %v1_34f13 to i32*
  %v3_34f13 = load i32, i32* %v2_34f13, align 4
  %v1_34f1a = add i32 %v0_34f09, -28
  %v2_34f1a = inttoptr i32 %v1_34f1a to i32*
  %v3_34f1a = load i32, i32* %v2_34f1a, align 4
  %v1_34f21 = add i32 %v0_34f09, -64
  %v2_34f21 = inttoptr i32 %v1_34f21 to i32*
  %v3_34f21 = load i32, i32* %v2_34f21, align 4
  %v5_34f2b = call i32 @unknown_69a02(i32 %v1_34f09, i32 %v3_34f21, i32 %v3_34f1a, i32 %v3_34f13, i32 %v3_34f0c)
  %v0_34f33 = load i32, i32* @ebp, align 4
  %v1_34f33 = add i32 %v0_34f33, -15
  %v1_34f3a = add i32 %v0_34f33, -32
  store i32 %v1_34f3a, i32* %eax.global-to-local, align 8
  %v1_34f41 = add i32 %v0_34f33, -60
  %v2_34f41 = inttoptr i32 %v1_34f41 to i32*
  %v3_34f41 = load i32, i32* %v2_34f41, align 4
  store i32 %v3_34f41, i32* %eax.global-to-local, align 8
  %v3_34f47 = call i32 @unknown_6b6e6(i32 %v3_34f41, i32 %v1_34f3a, i32 %v1_34f33)
  store i32 %v3_34f47, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34f6b

dec_label_pc_34f4e:                               ; preds = %dec_label_pc_34ecd
  %v1_34f4e = add i32 %v0_34f4e, -14
  %v2_34f4e = inttoptr i32 %v1_34f4e to i8*
  store i8 0, i8* %v2_34f4e, align 1
  %v0_34f52 = load i32, i32* @ebp, align 4
  %v1_34f52 = add i32 %v0_34f52, -14
  %v1_34f59 = add i32 %v0_34f52, -44
  store i32 %v1_34f59, i32* %eax.global-to-local, align 8
  %v1_34f60 = add i32 %v0_34f52, -60
  %v2_34f60 = inttoptr i32 %v1_34f60 to i32*
  %v3_34f60 = load i32, i32* %v2_34f60, align 4
  store i32 %v3_34f60, i32* %eax.global-to-local, align 8
  %v3_34f66 = call i32 @unknown_6b6e6(i32 %v3_34f60, i32 %v1_34f59, i32 %v1_34f52)
  store i32 %v3_34f66, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34f6b

dec_label_pc_34f6b:                               ; preds = %dec_label_pc_34f4e, %dec_label_pc_34f05, %dec_label_pc_34e76
  %v0_34f6b = load i32, i32* @ebp, align 4
  %v1_34f6b = add i32 %v0_34f6b, -60
  %v2_34f6b = inttoptr i32 %v1_34f6b to i32*
  %v3_34f6b = load i32, i32* %v2_34f6b, align 4
  store i32 %v3_34f6b, i32* @eax, align 8
  %v1_34f6e = add i32 %v0_34f6b, -12
  %v2_34f6e = inttoptr i32 %v1_34f6e to i32*
  %v3_34f6e = load i32, i32* %v2_34f6e, align 4
  %v3_34f71 = icmp eq i32 %v3_34f6e, 30
  br i1 %v3_34f71, label %bb, label %dec_label_pc_34f7a

bb:                                               ; preds = %dec_label_pc_34f6b
  %v1_34f78 = call i32 @function_34f7f()
  store i32 %v1_34f78, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_34f7a

dec_label_pc_34f7a:                               ; preds = %bb, %dec_label_pc_34f6b
  %v2_34f78 = phi i32 [ %v1_34f78, %bb ], [ %v3_34f6b, %dec_label_pc_34f6b ]
  ret i32 %v2_34f78

; uselistorder directives
  uselistorder i32 %v0_34f09, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_34f4e, { 1, 0 }
  uselistorder i32 %v0_34ecd, { 1, 0 }
  uselistorder i32 %v0_34e7a, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_34ec2, { 1, 0 }
  uselistorder i32 %v0_34e41, { 0, 2, 1, 3 }
  uselistorder i32* %v2_34e24, { 1, 0 }
  uselistorder i32 %v0_34e24, { 0, 2, 1 }
  uselistorder i32 %v3_34e16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 9, 19, 20, 21, 22, 23, 24, 25, 1, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32)* @unknown_6b6e6, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_69a02, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_64098, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_6999e, { 1, 0 }
  uselistorder label %dec_label_pc_34dc8, { 1, 0 }
}

define i32 @function_34f7f() local_unnamed_addr {
dec_label_pc_34f7f:
  %v0_34f83 = load i32, i32* @eax, align 8
  ret i32 %v0_34f83
}

define i32 @function_34f84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34f84:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f86:
  %v1_34fa0 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_34fa0, i32* @eax, align 8
  %v2_34fad = call i32 @function_34fb4(i32 %arg1)
  ret i32 %v2_34fad
}

define i32 @function_34fb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_34fb4:
  %v0_34fb5 = load i32, i32* @eax, align 8
  ret i32 %v0_34fb5
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_34fb6:
  %v2_34fd0 = load i32, i32* %arg1, align 4
  ret i32 %v2_34fd0
}

define i32 @function_34ff2() local_unnamed_addr {
dec_label_pc_34ff2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34ff2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_34ff2 = add i32 %v0_34ff2, -1
  store i32 %v1_34ff2, i32* %ecx.global-to-local, align 4
  %v0_34ff4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34ff4
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ff5:
  %v1_3500f = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3500f = inttoptr i32 %v1_3500f to i32*
  %v3_3500f = load i32, i32* %v2_3500f, align 4
  store i32 %v3_3500f, i32* @eax, align 8
  %v2_3501c = call i32 @function_35023(i32 %arg1)
  ret i32 %v2_3501c
}

define i32 @function_35023(i32 %arg1) local_unnamed_addr {
dec_label_pc_35023:
  %v0_35024 = load i32, i32* @eax, align 8
  ret i32 %v0_35024
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_35026:
  %v2_35046 = load i32, i32* %arg2, align 4
  %v2_35052 = call i32 @unknown_66f26(i32 %arg1, i32 %v2_35046)
  store i32 %arg1, i32* @eax, align 8
  %v1_35064 = call i32 @function_3506b()
  ret i32 %v1_35064

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3506b() local_unnamed_addr {
dec_label_pc_3506b:
  %v0_3506c = load i32, i32* @eax, align 8
  ret i32 %v0_3506c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35070:
  %v1_35091 = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  ret i32 %v1_35091
}

define i32 @function_35098(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35098:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3509a = load i32, i32* @eax, align 8
  %v5_3509a = mul i32 %v0_3509a, 2
  %v20_3509a = and i32 %v5_3509a, 254
  %v22_3509a = and i32 %v0_3509a, -256
  %v23_3509a = or i32 %v20_3509a, %v22_3509a
  store i32 %v23_3509a, i32* %ebx.global-to-local, align 4
  %v0_3509e = load i32, i32* @ebp, align 4
  %v1_3509e = add i32 %v0_3509e, -13
  %v1_350a1 = add i32 %v0_3509e, -28
  %v2_350a1 = inttoptr i32 %v1_350a1 to i32*
  %v3_350a1 = load i32, i32* %v2_350a1, align 4
  %v2_350ab = call i32 @unknown_6ba60(i32 %v1_3509e, i32 %v3_350a1)
  %v0_350b3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_350b7 = load i32, i32* @ebp, align 4
  %v1_350b7 = add i32 %v0_350b7, -13
  %v2_350bd = call i32 @unknown_6bae6(i32 %v1_350b7, i32 %v0_350b3)
  %v0_350c2 = load i32, i32* @ebp, align 4
  %v1_350c2 = add i32 %v0_350c2, -13
  %v1_350c8 = call i32 @unknown_6bab0(i32 %v1_350c2)
  %v0_350cd = load i32, i32* @ebp, align 4
  %v1_350cd = add i32 %v0_350cd, -32
  %v2_350cd = inttoptr i32 %v1_350cd to i32*
  %v3_350cd = load i32, i32* %v2_350cd, align 4
  %v1_350d4 = add i32 %v0_350cd, -28
  %v2_350d4 = inttoptr i32 %v1_350d4 to i32*
  %v3_350d4 = load i32, i32* %v2_350d4, align 4
  %v2_350da = call i32 @unknown_6bb22(i32 %v3_350d4, i32 %v3_350cd)
  %v0_350df = load i32, i32* @ebp, align 4
  %v1_350df = add i32 %v0_350df, -12
  %v2_350df = inttoptr i32 %v1_350df to i32*
  %v3_350df = load i32, i32* %v2_350df, align 4
  %v2_350e2 = xor i32 %v3_350df, 30
  %v3_350e2 = icmp eq i32 %v2_350e2, 0
  store i32 %v2_350e2, i32* @eax, align 8
  br i1 %v3_350e2, label %bb, label %dec_label_pc_350eb

bb:                                               ; preds = %dec_label_pc_35098
  %v1_350e9 = call i32 @function_35109()
  store i32 %v1_350e9, i32* @eax, align 8
  br label %dec_label_pc_350eb

dec_label_pc_350eb:                               ; preds = %bb, %dec_label_pc_35098
  %v0_350eb = call i32 @function_35104()
  ret i32 %v0_350eb

; uselistorder directives
  uselistorder i32 %v0_3509a, { 1, 0 }
  uselistorder i32 254, { 0, 3, 4, 1, 2 }
}

define i32 @function_350ee() local_unnamed_addr {
dec_label_pc_350ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_350ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_350ee
}

define i32 @function_35104() local_unnamed_addr {
dec_label_pc_35104:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35109() local_unnamed_addr {
dec_label_pc_35109:
  %v0_3510d = load i32, i32* @eax, align 8
  ret i32 %v0_3510d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3510e:
  store i32 0, i32* @eax, align 8
  %v2_3512f = call i32 @function_35136(i32 %arg1)
  ret i32 %v2_3512f
}

define i32 @function_35136(i32 %arg1) local_unnamed_addr {
dec_label_pc_35136:
  %v0_35137 = load i32, i32* @eax, align 8
  ret i32 %v0_35137
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE10deallocateEPSM_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35138:
  ret i32 %arg2
}

define i32 @function_35176() local_unnamed_addr {
dec_label_pc_35176:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35176 = load i32, i32* %ecx.global-to-local, align 4
  %v1_35176 = add i32 %v0_35176, -1
  store i32 %v1_35176, i32* %ecx.global-to-local, align 4
  %v0_35178 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35178
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3517a:
  store i32 0, i32* @eax, align 8
  %v2_3519b = call i32 @function_351a2(i32 %arg1)
  ret i32 %v2_3519b
}

define i32 @function_351a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_351a2:
  %v0_351a3 = load i32, i32* @eax, align 8
  ret i32 %v0_351a3
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEEC1ISJ_EERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_351a4:
  %v1_351c7 = call i32 @unknown_6bca0(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_351d6 = call i32 @function_351dd()
  ret i32 %v1_351d6
}

define i32 @function_351dd() local_unnamed_addr {
dec_label_pc_351dd:
  %v0_351de = load i32, i32* @eax, align 8
  ret i32 %v0_351de
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implC1ERKSaISt10_List_nodeISJ_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_351e0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_3520a = call i32 @unknown_6bd06(i32 %tmp102, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_3521b = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_3521b = inttoptr i32 %v1_3521b to i32*
  store i32 0, i32* %v2_3521b, align 4
  store i32 0, i32* @eax, align 8
  %v1_3522c = call i32 @function_35233()
  ret i32 %v1_3522c

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_35233() local_unnamed_addr {
dec_label_pc_35233:
  %v0_35234 = load i32, i32* @eax, align 8
  ret i32 %v0_35234
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE7_M_initEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_35236:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %arg1, align 4
  %v2_3525b = add i32 %tmp99, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_3525b = inttoptr i32 %v2_3525b to i32*
  store i32 %tmp99, i32* %v3_3525b, align 4
  store i32 0, i32* @eax, align 8
  %v2_35268 = call i32 @function_3526f(i32 %tmp99)
  ret i32 %v2_35268
}

define i32 @function_3526f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3526f:
  %v0_35270 = load i32, i32* @eax, align 8
  ret i32 %v0_35270
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35272:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_352a1 = call i32 @function_352a8(i32 %arg2, i32 %tmp101)
  ret i32 %v3_352a1
}

define i32 @function_352a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_352a8:
  %v0_352a9 = load i32, i32* @eax, align 8
  ret i32 %v0_352a9
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE9push_backERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_352aa:
  %stack_var_-20 = alloca i32, align 4
  %v2_352c7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_352d4 = call i32 @unknown_58c70(i32 %v2_352c7, i32 %arg1)
  %v3_352e3 = load i32, i32* %stack_var_-20, align 4
  %v3_352f0 = call i32 @unknown_6be12(i32 %arg1, i32 %v3_352e3, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_352ff = call i32 @function_35306()
  ret i32 %v1_352ff

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_35306() local_unnamed_addr {
dec_label_pc_35306:
  %v0_35307 = load i32, i32* @eax, align 8
  ret i32 %v0_35307
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_35308:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_35322 = load i32, i32* %arg1, align 4
  %v1_35324 = add i32 %v2_35322, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_35324, i32* @eax, align 8
  %v2_35331 = call i32 @function_35338(i32 %tmp99)
  ret i32 %v2_35331
}

define i32 @function_35338(i32 %arg1) local_unnamed_addr {
dec_label_pc_35338:
  %v0_35339 = load i32, i32* @eax, align 8
  ret i32 %v0_35339
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3533a:
  store i32 0, i32* @eax, align 8
  %v2_3535b = call i32 @function_35362(i32 %arg1)
  ret i32 %v2_3535b
}

define i32 @function_35362(i32 %arg1) local_unnamed_addr {
dec_label_pc_35362:
  %v0_35363 = load i32, i32* @eax, align 8
  ret i32 %v0_35363
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35364:
  store i32 %arg1, i32* @eax, align 8
  %v2_35388 = call i32 @function_3538f(i32 %arg1)
  ret i32 %v2_35388
}

define i32 @function_3538f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3538f:
  %v0_35390 = load i32, i32* @eax, align 8
  ret i32 %v0_35390
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EEC1ERKST_RKSaISt13_Rb_tree_nodeISN_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35392:
  %v2_353c2 = call i32 @unknown_6bf58(i32 %arg1, i32 %arg3)
  %v1_353ca = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_353ca = inttoptr i32 %v1_353ca to i32*
  store i32 0, i32* %v2_353ca, align 4
  %v1_353d4 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_353d4 = inttoptr i32 %v1_353d4 to i32*
  store i32 0, i32* %v2_353d4, align 4
  %v1_353de = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_353de = inttoptr i32 %v1_353de to i32*
  store i32 0, i32* %v2_353de, align 4
  %v1_353e8 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_353e8 = inttoptr i32 %v1_353e8 to i32*
  store i32 0, i32* %v2_353e8, align 4
  %v1_353f2 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_353f2 = inttoptr i32 %v1_353f2 to i32*
  store i32 0, i32* %v2_353f2, align 4
  %v1_353ff = call i32 @unknown_6bf9a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_3540e = call i32 @function_35415()
  ret i32 %v1_3540e

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_35415() local_unnamed_addr {
dec_label_pc_35415:
  %v0_35416 = load i32, i32* @eax, align 8
  ret i32 %v0_35416
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35418:
  %v1_35432 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_35432 = inttoptr i32 %v1_35432 to i32*
  %v3_35432 = load i32, i32* %v2_35432, align 4
  store i32 %v3_35432, i32* @eax, align 8
  %v2_3543f = call i32 @function_35446(i32 %arg1)
  ret i32 %v2_3543f
}

define i32 @function_35446(i32 %arg1) local_unnamed_addr {
dec_label_pc_35446:
  %v0_35447 = load i32, i32* @eax, align 8
  ret i32 %v0_35447
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35448:
  %v2_35479 = call i32 @unknown_6c0a6(i32 %arg1, i32 %arg2)
  %v2_35487 = add i32 %v2_35479, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35487 = inttoptr i32 %v2_35487 to i32*
  store i32 %arg3, i32* %v3_35487, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3549e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3549e:
  %v0_3549e = load i32, i32* @ebx, align 4
  %v1_3549e = add i32 %v0_3549e, 1418325077
  %v2_3549e = inttoptr i32 %v1_3549e to i8*
  %v3_3549e = load i8, i8* %v2_3549e, align 1
  %v4_3549e = load i32, i32* @ecx, align 4
  %v5_3549e = trunc i32 %v4_3549e to i8
  %v6_3549e = add i8 %v5_3549e, %v3_3549e
  store i8 %v6_3549e, i8* %v2_3549e, align 1
  %v0_354a4 = load i32, i32* @eax, align 8
  %v11_354a4 = and i32 %v0_354a4, or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256)
  %v0_354aa = load i32, i32* @ebp, align 4
  %v1_354aa = add i32 %v0_354aa, -28
  %v2_354aa = inttoptr i32 %v1_354aa to i32*
  %v3_354aa = load i32, i32* %v2_354aa, align 4
  %v2_354b0 = call i32 @unknown_6a890(i32 %v3_354aa, i32 %v11_354a4)
  ret i32 %v2_354b0

; uselistorder directives
  uselistorder i8 ptrtoint (i32* @global_var_8.2379 to i8), { 1, 2, 0, 3 }
  uselistorder i32 or (i32 zext (i8 ptrtoint (i32* @global_var_8.2379 to i8) to i32), i32 -256), { 0, 1, 2, 4, 3 }
}

define i32 @function_354b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_354b8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_354b8 = load i32, i32* @ebp, align 4
  %v1_354b8 = add i32 %v0_354b8, 1
  store i32 %v1_354b8, i32* %ebp.global-to-local, align 4
  %v0_354ba = load i32, i32* @edx, align 8
  %v1_354ba = load i32, i32* @eax, align 8
  %v2_354ba = add i32 %v1_354ba, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_354ba = inttoptr i32 %v2_354ba to i32*
  store i32 %v0_354ba, i32* %v3_354ba, align 4
  %v0_354bd = load i32, i32* %ebp.global-to-local, align 4
  %v1_354bd = add i32 %v0_354bd, -20
  %v2_354bd = inttoptr i32 %v1_354bd to i32*
  %v3_354bd = load i32, i32* %v2_354bd, align 4
  store i32 %v3_354bd, i32* %eax.global-to-local, align 8
  %v2_354c0 = add i32 %v0_354bd, -36
  %v3_354c0 = inttoptr i32 %v2_354c0 to i32*
  store i32 %v3_354bd, i32* %v3_354c0, align 4
  %v0_354c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_354c3 = add i32 %v0_354c3, -32
  %v2_354c3 = inttoptr i32 %v1_354c3 to i32*
  %v3_354c3 = load i32, i32* %v2_354c3, align 4
  store i32 %v3_354c3, i32* %eax.global-to-local, align 8
  %v1_354c9 = call i32 @unknown_6c10f(i32 %v3_354c3)
  store i32 %v1_354c9, i32* %eax.global-to-local, align 8
  %v1_354ce = load i32, i32* %ebp.global-to-local, align 4
  %v2_354ce = add i32 %v1_354ce, -32
  %v3_354ce = inttoptr i32 %v2_354ce to i32*
  store i32 %v1_354c9, i32* %v3_354ce, align 4
  %v0_355416 = load i32, i32* %ebp.global-to-local, align 4
  %v1_355417 = add i32 %v0_355416, -32
  %v2_355418 = inttoptr i32 %v1_355417 to i32*
  %v3_355419 = load i32, i32* %v2_355418, align 4
  %v10_3554110 = icmp eq i32 %v3_355419, 0
  %v1_3554511 = icmp eq i1 %v10_3554110, false
  %v2_3554512 = zext i1 %v1_3554511 to i32
  %v3_3554513 = load i32, i32* %eax.global-to-local, align 8
  %v4_3554514 = and i32 %v3_3554513, -256
  %v5_3554515 = or i32 %v2_3554512, %v4_3554514
  store i32 %v5_3554515, i32* %eax.global-to-local, align 8
  %v5_3554816 = icmp eq i1 %v1_3554511, false
  %v1_3554a17 = icmp eq i1 %v5_3554816, false
  br i1 %v1_3554a17, label %dec_label_pc_354d3, label %dec_label_pc_3554c

dec_label_pc_354d3:                               ; preds = %dec_label_pc_354b8, %dec_label_pc_3552d
  %v2_3554119 = phi i32* [ %v2_35541, %dec_label_pc_3552d ], [ %v2_355418, %dec_label_pc_354b8 ]
  %v0_3554118 = phi i32 [ %v0_35541, %dec_label_pc_3552d ], [ %v0_355416, %dec_label_pc_354b8 ]
  %v3_354d3 = load i32, i32* %v2_3554119, align 4
  store i32 %v3_354d3, i32* %eax.global-to-local, align 8
  %v1_354da = add i32 %v0_3554118, -28
  %v2_354da = inttoptr i32 %v1_354da to i32*
  %v3_354da = load i32, i32* %v2_354da, align 4
  store i32 %v3_354da, i32* %eax.global-to-local, align 8
  %v2_354e0 = call i32 @unknown_6c0a6(i32 %v3_354da, i32 %v3_354d3)
  store i32 %v2_354e0, i32* %eax.global-to-local, align 8
  %v1_354e5 = load i32, i32* %ebp.global-to-local, align 4
  %v2_354e5 = add i32 %v1_354e5, -16
  %v3_354e5 = inttoptr i32 %v2_354e5 to i32*
  store i32 %v2_354e0, i32* %v3_354e5, align 4
  %v0_354e8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_354e8 = add i32 %v0_354e8, -36
  %v2_354e8 = inttoptr i32 %v1_354e8 to i32*
  %v3_354e8 = load i32, i32* %v2_354e8, align 4
  store i32 %v3_354e8, i32* %eax.global-to-local, align 8
  %v1_354eb = add i32 %v0_354e8, -16
  %v2_354eb = inttoptr i32 %v1_354eb to i32*
  %v3_354eb = load i32, i32* %v2_354eb, align 4
  %v2_354ee = add i32 %v3_354e8, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_354ee = inttoptr i32 %v2_354ee to i32*
  store i32 %v3_354eb, i32* %v3_354ee, align 4
  %v0_354f1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_354f1 = add i32 %v0_354f1, -16
  %v2_354f1 = inttoptr i32 %v1_354f1 to i32*
  %v3_354f1 = load i32, i32* %v2_354f1, align 4
  store i32 %v3_354f1, i32* %eax.global-to-local, align 8
  %v1_354f4 = add i32 %v0_354f1, -36
  %v2_354f4 = inttoptr i32 %v1_354f4 to i32*
  %v3_354f4 = load i32, i32* %v2_354f4, align 4
  %v2_354f7 = add i32 %v3_354f1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_354f7 = inttoptr i32 %v2_354f7 to i32*
  store i32 %v3_354f4, i32* %v3_354f7, align 4
  %v0_354fa = load i32, i32* %ebp.global-to-local, align 4
  %v1_354fa = add i32 %v0_354fa, -32
  %v2_354fa = inttoptr i32 %v1_354fa to i32*
  %v3_354fa = load i32, i32* %v2_354fa, align 4
  store i32 %v3_354fa, i32* %eax.global-to-local, align 8
  %v1_354fd = add i32 %v3_354fa, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_354fd = inttoptr i32 %v1_354fd to i32*
  %v3_354fd = load i32, i32* %v2_354fd, align 4
  store i32 %v3_354fd, i32* %eax.global-to-local, align 8
  %v1_35500 = icmp eq i32 %v3_354fd, 0
  br i1 %v1_35500, label %dec_label_pc_3552d, label %dec_label_pc_35504

dec_label_pc_35504:                               ; preds = %dec_label_pc_354d3
  %v3_35504 = load i32, i32* %v2_354fa, align 4
  store i32 %v3_35504, i32* %eax.global-to-local, align 8
  %v1_3550a = call i32 @unknown_6a43d(i32 %v3_35504)
  store i32 %v1_3550a, i32* %eax.global-to-local, align 8
  %v0_3550f = load i32, i32* %ebp.global-to-local, align 4
  %v1_3551a = add i32 %v0_3550f, -28
  %v2_3551a = inttoptr i32 %v1_3551a to i32*
  %v3_3551a = load i32, i32* %v2_3551a, align 4
  store i32 %v3_3551a, i32* %eax.global-to-local, align 8
  %v2_35520 = call i32 @unknown_6a890(i32 %v3_3551a, i32 %v1_3550a)
  store i32 %v2_35520, i32* %eax.global-to-local, align 8
  %v0_35527 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35527 = add i32 %v0_35527, -16
  %v2_35527 = inttoptr i32 %v1_35527 to i32*
  %v3_35527 = load i32, i32* %v2_35527, align 4
  store i32 %v3_35527, i32* %eax.global-to-local, align 8
  %v2_3552a = add i32 %v3_35527, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_3552a = inttoptr i32 %v2_3552a to i32*
  store i32 %v2_35520, i32* %v3_3552a, align 4
  %v0_3552d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_3552d

dec_label_pc_3552d:                               ; preds = %dec_label_pc_35504, %dec_label_pc_354d3
  %v0_3552d = phi i32 [ %v0_3552d.pre, %dec_label_pc_35504 ], [ %v0_354fa, %dec_label_pc_354d3 ]
  %v1_3552d = add i32 %v0_3552d, -16
  %v2_3552d = inttoptr i32 %v1_3552d to i32*
  %v3_3552d = load i32, i32* %v2_3552d, align 4
  store i32 %v3_3552d, i32* %eax.global-to-local, align 8
  %v2_35530 = add i32 %v0_3552d, -36
  %v3_35530 = inttoptr i32 %v2_35530 to i32*
  store i32 %v3_3552d, i32* %v3_35530, align 4
  %v0_35533 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35533 = add i32 %v0_35533, -32
  %v2_35533 = inttoptr i32 %v1_35533 to i32*
  %v3_35533 = load i32, i32* %v2_35533, align 4
  store i32 %v3_35533, i32* %eax.global-to-local, align 8
  %v1_35539 = call i32 @unknown_6c10f(i32 %v3_35533)
  store i32 %v1_35539, i32* %eax.global-to-local, align 8
  %v1_3553e = load i32, i32* %ebp.global-to-local, align 4
  %v2_3553e = add i32 %v1_3553e, -32
  %v3_3553e = inttoptr i32 %v2_3553e to i32*
  store i32 %v1_35539, i32* %v3_3553e, align 4
  %v0_35541 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35541 = add i32 %v0_35541, -32
  %v2_35541 = inttoptr i32 %v1_35541 to i32*
  %v3_35541 = load i32, i32* %v2_35541, align 4
  %v10_35541 = icmp eq i32 %v3_35541, 0
  %v1_35545 = icmp eq i1 %v10_35541, false
  %v2_35545 = zext i1 %v1_35545 to i32
  %v3_35545 = load i32, i32* %eax.global-to-local, align 8
  %v4_35545 = and i32 %v3_35545, -256
  %v5_35545 = or i32 %v2_35545, %v4_35545
  store i32 %v5_35545, i32* %eax.global-to-local, align 8
  %v5_35548 = icmp eq i1 %v1_35545, false
  %v1_3554a = icmp eq i1 %v5_35548, false
  br i1 %v1_3554a, label %dec_label_pc_354d3, label %dec_label_pc_3554c

dec_label_pc_3554c:                               ; preds = %dec_label_pc_3552d, %dec_label_pc_354b8
  %v0_35541.lcssa = phi i32 [ %v0_355416, %dec_label_pc_354b8 ], [ %v0_35541, %dec_label_pc_3552d ]
  %v1_3554c = add i32 %v0_35541.lcssa, -20
  %v2_3554c = inttoptr i32 %v1_3554c to i32*
  %v3_3554c = load i32, i32* %v2_3554c, align 4
  store i32 %v3_3554c, i32* @eax, align 8
  %v1_3554f = add i32 %v0_35541.lcssa, -12
  %v2_3554f = inttoptr i32 %v1_3554f to i32*
  %v3_3554f = load i32, i32* %v2_3554f, align 4
  %v3_35552 = icmp eq i32 %v3_3554f, 30
  br i1 %v3_35552, label %bb, label %dec_label_pc_3555b

bb:                                               ; preds = %dec_label_pc_3554c
  %v1_35559 = call i32 @function_35592()
  store i32 %v1_35559, i32* @eax, align 8
  br label %dec_label_pc_3555b

dec_label_pc_3555b:                               ; preds = %bb, %dec_label_pc_3554c
  %v0_3555b = call i32 @function_3558d()
  store i32 %v0_3555b, i32* %eax.global-to-local, align 8
  ret i32 %v0_3555b

; uselistorder directives
  uselistorder i32* %v2_35541, { 1, 0 }
  uselistorder i32 %v0_35541, { 0, 2, 1 }
  uselistorder i32 %v0_3552d, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 12, 1, 2, 0, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 14 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @unknown_6c10f, { 1, 0 }
  uselistorder label %dec_label_pc_354d3, { 1, 0 }
}

define i32 @function_3555e() local_unnamed_addr {
dec_label_pc_3555e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3555e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3555e
}

define i32 @function_35584(i32 %arg1) local_unnamed_addr {
dec_label_pc_35584:
  %v0_35586 = load i32, i32* @eax, align 8
  %v4_35586 = mul i32 %v0_35586, 2
  ret i32 %v4_35586
}

define i32 @function_3558d() local_unnamed_addr {
dec_label_pc_3558d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35592() local_unnamed_addr {
dec_label_pc_35592:
  %v0_35597 = load i32, i32* @eax, align 8
  ret i32 %v0_35597
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35598:
  ret i32 %arg1
}

define i32 @function_355b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_355b4:
  %cf.global-to-local = alloca i1, align 1
  %v0_355b4 = load i32, i32* @ebx, align 4
  %v1_355b4 = add i32 %v0_355b4, 862319701
  %v2_355b4 = inttoptr i32 %v1_355b4 to i8*
  %v3_355b4 = load i8, i8* %v2_355b4, align 1
  %v4_355b4 = load i32, i32* @ecx, align 4
  %v5_355b4 = trunc i32 %v4_355b4 to i8
  %v6_355b4 = or i8 %v5_355b4, %v3_355b4
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_355b4, i8* %v2_355b4, align 1
  %v0_355ba = load i32, i32* @eax, align 8
  %v1_355ba = load i1, i1* %cf.global-to-local, align 1
  %v2_355ba = zext i1 %v1_355ba to i32
  %v3_355ba = add i32 %v0_355ba, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_355ba = add i32 %v3_355ba, %v2_355ba
  %v14_355ba = icmp eq i32 %v4_355ba, 0
  %v20_355ba = add i32 %v0_355ba, 20
  %v21_355ba = add i32 %v20_355ba, %v2_355ba
  %v22_355ba = icmp ule i32 %v21_355ba, %v0_355ba
  %v23_355ba = icmp ugt i32 %v0_355ba, -21
  %v24_355ba = select i1 %v1_355ba, i1 %v22_355ba, i1 %v23_355ba
  store i1 %v24_355ba, i1* %cf.global-to-local, align 1
  store i32 %v4_355ba, i32* @eax, align 8
  br i1 %v14_355ba, label %bb, label %dec_label_pc_355c1

bb:                                               ; preds = %dec_label_pc_355b4
  %v1_355bf = call i32 @function_355c6()
  br label %dec_label_pc_355c1

dec_label_pc_355c1:                               ; preds = %bb, %dec_label_pc_355b4
  %v2_355bf = phi i32 [ %v1_355bf, %bb ], [ %v4_355ba, %dec_label_pc_355b4 ]
  ret i32 %v2_355bf
}

define i32 @function_355c6() local_unnamed_addr {
dec_label_pc_355c6:
  %v0_355c7 = load i32, i32* @eax, align 8
  ret i32 %v0_355c7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_355c8:
  ret i32 %arg1
}

define i32 @function_355e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_355e4:
  %cf.global-to-local = alloca i1, align 1
  %v0_355e4 = load i32, i32* @ebx, align 4
  %v1_355e4 = add i32 %v0_355e4, 862319701
  %v2_355e4 = inttoptr i32 %v1_355e4 to i8*
  %v3_355e4 = load i8, i8* %v2_355e4, align 1
  %v4_355e4 = load i32, i32* @ecx, align 4
  %v5_355e4 = trunc i32 %v4_355e4 to i8
  %v6_355e4 = or i8 %v5_355e4, %v3_355e4
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_355e4, i8* %v2_355e4, align 1
  %v0_355ea = load i32, i32* @eax, align 8
  %v1_355ea = load i1, i1* %cf.global-to-local, align 1
  %v2_355ea = zext i1 %v1_355ea to i32
  %v3_355ea = add i32 %v0_355ea, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_355ea = add i32 %v3_355ea, %v2_355ea
  %v14_355ea = icmp eq i32 %v4_355ea, 0
  %v20_355ea = add i32 %v0_355ea, 20
  %v21_355ea = add i32 %v20_355ea, %v2_355ea
  %v22_355ea = icmp ule i32 %v21_355ea, %v0_355ea
  %v23_355ea = icmp ugt i32 %v0_355ea, -21
  %v24_355ea = select i1 %v1_355ea, i1 %v22_355ea, i1 %v23_355ea
  store i1 %v24_355ea, i1* %cf.global-to-local, align 1
  store i32 %v4_355ea, i32* @eax, align 8
  br i1 %v14_355ea, label %bb, label %dec_label_pc_355f1

bb:                                               ; preds = %dec_label_pc_355e4
  %v1_355ef = call i32 @function_355f6()
  br label %dec_label_pc_355f1

dec_label_pc_355f1:                               ; preds = %bb, %dec_label_pc_355e4
  %v2_355ef = phi i32 [ %v1_355ef, %bb ], [ %v4_355ea, %dec_label_pc_355e4 ]
  ret i32 %v2_355ef
}

define i32 @function_355f6() local_unnamed_addr {
dec_label_pc_355f6:
  %v0_355f7 = load i32, i32* @eax, align 8
  ret i32 %v0_355f7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_355f8:
  %v1_35615 = call i32 @unknown_3abd0(i32 %arg1)
  store i32 %v1_35615, i32* @eax, align 8
  %v1_35624 = call i32 @function_3562b()
  ret i32 %v1_35624
}

define i32 @function_3562b() local_unnamed_addr {
dec_label_pc_3562b:
  %v0_3562c = load i32, i32* @eax, align 8
  ret i32 %v0_3562c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3562d:
  %v1_3564a = call i32 @unknown_3ac4c(i32 %arg1)
  store i32 %v1_3564a, i32* @eax, align 8
  %v1_35659 = call i32 @function_35660()
  ret i32 %v1_35659
}

define i32 @function_35660() local_unnamed_addr {
dec_label_pc_35660:
  %v0_35661 = load i32, i32* @eax, align 8
  ret i32 %v0_35661
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_35662:
  store i32 0, i32* @eax, align 8
  %v2_35683 = call i32 @function_3568a(i32 %arg1)
  ret i32 %v2_35683
}

define i32 @function_3568a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3568a:
  %v0_3568b = load i32, i32* @eax, align 8
  ret i32 %v0_3568b
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3568c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_356bb = call i32 @function_356c2(i32 %arg2, i32 %tmp101)
  ret i32 %v3_356bb
}

define i32 @function_356c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_356c2:
  %v0_356c3 = load i32, i32* @eax, align 8
  ret i32 %v0_356c3
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE4fullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_356c4:
  %v1_356de = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_356de = inttoptr i32 %v1_356de to i32*
  %v3_356de = load i32, i32* %v2_356de, align 4
  %v1_356e7 = add i32 %arg1, 120
  %v2_356e7 = inttoptr i32 %v1_356e7 to i32*
  %v3_356e7 = load i32, i32* %v2_356e7, align 4
  %v12_356ea = icmp eq i32 %v3_356de, %v3_356e7
  %v1_356ec = zext i1 %v12_356ea to i32
  %v3_356ec = and i32 %v3_356e7, -256
  %v4_356ec = or i32 %v1_356ec, %v3_356ec
  store i32 %v4_356ec, i32* @eax, align 8
  %v2_356f9 = call i32 @function_35700(i32 %arg1)
  ret i32 %v2_356f9

; uselistorder directives
  uselistorder i32 %v3_356e7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_35700(i32 %arg1) local_unnamed_addr {
dec_label_pc_35700:
  %v0_35701 = load i32, i32* @eax, align 8
  ret i32 %v0_35701
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12reserve_implEj() local_unnamed_addr {
dec_label_pc_35702:
  %eax.global-to-local = alloca i32, align 4
  %v5_35702 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_35702
}

define i32 @function_35704(i32 %arg1) local_unnamed_addr {
dec_label_pc_35704:
  %eax.global-to-local = alloca i32, align 4
  %v0_35707 = load i32, i32* @ebx, align 4
  %v4_35707 = load i32, i32* @ecx, align 4
  %v0_3570f = load i32, i32* @ebp, align 4
  %v0_35710 = load i32, i32* @eax, align 8
  %v1_35710 = trunc i32 %v0_35710 to i8
  %v2_35710 = or i8 %v1_35710, -119
  %v8_35710 = zext i8 %v2_35710 to i32
  %v10_35710 = and i32 %v0_35710, -256
  %v11_35710 = or i32 %v8_35710, %v10_35710
  store i32 %v11_35710, i32* %eax.global-to-local, align 8
  %v1_35712 = add i32 %v0_3570f, 2
  %v9_35712 = icmp eq i32 %v1_35712, 0
  store i32 %v1_35712, i32* @ebp, align 4
  %v2_35713 = icmp eq i32 %v4_35707, 1
  %v4_35713 = or i1 %v2_35713, %v9_35712
  br i1 %v4_35713, label %dec_label_pc_35715, label %dec_label_pc_3577a

dec_label_pc_35715:                               ; preds = %dec_label_pc_35704
  %v2_3571a = add i32 %v0_3570f, -10
  %v3_3571a = inttoptr i32 %v2_3571a to i32*
  store i32 30, i32* %v3_3571a, align 4
  %v0_3571f = load i32, i32* @ebp, align 4
  %v1_3571f = add i32 %v0_3571f, -13
  store i32 %v1_3571f, i32* %eax.global-to-local, align 8
  %v1_35726 = add i32 %v0_3571f, -32
  %v2_35726 = inttoptr i32 %v1_35726 to i32*
  %v3_35726 = load i32, i32* %v2_35726, align 4
  store i32 %v3_35726, i32* %eax.global-to-local, align 8
  %v1_3572d = add i32 %v0_3571f, -28
  %v2_3572d = inttoptr i32 %v1_3572d to i32*
  %v3_3572d = load i32, i32* %v2_3572d, align 4
  store i32 %v3_3572d, i32* %eax.global-to-local, align 8
  %v3_35733 = call i32 @unknown_6c3fa(i32 %v3_3572d, i32 %v3_35726, i32 %v1_3571f)
  store i32 %v3_35733, i32* %eax.global-to-local, align 8
  %v1_35738 = load i32, i32* @ebp, align 4
  %v2_35738 = add i32 %v1_35738, -20
  %v3_35738 = inttoptr i32 %v2_35738 to i32*
  store i32 %v3_35733, i32* %v3_35738, align 4
  %v0_3573b = load i32, i32* @ebp, align 4
  %v1_3573b = add i32 %v0_3573b, -28
  %v2_3573b = inttoptr i32 %v1_3573b to i32*
  %v3_3573b = load i32, i32* %v2_3573b, align 4
  store i32 %v3_3573b, i32* %eax.global-to-local, align 8
  %v1_35741 = call i32 @unknown_5393e(i32 %v3_3573b)
  store i32 %v1_35741, i32* %eax.global-to-local, align 8
  %v0_35746 = load i32, i32* @ebp, align 4
  %v1_35746 = add i32 %v0_35746, -28
  %v2_35746 = inttoptr i32 %v1_35746 to i32*
  %v3_35746 = load i32, i32* %v2_35746, align 4
  store i32 %v3_35746, i32* %eax.global-to-local, align 8
  %v1_35749 = add i32 %v0_35746, -20
  %v2_35749 = inttoptr i32 %v1_35749 to i32*
  %v3_35749 = load i32, i32* %v2_35749, align 4
  %v2_3574c = add i32 %v3_35746, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v3_3574c = inttoptr i32 %v2_3574c to i32*
  store i32 %v3_35749, i32* %v3_3574c, align 4
  %v0_3574f = load i32, i32* @ebp, align 4
  %v1_3574f = add i32 %v0_3574f, -28
  %v2_3574f = inttoptr i32 %v1_3574f to i32*
  %v3_3574f = load i32, i32* %v2_3574f, align 4
  store i32 %v3_3574f, i32* %eax.global-to-local, align 8
  %v1_35752 = add i32 %v0_3574f, -32
  %v2_35752 = inttoptr i32 %v1_35752 to i32*
  %v3_35752 = load i32, i32* %v2_35752, align 4
  %v2_35755 = add i32 %v3_3574f, 120
  %v3_35755 = inttoptr i32 %v2_35755 to i32*
  store i32 %v3_35752, i32* %v3_35755, align 4
  %v0_35758 = load i32, i32* @ebp, align 4
  %v1_35758 = add i32 %v0_35758, -28
  %v2_35758 = inttoptr i32 %v1_35758 to i32*
  %v3_35758 = load i32, i32* %v2_35758, align 4
  store i32 %v3_35758, i32* %eax.global-to-local, align 8
  %v1_3575b = add i32 %v3_35758, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_3575b = inttoptr i32 %v1_3575b to i32*
  %v3_3575b = load i32, i32* %v2_3575b, align 4
  %v3_35761 = load i32, i32* %v2_35758, align 4
  store i32 %v3_35761, i32* %eax.global-to-local, align 8
  %v1_35764 = add i32 %v3_35761, 120
  %v2_35764 = inttoptr i32 %v1_35764 to i32*
  %v3_35764 = load i32, i32* %v2_35764, align 4
  store i32 %v3_35764, i32* %eax.global-to-local, align 8
  %tmp19 = icmp ugt i32 %v3_3575b, %v3_35764
  br i1 %tmp19, label %dec_label_pc_3576b, label %bb

bb:                                               ; preds = %dec_label_pc_35715
  %v3_35769 = call i32 @function_3578f()
  store i32 %v3_35769, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3576b

dec_label_pc_3576b:                               ; preds = %dec_label_pc_35715, %bb
  %v4_3576b = phi i32 [ %v3_35769, %bb ], [ %v3_35764, %dec_label_pc_35715 ]
  ret i32 %v4_3576b

dec_label_pc_3577a:                               ; preds = %dec_label_pc_35704
  %v1_3577a = lshr i32 %v0_35707, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3577a = trunc i32 %v1_3577a to i8
  %v5_3577a = add i8 %v2_35710, %v2_3577a
  %v20_3577a = zext i8 %v5_3577a to i32
  %v22_3577a = shl i32 %v20_3577a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v23_3577a = and i32 %v0_35707, -65281
  %v24_3577a = or i32 %v22_3577a, %v23_3577a
  store i32 %v24_3577a, i32* @ebx, align 4
  %v2_3577f = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_3577f = zext i8 %v2_3577f to i32
  %v6_3577f = or i32 %v3_3577f, %v10_35710
  store i32 %v6_3577f, i32* %eax.global-to-local, align 8
  %v1_35781 = inttoptr i32 %v6_3577f to i8*
  %v2_35781 = load i8, i8* %v1_35781, align 1
  %v5_35781 = add i8 %v2_35781, %v2_3577f
  store i8 %v5_35781, i8* %v1_35781, align 1
  %v3_35783 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_35783

; uselistorder directives
  uselistorder i32 %v3_35764, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* @esi, { 14, 0, 15, 10, 9, 11, 2, 1, 5, 6, 7, 8, 12, 13, 3, 4 }
  uselistorder i32 -65281, { 5, 12, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4 }
  uselistorder i8 -119, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_3576b, { 1, 0 }
}

define i32 @function_3578f() local_unnamed_addr {
dec_label_pc_3578f:
  %v0_3578f = load i32, i32* @ebp, align 4
  %v1_3578f = add i32 %v0_3578f, -12
  %v2_3578f = inttoptr i32 %v1_3578f to i32*
  %v3_3578f = load i32, i32* %v2_3578f, align 4
  %v2_35792 = xor i32 %v3_3578f, 30
  %v3_35792 = icmp eq i32 %v2_35792, 0
  store i32 %v2_35792, i32* @eax, align 8
  br i1 %v3_35792, label %bb, label %dec_label_pc_3579b

bb:                                               ; preds = %dec_label_pc_3578f
  %v1_35799 = call i32 @function_357a0()
  br label %dec_label_pc_3579b

dec_label_pc_3579b:                               ; preds = %bb, %dec_label_pc_3578f
  %v2_35799 = phi i32 [ %v1_35799, %bb ], [ %v2_35792, %dec_label_pc_3578f ]
  ret i32 %v2_35799
}

define i32 @function_357a0() local_unnamed_addr {
dec_label_pc_357a0:
  %v0_357a1 = load i32, i32* @eax, align 8
  ret i32 %v0_357a1
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE17new_capacity_implEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_357a2:
  %v1_357c2 = add i32 %arg1, 120
  %v2_357c2 = inttoptr i32 %v1_357c2 to i32*
  %v3_357c2 = load i32, i32* %v2_357c2, align 4
  %v7_357c8 = icmp ult i32 %v3_357c2, %arg2
  br i1 %v7_357c8, label %bb, label %dec_label_pc_357cc

bb:                                               ; preds = %dec_label_pc_357a2
  %v3_357ca = call i32 @function_357f0(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_357cc

dec_label_pc_357cc:                               ; preds = %bb, %dec_label_pc_357a2
  %v3_357e4 = phi i32 [ %v3_357ca, %bb ], [ %arg2, %dec_label_pc_357a2 ]
  ret i32 %v3_357e4
}

define i32 @function_357f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_357f0:
  %v0_357f0 = load i32, i32* @ebp, align 4
  %v1_357f0 = add i32 %v0_357f0, -28
  %v2_357f0 = inttoptr i32 %v1_357f0 to i32*
  %v3_357f0 = load i32, i32* %v2_357f0, align 4
  %v1_357f3 = add i32 %v3_357f0, 120
  %v2_357f3 = inttoptr i32 %v1_357f3 to i32*
  %v3_357f3 = load i32, i32* %v2_357f3, align 4
  %v1_357f9 = call i32 @unknown_6c586(i32 %v3_357f3)
  %v1_357fe = load i32, i32* @ebp, align 4
  %v2_357fe = add i32 %v1_357fe, -16
  %v3_357fe = inttoptr i32 %v2_357fe to i32*
  store i32 %v1_357f9, i32* %v3_357fe, align 4
  %v0_35801 = load i32, i32* @ebp, align 4
  %v1_35801 = add i32 %v0_35801, -32
  %v1_35808 = add i32 %v0_35801, -16
  %v2_3580e = call i32 @unknown_5837d(i32 %v1_35808, i32 %v1_35801)
  %v1_35813 = inttoptr i32 %v2_3580e to i32*
  %v2_35813 = load i32, i32* %v1_35813, align 4
  store i32 %v2_35813, i32* @eax, align 8
  %v0_35815 = load i32, i32* @ebp, align 4
  %v1_35815 = add i32 %v0_35815, -12
  %v2_35815 = inttoptr i32 %v1_35815 to i32*
  %v3_35815 = load i32, i32* %v2_35815, align 4
  %v3_35818 = icmp eq i32 %v3_35815, 30
  br i1 %v3_35818, label %bb, label %dec_label_pc_35821

bb:                                               ; preds = %dec_label_pc_357f0
  %v1_3581f = call i32 @function_35826()
  br label %dec_label_pc_35821

dec_label_pc_35821:                               ; preds = %bb, %dec_label_pc_357f0
  %v2_3581f = phi i32 [ %v1_3581f, %bb ], [ %v2_35813, %dec_label_pc_357f0 ]
  ret i32 %v2_3581f

; uselistorder directives
  uselistorder i32 120, { 4, 5, 12, 13, 6, 14, 7, 8, 9, 10, 11, 15, 0, 1, 2, 3 }
}

define i32 @function_35826() local_unnamed_addr {
dec_label_pc_35826:
  %v0_35827 = load i32, i32* @eax, align 8
  ret i32 %v0_35827
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invoker8m_invokeERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEz(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35828:
  ret i32 %arg2
}

define i32 @function_35839() local_unnamed_addr {
dec_label_pc_35839:
  %eax.global-to-local = alloca i32, align 4
  %v15_35839 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_35839
}

define i32 @function_3586a() local_unnamed_addr {
dec_label_pc_3586a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3586a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3586a
}

define i32 @function_35895() local_unnamed_addr {
dec_label_pc_35895:
  %eax.global-to-local = alloca i32, align 4
  %v0_35899 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35899
}

define i32 @_ZSt10__fill_n_aIPxjxEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3589c:
  ret i32 %arg1
}

define i32 @function_358a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_358a6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_358a6 = load i32, i32* @ebp, align 4
  %v0_358aa = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_358aa = or i32 %v0_358aa, 137
  store i32 %v11_358aa, i32* %eax.global-to-local, align 8
  %v0_358ad = load i32, i32* @ecx, align 4
  %v1_358ad = add i32 %v0_358ad, -1
  store i32 %v1_358ad, i32* %ecx.global-to-local, align 4
  %v1_358af = add i32 %v0_358a6, 4
  store i32 %v1_358af, i32* @ebp, align 4
  %v1_358b0 = add i32 %v0_358ad, -1587159996
  %v2_358b0 = inttoptr i32 %v1_358b0 to i8*
  %v3_358b0 = load i8, i8* %v2_358b0, align 1
  %v5_358b0 = trunc i32 %v1_358ad to i8
  %v8_358b0 = add i8 %v3_358b0, %v5_358b0
  %v28_358b0 = icmp ult i8 %v8_358b0, %v3_358b0
  store i1 %v28_358b0, i1* %cf.global-to-local, align 1
  store i8 %v8_358b0, i8* %v2_358b0, align 1
  %v0_358b6 = load i32, i32* %eax.global-to-local, align 8
  %v1_358b6 = trunc i32 %v0_358b6 to i8
  %v2_358b6 = load i1, i1* %cf.global-to-local, align 1
  %v3_358b6 = zext i1 %v2_358b6 to i8
  %v4_358b6 = add i8 %v3_358b6, %v1_358b6
  %v19_358b6 = icmp ule i8 %v4_358b6, %v1_358b6
  %v21_358b6 = icmp eq i1 %v2_358b6, %v19_358b6
  store i1 %v21_358b6, i1* %cf.global-to-local, align 1
  %v22_358b6 = zext i8 %v4_358b6 to i32
  %v24_358b6 = and i32 %v0_358b6, -256
  %v25_358b6 = or i32 %v22_358b6, %v24_358b6
  store i32 %v25_358b6, i32* %eax.global-to-local, align 8
  %v1_358b8 = inttoptr i32 %v25_358b6 to i8*
  %v2_358b8 = load i8, i8* %v1_358b8, align 1
  %v5_358b8 = add i8 %v2_358b8, %v4_358b6
  store i8 %v5_358b8, i8* %v1_358b8, align 1
  %v0_358ba = load i32, i32* %eax.global-to-local, align 8
  %v1_358ba = load i32, i32* @ebp, align 4
  %v2_358ba = add i32 %v1_358ba, -12
  %v3_358ba = inttoptr i32 %v2_358ba to i32*
  store i32 %v0_358ba, i32* %v3_358ba, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_358bf = load i32, i32* @ebp, align 4
  %v1_358bf = add i32 %v0_358bf, -36
  %v2_358bf = inttoptr i32 %v1_358bf to i32*
  %v3_358bf = load i32, i32* %v2_358bf, align 4
  store i32 %v3_358bf, i32* %eax.global-to-local, align 8
  %v1_358c2 = add i32 %v3_358bf, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_358c2 = inttoptr i32 %v1_358c2 to i32*
  %v3_358c2 = load i32, i32* %v2_358c2, align 4
  store i32 %v3_358c2, i32* %edx.global-to-local, align 8
  %v1_358c5 = inttoptr i32 %v3_358bf to i32*
  %v2_358c5 = load i32, i32* %v1_358c5, align 4
  store i32 %v2_358c5, i32* %eax.global-to-local, align 8
  %v2_358c7 = add i32 %v0_358bf, -24
  %v3_358c7 = inttoptr i32 %v2_358c7 to i32*
  store i32 %v2_358c5, i32* %v3_358c7, align 4
  %v0_358ca = load i32, i32* %edx.global-to-local, align 8
  %v1_358ca = load i32, i32* @ebp, align 4
  %v2_358ca = add i32 %v1_358ca, -20
  %v3_358ca = inttoptr i32 %v2_358ca to i32*
  store i32 %v0_358ca, i32* %v3_358ca, align 4
  %v0_358cd = load i32, i32* @ebp, align 4
  %v1_358cd = add i32 %v0_358cd, -32
  %v2_358cd = inttoptr i32 %v1_358cd to i32*
  %v3_358cd = load i32, i32* %v2_358cd, align 4
  store i32 %v3_358cd, i32* %eax.global-to-local, align 8
  %v2_358d0 = add i32 %v0_358cd, -16
  %v3_358d0 = inttoptr i32 %v2_358d0 to i32*
  store i32 %v3_358cd, i32* %v3_358d0, align 4
  %v0_358eb4 = load i32, i32* @ebp, align 4
  %v1_358eb5 = add i32 %v0_358eb4, -16
  %v2_358eb6 = inttoptr i32 %v1_358eb5 to i32*
  %v3_358eb7 = load i32, i32* %v2_358eb6, align 4
  %v10_358eb8 = icmp eq i32 %v3_358eb7, 0
  %v1_358ef9 = icmp eq i1 %v10_358eb8, false
  %v2_358ef10 = zext i1 %v1_358ef9 to i32
  %v3_358ef11 = load i32, i32* %eax.global-to-local, align 8
  %v4_358ef12 = and i32 %v3_358ef11, -256
  %v5_358ef13 = or i32 %v2_358ef10, %v4_358ef12
  store i32 %v5_358ef13, i32* %eax.global-to-local, align 8
  %v5_358f214 = icmp eq i1 %v1_358ef9, false
  %v1_358f415 = icmp eq i1 %v5_358f214, false
  %v1_358d516 = add i32 %v0_358eb4, -28
  %v2_358d517 = inttoptr i32 %v1_358d516 to i32*
  %v3_358d518 = load i32, i32* %v2_358d517, align 4
  br i1 %v1_358f415, label %dec_label_pc_358d5, label %dec_label_pc_358f6

dec_label_pc_358d5:                               ; preds = %dec_label_pc_358a6, %dec_label_pc_358d5
  %v3_358d520 = phi i32 [ %v3_358d5, %dec_label_pc_358d5 ], [ %v3_358d518, %dec_label_pc_358a6 ]
  %v0_358eb19 = phi i32 [ %v0_358eb, %dec_label_pc_358d5 ], [ %v0_358eb4, %dec_label_pc_358a6 ]
  store i32 %v3_358d520, i32* %ecx.global-to-local, align 4
  %v1_358d8 = add i32 %v0_358eb19, -24
  %v2_358d8 = inttoptr i32 %v1_358d8 to i32*
  %v3_358d8 = load i32, i32* %v2_358d8, align 4
  store i32 %v3_358d8, i32* %eax.global-to-local, align 8
  %v1_358db = add i32 %v0_358eb19, -20
  %v2_358db = inttoptr i32 %v1_358db to i32*
  %v3_358db = load i32, i32* %v2_358db, align 4
  store i32 %v3_358db, i32* %edx.global-to-local, align 8
  %v2_358de = inttoptr i32 %v3_358d520 to i32*
  store i32 %v3_358d8, i32* %v2_358de, align 4
  %v0_358e0 = load i32, i32* %edx.global-to-local, align 8
  %v1_358e0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_358e0 = add i32 %v1_358e0, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_358e0 = inttoptr i32 %v2_358e0 to i32*
  store i32 %v0_358e0, i32* %v3_358e0, align 4
  %v0_358e3 = load i32, i32* @ebp, align 4
  %v1_358e3 = add i32 %v0_358e3, -16
  %v2_358e3 = inttoptr i32 %v1_358e3 to i32*
  %v3_358e3 = load i32, i32* %v2_358e3, align 4
  %v4_358e3 = add i32 %v3_358e3, -1
  store i32 %v4_358e3, i32* %v2_358e3, align 4
  %v0_358e7 = load i32, i32* @ebp, align 4
  %v1_358e7 = add i32 %v0_358e7, -28
  %v2_358e7 = inttoptr i32 %v1_358e7 to i32*
  %v3_358e7 = load i32, i32* %v2_358e7, align 4
  %v4_358e7 = add i32 %v3_358e7, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v4_358e7, i32* %v2_358e7, align 4
  %v0_358eb = load i32, i32* @ebp, align 4
  %v1_358eb = add i32 %v0_358eb, -16
  %v2_358eb = inttoptr i32 %v1_358eb to i32*
  %v3_358eb = load i32, i32* %v2_358eb, align 4
  %v10_358eb = icmp eq i32 %v3_358eb, 0
  %v1_358ef = icmp eq i1 %v10_358eb, false
  %v2_358ef = zext i1 %v1_358ef to i32
  %v3_358ef = load i32, i32* %eax.global-to-local, align 8
  %v4_358ef = and i32 %v3_358ef, -256
  %v5_358ef = or i32 %v2_358ef, %v4_358ef
  store i32 %v5_358ef, i32* %eax.global-to-local, align 8
  %v5_358f2 = icmp eq i1 %v1_358ef, false
  %v1_358f4 = icmp eq i1 %v5_358f2, false
  %v1_358d5 = add i32 %v0_358eb, -28
  %v2_358d5 = inttoptr i32 %v1_358d5 to i32*
  %v3_358d5 = load i32, i32* %v2_358d5, align 4
  br i1 %v1_358f4, label %dec_label_pc_358d5, label %dec_label_pc_358f6

dec_label_pc_358f6:                               ; preds = %dec_label_pc_358d5, %dec_label_pc_358a6
  %v0_358eb.lcssa = phi i32 [ %v0_358eb4, %dec_label_pc_358a6 ], [ %v0_358eb, %dec_label_pc_358d5 ]
  %v3_358d5.lcssa = phi i32 [ %v3_358d518, %dec_label_pc_358a6 ], [ %v3_358d5, %dec_label_pc_358d5 ]
  store i32 %v3_358d5.lcssa, i32* @eax, align 8
  %v1_358f9 = add i32 %v0_358eb.lcssa, -12
  %v2_358f9 = inttoptr i32 %v1_358f9 to i32*
  %v3_358f9 = load i32, i32* %v2_358f9, align 4
  %v2_358fc = xor i32 %v3_358f9, 30
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_358fc = icmp eq i32 %v2_358fc, 0
  store i32 %v2_358fc, i32* %edx.global-to-local, align 8
  br i1 %v3_358fc, label %bb, label %dec_label_pc_35905

bb:                                               ; preds = %dec_label_pc_358f6
  %v1_35903 = call i32 @function_3590a()
  store i32 %v1_35903, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35905

dec_label_pc_35905:                               ; preds = %bb, %dec_label_pc_358f6
  %v3_35903 = phi i32 [ %v1_35903, %bb ], [ %v3_358d5.lcssa, %dec_label_pc_358f6 ]
  ret i32 %v3_35903

; uselistorder directives
  uselistorder i32 %v3_358d5.lcssa, { 1, 0 }
  uselistorder i32 %v0_358eb, { 0, 2, 3, 1 }
  uselistorder i32 %v0_358eb19, { 1, 0 }
  uselistorder i32 %v3_358d520, { 1, 0 }
  uselistorder i8 %v4_358b6, { 0, 2, 1 }
  uselistorder i8 %v1_358b6, { 1, 0 }
  uselistorder i8 %v3_358b0, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 2, 3, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_358d5, { 1, 0 }
}

define i32 @function_3590a() local_unnamed_addr {
dec_label_pc_3590a:
  %v0_3590b = load i32, i32* @eax, align 8
  ret i32 %v0_3590b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_3590c:
  %stack_var_-17 = alloca i32, align 4
  %v1_35929 = call i32 @unknown_6c7f7(i32 %arg1)
  %v2_35932 = ptrtoint i32* %stack_var_-17 to i32
  %v2_35938 = call i32 @unknown_6b40e(i32 %v2_35932, i32 %v1_35929)
  store i32 %v2_35938, i32* @eax, align 8
  %v1_35947 = call i32 @function_3594e()
  ret i32 %v1_35947
}

define i32 @function_3594e() local_unnamed_addr {
dec_label_pc_3594e:
  %v0_3594f = load i32, i32* @eax, align 8
  ret i32 %v0_3594f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_35950:
  %v1_3596a = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3596a = inttoptr i32 %v1_3596a to i32*
  %v3_3596a = load i32, i32* %v2_3596a, align 4
  store i32 %v3_3596a, i32* @eax, align 8
  %v2_35977 = call i32 @function_3597e(i32 %arg1)
  ret i32 %v2_35977
}

define i32 @function_3597e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3597e:
  %v0_3597f = load i32, i32* @eax, align 8
  ret i32 %v0_3597f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_35980:
  ret i32 %arg1
}

define i32 @function_3599c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3599c:
  %v0_3599c = load i32, i32* @eax, align 8
  %v2_3599c = or i32 %v0_3599c, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  store i32 %v2_3599c, i32* @eax, align 8
  %v0_359a0 = load i32, i32* @edx, align 8
  %v3_359a0 = icmp eq i32 %v0_359a0, 30
  br i1 %v3_359a0, label %bb, label %dec_label_pc_359a9

bb:                                               ; preds = %dec_label_pc_3599c
  %v1_359a7 = call i32 @function_359ae()
  br label %dec_label_pc_359a9

dec_label_pc_359a9:                               ; preds = %bb, %dec_label_pc_3599c
  %v2_359a7 = phi i32 [ %v1_359a7, %bb ], [ %v2_3599c, %dec_label_pc_3599c ]
  ret i32 %v2_359a7
}

define i32 @function_359ae() local_unnamed_addr {
dec_label_pc_359ae:
  %v0_359af = load i32, i32* @eax, align 8
  ret i32 %v0_359af
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_upper_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_359b0:
  %v10_35a2c116125 = icmp eq i32 %arg3, 0
  %v1_35a30117126 = icmp eq i1 %v10_35a2c116125, false
  %v5_35a33121128 = icmp eq i1 %v1_35a30117126, false
  %v1_35a35122129 = icmp eq i1 %v5_35a33121128, false
  br i1 %v1_35a35122129, label %dec_label_pc_359e1.lr.ph, label %dec_label_pc_35a37

dec_label_pc_359e1.lr.ph:                         ; preds = %dec_label_pc_359b0, %dec_label_pc_35a08
  %stack_var_-44.0.ph131 = phi i32 [ %stack_var_-40.0123, %dec_label_pc_35a08 ], [ %arg4, %dec_label_pc_359b0 ]
  %stack_var_-40.0.ph130 = phi i32 [ %v1_35a14, %dec_label_pc_35a08 ], [ %arg3, %dec_label_pc_359b0 ]
  br label %dec_label_pc_359e1

dec_label_pc_359e1:                               ; preds = %dec_label_pc_359e1.lr.ph, %dec_label_pc_35a1e
  %stack_var_-40.0123 = phi i32 [ %stack_var_-40.0.ph130, %dec_label_pc_359e1.lr.ph ], [ %v1_35a24, %dec_label_pc_35a1e ]
  %v1_359e7 = call i32 @unknown_6b2bc(i32 %stack_var_-40.0123)
  %v3_359ff = call i32 @unknown_64cc6(i32 %arg2, i32 %arg5, i32 %v1_359e7)
  %v4_35a04 = trunc i32 %v3_359ff to i8
  %v5_35a04 = icmp eq i8 %v4_35a04, 0
  br i1 %v5_35a04, label %dec_label_pc_35a1e, label %dec_label_pc_35a08

dec_label_pc_35a08:                               ; preds = %dec_label_pc_359e1
  %v1_35a14 = call i32 @unknown_6b300(i32 %stack_var_-40.0123)
  %v10_35a2c116 = icmp eq i32 %v1_35a14, 0
  %v1_35a30117 = icmp eq i1 %v10_35a2c116, false
  %v5_35a33121 = icmp eq i1 %v1_35a30117, false
  %v1_35a35122 = icmp eq i1 %v5_35a33121, false
  br i1 %v1_35a35122, label %dec_label_pc_359e1.lr.ph, label %dec_label_pc_35a37

dec_label_pc_35a1e:                               ; preds = %dec_label_pc_359e1
  %v1_35a24 = call i32 @unknown_6b330(i32 %stack_var_-40.0123)
  %v10_35a2c = icmp eq i32 %v1_35a24, 0
  %v1_35a30 = icmp eq i1 %v10_35a2c, false
  %v5_35a33 = icmp eq i1 %v1_35a30, false
  %v1_35a35 = icmp eq i1 %v5_35a33, false
  br i1 %v1_35a35, label %dec_label_pc_359e1, label %dec_label_pc_35a37

dec_label_pc_35a37:                               ; preds = %dec_label_pc_35a1e, %dec_label_pc_359b0, %dec_label_pc_35a08
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_359b0 ], [ %stack_var_-40.0123, %dec_label_pc_35a08 ], [ %stack_var_-44.0.ph131, %dec_label_pc_35a1e ]
  %v2_35a44 = call i32 @unknown_68f34(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  %v1_35a56 = call i32 @function_35a5d()
  ret i32 %v1_35a56

; uselistorder directives
  uselistorder i32 %v1_35a14, { 1, 0 }
  uselistorder i32 %stack_var_-40.0123, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_35a37, { 0, 2, 1 }
  uselistorder label %dec_label_pc_359e1, { 1, 0 }
  uselistorder label %dec_label_pc_359e1.lr.ph, { 1, 0 }
}

define i32 @function_35a5d() local_unnamed_addr {
dec_label_pc_35a5d:
  %v0_35a5e = load i32, i32* @eax, align 8
  ret i32 %v0_35a5e
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEPT_RSP_(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a61:
  store i32 %arg1, i32* @eax, align 8
  %v2_35a85 = call i32 @function_35a8c(i32 %arg1)
  ret i32 %v2_35a85
}

define i32 @function_35a8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35a8a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35a8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a8c:
  %v0_35a8d = load i32, i32* @eax, align 8
  ret i32 %v0_35a8d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a8e:
  %v1_35aa8 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_35aa8, i32* @eax, align 8
  %v2_35ab5 = call i32 @function_35abc(i32 %arg1)
  ret i32 %v2_35ab5
}

define i32 @function_35abc(i32 %arg1) local_unnamed_addr {
dec_label_pc_35abc:
  %v0_35abd = load i32, i32* @eax, align 8
  ret i32 %v0_35abd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_35abe:
  %stack_var_-17 = alloca i32, align 4
  %v1_35adb = call i32 @unknown_6c9d9(i32 %arg1)
  %v2_35ae4 = ptrtoint i32* %stack_var_-17 to i32
  %v2_35aea = call i32 @unknown_6b5c0(i32 %v2_35ae4, i32 %v1_35adb)
  store i32 %v2_35aea, i32* @eax, align 8
  %v1_35af9 = call i32 @function_35b00()
  ret i32 %v1_35af9
}

define i32 @function_35b00() local_unnamed_addr {
dec_label_pc_35b00:
  %v0_35b01 = load i32, i32* @eax, align 8
  ret i32 %v0_35b01
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEclERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35b02:
  ret i32 %arg2
}

define i32 @function_35b26(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35b26:
  %v0_35b26 = load i32, i32* @edx, align 8
  %v3_35b26 = icmp eq i32 %v0_35b26, 30
  br i1 %v3_35b26, label %bb, label %dec_label_pc_35b26.dec_label_pc_35b2e_crit_edge

dec_label_pc_35b26.dec_label_pc_35b2e_crit_edge:  ; preds = %dec_label_pc_35b26
  %v2_35b2c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_35b2e

bb:                                               ; preds = %dec_label_pc_35b26
  %v1_35b2c = call i32 @function_35b33()
  br label %dec_label_pc_35b2e

dec_label_pc_35b2e:                               ; preds = %dec_label_pc_35b26.dec_label_pc_35b2e_crit_edge, %bb
  %v2_35b2c = phi i32 [ %v2_35b2c.pre, %dec_label_pc_35b26.dec_label_pc_35b2e_crit_edge ], [ %v1_35b2c, %bb ]
  ret i32 %v2_35b2c

; uselistorder directives
  uselistorder label %dec_label_pc_35b2e, { 1, 0 }
}

define i32 @function_35b33() local_unnamed_addr {
dec_label_pc_35b33:
  %v0_35b34 = load i32, i32* @eax, align 8
  ret i32 %v0_35b34
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35b36:
  ret i32 %arg1
}

define i32 @function_35b46(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35b46:
  %v2_35b46 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_35b46 = load i32, i32* @eax, align 8
  %v4_35b46 = trunc i32 %v3_35b46 to i8
  %v5_35b46 = add i8 %v4_35b46, %v2_35b46
  %v21_35b46 = inttoptr i32 %v3_35b46 to i8*
  store i8 %v5_35b46, i8* %v21_35b46, align 1
  %v0_35b48 = load i32, i32* @eax, align 8
  %v1_35b48 = load i32, i32* @ebp, align 4
  %v2_35b48 = add i32 %v1_35b48, -12
  %v3_35b48 = inttoptr i32 %v2_35b48 to i32*
  store i32 %v0_35b48, i32* %v3_35b48, align 4
  %v0_35b4d = load i32, i32* @ebp, align 4
  %v1_35b4d = add i32 %v0_35b4d, -28
  %v2_35b4d = inttoptr i32 %v1_35b4d to i32*
  %v3_35b4d = load i32, i32* %v2_35b4d, align 4
  %v1_35b50 = add i32 %v3_35b4d, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_35b50 = inttoptr i32 %v1_35b50 to i32*
  %v3_35b50 = load i32, i32* %v2_35b50, align 4
  store i32 %v3_35b50, i32* @eax, align 8
  %v1_35b53 = add i32 %v0_35b4d, -12
  %v2_35b53 = inttoptr i32 %v1_35b53 to i32*
  %v3_35b53 = load i32, i32* %v2_35b53, align 4
  %v3_35b56 = icmp eq i32 %v3_35b53, 30
  br i1 %v3_35b56, label %bb, label %dec_label_pc_35b5f

bb:                                               ; preds = %dec_label_pc_35b46
  %v1_35b5d = call i32 @function_35b64()
  br label %dec_label_pc_35b5f

dec_label_pc_35b5f:                               ; preds = %bb, %dec_label_pc_35b46
  %v2_35b5d = phi i32 [ %v1_35b5d, %bb ], [ %v3_35b50, %dec_label_pc_35b46 ]
  ret i32 %v2_35b5d
}

define i32 @function_35b64() local_unnamed_addr {
dec_label_pc_35b64:
  %v0_35b65 = load i32, i32* @eax, align 8
  ret i32 %v0_35b65
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_35b66:
  %v1_35ba2 = call i32 @unknown_69006(i32 %arg2)
  %v1_35bb2 = call i32 @unknown_6b624(i32 %arg4)
  ret i32 %arg5
}

define i32 @function_35bc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_35bc2:
  %v0_35bc2 = load i32, i32* @eax, align 8
  %v1_35bc6 = call i32 @unknown_6b668(i32 %v0_35bc2)
  ret i32 %v1_35bc6
}

define i32 @function_35bdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_35bdc:
  %v0_35bdc = load i32, i32* @eax, align 8
  %v1_35bdc = trunc i32 %v0_35bdc to i8
  %v5_35bdc = mul i8 %v1_35bdc, 2
  %v15_35bdc = icmp ne i8 %v5_35bdc, 0
  %v1_35bee = zext i1 %v15_35bdc to i8
  %v2_35bee = load i32, i32* @ebp, align 4
  %v3_35bee = add i32 %v2_35bee, -13
  %v4_35bee = inttoptr i32 %v3_35bee to i8*
  store i8 %v1_35bee, i8* %v4_35bee, align 1
  %v0_35bf1 = load i32, i32* @ebp, align 4
  %v1_35bf1 = add i32 %v0_35bf1, -44
  %v2_35bf1 = inttoptr i32 %v1_35bf1 to i32*
  %v3_35bf1 = load i32, i32* %v2_35bf1, align 4
  %v1_35bf8 = add i32 %v0_35bf1, -32
  %v2_35bf8 = inttoptr i32 %v1_35bf8 to i32*
  %v3_35bf8 = load i32, i32* %v2_35bf8, align 4
  %v2_35bfe = call i32 @unknown_6cab2(i32 %v3_35bf8, i32 %v3_35bf1)
  %v1_35c03 = load i32, i32* @ebp, align 4
  %v2_35c03 = add i32 %v1_35c03, -20
  %v3_35c03 = inttoptr i32 %v2_35c03 to i32*
  store i32 %v2_35bfe, i32* %v3_35c03, align 4
  %v0_35c06 = load i32, i32* @ebp, align 4
  %v1_35c0c = add i32 %v0_35c06, -13
  %v2_35c0c = inttoptr i32 %v1_35c0c to i8*
  %v3_35c0c = load i8, i8* %v2_35c0c, align 1
  %v4_35c0c = zext i8 %v3_35c0c to i32
  ret i32 %v4_35c0c

; uselistorder directives
  uselistorder i8 2, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 15, 12, 13, 14 }
}

define i32 @function_35bef(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35bef:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35c11(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35c11:
  %v0_35c12 = load i32, i32* @eax, align 8
  %v11_35c12 = and i32 %v0_35c12, or (i32 zext (i8 ptrtoint (i32* @global_var_c.2390 to i8) to i32), i32 -256)
  ret i32 %v11_35c12

; uselistorder directives
  uselistorder i8 ptrtoint (i32* @global_var_c.2390 to i8), { 1, 2, 3, 0, 4 }
}

define i32 @function_35c5e() local_unnamed_addr {
dec_label_pc_35c5e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_35c5e = load i32, i32* %ebx.global-to-local, align 4
  %v1_35c5e = add i32 %v0_35c5e, 1566262468
  %v2_35c5e = inttoptr i32 %v1_35c5e to i32*
  %v3_35c5e = load i32, i32* %v2_35c5e, align 4
  %v4_35c5e = add i32 %v3_35c5e, 1
  store i32 %v4_35c5e, i32* %v2_35c5e, align 4
  %v0_35c64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35c64
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35c68:
  %v1_35c92 = call i32 @unknown_690d8(i32 %arg2)
  ret i32 %arg2
}

define i32 @function_35ca4(i32 %arg1) local_unnamed_addr {
dec_label_pc_35ca4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_0, align 4
  %v0_35ca4 = load i32, i32* @ecx, align 4
  %v1_35ca4 = add i32 %v0_35ca4, 1170663493
  %v2_35ca4 = inttoptr i32 %v1_35ca4 to i8*
  %v3_35ca4 = load i8, i8* %v2_35ca4, align 1
  %v5_35ca4 = trunc i32 %v0_35ca4 to i8
  %v6_35ca4 = add i8 %v3_35ca4, %v5_35ca4
  store i8 %v6_35ca4, i8* %v2_35ca4, align 1
  %v1_35caa = load i32, i32* @ebp, align 4
  br label %dec_label_pc_35cae

dec_label_pc_35cae:                               ; preds = %dec_label_pc_35d07, %dec_label_pc_35ca4
  %v0_35cae = phi i32 [ %v0_35d0a, %dec_label_pc_35d07 ], [ %v1_35caa, %dec_label_pc_35ca4 ]
  %v1_35cae = add i32 %v0_35cae, -28
  %v2_35cae = inttoptr i32 %v1_35cae to i32*
  %v3_35cae = load i32, i32* %v2_35cae, align 4
  store i32 %v3_35cae, i32* %eax.global-to-local, align 8
  %v2_35cb1 = add i32 %v0_35cae, -24
  %v3_35cb1 = inttoptr i32 %v2_35cb1 to i32*
  store i32 %v3_35cae, i32* %v3_35cb1, align 4
  %v0_35cb4 = load i32, i32* @ebp, align 4
  %v1_35cb4 = add i32 %v0_35cb4, -28
  %v2_35cb4 = inttoptr i32 %v1_35cb4 to i32*
  %v3_35cb4 = load i32, i32* %v2_35cb4, align 4
  store i32 %v3_35cb4, i32* %eax.global-to-local, align 8
  store i32 %v3_35cb4, i32* %stack_var_4, align 4
  %v1_35cba = call i32 @unknown_6b574(i32 %v3_35cb4)
  store i32 %v1_35cba, i32* %eax.global-to-local, align 8
  store i32 %v1_35cba, i32* @ebx, align 4
  %v0_35cc1 = load i32, i32* @ebp, align 4
  %v1_35cc1 = add i32 %v0_35cc1, -68
  %v2_35cc1 = inttoptr i32 %v1_35cc1 to i32*
  %v3_35cc1 = load i32, i32* %v2_35cc1, align 4
  %v1_35cc8 = add i32 %v0_35cc1, -18
  store i32 %v1_35cc8, i32* %eax.global-to-local, align 8
  store i32 %v1_35cc8, i32* %stack_var_4, align 4
  %v2_35cce = call i32 @unknown_6b76a(i32 %v1_35cc8, i32 %v3_35cc1)
  store i32 %v2_35cce, i32* %eax.global-to-local, align 8
  %v0_35cd3 = load i32, i32* @ebp, align 4
  %v1_35cd3 = add i32 %v0_35cd3, -64
  %v2_35cd3 = inttoptr i32 %v1_35cd3 to i32*
  %v3_35cd3 = load i32, i32* %v2_35cd3, align 4
  store i32 %v3_35cd3, i32* %edx.global-to-local, align 8
  %v0_35cd6 = load i32, i32* @ebx, align 4
  store i32 %v3_35cd3, i32* %stack_var_4, align 4
  %v3_35ce1 = call i32 @unknown_64f7e(i32 %v3_35cd3, i32 %v2_35cce, i32 %v0_35cd6)
  store i32 %v3_35ce1, i32* %eax.global-to-local, align 8
  %v1_35ce6 = trunc i32 %v3_35ce1 to i8
  %v2_35ce6 = load i32, i32* @ebp, align 4
  %v3_35ce6 = add i32 %v2_35ce6, -13
  %v4_35ce6 = inttoptr i32 %v3_35ce6 to i8*
  store i8 %v1_35ce6, i8* %v4_35ce6, align 1
  %v0_35ce9 = load i32, i32* @ebp, align 4
  %v1_35ce9 = add i32 %v0_35ce9, -13
  %v2_35ce9 = inttoptr i32 %v1_35ce9 to i8*
  %v3_35ce9 = load i8, i8* %v2_35ce9, align 1
  %v10_35ce9 = icmp eq i8 %v3_35ce9, 0
  %v1_35cfc = add i32 %v0_35ce9, -28
  %v2_35cfc = inttoptr i32 %v1_35cfc to i32*
  %v3_35cfc = load i32, i32* %v2_35cfc, align 4
  store i32 %v3_35cfc, i32* %eax.global-to-local, align 8
  store i32 %v3_35cfc, i32* %stack_var_4, align 4
  br i1 %v10_35ce9, label %dec_label_pc_35cfc, label %dec_label_pc_35cef

dec_label_pc_35cef:                               ; preds = %dec_label_pc_35cae
  %v1_35cf5 = call i32 @unknown_6b5b8(i32 %v3_35cfc)
  br label %dec_label_pc_35d07

dec_label_pc_35cfc:                               ; preds = %dec_label_pc_35cae
  %v1_35d02 = call i32 @unknown_6b5e8(i32 %v3_35cfc)
  br label %dec_label_pc_35d07

dec_label_pc_35d07:                               ; preds = %dec_label_pc_35cfc, %dec_label_pc_35cef
  %storemerge = phi i32 [ %v1_35d02, %dec_label_pc_35cfc ], [ %v1_35cf5, %dec_label_pc_35cef ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_35d07 = load i32, i32* @ebp, align 4
  %v2_35d07 = add i32 %v1_35d07, -28
  %v3_35d07 = inttoptr i32 %v2_35d07 to i32*
  store i32 %storemerge, i32* %v3_35d07, align 4
  %v0_35d0a = load i32, i32* @ebp, align 4
  %v1_35d0a = add i32 %v0_35d0a, -28
  %v2_35d0a = inttoptr i32 %v1_35d0a to i32*
  %v3_35d0a = load i32, i32* %v2_35d0a, align 4
  %v10_35d0a = icmp eq i32 %v3_35d0a, 0
  %v1_35d0e = icmp eq i1 %v10_35d0a, false
  %v2_35d0e = zext i1 %v1_35d0e to i32
  %v3_35d0e = load i32, i32* %eax.global-to-local, align 8
  %v4_35d0e = and i32 %v3_35d0e, -256
  %v5_35d0e = or i32 %v2_35d0e, %v4_35d0e
  store i32 %v5_35d0e, i32* %eax.global-to-local, align 8
  %v5_35d11 = icmp eq i1 %v1_35d0e, false
  %v1_35d13 = icmp eq i1 %v5_35d11, false
  br i1 %v1_35d13, label %dec_label_pc_35cae, label %dec_label_pc_35d15

dec_label_pc_35d15:                               ; preds = %dec_label_pc_35d07
  %v1_35d15 = add i32 %v0_35d0a, -24
  %v2_35d15 = inttoptr i32 %v1_35d15 to i32*
  %v3_35d15 = load i32, i32* %v2_35d15, align 4
  %v1_35d1c = add i32 %v0_35d0a, -44
  store i32 %v1_35d1c, i32* %eax.global-to-local, align 8
  store i32 %v1_35d1c, i32* %stack_var_4, align 4
  %v2_35d22 = call i32 @unknown_691ec(i32 %v1_35d1c, i32 %v3_35d15)
  store i32 %v2_35d22, i32* %eax.global-to-local, align 8
  %v0_35d27 = load i32, i32* @ebp, align 4
  %v1_35d27 = add i32 %v0_35d27, -13
  %v2_35d27 = inttoptr i32 %v1_35d27 to i8*
  %v3_35d27 = load i8, i8* %v2_35d27, align 1
  %v10_35d27 = icmp eq i8 %v3_35d27, 0
  br i1 %v10_35d27, label %dec_label_pc_35db3, label %dec_label_pc_35d31

dec_label_pc_35d31:                               ; preds = %dec_label_pc_35d15
  %v1_35d31 = add i32 %v0_35d27, -40
  store i32 %v1_35d31, i32* %eax.global-to-local, align 8
  %v1_35d34 = add i32 %v0_35d27, -64
  %v2_35d34 = inttoptr i32 %v1_35d34 to i32*
  %v3_35d34 = load i32, i32* %v2_35d34, align 4
  store i32 %v3_35d34, i32* %edx.global-to-local, align 8
  store i32 %v1_35d31, i32* %stack_var_4, align 4
  %v2_35d3e = call i32 @unknown_69e20(i32 %v1_35d31, i32 %v3_35d34)
  %v0_35d46 = load i32, i32* @ebp, align 4
  %v1_35d46 = add i32 %v0_35d46, -40
  store i32 %v1_35d46, i32* %stack_var_4, align 4
  %v1_35d4d = add i32 %v0_35d46, -44
  store i32 %v1_35d4d, i32* %eax.global-to-local, align 8
  store i32 %v1_35d4d, i32* %stack_var_0, align 4
  %v2_35d53 = call i32 @unknown_66604(i32 %v1_35d4d, i32 %v1_35d46)
  store i32 %v2_35d53, i32* %eax.global-to-local, align 8
  %v4_35d58 = trunc i32 %v2_35d53 to i8
  %v5_35d58 = icmp eq i8 %v4_35d58, 0
  %v0_35da8 = load i32, i32* @ebp, align 4
  br i1 %v5_35d58, label %dec_label_pc_35da8, label %dec_label_pc_35d5c

dec_label_pc_35d5c:                               ; preds = %dec_label_pc_35d31
  %v1_35d5c = add i32 %v0_35da8, -17
  %v2_35d5c = inttoptr i32 %v1_35d5c to i8*
  store i8 1, i8* %v2_35d5c, align 1
  %v0_35d60 = load i32, i32* @ebp, align 4
  %v1_35d60 = add i32 %v0_35d60, -36
  store i32 %v1_35d60, i32* %eax.global-to-local, align 8
  %v1_35d63 = add i32 %v0_35d60, -68
  %v2_35d63 = inttoptr i32 %v1_35d63 to i32*
  %v3_35d63 = load i32, i32* %v2_35d63, align 4
  store i32 %v3_35d63, i32* %edx.global-to-local, align 8
  %v1_35d6a = add i32 %v0_35d60, -24
  %v2_35d6a = inttoptr i32 %v1_35d6a to i32*
  %v3_35d6a = load i32, i32* %v2_35d6a, align 4
  store i32 %v3_35d6a, i32* %edx.global-to-local, align 8
  %v1_35d71 = add i32 %v0_35d60, -28
  %v2_35d71 = inttoptr i32 %v1_35d71 to i32*
  %v3_35d71 = load i32, i32* %v2_35d71, align 4
  store i32 %v3_35d71, i32* %edx.global-to-local, align 8
  %v1_35d78 = add i32 %v0_35d60, -64
  %v2_35d78 = inttoptr i32 %v1_35d78 to i32*
  %v3_35d78 = load i32, i32* %v2_35d78, align 4
  store i32 %v3_35d78, i32* %edx.global-to-local, align 8
  store i32 %v3_35d78, i32* %stack_var_4, align 4
  store i32 %v1_35d60, i32* %stack_var_0, align 4
  %v5_35d82 = call i32 @unknown_6b7ce(i32 %v1_35d60, i32 %v3_35d78, i32 %v3_35d71, i32 %v3_35d6a, i32 %v3_35d63)
  %v0_35d8a = load i32, i32* @ebp, align 4
  %v1_35d8a = add i32 %v0_35d8a, -17
  store i32 %v1_35d8a, i32* %stack_var_4, align 4
  %v1_35d91 = add i32 %v0_35d8a, -36
  store i32 %v1_35d91, i32* %eax.global-to-local, align 8
  store i32 %v1_35d91, i32* %stack_var_0, align 4
  %v1_35d98 = add i32 %v0_35d8a, -60
  %v2_35d98 = inttoptr i32 %v1_35d98 to i32*
  %v3_35d98 = load i32, i32* %v2_35d98, align 4
  store i32 %v3_35d98, i32* %eax.global-to-local, align 8
  %v3_35d9e = call i32 @unknown_6cc82(i32 %v3_35d98, i32 %v1_35d91, i32 %v1_35d8a)
  store i32 %v3_35d9e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35e51

dec_label_pc_35da8:                               ; preds = %dec_label_pc_35d31
  %v1_35da8 = add i32 %v0_35da8, -44
  store i32 %v1_35da8, i32* %eax.global-to-local, align 8
  store i32 %v1_35da8, i32* %stack_var_0, align 4
  %v1_35dae = call i32 @unknown_6ccce(i32 %v1_35da8)
  store i32 %v1_35dae, i32* %eax.global-to-local, align 8
  %v0_35db3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_35db3

dec_label_pc_35db3:                               ; preds = %dec_label_pc_35da8, %dec_label_pc_35d15
  %v0_35db3 = phi i32 [ %v0_35d27, %dec_label_pc_35d15 ], [ %v0_35db3.pre, %dec_label_pc_35da8 ]
  %stack_var_8.0 = phi i32 [ %v3_35d15, %dec_label_pc_35d15 ], [ %v3_35d34, %dec_label_pc_35da8 ]
  %v1_35db3 = add i32 %v0_35db3, -68
  %v2_35db3 = inttoptr i32 %v1_35db3 to i32*
  %v3_35db3 = load i32, i32* %v2_35db3, align 4
  %v1_35db6 = load i32, i32* @esp, align 4
  %v2_35db6 = add i32 %v1_35db6, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35db6 = inttoptr i32 %v2_35db6 to i32*
  store i32 %v3_35db3, i32* %v3_35db6, align 4
  %v0_35dba = load i32, i32* @ebp, align 4
  %v1_35dba = add i32 %v0_35dba, -16
  store i32 %v1_35dba, i32* %eax.global-to-local, align 8
  %v1_35dbd = load i32, i32* @esp, align 4
  %v2_35dbd = inttoptr i32 %v1_35dbd to i32*
  store i32 %v1_35dba, i32* %v2_35dbd, align 4
  %v0_35dc0 = load i32, i32* %stack_var_0, align 4
  %v1_35dc0 = load i32, i32* %stack_var_4, align 4
  %v2_35dc0 = call i32 @unknown_6b76a(i32 %v0_35dc0, i32 %v1_35dc0)
  store i32 %v2_35dc0, i32* %eax.global-to-local, align 8
  store i32 %v2_35dc0, i32* @ebx, align 4
  %v0_35dc7 = load i32, i32* @ebp, align 4
  %v1_35dc7 = add i32 %v0_35dc7, -44
  %v2_35dc7 = inttoptr i32 %v1_35dc7 to i32*
  %v3_35dc7 = load i32, i32* %v2_35dc7, align 4
  store i32 %v3_35dc7, i32* %eax.global-to-local, align 8
  %v1_35dca = load i32, i32* @esp, align 4
  %v2_35dca = inttoptr i32 %v1_35dca to i32*
  store i32 %v3_35dc7, i32* %v2_35dca, align 4
  %v0_35dcd = call i32 @unknown_6b726()
  store i32 %v0_35dcd, i32* %eax.global-to-local, align 8
  store i32 %v0_35dcd, i32* %edx.global-to-local, align 8
  %v0_35dd4 = load i32, i32* @ebp, align 4
  %v1_35dd4 = add i32 %v0_35dd4, -64
  %v2_35dd4 = inttoptr i32 %v1_35dd4 to i32*
  %v3_35dd4 = load i32, i32* %v2_35dd4, align 4
  store i32 %v3_35dd4, i32* %eax.global-to-local, align 8
  %v0_35dd7 = load i32, i32* @ebx, align 4
  %v1_35dd7 = load i32, i32* @esp, align 4
  %v2_35dd7 = add i32 %v1_35dd7, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_35dd7 = inttoptr i32 %v2_35dd7 to i32*
  store i32 %v0_35dd7, i32* %v3_35dd7, align 4
  %v0_35ddb = load i32, i32* %edx.global-to-local, align 8
  %v1_35ddb = load i32, i32* @esp, align 4
  %v2_35ddb = add i32 %v1_35ddb, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35ddb = inttoptr i32 %v2_35ddb to i32*
  store i32 %v0_35ddb, i32* %v3_35ddb, align 4
  %v0_35ddf = load i32, i32* %eax.global-to-local, align 8
  %v1_35ddf = load i32, i32* @esp, align 4
  %v2_35ddf = inttoptr i32 %v1_35ddf to i32*
  store i32 %v0_35ddf, i32* %v2_35ddf, align 4
  %v0_35de2 = load i32, i32* %stack_var_0, align 4
  %v1_35de2 = load i32, i32* %stack_var_4, align 4
  %v3_35de2 = call i32 @unknown_64f7e(i32 %v0_35de2, i32 %v1_35de2, i32 %stack_var_8.0)
  store i32 %v3_35de2, i32* %eax.global-to-local, align 8
  %v4_35de7 = trunc i32 %v3_35de2 to i8
  %v5_35de7 = icmp eq i8 %v4_35de7, 0
  %v0_35e34 = load i32, i32* @ebp, align 4
  br i1 %v5_35de7, label %dec_label_pc_35e34, label %dec_label_pc_35deb

dec_label_pc_35deb:                               ; preds = %dec_label_pc_35db3
  %v1_35deb = add i32 %v0_35e34, -15
  %v2_35deb = inttoptr i32 %v1_35deb to i8*
  store i8 1, i8* %v2_35deb, align 1
  %v0_35def = load i32, i32* @ebp, align 4
  %v1_35def = add i32 %v0_35def, -32
  store i32 %v1_35def, i32* %eax.global-to-local, align 8
  %v1_35df2 = add i32 %v0_35def, -68
  %v2_35df2 = inttoptr i32 %v1_35df2 to i32*
  %v3_35df2 = load i32, i32* %v2_35df2, align 4
  store i32 %v3_35df2, i32* %edx.global-to-local, align 8
  %v1_35df5 = load i32, i32* @esp, align 4
  %v2_35df5 = add i32 %v1_35df5, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_35df5 = inttoptr i32 %v2_35df5 to i32*
  store i32 %v3_35df2, i32* %v3_35df5, align 4
  %v0_35df9 = load i32, i32* @ebp, align 4
  %v1_35df9 = add i32 %v0_35df9, -24
  %v2_35df9 = inttoptr i32 %v1_35df9 to i32*
  %v3_35df9 = load i32, i32* %v2_35df9, align 4
  store i32 %v3_35df9, i32* %edx.global-to-local, align 8
  %v1_35dfc = load i32, i32* @esp, align 4
  %v2_35dfc = add i32 %v1_35dfc, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_35dfc = inttoptr i32 %v2_35dfc to i32*
  store i32 %v3_35df9, i32* %v3_35dfc, align 4
  %v0_35e00 = load i32, i32* @ebp, align 4
  %v1_35e00 = add i32 %v0_35e00, -28
  %v2_35e00 = inttoptr i32 %v1_35e00 to i32*
  %v3_35e00 = load i32, i32* %v2_35e00, align 4
  store i32 %v3_35e00, i32* %edx.global-to-local, align 8
  %v1_35e03 = load i32, i32* @esp, align 4
  %v2_35e03 = add i32 %v1_35e03, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_35e03 = inttoptr i32 %v2_35e03 to i32*
  store i32 %v3_35e00, i32* %v3_35e03, align 4
  %v0_35e07 = load i32, i32* @ebp, align 4
  %v1_35e07 = add i32 %v0_35e07, -64
  %v2_35e07 = inttoptr i32 %v1_35e07 to i32*
  %v3_35e07 = load i32, i32* %v2_35e07, align 4
  store i32 %v3_35e07, i32* %edx.global-to-local, align 8
  %v1_35e0a = load i32, i32* @esp, align 4
  %v2_35e0a = add i32 %v1_35e0a, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35e0a = inttoptr i32 %v2_35e0a to i32*
  store i32 %v3_35e07, i32* %v3_35e0a, align 4
  %v0_35e0e = load i32, i32* %eax.global-to-local, align 8
  %v1_35e0e = load i32, i32* @esp, align 4
  %v2_35e0e = inttoptr i32 %v1_35e0e to i32*
  store i32 %v0_35e0e, i32* %v2_35e0e, align 4
  %v0_35e11 = load i32, i32* %stack_var_0, align 4
  %v1_35e11 = load i32, i32* %stack_var_4, align 4
  %v5_35e11 = call i32 @unknown_6b7ce(i32 %v0_35e11, i32 %v1_35e11, i32 %stack_var_8.0, i32 %v0_35cd6, i32 %tmp6)
  %v0_35e16 = load i32, i32* @esp, align 4
  %v1_35e16 = sub i32 %v0_35e16, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_35e19 = load i32, i32* @ebp, align 4
  %v1_35e19 = add i32 %v0_35e19, -15
  %v2_35e1c = add i32 %v1_35e16, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_35e1c = inttoptr i32 %v2_35e1c to i32*
  store i32 %v1_35e19, i32* %v3_35e1c, align 4
  %v0_35e20 = load i32, i32* @ebp, align 4
  %v1_35e20 = add i32 %v0_35e20, -32
  store i32 %v1_35e20, i32* %eax.global-to-local, align 8
  %v1_35e23 = load i32, i32* @esp, align 4
  %v2_35e23 = add i32 %v1_35e23, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35e23 = inttoptr i32 %v2_35e23 to i32*
  store i32 %v1_35e20, i32* %v3_35e23, align 4
  %v0_35e27 = load i32, i32* @ebp, align 4
  %v1_35e27 = add i32 %v0_35e27, -60
  %v2_35e27 = inttoptr i32 %v1_35e27 to i32*
  %v3_35e27 = load i32, i32* %v2_35e27, align 4
  store i32 %v3_35e27, i32* %eax.global-to-local, align 8
  %v1_35e2a = load i32, i32* @esp, align 4
  %v2_35e2a = inttoptr i32 %v1_35e2a to i32*
  store i32 %v3_35e27, i32* %v2_35e2a, align 4
  %v0_35e2d = load i32, i32* %stack_var_0, align 4
  %v1_35e2d = load i32, i32* %stack_var_4, align 4
  %v3_35e2d = call i32 @unknown_6cc82(i32 %v0_35e2d, i32 %v1_35e2d, i32 %stack_var_8.0)
  store i32 %v3_35e2d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35e51

dec_label_pc_35e34:                               ; preds = %dec_label_pc_35db3
  %v1_35e34 = add i32 %v0_35e34, -14
  %v2_35e34 = inttoptr i32 %v1_35e34 to i8*
  store i8 0, i8* %v2_35e34, align 1
  %v0_35e38 = load i32, i32* @ebp, align 4
  %v1_35e38 = add i32 %v0_35e38, -14
  %v1_35e3b = load i32, i32* @esp, align 4
  %v2_35e3b = add i32 %v1_35e3b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_35e3b = inttoptr i32 %v2_35e3b to i32*
  store i32 %v1_35e38, i32* %v3_35e3b, align 4
  %v0_35e3f = load i32, i32* @ebp, align 4
  %v1_35e3f = add i32 %v0_35e3f, -44
  store i32 %v1_35e3f, i32* %eax.global-to-local, align 8
  %v1_35e42 = load i32, i32* @esp, align 4
  %v2_35e42 = add i32 %v1_35e42, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_35e42 = inttoptr i32 %v2_35e42 to i32*
  store i32 %v1_35e3f, i32* %v3_35e42, align 4
  %v0_35e46 = load i32, i32* @ebp, align 4
  %v1_35e46 = add i32 %v0_35e46, -60
  %v2_35e46 = inttoptr i32 %v1_35e46 to i32*
  %v3_35e46 = load i32, i32* %v2_35e46, align 4
  store i32 %v3_35e46, i32* %eax.global-to-local, align 8
  %v1_35e49 = load i32, i32* @esp, align 4
  %v2_35e49 = inttoptr i32 %v1_35e49 to i32*
  store i32 %v3_35e46, i32* %v2_35e49, align 4
  %v0_35e4c = load i32, i32* %stack_var_0, align 4
  %v1_35e4c = load i32, i32* %stack_var_4, align 4
  %v3_35e4c = call i32 @unknown_6cc82(i32 %v0_35e4c, i32 %v1_35e4c, i32 %stack_var_8.0)
  store i32 %v3_35e4c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35e51

dec_label_pc_35e51:                               ; preds = %dec_label_pc_35e34, %dec_label_pc_35deb, %dec_label_pc_35d5c
  %v0_35e51 = load i32, i32* @ebp, align 4
  %v1_35e51 = add i32 %v0_35e51, -60
  %v2_35e51 = inttoptr i32 %v1_35e51 to i32*
  %v3_35e51 = load i32, i32* %v2_35e51, align 4
  store i32 %v3_35e51, i32* @eax, align 8
  %v1_35e54 = add i32 %v0_35e51, -12
  %v2_35e54 = inttoptr i32 %v1_35e54 to i32*
  %v3_35e54 = load i32, i32* %v2_35e54, align 4
  %v2_35e57 = xor i32 %v3_35e54, 30
  %v3_35e57 = icmp eq i32 %v2_35e57, 0
  store i32 %v2_35e57, i32* %edx.global-to-local, align 8
  br i1 %v3_35e57, label %bb, label %dec_label_pc_35e60

bb:                                               ; preds = %dec_label_pc_35e51
  %v1_35e5e = call i32 @function_35e65()
  store i32 %v1_35e5e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35e60

dec_label_pc_35e60:                               ; preds = %bb, %dec_label_pc_35e51
  %v2_35e5e = phi i32 [ %v1_35e5e, %bb ], [ %v3_35e51, %dec_label_pc_35e51 ]
  ret i32 %v2_35e5e

; uselistorder directives
  uselistorder i32 %v0_35e34, { 1, 0 }
  uselistorder i32 %stack_var_8.0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_35d60, { 1, 0, 2 }
  uselistorder i32 %v0_35d60, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_35da8, { 1, 0 }
  uselistorder i32 %v0_35d27, { 0, 2, 1, 3 }
  uselistorder i32 %v0_35d0a, { 1, 0, 3, 2 }
  uselistorder i32 %v3_35cfc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_35cae, { 1, 0 }
  uselistorder i32* %stack_var_0, { 0, 1, 2, 3, 4, 6, 7, 8, 9, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7, 8, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 -14, { 19, 20, 8, 9, 0, 10, 1, 12, 13, 15, 14, 16, 11, 17, 18, 2, 7, 3, 24, 21, 22, 23, 25, 4, 5, 6 }
  uselistorder i32 -15, { 8, 9, 2, 3, 12, 4, 10, 11, 5, 6, 7, 1, 0 }
  uselistorder i32* @esp, { 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 0, 41, 42, 43, 44, 45, 46, 47, 125, 126, 233, 234, 235, 236, 237, 238, 239, 240, 48, 49, 50, 51, 52, 53, 54, 55, 56, 266, 140, 141, 142, 143, 72, 73, 74, 75, 3, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 164, 165, 166, 167, 168, 169, 170, 185, 186, 195, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 85, 4, 76, 77, 78, 79, 80, 81, 82, 83, 84, 8, 9, 10, 11, 86, 87, 88, 5, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 26, 27, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 1, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 6, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 264, 265, 267, 139, 144, 191, 192, 193, 194, 7, 187, 188, 189, 190, 214, 215, 216, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 268 }
  uselistorder i32 (i32, i32, i32)* @unknown_6cc82, { 2, 1, 0 }
  uselistorder i32 -60, { 111, 112, 113, 114, 56, 57, 58, 59, 60, 121, 0, 37, 38, 39, 1, 122, 123, 124, 125, 64, 65, 52, 68, 66, 67, 117, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 54, 55, 2, 3, 46, 83, 47, 48, 53, 49, 50, 51, 118, 28, 61, 4, 101, 99, 100, 86, 85, 6, 5, 7, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 29, 30, 31, 32, 33, 34, 35, 36, 62, 63, 119, 120, 84, 102, 103, 104, 105, 115, 116, 109, 8, 9, 10, 11, 12, 106, 107, 108, 110, 40, 41, 42, 43, 44, 45, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_6b7ce, { 1, 0 }
  uselistorder i32 -17, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 -40, { 45, 46, 19, 20, 18, 58, 59, 23, 22, 24, 25, 26, 52, 53, 27, 49, 54, 55, 28, 21, 29, 30, 50, 51, 15, 16, 33, 17, 34, 35, 57, 13, 14, 31, 32, 36, 37, 38, 39, 41, 40, 47, 48, 42, 43, 44, 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 56 }
  uselistorder i32 (i32, i32, i32)* @unknown_64f7e, { 1, 0 }
  uselistorder i32 -64, { 119, 120, 121, 122, 123, 46, 47, 49, 50, 48, 51, 52, 53, 29, 30, 31, 0, 1, 2, 3, 135, 134, 136, 137, 138, 139, 140, 141, 32, 58, 59, 60, 61, 62, 57, 64, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 44, 45, 126, 124, 125, 127, 91, 41, 98, 99, 42, 43, 130, 131, 100, 101, 102, 27, 28, 54, 55, 56, 133, 92, 94, 95, 93, 96, 97, 104, 105, 107, 108, 106, 109, 110, 103, 4, 5, 6, 7, 8, 9, 10, 11, 111, 112, 113, 114, 117, 118, 115, 116, 33, 34, 35, 36, 37, 38, 39, 40, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 132, 128, 129, 24, 25, 26 }
  uselistorder i32 (i32, i32)* @unknown_6b76a, { 1, 0 }
  uselistorder i32 -18, { 3, 0, 1, 2 }
  uselistorder i32 -68, { 63, 64, 65, 66, 31, 32, 34, 33, 35, 0, 20, 21, 1, 2, 3, 72, 73, 74, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 30, 67, 68, 28, 29, 4, 54, 55, 17, 18, 19, 36, 37, 38, 39, 71, 51, 53, 52, 56, 57, 59, 58, 5, 6, 7, 8, 9, 10, 60, 61, 62, 22, 23, 24, 25, 26, 27, 11, 12, 13, 69, 70, 14, 15, 16 }
}

define i32 @function_35e65() local_unnamed_addr {
dec_label_pc_35e65:
  %v0_35e65 = load i32, i32* @ebp, align 4
  %v1_35e65 = add i32 %v0_35e65, -4
  %v2_35e65 = inttoptr i32 %v1_35e65 to i32*
  %v3_35e65 = load i32, i32* %v2_35e65, align 4
  store i32 %v3_35e65, i32* @ebx, align 4
  %v0_35e69 = load i32, i32* @eax, align 8
  ret i32 %v0_35e69
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35e6c:
  %v1_35e86 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_35e86, i32* @eax, align 8
  %v2_35e93 = call i32 @function_35e9a(i32 %arg1)
  ret i32 %v2_35e93

; uselistorder directives
  uselistorder i32 (i32)* @function_35e9a, { 1, 0 }
}

define i32 @function_35e9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_35e9a:
  %v0_35e9b = load i32, i32* @eax, align 8
  ret i32 %v0_35e9b
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_35e9c:
  %v2_35eb6 = load i32, i32* %arg1, align 4
  ret i32 %v2_35eb6
}

define i32 @function_35ec2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35ec2:
  %v9_35ecb = load i32, i32* @eax, align 8
  ret i32 %v9_35ecb
}

define i32 @function_35ed2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35ed2:
  %v0_35ed2 = load i1, i1* @zf, align 1
  br i1 %v0_35ed2, label %bb, label %dec_label_pc_35ed2.dec_label_pc_35ed4_crit_edge

dec_label_pc_35ed2.dec_label_pc_35ed4_crit_edge:  ; preds = %dec_label_pc_35ed2
  %v2_35ed2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_35ed4

bb:                                               ; preds = %dec_label_pc_35ed2
  %v1_35ed2 = call i32 @function_35ed9()
  br label %dec_label_pc_35ed4

dec_label_pc_35ed4:                               ; preds = %dec_label_pc_35ed2.dec_label_pc_35ed4_crit_edge, %bb
  %v2_35ed2 = phi i32 [ %v2_35ed2.pre, %dec_label_pc_35ed2.dec_label_pc_35ed4_crit_edge ], [ %v1_35ed2, %bb ]
  ret i32 %v2_35ed2

; uselistorder directives
  uselistorder i1* @zf, { 4, 18, 22, 6, 2, 3, 8, 24, 0, 10, 12, 14, 11, 16, 1, 19, 5, 23, 7, 9, 25, 26, 20, 13, 15, 17, 21 }
  uselistorder label %dec_label_pc_35ed4, { 1, 0 }
}

define i32 @function_35ed9() local_unnamed_addr {
dec_label_pc_35ed9:
  %v0_35eda = load i32, i32* @eax, align 8
  ret i32 %v0_35eda
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_35edb:
  %v1_35ef5 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_35ef5 = inttoptr i32 %v1_35ef5 to i32*
  %v3_35ef5 = load i32, i32* %v2_35ef5, align 4
  store i32 %v3_35ef5, i32* @eax, align 8
  %v2_35f02 = call i32 @function_35f09(i32 %arg1)
  ret i32 %v2_35f02
}

define i32 @function_35f09(i32 %arg1) local_unnamed_addr {
dec_label_pc_35f09:
  %v0_35f0a = load i32, i32* @eax, align 8
  ret i32 %v0_35f0a
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEE13_M_const_castEv() local_unnamed_addr {
dec_label_pc_35f0c:
  %eax.global-to-local = alloca i32, align 4
  %v17_35f0f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_35f0f
}

define i32 @function_35f12(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35f12:
  %v0_35f12 = load i32, i32* @ebp, align 4
  %v1_35f12 = add i32 %v0_35f12, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_35f12 = inttoptr i32 %v1_35f12 to i32*
  %v3_35f12 = load i32, i32* %v2_35f12, align 4
  %v2_35f15 = add i32 %v0_35f12, -28
  %v3_35f15 = inttoptr i32 %v2_35f15 to i32*
  store i32 %v3_35f12, i32* %v3_35f15, align 4
  %v0_35f18 = load i32, i32* @ebp, align 4
  %v1_35f18 = add i32 %v0_35f18, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_35f18 = inttoptr i32 %v1_35f18 to i32*
  %v3_35f18 = load i32, i32* %v2_35f18, align 4
  %v2_35f1b = add i32 %v0_35f18, -32
  %v3_35f1b = inttoptr i32 %v2_35f1b to i32*
  store i32 %v3_35f18, i32* %v3_35f1b, align 4
  %v1_35f24 = load i32, i32* @ebp, align 4
  %v2_35f24 = add i32 %v1_35f24, -12
  %v3_35f24 = inttoptr i32 %v2_35f24 to i32*
  store i32 30, i32* %v3_35f24, align 4
  %v0_35f29 = load i32, i32* @ebp, align 4
  %v1_35f29 = add i32 %v0_35f29, -32
  %v2_35f29 = inttoptr i32 %v1_35f29 to i32*
  %v3_35f29 = load i32, i32* %v2_35f29, align 4
  %v1_35f2c = inttoptr i32 %v3_35f29 to i32*
  %v2_35f2c = load i32, i32* %v1_35f2c, align 4
  %v1_35f32 = add i32 %v0_35f29, -28
  %v2_35f32 = inttoptr i32 %v1_35f32 to i32*
  %v3_35f32 = load i32, i32* %v2_35f32, align 4
  %v2_35f38 = call i32 @unknown_69490(i32 %v3_35f32, i32 %v2_35f2c)
  %v0_35f3d = load i32, i32* @ebp, align 4
  %v1_35f3d = add i32 %v0_35f3d, -28
  %v2_35f3d = inttoptr i32 %v1_35f3d to i32*
  %v3_35f3d = load i32, i32* %v2_35f3d, align 4
  store i32 %v3_35f3d, i32* @eax, align 8
  %v1_35f40 = add i32 %v0_35f3d, -12
  %v2_35f40 = inttoptr i32 %v1_35f40 to i32*
  %v3_35f40 = load i32, i32* %v2_35f40, align 4
  %v3_35f43 = icmp eq i32 %v3_35f40, 30
  br i1 %v3_35f43, label %bb, label %dec_label_pc_35f4c

bb:                                               ; preds = %dec_label_pc_35f12
  %v1_35f4a = call i32 @function_35f51()
  br label %dec_label_pc_35f4c

dec_label_pc_35f4c:                               ; preds = %bb, %dec_label_pc_35f12
  %v2_35f4a = phi i32 [ %v1_35f4a, %bb ], [ %v3_35f3d, %dec_label_pc_35f12 ]
  ret i32 %v2_35f4a
}

define i32 @function_35f51() local_unnamed_addr {
dec_label_pc_35f51:
  %v0_35f52 = load i32, i32* @eax, align 8
  ret i32 %v0_35f52
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35f56:
  %stack_var_-17 = alloca i32, align 4
  %v1_35f77 = add i32 %arg2, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_35f7d = call i32 @unknown_666f8(i32 %v1_35f77)
  %v2_35f84 = ptrtoint i32* %stack_var_-17 to i32
  %v3_35f91 = call i32 @unknown_6cffc(i32 %v2_35f84, i32 %arg1)
  %v3_35fa3 = call i32 @unknown_6d082(i32 %v2_35f84, i32 %v2_35f7d)
  %v1_35fae = call i32 @unknown_6d04c(i32 %v2_35f84)
  %v3_35fc0 = call i32 @unknown_6d0be(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_35fcf = call i32 @function_35fef()
  store i32 %v1_35fcf, i32* @eax, align 8
  %v0_35fd1 = call i32 @function_35fea()
  ret i32 %v0_35fd1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_35fd4() local_unnamed_addr {
dec_label_pc_35fd4:
  %eax.global-to-local = alloca i32, align 4
  %v0_35fd4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35fd4
}

define i32 @function_35fea() local_unnamed_addr {
dec_label_pc_35fea:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35fef() local_unnamed_addr {
dec_label_pc_35fef:
  %v0_35ff3 = load i32, i32* @eax, align 8
  ret i32 %v0_35ff3
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_35ff4:
  store i32 0, i32* @eax, align 8
  %v2_36015 = call i32 @function_3601c(i32 %arg1)
  ret i32 %v2_36015
}

define i32 @function_3601c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3601c:
  %v0_3601d = load i32, i32* @eax, align 8
  ret i32 %v0_3601d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE10deallocateEPSM_j(i32 %arg1) local_unnamed_addr {
dec_label_pc_3601e:
  ret i32 %arg1
}

define i32 @function_3602a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3602a:
  %v0_3602a = load i32, i32* @ebp, align 4
  %v1_3602a = add i32 %v0_3602a, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3602a = inttoptr i32 %v1_3602a to i32*
  %v3_3602a = load i32, i32* %v2_3602a, align 4
  %v2_3602d = add i32 %v0_3602a, -32
  %v3_3602d = inttoptr i32 %v2_3602d to i32*
  store i32 %v3_3602a, i32* %v3_3602d, align 4
  %v0_36030 = load i32, i32* @ebp, align 4
  %v1_36030 = add i32 %v0_36030, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_36030 = inttoptr i32 %v1_36030 to i32*
  %v3_36030 = load i32, i32* %v2_36030, align 4
  %v2_36033 = add i32 %v0_36030, -36
  %v3_36033 = inttoptr i32 %v2_36033 to i32*
  store i32 %v3_36030, i32* %v3_36033, align 4
  %v1_3603c = load i32, i32* @ebp, align 4
  %v2_3603c = add i32 %v1_3603c, -12
  %v3_3603c = inttoptr i32 %v2_3603c to i32*
  store i32 30, i32* %v3_3603c, align 4
  %v0_36041 = load i32, i32* @ebp, align 4
  %v1_36041 = add i32 %v0_36041, -32
  %v2_36041 = inttoptr i32 %v1_36041 to i32*
  %v3_36041 = load i32, i32* %v2_36041, align 4
  ret i32 %v3_36041
}

define i32 @function_3605c() local_unnamed_addr {
dec_label_pc_3605c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3605c = load i32, i32* %ecx.global-to-local, align 4
  %v1_3605c = add i32 %v0_3605c, -1
  store i32 %v1_3605c, i32* %ecx.global-to-local, align 4
  %v0_3605e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3605e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36060:
  store i32 0, i32* @eax, align 8
  %v2_36081 = call i32 @function_36088(i32 %arg1)
  ret i32 %v2_36081
}

define i32 @function_36088(i32 %arg1) local_unnamed_addr {
dec_label_pc_36088:
  %v0_36089 = load i32, i32* @eax, align 8
  ret i32 %v0_36089
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEEC1ISJ_EERKSaIT_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_3608a:
  ret i32 %arg1
}

define i32 @function_36098(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36098:
  %v0_36098 = load i32, i32* @eax, align 8
  %v11_36098 = or i32 %v0_36098, 137
  store i32 %v11_36098, i32* @eax, align 8
  %v0_3609a = load i32, i32* @ebp, align 4
  %v1_3609a = add i32 %v0_3609a, 1
  %v9_3609a = icmp eq i32 %v1_3609a, 0
  store i32 %v1_3609a, i32* @ebp, align 4
  %v0_3609b = load i32, i32* @ecx, align 4
  %v1_3609b = add i32 %v0_3609b, -1
  store i32 %v1_3609b, i32* @ecx, align 4
  %v2_3609b = icmp eq i32 %v1_3609b, 0
  %v4_3609b = or i1 %v9_3609a, %v2_3609b
  br i1 %v4_3609b, label %dec_label_pc_3609d, label %bb

bb:                                               ; preds = %dec_label_pc_36098
  %v6_3609b = call i32 @function_36102()
  %v1_360a2.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3609d

dec_label_pc_3609d:                               ; preds = %dec_label_pc_36098, %bb
  %v1_360a2 = phi i32 [ %v1_3609a, %dec_label_pc_36098 ], [ %v1_360a2.pre, %bb ]
  %v2_360a2 = add i32 %v1_360a2, -12
  %v3_360a2 = inttoptr i32 %v2_360a2 to i32*
  store i32 30, i32* %v3_360a2, align 4
  %v0_360a7 = load i32, i32* @ebp, align 4
  %v1_360a7 = add i32 %v0_360a7, -28
  %v2_360a7 = inttoptr i32 %v1_360a7 to i32*
  %v3_360a7 = load i32, i32* %v2_360a7, align 4
  %v1_360ad = call i32 @unknown_6d23c(i32 %v3_360a7)
  %v0_360b2 = load i32, i32* @ebp, align 4
  %v1_360b2 = add i32 %v0_360b2, -12
  %v2_360b2 = inttoptr i32 %v1_360b2 to i32*
  %v3_360b2 = load i32, i32* %v2_360b2, align 4
  %v2_360b5 = xor i32 %v3_360b2, 30
  %v3_360b5 = icmp eq i32 %v2_360b5, 0
  store i32 %v2_360b5, i32* @eax, align 8
  br i1 %v3_360b5, label %bb4, label %dec_label_pc_360be

bb4:                                              ; preds = %dec_label_pc_3609d
  %v1_360bc = call i32 @function_360c3()
  br label %dec_label_pc_360be

dec_label_pc_360be:                               ; preds = %bb4, %dec_label_pc_3609d
  %v2_360bc = phi i32 [ %v1_360bc, %bb4 ], [ %v2_360b5, %dec_label_pc_3609d ]
  ret i32 %v2_360bc

; uselistorder directives
  uselistorder i32 %v1_3609b, { 1, 0 }
  uselistorder label %dec_label_pc_3609d, { 1, 0 }
}

define i32 @function_360c3() local_unnamed_addr {
dec_label_pc_360c3:
  %v0_360c4 = load i32, i32* @eax, align 8
  ret i32 %v0_360c4
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE10_List_implC1ERKSaISt10_List_nodeISJ_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_360c6:
  ret i32 %arg1
}

define i32 @function_360d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_360d0:
  %v0_360d0 = load i32, i32* @ebp, align 4
  %v1_360d6 = add i32 %v0_360d0, 3
  store i32 %v1_360d6, i32* @ebp, align 4
  %v0_360d7 = load i32, i32* @ecx, align 4
  %v1_360d7 = add i32 %v0_360d7, -1
  store i32 %v1_360d7, i32* @ecx, align 4
  %v2_360de = add i32 %v0_360d0, -9
  %v3_360de = inttoptr i32 %v2_360de to i32*
  store i32 30, i32* %v3_360de, align 4
  %v0_360e3 = load i32, i32* @ebp, align 4
  %v1_360e3 = add i32 %v0_360e3, -32
  %v2_360e3 = inttoptr i32 %v1_360e3 to i32*
  %v3_360e3 = load i32, i32* %v2_360e3, align 4
  %v1_360ea = add i32 %v0_360e3, -28
  %v2_360ea = inttoptr i32 %v1_360ea to i32*
  %v3_360ea = load i32, i32* %v2_360ea, align 4
  %v2_360f0 = call i32 @unknown_6d2a2(i32 %v3_360ea, i32 %v3_360e3)
  %v0_360f5 = load i32, i32* @ebp, align 4
  %v1_360f5 = add i32 %v0_360f5, -28
  %v2_360f5 = inttoptr i32 %v1_360f5 to i32*
  %v3_360f5 = load i32, i32* %v2_360f5, align 4
  %v1_360f8 = inttoptr i32 %v3_360f5 to i32*
  store i32 0, i32* %v1_360f8, align 4
  %v0_360fe = load i32, i32* @ebp, align 4
  %v1_360fe = add i32 %v0_360fe, -28
  %v2_360fe = inttoptr i32 %v1_360fe to i32*
  %v3_360fe = load i32, i32* %v2_360fe, align 4
  ret i32 %v3_360fe
}

define i32 @function_36102() local_unnamed_addr {
dec_label_pc_36102:
  %eax.global-to-local = alloca i32, align 4
  %v0_36102 = load i32, i32* @eax, align 8
  %v1_36102 = add i32 %v0_36102, 1
  %v11_36102 = trunc i32 %v1_36102 to i8
  %v1_361031 = urem i32 %v1_36102, 256
  %sext = mul i32 %v1_36102, 16777216
  %v16_36103 = sdiv i32 %sext, 16777216
  %v17_36103 = and i32 %v16_36103, -256
  %v18_36103 = or i32 %v17_36103, %v1_361031
  store i32 %v18_36103, i32* %eax.global-to-local, align 8
  %v1_36105 = inttoptr i32 %v18_36103 to i8*
  %v2_36105 = load i8, i8* %v1_36105, align 1
  %v5_36105 = add i8 %v2_36105, %v11_36102
  store i8 %v5_36105, i8* %v1_36105, align 1
  %v0_36107 = load i32, i32* @ebx, align 4
  %v1_36107 = add i32 %v0_36107, 862319685
  %v2_36107 = inttoptr i32 %v1_36107 to i8*
  %v3_36107 = load i8, i8* %v2_36107, align 1
  %v4_36107 = load i32, i32* @ecx, align 4
  %v5_36107 = trunc i32 %v4_36107 to i8
  %v6_36107 = add i8 %v5_36107, %v3_36107
  store i8 %v6_36107, i8* %v2_36107, align 1
  %v0_3610d = load i32, i32* %eax.global-to-local, align 8
  %v1_3610d = add i32 %v0_3610d, 20
  %v10_3610d = icmp eq i32 %v1_3610d, 0
  store i32 %v1_3610d, i32* @eax, align 8
  br i1 %v10_3610d, label %bb, label %dec_label_pc_36114

bb:                                               ; preds = %dec_label_pc_36102
  %v1_36112 = call i32 @function_36119()
  store i32 %v1_36112, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_36114

dec_label_pc_36114:                               ; preds = %bb, %dec_label_pc_36102
  %v2_36112 = phi i32 [ %v1_36112, %bb ], [ %v1_3610d, %dec_label_pc_36102 ]
  ret i32 %v2_36112
}

define i32 @function_36119() local_unnamed_addr {
dec_label_pc_36119:
  %v0_3611a = load i32, i32* @eax, align 8
  ret i32 %v0_3611a
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE7_M_initEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3611c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_36154() local_unnamed_addr {
dec_label_pc_36154:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36154 = load i32, i32* %ecx.global-to-local, align 4
  %v1_36154 = add i32 %v0_36154, -1
  store i32 %v1_36154, i32* %ecx.global-to-local, align 4
  %v0_36156 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36156
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_36158:
  ret i32 %arg1
}

define i32 @function_36166(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36166:
  %v0_36168 = load i32, i32* @ebp, align 4
  %v1_36168 = add i32 %v0_36168, 1
  store i32 %v1_36168, i32* @ebp, align 4
  %v2_36170 = add i32 %v0_36168, -11
  %v3_36170 = inttoptr i32 %v2_36170 to i32*
  store i32 30, i32* %v3_36170, align 4
  %v0_36175 = load i32, i32* @ebp, align 4
  %v1_36175 = add i32 %v0_36175, -28
  %v2_36175 = inttoptr i32 %v1_36175 to i32*
  %v3_36175 = load i32, i32* %v2_36175, align 4
  %v1_36178 = add i32 %v0_36175, -32
  %v2_36178 = inttoptr i32 %v1_36178 to i32*
  %v3_36178 = load i32, i32* %v2_36178, align 4
  %v2_3617b = inttoptr i32 %v3_36175 to i32*
  store i32 %v3_36178, i32* %v2_3617b, align 4
  %v0_3617d = load i32, i32* @ebp, align 4
  %v1_3617d = add i32 %v0_3617d, -12
  %v2_3617d = inttoptr i32 %v1_3617d to i32*
  %v3_3617d = load i32, i32* %v2_3617d, align 4
  %v2_36180 = xor i32 %v3_3617d, 30
  %v3_36180 = icmp eq i32 %v2_36180, 0
  store i32 %v2_36180, i32* @eax, align 8
  br i1 %v3_36180, label %bb, label %dec_label_pc_36189

bb:                                               ; preds = %dec_label_pc_36166
  %v1_36187 = call i32 @function_3618e()
  br label %dec_label_pc_36189

dec_label_pc_36189:                               ; preds = %bb, %dec_label_pc_36166
  %v3_36187 = phi i32 [ %v1_36187, %bb ], [ %v2_36180, %dec_label_pc_36166 ]
  ret i32 %v3_36187
}

define i32 @function_3618e() local_unnamed_addr {
dec_label_pc_3618e:
  %v0_3618f = load i32, i32* @eax, align 8
  ret i32 %v0_3618f
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE9push_backERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36190:
  %stack_var_-20 = alloca i32, align 4
  %v2_361ad = ptrtoint i32* %stack_var_-20 to i32
  %v2_361ba = call i32 @unknown_5cee6(i32 %v2_361ad, i32 %arg1)
  %v3_361c9 = load i32, i32* %stack_var_-20, align 4
  ret i32 %v3_361c9
}

define i32 @function_361eb() local_unnamed_addr {
dec_label_pc_361eb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_361eb = load i32, i32* %ecx.global-to-local, align 4
  %v1_361eb = add i32 %v0_361eb, -1
  store i32 %v1_361eb, i32* %ecx.global-to-local, align 4
  %v0_361ed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_361ed
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_361ee:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_36208 = load i32, i32* %arg1, align 4
  %v1_3620a = add i32 %v2_36208, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_3620a, i32* @eax, align 8
  %v2_36217 = call i32 @function_3621e(i32 %tmp99)
  ret i32 %v2_36217
}

define i32 @function_3621e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3621e:
  %v0_3621f = load i32, i32* @eax, align 8
  ret i32 %v0_3621f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36220:
  store i32 0, i32* @eax, align 8
  %v2_36241 = call i32 @function_36248(i32 %arg1)
  ret i32 %v2_36241
}

define i32 @function_36248(i32 %arg1) local_unnamed_addr {
dec_label_pc_36248:
  %v0_36249 = load i32, i32* @eax, align 8
  ret i32 %v0_36249
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3624a:
  ret i32 %arg1
}

define i32 @function_36270(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36270:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36275() local_unnamed_addr {
dec_label_pc_36275:
  %eax.global-to-local = alloca i32, align 4
  %v0_36276 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36276
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EEC1ERKST_RKSaISt13_Rb_tree_nodeISN_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36278:
  %v2_362a8 = call i32 @unknown_6d4f4(i32 %arg1, i32 %arg3)
  %v1_362b0 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_362b0 = inttoptr i32 %v1_362b0 to i32*
  store i32 0, i32* %v2_362b0, align 4
  %v1_362ba = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_362ba = inttoptr i32 %v1_362ba to i32*
  store i32 0, i32* %v2_362ba, align 4
  %v1_362c4 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_362c4 = inttoptr i32 %v1_362c4 to i32*
  store i32 0, i32* %v2_362c4, align 4
  %v1_362ce = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_362ce = inttoptr i32 %v1_362ce to i32*
  store i32 0, i32* %v2_362ce, align 4
  %v1_362d8 = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_362d8 = inttoptr i32 %v1_362d8 to i32*
  store i32 0, i32* %v2_362d8, align 4
  %v1_362e5 = call i32 @unknown_6d536(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_362f4 = call i32 @function_362fb()
  ret i32 %v1_362f4

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_362fb() local_unnamed_addr {
dec_label_pc_362fb:
  %v0_362fc = load i32, i32* @eax, align 8
  ret i32 %v0_362fc
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_362fe:
  %v1_36318 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_36318 = inttoptr i32 %v1_36318 to i32*
  %v3_36318 = load i32, i32* %v2_36318, align 4
  store i32 %v3_36318, i32* @eax, align 8
  %v2_36325 = call i32 @function_3632c(i32 %arg1)
  ret i32 %v2_36325
}

define i32 @function_3632c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3632c:
  %v0_3632d = load i32, i32* @eax, align 8
  ret i32 %v0_3632d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3632e:
  ret i32 30
}

define i32 @function_3634e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3634e:
  %v0_3634e = load i32, i32* @ebp, align 4
  %v1_3634e = add i32 %v0_3634e, 1
  store i32 %v1_3634e, i32* @ebp, align 4
  %v1_36352 = add i32 %v0_3634e, -31
  %v2_36352 = inttoptr i32 %v1_36352 to i32*
  %v3_36352 = load i32, i32* %v2_36352, align 4
  %v1_36359 = add i32 %v0_3634e, -27
  %v2_36359 = inttoptr i32 %v1_36359 to i32*
  %v3_36359 = load i32, i32* %v2_36359, align 4
  %v2_3635f = call i32 @unknown_6d642(i32 %v3_36359, i32 %v3_36352)
  %v1_36364 = load i32, i32* @ebp, align 4
  %v2_36364 = add i32 %v1_36364, -20
  %v3_36364 = inttoptr i32 %v2_36364 to i32*
  store i32 %v2_3635f, i32* %v3_36364, align 4
  %v0_36367 = load i32, i32* @ebp, align 4
  %v1_36367 = add i32 %v0_36367, -20
  %v2_36367 = inttoptr i32 %v1_36367 to i32*
  %v3_36367 = load i32, i32* %v2_36367, align 4
  %v1_3636a = add i32 %v0_36367, -36
  %v2_3636a = inttoptr i32 %v1_3636a to i32*
  %v3_3636a = load i32, i32* %v2_3636a, align 4
  store i32 %v3_3636a, i32* @edx, align 8
  %v2_3636d = add i32 %v3_36367, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_3636d = inttoptr i32 %v2_3636d to i32*
  store i32 %v3_3636a, i32* %v3_3636d, align 4
  %v0_36370 = load i32, i32* @ebp, align 4
  %v1_36370 = add i32 %v0_36370, -32
  %v2_36370 = inttoptr i32 %v1_36370 to i32*
  %v3_36370 = load i32, i32* %v2_36370, align 4
  %v1_36373 = add i32 %v3_36370, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_36373 = inttoptr i32 %v1_36373 to i32*
  %v3_36373 = load i32, i32* %v2_36373, align 4
  %v1_36376 = icmp eq i32 %v3_36373, 0
  br i1 %v1_36376, label %bb, label %dec_label_pc_3637a

bb:                                               ; preds = %dec_label_pc_3634e
  %v1_36378 = call i32 @function_363a3()
  %v0_3637a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3637a

dec_label_pc_3637a:                               ; preds = %bb, %dec_label_pc_3634e
  %v0_3637a = phi i32 [ %v0_3637a.pre, %bb ], [ %v0_36370, %dec_label_pc_3634e ]
  %v1_3637a = add i32 %v0_3637a, -32
  %v2_3637a = inttoptr i32 %v1_3637a to i32*
  %v3_3637a = load i32, i32* %v2_3637a, align 4
  %v1_36380 = call i32 @unknown_6c209(i32 %v3_3637a)
  ret i32 %v1_36380

; uselistorder directives
  uselistorder i32 -27, { 1, 2, 0, 3, 4 }
  uselistorder i32 -31, { 2, 7, 4, 5, 3, 0, 6, 8, 13, 10, 11, 9, 1, 12, 14 }
}

define i32 @function_36386(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36386:
  %eax.global-to-local = alloca i32, align 4
  %v0_36386 = load i32, i32* @ebp, align 4
  %v0_36388 = load i32, i32* @edx, align 8
  %v0_3638c = load i32, i32* @eax, align 8
  %v1_36390 = add i32 %v0_36386, -28
  %v2_36390 = inttoptr i32 %v1_36390 to i32*
  %v3_36390 = load i32, i32* %v2_36390, align 4
  store i32 %v3_36390, i32* %eax.global-to-local, align 8
  %v3_36396 = call i32 @unknown_6c65c(i32 %v3_36390, i32 %v0_3638c, i32 %v0_36388)
  store i32 %v3_36396, i32* %eax.global-to-local, align 8
  %v0_3639d = load i32, i32* @ebp, align 4
  %v1_3639d = add i32 %v0_3639d, -20
  %v2_3639d = inttoptr i32 %v1_3639d to i32*
  %v3_3639d = load i32, i32* %v2_3639d, align 4
  store i32 %v3_3639d, i32* %eax.global-to-local, align 8
  %v2_363a0 = add i32 %v3_3639d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_363a0 = inttoptr i32 %v2_363a0 to i32*
  store i32 %v3_36396, i32* %v3_363a0, align 4
  %v4_363a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_363a0
}

define i32 @function_363a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_363a2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_363a3() local_unnamed_addr {
dec_label_pc_363a3:
  %eax.global-to-local = alloca i32, align 4
  %v0_363a3 = load i32, i32* @ebp, align 4
  %v1_363a3 = add i32 %v0_363a3, -20
  %v2_363a3 = inttoptr i32 %v1_363a3 to i32*
  %v3_363a3 = load i32, i32* %v2_363a3, align 4
  store i32 %v3_363a3, i32* %eax.global-to-local, align 8
  %v2_363a6 = add i32 %v0_363a3, -36
  %v3_363a6 = inttoptr i32 %v2_363a6 to i32*
  store i32 %v3_363a3, i32* %v3_363a6, align 4
  %v0_363a9 = load i32, i32* @ebp, align 4
  %v1_363a9 = add i32 %v0_363a9, -32
  %v2_363a9 = inttoptr i32 %v1_363a9 to i32*
  %v3_363a9 = load i32, i32* %v2_363a9, align 4
  store i32 %v3_363a9, i32* %eax.global-to-local, align 8
  %v1_363af = call i32 @unknown_6d6ab(i32 %v3_363a9)
  store i32 %v1_363af, i32* %eax.global-to-local, align 8
  %v1_363b4 = load i32, i32* @ebp, align 4
  %v2_363b4 = add i32 %v1_363b4, -32
  %v3_363b4 = inttoptr i32 %v2_363b4 to i32*
  store i32 %v1_363af, i32* %v3_363b4, align 4
  %v0_364275 = load i32, i32* @ebp, align 4
  %v1_364276 = add i32 %v0_364275, -32
  %v2_364277 = inttoptr i32 %v1_364276 to i32*
  %v3_364278 = load i32, i32* %v2_364277, align 4
  %v10_364279 = icmp eq i32 %v3_364278, 0
  %v1_3642b10 = icmp eq i1 %v10_364279, false
  %v2_3642b11 = zext i1 %v1_3642b10 to i32
  %v3_3642b12 = load i32, i32* %eax.global-to-local, align 8
  %v4_3642b13 = and i32 %v3_3642b12, -256
  %v5_3642b14 = or i32 %v2_3642b11, %v4_3642b13
  store i32 %v5_3642b14, i32* %eax.global-to-local, align 8
  %v5_3642e15 = icmp eq i1 %v1_3642b10, false
  %v1_3643016 = icmp eq i1 %v5_3642e15, false
  br i1 %v1_3643016, label %dec_label_pc_363b9, label %dec_label_pc_36432

dec_label_pc_363b9:                               ; preds = %dec_label_pc_363a3, %dec_label_pc_36413
  %v2_3642718 = phi i32* [ %v2_36427, %dec_label_pc_36413 ], [ %v2_364277, %dec_label_pc_363a3 ]
  %v0_3642717 = phi i32 [ %v0_36427, %dec_label_pc_36413 ], [ %v0_364275, %dec_label_pc_363a3 ]
  %v3_363b9 = load i32, i32* %v2_3642718, align 4
  store i32 %v3_363b9, i32* %eax.global-to-local, align 8
  %v1_363c0 = add i32 %v0_3642717, -28
  %v2_363c0 = inttoptr i32 %v1_363c0 to i32*
  %v3_363c0 = load i32, i32* %v2_363c0, align 4
  store i32 %v3_363c0, i32* %eax.global-to-local, align 8
  %v2_363c6 = call i32 @unknown_6d642(i32 %v3_363c0, i32 %v3_363b9)
  store i32 %v2_363c6, i32* %eax.global-to-local, align 8
  %v1_363cb = load i32, i32* @ebp, align 4
  %v2_363cb = add i32 %v1_363cb, -16
  %v3_363cb = inttoptr i32 %v2_363cb to i32*
  store i32 %v2_363c6, i32* %v3_363cb, align 4
  %v0_363ce = load i32, i32* @ebp, align 4
  %v1_363ce = add i32 %v0_363ce, -36
  %v2_363ce = inttoptr i32 %v1_363ce to i32*
  %v3_363ce = load i32, i32* %v2_363ce, align 4
  store i32 %v3_363ce, i32* %eax.global-to-local, align 8
  %v1_363d1 = add i32 %v0_363ce, -16
  %v2_363d1 = inttoptr i32 %v1_363d1 to i32*
  %v3_363d1 = load i32, i32* %v2_363d1, align 4
  %v2_363d4 = add i32 %v3_363ce, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_363d4 = inttoptr i32 %v2_363d4 to i32*
  store i32 %v3_363d1, i32* %v3_363d4, align 4
  %v0_363d7 = load i32, i32* @ebp, align 4
  %v1_363d7 = add i32 %v0_363d7, -16
  %v2_363d7 = inttoptr i32 %v1_363d7 to i32*
  %v3_363d7 = load i32, i32* %v2_363d7, align 4
  store i32 %v3_363d7, i32* %eax.global-to-local, align 8
  %v1_363da = add i32 %v0_363d7, -36
  %v2_363da = inttoptr i32 %v1_363da to i32*
  %v3_363da = load i32, i32* %v2_363da, align 4
  %v2_363dd = add i32 %v3_363d7, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_363dd = inttoptr i32 %v2_363dd to i32*
  store i32 %v3_363da, i32* %v3_363dd, align 4
  %v0_363e0 = load i32, i32* @ebp, align 4
  %v1_363e0 = add i32 %v0_363e0, -32
  %v2_363e0 = inttoptr i32 %v1_363e0 to i32*
  %v3_363e0 = load i32, i32* %v2_363e0, align 4
  store i32 %v3_363e0, i32* %eax.global-to-local, align 8
  %v1_363e3 = add i32 %v3_363e0, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_363e3 = inttoptr i32 %v1_363e3 to i32*
  %v3_363e3 = load i32, i32* %v2_363e3, align 4
  store i32 %v3_363e3, i32* %eax.global-to-local, align 8
  %v1_363e6 = icmp eq i32 %v3_363e3, 0
  br i1 %v1_363e6, label %dec_label_pc_36413, label %dec_label_pc_363ea

dec_label_pc_363ea:                               ; preds = %dec_label_pc_363b9
  %v3_363ea = load i32, i32* %v2_363e0, align 4
  store i32 %v3_363ea, i32* %eax.global-to-local, align 8
  %v1_363f0 = call i32 @unknown_6c209(i32 %v3_363ea)
  store i32 %v1_363f0, i32* %eax.global-to-local, align 8
  %v0_363f5 = load i32, i32* @ebp, align 4
  %v1_363f5 = add i32 %v0_363f5, -16
  %v2_363f5 = inttoptr i32 %v1_363f5 to i32*
  %v3_363f5 = load i32, i32* %v2_363f5, align 4
  %v1_36400 = add i32 %v0_363f5, -28
  %v2_36400 = inttoptr i32 %v1_36400 to i32*
  %v3_36400 = load i32, i32* %v2_36400, align 4
  store i32 %v3_36400, i32* %eax.global-to-local, align 8
  %v3_36406 = call i32 @unknown_6c65c(i32 %v3_36400, i32 %v1_363f0, i32 %v3_363f5)
  store i32 %v3_36406, i32* %eax.global-to-local, align 8
  %v0_3640d = load i32, i32* @ebp, align 4
  %v1_3640d = add i32 %v0_3640d, -16
  %v2_3640d = inttoptr i32 %v1_3640d to i32*
  %v3_3640d = load i32, i32* %v2_3640d, align 4
  store i32 %v3_3640d, i32* %eax.global-to-local, align 8
  %v2_36410 = add i32 %v3_3640d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_36410 = inttoptr i32 %v2_36410 to i32*
  store i32 %v3_36406, i32* %v3_36410, align 4
  %v0_36413.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_36413

dec_label_pc_36413:                               ; preds = %dec_label_pc_363ea, %dec_label_pc_363b9
  %v0_36413 = phi i32 [ %v0_36413.pre, %dec_label_pc_363ea ], [ %v0_363e0, %dec_label_pc_363b9 ]
  %v1_36413 = add i32 %v0_36413, -16
  %v2_36413 = inttoptr i32 %v1_36413 to i32*
  %v3_36413 = load i32, i32* %v2_36413, align 4
  store i32 %v3_36413, i32* %eax.global-to-local, align 8
  %v2_36416 = add i32 %v0_36413, -36
  %v3_36416 = inttoptr i32 %v2_36416 to i32*
  store i32 %v3_36413, i32* %v3_36416, align 4
  %v0_36419 = load i32, i32* @ebp, align 4
  %v1_36419 = add i32 %v0_36419, -32
  %v2_36419 = inttoptr i32 %v1_36419 to i32*
  %v3_36419 = load i32, i32* %v2_36419, align 4
  store i32 %v3_36419, i32* %eax.global-to-local, align 8
  %v1_3641f = call i32 @unknown_6d6ab(i32 %v3_36419)
  store i32 %v1_3641f, i32* %eax.global-to-local, align 8
  %v1_36424 = load i32, i32* @ebp, align 4
  %v2_36424 = add i32 %v1_36424, -32
  %v3_36424 = inttoptr i32 %v2_36424 to i32*
  store i32 %v1_3641f, i32* %v3_36424, align 4
  %v0_36427 = load i32, i32* @ebp, align 4
  %v1_36427 = add i32 %v0_36427, -32
  %v2_36427 = inttoptr i32 %v1_36427 to i32*
  %v3_36427 = load i32, i32* %v2_36427, align 4
  %v10_36427 = icmp eq i32 %v3_36427, 0
  %v1_3642b = icmp eq i1 %v10_36427, false
  %v2_3642b = zext i1 %v1_3642b to i32
  %v3_3642b = load i32, i32* %eax.global-to-local, align 8
  %v4_3642b = and i32 %v3_3642b, -256
  %v5_3642b = or i32 %v2_3642b, %v4_3642b
  store i32 %v5_3642b, i32* %eax.global-to-local, align 8
  %v5_3642e = icmp eq i1 %v1_3642b, false
  %v1_36430 = icmp eq i1 %v5_3642e, false
  br i1 %v1_36430, label %dec_label_pc_363b9, label %dec_label_pc_36432

dec_label_pc_36432:                               ; preds = %dec_label_pc_36413, %dec_label_pc_363a3
  %v0_36427.lcssa = phi i32 [ %v0_364275, %dec_label_pc_363a3 ], [ %v0_36427, %dec_label_pc_36413 ]
  %v1_36432 = add i32 %v0_36427.lcssa, -20
  %v2_36432 = inttoptr i32 %v1_36432 to i32*
  %v3_36432 = load i32, i32* %v2_36432, align 4
  store i32 %v3_36432, i32* @eax, align 8
  %v1_36435 = add i32 %v0_36427.lcssa, -12
  %v2_36435 = inttoptr i32 %v1_36435 to i32*
  %v3_36435 = load i32, i32* %v2_36435, align 4
  %v2_36438 = xor i32 %v3_36435, 30
  %v3_36438 = icmp eq i32 %v2_36438, 0
  store i32 %v2_36438, i32* @edx, align 8
  br i1 %v3_36438, label %bb, label %dec_label_pc_36441

bb:                                               ; preds = %dec_label_pc_36432
  %v1_3643f = call i32 @function_36478()
  store i32 %v1_3643f, i32* @eax, align 8
  br label %dec_label_pc_36441

dec_label_pc_36441:                               ; preds = %bb, %dec_label_pc_36432
  %v0_36441 = call i32 @function_36473()
  store i32 %v0_36441, i32* %eax.global-to-local, align 8
  ret i32 %v0_36441

; uselistorder directives
  uselistorder i32* %v2_36427, { 1, 0 }
  uselistorder i32 %v0_36427, { 0, 2, 1 }
  uselistorder i32 %v0_36413, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 22 }
  uselistorder i32 (i32)* @unknown_6c209, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_6d642, { 1, 0 }
  uselistorder i32 (i32)* @unknown_6d6ab, { 1, 0 }
  uselistorder label %dec_label_pc_363b9, { 1, 0 }
}

define i32 @function_36444() local_unnamed_addr {
dec_label_pc_36444:
  %eax.global-to-local = alloca i32, align 4
  %v0_36444 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36444
}

define i32 @function_36473() local_unnamed_addr {
dec_label_pc_36473:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36478() local_unnamed_addr {
dec_label_pc_36478:
  %v0_3647d = load i32, i32* @eax, align 8
  ret i32 %v0_3647d
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3647e:
  %v1_36498 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_36498 = inttoptr i32 %v1_36498 to i32*
  %v3_36498 = load i32, i32* %v2_36498, align 4
  store i32 %v3_36498, i32* @eax, align 8
  %v2_364a5 = call i32 @function_364ac(i32 %arg1)
  ret i32 %v2_364a5
}

define i32 @function_364ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_364ac:
  %v0_364ad = load i32, i32* @eax, align 8
  ret i32 %v0_364ad
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_364ae:
  %v1_364c8 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  store i32 %v1_364c8, i32* @eax, align 8
  %v2_364d5 = call i32 @function_364dc(i32 %arg1)
  ret i32 %v2_364d5
}

define i32 @function_364dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_364dc:
  %v0_364dd = load i32, i32* @eax, align 8
  ret i32 %v0_364dd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_364de:
  %v1_364fb = call i32 @unknown_3bab6(i32 %arg1)
  store i32 %v1_364fb, i32* @eax, align 8
  %v1_3650a = call i32 @function_36511()
  ret i32 %v1_3650a
}

define i32 @function_36511() local_unnamed_addr {
dec_label_pc_36511:
  %v0_36512 = load i32, i32* @eax, align 8
  ret i32 %v0_36512
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_36513:
  %v1_36530 = call i32 @unknown_3bb32(i32 %arg1)
  store i32 %v1_36530, i32* @eax, align 8
  %v1_3653f = call i32 @function_36546()
  ret i32 %v1_3653f
}

define i32 @function_36546() local_unnamed_addr {
dec_label_pc_36546:
  %v0_36547 = load i32, i32* @eax, align 8
  ret i32 %v0_36547
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36548:
  store i32 0, i32* @eax, align 8
  %v2_36569 = call i32 @function_36570(i32 %arg1)
  ret i32 %v2_36569
}

define i32 @function_36570(i32 %arg1) local_unnamed_addr {
dec_label_pc_36570:
  %v0_36571 = load i32, i32* @eax, align 8
  ret i32 %v0_36571
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36572:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 8
  %v3_365a1 = call i32 @function_365a8(i32 %arg2, i32 %tmp101)
  ret i32 %v3_365a1
}

define i32 @function_365a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_365a8:
  %v0_365a9 = load i32, i32* @eax, align 8
  ret i32 %v0_365a9
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE12slot_invoker8m_invokeERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEz() local_unnamed_addr {
dec_label_pc_365aa:
  %eax.global-to-local = alloca i32, align 4
  %v5_365af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_365af
}

define i32 @function_365b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_365b0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_365b3 = load i32, i32* @ebp, align 4
  %v1_365b3 = add i32 %v0_365b3, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_365b3 = inttoptr i32 %v1_365b3 to i32*
  %v3_365b3 = load i32, i32* %v2_365b3, align 4
  %v2_365b6 = add i32 %v0_365b3, -44
  %v3_365b6 = inttoptr i32 %v2_365b6 to i32*
  store i32 %v3_365b3, i32* %v3_365b6, align 4
  %v0_365b9 = load i32, i32* @ebp, align 4
  %v1_365b9 = add i32 %v0_365b9, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_365b9 = inttoptr i32 %v1_365b9 to i32*
  %v3_365b9 = load i32, i32* %v2_365b9, align 4
  %v2_365bc = add i32 %v0_365b9, -48
  %v3_365bc = inttoptr i32 %v2_365bc to i32*
  store i32 %v3_365b9, i32* %v3_365bc, align 4
  %v1_365c5 = load i32, i32* @ebp, align 4
  %v2_365c5 = add i32 %v1_365c5, -28
  %v3_365c5 = inttoptr i32 %v2_365c5 to i32*
  store i32 30, i32* %v3_365c5, align 4
  %v0_365ca = load i32, i32* @ebp, align 4
  %v1_365ca = add i32 %v0_365ca, -44
  %v2_365ca = inttoptr i32 %v1_365ca to i32*
  %v3_365ca = load i32, i32* %v2_365ca, align 4
  %v1_365cd = add i32 %v3_365ca, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_365cd = inttoptr i32 %v1_365cd to i32*
  %v3_365cd = load i32, i32* %v2_365cd, align 4
  %v1_365d0 = inttoptr i32 %v3_365cd to i32*
  %v2_365d0 = load i32, i32* %v1_365d0, align 4
  store i32 %v2_365d0, i32* %edi.global-to-local, align 8
  %v3_365d2 = load i32, i32* %v2_365ca, align 4
  %v1_365d5 = add i32 %v3_365d2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_365d5 = inttoptr i32 %v1_365d5 to i32*
  %v3_365d5 = load i32, i32* %v2_365d5, align 4
  store i32 %v3_365d5, i32* %esi.global-to-local, align 4
  %v3_365d8 = load i32, i32* %v2_365ca, align 4
  %v1_365db = inttoptr i32 %v3_365d8 to i32*
  %v2_365db = load i32, i32* %v1_365db, align 4
  store i32 %v2_365db, i32* %ebx.global-to-local, align 4
  %v1_365dd = add i32 %v0_365ca, -48
  %v2_365dd = inttoptr i32 %v1_365dd to i32*
  %v3_365dd = load i32, i32* %v2_365dd, align 4
  %v2_365e3 = call i32 @unknown_6182a(i32 %v3_365dd)
  %v1_365e8 = add i32 %v2_365e3, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_365ee = call i32 @unknown_6d958(i32 %v1_365e8)
  %v0_365f3 = load i32, i32* %edi.global-to-local, align 8
  %v0_365f7 = load i32, i32* %esi.global-to-local, align 4
  %v0_365fb = load i32, i32* %ebx.global-to-local, align 4
  %v5_36602 = call i32 @unknown_6d988(i32 %v2_365ee, i32 %v0_365fb, i32 %v0_365f7, i32 %v0_365f3)
  store i32 %v5_36602, i32* @eax, align 8
  %v0_36607 = load i32, i32* @ebp, align 4
  %v1_36607 = add i32 %v0_36607, -28
  %v2_36607 = inttoptr i32 %v1_36607 to i32*
  %v3_36607 = load i32, i32* %v2_36607, align 4
  %v3_3660a = icmp eq i32 %v3_36607, 30
  br i1 %v3_3660a, label %bb, label %dec_label_pc_36613

bb:                                               ; preds = %dec_label_pc_365b0
  %v1_36611 = call i32 @function_36618()
  br label %dec_label_pc_36613

dec_label_pc_36613:                               ; preds = %bb, %dec_label_pc_365b0
  %v2_36611 = phi i32 [ %v1_36611, %bb ], [ %v5_36602, %dec_label_pc_365b0 ]
  ret i32 %v2_36611
}

define i32 @function_36618() local_unnamed_addr {
dec_label_pc_36618:
  %v0_3661f = load i32, i32* @eax, align 8
  ret i32 %v0_3661f
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1IS2_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36620:
  %v1_36641 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v1_36641
}

define i32 @function_3664a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3664a:
  %v2_3664a = load i32, i32* @eax, align 8
  %v4_3664a = mul i32 %v2_3664a, 2
  %v21_3664a = inttoptr i32 %v2_3664a to i32*
  store i32 %v4_3664a, i32* %v21_3664a, align 4
  %v0_3664c = load i32, i32* @ebx, align 4
  %v0_36658 = load i32, i32* @ebp, align 4
  %v1_36658 = add i32 %v0_36658, -32
  %v2_36658 = inttoptr i32 %v1_36658 to i32*
  %v3_36658 = load i32, i32* %v2_36658, align 4
  %v1_3665f = add i32 %v0_36658, -28
  %v2_3665f = inttoptr i32 %v1_3665f to i32*
  %v3_3665f = load i32, i32* %v2_3665f, align 4
  %sext = mul i32 %v0_3664c, 16777216
  %v4_36665 = sdiv i32 %sext, 16777216
  %v5_36665 = call i32 @unknown_6daac(i32 %v3_3665f, i32 %v3_36658, i32 1, i32 %v4_36665)
  %v0_3666a = call i32 @function_36686()
  ret i32 %v0_3666a

; uselistorder directives
  uselistorder i32 %v2_3664a, { 1, 0 }
}

define i32 @function_3666d() local_unnamed_addr {
dec_label_pc_3666d:
  %eax.global-to-local = alloca i32, align 4
  %v0_3666d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3666d
}

define i32 @function_36686() local_unnamed_addr {
dec_label_pc_36686:
  %v0_36686 = load i32, i32* @ebp, align 4
  %v1_36686 = add i32 %v0_36686, -12
  %v2_36686 = inttoptr i32 %v1_36686 to i32*
  %v3_36686 = load i32, i32* %v2_36686, align 4
  %v2_36689 = xor i32 %v3_36686, 30
  %v3_36689 = icmp eq i32 %v2_36689, 0
  store i32 %v2_36689, i32* @eax, align 8
  br i1 %v3_36689, label %bb, label %dec_label_pc_36692

bb:                                               ; preds = %dec_label_pc_36686
  %v1_36690 = call i32 @function_36697()
  br label %dec_label_pc_36692

dec_label_pc_36692:                               ; preds = %bb, %dec_label_pc_36686
  %v2_36690 = phi i32 [ %v1_36690, %bb ], [ %v2_36689, %dec_label_pc_36686 ]
  ret i32 %v2_36690
}

define i32 @function_36697() local_unnamed_addr {
dec_label_pc_36697:
  %v0_3669c = load i32, i32* @eax, align 8
  ret i32 %v0_3669c
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1IS5_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3669e:
  %ebx.global-to-local = alloca i32, align 4
  %v1_366bf = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_366c5 = call i32 @unknown_4eff0(i32 %v1_366bf)
  %v0_366ca = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_366ca, 16777216
  %v4_366e3 = sdiv i32 %sext, 16777216
  %v5_366e3 = call i32 @unknown_6db94(i32 %arg1, i32 %arg2, i32 1, i32 %v4_366e3)
  %v0_366e8 = call i32 @function_36704()
  ret i32 %v0_366e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_366eb() local_unnamed_addr {
dec_label_pc_366eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_366eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_366eb
}

define i32 @function_366f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_366f2:
  %v0_366f2 = load i32, i32* @eax, align 8
  %v1_366f5 = call i32 @unknown_4ee6c(i32 %v0_366f2)
  %v0_366fa = load i32, i32* @ebx, align 4
  ret i32 %v0_366fa
}

define i32 @function_36704() local_unnamed_addr {
dec_label_pc_36704:
  %v0_36704 = load i32, i32* @ebp, align 4
  %v1_36704 = add i32 %v0_36704, -12
  %v2_36704 = inttoptr i32 %v1_36704 to i32*
  %v3_36704 = load i32, i32* %v2_36704, align 4
  %v2_36707 = xor i32 %v3_36704, 30
  %v3_36707 = icmp eq i32 %v2_36707, 0
  store i32 %v2_36707, i32* @eax, align 8
  br i1 %v3_36707, label %bb, label %dec_label_pc_36710

bb:                                               ; preds = %dec_label_pc_36704
  %v1_3670e = call i32 @function_36715()
  br label %dec_label_pc_36710

dec_label_pc_36710:                               ; preds = %bb, %dec_label_pc_36704
  %v2_3670e = phi i32 [ %v1_3670e, %bb ], [ %v2_36707, %dec_label_pc_36704 ]
  ret i32 %v2_3670e
}

define i32 @function_36715() local_unnamed_addr {
dec_label_pc_36715:
  %v0_3671a = load i32, i32* @eax, align 8
  ret i32 %v0_3671a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_3671b:
  %v1_36735 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_36735, i32* @eax, align 8
  %v2_36742 = call i32 @function_36749(i32 %arg1)
  ret i32 %v2_36742
}

define i32 @function_36749(i32 %arg1) local_unnamed_addr {
dec_label_pc_36749:
  %v0_3674a = load i32, i32* @eax, align 8
  ret i32 %v0_3674a
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3674c:
  %v1_36766 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_3676c = call i32 @unknown_6dcac(i32 %v1_36766)
  ret i32 %v1_3676c
}

define i32 @function_3677a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3677a:
  %v0_3677a = load i32, i32* @edx, align 8
  %v2_3677a = xor i32 %v0_3677a, 30
  %v3_3677a = icmp eq i32 %v2_3677a, 0
  store i32 %v2_3677a, i32* @edx, align 8
  br i1 %v3_3677a, label %bb, label %dec_label_pc_3677a.dec_label_pc_36783_crit_edge

dec_label_pc_3677a.dec_label_pc_36783_crit_edge:  ; preds = %dec_label_pc_3677a
  %v2_36781.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_36783

bb:                                               ; preds = %dec_label_pc_3677a
  %v1_36781 = call i32 @function_36788()
  br label %dec_label_pc_36783

dec_label_pc_36783:                               ; preds = %dec_label_pc_3677a.dec_label_pc_36783_crit_edge, %bb
  %v2_36781 = phi i32 [ %v2_36781.pre, %dec_label_pc_3677a.dec_label_pc_36783_crit_edge ], [ %v1_36781, %bb ]
  ret i32 %v2_36781

; uselistorder directives
  uselistorder label %dec_label_pc_36783, { 1, 0 }
}

define i32 @function_36788() local_unnamed_addr {
dec_label_pc_36788:
  %v0_36789 = load i32, i32* @eax, align 8
  ret i32 %v0_36789
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE11dereferenceEPKiN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_3678a:
  store i32 %arg2, i32* @eax, align 8
  %v4_367bb = sext i8 %arg3 to i32
  %v5_367bb = call i32 @function_367c2(i32 %v4_367bb, i32 %arg2, i32 %arg1)
  ret i32 %v5_367bb
}

define i32 @function_367c2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_367c2:
  %v0_367c3 = load i32, i32* @eax, align 8
  ret i32 %v0_367c3
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE9constructERKi(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_367c4:
  %v4_367e1 = ptrtoint i8* %arg1 to i32
  %v1_367e4 = add i32 %v4_367e1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_367ea = call i32 @unknown_6dd52(i32 %v1_367e4)
  %v2_367fa = call i32 @unknown_3bcb4(i32 ptrtoint (i32* @global_var_4.2376 to i32), i32 %v1_367ea)
  %v1_367ff = icmp eq i32 %v2_367fa, 0
  br i1 %v1_367ff, label %dec_label_pc_3680a, label %dec_label_pc_36803

dec_label_pc_36803:                               ; preds = %dec_label_pc_367c4
  %v1_36806 = inttoptr i32 %arg2 to i32*
  %v2_36806 = load i32, i32* %v1_36806, align 4
  %v2_36808 = inttoptr i32 %v2_367fa to i32*
  store i32 %v2_36806, i32* %v2_36808, align 4
  br label %dec_label_pc_3680a

dec_label_pc_3680a:                               ; preds = %dec_label_pc_36803, %dec_label_pc_367c4
  store i8 1, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v1_3681a = call i32 @function_36821()
  ret i32 %v1_3681a
}

define i32 @function_36821() local_unnamed_addr {
dec_label_pc_36821:
  %v0_36822 = load i32, i32* @eax, align 8
  ret i32 %v0_36822
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE12destroy_implEN4mpl_5bool_ILb0EEE(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36824:
  %v4_36842 = ptrtoint i8* %arg1 to i32
  %v2_36848 = call i32 @unknown_6dde0(i32 %v4_36842)
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 8
  %v1_3685d = call i32 @function_36864()
  ret i32 %v1_3685d
}

define i32 @function_36864() local_unnamed_addr {
dec_label_pc_36864:
  %v0_36865 = load i32, i32* @eax, align 8
  ret i32 %v0_36865
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_36866:
  ret i32 %arg1
}

define i32 @function_36893() local_unnamed_addr {
dec_label_pc_36893:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36893 = load i32, i32* %ecx.global-to-local, align 4
  %v1_36893 = add i32 %v0_36893, -1
  store i32 %v1_36893, i32* %ecx.global-to-local, align 4
  %v0_36895 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36895
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_create_nodeERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36896:
  %stack_var_-17 = alloca i32, align 4
  %v2_368ba = call i32 @unknown_6dea0(i32 %arg1)
  %v1_368c5 = add i32 %v2_368ba, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_368cb = call i32 @unknown_65c4c(i32 %v1_368c5)
  %v2_368d2 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_368d2
}

define i32 @function_368de(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_368de:
  %v0_368de = load i32, i32* @eax, align 8
  %v1_368de = trunc i32 %v0_368de to i8
  %v2_368de = and i8 %v1_368de, -24
  store i8 %v2_368de, i8* inttoptr (i32 -2097151127 to i8*), align 1
  %v0_368e8 = load i32, i32* @ebp, align 4
  %v1_368e8 = add i32 %v0_368e8, 1
  store i32 %v1_368e8, i32* @ebp, align 4
  %v0_368ee = load i32, i32* @ebx, align 4
  %v1_368f2 = add i32 %v0_368e8, -12
  %v2_368f8 = call i32 @unknown_6df34(i32 %v1_368f2, i32 %v0_368ee)
  %v0_368fd = load i32, i32* @ebp, align 4
  %v1_368fd = add i32 %v0_368fd, -13
  %v1_36903 = call i32 @unknown_6d2d6(i32 %v1_368fd)
  %v0_36908 = load i32, i32* @ebp, align 4
  %v1_36908 = add i32 %v0_36908, -20
  %v2_36908 = inttoptr i32 %v1_36908 to i32*
  %v3_36908 = load i32, i32* %v2_36908, align 4
  store i32 %v3_36908, i32* @eax, align 8
  %v1_3690b = add i32 %v0_36908, -12
  %v2_3690b = inttoptr i32 %v1_3690b to i32*
  %v3_3690b = load i32, i32* %v2_3690b, align 4
  %v2_3690e = xor i32 %v3_3690b, 30
  %v3_3690e = icmp eq i32 %v2_3690e, 0
  store i32 %v2_3690e, i32* @edx, align 8
  br i1 %v3_3690e, label %bb, label %dec_label_pc_36917

bb:                                               ; preds = %dec_label_pc_368de
  %v1_36915 = call i32 @function_3695f()
  store i32 %v1_36915, i32* @eax, align 8
  br label %dec_label_pc_36917

dec_label_pc_36917:                               ; preds = %bb, %dec_label_pc_368de
  %v0_36917 = call i32 @function_3695a()
  ret i32 %v0_36917

; uselistorder directives
  uselistorder i8 -24, { 3, 4, 5, 0, 1, 2 }
}

define i32 @function_3691a() local_unnamed_addr {
dec_label_pc_3691a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3691a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3691a
}

define i32 @function_3692f() local_unnamed_addr {
dec_label_pc_3692f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3692f = load i32, i32* %ebx.global-to-local, align 4
  %v1_3692f = add i32 %v0_3692f, 1149889605
  %v2_3692f = inttoptr i32 %v1_3692f to i32*
  %v3_3692f = load i32, i32* %v2_3692f, align 4
  %v4_3692f = add i32 %v3_3692f, -1
  store i32 %v4_3692f, i32* %v2_3692f, align 4
  %v0_36935 = load i32, i32* %eax.global-to-local, align 8
  %v11_36935 = and i32 %v0_36935, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_36935, i32* %eax.global-to-local, align 8
  %v0_36937 = load i32, i32* %ebp.global-to-local, align 4
  %v1_36937 = add i32 %v0_36937, -28
  %v2_36937 = inttoptr i32 %v1_36937 to i32*
  %v3_36937 = load i32, i32* %v2_36937, align 4
  store i32 %v3_36937, i32* %eax.global-to-local, align 8
  %v1_3693d = call i32 @unknown_6d348(i32 %v3_36937)
  store i32 %v1_3693d, i32* @eax, align 8
  %v0_36942 = call i32 @function_36955()
  store i32 %v0_36942, i32* %eax.global-to-local, align 8
  ret i32 %v0_36942
}

define i32 @function_36944(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36944:
  %v0_36944 = load i32, i32* @eax, align 8
  store i32 %v0_36944, i32* @ebx, align 4
  ret i32 %v0_36944
}

define i32 @function_36955() local_unnamed_addr {
dec_label_pc_36955:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3695a() local_unnamed_addr {
dec_label_pc_3695a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3695f() local_unnamed_addr {
dec_label_pc_3695f:
  %v0_36963 = load i32, i32* @eax, align 8
  ret i32 %v0_36963
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEbEC1ERKSO_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36964:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_3698d = inttoptr i32 %arg2 to i32*
  %v2_3698d = load i32, i32* %v1_3698d, align 4
  store i32 %v2_3698d, i32* %arg1, align 4
  %v2_36994 = load i8, i8* %tmp103, align 1
  %v3_3699a = add i32 %tmp108, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_3699a = inttoptr i32 %v3_3699a to i8*
  store i8 %v2_36994, i8* %v4_3699a, align 1
  store i32 0, i32* @eax, align 8
  %v5_369a7 = call i32 @function_369ae(i32 %arg3, i32 %arg2, i32 %tmp108)
  ret i32 %v5_369a7
}

define i32 @function_369ae(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_369ae:
  %v0_369af = load i32, i32* @eax, align 8
  ret i32 %v0_369af
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_369b0:
  %v2_369ca = load i32, i32* %arg1, align 4
  ret i32 %v2_369ca
}

define i32 @function_369dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_369dc:
  %v0_369dc = load i32, i32* @ebp, align 4
  %v1_369dc = add i32 %v0_369dc, -12
  %v2_369dc = inttoptr i32 %v1_369dc to i32*
  %v3_369dc = load i32, i32* %v2_369dc, align 4
  %v3_369df = icmp eq i32 %v3_369dc, 30
  br i1 %v3_369df, label %bb, label %dec_label_pc_369dc.dec_label_pc_369e8_crit_edge

dec_label_pc_369dc.dec_label_pc_369e8_crit_edge:  ; preds = %dec_label_pc_369dc
  %v2_369e6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_369e8

bb:                                               ; preds = %dec_label_pc_369dc
  %v1_369e6 = call i32 @function_369ed()
  br label %dec_label_pc_369e8

dec_label_pc_369e8:                               ; preds = %dec_label_pc_369dc.dec_label_pc_369e8_crit_edge, %bb
  %v2_369e6 = phi i32 [ %v2_369e6.pre, %dec_label_pc_369dc.dec_label_pc_369e8_crit_edge ], [ %v1_369e6, %bb ]
  ret i32 %v2_369e6

; uselistorder directives
  uselistorder label %dec_label_pc_369e8, { 1, 0 }
}

define i32 @function_369ed() local_unnamed_addr {
dec_label_pc_369ed:
  %v0_369ee = load i32, i32* @eax, align 8
  ret i32 %v0_369ee
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_369f0:
  ret i32 %arg2
}

define i32 @function_36a16(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36a16:
  %v0_36a16 = load i32, i32* @eax, align 8
  %v4_36a16 = mul i32 %v0_36a16, 2
  %v0_36a1c = load i32, i32* @ebp, align 4
  %v1_36a1c = add i32 %v0_36a1c, -28
  %v2_36a1c = inttoptr i32 %v1_36a1c to i32*
  %v3_36a1c = load i32, i32* %v2_36a1c, align 4
  %v2_36a22 = call i32 @unknown_6e110(i32 %v3_36a1c, i32 %v4_36a16)
  %v0_36a27 = load i32, i32* @ebp, align 4
  %v1_36a27 = add i32 %v0_36a27, -28
  %v2_36a27 = inttoptr i32 %v1_36a27 to i32*
  %v3_36a27 = load i32, i32* %v2_36a27, align 4
  store i32 %v3_36a27, i32* @eax, align 8
  %v1_36a2a = add i32 %v0_36a27, -12
  %v2_36a2a = inttoptr i32 %v1_36a2a to i32*
  %v3_36a2a = load i32, i32* %v2_36a2a, align 4
  %v3_36a2d = icmp eq i32 %v3_36a2a, 30
  br i1 %v3_36a2d, label %bb, label %dec_label_pc_36a36

bb:                                               ; preds = %dec_label_pc_36a16
  %v1_36a34 = call i32 @function_36a3b()
  br label %dec_label_pc_36a36

dec_label_pc_36a36:                               ; preds = %bb, %dec_label_pc_36a16
  %v2_36a34 = phi i32 [ %v1_36a34, %bb ], [ %v3_36a27, %dec_label_pc_36a16 ]
  ret i32 %v2_36a34
}

define i32 @function_36a3b() local_unnamed_addr {
dec_label_pc_36a3b:
  %v0_36a3c = load i32, i32* @eax, align 8
  ret i32 %v0_36a3c
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36a40:
  %v1_36a5d = call i32 @unknown_6e19c(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_36a6c = call i32 @function_36a73()
  ret i32 %v1_36a6c
}

define i32 @function_36a73() local_unnamed_addr {
dec_label_pc_36a73:
  %v0_36a74 = load i32, i32* @eax, align 8
  ret i32 %v0_36a74
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEE7destroyEPSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36a76:
  %v1_36a99 = call i32 @unknown_6354a(i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_36aa8 = call i32 @function_36aaf()
  ret i32 %v1_36aa8
}

define i32 @function_36aaf() local_unnamed_addr {
dec_label_pc_36aaf:
  %v0_36ab0 = load i32, i32* @eax, align 8
  ret i32 %v0_36ab0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_put_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36ab2:
  %v3_36ae4 = call i32 @unknown_6e238(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 8
  %v1_36af3 = call i32 @function_36afa()
  ret i32 %v1_36af3
}

define i32 @function_36afa() local_unnamed_addr {
dec_label_pc_36afa:
  %v0_36afb = load i32, i32* @eax, align 8
  ret i32 %v0_36afb
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_36afc:
  store i32 0, i32* @eax, align 8
  %v2_36b1d = call i32 @function_36b24(i32 %arg1)
  ret i32 %v2_36b1d
}

define i32 @function_36b24(i32 %arg1) local_unnamed_addr {
dec_label_pc_36b24:
  %v0_36b25 = load i32, i32* @eax, align 8
  ret i32 %v0_36b25
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36b26:
  %v2_36b50 = call i32 @unknown_6e2ee(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_36b5f = call i32 @function_36b66()
  ret i32 %v1_36b5f
}

define i32 @function_36b66() local_unnamed_addr {
dec_label_pc_36b66:
  %v0_36b67 = load i32, i32* @eax, align 8
  ret i32 %v0_36b67
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE9_M_insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36b68:
  %v2_36b98 = call i32 @unknown_6e360(i32 %arg1, i32 %arg3)
  ret i32 %v2_36b98
}

define i32 @function_36bc2() local_unnamed_addr {
dec_label_pc_36bc2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36bc2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_36bc2 = add i32 %v0_36bc2, -1
  store i32 %v1_36bc2, i32* %ecx.global-to-local, align 4
  %v0_36bc4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36bc4
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36bc6:
  %v2_36bf0 = call i32 @unknown_6e48a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_36bff = call i32 @function_36c06()
  ret i32 %v1_36bff
}

define i32 @function_36c06() local_unnamed_addr {
dec_label_pc_36c06:
  %v0_36c07 = load i32, i32* @eax, align 8
  ret i32 %v0_36c07
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36c08:
  %v1_36c22 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_36c22 = inttoptr i32 %v1_36c22 to i32*
  store i32 0, i32* %v2_36c22, align 4
  %v1_36c2c = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_36c2c = inttoptr i32 %v1_36c2c to i32*
  store i32 0, i32* %v2_36c2c, align 4
  %v2_36c3c = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_36c3c = inttoptr i32 %v2_36c3c to i32*
  store i32 %v1_36c22, i32* %v3_36c3c, align 4
  %v2_36c48 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_36c48 = inttoptr i32 %v2_36c48 to i32*
  store i32 %v1_36c22, i32* %v3_36c48, align 4
  store i32 0, i32* @eax, align 8
  %v2_36c55 = call i32 @function_36c5c(i32 %arg1)
  ret i32 %v2_36c55
}

define i32 @function_36c5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_36c5c:
  %v0_36c5d = load i32, i32* @eax, align 8
  ret i32 %v0_36c5d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISN_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_36c5e:
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_36c7e = add i32 %tmp102, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_36c8b = call i32 @unknown_6d4f4(i32 %arg1, i32 %v1_36c7e)
  %v2_36c96 = load i32, i32* %arg2, align 4
  %v2_36c9b = inttoptr i32 %v3_36c8b to i32*
  store i32 %v2_36c96, i32* %v2_36c9b, align 4
  %v1_36ca0 = add i32 %v3_36c8b, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_36ca0 = inttoptr i32 %v1_36ca0 to i32*
  store i32 0, i32* %v2_36ca0, align 4
  %v1_36caa = add i32 %v3_36c8b, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_36caa = inttoptr i32 %v1_36caa to i32*
  store i32 0, i32* %v2_36caa, align 4
  store i32 %v3_36c8b, i32* @eax, align 8
  %v2_36cbe = call i32 @function_36cc5(i32 %v3_36c8b)
  ret i32 %v2_36cbe

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_6d4f4, { 1, 0 }
}

define i32 @function_36cc5(i32 %arg1) local_unnamed_addr {
dec_label_pc_36cc5:
  %v0_36cc6 = load i32, i32* @eax, align 8
  ret i32 %v0_36cc6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_36cc7:
  %v1_36ce1 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_36ce1 = inttoptr i32 %v1_36ce1 to i32*
  %v3_36ce1 = load i32, i32* %v2_36ce1, align 4
  store i32 %v3_36ce1, i32* @eax, align 8
  %v2_36cee = call i32 @function_36cf5(i32 %arg1)
  ret i32 %v2_36cee
}

define i32 @function_36cf5(i32 %arg1) local_unnamed_addr {
dec_label_pc_36cf5:
  %v0_36cf6 = load i32, i32* @eax, align 8
  ret i32 %v0_36cf6
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36cf8:
  %stack_var_-48 = alloca i32, align 4
  %v2_36d2a = call i32 @unknown_6e5ec(i32 %arg1, i32 %arg2)
  %v2_36d3c = ptrtoint i32* %stack_var_-48 to i32
  %v6_36d5f = call i32 @unknown_6e651(i32 %v2_36d3c, i32 %arg1, i32 169086, i32 0, i32 %v2_36d2a, i32 %arg2)
  %v1_36d73 = call i32 @unknown_6e75a(i32 %arg1)
  ret i32 %v1_36d73

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_36d7c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36d7c:
  %v0_36d82 = load i1, i1* @sf, align 1
  %v1_36d82 = icmp eq i1 %v0_36d82, false
  br i1 %v1_36d82, label %dec_label_pc_36d87, label %dec_label_pc_36d84

dec_label_pc_36d84:                               ; preds = %dec_label_pc_36d7c
  %v2_36d82 = load i32, i32* @eax, align 8
  ret i32 %v2_36d82

dec_label_pc_36d87:                               ; preds = %dec_label_pc_36d7c
  %v0_36d88 = load i32, i32* @edx, align 8
  %v0_36d8c = load i32, i32* @ebx, align 4
  %v0_36d90 = load i32, i32* @eax, align 8
  %v3_36d93 = call i32 @unknown_6e79e(i32 %v0_36d90, i32 %v0_36d8c, i32 %v0_36d88)
  %v0_36d98 = load i32, i32* @ebp, align 4
  %v1_36d98 = add i32 %v0_36d98, -16
  %v2_36d98 = inttoptr i32 %v1_36d98 to i32*
  %v3_36d98 = load i32, i32* %v2_36d98, align 4
  %v1_36d9e = call i32 @unknown_49746(i32 %v3_36d98)
  %v0_36da3 = load i32, i32* @ebp, align 4
  %v1_36da3 = add i32 %v0_36da3, -20
  %v2_36da3 = inttoptr i32 %v1_36da3 to i32*
  %v3_36da3 = load i32, i32* %v2_36da3, align 4
  %v1_36da6 = add i32 %v0_36da3, -44
  %v1_36dac = call i32 @unknown_6e6cc(i32 %v1_36da6)
  store i32 %v3_36da3, i32* @eax, align 8
  %v0_36db3 = load i32, i32* @ebp, align 4
  %v1_36db3 = add i32 %v0_36db3, -12
  %v2_36db3 = inttoptr i32 %v1_36db3 to i32*
  %v3_36db3 = load i32, i32* %v2_36db3, align 4
  %v3_36db6 = icmp eq i32 %v3_36db3, 30
  br i1 %v3_36db6, label %bb, label %dec_label_pc_36dbf

bb:                                               ; preds = %dec_label_pc_36d87
  %v1_36dbd = call i32 @function_36ddd()
  store i32 %v1_36dbd, i32* @eax, align 8
  br label %dec_label_pc_36dbf

dec_label_pc_36dbf:                               ; preds = %bb, %dec_label_pc_36d87
  %v0_36dbf = call i32 @function_36dd8()
  ret i32 %v0_36dbf

; uselistorder directives
  uselistorder i32 -44, { 107, 132, 133, 198, 199, 200, 201, 202, 134, 138, 139, 140, 141, 142, 144, 145, 146, 147, 116, 108, 0, 135, 211, 208, 209, 210, 212, 149, 150, 151, 114, 115, 109, 156, 157, 158, 117, 118, 214, 215, 216, 161, 166, 72, 167, 168, 159, 160, 110, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 111, 20, 162, 21, 22, 23, 24, 137, 25, 26, 27, 28, 29, 30, 31, 148, 32, 33, 70, 34, 186, 35, 71, 36, 37, 163, 143, 38, 136, 39, 164, 40, 41, 165, 42, 217, 226, 112, 43, 44, 45, 46, 47, 48, 225, 49, 50, 51, 52, 53, 54, 55, 56, 171, 172, 173, 174, 175, 176, 177, 179, 180, 178, 219, 220, 181, 182, 183, 184, 185, 152, 153, 154, 155, 187, 188, 189, 190, 191, 192, 193, 194, 169, 170, 204, 205, 203, 206, 197, 58, 57, 113, 59, 60, 61, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 62, 63, 64, 65, 66, 67, 68, 69, 224, 221, 222, 223, 195, 196, 73, 74, 75, 76, 77, 82, 78, 79, 80, 81, 83, 84, 85, 90, 86, 87, 88, 89, 91, 92, 93, 94, 95, 207, 96, 97, 213, 98, 102, 99, 100, 101, 103, 104, 105, 106, 218 }
  uselistorder i32 -16, { 42, 61, 62, 63, 64, 65, 66, 109, 68, 67, 2, 69, 40, 41, 70, 71, 72, 73, 74, 75, 48, 49, 50, 76, 77, 78, 116, 117, 79, 80, 43, 81, 82, 113, 114, 44, 87, 86, 88, 89, 90, 45, 115, 46, 84, 85, 47, 101, 91, 122, 92, 93, 6, 5, 7, 94, 95, 96, 97, 98, 99, 83, 100, 107, 108, 123, 124, 125, 126, 102, 103, 110, 111, 3, 4, 104, 105, 106, 9, 8, 51, 52, 53, 54, 10, 11, 55, 56, 57, 58, 59, 60, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19, 20, 21, 22, 112, 25, 24, 32, 23, 26, 29, 27, 28, 30, 31, 34, 33, 35, 36, 37, 38, 118, 39, 119, 120, 121 }
}

define i32 @function_36dc2() local_unnamed_addr {
dec_label_pc_36dc2:
  %eax.global-to-local = alloca i32, align 4
  %v0_36dc2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36dc2
}

define i32 @function_36dd8() local_unnamed_addr {
dec_label_pc_36dd8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36ddd() local_unnamed_addr {
dec_label_pc_36ddd:
  %v0_36ddd = load i32, i32* @ebp, align 4
  %v1_36de2 = inttoptr i32 %v0_36ddd to i32*
  %v2_36de2 = load i32, i32* %v1_36de2, align 4
  store i32 %v2_36de2, i32* @ebp, align 4
  %v0_36de3 = load i32, i32* @eax, align 8
  ret i32 %v0_36de3
}

define i32 @_ZN5boost8signals26detail19default_grow_policy12new_capacityIjEET_S4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_36de4:
  %v2_36dfe = mul i32 %arg1, 4
  ret i32 %v2_36dfe
}

define i32 @function_36e08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36e08:
  %v2_36e08 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_36e08 = load i32, i32* @eax, align 8
  %v4_36e08 = trunc i32 %v3_36e08 to i8
  %v5_36e08 = add i8 %v4_36e08, %v2_36e08
  %v21_36e08 = inttoptr i32 %v3_36e08 to i8*
  store i8 %v5_36e08, i8* %v21_36e08, align 1
  %v0_36e0a = load i32, i32* @ebp, align 4
  %v1_36e0a = load i32, i32* @eax, align 8
  %v3_36e0a = add i32 %v0_36e0a, -24
  %v4_36e0a = add i32 %v3_36e0a, %v1_36e0a
  %v5_36e0a = inttoptr i32 %v4_36e0a to i8*
  %v6_36e0a = load i8, i8* %v5_36e0a, align 1
  %v7_36e0a = load i32, i32* @edx, align 8
  %v8_36e0a = lshr i32 %v7_36e0a, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_36e0a = trunc i32 %v8_36e0a to i8
  %v10_36e0a = add i8 %v9_36e0a, %v6_36e0a
  store i8 %v10_36e0a, i8* %v5_36e0a, align 1
  %v31_36e0a = load i32, i32* @eax, align 8
  ret i32 %v31_36e0a
}

define i32 @function_36e11() local_unnamed_addr {
dec_label_pc_36e11:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36e11 = load i32, i32* %ecx.global-to-local, align 4
  %v1_36e11 = add i32 %v0_36e11, -1
  store i32 %v1_36e11, i32* %ecx.global-to-local, align 4
  %v0_36e13 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36e13
}

define i32 @_ZN5boost8signals25slot1ISsPKcNS_8functionIFSsS3_EEEE13slot_functionEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36e14:
  ret i32 %arg1
}

define i32 @function_36e20(i32 %arg1) local_unnamed_addr {
dec_label_pc_36e20:
  %v1_36e26 = load i32, i32* @ebp, align 4
  %v2_36e26 = add i32 %v1_36e26, -12
  %v3_36e26 = inttoptr i32 %v2_36e26 to i32*
  store i32 30, i32* %v3_36e26, align 4
  %v0_36e2b = load i32, i32* @ebp, align 4
  %v1_36e2b = add i32 %v0_36e2b, -28
  %v2_36e2b = inttoptr i32 %v1_36e2b to i32*
  %v3_36e2b = load i32, i32* %v2_36e2b, align 4
  %v1_36e2e = add i32 %v3_36e2b, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_36e2e, i32* @eax, align 8
  %v1_36e31 = add i32 %v0_36e2b, -12
  %v2_36e31 = inttoptr i32 %v1_36e31 to i32*
  %v3_36e31 = load i32, i32* %v2_36e31, align 4
  %v3_36e34 = icmp eq i32 %v3_36e31, 30
  br i1 %v3_36e34, label %bb, label %dec_label_pc_36e3d

bb:                                               ; preds = %dec_label_pc_36e20
  %v1_36e3b = call i32 @function_36e42()
  br label %dec_label_pc_36e3d

dec_label_pc_36e3d:                               ; preds = %bb, %dec_label_pc_36e20
  %v2_36e3b = phi i32 [ %v1_36e3b, %bb ], [ %v1_36e2e, %dec_label_pc_36e20 ]
  ret i32 %v2_36e3b
}

define i32 @function_36e42() local_unnamed_addr {
dec_label_pc_36e42:
  %v0_36e43 = load i32, i32* @eax, align 8
  ret i32 %v0_36e43
}

define i32 @_ZNK5boost9function1ISsPKcEclES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36e44:
  ret i32 %arg3
}

define i32 @function_36e62(i32 %arg1) local_unnamed_addr {
dec_label_pc_36e62:
  %v0_36e62 = load i32, i32* @ecx, align 4
  %v1_36e62 = add i32 %v0_36e62, -1070468027
  %v2_36e62 = inttoptr i32 %v1_36e62 to i8*
  %v3_36e62 = load i8, i8* %v2_36e62, align 1
  %v5_36e62 = trunc i32 %v0_36e62 to i8
  %v6_36e62 = add i8 %v3_36e62, %v5_36e62
  store i8 %v6_36e62, i8* %v2_36e62, align 1
  %v0_36e68 = load i32, i32* @ebp, align 4
  %v1_36e68 = add i32 %v0_36e68, -32
  %v2_36e68 = inttoptr i32 %v1_36e68 to i32*
  %v3_36e68 = load i32, i32* %v2_36e68, align 4
  %v1_36e6e = call i32 @unknown_483b8(i32 %v3_36e68)
  %v4_36e73 = trunc i32 %v1_36e6e to i8
  %v5_36e73 = icmp eq i8 %v4_36e73, 0
  br i1 %v5_36e73, label %dec_label_pc_36e8d, label %dec_label_pc_36e77

dec_label_pc_36e77:                               ; preds = %dec_label_pc_36e62
  %v0_36e77 = load i32, i32* @ebp, align 4
  %v1_36e77 = add i32 %v0_36e77, -20
  %v1_36e7d = call i32 @unknown_483ec(i32 %v1_36e77)
  %v0_36e82 = load i32, i32* @ebp, align 4
  %v1_36e82 = add i32 %v0_36e82, -20
  %v1_36e88 = call i32 @unknown_4ee8f(i32 %v1_36e82)
  br label %dec_label_pc_36e8d

dec_label_pc_36e8d:                               ; preds = %dec_label_pc_36e77, %dec_label_pc_36e62
  %v0_36e8d = load i32, i32* @ebp, align 4
  %v1_36e8d = add i32 %v0_36e8d, -32
  %v2_36e8d = inttoptr i32 %v1_36e8d to i32*
  %v3_36e8d = load i32, i32* %v2_36e8d, align 4
  ret i32 %v3_36e8d

; uselistorder directives
  uselistorder i32 -1070468027, { 0, 2, 1 }
}

define i32 @function_36e96(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36e96:
  %v0_36e96 = load i32, i32* @eax, align 8
  %v4_36e96 = mul i32 %v0_36e96, 2
  %v1_36e98 = add i32 %v4_36e96, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_36e98 = inttoptr i32 %v1_36e98 to i32*
  %v3_36e98 = load i32, i32* %v2_36e98, align 4
  store i32 %v3_36e98, i32* @ecx, align 4
  %v0_36e9b = load i32, i32* @ebp, align 4
  %v1_36e9b = add i32 %v0_36e9b, -32
  %v2_36e9b = inttoptr i32 %v1_36e9b to i32*
  %v3_36e9b = load i32, i32* %v2_36e9b, align 4
  %v1_36e9e = add i32 %v3_36e9b, ptrtoint (i32* @global_var_4.2376 to i32)
  store i32 %v1_36e9e, i32* @ebx, align 4
  %v1_36ea1 = add i32 %v0_36e9b, -28
  %v2_36ea1 = inttoptr i32 %v1_36ea1 to i32*
  %v3_36ea1 = load i32, i32* %v2_36ea1, align 4
  %v1_36ea4 = add i32 %v0_36e9b, -36
  %v2_36ea4 = inttoptr i32 %v1_36ea4 to i32*
  %v3_36ea4 = load i32, i32* %v2_36ea4, align 4
  store i32 %v3_36ea1, i32* @eax, align 8
  %v1_36eba = add i32 %v0_36e9b, -12
  %v2_36eba = inttoptr i32 %v1_36eba to i32*
  %v3_36eba = load i32, i32* %v2_36eba, align 4
  %v3_36ebd = icmp eq i32 %v3_36eba, 30
  br i1 %v3_36ebd, label %bb, label %dec_label_pc_36ec6

bb:                                               ; preds = %dec_label_pc_36e96
  %v4_36ec4 = call i32 @function_36ee4(i32 %v3_36ea1, i32 %v1_36e9e, i32 %v3_36ea4)
  store i32 %v4_36ec4, i32* @eax, align 8
  br label %dec_label_pc_36ec6

dec_label_pc_36ec6:                               ; preds = %bb, %dec_label_pc_36e96
  %v0_36ec6 = call i32 @function_36edf()
  ret i32 %v0_36ec6

; uselistorder directives
  uselistorder i32 %v3_36ea1, { 1, 0 }
  uselistorder i32 %v0_36e9b, { 0, 2, 1, 3 }
}

define i32 @function_36ec9() local_unnamed_addr {
dec_label_pc_36ec9:
  %eax.global-to-local = alloca i32, align 4
  %v0_36ec9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36ec9
}

define i32 @function_36ecf() local_unnamed_addr {
dec_label_pc_36ecf:
  %eax.global-to-local = alloca i32, align 4
  %v0_36ecf = load i32, i32* %eax.global-to-local, align 8
  %v11_36ecf = and i32 %v0_36ecf, -24
  store i32 %v11_36ecf, i32* %eax.global-to-local, align 8
  %v0_36ed1 = call i32 @__stack_chk_fail.1340()
  store i32 %v0_36ed1, i32* %eax.global-to-local, align 8
  ret i32 %v0_36ed1
}

define i32 @function_36edf() local_unnamed_addr {
dec_label_pc_36edf:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36ee4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36ee4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_36ee6(i32 %arg1) local_unnamed_addr {
dec_label_pc_36ee6:
  %v0_36ee8 = load i32, i32* @eax, align 8
  ret i32 %v0_36ee8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_36eeb:
  %v1_36f05 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_36f05, i32* @eax, align 8
  %v2_36f12 = call i32 @function_36f19(i32 %arg1)
  ret i32 %v2_36f12
}

declare i32 @__stack_chk_fail.1340() local_unnamed_addr

define i32 @function_36f19(i32 %arg1) local_unnamed_addr {
dec_label_pc_36f19:
  %v0_36f1a = load i32, i32* @eax, align 8
  ret i32 %v0_36f1a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_36f1b:
  ret i32 %arg1
}

define i32 @function_36f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_36f28:
  %v1_36f2d = load i32, i32* @ebp, align 4
  %v2_36f2d = add i32 %v1_36f2d, -12
  %v3_36f2d = inttoptr i32 %v2_36f2d to i32*
  store i32 30, i32* %v3_36f2d, align 4
  %v0_36f32 = load i32, i32* @ebp, align 4
  %v1_36f32 = add i32 %v0_36f32, -28
  %v2_36f32 = inttoptr i32 %v1_36f32 to i32*
  %v3_36f32 = load i32, i32* %v2_36f32, align 4
  %v1_36f35 = add i32 %v3_36f32, ptrtoint (i8** @global_var_10.2429 to i32)
  store i32 %v1_36f35, i32* @eax, align 8
  %v1_36f38 = add i32 %v0_36f32, -12
  %v2_36f38 = inttoptr i32 %v1_36f38 to i32*
  %v3_36f38 = load i32, i32* %v2_36f38, align 4
  %v3_36f3b = icmp eq i32 %v3_36f38, 30
  br i1 %v3_36f3b, label %bb, label %dec_label_pc_36f44

bb:                                               ; preds = %dec_label_pc_36f28
  %v1_36f42 = call i32 @function_36f49()
  br label %dec_label_pc_36f44

dec_label_pc_36f44:                               ; preds = %bb, %dec_label_pc_36f28
  %v2_36f42 = phi i32 [ %v1_36f42, %bb ], [ %v1_36f35, %dec_label_pc_36f28 ]
  ret i32 %v2_36f42
}

define i32 @function_36f49() local_unnamed_addr {
dec_label_pc_36f49:
  %v0_36f4a = load i32, i32* @eax, align 8
  ret i32 %v0_36f4a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_create_nodeERKSN_() local_unnamed_addr {
dec_label_pc_36f4c:
  %eax.global-to-local = alloca i32, align 4
  %v5_36f4f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_36f4f
}

define i32 @function_36f52(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36f52:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_36f52 = load i32, i32* @eax, align 8
  %v11_36f52 = xor i32 %v0_36f52, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  store i32 %v11_36f52, i32* %eax.global-to-local, align 8
  %v0_36f54 = load i32, i32* @ebp, align 4
  %v1_36f54 = add i32 %v0_36f54, 1
  store i32 %v1_36f54, i32* %ebp.global-to-local, align 4
  %v0_36f55 = load i32, i32* @ecx, align 4
  %v1_36f55 = add i32 %v0_36f55, 1166795845
  %v2_36f55 = inttoptr i32 %v1_36f55 to i8*
  %v3_36f55 = load i8, i8* %v2_36f55, align 1
  %v5_36f55 = trunc i32 %v0_36f55 to i8
  %v6_36f55 = or i8 %v3_36f55, %v5_36f55
  store i8 %v6_36f55, i8* %v2_36f55, align 1
  %v0_36f5b = load i32, i32* %eax.global-to-local, align 8
  %v11_36f5b = or i32 %v0_36f5b, 137
  store i32 %v11_36f5b, i32* %eax.global-to-local, align 8
  %v0_36f5d = load i32, i32* %ebp.global-to-local, align 4
  %v1_36f5d = add i32 %v0_36f5d, 1
  store i32 %v1_36f5d, i32* @ebp, align 4
  ret i32 %v11_36f5b

; uselistorder directives
  uselistorder i32 %v11_36f5b, { 1, 0 }
  uselistorder i32 1166795845, { 1, 2, 3, 5, 4, 6, 0 }
}

define i32 @function_36f60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36f60:
  %v1_36f65 = load i32, i32* @ebp, align 4
  %v2_36f65 = add i32 %v1_36f65, -12
  %v3_36f65 = inttoptr i32 %v2_36f65 to i32*
  store i32 30, i32* %v3_36f65, align 4
  %v0_36f6a = load i32, i32* @ebp, align 4
  %v1_36f6a = add i32 %v0_36f6a, -28
  %v2_36f6a = inttoptr i32 %v1_36f6a to i32*
  %v3_36f6a = load i32, i32* %v2_36f6a, align 4
  %v2_36f70 = call i32 @unknown_6ea78(i32 %v3_36f6a)
  %v1_36f75 = load i32, i32* @ebp, align 4
  %v2_36f75 = add i32 %v1_36f75, -20
  %v3_36f75 = inttoptr i32 %v2_36f75 to i32*
  store i32 %v2_36f70, i32* %v3_36f75, align 4
  %v0_36f78 = load i32, i32* @ebp, align 4
  %v1_36f78 = add i32 %v0_36f78, -20
  %v2_36f78 = inttoptr i32 %v1_36f78 to i32*
  %v3_36f78 = load i32, i32* %v2_36f78, align 4
  %v1_36f7b = add i32 %v3_36f78, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_36f81 = call i32 @unknown_676ee(i32 %v1_36f7b)
  store i32 %v2_36f81, i32* @ebx, align 4
  %v0_36f88 = load i32, i32* @ebp, align 4
  %v1_36f88 = add i32 %v0_36f88, -13
  %v1_36f8b = add i32 %v0_36f88, -28
  %v2_36f8b = inttoptr i32 %v1_36f8b to i32*
  %v3_36f8b = load i32, i32* %v2_36f8b, align 4
  %v3_36f95 = call i32 @unknown_6dff2(i32 %v1_36f88, i32 %v3_36f8b)
  %v0_36f9d = load i32, i32* @ebp, align 4
  %v1_36f9d = add i32 %v0_36f9d, -32
  %v2_36f9d = inttoptr i32 %v1_36f9d to i32*
  %v3_36f9d = load i32, i32* %v2_36f9d, align 4
  %v0_36fa4 = load i32, i32* @ebx, align 4
  %v1_36fa8 = add i32 %v0_36f9d, -13
  %v4_36fae = call i32 @unknown_6eb0c(i32 %v1_36fa8, i32 %v0_36fa4, i32 %v3_36f9d)
  %v0_36fb3 = load i32, i32* @ebp, align 4
  %v1_36fb3 = add i32 %v0_36fb3, -13
  %v1_36fb9 = call i32 @unknown_6e042(i32 %v1_36fb3)
  %v0_36fbe = load i32, i32* @ebp, align 4
  %v1_36fbe = add i32 %v0_36fbe, -20
  %v2_36fbe = inttoptr i32 %v1_36fbe to i32*
  %v3_36fbe = load i32, i32* %v2_36fbe, align 4
  store i32 %v3_36fbe, i32* @eax, align 8
  %v1_36fc1 = add i32 %v0_36fbe, -12
  %v2_36fc1 = inttoptr i32 %v1_36fc1 to i32*
  %v3_36fc1 = load i32, i32* %v2_36fc1, align 4
  %v3_36fc4 = icmp eq i32 %v3_36fc1, 30
  br i1 %v3_36fc4, label %bb, label %dec_label_pc_36fcd

bb:                                               ; preds = %dec_label_pc_36f60
  %v1_36fcb = call i32 @function_37015()
  store i32 %v1_36fcb, i32* @eax, align 8
  br label %dec_label_pc_36fcd

dec_label_pc_36fcd:                               ; preds = %bb, %dec_label_pc_36f60
  %v0_36fcd = call i32 @function_37010()
  ret i32 %v0_36fcd
}

define i32 @function_36fd0() local_unnamed_addr {
dec_label_pc_36fd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_36fd0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36fd0
}

define i32 @function_36fd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36fd4:
  %v0_36fd4 = load i32, i32* @eax, align 8
  %v1_36fd7 = call i32 @unknown_6e042(i32 %v0_36fd4)
  %v0_36fdc = load i32, i32* @ebx, align 4
  ret i32 %v0_36fdc

; uselistorder directives
  uselistorder i32 (i32)* @unknown_6e042, { 1, 0 }
}

define i32 @function_36fe5() local_unnamed_addr {
dec_label_pc_36fe5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_36fe5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_36fe5 = add i32 %v0_36fe5, 1149889605
  %v2_36fe5 = inttoptr i32 %v1_36fe5 to i32*
  %v3_36fe5 = load i32, i32* %v2_36fe5, align 4
  %v4_36fe5 = add i32 %v3_36fe5, -1
  store i32 %v4_36fe5, i32* %v2_36fe5, align 4
  %v0_36feb = load i32, i32* %eax.global-to-local, align 8
  %v11_36feb = and i32 %v0_36feb, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_36feb, i32* %eax.global-to-local, align 8
  %v0_36fed = load i32, i32* %ebp.global-to-local, align 4
  %v1_36fed = add i32 %v0_36fed, -28
  %v2_36fed = inttoptr i32 %v1_36fed to i32*
  %v3_36fed = load i32, i32* %v2_36fed, align 4
  store i32 %v3_36fed, i32* %eax.global-to-local, align 8
  %v1_36ff3 = call i32 @unknown_6e0b4(i32 %v3_36fed)
  store i32 %v1_36ff3, i32* @eax, align 8
  %v0_36ff8 = call i32 @function_3700b()
  store i32 %v0_36ff8, i32* %eax.global-to-local, align 8
  ret i32 %v0_36ff8
}

define i32 @function_36ffb() local_unnamed_addr {
dec_label_pc_36ffb:
  %eax.global-to-local = alloca i32, align 4
  %v0_36ffb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_36ffb
}

define i32 @function_3700b() local_unnamed_addr {
dec_label_pc_3700b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37010() local_unnamed_addr {
dec_label_pc_37010:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37015() local_unnamed_addr {
dec_label_pc_37015:
  %v0_37015 = load i32, i32* @ebp, align 4
  %v1_37015 = add i32 %v0_37015, -4
  %v2_37015 = inttoptr i32 %v1_37015 to i32*
  %v3_37015 = load i32, i32* %v2_37015, align 4
  store i32 %v3_37015, i32* @ebx, align 4
  %v0_37019 = load i32, i32* @eax, align 8
  ret i32 %v0_37019

; uselistorder directives
  uselistorder i32 -4, { 8, 14, 23, 10, 16, 17, 9, 1, 19, 21, 12, 22, 15, 13, 7, 11, 2, 5, 6, 3, 0, 4, 18, 20 }
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEbEC1ERKSO_RKb(i32 %arg1) local_unnamed_addr {
dec_label_pc_3701a:
  ret i32 %arg1
}

define i32 @function_37026(i32 %arg1) local_unnamed_addr {
dec_label_pc_37026:
  %v0_37026 = load i32, i32* @ebp, align 4
  %v1_37026 = add i32 %v0_37026, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_37026 = inttoptr i32 %v1_37026 to i32*
  %v3_37026 = load i32, i32* %v2_37026, align 4
  %v2_37029 = add i32 %v0_37026, -32
  %v3_37029 = inttoptr i32 %v2_37029 to i32*
  store i32 %v3_37026, i32* %v3_37029, align 4
  %v0_3702c = load i32, i32* @ebp, align 4
  %v1_3702c = add i32 %v0_3702c, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_3702c = inttoptr i32 %v1_3702c to i32*
  %v3_3702c = load i32, i32* %v2_3702c, align 4
  %v2_3702f = add i32 %v0_3702c, -36
  %v3_3702f = inttoptr i32 %v2_3702f to i32*
  store i32 %v3_3702c, i32* %v3_3702f, align 4
  %v1_37038 = load i32, i32* @ebp, align 4
  %v2_37038 = add i32 %v1_37038, -12
  %v3_37038 = inttoptr i32 %v2_37038 to i32*
  store i32 30, i32* %v3_37038, align 4
  %v0_3703d = load i32, i32* @ebp, align 4
  %v1_3703d = add i32 %v0_3703d, -28
  %v2_3703d = inttoptr i32 %v1_3703d to i32*
  %v3_3703d = load i32, i32* %v2_3703d, align 4
  %v1_37040 = add i32 %v0_3703d, -32
  %v2_37040 = inttoptr i32 %v1_37040 to i32*
  %v3_37040 = load i32, i32* %v2_37040, align 4
  %v1_37043 = inttoptr i32 %v3_37040 to i32*
  %v2_37043 = load i32, i32* %v1_37043, align 4
  %v2_37045 = inttoptr i32 %v3_3703d to i32*
  store i32 %v2_37043, i32* %v2_37045, align 4
  %v0_37047 = load i32, i32* @ebp, align 4
  %v1_37047 = add i32 %v0_37047, -36
  %v2_37047 = inttoptr i32 %v1_37047 to i32*
  %v3_37047 = load i32, i32* %v2_37047, align 4
  %v1_3704a = inttoptr i32 %v3_37047 to i8*
  %v2_3704a = load i8, i8* %v1_3704a, align 1
  %v1_3704d = add i32 %v0_37047, -28
  %v2_3704d = inttoptr i32 %v1_3704d to i32*
  %v3_3704d = load i32, i32* %v2_3704d, align 4
  %v3_37050 = add i32 %v3_3704d, ptrtoint (i32* @global_var_4.2376 to i32)
  %v4_37050 = inttoptr i32 %v3_37050 to i8*
  store i8 %v2_3704a, i8* %v4_37050, align 1
  %v0_37053 = load i32, i32* @ebp, align 4
  %v1_37053 = add i32 %v0_37053, -12
  %v2_37053 = inttoptr i32 %v1_37053 to i32*
  %v3_37053 = load i32, i32* %v2_37053, align 4
  %v2_37056 = xor i32 %v3_37053, 30
  %v3_37056 = icmp eq i32 %v2_37056, 0
  store i32 %v2_37056, i32* @eax, align 8
  br i1 %v3_37056, label %bb, label %dec_label_pc_3705f

bb:                                               ; preds = %dec_label_pc_37026
  %v1_3705d = call i32 @function_37064()
  br label %dec_label_pc_3705f

dec_label_pc_3705f:                               ; preds = %bb, %dec_label_pc_37026
  %v2_3705d = phi i32 [ %v1_3705d, %bb ], [ %v2_37056, %dec_label_pc_37026 ]
  ret i32 %v2_3705d

; uselistorder directives
  uselistorder i32 -36, { 38, 39, 36, 40, 41, 42, 43, 44, 45, 114, 115, 46, 49, 50, 51, 52, 53, 54, 60, 64, 62, 63, 61, 0, 65, 66, 37, 1, 2, 67, 123, 124, 68, 27, 47, 48, 28, 127, 70, 71, 55, 56, 57, 58, 59, 72, 73, 117, 118, 119, 120, 121, 122, 75, 76, 33, 79, 32, 34, 125, 126, 29, 80, 81, 82, 84, 85, 89, 90, 69, 30, 91, 92, 74, 31, 103, 104, 87, 88, 130, 93, 3, 94, 95, 96, 97, 98, 99, 100, 4, 77, 78, 101, 102, 105, 106, 5, 110, 131, 86, 108, 83, 116, 109, 111, 112, 113, 35, 6, 7, 107, 8, 9, 10, 11, 12, 13, 128, 129, 17, 18, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26 }
}

define i32 @function_37064() local_unnamed_addr {
dec_label_pc_37064:
  %v0_37065 = load i32, i32* @eax, align 8
  ret i32 %v0_37065
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_37066:
  %v2_37080 = load i32, i32* %arg1, align 4
  ret i32 %v2_37080
}

define i32 @function_370a2() local_unnamed_addr {
dec_label_pc_370a2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_370a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_370a2 = add i32 %v0_370a2, -1
  store i32 %v1_370a2, i32* %ecx.global-to-local, align 4
  %v0_370a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_370a4
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_370a6:
  ret i32 30
}

define i32 @function_370c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_370c0:
  %v0_370c3 = load i32, i32* @ebp, align 4
  %v1_370c3 = add i32 %v0_370c3, -32
  %v2_370c3 = inttoptr i32 %v1_370c3 to i32*
  %v3_370c3 = load i32, i32* %v2_370c3, align 4
  %v1_370c9 = call i32 @unknown_6d2f0(i32 %v3_370c3)
  %v0_370d2 = load i32, i32* @ebp, align 4
  %v1_370d2 = add i32 %v0_370d2, -28
  %v2_370d2 = inttoptr i32 %v1_370d2 to i32*
  %v3_370d2 = load i32, i32* %v2_370d2, align 4
  %v2_370d8 = call i32 @unknown_6ece8(i32 %v3_370d2, i32 %v1_370c9)
  %v0_370dd = load i32, i32* @ebp, align 4
  %v1_370dd = add i32 %v0_370dd, -28
  %v2_370dd = inttoptr i32 %v1_370dd to i32*
  %v3_370dd = load i32, i32* %v2_370dd, align 4
  store i32 %v3_370dd, i32* @eax, align 8
  %v1_370e0 = add i32 %v0_370dd, -12
  %v2_370e0 = inttoptr i32 %v1_370e0 to i32*
  %v3_370e0 = load i32, i32* %v2_370e0, align 4
  store i1 false, i1* @cf, align 1
  %v3_370e3 = icmp eq i32 %v3_370e0, 30
  br i1 %v3_370e3, label %bb, label %dec_label_pc_370ec

bb:                                               ; preds = %dec_label_pc_370c0
  %v1_370ea = call i32 @function_370f1()
  br label %dec_label_pc_370ec

dec_label_pc_370ec:                               ; preds = %bb, %dec_label_pc_370c0
  %v3_370ea = phi i32 [ %v1_370ea, %bb ], [ %v3_370dd, %dec_label_pc_370c0 ]
  ret i32 %v3_370ea
}

define i32 @function_370f1() local_unnamed_addr {
dec_label_pc_370f1:
  %v0_370f2 = load i32, i32* @eax, align 8
  ret i32 %v0_370f2
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_370f6:
  ret i32 0
}

define i32 @function_3710e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3710e:
  %v0_3710e = load i32, i32* @ebp, align 4
  %v1_3710e = add i32 %v0_3710e, 1
  store i32 %v1_3710e, i32* @ebp, align 4
  %v0_37113 = call i32 @unknown_6ed74()
  %v0_37118 = load i32, i32* @ebp, align 4
  %v1_37118 = add i32 %v0_37118, -12
  %v2_37118 = inttoptr i32 %v1_37118 to i32*
  %v3_37118 = load i32, i32* %v2_37118, align 4
  %v2_3711b = xor i32 %v3_37118, 30
  %v3_3711b = icmp eq i32 %v2_3711b, 0
  store i32 %v2_3711b, i32* @eax, align 8
  br i1 %v3_3711b, label %bb, label %dec_label_pc_37124

bb:                                               ; preds = %dec_label_pc_3710e
  %v1_37122 = call i32 @function_37129()
  br label %dec_label_pc_37124

dec_label_pc_37124:                               ; preds = %bb, %dec_label_pc_3710e
  %v2_37122 = phi i32 [ %v1_37122, %bb ], [ %v2_3711b, %dec_label_pc_3710e ]
  ret i32 %v2_37122
}

define i32 @function_37129() local_unnamed_addr {
dec_label_pc_37129:
  %v0_3712a = load i32, i32* @eax, align 8
  ret i32 %v0_3712a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEE7destroyEPSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3712c:
  ret i32 %arg2
}

define i32 @function_37140(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37140:
  %eax.global-to-local = alloca i32, align 4
  %v0_37140 = load i32, i32* @eax, align 8
  %v1_37140 = trunc i32 %v0_37140 to i8
  %v2_37140 = load i1, i1* @cf, align 1
  %v3_37140 = zext i1 %v2_37140 to i8
  %v4_37140 = add i8 %v3_37140, %v1_37140
  %v22_37140 = zext i8 %v4_37140 to i32
  %v24_37140 = and i32 %v0_37140, -256
  %v25_37140 = or i32 %v22_37140, %v24_37140
  store i32 %v25_37140, i32* %eax.global-to-local, align 8
  %v1_37142 = inttoptr i32 %v25_37140 to i8*
  %v2_37142 = load i8, i8* %v1_37142, align 1
  %v5_37142 = add i8 %v2_37142, %v4_37140
  store i8 %v5_37142, i8* %v1_37142, align 1
  %v0_37144 = load i32, i32* %eax.global-to-local, align 8
  %v1_37144 = load i32, i32* @ebp, align 4
  %v2_37144 = add i32 %v1_37144, -12
  %v3_37144 = inttoptr i32 %v2_37144 to i32*
  store i32 %v0_37144, i32* %v3_37144, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_37149 = load i32, i32* @ebp, align 4
  %v1_37149 = add i32 %v0_37149, -32
  %v2_37149 = inttoptr i32 %v1_37149 to i32*
  %v3_37149 = load i32, i32* %v2_37149, align 4
  store i32 %v3_37149, i32* %eax.global-to-local, align 8
  %v1_3714f = call i32 @unknown_653b2(i32 %v3_37149)
  store i32 %v1_3714f, i32* %eax.global-to-local, align 8
  %v0_37154 = load i32, i32* @ebp, align 4
  %v1_37154 = add i32 %v0_37154, -12
  %v2_37154 = inttoptr i32 %v1_37154 to i32*
  %v3_37154 = load i32, i32* %v2_37154, align 4
  %v2_37157 = xor i32 %v3_37154, 30
  %v3_37157 = icmp eq i32 %v2_37157, 0
  store i32 %v2_37157, i32* @eax, align 8
  br i1 %v3_37157, label %bb, label %dec_label_pc_37160

bb:                                               ; preds = %dec_label_pc_37140
  %v1_3715e = call i32 @function_37165()
  store i32 %v1_3715e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_37160

dec_label_pc_37160:                               ; preds = %bb, %dec_label_pc_37140
  %v2_3715e = phi i32 [ %v1_3715e, %bb ], [ %v2_37157, %dec_label_pc_37140 ]
  ret i32 %v2_3715e
}

define i32 @function_37165() local_unnamed_addr {
dec_label_pc_37165:
  %v0_37166 = load i32, i32* @eax, align 8
  ret i32 %v0_37166
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_put_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37168:
  ret i32 %arg2
}

define i32 @function_37178(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37178:
  %v0_37178 = load i32, i32* @ebp, align 4
  %v1_37178 = add i32 %v0_37178, 1
  store i32 %v1_37178, i32* @ebp, align 4
  %v0_37179 = load i32, i32* @ecx, align 4
  %v1_37179 = add i32 %v0_37179, -1
  store i32 %v1_37179, i32* @ecx, align 4
  %v2_37180 = add i32 %v0_37178, -11
  %v3_37180 = inttoptr i32 %v2_37180 to i32*
  store i32 30, i32* %v3_37180, align 4
  %v0_37185 = load i32, i32* @ebp, align 4
  %v1_37185 = add i32 %v0_37185, -28
  %v2_37185 = inttoptr i32 %v1_37185 to i32*
  %v3_37185 = load i32, i32* %v2_37185, align 4
  %v1_37190 = add i32 %v0_37185, -32
  %v2_37190 = inttoptr i32 %v1_37190 to i32*
  %v3_37190 = load i32, i32* %v2_37190, align 4
  store i32 %v3_37190, i32* @edx, align 8
  %v3_3719a = call i32 @unknown_6ee10(i32 %v3_37185, i32 %v3_37190, i32 1)
  %v0_3719f = load i32, i32* @ebp, align 4
  %v1_3719f = add i32 %v0_3719f, -12
  %v2_3719f = inttoptr i32 %v1_3719f to i32*
  %v3_3719f = load i32, i32* %v2_3719f, align 4
  %v2_371a2 = xor i32 %v3_3719f, 30
  %v3_371a2 = icmp eq i32 %v2_371a2, 0
  store i32 %v2_371a2, i32* @eax, align 8
  br i1 %v3_371a2, label %bb, label %dec_label_pc_371ab

bb:                                               ; preds = %dec_label_pc_37178
  %v1_371a9 = call i32 @function_371b0()
  br label %dec_label_pc_371ab

dec_label_pc_371ab:                               ; preds = %bb, %dec_label_pc_37178
  %v4_371a9 = phi i32 [ %v1_371a9, %bb ], [ %v2_371a2, %dec_label_pc_37178 ]
  ret i32 %v4_371a9
}

define i32 @function_371b0() local_unnamed_addr {
dec_label_pc_371b0:
  %v0_371b1 = load i32, i32* @eax, align 8
  ret i32 %v0_371b1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_371b2:
  store i32 0, i32* @eax, align 8
  %v2_371d3 = call i32 @function_371da(i32 %arg1)
  ret i32 %v2_371d3
}

define i32 @function_371da(i32 %arg1) local_unnamed_addr {
dec_label_pc_371da:
  %v0_371db = load i32, i32* @eax, align 8
  ret i32 %v0_371db
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %arg1) local_unnamed_addr {
dec_label_pc_371dc:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_37206 = call i32 @unknown_6eec6(i32 %arg1, i32 %tmp3)
  store i32 0, i32* @eax, align 8
  %v1_37215 = call i32 @function_3721c()
  ret i32 %v1_37215

; uselistorder directives
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 2, 43, 3, 44, 4, 5, 6, 7, 8, 45, 46, 9, 47, 48, 49, 50, 10, 11, 51, 52, 12, 53, 54, 13, 55, 56, 57, 14, 58, 59, 15, 16, 60, 17, 61, 62, 63, 64, 65, 66 }
}

define i32 @function_3721c() local_unnamed_addr {
dec_label_pc_3721c:
  %v0_3721d = load i32, i32* @eax, align 8
  ret i32 %v0_3721d
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE9_M_insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3721e:
  %v2_3724e = call i32 @unknown_6ef38(i32 %arg1, i32 %arg3)
  ret i32 %v2_3724e
}

define i32 @function_37278() local_unnamed_addr {
dec_label_pc_37278:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37278 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37278 = add i32 %v0_37278, -1
  store i32 %v1_37278, i32* %ecx.global-to-local, align 4
  %v0_3727a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3727a
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3727c:
  %v2_372a6 = call i32 @unknown_6f062(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 8
  %v1_372b5 = call i32 @function_372bc()
  ret i32 %v1_372b5
}

define i32 @function_372bc() local_unnamed_addr {
dec_label_pc_372bc:
  %v0_372bd = load i32, i32* @eax, align 8
  ret i32 %v0_372bd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_372be:
  %eax.global-to-local = alloca i32, align 4
  %v1_372d8 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_372d8 = inttoptr i32 %v1_372d8 to i32*
  store i32 0, i32* %v2_372d8, align 4
  %v1_372e2 = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_372e2 = inttoptr i32 %v1_372e2 to i32*
  store i32 0, i32* %v2_372e2, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v2_372f2 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_372f2 = inttoptr i32 %v2_372f2 to i32*
  store i32 %v1_372d8, i32* %v3_372f2, align 4
  %v4_372f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_372f2
}

define i32 @function_372f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_372f6:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_372f6 = load i32, i32* @ebp, align 4
  %v0_372f9 = load i32, i32* @eax, align 8
  %v1_372fa = trunc i32 %v0_372f9 to i8
  %v2_372fa = add i8 %v1_372fa, ptrtoint (i8* @global_var_8b.2420 to i8)
  %v6_372fa = icmp ult i8 %v2_372fa, %v1_372fa
  %v16_372fa = zext i8 %v2_372fa to i32
  %v18_372fa = and i32 %v0_372f9, -256
  %v19_372fa = or i32 %v16_372fa, %v18_372fa
  store i32 %v19_372fa, i32* %eax.global-to-local, align 8
  %v1_372fc = add i32 %v0_372f6, 2
  store i32 %v1_372fc, i32* @ebp, align 4
  store i32 %v19_372fa, i32* %stack_var_-8, align 4
  %v0_37300 = load i32, i32* @ebx, align 4
  %v1_37300 = add i32 %v0_37300, 862319685
  %v2_37300 = inttoptr i32 %v1_37300 to i8*
  %v3_37300 = load i8, i8* %v2_37300, align 1
  %v4_37300 = load i32, i32* @ecx, align 4
  %v5_37300 = trunc i32 %v4_37300 to i8
  %v7_37300 = zext i1 %v6_372fa to i8
  %v8_37300 = add i8 %v3_37300, %v7_37300
  %v9_37300 = add i8 %v8_37300, %v5_37300
  store i8 %v9_37300, i8* %v2_37300, align 1
  %v0_37306 = load i32, i32* %eax.global-to-local, align 8
  %v1_37306 = add i32 %v0_37306, ptrtoint (i32* @global_var_14.2373 to i32)
  %v5_37306 = icmp ult i32 %v1_37306, %v0_37306
  store i1 %v5_37306, i1* @cf, align 1
  %v10_37306 = icmp eq i32 %v1_37306, 0
  store i32 %v1_37306, i32* @eax, align 8
  br i1 %v10_37306, label %bb, label %dec_label_pc_3730d

bb:                                               ; preds = %dec_label_pc_372f6
  %v1_3730b = load i32, i32* %stack_var_-8, align 4
  %v3_3730b = call i32 @function_37312(i32 %v1_3730b, i32 %v0_372f9)
  store i32 %v3_3730b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3730d

dec_label_pc_3730d:                               ; preds = %bb, %dec_label_pc_372f6
  %v4_3730b = phi i32 [ %v3_3730b, %bb ], [ %v1_37306, %dec_label_pc_372f6 ]
  ret i32 %v4_3730b
}

define i32 @function_37312(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37312:
  %v0_37313 = load i32, i32* @eax, align 8
  ret i32 %v0_37313
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISN_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_37314:
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_37334 = add i32 %tmp102, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_37341 = call i32 @unknown_6e260(i32 %arg1, i32 %v1_37334)
  ret i32 %v3_37341
}

define i32 @function_37352(i32 %arg1) local_unnamed_addr {
dec_label_pc_37352:
  %v0_37352 = load i32, i32* @ebx, align 4
  %v1_37352 = add i32 %v0_37352, 1086844997
  %v2_37352 = inttoptr i32 %v1_37352 to i8*
  %v3_37352 = load i8, i8* %v2_37352, align 1
  %v4_37352 = load i32, i32* @ecx, align 4
  %v5_37352 = trunc i32 %v4_37352 to i8
  %v6_37352 = load i1, i1* @cf, align 1
  %v7_37352 = zext i1 %v6_37352 to i8
  %v8_37352 = add i8 %v5_37352, %v3_37352
  %v9_37352 = add i8 %v8_37352, %v7_37352
  store i8 %v9_37352, i8* %v2_37352, align 1
  %v2_37358 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_37358 = load i32, i32* @eax, align 8
  %v4_37358 = trunc i32 %v3_37358 to i8
  %v5_37358 = or i8 %v4_37358, %v2_37358
  %v12_37358 = inttoptr i32 %v3_37358 to i8*
  store i8 %v5_37358, i8* %v12_37358, align 1
  %v2_3735a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3735a = load i32, i32* @eax, align 8
  %v4_3735a = trunc i32 %v3_3735a to i8
  %v5_3735a = add i8 %v4_3735a, %v2_3735a
  %v21_3735a = inttoptr i32 %v3_3735a to i8*
  store i8 %v5_3735a, i8* %v21_3735a, align 1
  %v0_3735c = load i32, i32* @ebx, align 4
  %v1_3735c = add i32 %v0_3735c, 1086844997
  %v2_3735c = inttoptr i32 %v1_3735c to i8*
  %v3_3735c = load i8, i8* %v2_3735c, align 1
  %v4_3735c = load i32, i32* @ecx, align 4
  %v5_3735c = trunc i32 %v4_3735c to i8
  %v6_3735c = add i8 %v5_3735c, %v3_3735c
  store i8 %v6_3735c, i8* %v2_3735c, align 1
  %v0_37362 = load i32, i32* @eax, align 8
  %v1_37362 = trunc i32 %v0_37362 to i8
  %v1_37364 = inttoptr i32 %v0_37362 to i8*
  %v2_37364 = load i8, i8* %v1_37364, align 1
  %v5_37364 = add i8 %v2_37364, %v1_37362
  store i8 %v5_37364, i8* %v1_37364, align 1
  %v0_37366 = load i32, i32* @ebx, align 4
  %v1_37366 = add i32 %v0_37366, 1435234373
  %v2_37366 = inttoptr i32 %v1_37366 to i8*
  %v3_37366 = load i8, i8* %v2_37366, align 1
  %v4_37366 = load i32, i32* @ecx, align 4
  %v5_37366 = trunc i32 %v4_37366 to i8
  %v6_37366 = add i8 %v5_37366, %v3_37366
  store i8 %v6_37366, i8* %v2_37366, align 1
  %v0_3736d = load i32, i32* @edx, align 8
  %v3_3736d = icmp eq i32 %v0_3736d, 30
  br i1 %v3_3736d, label %bb, label %dec_label_pc_37352.dec_label_pc_37376_crit_edge

dec_label_pc_37352.dec_label_pc_37376_crit_edge:  ; preds = %dec_label_pc_37352
  %v2_37374.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_37376

bb:                                               ; preds = %dec_label_pc_37352
  %v1_37374 = call i32 @function_3737b()
  br label %dec_label_pc_37376

dec_label_pc_37376:                               ; preds = %dec_label_pc_37352.dec_label_pc_37376_crit_edge, %bb
  %v2_37374 = phi i32 [ %v2_37374.pre, %dec_label_pc_37352.dec_label_pc_37376_crit_edge ], [ %v1_37374, %bb ]
  ret i32 %v2_37374

; uselistorder directives
  uselistorder label %dec_label_pc_37376, { 1, 0 }
}

define i32 @function_3737b() local_unnamed_addr {
dec_label_pc_3737b:
  %v0_3737c = load i32, i32* @eax, align 8
  ret i32 %v0_3737c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3737d:
  ret i32 %arg1
}

define i32 @function_37388(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37388:
  %v1_3738f = load i32, i32* @ebp, align 4
  %v2_3738f = add i32 %v1_3738f, -12
  %v3_3738f = inttoptr i32 %v2_3738f to i32*
  store i32 30, i32* %v3_3738f, align 4
  %v0_37394 = load i32, i32* @ebp, align 4
  %v1_37394 = add i32 %v0_37394, -28
  %v2_37394 = inttoptr i32 %v1_37394 to i32*
  %v3_37394 = load i32, i32* %v2_37394, align 4
  %v1_37397 = add i32 %v3_37394, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_37397 = inttoptr i32 %v1_37397 to i32*
  %v3_37397 = load i32, i32* %v2_37397, align 4
  store i32 %v3_37397, i32* @eax, align 8
  %v1_3739a = add i32 %v0_37394, -12
  %v2_3739a = inttoptr i32 %v1_3739a to i32*
  %v3_3739a = load i32, i32* %v2_3739a, align 4
  %v2_3739d = xor i32 %v3_3739a, 30
  %v3_3739d = icmp eq i32 %v2_3739d, 0
  store i32 %v2_3739d, i32* @edx, align 8
  br i1 %v3_3739d, label %bb, label %dec_label_pc_373a6

bb:                                               ; preds = %dec_label_pc_37388
  %v1_373a4 = call i32 @function_373ab()
  br label %dec_label_pc_373a6

dec_label_pc_373a6:                               ; preds = %bb, %dec_label_pc_37388
  %v2_373a4 = phi i32 [ %v1_373a4, %bb ], [ %v3_37397, %dec_label_pc_37388 ]
  ret i32 %v2_373a4
}

define i32 @function_373ab() local_unnamed_addr {
dec_label_pc_373ab:
  %v0_373ac = load i32, i32* @eax, align 8
  ret i32 %v0_373ac
}

define i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEE13slot_functionEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_373ae:
  %v1_373c8 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  store i32 %v1_373c8, i32* @eax, align 8
  %v2_373d5 = call i32 @function_373dc(i32 %arg1)
  ret i32 %v2_373d5
}

define i32 @function_373dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_373dc:
  %v0_373dd = load i32, i32* @eax, align 8
  ret i32 %v0_373dd
}

define i32 @_ZNK5boost9function3IbRKSsS2_jEclES2_S2_j(i32 %arg1) local_unnamed_addr {
dec_label_pc_373de:
  %stack_var_-24 = alloca i32, align 4
  %v1_3740e = call i32 @unknown_48952(i32 %arg1)
  %v4_37413 = trunc i32 %v1_3740e to i8
  %v5_37413 = icmp eq i8 %v4_37413, 0
  br i1 %v5_37413, label %dec_label_pc_3742d, label %dec_label_pc_37417

dec_label_pc_37417:                               ; preds = %dec_label_pc_373de
  %v2_37417 = ptrtoint i32* %stack_var_-24 to i32
  %v1_3741d = call i32 @unknown_48986(i32 %v2_37417)
  %v1_37428 = call i32 @unknown_4f429(i32 %v2_37417)
  br label %dec_label_pc_3742d

dec_label_pc_3742d:                               ; preds = %dec_label_pc_37417, %dec_label_pc_373de
  %v1_37433 = call i32 @unknown_6f1f4(i32 %arg1)
  ret i32 %v1_37433
}

define i32 @function_3743a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3743a:
  %ecx.global-to-local = alloca i32, align 4
  %v0_3743a = load i32, i32* @eax, align 8
  %v2_3743a = add i32 %v0_3743a, zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32)
  %v16_3743a = urem i32 %v2_3743a, 256
  %v18_3743a = and i32 %v0_3743a, -256
  %v19_3743a = or i32 %v16_3743a, %v18_3743a
  %v0_3743c = load i32, i32* @ebp, align 4
  %v1_3743f = add i32 %v19_3743a, -1
  %v2_37440 = add i32 %v0_3743a, add (i32 zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32), i32 138)
  %v16_37440 = urem i32 %v2_37440, 256
  %v18_37440 = and i32 %v1_3743f, -256
  %v19_37440 = or i32 %v18_37440, %v16_37440
  store i32 %v19_37440, i32* @eax, align 8
  %v1_37443 = load i32, i32* @ecx, align 4
  %v1_37450 = add i32 %v0_3743c, 4
  %v9_37450 = icmp eq i32 %v1_37450, 0
  store i32 %v1_37450, i32* @ebp, align 4
  %v1_37451 = add i32 %v1_37443, -1
  store i32 %v1_37451, i32* %ecx.global-to-local, align 4
  %v2_37451 = icmp eq i32 %v1_37451, 0
  %v4_37451 = or i1 %v9_37450, %v2_37451
  br i1 %v4_37451, label %dec_label_pc_37453, label %bb

bb:                                               ; preds = %dec_label_pc_3743a
  %v7_37451 = call i32 @function_373dc(i32 ptrtoint (i32* @1 to i32))
  %v0_37456.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_3745b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_37453

dec_label_pc_37453:                               ; preds = %dec_label_pc_3743a, %bb
  %v0_3745b = phi i32 [ %v1_37450, %dec_label_pc_3743a ], [ %v0_3745b.pre, %bb ]
  %v1_37465 = phi i32 [ %v1_37451, %dec_label_pc_3743a ], [ %v0_37456.pre, %bb ]
  %v9_37454 = phi i32 [ %v19_37440, %dec_label_pc_3743a ], [ %v7_37451, %bb ]
  %v11_37454 = and i32 %v9_37454, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  store i32 %v11_37454, i32* @eax, align 8
  %v1_3745b = add i32 %v0_3745b, -12
  %v2_3745b = inttoptr i32 %v1_3745b to i32*
  %v3_3745b = load i32, i32* %v2_3745b, align 4
  %v3_3745e = icmp eq i32 %v3_3745b, 30
  br i1 %v3_3745e, label %bb5, label %dec_label_pc_37467

bb5:                                              ; preds = %dec_label_pc_37453
  %v2_37465 = call i32 @function_37485(i32 %v1_37465)
  store i32 %v2_37465, i32* @eax, align 8
  br label %dec_label_pc_37467

dec_label_pc_37467:                               ; preds = %bb5, %dec_label_pc_37453
  %v0_37467 = call i32 @function_37480()
  ret i32 %v0_37467

; uselistorder directives
  uselistorder i32 %v1_37451, { 0, 2, 1 }
  uselistorder i32 %v0_3743a, { 0, 2, 1 }
  uselistorder i8 ptrtoint (i8* @global_var_8b.2420 to i8), { 7, 5, 6, 4, 3, 1, 2, 0 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_8b.2420 to i8) to i32), { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 3, 12, 2 }
  uselistorder label %dec_label_pc_37453, { 1, 0 }
}

define i32 @function_3746a() local_unnamed_addr {
dec_label_pc_3746a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3746a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3746a
}

define i32 @function_37472(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37472:
  %v2_37474 = load i32, i32* @eax, align 8
  %v4_37474 = mul i32 %v2_37474, 2
  %v21_37474 = inttoptr i32 %v2_37474 to i32*
  store i32 %v4_37474, i32* %v21_37474, align 4
  %v0_37476 = load i32, i32* @ebx, align 4
  ret i32 %v0_37476

; uselistorder directives
  uselistorder i32 %v2_37474, { 1, 0 }
}

define i32 @function_37480() local_unnamed_addr {
dec_label_pc_37480:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37485(i32 %arg1) local_unnamed_addr {
dec_label_pc_37485:
  store i32 %arg1, i32* @ebx, align 4
  %v0_3748a = load i32, i32* @eax, align 8
  ret i32 %v0_3748a
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E17convert_constructIKS2_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_3748c:
  ret i32 %arg1
}

define i32 @function_374bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_374bc:
  %v0_374bc = load i32, i32* @eax, align 8
  %v1_374bf = call i32 @unknown_54d74(i32 %v0_374bc)
  %v0_374c4 = load i32, i32* @ebp, align 4
  %v1_374c4 = add i32 %v0_374c4, -32
  %v2_374c4 = inttoptr i32 %v1_374c4 to i32*
  %v3_374c4 = load i32, i32* %v2_374c4, align 4
  store i32 %v3_374c4, i32* @edx, align 8
  %v2_374ce = call i32 @unknown_6f2d4(i32 %v1_374bf, i32 %v3_374c4)
  %v0_374d7 = load i32, i32* @ebp, align 4
  %v1_374d7 = add i32 %v0_374d7, -28
  %v2_374d7 = inttoptr i32 %v1_374d7 to i32*
  %v3_374d7 = load i32, i32* %v2_374d7, align 4
  %v2_374dd = call i32 @unknown_54e18(i32 %v3_374d7, i32 %v2_374ce)
  %v0_374e2 = load i32, i32* @ebp, align 4
  %v1_374e2 = add i32 %v0_374e2, -12
  %v2_374e2 = inttoptr i32 %v1_374e2 to i32*
  %v3_374e2 = load i32, i32* %v2_374e2, align 4
  %v2_374e5 = xor i32 %v3_374e2, 30
  %v3_374e5 = icmp eq i32 %v2_374e5, 0
  store i32 %v2_374e5, i32* @eax, align 8
  br i1 %v3_374e5, label %bb, label %dec_label_pc_374ee

bb:                                               ; preds = %dec_label_pc_374bc
  %v1_374ec = call i32 @function_374f3()
  br label %dec_label_pc_374ee

dec_label_pc_374ee:                               ; preds = %bb, %dec_label_pc_374bc
  %v2_374ec = phi i32 [ %v1_374ec, %bb ], [ %v2_374e5, %dec_label_pc_374bc ]
  ret i32 %v2_374ec
}

define i32 @function_374f3() local_unnamed_addr {
dec_label_pc_374f3:
  %v0_374f4 = load i32, i32* @eax, align 8
  ret i32 %v0_374f4
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E17convert_constructIKS5_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_374f6:
  %v1_37523 = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_37529 = call i32 @unknown_54dde(i32 %v1_37523)
  ret i32 %v1_37529
}

define i32 @function_37530(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37530:
  %v0_37530 = load i32, i32* @ecx, align 4
  %v1_37530 = add i32 %v0_37530, -1
  store i32 %v1_37530, i32* @ecx, align 4
  %v0_37533 = load i32, i32* @eax, align 8
  %v11_37533 = and i32 %v0_37533, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  %v1_37538 = call i32 @unknown_6f399(i32 %v11_37533)
  %v0_37541 = load i32, i32* @ebp, align 4
  %v1_37541 = add i32 %v0_37541, -28
  %v2_37541 = inttoptr i32 %v1_37541 to i32*
  %v3_37541 = load i32, i32* %v2_37541, align 4
  %v2_37547 = call i32 @unknown_54e82(i32 %v3_37541, i32 %v1_37538)
  %v0_3754c = load i32, i32* @ebp, align 4
  %v1_3754c = add i32 %v0_3754c, -12
  %v2_3754c = inttoptr i32 %v1_3754c to i32*
  %v3_3754c = load i32, i32* %v2_3754c, align 4
  %v2_3754f = xor i32 %v3_3754c, 30
  %v3_3754f = icmp eq i32 %v2_3754f, 0
  store i32 %v2_3754f, i32* @eax, align 8
  br i1 %v3_3754f, label %bb, label %dec_label_pc_37558

bb:                                               ; preds = %dec_label_pc_37530
  %v1_37556 = call i32 @function_3755d()
  br label %dec_label_pc_37558

dec_label_pc_37558:                               ; preds = %bb, %dec_label_pc_37530
  %v3_37556 = phi i32 [ %v1_37556, %bb ], [ %v2_3754f, %dec_label_pc_37530 ]
  ret i32 %v3_37556
}

define i32 @function_3755d() local_unnamed_addr {
dec_label_pc_3755d:
  %v0_3755e = load i32, i32* @eax, align 8
  ret i32 %v0_3755e
}

define i32 @_ZNK5boost15optional_detail15aligned_storageIiE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37560:
  store i32 %arg1, i32* @eax, align 8
  %v2_37584 = call i32 @function_3758b(i32 %arg1)
  ret i32 %v2_37584
}

define i32 @function_3758b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3758b:
  %v0_3758c = load i32, i32* @eax, align 8
  ret i32 %v0_3758c
}

define i32 @_ZN5boost15optional_detail15aligned_storageIiE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3758e:
  ret i32 0
}

define i32 @function_375a6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_375a6:
  %v0_375a6 = load i32, i32* @ebp, align 4
  %v1_375a6 = add i32 %v0_375a6, 1
  store i32 %v1_375a6, i32* @ebp, align 4
  %v0_375ab = load i32, i32* @edx, align 8
  %v3_375ab = icmp eq i32 %v0_375ab, 30
  br i1 %v3_375ab, label %bb, label %dec_label_pc_375a6.dec_label_pc_375b4_crit_edge

dec_label_pc_375a6.dec_label_pc_375b4_crit_edge:  ; preds = %dec_label_pc_375a6
  %v2_375b2.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_375b4

bb:                                               ; preds = %dec_label_pc_375a6
  %v1_375b2 = call i32 @function_375b9()
  br label %dec_label_pc_375b4

dec_label_pc_375b4:                               ; preds = %dec_label_pc_375a6.dec_label_pc_375b4_crit_edge, %bb
  %v2_375b2 = phi i32 [ %v2_375b2.pre, %dec_label_pc_375a6.dec_label_pc_375b4_crit_edge ], [ %v1_375b2, %bb ]
  ret i32 %v2_375b2

; uselistorder directives
  uselistorder label %dec_label_pc_375b4, { 1, 0 }
}

define i32 @function_375b9() local_unnamed_addr {
dec_label_pc_375b9:
  %v0_375ba = load i32, i32* @eax, align 8
  ret i32 %v0_375ba
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE12get_ptr_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_375bc:
  %ebx.global-to-local = alloca i32, align 4
  %v1_375da = call i32 @unknown_6f4e0(i32 %arg1)
  %v0_375df = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_375df, 16777216
  %v3_375ed = sdiv i32 %sext, 16777216
  %v4_375ed = call i32 @unknown_6f51e(i32 %arg1, i32 %v1_375da, i32 %v3_375ed)
  store i32 %v4_375ed, i32* @eax, align 8
  %v1_375fc = call i32 @function_37603()
  ret i32 %v1_375fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37603() local_unnamed_addr {
dec_label_pc_37603:
  %v0_37608 = load i32, i32* @eax, align 8
  ret i32 %v0_37608
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3760a:
  %v3_37637 = call i32 @unknown_6f5a6(i32 %arg1, i32 1, i32 0)
  store i32 %v3_37637, i32* @eax, align 8
  %v1_37646 = call i32 @function_3764d()
  ret i32 %v1_37646
}

define i32 @function_3764d() local_unnamed_addr {
dec_label_pc_3764d:
  %v0_3764e = load i32, i32* @eax, align 8
  ret i32 %v0_3764e
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37650:
  %v2_3767a = call i32 @unknown_66c40(i32 %arg1, i32 %arg2)
  %v1_37685 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_37685 = inttoptr i32 %v1_37685 to i32*
  %v3_37685 = load i32, i32* %v2_37685, align 4
  %v2_37688 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_37688 = inttoptr i32 %v2_37688 to i32*
  store i32 %v3_37685, i32* %v3_37688, align 4
  store i32 0, i32* @eax, align 8
  %v1_37695 = call i32 @function_3769c()
  ret i32 %v1_37695

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3769c() local_unnamed_addr {
dec_label_pc_3769c:
  %v0_3769d = load i32, i32* @eax, align 8
  ret i32 %v0_3769d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEE9constructEPSO_RKSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3769e:
  %v3_376d2 = call i32 @unknown_3cb8e(i32 ptrtoint (i8** @global_var_10.2429 to i32), i32 %arg2)
  %v1_376d9 = icmp eq i32 %v3_376d2, 0
  br i1 %v1_376d9, label %bb, label %dec_label_pc_376dd

bb:                                               ; preds = %dec_label_pc_3769e
  %v1_376db = call i32 @function_37706()
  br label %dec_label_pc_376dd

dec_label_pc_376dd:                               ; preds = %bb, %dec_label_pc_3769e
  %v3_376e7 = call i32 @unknown_6ecee(i32 %v3_376d2, i32 %arg3)
  %v0_376ec = call i32 @function_37706()
  ret i32 %v0_376ec

; uselistorder directives
  uselistorder i32 ()* @function_37706, { 1, 0 }
}

define i32 @function_37706() local_unnamed_addr {
dec_label_pc_37706:
  %v0_37706 = load i32, i32* @ebp, align 4
  %v1_37706 = add i32 %v0_37706, -28
  %v2_37706 = inttoptr i32 %v1_37706 to i32*
  %v3_37706 = load i32, i32* %v2_37706, align 4
  %v2_37709 = xor i32 %v3_37706, 30
  %v3_37709 = icmp eq i32 %v2_37709, 0
  store i32 %v2_37709, i32* @eax, align 8
  br i1 %v3_37709, label %bb, label %dec_label_pc_37712

bb:                                               ; preds = %dec_label_pc_37706
  %v1_37710 = call i32 @function_37717()
  br label %dec_label_pc_37712

dec_label_pc_37712:                               ; preds = %bb, %dec_label_pc_37706
  %v2_37710 = phi i32 [ %v1_37710, %bb ], [ %v2_37709, %dec_label_pc_37706 ]
  ret i32 %v2_37710
}

define i32 @function_37717() local_unnamed_addr {
dec_label_pc_37717:
  %v0_3771e = load i32, i32* @eax, align 8
  ret i32 %v0_3771e
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISM_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37720:
  %v1_37743 = call i32 @unknown_6f71a(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_37752 = call i32 @function_37759()
  ret i32 %v1_37752
}

define i32 @function_37759() local_unnamed_addr {
dec_label_pc_37759:
  %v0_3775a = load i32, i32* @eax, align 8
  ret i32 %v0_3775a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3775c:
  store i32 0, i32* @eax, align 8
  %v2_3777d = call i32 @function_37784(i32 %arg1)
  ret i32 %v2_3777d
}

define i32 @function_37784(i32 %arg1) local_unnamed_addr {
dec_label_pc_37784:
  %v0_37785 = load i32, i32* @eax, align 8
  ret i32 %v0_37785
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE10deallocateEPSQ_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37786:
  ret i32 %arg2
}

define i32 @function_377c4() local_unnamed_addr {
dec_label_pc_377c4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_377c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_377c4 = add i32 %v0_377c4, -1
  store i32 %v1_377c4, i32* %ecx.global-to-local, align 4
  %v0_377c6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_377c6
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_377c8:
  store i32 0, i32* @eax, align 8
  %v3_377ef = call i32 @function_377f6(i32 %arg2, i32 %arg1)
  ret i32 %v3_377ef
}

define i32 @function_377f6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_377f6:
  %v0_377f7 = load i32, i32* @eax, align 8
  ret i32 %v0_377f7
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE14_M_create_nodeERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_377f8:
  %stack_var_-17 = alloca i32, align 4
  %v1_3781c = call i32 @unknown_6f81c(i32 %arg1)
  %v1_37827 = add i32 %v1_3781c, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_3782d = call i32 @unknown_69e8d(i32 %v1_37827)
  %v2_37837 = ptrtoint i32* %stack_var_-17 to i32
  %v2_37841 = call i32 @unknown_69e08(i32 %v2_37837, i32 %arg1)
  %v3_3785a = call i32 @unknown_6f8b4(i32 %v2_37837, i32 %v1_3782d, i32 %arg2)
  %v1_37865 = call i32 @unknown_69e58(i32 %v2_37837)
  store i32 %v1_3781c, i32* @eax, align 8
  %v1_37877 = call i32 @function_378bf()
  store i32 %v1_37877, i32* @eax, align 8
  %v0_37879 = call i32 @function_378ba()
  ret i32 %v0_37879

; uselistorder directives
  uselistorder i32 (i32)* @unknown_69e58, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3787c() local_unnamed_addr {
dec_label_pc_3787c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3787c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3787c
}

define i32 @function_378aa() local_unnamed_addr {
dec_label_pc_378aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_378aa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_378aa
}

define i32 @function_378ba() local_unnamed_addr {
dec_label_pc_378ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_378bf() local_unnamed_addr {
dec_label_pc_378bf:
  %v0_378c3 = load i32, i32* @eax, align 8
  ret i32 %v0_378c3
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEEC1ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_378c4:
  store i32 0, i32* @eax, align 8
  %v3_378eb = call i32 @function_378f2(i32 %arg2, i32 %arg1)
  ret i32 %v3_378eb
}

define i32 @function_378f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_378f0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_378f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_378f2:
  %v0_378f3 = load i32, i32* @eax, align 8
  ret i32 %v0_378f3
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_378f4:
  %tmp106 = icmp ult i32 %arg2, 11
  br i1 %tmp106, label %dec_label_pc_3793b, label %dec_label_pc_37917

dec_label_pc_37917:                               ; preds = %dec_label_pc_378f4
  %v1_3791d = call i32 @unknown_646c8(i32 %arg1)
  %v3_37934 = call i32 @unknown_5a9ec(i32 %v1_3791d, i32 %arg2, i32 0)
  br label %dec_label_pc_37946

dec_label_pc_3793b:                               ; preds = %dec_label_pc_378f4
  %v1_37941 = call i32 @unknown_60c08(i32 %arg1)
  br label %dec_label_pc_37946

dec_label_pc_37946:                               ; preds = %dec_label_pc_3793b, %dec_label_pc_37917
  %storemerge = phi i32 [ %v1_37941, %dec_label_pc_3793b ], [ %v3_37934, %dec_label_pc_37917 ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_37950 = call i32 @function_37957()
  ret i32 %v1_37950

; uselistorder directives
  uselistorder i32 11, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_37957() local_unnamed_addr {
dec_label_pc_37957:
  %v0_37958 = load i32, i32* @eax, align 8
  ret i32 %v0_37958
}

define i32 @_ZN5boost11multi_index6detail14make_obj_guardINS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jEENS1_21obj_scope_guard_impl2IT_T0_T1_T2_EERSN_SO_SP_SQ_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_37959:
  ret i32 %arg1
}

define i32 @function_379b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_379b4:
  %v0_379b4 = load i32, i32* @eax, align 8
  %v1_379b7 = call i32 @unknown_6fa71(i32 %v0_379b4)
  %v0_379bc = load i32, i32* @ebp, align 4
  %v1_379bc = add i32 %v0_379bc, -28
  %v2_379bc = inttoptr i32 %v1_379bc to i32*
  %v3_379bc = load i32, i32* %v2_379bc, align 4
  store i32 %v3_379bc, i32* @eax, align 8
  %v1_379bf = add i32 %v0_379bc, -12
  %v2_379bf = inttoptr i32 %v1_379bf to i32*
  %v3_379bf = load i32, i32* %v2_379bf, align 4
  %v3_379c2 = icmp eq i32 %v3_379bf, 30
  br i1 %v3_379c2, label %bb, label %dec_label_pc_379cb

bb:                                               ; preds = %dec_label_pc_379b4
  %v1_379c9 = call i32 @function_379d0()
  br label %dec_label_pc_379cb

dec_label_pc_379cb:                               ; preds = %bb, %dec_label_pc_379b4
  %v2_379c9 = phi i32 [ %v1_379c9, %bb ], [ %v3_379bc, %dec_label_pc_379b4 ]
  ret i32 %v2_379c9
}

define i32 @function_379d0() local_unnamed_addr {
dec_label_pc_379d0:
  %v0_379d1 = load i32, i32* @eax, align 8
  ret i32 %v0_379d1
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_379d4:
  %v1_379f2 = call i32 @unknown_6fb69(i32 %arg1)
  %v1_379fd = call i32 @unknown_4a452(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_37a0c = call i32 @function_37a2c()
  store i32 %v1_37a0c, i32* @eax, align 8
  %v0_37a0e = call i32 @function_37a27()
  ret i32 %v0_37a0e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37a11() local_unnamed_addr {
dec_label_pc_37a11:
  %eax.global-to-local = alloca i32, align 4
  %v0_37a11 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37a11
}

define i32 @function_37a27() local_unnamed_addr {
dec_label_pc_37a27:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37a2c() local_unnamed_addr {
dec_label_pc_37a2c:
  %v0_37a31 = load i32, i32* @eax, align 8
  ret i32 %v0_37a31
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37a32:
  ret i32 30
}

define i32 @function_37a44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37a44:
  %v0_37a44 = load i32, i32* @eax, align 8
  %v1_37a44 = load i32, i32* @ebp, align 4
  %v2_37a44 = add i32 %v1_37a44, -12
  %v3_37a44 = inttoptr i32 %v2_37a44 to i32*
  store i32 %v0_37a44, i32* %v3_37a44, align 4
  %v0_37a49 = load i32, i32* @ebp, align 4
  %v1_37a49 = add i32 %v0_37a49, -28
  %v2_37a49 = inttoptr i32 %v1_37a49 to i32*
  %v3_37a49 = load i32, i32* %v2_37a49, align 4
  %v1_37a4c = add i32 %v3_37a49, ptrtoint (i32* @global_var_7c.2533 to i32)
  %v2_37a4c = inttoptr i32 %v1_37a4c to i32*
  %v3_37a4c = load i32, i32* %v2_37a4c, align 4
  ret i32 %v3_37a4c
}

define i32 @function_37a58(i32 %arg1) local_unnamed_addr {
dec_label_pc_37a58:
  %v0_37a58 = load i32, i32* @ebp, align 4
  %v1_37a58 = load i32, i32* @eax, align 8
  %v3_37a58 = add i32 %v0_37a58, -24
  %v4_37a58 = add i32 %v3_37a58, %v1_37a58
  %v5_37a58 = inttoptr i32 %v4_37a58 to i8*
  %v6_37a58 = load i8, i8* %v5_37a58, align 1
  %v7_37a58 = load i32, i32* @edx, align 8
  %v8_37a58 = lshr i32 %v7_37a58, ptrtoint (i32* @global_var_8.2379 to i32)
  %v9_37a58 = trunc i32 %v8_37a58 to i8
  %v10_37a58 = add i8 %v9_37a58, %v6_37a58
  store i8 %v10_37a58, i8* %v5_37a58, align 1
  %v31_37a58 = load i32, i32* @eax, align 8
  ret i32 %v31_37a58

; uselistorder directives
  uselistorder i32* @edx, { 25, 26, 27, 28, 29, 30, 8, 9, 32, 13, 14, 35, 34, 36, 20, 37, 40, 110, 45, 46, 0, 47, 79, 80, 50, 51, 15, 95, 33, 96, 97, 38, 2, 3, 93, 56, 57, 58, 89, 90, 59, 61, 104, 62, 63, 64, 65, 53, 16, 54, 99, 10, 11, 71, 52, 66, 67, 12, 41, 43, 72, 44, 73, 68, 70, 74, 75, 78, 76, 19, 42, 17, 18, 21, 22, 23, 24, 31, 39, 111, 48, 49, 81, 82, 83, 84, 85, 91, 55, 94, 100, 60, 105, 69, 101, 77, 4, 5, 6, 86, 87, 106, 107, 7, 88, 1, 92, 98, 102, 103, 108, 109 }
  uselistorder i32 -24, { 56, 0, 43, 112, 113, 114, 115, 58, 59, 60, 62, 63, 61, 64, 14, 49, 20, 21, 134, 135, 136, 137, 68, 69, 70, 1, 119, 118, 120, 121, 71, 72, 73, 74, 75, 76, 77, 2, 3, 66, 67, 15, 78, 79, 65, 80, 122, 123, 124, 57, 85, 86, 87, 90, 32, 91, 92, 4, 128, 5, 88, 89, 6, 7, 22, 99, 100, 101, 93, 94, 107, 132, 95, 96, 23, 97, 98, 44, 8, 45, 46, 133, 82, 83, 81, 84, 102, 104, 105, 103, 106, 47, 48, 16, 116, 117, 19, 24, 25, 26, 108, 109, 110, 111, 50, 51, 52, 27, 28, 29, 17, 30, 9, 18, 31, 53, 54, 55, 33, 10, 34, 35, 36, 37, 11, 12, 38, 39, 125, 126, 127, 40, 41, 42, 129, 130, 131, 13 }
}

define i32 @function_37a5f() local_unnamed_addr {
dec_label_pc_37a5f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37a5f = load i32, i32* %ecx.global-to-local, align 4
  %v1_37a5f = add i32 %v0_37a5f, -1
  store i32 %v1_37a5f, i32* %ecx.global-to-local, align 4
  %v0_37a61 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37a61
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37a62:
  %v1_37a82 = add i32 %arg1, ptrtoint (i32* @global_var_80.2540 to i32)
  %v2_37a82 = inttoptr i32 %v1_37a82 to i32*
  %v3_37a82 = load i32, i32* %v2_37a82, align 4
  %v2_37a8c = mul i32 %v3_37a82, 3
  ret i32 %v2_37a8c

; uselistorder directives
  uselistorder i32 3, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 0, 10 }
}

define i32 @function_37a8e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37a8e:
  %v0_37a8e = load i32, i32* @eax, align 8
  %v2_37a8e = mul i32 %v0_37a8e, 4
  %v1_37a91 = load i32, i32* @ecx, align 4
  %v2_37a91 = add i32 %v1_37a91, %v2_37a8e
  store i32 %v2_37a91, i32* @eax, align 8
  %v0_37a93 = load i32, i32* @ebp, align 4
  %v1_37a93 = add i32 %v0_37a93, -12
  %v2_37a93 = inttoptr i32 %v1_37a93 to i32*
  %v3_37a93 = load i32, i32* %v2_37a93, align 4
  %v3_37a96 = icmp eq i32 %v3_37a93, 30
  br i1 %v3_37a96, label %bb, label %dec_label_pc_37a9f

bb:                                               ; preds = %dec_label_pc_37a8e
  %v1_37a9d = call i32 @function_37aa4()
  br label %dec_label_pc_37a9f

dec_label_pc_37a9f:                               ; preds = %bb, %dec_label_pc_37a8e
  %v2_37a9d = phi i32 [ %v1_37a9d, %bb ], [ %v2_37a91, %dec_label_pc_37a8e ]
  ret i32 %v2_37a9d

; uselistorder directives
  uselistorder i32 4, { 7, 36, 8, 37, 52, 0, 9, 53, 10, 11, 12, 13, 57, 58, 38, 59, 60, 61, 64, 39, 65, 66, 67, 62, 63, 14, 68, 69, 54, 1, 2, 3, 4, 15, 16, 17, 19, 18, 20, 21, 22, 40, 5, 23, 55, 73, 74, 56, 6, 24, 41, 42, 43, 44, 45, 46, 25, 47, 48, 49, 50, 51, 26, 27, 28, 70, 29, 30, 71, 72, 31, 32, 33, 34, 35 }
}

define i32 @function_37aa4() local_unnamed_addr {
dec_label_pc_37aa4:
  %v0_37aa5 = load i32, i32* @eax, align 8
  ret i32 %v0_37aa5
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9copy_implIPSA_EEvT_SI_SH_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37aa6:
  %edx.global-to-local = alloca i32, align 4
  %v0_37ac9 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_37ac9, 16777216
  %v7_37ae1 = sdiv i32 %sext, 16777216
  %v8_37ae1 = call i32 @unknown_6fc7d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_37ae1, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_37af0 = call i32 @function_37af7()
  ret i32 %v1_37af0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37af7() local_unnamed_addr {
dec_label_pc_37af7:
  %v0_37af8 = load i32, i32* @eax, align 8
  ret i32 %v0_37af8
}

define i32 @_ZNK5boost9function1ISsPKcE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_37afa:
  %v2_37b14 = load i32, i32* %arg1, align 4
  ret i32 %v2_37b14
}

define i32 @function_37b16(i32 %arg1) local_unnamed_addr {
dec_label_pc_37b16:
  %v0_37b16 = load i32, i32* @eax, align 8
  %v1_37b16 = and i32 %v0_37b16, -2
  store i32 %v1_37b16, i32* @eax, align 8
  %v0_37b19 = load i32, i32* @ebp, align 4
  %v1_37b19 = add i32 %v0_37b19, -12
  %v2_37b19 = inttoptr i32 %v1_37b19 to i32*
  %v3_37b19 = load i32, i32* %v2_37b19, align 4
  %v3_37b1c = icmp eq i32 %v3_37b19, 30
  br i1 %v3_37b1c, label %bb, label %dec_label_pc_37b25

bb:                                               ; preds = %dec_label_pc_37b16
  %v1_37b23 = call i32 @function_37b2a()
  br label %dec_label_pc_37b25

dec_label_pc_37b25:                               ; preds = %bb, %dec_label_pc_37b16
  %v2_37b23 = phi i32 [ %v1_37b23, %bb ], [ %v1_37b16, %dec_label_pc_37b16 ]
  ret i32 %v2_37b23
}

define i32 @function_37b2a() local_unnamed_addr {
dec_label_pc_37b2a:
  %v0_37b2b = load i32, i32* @eax, align 8
  ret i32 %v0_37b2b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37b2c:
  ret i32 %arg1
}

define i32 @function_37b54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37b54:
  %v2_37b54 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_37b54 = load i32, i32* @eax, align 8
  %v4_37b54 = trunc i32 %v3_37b54 to i8
  %v5_37b54 = add i8 %v4_37b54, %v2_37b54
  %v21_37b54 = inttoptr i32 %v3_37b54 to i8*
  store i8 %v5_37b54, i8* %v21_37b54, align 1
  %v0_37b56 = load i32, i32* @eax, align 8
  %v1_37b59 = call i32 @unknown_6fd60(i32 %v0_37b56)
  store i32 %v1_37b59, i32* @eax, align 8
  %v0_37b5e = load i32, i32* @ebp, align 4
  %v1_37b5e = add i32 %v0_37b5e, -12
  %v2_37b5e = inttoptr i32 %v1_37b5e to i32*
  %v3_37b5e = load i32, i32* %v2_37b5e, align 4
  %v3_37b61 = icmp eq i32 %v3_37b5e, 30
  br i1 %v3_37b61, label %bb, label %dec_label_pc_37b6a

bb:                                               ; preds = %dec_label_pc_37b54
  %v1_37b68 = call i32 @function_37b6f()
  br label %dec_label_pc_37b6a

dec_label_pc_37b6a:                               ; preds = %bb, %dec_label_pc_37b54
  %v2_37b68 = phi i32 [ %v1_37b68, %bb ], [ %v1_37b59, %dec_label_pc_37b54 ]
  ret i32 %v2_37b68
}

define i32 @function_37b6f() local_unnamed_addr {
dec_label_pc_37b6f:
  %v0_37b70 = load i32, i32* @eax, align 8
  ret i32 %v0_37b70
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37b72:
  %v2_37b9c = call i32 @unknown_67162(i32 %arg1, i32 %arg2)
  %v1_37ba7 = add i32 %arg2, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_37ba7 = inttoptr i32 %v1_37ba7 to i32*
  %v3_37ba7 = load i32, i32* %v2_37ba7, align 4
  %v2_37baa = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_37baa = inttoptr i32 %v2_37baa to i32*
  store i32 %v3_37ba7, i32* %v3_37baa, align 4
  store i32 0, i32* @eax, align 8
  %v1_37bb7 = call i32 @function_37bbe()
  ret i32 %v1_37bb7

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_37bbe() local_unnamed_addr {
dec_label_pc_37bbe:
  %v0_37bbf = load i32, i32* @eax, align 8
  ret i32 %v0_37bbf
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEE9constructEPSO_RKSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37bc0:
  %v3_37bf4 = call i32 @unknown_3d0b0(i32 ptrtoint (i8** @global_var_10.2429 to i32), i32 %arg2)
  %v1_37bfb = icmp eq i32 %v3_37bf4, 0
  br i1 %v1_37bfb, label %bb, label %dec_label_pc_37bff

bb:                                               ; preds = %dec_label_pc_37bc0
  %v1_37bfd = call i32 @function_37c28()
  br label %dec_label_pc_37bff

dec_label_pc_37bff:                               ; preds = %bb, %dec_label_pc_37bc0
  %v3_37c09 = call i32 @unknown_6f732(i32 %v3_37bf4, i32 %arg3)
  %v0_37c0e = call i32 @function_37c28()
  ret i32 %v0_37c0e

; uselistorder directives
  uselistorder i32 ()* @function_37c28, { 1, 0 }
}

define i32 @function_37c28() local_unnamed_addr {
dec_label_pc_37c28:
  %v0_37c28 = load i32, i32* @ebp, align 4
  %v1_37c28 = add i32 %v0_37c28, -28
  %v2_37c28 = inttoptr i32 %v1_37c28 to i32*
  %v3_37c28 = load i32, i32* %v2_37c28, align 4
  %v2_37c2b = xor i32 %v3_37c28, 30
  %v3_37c2b = icmp eq i32 %v2_37c2b, 0
  store i32 %v2_37c2b, i32* @eax, align 8
  br i1 %v3_37c2b, label %bb, label %dec_label_pc_37c34

bb:                                               ; preds = %dec_label_pc_37c28
  %v1_37c32 = call i32 @function_37c39()
  br label %dec_label_pc_37c34

dec_label_pc_37c34:                               ; preds = %bb, %dec_label_pc_37c28
  %v2_37c32 = phi i32 [ %v1_37c32, %bb ], [ %v2_37c2b, %dec_label_pc_37c28 ]
  ret i32 %v2_37c32
}

define i32 @function_37c39() local_unnamed_addr {
dec_label_pc_37c39:
  %v0_37c40 = load i32, i32* @eax, align 8
  ret i32 %v0_37c40
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISM_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37c42:
  %v1_37c65 = call i32 @unknown_6fed4(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_37c74 = call i32 @function_37c7b()
  ret i32 %v1_37c74
}

define i32 @function_37c7b() local_unnamed_addr {
dec_label_pc_37c7b:
  %v0_37c7c = load i32, i32* @eax, align 8
  ret i32 %v0_37c7c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_37c7e:
  store i32 0, i32* @eax, align 8
  %v2_37c9f = call i32 @function_37ca6(i32 %arg1)
  ret i32 %v2_37c9f
}

define i32 @function_37ca6(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ca6:
  %v0_37ca7 = load i32, i32* @eax, align 8
  ret i32 %v0_37ca7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE10deallocateEPSQ_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37ca8:
  ret i32 %arg2
}

define i32 @function_37cce(i32 %arg1) local_unnamed_addr {
dec_label_pc_37cce:
  %v3_37cce = load i32, i32* @eax, align 8
  ret i32 %v3_37cce
}

define i32 @function_37ce6() local_unnamed_addr {
dec_label_pc_37ce6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37ce6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37ce6 = add i32 %v0_37ce6, -1
  store i32 %v1_37ce6, i32* %ecx.global-to-local, align 4
  %v0_37ce8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37ce8
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37cea:
  store i32 0, i32* @eax, align 8
  %v3_37d11 = call i32 @function_37d18(i32 %arg2, i32 %arg1)
  ret i32 %v3_37d11
}

define i32 @function_37d18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37d18:
  %v0_37d19 = load i32, i32* @eax, align 8
  ret i32 %v0_37d19
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE14_M_create_nodeERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37d1a:
  ret i32 0
}

define i32 @function_37d3a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37d3a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_37d3e = call i32 @unknown_6ffd6()
  %v1_37d43 = load i32, i32* @ebp, align 4
  %v2_37d43 = add i32 %v1_37d43, -20
  %v3_37d43 = inttoptr i32 %v2_37d43 to i32*
  store i32 %v0_37d3e, i32* %v3_37d43, align 4
  %v0_37d46 = load i32, i32* @ebp, align 4
  %v1_37d46 = add i32 %v0_37d46, -20
  %v2_37d46 = inttoptr i32 %v1_37d46 to i32*
  %v3_37d46 = load i32, i32* %v2_37d46, align 4
  %v1_37d49 = add i32 %v3_37d46, ptrtoint (i32* @global_var_8.2379 to i32)
  %v1_37d4f = call i32 @unknown_6b90d(i32 %v1_37d49)
  store i32 %v1_37d4f, i32* %ebx.global-to-local, align 4
  %v0_37d56 = load i32, i32* @ebp, align 4
  %v1_37d56 = add i32 %v0_37d56, -28
  %v2_37d56 = inttoptr i32 %v1_37d56 to i32*
  %v3_37d56 = load i32, i32* %v2_37d56, align 4
  %v1_37d59 = add i32 %v0_37d56, -13
  %v2_37d63 = call i32 @unknown_6b888(i32 %v1_37d59, i32 %v3_37d56)
  %v0_37d6b = load i32, i32* @ebp, align 4
  %v1_37d6b = add i32 %v0_37d6b, -32
  %v2_37d6b = inttoptr i32 %v1_37d6b to i32*
  %v3_37d6b = load i32, i32* %v2_37d6b, align 4
  %v0_37d72 = load i32, i32* %ebx.global-to-local, align 4
  %v1_37d76 = add i32 %v0_37d6b, -13
  %v3_37d7c = call i32 @unknown_7006e(i32 %v1_37d76, i32 %v0_37d72, i32 %v3_37d6b)
  %v0_37d81 = load i32, i32* @ebp, align 4
  %v1_37d81 = add i32 %v0_37d81, -13
  %v1_37d87 = call i32 @unknown_6b8d8(i32 %v1_37d81)
  %v0_37d8c = load i32, i32* @ebp, align 4
  %v1_37d8c = add i32 %v0_37d8c, -20
  %v2_37d8c = inttoptr i32 %v1_37d8c to i32*
  %v3_37d8c = load i32, i32* %v2_37d8c, align 4
  store i32 %v3_37d8c, i32* @eax, align 8
  %v1_37d8f = add i32 %v0_37d8c, -12
  %v2_37d8f = inttoptr i32 %v1_37d8f to i32*
  %v3_37d8f = load i32, i32* %v2_37d8f, align 4
  %v3_37d92 = icmp eq i32 %v3_37d8f, 30
  br i1 %v3_37d92, label %bb, label %dec_label_pc_37d9b

bb:                                               ; preds = %dec_label_pc_37d3a
  %v1_37d99 = call i32 @function_37de1()
  store i32 %v1_37d99, i32* @eax, align 8
  br label %dec_label_pc_37d9b

dec_label_pc_37d9b:                               ; preds = %bb, %dec_label_pc_37d3a
  %v0_37d9b = call i32 @function_37ddc()
  ret i32 %v0_37d9b

; uselistorder directives
  uselistorder i32 -13, { 37, 38, 39, 40, 41, 42, 43, 75, 76, 77, 47, 48, 36, 33, 34, 35, 51, 49, 50, 52, 53, 54, 0, 80, 81, 82, 83, 84, 85, 58, 31, 32, 55, 56, 57, 1, 2, 3, 4, 5, 6, 44, 45, 46, 63, 64, 72, 73, 74, 27, 7, 61, 59, 60, 62, 65, 66, 67, 70, 68, 69, 71, 86, 28, 8, 9, 78, 79, 10, 29, 30, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
}

define i32 @function_37d9e() local_unnamed_addr {
dec_label_pc_37d9e:
  %eax.global-to-local = alloca i32, align 4
  %v0_37d9e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37d9e
}

define i32 @function_37dcc() local_unnamed_addr {
dec_label_pc_37dcc:
  %eax.global-to-local = alloca i32, align 4
  %v0_37dcc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37dcc
}

define i32 @function_37ddc() local_unnamed_addr {
dec_label_pc_37ddc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37de1() local_unnamed_addr {
dec_label_pc_37de1:
  %v0_37de5 = load i32, i32* @eax, align 8
  ret i32 %v0_37de5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEEC1ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37de6:
  store i32 0, i32* @eax, align 8
  %v3_37e0d = call i32 @function_37e14(i32 %arg2, i32 %arg1)
  ret i32 %v3_37e0d
}

define i32 @function_37e14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e14:
  %v0_37e15 = load i32, i32* @eax, align 8
  ret i32 %v0_37e15
}

define i32 @_ZNK5boost9function3IbRKSsS2_jE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_37e16:
  %v2_37e30 = load i32, i32* %arg1, align 4
  %v1_37e32 = and i32 %v2_37e30, -2
  ret i32 %v1_37e32

; uselistorder directives
  uselistorder i32 -2, { 3, 4, 1, 2, 0 }
}

define i32 @function_37e40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37e45() local_unnamed_addr {
dec_label_pc_37e45:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37e45 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37e45 = add i32 %v0_37e45, -1
  store i32 %v1_37e45, i32* %ecx.global-to-local, align 4
  %v0_37e47 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37e47
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list2INS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrEEEEEE16initializer_node10initializeEPvRKSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e48:
  %v2_37e73 = call i32 @unknown_3d338(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %arg1)
  %v1_37e78 = icmp eq i32 %v2_37e73, 0
  br i1 %v1_37e78, label %dec_label_pc_37e8b, label %dec_label_pc_37e7c

dec_label_pc_37e7c:                               ; preds = %dec_label_pc_37e48
  %v2_37e86 = call i32 @unknown_4a74e(i32 %v2_37e73, i32 %arg2)
  br label %dec_label_pc_37e8b

dec_label_pc_37e8b:                               ; preds = %dec_label_pc_37e7c, %dec_label_pc_37e48
  store i32 0, i32* @eax, align 8
  %v1_37e9a = call i32 @function_37ea1()
  ret i32 %v1_37e9a
}

define i32 @function_37ea1() local_unnamed_addr {
dec_label_pc_37ea1:
  %v0_37ea2 = load i32, i32* @eax, align 8
  ret i32 %v0_37ea2
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list2INS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrEEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list1ISH_EEEEE16initializer_node10initializeEPvRKSH_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37ea3:
  ret i32 30
}

define i32 @function_37ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ec0:
  %v0_37ec2 = load i32, i32* @ebx, align 4
  %v1_37ec2 = add i32 %v0_37ec2, 1955189877
  %v2_37ec2 = inttoptr i32 %v1_37ec2 to i8*
  %v3_37ec2 = load i8, i8* %v2_37ec2, align 1
  %v4_37ec2 = udiv i8 %v3_37ec2, 16
  %v5_37ec2 = mul i8 %v3_37ec2, 16
  %v6_37ec2 = or i8 %v4_37ec2, %v5_37ec2
  store i8 %v6_37ec2, i8* %v2_37ec2, align 1
  %v0_37ec9 = load i32, i32* @eax, align 8
  %v1_37ec9 = trunc i32 %v0_37ec9 to i8
  %v2_37ecb = add i8 %v1_37ec9, add (i8 ptrtoint (i8* @global_var_24.2401 to i8), i8 -57)
  %v16_37ecb = zext i8 %v2_37ecb to i32
  %v16_37ecd = sext i8 %v2_37ecb to i32
  %v17_37ecd = and i32 %v16_37ecd, -256
  %v18_37ecd = or i32 %v17_37ecd, %v16_37ecb
  %v1_37ecf = inttoptr i32 %v18_37ecd to i8*
  %v2_37ecf = load i8, i8* %v1_37ecf, align 1
  %v5_37ecf = add i8 %v2_37ecf, %v2_37ecb
  store i8 %v5_37ecf, i8* %v1_37ecf, align 1
  %v0_37ed1 = call i32 @unknown_3d393()
  store i32 %v0_37ed1, i32* @ebx, align 4
  %v1_37ed8 = icmp eq i32 %v0_37ed1, 0
  br i1 %v1_37ed8, label %dec_label_pc_37eeb, label %dec_label_pc_37edc

dec_label_pc_37edc:                               ; preds = %dec_label_pc_37ec0
  %v0_37edc = load i32, i32* @ebp, align 4
  %v1_37edc = add i32 %v0_37edc, -48
  %v2_37edc = inttoptr i32 %v1_37edc to i32*
  %v3_37edc = load i32, i32* %v2_37edc, align 4
  %v2_37ee6 = call i32 @unknown_4a4cd(i32 %v0_37ed1, i32 %v3_37edc)
  br label %dec_label_pc_37eeb

dec_label_pc_37eeb:                               ; preds = %dec_label_pc_37edc, %dec_label_pc_37ec0
  store i32 1, i32* @eax, align 8
  %v0_37ef0 = load i32, i32* @ebp, align 4
  %v1_37ef0 = add i32 %v0_37ef0, -28
  %v2_37ef0 = inttoptr i32 %v1_37ef0 to i32*
  %v3_37ef0 = load i32, i32* %v2_37ef0, align 4
  %v3_37ef3 = icmp eq i32 %v3_37ef0, 30
  br i1 %v3_37ef3, label %bb, label %dec_label_pc_37efc

bb:                                               ; preds = %dec_label_pc_37eeb
  %v1_37efa = call i32 @function_37f1b()
  store i32 %v1_37efa, i32* @eax, align 8
  br label %dec_label_pc_37efc

dec_label_pc_37efc:                               ; preds = %bb, %dec_label_pc_37eeb
  %v0_37efc = call i32 @function_37f16()
  ret i32 %v0_37efc

; uselistorder directives
  uselistorder i32 -48, { 77, 42, 43, 45, 46, 47, 48, 49, 50, 51, 18, 59, 60, 61, 62, 63, 64, 52, 53, 54, 55, 56, 57, 58, 36, 37, 72, 73, 74, 38, 4, 5, 6, 7, 8, 9, 80, 10, 11, 12, 13, 14, 15, 16, 44, 17, 65, 66, 79, 67, 68, 69, 70, 71, 75, 76, 78, 39, 40, 41, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 0, 1, 2, 3 }
}

define i32 @function_37f16() local_unnamed_addr {
dec_label_pc_37f16:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37f1b() local_unnamed_addr {
dec_label_pc_37f1b:
  %v0_37f22 = load i32, i32* @eax, align 8
  ret i32 %v0_37f22
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37f24:
  %v1_37f3e = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_37f44 = call i32 @unknown_6f4b2(i32 %v1_37f3e)
  store i32 %v1_37f44, i32* @eax, align 8
  %v2_37f59 = call i32 @function_37f60(i32 %v1_37f44)
  ret i32 %v2_37f59
}

define i32 @function_37f60(i32 %arg1) local_unnamed_addr {
dec_label_pc_37f60:
  %v0_37f61 = load i32, i32* @eax, align 8
  ret i32 %v0_37f61
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE8cast_ptrEPiN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37f62:
  ret i32 %arg2
}

define i32 @function_37f74(i32 %arg1) local_unnamed_addr {
dec_label_pc_37f74:
  %v0_37f74 = load i32, i32* @ebp, align 4
  %v1_37f74 = add i32 %v0_37f74, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_37f74 = inttoptr i32 %v1_37f74 to i8*
  %v3_37f74 = load i8, i8* %v2_37f74, align 1
  %v3_37f78 = add i32 %v0_37f74, -33
  %v4_37f78 = inttoptr i32 %v3_37f78 to i8*
  store i8 %v3_37f74, i8* %v4_37f78, align 1
  %v1_37f81 = load i32, i32* @ebp, align 4
  %v2_37f81 = add i32 %v1_37f81, -12
  %v3_37f81 = inttoptr i32 %v2_37f81 to i32*
  store i32 30, i32* %v3_37f81, align 4
  %v0_37f86 = load i32, i32* @ebp, align 4
  %v1_37f86 = add i32 %v0_37f86, -32
  %v2_37f86 = inttoptr i32 %v1_37f86 to i32*
  %v3_37f86 = load i32, i32* %v2_37f86, align 4
  store i32 %v3_37f86, i32* @eax, align 8
  %v1_37f89 = add i32 %v0_37f86, -12
  %v2_37f89 = inttoptr i32 %v1_37f89 to i32*
  %v3_37f89 = load i32, i32* %v2_37f89, align 4
  %v3_37f8c = icmp eq i32 %v3_37f89, 30
  br i1 %v3_37f8c, label %bb, label %dec_label_pc_37f95

bb:                                               ; preds = %dec_label_pc_37f74
  %v1_37f93 = call i32 @function_37f9a()
  br label %dec_label_pc_37f95

dec_label_pc_37f95:                               ; preds = %bb, %dec_label_pc_37f74
  %v2_37f93 = phi i32 [ %v1_37f93, %bb ], [ %v3_37f86, %dec_label_pc_37f74 ]
  ret i32 %v2_37f93
}

declare i32 @__stack_chk_fail.1392(i32) local_unnamed_addr

define i32 @function_37f9a() local_unnamed_addr {
dec_label_pc_37f9a:
  %v0_37f9b = load i32, i32* @eax, align 8
  ret i32 %v0_37f9b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37f9c:
  %v1_37fc5 = call i32 @unknown_7034c(i32 %arg1)
  %v10_37fca = icmp ult i32 %v1_37fc5, %arg2
  %v1_37fcd = zext i1 %v10_37fca to i32
  %v3_37fcd = and i32 %v1_37fc5, -256
  %v4_37fcd = or i32 %v1_37fcd, %v3_37fcd
  ret i32 %v4_37fcd
}

define i32 @function_37fd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_37fd4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_37fd9() local_unnamed_addr {
dec_label_pc_37fd9:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_37ff7() local_unnamed_addr {
dec_label_pc_37ff7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37ff7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37ff7 = add i32 %v0_37ff7, -1
  store i32 %v1_37ff7, i32* %ecx.global-to-local, align 4
  %v0_37ff9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_37ff9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_37ffa:
  ret i32 %arg1
}

define i32 @function_38004(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38004:
  %v0_38004 = load i32, i32* @ebp, align 4
  %v1_38004 = add i32 %v0_38004, 1
  store i32 %v1_38004, i32* @ebp, align 4
  %v2_3800c = add i32 %v0_38004, -11
  %v3_3800c = inttoptr i32 %v2_3800c to i32*
  store i32 30, i32* %v3_3800c, align 4
  %v0_38011 = load i32, i32* @ebp, align 4
  %v1_38011 = add i32 %v0_38011, -12
  %v2_38011 = inttoptr i32 %v1_38011 to i32*
  %v3_38011 = load i32, i32* %v2_38011, align 4
  %v2_38014 = xor i32 %v3_38011, 30
  %v3_38014 = icmp eq i32 %v2_38014, 0
  store i32 %v2_38014, i32* @eax, align 8
  br i1 %v3_38014, label %bb, label %dec_label_pc_3801d

bb:                                               ; preds = %dec_label_pc_38004
  %v1_3801b = call i32 @function_38022()
  br label %dec_label_pc_3801d

dec_label_pc_3801d:                               ; preds = %bb, %dec_label_pc_38004
  %v2_3801b = phi i32 [ %v1_3801b, %bb ], [ %v2_38014, %dec_label_pc_38004 ]
  ret i32 %v2_3801b
}

define i32 @function_38022() local_unnamed_addr {
dec_label_pc_38022:
  %v0_38023 = load i32, i32* @eax, align 8
  ret i32 %v0_38023
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_38024:
  ret i32 %arg1
}

define i32 @function_38034(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38034:
  %v2_38034 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38034 = load i32, i32* @eax, align 8
  %v4_38034 = trunc i32 %v3_38034 to i8
  %v5_38034 = add i8 %v4_38034, %v2_38034
  %v21_38034 = inttoptr i32 %v3_38034 to i8*
  store i8 %v5_38034, i8* %v21_38034, align 1
  %v0_38036 = load i32, i32* @eax, align 8
  %v1_38036 = load i32, i32* @ebp, align 4
  %v2_38036 = add i32 %v1_38036, -12
  %v3_38036 = inttoptr i32 %v2_38036 to i32*
  store i32 %v0_38036, i32* %v3_38036, align 4
  %v0_3803b = load i32, i32* @ebp, align 4
  %v1_3803b = add i32 %v0_3803b, -28
  %v2_3803b = inttoptr i32 %v1_3803b to i32*
  %v3_3803b = load i32, i32* %v2_3803b, align 4
  %v3_38051 = call i32 @unknown_70404(i32 %v3_3803b, i32 1, i32 0)
  store i32 %v3_38051, i32* @eax, align 8
  %v0_38056 = load i32, i32* @ebp, align 4
  %v1_38056 = add i32 %v0_38056, -12
  %v2_38056 = inttoptr i32 %v1_38056 to i32*
  %v3_38056 = load i32, i32* %v2_38056, align 4
  %v3_38059 = icmp eq i32 %v3_38056, 30
  br i1 %v3_38059, label %bb, label %dec_label_pc_38062

bb:                                               ; preds = %dec_label_pc_38034
  %v1_38060 = call i32 @function_38067()
  br label %dec_label_pc_38062

dec_label_pc_38062:                               ; preds = %bb, %dec_label_pc_38034
  %v2_38060 = phi i32 [ %v1_38060, %bb ], [ %v3_38051, %dec_label_pc_38034 ]
  ret i32 %v2_38060
}

define i32 @function_38067() local_unnamed_addr {
dec_label_pc_38067:
  %v0_38068 = load i32, i32* @eax, align 8
  ret i32 %v0_38068
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEC1ERKSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3806a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_3808a = inttoptr i32 %arg2 to i32*
  %v2_3808a = load i32, i32* %v1_3808a, align 4
  store i32 %v2_3808a, i32* %arg1, align 4
  %v1_38094 = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_3809a = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_380a4 = call i32 @unknown_485ac(i32 %v1_3809a, i32 %v1_38094)
  store i32 0, i32* @eax, align 8
  %v1_380b3 = call i32 @function_380ba()
  ret i32 %v1_380b3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_380ba() local_unnamed_addr {
dec_label_pc_380ba:
  %v0_380bb = load i32, i32* @eax, align 8
  ret i32 %v0_380bb
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEE9constructEPSK_RKSK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_380bc:
  %v2_380ed = call i32 @unknown_3d5ac(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %arg2)
  %v1_380f2 = icmp eq i32 %v2_380ed, 0
  br i1 %v1_380f2, label %dec_label_pc_38105, label %dec_label_pc_380f6

dec_label_pc_380f6:                               ; preds = %dec_label_pc_380bc
  %v2_38100 = call i32 @unknown_70126(i32 %v2_380ed, i32 %arg3)
  br label %dec_label_pc_38105

dec_label_pc_38105:                               ; preds = %dec_label_pc_380f6, %dec_label_pc_380bc
  store i32 0, i32* @eax, align 8
  %v1_3810f = call i32 @function_38116()
  ret i32 %v1_3810f
}

define i32 @function_38116() local_unnamed_addr {
dec_label_pc_38116:
  %v0_38117 = load i32, i32* @eax, align 8
  ret i32 %v0_38117
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jEC1ERSI_SL_SJ_j(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_38118:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v1_38153 = call i32 @unknown_4ab36(i32 %arg1)
  %v2_3815e = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v3_3815e = inttoptr i32 %v2_3815e to i32*
  store i32 %arg2, i32* %v3_3815e, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 8
  %v2_3816a = add i32 %arg1, ptrtoint (i32* @global_var_8.2379 to i32)
  %v3_3816a = inttoptr i32 %v2_3816a to i32*
  store i32 %arg3, i32* %v3_3816a, align 4
  %v0_3816d = load i32, i32* %edx.global-to-local, align 8
  %v1_3816d = load i32, i32* %ecx.global-to-local, align 4
  %v2_3816d = add i32 %v1_3816d, ptrtoint (i32* @global_var_c.2390 to i32)
  %v3_3816d = inttoptr i32 %v2_3816d to i32*
  store i32 %v0_3816d, i32* %v3_3816d, align 4
  %v2_38176 = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_38176 = inttoptr i32 %v2_38176 to i32*
  store i32 %arg5, i32* %v3_38176, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 8
  %v2_3817f = add i32 %arg1, ptrtoint (i32* @global_var_14.2373 to i32)
  %v3_3817f = inttoptr i32 %v2_3817f to i32*
  store i32 %arg6, i32* %v3_3817f, align 4
  store i32 0, i32* @eax, align 8
  %v1_3818c = call i32 @function_38193()
  ret i32 %v1_3818c

; uselistorder directives
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_38193() local_unnamed_addr {
dec_label_pc_38193:
  %v0_38194 = load i32, i32* @eax, align 8
  ret i32 %v0_38194
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_base12safe_executeINS1_21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS6_23foreign_void_shared_ptrENS_6detail7variant5void_ESE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_EENS6_15store_n_objectsILj10EEENS6_19default_grow_policyESaISF_EEEMSK_FvPSF_jESL_jEEEEvRT_(i8* %arg1) local_unnamed_addr {
dec_label_pc_38195:
  %v2_381af = load i8, i8* %arg1, align 1
  %v5_381b5 = icmp eq i8 %v2_381af, 1
  br i1 %v5_381b5, label %dec_label_pc_381c4, label %dec_label_pc_381b9

dec_label_pc_381b9:                               ; preds = %dec_label_pc_38195
  %v4_381ac = ptrtoint i8* %arg1 to i32
  %v2_381bf = call i32 @unknown_705d3(i32 %v4_381ac)
  br label %dec_label_pc_381c4

dec_label_pc_381c4:                               ; preds = %dec_label_pc_381b9, %dec_label_pc_38195
  store i32 0, i32* @eax, align 8
  %v1_381ce = call i32 @function_381d5()
  ret i32 %v1_381ce

; uselistorder directives
  uselistorder i8 1, { 0, 32, 50, 51, 36, 37, 38, 11, 33, 1, 56, 40, 41, 2, 3, 44, 45, 46, 4, 34, 35, 19, 13, 14, 5, 15, 16, 6, 39, 42, 43, 47, 48, 49, 20, 21, 24, 22, 23, 25, 26, 27, 28, 29, 30, 31, 52, 53, 54, 7, 55, 8, 12, 10, 17, 18, 9 }
}

define i32 @function_381d5() local_unnamed_addr {
dec_label_pc_381d5:
  %v0_381d6 = load i32, i32* @eax, align 8
  ret i32 %v0_381d6
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9copy_implIPSA_EEvT_SI_SH_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_381d7:
  ret i32 %arg3
}

define i32 @function_381ee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_381ee:
  %v0_381f2 = load i32, i32* @eax, align 8
  %v1_381f2 = trunc i32 %v0_381f2 to i8
  %v2_381f2 = load i1, i1* @cf, align 1
  %v3_381f2 = zext i1 %v2_381f2 to i8
  %v4_381f2 = add i8 %v1_381f2, -120
  %v5_381f2 = add i8 %v4_381f2, %v3_381f2
  %v22_381f2 = icmp ule i8 %v5_381f2, %v1_381f2
  %v23_381f2 = icmp ugt i8 %v1_381f2, 119
  %v24_381f2 = select i1 %v2_381f2, i1 %v22_381f2, i1 %v23_381f2
  store i1 %v24_381f2, i1* @cf, align 1
  %v25_381f2 = zext i8 %v5_381f2 to i32
  %v27_381f2 = and i32 %v0_381f2, -256
  %v28_381f2 = or i32 %v25_381f2, %v27_381f2
  %v0_381f4 = load i32, i32* @ebp, align 4
  %v1_381f4 = add i32 %v0_381f4, 1
  store i32 %v1_381f4, i32* @ebp, align 4
  ret i32 %v28_381f2

; uselistorder directives
  uselistorder i8 %v5_381f2, { 1, 0 }
  uselistorder i8 -120, { 1, 2, 0 }
}

define i32 @function_38231() local_unnamed_addr {
dec_label_pc_38231:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38231 = load i32, i32* %ecx.global-to-local, align 4
  %v1_38231 = add i32 %v0_38231, -1
  store i32 %v1_38231, i32* %ecx.global-to-local, align 4
  %v0_38233 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38233
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38234:
  ret i32 %arg3
}

define i32 @function_3824e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3824e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3824e = load i32, i32* @eax, align 8
  %v1_3824e = trunc i32 %v0_3824e to i8
  %v2_3824e = load i1, i1* @cf, align 1
  %v3_3824e = zext i1 %v2_3824e to i8
  %v4_3824e = add i8 %v3_3824e, %v1_3824e
  %v22_3824e = zext i8 %v4_3824e to i32
  %v24_3824e = and i32 %v0_3824e, -256
  %v25_3824e = or i32 %v22_3824e, %v24_3824e
  store i32 %v25_3824e, i32* %eax.global-to-local, align 8
  %v1_38250 = inttoptr i32 %v25_3824e to i8*
  %v2_38250 = load i8, i8* %v1_38250, align 1
  %v5_38250 = add i8 %v2_38250, %v4_3824e
  store i8 %v5_38250, i8* %v1_38250, align 1
  %v0_38252 = load i32, i32* %eax.global-to-local, align 8
  %v1_38252 = load i32, i32* @ebp, align 4
  %v2_38252 = add i32 %v1_38252, -12
  %v3_38252 = inttoptr i32 %v2_38252 to i32*
  store i32 %v0_38252, i32* %v3_38252, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_38257 = load i32, i32* @ebp, align 4
  %v1_38257 = add i32 %v0_38257, -28
  %v2_38257 = inttoptr i32 %v1_38257 to i32*
  %v3_38257 = load i32, i32* %v2_38257, align 4
  store i32 %v3_38257, i32* %eax.global-to-local, align 8
  %v1_3825d = call i32 @unknown_70752(i32 %v3_38257)
  store i32 %v1_3825d, i32* %eax.global-to-local, align 8
  %v1_38262 = load i32, i32* @ebp, align 4
  %v2_38262 = add i32 %v1_38262, -32
  %v3_38262 = inttoptr i32 %v2_38262 to i32*
  %v4_38262 = load i32, i32* %v3_38262, align 4
  %v10_38262 = icmp ult i32 %v1_3825d, %v4_38262
  %v1_38265 = zext i1 %v10_38262 to i32
  %v3_38265 = and i32 %v1_3825d, -256
  %v4_38265 = or i32 %v1_38265, %v3_38265
  store i32 %v4_38265, i32* %eax.global-to-local, align 8
  %v5_38268 = icmp eq i1 %v10_38262, false
  br i1 %v5_38268, label %bb, label %dec_label_pc_3826c

bb:                                               ; preds = %dec_label_pc_3824e
  %v1_3826a = call i32 @function_38271()
  store i32 %v1_3826a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3826c

dec_label_pc_3826c:                               ; preds = %bb, %dec_label_pc_3824e
  %v2_3826a = phi i32 [ %v1_3826a, %bb ], [ %v4_38265, %dec_label_pc_3824e ]
  ret i32 %v2_3826a

; uselistorder directives
  uselistorder i1 %v10_38262, { 1, 0 }
}

define i32 @function_38271() local_unnamed_addr {
dec_label_pc_38271:
  %v0_38271 = load i32, i32* @ebp, align 4
  %v1_38271 = add i32 %v0_38271, -32
  %v2_38271 = inttoptr i32 %v1_38271 to i32*
  %v3_38271 = load i32, i32* %v2_38271, align 4
  %v2_38274 = mul i32 %v3_38271, 32
  ret i32 %v2_38274

; uselistorder directives
  uselistorder i32 32, { 0, 1, 7, 2, 8, 3, 9, 10, 4, 5, 6 }
}

define i32 @function_3828f() local_unnamed_addr {
dec_label_pc_3828f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3828f = load i32, i32* %ecx.global-to-local, align 4
  %v1_3828f = add i32 %v0_3828f, -1
  store i32 %v1_3828f, i32* %ecx.global-to-local, align 4
  %v0_38291 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38291
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_38292:
  store i32 0, i32* @eax, align 8
  %v2_382b3 = call i32 @function_382ba(i32 %arg1)
  ret i32 %v2_382b3
}

define i32 @function_382ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_382ba:
  %v0_382bb = load i32, i32* @eax, align 8
  ret i32 %v0_382bb
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_382bc:
  %v3_382e9 = call i32 @unknown_7080a(i32 %arg1, i32 1, i32 0)
  store i32 %v3_382e9, i32* @eax, align 8
  %v1_382f8 = call i32 @function_382ff()
  ret i32 %v1_382f8
}

define i32 @function_382ff() local_unnamed_addr {
dec_label_pc_382ff:
  %v0_38300 = load i32, i32* @eax, align 8
  ret i32 %v0_38300
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEC1ERKSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38302:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_38322 = inttoptr i32 %arg2 to i32*
  %v2_38322 = load i32, i32* %v1_38322, align 4
  store i32 %v2_38322, i32* %arg1, align 4
  %v1_3832c = add i32 %arg2, ptrtoint (i32* @global_var_4.2376 to i32)
  %v1_38332 = add i32 %tmp102, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_3833c = call i32 @unknown_48844(i32 %v1_38332, i32 %v1_3832c)
  ret i32 30

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_38344(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38344:
  %v0_38344 = load i32, i32* @eax, align 8
  %v2_38344 = xor i32 %v0_38344, 30
  %v3_38344 = icmp eq i32 %v2_38344, 0
  store i32 %v2_38344, i32* @eax, align 8
  br i1 %v3_38344, label %bb, label %dec_label_pc_3834d

bb:                                               ; preds = %dec_label_pc_38344
  %v1_3834b = call i32 @function_38352()
  br label %dec_label_pc_3834d

dec_label_pc_3834d:                               ; preds = %bb, %dec_label_pc_38344
  %v2_3834b = phi i32 [ %v1_3834b, %bb ], [ %v2_38344, %dec_label_pc_38344 ]
  ret i32 %v2_3834b
}

define i32 @function_38352() local_unnamed_addr {
dec_label_pc_38352:
  %v0_38353 = load i32, i32* @eax, align 8
  ret i32 %v0_38353
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEE9constructEPSK_RKSK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38354:
  %v2_38385 = call i32 @unknown_3d844(i32 ptrtoint (i32* @global_var_8.2379 to i32), i32 %arg2)
  ret i32 %v2_38385
}

define i32 @function_38394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38394:
  %v0_38398 = call i32 @unknown_70656()
  %v0_3839d = load i32, i32* @ebp, align 4
  %v1_3839d = add i32 %v0_3839d, -12
  %v2_3839d = inttoptr i32 %v1_3839d to i32*
  %v3_3839d = load i32, i32* %v2_3839d, align 4
  %v2_383a0 = xor i32 %v3_3839d, 30
  %v3_383a0 = icmp eq i32 %v2_383a0, 0
  store i32 %v2_383a0, i32* @eax, align 8
  br i1 %v3_383a0, label %bb, label %dec_label_pc_383a9

bb:                                               ; preds = %dec_label_pc_38394
  %v1_383a7 = call i32 @function_383ae()
  br label %dec_label_pc_383a9

dec_label_pc_383a9:                               ; preds = %bb, %dec_label_pc_38394
  %v2_383a7 = phi i32 [ %v1_383a7, %bb ], [ %v2_383a0, %dec_label_pc_38394 ]
  ret i32 %v2_383a7
}

define i32 @function_383ae() local_unnamed_addr {
dec_label_pc_383ae:
  %v0_383af = load i32, i32* @eax, align 8
  ret i32 %v0_383af
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_383b0:
  store i32 134217727, i32* @eax, align 8
  %v2_383d6 = call i32 @function_383dd(i32 %arg1)
  ret i32 %v2_383d6

; uselistorder directives
  uselistorder i32 134217727, { 1, 2, 0 }
}

define i32 @function_383dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_383dd:
  %v0_383de = load i32, i32* @eax, align 8
  ret i32 %v0_383de
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_383e0:
  %eax.global-to-local = alloca i32, align 4
  %v5_383e0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_383e0
}

define i32 @function_3841e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_3841e:
  %v0_3841e = load i32, i32* @ebp, align 4
  %v9_3841e = icmp eq i32 %v0_3841e, -1
  %v0_3841f = load i32, i32* @ecx, align 4
  %v2_38421 = icmp eq i32 %v0_3841f, 2
  %v4_38421 = or i1 %v9_3841e, %v2_38421
  br i1 %v4_38421, label %dec_label_pc_3841e.dec_label_pc_38423_crit_edge, label %bb

dec_label_pc_3841e.dec_label_pc_38423_crit_edge:  ; preds = %dec_label_pc_3841e
  %v3_38423.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_38423

bb:                                               ; preds = %dec_label_pc_3841e
  %v6_38421 = call i32 @_Znwj.2113()
  br label %dec_label_pc_38423

dec_label_pc_38423:                               ; preds = %dec_label_pc_3841e.dec_label_pc_38423_crit_edge, %bb
  %v3_38423 = phi i32 [ %v3_38423.pre, %dec_label_pc_3841e.dec_label_pc_38423_crit_edge ], [ %v6_38421, %bb ]
  ret i32 %v3_38423

; uselistorder directives
  uselistorder label %dec_label_pc_38423, { 1, 0 }
}

declare i32 @_Znwj.2113() local_unnamed_addr

define i32 @function_3843b() local_unnamed_addr {
dec_label_pc_3843b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3843b = load i32, i32* %ecx.global-to-local, align 4
  %v1_3843b = add i32 %v0_3843b, -1
  store i32 %v1_3843b, i32* %ecx.global-to-local, align 4
  %v0_3843d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3843d
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jE7executeEv() local_unnamed_addr {
dec_label_pc_3843e:
  %eax.global-to-local = alloca i32, align 4
  %v16_38443 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v16_38443
}

define i32 @function_38448() local_unnamed_addr {
dec_label_pc_38448:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_38448 = load i32, i32* @ecx, align 4
  %v1_38448 = add i32 %v0_38448, -1587157947
  %v2_38448 = inttoptr i32 %v1_38448 to i8*
  %v3_38448 = load i8, i8* %v2_38448, align 1
  %v5_38448 = trunc i32 %v0_38448 to i8
  %v6_38448 = or i8 %v3_38448, %v5_38448
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_38448, i8* %v2_38448, align 1
  %v0_3844e = load i32, i32* @eax, align 8
  %v1_3844e = trunc i32 %v0_3844e to i8
  %v2_3844e = load i1, i1* %cf.global-to-local, align 1
  %v3_3844e = zext i1 %v2_3844e to i8
  %v4_3844e = add i8 %v3_3844e, %v1_3844e
  %v19_3844e = icmp ule i8 %v4_3844e, %v1_3844e
  %v21_3844e = icmp eq i1 %v2_3844e, %v19_3844e
  store i1 %v21_3844e, i1* %cf.global-to-local, align 1
  %v22_3844e = zext i8 %v4_3844e to i32
  %v24_3844e = and i32 %v0_3844e, -256
  %v25_3844e = or i32 %v22_3844e, %v24_3844e
  store i32 %v25_3844e, i32* %eax.global-to-local, align 8
  %v1_38450 = inttoptr i32 %v25_3844e to i8*
  %v2_38450 = load i8, i8* %v1_38450, align 1
  %v5_38450 = add i8 %v2_38450, %v4_3844e
  store i8 %v5_38450, i8* %v1_38450, align 1
  %v0_38452 = load i32, i32* %eax.global-to-local, align 8
  %v1_38452 = load i32, i32* @ebp, align 4
  %v2_38452 = add i32 %v1_38452, -12
  %v3_38452 = inttoptr i32 %v2_38452 to i32*
  store i32 %v0_38452, i32* %v3_38452, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_38457 = load i32, i32* @ebp, align 4
  %v1_38457 = add i32 %v0_38457, -28
  %v2_38457 = inttoptr i32 %v1_38457 to i32*
  %v3_38457 = load i32, i32* %v2_38457, align 4
  store i32 %v3_38457, i32* %eax.global-to-local, align 8
  %v1_3845a = add i32 %v3_38457, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_3845a = inttoptr i32 %v1_3845a to i32*
  %v3_3845a = load i32, i32* %v2_3845a, align 4
  %v1_3845d = urem i32 %v3_3845a, 2
  %v2_3845d = icmp eq i32 %v1_3845d, 0
  store i32 %v1_3845d, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_38483 = load i32, i32* %v2_38457, align 4
  store i32 %v3_38483, i32* %eax.global-to-local, align 8
  br i1 %v2_3845d, label %dec_label_pc_38483, label %dec_label_pc_38464

dec_label_pc_38464:                               ; preds = %dec_label_pc_38448
  %v1_38467 = add i32 %v3_38483, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_38467 = inttoptr i32 %v1_38467 to i32*
  %v3_38467 = load i32, i32* %v2_38467, align 4
  %v3_3846a = load i32, i32* %v2_38457, align 4
  store i32 %v3_3846a, i32* %eax.global-to-local, align 8
  %v1_3846d = add i32 %v3_3846a, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3846d = inttoptr i32 %v1_3846d to i32*
  %v3_3846d = load i32, i32* %v2_3846d, align 4
  %v2_38470 = add i32 %v3_3846d, %v3_38467
  store i32 %v2_38470, i32* %eax.global-to-local, align 8
  %v1_38472 = inttoptr i32 %v2_38470 to i32*
  %v2_38472 = load i32, i32* %v1_38472, align 4
  %v3_38474 = load i32, i32* %v2_38457, align 4
  store i32 %v3_38474, i32* %eax.global-to-local, align 8
  %v1_38477 = add i32 %v3_38474, ptrtoint (i32* @global_var_8.2379 to i32)
  %v2_38477 = inttoptr i32 %v1_38477 to i32*
  %v3_38477 = load i32, i32* %v2_38477, align 4
  %v1_3847a = add i32 %v3_38477, -1
  %v2_3847d = add i32 %v1_3847a, %v2_38472
  %v7_3847d = icmp ult i32 %v2_3847d, %v1_3847a
  store i1 %v7_3847d, i1* %cf.global-to-local, align 1
  store i32 %v2_3847d, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_38489

dec_label_pc_38483:                               ; preds = %dec_label_pc_38448
  %v1_38486 = add i32 %v3_38483, ptrtoint (i32* @global_var_8.2379 to i32)
  br label %dec_label_pc_38489

dec_label_pc_38489:                               ; preds = %dec_label_pc_38483, %dec_label_pc_38464
  %storemerge.in.in = phi i32 [ %v1_38486, %dec_label_pc_38483 ], [ %v2_3847d, %dec_label_pc_38464 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v3_38489 = load i32, i32* %v2_38457, align 4
  %v1_3848c = add i32 %v3_38489, ptrtoint (i32* @global_var_14.2373 to i32)
  %v2_3848c = inttoptr i32 %v1_3848c to i32*
  %v3_3848c = load i32, i32* %v2_3848c, align 4
  %v1_38492 = add i32 %v3_38489, ptrtoint (i8** @global_var_10.2429 to i32)
  %v2_38492 = inttoptr i32 %v1_38492 to i32*
  %v3_38492 = load i32, i32* %v2_38492, align 4
  %v3_38495 = load i32, i32* %v2_38457, align 4
  %v1_38498 = add i32 %v3_38495, ptrtoint (i32* @global_var_4.2376 to i32)
  %v2_38498 = inttoptr i32 %v1_38498 to i32*
  %v3_38498 = load i32, i32* %v2_38498, align 4
  %v1_3849e = add i32 %v3_38495, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3849e = inttoptr i32 %v1_3849e to i32*
  %v3_3849e = load i32, i32* %v2_3849e, align 4
  %v1_384b0 = add i32 %v0_38457, -12
  %v2_384b0 = inttoptr i32 %v1_384b0 to i32*
  %v3_384b0 = load i32, i32* %v2_384b0, align 4
  %v2_384b3 = xor i32 %v3_384b0, 30
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_384b3 = icmp eq i32 %v2_384b3, 0
  store i32 %v2_384b3, i32* @eax, align 8
  br i1 %v3_384b3, label %bb, label %dec_label_pc_384bc

bb:                                               ; preds = %dec_label_pc_38489
  %v2_384a1 = add i32 %v3_3849e, %v3_38498
  %v4_384ba = call i32 @function_384c1(i32 %v2_384a1, i32 %v3_38492, i32 %v3_3848c)
  store i32 %v4_384ba, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_384bc

dec_label_pc_384bc:                               ; preds = %bb, %dec_label_pc_38489
  %v5_384ba = phi i32 [ %v4_384ba, %bb ], [ %v2_384b3, %dec_label_pc_38489 ]
  ret i32 %v5_384ba

; uselistorder directives
  uselistorder i32 %v1_3847a, { 1, 0 }
  uselistorder i32 %v3_38483, { 1, 0, 2 }
  uselistorder i32 %v1_3845d, { 1, 0 }
  uselistorder i8 %v4_3844e, { 0, 2, 1 }
  uselistorder i8 %v1_3844e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 2, 4, 5, 6, 1, 7, 8, 9, 10, 11 }
  uselistorder i32 -1587157947, { 2, 1, 0, 3, 4 }
}

define i32 @function_384c1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_384c1:
  %v0_384c7 = load i32, i32* @eax, align 8
  ret i32 %v0_384c7
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8copy_raiIPSA_Lb0EEEvT_SI_SH_RKNS_17integral_constantIbXT0_EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_384c8:
  ret i32 %arg3
}

define i32 @function_384fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_384fa:
  %v0_384ff = load i32, i32* @ebp, align 4
  %v1_384ff = add i32 %v0_384ff, -28
  %v2_384ff = inttoptr i32 %v1_384ff to i32*
  %v3_384ff = load i32, i32* %v2_384ff, align 4
  %v1_38505 = call i32 @unknown_60d2f(i32 %v3_384ff)
  %v0_3850a = load i32, i32* @ebp, align 4
  %v1_3850a = add i32 %v0_3850a, -12
  %v2_3850a = inttoptr i32 %v1_3850a to i32*
  %v3_3850a = load i32, i32* %v2_3850a, align 4
  %v2_3850d = xor i32 %v3_3850a, 30
  %v3_3850d = icmp eq i32 %v2_3850d, 0
  store i32 %v2_3850d, i32* @eax, align 8
  br i1 %v3_3850d, label %bb, label %dec_label_pc_38516

bb:                                               ; preds = %dec_label_pc_384fa
  %v1_38514 = call i32 @function_3851b()
  br label %dec_label_pc_38516

dec_label_pc_38516:                               ; preds = %bb, %dec_label_pc_384fa
  %v3_38514 = phi i32 [ %v1_38514, %bb ], [ %v2_3850d, %dec_label_pc_384fa ]
  ret i32 %v3_38514
}

define i32 @function_3851b() local_unnamed_addr {
dec_label_pc_3851b:
  %v0_3851c = load i32, i32* @eax, align 8
  ret i32 %v0_3851c
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3851e:
  ret i32 0
}

define i32 @function_38536(i32 %arg1) local_unnamed_addr {
dec_label_pc_38536:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3854a() local_unnamed_addr {
dec_label_pc_3854a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3854a = load i32, i32* %ecx.global-to-local, align 4
  %v1_3854a = add i32 %v0_3854a, -1
  store i32 %v1_3854a, i32* %ecx.global-to-local, align 4
  %v0_3854c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3854c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3854e:
  %v1_38577 = call i32 @unknown_70b2a(i32 %arg1)
  %v10_3857c = icmp ult i32 %v1_38577, %arg2
  %v1_3857f = zext i1 %v10_3857c to i32
  %v3_3857f = and i32 %v1_38577, -256
  %v4_3857f = or i32 %v1_3857f, %v3_3857f
  %v5_38582 = icmp eq i1 %v10_3857c, false
  br i1 %v5_38582, label %bb, label %dec_label_pc_38586

bb:                                               ; preds = %dec_label_pc_3854e
  %v1_38584 = call i32 @function_3858b()
  br label %dec_label_pc_38586

dec_label_pc_38586:                               ; preds = %bb, %dec_label_pc_3854e
  %v2_38584 = phi i32 [ %v1_38584, %bb ], [ %v4_3857f, %dec_label_pc_3854e ]
  ret i32 %v2_38584

; uselistorder directives
  uselistorder i1 %v10_3857c, { 1, 0 }
}

define i32 @function_3858b() local_unnamed_addr {
dec_label_pc_3858b:
  %v0_3858b = load i32, i32* @ebp, align 4
  %v1_3858b = add i32 %v0_3858b, -32
  %v2_3858b = inttoptr i32 %v1_3858b to i32*
  %v3_3858b = load i32, i32* %v2_3858b, align 4
  %v2_3858e = shl i32 %v3_3858b, ptrtoint (i32* @global_var_4.2376 to i32)
  ret i32 %v2_3858e

; uselistorder directives
  uselistorder i32 -32, { 48, 91, 92, 93, 94, 95, 96, 97, 98, 108, 109, 99, 100, 101, 102, 110, 116, 113, 114, 115, 0, 117, 118, 119, 120, 104, 122, 123, 124, 87, 88, 238, 239, 126, 127, 49, 89, 90, 133, 130, 131, 132, 1, 134, 135, 84, 136, 137, 142, 73, 254, 147, 148, 71, 72, 153, 154, 155, 156, 157, 158, 159, 160, 161, 50, 162, 3, 4, 255, 256, 257, 258, 259, 163, 164, 165, 166, 103, 5, 167, 168, 111, 112, 266, 149, 150, 151, 152, 169, 170, 171, 172, 128, 129, 265, 251, 51, 271, 272, 174, 175, 138, 139, 140, 141, 57, 176, 143, 144, 177, 145, 6, 178, 179, 180, 181, 77, 78, 79, 260, 261, 262, 263, 81, 52, 53, 105, 106, 107, 183, 54, 55, 184, 185, 121, 186, 187, 82, 190, 191, 192, 193, 194, 22, 23, 56, 7, 198, 203, 173, 125, 212, 213, 182, 58, 8, 59, 188, 189, 201, 202, 209, 210, 204, 211, 205, 206, 207, 208, 60, 61, 62, 273, 274, 9, 275, 276, 214, 63, 64, 65, 224, 146, 10, 66, 67, 277, 278, 216, 217, 218, 219, 220, 221, 222, 68, 69, 197, 231, 280, 279, 70, 199, 200, 215, 246, 247, 241, 242, 240, 243, 244, 245, 248, 249, 226, 227, 228, 74, 195, 196, 250, 229, 232, 233, 234, 235, 237, 236, 11, 12, 75, 76, 230, 80, 252, 253, 83, 85, 86, 13, 14, 17, 15, 16, 2, 18, 19, 20, 21, 24, 25, 26, 223, 225, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 41, 264, 267, 268, 269, 270, 42, 43, 44, 45, 46, 47 }
}

define i32 @function_3859e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3859e:
  %v0_3859e = load i32, i32* @eax, align 8
  %v1_3859e = load i1, i1* @cf, align 1
  %v2_3859e = zext i1 %v1_3859e to i32
  %v3_3859e = add i32 %v0_3859e, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_3859e = add i32 %v3_3859e, %v2_3859e
  %v14_3859e = icmp eq i32 %v4_3859e, 0
  store i32 %v4_3859e, i32* @eax, align 8
  br i1 %v14_3859e, label %bb, label %dec_label_pc_385a5

bb:                                               ; preds = %dec_label_pc_3859e
  %v1_385a3 = call i32 @function_385aa()
  br label %dec_label_pc_385a5

dec_label_pc_385a5:                               ; preds = %bb, %dec_label_pc_3859e
  %v2_385a3 = phi i32 [ %v1_385a3, %bb ], [ %v4_3859e, %dec_label_pc_3859e ]
  ret i32 %v2_385a3
}

define i32 @function_385aa() local_unnamed_addr {
dec_label_pc_385aa:
  %v0_385ab = load i32, i32* @eax, align 8
  ret i32 %v0_385ab
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_385ac:
  ret i32 268435455
}

define i32 @function_385d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_385d8:
  %v0_385da = load i32, i32* @eax, align 8
  ret i32 %v0_385da
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_385dc:
  store i32 268435455, i32* @eax, align 8
  %v2_38602 = call i32 @function_38609(i32 %arg1)
  ret i32 %v2_38602

; uselistorder directives
  uselistorder i32 268435455, { 1, 0 }
}

define i32 @function_38609(i32 %arg1) local_unnamed_addr {
dec_label_pc_38609:
  %v0_3860a = load i32, i32* @eax, align 8
  ret i32 %v0_3860a
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_3862c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38618_type* @global_var_38618.2605 to i32), i32* %arg1, align 4
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38618_type* @global_var_38618.2605 to i32), { 1, 0 }
}

define i32 @function_38656(i32 %arg1) local_unnamed_addr {
dec_label_pc_38656:
  %v2_38656 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_38656 = load i32, i32* @ebx, align 4
  %v4_38656 = lshr i32 %v3_38656, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_38656 = trunc i32 %v4_38656 to i8
  %v6_38656 = add i8 %v5_38656, %v2_38656
  %v21_38656 = load i32, i32* @eax, align 8
  %v22_38656 = inttoptr i32 %v21_38656 to i8*
  store i8 %v6_38656, i8* %v22_38656, align 1
  %v0_3865c = load i32, i32* @eax, align 8
  %v1_3865c = urem i32 %v0_3865c, 2
  %v2_3865c = icmp eq i32 %v1_3865c, 0
  br i1 %v2_3865c, label %bb, label %dec_label_pc_38663

bb:                                               ; preds = %dec_label_pc_38656
  %v1_38661 = call i32 @function_3866e()
  br label %dec_label_pc_38663

dec_label_pc_38663:                               ; preds = %bb, %dec_label_pc_38656
  %v0_38663 = load i32, i32* @ebp, align 4
  %v1_38663 = add i32 %v0_38663, -28
  %v2_38663 = inttoptr i32 %v1_38663 to i32*
  %v3_38663 = load i32, i32* %v2_38663, align 4
  ret i32 %v3_38663
}

define i32 @function_3866e() local_unnamed_addr {
dec_label_pc_3866e:
  %v0_3866e = load i32, i32* @ebp, align 4
  %v1_3866e = add i32 %v0_3866e, -12
  %v2_3866e = inttoptr i32 %v1_3866e to i32*
  %v3_3866e = load i32, i32* %v2_3866e, align 4
  %v2_38671 = xor i32 %v3_3866e, 30
  %v3_38671 = icmp eq i32 %v2_38671, 0
  store i32 %v2_38671, i32* @eax, align 8
  br i1 %v3_38671, label %bb, label %dec_label_pc_3867a

bb:                                               ; preds = %dec_label_pc_3866e
  %v1_38678 = call i32 @function_3867f()
  br label %dec_label_pc_3867a

dec_label_pc_3867a:                               ; preds = %bb, %dec_label_pc_3866e
  %v2_38678 = phi i32 [ %v1_38678, %bb ], [ %v2_38671, %dec_label_pc_3866e ]
  ret i32 %v2_38678
}

define i32 @function_3867f() local_unnamed_addr {
dec_label_pc_3867f:
  %v0_38680 = load i32, i32* @eax, align 8
  ret i32 %v0_38680
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED0Ev(i32 %arg1) {
dec_label_pc_38682:
  %v1_3869f = call i32 @unknown_70cae(i32 %arg1)
  ret i32 %v1_3869f
}

define i32 @function_386a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_386a6:
  %v0_386a8 = load i32, i32* @eax, align 8
  %v2_386a8 = add i32 %v0_386a8, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_386a8 = and i32 %v2_386a8, 255
  %v18_386a8 = and i32 %v0_386a8, -256
  %v19_386a8 = or i32 %v16_386a8, %v18_386a8
  ret i32 %v19_386a8

; uselistorder directives
  uselistorder i32 %v0_386a8, { 1, 0 }
}

define i32 @function_386bf() local_unnamed_addr {
dec_label_pc_386bf:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_386bf = load i32, i32* %ecx.global-to-local, align 4
  %v1_386bf = add i32 %v0_386bf, -1
  store i32 %v1_386bf, i32* %ecx.global-to-local, align 4
  %v0_386c1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_386c1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_386e4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_386d0_type* @global_var_386d0.2604 to i32), i32* %arg1, align 4
  %v1_3870a = call i32 @unknown_48942(i32 %tmp99)
  %v1_38719 = call i32 @function_38726()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_386d0_type* @global_var_386d0.2604 to i32), { 1, 0 }
}

define i32 @function_38726() local_unnamed_addr {
dec_label_pc_38726:
  %v0_38726 = load i32, i32* @ebp, align 4
  %v1_38726 = add i32 %v0_38726, -12
  %v2_38726 = inttoptr i32 %v1_38726 to i32*
  %v3_38726 = load i32, i32* %v2_38726, align 4
  ret i32 %v3_38726
}

define i32 @function_3872a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3872a:
  %v0_3872a = load i32, i32* @eax, align 8
  %v2_3872a = xor i32 %v0_3872a, 30
  %v3_3872a = icmp eq i32 %v2_3872a, 0
  store i32 %v2_3872a, i32* @eax, align 8
  br i1 %v3_3872a, label %bb, label %dec_label_pc_38732

bb:                                               ; preds = %dec_label_pc_3872a
  %v1_38730 = call i32 @function_38737()
  br label %dec_label_pc_38732

dec_label_pc_38732:                               ; preds = %bb, %dec_label_pc_3872a
  %v2_38730 = phi i32 [ %v1_38730, %bb ], [ %v2_3872a, %dec_label_pc_3872a ]
  ret i32 %v2_38730
}

define i32 @function_38737() local_unnamed_addr {
dec_label_pc_38737:
  %v0_38738 = load i32, i32* @eax, align 8
  ret i32 %v0_38738
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_3873a:
  %v1_38757 = call i32 @unknown_70e1e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_38766(i32 %arg1) local_unnamed_addr {
dec_label_pc_38766:
  %v0_38766 = load i32, i32* @ebx, align 4
  %v1_38766 = add i32 %v0_38766, 862319685
  %v2_38766 = inttoptr i32 %v1_38766 to i32*
  %v3_38766 = load i32, i32* %v2_38766, align 4
  %v4_38766 = add i32 %v3_38766, -1
  store i32 %v4_38766, i32* %v2_38766, align 4
  %v0_3876c = load i32, i32* @eax, align 8
  %v1_3876c = add i32 %v0_3876c, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_3876c = icmp eq i32 %v1_3876c, 0
  store i32 %v1_3876c, i32* @eax, align 8
  br i1 %v10_3876c, label %bb, label %dec_label_pc_38773

bb:                                               ; preds = %dec_label_pc_38766
  %v1_38771 = call i32 @function_38778()
  br label %dec_label_pc_38773

dec_label_pc_38773:                               ; preds = %bb, %dec_label_pc_38766
  %v2_38771 = phi i32 [ %v1_38771, %bb ], [ %v1_3876c, %dec_label_pc_38766 ]
  ret i32 %v2_38771
}

define i32 @function_38778() local_unnamed_addr {
dec_label_pc_38778:
  %v0_38779 = load i32, i32* @eax, align 8
  ret i32 %v0_38779
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_3879c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38788_type* @global_var_38788.2598 to i32), i32* %arg1, align 4
  %v1_387c2 = call i32 @unknown_489fa(i32 %tmp99)
  %v1_387d1 = call i32 @function_387de()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38788_type* @global_var_38788.2598 to i32), { 1, 0 }
}

define i32 @function_387de() local_unnamed_addr {
dec_label_pc_387de:
  %v0_387de = load i32, i32* @ebp, align 4
  %v1_387de = add i32 %v0_387de, -12
  %v2_387de = inttoptr i32 %v1_387de to i32*
  %v3_387de = load i32, i32* %v2_387de, align 4
  %v2_387e1 = xor i32 %v3_387de, 30
  %v3_387e1 = icmp eq i32 %v2_387e1, 0
  store i32 %v2_387e1, i32* @eax, align 8
  br i1 %v3_387e1, label %bb, label %dec_label_pc_387ea

bb:                                               ; preds = %dec_label_pc_387de
  %v1_387e8 = call i32 @function_387ef()
  br label %dec_label_pc_387ea

dec_label_pc_387ea:                               ; preds = %bb, %dec_label_pc_387de
  %v2_387e8 = phi i32 [ %v1_387e8, %bb ], [ %v2_387e1, %dec_label_pc_387de ]
  ret i32 %v2_387e8
}

define i32 @function_387ef() local_unnamed_addr {
dec_label_pc_387ef:
  %v0_387f0 = load i32, i32* @eax, align 8
  ret i32 %v0_387f0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32 %arg1) {
dec_label_pc_387f2:
  ret i32 30
}

define i32 @function_38808(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38808:
  %v0_38808 = load i32, i32* @ebx, align 4
  %v1_38808 = add i32 %v0_38808, 76145733
  %v2_38808 = inttoptr i32 %v1_38808 to i8*
  %v3_38808 = load i8, i8* %v2_38808, align 1
  %v4_38808 = udiv i8 %v3_38808, 16
  %v5_38808 = mul i8 %v3_38808, 16
  %v6_38808 = or i8 %v4_38808, %v5_38808
  store i8 %v6_38808, i8* %v2_38808, align 1
  %v0_3880f = call i32 @unknown_70f8e()
  %v0_38814 = load i32, i32* @ebp, align 4
  %v1_38814 = add i32 %v0_38814, -28
  %v2_38814 = inttoptr i32 %v1_38814 to i32*
  %v3_38814 = load i32, i32* %v2_38814, align 4
  ret i32 %v3_38814
}

define i32 @function_3882f() local_unnamed_addr {
dec_label_pc_3882f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3882f = load i32, i32* %ecx.global-to-local, align 4
  %v1_3882f = add i32 %v0_3882f, -1
  store i32 %v1_3882f, i32* %ecx.global-to-local, align 4
  %v0_38831 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38831
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_38854:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38840_type* @global_var_38840.2597 to i32), i32* %arg1, align 4
  %v1_3887a = call i32 @unknown_48ab2(i32 %tmp99)
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38840_type* @global_var_38840.2597 to i32), { 1, 0 }
}

define i32 @function_38886(i32 %arg1) local_unnamed_addr {
dec_label_pc_38886:
  %v0_38886 = load i32, i32* @eax, align 8
  %v2_38886 = mul i32 %v0_38886, 8
  %v3_38886 = add i32 %v0_38886, 1166740340
  %v4_38886 = add i32 %v3_38886, %v2_38886
  %v5_38886 = inttoptr i32 %v4_38886 to i32*
  %v6_38886 = load i32, i32* %v5_38886, align 4
  %v8_38886 = add i32 %v6_38886, %v0_38886
  store i32 %v8_38886, i32* %v5_38886, align 4
  %v0_3888f = load i32, i32* @eax, align 8
  %v2_3888f = add i32 %v0_3888f, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_3888f = and i32 %v2_3888f, 255
  %v18_3888f = and i32 %v0_3888f, -256
  %v19_3888f = or i32 %v16_3888f, %v18_3888f
  ret i32 %v19_3888f

; uselistorder directives
  uselistorder i32 %v0_3888f, { 1, 0 }
  uselistorder i32 %v0_38886, { 0, 2, 1 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 9, 8, 0, 2, 1 }
}

define i32 @function_388a6() local_unnamed_addr {
dec_label_pc_388a6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_388a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_388a6 = add i32 %v0_388a6, -1
  store i32 %v1_388a6, i32* %ecx.global-to-local, align 4
  %v0_388a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_388a8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_388aa:
  %v1_388c7 = call i32 @unknown_710fe(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_388e7() local_unnamed_addr {
dec_label_pc_388e7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_388e7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_388e7 = add i32 %v0_388e7, -1
  store i32 %v1_388e7, i32* %ecx.global-to-local, align 4
  %v0_388e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_388e9
}

declare i32 @unknown_388f4(i32, i32, i32) local_unnamed_addr

define i32 @function_38924(i32 %arg1) local_unnamed_addr {
dec_label_pc_38924:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38990(i32 %arg1) local_unnamed_addr {
dec_label_pc_38990:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_389a4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38990_type* @global_var_38990.2610 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_389ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_389ce:
  %v2_389ce = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_389ce = load i32, i32* @ebx, align 4
  %v4_389ce = lshr i32 %v3_389ce, ptrtoint (i32* @global_var_8.2379 to i32)
  %v5_389ce = trunc i32 %v4_389ce to i8
  %v6_389ce = add i8 %v5_389ce, %v2_389ce
  %v21_389ce = load i32, i32* @eax, align 8
  %v22_389ce = inttoptr i32 %v21_389ce to i8*
  store i8 %v6_389ce, i8* %v22_389ce, align 1
  %v0_389d4 = load i32, i32* @eax, align 8
  %v1_389d4 = urem i32 %v0_389d4, 2
  %v2_389d4 = icmp eq i32 %v1_389d4, 0
  br i1 %v2_389d4, label %bb, label %dec_label_pc_389db

bb:                                               ; preds = %dec_label_pc_389ce
  %v1_389d9 = call i32 @function_389e6()
  br label %dec_label_pc_389db

dec_label_pc_389db:                               ; preds = %bb, %dec_label_pc_389ce
  %v0_389db = load i32, i32* @ebp, align 4
  %v1_389db = add i32 %v0_389db, -28
  %v2_389db = inttoptr i32 %v1_389db to i32*
  %v3_389db = load i32, i32* %v2_389db, align 4
  ret i32 %v3_389db

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8.2379 to i32), { 9, 10, 11, 12, 13, 1, 14, 2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 4, 5, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 6, 97, 98, 99, 101, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 7, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 8, 270, 271, 272, 273, 274, 275, 276, 0, 277, 278, 279, 280, 281, 282, 283 }
}

define i32 @function_389e6() local_unnamed_addr {
dec_label_pc_389e6:
  %v0_389e6 = load i32, i32* @ebp, align 4
  %v1_389e6 = add i32 %v0_389e6, -12
  %v2_389e6 = inttoptr i32 %v1_389e6 to i32*
  %v3_389e6 = load i32, i32* %v2_389e6, align 4
  %v2_389e9 = xor i32 %v3_389e6, 30
  %v3_389e9 = icmp eq i32 %v2_389e9, 0
  store i32 %v2_389e9, i32* @eax, align 8
  br i1 %v3_389e9, label %bb, label %dec_label_pc_389f2

bb:                                               ; preds = %dec_label_pc_389e6
  %v1_389f0 = call i32 @function_389f7()
  br label %dec_label_pc_389f2

dec_label_pc_389f2:                               ; preds = %bb, %dec_label_pc_389e6
  %v2_389f0 = phi i32 [ %v1_389f0, %bb ], [ %v2_389e9, %dec_label_pc_389e6 ]
  ret i32 %v2_389f0
}

define i32 @function_389f7() local_unnamed_addr {
dec_label_pc_389f7:
  %v0_389f8 = load i32, i32* @eax, align 8
  ret i32 %v0_389f8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_389fa:
  ret i32 30
}

define i32 @function_38a0e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_38a0e:
  %v0_38a11 = load i32, i32* @ebp, align 4
  %v1_38a11 = add i32 %v0_38a11, -28
  %v2_38a11 = inttoptr i32 %v1_38a11 to i32*
  %v3_38a11 = load i32, i32* %v2_38a11, align 4
  %v1_38a17 = call i32 @unknown_7139e(i32 %v3_38a11)
  %v0_38a1c = load i32, i32* @ebp, align 4
  %v1_38a1c = add i32 %v0_38a1c, -28
  %v2_38a1c = inttoptr i32 %v1_38a1c to i32*
  %v3_38a1c = load i32, i32* %v2_38a1c, align 4
  ret i32 %v3_38a1c
}

define i32 @function_38a37() local_unnamed_addr {
dec_label_pc_38a37:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38a37 = load i32, i32* %ecx.global-to-local, align 4
  %v1_38a37 = add i32 %v0_38a37, -1
  store i32 %v1_38a37, i32* %ecx.global-to-local, align 4
  %v0_38a39 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38a39
}

define i32 @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEED1Ev(i32* %arg1) {
dec_label_pc_38a5c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38a48_type* @global_var_38a48.2568 to i32), i32* %arg1, align 4
  %v1_38a82 = call i32 @unknown_48cba(i32 %tmp99)
  %v1_38a91 = call i32 @function_38a9e()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38a48_type* @global_var_38a48.2568 to i32), { 1, 0 }
}

define i32 @function_38a9e() local_unnamed_addr {
dec_label_pc_38a9e:
  %v0_38a9e = load i32, i32* @ebp, align 4
  %v1_38a9e = add i32 %v0_38a9e, -12
  %v2_38a9e = inttoptr i32 %v1_38a9e to i32*
  %v3_38a9e = load i32, i32* %v2_38a9e, align 4
  %v2_38aa1 = xor i32 %v3_38a9e, 30
  %v3_38aa1 = icmp eq i32 %v2_38aa1, 0
  store i32 %v2_38aa1, i32* @eax, align 8
  br i1 %v3_38aa1, label %bb, label %dec_label_pc_38aaa

bb:                                               ; preds = %dec_label_pc_38a9e
  %v1_38aa8 = call i32 @function_38aaf()
  br label %dec_label_pc_38aaa

dec_label_pc_38aaa:                               ; preds = %bb, %dec_label_pc_38a9e
  %v2_38aa8 = phi i32 [ %v1_38aa8, %bb ], [ %v2_38aa1, %dec_label_pc_38a9e ]
  ret i32 %v2_38aa8
}

define i32 @function_38aaf() local_unnamed_addr {
dec_label_pc_38aaf:
  %v0_38ab0 = load i32, i32* @eax, align 8
  ret i32 %v0_38ab0
}

define i32 @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEED0Ev(i32 %arg1) {
dec_label_pc_38ab2:
  ret i32 30
}

define i32 @function_38ac8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38ac8:
  %v0_38ac8 = load i32, i32* @ebx, align 4
  %v1_38ac8 = add i32 %v0_38ac8, 76145733
  %v2_38ac8 = inttoptr i32 %v1_38ac8 to i8*
  %v3_38ac8 = load i8, i8* %v2_38ac8, align 1
  %v4_38ac8 = udiv i8 %v3_38ac8, 16
  %v5_38ac8 = mul i8 %v3_38ac8, 16
  %v6_38ac8 = or i8 %v4_38ac8, %v5_38ac8
  store i8 %v6_38ac8, i8* %v2_38ac8, align 1
  %v0_38acf = call i32 @unknown_7150e()
  %v0_38ad4 = load i32, i32* @ebp, align 4
  %v1_38ad4 = add i32 %v0_38ad4, -28
  %v2_38ad4 = inttoptr i32 %v1_38ad4 to i32*
  %v3_38ad4 = load i32, i32* %v2_38ad4, align 4
  ret i32 %v3_38ad4

; uselistorder directives
  uselistorder i8 16, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32 76145733, { 3, 4, 5, 6, 7, 9, 8, 0, 1, 2 }
}

define i32 @function_38aef() local_unnamed_addr {
dec_label_pc_38aef:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38aef = load i32, i32* %ecx.global-to-local, align 4
  %v1_38aef = add i32 %v0_38aef, -1
  store i32 %v1_38aef, i32* %ecx.global-to-local, align 4
  %v0_38af1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38af1
}

define i32 @function_38b28(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b28:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_38b2c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38b18_type* @global_var_38b18.2537 to i32), i32* %arg1, align 4
  %v1_38b52 = call i32 @unknown_48d8a(i32 %tmp99)
  %v1_38b61 = call i32 @function_38b6e()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38b18_type* @global_var_38b18.2537 to i32), { 1, 0 }
}

define i32 @function_38b6e() local_unnamed_addr {
dec_label_pc_38b6e:
  %v0_38b6e = load i32, i32* @ebp, align 4
  %v1_38b6e = add i32 %v0_38b6e, -12
  %v2_38b6e = inttoptr i32 %v1_38b6e to i32*
  %v3_38b6e = load i32, i32* %v2_38b6e, align 4
  %v2_38b71 = xor i32 %v3_38b6e, 30
  %v3_38b71 = icmp eq i32 %v2_38b71, 0
  store i32 %v2_38b71, i32* @eax, align 8
  br i1 %v3_38b71, label %bb, label %dec_label_pc_38b7a

bb:                                               ; preds = %dec_label_pc_38b6e
  %v1_38b78 = call i32 @function_38b7f()
  br label %dec_label_pc_38b7a

dec_label_pc_38b7a:                               ; preds = %bb, %dec_label_pc_38b6e
  %v2_38b78 = phi i32 [ %v1_38b78, %bb ], [ %v2_38b71, %dec_label_pc_38b6e ]
  ret i32 %v2_38b78
}

define i32 @function_38b7f() local_unnamed_addr {
dec_label_pc_38b7f:
  %v0_38b80 = load i32, i32* @eax, align 8
  ret i32 %v0_38b80
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev() {
dec_label_pc_38b82:
  %eax.global-to-local = alloca i32, align 4
  %v2_38b83 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_38b83
}

define i32 @function_38b86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38b86:
  %v0_38b86 = load i32, i32* @eax, align 8
  ret i32 %v0_38b86
}

define i32 @function_38b8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b8c:
  %v0_38b8c = load i32, i32* @ebp, align 4
  %v1_38b8c = add i32 %v0_38b8c, 1
  store i32 %v1_38b8c, i32* @ebp, align 4
  %v2_38b94 = add i32 %v0_38b8c, -11
  %v3_38b94 = inttoptr i32 %v2_38b94 to i32*
  store i32 30, i32* %v3_38b94, align 4
  %v0_38b99 = load i32, i32* @ebp, align 4
  %v1_38b99 = add i32 %v0_38b99, -28
  %v2_38b99 = inttoptr i32 %v1_38b99 to i32*
  %v3_38b99 = load i32, i32* %v2_38b99, align 4
  %v1_38b9f = call i32 @unknown_716ae(i32 %v3_38b99)
  %v0_38ba4 = load i32, i32* @ebp, align 4
  %v1_38ba4 = add i32 %v0_38ba4, -28
  %v2_38ba4 = inttoptr i32 %v1_38ba4 to i32*
  %v3_38ba4 = load i32, i32* %v2_38ba4, align 4
  ret i32 %v3_38ba4
}

define i32 @function_38bbf() local_unnamed_addr {
dec_label_pc_38bbf:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_38bbf = load i32, i32* %ecx.global-to-local, align 4
  %v1_38bbf = add i32 %v0_38bbf, -1
  store i32 %v1_38bbf, i32* %ecx.global-to-local, align 4
  %v0_38bc1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38bc1
}

define i32 @function_38c0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_38c0a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38c40:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38c42(i32 %arg1) local_unnamed_addr {
dec_label_pc_38c42:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38c86(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38c86:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38c9c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38c9c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38dca(i32 %arg1) local_unnamed_addr {
dec_label_pc_38dca:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_38e46(i32 %arg1) local_unnamed_addr {
dec_label_pc_38e46:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3900a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3900a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_390c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_390c4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39152(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39152:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3919a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3919a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_39200:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3923e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3923e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3957c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_396ac(i32) local_unnamed_addr

define i32 @function_3970e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3970e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39732(i32 %arg1) local_unnamed_addr {
dec_label_pc_39732:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39770(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_39770:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3978a(i32) local_unnamed_addr

declare i32 @unknown_3978c(i32) local_unnamed_addr

define i32 @function_39842(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39842:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_39889(i32, i32) local_unnamed_addr

define i32 @function_398e3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_398e3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_398fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_398fc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZTSN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39940:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3997a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3997a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39a3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_39a3c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39ab4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39ab4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39c6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_39c6e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39c7a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39c7a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_39c9e(i32) local_unnamed_addr

define i32 @function_39d55(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39d55:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39d8d(i32 %arg1) local_unnamed_addr {
dec_label_pc_39d8d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39dbc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39dbc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39df8:
  %v1_39e15 = call i32 @unknown_537d2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_39e24 = call i32 @function_39e2b()
  ret i32 %v1_39e24
}

define i32 @function_39e2b() local_unnamed_addr {
dec_label_pc_39e2b:
  %v0_39e2c = load i32, i32* @eax, align 8
  ret i32 %v0_39e2c
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39e2e:
  %v1_39e4b = call i32 @unknown_538e2(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_39e5a = call i32 @function_39e61()
  ret i32 %v1_39e5a
}

define i32 @function_39e61() local_unnamed_addr {
dec_label_pc_39e61:
  %v0_39e62 = load i32, i32* @eax, align 8
  ret i32 %v0_39e62
}

define i32 @_ZN13CMedianFilterIxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39e64:
  %v1_39e7f = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v1_39e85 = call i32 @unknown_50da6(i32 %v1_39e7f)
  %v1_39e90 = call i32 @unknown_50da6(i32 %arg1)
  store i32 0, i32* @eax, align 8
  %v1_39e9f = call i32 @function_39ebf()
  store i32 %v1_39e9f, i32* @eax, align 8
  %v0_39ea1 = call i32 @function_39eba()
  ret i32 %v0_39ea1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_50da6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_39ea4() local_unnamed_addr {
dec_label_pc_39ea4:
  %eax.global-to-local = alloca i32, align 4
  %v0_39ea4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_39ea4
}

define i32 @function_39eba() local_unnamed_addr {
dec_label_pc_39eba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_39ebf() local_unnamed_addr {
dec_label_pc_39ebf:
  %v0_39ec4 = load i32, i32* @eax, align 8
  ret i32 %v0_39ec4
}

define i32 @_ZN17LockedPageManagerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_39ec6:
  ret i32 %arg1
}

define i32 @function_39ee5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39ee5:
  %v2_39ee5 = load i32, i32* @ecx, align 4
  %v3_39ee5 = load i32, i32* @eax, align 8
  %v4_39ee5 = and i32 %v3_39ee5, %v2_39ee5
  %v12_39ee5 = inttoptr i32 %v2_39ee5 to i32*
  store i32 %v4_39ee5, i32* %v12_39ee5, align 4
  %v0_39ee7 = load i32, i32* @ebx, align 4
  %v1_39ee7 = add i32 %v0_39ee7, 862319685
  %v2_39ee7 = inttoptr i32 %v1_39ee7 to i8*
  %v3_39ee7 = load i8, i8* %v2_39ee7, align 1
  %v4_39ee7 = load i32, i32* @ecx, align 4
  %v5_39ee7 = trunc i32 %v4_39ee7 to i8
  %v6_39ee7 = add i8 %v5_39ee7, %v3_39ee7
  store i8 %v6_39ee7, i8* %v2_39ee7, align 1
  %v0_39eed = load i32, i32* @eax, align 8
  %v1_39eed = add i32 %v0_39eed, ptrtoint (i32* @global_var_14.2373 to i32)
  %v10_39eed = icmp eq i32 %v1_39eed, 0
  store i32 %v1_39eed, i32* @eax, align 8
  br i1 %v10_39eed, label %bb, label %dec_label_pc_39ef4

bb:                                               ; preds = %dec_label_pc_39ee5
  %v1_39ef2 = call i32 @function_39ef9()
  br label %dec_label_pc_39ef4

dec_label_pc_39ef4:                               ; preds = %bb, %dec_label_pc_39ee5
  %v2_39ef2 = phi i32 [ %v1_39ef2, %bb ], [ %v1_39eed, %dec_label_pc_39ee5 ]
  ret i32 %v2_39ef2

; uselistorder directives
  uselistorder i32 %v2_39ee5, { 1, 0 }
  uselistorder i32 862319685, { 20, 21, 22, 23, 19, 24, 29, 25, 28, 26, 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
}

define i32 @function_39ef9() local_unnamed_addr {
dec_label_pc_39ef9:
  %v0_39efa = load i32, i32* @eax, align 8
  ret i32 %v0_39efa
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_39efc:
  %v1_39f16 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_39f16 = inttoptr i32 %v1_39f16 to i32*
  %v3_39f16 = load i32, i32* %v2_39f16, align 4
  %v1_39f1c = call i32 @unknown_6e3a5(i32 %v3_39f16)
  store i32 0, i32* @eax, align 8
  %v1_39f2b = call i32 @function_39f32()
  ret i32 %v1_39f2b
}

define i32 @function_39f32() local_unnamed_addr {
dec_label_pc_39f32:
  %v0_39f33 = load i32, i32* @eax, align 8
  ret i32 %v0_39f33
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_39f34:
  store i32 0, i32* @eax, align 8
  %v3_39f60 = call i32 @function_39f67(i32 %arg2, i32 %arg1)
  ret i32 %v3_39f60
}

define i32 @function_39f67(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39f67:
  %v0_39f68 = load i32, i32* @eax, align 8
  ret i32 %v0_39f68
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_39f6a:
  %v1_39f84 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_39f84 = inttoptr i32 %v1_39f84 to i32*
  %v3_39f84 = load i32, i32* %v2_39f84, align 4
  %v1_39f8a = call i32 @unknown_6e31d(i32 %v3_39f84)
  store i32 0, i32* @eax, align 8
  %v1_39f99 = call i32 @function_39fa0()
  ret i32 %v1_39f99
}

define i32 @function_39fa0() local_unnamed_addr {
dec_label_pc_39fa0:
  %v0_39fa1 = load i32, i32* @eax, align 8
  ret i32 %v0_39fa1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_39fa2:
  ret i32 0
}

define i32 @function_39fbf(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39fbf:
  store i32 0, i32* @eax, align 8
  %v0_39fc4 = load i32, i32* @ebp, align 4
  %v1_39fc4 = add i32 %v0_39fc4, -12
  %v2_39fc4 = inttoptr i32 %v1_39fc4 to i32*
  %v3_39fc4 = load i32, i32* %v2_39fc4, align 4
  %v3_39fc7 = icmp eq i32 %v3_39fc4, 30
  br i1 %v3_39fc7, label %bb, label %dec_label_pc_39fd0

bb:                                               ; preds = %dec_label_pc_39fbf
  %v1_39fce = call i32 @function_39fd5()
  br label %dec_label_pc_39fd0

dec_label_pc_39fd0:                               ; preds = %bb, %dec_label_pc_39fbf
  %v2_39fce = phi i32 [ %v1_39fce, %bb ], [ 0, %dec_label_pc_39fbf ]
  ret i32 %v2_39fce
}

define i32 @function_39fd5() local_unnamed_addr {
dec_label_pc_39fd5:
  %v0_39fd6 = load i32, i32* @eax, align 8
  ret i32 %v0_39fd6
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_39fd8:
  %v1_39ff2 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_39ff2 = inttoptr i32 %v1_39ff2 to i32*
  %v3_39ff2 = load i32, i32* %v2_39ff2, align 4
  %v1_39ff8 = call i32 @unknown_6cee9(i32 %v3_39ff2)
  store i32 0, i32* @eax, align 8
  %v1_3a007 = call i32 @function_3a00e()
  ret i32 %v1_3a007
}

define i32 @function_3a00e() local_unnamed_addr {
dec_label_pc_3a00e:
  %v0_3a00f = load i32, i32* @eax, align 8
  ret i32 %v0_3a00f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_3a010:
  store i32 0, i32* @eax, align 8
  %v3_3a03c = call i32 @function_3a043(i32 %arg2, i32 %arg1)
  ret i32 %v3_3a03c
}

define i32 @function_3a043(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a043:
  %v0_3a044 = load i32, i32* @eax, align 8
  ret i32 %v0_3a044
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_3a046:
  %v1_3a060 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3a060 = inttoptr i32 %v1_3a060 to i32*
  %v3_3a060 = load i32, i32* %v2_3a060, align 4
  %v1_3a066 = call i32 @unknown_6ce61(i32 %v3_3a060)
  store i32 0, i32* @eax, align 8
  %v1_3a075 = call i32 @function_3a07c()
  ret i32 %v1_3a075
}

define i32 @function_3a07c() local_unnamed_addr {
dec_label_pc_3a07c:
  %v0_3a07d = load i32, i32* @eax, align 8
  ret i32 %v0_3a07d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_3a07e:
  store i32 0, i32* @eax, align 8
  %v3_3a0aa = call i32 @function_3a0b1(i32 %arg2, i32 %arg1)
  ret i32 %v3_3a0aa
}

define i32 @function_3a0b1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a0b1:
  %v0_3a0b2 = load i32, i32* @eax, align 8
  ret i32 %v0_3a0b2
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a0b4:
  %v5_3a0b4 = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_3a0b9 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.2371(i32 %v5_3a0b4)
  ret i32 %v2_3a0b9

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.2371, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.2371(i32 %arg1) {
dec_label_pc_3a0bc:
  ret i32 30
}

define i32 @function_3a0d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a0d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a0d7 = load i32, i32* @eax, align 8
  %v1_3a0d7 = trunc i32 %v0_3a0d7 to i8
  %v2_3a0d7 = and i8 %v1_3a0d7, 28
  %v8_3a0d7 = zext i8 %v2_3a0d7 to i32
  %v10_3a0d7 = and i32 %v0_3a0d7, -256
  %v11_3a0d7 = or i32 %v8_3a0d7, %v10_3a0d7
  store i32 %v11_3a0d7, i32* %eax.global-to-local, align 8
  %v1_3a0d9 = inttoptr i32 %v11_3a0d7 to i8*
  %v2_3a0d9 = load i8, i8* %v1_3a0d9, align 4
  %v5_3a0d9 = add i8 %v2_3a0d9, %v2_3a0d7
  store i8 %v5_3a0d9, i8* %v1_3a0d9, align 4
  %v0_3a0db = load i32, i32* %eax.global-to-local, align 8
  %v2_3a0db = load i32, i32* @ecx, align 4
  %v3_3a0db = udiv i32 %v2_3a0db, 256
  %v5_3a0db = add i32 %v3_3a0db, %v0_3a0db
  %v20_3a0db = and i32 %v5_3a0db, 255
  %v22_3a0db = and i32 %v0_3a0db, -256
  %v23_3a0db = or i32 %v20_3a0db, %v22_3a0db
  store i32 %v23_3a0db, i32* %eax.global-to-local, align 8
  ret i32 %v23_3a0db

; uselistorder directives
  uselistorder i32 %v0_3a0db, { 1, 0 }
  uselistorder i32 256, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 25, 20, 0, 21, 22, 23 }
}

define i32 @function_3a0e0() local_unnamed_addr {
dec_label_pc_3a0e0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a0e0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a0e0 = add i32 %v0_3a0e0, -465204285
  %v2_3a0e0 = inttoptr i32 %v1_3a0e0 to i32*
  %v3_3a0e0 = load i32, i32* %v2_3a0e0, align 4
  %v4_3a0e0 = add i32 %v3_3a0e0, -1
  store i32 %v4_3a0e0, i32* %v2_3a0e0, align 4
  %v0_3a0e6 = load i32, i32* %eax.global-to-local, align 8
  %v0_3a0ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_3a0ed = call i32 @unknown_65c16(i32 %v0_3a0ea, i32 %v0_3a0e6)
  store i32 %v0_3a0ea, i32* %eax.global-to-local, align 8
  %v1_3a0f4 = icmp eq i32 %v0_3a0ea, 0
  br i1 %v1_3a0f4, label %dec_label_pc_3a102, label %dec_label_pc_3a0f8

dec_label_pc_3a0f8:                               ; preds = %dec_label_pc_3a0e0
  %v1_3a0f8 = add i32 %v0_3a0ea, ptrtoint (i8** @global_var_18.2447 to i32)
  br label %dec_label_pc_3a102

dec_label_pc_3a102:                               ; preds = %dec_label_pc_3a0e0, %dec_label_pc_3a0f8
  %storemerge = phi i32 [ %v1_3a0f8, %dec_label_pc_3a0f8 ], [ 0, %dec_label_pc_3a0e0 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_3a102 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a102 = add i32 %v0_3a102, -12
  %v2_3a102 = inttoptr i32 %v1_3a102 to i32*
  %v3_3a102 = load i32, i32* %v2_3a102, align 4
  %v3_3a105 = icmp eq i32 %v3_3a102, 30
  br i1 %v3_3a105, label %bb, label %dec_label_pc_3a10e

bb:                                               ; preds = %dec_label_pc_3a102
  %v1_3a10c = call i32 @function_3a129()
  store i32 %v1_3a10c, i32* @eax, align 8
  br label %dec_label_pc_3a10e

dec_label_pc_3a10e:                               ; preds = %bb, %dec_label_pc_3a102
  %v0_3a10e = call i32 @function_3a124()
  store i32 %v0_3a10e, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a10e

; uselistorder directives
  uselistorder i32 %v0_3a0ea, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_3a102, { 1, 0 }
}

define i32 @function_3a124() local_unnamed_addr {
dec_label_pc_3a124:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a129() local_unnamed_addr {
dec_label_pc_3a129:
  %v0_3a12f = load i32, i32* @eax, align 8
  ret i32 %v0_3a12f
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a130:
  %v5_3a130 = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_3a135 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %v5_3a130)
  ret i32 %v2_3a135

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_3a138:
  ret i32 0
}

define i32 @function_3a156(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a156:
  %v2_3a156 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3a156 = load i32, i32* @eax, align 8
  %v4_3a156 = trunc i32 %v3_3a156 to i8
  %v5_3a156 = add i8 %v4_3a156, %v2_3a156
  %v21_3a156 = inttoptr i32 %v3_3a156 to i8*
  store i8 %v5_3a156, i8* %v21_3a156, align 1
  %v22_3a156 = load i32, i32* @eax, align 8
  ret i32 %v22_3a156
}

define i32 @function_3a15e() local_unnamed_addr {
dec_label_pc_3a15e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a15e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a15e
}

define i32 @function_3a16b() local_unnamed_addr {
dec_label_pc_3a16b:
  %v0_3a170 = call i32 @function_448ca177()
  ret i32 %v0_3a170
}

define i32 @function_3a186(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a186:
  %v0_3a186 = load i32, i32* @ecx, align 4
  %v1_3a186 = add i32 %v0_3a186, 605850054
  %v2_3a186 = inttoptr i32 %v1_3a186 to i32*
  %v3_3a186 = load i32, i32* %v2_3a186, align 4
  %v4_3a186 = add i32 %v3_3a186, -1
  store i32 %v4_3a186, i32* %v2_3a186, align 4
  %v21_3a186 = load i32, i32* @eax, align 8
  ret i32 %v21_3a186
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_3a19c:
  ret i32 %arg1
}

define i32 @function_3a1b6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3a1b6:
  %v0_3a1b6 = load i32, i32* @eax, align 8
  %v1_3a1b6 = add i32 %v0_3a1b6, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3a1b6 = inttoptr i32 %v1_3a1b6 to i32*
  %v3_3a1b6 = load i32, i32* %v2_3a1b6, align 4
  %v1_3a1bc = call i32 @unknown_66120(i32 %v3_3a1b6)
  %v0_3a1c1 = load i32, i32* @ebp, align 4
  %v1_3a1c1 = add i32 %v0_3a1c1, -12
  %v2_3a1c1 = inttoptr i32 %v1_3a1c1 to i32*
  %v3_3a1c1 = load i32, i32* %v2_3a1c1, align 4
  %v2_3a1c4 = xor i32 %v3_3a1c1, 30
  %v3_3a1c4 = icmp eq i32 %v2_3a1c4, 0
  store i32 %v2_3a1c4, i32* @eax, align 8
  br i1 %v3_3a1c4, label %bb, label %dec_label_pc_3a1cd

bb:                                               ; preds = %dec_label_pc_3a1b6
  %v1_3a1cb = call i32 @function_3a1d2()
  br label %dec_label_pc_3a1cd

dec_label_pc_3a1cd:                               ; preds = %bb, %dec_label_pc_3a1b6
  %v2_3a1cb = phi i32 [ %v1_3a1cb, %bb ], [ %v2_3a1c4, %dec_label_pc_3a1b6 ]
  ret i32 %v2_3a1cb
}

define i32 @function_3a1d2() local_unnamed_addr {
dec_label_pc_3a1d2:
  %v0_3a1d3 = load i32, i32* @eax, align 8
  ret i32 %v0_3a1d3
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPvENS3_5list1INS3_5valueIS5_EEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_3a1d4:
  store i32 0, i32* @eax, align 8
  %v3_3a200 = call i32 @function_3a207(i32 %arg2, i32 %arg1)
  ret i32 %v3_3a200
}

define i32 @function_3a207(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a207:
  %v0_3a208 = load i32, i32* @eax, align 8
  ret i32 %v0_3a208
}

define i32 @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEE7disposeEv(i32 %arg1) {
dec_label_pc_3a20a:
  %v1_3a224 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3a224 = inttoptr i32 %v1_3a224 to i32*
  %v3_3a224 = load i32, i32* %v2_3a224, align 4
  %v1_3a22a = add i32 %arg1, ptrtoint (i8** @global_var_10.2429 to i32)
  %v3_3a234 = call i32 @unknown_4d1de(i32 %v1_3a22a, i32 %v3_3a224)
  store i32 0, i32* @eax, align 8
  %v1_3a243 = call i32 @function_3a24a()
  ret i32 %v1_3a243

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3a24a() local_unnamed_addr {
dec_label_pc_3a24a:
  %v0_3a24b = load i32, i32* @eax, align 8
  ret i32 %v0_3a24b
}

define i32 @_ZN5boost6detail18sp_counted_impl_pdIPSiNS_15program_options6detail12null_deleterEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_3a24c:
  ret i32 0
}

define i32 @function_3a26a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a26a:
  %v0_3a26b = load i32, i32* @eax, align 8
  %v11_3a26b = and i32 %v0_3a26b, or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256)
  ret i32 %v11_3a26b

; uselistorder directives
  uselistorder i32 or (i32 zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32), i32 -256), { 0, 1, 14, 2, 3, 4, 5, 6, 7, 8, 15, 9, 10, 11, 12, 13 }
}

define i32 @function_3a26e() local_unnamed_addr {
dec_label_pc_3a26e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a26e = load i32, i32* %eax.global-to-local, align 8
  %v0_3a273 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a273 = add i32 %v0_3a273, -1
  store i32 %v1_3a273, i32* %ecx.global-to-local, align 4
  %v2_3a275 = add i32 %v0_3a26e, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v16_3a275 = and i32 %v2_3a275, 255
  %v18_3a275 = and i32 %v0_3a26e, -256
  %v19_3a275 = or i32 %v16_3a275, %v18_3a275
  store i32 %v19_3a275, i32* %eax.global-to-local, align 8
  %v0_3a277 = call i32 @unknown_4a318()
  store i32 %v0_3a277, i32* %eax.global-to-local, align 8
  %v4_3a27c = trunc i32 %v0_3a277 to i8
  %v5_3a27c = icmp eq i8 %v4_3a27c, 0
  %v0_3a28d.pre = load i32, i32* @ebp, align 4
  br i1 %v5_3a27c, label %dec_label_pc_3a28d, label %dec_label_pc_3a280

dec_label_pc_3a280:                               ; preds = %dec_label_pc_3a26e
  %v1_3a280 = add i32 %v0_3a28d.pre, -28
  %v2_3a280 = inttoptr i32 %v1_3a280 to i32*
  %v3_3a280 = load i32, i32* %v2_3a280, align 4
  store i32 %v3_3a280, i32* %eax.global-to-local, align 8
  %v1_3a283 = add i32 %v3_3a280, ptrtoint (i8** @global_var_10.2429 to i32)
  br label %dec_label_pc_3a28d

dec_label_pc_3a28d:                               ; preds = %dec_label_pc_3a26e, %dec_label_pc_3a280
  %storemerge = phi i32 [ %v1_3a283, %dec_label_pc_3a280 ], [ 0, %dec_label_pc_3a26e ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_3a28d = add i32 %v0_3a28d.pre, -12
  %v2_3a28d = inttoptr i32 %v1_3a28d to i32*
  %v3_3a28d = load i32, i32* %v2_3a28d, align 4
  %v3_3a290 = icmp eq i32 %v3_3a28d, 30
  br i1 %v3_3a290, label %bb, label %dec_label_pc_3a299

bb:                                               ; preds = %dec_label_pc_3a28d
  %v1_3a297 = call i32 @function_3a29e()
  store i32 %v1_3a297, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3a299

dec_label_pc_3a299:                               ; preds = %bb, %dec_label_pc_3a28d
  %v2_3a297 = phi i32 [ %v1_3a297, %bb ], [ %storemerge, %dec_label_pc_3a28d ]
  ret i32 %v2_3a297

; uselistorder directives
  uselistorder i32 %v0_3a26e, { 1, 0 }
  uselistorder i8** @global_var_10.2429, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_10.2429 to i32), { 93, 92, 91, 90, 89, 0, 1, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 2, 57, 56, 55, 54, 53, 52, 3, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i8 0, { 18, 136, 137, 60, 231, 232, 233, 234, 235, 147, 61, 148, 149, 151, 152, 150, 62, 63, 64, 65, 123, 153, 154, 155, 66, 2, 129, 99, 19, 285, 157, 158, 159, 160, 161, 162, 163, 74, 67, 3, 164, 165, 166, 167, 168, 254, 255, 256, 139, 140, 68, 249, 250, 69, 265, 70, 71, 247, 245, 246, 175, 177, 72, 73, 280, 141, 181, 264, 10, 75, 76, 187, 28, 29, 115, 77, 191, 192, 193, 194, 195, 78, 79, 80, 170, 171, 172, 81, 4, 84, 82, 83, 169, 85, 182, 183, 184, 185, 186, 144, 145, 207, 208, 216, 217, 218, 196, 11, 198, 197, 86, 87, 5, 199, 88, 89, 90, 91, 20, 92, 179, 180, 178, 202, 209, 210, 212, 213, 211, 93, 94, 95, 96, 21, 284, 97, 6, 200, 22, 220, 221, 98, 237, 236, 238, 12, 205, 239, 100, 101, 102, 23, 24, 230, 103, 104, 105, 25, 106, 107, 108, 109, 110, 111, 112, 113, 114, 13, 0, 116, 117, 118, 16, 119, 121, 122, 8, 120, 17, 124, 126, 127, 9, 125, 128, 130, 131, 132, 133, 134, 135, 138, 142, 143, 146, 156, 26, 7, 27, 173, 174, 251, 252, 253, 176, 281, 188, 189, 190, 275, 201, 203, 204, 206, 215, 214, 266, 219, 222, 223, 224, 225, 226, 227, 228, 229, 32, 33, 30, 31, 34, 35, 36, 37, 40, 41, 38, 39, 42, 43, 44, 45, 240, 46, 47, 48, 49, 50, 51, 282, 283, 52, 53, 54, 241, 242, 243, 14, 244, 248, 259, 260, 257, 258, 261, 262, 263, 55, 270, 271, 1, 268, 267, 269, 272, 273, 274, 56, 57, 58, 59, 276, 277, 278, 279, 15 }
  uselistorder label %dec_label_pc_3a28d, { 1, 0 }
}

define i32 @function_3a29e() local_unnamed_addr {
dec_label_pc_3a29e:
  %v0_3a29f = load i32, i32* @eax, align 8
  ret i32 %v0_3a29f
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPvENS2_5list1INS2_5valueIS4_EEEEEEE3runEv(i32 %arg1) {
dec_label_pc_3a2a0:
  %v1_3a2ba = add i32 %arg1, 260
  %v1_3a2c2 = call i32 @unknown_74a72(i32 %v1_3a2ba)
  store i32 0, i32* @eax, align 8
  %v1_3a2d1 = call i32 @function_3a2d8()
  ret i32 %v1_3a2d1
}

define i32 @function_3a2d8() local_unnamed_addr {
dec_label_pc_3a2d8:
  %v0_3a2d9 = load i32, i32* @eax, align 8
  ret i32 %v0_3a2d9
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_3a2da:
  %v1_3a2f4 = add i32 %arg1, ptrtoint (i32* @global_var_c.2390 to i32)
  %v2_3a2f4 = inttoptr i32 %v1_3a2f4 to i32*
  %v3_3a2f4 = load i32, i32* %v2_3a2f4, align 4
  %v1_3a2fa = call i32 @unknown_5cb55(i32 %v3_3a2f4)
  store i32 0, i32* @eax, align 8
  %v1_3a309 = call i32 @function_3a310()
  ret i32 %v1_3a309

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_c.2390 to i32), { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 1, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 0, 142, 143 }
}

define i32 @function_3a310() local_unnamed_addr {
dec_label_pc_3a310:
  %v0_3a311 = load i32, i32* @eax, align 8
  ret i32 %v0_3a311
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_3a312:
  store i32 0, i32* @eax, align 8
  %v3_3a33e = call i32 @function_3a345(i32 %arg2, i32 %arg1)
  ret i32 %v3_3a33e
}

define i32 @function_3a345(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a345:
  %v0_3a346 = load i32, i32* @eax, align 8
  ret i32 %v0_3a346
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a348:
  %v4_3a348 = add i32 %arg1, -28
  %v1_3a34d = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %v4_3a348)
  ret i32 %v1_3a34d

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) {
dec_label_pc_3a350:
  ret i32 0
}

define i32 @function_3a374() local_unnamed_addr {
dec_label_pc_3a374:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a374 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a374 = add i32 %v0_3a374, -465204285
  %v2_3a374 = inttoptr i32 %v1_3a374 to i32*
  %v3_3a374 = load i32, i32* %v2_3a374, align 4
  %v4_3a374 = add i32 %v3_3a374, -1
  store i32 %v4_3a374, i32* %v2_3a374, align 4
  %v0_3a37a = load i32, i32* %eax.global-to-local, align 8
  %v0_3a37e = load i32, i32* %ebx.global-to-local, align 4
  %v2_3a381 = call i32 @unknown_5231c(i32 %v0_3a37e, i32 %v0_3a37a)
  store i32 %v0_3a37e, i32* %eax.global-to-local, align 8
  %v1_3a388 = icmp eq i32 %v0_3a37e, 0
  br i1 %v1_3a388, label %dec_label_pc_3a396, label %dec_label_pc_3a38c

dec_label_pc_3a38c:                               ; preds = %dec_label_pc_3a374
  %v1_3a38c = add i32 %v0_3a37e, 28
  br label %dec_label_pc_3a396

dec_label_pc_3a396:                               ; preds = %dec_label_pc_3a374, %dec_label_pc_3a38c
  %storemerge = phi i32 [ %v1_3a38c, %dec_label_pc_3a38c ], [ 0, %dec_label_pc_3a374 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_3a396 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a396 = add i32 %v0_3a396, -12
  %v2_3a396 = inttoptr i32 %v1_3a396 to i32*
  %v3_3a396 = load i32, i32* %v2_3a396, align 4
  %v3_3a399 = icmp eq i32 %v3_3a396, 30
  br i1 %v3_3a399, label %bb, label %dec_label_pc_3a3a2

bb:                                               ; preds = %dec_label_pc_3a396
  %v1_3a3a0 = call i32 @function_3a3bd()
  store i32 %v1_3a3a0, i32* @eax, align 8
  br label %dec_label_pc_3a3a2

dec_label_pc_3a3a2:                               ; preds = %bb, %dec_label_pc_3a396
  %v0_3a3a2 = call i32 @function_3a3b8()
  store i32 %v0_3a3a2, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a3a2

; uselistorder directives
  uselistorder i32 %v0_3a37e, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_3a396, { 1, 0 }
}

define i32 @function_3a3b6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a3b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a3b8() local_unnamed_addr {
dec_label_pc_3a3b8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a3bd() local_unnamed_addr {
dec_label_pc_3a3bd:
  %v0_3a3c3 = load i32, i32* @eax, align 8
  ret i32 %v0_3a3c3
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a3c4:
  %v4_3a3c4 = add i32 %arg1, -28
  %v1_3a3c9 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %v4_3a3c4)
  ret i32 %v1_3a3c9

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_3a3cc:
  ret i32 %arg1
}

define i32 @function_3a3da(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a3da:
  %v1_3a3e0 = load i32, i32* @ebp, align 4
  %v2_3a3e0 = add i32 %v1_3a3e0, -12
  %v3_3a3e0 = inttoptr i32 %v2_3a3e0 to i32*
  store i32 30, i32* %v3_3a3e0, align 4
  ret i32 0
}

define i32 @function_3a3f2() local_unnamed_addr {
dec_label_pc_3a3f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a3f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a3f2
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a430:
  %v4_3a430 = add i32 %arg1, -28
  %v1_3a435 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %v4_3a430)
  ret i32 %v1_3a435

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_3a438:
  ret i32 0
}

define i32 @function_3a456(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a456:
  %v2_3a456 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3a456 = load i32, i32* @eax, align 8
  %v4_3a456 = trunc i32 %v3_3a456 to i8
  %v5_3a456 = add i8 %v4_3a456, %v2_3a456
  %v21_3a456 = inttoptr i32 %v3_3a456 to i8*
  store i8 %v5_3a456, i8* %v21_3a456, align 1
  %v22_3a456 = load i32, i32* @eax, align 8
  ret i32 %v22_3a456
}

define i32 @function_3a45c() local_unnamed_addr {
dec_label_pc_3a45c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a45c = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a45c = add i32 %v0_3a45c, -465204285
  %v2_3a45c = inttoptr i32 %v1_3a45c to i32*
  %v3_3a45c = load i32, i32* %v2_3a45c, align 4
  %v4_3a45c = add i32 %v3_3a45c, -1
  store i32 %v4_3a45c, i32* %v2_3a45c, align 4
  %v0_3a462 = load i32, i32* %eax.global-to-local, align 8
  %v0_3a466 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3a469 = call i32 @unknown_4dbe6(i32 %v0_3a466, i32 %v0_3a462)
  store i32 %v0_3a466, i32* %eax.global-to-local, align 8
  %v1_3a470 = icmp eq i32 %v0_3a466, 0
  br i1 %v1_3a470, label %dec_label_pc_3a47e, label %dec_label_pc_3a474

dec_label_pc_3a474:                               ; preds = %dec_label_pc_3a45c
  %v1_3a474 = add i32 %v0_3a466, 28
  br label %dec_label_pc_3a47e

dec_label_pc_3a47e:                               ; preds = %dec_label_pc_3a45c, %dec_label_pc_3a474
  %storemerge = phi i32 [ %v1_3a474, %dec_label_pc_3a474 ], [ 0, %dec_label_pc_3a45c ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_3a47e = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a47e = add i32 %v0_3a47e, -12
  %v2_3a47e = inttoptr i32 %v1_3a47e to i32*
  %v3_3a47e = load i32, i32* %v2_3a47e, align 4
  %v3_3a481 = icmp eq i32 %v3_3a47e, 30
  br i1 %v3_3a481, label %bb, label %dec_label_pc_3a48a

bb:                                               ; preds = %dec_label_pc_3a47e
  %v1_3a488 = call i32 @function_3a4a5()
  store i32 %v1_3a488, i32* @eax, align 8
  br label %dec_label_pc_3a48a

dec_label_pc_3a48a:                               ; preds = %bb, %dec_label_pc_3a47e
  %v0_3a48a = call i32 @function_3a4a0()
  store i32 %v0_3a48a, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a48a

; uselistorder directives
  uselistorder i32 %v0_3a466, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_3a47e, { 1, 0 }
}

declare i32 @_ZdlPv.1531(i32) local_unnamed_addr

define i32 @function_3a4a0() local_unnamed_addr {
dec_label_pc_3a4a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a4a5() local_unnamed_addr {
dec_label_pc_3a4a5:
  %v0_3a4ab = load i32, i32* @eax, align 8
  ret i32 %v0_3a4ab
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv() local_unnamed_addr {
dec_label_pc_3a4ac:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_3a4ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a4ae:
  %v0_3a4ae = load i32, i32* @eax, align 8
  %v2_3a4ae = and i32 %v0_3a4ae, zext (i8 ptrtoint (i32* @global_var_4.2376 to i8) to i32)
  %v4_3a4b0 = sub nsw i32 %v2_3a4ae, zext (i8 ptrtoint ([5 x i8]* @global_var_eb.2611 to i8) to i32)
  %v31_3a4b0 = and i32 %v4_3a4b0, 255
  %v33_3a4b0 = and i32 %v0_3a4ae, -256
  %v34_3a4b0 = or i32 %v31_3a4b0, %v33_3a4b0
  ret i32 %v34_3a4b0

; uselistorder directives
  uselistorder i32 %v0_3a4ae, { 1, 0 }
  uselistorder i8 ptrtoint (i32* @global_var_4.2376 to i8), { 1, 2, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_3a4b4:
  ret i32 0
}

define i32 @function_3a4da() local_unnamed_addr {
dec_label_pc_3a4da:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a4da = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a4da
}

define i32 @function_3a4e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a4e6:
  %v0_3a4e6 = load i1, i1* @sf, align 1
  br i1 %v0_3a4e6, label %bb, label %dec_label_pc_3a4e6.dec_label_pc_3a4e8_crit_edge

dec_label_pc_3a4e6.dec_label_pc_3a4e8_crit_edge:  ; preds = %dec_label_pc_3a4e6
  %v2_3a4e8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3a4e8

bb:                                               ; preds = %dec_label_pc_3a4e6
  %v1_3a4e6 = call i32 @function_3a51f()
  br label %dec_label_pc_3a4e8

dec_label_pc_3a4e8:                               ; preds = %dec_label_pc_3a4e6.dec_label_pc_3a4e8_crit_edge, %bb
  %v20_3a4e8 = phi i32 [ %v2_3a4e8.pre, %dec_label_pc_3a4e6.dec_label_pc_3a4e8_crit_edge ], [ %v1_3a4e6, %bb ]
  %v4_3a4e8 = mul i32 %v20_3a4e8, 2
  %v21_3a4e8 = inttoptr i32 %v20_3a4e8 to i32*
  store i32 %v4_3a4e8, i32* %v21_3a4e8, align 4
  ret i32 96694

; uselistorder directives
  uselistorder i32 %v20_3a4e8, { 1, 0 }
  uselistorder i32 2, { 7, 8, 9, 10, 0, 11, 67, 12, 13, 14, 68, 15, 1, 16, 69, 70, 17, 18, 19, 71, 72, 73, 74, 86, 2, 3, 20, 21, 87, 22, 75, 88, 23, 24, 66, 76, 77, 78, 89, 90, 79, 25, 80, 26, 27, 81, 91, 92, 4, 93, 82, 83, 84, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 94, 95, 96, 46, 45, 47, 85, 98, 48, 49, 99, 5, 65, 97, 6, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i1* @sf, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_3a4e8, { 1, 0 }
}

define i32 @function_3a4fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a4fa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a518:
  %v4_3a518 = add i32 %arg1, -28
  %v1_3a51d = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %v4_3a518)
  ret i32 %v1_3a51d

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @function_3a51f() local_unnamed_addr {
dec_label_pc_3a51f:
  %v0_3a51f = load i32, i32* @eax, align 8
  ret i32 %v0_3a51f
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_3a520:
  ret i32 30
}

define i32 @function_3a536(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a536:
  ret i32 0
}

define i32 @function_3a544() local_unnamed_addr {
dec_label_pc_3a544:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3a544 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a544 = add i32 %v0_3a544, -465204285
  %v2_3a544 = inttoptr i32 %v1_3a544 to i32*
  %v3_3a544 = load i32, i32* %v2_3a544, align 4
  %v4_3a544 = add i32 %v3_3a544, -1
  store i32 %v4_3a544, i32* %v2_3a544, align 4
  %v0_3a54a = load i32, i32* %eax.global-to-local, align 8
  %v0_3a54e = load i32, i32* %ebx.global-to-local, align 4
  %v2_3a551 = call i32 @unknown_4dade(i32 %v0_3a54e, i32 %v0_3a54a)
  store i32 %v0_3a54e, i32* %eax.global-to-local, align 8
  %v1_3a558 = icmp eq i32 %v0_3a54e, 0
  br i1 %v1_3a558, label %dec_label_pc_3a566, label %dec_label_pc_3a55c

dec_label_pc_3a55c:                               ; preds = %dec_label_pc_3a544
  %v1_3a55c = add i32 %v0_3a54e, 28
  br label %dec_label_pc_3a566

dec_label_pc_3a566:                               ; preds = %dec_label_pc_3a544, %dec_label_pc_3a55c
  %storemerge = phi i32 [ %v1_3a55c, %dec_label_pc_3a55c ], [ 0, %dec_label_pc_3a544 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_3a566 = load i32, i32* %ebp.global-to-local, align 4
  %v1_3a566 = add i32 %v0_3a566, -12
  %v2_3a566 = inttoptr i32 %v1_3a566 to i32*
  %v3_3a566 = load i32, i32* %v2_3a566, align 4
  %v3_3a569 = icmp eq i32 %v3_3a566, 30
  br i1 %v3_3a569, label %bb, label %dec_label_pc_3a572

bb:                                               ; preds = %dec_label_pc_3a566
  %v1_3a570 = call i32 @function_3a58d()
  store i32 %v1_3a570, i32* @eax, align 8
  br label %dec_label_pc_3a572

dec_label_pc_3a572:                               ; preds = %bb, %dec_label_pc_3a566
  %v0_3a572 = call i32 @function_3a588()
  store i32 %v0_3a572, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a572

; uselistorder directives
  uselistorder i32 %v0_3a54e, { 2, 1, 0, 3 }
  uselistorder i32 28, { 0, 1, 2, 3, 4, 5, 15, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_3a566, { 1, 0 }
}

define i32 @function_3a588() local_unnamed_addr {
dec_label_pc_3a588:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a58d() local_unnamed_addr {
dec_label_pc_3a58d:
  %v0_3a593 = load i32, i32* @eax, align 8
  ret i32 %v0_3a593
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a594:
  %v4_3a594 = add i32 %arg1, -28
  %v1_3a599 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %v4_3a594)
  ret i32 %v1_3a599

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_3a59c:
  ret i32 %arg1
}

define i32 @function_3a5a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a5a8:
  %v0_3a5a8 = load i32, i32* @ebp, align 4
  %v1_3a5a8 = add i32 %v0_3a5a8, 1
  store i32 %v1_3a5a8, i32* @ebp, align 4
  %v2_3a5b0 = add i32 %v0_3a5a8, -11
  %v3_3a5b0 = inttoptr i32 %v2_3a5b0 to i32*
  store i32 30, i32* %v3_3a5b0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 -11, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 0 }
}

define i32 @function_3a5c2() local_unnamed_addr {
dec_label_pc_3a5c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a5c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a5c2
}

define i32 @function_3a5e4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3a5e4:
  %v0_3a5e4 = load i32, i32* @eax, align 8
  %v2_3a5e4 = load i1, i1* @cf, align 1
  %v3_3a5e4 = zext i1 %v2_3a5e4 to i32
  %v4_3a5e4 = sub i32 %v0_3a5e4, zext (i8 ptrtoint (i8* @global_var_24.2401 to i8) to i32)
  %v5_3a5e4 = add i32 %v4_3a5e4, %v3_3a5e4
  %v31_3a5e4 = and i32 %v5_3a5e4, 255
  %v33_3a5e4 = and i32 %v0_3a5e4, -256
  %v34_3a5e4 = or i32 %v31_3a5e4, %v33_3a5e4
  ret i32 %v34_3a5e4

; uselistorder directives
  uselistorder i32 %v0_3a5e4, { 1, 0 }
  uselistorder i32 -256, { 78, 16, 25, 94, 95, 98, 89, 54, 123, 99, 100, 101, 55, 177, 102, 103, 104, 105, 109, 2, 110, 178, 111, 3, 112, 97, 56, 113, 4, 93, 114, 5, 115, 116, 117, 118, 120, 119, 121, 122, 124, 125, 182, 126, 57, 106, 107, 108, 185, 186, 58, 191, 192, 128, 129, 183, 190, 179, 180, 59, 193, 60, 194, 195, 196, 131, 61, 132, 133, 134, 62, 135, 79, 187, 63, 83, 137, 17, 64, 65, 188, 26, 198, 66, 140, 81, 18, 19, 82, 142, 143, 20, 144, 145, 146, 27, 67, 130, 156, 136, 197, 127, 189, 68, 69, 149, 12, 159, 202, 13, 161, 158, 163, 165, 154, 155, 21, 70, 71, 28, 22, 14, 157, 139, 6, 164, 7, 147, 152, 199, 200, 72, 153, 160, 36, 37, 73, 167, 169, 168, 162, 74, 75, 151, 29, 0, 172, 76, 77, 173, 30, 31, 32, 80, 84, 85, 86, 87, 8, 88, 9, 33, 90, 91, 92, 96, 148, 184, 34, 138, 141, 150, 181, 23, 201, 24, 166, 35, 170, 171, 38, 15, 174, 175, 176, 39, 1, 11, 40, 41, 42, 43, 44, 45, 46, 10, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 255, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 35, 19, 36, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i8* @global_var_24.2401, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_24.2401 to i8), { 2, 7, 6, 5, 1, 3, 0, 4 }
  uselistorder i1* @cf, { 4, 0, 13, 14, 15, 17, 18, 19, 20, 27, 11, 21, 22, 23, 29, 77, 78, 79, 31, 72, 73, 70, 74, 82, 83, 84, 33, 35, 36, 25, 40, 9, 42, 47, 55, 41, 85, 48, 88, 58, 56, 64, 44, 53, 2, 60, 61, 62, 49, 51, 66, 68, 5, 1, 6, 7, 8, 10, 12, 45, 16, 24, 26, 28, 30, 80, 81, 32, 75, 76, 86, 87, 34, 37, 38, 39, 43, 46, 50, 52, 54, 57, 59, 3, 63, 65, 67, 69, 71 }
}

define i32 @function_3a5f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a5f7:
  %v3_3a5f7 = load i32, i32* @eax, align 8
  ret i32 %v3_3a5f7
}

define i32 @_ZN5boost15program_options6detail26basic_config_file_iteratorIcE7getlineERSs(i32 %arg1, i32 %arg2) {
dec_label_pc_3a600:
  ret i32 30
}

define i32 @function_3a619(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a619:
  %v0_3a619 = load i32, i32* @eax, align 8
  %v1_3a619 = load i32, i32* @ebp, align 4
  %v2_3a619 = add i32 %v1_3a619, -12
  %v3_3a619 = inttoptr i32 %v2_3a619 to i32*
  store i32 %v0_3a619, i32* %v3_3a619, align 4
  %v0_3a61e = load i32, i32* @ebp, align 4
  %v1_3a61e = add i32 %v0_3a61e, -20
  ret i32 %v1_3a61e
}

define i32 @function_3a649() local_unnamed_addr {
dec_label_pc_3a649:
  %v0_3a649 = call i32 @function_1128b0c()
  ret i32 %v0_3a649
}

define i32 @function_3a684(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a684:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a692() local_unnamed_addr {
dec_label_pc_3a692:
  %v0_3a697 = call i32 @function_3a69e()
  ret i32 %v0_3a697
}

define i32 @function_3a699() local_unnamed_addr {
dec_label_pc_3a699:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a699 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a699
}

define i32 @function_3a69e() local_unnamed_addr {
dec_label_pc_3a69e:
  %v0_3a69e = load i32, i32* @ebp, align 4
  %v1_3a69e = add i32 %v0_3a69e, -20
  ret i32 %v1_3a69e
}

define i32 @function_3a6a8() local_unnamed_addr {
dec_label_pc_3a6a8:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3a6a8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3a6a8 = add i32 %v0_3a6a8, -195720232
  %v2_3a6a8 = inttoptr i32 %v1_3a6a8 to i32*
  %v3_3a6a8 = load i32, i32* %v2_3a6a8, align 4
  %v4_3a6a8 = add i32 %v3_3a6a8, -1
  store i32 %v4_3a6a8, i32* %v2_3a6a8, align 4
  %v0_3a6ae = load i32, i32* %edx.global-to-local, align 8
  %v2_3a6ae = xor i32 %v0_3a6ae, 30
  %v3_3a6ae = icmp eq i32 %v2_3a6ae, 0
  store i32 %v2_3a6ae, i32* %edx.global-to-local, align 8
  br i1 %v3_3a6ae, label %bb, label %dec_label_pc_3a6b7

bb:                                               ; preds = %dec_label_pc_3a6a8
  %v1_3a6b5 = call i32 @function_3a6e4()
  store i32 %v1_3a6b5, i32* @eax, align 8
  br label %dec_label_pc_3a6b7

dec_label_pc_3a6b7:                               ; preds = %bb, %dec_label_pc_3a6a8
  %v0_3a6b7 = call i32 @function_3a6df()
  ret i32 %v0_3a6b7

; uselistorder directives
  uselistorder i32 -1, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 272, 148, 149, 150, 151, 152, 153, 154, 155, 156, 273, 1, 274, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 275, 201, 202, 203, 204, 205, 206, 207, 277, 208, 209, 210, 211, 276, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 2, 3, 4, 5, 6, 240, 241, 242, 243, 244, 245, 246, 247, 248, 8, 7, 9, 249, 250, 269, 270, 271, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268 }
}

define i32 @function_3a6ba() local_unnamed_addr {
dec_label_pc_3a6ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a6ba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a6ba
}

define i32 @function_3a6c6() local_unnamed_addr {
dec_label_pc_3a6c6:
  %v0_3a6c6 = call i32 @function_3a6ca()
  ret i32 %v0_3a6c6
}

define i32 @function_3a6c8() local_unnamed_addr {
dec_label_pc_3a6c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a6c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a6c8
}

define i32 @function_3a6ca() local_unnamed_addr {
dec_label_pc_3a6ca:
  %v0_3a6ca = load i32, i32* @ebp, align 4
  %v1_3a6ca = add i32 %v0_3a6ca, -20
  ret i32 %v1_3a6ca

; uselistorder directives
  uselistorder i32 -20, { 1, 2, 49, 56, 57, 58, 59, 60, 61, 62, 63, 39, 64, 68, 69, 67, 70, 71, 72, 73, 74, 54, 55, 76, 77, 80, 81, 0, 115, 116, 117, 126, 78, 79, 3, 4, 82, 75, 123, 124, 125, 5, 6, 118, 119, 83, 84, 40, 41, 42, 89, 90, 91, 92, 43, 44, 45, 120, 121, 46, 47, 85, 86, 87, 88, 100, 93, 94, 48, 132, 133, 95, 96, 7, 97, 98, 101, 102, 103, 99, 134, 135, 109, 108, 110, 111, 112, 113, 114, 106, 107, 65, 66, 50, 51, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 104, 16, 17, 105, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 122, 127, 34, 35, 36, 37, 128, 129, 38, 130, 131 }
}

define i32 @function_3a6df() local_unnamed_addr {
dec_label_pc_3a6df:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a6e4() local_unnamed_addr {
dec_label_pc_3a6e4:
  %v0_3a6e8 = load i32, i32* @eax, align 8
  ret i32 %v0_3a6e8
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a6ea:
  %v5_3a6ea = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_3a6ef = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v5_3a6ea)
  ret i32 %v2_3a6ef

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_3a6f2:
  %v5_3a6f6 = load i32, i32* @eax, align 8
  ret i32 %v5_3a6f6
}

define i32 @function_3a6f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a6f8:
  %v0_3a6f9 = load i32, i32* @ebx, align 4
  %v1_3a6f9 = add i32 %v0_3a6f9, 1166608453
  %v2_3a6f9 = inttoptr i32 %v1_3a6f9 to i8*
  %v3_3a6f9 = load i8, i8* %v2_3a6f9, align 1
  %v4_3a6f9 = load i32, i32* @ecx, align 4
  %v5_3a6f9 = trunc i32 %v4_3a6f9 to i8
  %v6_3a6f9 = xor i8 %v5_3a6f9, %v3_3a6f9
  store i8 %v6_3a6f9, i8* %v2_3a6f9, align 1
  %v1_3a706 = load i32, i32* @ebp, align 4
  %v2_3a706 = add i32 %v1_3a706, -12
  %v3_3a706 = inttoptr i32 %v2_3a706 to i32*
  store i32 30, i32* %v3_3a706, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 1166608453, { 0, 2, 3, 4, 1, 9, 6, 7, 8, 5 }
}

define i32 @function_3a718() local_unnamed_addr {
dec_label_pc_3a718:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a718 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a718
}

define i32 @function_3a732(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3a732:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3a732 = load i32, i32* @eax, align 8
  %v1_3a732 = add i32 %v0_3a732, ptrtoint (%once_flag* @debugPrintInitFlag to i32)
  %v5_3a732 = icmp ult i32 %v1_3a732, %v0_3a732
  store i1 %v5_3a732, i1* %cf.global-to-local, align 1
  store i32 %v1_3a732, i32* %eax.global-to-local, align 8
  %v0_3a737 = load i32, i32* @ebx, align 4
  %v1_3a737 = add i32 %v0_3a737, 862319701
  %v2_3a737 = inttoptr i32 %v1_3a737 to i8*
  %v3_3a737 = load i8, i8* %v2_3a737, align 1
  %v4_3a737 = load i32, i32* @ecx, align 4
  %v5_3a737 = trunc i32 %v4_3a737 to i8
  %v6_3a737 = add i8 %v5_3a737, %v3_3a737
  %v11_3a737 = icmp ult i8 %v6_3a737, %v3_3a737
  store i1 %v11_3a737, i1* %cf.global-to-local, align 1
  store i8 %v6_3a737, i8* %v2_3a737, align 1
  %v0_3a73d = load i32, i32* %eax.global-to-local, align 8
  %v1_3a73d = load i1, i1* %cf.global-to-local, align 1
  %v2_3a73d = zext i1 %v1_3a73d to i32
  %v3_3a73d = add i32 %v0_3a73d, ptrtoint (i32* @global_var_14.2373 to i32)
  %v4_3a73d = add i32 %v3_3a73d, %v2_3a73d
  %v14_3a73d = icmp eq i32 %v4_3a73d, 0
  %v20_3a73d = add i32 %v0_3a73d, 20
  %v21_3a73d = add i32 %v20_3a73d, %v2_3a73d
  %v22_3a73d = icmp ule i32 %v21_3a73d, %v0_3a73d
  %v23_3a73d = icmp ugt i32 %v0_3a73d, -21
  %v24_3a73d = select i1 %v1_3a73d, i1 %v22_3a73d, i1 %v23_3a73d
  store i1 %v24_3a73d, i1* %cf.global-to-local, align 1
  store i32 %v4_3a73d, i32* @eax, align 8
  br i1 %v14_3a73d, label %bb, label %dec_label_pc_3a744

bb:                                               ; preds = %dec_label_pc_3a732
  %v1_3a742 = call i32 @function_3a75f()
  store i32 %v1_3a742, i32* @eax, align 8
  br label %dec_label_pc_3a744

dec_label_pc_3a744:                               ; preds = %bb, %dec_label_pc_3a732
  %v0_3a744 = call i32 @function_3a75a()
  store i32 %v0_3a744, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a744

; uselistorder directives
  uselistorder i8 %v3_3a737, { 1, 0 }
  uselistorder i32 -21, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 20, { 16, 17, 18, 19, 4, 21, 20, 0, 1, 2, 3, 9, 22, 10, 11, 12, 13, 14, 15, 5, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_14.2373 to i32), { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 1, 0 }
  uselistorder i32* @ecx, { 30, 31, 33, 34, 35, 1, 82, 37, 26, 38, 39, 40, 41, 42, 43, 44, 45, 46, 15, 47, 48, 55, 53, 54, 56, 57, 168, 59, 36, 60, 61, 23, 27, 65, 0, 29, 200, 201, 202, 203, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 173, 174, 175, 176, 90, 177, 91, 92, 93, 94, 95, 96, 97, 98, 49, 50, 100, 52, 20, 21, 22, 179, 104, 188, 189, 19, 105, 106, 107, 108, 109, 110, 111, 186, 190, 191, 142, 192, 115, 195, 116, 117, 118, 119, 66, 120, 121, 122, 123, 124, 125, 180, 25, 196, 197, 24, 126, 28, 127, 128, 129, 131, 132, 133, 138, 112, 113, 114, 58, 101, 102, 181, 182, 16, 17, 103, 148, 63, 62, 134, 18, 130, 64, 2, 150, 141, 140, 143, 144, 67, 157, 158, 145, 146, 147, 151, 198, 199, 139, 154, 155, 149, 4, 156, 160, 161, 159, 152, 162, 135, 136, 169, 163, 164, 165, 166, 167, 32, 137, 51, 172, 87, 178, 99, 183, 184, 187, 185, 170, 171, 153, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 3, 193, 194 }
  uselistorder i32 862319701, { 7, 8, 9, 12, 10, 0, 11, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* @ebx, { 87, 88, 91, 94, 95, 98, 99, 100, 210, 211, 102, 101, 103, 104, 105, 106, 107, 72, 108, 109, 110, 70, 112, 113, 78, 116, 118, 212, 213, 214, 215, 216, 96, 97, 121, 122, 79, 126, 86, 261, 77, 132, 133, 130, 131, 134, 135, 136, 137, 138, 141, 142, 71, 225, 226, 227, 228, 229, 230, 143, 111, 233, 145, 239, 127, 240, 128, 129, 231, 241, 146, 147, 148, 149, 120, 236, 246, 247, 248, 154, 155, 125, 156, 157, 158, 234, 1, 2, 163, 164, 253, 165, 114, 117, 170, 82, 244, 245, 173, 172, 180, 31, 181, 182, 183, 150, 151, 152, 153, 119, 235, 171, 144, 174, 175, 124, 123, 254, 195, 4, 3, 5, 194, 196, 197, 198, 186, 187, 188, 189, 73, 6, 74, 258, 166, 167, 168, 169, 190, 191, 192, 251, 75, 7, 76, 259, 260, 8, 9, 34, 35, 200, 221, 217, 218, 0, 219, 220, 201, 193, 202, 176, 203, 222, 204, 205, 206, 209, 207, 208, 41, 80, 81, 11, 10, 12, 83, 84, 85, 89, 90, 92, 93, 179, 14, 13, 15, 115, 16, 17, 139, 140, 18, 19, 20, 21, 22, 23, 237, 238, 249, 250, 24, 255, 25, 26, 159, 160, 161, 162, 27, 28, 29, 30, 177, 178, 223, 224, 184, 185, 242, 32, 33, 199, 36, 37, 38, 39, 40, 42, 43, 232, 44, 45, 46, 48, 47, 49, 52, 50, 51, 53, 55, 54, 56, 57, 256, 58, 257, 61, 59, 60, 62, 63, 64, 65, 243, 66, 68, 67, 69, 252 }
}

define i32 @function_3a75a() local_unnamed_addr {
dec_label_pc_3a75a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a75f() local_unnamed_addr {
dec_label_pc_3a75f:
  %v0_3a765 = load i32, i32* @eax, align 8
  ret i32 %v0_3a765
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a766:
  %v5_3a766 = sub i32 %arg1, ptrtoint (i8** @global_var_18.2447 to i32)
  %v2_3a76b = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v5_3a766)
  ret i32 %v2_3a76b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i8** @global_var_18.2447, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_18.2447 to i32), { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_3a76e:
  ret i32 0
}

define i32 @function_3a794() local_unnamed_addr {
dec_label_pc_3a794:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a794 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3a794
}

define i32 @function_3a7ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a7ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost3_bi6bind_tIvPFvPvENS0_5list1INS0_5valueIS2_EEEEEclEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a7d2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_3a7ea = ptrtoint i32* %stack_var_-17 to i32
  %v1_3a7f0 = call i32 @unknown_4b76e(i32 %v2_3a7ea)
  %v1_3a7fb = add i32 %arg1, ptrtoint (i32* @global_var_4.2376 to i32)
  %v0_3a811 = load i32, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_3a811, 16777216
  %v5_3a818 = sdiv i32 %sext, 16777216
  %v6_3a818 = call i32 @unknown_75062(i32 %v1_3a7fb, i32 %v5_3a818, i32 %arg1, i32 %v2_3a7ea, i32 0)
  store i32 0, i32* @eax, align 8
  %v1_3a827 = call i32 @function_3a82e()
  ret i32 %v1_3a827

; uselistorder directives
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 44, 42, 45, 43, 47, 46, 50, 48, 51, 49, 53, 52, 56, 54, 57, 55, 60, 58, 61, 59, 63, 62, 65, 64, 68, 66, 69, 67, 72, 70, 73, 71, 76, 74, 77, 75, 80, 78, 81, 79, 84, 82, 85, 83, 87, 86, 89, 88, 91, 90, 93, 92, 95, 94, 97, 96, 99, 98, 101, 100, 103, 102, 105, 104, 107, 106 }
  uselistorder i32 ptrtoint (i32* @global_var_4.2376 to i32), { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 9, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 116, 118, 119, 120, 121, 2, 3, 122, 123, 124, 125, 126, 127, 128, 129, 11, 130, 131, 135, 132, 134, 136, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 7, 193, 194, 195, 196, 197, 199, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 4, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 12, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 13, 278, 279, 5, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 300, 301, 303, 0, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 8, 395, 396, 397, 398, 399, 400, 6, 401, 402, 403, 404, 405, 406, 407, 408 }
  uselistorder i32 1, {}
}

define i32 @function_3a82c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a82c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3a82e() local_unnamed_addr {
dec_label_pc_3a82e:
  %v0_3a833 = load i32, i32* @eax, align 8
  ret i32 %v0_3a833
}

define i32 @_ZNK5boost10shared_ptrISiEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3a834:
  %v2_3a84e = load i32, i32* %arg1, align 4
  %v1_3a850 = icmp eq i32 %v2_3a84e, 0
  %v1_3a852 = icmp eq i1 %v1_3a850, false
  br i1 %v1_3a852, label %bb, label %dec_label_pc_3a854

bb:                                               ; preds = %dec_label_pc_3a834
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_3a852 = call i32 @function_3a878(i32 %tmp103)
  br label %dec_label_pc_3a854

dec_label_pc_3a854:                               ; preds = %bb, %dec_label_pc_3a834
  %v3_3a85c = phi i32 [ %v3_3a852, %bb ], [ %v2_3a84e, %dec_label_pc_3a834 ]
  ret i32 %v3_3a85c

; uselistorder directives
  uselistorder i1 false, { 298, 114, 429, 430, 431, 115, 400, 311, 406, 116, 407, 16, 17, 18, 503, 117, 504, 299, 118, 300, 22, 23, 24, 19, 20, 21, 408, 409, 119, 410, 25, 26, 27, 411, 412, 413, 414, 417, 120, 418, 28, 29, 30, 419, 121, 420, 31, 32, 33, 301, 122, 387, 302, 123, 303, 304, 124, 305, 34, 35, 36, 306, 37, 125, 126, 127, 128, 0, 425, 129, 426, 38, 39, 40, 423, 424, 427, 428, 307, 308, 130, 309, 41, 42, 43, 131, 515, 516, 132, 517, 310, 44, 133, 134, 135, 136, 1, 137, 401, 402, 138, 404, 374, 375, 312, 542, 434, 139, 550, 313, 551, 438, 439, 441, 442, 526, 524, 525, 527, 528, 529, 106, 314, 378, 379, 380, 315, 140, 316, 141, 317, 45, 46, 47, 142, 143, 318, 376, 377, 319, 447, 107, 452, 453, 454, 455, 456, 144, 457, 458, 459, 460, 461, 320, 321, 469, 470, 471, 322, 323, 324, 2, 3, 435, 436, 325, 145, 326, 327, 48, 328, 329, 330, 331, 530, 146, 332, 449, 450, 451, 333, 334, 335, 565, 476, 477, 478, 482, 483, 4, 336, 472, 147, 473, 337, 5, 474, 338, 148, 339, 49, 479, 443, 149, 444, 50, 51, 52, 480, 484, 150, 485, 53, 54, 55, 340, 341, 151, 342, 59, 60, 61, 56, 57, 58, 343, 563, 561, 562, 344, 62, 152, 345, 346, 488, 153, 347, 6, 505, 506, 154, 494, 495, 492, 493, 348, 155, 349, 63, 64, 65, 156, 350, 463, 351, 466, 352, 157, 353, 355, 158, 356, 354, 357, 358, 159, 160, 161, 162, 163, 164, 165, 359, 166, 167, 211, 360, 361, 168, 362, 363, 169, 364, 69, 70, 71, 66, 67, 68, 500, 170, 365, 171, 366, 72, 73, 74, 367, 172, 368, 75, 76, 77, 369, 370, 371, 372, 373, 173, 212, 213, 381, 382, 174, 175, 383, 176, 384, 78, 79, 80, 385, 177, 386, 81, 82, 83, 388, 178, 389, 84, 85, 86, 390, 391, 392, 393, 214, 179, 394, 180, 395, 181, 182, 183, 396, 397, 184, 398, 87, 88, 89, 399, 403, 215, 405, 415, 185, 416, 90, 91, 92, 421, 422, 216, 93, 432, 112, 186, 187, 188, 433, 543, 544, 8, 7, 437, 539, 540, 552, 440, 445, 446, 448, 462, 464, 465, 467, 217, 564, 468, 475, 481, 486, 487, 218, 489, 490, 491, 496, 497, 219, 498, 189, 499, 190, 191, 501, 502, 520, 507, 508, 192, 509, 94, 95, 96, 510, 193, 511, 97, 98, 99, 512, 513, 9, 514, 194, 222, 220, 100, 221, 223, 224, 225, 236, 237, 238, 239, 240, 231, 232, 233, 104, 226, 227, 228, 109, 229, 230, 101, 102, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 108, 249, 250, 251, 105, 252, 253, 254, 255, 518, 519, 256, 195, 257, 559, 258, 196, 259, 260, 521, 197, 522, 198, 523, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 199, 280, 531, 532, 533, 534, 535, 282, 200, 281, 10, 201, 202, 536, 283, 203, 537, 204, 538, 205, 541, 11, 545, 546, 547, 548, 549, 206, 284, 110, 207, 285, 555, 553, 103, 554, 556, 557, 558, 286, 288, 208, 289, 292, 209, 293, 287, 12, 290, 291, 294, 13, 295, 111, 296, 297, 113, 14, 560, 15, 210, 566, 567, 568, 569, 570 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_3a86a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a86a:
  %v2_3a86a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3a86a = load i32, i32* @eax, align 8
  %v4_3a86a = trunc i32 %v3_3a86a to i8
  %v5_3a86a = add i8 %v4_3a86a, %v2_3a86a
  %v21_3a86a = inttoptr i32 %v3_3a86a to i8*
  store i8 %v5_3a86a, i8* %v21_3a86a, align 1
  %v3_3a86c = load i32, i32* @eax, align 8
  ret i32 %v3_3a86c
}

define i32 @function_3a878(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a878:
  %v0_3a878 = load i32, i32* @ebp, align 4
  %v1_3a878 = add i32 %v0_3a878, -28
  %v2_3a878 = inttoptr i32 %v1_3a878 to i32*
  %v3_3a878 = load i32, i32* %v2_3a878, align 4
  %v1_3a87b = inttoptr i32 %v3_3a878 to i32*
  %v2_3a87b = load i32, i32* %v1_3a87b, align 4
  store i32 %v2_3a87b, i32* @eax, align 8
  %v1_3a87d = add i32 %v0_3a878, -12
  %v2_3a87d = inttoptr i32 %v1_3a87d to i32*
  %v3_3a87d = load i32, i32* %v2_3a87d, align 4
  %v3_3a880 = icmp eq i32 %v3_3a87d, 30
  br i1 %v3_3a880, label %bb, label %dec_label_pc_3a889

bb:                                               ; preds = %dec_label_pc_3a878
  %v1_3a887 = call i32 @function_3a88e()
  br label %dec_label_pc_3a889

dec_label_pc_3a889:                               ; preds = %bb, %dec_label_pc_3a878
  %v2_3a887 = phi i32 [ %v1_3a887, %bb ], [ %v2_3a87b, %dec_label_pc_3a878 ]
  ret i32 %v2_3a887

; uselistorder directives
  uselistorder i32 30, { 0, 227, 228, 1, 229, 2, 3, 4, 230, 5, 6, 231, 7, 8, 9, 232, 233, 10, 234, 11, 235, 12, 236, 237, 238, 239, 240, 241, 242, 13, 14, 244, 243, 15, 245, 16, 17, 18, 246, 19, 20, 21, 22, 23, 247, 24, 248, 249, 25, 251, 250, 26, 253, 252, 254, 255, 27, 28, 257, 256, 29, 258, 30, 259, 31, 32, 260, 33, 34, 35, 261, 262, 263, 264, 36, 265, 266, 37, 268, 267, 269, 271, 270, 272, 38, 273, 274, 39, 40, 41, 275, 42, 276, 277, 43, 278, 44, 279, 45, 46, 280, 281, 282, 47, 48, 283, 49, 284, 285, 286, 287, 288, 50, 51, 289, 52, 290, 53, 291, 54, 292, 55, 294, 293, 56, 295, 57, 58, 296, 59, 297, 60, 298, 299, 61, 300, 301, 62, 63, 302, 304, 303, 305, 64, 306, 307, 308, 65, 309, 311, 310, 66, 312, 67, 313, 68, 314, 69, 70, 71, 72, 315, 73, 317, 316, 318, 319, 74, 320, 321, 75, 322, 76, 323, 324, 325, 77, 327, 326, 328, 329, 330, 331, 78, 332, 79, 333, 80, 334, 81, 335, 82, 83, 336, 337, 84, 338, 339, 85, 340, 86, 87, 88, 341, 89, 90, 343, 342, 345, 344, 346, 347, 91, 349, 348, 92, 93, 94, 350, 351, 352, 353, 354, 95, 96, 97, 355, 98, 356, 99, 100, 357, 358, 101, 359, 360, 361, 362, 102, 363, 103, 104, 364, 105, 106, 365, 107, 366, 367, 368, 369, 108, 109, 370, 371, 110, 111, 373, 372, 112, 374, 113, 375, 376, 377, 378, 379, 380, 114, 115, 116, 117, 382, 381, 383, 385, 384, 118, 119, 120, 121, 386, 122, 123, 124, 387, 388, 389, 390, 125, 126, 127, 391, 392, 393, 394, 395, 128, 396, 219, 397, 399, 398, 129, 130, 400, 131, 132, 133, 402, 401, 134, 135, 136, 403, 137, 404, 405, 220, 406, 138, 407, 139, 408, 140, 141, 142, 409, 143, 410, 411, 144, 145, 146, 412, 413, 414, 147, 415, 148, 149, 416, 417, 150, 418, 151, 419, 152, 420, 153, 421, 422, 154, 155, 156, 423, 424, 425, 157, 158, 426, 159, 427, 160, 161, 162, 428, 429, 163, 164, 165, 166, 430, 167, 431, 168, 432, 433, 434, 435, 436, 437, 439, 438, 169, 440, 441, 442, 170, 171, 443, 172, 173, 444, 445, 446, 447, 174, 448, 175, 449, 450, 176, 451, 177, 178, 452, 179, 180, 181, 453, 454, 456, 455, 182, 457, 183, 458, 184, 459, 460, 185, 186, 461, 462, 187, 463, 188, 464, 465, 466, 189, 467, 190, 468, 469, 470, 471, 472, 473, 474, 191, 476, 475, 477, 478, 479, 480, 481, 482, 192, 483, 484, 485, 193, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 194, 195, 496, 196, 497, 498, 499, 197, 500, 501, 502, 503, 504, 505, 221, 222, 506, 198, 507, 508, 509, 223, 199, 510, 200, 224, 201, 225, 511, 202, 203, 512, 204, 205, 513, 206, 514, 207, 208, 209, 210, 211, 212, 515, 516, 213, 214, 517, 215, 518, 519, 216, 217, 520, 218, 226, 521 }
  uselistorder i32 -12, { 57, 123, 91, 2, 3, 124, 4, 5, 125, 6, 127, 58, 59, 133, 60, 61, 135, 136, 227, 228, 137, 138, 139, 140, 141, 142, 143, 144, 117, 145, 118, 119, 147, 148, 149, 150, 151, 152, 153, 154, 155, 113, 156, 172, 173, 157, 158, 159, 160, 161, 162, 163, 71, 166, 72, 167, 1, 62, 175, 181, 168, 183, 184, 185, 131, 132, 384, 186, 187, 188, 189, 63, 134, 190, 126, 191, 192, 195, 199, 200, 64, 65, 201, 203, 90, 66, 67, 393, 394, 128, 68, 69, 206, 207, 208, 454, 211, 212, 213, 214, 215, 218, 219, 216, 217, 220, 221, 222, 223, 224, 225, 226, 70, 230, 396, 397, 398, 399, 231, 232, 400, 401, 402, 403, 404, 405, 233, 234, 235, 236, 237, 366, 164, 165, 238, 239, 103, 240, 241, 176, 177, 107, 94, 101, 102, 409, 180, 7, 418, 419, 420, 421, 422, 209, 210, 8, 245, 246, 248, 247, 249, 250, 251, 252, 253, 423, 254, 415, 389, 416, 9, 427, 428, 429, 430, 431, 432, 433, 434, 435, 256, 257, 193, 10, 258, 259, 260, 261, 441, 196, 197, 80, 262, 263, 202, 264, 265, 204, 267, 268, 269, 270, 271, 272, 73, 273, 274, 99, 100, 410, 277, 411, 412, 413, 280, 86, 111, 112, 229, 281, 11, 12, 442, 282, 285, 286, 169, 170, 287, 288, 104, 105, 74, 289, 182, 290, 242, 121, 426, 293, 294, 114, 295, 296, 297, 298, 299, 75, 300, 301, 302, 303, 304, 76, 309, 306, 310, 194, 120, 319, 255, 77, 13, 109, 110, 322, 78, 324, 325, 79, 330, 331, 275, 276, 278, 279, 436, 437, 81, 82, 14, 83, 414, 0, 291, 292, 178, 179, 84, 85, 340, 341, 314, 342, 343, 15, 328, 329, 345, 348, 349, 350, 87, 88, 326, 446, 447, 332, 333, 334, 205, 16, 17, 327, 448, 283, 339, 344, 346, 347, 439, 18, 320, 321, 372, 373, 449, 451, 452, 96, 323, 351, 338, 336, 337, 353, 89, 385, 386, 357, 358, 355, 356, 359, 360, 311, 312, 313, 315, 316, 92, 93, 387, 364, 367, 368, 361, 362, 363, 453, 116, 375, 376, 377, 378, 379, 381, 380, 370, 95, 97, 98, 174, 106, 108, 19, 390, 115, 122, 20, 21, 129, 130, 307, 308, 146, 317, 318, 171, 198, 22, 23, 243, 24, 244, 25, 26, 27, 28, 424, 417, 29, 266, 443, 284, 305, 450, 335, 30, 31, 32, 33, 352, 34, 354, 35, 365, 36, 369, 37, 371, 374, 38, 382, 383, 388, 391, 392, 39, 395, 406, 445, 40, 41, 42, 43, 44, 45, 407, 408, 46, 47, 48, 49, 50, 425, 51, 52, 438, 53, 54, 55, 440, 56, 444 }
  uselistorder i32 -28, { 97, 6, 7, 8, 9, 10, 15, 172, 173, 177, 178, 179, 180, 186, 187, 188, 284, 189, 190, 470, 191, 98, 158, 193, 99, 194, 195, 196, 197, 198, 199, 213, 214, 16, 200, 201, 202, 203, 204, 206, 207, 17, 217, 218, 219, 225, 226, 224, 208, 228, 229, 230, 231, 174, 175, 176, 471, 472, 473, 474, 475, 476, 477, 233, 235, 234, 1, 100, 181, 182, 183, 184, 185, 236, 237, 149, 162, 163, 240, 244, 245, 241, 242, 243, 2, 246, 251, 252, 256, 258, 128, 492, 493, 263, 264, 265, 269, 270, 271, 272, 274, 275, 276, 273, 277, 278, 279, 280, 281, 282, 283, 101, 102, 146, 286, 287, 288, 18, 19, 20, 21, 22, 23, 24, 494, 495, 498, 496, 497, 499, 289, 129, 500, 501, 502, 290, 291, 447, 292, 293, 294, 295, 150, 296, 103, 104, 151, 131, 147, 148, 222, 223, 25, 516, 517, 518, 519, 520, 521, 522, 523, 524, 266, 267, 268, 26, 27, 298, 299, 300, 301, 302, 303, 304, 305, 525, 526, 306, 484, 512, 105, 513, 28, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 307, 308, 247, 29, 30, 309, 310, 311, 312, 548, 253, 254, 255, 257, 313, 314, 259, 260, 315, 31, 316, 317, 319, 320, 321, 318, 322, 323, 324, 325, 138, 139, 140, 507, 506, 508, 327, 509, 510, 511, 329, 330, 331, 153, 154, 285, 106, 332, 339, 209, 210, 211, 212, 340, 341, 342, 107, 108, 343, 344, 227, 346, 345, 297, 160, 532, 533, 534, 352, 353, 354, 355, 359, 357, 358, 363, 364, 365, 361, 366, 248, 249, 250, 159, 109, 32, 33, 152, 375, 376, 377, 378, 379, 110, 385, 386, 387, 232, 388, 393, 238, 239, 326, 328, 111, 545, 112, 34, 35, 113, 114, 347, 348, 349, 350, 351, 220, 221, 115, 116, 117, 356, 360, 550, 400, 560, 407, 36, 392, 410, 411, 412, 413, 414, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 381, 382, 118, 383, 384, 119, 389, 390, 394, 395, 396, 397, 120, 121, 261, 262, 435, 436, 37, 122, 123, 124, 391, 551, 336, 337, 333, 334, 335, 3, 338, 406, 408, 409, 415, 419, 420, 416, 417, 418, 4, 421, 125, 126, 127, 374, 459, 460, 554, 555, 556, 557, 558, 552, 553, 559, 432, 433, 404, 38, 405, 401, 402, 403, 68, 380, 398, 399, 0, 39, 40, 41, 42, 478, 479, 439, 438, 440, 367, 368, 369, 370, 371, 372, 373, 130, 480, 481, 482, 483, 443, 448, 441, 442, 561, 562, 563, 156, 157, 461, 462, 463, 464, 465, 468, 469, 466, 467, 455, 456, 457, 458, 132, 43, 133, 134, 135, 136, 137, 215, 216, 141, 142, 143, 144, 145, 11, 12, 44, 485, 486, 487, 488, 489, 490, 155, 161, 45, 164, 165, 166, 167, 168, 169, 170, 171, 362, 46, 192, 205, 47, 13, 14, 48, 5, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 514, 60, 61, 62, 63, 491, 64, 65, 66, 67, 434, 69, 70, 437, 71, 444, 445, 446, 450, 451, 452, 449, 453, 454, 72, 73, 74, 75, 76, 503, 77, 78, 549, 79, 504, 505, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 515, 529, 527, 528, 530, 531, 91, 92, 94, 93, 95, 96, 546, 547 }
  uselistorder i32* @ebp, {}
}

define i32 @function_3a88e() local_unnamed_addr {
dec_label_pc_3a88e:
  %v0_3a88f = load i32, i32* @eax, align 8
  ret i32 %v0_3a88f
}

define i32 @_ZN5boost3_bi5list1INS0_5valueIPvEEEclIPFvS3_ENS0_5list0EEEvNS0_4typeIvEERT_RT0_i(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3a890:
  %v2_3a8cf = call i32 @unknown_75196(i32 %arg3, i32 0)
  %v2_3a8e3 = call i32 @unknown_751ca(i32 %arg4, i32 %arg1)
  %v1_3a8e8 = inttoptr i32 %v2_3a8e3 to i32*
  %v2_3a8e8 = load i32, i32* %v1_3a8e8, align 4
  store i32 0, i32* @eax, align 8
  %v2_3a8f9 = call i32 @function_3a900(i32 %v2_3a8e8)
  ret i32 %v2_3a8f9
}

define i32 @function_3a900(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a900:
  %v0_3a905 = load i32, i32* @eax, align 8
  ret i32 %v0_3a905
}

define i32 @_ZN5boost3_bi9unwrapperIPFvPvEE6unwrapERS4_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a906:
  store i32 %arg1, i32* @eax, align 8
  %v3_3a930 = call i32 @function_3a937(i32 %arg2, i32 %arg1)
  ret i32 %v3_3a930
}

define i32 @function_3a937(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a937:
  %v0_3a938 = load i32, i32* @eax, align 8
  ret i32 %v0_3a938
}

define i32 @_ZNK5boost3_bi5list0ixIPvEERT_RNS0_5valueIS4_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a93a:
  %v1_3a95d = call i32 @unknown_752b0(i32 %arg2)
  store i32 %v1_3a95d, i32* @eax, align 8
  %v1_3a96c = call i32 @function_3a973()
  ret i32 %v1_3a96c
}

define i32 @function_3a973() local_unnamed_addr {
dec_label_pc_3a973:
  %v0_3a974 = load i32, i32* @eax, align 8
  ret i32 %v0_3a974
}

define i32 @_ZN5boost3_bi5valueIPvE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a976:
  store i32 %arg1, i32* @eax, align 8
  %v2_3a99a = call i32 @function_3a9a1(i32 %arg1)
  ret i32 %v2_3a99a
}

define i32 @function_3a9a1(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a9a1:
  %v0_3a9a2 = load i32, i32* @eax, align 8
  ret i32 %v0_3a9a2
}

define i32 @function_3a9e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a9e6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5d176(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d176:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_5d38f(i32 %arg1) local_unnamed_addr {
dec_label_pc_5d38f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3abc4(i32) local_unnamed_addr

declare i32 @unknown_3abd0(i32) local_unnamed_addr

declare i32 @unknown_3abf4(i32) local_unnamed_addr

declare i32 @unknown_3ac0e(i32, i32) local_unnamed_addr

declare i32 @unknown_3ac15(i32) local_unnamed_addr

declare i32 @unknown_3ac24(i32) local_unnamed_addr

declare i32 @unknown_3ac4c(i32) local_unnamed_addr

declare i32 @unknown_3ac54(i32) local_unnamed_addr

declare i32 @unknown_3acec(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ad1c(i32) local_unnamed_addr

declare i32 @unknown_3ad4c(i32) local_unnamed_addr

declare i32 @unknown_3ad7c(i32) local_unnamed_addr

declare i32 @unknown_3adac(i32) local_unnamed_addr

declare i32 @unknown_3ae74(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3af18(i32) local_unnamed_addr

declare i32 @unknown_3af20(i32) local_unnamed_addr

declare i32 @unknown_3af48(i32, i32) local_unnamed_addr

declare i32 @unknown_3af56(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3affa(i32, i32) local_unnamed_addr

declare i32 @unknown_3b08c(i32) local_unnamed_addr

declare i32 @unknown_3b0b9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b0ce(i32) local_unnamed_addr

declare i32 @unknown_3b1b6(i32, i32) local_unnamed_addr

declare i32 @unknown_3b1f0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b234(i32, i32) local_unnamed_addr

declare i32 @unknown_3b2ab(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b2e2(i32) local_unnamed_addr

declare i32 @unknown_3b2f4(i32) local_unnamed_addr

declare i32 @unknown_3b31d(i32) local_unnamed_addr

declare i32 @unknown_3b35e(i32) local_unnamed_addr

declare i32 @unknown_3b3d0(i32) local_unnamed_addr

declare i32 @unknown_3b3e2(i32, i32) local_unnamed_addr

declare i32 @unknown_3b45a(i32) local_unnamed_addr

declare i32 @unknown_3b540(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b54e(i32) local_unnamed_addr

declare i32 @unknown_3b682(i32, i32) local_unnamed_addr

declare i32 @unknown_3b6ba(i32) local_unnamed_addr

declare i32 @unknown_3b6e9(i32, i32) local_unnamed_addr

declare i32 @unknown_3b760(i32) local_unnamed_addr

declare i32 @unknown_3b813(i32, i32) local_unnamed_addr

declare i32 @unknown_3b8ed(i32, i32) local_unnamed_addr

declare i32 @unknown_3b9a6(i32) local_unnamed_addr

declare i32 @unknown_3b9ed(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b9f2(i32) local_unnamed_addr

declare i32 @unknown_3ba9a(i32) local_unnamed_addr

declare i32 @unknown_3bab6(i32) local_unnamed_addr

declare i32 @unknown_3bb2d(i32, i32) local_unnamed_addr

declare i32 @unknown_3bb32(i32) local_unnamed_addr

declare i32 @unknown_3bbba(i32) local_unnamed_addr

declare i32 @unknown_3bbc7(i32, i32) local_unnamed_addr

declare i32 @unknown_3bc32(i32) local_unnamed_addr

declare i32 @unknown_3bc3f(i32) local_unnamed_addr

declare i32 @unknown_3bc44(i32) local_unnamed_addr

declare i32 @unknown_3bcb4(i32, i32) local_unnamed_addr

declare i32 @unknown_3bd32(i32) local_unnamed_addr

declare i32 @unknown_3bd62(i32, i32) local_unnamed_addr

declare i32 @unknown_3bd95(i32) local_unnamed_addr

declare i32 @unknown_3bdbe(i32) local_unnamed_addr

declare i32 @unknown_3bdda(i32, i32) local_unnamed_addr

declare i32 @unknown_3be12(i32, i32) local_unnamed_addr

declare i32 @unknown_3be5c(i32, i32) local_unnamed_addr

declare i32 @unknown_3be84(i32) local_unnamed_addr

declare i32 @unknown_3be9c(i32) local_unnamed_addr

declare i32 @unknown_3bf44(i32) local_unnamed_addr

declare i32 @unknown_3bf9e(i32) local_unnamed_addr

declare i32 @unknown_3bfea(i32) local_unnamed_addr

declare i32 @unknown_3c029() local_unnamed_addr

declare i32 @unknown_3c0b6(i32) local_unnamed_addr

declare i32 @unknown_3c12a(i32, i32) local_unnamed_addr

declare i32 @unknown_3c252(i32) local_unnamed_addr

declare i32 @unknown_3c25b(i32) local_unnamed_addr

declare i32 @unknown_3c2ae(i32) local_unnamed_addr

declare i32 @unknown_3c33a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c3ac(i32, i32) local_unnamed_addr

declare i32 @unknown_3c3ce(i32, i32) local_unnamed_addr

declare i32 @unknown_3c418(i32, i32) local_unnamed_addr

declare i32 @unknown_3c442(i32) local_unnamed_addr

declare i32 @unknown_3c48e(i32, i32) local_unnamed_addr

declare i32 @unknown_3c55e(i32) local_unnamed_addr

declare i32 @unknown_3c5ce(i32) local_unnamed_addr

declare i32 @unknown_3c661(i32) local_unnamed_addr

declare i32 @unknown_3c6d8(i32) local_unnamed_addr

declare i32 @unknown_3c780(i32) local_unnamed_addr

declare i32 @unknown_3c7e0(i32) local_unnamed_addr

declare i32 @unknown_3c810(i32, i32) local_unnamed_addr

declare i32 @unknown_3c840(i32, i32) local_unnamed_addr

declare i32 @unknown_3c88e(i32) local_unnamed_addr

declare i32 @unknown_3c8be(i32) local_unnamed_addr

declare i32 @unknown_3c974(i32) local_unnamed_addr

declare i32 @unknown_3c9a4(i32, i32) local_unnamed_addr

declare i32 @unknown_3c9d7(i32) local_unnamed_addr

declare i32 @unknown_3ca1c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ca32(i32) local_unnamed_addr

declare i32 @unknown_3ca64(i32, i32) local_unnamed_addr

declare i32 @unknown_3ca9c(i32, i32) local_unnamed_addr

declare i32 @unknown_3cae6(i32, i32) local_unnamed_addr

declare i32 @unknown_3cb26(i32) local_unnamed_addr

declare i32 @unknown_3cb8e(i32, i32) local_unnamed_addr

declare i32 @unknown_3cc28(i32) local_unnamed_addr

declare i32 @unknown_3cc74(i32) local_unnamed_addr

declare i32 @unknown_3cc7a(i32) local_unnamed_addr

declare i32 @unknown_3ccb3() local_unnamed_addr

declare i32 @unknown_3cdc8(i32) local_unnamed_addr

declare i32 @unknown_3cf4a(i32, i32) local_unnamed_addr

declare i32 @unknown_3cfc2(i32, i32) local_unnamed_addr

declare i32 @unknown_3d044(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d0a3(i32, i32) local_unnamed_addr

declare i32 @unknown_3d0b0(i32, i32) local_unnamed_addr

declare i32 @unknown_3d0f8() local_unnamed_addr

declare i32 @unknown_3d122(i32) local_unnamed_addr

declare i32 @unknown_3d184(i32) local_unnamed_addr

declare i32 @unknown_3d1e6(i32, i32) local_unnamed_addr

declare i32 @unknown_3d238(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d294(i32, i32) local_unnamed_addr

declare i32 @unknown_3d338(i32, i32) local_unnamed_addr

declare i32 @unknown_3d357(i32, i32) local_unnamed_addr

declare i32 @unknown_3d393() local_unnamed_addr

declare i32 @unknown_3d407(i32, i32) local_unnamed_addr

declare i32 @unknown_3d451(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d571(i32, i32) local_unnamed_addr

declare i32 @unknown_3d5ac(i32, i32) local_unnamed_addr

declare i32 @unknown_3d5ba(i32) local_unnamed_addr

declare i32 @unknown_3d5cb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d5e7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d67f(i32, i32) local_unnamed_addr

declare i32 @unknown_3d6a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3d7fc(i32, i32) local_unnamed_addr

declare i32 @unknown_3d812(i32) local_unnamed_addr

declare i32 @unknown_3d844(i32, i32) local_unnamed_addr

declare i32 @unknown_3d8af(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d910(i32, i32) local_unnamed_addr

declare i32 @unknown_3d915(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d92e(i32, i32) local_unnamed_addr

declare i32 @unknown_3d9e8(i32, i32) local_unnamed_addr

declare i32 @unknown_3da48(i32, i32) local_unnamed_addr

declare i32 @unknown_3da64(i32) local_unnamed_addr

declare i32 @unknown_3daa8(i32, i32) local_unnamed_addr

declare i32 @unknown_3db3e(i32, i32) local_unnamed_addr

declare i32 @unknown_3db8e(i32, i32) local_unnamed_addr

declare i32 @unknown_3dc18(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dcbd(i32, i32) local_unnamed_addr

declare i32 @unknown_3dcf5(i32) local_unnamed_addr

declare i32 @unknown_3dcf6() local_unnamed_addr

declare i32 @unknown_3dd24(i32, i32) local_unnamed_addr

declare i32 @unknown_3de4d(i32, i32) local_unnamed_addr

declare i32 @unknown_3df27(i32, i32) local_unnamed_addr

declare i32 @unknown_3df92(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dfe8(i32) local_unnamed_addr

declare i32 @unknown_3e038(i32) local_unnamed_addr

declare i32 @unknown_3e0ec(i32) local_unnamed_addr

declare i32 @unknown_3e120(i32, i32) local_unnamed_addr

declare i32 @unknown_3e170() local_unnamed_addr

declare i32 @unknown_3e1a4(i32, i32) local_unnamed_addr

declare i32 @unknown_3e1c0() local_unnamed_addr

declare i32 @unknown_3e1ca(i32) local_unnamed_addr

declare i32 @unknown_3e20c(i32) local_unnamed_addr

declare i32 @unknown_3e214() local_unnamed_addr

declare i32 @unknown_3e240(i32) local_unnamed_addr

declare i32 @unknown_3e24e() local_unnamed_addr

declare i32 @unknown_3e278(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e27d() local_unnamed_addr

declare i32 @unknown_3e2be(i32) local_unnamed_addr

declare i32 @unknown_3e2d4() local_unnamed_addr

declare i32 @unknown_3e338() local_unnamed_addr

declare i32 @unknown_3e33e(i32) local_unnamed_addr

declare i32 @unknown_3e3a0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e3d8(i32, i32) local_unnamed_addr

declare i32 @unknown_3e458(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e4ae(i32, i32) local_unnamed_addr

declare i32 @unknown_3e4ee(i32) local_unnamed_addr

declare i32 @unknown_3e586(i32) local_unnamed_addr

declare i32 @unknown_3e5e2(i32) local_unnamed_addr

declare i32 @unknown_3e618(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e66e(i32) local_unnamed_addr

declare i32 @unknown_3e6ca(i32) local_unnamed_addr

declare i32 @unknown_3e702(i32, i32) local_unnamed_addr

declare i32 @unknown_3e74c(i32, i32) local_unnamed_addr

declare i32 @unknown_3e7c0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e7de(i32) local_unnamed_addr

declare i32 @unknown_3e836(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e8a6(i32) local_unnamed_addr

declare i32 @unknown_3ec3a(i32) local_unnamed_addr

declare i32 @unknown_3ecbb(i32, i32) local_unnamed_addr

declare i32 @unknown_3ed11(i32) local_unnamed_addr

declare i32 @unknown_3ed22(i32) local_unnamed_addr

declare i32 @unknown_3ed4f(i32, i32) local_unnamed_addr

declare i32 @unknown_3ee37(i32, i32) local_unnamed_addr

declare i32 @unknown_3eefa(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ef95(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ef9a(i32, i32) local_unnamed_addr

declare i32 @unknown_3efbe(i32) local_unnamed_addr

declare i32 @unknown_3effb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f006(i32) local_unnamed_addr

declare i32 @unknown_3f011(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f0cc(i32) local_unnamed_addr

declare i32 @unknown_3f101(i32) local_unnamed_addr

declare i32 @unknown_3f136(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f1ff(i32, i32) local_unnamed_addr

declare i32 @unknown_3f239(i32, i32) local_unnamed_addr

declare i32 @unknown_3f27b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f343(i32) local_unnamed_addr

declare i32 @unknown_3f378(i32, i32) local_unnamed_addr

declare i32 @unknown_3f42c(i32) local_unnamed_addr

declare i32 @unknown_3f43c(i32, i32) local_unnamed_addr

declare i32 @unknown_3f44c(i32, i32) local_unnamed_addr

declare i32 @unknown_3f5f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f692(i32) local_unnamed_addr

declare i32 @unknown_3f6c8(i32) local_unnamed_addr

declare i32 @unknown_3f714(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f776(i32) local_unnamed_addr

declare i32 @unknown_3f7b6(i32) local_unnamed_addr

declare i32 @unknown_3f816() local_unnamed_addr

declare i32 @unknown_3f8a8() local_unnamed_addr

declare i32 @unknown_3f946(i32, i32) local_unnamed_addr

declare i32 @unknown_3fa26(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fa61(i32, i32) local_unnamed_addr

declare i32 @unknown_3fb06(i32) local_unnamed_addr

declare i32 @unknown_3fb1a(i32) local_unnamed_addr

declare i32 @unknown_3fbcc(i32, i32) local_unnamed_addr

declare i32 @unknown_3fc16(i32) local_unnamed_addr

declare i32 @unknown_3fcca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fd4c(i32) local_unnamed_addr

declare i32 @unknown_3fd7c(i32) local_unnamed_addr

declare i32 @unknown_3fda0(i32) local_unnamed_addr

declare i32 @unknown_3fdcc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fddc(i32) local_unnamed_addr

declare i32 @unknown_3fed2(i32, i32) local_unnamed_addr

declare i32 @unknown_3ff22(i32) local_unnamed_addr

declare i32 @unknown_3ff82(i32, i32) local_unnamed_addr

declare i32 @unknown_3ffbe(i32, i32) local_unnamed_addr

declare i32 @unknown_40134(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40154(i32) local_unnamed_addr

declare i32 @unknown_401de(i32, i32) local_unnamed_addr

declare i32 @unknown_401e0(i32) local_unnamed_addr

declare i32 @unknown_401e6(i32, i32) local_unnamed_addr

declare i32 @unknown_40214(i32, i32) local_unnamed_addr

declare i32 @unknown_40264(i32, i32) local_unnamed_addr

declare i32 @unknown_402b4(i32, i32) local_unnamed_addr

declare i32 @unknown_40308(i32) local_unnamed_addr

declare i32 @unknown_40375(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40393(i32) local_unnamed_addr

declare i32 @unknown_403a8(i32) local_unnamed_addr

declare i32 @unknown_403c8(i32) local_unnamed_addr

declare i32 @unknown_403f5(i32) local_unnamed_addr

declare i32 @unknown_4049c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_404e6(i32, i32) local_unnamed_addr

declare i32 @unknown_40514(i32) local_unnamed_addr

declare i32 @unknown_40544(i32) local_unnamed_addr

declare i32 @unknown_4059e(i32) local_unnamed_addr

declare i32 @unknown_405a4(i32) local_unnamed_addr

declare i32 @unknown_4063e(i32, i32) local_unnamed_addr

declare i32 @unknown_406ab(i32, i32) local_unnamed_addr

declare i32 @unknown_40710(i32) local_unnamed_addr

declare i32 @unknown_40758(i32) local_unnamed_addr

declare i32 @unknown_4078d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_407f0(i32, i32) local_unnamed_addr

declare i32 @unknown_40810(i32) local_unnamed_addr

declare i32 @unknown_40898(i32) local_unnamed_addr

declare i32 @unknown_408cb(i32, i32) local_unnamed_addr

declare i32 @unknown_408fb(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4095c(i32) local_unnamed_addr

declare i32 @unknown_409a4(i32) local_unnamed_addr

declare i32 @unknown_40a16(i32) local_unnamed_addr

declare i32 @unknown_40a90(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40aee(i32, i32) local_unnamed_addr

declare i32 @unknown_40b6c(i32) local_unnamed_addr

declare i32 @unknown_40b8c(i32) local_unnamed_addr

declare i32 @unknown_40c0e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40c2e(i32, i32) local_unnamed_addr

declare i32 @unknown_40c3c(i32) local_unnamed_addr

declare i32 @unknown_40cee(i32) local_unnamed_addr

declare i32 @unknown_40d20(i32) local_unnamed_addr

declare i32 @unknown_40e8f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41118(i32) local_unnamed_addr

declare i32 @unknown_411d6(i32, i32) local_unnamed_addr

declare i32 @unknown_411de(i32) local_unnamed_addr

declare i32 @unknown_41216() local_unnamed_addr

declare i32 @unknown_41278(i32) local_unnamed_addr

declare i32 @unknown_41447(i32, i32) local_unnamed_addr

declare i32 @unknown_414ec(i32, i32) local_unnamed_addr

declare i32 @unknown_4153c(i32, i32) local_unnamed_addr

declare i32 @unknown_41566(i32, i32) local_unnamed_addr

declare i32 @unknown_415ac(i32) local_unnamed_addr

declare i32 @unknown_415c6(i32, i32) local_unnamed_addr

declare i32 @unknown_41608(i32) local_unnamed_addr

declare i32 @unknown_41668(i32, i32) local_unnamed_addr

declare i32 @unknown_41678(i32) local_unnamed_addr

declare i32 @unknown_416ae(i32) local_unnamed_addr

declare i32 @unknown_416b8(i32) local_unnamed_addr

declare i32 @unknown_416db(i32, i32) local_unnamed_addr

declare i32 @unknown_416fa(i32) local_unnamed_addr

declare i32 @unknown_4173e(i32) local_unnamed_addr

declare i32 @unknown_41772(i32, i32) local_unnamed_addr

declare i32 @unknown_41804(i32) local_unnamed_addr

declare i32 @unknown_41864(i32) local_unnamed_addr

declare i32 @unknown_41938(i32, i32) local_unnamed_addr

declare i32 @unknown_41a74(i32, i32) local_unnamed_addr

declare i32 @unknown_41ac8(i32) local_unnamed_addr

declare i32 @unknown_41b24(i32) local_unnamed_addr

declare i32 @unknown_41bb0(i32, i32) local_unnamed_addr

declare i32 @unknown_41c44(i32, i32) local_unnamed_addr

declare i32 @unknown_41c98(i32, i32) local_unnamed_addr

declare i32 @unknown_41d58(i32) local_unnamed_addr

declare i32 @unknown_41dec(i32, i32) local_unnamed_addr

declare i32 @unknown_41e80(i32, i32) local_unnamed_addr

declare i32 @unknown_41ef2(i32) local_unnamed_addr

declare i32 @unknown_41f1f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41f3c(i32) local_unnamed_addr

declare i32 @unknown_42137(i32, i32) local_unnamed_addr

declare i32 @unknown_4216e(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42239(i32, i32) local_unnamed_addr

declare i32 @unknown_42256(i32) local_unnamed_addr

declare i32 @unknown_42286(i32, i32) local_unnamed_addr

declare i32 @unknown_422bc(i32, i32) local_unnamed_addr

declare i32 @unknown_422fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4230c(i32, i32) local_unnamed_addr

declare i32 @unknown_423ca(i32) local_unnamed_addr

declare i32 @unknown_42413(i32, i32) local_unnamed_addr

declare i32 @unknown_42486(i32) local_unnamed_addr

declare i32 @unknown_424c4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4254c(i32) local_unnamed_addr

declare i32 @unknown_42595(i32) local_unnamed_addr

declare i32 @unknown_425ac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_425fc(i32) local_unnamed_addr

declare i32 @unknown_42642(i32, i32) local_unnamed_addr

declare i32 @unknown_42666(i32) local_unnamed_addr

declare i32 @unknown_426dc(i32) local_unnamed_addr

declare i32 @unknown_42712(i32) local_unnamed_addr

declare i32 @unknown_427e6(i32, i32) local_unnamed_addr

declare i32 @unknown_42864(i32, i32) local_unnamed_addr

declare i32 @unknown_428b3(i32) local_unnamed_addr

declare i32 @unknown_428e0(i32, i32) local_unnamed_addr

declare i32 @unknown_4292f(i32) local_unnamed_addr

declare i32 @unknown_429a6(i32, i32) local_unnamed_addr

declare i32 @unknown_429c8(i32, i32) local_unnamed_addr

declare i32 @unknown_429cd(i32, i32) local_unnamed_addr

declare i32 @unknown_429fa(i32) local_unnamed_addr

declare i32 @unknown_42a34(i32) local_unnamed_addr

declare i32 @unknown_42a6a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42b56(i32) local_unnamed_addr

declare i32 @unknown_42b5a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42ba7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42bab(i32, i32) local_unnamed_addr

declare i32 @unknown_42bc4(i32) local_unnamed_addr

declare i32 @unknown_42c1a(i32) local_unnamed_addr

declare i32 @unknown_42c6c(i32) local_unnamed_addr

declare i32 @unknown_42ca2(i32) local_unnamed_addr

declare i32 @unknown_42d6a(i32) local_unnamed_addr

declare i32 @unknown_42d6c() local_unnamed_addr

declare i32 @unknown_42dc6(i32, i32) local_unnamed_addr

declare i32 @unknown_42dca(i32) local_unnamed_addr

declare i32 @unknown_42dfa(i32) local_unnamed_addr

declare i32 @unknown_42e20(i32, i32) local_unnamed_addr

declare i32 @unknown_42e2a(i32, i32) local_unnamed_addr

declare i32 @unknown_42f76(i32) local_unnamed_addr

declare i32 @unknown_42f82(i32) local_unnamed_addr

declare i32 @unknown_42fac(i32) local_unnamed_addr

declare i32 @unknown_42fb9(i32) local_unnamed_addr

declare i32 @unknown_43074(i32) local_unnamed_addr

declare i32 @unknown_43078(i32) local_unnamed_addr

declare i32 @unknown_430d4(i32) local_unnamed_addr

declare i32 @unknown_43104(i32) local_unnamed_addr

declare i32 @unknown_43134(i32, i32) local_unnamed_addr

declare i32 @unknown_431d3(i32) local_unnamed_addr

declare i32 @unknown_43280(i32) local_unnamed_addr

declare i32 @unknown_43308(i32) local_unnamed_addr

declare i32 @unknown_433e0(i32) local_unnamed_addr

declare i32 @unknown_43470(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43563(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43566(i32) local_unnamed_addr

declare i32 @unknown_435ca(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4369c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_437e0(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43814(i32) local_unnamed_addr

declare i32 @unknown_43a84(i32, i32) local_unnamed_addr

declare i32 @unknown_43aba(i32, i32) local_unnamed_addr

declare i32 @unknown_43ace(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43b46() local_unnamed_addr

declare i32 @unknown_43b5a() local_unnamed_addr

declare i32 @unknown_43b64(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43bb6() local_unnamed_addr

declare i32 @unknown_43bee(i32, i32) local_unnamed_addr

declare i32 @unknown_43c78(i32) local_unnamed_addr

declare i32 @unknown_43cad(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43cd6() local_unnamed_addr

declare i32 @unknown_43d20() local_unnamed_addr

declare i32 @unknown_43d5a(i32) local_unnamed_addr

declare i32 @unknown_43d85(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43fdc(i32, i32) local_unnamed_addr

declare i32 @unknown_44032(i32) local_unnamed_addr

declare i32 @unknown_44067(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4408c(i32, i32) local_unnamed_addr

declare i32 @unknown_44122(i32) local_unnamed_addr

declare i32 @unknown_44142(i32) local_unnamed_addr

declare i32 @unknown_44170(i32) local_unnamed_addr

declare i32 @unknown_44192(i32, i32) local_unnamed_addr

declare i32 @unknown_4421e(i32, i32) local_unnamed_addr

declare i32 @unknown_44252(i32) local_unnamed_addr

declare i32 @unknown_44270(i32) local_unnamed_addr

declare i32 @unknown_442b2(i32) local_unnamed_addr

declare i32 @unknown_44320(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4435e(i32) local_unnamed_addr

declare i32 @unknown_44366(i32) local_unnamed_addr

declare i32 @unknown_4451a(i32) local_unnamed_addr

declare i32 @unknown_4460e(i32) local_unnamed_addr

declare i32 @unknown_44610(i32) local_unnamed_addr

declare i32 @unknown_44652(i32) local_unnamed_addr

declare i32 @unknown_44682(i32) local_unnamed_addr

declare i32 @unknown_44766(i32) local_unnamed_addr

declare i32 @unknown_44796(i32, i32) local_unnamed_addr

declare i32 @unknown_4480e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_448b0(i32) local_unnamed_addr

declare i32 @unknown_448e6(i32) local_unnamed_addr

declare i32 @unknown_44910(i32, i32) local_unnamed_addr

declare i32 @unknown_4496a(i32) local_unnamed_addr

declare i32 @unknown_44974(i32, i32) local_unnamed_addr

declare i32 @unknown_449e8() local_unnamed_addr

declare i32 @unknown_449f8(i32, i32) local_unnamed_addr

declare i32 @unknown_44a30(i32) local_unnamed_addr

declare i32 @unknown_44a48(i32) local_unnamed_addr

declare i32 @unknown_44a60(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44b21(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44b62(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44d66(i32) local_unnamed_addr

declare i32 @unknown_44da6(i32) local_unnamed_addr

declare i32 @unknown_44de6(i32, i32) local_unnamed_addr

declare i32 @unknown_44df8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44e7c(i32) local_unnamed_addr

declare i32 @unknown_44f7e() local_unnamed_addr

declare i32 @unknown_45394(i32) local_unnamed_addr

declare i32 @unknown_453cc(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_454f2(i32) local_unnamed_addr

declare i32 @unknown_45532(i32, i32) local_unnamed_addr

declare i32 @unknown_455b4(i32) local_unnamed_addr

declare i32 @unknown_455c2(i32) local_unnamed_addr

declare i32 @unknown_455f4(i32) local_unnamed_addr

declare i32 @unknown_45676(i32) local_unnamed_addr

declare i32 @unknown_456ba(i32, i32) local_unnamed_addr

declare i32 @unknown_456ee(i32) local_unnamed_addr

declare i32 @unknown_4571e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45820(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45a24(i32) local_unnamed_addr

declare i32 @unknown_45a63(i32) local_unnamed_addr

declare i32 @unknown_45a94(i32) local_unnamed_addr

declare i32 @unknown_45ad4(i32, i32) local_unnamed_addr

declare i32 @unknown_45af6(i32, i32) local_unnamed_addr

declare i32 @unknown_45ea2(i32) local_unnamed_addr

declare i32 @unknown_45f32(i32) local_unnamed_addr

declare i32 @unknown_45fd4(i32, i32) local_unnamed_addr

declare i32 @unknown_462ea(i32) local_unnamed_addr

declare i32 @unknown_463a2(i32) local_unnamed_addr

declare i32 @unknown_46733(i32) local_unnamed_addr

declare i32 @unknown_467a8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_468bb(i32, i32) local_unnamed_addr

declare i32 @unknown_46a15(i32) local_unnamed_addr

declare i32 @unknown_46a7e(i32) local_unnamed_addr

declare i32 @unknown_46a8c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46ab4(i32) local_unnamed_addr

declare i32 @unknown_46b60(i32) local_unnamed_addr

declare i32 @unknown_46c06(i32, i32) local_unnamed_addr

declare i32 @unknown_46c56(i32) local_unnamed_addr

declare i32 @unknown_46c86(i32, i32) local_unnamed_addr

declare i32 @unknown_46c8b(i32) local_unnamed_addr

declare i32 @unknown_46ce2(i32, i32) local_unnamed_addr

declare i32 @unknown_46d1e(i32, i32) local_unnamed_addr

declare i32 @unknown_46d9a(i32, i32) local_unnamed_addr

declare i32 @unknown_46e51(i32) local_unnamed_addr

declare i32 @unknown_46e68(i32) local_unnamed_addr

declare i32 @unknown_46eb2(i32) local_unnamed_addr

declare i32 @unknown_46fd0(i32, i32) local_unnamed_addr

declare i32 @unknown_46fd6(i32) local_unnamed_addr

declare i32 @unknown_47027(i32) local_unnamed_addr

declare i32 @unknown_4703c(i32) local_unnamed_addr

declare i32 @unknown_47061(i32) local_unnamed_addr

declare i32 @unknown_470cc(i32) local_unnamed_addr

declare i32 @unknown_47183(i32, i32) local_unnamed_addr

declare i32 @unknown_471e8(i32) local_unnamed_addr

declare i32 @unknown_471ff(i32) local_unnamed_addr

declare i32 @unknown_4737c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47383(i32) local_unnamed_addr

declare i32 @unknown_473bd(i32) local_unnamed_addr

declare i32 @unknown_47466(i32, i32) local_unnamed_addr

declare i32 @unknown_47511(i32) local_unnamed_addr

declare i32 @unknown_47564(i32) local_unnamed_addr

declare i32 @unknown_477c2(i32, i32) local_unnamed_addr

declare i32 @unknown_47813(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4788a(i32, i32) local_unnamed_addr

declare i32 @unknown_47911(i32) local_unnamed_addr

declare i32 @unknown_47918(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47946(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47977(i32, i32) local_unnamed_addr

declare i32 @unknown_479d2(i32) local_unnamed_addr

declare i32 @unknown_47a22(i32) local_unnamed_addr

declare i32 @unknown_47a85() local_unnamed_addr

declare i32 @unknown_47a8c(i32, i32) local_unnamed_addr

declare i32 @unknown_47ad3(i32, i32) local_unnamed_addr

declare i32 @unknown_47ae6(i32) local_unnamed_addr

declare i32 @unknown_47c9f(i32, i32) local_unnamed_addr

declare i32 @unknown_47dca(i32) local_unnamed_addr

declare i32 @unknown_47dfb(i32, i32) local_unnamed_addr

declare i32 @unknown_47f2a(i32) local_unnamed_addr

declare i32 @unknown_47f41(i32, i32) local_unnamed_addr

declare i32 @unknown_47f61(i32, i32) local_unnamed_addr

declare i32 @unknown_47f89(i32, i32) local_unnamed_addr

declare i32 @unknown_47f91(i32) local_unnamed_addr

declare i32 @unknown_47ffc() local_unnamed_addr

declare i32 @unknown_4809e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4818e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_483b8(i32) local_unnamed_addr

declare i32 @unknown_483ec(i32) local_unnamed_addr

declare i32 @unknown_4840c(i32) local_unnamed_addr

declare i32 @unknown_48438() local_unnamed_addr

declare i32 @unknown_48440(i32) local_unnamed_addr

declare i32 @unknown_48478() local_unnamed_addr

declare i32 @unknown_485ac(i32, i32) local_unnamed_addr

declare i32 @unknown_48752(i32) local_unnamed_addr

declare i32 @unknown_48786(i32) local_unnamed_addr

declare i32 @unknown_487c8(i32, i32) local_unnamed_addr

declare i32 @unknown_487e2(i32) local_unnamed_addr

declare i32 @unknown_48844(i32, i32) local_unnamed_addr

declare i32 @unknown_488f8(i32) local_unnamed_addr

declare i32 @unknown_48942(i32) local_unnamed_addr

declare i32 @unknown_4894c(i32, i32) local_unnamed_addr

declare i32 @unknown_48952(i32) local_unnamed_addr

declare i32 @unknown_48986(i32) local_unnamed_addr

declare i32 @unknown_489d0(i32) local_unnamed_addr

declare i32 @unknown_489fa(i32) local_unnamed_addr

declare i32 @unknown_48a98(i32) local_unnamed_addr

declare i32 @unknown_48ab2(i32) local_unnamed_addr

declare i32 @unknown_48af4(i32) local_unnamed_addr

declare i32 @unknown_48b80(i32, i32) local_unnamed_addr

declare i32 @unknown_48c14(i32, i32) local_unnamed_addr

declare i32 @unknown_48cba(i32) local_unnamed_addr

declare i32 @unknown_48d28(i32) local_unnamed_addr

declare i32 @unknown_48d8a(i32) local_unnamed_addr

declare i32 @unknown_48dbc(i32, i32) local_unnamed_addr

declare i32 @unknown_48e50(i32, i32) local_unnamed_addr

declare i32 @unknown_48e78(i32) local_unnamed_addr

declare i32 @unknown_48e8a(i32) local_unnamed_addr

declare i32 @unknown_48ea8(i32) local_unnamed_addr

declare i32 @unknown_48f0c(i32) local_unnamed_addr

declare i32 @unknown_48f2c(i32) local_unnamed_addr

declare i32 @unknown_49096() local_unnamed_addr

declare i32 @unknown_490c6() local_unnamed_addr

declare i32 @unknown_49212(i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49290(i32, i32) local_unnamed_addr

declare i32 @unknown_493fa(i32) local_unnamed_addr

declare i32 @unknown_49540(i32) local_unnamed_addr

declare i32 @unknown_49551(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_495de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4966f(i32) local_unnamed_addr

declare i32 @unknown_496d9(i32) local_unnamed_addr

declare i32 @unknown_49744(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49746(i32) local_unnamed_addr

declare i32 @unknown_49800(i32) local_unnamed_addr

declare i32 @unknown_4981c(i32, i32) local_unnamed_addr

declare i32 @unknown_49830(i32) local_unnamed_addr

declare i32 @unknown_4983e(i32, i32) local_unnamed_addr

declare i32 @unknown_49850(i32) local_unnamed_addr

declare i32 @unknown_49884(i32, i32) local_unnamed_addr

declare i32 @unknown_498d3(i32) local_unnamed_addr

declare i32 @unknown_49901(i32) local_unnamed_addr

declare i32 @unknown_499a6(i32, i32) local_unnamed_addr

declare i32 @unknown_499ef(i32) local_unnamed_addr

declare i32 @unknown_49a0c(i32, i32) local_unnamed_addr

declare i32 @unknown_49a31(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49a40(i32, i32) local_unnamed_addr

declare i32 @unknown_49a54(i32) local_unnamed_addr

declare i32 @unknown_49a6e() local_unnamed_addr

declare i32 @unknown_49b1e(i32) local_unnamed_addr

declare i32 @unknown_49b28(i32, i32) local_unnamed_addr

declare i32 @unknown_49b42() local_unnamed_addr

declare i32 @unknown_49c2a() local_unnamed_addr

declare i32 @unknown_49c92() local_unnamed_addr

declare i32 @unknown_49e76(i32) local_unnamed_addr

declare i32 @unknown_49eac(i32) local_unnamed_addr

declare i32 @unknown_49eae(i32, i32) local_unnamed_addr

declare i32 @unknown_49f74(i32) local_unnamed_addr

declare i32 @unknown_49fa2(i32, i32) local_unnamed_addr

declare i32 @unknown_4a02e(i32) local_unnamed_addr

declare i32 @unknown_4a0f4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a17f(i32, i32) local_unnamed_addr

declare i32 @unknown_4a1b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a21e() local_unnamed_addr

declare i32 @unknown_4a318() local_unnamed_addr

declare i32 @unknown_4a358(i32) local_unnamed_addr

declare i32 @unknown_4a35d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a3c9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a430(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a452(i32) local_unnamed_addr

declare i32 @unknown_4a4cc(i32) local_unnamed_addr

declare i32 @unknown_4a4cd(i32, i32) local_unnamed_addr

declare i32 @unknown_4a502(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a597(i32) local_unnamed_addr

declare i32 @unknown_4a5c4(i32) local_unnamed_addr

declare i32 @unknown_4a5f0(i32, i32) local_unnamed_addr

declare i32 @unknown_4a650(i32) local_unnamed_addr

declare i32 @unknown_4a654(i32) local_unnamed_addr

declare i32 @unknown_4a698(i32, i32) local_unnamed_addr

declare i32 @unknown_4a6cc(i32, i32) local_unnamed_addr

declare i32 @unknown_4a6ff(i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a74e(i32, i32) local_unnamed_addr

declare i32 @unknown_4a756(i32) local_unnamed_addr

declare i32 @unknown_4a79a(i32, i32) local_unnamed_addr

declare i32 @unknown_4a7fe(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a96a(i32) local_unnamed_addr

declare i32 @unknown_4a980(i32, i32) local_unnamed_addr

declare i32 @unknown_4aa3a(i32) local_unnamed_addr

declare i32 @unknown_4ab36(i32) local_unnamed_addr

declare i32 @unknown_4ab78(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ac34(i32) local_unnamed_addr

declare i32 @unknown_4adbd(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b390(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b76e(i32) local_unnamed_addr

declare i32 @unknown_4b930() local_unnamed_addr

declare i32 @unknown_4ba02(i32) local_unnamed_addr

declare i32 @unknown_4ba06(i32, i32) local_unnamed_addr

declare i32 @unknown_4ba12(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ba46(i32) local_unnamed_addr

declare i32 @unknown_4ba56(i32) local_unnamed_addr

declare i32 @unknown_4ba76(i32, i32) local_unnamed_addr

declare i32 @unknown_4ba8b(i32) local_unnamed_addr

declare i32 @unknown_4bf65(i32, i32) local_unnamed_addr

declare i32 @unknown_4c060(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c166(i32, i32) local_unnamed_addr

declare i32 @unknown_4c1a6(i32) local_unnamed_addr

declare i32 @unknown_4c1d8() local_unnamed_addr

declare i32 @unknown_4c234(i32) local_unnamed_addr

declare i32 @unknown_4c289(i32, i32) local_unnamed_addr

declare i32 @unknown_4c290(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c2cc(i32, i32) local_unnamed_addr

declare i32 @unknown_4c2dc(i32) local_unnamed_addr

declare i32 @unknown_4c30c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c50c(i32) local_unnamed_addr

declare i32 @unknown_4c557(i32, i32) local_unnamed_addr

declare i32 @unknown_4c5d5(i32) local_unnamed_addr

declare i32 @unknown_4c735(i32, i32) local_unnamed_addr

declare i32 @unknown_4c7da(i32) local_unnamed_addr

declare i32 @unknown_4c84c(i32) local_unnamed_addr

declare i32 @unknown_4c882(i32, i32) local_unnamed_addr

declare i32 @unknown_4c8bc(i32, i32) local_unnamed_addr

declare i32 @unknown_4c93c(i32) local_unnamed_addr

declare i32 @unknown_4c980(i32) local_unnamed_addr

declare i32 @unknown_4c9b6(i32) local_unnamed_addr

declare i32 @unknown_4ca1a(i32, i32) local_unnamed_addr

declare i32 @unknown_4cac0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cb3c(i32, i32) local_unnamed_addr

declare i32 @unknown_4cb7a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cbae(i32) local_unnamed_addr

declare i32 @unknown_4cc62() local_unnamed_addr

declare i32 @unknown_4ccb2(i32) local_unnamed_addr

declare i32 @unknown_4ce43(i32, i32) local_unnamed_addr

declare i32 @unknown_4ce68() local_unnamed_addr

declare i32 @unknown_4d0a4(i32, i32) local_unnamed_addr

declare i32 @unknown_4d0ee(i32, i32) local_unnamed_addr

declare i32 @unknown_4d1de(i32, i32) local_unnamed_addr

declare i32 @unknown_4d2d6(i32) local_unnamed_addr

declare i32 @unknown_4d3b6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d51a(i32, i32) local_unnamed_addr

declare i32 @unknown_4d5a2(i32, i32) local_unnamed_addr

declare i32 @unknown_4d5b0(i32, i32) local_unnamed_addr

declare i32 @unknown_4d5e8(i32) local_unnamed_addr

declare i32 @unknown_4d716(i32) local_unnamed_addr

declare i32 @unknown_4d78e(i32) local_unnamed_addr

declare i32 @unknown_4d94a(i32) local_unnamed_addr

declare i32 @unknown_4da00(i32) local_unnamed_addr

declare i32 @unknown_4da2e(i32, i32) local_unnamed_addr

declare i32 @unknown_4daca(i32) local_unnamed_addr

declare i32 @unknown_4dade(i32, i32) local_unnamed_addr

declare i32 @unknown_4dae6(i32) local_unnamed_addr

declare i32 @unknown_4db72(i32, i32) local_unnamed_addr

declare i32 @unknown_4dbe4(i32) local_unnamed_addr

declare i32 @unknown_4dbe6(i32, i32) local_unnamed_addr

declare i32 @unknown_4dc71(i32, i32) local_unnamed_addr

declare i32 @unknown_4ddae(i32) local_unnamed_addr

declare i32 @unknown_4de88(i32) local_unnamed_addr

declare i32 @unknown_4deee(i32, i32) local_unnamed_addr

declare i32 @unknown_4df3e(i32) local_unnamed_addr

declare i32 @unknown_4df73(i32) local_unnamed_addr

declare i32 @unknown_4df86(i32) local_unnamed_addr

declare i32 @unknown_4df88(i32) local_unnamed_addr

declare i32 @unknown_4dfa0(i32, i32) local_unnamed_addr

declare i32 @unknown_4dfc6(i32) local_unnamed_addr

declare i32 @unknown_4dfdc(i32, i32) local_unnamed_addr

declare i32 @unknown_4e0c4(i32) local_unnamed_addr

declare i32 @unknown_4e204(i32, i32) local_unnamed_addr

declare i32 @unknown_4e254(i32) local_unnamed_addr

declare i32 @unknown_4e289(i32) local_unnamed_addr

declare i32 @unknown_4e2b6(i32, i32) local_unnamed_addr

declare i32 @unknown_4e2f2(i32, i32) local_unnamed_addr

declare i32 @unknown_4e3da(i32) local_unnamed_addr

declare i32 @unknown_4e6d9(i32, i32) local_unnamed_addr

declare i32 @unknown_4e700(i32) local_unnamed_addr

declare i32 @unknown_4e760(i32) local_unnamed_addr

declare i32 @unknown_4e795(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e87a(i32, i32) local_unnamed_addr

declare i32 @unknown_4e89e(i32) local_unnamed_addr

declare i32 @unknown_4e8ec(i32) local_unnamed_addr

declare i32 @unknown_4e94e(i32) local_unnamed_addr

declare i32 @unknown_4e9f5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ea93(i32) local_unnamed_addr

declare i32 @unknown_4ec45(i32) local_unnamed_addr

declare i32 @unknown_4eca7(i32) local_unnamed_addr

declare i32 @unknown_4ecdc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4edde(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ee6c(i32) local_unnamed_addr

declare i32 @unknown_4ee82() local_unnamed_addr

declare i32 @unknown_4ee8f(i32) local_unnamed_addr

declare i32 @unknown_4eff0(i32) local_unnamed_addr

declare i32 @unknown_4f0d6(i32, i32) local_unnamed_addr

declare i32 @unknown_4f102() local_unnamed_addr

declare i32 @unknown_4f13a(i32) local_unnamed_addr

declare i32 @unknown_4f2a4() local_unnamed_addr

declare i32 @unknown_4f2ee() local_unnamed_addr

declare i32 @unknown_4f32a(i32, i32) local_unnamed_addr

declare i32 @unknown_4f33a() local_unnamed_addr

declare i32 @unknown_4f37b(i32, i32) local_unnamed_addr

declare i32 @unknown_4f429(i32) local_unnamed_addr

declare i32 @unknown_4f4b5(i32, i32) local_unnamed_addr

declare i32 @unknown_4f778(i32) local_unnamed_addr

declare i32 @unknown_4f7c9(i32, i32) local_unnamed_addr

declare i32 @unknown_4f7e8(i32) local_unnamed_addr

declare i32 @unknown_4f7ff() local_unnamed_addr

declare i32 @unknown_4f80e(i32, i32) local_unnamed_addr

declare i32 @unknown_4f872(i32, i32) local_unnamed_addr

declare i32 @unknown_4f8d8(i32, i32) local_unnamed_addr

declare i32 @unknown_4f922(i32) local_unnamed_addr

declare i32 @unknown_4f92f(i32) local_unnamed_addr

declare i32 @unknown_4faa6(i32, i32) local_unnamed_addr

declare i32 @unknown_4faf0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fb3c(i32) local_unnamed_addr

declare i32 @unknown_4fb58(i32, i32) local_unnamed_addr

declare i32 @unknown_4fe76(i32) local_unnamed_addr

declare i32 @unknown_4fec3(i32) local_unnamed_addr

declare i32 @unknown_4fef2(i32, i32) local_unnamed_addr

declare i32 @unknown_50120(i32) local_unnamed_addr

declare i32 @unknown_50262(i32, i32) local_unnamed_addr

declare i32 @unknown_503d2(i32) local_unnamed_addr

declare i32 @unknown_50488(i32) local_unnamed_addr

declare i32 @unknown_504b6(i32, i32) local_unnamed_addr

declare i32 @unknown_50540(i32, i32) local_unnamed_addr

declare i32 @unknown_50542(i32) local_unnamed_addr

declare i32 @unknown_50634(i32, i32) local_unnamed_addr

declare i32 @unknown_506f0(i32) local_unnamed_addr

declare i32 @unknown_50736(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_507ea(i32, i32) local_unnamed_addr

declare i32 @unknown_50858(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_508be(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50da5(i32) local_unnamed_addr

declare i32 @unknown_50da6(i32) local_unnamed_addr

declare i32 @unknown_50e11(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50ed7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50fa2(i32, i32) local_unnamed_addr

declare i32 @unknown_51075(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_510d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51294(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_514b2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51540(i32) local_unnamed_addr

declare i32 @unknown_5169c(i32) local_unnamed_addr

declare i32 @unknown_51790(i32) local_unnamed_addr

declare i32 @unknown_5182a(i32, i32) local_unnamed_addr

declare i32 @unknown_5182c(i32) local_unnamed_addr

declare i32 @unknown_51864(i32, i32) local_unnamed_addr

declare i32 @unknown_518fa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51a04(i32, i32) local_unnamed_addr

declare i32 @unknown_51a44(i32) local_unnamed_addr

declare i32 @unknown_51a76(i32) local_unnamed_addr

declare i32 @unknown_51ad2(i32) local_unnamed_addr

declare i32 @unknown_51b2e(i32) local_unnamed_addr

declare i32 @unknown_51b6a(i32, i32) local_unnamed_addr

declare i32 @unknown_51b7a(i32) local_unnamed_addr

declare i32 @unknown_51baa() local_unnamed_addr

declare i32 @unknown_51daa(i32) local_unnamed_addr

declare i32 @unknown_51f02(i32, i32) local_unnamed_addr

declare i32 @unknown_51f50(i32, i32) local_unnamed_addr

declare i32 @unknown_51f90(i32) local_unnamed_addr

declare i32 @unknown_51fd3(i32, i32) local_unnamed_addr

declare i32 @unknown_5201e(i32) local_unnamed_addr

declare i32 @unknown_52078(i32) local_unnamed_addr

declare i32 @unknown_520ae(i32) local_unnamed_addr

declare i32 @unknown_520ea(i32) local_unnamed_addr

declare i32 @unknown_521c0(i32) local_unnamed_addr

declare i32 @unknown_52254(i32, i32) local_unnamed_addr

declare i32 @unknown_522a8(i32) local_unnamed_addr

declare i32 @unknown_522f6(i32) local_unnamed_addr

declare i32 @unknown_5231c(i32, i32) local_unnamed_addr

declare i32 @unknown_52376() local_unnamed_addr

declare i32 @unknown_5241c(i32) local_unnamed_addr

declare i32 @unknown_525b2(i32, i32) local_unnamed_addr

declare i32 @unknown_525fc(i32, i32) local_unnamed_addr

declare i32 @unknown_5267c(i32, i32) local_unnamed_addr

declare i32 @unknown_52a72(i32, i32) local_unnamed_addr

declare i32 @unknown_52b6e(i32, i32) local_unnamed_addr

declare i32 @unknown_52c07(i32) local_unnamed_addr

declare i32 @unknown_52ca7(i32, i32) local_unnamed_addr

declare i32 @unknown_52d2e() local_unnamed_addr

declare i32 @unknown_52d74() local_unnamed_addr

declare i32 @unknown_52dbc(i32, i32) local_unnamed_addr

declare i32 @unknown_52e06(i32) local_unnamed_addr

declare i32 @unknown_52e3c(i32, i32) local_unnamed_addr

declare i32 @unknown_53168(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53238(i32, i32) local_unnamed_addr

declare i32 @unknown_53278(i32, i32) local_unnamed_addr

declare i32 @unknown_533e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_535e6(i32) local_unnamed_addr

declare i32 @unknown_537d2(i32) local_unnamed_addr

declare i32 @unknown_5388c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_538e2(i32) local_unnamed_addr

declare i32 @unknown_5390e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5393e(i32) local_unnamed_addr

declare i32 @unknown_53990(i32, i32) local_unnamed_addr

declare i32 @unknown_539f0(i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53ba0() local_unnamed_addr

declare i32 @unknown_53cff(i32) local_unnamed_addr

declare i32 @unknown_53fd0(i32, i32) local_unnamed_addr

declare i32 @unknown_54020(i32) local_unnamed_addr

declare i32 @unknown_54055(i32) local_unnamed_addr

declare i32 @unknown_54065(i32, i32) local_unnamed_addr

declare i32 @unknown_540b6(i32) local_unnamed_addr

declare i32 @unknown_540d2(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5413f(i32, i32) local_unnamed_addr

declare i32 @unknown_54199(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5421d(i32) local_unnamed_addr

declare i32 @unknown_5426e(i32) local_unnamed_addr

declare i32 @unknown_5437e(i32, i32) local_unnamed_addr

declare i32 @unknown_543ce(i32) local_unnamed_addr

declare i32 @unknown_543e1(i32) local_unnamed_addr

declare i32 @unknown_54403(i32) local_unnamed_addr

declare i32 @unknown_546cc(i32, i32) local_unnamed_addr

declare i32 @unknown_5472c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54806(i32) local_unnamed_addr

declare i32 @unknown_54860(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54af5(i32) local_unnamed_addr

declare i32 @unknown_54b37(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54d74(i32) local_unnamed_addr

declare i32 @unknown_54dde(i32) local_unnamed_addr

declare i32 @unknown_54e18(i32, i32) local_unnamed_addr

declare i32 @unknown_54e22(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54e82(i32, i32) local_unnamed_addr

declare i32 @unknown_54f18(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54f85(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54ff2(i32) local_unnamed_addr

declare i32 @unknown_5504c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55260(i32) local_unnamed_addr

declare i32 @unknown_5539b(i32, i32) local_unnamed_addr

declare i32 @unknown_55658(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55858(i32) local_unnamed_addr

declare i32 @unknown_558c2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5591a(i32, i32) local_unnamed_addr

declare i32 @unknown_55964(i32, i32) local_unnamed_addr

declare i32 @unknown_559a4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55a2e(i32) local_unnamed_addr

declare i32 @unknown_55a68(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55b5e(i32, i32) local_unnamed_addr

declare i32 @unknown_55ca4(i32, i32) local_unnamed_addr

declare i32 @unknown_55ce6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56008(i32) local_unnamed_addr

declare i32 @unknown_5609e(i32) local_unnamed_addr

declare i32 @unknown_560c2(i32) local_unnamed_addr

declare i32 @unknown_5614e(i32, i32) local_unnamed_addr

declare i32 @unknown_56252(i32) local_unnamed_addr

declare i32 @unknown_563ba() local_unnamed_addr

declare i32 @unknown_5646a(i32, i32) local_unnamed_addr

declare i32 @unknown_5650a(i32, i32) local_unnamed_addr

declare i32 @unknown_56670(i32, i32) local_unnamed_addr

declare i32 @unknown_5676e(i32, i32) local_unnamed_addr

declare i32 @unknown_568a0(i32, i32) local_unnamed_addr

declare i32 @unknown_568b0(i32) local_unnamed_addr

declare i32 @unknown_5699e(i32, i32) local_unnamed_addr

declare i32 @unknown_56a2a() local_unnamed_addr

declare i32 @unknown_56a70() local_unnamed_addr

declare i32 @unknown_56a9e() local_unnamed_addr

declare i32 @unknown_56c4b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56cde(i32) local_unnamed_addr

declare i32 @unknown_56d0b(i32) local_unnamed_addr

declare i32 @unknown_56d7e(i32, i32) local_unnamed_addr

declare i32 @unknown_56e32(i32) local_unnamed_addr

declare i32 @unknown_56e5f(i32) local_unnamed_addr

declare i32 @unknown_56e6a(i32, i32) local_unnamed_addr

declare i32 @unknown_56edc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56ff0(i32) local_unnamed_addr

declare i32 @unknown_5719c(i32) local_unnamed_addr

declare i32 @unknown_571ca(i32, i32) local_unnamed_addr

declare i32 @unknown_57256(i32) local_unnamed_addr

declare i32 @unknown_5731e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_573d4(i32) local_unnamed_addr

declare i32 @unknown_57402(i32, i32) local_unnamed_addr

declare i32 @unknown_5748e(i32) local_unnamed_addr

declare i32 @unknown_57556(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57560(i32, i32) local_unnamed_addr

declare i32 @unknown_575b8() local_unnamed_addr

declare i32 @unknown_575e2(i32) local_unnamed_addr

declare i32 @unknown_57638(i32, i32) local_unnamed_addr

declare i32 @unknown_57641(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57743(i32) local_unnamed_addr

declare i32 @unknown_57976(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_579a4(i32) local_unnamed_addr

declare i32 @unknown_57a3f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57b66(i32) local_unnamed_addr

declare i32 @unknown_57c24(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57e32(i32) local_unnamed_addr

declare i32 @unknown_57e46(i32) local_unnamed_addr

declare i32 @unknown_57f22(i32) local_unnamed_addr

declare i32 @unknown_57fe0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58231(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_582da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_582ea() local_unnamed_addr

declare i32 @unknown_5837d(i32, i32) local_unnamed_addr

declare i32 @unknown_58432(i32) local_unnamed_addr

declare i32 @unknown_58504(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5860e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_586d9(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58827(i32, i32) local_unnamed_addr

declare i32 @unknown_5890d(i32, i32) local_unnamed_addr

declare i32 @unknown_58961(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58a2c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58ad8(i32) local_unnamed_addr

declare i32 @unknown_58b1e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58b64(i32) local_unnamed_addr

declare i32 @unknown_58b92(i32, i32) local_unnamed_addr

declare i32 @unknown_58be5(i32, i32) local_unnamed_addr

declare i32 @unknown_58c69(i32, i32) local_unnamed_addr

declare i32 @unknown_58c70(i32, i32) local_unnamed_addr

declare i32 @unknown_58d69(i32) local_unnamed_addr

declare i32 @unknown_58da3(i32, i32) local_unnamed_addr

declare i32 @unknown_58efe(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58f10(i32) local_unnamed_addr

declare i32 @unknown_58f30(i32) local_unnamed_addr

declare i32 @unknown_5911e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_592f6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59378(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_593b0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_593d0(i32, i32) local_unnamed_addr

declare i32 @unknown_593e6(i32) local_unnamed_addr

declare i32 @unknown_59408(i32, i32) local_unnamed_addr

declare i32 @unknown_59452(i32, i32) local_unnamed_addr

declare i32 @unknown_59492(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5951c(i32) local_unnamed_addr

declare i32 @unknown_59556(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59570(i32) local_unnamed_addr

declare i32 @unknown_595de(i32) local_unnamed_addr

declare i32 @unknown_59614(i32, i32) local_unnamed_addr

declare i32 @unknown_5975a(i32, i32) local_unnamed_addr

declare i32 @unknown_5979c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59a7e(i32) local_unnamed_addr

declare i32 @unknown_59aac(i32) local_unnamed_addr

declare i32 @unknown_59abe(i32, i32) local_unnamed_addr

declare i32 @unknown_59c70(i32) local_unnamed_addr

declare i32 @unknown_59ca6() local_unnamed_addr

declare i32 @unknown_59cce(i32, i32) local_unnamed_addr

declare i32 @unknown_59cea(i32, i32) local_unnamed_addr

declare i32 @unknown_59ed4(i32, i32) local_unnamed_addr

declare i32 @unknown_59fd2(i32, i32) local_unnamed_addr

declare i32 @unknown_5a26a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a3ce(i32) local_unnamed_addr

declare i32 @unknown_5a499(i32) local_unnamed_addr

declare i32 @unknown_5a49f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a75a(i32) local_unnamed_addr

declare i32 @unknown_5a787(i32) local_unnamed_addr

declare i32 @unknown_5a7fa(i32, i32) local_unnamed_addr

declare i32 @unknown_5a8ae(i32) local_unnamed_addr

declare i32 @unknown_5a8db(i32) local_unnamed_addr

declare i32 @unknown_5a958(i32, i32) local_unnamed_addr

declare i32 @unknown_5a9ec(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5aa0a() local_unnamed_addr

declare i32 @unknown_5aa3a(i32) local_unnamed_addr

declare i32 @unknown_5ac76(i32) local_unnamed_addr

declare i32 @unknown_5acb4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ad0a(i32, i32) local_unnamed_addr

declare i32 @unknown_5ad22(i32) local_unnamed_addr

declare i32 @unknown_5ae4d(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5af7d(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b17a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b276(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b433(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b494(i32, i32) local_unnamed_addr

declare i32 @unknown_5b52f(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b604(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b793(i32) local_unnamed_addr

declare i32 @unknown_5b88f() local_unnamed_addr

declare i32 @unknown_5babe(i32, i32) local_unnamed_addr

declare i32 @unknown_5bb92(i32, i32) local_unnamed_addr

declare i32 @unknown_5bc66(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bd3c(i32, i32) local_unnamed_addr

declare i32 @unknown_5bd90(i32) local_unnamed_addr

declare i32 @unknown_5bdf8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5be20(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5be50(i32, i32) local_unnamed_addr

declare i32 @unknown_5be8a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c088(i32) local_unnamed_addr

declare i32 @unknown_5c0ba() local_unnamed_addr

declare i32 @unknown_5c132() local_unnamed_addr

declare i32 @unknown_5c14c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c1d6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c314() local_unnamed_addr

declare i32 @unknown_5c36c(i32, i32) local_unnamed_addr

declare i32 @unknown_5c392(i32, i32) local_unnamed_addr

declare i32 @unknown_5c3ea(i32) local_unnamed_addr

declare i32 @unknown_5c428(i32, i32) local_unnamed_addr

declare i32 @unknown_5c474(i32) local_unnamed_addr

declare i32 @unknown_5c53a(i32) local_unnamed_addr

declare i32 @unknown_5c542(i32) local_unnamed_addr

declare i32 @unknown_5c5be(i32) local_unnamed_addr

declare i32 @unknown_5c5fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c604(i32, i32) local_unnamed_addr

declare i32 @unknown_5c64e(i32, i32) local_unnamed_addr

declare i32 @unknown_5c718(i32) local_unnamed_addr

declare i32 @unknown_5c7d0(i32) local_unnamed_addr

declare i32 @unknown_5c89a(i32, i32) local_unnamed_addr

declare i32 @unknown_5c8dc(i32) local_unnamed_addr

declare i32 @unknown_5c980(i32) local_unnamed_addr

declare i32 @unknown_5c9b4(i32, i32) local_unnamed_addr

declare i32 @unknown_5c9fe(i32, i32) local_unnamed_addr

declare i32 @unknown_5ca3c(i32) local_unnamed_addr

declare i32 @unknown_5ca48(i32, i32) local_unnamed_addr

declare i32 @unknown_5ca72(i32) local_unnamed_addr

declare i32 @unknown_5ca92(i32, i32) local_unnamed_addr

declare i32 @unknown_5caa4(i32) local_unnamed_addr

declare i32 @unknown_5cad2(i32) local_unnamed_addr

declare i32 @unknown_5cb12(i32) local_unnamed_addr

declare i32 @unknown_5cb52(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cb55(i32) local_unnamed_addr

declare i32 @unknown_5cc0e(i32, i32) local_unnamed_addr

declare i32 @unknown_5cc4e(i32) local_unnamed_addr

declare i32 @unknown_5cd40(i32, i32) local_unnamed_addr

declare i32 @unknown_5cdf0(i32, i32) local_unnamed_addr

declare i32 @unknown_5cee6(i32, i32) local_unnamed_addr

declare i32 @unknown_5cf80(i32, i32) local_unnamed_addr

declare i32 @unknown_5d072(i32, i32) local_unnamed_addr

declare i32 @unknown_5d1a4(i32) local_unnamed_addr

declare i32 @unknown_5d1ee(i32) local_unnamed_addr

declare i32 @unknown_5d230(i32, i32) local_unnamed_addr

declare i32 @unknown_5d292(i32) local_unnamed_addr

declare i32 @unknown_5d38a(i32) local_unnamed_addr

declare i32 @unknown_5d3b3(i32) local_unnamed_addr

declare i32 @unknown_5d41c(i32) local_unnamed_addr

declare i32 @unknown_5d450(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d4e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d5d2(i32) local_unnamed_addr

declare i32 @unknown_5d5d3(i32) local_unnamed_addr

declare i32 @unknown_5d6e8(i32) local_unnamed_addr

declare i32 @unknown_5d72c(i32) local_unnamed_addr

declare i32 @unknown_5d7e8() local_unnamed_addr

declare i32 @unknown_5d8e4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d9b9(i32) local_unnamed_addr

declare i32 @unknown_5db3c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5dd10(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5def6(i32) local_unnamed_addr

declare i32 @unknown_5dfb6(i32) local_unnamed_addr

declare i32 @unknown_5e0a8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e146(i32, i32) local_unnamed_addr

declare i32 @unknown_5e280(i32) local_unnamed_addr

declare i32 @unknown_5e594(i32, i32) local_unnamed_addr

declare i32 @unknown_5e734(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e808(i32, i32) local_unnamed_addr

declare i32 @unknown_5e8b2(i32, i32) local_unnamed_addr

declare i32 @unknown_5e912(i32, i32) local_unnamed_addr

declare i32 @unknown_5e966(i32) local_unnamed_addr

declare i32 @unknown_5e9ce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ea26(i32, i32) local_unnamed_addr

declare i32 @unknown_5ea60(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5eb08(i32, i32) local_unnamed_addr

declare i32 @unknown_5eb7e(i32, i32) local_unnamed_addr

declare i32 @unknown_5ebdc(i32, i32) local_unnamed_addr

declare i32 @unknown_5ec26(i32) local_unnamed_addr

declare i32 @unknown_5ec32(i32, i32) local_unnamed_addr

declare i32 @unknown_5ec58(i32, i32) local_unnamed_addr

declare i32 @unknown_5ec98(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ecec(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5eea8(i32, i32) local_unnamed_addr

declare i32 @unknown_5ef3e(i32, i32) local_unnamed_addr

declare i32 @unknown_5f050() local_unnamed_addr

declare i32 @unknown_5f14c(i32, i32) local_unnamed_addr

declare i32 @unknown_5f1f8(i32) local_unnamed_addr

declare i32 @unknown_5f2c2(i32, i32) local_unnamed_addr

declare i32 @unknown_5f304(i32) local_unnamed_addr

declare i32 @unknown_5f366(i32) local_unnamed_addr

declare i32 @unknown_5f3a8(i32) local_unnamed_addr

declare i32 @unknown_5f3dc(i32, i32) local_unnamed_addr

declare i32 @unknown_5f426(i32, i32) local_unnamed_addr

declare i32 @unknown_5f470(i32, i32) local_unnamed_addr

declare i32 @unknown_5f4ba(i32, i32) local_unnamed_addr

declare i32 @unknown_5f4fa(i32) local_unnamed_addr

declare i32 @unknown_5f512(i32) local_unnamed_addr

declare i32 @unknown_5f53a(i32) local_unnamed_addr

declare i32 @unknown_5f57a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f636(i32, i32) local_unnamed_addr

declare i32 @unknown_5f676(i32) local_unnamed_addr

declare i32 @unknown_5f8b6(i32, i32) local_unnamed_addr

declare i32 @unknown_5f8be(i32, i32) local_unnamed_addr

declare i32 @unknown_5f9a8(i32, i32) local_unnamed_addr

declare i32 @unknown_5fa9a(i32, i32) local_unnamed_addr

declare i32 @unknown_5fb00(i32) local_unnamed_addr

declare i32 @unknown_5fb25(i32, i32) local_unnamed_addr

declare i32 @unknown_5fb8a(i32) local_unnamed_addr

declare i32 @unknown_5fbf2(i32) local_unnamed_addr

declare i32 @unknown_5fc00(i32) local_unnamed_addr

declare i32 @unknown_5fc90(i32, i32) local_unnamed_addr

declare i32 @unknown_5fe91(i32) local_unnamed_addr

declare i32 @unknown_5ff9c(i32, i32) local_unnamed_addr

declare i32 @unknown_5ffcc(i32, i32) local_unnamed_addr

declare i32 @unknown_5ffe6(i32, i32) local_unnamed_addr

declare i32 @unknown_600e1(i32) local_unnamed_addr

declare i32 @unknown_60104(i32) local_unnamed_addr

declare i32 @unknown_601fc(i32) local_unnamed_addr

declare i32 @unknown_6023a(i32) local_unnamed_addr

declare i32 @unknown_603ab(i32) local_unnamed_addr

declare i32 @unknown_603d9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60438(i32) local_unnamed_addr

declare i32 @unknown_60465(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60534() local_unnamed_addr

declare i32 @unknown_60580(i32) local_unnamed_addr

declare i32 @unknown_6060c(i32) local_unnamed_addr

declare i32 @unknown_60639(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60743(i32) local_unnamed_addr

declare i32 @unknown_607d0(i32) local_unnamed_addr

declare i32 @unknown_608f9(i32) local_unnamed_addr

declare i32 @unknown_60909(i32) local_unnamed_addr

declare i32 @unknown_60936() local_unnamed_addr

declare i32 @unknown_60985(i32) local_unnamed_addr

declare i32 @unknown_609b9(i32) local_unnamed_addr

declare i32 @unknown_609e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60b02(i32) local_unnamed_addr

declare i32 @unknown_60b9d(i32, i32) local_unnamed_addr

declare i32 @unknown_60c08(i32) local_unnamed_addr

declare i32 @unknown_60c6d(i32) local_unnamed_addr

declare i32 @unknown_60c9a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60cdb(i32) local_unnamed_addr

declare i32 @unknown_60d08(i32, i32) local_unnamed_addr

declare i32 @unknown_60d2f(i32) local_unnamed_addr

declare i32 @unknown_60dd9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60e23(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60f0a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60f54(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6103c(i32) local_unnamed_addr

declare i32 @unknown_6106c(i32) local_unnamed_addr

declare i32 @unknown_6108a(i32, i32) local_unnamed_addr

declare i32 @unknown_6109c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61162(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_611cc(i32, i32) local_unnamed_addr

declare i32 @unknown_6124e(i32) local_unnamed_addr

declare i32 @unknown_61258() local_unnamed_addr

declare i32 @unknown_612b6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_612ce(i32, i32) local_unnamed_addr

declare i32 @unknown_613ca(i32) local_unnamed_addr

declare i32 @unknown_614a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_614d8(i32, i32) local_unnamed_addr

declare i32 @unknown_61518(i32) local_unnamed_addr

declare i32 @unknown_61610(i32, i32) local_unnamed_addr

declare i32 @unknown_61702(i32, i32) local_unnamed_addr

declare i32 @unknown_617ea(i32) local_unnamed_addr

declare i32 @unknown_6182a(i32) local_unnamed_addr

declare i32 @unknown_61856(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61890(i32) local_unnamed_addr

declare i32 @unknown_619ea(i32) local_unnamed_addr

declare i32 @unknown_61b96(i32) local_unnamed_addr

declare i32 @unknown_61ce8(i32, i32) local_unnamed_addr

declare i32 @unknown_61d46(i32, i32) local_unnamed_addr

declare i32 @unknown_61d86(i32) local_unnamed_addr

declare i32 @unknown_61da6(i32, i32) local_unnamed_addr

declare i32 @unknown_61df6(i32) local_unnamed_addr

declare i32 @unknown_61e2b(i32) local_unnamed_addr

declare i32 @unknown_61e2e(i32) local_unnamed_addr

declare i32 @unknown_61e90(i32, i32) local_unnamed_addr

declare i32 @unknown_61ecc(i32, i32) local_unnamed_addr

declare i32 @unknown_61f16(i32) local_unnamed_addr

declare i32 @unknown_62036(i32) local_unnamed_addr

declare i32 @unknown_62064(i32, i32) local_unnamed_addr

declare i32 @unknown_620a0(i32, i32) local_unnamed_addr

declare i32 @unknown_6210a(i32, i32) local_unnamed_addr

declare i32 @unknown_62144(i32) local_unnamed_addr

declare i32 @unknown_62154(i32, i32) local_unnamed_addr

declare i32 @unknown_6219c(i32, i32) local_unnamed_addr

declare i32 @unknown_622f8(i32) local_unnamed_addr

declare i32 @unknown_62364(i32) local_unnamed_addr

declare i32 @unknown_62480(i32, i32) local_unnamed_addr

declare i32 @unknown_62582(i32, i32) local_unnamed_addr

declare i32 @unknown_625da(i32) local_unnamed_addr

declare i32 @unknown_62646(i32, i32) local_unnamed_addr

declare i32 @unknown_62686(i32, i32) local_unnamed_addr

declare i32 @unknown_626c6(i32) local_unnamed_addr

declare i32 @unknown_62766(i32) local_unnamed_addr

declare i32 @unknown_627e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_627fa(i32, i32) local_unnamed_addr

declare i32 @unknown_6283a(i32) local_unnamed_addr

declare i32 @unknown_62870(i32) local_unnamed_addr

declare i32 @unknown_6288e(i32, i32) local_unnamed_addr

declare i32 @unknown_629e2(i32) local_unnamed_addr

declare i32 @unknown_629fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62d08(i32, i32) local_unnamed_addr

declare i32 @unknown_62d0c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62db7() local_unnamed_addr

declare i32 @unknown_62ed4(i32, i32) local_unnamed_addr

declare i32 @unknown_62f58(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62fb0(i32, i32) local_unnamed_addr

declare i32 @unknown_63072(i32, i32) local_unnamed_addr

declare i32 @unknown_63122(i32) local_unnamed_addr

declare i32 @unknown_63132(i32) local_unnamed_addr

declare i32 @unknown_6316a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_631d0(i32, i32) local_unnamed_addr

declare i32 @unknown_63362(i32) local_unnamed_addr

declare i32 @unknown_634ea(i32) local_unnamed_addr

declare i32 @unknown_6354a(i32) local_unnamed_addr

declare i32 @unknown_6357e(i32) local_unnamed_addr

declare i32 @unknown_6366a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63710(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6399a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63a95(i32, i32) local_unnamed_addr

declare i32 @unknown_63ade(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63b4c(i32) local_unnamed_addr

declare i32 @unknown_63b7c(i32) local_unnamed_addr

declare i32 @unknown_63bac(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63d4c(i32, i32) local_unnamed_addr

declare i32 @unknown_63d8c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63dd2(i32) local_unnamed_addr

declare i32 @unknown_63e02() local_unnamed_addr

declare i32 @unknown_63e9a(i32, i32) local_unnamed_addr

declare i32 @unknown_63eda(i32) local_unnamed_addr

declare i32 @unknown_63f96(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63fa6(i32) local_unnamed_addr

declare i32 @unknown_63fd2(i32, i32) local_unnamed_addr

declare i32 @unknown_64098(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64118(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64256(i32) local_unnamed_addr

declare i32 @unknown_64332(i32, i32) local_unnamed_addr

declare i32 @unknown_645aa() local_unnamed_addr

declare i32 @unknown_6465e() local_unnamed_addr

declare i32 @unknown_64668(i32, i32) local_unnamed_addr

declare i32 @unknown_6469e(i32) local_unnamed_addr

declare i32 @unknown_646b8(i32) local_unnamed_addr

declare i32 @unknown_646c8(i32) local_unnamed_addr

declare i32 @unknown_646ce(i32) local_unnamed_addr

declare i32 @unknown_646ed(i32) local_unnamed_addr

declare i32 @unknown_64752(i32, i32) local_unnamed_addr

declare i32 @unknown_6478e(i32, i32) local_unnamed_addr

declare i32 @unknown_647b6(i32) local_unnamed_addr

declare i32 @unknown_64870(i32) local_unnamed_addr

declare i32 @unknown_64888(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64910(i32) local_unnamed_addr

declare i32 @unknown_6493e(i32, i32) local_unnamed_addr

declare i32 @unknown_6497a(i32, i32) local_unnamed_addr

declare i32 @unknown_649e4(i32, i32) local_unnamed_addr

declare i32 @unknown_64a2e(i32, i32) local_unnamed_addr

declare i32 @unknown_64a76(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64b20(i32, i32) local_unnamed_addr

declare i32 @unknown_64bd2(i32) local_unnamed_addr

declare i32 @unknown_64c3e(i32) local_unnamed_addr

declare i32 @unknown_64cc6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64d5a(i32, i32) local_unnamed_addr

declare i32 @unknown_64d90(i32) local_unnamed_addr

declare i32 @unknown_64dbc(i32) local_unnamed_addr

declare i32 @unknown_64dbe(i32, i32) local_unnamed_addr

declare i32 @unknown_64e5c(i32, i32) local_unnamed_addr

declare i32 @unknown_64eb4(i32) local_unnamed_addr

declare i32 @unknown_64f20(i32) local_unnamed_addr

declare i32 @unknown_64f60(i32, i32) local_unnamed_addr

declare i32 @unknown_64f7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64fa0(i32) local_unnamed_addr

declare i32 @unknown_64fa6() local_unnamed_addr

declare i32 @unknown_64ff6() local_unnamed_addr

declare i32 @unknown_6502b() local_unnamed_addr

declare i32 @unknown_65040(i32, i32) local_unnamed_addr

declare i32 @unknown_65090() local_unnamed_addr

declare i32 @unknown_650cc() local_unnamed_addr

declare i32 @unknown_650d4(i32, i32) local_unnamed_addr

declare i32 @unknown_6514a(i32) local_unnamed_addr

declare i32 @unknown_65168(i32, i32) local_unnamed_addr

declare i32 @unknown_652bc(i32) local_unnamed_addr

declare i32 @unknown_652f0(i32, i32) local_unnamed_addr

declare i32 @unknown_653b2(i32) local_unnamed_addr

declare i32 @unknown_655e2(i32, i32) local_unnamed_addr

declare i32 @unknown_65744(i32, i32) local_unnamed_addr

declare i32 @unknown_658bc(i32) local_unnamed_addr

declare i32 @unknown_658f4(i32) local_unnamed_addr

declare i32 @unknown_65944(i32, i32) local_unnamed_addr

declare i32 @unknown_65aa6(i32) local_unnamed_addr

declare i32 @unknown_65b34(i32) local_unnamed_addr

declare i32 @unknown_65b54(i32) local_unnamed_addr

declare i32 @unknown_65bd5(i32) local_unnamed_addr

declare i32 @unknown_65c16(i32, i32) local_unnamed_addr

declare i32 @unknown_65c4c(i32) local_unnamed_addr

declare i32 @unknown_65c5e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65d74(i32) local_unnamed_addr

declare i32 @unknown_65e3e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65f54(i32) local_unnamed_addr

declare i32 @unknown_660aa(i32) local_unnamed_addr

declare i32 @unknown_66120(i32) local_unnamed_addr

declare i32 @unknown_66224(i32) local_unnamed_addr

declare i32 @unknown_6637c(i32) local_unnamed_addr

declare i32 @unknown_6639a(i32) local_unnamed_addr

declare i32 @unknown_664a0(i32) local_unnamed_addr

declare i32 @unknown_664f6(i32) local_unnamed_addr

declare i32 @unknown_6652a(i32, i32) local_unnamed_addr

declare i32 @unknown_66604(i32, i32) local_unnamed_addr

declare i32 @unknown_66608(i32, i32) local_unnamed_addr

declare i32 @unknown_666f8(i32) local_unnamed_addr

declare i32 @unknown_66745(i32) local_unnamed_addr

declare i32 @unknown_6691c(i32) local_unnamed_addr

declare i32 @unknown_66a02(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66a2c(i32) local_unnamed_addr

declare i32 @unknown_66a54(i32, i32) local_unnamed_addr

declare i32 @unknown_66a5c(i32) local_unnamed_addr

declare i32 @unknown_66a9c(i32) local_unnamed_addr

declare i32 @unknown_66b6e(i32) local_unnamed_addr

declare i32 @unknown_66b6f(i32) local_unnamed_addr

declare i32 @unknown_66b88(i32) local_unnamed_addr

declare i32 @unknown_66b9e(i32) local_unnamed_addr

declare i32 @unknown_66c0c(i32, i32) local_unnamed_addr

declare i32 @unknown_66c40(i32, i32) local_unnamed_addr

declare i32 @unknown_66c82(i32, i32) local_unnamed_addr

declare i32 @unknown_66cb8(i32) local_unnamed_addr

declare i32 @unknown_66d32(i32) local_unnamed_addr

declare i32 @unknown_66d62(i32) local_unnamed_addr

declare i32 @unknown_66da6(i32, i32) local_unnamed_addr

declare i32 @unknown_66dda(i32) local_unnamed_addr

declare i32 @unknown_66e0a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66f0c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66f26(i32, i32) local_unnamed_addr

declare i32 @unknown_67110(i32) local_unnamed_addr

declare i32 @unknown_67140(i32) local_unnamed_addr

declare i32 @unknown_67162(i32, i32) local_unnamed_addr

declare i32 @unknown_6717f(i32) local_unnamed_addr

declare i32 @unknown_671b0(i32, i32) local_unnamed_addr

declare i32 @unknown_6748c(i32) local_unnamed_addr

declare i32 @unknown_674df(i32) local_unnamed_addr

declare i32 @unknown_6750f(i32) local_unnamed_addr

declare i32 @unknown_675fc(i32) local_unnamed_addr

declare i32 @unknown_676ee(i32) local_unnamed_addr

declare i32 @unknown_6773c(i32, i32) local_unnamed_addr

declare i32 @unknown_6776e(i32) local_unnamed_addr

declare i32 @unknown_6786e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67878(i32) local_unnamed_addr

declare i32 @unknown_67886(i32) local_unnamed_addr

declare i32 @unknown_678b4(i32, i32) local_unnamed_addr

declare i32 @unknown_67928(i32) local_unnamed_addr

declare i32 @unknown_6798e(i32, i32) local_unnamed_addr

declare i32 @unknown_679a2(i32, i32) local_unnamed_addr

declare i32 @unknown_679ca(i32, i32) local_unnamed_addr

declare i32 @unknown_679da(i32) local_unnamed_addr

declare i32 @unknown_67a20(i32) local_unnamed_addr

declare i32 @unknown_67a9c() local_unnamed_addr

declare i32 @unknown_67ac6() local_unnamed_addr

declare i32 @unknown_67aec() local_unnamed_addr

declare i32 @unknown_67b10(i32, i32) local_unnamed_addr

declare i32 @unknown_67b21(i32, i32) local_unnamed_addr

declare i32 @unknown_67b86() local_unnamed_addr

declare i32 @unknown_67b90(i32, i32) local_unnamed_addr

declare i32 @unknown_67bc2() local_unnamed_addr

declare i32 @unknown_67bee(i32) local_unnamed_addr

declare i32 @unknown_67c12(i32, i32) local_unnamed_addr

declare i32 @unknown_67c7a(i32) local_unnamed_addr

declare i32 @unknown_67c9a(i32) local_unnamed_addr

declare i32 @unknown_67db8(i32) local_unnamed_addr

declare i32 @unknown_67de6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67e6c(i32) local_unnamed_addr

declare i32 @unknown_67e9c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67fec(i32) local_unnamed_addr

declare i32 @unknown_6801c(i32) local_unnamed_addr

declare i32 @unknown_6804c(i32) local_unnamed_addr

declare i32 @unknown_68081(i32) local_unnamed_addr

declare i32 @unknown_681ce(i32) local_unnamed_addr

declare i32 @unknown_682f6(i32, i32) local_unnamed_addr

declare i32 @unknown_68340(i32, i32) local_unnamed_addr

declare i32 @unknown_6861c(i32) local_unnamed_addr

declare i32 @unknown_68705(i32) local_unnamed_addr

declare i32 @unknown_68736() local_unnamed_addr

declare i32 @unknown_688f1(i32) local_unnamed_addr

declare i32 @unknown_68950(i32) local_unnamed_addr

declare i32 @unknown_68b01(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68ddc(i32) local_unnamed_addr

declare i32 @unknown_68e20(i32) local_unnamed_addr

declare i32 @unknown_68e50(i32) local_unnamed_addr

declare i32 @unknown_68f34(i32, i32) local_unnamed_addr

declare i32 @unknown_69006(i32) local_unnamed_addr

declare i32 @unknown_690d8(i32) local_unnamed_addr

declare i32 @unknown_690d9(i32) local_unnamed_addr

declare i32 @unknown_69176(i32) local_unnamed_addr

declare i32 @unknown_691a6(i32) local_unnamed_addr

declare i32 @unknown_691ea(i32, i32) local_unnamed_addr

declare i32 @unknown_691ec(i32, i32) local_unnamed_addr

declare i32 @unknown_6924e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69350(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69490(i32, i32) local_unnamed_addr

declare i32 @unknown_69498(i32) local_unnamed_addr

declare i32 @unknown_694c8(i32) local_unnamed_addr

declare i32 @unknown_69515(i32, i32) local_unnamed_addr

declare i32 @unknown_69554(i32) local_unnamed_addr

declare i32 @unknown_69584(i32) local_unnamed_addr

declare i32 @unknown_695c3(i32) local_unnamed_addr

declare i32 @unknown_695f4(i32, i32) local_unnamed_addr

declare i32 @unknown_6967b(i32) local_unnamed_addr

declare i32 @unknown_696bf(i32) local_unnamed_addr

declare i32 @unknown_696ef(i32) local_unnamed_addr

declare i32 @unknown_697f4(i32, i32) local_unnamed_addr

declare i32 @unknown_69858(i32) local_unnamed_addr

declare i32 @unknown_6989c(i32, i32) local_unnamed_addr

declare i32 @unknown_6995a(i32) local_unnamed_addr

declare i32 @unknown_6999e(i32, i32) local_unnamed_addr

declare i32 @unknown_69a02(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69a7a(i32) local_unnamed_addr

declare i32 @unknown_69cb2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69da6(i32) local_unnamed_addr

declare i32 @unknown_69e08(i32, i32) local_unnamed_addr

declare i32 @unknown_69e0c(i32) local_unnamed_addr

declare i32 @unknown_69e20(i32, i32) local_unnamed_addr

declare i32 @unknown_69e48(i32, i32) local_unnamed_addr

declare i32 @unknown_69e58(i32) local_unnamed_addr

declare i32 @unknown_69e8d(i32) local_unnamed_addr

declare i32 @unknown_69e9e(i32) local_unnamed_addr

declare i32 @unknown_69f44(i32, i32) local_unnamed_addr

declare i32 @unknown_69f8e(i32, i32) local_unnamed_addr

declare i32 @unknown_6a00e(i32, i32) local_unnamed_addr

declare i32 @unknown_6a06c(i32) local_unnamed_addr

declare i32 @unknown_6a118(i32) local_unnamed_addr

declare i32 @unknown_6a236(i32) local_unnamed_addr

declare i32 @unknown_6a264(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a2ea(i32) local_unnamed_addr

declare i32 @unknown_6a31a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a43d(i32) local_unnamed_addr

declare i32 @unknown_6a46a(i32) local_unnamed_addr

declare i32 @unknown_6a49a(i32) local_unnamed_addr

declare i32 @unknown_6a4ca(i32) local_unnamed_addr

declare i32 @unknown_6a4ff(i32) local_unnamed_addr

declare i32 @unknown_6a64c(i32) local_unnamed_addr

declare i32 @unknown_6a774(i32, i32) local_unnamed_addr

declare i32 @unknown_6a890(i32, i32) local_unnamed_addr

declare i32 @unknown_6aad2(i32) local_unnamed_addr

declare i32 @unknown_6ac3e(i32, i32) local_unnamed_addr

declare i32 @unknown_6ad76(i32, i32) local_unnamed_addr

declare i32 @unknown_6b014(i32) local_unnamed_addr

declare i32 @unknown_6b11a(i32) local_unnamed_addr

declare i32 @unknown_6b158(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b2bc(i32) local_unnamed_addr

declare i32 @unknown_6b2be(i32, i32) local_unnamed_addr

declare i32 @unknown_6b300(i32) local_unnamed_addr

declare i32 @unknown_6b330(i32) local_unnamed_addr

declare i32 @unknown_6b388(i32, i32) local_unnamed_addr

declare i32 @unknown_6b40e(i32, i32) local_unnamed_addr

declare i32 @unknown_6b43e(i32) local_unnamed_addr

declare i32 @unknown_6b516(i32, i32) local_unnamed_addr

declare i32 @unknown_6b574(i32) local_unnamed_addr

declare i32 @unknown_6b5b8(i32) local_unnamed_addr

declare i32 @unknown_6b5c0(i32, i32) local_unnamed_addr

declare i32 @unknown_6b5e8(i32) local_unnamed_addr

declare i32 @unknown_6b624(i32) local_unnamed_addr

declare i32 @unknown_6b668(i32) local_unnamed_addr

declare i32 @unknown_6b6e6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b726() local_unnamed_addr

declare i32 @unknown_6b732(i32) local_unnamed_addr

declare i32 @unknown_6b76a(i32, i32) local_unnamed_addr

declare i32 @unknown_6b7ce(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b888(i32, i32) local_unnamed_addr

declare i32 @unknown_6b8d8(i32) local_unnamed_addr

declare i32 @unknown_6b90d(i32) local_unnamed_addr

declare i32 @unknown_6ba60(i32, i32) local_unnamed_addr

declare i32 @unknown_6bab0(i32) local_unnamed_addr

declare i32 @unknown_6bae6(i32, i32) local_unnamed_addr

declare i32 @unknown_6bb22(i32, i32) local_unnamed_addr

declare i32 @unknown_6bca0(i32) local_unnamed_addr

declare i32 @unknown_6bd06(i32, i32) local_unnamed_addr

declare i32 @unknown_6be12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bf58(i32, i32) local_unnamed_addr

declare i32 @unknown_6bf9a(i32) local_unnamed_addr

declare i32 @unknown_6c0a6(i32, i32) local_unnamed_addr

declare i32 @unknown_6c10f(i32) local_unnamed_addr

declare i32 @unknown_6c209(i32) local_unnamed_addr

declare i32 @unknown_6c3fa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c586(i32) local_unnamed_addr

declare i32 @unknown_6c65c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c7f7(i32) local_unnamed_addr

declare i32 @unknown_6c9d9(i32) local_unnamed_addr

declare i32 @unknown_6cab2(i32, i32) local_unnamed_addr

declare i32 @unknown_6cc82(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ccce(i32) local_unnamed_addr

declare i32 @unknown_6ce61(i32) local_unnamed_addr

declare i32 @unknown_6cee9(i32) local_unnamed_addr

declare i32 @unknown_6cffc(i32, i32) local_unnamed_addr

declare i32 @unknown_6d04c(i32) local_unnamed_addr

declare i32 @unknown_6d082(i32, i32) local_unnamed_addr

declare i32 @unknown_6d0be(i32, i32) local_unnamed_addr

declare i32 @unknown_6d23c(i32) local_unnamed_addr

declare i32 @unknown_6d2a2(i32, i32) local_unnamed_addr

declare i32 @unknown_6d2d6(i32) local_unnamed_addr

declare i32 @unknown_6d2f0(i32) local_unnamed_addr

declare i32 @unknown_6d348(i32) local_unnamed_addr

declare i32 @unknown_6d4f4(i32, i32) local_unnamed_addr

declare i32 @unknown_6d536(i32) local_unnamed_addr

declare i32 @unknown_6d642(i32, i32) local_unnamed_addr

declare i32 @unknown_6d6ab(i32) local_unnamed_addr

declare i32 @unknown_6d958(i32) local_unnamed_addr

declare i32 @unknown_6d988(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6daac(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6db94(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6dcac(i32) local_unnamed_addr

declare i32 @unknown_6dd52(i32) local_unnamed_addr

declare i32 @unknown_6dde0(i32) local_unnamed_addr

declare i32 @unknown_6dea0(i32) local_unnamed_addr

declare i32 @unknown_6df34(i32, i32) local_unnamed_addr

declare i32 @unknown_6dff2(i32, i32) local_unnamed_addr

declare i32 @unknown_6e042(i32) local_unnamed_addr

declare i32 @unknown_6e0b4(i32) local_unnamed_addr

declare i32 @unknown_6e110(i32, i32) local_unnamed_addr

declare i32 @unknown_6e19c(i32) local_unnamed_addr

declare i32 @unknown_6e238(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e260(i32, i32) local_unnamed_addr

declare i32 @unknown_6e2ee(i32, i32) local_unnamed_addr

declare i32 @unknown_6e31d(i32) local_unnamed_addr

declare i32 @unknown_6e360(i32, i32) local_unnamed_addr

declare i32 @unknown_6e3a5(i32) local_unnamed_addr

declare i32 @unknown_6e48a(i32, i32) local_unnamed_addr

declare i32 @unknown_6e5ec(i32, i32) local_unnamed_addr

declare i32 @unknown_6e651(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e6cc(i32) local_unnamed_addr

declare i32 @unknown_6e75a(i32) local_unnamed_addr

declare i32 @unknown_6e79e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ea78(i32) local_unnamed_addr

declare i32 @unknown_6eb0c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ece8(i32, i32) local_unnamed_addr

declare i32 @unknown_6ecee(i32, i32) local_unnamed_addr

declare i32 @unknown_6ed74() local_unnamed_addr

declare i32 @unknown_6ee10(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6eec6(i32, i32) local_unnamed_addr

declare i32 @unknown_6ef38(i32, i32) local_unnamed_addr

declare i32 @unknown_6f062(i32, i32) local_unnamed_addr

declare i32 @unknown_6f1f4(i32) local_unnamed_addr

declare i32 @unknown_6f2d4(i32, i32) local_unnamed_addr

declare i32 @unknown_6f399(i32) local_unnamed_addr

declare i32 @unknown_6f4b2(i32) local_unnamed_addr

declare i32 @unknown_6f4e0(i32) local_unnamed_addr

declare i32 @unknown_6f51e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f5a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f71a(i32) local_unnamed_addr

declare i32 @unknown_6f732(i32, i32) local_unnamed_addr

declare i32 @unknown_6f81c(i32) local_unnamed_addr

declare i32 @unknown_6f8b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fa71(i32) local_unnamed_addr

declare i32 @unknown_6fb69(i32) local_unnamed_addr

declare i32 @unknown_6fc7d(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fd60(i32) local_unnamed_addr

declare i32 @unknown_6fed4(i32) local_unnamed_addr

declare i32 @unknown_6ffd6() local_unnamed_addr

declare i32 @unknown_7006e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70126(i32, i32) local_unnamed_addr

declare i32 @unknown_7034c(i32) local_unnamed_addr

declare i32 @unknown_70404(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_705d3(i32) local_unnamed_addr

declare i32 @unknown_70656() local_unnamed_addr

declare i32 @unknown_70752(i32) local_unnamed_addr

declare i32 @unknown_7080a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_70b2a(i32) local_unnamed_addr

declare i32 @unknown_70cae(i32) local_unnamed_addr

declare i32 @unknown_70e1e(i32) local_unnamed_addr

declare i32 @unknown_70f8e() local_unnamed_addr

declare i32 @unknown_710fe(i32) local_unnamed_addr

declare i32 @unknown_7139e(i32) local_unnamed_addr

declare i32 @unknown_7150e() local_unnamed_addr

declare i32 @unknown_716ae(i32) local_unnamed_addr

declare i32 @unknown_74a72(i32) local_unnamed_addr

declare i32 @unknown_75062(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_75196(i32, i32) local_unnamed_addr

declare i32 @unknown_751ca(i32, i32) local_unnamed_addr

declare i32 @unknown_752b0(i32) local_unnamed_addr

define i32 @function_1128b0c() local_unnamed_addr {
dec_label_pc_1128b0c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_448bbc46() local_unnamed_addr {
dec_label_pc_448bbc46:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_448ca177() local_unnamed_addr {
dec_label_pc_448ca177:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_458d33da() local_unnamed_addr {
dec_label_pc_458d33da:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_89000175() local_unnamed_addr {
dec_label_pc_89000175:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_89d485b4() local_unnamed_addr

define i32 @function_8d0034cc() local_unnamed_addr {
dec_label_pc_8d0034cc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c7000114() local_unnamed_addr {
dec_label_pc_c7000114:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_c7013c4a() local_unnamed_addr {
dec_label_pc_c7013c4a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_d2babc41() local_unnamed_addr

define i32 @function_ec85bc33() local_unnamed_addr {
dec_label_pc_ec85bc33:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 272, 801, 1078, 273, 730, 0, 1318, 1, 966, 2, 786, 967, 3, 4, 787, 968, 5, 6, 788, 969, 7, 1079, 274, 275, 241, 8, 276, 1080, 1319, 9, 789, 970, 1081, 277, 1082, 278, 242, 1321, 10, 279, 1083, 280, 1322, 281, 282, 283, 1084, 1085, 1328, 1329, 11, 1086, 1332, 1463, 1333, 1334, 979, 12, 1335, 1399, 1400, 922, 1336, 1337, 802, 284, 923, 285, 286, 287, 1087, 288, 803, 1338, 1536, 1537, 1538, 289, 13, 290, 291, 292, 1088, 1089, 293, 294, 295, 804, 296, 297, 298, 299, 1090, 1091, 300, 805, 14, 1342, 1343, 1344, 1345, 1346, 1347, 1092, 1093, 301, 302, 303, 1348, 1349, 924, 1303, 15, 1356, 304, 1094, 1095, 305, 1096, 1097, 306, 307, 308, 309, 310, 311, 312, 1353, 313, 314, 1098, 1285, 1099, 1358, 315, 316, 1361, 1362, 1360, 213, 1363, 317, 1100, 1101, 1102, 1103, 1104, 318, 1354, 1365, 1364, 1366, 1367, 1368, 319, 320, 321, 1539, 1540, 1105, 215, 214, 1370, 1371, 216, 925, 1330, 1331, 322, 323, 1372, 1373, 1376, 1375, 217, 324, 1106, 1107, 1108, 1109, 1110, 325, 326, 327, 328, 329, 1111, 1112, 330, 331, 332, 1320, 1378, 218, 926, 1113, 333, 334, 16, 1114, 1115, 1116, 1117, 335, 336, 1385, 1214, 243, 1118, 337, 338, 244, 1119, 339, 17, 340, 18, 1120, 1323, 1121, 341, 1122, 1123, 1124, 342, 343, 1390, 344, 345, 346, 347, 1313, 731, 1213, 732, 733, 1615, 734, 1392, 19, 1393, 1394, 219, 927, 928, 20, 1395, 929, 1396, 199, 200, 348, 1397, 1398, 1286, 1401, 1402, 349, 350, 1125, 245, 1126, 1404, 351, 352, 1127, 353, 1128, 220, 354, 1558, 1559, 1560, 930, 1409, 355, 356, 1563, 1561, 1562, 1564, 1565, 1566, 357, 358, 735, 1411, 738, 737, 1412, 736, 1413, 359, 360, 1415, 1350, 1351, 931, 361, 21, 362, 363, 22, 364, 365, 1418, 1129, 1130, 1131, 366, 1132, 367, 1133, 932, 1294, 368, 1134, 369, 1287, 370, 971, 1135, 1419, 1136, 1589, 933, 1590, 1591, 23, 371, 372, 373, 1391, 972, 1420, 1421, 934, 1422, 1423, 1424, 1425, 374, 24, 1426, 201, 202, 1585, 806, 935, 1586, 1137, 375, 25, 1587, 376, 377, 973, 1138, 1594, 1595, 936, 1596, 1597, 378, 379, 380, 1437, 381, 1379, 382, 974, 383, 384, 1438, 385, 386, 26, 790, 1139, 1383, 1170, 1140, 1439, 1440, 1384, 1441, 937, 1443, 27, 1141, 1142, 1143, 28, 387, 1444, 1445, 1446, 807, 1447, 1448, 1144, 388, 1282, 938, 1574, 29, 389, 1449, 30, 939, 1575, 390, 1145, 1146, 940, 391, 1403, 392, 1147, 203, 1148, 1149, 1150, 808, 31, 393, 394, 1151, 809, 1450, 1152, 810, 32, 33, 34, 1599, 1410, 35, 395, 1452, 396, 397, 36, 398, 941, 1355, 399, 1292, 942, 1153, 1154, 1455, 1456, 400, 401, 402, 37, 403, 404, 1459, 1305, 1460, 38, 1155, 39, 943, 811, 40, 944, 41, 42, 405, 43, 44, 406, 407, 45, 46, 408, 409, 410, 411, 1156, 412, 1465, 1466, 945, 1380, 413, 1416, 414, 1471, 812, 997, 1427, 1157, 246, 1158, 975, 47, 48, 49, 415, 1472, 1159, 1302, 416, 417, 50, 1160, 1161, 418, 419, 1162, 1163, 1479, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 813, 1164, 1165, 1166, 814, 420, 1167, 421, 422, 1482, 1483, 815, 423, 424, 425, 426, 816, 1168, 427, 428, 429, 946, 1169, 430, 431, 432, 433, 434, 435, 51, 436, 437, 52, 1171, 1172, 947, 438, 439, 948, 53, 440, 1173, 817, 1174, 441, 442, 1175, 1417, 247, 1176, 976, 54, 1576, 55, 443, 444, 1177, 445, 1577, 1178, 248, 1179, 446, 447, 448, 1180, 1181, 1182, 1183, 740, 739, 741, 742, 1462, 744, 743, 745, 1605, 747, 746, 748, 949, 750, 749, 751, 752, 204, 449, 450, 56, 451, 452, 453, 1184, 1185, 1469, 454, 1186, 977, 1187, 57, 455, 950, 1491, 1492, 1493, 1496, 951, 1498, 1188, 1478, 753, 818, 952, 1189, 58, 456, 457, 1480, 1481, 1190, 458, 459, 1603, 460, 1485, 1386, 249, 1191, 953, 1502, 1387, 59, 461, 462, 463, 1489, 464, 465, 978, 1192, 819, 1193, 1194, 954, 1453, 221, 955, 1490, 1507, 60, 1195, 1196, 1197, 466, 1494, 1495, 222, 956, 1198, 467, 1199, 224, 223, 820, 1200, 1201, 1473, 957, 958, 1248, 1249, 1202, 1203, 468, 469, 61, 1204, 1205, 470, 471, 472, 473, 1206, 1207, 474, 62, 1476, 63, 1208, 1209, 475, 1474, 64, 476, 1210, 1477, 754, 821, 1211, 1486, 1487, 980, 981, 1499, 1500, 477, 1212, 478, 479, 1541, 1542, 1543, 480, 756, 755, 481, 758, 757, 205, 1505, 760, 759, 959, 960, 482, 762, 761, 483, 484, 485, 486, 487, 488, 65, 489, 66, 1215, 1216, 1217, 1218, 1219, 490, 1467, 1468, 491, 1470, 961, 492, 1220, 1221, 1222, 791, 1223, 493, 494, 67, 495, 496, 497, 68, 498, 499, 1224, 500, 501, 1225, 1226, 502, 69, 1545, 271, 962, 1547, 1227, 1509, 1228, 70, 503, 504, 792, 822, 1229, 1611, 1612, 1613, 1614, 505, 506, 507, 1230, 1231, 1232, 508, 1234, 1235, 1236, 1233, 509, 510, 511, 512, 1518, 1237, 513, 71, 514, 515, 1238, 1239, 1240, 1241, 1242, 823, 516, 517, 518, 72, 519, 73, 1531, 764, 982, 763, 765, 1532, 824, 1243, 520, 521, 767, 1244, 766, 768, 983, 825, 1245, 522, 1246, 226, 225, 523, 524, 525, 526, 1247, 236, 527, 1250, 528, 1251, 529, 530, 1252, 227, 531, 74, 1253, 1254, 1255, 1256, 1257, 532, 1258, 228, 533, 534, 1259, 1260, 1261, 1262, 1263, 75, 793, 826, 1264, 535, 1265, 1266, 1267, 536, 76, 537, 1268, 1269, 1270, 1271, 1272, 538, 539, 1273, 540, 1274, 250, 1275, 541, 542, 77, 543, 544, 1276, 1277, 1278, 545, 546, 1279, 1280, 78, 79, 547, 1281, 80, 548, 549, 1283, 550, 1284, 551, 552, 553, 81, 554, 555, 82, 556, 557, 83, 1288, 1289, 1290, 558, 794, 827, 1291, 84, 559, 560, 1293, 1295, 984, 1296, 85, 1297, 1298, 1299, 1300, 1301, 561, 562, 1550, 1551, 86, 563, 564, 565, 828, 1304, 566, 567, 1306, 568, 569, 829, 570, 571, 572, 573, 574, 575, 576, 577, 578, 251, 1307, 229, 579, 1308, 230, 580, 581, 582, 583, 584, 1309, 585, 87, 586, 252, 1310, 231, 1311, 1312, 587, 88, 588, 830, 985, 589, 590, 1314, 1315, 591, 1316, 1317, 986, 89, 90, 831, 987, 1324, 1325, 1326, 963, 592, 1327, 593, 91, 92, 93, 1464, 964, 94, 594, 95, 595, 596, 597, 1339, 232, 598, 96, 599, 600, 97, 98, 1340, 1341, 99, 100, 832, 101, 601, 1352, 988, 602, 1357, 102, 603, 103, 604, 1359, 104, 605, 606, 607, 105, 106, 608, 609, 107, 610, 1369, 611, 612, 108, 613, 614, 109, 110, 111, 1374, 233, 615, 112, 616, 617, 113, 114, 618, 795, 1377, 619, 620, 621, 622, 623, 1381, 624, 115, 1382, 116, 117, 118, 625, 626, 119, 1388, 1389, 989, 120, 627, 628, 1405, 206, 207, 1406, 1407, 1408, 629, 1567, 1568, 630, 121, 631, 1414, 632, 122, 990, 965, 991, 992, 993, 123, 1592, 633, 994, 634, 124, 125, 995, 635, 636, 126, 996, 637, 638, 1442, 127, 128, 639, 640, 641, 129, 642, 130, 643, 644, 645, 131, 132, 1451, 646, 647, 1454, 648, 133, 1457, 1458, 134, 649, 650, 135, 136, 137, 138, 139, 140, 141, 1461, 833, 651, 652, 142, 143, 144, 653, 145, 1606, 998, 1610, 1607, 1608, 1609, 654, 655, 656, 146, 147, 148, 657, 149, 150, 151, 658, 152, 659, 1475, 660, 661, 153, 662, 663, 664, 154, 665, 155, 156, 666, 667, 157, 1484, 668, 158, 159, 669, 160, 999, 834, 1000, 1001, 161, 670, 1488, 162, 1002, 671, 672, 163, 164, 165, 166, 167, 673, 168, 169, 674, 675, 796, 676, 1497, 170, 171, 172, 677, 173, 1003, 1004, 678, 174, 679, 680, 175, 681, 682, 683, 1005, 253, 1501, 1503, 254, 1504, 835, 836, 176, 684, 1006, 1506, 685, 686, 687, 1508, 1007, 1510, 1511, 255, 1512, 209, 1513, 1514, 770, 210, 177, 769, 1515, 178, 179, 180, 211, 1516, 1517, 688, 689, 690, 691, 181, 1519, 1520, 797, 1521, 1522, 1523, 692, 1524, 693, 1525, 1526, 798, 1527, 182, 694, 1528, 695, 1529, 696, 1530, 697, 240, 698, 699, 1533, 700, 701, 1534, 702, 703, 256, 1535, 704, 183, 705, 706, 1544, 707, 708, 1546, 709, 1548, 1549, 710, 711, 712, 713, 714, 184, 1552, 715, 716, 717, 185, 1553, 1554, 234, 1555, 235, 186, 718, 719, 1556, 1008, 187, 837, 838, 188, 1557, 1009, 1010, 839, 840, 1011, 720, 841, 259, 257, 189, 843, 844, 190, 258, 771, 772, 773, 774, 842, 193, 721, 845, 262, 260, 191, 237, 1012, 1013, 1014, 192, 261, 263, 264, 722, 265, 846, 194, 1015, 1016, 1017, 1019, 1018, 238, 1020, 847, 848, 195, 723, 1602, 1021, 1022, 239, 1023, 849, 850, 851, 196, 852, 853, 854, 855, 856, 1024, 857, 858, 208, 1025, 1026, 859, 860, 724, 1027, 862, 861, 863, 1028, 1029, 864, 865, 866, 867, 1569, 1570, 799, 1030, 1031, 1032, 1033, 1034, 1571, 267, 1572, 775, 776, 868, 869, 1573, 870, 871, 1041, 1042, 1043, 1044, 1045, 1035, 1036, 1037, 1038, 1039, 1040, 1046, 1578, 1579, 1580, 872, 269, 270, 268, 873, 874, 1581, 875, 876, 1052, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 266, 877, 800, 1582, 1055, 878, 1583, 1584, 1588, 1593, 777, 879, 880, 778, 779, 780, 781, 881, 1056, 1057, 882, 1058, 883, 884, 885, 886, 887, 197, 1059, 892, 725, 888, 726, 890, 212, 889, 1598, 198, 891, 727, 893, 782, 894, 783, 895, 1060, 1062, 1061, 1063, 1064, 1066, 1065, 1067, 1068, 896, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 897, 784, 898, 899, 900, 1077, 901, 785, 902, 1600, 1601, 728, 729, 905, 906, 903, 904, 1604, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623 }
  uselistorder i32* @eax, {}
}

declare i32 @unknown_44c70000(i32) local_unnamed_addr

declare i32 @unknown_89e46a2d() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare i32 @__asm_insd(i16) local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare void @__asm_rep_stosd_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }

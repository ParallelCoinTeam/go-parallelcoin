;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:19:40
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: fNameLookup at 0x0 -- 0x1
; data inside code section at 0x1 -- 0x10
0x1:       ec 6c 01 00 00 89 9c 24  5c 01 00 00 89 c3 65      |.l.....$\.....e |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x10 -- 0x11
; data inside code section at 0x11 -- 0x20
0x11:      14 00 00 00 89 84 24 4c  01 00 00 31 c0 8b 03      |......$L...1... |
; function: ~clone_impl at 0x20 -- 0x27
0x20:      89 b4 24 60 01 00 00               	mov dword ptr [esp + 0x160], esi
; data inside code section at 0x27 -- 0x34
0x27:      89 ce 89 bc 24 64 01 00  00 89 d7 89 ac            |....$d.......   |
; function: ~pthread_mutex_scoped_lock at 0x34 -- 0x38
0x34:      24 68                              	and al, 0x68
0x36:      01 00                              	add dword ptr [eax], eax
; data inside code section at 0x38 -- 0x45
0x38:      00 89 44 24 04 c7 04 24  95 4d 00 00 e8            |..D$...$.M...   |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x45 -- 0x46
; data inside code section at 0x46 -- 0x85
0x46:      ff ff ff 8b 03 81 78 f4  ff 00 00 00 0f 87 f8 00   |......x.........|
0x56:      00 00 a1 50 69 00 00 c7  44                        |...Pi...D       |
0x5f:      24 0c 00                                           |$..             |   "$\f"
0x62:      40 00 00 c7 44 24 08 03  00 00 00 89 84 24 42 01   |@...D$.......$B.|
0x72:      00 00 8d 84 24 42 01 00  00 89 44 24 04 8b 06 89   |....$B....D$....|
0x82:      04 24 e8                                           |.$.             |
; dynamically linked function: send at 0x85 -- 0x86
; data inside code section at 0x86 -- 0x99
0x86:      ff ff ff 83 f8 03 74 5a  8b 06 83 f8 ff 74 0e 89   |......tZ.....t..|
0x96:      04 24 e8                                           |.$.             |
; dynamically linked function: close at 0x99 -- 0x9a
; data inside code section at 0x9a -- 0xab
0x9a:      ff ff ff c7 06 ff ff ff  ff c7 04 24 bd 4d 00 00   |...........$.M..|
0xaa:      e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0xab -- 0xac
; data inside code section at 0xac -- 0xae
0xac:      ff ff                                              |..              |
; function: function_ae at 0xae -- 0xe6
0xae:      ff 8b 94 24 4c 01                  	dec dword ptr [ebx + 0x14c2494]
0xb4:      00 00                              	add byte ptr [eax], al
0xb6:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xbd:      0f 85 9c 03 00 00                  	jne 0x45f <function_45f>
0xc3:      8b 9c 24 5c 01 00 00               	mov ebx, dword ptr [esp + 0x15c]
0xca:      8b b4 24 60 01 00 00               	mov esi, dword ptr [esp + 0x160]
0xd1:      8b bc 24 64 01 00 00               	mov edi, dword ptr [esp + 0x164]
0xd8:      8b ac 24 68 01 00 00               	mov ebp, dword ptr [esp + 0x168]
0xdf:      81 c4 6c 01 00 00                  	add esp, 0x16c
0xe5:      c3                                 	ret 
; data inside code section at 0xe6 -- 0x109
0xe6:      66 90 8d 84 24 4a 01 00  00 89 44 24 04 8b 06 c7   |f...$J....D$....|
0xf6:      44 24 0c 00 00 00 00 c7  44 24 08 02 00 00 00 89   |D$......D$......|
0x106:     04 24 e8                                           |.$.             |
; dynamically linked function: recv at 0x109 -- 0x10a
; data inside code section at 0x10a -- 0x131
0x10a:     ff ff ff 83 f8 02 75 66  80 bc 24 4a 01 00 00 05   |......uf..$J....|
0x11a:     75 0a 80 bc 24 4b 01 00  00 00 74 7a 8b 06 83 f8   |u...$K....tz....|
0x12a:     ff 74 0e 89 04 24 e8                               |.t...$.         |
; dynamically linked function: close at 0x131 -- 0x132
; data inside code section at 0x132 -- 0x143
0x132:     ff ff ff c7 06 ff ff ff  ff c7 04 24 f1 4d 00 00   |...........$.M..|
0x142:     e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x143 -- 0x144
; data inside code section at 0x144 -- 0x147
0x144:     ff ff ff                                           |...             |
; function: function_147 at 0x147 -- 0x14c
0x147:     e9 63 ff ff ff                     	jmp 0xaf
; data inside code section at 0x14c -- 0x16d
0x14c:     8d 74 26 00 8b 06 83 f8  ff 74 0e 89 04 24 e8 fc   |.t&......t...$..|
0x15c:     ff ff ff c7 06 ff ff ff  ff c7 04 24 ab 4d 00 00   |...........$.M..|
0x16c:     e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x16d -- 0x16e
; data inside code section at 0x16e -- 0x171
0x16e:     ff ff ff                                           |...             |
; function: function_171 at 0x171 -- 0x176
0x171:     e9 39 ff ff ff                     	jmp 0xaf
; data inside code section at 0x176 -- 0x183
0x176:     66 90 8b 06 83 f8 ff 74  0e 89 04 24 e8            |f......t...$.   |
; dynamically linked function: close at 0x183 -- 0x184
; data inside code section at 0x184 -- 0x195
0x184:     ff ff ff c7 06 ff ff ff  ff c7 04 24 d4 4d 00 00   |...........$.M..|
0x194:     e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x195 -- 0x196
; data inside code section at 0x196 -- 0x199
0x196:     ff ff ff                                           |...             |
; function: function_199 at 0x199 -- 0x19e
0x199:     e9 11 ff ff ff                     	jmp 0xaf
; data inside code section at 0x19e -- 0x1b8
0x19e:     66 90 8d 44 24 41 8d 6c  24 3c 89 44 24 08 c7 44   |f..D$A.l$<.D$..D|
0x1ae:     24 04 0c 4e 00 00 89 2c  24 e8                     |$..N...,$.      |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1b8 -- 0x1b9
; data inside code section at 0x1b9 -- 0x1e2
0x1b9:     ff ff ff 8b 44 24 3c 8b  50 f4 8d 4a 01 3b 48 f8   |....D$<.P..J.;H.|
0x1c9:     89 4c 24 28 77 07 8b 48  fc 85 c9 7e 17 8b 44 24   |.L$(w..H...~..D$|
0x1d9:     28 89 2c 24 89 44 24 04  e8                        |(.,$.D$..       |
; dynamically linked function: _ZNSs7reserveEj at 0x1e2 -- 0x1e3
; data inside code section at 0x1e3 -- 0x1f6
0x1e3:     ff ff ff 8b 44 24 3c 8b  50 f4 c6 04 10 00 8b 44   |....D$<.P......D|
0x1f3:     24 3c 3d                                           |$<=             |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1f6 -- 0x221
; data inside code section at 0x221 -- 0x222
0x221:     e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x222 -- 0x223
; data inside code section at 0x223 -- 0x22d
0x223:     ff ff ff 8b 44 24 3c 8b  50 f4                     |....D$<.P.      |
; function: function_22d at 0x22d -- 0x235
0x22d:     c6 04 10 03                        	mov byte ptr [eax + edx], 3
0x231:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
; data inside code section at 0x235 -- 0x236
0x235:     3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x236 -- 0x26a
; data inside code section at 0x26a -- 0x26b
0x26a:     e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x26b -- 0x26c
; data inside code section at 0x26c -- 0x276
0x26c:     ff ff ff 8b 44 24 3c 8b  48 f4                     |....D$<.H.      |
; function: function_276 at 0x276 -- 0x28f
0x276:     81 7c 24 28 ff 00 00 00            	cmp dword ptr [esp + 0x28], 0xff
0x27e:     ba ff 00 00 00                     	mov edx, 0xff
0x283:     0f 4e 54 24 28                     	cmovle edx, dword ptr [esp + 0x28]
0x288:     88 14 08                           	mov byte ptr [eax + ecx], dl
0x28b:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
; data inside code section at 0x28f -- 0x290
0x28f:     3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x290 -- 0x2a1
; data inside code section at 0x2a1 -- 0x2a2
0x2a1:     e8                                                 |.               |
; dynamically linked function: _ZNSs6appendERKSs at 0x2a2 -- 0x2a3
; data inside code section at 0x2a3 -- 0x2cc
0x2a3:     ff ff ff 8b 44 24 3c 8b  50 f4 8d 4a 01 3b 48 f8   |....D$<.P..J.;H.|
0x2b3:     89 4c 24 28 77 07 8b 48  fc 85 c9 7e 17 8b 44 24   |.L$(w..H...~..D$|
0x2c3:     28 89 2c 24 89 44 24 04  e8                        |(.,$.D$..       |
; dynamically linked function: _ZNSs7reserveEj at 0x2cc -- 0x2cd
; data inside code section at 0x2cd -- 0x2e4
0x2cd:     ff ff ff 8b 44 24 3c 8b  50 f4 89 f9 c1 f9 08 88   |....D$<.P.......|
0x2dd:     0c 10 8b 44 24 3c 3d                               |...D$<=         |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x2e4 -- 0x30f
; data inside code section at 0x30f -- 0x310
0x30f:     e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x310 -- 0x311
; data inside code section at 0x311 -- 0x31b
0x311:     ff ff ff 8b 44 24 3c 8b  50 f4                     |....D$<.P.      |
; function: function_31b at 0x31b -- 0x324
0x31b:     89 f9                              	mov ecx, edi
0x31d:     88 0c 10                           	mov byte ptr [eax + edx], cl
0x320:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
; data inside code section at 0x324 -- 0x325
0x324:     3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x325 -- 0x347
; data inside code section at 0x347 -- 0x348
0x347:     e8                                                 |.               |
; dynamically linked function: send at 0x348 -- 0x349
; data inside code section at 0x349 -- 0x35c
0x349:     ff ff ff 8b 54 24 3c 3b  42 f4 74 29 8b 06 83 f8   |....T$<;B.t)....|
0x359:     ff 75 65                                           |.ue             |
; function: function_35c at 0x35c -- 0x35d
; data inside code section at 0x35d -- 0x364
0x35d:     04 24 bd 4d 00 00 e8                               |.$.M...         |
; dynamically linked function: _Z5errorPKcz at 0x364 -- 0x365
; data inside code section at 0x365 -- 0x368
0x365:     ff ff ff                                           |...             |
; function: function_368 at 0x368 -- 0x369
; data inside code section at 0x369 -- 0x370
0x369:     44 24 24 89 2c 24 e8                               |D$$.,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x370 -- 0x371
; data inside code section at 0x371 -- 0x373
0x371:     ff ff                                              |..              |
; function: function_373 at 0x373 -- 0x37e
0x373:     ff 0f                              	dec dword ptr [edi]
0x375:     b6 44                              	mov dh, 0x44
0x377:     24 24                              	and al, 0x24
0x379:     e9 31 fd ff ff                     	jmp 0xaf
; data inside code section at 0x37e -- 0x39f
0x37e:     8d 84 24 46 01 00 00 89  44 24 04 8b 06 c7 44 24   |..$F....D$....D$|
0x38e:     0c 00 00 00 00 c7 44 24  08 04 00 00 00 89 04 24   |......D$.......$|
0x39e:     e8                                                 |.               |
; dynamically linked function: recv at 0x39f -- 0x3a0
; data inside code section at 0x3a0 -- 0x3b3
0x3a0:     ff ff ff 83 f8 04 74 29  8b 06 83 f8 ff 0f 85 89   |......t)........|
0x3b0:     00 00 00                                           |...             |
; function: function_3b3 at 0x3b3 -- 0x3b4
; data inside code section at 0x3b4 -- 0x3bb
0x3b4:     04 24 d4 4d 00 00 e8                               |.$.M...         |
; dynamically linked function: _Z5errorPKcz at 0x3bb -- 0x3bc
; data inside code section at 0x3bc -- 0x3bf
0x3bc:     ff ff ff                                           |...             |
; function: function_3bf at 0x3bf -- 0x3c1
0x3bf:     eb a7                              	jmp 0x368 <function_368>
; data inside code section at 0x3c1 -- 0x3c5
0x3c1:     89 04 24 e8                                        |..$.            |
; dynamically linked function: close at 0x3c5 -- 0x3c6
; data inside code section at 0x3c6 -- 0x3c9
0x3c6:     ff ff ff                                           |...             |
; function: function_3c9 at 0x3c9 -- 0x3d1
0x3c9:     c7 06 ff ff ff ff                  	mov dword ptr [esi], 0xffffffff
0x3cf:     eb 8b                              	jmp 0x35c <function_35c>
; data inside code section at 0x3d1 -- 0x3e2
0x3d1:     80 bc 24 46 01 00 00 05  74 18 8b 06 83 f8 ff 75   |..$F....t......u|
0x3e1:     6d                                                 |m               |
; function: function_3e2 at 0x3e2 -- 0x3e3
; data inside code section at 0x3e3 -- 0x3ea
0x3e3:     04 24 28 59 00 00 e8                               |.$(Y...         |
; dynamically linked function: _Z5errorPKcz at 0x3ea -- 0x3eb
; data inside code section at 0x3eb -- 0x3ee
0x3eb:     ff ff ff                                           |...             |
; function: function_3ee at 0x3ee -- 0x3f3
0x3ee:     e9 75 ff ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x3f3 -- 0x433
0x3f3:     80 bc 24 47 01 00 00 00  75 67 80 bc 24 48 01 00   |..$G....ug..$H..|
0x403:     00 00 75 1c 0f b6 84 24  49 01 00 00 3c 03 0f 84   |..u....$I...<...|
0x413:     15 01 00 00 3c 04 74 75  2c 01 0f 84 dc 00 00 00   |....<.tu,.......|
0x423:     89 34 24 e8 d5 64 00 00  c7 04 24 d8 59 00 00 e8   |.4$..d....$.Y...|
; dynamically linked function: _Z5errorPKcz at 0x433 -- 0x434
; data inside code section at 0x434 -- 0x437
0x434:     ff ff ff                                           |...             |
; function: function_437 at 0x437 -- 0x43c
0x437:     e9 2c ff ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x43c -- 0x440
0x43c:     89 04 24 e8                                        |..$.            |
; dynamically linked function: close at 0x440 -- 0x441
; data inside code section at 0x441 -- 0x444
0x441:     ff ff ff                                           |...             |
; function: function_444 at 0x444 -- 0x44f
0x444:     c7 06 ff ff ff ff                  	mov dword ptr [esi], 0xffffffff
0x44a:     e9 64 ff ff ff                     	jmp 0x3b3 <function_3b3>
; data inside code section at 0x44f -- 0x453
0x44f:     89 04 24 e8                                        |..$.            |
; dynamically linked function: close at 0x453 -- 0x454
; data inside code section at 0x454 -- 0x457
0x454:     ff ff ff                                           |...             |
; function: function_457 at 0x457 -- 0x45f
0x457:     c7 06 ff ff ff ff                  	mov dword ptr [esi], 0xffffffff
0x45d:     eb 83                              	jmp 0x3e2 <function_3e2>
; function: function_45f at 0x45f -- 0x460
; dynamically linked function: __stack_chk_fail at 0x460 -- 0x461
; data inside code section at 0x461 -- 0x487
0x461:     ff ff ff 89 34 24 e8 94  64 00 00 0f b6 84 24 47   |....4$..d.....$G|
0x471:     01 00 00 83 e8 01 3c 07  0f 86 0e 01 00 00 c7 04   |......<.........|
0x481:     24 7f 4e 00 00 e8                                  |$.N...          |
; dynamically linked function: _Z5errorPKcz at 0x487 -- 0x488
; data inside code section at 0x488 -- 0x48b
0x488:     ff ff ff                                           |...             |
; function: function_48b at 0x48b -- 0x490
0x48b:     e9 d8 fe ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x490 -- 0x4ae
0x490:     8b 06 8d 7c 24 42 c7 44  24 0c 00 00 00 00 c7 44   |...|$B.D$......D|
0x4a0:     24 08 10 00 00 00 89 7c  24 04 89 04 24 e8         |$......|$...$.  |
; dynamically linked function: recv at 0x4ae -- 0x4af
; data inside code section at 0x4af -- 0x4bb
0x4af:     ff ff ff 83 f8 10 0f 95  c0 0f b6 c0               |............    |
; function: function_4bb at 0x4bb -- 0x4bc
; data inside code section at 0x4bc -- 0x4d9
0x4bc:     c0 75 27 8b 06 c7 44 24  0c 00 00 00 00 c7 44 24   |.u'...D$......D$|
0x4cc:     08 02 00 00 00 89 7c 24  04 89 04 24 e8            |......|$...$.   |
; dynamically linked function: recv at 0x4d9 -- 0x4da
; data inside code section at 0x4da -- 0x4f6
0x4da:     ff ff ff 83 f8 02 0f 84  b1 00 00 00 89 34 24 e8   |.............4$.|
0x4ea:     12 64 00 00 c7 04 24 94  4e 00 00 e8               |.d....$.N...    |
; dynamically linked function: _Z5errorPKcz at 0x4f6 -- 0x4f7
; data inside code section at 0x4f7 -- 0x4fa
0x4f7:     ff ff ff                                           |...             |
; function: function_4fa at 0x4fa -- 0x4ff
0x4fa:     e9 69 fe ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x4ff -- 0x51d
0x4ff:     8b 06 8d 7c 24 42 c7 44  24 0c 00 00 00 00 c7 44   |...|$B.D$......D|
0x50f:     24 08 04 00 00 00 89 7c  24 04 89 04 24 e8         |$......|$...$.  |
; dynamically linked function: recv at 0x51d -- 0x51e
; data inside code section at 0x51e -- 0x521
0x51e:     ff ff ff                                           |...             |
; function: function_521 at 0x521 -- 0x52c
0x521:     83 f8 04                           	cmp eax, 4
0x524:     0f 95 c0                           	setne al
0x527:     0f b6 c0                           	movzx eax, al
0x52a:     eb 8f                              	jmp 0x4bb <function_4bb>
; data inside code section at 0x52c -- 0x54a
0x52c:     8b 06 8d 7c 24 42 c7 44  24 0c 00 00 00 00 c7 44   |...|$B.D$......D|
0x53c:     24 08 01 00 00 00 89 7c  24 04 89 04 24 e8         |$......|$...$.  |
; dynamically linked function: recv at 0x54a -- 0x54b
; data inside code section at 0x54b -- 0x57a
0x54b:     ff ff ff 83 e8 01 75 9b  0f be 4c 24 42 8b 06 c7   |......u...L$B...|
0x55b:     44 24 10 00 00 00 00 c7  44 24 0c 00 01 00 00 89   |D$......D$......|
0x56b:     4c 24 28 89 4c 24 08 89  7c 24 04 89 04 24 e8      |L$(.L$..|$...$. |
; dynamically linked function: __recv_chk at 0x57a -- 0x57b
; data inside code section at 0x57b -- 0x57e
0x57b:     ff ff ff                                           |...             |
; function: function_57e at 0x57e -- 0x58d
0x57e:     39 44 24 28                        	cmp dword ptr [esp + 0x28], eax
0x582:     0f 95 c0                           	setne al
0x585:     0f b6 c0                           	movzx eax, al
0x588:     e9 2e ff ff ff                     	jmp 0x4bb <function_4bb>
; function: function_58d at 0x58d -- 0x597
0x58d:     0f b6 c0                           	movzx eax, al
0x590:     ff 24 85 54 69 00 00               	jmp dword ptr [eax*4 + 0x6954]
; data inside code section at 0x597 -- 0x5a5
0x597:     8b 03 c7 04 24 ad 4e 00  00 89 44 24 04 e8         |....$.N...D$..  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5a5 -- 0x5a6
; data inside code section at 0x5a6 -- 0x5a9
0x5a6:     ff ff ff                                           |...             |
; function: function_5a9 at 0x5a9 -- 0x5b3
0x5a9:     b8 01 00 00 00                     	mov eax, 1
0x5ae:     e9 b5 fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x5b3 -- 0x5bb
0x5b3:     c7 04 24 63 4e 00 00 e8                            |..$cN...        |
; dynamically linked function: _Z5errorPKcz at 0x5bb -- 0x5bc
; data inside code section at 0x5bc -- 0x5bf
0x5bc:     ff ff ff                                           |...             |
; function: function_5bf at 0x5bf -- 0x5c4
0x5bf:     e9 a4 fd ff ff                     	jmp 0x368 <function_368>
; function: function_5c4 at 0x5c4 -- 0x5d5
0x5c4:     c7 04 24 4a 4e 00 00               	mov dword ptr [esp], 0x4e4a ; "Proxy error: TTL expired"
0x5cb:     e8 fc ff ff ff                     	call 0x5cc
0x5d0:     e9 93 fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x5d5 -- 0x5dd
0x5d5:     c7 04 24 90 59 00 00 e8                            |..$.Y...        |
; dynamically linked function: _Z5errorPKcz at 0x5dd -- 0x5de
; data inside code section at 0x5de -- 0x5e1
0x5de:     ff ff ff                                           |...             |
; function: function_5e1 at 0x5e1 -- 0x5e6
0x5e1:     e9 82 fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x5e6 -- 0x5ee
0x5e6:     c7 04 24 2c 4e 00 00 e8                            |..$,N...        |
; dynamically linked function: _Z5errorPKcz at 0x5ee -- 0x5ef
; data inside code section at 0x5ef -- 0x5f2
0x5ef:     ff ff ff                                           |...             |
; function: function_5f2 at 0x5f2 -- 0x5f7
0x5f2:     e9 71 fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x5f7 -- 0x5ff
0x5f7:     c7 04 24 6c 59 00 00 e8                            |..$lY...        |
; dynamically linked function: _Z5errorPKcz at 0x5ff -- 0x600
; data inside code section at 0x600 -- 0x603
0x600:     ff ff ff                                           |...             |
; function: function_603 at 0x603 -- 0x608
0x603:     e9 60 fd ff ff                     	jmp 0x368 <function_368>
; function: function_608 at 0x608 -- 0x619
0x608:     c7 04 24 48 59 00 00               	mov dword ptr [esp], 0x5948 ; "Proxy error: connection not allowed"
0x60f:     e8 fc ff ff ff                     	call 0x610
0x614:     e9 4f fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x619 -- 0x621
0x619:     c7 04 24 0f 4e 00 00 e8                            |..$.N...        |
; dynamically linked function: _Z5errorPKcz at 0x621 -- 0x622
; data inside code section at 0x622 -- 0x625
0x622:     ff ff ff                                           |...             |
; function: function_625 at 0x625 -- 0x62a
0x625:     e9 3e fd ff ff                     	jmp 0x368 <function_368>
; data inside code section at 0x62a -- 0x632
0x62a:     c7 04 24 b0 59 00 00 e8                            |..$.Y...        |
; dynamically linked function: _Z5errorPKcz at 0x632 -- 0x633
; data inside code section at 0x633 -- 0x636
0x633:     ff ff ff                                           |...             |
; function: function_636 at 0x636 -- 0x63b
0x636:     e9 2d fd ff ff                     	jmp 0x368 <function_368>
; function: function_63b at 0x63b -- 0x656
0x63b:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x63f:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x646:     89 50 f4                           	mov dword ptr [eax - 0xc], edx
0x649:     c6 04 10 00                        	mov byte ptr [eax + edx], 0
0x64d:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x651:     e9 98 fc ff ff                     	jmp 0x2ee
; function: function_656 at 0x656 -- 0x66d
0x656:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x65a:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x661:     89 50 f4                           	mov dword ptr [eax - 0xc], edx
0x664:     c6 04 10 00                        	mov byte ptr [eax + edx], 0
0x668:     e9 2d fc ff ff                     	jmp 0x29a
; data inside code section at 0x66d -- 0x66e
0x66d:     89                                                 |.               |
; function: function_66e at 0x66e -- 0x66f
0x66e:     c3                                 	ret 
; data inside code section at 0x66f -- 0x673
0x66f:     89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZNSsD1Ev at 0x673 -- 0x674
; data inside code section at 0x674 -- 0x67b
0x674:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x67b -- 0x67c
; data inside code section at 0x67c -- 0x67f
0x67c:     ff ff ff                                           |...             |
; function: function_67f at 0x67f -- 0x69a
0x67f:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x683:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x68a:     89 50 f4                           	mov dword ptr [eax - 0xc], edx
0x68d:     c6 04 10 00                        	mov byte ptr [eax + edx], 0
0x691:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x695:     e9 95 fc ff ff                     	jmp 0x32f
; function: function_69a at 0x69a -- 0x6b5
0x69a:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x69e:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x6a5:     89 50 f4                           	mov dword ptr [eax - 0xc], edx
0x6a8:     c6 04 10 00                        	mov byte ptr [eax + edx], 0
0x6ac:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x6b0:     e9 8b fb ff ff                     	jmp 0x240
; function: function_6b5 at 0x6b5 -- 0x6d0
0x6b5:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x6b9:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x6c0:     89 50 f4                           	mov dword ptr [eax - 0xc], edx
0x6c3:     c6 04 10 00                        	mov byte ptr [eax + edx], 0
0x6c7:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x6cb:     e9 30 fb ff ff                     	jmp 0x200
; function: _Z12ParseNetworkSs at 0x6d0 -- 0x6f7
0x6d0:     55                                 	push ebp
0x6d1:     57                                 	push edi
0x6d2:     56                                 	push esi
0x6d3:     53                                 	push ebx
0x6d4:     83 ec 3c                           	sub esp, 0x3c
0x6d7:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x6db:     8d 7c 24 24                        	lea edi, [esp + 0x24]
0x6df:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x6e6:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x6ea:     31 d2                              	xor edx, edx
0x6ec:     8d 74 24 28                        	lea esi, [esp + 0x28]
0x6f0:     89 3c 24                           	mov dword ptr [esp], edi
0x6f3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
; data inside code section at 0x6f7 -- 0x6f8
0x6f7:     e8                                                 |.               |
; dynamically linked function: _ZNSt6localeC1Ev at 0x6f8 -- 0x6f9
; data inside code section at 0x6f9 -- 0x708
0x6f9:     ff ff ff 8b 4c 24 1c 89  34 24 89 4c 24 04 e8      |....L$..4$.L$.. |
; dynamically linked function: _ZNSsC1ERKSs at 0x708 -- 0x709
; data inside code section at 0x709 -- 0x721
0x709:     ff ff ff 8b 44 24 1c 8b  18 8b 53 fc 85 d2 0f 88   |....D$....S.....|
0x719:     e3 00 00 00 89 04 24 e8                            |......$.        |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x721 -- 0x722
; data inside code section at 0x722 -- 0x732
0x722:     ff ff ff 8b 54 24 1c 8b  1a 8b 6b fc 85 ed 0f 88   |....T$....k.....|
; function: function_732 at 0x732 -- 0x735
0x732:     ca 00 00                           	retf 0
; data inside code section at 0x735 -- 0x73a
0x735:     00 89 14 24 e8                                     |...$.           |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x73a -- 0x73b
; data inside code section at 0x73b -- 0x744
0x73b:     ff ff ff 8b 4c 24 1c 8b  29                        |....L$..)       |
; function: function_744 at 0x744 -- 0x745
; data inside code section at 0x745 -- 0x74b
0x745:     6d f4 89 34 24 e8                                  |m..4$.          |
; dynamically linked function: _ZNSsD1Ev at 0x74b -- 0x74c
; data inside code section at 0x74c -- 0x750
0x74c:     ff ff ff 39                                        |...9            |
; function: function_750 at 0x750 -- 0x752
0x750:     eb 74                              	jmp 0x7c6 <function_7c6>
; data inside code section at 0x752 -- 0x75f
0x752:     2a 90 8d 74 26 00 0f b6  33 89 3c 24 e8            |*..t&...3.<$.   |
; dynamically linked function: _ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale at 0x75f -- 0x760
; data inside code section at 0x760 -- 0x777
0x760:     ff ff ff 8b 10 89 f1 0f  be f1 89 74 24 04 89 04   |...........t$...|
0x770:     24 ff 52 10 88 03 83                               |$.R....         |
; function: function_777 at 0x777 -- 0x778
0x777:     c3                                 	ret 
; data inside code section at 0x778 -- 0x781
0x778:     01 39 dd 75 db 89 3c 24  e8                        |.9.u..<$.       |
; dynamically linked function: _ZNSt6localeD1Ev at 0x781 -- 0x782
; data inside code section at 0x782 -- 0x784
0x782:     ff ff                                              |..              |
; function: function_784 at 0x784 -- 0x790
0x784:     ff 8b 44 24 1c c7                  	dec dword ptr [ebx - 0x38e3dbbc]
0x78a:     44                                 	inc esp
0x78b:     24 04                              	and al, 4
0x78d:     c2 4e 00                           	ret 0x4e
; data inside code section at 0x790 -- 0x795
0x790:     00 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZNKSs7compareEPKc at 0x795 -- 0x796
; data inside code section at 0x796 -- 0x799
0x796:     ff ff ff                                           |...             |
; function: function_799 at 0x799 -- 0x7c4
0x799:     ba 01 00 00 00                     	mov edx, 1
0x79e:     85 c0                              	test eax, eax
0x7a0:     75 1e                              	jne 0x7c0 <function_799+0x27>
0x7a2:     89 d0                              	mov eax, edx
0x7a4:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x7a8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x7af:     75 56                              	jne 0x807 <function_807>
0x7b1:     83 c4 3c                           	add esp, 0x3c
0x7b4:     5b                                 	pop ebx
0x7b5:     5e                                 	pop esi
0x7b6:     5f                                 	pop edi
0x7b7:     5d                                 	pop ebp
0x7b8:     c3                                 	ret 
; data inside code section at 0x7b9 -- 0x7c0
0x7b9:     8d b4 26 00 00 00 00                               |..&....         |
0x7c0:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
; data inside code section at 0x7c4 -- 0x7c6
0x7c4:     c7 44                                              |.D              |
; function: function_7c6 at 0x7c6 -- 0x7c8
0x7c6:     24 04                              	and al, 4
; data inside code section at 0x7c8 -- 0x7d0
0x7c8:     c7 4e 00 00 89 14 24 e8                            |.N....$.        |
; dynamically linked function: _ZNKSs7compareEPKc at 0x7d0 -- 0x7d1
; data inside code section at 0x7d1 -- 0x7ed
0x7d1:     ff ff ff ba 02 00 00 00  85 c0 74 c5 8b 4c 24 1c   |..........t..L$.|
0x7e1:     c7 44 24 04 cc 4e 00 00  89 0c 24 e8               |.D$..N....$.    |
; dynamically linked function: _ZNKSs7compareEPKc at 0x7ed -- 0x7ee
; data inside code section at 0x7ee -- 0x7f0
0x7ee:     ff ff                                              |..              |
; function: function_7f0 at 0x7f0 -- 0x7fb
0x7f0:     ff 83 f8 01 19 d2                  	inc dword ptr [ebx - 0x2de6fe08]
0x7f6:     83 e2 03                           	and edx, 3
0x7f9:     eb a7                              	jmp 0x7a2
; data inside code section at 0x7fb -- 0x800
0x7fb:     90 8d 74 26 00                                     |..t&.           |
; function: function_800 at 0x800 -- 0x807
0x800:     89 dd                              	mov ebp, ebx
0x802:     e9 3d ff ff ff                     	jmp 0x744 <function_744>
; function: function_807 at 0x807 -- 0x808
; dynamically linked function: __stack_chk_fail at 0x808 -- 0x809
; data inside code section at 0x809 -- 0x80d
0x809:     ff ff ff 89                                        |....            |
; function: function_80d at 0x80d -- 0x80e
0x80d:     c3                                 	ret 
; data inside code section at 0x80e -- 0x812
0x80e:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x812 -- 0x813
; data inside code section at 0x813 -- 0x816
0x813:     ff ff ff                                           |...             |
; function: function_816 at 0x816 -- 0x817
; data inside code section at 0x817 -- 0x81a
0x817:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSt6localeD1Ev at 0x81a -- 0x81b
; data inside code section at 0x81b -- 0x822
0x81b:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x822 -- 0x823
; data inside code section at 0x823 -- 0x826
0x823:     ff ff ff                                           |...             |
; function: function_826 at 0x826 -- 0x82a
0x826:     89 c3                              	mov ebx, eax
0x828:     eb ec                              	jmp 0x816 <function_816>
; data inside code section at 0x82a -- 0x830
0x82a:     8d b6 00 00 00 00                                  |......          |
; function: _Z13SplitHostPortSsRiRSs at 0x830 -- 0x86e
0x830:     83 ec 4c                           	sub esp, 0x4c
0x833:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x837:     8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x83b:     89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x83f:     8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x843:     89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x847:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x84b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x851:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x855:     31 c0                              	xor eax, eax
0x857:     89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x85b:     c7 44 24 08 ff ff ff ff            	mov dword ptr [esp + 8], 0xffffffff
0x863:     c7 44 24 04 3a 00 00 00            	mov dword ptr [esp + 4], 0x3a
0x86b:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x86e -- 0x86f
0x86e:     e8                                                 |.               |
; dynamically linked function: _ZNKSs5rfindEcj at 0x86f -- 0x870
; data inside code section at 0x870 -- 0x877
0x870:     ff ff ff 83 f8 ff 89                               |.......         |
; function: function_877 at 0x877 -- 0x87a
0x877:     c2 75 3e                           	ret 0x3e75
; function: function_87a at 0x87a -- 0x87b
; data inside code section at 0x87b -- 0x88f
0x87b:     03 8b 68 f4 85 ed 0f 85  29 01 00 00 89 5c 24 04   |..h.....)....\$.|
0x88b:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSs6assignERKSs at 0x88f -- 0x890
; data inside code section at 0x890 -- 0x892
0x890:     ff ff                                              |..              |
; function: function_892 at 0x892 -- 0x8b8
0x892:     ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x898:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x89e:     0f 85 cd 01 00 00                  	jne 0xa71 <function_a71>
0x8a4:     8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x8a8:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x8ac:     8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x8b0:     8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x8b4:     83 c4 4c                           	add esp, 0x4c
0x8b7:     c3                                 	ret 
; data inside code section at 0x8b8 -- 0x8c9
0x8b8:     8b 03 8b 68 fc 85 ed 78  12 89 54 24 18 89 1c 24   |...h...x..T$...$|
0x8c8:     e8                                                 |.               |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x8c9 -- 0x8ca
; data inside code section at 0x8ca -- 0x8e1
0x8ca:     ff ff ff 8b 03 8b 54 24  18 31 c9 80 38 5b 8d 6a   |......T$.1..8[.j|
0x8da:     ff 0f 84 67 01 00 00                               |...g...         |
; function: function_8e1 at 0x8e1 -- 0x8e2
; data inside code section at 0x8e2 -- 0x8f9
0x8e2:     54 24 18 88 4c 24 1c 89  6c 24 08 c7 44 24 04 3a   |T$..L$..l$..D$.:|
0x8f2:     00 00 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNKSs5rfindEcj at 0x8f9 -- 0x8fa
; data inside code section at 0x8fa -- 0x912
0x8fa:     ff ff ff 8b 54 24 18 0f  b6 4c 24 1c 85 d2 74 08   |....T$...L$...t.|
0x90a:     84 c9 0f 84 1e 01 00 00                            |........        |
; function: function_912 at 0x912 -- 0x913
; data inside code section at 0x913 -- 0x937
0x913:     44 24 20 89 44 24 04 8d  42 01 c7 44 24 08 0a 00   |D$ .D$..B..D$...|
0x923:     00 00 03 03 c7 44 24 20  00 00 00 00 89 54 24 18   |.....D$ .....T$.|
0x933:     89 04 24 e8                                        |..$.            |
; dynamically linked function: strtol at 0x937 -- 0x938
; data inside code section at 0x938 -- 0x976
0x938:     ff ff ff 8b 54 24 18 89  c5 8b 44 24 20 85 c0 0f   |....T$....D$ ...|
0x948:     84 2d ff ff ff 85 ed 0f  88 25 ff ff ff 80 38 00   |.-.......%....8.|
0x958:     0f 85 1c ff ff ff 8d 44  24 24 89 04 24 89 54 24   |.......D$$..$.T$|
0x968:     0c c7 44 24 08 00 00 00  00 89 5c 24 04 e8         |..D$......\$..  |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x976 -- 0x977
; data inside code section at 0x977 -- 0x986
0x977:     ff ff ff 8d 44 24 24 89  44 24 04 89 1c 24 e8      |....D$$.D$...$. |
; dynamically linked function: _ZNSs6assignERKSs at 0x986 -- 0x987
; data inside code section at 0x987 -- 0x992
0x987:     ff ff ff 8d 44 24 24 89  04 24 e8                  |....D$$..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x992 -- 0x993
; data inside code section at 0x993 -- 0x996
0x993:     ff ff ff                                           |...             |
; function: function_996 at 0x996 -- 0x9ab
0x996:     8d 45 ff                           	lea eax, [ebp - 1]
0x999:     3d fe ff 00 00                     	cmp eax, 0xfffe
0x99e:     0f 87 d6 fe ff ff                  	ja 0x87a <function_87a>
0x9a4:     89 2f                              	mov dword ptr [edi], ebp
0x9a6:     e9 cf fe ff ff                     	jmp 0x87a <function_87a>
; data inside code section at 0x9ab -- 0x9bb
0x9ab:     90 8d 74 26 00 8b 78 fc  85 ff 78 0a 89 1c 24 e8   |..t&..x...x...$.|
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x9bb -- 0x9bc
; data inside code section at 0x9bc -- 0x9db
0x9bc:     ff ff ff 8b 03 80 38 5b  0f 85 bd fe ff ff 8b 78   |......8[.......x|
0x9cc:     f4 8b 48 fc 83 ef 01 85  c9 78 0a 89 1c 24 e8      |..H......x...$. |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x9db -- 0x9dc
; data inside code section at 0x9dc -- 0xa11
0x9dc:     ff ff ff 8b 03 80 3c 38  5d 0f 85 9c fe ff ff 8b   |......<8].......|
0x9ec:     40 f4 85 c0 0f 84 80 00  00 00 83 e8 02 89 5c 24   |@.............\$|
0x9fc:     04 8d 5c 24 28 89 44 24  0c c7 44 24 08 01 00 00   |..\$(.D$..D$....|
0xa0c:     00 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZNSsC1ERKSsjj at 0xa11 -- 0xa12
; data inside code section at 0xa12 -- 0xa1d
0xa12:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSs6assignERKSs at 0xa1d -- 0xa1e
; data inside code section at 0xa1e -- 0xa25
0xa1e:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0xa25 -- 0xa26
; data inside code section at 0xa26 -- 0xa29
0xa26:     ff ff ff                                           |...             |
; function: function_a29 at 0xa29 -- 0xa2e
0xa29:     e9 65 fe ff ff                     	jmp 0x893
; data inside code section at 0xa2e -- 0xa30
0xa2e:     66 90                                              |f.              |
; function: function_a30 at 0xa30 -- 0xa45
0xa30:     83 f8 ff                           	cmp eax, -1
0xa33:     0f 85 41 fe ff ff                  	jne 0x87a <function_87a>
0xa39:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xa40:     e9 cd fe ff ff                     	jmp 0x912 <function_912>
; data inside code section at 0xa45 -- 0xa5a
0xa45:     8d 76 00 8b 48 fc 85 c9  8d 76 00 78 12 89 54 24   |.v..H....v.x..T$|
0xa55:     18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0xa5a -- 0xa5b
; data inside code section at 0xa5b -- 0xa5d
0xa5b:     ff ff                                              |..              |
; function: function_a5d at 0xa5d -- 0xa71
0xa5d:     ff 8b 03 8b 54 24                  	dec dword ptr [ebx + 0x24548b03]
0xa63:     18 80 7c 10 ff 5d                  	sbb byte ptr [eax + 0x5dff107c], al
0xa69:     0f 94 c1                           	sete cl
0xa6c:     e9 70 fe ff ff                     	jmp 0x8e1 <function_8e1>
; function: function_a71 at 0xa71 -- 0xa72
; dynamically linked function: __stack_chk_fail at 0xa72 -- 0xa73
; data inside code section at 0xa73 -- 0xa7e
0xa73:     ff ff ff c7 04 24 d0 4e  00 00 e8                  |.....$.N...     |
; dynamically linked function: _ZSt20__throw_out_of_rangePKc at 0xa7e -- 0xa7f
; data inside code section at 0xa7f -- 0xa83
0xa7f:     ff ff ff 89                                        |....            |
; function: function_a83 at 0xa83 -- 0xa84
0xa83:     c3                                 	ret 
; data inside code section at 0xa84 -- 0xa8c
0xa84:     8d 44 24 24 89 04 24 e8                            |.D$$..$.        |
; dynamically linked function: _ZNSsD1Ev at 0xa8c -- 0xa8d
; data inside code section at 0xa8d -- 0xa94
0xa8d:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xa94 -- 0xa95
; data inside code section at 0xa95 -- 0xa9e
0xa95:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0xa9e -- 0xa9f
; data inside code section at 0xa9f -- 0xaa6
0xa9f:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xaa6 -- 0xaa7
; data inside code section at 0xaa7 -- 0xab0
0xaa7:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZN8CNetAddr4InitEv at 0xab0 -- 0xaf0
0xab0:     83 ec 1c                           	sub esp, 0x1c
0xab3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xaba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xabe:     31 d2                              	xor edx, edx
0xac0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xac4:     c7 00 00 00 00 00                  	mov dword ptr [eax], 0
0xaca:     c7 40 04 00 00 00 00               	mov dword ptr [eax + 4], 0
0xad1:     c7 40 08 00 00 00 00               	mov dword ptr [eax + 8], 0
0xad8:     c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0xadf:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xae3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xaea:     75 04                              	jne 0xaf0 <_ZN8CNetAddr4InitEv+0x3f>
0xaec:     83 c4 1c                           	add esp, 0x1c
0xaef:     c3                                 	ret 
; data inside code section at 0xaf0 -- 0xaf1
0xaf0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaf1 -- 0xaf2
; data inside code section at 0xaf2 -- 0xb00
0xaf2:     ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN8CNetAddr5SetIPERKS_ at 0xb00 -- 0xb3f
0xb00:     83 ec 1c                           	sub esp, 0x1c
0xb03:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xb07:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xb0e:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xb12:     31 c9                              	xor ecx, ecx
0xb14:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb18:     8b 0a                              	mov ecx, dword ptr [edx]
0xb1a:     89 08                              	mov dword ptr [eax], ecx
0xb1c:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0xb1f:     89 48 04                           	mov dword ptr [eax + 4], ecx
0xb22:     8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0xb25:     89 48 08                           	mov dword ptr [eax + 8], ecx
0xb28:     8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0xb2b:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xb2e:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xb32:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb39:     75 04                              	jne 0xb3f <_ZN8CNetAddr5SetIPERKS_+0x3e>
0xb3b:     83 c4 1c                           	add esp, 0x1c
0xb3e:     c3                                 	ret 
; data inside code section at 0xb3f -- 0xb40
0xb3f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb40 -- 0xb41
; data inside code section at 0xb41 -- 0xb50
0xb41:     ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZN8CNetAddr10SetSpecialERKSs at 0xb50 -- 0xbca
0xb50:     83 ec 5c                           	sub esp, 0x5c
0xb53:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0xb57:     8b 5c 24 64                        	mov ebx, dword ptr [esp + 0x64]
0xb5b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb61:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb65:     31 c0                              	xor eax, eax
0xb67:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0xb6b:     8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xb6f:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0xb73:     8b 03                              	mov eax, dword ptr [ebx]
0xb75:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0xb79:     8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0xb7c:     31 c0                              	xor eax, eax
0xb7e:     83 fa 06                           	cmp edx, 6
0xb81:     77 25                              	ja 0xba8 <_ZN8CNetAddr10SetSpecialERKSs+0x58>
0xb83:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xb87:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb8e:     0f 85 0b 01 00 00                  	jne 0xc9f <function_c9f>
0xb94:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xb98:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xb9c:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xba0:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xba4:     83 c4 5c                           	add esp, 0x5c
0xba7:     c3                                 	ret 
0xba8:     8d 42 fa                           	lea eax, [edx - 6]
0xbab:     39 d0                              	cmp eax, edx
0xbad:     0f 87 f1 00 00 00                  	ja 0xca4 <function_ca4>
0xbb3:     8d 7c 24 34                        	lea edi, [esp + 0x34]
0xbb7:     c7 44 24 0c 06 00 00 00            	mov dword ptr [esp + 0xc], 6
0xbbf:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xbc3:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0xbc7:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0xbca -- 0xbcb
0xbca:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSsjj at 0xbcb -- 0xbcc
; data inside code section at 0xbcc -- 0xbdb
0xbcc:     ff ff ff c7 44 24 04 e5  4e 00 00 89 3c 24 e8      |....D$..N...<$. |
; dynamically linked function: _ZNKSs7compareEPKc at 0xbdb -- 0xbdc
; data inside code section at 0xbdc -- 0xbe5
0xbdc:     ff ff ff 89 c5 89 3c 24  e8                        |......<$.       |
; dynamically linked function: _ZNSsD1Ev at 0xbe5 -- 0xbe6
; data inside code section at 0xbe6 -- 0xc11
0xbe6:     ff ff ff 85 ed 0f 85 e3  00 00 00 8b 03 8b 40 f4   |..............@.|
0xbf6:     89 5c 24 04 8d 5c 24 38  c7 44 24 08 00 00 00 00   |.\$..\$8.D$.....|
0xc06:     89 1c 24 83 e8 06 89 44  24 0c e8                  |..$....D$..     |
; dynamically linked function: _ZNSsC1ERKSsjj at 0xc11 -- 0xc12
; data inside code section at 0xc12 -- 0xc2d
0xc12:     ff ff ff 8b 54 24 38 8d  44 24 28 c7 44 24 08 00   |....T$8.D$(.D$..|
0xc22:     00 00 00 89 04 24 89 54  24 04 e8                  |.....$.T$..     |
; dynamically linked function: _Z12DecodeBase32PKcPb at 0xc2d -- 0xc2e
; data inside code section at 0xc2e -- 0xc38
0xc2e:     ff ff ff 83 ec 04 89 1c  24 e8                     |........$.      |
; dynamically linked function: _ZNSsD1Ev at 0xc38 -- 0xc39
; data inside code section at 0xc39 -- 0xc4d
0xc39:     ff ff ff 8b 54 24 28 31  c0 8b 4c 24 2c 29 d1 83   |....T$(1..L$,)..|
0xc49:     f9 0a 74 23                                        |..t#            |
; function: function_c4d at 0xc4d -- 0xc4e
; data inside code section at 0xc4e -- 0xc5d
0xc4e:     d2 0f 84 2e ff ff ff 88  44 24 1c 89 14 24 e8      |........D$...$. |
; dynamically linked function: _ZdlPv at 0xc5d -- 0xc5e
; data inside code section at 0xc5e -- 0xc60
0xc5e:     ff ff                                              |..              |
; function: function_c60 at 0xc60 -- 0xc6b
0xc60:     ff 0f                              	dec dword ptr [edi]
0xc62:     b6 44                              	mov dh, 0x44
0xc64:     24 1c                              	and al, 0x1c
0xc66:     e9 18 ff ff ff                     	jmp 0xb83
; data inside code section at 0xc6b -- 0xc70
0xc6b:     90 8d 74 26 00                                     |..t&.           |
; function: function_c70 at 0xc70 -- 0xc9f
0xc70:     a1 73 6b 00 00                     	mov eax, dword ptr [0x6b73]
0xc75:     89 06                              	mov dword ptr [esi], eax
0xc77:     0f b7 05 77 6b 00 00               	movzx eax, word ptr [0x6b77]
0xc7e:     66 89 46 04                        	mov word ptr [esi + 4], ax
0xc82:     31 c0                              	xor eax, eax
0xc84:     8d 74 26 00                        	lea esi, [esi]
0xc88:     0f b6 0c 02                        	movzx ecx, byte ptr [edx + eax]
0xc8c:     88 4c 06 06                        	mov byte ptr [esi + eax + 6], cl
0xc90:     83 c0 01                           	add eax, 1
0xc93:     83 f8 0a                           	cmp eax, 0xa
0xc96:     75 f0                              	jne 0xc88 <function_c70+0x18>
0xc98:     b8 01 00 00 00                     	mov eax, 1
0xc9d:     eb ae                              	jmp 0xc4d <function_c4d>
; function: function_c9f at 0xc9f -- 0xca0
; dynamically linked function: __stack_chk_fail at 0xca0 -- 0xca1
; data inside code section at 0xca1 -- 0xca4
0xca1:     ff ff ff                                           |...             |
; function: function_ca4 at 0xca4 -- 0xcab
0xca4:     c7 04 24 d0 4e 00 00               	mov dword ptr [esp], 0x4ed0 ; "basic_string::substr"
; data inside code section at 0xcab -- 0xcac
0xcab:     e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_out_of_rangePKc at 0xcac -- 0xcad
; data inside code section at 0xcad -- 0xcb6
0xcad:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0xcb6 -- 0xcb7
; data inside code section at 0xcb7 -- 0xcbe
0xcb7:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xcbe -- 0xcbf
; data inside code section at 0xcbf -- 0xcc3
0xcbf:     ff ff ff 89                                        |....            |
; function: function_cc3 at 0xcc3 -- 0xcc4
0xcc3:     c3                                 	ret 
; data inside code section at 0xcc4 -- 0xcc8
0xcc4:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0xcc8 -- 0xcc9
; data inside code section at 0xcc9 -- 0xcd0
0xcc9:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xcd0 -- 0xcd1
; data inside code section at 0xcd1 -- 0xcd4
0xcd1:     ff ff ff                                           |...             |
; function: function_cd4 at 0xcd4 -- 0xcdb
0xcd4:     31 c0                              	xor eax, eax
0xcd6:     e9 a8 fe ff ff                     	jmp 0xb83
; data inside code section at 0xcdb -- 0xce0
0xcdb:     90 8d 74 26 00                                     |..t&.           |
; function: CNetAddr at 0xce0 -- 0xd0d
0xce0:     83 ec 1c                           	sub esp, 0x1c
0xce3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xcea:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xcee:     31 d2                              	xor edx, edx
0xcf0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xcf4:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xcf8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xcff:     75 0c                              	jne 0xd0d <CNetAddr+0x28>
0xd01:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd05:     83 c4 1c                           	add esp, 0x1c
0xd08:     e9 a3 fd ff ff                     	jmp 0xab0 <_ZN8CNetAddr4InitEv>
; data inside code section at 0xd0d -- 0xd0e
0xd0d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd0e -- 0xd0f
; data inside code section at 0xd0f -- 0xd20
0xd0f:     ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0xd1f:     00                                                 |.               |
; function: CNetAddr at 0xd20 -- 0xd68
0xd20:     83 ec 1c                           	sub esp, 0x1c
0xd23:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd2a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd2e:     31 d2                              	xor edx, edx
0xd30:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd34:     8b 15 79 6b 00 00                  	mov edx, dword ptr [0x6b79]
0xd3a:     89 10                              	mov dword ptr [eax], edx
0xd3c:     8b 15 7d 6b 00 00                  	mov edx, dword ptr [0x6b7d]
0xd42:     89 50 04                           	mov dword ptr [eax + 4], edx
0xd45:     8b 15 81 6b 00 00                  	mov edx, dword ptr [0x6b81]
0xd4b:     89 50 08                           	mov dword ptr [eax + 8], edx
0xd4e:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xd52:     8b 12                              	mov edx, dword ptr [edx]
0xd54:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xd57:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xd5b:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xd62:     75 04                              	jne 0xd68 <CNetAddr+0x47>
0xd64:     83 c4 1c                           	add esp, 0x1c
0xd67:     c3                                 	ret 
; data inside code section at 0xd68 -- 0xd69
0xd68:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd69 -- 0xd6a
; data inside code section at 0xd6a -- 0xd70
0xd6a:     ff ff ff 90 66 90                                  |....f.          |
; function: CNetAddr at 0xd70 -- 0xdaf
0xd70:     83 ec 1c                           	sub esp, 0x1c
0xd73:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xd77:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xd7e:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xd82:     31 c9                              	xor ecx, ecx
0xd84:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd88:     8b 0a                              	mov ecx, dword ptr [edx]
0xd8a:     89 08                              	mov dword ptr [eax], ecx
0xd8c:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0xd8f:     89 48 04                           	mov dword ptr [eax + 4], ecx
0xd92:     8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0xd95:     89 48 08                           	mov dword ptr [eax + 8], ecx
0xd98:     8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0xd9b:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0xd9e:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xda2:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xda9:     75 04                              	jne 0xdaf <CNetAddr+0x3e>
0xdab:     83 c4 1c                           	add esp, 0x1c
0xdae:     c3                                 	ret 
; data inside code section at 0xdaf -- 0xdb0
0xdaf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdb0 -- 0xdb1
; data inside code section at 0xdb1 -- 0xdc0
0xdb1:     ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZNK8CNetAddr7GetByteEi at 0xdc0 -- 0xded
0xdc0:     83 ec 1c                           	sub esp, 0x1c
0xdc3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xdca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xdce:     31 d2                              	xor edx, edx
0xdd0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xdd4:     2b 44 24 24                        	sub eax, dword ptr [esp + 0x24]
0xdd8:     0f b6 40 0f                        	movzx eax, byte ptr [eax + 0xf]
0xddc:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xde0:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xde7:     75 04                              	jne 0xded <_ZNK8CNetAddr7GetByteEi+0x2c>
0xde9:     83 c4 1c                           	add esp, 0x1c
0xdec:     c3                                 	ret 
; data inside code section at 0xded -- 0xdee
0xded:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdee -- 0xdef
; data inside code section at 0xdef -- 0xe00
0xdef:     ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0xdff:     00                                                 |.               |
; function: _ZNK8CNetAddr6IsIPv4Ev at 0xe00 -- 0xe26
0xe00:     83 ec 2c                           	sub esp, 0x2c
0xe03:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe09:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe0d:     31 c0                              	xor eax, eax
0xe0f:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xe13:     c7 44 24 08 0c 00 00 00            	mov dword ptr [esp + 8], 0xc
0xe1b:     c7 44 24 04 79 6b 00 00            	mov dword ptr [esp + 4], 0x6b79
0xe23:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xe26 -- 0xe27
0xe26:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xe27 -- 0xe28
; data inside code section at 0xe28 -- 0xe2a
0xe28:     ff ff                                              |..              |
; function: function_e2a at 0xe2a -- 0xe41
0xe2a:     ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0xe30:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xe34:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xe3b:     75 04                              	jne 0xe41 <function_e2a+0x16>
0xe3d:     83 c4 2c                           	add esp, 0x2c
0xe40:     c3                                 	ret 
; data inside code section at 0xe41 -- 0xe42
0xe41:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe42 -- 0xe43
; data inside code section at 0xe43 -- 0xe50
0xe43:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr9IsRFC1918Ev at 0xe50 -- 0xec1
0xe50:     53                                 	push ebx
0xe51:     83 ec 28                           	sub esp, 0x28
0xe54:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe58:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe5e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe62:     31 c0                              	xor eax, eax
0xe64:     89 1c 24                           	mov dword ptr [esp], ebx
0xe67:     e8 94 ff ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0xe6c:     31 d2                              	xor edx, edx
0xe6e:     84 c0                              	test al, al
0xe70:     74 1e                              	je 0xe90 <_ZNK8CNetAddr9IsRFC1918Ev+0x40>
0xe72:     0f b6 43 0c                        	movzx eax, byte ptr [ebx + 0xc]
0xe76:     ba 01 00 00 00                     	mov edx, 1
0xe7b:     3c 0a                              	cmp al, 0xa
0xe7d:     74 11                              	je 0xe90 <_ZNK8CNetAddr9IsRFC1918Ev+0x40>
0xe7f:     3c c0                              	cmp al, 0xc0
0xe81:     74 35                              	je 0xeb8 <_ZNK8CNetAddr9IsRFC1918Ev+0x68>
0xe83:     31 d2                              	xor edx, edx
0xe85:     3c ac                              	cmp al, 0xac
0xe87:     74 1f                              	je 0xea8 <_ZNK8CNetAddr9IsRFC1918Ev+0x58>
0xe89:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xe90:     89 d0                              	mov eax, edx
0xe92:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xe96:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xe9d:     75 22                              	jne 0xec1 <_ZNK8CNetAddr9IsRFC1918Ev+0x6f>
0xe9f:     83 c4 28                           	add esp, 0x28
0xea2:     5b                                 	pop ebx
0xea3:     c3                                 	ret 
; data inside code section at 0xea4 -- 0xea8
0xea4:     8d 74 26 00                                        |.t&.            |
0xea8:     0f b6 43 0d                        	movzx eax, byte ptr [ebx + 0xd]
0xeac:     3c 0f                              	cmp al, 0xf
0xeae:     76 e0                              	jbe 0xe90 <_ZNK8CNetAddr9IsRFC1918Ev+0x40>
0xeb0:     3c 1f                              	cmp al, 0x1f
0xeb2:     0f 96 c2                           	setbe dl
0xeb5:     eb d9                              	jmp 0xe90 <_ZNK8CNetAddr9IsRFC1918Ev+0x40>
; data inside code section at 0xeb7 -- 0xeb8
0xeb7:     90                                                 |.               |
0xeb8:     80 7b 0d a8                        	cmp byte ptr [ebx + 0xd], 0xa8
0xebc:     0f 94 c2                           	sete dl
0xebf:     eb cf                              	jmp 0xe90 <_ZNK8CNetAddr9IsRFC1918Ev+0x40>
; data inside code section at 0xec1 -- 0xec2
0xec1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xec2 -- 0xec3
; data inside code section at 0xec3 -- 0xed0
0xec3:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr9IsRFC3927Ev at 0xed0 -- 0xf19
0xed0:     53                                 	push ebx
0xed1:     83 ec 28                           	sub esp, 0x28
0xed4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xed8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xede:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xee2:     31 c0                              	xor eax, eax
0xee4:     89 1c 24                           	mov dword ptr [esp], ebx
0xee7:     e8 14 ff ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0xeec:     31 d2                              	xor edx, edx
0xeee:     84 c0                              	test al, al
0xef0:     74 06                              	je 0xef8 <_ZNK8CNetAddr9IsRFC3927Ev+0x28>
0xef2:     80 7b 0c a9                        	cmp byte ptr [ebx + 0xc], 0xa9
0xef6:     74 18                              	je 0xf10 <_ZNK8CNetAddr9IsRFC3927Ev+0x40>
0xef8:     89 d0                              	mov eax, edx
0xefa:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xefe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf05:     75 12                              	jne 0xf19 <_ZNK8CNetAddr9IsRFC3927Ev+0x47>
0xf07:     83 c4 28                           	add esp, 0x28
0xf0a:     5b                                 	pop ebx
0xf0b:     c3                                 	ret 
; data inside code section at 0xf0c -- 0xf10
0xf0c:     8d 74 26 00                                        |.t&.            |
0xf10:     80 7b 0d fe                        	cmp byte ptr [ebx + 0xd], 0xfe
0xf14:     0f 94 c2                           	sete dl
0xf17:     eb df                              	jmp 0xef8 <_ZNK8CNetAddr9IsRFC3927Ev+0x28>
; data inside code section at 0xf19 -- 0xf1a
0xf19:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf1a -- 0xf1b
; data inside code section at 0xf1b -- 0xf1d
0xf1b:     ff ff                                              |..              |
; function: function_f1d at 0xf1d -- 0xf20
0xf1d:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZNK8CNetAddr9IsRFC3849Ev at 0xf20 -- 0xf65
0xf20:     83 ec 1c                           	sub esp, 0x1c
0xf23:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xf27:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf2d:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xf31:     31 c0                              	xor eax, eax
0xf33:     80 3a 20                           	cmp byte ptr [edx], 0x20
0xf36:     74 18                              	je 0xf50 <_ZNK8CNetAddr9IsRFC3849Ev+0x30>
0xf38:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xf3c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf43:     75 20                              	jne 0xf65 <_ZNK8CNetAddr9IsRFC3849Ev+0x43>
0xf45:     83 c4 1c                           	add esp, 0x1c
0xf48:     c3                                 	ret 
; data inside code section at 0xf49 -- 0xf50
0xf49:     8d b4 26 00 00 00 00                               |..&....         |
0xf50:     80 7a 01 01                        	cmp byte ptr [edx + 1], 1
0xf54:     75 e2                              	jne 0xf38 <_ZNK8CNetAddr9IsRFC3849Ev+0x18>
0xf56:     80 7a 02 0d                        	cmp byte ptr [edx + 2], 0xd
0xf5a:     75 dc                              	jne 0xf38 <_ZNK8CNetAddr9IsRFC3849Ev+0x18>
0xf5c:     80 7a 03 b8                        	cmp byte ptr [edx + 3], 0xb8
0xf60:     0f 94 c0                           	sete al
0xf63:     eb d3                              	jmp 0xf38 <_ZNK8CNetAddr9IsRFC3849Ev+0x18>
; data inside code section at 0xf65 -- 0xf66
0xf65:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf66 -- 0xf67
; data inside code section at 0xf67 -- 0xf70
0xf67:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZNK8CNetAddr9IsRFC3964Ev at 0xf70 -- 0xfa9
0xf70:     83 ec 1c                           	sub esp, 0x1c
0xf73:     8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0xf77:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf7d:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xf81:     31 c0                              	xor eax, eax
0xf83:     80 3a 20                           	cmp byte ptr [edx], 0x20
0xf86:     74 18                              	je 0xfa0 <_ZNK8CNetAddr9IsRFC3964Ev+0x30>
0xf88:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xf8c:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf93:     75 14                              	jne 0xfa9 <_ZNK8CNetAddr9IsRFC3964Ev+0x37>
0xf95:     83 c4 1c                           	add esp, 0x1c
0xf98:     c3                                 	ret 
; data inside code section at 0xf99 -- 0xfa0
0xf99:     8d b4 26 00 00 00 00                               |..&....         |
0xfa0:     80 7a 01 02                        	cmp byte ptr [edx + 1], 2
0xfa4:     0f 94 c0                           	sete al
0xfa7:     eb df                              	jmp 0xf88 <_ZNK8CNetAddr9IsRFC3964Ev+0x18>
; data inside code section at 0xfa9 -- 0xfaa
0xfa9:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfaa -- 0xfab
; data inside code section at 0xfab -- 0xfad
0xfab:     ff ff                                              |..              |
; function: function_fad at 0xfad -- 0xfb0
0xfad:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZNK8CNetAddr9IsRFC6052Ev at 0xfb0 -- 0xfd6
0xfb0:     83 ec 2c                           	sub esp, 0x2c
0xfb3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfb9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfbd:     31 c0                              	xor eax, eax
0xfbf:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xfc3:     c7 44 24 08 0c 00 00 00            	mov dword ptr [esp + 8], 0xc
0xfcb:     c7 44 24 04 85 6b 00 00            	mov dword ptr [esp + 4], 0x6b85
0xfd3:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xfd6 -- 0xfd7
0xfd6:     e8                                                 |.               |
; dynamically linked function: memcmp at 0xfd7 -- 0xfd8
; data inside code section at 0xfd8 -- 0xfda
0xfd8:     ff ff                                              |..              |
; function: function_fda at 0xfda -- 0xff1
0xfda:     ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0xfe0:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xfe4:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xfeb:     75 04                              	jne 0xff1 <function_fda+0x16>
0xfed:     83 c4 2c                           	add esp, 0x2c
0xff0:     c3                                 	ret 
; data inside code section at 0xff1 -- 0xff2
0xff1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xff2 -- 0xff3
; data inside code section at 0xff3 -- 0x1000
0xff3:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr9IsRFC4380Ev at 0x1000 -- 0x1045
0x1000:    83 ec 1c                           	sub esp, 0x1c
0x1003:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1007:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x100d:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1011:    31 c0                              	xor eax, eax
0x1013:    80 3a 20                           	cmp byte ptr [edx], 0x20
0x1016:    74 18                              	je 0x1030 <_ZNK8CNetAddr9IsRFC4380Ev+0x30>
0x1018:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x101c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1023:    75 20                              	jne 0x1045 <_ZNK8CNetAddr9IsRFC4380Ev+0x43>
0x1025:    83 c4 1c                           	add esp, 0x1c
0x1028:    c3                                 	ret 
; data inside code section at 0x1029 -- 0x1030
0x1029:    8d b4 26 00 00 00 00                               |..&....         |
0x1030:    80 7a 01 01                        	cmp byte ptr [edx + 1], 1
0x1034:    75 e2                              	jne 0x1018 <_ZNK8CNetAddr9IsRFC4380Ev+0x18>
0x1036:    80 7a 02 00                        	cmp byte ptr [edx + 2], 0
0x103a:    75 dc                              	jne 0x1018 <_ZNK8CNetAddr9IsRFC4380Ev+0x18>
0x103c:    80 7a 03 00                        	cmp byte ptr [edx + 3], 0
0x1040:    0f 94 c0                           	sete al
0x1043:    eb d3                              	jmp 0x1018 <_ZNK8CNetAddr9IsRFC4380Ev+0x18>
; data inside code section at 0x1045 -- 0x1046
0x1045:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1046 -- 0x1047
; data inside code section at 0x1047 -- 0x1050
0x1047:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZNK8CNetAddr9IsRFC4862Ev at 0x1050 -- 0x1076
0x1050:    83 ec 2c                           	sub esp, 0x2c
0x1053:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1059:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x105d:    31 c0                              	xor eax, eax
0x105f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1063:    c7 44 24 08 08 00 00 00            	mov dword ptr [esp + 8], 8
0x106b:    c7 44 24 04 91 6b 00 00            	mov dword ptr [esp + 4], 0x6b91
0x1073:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1076 -- 0x1077
0x1076:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1077 -- 0x1078
; data inside code section at 0x1078 -- 0x107a
0x1078:    ff ff                                              |..              |
; function: function_107a at 0x107a -- 0x1091
0x107a:    ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0x1080:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1084:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x108b:    75 04                              	jne 0x1091 <function_107a+0x16>
0x108d:    83 c4 2c                           	add esp, 0x2c
0x1090:    c3                                 	ret 
; data inside code section at 0x1091 -- 0x1092
0x1091:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1092 -- 0x1093
; data inside code section at 0x1093 -- 0x10a0
0x1093:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr9IsRFC4193Ev at 0x10a0 -- 0x10d4
0x10a0:    83 ec 1c                           	sub esp, 0x1c
0x10a3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10a9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x10ad:    31 c0                              	xor eax, eax
0x10af:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x10b3:    0f b6 00                           	movzx eax, byte ptr [eax]
0x10b6:    25 fe 00 00 00                     	and eax, 0xfe
0x10bb:    3d fc 00 00 00                     	cmp eax, 0xfc
0x10c0:    0f 94 c0                           	sete al
0x10c3:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x10c7:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10ce:    75 04                              	jne 0x10d4 <_ZNK8CNetAddr9IsRFC4193Ev+0x33>
0x10d0:    83 c4 1c                           	add esp, 0x1c
0x10d3:    c3                                 	ret 
; data inside code section at 0x10d4 -- 0x10d5
0x10d4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10d5 -- 0x10d6
; data inside code section at 0x10d6 -- 0x10e0
0x10d6:    ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: _ZNK8CNetAddr9IsRFC6145Ev at 0x10e0 -- 0x1106
0x10e0:    83 ec 2c                           	sub esp, 0x2c
0x10e3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10e9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10ed:    31 c0                              	xor eax, eax
0x10ef:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x10f3:    c7 44 24 08 0c 00 00 00            	mov dword ptr [esp + 8], 0xc
0x10fb:    c7 44 24 04 99 6b 00 00            	mov dword ptr [esp + 4], 0x6b99
0x1103:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1106 -- 0x1107
0x1106:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1107 -- 0x1108
; data inside code section at 0x1108 -- 0x110a
0x1108:    ff ff                                              |..              |
; function: function_110a at 0x110a -- 0x1121
0x110a:    ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0x1110:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1114:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x111b:    75 04                              	jne 0x1121 <function_110a+0x16>
0x111d:    83 c4 2c                           	add esp, 0x2c
0x1120:    c3                                 	ret 
; data inside code section at 0x1121 -- 0x1122
0x1121:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1122 -- 0x1123
; data inside code section at 0x1123 -- 0x1130
0x1123:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr9IsRFC4843Ev at 0x1130 -- 0x117d
0x1130:    83 ec 1c                           	sub esp, 0x1c
0x1133:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1137:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x113d:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1141:    31 c0                              	xor eax, eax
0x1143:    80 3a 20                           	cmp byte ptr [edx], 0x20
0x1146:    74 18                              	je 0x1160 <_ZNK8CNetAddr9IsRFC4843Ev+0x30>
0x1148:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x114c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1153:    75 28                              	jne 0x117d <_ZNK8CNetAddr9IsRFC4843Ev+0x4b>
0x1155:    83 c4 1c                           	add esp, 0x1c
0x1158:    c3                                 	ret 
; data inside code section at 0x1159 -- 0x1160
0x1159:    8d b4 26 00 00 00 00                               |..&....         |
0x1160:    80 7a 01 01                        	cmp byte ptr [edx + 1], 1
0x1164:    75 e2                              	jne 0x1148 <_ZNK8CNetAddr9IsRFC4843Ev+0x18>
0x1166:    80 7a 02 00                        	cmp byte ptr [edx + 2], 0
0x116a:    75 dc                              	jne 0x1148 <_ZNK8CNetAddr9IsRFC4843Ev+0x18>
0x116c:    0f b6 42 03                        	movzx eax, byte ptr [edx + 3]
0x1170:    25 f0 00 00 00                     	and eax, 0xf0
0x1175:    83 f8 10                           	cmp eax, 0x10
0x1178:    0f 94 c0                           	sete al
0x117b:    eb cb                              	jmp 0x1148 <_ZNK8CNetAddr9IsRFC4843Ev+0x18>
; data inside code section at 0x117d -- 0x117e
0x117d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x117e -- 0x117f
; data inside code section at 0x117f -- 0x1190
0x117f:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x118f:    00                                                 |.               |
; function: _ZNK8CNetAddr5IsTorEv at 0x1190 -- 0x11b6
0x1190:    83 ec 2c                           	sub esp, 0x2c
0x1193:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1199:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x119d:    31 c0                              	xor eax, eax
0x119f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x11a3:    c7 44 24 08 06 00 00 00            	mov dword ptr [esp + 8], 6
0x11ab:    c7 44 24 04 73 6b 00 00            	mov dword ptr [esp + 4], 0x6b73
0x11b3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x11b6 -- 0x11b7
0x11b6:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x11b7 -- 0x11b8
; data inside code section at 0x11b8 -- 0x11ba
0x11b8:    ff ff                                              |..              |
; function: function_11ba at 0x11ba -- 0x11d1
0x11ba:    ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0x11c0:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x11c4:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x11cb:    75 04                              	jne 0x11d1 <function_11ba+0x16>
0x11cd:    83 c4 2c                           	add esp, 0x2c
0x11d0:    c3                                 	ret 
; data inside code section at 0x11d1 -- 0x11d2
0x11d1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11d2 -- 0x11d3
; data inside code section at 0x11d3 -- 0x11e0
0x11d3:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK8CNetAddr6IsIPv6Ev at 0x11e0 -- 0x1223
0x11e0:    53                                 	push ebx
0x11e1:    83 ec 28                           	sub esp, 0x28
0x11e4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x11e8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11ee:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11f2:    31 c0                              	xor eax, eax
0x11f4:    89 1c 24                           	mov dword ptr [esp], ebx
0x11f7:    e8 04 fc ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x11fc:    31 d2                              	xor edx, edx
0x11fe:    84 c0                              	test al, al
0x1200:    75 0d                              	jne 0x120f <_ZNK8CNetAddr6IsIPv6Ev+0x2f>
0x1202:    89 1c 24                           	mov dword ptr [esp], ebx
0x1205:    e8 86 ff ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x120a:    89 c2                              	mov edx, eax
0x120c:    83 f2 01                           	xor edx, 1
0x120f:    89 d0                              	mov eax, edx
0x1211:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1215:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x121c:    75 05                              	jne 0x1223 <_ZNK8CNetAddr6IsIPv6Ev+0x42>
0x121e:    83 c4 28                           	add esp, 0x28
0x1221:    5b                                 	pop ebx
0x1222:    c3                                 	ret 
; data inside code section at 0x1223 -- 0x1224
0x1223:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1224 -- 0x1225
; data inside code section at 0x1225 -- 0x1230
0x1225:    ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _ZNK8CNetAddr7IsLocalEv at 0x1230 -- 0x1293
0x1230:    53                                 	push ebx
0x1231:    83 ec 28                           	sub esp, 0x28
0x1234:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1238:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x123e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1242:    31 c0                              	xor eax, eax
0x1244:    89 1c 24                           	mov dword ptr [esp], ebx
0x1247:    e8 b4 fb ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x124c:    84 c0                              	test al, al
0x124e:    74 30                              	je 0x1280 <_ZNK8CNetAddr7IsLocalEv+0x50>
0x1250:    0f b6 53 0c                        	movzx edx, byte ptr [ebx + 0xc]
0x1254:    b8 01 00 00 00                     	mov eax, 1
0x1259:    80 fa 7f                           	cmp dl, 0x7f
0x125c:    74 0a                              	je 0x1268 <_ZNK8CNetAddr7IsLocalEv+0x38>
0x125e:    84 d2                              	test dl, dl
0x1260:    75 1e                              	jne 0x1280 <_ZNK8CNetAddr7IsLocalEv+0x50>
0x1262:    8d b6 00 00 00 00                  	lea esi, [esi]
0x1268:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x126c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1273:    75 2a                              	jne 0x129f <function_129f>
0x1275:    83 c4 28                           	add esp, 0x28
0x1278:    5b                                 	pop ebx
0x1279:    c3                                 	ret 
; data inside code section at 0x127a -- 0x1280
0x127a:    8d b6 00 00 00 00                                  |......          |
0x1280:    c7 44 24 08 10 00 00 00            	mov dword ptr [esp + 8], 0x10
0x1288:    c7 44 24 04 a5 6b 00 00            	mov dword ptr [esp + 4], 0x6ba5
0x1290:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1293 -- 0x1294
0x1293:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1294 -- 0x1295
; data inside code section at 0x1295 -- 0x1297
0x1295:    ff ff                                              |..              |
; function: function_1297 at 0x1297 -- 0x129f
0x1297:    ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0x129d:    eb c9                              	jmp 0x1268
; function: function_129f at 0x129f -- 0x12a0
; dynamically linked function: __stack_chk_fail at 0x12a0 -- 0x12a1
; data inside code section at 0x12a1 -- 0x12b0
0x12a1:    ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZNK8CNetAddr11IsMulticastEv at 0x12b0 -- 0x12ff
0x12b0:    53                                 	push ebx
0x12b1:    83 ec 28                           	sub esp, 0x28
0x12b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12c2:    31 c0                              	xor eax, eax
0x12c4:    89 1c 24                           	mov dword ptr [esp], ebx
0x12c7:    e8 34 fb ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x12cc:    84 c0                              	test al, al
0x12ce:    74 17                              	je 0x12e7 <_ZNK8CNetAddr11IsMulticastEv+0x37>
0x12d0:    0f b6 53 0c                        	movzx edx, byte ptr [ebx + 0xc]
0x12d4:    b8 01 00 00 00                     	mov eax, 1
0x12d9:    81 e2 f0 00 00 00                  	and edx, 0xf0
0x12df:    81 fa e0 00 00 00                  	cmp edx, 0xe0
0x12e5:    74 06                              	je 0x12ed <_ZNK8CNetAddr11IsMulticastEv+0x3d>
0x12e7:    80 3b ff                           	cmp byte ptr [ebx], 0xff
0x12ea:    0f 94 c0                           	sete al
0x12ed:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x12f1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12f8:    75 05                              	jne 0x12ff <_ZNK8CNetAddr11IsMulticastEv+0x4e>
0x12fa:    83 c4 28                           	add esp, 0x28
0x12fd:    5b                                 	pop ebx
0x12fe:    c3                                 	ret 
; data inside code section at 0x12ff -- 0x1300
0x12ff:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1300 -- 0x1301
; data inside code section at 0x1301 -- 0x1310
0x1301:    ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZNK8CNetAddr7IsValidEv at 0x1310 -- 0x1380
0x1310:    83 ec 3c                           	sub esp, 0x3c
0x1313:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1317:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x131b:    c7 44 24 08 09 00 00 00            	mov dword ptr [esp + 8], 9
0x1323:    c7 44 24 04 7c 6b 00 00            	mov dword ptr [esp + 4], 0x6b7c
0x132b:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x132f:    31 f6                              	xor esi, esi
0x1331:    89 1c 24                           	mov dword ptr [esp], ebx
0x1334:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x133a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x133e:    31 c0                              	xor eax, eax
0x1340:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x1344:    e8 fc ff ff ff                     	call 0x1345
0x1349:    85 c0                              	test eax, eax
0x134b:    74 5b                              	je 0x13a8 <function_13a8>
0x134d:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1351:    c7 44 24 08 10 00 00 00            	mov dword ptr [esp + 8], 0x10
0x1359:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x135d:    89 1c 24                           	mov dword ptr [esp], ebx
0x1360:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x1368:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x1370:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x1378:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
; data inside code section at 0x1380 -- 0x1381
0x1380:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1381 -- 0x1382
; data inside code section at 0x1382 -- 0x1392
0x1382:    ff ff ff 85 c0 74 1f 80  3b 20 0f 84 8e 00 00 00   |.....t..; ......|
; function: function_1392 at 0x1392 -- 0x1393
; data inside code section at 0x1393 -- 0x13a8
0x1393:    1c 24 be 01 00 00 00 e8  61 fa ff ff 84 c0 75 2d   |.$......a.....u-|
0x13a3:    90 8d 74 26 00                                     |..t&.           |
; function: function_13a8 at 0x13a8 -- 0x13cb
0x13a8:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x13ac:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13b3:    89 f0                              	mov eax, esi
0x13b5:    0f 85 8a 00 00 00                  	jne 0x1445 <function_1445>
0x13bb:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x13bf:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x13c3:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x13c7:    83 c4 3c                           	add esp, 0x3c
0x13ca:    c3                                 	ret 
; data inside code section at 0x13cb -- 0x13d1
0x13cb:    90 8d 74 26 00 83                                  |..t&..          |
; function: function_13d1 at 0x13d1 -- 0x13d2
0x13d1:    c3                                 	ret 
; data inside code section at 0x13d2 -- 0x13f1
0x13d2:    0c 31 f6 8d 7c 24 18 c7  44 24 08 04 00 00 00 89   |.1..|$..D$......|
0x13e2:    7c 24 04 89 1c 24 c7 44  24 18 ff ff ff ff e8      ||$...$.D$...... |
; dynamically linked function: memcmp at 0x13f1 -- 0x13f2
; data inside code section at 0x13f2 -- 0x1411
0x13f2:    ff ff ff 85 c0 74 af c7  44 24 08 04 00 00 00 89   |.....t..D$......|
0x1402:    7c 24 04 89 1c 24 c7 44  24 18 00 00 00 00 e8      ||$...$.D$...... |
; dynamically linked function: memcmp at 0x1411 -- 0x1412
; data inside code section at 0x1412 -- 0x1414
0x1412:    ff ff                                              |..              |
; function: function_1414 at 0x1414 -- 0x141e
0x1414:    ff 85 c0 0f 95 c2                  	inc dword ptr [ebp - 0x3d6af040]
0x141a:    89 d6                              	mov esi, edx
0x141c:    eb 8a                              	jmp 0x13a8 <function_13a8>
; data inside code section at 0x141e -- 0x1420
0x141e:    66 90                                              |f.              |
; function: function_1420 at 0x1420 -- 0x1445
0x1420:    80 7b 01 01                        	cmp byte ptr [ebx + 1], 1
0x1424:    0f 85 68 ff ff ff                  	jne 0x1392 <function_1392>
0x142a:    80 7b 02 0d                        	cmp byte ptr [ebx + 2], 0xd
0x142e:    0f 85 5e ff ff ff                  	jne 0x1392 <function_1392>
0x1434:    80 7b 03 b8                        	cmp byte ptr [ebx + 3], 0xb8
0x1438:    0f 85 54 ff ff ff                  	jne 0x1392 <function_1392>
0x143e:    66 90                              	nop 
0x1440:    e9 63 ff ff ff                     	jmp 0x13a8 <function_13a8>
; function: function_1445 at 0x1445 -- 0x1446
; dynamically linked function: __stack_chk_fail at 0x1446 -- 0x1447
; data inside code section at 0x1447 -- 0x1450
0x1447:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZNK8CNetAddr10IsRoutableEv at 0x1450 -- 0x151d
0x1450:    83 ec 3c                           	sub esp, 0x3c
0x1453:    89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x1457:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x145b:    89 74 24 38                        	mov dword ptr [esp + 0x38], esi
0x145f:    31 f6                              	xor esi, esi
0x1461:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1467:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x146b:    31 c0                              	xor eax, eax
0x146d:    89 1c 24                           	mov dword ptr [esp], ebx
0x1470:    e8 9b fe ff ff                     	call 0x1310 <_ZNK8CNetAddr7IsValidEv>
0x1475:    84 c0                              	test al, al
0x1477:    74 0c                              	je 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
0x1479:    89 1c 24                           	mov dword ptr [esp], ebx
0x147c:    e8 cf f9 ff ff                     	call 0xe50 <_ZNK8CNetAddr9IsRFC1918Ev>
0x1481:    84 c0                              	test al, al
0x1483:    74 23                              	je 0x14a8 <_ZNK8CNetAddr10IsRoutableEv+0x58>
0x1485:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1489:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1490:    89 f0                              	mov eax, esi
0x1492:    0f 85 85 00 00 00                  	jne 0x151d <_ZNK8CNetAddr10IsRoutableEv+0xc8>
0x1498:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x149c:    8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x14a0:    83 c4 3c                           	add esp, 0x3c
0x14a3:    c3                                 	ret 
; data inside code section at 0x14a4 -- 0x14a8
0x14a4:    8d 74 26 00                                        |.t&.            |
0x14a8:    89 1c 24                           	mov dword ptr [esp], ebx
0x14ab:    e8 20 fa ff ff                     	call 0xed0 <_ZNK8CNetAddr9IsRFC3927Ev>
0x14b0:    84 c0                              	test al, al
0x14b2:    75 d1                              	jne 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
0x14b4:    89 1c 24                           	mov dword ptr [esp], ebx
0x14b7:    e8 94 fb ff ff                     	call 0x1050 <_ZNK8CNetAddr9IsRFC4862Ev>
0x14bc:    84 c0                              	test al, al
0x14be:    75 c5                              	jne 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
0x14c0:    0f b6 13                           	movzx edx, byte ptr [ebx]
0x14c3:    89 d0                              	mov eax, edx
0x14c5:    25 fe 00 00 00                     	and eax, 0xfe
0x14ca:    3d fc 00 00 00                     	cmp eax, 0xfc
0x14cf:    74 14                              	je 0x14e5 <_ZNK8CNetAddr10IsRoutableEv+0x95>
0x14d1:    80 fa 20                           	cmp dl, 0x20
0x14d4:    74 26                              	je 0x14fc <_ZNK8CNetAddr10IsRoutableEv+0xac>
0x14d6:    89 1c 24                           	mov dword ptr [esp], ebx
0x14d9:    e8 52 fd ff ff                     	call 0x1230 <_ZNK8CNetAddr7IsLocalEv>
0x14de:    89 c6                              	mov esi, eax
0x14e0:    83 f6 01                           	xor esi, 1
0x14e3:    eb a0                              	jmp 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
0x14e5:    89 1c 24                           	mov dword ptr [esp], ebx
0x14e8:    88 54 24 1c                        	mov byte ptr [esp + 0x1c], dl
0x14ec:    e8 9f fc ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x14f1:    0f b6 54 24 1c                     	movzx edx, byte ptr [esp + 0x1c]
0x14f6:    84 c0                              	test al, al
0x14f8:    74 8b                              	je 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
0x14fa:    eb d5                              	jmp 0x14d1 <_ZNK8CNetAddr10IsRoutableEv+0x81>
0x14fc:    80 7b 01 01                        	cmp byte ptr [ebx + 1], 1
0x1500:    75 d4                              	jne 0x14d6 <_ZNK8CNetAddr10IsRoutableEv+0x86>
0x1502:    80 7b 02 00                        	cmp byte ptr [ebx + 2], 0
0x1506:    75 ce                              	jne 0x14d6 <_ZNK8CNetAddr10IsRoutableEv+0x86>
0x1508:    0f b6 43 03                        	movzx eax, byte ptr [ebx + 3]
0x150c:    25 f0 00 00 00                     	and eax, 0xf0
0x1511:    83 f8 10                           	cmp eax, 0x10
0x1514:    75 c0                              	jne 0x14d6 <_ZNK8CNetAddr10IsRoutableEv+0x86>
0x1516:    31 f6                              	xor esi, esi
0x1518:    e9 68 ff ff ff                     	jmp 0x1485 <_ZNK8CNetAddr10IsRoutableEv+0x35>
; data inside code section at 0x151d -- 0x151e
0x151d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x151e -- 0x151f
; data inside code section at 0x151f -- 0x1530
0x151f:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x152f:    00                                                 |.               |
; function: _ZNK8CNetAddr10GetNetworkEv at 0x1530 -- 0x1586
0x1530:    53                                 	push ebx
0x1531:    83 ec 28                           	sub esp, 0x28
0x1534:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1538:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x153e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1542:    31 c0                              	xor eax, eax
0x1544:    89 1c 24                           	mov dword ptr [esp], ebx
0x1547:    e8 04 ff ff ff                     	call 0x1450 <_ZNK8CNetAddr10IsRoutableEv>
0x154c:    31 d2                              	xor edx, edx
0x154e:    84 c0                              	test al, al
0x1550:    74 20                              	je 0x1572 <_ZNK8CNetAddr10GetNetworkEv+0x42>
0x1552:    89 1c 24                           	mov dword ptr [esp], ebx
0x1555:    e8 a6 f8 ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x155a:    ba 01 00 00 00                     	mov edx, 1
0x155f:    84 c0                              	test al, al
0x1561:    75 0f                              	jne 0x1572 <_ZNK8CNetAddr10GetNetworkEv+0x42>
0x1563:    89 1c 24                           	mov dword ptr [esp], ebx
0x1566:    e8 25 fc ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x156b:    3c 01                              	cmp al, 1
0x156d:    19 d2                              	sbb edx, edx
0x156f:    83 c2 03                           	add edx, 3
0x1572:    89 d0                              	mov eax, edx
0x1574:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1578:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x157f:    75 05                              	jne 0x1586 <_ZNK8CNetAddr10GetNetworkEv+0x55>
0x1581:    83 c4 28                           	add esp, 0x28
0x1584:    5b                                 	pop ebx
0x1585:    c3                                 	ret 
; data inside code section at 0x1586 -- 0x1587
0x1586:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1587 -- 0x1588
; data inside code section at 0x1588 -- 0x1590
0x1588:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: GetExtNetwork at 0x1590 -- 0x15e0
0x1590:    83 ec 2c                           	sub esp, 0x2c
0x1593:    89 c2                              	mov edx, eax
0x1595:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x159b:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x159f:    31 c0                              	xor eax, eax
0x15a1:    85 d2                              	test edx, edx
0x15a3:    b0 04                              	mov al, 4
0x15a5:    74 0d                              	je 0x15b4 <GetExtNetwork+0x24>
0x15a7:    80 3a 20                           	cmp byte ptr [edx], 0x20
0x15aa:    74 1c                              	je 0x15c8 <GetExtNetwork+0x38>
0x15ac:    89 14 24                           	mov dword ptr [esp], edx
0x15af:    e8 7c ff ff ff                     	call 0x1530 <_ZNK8CNetAddr10GetNetworkEv>
0x15b4:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x15b8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x15bf:    75 1d                              	jne 0x15de <GetExtNetwork+0x4e>
0x15c1:    83 c4 2c                           	add esp, 0x2c
0x15c4:    c3                                 	ret 
; data inside code section at 0x15c5 -- 0x15c8
0x15c5:    8d 76 00                                           |.v.             |
0x15c8:    80 7a 01 01                        	cmp byte ptr [edx + 1], 1
0x15cc:    75 de                              	jne 0x15ac <GetExtNetwork+0x1c>
0x15ce:    80 7a 02 00                        	cmp byte ptr [edx + 2], 0
0x15d2:    75 d8                              	jne 0x15ac <GetExtNetwork+0x1c>
0x15d4:    80 7a 03 00                        	cmp byte ptr [edx + 3], 0
0x15d8:    75 d2                              	jne 0x15ac <GetExtNetwork+0x1c>
0x15da:    b0 05                              	mov al, 5
0x15dc:    eb d6                              	jmp 0x15b4 <GetExtNetwork+0x24>
0x15de:    66 90                              	nop 
; data inside code section at 0x15e0 -- 0x15e1
0x15e0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15e1 -- 0x15e2
; data inside code section at 0x15e2 -- 0x15f0
0x15e2:    ff ff ff 8d 74 26 00 8d  bc 27 00 00 00 00         |....t&...'....  |
; function: _ZeqRK8CNetAddrS1_ at 0x15f0 -- 0x1616
0x15f0:    83 ec 2c                           	sub esp, 0x2c
0x15f3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x15f9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15fd:    31 c0                              	xor eax, eax
0x15ff:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1603:    c7 44 24 08 10 00 00 00            	mov dword ptr [esp + 8], 0x10
0x160b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x160f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1613:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1616 -- 0x1617
0x1616:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1617 -- 0x1618
; data inside code section at 0x1618 -- 0x161a
0x1618:    ff ff                                              |..              |
; function: function_161a at 0x161a -- 0x1631
0x161a:    ff 85 c0 0f 94 c0                  	inc dword ptr [ebp - 0x3f6bf040]
0x1620:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1624:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x162b:    75 04                              	jne 0x1631 <function_161a+0x16>
0x162d:    83 c4 2c                           	add esp, 0x2c
0x1630:    c3                                 	ret 
; data inside code section at 0x1631 -- 0x1632
0x1631:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1632 -- 0x1633
; data inside code section at 0x1633 -- 0x1640
0x1633:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZneRK8CNetAddrS1_ at 0x1640 -- 0x1666
0x1640:    83 ec 2c                           	sub esp, 0x2c
0x1643:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1649:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x164d:    31 c0                              	xor eax, eax
0x164f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1653:    c7 44 24 08 10 00 00 00            	mov dword ptr [esp + 8], 0x10
0x165b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x165f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1663:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1666 -- 0x1667
0x1666:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1667 -- 0x1668
; data inside code section at 0x1668 -- 0x166a
0x1668:    ff ff                                              |..              |
; function: function_166a at 0x166a -- 0x1681
0x166a:    ff 85 c0 0f 95 c0                  	inc dword ptr [ebp - 0x3f6af040]
0x1670:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1674:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x167b:    75 04                              	jne 0x1681 <function_166a+0x16>
0x167d:    83 c4 2c                           	add esp, 0x2c
0x1680:    c3                                 	ret 
; data inside code section at 0x1681 -- 0x1682
0x1681:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1682 -- 0x1683
; data inside code section at 0x1683 -- 0x1690
0x1683:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZltRK8CNetAddrS1_ at 0x1690 -- 0x16b6
0x1690:    83 ec 2c                           	sub esp, 0x2c
0x1693:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1699:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x169d:    31 c0                              	xor eax, eax
0x169f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x16a3:    c7 44 24 08 10 00 00 00            	mov dword ptr [esp + 8], 0x10
0x16ab:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x16af:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x16b3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x16b6 -- 0x16b7
0x16b6:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x16b7 -- 0x16b8
; data inside code section at 0x16b8 -- 0x16ba
0x16b8:    ff ff                                              |..              |
; function: function_16ba at 0x16ba -- 0x16e0
0x16ba:    ff c1                              	inc ecx
0x16bc:    e8 1f 8b 54 24                     	call 0x2454a1e0 <unknown_2454a1e0>
0x16c1:    1c 65                              	sbb al, 0x65
0x16c3:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x16c9:    75 04                              	jne 0x16cf <function_16ba+0x15>
0x16cb:    83 c4 2c                           	add esp, 0x2c
0x16ce:    c3                                 	ret 
0x16cf:    e8 fc ff ff ff                     	call 0x16d0
0x16d4:    8d b6 00 00 00 00                  	lea esi, [esi]
0x16da:    8d bf 00 00 00 00                  	lea edi, [edi]
; function: _ZNK8CNetAddr9GetInAddrEP7in_addr at 0x16e0 -- 0x1732
0x16e0:    83 ec 2c                           	sub esp, 0x2c
0x16e3:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x16e7:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x16eb:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x16ef:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x16f3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16f9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16fd:    31 c0                              	xor eax, eax
0x16ff:    89 1c 24                           	mov dword ptr [esp], ebx
0x1702:    e8 f9 f6 ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x1707:    31 d2                              	xor edx, edx
0x1709:    84 c0                              	test al, al
0x170b:    74 0a                              	je 0x1717 <_ZNK8CNetAddr9GetInAddrEP7in_addr+0x37>
0x170d:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1710:    ba 01 00 00 00                     	mov edx, 1
0x1715:    89 06                              	mov dword ptr [esi], eax
0x1717:    89 d0                              	mov eax, edx
0x1719:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x171d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1724:    75 0c                              	jne 0x1732 <_ZNK8CNetAddr9GetInAddrEP7in_addr+0x51>
0x1726:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x172a:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x172e:    83 c4 2c                           	add esp, 0x2c
0x1731:    c3                                 	ret 
; data inside code section at 0x1732 -- 0x1733
0x1732:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1733 -- 0x1734
; data inside code section at 0x1734 -- 0x1740
0x1734:    ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: _ZNK8CNetAddr10GetIn6AddrEP8in6_addr at 0x1740 -- 0x1784
0x1740:    83 ec 1c                           	sub esp, 0x1c
0x1743:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1747:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x174e:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x1752:    31 c9                              	xor ecx, ecx
0x1754:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1758:    8b 0a                              	mov ecx, dword ptr [edx]
0x175a:    89 08                              	mov dword ptr [eax], ecx
0x175c:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x175f:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x1762:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x1765:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x1768:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x176b:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x176e:    b8 01 00 00 00                     	mov eax, 1
0x1773:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x1777:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x177e:    75 04                              	jne 0x1784 <_ZNK8CNetAddr10GetIn6AddrEP8in6_addr+0x43>
0x1780:    83 c4 1c                           	add esp, 0x1c
0x1783:    c3                                 	ret 
; data inside code section at 0x1784 -- 0x1785
0x1784:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1785 -- 0x1786
; data inside code section at 0x1786 -- 0x1790
0x1786:    ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: _ZNK8CNetAddr7GetHashEv at 0x1790 -- 0x17f7
0x1790:    53                                 	push ebx
0x1791:    83 ec 68                           	sub esp, 0x68
0x1794:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x179a:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x179e:    31 c0                              	xor eax, eax
0x17a0:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x17a4:    8d 5c 24 3c                        	lea ebx, [esp + 0x3c]
0x17a8:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x17b0:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x17b8:    c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x17c0:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x17c8:    c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x17d0:    c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0x17d8:    c7 44 24 54 00 00 00 00            	mov dword ptr [esp + 0x54], 0
0x17e0:    c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0x17e8:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x17ec:    c7 44 24 04 10 00 00 00            	mov dword ptr [esp + 4], 0x10
0x17f4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x17f7 -- 0x17f8
0x17f7:    e8                                                 |.               |
; dynamically linked function: SHA256 at 0x17f8 -- 0x17f9
; data inside code section at 0x17f9 -- 0x1850
0x17f9:    ff ff ff 8d 44 24 1c c7  44 24 1c 00 00 00 00 c7   |....D$..D$......|
0x1809:    44 24 20 00 00 00 00 c7  44 24 24 00 00 00 00 c7   |D$ .....D$$.....|
0x1819:    44 24 28 00 00 00 00 c7  44 24 2c 00 00 00 00 c7   |D$(.....D$,.....|
0x1829:    44 24 30 00 00 00 00 c7  44 24 34 00 00 00 00 c7   |D$0.....D$4.....|
0x1839:    44 24 38 00 00 00 00 89  44 24 08 c7 44 24 04 20   |D$8.....D$..D$. |
0x1849:    00 00 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: SHA256 at 0x1850 -- 0x1851
; data inside code section at 0x1851 -- 0x1853
0x1851:    ff ff                                              |..              |
; function: function_1853 at 0x1853 -- 0x186e
0x1853:    ff 8b 44 24 1c 8b                  	dec dword ptr [ebx - 0x74e3dbbc]
0x1859:    4c                                 	dec esp
0x185a:    24 5c                              	and al, 0x5c
0x185c:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1863:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1867:    75 05                              	jne 0x186e <function_1853+0x1a>
0x1869:    83 c4 68                           	add esp, 0x68
0x186c:    5b                                 	pop ebx
0x186d:    c3                                 	ret 
; data inside code section at 0x186e -- 0x186f
0x186e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x186f -- 0x1870
; data inside code section at 0x1870 -- 0x1880
0x1870:    ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK8CNetAddr19GetReachabilityFromEPKS_ at 0x1880 -- 0x19e8
0x1880:    83 ec 2c                           	sub esp, 0x2c
0x1883:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x1887:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x188b:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x188f:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x1893:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1899:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x189d:    31 c0                              	xor eax, eax
0x189f:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x18a3:    89 1c 24                           	mov dword ptr [esp], ebx
0x18a6:    e8 a5 fb ff ff                     	call 0x1450 <_ZNK8CNetAddr10IsRoutableEv>
0x18ab:    31 d2                              	xor edx, edx
0x18ad:    84 c0                              	test al, al
0x18af:    74 77                              	je 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
0x18b1:    89 d8                              	mov eax, ebx
0x18b3:    e8 d8 fc ff ff                     	call 0x1590 <GetExtNetwork>
0x18b8:    89 c7                              	mov edi, eax
0x18ba:    89 f0                              	mov eax, esi
0x18bc:    e8 cf fc ff ff                     	call 0x1590 <GetExtNetwork>
0x18c1:    80 3b 20                           	cmp byte ptr [ebx], 0x20
0x18c4:    89 c6                              	mov esi, eax
0x18c6:    0f 84 b4 00 00 00                  	je 0x1980 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x100>
0x18cc:    89 1c 24                           	mov dword ptr [esp], ebx
0x18cf:    e8 dc f6 ff ff                     	call 0xfb0 <_ZNK8CNetAddr9IsRFC6052Ev>
0x18d4:    ba 01 00 00 00                     	mov edx, 1
0x18d9:    84 c0                              	test al, al
0x18db:    74 73                              	je 0x1950 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xd0>
0x18dd:    83 fe 02                           	cmp esi, 2
0x18e0:    74 7d                              	je 0x195f <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xdf>
0x18e2:    7f 14                              	jg 0x18f8 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x78>
0x18e4:    83 fe 01                           	cmp esi, 1
0x18e7:    75 26                              	jne 0x190f <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x8f>
0x18e9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x18f0:    eb 7c                              	jmp 0x196e <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xee>
; data inside code section at 0x18f2 -- 0x18f8
0x18f2:    8d b6 00 00 00 00                                  |......          |
0x18f8:    83 fe 03                           	cmp esi, 3
0x18fb:    90                                 	nop 
0x18fc:    8d 74 26 00                        	lea esi, [esi]
0x1900:    0f 84 92 00 00 00                  	je 0x1998 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x118>
0x1906:    83 fe 05                           	cmp esi, 5
0x1909:    0f 84 a9 00 00 00                  	je 0x19b8 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x138>
0x190f:    83 ef 01                           	sub edi, 1
0x1912:    ba 01 00 00 00                     	mov edx, 1
0x1917:    83 ff 04                           	cmp edi, 4
0x191a:    77 0c                              	ja 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
0x191c:    8b 14 bd d8 6b 00 00               	mov edx, dword ptr [edi*4 + 0x6bd8]
0x1923:    90                                 	nop 
0x1924:    8d 74 26 00                        	lea esi, [esi]
0x1928:    89 d0                              	mov eax, edx
0x192a:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x192e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1935:    0f 85 ad 00 00 00                  	jne 0x19e8 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x163>
0x193b:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x193f:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x1943:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1947:    83 c4 2c                           	add esp, 0x2c
0x194a:    c3                                 	ret 
; data inside code section at 0x194b -- 0x1950
0x194b:    90 8d 74 26 00                                     |..t&.           |
0x1950:    89 1c 24                           	mov dword ptr [esp], ebx
0x1953:    e8 88 f7 ff ff                     	call 0x10e0 <_ZNK8CNetAddr9IsRFC6145Ev>
0x1958:    83 fe 02                           	cmp esi, 2
0x195b:    89 c2                              	mov edx, eax
0x195d:    75 83                              	jne 0x18e2 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x62>
0x195f:    83 ff 02                           	cmp edi, 2
0x1962:    74 74                              	je 0x19d8 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x158>
0x1964:    83 ff 05                           	cmp edi, 5
0x1967:    ba 02 00 00 00                     	mov edx, 2
0x196c:    74 ba                              	je 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
0x196e:    31 d2                              	xor edx, edx
0x1970:    83 ff 01                           	cmp edi, 1
0x1973:    0f 94 c2                           	sete dl
0x1976:    8d 54 52 01                        	lea edx, [edx + edx*2 + 1]
0x197a:    eb ac                              	jmp 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
; data inside code section at 0x197c -- 0x1980
0x197c:    8d 74 26 00                                        |.t&.            |
0x1980:    80 7b 01 02                        	cmp byte ptr [ebx + 1], 2
0x1984:    ba 01 00 00 00                     	mov edx, 1
0x1989:    0f 85 3d ff ff ff                  	jne 0x18cc <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x4c>
0x198f:    e9 49 ff ff ff                     	jmp 0x18dd <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0x5d>
; data inside code section at 0x1994 -- 0x1998
0x1994:    8d 74 26 00                                        |.t&.            |
0x1998:    83 ef 01                           	sub edi, 1
0x199b:    ba 01 00 00 00                     	mov edx, 1
0x19a0:    83 ff 02                           	cmp edi, 2
0x19a3:    77 83                              	ja 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
0x19a5:    8b 14 bd b8 6b 00 00               	mov edx, dword ptr [edi*4 + 0x6bb8]
0x19ac:    e9 77 ff ff ff                     	jmp 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
; data inside code section at 0x19b1 -- 0x19b8
0x19b1:    8d b4 26 00 00 00 00                               |..&....         |
0x19b8:    83 ef 01                           	sub edi, 1
0x19bb:    ba 01 00 00 00                     	mov edx, 1
0x19c0:    83 ff 04                           	cmp edi, 4
0x19c3:    0f 87 5f ff ff ff                  	ja 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
0x19c9:    8b 14 bd c4 6b 00 00               	mov edx, dword ptr [edi*4 + 0x6bc4]
0x19d0:    e9 53 ff ff ff                     	jmp 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
; data inside code section at 0x19d5 -- 0x19d8
0x19d5:    8d 76 00                                           |.v.             |
0x19d8:    80 fa 01                           	cmp dl, 1
0x19db:    19 d2                              	sbb edx, edx
0x19dd:    83 e2 02                           	and edx, 2
0x19e0:    83 c2 03                           	add edx, 3
0x19e3:    e9 40 ff ff ff                     	jmp 0x1928 <_ZNK8CNetAddr19GetReachabilityFromEPKS_+0xa8>
; data inside code section at 0x19e8 -- 0x19e9
0x19e8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19e9 -- 0x19ea
; data inside code section at 0x19ea -- 0x19f0
0x19ea:    ff ff ff 90 66 90                                  |....f.          |
; function: _ZN8CService4InitEv at 0x19f0 -- 0x1a1a
0x19f0:    83 ec 1c                           	sub esp, 0x1c
0x19f3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19f9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x19fd:    31 c0                              	xor eax, eax
0x19ff:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1a03:    66 c7 40 10 00 00                  	mov word ptr [eax + 0x10], 0
0x1a09:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x1a0d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1a14:    75 04                              	jne 0x1a1a <_ZN8CService4InitEv+0x29>
0x1a16:    83 c4 1c                           	add esp, 0x1c
0x1a19:    c3                                 	ret 
; data inside code section at 0x1a1a -- 0x1a1b
0x1a1a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a1b -- 0x1a1c
; data inside code section at 0x1a1c -- 0x1a20
0x1a1c:    ff ff ff 90                                        |....            |
; function: CService at 0x1a20 -- 0x1a54
0x1a20:    53                                 	push ebx
0x1a21:    83 ec 28                           	sub esp, 0x28
0x1a24:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1a28:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a2e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1a32:    31 c0                              	xor eax, eax
0x1a34:    89 1c 24                           	mov dword ptr [esp], ebx
0x1a37:    e8 74 f0 ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x1a3c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1a40:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1a47:    66 c7 43 10 00 00                  	mov word ptr [ebx + 0x10], 0
0x1a4d:    75 05                              	jne 0x1a54 <CService+0x33>
0x1a4f:    83 c4 28                           	add esp, 0x28
0x1a52:    5b                                 	pop ebx
0x1a53:    c3                                 	ret 
; data inside code section at 0x1a54 -- 0x1a55
0x1a54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a55 -- 0x1a56
; data inside code section at 0x1a56 -- 0x1a60
0x1a56:    ff ff ff 90 8d b6 00 00  00 00                     |..........      |
; function: CService at 0x1a60 -- 0x1aa7
0x1a60:    83 ec 1c                           	sub esp, 0x1c
0x1a63:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x1a67:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1a6b:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x1a72:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x1a76:    31 c9                              	xor ecx, ecx
0x1a78:    8b 0a                              	mov ecx, dword ptr [edx]
0x1a7a:    89 08                              	mov dword ptr [eax], ecx
0x1a7c:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x1a7f:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x1a82:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x1a85:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x1a88:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x1a8b:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1a8e:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1a92:    66 89 50 10                        	mov word ptr [eax + 0x10], dx
0x1a96:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x1a9a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1aa1:    75 04                              	jne 0x1aa7 <CService+0x46>
0x1aa3:    83 c4 1c                           	add esp, 0x1c
0x1aa6:    c3                                 	ret 
; data inside code section at 0x1aa7 -- 0x1aa8
0x1aa7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1aa8 -- 0x1aa9
; data inside code section at 0x1aa9 -- 0x1ab0
0x1aa9:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: CService at 0x1ab0 -- 0x1afc
0x1ab0:    83 ec 2c                           	sub esp, 0x2c
0x1ab3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ab9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1abd:    31 c0                              	xor eax, eax
0x1abf:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1ac3:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1ac7:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1acb:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1acf:    8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x1ad3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1ad7:    89 1c 24                           	mov dword ptr [esp], ebx
0x1ada:    e8 41 f2 ff ff                     	call 0xd20 <CNetAddr>
0x1adf:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ae3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1aea:    66 89 73 10                        	mov word ptr [ebx + 0x10], si
0x1aee:    75 0c                              	jne 0x1afc <CService+0x4b>
0x1af0:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1af4:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x1af8:    83 c4 2c                           	add esp, 0x2c
0x1afb:    c3                                 	ret 
; data inside code section at 0x1afc -- 0x1afd
0x1afc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1afd -- 0x1afe
; data inside code section at 0x1afe -- 0x1b10
0x1afe:    ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x1b0e:    00 00                                              |..              |
; function: CService at 0x1b10 -- 0x1b5c
0x1b10:    83 ec 2c                           	sub esp, 0x2c
0x1b13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b19:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1b1d:    31 c0                              	xor eax, eax
0x1b1f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1b23:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1b27:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1b2b:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1b2f:    8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x1b33:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1b37:    89 1c 24                           	mov dword ptr [esp], ebx
0x1b3a:    e8 31 f2 ff ff                     	call 0xd70 <CNetAddr>
0x1b3f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1b43:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1b4a:    66 89 73 10                        	mov word ptr [ebx + 0x10], si
0x1b4e:    75 0c                              	jne 0x1b5c <CService+0x4b>
0x1b50:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1b54:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x1b58:    83 c4 2c                           	add esp, 0x2c
0x1b5b:    c3                                 	ret 
; data inside code section at 0x1b5c -- 0x1b5d
0x1b5c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b5d -- 0x1b5e
; data inside code section at 0x1b5e -- 0x1b70
0x1b5e:    ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x1b6e:    00 00                                              |..              |
; function: CService at 0x1b70 -- 0x1be8
0x1b70:    83 ec 2c                           	sub esp, 0x2c
0x1b73:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1b77:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1b7b:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1b7f:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1b83:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b89:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1b8d:    31 c0                              	xor eax, eax
0x1b8f:    8d 43 04                           	lea eax, [ebx + 4]
0x1b92:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1b96:    89 34 24                           	mov dword ptr [esp], esi
0x1b99:    e8 82 f1 ff ff                     	call 0xd20 <CNetAddr>
0x1b9e:    0f b7 43 02                        	movzx eax, word ptr [ebx + 2]
0x1ba2:    66 c1 c8 08                        	ror ax, 8
0x1ba6:    66 83 3b 02                        	cmp word ptr [ebx], 2
0x1baa:    66 89 46 10                        	mov word ptr [esi + 0x10], ax
0x1bae:    75 19                              	jne 0x1bc9 <CService+0x59>
0x1bb0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1bb4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1bbb:    75 30                              	jne 0x1bed <function_1bed>
0x1bbd:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1bc1:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x1bc5:    83 c4 2c                           	add esp, 0x2c
0x1bc8:    c3                                 	ret 
0x1bc9:    c7 44 24 0c f0 6b 00 00            	mov dword ptr [esp + 0xc], 0x6bf0 ; "CService::CService(const sockaddr_in&)"
0x1bd1:    c7 44 24 08 e1 03 00 00            	mov dword ptr [esp + 8], 0x3e1
0x1bd9:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x1be1:    c7 04 24 f8 4e 00 00               	mov dword ptr [esp], 0x4ef8 ; "addr.sin_family == 2"
; data inside code section at 0x1be8 -- 0x1be9
0x1be8:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1be9 -- 0x1bea
; data inside code section at 0x1bea -- 0x1bed
0x1bea:    ff ff ff                                           |...             |
; function: function_1bed at 0x1bed -- 0x1bee
; dynamically linked function: __stack_chk_fail at 0x1bee -- 0x1bef
; data inside code section at 0x1bef -- 0x1c00
0x1bef:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x1bff:    00                                                 |.               |
; function: CService at 0x1c00 -- 0x1c78
0x1c00:    83 ec 2c                           	sub esp, 0x2c
0x1c03:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1c07:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1c0b:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1c0f:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1c13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c19:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1c1d:    31 c0                              	xor eax, eax
0x1c1f:    8d 43 08                           	lea eax, [ebx + 8]
0x1c22:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1c26:    89 34 24                           	mov dword ptr [esp], esi
0x1c29:    e8 42 f1 ff ff                     	call 0xd70 <CNetAddr>
0x1c2e:    0f b7 43 02                        	movzx eax, word ptr [ebx + 2]
0x1c32:    66 c1 c8 08                        	ror ax, 8
0x1c36:    66 83 3b 0a                        	cmp word ptr [ebx], 0xa
0x1c3a:    66 89 46 10                        	mov word ptr [esi + 0x10], ax
0x1c3e:    75 19                              	jne 0x1c59 <CService+0x59>
0x1c40:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1c44:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1c4b:    75 30                              	jne 0x1c7d <function_1c7d>
0x1c4d:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1c51:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x1c55:    83 c4 2c                           	add esp, 0x2c
0x1c58:    c3                                 	ret 
0x1c59:    c7 44 24 0c 30 6c 00 00            	mov dword ptr [esp + 0xc], 0x6c30 ; "CService::CService(const sockaddr_in6&)"
0x1c61:    c7 44 24 08 e7 03 00 00            	mov dword ptr [esp + 8], 0x3e7
0x1c69:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x1c71:    c7 04 24 0d 4f 00 00               	mov dword ptr [esp], 0x4f0d ; "addr.sin6_family == 10"
; data inside code section at 0x1c78 -- 0x1c79
0x1c78:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1c79 -- 0x1c7a
; data inside code section at 0x1c7a -- 0x1c7d
0x1c7a:    ff ff ff                                           |...             |
; function: function_1c7d at 0x1c7d -- 0x1c7e
; dynamically linked function: __stack_chk_fail at 0x1c7e -- 0x1c7f
; data inside code section at 0x1c7f -- 0x1c90
0x1c7f:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x1c8f:    00                                                 |.               |
; function: _ZN8CService11SetSockAddrEPK8sockaddr at 0x1c90 -- 0x1d4e
0x1c90:    53                                 	push ebx
0x1c91:    83 ec 48                           	sub esp, 0x48
0x1c94:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x1c98:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c9e:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1ca2:    31 c0                              	xor eax, eax
0x1ca4:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1ca8:    0f b7 02                           	movzx eax, word ptr [edx]
0x1cab:    66 83 f8 02                        	cmp ax, 2
0x1caf:    74 1f                              	je 0x1cd0 <_ZN8CService11SetSockAddrEPK8sockaddr+0x40>
0x1cb1:    66 83 f8 0a                        	cmp ax, 0xa
0x1cb5:    74 59                              	je 0x1d10 <_ZN8CService11SetSockAddrEPK8sockaddr+0x80>
0x1cb7:    31 c0                              	xor eax, eax
0x1cb9:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1cbd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1cc4:    0f 85 84 00 00 00                  	jne 0x1d4e <_ZN8CService11SetSockAddrEPK8sockaddr+0xb9>
0x1cca:    83 c4 48                           	add esp, 0x48
0x1ccd:    5b                                 	pop ebx
0x1cce:    c3                                 	ret 
; data inside code section at 0x1ccf -- 0x1cd0
0x1ccf:    90                                                 |.               |
0x1cd0:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x1cd4:    89 04 24                           	mov dword ptr [esp], eax
0x1cd7:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1cdb:    e8 90 fe ff ff                     	call 0x1b70 <CService>
0x1ce0:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1ce4:    89 03                              	mov dword ptr [ebx], eax
0x1ce6:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1cea:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1ced:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1cf1:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x1cf4:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1cf8:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1cfb:    0f b7 44 24 28                     	movzx eax, word ptr [esp + 0x28]
0x1d00:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x1d04:    b8 01 00 00 00                     	mov eax, 1
0x1d09:    eb ae                              	jmp 0x1cb9 <_ZN8CService11SetSockAddrEPK8sockaddr+0x29>
; data inside code section at 0x1d0b -- 0x1d10
0x1d0b:    90 8d 74 26 00                                     |..t&.           |
0x1d10:    8d 44 24 2a                        	lea eax, [esp + 0x2a]
0x1d14:    89 04 24                           	mov dword ptr [esp], eax
0x1d17:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1d1b:    e8 e0 fe ff ff                     	call 0x1c00 <CService>
0x1d20:    8b 44 24 2a                        	mov eax, dword ptr [esp + 0x2a]
0x1d24:    89 03                              	mov dword ptr [ebx], eax
0x1d26:    8b 44 24 2e                        	mov eax, dword ptr [esp + 0x2e]
0x1d2a:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1d2d:    8b 44 24 32                        	mov eax, dword ptr [esp + 0x32]
0x1d31:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x1d34:    8b 44 24 36                        	mov eax, dword ptr [esp + 0x36]
0x1d38:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1d3b:    0f b7 44 24 3a                     	movzx eax, word ptr [esp + 0x3a]
0x1d40:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x1d44:    b8 01 00 00 00                     	mov eax, 1
0x1d49:    e9 6b ff ff ff                     	jmp 0x1cb9 <_ZN8CService11SetSockAddrEPK8sockaddr+0x29>
; data inside code section at 0x1d4e -- 0x1d4f
0x1d4e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1d4f -- 0x1d50
; data inside code section at 0x1d50 -- 0x1d60
0x1d50:    ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZNK8CService7GetPortEv at 0x1d60 -- 0x1d88
0x1d60:    83 ec 1c                           	sub esp, 0x1c
0x1d63:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1d69:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1d6d:    31 c0                              	xor eax, eax
0x1d6f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1d73:    0f b7 40 10                        	movzx eax, word ptr [eax + 0x10]
0x1d77:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x1d7b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1d82:    75 04                              	jne 0x1d88 <_ZNK8CService7GetPortEv+0x27>
0x1d84:    83 c4 1c                           	add esp, 0x1c
0x1d87:    c3                                 	ret 
; data inside code section at 0x1d88 -- 0x1d89
0x1d88:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1d89 -- 0x1d8a
; data inside code section at 0x1d8a -- 0x1d90
0x1d8a:    ff ff ff 8d 76 00                                  |....v.          |
; function: _ZeqRK8CServiceS1_ at 0x1d90 -- 0x1e19
0x1d90:    56                                 	push esi
0x1d91:    53                                 	push ebx
0x1d92:    83 ec 44                           	sub esp, 0x44
0x1d95:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1d99:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1d9f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1da3:    31 c0                              	xor eax, eax
0x1da5:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1da9:    8b 03                              	mov eax, dword ptr [ebx]
0x1dab:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1daf:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1db2:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1db6:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x1db9:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1dbd:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1dc0:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1dc4:    8b 06                              	mov eax, dword ptr [esi]
0x1dc6:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1dca:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1dcd:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1dd1:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1dd4:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1dd8:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1ddb:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1ddf:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1de3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1de7:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1deb:    89 04 24                           	mov dword ptr [esp], eax
0x1dee:    e8 fd f7 ff ff                     	call 0x15f0 <_ZeqRK8CNetAddrS1_>
0x1df3:    31 d2                              	xor edx, edx
0x1df5:    84 c0                              	test al, al
0x1df7:    74 0b                              	je 0x1e04 <_ZeqRK8CServiceS1_+0x74>
0x1df9:    0f b7 53 10                        	movzx edx, word ptr [ebx + 0x10]
0x1dfd:    66 39 56 10                        	cmp word ptr [esi + 0x10], dx
0x1e01:    0f 94 c2                           	sete dl
0x1e04:    89 d0                              	mov eax, edx
0x1e06:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1e0a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1e11:    75 06                              	jne 0x1e19 <_ZeqRK8CServiceS1_+0x88>
0x1e13:    83 c4 44                           	add esp, 0x44
0x1e16:    5b                                 	pop ebx
0x1e17:    5e                                 	pop esi
0x1e18:    c3                                 	ret 
; data inside code section at 0x1e19 -- 0x1e1a
0x1e19:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e1a -- 0x1e1b
; data inside code section at 0x1e1b -- 0x1e1d
0x1e1b:    ff ff                                              |..              |
; function: function_1e1d at 0x1e1d -- 0x1e20
0x1e1d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZneRK8CServiceS1_ at 0x1e20 -- 0x1eac
0x1e20:    56                                 	push esi
0x1e21:    53                                 	push ebx
0x1e22:    83 ec 44                           	sub esp, 0x44
0x1e25:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1e29:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e2f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1e33:    31 c0                              	xor eax, eax
0x1e35:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1e39:    8b 03                              	mov eax, dword ptr [ebx]
0x1e3b:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1e3f:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1e42:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1e46:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x1e49:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1e4d:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1e50:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1e54:    8b 06                              	mov eax, dword ptr [esi]
0x1e56:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e5a:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1e5d:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1e61:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1e64:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1e68:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1e6b:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1e6f:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1e73:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e77:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1e7b:    89 04 24                           	mov dword ptr [esp], eax
0x1e7e:    e8 bd f7 ff ff                     	call 0x1640 <_ZneRK8CNetAddrS1_>
0x1e83:    ba 01 00 00 00                     	mov edx, 1
0x1e88:    84 c0                              	test al, al
0x1e8a:    75 0b                              	jne 0x1e97 <_ZneRK8CServiceS1_+0x77>
0x1e8c:    0f b7 53 10                        	movzx edx, word ptr [ebx + 0x10]
0x1e90:    66 39 56 10                        	cmp word ptr [esi + 0x10], dx
0x1e94:    0f 95 c2                           	setne dl
0x1e97:    89 d0                              	mov eax, edx
0x1e99:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1e9d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1ea4:    75 06                              	jne 0x1eac <_ZneRK8CServiceS1_+0x8b>
0x1ea6:    83 c4 44                           	add esp, 0x44
0x1ea9:    5b                                 	pop ebx
0x1eaa:    5e                                 	pop esi
0x1eab:    c3                                 	ret 
; data inside code section at 0x1eac -- 0x1ead
0x1eac:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ead -- 0x1eae
; data inside code section at 0x1eae -- 0x1eb1
0x1eae:    ff ff ff                                           |...             |
; function: function_1eb1 at 0x1eb1 -- 0x1eb3
0x1eb1:    eb 0d                              	jmp 0x1ec0 <_ZltRK8CServiceS1_>
; data inside code section at 0x1eb3 -- 0x1ec0
0x1eb3:    90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _ZltRK8CServiceS1_ at 0x1ec0 -- 0x1ffd
0x1ec0:    81 ec 9c 00 00 00                  	sub esp, 0x9c
0x1ec6:    89 9c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ebx
0x1ecd:    8b 9c 24 a4 00 00 00               	mov ebx, dword ptr [esp + 0xa4]
0x1ed4:    89 b4 24 90 00 00 00               	mov dword ptr [esp + 0x90], esi
0x1edb:    8b b4 24 a0 00 00 00               	mov esi, dword ptr [esp + 0xa0]
0x1ee2:    89 bc 24 94 00 00 00               	mov dword ptr [esp + 0x94], edi
0x1ee9:    89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0x1ef0:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ef6:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x1efa:    31 c0                              	xor eax, eax
0x1efc:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1eff:    8b 13                              	mov edx, dword ptr [ebx]
0x1f01:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1f04:    8b 7b 08                           	mov edi, dword ptr [ebx + 8]
0x1f07:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1f0b:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1f0f:    8b 06                              	mov eax, dword ptr [esi]
0x1f11:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x1f15:    89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0x1f19:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1f1d:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1f21:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1f25:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1f28:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1f2c:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x1f30:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1f33:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1f37:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1f3b:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1f3e:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1f42:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1f46:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1f4a:    8d 44 24 4c                        	lea eax, [esp + 0x4c]
0x1f4e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f52:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x1f56:    89 04 24                           	mov dword ptr [esp], eax
0x1f59:    e8 32 f7 ff ff                     	call 0x1690 <_ZltRK8CNetAddrS1_>
0x1f5e:    b9 01 00 00 00                     	mov ecx, 1
0x1f63:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1f67:    84 c0                              	test al, al
0x1f69:    75 4e                              	jne 0x1fb9 <_ZltRK8CServiceS1_+0xf9>
0x1f6b:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x1f6f:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f73:    8d 44 24 6c                        	lea eax, [esp + 0x6c]
0x1f77:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f7b:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x1f7f:    89 04 24                           	mov dword ptr [esp], eax
0x1f82:    89 6c 24 70                        	mov dword ptr [esp + 0x70], ebp
0x1f86:    89 54 24 78                        	mov dword ptr [esp + 0x78], edx
0x1f8a:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1f8e:    89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x1f92:    89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x1f96:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x1f9a:    89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0x1f9e:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1fa2:    89 54 24 64                        	mov dword ptr [esp + 0x64], edx
0x1fa6:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1faa:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x1fae:    e8 3d f6 ff ff                     	call 0x15f0 <_ZeqRK8CNetAddrS1_>
0x1fb3:    31 c9                              	xor ecx, ecx
0x1fb5:    84 c0                              	test al, al
0x1fb7:    75 37                              	jne 0x1ff0 <_ZltRK8CServiceS1_+0x130>
0x1fb9:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x1fbd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1fc4:    89 c8                              	mov eax, ecx
0x1fc6:    75 35                              	jne 0x1ffd <_ZltRK8CServiceS1_+0x13b>
0x1fc8:    8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
0x1fcf:    8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x1fd6:    8b bc 24 94 00 00 00               	mov edi, dword ptr [esp + 0x94]
0x1fdd:    8b ac 24 98 00 00 00               	mov ebp, dword ptr [esp + 0x98]
0x1fe4:    81 c4 9c 00 00 00                  	add esp, 0x9c
0x1fea:    c3                                 	ret 
; data inside code section at 0x1feb -- 0x1ff0
0x1feb:    90 8d 74 26 00                                     |..t&.           |
0x1ff0:    0f b7 43 10                        	movzx eax, word ptr [ebx + 0x10]
0x1ff4:    66 39 46 10                        	cmp word ptr [esi + 0x10], ax
0x1ff8:    0f 92 c1                           	setb cl
0x1ffb:    eb bc                              	jmp 0x1fb9 <_ZltRK8CServiceS1_+0xf9>
; data inside code section at 0x1ffd -- 0x1ffe
0x1ffd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ffe -- 0x1fff
; data inside code section at 0x1fff -- 0x2010
0x1fff:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x200f:    00                                                 |.               |
; function: _ZNK8CService11GetSockAddrEP8sockaddrPj at 0x2010 -- 0x2198
0x2010:    83 ec 4c                           	sub esp, 0x4c
0x2013:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2017:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x201b:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x201f:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x2023:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x2027:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x202b:    89 1c 24                           	mov dword ptr [esp], ebx
0x202e:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2034:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2038:    31 c0                              	xor eax, eax
0x203a:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x203e:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2042:    e8 b9 ed ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x2047:    84 c0                              	test al, al
0x2049:    89 c5                              	mov ebp, eax
0x204b:    74 3b                              	je 0x2088 <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x78>
0x204d:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2051:    31 ff                              	xor edi, edi
0x2053:    83 3a 0f                           	cmp dword ptr [edx], 0xf
0x2056:    0f 87 cc 00 00 00                  	ja 0x2128 <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x118>
0x205c:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2060:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2067:    89 f8                              	mov eax, edi
0x2069:    0f 85 29 01 00 00                  	jne 0x2198 <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x183>
0x206f:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x2073:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x2077:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x207b:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x207f:    83 c4 4c                           	add esp, 0x4c
0x2082:    c3                                 	ret 
; data inside code section at 0x2083 -- 0x2088
0x2083:    90 8d 74 26 00                                     |..t&.           |
0x2088:    89 1c 24                           	mov dword ptr [esp], ebx
0x208b:    31 ff                              	xor edi, edi
0x208d:    e8 4e f1 ff ff                     	call 0x11e0 <_ZNK8CNetAddr6IsIPv6Ev>
0x2092:    84 c0                              	test al, al
0x2094:    74 c6                              	je 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
0x2096:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x209a:    89 ef                              	mov edi, ebp
0x209c:    83 3a 1b                           	cmp dword ptr [edx], 0x1b
0x209f:    76 bb                              	jbe 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
0x20a1:    f7 c6 01 00 00 00                  	test esi, 1
0x20a7:    b9 1c 00 00 00                     	mov ecx, 0x1c
0x20ac:    c7 02 1c 00 00 00                  	mov dword ptr [edx], 0x1c
0x20b2:    89 f2                              	mov edx, esi
0x20b4:    0f 85 d1 00 00 00                  	jne 0x218b <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x17b>
0x20ba:    f6 c2 02                           	test dl, 2
0x20bd:    0f 85 b8 00 00 00                  	jne 0x217b <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x16b>
0x20c3:    89 cf                              	mov edi, ecx
0x20c5:    31 c0                              	xor eax, eax
0x20c7:    83 e7 fc                           	and edi, 0xfffffffc
0x20ca:    c7 04 02 00 00 00 00               	mov dword ptr [edx + eax], 0
0x20d1:    83 c0 04                           	add eax, 4
0x20d4:    39 f8                              	cmp eax, edi
0x20d6:    72 f2                              	jb 0x20ca <_ZNK8CService11GetSockAddrEP8sockaddrPj+0xba>
0x20d8:    01 c2                              	add edx, eax
0x20da:    f6 c1 02                           	test cl, 2
0x20dd:    74 08                              	je 0x20e7 <_ZNK8CService11GetSockAddrEP8sockaddrPj+0xd7>
0x20df:    66 c7 02 00 00                     	mov word ptr [edx], 0
0x20e4:    83 c2 02                           	add edx, 2
0x20e7:    83 e1 01                           	and ecx, 1
0x20ea:    74 03                              	je 0x20ef <_ZNK8CService11GetSockAddrEP8sockaddrPj+0xdf>
0x20ec:    c6 02 00                           	mov byte ptr [edx], 0
0x20ef:    8d 46 08                           	lea eax, [esi + 8]
0x20f2:    31 ff                              	xor edi, edi
0x20f4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x20f8:    89 1c 24                           	mov dword ptr [esp], ebx
0x20fb:    e8 40 f6 ff ff                     	call 0x1740 <_ZNK8CNetAddr10GetIn6AddrEP8in6_addr>
0x2100:    84 c0                              	test al, al
0x2102:    0f 84 54 ff ff ff                  	je 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
0x2108:    0f b7 43 10                        	movzx eax, word ptr [ebx + 0x10]
0x210c:    bf 01 00 00 00                     	mov edi, 1
0x2111:    66 c1 c8 08                        	ror ax, 8
0x2115:    66 c7 06 0a 00                     	mov word ptr [esi], 0xa
0x211a:    66 89 46 02                        	mov word ptr [esi + 2], ax
0x211e:    e9 39 ff ff ff                     	jmp 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
; data inside code section at 0x2123 -- 0x2128
0x2123:    90 8d 74 26 00                                     |..t&.           |
0x2128:    c7 02 10 00 00 00                  	mov dword ptr [edx], 0x10
0x212e:    8d 46 04                           	lea eax, [esi + 4]
0x2131:    c7 06 00 00 00 00                  	mov dword ptr [esi], 0
0x2137:    c7 46 04 00 00 00 00               	mov dword ptr [esi + 4], 0
0x213e:    c7 46 08 00 00 00 00               	mov dword ptr [esi + 8], 0
0x2145:    c7 46 0c 00 00 00 00               	mov dword ptr [esi + 0xc], 0
0x214c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2150:    89 1c 24                           	mov dword ptr [esp], ebx
0x2153:    e8 88 f5 ff ff                     	call 0x16e0 <_ZNK8CNetAddr9GetInAddrEP7in_addr>
0x2158:    84 c0                              	test al, al
0x215a:    0f 84 fc fe ff ff                  	je 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
0x2160:    0f b7 43 10                        	movzx eax, word ptr [ebx + 0x10]
0x2164:    bf 01 00 00 00                     	mov edi, 1
0x2169:    66 c1 c8 08                        	ror ax, 8
0x216d:    66 c7 06 02 00                     	mov word ptr [esi], 2
0x2172:    66 89 46 02                        	mov word ptr [esi + 2], ax
0x2176:    e9 e1 fe ff ff                     	jmp 0x205c <_ZNK8CService11GetSockAddrEP8sockaddrPj+0x4c>
0x217b:    66 c7 02 00 00                     	mov word ptr [edx], 0
0x2180:    83 e9 02                           	sub ecx, 2
0x2183:    83 c2 02                           	add edx, 2
0x2186:    e9 38 ff ff ff                     	jmp 0x20c3 <_ZNK8CService11GetSockAddrEP8sockaddrPj+0xb3>
0x218b:    c6 06 00                           	mov byte ptr [esi], 0
0x218e:    8d 56 01                           	lea edx, [esi + 1]
0x2191:    b1 1b                              	mov cl, 0x1b
0x2193:    e9 22 ff ff ff                     	jmp 0x20ba <_ZNK8CService11GetSockAddrEP8sockaddrPj+0xaa>
; data inside code section at 0x2198 -- 0x2199
0x2198:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2199 -- 0x219a
; data inside code section at 0x219a -- 0x21a0
0x219a:    ff ff ff 90 66 90                                  |....f.          |
; function: _ZNK8CNetAddr10ToStringIPEv at 0x21a0 -- 0x2205
0x21a0:    81 ec fc 04 00 00                  	sub esp, 0x4fc
0x21a6:    89 9c 24 ec 04 00 00               	mov dword ptr [esp + 0x4ec], ebx
0x21ad:    8b 9c 24 04 05 00 00               	mov ebx, dword ptr [esp + 0x504]
0x21b4:    89 b4 24 f0 04 00 00               	mov dword ptr [esp + 0x4f0], esi
0x21bb:    8b b4 24 00 05 00 00               	mov esi, dword ptr [esp + 0x500]
0x21c2:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21c8:    89 84 24 dc 04 00 00               	mov dword ptr [esp + 0x4dc], eax
0x21cf:    31 c0                              	xor eax, eax
0x21d1:    89 bc 24 f4 04 00 00               	mov dword ptr [esp + 0x4f4], edi
0x21d8:    89 1c 24                           	mov dword ptr [esp], ebx
0x21db:    89 ac 24 f8 04 00 00               	mov dword ptr [esp + 0x4f8], ebp
0x21e2:    e8 a9 ef ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x21e7:    84 c0                              	test al, al
0x21e9:    0f 84 89 00 00 00                  	je 0x2278 <function_2278>
0x21ef:    8d 7c 24 3c                        	lea edi, [esp + 0x3c]
0x21f3:    83 c3 06                           	add ebx, 6
0x21f6:    c7 44 24 08 0a 00 00 00            	mov dword ptr [esp + 8], 0xa
0x21fe:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x2202:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x2205 -- 0x2206
0x2205:    e8                                                 |.               |
; dynamically linked function: _Z12EncodeBase32PKhj at 0x2206 -- 0x2207
; data inside code section at 0x2207 -- 0x2215
0x2207:    ff ff ff 83 ec 04 89 7c  24 04 89 34 24 e8         |.......|$..4$.  |
; dynamically linked function: _ZNSsC1ERKSs at 0x2215 -- 0x2216
; data inside code section at 0x2216 -- 0x222d
0x2216:    ff ff ff c7 44 24 08 06  00 00 00 c7 44 24 04 e5   |....D$......D$..|
0x2226:    4e 00 00 89 34 24 e8                               |N...4$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x222d -- 0x222e
; data inside code section at 0x222e -- 0x2231
0x222e:    ff ff ff                                           |...             |
; function: function_2231 at 0x2231 -- 0x2274
0x2231:    89 3c 24                           	mov dword ptr [esp], edi
0x2234:    e8 fc ff ff ff                     	call 0x2235
0x2239:    8b 94 24 dc 04 00 00               	mov edx, dword ptr [esp + 0x4dc]
0x2240:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2247:    89 f0                              	mov eax, esi
0x2249:    0f 85 39 02 00 00                  	jne 0x2488 <function_2488>
0x224f:    8b 9c 24 ec 04 00 00               	mov ebx, dword ptr [esp + 0x4ec]
0x2256:    8b b4 24 f0 04 00 00               	mov esi, dword ptr [esp + 0x4f0]
0x225d:    8b bc 24 f4 04 00 00               	mov edi, dword ptr [esp + 0x4f4]
0x2264:    8b ac 24 f8 04 00 00               	mov ebp, dword ptr [esp + 0x4f8]
0x226b:    81 c4 fc 04 00 00                  	add esp, 0x4fc
0x2271:    c2 04 00                           	ret 4
; data inside code section at 0x2274 -- 0x2278
0x2274:    8d 74 26 00                                        |.t&.            |
; function: function_2278 at 0x2278 -- 0x2382
0x2278:    8b 03                              	mov eax, dword ptr [ebx]
0x227a:    8d 6c 24 48                        	lea ebp, [esp + 0x48]
0x227e:    66 c7 84 24 d8 00 00 00 00 00      	mov word ptr [esp + 0xd8], 0
0x2288:    c7 44 24 40 80 00 00 00            	mov dword ptr [esp + 0x40], 0x80
0x2290:    89 84 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], eax
0x2297:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x229a:    89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x22a1:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x22a4:    89 84 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], eax
0x22ab:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x22ae:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x22b2:    89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x22b9:    8d 44 24 40                        	lea eax, [esp + 0x40]
0x22bd:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x22c1:    8d 84 24 c8 00 00 00               	lea eax, [esp + 0xc8]
0x22c8:    89 04 24                           	mov dword ptr [esp], eax
0x22cb:    e8 40 fd ff ff                     	call 0x2010 <_ZNK8CService11GetSockAddrEP8sockaddrPj>
0x22d0:    84 c0                              	test al, al
0x22d2:    0f 85 b8 00 00 00                  	jne 0x2390 <function_2390>
0x22d8:    89 1c 24                           	mov dword ptr [esp], ebx
0x22db:    e8 20 eb ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x22e0:    84 c0                              	test al, al
0x22e2:    0f 85 50 01 00 00                  	jne 0x2438 <function_2438>
0x22e8:    0f b6 43 0e                        	movzx eax, byte ptr [ebx + 0xe]
0x22ec:    0f b6 53 0f                        	movzx edx, byte ptr [ebx + 0xf]
0x22f0:    c1 e0 08                           	shl eax, 8
0x22f3:    09 d0                              	or eax, edx
0x22f5:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x22f9:    0f b6 43 0c                        	movzx eax, byte ptr [ebx + 0xc]
0x22fd:    0f b6 53 0d                        	movzx edx, byte ptr [ebx + 0xd]
0x2301:    c1 e0 08                           	shl eax, 8
0x2304:    09 d0                              	or eax, edx
0x2306:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x230a:    0f b6 43 0a                        	movzx eax, byte ptr [ebx + 0xa]
0x230e:    0f b6 53 0b                        	movzx edx, byte ptr [ebx + 0xb]
0x2312:    c1 e0 08                           	shl eax, 8
0x2315:    09 d0                              	or eax, edx
0x2317:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x231b:    0f b6 43 08                        	movzx eax, byte ptr [ebx + 8]
0x231f:    0f b6 53 09                        	movzx edx, byte ptr [ebx + 9]
0x2323:    c1 e0 08                           	shl eax, 8
0x2326:    09 d0                              	or eax, edx
0x2328:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x232c:    0f b6 43 06                        	movzx eax, byte ptr [ebx + 6]
0x2330:    0f b6 53 07                        	movzx edx, byte ptr [ebx + 7]
0x2334:    c1 e0 08                           	shl eax, 8
0x2337:    09 d0                              	or eax, edx
0x2339:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x233d:    0f b6 43 04                        	movzx eax, byte ptr [ebx + 4]
0x2341:    0f b6 53 05                        	movzx edx, byte ptr [ebx + 5]
0x2345:    c1 e0 08                           	shl eax, 8
0x2348:    09 d0                              	or eax, edx
0x234a:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x234e:    0f b6 43 02                        	movzx eax, byte ptr [ebx + 2]
0x2352:    0f b6 53 03                        	movzx edx, byte ptr [ebx + 3]
0x2356:    c1 e0 08                           	shl eax, 8
0x2359:    09 d0                              	or eax, edx
0x235b:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x235f:    0f b6 03                           	movzx eax, byte ptr [ebx]
0x2362:    0f b6 53 01                        	movzx edx, byte ptr [ebx + 1]
0x2366:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x236e:    c7 44 24 04 30 4f 00 00            	mov dword ptr [esp + 4], 0x4f30 ; "%x:%x:%x:%x:%x:%x:%x:%x"
0x2376:    c1 e0 08                           	shl eax, 8
0x2379:    09 d0                              	or eax, edx
0x237b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x237f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2382 -- 0x2383
0x2382:    e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x2383 -- 0x2384
; data inside code section at 0x2384 -- 0x2387
0x2384:    ff ff ff                                           |...             |
; function: function_2387 at 0x2387 -- 0x238f
0x2387:    83 ec 04                           	sub esp, 4
0x238a:    e9 aa fe ff ff                     	jmp 0x2239
; data inside code section at 0x238f -- 0x2390
0x238f:    90                                                 |.               |
; function: function_2390 at 0x2390 -- 0x240f
0x2390:    8d bc 24 e0 00 00 00               	lea edi, [esp + 0xe0]
0x2397:    ba fc 03 00 00                     	mov edx, 0x3fc
0x239c:    f7 c7 02 00 00 00                  	test edi, 2
0x23a2:    c7 84 24 db 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xdb], 0
0x23ad:    c6 84 24 df 00 00 00 00            	mov byte ptr [esp + 0xdf], 0
0x23b5:    0f 85 bd 00 00 00                  	jne 0x2478 <function_2478>
0x23bb:    89 d1                              	mov ecx, edx
0x23bd:    31 c0                              	xor eax, eax
0x23bf:    c1 e9 02                           	shr ecx, 2
0x23c2:    f6 c2 02                           	test dl, 2
0x23c5:    f3 ab                              	rep stosd dword ptr es:[edi], eax
0x23c7:    74 08                              	je 0x23d1 <function_2390+0x41>
0x23c9:    66 c7 07 00 00                     	mov word ptr [edi], 0
0x23ce:    83 c7 02                           	add edi, 2
0x23d1:    83 e2 01                           	and edx, 1
0x23d4:    74 03                              	je 0x23d9 <function_2390+0x49>
0x23d6:    c6 07 00                           	mov byte ptr [edi], 0
0x23d9:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x23dd:    8d bc 24 db 00 00 00               	lea edi, [esp + 0xdb]
0x23e4:    c7 44 24 18 01 00 00 00            	mov dword ptr [esp + 0x18], 1
0x23ec:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x23f4:    c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0x23fc:    c7 44 24 0c 01 04 00 00            	mov dword ptr [esp + 0xc], 0x401
0x2404:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x2408:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x240c:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x240f -- 0x2410
0x240f:    e8                                                 |.               |
; dynamically linked function: getnameinfo at 0x2410 -- 0x2411
; data inside code section at 0x2411 -- 0x242c
0x2411:    ff ff ff 85 c0 0f 85 bc  fe ff ff 8d 44 24 47 89   |............D$G.|
0x2421:    44 24 08 89 7c 24 04 89  34 24 e8                  |D$..|$..4$.     |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x242c -- 0x242d
; data inside code section at 0x242d -- 0x2430
0x242d:    ff ff ff                                           |...             |
; function: function_2430 at 0x2430 -- 0x2435
0x2430:    e9 04 fe ff ff                     	jmp 0x2239
; data inside code section at 0x2435 -- 0x2438
0x2435:    8d 76 00                                           |.v.             |
; function: function_2438 at 0x2438 -- 0x246b
0x2438:    0f b6 43 0f                        	movzx eax, byte ptr [ebx + 0xf]
0x243c:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x2440:    0f b6 43 0e                        	movzx eax, byte ptr [ebx + 0xe]
0x2444:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x2448:    0f b6 43 0d                        	movzx eax, byte ptr [ebx + 0xd]
0x244c:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x2450:    0f b6 43 0c                        	movzx eax, byte ptr [ebx + 0xc]
0x2454:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x245c:    c7 44 24 04 24 4f 00 00            	mov dword ptr [esp + 4], 0x4f24 ; "%u.%u.%u.%u"
0x2464:    89 34 24                           	mov dword ptr [esp], esi
0x2467:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
; data inside code section at 0x246b -- 0x246c
0x246b:    e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x246c -- 0x246d
; data inside code section at 0x246d -- 0x2470
0x246d:    ff ff ff                                           |...             |
; function: function_2470 at 0x2470 -- 0x2478
0x2470:    83 ec 04                           	sub esp, 4
0x2473:    e9 c1 fd ff ff                     	jmp 0x2239
; function: function_2478 at 0x2478 -- 0x2488
0x2478:    66 c7 07 00 00                     	mov word ptr [edi], 0
0x247d:    83 ea 02                           	sub edx, 2
0x2480:    83 c7 02                           	add edi, 2
0x2483:    e9 33 ff ff ff                     	jmp 0x23bb
; function: function_2488 at 0x2488 -- 0x2489
; dynamically linked function: __stack_chk_fail at 0x2489 -- 0x248a
; data inside code section at 0x248a -- 0x248e
0x248a:    ff ff ff 89                                        |....            |
; function: function_248e at 0x248e -- 0x248f
0x248e:    c3                                 	ret 
; data inside code section at 0x248f -- 0x2493
0x248f:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x2493 -- 0x2494
; data inside code section at 0x2494 -- 0x2497
0x2494:    ff ff ff                                           |...             |
; function: function_2497 at 0x2497 -- 0x2498
; data inside code section at 0x2498 -- 0x249b
0x2498:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x249b -- 0x249c
; data inside code section at 0x249c -- 0x24a3
0x249c:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x24a3 -- 0x24a4
; data inside code section at 0x24a4 -- 0x24a7
0x24a4:    ff ff ff                                           |...             |
; function: function_24a7 at 0x24a7 -- 0x24ab
0x24a7:    89 c3                              	mov ebx, eax
0x24a9:    eb ec                              	jmp 0x2497 <function_2497>
; data inside code section at 0x24ab -- 0x24b0
0x24ab:    90 8d 74 26 00                                     |..t&.           |
; function: _ZNK8CNetAddr8ToStringEv at 0x24b0 -- 0x24ed
0x24b0:    53                                 	push ebx
0x24b1:    83 ec 28                           	sub esp, 0x28
0x24b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x24b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x24be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x24c2:    31 c0                              	xor eax, eax
0x24c4:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x24c8:    89 1c 24                           	mov dword ptr [esp], ebx
0x24cb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x24cf:    e8 cc fc ff ff                     	call 0x21a0 <_ZNK8CNetAddr10ToStringIPEv>
0x24d4:    89 d8                              	mov eax, ebx
0x24d6:    83 ec 04                           	sub esp, 4
0x24d9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x24dd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x24e4:    75 07                              	jne 0x24ed <_ZNK8CNetAddr8ToStringEv+0x3a>
0x24e6:    83 c4 28                           	add esp, 0x28
0x24e9:    5b                                 	pop ebx
0x24ea:    c2 04 00                           	ret 4
; data inside code section at 0x24ed -- 0x24ee
0x24ed:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x24ee -- 0x24ef
; data inside code section at 0x24ef -- 0x2500
0x24ef:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x24ff:    00                                                 |.               |
; function: _ZNK8CNetAddr5printEv at 0x2500 -- 0x255c
0x2500:    53                                 	push ebx
0x2501:    83 ec 38                           	sub esp, 0x38
0x2504:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x250a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x250e:    31 c0                              	xor eax, eax
0x2510:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2514:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x2518:    89 1c 24                           	mov dword ptr [esp], ebx
0x251b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x251f:    e8 7c fc ff ff                     	call 0x21a0 <_ZNK8CNetAddr10ToStringIPEv>
0x2524:    83 ec 04                           	sub esp, 4
0x2527:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x252b:    c7 04 24 48 4f 00 00               	mov dword ptr [esp], 0x4f48 ; "CNetAddr(%s)\n"
0x2532:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2536:    e8 fc ff ff ff                     	call 0x2537
0x253b:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x253f:    8d 50 f4                           	lea edx, [eax - 0xc]
0x2542:    81 fa 00 00 00 00                  	cmp edx, 0
0x2548:    75 12                              	jne 0x255c <_ZNK8CNetAddr5printEv+0x5b>
0x254a:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x254e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2555:    75 2c                              	jne 0x2583 <function_2583>
0x2557:    83 c4 38                           	add esp, 0x38
0x255a:    5b                                 	pop ebx
0x255b:    c3                                 	ret 
; data inside code section at 0x255c -- 0x255d
0x255c:    b9                                                 |.               |
; dynamically linked function: pthread_cancel at 0x255d -- 0x257c
; data inside code section at 0x257c -- 0x257d
0x257c:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x257d -- 0x257e
; data inside code section at 0x257e -- 0x2581
0x257e:    ff ff ff                                           |...             |
; function: function_2581 at 0x2581 -- 0x2583
0x2581:    eb c7                              	jmp 0x254a
; function: function_2583 at 0x2583 -- 0x258f
0x2583:    e8 fc ff ff ff                     	call 0x2584
0x2588:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x258c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x258f -- 0x2590
0x258f:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x2590 -- 0x2591
; data inside code section at 0x2591 -- 0x259c
0x2591:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x259c -- 0x259d
; data inside code section at 0x259d -- 0x25a0
0x259d:    ff ff ff                                           |...             |
; function: function_25a0 at 0x25a0 -- 0x25ab
0x25a0:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x25a3:    8d 59 ff                           	lea ebx, [ecx - 1]
0x25a6:    89 58 fc                           	mov dword ptr [eax - 4], ebx
0x25a9:    eb c2                              	jmp 0x256d
; data inside code section at 0x25ab -- 0x25b0
0x25ab:    90 8d 74 26 00                                     |..t&.           |
; function: _ZNK8CService12ToStringPortEv at 0x25b0 -- 0x2610
0x25b0:    53                                 	push ebx
0x25b1:    83 ec 28                           	sub esp, 0x28
0x25b4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x25ba:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x25be:    31 c0                              	xor eax, eax
0x25c0:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x25c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x25c8:    0f b7 40 10                        	movzx eax, word ptr [eax + 0x10]
0x25cc:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x25d4:    c7 44 24 04 56 4f 00 00            	mov dword ptr [esp + 4], 0x4f56 ; "%u"
0x25dc:    89 1c 24                           	mov dword ptr [esp], ebx
0x25df:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x25e3:    e8 fc ff ff ff                     	call 0x25e4
0x25e8:    89 d8                              	mov eax, ebx
0x25ea:    83 ec 04                           	sub esp, 4
0x25ed:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x25f1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x25f8:    75 07                              	jne 0x2601 <_ZNK8CService12ToStringPortEv+0x51>
0x25fa:    83 c4 28                           	add esp, 0x28
0x25fd:    5b                                 	pop ebx
0x25fe:    c2 04 00                           	ret 4
0x2601:    e8 fc ff ff ff                     	call 0x2602
0x2606:    8d 76 00                           	lea esi, [esi]
0x2609:    8d bc 27 00 00 00 00               	lea edi, [edi]
; function: _ZN8CService7SetPortEt at 0x2610 -- 0x263c
0x2610:    83 ec 1c                           	sub esp, 0x1c
0x2613:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2619:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x261d:    31 c0                              	xor eax, eax
0x261f:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2623:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2627:    66 89 50 10                        	mov word ptr [eax + 0x10], dx
0x262b:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x262f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2636:    75 04                              	jne 0x263c <_ZN8CService7SetPortEt+0x2b>
0x2638:    83 c4 1c                           	add esp, 0x1c
0x263b:    c3                                 	ret 
; data inside code section at 0x263c -- 0x263d
0x263c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x263d -- 0x263e
; data inside code section at 0x263e -- 0x2650
0x263e:    ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x264e:    00 00                                              |..              |
; function: _ZNK8CService14ToStringIPPortEv at 0x2650 -- 0x26b8
0x2650:    83 ec 4c                           	sub esp, 0x4c
0x2653:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x2657:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x265b:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x265f:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x2663:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2669:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x266d:    31 c0                              	xor eax, eax
0x266f:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x2673:    89 34 24                           	mov dword ptr [esp], esi
0x2676:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x267a:    e8 81 e7 ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x267f:    84 c0                              	test al, al
0x2681:    0f 84 a9 00 00 00                  	je 0x2730 <function_2730>
0x2687:    8d 7c 24 18                        	lea edi, [esp + 0x18]
0x268b:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x268f:    89 3c 24                           	mov dword ptr [esp], edi
0x2692:    e8 19 ff ff ff                     	call 0x25b0 <_ZNK8CService12ToStringPortEv>
0x2697:    83 ec 04                           	sub esp, 4
0x269a:    8d 6c 24 10                        	lea ebp, [esp + 0x10]
0x269e:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x26a2:    89 2c 24                           	mov dword ptr [esp], ebp
0x26a5:    e8 f6 fa ff ff                     	call 0x21a0 <_ZNK8CNetAddr10ToStringIPEv>
0x26aa:    83 ec 04                           	sub esp, 4
0x26ad:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x26b1:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x26b5:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x26b8 -- 0x26b9
0x26b8:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x26b9 -- 0x26ba
; data inside code section at 0x26ba -- 0x26ec
0x26ba:    ff ff ff c7 44 24 08 01  00 00 00 c7 44 24 04 59   |....D$......D$.Y|
0x26ca:    4f 00 00 89 34 24 e8 fc  ff ff ff 89 7c 24 08 89   |O...4$......|$..|
0x26da:    74 24 04 89 1c 24 e8 7b  4f 00 00 83 ec 04 89 34   |t$...$.{O......4|
0x26ea:    24 e8                                              |$.              |
; dynamically linked function: _ZNSsD1Ev at 0x26ec -- 0x26ed
; data inside code section at 0x26ed -- 0x26f0
0x26ed:    ff ff ff                                           |...             |
; function: function_26f0 at 0x26f0 -- 0x2729
0x26f0:    89 2c 24                           	mov dword ptr [esp], ebp
0x26f3:    e8 fc ff ff ff                     	call 0x26f4
0x26f8:    89 3c 24                           	mov dword ptr [esp], edi
0x26fb:    e8 fc ff ff ff                     	call 0x26fc
0x2700:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2704:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x270b:    89 d8                              	mov eax, ebx
0x270d:    0f 85 01 01 00 00                  	jne 0x2814 <function_2814>
0x2713:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x2717:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x271b:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x271f:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x2723:    83 c4 4c                           	add esp, 0x4c
0x2726:    c2 04 00                           	ret 4
; data inside code section at 0x2729 -- 0x2730
0x2729:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_2730 at 0x2730 -- 0x279b
0x2730:    89 34 24                           	mov dword ptr [esp], esi
0x2733:    e8 58 ea ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x2738:    84 c0                              	test al, al
0x273a:    0f 85 47 ff ff ff                  	jne 0x2687
0x2740:    8d 6c 24 28                        	lea ebp, [esp + 0x28]
0x2744:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x2748:    89 2c 24                           	mov dword ptr [esp], ebp
0x274b:    e8 60 fe ff ff                     	call 0x25b0 <_ZNK8CService12ToStringPortEv>
0x2750:    83 ec 04                           	sub esp, 4
0x2753:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x2757:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x275b:    89 04 24                           	mov dword ptr [esp], eax
0x275e:    e8 3d fa ff ff                     	call 0x21a0 <_ZNK8CNetAddr10ToStringIPEv>
0x2763:    83 ec 04                           	sub esp, 4
0x2766:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x276a:    8d 7c 24 20                        	lea edi, [esp + 0x20]
0x276e:    c7 44 24 20 0c 00 00 00            	mov dword ptr [esp + 0x20], 0xc
0x2776:    8b 40 f4                           	mov eax, dword ptr [eax - 0xc]
0x2779:    89 3c 24                           	mov dword ptr [esp], edi
0x277c:    83 c0 01                           	add eax, 1
0x277f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2783:    e8 fc ff ff ff                     	call 0x2784
0x2788:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x2790:    c7 44 24 04 5b 4f 00 00            	mov dword ptr [esp + 4], 0x4f5b
0x2798:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x279b -- 0x279c
0x279b:    e8                                                 |.               |
; dynamically linked function: _ZNSs6appendEPKcj at 0x279c -- 0x279d
; data inside code section at 0x279d -- 0x27ac
0x279d:    ff ff ff 8d 54 24 1c 89  54 24 04 89 3c 24 e8      |....T$..T$..<$. |
; dynamically linked function: _ZNSs6appendERKSs at 0x27ac -- 0x27ad
; data inside code section at 0x27ad -- 0x27bc
0x27ad:    ff ff ff 8d 74 24 24 89  7c 24 04 89 34 24 e8      |....t$$.|$..4$. |
; dynamically linked function: _ZNSsC1ERKSs at 0x27bc -- 0x27bd
; data inside code section at 0x27bd -- 0x27ef
0x27bd:    ff ff ff c7 44 24 08 02  00 00 00 c7 44 24 04 5d   |....D$......D$.]|
0x27cd:    4f 00 00 89 34 24 e8 fc  ff ff ff 89 6c 24 08 89   |O...4$......l$..|
0x27dd:    74 24 04 89 1c 24 e8 78  4e 00 00 83 ec 04 89 34   |t$...$.xN......4|
0x27ed:    24 e8                                              |$.              |
; dynamically linked function: _ZNSsD1Ev at 0x27ef -- 0x27f0
; data inside code section at 0x27f0 -- 0x280b
0x27f0:    ff ff ff 89 3c 24 e8 fc  ff ff ff 8d 44 24 1c 89   |....<$......D$..|
0x2800:    04 24 e8 fc ff ff ff 89  2c 24 e8                  |.$......,$.     |
; dynamically linked function: _ZNSsD1Ev at 0x280b -- 0x280c
; data inside code section at 0x280c -- 0x280f
0x280c:    ff ff ff                                           |...             |
; function: function_280f at 0x280f -- 0x2814
0x280f:    e9 ec fe ff ff                     	jmp 0x2700
; function: function_2814 at 0x2814 -- 0x2815
; dynamically linked function: __stack_chk_fail at 0x2815 -- 0x2816
; data inside code section at 0x2816 -- 0x2819
0x2816:    ff ff ff                                           |...             |
; function: function_2819 at 0x2819 -- 0x281a
; function: function_281a at 0x281a -- 0x281b
0x281a:    c3                                 	ret 
; data inside code section at 0x281b -- 0x281f
0x281b:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x281f -- 0x2820
; data inside code section at 0x2820 -- 0x2823
0x2820:    ff ff ff                                           |...             |
; function: function_2823 at 0x2823 -- 0x2824
; data inside code section at 0x2824 -- 0x2827
0x2824:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x2827 -- 0x2828
; data inside code section at 0x2828 -- 0x282b
0x2828:    ff ff ff                                           |...             |
; function: function_282b at 0x282b -- 0x282c
; data inside code section at 0x282c -- 0x282f
0x282c:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x282f -- 0x2830
; data inside code section at 0x2830 -- 0x2833
0x2830:    ff ff ff                                           |...             |
; function: function_2833 at 0x2833 -- 0x283d
0x2833:    89 1c 24                           	mov dword ptr [esp], ebx
0x2836:    e8 fc ff ff ff                     	call 0x2837
0x283b:    eb dc                              	jmp 0x2819 <function_2819>
; function: function_283d at 0x283d -- 0x2842
0x283d:    89 c3                              	mov ebx, eax
0x283f:    90                                 	nop 
0x2840:    eb e1                              	jmp 0x2823 <function_2823>
; function: function_2842 at 0x2842 -- 0x2846
0x2842:    89 c3                              	mov ebx, eax
0x2844:    eb e5                              	jmp 0x282b <function_282b>
; data inside code section at 0x2846 -- 0x2847
0x2846:    89                                                 |.               |
; function: function_2847 at 0x2847 -- 0x2848
0x2847:    c3                                 	ret 
; function: function_2848 at 0x2848 -- 0x2849
; data inside code section at 0x2849 -- 0x284c
0x2849:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x284c -- 0x284d
; data inside code section at 0x284d -- 0x2859
0x284d:    ff ff ff 89 1c 24 e8 fc  ff ff ff 89               |.....$......    |
; function: function_2859 at 0x2859 -- 0x285a
0x2859:    c3                                 	ret 
; data inside code section at 0x285a -- 0x285e
0x285a:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x285e -- 0x285f
; data inside code section at 0x285f -- 0x2862
0x285f:    ff ff ff                                           |...             |
; function: function_2862 at 0x2862 -- 0x2863
; data inside code section at 0x2863 -- 0x286a
0x2863:    54 24 1c 89 14 24 e8                               |T$...$.         |
; dynamically linked function: _ZNSsD1Ev at 0x286a -- 0x286b
; data inside code section at 0x286b -- 0x286e
0x286b:    ff ff ff                                           |...             |
; function: function_286e at 0x286e -- 0x2870
0x286e:    eb d8                              	jmp 0x2848 <function_2848>
; data inside code section at 0x2870 -- 0x2871
0x2870:    89                                                 |.               |
; function: function_2871 at 0x2871 -- 0x2872
0x2871:    c3                                 	ret 
; function: function_2872 at 0x2872 -- 0x2873
; data inside code section at 0x2873 -- 0x2876
0x2873:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x2876 -- 0x2877
; data inside code section at 0x2877 -- 0x287a
0x2877:    ff ff ff                                           |...             |
; function: function_287a at 0x287a -- 0x287c
0x287a:    eb e6                              	jmp 0x2862 <function_2862>
; function: function_287c at 0x287c -- 0x2888
0x287c:    89 c3                              	mov ebx, eax
0x287e:    89 34 24                           	mov dword ptr [esp], esi
0x2881:    e8 fc ff ff ff                     	call 0x2882
0x2886:    eb ea                              	jmp 0x2872 <function_2872>
; function: function_2888 at 0x2888 -- 0x288a
0x2888:    eb f2                              	jmp 0x287c <function_287c>
; data inside code section at 0x288a -- 0x2890
0x288a:    8d b6 00 00 00 00                                  |......          |
; function: _ZNK8CService8ToStringEv at 0x2890 -- 0x28cd
0x2890:    53                                 	push ebx
0x2891:    83 ec 28                           	sub esp, 0x28
0x2894:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x2898:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x289e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x28a2:    31 c0                              	xor eax, eax
0x28a4:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x28a8:    89 1c 24                           	mov dword ptr [esp], ebx
0x28ab:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x28af:    e8 9c fd ff ff                     	call 0x2650 <_ZNK8CService14ToStringIPPortEv>
0x28b4:    89 d8                              	mov eax, ebx
0x28b6:    83 ec 04                           	sub esp, 4
0x28b9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x28bd:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x28c4:    75 07                              	jne 0x28cd <_ZNK8CService8ToStringEv+0x3a>
0x28c6:    83 c4 28                           	add esp, 0x28
0x28c9:    5b                                 	pop ebx
0x28ca:    c2 04 00                           	ret 4
; data inside code section at 0x28cd -- 0x28ce
0x28cd:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x28ce -- 0x28cf
; data inside code section at 0x28cf -- 0x28e0
0x28cf:    ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x28df:    00                                                 |.               |
; function: _ZNK8CService5printEv at 0x28e0 -- 0x2916
0x28e0:    53                                 	push ebx
0x28e1:    83 ec 38                           	sub esp, 0x38
0x28e4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x28ea:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x28ee:    31 c0                              	xor eax, eax
0x28f0:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x28f4:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x28f8:    89 1c 24                           	mov dword ptr [esp], ebx
0x28fb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x28ff:    e8 4c fd ff ff                     	call 0x2650 <_ZNK8CService14ToStringIPPortEv>
0x2904:    83 ec 04                           	sub esp, 4
0x2907:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x290b:    c7 04 24 60 4f 00 00               	mov dword ptr [esp], 0x4f60 ; "CService(%s)\n"
0x2912:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x2916 -- 0x2917
0x2916:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2917 -- 0x2918
; data inside code section at 0x2918 -- 0x292a
0x2918:    ff ff ff 8b 44 24 24 8d  50 f4 81 fa 00 00 00 00   |....D$$.P.......|
0x2928:    75 12                                              |u.              |
; function: function_292a at 0x292a -- 0x293c
0x292a:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x292e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2935:    75 2c                              	jne 0x2963 <function_2963>
0x2937:    83 c4 38                           	add esp, 0x38
0x293a:    5b                                 	pop ebx
0x293b:    c3                                 	ret 
; data inside code section at 0x293c -- 0x293d
0x293c:    b9                                                 |.               |
; dynamically linked function: pthread_cancel at 0x293d -- 0x295c
; data inside code section at 0x295c -- 0x295d
0x295c:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x295d -- 0x295e
; data inside code section at 0x295e -- 0x2961
0x295e:    ff ff ff                                           |...             |
; function: function_2961 at 0x2961 -- 0x2963
0x2961:    eb c7                              	jmp 0x292a <function_292a>
; function: function_2963 at 0x2963 -- 0x2980
0x2963:    e8 fc ff ff ff                     	call 0x2964
0x2968:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x296c:    89 1c 24                           	mov dword ptr [esp], ebx
0x296f:    e8 fc ff ff ff                     	call 0x2970
0x2974:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2978:    89 04 24                           	mov dword ptr [esp], eax
0x297b:    e8 fc ff ff ff                     	call 0x297c
; function: function_2980 at 0x2980 -- 0x298b
0x2980:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x2983:    8d 59 ff                           	lea ebx, [ecx - 1]
0x2986:    89 58 fc                           	mov dword ptr [eax - 4], ebx
0x2989:    eb c2                              	jmp 0x294d
; data inside code section at 0x298b -- 0x2990
0x298b:    90 8d 74 26 00                                     |..t&.           |
; function: ConnectSocketDirectly at 0x2990 -- 0x2a78
0x2990:    81 ec 6c 01 00 00                  	sub esp, 0x16c
0x2996:    89 9c 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], ebx
0x299d:    89 c3                              	mov ebx, eax
0x299f:    89 b4 24 60 01 00 00               	mov dword ptr [esp + 0x160], esi
0x29a6:    89 d6                              	mov esi, edx
0x29a8:    89 bc 24 64 01 00 00               	mov dword ptr [esp + 0x164], edi
0x29af:    89 cf                              	mov edi, ecx
0x29b1:    89 ac 24 68 01 00 00               	mov dword ptr [esp + 0x168], ebp
0x29b8:    8d 6c 24 4c                        	lea ebp, [esp + 0x4c]
0x29bc:    c7 02 ff ff ff ff                  	mov dword ptr [edx], 0xffffffff
0x29c2:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x29c8:    89 84 24 4c 01 00 00               	mov dword ptr [esp + 0x14c], eax
0x29cf:    31 c0                              	xor eax, eax
0x29d1:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x29d5:    c7 44 24 3c 80 00 00 00            	mov dword ptr [esp + 0x3c], 0x80
0x29dd:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x29e1:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x29e5:    89 1c 24                           	mov dword ptr [esp], ebx
0x29e8:    e8 23 f6 ff ff                     	call 0x2010 <_ZNK8CService11GetSockAddrEP8sockaddrPj>
0x29ed:    84 c0                              	test al, al
0x29ef:    75 6f                              	jne 0x2a60 <ConnectSocketDirectly+0xd0>
0x29f1:    8d 7c 24 40                        	lea edi, [esp + 0x40]
0x29f5:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x29f9:    89 3c 24                           	mov dword ptr [esp], edi
0x29fc:    e8 4f fc ff ff                     	call 0x2650 <_ZNK8CService14ToStringIPPortEv>
0x2a01:    83 ec 04                           	sub esp, 4
0x2a04:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2a08:    c7 04 24 30 5a 00 00               	mov dword ptr [esp], 0x5a30 ; "Cannot connect to %s: unsupported network\n"
0x2a0f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2a13:    e8 fc ff ff ff                     	call 0x2a14
0x2a18:    89 3c 24                           	mov dword ptr [esp], edi
0x2a1b:    e8 fc ff ff ff                     	call 0x2a1c
0x2a20:    31 d2                              	xor edx, edx
0x2a22:    89 d0                              	mov eax, edx
0x2a24:    8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x2a2b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2a32:    0f 85 ae 02 00 00                  	jne 0x2ce6 <function_2ce6>
0x2a38:    8b 9c 24 5c 01 00 00               	mov ebx, dword ptr [esp + 0x15c]
0x2a3f:    8b b4 24 60 01 00 00               	mov esi, dword ptr [esp + 0x160]
0x2a46:    8b bc 24 64 01 00 00               	mov edi, dword ptr [esp + 0x164]
0x2a4d:    8b ac 24 68 01 00 00               	mov ebp, dword ptr [esp + 0x168]
0x2a54:    81 c4 6c 01 00 00                  	add esp, 0x16c
0x2a5a:    c3                                 	ret 
; data inside code section at 0x2a5b -- 0x2a60
0x2a5b:    90 8d 74 26 00                                     |..t&.           |
0x2a60:    0f b7 44 24 4c                     	movzx eax, word ptr [esp + 0x4c]
0x2a65:    c7 44 24 08 06 00 00 00            	mov dword ptr [esp + 8], 6
0x2a6d:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x2a75:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2a78 -- 0x2a79
0x2a78:    e8                                                 |.               |
; dynamically linked function: socket at 0x2a79 -- 0x2a7a
; data inside code section at 0x2a7a -- 0x2a83
0x2a7a:    ff ff ff 31 d2 83 f8 ff  89                        |...1.....       |
; function: function_2a83 at 0x2a83 -- 0x2a84
0x2a83:    c3                                 	ret 
; data inside code section at 0x2a84 -- 0x2a9e
0x2a84:    74 9c 88 54 24 2c c7 44  24 08 00 00 00 00 c7 44   |t..T$,.D$......D|
0x2a94:    24 04 03 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: fcntl at 0x2a9e -- 0x2a9f
; data inside code section at 0x2a9f -- 0x2ab5
0x2a9f:    ff ff ff c7 44 24 04 04  00 00 00 89 1c 24 80 cc   |....D$.......$..|
0x2aaf:    08 89 44 24 08 e8                                  |..D$..          |
; dynamically linked function: fcntl at 0x2ab5 -- 0x2ab6
; data inside code section at 0x2ab6 -- 0x2adb
0x2ab6:    ff ff ff 0f b6 54 24 2c  83 f8 ff 0f 84 9f 01 00   |.....T$,........|
0x2ac6:    00 8b 44 24 3c 89 6c 24  04 89 1c 24 88 54 24 2c   |..D$<.l$...$.T$,|
0x2ad6:    89 44 24 08 e8                                     |.D$..           |
; dynamically linked function: connect at 0x2adb -- 0x2adc
; data inside code section at 0x2adc -- 0x2b0f
0x2adc:    ff ff ff 83 f8 ff 74 44  c7 44 24 08 00 00 00 00   |......tD.D$.....|
0x2aec:    c7 44 24 04 03 00 00 00  89 1c 24 e8 fc ff ff ff   |.D$.......$.....|
0x2afc:    c7 44 24 04 04 00 00 00  89 1c 24 80 e4 f7 89 44   |.D$.......$....D|
0x2b0c:    24 08 e8                                           |$..             |
; dynamically linked function: fcntl at 0x2b0f -- 0x2b10
; data inside code section at 0x2b10 -- 0x2b12
0x2b10:    ff ff                                              |..              |
; function: function_2b12 at 0x2b12 -- 0x2b28
0x2b12:    ff 83 f8 ff 0f 84                  	inc dword ptr [ebx - 0x7bf00008]
0x2b18:    bb 01 00 00 89                     	mov ebx, 0x89000001
0x2b1d:    1e                                 	push ds
0x2b1e:    ba 01 00 00 00                     	mov edx, 1
0x2b23:    e9 fa fe ff ff                     	jmp 0x2a22
; data inside code section at 0x2b28 -- 0x2b29
0x2b28:    e8                                                 |.               |
; dynamically linked function: __errno_location at 0x2b29 -- 0x2b2a
; data inside code section at 0x2b2a -- 0x2b42
0x2b2a:    ff ff ff 0f b6 54 24 2c  89 c5 8b 00 83 f8 0b 0f   |.....T$,........|
0x2b3a:    85 01 01 00 00 89 f8 ba                            |........        |
; function: function_2b42 at 0x2b42 -- 0x2b4e
0x2b42:    d3 4d 62                           	ror dword ptr [ebp + 0x62], cl
0x2b45:    10 f7                              	adc bh, dh
0x2b47:    ea 89 f8 c1 f8 1f b9               	ljmp 0xb91f:0xf8c1f889 <function_f8c1f889>
; data inside code section at 0x2b4e -- 0x2b56
0x2b4e:    20 00 00 00 c1 fa 06 29                            | ......)        |
; function: function_2b56 at 0x2b56 -- 0x2b59
0x2b56:    c2 31 c0                           	ret 0xc031
; data inside code section at 0x2b59 -- 0x2b7d
0x2b59:    89 54 24 34 69 d2 e8 03  00 00 29 d7 69 ff e8 03   |.T$4i.....).i...|
0x2b69:    00 00 89 7c 24 38 8d bc  24 cc 00 00 00 fc f3 ab   |...|$8..$.......|
0x2b79:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: __fdelt_chk at 0x2b7d -- 0x2b7e
; data inside code section at 0x2b7e -- 0x2bbb
0x2b7e:    ff ff ff 89 d9 ba 01 00  00 00 d3 e2 09 94 84 cc   |................|
0x2b8e:    00 00 00 8d 44 24 34 89  44 24 10 8d 84 24 cc 00   |....D$4.D$...$..|
0x2b9e:    00 00 89 44 24 08 8d 43  01 c7 44 24 0c 00 00 00   |...D$..C..D$....|
0x2bae:    00 c7 44 24 04 00 00 00  00 89 04 24 e8            |..D$.......$.   |
; dynamically linked function: select at 0x2bbb -- 0x2bbc
; data inside code section at 0x2bbc -- 0x2c00
0x2bbc:    ff ff ff 85 c0 89 44 24  44 0f 84 ad 00 00 00 83   |......D$D.......|
0x2bcc:    f8 ff 0f 84 bf 00 00 00  8d 44 24 48 89 44 24 10   |.........D$H.D$.|
0x2bdc:    8d 44 24 44 c7 44 24 48  04 00 00 00 89 44 24 0c   |.D$D.D$H.....D$.|
0x2bec:    c7 44 24 08 04 00 00 00  c7 44 24 04 01 00 00 00   |.D$......D$.....|
0x2bfc:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: getsockopt at 0x2c00 -- 0x2c01
; data inside code section at 0x2c01 -- 0x2c0a
0x2c01:    ff ff ff 83 f8 ff 0f 84  a8                        |.........       |
; function: function_2c0a at 0x2c0a -- 0x2c16
0x2c0a:    00 00                              	add byte ptr [eax], al
0x2c0c:    00 8b 44 24 44 85                  	add byte ptr [ebx - 0x7abbdbbc], cl
0x2c12:    c0 0f 84                           	ror byte ptr [edi], 0x84
0x2c15:    cb                                 	retf 
; data inside code section at 0x2c16 -- 0x2c1d
0x2c16:    fe ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: strerror at 0x2c1d -- 0x2c1e
; data inside code section at 0x2c1e -- 0x2c2d
0x2c1e:    ff ff ff c7 04 24 a8 5a  00 00 89 44 24 04 e8      |.....$.Z...D$.. |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2c2d -- 0x2c2e
; data inside code section at 0x2c2e -- 0x2c31
0x2c2e:    ff ff ff                                           |...             |
; function: function_2c31 at 0x2c31 -- 0x2c40
0x2c31:    89 1c 24                           	mov dword ptr [esp], ebx
0x2c34:    e8 fc ff ff ff                     	call 0x2c35
0x2c39:    31 d2                              	xor edx, edx
0x2c3b:    e9 e2 fd ff ff                     	jmp 0x2a22
; data inside code section at 0x2c40 -- 0x2c6a
0x2c40:    83 f8 73 0f 84 f6 fe ff  ff 83 f8 16 0f 84 ed fe   |..s.............|
0x2c50:    ff ff 89 44 24 04 c7 04  24 82 4f 00 00 88 54 24   |...D$...$.O...T$|
0x2c60:    2c e8 fc ff ff ff 89 1c  24 e8                     |,.......$.      |
; dynamically linked function: close at 0x2c6a -- 0x2c6b
; data inside code section at 0x2c6b -- 0x2c6d
0x2c6b:    ff ff                                              |..              |
; function: function_2c6d at 0x2c6d -- 0x2c78
0x2c6d:    ff 0f                              	dec dword ptr [edi]
0x2c6f:    b6 54                              	mov dh, 0x54
0x2c71:    24 2c                              	and al, 0x2c
0x2c73:    e9 aa fd ff ff                     	jmp 0x2a22
; function: function_2c78 at 0x2c78 -- 0x2c93
0x2c78:    c7 04 24 6e 4f 00 00               	mov dword ptr [esp], 0x4f6e ; "connection timeout\n"
0x2c7f:    e8 fc ff ff ff                     	call 0x2c80
0x2c84:    89 1c 24                           	mov dword ptr [esp], ebx
0x2c87:    e8 fc ff ff ff                     	call 0x2c88
0x2c8c:    31 d2                              	xor edx, edx
0x2c8e:    e9 8f fd ff ff                     	jmp 0x2a22
; data inside code section at 0x2c93 -- 0x2caa
0x2c93:    8b 45 00 c7 04 24 5c 5a  00 00 89 44 24 04 e8 fc   |.E...$\Z...D$...|
0x2ca3:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: close at 0x2caa -- 0x2cab
; data inside code section at 0x2cab -- 0x2cae
0x2cab:    ff ff ff                                           |...             |
; function: function_2cae at 0x2cae -- 0x2cb5
0x2cae:    31 d2                              	xor edx, edx
0x2cb0:    e9 6d fd ff ff                     	jmp 0x2a22
; function: function_2cb5 at 0x2cb5 -- 0x2cd7
0x2cb5:    8b 45 00                           	mov eax, dword ptr [ebp]
0x2cb8:    c7 04 24 80 5a 00 00               	mov dword ptr [esp], 0x5a80 ; "getsockopt() for connection failed: %i\n"
0x2cbf:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2cc3:    e8 fc ff ff ff                     	call 0x2cc4
0x2cc8:    89 1c 24                           	mov dword ptr [esp], ebx
0x2ccb:    e8 fc ff ff ff                     	call 0x2ccc
0x2cd0:    31 d2                              	xor edx, edx
0x2cd2:    e9 4b fd ff ff                     	jmp 0x2a22
; data inside code section at 0x2cd7 -- 0x2cdb
0x2cd7:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: close at 0x2cdb -- 0x2cdc
; data inside code section at 0x2cdc -- 0x2cdf
0x2cdc:    ff ff ff                                           |...             |
; function: function_2cdf at 0x2cdf -- 0x2ce6
0x2cdf:    31 d2                              	xor edx, edx
0x2ce1:    e9 3c fd ff ff                     	jmp 0x2a22
; function: function_2ce6 at 0x2ce6 -- 0x2ce7
; dynamically linked function: __stack_chk_fail at 0x2ce7 -- 0x2ce8
; data inside code section at 0x2ce8 -- 0x2cec
0x2ce8:    ff ff ff 89                                        |....            |
; function: function_2cec at 0x2cec -- 0x2ced
0x2cec:    c3                                 	ret 
; data inside code section at 0x2ced -- 0x2cf1
0x2ced:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x2cf1 -- 0x2cf2
; data inside code section at 0x2cf2 -- 0x2cf9
0x2cf2:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x2cf9 -- 0x2cfa
; data inside code section at 0x2cfa -- 0x2d00
0x2cfa:    ff ff ff 8d 76 00                                  |....v.          |
; function: LookupIntern at 0x2d00 -- 0x2dd7
0x2d00:    55                                 	push ebp
0x2d01:    57                                 	push edi
0x2d02:    56                                 	push esi
0x2d03:    89 ce                              	mov esi, ecx
0x2d05:    53                                 	push ebx
0x2d06:    89 d3                              	mov ebx, edx
0x2d08:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x2d0e:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x2d12:    0f b6 84 24 a0 00 00 00            	movzx eax, byte ptr [esp + 0xa0]
0x2d1a:    8d 6c 24 4c                        	lea ebp, [esp + 0x4c]
0x2d1e:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2d25:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x2d29:    31 d2                              	xor edx, edx
0x2d2b:    8d 7c 24 40                        	lea edi, [esp + 0x40]
0x2d2f:    88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0x2d33:    8b 03                              	mov eax, dword ptr [ebx]
0x2d35:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x2d38:    89 2c 24                           	mov dword ptr [esp], ebp
0x2d3b:    e8 70 dd ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x2d40:    8d 44 24 4b                        	lea eax, [esp + 0x4b]
0x2d44:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2d48:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2d4c:    89 3c 24                           	mov dword ptr [esp], edi
0x2d4f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2d53:    e8 fc ff ff ff                     	call 0x2d54
0x2d58:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x2d5c:    89 2c 24                           	mov dword ptr [esp], ebp
0x2d5f:    e8 ec dd ff ff                     	call 0xb50 <_ZN8CNetAddr10SetSpecialERKSs>
0x2d64:    88 44 24 14                        	mov byte ptr [esp + 0x14], al
0x2d68:    89 3c 24                           	mov dword ptr [esp], edi
0x2d6b:    e8 fc ff ff ff                     	call 0x2d6c
0x2d70:    0f b6 44 24 14                     	movzx eax, byte ptr [esp + 0x14]
0x2d75:    31 d2                              	xor edx, edx
0x2d77:    84 c0                              	test al, al
0x2d79:    0f 85 a1 00 00 00                  	jne 0x2e20 <function_2e20>
0x2d7f:    c7 44 14 20 00 00 00 00            	mov dword ptr [esp + edx + 0x20], 0
0x2d87:    83 c2 04                           	add edx, 4
0x2d8a:    83 fa 20                           	cmp edx, 0x20
0x2d8d:    72 f0                              	jb 0x2d7f <LookupIntern+0x7f>
0x2d8f:    80 7c 24 1f 01                     	cmp byte ptr [esp + 0x1f], 1
0x2d94:    8d 54 24 20                        	lea edx, [esp + 0x20]
0x2d98:    c7 44 24 28 01 00 00 00            	mov dword ptr [esp + 0x28], 1
0x2da0:    19 c0                              	sbb eax, eax
0x2da2:    83 e0 e4                           	and eax, 0xffffffe4
0x2da5:    83 c0 20                           	add eax, 0x20
0x2da8:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2dac:    8d 44 24 44                        	lea eax, [esp + 0x44]
0x2db0:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x2db4:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x2db8:    c7 44 24 2c 06 00 00 00            	mov dword ptr [esp + 0x2c], 6
0x2dc0:    c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x2dc8:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2dcc:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2dd4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2dd7 -- 0x2dd8
0x2dd7:    e8                                                 |.               |
; dynamically linked function: getaddrinfo at 0x2dd8 -- 0x2dd9
; data inside code section at 0x2dd9 -- 0x2df0
0x2dd9:    ff ff ff 85 c0 0f 85 98  00 00 00 8b 7c 24 44 8d   |............|$D.|
0x2de9:    6c 24 6c 85 ff 74 18                               |l$l..t.         |
; function: function_2df0 at 0x2df0 -- 0x2df1
; data inside code section at 0x2df1 -- 0x2e04
0x2df1:    f6 0f 84 88 00 00 00 8b  43 04 2b 03 c1 f8 04 39   |........C.+....9|
0x2e01:    c6 77 7c                                           |.w|             |
; function: function_2e04 at 0x2e04 -- 0x2e05
; data inside code section at 0x2e05 -- 0x2e0c
0x2e05:    44 24 44 89 04 24 e8                               |D$D..$.         |
; dynamically linked function: freeaddrinfo at 0x2e0c -- 0x2e0d
; data inside code section at 0x2e0d -- 0x2e0f
0x2e0d:    ff ff                                              |..              |
; function: function_2e0f at 0x2e0f -- 0x2e1f
0x2e0f:    ff 8b 43 04 2b 03                  	dec dword ptr [ebx + 0x32b0443]
0x2e15:    c1 f8 04                           	sar eax, 4
0x2e18:    85 c0                              	test eax, eax
0x2e1a:    0f 95 c0                           	setne al
0x2e1d:    eb 41                              	jmp 0x2e60
; data inside code section at 0x2e1f -- 0x2e20
0x2e1f:    90                                                 |.               |
; function: function_2e20 at 0x2e20 -- 0x2fc5
0x2e20:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x2e23:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x2e26:    0f 84 60 01 00 00                  	je 0x2f8c <function_2e20+0x16c>
0x2e2c:    85 c0                              	test eax, eax
0x2e2e:    74 1e                              	je 0x2e4e <function_2e20+0x2e>
0x2e30:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x2e34:    89 10                              	mov dword ptr [eax], edx
0x2e36:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x2e3a:    89 50 04                           	mov dword ptr [eax + 4], edx
0x2e3d:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x2e41:    89 50 08                           	mov dword ptr [eax + 8], edx
0x2e44:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x2e48:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x2e4b:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x2e4e:    83 c2 10                           	add edx, 0x10
0x2e51:    b8 01 00 00 00                     	mov eax, 1
0x2e56:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x2e59:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x2e60:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x2e64:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2e6b:    0f 85 7d 01 00 00                  	jne 0x2fee <function_2fee>
0x2e71:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x2e77:    5b                                 	pop ebx
0x2e78:    5e                                 	pop esi
0x2e79:    5f                                 	pop edi
0x2e7a:    5d                                 	pop ebp
0x2e7b:    c3                                 	ret 
0x2e7c:    31 c0                              	xor eax, eax
0x2e7e:    eb e0                              	jmp 0x2e60 <function_2e20+0x40>
0x2e80:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x2e83:    83 f8 02                           	cmp eax, 2
0x2e86:    74 18                              	je 0x2ea0 <function_2e20+0x80>
0x2e88:    83 f8 0a                           	cmp eax, 0xa
0x2e8b:    74 71                              	je 0x2efe <function_2e20+0xde>
0x2e8d:    8b 7f 1c                           	mov edi, dword ptr [edi + 0x1c]
0x2e90:    85 ff                              	test edi, edi
0x2e92:    0f 85 58 ff ff ff                  	jne 0x2df0 <function_2df0>
0x2e98:    e9 67 ff ff ff                     	jmp 0x2e04 <function_2e04>
; data inside code section at 0x2e9d -- 0x2ea0
0x2e9d:    8d 76 00                                           |.v.             |
0x2ea0:    83 7f 10 0f                        	cmp dword ptr [edi + 0x10], 0xf
0x2ea4:    0f 86 20 01 00 00                  	jbe 0x2fca <function_2fca>
0x2eaa:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x2ead:    8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x2eb1:    89 14 24                           	mov dword ptr [esp], edx
0x2eb4:    83 c0 04                           	add eax, 4
0x2eb7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2ebb:    e8 60 de ff ff                     	call 0xd20 <CNetAddr>
0x2ec0:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x2ec3:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x2ec6:    0f 84 a4 00 00 00                  	je 0x2f70 <function_2e20+0x150>
0x2ecc:    31 d2                              	xor edx, edx
0x2ece:    85 c0                              	test eax, eax
0x2ed0:    74 1e                              	je 0x2ef0 <function_2e20+0xd0>
0x2ed2:    8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x2ed6:    89 10                              	mov dword ptr [eax], edx
0x2ed8:    8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x2edc:    89 50 04                           	mov dword ptr [eax + 4], edx
0x2edf:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x2ee3:    89 50 08                           	mov dword ptr [eax + 8], edx
0x2ee6:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x2eea:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x2eed:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x2ef0:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x2ef3:    83 c2 10                           	add edx, 0x10
0x2ef6:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x2ef9:    83 f8 0a                           	cmp eax, 0xa
0x2efc:    75 8f                              	jne 0x2e8d <function_2e20+0x6d>
0x2efe:    83 7f 10 1b                        	cmp dword ptr [edi + 0x10], 0x1b
0x2f02:    0f 86 9e 00 00 00                  	jbe 0x2fa6 <function_2e20+0x186>
0x2f08:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x2f0b:    89 2c 24                           	mov dword ptr [esp], ebp
0x2f0e:    83 c0 08                           	add eax, 8
0x2f11:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2f15:    e8 56 de ff ff                     	call 0xd70 <CNetAddr>
0x2f1a:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x2f1d:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x2f20:    74 36                              	je 0x2f58 <function_2e20+0x138>
0x2f22:    31 d2                              	xor edx, edx
0x2f24:    85 c0                              	test eax, eax
0x2f26:    74 1e                              	je 0x2f46 <function_2e20+0x126>
0x2f28:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x2f2c:    89 10                              	mov dword ptr [eax], edx
0x2f2e:    8b 54 24 70                        	mov edx, dword ptr [esp + 0x70]
0x2f32:    89 50 04                           	mov dword ptr [eax + 4], edx
0x2f35:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x2f39:    89 50 08                           	mov dword ptr [eax + 8], edx
0x2f3c:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x2f40:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x2f43:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x2f46:    83 c2 10                           	add edx, 0x10
0x2f49:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x2f4c:    e9 3c ff ff ff                     	jmp 0x2e8d <function_2e20+0x6d>
; data inside code section at 0x2f51 -- 0x2f58
0x2f51:    8d b4 26 00 00 00 00                               |..&....         |
0x2f58:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x2f5c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2f60:    89 1c 24                           	mov dword ptr [esp], ebx
0x2f63:    e8 68 47 00 00                     	call 0x76d0 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x2f68:    e9 20 ff ff ff                     	jmp 0x2e8d <function_2e20+0x6d>
; data inside code section at 0x2f6d -- 0x2f70
0x2f6d:    8d 76 00                                           |.v.             |
0x2f70:    8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x2f74:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2f78:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2f7c:    89 1c 24                           	mov dword ptr [esp], ebx
0x2f7f:    e8 4c 47 00 00                     	call 0x76d0 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x2f84:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x2f87:    e9 fc fe ff ff                     	jmp 0x2e88 <function_2e20+0x68>
0x2f8c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2f90:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x2f94:    89 1c 24                           	mov dword ptr [esp], ebx
0x2f97:    e8 34 47 00 00                     	call 0x76d0 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x2f9c:    b8 01 00 00 00                     	mov eax, 1
0x2fa1:    e9 ba fe ff ff                     	jmp 0x2e60 <function_2e20+0x40>
0x2fa6:    c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "bool LookupIntern(const char*, std::vector<CNetAddr>&, unsigned int, bool)"
0x2fae:    c7 44 24 08 66 00 00 00            	mov dword ptr [esp + 8], 0x66
0x2fb6:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x2fbe:    c7 04 24 fc 5a 00 00               	mov dword ptr [esp], 0x5afc ; "aiTrav->ai_addrlen >= sizeof(sockaddr_in6)"
; data inside code section at 0x2fc5 -- 0x2fc6
0x2fc5:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2fc6 -- 0x2fc7
; data inside code section at 0x2fc7 -- 0x2fca
0x2fc7:    ff ff ff                                           |...             |
; function: function_2fca at 0x2fca -- 0x2fe9
0x2fca:    c7 44 24 0c 90 69 00 00            	mov dword ptr [esp + 0xc], 0x6990 ; "bool LookupIntern(const char*, std::vector<CNetAddr>&, unsigned int, bool)"
0x2fd2:    c7 44 24 08 5f 00 00 00            	mov dword ptr [esp + 8], 0x5f ; "$\f"
0x2fda:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x2fe2:    c7 04 24 d0 5a 00 00               	mov dword ptr [esp], 0x5ad0 ; "aiTrav->ai_addrlen >= sizeof(sockaddr_in)"
; data inside code section at 0x2fe9 -- 0x2fea
0x2fe9:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2fea -- 0x2feb
; data inside code section at 0x2feb -- 0x2fee
0x2feb:    ff ff ff                                           |...             |
; function: function_2fee at 0x2fee -- 0x2fef
; dynamically linked function: __stack_chk_fail at 0x2fef -- 0x2ff0
; data inside code section at 0x2ff0 -- 0x2ff4
0x2ff0:    ff ff ff 89                                        |....            |
; function: function_2ff4 at 0x2ff4 -- 0x2ff5
0x2ff4:    c3                                 	ret 
; data inside code section at 0x2ff5 -- 0x3001
0x2ff5:    89 3c 24 e8 fc ff ff ff  89 1c 24 e8               |.<$.......$.    |
; dynamically linked function: _Unwind_Resume at 0x3001 -- 0x3002
; data inside code section at 0x3002 -- 0x3010
0x3002:    ff ff ff 8d 74 26 00 8d  bc 27 00 00 00 00         |....t&...'....  |
; function: _Z10LookupHostPKcRSt6vectorI8CNetAddrSaIS2_EEjb at 0x3010 -- 0x30bf
0x3010:    55                                 	push ebp
0x3011:    57                                 	push edi
0x3012:    56                                 	push esi
0x3013:    53                                 	push ebx
0x3014:    83 ec 4c                           	sub esp, 0x4c
0x3017:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x301d:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x3021:    31 c0                              	xor eax, eax
0x3023:    8d 44 24 3b                        	lea eax, [esp + 0x3b]
0x3027:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x302b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x302f:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x3033:    8d 74 24 28                        	lea esi, [esp + 0x28]
0x3037:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x303b:    0f b6 7c 24 6c                     	movzx edi, byte ptr [esp + 0x6c]
0x3040:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x3044:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3048:    89 34 24                           	mov dword ptr [esp], esi
0x304b:    e8 fc ff ff ff                     	call 0x304c
0x3050:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x3054:    8b 40 f4                           	mov eax, dword ptr [eax - 0xc]
0x3057:    85 c0                              	test eax, eax
0x3059:    0f 84 f9 00 00 00                  	je 0x3158 <function_3158>
0x305f:    8d 5c 24 30                        	lea ebx, [esp + 0x30]
0x3063:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3067:    89 1c 24                           	mov dword ptr [esp], ebx
0x306a:    e8 fc ff ff ff                     	call 0x306b
0x306f:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x3073:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x3076:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x307a:    89 1c 24                           	mov dword ptr [esp], ebx
0x307d:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x3081:    e8 fc ff ff ff                     	call 0x3082
0x3086:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x308a:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x308e:    85 d2                              	test edx, edx
0x3090:    0f 84 82 00 00 00                  	je 0x3118 <function_3118>
0x3096:    80 38 5b                           	cmp byte ptr [eax], 0x5b
0x3099:    75 7d                              	jne 0x3118 <function_3118>
0x309b:    8d 5c 24 34                        	lea ebx, [esp + 0x34]
0x309f:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x30a3:    89 1c 24                           	mov dword ptr [esp], ebx
0x30a6:    e8 fc ff ff ff                     	call 0x30a7
0x30ab:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x30af:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x30b2:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x30b6:    89 1c 24                           	mov dword ptr [esp], ebx
0x30b9:    01 c2                              	add edx, eax
0x30bb:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0x30bf -- 0x30c0
0x30bf:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x30c0 -- 0x30c1
; data inside code section at 0x30c1 -- 0x3118
0x30c1:    ff ff ff 8b 44 24 18 8b  54 24 14 39 d0 74 48 80   |....D$..T$.9.tH.|
0x30d1:    7a ff 5d 75 42 8b 44 24  28 8b 40 f4 85 c0 0f 84   |z.]uB.D$(.@.....|
0x30e1:    98 00 00 00 83 e8 02 8d  5c 24 2c 89 44 24 0c c7   |........\$,.D$..|
0x30f1:    44 24 08 01 00 00 00 89  74 24 04 89 1c 24 e8 fc   |D$......t$...$..|
0x3101:    ff ff ff 89 5c 24 04 89  34 24 e8 fc ff ff ff 89   |....\$..4$......|
0x3111:    1c 24 e8 fc ff ff ff                               |.$.....         |
; function: function_3118 at 0x3118 -- 0x3135
0x3118:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x311c:    81 e7 ff 00 00 00                  	and edi, 0xff
0x3122:    89 e9                              	mov ecx, ebp
0x3124:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x3128:    89 3c 24                           	mov dword ptr [esp], edi
0x312b:    e8 d0 fb ff ff                     	call 0x2d00 <LookupIntern>
0x3130:    89 c3                              	mov ebx, eax
0x3132:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x3135 -- 0x3136
0x3135:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3136 -- 0x3137
; data inside code section at 0x3137 -- 0x3139
0x3137:    ff ff                                              |..              |
; function: function_3139 at 0x3139 -- 0x3151
0x3139:    ff 89 d8 8b 54 24                  	dec dword ptr [ecx + 0x24548bd8]
0x313f:    3c 65                              	cmp al, 0x65
0x3141:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x3147:    75 13                              	jne 0x315c <function_315c>
0x3149:    83 c4 4c                           	add esp, 0x4c
0x314c:    5b                                 	pop ebx
0x314d:    5e                                 	pop esi
0x314e:    5f                                 	pop edi
0x314f:    5d                                 	pop ebp
0x3150:    c3                                 	ret 
; data inside code section at 0x3151 -- 0x3158
0x3151:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_3158 at 0x3158 -- 0x315c
0x3158:    31 db                              	xor ebx, ebx
0x315a:    eb d6                              	jmp 0x3132
; function: function_315c at 0x315c -- 0x3168
0x315c:    e8 fc ff ff ff                     	call 0x315d
0x3161:    89 c7                              	mov edi, eax
0x3163:    89 1c 24                           	mov dword ptr [esp], ebx
0x3166:    89 fb                              	mov ebx, edi
; data inside code section at 0x3168 -- 0x3169
0x3168:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x3169 -- 0x316a
; data inside code section at 0x316a -- 0x316d
0x316a:    ff ff ff                                           |...             |
; function: function_316d at 0x316d -- 0x316e
; data inside code section at 0x316e -- 0x3171
0x316e:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x3171 -- 0x3172
; data inside code section at 0x3172 -- 0x3185
0x3172:    ff ff ff 89 1c 24 e8 fc  ff ff ff c7 04 24 d0 4e   |.....$.......$.N|
0x3182:    00 00 e8                                           |...             |
; dynamically linked function: _ZSt20__throw_out_of_rangePKc at 0x3185 -- 0x3186
; data inside code section at 0x3186 -- 0x3189
0x3186:    ff ff ff                                           |...             |
; function: function_3189 at 0x3189 -- 0x318d
0x3189:    89 c3                              	mov ebx, eax
0x318b:    eb e0                              	jmp 0x316d <function_316d>
; data inside code section at 0x318d -- 0x3190
0x318d:    90 66 90                                           |.f.             |
; function: CNetAddr at 0x3190 -- 0x3254
0x3190:    83 ec 2c                           	sub esp, 0x2c
0x3193:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x3197:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x319b:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x319f:    0f b6 7c 24 38                     	movzx edi, byte ptr [esp + 0x38]
0x31a4:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x31a8:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x31ac:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x31b2:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x31b6:    31 c0                              	xor eax, eax
0x31b8:    89 1c 24                           	mov dword ptr [esp], ebx
0x31bb:    e8 f0 d8 ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x31c0:    89 fa                              	mov edx, edi
0x31c2:    0f b6 c2                           	movzx eax, dl
0x31c5:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x31c9:    8d 44 24 10                        	lea eax, [esp + 0x10]
0x31cd:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x31d5:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x31d9:    8b 06                              	mov eax, dword ptr [esi]
0x31db:    c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0x31e3:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x31eb:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x31f3:    89 04 24                           	mov dword ptr [esp], eax
0x31f6:    e8 15 fe ff ff                     	call 0x3010 <_Z10LookupHostPKcRSt6vectorI8CNetAddrSaIS2_EEjb>
0x31fb:    84 c0                              	test al, al
0x31fd:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x3201:    74 16                              	je 0x3219 <CNetAddr+0x89>
0x3203:    8b 10                              	mov edx, dword ptr [eax]
0x3205:    89 13                              	mov dword ptr [ebx], edx
0x3207:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x320a:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x320d:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x3210:    89 53 08                           	mov dword ptr [ebx + 8], edx
0x3213:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x3216:    89 53 0c                           	mov dword ptr [ebx + 0xc], edx
0x3219:    85 c0                              	test eax, eax
0x321b:    74 08                              	je 0x3225 <CNetAddr+0x95>
0x321d:    89 04 24                           	mov dword ptr [esp], eax
0x3220:    e8 fc ff ff ff                     	call 0x3221
0x3225:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3229:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3230:    75 10                              	jne 0x3242 <CNetAddr+0xb2>
0x3232:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x3236:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x323a:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x323e:    83 c4 2c                           	add esp, 0x2c
0x3241:    c3                                 	ret 
0x3242:    e8 fc ff ff ff                     	call 0x3243
0x3247:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x324b:    89 c3                              	mov ebx, eax
0x324d:    85 d2                              	test edx, edx
0x324f:    74 08                              	je 0x3259 <function_3259>
0x3251:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x3254 -- 0x3255
0x3254:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x3255 -- 0x3256
; data inside code section at 0x3256 -- 0x3259
0x3256:    ff ff ff                                           |...             |
; function: function_3259 at 0x3259 -- 0x325c
0x3259:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x325c -- 0x325d
0x325c:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x325d -- 0x325e
; data inside code section at 0x325e -- 0x3270
0x325e:    ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x326e:    00 00                                              |..              |
; function: CNetAddr at 0x3270 -- 0x3320
0x3270:    83 ec 2c                           	sub esp, 0x2c
0x3273:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x3277:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x327b:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x327f:    0f b6 7c 24 38                     	movzx edi, byte ptr [esp + 0x38]
0x3284:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x3288:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x328c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3292:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3296:    31 c0                              	xor eax, eax
0x3298:    89 1c 24                           	mov dword ptr [esp], ebx
0x329b:    e8 10 d8 ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x32a0:    89 fa                              	mov edx, edi
0x32a2:    0f b6 c2                           	movzx eax, dl
0x32a5:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x32a9:    8d 44 24 10                        	lea eax, [esp + 0x10]
0x32ad:    c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0x32b5:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x32bd:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x32c5:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x32cd:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x32d1:    89 34 24                           	mov dword ptr [esp], esi
0x32d4:    e8 37 fd ff ff                     	call 0x3010 <_Z10LookupHostPKcRSt6vectorI8CNetAddrSaIS2_EEjb>
0x32d9:    84 c0                              	test al, al
0x32db:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x32df:    74 16                              	je 0x32f7 <CNetAddr+0x87>
0x32e1:    8b 10                              	mov edx, dword ptr [eax]
0x32e3:    89 13                              	mov dword ptr [ebx], edx
0x32e5:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x32e8:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x32eb:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x32ee:    89 53 08                           	mov dword ptr [ebx + 8], edx
0x32f1:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x32f4:    89 53 0c                           	mov dword ptr [ebx + 0xc], edx
0x32f7:    85 c0                              	test eax, eax
0x32f9:    74 08                              	je 0x3303 <CNetAddr+0x93>
0x32fb:    89 04 24                           	mov dword ptr [esp], eax
0x32fe:    e8 fc ff ff ff                     	call 0x32ff
0x3303:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x3307:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x330e:    75 10                              	jne 0x3320 <CNetAddr+0xaf>
0x3310:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x3314:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x3318:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x331c:    83 c4 2c                           	add esp, 0x2c
0x331f:    c3                                 	ret 
; data inside code section at 0x3320 -- 0x3321
0x3320:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3321 -- 0x3322
; data inside code section at 0x3322 -- 0x3324
0x3322:    ff ff                                              |..              |
; function: function_3324 at 0x3324 -- 0x332b
0x3324:    ff 8b 54 24 10 89                  	dec dword ptr [ebx - 0x76efdbac]
0x332a:    c3                                 	ret 
; data inside code section at 0x332b -- 0x3340
0x332b:    85 d2 74 08 89 14 24 e8  fc ff ff ff 89 1c 24 e8   |..t...$.......$.|
0x333b:    fc ff ff ff 90                                     |.....           |
; function: _Z17LookupHostNumericPKcRSt6vectorI8CNetAddrSaIS2_EEj at 0x3340 -- 0x3390
0x3340:    83 ec 2c                           	sub esp, 0x2c
0x3343:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3349:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x334d:    31 c0                              	xor eax, eax
0x334f:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x3353:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x335b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x335f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x3363:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3367:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x336b:    89 04 24                           	mov dword ptr [esp], eax
0x336e:    e8 9d fc ff ff                     	call 0x3010 <_Z10LookupHostPKcRSt6vectorI8CNetAddrSaIS2_EEjb>
0x3373:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3377:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x337e:    75 04                              	jne 0x3384 <_Z17LookupHostNumericPKcRSt6vectorI8CNetAddrSaIS2_EEj+0x44>
0x3380:    83 c4 2c                           	add esp, 0x2c
0x3383:    c3                                 	ret 
0x3384:    e8 fc ff ff ff                     	call 0x3385
0x3389:    90                                 	nop 
0x338a:    8d b6 00 00 00 00                  	lea esi, [esi]
; function: _ZNK8CNetAddr8GetGroupEv at 0x3390 -- 0x36a0
0x3390:    55                                 	push ebp
0x3391:    57                                 	push edi
0x3392:    56                                 	push esi
0x3393:    53                                 	push ebx
0x3394:    83 ec 3c                           	sub esp, 0x3c
0x3397:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x339b:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x339f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x33a5:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x33a9:    31 c0                              	xor eax, eax
0x33ab:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x33b1:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x33b8:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x33bf:    89 2c 24                           	mov dword ptr [esp], ebp
0x33c2:    e8 69 de ff ff                     	call 0x1230 <_ZNK8CNetAddr7IsLocalEv>
0x33c7:    89 2c 24                           	mov dword ptr [esp], ebp
0x33ca:    3c 01                              	cmp al, 1
0x33cc:    19 ff                              	sbb edi, edi
0x33ce:    83 e7 10                           	and edi, 0x10
0x33d1:    3c 01                              	cmp al, 1
0x33d3:    19 d2                              	sbb edx, edx
0x33d5:    80 e2 03                           	and dl, 3
0x33d8:    81 c2 ff 00 00 00                  	add edx, 0xff
0x33de:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x33e2:    e8 69 e0 ff ff                     	call 0x1450 <_ZNK8CNetAddr10IsRoutableEv>
0x33e7:    84 c0                              	test al, al
0x33e9:    0f 84 59 01 00 00                  	je 0x3548 <_ZNK8CNetAddr8GetGroupEv+0x1b8>
0x33ef:    89 2c 24                           	mov dword ptr [esp], ebp
0x33f2:    be 0c 00 00 00                     	mov esi, 0xc
0x33f7:    e8 04 da ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x33fc:    ba 01 00 00 00                     	mov edx, 1
0x3401:    84 c0                              	test al, al
0x3403:    0f 84 d7 00 00 00                  	je 0x34e0 <_ZNK8CNetAddr8GetGroupEv+0x150>
0x3409:    8d 44 24 29                        	lea eax, [esp + 0x29]
0x340d:    88 54 24 29                        	mov byte ptr [esp + 0x29], dl
0x3411:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3415:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x341d:    89 1c 24                           	mov dword ptr [esp], ebx
0x3420:    e8 7b 45 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x3425:    83 ff 07                           	cmp edi, 7
0x3428:    7e 5e                              	jle 0x3488 <_ZNK8CNetAddr8GetGroupEv+0xf8>
0x342a:    89 f8                              	mov eax, edi
0x342c:    83 e0 07                           	and eax, 7
0x342f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3433:    eb 20                              	jmp 0x3455 <_ZNK8CNetAddr8GetGroupEv+0xc5>
; data inside code section at 0x3435 -- 0x3438
0x3435:    8d 76 00                                           |.v.             |
0x3438:    31 c9                              	xor ecx, ecx
0x343a:    85 c0                              	test eax, eax
0x343c:    74 05                              	je 0x3443 <_ZNK8CNetAddr8GetGroupEv+0xb3>
0x343e:    88 10                              	mov byte ptr [eax], dl
0x3440:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x3443:    83 c1 01                           	add ecx, 1
0x3446:    83 c6 01                           	add esi, 1
0x3449:    83 ef 08                           	sub edi, 8
0x344c:    3b 7c 24 1c                        	cmp edi, dword ptr [esp + 0x1c]
0x3450:    89 4b 04                           	mov dword ptr [ebx + 4], ecx
0x3453:    74 33                              	je 0x3488 <_ZNK8CNetAddr8GetGroupEv+0xf8>
0x3455:    0f b6 54 35 00                     	movzx edx, byte ptr [ebp + esi]
0x345a:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x345d:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x3460:    88 54 24 2a                        	mov byte ptr [esp + 0x2a], dl
0x3464:    75 d2                              	jne 0x3438 <_ZNK8CNetAddr8GetGroupEv+0xa8>
0x3466:    8d 54 24 2a                        	lea edx, [esp + 0x2a]
0x346a:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x346e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3472:    89 1c 24                           	mov dword ptr [esp], ebx
0x3475:    e8 26 45 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x347a:    83 c6 01                           	add esi, 1
0x347d:    83 ef 08                           	sub edi, 8
0x3480:    3b 7c 24 1c                        	cmp edi, dword ptr [esp + 0x1c]
0x3484:    75 cf                              	jne 0x3455 <_ZNK8CNetAddr8GetGroupEv+0xc5>
0x3486:    66 90                              	nop 
0x3488:    85 ff                              	test edi, edi
0x348a:    74 31                              	je 0x34bd <_ZNK8CNetAddr8GetGroupEv+0x12d>
0x348c:    b8 01 00 00 00                     	mov eax, 1
0x3491:    89 f9                              	mov ecx, edi
0x3493:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x3496:    d3 e0                              	shl eax, cl
0x3498:    83 e8 01                           	sub eax, 1
0x349b:    0a 44 35 00                        	or al, byte ptr [ebp + esi]
0x349f:    3b 53 08                           	cmp edx, dword ptr [ebx + 8]
0x34a2:    88 44 24 2b                        	mov byte ptr [esp + 0x2b], al
0x34a6:    0f 84 74 01 00 00                  	je 0x3620 <_ZNK8CNetAddr8GetGroupEv+0x290>
0x34ac:    31 c9                              	xor ecx, ecx
0x34ae:    85 d2                              	test edx, edx
0x34b0:    74 05                              	je 0x34b7 <_ZNK8CNetAddr8GetGroupEv+0x127>
0x34b2:    88 02                              	mov byte ptr [edx], al
0x34b4:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x34b7:    83 c1 01                           	add ecx, 1
0x34ba:    89 4b 04                           	mov dword ptr [ebx + 4], ecx
0x34bd:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x34c1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x34c8:    89 d8                              	mov eax, ebx
0x34ca:    0f 85 c3 01 00 00                  	jne 0x3693 <_ZNK8CNetAddr8GetGroupEv+0x303>
0x34d0:    83 c4 3c                           	add esp, 0x3c
0x34d3:    5b                                 	pop ebx
0x34d4:    5e                                 	pop esi
0x34d5:    5f                                 	pop edi
0x34d6:    5d                                 	pop ebp
0x34d7:    c2 04 00                           	ret 4
; data inside code section at 0x34da -- 0x34e0
0x34da:    8d b6 00 00 00 00                                  |......          |
0x34e0:    89 2c 24                           	mov dword ptr [esp], ebp
0x34e3:    88 54 24 18                        	mov byte ptr [esp + 0x18], dl
0x34e7:    e8 f4 db ff ff                     	call 0x10e0 <_ZNK8CNetAddr9IsRFC6145Ev>
0x34ec:    0f b6 54 24 18                     	movzx edx, byte ptr [esp + 0x18]
0x34f1:    84 c0                              	test al, al
0x34f3:    0f 85 10 ff ff ff                  	jne 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
0x34f9:    89 2c 24                           	mov dword ptr [esp], ebp
0x34fc:    e8 af da ff ff                     	call 0xfb0 <_ZNK8CNetAddr9IsRFC6052Ev>
0x3501:    0f b6 54 24 18                     	movzx edx, byte ptr [esp + 0x18]
0x3506:    84 c0                              	test al, al
0x3508:    0f 85 fb fe ff ff                  	jne 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
0x350e:    0f b6 75 00                        	movzx esi, byte ptr [ebp]
0x3512:    89 f0                              	mov eax, esi
0x3514:    3c 20                              	cmp al, 0x20
0x3516:    74 3b                              	je 0x3553 <_ZNK8CNetAddr8GetGroupEv+0x1c3>
0x3518:    89 2c 24                           	mov dword ptr [esp], ebp
0x351b:    e8 70 dc ff ff                     	call 0x1190 <_ZNK8CNetAddr5IsTorEv>
0x3520:    84 c0                              	test al, al
0x3522:    0f 85 b2 00 00 00                  	jne 0x35da <_ZNK8CNetAddr8GetGroupEv+0x24a>
0x3528:    89 f1                              	mov ecx, esi
0x352a:    80 f9 20                           	cmp cl, 0x20
0x352d:    0f 84 bb 00 00 00                  	je 0x35ee <_ZNK8CNetAddr8GetGroupEv+0x25e>
0x3533:    0f b6 54 24 1c                     	movzx edx, byte ptr [esp + 0x1c]
0x3538:    bf 20 00 00 00                     	mov edi, 0x20
0x353d:    31 f6                              	xor esi, esi
0x353f:    e9 c5 fe ff ff                     	jmp 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
; data inside code section at 0x3544 -- 0x3548
0x3544:    8d 74 26 00                                        |.t&.            |
0x3548:    31 d2                              	xor edx, edx
0x354a:    31 ff                              	xor edi, edi
0x354c:    31 f6                              	xor esi, esi
0x354e:    e9 b6 fe ff ff                     	jmp 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
0x3553:    0f b6 45 01                        	movzx eax, byte ptr [ebp + 1]
0x3557:    3c 02                              	cmp al, 2
0x3559:    0f 84 da 00 00 00                  	je 0x3639 <_ZNK8CNetAddr8GetGroupEv+0x2a9>
0x355f:    3c 01                              	cmp al, 1
0x3561:    75 b5                              	jne 0x3518 <_ZNK8CNetAddr8GetGroupEv+0x188>
0x3563:    80 7d 02 00                        	cmp byte ptr [ebp + 2], 0
0x3567:    75 af                              	jne 0x3518 <_ZNK8CNetAddr8GetGroupEv+0x188>
0x3569:    80 7d 03 00                        	cmp byte ptr [ebp + 3], 0
0x356d:    75 a9                              	jne 0x3518 <_ZNK8CNetAddr8GetGroupEv+0x188>
0x356f:    8d 44 24 26                        	lea eax, [esp + 0x26]
0x3573:    c6 44 24 26 01                     	mov byte ptr [esp + 0x26], 1
0x3578:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x357c:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x3584:    89 1c 24                           	mov dword ptr [esp], ebx
0x3587:    e8 14 44 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x358c:    0f b6 4d 0c                        	movzx ecx, byte ptr [ebp + 0xc]
0x3590:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x3593:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x3596:    f7 d1                              	not ecx
0x3598:    88 4c 24 27                        	mov byte ptr [esp + 0x27], cl
0x359c:    39 d6                              	cmp esi, edx
0x359e:    0f 84 b8 00 00 00                  	je 0x365c <_ZNK8CNetAddr8GetGroupEv+0x2cc>
0x35a4:    31 c0                              	xor eax, eax
0x35a6:    85 f6                              	test esi, esi
0x35a8:    74 08                              	je 0x35b2 <_ZNK8CNetAddr8GetGroupEv+0x222>
0x35aa:    88 0e                              	mov byte ptr [esi], cl
0x35ac:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x35af:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x35b2:    83 c0 01                           	add eax, 1
0x35b5:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x35b8:    0f b6 4d 0d                        	movzx ecx, byte ptr [ebp + 0xd]
0x35bc:    39 c2                              	cmp edx, eax
0x35be:    f7 d1                              	not ecx
0x35c0:    88 4c 24 28                        	mov byte ptr [esp + 0x28], cl
0x35c4:    74 7d                              	je 0x3643 <_ZNK8CNetAddr8GetGroupEv+0x2b3>
0x35c6:    85 c0                              	test eax, eax
0x35c8:    74 05                              	je 0x35cf <_ZNK8CNetAddr8GetGroupEv+0x23f>
0x35ca:    88 08                              	mov byte ptr [eax], cl
0x35cc:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x35cf:    83 c0 01                           	add eax, 1
0x35d2:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x35d5:    e9 e3 fe ff ff                     	jmp 0x34bd <_ZNK8CNetAddr8GetGroupEv+0x12d>
0x35da:    ba 03 00 00 00                     	mov edx, 3
0x35df:    bf 04 00 00 00                     	mov edi, 4
0x35e4:    be 06 00 00 00                     	mov esi, 6
0x35e9:    e9 1b fe ff ff                     	jmp 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
0x35ee:    80 7d 01 11                        	cmp byte ptr [ebp + 1], 0x11
0x35f2:    0f 85 3b ff ff ff                  	jne 0x3533 <_ZNK8CNetAddr8GetGroupEv+0x1a3>
0x35f8:    80 7d 02 04                        	cmp byte ptr [ebp + 2], 4
0x35fc:    0f 85 31 ff ff ff                  	jne 0x3533 <_ZNK8CNetAddr8GetGroupEv+0x1a3>
0x3602:    80 7d 03 70                        	cmp byte ptr [ebp + 3], 0x70
0x3606:    0f 85 27 ff ff ff                  	jne 0x3533 <_ZNK8CNetAddr8GetGroupEv+0x1a3>
0x360c:    0f b6 54 24 1c                     	movzx edx, byte ptr [esp + 0x1c]
0x3611:    bf 24 00 00 00                     	mov edi, 0x24
0x3616:    31 f6                              	xor esi, esi
0x3618:    e9 ec fd ff ff                     	jmp 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
; data inside code section at 0x361d -- 0x3620
0x361d:    8d 76 00                                           |.v.             |
0x3620:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x3624:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3628:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x362c:    89 1c 24                           	mov dword ptr [esp], ebx
0x362f:    e8 6c 43 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x3634:    e9 84 fe ff ff                     	jmp 0x34bd <_ZNK8CNetAddr8GetGroupEv+0x12d>
0x3639:    be 02 00 00 00                     	mov esi, 2
0x363e:    e9 c6 fd ff ff                     	jmp 0x3409 <_ZNK8CNetAddr8GetGroupEv+0x79>
0x3643:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x3647:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x364b:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x364f:    89 1c 24                           	mov dword ptr [esp], ebx
0x3652:    e8 49 43 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x3657:    e9 61 fe ff ff                     	jmp 0x34bd <_ZNK8CNetAddr8GetGroupEv+0x12d>
0x365c:    8d 44 24 27                        	lea eax, [esp + 0x27]
0x3660:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3664:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3668:    89 1c 24                           	mov dword ptr [esp], ebx
0x366b:    e8 30 43 00 00                     	call 0x79a0 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh>
0x3670:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3673:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x3676:    e9 3d ff ff ff                     	jmp 0x35b8 <_ZNK8CNetAddr8GetGroupEv+0x228>
0x367b:    8b 13                              	mov edx, dword ptr [ebx]
0x367d:    89 c6                              	mov esi, eax
0x367f:    85 d2                              	test edx, edx
0x3681:    74 08                              	je 0x368b <_ZNK8CNetAddr8GetGroupEv+0x2fb>
0x3683:    89 14 24                           	mov dword ptr [esp], edx
0x3686:    e8 fc ff ff ff                     	call 0x3687
0x368b:    89 34 24                           	mov dword ptr [esp], esi
0x368e:    e8 fc ff ff ff                     	call 0x368f
0x3693:    e8 fc ff ff ff                     	call 0x3694
0x3698:    90                                 	nop 
0x3699:    8d b4 26 00 00 00 00               	lea esi, [esi]
; function: _Z6LookupPKcRSt6vectorI8CServiceSaIS2_EEibj at 0x36a0 -- 0x373b
0x36a0:    55                                 	push ebp
0x36a1:    57                                 	push edi
0x36a2:    56                                 	push esi
0x36a3:    53                                 	push ebx
0x36a4:    31 db                              	xor ebx, ebx
0x36a6:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x36ac:    8b ac 24 a0 00 00 00               	mov ebp, dword ptr [esp + 0xa0]
0x36b3:    8b 84 24 a4 00 00 00               	mov eax, dword ptr [esp + 0xa4]
0x36ba:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x36c1:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x36c5:    31 d2                              	xor edx, edx
0x36c7:    8b bc 24 b0 00 00 00               	mov edi, dword ptr [esp + 0xb0]
0x36ce:    0f b6 b4 24 ac 00 00 00            	movzx esi, byte ptr [esp + 0xac]
0x36d6:    80 7d 00 00                        	cmp byte ptr [ebp], 0
0x36da:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x36de:    8b 84 24 a8 00 00 00               	mov eax, dword ptr [esp + 0xa8]
0x36e5:    75 21                              	jne 0x3708 <_Z6LookupPKcRSt6vectorI8CServiceSaIS2_EEibj+0x68>
0x36e7:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x36eb:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x36f2:    89 d8                              	mov eax, ebx
0x36f4:    0f 85 fe 01 00 00                  	jne 0x38f8 <function_38f8>
0x36fa:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x3700:    5b                                 	pop ebx
0x3701:    5e                                 	pop esi
0x3702:    5f                                 	pop edi
0x3703:    5d                                 	pop ebp
0x3704:    c3                                 	ret 
; data inside code section at 0x3705 -- 0x3708
0x3705:    8d 76 00                                           |.v.             |
0x3708:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x370c:    8d 44 24 44                        	lea eax, [esp + 0x44]
0x3710:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3714:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x3718:    89 04 24                           	mov dword ptr [esp], eax
0x371b:    8d 5c 24 40                        	lea ebx, [esp + 0x40]
0x371f:    c7 44 24 04 c5 4f 00 00            	mov dword ptr [esp + 4], 0x4fc5
0x3727:    e8 fc ff ff ff                     	call 0x3728
0x372c:    8d 44 24 45                        	lea eax, [esp + 0x45]
0x3730:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3734:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3738:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x373b -- 0x373c
0x373b:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x373c -- 0x373d
; data inside code section at 0x373d -- 0x3762
0x373d:    ff ff ff 8d 54 24 3c 8d  44 24 38 89 54 24 08 89   |....T$<.D$8.T$..|
0x374d:    44 24 04 89 1c 24 e8 d8  d0 ff ff 89 1c 24 81 e6   |D$...$.......$..|
0x375d:    ff 00 00 00 e8                                     |.....           |
; dynamically linked function: _ZNSsD1Ev at 0x3762 -- 0x3763
; data inside code section at 0x3763 -- 0x3765
0x3763:    ff ff                                              |..              |
; function: function_3765 at 0x3765 -- 0x38a9
0x3765:    ff 8b 44 24 3c 89                  	dec dword ptr [ebx - 0x76c3dbbc]
0x376b:    f9                                 	stc 
0x376c:    8d 54 24 2c                        	lea edx, [esp + 0x2c]
0x3770:    c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x3778:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x3780:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x3788:    89 34 24                           	mov dword ptr [esp], esi
0x378b:    e8 70 f5 ff ff                     	call 0x2d00 <LookupIntern>
0x3790:    84 c0                              	test al, al
0x3792:    0f 84 f8 00 00 00                  	je 0x3890 <function_3765+0x12b>
0x3798:    8d 44 24 46                        	lea eax, [esp + 0x46]
0x379c:    89 04 24                           	mov dword ptr [esp], eax
0x379f:    e8 7c e2 ff ff                     	call 0x1a20 <CService>
0x37a4:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x37a8:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x37ac:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x37b0:    29 d0                              	sub eax, edx
0x37b2:    8b 54 24 46                        	mov edx, dword ptr [esp + 0x46]
0x37b6:    c1 f8 04                           	sar eax, 4
0x37b9:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x37bd:    89 54 24 6a                        	mov dword ptr [esp + 0x6a], edx
0x37c1:    8b 54 24 4a                        	mov edx, dword ptr [esp + 0x4a]
0x37c5:    89 54 24 6e                        	mov dword ptr [esp + 0x6e], edx
0x37c9:    8b 54 24 4e                        	mov edx, dword ptr [esp + 0x4e]
0x37cd:    89 54 24 72                        	mov dword ptr [esp + 0x72], edx
0x37d1:    8b 54 24 52                        	mov edx, dword ptr [esp + 0x52]
0x37d5:    89 54 24 76                        	mov dword ptr [esp + 0x76], edx
0x37d9:    0f b7 54 24 56                     	movzx edx, word ptr [esp + 0x56]
0x37de:    66 89 54 24 7a                     	mov word ptr [esp + 0x7a], dx
0x37e3:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x37e7:    8b 5a 04                           	mov ebx, dword ptr [edx + 4]
0x37ea:    8b 0a                              	mov ecx, dword ptr [edx]
0x37ec:    89 da                              	mov edx, ebx
0x37ee:    29 ca                              	sub edx, ecx
0x37f0:    d1 fa                              	sar edx, 1
0x37f2:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x37f8:    39 d0                              	cmp eax, edx
0x37fa:    0f 87 c0 00 00 00                  	ja 0x38c0 <function_38c0>
0x3800:    39 54 24 18                        	cmp dword ptr [esp + 0x18], edx
0x3804:    73 11                              	jae 0x3817 <function_3765+0xb2>
0x3806:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x380a:    8d 04 d2                           	lea eax, [edx + edx*8]
0x380d:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x3811:    8d 04 41                           	lea eax, [ecx + eax*2]
0x3814:    89 42 04                           	mov dword ptr [edx + 4], eax
0x3817:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x381b:    bb 01 00 00 00                     	mov ebx, 1
0x3820:    85 c0                              	test eax, eax
0x3822:    74 76                              	je 0x389a <function_3765+0x135>
0x3824:    0f b7 44 24 38                     	movzx eax, word ptr [esp + 0x38]
0x3829:    31 db                              	xor ebx, ebx
0x382b:    31 c9                              	xor ecx, ecx
0x382d:    66 89 44 24 1e                     	mov word ptr [esp + 0x1e], ax
0x3832:    8d b6 00 00 00 00                  	lea esi, [esi]
0x3838:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x383c:    89 d8                              	mov eax, ebx
0x383e:    83 c3 12                           	add ebx, 0x12
0x3841:    03 02                              	add eax, dword ptr [edx]
0x3843:    89 ca                              	mov edx, ecx
0x3845:    c1 e2 04                           	shl edx, 4
0x3848:    83 c1 01                           	add ecx, 1
0x384b:    03 54 24 14                        	add edx, dword ptr [esp + 0x14]
0x384f:    3b 4c 24 18                        	cmp ecx, dword ptr [esp + 0x18]
0x3853:    8b 2a                              	mov ebp, dword ptr [edx]
0x3855:    8b 7a 04                           	mov edi, dword ptr [edx + 4]
0x3858:    8b 72 08                           	mov esi, dword ptr [edx + 8]
0x385b:    8b 52 0c                           	mov edx, dword ptr [edx + 0xc]
0x385e:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x3862:    89 7c 24 5c                        	mov dword ptr [esp + 0x5c], edi
0x3866:    89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x386a:    89 54 24 64                        	mov dword ptr [esp + 0x64], edx
0x386e:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x3871:    0f b7 54 24 1e                     	movzx edx, word ptr [esp + 0x1e]
0x3876:    89 28                              	mov dword ptr [eax], ebp
0x3878:    89 78 04                           	mov dword ptr [eax + 4], edi
0x387b:    89 70 08                           	mov dword ptr [eax + 8], esi
0x387e:    66 89 50 10                        	mov word ptr [eax + 0x10], dx
0x3882:    75 b4                              	jne 0x3838 <function_3765+0xd3>
0x3884:    bb 01 00 00 00                     	mov ebx, 1
0x3889:    eb 0f                              	jmp 0x389a <function_3765+0x135>
; data inside code section at 0x388b -- 0x3890
0x388b:    90 8d 74 26 00                                     |..t&.           |
0x3890:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x3894:    31 db                              	xor ebx, ebx
0x3896:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x389a:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x389e:    85 c0                              	test eax, eax
0x38a0:    74 0c                              	je 0x38ae <function_38ae>
0x38a2:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x38a6:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x38a9 -- 0x38aa
0x38a9:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x38aa -- 0x38ab
; data inside code section at 0x38ab -- 0x38ae
0x38ab:    ff ff ff                                           |...             |
; function: function_38ae at 0x38ae -- 0x38b5
0x38ae:    8d 54 24 3c                        	lea edx, [esp + 0x3c]
0x38b2:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x38b5 -- 0x38b6
0x38b5:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x38b6 -- 0x38b7
; data inside code section at 0x38b7 -- 0x38ba
0x38b7:    ff ff ff                                           |...             |
; function: function_38ba at 0x38ba -- 0x38bf
0x38ba:    e9 28 fe ff ff                     	jmp 0x36e7
; data inside code section at 0x38bf -- 0x38c0
0x38bf:    90                                                 |.               |
; function: function_38c0 at 0x38c0 -- 0x38f8
0x38c0:    29 d0                              	sub eax, edx
0x38c2:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x38c6:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x38ca:    8d 4c 24 6a                        	lea ecx, [esp + 0x6a]
0x38ce:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x38d2:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x38d6:    89 04 24                           	mov dword ptr [esp], eax
0x38d9:    e8 32 42 00 00                     	call 0x7b10 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_>
0x38de:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x38e2:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x38e6:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x38ea:    29 d0                              	sub eax, edx
0x38ec:    c1 f8 04                           	sar eax, 4
0x38ef:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x38f3:    e9 1f ff ff ff                     	jmp 0x3817
; function: function_38f8 at 0x38f8 -- 0x38f9
; dynamically linked function: __stack_chk_fail at 0x38f9 -- 0x38fa
; data inside code section at 0x38fa -- 0x3903
0x38fa:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x3903 -- 0x3904
; data inside code section at 0x3904 -- 0x3909
0x3904:    ff ff ff 89 f0                                     |.....           |
; function: function_3909 at 0x3909 -- 0x390a
; function: function_390a at 0x390a -- 0x390b
0x390a:    c3                                 	ret 
; function: function_390b at 0x390b -- 0x390c
; data inside code section at 0x390c -- 0x3913
0x390c:    44 24 3c 89 04 24 e8                               |D$<..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x3913 -- 0x3914
; data inside code section at 0x3914 -- 0x391b
0x3914:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x391b -- 0x391c
; data inside code section at 0x391c -- 0x391e
0x391c:    ff ff                                              |..              |
; function: function_391e at 0x391e -- 0x3925
0x391e:    ff 8b 54 24 2c 89                  	dec dword ptr [ebx - 0x76d3dbac]
0x3924:    c3                                 	ret 
; data inside code section at 0x3925 -- 0x392d
0x3925:    85 d2 74 e2 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x392d -- 0x392e
; data inside code section at 0x392e -- 0x3931
0x392e:    ff ff ff                                           |...             |
; function: function_3931 at 0x3931 -- 0x3933
0x3931:    eb d8                              	jmp 0x390b <function_390b>
; function: function_3933 at 0x3933 -- 0x3935
0x3933:    eb d4                              	jmp 0x3909 <function_3909>
; data inside code section at 0x3935 -- 0x3940
0x3935:    8d 74 26 00 8d bc 27 00  00 00 00                  |.t&...'....     |
; function: _Z6LookupPKcR8CServiceib at 0x3940 -- 0x39aa
0x3940:    53                                 	push ebx
0x3941:    83 ec 38                           	sub esp, 0x38
0x3944:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x394a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x394e:    31 c0                              	xor eax, eax
0x3950:    0f b6 44 24 4c                     	movzx eax, byte ptr [esp + 0x4c]
0x3955:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x3959:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x3961:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x3969:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x396d:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x3971:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x3979:    c7 44 24 10 01 00 00 00            	mov dword ptr [esp + 0x10], 1
0x3981:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3985:    8d 44 24 20                        	lea eax, [esp + 0x20]
0x3989:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x398d:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x3991:    89 04 24                           	mov dword ptr [esp], eax
0x3994:    e8 07 fd ff ff                     	call 0x36a0 <_Z6LookupPKcRSt6vectorI8CServiceSaIS2_EEibj>
0x3999:    84 c0                              	test al, al
0x399b:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x399f:    75 27                              	jne 0x39c8 <function_39c8>
0x39a1:    31 db                              	xor ebx, ebx
0x39a3:    85 d2                              	test edx, edx
0x39a5:    74 08                              	je 0x39af <function_39af>
0x39a7:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x39aa -- 0x39ab
0x39aa:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x39ab -- 0x39ac
; data inside code section at 0x39ac -- 0x39af
0x39ac:    ff ff ff                                           |...             |
; function: function_39af at 0x39af -- 0x39c3
0x39af:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x39b3:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x39ba:    89 d8                              	mov eax, ebx
0x39bc:    75 2f                              	jne 0x39ed <function_39ed>
0x39be:    83 c4 38                           	add esp, 0x38
0x39c1:    5b                                 	pop ebx
0x39c2:    c3                                 	ret 
; data inside code section at 0x39c3 -- 0x39c8
0x39c3:    90 8d 74 26 00                                     |..t&.           |
; function: function_39c8 at 0x39c8 -- 0x39ed
0x39c8:    8b 02                              	mov eax, dword ptr [edx]
0x39ca:    89 03                              	mov dword ptr [ebx], eax
0x39cc:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x39cf:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x39d2:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x39d5:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x39d8:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x39db:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x39de:    0f b7 42 10                        	movzx eax, word ptr [edx + 0x10]
0x39e2:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x39e6:    bb 01 00 00 00                     	mov ebx, 1
0x39eb:    eb b6                              	jmp 0x39a3
; function: function_39ed at 0x39ed -- 0x39ee
; dynamically linked function: __stack_chk_fail at 0x39ee -- 0x39ef
; data inside code section at 0x39ef -- 0x39f1
0x39ef:    ff ff                                              |..              |
; function: function_39f1 at 0x39f1 -- 0x39f8
0x39f1:    ff 8b 54 24 20 89                  	dec dword ptr [ebx - 0x76dfdbac]
0x39f7:    c3                                 	ret 
; data inside code section at 0x39f8 -- 0x3a00
0x39f8:    85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x3a00 -- 0x3a01
; data inside code section at 0x3a01 -- 0x3a08
0x3a01:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x3a08 -- 0x3a09
; data inside code section at 0x3a09 -- 0x3a10
0x3a09:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: CService at 0x3a10 -- 0x3ac2
0x3a10:    83 ec 5c                           	sub esp, 0x5c
0x3a13:    0f b6 44 24 6c                     	movzx eax, byte ptr [esp + 0x6c]
0x3a18:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x3a1c:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x3a20:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x3a24:    8d 74 24 2a                        	lea esi, [esp + 0x2a]
0x3a28:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x3a2c:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x3a30:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x3a34:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x3a38:    88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0x3a3c:    89 1c 24                           	mov dword ptr [esp], ebx
0x3a3f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3a45:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x3a49:    31 c0                              	xor eax, eax
0x3a4b:    e8 60 d0 ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x3a50:    66 c7 43 10 00 00                  	mov word ptr [ebx + 0x10], 0
0x3a56:    89 34 24                           	mov dword ptr [esp], esi
0x3a59:    e8 c2 df ff ff                     	call 0x1a20 <CService>
0x3a5e:    0f b6 44 24 1f                     	movzx eax, byte ptr [esp + 0x1f]
0x3a63:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x3a67:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3a6b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x3a6f:    8b 07                              	mov eax, dword ptr [edi]
0x3a71:    89 04 24                           	mov dword ptr [esp], eax
0x3a74:    e8 c7 fe ff ff                     	call 0x3940 <_Z6LookupPKcR8CServiceib>
0x3a79:    84 c0                              	test al, al
0x3a7b:    74 24                              	je 0x3aa1 <CService+0x91>
0x3a7d:    8b 44 24 2a                        	mov eax, dword ptr [esp + 0x2a]
0x3a81:    89 03                              	mov dword ptr [ebx], eax
0x3a83:    8b 44 24 2e                        	mov eax, dword ptr [esp + 0x2e]
0x3a87:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3a8a:    8b 44 24 32                        	mov eax, dword ptr [esp + 0x32]
0x3a8e:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3a91:    8b 44 24 36                        	mov eax, dword ptr [esp + 0x36]
0x3a95:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3a98:    0f b7 44 24 3a                     	movzx eax, word ptr [esp + 0x3a]
0x3a9d:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x3aa1:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x3aa5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3aac:    75 14                              	jne 0x3ac2 <CService+0xb1>
0x3aae:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x3ab2:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x3ab6:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x3aba:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x3abe:    83 c4 5c                           	add esp, 0x5c
0x3ac1:    c3                                 	ret 
; data inside code section at 0x3ac2 -- 0x3ac3
0x3ac2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3ac3 -- 0x3ac4
; data inside code section at 0x3ac4 -- 0x3ad0
0x3ac4:    ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: CService at 0x3ad0 -- 0x3b7e
0x3ad0:    83 ec 4c                           	sub esp, 0x4c
0x3ad3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x3ad7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x3adb:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x3adf:    0f b6 6c 24 58                     	movzx ebp, byte ptr [esp + 0x58]
0x3ae4:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x3ae8:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x3aec:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3af2:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x3af6:    31 c0                              	xor eax, eax
0x3af8:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x3afc:    8d 74 24 1a                        	lea esi, [esp + 0x1a]
0x3b00:    89 1c 24                           	mov dword ptr [esp], ebx
0x3b03:    e8 a8 cf ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x3b08:    66 c7 43 10 00 00                  	mov word ptr [ebx + 0x10], 0
0x3b0e:    89 34 24                           	mov dword ptr [esp], esi
0x3b11:    e8 0a df ff ff                     	call 0x1a20 <CService>
0x3b16:    89 ea                              	mov edx, ebp
0x3b18:    0f b6 c2                           	movzx eax, dl
0x3b1b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x3b1f:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x3b27:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3b2b:    8b 07                              	mov eax, dword ptr [edi]
0x3b2d:    89 04 24                           	mov dword ptr [esp], eax
0x3b30:    e8 0b fe ff ff                     	call 0x3940 <_Z6LookupPKcR8CServiceib>
0x3b35:    84 c0                              	test al, al
0x3b37:    74 24                              	je 0x3b5d <CService+0x8d>
0x3b39:    8b 44 24 1a                        	mov eax, dword ptr [esp + 0x1a]
0x3b3d:    89 03                              	mov dword ptr [ebx], eax
0x3b3f:    8b 44 24 1e                        	mov eax, dword ptr [esp + 0x1e]
0x3b43:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3b46:    8b 44 24 22                        	mov eax, dword ptr [esp + 0x22]
0x3b4a:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3b4d:    8b 44 24 26                        	mov eax, dword ptr [esp + 0x26]
0x3b51:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3b54:    0f b7 44 24 2a                     	movzx eax, word ptr [esp + 0x2a]
0x3b59:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x3b5d:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x3b61:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3b68:    75 14                              	jne 0x3b7e <CService+0xad>
0x3b6a:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x3b6e:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x3b72:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x3b76:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x3b7a:    83 c4 4c                           	add esp, 0x4c
0x3b7d:    c3                                 	ret 
; data inside code section at 0x3b7e -- 0x3b7f
0x3b7e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3b7f -- 0x3b80
; data inside code section at 0x3b80 -- 0x3b90
0x3b80:    ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: CService at 0x3b90 -- 0x3c40
0x3b90:    83 ec 5c                           	sub esp, 0x5c
0x3b93:    0f b6 44 24 6c                     	movzx eax, byte ptr [esp + 0x6c]
0x3b98:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x3b9c:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x3ba0:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x3ba4:    8d 74 24 2a                        	lea esi, [esp + 0x2a]
0x3ba8:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x3bac:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x3bb0:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x3bb4:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x3bb8:    88 44 24 1f                        	mov byte ptr [esp + 0x1f], al
0x3bbc:    89 1c 24                           	mov dword ptr [esp], ebx
0x3bbf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3bc5:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x3bc9:    31 c0                              	xor eax, eax
0x3bcb:    e8 e0 ce ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x3bd0:    66 c7 43 10 00 00                  	mov word ptr [ebx + 0x10], 0
0x3bd6:    89 34 24                           	mov dword ptr [esp], esi
0x3bd9:    e8 42 de ff ff                     	call 0x1a20 <CService>
0x3bde:    0f b6 44 24 1f                     	movzx eax, byte ptr [esp + 0x1f]
0x3be3:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x3be7:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3beb:    89 3c 24                           	mov dword ptr [esp], edi
0x3bee:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x3bf2:    e8 49 fd ff ff                     	call 0x3940 <_Z6LookupPKcR8CServiceib>
0x3bf7:    84 c0                              	test al, al
0x3bf9:    74 24                              	je 0x3c1f <CService+0x8f>
0x3bfb:    8b 44 24 2a                        	mov eax, dword ptr [esp + 0x2a]
0x3bff:    89 03                              	mov dword ptr [ebx], eax
0x3c01:    8b 44 24 2e                        	mov eax, dword ptr [esp + 0x2e]
0x3c05:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3c08:    8b 44 24 32                        	mov eax, dword ptr [esp + 0x32]
0x3c0c:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3c0f:    8b 44 24 36                        	mov eax, dword ptr [esp + 0x36]
0x3c13:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3c16:    0f b7 44 24 3a                     	movzx eax, word ptr [esp + 0x3a]
0x3c1b:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x3c1f:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x3c23:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3c2a:    75 14                              	jne 0x3c40 <CService+0xaf>
0x3c2c:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x3c30:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x3c34:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x3c38:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x3c3c:    83 c4 5c                           	add esp, 0x5c
0x3c3f:    c3                                 	ret 
; data inside code section at 0x3c40 -- 0x3c41
0x3c40:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3c41 -- 0x3c42
; data inside code section at 0x3c42 -- 0x3c50
0x3c42:    ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: CService at 0x3c50 -- 0x3cfc
0x3c50:    83 ec 4c                           	sub esp, 0x4c
0x3c53:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x3c57:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x3c5b:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x3c5f:    0f b6 6c 24 58                     	movzx ebp, byte ptr [esp + 0x58]
0x3c64:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x3c68:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x3c6c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3c72:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x3c76:    31 c0                              	xor eax, eax
0x3c78:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x3c7c:    8d 74 24 1a                        	lea esi, [esp + 0x1a]
0x3c80:    89 1c 24                           	mov dword ptr [esp], ebx
0x3c83:    e8 28 ce ff ff                     	call 0xab0 <_ZN8CNetAddr4InitEv>
0x3c88:    66 c7 43 10 00 00                  	mov word ptr [ebx + 0x10], 0
0x3c8e:    89 34 24                           	mov dword ptr [esp], esi
0x3c91:    e8 8a dd ff ff                     	call 0x1a20 <CService>
0x3c96:    89 ea                              	mov edx, ebp
0x3c98:    0f b6 c2                           	movzx eax, dl
0x3c9b:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x3c9f:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x3ca7:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3cab:    89 3c 24                           	mov dword ptr [esp], edi
0x3cae:    e8 8d fc ff ff                     	call 0x3940 <_Z6LookupPKcR8CServiceib>
0x3cb3:    84 c0                              	test al, al
0x3cb5:    74 24                              	je 0x3cdb <CService+0x8b>
0x3cb7:    8b 44 24 1a                        	mov eax, dword ptr [esp + 0x1a]
0x3cbb:    89 03                              	mov dword ptr [ebx], eax
0x3cbd:    8b 44 24 1e                        	mov eax, dword ptr [esp + 0x1e]
0x3cc1:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3cc4:    8b 44 24 22                        	mov eax, dword ptr [esp + 0x22]
0x3cc8:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3ccb:    8b 44 24 26                        	mov eax, dword ptr [esp + 0x26]
0x3ccf:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3cd2:    0f b7 44 24 2a                     	movzx eax, word ptr [esp + 0x2a]
0x3cd7:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x3cdb:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x3cdf:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x3ce6:    75 14                              	jne 0x3cfc <CService+0xab>
0x3ce8:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x3cec:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x3cf0:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x3cf4:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x3cf8:    83 c4 4c                           	add esp, 0x4c
0x3cfb:    c3                                 	ret 
; data inside code section at 0x3cfc -- 0x3cfd
0x3cfc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3cfd -- 0x3cfe
; data inside code section at 0x3cfe -- 0x3d01
0x3cfe:    ff ff ff                                           |...             |
; function: function_3d01 at 0x3d01 -- 0x3d03
0x3d01:    eb 0d                              	jmp 0x3d10 <_Z13LookupNumericPKcR8CServicei>
; data inside code section at 0x3d03 -- 0x3d10
0x3d03:    90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _Z13LookupNumericPKcR8CServicei at 0x3d10 -- 0x3d54
0x3d10:    83 ec 2c                           	sub esp, 0x2c
0x3d13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3d19:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3d1d:    31 c0                              	xor eax, eax
0x3d1f:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x3d23:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x3d2b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3d2f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x3d33:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3d37:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x3d3b:    89 04 24                           	mov dword ptr [esp], eax
0x3d3e:    e8 fd fb ff ff                     	call 0x3940 <_Z6LookupPKcR8CServiceib>
0x3d43:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3d47:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3d4e:    75 04                              	jne 0x3d54 <_Z13LookupNumericPKcR8CServicei+0x43>
0x3d50:    83 c4 2c                           	add esp, 0x2c
0x3d53:    c3                                 	ret 
; data inside code section at 0x3d54 -- 0x3d55
0x3d54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3d55 -- 0x3d56
; data inside code section at 0x3d56 -- 0x3d60
0x3d56:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: _Z12SetNameProxy8CServicei at 0x3d60 -- 0x3ea5
0x3d60:    83 ec 7c                           	sub esp, 0x7c
0x3d63:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x3d6a:    89 5c 24 70                        	mov dword ptr [esp + 0x70], ebx
0x3d6e:    8b 9c 24 94 00 00 00               	mov ebx, dword ptr [esp + 0x94]
0x3d75:    89 74 24 74                        	mov dword ptr [esp + 0x74], esi
0x3d79:    89 7c 24 78                        	mov dword ptr [esp + 0x78], edi
0x3d7d:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3d81:    8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x3d88:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x3d8c:    8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0x3d93:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x3d97:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x3d9e:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x3da2:    0f b7 84 24 90 00 00 00            	movzx eax, word ptr [esp + 0x90]
0x3daa:    66 89 44 24 2c                     	mov word ptr [esp + 0x2c], ax
0x3daf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3db5:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x3db9:    31 c0                              	xor eax, eax
0x3dbb:    85 db                              	test ebx, ebx
0x3dbd:    0f 95 c0                           	setne al
0x3dc0:    83 fb 05                           	cmp ebx, 5
0x3dc3:    75 43                              	jne 0x3e08 <_Z12SetNameProxy8CServicei+0xa8>
0x3dc5:    84 c0                              	test al, al
0x3dc7:    74 47                              	je 0x3e10 <_Z12SetNameProxy8CServicei+0xb0>
0x3dc9:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x3dcd:    89 04 24                           	mov dword ptr [esp], eax
0x3dd0:    e8 3b d5 ff ff                     	call 0x1310 <_ZNK8CNetAddr7IsValidEv>
0x3dd5:    89 c2                              	mov edx, eax
0x3dd7:    31 c0                              	xor eax, eax
0x3dd9:    84 d2                              	test dl, dl
0x3ddb:    75 33                              	jne 0x3e10 <_Z12SetNameProxy8CServicei+0xb0>
0x3ddd:    8d 76 00                           	lea esi, [esi]
0x3de0:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x3de4:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3deb:    0f 85 fd 00 00 00                  	jne 0x3eee <function_3eee>
0x3df1:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x3df5:    8b 74 24 74                        	mov esi, dword ptr [esp + 0x74]
0x3df9:    8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
0x3dfd:    83 c4 7c                           	add esp, 0x7c
0x3e00:    c3                                 	ret 
; data inside code section at 0x3e01 -- 0x3e08
0x3e01:    8d b4 26 00 00 00 00                               |..&....         |
0x3e08:    84 c0                              	test al, al
0x3e0a:    0f 85 d0 00 00 00                  	jne 0x3ee0 <function_3ee0>
0x3e10:    8d 74 24 38                        	lea esi, [esp + 0x38]
0x3e14:    c7 44 24 38 d0 4c 00 00            	mov dword ptr [esp + 0x38], 0x4cd0
0x3e1c:    c6 44 24 3c 00                     	mov byte ptr [esp + 0x3c], 0
0x3e21:    89 34 24                           	mov dword ptr [esp], esi
0x3e24:    e8 e7 40 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x3e29:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x3e2d:    0f b7 7c 24 2c                     	movzx edi, word ptr [esp + 0x2c]
0x3e32:    8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0x3e36:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x3e3a:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x3e3e:    89 44 24 66                        	mov dword ptr [esp + 0x66], eax
0x3e42:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x3e46:    66 89 7c 24 50                     	mov word ptr [esp + 0x50], di
0x3e4b:    a3 9c 4d 00 00                     	mov dword ptr [0x4d9c], eax ; "connecting %s\n"
0x3e50:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x3e54:    80 7c 24 3c 00                     	cmp byte ptr [esp + 0x3c], 0
0x3e59:    89 74 24 5a                        	mov dword ptr [esp + 0x5a], esi
0x3e5d:    89 4c 24 5e                        	mov dword ptr [esp + 0x5e], ecx
0x3e61:    a3 a0 4d 00 00                     	mov dword ptr [0x4da0], eax ; "ecting %s\n"
0x3e66:    b8 01 00 00 00                     	mov eax, 1
0x3e6b:    89 54 24 62                        	mov dword ptr [esp + 0x62], edx
0x3e6f:    66 89 7c 24 6a                     	mov word ptr [esp + 0x6a], di
0x3e74:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x3e78:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x3e7c:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x3e80:    89 35 90 4d 00 00                  	mov dword ptr [0x4d90], esi
0x3e86:    89 0d 94 4d 00 00                  	mov dword ptr [0x4d94], ecx
0x3e8c:    89 15 98 4d 00 00                  	mov dword ptr [0x4d98], edx ; "KS5 connecting %s\n"
0x3e92:    89 1d a4 4d 00 00                  	mov dword ptr [0x4da4], ebx
0x3e98:    0f 84 42 ff ff ff                  	je 0x3de0 <_Z12SetNameProxy8CServicei+0x80>
0x3e9e:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x3ea2:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3ea5 -- 0x3ea6
0x3ea5:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x3ea6 -- 0x3ea7
; data inside code section at 0x3ea7 -- 0x3ebb
0x3ea7:    ff ff ff 85 c0 75 47 8b  43 50 83 e8 01 85 c0 89   |.....uG.CP......|
0x3eb7:    43 50 74 2d                                        |CPt-            |
; function: function_3ebb at 0x3ebb -- 0x3ebc
; data inside code section at 0x3ebc -- 0x3ec2
0x3ebc:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x3ec2 -- 0x3ec3
; data inside code section at 0x3ec3 -- 0x3ece
0x3ec3:    ff ff ff 85 c0 75 47 89  1c 24 e8                  |.....uG..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x3ece -- 0x3ecf
; data inside code section at 0x3ecf -- 0x3ed1
0x3ecf:    ff ff                                              |..              |
; function: function_3ed1 at 0x3ed1 -- 0x3ee0
0x3ed1:    ff 85 c0 75 36 b8                  	inc dword ptr [ebp - 0x47c98a40]
0x3ed7:    01 00                              	add dword ptr [eax], eax
0x3ed9:    00 00                              	add byte ptr [eax], al
0x3edb:    e9 00 ff ff ff                     	jmp 0x3de0
; function: function_3ee0 at 0x3ee0 -- 0x3ee7
0x3ee0:    31 c0                              	xor eax, eax
0x3ee2:    e9 f9 fe ff ff                     	jmp 0x3de0
; data inside code section at 0x3ee7 -- 0x3ee8
0x3ee7:    90                                                 |.               |
; function: function_3ee8 at 0x3ee8 -- 0x3eee
0x3ee8:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x3eec:    eb cd                              	jmp 0x3ebb <function_3ebb>
; function: function_3eee at 0x3eee -- 0x3ef0
0x3eee:    66 90                              	nop 
; data inside code section at 0x3ef0 -- 0x3ef1
0x3ef0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3ef1 -- 0x3ef2
; data inside code section at 0x3ef2 -- 0x3efb
0x3ef2:    ff ff ff e8 76 1c 00 00  89                        |....v....       |
; function: function_3efb at 0x3efb -- 0x3efc
0x3efb:    c3                                 	ret 
; data inside code section at 0x3efc -- 0x3f08
0x3efc:    89 34 24 e8 0c 3a 00 00  89 1c 24 e8               |.4$..:....$.    |
; dynamically linked function: _Unwind_Resume at 0x3f08 -- 0x3f09
; data inside code section at 0x3f09 -- 0x3f0d
0x3f09:    ff ff ff e8                                        |....            |
; function: function_3f0d at 0x3f0d -- 0x3f15
0x3f0d:    93                                 	xchg eax, ebx
0x3f0e:    1c 00                              	sbb al, 0
0x3f10:    00 e8                              	add al, ch
0x3f12:    c2 1c 00                           	ret 0x1c
; data inside code section at 0x3f15 -- 0x3f20
0x3f15:    00 8d 76 00 8d bc 27 00  00 00 00                  |..v...'....     |
; function: _Z12GetNameProxyRSt4pairI8CServiceiE at 0x3f20 -- 0x3fb7
0x3f20:    56                                 	push esi
0x3f21:    53                                 	push ebx
0x3f22:    83 ec 24                           	sub esp, 0x24
0x3f25:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x3f29:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x3f2d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3f33:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3f37:    31 c0                              	xor eax, eax
0x3f39:    c7 44 24 14 d0 4c 00 00            	mov dword ptr [esp + 0x14], 0x4cd0
0x3f41:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x3f46:    89 34 24                           	mov dword ptr [esp], esi
0x3f49:    e8 c2 3f 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x3f4e:    a1 a4 4d 00 00                     	mov eax, dword ptr [0x4da4]
0x3f53:    31 f6                              	xor esi, esi
0x3f55:    85 c0                              	test eax, eax
0x3f57:    74 34                              	je 0x3f8d <_Z12GetNameProxyRSt4pairI8CServiceiE+0x6d>
0x3f59:    a1 90 4d 00 00                     	mov eax, dword ptr [0x4d90]
0x3f5e:    be 01 00 00 00                     	mov esi, 1
0x3f63:    89 03                              	mov dword ptr [ebx], eax
0x3f65:    a1 94 4d 00 00                     	mov eax, dword ptr [0x4d94]
0x3f6a:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x3f6d:    a1 98 4d 00 00                     	mov eax, dword ptr [0x4d98] ; "KS5 connecting %s\n"
0x3f72:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x3f75:    a1 9c 4d 00 00                     	mov eax, dword ptr [0x4d9c] ; "connecting %s\n"
0x3f7a:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x3f7d:    a1 a0 4d 00 00                     	mov eax, dword ptr [0x4da0] ; "ecting %s\n"
0x3f82:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x3f85:    a1 a4 4d 00 00                     	mov eax, dword ptr [0x4da4]
0x3f8a:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x3f8d:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x3f92:    75 1c                              	jne 0x3fb0 <_Z12GetNameProxyRSt4pairI8CServiceiE+0x90>
0x3f94:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3f98:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3f9f:    89 f0                              	mov eax, esi
0x3fa1:    75 53                              	jne 0x3ff6 <function_3ff6>
0x3fa3:    83 c4 24                           	add esp, 0x24
0x3fa6:    5b                                 	pop ebx
0x3fa7:    5e                                 	pop esi
0x3fa8:    c3                                 	ret 
; data inside code section at 0x3fa9 -- 0x3fb0
0x3fa9:    8d b4 26 00 00 00 00                               |..&....         |
0x3fb0:    8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x3fb4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x3fb7 -- 0x3fb8
0x3fb7:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x3fb8 -- 0x3fb9
; data inside code section at 0x3fb9 -- 0x3fcd
0x3fb9:    ff ff ff 85 c0 75 3b 8b  43 50 83 e8 01 85 c0 89   |.....u;.CP......|
0x3fc9:    43 50 74 23                                        |CPt#            |
; function: function_3fcd at 0x3fcd -- 0x3fce
; data inside code section at 0x3fce -- 0x3fd4
0x3fce:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x3fd4 -- 0x3fd5
; data inside code section at 0x3fd5 -- 0x3fe0
0x3fd5:    ff ff ff 85 c0 75 24 89  1c 24 e8                  |.....u$..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x3fe0 -- 0x3fe1
; data inside code section at 0x3fe1 -- 0x3fe3
0x3fe1:    ff ff                                              |..              |
; function: function_3fe3 at 0x3fe3 -- 0x3ff6
0x3fe3:    ff 85 c0 74 ac e8                  	inc dword ptr [ebp - 0x17538b40]
0x3fe9:    b7 1b                              	mov bh, 0x1b
0x3feb:    00 00                              	add byte ptr [eax], al
0x3fed:    8d 76 00                           	lea esi, [esi]
0x3ff0:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x3ff4:    eb d7                              	jmp 0x3fcd <function_3fcd>
; function: function_3ff6 at 0x3ff6 -- 0x3ff7
; dynamically linked function: __stack_chk_fail at 0x3ff7 -- 0x3ff8
; data inside code section at 0x3ff8 -- 0x4006
0x3ff8:    ff ff ff e8 70 1b 00 00  e8 d3 1b 00 00 89         |....p.........  |
; function: function_4006 at 0x4006 -- 0x4007
0x4006:    c3                                 	ret 
; data inside code section at 0x4007 -- 0x4013
0x4007:    89 34 24 e8 01 39 00 00  89 1c 24 e8               |.4$..9....$.    |
; dynamically linked function: _Unwind_Resume at 0x4013 -- 0x4014
; data inside code section at 0x4014 -- 0x4020
0x4014:    ff ff ff 89 f6 8d bc 27  00 00 00 00               |.......'....    |
; function: _Z7IsProxyRK8CNetAddr at 0x4020 -- 0x40d8
0x4020:    57                                 	push edi
0x4021:    56                                 	push esi
0x4022:    53                                 	push ebx
0x4023:    83 ec 30                           	sub esp, 0x30
0x4026:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x402a:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x402e:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4034:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4038:    31 c0                              	xor eax, eax
0x403a:    c7 44 24 14 d0 4c 00 00            	mov dword ptr [esp + 0x14], 0x4cd0
0x4042:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x4047:    89 34 24                           	mov dword ptr [esp], esi
0x404a:    e8 c1 3e 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x404f:    31 f6                              	xor esi, esi
0x4051:    8d 7c 24 1c                        	lea edi, [esp + 0x1c]
0x4055:    8b 86 44 4d 00 00                  	mov eax, dword ptr [esi + 0x4d44]
0x405b:    85 c0                              	test eax, eax
0x405d:    74 61                              	je 0x40c0 <_Z7IsProxyRK8CNetAddr+0xa0>
0x405f:    8b 86 30 4d 00 00                  	mov eax, dword ptr [esi + 0x4d30]
0x4065:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x4069:    89 1c 24                           	mov dword ptr [esp], ebx
0x406c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4070:    8b 86 34 4d 00 00                  	mov eax, dword ptr [esi + 0x4d34]
0x4076:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x407a:    8b 86 38 4d 00 00                  	mov eax, dword ptr [esi + 0x4d38]
0x4080:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x4084:    8b 86 3c 4d 00 00                  	mov eax, dword ptr [esi + 0x4d3c]
0x408a:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x408e:    e8 5d d5 ff ff                     	call 0x15f0 <_ZeqRK8CNetAddrS1_>
0x4093:    84 c0                              	test al, al
0x4095:    74 29                              	je 0x40c0 <_Z7IsProxyRK8CNetAddr+0xa0>
0x4097:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x409c:    be 01 00 00 00                     	mov esi, 1
0x40a1:    75 2e                              	jne 0x40d1 <_Z7IsProxyRK8CNetAddr+0xb1>
0x40a3:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x40a7:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x40ae:    89 f0                              	mov eax, esi
0x40b0:    75 64                              	jne 0x4116 <function_4116>
0x40b2:    83 c4 30                           	add esp, 0x30
0x40b5:    5b                                 	pop ebx
0x40b6:    5e                                 	pop esi
0x40b7:    5f                                 	pop edi
0x40b8:    c3                                 	ret 
; data inside code section at 0x40b9 -- 0x40c0
0x40b9:    8d b4 26 00 00 00 00                               |..&....         |
0x40c0:    83 c6 18                           	add esi, 0x18
0x40c3:    83 fe 60                           	cmp esi, 0x60
0x40c6:    75 8d                              	jne 0x4055 <_Z7IsProxyRK8CNetAddr+0x35>
0x40c8:    31 f6                              	xor esi, esi
0x40ca:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x40cf:    74 d2                              	je 0x40a3 <_Z7IsProxyRK8CNetAddr+0x83>
0x40d1:    8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x40d5:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x40d8 -- 0x40d9
0x40d8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x40d9 -- 0x40da
; data inside code section at 0x40da -- 0x40ee
0x40da:    ff ff ff 85 c0 75 51 8b  43 50 83 e8 01 85 c0 89   |.....uQ.CP......|
0x40ea:    43 50 74 22                                        |CPt"            |
; function: function_40ee at 0x40ee -- 0x40ef
; data inside code section at 0x40ef -- 0x40f5
0x40ef:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x40f5 -- 0x40f6
; data inside code section at 0x40f6 -- 0x4101
0x40f6:    ff ff ff 85 c0 75 1e 89  1c 24 e8                  |.....u...$.     |
; dynamically linked function: pthread_mutex_unlock at 0x4101 -- 0x4102
; data inside code section at 0x4102 -- 0x4104
0x4102:    ff ff                                              |..              |
; function: function_4104 at 0x4104 -- 0x4116
0x4104:    ff 85 c0 74 9a e8                  	inc dword ptr [ebp - 0x17658b40]
0x410a:    96                                 	xchg eax, esi
0x410b:    1a 00                              	sbb al, byte ptr [eax]
0x410d:    00 66 90                           	add byte ptr [esi - 0x70], ah
0x4110:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x4114:    eb d8                              	jmp 0x40ee <function_40ee>
; function: function_4116 at 0x4116 -- 0x4117
; dynamically linked function: __stack_chk_fail at 0x4117 -- 0x4118
; data inside code section at 0x4118 -- 0x411c
0x4118:    ff ff ff e8                                        |....            |
; function: function_411c at 0x411c -- 0x4122
0x411c:    b8 1a 00 00 89                     	mov eax, 0x8900001a
0x4121:    c3                                 	ret 
; data inside code section at 0x4122 -- 0x412e
0x4122:    89 34 24 e8 e6 37 00 00  89 1c 24 e8               |.4$..7....$.    |
; dynamically linked function: _Unwind_Resume at 0x412e -- 0x412f
; data inside code section at 0x412f -- 0x4140
0x412f:    ff ff ff e8 39 1a 00 00  89 f6 8d bc 27 00 00 00   |....9.......'...|
0x413f:    00                                                 |.               |
; function: _Z13HaveNameProxyv at 0x4140 -- 0x4197
0x4140:    56                                 	push esi
0x4141:    53                                 	push ebx
0x4142:    83 ec 24                           	sub esp, 0x24
0x4145:    8d 5c 24 14                        	lea ebx, [esp + 0x14]
0x4149:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x414f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4153:    31 c0                              	xor eax, eax
0x4155:    c7 44 24 14 d0 4c 00 00            	mov dword ptr [esp + 0x14], 0x4cd0
0x415d:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x4162:    89 1c 24                           	mov dword ptr [esp], ebx
0x4165:    e8 a6 3d 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x416a:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x416f:    8b 35 a4 4d 00 00                  	mov esi, dword ptr [0x4da4]
0x4175:    75 19                              	jne 0x4190 <_Z13HaveNameProxyv+0x50>
0x4177:    85 f6                              	test esi, esi
0x4179:    0f 95 c0                           	setne al
0x417c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x4180:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4187:    75 4d                              	jne 0x41d6 <function_41d6>
0x4189:    83 c4 24                           	add esp, 0x24
0x418c:    5b                                 	pop ebx
0x418d:    5e                                 	pop esi
0x418e:    c3                                 	ret 
; data inside code section at 0x418f -- 0x4190
0x418f:    90                                                 |.               |
0x4190:    8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x4194:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4197 -- 0x4198
0x4197:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x4198 -- 0x4199
; data inside code section at 0x4199 -- 0x41ad
0x4199:    ff ff ff 85 c0 75 3b 8b  43 50 83 e8 01 85 c0 89   |.....u;.CP......|
0x41a9:    43 50 74 23                                        |CPt#            |
; function: function_41ad at 0x41ad -- 0x41ae
; data inside code section at 0x41ae -- 0x41b4
0x41ae:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x41b4 -- 0x41b5
; data inside code section at 0x41b5 -- 0x41c0
0x41b5:    ff ff ff 85 c0 75 24 89  1c 24 e8                  |.....u$..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x41c0 -- 0x41c1
; data inside code section at 0x41c1 -- 0x41c4
0x41c1:    ff ff ff                                           |...             |
; function: function_41c4 at 0x41c4 -- 0x41d6
0x41c4:    85 c0                              	test eax, eax
0x41c6:    74 af                              	je 0x4177
0x41c8:    e8 d7 19 00 00                     	call 0x5ba4 <_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.21>
0x41cd:    8d 76 00                           	lea esi, [esi]
0x41d0:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x41d4:    eb d7                              	jmp 0x41ad <function_41ad>
; function: function_41d6 at 0x41d6 -- 0x41d7
; dynamically linked function: __stack_chk_fail at 0x41d7 -- 0x41d8
; data inside code section at 0x41d8 -- 0x4200
0x41d8:    ff ff ff e8 90 19 00 00  c7 44 24 0c 90 6a 00 00   |.........D$..j..|
0x41e8:    c7 44 24 08 93 00 00 00  c7 44 24 04 f0 58 00 00   |.D$......D$..X..|
0x41f8:    c7 04 24 76 4d 00 00 e8                            |..$vM...        |
; dynamically linked function: __assert_fail at 0x4200 -- 0x4201
; data inside code section at 0x4201 -- 0x4212
0x4201:    ff ff ff 89 c6 89 1c 24  e8 02 37 00 00 89 34 24   |.......$..7...4$|
0x4211:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x4212 -- 0x4213
; data inside code section at 0x4213 -- 0x4220
0x4213:    ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _Z8GetProxy7NetworkRSt4pairI8CServiceiE at 0x4220 -- 0x42e7
0x4220:    83 ec 2c                           	sub esp, 0x2c
0x4223:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x4227:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x422b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4231:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4235:    31 c0                              	xor eax, eax
0x4237:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x423b:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x423f:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x4243:    83 fb 03                           	cmp ebx, 3
0x4246:    0f 87 e7 00 00 00                  	ja 0x4333 <function_4333>
0x424c:    8d 7c 24 14                        	lea edi, [esp + 0x14]
0x4250:    c7 44 24 14 d0 4c 00 00            	mov dword ptr [esp + 0x14], 0x4cd0
0x4258:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x425d:    89 3c 24                           	mov dword ptr [esp], edi
0x4260:    e8 ab 3c 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x4265:    8d 04 5b                           	lea eax, [ebx + ebx*2]
0x4268:    31 ff                              	xor edi, edi
0x426a:    c1 e0 03                           	shl eax, 3
0x426d:    8b 90 44 4d 00 00                  	mov edx, dword ptr [eax + 0x4d44]
0x4273:    85 d2                              	test edx, edx
0x4275:    75 31                              	jne 0x42a8 <_Z8GetProxy7NetworkRSt4pairI8CServiceiE+0x88>
0x4277:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x427c:    75 62                              	jne 0x42e0 <_Z8GetProxy7NetworkRSt4pairI8CServiceiE+0xc0>
0x427e:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x4282:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4289:    89 f8                              	mov eax, edi
0x428b:    0f 85 9d 00 00 00                  	jne 0x432e <function_432e>
0x4291:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x4295:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x4299:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x429d:    83 c4 2c                           	add esp, 0x2c
0x42a0:    c3                                 	ret 
; data inside code section at 0x42a1 -- 0x42a8
0x42a1:    8d b4 26 00 00 00 00                               |..&....         |
0x42a8:    8d 90 30 4d 00 00                  	lea edx, [eax + 0x4d30]
0x42ae:    8b 80 30 4d 00 00                  	mov eax, dword ptr [eax + 0x4d30]
0x42b4:    bf 01 00 00 00                     	mov edi, 1
0x42b9:    80 7c 24 18 00                     	cmp byte ptr [esp + 0x18], 0
0x42be:    89 06                              	mov dword ptr [esi], eax
0x42c0:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x42c3:    89 46 04                           	mov dword ptr [esi + 4], eax
0x42c6:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x42c9:    89 46 08                           	mov dword ptr [esi + 8], eax
0x42cc:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x42cf:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x42d2:    8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0x42d5:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x42d8:    8b 42 14                           	mov eax, dword ptr [edx + 0x14]
0x42db:    89 46 14                           	mov dword ptr [esi + 0x14], eax
0x42de:    74 9e                              	je 0x427e <_Z8GetProxy7NetworkRSt4pairI8CServiceiE+0x5e>
0x42e0:    8b 5c 24 14                        	mov ebx, dword ptr [esp + 0x14]
0x42e4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x42e7 -- 0x42e8
0x42e7:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x42e8 -- 0x42e9
; data inside code section at 0x42e9 -- 0x42fd
0x42e9:    ff ff ff 85 c0 75 67 8b  43 50 83 e8 01 85 c0 89   |.....ug.CP......|
0x42f9:    43 50 74 2b                                        |CPt+            |
; function: function_42fd at 0x42fd -- 0x42fe
; data inside code section at 0x42fe -- 0x4304
0x42fe:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x4304 -- 0x4305
; data inside code section at 0x4305 -- 0x4310
0x4305:    ff ff ff 85 c0 75 50 89  1c 24 e8                  |.....uP..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x4310 -- 0x4311
; data inside code section at 0x4311 -- 0x4314
0x4311:    ff ff ff                                           |...             |
; function: function_4314 at 0x4314 -- 0x432e
0x4314:    85 c0                              	test eax, eax
0x4316:    0f 84 62 ff ff ff                  	je 0x427e
0x431c:    e8 83 18 00 00                     	call 0x5ba4 <_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.21>
0x4321:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x4328:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x432c:    eb cf                              	jmp 0x42fd <function_42fd>
; function: function_432e at 0x432e -- 0x432f
; dynamically linked function: __stack_chk_fail at 0x432f -- 0x4330
; data inside code section at 0x4330 -- 0x4333
0x4330:    ff ff ff                                           |...             |
; function: function_4333 at 0x4333 -- 0x4352
0x4333:    c7 44 24 0c 50 6b 00 00            	mov dword ptr [esp + 0xc], 0x6b50 ; "bool GetProxy(Network, proxyType&)"
0x433b:    c7 44 24 08 b1 01 00 00            	mov dword ptr [esp + 8], 0x1b1
0x4343:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x434b:    c7 04 24 e3 4f 00 00               	mov dword ptr [esp], 0x4fe3 ; "net >= 0 && net < NET_MAX"
; data inside code section at 0x4352 -- 0x4353
0x4352:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x4353 -- 0x4354
; data inside code section at 0x4354 -- 0x4362
0x4354:    ff ff ff e8 14 18 00 00  e8 77 18 00 00 89         |.........w....  |
; function: function_4362 at 0x4362 -- 0x4363
0x4362:    c3                                 	ret 
; data inside code section at 0x4363 -- 0x436f
0x4363:    89 3c 24 e8 a5 35 00 00  89 1c 24 e8               |.<$..5....$.    |
; dynamically linked function: _Unwind_Resume at 0x436f -- 0x4370
; data inside code section at 0x4370 -- 0x4380
0x4370:    ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: _Z13ConnectSocketRK8CServiceRji at 0x4380 -- 0x448b
0x4380:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x4386:    89 b4 24 80 00 00 00               	mov dword ptr [esp + 0x80], esi
0x438d:    8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x4394:    89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0x4398:    8d 5c 24 2c                        	lea ebx, [esp + 0x2c]
0x439c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x43a2:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x43a6:    31 c0                              	xor eax, eax
0x43a8:    89 bc 24 84 00 00 00               	mov dword ptr [esp + 0x84], edi
0x43af:    8b bc 24 94 00 00 00               	mov edi, dword ptr [esp + 0x94]
0x43b6:    89 ac 24 88 00 00 00               	mov dword ptr [esp + 0x88], ebp
0x43bd:    8b ac 24 98 00 00 00               	mov ebp, dword ptr [esp + 0x98]
0x43c4:    89 1c 24                           	mov dword ptr [esp], ebx
0x43c7:    e8 54 d6 ff ff                     	call 0x1a20 <CService>
0x43cc:    89 34 24                           	mov dword ptr [esp], esi
0x43cf:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x43d7:    e8 54 d1 ff ff                     	call 0x1530 <_ZNK8CNetAddr10GetNetworkEv>
0x43dc:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x43e0:    89 04 24                           	mov dword ptr [esp], eax
0x43e3:    e8 38 fe ff ff                     	call 0x4220 <_Z8GetProxy7NetworkRSt4pairI8CServiceiE>
0x43e8:    84 c0                              	test al, al
0x43ea:    74 64                              	je 0x4450 <_Z13ConnectSocketRK8CServiceRji+0xd0>
0x43ec:    89 e9                              	mov ecx, ebp
0x43ee:    89 d8                              	mov eax, ebx
0x43f0:    8d 54 24 14                        	lea edx, [esp + 0x14]
0x43f4:    c7 44 24 14 ff ff ff ff            	mov dword ptr [esp + 0x14], 0xffffffff
0x43fc:    e8 8f e5 ff ff                     	call 0x2990 <ConnectSocketDirectly>
0x4401:    84 c0                              	test al, al
0x4403:    74 12                              	je 0x4417 <_Z13ConnectSocketRK8CServiceRji+0x97>
0x4405:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x4409:    83 f8 04                           	cmp eax, 4
0x440c:    0f 84 96 00 00 00                  	je 0x44a8 <function_44a8>
0x4412:    83 f8 05                           	cmp eax, 5
0x4415:    74 49                              	je 0x4460 <_Z13ConnectSocketRK8CServiceRji+0xe0>
0x4417:    31 db                              	xor ebx, ebx
0x4419:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x441d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4424:    89 d8                              	mov eax, ebx
0x4426:    0f 85 b0 02 00 00                  	jne 0x46dc <function_46dc>
0x442c:    8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0x4430:    8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x4437:    8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0x443e:    8b ac 24 88 00 00 00               	mov ebp, dword ptr [esp + 0x88]
0x4445:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x444b:    c3                                 	ret 
; data inside code section at 0x444c -- 0x4450
0x444c:    8d 74 26 00                                        |.t&.            |
0x4450:    89 e9                              	mov ecx, ebp
0x4452:    89 fa                              	mov edx, edi
0x4454:    89 f0                              	mov eax, esi
0x4456:    e8 35 e5 ff ff                     	call 0x2990 <ConnectSocketDirectly>
0x445b:    89 c3                              	mov ebx, eax
0x445d:    eb ba                              	jmp 0x4419 <_Z13ConnectSocketRK8CServiceRji+0x99>
; data inside code section at 0x445f -- 0x4460
0x445f:    90                                                 |.               |
0x4460:    8d 5c 24 18                        	lea ebx, [esp + 0x18]
0x4464:    0f b7 6e 10                        	movzx ebp, word ptr [esi + 0x10]
0x4468:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x446c:    89 1c 24                           	mov dword ptr [esp], ebx
0x446f:    e8 2c dd ff ff                     	call 0x21a0 <_ZNK8CNetAddr10ToStringIPEv>
0x4474:    89 d8                              	mov eax, ebx
0x4476:    89 ea                              	mov edx, ebp
0x4478:    83 ec 04                           	sub esp, 4
0x447b:    8d 4c 24 14                        	lea ecx, [esp + 0x14]
0x447f:    e8 7c bb ff ff                     	call 0
0x4484:    89 c6                              	mov esi, eax
0x4486:    89 1c 24                           	mov dword ptr [esp], ebx
0x4489:    31 db                              	xor ebx, ebx
; data inside code section at 0x448b -- 0x448c
0x448b:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x448c -- 0x448d
; data inside code section at 0x448d -- 0x4490
0x448d:    ff ff ff                                           |...             |
; function: function_4490 at 0x4490 -- 0x44a6
0x4490:    89 f2                              	mov edx, esi
0x4492:    84 d2                              	test dl, dl
0x4494:    74 83                              	je 0x4419
0x4496:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x449a:    bb 01 00 00 00                     	mov ebx, 1
0x449f:    89 07                              	mov dword ptr [edi], eax
0x44a1:    e9 73 ff ff ff                     	jmp 0x4419
; data inside code section at 0x44a6 -- 0x44a8
0x44a6:    66 90                                              |f.              |
; function: function_44a8 at 0x44a8 -- 0x44ca
0x44a8:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x44ac:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x44b0:    89 1c 24                           	mov dword ptr [esp], ebx
0x44b3:    e8 98 e1 ff ff                     	call 0x2650 <_ZNK8CService14ToStringIPPortEv>
0x44b8:    83 ec 04                           	sub esp, 4
0x44bb:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x44bf:    c7 04 24 fd 4f 00 00               	mov dword ptr [esp], 0x4ffd ; "SOCKS4 connecting %s\n"
0x44c6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x44ca -- 0x44cb
0x44ca:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x44cb -- 0x44cc
; data inside code section at 0x44cc -- 0x44e2
0x44cc:    ff ff ff 8b 44 24 24 8d  50 f4 81 fa 00 00 00 00   |....D$$.P.......|
0x44dc:    0f 85 17 02 00 00                                  |......          |
; function: function_44e2 at 0x44e2 -- 0x4573
0x44e2:    89 34 24                           	mov dword ptr [esp], esi
0x44e5:    e8 16 c9 ff ff                     	call 0xe00 <_ZNK8CNetAddr6IsIPv4Ev>
0x44ea:    84 c0                              	test al, al
0x44ec:    0f 84 de 00 00 00                  	je 0x45d0 <function_45d0>
0x44f2:    a1 74 69 00 00                     	mov eax, dword ptr [0x6974]
0x44f7:    8d 5c 24 44                        	lea ebx, [esp + 0x44]
0x44fb:    c7 44 24 1c 10 00 00 00            	mov dword ptr [esp + 0x1c], 0x10
0x4503:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x4507:    89 34 24                           	mov dword ptr [esp], esi
0x450a:    89 44 24 57                        	mov dword ptr [esp + 0x57], eax
0x450e:    a1 78 69 00 00                     	mov eax, dword ptr [0x6978]
0x4513:    89 44 24 5b                        	mov dword ptr [esp + 0x5b], eax
0x4517:    a1 7c 69 00 00                     	mov eax, dword ptr [0x697c] ; "user"
0x451c:    89 44 24 5f                        	mov dword ptr [esp + 0x5f], eax
0x4520:    0f b6 05 80 69 00 00               	movzx eax, byte ptr [0x6980]
0x4527:    88 44 24 63                        	mov byte ptr [esp + 0x63], al
0x452b:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x452f:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x4533:    e8 d8 da ff ff                     	call 0x2010 <_ZNK8CService11GetSockAddrEP8sockaddrPj>
0x4538:    84 c0                              	test al, al
0x453a:    74 6c                              	je 0x45a8 <function_45a8>
0x453c:    66 83 7c 24 44 02                  	cmp word ptr [esp + 0x44], 2
0x4542:    75 64                              	jne 0x45a8 <function_45a8>
0x4544:    0f b7 43 02                        	movzx eax, word ptr [ebx + 2]
0x4548:    66 89 44 24 59                     	mov word ptr [esp + 0x59], ax
0x454d:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x4550:    c7 44 24 0c 00 40 00 00            	mov dword ptr [esp + 0xc], 0x4000
0x4558:    c7 44 24 08 0d 00 00 00            	mov dword ptr [esp + 8], 0xd
0x4560:    89 44 24 5b                        	mov dword ptr [esp + 0x5b], eax
0x4564:    8d 44 24 57                        	lea eax, [esp + 0x57]
0x4568:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x456c:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x4570:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x4573 -- 0x4574
0x4573:    e8                                                 |.               |
; dynamically linked function: send at 0x4574 -- 0x4575
; data inside code section at 0x4575 -- 0x458a
0x4575:    ff ff ff 83 f8 0d 74 7a  8b 44 24 14 83 f8 ff 74   |......tz.D$....t|
0x4585:    10 89 04 24 e8                                     |...$.           |
; dynamically linked function: close at 0x458a -- 0x458b
; data inside code section at 0x458b -- 0x459e
0x458b:    ff ff ff c7 44 24 14 ff  ff ff ff c7 04 24 bd 4d   |....D$.......$.M|
0x459b:    00 00 e8                                           |...             |
; dynamically linked function: _Z5errorPKcz at 0x459e -- 0x459f
; data inside code section at 0x459f -- 0x45a2
0x459f:    ff ff ff                                           |...             |
; function: function_45a2 at 0x45a2 -- 0x45a4
0x45a2:    eb 1d                              	jmp 0x45c1 <function_45c1>
; data inside code section at 0x45a4 -- 0x45a8
0x45a4:    8d 74 26 00                                        |.t&.            |
; function: function_45a8 at 0x45a8 -- 0x45bc
0x45a8:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x45ac:    83 f8 ff                           	cmp eax, -1
0x45af:    0f 85 b4 00 00 00                  	jne 0x4669 <function_4669>
0x45b5:    c7 04 24 28 5b 00 00               	mov dword ptr [esp], 0x5b28 ; "Cannot get proxy destination address"
; data inside code section at 0x45bc -- 0x45bd
0x45bc:    e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x45bd -- 0x45be
; data inside code section at 0x45be -- 0x45c1
0x45be:    ff ff ff                                           |...             |
; function: function_45c1 at 0x45c1 -- 0x45d0
0x45c1:    31 db                              	xor ebx, ebx
0x45c3:    84 c0                              	test al, al
0x45c5:    0f 85 cb fe ff ff                  	jne 0x4496 <function_4496>
0x45cb:    e9 49 fe ff ff                     	jmp 0x4419
; function: function_45d0 at 0x45d0 -- 0x45dc
0x45d0:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x45d4:    83 f8 ff                           	cmp eax, -1
0x45d7:    74 10                              	je 0x45e9 <function_45e9>
0x45d9:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x45dc -- 0x45dd
0x45dc:    e8                                                 |.               |
; dynamically linked function: close at 0x45dd -- 0x45de
; data inside code section at 0x45de -- 0x45e9
0x45de:    ff ff ff c7 44 24 14 ff  ff ff ff                  |....D$.....     |
; function: function_45e9 at 0x45e9 -- 0x45f0
0x45e9:    c7 04 24 13 50 00 00               	mov dword ptr [esp], 0x5013 ; "Proxy destination is not IPv4"
; data inside code section at 0x45f0 -- 0x45f1
0x45f0:    e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x45f1 -- 0x45f2
; data inside code section at 0x45f2 -- 0x45f5
0x45f2:    ff ff ff                                           |...             |
; function: function_45f5 at 0x45f5 -- 0x45f7
0x45f5:    eb ca                              	jmp 0x45c1 <function_45c1>
; data inside code section at 0x45f7 -- 0x4617
0x45f7:    8d 44 24 64 89 44 24 04  8b 44 24 14 c7 44 24 0c   |.D$d.D$..D$..D$.|
0x4607:    00 00 00 00 c7 44 24 08  08 00 00 00 89 04 24 e8   |.....D$.......$.|
; dynamically linked function: recv at 0x4617 -- 0x4618
; data inside code section at 0x4618 -- 0x4636
0x4618:    ff ff ff 83 f8 08 75 5e  0f b6 44 24 65 3c 5a 74   |......u^..D$e<Zt|
0x4628:    7f 8b 54 24 14 83 fa ff  74 15 89 14 24 e8         |..T$....t...$.  |
; dynamically linked function: close at 0x4636 -- 0x4637
; data inside code section at 0x4637 -- 0x4660
0x4637:    ff ff ff 0f b6 44 24 65  c7 44 24 14 ff ff ff ff   |.....D$e.D$.....|
0x4647:    31 db 3c 5b 0f 84 c8 fd  ff ff 0f be c0 89 44 24   |1.<[..........D$|
0x4657:    04 c7 04 24 50 5b 00 00  e8                        |...$P[...       |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x4660 -- 0x4661
; data inside code section at 0x4661 -- 0x4664
0x4661:    ff ff ff                                           |...             |
; function: function_4664 at 0x4664 -- 0x4669
0x4664:    e9 b0 fd ff ff                     	jmp 0x4419
; function: function_4669 at 0x4669 -- 0x466c
0x4669:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x466c -- 0x466d
0x466c:    e8                                                 |.               |
; dynamically linked function: close at 0x466d -- 0x466e
; data inside code section at 0x466e -- 0x4671
0x466e:    ff ff ff                                           |...             |
; function: function_4671 at 0x4671 -- 0x467e
0x4671:    c7 44 24 14 ff ff ff ff            	mov dword ptr [esp + 0x14], 0xffffffff
0x4679:    e9 37 ff ff ff                     	jmp 0x45b5
; data inside code section at 0x467e -- 0x468b
0x467e:    8b 44 24 14 83 f8 ff 74  10 89 04 24 e8            |.D$....t...$.   |
; dynamically linked function: close at 0x468b -- 0x468c
; data inside code section at 0x468c -- 0x469f
0x468c:    ff ff ff c7 44 24 14 ff  ff ff ff c7 04 24 d4 4d   |....D$.......$.M|
0x469c:    00 00 e8                                           |...             |
; dynamically linked function: _Z5errorPKcz at 0x469f -- 0x46a0
; data inside code section at 0x46a0 -- 0x46a3
0x46a0:    ff ff ff                                           |...             |
; function: function_46a3 at 0x46a3 -- 0x46a8
0x46a3:    e9 19 ff ff ff                     	jmp 0x45c1 <function_45c1>
; data inside code section at 0x46a8 -- 0x46cb
0x46a8:    8d 5c 24 20 89 74 24 04  89 1c 24 e8 98 df ff ff   |.\$ .t$...$.....|
0x46b8:    83 ec 04 8b 44 24 20 c7  04 24 31 50 00 00 89 44   |....D$ ..$1P...D|
0x46c8:    24 04 e8                                           |$..             |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x46cb -- 0x46cc
; data inside code section at 0x46cc -- 0x46d3
0x46cc:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x46d3 -- 0x46d4
; data inside code section at 0x46d4 -- 0x46d7
0x46d4:    ff ff ff                                           |...             |
; function: function_46d7 at 0x46d7 -- 0x46dc
0x46d7:    e9 ba fd ff ff                     	jmp 0x4496 <function_4496>
; function: function_46dc at 0x46dc -- 0x46e0
0x46dc:    8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0x46e0 -- 0x46e1
0x46e0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x46e1 -- 0x46e2
; data inside code section at 0x46e2 -- 0x46e5
0x46e2:    ff ff ff                                           |...             |
; function: function_46e5 at 0x46e5 -- 0x46e6
; data inside code section at 0x46e6 -- 0x46eb
0x46e6:    c6 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZNSsD1Ev at 0x46eb -- 0x46ec
; data inside code section at 0x46ec -- 0x46f3
0x46ec:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x46f3 -- 0x46f4
; data inside code section at 0x46f4 -- 0x46f7
0x46f4:    ff ff ff                                           |...             |
; function: function_46f7 at 0x46f7 -- 0x46f9
0x46f7:    eb ec                              	jmp 0x46e5 <function_46e5>
; data inside code section at 0x46f9 -- 0x46fa
0x46f9:    b9                                                 |.               |
; dynamically linked function: pthread_cancel at 0x46fa -- 0x471d
; data inside code section at 0x471d -- 0x471e
0x471d:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x471e -- 0x471f
; data inside code section at 0x471f -- 0x4722
0x471f:    ff ff ff                                           |...             |
; function: function_4722 at 0x4722 -- 0x4727
0x4722:    e9 bb fd ff ff                     	jmp 0x44e2 <function_44e2>
; function: function_4727 at 0x4727 -- 0x4729
0x4727:    eb bc                              	jmp 0x46e5 <function_46e5>
; function: function_4729 at 0x4729 -- 0x4734
0x4729:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x472c:    8d 59 ff                           	lea ebx, [ecx - 1]
0x472f:    89 58 fc                           	mov dword ptr [eax - 4], ebx
0x4732:    eb d6                              	jmp 0x470a
; data inside code section at 0x4734 -- 0x4740
0x4734:    8d b6 00 00 00 00 8d bf  00 00 00 00               |............    |
; function: _Z19ConnectSocketByNameR8CServiceRjPKcii at 0x4740 -- 0x47a3
0x4740:    55                                 	push ebp
0x4741:    57                                 	push edi
0x4742:    56                                 	push esi
0x4743:    53                                 	push ebx
0x4744:    81 ec ac 00 00 00                  	sub esp, 0xac
0x474a:    8b 84 24 c4 00 00 00               	mov eax, dword ptr [esp + 0xc4]
0x4751:    8d 7c 24 40                        	lea edi, [esp + 0x40]
0x4755:    8b 94 24 d0 00 00 00               	mov edx, dword ptr [esp + 0xd0]
0x475c:    8b 9c 24 c0 00 00 00               	mov ebx, dword ptr [esp + 0xc0]
0x4763:    c7 44 24 38 0c 00 00 00            	mov dword ptr [esp + 0x38], 0xc
0x476b:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x476f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4775:    89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x477c:    31 c0                              	xor eax, eax
0x477e:    8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0x4785:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x4789:    89 3c 24                           	mov dword ptr [esp], edi
0x478c:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x4790:    8d 44 24 4f                        	lea eax, [esp + 0x4f]
0x4794:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x4798:    8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0x479f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x47a3 -- 0x47a4
0x47a3:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x47a4 -- 0x47a5
; data inside code section at 0x47a5 -- 0x47c4
0x47a5:    ff ff ff 8d 74 24 38 8d  44 24 3c 89 74 24 08 89   |....t$8.D$<.t$..|
0x47b5:    44 24 04 89 3c 24 e8 70  c0 ff ff 89 3c 24 e8      |D$..<$.p....<$. |
; dynamically linked function: _ZNSsD1Ev at 0x47c4 -- 0x47c5
; data inside code section at 0x47c5 -- 0x4822
0x47c5:    ff ff ff 8d 54 24 50 c7  44 24 44 ff ff ff ff 89   |....T$P.D$D.....|
0x47d5:    14 24 e8 44 d2 ff ff 8d  44 24 50 c7 44 24 64 00   |.$.D....D$P.D$d.|
0x47e5:    00 00 00 89 04 24 e8 30  f7 ff ff 8b 54 24 3c 31   |.....$.0....T$<1|
0x47f5:    c0 80 3d b0 4c 00 00 00  89 54 24 24 74 0b 8b 7c   |..=.L....T$$t..||
0x4805:    24 64 31 c0 85 ff 0f 94  c0 89 44 24 08 8d 84 24   |$d1.......D$...$|
0x4815:    8c 00 00 00 89 74 24 04  89 04 24 e8 6b            |.....t$...$.k   |
; function: function_4822 at 0x4822 -- 0x4827
0x4822:    e9 ff ff 0f b7                     	jmp 0xb7104826 <function_b7104826>
; data inside code section at 0x4827 -- 0x486c
0x4827:    44 24 24 8b 94 24 8c 00  00 00 8b 8c 24 98 00 00   |D$$..$......$...|
0x4837:    00 8b ac 24 90 00 00 00  8b bc 24 94 00 00 00 66   |...$......$....f|
0x4847:    89 44 24 78 8d 44 24 68  89 04 24 89 54 24 68 89   |.D$x.D$h..$.T$h.|
0x4857:    4c 24 74 89 54 24 20 89  4c 24 1c 89 6c 24 6c 89   |L$t.T$ .L$..l$l.|
0x4867:    7c 24 70 e8 a1                                     ||$p..           |
; function: function_486c at 0x486c -- 0x486f
0x486c:    ca ff ff                           	retf -1
; data inside code section at 0x486f -- 0x48a8
0x486f:    8b 54 24 20 8b 4c 24 1c  84 c0 74 5d 89 13 0f b7   |.T$ .L$...t]....|
0x487f:    54 24 24 8b 44 24 28 89  6b 04 89 7b 08 66 89 53   |T$$.D$(.k..{.f.S|
0x488f:    10 8b 54 24 2c 89 4b 0c  89 44 24 08 89 1c 24 89   |..T$,.K..D$...$.|
0x489f:    54 24 04 e8 d9 fa ff ff  89                        |T$.......       |
; function: function_48a8 at 0x48a8 -- 0x48a9
0x48a8:    c3                                 	ret 
; function: function_48a9 at 0x48a9 -- 0x48aa
; data inside code section at 0x48aa -- 0x48ad
0x48aa:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x48ad -- 0x48ae
; data inside code section at 0x48ae -- 0x48b0
0x48ae:    ff ff                                              |..              |
; function: function_48b0 at 0x48b0 -- 0x48d2
0x48b0:    ff 89 d8 8b 94 24                  	dec dword ptr [ecx + 0x24948bd8]
0x48b6:    9c                                 	pushfd 
0x48b7:    00 00                              	add byte ptr [eax], al
0x48b9:    00 65 33                           	add byte ptr [ebp + 0x33], ah
0x48bc:    15 14 00 00 00                     	adc eax, 0x14
0x48c1:    0f 85 dc 00 00 00                  	jne 0x49a3 <function_49a3>
0x48c7:    81 c4 ac 00 00 00                  	add esp, 0xac
0x48cd:    5b                                 	pop ebx
0x48ce:    5e                                 	pop esi
0x48cf:    5f                                 	pop edi
0x48d0:    5d                                 	pop ebp
0x48d1:    c3                                 	ret 
; data inside code section at 0x48d2 -- 0x48d8
0x48d2:    8d b6 00 00 00 00                                  |......          |
; function: function_48d8 at 0x48d8 -- 0x4967
0x48d8:    8d 44 24 7a                        	lea eax, [esp + 0x7a]
0x48dc:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x48e4:    c7 44 24 04 46 50 00 00            	mov dword ptr [esp + 4], 0x5046 ; "0.0.0.0:0"
0x48ec:    89 04 24                           	mov dword ptr [esp], eax
0x48ef:    e8 5c f3 ff ff                     	call 0x3c50 <CService>
0x48f4:    8b 44 24 7a                        	mov eax, dword ptr [esp + 0x7a]
0x48f8:    8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0x48fc:    89 03                              	mov dword ptr [ebx], eax
0x48fe:    8b 44 24 7e                        	mov eax, dword ptr [esp + 0x7e]
0x4902:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x4905:    8b 84 24 82 00 00 00               	mov eax, dword ptr [esp + 0x82]
0x490c:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x490f:    8b 84 24 86 00 00 00               	mov eax, dword ptr [esp + 0x86]
0x4916:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x4919:    0f b7 84 24 8a 00 00 00            	movzx eax, word ptr [esp + 0x8a]
0x4921:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x4925:    31 db                              	xor ebx, ebx
0x4927:    85 c9                              	test ecx, ecx
0x4929:    0f 84 7a ff ff ff                  	je 0x48a9 <function_48a9>
0x492f:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x4933:    8d 54 24 44                        	lea edx, [esp + 0x44]
0x4937:    8d 44 24 50                        	lea eax, [esp + 0x50]
0x493b:    e8 50 e0 ff ff                     	call 0x2990 <ConnectSocketDirectly>
0x4940:    84 c0                              	test al, al
0x4942:    74 07                              	je 0x494b <function_48d8+0x73>
0x4944:    83 7c 24 64 05                     	cmp dword ptr [esp + 0x64], 5
0x4949:    74 0d                              	je 0x4958 <function_48d8+0x80>
0x494b:    31 db                              	xor ebx, ebx
0x494d:    e9 57 ff ff ff                     	jmp 0x48a9 <function_48a9>
; data inside code section at 0x4952 -- 0x4958
0x4952:    8d b6 00 00 00 00                                  |......          |
0x4958:    8d 5c 24 48                        	lea ebx, [esp + 0x48]
0x495c:    8b 7c 24 3c                        	mov edi, dword ptr [esp + 0x3c]
0x4960:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x4964:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4967 -- 0x4968
0x4967:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x4968 -- 0x4969
; data inside code section at 0x4969 -- 0x4981
0x4969:    ff ff ff 8d 4c 24 44 89  fa 89 d8 e8 87 b6 ff ff   |....L$D.........|
0x4979:    89 c7 89 1c 24 31 db e8                            |....$1..        |
; dynamically linked function: _ZNSsD1Ev at 0x4981 -- 0x4982
; data inside code section at 0x4982 -- 0x4985
0x4982:    ff ff ff                                           |...             |
; function: function_4985 at 0x4985 -- 0x49a3
0x4985:    89 f8                              	mov eax, edi
0x4987:    84 c0                              	test al, al
0x4989:    0f 84 1a ff ff ff                  	je 0x48a9 <function_48a9>
0x498f:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x4993:    bb 01 00 00 00                     	mov ebx, 1
0x4998:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x499c:    89 02                              	mov dword ptr [edx], eax
0x499e:    e9 06 ff ff ff                     	jmp 0x48a9 <function_48a9>
; function: function_49a3 at 0x49a3 -- 0x49a4
; dynamically linked function: __stack_chk_fail at 0x49a4 -- 0x49a5
; data inside code section at 0x49a5 -- 0x49a9
0x49a5:    ff ff ff 89                                        |....            |
; function: function_49a9 at 0x49a9 -- 0x49aa
0x49a9:    c3                                 	ret 
; data inside code section at 0x49aa -- 0x49ae
0x49aa:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x49ae -- 0x49af
; data inside code section at 0x49af -- 0x49b4
0x49af:    ff ff ff 89 d8                                     |.....           |
; function: function_49b4 at 0x49b4 -- 0x49b5
; function: function_49b5 at 0x49b5 -- 0x49b6
0x49b5:    c3                                 	ret 
; function: function_49b6 at 0x49b6 -- 0x49b7
; data inside code section at 0x49b7 -- 0x49ba
0x49b7:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x49ba -- 0x49bb
; data inside code section at 0x49bb -- 0x49c2
0x49bb:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x49c2 -- 0x49c3
; data inside code section at 0x49c3 -- 0x49c6
0x49c3:    ff ff ff                                           |...             |
; function: function_49c6 at 0x49c6 -- 0x49cc
0x49c6:    8d 74 24 38                        	lea esi, [esp + 0x38]
0x49ca:    eb e8                              	jmp 0x49b4 <function_49b4>
; function: function_49cc at 0x49cc -- 0x49ce
0x49cc:    eb e6                              	jmp 0x49b4 <function_49b4>
; data inside code section at 0x49ce -- 0x49d6
0x49ce:    89 c7 89 1c 24 89 fb e8                            |....$...        |
; dynamically linked function: _ZNSsD1Ev at 0x49d6 -- 0x49d7
; data inside code section at 0x49d7 -- 0x49da
0x49d7:    ff ff ff                                           |...             |
; function: function_49da at 0x49da -- 0x49dc
0x49da:    eb da                              	jmp 0x49b6 <function_49b6>
; data inside code section at 0x49dc -- 0x49e0
0x49dc:    8d 74 26 00                                        |.t&.            |
; function: _Z8SetProxy7Network8CServicei at 0x49e0 -- 0x4b5d
0x49e0:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x49e6:    8b 84 24 94 00 00 00               	mov eax, dword ptr [esp + 0x94]
0x49ed:    89 b4 24 80 00 00 00               	mov dword ptr [esp + 0x80], esi
0x49f4:    8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x49fb:    89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0x49ff:    8b 9c 24 a8 00 00 00               	mov ebx, dword ptr [esp + 0xa8]
0x4a06:    89 bc 24 84 00 00 00               	mov dword ptr [esp + 0x84], edi
0x4a0d:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4a11:    8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x4a18:    89 ac 24 88 00 00 00               	mov dword ptr [esp + 0x88], ebp
0x4a1f:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x4a23:    8b 84 24 9c 00 00 00               	mov eax, dword ptr [esp + 0x9c]
0x4a2a:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x4a2e:    8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x4a35:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x4a39:    0f b7 84 24 a4 00 00 00            	movzx eax, word ptr [esp + 0xa4]
0x4a41:    66 89 44 24 2c                     	mov word ptr [esp + 0x2c], ax
0x4a46:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4a4c:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x4a50:    31 c0                              	xor eax, eax
0x4a52:    83 fe 03                           	cmp esi, 3
0x4a55:    0f 87 46 01 00 00                  	ja 0x4ba1 <function_4ba1>
0x4a5b:    85 db                              	test ebx, ebx
0x4a5d:    0f 95 c0                           	setne al
0x4a60:    83 fb 04                           	cmp ebx, 4
0x4a63:    74 43                              	je 0x4aa8 <_Z8SetProxy7Network8CServicei+0xc8>
0x4a65:    84 c0                              	test al, al
0x4a67:    74 57                              	je 0x4ac0 <_Z8SetProxy7Network8CServicei+0xe0>
0x4a69:    31 c0                              	xor eax, eax
0x4a6b:    83 fb 05                           	cmp ebx, 5
0x4a6e:    74 3c                              	je 0x4aac <_Z8SetProxy7Network8CServicei+0xcc>
0x4a70:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x4a74:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4a7b:    0f 85 1b 01 00 00                  	jne 0x4b9c <function_4b9c>
0x4a81:    8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0x4a85:    8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x4a8c:    8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0x4a93:    8b ac 24 88 00 00 00               	mov ebp, dword ptr [esp + 0x88]
0x4a9a:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x4aa0:    c3                                 	ret 
; data inside code section at 0x4aa1 -- 0x4aa8
0x4aa1:    8d b4 26 00 00 00 00                               |..&....         |
0x4aa8:    84 c0                              	test al, al
0x4aaa:    74 14                              	je 0x4ac0 <_Z8SetProxy7Network8CServicei+0xe0>
0x4aac:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x4ab0:    89 04 24                           	mov dword ptr [esp], eax
0x4ab3:    e8 58 c8 ff ff                     	call 0x1310 <_ZNK8CNetAddr7IsValidEv>
0x4ab8:    89 c2                              	mov edx, eax
0x4aba:    31 c0                              	xor eax, eax
0x4abc:    84 d2                              	test dl, dl
0x4abe:    74 b0                              	je 0x4a70 <_Z8SetProxy7Network8CServicei+0x90>
0x4ac0:    8d 7c 24 38                        	lea edi, [esp + 0x38]
0x4ac4:    c7 44 24 38 d0 4c 00 00            	mov dword ptr [esp + 0x38], 0x4cd0
0x4acc:    c6 44 24 3c 00                     	mov byte ptr [esp + 0x3c], 0
0x4ad1:    89 3c 24                           	mov dword ptr [esp], edi
0x4ad4:    e8 37 34 00 00                     	call 0x7f10 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv>
0x4ad9:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x4add:    8d 34 76                           	lea esi, [esi + esi*2]
0x4ae0:    0f b7 44 24 2c                     	movzx eax, word ptr [esp + 0x2c]
0x4ae5:    c1 e6 03                           	shl esi, 3
0x4ae8:    8b 6c 24 1c                        	mov ebp, dword ptr [esp + 0x1c]
0x4aec:    8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0x4af0:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x4af4:    66 89 44 24 50                     	mov word ptr [esp + 0x50], ax
0x4af9:    89 54 24 66                        	mov dword ptr [esp + 0x66], edx
0x4afd:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x4b01:    89 96 3c 4d 00 00                  	mov dword ptr [esi + 0x4d3c], edx
0x4b07:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x4b0b:    80 7c 24 3c 00                     	cmp byte ptr [esp + 0x3c], 0
0x4b10:    66 89 44 24 6a                     	mov word ptr [esp + 0x6a], ax
0x4b15:    b8 01 00 00 00                     	mov eax, 1
0x4b1a:    89 6c 24 5a                        	mov dword ptr [esp + 0x5a], ebp
0x4b1e:    89 7c 24 5e                        	mov dword ptr [esp + 0x5e], edi
0x4b22:    89 4c 24 62                        	mov dword ptr [esp + 0x62], ecx
0x4b26:    89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0x4b2a:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x4b2e:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x4b32:    89 ae 30 4d 00 00                  	mov dword ptr [esi + 0x4d30], ebp
0x4b38:    89 be 34 4d 00 00                  	mov dword ptr [esi + 0x4d34], edi
0x4b3e:    89 8e 38 4d 00 00                  	mov dword ptr [esi + 0x4d38], ecx
0x4b44:    89 96 40 4d 00 00                  	mov dword ptr [esi + 0x4d40], edx
0x4b4a:    89 9e 44 4d 00 00                  	mov dword ptr [esi + 0x4d44], ebx
0x4b50:    0f 84 1a ff ff ff                  	je 0x4a70 <_Z8SetProxy7Network8CServicei+0x90>
0x4b56:    8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x4b5a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x4b5d -- 0x4b5e
0x4b5d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x4b5e -- 0x4b5f
; data inside code section at 0x4b5f -- 0x4b7e
0x4b5f:    ff ff ff 85 c0 75 7b 8b  43 50 83 e8 01 85 c0 89   |.....u{.CP......|
0x4b6f:    43 50 75 04 c6 43 48 00  8d 43 18 89 04 24 e8      |CPu..CH..C...$. |
; dynamically linked function: pthread_cond_signal at 0x4b7e -- 0x4b7f
; data inside code section at 0x4b7f -- 0x4b8a
0x4b7f:    ff ff ff 85 c0 75 56 89  1c 24 e8                  |.....uV..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x4b8a -- 0x4b8b
; data inside code section at 0x4b8b -- 0x4b8d
0x4b8b:    ff ff                                              |..              |
; function: function_4b8d at 0x4b8d -- 0x4b9c
0x4b8d:    ff 85 c0 75 33 b8                  	inc dword ptr [ebp - 0x47cc8a40]
0x4b93:    01 00                              	add dword ptr [eax], eax
0x4b95:    00 00                              	add byte ptr [eax], al
0x4b97:    e9 d4 fe ff ff                     	jmp 0x4a70
; function: function_4b9c at 0x4b9c -- 0x4b9d
; dynamically linked function: __stack_chk_fail at 0x4b9d -- 0x4b9e
; data inside code section at 0x4b9e -- 0x4ba1
0x4b9e:    ff ff ff                                           |...             |
; function: function_4ba1 at 0x4ba1 -- 0x4bc0
0x4ba1:    c7 44 24 0c f0 69 00 00            	mov dword ptr [esp + 0xc], 0x69f0 ; "bool SetProxy(Network, CService, int)"
0x4ba9:    c7 44 24 08 a6 01 00 00            	mov dword ptr [esp + 8], 0x1a6
0x4bb1:    c7 44 24 04 ec 4e 00 00            	mov dword ptr [esp + 4], 0x4eec ; "netbase.cpp"
0x4bb9:    c7 04 24 e3 4f 00 00               	mov dword ptr [esp], 0x4fe3 ; "net >= 0 && net < NET_MAX"
; data inside code section at 0x4bc0 -- 0x4bc1
0x4bc0:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x4bc1 -- 0x4bc2
; data inside code section at 0x4bc2 -- 0x4bcb
0x4bc2:    ff ff ff e8 da 0f 00 00  89                        |.........       |
; function: function_4bcb at 0x4bcb -- 0x4bcc
0x4bcb:    c3                                 	ret 
; data inside code section at 0x4bcc -- 0x4bd8
0x4bcc:    89 3c 24 e8 3c 2d 00 00  89 1c 24 e8               |.<$.<-....$.    |
; dynamically linked function: _Unwind_Resume at 0x4bd8 -- 0x4bd9
; data inside code section at 0x4bd9 -- 0x4bf0
0x4bd9:    ff ff ff e8 f7 0f 00 00  e8 8a 0f 00 00 8d 76 00   |..............v.|
0x4be9:    8d bc 27 00 00 00 00                               |..'....         |
; function: _ZNK8CService6GetKeyEv at 0x4bf0 -- 0x4c83
0x4bf0:    56                                 	push esi
0x4bf1:    53                                 	push ebx
0x4bf2:    83 ec 24                           	sub esp, 0x24
0x4bf5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x4bf9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4bff:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x4c03:    31 c0                              	xor eax, eax
0x4c05:    8d 44 24 1b                        	lea eax, [esp + 0x1b]
0x4c09:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x4c0d:    c6 44 24 1b 00                     	mov byte ptr [esp + 0x1b], 0
0x4c12:    c7 06 00 00 00 00                  	mov dword ptr [esi], 0
0x4c18:    c7 46 04 00 00 00 00               	mov dword ptr [esi + 4], 0
0x4c1f:    c7 46 08 00 00 00 00               	mov dword ptr [esi + 8], 0
0x4c26:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x4c2a:    c7 44 24 08 12 00 00 00            	mov dword ptr [esp + 8], 0x12
0x4c32:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x4c3a:    89 34 24                           	mov dword ptr [esp], esi
0x4c3d:    e8 fe 33 00 00                     	call 0x8040 <_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh>
0x4c42:    8b 06                              	mov eax, dword ptr [esi]
0x4c44:    8b 13                              	mov edx, dword ptr [ebx]
0x4c46:    89 10                              	mov dword ptr [eax], edx
0x4c48:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x4c4b:    89 50 04                           	mov dword ptr [eax + 4], edx
0x4c4e:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x4c51:    89 50 08                           	mov dword ptr [eax + 8], edx
0x4c54:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x4c57:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x4c5a:    8b 06                              	mov eax, dword ptr [esi]
0x4c5c:    0f b6 53 11                        	movzx edx, byte ptr [ebx + 0x11]
0x4c60:    88 50 10                           	mov byte ptr [eax + 0x10], dl
0x4c63:    8b 06                              	mov eax, dword ptr [esi]
0x4c65:    0f b7 53 10                        	movzx edx, word ptr [ebx + 0x10]
0x4c69:    88 50 11                           	mov byte ptr [eax + 0x11], dl
0x4c6c:    89 f0                              	mov eax, esi
0x4c6e:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x4c72:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x4c79:    75 08                              	jne 0x4c83 <_ZNK8CService6GetKeyEv+0x90>
0x4c7b:    83 c4 24                           	add esp, 0x24
0x4c7e:    5b                                 	pop ebx
0x4c7f:    5e                                 	pop esi
0x4c80:    c2 04 00                           	ret 4
; data inside code section at 0x4c83 -- 0x4c84
0x4c83:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4c84 -- 0x4c85
; data inside code section at 0x4c85 -- 0x4c8b
0x4c85:    ff ff ff 8b 16 89                                  |......          |
; function: function_4c8b at 0x4c8b -- 0x4c8c
0x4c8b:    c3                                 	ret 
; data inside code section at 0x4c8c -- 0x4c94
0x4c8c:    85 d2 74 08 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x4c94 -- 0x4c95
; data inside code section at 0x4c95 -- 0x4c9c
0x4c95:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x4c9c -- 0x4c9d
; data inside code section at 0x4c9d -- 0x4ca0
0x4c9d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0x4cb0 -- 0x4cda
0x4cb0:    83 ec 1c                           	sub esp, 0x1c
0x4cb3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4cb9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x4cbd:    31 c0                              	xor eax, eax
0x4cbf:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x4cc3:    c7 00 00 85 00 00                  	mov dword ptr [eax], 0x8500
0x4cc9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x4ccd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x4cd4:    75 04                              	jne 0x4cda <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0x4cd6:    83 c4 1c                           	add esp, 0x1c
0x4cd9:    c3                                 	ret 
; data inside code section at 0x4cda -- 0x4cdb
0x4cda:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x4cdb -- 0x4cdc
; data inside code section at 0x4cdc -- 0x4cdf
0x4cdc:    ff ff ff                                           |...             |
; section: .text._ZNK5boost10lock_error4whatEv
; function: _ZNK5boost10lock_error4whatEv at 0x5050 -- 0x5075
0x5050:    83 ec 1c                           	sub esp, 0x1c
0x5053:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5059:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x505d:    31 c0                              	xor eax, eax
0x505f:    b8 df 4c 00 00                     	mov eax, 0x4cdf ; "boost::lock_error"
0x5064:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5068:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x506f:    75 04                              	jne 0x5075 <_ZNK5boost10lock_error4whatEv+0x24>
0x5071:    83 c4 1c                           	add esp, 0x1c
0x5074:    c3                                 	ret 
; data inside code section at 0x5075 -- 0x5076
0x5075:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5076 -- 0x5077
; data inside code section at 0x5077 -- 0x507a
0x5077:    ff ff ff                                           |...             |
; section: .text._ZNK5boost21thread_resource_error4whatEv
; function: _ZNK5boost21thread_resource_error4whatEv at 0x5080 -- 0x50a5
0x5080:    83 ec 1c                           	sub esp, 0x1c
0x5083:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5089:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x508d:    31 c0                              	xor eax, eax
0x508f:    b8 f1 4c 00 00                     	mov eax, 0x4cf1 ; "boost::thread_resource_error"
0x5094:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5098:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x509f:    75 04                              	jne 0x50a5 <_ZNK5boost21thread_resource_error4whatEv+0x24>
0x50a1:    83 c4 1c                           	add esp, 0x1c
0x50a4:    c3                                 	ret 
; data inside code section at 0x50a5 -- 0x50a6
0x50a5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x50a6 -- 0x50a7
; data inside code section at 0x50a7 -- 0x50aa
0x50a7:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0x50b0 -- 0x50da
0x50b0:    83 ec 1c                           	sub esp, 0x1c
0x50b3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x50b9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x50bd:    31 c0                              	xor eax, eax
0x50bf:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x50c3:    c7 00 00 87 00 00                  	mov dword ptr [eax], 0x8700
0x50c9:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x50cd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x50d4:    75 04                              	jne 0x50da <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0x50d6:    83 c4 1c                           	add esp, 0x1c
0x50d9:    c3                                 	ret 
; data inside code section at 0x50da -- 0x50db
0x50da:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x50db -- 0x50dc
; data inside code section at 0x50dc -- 0x50df
0x50dc:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0x50e0 -- 0x5130
0x50e0:    83 ec 1c                           	sub esp, 0x1c
0x50e3:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x50e7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x50ee:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x50f2:    31 d2                              	xor edx, edx
0x50f4:    85 c0                              	test eax, eax
0x50f6:    74 20                              	je 0x5118 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0x50f8:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x50fc:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5103:    75 24                              	jne 0x5129 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x5105:    8b 10                              	mov edx, dword ptr [eax]
0x5107:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x510b:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x510e:    83 c4 1c                           	add esp, 0x1c
0x5111:    ff e0                              	jmp eax
; data inside code section at 0x5113 -- 0x5118
0x5113:    90 8d 74 26 00                                     |..t&.           |
0x5118:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x511c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5123:    75 04                              	jne 0x5129 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0x5125:    83 c4 1c                           	add esp, 0x1c
0x5128:    c3                                 	ret 
0x5129:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x5130 -- 0x5131
0x5130:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5131 -- 0x5132
; data inside code section at 0x5132 -- 0x5135
0x5132:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0x5140 -- 0x516a
0x5140:    83 ec 1c                           	sub esp, 0x1c
0x5143:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5149:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x514d:    31 c0                              	xor eax, eax
0x514f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5153:    c7 00 58 84 00 00                  	mov dword ptr [eax], 0x8458
0x5159:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x515d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5164:    75 04                              	jne 0x516a <_ZN5boost6system14error_categoryD1Ev+0x29>
0x5166:    83 c4 1c                           	add esp, 0x1c
0x5169:    c3                                 	ret 
; data inside code section at 0x516a -- 0x516b
0x516a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x516b -- 0x516c
; data inside code section at 0x516c -- 0x516f
0x516c:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0x5170 -- 0x51a4
0x5170:    83 ec 1c                           	sub esp, 0x1c
0x5173:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5177:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x517e:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5182:    31 d2                              	xor edx, edx
0x5184:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x5188:    89 10                              	mov dword ptr [eax], edx
0x518a:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x518e:    89 50 04                           	mov dword ptr [eax + 4], edx
0x5191:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5195:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x519c:    75 06                              	jne 0x51a4 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0x519e:    83 c4 1c                           	add esp, 0x1c
0x51a1:    c2 04 00                           	ret 4
; data inside code section at 0x51a4 -- 0x51a5
0x51a4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x51a5 -- 0x51a6
; data inside code section at 0x51a6 -- 0x51a9
0x51a6:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0x51b0 -- 0x520f
0x51b0:    56                                 	push esi
0x51b1:    53                                 	push ebx
0x51b2:    83 ec 34                           	sub esp, 0x34
0x51b5:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x51b9:    8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x51bd:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x51c4:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x51c8:    31 d2                              	xor edx, edx
0x51ca:    8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x51ce:    8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x51d2:    8b 10                              	mov edx, dword ptr [eax]
0x51d4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x51d8:    89 0c 24                           	mov dword ptr [esp], ecx
0x51db:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x51df:    ff 52 10                           	call dword ptr [edx + 0x10]
0x51e2:    31 c0                              	xor eax, eax
0x51e4:    83 ec 04                           	sub esp, 4
0x51e7:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x51eb:    39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0x51ee:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x51f2:    74 14                              	je 0x5208 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0x51f4:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x51f8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x51ff:    75 0e                              	jne 0x520f <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5d>
0x5201:    83 c4 34                           	add esp, 0x34
0x5204:    5b                                 	pop ebx
0x5205:    5e                                 	pop esi
0x5206:    c3                                 	ret 
; data inside code section at 0x5207 -- 0x5208
0x5207:    90                                                 |.               |
0x5208:    39 13                              	cmp dword ptr [ebx], edx
0x520a:    0f 94 c0                           	sete al
0x520d:    eb e5                              	jmp 0x51f4 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
; data inside code section at 0x520f -- 0x5210
0x520f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5210 -- 0x5211
; data inside code section at 0x5211 -- 0x5214
0x5211:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0x5220 -- 0x525f
0x5220:    53                                 	push ebx
0x5221:    83 ec 18                           	sub esp, 0x18
0x5224:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x5228:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x522c:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5232:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x5236:    31 c0                              	xor eax, eax
0x5238:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x523c:    39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x523f:    74 17                              	je 0x5258 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0x5241:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5245:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x524c:    75 11                              	jne 0x525f <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0x524e:    83 c4 18                           	add esp, 0x18
0x5251:    5b                                 	pop ebx
0x5252:    c3                                 	ret 
; data inside code section at 0x5253 -- 0x5258
0x5253:    90 8d 74 26 00                                     |..t&.           |
0x5258:    39 0a                              	cmp dword ptr [edx], ecx
0x525a:    0f 94 c0                           	sete al
0x525d:    eb e2                              	jmp 0x5241 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0x525f -- 0x5260
0x525f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5260 -- 0x5261
; data inside code section at 0x5261 -- 0x5264
0x5261:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0x5270 -- 0x529a
0x5270:    83 ec 1c                           	sub esp, 0x1c
0x5273:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5279:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x527d:    31 c0                              	xor eax, eax
0x527f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5283:    c7 00 00 87 00 00                  	mov dword ptr [eax], 0x8700
0x5289:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x528d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5294:    75 04                              	jne 0x529a <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0x5296:    83 c4 1c                           	add esp, 0x1c
0x5299:    c3                                 	ret 
; data inside code section at 0x529a -- 0x529b
0x529a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x529b -- 0x529c
; data inside code section at 0x529c -- 0x529f
0x529c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0x52a0 -- 0x52f5
0x52a0:    83 ec 1c                           	sub esp, 0x1c
0x52a3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x52a9:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x52ad:    31 c0                              	xor eax, eax
0x52af:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x52b3:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x52b6:    85 c0                              	test eax, eax
0x52b8:    74 1e                              	je 0x52d8 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0x52ba:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x52be:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x52c5:    75 22                              	jne 0x52e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x52c7:    8b 10                              	mov edx, dword ptr [eax]
0x52c9:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x52cd:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x52d0:    83 c4 1c                           	add esp, 0x1c
0x52d3:    ff e0                              	jmp eax
; data inside code section at 0x52d5 -- 0x52d8
0x52d5:    8d 76 00                                           |.v.             |
0x52d8:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x52dc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x52e3:    75 04                              	jne 0x52e9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0x52e5:    83 c4 1c                           	add esp, 0x1c
0x52e8:    c3                                 	ret 
0x52e9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x52f0:    e8 fc ff ff ff                     	call 0x52f1
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0x5300 -- 0x5325
0x5300:    83 ec 1c                           	sub esp, 0x1c
0x5303:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5309:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x530d:    31 c0                              	xor eax, eax
0x530f:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5313:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x531a:    75 04                              	jne 0x5320 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x20>
0x531c:    83 c4 1c                           	add esp, 0x1c
0x531f:    c3                                 	ret 
0x5320:    e8 fc ff ff ff                     	call 0x5321
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0x5330 -- 0x535e
0x5330:    83 ec 1c                           	sub esp, 0x1c
0x5333:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x533a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x533e:    31 d2                              	xor edx, edx
0x5340:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5344:    c7 00 00 87 00 00                  	mov dword ptr [eax], 0x8700
0x534a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x534e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5355:    75 0c                              	jne 0x5363 <function_5363>
0x5357:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x535b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x535e -- 0x535f
0x535e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x535f -- 0x5360
; data inside code section at 0x5360 -- 0x5363
0x5360:    ff ff ff                                           |...             |
; function: function_5363 at 0x5363 -- 0x5368
0x5363:    e8 fc ff ff ff                     	call 0x5364
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0x5370 -- 0x539e
0x5370:    83 ec 1c                           	sub esp, 0x1c
0x5373:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x537a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x537e:    31 d2                              	xor edx, edx
0x5380:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5384:    c7 00 00 87 00 00                  	mov dword ptr [eax], 0x8700
0x538a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x538e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5395:    75 0c                              	jne 0x53a3 <function_53a3>
0x5397:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x539b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x539e -- 0x539f
0x539e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x539f -- 0x53a0
; data inside code section at 0x53a0 -- 0x53a3
0x53a0:    ff ff ff                                           |...             |
; function: function_53a3 at 0x53a3 -- 0x53a8
0x53a3:    e8 fc ff ff ff                     	call 0x53a4
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0x53b0 -- 0x53de
0x53b0:    83 ec 1c                           	sub esp, 0x1c
0x53b3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x53ba:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x53be:    31 d2                              	xor edx, edx
0x53c0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x53c4:    c7 00 00 85 00 00                  	mov dword ptr [eax], 0x8500
0x53ca:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x53ce:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x53d5:    75 0c                              	jne 0x53e3 <function_53e3>
0x53d7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x53db:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x53de -- 0x53df
0x53de:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x53df -- 0x53e0
; data inside code section at 0x53e0 -- 0x53e3
0x53e0:    ff ff ff                                           |...             |
; function: function_53e3 at 0x53e3 -- 0x53e4
; dynamically linked function: __stack_chk_fail at 0x53e4 -- 0x53e5
; data inside code section at 0x53e5 -- 0x53e8
0x53e5:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0x53f0 -- 0x541e
0x53f0:    83 ec 1c                           	sub esp, 0x1c
0x53f3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x53fa:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x53fe:    31 d2                              	xor edx, edx
0x5400:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5404:    c7 00 58 84 00 00                  	mov dword ptr [eax], 0x8458
0x540a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x540e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5415:    75 0c                              	jne 0x5423 <function_5423>
0x5417:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x541b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x541e -- 0x541f
0x541e:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x541f -- 0x5420
; data inside code section at 0x5420 -- 0x5423
0x5420:    ff ff ff                                           |...             |
; function: function_5423 at 0x5423 -- 0x5424
; dynamically linked function: __stack_chk_fail at 0x5424 -- 0x5425
; data inside code section at 0x5425 -- 0x5428
0x5425:    ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD2Ev
; function: _ZN5boost16thread_exceptionD1Ev at 0x5430 -- 0x545e
0x5430:    83 ec 1c                           	sub esp, 0x1c
0x5433:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x543a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x543e:    31 d2                              	xor edx, edx
0x5440:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5444:    c7 00 98 84 00 00                  	mov dword ptr [eax], 0x8498
0x544a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x544e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5455:    75 0c                              	jne 0x5463 <function_5463>
0x5457:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x545b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x545e -- 0x545f
0x545e:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x545f -- 0x5460
; data inside code section at 0x5460 -- 0x5463
0x5460:    ff ff ff                                           |...             |
; function: function_5463 at 0x5463 -- 0x5464
; dynamically linked function: __stack_chk_fail at 0x5464 -- 0x5465
; data inside code section at 0x5465 -- 0x5468
0x5465:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x5470 -- 0x5477
0x5470:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x5475:    eb 09                              	jmp 0x5480 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0x5477 -- 0x5480
0x5477:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0x5480 -- 0x549c
0x5480:    56                                 	push esi
0x5481:    53                                 	push ebx
0x5482:    83 ec 24                           	sub esp, 0x24
0x5485:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x5489:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x548f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5493:    31 c0                              	xor eax, eax
0x5495:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x549c -- 0x549d
0x549c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x549d -- 0x549e
; data inside code section at 0x549e -- 0x54a2
0x549e:    ff ff ff 89                                        |....            |
; function: function_54a2 at 0x54a2 -- 0x54a3
0x54a2:    c3                                 	ret 
; data inside code section at 0x54a3 -- 0x54f5
0x54a3:    c7 00 c8 84 00 00 8b 46  04 85 c0 89 43 04 74 08   |.......F....C.t.|
0x54b3:    8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 b8 86 00   |....$.R..F......|
0x54c3:    00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0x54d3:    d0 86 00 00 c7 43 18 e4  86 00 00 89 43 10 c7 44   |.....C......C..D|
0x54e3:    24 08 90 64 00 00 c7 44  24 04 50 87 00 00 89 1c   |$..d...D$.P.....|
0x54f3:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x54f5 -- 0x54f6
; data inside code section at 0x54f6 -- 0x54ff
0x54f6:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x54ff -- 0x5500
; data inside code section at 0x5500 -- 0x5507
0x5500:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5507 -- 0x5508
; data inside code section at 0x5508 -- 0x550b
0x5508:    ff ff ff                                           |...             |
; section: .text.unlikely
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.20 at 0x5b70 -- 0x5b9e
0x5b70:    83 ec 2c                           	sub esp, 0x2c
0x5b73:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5b79:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5b7d:    31 c0                              	xor eax, eax
0x5b7f:    c7 44 24 0c 30 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a30 ; "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x5b87:    c7 44 24 08 1a 00 00 00            	mov dword ptr [esp + 8], 0x1a
0x5b8f:    c7 44 24 04 b0 58 00 00            	mov dword ptr [esp + 4], 0x58b0 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x5b97:    c7 04 24 0e 4d 00 00               	mov dword ptr [esp], 0x4d0e ; "!pthread_mutex_lock(m)"
; data inside code section at 0x5b9e -- 0x5b9f
0x5b9e:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x5b9f -- 0x5ba0
; data inside code section at 0x5ba0 -- 0x5ba4
0x5ba0:    ff ff ff 90                                        |....            |
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.21 at 0x5ba4 -- 0x5bd2
0x5ba4:    83 ec 2c                           	sub esp, 0x2c
0x5ba7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5bad:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5bb1:    31 c0                              	xor eax, eax
0x5bb3:    c7 44 24 0c d0 6a 00 00            	mov dword ptr [esp + 0xc], 0x6ad0 ; "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x5bbb:    c7 44 24 08 1e 00 00 00            	mov dword ptr [esp + 8], 0x1e
0x5bc3:    c7 44 24 04 b0 58 00 00            	mov dword ptr [esp + 4], 0x58b0 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x5bcb:    c7 04 24 25 4d 00 00               	mov dword ptr [esp], 0x4d25 ; "!pthread_mutex_unlock(m)"
; data inside code section at 0x5bd2 -- 0x5bd3
0x5bd2:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x5bd3 -- 0x5bd4
; data inside code section at 0x5bd4 -- 0x5bd8
0x5bd4:    ff ff ff 90                                        |....            |
; function: _ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED2Ev.part.104 at 0x5bd8 -- 0x5c0b
0x5bd8:    83 ec 2c                           	sub esp, 0x2c
0x5bdb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5be1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5be5:    31 c0                              	xor eax, eax
0x5be7:    c7 44 24 0c 90 6a 00 00            	mov dword ptr [esp + 0xc], 0x6a90 ; "void boost::recursive_mutex::unlock()"
0x5bef:    c7 44 24 08 93 00 00 00            	mov dword ptr [esp + 8], 0x93
0x5bf7:    c7 44 24 04 f0 58 00 00            	mov dword ptr [esp + 4], 0x58f0 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x5bff:    c7 04 24 76 4d 00 00               	mov dword ptr [esp], 0x4d76 ; "!pthread_cond_signal(&cond)"
0x5c06:    e8 fc ff ff ff                     	call 0x5c07
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev at 0x5c10 -- 0x5c27
0x5c10:    53                                 	push ebx
0x5c11:    83 ec 28                           	sub esp, 0x28
0x5c14:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x5c18:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5c1e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5c22:    31 c0                              	xor eax, eax
0x5c24:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x5c27 -- 0x5c28
0x5c27:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x5c28 -- 0x5c29
; data inside code section at 0x5c29 -- 0x5c2b
0x5c29:    ff ff                                              |..              |
; function: function_5c2b at 0x5c2b -- 0x5c32
0x5c2b:    ff 85 c0 75 21 83                  	inc dword ptr [ebp - 0x7cde8a40]
0x5c31:    c3                                 	ret 
; data inside code section at 0x5c32 -- 0x5c37
0x5c32:    18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x5c37 -- 0x5c38
; data inside code section at 0x5c38 -- 0x5c3a
0x5c38:    ff ff                                              |..              |
; function: function_5c3a at 0x5c3a -- 0x5c51
0x5c3a:    ff 85 c0 75 3b 8b                  	inc dword ptr [ebp - 0x74c48a40]
0x5c40:    44                                 	inc esp
0x5c41:    24 1c                              	and al, 0x1c
0x5c43:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5c4a:    75 29                              	jne 0x5c75 <function_5c75>
0x5c4c:    83 c4 28                           	add esp, 0x28
0x5c4f:    5b                                 	pop ebx
0x5c50:    c3                                 	ret 
; data inside code section at 0x5c51 -- 0x5c71
0x5c51:    c7 44 24 0c 70 6c 00 00  c7 44 24 08 5c 00 00 00   |.D$.pl...D$.\...|
0x5c61:    c7 44 24 04 f0 58 00 00  c7 04 24 3e 4d 00 00 e8   |.D$..X....$>M...|
; dynamically linked function: __assert_fail at 0x5c71 -- 0x5c72
; data inside code section at 0x5c72 -- 0x5c75
0x5c72:    ff ff ff                                           |...             |
; function: function_5c75 at 0x5c75 -- 0x5c76
; dynamically linked function: __stack_chk_fail at 0x5c76 -- 0x5c77
; data inside code section at 0x5c77 -- 0x5c9a
0x5c77:    ff ff ff c7 44 24 0c 70  6c 00 00 c7 44 24 08 5e   |....D$.pl...D$.^|
0x5c87:    00 00 00 c7 44 24 04 f0  58 00 00 c7 04 24 59 4d   |....D$..X....$YM|
0x5c97:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x5c9a -- 0x5c9b
; data inside code section at 0x5c9b -- 0x5c9e
0x5c9b:    ff ff ff                                           |...             |
; section: .text._ZN5boost21thread_resource_errorD0Ev
; function: _ZN5boost21thread_resource_errorD0Ev at 0x5ca0 -- 0x5cbd
0x5ca0:    53                                 	push ebx
0x5ca1:    83 ec 28                           	sub esp, 0x28
0x5ca4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x5ca8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5cae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5cb2:    31 c0                              	xor eax, eax
0x5cb4:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x5cba:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x5cbd -- 0x5cbe
0x5cbd:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x5cbe -- 0x5cbf
; data inside code section at 0x5cbf -- 0x5cc1
0x5cbf:    ff ff                                              |..              |
; function: function_5cc1 at 0x5cc1 -- 0x5cdc
0x5cc1:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x5cc7:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x5ccd:    75 0d                              	jne 0x5cdc <function_5cc1+0x16>
0x5ccf:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x5cd3:    83 c4 28                           	add esp, 0x28
0x5cd6:    5b                                 	pop ebx
0x5cd7:    e9 fc ff ff ff                     	jmp 0x5cd8
; data inside code section at 0x5cdc -- 0x5cdd
0x5cdc:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5cdd -- 0x5cde
; data inside code section at 0x5cde -- 0x5ce1
0x5cde:    ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD0Ev
; function: _ZN5boost10lock_errorD0Ev at 0x5cf0 -- 0x5d31
0x5cf0:    53                                 	push ebx
0x5cf1:    83 ec 28                           	sub esp, 0x28
0x5cf4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x5cf8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5cfe:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5d02:    31 c0                              	xor eax, eax
0x5d04:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x5d0a:    89 1c 24                           	mov dword ptr [esp], ebx
0x5d0d:    e8 fc ff ff ff                     	call 0x5d0e
0x5d12:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x5d16:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x5d1d:    75 0d                              	jne 0x5d2c <_ZN5boost10lock_errorD0Ev+0x3c>
0x5d1f:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x5d23:    83 c4 28                           	add esp, 0x28
0x5d26:    5b                                 	pop ebx
0x5d27:    e9 fc ff ff ff                     	jmp 0x5d28
0x5d2c:    e8 fc ff ff ff                     	call 0x5d2d
; section: .text._ZN5boost21thread_resource_errorD2Ev
; function: _ZN5boost21thread_resource_errorD1Ev at 0x5d40 -- 0x5d6e
0x5d40:    83 ec 1c                           	sub esp, 0x1c
0x5d43:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x5d4a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5d4e:    31 d2                              	xor edx, edx
0x5d50:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5d54:    c7 00 98 84 00 00                  	mov dword ptr [eax], 0x8498
0x5d5a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5d5e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5d65:    75 0c                              	jne 0x5d73 <function_5d73>
0x5d67:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x5d6b:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x5d6e -- 0x5d6f
0x5d6e:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x5d6f -- 0x5d70
; data inside code section at 0x5d70 -- 0x5d73
0x5d70:    ff ff ff                                           |...             |
; function: function_5d73 at 0x5d73 -- 0x5d78
0x5d73:    e8 fc ff ff ff                     	call 0x5d74
; section: .text._ZN5boost10lock_errorD2Ev
; function: _ZN5boost10lock_errorD1Ev at 0x5d80 -- 0x5db8
0x5d80:    83 ec 1c                           	sub esp, 0x1c
0x5d83:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x5d8a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5d8e:    31 d2                              	xor edx, edx
0x5d90:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x5d94:    c7 00 98 84 00 00                  	mov dword ptr [eax], 0x8498
0x5d9a:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x5d9e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5da5:    75 0c                              	jne 0x5db3 <_ZN5boost10lock_errorD1Ev+0x33>
0x5da7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x5dab:    83 c4 1c                           	add esp, 0x1c
0x5dae:    e9 fc ff ff ff                     	jmp 0x5daf
0x5db3:    e8 fc ff ff ff                     	call 0x5db4
; section: .text._ZN5boost16thread_exceptionD0Ev
; function: _ZN5boost16thread_exceptionD0Ev at 0x5dc0 -- 0x5ddd
0x5dc0:    53                                 	push ebx
0x5dc1:    83 ec 28                           	sub esp, 0x28
0x5dc4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x5dc8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5dce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5dd2:    31 c0                              	xor eax, eax
0x5dd4:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x5dda:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x5ddd -- 0x5dde
0x5ddd:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x5dde -- 0x5ddf
; data inside code section at 0x5ddf -- 0x5df8
0x5ddf:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x5def:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x5df8 -- 0x5df9
; data inside code section at 0x5df9 -- 0x5e01
0x5df9:    ff ff ff e8 fc ff ff ff                            |........        |
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x5e10 -- 0x5e38
0x5e10:    53                                 	push ebx
0x5e11:    83 ec 28                           	sub esp, 0x28
0x5e14:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x5e18:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5e1e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5e22:    31 c0                              	xor eax, eax
0x5e24:    c7 03 80 84 00 00                  	mov dword ptr [ebx], 0x8480
0x5e2a:    8d 43 10                           	lea eax, [ebx + 0x10]
0x5e2d:    89 04 24                           	mov dword ptr [esp], eax
0x5e30:    e8 fc ff ff ff                     	call 0x5e31
0x5e35:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x5e38 -- 0x5e39
0x5e38:    e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x5e39 -- 0x5e3a
; data inside code section at 0x5e3a -- 0x5e53
0x5e3a:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x5e4a:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x5e53 -- 0x5e54
; data inside code section at 0x5e54 -- 0x5e58
0x5e54:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x5e58 -- 0x5e59
; data inside code section at 0x5e59 -- 0x5e5c
0x5e59:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x5e60 -- 0x5e67
0x5e60:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x5e65:    eb 09                              	jmp 0x5e70 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0x5e67 -- 0x5e70
0x5e67:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x5e70 -- 0x5e8c
0x5e70:    56                                 	push esi
0x5e71:    53                                 	push ebx
0x5e72:    83 ec 24                           	sub esp, 0x24
0x5e75:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x5e79:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5e7f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5e83:    31 c0                              	xor eax, eax
0x5e85:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x5e8c -- 0x5e8d
0x5e8c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x5e8d -- 0x5e8e
; data inside code section at 0x5e8e -- 0x5e90
0x5e8e:    ff ff                                              |..              |
; function: function_5e90 at 0x5e90 -- 0x5ee7
0x5e90:    ff 89 c3 c7 00 c8                  	dec dword ptr [ecx - 0x37ff383d]
0x5e96:    84 00                              	test byte ptr [eax], al
0x5e98:    00 8b 46 04 85 c0                  	add byte ptr [ebx - 0x3f7afbba], cl
0x5e9e:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x5ea1:    74 08                              	je 0x5eab <function_5e90+0x1b>
0x5ea3:    8b 10                              	mov edx, dword ptr [eax]
0x5ea5:    89 04 24                           	mov dword ptr [esp], eax
0x5ea8:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x5eab:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x5eae:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x5eb2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5eb9:    c7 03 b8 86 00 00                  	mov dword ptr [ebx], 0x86b8
0x5ebf:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x5ec2:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x5ec5:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x5ec8:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x5ecb:    c7 43 14 d0 86 00 00               	mov dword ptr [ebx + 0x14], 0x86d0
0x5ed2:    c7 43 18 e4 86 00 00               	mov dword ptr [ebx + 0x18], 0x86e4
0x5ed9:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x5edc:    8d 43 18                           	lea eax, [ebx + 0x18]
0x5edf:    75 06                              	jne 0x5ee7 <function_5e90+0x56>
0x5ee1:    83 c4 24                           	add esp, 0x24
0x5ee4:    5b                                 	pop ebx
0x5ee5:    5e                                 	pop esi
0x5ee6:    c3                                 	ret 
; data inside code section at 0x5ee7 -- 0x5ee8
0x5ee7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5ee8 -- 0x5ee9
; data inside code section at 0x5ee9 -- 0x5efa
0x5ee9:    ff ff ff 89 c6 89 1c 24  e8 fc ff ff ff 89 34 24   |.......$......4$|
0x5ef9:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x5efa -- 0x5efb
; data inside code section at 0x5efb -- 0x5efe
0x5efb:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x5f00 -- 0x5f07
0x5f00:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x5f05:    eb 09                              	jmp 0x5f10 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv>
; data inside code section at 0x5f07 -- 0x5f10
0x5f07:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0x5f10 -- 0x5f2c
0x5f10:    56                                 	push esi
0x5f11:    53                                 	push ebx
0x5f12:    83 ec 24                           	sub esp, 0x24
0x5f15:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x5f19:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5f1f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5f23:    31 c0                              	xor eax, eax
0x5f25:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x5f2c -- 0x5f2d
0x5f2c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x5f2d -- 0x5f2e
; data inside code section at 0x5f2e -- 0x5f30
0x5f2e:    ff ff                                              |..              |
; function: function_5f30 at 0x5f30 -- 0x5f94
0x5f30:    ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x5f36:    c7 03 b0 84 00 00                  	mov dword ptr [ebx], 0x84b0
0x5f3c:    c7 43 08 c8 84 00 00               	mov dword ptr [ebx + 8], 0x84c8
0x5f43:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x5f46:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x5f49:    85 c0                              	test eax, eax
0x5f4b:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x5f4e:    74 08                              	je 0x5f58 <function_5f30+0x28>
0x5f50:    8b 10                              	mov edx, dword ptr [eax]
0x5f52:    89 04 24                           	mov dword ptr [esp], eax
0x5f55:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x5f58:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x5f5b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x5f5f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x5f66:    c7 43 08 34 85 00 00               	mov dword ptr [ebx + 8], 0x8534
0x5f6d:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x5f70:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x5f73:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x5f76:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x5f79:    c7 03 18 85 00 00                  	mov dword ptr [ebx], 0x8518
0x5f7f:    c7 43 1c 44 85 00 00               	mov dword ptr [ebx + 0x1c], 0x8544
0x5f86:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x5f89:    8d 43 1c                           	lea eax, [ebx + 0x1c]
0x5f8c:    75 06                              	jne 0x5f94 <function_5f30+0x63>
0x5f8e:    83 c4 24                           	add esp, 0x24
0x5f91:    5b                                 	pop ebx
0x5f92:    5e                                 	pop esi
0x5f93:    c3                                 	ret 
; data inside code section at 0x5f94 -- 0x5f95
0x5f94:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5f95 -- 0x5f96
; data inside code section at 0x5f96 -- 0x5fa7
0x5f96:    ff ff ff 89 c6 89 1c 24  e8 dd 5c 00 00 89 1c 24   |.......$..\....$|
0x5fa6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x5fa7 -- 0x5fa8
; data inside code section at 0x5fa8 -- 0x5faf
0x5fa8:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5faf -- 0x5fb0
; data inside code section at 0x5fb0 -- 0x5fb3
0x5fb0:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0x5fc0 -- 0x5fc7
0x5fc0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x5fc5:    eb 09                              	jmp 0x5fd0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv>
; data inside code section at 0x5fc7 -- 0x5fd0
0x5fc7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0x5fd0 -- 0x5fec
0x5fd0:    56                                 	push esi
0x5fd1:    53                                 	push ebx
0x5fd2:    83 ec 24                           	sub esp, 0x24
0x5fd5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x5fd9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5fdf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x5fe3:    31 c0                              	xor eax, eax
0x5fe5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x5fec -- 0x5fed
0x5fec:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x5fed -- 0x5fee
; data inside code section at 0x5fee -- 0x5ff0
0x5fee:    ff ff                                              |..              |
; function: function_5ff0 at 0x5ff0 -- 0x6054
0x5ff0:    ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0x5ff6:    c7 03 98 85 00 00                  	mov dword ptr [ebx], 0x8598
0x5ffc:    c7 43 08 c8 84 00 00               	mov dword ptr [ebx + 8], 0x84c8
0x6003:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x6006:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x6009:    85 c0                              	test eax, eax
0x600b:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x600e:    74 08                              	je 0x6018 <function_5ff0+0x28>
0x6010:    8b 10                              	mov edx, dword ptr [eax]
0x6012:    89 04 24                           	mov dword ptr [esp], eax
0x6015:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x6018:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x601b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x601f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x6026:    c7 43 08 14 86 00 00               	mov dword ptr [ebx + 8], 0x8614
0x602d:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x6030:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x6033:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x6036:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x6039:    c7 03 f8 85 00 00                  	mov dword ptr [ebx], 0x85f8
0x603f:    c7 43 1c 24 86 00 00               	mov dword ptr [ebx + 0x1c], 0x8624
0x6046:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x6049:    8d 43 1c                           	lea eax, [ebx + 0x1c]
0x604c:    75 06                              	jne 0x6054 <function_5ff0+0x63>
0x604e:    83 c4 24                           	add esp, 0x24
0x6051:    5b                                 	pop ebx
0x6052:    5e                                 	pop esi
0x6053:    c3                                 	ret 
; data inside code section at 0x6054 -- 0x6055
0x6054:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6055 -- 0x6056
; data inside code section at 0x6056 -- 0x6067
0x6056:    ff ff ff 89 c6 89 1c 24  e8 9d 5c 00 00 89 1c 24   |.......$..\....$|
0x6066:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x6067 -- 0x6068
; data inside code section at 0x6068 -- 0x606f
0x6068:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x606f -- 0x6070
; data inside code section at 0x6070 -- 0x6073
0x6070:    ff ff ff                                           |...             |
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x6080 -- 0x60d6
0x6080:    83 ec 2c                           	sub esp, 0x2c
0x6083:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x6087:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x608b:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x608f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6095:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6099:    31 c0                              	xor eax, eax
0x609b:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x609f:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x60a2:    8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0x60a5:    85 d2                              	test edx, edx
0x60a7:    74 27                              	je 0x60d0 <_ZNK5boost6system12system_error4whatEv+0x50>
0x60a9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x60ad:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x60b4:    89 d8                              	mov eax, ebx
0x60b6:    0f 85 96 00 00 00                  	jne 0x6152 <function_6152>
0x60bc:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x60c0:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x60c4:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x60c8:    83 c4 2c                           	add esp, 0x2c
0x60cb:    c3                                 	ret 
; data inside code section at 0x60cc -- 0x60d0
0x60cc:    8d 74 26 00                                        |.t&.            |
0x60d0:    89 34 24                           	mov dword ptr [esp], esi
0x60d3:    8d 7e 10                           	lea edi, [esi + 0x10]
; data inside code section at 0x60d6 -- 0x60d7
0x60d6:    e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x60d7 -- 0x60d8
; data inside code section at 0x60d8 -- 0x60dd
0x60d8:    ff ff ff 89 04                                     |.....           |
; function: function_60dd at 0x60dd -- 0x60e0
0x60dd:    24 89                              	and al, 0x89
0x60df:    c3                                 	ret 
; data inside code section at 0x60e0 -- 0x60e1
0x60e0:    e8                                                 |.               |
; dynamically linked function: strlen at 0x60e1 -- 0x60e2
; data inside code section at 0x60e2 -- 0x60f1
0x60e2:    ff ff ff 89 5c 24 04 89  3c 24 89 44 24 08 e8      |....\$..<$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0x60f1 -- 0x60f2
; data inside code section at 0x60f2 -- 0x60ff
0x60f2:    ff ff ff 8b 46 10 8b 40  f4 85 c0 75 39            |....F..@...u9   |
; function: function_60ff at 0x60ff -- 0x6100
; data inside code section at 0x6100 -- 0x612c
0x6100:    46 0c 8d 5c 24 18 8b 4e  08 8b 10 89 4c 24 08 89   |F..\$..N....L$..|
0x6110:    44 24 04 89 1c 24 ff 52  0c 83 ec 04 89 5c 24 04   |D$...$.R.....\$.|
0x6120:    89 3c 24 e8 fc ff ff ff  89 1c 24 e8               |.<$.......$.    |
; dynamically linked function: _ZNSsD1Ev at 0x612c -- 0x612d
; data inside code section at 0x612d -- 0x6130
0x612d:    ff ff ff                                           |...             |
; function: function_6130 at 0x6130 -- 0x6138
0x6130:    8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0x6133:    e9 71 ff ff ff                     	jmp 0x60a9
; data inside code section at 0x6138 -- 0x614c
0x6138:    c7 44 24 08 02 00 00 00  c7 44 24 04 92 4d 00 00   |.D$......D$..M..|
0x6148:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendEPKcj at 0x614c -- 0x614d
; data inside code section at 0x614d -- 0x6150
0x614d:    ff ff ff                                           |...             |
; function: function_6150 at 0x6150 -- 0x6152
0x6150:    eb ad                              	jmp 0x60ff <function_60ff>
; function: function_6152 at 0x6152 -- 0x6153
; dynamically linked function: __stack_chk_fail at 0x6153 -- 0x6154
; data inside code section at 0x6154 -- 0x615d
0x6154:    ff ff ff 89 c7 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x615d -- 0x615e
; data inside code section at 0x615e -- 0x6163
0x615e:    ff ff ff 89 f8                                     |.....           |
; function: function_6163 at 0x6163 -- 0x6164
; data inside code section at 0x6164 -- 0x6167
0x6164:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x6167 -- 0x6168
; data inside code section at 0x6168 -- 0x616f
0x6168:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x616f -- 0x6170
; data inside code section at 0x6170 -- 0x6174
0x6170:    ff ff ff 89                                        |....            |
; function: function_6174 at 0x6174 -- 0x6175
0x6174:    c3                                 	ret 
; data inside code section at 0x6175 -- 0x6176
0x6175:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x6176 -- 0x6177
; data inside code section at 0x6177 -- 0x617a
0x6177:    ff ff ff                                           |...             |
; function: function_617a at 0x617a -- 0x617f
0x617a:    e9 2a ff ff ff                     	jmp 0x60a9
; data inside code section at 0x617f -- 0x6180
0x617f:    90                                                 |.               |
; function: function_6180 at 0x6180 -- 0x6182
0x6180:    eb e1                              	jmp 0x6163 <function_6163>
; data inside code section at 0x6182 -- 0x6183
0x6182:    83                                                 |.               |
; function: function_6183 at 0x6183 -- 0x6186
0x6183:    c2 01 89                           	ret 0x8901
; data inside code section at 0x6186 -- 0x618b
0x6186:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x618b -- 0x618c
; data inside code section at 0x618c -- 0x6190
0x618c:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x6190 -- 0x6191
; data inside code section at 0x6191 -- 0x6194
0x6191:    ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x61a0 -- 0x6225
0x61a0:    83 ec 2c                           	sub esp, 0x2c
0x61a3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x61a9:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x61ad:    31 c0                              	xor eax, eax
0x61af:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x61b3:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x61b7:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x61bb:    8b 58 04                           	mov ebx, dword ptr [eax + 4]
0x61be:    85 db                              	test ebx, ebx
0x61c0:    74 11                              	je 0x61d3 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x61c2:    be ff ff ff ff                     	mov esi, 0xffffffff
0x61c7:    89 f0                              	mov eax, esi
0x61c9:    f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x61ce:    83 f8 01                           	cmp eax, 1
0x61d1:    74 1d                              	je 0x61f0 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x50>
0x61d3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x61d7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x61de:    75 45                              	jne 0x6225 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x61e0:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x61e4:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x61e8:    83 c4 2c                           	add esp, 0x2c
0x61eb:    c3                                 	ret 
; data inside code section at 0x61ec -- 0x61f0
0x61ec:    8d 74 26 00                                        |.t&.            |
0x61f0:    8b 03                              	mov eax, dword ptr [ebx]
0x61f2:    89 1c 24                           	mov dword ptr [esp], ebx
0x61f5:    ff 50 08                           	call dword ptr [eax + 8]
0x61f8:    f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x61fd:    83 fe 01                           	cmp esi, 1
0x6200:    75 d1                              	jne 0x61d3 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x6202:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6206:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x620d:    75 16                              	jne 0x6225 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x83>
0x620f:    8b 03                              	mov eax, dword ptr [ebx]
0x6211:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x6215:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x6219:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x621d:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x6220:    83 c4 2c                           	add esp, 0x2c
0x6223:    ff e0                              	jmp eax
; data inside code section at 0x6225 -- 0x6226
0x6225:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6226 -- 0x6227
; data inside code section at 0x6227 -- 0x622a
0x6227:    ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x6230 -- 0x6280
0x6230:    83 ec 2c                           	sub esp, 0x2c
0x6233:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x6237:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x623b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6241:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6245:    31 c0                              	xor eax, eax
0x6247:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x624b:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x624e:    c7 03 80 84 00 00                  	mov dword ptr [ebx], 0x8480
0x6254:    8d 50 f4                           	lea edx, [eax - 0xc]
0x6257:    81 fa 00 00 00 00                  	cmp edx, 0
0x625d:    75 21                              	jne 0x6280 <_ZN5boost6system12system_errorD1Ev+0x4f>
0x625f:    89 1c 24                           	mov dword ptr [esp], ebx
0x6262:    e8 fc ff ff ff                     	call 0x6263
0x6267:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x626b:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x6272:    75 33                              	jne 0x62a7 <function_62a7>
0x6274:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x6278:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x627c:    83 c4 2c                           	add esp, 0x2c
0x627f:    c3                                 	ret 
; data inside code section at 0x6280 -- 0x6281
0x6280:    b9                                                 |.               |
; dynamically linked function: pthread_cancel at 0x6281 -- 0x62a0
; data inside code section at 0x62a0 -- 0x62a1
0x62a0:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x62a1 -- 0x62a2
; data inside code section at 0x62a2 -- 0x62a5
0x62a2:    ff ff ff                                           |...             |
; function: function_62a5 at 0x62a5 -- 0x62a7
0x62a5:    eb b8                              	jmp 0x625f
; function: function_62a7 at 0x62a7 -- 0x62a8
; dynamically linked function: __stack_chk_fail at 0x62a8 -- 0x62a9
; data inside code section at 0x62a9 -- 0x62ac
0x62a9:    ff ff ff                                           |...             |
; function: function_62ac at 0x62ac -- 0x62b7
0x62ac:    8b 48 fc                           	mov ecx, dword ptr [eax - 4]
0x62af:    8d 71 ff                           	lea esi, [ecx - 1]
0x62b2:    89 70 fc                           	mov dword ptr [eax - 4], esi
0x62b5:    eb da                              	jmp 0x6291
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x62c0 -- 0x6311
0x62c0:    53                                 	push ebx
0x62c1:    83 ec 28                           	sub esp, 0x28
0x62c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x62c8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x62ce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x62d2:    31 c0                              	xor eax, eax
0x62d4:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x62d7:    c7 03 c8 84 00 00                  	mov dword ptr [ebx], 0x84c8
0x62dd:    85 c0                              	test eax, eax
0x62df:    74 0c                              	je 0x62ed <_ZN5boost9exceptionD1Ev+0x2d>
0x62e1:    8b 10                              	mov edx, dword ptr [eax]
0x62e3:    89 04 24                           	mov dword ptr [esp], eax
0x62e6:    ff 52 10                           	call dword ptr [edx + 0x10]
0x62e9:    84 c0                              	test al, al
0x62eb:    75 1b                              	jne 0x6308 <_ZN5boost9exceptionD1Ev+0x48>
0x62ed:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x62f1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x62f8:    75 17                              	jne 0x6311 <_ZN5boost9exceptionD1Ev+0x4f>
0x62fa:    83 c4 28                           	add esp, 0x28
0x62fd:    5b                                 	pop ebx
0x62fe:    66 90                              	nop 
0x6300:    c3                                 	ret 
; data inside code section at 0x6301 -- 0x6308
0x6301:    8d b4 26 00 00 00 00                               |..&....         |
0x6308:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x630f:    eb dc                              	jmp 0x62ed <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x6311 -- 0x6312
0x6311:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6312 -- 0x6313
; data inside code section at 0x6313 -- 0x6317
0x6313:    ff ff ff 83                                        |....            |
; function: function_6317 at 0x6317 -- 0x631a
0x6317:    c2 01 89                           	ret 0x8901
; data inside code section at 0x631a -- 0x631f
0x631a:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x631f -- 0x6320
; data inside code section at 0x6320 -- 0x6324
0x6320:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x6324 -- 0x6325
; data inside code section at 0x6325 -- 0x6328
0x6325:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x6330 -- 0x633a
0x6330:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x6335:    e9 36 63 00 00                     	jmp 0xc670 <function_c670>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x6340 -- 0x6367
0x6340:    53                                 	push ebx
0x6341:    83 ec 28                           	sub esp, 0x28
0x6344:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6348:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x634e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6352:    31 c0                              	xor eax, eax
0x6354:    c7 03 78 86 00 00                  	mov dword ptr [ebx], 0x8678
0x635a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x635d:    c7 43 14 88 86 00 00               	mov dword ptr [ebx + 0x14], 0x8688
0x6364:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x6367 -- 0x6368
0x6367:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x6368 -- 0x6369
; data inside code section at 0x6369 -- 0x636b
0x6369:    ff ff                                              |..              |
; function: function_636b at 0x636b -- 0x6386
0x636b:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x6371:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x6377:    75 0d                              	jne 0x6386 <function_636b+0x16>
0x6379:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x637d:    83 c4 28                           	add esp, 0x28
0x6380:    5b                                 	pop ebx
0x6381:    e9 7a 62 00 00                     	jmp 0xc600 <function_c600>
; data inside code section at 0x6386 -- 0x6387
0x6386:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6387 -- 0x6388
; data inside code section at 0x6388 -- 0x638b
0x6388:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0x6390 -- 0x639a
0x6390:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x6395:    e9 96 63 00 00                     	jmp 0xc730 <function_c730>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0x63a0 -- 0x63e7
0x63a0:    53                                 	push ebx
0x63a1:    83 ec 28                           	sub esp, 0x28
0x63a4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x63a8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x63ae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x63b2:    31 c0                              	xor eax, eax
0x63b4:    c7 03 b8 85 00 00                  	mov dword ptr [ebx], 0x85b8
0x63ba:    8d 43 08                           	lea eax, [ebx + 8]
0x63bd:    c7 43 08 cc 85 00 00               	mov dword ptr [ebx + 8], 0x85cc
0x63c4:    89 04 24                           	mov dword ptr [esp], eax
0x63c7:    e8 94 62 00 00                     	call 0xc660 <unknown_c660>
0x63cc:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x63d0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x63d7:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x63dd:    75 0d                              	jne 0x63ec <function_63ec>
0x63df:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x63e3:    83 c4 28                           	add esp, 0x28
0x63e6:    5b                                 	pop ebx
; data inside code section at 0x63e7 -- 0x63e8
0x63e7:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x63e8 -- 0x63e9
; data inside code section at 0x63e9 -- 0x63ec
0x63e9:    ff ff ff                                           |...             |
; function: function_63ec at 0x63ec -- 0x63ed
; dynamically linked function: __stack_chk_fail at 0x63ed -- 0x63ee
; data inside code section at 0x63ee -- 0x63f1
0x63ee:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x6400 -- 0x640a
0x6400:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x6405:    e9 06 64 00 00                     	jmp 0xc810 <function_c810>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0x6410 -- 0x6457
0x6410:    53                                 	push ebx
0x6411:    83 ec 28                           	sub esp, 0x28
0x6414:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6418:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x641e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6422:    31 c0                              	xor eax, eax
0x6424:    c7 03 d8 84 00 00                  	mov dword ptr [ebx], 0x84d8
0x642a:    8d 43 08                           	lea eax, [ebx + 8]
0x642d:    c7 43 08 ec 84 00 00               	mov dword ptr [ebx + 8], 0x84ec
0x6434:    89 04 24                           	mov dword ptr [esp], eax
0x6437:    e8 94 62 00 00                     	call 0xc6d0 <unknown_c6d0>
0x643c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6440:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x6447:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x644d:    75 0d                              	jne 0x645c <function_645c>
0x644f:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x6453:    83 c4 28                           	add esp, 0x28
0x6456:    5b                                 	pop ebx
; data inside code section at 0x6457 -- 0x6458
0x6457:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x6458 -- 0x6459
; data inside code section at 0x6459 -- 0x645c
0x6459:    ff ff ff                                           |...             |
; function: function_645c at 0x645c -- 0x645d
; dynamically linked function: __stack_chk_fail at 0x645d -- 0x645e
; data inside code section at 0x645e -- 0x6461
0x645e:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x6470 -- 0x647a
0x6470:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x6475:    e9 86 64 00 00                     	jmp 0xc900 <function_c900>
; data inside code section at 0x647a -- 0x6480
0x647a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x6480 -- 0x648a
0x6480:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x6485:    e9 76 64 00 00                     	jmp 0xc900 <function_c900>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x6490 -- 0x64be
0x6490:    53                                 	push ebx
0x6491:    83 ec 28                           	sub esp, 0x28
0x6494:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6498:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x649e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x64a2:    31 c0                              	xor eax, eax
0x64a4:    c7 43 18 00 85 00 00               	mov dword ptr [ebx + 0x18], 0x8500
0x64ab:    8d 43 14                           	lea eax, [ebx + 0x14]
0x64ae:    c7 03 78 86 00 00                  	mov dword ptr [ebx], 0x8678
0x64b4:    c7 43 14 88 86 00 00               	mov dword ptr [ebx + 0x14], 0x8688
0x64bb:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x64be -- 0x64bf
0x64be:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x64bf -- 0x64c0
; data inside code section at 0x64c0 -- 0x64c2
0x64c0:    ff ff                                              |..              |
; function: function_64c2 at 0x64c2 -- 0x64e2
0x64c2:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x64c8:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x64ce:    75 0d                              	jne 0x64dd <function_64c2+0x1b>
0x64d0:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x64d4:    83 c4 28                           	add esp, 0x28
0x64d7:    5b                                 	pop ebx
0x64d8:    e9 73 62 00 00                     	jmp 0xc750 <function_c750>
0x64dd:    e8 fc ff ff ff                     	call 0x64de
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x64f0 -- 0x64f7
0x64f0:    83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0x64f5:    eb 19                              	jmp 0x6510 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x64f7 -- 0x6500
0x64f7:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x6500 -- 0x6507
0x6500:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x6505:    eb 09                              	jmp 0x6510 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x6507 -- 0x6510
0x6507:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x6510 -- 0x653e
0x6510:    53                                 	push ebx
0x6511:    83 ec 28                           	sub esp, 0x28
0x6514:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6518:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x651e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6522:    31 c0                              	xor eax, eax
0x6524:    c7 43 18 00 85 00 00               	mov dword ptr [ebx + 0x18], 0x8500
0x652b:    8d 43 14                           	lea eax, [ebx + 0x14]
0x652e:    c7 03 78 86 00 00                  	mov dword ptr [ebx], 0x8678
0x6534:    c7 43 14 88 86 00 00               	mov dword ptr [ebx + 0x14], 0x8688
0x653b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x653e -- 0x653f
0x653e:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x653f -- 0x6540
; data inside code section at 0x6540 -- 0x6561
0x6540:    ff ff ff 89 1c 24 e8 65  62 00 00 8b 44 24 1c 65   |.....$.eb...D$.e|
0x6550:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x6560:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x6561 -- 0x6562
; data inside code section at 0x6562 -- 0x656a
0x6562:    ff ff ff e8 fc ff ff ff                            |........        |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x6570 -- 0x6577
0x6570:    83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0x6575:    eb 09                              	jmp 0x6580 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x6577 -- 0x6580
0x6577:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x6580 -- 0x65a7
0x6580:    53                                 	push ebx
0x6581:    83 ec 28                           	sub esp, 0x28
0x6584:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6588:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x658e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6592:    31 c0                              	xor eax, eax
0x6594:    c7 03 78 86 00 00                  	mov dword ptr [ebx], 0x8678
0x659a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x659d:    c7 43 14 88 86 00 00               	mov dword ptr [ebx + 0x14], 0x8688
0x65a4:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x65a7 -- 0x65a8
0x65a7:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x65a8 -- 0x65a9
; data inside code section at 0x65a9 -- 0x65ab
0x65a9:    ff ff                                              |..              |
; function: function_65ab at 0x65ab -- 0x65ce
0x65ab:    ff 89 1c 24 e8 7c                  	dec dword ptr [ecx + 0x7ce8241c]
0x65b1:    62 00                              	bound eax, qword ptr [eax]
0x65b3:    00 8b 44 24 1c 65                  	add byte ptr [ebx + 0x651c2444], cl
0x65b9:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x65bf:    75 0d                              	jne 0x65ce <function_65ab+0x1e>
0x65c1:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x65c5:    83 c4 28                           	add esp, 0x28
0x65c8:    5b                                 	pop ebx
0x65c9:    e9 fc ff ff ff                     	jmp 0x65ca
; data inside code section at 0x65ce -- 0x65cf
0x65ce:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x65cf -- 0x65d0
; data inside code section at 0x65d0 -- 0x65d3
0x65d0:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x65e0 -- 0x65e7
0x65e0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x65e5:    eb 19                              	jmp 0x6600 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x65e7 -- 0x65f0
0x65e7:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x65f0 -- 0x65f7
0x65f0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x65f5:    eb 09                              	jmp 0x6600 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x65f7 -- 0x6600
0x65f7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x6600 -- 0x6656
0x6600:    53                                 	push ebx
0x6601:    83 ec 28                           	sub esp, 0x28
0x6604:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6608:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x660e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6612:    31 c0                              	xor eax, eax
0x6614:    c7 43 1c 00 85 00 00               	mov dword ptr [ebx + 0x1c], 0x8500
0x661b:    8d 43 08                           	lea eax, [ebx + 8]
0x661e:    c7 03 d8 84 00 00                  	mov dword ptr [ebx], 0x84d8
0x6624:    c7 43 08 ec 84 00 00               	mov dword ptr [ebx + 8], 0x84ec
0x662b:    89 04 24                           	mov dword ptr [esp], eax
0x662e:    e8 6d 62 00 00                     	call 0xc8a0 <unknown_c8a0>
0x6633:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x6639:    89 1c 24                           	mov dword ptr [esp], ebx
0x663c:    e8 fc ff ff ff                     	call 0x663d
0x6641:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6645:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x664c:    75 0d                              	jne 0x665b <function_665b>
0x664e:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x6652:    83 c4 28                           	add esp, 0x28
0x6655:    5b                                 	pop ebx
; data inside code section at 0x6656 -- 0x6657
0x6656:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x6657 -- 0x6658
; data inside code section at 0x6658 -- 0x665b
0x6658:    ff ff ff                                           |...             |
; function: function_665b at 0x665b -- 0x665c
; dynamically linked function: __stack_chk_fail at 0x665c -- 0x665d
; data inside code section at 0x665d -- 0x6660
0x665d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x6660 -- 0x666a
0x6660:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x6665:    e9 76 66 00 00                     	jmp 0xcce0 <function_cce0>
; data inside code section at 0x666a -- 0x6670
0x666a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x6670 -- 0x667a
0x6670:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x6675:    e9 66 66 00 00                     	jmp 0xcce0 <function_cce0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x6680 -- 0x66ce
0x6680:    53                                 	push ebx
0x6681:    83 ec 28                           	sub esp, 0x28
0x6684:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6688:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x668e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6692:    31 c0                              	xor eax, eax
0x6694:    c7 43 1c 00 85 00 00               	mov dword ptr [ebx + 0x1c], 0x8500
0x669b:    8d 43 08                           	lea eax, [ebx + 8]
0x669e:    c7 03 d8 84 00 00                  	mov dword ptr [ebx], 0x84d8
0x66a4:    c7 43 08 ec 84 00 00               	mov dword ptr [ebx + 8], 0x84ec
0x66ab:    89 04 24                           	mov dword ptr [esp], eax
0x66ae:    e8 8d 62 00 00                     	call 0xc940 <unknown_c940>
0x66b3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x66b7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x66be:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x66c4:    75 0d                              	jne 0x66d3 <function_66d3>
0x66c6:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x66ca:    83 c4 28                           	add esp, 0x28
0x66cd:    5b                                 	pop ebx
; data inside code section at 0x66ce -- 0x66cf
0x66ce:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x66cf -- 0x66d0
; data inside code section at 0x66d0 -- 0x66d3
0x66d0:    ff ff ff                                           |...             |
; function: function_66d3 at 0x66d3 -- 0x66d4
; dynamically linked function: __stack_chk_fail at 0x66d4 -- 0x66d5
; data inside code section at 0x66d5 -- 0x66d8
0x66d5:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x66e0 -- 0x66e7
0x66e0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x66e5:    eb 09                              	jmp 0x66f0 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev>
; data inside code section at 0x66e7 -- 0x66f0
0x66e7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x66f0 -- 0x6725
0x66f0:    53                                 	push ebx
0x66f1:    83 ec 28                           	sub esp, 0x28
0x66f4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x66f8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x66fe:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6702:    31 c0                              	xor eax, eax
0x6704:    c7 03 d8 84 00 00                  	mov dword ptr [ebx], 0x84d8
0x670a:    8d 43 08                           	lea eax, [ebx + 8]
0x670d:    c7 43 08 ec 84 00 00               	mov dword ptr [ebx + 8], 0x84ec
0x6714:    89 04 24                           	mov dword ptr [esp], eax
0x6717:    e8 84 62 00 00                     	call 0xc9a0 <unknown_c9a0>
0x671c:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x6722:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x6725 -- 0x6726
0x6725:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x6726 -- 0x6727
; data inside code section at 0x6727 -- 0x6740
0x6727:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x6737:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x6740 -- 0x6741
; data inside code section at 0x6741 -- 0x6745
0x6741:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x6745 -- 0x6746
; data inside code section at 0x6746 -- 0x6749
0x6746:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x6750 -- 0x6757
0x6750:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x6755:    eb 09                              	jmp 0x6760 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev>
; data inside code section at 0x6757 -- 0x6760
0x6757:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x6760 -- 0x67af
0x6760:    53                                 	push ebx
0x6761:    83 ec 28                           	sub esp, 0x28
0x6764:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6768:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x676e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6772:    31 c0                              	xor eax, eax
0x6774:    c7 03 b8 85 00 00                  	mov dword ptr [ebx], 0x85b8
0x677a:    8d 43 08                           	lea eax, [ebx + 8]
0x677d:    c7 43 08 cc 85 00 00               	mov dword ptr [ebx + 8], 0x85cc
0x6784:    89 04 24                           	mov dword ptr [esp], eax
0x6787:    e8 84 62 00 00                     	call 0xca10 <unknown_ca10>
0x678c:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x6792:    89 1c 24                           	mov dword ptr [esp], ebx
0x6795:    e8 fc ff ff ff                     	call 0x6796
0x679a:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x679e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x67a5:    75 0d                              	jne 0x67b4 <function_67b4>
0x67a7:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x67ab:    83 c4 28                           	add esp, 0x28
0x67ae:    5b                                 	pop ebx
; data inside code section at 0x67af -- 0x67b0
0x67af:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x67b0 -- 0x67b1
; data inside code section at 0x67b1 -- 0x67b4
0x67b1:    ff ff ff                                           |...             |
; function: function_67b4 at 0x67b4 -- 0x67b5
; dynamically linked function: __stack_chk_fail at 0x67b5 -- 0x67b6
; data inside code section at 0x67b6 -- 0x67b9
0x67b6:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x67c0 -- 0x67ca
0x67c0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x67c5:    e9 d6 67 00 00                     	jmp 0xcfa0 <function_cfa0>
; data inside code section at 0x67ca -- 0x67d0
0x67ca:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x67d0 -- 0x67da
0x67d0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x67d5:    e9 c6 67 00 00                     	jmp 0xcfa0 <function_cfa0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x67e0 -- 0x6838
0x67e0:    53                                 	push ebx
0x67e1:    83 ec 28                           	sub esp, 0x28
0x67e4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x67e8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x67ee:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x67f2:    31 c0                              	xor eax, eax
0x67f4:    c7 43 1c 00 85 00 00               	mov dword ptr [ebx + 0x1c], 0x8500
0x67fb:    8d 43 08                           	lea eax, [ebx + 8]
0x67fe:    c7 03 b8 85 00 00                  	mov dword ptr [ebx], 0x85b8
0x6804:    c7 43 08 cc 85 00 00               	mov dword ptr [ebx + 8], 0x85cc
0x680b:    89 04 24                           	mov dword ptr [esp], eax
0x680e:    e8 8d 62 00 00                     	call 0xcaa0 <unknown_caa0>
0x6813:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6817:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x681e:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x6824:    75 0d                              	jne 0x6833 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev+0x53>
0x6826:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x682a:    83 c4 28                           	add esp, 0x28
0x682d:    5b                                 	pop ebx
0x682e:    e9 fc ff ff ff                     	jmp 0x682f
0x6833:    e8 fc ff ff ff                     	call 0x6834
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x6840 -- 0x6847
0x6840:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x6845:    eb 19                              	jmp 0x6860 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x6847 -- 0x6850
0x6847:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x6850 -- 0x6857
0x6850:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x6855:    eb 09                              	jmp 0x6860 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x6857 -- 0x6860
0x6857:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x6860 -- 0x68b6
0x6860:    53                                 	push ebx
0x6861:    83 ec 28                           	sub esp, 0x28
0x6864:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6868:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x686e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6872:    31 c0                              	xor eax, eax
0x6874:    c7 43 1c 00 85 00 00               	mov dword ptr [ebx + 0x1c], 0x8500
0x687b:    8d 43 08                           	lea eax, [ebx + 8]
0x687e:    c7 03 b8 85 00 00                  	mov dword ptr [ebx], 0x85b8
0x6884:    c7 43 08 cc 85 00 00               	mov dword ptr [ebx + 8], 0x85cc
0x688b:    89 04 24                           	mov dword ptr [esp], eax
0x688e:    e8 6d 62 00 00                     	call 0xcb00 <unknown_cb00>
0x6893:    c7 03 98 84 00 00                  	mov dword ptr [ebx], 0x8498
0x6899:    89 1c 24                           	mov dword ptr [esp], ebx
0x689c:    e8 fc ff ff ff                     	call 0x689d
0x68a1:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x68a5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x68ac:    75 0d                              	jne 0x68bb <function_68bb>
0x68ae:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x68b2:    83 c4 28                           	add esp, 0x28
0x68b5:    5b                                 	pop ebx
; data inside code section at 0x68b6 -- 0x68b7
0x68b6:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x68b7 -- 0x68b8
; data inside code section at 0x68b8 -- 0x68bb
0x68b8:    ff ff ff                                           |...             |
; function: function_68bb at 0x68bb -- 0x68bc
; dynamically linked function: __stack_chk_fail at 0x68bc -- 0x68bd
; data inside code section at 0x68bd -- 0x68c0
0x68bd:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x68c0 -- 0x68f1
0x68c0:    53                                 	push ebx
0x68c1:    83 ec 28                           	sub esp, 0x28
0x68c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x68c8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x68ce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x68d2:    31 c0                              	xor eax, eax
0x68d4:    89 1c 24                           	mov dword ptr [esp], ebx
0x68d7:    e8 a4 62 00 00                     	call 0xcb80 <unknown_cb80>
0x68dc:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x68e0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x68e7:    75 0d                              	jne 0x68f6 <function_68f6>
0x68e9:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x68ed:    83 c4 28                           	add esp, 0x28
0x68f0:    5b                                 	pop ebx
; data inside code section at 0x68f1 -- 0x68f2
0x68f1:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x68f2 -- 0x68f3
; data inside code section at 0x68f3 -- 0x68f6
0x68f3:    ff ff ff                                           |...             |
; function: function_68f6 at 0x68f6 -- 0x68fb
0x68f6:    e8 fc ff ff ff                     	call 0x68f7
; section: .text._Z13myclosesocketRj
; function: _Z13myclosesocketRj at 0x6900 -- 0x6920
0x6900:    53                                 	push ebx
0x6901:    83 ec 28                           	sub esp, 0x28
0x6904:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6908:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x690e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6912:    31 c0                              	xor eax, eax
0x6914:    8b 13                              	mov edx, dword ptr [ebx]
0x6916:    b0 09                              	mov al, 9
0x6918:    83 fa ff                           	cmp edx, -1
0x691b:    74 0e                              	je 0x692b <function_692b>
0x691d:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x6920 -- 0x6921
0x6920:    e8                                                 |.               |
; dynamically linked function: close at 0x6921 -- 0x6922
; data inside code section at 0x6922 -- 0x692b
0x6922:    ff ff ff c7 03 ff ff ff  ff                        |.........       |
; function: function_692b at 0x692b -- 0x6942
0x692b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x692f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x6936:    75 05                              	jne 0x693d <function_692b+0x12>
0x6938:    83 c4 28                           	add esp, 0x28
0x693b:    5b                                 	pop ebx
0x693c:    c3                                 	ret 
0x693d:    e8 fc ff ff ff                     	call 0x693e
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x6da0 -- 0x6de5
0x6da0:    53                                 	push ebx
0x6da1:    83 ec 28                           	sub esp, 0x28
0x6da4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6da8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6dae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6db2:    31 c0                              	xor eax, eax
0x6db4:    8b 03                              	mov eax, dword ptr [ebx]
0x6db6:    85 c0                              	test eax, eax
0x6db8:    74 0c                              	je 0x6dc6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x6dba:    8b 10                              	mov edx, dword ptr [eax]
0x6dbc:    89 04 24                           	mov dword ptr [esp], eax
0x6dbf:    ff 52 10                           	call dword ptr [edx + 0x10]
0x6dc2:    84 c0                              	test al, al
0x6dc4:    75 12                              	jne 0x6dd8 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x6dc6:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6dca:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x6dd1:    75 0d                              	jne 0x6de0 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x40>
0x6dd3:    83 c4 28                           	add esp, 0x28
0x6dd6:    5b                                 	pop ebx
0x6dd7:    c3                                 	ret 
0x6dd8:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x6dde:    eb e6                              	jmp 0x6dc6 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x6de0:    e8 fc ff ff ff                     	call 0x6de1
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x6df0 -- 0x6ef4
0x6df0:    83 ec 3c                           	sub esp, 0x3c
0x6df3:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x6df7:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x6dfb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6e01:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6e05:    31 c0                              	xor eax, eax
0x6e07:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x6e0b:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x6e0f:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x6e13:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x6e16:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x6e1a:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x6e22:    85 c0                              	test eax, eax
0x6e24:    0f 84 c6 00 00 00                  	je 0x6ef0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x100>
0x6e2a:    8b 10                              	mov edx, dword ptr [eax]
0x6e2c:    8d 6c 24 18                        	lea ebp, [esp + 0x18]
0x6e30:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x6e34:    89 2c 24                           	mov dword ptr [esp], ebp
0x6e37:    ff 52 14                           	call dword ptr [edx + 0x14]
0x6e3a:    83 ec 04                           	sub esp, 4
0x6e3d:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x6e41:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x6e45:    85 c0                              	test eax, eax
0x6e47:    74 08                              	je 0x6e51 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x61>
0x6e49:    8b 10                              	mov edx, dword ptr [eax]
0x6e4b:    89 04 24                           	mov dword ptr [esp], eax
0x6e4e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x6e51:    85 ff                              	test edi, edi
0x6e53:    89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x6e57:    74 08                              	je 0x6e61 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x71>
0x6e59:    8b 07                              	mov eax, dword ptr [edi]
0x6e5b:    89 3c 24                           	mov dword ptr [esp], edi
0x6e5e:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x6e61:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x6e65:    85 c0                              	test eax, eax
0x6e67:    74 0c                              	je 0x6e75 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
0x6e69:    8b 10                              	mov edx, dword ptr [eax]
0x6e6b:    89 04 24                           	mov dword ptr [esp], eax
0x6e6e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x6e71:    84 c0                              	test al, al
0x6e73:    75 6b                              	jne 0x6ee0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xf0>
0x6e75:    8b 7c 24 14                        	mov edi, dword ptr [esp + 0x14]
0x6e79:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x6e7c:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x6e7f:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x6e82:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x6e85:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x6e88:    89 46 08                           	mov dword ptr [esi + 8], eax
0x6e8b:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x6e8e:    85 c0                              	test eax, eax
0x6e90:    74 08                              	je 0x6e9a <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xaa>
0x6e92:    8b 10                              	mov edx, dword ptr [eax]
0x6e94:    89 04 24                           	mov dword ptr [esp], eax
0x6e97:    ff 52 10                           	call dword ptr [edx + 0x10]
0x6e9a:    85 ff                              	test edi, edi
0x6e9c:    89 7e 04                           	mov dword ptr [esi + 4], edi
0x6e9f:    74 08                              	je 0x6ea9 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xb9>
0x6ea1:    8b 07                              	mov eax, dword ptr [edi]
0x6ea3:    89 3c 24                           	mov dword ptr [esp], edi
0x6ea6:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x6ea9:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x6ead:    85 c0                              	test eax, eax
0x6eaf:    74 08                              	je 0x6eb9 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xc9>
0x6eb1:    8b 10                              	mov edx, dword ptr [eax]
0x6eb3:    89 04 24                           	mov dword ptr [esp], eax
0x6eb6:    ff 52 10                           	call dword ptr [edx + 0x10]
0x6eb9:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6ebd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x6ec4:    75 2e                              	jne 0x6ef4 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x102>
0x6ec6:    8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x6eca:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x6ece:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x6ed2:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x6ed6:    83 c4 3c                           	add esp, 0x3c
0x6ed9:    c3                                 	ret 
; data inside code section at 0x6eda -- 0x6ee0
0x6eda:    8d b6 00 00 00 00                                  |......          |
0x6ee0:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x6ee8:    eb 8b                              	jmp 0x6e75 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
; data inside code section at 0x6eea -- 0x6ef0
0x6eea:    8d b6 00 00 00 00                                  |......          |
0x6ef0:    31 ff                              	xor edi, edi
0x6ef2:    eb 85                              	jmp 0x6e79 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x89>
; data inside code section at 0x6ef4 -- 0x6ef5
0x6ef4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6ef5 -- 0x6ef6
; data inside code section at 0x6ef6 -- 0x6efa
0x6ef6:    ff ff ff 89                                        |....            |
; function: function_6efa at 0x6efa -- 0x6efb
0x6efa:    c3                                 	ret 
; data inside code section at 0x6efb -- 0x6f03
0x6efb:    89 2c 24 e8 8d 6c 00 00                            |.,$..l..        |
; function: function_6f03 at 0x6f03 -- 0x6f04
; data inside code section at 0x6f04 -- 0x6f13
0x6f04:    44 24 14 89 04 24 e8 81  6c 00 00 89 1c 24 e8      |D$...$..l....$. |
; dynamically linked function: _Unwind_Resume at 0x6f13 -- 0x6f14
; data inside code section at 0x6f14 -- 0x6f17
0x6f14:    ff ff ff                                           |...             |
; function: function_6f17 at 0x6f17 -- 0x6f1b
0x6f17:    89 c3                              	mov ebx, eax
0x6f19:    eb e8                              	jmp 0x6f03 <function_6f03>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_ at 0x6f20 -- 0x6f90
0x6f20:    56                                 	push esi
0x6f21:    53                                 	push ebx
0x6f22:    83 ec 24                           	sub esp, 0x24
0x6f25:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x6f29:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x6f2d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6f33:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6f37:    31 c0                              	xor eax, eax
0x6f39:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x6f3c:    c7 03 98 85 00 00                  	mov dword ptr [ebx], 0x8598
0x6f42:    c7 43 08 c8 84 00 00               	mov dword ptr [ebx + 8], 0x84c8
0x6f49:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x6f4c:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x6f4f:    85 c0                              	test eax, eax
0x6f51:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x6f54:    74 08                              	je 0x6f5e <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x3e>
0x6f56:    8b 10                              	mov edx, dword ptr [eax]
0x6f58:    89 04 24                           	mov dword ptr [esp], eax
0x6f5b:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x6f5e:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x6f61:    c7 43 08 cc 85 00 00               	mov dword ptr [ebx + 8], 0x85cc
0x6f68:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x6f6b:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x6f6e:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x6f71:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x6f74:    c7 03 b8 85 00 00                  	mov dword ptr [ebx], 0x85b8
0x6f7a:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x6f7d:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x6f81:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x6f88:    75 06                              	jne 0x6f90 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x6f>
0x6f8a:    83 c4 24                           	add esp, 0x24
0x6f8d:    5b                                 	pop ebx
0x6f8e:    5e                                 	pop esi
0x6f8f:    c3                                 	ret 
; data inside code section at 0x6f90 -- 0x6f91
0x6f90:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6f91 -- 0x6f92
; data inside code section at 0x6f92 -- 0x6fa3
0x6f92:    ff ff ff 89 c6 89 1c 24  e8 c1 5c 00 00 89 34 24   |.......$..\...4$|
0x6fa2:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x6fa3 -- 0x6fa4
; data inside code section at 0x6fa4 -- 0x6fa7
0x6fa4:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x6fb0 -- 0x6fb7
0x6fb0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x6fb5:    eb 09                              	jmp 0x6fc0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv>
; data inside code section at 0x6fb7 -- 0x6fc0
0x6fb7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x6fc0 -- 0x7020
0x6fc0:    56                                 	push esi
0x6fc1:    53                                 	push ebx
0x6fc2:    83 ec 24                           	sub esp, 0x24
0x6fc5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x6fc9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6fcf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6fd3:    31 c0                              	xor eax, eax
0x6fd5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
0x6fdc:    e8 fc ff ff ff                     	call 0x6fdd
0x6fe1:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x6fe5:    89 c3                              	mov ebx, eax
0x6fe7:    89 04 24                           	mov dword ptr [esp], eax
0x6fea:    e8 e1 6e 00 00                     	call 0xded0 <unknown_ded0>
0x6fef:    c7 03 f8 85 00 00                  	mov dword ptr [ebx], 0x85f8
0x6ff5:    c7 43 08 14 86 00 00               	mov dword ptr [ebx + 8], 0x8614
0x6ffc:    c7 43 1c 24 86 00 00               	mov dword ptr [ebx + 0x1c], 0x8624
0x7003:    c7 44 24 08 e0 67 00 00            	mov dword ptr [esp + 8], 0x67e0
0x700b:    c7 44 24 04 50 86 00 00            	mov dword ptr [esp + 4], 0x8650
0x7013:    89 1c 24                           	mov dword ptr [esp], ebx
0x7016:    e8 fc ff ff ff                     	call 0x7017
0x701b:    89 c6                              	mov esi, eax
0x701d:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x7020 -- 0x7021
0x7020:    e8                                                 |.               |
; dynamically linked function: __cxa_free_exception at 0x7021 -- 0x7022
; data inside code section at 0x7022 -- 0x7029
0x7022:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x7029 -- 0x702a
; data inside code section at 0x702a -- 0x702d
0x702a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_ at 0x7030 -- 0x704c
0x7030:    56                                 	push esi
0x7031:    53                                 	push ebx
0x7032:    83 ec 44                           	sub esp, 0x44
0x7035:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x7039:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x703f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x7043:    31 c0                              	xor eax, eax
0x7045:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x704c -- 0x704d
0x704c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x704d -- 0x704e
; data inside code section at 0x704e -- 0x7070
0x704e:    ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x705e:    00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x706e:    ff ff                                              |..              |
; function: function_7070 at 0x7070 -- 0x707b
0x7070:    ff c7                              	inc edi
0x7072:    44                                 	inc esp
0x7073:    24 20                              	and al, 0x20
0x7075:    b8 85 00 00 89                     	mov eax, 0x89000085
0x707a:    c3                                 	ret 
; data inside code section at 0x707b -- 0x70dd
0x707b:    8b 46 04 8d 74 24 20 c7  44 24 28 cc 85 00 00 89   |.F..t$ .D$(.....|
0x708b:    74 24 04 89 44 24 24 89  1c 24 e8 b6 6e 00 00 8d   |t$..D$$..$..n...|
0x709b:    44 24 28 c7 03 f8 85 00  00 c7 43 08 14 86 00 00   |D$(.......C.....|
0x70ab:    c7 43 1c 24 86 00 00 89  44 24 04 8d 43 08 89 04   |.C.$....D$..C...|
0x70bb:    24 e8 5f 6d 00 00 89 34  24 e8 07 63 00 00 c7 44   |$._m...4$..c...D|
0x70cb:    24 08 e0 67 00 00 c7 44  24 04 50 86 00 00 89 1c   |$..g...D$.P.....|
0x70db:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x70dd -- 0x70de
; data inside code section at 0x70de -- 0x70e1
0x70de:    ff ff ff                                           |...             |
; function: function_70e1 at 0x70e1 -- 0x70e2
; data inside code section at 0x70e2 -- 0x70f1
0x70e2:    44 24 1c 89 34 24 e8 e3  62 00 00 89 1c 24 e8      |D$..4$..b....$. |
; dynamically linked function: __cxa_free_exception at 0x70f1 -- 0x70f2
; data inside code section at 0x70f2 -- 0x70fd
0x70f2:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x70fd -- 0x70fe
; data inside code section at 0x70fe -- 0x7100
0x70fe:    ff ff                                              |..              |
; function: function_7100 at 0x7100 -- 0x711a
0x7100:    ff c7                              	inc edi
0x7102:    43                                 	inc ebx
0x7103:    1c 00                              	sbb al, 0
0x7105:    85 00                              	test dword ptr [eax], eax
0x7107:    00 89 44 24 1c 89                  	add byte ptr [ecx - 0x76e3dbbc], cl
0x710d:    1c 24                              	sbb al, 0x24
0x710f:    e8 bc 62 00 00                     	call 0xd3d0 <unknown_d3d0>
0x7114:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x7118:    eb c7                              	jmp 0x70e1 <function_70e1>
; section: .text._ZN5boost15recursive_mutexC2Ev
; function: _ZN5boost15recursive_mutexC1Ev at 0x7120 -- 0x713f
0x7120:    53                                 	push ebx
0x7121:    83 ec 48                           	sub esp, 0x48
0x7124:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x7128:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x712e:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x7132:    31 c0                              	xor eax, eax
0x7134:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x713c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x713f -- 0x7140
0x713f:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x7140 -- 0x7141
; data inside code section at 0x7141 -- 0x715b
0x7141:    ff ff ff 85 c0 0f 85 a0  00 00 00 8d 43 18 c7 44   |............C..D|
0x7151:    24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x715b -- 0x715c
; data inside code section at 0x715c -- 0x715e
0x715c:    ff ff                                              |..              |
; function: function_715e at 0x715e -- 0x7184
0x715e:    ff 85 c0 75 25 8b                  	inc dword ptr [ebp - 0x74da8a40]
0x7164:    44                                 	inc esp
0x7165:    24 3c                              	and al, 0x3c
0x7167:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x716e:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x7172:    c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0x7179:    0f 85 8b 00 00 00                  	jne 0x720a <function_720a>
0x717f:    83 c4 48                           	add esp, 0x48
0x7182:    5b                                 	pop ebx
0x7183:    c3                                 	ret 
; data inside code section at 0x7184 -- 0x718c
0x7184:    8d 74 26 00 89 1c 24 e8                            |.t&...$.        |
; dynamically linked function: pthread_mutex_destroy at 0x718c -- 0x718d
; data inside code section at 0x718d -- 0x71d4
0x718d:    ff ff ff 85 c0 74 24 c7  44 24 0c b0 6c 00 00 c7   |.....t$.D$..l...|
0x719d:    44 24 08 53 00 00 00 c7  44 24 04 f0 58 00 00 c7   |D$.S....D$..X...|
0x71ad:    04 24 3e 4d 00 00 e8 fc  ff ff ff 8d 5c 24 34 c7   |.$>M........\$4.|
0x71bd:    44 24 38 00 00 00 00 c7  44 24 34 98 85 00 00 89   |D$8.....D$4.....|
0x71cd:    1c 24 e8 7c 6f 00 00                               |.$.|o..         |
; function: function_71d4 at 0x71d4 -- 0x71d5
; data inside code section at 0x71d5 -- 0x71e8
0x71d5:    44 24 1c 89 1c 24 e8 80  5c 00 00 8b 44 24 1c 89   |D$...$..\...D$..|
0x71e5:    04 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x71e8 -- 0x71e9
; data inside code section at 0x71e9 -- 0x71eb
0x71e9:    ff ff                                              |..              |
; function: function_71eb at 0x71eb -- 0x720a
0x71eb:    ff 8d 5c 24 2c c7                  	dec dword ptr [ebp - 0x38d3dba4]
0x71f1:    44                                 	inc esp
0x71f2:    24 30                              	and al, 0x30
0x71f4:    00 00                              	add byte ptr [eax], al
0x71f6:    00 00                              	add byte ptr [eax], al
0x71f8:    c7 44 24 2c 98 85 00 00            	mov dword ptr [esp + 0x2c], 0x8598
0x7200:    89 1c 24                           	mov dword ptr [esp], ebx
0x7203:    e8 48 6f 00 00                     	call 0xe150 <unknown_e150>
0x7208:    eb ca                              	jmp 0x71d4 <function_71d4>
; function: function_720a at 0x720a -- 0x720b
; dynamically linked function: __stack_chk_fail at 0x720b -- 0x720c
; data inside code section at 0x720c -- 0x720f
0x720c:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_ at 0x7210 -- 0x7280
0x7210:    56                                 	push esi
0x7211:    53                                 	push ebx
0x7212:    83 ec 24                           	sub esp, 0x24
0x7215:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x7219:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x721d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7223:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x7227:    31 c0                              	xor eax, eax
0x7229:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x722c:    c7 03 b0 84 00 00                  	mov dword ptr [ebx], 0x84b0
0x7232:    c7 43 08 c8 84 00 00               	mov dword ptr [ebx + 8], 0x84c8
0x7239:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x723c:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x723f:    85 c0                              	test eax, eax
0x7241:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x7244:    74 08                              	je 0x724e <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x3e>
0x7246:    8b 10                              	mov edx, dword ptr [eax]
0x7248:    89 04 24                           	mov dword ptr [esp], eax
0x724b:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x724e:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x7251:    c7 43 08 ec 84 00 00               	mov dword ptr [ebx + 8], 0x84ec
0x7258:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x725b:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x725e:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x7261:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x7264:    c7 03 d8 84 00 00                  	mov dword ptr [ebx], 0x84d8
0x726a:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x726d:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x7271:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x7278:    75 06                              	jne 0x7280 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x6f>
0x727a:    83 c4 24                           	add esp, 0x24
0x727d:    5b                                 	pop ebx
0x727e:    5e                                 	pop esi
0x727f:    c3                                 	ret 
; data inside code section at 0x7280 -- 0x7281
0x7280:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x7281 -- 0x7282
; data inside code section at 0x7282 -- 0x7293
0x7282:    ff ff ff 89 c6 89 1c 24  e8 01 5d 00 00 89 34 24   |.......$..]...4$|
0x7292:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x7293 -- 0x7294
; data inside code section at 0x7294 -- 0x7297
0x7294:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x72a0 -- 0x72a7
0x72a0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x72a5:    eb 09                              	jmp 0x72b0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv>
; data inside code section at 0x72a7 -- 0x72b0
0x72a7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x72b0 -- 0x72cc
0x72b0:    56                                 	push esi
0x72b1:    53                                 	push ebx
0x72b2:    83 ec 24                           	sub esp, 0x24
0x72b5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x72b9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x72bf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x72c3:    31 c0                              	xor eax, eax
0x72c5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x72cc -- 0x72cd
0x72cc:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x72cd -- 0x72ce
; data inside code section at 0x72ce -- 0x72d0
0x72ce:    ff ff                                              |..              |
; function: function_72d0 at 0x72d0 -- 0x72d7
0x72d0:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x72d6:    c3                                 	ret 
; data inside code section at 0x72d7 -- 0x7307
0x72d7:    89 04 24 e8 d1 71 00 00  c7 03 18 85 00 00 c7 43   |..$..q.........C|
0x72e7:    08 34 85 00 00 c7 43 1c  44 85 00 00 c7 44 24 08   |.4....C.D....D$.|
0x72f7:    80 66 00 00 c7 44 24 04  70 85 00 00 89 1c 24 e8   |.f...D$.p.....$.|
; dynamically linked function: __cxa_throw at 0x7307 -- 0x7308
; data inside code section at 0x7308 -- 0x731d
0x7308:    ff ff ff 89 c6 89 1c 24  e8 fc ff ff ff 89 34 24   |.......$......4$|
0x7318:    e8 fc ff ff ff                                     |.....           |
; section: .text._ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_ at 0x7320 -- 0x733c
0x7320:    56                                 	push esi
0x7321:    53                                 	push ebx
0x7322:    83 ec 44                           	sub esp, 0x44
0x7325:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x7329:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x732f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x7333:    31 c0                              	xor eax, eax
0x7335:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x733c -- 0x733d
0x733c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x733d -- 0x733e
; data inside code section at 0x733e -- 0x736a
0x733e:    ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x734e:    00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x735e:    ff ff ff c7 44 24 20 d8  84 00 00 89               |....D$ .....    |
; function: function_736a at 0x736a -- 0x736b
0x736a:    c3                                 	ret 
; data inside code section at 0x736b -- 0x73cd
0x736b:    8b 46 04 8d 74 24 20 c7  44 24 28 ec 84 00 00 89   |.F..t$ .D$(.....|
0x737b:    74 24 04 89 44 24 24 89  1c 24 e8 a6 71 00 00 8d   |t$..D$$..$..q...|
0x738b:    44 24 28 c7 03 18 85 00  00 c7 43 08 34 85 00 00   |D$(.......C.4...|
0x739b:    c7 43 1c 44 85 00 00 89  44 24 04 8d 43 08 89 04   |.C.D....D$..C...|
0x73ab:    24 e8 5f 6d 00 00 89 34  24 e8 77 63 00 00 c7 44   |$._m...4$.wc...D|
0x73bb:    24 08 80 66 00 00 c7 44  24 04 70 85 00 00 89 1c   |$..f...D$.p.....|
0x73cb:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x73cd -- 0x73ce
; data inside code section at 0x73ce -- 0x73d1
0x73ce:    ff ff ff                                           |...             |
; function: function_73d1 at 0x73d1 -- 0x73d2
; data inside code section at 0x73d2 -- 0x73ed
0x73d2:    44 24 1c 89 34 24 e8 53  63 00 00 89 1c 24 e8 fc   |D$..4$.Sc....$..|
0x73e2:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x73ed -- 0x73ee
; data inside code section at 0x73ee -- 0x73f0
0x73ee:    ff ff                                              |..              |
; function: function_73f0 at 0x73f0 -- 0x740a
0x73f0:    ff c7                              	inc edi
0x73f2:    43                                 	inc ebx
0x73f3:    1c 00                              	sbb al, 0
0x73f5:    85 00                              	test dword ptr [eax], eax
0x73f7:    00 89 44 24 1c 89                  	add byte ptr [ecx - 0x76e3dbbc], cl
0x73fd:    1c 24                              	sbb al, 0x24
0x73ff:    e8 2c 63 00 00                     	call 0xd730 <unknown_d730>
0x7404:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x7408:    eb c7                              	jmp 0x73d1 <function_73d1>
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x7410 -- 0x74dc
0x7410:    56                                 	push esi
0x7411:    53                                 	push ebx
0x7412:    83 ec 54                           	sub esp, 0x54
0x7415:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x741b:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x741f:    31 c0                              	xor eax, eax
0x7421:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x7425:    80 3d f8 86 00 00 00               	cmp byte ptr [0x86f8], 0
0x742c:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x7434:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x743c:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x7444:    c7 44 24 40 ff ff ff ff            	mov dword ptr [esp + 0x40], 0xffffffff
0x744c:    c7 44 24 30 78 86 00 00            	mov dword ptr [esp + 0x30], 0x8678
0x7454:    c7 44 24 44 88 86 00 00            	mov dword ptr [esp + 0x44], 0x8688
0x745c:    c7 44 24 14 b8 86 00 00            	mov dword ptr [esp + 0x14], 0x86b8
0x7464:    c7 44 24 28 d0 86 00 00            	mov dword ptr [esp + 0x28], 0x86d0
0x746c:    c7 44 24 2c e4 86 00 00            	mov dword ptr [esp + 0x2c], 0x86e4
0x7474:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x747c:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x7484:    c7 44 24 1c f0 6c 00 00            	mov dword ptr [esp + 0x1c], 0x6cf0 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x748c:    c7 44 24 20 f8 59 00 00            	mov dword ptr [esp + 0x20], 0x59f8 ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x7494:    c7 44 24 24 51 00 00 00            	mov dword ptr [esp + 0x24], 0x51
0x749c:    0f 84 8e 00 00 00                  	je 0x7530 <function_7530>
0x74a2:    a1 f8 86 00 00                     	mov eax, dword ptr [0x86f8]
0x74a7:    89 03                              	mov dword ptr [ebx], eax
0x74a9:    a1 fc 86 00 00                     	mov eax, dword ptr [0x86fc]
0x74ae:    85 c0                              	test eax, eax
0x74b0:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x74b3:    74 04                              	je 0x74b9 <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xa9>
0x74b5:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x74b9:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x74bd:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x74c1:    89 04 24                           	mov dword ptr [esp], eax
0x74c4:    c7 44 24 2c 00 85 00 00            	mov dword ptr [esp + 0x2c], 0x8500
0x74cc:    c7 44 24 14 78 86 00 00            	mov dword ptr [esp + 0x14], 0x8678
0x74d4:    c7 44 24 28 88 86 00 00            	mov dword ptr [esp + 0x28], 0x8688
; data inside code section at 0x74dc -- 0x74dd
0x74dc:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x74dd -- 0x74de
; data inside code section at 0x74de -- 0x7505
0x74de:    ff ff ff 89 34 24 8d 74  24 30 e8 e3 61 00 00 8d   |....4$.t$0..a...|
0x74ee:    44 24 44 89 04 24 c7 44  24 30 78 86 00 00 c7 44   |D$D..$.D$0x....D|
0x74fe:    24 44 88 86 00 00 e8                               |$D.....         |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x7505 -- 0x7506
; data inside code section at 0x7506 -- 0x7508
0x7506:    ff ff                                              |..              |
; function: function_7508 at 0x7508 -- 0x752c
0x7508:    ff 89 34 24 e8 bf                  	dec dword ptr [ecx - 0x4017dbcc]
0x750e:    61                                 	popal 
0x750f:    00 00                              	add byte ptr [eax], al
0x7511:    89 d8                              	mov eax, ebx
0x7513:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x7517:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x751e:    0f 85 d7 00 00 00                  	jne 0x75fb <function_75fb>
0x7524:    83 c4 54                           	add esp, 0x54
0x7527:    5b                                 	pop ebx
0x7528:    5e                                 	pop esi
0x7529:    c2 04 00                           	ret 4
; data inside code section at 0x752c -- 0x7530
0x752c:    8d 74 26 00                                        |.t&.            |
; function: function_7530 at 0x7530 -- 0x7537
0x7530:    c7 04 24 f8 86 00 00               	mov dword ptr [esp], 0x86f8
; data inside code section at 0x7537 -- 0x7538
0x7537:    e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x7538 -- 0x7539
; data inside code section at 0x7539 -- 0x754c
0x7539:    ff ff ff 85 c0 0f 84 5e  ff ff ff c7 04 24 1c 00   |.......^.....$..|
0x7549:    00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x754c -- 0x754d
; data inside code section at 0x754d -- 0x75ae
0x754d:    ff ff ff 89 c6 c7 00 c8  84 00 00 8b 44 24 18 85   |............D$..|
0x755d:    c0 89 46 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..F.t.....$.R..D|
0x756d:    24 1c c7 06 b8 86 00 00  c7 46 14 d0 86 00 00 c7   |$........F......|
0x757d:    46 18 e4 86 00 00 89 46  08 8b 44 24 20 c7 05 fc   |F......F..D$ ...|
0x758d:    86 00 00 00 00 00 00 89  46 0c 8b 44 24 24 89 46   |........F..D$$.F|
0x759d:    10 8d 46 18 a3 f8 86 00  00 c7 04 24 10 00 00 00   |..F........$....|
0x75ad:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x75ae -- 0x75af
; data inside code section at 0x75af -- 0x75d6
0x75af:    ff ff ff c7 40 04 01 00  00 00 c7 00 20 87 00 00   |....@....... ...|
0x75bf:    89 70 0c c7 40 08 01 00  00 00 a3 fc 86 00 00 c7   |.p..@...........|
0x75cf:    04 24 f8 86 00 00 e8                               |.$.....         |
; dynamically linked function: __cxa_guard_release at 0x75d6 -- 0x75d7
; data inside code section at 0x75d7 -- 0x75de
0x75d7:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x75de -- 0x75f1
; data inside code section at 0x75f1 -- 0x75f2
0x75f1:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x75f2 -- 0x75f3
; data inside code section at 0x75f3 -- 0x75f6
0x75f3:    ff ff ff                                           |...             |
; function: function_75f6 at 0x75f6 -- 0x75fb
0x75f6:    e9 a7 fe ff ff                     	jmp 0x74a2
; function: function_75fb at 0x75fb -- 0x75fc
; dynamically linked function: __stack_chk_fail at 0x75fc -- 0x75fd
; data inside code section at 0x75fd -- 0x7604
0x75fd:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x7604 -- 0x7605
; data inside code section at 0x7605 -- 0x7611
0x7605:    ff ff ff 8b 06 89 34 24  ff 50 04 e8               |......4$.P..    |
; dynamically linked function: __cxa_rethrow at 0x7611 -- 0x7612
; data inside code section at 0x7612 -- 0x7616
0x7612:    ff ff ff 89                                        |....            |
; function: function_7616 at 0x7616 -- 0x7617
0x7616:    c3                                 	ret 
; data inside code section at 0x7617 -- 0x761f
0x7617:    89 34 24 e8 fc ff ff ff                            |.4$.....        |
; function: function_761f at 0x761f -- 0x7620
; data inside code section at 0x7620 -- 0x7627
0x7620:    04 24 f8 86 00 00 e8                               |.$.....         |
; dynamically linked function: __cxa_guard_abort at 0x7627 -- 0x7628
; data inside code section at 0x7628 -- 0x7647
0x7628:    ff ff ff 8d 44 24 14 89  04 24 e8 69 62 00 00 8d   |....D$...$.ib...|
0x7638:    44 24 30 89 04 24 e8 0d  61 00 00 89 1c 24 e8      |D$0..$..a....$. |
; dynamically linked function: _Unwind_Resume at 0x7647 -- 0x7648
; data inside code section at 0x7648 -- 0x764a
0x7648:    ff ff                                              |..              |
; function: function_764a at 0x764a -- 0x7651
0x764a:    ff 89 c3 eb d0 89                  	dec dword ptr [ecx - 0x762f143d]
0x7650:    c3                                 	ret 
; data inside code section at 0x7651 -- 0x7652
0x7651:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x7652 -- 0x7653
; data inside code section at 0x7653 -- 0x7656
0x7653:    ff ff ff                                           |...             |
; function: function_7656 at 0x7656 -- 0x7658
0x7656:    eb c7                              	jmp 0x761f <function_761f>
; section: .text._ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
; function: _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ at 0x7660 -- 0x76b8
0x7660:    83 ec 2c                           	sub esp, 0x2c
0x7663:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x7667:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x766b:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x766f:    8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x7673:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7679:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x767d:    31 c0                              	xor eax, eax
0x767f:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x7683:    89 1c 24                           	mov dword ptr [esp], ebx
0x7686:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x768a:    e8 fc ff ff ff                     	call 0x768b
0x768f:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x7693:    89 1c 24                           	mov dword ptr [esp], ebx
0x7696:    e8 fc ff ff ff                     	call 0x7697
0x769b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x769f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x76a6:    89 d8                              	mov eax, ebx
0x76a8:    75 0e                              	jne 0x76b8 <_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_+0x55>
0x76aa:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x76ae:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x76b2:    83 c4 2c                           	add esp, 0x2c
0x76b5:    c2 04 00                           	ret 4
; data inside code section at 0x76b8 -- 0x76b9
0x76b8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x76b9 -- 0x76ba
; data inside code section at 0x76ba -- 0x76c3
0x76ba:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x76c3 -- 0x76c4
; data inside code section at 0x76c4 -- 0x76cf
0x76c4:    ff ff ff 89 34 24 e8 fc  ff ff ff                  |....4$.....     |
; section: .text._ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
; function: _ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_ at 0x76d0 -- 0x78a5
0x76d0:    55                                 	push ebp
0x76d1:    57                                 	push edi
0x76d2:    56                                 	push esi
0x76d3:    53                                 	push ebx
0x76d4:    83 ec 4c                           	sub esp, 0x4c
0x76d7:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x76db:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x76e1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x76e5:    31 c0                              	xor eax, eax
0x76e7:    8b 5c 24 64                        	mov ebx, dword ptr [esp + 0x64]
0x76eb:    8b 7c 24 68                        	mov edi, dword ptr [esp + 0x68]
0x76ef:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x76f2:    3b 46 08                           	cmp eax, dword ptr [esi + 8]
0x76f5:    0f 84 b5 00 00 00                  	je 0x77b0 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xe0>
0x76fb:    31 d2                              	xor edx, edx
0x76fd:    85 c0                              	test eax, eax
0x76ff:    74 1a                              	je 0x771b <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x4b>
0x7701:    8b 50 f0                           	mov edx, dword ptr [eax - 0x10]
0x7704:    89 10                              	mov dword ptr [eax], edx
0x7706:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x7709:    89 50 04                           	mov dword ptr [eax + 4], edx
0x770c:    8b 50 f8                           	mov edx, dword ptr [eax - 8]
0x770f:    89 50 08                           	mov dword ptr [eax + 8], edx
0x7712:    8b 50 fc                           	mov edx, dword ptr [eax - 4]
0x7715:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x7718:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x771b:    8d 42 10                           	lea eax, [edx + 0x10]
0x771e:    89 46 04                           	mov dword ptr [esi + 4], eax
0x7721:    8b 07                              	mov eax, dword ptr [edi]
0x7723:    8d 4a f0                           	lea ecx, [edx - 0x10]
0x7726:    89 ce                              	mov esi, ecx
0x7728:    29 de                              	sub esi, ebx
0x772a:    c1 fe 04                           	sar esi, 4
0x772d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x7731:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x7734:    85 f6                              	test esi, esi
0x7736:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x773a:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x773d:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x7741:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x7744:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x7748:    7e 2e                              	jle 0x7778 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xa8>
0x774a:    31 c0                              	xor eax, eax
0x774c:    8d 74 26 00                        	lea esi, [esi]
0x7750:    8b 7c 01 f0                        	mov edi, dword ptr [ecx + eax - 0x10]
0x7754:    89 7c 02 f0                        	mov dword ptr [edx + eax - 0x10], edi
0x7758:    8b 7c 01 f4                        	mov edi, dword ptr [ecx + eax - 0xc]
0x775c:    89 7c 02 f4                        	mov dword ptr [edx + eax - 0xc], edi
0x7760:    8b 7c 01 f8                        	mov edi, dword ptr [ecx + eax - 8]
0x7764:    89 7c 02 f8                        	mov dword ptr [edx + eax - 8], edi
0x7768:    8b 7c 01 fc                        	mov edi, dword ptr [ecx + eax - 4]
0x776c:    89 7c 02 fc                        	mov dword ptr [edx + eax - 4], edi
0x7770:    83 e8 10                           	sub eax, 0x10
0x7773:    83 ee 01                           	sub esi, 1
0x7776:    75 d8                              	jne 0x7750 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x80>
0x7778:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x777c:    89 03                              	mov dword ptr [ebx], eax
0x777e:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x7782:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x7785:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x7789:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x778c:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x7790:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x7793:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x7797:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x779e:    0f 85 64 01 00 00                  	jne 0x7908 <function_7908>
0x77a4:    83 c4 4c                           	add esp, 0x4c
0x77a7:    5b                                 	pop ebx
0x77a8:    5e                                 	pop esi
0x77a9:    5f                                 	pop edi
0x77aa:    5d                                 	pop ebp
0x77ab:    c3                                 	ret 
; data inside code section at 0x77ac -- 0x77b0
0x77ac:    8d 74 26 00                                        |.t&.            |
0x77b0:    8b 16                              	mov edx, dword ptr [esi]
0x77b2:    29 d0                              	sub eax, edx
0x77b4:    c1 f8 04                           	sar eax, 4
0x77b7:    85 c0                              	test eax, eax
0x77b9:    0f 84 04 01 00 00                  	je 0x78c3 <function_78c3>
0x77bf:    8d 0c 00                           	lea ecx, [eax + eax]
0x77c2:    39 c8                              	cmp eax, ecx
0x77c4:    0f 86 0d 01 00 00                  	jbe 0x78d7 <function_78d7>
0x77ca:    89 dd                              	mov ebp, ebx
0x77cc:    29 d5                              	sub ebp, edx
0x77ce:    c1 fd 04                           	sar ebp, 4
0x77d1:    c7 44 24 1c f0 ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffff0
0x77d9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x77dd:    89 14 24                           	mov dword ptr [esp], edx
0x77e0:    e8 fc ff ff ff                     	call 0x77e1
0x77e5:    8d 50 10                           	lea edx, [eax + 0x10]
0x77e8:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x77ec:    c1 e5 04                           	shl ebp, 4
0x77ef:    01 c5                              	add ebp, eax
0x77f1:    74 17                              	je 0x780a <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x13a>
0x77f3:    8b 17                              	mov edx, dword ptr [edi]
0x77f5:    89 55 00                           	mov dword ptr [ebp], edx
0x77f8:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x77fb:    89 55 04                           	mov dword ptr [ebp + 4], edx
0x77fe:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x7801:    89 55 08                           	mov dword ptr [ebp + 8], edx
0x7804:    8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x7807:    89 55 0c                           	mov dword ptr [ebp + 0xc], edx
0x780a:    8b 3e                              	mov edi, dword ptr [esi]
0x780c:    39 df                              	cmp edi, ebx
0x780e:    74 3e                              	je 0x784e <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x17e>
0x7810:    89 f9                              	mov ecx, edi
0x7812:    89 c2                              	mov edx, eax
0x7814:    8d 74 26 00                        	lea esi, [esi]
0x7818:    85 d2                              	test edx, edx
0x781a:    74 16                              	je 0x7832 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x162>
0x781c:    8b 29                              	mov ebp, dword ptr [ecx]
0x781e:    89 2a                              	mov dword ptr [edx], ebp
0x7820:    8b 69 04                           	mov ebp, dword ptr [ecx + 4]
0x7823:    89 6a 04                           	mov dword ptr [edx + 4], ebp
0x7826:    8b 69 08                           	mov ebp, dword ptr [ecx + 8]
0x7829:    89 6a 08                           	mov dword ptr [edx + 8], ebp
0x782c:    8b 69 0c                           	mov ebp, dword ptr [ecx + 0xc]
0x782f:    89 6a 0c                           	mov dword ptr [edx + 0xc], ebp
0x7832:    83 c1 10                           	add ecx, 0x10
0x7835:    83 c2 10                           	add edx, 0x10
0x7838:    39 d9                              	cmp ecx, ebx
0x783a:    75 dc                              	jne 0x7818 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x148>
0x783c:    83 c7 10                           	add edi, 0x10
0x783f:    89 da                              	mov edx, ebx
0x7841:    29 fa                              	sub edx, edi
0x7843:    83 e2 f0                           	and edx, 0xfffffff0
0x7846:    8d 54 10 20                        	lea edx, [eax + edx + 0x20]
0x784a:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x784e:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x7851:    39 dd                              	cmp ebp, ebx
0x7853:    74 43                              	je 0x7898 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1c8>
0x7855:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x7859:    89 d9                              	mov ecx, ebx
0x785b:    90                                 	nop 
0x785c:    8d 74 26 00                        	lea esi, [esi]
0x7860:    85 d2                              	test edx, edx
0x7862:    74 16                              	je 0x787a <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x1aa>
0x7864:    8b 39                              	mov edi, dword ptr [ecx]
0x7866:    89 3a                              	mov dword ptr [edx], edi
0x7868:    8b 79 04                           	mov edi, dword ptr [ecx + 4]
0x786b:    89 7a 04                           	mov dword ptr [edx + 4], edi
0x786e:    8b 79 08                           	mov edi, dword ptr [ecx + 8]
0x7871:    89 7a 08                           	mov dword ptr [edx + 8], edi
0x7874:    8b 79 0c                           	mov edi, dword ptr [ecx + 0xc]
0x7877:    89 7a 0c                           	mov dword ptr [edx + 0xc], edi
0x787a:    83 c1 10                           	add ecx, 0x10
0x787d:    83 c2 10                           	add edx, 0x10
0x7880:    39 cd                              	cmp ebp, ecx
0x7882:    75 dc                              	jne 0x7860 <_ZNSt6vectorI8CNetAddrSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x190>
0x7884:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x7888:    83 c3 10                           	add ebx, 0x10
0x788b:    29 dd                              	sub ebp, ebx
0x788d:    83 e5 f0                           	and ebp, 0xfffffff0
0x7890:    8d 54 2a 10                        	lea edx, [edx + ebp + 0x10]
0x7894:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x7898:    8b 16                              	mov edx, dword ptr [esi]
0x789a:    85 d2                              	test edx, edx
0x789c:    74 10                              	je 0x78ae <function_78ae>
0x789e:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x78a2:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x78a5 -- 0x78a6
0x78a5:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x78a6 -- 0x78a7
; data inside code section at 0x78a7 -- 0x78ae
0x78a7:    ff ff ff 8b 44 24 14                               |....D$.         |
; function: function_78ae at 0x78ae -- 0x78c3
0x78ae:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x78b2:    89 06                              	mov dword ptr [esi], eax
0x78b4:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x78b8:    89 56 04                           	mov dword ptr [esi + 4], edx
0x78bb:    89 46 08                           	mov dword ptr [esi + 8], eax
0x78be:    e9 d0 fe ff ff                     	jmp 0x7793
; function: function_78c3 at 0x78c3 -- 0x78d7
0x78c3:    89 dd                              	mov ebp, ebx
0x78c5:    29 d5                              	sub ebp, edx
0x78c7:    c1 fd 04                           	sar ebp, 4
0x78ca:    c7 44 24 1c 10 00 00 00            	mov dword ptr [esp + 0x1c], 0x10
0x78d2:    e9 02 ff ff ff                     	jmp 0x77d9
; function: function_78d7 at 0x78d7 -- 0x7908
0x78d7:    81 f9 ff ff ff 0f                  	cmp ecx, 0xfffffff
0x78dd:    0f 87 e7 fe ff ff                  	ja 0x77ca
0x78e3:    89 dd                              	mov ebp, ebx
0x78e5:    29 d5                              	sub ebp, edx
0x78e7:    c1 e0 05                           	shl eax, 5
0x78ea:    c1 fd 04                           	sar ebp, 4
0x78ed:    85 c9                              	test ecx, ecx
0x78ef:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x78f3:    0f 85 e0 fe ff ff                  	jne 0x77d9
0x78f9:    c7 44 24 18 10 00 00 00            	mov dword ptr [esp + 0x18], 0x10
0x7901:    31 c0                              	xor eax, eax
0x7903:    e9 e4 fe ff ff                     	jmp 0x77ec
; function: function_7908 at 0x7908 -- 0x790d
0x7908:    e8 fc ff ff ff                     	call 0x7909
; section: .text._ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED2Ev
; function: _ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev at 0x7910 -- 0x7961
0x7910:    53                                 	push ebx
0x7911:    83 ec 28                           	sub esp, 0x28
0x7914:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x7918:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x791f:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x7923:    31 d2                              	xor edx, edx
0x7925:    80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x7929:    75 15                              	jne 0x7940 <_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev+0x30>
0x792b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x792f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x7936:    75 4e                              	jne 0x7986 <function_7986>
0x7938:    83 c4 28                           	add esp, 0x28
0x793b:    5b                                 	pop ebx
0x793c:    c3                                 	ret 
; data inside code section at 0x793d -- 0x7940
0x793d:    8d 76 00                                           |.v.             |
0x7940:    8b 18                              	mov ebx, dword ptr [eax]
0x7942:    89 1c 24                           	mov dword ptr [esp], ebx
0x7945:    e8 fc ff ff ff                     	call 0x7946
0x794a:    85 c0                              	test eax, eax
0x794c:    75 3d                              	jne 0x798b <function_798b>
0x794e:    8b 43 50                           	mov eax, dword ptr [ebx + 0x50]
0x7951:    83 e8 01                           	sub eax, 1
0x7954:    85 c0                              	test eax, eax
0x7956:    89 43 50                           	mov dword ptr [ebx + 0x50], eax
0x7959:    74 25                              	je 0x7980 <function_7980>
0x795b:    8d 43 18                           	lea eax, [ebx + 0x18]
0x795e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7961 -- 0x7962
0x7961:    e8                                                 |.               |
; dynamically linked function: pthread_cond_signal at 0x7962 -- 0x7963
; data inside code section at 0x7963 -- 0x796e
0x7963:    ff ff ff 85 c0 75 26 89  1c 24 e8                  |.....u&..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x796e -- 0x796f
; data inside code section at 0x796f -- 0x7980
0x796f:    ff ff ff 85 c0 74 b5 e8  39 5b 00 00 90 8d 74 26   |.....t..9[....t&|
0x797f:    00                                                 |.               |
; function: function_7980 at 0x7980 -- 0x7986
0x7980:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x7984:    eb d5                              	jmp 0x795b
; function: function_7986 at 0x7986 -- 0x7987
; dynamically linked function: __stack_chk_fail at 0x7987 -- 0x7988
; data inside code section at 0x7988 -- 0x798b
0x7988:    ff ff ff                                           |...             |
; function: function_798b at 0x798b -- 0x7995
0x798b:    e8 f0 5a 00 00                     	call 0xd480 <unknown_d480>
0x7990:    e8 53 5b 00 00                     	call 0xd4e8 <unknown_d4e8>
; section: .text._ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh
; function: _ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh at 0x79a0 -- 0x7a6c
0x79a0:    83 ec 4c                           	sub esp, 0x4c
0x79a3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x79a7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x79ab:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x79b1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x79b5:    31 c0                              	xor eax, eax
0x79b7:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x79bb:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x79bf:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x79c3:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x79c7:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x79ca:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x79cd:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x79d1:    74 65                              	je 0x7a38 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh+0x98>
0x79d3:    31 c9                              	xor ecx, ecx
0x79d5:    85 c0                              	test eax, eax
0x79d7:    74 09                              	je 0x79e2 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh+0x42>
0x79d9:    0f b6 48 ff                        	movzx ecx, byte ptr [eax - 1]
0x79dd:    88 08                              	mov byte ptr [eax], cl
0x79df:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x79e2:    8d 41 01                           	lea eax, [ecx + 1]
0x79e5:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x79e8:    8d 41 ff                           	lea eax, [ecx - 1]
0x79eb:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x79ee:    29 f0                              	sub eax, esi
0x79f0:    75 2e                              	jne 0x7a20 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh+0x80>
0x79f2:    88 1e                              	mov byte ptr [esi], bl
0x79f4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x79f8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x79ff:    0f 85 ee 00 00 00                  	jne 0x7af3 <function_7af3>
0x7a05:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x7a09:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x7a0d:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x7a11:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x7a15:    83 c4 4c                           	add esp, 0x4c
0x7a18:    c3                                 	ret 
; data inside code section at 0x7a19 -- 0x7a20
0x7a19:    8d b4 26 00 00 00 00                               |..&....         |
0x7a20:    29 c1                              	sub ecx, eax
0x7a22:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x7a26:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x7a2a:    89 0c 24                           	mov dword ptr [esp], ecx
0x7a2d:    e8 fc ff ff ff                     	call 0x7a2e
0x7a32:    eb be                              	jmp 0x79f2 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh+0x52>
; data inside code section at 0x7a34 -- 0x7a38
0x7a34:    8d 74 26 00                                        |.t&.            |
0x7a38:    8b 0b                              	mov ecx, dword ptr [ebx]
0x7a3a:    29 c8                              	sub eax, ecx
0x7a3c:    83 f8 ff                           	cmp eax, -1
0x7a3f:    0f 84 b3 00 00 00                  	je 0x7af8 <function_7af8>
0x7a45:    89 f7                              	mov edi, esi
0x7a47:    bd 01 00 00 00                     	mov ebp, 1
0x7a4c:    29 cf                              	sub edi, ecx
0x7a4e:    85 c0                              	test eax, eax
0x7a50:    89 f9                              	mov ecx, edi
0x7a52:    74 0d                              	je 0x7a61 <_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh+0xc1>
0x7a54:    8d 3c 00                           	lea edi, [eax + eax]
0x7a57:    bd ff ff ff ff                     	mov ebp, 0xffffffff
0x7a5c:    39 f8                              	cmp eax, edi
0x7a5e:    0f 46 ef                           	cmovbe ebp, edi
0x7a61:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x7a65:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x7a69:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x7a6c -- 0x7a6d
0x7a6c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x7a6d -- 0x7a6e
; data inside code section at 0x7a6e -- 0x7ae0
0x7a6e:    ff ff ff 8b 4c 24 1c 8b  54 24 18 01 c1 89 c7 74   |....L$..T$.....t|
0x7a7e:    05 0f b6 02 88 01 8b 03  89 f1 31 d2 29 c1 74 18   |..........1.).t.|
0x7a8e:    89 4c 24 08 89 44 24 04  89 3c 24 89 4c 24 18 e8   |.L$..D$..<$.L$..|
0x7a9e:    fc ff ff ff 8b 54 24 18  8b 43 04 8d 4c 17 01 31   |.....T$..C..L..1|
0x7aae:    d2 29 f0 74 20 89 0c 24  89 4c 24 1c 89 44 24 08   |.).t ..$.L$..D$.|
0x7abe:    89 74 24 04 89 44 24 18  e8 fc ff ff ff 8b 4c 24   |.t$..D$.......L$|
0x7ace:    1c 8b 54 24 18 8b 03 8d  34 11 85 c0 74 08 89 04   |..T$....4...t...|
0x7ade:    24 e8                                              |$.              |
; dynamically linked function: _ZdlPv at 0x7ae0 -- 0x7ae1
; data inside code section at 0x7ae1 -- 0x7ae3
0x7ae1:    ff ff                                              |..              |
; function: function_7ae3 at 0x7ae3 -- 0x7af1
0x7ae3:    ff 89 3b 01 ef 89                  	dec dword ptr [ecx - 0x7610fec5]
0x7ae9:    73 04                              	jae 0x7aef <function_7ae3+0xc>
0x7aeb:    89 7b 08                           	mov dword ptr [ebx + 8], edi
; data inside code section at 0x7aee -- 0x7aef
0x7aee:    e9                                                 |.               |
0x7aef:    01 ff                              	add edi, edi
; data inside code section at 0x7af1 -- 0x7af3
0x7af1:    ff ff                                              |..              |
; function: function_7af3 at 0x7af3 -- 0x7af4
; dynamically linked function: __stack_chk_fail at 0x7af4 -- 0x7af5
; data inside code section at 0x7af5 -- 0x7af8
0x7af5:    ff ff ff                                           |...             |
; function: function_7af8 at 0x7af8 -- 0x7aff
0x7af8:    c7 04 24 98 4f 00 00               	mov dword ptr [esp], 0x4f98 ; "vector::_M_insert_aux"
; data inside code section at 0x7aff -- 0x7b00
0x7aff:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x7b00 -- 0x7b01
; data inside code section at 0x7b01 -- 0x7b04
0x7b01:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_
; function: _ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_ at 0x7b10 -- 0x7db1
0x7b10:    55                                 	push ebp
0x7b11:    57                                 	push edi
0x7b12:    56                                 	push esi
0x7b13:    53                                 	push ebx
0x7b14:    83 ec 4c                           	sub esp, 0x4c
0x7b17:    8b 7c 24 68                        	mov edi, dword ptr [esp + 0x68]
0x7b1b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7b21:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x7b25:    31 c0                              	xor eax, eax
0x7b27:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x7b2b:    8b 5c 24 64                        	mov ebx, dword ptr [esp + 0x64]
0x7b2f:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x7b33:    85 ff                              	test edi, edi
0x7b35:    0f 84 15 01 00 00                  	je 0x7c50 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x140>
0x7b3b:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x7b3e:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x7b41:    29 d0                              	sub eax, edx
0x7b43:    d1 f8                              	sar eax, 1
0x7b45:    69 c0 39 8e e3 38                  	imul eax, eax, 0x38e38e39
0x7b4b:    39 c7                              	cmp edi, eax
0x7b4d:    0f 87 1d 01 00 00                  	ja 0x7c70 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x160>
0x7b53:    8b 45 00                           	mov eax, dword ptr [ebp]
0x7b56:    89 44 24 2a                        	mov dword ptr [esp + 0x2a], eax
0x7b5a:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x7b5d:    89 44 24 2e                        	mov dword ptr [esp + 0x2e], eax
0x7b61:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x7b64:    89 44 24 32                        	mov dword ptr [esp + 0x32], eax
0x7b68:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x7b6b:    89 44 24 36                        	mov dword ptr [esp + 0x36], eax
0x7b6f:    0f b7 45 10                        	movzx eax, word ptr [ebp + 0x10]
0x7b73:    89 d5                              	mov ebp, edx
0x7b75:    29 dd                              	sub ebp, ebx
0x7b77:    d1 fd                              	sar ebp, 1
0x7b79:    69 ed 39 8e e3 38                  	imul ebp, ebp, 0x38e38e39
0x7b7f:    66 89 44 24 3a                     	mov word ptr [esp + 0x3a], ax
0x7b84:    39 ef                              	cmp edi, ebp
0x7b86:    0f 82 7c 02 00 00                  	jb 0x7e08 <function_7e08>
0x7b8c:    29 ef                              	sub edi, ebp
0x7b8e:    89 d0                              	mov eax, edx
0x7b90:    89 7c 24 18                        	mov dword ptr [esp + 0x18], edi
0x7b94:    74 35                              	je 0x7bcb <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0xbb>
0x7b96:    89 f9                              	mov ecx, edi
0x7b98:    85 c0                              	test eax, eax
0x7b9a:    74 24                              	je 0x7bc0 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0xb0>
0x7b9c:    8b 7c 24 2a                        	mov edi, dword ptr [esp + 0x2a]
0x7ba0:    89 38                              	mov dword ptr [eax], edi
0x7ba2:    8b 7c 24 2e                        	mov edi, dword ptr [esp + 0x2e]
0x7ba6:    89 78 04                           	mov dword ptr [eax + 4], edi
0x7ba9:    8b 7c 24 32                        	mov edi, dword ptr [esp + 0x32]
0x7bad:    89 78 08                           	mov dword ptr [eax + 8], edi
0x7bb0:    8b 7c 24 36                        	mov edi, dword ptr [esp + 0x36]
0x7bb4:    89 78 0c                           	mov dword ptr [eax + 0xc], edi
0x7bb7:    0f b7 7c 24 3a                     	movzx edi, word ptr [esp + 0x3a]
0x7bbc:    66 89 78 10                        	mov word ptr [eax + 0x10], di
0x7bc0:    83 c0 12                           	add eax, 0x12
0x7bc3:    83 e9 01                           	sub ecx, 1
0x7bc6:    75 d0                              	jne 0x7b98 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x88>
0x7bc8:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x7bcb:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x7bcf:    39 da                              	cmp edx, ebx
0x7bd1:    8d 0c ff                           	lea ecx, [edi + edi*8]
0x7bd4:    8d 04 48                           	lea eax, [eax + ecx*2]
0x7bd7:    89 46 04                           	mov dword ptr [esi + 4], eax
0x7bda:    0f 84 03 03 00 00                  	je 0x7ee3 <function_7ee3>
0x7be0:    89 d9                              	mov ecx, ebx
0x7be2:    8d b6 00 00 00 00                  	lea esi, [esi]
0x7be8:    85 c0                              	test eax, eax
0x7bea:    74 1e                              	je 0x7c0a <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0xfa>
0x7bec:    8b 39                              	mov edi, dword ptr [ecx]
0x7bee:    89 38                              	mov dword ptr [eax], edi
0x7bf0:    8b 79 04                           	mov edi, dword ptr [ecx + 4]
0x7bf3:    89 78 04                           	mov dword ptr [eax + 4], edi
0x7bf6:    8b 79 08                           	mov edi, dword ptr [ecx + 8]
0x7bf9:    89 78 08                           	mov dword ptr [eax + 8], edi
0x7bfc:    8b 79 0c                           	mov edi, dword ptr [ecx + 0xc]
0x7bff:    89 78 0c                           	mov dword ptr [eax + 0xc], edi
0x7c02:    0f b7 79 10                        	movzx edi, word ptr [ecx + 0x10]
0x7c06:    66 89 78 10                        	mov word ptr [eax + 0x10], di
0x7c0a:    83 c1 12                           	add ecx, 0x12
0x7c0d:    83 c0 12                           	add eax, 0x12
0x7c10:    39 ca                              	cmp edx, ecx
0x7c12:    75 d4                              	jne 0x7be8 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0xd8>
0x7c14:    8d 44 ed 00                        	lea eax, [ebp + ebp*8]
0x7c18:    8b 7c 24 2e                        	mov edi, dword ptr [esp + 0x2e]
0x7c1c:    01 c0                              	add eax, eax
0x7c1e:    8b 6c 24 2a                        	mov ebp, dword ptr [esp + 0x2a]
0x7c22:    01 46 04                           	add dword ptr [esi + 4], eax
0x7c25:    8b 4c 24 36                        	mov ecx, dword ptr [esp + 0x36]
0x7c29:    8b 74 24 32                        	mov esi, dword ptr [esp + 0x32]
0x7c2d:    0f b7 44 24 3a                     	movzx eax, word ptr [esp + 0x3a]
0x7c32:    8d b6 00 00 00 00                  	lea esi, [esi]
0x7c38:    89 2b                              	mov dword ptr [ebx], ebp
0x7c3a:    89 7b 04                           	mov dword ptr [ebx + 4], edi
0x7c3d:    89 73 08                           	mov dword ptr [ebx + 8], esi
0x7c40:    89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0x7c43:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x7c47:    83 c3 12                           	add ebx, 0x12
0x7c4a:    39 da                              	cmp edx, ebx
0x7c4c:    75 ea                              	jne 0x7c38 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x128>
0x7c4e:    66 90                              	nop 
0x7c50:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x7c54:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x7c5b:    0f 85 91 02 00 00                  	jne 0x7ef2 <function_7ef2>
0x7c61:    83 c4 4c                           	add esp, 0x4c
0x7c64:    5b                                 	pop ebx
0x7c65:    5e                                 	pop esi
0x7c66:    5f                                 	pop edi
0x7c67:    5d                                 	pop ebp
0x7c68:    c3                                 	ret 
; data inside code section at 0x7c69 -- 0x7c70
0x7c69:    8d b4 26 00 00 00 00                               |..&....         |
0x7c70:    8b 06                              	mov eax, dword ptr [esi]
0x7c72:    b9 8e e3 38 0e                     	mov ecx, 0xe38e38e
0x7c77:    29 c2                              	sub edx, eax
0x7c79:    d1 fa                              	sar edx, 1
0x7c7b:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x7c81:    29 d1                              	sub ecx, edx
0x7c83:    39 cf                              	cmp edi, ecx
0x7c85:    0f 87 78 02 00 00                  	ja 0x7f03 <function_7f03>
0x7c8b:    39 fa                              	cmp edx, edi
0x7c8d:    89 f9                              	mov ecx, edi
0x7c8f:    0f 43 ca                           	cmovae ecx, edx
0x7c92:    01 ca                              	add edx, ecx
0x7c94:    0f 82 36 01 00 00                  	jb 0x7dd0 <function_7dd0>
0x7c9a:    81 fa 8e e3 38 0e                  	cmp edx, 0xe38e38e
0x7ca0:    0f 87 2a 01 00 00                  	ja 0x7dd0 <function_7dd0>
0x7ca6:    89 d9                              	mov ecx, ebx
0x7ca8:    29 c1                              	sub ecx, eax
0x7caa:    d1 f9                              	sar ecx, 1
0x7cac:    69 c9 39 8e e3 38                  	imul ecx, ecx, 0x38e38e39
0x7cb2:    85 d2                              	test edx, edx
0x7cb4:    0f 85 3d 02 00 00                  	jne 0x7ef7 <function_7ef7>
0x7cba:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x7cc2:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x7cca:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x7cce:    8d 04 c9                           	lea eax, [ecx + ecx*8]
0x7cd1:    8d 04 42                           	lea eax, [edx + eax*2]
0x7cd4:    89 fa                              	mov edx, edi
0x7cd6:    66 90                              	nop 
0x7cd8:    85 c0                              	test eax, eax
0x7cda:    74 1f                              	je 0x7cfb <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x1eb>
0x7cdc:    8b 4d 00                           	mov ecx, dword ptr [ebp]
0x7cdf:    89 08                              	mov dword ptr [eax], ecx
0x7ce1:    8b 4d 04                           	mov ecx, dword ptr [ebp + 4]
0x7ce4:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x7ce7:    8b 4d 08                           	mov ecx, dword ptr [ebp + 8]
0x7cea:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x7ced:    8b 4d 0c                           	mov ecx, dword ptr [ebp + 0xc]
0x7cf0:    89 48 0c                           	mov dword ptr [eax + 0xc], ecx
0x7cf3:    0f b7 4d 10                        	movzx ecx, word ptr [ebp + 0x10]
0x7cf7:    66 89 48 10                        	mov word ptr [eax + 0x10], cx
0x7cfb:    83 c0 12                           	add eax, 0x12
0x7cfe:    83 ea 01                           	sub edx, 1
0x7d01:    75 d5                              	jne 0x7cd8 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x1c8>
0x7d03:    8b 2e                              	mov ebp, dword ptr [esi]
0x7d05:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x7d09:    39 dd                              	cmp ebp, ebx
0x7d0b:    74 49                              	je 0x7d56 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x246>
0x7d0d:    89 ea                              	mov edx, ebp
0x7d0f:    90                                 	nop 
0x7d10:    85 c0                              	test eax, eax
0x7d12:    74 1e                              	je 0x7d32 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x222>
0x7d14:    8b 0a                              	mov ecx, dword ptr [edx]
0x7d16:    89 08                              	mov dword ptr [eax], ecx
0x7d18:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x7d1b:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x7d1e:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x7d21:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x7d24:    8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0x7d27:    89 48 0c                           	mov dword ptr [eax + 0xc], ecx
0x7d2a:    0f b7 4a 10                        	movzx ecx, word ptr [edx + 0x10]
0x7d2e:    66 89 48 10                        	mov word ptr [eax + 0x10], cx
0x7d32:    83 c2 12                           	add edx, 0x12
0x7d35:    83 c0 12                           	add eax, 0x12
0x7d38:    39 d3                              	cmp ebx, edx
0x7d3a:    75 d4                              	jne 0x7d10 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x200>
0x7d3c:    83 c5 12                           	add ebp, 0x12
0x7d3f:    89 d8                              	mov eax, ebx
0x7d41:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x7d45:    29 e8                              	sub eax, ebp
0x7d47:    d1 e8                              	shr eax, 1
0x7d49:    69 c0 39 8e e3 38                  	imul eax, eax, 0x38e38e39
0x7d4f:    8d 04 c0                           	lea eax, [eax + eax*8]
0x7d52:    8d 44 42 12                        	lea eax, [edx + eax*2 + 0x12]
0x7d56:    8d 14 ff                           	lea edx, [edi + edi*8]
0x7d59:    8b 7e 04                           	mov edi, dword ptr [esi + 4]
0x7d5c:    8d 2c 50                           	lea ebp, [eax + edx*2]
0x7d5f:    39 df                              	cmp edi, ebx
0x7d61:    74 45                              	je 0x7da8 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x298>
0x7d63:    89 da                              	mov edx, ebx
0x7d65:    89 e8                              	mov eax, ebp
0x7d67:    90                                 	nop 
0x7d68:    85 c0                              	test eax, eax
0x7d6a:    74 1e                              	je 0x7d8a <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x27a>
0x7d6c:    8b 0a                              	mov ecx, dword ptr [edx]
0x7d6e:    89 08                              	mov dword ptr [eax], ecx
0x7d70:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x7d73:    89 48 04                           	mov dword ptr [eax + 4], ecx
0x7d76:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x7d79:    89 48 08                           	mov dword ptr [eax + 8], ecx
0x7d7c:    8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0x7d7f:    89 48 0c                           	mov dword ptr [eax + 0xc], ecx
0x7d82:    0f b7 4a 10                        	movzx ecx, word ptr [edx + 0x10]
0x7d86:    66 89 48 10                        	mov word ptr [eax + 0x10], cx
0x7d8a:    83 c2 12                           	add edx, 0x12
0x7d8d:    83 c0 12                           	add eax, 0x12
0x7d90:    39 d7                              	cmp edi, edx
0x7d92:    75 d4                              	jne 0x7d68 <_ZNSt6vectorI8CServiceSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_+0x258>
0x7d94:    83 c3 12                           	add ebx, 0x12
0x7d97:    29 df                              	sub edi, ebx
0x7d99:    d1 ef                              	shr edi, 1
0x7d9b:    69 ff 39 8e e3 38                  	imul edi, edi, 0x38e38e39
0x7da1:    8d 04 ff                           	lea eax, [edi + edi*8]
0x7da4:    8d 6c 45 12                        	lea ebp, [ebp + eax*2 + 0x12]
0x7da8:    8b 06                              	mov eax, dword ptr [esi]
0x7daa:    85 c0                              	test eax, eax
0x7dac:    74 08                              	je 0x7db6 <function_7db6>
0x7dae:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7db1 -- 0x7db2
0x7db1:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x7db2 -- 0x7db3
; data inside code section at 0x7db3 -- 0x7db6
0x7db3:    ff ff ff                                           |...             |
; function: function_7db6 at 0x7db6 -- 0x7dcb
0x7db6:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x7dba:    89 6e 04                           	mov dword ptr [esi + 4], ebp
0x7dbd:    89 06                              	mov dword ptr [esi], eax
0x7dbf:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x7dc3:    89 46 08                           	mov dword ptr [esi + 8], eax
0x7dc6:    e9 85 fe ff ff                     	jmp 0x7c50
; data inside code section at 0x7dcb -- 0x7dd0
0x7dcb:    90 8d 74 26 00                                     |..t&.           |
; function: function_7dd0 at 0x7dd0 -- 0x7e01
0x7dd0:    89 d9                              	mov ecx, ebx
0x7dd2:    29 c1                              	sub ecx, eax
0x7dd4:    d1 f9                              	sar ecx, 1
0x7dd6:    69 c9 39 8e e3 38                  	imul ecx, ecx, 0x38e38e39
0x7ddc:    c7 44 24 1c fc ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffffc
0x7de4:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x7de8:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x7dec:    89 14 24                           	mov dword ptr [esp], edx
0x7def:    e8 fc ff ff ff                     	call 0x7df0
0x7df4:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x7df8:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x7dfc:    e9 c9 fe ff ff                     	jmp 0x7cca
; data inside code section at 0x7e01 -- 0x7e08
0x7e01:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_7e08 at 0x7e08 -- 0x7ee3
0x7e08:    8d 04 ff                           	lea eax, [edi + edi*8]
0x7e0b:    89 d7                              	mov edi, edx
0x7e0d:    01 c0                              	add eax, eax
0x7e0f:    29 c7                              	sub edi, eax
0x7e11:    39 fa                              	cmp edx, edi
0x7e13:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x7e17:    89 d0                              	mov eax, edx
0x7e19:    74 34                              	je 0x7e4f <function_7e08+0x47>
0x7e1b:    89 f9                              	mov ecx, edi
0x7e1d:    8d 76 00                           	lea esi, [esi]
0x7e20:    85 c0                              	test eax, eax
0x7e22:    74 1e                              	je 0x7e42 <function_7e08+0x3a>
0x7e24:    8b 29                              	mov ebp, dword ptr [ecx]
0x7e26:    89 28                              	mov dword ptr [eax], ebp
0x7e28:    8b 69 04                           	mov ebp, dword ptr [ecx + 4]
0x7e2b:    89 68 04                           	mov dword ptr [eax + 4], ebp
0x7e2e:    8b 69 08                           	mov ebp, dword ptr [ecx + 8]
0x7e31:    89 68 08                           	mov dword ptr [eax + 8], ebp
0x7e34:    8b 69 0c                           	mov ebp, dword ptr [ecx + 0xc]
0x7e37:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x7e3a:    0f b7 69 10                        	movzx ebp, word ptr [ecx + 0x10]
0x7e3e:    66 89 68 10                        	mov word ptr [eax + 0x10], bp
0x7e42:    83 c1 12                           	add ecx, 0x12
0x7e45:    83 c0 12                           	add eax, 0x12
0x7e48:    39 ca                              	cmp edx, ecx
0x7e4a:    75 d4                              	jne 0x7e20 <function_7e08+0x18>
0x7e4c:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x7e4f:    03 44 24 18                        	add eax, dword ptr [esp + 0x18]
0x7e53:    89 46 04                           	mov dword ptr [esi + 4], eax
0x7e56:    89 fe                              	mov esi, edi
0x7e58:    29 de                              	sub esi, ebx
0x7e5a:    d1 fe                              	sar esi, 1
0x7e5c:    69 c6 39 8e e3 38                  	imul eax, esi, 0x38e38e39
0x7e62:    85 c0                              	test eax, eax
0x7e64:    7e 3b                              	jle 0x7ea1 <function_7e08+0x99>
0x7e66:    6b f6 fe                           	imul esi, esi, -2
0x7e69:    31 c0                              	xor eax, eax
0x7e6b:    90                                 	nop 
0x7e6c:    8d 74 26 00                        	lea esi, [esi]
0x7e70:    8b 4c 07 ee                        	mov ecx, dword ptr [edi + eax - 0x12]
0x7e74:    89 4c 02 ee                        	mov dword ptr [edx + eax - 0x12], ecx
0x7e78:    8b 4c 07 f2                        	mov ecx, dword ptr [edi + eax - 0xe]
0x7e7c:    89 4c 02 f2                        	mov dword ptr [edx + eax - 0xe], ecx
0x7e80:    8b 4c 07 f6                        	mov ecx, dword ptr [edi + eax - 0xa]
0x7e84:    89 4c 02 f6                        	mov dword ptr [edx + eax - 0xa], ecx
0x7e88:    8b 4c 07 fa                        	mov ecx, dword ptr [edi + eax - 6]
0x7e8c:    89 4c 02 fa                        	mov dword ptr [edx + eax - 6], ecx
0x7e90:    0f b7 4c 07 fe                     	movzx ecx, word ptr [edi + eax - 2]
0x7e95:    66 89 4c 02 fe                     	mov word ptr [edx + eax - 2], cx
0x7e9a:    83 e8 12                           	sub eax, 0x12
0x7e9d:    39 f0                              	cmp eax, esi
0x7e9f:    75 cf                              	jne 0x7e70 <function_7e08+0x68>
0x7ea1:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x7ea5:    01 da                              	add edx, ebx
0x7ea7:    39 da                              	cmp edx, ebx
0x7ea9:    0f 84 a1 fd ff ff                  	je 0x7c50
0x7eaf:    8b 6c 24 2a                        	mov ebp, dword ptr [esp + 0x2a]
0x7eb3:    8b 7c 24 2e                        	mov edi, dword ptr [esp + 0x2e]
0x7eb7:    8b 74 24 32                        	mov esi, dword ptr [esp + 0x32]
0x7ebb:    8b 4c 24 36                        	mov ecx, dword ptr [esp + 0x36]
0x7ebf:    0f b7 44 24 3a                     	movzx eax, word ptr [esp + 0x3a]
0x7ec4:    8d 74 26 00                        	lea esi, [esi]
0x7ec8:    89 2b                              	mov dword ptr [ebx], ebp
0x7eca:    89 7b 04                           	mov dword ptr [ebx + 4], edi
0x7ecd:    89 73 08                           	mov dword ptr [ebx + 8], esi
0x7ed0:    89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0x7ed3:    66 89 43 10                        	mov word ptr [ebx + 0x10], ax
0x7ed7:    83 c3 12                           	add ebx, 0x12
0x7eda:    39 da                              	cmp edx, ebx
0x7edc:    75 ea                              	jne 0x7ec8 <function_7e08+0xc0>
0x7ede:    e9 6d fd ff ff                     	jmp 0x7c50
; function: function_7ee3 at 0x7ee3 -- 0x7ef2
0x7ee3:    8d 54 ed 00                        	lea edx, [ebp + ebp*8]
0x7ee7:    8d 04 50                           	lea eax, [eax + edx*2]
0x7eea:    89 46 04                           	mov dword ptr [esi + 4], eax
0x7eed:    e9 5e fd ff ff                     	jmp 0x7c50
; function: function_7ef2 at 0x7ef2 -- 0x7ef3
; dynamically linked function: __stack_chk_fail at 0x7ef3 -- 0x7ef4
; data inside code section at 0x7ef4 -- 0x7ef7
0x7ef4:    ff ff ff                                           |...             |
; function: function_7ef7 at 0x7ef7 -- 0x7f03
0x7ef7:    6b d2 12                           	imul edx, edx, 0x12
0x7efa:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x7efe:    e9 e1 fe ff ff                     	jmp 0x7de4
; function: function_7f03 at 0x7f03 -- 0x7f0a
0x7f03:    c7 04 24 ae 4f 00 00               	mov dword ptr [esp], 0x4fae ; "vector::_M_fill_insert"
; data inside code section at 0x7f0a -- 0x7f0b
0x7f0a:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x7f0b -- 0x7f0c
; data inside code section at 0x7f0c -- 0x7f0f
0x7f0c:    ff ff ff                                           |...             |
; section: .text._ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv
; function: _ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv at 0x7f10 -- 0x7f35
0x7f10:    57                                 	push edi
0x7f11:    56                                 	push esi
0x7f12:    53                                 	push ebx
0x7f13:    83 ec 20                           	sub esp, 0x20
0x7f16:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x7f1a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7f20:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x7f24:    31 c0                              	xor eax, eax
0x7f26:    80 7f 04 00                        	cmp byte ptr [edi + 4], 0
0x7f2a:    0f 85 c1 00 00 00                  	jne 0x7ff1 <function_7ff1>
0x7f30:    8b 1f                              	mov ebx, dword ptr [edi]
0x7f32:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x7f35 -- 0x7f36
0x7f35:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x7f36 -- 0x7f37
; data inside code section at 0x7f37 -- 0x7f4b
0x7f37:    ff ff ff 85 c0 0f 85 aa  00 00 00 31 d2 80 7b 48   |...........1..{H|
0x7f47:    00 74 0f e8                                        |.t..            |
; dynamically linked function: pthread_self at 0x7f4b -- 0x7f4c
; data inside code section at 0x7f4c -- 0x7f4f
0x7f4c:    ff ff ff                                           |...             |
; function: function_7f4f at 0x7f4f -- 0x7f5e
0x7f4f:    ba 01 00 00 00                     	mov edx, 1
0x7f54:    3b 43 4c                           	cmp eax, dword ptr [ebx + 0x4c]
0x7f57:    74 53                              	je 0x7fac <function_7fac>
0x7f59:    8d 73 18                           	lea esi, [ebx + 0x18]
0x7f5c:    eb 16                              	jmp 0x7f74 <function_7f74>
; data inside code section at 0x7f5e -- 0x7f60
0x7f5e:    66 90                                              |f.              |
; function: function_7f60 at 0x7f60 -- 0x7f67
0x7f60:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x7f64:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x7f67 -- 0x7f68
0x7f67:    e8                                                 |.               |
; dynamically linked function: pthread_cond_wait at 0x7f68 -- 0x7f69
; data inside code section at 0x7f69 -- 0x7f74
0x7f69:    ff ff ff 85 c0 75 58 0f  b6 53 48                  |.....uX..SH     |
; function: function_7f74 at 0x7f74 -- 0x7f8b
0x7f74:    84 d2                              	test dl, dl
0x7f76:    75 e8                              	jne 0x7f60 <function_7f60>
0x7f78:    83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x7f7c:    c6 43 48 01                        	mov byte ptr [ebx + 0x48], 1
0x7f80:    e8 fc ff ff ff                     	call 0x7f81
0x7f85:    89 43 4c                           	mov dword ptr [ebx + 0x4c], eax
0x7f88:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x7f8b -- 0x7f8c
0x7f8b:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x7f8c -- 0x7f8d
; data inside code section at 0x7f8d -- 0x7f94
0x7f8d:    ff ff ff 85 c0 75 28                               |.....u(         |
; function: function_7f94 at 0x7f94 -- 0x7fac
0x7f94:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x7f98:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x7f9f:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x7fa3:    75 68                              	jne 0x800d
0x7fa5:    83 c4 20                           	add esp, 0x20
0x7fa8:    5b                                 	pop ebx
0x7fa9:    5e                                 	pop esi
0x7faa:    5f                                 	pop edi
0x7fab:    c3                                 	ret 
; function: function_7fac at 0x7fac -- 0x7fe7
0x7fac:    83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x7fb0:    89 1c 24                           	mov dword ptr [esp], ebx
0x7fb3:    e8 fc ff ff ff                     	call 0x7fb4
0x7fb8:    85 c0                              	test eax, eax
0x7fba:    74 d8                              	je 0x7f94 <function_7f94>
0x7fbc:    e8 f3 5a 00 00                     	call 0xdab4 <unknown_dab4>
0x7fc1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x7fc8:    c7 44 24 0c 10 6b 00 00            	mov dword ptr [esp + 0xc], 0x6b10 ; "void boost::recursive_mutex::lock()"
0x7fd0:    c7 44 24 08 85 00 00 00            	mov dword ptr [esp + 8], 0x85
0x7fd8:    c7 44 24 04 f0 58 00 00            	mov dword ptr [esp + 4], 0x58f0 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x7fe0:    c7 04 24 c6 4f 00 00               	mov dword ptr [esp], 0x4fc6 ; "!pthread_cond_wait(&cond,&m)"
; data inside code section at 0x7fe7 -- 0x7fe8
0x7fe7:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x7fe8 -- 0x7fe9
; data inside code section at 0x7fe9 -- 0x7ff1
0x7fe9:    ff ff ff e8 8f 5a 00 00                            |.....Z..        |
; function: function_7ff1 at 0x7ff1 -- 0x801f
0x7ff1:    8d 5c 24 14                        	lea ebx, [esp + 0x14]
0x7ff5:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x7ffd:    c7 44 24 14 b0 84 00 00            	mov dword ptr [esp + 0x14], 0x84b0
0x8005:    89 1c 24                           	mov dword ptr [esp], ebx
0x8008:    e8 23 72 00 00                     	call 0xf230 <unknown_f230>
0x800d:    e8 fc ff ff ff                     	call 0x800e
0x8012:    89 c6                              	mov esi, eax
0x8014:    89 1c 24                           	mov dword ptr [esp], ebx
0x8017:    e8 74 5c 00 00                     	call 0xdc90 <unknown_dc90>
0x801c:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x801f -- 0x8020
0x801f:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x8020 -- 0x8021
; data inside code section at 0x8021 -- 0x802a
0x8021:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: pthread_mutex_unlock at 0x802a -- 0x802b
; data inside code section at 0x802b -- 0x802e
0x802b:    ff ff ff                                           |...             |
; function: function_802e at 0x802e -- 0x8034
0x802e:    85 c0                              	test eax, eax
0x8030:    74 ea                              	je 0x801c
0x8032:    eb 88                              	jmp 0x7fbc
; section: .text._ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh
; function: _ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh at 0x8040 -- 0x80ec
0x8040:    83 ec 5c                           	sub esp, 0x5c
0x8043:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x8047:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x804b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8051:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x8055:    31 c0                              	xor eax, eax
0x8057:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x805b:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x805f:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x8063:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x8067:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x806b:    85 db                              	test ebx, ebx
0x806d:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x8071:    0f 84 4a 01 00 00                  	je 0x81c1 <function_81c1>
0x8077:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x807a:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x807d:    29 e8                              	sub eax, ebp
0x807f:    39 c3                              	cmp ebx, eax
0x8081:    77 75                              	ja 0x80f8 <function_80f8>
0x8083:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x8086:    89 ea                              	mov edx, ebp
0x8088:    29 fa                              	sub edx, edi
0x808a:    39 d3                              	cmp ebx, edx
0x808c:    0f 83 56 01 00 00                  	jae 0x81e8 <function_81e8>
0x8092:    89 ea                              	mov edx, ebp
0x8094:    89 e8                              	mov eax, ebp
0x8096:    29 da                              	sub edx, ebx
0x8098:    29 d0                              	sub eax, edx
0x809a:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x809e:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x80a2:    0f 85 98 01 00 00                  	jne 0x8240 <function_8240>
0x80a8:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x80ac:    01 d8                              	add eax, ebx
0x80ae:    29 fa                              	sub edx, edi
0x80b0:    89 46 04                           	mov dword ptr [esi + 4], eax
0x80b3:    0f 85 d7 01 00 00                  	jne 0x8290 <function_8290>
0x80b9:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x80bd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x80c4:    0f 85 f9 01 00 00                  	jne 0x82c3 <function_82c3>
0x80ca:    0f b6 c9                           	movzx ecx, cl
0x80cd:    89 5c 24 68                        	mov dword ptr [esp + 0x68], ebx
0x80d1:    89 4c 24 64                        	mov dword ptr [esp + 0x64], ecx
0x80d5:    89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0x80d9:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x80dd:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x80e1:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x80e5:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x80e9:    83 c4 5c                           	add esp, 0x5c
; data inside code section at 0x80ec -- 0x80ed
0x80ec:    e9                                                 |.               |
; dynamically linked function: memset at 0x80ed -- 0x80ee
; data inside code section at 0x80ee -- 0x80f8
0x80ee:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_80f8 at 0x80f8 -- 0x8138
0x80f8:    8b 06                              	mov eax, dword ptr [esi]
0x80fa:    29 c5                              	sub ebp, eax
0x80fc:    89 e9                              	mov ecx, ebp
0x80fe:    f7 d1                              	not ecx
0x8100:    39 cb                              	cmp ebx, ecx
0x8102:    0f 87 c0 01 00 00                  	ja 0x82c8 <function_82c8>
0x8108:    39 dd                              	cmp ebp, ebx
0x810a:    89 d9                              	mov ecx, ebx
0x810c:    0f 43 cd                           	cmovae ecx, ebp
0x810f:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x8113:    89 f9                              	mov ecx, edi
0x8115:    29 c1                              	sub ecx, eax
0x8117:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x811b:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x811f:    c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x8127:    0f 83 83 01 00 00                  	jae 0x82b0 <function_82b0>
0x812d:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x8131:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x8135:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x8138 -- 0x8139
0x8138:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x8139 -- 0x813a
; data inside code section at 0x813a -- 0x8143
0x813a:    ff ff ff 8b 54 24 20 89  c5                        |....T$ ..       |
; function: function_8143 at 0x8143 -- 0x8175
0x8143:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x8147:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x814b:    0f b6 12                           	movzx edx, byte ptr [edx]
0x814e:    01 e8                              	add eax, ebp
0x8150:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x8154:    89 04 24                           	mov dword ptr [esp], eax
0x8157:    e8 fc ff ff ff                     	call 0x8158
0x815c:    8b 06                              	mov eax, dword ptr [esi]
0x815e:    89 f9                              	mov ecx, edi
0x8160:    31 d2                              	xor edx, edx
0x8162:    29 c1                              	sub ecx, eax
0x8164:    74 18                              	je 0x817e <function_817e>
0x8166:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x816a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x816e:    89 2c 24                           	mov dword ptr [esp], ebp
0x8171:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
; data inside code section at 0x8175 -- 0x8176
0x8175:    e8                                                 |.               |
; dynamically linked function: memmove at 0x8176 -- 0x8177
; data inside code section at 0x8177 -- 0x817e
0x8177:    ff ff ff 8b 54 24 20                               |....T$          |
; function: function_817e at 0x817e -- 0x819c
0x817e:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x8181:    01 ea                              	add edx, ebp
0x8183:    01 da                              	add edx, ebx
0x8185:    31 db                              	xor ebx, ebx
0x8187:    29 f8                              	sub eax, edi
0x8189:    74 1a                              	je 0x81a5 <function_81a5>
0x818b:    89 14 24                           	mov dword ptr [esp], edx
0x818e:    89 c3                              	mov ebx, eax
0x8190:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x8194:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x8198:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
; data inside code section at 0x819c -- 0x819d
0x819c:    e8                                                 |.               |
; dynamically linked function: memmove at 0x819d -- 0x819e
; data inside code section at 0x819e -- 0x81a5
0x819e:    ff ff ff 8b 54 24 20                               |....T$          |
; function: function_81a5 at 0x81a5 -- 0x81b0
0x81a5:    8b 06                              	mov eax, dword ptr [esi]
0x81a7:    01 d3                              	add ebx, edx
0x81a9:    85 c0                              	test eax, eax
0x81ab:    74 08                              	je 0x81b5 <function_81b5>
0x81ad:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x81b0 -- 0x81b1
0x81b0:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x81b1 -- 0x81b2
; data inside code section at 0x81b2 -- 0x81b5
0x81b2:    ff ff ff                                           |...             |
; function: function_81b5 at 0x81b5 -- 0x81c1
0x81b5:    89 2e                              	mov dword ptr [esi], ebp
0x81b7:    03 6c 24 28                        	add ebp, dword ptr [esp + 0x28]
0x81bb:    89 5e 04                           	mov dword ptr [esi + 4], ebx
0x81be:    89 6e 08                           	mov dword ptr [esi + 8], ebp
; function: function_81c1 at 0x81c1 -- 0x81e6
0x81c1:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x81c5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x81cc:    0f 85 f1 00 00 00                  	jne 0x82c3 <function_82c3>
0x81d2:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x81d6:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x81da:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x81de:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x81e2:    83 c4 5c                           	add esp, 0x5c
0x81e5:    c3                                 	ret 
; data inside code section at 0x81e6 -- 0x81e8
0x81e6:    66 90                                              |f.              |
; function: function_81e8 at 0x81e8 -- 0x8204
0x81e8:    29 d3                              	sub ebx, edx
0x81ea:    89 5c 24 28                        	mov dword ptr [esp + 0x28], ebx
0x81ee:    0f b6 d9                           	movzx ebx, cl
0x81f1:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x81f5:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x81f9:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x81fd:    89 2c 24                           	mov dword ptr [esp], ebp
0x8200:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x8204 -- 0x8205
0x8204:    e8                                                 |.               |
; dynamically linked function: memset at 0x8205 -- 0x8206
; data inside code section at 0x8206 -- 0x8208
0x8206:    ff ff                                              |..              |
; function: function_8208 at 0x8208 -- 0x823e
0x8208:    ff 8b 54 24 20 8b                  	dec dword ptr [ebx - 0x74dfdbac]
0x820e:    44                                 	inc esp
0x820f:    24 28                              	and al, 0x28
0x8211:    03 46 04                           	add eax, dword ptr [esi + 4]
0x8214:    85 d2                              	test edx, edx
0x8216:    89 46 04                           	mov dword ptr [esi + 4], eax
0x8219:    75 55                              	jne 0x8270 <function_8270>
0x821b:    01 d0                              	add eax, edx
0x821d:    89 46 04                           	mov dword ptr [esi + 4], eax
0x8220:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x8224:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x822b:    0f 85 92 00 00 00                  	jne 0x82c3 <function_82c3>
0x8231:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x8235:    89 5c 24 64                        	mov dword ptr [esp + 0x64], ebx
0x8239:    e9 97 fe ff ff                     	jmp 0x80d5
; data inside code section at 0x823e -- 0x8240
0x823e:    66 90                                              |f.              |
; function: function_8240 at 0x8240 -- 0x8253
0x8240:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x8244:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x8248:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x824c:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x8250:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x8253 -- 0x8254
0x8253:    e8                                                 |.               |
; dynamically linked function: memmove at 0x8254 -- 0x8255
; data inside code section at 0x8255 -- 0x8257
0x8255:    ff ff                                              |..              |
; function: function_8257 at 0x8257 -- 0x826d
0x8257:    ff 8b 46 04 0f b6                  	dec dword ptr [ebx - 0x49f0fbba]
0x825d:    4c                                 	dec esp
0x825e:    24 24                              	and al, 0x24
0x8260:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x8264:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x8268:    e9 3b fe ff ff                     	jmp 0x80a8
; data inside code section at 0x826d -- 0x8270
0x826d:    8d 76 00                                           |.v.             |
; function: function_8270 at 0x8270 -- 0x827b
0x8270:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x8274:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x8278:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x827b -- 0x827c
0x827b:    e8                                                 |.               |
; dynamically linked function: memmove at 0x827c -- 0x827d
; data inside code section at 0x827d -- 0x827f
0x827d:    ff ff                                              |..              |
; function: function_827f at 0x827f -- 0x8289
0x827f:    ff 8b 46 04 8b 54                  	dec dword ptr [ebx + 0x548b0446]
0x8285:    24 20                              	and al, 0x20
0x8287:    eb 92                              	jmp 0x821b
; data inside code section at 0x8289 -- 0x8290
0x8289:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_8290 at 0x8290 -- 0x82b0
0x8290:    29 d5                              	sub ebp, edx
0x8292:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x8296:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x829a:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x829e:    89 2c 24                           	mov dword ptr [esp], ebp
0x82a1:    e8 fc ff ff ff                     	call 0x82a2
0x82a6:    0f b6 4c 24 24                     	movzx ecx, byte ptr [esp + 0x24]
0x82ab:    e9 09 fe ff ff                     	jmp 0x80b9
; function: function_82b0 at 0x82b0 -- 0x82c3
0x82b0:    85 ed                              	test ebp, ebp
0x82b2:    75 20                              	jne 0x82d4 <function_82d4>
0x82b4:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x82bc:    31 ed                              	xor ebp, ebp
0x82be:    e9 80 fe ff ff                     	jmp 0x8143 <function_8143>
; function: function_82c3 at 0x82c3 -- 0x82c8
0x82c3:    e8 fc ff ff ff                     	call 0x82c4
; function: function_82c8 at 0x82c8 -- 0x82d4
0x82c8:    c7 04 24 ae 4f 00 00               	mov dword ptr [esp], 0x4fae ; "vector::_M_fill_insert"
0x82cf:    e8 fc ff ff ff                     	call 0x82d0
; function: function_82d4 at 0x82d4 -- 0x82dd
0x82d4:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x82d8:    e9 50 fe ff ff                     	jmp 0x812d
; section: .text.startup
; function: _GLOBAL__sub_I_nConnectTimeout at 0x82e0 -- 0x82f7
0x82e0:    53                                 	push ebx
0x82e1:    83 ec 28                           	sub esp, 0x28
0x82e4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x82ea:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x82ee:    31 c0                              	xor eax, eax
0x82f0:    c7 04 24 a8 4d 00 00               	mov dword ptr [esp], 0x4da8 ; "s\n"
; data inside code section at 0x82f7 -- 0x82f8
0x82f7:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x82f8 -- 0x82f9
; data inside code section at 0x82f9 -- 0x8300
0x82f9:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x8300 -- 0x830c
; data inside code section at 0x830c -- 0x830f
0x830c:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x830f -- 0x8313
; data inside code section at 0x8313 -- 0x8314
0x8313:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x8314 -- 0x8315
; data inside code section at 0x8315 -- 0x8325
0x8315:    ff ff ff 80 3d 90 85 00  00 00 0f 84 8d 00 00 00   |....=...........|
; function: function_8325 at 0x8325 -- 0x8326
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x8326 -- 0x8327
; data inside code section at 0x8327 -- 0x8335
0x8327:    ff ff ff bb 30 4d 00 00  a3 ac 4d 00 00 e8         |....0M....M...  |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x8335 -- 0x8336
; data inside code section at 0x8336 -- 0x8338
0x8336:    ff ff                                              |..              |
; function: function_8338 at 0x8338 -- 0x833e
0x8338:    ff a3 b0 4d 00 00                  	jmp dword ptr [ebx + 0x4db0]
; data inside code section at 0x833e -- 0x833f
0x833e:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x833f -- 0x8340
; data inside code section at 0x8340 -- 0x8342
0x8340:    ff ff                                              |..              |
; function: function_8342 at 0x8342 -- 0x8348
0x8342:    ff a3 b4 4d 00 00                  	jmp dword ptr [ebx + 0x4db4]
; data inside code section at 0x8348 -- 0x8358
0x8348:    89 1c 24 e8 b0 19 00 00  c7 43 14 00 00 00 00 83   |..$......C......|
; function: function_8358 at 0x8358 -- 0x8359
0x8358:    c3                                 	ret 
; data inside code section at 0x8359 -- 0x8388
0x8359:    18 81 fb 90 4d 00 00 75  e6 c7 04 24 90 4d 00 00   |....M..u...$.M..|
0x8369:    e8 92 19 00 00 c7 05 a4  4d 00 00 00 00 00 00 c7   |........M.......|
0x8379:    04 24 d0 4c 00 00 e8 7c  70 00 00 c7 44 24 08      |.$.L...|p...D$. |
; dynamically linked function: __dso_handle at 0x8388 -- 0x839b
; data inside code section at 0x839b -- 0x839c
0x839b:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x839c -- 0x839d
; data inside code section at 0x839d -- 0x839f
0x839d:    ff ff                                              |..              |
; function: function_839f at 0x839f -- 0x83b2
0x839f:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x83a5:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x83ab:    75 3a                              	jne 0x83e7 <function_83e7>
0x83ad:    83 c4 28                           	add esp, 0x28
0x83b0:    5b                                 	pop ebx
0x83b1:    c3                                 	ret 
; data inside code section at 0x83b2 -- 0x83ca
0x83b2:    c6 05 90 85 00 00 01 c7  04 24 90 85 00 00 e8 2b   |.........$.....+|
0x83c2:    73 00 00 50 c7 44 24 08                            |s..P.D$.        |
; dynamically linked function: __dso_handle at 0x83ca -- 0x83dd
; data inside code section at 0x83dd -- 0x83de
0x83dd:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x83de -- 0x83df
; data inside code section at 0x83df -- 0x83e2
0x83df:    ff ff ff                                           |...             |
; function: function_83e2 at 0x83e2 -- 0x83e7
0x83e2:    e9 3e ff ff ff                     	jmp 0x8325 <function_8325>
; function: function_83e7 at 0x83e7 -- 0x83ec
0x83e7:    e8 fc ff ff ff                     	call 0x83e8

;;
;; Data Segment
;;

; section: .data
0x4ca0:    88 13 00 00 ??                                     |....?           |
; section: .rodata.str1.1
0x4cdf:    62 6f 6f 73 74 3a 3a 6c  6f 63 6b 5f 65 72 72 6f   |boost::lock_erro|   "boost::lock_error"
0x4cef:    72 00                                              |r.              |
0x4cf1:    62 6f 6f 73 74 3a 3a 74  68 72 65 61 64 5f 72 65   |boost::thread_re|   "boost::thread_resource_error"
0x4d01:    73 6f 75 72 63 65 5f 65  72 72 6f 72 00            |source_error.   |
0x4d0e:    21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 6c   |!pthread_mutex_l|   "!pthread_mutex_lock(m)"
0x4d1e:    6f 63 6b 28 6d 29 00                               |ock(m).         |
0x4d25:    21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(m)"
0x4d35:    6e 6c 6f 63 6b 28 6d 29  00                        |nlock(m).       |
0x4d3e:    21 70                                              |!p              |
0x4d40:    74 68 72 65 61 64 5f 6d  75 74 65 78 5f 64 65 73   |thread_mutex_des|   "thread_mutex_destroy(&m)"
0x4d50:    74 72 6f 79 28 26 6d 29  00                        |troy(&m).       |
0x4d59:    21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 64 65   |!pthread_cond_de|
0x4d69:    73 74 72 6f 79 28 26 63  6f 6e 64 29 00            |stroy(&cond).   |
0x4d76:    21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 73 69   |!pthread_cond_si|   "!pthread_cond_signal(&cond)"
0x4d86:    67 6e 61 6c 28 26 63 6f  6e 64 29 00               |gnal(&cond).    |
0x4d92:    3a 20 00 53 4f 43                                  |: .SOC          |
0x4d98:    4b 53 35 20 63 6f 6e 6e  65 63 74 69 6e 67 20 25   |KS5 connecting %|   "KS5 connecting %s\n"
0x4da8:    73 0a 00                                           |s..             |
0x4dab:    48 6f 73 74 6e 61 6d 65  20 74 6f 6f 20 6c 6f 6e   |Hostname too lon|
0x4dbb:    67 00 45 72 72 6f 72 20  73 65 6e 64 69 6e 67 20   |g.Error sending |
0x4dcb:    74 6f 20 70 72 6f 78 79  00 45 72 72 6f 72 20 72   |to proxy.Error r|
0x4ddb:    65 61 64 69 6e 67 20 70  72 6f 78 79 20 72 65 73   |eading proxy res|
0x4deb:    70 6f 6e 73 65 00 50 72  6f 78 79 20 66 61 69 6c   |ponse.Proxy fail|
0x4dfb:    65 64 20 74 6f 20 69 6e  69 74 69 61 6c 69 7a 65   |ed to initialize|
0x4e0b:    00 05 01 00 50 72 6f 78  79 20 65 72 72 6f 72 3a   |....Proxy error:|
0x4e1b:    20 67 65 6e 65 72 61 6c  20 66 61 69 6c 75 72 65   | general failure|
0x4e2b:    00 50 72 6f 78 79 20 65  72 72 6f 72 3a 20 68 6f   |.Proxy error: ho|
0x4e3b:    73 74 20 75 6e 72 65 61  63 68 61 62 6c 65 00      |st unreachable. |
0x4e4a:    50 72 6f 78 79 20 65 72  72 6f 72 3a 20 54 54 4c   |Proxy error: TTL|   "Proxy error: TTL expired"
0x4e5a:    20 65 78 70 69 72 65 64  00                        | expired.       |
0x4e63:    50 72 6f 78 79 20 65 72  72 6f 72 3a 20 70 72 6f   |Proxy error: pro|
0x4e73:    74 6f 63 6f 6c 20 65 72  72 6f 72 00 50 72 6f 78   |tocol error.Prox|
0x4e83:    79 20 65 72 72 6f 72 3a  20 75 6e 6b 6e 6f 77 6e   |y error: unknown|
0x4e93:    00 45 72 72 6f 72 20 72  65 61 64 69 6e 67 20 66   |.Error reading f|
0x4ea3:    72 6f 6d 20 70 72 6f 78  79 00 53 4f 43 4b 53 35   |rom proxy.SOCKS5|
0x4eb3:    20 63 6f 6e 6e 65 63 74  65 64 20 25 73 0a 00 69   | connected %s..i|
0x4ec3:    70 76 34 00 69 70 76 36  00 74 6f 72 00            |pv4.ipv6.tor.   |
0x4ed0:    62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 73 75   |basic_string::su|   "basic_string::substr"
0x4ee0:    62 73 74 72 00                                     |bstr.           |
0x4ee5:    2e 6f 6e 69 6f 6e 00                               |.onion.         |
0x4eec:    6e 65 74 62 61 73 65 2e  63 70 70 00               |netbase.cpp.    |   "netbase.cpp"
0x4ef8:    61 64 64 72 2e 73 69 6e  5f 66 61 6d 69 6c 79 20   |addr.sin_family |   "addr.sin_family == 2"
0x4f08:    3d 3d 20 32 00                                     |== 2.           |
0x4f0d:    61 64 64 72 2e 73 69 6e  36 5f 66 61 6d 69 6c 79   |addr.sin6_family|   "addr.sin6_family == 10"
0x4f1d:    20 3d 3d 20 31 30 00                               | == 10.         |
0x4f24:    25 75 2e 25 75 2e 25 75  2e 25 75 00               |%u.%u.%u.%u.    |   "%u.%u.%u.%u"
0x4f30:    25 78 3a 25 78 3a 25 78  3a 25 78 3a 25 78 3a 25   |%x:%x:%x:%x:%x:%|   "%x:%x:%x:%x:%x:%x:%x:%x"
0x4f40:    78 3a 25 78 3a 25 78 00                            |x:%x:%x.        |
0x4f48:    43 4e 65 74 41 64 64 72  28 25 73 29 0a 00         |CNetAddr(%s)..  |   "CNetAddr(%s)\n"
0x4f56:    25 75 00                                           |%u.             |   "%u"
0x4f59:    3a 00 5b 00 5d 3a 00                               |:.[.]:.         |
0x4f60:    43 53 65 72 76 69 63 65  28 25 73 29 0a 00         |CService(%s)..  |   "CService(%s)\n"
0x4f6e:    63 6f 6e 6e 65 63 74 69  6f 6e 20 74 69 6d 65 6f   |connection timeo|   "connection timeout\n"
0x4f7e:    75 74 0a 00                                        |ut..            |
0x4f82:    63 6f 6e 6e 65 63 74 28  29 20 66 61 69 6c 65 64   |connect() failed|
0x4f92:    3a 20 25 69 0a 00                                  |: %i..          |
0x4f98:    76 65 63 74 6f 72 3a 3a  5f 4d 5f 69 6e 73 65 72   |vector::_M_inser|   "vector::_M_insert_aux"
0x4fa8:    74 5f 61 75 78 00                                  |t_aux.          |
0x4fae:    76 65 63 74 6f 72 3a 3a  5f 4d 5f 66 69 6c 6c 5f   |vector::_M_fill_|   "vector::_M_fill_insert"
0x4fbe:    69 6e 73 65 72 74 00                               |insert.         |
0x4fc5:    00                                                 |.               |
0x4fc6:    21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 77 61   |!pthread_cond_wa|   "!pthread_cond_wait(&cond,&m)"
0x4fd6:    69 74 28 26 63 6f 6e 64  2c 26 6d 29 00            |it(&cond,&m).   |
0x4fe3:    6e 65 74 20 3e 3d 20 30  20 26 26 20 6e 65 74 20   |net >= 0 && net |   "net >= 0 && net < NET_MAX"
0x4ff3:    3c 20 4e 45 54 5f 4d 41  58 00                     |< NET_MAX.      |
0x4ffd:    53 4f 43 4b 53 34 20 63  6f 6e 6e 65 63 74 69 6e   |SOCKS4 connectin|   "SOCKS4 connecting %s\n"
0x500d:    67 20 25 73 0a 00                                  |g %s..          |
0x5013:    50 72 6f 78 79 20 64 65  73 74 69 6e 61 74 69 6f   |Proxy destinatio|   "Proxy destination is not IPv4"
0x5023:    6e 20 69 73 20 6e 6f 74  20 49 50 76 34 00         |n is not IPv4.  |
0x5031:    53 4f 43 4b 53 34 20 63  6f 6e 6e 65 63 74 65 64   |SOCKS4 connected|
0x5041:    20 25 73 0a 00                                     | %s..           |
0x5046:    30 2e 30 2e 30 2e 30 3a  30 00                     |0.0.0.0:0.      |   "0.0.0.0:0"
0x5050:    83                                                 |.               |
; section: .gcc_except_table
0x550c:    ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0d   |....8.y.t.......|
0x551c:    1c 05 00 00 38 03 7c 00  89 01 05 00 00 ff ff 01   |....8.|.........|
0x552c:    0e 1c 05 00 00 45 03 89  01 00 9e 01 05 00 00 ff   |.....E..........|
0x553c:    ff 01 0e 1c 05 00 00 45  03 89 01 00 9e 01 05 00   |.......E........|
0x554c:    00 00 00 00 ff 00 29 01  1c 70 29 ff 01 01 a3 01   |......)..p).....|
0x555c:    05 d7 01 03 cb 01 05 ff  01 01 f5 01 05 82 02 05   |................|
0x556c:    8a 02 0a 00 00 01 00 00  7d 7f 00 00 00 00 00 00   |........}.......|
0x557c:    00 00 00 00 ff 00 0d 01  08 26 03 56 01 5e 0a 00   |.........&.V.^..|
0x558c:    00 7f 00 00 00 ff ff 01  11 44 f8 02 00 00 e1 03   |.........D......|
0x559c:    d5 08 ed 0c 00 fa 0c 05  00 00 ff ff 01 16 37 05   |..............7.|
0x55ac:    d6 02 00 50 1e bc 02 00  8e 01 16 d6 02 00 c4 01   |...P............|
0x55bc:    92 01 00 00 ff ff 01 1b  3e 8c 02 00 00 d5 02 05   |........>.......|
0x55cc:    d2 04 00 8a 03 5b 00 00  ec 03 05 e8 04 00 a9 04   |.....[..........|
0x55dc:    51 00 00 ff ff 01 1a 7a  05 00 00 8a 01 05 f2 02   |Q......z........|
0x55ec:    00 c0 01 05 00 00 dc 01  05 e0 02 00 db 02 29 00   |..............).|
0x55fc:    00 ff ff 01 15 65 05 00  00 74 05 87 06 00 8c 01   |.....e...t......|
0x560c:    05 ed 05 00 e2 03 a5 02  00 00 ff ff 01 0e 1f 05   |................|
0x561c:    00 00 36 05 88 01 00 9b  01 05 00 00 ff ff 01 19   |..6.............|
0x562c:    47 03 a7 02 00 5e 13 89  02 00 7e 3b a7 02 00 c6   |G....^....~;....|
0x563c:    01 03 00 00 a2 02 05 00  00 ff ff 01 09 3b 03 75   |.............;.u|
0x564c:    00 82 01 05 00 00 ff ff  01 08 2a 05 5b 00 56 17   |..........*.[.V.|
0x565c:    00 00 ff ff 01 10 65 05  b1 01 00 8c 01 05 d1 01   |......e.........|
0x566c:    00 ac 01 25 00 00 ff ff  01 11 af 01 05 b4 01 00   |...%............|
0x567c:    c7 01 05 00 00 e3 01 05  e8 01 00 ff ff 01 09 3b   |...............;|
0x568c:    03 75 00 82 01 05 00 00  ff ff 01 08 2a 05 5b 00   |.u..........*.[.|
0x569c:    56 17 00 00 ff ff 01 10  65 05 b1 01 00 8c 01 05   |V.......e.......|
0x56ac:    d1 01 00 ac 01 25 00 00  ff 00 25 01 1d bb 02 05   |.....%....%.....|
0x56bc:    bb 04 00 d8 02 03 85 04  00 9d 03 05 f0 03 01 80   |................|
0x56cc:    04 05 bf 04 00 b6 04 05  00 00 01 00 00 00 00 00   |................|
0x56dc:    ff ff 01 0c 2a 05 00 00  36 05 5d 00 6a 05 00 00   |....*...6.].j...|
0x56ec:    ff ff 01 42 42 05 00 00  55 05 f2 03 00 68 05 ed   |...BB...U....h..|
0x56fc:    03 00 80 01 05 eb 03 00  90 01 05 c9 03 00 fb 01   |................|
0x570c:    05 00 00 8e 02 05 f6 03  00 b3 02 2d 88 04 00 eb   |...........-....|
0x571c:    02 05 a0 04 00 83 03 05  ac 04 00 93 03 05 b8 04   |................|
0x572c:    00 e6 03 22 00 00 ff ff  01 0e 1f 05 00 00 36 05   |..."..........6.|
0x573c:    88 01 00 9b 01 05 00 00  ff ff 01 10 6c 05 00 00   |............l...|
0x574c:    83 01 05 db 06 00 8d 02  e0 04 00 00 ff ff 01 0f   |................|
0x575c:    53 05 00 00 5f 05 f3 05  00 d7 01 ae 04 00 00 ff   |S..._...........|
0x576c:    ff 01 21 3b 05 00 00 5a  9a 01 f9 02 00 fb 01 05   |..!;...Z........|
0x577c:    d1 02 00 9b 02 05 f9 02  00 e8 02 05 00 00 f4 02   |................|
0x578c:    05 f9 02 00 ff ff 01 0a  66 05 b7 01 00 cc 01 05   |........f.......|
0x579c:    00 00 ff ff 01 0a 64 05  b5 01 00 ca 01 05 00 00   |......d.........|
0x57ac:    ff ff 01 0c 90 01 d0 04  eb 05 00 fe 05 05 00 00   |................|
0x57bc:    ff ff 01 1d 87 01 05 00  00 9b 01 05 93 05 00 b3   |................|
0x57cc:    01 05 dd 04 00 eb 01 d3  02 ff 04 00 fa 04 05 00   |................|
0x57dc:    00 ff ff 01 0a 54 05 b2  01 00 c7 01 05 00 00 ff   |.....T..........|
0x57ec:    ff 01 10 57 05 94 02 00  f8 01 05 82 02 00 8f 02   |...W............|
0x57fc:    05 00 00 ff ff 01 0b c4  01 05 9a 03 00 a7 03 05   |................|
0x580c:    00 00 ff ff 01 0a 29 05  e5 01 00 f2 01 05 00 00   |......).........|
0x581c:    ff ff 01 0a 2a 05 80 02  00 8d 02 05 00 00 ff ff   |....*...........|
0x582c:    01 0a 25 05 c4 01 00 d1  01 05 00 00 ff ff 01 0a   |..%.............|
0x583c:    40 05 c1 02 00 ce 02 05  00 00 ff ff 01 27 63 91   |@............'c.|
0x584c:    01 00 00 ff 01 05 f7 06  00 b3 02 05 00 00 ca 02   |................|
0x585c:    05 e5 06 00 f3 03 c5 02  00 00 ca 06 05 a7 07 00   |................|
0x586c:    f2 06 05 00 00 ff ff 01  1c 63 05 86 05 00 7b 05   |.........c....{.|
0x587c:    e8 04 00 ab 01 81 03 8c  05 00 b4 04 05 8e 05 00   |................|
0x588c:    81 05 05 00 00 ff ff 01  0b f4 01 05 ea 03 00 f7   |................|
0x589c:    03 05 00 00 ff ff 01 0a  4d 05 98 01 00 ab 01 05   |........M.......|
0x58ac:    00 00 ??                                           |..?             |
; section: .rodata.str1.4
0x58b0:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0x58c0:    73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x58d0:    64 2f 70 74 68 72 65 61  64 5f 6d 75 74 65 78 5f   |d/pthread_mutex_|
0x58e0:    73 63 6f 70 65 64 5f 6c  6f 63 6b 2e 68 70 70 00   |scoped_lock.hpp.|
0x58f0:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0x5900:    73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0x5910:    64 2f 72 65 63 75 72 73  69 76 65 5f 6d 75 74 65   |d/recursive_mute|
0x5920:    78 2e 68 70 70 00                                  |x.hpp.          |
0x5926:    00 00 50 72 6f 78 79 20  66 61 69 6c 65 64 20 74   |..Proxy failed t|
0x5936:    6f 20 61 63 63 65 70 74  20 72 65 71 75 65 73 74   |o accept request|
0x5946:    00 00                                              |..              |
0x5948:    50 72 6f 78 79 20 65 72  72 6f 72 3a 20 63 6f 6e   |Proxy error: con|   "Proxy error: connection not allowed"
0x5958:    6e 65 63 74 69 6f 6e 20  6e 6f 74 20 61 6c 6c 6f   |nection not allo|
0x5968:    77 65 64 00                                        |wed.            |
0x596c:    50 72 6f 78 79 20 65 72  72 6f 72 3a 20 6e 65 74   |Proxy error: net|
0x597c:    77 6f 72 6b 20 75 6e 72  65 61 63 68 61 62 6c 65   |work unreachable|
0x598c:    00 00 00 00 50 72 6f 78  79 20 65 72 72 6f 72 3a   |....Proxy error:|
0x599c:    20 63 6f 6e 6e 65 63 74  69 6f 6e 20 72 65 66 75   | connection refu|
0x59ac:    73 65 64 00 50 72 6f 78  79 20 65 72 72 6f 72 3a   |sed.Proxy error:|
0x59bc:    20 61 64 64 72 65 73 73  20 74 79 70 65 20 6e 6f   | address type no|
0x59cc:    74 20 73 75 70 70 6f 72  74 65 64 00 45 72 72 6f   |t supported.Erro|
0x59dc:    72 3a 20 6d 61 6c 66 6f  72 6d 65 64 20 70 72 6f   |r: malformed pro|
0x59ec:    78 79 20 72 65 73 70 6f  6e 73 65 00               |xy response.    |
0x59f8:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x5a08:    73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x5a18:    61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x5a28:    72 2e 68 70 70 00                                  |r.hpp.          |
0x5a2e:    00 00                                              |..              |
0x5a30:    43 61 6e 6e 6f 74 20 63  6f 6e 6e 65 63 74 20 74   |Cannot connect t|   "Cannot connect to %s: unsupported network\n"
0x5a40:    6f 20 25 73 3a 20 75 6e  73 75 70 70 6f 72 74 65   |o %s: unsupporte|
0x5a50:    64 20 6e 65 74 77 6f 72  6b 0a 00                  |d network..     |
0x5a5b:    00 73 65 6c 65 63 74 28  29 20 66 6f 72 20 63 6f   |.select() for co|
0x5a6b:    6e 6e 65 63 74 69 6f 6e  20 66 61 69 6c 65 64 3a   |nnection failed:|
0x5a7b:    20 25 69 0a 00                                     | %i..           |
0x5a80:    67 65 74 73 6f 63 6b 6f  70 74 28 29 20 66 6f 72   |getsockopt() for|   "getsockopt() for connection failed: %i\n"
0x5a90:    20 63 6f 6e 6e 65 63 74  69 6f 6e 20 66 61 69 6c   | connection fail|
0x5aa0:    65 64 3a 20 25 69 0a 00                            |ed: %i..        |
0x5aa8:    63 6f 6e 6e 65 63 74 28  29 20 66 61 69 6c 65 64   |connect() failed|
0x5ab8:    20 61 66 74 65 72 20 73  65 6c 65 63 74 28 29 3a   | after select():|
0x5ac8:    20 25 73 0a 00 00 00 00                            | %s.....        |
0x5ad0:    61 69 54 72 61 76 2d 3e  61 69 5f 61 64 64 72 6c   |aiTrav->ai_addrl|   "aiTrav->ai_addrlen >= sizeof(sockaddr_in)"
0x5ae0:    65 6e 20 3e 3d 20 73 69  7a 65 6f 66 28 73 6f 63   |en >= sizeof(soc|
0x5af0:    6b 61 64 64 72 5f 69 6e  29 00                     |kaddr_in).      |
0x5afa:    00 00                                              |..              |
0x5afc:    61 69 54 72 61 76 2d 3e  61 69 5f 61 64 64 72 6c   |aiTrav->ai_addrl|   "aiTrav->ai_addrlen >= sizeof(sockaddr_in6)"
0x5b0c:    65 6e 20 3e 3d 20 73 69  7a 65 6f 66 28 73 6f 63   |en >= sizeof(soc|
0x5b1c:    6b 61 64 64 72 5f 69 6e  36 29 00                  |kaddr_in6).     |
0x5b27:    00                                                 |.               |
0x5b28:    43 61 6e 6e 6f 74 20 67  65 74 20 70 72 6f 78 79   |Cannot get proxy|   "Cannot get proxy destination address"
0x5b38:    20 64 65 73 74 69 6e 61  74 69 6f 6e 20 61 64 64   | destination add|
0x5b48:    72 65 73 73 00                                     |ress.           |
0x5b4d:    00 00 00 45 52 52 4f 52  3a 20 50 72 6f 78 79 20   |...ERROR: Proxy |
0x5b5d:    72 65 74 75 72 6e 65 64  20 65 72 72 6f 72 20 25   |returned error %|
0x5b6d:    64 0a 00 83                                        |d...            |
; section: .rodata
0x6950:    05 01 00 00 19 06 00 00  08 06 00 00 f7 05 00 00   |................|
0x6960:    e6 05 00 00 d5 05 00 00  c4 05 00 00 b3 05 00 00   |................|
0x6970:    2a 06 00 00 04 01 00 00  00 00 00 00               |*...........    |
0x697c:    75 73 65 72 00                                     |user.           |   "user"
0x6981:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00      |............... |
0x6990:    62 6f 6f 6c 20 4c 6f 6f  6b 75 70 49 6e 74 65 72   |bool LookupInter|   "bool LookupIntern(const char*, std::vector<CNetAddr>&, unsigned int, bool)"
0x69a0:    6e 28 63 6f 6e 73 74 20  63 68 61 72 2a 2c 20 73   |n(const char*, s|
0x69b0:    74 64 3a 3a 76 65 63 74  6f 72 3c 43 4e 65 74 41   |td::vector<CNetA|
0x69c0:    64 64 72 3e 26 2c 20 75  6e 73 69 67 6e 65 64 20   |ddr>&, unsigned |
0x69d0:    69 6e 74 2c 20 62 6f 6f  6c 29 00                  |int, bool).     |
0x69db:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x69eb:    00 00 00 00 00                                     |.....           |
0x69f0:    62 6f 6f 6c 20 53 65 74  50 72 6f 78 79 28 4e 65   |bool SetProxy(Ne|   "bool SetProxy(Network, CService, int)"
0x6a00:    74 77 6f 72 6b 2c 20 43  53 65 72 76 69 63 65 2c   |twork, CService,|
0x6a10:    20 69 6e 74 29 00                                  | int).          |
0x6a16:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6a26:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x6a30:    62 6f 6f 73 74 3a 3a 70  74 68 72 65 61 64 3a 3a   |boost::pthread::|   "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x6a40:    70 74 68 72 65 61 64 5f  6d 75 74 65 78 5f 73 63   |pthread_mutex_sc|
0x6a50:    6f 70 65 64 5f 6c 6f 63  6b 3a 3a 70 74 68 72 65   |oped_lock::pthre|
0x6a60:    61 64 5f 6d 75 74 65 78  5f 73 63 6f 70 65 64 5f   |ad_mutex_scoped_|
0x6a70:    6c 6f 63 6b 28 70 74 68  72 65 61 64 5f 6d 75 74   |lock(pthread_mut|
0x6a80:    65 78 5f 74 2a 29 00                               |ex_t*).         |
0x6a87:    00 00 00 00 00 00 00 00  00                        |.........       |
0x6a90:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 72 65 63 75   |void boost::recu|   "void boost::recursive_mutex::unlock()"
0x6aa0:    72 73 69 76 65 5f 6d 75  74 65 78 3a 3a 75 6e 6c   |rsive_mutex::unl|
0x6ab0:    6f 63 6b 28 29 00                                  |ock().          |
0x6ab6:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6ac6:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x6ad0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 70 74 68 72   |void boost::pthr|   "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x6ae0:    65 61 64 3a 3a 70 74 68  72 65 61 64 5f 6d 75 74   |ead::pthread_mut|
0x6af0:    65 78 5f 73 63 6f 70 65  64 5f 6c 6f 63 6b 3a 3a   |ex_scoped_lock::|
0x6b00:    75 6e 6c 6f 63 6b 28 29  00                        |unlock().       |
0x6b09:    00 00 00 00 00 00 00                               |.......         |
0x6b10:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 72 65 63 75   |void boost::recu|   "void boost::recursive_mutex::lock()"
0x6b20:    72 73 69 76 65 5f 6d 75  74 65 78 3a 3a 6c 6f 63   |rsive_mutex::loc|
0x6b30:    6b 28 29 00                                        |k().            |
0x6b34:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6b44:    00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x6b50:    62 6f 6f 6c 20 47 65 74  50 72 6f 78 79 28 4e 65   |bool GetProxy(Ne|   "bool GetProxy(Network, proxyType&)"
0x6b60:    74 77 6f 72 6b 2c 20 70  72 6f 78 79 54 79 70 65   |twork, proxyType|
0x6b70:    26 29 00                                           |&).             |
0x6b73:    fd 87 d8 7e eb 43 00 00  00 00 00 00 00 00 00 00   |...~.C..........|
0x6b83:    ff ff 00 64 ff 9b 00 00  00 00 00 00 00 00 fe 80   |...d............|
0x6b93:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 ff ff   |................|
0x6ba3:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6bb3:    00 01 00 00 00 04 00 00  00 01 00 00 00 06 00 00   |................|
0x6bc3:    00 04 00 00 00 03 00 00  00 01 00 00 00 01 00 00   |................|
0x6bd3:    00 02 00 00 00 04 00 00  00 03 00 00 00 06 00 00   |................|
0x6be3:    00 01 00 00 00 02 00 00  00 00 00 00 00            |.............   |
0x6bf0:    43 53 65 72 76 69 63 65  3a 3a 43 53 65 72 76 69   |CService::CServi|   "CService::CService(const sockaddr_in&)"
0x6c00:    63 65 28 63 6f 6e 73 74  20 73 6f 63 6b 61 64 64   |ce(const sockadd|
0x6c10:    72 5f 69 6e 26 29 00                               |r_in&).         |
0x6c17:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6c27:    00 00 00 00 00 00 00 00  00                        |.........       |
0x6c30:    43 53 65 72 76 69 63 65  3a 3a 43 53 65 72 76 69   |CService::CServi|   "CService::CService(const sockaddr_in6&)"
0x6c40:    63 65 28 63 6f 6e 73 74  20 73 6f 63 6b 61 64 64   |ce(const sockadd|
0x6c50:    72 5f 69 6e 36 26 29 00                            |r_in6&).        |
0x6c58:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6c68:    00 00 00 00 00 00 00 00  62 6f 6f 73 74 3a 3a 72   |........boost::r|
0x6c78:    65 63 75 72 73 69 76 65  5f 6d 75 74 65 78 3a 3a   |ecursive_mutex::|
0x6c88:    7e 72 65 63 75 72 73 69  76 65 5f 6d 75 74 65 78   |~recursive_mutex|
0x6c98:    28 29 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |()..............|
0x6ca8:    00 00 00 00 00 00 00 00  62 6f 6f 73 74 3a 3a 72   |........boost::r|
0x6cb8:    65 63 75 72 73 69 76 65  5f 6d 75 74 65 78 3a 3a   |ecursive_mutex::|
0x6cc8:    72 65 63 75 72 73 69 76  65 5f 6d 75 74 65 78 28   |recursive_mutex(|
0x6cd8:    29 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |)...............|
0x6ce8:    00 00 00 00 00 00 00 00                            |........        |
0x6cf0:    62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x6d00:    5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x6d10:    70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x6d20:    74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x6d30:    69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x6d40:    34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x6d50:    74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x6d60:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x6d70:    73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x6d80:    69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x6d90:    65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x6d99:    ??                                                 |?               |
; section: .ctors
0x83ec:    e0 82 00 00 4e                                     |....N           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x83f0:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x8400:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x8410:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x8410:    08 00 00 00 f0 83 00 00  70 87 00 00 4e            |........p...N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x841c:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x842c:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x843c:    08 00 00 00 1c 84 00 00  00 00 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x8450:    00 00 00 00 10 84 00 00  40 51 00 00 f0 53 00 00   |........@Q...S..|
0x8460:    00 00 00 00 00 00 00 00  70 51 00 00 b0 51 00 00   |........pQ...Q..|
0x8470:    20 52 00 00 ??                                     | R..?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x8478:    00 00 00 00 3c 84 00 00  30 62 00 00 10 5e 00 00   |....<...0b...^..|
0x8488:    80 60 00 00 ??                                     |.`..?           |
; section: .rodata._ZTVN5boost16thread_exceptionE
0x8490:    00 00 00 00 78 87 00 00  30 54 00 00 c0 5d 00 00   |....x...0T...]..|
0x84a0:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost10lock_errorE
0x84a8:    00 00 00 00 84 87 00 00  80 5d 00 00 f0 5c 00 00   |.........]...\..|
0x84b8:    50 50 00 00 ??                                     |PP..?           |
; section: .rodata._ZTVN5boost9exceptionE
0x84c0:    00 00 00 00 90 87 00 00  00 00 00 00 00 00 00 00   |................|
0x84d0:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x84d0:    00 00 00 00 b0 87 00 00  10 64 00 00 f0 66 00 00   |.........d...f..|
0x84e0:    50 50 00 00 f8 ff ff ff  b0 87 00 00 00 64 00 00   |PP...........d..|
0x84f0:    e0 66 00 00 ??                                     |.f..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x84f8:    00 00 00 00 d0 87 00 00  00 00 00 00 00 00 00 00   |................|
0x8508:    b0 4c 00 00 b0 53 00 00  00                        |.L...S...       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x8510:    00 00 00 00 70 85 00 00  80 66 00 00 00 66 00 00   |....p....f...f..|
0x8520:    50 50 00 00 10 5f 00 00  b0 72 00 00 f8 ff ff ff   |PP..._...r......|
0x8530:    70 85 00 00 70 66 00 00  f0 65 00 00 e4 ff ff ff   |p...pf...e......|
0x8540:    70 85 00 00 00 5f 00 00  a0 72 00 00 60 66 00 00   |p...._...r..`f..|
0x8550:    e0 65 00 00 ??                                     |.e..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x8570:    08 00 00 00 f0 87 00 00  00 00 00 00 02 00 00 00   |................|
0x8580:    b0 87 00 00 02 00 00 00  d0 87 00 00 02 1c 00 00   |................|
0x8590:    00                                                 |.               |
; section: .rodata._ZTVN5boost21thread_resource_errorE
0x8590:    00 00 00 00 48 88 00 00  40 5d 00 00 a0 5c 00 00   |....H...@]...\..|
0x85a0:    80 50 00 00 ??                                     |.P..?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x85b0:    00 00 00 00 70 88 00 00  a0 63 00 00 60 67 00 00   |....p....c..`g..|
0x85c0:    80 50 00 00 f8 ff ff ff  70 88 00 00 90 63 00 00   |.P......p....c..|
0x85d0:    50 67 00 00 ??                                     |Pg..?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x85f0:    00 00 00 00 50 86 00 00  e0 67 00 00 60 68 00 00   |....P....g..`h..|
0x8600:    80 50 00 00 d0 5f 00 00  c0 6f 00 00 f8 ff ff ff   |.P..._...o......|
0x8610:    50 86 00 00 d0 67 00 00  50 68 00 00 e4 ff ff ff   |P....g..Ph......|
0x8620:    50 86 00 00 c0 5f 00 00  b0 6f 00 00 c0 67 00 00   |P...._...o...g..|
0x8630:    40 68 00 00 ??                                     |@h..?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x8650:    08 00 00 00 90 88 00 00  00 00 00 00 02 00 00 00   |................|
0x8660:    70 88 00 00 02 00 00 00  d0 87 00 00 02 1c 00 00   |p...............|
0x8670:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x8670:    00 00 00 00 f0 88 00 00  40 63 00 00 80 65 00 00   |........@c...e..|
0x8680:    ec ff ff ff f0 88 00 00  30 63 00 00 70 65 00 00   |........0c..pe..|
0x8690:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x86b0:    00 00 00 00 50 87 00 00  90 64 00 00 10 65 00 00   |....P....d...e..|
0x86c0:    70 5e 00 00 80 54 00 00  ec ff ff ff 50 87 00 00   |p^...T......P...|
0x86d0:    80 64 00 00 00 65 00 00  00 00 00 00 e8 ff ff ff   |.d...e..........|
0x86e0:    50 87 00 00 60 5e 00 00  70 54 00 00 70 64 00 00   |P...`^..pT..pd..|
0x86f0:    f0 64 00 00 ??                                     |.d..?           |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x86f8:    00 00 00 00 10 89 00 00  b0 50 00 00 70 53 00 00   |.........P..pS..|
0x8708:    00 00 00 00 e0 50 00 00  00 00 00 00 ??            |.....P......?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x8718:    00 00 00 00 18 89 00 00  70 52 00 00 30 53 00 00   |........pR..0S..|
0x8728:    a0 52 00 00 e0 50 00 00  00 53 00 00 ??            |.R...P...S..?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x8750:    08 00 00 00 30 89 00 00  00 00 00 00 02 00 00 00   |....0...........|
0x8760:    f0 88 00 00 02 00 00 00  d0 87 00 00 02 18 00 00   |................|
0x8770:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x8770:    08 00 00 00 70 89 00 00  08                        |....p....       |
; section: .rodata._ZTIN5boost16thread_exceptionE
0x8778:    08 00 00 00 94 89 00 00  00 00 00 00 08            |.............   |
; section: .rodata._ZTIN5boost10lock_errorE
0x8784:    08 00 00 00 af 89 00 00  78 87 00 00 08            |........x....   |
; section: .rodata._ZTIN5boost9exceptionE
0x8790:    08 00 00 00 c4 89 00 00  ??                        |........?       |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x87b0:    08 00 00 00 f0 89 00 00  00 00 00 00 02 00 00 00   |................|
0x87c0:    84 87 00 00 02 00 00 00  90 87 00 00 02 08 00 00   |................|
0x87d0:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x87d0:    08 00 00 00 50 8a 00 00  ??                        |....P...?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x87f0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8800:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x8810:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x8820:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x8830:    4e 53 5f 31 30 6c 6f 63  6b 5f 65 72 72 6f 72 45   |NS_10lock_errorE|
0x8840:    45 45 45 45 00 ??                                  |EEEE.?          |
; section: .rodata._ZTIN5boost21thread_resource_errorE
0x8848:    08 00 00 00 90 8a 00 00  78 87 00 00 ??            |........x...?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x8870:    08 00 00 00 b0 8a 00 00  00 00 00 00 02 00 00 00   |................|
0x8880:    48 88 00 00 02 00 00 00  90 87 00 00 02 08 00 00   |H...............|
0x8890:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x8890:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x88a0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x88b0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x88c0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x88d0:    4e 53 5f 32 31 74 68 72  65 61 64 5f 72 65 73 6f   |NS_21thread_reso|
0x88e0:    75 72 63 65 5f 65 72 72  6f 72 45 45 45 45 45 00   |urce_errorEEEEE.|
0x88f0:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x88f0:    08 00 00 00 10 8b 00 00  00 00 00 00 02 00 00 00   |................|
0x8900:    90 87 00 00 02 00 00 00  00 00 00 00 02 14 00 00   |................|
0x8910:    08                                                 |.               |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x8910:    08 00 00 00 50 8b 00 00  08                        |....P....       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x8918:    08 00 00 00 90 8b 00 00  10 89 00 00 ??            |............?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x8930:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8940:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x8950:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x8960:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x8970:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x8980:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x8990:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost16thread_exceptionE
0x8994:    4e 35 62 6f 6f 73 74 31  36 74 68 72 65 61 64 5f   |N5boost16thread_|
0x89a4:    65 78 63 65 70 74 69 6f  6e 45 00 4e               |exceptionE.N    |
; section: .rodata._ZTSN5boost10lock_errorE
0x89af:    4e 35 62 6f 6f 73 74 31  30 6c 6f 63 6b 5f 65 72   |N5boost10lock_er|
0x89bf:    72 6f 72 45 00 4e                                  |rorE.N          |
; section: .rodata._ZTSN5boost9exceptionE
0x89c4:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x89d4:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x89f0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8a00:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x8a10:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x8a20:    53 5f 31 30 6c 6f 63 6b  5f 65 72 72 6f 72 45 45   |S_10lock_errorEE|
0x8a30:    45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x8a50:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8a60:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x8a70:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost21thread_resource_errorE
0x8a90:    4e 35 62 6f 6f 73 74 32  31 74 68 72 65 61 64 5f   |N5boost21thread_|
0x8aa0:    72 65 73 6f 75 72 63 65  5f 65 72 72 6f 72 45 00   |resource_errorE.|
0x8ab0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x8ab0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8ac0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x8ad0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x8ae0:    53 5f 32 31 74 68 72 65  61 64 5f 72 65 73 6f 75   |S_21thread_resou|
0x8af0:    72 63 65 5f 65 72 72 6f  72 45 45 45 00 ??         |rce_errorEEE.?  |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x8b10:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x8b20:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x8b30:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x8b50:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|   "N5boost6detail15sp_counted_baseE"
0x8b60:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x8b70:    00                                                 |.               |
0x8b71:    ??                                                 |?               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x8b90:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x8ba0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x8bb0:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x8bc0:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x8bd0:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x8be0:    6c 6f 63 5f 45 45 45 45  45 00 ??                  |loc_EEEEE.?     |
; section: .eh_frame
0x8a040:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8a050:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0x8a060:   90 4c 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |.L../....C. f...|
0x8a070:   41 0b 00 00 18 00 00 00  38 00 00 00 14 50 00 00   |A.......8....P..|
0x8a080:   2a 00 00 00 00 43 0e 20  61 0a 0e 04 41 0b 00 00   |*....C. a...A...|
0x8a090:   18 00 00 00 54 00 00 00  28 50 00 00 2a 00 00 00   |....T...(P..*...|
0x8a0a0:   00 43 0e 20 61 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. a...A.......|
0x8a0b0:   70 00 00 00 3c 50 00 00  2f 00 00 00 00 43 0e 20   |p...<P../....C. |
0x8a0c0:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 8c 00 00 00   |f...A...........|
0x8a0d0:   50 50 00 00 55 00 00 00  00 43 0e 20 6e 0a 0e 04   |PP..U....C. n...|
0x8a0e0:   47 0b 50 0a 0e 04 41 0b  18 00 00 00 ac 00 00 00   |G.P...A.........|
0x8a0f0:   90 50 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |.P../....C. f...|
0x8a100:   41 0b 00 00 18 00 00 00  c8 00 00 00 a4 50 00 00   |A............P..|
0x8a110:   39 00 00 00 00 43 0e 20  6e 0a 0e 04 43 0b 00 00   |9....C. n...C...|
0x8a120:   2c 00 00 00 e4 00 00 00  c8 50 00 00 64 00 00 00   |,........P..d...|
0x8a130:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 4f   |.A....A....C.@.O|
0x8a140:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 42 0b 00 00 00   |...A...A...B....|
0x8a150:   20 00 00 00 14 01 00 00  08 51 00 00 44 00 00 00   | ........Q..D...|
0x8a160:   00 41 0e 08 83 02 43 0e  20 6d 0a 0e 08 41 0e 04   |.A....C. m...A..|
0x8a170:   c3 46 0b 00 18 00 00 00  38 01 00 00 34 51 00 00   |.F......8...4Q..|
0x8a180:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x8a190:   1c 00 00 00 54 01 00 00  48 51 00 00 55 00 00 00   |....T...HQ..U...|
0x8a1a0:   00 43 0e 20 70 0a 0e 04  45 0b 50 0a 0e 04 41 0b   |.C. p...E.P...A.|
0x8a1b0:   18 00 00 00 74 01 00 00  88 51 00 00 25 00 00 00   |....t....Q..%...|
0x8a1c0:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x8a1d0:   90 01 00 00 9c 51 00 00  38 00 00 00 00 43 0e 20   |.....Q..8....C. |
0x8a1e0:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 ac 01 00 00   |k...E...........|
0x8a1f0:   c0 51 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |.Q..8....C. k...|
0x8a200:   45 0b 00 00 18 00 00 00  c8 01 00 00 e4 51 00 00   |E............Q..|
0x8a210:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x8a220:   18 00 00 00 e4 01 00 00  08 52 00 00 38 00 00 00   |.........R..8...|
0x8a230:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x8a240:   00 02 00 00 2c 52 00 00  38 00 00 00 00 43 0e 20   |....,R..8....C. |
0x8a250:   6b 0a 0e 04 45 0b 00 00  10 00 00 00 1c 02 00 00   |k...E...........|
0x8a260:   50 52 00 00 07 00 00 00  00 00 00 00 1c 00 00 00   |PR..............|
0x8a270:   00 00 00 00 01 7a 50 4c  52 00 01 7c 08 07 00 00   |.....zPLR..|....|
0x8a280:   00 00 00 00 1b 0c 04 04  88 01 00 00 20 00 00 00   |............ ...|
0x8a290:   24 00 00 00 2c 52 00 00  8b 00 00 00 04 0c 55 00   |$...,R........U.|
0x8a2a0:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x8a2b0:   10 00 00 00 74 02 00 00  f8 58 00 00 33 00 00 00   |....t....X..3...|
0x8a2c0:   00 43 0e 30 10 00 00 00  88 02 00 00 18 59 00 00   |.C.0.........Y..|
0x8a2d0:   33 00 00 00 00 43 0e 30  20 00 00 00 9c 02 00 00   |3....C.0 .......|
0x8a2e0:   70 59 00 00 8e 00 00 00  00 41 0e 08 83 02 43 0e   |pY.......A....C.|
0x8a2f0:   30 7b 0a 0e 08 41 0e 04  c3 41 0b 00 10 00 00 00   |0{...A...A......|
0x8a300:   c0 02 00 00 14 59 00 00  33 00 00 00 00 43 0e 30   |.....Y..3....C.0|
0x8a310:   20 00 00 00 d4 02 00 00  c8 59 00 00 41 00 00 00   | ........Y..A...|
0x8a320:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x8a330:   c3 45 0b 00 20 00 00 00  f8 02 00 00 f4 59 00 00   |.E.. ........Y..|
0x8a340:   41 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |A....A....C.0r..|
0x8a350:   08 41 0e 04 c3 45 0b 00  18 00 00 00 1c 03 00 00   |.A...E..........|
0x8a360:   20 5a 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   | Z..8....C. k...|
0x8a370:   45 0b 00 00 18 00 00 00  38 03 00 00 44 5a 00 00   |E.......8...DZ..|
0x8a380:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x8a390:   20 00 00 00 54 03 00 00  68 5a 00 00 41 00 00 00   | ...T...hZ..A...|
0x8a3a0:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x8a3b0:   c3 45 0b 00 20 00 00 00  78 03 00 00 94 5a 00 00   |.E.. ...x....Z..|
0x8a3c0:   4c 00 00 00 00 41 0e 08  83 02 43 0e 30 7d 0a 0e   |L....A....C.0}..|
0x8a3d0:   08 41 0e 04 c3 45 0b 00  10 00 00 00 9c 03 00 00   |.A...E..........|
0x8a3e0:   c0 5a 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |.Z..........0...|
0x8a3f0:   84 01 00 00 bc 5a 00 00  8e 00 00 00 04 18 55 00   |.....Z........U.|
0x8a400:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 6f   |.A....A....C.0.o|
0x8a410:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x8a420:   10 00 00 00 e4 03 00 00  18 5b 00 00 07 00 00 00   |.........[......|
0x8a430:   00 00 00 00 30 00 00 00  cc 01 00 00 14 5b 00 00   |....0........[..|
0x8a440:   a3 00 00 00 04 29 55 00  00 41 0e 08 86 02 41 0e   |.....)U..A....A.|
0x8a450:   0c 83 03 43 0e 30 02 7c  0a 0e 0c 41 0e 08 c3 41   |...C.0.|...A...A|
0x8a460:   0e 04 c6 41 0b 00 00 00  10 00 00 00 2c 04 00 00   |...A........,...|
0x8a470:   90 5b 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |.[..........0...|
0x8a480:   14 02 00 00 8c 5b 00 00  a3 00 00 00 04 3b 55 00   |.....[.......;U.|
0x8a490:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 7c   |.A....A....C.0.||
0x8a4a0:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x8a4b0:   28 00 00 00 48 02 00 00  08 5c 00 00 14 01 00 00   |(...H....\......|
0x8a4c0:   04 50 55 00 00 43 0e 30  48 86 03 57 87 02 83 04   |.PU..C.0H..W....|
0x8a4d0:   69 0a 0e 04 c7 c6 c3 45  0b 00 00 00 28 00 00 00   |i......E....(...|
0x8a4e0:   a0 04 00 00 fc 5c 00 00  8a 00 00 00 00 43 0e 30   |.....\.......C.0|
0x8a4f0:   5b 86 02 83 03 6d 0a 0e  04 c6 c3 45 0b 73 0a 0e   |[....m.....E.s..|
0x8a500:   04 c6 c3 42 0b 00 00 00  20 00 00 00 cc 04 00 00   |...B.... .......|
0x8a510:   60 5d 00 00 87 00 00 00  00 43 0e 30 48 83 03 64   |`].......C.0H..d|
0x8a520:   86 02 60 0a 0e 04 c6 c3  41 0b 00 00 24 00 00 00   |..`.....A...$...|
0x8a530:   c4 02 00 00 cc 5d 00 00  68 00 00 00 04 80 55 00   |.....]..h.....U.|
0x8a540:   00 41 0e 08 83 02 43 0e  30 79 0a 0e 08 41 0e 04   |.A....C.0y...A..|
0x8a550:   c3 4a 0b 00 10 00 00 00  18 05 00 00 14 5e 00 00   |.J...........^..|
0x8a560:   0a 00 00 00 00 00 00 00  20 00 00 00 2c 05 00 00   |........ ...,...|
0x8a570:   10 5e 00 00 4b 00 00 00  00 41 0e 08 83 02 43 0e   |.^..K....A....C.|
0x8a580:   30 7c 0a 0e 08 41 0e 04  c3 45 0b 00 10 00 00 00   |0|...A...E......|
0x8a590:   50 05 00 00 3c 5e 00 00  0a 00 00 00 00 00 00 00   |P...<^..........|
0x8a5a0:   20 00 00 00 64 05 00 00  38 5e 00 00 51 00 00 00   | ...d...8^..Q...|
0x8a5b0:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x8a5c0:   04 c3 45 0b 10 00 00 00  88 05 00 00 74 5e 00 00   |..E.........t^..|
0x8a5d0:   0a 00 00 00 00 00 00 00  20 00 00 00 9c 05 00 00   |........ .......|
0x8a5e0:   70 5e 00 00 51 00 00 00  00 41 0e 08 83 02 43 0e   |p^..Q....A....C.|
0x8a5f0:   30 02 42 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.B...A...E.....|
0x8a600:   c0 05 00 00 ac 5e 00 00  0a 00 00 00 00 00 00 00   |.....^..........|
0x8a610:   10 00 00 00 d4 05 00 00  a8 5e 00 00 0a 00 00 00   |.........^......|
0x8a620:   00 00 00 00 20 00 00 00  e8 05 00 00 a4 5e 00 00   |.... ........^..|
0x8a630:   52 00 00 00 00 41 0e 08  83 02 43 0e 30 02 43 0a   |R....A....C.0.C.|
0x8a640:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 0c 06 00 00   |..A...E.........|
0x8a650:   e0 5e 00 00 07 00 00 00  00 00 00 00 10 00 00 00   |.^..............|
0x8a660:   20 06 00 00 dc 5e 00 00  07 00 00 00 00 00 00 00   | ....^..........|
0x8a670:   20 00 00 00 34 06 00 00  d8 5e 00 00 5a 00 00 00   | ...4....^..Z...|
0x8a680:   00 41 0e 08 83 02 43 0e  30 02 4b 0a 0e 08 41 0e   |.A....C.0.K...A.|
0x8a690:   04 c3 45 0b 10 00 00 00  58 06 00 00 14 5f 00 00   |..E.....X...._..|
0x8a6a0:   07 00 00 00 00 00 00 00  20 00 00 00 6c 06 00 00   |........ ...l...|
0x8a6b0:   10 5f 00 00 53 00 00 00  00 41 0e 08 83 02 43 0e   |._..S....A....C.|
0x8a6c0:   30 02 44 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.D...A...E.....|
0x8a6d0:   90 06 00 00 4c 5f 00 00  07 00 00 00 00 00 00 00   |....L_..........|
0x8a6e0:   10 00 00 00 a4 06 00 00  48 5f 00 00 07 00 00 00   |........H_......|
0x8a6f0:   00 00 00 00 20 00 00 00  b8 06 00 00 44 5f 00 00   |.... .......D_..|
0x8a700:   60 00 00 00 00 41 0e 08  83 02 43 0e 30 02 51 0a   |`....A....C.0.Q.|
0x8a710:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 dc 06 00 00   |..A...E.........|
0x8a720:   80 5f 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |._..............|
0x8a730:   f0 06 00 00 7c 5f 00 00  0a 00 00 00 00 00 00 00   |....|_..........|
0x8a740:   20 00 00 00 04 07 00 00  78 5f 00 00 58 00 00 00   | .......x_..X...|
0x8a750:   00 41 0e 08 83 02 43 0e  30 02 49 0a 0e 08 41 0e   |.A....C.0.I...A.|
0x8a760:   04 c3 45 0b 10 00 00 00  28 07 00 00 b4 5f 00 00   |..E.....(...._..|
0x8a770:   07 00 00 00 00 00 00 00  20 00 00 00 3c 07 00 00   |........ ...<...|
0x8a780:   b0 5f 00 00 59 00 00 00  00 41 0e 08 83 02 43 0e   |._..Y....A....C.|
0x8a790:   30 02 4a 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.J...A...E.....|
0x8a7a0:   60 07 00 00 ec 5f 00 00  07 00 00 00 00 00 00 00   |`...._..........|
0x8a7b0:   20 00 00 00 74 07 00 00  e8 5f 00 00 59 00 00 00   | ...t...._..Y...|
0x8a7c0:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x8a7d0:   04 c3 45 0b 10 00 00 00  98 07 00 00 24 60 00 00   |..E.........$`..|
0x8a7e0:   0a 00 00 00 00 00 00 00  10 00 00 00 ac 07 00 00   |................|
0x8a7f0:   20 60 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   | `.......... ...|
0x8a800:   c0 07 00 00 1c 60 00 00  58 00 00 00 00 41 0e 08   |.....`..X....A..|
0x8a810:   83 02 43 0e 30 02 49 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.I...A...E.|
0x8a820:   10 00 00 00 e4 07 00 00  58 60 00 00 07 00 00 00   |........X`......|
0x8a830:   00 00 00 00 10 00 00 00  f8 07 00 00 54 60 00 00   |............T`..|
0x8a840:   07 00 00 00 00 00 00 00  20 00 00 00 0c 08 00 00   |........ .......|
0x8a850:   50 60 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |P`..`....A....C.|
0x8a860:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 20 00 00 00   |0.Q...A...E. ...|
0x8a870:   30 08 00 00 8c 60 00 00  3b 00 00 00 00 41 0e 08   |0....`..;....A..|
0x8a880:   83 02 43 0e 30 6c 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0l...A...E..|
0x8a890:   20 00 00 00 54 08 00 00  a8 60 00 00 42 00 00 00   | ...T....`..B...|
0x8a8a0:   00 41 0e 08 83 02 43 0e  30 77 0a 0e 08 41 0e 04   |.A....C.0w...A..|
0x8a8b0:   c3 41 0b 00 2c 00 00 00  4c 06 00 00 84 f7 ff ff   |.A..,...L.......|
0x8a8c0:   d0 06 00 00 04 91 55 00  00 46 0e f0 02 49 83 05   |......U..F...I..|
0x8a8d0:   5a 86 04 49 87 03 52 85  02 02 a1 0a 0e 04 c5 c7   |Z..I..R.........|
0x8a8e0:   c6 c3 43 0b 40 00 00 00  7c 06 00 00 24 fe ff ff   |..C.@...|...$...|
0x8a8f0:   5a 01 00 00 04 a6 55 00  00 41 0e 08 85 02 41 0e   |Z.....U..A....A.|
0x8a900:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x8a910:   02 dd 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x8a920:   c7 41 0e 04 c5 48 0b 00  2c 00 00 00 c0 06 00 00   |.A...H..,.......|
0x8a930:   40 ff ff ff 7a 02 00 00  04 c0 55 00 00 43 0e 50   |@...z.....U..C.P|
0x8a940:   48 83 05 48 86 04 48 87  03 63 85 02 02 49 0a 0e   |H..H..H..c...I..|
0x8a950:   04 c5 c7 c6 c3 41 0b 00  18 00 00 00 1c 09 00 00   |.....A..........|
0x8a960:   90 01 00 00 45 00 00 00  00 43 0e 20 7c 0a 0e 04   |....E....C. |...|
0x8a970:   41 0b 00 00 18 00 00 00  38 09 00 00 c4 01 00 00   |A.......8.......|
0x8a980:   44 00 00 00 00 43 0e 20  7b 0a 0e 04 41 0b 00 00   |D....C. {...A...|
0x8a990:   2c 00 00 00 28 07 00 00  f8 01 00 00 8b 01 00 00   |,...(...........|
0x8a9a0:   04 df 55 00 00 43 0e 60  48 83 05 54 86 04 54 85   |..U..C.`H..T..T.|
0x8a9b0:   02 87 03 64 0a 0e 04 c5  c7 c6 c3 41 0b 00 00 00   |...d.......A....|
0x8a9c0:   18 00 00 00 84 09 00 00  58 03 00 00 32 00 00 00   |........X...2...|
0x8a9d0:   00 43 0e 20 65 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. e...E.......|
0x8a9e0:   a0 09 00 00 7c 03 00 00  4d 00 00 00 00 43 0e 20   |....|...M....C. |
0x8a9f0:   02 44 0a 0e 04 41 0b 00  18 00 00 00 bc 09 00 00   |.D...A..........|
0x8aa00:   b0 03 00 00 44 00 00 00  00 43 0e 20 7b 0a 0e 04   |....D....C. {...|
0x8aa10:   41 0b 00 00 18 00 00 00  d8 09 00 00 e4 03 00 00   |A...............|
0x8aa20:   32 00 00 00 00 43 0e 20  69 0a 0e 04 41 0b 00 00   |2....C. i...A...|
0x8aa30:   18 00 00 00 f4 09 00 00  08 04 00 00 46 00 00 00   |............F...|
0x8aa40:   00 43 0e 30 7d 0a 0e 04  41 0b 00 00 20 00 00 00   |.C.0}...A... ...|
0x8aa50:   10 0a 00 00 3c 04 00 00  76 00 00 00 00 41 0e 08   |....<...v....A..|
0x8aa60:   83 02 43 0e 30 02 4e 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.N...A...E.|
0x8aa70:   20 00 00 00 34 0a 00 00  98 04 00 00 4e 00 00 00   | ...4.......N...|
0x8aa80:   00 41 0e 08 83 02 43 0e  30 76 0a 0e 08 41 0e 04   |.A....C.0v...A..|
0x8aa90:   c3 45 0b 00 18 00 00 00  58 0a 00 00 c4 04 00 00   |.E......X.......|
0x8aaa0:   4a 00 00 00 00 43 0e 20  65 0a 0e 04 48 0b 00 00   |J....C. e...H...|
0x8aab0:   18 00 00 00 74 0a 00 00  f8 04 00 00 3e 00 00 00   |....t.......>...|
0x8aac0:   00 43 0e 20 65 0a 0e 04  48 0b 00 00 18 00 00 00   |.C. e...H.......|
0x8aad0:   90 0a 00 00 1c 05 00 00  46 00 00 00 00 43 0e 30   |........F....C.0|
0x8aae0:   7d 0a 0e 04 41 0b 00 00  18 00 00 00 ac 0a 00 00   |}...A...........|
0x8aaf0:   50 05 00 00 4a 00 00 00  00 43 0e 20 65 0a 0e 04   |P...J....C. e...|
0x8ab00:   48 0b 00 00 18 00 00 00  c8 0a 00 00 84 05 00 00   |H...............|
0x8ab10:   46 00 00 00 00 43 0e 30  7d 0a 0e 04 41 0b 00 00   |F....C.0}...A...|
0x8ab20:   18 00 00 00 e4 0a 00 00  b8 05 00 00 39 00 00 00   |............9...|
0x8ab30:   00 43 0e 20 70 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. p...A.......|
0x8ab40:   00 0b 00 00 dc 05 00 00  46 00 00 00 00 43 0e 30   |........F....C.0|
0x8ab50:   7d 0a 0e 04 41 0b 00 00  18 00 00 00 1c 0b 00 00   |}...A...........|
0x8ab60:   10 06 00 00 52 00 00 00  00 43 0e 20 65 0a 0e 04   |....R....C. e...|
0x8ab70:   48 0b 00 00 18 00 00 00  38 0b 00 00 54 06 00 00   |H.......8...T...|
0x8ab80:   46 00 00 00 00 43 0e 30  7d 0a 0e 04 41 0b 00 00   |F....C.0}...A...|
0x8ab90:   20 00 00 00 54 0b 00 00  88 06 00 00 48 00 00 00   | ...T.......H...|
0x8aba0:   00 41 0e 08 83 02 43 0e  30 7d 0a 0e 08 41 0e 04   |.A....C.0}...A..|
0x8abb0:   c3 41 0b 00 20 00 00 00  78 0b 00 00 b4 06 00 00   |.A.. ...x.......|
0x8abc0:   74 00 00 00 00 41 0e 08  83 02 43 0e 30 02 44 0a   |t....A....C.0.D.|
0x8abd0:   0e 08 41 0e 04 c3 47 0b  20 00 00 00 9c 0b 00 00   |..A...G. .......|
0x8abe0:   10 07 00 00 54 00 00 00  00 41 0e 08 83 02 43 0e   |....T....A....C.|
0x8abf0:   30 02 49 0a 0e 08 41 0e  04 c3 41 0b 24 00 00 00   |0.I...A...A.$...|
0x8ac00:   c0 0b 00 00 4c 07 00 00  3a 01 00 00 00 43 0e 40   |....L...:....C.@|
0x8ac10:   48 83 04 56 86 03 53 87  02 02 86 0a 0e 04 c7 c6   |H..V..S.........|
0x8ac20:   c3 46 0b 00 20 00 00 00  e8 0b 00 00 64 08 00 00   |.F.. .......d...|
0x8ac30:   d2 00 00 00 00 43 0e 40  48 83 03 46 86 02 02 42   |.....C.@H..F...B|
0x8ac40:   0a 0e 04 c6 c3 45 0b 00  20 00 00 00 0c 0c 00 00   |.....E.. .......|
0x8ac50:   20 09 00 00 5b 00 00 00  00 41 0e 08 83 02 43 0e   | ...[....A....C.|
0x8ac60:   30 02 50 0a 0e 08 41 0e  04 c3 41 0b 18 00 00 00   |0.P...A...A.....|
0x8ac70:   30 0c 00 00 5c 09 00 00  55 00 00 00 00 43 0e 30   |0...\...U....C.0|
0x8ac80:   71 0a 0e 04 44 0b 00 00  18 00 00 00 4c 0c 00 00   |q...D.......L...|
0x8ac90:   a0 09 00 00 46 00 00 00  00 43 0e 30 7d 0a 0e 04   |....F....C.0}...|
0x8aca0:   41 0b 00 00 18 00 00 00  68 0c 00 00 d4 09 00 00   |A.......h.......|
0x8acb0:   46 00 00 00 00 43 0e 30  7d 0a 0e 04 41 0b 00 00   |F....C.0}...A...|
0x8acc0:   18 00 00 00 84 0c 00 00  08 0a 00 00 44 00 00 00   |............D...|
0x8acd0:   00 43 0e 30 7b 0a 0e 04  41 0b 00 00 20 00 00 00   |.C.0{...A... ...|
0x8ace0:   a0 0c 00 00 3c 0a 00 00  57 00 00 00 00 43 0e 30   |....<...W....C.0|
0x8acf0:   48 83 03 48 86 02 7e 0a  0e 04 c6 c3 41 0b 00 00   |H..H..~.....A...|
0x8ad00:   18 00 00 00 c4 0c 00 00  78 0a 00 00 49 00 00 00   |........x...I...|
0x8ad10:   00 43 0e 20 02 40 0a 0e  04 41 0b 00 20 00 00 00   |.C. .@...A.. ...|
0x8ad20:   e0 0c 00 00 ac 0a 00 00  e3 00 00 00 00 41 0e 08   |.............A..|
0x8ad30:   83 02 43 0e 70 02 d8 0a  0e 08 41 0e 04 c3 41 0b   |..C.p.....A...A.|
0x8ad40:   24 00 00 00 04 0d 00 00  78 0b 00 00 6d 01 00 00   |$.......x...m...|
0x8ad50:   00 43 0e 30 48 83 04 48  86 03 53 87 02 02 a4 0a   |.C.0H..H..S.....|
0x8ad60:   0e 04 c7 c6 c3 46 0b 00  18 00 00 00 2c 0d 00 00   |.....F......,...|
0x8ad70:   c0 0c 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |..../....C. f...|
0x8ad80:   41 0b 00 00 20 00 00 00  48 0d 00 00 d4 0c 00 00   |A... ...H.......|
0x8ad90:   39 00 00 00 00 41 0e 08  83 02 43 0e 30 6e 0a 0e   |9....A....C.0n..|
0x8ada0:   08 41 0e 04 c3 41 0b 00  18 00 00 00 6c 0d 00 00   |.A...A......l...|
0x8adb0:   f0 0c 00 00 4c 00 00 00  00 43 0e 20 02 43 0a 0e   |....L....C. .C..|
0x8adc0:   04 41 0b 00 20 00 00 00  88 0d 00 00 24 0d 00 00   |.A.. .......$...|
0x8add0:   51 00 00 00 00 43 0e 30  58 83 03 48 86 02 68 0a   |Q....C.0X..H..h.|
0x8ade0:   0e 04 c6 c3 41 0b 00 00  20 00 00 00 ac 0d 00 00   |....A... .......|
0x8adf0:   60 0d 00 00 51 00 00 00  00 43 0e 30 58 83 03 48   |`...Q....C.0X..H|
0x8ae00:   86 02 68 0a 0e 04 c6 c3  41 0b 00 00 20 00 00 00   |..h.....A... ...|
0x8ae10:   d0 0d 00 00 9c 0d 00 00  82 00 00 00 00 43 0e 30   |.............C.0|
0x8ae20:   48 83 03 48 86 02 02 45  0a 0e 04 c6 c3 41 0b 00   |H..H...E.....A..|
0x8ae30:   20 00 00 00 f4 0d 00 00  08 0e 00 00 82 00 00 00   | ...............|
0x8ae40:   00 43 0e 30 48 83 03 48  86 02 02 45 0a 0e 04 c6   |.C.0H..H...E....|
0x8ae50:   c3 41 0b 00 20 00 00 00  18 0e 00 00 74 0e 00 00   |.A.. .......t...|
0x8ae60:   c3 00 00 00 00 41 0e 08  83 02 43 0e 50 79 0a 0e   |.....A....C.Py..|
0x8ae70:   08 41 0e 04 c3 42 0b 00  18 00 00 00 3c 0e 00 00   |.A...B......<...|
0x8ae80:   20 0f 00 00 2d 00 00 00  00 43 0e 20 64 0a 0e 04   | ...-....C. d...|
0x8ae90:   41 0b 00 00 2c 00 00 00  58 0e 00 00 34 0f 00 00   |A...,...X...4...|
0x8aea0:   8e 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x8aeb0:   0e 50 02 81 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.P.....A...A...A|
0x8aec0:   0b 00 00 00 2c 00 00 00  88 0e 00 00 94 0f 00 00   |....,...........|
0x8aed0:   91 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x8aee0:   0e 50 02 84 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.P.....A...A...A|
0x8aef0:   0b 00 00 00 28 00 00 00  b8 0e 00 00 04 10 00 00   |....(...........|
0x8af00:   42 01 00 00 00 46 0e a0  01 4e 83 05 4e 86 04 62   |B....F...N..N..b|
0x8af10:   85 02 87 03 02 e6 0a 0e  04 c5 c7 c6 c3 46 0b 00   |.............F..|
0x8af20:   28 00 00 00 e4 0e 00 00  28 11 00 00 8d 01 00 00   |(.......(.......|
0x8af30:   00 43 0e 50 48 83 05 4c  86 04 5b 87 03 85 02 02   |.C.PH..L..[.....|
0x8af40:   40 0a 0e 04 c5 c7 c6 c3  46 0b 00 00 2c 00 00 00   |@.......F...,...|
0x8af50:   e4 0c 00 00 8c 12 00 00  0b 03 00 00 04 fd 55 00   |..............U.|
0x8af60:   00 46 0e 80 0a 4e 83 05  4e 86 04 60 85 02 87 03   |.F...N..N..`....|
0x8af70:   02 8f 0a 0e 04 c5 c7 c6  c3 47 0b 00 20 00 00 00   |.........G.. ...|
0x8af80:   40 0f 00 00 6c 15 00 00  42 00 00 00 00 41 0e 08   |@...l...B....A..|
0x8af90:   83 02 43 0e 30 75 0a 0e  08 41 0e 04 c3 43 0b 00   |..C.0u...A...C..|
0x8afa0:   24 00 00 00 38 0d 00 00  98 15 00 00 ab 00 00 00   |$...8...........|
0x8afb0:   04 16 56 00 00 41 0e 08  83 02 43 0e 40 02 56 0a   |..V..A....C.@.V.|
0x8afc0:   0e 08 41 0e 04 c3 41 0b  20 00 00 00 8c 0f 00 00   |..A...A. .......|
0x8afd0:   20 16 00 00 56 00 00 00  00 41 0e 08 83 02 43 0e   | ...V....A....C.|
0x8afe0:   30 02 49 0a 0e 08 41 0e  04 c3 43 0b 18 00 00 00   |0.I...A...C.....|
0x8aff0:   b0 0f 00 00 5c 16 00 00  31 00 00 00 00 43 0e 20   |....\...1....C. |
0x8b000:   68 0a 0e 04 41 0b 00 00  20 00 00 00 cc 0f 00 00   |h...A... .......|
0x8b010:   d0 5d 00 00 45 00 00 00  00 41 0e 08 83 02 43 0e   |.]..E....A....C.|
0x8b020:   30 72 0a 0e 08 41 0e 04  c3 41 0b 00 2c 00 00 00   |0r...A...A..,...|
0x8b030:   c4 0d 00 00 fc 5d 00 00  2b 01 00 00 04 28 56 00   |.....]..+....(V.|
0x8b040:   00 43 0e 40 48 83 05 54  86 04 5b 85 02 87 03 02   |.C.@H..T..[.....|
0x8b050:   af 0a 0e 04 c5 c7 c6 c3  47 0b 00 00 30 00 00 00   |........G...0...|
0x8b060:   f4 0d 00 00 fc 5e 00 00  87 00 00 00 04 45 56 00   |.....^.......EV.|
0x8b070:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 68   |.A....A....C.0.h|
0x8b080:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x8b090:   10 00 00 00 54 10 00 00  58 5f 00 00 07 00 00 00   |....T...X_......|
0x8b0a0:   00 00 00 00 20 00 00 00  3c 0e 00 00 54 5f 00 00   |.... ...<...T_..|
0x8b0b0:   6d 00 00 00 04 52 56 00  00 41 0e 08 86 02 41 0e   |m....RV..A....A.|
0x8b0c0:   0c 83 03 43 0e 30 00 00  20 00 00 00 60 0e 00 00   |...C.0.. ...`...|
0x8b0d0:   a0 5f 00 00 ea 00 00 00  04 5e 56 00 00 41 0e 08   |._.......^V..A..|
0x8b0e0:   86 02 41 0e 0c 83 03 43  0e 50 00 00 24 00 00 00   |..A....C.P..$...|
0x8b0f0:   84 0e 00 00 6c 60 00 00  ef 00 00 00 04 72 56 00   |....l`.......rV.|
0x8b100:   00 41 0e 08 83 02 43 0e  50 02 5e 0a 0e 08 41 0e   |.A....C.P.^...A.|
0x8b110:   04 c3 45 0b 30 00 00 00  ac 0e 00 00 34 61 00 00   |..E.0.......4a..|
0x8b120:   87 00 00 00 04 87 56 00  00 41 0e 08 86 02 41 0e   |......V..A....A.|
0x8b130:   0c 83 03 43 0e 30 02 68  0a 0e 0c 41 0e 08 c3 41   |...C.0.h...A...A|
0x8b140:   0e 04 c6 41 0b 00 00 00  10 00 00 00 0c 11 00 00   |...A............|
0x8b150:   90 61 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |.a.......... ...|
0x8b160:   f4 0e 00 00 8c 61 00 00  6d 00 00 00 04 94 56 00   |.....a..m.....V.|
0x8b170:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x8b180:   20 00 00 00 18 0f 00 00  d8 61 00 00 ea 00 00 00   | ........a......|
0x8b190:   04 a0 56 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..V..A....A....C|
0x8b1a0:   0e 50 00 00 30 00 00 00  3c 0f 00 00 a4 62 00 00   |.P..0...<....b..|
0x8b1b0:   48 02 00 00 04 b4 56 00  00 41 0e 08 86 02 41 0e   |H.....V..A....A.|
0x8b1c0:   0c 83 03 43 0e 60 03 12  01 0a 0e 0c 41 0e 08 c3   |...C.`......A...|
0x8b1d0:   41 0e 04 c6 47 0b 00 00  24 00 00 00 70 0f 00 00   |A...G...$...p...|
0x8b1e0:   c0 64 00 00 6f 00 00 00  04 dc 56 00 00 43 0e 30   |.d..o.....V..C.0|
0x8b1f0:   48 83 03 48 86 02 02 42  0a 0e 04 c6 c3 43 0b 00   |H..H...B.....C..|
0x8b200:   2c 00 00 00 98 0f 00 00  88 14 00 00 3a 02 00 00   |,...........:...|
0x8b210:   04 ec 56 00 00 43 0e 50  48 86 04 48 83 05 57 85   |..V..C.PH..H..W.|
0x8b220:   02 87 03 02 ac 0a 0e 04  c5 c7 c6 c3 4a 0b 00 00   |............J...|
0x8b230:   20 00 00 00 f4 11 00 00  98 16 00 00 42 00 00 00   | ...........B...|
0x8b240:   00 41 0e 08 83 02 43 0e  30 75 0a 0e 08 41 0e 04   |.A....C.0u...A..|
0x8b250:   c3 43 0b 00 24 00 00 00  ec 0f 00 00 c4 16 00 00   |.C..$...........|
0x8b260:   ab 00 00 00 04 32 57 00  00 41 0e 08 83 02 43 0e   |.....2W..A....C.|
0x8b270:   40 02 56 0a 0e 08 41 0e  04 c3 41 0b 2c 00 00 00   |@.V...A...A.,...|
0x8b280:   14 10 00 00 4c 17 00 00  6d 03 00 00 04 44 57 00   |....L...m....DW.|
0x8b290:   00 46 0e f0 02 49 83 05  49 86 04 49 87 03 4b 85   |.F...I..I..I..K.|
0x8b2a0:   02 02 9e 0a 0e 04 c5 c7  c6 c3 46 0b 3c 00 00 00   |..........F.<...|
0x8b2b0:   70 12 00 00 5c 64 00 00  3d 02 00 00 00 41 0e 08   |p...\d..=....A..|
0x8b2c0:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x8b2d0:   05 43 0e 60 02 d0 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.....A...A..|
0x8b2e0:   c6 41 0e 08 c7 41 0e 04  c5 45 0b 00 44 00 00 00   |.A...A...E..D...|
0x8b2f0:   84 10 00 00 4c 1a 00 00  05 03 00 00 04 58 57 00   |....L........XW.|
0x8b300:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x8b310:   43 0e 14 83 05 48 0e a0  01 03 69 01 0a 0e 14 41   |C....H....i....A|
0x8b320:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x8b330:   0b 00 00 00 40 00 00 00  cc 10 00 00 14 1d 00 00   |....@...........|
0x8b340:   7d 01 00 00 04 6b 57 00  00 41 0e 08 85 02 41 0e   |}....kW..A....A.|
0x8b350:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x8b360:   03 35 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.5....A...A...A.|
0x8b370:   08 c7 41 0e 04 c5 48 0b  28 00 00 00 10 11 00 00   |..A...H.(.......|
0x8b380:   50 1e 00 00 d1 00 00 00  04 90 57 00 00 43 0e 30   |P.........W..C.0|
0x8b390:   48 83 04 49 87 02 48 86  03 02 95 0a 0e 04 c7 c6   |H..I..H.........|
0x8b3a0:   c3 41 0b 00 28 00 00 00  3c 11 00 00 04 1f 00 00   |.A..(...<.......|
0x8b3b0:   cf 00 00 00 04 9e 57 00  00 43 0e 30 48 83 04 49   |......W..C.0H..I|
0x8b3c0:   87 02 48 86 03 02 93 0a  0e 04 c7 c6 c3 41 0b 00   |..H..........A..|
0x8b3d0:   18 00 00 00 94 13 00 00  a8 1f 00 00 49 00 00 00   |............I...|
0x8b3e0:   00 43 0e 30 02 40 0a 0e  04 41 0b 00 20 00 00 00   |.C.0.@...A.. ...|
0x8b3f0:   b0 13 00 00 5c 65 00 00  85 00 00 00 00 41 0e 08   |....\e.......A..|
0x8b400:   83 02 43 0e 30 67 0a 0e  08 41 0e 04 c3 44 0b 00   |..C.0g...A...D..|
0x8b410:   28 00 00 00 d4 13 00 00  c8 65 00 00 64 01 00 00   |(........e..d...|
0x8b420:   00 43 0e 50 48 83 05 58  86 04 50 85 02 87 03 02   |.C.PH..X..P.....|
0x8b430:   45 0a 0e 04 c5 c7 c6 c3  48 0b 00 00 40 00 00 00   |E.......H...@...|
0x8b440:   d4 11 00 00 8c 1f 00 00  08 03 00 00 04 ac 57 00   |..............W.|
0x8b450:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x8b460:   41 0e 14 83 05 43 0e 50  03 3c 01 0a 0e 14 41 0e   |A....C.P.<....A.|
0x8b470:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 49 0b   |..A...A...A...I.|
0x8b480:   3c 00 00 00 44 14 00 00  c8 66 00 00 ff 03 00 00   |<...D....f......|
0x8b490:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x8b4a0:   41 0e 14 83 05 43 0e 60  03 4d 01 0a 0e 14 41 0e   |A....C.`.M....A.|
0x8b4b0:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 48 0b   |..A...A...A...H.|
0x8b4c0:   40 00 00 00 58 12 00 00  18 22 00 00 95 02 00 00   |@...X...."......|
0x8b4d0:   04 bc 57 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |..W..A....A....A|
0x8b4e0:   0e 10 86 04 41 0e 14 83  05 48 0e a0 01 02 54 0a   |....A....H....T.|
0x8b4f0:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x8b500:   04 c5 44 0b 24 00 00 00  9c 12 00 00 74 24 00 00   |..D.$.......t$..|
0x8b510:   cc 00 00 00 04 dd 57 00  00 41 0e 08 83 02 43 0e   |......W..A....C.|
0x8b520:   40 02 7d 0a 0e 08 41 0e  04 c3 46 0b 28 00 00 00   |@.}...A...F.(...|
0x8b530:   f0 14 00 00 1c 25 00 00  b7 00 00 00 00 43 0e 60   |.....%.......C.`|
0x8b540:   4d 83 05 48 86 04 48 87  03 48 85 02 02 89 0a 0e   |M..H..H..H......|
0x8b550:   04 c5 c7 c6 c3 41 0b 00  28 00 00 00 1c 15 00 00   |.....A..(.......|
0x8b560:   b0 25 00 00 b3 00 00 00  00 43 0e 50 48 83 05 49   |.%.......C.PH..I|
0x8b570:   85 02 48 87 03 54 86 04  02 7d 0a 0e 04 c5 c7 c6   |..H..T...}......|
0x8b580:   c3 41 0b 00 28 00 00 00  48 15 00 00 44 26 00 00   |.A..(...H...D&..|
0x8b590:   b5 00 00 00 00 43 0e 60  4d 83 05 48 86 04 48 87   |.....C.`M..H..H.|
0x8b5a0:   03 48 85 02 02 87 0a 0e  04 c5 c7 c6 c3 41 0b 00   |.H...........A..|
0x8b5b0:   28 00 00 00 74 15 00 00  d8 26 00 00 b1 00 00 00   |(...t....&......|
0x8b5c0:   00 43 0e 50 48 83 05 49  85 02 48 87 03 54 86 04   |.C.PH..I..H..T..|
0x8b5d0:   02 7b 0a 0e 04 c5 c7 c6  c3 41 0b 00 18 00 00 00   |.{.......A......|
0x8b5e0:   a0 15 00 00 6c 27 00 00  49 00 00 00 00 43 0e 30   |....l'..I....C.0|
0x8b5f0:   02 40 0a 0e 04 41 0b 00  38 00 00 00 90 13 00 00   |.@...A..8.......|
0x8b600:   50 69 00 00 24 01 00 00  04 eb 57 00 00 41 0e 08   |Pi..$.....W..A..|
0x8b610:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x8b620:   92 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |....A...A...A...|
0x8b630:   41 0b 00 00 28 00 00 00  cc 13 00 00 64 27 00 00   |A...(.......d'..|
0x8b640:   b6 01 00 00 04 ff 57 00  00 43 0e 80 01 52 83 04   |......W..C...R..|
0x8b650:   02 50 87 02 86 03 7b 0a  0e 04 c7 c6 c3 48 0b 00   |.P....{......H..|
0x8b660:   30 00 00 00 f8 13 00 00  f8 28 00 00 f7 00 00 00   |0........(......|
0x8b670:   04 0e 58 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..X..A....A....C|
0x8b680:   0e 30 02 81 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 48   |.0.....A...A...H|
0x8b690:   0b 00 00 00 38 00 00 00  2c 14 00 00 c4 29 00 00   |....8...,....)..|
0x8b6a0:   17 01 00 00 04 1c 58 00  00 41 0e 08 87 02 41 0e   |......X..A....A.|
0x8b6b0:   0c 86 03 41 0e 10 83 04  43 0e 40 02 8f 0a 0e 10   |...A....C.@.....|
0x8b6c0:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 48 0b 00 00   |A...A...A...H...|
0x8b6d0:   30 00 00 00 68 14 00 00  a8 2a 00 00 d6 00 00 00   |0...h....*......|
0x8b6e0:   04 2a 58 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.*X..A....A....C|
0x8b6f0:   0e 30 02 47 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 42   |.0.G...A...A...B|
0x8b700:   0b 00 00 00 28 00 00 00  9c 14 00 00 54 2b 00 00   |....(.......T+..|
0x8b710:   53 01 00 00 04 38 58 00  00 43 0e 30 48 83 04 54   |S....8X..C.0H..T|
0x8b720:   86 03 4d 87 02 02 54 0a  0e 04 c7 c6 c3 48 0b 00   |..M...T......H..|
0x8b730:   2c 00 00 00 c8 14 00 00  88 2c 00 00 b4 03 00 00   |,........,......|
0x8b740:   04 46 58 00 00 46 0e 90  01 4e 86 04 48 83 05 5a   |.FX..F...N..H..Z|
0x8b750:   87 03 4e 85 02 02 87 0a  0e 04 c5 c7 c6 c3 45 0b   |..N...........E.|
0x8b760:   44 00 00 00 f8 14 00 00  18 30 00 00 9c 02 00 00   |D........0......|
0x8b770:   04 71 58 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.qX..A....A....A|
0x8b780:   0e 10 86 04 41 0e 14 83  05 46 0e c0 01 03 83 01   |....A....F......|
0x8b790:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x8b7a0:   0e 04 c5 47 0b 00 00 00  2c 00 00 00 40 15 00 00   |...G....,...@...|
0x8b7b0:   70 32 00 00 06 02 00 00  04 91 58 00 00 46 0e 90   |p2........X..F..|
0x8b7c0:   01 55 86 04 4b 83 05 02  55 85 02 87 03 02 45 0a   |.U..K...U.....E.|
0x8b7d0:   0e 04 c5 c7 c6 c3 48 0b  34 00 00 00 9c 17 00 00   |......H.4.......|
0x8b7e0:   a0 68 00 00 9d 02 00 00  00 43 0e 60 48 83 05 58   |.h.......C.`H..X|
0x8b7f0:   86 04 48 87 03 4c 85 02  02 75 0a 0e 04 c5 c7 c6   |..H..L...u......|
0x8b800:   c3 4c 0b 02 ed 0a 0e 04  c5 c7 c6 c3 43 0b 00 00   |.L..........C...|
0x8b810:   30 00 00 00 a8 15 00 00  18 34 00 00 b0 00 00 00   |0........4......|
0x8b820:   04 a0 58 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |..X..A....A....C|
0x8b830:   0e 30 02 89 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 43   |.0.....A...A...C|
0x8b840:   0b 00 00 00 20 00 00 00  08 18 00 00 d4 6a 00 00   |.... ........j..|
0x8b850:   0c 01 00 00 00 41 0e 08  83 02 43 0e 30 02 cc 0a   |.....A....C.0...|
0x8b860:   0e 08 41 0e 04 c3 41 0b  ??                        |..A...A.?       |

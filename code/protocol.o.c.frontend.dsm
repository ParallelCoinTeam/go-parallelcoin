;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:22:16
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: ppszTypeName at 0x0 -- 0x4
0x0:       53                        	push ebx
0x1:       83 ec 18                  	sub esp, 0x18
; data inside code section at 0x4 -- 0x10
0x4:       8b 5c 24 20 65 a1 14 00  00 00 89 44               |.\$ e......D    |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0x10 -- 0x14
0x10:      24 0c                     	and al, 0xc
0x12:      31 c0                     	xor eax, eax
; data inside code section at 0x14 -- 0x15
0x14:      e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x15 -- 0x16
; data inside code section at 0x16 -- 0x4c
0x16:      ff ff ff 8b 40 24 c7 43  04 00 00 00 00 c7 43 08   |....@$.C......C.|
0x26:      00 00 00 00 c7 43 0c 00  00 00 00 89 03 8b 44 24   |.....C........D$|
0x36:      0c 65 33 05 14 00 00 00  c6 43 05 01 c7 43 10 ff   |.e3......C...C..|
0x46:      ff ff ff c7 43 14                                  |....C.          |
; function: function_4c at 0x4c -- 0x57
0x4c:      00 00                     	add byte ptr [eax], al
0x4e:      00 00                     	add byte ptr [eax], al
0x50:      75 05                     	jne 0x57 <function_4c+0xa>
0x52:      83 c4 18                  	add esp, 0x18
0x55:      5b                        	pop ebx
0x56:      c3                        	ret 
; data inside code section at 0x57 -- 0x58
0x57:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x58 -- 0x59
; data inside code section at 0x59 -- 0x60
0x59:      ff ff ff 8d 74 26 00                               |....t&.         |
; function: CMessageHeader at 0x60 -- 0x6b
0x60:      83 ec 2c                  	sub esp, 0x2c
0x63:      89 5c 24 20               	mov dword ptr [esp + 0x20], ebx
0x67:      8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
; data inside code section at 0x6b -- 0x88
0x6b:      89 74 24 24 8b 74 24 38  89 7c 24 28 8b 7c 24 34   |.t$$.t$8.|$(.|$4|
0x7b:      65 a1 14 00 00 00 89 44  24 1c 31 c0 e8            |e......D$.1..   |
; dynamically linked function: _Z6Paramsv at 0x88 -- 0x89
; data inside code section at 0x89 -- 0xa4
0x89:      ff ff ff 8b 40 24 89 03  8d 43 04 c7 44 24 08 0c   |....@$...C..D$..|
0x99:      00 00 00 89 7c 24 04 89  04 24 e8                  |....|$...$.     |
; dynamically linked function: strncpy at 0xa4 -- 0xa5
; data inside code section at 0xa5 -- 0xa7
0xa5:      ff ff                                              |..              |
; function: function_a7 at 0xa7 -- 0xcf
0xa7:      ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0xad:      33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0xb3:      89 73 10                  	mov dword ptr [ebx + 0x10], esi
0xb6:      c7 43 14 00 00 00 00      	mov dword ptr [ebx + 0x14], 0
0xbd:      75 10                     	jne 0xcf <function_a7+0x27>
0xbf:      8b 5c 24 20               	mov ebx, dword ptr [esp + 0x20]
0xc3:      8b 74 24 24               	mov esi, dword ptr [esp + 0x24]
0xc7:      8b 7c 24 28               	mov edi, dword ptr [esp + 0x28]
0xcb:      83 c4 2c                  	add esp, 0x2c
0xce:      c3                        	ret 
; data inside code section at 0xcf -- 0xd0
0xcf:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd0 -- 0xd1
; data inside code section at 0xd1 -- 0xe0
0xd1:      ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: CAddress at 0xe0 -- 0xf7
0xe0:      53                        	push ebx
0xe1:      83 ec 28                  	sub esp, 0x28
0xe4:      8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0xe8:      65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xee:      89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0xf2:      31 c0                     	xor eax, eax
0xf4:      89 1c 24                  	mov dword ptr [esp], ebx
; data inside code section at 0xf7 -- 0xf8
0xf7:      e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC2Ev at 0xf8 -- 0xf9
; data inside code section at 0xf9 -- 0xfb
0xf9:      ff ff                                              |..              |
; function: function_fb at 0xfb -- 0x131
0xfb:      ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0x101:     33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0x107:     c7 43 14 01 00 00 00      	mov dword ptr [ebx + 0x14], 1
0x10e:     c7 43 18 00 00 00 00      	mov dword ptr [ebx + 0x18], 0
0x115:     c7 43 1c 00 e1 f5 05      	mov dword ptr [ebx + 0x1c], 0x5f5e100
0x11c:     c7 43 20 00 00 00 00      	mov dword ptr [ebx + 0x20], 0
0x123:     c7 43 24 00 00 00 00      	mov dword ptr [ebx + 0x24], 0
0x12a:     75 05                     	jne 0x131 <function_fb+0x35>
0x12c:     83 c4 28                  	add esp, 0x28
0x12f:     5b                        	pop ebx
0x130:     c3                        	ret 
; data inside code section at 0x131 -- 0x132
0x131:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x132 -- 0x133
; data inside code section at 0x133 -- 0x140
0x133:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: CAddress at 0x140 -- 0x1e1
0x140:     83 ec 4c                  	sub esp, 0x4c
0x143:     89 5c 24 3c               	mov dword ptr [esp + 0x3c], ebx
0x147:     8b 44 24 50               	mov eax, dword ptr [esp + 0x50]
0x14b:     8b 5c 24 5c               	mov ebx, dword ptr [esp + 0x5c]
0x14f:     8b 4c 24 60               	mov ecx, dword ptr [esp + 0x60]
0x153:     89 6c 24 48               	mov dword ptr [esp + 0x48], ebp
0x157:     0f b7 54 24 64            	movzx edx, word ptr [esp + 0x64]
0x15c:     65 8b 2d 14 00 00 00      	mov ebp, dword ptr gs:[0x14]
0x163:     89 6c 24 2c               	mov dword ptr [esp + 0x2c], ebp
0x167:     31 ed                     	xor ebp, ebp
0x169:     89 74 24 40               	mov dword ptr [esp + 0x40], esi
0x16d:     8b 74 24 58               	mov esi, dword ptr [esp + 0x58]
0x171:     89 7c 24 44               	mov dword ptr [esp + 0x44], edi
0x175:     8b 7c 24 54               	mov edi, dword ptr [esp + 0x54]
0x179:     89 58 08                  	mov dword ptr [eax + 8], ebx
0x17c:     89 48 0c                  	mov dword ptr [eax + 0xc], ecx
0x17f:     89 5c 24 14               	mov dword ptr [esp + 0x14], ebx
0x183:     8b 5c 24 6c               	mov ebx, dword ptr [esp + 0x6c]
0x187:     89 4c 24 18               	mov dword ptr [esp + 0x18], ecx
0x18b:     8b 4c 24 68               	mov ecx, dword ptr [esp + 0x68]
0x18f:     89 38                     	mov dword ptr [eax], edi
0x191:     89 70 04                  	mov dword ptr [eax + 4], esi
0x194:     66 89 50 10               	mov word ptr [eax + 0x10], dx
0x198:     c7 40 1c 00 e1 f5 05      	mov dword ptr [eax + 0x1c], 0x5f5e100
0x19f:     c7 40 20 00 00 00 00      	mov dword ptr [eax + 0x20], 0
0x1a6:     c7 40 24 00 00 00 00      	mov dword ptr [eax + 0x24], 0
0x1ad:     89 48 14                  	mov dword ptr [eax + 0x14], ecx
0x1b0:     89 58 18                  	mov dword ptr [eax + 0x18], ebx
0x1b3:     8b 44 24 2c               	mov eax, dword ptr [esp + 0x2c]
0x1b7:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x1be:     89 7c 24 0c               	mov dword ptr [esp + 0xc], edi
0x1c2:     89 74 24 10               	mov dword ptr [esp + 0x10], esi
0x1c6:     66 89 54 24 1c            	mov word ptr [esp + 0x1c], dx
0x1cb:     75 14                     	jne 0x1e1 <CAddress+0xa0>
0x1cd:     8b 5c 24 3c               	mov ebx, dword ptr [esp + 0x3c]
0x1d1:     8b 74 24 40               	mov esi, dword ptr [esp + 0x40]
0x1d5:     8b 7c 24 44               	mov edi, dword ptr [esp + 0x44]
0x1d9:     8b 6c 24 48               	mov ebp, dword ptr [esp + 0x48]
0x1dd:     83 c4 4c                  	add esp, 0x4c
0x1e0:     c3                        	ret 
; data inside code section at 0x1e1 -- 0x1e2
0x1e1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e2 -- 0x1e3
; data inside code section at 0x1e3 -- 0x1f0
0x1e3:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZN8CAddress4InitEv at 0x1f0 -- 0x238
0x1f0:     83 ec 1c                  	sub esp, 0x1c
0x1f3:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0x1fa:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0x1fe:     31 d2                     	xor edx, edx
0x200:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0x204:     c7 40 14 01 00 00 00      	mov dword ptr [eax + 0x14], 1
0x20b:     c7 40 18 00 00 00 00      	mov dword ptr [eax + 0x18], 0
0x212:     c7 40 1c 00 e1 f5 05      	mov dword ptr [eax + 0x1c], 0x5f5e100
0x219:     c7 40 20 00 00 00 00      	mov dword ptr [eax + 0x20], 0
0x220:     c7 40 24 00 00 00 00      	mov dword ptr [eax + 0x24], 0
0x227:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0x22b:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x232:     75 04                     	jne 0x238 <_ZN8CAddress4InitEv+0x47>
0x234:     83 c4 1c                  	add esp, 0x1c
0x237:     c3                        	ret 
; data inside code section at 0x238 -- 0x239
0x238:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x239 -- 0x23a
; data inside code section at 0x23a -- 0x240
0x23a:     ff ff ff 90 66 90                                  |....f.          |
; function: CInv at 0x240 -- 0x2a3
0x240:     83 ec 1c                  	sub esp, 0x1c
0x243:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0x24a:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0x24e:     31 d2                     	xor edx, edx
0x250:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0x254:     c7 00 00 00 00 00         	mov dword ptr [eax], 0
0x25a:     c7 40 04 00 00 00 00      	mov dword ptr [eax + 4], 0
0x261:     c7 40 08 00 00 00 00      	mov dword ptr [eax + 8], 0
0x268:     c7 40 0c 00 00 00 00      	mov dword ptr [eax + 0xc], 0
0x26f:     c7 40 10 00 00 00 00      	mov dword ptr [eax + 0x10], 0
0x276:     c7 40 14 00 00 00 00      	mov dword ptr [eax + 0x14], 0
0x27d:     c7 40 18 00 00 00 00      	mov dword ptr [eax + 0x18], 0
0x284:     c7 40 1c 00 00 00 00      	mov dword ptr [eax + 0x1c], 0
0x28b:     c7 40 20 00 00 00 00      	mov dword ptr [eax + 0x20], 0
0x292:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0x296:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x29d:     75 04                     	jne 0x2a3 <CInv+0x62>
0x29f:     83 c4 1c                  	add esp, 0x1c
0x2a2:     c3                        	ret 
; data inside code section at 0x2a3 -- 0x2a4
0x2a3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a4 -- 0x2a5
; data inside code section at 0x2a5 -- 0x2b0
0x2a5:     ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: CInv at 0x2b0 -- 0x346
0x2b0:     83 ec 1c                  	sub esp, 0x1c
0x2b3:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0x2b7:     8b 54 24 28               	mov edx, dword ptr [esp + 0x28]
0x2bb:     65 8b 0d 14 00 00 00      	mov ecx, dword ptr gs:[0x14]
0x2c2:     89 4c 24 0c               	mov dword ptr [esp + 0xc], ecx
0x2c6:     31 c9                     	xor ecx, ecx
0x2c8:     8b 4c 24 24               	mov ecx, dword ptr [esp + 0x24]
0x2cc:     c7 40 04 00 00 00 00      	mov dword ptr [eax + 4], 0
0x2d3:     c7 40 08 00 00 00 00      	mov dword ptr [eax + 8], 0
0x2da:     c7 40 0c 00 00 00 00      	mov dword ptr [eax + 0xc], 0
0x2e1:     c7 40 10 00 00 00 00      	mov dword ptr [eax + 0x10], 0
0x2e8:     c7 40 14 00 00 00 00      	mov dword ptr [eax + 0x14], 0
0x2ef:     c7 40 18 00 00 00 00      	mov dword ptr [eax + 0x18], 0
0x2f6:     c7 40 1c 00 00 00 00      	mov dword ptr [eax + 0x1c], 0
0x2fd:     c7 40 20 00 00 00 00      	mov dword ptr [eax + 0x20], 0
0x304:     89 08                     	mov dword ptr [eax], ecx
0x306:     8b 0a                     	mov ecx, dword ptr [edx]
0x308:     89 48 04                  	mov dword ptr [eax + 4], ecx
0x30b:     8b 4a 04                  	mov ecx, dword ptr [edx + 4]
0x30e:     89 48 08                  	mov dword ptr [eax + 8], ecx
0x311:     8b 4a 08                  	mov ecx, dword ptr [edx + 8]
0x314:     89 48 0c                  	mov dword ptr [eax + 0xc], ecx
0x317:     8b 4a 0c                  	mov ecx, dword ptr [edx + 0xc]
0x31a:     89 48 10                  	mov dword ptr [eax + 0x10], ecx
0x31d:     8b 4a 10                  	mov ecx, dword ptr [edx + 0x10]
0x320:     89 48 14                  	mov dword ptr [eax + 0x14], ecx
0x323:     8b 4a 14                  	mov ecx, dword ptr [edx + 0x14]
0x326:     89 48 18                  	mov dword ptr [eax + 0x18], ecx
0x329:     8b 4a 18                  	mov ecx, dword ptr [edx + 0x18]
0x32c:     89 48 1c                  	mov dword ptr [eax + 0x1c], ecx
0x32f:     8b 52 1c                  	mov edx, dword ptr [edx + 0x1c]
0x332:     89 50 20                  	mov dword ptr [eax + 0x20], edx
0x335:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0x339:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x340:     75 04                     	jne 0x346 <CInv+0x95>
0x342:     83 c4 1c                  	add esp, 0x1c
0x345:     c3                        	ret 
; data inside code section at 0x346 -- 0x347
0x346:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x347 -- 0x348
; data inside code section at 0x348 -- 0x350
0x348:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: CInv at 0x350 -- 0x3c6
0x350:     83 ec 3c                  	sub esp, 0x3c
0x353:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x359:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x35d:     31 c0                     	xor eax, eax
0x35f:     89 74 24 30               	mov dword ptr [esp + 0x30], esi
0x363:     8b 74 24 40               	mov esi, dword ptr [esp + 0x40]
0x367:     89 7c 24 34               	mov dword ptr [esp + 0x34], edi
0x36b:     8b 7c 24 44               	mov edi, dword ptr [esp + 0x44]
0x36f:     89 6c 24 38               	mov dword ptr [esp + 0x38], ebp
0x373:     8b 6c 24 48               	mov ebp, dword ptr [esp + 0x48]
0x377:     89 5c 24 2c               	mov dword ptr [esp + 0x2c], ebx
0x37b:     bb 01 00 00 00            	mov ebx, 1
0x380:     c7 46 04 00 00 00 00      	mov dword ptr [esi + 4], 0
0x387:     c7 46 08 00 00 00 00      	mov dword ptr [esi + 8], 0
0x38e:     c7 46 0c 00 00 00 00      	mov dword ptr [esi + 0xc], 0
0x395:     c7 46 10 00 00 00 00      	mov dword ptr [esi + 0x10], 0
0x39c:     c7 46 14 00 00 00 00      	mov dword ptr [esi + 0x14], 0
0x3a3:     c7 46 18 00 00 00 00      	mov dword ptr [esi + 0x18], 0
0x3aa:     c7 46 1c 00 00 00 00      	mov dword ptr [esi + 0x1c], 0
0x3b1:     c7 46 20 00 00 00 00      	mov dword ptr [esi + 0x20], 0
0x3b8:     8b 04 9d 10 1d 00 00      	mov eax, dword ptr [ebx*4 + 0x1d10]
0x3bf:     89 3c 24                  	mov dword ptr [esp], edi
0x3c2:     89 44 24 04               	mov dword ptr [esp + 4], eax
; data inside code section at 0x3c6 -- 0x3c7
0x3c6:     e8                                                 |.               |
; dynamically linked function: _ZNKSs7compareEPKc at 0x3c7 -- 0x3c8
; data inside code section at 0x3c8 -- 0x3ca
0x3c8:     ff ff                                              |..              |
; function: function_3ca at 0x3ca -- 0x3d1
0x3ca:     ff 85 c0 74 69 83         	inc dword ptr [ebp - 0x7c968b40]
0x3d0:     c3                        	ret 
; data inside code section at 0x3d1 -- 0x403
0x3d1:     01 83 fb 04 75 e1 c7 04  24 08 00 00 00 8d 5c 24   |....u...$.....\$|
0x3e1:     18 e8 fc ff ff ff 89 c6  8b 07 c7 44 24 08 00 00   |...........D$...|
0x3f1:     00 00 c7 44 24 04 0c 16  00 00 89 1c 24 89 44 24   |...D$.......$.D$|
0x401:     0c e8                                              |..              |
; dynamically linked function: _Z14real_strprintfPKciz at 0x403 -- 0x404
; data inside code section at 0x404 -- 0x412
0x404:     ff ff ff 83 ec 04 89 5c  24 04 89 34 24 e8         |.......\$..4$.  |
; dynamically linked function: _ZNSt12out_of_rangeC1ERKSs at 0x412 -- 0x413
; data inside code section at 0x413 -- 0x41a
0x413:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x41a -- 0x41b
; data inside code section at 0x41b -- 0x422
0x41b:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt12out_of_rangeD1Ev at 0x422 -- 0x426
; data inside code section at 0x426 -- 0x42a
0x426:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTISt12out_of_range at 0x42a -- 0x431
; data inside code section at 0x431 -- 0x432
0x431:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x432 -- 0x433
; data inside code section at 0x433 -- 0x435
0x433:     ff ff                                              |..              |
; function: function_435 at 0x435 -- 0x438
0x435:     ff 66 90                  	jmp dword ptr [esi - 0x70]
; function: function_438 at 0x438 -- 0x48b
0x438:     89 1e                     	mov dword ptr [esi], ebx
0x43a:     8b 45 00                  	mov eax, dword ptr [ebp]
0x43d:     89 46 04                  	mov dword ptr [esi + 4], eax
0x440:     8b 45 04                  	mov eax, dword ptr [ebp + 4]
0x443:     89 46 08                  	mov dword ptr [esi + 8], eax
0x446:     8b 45 08                  	mov eax, dword ptr [ebp + 8]
0x449:     89 46 0c                  	mov dword ptr [esi + 0xc], eax
0x44c:     8b 45 0c                  	mov eax, dword ptr [ebp + 0xc]
0x44f:     89 46 10                  	mov dword ptr [esi + 0x10], eax
0x452:     8b 45 10                  	mov eax, dword ptr [ebp + 0x10]
0x455:     89 46 14                  	mov dword ptr [esi + 0x14], eax
0x458:     8b 45 14                  	mov eax, dword ptr [ebp + 0x14]
0x45b:     89 46 18                  	mov dword ptr [esi + 0x18], eax
0x45e:     8b 45 18                  	mov eax, dword ptr [ebp + 0x18]
0x461:     89 46 1c                  	mov dword ptr [esi + 0x1c], eax
0x464:     8b 45 1c                  	mov eax, dword ptr [ebp + 0x1c]
0x467:     89 46 20                  	mov dword ptr [esi + 0x20], eax
0x46a:     8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x46e:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x475:     75 14                     	jne 0x48b <function_438+0x52>
0x477:     8b 5c 24 2c               	mov ebx, dword ptr [esp + 0x2c]
0x47b:     8b 74 24 30               	mov esi, dword ptr [esp + 0x30]
0x47f:     8b 7c 24 34               	mov edi, dword ptr [esp + 0x34]
0x483:     8b 6c 24 38               	mov ebp, dword ptr [esp + 0x38]
0x487:     83 c4 3c                  	add esp, 0x3c
0x48a:     c3                        	ret 
; data inside code section at 0x48b -- 0x48c
0x48b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x48c -- 0x48d
; data inside code section at 0x48d -- 0x498
0x48d:     ff ff ff 89 c7 89 1c 24  89 fb e8                  |.......$...     |
; dynamically linked function: _ZNSsD1Ev at 0x498 -- 0x499
; data inside code section at 0x499 -- 0x49c
0x499:     ff ff ff                                           |...             |
; function: function_49c at 0x49c -- 0x49d
; data inside code section at 0x49d -- 0x4a0
0x49d:     34 24 e8                                           |4$.             |
; dynamically linked function: __cxa_free_exception at 0x4a0 -- 0x4a1
; data inside code section at 0x4a1 -- 0x4a4
0x4a1:     ff ff ff                                           |...             |
; function: function_4a4 at 0x4a4 -- 0x4b0
0x4a4:     89 1c 24                  	mov dword ptr [esp], ebx
0x4a7:     e8 fc ff ff ff            	call 0x4a8
0x4ac:     89 c3                     	mov ebx, eax
0x4ae:     eb ec                     	jmp 0x49c <function_49c>
; function: _ZltRK4CInvS1_ at 0x4b0 -- 0x592
0x4b0:     53                        	push ebx
0x4b1:     83 ec 58                  	sub esp, 0x58
0x4b4:     8b 4c 24 64               	mov ecx, dword ptr [esp + 0x64]
0x4b8:     8b 54 24 60               	mov edx, dword ptr [esp + 0x60]
0x4bc:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x4c2:     89 44 24 4c               	mov dword ptr [esp + 0x4c], eax
0x4c6:     31 c0                     	xor eax, eax
0x4c8:     b8 01 00 00 00            	mov eax, 1
0x4cd:     8b 19                     	mov ebx, dword ptr [ecx]
0x4cf:     39 1a                     	cmp dword ptr [edx], ebx
0x4d1:     7c 07                     	jl 0x4da <_ZltRK4CInvS1_+0x2a>
0x4d3:     b8 00 00 00 00            	mov eax, 0
0x4d8:     74 16                     	je 0x4f0 <_ZltRK4CInvS1_+0x40>
0x4da:     8b 5c 24 4c               	mov ebx, dword ptr [esp + 0x4c]
0x4de:     65 33 1d 14 00 00 00      	xor ebx, dword ptr gs:[0x14]
0x4e5:     0f 85 a7 00 00 00         	jne 0x592 <_ZltRK4CInvS1_+0xdd>
0x4eb:     83 c4 58                  	add esp, 0x58
0x4ee:     5b                        	pop ebx
0x4ef:     c3                        	ret 
0x4f0:     8b 41 04                  	mov eax, dword ptr [ecx + 4]
0x4f3:     89 44 24 2c               	mov dword ptr [esp + 0x2c], eax
0x4f7:     8b 41 08                  	mov eax, dword ptr [ecx + 8]
0x4fa:     89 44 24 30               	mov dword ptr [esp + 0x30], eax
0x4fe:     8b 41 0c                  	mov eax, dword ptr [ecx + 0xc]
0x501:     89 44 24 34               	mov dword ptr [esp + 0x34], eax
0x505:     8b 41 10                  	mov eax, dword ptr [ecx + 0x10]
0x508:     89 44 24 38               	mov dword ptr [esp + 0x38], eax
0x50c:     8b 41 14                  	mov eax, dword ptr [ecx + 0x14]
0x50f:     89 44 24 3c               	mov dword ptr [esp + 0x3c], eax
0x513:     8b 41 18                  	mov eax, dword ptr [ecx + 0x18]
0x516:     89 44 24 40               	mov dword ptr [esp + 0x40], eax
0x51a:     8b 41 1c                  	mov eax, dword ptr [ecx + 0x1c]
0x51d:     89 44 24 44               	mov dword ptr [esp + 0x44], eax
0x521:     8b 41 20                  	mov eax, dword ptr [ecx + 0x20]
0x524:     89 44 24 48               	mov dword ptr [esp + 0x48], eax
0x528:     8b 42 04                  	mov eax, dword ptr [edx + 4]
0x52b:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0x52f:     8b 42 08                  	mov eax, dword ptr [edx + 8]
0x532:     89 44 24 10               	mov dword ptr [esp + 0x10], eax
0x536:     8b 42 0c                  	mov eax, dword ptr [edx + 0xc]
0x539:     89 44 24 14               	mov dword ptr [esp + 0x14], eax
0x53d:     8b 42 10                  	mov eax, dword ptr [edx + 0x10]
0x540:     89 44 24 18               	mov dword ptr [esp + 0x18], eax
0x544:     8b 42 14                  	mov eax, dword ptr [edx + 0x14]
0x547:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x54b:     8b 42 18                  	mov eax, dword ptr [edx + 0x18]
0x54e:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0x552:     8b 42 1c                  	mov eax, dword ptr [edx + 0x1c]
0x555:     89 44 24 24               	mov dword ptr [esp + 0x24], eax
0x559:     8b 42 20                  	mov eax, dword ptr [edx + 0x20]
0x55c:     89 44 24 28               	mov dword ptr [esp + 0x28], eax
0x560:     b8 07 00 00 00            	mov eax, 7
0x565:     8d 76 00                  	lea esi, [esi]
0x568:     8b 54 84 2c               	mov edx, dword ptr [esp + eax*4 + 0x2c]
0x56c:     39 54 84 0c               	cmp dword ptr [esp + eax*4 + 0xc], edx
0x570:     72 16                     	jb 0x588 <_ZltRK4CInvS1_+0xd8>
0x572:     77 08                     	ja 0x57c <_ZltRK4CInvS1_+0xcc>
0x574:     83 e8 01                  	sub eax, 1
0x577:     83 f8 ff                  	cmp eax, -1
0x57a:     75 ec                     	jne 0x568 <_ZltRK4CInvS1_+0xb8>
0x57c:     31 c0                     	xor eax, eax
0x57e:     66 90                     	nop 
0x580:     e9 55 ff ff ff            	jmp 0x4da <_ZltRK4CInvS1_+0x2a>
; data inside code section at 0x585 -- 0x588
0x585:     8d 76 00                                           |.v.             |
0x588:     b8 01 00 00 00            	mov eax, 1
0x58d:     e9 48 ff ff ff            	jmp 0x4da <_ZltRK4CInvS1_+0x2a>
; data inside code section at 0x592 -- 0x593
0x592:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x593 -- 0x594
; data inside code section at 0x594 -- 0x5a0
0x594:     ff ff ff 90 90 8d b4 26  00 00 00 00               |.......&....    |
; function: _ZNK4CInv11IsKnownTypeEv at 0x5a0 -- 0x5cf
0x5a0:     83 ec 1c                  	sub esp, 0x1c
0x5a3:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x5a9:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0x5ad:     31 c0                     	xor eax, eax
0x5af:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0x5b3:     8b 00                     	mov eax, dword ptr [eax]
0x5b5:     83 e8 01                  	sub eax, 1
0x5b8:     83 f8 02                  	cmp eax, 2
0x5bb:     0f 96 c0                  	setbe al
0x5be:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0x5c2:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x5c9:     75 04                     	jne 0x5cf <_ZNK4CInv11IsKnownTypeEv+0x2e>
0x5cb:     83 c4 1c                  	add esp, 0x1c
0x5ce:     c3                        	ret 
; data inside code section at 0x5cf -- 0x5d0
0x5cf:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x5d0 -- 0x5d1
; data inside code section at 0x5d1 -- 0x5e0
0x5d1:     ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZNK4CInv10GetCommandEv at 0x5e0 -- 0x62d
0x5e0:     83 ec 2c                  	sub esp, 0x2c
0x5e3:     89 7c 24 28               	mov dword ptr [esp + 0x28], edi
0x5e7:     8b 7c 24 30               	mov edi, dword ptr [esp + 0x30]
0x5eb:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x5f1:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x5f5:     31 c0                     	xor eax, eax
0x5f7:     89 5c 24 20               	mov dword ptr [esp + 0x20], ebx
0x5fb:     89 74 24 24               	mov dword ptr [esp + 0x24], esi
0x5ff:     8b 07                     	mov eax, dword ptr [edi]
0x601:     8d 50 ff                  	lea edx, [eax - 1]
0x604:     83 fa 02                  	cmp edx, 2
0x607:     77 29                     	ja 0x632 <function_632>
0x609:     8b 54 24 1c               	mov edx, dword ptr [esp + 0x1c]
0x60d:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x614:     8b 04 85 10 1d 00 00      	mov eax, dword ptr [eax*4 + 0x1d10]
0x61b:     75 10                     	jne 0x62d <_ZNK4CInv10GetCommandEv+0x4c>
0x61d:     8b 5c 24 20               	mov ebx, dword ptr [esp + 0x20]
0x621:     8b 74 24 24               	mov esi, dword ptr [esp + 0x24]
0x625:     8b 7c 24 28               	mov edi, dword ptr [esp + 0x28]
0x629:     83 c4 2c                  	add esp, 0x2c
0x62c:     c3                        	ret 
; data inside code section at 0x62d -- 0x62e
0x62d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x62e -- 0x62f
; data inside code section at 0x62f -- 0x632
0x62f:     ff ff ff                                           |...             |
; function: function_632 at 0x632 -- 0x63d
0x632:     c7 04 24 08 00 00 00      	mov dword ptr [esp], 8
0x639:     8d 5c 24 18               	lea ebx, [esp + 0x18]
; data inside code section at 0x63d -- 0x63e
0x63d:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x63e -- 0x63f
; data inside code section at 0x63f -- 0x65e
0x63f:     ff ff ff 89 c6 8b 07 c7  44 24 08 00 00 00 00 c7   |........D$......|
0x64f:     44 24 04 3c 16 00 00 89  1c 24 89 44 24 0c e8      |D$.<.....$.D$.. |
; dynamically linked function: _Z14real_strprintfPKciz at 0x65e -- 0x65f
; data inside code section at 0x65f -- 0x66b
0x65f:     ff ff ff 51 89 5c 24 04  89 34 24 e8               |...Q.\$..4$.    |
; dynamically linked function: _ZNSt12out_of_rangeC1ERKSs at 0x66b -- 0x66c
; data inside code section at 0x66c -- 0x67b
0x66c:     ff ff ff 89 1c 24 e8 fc  ff ff ff c7 44 24 08      |.....$......D$. |
; dynamically linked function: _ZNSt12out_of_rangeD1Ev at 0x67b -- 0x67f
; data inside code section at 0x67f -- 0x683
0x67f:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTISt12out_of_range at 0x683 -- 0x68a
; data inside code section at 0x68a -- 0x68b
0x68a:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x68b -- 0x68c
; data inside code section at 0x68c -- 0x690
0x68c:     ff ff ff 89                                        |....            |
; function: function_690 at 0x690 -- 0x691
0x690:     c3                        	ret 
; function: function_691 at 0x691 -- 0x692
; data inside code section at 0x692 -- 0x695
0x692:     34 24 e8                                           |4$.             |
; dynamically linked function: __cxa_free_exception at 0x695 -- 0x696
; data inside code section at 0x696 -- 0x69d
0x696:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x69d -- 0x69e
; data inside code section at 0x69e -- 0x6a9
0x69e:     ff ff ff 89 c7 89 1c 24  89 fb e8                  |.......$...     |
; dynamically linked function: _ZNSsD1Ev at 0x6a9 -- 0x6aa
; data inside code section at 0x6aa -- 0x6ad
0x6aa:     ff ff ff                                           |...             |
; function: function_6ad at 0x6ad -- 0x6af
0x6ad:     eb e2                     	jmp 0x691 <function_691>
; data inside code section at 0x6af -- 0x6b0
0x6af:     90                                                 |.               |
; function: _ZNK14CMessageHeader10GetCommandEv at 0x6b0 -- 0x71e
0x6b0:     83 ec 2c                  	sub esp, 0x2c
0x6b3:     89 74 24 24               	mov dword ptr [esp + 0x24], esi
0x6b7:     8b 74 24 34               	mov esi, dword ptr [esp + 0x34]
0x6bb:     89 5c 24 20               	mov dword ptr [esp + 0x20], ebx
0x6bf:     8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x6c3:     89 7c 24 28               	mov dword ptr [esp + 0x28], edi
0x6c7:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x6cd:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x6d1:     31 c0                     	xor eax, eax
0x6d3:     80 7e 0f 00               	cmp byte ptr [esi + 0xf], 0
0x6d7:     74 3f                     	je 0x718 <_ZNK14CMessageHeader10GetCommandEv+0x68>
0x6d9:     8d 44 24 1b               	lea eax, [esp + 0x1b]
0x6dd:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0x6e1:     8d 46 10                  	lea eax, [esi + 0x10]
0x6e4:     83 c6 04                  	add esi, 4
0x6e7:     89 44 24 08               	mov dword ptr [esp + 8], eax
0x6eb:     89 74 24 04               	mov dword ptr [esp + 4], esi
0x6ef:     89 1c 24                  	mov dword ptr [esp], ebx
0x6f2:     e8 b9 12 00 00            	call 0x19b0 <_ZNSsC1IPKcEET_S2_RKSaIcE>
0x6f7:     8b 54 24 1c               	mov edx, dword ptr [esp + 0x1c]
0x6fb:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x702:     89 d8                     	mov eax, ebx
0x704:     75 3b                     	jne 0x741 <function_741>
0x706:     8b 5c 24 20               	mov ebx, dword ptr [esp + 0x20]
0x70a:     8b 74 24 24               	mov esi, dword ptr [esp + 0x24]
0x70e:     8b 7c 24 28               	mov edi, dword ptr [esp + 0x28]
0x712:     83 c4 2c                  	add esp, 0x2c
0x715:     c2 04 00                  	ret 4
0x718:     8d 7e 04                  	lea edi, [esi + 4]
0x71b:     89 3c 24                  	mov dword ptr [esp], edi
; data inside code section at 0x71e -- 0x71f
0x71e:     e8                                                 |.               |
; dynamically linked function: strlen at 0x71f -- 0x720
; data inside code section at 0x720 -- 0x722
0x720:     ff ff                                              |..              |
; function: function_722 at 0x722 -- 0x741
0x722:     ff 8d 54 24 1a 89         	dec dword ptr [ebp - 0x76e5dbac]
0x728:     54                        	push esp
0x729:     24 0c                     	and al, 0xc
0x72b:     89 7c 24 04               	mov dword ptr [esp + 4], edi
0x72f:     89 1c 24                  	mov dword ptr [esp], ebx
0x732:     8d 44 06 04               	lea eax, [esi + eax + 4]
0x736:     89 44 24 08               	mov dword ptr [esp + 8], eax
0x73a:     e8 71 12 00 00            	call 0x19b0 <_ZNSsC1IPKcEET_S2_RKSaIcE>
0x73f:     eb b6                     	jmp 0x6f7
; function: function_741 at 0x741 -- 0x742
; dynamically linked function: __stack_chk_fail at 0x742 -- 0x743
; data inside code section at 0x743 -- 0x750
0x743:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _ZNK14CMessageHeader7IsValidEv at 0x750 -- 0x766
0x750:     57                        	push edi
0x751:     56                        	push esi
0x752:     53                        	push ebx
0x753:     83 ec 30                  	sub esp, 0x30
0x756:     8b 74 24 40               	mov esi, dword ptr [esp + 0x40]
0x75a:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x760:     89 44 24 2c               	mov dword ptr [esp + 0x2c], eax
0x764:     31 c0                     	xor eax, eax
; data inside code section at 0x766 -- 0x767
0x766:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x767 -- 0x768
; data inside code section at 0x768 -- 0x77e
0x768:     ff ff ff c7 44 24 08 04  00 00 00 89 34 24 83 c0   |....D$......4$..|
0x778:     24 89 44 24 04 e8                                  |$.D$..          |
; dynamically linked function: memcmp at 0x77e -- 0x77f
; data inside code section at 0x77f -- 0x781
0x77f:     ff ff                                              |..              |
; function: function_781 at 0x781 -- 0x7fe
0x781:     ff 85 c0 0f 85 ce         	inc dword ptr [ebp - 0x317af040]
0x787:     00 00                     	add byte ptr [eax], al
0x789:     00 8d 46 04 8d 56         	add byte ptr [ebp + 0x568d0446], cl
0x78f:     10 0f                     	adc byte ptr [edi], cl
0x791:     b6 08                     	mov dh, 8
0x793:     84 c9                     	test cl, cl
0x795:     0f 85 ad 00 00 00         	jne 0x848 <function_848>
0x79b:     39 d0                     	cmp eax, edx
0x79d:     72 17                     	jb 0x7b6 <function_781+0x35>
0x79f:     eb 1c                     	jmp 0x7bd <function_781+0x3c>
; data inside code section at 0x7a1 -- 0x7a8
0x7a1:     8d b4 26 00 00 00 00                               |..&....         |
0x7a8:     80 38 00                  	cmp byte ptr [eax], 0
0x7ab:     90                        	nop 
0x7ac:     8d 74 26 00               	lea esi, [esi]
0x7b0:     0f 85 a2 00 00 00         	jne 0x858 <function_858>
0x7b6:     83 c0 01                  	add eax, 1
0x7b9:     39 d0                     	cmp eax, edx
0x7bb:     75 eb                     	jne 0x7a8 <function_781+0x27>
0x7bd:     83 c0 01                  	add eax, 1
0x7c0:     39 d0                     	cmp eax, edx
0x7c2:     72 cc                     	jb 0x790
0x7c4:     8b 7e 10                  	mov edi, dword ptr [esi + 0x10]
0x7c7:     b8 01 00 00 00            	mov eax, 1
0x7cc:     81 ff 00 00 00 02         	cmp edi, 0x2000000
0x7d2:     0f 86 82 00 00 00         	jbe 0x85a <function_85a>
0x7d8:     8d 5c 24 24               	lea ebx, [esp + 0x24]
0x7dc:     89 74 24 04               	mov dword ptr [esp + 4], esi
0x7e0:     89 1c 24                  	mov dword ptr [esp], ebx
0x7e3:     e8 c8 fe ff ff            	call 0x6b0 <_ZNK14CMessageHeader10GetCommandEv>
0x7e8:     83 ec 04                  	sub esp, 4
0x7eb:     8b 44 24 24               	mov eax, dword ptr [esp + 0x24]
0x7ef:     89 7c 24 08               	mov dword ptr [esp + 8], edi
0x7f3:     c7 04 24 cc 16 00 00      	mov dword ptr [esp], 0x16cc ; "CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\n"
0x7fa:     89 44 24 04               	mov dword ptr [esp + 4], eax
; data inside code section at 0x7fe -- 0x7ff
0x7fe:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x7ff -- 0x800
; data inside code section at 0x800 -- 0x813
0x800:     ff ff ff 8b 44 24 24 8d  50 f4 81 fa 00 00 00 00   |....D$$.P.......|
0x810:     74 46 b9                                           |tF.             |
; dynamically linked function: pthread_cancel at 0x813 -- 0x83a
; data inside code section at 0x83a -- 0x83b
0x83a:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x83b -- 0x83c
; data inside code section at 0x83c -- 0x83e
0x83c:     ff ff                                              |..              |
; function: function_83e at 0x83e -- 0x846
0x83e:     ff 0f                     	dec dword ptr [edi]
0x840:     b6 44                     	mov dh, 0x44
0x842:     24 1c                     	and al, 0x1c
0x844:     eb 14                     	jmp 0x85a <function_85a>
; data inside code section at 0x846 -- 0x848
0x846:     66 90                                              |f.              |
; function: function_848 at 0x848 -- 0x858
0x848:     83 e9 20                  	sub ecx, 0x20
0x84b:     80 f9 5e                  	cmp cl, 0x5e
0x84e:     0f 86 69 ff ff ff         	jbe 0x7bd
0x854:     8d 74 26 00               	lea esi, [esi]
; function: function_858 at 0x858 -- 0x85a
0x858:     31 c0                     	xor eax, eax
; function: function_85a at 0x85a -- 0x86e
0x85a:     8b 54 24 2c               	mov edx, dword ptr [esp + 0x2c]
0x85e:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x865:     75 07                     	jne 0x86e <function_85a+0x13>
0x867:     83 c4 30                  	add esp, 0x30
0x86a:     5b                        	pop ebx
0x86b:     5e                        	pop esi
0x86c:     5f                        	pop edi
0x86d:     c3                        	ret 
; data inside code section at 0x86e -- 0x86f
0x86e:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x86f -- 0x870
; data inside code section at 0x870 -- 0x873
0x870:     ff ff ff                                           |...             |
; function: function_873 at 0x873 -- 0x87e
0x873:     8b 48 fc                  	mov ecx, dword ptr [eax - 4]
0x876:     8d 59 ff                  	lea ebx, [ecx - 1]
0x879:     89 58 fc                  	mov dword ptr [eax - 4], ebx
0x87c:     eb a7                     	jmp 0x825
; data inside code section at 0x87e -- 0x890
0x87e:     89 c6 89 1c 24 e8 fc ff  ff ff 89 34 24 e8 fc ff   |....$......4$...|
0x88e:     ff ff                                              |..              |
; function: _ZNK4CInv8ToStringEv at 0x890 -- 0x8ea
0x890:     55                        	push ebp
0x891:     57                        	push edi
0x892:     56                        	push esi
0x893:     be 1f 00 00 00            	mov esi, 0x1f
0x898:     53                        	push ebx
0x899:     83 ec 7c                  	sub esp, 0x7c
0x89c:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x8a2:     89 44 24 6c               	mov dword ptr [esp + 0x6c], eax
0x8a6:     31 c0                     	xor eax, eax
0x8a8:     8b 9c 24 90 00 00 00      	mov ebx, dword ptr [esp + 0x90]
0x8af:     8d 7c 24 2b               	lea edi, [esp + 0x2b]
0x8b3:     8b ac 24 94 00 00 00      	mov ebp, dword ptr [esp + 0x94]
0x8ba:     8d b6 00 00 00 00         	lea esi, [esi]
0x8c0:     0f b6 44 35 04            	movzx eax, byte ptr [ebp + esi + 4]
0x8c5:     83 ee 01                  	sub esi, 1
0x8c8:     89 3c 24                  	mov dword ptr [esp], edi
0x8cb:     83 c7 02                  	add edi, 2
0x8ce:     c7 44 24 0c 02 12 00 00   	mov dword ptr [esp + 0xc], 0x1202 ; "%02x"
0x8d6:     c7 44 24 08 ff ff ff ff   	mov dword ptr [esp + 8], 0xffffffff
0x8de:     89 44 24 10               	mov dword ptr [esp + 0x10], eax
0x8e2:     c7 44 24 04 01 00 00 00   	mov dword ptr [esp + 4], 1
; data inside code section at 0x8ea -- 0x8eb
0x8ea:     e8                                                 |.               |
; dynamically linked function: __sprintf_chk at 0x8eb -- 0x8ec
; data inside code section at 0x8ec -- 0x956
0x8ec:     ff ff ff 83 fe ff 75 cc  8d 44 24 29 89 44 24 0c   |......u..D$).D$.|
0x8fc:     8d 54 24 2b 8d 44 24 6b  8d 74 24 24 89 44 24 08   |.T$+.D$k.t$$.D$.|
0x90c:     89 54 24 04 89 34 24 e8  98 11 00 00 8b 7c 24 24   |.T$..4$......|$$|
0x91c:     89 2c 24 e8 bc fc ff ff  89 7c 24 10 89 44 24 0c   |.,$......|$..D$.|
0x92c:     c7 44 24 08 00 00 00 00  c7 44 24 04 07 12 00 00   |.D$......D$.....|
0x93c:     89 1c 24 e8 fc ff ff ff  83 ec 04 8b 44 24 24 8d   |..$.........D$$.|
0x94c:     50 f4 81 fa 00 00 00 00  75 30                     |P.......u0      |
; function: function_956 at 0x956 -- 0x96f
0x956:     8b 54 24 6c               	mov edx, dword ptr [esp + 0x6c]
0x95a:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x961:     89 d8                     	mov eax, ebx
0x963:     75 1c                     	jne 0x981 <function_981>
0x965:     83 c4 7c                  	add esp, 0x7c
0x968:     5b                        	pop ebx
0x969:     5e                        	pop esi
0x96a:     5f                        	pop edi
0x96b:     5d                        	pop ebp
0x96c:     c2 04 00                  	ret 4
; data inside code section at 0x96f -- 0x970
0x96f:     89                                                 |.               |
; function: function_970 at 0x970 -- 0x971
0x970:     c3                        	ret 
; data inside code section at 0x971 -- 0x975
0x971:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x975 -- 0x976
; data inside code section at 0x976 -- 0x97d
0x976:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x97d -- 0x97e
; data inside code section at 0x97e -- 0x981
0x97e:     ff ff ff                                           |...             |
; function: function_981 at 0x981 -- 0x982
; dynamically linked function: __stack_chk_fail at 0x982 -- 0x983
; data inside code section at 0x983 -- 0x987
0x983:     ff ff ff b9                                        |....            |
; dynamically linked function: pthread_cancel at 0x987 -- 0x9a8
; data inside code section at 0x9a8 -- 0x9a9
0x9a8:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x9a9 -- 0x9aa
; data inside code section at 0x9aa -- 0x9ad
0x9aa:     ff ff ff                                           |...             |
; function: function_9ad at 0x9ad -- 0x9af
0x9ad:     eb a7                     	jmp 0x956 <function_956>
; function: function_9af at 0x9af -- 0x9ba
0x9af:     8b 48 fc                  	mov ecx, dword ptr [eax - 4]
0x9b2:     8d 71 ff                  	lea esi, [ecx - 1]
0x9b5:     89 70 fc                  	mov dword ptr [eax - 4], esi
0x9b8:     eb df                     	jmp 0x999
; data inside code section at 0x9ba -- 0x9c0
0x9ba:     8d b6 00 00 00 00                                  |......          |
; function: _ZNK4CInv5printEv at 0x9c0 -- 0x9f6
0x9c0:     53                        	push ebx
0x9c1:     83 ec 38                  	sub esp, 0x38
0x9c4:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x9ca:     89 44 24 2c               	mov dword ptr [esp + 0x2c], eax
0x9ce:     31 c0                     	xor eax, eax
0x9d0:     8b 44 24 40               	mov eax, dword ptr [esp + 0x40]
0x9d4:     8d 5c 24 24               	lea ebx, [esp + 0x24]
0x9d8:     89 1c 24                  	mov dword ptr [esp], ebx
0x9db:     89 44 24 04               	mov dword ptr [esp + 4], eax
0x9df:     e8 ac fe ff ff            	call 0x890 <_ZNK4CInv8ToStringEv>
0x9e4:     83 ec 04                  	sub esp, 4
0x9e7:     8b 44 24 24               	mov eax, dword ptr [esp + 0x24]
0x9eb:     c7 04 24 0d 12 00 00      	mov dword ptr [esp], 0x120d ; "CInv(%s)\n"
0x9f2:     89 44 24 04               	mov dword ptr [esp + 4], eax
; data inside code section at 0x9f6 -- 0x9f7
0x9f6:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9f7 -- 0x9f8
; data inside code section at 0x9f8 -- 0xa0a
0x9f8:     ff ff ff 8b 44 24 24 8d  50 f4 81 fa 00 00 00 00   |....D$$.P.......|
0xa08:     75 12                                              |u.              |
; function: function_a0a at 0xa0a -- 0xa1c
0xa0a:     8b 44 24 2c               	mov eax, dword ptr [esp + 0x2c]
0xa0e:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xa15:     75 2c                     	jne 0xa43 <function_a43>
0xa17:     83 c4 38                  	add esp, 0x38
0xa1a:     5b                        	pop ebx
0xa1b:     c3                        	ret 
; data inside code section at 0xa1c -- 0xa1d
0xa1c:     b9                                                 |.               |
; dynamically linked function: pthread_cancel at 0xa1d -- 0xa3c
; data inside code section at 0xa3c -- 0xa3d
0xa3c:     e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0xa3d -- 0xa3e
; data inside code section at 0xa3e -- 0xa41
0xa3e:     ff ff ff                                           |...             |
; function: function_a41 at 0xa41 -- 0xa43
0xa41:     eb c7                     	jmp 0xa0a <function_a0a>
; function: function_a43 at 0xa43 -- 0xa44
; dynamically linked function: __stack_chk_fail at 0xa44 -- 0xa45
; data inside code section at 0xa45 -- 0xa50
0xa45:     ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xa50 -- 0xa51
; data inside code section at 0xa51 -- 0xa5c
0xa51:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0xa5c -- 0xa5d
; data inside code section at 0xa5d -- 0xa60
0xa5d:     ff ff ff                                           |...             |
; function: function_a60 at 0xa60 -- 0xa6b
0xa60:     8b 48 fc                  	mov ecx, dword ptr [eax - 4]
0xa63:     8d 59 ff                  	lea ebx, [ecx - 1]
0xa66:     89 58 fc                  	mov dword ptr [eax - 4], ebx
0xa69:     eb c2                     	jmp 0xa2d
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0xa70 -- 0xa9a
0xa70:     83 ec 1c                  	sub esp, 0x1c
0xa73:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xa79:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xa7d:     31 c0                     	xor eax, eax
0xa7f:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xa83:     c7 00 20 1e 00 00         	mov dword ptr [eax], 0x1e20
0xa89:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xa8d:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xa94:     75 04                     	jne 0xa9a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0xa96:     83 c4 1c                  	add esp, 0x1c
0xa99:     c3                        	ret 
; data inside code section at 0xa9a -- 0xa9b
0xa9a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa9b -- 0xa9c
; data inside code section at 0xa9c -- 0xa9f
0xa9c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0xaa0 -- 0xaca
0xaa0:     83 ec 1c                  	sub esp, 0x1c
0xaa3:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xaa9:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xaad:     31 c0                     	xor eax, eax
0xaaf:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xab3:     c7 00 80 1e 00 00         	mov dword ptr [eax], 0x1e80
0xab9:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xabd:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xac4:     75 04                     	jne 0xaca <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0xac6:     83 c4 1c                  	add esp, 0x1c
0xac9:     c3                        	ret 
; data inside code section at 0xaca -- 0xacb
0xaca:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xacb -- 0xacc
; data inside code section at 0xacc -- 0xacf
0xacc:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0xad0 -- 0xb20
0xad0:     83 ec 1c                  	sub esp, 0x1c
0xad3:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xad7:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xade:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xae2:     31 d2                     	xor edx, edx
0xae4:     85 c0                     	test eax, eax
0xae6:     74 20                     	je 0xb08 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0xae8:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xaec:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xaf3:     75 24                     	jne 0xb19 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0xaf5:     8b 10                     	mov edx, dword ptr [eax]
0xaf7:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xafb:     8b 42 04                  	mov eax, dword ptr [edx + 4]
0xafe:     83 c4 1c                  	add esp, 0x1c
0xb01:     ff e0                     	jmp eax
; data inside code section at 0xb03 -- 0xb08
0xb03:     90 8d 74 26 00                                     |..t&.           |
0xb08:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xb0c:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xb13:     75 04                     	jne 0xb19 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0xb15:     83 c4 1c                  	add esp, 0x1c
0xb18:     c3                        	ret 
0xb19:     8d b4 26 00 00 00 00      	lea esi, [esi]
; data inside code section at 0xb20 -- 0xb21
0xb20:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb21 -- 0xb22
; data inside code section at 0xb22 -- 0xb25
0xb22:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0xb30 -- 0xb5a
0xb30:     83 ec 1c                  	sub esp, 0x1c
0xb33:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xb39:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xb3d:     31 c0                     	xor eax, eax
0xb3f:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xb43:     c7 00 d8 1c 00 00         	mov dword ptr [eax], 0x1cd8
0xb49:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xb4d:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xb54:     75 04                     	jne 0xb5a <_ZN5boost6system14error_categoryD1Ev+0x29>
0xb56:     83 c4 1c                  	add esp, 0x1c
0xb59:     c3                        	ret 
; data inside code section at 0xb5a -- 0xb5b
0xb5a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb5b -- 0xb5c
; data inside code section at 0xb5c -- 0xb5f
0xb5c:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0xb60 -- 0xb94
0xb60:     83 ec 1c                  	sub esp, 0x1c
0xb63:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xb67:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xb6e:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xb72:     31 d2                     	xor edx, edx
0xb74:     8b 54 24 28               	mov edx, dword ptr [esp + 0x28]
0xb78:     89 10                     	mov dword ptr [eax], edx
0xb7a:     8b 54 24 24               	mov edx, dword ptr [esp + 0x24]
0xb7e:     89 50 04                  	mov dword ptr [eax + 4], edx
0xb81:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xb85:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xb8c:     75 06                     	jne 0xb94 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0xb8e:     83 c4 1c                  	add esp, 0x1c
0xb91:     c2 04 00                  	ret 4
; data inside code section at 0xb94 -- 0xb95
0xb94:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb95 -- 0xb96
; data inside code section at 0xb96 -- 0xb99
0xb96:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0xba0 -- 0xbff
0xba0:     56                        	push esi
0xba1:     53                        	push ebx
0xba2:     83 ec 34                  	sub esp, 0x34
0xba5:     8b 44 24 40               	mov eax, dword ptr [esp + 0x40]
0xba9:     8d 4c 24 18               	lea ecx, [esp + 0x18]
0xbad:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xbb4:     89 54 24 2c               	mov dword ptr [esp + 0x2c], edx
0xbb8:     31 d2                     	xor edx, edx
0xbba:     8b 74 24 44               	mov esi, dword ptr [esp + 0x44]
0xbbe:     8b 5c 24 48               	mov ebx, dword ptr [esp + 0x48]
0xbc2:     8b 10                     	mov edx, dword ptr [eax]
0xbc4:     89 44 24 04               	mov dword ptr [esp + 4], eax
0xbc8:     89 0c 24                  	mov dword ptr [esp], ecx
0xbcb:     89 74 24 08               	mov dword ptr [esp + 8], esi
0xbcf:     ff 52 10                  	call dword ptr [edx + 0x10]
0xbd2:     31 c0                     	xor eax, eax
0xbd4:     83 ec 04                  	sub esp, 4
0xbd7:     8b 4c 24 1c               	mov ecx, dword ptr [esp + 0x1c]
0xbdb:     39 4b 04                  	cmp dword ptr [ebx + 4], ecx
0xbde:     8b 54 24 18               	mov edx, dword ptr [esp + 0x18]
0xbe2:     74 14                     	je 0xbf8 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0xbe4:     8b 54 24 2c               	mov edx, dword ptr [esp + 0x2c]
0xbe8:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xbef:     75 0e                     	jne 0xbff <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5d>
0xbf1:     83 c4 34                  	add esp, 0x34
0xbf4:     5b                        	pop ebx
0xbf5:     5e                        	pop esi
0xbf6:     c3                        	ret 
; data inside code section at 0xbf7 -- 0xbf8
0xbf7:     90                                                 |.               |
0xbf8:     39 13                     	cmp dword ptr [ebx], edx
0xbfa:     0f 94 c0                  	sete al
0xbfd:     eb e5                     	jmp 0xbe4 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
; data inside code section at 0xbff -- 0xc00
0xbff:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc00 -- 0xc01
; data inside code section at 0xc01 -- 0xc04
0xc01:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0xc10 -- 0xc4f
0xc10:     53                        	push ebx
0xc11:     83 ec 18                  	sub esp, 0x18
0xc14:     8b 54 24 24               	mov edx, dword ptr [esp + 0x24]
0xc18:     8b 5c 24 20               	mov ebx, dword ptr [esp + 0x20]
0xc1c:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xc22:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xc26:     31 c0                     	xor eax, eax
0xc28:     8b 4c 24 28               	mov ecx, dword ptr [esp + 0x28]
0xc2c:     39 5a 04                  	cmp dword ptr [edx + 4], ebx
0xc2f:     74 17                     	je 0xc48 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0xc31:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xc35:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xc3c:     75 11                     	jne 0xc4f <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0xc3e:     83 c4 18                  	add esp, 0x18
0xc41:     5b                        	pop ebx
0xc42:     c3                        	ret 
; data inside code section at 0xc43 -- 0xc48
0xc43:     90 8d 74 26 00                                     |..t&.           |
0xc48:     39 0a                     	cmp dword ptr [edx], ecx
0xc4a:     0f 94 c0                  	sete al
0xc4d:     eb e2                     	jmp 0xc31 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0xc4f -- 0xc50
0xc4f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc50 -- 0xc51
; data inside code section at 0xc51 -- 0xc54
0xc51:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0xc60 -- 0xc8a
0xc60:     83 ec 1c                  	sub esp, 0x1c
0xc63:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xc69:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xc6d:     31 c0                     	xor eax, eax
0xc6f:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xc73:     c7 00 80 1e 00 00         	mov dword ptr [eax], 0x1e80
0xc79:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xc7d:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xc84:     75 04                     	jne 0xc8a <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0xc86:     83 c4 1c                  	add esp, 0x1c
0xc89:     c3                        	ret 
; data inside code section at 0xc8a -- 0xc8b
0xc8a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc8b -- 0xc8c
; data inside code section at 0xc8c -- 0xc8f
0xc8c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0xc90 -- 0xce0
0xc90:     83 ec 1c                  	sub esp, 0x1c
0xc93:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xc99:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xc9d:     31 c0                     	xor eax, eax
0xc9f:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xca3:     8b 40 0c                  	mov eax, dword ptr [eax + 0xc]
0xca6:     85 c0                     	test eax, eax
0xca8:     74 1e                     	je 0xcc8 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0xcaa:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xcae:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xcb5:     75 22                     	jne 0xcd9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0xcb7:     8b 10                     	mov edx, dword ptr [eax]
0xcb9:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xcbd:     8b 42 04                  	mov eax, dword ptr [edx + 4]
0xcc0:     83 c4 1c                  	add esp, 0x1c
0xcc3:     ff e0                     	jmp eax
; data inside code section at 0xcc5 -- 0xcc8
0xcc5:     8d 76 00                                           |.v.             |
0xcc8:     8b 44 24 0c               	mov eax, dword ptr [esp + 0xc]
0xccc:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0xcd3:     75 04                     	jne 0xcd9 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0xcd5:     83 c4 1c                  	add esp, 0x1c
0xcd8:     c3                        	ret 
0xcd9:     8d b4 26 00 00 00 00      	lea esi, [esi]
; data inside code section at 0xce0 -- 0xce1
0xce0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xce1 -- 0xce2
; data inside code section at 0xce2 -- 0xce5
0xce2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0xcf0 -- 0xd10
0xcf0:     83 ec 1c                  	sub esp, 0x1c
0xcf3:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xcf9:     89 44 24 0c               	mov dword ptr [esp + 0xc], eax
0xcfd:     31 c0                     	xor eax, eax
0xcff:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xd03:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xd0a:     75 04                     	jne 0xd10 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x1f>
0xd0c:     83 c4 1c                  	add esp, 0x1c
0xd0f:     c3                        	ret 
; data inside code section at 0xd10 -- 0xd11
0xd10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd11 -- 0xd12
; data inside code section at 0xd12 -- 0xd15
0xd12:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0xd20 -- 0xd4e
0xd20:     83 ec 1c                  	sub esp, 0x1c
0xd23:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xd2a:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xd2e:     31 d2                     	xor edx, edx
0xd30:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xd34:     c7 00 80 1e 00 00         	mov dword ptr [eax], 0x1e80
0xd3a:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xd3e:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xd45:     75 0c                     	jne 0xd53 <function_d53>
0xd47:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xd4b:     83 c4 1c                  	add esp, 0x1c
; data inside code section at 0xd4e -- 0xd4f
0xd4e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xd4f -- 0xd50
; data inside code section at 0xd50 -- 0xd53
0xd50:     ff ff ff                                           |...             |
; function: function_d53 at 0xd53 -- 0xd58
0xd53:     e8 fc ff ff ff            	call 0xd54
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0xd60 -- 0xd8e
0xd60:     83 ec 1c                  	sub esp, 0x1c
0xd63:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xd6a:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xd6e:     31 d2                     	xor edx, edx
0xd70:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xd74:     c7 00 80 1e 00 00         	mov dword ptr [eax], 0x1e80
0xd7a:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xd7e:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xd85:     75 0c                     	jne 0xd93 <function_d93>
0xd87:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xd8b:     83 c4 1c                  	add esp, 0x1c
; data inside code section at 0xd8e -- 0xd8f
0xd8e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xd8f -- 0xd90
; data inside code section at 0xd90 -- 0xd93
0xd90:     ff ff ff                                           |...             |
; function: function_d93 at 0xd93 -- 0xd98
0xd93:     e8 fc ff ff ff            	call 0xd94
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0xda0 -- 0xdce
0xda0:     83 ec 1c                  	sub esp, 0x1c
0xda3:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xdaa:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xdae:     31 d2                     	xor edx, edx
0xdb0:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xdb4:     c7 00 20 1e 00 00         	mov dword ptr [eax], 0x1e20
0xdba:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xdbe:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xdc5:     75 0c                     	jne 0xdd3 <function_dd3>
0xdc7:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xdcb:     83 c4 1c                  	add esp, 0x1c
; data inside code section at 0xdce -- 0xdcf
0xdce:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xdcf -- 0xdd0
; data inside code section at 0xdd0 -- 0xdd3
0xdd0:     ff ff ff                                           |...             |
; function: function_dd3 at 0xdd3 -- 0xdd8
0xdd3:     e8 fc ff ff ff            	call 0xdd4
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0xde0 -- 0xe0e
0xde0:     83 ec 1c                  	sub esp, 0x1c
0xde3:     65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0xdea:     89 54 24 0c               	mov dword ptr [esp + 0xc], edx
0xdee:     31 d2                     	xor edx, edx
0xdf0:     8b 44 24 20               	mov eax, dword ptr [esp + 0x20]
0xdf4:     c7 00 d8 1c 00 00         	mov dword ptr [eax], 0x1cd8
0xdfa:     8b 54 24 0c               	mov edx, dword ptr [esp + 0xc]
0xdfe:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0xe05:     75 0c                     	jne 0xe13 <function_e13>
0xe07:     89 44 24 20               	mov dword ptr [esp + 0x20], eax
0xe0b:     83 c4 1c                  	add esp, 0x1c
; data inside code section at 0xe0e -- 0xe0f
0xe0e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe0f -- 0xe10
; data inside code section at 0xe10 -- 0xe13
0xe10:     ff ff ff                                           |...             |
; function: function_e13 at 0xe13 -- 0xe18
0xe13:     e8 fc ff ff ff            	call 0xe14
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0xe20 -- 0xe27
0xe20:     83 6c 24 04 18            	sub dword ptr [esp + 4], 0x18
0xe25:     eb 09                     	jmp 0xe30 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0xe27 -- 0xe30
0xe27:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0xe30 -- 0xe4c
0xe30:     56                        	push esi
0xe31:     53                        	push ebx
0xe32:     83 ec 24                  	sub esp, 0x24
0xe35:     8b 74 24 30               	mov esi, dword ptr [esp + 0x30]
0xe39:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xe3f:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0xe43:     31 c0                     	xor eax, eax
0xe45:     c7 04 24 1c 00 00 00      	mov dword ptr [esp], 0x1c
; data inside code section at 0xe4c -- 0xe4d
0xe4c:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0xe4d -- 0xe4e
; data inside code section at 0xe4e -- 0xe52
0xe4e:     ff ff ff 89                                        |....            |
; function: function_e52 at 0xe52 -- 0xe53
0xe52:     c3                        	ret 
; data inside code section at 0xe53 -- 0xea5
0xe53:     c7 00 e8 1d 00 00 8b 46  04 85 c0 89 43 04 74 08   |.......F....C.t.|
0xe63:     8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 38 1e 00   |....$.R..F...8..|
0xe73:     00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0xe83:     50 1e 00 00 c7 43 18 64  1e 00 00 89 43 10 c7 44   |P....C.d....C..D|
0xe93:     24 08 00 15 00 00 c7 44  24 04 d0 1e 00 00 89 1c   |$......D$.......|
0xea3:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0xea5 -- 0xea6
; data inside code section at 0xea6 -- 0xeaf
0xea6:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0xeaf -- 0xeb0
; data inside code section at 0xeb0 -- 0xeb7
0xeb0:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xeb7 -- 0xeb8
; data inside code section at 0xeb8 -- 0xebb
0xeb8:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0xfb0 -- 0xfb7
0xfb0:     83 6c 24 04 18            	sub dword ptr [esp + 4], 0x18
0xfb5:     eb 09                     	jmp 0xfc0 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0xfb7 -- 0xfc0
0xfb7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0xfc0 -- 0xfdc
0xfc0:     56                        	push esi
0xfc1:     53                        	push ebx
0xfc2:     83 ec 24                  	sub esp, 0x24
0xfc5:     8b 74 24 30               	mov esi, dword ptr [esp + 0x30]
0xfc9:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0xfcf:     89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0xfd3:     31 c0                     	xor eax, eax
0xfd5:     c7 04 24 1c 00 00 00      	mov dword ptr [esp], 0x1c
; data inside code section at 0xfdc -- 0xfdd
0xfdc:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xfdd -- 0xfde
; data inside code section at 0xfde -- 0xfe0
0xfde:     ff ff                                              |..              |
; function: function_fe0 at 0xfe0 -- 0x1037
0xfe0:     ff 89 c3 c7 00 e8         	dec dword ptr [ecx - 0x17ff383d]
0xfe6:     1d 00 00 8b 46            	sbb eax, 0x468b0000
0xfeb:     04 85                     	add al, 0x85
0xfed:     c0 89 43 04 74 08 8b      	ror byte ptr [ecx + 0x8740443], 0x8b
0xff4:     10 89 04 24 ff 52         	adc byte ptr [ecx + 0x52ff2404], cl
0xffa:     0c 8b                     	or al, 0x8b
0xffc:     46                        	inc esi
0xffd:     08 8b 54 24 1c 65         	or byte ptr [ebx + 0x651c2454], cl
0x1003:    33 15 14 00 00 00         	xor edx, dword ptr [0x14]
0x1009:    c7 03 38 1e 00 00         	mov dword ptr [ebx], 0x1e38
0x100f:    89 43 08                  	mov dword ptr [ebx + 8], eax
0x1012:    8b 46 0c                  	mov eax, dword ptr [esi + 0xc]
0x1015:    89 43 0c                  	mov dword ptr [ebx + 0xc], eax
0x1018:    8b 46 10                  	mov eax, dword ptr [esi + 0x10]
0x101b:    c7 43 14 50 1e 00 00      	mov dword ptr [ebx + 0x14], 0x1e50
0x1022:    c7 43 18 64 1e 00 00      	mov dword ptr [ebx + 0x18], 0x1e64
0x1029:    89 43 10                  	mov dword ptr [ebx + 0x10], eax
0x102c:    8d 43 18                  	lea eax, [ebx + 0x18]
0x102f:    75 06                     	jne 0x1037 <function_fe0+0x56>
0x1031:    83 c4 24                  	add esp, 0x24
0x1034:    5b                        	pop ebx
0x1035:    5e                        	pop esi
0x1036:    c3                        	ret 
; data inside code section at 0x1037 -- 0x1038
0x1037:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1038 -- 0x1039
; data inside code section at 0x1039 -- 0x1042
0x1039:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1042 -- 0x1043
; data inside code section at 0x1043 -- 0x104a
0x1043:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x104a -- 0x104b
; data inside code section at 0x104b -- 0x104e
0x104b:    ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x1050 -- 0x10da
0x1050:    83 ec 2c                  	sub esp, 0x2c
0x1053:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x1059:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x105d:    31 c0                     	xor eax, eax
0x105f:    8b 44 24 30               	mov eax, dword ptr [esp + 0x30]
0x1063:    89 5c 24 24               	mov dword ptr [esp + 0x24], ebx
0x1067:    89 74 24 28               	mov dword ptr [esp + 0x28], esi
0x106b:    8b 58 04                  	mov ebx, dword ptr [eax + 4]
0x106e:    85 db                     	test ebx, ebx
0x1070:    74 11                     	je 0x1083 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x1072:    be ff ff ff ff            	mov esi, 0xffffffff
0x1077:    89 f0                     	mov eax, esi
0x1079:    f0 0f c1 43 04            	lock xadd dword ptr [ebx + 4], eax
0x107e:    83 f8 01                  	cmp eax, 1
0x1081:    74 1d                     	je 0x10a0 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x50>
0x1083:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x1087:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x108e:    75 45                     	jne 0x10d5 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x85>
0x1090:    8b 5c 24 24               	mov ebx, dword ptr [esp + 0x24]
0x1094:    8b 74 24 28               	mov esi, dword ptr [esp + 0x28]
0x1098:    83 c4 2c                  	add esp, 0x2c
0x109b:    c3                        	ret 
; data inside code section at 0x109c -- 0x10a0
0x109c:    8d 74 26 00                                        |.t&.            |
0x10a0:    8b 03                     	mov eax, dword ptr [ebx]
0x10a2:    89 1c 24                  	mov dword ptr [esp], ebx
0x10a5:    ff 50 08                  	call dword ptr [eax + 8]
0x10a8:    f0 0f c1 73 08            	lock xadd dword ptr [ebx + 8], esi
0x10ad:    83 fe 01                  	cmp esi, 1
0x10b0:    75 d1                     	jne 0x1083 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x33>
0x10b2:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x10b6:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x10bd:    75 16                     	jne 0x10d5 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x85>
0x10bf:    8b 03                     	mov eax, dword ptr [ebx]
0x10c1:    8b 74 24 28               	mov esi, dword ptr [esp + 0x28]
0x10c5:    89 5c 24 30               	mov dword ptr [esp + 0x30], ebx
0x10c9:    8b 5c 24 24               	mov ebx, dword ptr [esp + 0x24]
0x10cd:    8b 40 0c                  	mov eax, dword ptr [eax + 0xc]
0x10d0:    83 c4 2c                  	add esp, 0x2c
0x10d3:    ff e0                     	jmp eax
0x10d5:    e8 fc ff ff ff            	call 0x10d6
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0x10e0 -- 0x1112
0x10e0:    83 ec 2c                  	sub esp, 0x2c
0x10e3:    89 5c 24 24               	mov dword ptr [esp + 0x24], ebx
0x10e7:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x10eb:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x10f1:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x10f5:    31 c0                     	xor eax, eax
0x10f7:    89 74 24 28               	mov dword ptr [esp + 0x28], esi
0x10fb:    8b 43 10                  	mov eax, dword ptr [ebx + 0x10]
0x10fe:    c7 03 00 1d 00 00         	mov dword ptr [ebx], 0x1d00
0x1104:    8d 50 f4                  	lea edx, [eax - 0xc]
0x1107:    81 fa 00 00 00 00         	cmp edx, 0
0x110d:    75 21                     	jne 0x1130 <function_1130>
0x110f:    89 1c 24                  	mov dword ptr [esp], ebx
; data inside code section at 0x1112 -- 0x1113
0x1112:    e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x1113 -- 0x1114
; data inside code section at 0x1114 -- 0x1116
0x1114:    ff ff                                              |..              |
; function: function_1116 at 0x1116 -- 0x1130
0x1116:    ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0x111c:    33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0x1122:    75 33                     	jne 0x1157
0x1124:    8b 5c 24 24               	mov ebx, dword ptr [esp + 0x24]
0x1128:    8b 74 24 28               	mov esi, dword ptr [esp + 0x28]
0x112c:    83 c4 2c                  	add esp, 0x2c
0x112f:    c3                        	ret 
; function: function_1130 at 0x1130 -- 0x1131
; dynamically linked function: pthread_cancel at 0x1131 -- 0x1167
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0x1170 -- 0x11a2
0x1170:    83 ec 2c                  	sub esp, 0x2c
0x1173:    89 5c 24 24               	mov dword ptr [esp + 0x24], ebx
0x1177:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x117b:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x1181:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1185:    31 c0                     	xor eax, eax
0x1187:    89 74 24 28               	mov dword ptr [esp + 0x28], esi
0x118b:    8b 43 10                  	mov eax, dword ptr [ebx + 0x10]
0x118e:    c7 03 00 1d 00 00         	mov dword ptr [ebx], 0x1d00
0x1194:    8d 50 f4                  	lea edx, [eax - 0xc]
0x1197:    81 fa 00 00 00 00         	cmp edx, 0
0x119d:    75 29                     	jne 0x11c8 <function_11c8>
0x119f:    89 1c 24                  	mov dword ptr [esp], ebx
; data inside code section at 0x11a2 -- 0x11a3
0x11a2:    e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x11a3 -- 0x11a4
; data inside code section at 0x11a4 -- 0x11ab
0x11a4:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x11ab -- 0x11ac
; data inside code section at 0x11ac -- 0x11ae
0x11ac:    ff ff                                              |..              |
; function: function_11ae at 0x11ae -- 0x11c8
0x11ae:    ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0x11b4:    33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0x11ba:    75 33                     	jne 0x11ef <function_11ef>
0x11bc:    8b 5c 24 24               	mov ebx, dword ptr [esp + 0x24]
0x11c0:    8b 74 24 28               	mov esi, dword ptr [esp + 0x28]
0x11c4:    83 c4 2c                  	add esp, 0x2c
0x11c7:    c3                        	ret 
; function: function_11c8 at 0x11c8 -- 0x11c9
; dynamically linked function: pthread_cancel at 0x11c9 -- 0x11e8
; data inside code section at 0x11e8 -- 0x11e9
0x11e8:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep10_M_destroyERKSaIcE at 0x11e9 -- 0x11ea
; data inside code section at 0x11ea -- 0x11ed
0x11ea:    ff ff ff                                           |...             |
; function: function_11ed at 0x11ed -- 0x11ef
0x11ed:    eb b0                     	jmp 0x119f
; function: function_11ef at 0x11ef -- 0x11f4
0x11ef:    e8 fc ff ff ff            	call 0x11f0
; function: function_11f4 at 0x11f4 -- 0x11ff
0x11f4:    8b 48 fc                  	mov ecx, dword ptr [eax - 4]
0x11f7:    8d 71 ff                  	lea esi, [ecx - 1]
0x11fa:    89 70 fc                  	mov dword ptr [eax - 4], esi
0x11fd:    eb da                     	jmp 0x11d9
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0x1240 -- 0x12b0
0x1240:    83 ec 2c                  	sub esp, 0x2c
0x1243:    89 74 24 24               	mov dword ptr [esp + 0x24], esi
0x1247:    8b 74 24 30               	mov esi, dword ptr [esp + 0x30]
0x124b:    89 5c 24 20               	mov dword ptr [esp + 0x20], ebx
0x124f:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x1255:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1259:    31 c0                     	xor eax, eax
0x125b:    89 7c 24 28               	mov dword ptr [esp + 0x28], edi
0x125f:    8b 5e 10                  	mov ebx, dword ptr [esi + 0x10]
0x1262:    8b 53 f4                  	mov edx, dword ptr [ebx - 0xc]
0x1265:    85 d2                     	test edx, edx
0x1267:    74 27                     	je 0x1290 <_ZNK5boost6system12system_error4whatEv+0x50>
0x1269:    8b 54 24 1c               	mov edx, dword ptr [esp + 0x1c]
0x126d:    65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x1274:    89 d8                     	mov eax, ebx
0x1276:    0f 85 9e 00 00 00         	jne 0x131a <function_131a>
0x127c:    8b 5c 24 20               	mov ebx, dword ptr [esp + 0x20]
0x1280:    8b 74 24 24               	mov esi, dword ptr [esp + 0x24]
0x1284:    8b 7c 24 28               	mov edi, dword ptr [esp + 0x28]
0x1288:    83 c4 2c                  	add esp, 0x2c
0x128b:    c3                        	ret 
; data inside code section at 0x128c -- 0x1290
0x128c:    8d 74 26 00                                        |.t&.            |
0x1290:    89 34 24                  	mov dword ptr [esp], esi
0x1293:    8d 5e 10                  	lea ebx, [esi + 0x10]
0x1296:    e8 fc ff ff ff            	call 0x1297
0x129b:    89 04 24                  	mov dword ptr [esp], eax
0x129e:    89 c7                     	mov edi, eax
0x12a0:    e8 fc ff ff ff            	call 0x12a1
0x12a5:    89 7c 24 04               	mov dword ptr [esp + 4], edi
0x12a9:    89 1c 24                  	mov dword ptr [esp], ebx
0x12ac:    89 44 24 08               	mov dword ptr [esp + 8], eax
; data inside code section at 0x12b0 -- 0x12b1
0x12b0:    e8                                                 |.               |
; dynamically linked function: _ZNSs6assignEPKcj at 0x12b1 -- 0x12b2
; data inside code section at 0x12b2 -- 0x12bf
0x12b2:    ff ff ff 8b 46 10 8b 40  f4 85 c0 75 41            |....F..@...uA   |
; function: function_12bf at 0x12bf -- 0x12c0
; data inside code section at 0x12c0 -- 0x12e4
0x12c0:    46 0c 8d 7c 24 14 8b 4e  08 8b 10 89 4c 24 08 89   |F..|$..N....L$..|
0x12d0:    44 24 04 89 3c 24 ff 52  0c 83 ec 04 89 7c 24 04   |D$..<$.R.....|$.|
0x12e0:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0x12e4 -- 0x12e5
; data inside code section at 0x12e5 -- 0x12f7
0x12e5:    ff ff ff 8b 44 24 14 8d  50 f4 81 fa 00 00 00 00   |....D$..P.......|
0x12f5:    75 28                                              |u(              |
; function: function_12f7 at 0x12f7 -- 0x12ff
0x12f7:    8b 5e 10                  	mov ebx, dword ptr [esi + 0x10]
0x12fa:    e9 6a ff ff ff            	jmp 0x1269
; data inside code section at 0x12ff -- 0x1314
0x12ff:    90 c7 44 24 08 02 00 00  00 c7 44 24 04 ff 11 00   |..D$......D$....|
0x130f:    00 89 1c 24 e8                                     |...$.           |
; dynamically linked function: _ZNSs6appendEPKcj at 0x1314 -- 0x1315
; data inside code section at 0x1315 -- 0x1318
0x1315:    ff ff ff                                           |...             |
; function: function_1318 at 0x1318 -- 0x131a
0x1318:    eb a5                     	jmp 0x12bf <function_12bf>
; function: function_131a at 0x131a -- 0x131b
; dynamically linked function: __stack_chk_fail at 0x131b -- 0x131c
; data inside code section at 0x131c -- 0x1320
0x131c:    ff ff ff b9                                        |....            |
; dynamically linked function: pthread_cancel at 0x1320 -- 0x1346
; data inside code section at 0x1346 -- 0x1347
0x1346:    89                                                 |.               |
; function: function_1347 at 0x1347 -- 0x1348
0x1347:    c3                        	ret 
; data inside code section at 0x1348 -- 0x134c
0x1348:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x134c -- 0x134d
; data inside code section at 0x134d -- 0x1352
0x134d:    ff ff ff 89 d8                                     |.....           |
; function: function_1352 at 0x1352 -- 0x1353
; data inside code section at 0x1353 -- 0x1356
0x1353:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x1356 -- 0x1357
; data inside code section at 0x1357 -- 0x135e
0x1357:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0x135e -- 0x135f
; data inside code section at 0x135f -- 0x1363
0x135f:    ff ff ff 89                                        |....            |
; function: function_1363 at 0x1363 -- 0x1364
0x1363:    c3                        	ret 
; data inside code section at 0x1364 -- 0x1365
0x1364:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1365 -- 0x1366
; data inside code section at 0x1366 -- 0x1369
0x1366:    ff ff ff                                           |...             |
; function: function_1369 at 0x1369 -- 0x136e
0x1369:    e9 fb fe ff ff            	jmp 0x1269
; data inside code section at 0x136e -- 0x1370
0x136e:    66 90                                              |f.              |
; function: function_1370 at 0x1370 -- 0x1372
0x1370:    eb e0                     	jmp 0x1352 <function_1352>
; function: function_1372 at 0x1372 -- 0x137d
0x1372:    8b 48 fc                  	mov ecx, dword ptr [eax - 4]
0x1375:    8d 59 ff                  	lea ebx, [ecx - 1]
0x1378:    89 58 fc                  	mov dword ptr [eax - 4], ebx
0x137b:    eb b3                     	jmp 0x1330
; data inside code section at 0x137d -- 0x137e
0x137d:    83                                                 |.               |
; function: function_137e at 0x137e -- 0x1381
0x137e:    c2 01 89                  	ret 0x8901
; data inside code section at 0x1381 -- 0x1386
0x1381:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x1386 -- 0x1387
; data inside code section at 0x1387 -- 0x138b
0x1387:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x138b -- 0x138c
; data inside code section at 0x138c -- 0x138f
0x138c:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0x1390 -- 0x13e1
0x1390:    53                        	push ebx
0x1391:    83 ec 28                  	sub esp, 0x28
0x1394:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1398:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x139e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x13a2:    31 c0                     	xor eax, eax
0x13a4:    8b 43 04                  	mov eax, dword ptr [ebx + 4]
0x13a7:    c7 03 e8 1d 00 00         	mov dword ptr [ebx], 0x1de8
0x13ad:    85 c0                     	test eax, eax
0x13af:    74 0c                     	je 0x13bd <_ZN5boost9exceptionD1Ev+0x2d>
0x13b1:    8b 10                     	mov edx, dword ptr [eax]
0x13b3:    89 04 24                  	mov dword ptr [esp], eax
0x13b6:    ff 52 10                  	call dword ptr [edx + 0x10]
0x13b9:    84 c0                     	test al, al
0x13bb:    75 1b                     	jne 0x13d8 <_ZN5boost9exceptionD1Ev+0x48>
0x13bd:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x13c1:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x13c8:    75 17                     	jne 0x13e1 <_ZN5boost9exceptionD1Ev+0x4f>
0x13ca:    83 c4 28                  	add esp, 0x28
0x13cd:    5b                        	pop ebx
0x13ce:    66 90                     	nop 
0x13d0:    c3                        	ret 
; data inside code section at 0x13d1 -- 0x13d8
0x13d1:    8d b4 26 00 00 00 00                               |..&....         |
0x13d8:    c7 43 04 00 00 00 00      	mov dword ptr [ebx + 4], 0
0x13df:    eb dc                     	jmp 0x13bd <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0x13e1 -- 0x13e2
0x13e1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13e2 -- 0x13e3
; data inside code section at 0x13e3 -- 0x13e7
0x13e3:    ff ff ff 83                                        |....            |
; function: function_13e7 at 0x13e7 -- 0x13ea
0x13e7:    c2 01 89                  	ret 0x8901
; data inside code section at 0x13ea -- 0x13ef
0x13ea:    04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0x13ef -- 0x13f0
; data inside code section at 0x13f0 -- 0x13f4
0x13f0:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0x13f4 -- 0x13f5
; data inside code section at 0x13f5 -- 0x13f8
0x13f5:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0x1400 -- 0x140a
0x1400:    83 6c 24 04 14            	sub dword ptr [esp + 4], 0x14
0x1405:    e9 06 14 00 00            	jmp 0x2810 <function_2810>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0x1410 -- 0x1437
0x1410:    53                        	push ebx
0x1411:    83 ec 28                  	sub esp, 0x28
0x1414:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1418:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x141e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1422:    31 c0                     	xor eax, eax
0x1424:    c7 03 f8 1d 00 00         	mov dword ptr [ebx], 0x1df8
0x142a:    8d 43 14                  	lea eax, [ebx + 0x14]
0x142d:    c7 43 14 08 1e 00 00      	mov dword ptr [ebx + 0x14], 0x1e08
0x1434:    89 04 24                  	mov dword ptr [esp], eax
; data inside code section at 0x1437 -- 0x1438
0x1437:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x1438 -- 0x1439
; data inside code section at 0x1439 -- 0x143b
0x1439:    ff ff                                              |..              |
; function: function_143b at 0x143b -- 0x1456
0x143b:    ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0x1441:    33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0x1447:    75 0d                     	jne 0x1456 <function_143b+0x16>
0x1449:    89 5c 24 30               	mov dword ptr [esp + 0x30], ebx
0x144d:    83 c4 28                  	add esp, 0x28
0x1450:    5b                        	pop ebx
0x1451:    e9 4a 13 00 00            	jmp 0x27a0 <function_27a0>
; data inside code section at 0x1456 -- 0x1457
0x1456:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1457 -- 0x1458
; data inside code section at 0x1458 -- 0x145b
0x1458:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x1460 -- 0x1467
0x1460:    83 6c 24 04 18            	sub dword ptr [esp + 4], 0x18
0x1465:    eb 19                     	jmp 0x1480 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x1467 -- 0x1470
0x1467:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x1470 -- 0x1477
0x1470:    83 6c 24 04 14            	sub dword ptr [esp + 4], 0x14
0x1475:    eb 09                     	jmp 0x1480 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0x1477 -- 0x1480
0x1477:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0x1480 -- 0x14ae
0x1480:    53                        	push ebx
0x1481:    83 ec 28                  	sub esp, 0x28
0x1484:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1488:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x148e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1492:    31 c0                     	xor eax, eax
0x1494:    c7 43 18 20 1e 00 00      	mov dword ptr [ebx + 0x18], 0x1e20
0x149b:    8d 43 14                  	lea eax, [ebx + 0x14]
0x149e:    c7 03 f8 1d 00 00         	mov dword ptr [ebx], 0x1df8
0x14a4:    c7 43 14 08 1e 00 00      	mov dword ptr [ebx + 0x14], 0x1e08
0x14ab:    89 04 24                  	mov dword ptr [esp], eax
; data inside code section at 0x14ae -- 0x14af
0x14ae:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x14af -- 0x14b0
; data inside code section at 0x14b0 -- 0x14d1
0x14b0:    ff ff ff 89 1c 24 e8 35  13 00 00 8b 44 24 1c 65   |.....$.5....D$.e|
0x14c0:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x14d0:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14d1 -- 0x14d2
; data inside code section at 0x14d2 -- 0x14d6
0x14d2:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x14d6 -- 0x14d7
; data inside code section at 0x14d7 -- 0x14da
0x14d7:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x14e0 -- 0x14ea
0x14e0:    83 6c 24 04 18            	sub dword ptr [esp + 4], 0x18
0x14e5:    e9 f6 14 00 00            	jmp 0x29e0 <function_29e0>
; data inside code section at 0x14ea -- 0x14f0
0x14ea:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x14f0 -- 0x14fa
0x14f0:    83 6c 24 04 14            	sub dword ptr [esp + 4], 0x14
0x14f5:    e9 e6 14 00 00            	jmp 0x29e0 <function_29e0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0x1500 -- 0x152e
0x1500:    53                        	push ebx
0x1501:    83 ec 28                  	sub esp, 0x28
0x1504:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1508:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x150e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1512:    31 c0                     	xor eax, eax
0x1514:    c7 43 18 20 1e 00 00      	mov dword ptr [ebx + 0x18], 0x1e20
0x151b:    8d 43 14                  	lea eax, [ebx + 0x14]
0x151e:    c7 03 f8 1d 00 00         	mov dword ptr [ebx], 0x1df8
0x1524:    c7 43 14 08 1e 00 00      	mov dword ptr [ebx + 0x14], 0x1e08
0x152b:    89 04 24                  	mov dword ptr [esp], eax
; data inside code section at 0x152e -- 0x152f
0x152e:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x152f -- 0x1530
; data inside code section at 0x1530 -- 0x1532
0x1530:    ff ff                                              |..              |
; function: function_1532 at 0x1532 -- 0x154d
0x1532:    ff 8b 44 24 1c 65         	dec dword ptr [ebx + 0x651c2444]
0x1538:    33 05 14 00 00 00         	xor eax, dword ptr [0x14]
0x153e:    75 0d                     	jne 0x154d <function_1532+0x16>
0x1540:    89 5c 24 30               	mov dword ptr [esp + 0x30], ebx
0x1544:    83 c4 28                  	add esp, 0x28
0x1547:    5b                        	pop ebx
0x1548:    e9 43 13 00 00            	jmp 0x2890 <function_2890>
; data inside code section at 0x154d -- 0x154e
0x154d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x154e -- 0x154f
; data inside code section at 0x154f -- 0x1552
0x154f:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0x1560 -- 0x1567
0x1560:    83 6c 24 04 14            	sub dword ptr [esp + 4], 0x14
0x1565:    eb 09                     	jmp 0x1570 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0x1567 -- 0x1570
0x1567:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0x1570 -- 0x1597
0x1570:    53                        	push ebx
0x1571:    83 ec 28                  	sub esp, 0x28
0x1574:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1578:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x157e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1582:    31 c0                     	xor eax, eax
0x1584:    c7 03 f8 1d 00 00         	mov dword ptr [ebx], 0x1df8
0x158a:    8d 43 14                  	lea eax, [ebx + 0x14]
0x158d:    c7 43 14 08 1e 00 00      	mov dword ptr [ebx + 0x14], 0x1e08
0x1594:    89 04 24                  	mov dword ptr [esp], eax
; data inside code section at 0x1597 -- 0x1598
0x1597:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x1598 -- 0x1599
; data inside code section at 0x1599 -- 0x15ba
0x1599:    ff ff ff 89 1c 24 e8 4c  13 00 00 8b 44 24 1c 65   |.....$.L....D$.e|
0x15a9:    33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0x15b9:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15ba -- 0x15bb
; data inside code section at 0x15bb -- 0x15bf
0x15bb:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x15bf -- 0x15c0
; data inside code section at 0x15c0 -- 0x15c3
0x15c0:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x15d0 -- 0x1601
0x15d0:    53                        	push ebx
0x15d1:    83 ec 28                  	sub esp, 0x28
0x15d4:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x15d8:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x15de:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x15e2:    31 c0                     	xor eax, eax
0x15e4:    89 1c 24                  	mov dword ptr [esp], ebx
0x15e7:    e8 74 13 00 00            	call 0x2960 <unknown_2960>
0x15ec:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x15f0:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x15f7:    75 0d                     	jne 0x1606 <function_1606>
0x15f9:    89 5c 24 30               	mov dword ptr [esp + 0x30], ebx
0x15fd:    83 c4 28                  	add esp, 0x28
0x1600:    5b                        	pop ebx
; data inside code section at 0x1601 -- 0x1602
0x1601:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1602 -- 0x1603
; data inside code section at 0x1603 -- 0x1606
0x1603:    ff ff ff                                           |...             |
; function: function_1606 at 0x1606 -- 0x1607
; dynamically linked function: __stack_chk_fail at 0x1607 -- 0x1608
; data inside code section at 0x1608 -- 0x160b
0x1608:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x1710 -- 0x1750
0x1710:    53                        	push ebx
0x1711:    83 ec 28                  	sub esp, 0x28
0x1714:    8b 5c 24 30               	mov ebx, dword ptr [esp + 0x30]
0x1718:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x171e:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1722:    31 c0                     	xor eax, eax
0x1724:    8b 03                     	mov eax, dword ptr [ebx]
0x1726:    85 c0                     	test eax, eax
0x1728:    74 0c                     	je 0x1736 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x172a:    8b 10                     	mov edx, dword ptr [eax]
0x172c:    89 04 24                  	mov dword ptr [esp], eax
0x172f:    ff 52 10                  	call dword ptr [edx + 0x10]
0x1732:    84 c0                     	test al, al
0x1734:    75 12                     	jne 0x1748 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x1736:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x173a:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x1741:    75 0d                     	jne 0x1750 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x1743:    83 c4 28                  	add esp, 0x28
0x1746:    5b                        	pop ebx
0x1747:    c3                        	ret 
0x1748:    c7 03 00 00 00 00         	mov dword ptr [ebx], 0
0x174e:    eb e6                     	jmp 0x1736 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x1750 -- 0x1751
0x1750:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1751 -- 0x1752
; data inside code section at 0x1752 -- 0x1755
0x1752:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x1760 -- 0x182c
0x1760:    56                        	push esi
0x1761:    53                        	push ebx
0x1762:    83 ec 54                  	sub esp, 0x54
0x1765:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x176b:    89 44 24 4c               	mov dword ptr [esp + 0x4c], eax
0x176f:    31 c0                     	xor eax, eax
0x1771:    8b 5c 24 60               	mov ebx, dword ptr [esp + 0x60]
0x1775:    80 3d 78 1e 00 00 00      	cmp byte ptr [0x1e78], 0
0x177c:    c7 44 24 34 00 00 00 00   	mov dword ptr [esp + 0x34], 0
0x1784:    c7 44 24 38 00 00 00 00   	mov dword ptr [esp + 0x38], 0
0x178c:    c7 44 24 3c 00 00 00 00   	mov dword ptr [esp + 0x3c], 0
0x1794:    c7 44 24 40 ff ff ff ff   	mov dword ptr [esp + 0x40], 0xffffffff
0x179c:    c7 44 24 30 f8 1d 00 00   	mov dword ptr [esp + 0x30], 0x1df8
0x17a4:    c7 44 24 44 08 1e 00 00   	mov dword ptr [esp + 0x44], 0x1e08
0x17ac:    c7 44 24 14 38 1e 00 00   	mov dword ptr [esp + 0x14], 0x1e38
0x17b4:    c7 44 24 28 50 1e 00 00   	mov dword ptr [esp + 0x28], 0x1e50
0x17bc:    c7 44 24 2c 64 1e 00 00   	mov dword ptr [esp + 0x2c], 0x1e64
0x17c4:    c7 44 24 48 00 00 00 00   	mov dword ptr [esp + 0x48], 0
0x17cc:    c7 44 24 18 00 00 00 00   	mov dword ptr [esp + 0x18], 0
0x17d4:    c7 44 24 1c 30 1d 00 00   	mov dword ptr [esp + 0x1c], 0x1d30 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x17dc:    c7 44 24 20 68 16 00 00   	mov dword ptr [esp + 0x20], 0x1668 ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x17e4:    c7 44 24 24 51 00 00 00   	mov dword ptr [esp + 0x24], 0x51
0x17ec:    0f 84 8e 00 00 00         	je 0x1880 <function_1880>
0x17f2:    a1 78 1e 00 00            	mov eax, dword ptr [0x1e78]
0x17f7:    89 03                     	mov dword ptr [ebx], eax
0x17f9:    a1 7c 1e 00 00            	mov eax, dword ptr [0x1e7c]
0x17fe:    85 c0                     	test eax, eax
0x1800:    89 43 04                  	mov dword ptr [ebx + 4], eax
0x1803:    74 04                     	je 0x1809 <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xa9>
0x1805:    f0 ff 40 04               	lock inc dword ptr [eax + 4]
0x1809:    8d 44 24 28               	lea eax, [esp + 0x28]
0x180d:    8d 74 24 14               	lea esi, [esp + 0x14]
0x1811:    89 04 24                  	mov dword ptr [esp], eax
0x1814:    c7 44 24 2c 20 1e 00 00   	mov dword ptr [esp + 0x2c], 0x1e20
0x181c:    c7 44 24 14 f8 1d 00 00   	mov dword ptr [esp + 0x14], 0x1df8
0x1824:    c7 44 24 28 08 1e 00 00   	mov dword ptr [esp + 0x28], 0x1e08
; data inside code section at 0x182c -- 0x182d
0x182c:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x182d -- 0x182e
; data inside code section at 0x182e -- 0x1855
0x182e:    ff ff ff 89 34 24 8d 74  24 30 e8 b3 12 00 00 8d   |....4$.t$0......|
0x183e:    44 24 44 89 04 24 c7 44  24 30 f8 1d 00 00 c7 44   |D$D..$.D$0.....D|
0x184e:    24 44 08 1e 00 00 e8                               |$D.....         |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x1855 -- 0x1856
; data inside code section at 0x1856 -- 0x1858
0x1856:    ff ff                                              |..              |
; function: function_1858 at 0x1858 -- 0x187c
0x1858:    ff 89 34 24 e8 8f         	dec dword ptr [ecx - 0x7017dbcc]
0x185e:    12 00                     	adc al, byte ptr [eax]
0x1860:    00 89 d8 8b 54 24         	add byte ptr [ecx + 0x24548bd8], cl
0x1866:    4c                        	dec esp
0x1867:    65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x186e:    0f 85 d7 00 00 00         	jne 0x194b <function_194b>
0x1874:    83 c4 54                  	add esp, 0x54
0x1877:    5b                        	pop ebx
0x1878:    5e                        	pop esi
0x1879:    c2 04 00                  	ret 4
; data inside code section at 0x187c -- 0x1880
0x187c:    8d 74 26 00                                        |.t&.            |
; function: function_1880 at 0x1880 -- 0x1887
0x1880:    c7 04 24 78 1e 00 00      	mov dword ptr [esp], 0x1e78
; data inside code section at 0x1887 -- 0x1888
0x1887:    e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x1888 -- 0x1889
; data inside code section at 0x1889 -- 0x189c
0x1889:    ff ff ff 85 c0 0f 84 5e  ff ff ff c7 04 24 1c 00   |.......^.....$..|
0x1899:    00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x189c -- 0x189d
; data inside code section at 0x189d -- 0x18fe
0x189d:    ff ff ff 89 c6 c7 00 e8  1d 00 00 8b 44 24 18 85   |............D$..|
0x18ad:    c0 89 46 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..F.t.....$.R..D|
0x18bd:    24 1c c7 06 38 1e 00 00  c7 46 14 50 1e 00 00 c7   |$...8....F.P....|
0x18cd:    46 18 64 1e 00 00 89 46  08 8b 44 24 20 c7 05 7c   |F.d....F..D$ ..||
0x18dd:    1e 00 00 00 00 00 00 89  46 0c 8b 44 24 24 89 46   |........F..D$$.F|
0x18ed:    10 8d 46 18 a3 78 1e 00  00 c7 04 24 10 00 00 00   |..F..x.....$....|
0x18fd:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x18fe -- 0x18ff
; data inside code section at 0x18ff -- 0x1926
0x18ff:    ff ff ff c7 40 04 01 00  00 00 c7 00 a0 1e 00 00   |....@...........|
0x190f:    89 70 0c c7 40 08 01 00  00 00 a3 7c 1e 00 00 c7   |.p..@......|....|
0x191f:    04 24 78 1e 00 00 e8                               |.$x....         |
; dynamically linked function: __cxa_guard_release at 0x1926 -- 0x1927
; data inside code section at 0x1927 -- 0x192e
0x1927:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x192e -- 0x1941
; data inside code section at 0x1941 -- 0x1942
0x1941:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x1942 -- 0x1943
; data inside code section at 0x1943 -- 0x1946
0x1943:    ff ff ff                                           |...             |
; function: function_1946 at 0x1946 -- 0x194b
0x1946:    e9 a7 fe ff ff            	jmp 0x17f2
; function: function_194b at 0x194b -- 0x194c
; dynamically linked function: __stack_chk_fail at 0x194c -- 0x194d
; data inside code section at 0x194d -- 0x1954
0x194d:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1954 -- 0x1955
; data inside code section at 0x1955 -- 0x1961
0x1955:    ff ff ff 8b 06 89 34 24  ff 50 04 e8               |......4$.P..    |
; dynamically linked function: __cxa_rethrow at 0x1961 -- 0x1962
; data inside code section at 0x1962 -- 0x1966
0x1962:    ff ff ff 89                                        |....            |
; function: function_1966 at 0x1966 -- 0x1967
0x1966:    c3                        	ret 
; data inside code section at 0x1967 -- 0x196b
0x1967:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZdlPv at 0x196b -- 0x196c
; data inside code section at 0x196c -- 0x196f
0x196c:    ff ff ff                                           |...             |
; function: function_196f at 0x196f -- 0x1970
; data inside code section at 0x1970 -- 0x1977
0x1970:    04 24 78 1e 00 00 e8                               |.$x....         |
; dynamically linked function: __cxa_guard_abort at 0x1977 -- 0x1978
; data inside code section at 0x1978 -- 0x1997
0x1978:    ff ff ff 8d 44 24 14 89  04 24 e8 d9 12 00 00 8d   |....D$...$......|
0x1988:    44 24 30 89 04 24 e8 dd  11 00 00 89 1c 24 e8      |D$0..$.......$. |
; dynamically linked function: _Unwind_Resume at 0x1997 -- 0x1998
; data inside code section at 0x1998 -- 0x199a
0x1998:    ff ff                                              |..              |
; function: function_199a at 0x199a -- 0x19a1
0x199a:    ff 89 c3 eb d0 89         	dec dword ptr [ecx - 0x762f143d]
0x19a0:    c3                        	ret 
; data inside code section at 0x19a1 -- 0x19a2
0x19a1:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x19a2 -- 0x19a3
; data inside code section at 0x19a3 -- 0x19a6
0x19a3:    ff ff ff                                           |...             |
; function: function_19a6 at 0x19a6 -- 0x19a8
0x19a6:    eb c7                     	jmp 0x196f <function_196f>
; section: .text._ZNSsC2IPKcEET_S2_RKSaIcE
; function: _ZNSsC1IPKcEET_S2_RKSaIcE at 0x19b0 -- 0x19f9
0x19b0:    83 ec 4c                  	sub esp, 0x4c
0x19b3:    89 5c 24 3c               	mov dword ptr [esp + 0x3c], ebx
0x19b7:    8b 5c 24 54               	mov ebx, dword ptr [esp + 0x54]
0x19bb:    89 6c 24 48               	mov dword ptr [esp + 0x48], ebp
0x19bf:    8b 6c 24 58               	mov ebp, dword ptr [esp + 0x58]
0x19c3:    65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0x19ca:    89 54 24 2c               	mov dword ptr [esp + 0x2c], edx
0x19ce:    31 d2                     	xor edx, edx
0x19d0:    8b 44 24 5c               	mov eax, dword ptr [esp + 0x5c]
0x19d4:    89 7c 24 44               	mov dword ptr [esp + 0x44], edi
0x19d8:    8b 7c 24 50               	mov edi, dword ptr [esp + 0x50]
0x19dc:    89 74 24 40               	mov dword ptr [esp + 0x40], esi
0x19e0:    39 eb                     	cmp ebx, ebp
0x19e2:    74 74                     	je 0x1a58 <function_1a58>
0x19e4:    85 db                     	test ebx, ebx
0x19e6:    74 78                     	je 0x1a60 <function_1a60>
0x19e8:    29 dd                     	sub ebp, ebx
0x19ea:    89 44 24 08               	mov dword ptr [esp + 8], eax
0x19ee:    c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0x19f6:    89 2c 24                  	mov dword ptr [esp], ebp
; data inside code section at 0x19f9 -- 0x19fa
0x19f9:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x19fa -- 0x19fb
; data inside code section at 0x19fb -- 0x1a02
0x19fb:    ff ff ff 83 fd 01 89                               |.......         |
; function: function_1a02 at 0x1a02 -- 0x1a05
0x1a02:    c2 8d 70                  	ret 0x708d
; data inside code section at 0x1a05 -- 0x1a08
0x1a05:    0c 74 48                                           |.tH             |
; function: function_1a08 at 0x1a08 -- 0x1a09
; data inside code section at 0x1a09 -- 0x1a18
0x1a09:    54 24 1c 89 6c 24 08 89  5c 24 04 89 34 24 e8      |T$..l$..\$..4$. |
; dynamically linked function: memcpy at 0x1a18 -- 0x1a19
; data inside code section at 0x1a19 -- 0x1a20
0x1a19:    ff ff ff 8b 54 24 1c                               |....T$.         |
; function: function_1a20 at 0x1a20 -- 0x1a21
; data inside code section at 0x1a21 -- 0x1a28
0x1a21:    fa 00 00 00 00 75 71                               |.....uq         |
; function: function_1a28 at 0x1a28 -- 0x1a4b
0x1a28:    8b 44 24 2c               	mov eax, dword ptr [esp + 0x2c]
0x1a2c:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x1a33:    89 37                     	mov dword ptr [edi], esi
0x1a35:    75 5d                     	jne 0x1a94 <function_1a94>
0x1a37:    8b 5c 24 3c               	mov ebx, dword ptr [esp + 0x3c]
0x1a3b:    8b 74 24 40               	mov esi, dword ptr [esp + 0x40]
0x1a3f:    8b 7c 24 44               	mov edi, dword ptr [esp + 0x44]
0x1a43:    8b 6c 24 48               	mov ebp, dword ptr [esp + 0x48]
0x1a47:    83 c4 4c                  	add esp, 0x4c
0x1a4a:    c3                        	ret 
; data inside code section at 0x1a4b -- 0x1a50
0x1a4b:    90 8d 74 26 00                                     |..t&.           |
; function: function_1a50 at 0x1a50 -- 0x1a58
0x1a50:    0f b6 03                  	movzx eax, byte ptr [ebx]
0x1a53:    88 42 0c                  	mov byte ptr [edx + 0xc], al
0x1a56:    eb c8                     	jmp 0x1a20 <function_1a20>
; function: function_1a58 at 0x1a58 -- 0x1a59
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1a59 -- 0x1a5f
; data inside code section at 0x1a5f -- 0x1a60
0x1a5f:    90                                                 |.               |
; function: function_1a60 at 0x1a60 -- 0x1a6b
0x1a60:    85 ed                     	test ebp, ebp
0x1a62:    74 0c                     	je 0x1a70 <function_1a70>
0x1a64:    c7 04 24 a0 16 00 00      	mov dword ptr [esp], 0x16a0 ; "basic_string::_S_construct null not valid"
; data inside code section at 0x1a6b -- 0x1a6c
0x1a6b:    e8                                                 |.               |
; dynamically linked function: _ZSt19__throw_logic_errorPKc at 0x1a6c -- 0x1a6d
; data inside code section at 0x1a6d -- 0x1a70
0x1a6d:    ff ff ff                                           |...             |
; function: function_1a70 at 0x1a70 -- 0x1a85
0x1a70:    89 44 24 08               	mov dword ptr [esp + 8], eax
0x1a74:    31 ed                     	xor ebp, ebp
0x1a76:    c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0x1a7e:    c7 04 24 00 00 00 00      	mov dword ptr [esp], 0
; data inside code section at 0x1a85 -- 0x1a86
0x1a85:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x1a86 -- 0x1a87
; data inside code section at 0x1a87 -- 0x1a89
0x1a87:    ff ff                                              |..              |
; function: function_1a89 at 0x1a89 -- 0x1a94
0x1a89:    ff 89 c2 8d 70 0c         	dec dword ptr [ecx + 0xc708dc2]
0x1a8f:    e9 74 ff ff ff            	jmp 0x1a08 <function_1a08>
; function: function_1a94 at 0x1a94 -- 0x1a95
; dynamically linked function: __stack_chk_fail at 0x1a95 -- 0x1a96
; data inside code section at 0x1a96 -- 0x1a99
0x1a96:    ff ff ff                                           |...             |
; function: function_1a99 at 0x1a99 -- 0x1aa8
0x1a99:    c7 42 08 00 00 00 00      	mov dword ptr [edx + 8], 0
0x1aa0:    89 2a                     	mov dword ptr [edx], ebp
0x1aa2:    c6 04 2e 00               	mov byte ptr [esi + ebp], 0
0x1aa6:    eb 80                     	jmp 0x1a28 <function_1a28>
; section: .text._ZNSsC2IPcEET_S1_RKSaIcE
; function: _ZNSsC1IPcEET_S1_RKSaIcE at 0x1ab0 -- 0x1b17
0x1ab0:    83 ec 4c                  	sub esp, 0x4c
0x1ab3:    89 5c 24 3c               	mov dword ptr [esp + 0x3c], ebx
0x1ab7:    8b 5c 24 54               	mov ebx, dword ptr [esp + 0x54]
0x1abb:    89 6c 24 48               	mov dword ptr [esp + 0x48], ebp
0x1abf:    8b 6c 24 58               	mov ebp, dword ptr [esp + 0x58]
0x1ac3:    65 8b 15 14 00 00 00      	mov edx, dword ptr gs:[0x14]
0x1aca:    89 54 24 2c               	mov dword ptr [esp + 0x2c], edx
0x1ace:    31 d2                     	xor edx, edx
0x1ad0:    8b 44 24 5c               	mov eax, dword ptr [esp + 0x5c]
0x1ad4:    89 7c 24 44               	mov dword ptr [esp + 0x44], edi
0x1ad8:    8b 7c 24 50               	mov edi, dword ptr [esp + 0x50]
0x1adc:    89 74 24 40               	mov dword ptr [esp + 0x40], esi
0x1ae0:    39 eb                     	cmp ebx, ebp
0x1ae2:    74 74                     	je 0x1b58 <function_1b58>
0x1ae4:    85 db                     	test ebx, ebx
0x1ae6:    74 78                     	je 0x1b60 <function_1b60>
0x1ae8:    29 dd                     	sub ebp, ebx
0x1aea:    89 44 24 08               	mov dword ptr [esp + 8], eax
0x1aee:    c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0x1af6:    89 2c 24                  	mov dword ptr [esp], ebp
0x1af9:    e8 fc ff ff ff            	call 0x1afa
0x1afe:    83 fd 01                  	cmp ebp, 1
0x1b01:    89 c2                     	mov edx, eax
0x1b03:    8d 70 0c                  	lea esi, [eax + 0xc]
0x1b06:    74 48                     	je 0x1b50 <function_1b50>
0x1b08:    89 54 24 1c               	mov dword ptr [esp + 0x1c], edx
0x1b0c:    89 6c 24 08               	mov dword ptr [esp + 8], ebp
0x1b10:    89 5c 24 04               	mov dword ptr [esp + 4], ebx
0x1b14:    89 34 24                  	mov dword ptr [esp], esi
; data inside code section at 0x1b17 -- 0x1b18
0x1b17:    e8                                                 |.               |
; dynamically linked function: memcpy at 0x1b18 -- 0x1b19
; data inside code section at 0x1b19 -- 0x1b20
0x1b19:    ff ff ff 8b 54 24 1c                               |....T$.         |
; function: function_1b20 at 0x1b20 -- 0x1b28
0x1b20:    81 fa 00 00 00 00         	cmp edx, 0
0x1b26:    75 71                     	jne 0x1b99
; function: function_1b28 at 0x1b28 -- 0x1b4b
0x1b28:    8b 44 24 2c               	mov eax, dword ptr [esp + 0x2c]
0x1b2c:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x1b33:    89 37                     	mov dword ptr [edi], esi
0x1b35:    75 5d                     	jne 0x1b94 <function_1b94>
0x1b37:    8b 5c 24 3c               	mov ebx, dword ptr [esp + 0x3c]
0x1b3b:    8b 74 24 40               	mov esi, dword ptr [esp + 0x40]
0x1b3f:    8b 7c 24 44               	mov edi, dword ptr [esp + 0x44]
0x1b43:    8b 6c 24 48               	mov ebp, dword ptr [esp + 0x48]
0x1b47:    83 c4 4c                  	add esp, 0x4c
0x1b4a:    c3                        	ret 
; data inside code section at 0x1b4b -- 0x1b50
0x1b4b:    90 8d 74 26 00                                     |..t&.           |
; function: function_1b50 at 0x1b50 -- 0x1b58
0x1b50:    0f b6 03                  	movzx eax, byte ptr [ebx]
0x1b53:    88 42 0c                  	mov byte ptr [edx + 0xc], al
0x1b56:    eb c8                     	jmp 0x1b20 <function_1b20>
; function: function_1b58 at 0x1b58 -- 0x1b59
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1b59 -- 0x1b5f
; data inside code section at 0x1b5f -- 0x1b60
0x1b5f:    90                                                 |.               |
; function: function_1b60 at 0x1b60 -- 0x1b6b
0x1b60:    85 ed                     	test ebp, ebp
0x1b62:    74 0c                     	je 0x1b70 <function_1b70>
0x1b64:    c7 04 24 a0 16 00 00      	mov dword ptr [esp], 0x16a0 ; "basic_string::_S_construct null not valid"
; data inside code section at 0x1b6b -- 0x1b6c
0x1b6b:    e8                                                 |.               |
; dynamically linked function: _ZSt19__throw_logic_errorPKc at 0x1b6c -- 0x1b6d
; data inside code section at 0x1b6d -- 0x1b70
0x1b6d:    ff ff ff                                           |...             |
; function: function_1b70 at 0x1b70 -- 0x1b85
0x1b70:    89 44 24 08               	mov dword ptr [esp + 8], eax
0x1b74:    31 ed                     	xor ebp, ebp
0x1b76:    c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0x1b7e:    c7 04 24 00 00 00 00      	mov dword ptr [esp], 0
; data inside code section at 0x1b85 -- 0x1b86
0x1b85:    e8                                                 |.               |
; dynamically linked function: _ZNSs4_Rep9_S_createEjjRKSaIcE at 0x1b86 -- 0x1b87
; data inside code section at 0x1b87 -- 0x1b89
0x1b87:    ff ff                                              |..              |
; function: function_1b89 at 0x1b89 -- 0x1b94
0x1b89:    ff 89 c2 8d 70 0c         	dec dword ptr [ecx + 0xc708dc2]
0x1b8f:    e9 74 ff ff ff            	jmp 0x1b08
; function: function_1b94 at 0x1b94 -- 0x1b95
; dynamically linked function: __stack_chk_fail at 0x1b95 -- 0x1b96
; data inside code section at 0x1b96 -- 0x1b99
0x1b96:    ff ff ff                                           |...             |
; function: function_1b99 at 0x1b99 -- 0x1ba8
0x1b99:    c7 42 08 00 00 00 00      	mov dword ptr [edx + 8], 0
0x1ba0:    89 2a                     	mov dword ptr [edx], ebp
0x1ba2:    c6 04 2e 00               	mov byte ptr [esi + ebp], 0
0x1ba6:    eb 80                     	jmp 0x1b28 <function_1b28>
; section: .text.startup
; function: _GLOBAL__sub_I__ZN14CMessageHeaderC2Ev at 0x1bb0 -- 0x1bc6
0x1bb0:    83 ec 2c                  	sub esp, 0x2c
0x1bb3:    65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x1bb9:    89 44 24 1c               	mov dword ptr [esp + 0x1c], eax
0x1bbd:    31 c0                     	xor eax, eax
0x1bbf:    c7 04 24 6c 0a 00 00      	mov dword ptr [esp], 0xa6c
; data inside code section at 0x1bc6 -- 0x1bc7
0x1bc6:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x1bc7 -- 0x1bc8
; data inside code section at 0x1bc8 -- 0x1bcf
0x1bc8:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x1bcf -- 0x1bdb
; data inside code section at 0x1bdb -- 0x1bde
0x1bdb:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x1bde -- 0x1c04
; data inside code section at 0x1c04 -- 0x1c08
0x1c04:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x1c08 -- 0x1c20
; function: function_1c20 at 0x1c20 -- 0x1c21
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x1c21 -- 0x1c22
; data inside code section at 0x1c22 -- 0x1c24
0x1c22:    ff ff                                              |..              |
; function: function_1c24 at 0x1c24 -- 0x1c2a
0x1c24:    ff a3 70 0a 00 00         	jmp dword ptr [ebx + 0xa70]
; data inside code section at 0x1c2a -- 0x1c2b
0x1c2a:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x1c2b -- 0x1c2c
; data inside code section at 0x1c2c -- 0x1c2e
0x1c2c:    ff ff                                              |..              |
; function: function_1c2e at 0x1c2e -- 0x1c34
0x1c2e:    ff a3 74 0a 00 00         	jmp dword ptr [ebx + 0xa74]
; data inside code section at 0x1c34 -- 0x1c35
0x1c34:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x1c35 -- 0x1c36
; data inside code section at 0x1c36 -- 0x1c38
0x1c36:    ff ff                                              |..              |
; function: function_1c38 at 0x1c38 -- 0x1c3e
0x1c38:    ff a3 78 0a 00 00         	jmp dword ptr [ebx + 0xa78]
; function: function_1c3e at 0x1c3e -- 0x1c54
0x1c3e:    8b 44 24 1c               	mov eax, dword ptr [esp + 0x1c]
0x1c42:    65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x1c49:    75 04                     	jne 0x1c4f <function_1c3e+0x11>
0x1c4b:    83 c4 2c                  	add esp, 0x2c
0x1c4e:    c3                        	ret 
0x1c4f:    e8 fc ff ff ff            	call 0x1c50

;;
;; Data Segment
;;

; section: .gcc_except_table
0xebc:     ff ff 01 08 38 03 79 00  74 17 00 00 ff ff 01 0d   |....8.y.t.......|
0xecc:     1c 05 00 00 38 03 7c 00  89 01 05 00 00 00 00 00   |....8.|.........|
0xedc:     ff 00 29 01 1c 70 29 ae  02 01 a3 01 05 86 02 03   |..)..p).........|
0xeec:     d3 01 05 ae 02 01 a4 02  05 bd 02 05 c5 02 0a 00   |................|
0xefc:     00 01 00 00 7d 7f 00 00  00 00 00 00 00 00 00 00   |....}...........|
0xf0c:     ff 00 0d 01 08 26 03 56  01 5e 0a 00 00 7f 00 00   |.....&.V.^......|
0xf1c:     00 ff ff 01 15 76 05 00  00 b2 01 05 dc 02 00 c1   |.....v..........|
0xf2c:     01 05 c0 02 00 e1 01 7b  00 00 ff ff 01 10 7d 05   |.......{......}.|
0xf3c:     af 01 00 8a 01 05 c1 01  00 aa 01 17 00 00 00 00   |................|
0xf4c:     ff 00 25 01 1d bb 02 05  bb 04 00 d8 02 03 85 04   |..%.............|
0xf5c:     00 9d 03 05 f0 03 01 80  04 05 bf 04 00 b6 04 05   |................|
0xf6c:     00 00 01 00 00 00 00 00  ff ff 01 10 16 82 01 00   |................|
0xf7c:     00 ae 01 05 ae 02 00 bb  02 05 00 00 ff ff 01 10   |................|
0xf8c:     83 01 05 00 00 8f 01 25  df 01 00 ec 01 05 00 00   |.......%........|
0xf9c:     ff ff 01 0e 1f 05 00 00  36 05 88 01 00 9b 01 05   |........6.......|
0xfac:     00 00 ??                                           |..?             |
; section: .rodata.str1.1
0x11ff:    3a 20 00                                           |: .             |
0x1202:    25 30 32 78 00                                     |%02x.           |   "%02x"
0x1207:    25 73 20 25 73 00                                  |%s %s.          |
0x120d:    43 49 6e 76 28 25 73 29  0a 00                     |CInv(%s)..      |   "CInv(%s)\n"
0x1217:    45 52 52 4f 52 00                                  |ERROR.          |   "ERROR"
0x121d:    74 78 00                                           |tx.             |   "tx"
0x1220:    62 6c 6f 63 6b 00                                  |block.          |   "block"
0x1226:    66 69 6c 74 65 72 65 64  20 62 6c 6f 63 6b 00      |filtered block. |   "filtered block"
0x1235:    ??                                                 |?               |
; section: .rodata.str1.4
0x160c:    43 49 6e 76 3a 3a 43 49  6e 76 28 73 74 72 69 6e   |CInv::CInv(strin|
0x161c:    67 2c 20 75 69 6e 74 32  35 36 29 20 3a 20 75 6e   |g, uint256) : un|
0x162c:    6b 6e 6f 77 6e 20 74 79  70 65 20 27 25 73 27 00   |known type '%s'.|
0x163c:    43 49 6e 76 3a 3a 47 65  74 43 6f 6d 6d 61 6e 64   |CInv::GetCommand|
0x164c:    28 29 20 3a 20 74 79 70  65 3d 25 64 20 75 6e 6b   |() : type=%d unk|
0x165c:    6e 6f 77 6e 20 74 79 70  65 00 00 00               |nown type...    |
0x1668:    2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x1678:    73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0x1688:    61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0x1698:    72 2e 68 70 70 00                                  |r.hpp.          |
0x169e:    00 00                                              |..              |
0x16a0:    62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 5f 53   |basic_string::_S|   "basic_string::_S_construct null not valid"
0x16b0:    5f 63 6f 6e 73 74 72 75  63 74 20 6e 75 6c 6c 20   |_construct null |
0x16c0:    6e 6f 74 20 76 61 6c 69  64 00                     |not valid.      |
0x16ca:    00 00                                              |..              |
0x16cc:    43 4d 65 73 73 61 67 65  48 65 61 64 65 72 3a 3a   |CMessageHeader::|   "CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\n"
0x16dc:    49 73 56 61 6c 69 64 28  29 20 3a 20 28 25 73 2c   |IsValid() : (%s,|
0x16ec:    20 25 75 20 62 79 74 65  73 29 20 6e 4d 65 73 73   | %u bytes) nMess|
0x16fc:    61 67 65 53 69 7a 65 20  3e 20 4d 41 58 5f 53 49   |ageSize > MAX_SI|
0x170c:    5a 45 0a 00                                        |ZE..            |
0x1710:    53                                                 |S               |
; section: .ctors
0x1c54:    b0 1b 00 00 ??                                     |....?           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x1c70:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x1c80:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x1c90:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x1c90:    08 00 00 00 70 1c 00 00  f0 1e 00 00 4e            |....p.......N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x1c9c:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x1cac:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x1cbc:    08 00 00 00 9c 1c 00 00  00 00 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x1cd0:    00 00 00 00 90 1c 00 00  30 0b 00 00 e0 0d 00 00   |........0.......|
0x1ce0:    00 00 00 00 00 00 00 00  60 0b 00 00 a0 0b 00 00   |........`.......|
0x1cf0:    10 0c 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x1cf8:    00 00 00 00 bc 1c 00 00  e0 10 00 00 70 11 00 00   |............p...|
0x1d08:    40 12 00 00 ??                                     |@...?           |
; section: .rodata
0x1d10:    17 12 00 00 1d 12 00 00  20 12 00 00 26 12 00 00   |........ ...&...|
0x1d20:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1d30:    62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x1d40:    5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x1d50:    70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x1d60:    74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x1d70:    69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x1d80:    34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x1d90:    74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x1da0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x1db0:    73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x1dc0:    69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x1dd0:    65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x1dd9:    ??                                                 |?               |
; section: .rodata._ZTVN5boost9exceptionE
0x1de0:    00 00 00 00 f8 1e 00 00  00 00 00 00 00 00 00 00   |................|
0x1df0:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x1df0:    00 00 00 00 10 1f 00 00  10 14 00 00 70 15 00 00   |............p...|
0x1e00:    ec ff ff ff 10 1f 00 00  00 14 00 00 60 15 00 00   |............`...|
0x1e10:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x1e18:    00 00 00 00 30 1f 00 00  00 00 00 00 00 00 00 00   |....0...........|
0x1e28:    70 0a 00 00 a0 0d 00 00  00                        |p........       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1e30:    00 00 00 00 d0 1e 00 00  00 15 00 00 80 14 00 00   |................|
0x1e40:    c0 0f 00 00 30 0e 00 00  ec ff ff ff d0 1e 00 00   |....0...........|
0x1e50:    f0 14 00 00 70 14 00 00  00 00 00 00 e8 ff ff ff   |....p...........|
0x1e60:    d0 1e 00 00 b0 0f 00 00  20 0e 00 00 e0 14 00 00   |........ .......|
0x1e70:    60 14 00 00 ??                                     |`...?           |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x1e78:    00 00 00 00 38 1f 00 00  a0 0a 00 00 60 0d 00 00   |....8.......`...|
0x1e88:    00 00 00 00 d0 0a 00 00  00 00 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x1e98:    00 00 00 00 40 1f 00 00  60 0c 00 00 20 0d 00 00   |....@...`... ...|
0x1ea8:    90 0c 00 00 d0 0a 00 00  f0 0c 00 00 ??            |............?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1ed0:    08 00 00 00 50 1f 00 00  00 00 00 00 02 00 00 00   |....P...........|
0x1ee0:    10 1f 00 00 02 00 00 00  30 1f 00 00 02 18 00 00   |........0.......|
0x1ef0:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x1ef0:    08 00 00 00 90 1f 00 00  08                        |.........       |
; section: .rodata._ZTIN5boost9exceptionE
0x1ef8:    08 00 00 00 b4 1f 00 00  ??                        |........?       |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x1f10:    08 00 00 00 d0 1f 00 00  00 00 00 00 02 00 00 00   |................|
0x1f20:    f8 1e 00 00 02 00 00 00  00 00 00 00 02 14 00 00   |................|
0x1f30:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x1f30:    08 00 00 00 10 20 00 00  08                        |..... ...       |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x1f38:    08 00 00 00 50 20 00 00  08                        |....P ...       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x1f40:    08 00 00 00 90 20 00 00  38 1f 00 00 ??            |..... ..8...?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x1f50:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x1f60:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x1f70:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x1f80:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x1f90:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x1fa0:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x1fb0:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost9exceptionE
0x1fb4:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x1fc4:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x1fd0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x1fe0:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x1ff0:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x2010:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x2020:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x2030:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x2050:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|   "N5boost6detail15sp_counted_baseE"
0x2060:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x2070:    00                                                 |.               |
0x2071:    ??                                                 |?               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x2090:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x20a0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x20b0:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x20c0:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x20d0:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x20e0:    6c 6f 63 5f 45 45 45 45  45 00 ??                  |loc_EEEEE.?     |
; section: .eh_frame
0xcb3ac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0xcb3bc:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0xcb3cc:   50 0a 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |P.../....C. f...|
0xcb3dc:   41 0b 00 00 18 00 00 00  38 00 00 00 64 0a 00 00   |A.......8...d...|
0xcb3ec:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0xcb3fc:   1c 00 00 00 54 00 00 00  78 0a 00 00 55 00 00 00   |....T...x...U...|
0xcb40c:   00 43 0e 20 6e 0a 0e 04  47 0b 50 0a 0e 04 41 0b   |.C. n...G.P...A.|
0xcb41c:   18 00 00 00 74 00 00 00  b8 0a 00 00 2f 00 00 00   |....t......./...|
0xcb42c:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0xcb43c:   90 00 00 00 cc 0a 00 00  39 00 00 00 00 43 0e 20   |........9....C. |
0xcb44c:   6e 0a 0e 04 43 0b 00 00  2c 00 00 00 ac 00 00 00   |n...C...,.......|
0xcb45c:   f0 0a 00 00 64 00 00 00  00 41 0e 08 86 02 41 0e   |....d....A....A.|
0xcb46c:   0c 83 03 43 0e 40 02 4f  0a 0e 0c 41 0e 08 c3 41   |...C.@.O...A...A|
0xcb47c:   0e 04 c6 42 0b 00 00 00  20 00 00 00 dc 00 00 00   |...B.... .......|
0xcb48c:   30 0b 00 00 44 00 00 00  00 41 0e 08 83 02 43 0e   |0...D....A....C.|
0xcb49c:   20 6d 0a 0e 08 41 0e 04  c3 46 0b 00 18 00 00 00   | m...A...F......|
0xcb4ac:   00 01 00 00 5c 0b 00 00  2f 00 00 00 00 43 0e 20   |....\.../....C. |
0xcb4bc:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 1c 01 00 00   |f...A...........|
0xcb4cc:   70 0b 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |p...U....C. p...|
0xcb4dc:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 3c 01 00 00   |E.P...A.....<...|
0xcb4ec:   b0 0b 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |....%....C. \...|
0xcb4fc:   41 0b 00 00 18 00 00 00  58 01 00 00 c4 0b 00 00   |A.......X.......|
0xcb50c:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0xcb51c:   18 00 00 00 74 01 00 00  e8 0b 00 00 38 00 00 00   |....t.......8...|
0xcb52c:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0xcb53c:   90 01 00 00 0c 0c 00 00  38 00 00 00 00 43 0e 20   |........8....C. |
0xcb54c:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 ac 01 00 00   |k...E...........|
0xcb55c:   30 0c 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |0...8....C. k...|
0xcb56c:   45 0b 00 00 10 00 00 00  c8 01 00 00 54 0c 00 00   |E...........T...|
0xcb57c:   07 00 00 00 00 00 00 00  1c 00 00 00 00 00 00 00   |................|
0xcb58c:   01 7a 50 4c 52 00 01 7c  08 07 00 00 00 00 00 00   |.zPLR..|........|
0xcb59c:   1b 0c 04 04 88 01 00 00  20 00 00 00 24 00 00 00   |........ ...$...|
0xcb5ac:   30 0c 00 00 8b 00 00 00  04 bc 0e 00 00 41 0e 08   |0............A..|
0xcb5bc:   86 02 41 0e 0c 83 03 43  0e 30 00 00 10 00 00 00   |..A....C.0......|
0xcb5cc:   20 02 00 00 8c 0d 00 00  07 00 00 00 00 00 00 00   | ...............|
0xcb5dc:   30 00 00 00 5c 00 00 00  88 0d 00 00 8e 00 00 00   |0...\...........|
0xcb5ec:   04 c8 0e 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0xcb5fc:   0e 30 02 6f 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.o...A...A...A|
0xcb60c:   0b 00 00 00 28 00 00 00  68 02 00 00 e4 0d 00 00   |....(...h.......|
0xcb61c:   8a 00 00 00 00 43 0e 30  5b 86 02 83 03 6d 0a 0e   |.....C.0[....m..|
0xcb62c:   04 c6 c3 45 0b 73 0a 0e  04 c6 c3 42 0b 00 00 00   |...E.s.....B....|
0xcb63c:   20 00 00 00 94 02 00 00  48 0e 00 00 87 00 00 00   | .......H.......|
0xcb64c:   00 43 0e 30 48 83 03 64  86 02 60 0a 0e 04 c6 c3   |.C.0H..d..`.....|
0xcb65c:   41 0b 00 00 20 00 00 00  b8 02 00 00 b4 0e 00 00   |A... ...........|
0xcb66c:   8f 00 00 00 00 43 0e 30  48 83 03 64 86 02 68 0a   |.....C.0H..d..h.|
0xcb67c:   0e 04 c6 c3 41 0b 00 00  28 00 00 00 04 01 00 00   |....A...(.......|
0xcb68c:   60 0f 00 00 4f 01 00 00  04 dc 0e 00 00 43 0e 30   |`...O........C.0|
0xcb69c:   48 86 03 57 87 02 83 04  69 0a 0e 04 c7 c6 c3 45   |H..W....i......E|
0xcb6ac:   0b 00 00 00 24 00 00 00  30 01 00 00 84 10 00 00   |....$...0.......|
0xcb6bc:   68 00 00 00 04 0c 0f 00  00 41 0e 08 83 02 43 0e   |h........A....C.|
0xcb6cc:   30 79 0a 0e 08 41 0e 04  c3 4a 0b 00 10 00 00 00   |0y...A...J......|
0xcb6dc:   30 03 00 00 cc 10 00 00  0a 00 00 00 00 00 00 00   |0...............|
0xcb6ec:   20 00 00 00 44 03 00 00  c8 10 00 00 4b 00 00 00   | ...D.......K...|
0xcb6fc:   00 41 0e 08 83 02 43 0e  30 7c 0a 0e 08 41 0e 04   |.A....C.0|...A..|
0xcb70c:   c3 45 0b 00 10 00 00 00  68 03 00 00 f4 10 00 00   |.E......h.......|
0xcb71c:   07 00 00 00 00 00 00 00  10 00 00 00 7c 03 00 00   |............|...|
0xcb72c:   f0 10 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0xcb73c:   90 03 00 00 ec 10 00 00  5a 00 00 00 00 41 0e 08   |........Z....A..|
0xcb74c:   83 02 43 0e 30 02 4b 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.K...A...E.|
0xcb75c:   10 00 00 00 b4 03 00 00  28 11 00 00 0a 00 00 00   |........(.......|
0xcb76c:   00 00 00 00 10 00 00 00  c8 03 00 00 24 11 00 00   |............$...|
0xcb77c:   0a 00 00 00 00 00 00 00  20 00 00 00 dc 03 00 00   |........ .......|
0xcb78c:   20 11 00 00 52 00 00 00  00 41 0e 08 83 02 43 0e   | ...R....A....C.|
0xcb79c:   30 02 43 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.C...A...E.....|
0xcb7ac:   00 04 00 00 5c 11 00 00  07 00 00 00 00 00 00 00   |....\...........|
0xcb7bc:   20 00 00 00 14 04 00 00  58 11 00 00 53 00 00 00   | .......X...S...|
0xcb7cc:   00 41 0e 08 83 02 43 0e  30 02 44 0a 0e 08 41 0e   |.A....C.0.D...A.|
0xcb7dc:   04 c3 45 0b 20 00 00 00  38 04 00 00 94 11 00 00   |..E. ...8.......|
0xcb7ec:   3b 00 00 00 00 41 0e 08  83 02 43 0e 30 6c 0a 0e   |;....A....C.0l..|
0xcb7fc:   08 41 0e 04 c3 45 0b 00  20 00 00 00 5c 04 00 00   |.A...E.. ...\...|
0xcb80c:   a0 fb ff ff 5c 00 00 00  00 41 0e 08 83 02 43 0e   |....\....A....C.|
0xcb81c:   20 02 51 0a 0e 08 41 0e  04 c3 41 0b 24 00 00 00   | .Q...A...A.$...|
0xcb82c:   80 04 00 00 dc fb ff ff  74 00 00 00 00 43 0e 30   |........t....C.0|
0xcb83c:   48 83 04 48 86 03 48 87  02 02 53 0a 0e 04 c7 c6   |H..H..H...S.....|
0xcb84c:   c3 41 0b 00 20 00 00 00  a8 04 00 00 34 fc ff ff   |.A.. .......4...|
0xcb85c:   56 00 00 00 00 41 0e 08  83 02 43 0e 30 02 4b 0a   |V....A....C.0.K.|
0xcb86c:   0e 08 41 0e 04 c3 41 0b  28 00 00 00 cc 04 00 00   |..A...A.(.......|
0xcb87c:   70 fc ff ff a6 00 00 00  00 43 0e 50 4c 83 05 5a   |p........C.PL..Z|
0xcb88c:   85 02 48 86 04 48 87 03  02 67 0a 0e 04 c5 c7 c6   |..H..H...g......|
0xcb89c:   c3 41 0b 00 18 00 00 00  f8 04 00 00 f4 fc ff ff   |.A..............|
0xcb8ac:   4d 00 00 00 00 43 0e 20  02 44 0a 0e 04 41 0b 00   |M....C. .D...A..|
0xcb8bc:   18 00 00 00 14 05 00 00  28 fd ff ff 68 00 00 00   |........(...h...|
0xcb8cc:   00 43 0e 20 02 5f 0a 0e  04 41 0b 00 18 00 00 00   |.C. ._...A......|
0xcb8dc:   30 05 00 00 7c fd ff ff  9b 00 00 00 00 43 0e 20   |0...|........C. |
0xcb8ec:   02 92 0a 0e 04 41 0b 00  2c 00 00 00 74 03 00 00   |.....A..,...t...|
0xcb8fc:   00 fe ff ff 60 01 00 00  04 1d 0f 00 00 43 0e 40   |....`........C.@|
0xcb90c:   54 86 04 48 87 03 48 85  02 49 83 05 03 0a 01 0a   |T..H..H..I......|
0xcb91c:   0e 04 c5 c7 c6 c3 41 0b  20 00 00 00 7c 05 00 00   |......A. ...|...|
0xcb92c:   30 ff ff ff e7 00 00 00  00 41 0e 08 83 02 43 0e   |0........A....C.|
0xcb93c:   60 7a 0a 0e 08 41 0e 04  c3 41 0b 00 18 00 00 00   |`z...A...A......|
0xcb94c:   a0 05 00 00 fc ff ff ff  34 00 00 00 00 43 0e 20   |........4....C. |
0xcb95c:   6b 0a 0e 04 41 0b 00 00  28 00 00 00 e4 03 00 00   |k...A...(.......|
0xcb96c:   20 00 00 00 cf 00 00 00  04 36 0f 00 00 43 0e 30   | ........6...C.0|
0xcb97c:   48 87 02 5e 86 03 83 04  63 0a 0e 04 c7 c6 c3 41   |H..^....c......A|
0xcb98c:   0b 00 00 00 20 00 00 00  e8 05 00 00 24 11 00 00   |.... .......$...|
0xcb99c:   45 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |E....A....C.0r..|
0xcb9ac:   08 41 0e 04 c3 41 0b 00  30 00 00 00 34 04 00 00   |.A...A..0...4...|
0xcb9bc:   50 11 00 00 48 02 00 00  04 4c 0f 00 00 41 0e 08   |P...H....L...A..|
0xcb9cc:   86 02 41 0e 0c 83 03 43  0e 60 03 12 01 0a 0e 0c   |..A....C.`......|
0xcb9dc:   41 0e 08 c3 41 0e 04 c6  47 0b 00 00 28 00 00 00   |A...A...G...(...|
0xcb9ec:   40 06 00 00 6c 13 00 00  f8 00 00 00 00 43 0e 50   |@...l........C.P|
0xcb9fc:   48 83 05 48 85 02 59 87  03 48 86 04 02 66 0a 0e   |H..H..Y..H...f..|
0xcba0c:   04 c5 c7 c6 c3 46 0b 00  24 00 00 00 6c 06 00 00   |.....F..$...l...|
0xcba1c:   40 00 00 00 96 00 00 00  00 43 0e 30 48 86 03 48   |@........C.0H..H|
0xcba2c:   83 04 56 87 02 7c 0a 0e  04 c7 c6 c3 43 0b 00 00   |..V..|......C...|
0xcba3c:   38 00 00 00 bc 04 00 00  b8 00 00 00 40 01 00 00   |8...........@...|
0xcba4c:   04 74 0f 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |.t...A....A....A|
0xcba5c:   0e 10 83 04 43 0e 40 03  14 01 0a 0e 10 41 0e 0c   |....C.@......A..|
0xcba6c:   c3 41 0e 08 c6 41 0e 04  c7 41 0b 00 28 00 00 00   |.A...A...A..(...|
0xcba7c:   d0 06 00 00 dc 13 00 00  f8 00 00 00 00 43 0e 50   |.............C.P|
0xcba8c:   48 83 05 48 85 02 59 87  03 48 86 04 02 66 0a 0e   |H..H..Y..H...f..|
0xcba9c:   04 c5 c7 c6 c3 46 0b 00  40 00 00 00 24 05 00 00   |.....F..@...$...|
0xcbaac:   90 01 00 00 2a 01 00 00  04 88 0f 00 00 41 0e 08   |....*........A..|
0xcbabc:   85 02 41 0e 0c 87 03 41  0e 10 86 04 46 0e 14 83   |..A....A....F...|
0xcbacc:   05 43 0e 90 01 02 cc 0a  0e 14 41 0e 10 c3 41 0e   |.C........A...A.|
0xcbadc:   0c c6 41 0e 08 c7 41 0e  04 c5 43 0b 24 00 00 00   |..A...A...C.$...|
0xcbaec:   68 05 00 00 7c 02 00 00  ab 00 00 00 04 9c 0f 00   |h...|...........|
0xcbafc:   00 41 0e 08 83 02 43 0e  40 02 56 0a 0e 08 41 0e   |.A....C.@.V...A.|
0xcbb0c:   04 c3 41 0b 18 00 00 00  68 07 00 00 44 14 00 00   |..A.....h...D...|
0xcbb1c:   a4 00 00 00 00 43 0e 30  02 9b 0a 0e 04 41 0b 00   |.....C.0.....A..|
0xcbb2c:   ??                                                 |?               |

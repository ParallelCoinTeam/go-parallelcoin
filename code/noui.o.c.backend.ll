source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_331d4_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_3328c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_33344_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32)* }
%vtable_333fc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_334b4_type = type { i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_3356c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_33624_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_336dc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_33794_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_3384c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32, i32)*, i32 (i32*)*, i32 ()* }
%vtable_33904_type = type { i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32)* }
%vtable_339bc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_339dc_type = type { i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_339fc_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_33a1c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_33ae4_type = type { i32 (i32*)*, i32 (i32)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_33b44_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_33b8c_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_33bcc_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_33be4_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_33c44_type = type { i32 (i32*)*, i32 (i32)* }

@cf = internal unnamed_addr global i1 false
@az = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@cs = internal unnamed_addr global i16 0
@ds = internal unnamed_addr global i16 0
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@fpu_stat_TOP = internal unnamed_addr global i3 0
@eax = internal unnamed_addr global i32 0, align 8
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0, align 8
@ebx = internal unnamed_addr global i32 0, align 8
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0, align 8
@0 = external local_unnamed_addr global i32
@1 = external local_unnamed_addr global i32
@global_var_14a1.1905 = constant i32 134348799
@global_var_2666.1906 = constant [6 x i8] c"Error\00"
@global_var_266c.1907 = constant [8 x i8] c"Warning\00"
@global_var_2674.1908 = constant [12 x i8] c"Information\00"
@global_var_90f.1910 = constant i32 2048
@global_var_910.1911 = constant i32 8
@global_var_913.1912 = constant i32 -196769024
@global_var_914.1913 = constant i32 1710507403
@global_var_915.1914 = constant i32 862319685
@global_var_916.1915 = constant i32 87254516
@global_var_919.1916 = constant i32 5125
@global_var_91a.1917 = constant i32 20
@global_var_91d.1918 = constant i32 -402295808
@global_var_91e.1919 = constant i32 -51903116
@global_var_33ca4.1920 = constant i32 0
@global_var_10.1921 = constant i32 1709196681
@global_var_33c8c.1922 = constant i32 0
@global_var_33c6c.1923 = constant i32 7996
@global_var_33ba4.1924 = constant i32 58036
@global_var_33b6c.1927 = constant i32 60630
@global_var_30.1928 = constant i32 69485767
@global_var_33c54.1930 = constant i32 66140
@global_var_33bfc.1933 = constant i32 71841
@global_var_33c10.1934 = constant i32 218670
@global_var_51.1935 = constant i32 69071
@global_var_269c.1936 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_3b3c.1937 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_2700.1941 = constant [8 x i8] c"px != 0\00"
@global_var_33b58.1943 = constant i32 79016
@global_var_33b00.1946 = constant i32 79289
@global_var_33b10.1947 = constant i32 218438
@global_var_275d.1953 = constant [23 x i8] c"this->is_initialized()\00"
@global_var_27ab.1959 = constant [23 x i8] c"_shared_state.unique()\00"
@global_var_80.1967 = constant i32 -1
@global_var_89d8.1970 = constant [525 x i8] c"d::basic_string<char>&)>, boost::function<void(const boost::signals2::connection&, const std::basic_string<char>&)>, boost::signals2::mutex>::invocation_state, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<void, const std::basic_string<char>&, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(const std::basic_string<char>&)>, boost::function<void(const boost::signals2::connection&, const std::basic_string<char>&)>, boost::signals2::mutex>::invocation_state&]\00"
@global_var_18b68.1978 = constant i32 99859
@global_var_19094.1979 = constant i32 101399
@global_var_195c0.1980 = constant i32 102723
@global_var_19b68.1981 = constant i32 104173
@global_var_1a110.1982 = constant i32 105618
@global_var_1d874.2014 = constant i32 119798
@global_var_35d20.2019 = global i32 140774
@global_var_35d28.2022 = global i32 145757
@global_var_35d30.2026 = global i32 150060
@global_var_4500.2030 = constant [873 x i8] c"t::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<bool, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int, boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<bool, const std::basic_string<char>&, const std::basic_string<char>&, unsigned int, boost::function<bool(const std::basic_string<char>&, const std::basic_string<char>&, unsigned int)> >, boost::signals2::mutex> > >]\00"
@global_var_34294.2033 = constant i32 8
@global_var_34274.2038 = constant i32 8
@global_var_3425c.2042 = constant i32 8
@2 = external global i32
@3 = internal constant [3 x i8] c"\A1\14\00"
@global_var_14.1904 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@global_var_18.1931 = external constant i8*
@global_var_89.1944 = constant i8 -115
@global_var_15.2040 = constant i8 20
@global_var_88.2056 = constant i8 0
@global_var_331d4.2066 = constant %vtable_331d4_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_3328c.2065 = constant %vtable_3328c_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_33344.2064 = constant %vtable_33344_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_333fc.2063 = constant %vtable_333fc_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_334b4.2062 = constant %vtable_334b4_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED1Ev, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_3356c.2061 = constant %vtable_3356c_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_33624.2049 = constant %vtable_33624_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info }
@global_var_336dc.2048 = constant %vtable_336dc_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_33794.2046 = constant %vtable_33794_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEE11get_deleterERKSt9type_info }
@global_var_3384c.2067 = constant %vtable_3384c_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEED0Ev, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE11get_deleterERKSt9type_info }
@global_var_33904.2037 = constant %vtable_33904_type { i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEE11get_deleterERKSt9type_info }
@global_var_339bc.2000 = constant %vtable_339bc_type { i32 (i32*)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEED1Ev, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEED0Ev, i32 (i32)* @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE9connectedEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE4lockEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE6unlockEv }
@global_var_339dc.1998 = constant %vtable_339dc_type { i32 (i32*)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED1Ev, i32 ()* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED0Ev, i32 (i32)* @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE9connectedEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE4lockEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE6unlockEv }
@global_var_339fc.1996 = constant %vtable_339fc_type { i32 (i32*)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEED1Ev, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEED0Ev, i32 (i32)* @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE9connectedEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE4lockEv, i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE6unlockEv }
@global_var_33a1c.1965 = constant %vtable_33a1c_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_33ae4.1945 = constant %vtable_33ae4_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, i32 ()* @pszBase58, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.1903, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv }
@global_var_33b44.1942 = constant %vtable_33b44_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, i32 ()* @pszBase58 }
@global_var_33b8c.1925 = constant %vtable_33b8c_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_33bcc.1938 = constant %vtable_33bcc_type { i32 (i32*)* @_ZN5boost17bad_function_callD1Ev, i32 (i32)* @_ZN5boost17bad_function_callD0Ev, i32 ()* @pszBase58 }
@global_var_33be4.1932 = constant %vtable_33be4_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_33c44.1929 = constant %vtable_33c44_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }

define i32 @pszBase58() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  ret void
}

define i32 @function_84() local_unnamed_addr {
dec_label_pc_84:
  %v0_84 = call i32 @function_13c()
  ret i32 %v0_84
}

define i32 @function_ee() local_unnamed_addr {
dec_label_pc_ee:
  %v0_ee = call i32 @function_13c()
  ret i32 %v0_ee

; uselistorder directives
  uselistorder i32 ()* @function_13c, { 1, 0 }
}

define i32 @function_f1() local_unnamed_addr {
dec_label_pc_f1:
  %eax.global-to-local = alloca i32, align 4
  %v0_f1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f1
}

define i32 @function_fd() local_unnamed_addr {
dec_label_pc_fd:
  %v0_fd = call i32 @function_101()
  ret i32 %v0_fd
}

define i32 @function_ff() local_unnamed_addr {
dec_label_pc_ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_ff = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_ff
}

define i32 @function_101() local_unnamed_addr {
dec_label_pc_101:
  %v0_101 = load i32, i32* @ebp, align 4
  %v1_101 = add i32 %v0_101, -14
  ret i32 %v1_101
}

define i32 @function_115() local_unnamed_addr {
dec_label_pc_115:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_115 = load i32, i32* %ecx.global-to-local, align 4
  %v1_115 = add i32 %v0_115, -330986045
  %v2_115 = inttoptr i32 %v1_115 to i32*
  %v3_115 = load i32, i32* %v2_115, align 4
  %v4_115 = add i32 %v3_115, -1
  store i32 %v4_115, i32* %v2_115, align 4
  %v0_11b = load i32, i32* %eax.global-to-local, align 8
  %v1_123 = call i32 @function_127(i32 %v0_11b)
  store i32 %v1_123, i32* %eax.global-to-local, align 8
  ret i32 %v1_123
}

define i32 @function_125() local_unnamed_addr {
dec_label_pc_125:
  %eax.global-to-local = alloca i32, align 4
  %v0_125 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_125
}

define i32 @function_127(i32 %arg1) local_unnamed_addr {
dec_label_pc_127:
  %v0_127 = load i32, i32* @ebp, align 4
  %v1_127 = add i32 %v0_127, -13
  ret i32 %v1_127
}

define i32 @function_13c() local_unnamed_addr {
dec_label_pc_13c:
  %v0_13c = load i32, i32* @ebp, align 4
  %v1_13c = add i32 %v0_13c, -12
  %v2_13c = inttoptr i32 %v1_13c to i32*
  %v3_13c = load i32, i32* %v2_13c, align 4
  %v3_13f = xor i32 %v3_13c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_13f = icmp eq i32 %v3_13f, 0
  store i32 %v3_13f, i32* @eax, align 8
  br i1 %v4_13f, label %bb, label %dec_label_pc_148

bb:                                               ; preds = %dec_label_pc_13c
  %v1_146 = call i32 @function_14d()
  br label %dec_label_pc_148

dec_label_pc_148:                                 ; preds = %bb, %dec_label_pc_13c
  %v2_146 = phi i32 [ %v1_146, %bb ], [ %v3_13f, %dec_label_pc_13c ]
  ret i32 %v2_146
}

define i32 @function_14d() local_unnamed_addr {
dec_label_pc_14d:
  %v0_152 = load i32, i32* @eax, align 8
  ret i32 %v0_152
}

define void @WriteOrderPos(i64 %nOrderPos, i32 %mapValue) local_unnamed_addr {
dec_label_pc_153:
  %stack_var_-24 = alloca i32, align 4
  %v4_15a = trunc i64 %nOrderPos to i32
  %v1_174 = add i32 %v4_15a, 4
  %v2_174 = inttoptr i32 %v1_174 to i32*
  %v3_174 = load i32, i32* %v2_174, align 4
  %v1_177 = inttoptr i32 %v4_15a to i32*
  %v2_177 = load i32, i32* %v1_177, align 4
  %v1_17b = sub i32 -1, %v3_174
  %v1_17e = sub i32 -1, %v2_177
  %v2_181 = or i32 %v1_17e, %v1_17b
  %v3_181 = icmp eq i32 %v2_181, 0
  br i1 %v3_181, label %bb, label %dec_label_pc_18b

bb:                                               ; preds = %dec_label_pc_153
  %v4_185 = call i32 @function_243(i32 %mapValue, i32 %v4_15a)
  br label %dec_label_pc_18b

dec_label_pc_18b:                                 ; preds = %bb, %dec_label_pc_153
  %v3_18e = load i32, i32* %v2_174, align 4
  %v2_191 = load i32, i32* %v1_177, align 4
  %v2_193 = ptrtoint i32* %stack_var_-24 to i32
  %v3_1a1 = call i32 @_Z8i64tostrx(i32 %v2_193, i32 %v2_191, i32 %v3_18e)
  ret void
}

define i32 @function_210() local_unnamed_addr {
dec_label_pc_210:
  %eax.global-to-local = alloca i32, align 4
  %v0_210 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_210
}

define i32 @function_213() local_unnamed_addr {
dec_label_pc_213:
  %eax.global-to-local = alloca i32, align 4
  %v0_213 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_213
}

define i32 @function_21f() local_unnamed_addr {
dec_label_pc_21f:
  %v0_21f = call i32 @function_223()
  ret i32 %v0_21f
}

define i32 @function_221() local_unnamed_addr {
dec_label_pc_221:
  %eax.global-to-local = alloca i32, align 4
  %v0_221 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_221
}

define i32 @function_223() local_unnamed_addr {
dec_label_pc_223:
  %v0_223 = load i32, i32* @ebp, align 4
  %v1_223 = add i32 %v0_223, -13
  ret i32 %v1_223
}

define i32 @function_243(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243:
  %v0_244 = load i32, i32* @ebp, align 4
  %v1_244 = add i32 %v0_244, -12
  %v2_244 = inttoptr i32 %v1_244 to i32*
  %v3_244 = load i32, i32* %v2_244, align 4
  %v3_247 = xor i32 %v3_244, ptrtoint ([3 x i8]* @3 to i32)
  %v4_247 = icmp eq i32 %v3_247, 0
  store i32 %v3_247, i32* @eax, align 8
  br i1 %v4_247, label %bb, label %dec_label_pc_250

bb:                                               ; preds = %dec_label_pc_243
  %v1_24e = call i32 @function_255()
  br label %dec_label_pc_250

dec_label_pc_250:                                 ; preds = %bb, %dec_label_pc_243
  %v2_24e = phi i32 [ %v1_24e, %bb ], [ %v3_247, %dec_label_pc_243 ]
  ret i32 %v2_24e
}

define i32 @function_255() local_unnamed_addr {
dec_label_pc_255:
  %v0_259 = load i32, i32* @eax, align 8
  ret i32 %v0_259
}

define i1 @noui_ThreadSafeMessageBox(i32 %message, i32 %caption, i32 %style) local_unnamed_addr {
dec_label_pc_25a:
  ret i1 false
}

define i32 @function_289() local_unnamed_addr {
dec_label_pc_289:
  %v0_289 = load i32, i32* @ebp, align 4
  %v1_289 = add i32 %v0_289, -52
  %v2_289 = inttoptr i32 %v1_289 to i32*
  %v3_289 = load i32, i32* %v2_289, align 4
  %v10_28c = icmp eq i32 %v3_289, 268436481
  br i1 %v10_28c, label %bb, label %dec_label_pc_293

bb:                                               ; preds = %dec_label_pc_289
  %v1_291 = call i32 @function_2d8()
  br label %dec_label_pc_293

dec_label_pc_293:                                 ; preds = %bb, %dec_label_pc_289
  %v0_29a = phi i32 [ %v1_291, %bb ], [ %v3_289, %dec_label_pc_289 ]
  %v10_293 = icmp eq i32 %v0_29a, 268436482
  br i1 %v10_293, label %dec_label_pc_2a3, label %dec_label_pc_29a

dec_label_pc_29a:                                 ; preds = %dec_label_pc_293
  %v1_29a = icmp eq i32 %v0_29a, 0
  br i1 %v1_29a, label %bb104, label %dec_label_pc_29e

bb104:                                            ; preds = %dec_label_pc_29a
  %v1_29c = call i32 @function_30d()
  br label %dec_label_pc_29e

dec_label_pc_29e:                                 ; preds = %bb104, %dec_label_pc_29a
  %v0_29e = call i32 @function_342()
  ret i32 %v0_29e

dec_label_pc_2a3:                                 ; preds = %dec_label_pc_293
  %v0_2a3 = load i32, i32* @ebp, align 4
  %v1_2a3 = add i32 %v0_2a3, -24
  %v3_2b1 = call i32 @_Z1_PKc(i32 %v1_2a3, i32 ptrtoint ([6 x i8]* @global_var_2666.1906 to i32))
  %v0_2b9 = load i32, i32* @ebp, align 4
  %v1_2c0 = add i32 %v0_2b9, -28
  ret i32 %v1_2c0

; uselistorder directives
  uselistorder i32 %v0_29a, { 1, 0 }
  uselistorder i32 %v3_289, { 1, 0 }
}

define i32 @function_2d6() local_unnamed_addr {
dec_label_pc_2d6:
  %v0_2d6 = call i32 @function_354()
  ret i32 %v0_2d6
}

define i32 @function_2d8() local_unnamed_addr {
dec_label_pc_2d8:
  %v0_2d8 = load i32, i32* @ebp, align 4
  %v1_2d8 = add i32 %v0_2d8, -20
  %v3_2e6 = call i32 @_Z1_PKc(i32 %v1_2d8, i32 ptrtoint ([8 x i8]* @global_var_266c.1907 to i32))
  %v0_2ee = load i32, i32* @ebp, align 4
  %v1_2f5 = add i32 %v0_2ee, -28
  ret i32 %v1_2f5
}

define i32 @function_30b() local_unnamed_addr {
dec_label_pc_30b:
  %v0_30b = call i32 @function_354()
  ret i32 %v0_30b
}

define i32 @function_30d() local_unnamed_addr {
dec_label_pc_30d:
  %v0_30d = load i32, i32* @ebp, align 4
  %v1_30d = add i32 %v0_30d, -16
  %v3_31b = call i32 @_Z1_PKc(i32 %v1_30d, i32 ptrtoint ([12 x i8]* @global_var_2674.1908 to i32))
  %v0_323 = load i32, i32* @ebp, align 4
  %v1_32a = add i32 %v0_323, -28
  ret i32 %v1_32a

; uselistorder directives
  uselistorder i32 (i32, i32)* @_Z1_PKc, { 2, 1, 0 }
}

define i32 @function_340() local_unnamed_addr {
dec_label_pc_340:
  %v0_340 = call i32 @function_354()
  ret i32 %v0_340

; uselistorder directives
  uselistorder i32 ()* @function_354, { 2, 1, 0 }
}

define i32 @function_342() local_unnamed_addr {
dec_label_pc_342:
  %v0_342 = load i32, i32* @ebp, align 4
  %v1_349 = add i32 %v0_342, -28
  ret i32 %v1_349
}

define i32 @function_354() local_unnamed_addr {
dec_label_pc_354:
  %v0_354 = load i32, i32* @ebp, align 4
  %v1_354 = add i32 %v0_354, -44
  %v2_354 = inttoptr i32 %v1_354 to i32*
  %v3_354 = load i32, i32* %v2_354, align 4
  ret i32 %v3_354
}

define i32 @function_360() local_unnamed_addr {
dec_label_pc_360:
  %eax.global-to-local = alloca i32, align 4
  %v0_360 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_360
}

define i32 @function_38c() local_unnamed_addr {
dec_label_pc_38c:
  %eax.global-to-local = alloca i32, align 4
  %v0_38c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_38c
}

define i32 @function_3c6() local_unnamed_addr {
dec_label_pc_3c6:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3c6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3c6 = add i32 %v0_3c6, -195720232
  %v2_3c6 = inttoptr i32 %v1_3c6 to i32*
  %v3_3c6 = load i32, i32* %v2_3c6, align 4
  %v4_3c6 = add i32 %v3_3c6, -1
  store i32 %v4_3c6, i32* %v2_3c6, align 4
  %v0_3cc = load i32, i32* %edx.global-to-local, align 8
  %v3_3cc = xor i32 %v0_3cc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3cc = icmp eq i32 %v3_3cc, 0
  store i32 %v3_3cc, i32* %edx.global-to-local, align 8
  br i1 %v4_3cc, label %bb, label %dec_label_pc_3d5

bb:                                               ; preds = %dec_label_pc_3c6
  %v1_3d3 = call i32 @MAX_SCRIPTCHECK_THREADS()
  store i32 %v1_3d3, i32* @eax, align 8
  br label %dec_label_pc_3d5

dec_label_pc_3d5:                                 ; preds = %bb, %dec_label_pc_3c6
  %v0_3d5 = call i32 @function_41b()
  ret i32 %v0_3d5
}

define i32 @MAX_SCRIPT_ELEMENT_SIZE() local_unnamed_addr {
dec_label_pc_3d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_3d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3d8
}

define i32 @MAX_HASH_FUNCS() local_unnamed_addr {
dec_label_pc_3e4:
  %v0_3e4 = call i32 @function_406()
  ret i32 %v0_3e4
}

define i32 @function_3e7() local_unnamed_addr {
dec_label_pc_3e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_3e7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3e7
}

define i32 @function_3f3() local_unnamed_addr {
dec_label_pc_3f3:
  %v0_3f3 = call i32 @function_406()
  ret i32 %v0_3f3
}

define i32 @function_3f6() local_unnamed_addr {
dec_label_pc_3f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_3f6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3f6
}

define i32 @function_402() local_unnamed_addr {
dec_label_pc_402:
  %v0_402 = call i32 @function_406()
  ret i32 %v0_402

; uselistorder directives
  uselistorder i32 ()* @function_406, { 2, 1, 0 }
}

define i32 @function_405() local_unnamed_addr {
dec_label_pc_405:
  %eax.global-to-local = alloca i32, align 4
  %v0_405 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_405
}

define i32 @function_406() local_unnamed_addr {
dec_label_pc_406:
  %v0_406 = load i32, i32* @ebp, align 4
  %v1_406 = add i32 %v0_406, -28
  ret i32 %v1_406
}

define i32 @function_41b() local_unnamed_addr {
dec_label_pc_41b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @MAX_SCRIPTCHECK_THREADS() local_unnamed_addr {
dec_label_pc_420:
  %v0_424 = load i32, i32* @eax, align 8
  ret i32 %v0_424
}

define i1 @noui_ThreadSafeAskFee(i64 %arg0) local_unnamed_addr {
dec_label_pc_425:
  ret i1 true
}

define void @noui_InitMessage(i32 %message) local_unnamed_addr {
dec_label_pc_45a:
  ret void
}

define i32 @function_49c() local_unnamed_addr {
dec_label_pc_49c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_49c = load i32, i32* %ecx.global-to-local, align 4
  %v1_49c = add i32 %v0_49c, -1
  store i32 %v1_49c, i32* %ecx.global-to-local, align 4
  %v0_49e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_49e
}

define void @_Z12noui_connectv() local_unnamed_addr {
dec_label_pc_49f:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v2_4bc = ptrtoint i32* %stack_var_-124 to i32
  %v2_4c2 = call i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEEC1IS5_EERKT_(i32 %v2_4bc, i32 602)
  %v2_4c7 = ptrtoint i32* %stack_var_-40 to i32
  %v4_4e4 = call i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEE7connectERKNS0_5slot3IbS3_S3_jSA_EENS0_16connect_positionE(i32 %v2_4c7, i32 0, i32 %v2_4bc, i32 0)
  %v1_4f2 = call i32 @_ZN5boost8signals210connectionD1Ev(i32 %v2_4c7)
  %v1_4fd = call i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEED1Ev(i32 %v2_4bc)
  %v2_50a = ptrtoint i32* %stack_var_-96 to i32
  %v2_510 = call i32 @_ZN5boost8signals25slot1IbxNS_8functionIFbxEEEEC1IS3_EERKT_(i32 %v2_50a, i32 1061)
  ret void
}

define i32 @function_5ad() local_unnamed_addr {
dec_label_pc_5ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_5ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5ad
}

define i32 @function_5c4() local_unnamed_addr {
dec_label_pc_5c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_5c4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5c4
}

define i32 @function_5db() local_unnamed_addr {
dec_label_pc_5db:
  %eax.global-to-local = alloca i32, align 4
  %v0_5db = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5db
}

define i32 @function_5f1() local_unnamed_addr {
dec_label_pc_5f1:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_5f6() local_unnamed_addr {
dec_label_pc_5f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_5fa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_5fa
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_5fb:
  %v13_618 = icmp eq i32 %__initialize_p, 1
  %v1_61c = icmp eq i1 %v13_618, false
  br i1 %v1_61c, label %bb, label %dec_label_pc_622

bb:                                               ; preds = %dec_label_pc_5fb
  %v4_61c = call i32 @function_888(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_622

dec_label_pc_622:                                 ; preds = %bb, %dec_label_pc_5fb
  %v13_622 = icmp eq i32 %__priority, 65535
  %v1_629 = icmp eq i1 %v13_622, false
  br i1 %v1_629, label %bb9, label %dec_label_pc_62f

bb9:                                              ; preds = %dec_label_pc_622
  %v4_629 = call i32 @function_888(i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_62f

dec_label_pc_62f:                                 ; preds = %bb9, %dec_label_pc_622
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_888, { 1, 0 }
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_709() local_unnamed_addr {
dec_label_pc_709:
  %eax.global-to-local = alloca i32, align 4
  %v0_709 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_709
}

define i32 @function_713() local_unnamed_addr {
dec_label_pc_713:
  %eax.global-to-local = alloca i32, align 4
  %v0_713 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_713
}

define i32 @function_71d() local_unnamed_addr {
dec_label_pc_71d:
  %eax.global-to-local = alloca i32, align 4
  %v0_71d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_71d
}

define i32 @function_725() local_unnamed_addr {
dec_label_pc_725:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_725 = load i32, i32* %eax.global-to-local, align 8
  %v11_725 = and i32 %v0_725, -244
  store i32 %v11_725, i32* %eax.global-to-local, align 8
  %v1_727 = inttoptr i32 %v11_725 to i32*
  %v2_727 = load i32, i32* %v1_727, align 4
  %v4_727 = or i32 %v2_727, %v11_725
  store i32 %v4_727, i32* %v1_727, align 4
  %v0_729 = load i32, i32* %eax.global-to-local, align 8
  %v1_729 = trunc i32 %v0_729 to i8
  %v2_729 = load i32, i32* @ecx, align 4
  %v3_729 = udiv i32 %v2_729, 256
  %v4_729 = trunc i32 %v3_729 to i8
  %v5_729 = add i8 %v4_729, %v1_729
  %v0_72e = load i32, i32* %ebx.global-to-local, align 8
  %v1_72e = udiv i32 %v0_72e, 256
  %v2_72e = trunc i32 %v1_72e to i8
  %v5_72e = add i8 %v2_72e, %v5_729
  %v20_72e = zext i8 %v5_72e to i32
  %v22_72e = mul nuw nsw i32 %v20_72e, 256
  %v23_72e = and i32 %v0_72e, -65281
  %v24_72e = or i32 %v22_72e, %v23_72e
  store i32 %v24_72e, i32* @ebx, align 8
  %v2_730 = add i8 %v5_729, 36
  %v16_730 = zext i8 %v2_730 to i32
  %v18_730 = and i32 %v0_729, 402652928
  %v19_730 = or i32 %v18_730, %v16_730
  %v1_732 = or i32 %v19_730, -402653175
  store i32 %v1_732, i32* %eax.global-to-local, align 8
  %v1_739 = inttoptr i32 %v1_732 to i8*
  %v2_739 = load i8, i8* %v1_739, align 1
  %v4_739 = trunc i32 %v1_732 to i8
  %v5_739 = add i8 %v2_739, %v4_739
  store i8 %v5_739, i8* %v1_739, align 1
  %v1_742 = call i32 @_ZN5boost6spirit7classic12alnum_parserC1Ev(i32 2318)
  store i32 %v1_742, i32* %eax.global-to-local, align 8
  %v1_74e = call i32 @_ZN5boost6spirit7classic12alpha_parserC1Ev(i32 ptrtoint (i32* @global_var_90f.1910 to i32))
  store i32 %v1_74e, i32* %eax.global-to-local, align 8
  %v1_75a = call i32 @_ZN5boost6spirit7classic12cntrl_parserC1Ev(i32 ptrtoint (i32* @global_var_910.1911 to i32))
  store i32 %v1_75a, i32* %eax.global-to-local, align 8
  %v1_766 = call i32 @_ZN5boost6spirit7classic12digit_parserC1Ev(i32 2321)
  store i32 %v1_766, i32* %eax.global-to-local, align 8
  %v1_772 = call i32 @_ZN5boost6spirit7classic12graph_parserC1Ev(i32 2322)
  store i32 %v1_772, i32* %eax.global-to-local, align 8
  %v1_77e = call i32 @_ZN5boost6spirit7classic12lower_parserC1Ev(i32 ptrtoint (i32* @global_var_913.1912 to i32))
  store i32 %v1_77e, i32* %eax.global-to-local, align 8
  %v1_78a = call i32 @_ZN5boost6spirit7classic12print_parserC1Ev(i32 ptrtoint (i32* @global_var_914.1913 to i32))
  store i32 %v1_78a, i32* %eax.global-to-local, align 8
  %v1_796 = call i32 @_ZN5boost6spirit7classic12punct_parserC1Ev(i32 ptrtoint (i32* @global_var_915.1914 to i32))
  store i32 %v1_796, i32* %eax.global-to-local, align 8
  %v1_7a2 = call i32 @_ZN5boost6spirit7classic12blank_parserC1Ev(i32 ptrtoint (i32* @global_var_916.1915 to i32))
  store i32 %v1_7a2, i32* %eax.global-to-local, align 8
  %v1_7ae = call i32 @_ZN5boost6spirit7classic12space_parserC1Ev(i32 2327)
  store i32 %v1_7ae, i32* %eax.global-to-local, align 8
  %v1_7ba = call i32 @_ZN5boost6spirit7classic12upper_parserC1Ev(i32 2328)
  store i32 %v1_7ba, i32* %eax.global-to-local, align 8
  %v1_7c6 = call i32 @_ZN5boost6spirit7classic13xdigit_parserC1Ev(i32 ptrtoint (i32* @global_var_919.1916 to i32))
  store i32 %v1_7c6, i32* %eax.global-to-local, align 8
  %v1_7d2 = call i32 @_ZN5boost6spirit7classic10eol_parserC1Ev(i32 ptrtoint (i32* @global_var_91a.1917 to i32))
  store i32 %v1_7d2, i32* %eax.global-to-local, align 8
  %v1_7de = call i32 @_ZN5boost6spirit7classic10end_parserC1Ev(i32 2331)
  store i32 %v1_7de, i32* %eax.global-to-local, align 8
  %v1_7ea = call i32 @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev(i32 ptrtoint (i32* @global_var_91d.1918 to i32))
  store i32 %v1_7ea, i32* %eax.global-to-local, align 8
  %v1_7f6 = call i32 @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev(i32 ptrtoint (i32* @global_var_91e.1919 to i32))
  store i32 %v1_7f6, i32* %eax.global-to-local, align 8
  %v1_802 = call i32 @_ZN5boost6spirit7classic11sign_parserC1Ev(i32 2342)
  store i32 %v1_802, i32* @eax, align 8
  %v1_80e = call i32 @_ZN5boost6spirit7classic11real_parserIdNS1_21ureal_parser_policiesIdEEEC1Ev(i32 2343)
  store i32 %v1_80e, i32* %eax.global-to-local, align 8
  %v1_81a = call i32 @_ZN5boost6spirit7classic11real_parserIdNS1_20real_parser_policiesIdEEEC1Ev(i32 2344)
  store i32 %v1_81a, i32* %eax.global-to-local, align 8
  %v1_826 = call i32 @_ZN5boost6spirit7classic11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEC1Ev(i32 2345)
  store i32 %v1_826, i32* %eax.global-to-local, align 8
  %v1_832 = call i32 @_ZN5boost6spirit7classic11real_parserIdNS1_27strict_real_parser_policiesIdEEEC1Ev(i32 2346)
  store i32 %v1_832, i32* %eax.global-to-local, align 8
  %v1_83e = call i32 @_ZN5boost6spirit7classic14epsilon_parserC1Ev(i32 2348)
  store i32 %v1_83e, i32* %eax.global-to-local, align 8
  %v1_84a = call i32 @_ZN5boost6spirit7classic14epsilon_parserC1Ev(i32 2349)
  %v0_84f = load i32, i32* @ebp, align 4
  %v1_84f = add i32 %v0_84f, -15
  store i32 %v1_84f, i32* %eax.global-to-local, align 8
  %v2_85d = call i32 @_ZN5boost6spirit7classic18refactor_unary_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 2350, i32 %v1_84f)
  %v0_862 = load i32, i32* @ebp, align 4
  %v1_862 = add i32 %v0_862, -14
  store i32 %v1_862, i32* %eax.global-to-local, align 8
  %v2_870 = call i32 @_ZN5boost6spirit7classic19refactor_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 2351, i32 %v1_862)
  %v0_875 = load i32, i32* @ebp, align 4
  %v1_875 = add i32 %v0_875, -13
  store i32 %v1_875, i32* %eax.global-to-local, align 8
  %v2_883 = call i32 @_ZN5boost6spirit7classic17attach_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 2352, i32 %v1_875)
  store i32 %v2_883, i32* %eax.global-to-local, align 8
  ret i32 %v2_883

; uselistorder directives
  uselistorder i32 %v1_732, { 1, 2, 0 }
  uselistorder i32 %v0_72e, { 1, 0 }
  uselistorder i32 %v11_725, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32 (i32)* @_ZN5boost6spirit7classic14epsilon_parserC1Ev, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev, { 1, 0 }
}

define i32 @function_888(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_888:
  %v0_888 = load i32, i32* @ebp, align 4
  %v1_888 = add i32 %v0_888, -12
  %v2_888 = inttoptr i32 %v1_888 to i32*
  %v3_888 = load i32, i32* %v2_888, align 4
  %v3_88b = xor i32 %v3_888, ptrtoint ([3 x i8]* @3 to i32)
  %v4_88b = icmp eq i32 %v3_88b, 0
  store i32 %v3_88b, i32* @eax, align 8
  br i1 %v4_88b, label %bb, label %dec_label_pc_894

bb:                                               ; preds = %dec_label_pc_888
  %v1_892 = call i32 @function_899()
  br label %dec_label_pc_894

dec_label_pc_894:                                 ; preds = %bb, %dec_label_pc_888
  %v2_892 = phi i32 [ %v1_892, %bb ], [ %v3_88b, %dec_label_pc_888 ]
  ret i32 %v2_892
}

define i32 @function_899() local_unnamed_addr {
dec_label_pc_899:
  %v0_89a = load i32, i32* @eax, align 8
  ret i32 %v0_89a
}

define void @_GLOBAL__sub_I__Z12noui_connectv() local_unnamed_addr {
dec_label_pc_89b:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_8cc

bb:                                               ; preds = %dec_label_pc_89b
  %v1_8ca = call i32 @function_8d1()
  br label %dec_label_pc_8cc

dec_label_pc_8cc:                                 ; preds = %bb, %dec_label_pc_89b
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_8d1() local_unnamed_addr {
dec_label_pc_8d1:
  %v0_8d2 = load i32, i32* @eax, align 8
  ret i32 %v0_8d2
}

define i32 @_ZNSt9exceptionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f4:
  ret i32 %arg1
}

define i32 @_ZN5boost6spirit7classicL5hex_pE() local_unnamed_addr {
dec_label_pc_925:
  %eax.global-to-local = alloca i32, align 4
  %v0_926 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_926
}

define i32 @_ZNSt9bad_allocC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_928:
  store i32 %arg1, i32* @eax, align 8
  %v1_945 = call i32 @function_121c(i32 %arg1)
  ret i32 %arg1
}

define i32 @_ZnwjPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_966:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_992

bb:                                               ; preds = %dec_label_pc_966
  %v3_990 = call i32 @function_997(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_992

dec_label_pc_992:                                 ; preds = %bb, %dec_label_pc_966
  %v4_990 = phi i32 [ %v3_990, %bb ], [ %arg2, %dec_label_pc_966 ]
  ret i32 %v4_990
}

define i32 @function_997(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_997:
  %v0_998 = load i32, i32* @eax, align 8
  ret i32 %v0_998
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_999:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_9c2

bb:                                               ; preds = %dec_label_pc_999
  %v3_9c0 = call i32 @function_9c7(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_9c2

dec_label_pc_9c2:                                 ; preds = %bb, %dec_label_pc_999
  %v4_9c0 = phi i32 [ %v3_9c0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_999 ]
  ret i32 %v4_9c0
}

define i32 @function_9c7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c7:
  %v0_9c8 = load i32, i32* @eax, align 8
  ret i32 %v0_9c8
}

define i32 @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_9c9:
  %v1_9ee103 = add i32 %arg1, 8
  %v2_9ee104 = inttoptr i32 %v1_9ee103 to i32*
  %v3_9ee105 = load i32, i32* %v2_9ee104, align 4
  %v1_9f1106 = icmp eq i32 %v3_9ee105, 0
  %v1_9f3107 = icmp eq i1 %v1_9f1106, false
  %v5_9f6108 = icmp eq i1 %v1_9f3107, false
  %v1_9f8109 = icmp eq i1 %v5_9f6108, false
  store i32 %arg1, i32* @eax, align 8
  br i1 %v1_9f8109, label %dec_label_pc_9e2, label %dec_label_pc_9fa

dec_label_pc_9e2:                                 ; preds = %dec_label_pc_9c9, %dec_label_pc_9e2
  %v2_9ee110 = phi i32* [ %v2_9ee, %dec_label_pc_9e2 ], [ %v2_9ee104, %dec_label_pc_9c9 ]
  %v3_9e5 = load i32, i32* %v2_9ee110, align 4
  %v1_9ee = add i32 %v3_9e5, 8
  %v2_9ee = inttoptr i32 %v1_9ee to i32*
  %v3_9ee = load i32, i32* %v2_9ee, align 4
  %v1_9f1 = icmp eq i32 %v3_9ee, 0
  %v1_9f3 = icmp eq i1 %v1_9f1, false
  %v5_9f6 = icmp eq i1 %v1_9f3, false
  %v1_9f8 = icmp eq i1 %v5_9f6, false
  store i32 %v3_9e5, i32* @eax, align 8
  br i1 %v1_9f8, label %dec_label_pc_9e2, label %dec_label_pc_9fa

dec_label_pc_9fa:                                 ; preds = %dec_label_pc_9e2, %dec_label_pc_9c9
  %stack_var_-32.0.lcssa = phi i32 [ %arg1, %dec_label_pc_9c9 ], [ %v3_9e5, %dec_label_pc_9e2 ]
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_a09

bb:                                               ; preds = %dec_label_pc_9fa
  %v1_a07 = call i32 @function_a0e()
  br label %dec_label_pc_a09

dec_label_pc_a09:                                 ; preds = %bb, %dec_label_pc_9fa
  %v2_a07 = phi i32 [ %v1_a07, %bb ], [ %stack_var_-32.0.lcssa, %dec_label_pc_9fa ]
  ret i32 %v2_a07

; uselistorder directives
  uselistorder i32* %v2_9ee, { 1, 0 }
  uselistorder i32 %v3_9e5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_9e2, { 1, 0 }
}

define i32 @function_a0e() local_unnamed_addr {
dec_label_pc_a0e:
  %v0_a0f = load i32, i32* @eax, align 8
  ret i32 %v0_a0f
}

define i32 @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_a10:
  %ebp.global-to-local = alloca i32, align 4
  %v0_a10 = load i32, i32* %ebp.global-to-local, align 4
  %v1_a35103 = add i32 %arg1, 12
  %v2_a35104 = inttoptr i32 %v1_a35103 to i32*
  %v3_a35105 = load i32, i32* %v2_a35104, align 4
  %v1_a38106 = icmp eq i32 %v3_a35105, 0
  %v1_a3a107 = icmp eq i1 %v1_a38106, false
  %v5_a3d108 = icmp eq i1 %v1_a3a107, false
  %v1_a3f109 = icmp eq i1 %v5_a3d108, false
  br i1 %v1_a3f109, label %dec_label_pc_a29, label %dec_label_pc_a41

dec_label_pc_a29:                                 ; preds = %dec_label_pc_a10, %dec_label_pc_a29
  %v2_a35110 = phi i32* [ %v2_a35, %dec_label_pc_a29 ], [ %v2_a35104, %dec_label_pc_a10 ]
  %v3_a2c = load i32, i32* %v2_a35110, align 4
  %v1_a35 = add i32 %v3_a2c, 12
  %v2_a35 = inttoptr i32 %v1_a35 to i32*
  %v3_a35 = load i32, i32* %v2_a35, align 4
  %v1_a38 = icmp eq i32 %v3_a35, 0
  %v1_a3a = icmp eq i1 %v1_a38, false
  %v5_a3d = icmp eq i1 %v1_a3a, false
  %v1_a3f = icmp eq i1 %v5_a3d, false
  br i1 %v1_a3f, label %dec_label_pc_a29, label %dec_label_pc_a41

dec_label_pc_a41:                                 ; preds = %dec_label_pc_a29, %dec_label_pc_a10
  %v0_a56.lcssa = phi i32 [ %arg1, %dec_label_pc_a10 ], [ %v3_a2c, %dec_label_pc_a29 ]
  store i32 %v0_a10, i32* %ebp.global-to-local, align 4
  ret i32 %v0_a56.lcssa

; uselistorder directives
  uselistorder i32* %v2_a35, { 1, 0 }
  uselistorder label %dec_label_pc_a29, { 1, 0 }
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a58:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_a89

bb:                                               ; preds = %dec_label_pc_a58
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_a87 = call i32 @function_a8e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_a89

dec_label_pc_a89:                                 ; preds = %bb, %dec_label_pc_a58
  %v4_a87 = phi i32 [ %v3_a87, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_a58 ]
  ret i32 %v4_a87

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_a8e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a8e:
  %v0_a8f = load i32, i32* @eax, align 8
  ret i32 %v0_a8f
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a90:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ac1

bb:                                               ; preds = %dec_label_pc_a90
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_abf = call i32 @function_ac6(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_ac1

dec_label_pc_ac1:                                 ; preds = %bb, %dec_label_pc_a90
  %v4_abf = phi i32 [ %v3_abf, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_a90 ]
  ret i32 %v4_abf

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_ac6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ac6:
  %v0_ac7 = load i32, i32* @eax, align 8
  ret i32 %v0_ac7
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ac8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_ac8 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_ac8, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b00:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33ca4.1920 to i32), i32* %arg1, align 4
  %v1_b23 = add i32 %tmp100, 4
  store i32 %v1_b23, i32* @eax, align 8
  %v1_b29 = call i32 @function_109dc(i32 %v1_b23)
  %v1_b31 = add i32 %tmp100, 8
  %v2_b31 = inttoptr i32 %v1_b31 to i32*
  store i32 0, i32* %v2_b31, align 4
  %v1_b3b = add i32 %tmp100, 12
  %v2_b3b = inttoptr i32 %v1_b3b to i32*
  store i32 0, i32* %v2_b3b, align 4
  %v1_b45 = add i32 %tmp100, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_b45 = inttoptr i32 %v1_b45 to i32*
  store i32 -1, i32* %v2_b45, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_b58

bb:                                               ; preds = %dec_label_pc_b00
  %v1_b56 = call i32 @function_b5d()
  br label %dec_label_pc_b58

dec_label_pc_b58:                                 ; preds = %bb, %dec_label_pc_b00
  %v2_b56 = phi i32 [ %v1_b56, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_b00 ]
  ret i32 %v2_b56

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_b5d() local_unnamed_addr {
dec_label_pc_b5d:
  %v0_b5e = load i32, i32* @eax, align 8
  ret i32 %v0_b5e
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b60:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33ca4.1920 to i32), i32* %arg1, align 4
  %v1_b83 = add i32 %tmp99, 4
  store i32 %v1_b83, i32* @eax, align 8
  %v1_b89 = call i32 @function_10a70(i32 %v1_b83)
  %v1_b98 = call i32 @function_bbc()
  ret i32 %tmp99
}

define i32 @function_ba5() local_unnamed_addr {
dec_label_pc_ba5:
  %v0_ba5 = call i32 @function_bbc()
  ret i32 %v0_ba5

; uselistorder directives
  uselistorder i32 ()* @function_bbc, { 1, 0 }
}

define i32 @function_bbc() local_unnamed_addr {
dec_label_pc_bbc:
  %v0_bbc = load i32, i32* @ebp, align 4
  %v1_bbc = add i32 %v0_bbc, -12
  %v2_bbc = inttoptr i32 %v1_bbc to i32*
  %v3_bbc = load i32, i32* %v2_bbc, align 4
  %v3_bbf = xor i32 %v3_bbc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_bbf = icmp eq i32 %v3_bbf, 0
  store i32 %v3_bbf, i32* @eax, align 8
  br i1 %v4_bbf, label %bb, label %dec_label_pc_bc8

bb:                                               ; preds = %dec_label_pc_bbc
  %v1_bc6 = call i32 @function_bcd()
  br label %dec_label_pc_bc8

dec_label_pc_bc8:                                 ; preds = %bb, %dec_label_pc_bbc
  %v2_bc6 = phi i32 [ %v1_bc6, %bb ], [ %v3_bbf, %dec_label_pc_bbc ]
  ret i32 %v2_bc6
}

define i32 @function_bcd() local_unnamed_addr {
dec_label_pc_bcd:
  %v0_bce = load i32, i32* @eax, align 8
  ret i32 %v0_bce
}

define i32 @function_121c(i32 %arg1) local_unnamed_addr {
dec_label_pc_121c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be8:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c05 = call i32 @function_2748(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1c25() local_unnamed_addr {
dec_label_pc_1c25:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c25 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c25 = add i32 %v0_1c25, -1
  store i32 %v1_1c25, i32* %ecx.global-to-local, align 4
  %v0_1c27 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c27
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c28:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33c8c.1922 to i32), i32* %arg1, align 4
  %v2_1c52 = call i32 @function_1c5f(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_1c5f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5f:
  %v0_1c5f = load i32, i32* @ebp, align 4
  %v1_1c5f = add i32 %v0_1c5f, -12
  %v2_1c5f = inttoptr i32 %v1_1c5f to i32*
  %v3_1c5f = load i32, i32* %v2_1c5f, align 4
  %v3_1c62 = xor i32 %v3_1c5f, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1c62
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c72:
  store i32 %arg1, i32* @eax, align 8
  %v1_1c8f = call i32 @function_389a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1c9e() local_unnamed_addr {
dec_label_pc_1c9e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1c9e = load i32, i32* %ebx.global-to-local, align 8
  %v1_1c9e = add i32 %v0_1c9e, 862319685
  %v2_1c9e = inttoptr i32 %v1_1c9e to i32*
  %v3_1c9e = load i32, i32* %v2_1c9e, align 4
  %v4_1c9e = add i32 %v3_1c9e, -1
  store i32 %v4_1c9e, i32* %v2_1c9e, align 4
  %v0_1ca4 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ca4 = add i32 %v0_1ca4, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_1ca4, i32* %eax.global-to-local, align 8
  ret i32 %v1_1ca4
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb2:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_1cd0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1cd0, i32* %stack_var_-60, align 4
  %v1_1cd6 = call i32 @function_11b8e(i32 %v2_1cd0)
  %v1_1cde = add i32 %arg2, 4
  store i32 %v1_1cde, i32* @eax, align 8
  store i32 %v1_1cde, i32* %stack_var_-60, align 4
  %v1_1ce4 = call i32 @function_11bf8(i32 %v1_1cde)
  %v10_1cec = icmp eq i32 %v1_1ce4, 0
  br i1 %v10_1cec, label %dec_label_pc_1d2b, label %dec_label_pc_1cf2

dec_label_pc_1cf2:                                ; preds = %dec_label_pc_1cb2
  %v1_1cf5 = inttoptr i32 %v1_1ce4 to i32*
  %v2_1cf5 = load i32, i32* %v1_1cf5, align 4
  %v1_1cf7 = add i32 %v2_1cf5, ptrtoint (i8** @global_var_14.1904 to i32)
  %v1_1cfa = inttoptr i32 %v1_1cf7 to i32*
  %v2_1cfa = load i32, i32* %v1_1cfa, align 4
  store i32 %v2_1cfa, i32* @ecx, align 4
  %v2_1cfc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_1ce4, i32* %edx.global-to-local, align 8
  store i32 %v2_1cfc, i32* %stack_var_-60, align 4
  store i32 %v2_1cd0, i32* @eax, align 8
  store i32 %v2_1cd0, i32* %stack_var_-64, align 4
  %v3_1d1b = call i32 @function_11c28(i32 %v2_1cd0, i32 %v2_1cfc, i32 %v1_1ce4)
  store i32 %v2_1cfc, i32* @eax, align 8
  store i32 %v2_1cfc, i32* %stack_var_-64, align 4
  %v1_1d26 = call i32 @function_11bc2(i32 %v2_1cfc)
  br label %dec_label_pc_1d2b

dec_label_pc_1d2b:                                ; preds = %dec_label_pc_1cf2, %dec_label_pc_1cb2
  %stack_var_-56.0 = phi i32 [ %tmp97, %dec_label_pc_1cb2 ], [ %v1_1ce4, %dec_label_pc_1cf2 ]
  %v1_1d2e = add i32 %arg2, 12
  %v2_1d2e = inttoptr i32 %v1_1d2e to i32*
  %v3_1d2e = load i32, i32* %v2_1d2e, align 4
  store i32 %v3_1d2e, i32* %edx.global-to-local, align 8
  %v2_1d34 = add i32 %arg1, 12
  %v3_1d34 = inttoptr i32 %v2_1d34 to i32*
  store i32 %v3_1d2e, i32* %v3_1d34, align 4
  %v1_1d3a = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_1d3a = inttoptr i32 %v1_1d3a to i32*
  %v3_1d3a = load i32, i32* %v2_1d3a, align 4
  store i32 %v3_1d3a, i32* %edx.global-to-local, align 8
  %v2_1d40 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_1d40 = inttoptr i32 %v2_1d40 to i32*
  store i32 %v3_1d3a, i32* %v3_1d40, align 4
  %v1_1d46 = add i32 %arg2, 8
  %v2_1d46 = inttoptr i32 %v1_1d46 to i32*
  %v3_1d46 = load i32, i32* %v2_1d46, align 4
  %v2_1d4c = add i32 %arg1, 8
  %v3_1d4c = inttoptr i32 %v2_1d4c to i32*
  store i32 %v3_1d46, i32* %v3_1d4c, align 4
  %v1_1d52 = add i32 %arg1, 4
  store i32 %v1_1d52, i32* %edx.global-to-local, align 8
  store i32 %v2_1cd0, i32* @eax, align 8
  %v1_1d58 = load i32, i32* @esp, align 4
  %v2_1d58 = add i32 %v1_1d58, 4
  %v3_1d58 = inttoptr i32 %v2_1d58 to i32*
  store i32 %v2_1cd0, i32* %v3_1d58, align 4
  %v0_1d5c = load i32, i32* %edx.global-to-local, align 8
  %v1_1d5c = load i32, i32* @esp, align 4
  %v2_1d5c = inttoptr i32 %v1_1d5c to i32*
  store i32 %v0_1d5c, i32* %v2_1d5c, align 4
  %v0_1d5f = load i32, i32* %stack_var_-64, align 4
  %v1_1d5f = load i32, i32* %stack_var_-60, align 4
  %v3_1d5f = call i32 @function_11c28(i32 %v0_1d5f, i32 %v1_1d5f, i32 %stack_var_-56.0)
  store i32 %v2_1cd0, i32* @eax, align 8
  %v1_1d67 = load i32, i32* @esp, align 4
  %v2_1d67 = inttoptr i32 %v1_1d67 to i32*
  store i32 %v2_1cd0, i32* %v2_1d67, align 4
  %v0_1d6a = load i32, i32* %stack_var_-64, align 4
  %v1_1d6a = call i32 @function_11bc2(i32 %v0_1d6a)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1d7b

bb:                                               ; preds = %dec_label_pc_1d2b
  %v1_1d79 = call i32 @function_1da8()
  store i32 %v1_1d79, i32* @eax, align 8
  br label %dec_label_pc_1d7b

dec_label_pc_1d7b:                                ; preds = %bb, %dec_label_pc_1d2b
  %v0_1d7b = call i32 @function_1da3()
  ret i32 %v0_1d7b

; uselistorder directives
  uselistorder i32 %v2_1cfc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_1cd0, { 3, 4, 5, 6, 1, 0, 2, 8, 7 }
  uselistorder i32 (i32, i32, i32)* @function_11c28, { 1, 0 }
}

define i32 @function_1d7d() local_unnamed_addr {
dec_label_pc_1d7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d7d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1d7d, i32* @ebx, align 8
  %v0_1d7f = load i32, i32* @ebp, align 4
  %v1_1d7f = add i32 %v0_1d7f, -20
  store i32 %v1_1d7f, i32* @eax, align 8
  %v1_1d85 = call i32 @function_11bc2(i32 %v1_1d7f)
  store i32 %v1_1d85, i32* %eax.global-to-local, align 8
  %v0_1d8a = call i32 @function_1d8e()
  store i32 %v0_1d8a, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d8a
}

define i32 @function_1d8c() local_unnamed_addr {
dec_label_pc_1d8c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d8c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d8c
}

define i32 @function_1d8e() local_unnamed_addr {
dec_label_pc_1d8e:
  %v0_1d8e = load i32, i32* @ebp, align 4
  %v1_1d8e = add i32 %v0_1d8e, -24
  store i32 %v1_1d8e, i32* @eax, align 8
  %v1_1d94 = call i32 @function_11bc2(i32 %v1_1d8e)
  %v0_1d99 = load i32, i32* @ebx, align 8
  ret i32 %v0_1d99

; uselistorder directives
  uselistorder i32 (i32)* @function_11bc2, { 3, 2, 1, 0 }
}

define i32 @function_1da3() local_unnamed_addr {
dec_label_pc_1da3:
  %v0_1da3 = load i32, i32* @eax, align 8
  ret i32 %v0_1da3
}

define i32 @function_1da8() local_unnamed_addr {
dec_label_pc_1da8:
  %v0_1dac = load i32, i32* @eax, align 8
  ret i32 %v0_1dac
}

define i32 @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dad:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1dd0

bb:                                               ; preds = %dec_label_pc_1dad
  %v2_1dce = call i32 @function_1dd5(i32 %arg1)
  br label %dec_label_pc_1dd0

dec_label_pc_1dd0:                                ; preds = %bb, %dec_label_pc_1dad
  %v3_1dce = phi i32 [ %v2_1dce, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1dad ]
  ret i32 %v3_1dce
}

define i32 @function_1dd5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd5:
  %v0_1dd6 = load i32, i32* @eax, align 8
  ret i32 %v0_1dd6
}

define i32 @_ZNKSt9type_info4nameEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd8:
  %v1_1df2 = add i32 %arg1, 4
  %v2_1df2 = inttoptr i32 %v1_1df2 to i32*
  %v3_1df2 = load i32, i32* %v2_1df2, align 4
  %v1_1df5 = inttoptr i32 %v3_1df2 to i8*
  %v2_1df5 = load i8, i8* %v1_1df5, align 1
  %v11_1df8 = icmp eq i8 %v2_1df5, 42
  %v1_1dfa = icmp eq i1 %v11_1df8, false
  br i1 %v1_1dfa, label %dec_label_pc_1e0d, label %dec_label_pc_1dfc

dec_label_pc_1dfc:                                ; preds = %dec_label_pc_1dd8
  %v1_1e02 = add i32 %v3_1df2, 1
  br label %dec_label_pc_1e0d

dec_label_pc_1e0d:                                ; preds = %dec_label_pc_1dd8, %dec_label_pc_1dfc
  %storemerge = phi i32 [ %v1_1e02, %dec_label_pc_1dfc ], [ %v3_1df2, %dec_label_pc_1dd8 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e19

bb:                                               ; preds = %dec_label_pc_1e0d
  %v1_1e17 = call i32 @function_1e1e()
  br label %dec_label_pc_1e19

dec_label_pc_1e19:                                ; preds = %bb, %dec_label_pc_1e0d
  %v2_1e17 = phi i32 [ %v1_1e17, %bb ], [ %storemerge, %dec_label_pc_1e0d ]
  ret i32 %v2_1e17

; uselistorder directives
  uselistorder i32 %v3_1df2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e0d, { 1, 0 }
}

define i32 @function_1e1e() local_unnamed_addr {
dec_label_pc_1e1e:
  %v0_1e1f = load i32, i32* @eax, align 8
  ret i32 %v0_1e1f
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e20:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e20 = load i32, i32* %ebp.global-to-local, align 4
  %v0_1e23 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* %ebx.global-to-local, align 8
  %v2_1e49 = load i32, i32* %arg1, align 4
  %v4_1e49 = add i32 %v2_1e49, %arg2
  store i32 %v4_1e49, i32* %arg1, align 4
  store i32 %v0_1e23, i32* %ebx.global-to-local, align 8
  store i32 %v0_1e20, i32* %ebp.global-to-local, align 4
  ret i32 %v2_1e49

; uselistorder directives
  uselistorder i32 %v2_1e49, { 1, 0 }
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e6a:
  %v2_1e87 = load i32, i32* %arg1, align 4
  %v3_1e87 = add i32 %v2_1e87, 1
  store i32 %v3_1e87, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e96

bb:                                               ; preds = %dec_label_pc_1e6a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1e94 = call i32 @function_1e9b(i32 %tmp100)
  br label %dec_label_pc_1e96

dec_label_pc_1e96:                                ; preds = %bb, %dec_label_pc_1e6a
  %v3_1e94 = phi i32 [ %v2_1e94, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e6a ]
  ret i32 %v3_1e94

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_1e9b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9b:
  %v0_1e9c = load i32, i32* @eax, align 8
  ret i32 %v0_1e9c
}

define i32 @_ZN5boost6detail28atomic_conditional_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e9d:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  store i32 %tmp109, i32* %edx.global-to-local, align 8
  %v2_1ec2 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_1ec4

dec_label_pc_1ec4:                                ; preds = %dec_label_pc_1ec8, %dec_label_pc_1e9d
  %v0_1ec8 = phi i32 [ %v2_1ecb, %dec_label_pc_1ec8 ], [ %v2_1ec2, %dec_label_pc_1e9d ]
  %v1_1ec4 = icmp eq i32 %v0_1ec8, 0
  br i1 %v1_1ec4, label %dec_label_pc_1ed1, label %dec_label_pc_1ec8

dec_label_pc_1ec8:                                ; preds = %dec_label_pc_1ec4
  %v1_1eca = add i32 %v0_1ec8, 1
  store i32 %v1_1eca, i32* %ebx.global-to-local, align 8
  %v0_1ecb = load i32, i32* %edx.global-to-local, align 8
  %v1_1ecb = inttoptr i32 %v0_1ecb to i32*
  %v2_1ecb = load i32, i32* %v1_1ecb, align 4
  %v15_1ecb = icmp eq i32 %v0_1ec8, %v2_1ecb
  %v22_1ecb = select i1 %v15_1ecb, i32 %v1_1eca, i32 %v2_1ecb
  store i32 %v22_1ecb, i32* %v1_1ecb, align 4
  %v1_1ecf = icmp eq i1 %v15_1ecb, false
  br i1 %v1_1ecf, label %dec_label_pc_1ec4, label %dec_label_pc_1ed1

dec_label_pc_1ed1:                                ; preds = %dec_label_pc_1ec8, %dec_label_pc_1ec4
  %v0_1ed1 = phi i32 [ %v0_1ec8, %dec_label_pc_1ec8 ], [ 0, %dec_label_pc_1ec4 ]
  %v0_1ed6 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_1ed1, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ee8

bb:                                               ; preds = %dec_label_pc_1ed1
  %v3_1ee6 = call i32 @function_1eed(i32 %v0_1ed1, i32 %v0_1ed6)
  br label %dec_label_pc_1ee8

dec_label_pc_1ee8:                                ; preds = %bb, %dec_label_pc_1ed1
  %v4_1ee6 = phi i32 [ %v3_1ee6, %bb ], [ %v0_1ed1, %dec_label_pc_1ed1 ]
  ret i32 %v4_1ee6

; uselistorder directives
  uselistorder i32 %v0_1ed1, { 0, 2, 1 }
  uselistorder i1 %v15_1ecb, { 1, 0 }
  uselistorder i32 %v2_1ecb, { 2, 0, 1 }
  uselistorder i32 %v0_1ec8, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1eed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eed:
  %v0_1ef3 = load i32, i32* @eax, align 8
  ret i32 %v0_1ef3
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ef4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33c6c.1923 to i32), i32* %arg1, align 4
  %v1_1f17 = add i32 %tmp100, 4
  %v2_1f17 = inttoptr i32 %v1_1f17 to i32*
  store i32 1, i32* %v2_1f17, align 4
  %v1_1f21 = add i32 %tmp100, 8
  %v2_1f21 = inttoptr i32 %v1_1f21 to i32*
  store i32 1, i32* %v2_1f21, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f34

bb:                                               ; preds = %dec_label_pc_1ef4
  %v2_1f32 = call i32 @function_1f39(i32 %tmp100)
  br label %dec_label_pc_1f34

dec_label_pc_1f34:                                ; preds = %bb, %dec_label_pc_1ef4
  %v3_1f32 = phi i32 [ %v2_1f32, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ef4 ]
  ret i32 %v3_1f32
}

define i32 @function_1f39(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f39:
  %v0_1f3a = load i32, i32* @eax, align 8
  ret i32 %v0_1f3a
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f3c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33c6c.1923 to i32), i32* %arg1, align 4
  %v2_1f66 = call i32 @function_1f73(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_1f73(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f73:
  %v0_1f73 = load i32, i32* @ebp, align 4
  %v1_1f73 = add i32 %v0_1f73, -12
  %v2_1f73 = inttoptr i32 %v1_1f73 to i32*
  %v3_1f73 = load i32, i32* %v2_1f73, align 4
  %v3_1f76 = xor i32 %v3_1f73, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1f76
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f86:
  store i32 %arg1, i32* @eax, align 8
  %v1_1fa3 = call i32 @function_3ec2(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1fb2() local_unnamed_addr {
dec_label_pc_1fb2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1fb2 = load i32, i32* %ebx.global-to-local, align 8
  %v1_1fb2 = add i32 %v0_1fb2, 862319685
  %v2_1fb2 = inttoptr i32 %v1_1fb2 to i32*
  %v3_1fb2 = load i32, i32* %v2_1fb2, align 4
  %v4_1fb2 = add i32 %v3_1fb2, -1
  store i32 %v4_1fb2, i32* %v2_1fb2, align 4
  %v0_1fb8 = load i32, i32* %eax.global-to-local, align 8
  %v1_1fb8 = add i32 %v0_1fb8, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_1fb8, i32* %eax.global-to-local, align 8
  ret i32 %v1_1fb8
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_1fc6:
  %v10_1fdd = icmp eq i32* %arg1, null
  br i1 %v10_1fdd, label %dec_label_pc_1ff5, label %dec_label_pc_1fe3

dec_label_pc_1fe3:                                ; preds = %dec_label_pc_1fc6
  br label %dec_label_pc_1ff5

dec_label_pc_1ff5:                                ; preds = %dec_label_pc_1fe3, %dec_label_pc_1fc6
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2001

bb:                                               ; preds = %dec_label_pc_1ff5
  %v1_1fff = call i32 @function_2006()
  br label %dec_label_pc_2001

dec_label_pc_2001:                                ; preds = %bb, %dec_label_pc_1ff5
  %v2_1fff = phi i32 [ %v1_1fff, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ff5 ]
  ret i32 %v2_1fff
}

define i32 @function_2006() local_unnamed_addr {
dec_label_pc_2006:
  %v0_2007 = load i32, i32* @eax, align 8
  ret i32 %v0_2007
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2008:
  %v1_2022 = add i32 %arg1, 4
  store i32 %v1_2022, i32* @eax, align 8
  %v1_2028 = call i32 @function_3e72(i32 %v1_2022)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2039

bb:                                               ; preds = %dec_label_pc_2008
  %v1_2037 = call i32 @function_203e()
  br label %dec_label_pc_2039

dec_label_pc_2039:                                ; preds = %bb, %dec_label_pc_2008
  %v2_2037 = phi i32 [ %v1_2037, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2008 ]
  ret i32 %v2_2037
}

define i32 @function_203e() local_unnamed_addr {
dec_label_pc_203e:
  %v0_203f = load i32, i32* @eax, align 8
  ret i32 %v0_203f
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2040:
  %v1_205a = add i32 %arg1, 4
  store i32 %v1_205a, i32* @eax, align 8
  %v1_2060 = call i32 @function_3edd(i32 %v1_205a)
  %v1_2065 = icmp eq i32 %v1_2060, 0
  %v1_2067 = icmp eq i1 %v1_2065, false
  %v2_2067 = zext i1 %v1_2067 to i32
  %v4_2067 = and i32 %v1_2060, -256
  %v5_2067 = or i32 %v2_2067, %v4_2067
  store i32 %v5_2067, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2076

bb:                                               ; preds = %dec_label_pc_2040
  %v1_2074 = call i32 @function_207b()
  br label %dec_label_pc_2076

dec_label_pc_2076:                                ; preds = %bb, %dec_label_pc_2040
  %v2_2074 = phi i32 [ %v1_2074, %bb ], [ %v5_2067, %dec_label_pc_2040 ]
  ret i32 %v2_2074
}

define i32 @function_207b() local_unnamed_addr {
dec_label_pc_207b:
  %v0_207c = load i32, i32* @eax, align 8
  ret i32 %v0_207c
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_207e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2098 = add i32 %tmp102, 4
  store i32 %v1_2098, i32* @eax, align 8
  %v2_20a6 = call i32 @function_3e9e(i32 %v1_2098, i32 -1)
  %v10_20ab = icmp eq i32 %v2_20a6, 1
  %v5_20b1 = icmp eq i1 %v10_20ab, false
  br i1 %v5_20b1, label %dec_label_pc_20d2, label %dec_label_pc_20b5

dec_label_pc_20b5:                                ; preds = %dec_label_pc_207e
  store i32 %tmp102, i32* @eax, align 8
  %v1_20cd = call i32 @function_419c(i32 %tmp102)
  br label %dec_label_pc_20d2

dec_label_pc_20d2:                                ; preds = %dec_label_pc_20b5, %dec_label_pc_207e
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20de

bb:                                               ; preds = %dec_label_pc_20d2
  %v1_20dc = call i32 @function_20e3()
  br label %dec_label_pc_20de

dec_label_pc_20de:                                ; preds = %bb, %dec_label_pc_20d2
  %v2_20dc = phi i32 [ %v1_20dc, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_20d2 ]
  ret i32 %v2_20dc

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0, 2 }
}

define i32 @function_20e3() local_unnamed_addr {
dec_label_pc_20e3:
  %v0_20e4 = load i32, i32* @eax, align 8
  ret i32 %v0_20e4
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_add_refEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20e6:
  %v1_2100 = add i32 %arg1, 8
  store i32 %v1_2100, i32* @eax, align 8
  %v1_2106 = call i32 @function_3f50(i32 %v1_2100)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_211e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2138 = add i32 %tmp102, 8
  store i32 %v1_2138, i32* @eax, align 8
  %v2_2146 = call i32 @function_3f3e(i32 %v1_2138, i32 -1)
  %v10_214b = icmp eq i32 %v2_2146, 1
  %v5_2151 = icmp eq i1 %v10_214b, false
  br i1 %v5_2151, label %dec_label_pc_2167, label %dec_label_pc_2155

dec_label_pc_2155:                                ; preds = %dec_label_pc_211e
  br label %dec_label_pc_2167

dec_label_pc_2167:                                ; preds = %dec_label_pc_2155, %dec_label_pc_211e
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost6detail15sp_counted_base9use_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_217a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2194 = add i32 %tmp100, 4
  %v1_2197 = inttoptr i32 %v1_2194 to i32*
  %v2_2197 = load i32, i32* %v1_2197, align 4
  store i32 %v2_2197, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21a5

bb:                                               ; preds = %dec_label_pc_217a
  %v2_21a3 = call i32 @function_21aa(i32 %tmp100)
  br label %dec_label_pc_21a5

dec_label_pc_21a5:                                ; preds = %bb, %dec_label_pc_217a
  %v3_21a3 = phi i32 [ %v2_21a3, %bb ], [ %v2_2197, %dec_label_pc_217a ]
  ret i32 %v3_21a3
}

define i32 @function_21aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_21aa:
  %v0_21ab = load i32, i32* @eax, align 8
  ret i32 %v0_21ab
}

define i32 @_ZN5boost6detail12shared_countC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21ac:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21d8

bb:                                               ; preds = %dec_label_pc_21ac
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_21d6 = call i32 @function_21dd(i32 %tmp102)
  br label %dec_label_pc_21d8

dec_label_pc_21d8:                                ; preds = %bb, %dec_label_pc_21ac
  %v3_21d6 = phi i32 [ %v2_21d6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_21ac ]
  ret i32 %v3_21d6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_21dd:
  %v0_21de = load i32, i32* @eax, align 8
  ret i32 %v0_21de
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21e0:
  %v2_21fa = load i32, i32* %arg1, align 4
  %v1_21fc = icmp eq i32 %v2_21fa, 0
  br i1 %v1_21fc, label %dec_label_pc_220d, label %dec_label_pc_2200

dec_label_pc_2200:                                ; preds = %dec_label_pc_21e0
  %v2_2203 = load i32, i32* %arg1, align 4
  store i32 %v2_2203, i32* @eax, align 8
  %v1_2208 = call i32 @function_425e(i32 %v2_2203)
  br label %dec_label_pc_220d

dec_label_pc_220d:                                ; preds = %dec_label_pc_2200, %dec_label_pc_21e0
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2219

bb:                                               ; preds = %dec_label_pc_220d
  %v1_2217 = call i32 @function_221e()
  br label %dec_label_pc_2219

dec_label_pc_2219:                                ; preds = %bb, %dec_label_pc_220d
  %v2_2217 = phi i32 [ %v1_2217, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_220d ]
  ret i32 %v2_2217
}

define i32 @function_221e() local_unnamed_addr {
dec_label_pc_221e:
  %v0_221f = load i32, i32* @eax, align 8
  ret i32 %v0_221f
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2220:
  %v1_2240 = inttoptr i32 %arg2 to i32*
  %v2_2240 = load i32, i32* %v1_2240, align 4
  store i32 %v2_2240, i32* %arg1, align 4
  %v1_224c = icmp eq i32 %v2_2240, 0
  br i1 %v1_224c, label %dec_label_pc_225d, label %dec_label_pc_2250

dec_label_pc_2250:                                ; preds = %dec_label_pc_2220
  %v2_2253 = load i32, i32* %arg1, align 4
  store i32 %v2_2253, i32* @eax, align 8
  %v1_2258 = call i32 @function_4228(i32 %v2_2253)
  br label %dec_label_pc_225d

dec_label_pc_225d:                                ; preds = %dec_label_pc_2250, %dec_label_pc_2220
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2269

bb:                                               ; preds = %dec_label_pc_225d
  %v1_2267 = call i32 @function_226e()
  br label %dec_label_pc_2269

dec_label_pc_2269:                                ; preds = %bb, %dec_label_pc_225d
  %v2_2267 = phi i32 [ %v1_2267, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_225d ]
  ret i32 %v2_2267
}

define i32 @function_226e() local_unnamed_addr {
dec_label_pc_226e:
  %v0_226f = load i32, i32* @eax, align 8
  ret i32 %v0_226f
}

define i32 @_ZN5boost6detail12shared_count4swapERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2270:
  %v1_2290 = inttoptr i32 %arg2 to i32*
  %v2_2290 = load i32, i32* %v1_2290, align 4
  %v2_2298 = load i32, i32* %arg1, align 4
  store i32 %v2_2298, i32* %v1_2290, align 4
  store i32 %v2_2290, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22b3

bb:                                               ; preds = %dec_label_pc_2270
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_22b1 = call i32 @function_22b8(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_22b3

dec_label_pc_22b3:                                ; preds = %bb, %dec_label_pc_2270
  %v4_22b1 = phi i32 [ %v3_22b1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2270 ]
  ret i32 %v4_22b1

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_22b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b8:
  %v0_22b9 = load i32, i32* @eax, align 8
  ret i32 %v0_22b9
}

define i32 @_ZNK5boost6detail12shared_count9use_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22ba:
  %v2_22d4 = load i32, i32* %arg1, align 4
  %v1_22d6 = icmp eq i32 %v2_22d4, 0
  br i1 %v1_22d6, label %dec_label_pc_22ee, label %dec_label_pc_22da

dec_label_pc_22da:                                ; preds = %dec_label_pc_22ba
  %v2_22dd = load i32, i32* %arg1, align 4
  store i32 %v2_22dd, i32* @eax, align 8
  %v1_22e2 = call i32 @function_4434(i32 %v2_22dd)
  br label %dec_label_pc_22ee

dec_label_pc_22ee:                                ; preds = %dec_label_pc_22ba, %dec_label_pc_22da
  %storemerge = phi i32 [ %v1_22e2, %dec_label_pc_22da ], [ 0, %dec_label_pc_22ba ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22fa

bb:                                               ; preds = %dec_label_pc_22ee
  %v1_22f8 = call i32 @function_22ff()
  br label %dec_label_pc_22fa

dec_label_pc_22fa:                                ; preds = %bb, %dec_label_pc_22ee
  %v2_22f8 = phi i32 [ %v1_22f8, %bb ], [ %storemerge, %dec_label_pc_22ee ]
  ret i32 %v2_22f8

; uselistorder directives
  uselistorder label %dec_label_pc_22ee, { 1, 0 }
}

define i32 @function_22ff() local_unnamed_addr {
dec_label_pc_22ff:
  %v0_2300 = load i32, i32* @eax, align 8
  ret i32 %v0_2300
}

define i32 @_ZNK5boost6detail12shared_count6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2302:
  store i32 %arg1, i32* @eax, align 8
  %v1_231f = call i32 @function_45bc(i32 %arg1)
  %v10_2324 = icmp eq i32 %v1_231f, 1
  %v1_2327 = zext i1 %v10_2324 to i32
  %v3_2327 = and i32 %v1_231f, -256
  %v4_2327 = or i32 %v1_2327, %v3_2327
  store i32 %v4_2327, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2336

bb:                                               ; preds = %dec_label_pc_2302
  %v1_2334 = call i32 @function_233b()
  br label %dec_label_pc_2336

dec_label_pc_2336:                                ; preds = %bb, %dec_label_pc_2302
  %v2_2334 = phi i32 [ %v1_2334, %bb ], [ %v4_2327, %dec_label_pc_2302 ]
  ret i32 %v2_2334

; uselistorder directives
  uselistorder i32 %v1_231f, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_233b() local_unnamed_addr {
dec_label_pc_233b:
  %v0_233c = load i32, i32* @eax, align 8
  ret i32 %v0_233c
}

define i32 @_ZNK5boost6detail12shared_count5emptyEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_233e:
  %v2_2358 = load i32, i32* %arg1, align 4
  %v1_235a = icmp eq i32 %v2_2358, 0
  %v1_235c = zext i1 %v1_235a to i32
  %v3_235c = and i32 %v2_2358, -256
  %v4_235c = or i32 %v1_235c, %v3_235c
  store i32 %v4_235c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_236b

bb:                                               ; preds = %dec_label_pc_233e
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_2369 = call i32 @function_2370(i32 %tmp101)
  br label %dec_label_pc_236b

dec_label_pc_236b:                                ; preds = %bb, %dec_label_pc_233e
  %v3_2369 = phi i32 [ %v2_2369, %bb ], [ %v4_235c, %dec_label_pc_233e ]
  ret i32 %v3_2369

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2370(i32 %arg1) local_unnamed_addr {
dec_label_pc_2370:
  %v0_2371 = load i32, i32* @eax, align 8
  ret i32 %v0_2371
}

define i32 @_ZN5boost6detail10weak_countC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2372:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_239e

bb:                                               ; preds = %dec_label_pc_2372
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_239c = call i32 @function_23a3(i32 %tmp102)
  br label %dec_label_pc_239e

dec_label_pc_239e:                                ; preds = %bb, %dec_label_pc_2372
  %v3_239c = phi i32 [ %v2_239c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2372 ]
  ret i32 %v3_239c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_23a3:
  %v0_23a4 = load i32, i32* @eax, align 8
  ret i32 %v0_23a4
}

define i32 @_ZN5boost6detail10weak_countC1ERKNS0_12shared_countE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23a6:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_23a6 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_23a6, i32* %stack_var_-4, align 4
  %v4_23a6 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_23a6, i32* %ebp.global-to-local, align 4
  %v1_23c6 = inttoptr i32 %arg2 to i32*
  %v2_23c6 = load i32, i32* %v1_23c6, align 4
  store i32 %v2_23c6, i32* %arg1, align 4
  %v1_23d2 = icmp eq i32 %v2_23c6, 0
  br i1 %v1_23d2, label %dec_label_pc_23e3, label %dec_label_pc_23d6

dec_label_pc_23d6:                                ; preds = %dec_label_pc_23a6
  %v2_23d9 = load i32, i32* %arg1, align 4
  store i32 %v2_23d9, i32* @eax, align 8
  %v1_23de = call i32 @function_448c(i32 %v2_23d9)
  %v2_23f4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_23e3

dec_label_pc_23e3:                                ; preds = %dec_label_pc_23d6, %dec_label_pc_23a6
  %v2_23f4 = phi i32 [ %v2_23f4.pre, %dec_label_pc_23d6 ], [ %v0_23a6, %dec_label_pc_23a6 ]
  store i32 %v2_23f4, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail10weak_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23f6:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_23f6 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_23f6, i32* %stack_var_-4, align 4
  %v4_23f6 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_23f6, i32* %ebp.global-to-local, align 4
  %v1_2416 = inttoptr i32 %arg2 to i32*
  %v2_2416 = load i32, i32* %v1_2416, align 4
  store i32 %v2_2416, i32* %arg1, align 4
  %v1_2422 = icmp eq i32 %v2_2416, 0
  br i1 %v1_2422, label %dec_label_pc_2433, label %dec_label_pc_2426

dec_label_pc_2426:                                ; preds = %dec_label_pc_23f6
  %v2_2429 = load i32, i32* %arg1, align 4
  store i32 %v2_2429, i32* @eax, align 8
  %v1_242e = call i32 @function_44dc(i32 %v2_2429)
  %v2_2444.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_2433

dec_label_pc_2433:                                ; preds = %dec_label_pc_2426, %dec_label_pc_23f6
  %v2_2444 = phi i32 [ %v2_2444.pre, %dec_label_pc_2426 ], [ %v0_23f6, %dec_label_pc_23f6 ]
  store i32 %v2_2444, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail10weak_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2446:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_2446 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_2446, i32* %stack_var_-4, align 4
  %v4_2446 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_2446, i32* %ebp.global-to-local, align 4
  %v2_2460 = load i32, i32* %arg1, align 4
  %v1_2462 = icmp eq i32 %v2_2460, 0
  br i1 %v1_2462, label %dec_label_pc_2473, label %dec_label_pc_2466

dec_label_pc_2466:                                ; preds = %dec_label_pc_2446
  %v2_2469 = load i32, i32* %arg1, align 4
  store i32 %v2_2469, i32* @eax, align 8
  %v1_246e = call i32 @function_4564(i32 %v2_2469)
  %v2_2484.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_2473

dec_label_pc_2473:                                ; preds = %dec_label_pc_2466, %dec_label_pc_2446
  %v2_2484 = phi i32 [ %v2_2484.pre, %dec_label_pc_2466 ], [ %v0_2446, %dec_label_pc_2446 ]
  store i32 %v2_2484, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost6detail10weak_count9use_countEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2486:
  %v2_24a0 = load i32, i32* %arg1, align 4
  %v1_24a2 = icmp eq i32 %v2_24a0, 0
  br i1 %v1_24a2, label %dec_label_pc_24ba, label %dec_label_pc_24a6

dec_label_pc_24a6:                                ; preds = %dec_label_pc_2486
  %v2_24a9 = load i32, i32* %arg1, align 4
  store i32 %v2_24a9, i32* @eax, align 8
  %v1_24ae = call i32 @function_4600(i32 %v2_24a9)
  br label %dec_label_pc_24ba

dec_label_pc_24ba:                                ; preds = %dec_label_pc_2486, %dec_label_pc_24a6
  %storemerge = phi i32 [ %v1_24ae, %dec_label_pc_24a6 ], [ 0, %dec_label_pc_2486 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24c6

bb:                                               ; preds = %dec_label_pc_24ba
  %v1_24c4 = call i32 @function_24cb()
  br label %dec_label_pc_24c6

dec_label_pc_24c6:                                ; preds = %bb, %dec_label_pc_24ba
  %v2_24c4 = phi i32 [ %v1_24c4, %bb ], [ %storemerge, %dec_label_pc_24ba ]
  ret i32 %v2_24c4

; uselistorder directives
  uselistorder label %dec_label_pc_24ba, { 1, 0 }
}

define i32 @function_24cb() local_unnamed_addr {
dec_label_pc_24cb:
  %v0_24cc = load i32, i32* @eax, align 8
  ret i32 %v0_24cc
}

define i32 @_ZN5boost6detail12shared_countC1ERKNS0_10weak_countENS0_14sp_nothrow_tagE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24ce:
  %v1_24f5 = inttoptr i32 %arg2 to i32*
  %v2_24f5 = load i32, i32* %v1_24f5, align 4
  store i32 %v2_24f5, i32* %arg1, align 4
  %v1_2501 = icmp eq i32 %v2_24f5, 0
  br i1 %v1_2501, label %dec_label_pc_2520, label %dec_label_pc_2505

dec_label_pc_2505:                                ; preds = %dec_label_pc_24ce
  %v2_2508 = load i32, i32* %arg1, align 4
  store i32 %v2_2508, i32* @eax, align 8
  %v1_250d = call i32 @function_450e(i32 %v2_2508)
  %v1_2512 = xor i32 %v1_250d, 1
  %v4_2512 = trunc i32 %v1_2512 to i8
  %v5_2515 = icmp eq i8 %v4_2512, 0
  br i1 %v5_2515, label %dec_label_pc_2520, label %dec_label_pc_2525

dec_label_pc_2520:                                ; preds = %dec_label_pc_2505, %dec_label_pc_24ce
  br label %dec_label_pc_2525

dec_label_pc_2525:                                ; preds = %dec_label_pc_2505, %dec_label_pc_2520
  %storemerge = phi i1 [ true, %dec_label_pc_2520 ], [ false, %dec_label_pc_2505 ]
  br i1 %storemerge, label %dec_label_pc_2532, label %dec_label_pc_2529

dec_label_pc_2529:                                ; preds = %dec_label_pc_2525
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_2532

dec_label_pc_2532:                                ; preds = %dec_label_pc_2529, %dec_label_pc_2525
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_253e

bb:                                               ; preds = %dec_label_pc_2532
  %v1_253c = call i32 @function_2543()
  br label %dec_label_pc_253e

dec_label_pc_253e:                                ; preds = %bb, %dec_label_pc_2532
  %v2_253c = phi i32 [ %v1_253c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2532 ]
  ret i32 %v2_253c

; uselistorder directives
  uselistorder label %dec_label_pc_2525, { 1, 0 }
}

define i32 @function_2543() local_unnamed_addr {
dec_label_pc_2543:
  %v0_2544 = load i32, i32* @eax, align 8
  ret i32 %v0_2544
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_2545:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2562

bb:                                               ; preds = %dec_label_pc_2545
  %v2_2560 = call i32 @function_2567(i32 ptrtoint (i32* @global_var_14a1.1905 to i32))
  br label %dec_label_pc_2562

dec_label_pc_2562:                                ; preds = %bb, %dec_label_pc_2545
  %v3_2560 = phi i32 [ %v2_2560, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2545 ]
  ret i32 %v3_2560
}

define i32 @function_2567(i32 %arg1) local_unnamed_addr {
dec_label_pc_2567:
  %v0_2568 = load i32, i32* @eax, align 8
  ret i32 %v0_2568
}

define i32 @_ZN5boost12noncopyable_11noncopyableC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_256a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_258d

bb:                                               ; preds = %dec_label_pc_256a
  %v2_258b = call i32 @function_2592(i32 %arg1)
  br label %dec_label_pc_258d

dec_label_pc_258d:                                ; preds = %bb, %dec_label_pc_256a
  %v3_258b = phi i32 [ %v2_258b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_256a ]
  ret i32 %v3_258b
}

define i32 @function_2592(i32 %arg1) local_unnamed_addr {
dec_label_pc_2592:
  %v0_2593 = load i32, i32* @eax, align 8
  ret i32 %v0_2593
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2594:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25b7

bb:                                               ; preds = %dec_label_pc_2594
  %v2_25b5 = call i32 @function_25bc(i32 %arg1)
  br label %dec_label_pc_25b7

dec_label_pc_25b7:                                ; preds = %bb, %dec_label_pc_2594
  %v3_25b5 = phi i32 [ %v2_25b5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2594 ]
  ret i32 %v3_25b5
}

define i32 @function_25bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_25bc:
  %v0_25bd = load i32, i32* @eax, align 8
  ret i32 %v0_25bd
}

define i32 @function_2748(i32 %arg1) local_unnamed_addr {
dec_label_pc_2748:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_389a(i32 %arg1) local_unnamed_addr {
dec_label_pc_389a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e72(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e72:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3e9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3e9e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3ec2(i32 %arg1) local_unnamed_addr {
dec_label_pc_3ec2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3edd(i32 %arg1) local_unnamed_addr {
dec_label_pc_3edd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3f3e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3f3e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_3f50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_419c(i32 %arg1) local_unnamed_addr {
dec_label_pc_419c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4228(i32 %arg1) local_unnamed_addr {
dec_label_pc_4228:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_425e(i32 %arg1) local_unnamed_addr {
dec_label_pc_425e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4434(i32 %arg1) local_unnamed_addr {
dec_label_pc_4434:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_448c(i32 %arg1) local_unnamed_addr {
dec_label_pc_448c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_44dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_44dc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_450e(i32 %arg1) local_unnamed_addr {
dec_label_pc_450e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4564(i32 %arg1) local_unnamed_addr {
dec_label_pc_4564:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_45bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_45bc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_4600(i32 %arg1) local_unnamed_addr {
dec_label_pc_4600:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e06c:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33ca4.1920 to i32), i32* %arg1, align 4
  %v1_e095 = add i32 %arg2, 4
  %v1_e09b = add i32 %tmp103, 4
  %v2_e0a5 = call i32 @function_1e22c(i32 %v1_e09b, i32 %v1_e095)
  %v1_e0ad = add i32 %arg2, 8
  %v2_e0ad = inttoptr i32 %v1_e0ad to i32*
  %v3_e0ad = load i32, i32* %v2_e0ad, align 4
  %v2_e0b3 = add i32 %tmp103, 8
  %v3_e0b3 = inttoptr i32 %v2_e0b3 to i32*
  store i32 %v3_e0ad, i32* %v3_e0b3, align 4
  %v1_e0b9 = add i32 %arg2, 12
  %v2_e0b9 = inttoptr i32 %v1_e0b9 to i32*
  %v3_e0b9 = load i32, i32* %v2_e0b9, align 4
  %v2_e0bf = add i32 %tmp103, 12
  %v3_e0bf = inttoptr i32 %v2_e0bf to i32*
  store i32 %v3_e0b9, i32* %v3_e0bf, align 4
  %v1_e0c5 = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_e0c5 = inttoptr i32 %v1_e0c5 to i32*
  %v3_e0c5 = load i32, i32* %v2_e0c5, align 4
  %v2_e0cb = add i32 %tmp103, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_e0cb = inttoptr i32 %v2_e0cb to i32*
  store i32 %v3_e0c5, i32* %v3_e0cb, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e0da

bb:                                               ; preds = %dec_label_pc_e06c
  %v1_e0d8 = call i32 @function_e0df()
  br label %dec_label_pc_e0da

dec_label_pc_e0da:                                ; preds = %bb, %dec_label_pc_e06c
  %v2_e0d8 = phi i32 [ %v1_e0d8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e06c ]
  ret i32 %v2_e0d8

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_e0df() local_unnamed_addr {
dec_label_pc_e0df:
  %v0_e0e0 = load i32, i32* @eax, align 8
  ret i32 %v0_e0e0
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e0e2:
  %v1_e0fc = add i32 %arg1, 4
  store i32 %v1_e0fc, i32* @eax, align 8
  %v1_e102 = call i32 @function_102c2(i32 %v1_e0fc)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e113

bb:                                               ; preds = %dec_label_pc_e0e2
  %v1_e111 = call i32 @function_e118()
  br label %dec_label_pc_e113

dec_label_pc_e113:                                ; preds = %bb, %dec_label_pc_e0e2
  %v2_e111 = phi i32 [ %v1_e111, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e0e2 ]
  ret i32 %v2_e111
}

define i32 @function_e118() local_unnamed_addr {
dec_label_pc_e118:
  %v0_e119 = load i32, i32* @eax, align 8
  ret i32 %v0_e119
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e11a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_e13a = inttoptr i32 %arg2 to i32*
  %v2_e13a = load i32, i32* %v1_e13a, align 4
  store i32 %v2_e13a, i32* %arg1, align 4
  %v1_e144 = add i32 %arg2, 4
  store i32 %v1_e144, i32* @edx, align 8
  %v1_e14a = add i32 %tmp103, 4
  store i32 %v1_e14a, i32* @eax, align 8
  %v2_e154 = call i32 @function_1033a(i32 %v1_e14a, i32 %v1_e144)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e165

bb:                                               ; preds = %dec_label_pc_e11a
  %v1_e163 = call i32 @function_e16a()
  br label %dec_label_pc_e165

dec_label_pc_e165:                                ; preds = %bb, %dec_label_pc_e11a
  %v2_e163 = phi i32 [ %v1_e163, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e11a ]
  ret i32 %v2_e163

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_e16a() local_unnamed_addr {
dec_label_pc_e16a:
  %v0_e16b = load i32, i32* @eax, align 8
  ret i32 %v0_e16b
}

define i32 @_ZN5boost13function_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e16c:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e198

bb:                                               ; preds = %dec_label_pc_e16c
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_e196 = call i32 @function_e19d(i32 %tmp102)
  br label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %bb, %dec_label_pc_e16c
  %v3_e196 = phi i32 [ %v2_e196, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e16c ]
  ret i32 %v3_e196

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e19d(i32 %arg1) local_unnamed_addr {
dec_label_pc_e19d:
  %v0_e19e = load i32, i32* @eax, align 8
  ret i32 %v0_e19e
}

define i32 @_ZNK5boost13function_base5emptyEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e1a0:
  %v2_e1ba = load i32, i32* %arg1, align 4
  %v1_e1bc = icmp eq i32 %v2_e1ba, 0
  %v1_e1be = zext i1 %v1_e1bc to i32
  %v3_e1be = and i32 %v2_e1ba, -256
  %v4_e1be = or i32 %v1_e1be, %v3_e1be
  store i32 %v4_e1be, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e1cd

bb:                                               ; preds = %dec_label_pc_e1a0
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_e1cb = call i32 @function_e1d2(i32 %tmp101)
  br label %dec_label_pc_e1cd

dec_label_pc_e1cd:                                ; preds = %bb, %dec_label_pc_e1a0
  %v3_e1cb = phi i32 [ %v2_e1cb, %bb ], [ %v4_e1be, %dec_label_pc_e1a0 ]
  ret i32 %v3_e1cb

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e1d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_e1d2:
  %v0_e1d3 = load i32, i32* @eax, align 8
  ret i32 %v0_e1d3
}

define i32 @_ZNK5boost13function_base28has_trivial_copy_and_destroyEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e1d4:
  %v2_e1ee = load i32, i32* %arg1, align 4
  %v1_e1f0 = urem i32 %v2_e1ee, 2
  store i32 %v1_e1f0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e1ff

bb:                                               ; preds = %dec_label_pc_e1d4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e1fd = call i32 @function_e204(i32 %tmp100)
  br label %dec_label_pc_e1ff

dec_label_pc_e1ff:                                ; preds = %bb, %dec_label_pc_e1d4
  %v3_e1fd = phi i32 [ %v2_e1fd, %bb ], [ %v1_e1f0, %dec_label_pc_e1d4 ]
  ret i32 %v3_e1fd

; uselistorder directives
  uselistorder i32 %v1_e1f0, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e204(i32 %arg1) local_unnamed_addr {
dec_label_pc_e204:
  %v0_e205 = load i32, i32* @eax, align 8
  ret i32 %v0_e205
}

define i32 @_ZN5boost17bad_function_callC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e206:
  %stack_var_-17 = alloca i32, align 4
  %v2_e21e = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_e21e
}

define i32 @function_e26a() local_unnamed_addr {
dec_label_pc_e26a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e26a = load i32, i32* %ebx.global-to-local, align 8
  %v1_e26a = add i32 %v0_e26a, 13100101
  %v2_e26a = inttoptr i32 %v1_e26a to i32*
  %v3_e26a = load i32, i32* %v2_e26a, align 4
  %v4_e26a = add i32 %v3_e26a, -1
  store i32 %v4_e26a, i32* %v2_e26a, align 4
  %v3_e271 = load i32, i32* %ebx.global-to-local, align 8
  %v1_e273 = add i32 %v3_e271, 862319685
  %v2_e273 = inttoptr i32 %v1_e273 to i8*
  %v3_e273 = load i8, i8* %v2_e273, align 1
  %v4_e273 = load i32, i32* %ecx.global-to-local, align 4
  %v5_e273 = trunc i32 %v4_e273 to i8
  %v6_e273 = add i8 %v5_e273, %v3_e273
  store i8 %v6_e273, i8* %v2_e273, align 1
  %v0_e279 = load i32, i32* %eax.global-to-local, align 8
  %v1_e279 = add i32 %v0_e279, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_e279 = icmp eq i32 %v1_e279, 0
  store i32 %v1_e279, i32* @eax, align 8
  br i1 %v10_e279, label %bb, label %dec_label_pc_e280

bb:                                               ; preds = %dec_label_pc_e26a
  %v1_e27e = call i32 @function_e2ad()
  store i32 %v1_e27e, i32* @eax, align 8
  br label %dec_label_pc_e280

dec_label_pc_e280:                                ; preds = %bb, %dec_label_pc_e26a
  %v0_e280 = call i32 @function_e2a8()
  store i32 %v0_e280, i32* %eax.global-to-local, align 8
  ret i32 %v0_e280
}

define i32 @function_e283() local_unnamed_addr {
dec_label_pc_e283:
  %eax.global-to-local = alloca i32, align 4
  %v0_e283 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e283
}

define i32 @function_e28f() local_unnamed_addr {
dec_label_pc_e28f:
  %v0_e28f = call i32 @function_e293()
  ret i32 %v0_e28f
}

define i32 @function_e291() local_unnamed_addr {
dec_label_pc_e291:
  %eax.global-to-local = alloca i32, align 4
  %v0_e291 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e291
}

define i32 @function_e293() local_unnamed_addr {
dec_label_pc_e293:
  %v0_e293 = load i32, i32* @ebp, align 4
  %v1_e293 = add i32 %v0_e293, -13
  ret i32 %v1_e293
}

define i32 @function_e2a8() local_unnamed_addr {
dec_label_pc_e2a8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_e2ad() local_unnamed_addr {
dec_label_pc_e2ad:
  %v0_e2b2 = load i32, i32* @eax, align 8
  ret i32 %v0_e2b2
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e2b4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33ba4.1924 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_e2da = call i32 @function_10848(i32 %tmp99)
  %v1_e2e9 = call i32 @function_e2f6()
  ret i32 %tmp99
}

define i32 @function_e2f6() local_unnamed_addr {
dec_label_pc_e2f6:
  %v0_e2f6 = load i32, i32* @ebp, align 4
  %v1_e2f6 = add i32 %v0_e2f6, -12
  %v2_e2f6 = inttoptr i32 %v1_e2f6 to i32*
  %v3_e2f6 = load i32, i32* %v2_e2f6, align 4
  %v3_e2f9 = xor i32 %v3_e2f6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_e2f9 = icmp eq i32 %v3_e2f9, 0
  store i32 %v3_e2f9, i32* @eax, align 8
  br i1 %v4_e2f9, label %bb, label %dec_label_pc_e302

bb:                                               ; preds = %dec_label_pc_e2f6
  %v1_e300 = call i32 @function_e307()
  br label %dec_label_pc_e302

dec_label_pc_e302:                                ; preds = %bb, %dec_label_pc_e2f6
  %v2_e300 = phi i32 [ %v1_e300, %bb ], [ %v3_e2f9, %dec_label_pc_e2f6 ]
  ret i32 %v2_e300
}

define i32 @function_e307() local_unnamed_addr {
dec_label_pc_e307:
  %v0_e308 = load i32, i32* @eax, align 8
  ret i32 %v0_e308
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e30a:
  %v1_e327 = call i32 @function_1c5be(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_e336() local_unnamed_addr {
dec_label_pc_e336:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_e336 = load i32, i32* %ebx.global-to-local, align 8
  %v1_e336 = add i32 %v0_e336, 862319685
  %v2_e336 = inttoptr i32 %v1_e336 to i32*
  %v3_e336 = load i32, i32* %v2_e336, align 4
  %v4_e336 = add i32 %v3_e336, -1
  store i32 %v4_e336, i32* %v2_e336, align 4
  %v0_e33c = load i32, i32* %eax.global-to-local, align 8
  %v1_e33c = add i32 %v0_e33c, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_e33c, i32* %eax.global-to-local, align 8
  ret i32 %v1_e33c
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e34a:
  %v15_e36a = icmp eq i32 %arg1, %arg2
  %v1_e36d = zext i1 %v15_e36a to i32
  %v3_e36d = and i32 %arg1, -256
  %v4_e36d = or i32 %v1_e36d, %v3_e36d
  store i32 %v4_e36d, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e37c

bb:                                               ; preds = %dec_label_pc_e34a
  %v3_e37a = call i32 @function_e381(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_e37c

dec_label_pc_e37c:                                ; preds = %bb, %dec_label_pc_e34a
  %v4_e37a = phi i32 [ %v3_e37a, %bb ], [ %v4_e36d, %dec_label_pc_e34a ]
  ret i32 %v4_e37a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_e381(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e381:
  %v0_e382 = load i32, i32* @eax, align 8
  ret i32 %v0_e382
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e384:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_e3b5 = add i32 %tmp104, 4
  %v3_e3b5 = inttoptr i32 %v2_e3b5 to i32*
  store i32 %arg3, i32* %v3_e3b5, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e3c4

bb:                                               ; preds = %dec_label_pc_e384
  %v4_e3c2 = call i32 @function_e3c9(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %bb, %dec_label_pc_e384
  %v5_e3c2 = phi i32 [ %v4_e3c2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e384 ]
  ret i32 %v5_e3c2
}

define i32 @function_e3c9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e3c9:
  %v0_e3ca = load i32, i32* @eax, align 8
  ret i32 %v0_e3ca
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e3cb:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_e3eb = add i32 %tmp102, 4
  %v2_e3eb = inttoptr i32 %v1_e3eb to i32*
  %v3_e3eb = load i32, i32* %v2_e3eb, align 4
  %v1_e3f1 = add i32 %arg2, 4
  %v2_e3f1 = inttoptr i32 %v1_e3f1 to i32*
  %v3_e3f1 = load i32, i32* %v2_e3f1, align 4
  %v12_e3f4 = icmp eq i32 %v3_e3eb, %v3_e3f1
  %v1_e3f6 = icmp eq i1 %v12_e3f4, false
  br i1 %v1_e3f6, label %dec_label_pc_e40d, label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3cb
  %v2_e3fb = load i32, i32* %arg1, align 4
  %v1_e400 = inttoptr i32 %arg2 to i32*
  %v2_e400 = load i32, i32* %v1_e400, align 4
  %v12_e402 = icmp eq i32 %v2_e3fb, %v2_e400
  %v1_e404 = icmp eq i1 %v12_e402, false
  br i1 %v1_e404, label %dec_label_pc_e40d, label %dec_label_pc_e412

dec_label_pc_e40d:                                ; preds = %dec_label_pc_e3f8, %dec_label_pc_e3cb
  br label %dec_label_pc_e412

dec_label_pc_e412:                                ; preds = %dec_label_pc_e3f8, %dec_label_pc_e40d
  %storemerge = phi i32 [ 0, %dec_label_pc_e40d ], [ 1, %dec_label_pc_e3f8 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e41e

bb:                                               ; preds = %dec_label_pc_e412
  %v1_e41c = call i32 @function_e423()
  br label %dec_label_pc_e41e

dec_label_pc_e41e:                                ; preds = %bb, %dec_label_pc_e412
  %v2_e41c = phi i32 [ %v1_e41c, %bb ], [ %storemerge, %dec_label_pc_e412 ]
  ret i32 %v2_e41c

; uselistorder directives
  uselistorder label %dec_label_pc_e412, { 1, 0 }
}

define i32 @function_e423() local_unnamed_addr {
dec_label_pc_e423:
  %v0_e424 = load i32, i32* @eax, align 8
  ret i32 %v0_e424
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_e426:
  %v2_e440 = load i32, i32* %arg1, align 4
  store i32 %v2_e440, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e44e

bb:                                               ; preds = %dec_label_pc_e426
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_e44c = call i32 @function_e453(i32 %tmp100)
  br label %dec_label_pc_e44e

dec_label_pc_e44e:                                ; preds = %bb, %dec_label_pc_e426
  %v3_e44c = phi i32 [ %v2_e44c, %bb ], [ %v2_e440, %dec_label_pc_e426 ]
  ret i32 %v3_e44c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_e453(i32 %arg1) local_unnamed_addr {
dec_label_pc_e453:
  %v0_e454 = load i32, i32* @eax, align 8
  ret i32 %v0_e454
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e456:
  %v1_e470 = add i32 %arg1, 4
  %v2_e470 = inttoptr i32 %v1_e470 to i32*
  %v3_e470 = load i32, i32* %v2_e470, align 4
  store i32 %v3_e470, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e47f

bb:                                               ; preds = %dec_label_pc_e456
  %v2_e47d = call i32 @function_e484(i32 %arg1)
  br label %dec_label_pc_e47f

dec_label_pc_e47f:                                ; preds = %bb, %dec_label_pc_e456
  %v3_e47d = phi i32 [ %v2_e47d, %bb ], [ %v3_e470, %dec_label_pc_e456 ]
  ret i32 %v3_e47d
}

define i32 @function_e484(i32 %arg1) local_unnamed_addr {
dec_label_pc_e484:
  %v0_e485 = load i32, i32* @eax, align 8
  ret i32 %v0_e485
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e486:
  %v1_e4a7 = add i32 %arg2, 4
  %v2_e4a7 = inttoptr i32 %v1_e4a7 to i32*
  store i32 %arg2, i32* @eax, align 8
  %v1_e4b7 = call i32 @function_1c8ac(i32 %arg2)
  %v3_e4bf = load i32, i32* %v2_e4a7, align 4
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e4e4

bb:                                               ; preds = %dec_label_pc_e486
  %v4_e4e2 = call i32 @function_e4e9(i32 %arg1, i32 %v3_e4bf, i32 %v1_e4b7)
  br label %dec_label_pc_e4e4

dec_label_pc_e4e4:                                ; preds = %bb, %dec_label_pc_e486
  %v5_e4e2 = phi i32 [ %v4_e4e2, %bb ], [ %arg1, %dec_label_pc_e486 ]
  ret i32 %v5_e4e2

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_e4e9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e4e9:
  %v0_e4ed = load i32, i32* @eax, align 8
  ret i32 %v0_e4ed
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e4f0:
  store i32 %arg1, i32* @eax, align 8
  %v3_e527 = call i32 @function_1c874(i32 %arg1, i32 %arg3, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e53b

bb:                                               ; preds = %dec_label_pc_e4f0
  %v1_e539 = call i32 @function_e540()
  br label %dec_label_pc_e53b

dec_label_pc_e53b:                                ; preds = %bb, %dec_label_pc_e4f0
  %v2_e539 = phi i32 [ %v1_e539, %bb ], [ %arg1, %dec_label_pc_e4f0 ]
  ret i32 %v2_e539

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_e540() local_unnamed_addr {
dec_label_pc_e540:
  %v0_e541 = load i32, i32* @eax, align 8
  ret i32 %v0_e541
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e544:
  %stack_var_-24 = alloca i32, align 4
  %v2_e571 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_e571
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e5b0:
  %v5_e5ed = icmp eq i8 %arg1, 0
  br i1 %v5_e5ed, label %dec_label_pc_e608, label %dec_label_pc_e5f1

dec_label_pc_e5f1:                                ; preds = %dec_label_pc_e5b0
  %v15_e5fc = icmp eq i32 %arg2, %arg3
  %v1_e5ff = icmp eq i1 %v15_e5fc, false
  br i1 %v1_e5ff, label %dec_label_pc_e608, label %dec_label_pc_e60d

dec_label_pc_e608:                                ; preds = %dec_label_pc_e5f1, %dec_label_pc_e5b0
  br label %dec_label_pc_e60d

dec_label_pc_e60d:                                ; preds = %dec_label_pc_e5f1, %dec_label_pc_e608
  %storemerge = phi i32 [ 0, %dec_label_pc_e608 ], [ 1, %dec_label_pc_e5f1 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e619

bb:                                               ; preds = %dec_label_pc_e60d
  %v1_e617 = call i32 @function_e61e()
  br label %dec_label_pc_e619

dec_label_pc_e619:                                ; preds = %bb, %dec_label_pc_e60d
  %v2_e617 = phi i32 [ %v1_e617, %bb ], [ %storemerge, %dec_label_pc_e60d ]
  ret i32 %v2_e617

; uselistorder directives
  uselistorder label %dec_label_pc_e60d, { 1, 0 }
}

define i32 @function_e61e() local_unnamed_addr {
dec_label_pc_e61e:
  %v0_e61f = load i32, i32* @eax, align 8
  ret i32 %v0_e61f
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_e620:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33b8c_type* @global_var_33b8c.1925 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_e672() local_unnamed_addr {
dec_label_pc_e672:
  %v0_e672 = call i32 @function_e69c()
  ret i32 %v0_e672
}

define i32 @function_e69c() local_unnamed_addr {
dec_label_pc_e69c:
  %v0_e69c = load i32, i32* @ebp, align 4
  %v1_e69c = add i32 %v0_e69c, -12
  %v2_e69c = inttoptr i32 %v1_e69c to i32*
  %v3_e69c = load i32, i32* %v2_e69c, align 4
  %v3_e69f = xor i32 %v3_e69c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_e69f = icmp eq i32 %v3_e69f, 0
  store i32 %v3_e69f, i32* @eax, align 8
  br i1 %v4_e69f, label %bb, label %dec_label_pc_e6a8

bb:                                               ; preds = %dec_label_pc_e69c
  %v1_e6a6 = call i32 @function_e6ad()
  br label %dec_label_pc_e6a8

dec_label_pc_e6a8:                                ; preds = %bb, %dec_label_pc_e69c
  %v2_e6a6 = phi i32 [ %v1_e6a6, %bb ], [ %v3_e69f, %dec_label_pc_e69c ]
  ret i32 %v2_e6a6
}

define i32 @function_e6ad() local_unnamed_addr {
dec_label_pc_e6ad:
  %v0_e6b3 = load i32, i32* @eax, align 8
  ret i32 %v0_e6b3
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_e6b4:
  store i32 %arg1, i32* @eax, align 8
  %v1_e6d1 = call i32 @function_1ccd4(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e6ed

bb:                                               ; preds = %dec_label_pc_e6b4
  %v2_e6eb = call i32 @function_e6f2(i32 %arg1)
  br label %dec_label_pc_e6ed

dec_label_pc_e6ed:                                ; preds = %bb, %dec_label_pc_e6b4
  %v3_e6eb = phi i32 [ %v2_e6eb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e6b4 ]
  ret i32 %v3_e6eb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_e6f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_e6f2:
  %v0_e6f3 = load i32, i32* @eax, align 8
  ret i32 %v0_e6f3
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_e6f4:
  %v1_e70f = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_e70f
}

define i32 @function_e72e() local_unnamed_addr {
dec_label_pc_e72e:
  %eax.global-to-local = alloca i32, align 4
  %v0_e731 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e731
}

define i32 @function_e7af() local_unnamed_addr {
dec_label_pc_e7af:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_e7af = load i32, i32* %ecx.global-to-local, align 4
  %v1_e7af = add i32 %v0_e7af, -1948743229
  %v2_e7af = inttoptr i32 %v1_e7af to i32*
  %v3_e7af = load i32, i32* %v2_e7af, align 4
  %v4_e7af = add i32 %v3_e7af, -1
  store i32 %v4_e7af, i32* %v2_e7af, align 4
  %v0_e7b7 = load i32, i32* %edx.global-to-local, align 8
  %v3_e7b7 = xor i32 %v0_e7b7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_e7b7 = icmp eq i32 %v3_e7b7, 0
  store i32 %v3_e7b7, i32* %edx.global-to-local, align 8
  br i1 %v4_e7b7, label %bb, label %dec_label_pc_e7c0

bb:                                               ; preds = %dec_label_pc_e7af
  %v1_e7be = call i32 @function_e809()
  store i32 %v1_e7be, i32* @eax, align 8
  br label %dec_label_pc_e7c0

dec_label_pc_e7c0:                                ; preds = %bb, %dec_label_pc_e7af
  %v0_e7c0 = call i32 @function_e804()
  ret i32 %v0_e7c0
}

define i32 @function_e7c3() local_unnamed_addr {
dec_label_pc_e7c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_e7c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e7c3
}

define i32 @function_e7cf() local_unnamed_addr {
dec_label_pc_e7cf:
  %ebx.global-to-local = alloca i32, align 4
  %v0_e7cf = load i32, i32* %ebx.global-to-local, align 8
  ret i32 %v0_e7cf
}

define i32 @function_e7e7() local_unnamed_addr {
dec_label_pc_e7e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_e7e7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e7e7
}

define i32 @function_e7ed() local_unnamed_addr {
dec_label_pc_e7ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_e7ed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e7ed
}

define i32 @function_e804() local_unnamed_addr {
dec_label_pc_e804:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_e809() local_unnamed_addr {
dec_label_pc_e809:
  %v0_e80d = load i32, i32* @eax, align 8
  ret i32 %v0_e80d
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e80e:
  ret i32 %arg1
}

define i32 @function_e845() local_unnamed_addr {
dec_label_pc_e845:
  %eax.global-to-local = alloca i32, align 4
  %v0_e846 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e846
}

define i32 @_Z8i64tostrx(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e847:
  ret i32 %arg2
}

define i32 @function_e8a9() local_unnamed_addr {
dec_label_pc_e8a9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_e8a9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e8a9 = add i32 %v0_e8a9, -1
  store i32 %v1_e8a9, i32* %ecx.global-to-local, align 4
  %v0_e8ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_e8ab
}

define i32 @_Z6atoi64PKc(i32 %arg1) local_unnamed_addr {
dec_label_pc_e8ae:
  ret i32 %arg1
}

define i32 @function_e8df() local_unnamed_addr {
dec_label_pc_e8df:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_e8df = load i32, i32* %ebx.global-to-local, align 8
  %v1_e8df = add i32 %v0_e8df, 862319693
  %v2_e8df = inttoptr i32 %v1_e8df to i32*
  %v3_e8df = load i32, i32* %v2_e8df, align 4
  %v4_e8df = add i32 %v3_e8df, -1
  store i32 %v4_e8df, i32* %v2_e8df, align 4
  %v0_e8e5 = load i32, i32* %eax.global-to-local, align 8
  %v1_e8e5 = or i32 %v0_e8e5, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_e8e5, i32* %eax.global-to-local, align 8
  ret i32 %v1_e8e5
}

define i32 @_ZN5boost8signals26detail23foreign_void_shared_ptrC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e8f4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_e8f4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_e914 = inttoptr i32 %arg2 to i32*
  %v2_e920 = load i32, i32* %v1_e914, align 4
  store i32 %v2_e920, i32* %arg1, align 4
  store i32 %v0_e8f4, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail23foreign_void_shared_ptrD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e942:
  %v2_e95c = load i32, i32* %arg1, align 4
  %v1_e95e = icmp eq i32 %v2_e95c, 0
  br i1 %v1_e95e, label %dec_label_pc_e978, label %dec_label_pc_e962

dec_label_pc_e962:                                ; preds = %dec_label_pc_e942
  br label %dec_label_pc_e978

dec_label_pc_e978:                                ; preds = %dec_label_pc_e962, %dec_label_pc_e942
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e984

bb:                                               ; preds = %dec_label_pc_e978
  %v1_e982 = call i32 @function_e989()
  br label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %bb, %dec_label_pc_e978
  %v2_e982 = phi i32 [ %v1_e982, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e978 ]
  ret i32 %v2_e982
}

define i32 @function_e989() local_unnamed_addr {
dec_label_pc_e989:
  %v0_e98a = load i32, i32* @eax, align 8
  ret i32 %v0_e98a
}

define i32 @_ZN5boost8signals26detail21foreign_void_weak_ptrC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e98c:
  %v1_e9af = call i32 @function_1f0dc(i32 %arg2)
  %v2_e9cc = call i32 @function_1f06c(i32 %arg1, i32 %v1_e9af)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_e9dd

bb:                                               ; preds = %dec_label_pc_e98c
  %v1_e9db = call i32 @function_e9e2()
  br label %dec_label_pc_e9dd

dec_label_pc_e9dd:                                ; preds = %bb, %dec_label_pc_e98c
  %v2_e9db = phi i32 [ %v1_e9db, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e98c ]
  ret i32 %v2_e9db
}

define i32 @function_e9e2() local_unnamed_addr {
dec_label_pc_e9e2:
  %v0_e9e3 = load i32, i32* @eax, align 8
  ret i32 %v0_e9e3
}

define i32 @_ZN5boost8signals26detail21foreign_void_weak_ptrD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9e4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ea12

bb:                                               ; preds = %dec_label_pc_e9e4
  %v2_ea10 = call i32 @function_ea17(i32 %arg1)
  br label %dec_label_pc_ea12

dec_label_pc_ea12:                                ; preds = %bb, %dec_label_pc_e9e4
  %v3_ea10 = phi i32 [ %v2_ea10, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_e9e4 ]
  ret i32 %v3_ea10
}

define i32 @function_ea17(i32 %arg1) local_unnamed_addr {
dec_label_pc_ea17:
  %v0_ea18 = load i32, i32* @eax, align 8
  ret i32 %v0_ea18
}

define i32 @_ZNK5boost8signals26detail21foreign_void_weak_ptr4lockEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea1a:
  store i32 %arg2, i32* @eax, align 8
  %v1_ea3d = call i32 @function_1f16a(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ea67

bb:                                               ; preds = %dec_label_pc_ea1a
  %v3_ea65 = call i32 @function_ea6c(i32 %arg1, i32 %v1_ea3d)
  br label %dec_label_pc_ea67

dec_label_pc_ea67:                                ; preds = %bb, %dec_label_pc_ea1a
  %v4_ea65 = phi i32 [ %v3_ea65, %bb ], [ %arg1, %dec_label_pc_ea1a ]
  ret i32 %v4_ea65

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_ea6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ea6c:
  %v0_ea6d = load i32, i32* @eax, align 8
  ret i32 %v0_ea6d
}

define i32 @_ZNK5boost8signals26detail21foreign_void_weak_ptr7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ea70:
  store i32 %arg1, i32* @eax, align 8
  %v1_ea8d = call i32 @function_1f1c0(i32 %arg1)
  store i32 %v1_ea8d, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_eaaa

bb:                                               ; preds = %dec_label_pc_ea70
  %v2_eaa8 = call i32 @function_eaaf(i32 %v1_ea8d)
  br label %dec_label_pc_eaaa

dec_label_pc_eaaa:                                ; preds = %bb, %dec_label_pc_ea70
  %v3_eaa8 = phi i32 [ %v2_eaa8, %bb ], [ %v1_ea8d, %dec_label_pc_ea70 ]
  ret i32 %v3_eaa8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_eaaf(i32 %arg1) local_unnamed_addr {
dec_label_pc_eaaf:
  %v0_eab0 = load i32, i32* @eax, align 8
  ret i32 %v0_eab0
}

define i32 @_ZN5boost6detail7variant9copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eab2:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_ead5 = call i32 @function_1f288(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost8signals29slot_base15tracked_objectsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_eaf6:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_eb1c

bb:                                               ; preds = %dec_label_pc_eaf6
  %v2_eb1a = call i32 @function_eb21(i32 %arg1)
  br label %dec_label_pc_eb1c

dec_label_pc_eb1c:                                ; preds = %bb, %dec_label_pc_eaf6
  %v3_eb1a = phi i32 [ %v2_eb1a, %bb ], [ %arg1, %dec_label_pc_eaf6 ]
  ret i32 %v3_eb1a
}

define i32 @function_eb21(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb21:
  %v0_eb22 = load i32, i32* @eax, align 8
  ret i32 %v0_eb22
}

define i32 @_ZNK5boost8signals29slot_base7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_eb24:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_eb3b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_eb3b, i32* @eax, align 8
  %v1_eb41 = call i32 @function_1f35a(i32 %v2_eb3b)
  %v1_eb4c = call i32 @function_1d61a(i32 %arg1)
  store i32 %v1_eb4c, i32* @eax, align 8
  %v2_eb51 = ptrtoint i32* %stack_var_-36 to i32
  %v2_eb5b = call i32 @function_1f38e(i32 %v2_eb51, i32 %v1_eb4c)
  %v16_eb60 = ptrtoint i32* %stack_var_-64 to i32
  %v3_eb63 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_eb63, i32* %stack_var_-28, align 4
  %v2_eba6 = ptrtoint i32* %stack_var_-24 to i32
  %v2_eb7a = ptrtoint i32* %stack_var_-17 to i32
  br label %dec_label_pc_eb9b

dec_label_pc_eb6b:                                ; preds = %dec_label_pc_eb9b
  store i32 %v2_eb3b, i32* @eax, align 8
  %v1_eb6e = load i32, i32* @esp, align 4
  %v2_eb6e = inttoptr i32 %v1_eb6e to i32*
  store i32 %v2_eb3b, i32* %v2_eb6e, align 4
  %v0_eb71 = call i32 @function_1f4bc()
  %v1_eb76 = load i32, i32* @esp, align 4
  %v2_eb76 = add i32 %v1_eb76, 4
  %v3_eb76 = inttoptr i32 %v2_eb76 to i32*
  store i32 %v0_eb71, i32* %v3_eb76, align 4
  %v1_eb7d = load i32, i32* @esp, align 4
  %v2_eb7d = inttoptr i32 %v1_eb7d to i32*
  store i32 %v2_eb7a, i32* %v2_eb7d, align 4
  %v0_eb80 = call i32 @function_1f5a6()
  %v4_eb85 = trunc i32 %v0_eb80 to i8
  store i1 false, i1* @cf, align 1
  %v5_eb85 = icmp eq i8 %v4_eb85, 0
  br i1 %v5_eb85, label %dec_label_pc_eb90, label %dec_label_pc_ebd3

dec_label_pc_eb90:                                ; preds = %dec_label_pc_eb6b
  store i32 %v2_eb3b, i32* @eax, align 8
  %v1_eb93 = load i32, i32* @esp, align 4
  %v2_eb93 = inttoptr i32 %v1_eb93 to i32*
  store i32 %v2_eb3b, i32* %v2_eb93, align 4
  %v0_eb96 = call i32 @function_1f482()
  %v1_eb9e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_eb9b

dec_label_pc_eb9b:                                ; preds = %dec_label_pc_eb90, %dec_label_pc_eb24
  %v1_eb9e = phi i32 [ %v1_eb9e.pre, %dec_label_pc_eb90 ], [ %v16_eb60, %dec_label_pc_eb24 ]
  %v2_eb9e = inttoptr i32 %v1_eb9e to i32*
  store i32 %arg1, i32* %v2_eb9e, align 4
  %v0_eba1 = load i32, i32* %stack_var_-28, align 4
  %v1_eba1 = call i32 @function_1d61a(i32 %v0_eba1)
  store i32 %v1_eba1, i32* @eax, align 8
  %v1_eba9 = load i32, i32* @esp, align 4
  %v2_eba9 = add i32 %v1_eba9, 4
  %v3_eba9 = inttoptr i32 %v2_eba9 to i32*
  store i32 %v1_eba1, i32* %v3_eba9, align 4
  %v1_ebad = load i32, i32* @esp, align 4
  %v2_ebad = inttoptr i32 %v1_ebad to i32*
  store i32 %v2_eba6, i32* %v2_ebad, align 4
  %v0_ebb0 = call i32 @function_1f3de()
  %v0_ebb5 = load i32, i32* @esp, align 4
  %v3_ebbb = inttoptr i32 %v0_ebb5 to i32*
  store i32 %v2_eba6, i32* %v3_ebbb, align 4
  store i32 %v2_eb3b, i32* @eax, align 8
  %v1_ebc2 = load i32, i32* @esp, align 4
  %v2_ebc2 = inttoptr i32 %v1_ebc2 to i32*
  store i32 %v2_eb3b, i32* %v2_ebc2, align 4
  %v0_ebc5 = load i32, i32* %stack_var_-28, align 4
  %v1_ebc5 = call i32 @function_1f42e(i32 %v0_ebc5)
  %v4_ebca = trunc i32 %v1_ebc5 to i8
  %v5_ebca = icmp eq i8 %v4_ebca, 0
  %v1_ebcc = icmp eq i1 %v5_ebca, false
  br i1 %v1_ebcc, label %dec_label_pc_eb6b, label %dec_label_pc_ebd3

dec_label_pc_ebd3:                                ; preds = %dec_label_pc_eb9b, %dec_label_pc_eb6b
  %storemerge = phi i32 [ 1, %dec_label_pc_eb6b ], [ 0, %dec_label_pc_eb9b ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ebdf

bb:                                               ; preds = %dec_label_pc_ebd3
  %v1_ebdd = call i32 @function_ebe4()
  br label %dec_label_pc_ebdf

dec_label_pc_ebdf:                                ; preds = %bb, %dec_label_pc_ebd3
  %v2_ebdd = phi i32 [ %v1_ebdd, %bb ], [ %storemerge, %dec_label_pc_ebd3 ]
  ret i32 %v2_ebdd

; uselistorder directives
  uselistorder i32 %v2_eb3b, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 (i32)* @function_1d61a, { 1, 0 }
}

define i32 @function_ebe4() local_unnamed_addr {
dec_label_pc_ebe4:
  %v0_ebe5 = load i32, i32* @eax, align 8
  ret i32 %v0_ebe5
}

define i32 @_ZN5boost10shared_ptrIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebe6:
  %v1_ec00 = add i32 %arg1, 4
  store i32 %v1_ec00, i32* @eax, align 8
  %v1_ec06 = call i32 @function_10dc6(i32 %v1_ec00)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ec17

bb:                                               ; preds = %dec_label_pc_ebe6
  %v1_ec15 = call i32 @function_ec1c()
  br label %dec_label_pc_ec17

dec_label_pc_ec17:                                ; preds = %bb, %dec_label_pc_ebe6
  %v2_ec15 = phi i32 [ %v1_ec15, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ebe6 ]
  ret i32 %v2_ec15
}

define i32 @function_ec1c() local_unnamed_addr {
dec_label_pc_ec1c:
  %v0_ec1d = load i32, i32* @eax, align 8
  ret i32 %v0_ec1d
}

define i32 @_ZN5boost8signals26detail23tracked_objects_visitorC1EPNS0_9slot_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec1e:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ec4f

bb:                                               ; preds = %dec_label_pc_ec1e
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_ec4d = call i32 @function_ec54(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_ec4f

dec_label_pc_ec4f:                                ; preds = %bb, %dec_label_pc_ec1e
  %v4_ec4d = phi i32 [ %v3_ec4d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ec1e ]
  ret i32 %v4_ec4d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_ec54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec54:
  %v0_ec55 = load i32, i32* @eax, align 8
  ret i32 %v0_ec55
}

define i32 @_ZN5boost8weak_ptrIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ec56:
  %v1_ec70 = add i32 %arg1, 4
  store i32 %v1_ec70, i32* @eax, align 8
  %v1_ec76 = call i32 @function_1109c(i32 %v1_ec70)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail20connection_body_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ec8e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33b6c.1927 to i32), i32* %arg1, align 4
  %v1_ecb1 = add i32 %tmp100, 4
  %v2_ecb1 = inttoptr i32 %v1_ecb1 to i8*
  store i8 1, i8* %v2_ecb1, align 1
  %v1_ecb8 = add i32 %tmp100, 8
  store i32 %v1_ecb8, i32* @eax, align 8
  %v1_ecbe = call i32 @function_1f7b6(i32 %v1_ecb8)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_eccf

bb:                                               ; preds = %dec_label_pc_ec8e
  %v1_eccd = call i32 @function_ecd4()
  br label %dec_label_pc_eccf

dec_label_pc_eccf:                                ; preds = %bb, %dec_label_pc_ec8e
  %v2_eccd = phi i32 [ %v1_eccd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ec8e ]
  ret i32 %v2_eccd

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @function_ecd4() local_unnamed_addr {
dec_label_pc_ecd4:
  %v0_ecd5 = load i32, i32* @eax, align 8
  ret i32 %v0_ecd5
}

define i32 @_ZN5boost8signals26detail20connection_body_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ecd6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_33b6c.1927 to i32), i32* %arg1, align 4
  %v1_ecf9 = add i32 %tmp100, 8
  %v1_ecff = call i32 @function_1d92c(i32 %v1_ecf9)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ed27

bb:                                               ; preds = %dec_label_pc_ecd6
  %v1_ed25 = call i32 @function_ed2c()
  br label %dec_label_pc_ed27

dec_label_pc_ed27:                                ; preds = %bb, %dec_label_pc_ecd6
  %v2_ed25 = phi i32 [ %v1_ed25, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ecd6 ]
  ret i32 %v2_ed25
}

define i32 @function_ed2c() local_unnamed_addr {
dec_label_pc_ed2c:
  %v0_ed2d = load i32, i32* @eax, align 8
  ret i32 %v0_ed2d
}

define i32 @_ZN5boost8signals26detail20connection_body_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed2e:
  %v1_ed4b = call i32 @function_1da04(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_ed5a() local_unnamed_addr {
dec_label_pc_ed5a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ed5a = load i32, i32* %ebx.global-to-local, align 8
  %v1_ed5a = add i32 %v0_ed5a, 862319685
  %v2_ed5a = inttoptr i32 %v1_ed5a to i32*
  %v3_ed5a = load i32, i32* %v2_ed5a, align 4
  %v4_ed5a = add i32 %v3_ed5a, -1
  store i32 %v4_ed5a, i32* %v2_ed5a, align 4
  %v0_ed60 = load i32, i32* %eax.global-to-local, align 8
  %v1_ed60 = add i32 %v0_ed60, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_ed60, i32* %eax.global-to-local, align 8
  ret i32 %v1_ed60
}

define i32 @_ZN5boost8signals26detail20connection_body_base10disconnectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ed6e:
  %stack_var_-20 = alloca i32, align 4
  %v2_ed8c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_ed8c, i32* @eax, align 8
  %v2_ed92 = call i32 @function_1f8d8(i32 %v2_ed8c, i32 %arg1)
  %v1_ed9d = call i32 @function_1db2e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_edb9

bb:                                               ; preds = %dec_label_pc_ed6e
  %v2_edb7 = call i32 @function_edbe(i32 %v2_ed8c)
  br label %dec_label_pc_edb9

dec_label_pc_edb9:                                ; preds = %bb, %dec_label_pc_ed6e
  %v3_edb7 = phi i32 [ %v2_edb7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ed6e ]
  ret i32 %v3_edb7

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_edbe(i32 %arg1) local_unnamed_addr {
dec_label_pc_edbe:
  %v0_edbf = load i32, i32* @eax, align 8
  ret i32 %v0_edbf
}

define i32 @_ZN5boost8signals26detail20connection_body_base17nolock_disconnectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_edc0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_edc0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_edda = add i32 %arg1, 4
  %v2_edda = inttoptr i32 %v1_edda to i8*
  store i8 0, i8* %v2_edda, align 1
  store i32 %v0_edc0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10shared_ptrIvEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_edf2:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_ee12 = inttoptr i32 %arg2 to i32*
  %v2_ee12 = load i32, i32* %v1_ee12, align 4
  store i32 %v2_ee12, i32* %arg1, align 4
  %v1_ee1c = add i32 %arg2, 4
  %v1_ee22 = add i32 %tmp103, 4
  store i32 %v1_ee22, i32* @eax, align 8
  %v2_ee2c = call i32 @function_11012(i32 %v1_ee22, i32 %v1_ee1c)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20connection_body_base7blockedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee44:
  %v1_ee5e = add i32 %arg1, 8
  store i32 %v1_ee5e, i32* @eax, align 8
  %v1_ee64 = call i32 @function_1fadc(i32 %v1_ee5e)
  %v1_ee69 = xor i32 %v1_ee64, 1
  ret i32 %v1_ee69
}

define i32 @_ZNK5boost8signals26detail20connection_body_base21nolock_nograb_blockedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_ee80:
  store i32 %arg1, i32* @eax, align 8
  %v1_ee9d = call i32 @function_1dd58(i32 %arg1)
  %v1_eea2 = xor i32 %v1_ee9d, 1
  %v4_eea2 = trunc i32 %v1_eea2 to i8
  store i1 false, i1* @cf, align 1
  %v5_eea5 = icmp eq i8 %v4_eea2, 0
  %v1_eea7 = icmp eq i1 %v5_eea5, false
  br i1 %v1_eea7, label %dec_label_pc_eec4, label %dec_label_pc_eea9

dec_label_pc_eea9:                                ; preds = %dec_label_pc_ee80
  store i32 %arg1, i32* @eax, align 8
  %v1_eeaf = call i32 @function_1dcc4(i32 %arg1)
  %v4_eeb4 = trunc i32 %v1_eeaf to i8
  %v5_eeb4 = icmp ne i8 %v4_eeb4, 0
  %. = zext i1 %v5_eeb4 to i32
  br label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eea9, %dec_label_pc_ee80
  %storemerge = phi i32 [ 1, %dec_label_pc_ee80 ], [ %., %dec_label_pc_eea9 ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_eed0

bb:                                               ; preds = %dec_label_pc_eec4
  %v1_eece = call i32 @function_eed5()
  br label %dec_label_pc_eed0

dec_label_pc_eed0:                                ; preds = %bb, %dec_label_pc_eec4
  %v2_eece = phi i32 [ %v1_eece, %bb ], [ %storemerge, %dec_label_pc_eec4 ]
  ret i32 %v2_eece

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
}

define i32 @function_eed5() local_unnamed_addr {
dec_label_pc_eed5:
  %v0_eed6 = load i32, i32* @eax, align 8
  ret i32 %v0_eed6
}

define i32 @_ZNK5boost8signals26detail20connection_body_base23nolock_nograb_connectedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_eed8:
  %v1_eef2 = add i32 %arg1, 4
  %v2_eef2 = inttoptr i32 %v1_eef2 to i8*
  %v3_eef2 = load i8, i8* %v2_eef2, align 1
  %v4_eef2 = zext i8 %v3_eef2 to i32
  store i32 %v4_eef2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ef02

bb:                                               ; preds = %dec_label_pc_eed8
  %v2_ef00 = call i32 @function_ef07(i32 %arg1)
  br label %dec_label_pc_ef02

dec_label_pc_ef02:                                ; preds = %bb, %dec_label_pc_eed8
  %v3_ef00 = phi i32 [ %v2_ef00, %bb ], [ %v4_eef2, %dec_label_pc_eed8 ]
  ret i32 %v3_ef00
}

define i32 @function_ef07(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef07:
  %v0_ef08 = load i32, i32* @eax, align 8
  ret i32 %v0_ef08
}

define i32 @_ZN5boost8weak_ptrINS_8signals26detail20connection_body_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef0a:
  %v1_ef24 = add i32 %arg1, 4
  store i32 %v1_ef24, i32* @eax, align 8
  %v1_ef2a = call i32 @function_11350(i32 %v1_ef24)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ef3b

bb:                                               ; preds = %dec_label_pc_ef0a
  %v1_ef39 = call i32 @function_ef40()
  br label %dec_label_pc_ef3b

dec_label_pc_ef3b:                                ; preds = %bb, %dec_label_pc_ef0a
  %v2_ef39 = phi i32 [ %v1_ef39, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ef0a ]
  ret i32 %v2_ef39
}

define i32 @function_ef40() local_unnamed_addr {
dec_label_pc_ef40:
  %v0_ef41 = load i32, i32* @eax, align 8
  ret i32 %v0_ef41
}

define i32 @_ZN5boost8weak_ptrINS_8signals26detail20connection_body_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef42:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_ef62 = inttoptr i32 %arg2 to i32*
  %v2_ef62 = load i32, i32* %v1_ef62, align 4
  store i32 %v2_ef62, i32* %arg1, align 4
  %v1_ef6c = add i32 %arg2, 4
  %v1_ef72 = add i32 %tmp103, 4
  store i32 %v1_ef72, i32* @eax, align 8
  %v2_ef7c = call i32 @function_11338(i32 %v1_ef72, i32 %v1_ef6c)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ef8d

bb:                                               ; preds = %dec_label_pc_ef42
  %v1_ef8b = call i32 @function_ef92()
  br label %dec_label_pc_ef8d

dec_label_pc_ef8d:                                ; preds = %bb, %dec_label_pc_ef42
  %v2_ef8b = phi i32 [ %v1_ef8b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ef42 ]
  ret i32 %v2_ef8b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_ef92() local_unnamed_addr {
dec_label_pc_ef92:
  %v0_ef93 = load i32, i32* @eax, align 8
  ret i32 %v0_ef93
}

define i32 @_ZN5boost8signals210connectionC1ERKNS_8weak_ptrINS0_6detail20connection_body_baseEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef94:
  store i32 %arg1, i32* @eax, align 8
  %v2_efbe = call i32 @function_1ded6(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_efcf

bb:                                               ; preds = %dec_label_pc_ef94
  %v1_efcd = call i32 @function_efd4()
  br label %dec_label_pc_efcf

dec_label_pc_efcf:                                ; preds = %bb, %dec_label_pc_ef94
  %v2_efcd = phi i32 [ %v1_efcd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_ef94 ]
  ret i32 %v2_efcd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_efd4() local_unnamed_addr {
dec_label_pc_efd4:
  %v0_efd5 = load i32, i32* @eax, align 8
  ret i32 %v0_efd5
}

define i32 @_ZN5boost8signals210connectionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_efd6:
  store i32 %arg1, i32* @eax, align 8
  %v1_eff3 = call i32 @function_1dee0(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f004

bb:                                               ; preds = %dec_label_pc_efd6
  %v1_f002 = call i32 @function_f009()
  br label %dec_label_pc_f004

dec_label_pc_f004:                                ; preds = %bb, %dec_label_pc_efd6
  %v2_f002 = phi i32 [ %v1_f002, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_efd6 ]
  ret i32 %v2_f002

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f009() local_unnamed_addr {
dec_label_pc_f009:
  %v0_f00a = load i32, i32* @eax, align 8
  ret i32 %v0_f00a
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_baseC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_f00c:
  store i8 0, i8* %arg1, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f035

bb:                                               ; preds = %dec_label_pc_f00c
  %v4_f023 = ptrtoint i8* %arg1 to i32
  %v3_f033 = call i32 @function_f03a(i32 %v4_f023)
  br label %dec_label_pc_f035

dec_label_pc_f035:                                ; preds = %bb, %dec_label_pc_f00c
  %v4_f033 = phi i32 [ %v3_f033, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f00c ]
  ret i32 %v4_f033
}

define i32 @function_f03a(i32 %arg1) local_unnamed_addr {
dec_label_pc_f03a:
  %v0_f03b = load i32, i32* @eax, align 8
  ret i32 %v0_f03b
}

define i32 @_ZNK5boost11multi_index6detail21scope_guard_impl_base7dismissEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_f03c:
  store i8 1, i8* %arg1, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f065

bb:                                               ; preds = %dec_label_pc_f03c
  %v4_f053 = ptrtoint i8* %arg1 to i32
  %v3_f063 = call i32 @function_f06a(i32 %v4_f053)
  br label %dec_label_pc_f065

dec_label_pc_f065:                                ; preds = %bb, %dec_label_pc_f03c
  %v4_f063 = phi i32 [ %v3_f063, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f03c ]
  ret i32 %v4_f063
}

define i32 @function_f06a(i32 %arg1) local_unnamed_addr {
dec_label_pc_f06a:
  %v0_f06b = load i32, i32* @eax, align 8
  ret i32 %v0_f06b
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_baseD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f06c:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f08f

bb:                                               ; preds = %dec_label_pc_f06c
  %v2_f08d = call i32 @function_f094(i32 %arg1)
  br label %dec_label_pc_f08f

dec_label_pc_f08f:                                ; preds = %bb, %dec_label_pc_f06c
  %v3_f08d = phi i32 [ %v2_f08d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f06c ]
  ret i32 %v3_f08d
}

define i32 @function_f094(i32 %arg1) local_unnamed_addr {
dec_label_pc_f094:
  %v0_f095 = load i32, i32* @eax, align 8
  ret i32 %v0_f095
}

define i32 @_ZN5boost8signals25mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f096:
  ret i32 %arg1
}

define i32 @function_f0d0() local_unnamed_addr {
dec_label_pc_f0d0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f0d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f0d0 = add i32 %v0_f0d0, -1
  store i32 %v1_f0d0, i32* %ecx.global-to-local, align 4
  %v0_f0d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f0d2
}

define i32 @_ZN5boost8signals25mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f0d4:
  ret i32 %arg1
}

define i32 @function_f0f5() local_unnamed_addr {
dec_label_pc_f0f5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f0f5 = load i32, i32* %ebx.global-to-local, align 8
  %v1_f0f5 = add i32 %v0_f0f5, 862319685
  %v2_f0f5 = inttoptr i32 %v1_f0f5 to i32*
  %v3_f0f5 = load i32, i32* %v2_f0f5, align 4
  %v4_f0f5 = add i32 %v3_f0f5, -1
  store i32 %v4_f0f5, i32* %v2_f0f5, align 4
  %v0_f0fb = load i32, i32* %eax.global-to-local, align 8
  %v1_f0fb = add i32 %v0_f0fb, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_f0fb, i32* %eax.global-to-local, align 8
  ret i32 %v1_f0fb
}

define i32 @_ZN5boost8signals25mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f10a:
  ret i32 %arg1
}

define i32 @function_f13c() local_unnamed_addr {
dec_label_pc_f13c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f13c = load i32, i32* %ecx.global-to-local, align 4
  %v1_f13c = add i32 %v0_f13c, -1
  store i32 %v1_f13c, i32* %ecx.global-to-local, align 4
  %v0_f13e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f13e
}

define i32 @_ZN5boost8signals25mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f140:
  ret i32 %arg1
}

define i32 @function_f161() local_unnamed_addr {
dec_label_pc_f161:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f161 = load i32, i32* %ebx.global-to-local, align 8
  %v1_f161 = add i32 %v0_f161, 862319685
  %v2_f161 = inttoptr i32 %v1_f161 to i32*
  %v3_f161 = load i32, i32* %v2_f161, align 4
  %v4_f161 = add i32 %v3_f161, -1
  store i32 %v4_f161, i32* %v2_f161, align 4
  %v0_f167 = load i32, i32* %eax.global-to-local, align 8
  %v1_f167 = add i32 %v0_f167, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_f167, i32* %eax.global-to-local, align 8
  ret i32 %v1_f167
}

define i32 @_Z1_PKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f175:
  %stack_var_-25 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_f194 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_f194, i32* @eax, align 8
  %v3_f1a9 = call i32 @function_1fe4b(i32 %v2_f194, i32 ptrtoint (i32* @global_var_30.1928 to i32), i32 %arg2)
  %v2_f1b1 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_f1b1, i32* @eax, align 8
  store i32 %v2_f194, i32* @edx, align 8
  %v2_f1be = call i32 @function_1ff19(i32 %v2_f1b1, i32 %v2_f194)
  %v3_f1c6 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* @ebx, align 8
  store i1 false, i1* @cf, align 1
  %v1_f1ce = icmp eq i32 %v3_f1c6, 0
  br i1 %v1_f1ce, label %dec_label_pc_f1f0, label %dec_label_pc_f1d2

dec_label_pc_f1d2:                                ; preds = %dec_label_pc_f175
  store i32 %v2_f194, i32* @eax, align 8
  %v1_f1d8 = call i32 @function_1fee3(i32 %v2_f194)
  %v2_f1ee = call i32 @function_f219(i32 %arg1, i32 %v1_f1d8)
  ret i32 %v2_f1ee

dec_label_pc_f1f0:                                ; preds = %dec_label_pc_f175
  %v2_f1f0 = ptrtoint i32* %stack_var_-25 to i32
  ret i32 %v2_f1f0
}

define i32 @function_f1fd() local_unnamed_addr {
dec_label_pc_f1fd:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_f1fd = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_f1fd = load i32, i32* %eax.global-to-local, align 8
  %v4_f1fd = trunc i32 %v3_f1fd to i8
  %v5_f1fd = add i8 %v4_f1fd, %v2_f1fd
  %v21_f1fd = inttoptr i32 %v3_f1fd to i8*
  store i8 %v5_f1fd, i8* %v21_f1fd, align 1
  %v0_f1ff = load i32, i32* %ebx.global-to-local, align 8
  %v1_f1ff = add i32 %v0_f1ff, 1435358277
  %v2_f1ff = inttoptr i32 %v1_f1ff to i8*
  %v3_f1ff = load i8, i8* %v2_f1ff, align 1
  %v4_f1ff = load i32, i32* %ecx.global-to-local, align 4
  %v5_f1ff = trunc i32 %v4_f1ff to i8
  %v6_f1ff = add i8 %v5_f1ff, %v3_f1ff
  store i8 %v6_f1ff, i8* %v2_f1ff, align 1
  %v0_f205 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f205
}

define i32 @function_f219(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f219:
  %v0_f219 = load i32, i32* @ebx, align 8
  %v4_f219 = trunc i32 %v0_f219 to i8
  %v5_f219 = icmp eq i8 %v4_f219, 0
  br i1 %v5_f219, label %bb, label %dec_label_pc_f21d

bb:                                               ; preds = %dec_label_pc_f219
  %v1_f21b = call i32 @function_f228()
  br label %dec_label_pc_f21d

dec_label_pc_f21d:                                ; preds = %bb, %dec_label_pc_f219
  %v0_f21d = load i32, i32* @ebp, align 4
  %v1_f21d = add i32 %v0_f21d, -21
  ret i32 %v1_f21d
}

define i32 @function_f228() local_unnamed_addr {
dec_label_pc_f228:
  %v0_f228 = load i32, i32* @ebp, align 4
  %v1_f228 = add i32 %v0_f228, -20
  store i32 %v1_f228, i32* @eax, align 8
  %v1_f22e = call i32 @function_1fead(i32 %v1_f228)
  %v0_f233 = load i32, i32* @ebp, align 4
  %v1_f233 = add i32 %v0_f233, -44
  %v2_f233 = inttoptr i32 %v1_f233 to i32*
  %v3_f233 = load i32, i32* %v2_f233, align 4
  store i32 %v3_f233, i32* @eax, align 8
  %v1_f236 = add i32 %v0_f233, -12
  %v2_f236 = inttoptr i32 %v1_f236 to i32*
  %v3_f236 = load i32, i32* %v2_f236, align 4
  %v4_f239 = icmp eq i32 %v3_f236, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_f239, label %bb, label %dec_label_pc_f242

bb:                                               ; preds = %dec_label_pc_f228
  %v1_f240 = call i32 @function_f275()
  store i32 %v1_f240, i32* @eax, align 8
  br label %dec_label_pc_f242

dec_label_pc_f242:                                ; preds = %bb, %dec_label_pc_f228
  %v0_f242 = call i32 @function_f270()
  ret i32 %v0_f242
}

define i32 @function_f24b() local_unnamed_addr {
dec_label_pc_f24b:
  %eax.global-to-local = alloca i32, align 4
  %v0_f24c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f24c
}

define i32 @function_f254() local_unnamed_addr {
dec_label_pc_f254:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f254 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f254 = add i32 %v0_f254, -1996297229
  %v2_f254 = inttoptr i32 %v1_f254 to i32*
  %v3_f254 = load i32, i32* %v2_f254, align 4
  %v4_f254 = add i32 %v3_f254, -1
  store i32 %v4_f254, i32* %v2_f254, align 4
  %v0_f25a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f25a
}

define i32 @function_f270() local_unnamed_addr {
dec_label_pc_f270:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_f275() local_unnamed_addr {
dec_label_pc_f275:
  %v0_f275 = load i32, i32* @ebp, align 4
  %v1_f275 = add i32 %v0_f275, -8
  %v1_f278 = inttoptr i32 %v1_f275 to i32*
  %v2_f278 = load i32, i32* %v1_f278, align 4
  store i32 %v2_f278, i32* @ebx, align 8
  %v1_f27a = inttoptr i32 %v0_f275 to i32*
  %v2_f27a = load i32, i32* %v1_f27a, align 4
  store i32 %v2_f27a, i32* @ebp, align 4
  %v0_f27b = load i32, i32* @eax, align 8
  ret i32 %v0_f27b
}

define i32 @_ZNSt13runtime_errorC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f27e:
  %v2_f2a9 = call i32 @function_1da8c(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f2d2() local_unnamed_addr {
dec_label_pc_f2d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_f2d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_f2d2
}

define i32 @function_f2e8() local_unnamed_addr {
dec_label_pc_f2e8:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_f2e8 = add i32 %tmp92, -12
  %v2_f2e8 = inttoptr i32 %v1_f2e8 to i32*
  %v3_f2e8 = load i32, i32* %v2_f2e8, align 4
  %v3_f2eb = xor i32 %v3_f2e8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_f2eb = icmp eq i32 %v3_f2eb, 0
  store i32 %v3_f2eb, i32* @eax, align 8
  br i1 %v4_f2eb, label %bb, label %dec_label_pc_f2f4

bb:                                               ; preds = %dec_label_pc_f2e8
  %v1_f2f2 = call i32 @function_f2f9()
  br label %dec_label_pc_f2f4

dec_label_pc_f2f4:                                ; preds = %bb, %dec_label_pc_f2e8
  %v2_f2f2 = phi i32 [ %v1_f2f2, %bb ], [ %v3_f2eb, %dec_label_pc_f2e8 ]
  ret i32 %v2_f2f2
}

define i32 @function_f2f9() local_unnamed_addr {
dec_label_pc_f2f9:
  %v0_f2fe = load i32, i32* @eax, align 8
  ret i32 %v0_f2fe
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14nothing_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f300:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f323

bb:                                               ; preds = %dec_label_pc_f300
  %v2_f321 = call i32 @function_f328(i32 %arg1)
  br label %dec_label_pc_f323

dec_label_pc_f323:                                ; preds = %bb, %dec_label_pc_f300
  %v3_f321 = phi i32 [ %v2_f321, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f300 ]
  ret i32 %v3_f321
}

define i32 @function_f328(i32 %arg1) local_unnamed_addr {
dec_label_pc_f328:
  %v0_f329 = load i32, i32* @eax, align 8
  ret i32 %v0_f329
}

define i32 @_ZN5boost6spirit7classic14nothing_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f32a:
  store i32 %arg1, i32* @eax, align 8
  %v1_f347 = call i32 @function_1e62a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f358

bb:                                               ; preds = %dec_label_pc_f32a
  %v1_f356 = call i32 @function_f35d()
  br label %dec_label_pc_f358

dec_label_pc_f358:                                ; preds = %bb, %dec_label_pc_f32a
  %v2_f356 = phi i32 [ %v1_f356, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f32a ]
  ret i32 %v2_f356

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f35d() local_unnamed_addr {
dec_label_pc_f35d:
  %v0_f35e = load i32, i32* @eax, align 8
  ret i32 %v0_f35e
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f360:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f383

bb:                                               ; preds = %dec_label_pc_f360
  %v2_f381 = call i32 @function_f388(i32 %arg1)
  br label %dec_label_pc_f383

dec_label_pc_f383:                                ; preds = %bb, %dec_label_pc_f360
  %v3_f381 = phi i32 [ %v2_f381, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f360 ]
  ret i32 %v3_f381
}

define i32 @function_f388(i32 %arg1) local_unnamed_addr {
dec_label_pc_f388:
  %v0_f389 = load i32, i32* @eax, align 8
  ret i32 %v0_f389
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_14anychar_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f38a:
  %v1_f3a7 = call i32 @function_1e6ea(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f3b8

bb:                                               ; preds = %dec_label_pc_f38a
  %v1_f3b6 = call i32 @function_f3bd()
  br label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %bb, %dec_label_pc_f38a
  %v2_f3b6 = phi i32 [ %v1_f3b6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f38a ]
  ret i32 %v2_f3b6
}

define i32 @function_f3bd() local_unnamed_addr {
dec_label_pc_f3bd:
  %v0_f3be = load i32, i32* @eax, align 8
  ret i32 %v0_f3be
}

define i32 @_ZN5boost6spirit7classic14anychar_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3c0:
  store i32 %arg1, i32* @eax, align 8
  %v1_f3dd = call i32 @function_1e74a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f3ee

bb:                                               ; preds = %dec_label_pc_f3c0
  %v1_f3ec = call i32 @function_f3f3()
  br label %dec_label_pc_f3ee

dec_label_pc_f3ee:                                ; preds = %bb, %dec_label_pc_f3c0
  %v2_f3ec = phi i32 [ %v1_f3ec, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f3c0 ]
  ret i32 %v2_f3ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f3f3() local_unnamed_addr {
dec_label_pc_f3f3:
  %v0_f3f4 = load i32, i32* @eax, align 8
  ret i32 %v0_f3f4
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3f6:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f419

bb:                                               ; preds = %dec_label_pc_f3f6
  %v2_f417 = call i32 @function_f41e(i32 %arg1)
  br label %dec_label_pc_f419

dec_label_pc_f419:                                ; preds = %bb, %dec_label_pc_f3f6
  %v3_f417 = phi i32 [ %v2_f417, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f3f6 ]
  ret i32 %v3_f417
}

define i32 @function_f41e(i32 %arg1) local_unnamed_addr {
dec_label_pc_f41e:
  %v0_f41f = load i32, i32* @eax, align 8
  ret i32 %v0_f41f
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alnum_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f420:
  store i32 %arg1, i32* @eax, align 8
  %v1_f43d = call i32 @function_1e816(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f44e

bb:                                               ; preds = %dec_label_pc_f420
  %v1_f44c = call i32 @function_f453()
  br label %dec_label_pc_f44e

dec_label_pc_f44e:                                ; preds = %bb, %dec_label_pc_f420
  %v2_f44c = phi i32 [ %v1_f44c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f420 ]
  ret i32 %v2_f44c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f453() local_unnamed_addr {
dec_label_pc_f453:
  %v0_f454 = load i32, i32* @eax, align 8
  ret i32 %v0_f454
}

define i32 @_ZN5boost6spirit7classic12alnum_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f456:
  store i32 %arg1, i32* @eax, align 8
  %v1_f473 = call i32 @function_1e876(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f484

bb:                                               ; preds = %dec_label_pc_f456
  %v1_f482 = call i32 @function_f489()
  br label %dec_label_pc_f484

dec_label_pc_f484:                                ; preds = %bb, %dec_label_pc_f456
  %v2_f482 = phi i32 [ %v1_f482, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f456 ]
  ret i32 %v2_f482

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f489() local_unnamed_addr {
dec_label_pc_f489:
  %v0_f48a = load i32, i32* @eax, align 8
  ret i32 %v0_f48a
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f48c:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f4af

bb:                                               ; preds = %dec_label_pc_f48c
  %v2_f4ad = call i32 @function_f4b4(i32 %arg1)
  br label %dec_label_pc_f4af

dec_label_pc_f4af:                                ; preds = %bb, %dec_label_pc_f48c
  %v3_f4ad = phi i32 [ %v2_f4ad, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f48c ]
  ret i32 %v3_f4ad
}

define i32 @function_f4b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4b4:
  %v0_f4b5 = load i32, i32* @eax, align 8
  ret i32 %v0_f4b5
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12alpha_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4b6:
  store i1 false, i1* @of, align 1
  store i1 false, i1* @sf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_f4d3 = call i32 @function_1e942(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f4e4

bb:                                               ; preds = %dec_label_pc_f4b6
  %v1_f4e2 = call i32 @function_f4e9()
  br label %dec_label_pc_f4e4

dec_label_pc_f4e4:                                ; preds = %bb, %dec_label_pc_f4b6
  %v2_f4e2 = phi i32 [ %v1_f4e2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f4b6 ]
  ret i32 %v2_f4e2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f4e9() local_unnamed_addr {
dec_label_pc_f4e9:
  %v0_f4ea = load i32, i32* @eax, align 8
  ret i32 %v0_f4ea
}

define i32 @_ZN5boost6spirit7classic12alpha_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4ec:
  store i32 %arg1, i32* @eax, align 8
  %v1_f509 = call i32 @function_1e9a2(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f51a

bb:                                               ; preds = %dec_label_pc_f4ec
  %v1_f518 = call i32 @function_f51f()
  br label %dec_label_pc_f51a

dec_label_pc_f51a:                                ; preds = %bb, %dec_label_pc_f4ec
  %v2_f518 = phi i32 [ %v1_f518, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f4ec ]
  ret i32 %v2_f518

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f51f() local_unnamed_addr {
dec_label_pc_f51f:
  %v0_f520 = load i32, i32* @eax, align 8
  ret i32 %v0_f520
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f522:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f545

bb:                                               ; preds = %dec_label_pc_f522
  %v2_f543 = call i32 @function_f54a(i32 %arg1)
  br label %dec_label_pc_f545

dec_label_pc_f545:                                ; preds = %bb, %dec_label_pc_f522
  %v3_f543 = phi i32 [ %v2_f543, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f522 ]
  ret i32 %v3_f543
}

define i32 @function_f54a(i32 %arg1) local_unnamed_addr {
dec_label_pc_f54a:
  %v0_f54b = load i32, i32* @eax, align 8
  ret i32 %v0_f54b
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12cntrl_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f54c:
  store i32 %arg1, i32* @eax, align 8
  %v1_f569 = call i32 @function_1ea6e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f57a

bb:                                               ; preds = %dec_label_pc_f54c
  %v1_f578 = call i32 @function_f57f()
  br label %dec_label_pc_f57a

dec_label_pc_f57a:                                ; preds = %bb, %dec_label_pc_f54c
  %v2_f578 = phi i32 [ %v1_f578, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f54c ]
  ret i32 %v2_f578

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f57f() local_unnamed_addr {
dec_label_pc_f57f:
  %v0_f580 = load i32, i32* @eax, align 8
  ret i32 %v0_f580
}

define i32 @_ZN5boost6spirit7classic12cntrl_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f582:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f5b0

bb:                                               ; preds = %dec_label_pc_f582
  %v2_f5ae = call i32 @function_f5b5(i32 %arg1)
  br label %dec_label_pc_f5b0

dec_label_pc_f5b0:                                ; preds = %bb, %dec_label_pc_f582
  %v3_f5ae = phi i32 [ %v2_f5ae, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f582 ]
  ret i32 %v3_f5ae
}

define i32 @function_f5b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5b5:
  %v0_f5b6 = load i32, i32* @eax, align 8
  ret i32 %v0_f5b6
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5b8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f5db

bb:                                               ; preds = %dec_label_pc_f5b8
  %v2_f5d9 = call i32 @function_f5e0(i32 %arg1)
  br label %dec_label_pc_f5db

dec_label_pc_f5db:                                ; preds = %bb, %dec_label_pc_f5b8
  %v3_f5d9 = phi i32 [ %v2_f5d9, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f5b8 ]
  ret i32 %v3_f5d9
}

define i32 @function_f5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5e0:
  %v0_f5e1 = load i32, i32* @eax, align 8
  ret i32 %v0_f5e1
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12digit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5e2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f610

bb:                                               ; preds = %dec_label_pc_f5e2
  %v2_f60e = call i32 @function_f615(i32 %arg1)
  br label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %bb, %dec_label_pc_f5e2
  %v3_f60e = phi i32 [ %v2_f60e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f5e2 ]
  ret i32 %v3_f60e
}

define i32 @function_f615(i32 %arg1) local_unnamed_addr {
dec_label_pc_f615:
  %v0_f616 = load i32, i32* @eax, align 8
  ret i32 %v0_f616
}

define i32 @_ZN5boost6spirit7classic12digit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f618:
  %v1_f635 = call i32 @function_1ebfa(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f646

bb:                                               ; preds = %dec_label_pc_f618
  %v1_f644 = call i32 @function_f64b()
  br label %dec_label_pc_f646

dec_label_pc_f646:                                ; preds = %bb, %dec_label_pc_f618
  %v2_f644 = phi i32 [ %v1_f644, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f618 ]
  ret i32 %v2_f644
}

define i32 @function_f64b() local_unnamed_addr {
dec_label_pc_f64b:
  %v0_f64c = load i32, i32* @eax, align 8
  ret i32 %v0_f64c
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f64e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f671

bb:                                               ; preds = %dec_label_pc_f64e
  %v2_f66f = call i32 @function_f676(i32 %arg1)
  br label %dec_label_pc_f671

dec_label_pc_f671:                                ; preds = %bb, %dec_label_pc_f64e
  %v3_f66f = phi i32 [ %v2_f66f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f64e ]
  ret i32 %v3_f66f
}

define i32 @function_f676(i32 %arg1) local_unnamed_addr {
dec_label_pc_f676:
  %v0_f677 = load i32, i32* @eax, align 8
  ret i32 %v0_f677
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12graph_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f678:
  store i32 %arg1, i32* @eax, align 8
  %v1_f695 = call i32 @function_1ecc6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f6a6

bb:                                               ; preds = %dec_label_pc_f678
  %v1_f6a4 = call i32 @function_f6ab()
  br label %dec_label_pc_f6a6

dec_label_pc_f6a6:                                ; preds = %bb, %dec_label_pc_f678
  %v2_f6a4 = phi i32 [ %v1_f6a4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f678 ]
  ret i32 %v2_f6a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f6ab() local_unnamed_addr {
dec_label_pc_f6ab:
  %v0_f6ac = load i32, i32* @eax, align 8
  ret i32 %v0_f6ac
}

define i32 @_ZN5boost6spirit7classic12graph_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6ae:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f6dc

bb:                                               ; preds = %dec_label_pc_f6ae
  %v2_f6da = call i32 @function_f6e1(i32 %arg1)
  br label %dec_label_pc_f6dc

dec_label_pc_f6dc:                                ; preds = %bb, %dec_label_pc_f6ae
  %v3_f6da = phi i32 [ %v2_f6da, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f6ae ]
  ret i32 %v3_f6da
}

define i32 @function_f6e1(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6e1:
  %v0_f6e2 = load i32, i32* @eax, align 8
  ret i32 %v0_f6e2
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6e4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f707

bb:                                               ; preds = %dec_label_pc_f6e4
  %v2_f705 = call i32 @function_f70c(i32 %arg1)
  br label %dec_label_pc_f707

dec_label_pc_f707:                                ; preds = %bb, %dec_label_pc_f6e4
  %v3_f705 = phi i32 [ %v2_f705, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f6e4 ]
  ret i32 %v3_f705
}

define i32 @function_f70c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f70c:
  %v0_f70d = load i32, i32* @eax, align 8
  ret i32 %v0_f70d
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12lower_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f70e:
  store i32 %arg1, i32* @eax, align 8
  %v1_f72b = call i32 @function_1edf2(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12lower_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f744:
  store i32 %arg1, i32* @eax, align 8
  %v1_f761 = call i32 @function_1ee52(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f772

bb:                                               ; preds = %dec_label_pc_f744
  %v1_f770 = call i32 @function_f777()
  br label %dec_label_pc_f772

dec_label_pc_f772:                                ; preds = %bb, %dec_label_pc_f744
  %v2_f770 = phi i32 [ %v1_f770, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f744 ]
  ret i32 %v2_f770

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f777() local_unnamed_addr {
dec_label_pc_f777:
  %v0_f778 = load i32, i32* @eax, align 8
  ret i32 %v0_f778
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f77a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f79d

bb:                                               ; preds = %dec_label_pc_f77a
  %v2_f79b = call i32 @function_f7a2(i32 %arg1)
  br label %dec_label_pc_f79d

dec_label_pc_f79d:                                ; preds = %bb, %dec_label_pc_f77a
  %v3_f79b = phi i32 [ %v2_f79b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f77a ]
  ret i32 %v3_f79b
}

define i32 @function_f7a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7a2:
  %v0_f7a3 = load i32, i32* @eax, align 8
  ret i32 %v0_f7a3
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12print_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7a4:
  store i32 %arg1, i32* @eax, align 8
  %v1_f7c1 = call i32 @function_1ef1e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f7d2

bb:                                               ; preds = %dec_label_pc_f7a4
  %v1_f7d0 = call i32 @function_f7d7()
  br label %dec_label_pc_f7d2

dec_label_pc_f7d2:                                ; preds = %bb, %dec_label_pc_f7a4
  %v2_f7d0 = phi i32 [ %v1_f7d0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f7a4 ]
  ret i32 %v2_f7d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f7d7() local_unnamed_addr {
dec_label_pc_f7d7:
  %v0_f7d8 = load i32, i32* @eax, align 8
  ret i32 %v0_f7d8
}

define i32 @_ZN5boost6spirit7classic12print_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f7da:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_f7f7 = call i32 @function_1ef7e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f808

bb:                                               ; preds = %dec_label_pc_f7da
  %v1_f806 = call i32 @function_f80d()
  br label %dec_label_pc_f808

dec_label_pc_f808:                                ; preds = %bb, %dec_label_pc_f7da
  %v2_f806 = phi i32 [ %v1_f806, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f7da ]
  ret i32 %v2_f806

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f80d() local_unnamed_addr {
dec_label_pc_f80d:
  %v0_f80e = load i32, i32* @eax, align 8
  ret i32 %v0_f80e
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f810:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f833

bb:                                               ; preds = %dec_label_pc_f810
  %v2_f831 = call i32 @function_f838(i32 %arg1)
  br label %dec_label_pc_f833

dec_label_pc_f833:                                ; preds = %bb, %dec_label_pc_f810
  %v3_f831 = phi i32 [ %v2_f831, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f810 ]
  ret i32 %v3_f831
}

define i32 @function_f838(i32 %arg1) local_unnamed_addr {
dec_label_pc_f838:
  %v0_f839 = load i32, i32* @eax, align 8
  ret i32 %v0_f839
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12punct_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f83a:
  %v1_f857 = call i32 @function_1f04a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f868

bb:                                               ; preds = %dec_label_pc_f83a
  %v1_f866 = call i32 @function_f86d()
  br label %dec_label_pc_f868

dec_label_pc_f868:                                ; preds = %bb, %dec_label_pc_f83a
  %v2_f866 = phi i32 [ %v1_f866, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f83a ]
  ret i32 %v2_f866
}

define i32 @function_f86d() local_unnamed_addr {
dec_label_pc_f86d:
  %v0_f86e = load i32, i32* @eax, align 8
  ret i32 %v0_f86e
}

define i32 @_ZN5boost6spirit7classic12punct_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f870:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f89e

bb:                                               ; preds = %dec_label_pc_f870
  %v2_f89c = call i32 @function_f8a3(i32 %arg1)
  br label %dec_label_pc_f89e

dec_label_pc_f89e:                                ; preds = %bb, %dec_label_pc_f870
  %v3_f89c = phi i32 [ %v2_f89c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f870 ]
  ret i32 %v3_f89c
}

define i32 @function_f8a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8a3:
  %v0_f8a4 = load i32, i32* @eax, align 8
  ret i32 %v0_f8a4
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8a6:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f8c9

bb:                                               ; preds = %dec_label_pc_f8a6
  %v2_f8c7 = call i32 @function_f8ce(i32 %arg1)
  br label %dec_label_pc_f8c9

dec_label_pc_f8c9:                                ; preds = %bb, %dec_label_pc_f8a6
  %v3_f8c7 = phi i32 [ %v2_f8c7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f8a6 ]
  ret i32 %v3_f8c7
}

define i32 @function_f8ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8ce:
  %v0_f8cf = load i32, i32* @eax, align 8
  ret i32 %v0_f8cf
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12blank_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8d0:
  store i32 %arg1, i32* @eax, align 8
  %v1_f8ed = call i32 @function_1f176(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f8fe

bb:                                               ; preds = %dec_label_pc_f8d0
  %v1_f8fc = call i32 @function_f903()
  br label %dec_label_pc_f8fe

dec_label_pc_f8fe:                                ; preds = %bb, %dec_label_pc_f8d0
  %v2_f8fc = phi i32 [ %v1_f8fc, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f8d0 ]
  ret i32 %v2_f8fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f903() local_unnamed_addr {
dec_label_pc_f903:
  %v0_f904 = load i32, i32* @eax, align 8
  ret i32 %v0_f904
}

define i32 @_ZN5boost6spirit7classic12blank_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f906:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f934

bb:                                               ; preds = %dec_label_pc_f906
  %v2_f932 = call i32 @function_f939(i32 %arg1)
  br label %dec_label_pc_f934

dec_label_pc_f934:                                ; preds = %bb, %dec_label_pc_f906
  %v3_f932 = phi i32 [ %v2_f932, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f906 ]
  ret i32 %v3_f932
}

define i32 @function_f939(i32 %arg1) local_unnamed_addr {
dec_label_pc_f939:
  %v0_f93a = load i32, i32* @eax, align 8
  ret i32 %v0_f93a
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f93c:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f95f

bb:                                               ; preds = %dec_label_pc_f93c
  %v2_f95d = call i32 @function_f964(i32 %arg1)
  br label %dec_label_pc_f95f

dec_label_pc_f95f:                                ; preds = %bb, %dec_label_pc_f93c
  %v3_f95d = phi i32 [ %v2_f95d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f93c ]
  ret i32 %v3_f95d
}

define i32 @function_f964(i32 %arg1) local_unnamed_addr {
dec_label_pc_f964:
  %v0_f965 = load i32, i32* @eax, align 8
  ret i32 %v0_f965
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12space_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f966:
  store i32 %arg1, i32* @eax, align 8
  %v1_f983 = call i32 @function_1f2a2(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic12space_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f99c:
  %v1_f9b9 = call i32 @function_1f302(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f9ca

bb:                                               ; preds = %dec_label_pc_f99c
  %v1_f9c8 = call i32 @function_f9cf()
  br label %dec_label_pc_f9ca

dec_label_pc_f9ca:                                ; preds = %bb, %dec_label_pc_f99c
  %v2_f9c8 = phi i32 [ %v1_f9c8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f99c ]
  ret i32 %v2_f9c8
}

define i32 @function_f9cf() local_unnamed_addr {
dec_label_pc_f9cf:
  %v0_f9d0 = load i32, i32* @eax, align 8
  ret i32 %v0_f9d0
}

define i32 @_ZN5boost6spirit7classic6parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9d2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_f9f5

bb:                                               ; preds = %dec_label_pc_f9d2
  %v2_f9f3 = call i32 @function_f9fa(i32 %arg1)
  br label %dec_label_pc_f9f5

dec_label_pc_f9f5:                                ; preds = %bb, %dec_label_pc_f9d2
  %v3_f9f3 = phi i32 [ %v2_f9f3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_f9d2 ]
  ret i32 %v3_f9f3
}

define i32 @function_f9fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9fa:
  %v0_f9fb = load i32, i32* @eax, align 8
  ret i32 %v0_f9fb
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_12upper_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9fc:
  %v1_fa19 = call i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertERKSR_(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic12upper_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa32:
  store i32 %arg1, i32* @eax, align 8
  %v1_fa4f = call i32 @function_1f42e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fa60

bb:                                               ; preds = %dec_label_pc_fa32
  %v1_fa5e = call i32 @function_fa65()
  br label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %bb, %dec_label_pc_fa32
  %v2_fa5e = phi i32 [ %v1_fa5e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fa32 ]
  ret i32 %v2_fa5e

; uselistorder directives
  uselistorder i32 (i32)* @function_1f42e, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fa65() local_unnamed_addr {
dec_label_pc_fa65:
  %v0_fa66 = load i32, i32* @eax, align 8
  ret i32 %v0_fa66
}

define i32 @_ZN5boost6spirit7classic6parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa68:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fa8b

bb:                                               ; preds = %dec_label_pc_fa68
  %v2_fa89 = call i32 @function_fa90(i32 %arg1)
  br label %dec_label_pc_fa8b

dec_label_pc_fa8b:                                ; preds = %bb, %dec_label_pc_fa68
  %v3_fa89 = phi i32 [ %v2_fa89, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fa68 ]
  ret i32 %v3_fa89
}

define i32 @function_fa90(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa90:
  %v0_fa91 = load i32, i32* @eax, align 8
  ret i32 %v0_fa91
}

define i32 @_ZN5boost6spirit7classic11char_parserINS1_13xdigit_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa92:
  store i32 %arg1, i32* @eax, align 8
  %v1_faaf = call i32 @function_1f4fa(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fac0

bb:                                               ; preds = %dec_label_pc_fa92
  %v1_fabe = call i32 @function_fac5()
  br label %dec_label_pc_fac0

dec_label_pc_fac0:                                ; preds = %bb, %dec_label_pc_fa92
  %v2_fabe = phi i32 [ %v1_fabe, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fa92 ]
  ret i32 %v2_fabe

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fac5() local_unnamed_addr {
dec_label_pc_fac5:
  %v0_fac6 = load i32, i32* @eax, align 8
  ret i32 %v0_fac6
}

define i32 @_ZN5boost6spirit7classic13xdigit_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fac8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_faf6

bb:                                               ; preds = %dec_label_pc_fac8
  %v2_faf4 = call i32 @function_fafb(i32 %arg1)
  br label %dec_label_pc_faf6

dec_label_pc_faf6:                                ; preds = %bb, %dec_label_pc_fac8
  %v3_faf4 = phi i32 [ %v2_faf4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fac8 ]
  ret i32 %v3_faf4
}

define i32 @function_fafb(i32 %arg1) local_unnamed_addr {
dec_label_pc_fafb:
  %v0_fafc = load i32, i32* @eax, align 8
  ret i32 %v0_fafc
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10eol_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fafe:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fb21

bb:                                               ; preds = %dec_label_pc_fafe
  %v2_fb1f = call i32 @function_fb26(i32 %arg1)
  br label %dec_label_pc_fb21

dec_label_pc_fb21:                                ; preds = %bb, %dec_label_pc_fafe
  %v3_fb1f = phi i32 [ %v2_fb1f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fafe ]
  ret i32 %v3_fb1f
}

define i32 @function_fb26(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb26:
  %v0_fb27 = load i32, i32* @eax, align 8
  ret i32 %v0_fb27
}

define i32 @_ZN5boost6spirit7classic10eol_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb28:
  %v1_fb45 = call i32 @function_1f626(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fb56

bb:                                               ; preds = %dec_label_pc_fb28
  %v1_fb54 = call i32 @function_fb5b()
  br label %dec_label_pc_fb56

dec_label_pc_fb56:                                ; preds = %bb, %dec_label_pc_fb28
  %v2_fb54 = phi i32 [ %v1_fb54, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fb28 ]
  ret i32 %v2_fb54
}

define i32 @function_fb5b() local_unnamed_addr {
dec_label_pc_fb5b:
  %v0_fb5c = load i32, i32* @eax, align 8
  ret i32 %v0_fb5c
}

define i32 @_ZN5boost6spirit7classic6parserINS1_10end_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb5e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fb81

bb:                                               ; preds = %dec_label_pc_fb5e
  %v2_fb7f = call i32 @function_fb86(i32 %arg1)
  br label %dec_label_pc_fb81

dec_label_pc_fb81:                                ; preds = %bb, %dec_label_pc_fb5e
  %v3_fb7f = phi i32 [ %v2_fb7f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fb5e ]
  ret i32 %v3_fb7f
}

define i32 @function_fb86(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb86:
  %v0_fb87 = load i32, i32* @eax, align 8
  ret i32 %v0_fb87
}

define i32 @_ZN5boost6spirit7classic10end_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb88:
  store i32 %arg1, i32* @eax, align 8
  %v1_fba5 = call i32 @function_1f6e6(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic28inhibit_case_parser_gen_baseILi0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbbe:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic23inhibit_case_parser_genC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbe8:
  store i32 %arg1, i32* @eax, align 8
  %v1_fc05 = call i32 @function_1f7a6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fc16

bb:                                               ; preds = %dec_label_pc_fbe8
  %v1_fc14 = call i32 @function_fc1b()
  br label %dec_label_pc_fc16

dec_label_pc_fc16:                                ; preds = %bb, %dec_label_pc_fbe8
  %v2_fc14 = phi i32 [ %v1_fc14, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fbe8 ]
  ret i32 %v2_fc14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fc1b() local_unnamed_addr {
dec_label_pc_fc1b:
  %v0_fc1c = load i32, i32* @eax, align 8
  ret i32 %v0_fc1c
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11sign_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc1e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fc41

bb:                                               ; preds = %dec_label_pc_fc1e
  %v2_fc3f = call i32 @function_fc46(i32 %arg1)
  br label %dec_label_pc_fc41

dec_label_pc_fc41:                                ; preds = %bb, %dec_label_pc_fc1e
  %v3_fc3f = phi i32 [ %v2_fc3f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fc1e ]
  ret i32 %v3_fc3f
}

define i32 @function_fc46(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc46:
  %v0_fc47 = load i32, i32* @eax, align 8
  ret i32 %v0_fc47
}

define i32 @_ZN5boost6spirit7classic11sign_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc48:
  store i32 %arg1, i32* @eax, align 8
  %v1_fc65 = call i32 @function_1f866(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_14epsilon_parserEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc7e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fca1

bb:                                               ; preds = %dec_label_pc_fc7e
  %v2_fc9f = call i32 @function_fca6(i32 %arg1)
  br label %dec_label_pc_fca1

dec_label_pc_fca1:                                ; preds = %bb, %dec_label_pc_fc7e
  %v3_fc9f = phi i32 [ %v2_fc9f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fc7e ]
  ret i32 %v3_fc9f
}

define i32 @function_fca6(i32 %arg1) local_unnamed_addr {
dec_label_pc_fca6:
  %v0_fca7 = load i32, i32* @eax, align 8
  ret i32 %v0_fca7
}

define i32 @_ZN5boost6spirit7classic14epsilon_parserC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fca8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fcd6

bb:                                               ; preds = %dec_label_pc_fca8
  %v2_fcd4 = call i32 @function_fcdb(i32 %arg1)
  br label %dec_label_pc_fcd6

dec_label_pc_fcd6:                                ; preds = %bb, %dec_label_pc_fca8
  %v3_fcd4 = phi i32 [ %v2_fcd4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fca8 ]
  ret i32 %v3_fcd4
}

define i32 @function_fcdb(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcdb:
  %v0_fcdc = load i32, i32* @eax, align 8
  ret i32 %v0_fcdc
}

define i32 @_ZN5boost8signals29slot_baseD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcde:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fd0c

bb:                                               ; preds = %dec_label_pc_fcde
  %v2_fd0a = call i32 @function_fd11(i32 %arg1)
  br label %dec_label_pc_fd0c

dec_label_pc_fd0c:                                ; preds = %bb, %dec_label_pc_fcde
  %v3_fd0a = phi i32 [ %v2_fd0a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fcde ]
  ret i32 %v3_fd0a
}

define i32 @function_fd11(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd11:
  %v0_fd12 = load i32, i32* @eax, align 8
  ret i32 %v0_fd12
}

define i32 @_ZN5boost8functionIFbRKSsS2_jEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd14:
  store i32 %arg1, i32* @eax, align 8
  %v1_fd31 = call i32 @function_210fe(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fd42

bb:                                               ; preds = %dec_label_pc_fd14
  %v1_fd40 = call i32 @function_fd47()
  br label %dec_label_pc_fd42

dec_label_pc_fd42:                                ; preds = %bb, %dec_label_pc_fd14
  %v2_fd40 = phi i32 [ %v1_fd40, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fd14 ]
  ret i32 %v2_fd40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fd47() local_unnamed_addr {
dec_label_pc_fd47:
  %v0_fd48 = load i32, i32* @eax, align 8
  ret i32 %v0_fd48
}

define i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd4a:
  %v1_fd65 = add i32 %arg1, 12
  store i32 %v1_fd65, i32* @eax, align 8
  %v1_fd6b = call i32 @function_1fa5e(i32 %v1_fd65)
  store i32 %arg1, i32* @eax, align 8
  %v1_fd76 = call i32 @function_1fa28(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fd87

bb:                                               ; preds = %dec_label_pc_fd4a
  %v1_fd85 = call i32 @function_fda5()
  store i32 %v1_fd85, i32* @eax, align 8
  br label %dec_label_pc_fd87

dec_label_pc_fd87:                                ; preds = %bb, %dec_label_pc_fd4a
  %v0_fd87 = call i32 @function_fda0()
  ret i32 %v0_fd87

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_fd8a() local_unnamed_addr {
dec_label_pc_fd8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_fd8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_fd8a
}

define i32 @function_fda0() local_unnamed_addr {
dec_label_pc_fda0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_fda5() local_unnamed_addr {
dec_label_pc_fda5:
  %v0_fdaa = load i32, i32* @eax, align 8
  ret i32 %v0_fdaa
}

define i32 @_ZN5boost8functionIFbxEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fdac:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_fdc9 = call i32 @function_212d2(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fdda

bb:                                               ; preds = %dec_label_pc_fdac
  %v1_fdd8 = call i32 @function_fddf()
  br label %dec_label_pc_fdda

dec_label_pc_fdda:                                ; preds = %bb, %dec_label_pc_fdac
  %v2_fdd8 = phi i32 [ %v1_fdd8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fdac ]
  ret i32 %v2_fdd8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fddf() local_unnamed_addr {
dec_label_pc_fddf:
  %v0_fde0 = load i32, i32* @eax, align 8
  ret i32 %v0_fde0
}

define i32 @_ZN5boost8signals25slot1IbxNS_8functionIFbxEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fde2:
  %v1_fdfd = add i32 %arg1, 12
  store i32 %v1_fdfd, i32* @eax, align 8
  %v1_fe03 = call i32 @function_1fb8e(i32 %v1_fdfd)
  store i32 %arg1, i32* @eax, align 8
  %v1_fe0e = call i32 @function_1fac0(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fe38

bb:                                               ; preds = %dec_label_pc_fde2
  %v1_fe1d = call i32 @function_fe3d()
  br label %dec_label_pc_fe38

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fde2, %bb
  %v0_fe1f = phi i32 [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fde2 ], [ %v1_fe1d, %bb ]
  ret i32 %v0_fe1f

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe38, { 1, 0 }
}

define i32 @function_fe21() local_unnamed_addr {
dec_label_pc_fe21:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_fe21 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_fe21, i32* %ebx.global-to-local, align 8
  %v0_fe23 = load i32, i32* @ebp, align 4
  %v1_fe23 = add i32 %v0_fe23, -28
  %v2_fe23 = inttoptr i32 %v1_fe23 to i32*
  %v3_fe23 = load i32, i32* %v2_fe23, align 4
  store i32 %v3_fe23, i32* @eax, align 8
  %v1_fe29 = call i32 @function_1fac0(i32 %v3_fe23)
  %v0_fe2e = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_fe2e, i32* %eax.global-to-local, align 8
  ret i32 %v0_fe2e

; uselistorder directives
  uselistorder i32 (i32)* @function_1fac0, { 1, 0 }
}

define i32 @function_fe3d() local_unnamed_addr {
dec_label_pc_fe3d:
  %v0_fe42 = load i32, i32* @eax, align 8
  ret i32 %v0_fe42
}

define i32 @_ZN5boost8functionIFvRKSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe44:
  store i32 %arg1, i32* @eax, align 8
  %v1_fe61 = call i32 @function_214a6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_fe72

bb:                                               ; preds = %dec_label_pc_fe44
  %v1_fe70 = call i32 @function_fe77()
  br label %dec_label_pc_fe72

dec_label_pc_fe72:                                ; preds = %bb, %dec_label_pc_fe44
  %v2_fe70 = phi i32 [ %v1_fe70, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fe44 ]
  ret i32 %v2_fe70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fe77() local_unnamed_addr {
dec_label_pc_fe77:
  %v0_fe78 = load i32, i32* @eax, align 8
  ret i32 %v0_fe78
}

define i32 @_ZN5boost8signals25slot1IvRKSsNS_8functionIFvS3_EEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fe7a:
  %v1_fe95 = add i32 %arg1, 12
  %v1_fe9b = call i32 @function_1fcbe(i32 %v1_fe95)
  store i32 %arg1, i32* @eax, align 8
  %v1_fea6 = call i32 @function_1fb58(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_feb7

bb:                                               ; preds = %dec_label_pc_fe7a
  %v1_feb5 = call i32 @function_fed5()
  store i32 %v1_feb5, i32* @eax, align 8
  br label %dec_label_pc_feb7

dec_label_pc_feb7:                                ; preds = %bb, %dec_label_pc_fe7a
  %v0_feb7 = call i32 @function_fed0()
  ret i32 %v0_feb7

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_feba() local_unnamed_addr {
dec_label_pc_feba:
  %eax.global-to-local = alloca i32, align 4
  %v0_feba = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_feba
}

define i32 @function_fed0() local_unnamed_addr {
dec_label_pc_fed0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_fed5() local_unnamed_addr {
dec_label_pc_fed5:
  %v0_feda = load i32, i32* @eax, align 8
  ret i32 %v0_feda
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_fedc:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ff08

bb:                                               ; preds = %dec_label_pc_fedc
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_ff06 = call i32 @function_ff0d(i32 %tmp102)
  br label %dec_label_pc_ff08

dec_label_pc_ff08:                                ; preds = %bb, %dec_label_pc_fedc
  %v3_ff06 = phi i32 [ %v2_ff06, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fedc ]
  ret i32 %v3_ff06

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_ff0d(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff0d:
  %v0_ff0e = load i32, i32* @eax, align 8
  ret i32 %v0_ff0e
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff10:
  %v1_ff2d = call i32 @function_21618(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_ff46:
  %ebp.global-to-local = alloca i32, align 4
  %v0_ff46 = load i32, i32* %ebp.global-to-local, align 4
  %v2_ff60 = load i32, i32* %arg1, align 4
  store i32 %v0_ff46, i32* %ebp.global-to-local, align 4
  ret i32 %v2_ff60
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_ff76:
  %v2_ff96 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_ffa2 = call i32 @function_200e8(i32 %arg1, i32 %v2_ff96)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_ffb6

bb:                                               ; preds = %dec_label_pc_ff76
  %v1_ffb4 = call i32 @function_ffbb()
  br label %dec_label_pc_ffb6

dec_label_pc_ffb6:                                ; preds = %bb, %dec_label_pc_ff76
  %v2_ffb4 = phi i32 [ %v1_ffb4, %bb ], [ %arg1, %dec_label_pc_ff76 ]
  ret i32 %v2_ffb4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_ffbb() local_unnamed_addr {
dec_label_pc_ffbb:
  %v0_ffbc = load i32, i32* @eax, align 8
  ret i32 %v0_ffbc
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffbe:
  %ebp.global-to-local = alloca i32, align 4
  %v0_ffbe = load i32, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_33c8c.1922 to i32), i32* %arg1, align 4
  store i32 %v0_ffbe, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1001b

bb:                                               ; preds = %dec_label_pc_fff8
  %v2_10019 = call i32 @function_10020(i32 %arg1)
  br label %dec_label_pc_1001b

dec_label_pc_1001b:                               ; preds = %bb, %dec_label_pc_fff8
  %v3_10019 = phi i32 [ %v2_10019, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_fff8 ]
  ret i32 %v3_10019
}

define i32 @function_10020(i32 %arg1) local_unnamed_addr {
dec_label_pc_10020:
  %v0_10021 = load i32, i32* @eax, align 8
  ret i32 %v0_10021
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10022:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1004c:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10076:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100a0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_100c3

bb:                                               ; preds = %dec_label_pc_100a0
  %v2_100c1 = call i32 @function_100c8(i32 %arg1)
  br label %dec_label_pc_100c3

dec_label_pc_100c3:                               ; preds = %bb, %dec_label_pc_100a0
  %v3_100c1 = phi i32 [ %v2_100c1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_100a0 ]
  ret i32 %v3_100c1
}

define i32 @function_100c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100c8:
  %v0_100c9 = load i32, i32* @eax, align 8
  ret i32 %v0_100c9
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100ca:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_100f4:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1011e:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10148:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1016b

bb:                                               ; preds = %dec_label_pc_10148
  %v2_10169 = call i32 @function_10170(i32 %arg1)
  br label %dec_label_pc_1016b

dec_label_pc_1016b:                               ; preds = %bb, %dec_label_pc_10148
  %v3_10169 = phi i32 [ %v2_10169, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_10148 ]
  ret i32 %v3_10169
}

define i32 @function_10170(i32 %arg1) local_unnamed_addr {
dec_label_pc_10170:
  %v0_10171 = load i32, i32* @eax, align 8
  ret i32 %v0_10171
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10172:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v1_10195 = call i32 @function_2187a(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 8
  %v1_101a8 = call i32 @function_218e0(i32 %tmp102)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101c0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_101c0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_101e0 = inttoptr i32 %arg2 to i32*
  %v2_101e0 = load i32, i32* %v1_101e0, align 4
  store i32 %v2_101e0, i32* %arg1, align 4
  store i32 %v0_101c0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10206:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v2_10223 = call i32 @function_10d06(i32 %tmp100)
  %v1_1022b = add i32 %tmp100, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_10231 = call i32 @function_10b2e(i32 %v1_1022b)
  store i32 ptrtoint (%vtable_33c44_type* @global_var_33c44.1929 to i32), i32* %arg1, align 4
  %v2_10242 = inttoptr i32 %v1_1022b to i32*
  store i32 ptrtoint (i32* @global_var_33c54.1930 to i32), i32* %v2_10242, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1025c:
  %v5_1025c = sub i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_10261 = call i32 @function_204c2(i32 %v5_1025c)
  ret i32 %v2_10261
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_10266:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33c44_type* @global_var_33c44.1929 to i32), i32* %arg1, align 4
  %v1_10289 = add i32 %tmp99, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_10289 = inttoptr i32 %v1_10289 to i32*
  store i32 ptrtoint (i32* @global_var_33c54.1930 to i32), i32* %v2_10289, align 4
  ret i32 %v1_10289
}

define i32 @function_102c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_102c2:
  %v0_102c3 = load i32, i32* @eax, align 8
  %v3_102c3 = xor i32 %v0_102c3, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_102c3
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_102d4:
  %v5_102d4 = sub i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_102d9 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v5_102d4)
  ret i32 %v2_102d9
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_102dc:
  store i32 %arg1, i32* @eax, align 8
  %v1_102f9 = call i32 @function_2053a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10315

bb:                                               ; preds = %dec_label_pc_102dc
  %v2_10313 = call i32 @function_1031a(i32 %arg1)
  br label %dec_label_pc_10315

dec_label_pc_10315:                               ; preds = %bb, %dec_label_pc_102dc
  %v3_10313 = phi i32 [ %v2_10313, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_102dc ]
  ret i32 %v3_10313

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1031a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1031a:
  %v0_1031b = load i32, i32* @eax, align 8
  ret i32 %v0_1031b
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1031c:
  ret i32 0
}

define i32 @function_1033a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1033a:
  %v0_1033a = load i32, i32* @ebp, align 4
  %v1_1033d = add i32 %v0_1033a, 1
  store i32 %v1_1033d, i32* @ebp, align 4
  %v0_10341 = load i32, i32* @eax, align 8
  %v11_10341 = and i32 %v0_10341, -252
  store i32 %v11_10341, i32* @eax, align 8
  %v1_10346 = call i32 @function_1eb2a(i32 %v11_10341)
  %v0_1034b = load i32, i32* @ebp, align 4
  %v1_1034b = add i32 %v0_1034b, -28
  %v2_1034b = inttoptr i32 %v1_1034b to i32*
  %v3_1034b = load i32, i32* %v2_1034b, align 4
  %v1_1034e = inttoptr i32 %v3_1034b to i32*
  store i32 8, i32* %v1_1034e, align 4
  %v0_10354 = load i32, i32* @ebp, align 4
  %v1_10354 = add i32 %v0_10354, -12
  %v2_10354 = inttoptr i32 %v1_10354 to i32*
  %v3_10354 = load i32, i32* %v2_10354, align 4
  %v3_10357 = xor i32 %v3_10354, ptrtoint ([3 x i8]* @3 to i32)
  %v4_10357 = icmp eq i32 %v3_10357, 0
  store i32 %v3_10357, i32* @eax, align 8
  br i1 %v4_10357, label %bb, label %dec_label_pc_10360

bb:                                               ; preds = %dec_label_pc_1033a
  %v1_1035e = call i32 @function_10365()
  br label %dec_label_pc_10360

dec_label_pc_10360:                               ; preds = %bb, %dec_label_pc_1033a
  %v3_1035e = phi i32 [ %v1_1035e, %bb ], [ %v3_10357, %dec_label_pc_1033a ]
  ret i32 %v3_1035e

; uselistorder directives
  uselistorder i32 %v11_10341, { 1, 0 }
}

define i32 @function_10365() local_unnamed_addr {
dec_label_pc_10365:
  %v0_10366 = load i32, i32* @eax, align 8
  ret i32 %v0_10366
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10368:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @eax, align 8
  %v4_10392 = call i32 @function_1e3d4(i32 %tmp104, i32 %arg2)
  %v1_103a0 = add i32 %tmp104, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 ptrtoint (%vtable_33c44_type* @global_var_33c44.1929 to i32), i32* %arg1, align 4
  %v2_103bb = inttoptr i32 %v1_103a0 to i32*
  store i32 ptrtoint (i32* @global_var_33c54.1930 to i32), i32* %v2_103bb, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33c44_type* @global_var_33c44.1929 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103d6:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v4_10400 = call i32 @function_2073e(i32 %tmp104, i32 %arg2)
  %v1_10408 = add i32 %arg2, ptrtoint (i8** @global_var_18.1931 to i32)
  %v1_1040e = add i32 %tmp104, ptrtoint (i8** @global_var_18.1931 to i32)
  %v5_1040e = icmp ult i32 %v1_1040e, %tmp104
  store i1 %v5_1040e, i1* @cf, align 1
  %v4_10418 = call i32 @function_20394(i32 %v1_1040e, i32 %v1_10408)
  store i32 ptrtoint (%vtable_33be4_type* @global_var_33be4.1932 to i32), i32* %arg1, align 4
  %v1_10429 = add i32 %tmp104, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_10429 = inttoptr i32 %v1_10429 to i32*
  store i32 ptrtoint (i32* @global_var_33bfc.1933 to i32), i32* %v2_10429, align 4
  %v2_10433 = inttoptr i32 %v1_1040e to i32*
  store i32 ptrtoint (i32* @global_var_33c10.1934 to i32), i32* %v2_10433, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10454:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_1046e = ptrtoint i32* %stack_var_-68 to i32
  %v2_10480 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10480, i32* @eax, align 8
  %v2_10486 = call i32 @function_21c40(i32 %v2_10480, i32 %v2_1046e)
  %v2_10493 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10493, i32* @eax, align 8
  %v2_10499 = call i32 @function_10f1c(i32 %v2_10493, i32 ptrtoint (i32* @global_var_51.1935 to i32))
  %v2_104a6 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_104a6, i32* @eax, align 8
  %v2_104ac = call i32 @function_10ee4(i32 %v2_104a6, i32 ptrtoint ([54 x i8]* @global_var_269c.1936 to i32))
  %v2_104b9 = ptrtoint i32* %stack_var_-36 to i32
  %v2_104bf = call i32 @function_10eac(i32 %v2_104b9, i32 ptrtoint ([169 x i8]* @global_var_3b3c.1937 to i32))
  store i32 %v2_10480, i32* @eax, align 8
  %v2_104d1 = call i32 @function_21dc6(i32 %v2_10480, i32 %v2_104b9)
  store i32 %v2_104d1, i32* @eax, align 8
  %v2_104e0 = call i32 @function_21e08(i32 %v2_104d1, i32 %v2_104a6)
  %v2_104ef = call i32 @function_21e4a(i32 %v2_104e0, i32 %v2_10493)
  %v2_104f9 = load i8, i8* inttoptr (i32 66644 to i8*), align 4
  %v3_104f9 = zext i8 %v2_104f9 to i32
  ret i32 %v3_104f9
}

define i32 @function_10527() local_unnamed_addr {
dec_label_pc_10527:
  %eax.global-to-local = alloca i32, align 4
  %v0_10527 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10527
}

define i32 @function_105aa() local_unnamed_addr {
dec_label_pc_105aa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_105aa = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_105aa, i32* @edi, align 8
  %v0_105ac = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_105aa, i32* @ebx, align 8
  %v1_105b6 = call i32 @function_105ba(i32 %v0_105ac)
  store i32 %v1_105b6, i32* %eax.global-to-local, align 8
  ret i32 %v1_105b6
}

define i32 @function_105b8() local_unnamed_addr {
dec_label_pc_105b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_105b8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_105b8
}

define i32 @function_105ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_105ba:
  %v0_105ba = load i32, i32* @esi, align 4
  %v4_105bc = trunc i32 %v0_105ba to i8
  %v5_105bc = icmp eq i8 %v4_105bc, 0
  %v1_105be = icmp eq i1 %v5_105bc, false
  br i1 %v1_105be, label %bb, label %dec_label_pc_105c0

bb:                                               ; preds = %dec_label_pc_105ba
  %v2_105be = call i32 @function_105cc()
  br label %dec_label_pc_105c0

dec_label_pc_105c0:                               ; preds = %bb, %dec_label_pc_105ba
  %v2_105c0 = phi i32 [ %v2_105be, %bb ], [ %v0_105ba, %dec_label_pc_105ba ]
  ret i32 %v2_105c0
}

define i32 @function_105cc() local_unnamed_addr {
dec_label_pc_105cc:
  %v0_105cc = call i32 @function_105d0()
  ret i32 %v0_105cc
}

define i32 @function_105ce() local_unnamed_addr {
dec_label_pc_105ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_105ce = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_105ce
}

define i32 @function_105d0() local_unnamed_addr {
dec_label_pc_105d0:
  %v0_105d0 = load i32, i32* @ebp, align 4
  %v1_105d0 = add i32 %v0_105d0, -92
  store i32 %v1_105d0, i32* @eax, align 8
  %v1_105d6 = call i32 @function_21d00(i32 %v1_105d0)
  %v0_105db = call i32 @function_105df()
  ret i32 %v0_105db
}

define i32 @function_105dd() local_unnamed_addr {
dec_label_pc_105dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_105dd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_105dd
}

define i32 @function_105df() local_unnamed_addr {
dec_label_pc_105df:
  %v0_105df = load i32, i32* @ebp, align 4
  %v1_105df = add i32 %v0_105df, -64
  store i32 %v1_105df, i32* @eax, align 8
  %v1_105e5 = call i32 @function_206ba(i32 %v1_105df)
  %v0_105ea = load i32, i32* @ebx, align 8
  ret i32 %v0_105ea
}

define i32 @function_105f4() local_unnamed_addr {
dec_label_pc_105f4:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_105f9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_105f9:
  %eax.global-to-local = alloca i32, align 4
  %v0_10600 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10600
}

define i32 @_ZN5boost17bad_function_callD1Ev(i32* %arg1) {
dec_label_pc_10604:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33bcc_type* @global_var_33bcc.1938 to i32), i32* %arg1, align 4
  %v2_10639 = call i32 @function_10646(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_10646(i32 %arg1) local_unnamed_addr {
dec_label_pc_10646:
  %v0_10646 = load i32, i32* @ebp, align 4
  %v1_10646 = add i32 %v0_10646, -12
  %v2_10646 = inttoptr i32 %v1_10646 to i32*
  %v3_10646 = load i32, i32* %v2_10646, align 4
  %v3_10649 = xor i32 %v3_10646, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_10649
}

define i32 @_ZN5boost17bad_function_callD0Ev(i32 %arg1) {
dec_label_pc_1065a:
  %v1_10677 = call i32 @function_20c5e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10693

bb:                                               ; preds = %dec_label_pc_1065a
  %v2_10691 = call i32 @function_10698(i32 %arg1)
  br label %dec_label_pc_10693

dec_label_pc_10693:                               ; preds = %bb, %dec_label_pc_1065a
  %v3_10691 = phi i32 [ %v2_10691, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1065a ]
  ret i32 %v3_10691
}

define i32 @function_10698(i32 %arg1) local_unnamed_addr {
dec_label_pc_10698:
  %v0_10699 = load i32, i32* @eax, align 8
  ret i32 %v0_10699
}

define i32 @_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1069a:
  ret i32 %arg1
}

define i32 @function_106dc() local_unnamed_addr {
dec_label_pc_106dc:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_106dc = load i32, i32* %ecx.global-to-local, align 4
  %v1_106dc = add i32 %v0_106dc, -1
  store i32 %v1_106dc, i32* %ecx.global-to-local, align 4
  %v0_106de = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_106de
}

define i32 @_ZN5boost10scoped_ptrINS_8signals26detail26foreign_weak_ptr_impl_baseEEC1EPS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106e0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_106e0 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_106e0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10scoped_ptrINS_8signals26detail26foreign_weak_ptr_impl_baseEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10718:
  %v2_10732 = load i32, i32* %arg1, align 4
  %v1_10737 = call i32 @function_223b5(i32 %v2_10732)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10748

bb:                                               ; preds = %dec_label_pc_10718
  %v1_10746 = call i32 @function_1074d()
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %bb, %dec_label_pc_10718
  %v2_10746 = phi i32 [ %v1_10746, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_10718 ]
  ret i32 %v2_10746
}

define i32 @function_1074d() local_unnamed_addr {
dec_label_pc_1074d:
  %v0_1074e = load i32, i32* @eax, align 8
  ret i32 %v0_1074e
}

define i32 @_ZNK5boost10scoped_ptrINS_8signals26detail26foreign_weak_ptr_impl_baseEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10750:
  %v2_1076a = load i32, i32* %arg1, align 4
  %v1_1076c = icmp eq i32 %v2_1076a, 0
  %v1_1076e = icmp eq i1 %v1_1076c, false
  br i1 %v1_1076e, label %dec_label_pc_10794, label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %dec_label_pc_10750
  br label %dec_label_pc_10794

dec_label_pc_10794:                               ; preds = %dec_label_pc_10770, %dec_label_pc_10750
  %v2_10797 = load i32, i32* %arg1, align 4
  store i32 %v2_10797, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_107a5

bb:                                               ; preds = %dec_label_pc_10794
  %v1_107a3 = call i32 @function_107aa()
  br label %dec_label_pc_107a5

dec_label_pc_107a5:                               ; preds = %bb, %dec_label_pc_10794
  %v2_107a3 = phi i32 [ %v1_107a3, %bb ], [ %v2_10797, %dec_label_pc_10794 ]
  ret i32 %v2_107a3
}

define i32 @function_107aa() local_unnamed_addr {
dec_label_pc_107aa:
  %v0_107ab = load i32, i32* @eax, align 8
  ret i32 %v0_107ab
}

define i32 @_ZN5boost6detail21is_static_visitor_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_107ac:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_107cf

bb:                                               ; preds = %dec_label_pc_107ac
  %v2_107cd = call i32 @function_107d4(i32 %arg1)
  br label %dec_label_pc_107cf

dec_label_pc_107cf:                               ; preds = %bb, %dec_label_pc_107ac
  %v3_107cd = phi i32 [ %v2_107cd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_107ac ]
  ret i32 %v3_107cd
}

define i32 @function_107d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_107d4:
  %v0_107d5 = load i32, i32* @eax, align 8
  ret i32 %v0_107d5
}

define i32 @_ZN5boost14static_visitorIvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_107d6:
  store i32 %arg1, i32* @eax, align 8
  %v1_107f3 = call i32 @function_20f82(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10804

bb:                                               ; preds = %dec_label_pc_107d6
  %v1_10802 = call i32 @function_10809()
  br label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %bb, %dec_label_pc_107d6
  %v2_10802 = phi i32 [ %v1_10802, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_107d6 ]
  ret i32 %v2_10802

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10809() local_unnamed_addr {
dec_label_pc_10809:
  %v0_1080a = load i32, i32* @eax, align 8
  ret i32 %v0_1080a
}

define i32 @_ZN5boost14static_visitorIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1080c:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10836:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_10848(i32 %arg1) local_unnamed_addr {
dec_label_pc_10848:
  %v0_10848 = load i32, i32* @eax, align 8
  %v1_10848 = load i32, i32* @ebp, align 4
  %v2_10848 = add i32 %v1_10848, -12
  %v3_10848 = inttoptr i32 %v2_10848 to i32*
  store i32 %v0_10848, i32* %v3_10848, align 4
  %v0_1084d = load i32, i32* @ebp, align 4
  %v1_1084d = add i32 %v0_1084d, -28
  %v2_1084d = inttoptr i32 %v1_1084d to i32*
  %v3_1084d = load i32, i32* %v2_1084d, align 4
  %v1_10850 = inttoptr i32 %v3_1084d to i32*
  store i32 0, i32* %v1_10850, align 4
  %v0_10856 = load i32, i32* @ebp, align 4
  %v1_10856 = add i32 %v0_10856, -12
  %v2_10856 = inttoptr i32 %v1_10856 to i32*
  %v3_10856 = load i32, i32* %v2_10856, align 4
  %v3_10859 = xor i32 %v3_10856, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_10859
}

define i32 @_ZNKSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1086a:
  %stack_var_-20 = alloca i32, align 4
  %v2_1088a = load i32, i32* %arg2, align 4
  store i32 %v2_1088a, i32* %stack_var_-20, align 4
  %v2_1088f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_1089c = call i32 @function_2254a(i32 %arg1, i32 %v2_1088f)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_108ba:
  ret i32 %arg1
}

define i32 @_ZN9__gnu_cxxneIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEEbRKNS_17__normal_iteratorIT_T0_EESM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1090a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1090d = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 8
  %v1_1092e = call i32 @function_22624(i32 %arg1)
  %v1_10933 = inttoptr i32 %v1_1092e to i32*
  %v2_10933 = load i32, i32* %v1_10933, align 4
  store i32 %v2_10933, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_1093b = call i32 @function_22624(i32 %arg2)
  %v1_10940 = inttoptr i32 %v1_1093b to i32*
  %v2_10940 = load i32, i32* %v1_10940, align 4
  %v12_10942 = icmp eq i32 %v2_10933, %v2_10940
  %v1_10944 = icmp eq i1 %v12_10942, false
  %v2_10944 = zext i1 %v1_10944 to i32
  %v4_10944 = and i32 %v2_10940, -256
  %v5_10944 = or i32 %v2_10944, %v4_10944
  store i32 %v0_1090d, i32* %ebx.global-to-local, align 8
  ret i32 %v5_10944

; uselistorder directives
  uselistorder i32 %v2_10940, { 1, 0 }
  uselistorder i32 (i32)* @function_22624, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1095e:
  %ebp.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_1095e = load i32, i32* %ebp.global-to-local, align 4
  %v2_10978 = load i32, i32* %arg1, align 4
  %v1_1097a = add i32 %v2_10978, 12
  store i32 %v1_1097a, i32* %arg1, align 4
  store i32 %v0_1095e, i32* %ebp.global-to-local, align 4
  ret i32 %tmp100
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10998:
  %v2_109b2 = load i32, i32* %arg1, align 4
  store i32 %v2_109b2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_109c0

bb:                                               ; preds = %dec_label_pc_10998
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_109be = call i32 @function_109c5(i32 %tmp100)
  br label %dec_label_pc_109c0

dec_label_pc_109c0:                               ; preds = %bb, %dec_label_pc_10998
  %v3_109be = phi i32 [ %v2_109be, %bb ], [ %v2_109b2, %dec_label_pc_10998 ]
  ret i32 %v3_109be

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_109c5(i32 %arg1) local_unnamed_addr {
dec_label_pc_109c5:
  %v0_109c6 = load i32, i32* @eax, align 8
  ret i32 %v0_109c6
}

define i32 @_ZN5boost13apply_visitorINS_8signals26detail21lock_weak_ptr_visitorEKNS_7variantINS_8weak_ptrIvEENS2_21foreign_void_weak_ptrENS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEENT_11result_typeERKSD_RT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_109c7:
  ret i32 %arg3
}

define i32 @function_109dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_109dc:
  %v0_109dc = load i32, i32* @eax, align 8
  %v1_109dc = load i32, i32* @ebp, align 4
  %v2_109dc = add i32 %v1_109dc, -36
  %v3_109dc = inttoptr i32 %v2_109dc to i32*
  store i32 %v0_109dc, i32* %v3_109dc, align 4
  %v1_109e5 = load i32, i32* @ebp, align 4
  %v2_109e5 = add i32 %v1_109e5, -12
  %v3_109e5 = inttoptr i32 %v2_109e5 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_109e5, align 4
  %v0_109ea = load i32, i32* @ebp, align 4
  %v1_109ea = add i32 %v0_109ea, -28
  %v2_109ea = inttoptr i32 %v1_109ea to i32*
  %v3_109ea = load i32, i32* %v2_109ea, align 4
  %v1_109ed = add i32 %v0_109ea, -32
  %v2_109ed = inttoptr i32 %v1_109ed to i32*
  %v3_109ed = load i32, i32* %v2_109ed, align 4
  %v1_109f4 = add i32 %v0_109ea, -36
  %v2_109f4 = inttoptr i32 %v1_109f4 to i32*
  %v3_109f4 = load i32, i32* %v2_109f4, align 4
  %v3_109fe = call i32 @function_2270f(i32 %v3_109ea, i32 %v3_109f4, i32 %v3_109ed)
  %v0_10a06 = load i32, i32* @ebp, align 4
  %v1_10a06 = add i32 %v0_10a06, -28
  %v2_10a06 = inttoptr i32 %v1_10a06 to i32*
  %v3_10a06 = load i32, i32* %v2_10a06, align 4
  store i32 %v3_10a06, i32* @eax, align 8
  %v1_10a09 = add i32 %v0_10a06, -12
  %v2_10a09 = inttoptr i32 %v1_10a09 to i32*
  %v3_10a09 = load i32, i32* %v2_10a09, align 4
  %v4_10a0c = icmp eq i32 %v3_10a09, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_10a0c, label %bb, label %dec_label_pc_10a15

bb:                                               ; preds = %dec_label_pc_109dc
  %v1_10a13 = call i32 @function_10a1a()
  br label %dec_label_pc_10a15

dec_label_pc_10a15:                               ; preds = %bb, %dec_label_pc_109dc
  %v2_10a13 = phi i32 [ %v1_10a13, %bb ], [ %v3_10a06, %dec_label_pc_109dc ]
  ret i32 %v2_10a13
}

define i32 @function_10a1a() local_unnamed_addr {
dec_label_pc_10a1a:
  %v0_10a1b = load i32, i32* @eax, align 8
  ret i32 %v0_10a1b
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a1e:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @function_10a5e() local_unnamed_addr {
dec_label_pc_10a5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_10a5e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10a5e
}

define i32 @function_10a70(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a70:
  %v0_10a70 = load i32, i32* @eax, align 8
  %v2_10a70 = add i32 %v0_10a70, 36
  %v16_10a70 = urem i32 %v2_10a70, 256
  %v18_10a70 = and i32 %v0_10a70, -256
  %v19_10a70 = or i32 %v16_10a70, %v18_10a70
  ret i32 %v19_10a70

; uselistorder directives
  uselistorder i32 %v0_10a70, { 1, 0 }
}

define i32 @_ZN5boost13apply_visitorINS_8signals26detail24expired_weak_ptr_visitorEKNS_7variantINS_8weak_ptrIvEENS2_21foreign_void_weak_ptrENS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEENT_11result_typeERKSD_RT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10a82:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 8
  %v2_10aac = call i32 @function_229fc(i32 %arg2, i32 %arg1)
  store i32 %v2_10aac, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10abd

bb:                                               ; preds = %dec_label_pc_10a82
  %v1_10abb = call i32 @function_10ac2()
  br label %dec_label_pc_10abd

dec_label_pc_10abd:                               ; preds = %bb, %dec_label_pc_10a82
  %v2_10abb = phi i32 [ %v1_10abb, %bb ], [ %v2_10aac, %dec_label_pc_10a82 ]
  ret i32 %v2_10abb

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10ac2() local_unnamed_addr {
dec_label_pc_10ac2:
  %v0_10ac3 = load i32, i32* @eax, align 8
  ret i32 %v0_10ac3
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ac4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_10ac7 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 8
  %v1_10ae2 = call i32 @function_22af2(i32 %arg1)
  store i32 %v0_10ac7, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8weak_ptrIvEC1Ev() local_unnamed_addr {
dec_label_pc_10b28:
  %eax.global-to-local = alloca i32, align 4
  %v17_10b2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_10b2b
}

define i32 @function_10b2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b2e:
  %v0_10b2e = load i32, i32* @ebp, align 4
  %v1_10b2e = add i32 %v0_10b2e, 8
  %v2_10b2e = inttoptr i32 %v1_10b2e to i32*
  %v3_10b2e = load i32, i32* %v2_10b2e, align 4
  %v2_10b31 = add i32 %v0_10b2e, -28
  %v3_10b31 = inttoptr i32 %v2_10b31 to i32*
  store i32 %v3_10b2e, i32* %v3_10b31, align 4
  %v1_10b3a = load i32, i32* @ebp, align 4
  %v2_10b3a = add i32 %v1_10b3a, -12
  %v3_10b3a = inttoptr i32 %v2_10b3a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_10b3a, align 4
  %v0_10b3f = load i32, i32* @ebp, align 4
  %v1_10b3f = add i32 %v0_10b3f, -28
  %v2_10b3f = inttoptr i32 %v1_10b3f to i32*
  %v3_10b3f = load i32, i32* %v2_10b3f, align 4
  %v1_10b42 = inttoptr i32 %v3_10b3f to i32*
  store i32 0, i32* %v1_10b42, align 4
  %v0_10b48 = load i32, i32* @ebp, align 4
  %v1_10b48 = add i32 %v0_10b48, -28
  %v2_10b48 = inttoptr i32 %v1_10b48 to i32*
  %v3_10b48 = load i32, i32* %v2_10b48, align 4
  %v1_10b4b = add i32 %v3_10b48, 4
  store i32 %v1_10b4b, i32* @eax, align 8
  %v1_10b51 = call i32 @function_12e9a(i32 %v1_10b4b)
  %v0_10b56 = load i32, i32* @ebp, align 4
  %v1_10b56 = add i32 %v0_10b56, -12
  %v2_10b56 = inttoptr i32 %v1_10b56 to i32*
  %v3_10b56 = load i32, i32* %v2_10b56, align 4
  %v3_10b59 = xor i32 %v3_10b56, ptrtoint ([3 x i8]* @3 to i32)
  %v4_10b59 = icmp eq i32 %v3_10b59, 0
  store i32 %v3_10b59, i32* @eax, align 8
  br i1 %v4_10b59, label %bb, label %dec_label_pc_10b62

bb:                                               ; preds = %dec_label_pc_10b2e
  %v1_10b60 = call i32 @function_10b67()
  br label %dec_label_pc_10b62

dec_label_pc_10b62:                               ; preds = %bb, %dec_label_pc_10b2e
  %v2_10b60 = phi i32 [ %v1_10b60, %bb ], [ %v3_10b59, %dec_label_pc_10b2e ]
  ret i32 %v2_10b60
}

define i32 @function_10b67() local_unnamed_addr {
dec_label_pc_10b67:
  %v0_10b68 = load i32, i32* @eax, align 8
  ret i32 %v0_10b68
}

define i32 @_ZN5boost8signals26detail11unique_lockINS1_20connection_body_baseEEC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10b6a:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_10b6d = load i32, i32* %ebx.global-to-local, align 8
  store i32 %tmp102, i32* @eax, align 8
  %v1_10b8e = call i32 @function_130d4(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_10b6d, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11unique_lockINS1_20connection_body_baseEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10be2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_10c16 = call i32 @function_13176(i32 %tmp100)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10c40

bb:                                               ; preds = %dec_label_pc_10be2
  %v1_10c25 = call i32 @function_10c45()
  br label %dec_label_pc_10c40

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10be2, %bb
  %v0_10c27 = phi i32 [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_10be2 ], [ %v1_10c25, %bb ]
  ret i32 %v0_10c27

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
  uselistorder label %dec_label_pc_10c40, { 1, 0 }
}

define i32 @function_10c29() local_unnamed_addr {
dec_label_pc_10c29:
  %eax.global-to-local = alloca i32, align 4
  %v0_10c29 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_10c29, i32* @ebx, align 8
  %v0_10c2b = load i32, i32* @ebp, align 4
  %v1_10c2b = add i32 %v0_10c2b, -28
  %v2_10c2b = inttoptr i32 %v1_10c2b to i32*
  %v3_10c2b = load i32, i32* %v2_10c2b, align 4
  store i32 %v3_10c2b, i32* @eax, align 8
  %v1_10c31 = call i32 @function_13176(i32 %v3_10c2b)
  %v0_10c36 = load i32, i32* @ebx, align 8
  store i32 %v0_10c36, i32* %eax.global-to-local, align 8
  ret i32 %v0_10c36

; uselistorder directives
  uselistorder i32 (i32)* @function_13176, { 1, 0 }
}

define i32 @function_10c45() local_unnamed_addr {
dec_label_pc_10c45:
  %v0_10c4a = load i32, i32* @eax, align 8
  ret i32 %v0_10c4a
}

define i32 @_ZNK5boost8weak_ptrIvE4lockEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c4c:
  %edx.global-to-local = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v0_10c69 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_10c69, 16777216
  %v3_10c7a = sdiv i32 %sext, 16777216
  %v4_10c7a = call i32 @function_22cea(i32 %arg1, i32 %arg2, i32 %v3_10c7a)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost8weak_ptrIvE7expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10c98:
  %v1_10cb2 = add i32 %arg1, 4
  store i32 %v1_10cb2, i32* @eax, align 8
  %v1_10cb8 = call i32 @function_1311e(i32 %v1_10cb2)
  %v1_10cbd = icmp eq i32 %v1_10cb8, 0
  %v1_10cbf = zext i1 %v1_10cbd to i32
  %v3_10cbf = and i32 %v1_10cb8, -256
  %v4_10cbf = or i32 %v1_10cbf, %v3_10cbf
  ret i32 %v4_10cbf
}

define i32 @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEEclES3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10cd6:
  %v1_10cfc = add i32 %arg2, 4
  ret i32 %v1_10cfc
}

define i32 @function_10d06(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d06:
  %v0_10d06 = load i32, i32* @ebx, align 8
  %v1_10d06 = add i32 %v0_10d06, 1301013589
  %v2_10d06 = inttoptr i32 %v1_10d06 to i8*
  %v3_10d06 = load i8, i8* %v2_10d06, align 1
  %v4_10d06 = load i32, i32* @ecx, align 4
  %v5_10d06 = trunc i32 %v4_10d06 to i8
  %v6_10d06 = add i8 %v5_10d06, %v3_10d06
  store i8 %v6_10d06, i8* %v2_10d06, align 1
  %v0_10d13 = load i32, i32* @eax, align 8
  %v11_10d13 = and i32 %v0_10d13, -252
  store i32 %v11_10d13, i32* @eax, align 8
  %v0_10d15 = load i32, i32* @edx, align 8
  %v1_10d18 = call i32 @function_22ee6(i32 %v0_10d15)
  %v0_10d20 = load i32, i32* @ebp, align 4
  %v1_10d20 = add i32 %v0_10d20, -28
  %v2_10d20 = inttoptr i32 %v1_10d20 to i32*
  %v3_10d20 = load i32, i32* %v2_10d20, align 4
  store i32 %v3_10d20, i32* @eax, align 8
  %v1_10d23 = add i32 %v0_10d20, -12
  %v2_10d23 = inttoptr i32 %v1_10d23 to i32*
  %v3_10d23 = load i32, i32* %v2_10d23, align 4
  %v4_10d26 = icmp eq i32 %v3_10d23, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_10d26, label %bb, label %dec_label_pc_10d2f

bb:                                               ; preds = %dec_label_pc_10d06
  %v1_10d2d = call i32 @function_10d34()
  br label %dec_label_pc_10d2f

dec_label_pc_10d2f:                               ; preds = %bb, %dec_label_pc_10d06
  %v2_10d2d = phi i32 [ %v1_10d2d, %bb ], [ %v3_10d20, %dec_label_pc_10d06 ]
  ret i32 %v2_10d2d
}

define i32 @function_10d34() local_unnamed_addr {
dec_label_pc_10d34:
  %v0_10d35 = load i32, i32* @eax, align 8
  ret i32 %v0_10d35
}

define i32 @_ZN5boost8optionalISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d38:
  %v1_10d55 = call i32 @function_2329e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10d66

bb:                                               ; preds = %dec_label_pc_10d38
  %v1_10d64 = call i32 @function_10d6b()
  br label %dec_label_pc_10d66

dec_label_pc_10d66:                               ; preds = %bb, %dec_label_pc_10d38
  %v2_10d64 = phi i32 [ %v1_10d64, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_10d38 ]
  ret i32 %v2_10d64
}

define i32 @function_10d6b() local_unnamed_addr {
dec_label_pc_10d6b:
  %v0_10d6c = load i32, i32* @eax, align 8
  ret i32 %v0_10d6c
}

define i32 @_ZN5boost8optionalISsEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d6e:
  %v1_10d8b = call i32 @function_23334(i32 %arg1)
  store i32 %v1_10d8b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10d9c

bb:                                               ; preds = %dec_label_pc_10d6e
  %v1_10d9a = call i32 @function_10da1()
  br label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %bb, %dec_label_pc_10d6e
  %v2_10d9a = phi i32 [ %v1_10d9a, %bb ], [ %v1_10d8b, %dec_label_pc_10d6e ]
  ret i32 %v2_10d9a
}

define i32 @function_10da1() local_unnamed_addr {
dec_label_pc_10da1:
  %v0_10da2 = load i32, i32* @eax, align 8
  ret i32 %v0_10da2
}

define i32 @_ZNK5boost8optionalISsEcvMNS_15optional_detail13optional_baseISsEEKFbvEEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10da4:
  ret i32 0
}

define i32 @function_10dc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dc6:
  %v0_10dc9 = load i32, i32* @eax, align 8
  %v11_10dc9 = and i32 %v0_10dc9, -252
  %v1_10dce = call i32 @function_233d2(i32 %v11_10dc9)
  %v0_10dd6 = load i32, i32* @ebp, align 4
  %v1_10dd6 = add i32 %v0_10dd6, -28
  %v2_10dd6 = inttoptr i32 %v1_10dd6 to i32*
  %v3_10dd6 = load i32, i32* %v2_10dd6, align 4
  store i32 %v3_10dd6, i32* @eax, align 8
  %v1_10dd9 = add i32 %v0_10dd6, -12
  %v2_10dd9 = inttoptr i32 %v1_10dd9 to i32*
  %v3_10dd9 = load i32, i32* %v2_10dd9, align 4
  %v4_10ddc = icmp eq i32 %v3_10dd9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_10ddc, label %bb, label %dec_label_pc_10de5

bb:                                               ; preds = %dec_label_pc_10dc6
  %v1_10de3 = call i32 @function_10dea()
  br label %dec_label_pc_10de5

dec_label_pc_10de5:                               ; preds = %bb, %dec_label_pc_10dc6
  %v2_10de3 = phi i32 [ %v1_10de3, %bb ], [ %v3_10dd6, %dec_label_pc_10dc6 ]
  ret i32 %v2_10de3
}

define i32 @function_10dea() local_unnamed_addr {
dec_label_pc_10dea:
  %v0_10deb = load i32, i32* @eax, align 8
  ret i32 %v0_10deb
}

define i32 @_ZN5boost6detail7variant9copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10dee:
  %v1_10e0b = call i32 @__assert_fail.1766(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_10e1c

bb:                                               ; preds = %dec_label_pc_10dee
  %v1_10e1a = call i32 @function_10e21()
  br label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %bb, %dec_label_pc_10dee
  %v2_10e1a = phi i32 [ %v1_10e1a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_10dee ]
  ret i32 %v2_10e1a
}

define i32 @function_10e21() local_unnamed_addr {
dec_label_pc_10e21:
  %v0_10e22 = load i32, i32* @eax, align 8
  ret i32 %v0_10e22
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e24:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_10e44 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10e44, i32* @eax, align 8
  %v2_10e4e = call i32 @function_23500(i32 %v2_10e44, i32 %arg1)
  %v2_10e59 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg2, i32* @ecx, align 4
  %v3_10e6a = call i32 @function_2354a(i32 %v2_10e59, i32 %arg1, i32 %arg2)
  store i32 %v2_10e59, i32* @eax, align 8
  %v2_10e7f = call i32 @function_23636(i32 %v2_10e59, i32 %v2_10e44)
  %v4_10e84 = trunc i32 %v2_10e7f to i8
  %v5_10e84 = icmp eq i8 %v4_10e84, 0
  %. = zext i1 %v5_10e84 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt4pairIKSsSsED1Ev() local_unnamed_addr {
dec_label_pc_10ea8:
  %eax.global-to-local = alloca i32, align 4
  %v5_10eab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_10eab
}

define i32 @function_10eac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10eac:
  %v0_10eaf = load i32, i32* @ebp, align 4
  %v1_10eaf = add i32 %v0_10eaf, 8
  %v2_10eaf = inttoptr i32 %v1_10eaf to i32*
  %v3_10eaf = load i32, i32* %v2_10eaf, align 4
  %v2_10eb2 = add i32 %v0_10eaf, -28
  %v3_10eb2 = inttoptr i32 %v2_10eb2 to i32*
  store i32 %v3_10eaf, i32* %v3_10eb2, align 4
  %v1_10ebb = load i32, i32* @ebp, align 4
  %v2_10ebb = add i32 %v1_10ebb, -12
  %v3_10ebb = inttoptr i32 %v2_10ebb to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_10ebb, align 4
  %v0_10ec0 = load i32, i32* @ebp, align 4
  %v1_10ec0 = add i32 %v0_10ec0, -28
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i32*
  %v3_10ec0 = load i32, i32* %v2_10ec0, align 4
  %v1_10ec3 = add i32 %v3_10ec0, 4
  ret i32 %v1_10ec3
}

define i32 @function_10ee4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ee4:
  %v0_10ee4 = load i16, i16* @ds, align 2
  %v1_10ee5 = sext i16 %v0_10ee4 to i32
  %v2_10ee5 = call i32 @function_10efe(i32 %v1_10ee5)
  ret i32 %v2_10ee5
}

define i32 @function_10ee8() local_unnamed_addr {
dec_label_pc_10ee8:
  %eax.global-to-local = alloca i32, align 4
  %v0_10ee8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10ee8
}

define i32 @function_10efe(i32 %arg1) local_unnamed_addr {
dec_label_pc_10efe:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_10f02() local_unnamed_addr {
dec_label_pc_10f02:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10f02 = load i32, i32* %ebx.global-to-local, align 8
  %v1_10f02 = add i32 %v0_10f02, 1566258372
  %v2_10f02 = inttoptr i32 %v1_10f02 to i32*
  %v3_10f02 = load i32, i32* %v2_10f02, align 4
  %v4_10f02 = add i32 %v3_10f02, 1
  store i32 %v4_10f02, i32* %v2_10f02, align 4
  %v0_10f08 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_10f08
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f0a:
  ret i32 %arg2
}

define i32 @function_10f1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f1c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10f1c = load i32, i32* @ebp, align 4
  %v1_10f1c = add i32 %v0_10f1c, -95
  %v2_10f1c = inttoptr i32 %v1_10f1c to i8*
  %v3_10f1c = load i8, i8* %v2_10f1c, align 1
  %v5_10f1c = mul i8 %v3_10f1c, 2
  store i8 %v5_10f1c, i8* %v2_10f1c, align 1
  %v16_10f1c = icmp slt i8 %v3_10f1c, 0
  %v0_10f1f = load i32, i32* @eax, align 8
  %v1_10f1f = trunc i32 %v0_10f1f to i8
  %v3_10f1f = zext i1 %v16_10f1c to i8
  %v4_10f1f = add i8 %v1_10f1f, %v3_10f1f
  %v22_10f1f = zext i8 %v4_10f1f to i32
  %v24_10f1f = and i32 %v0_10f1f, -256
  %v25_10f1f = or i32 %v22_10f1f, %v24_10f1f
  store i32 %v25_10f1f, i32* %eax.global-to-local, align 8
  %v1_10f21 = inttoptr i32 %v25_10f1f to i8*
  %v2_10f21 = load i8, i8* %v1_10f21, align 1
  %v5_10f21 = add i8 %v2_10f21, %v4_10f1f
  store i8 %v5_10f21, i8* %v1_10f21, align 1
  %v0_10f23 = load i32, i32* %eax.global-to-local, align 8
  %v1_10f23 = load i32, i32* @ebp, align 4
  %v2_10f23 = add i32 %v1_10f23, -12
  %v3_10f23 = inttoptr i32 %v2_10f23 to i32*
  store i32 %v0_10f23, i32* %v3_10f23, align 4
  %v0_10f28 = load i32, i32* @ebp, align 4
  %v1_10f28 = add i32 %v0_10f28, -28
  store i32 %v1_10f28, i32* %eax.global-to-local, align 8
  %v1_10f2b = add i32 %v0_10f28, -48
  %v2_10f2b = inttoptr i32 %v1_10f2b to i32*
  %v3_10f2b = load i32, i32* %v2_10f2b, align 4
  %v1_10f32 = add i32 %v0_10f28, -44
  %v2_10f32 = inttoptr i32 %v1_10f32 to i32*
  %v3_10f32 = load i32, i32* %v2_10f32, align 4
  %v3_10f3c = call i32 @function_2375c(i32 %v1_10f28, i32 %v3_10f32, i32 %v3_10f2b)
  %v0_10f44 = load i32, i32* @ebp, align 4
  %v1_10f44 = add i32 %v0_10f44, -24
  store i32 %v1_10f44, i32* %eax.global-to-local, align 8
  %v1_10f47 = add i32 %v0_10f44, -44
  %v2_10f47 = inttoptr i32 %v1_10f47 to i32*
  %v3_10f47 = load i32, i32* %v2_10f47, align 4
  %v2_10f51 = call i32 @function_23878(i32 %v1_10f44, i32 %v3_10f47)
  %v0_10f59 = load i32, i32* @ebp, align 4
  %v1_10f59 = add i32 %v0_10f59, -24
  %v1_10f60 = add i32 %v0_10f59, -28
  store i32 %v1_10f60, i32* @eax, align 8
  %v2_10f66 = call i32 @function_238c2(i32 %v1_10f60, i32 %v1_10f59)
  store i32 %v2_10f66, i32* %eax.global-to-local, align 8
  %v4_10f6b = trunc i32 %v2_10f66 to i8
  %v5_10f6b = icmp eq i8 %v4_10f6b, 0
  %v1_10f6d = icmp eq i1 %v5_10f6b, false
  br i1 %v1_10f6d, label %dec_label_pc_10fb7, label %dec_label_pc_10f6f

dec_label_pc_10f6f:                               ; preds = %dec_label_pc_10f1c
  %v0_10f6f = load i32, i32* @ebp, align 4
  %v1_10f6f = add i32 %v0_10f6f, -28
  store i32 %v1_10f6f, i32* @eax, align 8
  %v1_10f75 = call i32 @function_237fe(i32 %v1_10f6f)
  store i32 %v1_10f75, i32* %ebx.global-to-local, align 8
  %v0_10f7c = load i32, i32* @ebp, align 4
  %v1_10f7c = add i32 %v0_10f7c, -49
  store i32 %v1_10f7c, i32* @eax, align 8
  %v1_10f7f = add i32 %v0_10f7c, -44
  %v2_10f7f = inttoptr i32 %v1_10f7f to i32*
  %v3_10f7f = load i32, i32* %v2_10f7f, align 4
  store i32 %v3_10f7f, i32* @edx, align 8
  %v2_10f89 = call i32 @function_237b4(i32 %v1_10f7c, i32 %v3_10f7f)
  store i32 %v2_10f89, i32* %eax.global-to-local, align 8
  %v0_10f91 = load i32, i32* %ebx.global-to-local, align 8
  %v0_10f95 = load i32, i32* @ebp, align 4
  %v1_10f95 = add i32 %v0_10f95, -48
  %v2_10f95 = inttoptr i32 %v1_10f95 to i32*
  %v3_10f95 = load i32, i32* %v2_10f95, align 4
  %v1_10f9c = add i32 %v0_10f95, -13
  store i32 %v1_10f9c, i32* @eax, align 8
  %v3_10fa2 = call i32 @function_23830(i32 %v1_10f9c, i32 %v3_10f95, i32 %v0_10f91)
  store i32 %v3_10fa2, i32* %eax.global-to-local, align 8
  %v4_10fa7 = trunc i32 %v3_10fa2 to i8
  %v5_10fa7 = icmp ne i8 %v4_10fa7, 0
  %. = zext i1 %v5_10fa7 to i32
  br label %dec_label_pc_10fb7

dec_label_pc_10fb7:                               ; preds = %dec_label_pc_10f6f, %dec_label_pc_10f1c
  %storemerge = phi i32 [ 1, %dec_label_pc_10f1c ], [ %., %dec_label_pc_10f6f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_10fb7 = icmp eq i32 %storemerge, 0
  br i1 %v5_10fb7, label %bb, label %dec_label_pc_10fbb

bb:                                               ; preds = %dec_label_pc_10fb7
  %v1_10fb9 = call i32 @function_1101e()
  store i32 %v1_10fb9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_10fbb

dec_label_pc_10fbb:                               ; preds = %bb, %dec_label_pc_10fb7
  %v0_10fbb = load i32, i32* @ebp, align 4
  %v1_10fbb = add i32 %v0_10fbb, -20
  %v1_10fbe = load i32, i32* @esp, align 4
  %v2_10fbe = inttoptr i32 %v1_10fbe to i32*
  store i32 %v1_10fbb, i32* %v2_10fbe, align 4
  %v0_10fc6 = load i32, i32* @ebp, align 4
  %v1_10fc6 = add i32 %v0_10fc6, -20
  store i32 %v1_10fc6, i32* %eax.global-to-local, align 8
  %v1_10fc9 = load i32, i32* @esp, align 4
  %v2_10fc9 = add i32 %v1_10fc9, 8
  %v3_10fc9 = inttoptr i32 %v2_10fc9 to i32*
  store i32 %v1_10fc6, i32* %v3_10fc9, align 4
  %v0_10fcd = load i32, i32* @ebp, align 4
  %v1_10fcd = add i32 %v0_10fcd, -48
  %v2_10fcd = inttoptr i32 %v1_10fcd to i32*
  %v3_10fcd = load i32, i32* %v2_10fcd, align 4
  %v1_10fd0 = load i32, i32* @esp, align 4
  %v2_10fd0 = add i32 %v1_10fd0, 4
  %v3_10fd0 = inttoptr i32 %v2_10fd0 to i32*
  store i32 %v3_10fcd, i32* %v3_10fd0, align 4
  %v0_10fd4 = load i32, i32* @ebp, align 4
  %v1_10fd4 = add i32 %v0_10fd4, -36
  store i32 %v1_10fd4, i32* %eax.global-to-local, align 8
  %v1_10fd7 = load i32, i32* @esp, align 4
  %v2_10fd7 = inttoptr i32 %v1_10fd7 to i32*
  store i32 %v1_10fd4, i32* %v2_10fd7, align 4
  %v0_10fda = call i32 @function_23902()
  %v0_10fdf = load i32, i32* @ebp, align 4
  %v1_10fdf = add i32 %v0_10fdf, -56
  store i32 %v1_10fdf, i32* %eax.global-to-local, align 8
  %v1_10fe2 = add i32 %v0_10fdf, -36
  %v1_10fe5 = load i32, i32* @esp, align 4
  %v2_10fe5 = add i32 %v1_10fe5, 12
  %v3_10fe5 = inttoptr i32 %v2_10fe5 to i32*
  store i32 %v1_10fe2, i32* %v3_10fe5, align 4
  %v0_10fe9 = load i32, i32* @ebp, align 4
  %v1_10fe9 = add i32 %v0_10fe9, -28
  %v2_10fe9 = inttoptr i32 %v1_10fe9 to i32*
  %v3_10fe9 = load i32, i32* %v2_10fe9, align 4
  %v1_10fec = load i32, i32* @esp, align 4
  %v2_10fec = add i32 %v1_10fec, 8
  %v3_10fec = inttoptr i32 %v2_10fec to i32*
  store i32 %v3_10fe9, i32* %v3_10fec, align 4
  %v0_10ff0 = load i32, i32* @ebp, align 4
  %v1_10ff0 = add i32 %v0_10ff0, -44
  %v2_10ff0 = inttoptr i32 %v1_10ff0 to i32*
  %v3_10ff0 = load i32, i32* %v2_10ff0, align 4
  store i32 %v3_10ff0, i32* @edx, align 8
  %v1_10ff3 = load i32, i32* @esp, align 4
  %v2_10ff3 = add i32 %v1_10ff3, 4
  %v3_10ff3 = inttoptr i32 %v2_10ff3 to i32*
  store i32 %v3_10ff0, i32* %v3_10ff3, align 4
  %v0_10ff7 = load i32, i32* %eax.global-to-local, align 8
  %v1_10ff7 = load i32, i32* @esp, align 4
  %v2_10ff7 = inttoptr i32 %v1_10ff7 to i32*
  store i32 %v0_10ff7, i32* %v2_10ff7, align 4
  %v0_10ffa = call i32 @function_2397e()
  store i32 %v0_10ffa, i32* %eax.global-to-local, align 8
  %v0_11002 = load i32, i32* @ebp, align 4
  %v1_11002 = add i32 %v0_11002, -56
  %v2_11002 = inttoptr i32 %v1_11002 to i32*
  %v3_11002 = load i32, i32* %v2_11002, align 4
  %v2_11005 = add i32 %v0_11002, -28
  %v3_11005 = inttoptr i32 %v2_11005 to i32*
  store i32 %v3_11002, i32* %v3_11005, align 4
  %v0_11008 = load i32, i32* @ebp, align 4
  %v1_11008 = add i32 %v0_11008, -36
  store i32 %v1_11008, i32* %eax.global-to-local, align 8
  %v1_1100b = load i32, i32* @esp, align 4
  %v2_1100b = inttoptr i32 %v1_1100b to i32*
  store i32 %v1_11008, i32* %v2_1100b, align 4
  %v3_1100b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_1100b

; uselistorder directives
  uselistorder i8 %v3_10f1c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 5, 6, 7, 8, 0, 3, 9, 10, 11, 12, 13, 14, 15 }
}

define i32 @function_11012(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11012:
  %v0_11012 = load i32, i32* @ebp, align 4
  %v1_11012 = add i32 %v0_11012, 76147781
  %v2_11012 = inttoptr i32 %v1_11012 to i8*
  %v3_11012 = load i8, i8* %v2_11012, align 1
  %v4_11012 = load i32, i32* @ecx, align 4
  %v5_11012 = trunc i32 %v4_11012 to i8
  %v6_11012 = add i8 %v5_11012, %v3_11012
  store i8 %v6_11012, i8* %v2_11012, align 1
  %v0_11018 = load i32, i32* @eax, align 8
  %v11_11018 = and i32 %v0_11018, -24
  ret i32 %v11_11018
}

define i32 @function_1101e() local_unnamed_addr {
dec_label_pc_1101e:
  %v0_1101e = load i32, i32* @ebp, align 4
  %v1_1101e = add i32 %v0_1101e, -28
  store i32 %v1_1101e, i32* @eax, align 8
  %v1_11024 = call i32 @function_237fe(i32 %v1_1101e)
  %v1_11029 = add i32 %v1_11024, 4
  store i32 %v1_11029, i32* @eax, align 8
  %v0_1102c = load i32, i32* @ebp, align 4
  %v1_1102c = add i32 %v0_1102c, -12
  %v2_1102c = inttoptr i32 %v1_1102c to i32*
  %v3_1102c = load i32, i32* %v2_1102c, align 4
  %v4_1102f = icmp eq i32 %v3_1102c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1102f, label %bb, label %dec_label_pc_11038

bb:                                               ; preds = %dec_label_pc_1101e
  %v1_11036 = call i32 @function_11065()
  store i32 %v1_11036, i32* @eax, align 8
  br label %dec_label_pc_11038

dec_label_pc_11038:                               ; preds = %bb, %dec_label_pc_1101e
  %v0_11038 = call i32 @function_11060()
  ret i32 %v0_11038

; uselistorder directives
  uselistorder i32 (i32)* @function_237fe, { 1, 0 }
}

define i32 @function_1103a() local_unnamed_addr {
dec_label_pc_1103a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1103a = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1103a, i32* @ebx, align 8
  %v0_1103c = load i32, i32* @ebp, align 4
  %v1_1103c = add i32 %v0_1103c, -36
  store i32 %v1_1103c, i32* @eax, align 8
  %v1_11042 = call i32 @function_21db2(i32 %v1_1103c)
  store i32 %v1_11042, i32* %eax.global-to-local, align 8
  %v0_11047 = call i32 @function_1104b()
  store i32 %v0_11047, i32* %eax.global-to-local, align 8
  ret i32 %v0_11047
}

define i32 @function_11049() local_unnamed_addr {
dec_label_pc_11049:
  %eax.global-to-local = alloca i32, align 4
  %v0_11049 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11049
}

define i32 @function_1104b() local_unnamed_addr {
dec_label_pc_1104b:
  %v0_1104b = load i32, i32* @ebp, align 4
  %v1_1104b = add i32 %v0_1104b, -20
  ret i32 %v1_1104b
}

define i32 @function_11060() local_unnamed_addr {
dec_label_pc_11060:
  %v0_11060 = load i32, i32* @eax, align 8
  ret i32 %v0_11060
}

define i32 @function_11065() local_unnamed_addr {
dec_label_pc_11065:
  %v0_11069 = load i32, i32* @eax, align 8
  ret i32 %v0_11069
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_21ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1106a:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_21ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11094:
  %stack_var_-4 = alloca i32, align 4
  %v4_11094 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_11094, i32* @ebp, align 4
  %v17_11097 = load i32, i32* @eax, align 8
  ret i32 %v17_11097
}

define i32 @function_1109c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1109c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1109c = load i32, i32* @ecx, align 4
  %v1_1109c = add i32 %v0_1109c, -1587157947
  %v2_1109c = inttoptr i32 %v1_1109c to i8*
  %v3_1109c = load i8, i8* %v2_1109c, align 1
  %v5_1109c = trunc i32 %v0_1109c to i8
  %v6_1109c = or i8 %v3_1109c, %v5_1109c
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1109c, i8* %v2_1109c, align 1
  %v0_110a2 = load i32, i32* @eax, align 8
  %v1_110a2 = trunc i32 %v0_110a2 to i8
  %v2_110a2 = load i1, i1* %cf.global-to-local, align 1
  %v3_110a2 = zext i1 %v2_110a2 to i8
  %v4_110a2 = add i8 %v3_110a2, %v1_110a2
  %v19_110a2 = icmp ule i8 %v4_110a2, %v1_110a2
  %v21_110a2 = icmp eq i1 %v2_110a2, %v19_110a2
  store i1 %v21_110a2, i1* %cf.global-to-local, align 1
  %v22_110a2 = zext i8 %v4_110a2 to i32
  %v24_110a2 = and i32 %v0_110a2, -256
  %v25_110a2 = or i32 %v22_110a2, %v24_110a2
  store i32 %v25_110a2, i32* %eax.global-to-local, align 8
  %v1_110a4 = inttoptr i32 %v25_110a2 to i8*
  %v2_110a4 = load i8, i8* %v1_110a4, align 1
  %v5_110a4 = add i8 %v2_110a4, %v4_110a2
  store i8 %v5_110a4, i8* %v1_110a4, align 1
  %v0_110a6 = load i32, i32* %eax.global-to-local, align 8
  %v1_110a6 = load i32, i32* @ebp, align 4
  %v2_110a6 = add i32 %v1_110a6, -12
  %v3_110a6 = inttoptr i32 %v2_110a6 to i32*
  store i32 %v0_110a6, i32* %v3_110a6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_110ab = load i32, i32* @ebp, align 4
  %v1_110ab = add i32 %v0_110ab, -28
  %v2_110ab = inttoptr i32 %v1_110ab to i32*
  %v3_110ab = load i32, i32* %v2_110ab, align 4
  store i32 %v3_110ab, i32* @eax, align 8
  %v1_110b1 = call i32 @function_220fe(i32 %v3_110ab)
  store i32 %v1_110b1, i32* %eax.global-to-local, align 8
  %v0_110b6 = load i32, i32* @ebp, align 4
  %v1_110b6 = add i32 %v0_110b6, -12
  %v2_110b6 = inttoptr i32 %v1_110b6 to i32*
  %v3_110b6 = load i32, i32* %v2_110b6, align 4
  %v3_110b9 = xor i32 %v3_110b6, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v3_110b9, i32* %eax.global-to-local, align 8
  ret i32 %v3_110b9

; uselistorder directives
  uselistorder i8 %v4_110a2, { 0, 2, 1 }
  uselistorder i8 %v1_110a2, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_20real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_110ca:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_110ed

bb:                                               ; preds = %dec_label_pc_110ca
  %v2_110eb = call i32 @function_110f2(i32 %arg1)
  br label %dec_label_pc_110ed

dec_label_pc_110ed:                               ; preds = %bb, %dec_label_pc_110ca
  %v3_110eb = phi i32 [ %v2_110eb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_110ca ]
  ret i32 %v3_110eb
}

define i32 @function_110f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_110f2:
  %v0_110f3 = load i32, i32* @eax, align 8
  ret i32 %v0_110f3
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_20real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_110f4:
  %v1_11111 = call i32 @function_221be(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1112a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1114d

bb:                                               ; preds = %dec_label_pc_1112a
  %v2_1114b = call i32 @function_11152(i32 %arg1)
  br label %dec_label_pc_1114d

dec_label_pc_1114d:                               ; preds = %bb, %dec_label_pc_1112a
  %v3_1114b = phi i32 [ %v2_1114b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1112a ]
  ret i32 %v3_1114b
}

define i32 @function_11152(i32 %arg1) local_unnamed_addr {
dec_label_pc_11152:
  %v0_11153 = load i32, i32* @eax, align 8
  ret i32 %v0_11153
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_28strict_ureal_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11154:
  store i32 %arg1, i32* @eax, align 8
  %v1_11171 = call i32 @function_2227e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11182

bb:                                               ; preds = %dec_label_pc_11154
  %v1_11180 = call i32 @function_11187()
  br label %dec_label_pc_11182

dec_label_pc_11182:                               ; preds = %bb, %dec_label_pc_11154
  %v2_11180 = phi i32 [ %v1_11180, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_11154 ]
  ret i32 %v2_11180

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11187() local_unnamed_addr {
dec_label_pc_11187:
  %v0_11188 = load i32, i32* @eax, align 8
  ret i32 %v0_11188
}

define i32 @_ZN5boost6spirit7classic6parserINS1_11real_parserIdNS1_27strict_real_parser_policiesIdEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1118a:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic11real_parserIdNS1_27strict_real_parser_policiesIdEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_111b4:
  store i32 %arg1, i32* @eax, align 8
  %v1_111d1 = call i32 @function_2233e(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6spirit7classic18refactor_unary_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_111ea:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6spirit7classic19refactor_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1121a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11243

bb:                                               ; preds = %dec_label_pc_1121a
  %v3_11241 = call i32 @function_11248(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_11243

dec_label_pc_11243:                               ; preds = %bb, %dec_label_pc_1121a
  %v4_11241 = phi i32 [ %v3_11241, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1121a ]
  ret i32 %v4_11241
}

define i32 @function_11248(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11248:
  %v0_11249 = load i32, i32* @eax, align 8
  ret i32 %v0_11249
}

define i32 @_ZN5boost6spirit7classic17attach_action_genINS1_22non_nested_refactoringEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1124a:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals29slot_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1127a:
  store i32 %arg1, i32* @eax, align 8
  %v1_11297 = call i32 @function_23d94(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_112a8

bb:                                               ; preds = %dec_label_pc_1127a
  %v1_112a6 = call i32 @function_112ad()
  br label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %bb, %dec_label_pc_1127a
  %v2_112a6 = phi i32 [ %v1_112a6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1127a ]
  ret i32 %v2_112a6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_112ad() local_unnamed_addr {
dec_label_pc_112ad:
  %v0_112ae = load i32, i32* @eax, align 8
  ret i32 %v0_112ae
}

define i32 @_ZN5boost8signals26detail19std_functional_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_112b0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_112d3

bb:                                               ; preds = %dec_label_pc_112b0
  %v2_112d1 = call i32 @function_112d8(i32 %arg1)
  br label %dec_label_pc_112d3

dec_label_pc_112d3:                               ; preds = %bb, %dec_label_pc_112b0
  %v3_112d1 = phi i32 [ %v2_112d1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_112b0 ]
  ret i32 %v3_112d1
}

define i32 @function_112d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_112d8:
  %v0_112d9 = load i32, i32* @eax, align 8
  ret i32 %v0_112d9
}

define i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEEC1IS5_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_112da:
  store i32 %arg1, i32* @eax, align 8
  %v1_112fe = call i32 @function_22554(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_11309 = call i32 @function_2258a(i32 %arg1)
  %v1_11311 = add i32 %arg1, 12
  store i32 %v1_11311, i32* @eax, align 8
  %v1_11317 = call i32 @function_23e2a(i32 %v1_11311)
  store i32 %arg1, i32* @eax, align 8
  %v2_11329 = call i32 @function_23e60(i32 %arg1, i32 %arg2)
  %v0_1132e = call i32 @function_11359()
  ret i32 %v0_1132e

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_11331() local_unnamed_addr {
dec_label_pc_11331:
  %eax.global-to-local = alloca i32, align 4
  %v0_11331 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11331
}

define i32 @function_11338(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11338:
  %v0_11338 = load i32, i32* @eax, align 8
  %v1_1133b = call i32 @function_20fee(i32 %v0_11338)
  %v0_11340 = call i32 @function_11344()
  ret i32 %v0_11340
}

define i32 @function_11342() local_unnamed_addr {
dec_label_pc_11342:
  %eax.global-to-local = alloca i32, align 4
  %v0_11342 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11342
}

define i32 @function_11344() local_unnamed_addr {
dec_label_pc_11344:
  %v0_11344 = load i32, i32* @ebp, align 4
  %v1_11344 = add i32 %v0_11344, -28
  %v2_11344 = inttoptr i32 %v1_11344 to i32*
  %v3_11344 = load i32, i32* %v2_11344, align 4
  store i32 %v3_11344, i32* @eax, align 8
  %v1_1134a = call i32 @function_20fb8(i32 %v3_11344)
  ret i32 %v1_1134a
}

define i32 @function_11350(i32 %arg1) local_unnamed_addr {
dec_label_pc_11350:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11359() local_unnamed_addr {
dec_label_pc_11359:
  %v0_11359 = load i32, i32* @ebp, align 4
  %v1_11359 = add i32 %v0_11359, -12
  %v2_11359 = inttoptr i32 %v1_11359 to i32*
  %v3_11359 = load i32, i32* %v2_11359, align 4
  %v3_1135c = xor i32 %v3_11359, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1135c
}

define i32 @_ZNSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11370:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1138e = call i32 @function_24044(i32 %tmp102)
  store i32 %v1_1138e, i32* @eax, align 8
  %v1_11396 = add i32 %tmp102, 4
  %v2_11396 = inttoptr i32 %v1_11396 to i32*
  %v3_11396 = load i32, i32* %v2_11396, align 4
  store i32 %v3_11396, i32* @ecx, align 4
  %v2_1139c = load i32, i32* %arg1, align 4
  %v3_113a9 = call i32 @function_24071(i32 %v2_1139c, i32 %v3_11396, i32 %v1_1138e)
  %v1_113b4 = call i32 @function_23fba(i32 %tmp102)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @_ZN5boost9function3IbRKSsS2_jED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_113ea:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEE7connectERKNS0_5slot3IbS3_S3_jSA_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11420:
  %v1_1144c = add i32 %arg2, 4
  %v5_1144c = icmp ugt i32 %arg2, -5
  store i1 %v5_1144c, i1* @cf, align 1
  store i32 %v1_1144c, i32* @eax, align 8
  %v1_11452 = call i32 @function_241da(i32 %v1_1144c)
  store i32 %arg3, i32* @ecx, align 4
  %v4_1146f = call i32 @function_24236(i32 %arg1, i32 %v1_11452, i32 %arg3, i32 %arg4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost8signals25slot1IbxNS_8functionIFbxEEEEC1IS3_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11490:
  store i32 %arg1, i32* @eax, align 8
  %v1_114b4 = call i32 @function_2270a(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_114bf = call i32 @function_22740(i32 %arg1)
  %v1_114c7 = add i32 %arg1, 12
  store i32 %v1_114c7, i32* @eax, align 8
  %v1_114cd = call i32 @function_24348(i32 %v1_114c7)
  store i32 %arg1, i32* @eax, align 8
  %v2_114df = call i32 @function_2437e(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1151b

bb:                                               ; preds = %dec_label_pc_11490
  %v1_11519 = call i32 @function_11520()
  br label %dec_label_pc_1151b

dec_label_pc_1151b:                               ; preds = %bb, %dec_label_pc_11490
  %v2_11519 = phi i32 [ %v1_11519, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_11490 ]
  ret i32 %v2_11519

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_11520() local_unnamed_addr {
dec_label_pc_11520:
  %v0_11525 = load i32, i32* @eax, align 8
  ret i32 %v0_11525
}

define i32 @_ZN5boost9function1IbxED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11526:
  store i32 %arg1, i32* @eax, align 8
  %v1_11543 = call i32 @function_244a2(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11554

bb:                                               ; preds = %dec_label_pc_11526
  %v1_11552 = call i32 @function_11559()
  br label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %bb, %dec_label_pc_11526
  %v2_11552 = phi i32 [ %v1_11552, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_11526 ]
  ret i32 %v2_11552

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11559() local_unnamed_addr {
dec_label_pc_11559:
  %v0_1155a = load i32, i32* @eax, align 8
  ret i32 %v0_1155a
}

define i32 @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEE7connectERKNS0_5slot1IbxS8_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1155c:
  %v1_11588 = add i32 %arg2, 4
  %v5_11588 = icmp ugt i32 %arg2, -5
  store i1 %v5_11588, i1* @cf, align 1
  store i32 %v1_11588, i32* @eax, align 8
  %v1_1158e = call i32 @function_24548(i32 %v1_11588)
  store i32 %v1_1158e, i32* @eax, align 8
  %v4_115ab = call i32 @function_245a4(i32 %arg1, i32 %v1_1158e, i32 %arg3, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_115c2

bb:                                               ; preds = %dec_label_pc_1155c
  %v1_115c0 = call i32 @function_115c7()
  br label %dec_label_pc_115c2

dec_label_pc_115c2:                               ; preds = %bb, %dec_label_pc_1155c
  %v2_115c0 = phi i32 [ %v1_115c0, %bb ], [ %arg1, %dec_label_pc_1155c ]
  ret i32 %v2_115c0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_115c7() local_unnamed_addr {
dec_label_pc_115c7:
  %v0_115c8 = load i32, i32* @eax, align 8
  ret i32 %v0_115c8
}

define i32 @_ZN5boost8signals25slot1IvRKSsNS_8functionIFvS3_EEEEC1IS5_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_115cc:
  %ebx.global-to-local = alloca i32, align 4
  %v0_115cf = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 8
  %v1_115f0 = call i32 @function_22846(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_115fb = call i32 @function_2287c(i32 %arg1)
  %v1_11603 = add i32 %arg1, 12
  store i32 %v1_11603, i32* @eax, align 8
  %v1_11609 = inttoptr i32 %v1_11603 to i32*
  %v2_11609 = call i32 @function_246b6(i32* %v1_11609)
  %v2_1161b = call i32 @__stack_chk_fail.631(i32 %arg1, i32 %arg2)
  store i32 %v0_115cf, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost9function1IvRKSsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11662:
  store i32 %arg1, i32* @eax, align 8
  %v1_1167f = call i32 @function_24810(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11690

bb:                                               ; preds = %dec_label_pc_11662
  %v1_1168e = call i32 @function_11695()
  br label %dec_label_pc_11690

dec_label_pc_11690:                               ; preds = %bb, %dec_label_pc_11662
  %v2_1168e = phi i32 [ %v1_1168e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_11662 ]
  ret i32 %v2_1168e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11695() local_unnamed_addr {
dec_label_pc_11695:
  %v0_11696 = load i32, i32* @eax, align 8
  ret i32 %v0_11696
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE7connectERKNS0_5slot1IvS3_SA_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11698:
  %v1_116c4 = add i32 %arg2, 4
  store i32 %v1_116c4, i32* @eax, align 8
  %v1_116ca = call i32 @function_248b6(i32 %v1_116c4)
  store i32 %v1_116ca, i32* @eax, align 8
  store i32 %arg3, i32* @ecx, align 4
  %v4_116e7 = call i32 @function_24912(i32 %arg1, i32 %v1_116ca, i32 %arg3, i32 %arg4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11708:
  %ebp.global-to-local = alloca i32, align 4
  %v0_11708 = load i32, i32* %ebp.global-to-local, align 4
  %v2_11722 = load i32, i32* %arg1, align 4
  %v1_11724 = icmp eq i32 %v2_11722, 0
  br i1 %v1_11724, label %dec_label_pc_11749, label %dec_label_pc_11728

dec_label_pc_11728:                               ; preds = %dec_label_pc_11708
  %v2_11737 = load i32, i32* %arg1, align 4
  %v4_1173e = trunc i32 %v2_11737 to i8
  %v5_1173e = icmp eq i8 %v4_1173e, 0
  br i1 %v5_1173e, label %dec_label_pc_11749, label %dec_label_pc_1174e

dec_label_pc_11749:                               ; preds = %dec_label_pc_11728, %dec_label_pc_11708
  br label %dec_label_pc_1174e

dec_label_pc_1174e:                               ; preds = %dec_label_pc_11728, %dec_label_pc_11749
  %storemerge = phi i1 [ true, %dec_label_pc_11749 ], [ false, %dec_label_pc_11728 ]
  br i1 %storemerge, label %dec_label_pc_1175b, label %dec_label_pc_11752

dec_label_pc_11752:                               ; preds = %dec_label_pc_1174e
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_1175b

dec_label_pc_1175b:                               ; preds = %dec_label_pc_11752, %dec_label_pc_1174e
  store i32 %v0_11708, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder label %dec_label_pc_1174e, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1176e:
  %v2_11788 = load i32, i32* %arg1, align 4
  %v1_1178a = icmp eq i32 %v2_11788, 0
  br i1 %v1_1178a, label %dec_label_pc_117a4, label %dec_label_pc_1178e

dec_label_pc_1178e:                               ; preds = %dec_label_pc_1176e
  br label %dec_label_pc_117a4

dec_label_pc_117a4:                               ; preds = %dec_label_pc_1178e, %dec_label_pc_1176e
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_117b0

bb:                                               ; preds = %dec_label_pc_117a4
  %v1_117ae = call i32 @function_117b5()
  br label %dec_label_pc_117b0

dec_label_pc_117b0:                               ; preds = %bb, %dec_label_pc_117a4
  %v2_117ae = phi i32 [ %v1_117ae, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_117a4 ]
  ret i32 %v2_117ae
}

define i32 @function_117b5() local_unnamed_addr {
dec_label_pc_117b5:
  %v0_117b6 = load i32, i32* @eax, align 8
  ret i32 %v0_117b6
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_117b8:
  store i32 ptrtoint (i32* @global_var_33c8c.1922 to i32), i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_117e4

bb:                                               ; preds = %dec_label_pc_117b8
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_117e2 = call i32 @function_117e9(i32 %tmp102)
  br label %dec_label_pc_117e4

dec_label_pc_117e4:                               ; preds = %bb, %dec_label_pc_117b8
  %v3_117e2 = phi i32 [ %v2_117e2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_117b8 ]
  ret i32 %v3_117e2

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_117e9(i32 %arg1) local_unnamed_addr {
dec_label_pc_117e9:
  %v0_117ea = load i32, i32* @eax, align 8
  ret i32 %v0_117ea
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117ec:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1181f = add i32 %tmp105, ptrtoint (i8** @global_var_18.1931 to i32)
  store i32 %v1_1181f, i32* @eax, align 8
  %v3_11825 = call i32 @function_22fa4(i32 %v1_1181f, i32 %arg2)
  store i32 ptrtoint (%vtable_33be4_type* @global_var_33be4.1932 to i32), i32* %arg1, align 4
  %v1_11836 = add i32 %tmp105, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_11836 = inttoptr i32 %v1_11836 to i32*
  store i32 ptrtoint (i32* @global_var_33bfc.1933 to i32), i32* %v2_11836, align 4
  %v2_11840 = inttoptr i32 %v1_1181f to i32*
  store i32 ptrtoint (i32* @global_var_33c10.1934 to i32), i32* %v2_11840, align 4
  store i32 %tmp105, i32* @eax, align 8
  %v3_11854 = call i32 @function_1349e(i32 %tmp105, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1188c

bb:                                               ; preds = %dec_label_pc_117ec
  %v1_1188a = call i32 @function_11891()
  br label %dec_label_pc_1188c

dec_label_pc_1188c:                               ; preds = %bb, %dec_label_pc_117ec
  %v2_1188a = phi i32 [ %v1_1188a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_117ec ]
  ret i32 %v2_1188a

; uselistorder directives
  uselistorder i32 %tmp105, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_11891() local_unnamed_addr {
dec_label_pc_11891:
  %v0_11896 = load i32, i32* @eax, align 8
  ret i32 %v0_11896
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11897:
  %eax.global-to-local = alloca i32, align 4
  %v0_1189c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1189c
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_118a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_118a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_118a6
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_118ac:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33be4_type* @global_var_33be4.1932 to i32), i32* %arg1, align 4
  %v1_118cf = add i32 %tmp99, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_118cf = inttoptr i32 %v1_118cf to i32*
  store i32 ptrtoint (i32* @global_var_33bfc.1933 to i32), i32* %v2_118cf, align 4
  %v1_118d9 = add i32 %tmp99, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_118d9 = inttoptr i32 %v1_118d9 to i32*
  store i32 ptrtoint (i32* @global_var_33c10.1934 to i32), i32* %v2_118d9, align 4
  store i32 %v1_118d9, i32* @eax, align 8
  %v2_118e9 = call i32 @function_134d4(i32 %v1_118d9)
  store i32 %tmp99, i32* @eax, align 8
  %v2_118f4 = call i32 @function_21b12(i32 %tmp99)
  %v1_11903 = call i32 @function_11910()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_118d9, { 1, 0, 2 }
  uselistorder i32 ptrtoint (%vtable_33be4_type* @global_var_33be4.1932 to i32), { 2, 1, 0 }
}

define i32 @function_11910() local_unnamed_addr {
dec_label_pc_11910:
  %v0_11910 = load i32, i32* @ebp, align 4
  %v1_11910 = add i32 %v0_11910, -12
  %v2_11910 = inttoptr i32 %v1_11910 to i32*
  %v3_11910 = load i32, i32* %v2_11910, align 4
  %v3_11913 = xor i32 %v3_11910, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_11913
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11924:
  %v5_11924 = sub i32 %arg1, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_11929 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v5_11924)
  ret i32 %v2_11929
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1192b:
  %v5_1192b = sub i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_11930 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v5_1192b)
  ret i32 %v2_11930

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_11932:
  store i32 %arg1, i32* @eax, align 8
  %v1_1194f = call i32 @function_231d0(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11972:
  store i32 %arg1, i32* @eax, align 8
  %v2_1199c = call i32 @function_24c8d(i32 %arg1, i32 %arg2)
  store i32 %v2_1199c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_119ad

bb:                                               ; preds = %dec_label_pc_11972
  %v1_119ab = call i32 @function_119b2()
  br label %dec_label_pc_119ad

dec_label_pc_119ad:                               ; preds = %bb, %dec_label_pc_11972
  %v2_119ab = phi i32 [ %v1_119ab, %bb ], [ %v2_1199c, %dec_label_pc_11972 ]
  ret i32 %v2_119ab

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_119b2() local_unnamed_addr {
dec_label_pc_119b2:
  %v0_119b3 = load i32, i32* @eax, align 8
  ret i32 %v0_119b3
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_119b4:
  ret i32 %arg1
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_119f6:
  ret i32 %arg1
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a38:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_11a55 = icmp eq i32 %arg2, 0
  br i1 %v10_11a55, label %dec_label_pc_11a68, label %dec_label_pc_11a5b

dec_label_pc_11a5b:                               ; preds = %dec_label_pc_11a38
  %v1_11a5e = add i32 %arg2, ptrtoint (i8** @global_var_18.1931 to i32)
  br label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a38, %dec_label_pc_11a5b
  %storemerge = phi i32 [ %v1_11a5e, %dec_label_pc_11a5b ], [ 0, %dec_label_pc_11a38 ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_11a70 = add i32 %tmp104, 4
  %v2_11a7d = call i32 @function_24e0e(i32 %v1_11a70, i32 %arg2)
  %v3_11a96 = call i32 @function_13f7d(i32 %tmp104, i32 %arg2, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_11a68, { 1, 0 }
}

define i32 @_ZN5boost17bad_function_callC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11aae:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_11ad8 = call i32 @function_20d2c(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_33bcc_type* @global_var_33bcc.1938 to i32), i32* %arg1, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33bcc_type* @global_var_33bcc.1938 to i32), { 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11afa:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp102, i32* %stack_var_-60, align 4
  %v2_11b25 = call i32 @function_235a8(i32 %tmp102, i32 %arg2)
  %v1_11b33 = add i32 %tmp102, 8
  store i32 %v1_11b33, i32* %stack_var_-60, align 4
  store i32 ptrtoint (%vtable_33b44_type* @global_var_33b44.1942 to i32), i32* %arg1, align 4
  %v2_11b4e = inttoptr i32 %v1_11b33 to i32*
  store i32 ptrtoint (i32* @global_var_33b58.1943 to i32), i32* %v2_11b4e, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11b61

bb:                                               ; preds = %dec_label_pc_11afa
  %v1_11b2d = add i32 %arg2, 8
  %v1_11b5f = load i32, i32* %stack_var_-60, align 4
  %v3_11b5f = call i32 @function_11b7f(i32 %v1_11b5f, i32 %v1_11b2d)
  store i32 %v3_11b5f, i32* @eax, align 8
  br label %dec_label_pc_11b61

dec_label_pc_11b61:                               ; preds = %bb, %dec_label_pc_11afa
  %v0_11b61 = call i32 @function_11b7a()
  ret i32 %v0_11b61

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_11b64() local_unnamed_addr {
dec_label_pc_11b64:
  %eax.global-to-local = alloca i32, align 4
  %v0_11b64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11b64
}

define i32 @function_11b7a() local_unnamed_addr {
dec_label_pc_11b7a:
  %v0_11b7a = load i32, i32* @eax, align 8
  ret i32 %v0_11b7a
}

define i32 @function_11b7f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11b7f:
  %v0_11b84 = load i32, i32* @eax, align 8
  ret i32 %v0_11b84
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS5_() local_unnamed_addr {
dec_label_pc_11b86:
  %eax.global-to-local = alloca i32, align 4
  %v17_11b89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_11b89
}

define i32 @function_11b8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b8e:
  %v0_11b8e = load i32, i32* @ecx, align 4
  %v1_11b8e = add i32 %v0_11b8e, 1166795845
  %v2_11b8e = inttoptr i32 %v1_11b8e to i8*
  %v3_11b8e = load i8, i8* %v2_11b8e, align 1
  %v5_11b8e = trunc i32 %v0_11b8e to i8
  %v6_11b8e = or i8 %v3_11b8e, %v5_11b8e
  store i8 %v6_11b8e, i8* %v2_11b8e, align 1
  %v0_11b96 = load i32, i32* @ebp, align 4
  %v1_11b96 = add i32 %v0_11b96, 1
  store i32 %v1_11b96, i32* @ebp, align 4
  %v0_11b97 = load i32, i32* @ecx, align 4
  %v1_11b97 = add i32 %v0_11b97, -1
  store i32 %v1_11b97, i32* @ecx, align 4
  %v2_11b9e = add i32 %v0_11b96, -11
  %v3_11b9e = inttoptr i32 %v2_11b9e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_11b9e, align 4
  %v0_11ba3 = load i32, i32* @ebp, align 4
  %v1_11ba3 = add i32 %v0_11ba3, -32
  %v2_11ba3 = inttoptr i32 %v1_11ba3 to i32*
  %v3_11ba3 = load i32, i32* %v2_11ba3, align 4
  %v1_11ba6 = add i32 %v0_11ba3, -28
  %v2_11ba6 = inttoptr i32 %v1_11ba6 to i32*
  %v3_11ba6 = load i32, i32* %v2_11ba6, align 4
  store i32 %v3_11ba6, i32* @eax, align 8
  %v2_11bb0 = call i32 @function_23680(i32 %v3_11ba6, i32 %v3_11ba3)
  %v0_11bb5 = load i32, i32* @ebp, align 4
  %v1_11bbb = add i32 %v0_11bb5, -28
  %v2_11bbb = inttoptr i32 %v1_11bbb to i32*
  %v3_11bbb = load i32, i32* %v2_11bbb, align 4
  %v1_11bbe = add i32 %v3_11bbb, 28
  ret i32 %v1_11bbe
}

define i32 @function_11bc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bc2:
  %v0_11bc3 = load i32, i32* @eax, align 8
  %v11_11bc3 = and i32 %v0_11bc3, -252
  store i32 %v11_11bc3, i32* @eax, align 8
  %v1_11bc8 = call i32 @function_21b44(i32 %v11_11bc3)
  %v0_11bcd = load i32, i32* @ebp, align 4
  %v1_11bcd = add i32 %v0_11bcd, -28
  %v2_11bcd = inttoptr i32 %v1_11bcd to i32*
  %v3_11bcd = load i32, i32* %v2_11bcd, align 4
  %v1_11bd0 = inttoptr i32 %v3_11bcd to i32*
  store i32 ptrtoint (%vtable_33ae4_type* @global_var_33ae4.1945 to i32), i32* %v1_11bd0, align 4
  %v0_11bd6 = load i32, i32* @ebp, align 4
  %v1_11bd6 = add i32 %v0_11bd6, -28
  %v2_11bd6 = inttoptr i32 %v1_11bd6 to i32*
  %v3_11bd6 = load i32, i32* %v2_11bd6, align 4
  %v1_11bd9 = add i32 %v3_11bd6, 8
  %v2_11bd9 = inttoptr i32 %v1_11bd9 to i32*
  store i32 ptrtoint (i32* @global_var_33b00.1946 to i32), i32* %v2_11bd9, align 4
  %v0_11be0 = load i32, i32* @ebp, align 4
  %v1_11be0 = add i32 %v0_11be0, -28
  %v2_11be0 = inttoptr i32 %v1_11be0 to i32*
  %v3_11be0 = load i32, i32* %v2_11be0, align 4
  %v1_11be3 = add i32 %v3_11be0, 28
  %v2_11be3 = inttoptr i32 %v1_11be3 to i32*
  store i32 ptrtoint (i32* @global_var_33b10.1947 to i32), i32* %v2_11be3, align 4
  %v0_11bea = load i32, i32* @ebp, align 4
  %v1_11bea = add i32 %v0_11bea, -12
  %v2_11bea = inttoptr i32 %v1_11bea to i32*
  %v3_11bea = load i32, i32* %v2_11bea, align 4
  %v3_11bed = xor i32 %v3_11bea, ptrtoint ([3 x i8]* @3 to i32)
  %v4_11bed = icmp eq i32 %v3_11bed, 0
  store i32 %v3_11bed, i32* @eax, align 8
  br i1 %v4_11bed, label %bb, label %dec_label_pc_11bf6

bb:                                               ; preds = %dec_label_pc_11bc2
  %v1_11bf4 = call i32 @function_11bfb()
  br label %dec_label_pc_11bf6

dec_label_pc_11bf6:                               ; preds = %bb, %dec_label_pc_11bc2
  %v2_11bf4 = phi i32 [ %v1_11bf4, %bb ], [ %v3_11bed, %dec_label_pc_11bc2 ]
  ret i32 %v2_11bf4

; uselistorder directives
  uselistorder i32 %v11_11bc3, { 1, 0 }
}

define i32 @function_11bf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bf8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_11bfb() local_unnamed_addr {
dec_label_pc_11bfb:
  %v0_11bfc = load i32, i32* @eax, align 8
  ret i32 %v0_11bfc
}

define i32 @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_() local_unnamed_addr {
dec_label_pc_11bfd:
  %eax.global-to-local = alloca i32, align 4
  %v5_11bfd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_11bfd
}

define i32 @function_11c28(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c28:
  %ebx.global-to-local = alloca i32, align 4
  %v0_11c2d = load i32, i32* @eax, align 8
  store i32 %v0_11c2d, i32* %ebx.global-to-local, align 8
  %v0_11c2f = load i32, i32* @ebp, align 4
  %v1_11c2f = add i32 %v0_11c2f, -40
  %v1_11c32 = add i32 %v0_11c2f, -44
  %v2_11c32 = inttoptr i32 %v1_11c32 to i32*
  %v3_11c32 = load i32, i32* %v2_11c32, align 4
  %v2_11c3c = call i32 @__assert_fail.1777(i32 %v1_11c2f, i32 %v3_11c32)
  %v0_11c41 = load i32, i32* @esp, align 4
  %v2_11c41 = urem i32 %v0_11c41, 16
  %v3_11c41 = add nsw i32 %v2_11c41, -4
  %v4_11c41 = icmp ugt i32 %v3_11c41, 15
  store i1 %v4_11c41, i1* @az, align 1
  %v0_11c44 = load i32, i32* @ebp, align 4
  %v1_11c44 = add i32 %v0_11c44, -40
  store i32 %v1_11c44, i32* @eax, align 8
  %v0_11c4b = load i32, i32* %ebx.global-to-local, align 8
  %v2_11c4e = call i32 @function_25165(i32 %v0_11c4b, i32 %v1_11c44)
  %v0_11c56 = load i32, i32* @ebp, align 4
  %v1_11c56 = add i32 %v0_11c56, -40
  %v1_11c5c = call i32 @function_250af(i32 %v1_11c56)
  ret i32 79300
}

define i32 @function_11c79() local_unnamed_addr {
dec_label_pc_11c79:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11c79 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11c79 = add i32 %v0_11c79, -666530362
  %v2_11c79 = inttoptr i32 %v1_11c79 to i32*
  %v3_11c79 = load i32, i32* %v2_11c79, align 4
  %v4_11c79 = add i32 %v3_11c79, -1
  store i32 %v4_11c79, i32* %v2_11c79, align 4
  %v0_11c7f = load i32, i32* %eax.global-to-local, align 8
  %v1_11c82 = call i32 @function_250af(i32 %v0_11c7f)
  store i32 %v1_11c82, i32* %eax.global-to-local, align 8
  %v0_11c87 = call i32 @function_11c8b()
  store i32 %v0_11c87, i32* %eax.global-to-local, align 8
  ret i32 %v0_11c87
}

define i32 @function_11c89() local_unnamed_addr {
dec_label_pc_11c89:
  %eax.global-to-local = alloca i32, align 4
  %v0_11c89 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11c89
}

define i32 @function_11c8b() local_unnamed_addr {
dec_label_pc_11c8b:
  %v0_11c93 = load i32, i32* @esi, align 4
  ret i32 %v0_11c93
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail26foreign_weak_ptr_impl_baseEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_11c9d:
  %ebp.global-to-local = alloca i32, align 4
  %v0_11c9d = load i32, i32* %ebp.global-to-local, align 4
  %v10_11cb4 = icmp eq i32* %arg1, null
  br i1 %v10_11cb4, label %dec_label_pc_11ccc, label %dec_label_pc_11cba

dec_label_pc_11cba:                               ; preds = %dec_label_pc_11c9d
  br label %dec_label_pc_11ccc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cba, %dec_label_pc_11c9d
  store i32 %v0_11c9d, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEC1ERKSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ce0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_11ce0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11d00 = inttoptr i32 %arg2 to i32*
  %v2_11d00 = load i32, i32* %v1_11d00, align 4
  store i32 %v2_11d00, i32* %arg1, align 4
  store i32 %v0_11ce0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d1a:
  ret i32 %arg1
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E13apply_visitorIKNS4_21lock_weak_ptr_visitorEEENT_11result_typeERSD_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11d48:
  %stack_var_-20 = alloca i32, align 4
  %v2_11d72 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_11d72, i32* @eax, align 8
  %v2_11d78 = call i32 @function_2544a(i32 %v2_11d72, i32 %arg3)
  %v3_11d91 = call i32 @function_25482(i32 %arg1, i32 %arg2, i32 %v2_11d72)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11da8

bb:                                               ; preds = %dec_label_pc_11d48
  %v1_11da6 = call i32 @function_11dad()
  br label %dec_label_pc_11da8

dec_label_pc_11da8:                               ; preds = %bb, %dec_label_pc_11d48
  %v2_11da6 = phi i32 [ %v1_11da6, %bb ], [ %arg1, %dec_label_pc_11d48 ]
  ret i32 %v2_11da6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11dad() local_unnamed_addr {
dec_label_pc_11dad:
  %v0_11dae = load i32, i32* @eax, align 8
  ret i32 %v0_11dae
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11db2:
  %stack_var_-20 = alloca i32, align 4
  %v1_11dd3 = add i32 %arg1, 4
  store i32 %v1_11dd3, i32* @eax, align 8
  %v1_11dd9 = call i32 @function_23daa(i32 %v1_11dd3)
  store i32 %v1_11dd3, i32* @eax, align 8
  %v1_11de7 = call i32 @function_2556e(i32 %v1_11dd3)
  %v2_11df0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_11df0, i32* @eax, align 8
  %v2_11df6 = call i32 @function_20864(i32 %v2_11df0, i32 %v1_11de7)
  %v2_11e08 = call x86_fp80 @function_255a4(i32 %arg2, i32 %v2_11df0)
  store i32 %arg2, i32* @eax, align 8
  %v1_11e13 = call i32 @function_2564a(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_11e22 = call i32 @function_25612(i32 %arg1, i32 %v1_11e13)
  store i32 %v2_11df0, i32* @eax, align 8
  %v1_11e2d = call i32 @function_22ba0(i32 %v2_11df0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11e3e

bb:                                               ; preds = %dec_label_pc_11db2
  %v1_11e3c = call i32 @function_11e6e()
  store i32 %v1_11e3c, i32* @eax, align 8
  br label %dec_label_pc_11e3e

dec_label_pc_11e3e:                               ; preds = %bb, %dec_label_pc_11db2
  %v0_11e3e = call i32 @function_11e69()
  ret i32 %v0_11e3e

; uselistorder directives
  uselistorder i32 %v1_11dd3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_11e40() local_unnamed_addr {
dec_label_pc_11e40:
  %eax.global-to-local = alloca i32, align 4
  %v0_11e40 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_11e40, i32* @ebx, align 8
  %v0_11e42 = load i32, i32* @ebp, align 4
  %v1_11e42 = add i32 %v0_11e42, -16
  store i32 %v1_11e42, i32* @eax, align 8
  %v1_11e48 = call i32 @function_22ba0(i32 %v1_11e42)
  store i32 %v1_11e48, i32* %eax.global-to-local, align 8
  %v0_11e4d = call i32 @function_11e51()
  store i32 %v0_11e4d, i32* %eax.global-to-local, align 8
  ret i32 %v0_11e4d

; uselistorder directives
  uselistorder i32 (i32)* @function_22ba0, { 1, 0 }
}

define i32 @function_11e4f() local_unnamed_addr {
dec_label_pc_11e4f:
  %eax.global-to-local = alloca i32, align 4
  %v0_11e4f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_11e4f
}

define i32 @function_11e51() local_unnamed_addr {
dec_label_pc_11e51:
  %v0_11e51 = load i32, i32* @ebp, align 4
  %v1_11e51 = add i32 %v0_11e51, -28
  %v2_11e51 = inttoptr i32 %v1_11e51 to i32*
  %v3_11e51 = load i32, i32* %v2_11e51, align 4
  %v1_11e54 = add i32 %v3_11e51, 4
  store i32 %v1_11e54, i32* @eax, align 8
  %v1_11e5a = call i32 @function_23c26(i32 %v1_11e54)
  %v0_11e5f = load i32, i32* @ebx, align 8
  ret i32 %v0_11e5f
}

define i32 @function_11e69() local_unnamed_addr {
dec_label_pc_11e69:
  %v0_11e69 = load i32, i32* @eax, align 8
  ret i32 %v0_11e69
}

define i32 @function_11e6e() local_unnamed_addr {
dec_label_pc_11e6e:
  %v0_11e73 = load i32, i32* @eax, align 8
  ret i32 %v0_11e73
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e74:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail7variant9destroyerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e9e:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_11ebb = call i32 @function_22674(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant9destroyerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ed4:
  store i32 %arg1, i32* @eax, align 8
  %v1_11ef1 = call i32 @function_226e0(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f0a:
  %stack_var_-17 = alloca i32, align 4
  %v2_11f22 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_11f22, i32* @eax, align 8
  %v1_11f28 = call i32 @function_23da8(i32 %v2_11f22)
  %v2_11f3a = call i32 @function_257ea(i32 %arg1, i32 %v2_11f22)
  %v1_11f45 = call i32 @function_23dde(i32 %v2_11f22)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11f6f

bb:                                               ; preds = %dec_label_pc_11f0a
  %v1_11f54 = call i32 @function_11f74()
  br label %dec_label_pc_11f6f

dec_label_pc_11f6f:                               ; preds = %dec_label_pc_11f0a, %bb
  %v0_11f56 = phi i32 [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_11f0a ], [ %v1_11f54, %bb ]
  ret i32 %v0_11f56

; uselistorder directives
  uselistorder label %dec_label_pc_11f6f, { 1, 0 }
}

define i32 @function_11f58() local_unnamed_addr {
dec_label_pc_11f58:
  %eax.global-to-local = alloca i32, align 4
  %v0_11f58 = load i32, i32* %eax.global-to-local, align 8
  %v0_11f5a = load i32, i32* @ebp, align 4
  %v1_11f5a = add i32 %v0_11f5a, -13
  store i32 %v1_11f5a, i32* %eax.global-to-local, align 8
  %v1_11f60 = call i32 @function_23dde(i32 %v1_11f5a)
  store i32 %v0_11f58, i32* %eax.global-to-local, align 8
  ret i32 %v0_11f58

; uselistorder directives
  uselistorder i32 %v0_11f58, { 1, 0 }
  uselistorder i32 (i32)* @function_23dde, { 1, 0 }
}

define i32 @function_11f74() local_unnamed_addr {
dec_label_pc_11f74:
  %v0_11f79 = load i32, i32* @eax, align 8
  ret i32 %v0_11f79
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E13apply_visitorIKNS4_24expired_weak_ptr_visitorEEENT_11result_typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f7a:
  %stack_var_-20 = alloca i32, align 4
  %v2_11f9e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_11f9e, i32* @eax, align 8
  %v2_11fa4 = call i32 @function_258c8(i32 %v2_11f9e, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_11fb6 = call i32 @function_25900(i32 %arg1, i32 %v2_11f9e)
  store i32 %v2_11fb6, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_11fc7

bb:                                               ; preds = %dec_label_pc_11f7a
  %v1_11fc5 = call i32 @function_11fcc()
  br label %dec_label_pc_11fc7

dec_label_pc_11fc7:                               ; preds = %bb, %dec_label_pc_11f7a
  %v2_11fc5 = phi i32 [ %v1_11fc5, %bb ], [ %v2_11fb6, %dec_label_pc_11f7a ]
  ret i32 %v2_11fc5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11fcc() local_unnamed_addr {
dec_label_pc_11fcc:
  %v0_11fcd = load i32, i32* @eax, align 8
  ret i32 %v0_11fcd
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fce:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ff8:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1202e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v0_12031 = load i32, i32* %ebx.global-to-local, align 8
  %v2_12046 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_12046, i32* @eax, align 8
  %v1_1204c = call i32 @function_23ecc(i32 %v2_12046)
  store i32 %arg1, i32* @eax, align 8
  %v2_1205e = call i32 @function_25aac(i32 %arg1, i32 %v2_12046)
  store i32 %v2_12046, i32* @eax, align 8
  %v1_12069 = call i32 @function_23f02(i32 %v2_12046)
  store i32 %v0_12031, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost10shared_ptrIvEC1IvEERKNS_8weak_ptrIT_EENS_6detail14sp_nothrow_tagE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1209e:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_120ce = add i32 %arg2, 4
  store i32 %v1_120ce, i32* @edx, align 8
  %v1_120d4 = add i32 %tmp107, 4
  store i32 %v1_120d4, i32* @eax, align 8
  %v0_120d7 = load i32, i32* @ecx, align 4
  %sext = mul i32 %v0_120d7, 16777216
  %v3_120e2 = sdiv i32 %sext, 16777216
  %v4_120e2 = call i32 @function_1456c(i32 %v1_120d4, i32 %v1_120ce, i32 %v3_120e2)
  store i32 %v1_120d4, i32* @eax, align 8
  %v1_120f0 = call i32 @function_143dc(i32 %v1_120d4)
  %v1_120f5 = xor i32 %v1_120f0, 1
  %v4_120f5 = trunc i32 %v1_120f5 to i8
  %v5_120f8 = icmp eq i8 %v4_120f5, 0
  br i1 %v5_120f8, label %dec_label_pc_12106, label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_1209e
  %v1_120ff = inttoptr i32 %arg2 to i32*
  %v2_120ff = load i32, i32* %v1_120ff, align 4
  store i32 %v2_120ff, i32* %arg1, align 4
  br label %dec_label_pc_12106

dec_label_pc_12106:                               ; preds = %dec_label_pc_120fc, %dec_label_pc_1209e
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v1_120d4, { 1, 0, 2, 3 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1211a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1211a = load i32, i32* %ebp.global-to-local, align 4
  %v2_12134 = load i32, i32* %arg1, align 4
  %v1_12136 = icmp eq i32 %v2_12134, 0
  %v1_12138 = icmp eq i1 %v1_12136, false
  br i1 %v1_12138, label %dec_label_pc_1215e, label %dec_label_pc_1213a

dec_label_pc_1213a:                               ; preds = %dec_label_pc_1211a
  br label %dec_label_pc_1215e

dec_label_pc_1215e:                               ; preds = %dec_label_pc_1213a, %dec_label_pc_1211a
  %v2_12161 = load i32, i32* %arg1, align 4
  store i32 %v0_1211a, i32* %ebp.global-to-local, align 4
  ret i32 %v2_12161
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12176:
  %v1_12190 = add i32 %arg1, 4
  store i32 %v1_12190, i32* @eax, align 8
  %v1_12196 = call i32 @function_14356(i32 %v1_12190)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_121ae:
  %v1_121c9 = add i32 %arg1, 8
  store i32 %v1_121c9, i32* @eax, align 8
  %v1_121cf = call i32 @function_26224(i32 %v1_121c9)
  store i32 %arg1, i32* @eax, align 8
  %v1_121da = call i32 @function_22ee6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_12204

bb:                                               ; preds = %dec_label_pc_121ae
  %v1_121e9 = call i32 @function_12209()
  br label %dec_label_pc_12204

dec_label_pc_12204:                               ; preds = %dec_label_pc_121ae, %bb
  %v0_121eb = phi i32 [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_121ae ], [ %v1_121e9, %bb ]
  ret i32 %v0_121eb

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12204, { 1, 0 }
}

define i32 @function_121ed() local_unnamed_addr {
dec_label_pc_121ed:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_121ed = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_121ed, i32* %ebx.global-to-local, align 8
  %v0_121ef = load i32, i32* @ebp, align 4
  %v1_121ef = add i32 %v0_121ef, -28
  %v2_121ef = inttoptr i32 %v1_121ef to i32*
  %v3_121ef = load i32, i32* %v2_121ef, align 4
  store i32 %v3_121ef, i32* @eax, align 8
  %v1_121f5 = call i32 @function_22ee6(i32 %v3_121ef)
  %v0_121fa = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_121fa, i32* %eax.global-to-local, align 8
  ret i32 %v0_121fa

; uselistorder directives
  uselistorder i32 (i32)* @function_22ee6, { 2, 1, 0 }
}

define i32 @function_12209() local_unnamed_addr {
dec_label_pc_12209:
  %v0_1220e = load i32, i32* @eax, align 8
  ret i32 %v0_1220e
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12210:
  %stack_var_-169 = alloca i32, align 4
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-264, align 4
  %v2_12240 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %v2_12240, i32* @eax, align 8
  %v1_12249 = call i32 @function_25e68(i32 %v2_12240)
  %v2_1224e = ptrtoint i32* %stack_var_-200 to i32
  %v1_12257 = call i32 @function_25eaa(i32 %v2_1224e)
  %v1_12262 = add i32 %arg2, 12
  %v2_12269 = ptrtoint i32* %stack_var_-196 to i32
  %v2_12272 = call i32 @function_25ede(i32 %v2_12269, i32 %v1_12262)
  store i32 %arg2, i32* @eax, align 8
  %v1_12280 = call i32 @function_25f70(i32 %arg2)
  %v4_12285 = trunc i32 %v1_12280 to i8
  store i1 false, i1* @cf, align 1
  %v5_12285 = icmp eq i8 %v4_12285, 0
  br i1 %v5_12285, label %dec_label_pc_122a7, label %dec_label_pc_12289

dec_label_pc_12289:                               ; preds = %dec_label_pc_12210
  %v3_122a2 = call i32 @function_25fa8(i32 %arg2, i32 0, i32 1)
  br label %dec_label_pc_122a7

dec_label_pc_122a7:                               ; preds = %dec_label_pc_12289, %dec_label_pc_12210
  store i32 %v2_12240, i32* @eax, align 8
  %v2_122ba = call i32 @function_26108(i32 %v2_12240, i32 %arg2)
  store i32 %v2_12269, i32* @eax, align 8
  %v1_122c8 = call i32 @function_25f2e(i32 %v2_12269)
  %v2_122cd = ptrtoint i32* %stack_var_-264 to i32
  %v2_122d7 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_122d7, i32* @eax, align 8
  %v2_122e0 = call i32 @function_26188(i32 %v2_122d7, i32 %v2_122cd)
  %v2_122ef = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_122ef, i32* @eax, align 8
  %v2_122f8 = call i32 @function_261c0(i32 %v2_122ef, i32 %v2_122d7)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_12306 = call i32 @function_2633e(i32 %v2_12240)
  store i32 %v1_12306, i32* @eax, align 8
  %v1_1230e = call i32 @function_2639a(i32 %v1_12306)
  %v2_1232b = ptrtoint i32* %stack_var_-220 to i32
  store i32 %v2_1232b, i32* @eax, align 8
  %v1_12334 = call i32 @function_263d0(i32 %v2_1232b)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_12342 = call i32 @function_2633e(i32 %v2_12240)
  store i32 %v1_12342, i32* @eax, align 8
  %v1_1234a = call i32 @function_2639a(i32 %v1_12342)
  store i32 %v1_1234a, i32* @edx, align 8
  %v2_12351 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_12351, i32* @eax, align 8
  %v2_1235e = call i32 @function_26504(i32 %v2_12351, i32 %v1_1234a)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_1236f = call i32 @function_2633e(i32 %v2_12240)
  store i32 %v1_1236f, i32* @eax, align 8
  %v1_12377 = call i32 @function_2639a(i32 %v1_1236f)
  store i32 %v1_12377, i32* @edx, align 8
  %v2_1237e = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1237e, i32* @eax, align 8
  %v2_1238b = call i32 @function_26504(i32 %v2_1237e, i32 %v1_12377)
  %v3_1239d = load i32, i32* %stack_var_-176, align 4
  %v3_123a7 = load i32, i32* %stack_var_-180, align 4
  %v2_123b1 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v2_123b1, i32* @eax, align 8
  %v4_123ba = call i32 @function_26578(i32 %v2_123b1, i32 %v3_123a7, i32 %v3_1239d, i32 %v2_122ef)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_123c8 = call i32 @function_2633e(i32 %v2_12240)
  store i32 %v1_123c8, i32* @eax, align 8
  %v1_123d0 = call i32 @function_2639a(i32 %v1_123c8)
  store i32 %v1_123d0, i32* @edx, align 8
  %v2_123d7 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_123d7, i32* @eax, align 8
  %v2_123e4 = call i32 @function_26504(i32 %v2_123d7, i32 %v1_123d0)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_123f5 = call i32 @function_2633e(i32 %v2_12240)
  store i32 %v1_123f5, i32* @eax, align 8
  %v1_123fd = call i32 @function_2639a(i32 %v1_123f5)
  %v2_12404 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %v2_12404, i32* @eax, align 8
  %v2_12411 = call i32 @function_264ba(i32 %v2_12404, i32 %v1_123fd)
  %v3_12423 = load i32, i32* %stack_var_-184, align 4
  %v3_1242d = load i32, i32* %stack_var_-188, align 4
  %v2_12437 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v2_12437, i32* @eax, align 8
  %v4_12440 = call i32 @function_26578(i32 %v2_12437, i32 %v3_1242d, i32 %v3_12423, i32 %v2_122ef)
  store i32 %v2_12240, i32* @eax, align 8
  %v1_1244e = call i32 @function_2633e(i32 %v2_12240)
  %v1_12456 = call i32 @function_26482(i32 %v1_1244e)
  store i32 %arg1, i32* @eax, align 8
  %v3_12463 = load i32, i32* %stack_var_-236, align 4
  %v3_1248b = load i32, i32* %stack_var_-252, align 4
  %v2_124b7 = ptrtoint i32* %stack_var_-169 to i32
  store i32 %v2_124b7, i32* @edx, align 8
  %v11_124c4 = call i32 @function_265ee(i32 %arg1, i32 %v2_124b7, i32 %v1_12456, i32 %v3_1248b, i32 %tmp102, i32 %tmp101, i32 %tmp100, i32 %v3_12463, i32 %tmp108, i32 %tmp106, i32 %tmp104)
  %v1_124d5 = call i32 @function_26426(i32 %v2_1232b)
  store i32 %v2_122ef, i32* @eax, align 8
  %v1_124e3 = call i32 @function_243be(i32 %v2_122ef)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_122ef, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_26578, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_26504, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2639a, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_2633e, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2, 4 }
}

define i32 @_ZN5boost15optional_detail13optional_baseISsED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12566:
  %v1_12583 = call i32 @function_269fc(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost15optional_detail12optional_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1259c:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8optionalISsE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_125c6:
  store i32 %arg1, i32* @eax, align 8
  %v2_125e3 = call i32 @function_26aa0(i32 %arg1)
  %v4_125e8 = trunc i32 %v2_125e3 to i8
  %v5_125e8 = icmp eq i8 %v4_125e8, 0
  %v1_125ea = icmp eq i1 %v5_125e8, false
  br i1 %v1_125ea, label %dec_label_pc_12610, label %dec_label_pc_125ec

dec_label_pc_125ec:                               ; preds = %dec_label_pc_125c6
  br label %dec_label_pc_12610

dec_label_pc_12610:                               ; preds = %dec_label_pc_125ec, %dec_label_pc_125c6
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE9safe_boolEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1262e:
  %tmp104 = inttoptr i32 %arg2 to i8*
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v2_1264f = load i8, i8* %tmp104, align 1
  %v5_12652 = icmp eq i8 %v2_1264f, 0
  br i1 %v5_12652, label %dec_label_pc_1266a, label %dec_label_pc_12656

dec_label_pc_12656:                               ; preds = %dec_label_pc_1262e
  store i32 83162, i32* %arg1, align 4
  %v2_12665 = add i32 %tmp107, 4
  %v3_12665 = inttoptr i32 %v2_12665 to i32*
  store i32 0, i32* %v3_12665, align 4
  br label %dec_label_pc_1267d

dec_label_pc_1266a:                               ; preds = %dec_label_pc_1262e
  store i32 0, i32* %arg1, align 4
  %v1_12676 = add i32 %tmp107, 4
  %v2_12676 = inttoptr i32 %v1_12676 to i32*
  store i32 0, i32* %v2_12676, align 4
  br label %dec_label_pc_1267d

dec_label_pc_1267d:                               ; preds = %dec_label_pc_1266a, %dec_label_pc_12656
  store i32 %tmp107, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1268c

bb:                                               ; preds = %dec_label_pc_1267d
  %v1_1268a = call i32 @function_12691()
  br label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %bb, %dec_label_pc_1267d
  %v2_1268a = phi i32 [ %v1_1268a, %bb ], [ %tmp107, %dec_label_pc_1267d ]
  ret i32 %v2_1268a

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 2, 3, 0 }
}

define i32 @function_12691() local_unnamed_addr {
dec_label_pc_12691:
  %v0_12692 = load i32, i32* @eax, align 8
  ret i32 %v0_12692
}

define i32 @_ZNKSt4lessIiEclERKiS2_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12696:
  %v2_126bc = load i32, i32* %arg2, align 4
  %v1_126c1 = inttoptr i32 %arg3 to i32*
  %v2_126c1 = load i32, i32* %v1_126c1, align 4
  %v2_126c3 = sub i32 %v2_126bc, %v2_126c1
  %v8_126c3 = xor i32 %v2_126c1, %v2_126bc
  %v9_126c3 = xor i32 %v2_126c3, %v2_126bc
  %v10_126c3 = and i32 %v9_126c3, %v8_126c3
  %v11_126c3 = icmp slt i32 %v10_126c3, 0
  %v13_126c3 = icmp slt i32 %v2_126c3, 0
  %v2_126c5 = icmp ne i1 %v13_126c3, %v11_126c3
  %v3_126c5 = zext i1 %v2_126c5 to i32
  %v5_126c5 = and i32 %v2_126c1, -256
  %v6_126c5 = or i32 %v3_126c5, %v5_126c5
  store i32 %v6_126c5, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_126d4

bb:                                               ; preds = %dec_label_pc_12696
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v4_126d2 = call i32 @function_126d9(i32 %arg3, i32 %tmp102, i32 %arg1)
  br label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %bb, %dec_label_pc_12696
  %v5_126d2 = phi i32 [ %v4_126d2, %bb ], [ %v6_126c5, %dec_label_pc_12696 ]
  ret i32 %v5_126d2

; uselistorder directives
  uselistorder i32 %v2_126c3, { 1, 0 }
  uselistorder i32 %v2_126c1, { 1, 0, 2 }
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_126d9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126d9:
  %v0_126da = load i32, i32* @eax, align 8
  ret i32 %v0_126da
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126dc:
  %v1_126fc = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 8
  %v2_12709 = call i32 @function_26cc2(i32 %arg1, i32 %v1_126fc)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12726:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_12729 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_12750 = call i32 @function_26d74(i32 %arg2)
  store i32 %v1_12750, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_1275d = call i32 @function_26d44(i32 %arg2)
  %v2_12762 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12762, i32* @edx, align 8
  store i32 %arg2, i32* @eax, align 8
  %v5_1277e = call i32 @function_26da4(i32 %v2_12762, i32 %arg2, i32 %v1_1275d, i32 %v1_12750, i32 %arg3)
  %v2_12786 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12786, i32* @eax, align 8
  %v2_12793 = call i32 @function_24e02(i32 %v2_12786, i32 %arg2)
  %v2_127a8 = call i32 @function_24f38(i32 %v2_12762, i32 %v2_12786)
  %v4_127ad = trunc i32 %v2_127a8 to i8
  %v5_127ad = icmp eq i8 %v4_127ad, 0
  %v1_127af = icmp eq i1 %v5_127ad, false
  br i1 %v1_127af, label %dec_label_pc_127d8, label %dec_label_pc_127b1

dec_label_pc_127b1:                               ; preds = %dec_label_pc_12726
  %v3_127b1 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_127b1, i32* @eax, align 8
  %v1_127b7 = call i32 @function_26e58(i32 %v3_127b1)
  store i32 %arg2, i32* @eax, align 8
  %v3_127cf = call i32 @function_2504c(i32 %arg2, i32 %arg3, i32 %v1_127b7)
  %v4_127d4 = trunc i32 %v3_127cf to i8
  %v5_127d4 = icmp eq i8 %v4_127d4, 0
  br i1 %v5_127d4, label %dec_label_pc_127ef, label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127b1, %dec_label_pc_12726
  store i32 %tmp115, i32* @eax, align 8
  %v2_127e5 = call i32 @function_24e02(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_127f7

dec_label_pc_127ef:                               ; preds = %dec_label_pc_127b1
  %v3_127f2 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_127f2, i32* %arg1, align 4
  br label %dec_label_pc_127f7

dec_label_pc_127f7:                               ; preds = %dec_label_pc_127ef, %dec_label_pc_127d8
  store i32 %v0_12729, i32* %ebx.global-to-local, align 8
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %tmp115, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_24e02, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 5, 4, 9, 8, 7, 6 }
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12812:
  %ebp.global-to-local = alloca i32, align 4
  %v0_12812 = load i32, i32* %ebp.global-to-local, align 4
  %v2_12832 = load i32, i32* %arg1, align 4
  %v1_12837 = inttoptr i32 %arg2 to i32*
  %v2_12837 = load i32, i32* %v1_12837, align 4
  %v12_12839 = icmp eq i32 %v2_12832, %v2_12837
  %v1_1283b = zext i1 %v12_12839 to i32
  %v3_1283b = and i32 %v2_12837, -256
  %v4_1283b = or i32 %v1_1283b, %v3_1283b
  store i32 %v0_12812, i32* %ebp.global-to-local, align 4
  ret i32 %v4_1283b

; uselistorder directives
  uselistorder i32 %v2_12837, { 1, 0 }
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE11lower_boundERS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12852:
  store i32 %arg2, i32* @edx, align 8
  store i32 %arg1, i32* @eax, align 8
  %v3_12889 = call i32 @function_26fc8(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128aa:
  store i32 %arg1, i32* @eax, align 8
  %v1_128d4 = call i32 @function_2709c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_128eb

bb:                                               ; preds = %dec_label_pc_128aa
  %v1_128e9 = call i32 @function_128f0()
  br label %dec_label_pc_128eb

dec_label_pc_128eb:                               ; preds = %bb, %dec_label_pc_128aa
  %v2_128e9 = phi i32 [ %v1_128e9, %bb ], [ %arg1, %dec_label_pc_128aa ]
  ret i32 %v2_128e9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_128f0() local_unnamed_addr {
dec_label_pc_128f0:
  %v0_128f1 = load i32, i32* @eax, align 8
  ret i32 %v0_128f1
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_128f4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_128f4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1290e = load i32, i32* %arg1, align 4
  %v1_12910 = add i32 %v2_1290e, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v0_128f4, i32* %ebp.global-to-local, align 4
  ret i32 %v1_12910
}

define i32 @_ZNKSt4lessISsEclERKSsS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12926:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_12967

bb:                                               ; preds = %dec_label_pc_12926
  %v3_12965 = call i32 @function_1296c(i32 %arg2, i32 %arg3)
  br label %dec_label_pc_12967

dec_label_pc_12967:                               ; preds = %bb, %dec_label_pc_12926
  %v4_12965 = phi i32 [ %v3_12965, %bb ], [ %arg2, %dec_label_pc_12926 ]
  ret i32 %v4_12965
}

define i32 @function_1296c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1296c:
  %v0_1296d = load i32, i32* @eax, align 8
  ret i32 %v0_1296d
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1296e:
  store i32 %arg1, i32* @eax, align 8
  %v2_12998 = call i32 @function_27196(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSsSsEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_129b8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_129b8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_129d8 = load i32, i32* %arg1, align 4
  %v1_129dd = inttoptr i32 %arg2 to i32*
  %v2_129dd = load i32, i32* %v1_129dd, align 4
  %v12_129df = icmp eq i32 %v2_129d8, %v2_129dd
  %v1_129e1 = zext i1 %v12_129df to i32
  %v3_129e1 = and i32 %v2_129dd, -256
  %v4_129e1 = or i32 %v1_129e1, %v3_129e1
  store i32 %v0_129b8, i32* %ebp.global-to-local, align 4
  ret i32 %v4_129e1

; uselistorder directives
  uselistorder i32 %v2_129dd, { 1, 0 }
}

define i32 @_ZNSt4pairIKSsSsEC1ERS0_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_129f8:
  %v1_12a31 = add i32 %arg1, 4
  %v2_12a43 = call i32 @function_12a5c(i32 %v1_12a31, i32 %arg3)
  ret i32 %v2_12a43
}

define i32 @function_12a46() local_unnamed_addr {
dec_label_pc_12a46:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a46 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12a46
}

define i32 @function_12a5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a5c:
  %v0_12a5c = load i32, i32* @ebp, align 4
  %v1_12a5c = add i32 %v0_12a5c, -12
  %v2_12a5c = inttoptr i32 %v1_12a5c to i32*
  %v3_12a5c = load i32, i32* %v2_12a5c, align 4
  %v3_12a5f = xor i32 %v3_12a5c, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_12a5f
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a74:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_12aa0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_12aa4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_12aaa = call i32 @function_272e6(i32 %v2_12aa4, i32 %v4_12aa0)
  %v3_12abc = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_12abc, i32* @ecx, align 4
  %v4_12aca = call i32 @function_27320(i32 %arg1, i32 %arg2, i32 %v3_12abc, i32 %arg4)
  ret i32 %arg1
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12aea:
  %ebp.global-to-local = alloca i32, align 4
  %v0_12aea = load i32, i32* %ebp.global-to-local, align 4
  %v1_12b04 = add i32 %arg1, 8
  %v2_12b04 = inttoptr i32 %v1_12b04 to i32*
  %v3_12b04 = load i32, i32* %v2_12b04, align 4
  store i32 %v0_12aea, i32* %ebp.global-to-local, align 4
  ret i32 %v3_12b04
}

define i32 @_ZNSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b1a:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_12b37 = call i32 @function_27942(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8functionIFbRKSsS2_jEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b50:
  store i32 %arg1, i32* @eax, align 8
  %v1_12b6d = call i32 @function_279ae(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEE18init_slot_functionIS5_EEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b86:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %v0_12b89 = load i32, i32* %ebx.global-to-local, align 8
  %v2_12ba4 = ptrtoint i32* %stack_var_-37 to i32
  store i32 %v2_12ba4, i32* @eax, align 8
  %v2_12bb1 = call i32 @function_27a19(i32 %v2_12ba4, i32 %arg2)
  %v2_12bc3 = call i32 @function_27a4e(i32 %arg2, i32 %v0_12b89)
  store i32 %v2_12bc3, i32* @eax, align 8
  %v1_12bcb = add i32 %arg1, 12
  %v2_12bd5 = call i32 @function_27a82(i32 %v1_12bcb, i32 %v2_12bc3)
  %v2_12be1 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12be1, i32* @eax, align 8
  %v2_12be7 = call i32 @function_217a4(i32 %v2_12be1, i32 %arg1)
  store i32 %v2_12be1, i32* @eax, align 8
  %v2_12bf9 = call i32 @function_27b0a(i32 %v2_12be1, i32 %arg2)
  store i32 %v0_12b89, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v0_12b89, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c14:
  store i1 true, i1* @zf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_12c31 = call i32 @function_27be2(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_12c4a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_12c65 = add i32 %tmp102, 8
  %v2_12c65 = inttoptr i32 %v1_12c65 to i32*
  %v3_12c65 = load i32, i32* %v2_12c65, align 4
  %v2_12c6d = load i32, i32* %arg1, align 4
  %v2_12c71 = sub i32 %v3_12c65, %v2_12c6d
  store i32 %v2_12c71, i32* @ecx, align 4
  %v2_12c75 = sdiv i32 %v2_12c71, 4
  %v3_12c78 = mul i32 %v2_12c75, -1431655765
  %v2_12c83 = load i32, i32* %arg1, align 4
  %v3_12c93 = call i32 @function_2684c(i32 %tmp102, i32 %v2_12c83, i32 %v3_12c78)
  store i32 %tmp102, i32* @eax, align 8
  %v1_12c9e = call i32 @function_2585e(i32 %tmp102)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 2, 3, 0 }
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cd4:
  ret i32 %arg1
}

define i32 @_ZSt8_DestroyIPN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESA_EvT_SC_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12d01:
  store i32 %arg1, i32* @eax, align 8
  %v2_12d31 = call i32 @function_27d04(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost9function3IbRKSsS2_jE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12d4a:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_12d4a = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_12d4a, i32* %stack_var_-4, align 4
  %v4_12d4a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_12d4a, i32* @ebp, align 4
  %v0_12d4d = load i32, i32* %ebx.global-to-local, align 8
  %v2_12d65 = load i32, i32* %arg1, align 4
  store i1 false, i1* @cf, align 1
  %v1_12d67 = icmp eq i32 %v2_12d65, 0
  br i1 %v1_12d67, label %dec_label_pc_12da3, label %dec_label_pc_12d6b

dec_label_pc_12d6b:                               ; preds = %dec_label_pc_12d4a
  store i32 %tmp106, i32* @eax, align 8
  %v1_12d71 = call i32 @function_20f1e(i32 %tmp106)
  %v1_12d76 = xor i32 %v1_12d71, 1
  %v4_12d76 = trunc i32 %v1_12d76 to i8
  %v5_12d79 = icmp eq i8 %v4_12d76, 0
  br i1 %v5_12d79, label %dec_label_pc_12d9a, label %dec_label_pc_12d7d

dec_label_pc_12d7d:                               ; preds = %dec_label_pc_12d6b
  %v1_12d80 = add i32 %tmp106, 4
  store i32 %v1_12d80, i32* %ebx.global-to-local, align 8
  store i32 %tmp106, i32* @eax, align 8
  %v1_12d89 = call i32 @function_27d90(i32 %tmp106)
  %v2_12d95 = call i32 @function_27dc2(i32 %v1_12d89, i32 %v1_12d80)
  br label %dec_label_pc_12d9a

dec_label_pc_12d9a:                               ; preds = %dec_label_pc_12d7d, %dec_label_pc_12d6b
  store i32 0, i32* %arg1, align 4
  %v2_12db8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_12da3

dec_label_pc_12da3:                               ; preds = %dec_label_pc_12d9a, %dec_label_pc_12d4a
  %v2_12db8 = phi i32 [ %v2_12db8.pre, %dec_label_pc_12d9a ], [ %v0_12d4a, %dec_label_pc_12d4a ]
  store i32 %v0_12d4d, i32* %ebx.global-to-local, align 8
  store i32 %v2_12db8, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp106, { 2, 1, 0, 4, 3 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12dba:
  %ebp.global-to-local = alloca i32, align 4
  %v0_12dba = load i32, i32* %ebp.global-to-local, align 4
  %v2_12dd4 = load i32, i32* %arg1, align 4
  %v1_12dd6 = icmp eq i32 %v2_12dd4, 0
  %v1_12dd8 = icmp eq i1 %v1_12dd6, false
  br i1 %v1_12dd8, label %dec_label_pc_12dfe, label %dec_label_pc_12dda

dec_label_pc_12dda:                               ; preds = %dec_label_pc_12dba
  br label %dec_label_pc_12dfe

dec_label_pc_12dfe:                               ; preds = %dec_label_pc_12dda, %dec_label_pc_12dba
  %v2_12e01 = load i32, i32* %arg1, align 4
  store i32 %v0_12dba, i32* %ebp.global-to-local, align 4
  ret i32 %v2_12e01
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE7connectERKNS0_5slot3IbS4_S4_jSB_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12e16:
  %stack_var_-20 = alloca i32, align 4
  %v1_12e43 = add i32 %arg2, 12
  %v2_12e4a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12e4a, i32* @eax, align 8
  %v2_12e50 = call i32 @function_26ae4(i32 %v2_12e4a, i32 %v1_12e43)
  store i32 %arg1, i32* @eax, align 8
  %v4_12e70 = call i32 @function_27fa6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v0_12e75 = load i32, i32* @esp, align 4
  %v5_12e75 = icmp ult i32 %v0_12e75, 4
  store i1 %v5_12e75, i1* @cf, align 1
  store i32 %v2_12e4a, i32* @eax, align 8
  %v1_12e7e = call i32 @function_26b34(i32 %v2_12e4a)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_12e92

bb:                                               ; preds = %dec_label_pc_12e16
  %v1_12e90 = call i32 @function_12eb0()
  store i32 %v1_12e90, i32* @eax, align 8
  br label %dec_label_pc_12e92

dec_label_pc_12e92:                               ; preds = %bb, %dec_label_pc_12e16
  %v0_12e92 = call i32 @function_12eab()
  ret i32 %v0_12e92

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @function_12e95() local_unnamed_addr {
dec_label_pc_12e95:
  %eax.global-to-local = alloca i32, align 4
  %v0_12e95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_12e95
}

define i32 @function_12e9a(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e9a:
  %v0_12e9a = load i32, i32* @eax, align 8
  %v1_12e9a = trunc i32 %v0_12e9a to i8
  %v2_12e9a = add i32 %v0_12e9a, 36
  %v6_12e9a = icmp ugt i8 %v1_12e9a, -37
  store i1 %v6_12e9a, i1* @cf, align 1
  %v16_12e9a = and i32 %v2_12e9a, 255
  %v18_12e9a = and i32 %v0_12e9a, -256
  %v19_12e9a = or i32 %v16_12e9a, %v18_12e9a
  store i32 %v19_12e9a, i32* @eax, align 8
  %v1_12e9c = call i32 @function_26b34(i32 ptrtoint (i32* @2 to i32))
  %v0_12ea1 = load i32, i32* @ebx, align 8
  ret i32 %v0_12ea1

; uselistorder directives
  uselistorder i32 %v0_12e9a, { 1, 0, 2 }
}

define i32 @function_12eab() local_unnamed_addr {
dec_label_pc_12eab:
  %v0_12eab = load i32, i32* @eax, align 8
  ret i32 %v0_12eab
}

define i32 @function_12eb0() local_unnamed_addr {
dec_label_pc_12eb0:
  %v0_12eb4 = load i32, i32* @eax, align 8
  ret i32 %v0_12eb4
}

define i32 @_ZN5boost8functionIFbxEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12eb8:
  store i32 %arg1, i32* @eax, align 8
  %v1_12ed5 = call i32 @function_281d2(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8signals25slot1IbxNS_8functionIFbxEEEE18init_slot_functionIS3_EEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12eee:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_12ef1 = load i32, i32* %ebx.global-to-local, align 8
  %v2_12f49 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_12f49, i32* @eax, align 8
  %v3_12f4f = call i32 @function_21b0c(i32 %v2_12f49, i32 %arg1, i32 %arg2)
  store i32 %v2_12f49, i32* @eax, align 8
  %v2_12f61 = call i32 @function_2833a(i32 %v2_12f49, i32 %arg2)
  store i32 %v0_12ef1, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost9function1IbxE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12f7c:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_12f7c = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_12f7c, i32* %stack_var_-4, align 4
  %v4_12f7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_12f7c, i32* @ebp, align 4
  %v0_12f7f = load i32, i32* %ebx.global-to-local, align 8
  %v2_12f97 = load i32, i32* %arg1, align 4
  %v1_12f99 = icmp eq i32 %v2_12f97, 0
  br i1 %v1_12f99, label %dec_label_pc_12fd5, label %dec_label_pc_12f9d

dec_label_pc_12f9d:                               ; preds = %dec_label_pc_12f7c
  store i32 %tmp106, i32* @eax, align 8
  %v1_12fa3 = call i32 @function_21150(i32 %tmp106)
  %v1_12fa8 = xor i32 %v1_12fa3, 1
  %v4_12fa8 = trunc i32 %v1_12fa8 to i8
  %v5_12fab = icmp eq i8 %v4_12fa8, 0
  br i1 %v5_12fab, label %dec_label_pc_12fcc, label %dec_label_pc_12faf

dec_label_pc_12faf:                               ; preds = %dec_label_pc_12f9d
  %v1_12fb2 = add i32 %tmp106, 4
  store i32 %v1_12fb2, i32* @ebx, align 8
  store i32 %tmp106, i32* @eax, align 8
  %v1_12fbb = call i32 @function_28412(i32 %tmp106)
  store i32 %v1_12fbb, i32* @eax, align 8
  %v0_12fc0 = load i32, i32* @ebx, align 8
  %v2_12fc7 = call i32 @function_28444(i32 %v1_12fbb, i32 %v0_12fc0)
  br label %dec_label_pc_12fcc

dec_label_pc_12fcc:                               ; preds = %dec_label_pc_12faf, %dec_label_pc_12f9d
  store i32 0, i32* %arg1, align 4
  %v2_12fea.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_12fd5

dec_label_pc_12fd5:                               ; preds = %dec_label_pc_12fcc, %dec_label_pc_12f7c
  %v2_12fea = phi i32 [ %v2_12fea.pre, %dec_label_pc_12fcc ], [ %v0_12f7c, %dec_label_pc_12f7c ]
  store i32 %v0_12f7f, i32* %ebx.global-to-local, align 8
  store i32 %v2_12fea, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp106, { 2, 1, 0, 4, 3 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_12fec:
  %v2_13006 = load i32, i32* %arg1, align 4
  %v1_13008 = icmp eq i32 %v2_13006, 0
  %v1_1300a = icmp eq i1 %v1_13008, false
  br i1 %v1_1300a, label %dec_label_pc_13030, label %dec_label_pc_1300c

dec_label_pc_1300c:                               ; preds = %dec_label_pc_12fec
  br label %dec_label_pc_13030

dec_label_pc_13030:                               ; preds = %dec_label_pc_1300c, %dec_label_pc_12fec
  %v2_13033 = load i32, i32* %arg1, align 4
  store i32 %v2_13033, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13041

bb:                                               ; preds = %dec_label_pc_13030
  %v1_1303f = call i32 @function_13046()
  br label %dec_label_pc_13041

dec_label_pc_13041:                               ; preds = %bb, %dec_label_pc_13030
  %v2_1303f = phi i32 [ %v1_1303f, %bb ], [ %v2_13033, %dec_label_pc_13030 ]
  ret i32 %v2_1303f
}

define i32 @function_13046() local_unnamed_addr {
dec_label_pc_13046:
  %v0_13047 = load i32, i32* @eax, align 8
  ret i32 %v0_13047
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE7connectERKNS0_5slot1IbxS9_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13048:
  %stack_var_-20 = alloca i32, align 4
  %v1_13075 = add i32 %arg2, 12
  %v2_1307c = ptrtoint i32* %stack_var_-20 to i32
  %v2_13082 = call i32 @function_26d16(i32 %v2_1307c, i32 %v1_13075)
  store i32 %arg1, i32* @eax, align 8
  %v4_130a2 = call i32 @function_285f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v2_1307c, i32* @eax, align 8
  %v1_130b0 = call i32 @function_26d66(i32 %v2_1307c)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_130c4

bb:                                               ; preds = %dec_label_pc_13048
  %v1_130c2 = call i32 @function_130e2()
  store i32 %v1_130c2, i32* @eax, align 8
  br label %dec_label_pc_130c4

dec_label_pc_130c4:                               ; preds = %bb, %dec_label_pc_13048
  %v0_130c4 = call i32 @function_130dd()
  ret i32 %v0_130c4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 1 }
}

define i32 @function_130c7() local_unnamed_addr {
dec_label_pc_130c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_130c7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_130c7
}

define i32 @function_130d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_130d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_130dd() local_unnamed_addr {
dec_label_pc_130dd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_130e2() local_unnamed_addr {
dec_label_pc_130e2:
  %v0_130e6 = load i32, i32* @eax, align 8
  ret i32 %v0_130e6
}

define i32 @_ZN5boost8functionIFvRKSsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_130ea:
  store i32 %arg1, i32* @eax, align 8
  %v1_13107 = call i32 @function_2881c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13118

bb:                                               ; preds = %dec_label_pc_130ea
  %v1_13116 = call i32 @function_1311d()
  br label %dec_label_pc_13118

dec_label_pc_13118:                               ; preds = %bb, %dec_label_pc_130ea
  %v3_13116 = phi i32 [ %v1_13116, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_130ea ]
  ret i32 %v3_13116

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1311d() local_unnamed_addr {
dec_label_pc_1311d:
  %v4_1311d = load i32, i32* @eax, align 8
  ret i32 %v4_1311d
}

define i32 @function_1311e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1311e:
  %v0_1311e = load i32, i32* @eax, align 8
  ret i32 %v0_1311e
}

define i32 @_ZN5boost8signals25slot1IvRKSsNS_8functionIFvS3_EEEE18init_slot_functionIS5_EEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13120:
  %stack_var_-37 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_1313e = ptrtoint i32* %stack_var_-37 to i32
  store i32 %v2_1313e, i32* @eax, align 8
  %v2_1314b = call i32 @function_28892(i32 %v2_1313e, i32 %arg2)
  %v0_13153 = load i32, i32* @ebx, align 8
  %v2_1315d = call i32 @function_288c7(i32 %arg2, i32 %v0_13153)
  %v1_13165 = add i32 %arg1, 12
  %v2_1316f = call i32 @function_288fc(i32 %v1_13165, i32 %v2_1315d)
  ret i32 %v2_1316f
}

define i32 @function_13176(i32 %arg1) local_unnamed_addr {
dec_label_pc_13176:
  %v0_1317b = load i32, i32* @ebp, align 4
  %v1_1317b = add i32 %v0_1317b, -16
  %v1_13181 = call i32 @function_21d3e(i32 %v1_1317b)
  %v0_13186 = load i32, i32* @ebp, align 4
  %v1_13186 = add i32 %v0_13186, -32
  %v2_13186 = inttoptr i32 %v1_13186 to i32*
  %v3_13186 = load i32, i32* %v2_13186, align 4
  %v1_1318d = add i32 %v0_13186, -16
  %v2_13193 = call i32 @function_28984(i32 %v1_1318d, i32 %v3_13186)
  %v0_13198 = load i32, i32* @ebp, align 4
  %v1_13198 = add i32 %v0_13198, -12
  %v2_13198 = inttoptr i32 %v1_13198 to i32*
  %v3_13198 = load i32, i32* %v2_13198, align 4
  %v3_1319b = xor i32 %v3_13198, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1319b = icmp eq i32 %v3_1319b, 0
  store i32 %v3_1319b, i32* @eax, align 8
  br i1 %v4_1319b, label %bb, label %dec_label_pc_131a4

bb:                                               ; preds = %dec_label_pc_13176
  %v1_131a2 = call i32 @function_131a9()
  br label %dec_label_pc_131a4

dec_label_pc_131a4:                               ; preds = %bb, %dec_label_pc_13176
  %v2_131a2 = phi i32 [ %v1_131a2, %bb ], [ %v3_1319b, %dec_label_pc_13176 ]
  ret i32 %v2_131a2
}

define i32 @function_131a9() local_unnamed_addr {
dec_label_pc_131a9:
  %v0_131a9 = load i32, i32* @ebp, align 4
  %v1_131a9 = add i32 %v0_131a9, -4
  %v2_131a9 = inttoptr i32 %v1_131a9 to i32*
  %v3_131a9 = load i32, i32* %v2_131a9, align 4
  store i32 %v3_131a9, i32* @ebx, align 8
  %v0_131ad = load i32, i32* @eax, align 8
  ret i32 %v0_131ad
}

define i32 @_ZN5boost9function1IvRKSsE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_131ae:
  %ebp.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_131ae = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_131ae, i32* %stack_var_-4, align 4
  %v4_131ae = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_131ae, i32* @ebp, align 4
  %v2_131c9 = load i32, i32* %arg1, align 4
  %v1_131cb = icmp eq i32 %v2_131c9, 0
  br i1 %v1_131cb, label %dec_label_pc_13207, label %dec_label_pc_131cf

dec_label_pc_131cf:                               ; preds = %dec_label_pc_131ae
  store i32 %tmp106, i32* @eax, align 8
  %v1_131d5 = call i32 @function_21382(i32 %tmp106)
  %v1_131da = xor i32 %v1_131d5, 1
  %v4_131da = trunc i32 %v1_131da to i8
  %v5_131dd = icmp eq i8 %v4_131da, 0
  br i1 %v5_131dd, label %dec_label_pc_131fe, label %dec_label_pc_131e1

dec_label_pc_131e1:                               ; preds = %dec_label_pc_131cf
  %v1_131e4 = add i32 %tmp106, 4
  %v1_131ed = call i32 @function_28a5c(i32 %tmp106)
  store i32 %v1_131ed, i32* @eax, align 8
  %v2_131f9 = call i32 @function_28a8e(i32 %v1_131ed, i32 %v1_131e4)
  br label %dec_label_pc_131fe

dec_label_pc_131fe:                               ; preds = %dec_label_pc_131e1, %dec_label_pc_131cf
  store i32 0, i32* %arg1, align 4
  %v2_1321c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_13207

dec_label_pc_13207:                               ; preds = %dec_label_pc_131fe, %dec_label_pc_131ae
  %v2_1321c = phi i32 [ %v2_1321c.pre, %dec_label_pc_131fe ], [ %v0_131ae, %dec_label_pc_131ae ]
  store i32 %v2_1321c, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp106, { 1, 0, 3, 2 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1321e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1321e = load i32, i32* %ebp.global-to-local, align 4
  %v2_13238 = load i32, i32* %arg1, align 4
  %v1_1323a = icmp eq i32 %v2_13238, 0
  %v1_1323c = icmp eq i1 %v1_1323a, false
  br i1 %v1_1323c, label %dec_label_pc_13262, label %dec_label_pc_1323e

dec_label_pc_1323e:                               ; preds = %dec_label_pc_1321e
  br label %dec_label_pc_13262

dec_label_pc_13262:                               ; preds = %dec_label_pc_1323e, %dec_label_pc_1321e
  %v2_13265 = load i32, i32* %arg1, align 4
  store i32 %v0_1321e, i32* %ebp.global-to-local, align 4
  ret i32 %v2_13265
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE7connectERKNS0_5slot1IvS4_SB_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1327a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_1327d = load i32, i32* %ebx.global-to-local, align 8
  %v1_132a7 = add i32 %arg2, 12
  %v2_132ae = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_132ae, i32* @eax, align 8
  %v2_132b4 = call i32 @function_26f48(i32 %v2_132ae, i32 %v1_132a7)
  %v4_132d4 = call i32 @function_28c3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v1_132e2 = call i32 @function_26f98(i32 %v2_132ae)
  store i32 %v0_1327d, i32* %ebx.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1331b:
  %v2_1333b = load i32, i32* %arg2, align 4
  %v2_13340 = add i32 %arg1, 8
  %v3_13340 = inttoptr i32 %v2_13340 to i32*
  store i32 %v2_1333b, i32* %v3_13340, align 4
  ret i32 %arg1
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13359:
  %v2_13379 = load i32, i32* %arg2, align 4
  %v2_1337e = add i32 %arg1, 12
  %v3_1337e = inttoptr i32 %v2_1337e to i32*
  store i32 %v2_13379, i32* %v3_1337e, align 4
  ret i32 %arg1
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13397:
  %v2_133b7 = load i32, i32* %arg2, align 4
  %v2_133bc = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_133bc = inttoptr i32 %v2_133bc to i32*
  store i32 %v2_133b7, i32* %v3_133bc, align 4
  ret i32 %arg1
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_133d6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v2_13415 = call i32 @function_28ef6(i32 %tmp103, i32 %arg2)
  store i32 %tmp103, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13456

bb:                                               ; preds = %dec_label_pc_133d6
  %v1_13429 = call i32 @function_1345b()
  br label %dec_label_pc_13456

dec_label_pc_13456:                               ; preds = %dec_label_pc_133d6, %bb
  %v0_1342b = phi i32 [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_133d6 ], [ %v1_13429, %bb ]
  ret i32 %v0_1342b

; uselistorder directives
  uselistorder label %dec_label_pc_13456, { 1, 0 }
}

define i32 @function_1342d() local_unnamed_addr {
dec_label_pc_1342d:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_13446 = add i32 %tmp91, -32
  %v2_13446 = inttoptr i32 %v1_13446 to i32*
  %v3_13446 = load i32, i32* %v2_13446, align 4
  ret i32 %v3_13446
}

define i32 @function_1345b() local_unnamed_addr {
dec_label_pc_1345b:
  %v0_13460 = load i32, i32* @eax, align 8
  ret i32 %v0_13460
}

define i32 @_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13461:
  %v2_1348b = call i32 @function_29011(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_1349e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1349e:
  %v0_1349e = load i32, i32* @eax, align 8
  %v1_1349e = add i32 %v0_1349e, -792
  ret i32 %v1_1349e
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_134a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_134ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_134ad
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32* %arg1) {
dec_label_pc_134b2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33b44_type* @global_var_33b44.1942 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_134d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_134d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_134d6 = load i32, i32* @eax, align 8
  %v1_134d6 = add i32 %v0_134d6, 1
  store i32 %v1_134d6, i32* %eax.global-to-local, align 8
  %v1_134d7 = add i32 %v0_134d6, 60
  %v2_134d7 = inttoptr i32 %v1_134d7 to i8*
  %v3_134d7 = load i8, i8* %v2_134d7, align 1
  %v4_134d7 = load i32, i32* @ebx, align 8
  %v5_134d7 = trunc i32 %v4_134d7 to i8
  %v6_134d7 = or i8 %v5_134d7, %v3_134d7
  store i8 %v6_134d7, i8* %v2_134d7, align 1
  %v0_134da = load i32, i32* %eax.global-to-local, align 8
  %v2_134da = inttoptr i32 %v0_134da to i32*
  %v3_134da = load i32, i32* %v2_134da, align 4
  %v4_134da = add i32 %v3_134da, %v0_134da
  store i32 %v4_134da, i32* %eax.global-to-local, align 8
  %v0_134dc = load i32, i32* @ebp, align 4
  %v1_134dc = add i32 %v0_134dc, -28
  %v2_134dc = inttoptr i32 %v1_134dc to i32*
  %v3_134dc = load i32, i32* %v2_134dc, align 4
  %v1_134df = add i32 %v3_134dc, 8
  store i32 %v1_134df, i32* @eax, align 8
  %v1_134e5 = call i32 @function_14012(i32 %v1_134df)
  store i32 %v1_134e5, i32* %eax.global-to-local, align 8
  %v0_134ea = load i32, i32* @ebp, align 4
  %v1_134ea = add i32 %v0_134ea, -28
  %v2_134ea = inttoptr i32 %v1_134ea to i32*
  %v3_134ea = load i32, i32* %v2_134ea, align 4
  store i32 %v3_134ea, i32* @eax, align 8
  %v1_134f0 = call i32 @function_23ab6(i32 %v3_134ea)
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1350c = load i32, i32* @ebp, align 4
  %v1_1350c = add i32 %v0_1350c, -12
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  %v3_1350c = load i32, i32* %v2_1350c, align 4
  %v3_1350f = xor i32 %v3_1350c, ptrtoint ([3 x i8]* @3 to i32)
  store i32 %v3_1350f, i32* %eax.global-to-local, align 8
  ret i32 %v3_1350f
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13520:
  %v4_13520 = add i32 %arg1, -8
  %v1_13525 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %v4_13520)
  ret i32 %v1_13525
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) {
dec_label_pc_13528:
  %v1_13545 = call i32 @function_269d2(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13568:
  %v2_13592 = call i32 @function_2917c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_135a6

bb:                                               ; preds = %dec_label_pc_13568
  %v1_135a4 = call i32 @function_135ab()
  br label %dec_label_pc_135a6

dec_label_pc_135a6:                               ; preds = %bb, %dec_label_pc_13568
  %v2_135a4 = phi i32 [ %v1_135a4, %bb ], [ %arg1, %dec_label_pc_13568 ]
  ret i32 %v2_135a4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_135ab() local_unnamed_addr {
dec_label_pc_135ab:
  %v0_135ac = load i32, i32* @eax, align 8
  ret i32 %v0_135ac
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_135af:
  %eax.global-to-local = alloca i32, align 4
  %v0_135b4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_135b4
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_135b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_135be = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_135be
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32* %arg1) {
dec_label_pc_135c4:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33ae4_type* @global_var_33ae4.1945 to i32), i32* %arg1, align 4
  %v1_135e7 = add i32 %tmp99, 8
  %v2_135e7 = inttoptr i32 %v1_135e7 to i32*
  store i32 ptrtoint (i32* @global_var_33b00.1946 to i32), i32* %v2_135e7, align 4
  %v1_135f1 = add i32 %tmp99, 28
  %v2_135f1 = inttoptr i32 %v1_135f1 to i32*
  store i32 ptrtoint (i32* @global_var_33b10.1947 to i32), i32* %v2_135f1, align 4
  store i32 %v1_135f1, i32* @eax, align 8
  %v1_13601 = call i32 @function_151ec(i32 %v1_135f1)
  store i32 %tmp99, i32* @eax, align 8
  %v1_1360c = call i32 @function_26a76(i32 %tmp99)
  %v1_1361b = call i32 @function_13628()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_135f1, { 1, 0, 2 }
}

define i32 @function_13628() local_unnamed_addr {
dec_label_pc_13628:
  %v0_13628 = load i32, i32* @ebp, align 4
  %v1_13628 = add i32 %v0_13628, -12
  %v2_13628 = inttoptr i32 %v1_13628 to i32*
  %v3_13628 = load i32, i32* %v2_13628, align 4
  %v3_1362b = xor i32 %v3_13628, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1362b
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1363c:
  %v4_1363c = add i32 %arg1, -28
  %v1_13641 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %v4_1363c)
  ret i32 %v1_13641
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13643:
  %v4_13643 = add i32 %arg1, -8
  %v1_13648 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %v4_13643)
  ret i32 %v1_13648
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) {
dec_label_pc_1364a:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNSaIN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1368a:
  %v1_136a7 = call i32 @function_293cc(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_136b8

bb:                                               ; preds = %dec_label_pc_1368a
  %v1_136b6 = call i32 @function_136bd()
  br label %dec_label_pc_136b8

dec_label_pc_136b8:                               ; preds = %bb, %dec_label_pc_1368a
  %v2_136b6 = phi i32 [ %v1_136b6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1368a ]
  ret i32 %v2_136b6
}

define i32 @function_136bd() local_unnamed_addr {
dec_label_pc_136bd:
  %v0_136be = load i32, i32* @eax, align 8
  ret i32 %v0_136be
}

define i32 @_ZSt8_DestroyIPN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136bf:
  store i32 %arg1, i32* @eax, align 8
  %v2_136e9 = call i32 @function_2946c(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13702:
  %ebp.global-to-local = alloca i32, align 4
  %v0_13702 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_13702, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_14invoke_visitorIKNS4_21lock_weak_ptr_visitorEEEEENT_11result_typeERSF_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1373a:
  %tmp107 = ptrtoint i32* %arg2 to i32
  %v1_13761 = add i32 %tmp107, 4
  store i32 %v1_13761, i32* @eax, align 8
  %v1_13767 = trunc i32 %v1_13761 to i16
  %v2_13767 = call i32 @function_29586(i16 %v1_13767)
  store i32 %tmp107, i32* @eax, align 8
  %v1_13774 = call i32 @function_2953e(i32 %tmp107)
  %v2_1377e = load i32, i32* %arg2, align 4
  %v5_13799 = call i32 @__stack_chk_fail.822(i32 %arg1, i32 %v2_1377e, i32 %v1_13774, i32 %arg3, i32 %v2_13767)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_137b0

bb:                                               ; preds = %dec_label_pc_1373a
  %v1_137ae = call i32 @function_137b5()
  br label %dec_label_pc_137b0

dec_label_pc_137b0:                               ; preds = %bb, %dec_label_pc_1373a
  %v2_137ae = phi i32 [ %v1_137ae, %bb ], [ %arg1, %dec_label_pc_1373a ]
  ret i32 %v2_137ae

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_137b5() local_unnamed_addr {
dec_label_pc_137b5:
  %v0_137b9 = load i32, i32* @eax, align 8
  ret i32 %v0_137b9
}

define i32 @_ZN5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_137bc:
  %v1_137d9 = inttoptr i32 %arg1 to i32*
  %v2_137d9 = call i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED1Ev(i32* %v1_137d9)
  ret i32 %v2_137d9
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9copy_intoEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137f2:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_13813 = add i32 %tmp105, 4
  store i32 %v1_13813, i32* @eax, align 8
  %v1_13819 = call i32 @function_2963e(i32 %v1_13813)
  store i32 %tmp105, i32* @eax, align 8
  %v1_13826 = call i32 @function_2708a(i32 %tmp105)
  %v2_13830 = load i32, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13855

bb:                                               ; preds = %dec_label_pc_137f2
  %v5_13853 = call i32 @function_1385a(i32 %v2_13830, i32 %v1_13826, i32 %arg2, i32 %v1_13819)
  br label %dec_label_pc_13855

dec_label_pc_13855:                               ; preds = %bb, %dec_label_pc_137f2
  %v6_13853 = phi i32 [ %v5_13853, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_137f2 ]
  ret i32 %v6_13853

; uselistorder directives
  uselistorder i32 %tmp105, { 2, 1, 0 }
}

define i32 @function_1385a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1385a:
  %v0_1385f = load i32, i32* @eax, align 8
  ret i32 %v0_1385f
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13860:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13891

bb:                                               ; preds = %dec_label_pc_13860
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1388f = call i32 @function_13896(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_13891

dec_label_pc_13891:                               ; preds = %bb, %dec_label_pc_13860
  %v4_1388f = phi i32 [ %v3_1388f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_13860 ]
  ret i32 %v4_1388f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_13896(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13896:
  %v0_13897 = load i32, i32* @eax, align 8
  ret i32 %v0_13897
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_13898:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_138b5 = call i32 @function_29844(i32 %tmp101)
  %v4_138ba = trunc i32 %v1_138b5 to i8
  %v2_138ca = load i32, i32* %arg1, align 4
  %not.v5_138ba = icmp ne i8 %v4_138ba, 0
  %v1_138c3 = sext i1 %not.v5_138ba to i32
  %storemerge = xor i32 %v1_138c3, %v2_138ca
  ret i32 %storemerge
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9destroyerEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138e0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v0_138e3 = load i32, i32* %ebx.global-to-local, align 8
  %v1_13901 = add i32 %tmp105, 4
  store i32 %v1_13901, i32* @eax, align 8
  %v1_13907 = call i32 @function_2709c(i32 %v1_13901)
  store i32 %v1_13907, i32* %ebx.global-to-local, align 8
  store i32 %tmp105, i32* @eax, align 8
  %v1_13914 = call i32 @function_27178(i32 %tmp105)
  %v2_1391e = load i32, i32* %arg1, align 4
  store i32 %v2_1391e, i32* @eax, align 8
  %v4_13932 = call i32 @function_298be(i32 %v2_1391e, i32 %v1_13914, i32 %arg2, i32 %v1_13907)
  store i32 %v0_138e3, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp105, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2709c, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1394e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1394e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_1394e, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_14invoke_visitorIKNS4_24expired_weak_ptr_visitorEEEEENT_11result_typeERSF_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13986:
  %ebx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v0_13989 = load i32, i32* %ebx.global-to-local, align 8
  %v1_139a7 = add i32 %tmp105, 4
  %v5_139a7 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_139a7, i1* @cf, align 1
  store i32 %v1_139a7, i32* @eax, align 8
  %v1_139ad = call i32 @function_297d2(i32 %v1_139a7)
  store i32 %v1_139ad, i32* %ebx.global-to-local, align 8
  %v1_139ba = call i32 @function_2978a(i32 %tmp105)
  %v2_139c4 = load i32, i32* %arg1, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v4_139d8 = call i32 @function_29a3c(i32 %v2_139c4, i32 %v1_139ba, i32 %arg2, i32 %v1_139ad)
  store i32 %v0_13989, i32* %ebx.global-to-local, align 8
  ret i32 %v4_139d8

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139f4:
  %ebp.global-to-local = alloca i32, align 4
  %v0_139f4 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_139f4, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8weak_ptrIvEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a2c:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_13a4c = inttoptr i32 %arg2 to i32*
  %v2_13a4c = load i32, i32* %v1_13a4c, align 4
  store i32 %v2_13a4c, i32* %arg1, align 4
  %v1_13a56 = add i32 %arg2, 4
  %v1_13a5c = add i32 %tmp103, 4
  store i32 %v1_13a5c, i32* @eax, align 8
  %v2_13a66 = call i32 @function_15e22(i32 %v1_13a5c, i32 %v1_13a56)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13a77

bb:                                               ; preds = %dec_label_pc_13a2c
  %v1_13a75 = call i32 @function_13a7c()
  br label %dec_label_pc_13a77

dec_label_pc_13a77:                               ; preds = %bb, %dec_label_pc_13a2c
  %v2_13a75 = phi i32 [ %v1_13a75, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_13a2c ]
  ret i32 %v2_13a75

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_13a7c() local_unnamed_addr {
dec_label_pc_13a7c:
  %v0_13a7d = load i32, i32* @eax, align 8
  ret i32 %v0_13a7d
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9destroyerEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a7e:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_13a9f = add i32 %tmp105, 4
  %v1_13aa5 = call i32 @function_2723a(i32 %v1_13a9f)
  store i32 %tmp105, i32* @eax, align 8
  %v1_13ab2 = call i32 @function_29882(i32 %tmp105)
  %v2_13abc = load i32, i32* %arg1, align 4
  store i32 %v2_13abc, i32* @eax, align 8
  %v4_13ad0 = call i32 @function_29ba8(i32 %v2_13abc, i32 %v1_13ab2, i32 %arg2, i32 %v1_13aa5)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp105, { 2, 1, 0 }
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1ERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13aec:
  %stack_var_-20 = alloca i32, align 4
  %v1_13b0d = add i32 %arg1, 4
  store i32 %v1_13b0d, i32* @eax, align 8
  %v1_13b21 = call i32 @function_272a8(i32 %v1_13b0d)
  %v2_13b2a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg2, i32* @eax, align 8
  %v2_13b42 = call i32 @function_29c8a(i32 %arg2, i32 %v2_13b2a)
  store i32 %arg2, i32* @eax, align 8
  %v1_13b4d = call i32 @function_298f0(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_13b5c = call i32 @function_274e0(i32 %arg1, i32 %v1_13b4d)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13b78

bb:                                               ; preds = %dec_label_pc_13aec
  %v2_13b76 = call i32 @function_13ba4(i32 %v2_13b2a)
  store i32 %v2_13b76, i32* @eax, align 8
  br label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %bb, %dec_label_pc_13aec
  %v0_13b78 = call i32 @function_13b9f()
  ret i32 %v0_13b78

; uselistorder directives
  uselistorder i32 %v1_13b0d, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_13b7b() local_unnamed_addr {
dec_label_pc_13b7b:
  %eax.global-to-local = alloca i32, align 4
  %v0_13b7b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_13b7b
}

define i32 @function_13b81(i16 %arg1) local_unnamed_addr {
dec_label_pc_13b81:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13b81 = load i32, i32* %eax.global-to-local, align 8
  %v11_13b81 = and i32 %v0_13b81, -1166737432
  %v1_13b84 = or i32 %v11_13b81, 1166737409
  store i32 %v1_13b84, i32* %eax.global-to-local, align 8
  %v0_13b8b = load i32, i32* %ecx.global-to-local, align 4
  %v3_13b8b = mul i32 %v0_13b8b, 5
  %v4_13b8b = inttoptr i32 %v3_13b8b to i8*
  %v5_13b8b = load i8, i8* %v4_13b8b, align 1
  %v6_13b8b = mul i8 %v5_13b8b, 16
  %v7_13b8b = udiv i8 %v5_13b8b, 16
  %v8_13b8b = or i8 %v7_13b8b, %v6_13b8b
  store i8 %v8_13b8b, i8* %v4_13b8b, align 1
  %v0_13b8f = load i32, i32* %eax.global-to-local, align 8
  %v11_13b8f = and i32 %v0_13b8f, -24
  store i32 %v11_13b8f, i32* %eax.global-to-local, align 8
  ret i32 %v11_13b8f

; uselistorder directives
  uselistorder i32 %v11_13b8f, { 1, 0 }
  uselistorder i8 %v5_13b8b, { 1, 0 }
}

define i32 @function_13b9f() local_unnamed_addr {
dec_label_pc_13b9f:
  %v0_13b9f = load i32, i32* @eax, align 8
  ret i32 %v0_13b9f
}

define i32 @function_13ba4(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ba4:
  %v0_13ba9 = load i32, i32* @eax, align 8
  ret i32 %v0_13ba9
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13baa:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_13baa = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_13baa, i32* %stack_var_-4, align 4
  %v4_13baa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_13baa, i32* @ebp, align 4
  store i1 false, i1* @cf, align 1
  %v10_13bc7 = icmp eq i32 %arg2, 0
  br i1 %v10_13bc7, label %dec_label_pc_13bee, label %dec_label_pc_13bcd

dec_label_pc_13bcd:                               ; preds = %dec_label_pc_13baa
  store i32 %arg1, i32* @eax, align 8
  %v3_13be2 = call i32 @function_29dfc(i32 %arg1, i32 %arg2, i32 0)
  %v2_13bff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_13bee

dec_label_pc_13bee:                               ; preds = %dec_label_pc_13baa, %dec_label_pc_13bcd
  %v2_13bff = phi i32 [ %v2_13bff.pre, %dec_label_pc_13bcd ], [ %v0_13baa, %dec_label_pc_13baa ]
  %storemerge = phi i32 [ %v3_13be2, %dec_label_pc_13bcd ], [ 0, %dec_label_pc_13baa ]
  store i32 %v2_13bff, i32* %ebp.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_13bee, { 1, 0 }
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE13_M_deallocateEPSA_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13c02:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_13c02 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_13c02, i32* %stack_var_-4, align 4
  %v4_13c02 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_13c02, i32* %ebp.global-to-local, align 4
  %v10_13c25 = icmp eq i32 %arg2, 0
  br i1 %v10_13c25, label %dec_label_pc_13c44, label %dec_label_pc_13c2b

dec_label_pc_13c2b:                               ; preds = %dec_label_pc_13c02
  store i32 %arg1, i32* @eax, align 8
  %v3_13c3f = call i32 @function_29eb8(i32 %arg1, i32 %arg2, i32 %arg3)
  %v2_13c55.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_13c44

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c2b, %dec_label_pc_13c02
  %v2_13c55 = phi i32 [ %v2_13c55.pre, %dec_label_pc_13c2b ], [ %v0_13c02, %dec_label_pc_13c02 ]
  store i32 %v2_13c55, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13c58:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_13c7b = add i32 %tmp100, 4
  %v1_13c81 = call i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E5whichEv(i32 %v1_13c7b)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13c9a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_13c9a = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_13c9a, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEEC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13cce:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_13cf1 = call i32 @function_16238(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13d17

bb:                                               ; preds = %dec_label_pc_13cce
  %v2_13d15 = call i32 @function_13d1c(i32 %arg2)
  br label %dec_label_pc_13d17

dec_label_pc_13d17:                               ; preds = %bb, %dec_label_pc_13cce
  %v3_13d15 = phi i32 [ %v2_13d15, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_13cce ]
  ret i32 %v3_13d15

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_13d1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d1c:
  %v0_13d1d = load i32, i32* @eax, align 8
  ret i32 %v0_13d1d
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13d1e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_13d48 = call i32 @function_162b2(i32 %tmp100)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d60:
  %v1_13d7a = add i32 %arg1, 4
  %v5_13d7a = icmp ugt i32 %arg1, -5
  store i1 %v5_13d7a, i1* @cf, align 1
  store i32 %v1_13d7a, i32* @eax, align 8
  %v1_13d80 = call i32 @function_16062(i32 %v1_13d7a)
  ret i32 %v1_13d80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13d98:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_13dc1 = call i32 @function_27af8(i32 %arg1)
  store i32 %v2_13dc1, i32* %eax.global-to-local, align 8
  %v4_13dc6 = trunc i32 %v2_13dc1 to i8
  %v5_13dc6 = icmp eq i8 %v4_13dc6, 0
  %v1_13dc8 = icmp eq i1 %v5_13dc6, false
  br i1 %v1_13dc8, label %dec_label_pc_13dee, label %dec_label_pc_13dca

dec_label_pc_13dca:                               ; preds = %dec_label_pc_13d98
  br label %dec_label_pc_13dee

dec_label_pc_13dee:                               ; preds = %dec_label_pc_13dca, %dec_label_pc_13d98
  %v2_13dee = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @eax, align 8
  %v2_13dff = call i32 @function_27ec6(i32 %arg1)
  store i32 %v2_13dff, i32* @eax, align 8
  %v2_13e07 = call i32 @function_27f22(i32 %v2_13dff)
  %v2_13e0e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_13e0e, i32* @eax, align 8
  %v4_13e18 = call i32 @function_2808c(i32 %v2_13e0e, i32 %v2_13e07)
  %v0_13e1d = load i32, i32* @esp, align 4
  %v10_13e1d = icmp eq i32 %v0_13e1d, 4
  store i1 %v10_13e1d, i1* @zf, align 1
  %v1_13e23 = add i32 %arg1, 8
  store i32 %v2_13e0e, i32* @eax, align 8
  %v3_13e30 = call i32 @function_2a090(i32 %v1_13e23, i32 %v2_13e0e)
  %v4_13e35 = trunc i32 %v3_13e30 to i8
  %v5_13e35 = icmp eq i8 %v4_13e35, 0
  store i32 %arg1, i32* @eax, align 8
  br i1 %v5_13e35, label %dec_label_pc_13e68, label %dec_label_pc_13e39

dec_label_pc_13e39:                               ; preds = %dec_label_pc_13dee
  %v1_13e3f = call i32 @function_27ec6(i32 %arg1)
  store i32 %v1_13e3f, i32* @eax, align 8
  %v1_13e47 = call i32 @function_27f22(i32 %v1_13e3f)
  %v2_13e4e = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13e4e, i32* @eax, align 8
  %v3_13e58 = call i32 @function_28042(i32 %v2_13e4e, i32 %v1_13e47)
  store i32 %v3_13e58, i32* %eax.global-to-local, align 8
  %v16_13e5d = ptrtoint i32* %stack_var_-68 to i32
  br label %dec_label_pc_13e71

dec_label_pc_13e68:                               ; preds = %dec_label_pc_13dee
  %v2_13e6b = inttoptr i32 %v1_13e23 to i32*
  %v1_13e78.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_13e71

dec_label_pc_13e71:                               ; preds = %dec_label_pc_13e68, %dec_label_pc_13e39
  %v1_13e78 = phi i32 [ %v16_13e5d, %dec_label_pc_13e39 ], [ %v1_13e78.pre, %dec_label_pc_13e68 ]
  %storemerge3.in = phi i32* [ %stack_var_-44, %dec_label_pc_13e39 ], [ %v2_13e6b, %dec_label_pc_13e68 ]
  %storemerge3 = load i32, i32* %storemerge3.in, align 4
  store i32 %storemerge3, i32* %stack_var_-24, align 4
  %v4_13e71 = zext i8 %arg2 to i32
  store i32 %v4_13e71, i32* %eax.global-to-local, align 8
  %v2_13e78 = add i32 %v1_13e78, 12
  %v3_13e78 = inttoptr i32 %v2_13e78 to i32*
  store i32 %arg3, i32* %v3_13e78, align 4
  store i32 %v2_13dee, i32* @edx, align 8
  %v1_13e7f = load i32, i32* @esp, align 4
  %v2_13e7f = add i32 %v1_13e7f, 8
  %v3_13e7f = inttoptr i32 %v2_13e7f to i32*
  store i32 %v2_13dee, i32* %v3_13e7f, align 4
  %v0_13e83 = load i32, i32* %eax.global-to-local, align 8
  %v1_13e83 = load i32, i32* @esp, align 4
  %v2_13e83 = add i32 %v1_13e83, 4
  %v3_13e83 = inttoptr i32 %v2_13e83 to i32*
  store i32 %v0_13e83, i32* %v3_13e83, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_13e8a = load i32, i32* @esp, align 4
  %v2_13e8a = inttoptr i32 %v1_13e8a to i32*
  store i32 %arg1, i32* %v2_13e8a, align 4
  %v0_13e8d = call i32 @function_2a0d0()
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13e9e

bb:                                               ; preds = %dec_label_pc_13e71
  %v1_13e9c = call i32 @function_13ea3()
  store i32 %v1_13e9c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_13e9e

dec_label_pc_13e9e:                               ; preds = %bb, %dec_label_pc_13e71
  %v2_13e9c = phi i32 [ %v1_13e9c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_13e71 ]
  ret i32 %v2_13e9c

; uselistorder directives
  uselistorder i32 (i32)* @function_27f22, { 1, 0 }
  uselistorder i32 (i32)* @function_27ec6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 4, 6, 5, 8, 7 }
}

define i32 @function_13ea3() local_unnamed_addr {
dec_label_pc_13ea3:
  %v0_13ea4 = load i32, i32* @eax, align 8
  ret i32 %v0_13ea4
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1ERKSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ea6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_13ec6 = inttoptr i32 %arg2 to i32*
  %v2_13ec6 = load i32, i32* %v1_13ec6, align 4
  store i32 %v2_13ec6, i32* %arg1, align 4
  %v1_13ed0 = add i32 %arg2, 4
  store i32 %v1_13ed0, i32* @edx, align 8
  %v1_13ed6 = add i32 %tmp103, 4
  %v5_13ed6 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_13ed6, i1* @cf, align 1
  store i32 %v1_13ed6, i32* @eax, align 8
  %v2_13ee0 = call i32 @function_160c6(i32 %v1_13ed6, i32 %v1_13ed0)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEaSERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ef8:
  %stack_var_-24 = alloca i32, align 4
  %v2_13f1d = ptrtoint i32* %stack_var_-24 to i32
  %v2_13f35 = call i32 @function_2a420(i32 %v2_13f1d, i32 %arg1)
  store i32 %v2_13f1d, i32* @eax, align 8
  %v1_13f40 = call i32 @function_2606e(i32 %v2_13f1d)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_13f6d

bb:                                               ; preds = %dec_label_pc_13ef8
  %v1_13f52 = call i32 @function_13f72()
  br label %dec_label_pc_13f6d

dec_label_pc_13f6d:                               ; preds = %dec_label_pc_13ef8, %bb
  %v0_13f54 = phi i32 [ %arg1, %dec_label_pc_13ef8 ], [ %v1_13f52, %bb ]
  ret i32 %v0_13f54

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13f6d, { 1, 0 }
}

define i32 @function_13f56() local_unnamed_addr {
dec_label_pc_13f56:
  %eax.global-to-local = alloca i32, align 4
  %v0_13f56 = load i32, i32* %eax.global-to-local, align 8
  %v0_13f58 = load i32, i32* @ebp, align 4
  %v1_13f58 = add i32 %v0_13f58, -20
  store i32 %v1_13f58, i32* @eax, align 8
  %v1_13f5e = call i32 @function_2606e(i32 %v1_13f58)
  store i32 %v0_13f56, i32* %eax.global-to-local, align 8
  ret i32 %v0_13f56

; uselistorder directives
  uselistorder i32 %v0_13f56, { 1, 0 }
  uselistorder i32 (i32)* @function_2606e, { 1, 0 }
}

define i32 @function_13f72() local_unnamed_addr {
dec_label_pc_13f72:
  %v0_13f77 = load i32, i32* @eax, align 8
  ret i32 %v0_13f77
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invokerC1ERS4_() local_unnamed_addr {
dec_label_pc_13f78:
  %eax.global-to-local = alloca i32, align 4
  %v2_13f79 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_13f79
}

define i32 @function_13f7d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13f7d:
  %ebp.global-to-local = alloca i32, align 4
  %v0_13f7d = load i32, i32* @ebx, align 8
  %v1_13f7d = add i32 %v0_13f7d, 1166608453
  %v2_13f7d = inttoptr i32 %v1_13f7d to i8*
  %v3_13f7d = load i8, i8* %v2_13f7d, align 1
  %v4_13f7d = load i32, i32* @ecx, align 4
  %v5_13f7d = trunc i32 %v4_13f7d to i8
  %v6_13f7d = sub i8 %v3_13f7d, %v5_13f7d
  store i8 %v6_13f7d, i8* %v2_13f7d, align 1
  %v0_13f85 = load i32, i32* @ebp, align 4
  %v1_13f88 = add i32 %v0_13f85, 2
  store i32 %v1_13f88, i32* %ebp.global-to-local, align 4
  %v2_13f90 = add i32 %v0_13f85, -10
  %v3_13f90 = inttoptr i32 %v2_13f90 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_13f90, align 4
  %v0_13f95 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13f95 = add i32 %v0_13f95, -28
  %v2_13f95 = inttoptr i32 %v1_13f95 to i32*
  %v3_13f95 = load i32, i32* %v2_13f95, align 4
  %v1_13f98 = add i32 %v0_13f95, -32
  %v2_13f98 = inttoptr i32 %v1_13f98 to i32*
  %v3_13f98 = load i32, i32* %v2_13f98, align 4
  %v2_13f9b = inttoptr i32 %v3_13f95 to i32*
  store i32 %v3_13f98, i32* %v2_13f9b, align 4
  %v0_13f9d = load i32, i32* %ebp.global-to-local, align 4
  %v1_13f9d = add i32 %v0_13f9d, -12
  %v2_13f9d = inttoptr i32 %v1_13f9d to i32*
  %v3_13f9d = load i32, i32* %v2_13f9d, align 4
  %v3_13fa0 = xor i32 %v3_13f9d, ptrtoint ([3 x i8]* @3 to i32)
  %v1_13fae = inttoptr i32 %v0_13f9d to i32*
  %v2_13fae = load i32, i32* %v1_13fae, align 4
  store i32 %v2_13fae, i32* %ebp.global-to-local, align 4
  ret i32 %v3_13fa0
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEEC1ERKSK_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13fb0:
  store i32 %arg1, i32* @eax, align 8
  %v1_13fd4 = call i32 @function_2a532(i32 %arg1)
  %v1_13fdc = add i32 %arg1, 8
  store i32 %v1_13fdc, i32* @eax, align 8
  %v1_13fe2 = call i32 @function_2a568(i32 %v1_13fdc)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_14012(i32 %arg1) local_unnamed_addr {
dec_label_pc_14012:
  %v0_14012 = load i32, i32* @eax, align 8
  %v3_14012 = xor i32 %v0_14012, ptrtoint ([3 x i8]* @3 to i32)
  %v4_14012 = icmp eq i32 %v3_14012, 0
  store i32 %v3_14012, i32* @eax, align 8
  br i1 %v4_14012, label %bb, label %dec_label_pc_14034

bb:                                               ; preds = %dec_label_pc_14012
  %v1_14019 = call i32 @function_14039()
  br label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_14012, %bb
  %v0_1401b = phi i32 [ %v3_14012, %dec_label_pc_14012 ], [ %v1_14019, %bb ]
  ret i32 %v0_1401b

; uselistorder directives
  uselistorder label %dec_label_pc_14034, { 1, 0 }
}

define i32 @function_1401d() local_unnamed_addr {
dec_label_pc_1401d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1401d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1401d, i32* %ebx.global-to-local, align 8
  %v0_1401f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1401f = add i32 %v0_1401f, -28
  %v2_1401f = inttoptr i32 %v1_1401f to i32*
  %v3_1401f = load i32, i32* %v2_1401f, align 4
  store i32 %v3_1401f, i32* @eax, align 8
  %v1_14025 = call i32 @function_24ce8(i32 %v3_1401f)
  %v0_1402a = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_1402a, i32* %eax.global-to-local, align 8
  ret i32 %v0_1402a
}

define i32 @function_14039() local_unnamed_addr {
dec_label_pc_14039:
  %v0_1403e = load i32, i32* @eax, align 8
  ret i32 %v0_1403e
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_typeD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14040:
  store i32 %arg1, i32* @eax, align 8
  %v1_1405d = call i32 @function_2a6be(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED1Ev(i8 %arg1) local_unnamed_addr {
dec_label_pc_14076:
  %v4_1408e = sext i8 %arg1 to i32
  %v5_14099 = icmp eq i8 %arg1, 0
  %v1_1409b = icmp eq i1 %v5_14099, false
  br i1 %v1_1409b, label %bb, label %dec_label_pc_1409d

bb:                                               ; preds = %dec_label_pc_14076
  %v4_1409b = call i32 @function_140c1(i32 %v4_1408e)
  br label %dec_label_pc_1409d

dec_label_pc_1409d:                               ; preds = %bb, %dec_label_pc_14076
  %v3_140b5 = phi i32 [ %v4_1409b, %bb ], [ %v4_1408e, %dec_label_pc_14076 ]
  ret i32 %v3_140b5

; uselistorder directives
  uselistorder i32 %v4_1408e, { 1, 0 }
}

define i32 @function_140c1(i32 %arg1) local_unnamed_addr {
dec_label_pc_140c1:
  %v0_140c1 = load i32, i32* @ebp, align 4
  %v1_140c1 = add i32 %v0_140c1, -28
  %v2_140c1 = inttoptr i32 %v1_140c1 to i32*
  %v3_140c1 = load i32, i32* %v2_140c1, align 4
  %v1_140c4 = add i32 %v3_140c1, 124
  %v2_140c4 = inttoptr i32 %v1_140c4 to i32*
  %v3_140c4 = load i32, i32* %v2_140c4, align 4
  %v1_140c7 = icmp eq i32 %v3_140c4, 0
  store i1 %v1_140c7, i1* @zf, align 1
  br i1 %v1_140c7, label %dec_label_pc_140dd, label %dec_label_pc_140cb

dec_label_pc_140cb:                               ; preds = %dec_label_pc_140c1
  %v1_140cb = add i32 %v0_140c1, -13
  %v3_140d2 = load i32, i32* %v2_140c1, align 4
  %v2_140d8 = call i32 @function_2a7f2(i32 %v3_140d2, i32 %v1_140cb)
  %v0_140dd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_140dd

dec_label_pc_140dd:                               ; preds = %dec_label_pc_140cb, %dec_label_pc_140c1
  %v0_140dd = phi i32 [ %v0_140dd.pre, %dec_label_pc_140cb ], [ %v0_140c1, %dec_label_pc_140c1 ]
  %v1_140dd = add i32 %v0_140dd, -28
  %v2_140dd = inttoptr i32 %v1_140dd to i32*
  %v3_140dd = load i32, i32* %v2_140dd, align 4
  store i32 %v3_140dd, i32* @eax, align 8
  %v1_140e3 = call i32 @function_280b6(i32 %v3_140dd)
  %v0_140e8 = load i32, i32* @ebp, align 4
  %v1_140e8 = add i32 %v0_140e8, -28
  %v2_140e8 = inttoptr i32 %v1_140e8 to i32*
  %v3_140e8 = load i32, i32* %v2_140e8, align 4
  store i32 %v3_140e8, i32* @eax, align 8
  %v1_140ee = call i32 @function_27700(i32 %v3_140e8)
  %v0_140f3 = load i32, i32* @ebp, align 4
  %v1_140f3 = add i32 %v0_140f3, -12
  %v2_140f3 = inttoptr i32 %v1_140f3 to i32*
  %v3_140f3 = load i32, i32* %v2_140f3, align 4
  %v3_140f6 = xor i32 %v3_140f3, ptrtoint ([3 x i8]* @3 to i32)
  %v4_140f6 = icmp eq i32 %v3_140f6, 0
  store i32 %v3_140f6, i32* @eax, align 8
  br i1 %v4_140f6, label %bb, label %dec_label_pc_140ff

bb:                                               ; preds = %dec_label_pc_140dd
  %v1_140fd = call i32 @function_14128()
  store i32 %v1_140fd, i32* @eax, align 8
  br label %dec_label_pc_140ff

dec_label_pc_140ff:                               ; preds = %bb, %dec_label_pc_140dd
  %v0_140ff = call i32 @function_14123()
  ret i32 %v0_140ff
}

define i32 @function_14102() local_unnamed_addr {
dec_label_pc_14102:
  %eax.global-to-local = alloca i32, align 4
  %v0_14102 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14102
}

define i32 @function_14123() local_unnamed_addr {
dec_label_pc_14123:
  %v0_14123 = load i32, i32* @eax, align 8
  ret i32 %v0_14123
}

define i32 @function_14128() local_unnamed_addr {
dec_label_pc_14128:
  %v0_1412d = load i32, i32* @eax, align 8
  ret i32 %v0_1412d
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1412e:
  %v2_14148 = load i32, i32* %arg1, align 4
  %v1_1414a = icmp eq i32 %v2_14148, 0
  %v1_1414c = icmp eq i1 %v1_1414a, false
  br i1 %v1_1414c, label %bb, label %dec_label_pc_1414e

bb:                                               ; preds = %dec_label_pc_1412e
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1414c = call i32 @function_14172(i32 %tmp105)
  br label %dec_label_pc_1414e

dec_label_pc_1414e:                               ; preds = %bb, %dec_label_pc_1412e
  %v3_14166 = phi i32 [ %v3_1414c, %bb ], [ %v2_14148, %dec_label_pc_1412e ]
  ret i32 %v3_14166

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_14172(i32 %arg1) local_unnamed_addr {
dec_label_pc_14172:
  %v0_14172 = load i32, i32* @ebp, align 4
  %v1_14172 = add i32 %v0_14172, -28
  %v2_14172 = inttoptr i32 %v1_14172 to i32*
  %v3_14172 = load i32, i32* %v2_14172, align 4
  %v1_14175 = inttoptr i32 %v3_14172 to i32*
  %v2_14175 = load i32, i32* %v1_14175, align 4
  store i32 %v2_14175, i32* @eax, align 8
  %v1_14177 = add i32 %v0_14172, -12
  %v2_14177 = inttoptr i32 %v1_14177 to i32*
  %v3_14177 = load i32, i32* %v2_14177, align 4
  %v4_1417a = icmp eq i32 %v3_14177, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1417a, label %bb, label %dec_label_pc_14183

bb:                                               ; preds = %dec_label_pc_14172
  %v1_14181 = call i32 @function_14188()
  br label %dec_label_pc_14183

dec_label_pc_14183:                               ; preds = %bb, %dec_label_pc_14172
  %v2_14181 = phi i32 [ %v1_14181, %bb ], [ %v2_14175, %dec_label_pc_14172 ]
  ret i32 %v2_14181
}

define i32 @function_14188() local_unnamed_addr {
dec_label_pc_14188:
  %v0_14189 = load i32, i32* @eax, align 8
  ret i32 %v0_14189
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1418a:
  store i32 %arg1, i32* @eax, align 8
  %v1_141a7 = call i32 @function_2a982(i32 %arg1)
  store i32 %v1_141a7, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_141b8

bb:                                               ; preds = %dec_label_pc_1418a
  %v1_141b6 = call i32 @function_141bd()
  br label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %bb, %dec_label_pc_1418a
  %v2_141b6 = phi i32 [ %v1_141b6, %bb ], [ %v1_141a7, %dec_label_pc_1418a ]
  ret i32 %v2_141b6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_141bd() local_unnamed_addr {
dec_label_pc_141bd:
  %v0_141be = load i32, i32* @eax, align 8
  ret i32 %v0_141be
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE18invocation_janitorC1ERKNS1_24slot_call_iterator_cacheISsNSI_12slot_invokerEEERKSI_PKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_141c0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v0_141c0 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_141f7 = add i32 %tmp105, 4
  %v3_141f7 = inttoptr i32 %v2_141f7 to i32*
  store i32 %arg3, i32* %v3_141f7, align 4
  %v2_14200 = add i32 %tmp105, 8
  %v3_14200 = inttoptr i32 %v2_14200 to i32*
  store i32 %arg4, i32* %v3_14200, align 4
  store i32 %v0_141c0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE18invocation_janitorD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14216:
  %ebp.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_14216 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_14216, i32* %stack_var_-4, align 4
  %v4_14216 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_14216, i32* @ebp, align 4
  %v2_14230 = load i32, i32* %arg1, align 4
  %v1_14232 = add i32 %v2_14230, 148
  %v2_14232 = inttoptr i32 %v1_14232 to i32*
  %v3_14232 = load i32, i32* %v2_14232, align 4
  %v1_1423d = add i32 %v2_14230, 144
  %v2_1423d = inttoptr i32 %v1_1423d to i32*
  %v3_1423d = load i32, i32* %v2_1423d, align 4
  %tmp105 = icmp ugt i32 %v3_14232, %v3_1423d
  br i1 %tmp105, label %dec_label_pc_14247, label %dec_label_pc_1425f

dec_label_pc_14247:                               ; preds = %dec_label_pc_14216
  %v1_1424a = add i32 %tmp102, 8
  %v2_1424a = inttoptr i32 %v1_1424a to i32*
  %v3_1424a = load i32, i32* %v2_1424a, align 4
  %v1_14250 = add i32 %tmp102, 4
  %v2_14250 = inttoptr i32 %v1_14250 to i32*
  %v3_14250 = load i32, i32* %v2_14250, align 4
  store i32 %v3_14250, i32* @eax, align 8
  %v2_1425a = call i32 @function_2aa6a(i32 %v3_14250, i32 %v3_1424a)
  %v2_14270.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1425f

dec_label_pc_1425f:                               ; preds = %dec_label_pc_14216, %dec_label_pc_14247
  %v2_14270 = phi i32 [ %v2_14270.pre, %dec_label_pc_14247 ], [ %v0_14216, %dec_label_pc_14216 ]
  store i32 %v2_14270, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder label %dec_label_pc_1425f, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state8combinerEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14272:
  %v1_1428c = add i32 %arg1, 8
  %v1_14292 = call x86_fp80 @function_2ac12(i32 %v1_1428c)
  %v2_14292 = fptrunc x86_fp80 %v1_14292 to float
  %v3_14292 = bitcast float %v2_14292 to i32
  ret i32 %v3_14292
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142aa:
  store i32 %arg2, i32* @edx, align 8
  store i32 %arg1, i32* @eax, align 8
  %v2_142d4 = call i32 @function_2aca6(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142f4:
  store i32 %arg1, i32* @eax, align 8
  %v2_1431e = call i32 @function_2ad3a(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1433e:
  ret i32 0
}

define i32 @function_14356(i32 %arg1) local_unnamed_addr {
dec_label_pc_14356:
  %v0_14358 = load i32, i32* @eax, align 8
  %v3_14358 = xor i32 %v0_14358, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_14358
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_EC1ESX_SX_RNS1_24slot_call_iterator_cacheISsSK_EE(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14368:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %tmp106, i32* @eax, align 8
  %v1_14397 = call i32 @function_286a6(i32 %tmp106)
  store i32 %arg2, i32* %arg1, align 4
  %v2_143aa = add i32 %tmp106, 4
  %v3_143aa = inttoptr i32 %v2_143aa to i32*
  store i32 %arg3, i32* %v3_143aa, align 4
  %v2_143b3 = add i32 %tmp106, 8
  %v3_143b3 = inttoptr i32 %v2_143b3 to i32*
  store i32 %arg4, i32* %v3_143b3, align 4
  %v2_143bc = add i32 %tmp106, 12
  %v3_143bc = inttoptr i32 %v2_143bc to i32*
  store i32 %arg3, i32* %v3_143bc, align 4
  store i32 %tmp106, i32* @eax, align 8
  %v1_143c5 = call i32 @function_2adf6(i32 %tmp106)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp106, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_143dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_143dc:
  %v0_143dc = load i32, i32* @eax, align 8
  ret i32 %v0_143dc
}

define i32 @_ZNK5boost8signals26detail16combiner_invokerINS_8optionalISsEEEclINS0_19optional_last_valueISsEENS1_20slot_call_iterator_tINS1_12signal1_implISsPKcS8_iSt4lessIiENS_8functionIFSsSC_EEENSF_IFSsRKNS0_10connectionESC_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS3_IiEEENS0_5slot1ISsSC_SH_EESN_EEEEESZ_EEEES4_RT_T0_S15_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_143de:
  %v10_14476 = call i32 @function_2b028(i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1448d

bb:                                               ; preds = %dec_label_pc_143de
  %v1_1448b = call i32 @function_14492()
  br label %dec_label_pc_1448d

dec_label_pc_1448d:                               ; preds = %bb, %dec_label_pc_143de
  %v2_1448b = phi i32 [ %v1_1448b, %bb ], [ %arg1, %dec_label_pc_143de ]
  ret i32 %v2_1448b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_14492() local_unnamed_addr {
dec_label_pc_14492:
  %v0_14493 = load i32, i32* @eax, align 8
  ret i32 %v0_14493
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE7destroyEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_14496:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_14496 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_14496, i32* %stack_var_-4, align 4
  %v4_14496 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_14496, i32* %ebp.global-to-local, align 4
  %v4_144ad = ptrtoint i8* %arg1 to i32
  %v2_144b0 = load i8, i8* %arg1, align 1
  %v5_144b3 = icmp eq i8 %v2_144b0, 0
  br i1 %v5_144b3, label %dec_label_pc_144c6, label %dec_label_pc_144b7

dec_label_pc_144b7:                               ; preds = %dec_label_pc_14496
  %v0_144b7 = load i32, i32* %edx.global-to-local, align 8
  store i32 %v4_144ad, i32* @eax, align 8
  %sext = mul i32 %v0_144b7, 16777216
  %v3_144c1 = sdiv i32 %sext, 16777216
  %v4_144c1 = call i32 @function_2b1c6(i32 %v4_144ad, i32 %v3_144c1)
  %v2_144d7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_144c6

dec_label_pc_144c6:                               ; preds = %dec_label_pc_144b7, %dec_label_pc_14496
  %v2_144d7 = phi i32 [ %v2_144d7.pre, %dec_label_pc_144b7 ], [ %v0_14496, %dec_label_pc_14496 ]
  store i32 %v2_144d7, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v4_144ad, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_144da:
  %v2_144f4 = load i8, i8* %arg1, align 1
  %v3_144f4 = zext i8 %v2_144f4 to i32
  store i32 %v3_144f4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14503

bb:                                               ; preds = %dec_label_pc_144da
  %v4_144f1 = ptrtoint i8* %arg1 to i32
  %v3_14501 = call i32 @function_14508(i32 %v4_144f1)
  br label %dec_label_pc_14503

dec_label_pc_14503:                               ; preds = %bb, %dec_label_pc_144da
  %v4_14501 = phi i32 [ %v3_14501, %bb ], [ %v3_144f4, %dec_label_pc_144da ]
  ret i32 %v4_14501
}

define i32 @function_14508(i32 %arg1) local_unnamed_addr {
dec_label_pc_14508:
  %v0_14509 = load i32, i32* @eax, align 8
  ret i32 %v0_14509
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE9constructERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1450a:
  %v1_1452d = add i32 %arg1, 4
  store i32 %v1_1452d, i32* @eax, align 8
  %v1_14533 = call i32 @function_2b284(i32 %v1_1452d)
  store i32 %v1_14533, i32* @eax, align 8
  %v2_14545 = call i32 @function_14e70(i32 4, i32 %v1_14533)
  %v1_1454c = icmp eq i32 %v2_14545, 0
  br i1 %v1_1454c, label %bb, label %dec_label_pc_14550

bb:                                               ; preds = %dec_label_pc_1450a
  %v1_1454e = call i32 @function_1455f()
  br label %dec_label_pc_14550

dec_label_pc_14550:                               ; preds = %bb, %dec_label_pc_1450a
  ret i32 %arg2
}

define i32 @function_1455f() local_unnamed_addr {
dec_label_pc_1455f:
  %v0_1455f = load i32, i32* @ebp, align 4
  %v1_1455f = add i32 %v0_1455f, -44
  %v2_1455f = inttoptr i32 %v1_1455f to i32*
  %v3_1455f = load i32, i32* %v2_1455f, align 4
  %v1_14562 = inttoptr i32 %v3_1455f to i8*
  store i8 1, i8* %v1_14562, align 1
  %v0_14565 = load i32, i32* @ebp, align 4
  %v1_14565 = add i32 %v0_14565, -28
  %v2_14565 = inttoptr i32 %v1_14565 to i32*
  %v3_14565 = load i32, i32* %v2_14565, align 4
  ret i32 %v3_14565
}

define i32 @function_1456c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1456c:
  %cf.global-to-local = alloca i1, align 1
  %v2_1456c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1456c = load i32, i32* @eax, align 8
  %v4_1456c = trunc i32 %v3_1456c to i8
  %v5_1456c = add i8 %v4_1456c, %v2_1456c
  %v10_1456c = icmp ult i8 %v5_1456c, %v2_1456c
  store i1 %v10_1456c, i1* %cf.global-to-local, align 1
  %v21_1456c = inttoptr i32 %v3_1456c to i8*
  store i8 %v5_1456c, i8* %v21_1456c, align 1
  %v0_1456e = load i32, i32* @edi, align 8
  %v1_1456e = load i32, i32* @ebx, align 8
  %v3_1456e = add i32 %v0_1456e, -21
  %v4_1456e = add i32 %v3_1456e, %v1_1456e
  %v5_1456e = inttoptr i32 %v4_1456e to i8*
  %v6_1456e = load i8, i8* %v5_1456e, align 1
  %v7_1456e = load i32, i32* @edx, align 8
  %v8_1456e = udiv i32 %v7_1456e, 256
  %v9_1456e = trunc i32 %v8_1456e to i8
  %v10_1456e = add i8 %v9_1456e, %v6_1456e
  %v15_1456e = icmp ult i8 %v10_1456e, %v6_1456e
  store i1 %v15_1456e, i1* %cf.global-to-local, align 1
  store i8 %v10_1456e, i8* %v5_1456e, align 1
  %v0_14572 = load i32, i32* @ecx, align 4
  %v1_14572 = add i32 %v0_14572, 611617223
  %v2_14572 = inttoptr i32 %v1_14572 to i8*
  %v3_14572 = load i8, i8* %v2_14572, align 1
  %v5_14572 = trunc i32 %v0_14572 to i8
  %v6_14572 = load i1, i1* %cf.global-to-local, align 1
  %v7_14572 = zext i1 %v6_14572 to i8
  %v8_14572 = sub i8 %v3_14572, %v5_14572
  %v9_14572 = add i8 %v8_14572, %v7_14572
  store i8 %v9_14572, i8* %v2_14572, align 1
  %v0_14578 = load i32, i32* @eax, align 8
  %v1_14578 = trunc i32 %v0_14578 to i8
  %v2_14578 = add i8 %v1_14578, ptrtoint (i8* @global_var_89.1944 to i8)
  %v6_14578 = icmp ult i8 %v2_14578, %v1_14578
  %v17_1457a = icmp ult i8 %v2_14578, 36
  %v18_1457a = or i1 %v17_1457a, %v6_14578
  store i1 %v18_1457a, i1* %cf.global-to-local, align 1
  %v0_1457c = call i32 @function_14ea3()
  %v0_14581 = load i32, i32* @edi, align 8
  %v0_14590 = load i32, i32* @esp, align 4
  %v5_14590 = icmp ugt i32 %v0_14590, -61
  store i1 %v5_14590, i1* %cf.global-to-local, align 1
  ret i32 %v0_14581

; uselistorder directives
  uselistorder i8 %v6_1456e, { 1, 0 }
  uselistorder i8 %v2_1456c, { 1, 0 }
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14598:
  %v1_145b6 = call i32 @function_2b340(i32 %arg1)
  %v0_145bb = load i32, i32* @ebx, align 8
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_145bb, 16777216
  %v3_145c9 = sdiv i32 %sext, 16777216
  %v4_145c9 = call i32 @function_2b37e(i32 %arg1, i32 %v1_145b6, i32 %v3_145c9)
  ret i32 %v4_145c9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1EPKSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145e6:
  %ebp.global-to-local = alloca i32, align 4
  %v0_145e6 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  store i32 %v0_145e6, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1461e:
  %v1_14638 = add i32 %arg1, 8
  %v2_14638 = inttoptr i32 %v1_14638 to i32*
  %v3_14638 = load i32, i32* %v2_14638, align 4
  store i32 %v3_14638, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14647

bb:                                               ; preds = %dec_label_pc_1461e
  %v2_14645 = call i32 @function_1464c(i32 %arg1)
  br label %dec_label_pc_14647

dec_label_pc_14647:                               ; preds = %bb, %dec_label_pc_1461e
  %v3_14645 = phi i32 [ %v2_14645, %bb ], [ %v3_14638, %dec_label_pc_1461e ]
  ret i32 %v3_14645
}

define i32 @function_1464c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1464c:
  %v0_1464d = load i32, i32* @eax, align 8
  ret i32 %v0_1464d
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1464e:
  %v1_14668 = add i32 %arg1, 4
  ret i32 %v1_14668
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1467e:
  %v1_146d2 = xor i32 %arg2, 1
  %v4_146d2 = trunc i32 %v1_146d2 to i8
  %v5_146d5 = icmp eq i8 %v4_146d2, 0
  %v10_146fd118127 = icmp eq i32 %arg3, 0
  %v1_14701119128 = icmp eq i1 %v10_146fd118127, false
  %v5_14704123130 = icmp eq i1 %v1_14701119128, false
  %v1_14706124131 = icmp eq i1 %v5_14704123130, false
  br i1 %v1_14706124131, label %dec_label_pc_146af.lr.ph, label %dec_label_pc_14708

dec_label_pc_146af.lr.ph:                         ; preds = %dec_label_pc_1467e, %dec_label_pc_146d9
  %stack_var_-44.0.ph133 = phi i32 [ %stack_var_-40.0.ph132, %dec_label_pc_146d9 ], [ %arg4, %dec_label_pc_1467e ]
  %stack_var_-40.0.ph132 = phi i32 [ %v3_146e5, %dec_label_pc_146d9 ], [ %arg3, %dec_label_pc_1467e ]
  br label %dec_label_pc_146af

dec_label_pc_146af:                               ; preds = %dec_label_pc_146af.lr.ph, %dec_label_pc_146ef
  %stack_var_-40.0125 = phi i32 [ %stack_var_-40.0.ph132, %dec_label_pc_146af.lr.ph ], [ %v3_146f5, %dec_label_pc_146ef ]
  store i32 %stack_var_-40.0125, i32* @eax, align 8
  %v1_146b5 = call i32 @function_2b4d6(i32 %stack_var_-40.0125)
  store i32 %arg5, i32* @ecx, align 4
  store i32 %stack_var_-40.0125, i32* @eax, align 8
  br i1 %v5_146d5, label %dec_label_pc_146ef, label %dec_label_pc_146d9

dec_label_pc_146d9:                               ; preds = %dec_label_pc_146af
  store i32 %stack_var_-40.0.ph132, i32* @eax, align 8
  %v3_146e5 = call i32 @function_2b51a(i32 %stack_var_-40.0.ph132, i32 %v1_146b5, i32 %arg5)
  %v10_146fd118 = icmp eq i32 %v3_146e5, 0
  %v1_14701119 = icmp eq i1 %v10_146fd118, false
  %v5_14704123 = icmp eq i1 %v1_14701119, false
  %v1_14706124 = icmp eq i1 %v5_14704123, false
  br i1 %v1_14706124, label %dec_label_pc_146af.lr.ph, label %dec_label_pc_14708

dec_label_pc_146ef:                               ; preds = %dec_label_pc_146af
  %v3_146f5 = call i32 @function_2b54a(i32 %stack_var_-40.0125, i32 %v1_146b5, i32 %arg5)
  %v10_146fd = icmp eq i32 %v3_146f5, 0
  %v1_14701 = icmp eq i1 %v10_146fd, false
  %v5_14704 = icmp eq i1 %v1_14701, false
  %v1_14706 = icmp eq i1 %v5_14704, false
  br i1 %v1_14706, label %dec_label_pc_146af, label %dec_label_pc_14708

dec_label_pc_14708:                               ; preds = %dec_label_pc_146ef, %dec_label_pc_1467e, %dec_label_pc_146d9
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_1467e ], [ %stack_var_-40.0.ph132, %dec_label_pc_146d9 ], [ %stack_var_-44.0.ph133, %dec_label_pc_146ef ]
  store i32 %arg1, i32* @eax, align 8
  %v2_14715 = call i32 @function_28c64(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_146e5, { 1, 0 }
  uselistorder i32 %v1_146b5, { 1, 0 }
  uselistorder i32 %stack_var_-40.0125, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-40.0.ph132, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg5, { 1, 0, 2 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14708, { 0, 2, 1 }
  uselistorder label %dec_label_pc_146af, { 1, 0 }
  uselistorder label %dec_label_pc_146af.lr.ph, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_14732:
  %stack_var_-17 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_1474f = call i32 @function_2b62e(i32 %arg1)
  %v2_14758 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_14758

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14776:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14779 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_147a0 = call i32 @function_2949e(i32 %arg2)
  store i32 %v1_147a0, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_147ad = call i32 @function_27260(i32 %arg2)
  store i32 %v0_14779, i32* %ebx.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_147f2:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1481e

bb:                                               ; preds = %dec_label_pc_147f2
  %v3_1481c = call i32 @function_14823(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1481e

dec_label_pc_1481e:                               ; preds = %bb, %dec_label_pc_147f2
  %v4_1481c = phi i32 [ %v3_1481c, %bb ], [ %arg1, %dec_label_pc_147f2 ]
  ret i32 %v4_1481c
}

define i32 @function_14823(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14823:
  %v0_14824 = load i32, i32* @eax, align 8
  ret i32 %v0_14824
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14828:
  %v1_14848 = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 8
  %v2_14855 = call i32 @function_2b83c(i32 %arg1, i32 %v1_14848)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEC1ERKSt17_Rb_tree_iteratorIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14872:
  %v1_14892 = inttoptr i32 %arg2 to i32*
  %v2_14892 = load i32, i32* %v1_14892, align 4
  store i32 %v2_14892, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_148a5

bb:                                               ; preds = %dec_label_pc_14872
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_148a3 = call i32 @function_148aa(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_148a5

dec_label_pc_148a5:                               ; preds = %bb, %dec_label_pc_14872
  %v4_148a3 = phi i32 [ %v3_148a3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_14872 ]
  ret i32 %v4_148a3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_148aa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148aa:
  %v0_148ab = load i32, i32* @eax, align 8
  ret i32 %v0_148ab
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_148ac:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-19 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %tmp134 = ptrtoint i32* %arg1 to i32
  %v0_148af = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg3, i32* @ebx, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_148df = call i32 @function_295d4(i32 %arg2)
  %v0_148e4 = load i32, i32* @ebx, align 8
  %v12_148e4 = icmp eq i32 %v0_148e4, %v1_148df
  %v5_148e9 = icmp eq i1 %v12_148e4, false
  br i1 %v5_148e9, label %dec_label_pc_149b5, label %dec_label_pc_148f1

dec_label_pc_148f1:                               ; preds = %dec_label_pc_148ac
  %v1_148fc = icmp eq i32 %arg2, 0
  br i1 %v1_148fc, label %dec_label_pc_14949, label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %dec_label_pc_148f1
  %v2_14907 = ptrtoint i32* %stack_var_-21 to i32
  store i32 %v2_14907, i32* @eax, align 8
  %v2_1490d = call i32 @function_2b7d8(i32 %v2_14907, i32 %arg4)
  store i32 %v2_1490d, i32* @ebx, align 8
  %v1_1491a = call i32 @function_29634(i32 %arg2)
  %v1_1491f = inttoptr i32 %v1_1491a to i32*
  %v2_1491f = load i32, i32* %v1_1491f, align 4
  store i32 %v2_1491f, i32* @eax, align 8
  %v1_14924 = call i32 @function_28fde(i32 %v2_1491f)
  store i32 %arg2, i32* @eax, align 8
  %v0_1492e = load i32, i32* @ebx, align 8
  %v3_14939 = call i32 @function_271d2(i32 %arg2, i32 %v1_14924, i32 %v0_1492e)
  %v4_1493e = trunc i32 %v3_14939 to i8
  %v5_1493e = icmp eq i8 %v4_1493e, 0
  br i1 %v5_1493e, label %dec_label_pc_14949, label %dec_label_pc_1494e

dec_label_pc_14949:                               ; preds = %dec_label_pc_14900, %dec_label_pc_148f1
  br label %dec_label_pc_1494e

dec_label_pc_1494e:                               ; preds = %dec_label_pc_14900, %dec_label_pc_14949
  %storemerge = phi i1 [ true, %dec_label_pc_14949 ], [ false, %dec_label_pc_14900 ]
  br i1 %storemerge, label %dec_label_pc_1498c, label %dec_label_pc_14952

dec_label_pc_14952:                               ; preds = %dec_label_pc_1494e
  %v1_14958 = call i32 @function_29634(i32 %arg2)
  %v1_1495d = inttoptr i32 %v1_14958 to i32*
  %v2_1495d = load i32, i32* %v1_1495d, align 4
  store i32 %tmp134, i32* @eax, align 8
  %v5_1497f = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 0, i32 %v2_1495d, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_1498c:                               ; preds = %dec_label_pc_1494e
  %v2_1498c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1498c, i32* @eax, align 8
  %v1_149a0 = call i32 @function_2b9fa(i32 %v2_1498c)
  %v3_149ab = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_149ab, i32* %arg1, align 4
  br label %dec_label_pc_14cac

dec_label_pc_149b5:                               ; preds = %dec_label_pc_148ac
  store i32 %arg3, i32* @eax, align 8
  %v1_149bb = call i32 @function_28fde(i32 %arg3)
  store i32 %v1_149bb, i32* @ebx, align 8
  %v2_149c9 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_149c9, i32* @eax, align 8
  %v2_149cf = call i32 @function_2b7d8(i32 %v2_149c9, i32 %arg4)
  store i32 %v2_149cf, i32* @eax, align 8
  %v0_149d7 = load i32, i32* @ebx, align 8
  %v3_149e2 = call i32 @function_271d2(i32 %arg2, i32 %v2_149cf, i32 %v0_149d7)
  %v4_149e7 = trunc i32 %v3_149e2 to i8
  %v5_149e7 = icmp eq i8 %v4_149e7, 0
  br i1 %v5_149e7, label %dec_label_pc_14b2f, label %dec_label_pc_149ef

dec_label_pc_149ef:                               ; preds = %dec_label_pc_149b5
  store i32 %arg3, i32* %stack_var_-28, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_149fe = call i32 @function_29604(i32 %arg2)
  %v1_14a03 = inttoptr i32 %v1_149fe to i32*
  %v2_14a03 = load i32, i32* %v1_14a03, align 4
  %v12_14a05 = icmp eq i32 %v2_14a03, %arg3
  store i1 false, i1* @cf, align 1
  %v5_14a0a = icmp eq i1 %v12_14a05, false
  br i1 %v5_14a0a, label %dec_label_pc_14a51, label %dec_label_pc_14a0e

dec_label_pc_14a0e:                               ; preds = %dec_label_pc_149ef
  store i32 %arg2, i32* @eax, align 8
  %v1_14a14 = call i32 @function_29604(i32 %arg2)
  %v1_14a19 = inttoptr i32 %v1_14a14 to i32*
  %v2_14a19 = load i32, i32* %v1_14a19, align 4
  store i32 %v2_14a19, i32* @ebx, align 8
  store i32 %arg2, i32* @eax, align 8
  %v1_14a21 = call i32 @function_29604(i32 %arg2)
  %v1_14a26 = inttoptr i32 %v1_14a21 to i32*
  %v2_14a26 = load i32, i32* %v1_14a26, align 4
  store i32 %tmp134, i32* @eax, align 8
  %v0_14a32 = load i32, i32* @ebx, align 8
  %v5_14a44 = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 %v2_14a26, i32 %v0_14a32, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14a51:                               ; preds = %dec_label_pc_149ef
  %v2_14a58 = ptrtoint i32* %stack_var_-19 to i32
  store i32 %v2_14a58, i32* @eax, align 8
  %v2_14a5e = call i32 @function_2b7d8(i32 %v2_14a58, i32 %arg4)
  store i32 %v2_14a5e, i32* @ebx, align 8
  %v2_14a65 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14a65, i32* @eax, align 8
  %v1_14a6b = call i32 @function_2bbfe(i32 %v2_14a65)
  %v1_14a70 = inttoptr i32 %v1_14a6b to i32*
  %v2_14a70 = load i32, i32* %v1_14a70, align 4
  store i32 %v2_14a70, i32* @eax, align 8
  %v1_14a75 = call i32 @function_28fde(i32 %v2_14a70)
  store i32 %arg2, i32* @eax, align 8
  %v0_14a7f = load i32, i32* @ebx, align 8
  %v3_14a8a = call i32 @function_271d2(i32 %arg2, i32 %v1_14a75, i32 %v0_14a7f)
  %v4_14a8f = trunc i32 %v3_14a8a to i8
  %v5_14a8f = icmp eq i8 %v4_14a8f, 0
  br i1 %v5_14a8f, label %dec_label_pc_14b06, label %dec_label_pc_14a93

dec_label_pc_14a93:                               ; preds = %dec_label_pc_14a51
  %v3_14a93 = load i32, i32* %stack_var_-28, align 4
  %v1_14a9e = icmp eq i32 %v3_14a93, 0
  %v5_14aa3 = icmp eq i1 %v1_14a9e, false
  br i1 %v5_14aa3, label %dec_label_pc_14ad7, label %dec_label_pc_14aa7

dec_label_pc_14aa7:                               ; preds = %dec_label_pc_14a93
  store i32 %tmp134, i32* @eax, align 8
  %v5_14aca = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 0, i32 %v3_14a93, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14ad7:                               ; preds = %dec_label_pc_14a93
  %v3_14ad7 = load i32, i32* %stack_var_-72, align 4
  store i32 %tmp134, i32* @eax, align 8
  store i32 %arg4, i32* @ebx, align 8
  %v5_14af9 = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 %v3_14ad7, i32 %v3_14ad7, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14b06:                               ; preds = %dec_label_pc_14a51
  %v2_14b06 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14b06, i32* @eax, align 8
  %v1_14b1a = call i32 @function_2b9fa(i32 %v2_14b06)
  %v3_14b25 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14b25, i32* %arg1, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14b2f:                               ; preds = %dec_label_pc_149b5
  %v2_14b36 = ptrtoint i32* %stack_var_-18 to i32
  store i32 %v2_14b36, i32* @eax, align 8
  %v2_14b3c = call i32 @function_2b7d8(i32 %v2_14b36, i32 %arg4)
  store i32 %v2_14b3c, i32* @ebx, align 8
  store i32 %arg3, i32* @eax, align 8
  %v1_14b49 = call i32 @function_28fde(i32 %arg3)
  store i32 %arg2, i32* @eax, align 8
  %v0_14b53 = load i32, i32* @ebx, align 8
  %v3_14b5e = call i32 @function_271d2(i32 %arg2, i32 %v1_14b49, i32 %v0_14b53)
  %v4_14b63 = trunc i32 %v3_14b5e to i8
  store i1 false, i1* @cf, align 1
  %v5_14b63 = icmp eq i8 %v4_14b63, 0
  br i1 %v5_14b63, label %dec_label_pc_14c97, label %dec_label_pc_14b6b

dec_label_pc_14b6b:                               ; preds = %dec_label_pc_14b2f
  store i32 %arg3, i32* %stack_var_-28, align 4
  store i32 %arg3, i32* @ebx, align 8
  %v1_14b7a = call i32 @function_29634(i32 %arg2)
  %v1_14b7f = inttoptr i32 %v1_14b7a to i32*
  %v2_14b7f = load i32, i32* %v1_14b7f, align 4
  %v0_14b81 = load i32, i32* @ebx, align 8
  %v12_14b81 = icmp eq i32 %v0_14b81, %v2_14b7f
  %v5_14b86 = icmp eq i1 %v12_14b81, false
  br i1 %v5_14b86, label %dec_label_pc_14bc4, label %dec_label_pc_14b8a

dec_label_pc_14b8a:                               ; preds = %dec_label_pc_14b6b
  %v1_14b90 = call i32 @function_29634(i32 %arg2)
  %v1_14b95 = inttoptr i32 %v1_14b90 to i32*
  %v2_14b95 = load i32, i32* %v1_14b95, align 4
  store i32 %tmp134, i32* @eax, align 8
  %v5_14bb7 = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 0, i32 %v2_14b95, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14b6b
  %v2_14bcf = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14bcf, i32* @eax, align 8
  %v1_14bd4 = call i32 @function_28fde(i32 %v2_14bcf)
  store i32 %v1_14bd4, i32* @ebx, align 8
  %v2_14be2 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_14be2, i32* @eax, align 8
  %v2_14be8 = call i32 @function_2b7d8(i32 %v2_14be2, i32 %arg4)
  store i32 %v2_14be8, i32* @eax, align 8
  %v0_14bf0 = load i32, i32* @ebx, align 8
  %v3_14bfb = call i32 @function_271d2(i32 %arg2, i32 %v2_14be8, i32 %v0_14bf0)
  %v4_14c00 = trunc i32 %v3_14bfb to i8
  %v5_14c00 = icmp eq i8 %v4_14c00, 0
  br i1 %v5_14c00, label %dec_label_pc_14c71, label %dec_label_pc_14c04

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14bc4
  %v3_14c04 = load i32, i32* %stack_var_-72, align 4
  %v1_14c0f = icmp eq i32 %v3_14c04, 0
  %v5_14c14 = icmp eq i1 %v1_14c0f, false
  br i1 %v5_14c14, label %dec_label_pc_14c45, label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14c04
  store i32 %tmp134, i32* @eax, align 8
  %v5_14c3b = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 0, i32 %v3_14c04, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14c45:                               ; preds = %dec_label_pc_14c04
  %v3_14c45 = load i32, i32* %stack_var_-28, align 4
  store i32 %tmp134, i32* @eax, align 8
  store i32 %arg4, i32* @ebx, align 8
  %v5_14c67 = call i32 @function_2b8f8(i32 %tmp134, i32 %arg2, i32 %v3_14c45, i32 %v3_14c45, i32 %arg4)
  br label %dec_label_pc_14cac

dec_label_pc_14c71:                               ; preds = %dec_label_pc_14bc4
  %v2_14c71 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14c71, i32* @eax, align 8
  %v1_14c85 = call i32 @function_2b9fa(i32 %v2_14c71)
  %v3_14c90 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_14c90, i32* %arg1, align 4
  br label %dec_label_pc_14cac

dec_label_pc_14c97:                               ; preds = %dec_label_pc_14b2f
  store i32 %tmp134, i32* @eax, align 8
  %v2_14c9a = ptrtoint i32* %stack_var_-72 to i32
  %v2_14ca4 = call i32 @function_2bc3e(i32 %tmp134, i32 %v2_14c9a)
  br label %dec_label_pc_14cac

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14c97, %dec_label_pc_14c71, %dec_label_pc_14c45, %dec_label_pc_14c18, %dec_label_pc_14b8a, %dec_label_pc_14b06, %dec_label_pc_14ad7, %dec_label_pc_14aa7, %dec_label_pc_14a0e, %dec_label_pc_1498c, %dec_label_pc_14952
  store i32 %v0_148af, i32* %ebx.global-to-local, align 8
  ret i32 %tmp134

; uselistorder directives
  uselistorder i32 %v3_14c45, { 1, 0 }
  uselistorder i32 %v3_14ad7, { 1, 0 }
  uselistorder i32 %tmp134, { 0, 16, 15, 1, 14, 13, 12, 11, 10, 2, 9, 8, 7, 3, 6, 5, 4 }
  uselistorder i32 (i32)* @function_29604, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_2b8f8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_271d2, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_28fde, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_29634, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_2b7d8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 9, 10, 8, 11, 7, 12, 4, 5, 3, 6, 2, 13, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %arg2, { 20, 19, 21, 17, 18, 22, 24, 23, 12, 11, 14, 13, 6, 8, 7, 10, 9, 16, 15, 25, 3, 4, 1, 0, 2, 5, 27, 26 }
  uselistorder label %dec_label_pc_1494e, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_14cc7:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14cc7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14ce1 = add i32 %arg1, 12
  %v2_14ce1 = inttoptr i32 %v1_14ce1 to i32*
  %v3_14ce1 = load i32, i32* %v2_14ce1, align 4
  store i32 %v0_14cc7, i32* %ebp.global-to-local, align 4
  ret i32 %v3_14ce1
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_14cf7:
  %v1_14d11 = add i32 %arg1, 8
  %v2_14d11 = inttoptr i32 %v1_14d11 to i32*
  %v3_14d11 = load i32, i32* %v2_14d11, align 4
  store i32 %v3_14d11, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14d20

bb:                                               ; preds = %dec_label_pc_14cf7
  %v2_14d1e = call i32 @function_14d25(i32 %arg1)
  br label %dec_label_pc_14d20

dec_label_pc_14d20:                               ; preds = %bb, %dec_label_pc_14cf7
  %v3_14d1e = phi i32 [ %v2_14d1e, %bb ], [ %v3_14d11, %dec_label_pc_14cf7 ]
  ret i32 %v3_14d1e
}

define i32 @function_14d25(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d25:
  %v0_14d26 = load i32, i32* @eax, align 8
  ret i32 %v0_14d26
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d28:
  %v1_14d42 = add i32 %arg1, 4
  ret i32 %v1_14d42
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d58:
  %v1_14d72 = add i32 %arg1, 12
  ret i32 %v1_14d72
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d88:
  %v1_14da2 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_14da2
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14db8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_14dd2 = load i32, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14df0

bb:                                               ; preds = %dec_label_pc_14db8
  %v2_14dee = call i32 @function_14df5(i32 %v2_14dd2)
  br label %dec_label_pc_14df0

dec_label_pc_14df0:                               ; preds = %bb, %dec_label_pc_14db8
  %v3_14dee = phi i32 [ %v2_14dee, %bb ], [ %tmp100, %dec_label_pc_14db8 ]
  ret i32 %v3_14dee
}

define i32 @function_14df5(i32 %arg1) local_unnamed_addr {
dec_label_pc_14df5:
  %v0_14df6 = load i32, i32* @eax, align 8
  ret i32 %v0_14df6
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14df8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14df8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14e12 = add i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_14e12 = inttoptr i32 %v1_14e12 to i32*
  %v3_14e12 = load i32, i32* %v2_14e12, align 4
  store i32 %v0_14df8, i32* %ebp.global-to-local, align 4
  ret i32 %v3_14e12
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e28:
  store i32 %arg1, i32* @eax, align 8
  %v1_14e45 = call i32 @function_2c34a(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost9function3IbRKSsS2_jEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e5e:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_14e70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e70:
  %v0_14e70 = load i32, i32* @eax, align 8
  %v1_14e70 = load i32, i32* @ebp, align 4
  %v2_14e70 = add i32 %v1_14e70, -12
  %v3_14e70 = inttoptr i32 %v2_14e70 to i32*
  store i32 %v0_14e70, i32* %v3_14e70, align 4
  %v0_14e75 = load i32, i32* @ebp, align 4
  %v1_14e75 = add i32 %v0_14e75, -28
  %v2_14e75 = inttoptr i32 %v1_14e75 to i32*
  %v3_14e75 = load i32, i32* %v2_14e75, align 4
  %v1_14e80 = add i32 %v0_14e75, -12
  %v2_14e80 = inttoptr i32 %v1_14e80 to i32*
  %v3_14e80 = load i32, i32* %v2_14e80, align 4
  %v3_14e83 = xor i32 %v3_14e80, ptrtoint ([3 x i8]* @3 to i32)
  %v4_14e83 = icmp eq i32 %v3_14e83, 0
  store i32 %v3_14e83, i32* @eax, align 8
  br i1 %v4_14e83, label %bb, label %dec_label_pc_14e8c

bb:                                               ; preds = %dec_label_pc_14e70
  %v2_14e8a = call i32 @function_14e91(i32 %v3_14e75)
  br label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %bb, %dec_label_pc_14e70
  %v3_14e8a = phi i32 [ %v2_14e8a, %bb ], [ %v3_14e83, %dec_label_pc_14e70 ]
  ret i32 %v3_14e8a
}

define i32 @function_14e91(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e91:
  %v0_14e92 = load i32, i32* @eax, align 8
  ret i32 %v0_14e92
}

define i32 @_ZN5boost8signals26detail8tag_typeIFbRKSsS4_jEEENS1_12get_slot_tagIT_E4typeERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e93:
  ret i32 %arg2
}

define i32 @function_14ea3() local_unnamed_addr {
dec_label_pc_14ea3:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14ea3 = load i32, i32* @ebp, align 4
  %v1_14ea3 = add i32 %v0_14ea3, 1
  store i32 %v1_14ea3, i32* %ebp.global-to-local, align 4
  %v2_14eab = add i32 %v0_14ea3, -11
  %v3_14eab = inttoptr i32 %v2_14eab to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_14eab, align 4
  %v0_14eb0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14eb0 = add i32 %v0_14eb0, -28
  %v2_14eb0 = inttoptr i32 %v1_14eb0 to i32*
  %v3_14eb0 = load i32, i32* %v2_14eb0, align 4
  %v1_14ec4 = inttoptr i32 %v0_14eb0 to i32*
  %v2_14ec4 = load i32, i32* %v1_14ec4, align 4
  store i32 %v2_14ec4, i32* %ebp.global-to-local, align 4
  ret i32 %v3_14eb0
}

define i32 @_ZN5boost8signals26detail18get_invocable_slotIFbRKSsS4_jEEERKT_S8_NS1_9value_tagE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_14ec8:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14ef5

bb:                                               ; preds = %dec_label_pc_14ec8
  %v3_14ef3 = sext i8 %arg2 to i32
  %v4_14ef3 = call i32 @function_14efa(i32 %v3_14ef3, i32 %arg1)
  br label %dec_label_pc_14ef5

dec_label_pc_14ef5:                               ; preds = %bb, %dec_label_pc_14ec8
  %v5_14ef3 = phi i32 [ %v4_14ef3, %bb ], [ %arg1, %dec_label_pc_14ec8 ]
  ret i32 %v5_14ef3
}

define i32 @function_14efa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14efa:
  %v0_14efb = load i32, i32* @eax, align 8
  ret i32 %v0_14efb
}

define i32 @_ZN5boost8functionIFbRKSsS2_jEEaSIPS3_EENS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIT_EE5valueEEE5valueERS4_E4typeESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14efc:
  ret i32 %arg1
}

define i32 @function_14f0a() local_unnamed_addr {
dec_label_pc_14f0a:
  %eax.global-to-local = alloca i32, align 4
  %v15_14f0a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_14f0a
}

define i32 @function_14f63() local_unnamed_addr {
dec_label_pc_14f63:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f63 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_14f63
}

define i32 @function_14f79() local_unnamed_addr {
dec_label_pc_14f79:
  %v0_14f79 = load i32, i32* @eax, align 8
  ret i32 %v0_14f79
}

define i32 @function_14f7e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f7e:
  %v0_14f83 = load i32, i32* @eax, align 8
  ret i32 %v0_14f83
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFbRKSsS5_jEEEvRT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f84:
  store i32 %arg1, i32* @eax, align 8
  %v3_14fb6 = call i32 @function_2c5eb(i32 %arg1, i32 %arg2, i32 0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14fc7

bb:                                               ; preds = %dec_label_pc_14f84
  %v1_14fc5 = call i32 @function_14fcc()
  br label %dec_label_pc_14fc7

dec_label_pc_14fc7:                               ; preds = %bb, %dec_label_pc_14f84
  %v2_14fc5 = phi i32 [ %v1_14fc5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_14f84 ]
  ret i32 %v2_14fc5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14fcc() local_unnamed_addr {
dec_label_pc_14fcc:
  %v0_14fcd = load i32, i32* @eax, align 8
  ret i32 %v0_14fcd
}

define i32 @_ZNSaIN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fce:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_14ffc

bb:                                               ; preds = %dec_label_pc_14fce
  %v2_14ffa = call i32 @function_15001(i32 %arg1)
  br label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %bb, %dec_label_pc_14fce
  %v3_14ffa = phi i32 [ %v2_14ffa, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_14fce ]
  ret i32 %v3_14ffa
}

define i32 @function_15001(i32 %arg1) local_unnamed_addr {
dec_label_pc_15001:
  %v0_15002 = load i32, i32* @eax, align 8
  ret i32 %v0_15002
}

define i32 @_ZSt8_DestroyIPN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15003:
  %v2_1502d = call i32 @function_2c6dd(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost9function3IbRKSsS2_jE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15046:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15046 = load i32, i32* %ebp.global-to-local, align 4
  %v2_15060 = load i32, i32* %arg1, align 4
  %v1_15062 = and i32 %v2_15060, -2
  store i32 %v0_15046, i32* %ebp.global-to-local, align 4
  ret i32 %v1_15062
}

define i32 @_ZN5boost6detail8function13basic_vtable3IbRKSsS4_jE5clearERNS1_15function_bufferE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15078:
  %v2_15098 = load i32, i32* %arg1, align 4
  %v1_1509a = icmp eq i32 %v2_15098, 0
  br i1 %v1_1509a, label %dec_label_pc_150ba, label %dec_label_pc_1509e

dec_label_pc_1509e:                               ; preds = %dec_label_pc_15078
  br label %dec_label_pc_150ba

dec_label_pc_150ba:                               ; preds = %dec_label_pc_1509e, %dec_label_pc_15078
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_150c6

bb:                                               ; preds = %dec_label_pc_150ba
  %v1_150c4 = call i32 @function_150cb()
  br label %dec_label_pc_150c6

dec_label_pc_150c6:                               ; preds = %bb, %dec_label_pc_150ba
  %v2_150c4 = phi i32 [ %v1_150c4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_150ba ]
  ret i32 %v2_150c4
}

define i32 @function_150cb() local_unnamed_addr {
dec_label_pc_150cb:
  %v0_150cc = load i32, i32* @eax, align 8
  ret i32 %v0_150cc
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_150ce:
  %v1_150e8 = add i32 %arg1, 4
  store i32 %v1_150e8, i32* @eax, align 8
  %v1_150ee = call i32 @function_172ae(i32 %v1_150e8)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_150ff

bb:                                               ; preds = %dec_label_pc_150ce
  %v1_150fd = call i32 @function_15104()
  br label %dec_label_pc_150ff

dec_label_pc_150ff:                               ; preds = %bb, %dec_label_pc_150ce
  %v2_150fd = phi i32 [ %v1_150fd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_150ce ]
  ret i32 %v2_150fd
}

define i32 @function_15104() local_unnamed_addr {
dec_label_pc_15104:
  %v0_15105 = load i32, i32* @eax, align 8
  ret i32 %v0_15105
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEC1ERKSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15106:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15106 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15126 = inttoptr i32 %arg2 to i32*
  %v2_15126 = load i32, i32* %v1_15126, align 4
  store i32 %v2_15126, i32* %arg1, align 4
  store i32 %v0_15106, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15158:
  %v1_15172 = add i32 %arg1, 4
  %v1_15178 = call i32 @function_2c95a(i32 %v1_15172)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE14nolock_connectERKNS0_5slot3IbS4_S4_jSB_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15190:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_151ba = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_151ba, i32* @eax, align 8
  store i32 %arg2, i32* @edx, align 8
  %v7_151ce = call i32 @function_2c8c0(i32 %v2_151ba, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v2_151d6 = ptrtoint i32* %stack_var_-28 to i32
  %v1_151dc = call i32 @function_2c950(i32 %v2_151d6)
  %v10_151e1 = icmp eq i32 %arg4, 0
  %v1_151e5 = icmp eq i1 %v10_151e1, false
  br i1 %v1_151e5, label %bb, label %dec_label_pc_151e7

bb:                                               ; preds = %dec_label_pc_15190
  %v2_151e5 = call i32 @function_15219()
  br label %dec_label_pc_151e7

dec_label_pc_151e7:                               ; preds = %bb, %dec_label_pc_15190
  %v3_151e5 = phi i32 [ %v2_151e5, %bb ], [ %v1_151dc, %dec_label_pc_15190 ]
  ret i32 %v3_151e5

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_151ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_151ec:
  %v2_151ec = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_151ec = load i32, i32* @eax, align 8
  %v4_151ec = trunc i32 %v3_151ec to i8
  %v5_151ec = add i8 %v4_151ec, %v2_151ec
  %v21_151ec = inttoptr i32 %v3_151ec to i8*
  store i8 %v5_151ec, i8* %v21_151ec, align 1
  %v0_151ee = load i32, i32* @ebp, align 4
  %v1_151ee = add i32 %v0_151ee, -64
  %v2_151ee = inttoptr i32 %v1_151ee to i32*
  %v3_151ee = load i32, i32* %v2_151ee, align 4
  store i32 %v3_151ee, i32* @eax, align 8
  %v1_151f4 = trunc i32 %v3_151ee to i16
  %v2_151f4 = call i32 @function_2c9c8(i16 %v1_151f4)
  store i32 %v2_151f4, i32* @eax, align 8
  %v1_151fc = call i32 @function_2ca24(i32 %v2_151f4)
  store i32 %v1_151fc, i32* @eax, align 8
  %v0_15201 = load i32, i32* @ebp, align 4
  %v1_15201 = add i32 %v0_15201, -44
  %v1_15208 = add i32 %v0_15201, -24
  %v3_15212 = call i32 @function_2ca5a(i32 %v1_151fc, i32 %v1_15208, i32 %v1_15201)
  %v0_15217 = call i32 @function_15249()
  ret i32 %v0_15217
}

define i32 @function_15219() local_unnamed_addr {
dec_label_pc_15219:
  %v0_15219 = load i32, i32* @ebp, align 4
  %v1_15219 = add i32 %v0_15219, -24
  %v2_15219 = inttoptr i32 %v1_15219 to i32*
  store i32 0, i32* %v2_15219, align 4
  %v0_15220 = load i32, i32* @ebp, align 4
  %v1_15220 = add i32 %v0_15220, -64
  %v2_15220 = inttoptr i32 %v1_15220 to i32*
  %v3_15220 = load i32, i32* %v2_15220, align 4
  store i32 %v3_15220, i32* @eax, align 8
  %v1_15226 = trunc i32 %v3_15220 to i16
  %v2_15226 = call i32 @function_2c9c8(i16 %v1_15226)
  store i32 %v2_15226, i32* @eax, align 8
  %v1_1522e = call i32 @function_2ca24(i32 %v2_15226)
  store i32 %v1_1522e, i32* @eax, align 8
  %v0_15233 = load i32, i32* @ebp, align 4
  %v1_15233 = add i32 %v0_15233, -44
  %v1_1523a = add i32 %v0_15233, -24
  %v3_15244 = call i32 @function_2cb0a(i32 %v1_1522e, i32 %v1_1523a, i32 %v1_15233)
  ret i32 %v3_15244

; uselistorder directives
  uselistorder i32 (i32)* @function_2ca24, { 1, 0 }
}

define i32 @function_15249() local_unnamed_addr {
dec_label_pc_15249:
  %v0_15249 = load i32, i32* @ebp, align 4
  %v1_15249 = add i32 %v0_15249, -44
  store i32 %v1_15249, i32* @eax, align 8
  %v1_1524f = call i32 @function_2cbba(i32 %v1_15249)
  store i32 %v1_1524f, i32* @eax, align 8
  %v0_15254 = load i32, i32* @ebp, align 4
  %v1_15254 = add i32 %v0_15254, -24
  %v2_1525e = call i32 @function_2cc6c(i32 %v1_1524f, i32 %v1_15254)
  %v0_15263 = load i32, i32* @ebx, align 8
  %v0_15267 = load i32, i32* @ebp, align 4
  %v1_15267 = add i32 %v0_15267, -44
  %v1_1526e = add i32 %v0_15267, -36
  store i32 %v1_1526e, i32* @eax, align 8
  %sext = mul i32 %v0_15263, 16777216
  %v3_15274 = sdiv i32 %sext, 16777216
  %v4_15274 = call i32 @function_2ccb2(i32 %v1_1526e, i32 %v1_15267, i32 %v3_15274)
  %v0_15279 = load i32, i32* @ebp, align 4
  %v1_15279 = add i32 %v0_15279, -36
  store i32 %v1_15279, i32* @eax, align 8
  %v2_15291 = call i32 @function_2409a(i32 %v1_15279, i32 %v1_15279)
  %v0_15296 = load i32, i32* @ebp, align 4
  %v1_15296 = add i32 %v0_15296, -24
  store i32 %v1_15296, i32* @eax, align 8
  %v1_1529c = call i32 @function_2a2e8(i32 %v1_15296)
  %v0_152a1 = load i32, i32* @ebp, align 4
  %v1_152a1 = add i32 %v0_152a1, -44
  store i32 %v1_152a1, i32* @eax, align 8
  %v1_152a7 = call i32 @function_2a25e(i32 %v1_152a1)
  %v0_152ac = load i32, i32* @ebp, align 4
  %v1_152ac = add i32 %v0_152ac, -60
  %v2_152ac = inttoptr i32 %v1_152ac to i32*
  %v3_152ac = load i32, i32* %v2_152ac, align 4
  ret i32 %v3_152ac

; uselistorder directives
  uselistorder i32 %v1_15279, { 2, 1, 0 }
}

define i32 @_ZNSt14unary_functionIxbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_152f0:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost9function1IbxEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1531a:
  %v1_15337 = call i32 @function_23486(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail8tag_typeIFbxEEENS1_12get_slot_tagIT_E4typeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1535a:
  ret i32 %arg1
}

define i32 @_ZN5boost8signals26detail18get_invocable_slotIFbxEEERKT_S6_NS1_9value_tagE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_1538f:
  ret i32 %arg1
}

define i32 @_ZN5boost8functionIFbxEEaSIPS1_EENS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIT_EE5valueEEE5valueERS2_E4typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_153c4:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 8
  %v2_153f4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_153f4, i32* @eax, align 8
  %v3_153fa = call i32 @function_2cf40(i32 %v2_153f4, i32 %arg2, i32 0)
  %v0_153ff = load i32, i32* @ebx, align 8
  store i32 %v2_153f4, i32* @eax, align 8
  %v2_15409 = call i32 @function_2cf90(i32 %v2_153f4, i32 %v0_153ff)
  store i32 %v2_153f4, i32* @eax, align 8
  %v1_15414 = call i32 @function_25170(i32 %v2_153f4)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15428

bb:                                               ; preds = %dec_label_pc_153c4
  %v1_15426 = call i32 @function_15446()
  store i32 %v1_15426, i32* @eax, align 8
  br label %dec_label_pc_15428

dec_label_pc_15428:                               ; preds = %bb, %dec_label_pc_153c4
  %v0_15428 = call i32 @function_15441()
  ret i32 %v0_15428

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1542b() local_unnamed_addr {
dec_label_pc_1542b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1542b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1542b
}

define i32 @function_15441() local_unnamed_addr {
dec_label_pc_15441:
  %v0_15441 = load i32, i32* @eax, align 8
  ret i32 %v0_15441
}

define i32 @function_15446() local_unnamed_addr {
dec_label_pc_15446:
  %v0_1544b = load i32, i32* @eax, align 8
  ret i32 %v0_1544b
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFbxEEEvRT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1544c:
  store i1 true, i1* @zf, align 1
  %v3_1547e = call i32 @function_2d0bb(i32 %arg1, i32 %arg2, i32 0)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost9function1IbxE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15496:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15496 = load i32, i32* %ebp.global-to-local, align 4
  %v2_154b0 = load i32, i32* %arg1, align 4
  %v1_154b2 = and i32 %v2_154b0, -2
  store i32 %v0_15496, i32* %ebp.global-to-local, align 4
  ret i32 %v1_154b2
}

define i32 @_ZN5boost6detail8function13basic_vtable1IbxE5clearERNS1_15function_bufferE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_154c8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_154c8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_154e8 = load i32, i32* %arg1, align 4
  %v1_154ea = icmp eq i32 %v2_154e8, 0
  br i1 %v1_154ea, label %dec_label_pc_1550a, label %dec_label_pc_154ee

dec_label_pc_154ee:                               ; preds = %dec_label_pc_154c8
  br label %dec_label_pc_1550a

dec_label_pc_1550a:                               ; preds = %dec_label_pc_154ee, %dec_label_pc_154c8
  store i32 %v0_154c8, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1551e:
  %v1_15538 = add i32 %arg1, 4
  store i32 %v1_15538, i32* @eax, align 8
  %v1_1553e = call i32 @function_176fe(i32 %v1_15538)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEC1ERKSG_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15556:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_15576 = inttoptr i32 %arg2 to i32*
  %v2_15576 = load i32, i32* %v1_15576, align 4
  store i32 %v2_15576, i32* %arg1, align 4
  %v1_15580 = add i32 %arg2, 4
  %v1_15586 = add i32 %tmp103, 4
  %v5_15586 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_15586, i1* @cf, align 1
  store i32 %v1_15586, i32* @eax, align 8
  %v2_15590 = call i32 @function_17776(i32 %v1_15586, i32 %v1_15580)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE14nolock_connectERKNS0_5slot1IbxS9_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_155a8:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_155d2 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_155d2, i32* @eax, align 8
  %v7_155e6 = call i32 @function_2d260(i32 %v2_155d2, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v2_155ee = ptrtoint i32* %stack_var_-28 to i32
  %v1_155f4 = call i32 @function_2cd68(i32 %v2_155ee)
  %v10_155f9 = icmp eq i32 %arg4, 0
  %v1_155fd = icmp eq i1 %v10_155f9, false
  br i1 %v1_155fd, label %dec_label_pc_15631, label %dec_label_pc_155ff

dec_label_pc_155ff:                               ; preds = %dec_label_pc_155a8
  store i32 2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1560c = call i32 @function_2d2f0(i32 %arg2)
  store i32 %v1_1560c, i32* @eax, align 8
  %v1_15614 = call i32 @function_2d34c(i32 %v1_1560c)
  store i32 %v1_15614, i32* @eax, align 8
  store i32 %v2_155ee, i32* @edx, align 8
  %v3_1562a = call i32 @function_2d382(i32 %v1_15614, i32 %v2_155ee, i32 %v2_155d2)
  br label %dec_label_pc_15661

dec_label_pc_15631:                               ; preds = %dec_label_pc_155a8
  store i32 0, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_1563e = call i32 @function_2d2f0(i32 %arg2)
  store i32 %v1_1563e, i32* @eax, align 8
  %v1_15646 = call i32 @function_2d34c(i32 %v1_1563e)
  %v3_1565c = call i32 @function_2d432(i32 %v1_15646, i32 %v2_155ee, i32 %v2_155d2)
  br label %dec_label_pc_15661

dec_label_pc_15661:                               ; preds = %dec_label_pc_15631, %dec_label_pc_155ff
  %v1_15667 = call i32 @function_2d4e2(i32 %v2_155d2)
  store i32 %v1_15667, i32* @eax, align 8
  %v2_15676 = call i32 @function_2d53e(i32 %v1_15667, i32 %v2_155ee)
  %v0_1567b = load i32, i32* @ebx, align 8
  %v2_15686 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_15686, i32* @eax, align 8
  %v3_1568c = call i32 @function_2d584(i32 %v2_15686, i32 %v2_155d2, i32 %v0_1567b)
  %v2_1569e = call i32 @function_2453c(i32 %arg1, i32 %v2_15686)
  %v1_156bf = call i32 @function_2aac6(i32 %v2_155d2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_155ee, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v2_155d2, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @function_2d34c, { 1, 0 }
  uselistorder i32 (i32)* @function_2d2f0, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4, 5 }
}

define i32 @_ZNSt14unary_functionIRKSsvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15708:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1572b

bb:                                               ; preds = %dec_label_pc_15708
  %v2_15729 = call i32 @function_15730(i32 %arg1)
  br label %dec_label_pc_1572b

dec_label_pc_1572b:                               ; preds = %bb, %dec_label_pc_15708
  %v3_15729 = phi i32 [ %v2_15729, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15708 ]
  ret i32 %v3_15729
}

define i32 @function_15730(i32 %arg1) local_unnamed_addr {
dec_label_pc_15730:
  %v0_15731 = load i32, i32* @eax, align 8
  ret i32 %v0_15731
}

define i32 @_ZN5boost9function1IvRKSsEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15732:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost8signals26detail8tag_typeIFvRKSsEEENS1_12get_slot_tagIT_E4typeERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15772:
  ret i32 %arg1
}

define i32 @_ZN5boost8signals26detail18get_invocable_slotIFvRKSsEEERKT_S8_NS1_9value_tagE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_157a7:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_157d4

bb:                                               ; preds = %dec_label_pc_157a7
  %v3_157d2 = sext i8 %arg2 to i32
  %v4_157d2 = call i32 @function_157d9(i32 %v3_157d2, i32 %arg1)
  br label %dec_label_pc_157d4

dec_label_pc_157d4:                               ; preds = %bb, %dec_label_pc_157a7
  %v5_157d2 = phi i32 [ %v4_157d2, %bb ], [ %arg1, %dec_label_pc_157a7 ]
  ret i32 %v5_157d2
}

define i32 @function_157d9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_157d9:
  %v0_157da = load i32, i32* @eax, align 8
  ret i32 %v0_157da
}

define i32 @_ZN5boost8functionIFvRKSsEEaSIPS3_EENS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIT_EE5valueEEE5valueERS4_E4typeESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_157dc:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_157df = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg1, i32* @ebx, align 8
  %v2_1580c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1580c, i32* @eax, align 8
  %v3_15812 = call i32 @function_2d812(i32 %v2_1580c, i32 %arg2, i32 0)
  %v0_15817 = load i32, i32* @ebx, align 8
  %v2_15821 = call i32 @function_2d862(i32 %v2_1580c, i32 %v0_15817)
  store i32 %v2_1580c, i32* @eax, align 8
  %v1_1582c = call i32 @function_25620(i32 %v2_1580c)
  store i32 %v0_157df, i32* %ebx.global-to-local, align 8
  ret i32 %arg1
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFvRKSsEEEvRT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15864:
  store i32 %arg1, i32* @eax, align 8
  %v3_15896 = call i32 @function_2d98d(i32 %arg1, i32 %arg2, i32 0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_158a7

bb:                                               ; preds = %dec_label_pc_15864
  %v1_158a5 = call i32 @function_158ac()
  br label %dec_label_pc_158a7

dec_label_pc_158a7:                               ; preds = %bb, %dec_label_pc_15864
  %v2_158a5 = phi i32 [ %v1_158a5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15864 ]
  ret i32 %v2_158a5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_158ac() local_unnamed_addr {
dec_label_pc_158ac:
  %v0_158ad = load i32, i32* @eax, align 8
  ret i32 %v0_158ad
}

define i32 @_ZNK5boost9function1IvRKSsE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_158ae:
  %ebp.global-to-local = alloca i32, align 4
  %v0_158ae = load i32, i32* %ebp.global-to-local, align 4
  %v2_158c8 = load i32, i32* %arg1, align 4
  %v1_158ca = and i32 %v2_158c8, -2
  store i32 %v0_158ae, i32* %ebp.global-to-local, align 4
  ret i32 %v1_158ca
}

define i32 @_ZN5boost6detail8function13basic_vtable1IvRKSsE5clearERNS1_15function_bufferE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_158e0:
  %v2_15900 = load i32, i32* %arg1, align 4
  %v1_15902 = icmp eq i32 %v2_15900, 0
  br i1 %v1_15902, label %dec_label_pc_15922, label %dec_label_pc_15906

dec_label_pc_15906:                               ; preds = %dec_label_pc_158e0
  br label %dec_label_pc_15922

dec_label_pc_15922:                               ; preds = %dec_label_pc_15906, %dec_label_pc_158e0
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1592e

bb:                                               ; preds = %dec_label_pc_15922
  %v1_1592c = call i32 @function_15933()
  br label %dec_label_pc_1592e

dec_label_pc_1592e:                               ; preds = %bb, %dec_label_pc_15922
  %v2_1592c = phi i32 [ %v1_1592c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15922 ]
  ret i32 %v2_1592c
}

define i32 @function_15933() local_unnamed_addr {
dec_label_pc_15933:
  %v0_15934 = load i32, i32* @eax, align 8
  ret i32 %v0_15934
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15936:
  %v1_15950 = add i32 %arg1, 4
  store i32 %v1_15950, i32* @eax, align 8
  %v1_15956 = call i32 @function_17b16(i32 %v1_15950)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15967

bb:                                               ; preds = %dec_label_pc_15936
  %v1_15965 = call i32 @function_1596c()
  br label %dec_label_pc_15967

dec_label_pc_15967:                               ; preds = %bb, %dec_label_pc_15936
  %v2_15965 = phi i32 [ %v1_15965, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15936 ]
  ret i32 %v2_15965
}

define i32 @function_1596c() local_unnamed_addr {
dec_label_pc_1596c:
  %v0_1596d = load i32, i32* @eax, align 8
  ret i32 %v0_1596d
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEC1ERKSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1596e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_1598e = inttoptr i32 %arg2 to i32*
  %v2_1598e = load i32, i32* %v1_1598e, align 4
  store i32 %v2_1598e, i32* %arg1, align 4
  %v1_15998 = add i32 %arg2, 4
  %v1_1599e = add i32 %tmp103, 4
  %v2_159a8 = call i32 @function_17b8e(i32 %v1_1599e, i32 %v1_15998)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE14nolock_connectERKNS0_5slot1IvS4_SB_EENS0_16connect_positionE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_159c0:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_159ea = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_159ea, i32* @eax, align 8
  %v7_159fe = call i32 @function_2db32(i32 %v2_159ea, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  %v2_15a06 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15a06, i32* @eax, align 8
  %v1_15a0c = call i32 @function_2d180(i32 %v2_15a06)
  %v10_15a11 = icmp eq i32 %arg4, 0
  %v1_15a15 = icmp eq i1 %v10_15a11, false
  br i1 %v1_15a15, label %dec_label_pc_15a49, label %dec_label_pc_15a17

dec_label_pc_15a17:                               ; preds = %dec_label_pc_159c0
  store i32 2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_15a24 = call i32 @function_2dbc2(i32 %arg2)
  store i32 %v1_15a24, i32* @eax, align 8
  %v1_15a2c = call i32 @function_2dc1e(i32 %v1_15a24)
  store i32 %v1_15a2c, i32* @eax, align 8
  %v3_15a42 = call i32 @function_2dc54(i32 %v1_15a2c, i32 %v2_15a06, i32 %v2_159ea)
  br label %dec_label_pc_15a79

dec_label_pc_15a49:                               ; preds = %dec_label_pc_159c0
  store i32 0, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @eax, align 8
  %v1_15a56 = call i32 @function_2dbc2(i32 %arg2)
  store i32 %v1_15a56, i32* @eax, align 8
  %v1_15a5e = call i32 @function_2dc1e(i32 %v1_15a56)
  store i32 %v2_15a06, i32* @edx, align 8
  %v3_15a74 = call i32 @function_2dd04(i32 %v1_15a5e, i32 %v2_15a06, i32 %v2_159ea)
  br label %dec_label_pc_15a79

dec_label_pc_15a79:                               ; preds = %dec_label_pc_15a49, %dec_label_pc_15a17
  store i32 %v2_159ea, i32* @eax, align 8
  %v1_15a7f = call i32 @function_2ddb4(i32 %v2_159ea)
  store i32 %v2_15a06, i32* @edx, align 8
  %v2_15a8e = call i32 @function_2de10(i32 %v1_15a7f, i32 %v2_15a06)
  %v0_15a93 = load i32, i32* @ebx, align 8
  %v2_15a9e = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_15a9e, i32* @eax, align 8
  %v3_15aa4 = call i32 @function_2de56(i32 %v2_15a9e, i32 %v2_159ea, i32 %v0_15a93)
  store i32 %v2_15a06, i32* @eax, align 8
  %v1_15acc = call i32 @function_2ab18(i32 %v2_15a06)
  %v1_15ad7 = call i32 @function_2b2f6(i32 %v2_159ea)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15aeb

bb:                                               ; preds = %dec_label_pc_15a79
  %v1_15ae9 = call i32 @function_15b18()
  store i32 %v1_15ae9, i32* @eax, align 8
  br label %dec_label_pc_15aeb

dec_label_pc_15aeb:                               ; preds = %bb, %dec_label_pc_15a79
  %v0_15aeb = call i32 @function_15b13()
  ret i32 %v0_15aeb

; uselistorder directives
  uselistorder i32 %v2_15a06, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 %v2_159ea, { 2, 3, 4, 5, 1, 0, 6, 7 }
  uselistorder i32 (i32)* @function_2dc1e, { 1, 0 }
  uselistorder i32 (i32)* @function_2dbc2, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4, 5 }
}

define i32 @function_15aed() local_unnamed_addr {
dec_label_pc_15aed:
  %eax.global-to-local = alloca i32, align 4
  %v0_15aed = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_15aed, i32* @ebx, align 8
  %v0_15aef = load i32, i32* @ebp, align 4
  %v1_15aef = add i32 %v0_15aef, -24
  store i32 %v1_15aef, i32* @eax, align 8
  %v1_15af5 = call i32 @function_2ab18(i32 %v1_15aef)
  store i32 %v1_15af5, i32* %eax.global-to-local, align 8
  %v0_15afa = call i32 @function_15afe()
  store i32 %v0_15afa, i32* %eax.global-to-local, align 8
  ret i32 %v0_15afa

; uselistorder directives
  uselistorder i32 (i32)* @function_2ab18, { 1, 0 }
}

define i32 @function_15afc() local_unnamed_addr {
dec_label_pc_15afc:
  %eax.global-to-local = alloca i32, align 4
  %v0_15afc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15afc
}

define i32 @function_15afe() local_unnamed_addr {
dec_label_pc_15afe:
  %v0_15afe = load i32, i32* @ebp, align 4
  %v1_15afe = add i32 %v0_15afe, -44
  %v1_15b04 = call i32 @function_2b2f6(i32 %v1_15afe)
  %v0_15b09 = load i32, i32* @ebx, align 8
  ret i32 %v0_15b09

; uselistorder directives
  uselistorder i32 (i32)* @function_2b2f6, { 1, 0 }
}

define i32 @function_15b13() local_unnamed_addr {
dec_label_pc_15b13:
  %v0_15b13 = load i32, i32* @eax, align 8
  ret i32 %v0_15b13
}

define i32 @function_15b18() local_unnamed_addr {
dec_label_pc_15b18:
  %v0_15b1c = load i32, i32* @eax, align 8
  ret i32 %v0_15b1c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b20:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_15b43 = call i32 @function_17a14(i32 %tmp102)
  store i32 ptrtoint (%vtable_33a1c_type* @global_var_33a1c.1965 to i32), i32* %arg1, align 4
  %v2_15b57 = add i32 %tmp102, 12
  %v3_15b57 = inttoptr i32 %v2_15b57 to i32*
  store i32 %arg2, i32* %v3_15b57, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b6d:
  %v10_15b84 = icmp eq i32* %arg1, null
  br i1 %v10_15b84, label %dec_label_pc_15b9c, label %dec_label_pc_15b8a

dec_label_pc_15b8a:                               ; preds = %dec_label_pc_15b6d
  br label %dec_label_pc_15b9c

dec_label_pc_15b9c:                               ; preds = %dec_label_pc_15b8a, %dec_label_pc_15b6d
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15ba8

bb:                                               ; preds = %dec_label_pc_15b9c
  %v1_15ba6 = call i32 @function_15bad()
  br label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %bb, %dec_label_pc_15b9c
  %v2_15ba6 = phi i32 [ %v1_15ba6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15b9c ]
  ret i32 %v2_15ba6
}

define i32 @function_15bad() local_unnamed_addr {
dec_label_pc_15bad:
  %v0_15bae = load i32, i32* @eax, align 8
  ret i32 %v0_15bae
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15bb0:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 8
  %v2_15bda = call i32 @function_2765e(i32 %tmp103, i32 %arg2)
  %v1_15be2 = add i32 %tmp103, 8
  store i32 %v1_15be2, i32* @eax, align 8
  %v1_15be8 = call i32 @function_166b0(i32 %v1_15be2)
  store i32 ptrtoint (%vtable_33b44_type* @global_var_33b44.1942 to i32), i32* %arg1, align 4
  %v2_15bf9 = inttoptr i32 %v1_15be2 to i32*
  store i32 ptrtoint (i32* @global_var_33b58.1943 to i32), i32* %v2_15bf9, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33b44_type* @global_var_33b44.1942 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c14:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v2_15c3f = call i32 @function_2770e(i32 %tmp102, i32 %arg2)
  %v1_15c47 = add i32 %tmp102, 28
  store i32 %v1_15c47, i32* @eax, align 8
  %v1_15c4d = call i32 @function_273cc(i32 %v1_15c47)
  store i32 ptrtoint (%vtable_33ae4_type* @global_var_33ae4.1945 to i32), i32* %arg1, align 4
  %v1_15c5e = add i32 %tmp102, 8
  %v2_15c5e = inttoptr i32 %v1_15c5e to i32*
  store i32 ptrtoint (i32* @global_var_33b00.1946 to i32), i32* %v2_15c5e, align 4
  %v2_15c68 = inttoptr i32 %v1_15c47 to i32*
  store i32 ptrtoint (i32* @global_var_33b10.1947 to i32), i32* %v2_15c68, align 4
  %v1_15c72 = add i32 %arg2, 8
  store i32 %v1_15c5e, i32* @eax, align 8
  %v2_15c82 = call i32 @function_178c6(i32 %v1_15c5e, i32 %v1_15c72)
  %v0_15c87 = call i32 @function_15cae()
  ret i32 %v0_15c87

; uselistorder directives
  uselistorder i32 %v1_15c5e, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33ae4_type* @global_var_33ae4.1945 to i32), { 2, 1, 0 }
}

define i32 @function_15c8a() local_unnamed_addr {
dec_label_pc_15c8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_15c8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_15c8a
}

define i32 @function_15cae() local_unnamed_addr {
dec_label_pc_15cae:
  %v0_15cae = load i32, i32* @ebp, align 4
  %v1_15cae = add i32 %v0_15cae, -12
  %v2_15cae = inttoptr i32 %v1_15cae to i32*
  %v3_15cae = load i32, i32* %v2_15cae, align 4
  %v3_15cb1 = xor i32 %v3_15cae, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_15cb1
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15cc5:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_15ce5 = load i32, i32* %arg1, align 4
  %v1_15cea = inttoptr i32 %arg2 to i32*
  %v2_15cea = load i32, i32* %v1_15cea, align 4
  %v7_15cec = icmp ult i32 %v2_15ce5, %v2_15cea
  %v1_15cee = icmp eq i1 %v7_15cec, false
  %storemerge = select i1 %v1_15cee, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15d04

bb:                                               ; preds = %dec_label_pc_15cc5
  %v1_15d02 = call i32 @function_15d09()
  br label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %bb, %dec_label_pc_15cc5
  %v2_15d02 = phi i32 [ %v1_15d02, %bb ], [ %storemerge, %dec_label_pc_15cc5 ]
  ret i32 %v2_15d02

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15d09() local_unnamed_addr {
dec_label_pc_15d09:
  %v0_15d0a = load i32, i32* @eax, align 8
  ret i32 %v0_15d0a
}

define i32 @_ZNSaIN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d0c:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d42:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15d65

bb:                                               ; preds = %dec_label_pc_15d42
  %v2_15d63 = call i32 @function_15d6a(i32 %arg1)
  br label %dec_label_pc_15d65

dec_label_pc_15d65:                               ; preds = %bb, %dec_label_pc_15d42
  %v3_15d63 = phi i32 [ %v2_15d63, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15d42 ]
  ret i32 %v3_15d63
}

define i32 @function_15d6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d6a:
  %v0_15d6b = load i32, i32* @eax, align 8
  ret i32 %v0_15d6b
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE10deallocateEPSB_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15d6c:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost7variantINS2_10shared_ptrIvEENS2_8signals26detail23foreign_void_shared_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEEvT_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15dad:
  %v15_15de6105 = icmp eq i32 %arg1, %arg2
  %v1_15de9106 = icmp eq i1 %v15_15de6105, false
  %v5_15dec110 = icmp eq i1 %v1_15de9106, false
  %v1_15dee111 = icmp eq i1 %v5_15dec110, false
  br i1 %v1_15dee111, label %dec_label_pc_15dcc, label %dec_label_pc_15df0

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15dad, %dec_label_pc_15dcc
  %stack_var_-32.0112 = phi i32 [ %v4_15ddf, %dec_label_pc_15dcc ], [ %arg1, %dec_label_pc_15dad ]
  store i32 %stack_var_-32.0112, i32* @eax, align 8
  %v1_15dd2 = call i32 @function_2e2c7(i32 %stack_var_-32.0112)
  store i32 %v1_15dd2, i32* @eax, align 8
  %v1_15dda = call i32 @function_2e2f4(i32 %v1_15dd2)
  %v4_15ddf = add i32 %stack_var_-32.0112, 12
  %v15_15de6 = icmp eq i32 %v4_15ddf, %arg2
  %v1_15de9 = icmp eq i1 %v15_15de6, false
  %v5_15dec = icmp eq i1 %v1_15de9, false
  %v1_15dee = icmp eq i1 %v5_15dec, false
  br i1 %v1_15dee, label %dec_label_pc_15dcc, label %dec_label_pc_15df0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15dcc, %dec_label_pc_15dad
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15dfc

bb:                                               ; preds = %dec_label_pc_15df0
  %v1_15dfa = call i32 @function_15e01()
  br label %dec_label_pc_15dfc

dec_label_pc_15dfc:                               ; preds = %bb, %dec_label_pc_15df0
  %v2_15dfa = phi i32 [ %v1_15dfa, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15df0 ]
  ret i32 %v2_15dfa

; uselistorder directives
  uselistorder i32 %v4_15ddf, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15dcc, { 1, 0 }
}

define i32 @function_15e01() local_unnamed_addr {
dec_label_pc_15e01:
  %v0_15e02 = load i32, i32* @eax, align 8
  ret i32 %v0_15e02
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E5whichEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e04:
  ret i32 %arg1
}

define i32 @function_15e22(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15e22:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 8
  %v3_15e23 = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_15e25 = mul i32 %v3_15e23, 8
  %v3_15e25 = add i32 %v3_15e23, 1166739828
  %v4_15e25 = add i32 %v3_15e25, %v2_15e25
  %v5_15e25 = inttoptr i32 %v4_15e25 to i8*
  %v6_15e25 = load i8, i8* %v5_15e25, align 1
  %v8_15e25 = trunc i32 %v3_15e23 to i8
  %v9_15e25 = add i8 %v6_15e25, %v8_15e25
  store i8 %v9_15e25, i8* %v5_15e25, align 1
  %v0_15e2e = load i32, i32* @ebx, align 8
  %v3_15e2e = load i32, i32* %edx.global-to-local, align 8
  %v4_15e2e = and i32 %v3_15e2e, 65280
  %v1_15e2e3 = add i32 %v4_15e2e, %v0_15e2e
  %v23_15e2e = and i32 %v1_15e2e3, 65280
  %v24_15e2e = and i32 %v0_15e2e, -65536
  %v3_15e30 = udiv i32 %v0_15e2e, 2
  %v9_15e30 = urem i32 %v3_15e30, 128
  %v25_15e2e = or i32 %v9_15e30, %v24_15e2e
  %v12_15e30 = or i32 %v25_15e2e, %v23_15e2e
  %v0_15e32 = load i32, i32* @eax, align 8
  %v1_15e32 = add i32 %v0_15e32, -1947974261
  %v5_15e32 = icmp ugt i32 %v0_15e32, 1947974260
  store i1 %v5_15e32, i1* %cf.global-to-local, align 1
  store i32 %v1_15e32, i32* %eax.global-to-local, align 8
  %v1_15e37 = add i32 %v12_15e30, 862319701
  %v2_15e37 = inttoptr i32 %v1_15e37 to i8*
  %v3_15e37 = load i8, i8* %v2_15e37, align 1
  %v4_15e37 = load i32, i32* @ecx, align 4
  %v5_15e37 = trunc i32 %v4_15e37 to i8
  %v6_15e37 = add i8 %v5_15e37, %v3_15e37
  %v11_15e37 = icmp ult i8 %v6_15e37, %v3_15e37
  store i1 %v11_15e37, i1* %cf.global-to-local, align 1
  store i8 %v6_15e37, i8* %v2_15e37, align 1
  %v0_15e3d = load i32, i32* %eax.global-to-local, align 8
  %v1_15e3d = load i1, i1* %cf.global-to-local, align 1
  %v2_15e3d = zext i1 %v1_15e3d to i32
  %v3_15e3d = add i32 %v0_15e3d, 20
  %v4_15e3d = add i32 %v3_15e3d, %v2_15e3d
  %v14_15e3d = icmp eq i32 %v4_15e3d, 0
  %v22_15e3d = icmp ule i32 %v4_15e3d, %v0_15e3d
  %v23_15e3d = icmp ugt i32 %v0_15e3d, -21
  %v24_15e3d = select i1 %v1_15e3d, i1 %v22_15e3d, i1 %v23_15e3d
  store i1 %v24_15e3d, i1* %cf.global-to-local, align 1
  store i32 %v4_15e3d, i32* @eax, align 8
  br i1 %v14_15e3d, label %bb, label %dec_label_pc_15e44

bb:                                               ; preds = %dec_label_pc_15e22
  %v1_15e42 = call i32 @function_15e49()
  store i32 %v1_15e42, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %bb, %dec_label_pc_15e22
  %v2_15e42 = phi i32 [ %v1_15e42, %bb ], [ %v4_15e3d, %dec_label_pc_15e22 ]
  ret i32 %v2_15e42

; uselistorder directives
  uselistorder i32 %v4_15e3d, { 0, 2, 1, 3 }
  uselistorder i8 %v3_15e37, { 1, 0 }
  uselistorder i32 %v0_15e2e, { 0, 2, 1 }
  uselistorder i32 %v3_15e23, { 2, 0, 1 }
}

define i32 @function_15e49() local_unnamed_addr {
dec_label_pc_15e49:
  %v0_15e4a = load i32, i32* @eax, align 8
  ret i32 %v0_15e4a
}

define i32 @_ZNK5boost15aligned_storageILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e4c:
  store i32 %arg1, i32* @eax, align 8
  %v1_15e69 = call i32 @function_2bd56(i32 %arg1)
  ret i32 %v1_15e69

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_14invoke_visitorIKNS4_21lock_weak_ptr_visitorEEEPKvEENT_11result_typeEiiRSH_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15e81:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 8
  %v0_15ec3 = load i32, i32* %ecx.global-to-local, align 4
  %v0_15ec7 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_15ec7, 16777216
  %v9_15eea = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_15ec3, 16777216
  %v10_15eea = sdiv i32 %sext1, 16777216
  %v11_15eea = call i32 @function_2e42f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %v9_15eea, i32 %v10_15eea, i32 0, i32 0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj8ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f0a:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15f30

bb:                                               ; preds = %dec_label_pc_15f0a
  %v2_15f2e = call i32 @function_15f35(i32 %arg1)
  br label %dec_label_pc_15f30

dec_label_pc_15f30:                               ; preds = %bb, %dec_label_pc_15f0a
  %v3_15f2e = phi i32 [ %v2_15f2e, %bb ], [ %arg1, %dec_label_pc_15f0a ]
  ret i32 %v3_15f2e
}

define i32 @function_15f35(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f35:
  %v0_15f36 = load i32, i32* @eax, align 8
  ret i32 %v0_15f36
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9copy_intoEPKvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15f37:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_15f70 = load i32, i32* %ecx.global-to-local, align 4
  %v0_15f74 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_15f74, 16777216
  %v12_15f93 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_15f70, 16777216
  %v13_15f93 = sdiv i32 %sext1, 16777216
  %v14_15f93 = call i32 @function_2eaef(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_15f93, i32 %v13_15f93, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_15fa4

bb:                                               ; preds = %dec_label_pc_15f37
  %v1_15fa2 = call i32 @function_15fa9()
  br label %dec_label_pc_15fa4

dec_label_pc_15fa4:                               ; preds = %bb, %dec_label_pc_15f37
  %v2_15fa2 = phi i32 [ %v1_15fa2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_15f37 ]
  ret i32 %v2_15fa2

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15fa9() local_unnamed_addr {
dec_label_pc_15fa9:
  %v0_15faa = load i32, i32* @eax, align 8
  ret i32 %v0_15faa
}

define i32 @_ZNK5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E12using_backupEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15fac:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15fac = load i32, i32* %ebp.global-to-local, align 4
  %v2_15fc6 = load i32, i32* %arg1, align 4
  %tmp103 = icmp slt i32 %v2_15fc6, 0
  %v2_15fc8 = zext i1 %tmp103 to i32
  store i32 %v0_15fac, i32* %ebp.global-to-local, align 4
  ret i32 %v2_15fc8
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9destroyerEPvEENT_11result_typeEiiRSD_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15fde:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_16052:
  %eax.global-to-local = alloca i32, align 4
  %v5_16052 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_16052
}

define i32 @function_16062(i32 %arg1) local_unnamed_addr {
dec_label_pc_16062:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_16062 = load i32, i32* @ebp, align 4
  %v0_16063 = load i32, i32* @ecx, align 4
  %v1_16063 = add i32 %v0_16063, 255
  %v1_16065 = add i32 %v0_16062, 2
  store i32 %v1_16065, i32* @ebp, align 4
  %v1_16066 = add i32 %v0_16063, -1587159996
  %v2_16066 = inttoptr i32 %v1_16066 to i8*
  %v3_16066 = load i8, i8* %v2_16066, align 1
  %v5_16066 = trunc i32 %v1_16063 to i8
  %v6_16066 = load i1, i1* @cf, align 1
  %v7_16066 = zext i1 %v6_16066 to i8
  %v8_16066 = add i8 %v3_16066, %v5_16066
  %v9_16066 = add i8 %v7_16066, %v8_16066
  %v27_16066 = icmp ule i8 %v9_16066, %v3_16066
  %v28_16066 = icmp ult i8 %v8_16066, %v3_16066
  %v29_16066 = select i1 %v6_16066, i1 %v27_16066, i1 %v28_16066
  store i1 %v29_16066, i1* %cf.global-to-local, align 1
  store i8 %v9_16066, i8* %v2_16066, align 1
  %v0_1606c = load i32, i32* @eax, align 8
  %v1_1606c = trunc i32 %v0_1606c to i8
  %v2_1606c = load i1, i1* %cf.global-to-local, align 1
  %v3_1606c = zext i1 %v2_1606c to i8
  %v4_1606c = add i8 %v3_1606c, %v1_1606c
  %v19_1606c = icmp ule i8 %v4_1606c, %v1_1606c
  %v21_1606c = icmp eq i1 %v2_1606c, %v19_1606c
  store i1 %v21_1606c, i1* %cf.global-to-local, align 1
  %v22_1606c = zext i8 %v4_1606c to i32
  %v24_1606c = and i32 %v0_1606c, -256
  %v25_1606c = or i32 %v22_1606c, %v24_1606c
  store i32 %v25_1606c, i32* %eax.global-to-local, align 8
  %v1_1606e = inttoptr i32 %v25_1606c to i8*
  %v2_1606e = load i8, i8* %v1_1606e, align 1
  %v5_1606e = add i8 %v2_1606e, %v4_1606c
  store i8 %v5_1606e, i8* %v1_1606e, align 1
  %v0_16070 = load i32, i32* %eax.global-to-local, align 8
  %v1_16070 = load i32, i32* @ebp, align 4
  %v2_16070 = add i32 %v1_16070, -12
  %v3_16070 = inttoptr i32 %v2_16070 to i32*
  store i32 %v0_16070, i32* %v3_16070, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_16075 = load i32, i32* @ebp, align 4
  %v1_16075 = add i32 %v0_16075, -28
  %v2_16075 = inttoptr i32 %v1_16075 to i32*
  %v3_16075 = load i32, i32* %v2_16075, align 4
  store i32 %v3_16075, i32* @eax, align 8
  %v1_1607b = call i32 @function_2f662(i32 %v3_16075)
  store i32 %v1_1607b, i32* %eax.global-to-local, align 8
  %v1_16080 = load i32, i32* @ebp, align 4
  %v2_16080 = add i32 %v1_16080, -32
  %v3_16080 = inttoptr i32 %v2_16080 to i32*
  %v4_16080 = load i32, i32* %v3_16080, align 4
  %v10_16080 = icmp ult i32 %v1_1607b, %v4_16080
  %v1_16083 = zext i1 %v10_16080 to i32
  %v3_16083 = and i32 %v1_1607b, -256
  %v4_16083 = or i32 %v1_16083, %v3_16083
  store i32 %v4_16083, i32* %eax.global-to-local, align 8
  %v3_1608f = load i32, i32* %v3_16080, align 4
  %v2_16098 = mul i32 %v3_1608f, 12
  store i32 %v2_16098, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  ret i32 %v2_16098

; uselistorder directives
  uselistorder i32 %v2_16098, { 1, 0 }
  uselistorder i8 %v4_1606c, { 0, 2, 1 }
  uselistorder i8 %v1_1606c, { 1, 0 }
  uselistorder i8 %v9_16066, { 1, 0 }
  uselistorder i8 %v8_16066, { 1, 0 }
  uselistorder i8 %v3_16066, { 1, 2, 0 }
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_14invoke_visitorIKNS4_24expired_weak_ptr_visitorEEEPKvEENT_11result_typeEiiRSH_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_160b6:
  ret i32 %arg2
}

define i32 @function_160c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_160c6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_160c6 = load i32, i32* @ebp, align 4
  %v0_160c7 = load i32, i32* @ecx, align 4
  %v1_160c7 = add i32 %v0_160c7, -1
  store i32 %v1_160c7, i32* %ecx.global-to-local, align 4
  %v1_160c9 = add i32 %v0_160c6, 2
  store i32 %v1_160c9, i32* %ebp.global-to-local, align 4
  %v1_160ca = add i32 %v0_160c7, 1166793796
  %v2_160ca = inttoptr i32 %v1_160ca to i8*
  %v3_160ca = load i8, i8* %v2_160ca, align 1
  %v5_160ca = trunc i32 %v1_160c7 to i8
  %v6_160ca = load i1, i1* @cf, align 1
  %v7_160ca = zext i1 %v6_160ca to i8
  %v8_160ca = add i8 %v3_160ca, %v5_160ca
  %v9_160ca = add i8 %v7_160ca, %v8_160ca
  %v27_160ca = icmp ule i8 %v9_160ca, %v3_160ca
  %v28_160ca = icmp ult i8 %v8_160ca, %v3_160ca
  %v29_160ca = select i1 %v6_160ca, i1 %v27_160ca, i1 %v28_160ca
  store i1 %v29_160ca, i1* %cf.global-to-local, align 1
  store i8 %v9_160ca, i8* %v2_160ca, align 1
  %v0_160d0 = load i32, i32* @eax, align 8
  %v1_160d0 = trunc i32 %v0_160d0 to i8
  %v2_160d0 = load i1, i1* %cf.global-to-local, align 1
  %v3_160d0 = zext i1 %v2_160d0 to i8
  %v4_160d0 = add i8 %v1_160d0, ptrtoint (i8* @global_var_89.1944 to i8)
  %v5_160d0 = add i8 %v4_160d0, %v3_160d0
  %v20_160d0 = add i8 %v1_160d0, -119
  %v21_160d0 = add i8 %v20_160d0, %v3_160d0
  %v22_160d0 = icmp ule i8 %v21_160d0, %v1_160d0
  %v23_160d0 = icmp ugt i8 %v1_160d0, 118
  %v24_160d0 = select i1 %v2_160d0, i1 %v22_160d0, i1 %v23_160d0
  %v25_160d0 = zext i8 %v5_160d0 to i32
  %v27_160d0 = and i32 %v0_160d0, -256
  %v28_160d0 = or i32 %v25_160d0, %v27_160d0
  store i32 %v28_160d0, i32* %eax.global-to-local, align 8
  %v0_160d2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_160d2 = add i32 %v0_160d2, 1
  store i32 %v1_160d2, i32* @ebp, align 4
  %v3_160d6 = zext i1 %v24_160d0 to i8
  %v4_160d6 = add i8 %v3_160d6, %v5_160d0
  %v19_160d6 = icmp ule i8 %v4_160d6, %v5_160d0
  %v21_160d6 = icmp eq i1 %v24_160d0, %v19_160d6
  store i1 %v21_160d6, i1* %cf.global-to-local, align 1
  %v22_160d6 = zext i8 %v4_160d6 to i32
  %v25_160d6 = or i32 %v22_160d6, %v27_160d0
  store i32 %v25_160d6, i32* %eax.global-to-local, align 8
  %v1_160d8 = inttoptr i32 %v25_160d6 to i8*
  %v2_160d8 = load i8, i8* %v1_160d8, align 1
  %v5_160d8 = add i8 %v2_160d8, %v4_160d6
  store i8 %v5_160d8, i8* %v1_160d8, align 1
  %v0_160da = load i32, i32* %eax.global-to-local, align 8
  %v1_160da = load i32, i32* @ebp, align 4
  %v2_160da = add i32 %v1_160da, -12
  %v3_160da = inttoptr i32 %v2_160da to i32*
  store i32 %v0_160da, i32* %v3_160da, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_160ef = load i32, i32* %ecx.global-to-local, align 4
  %v0_160f3 = load i32, i32* @edx, align 8
  %v0_160f7 = load i32, i32* @ebp, align 4
  %v1_160f7 = add i32 %v0_160f7, -40
  %v2_160f7 = inttoptr i32 %v1_160f7 to i32*
  %v3_160f7 = load i32, i32* %v2_160f7, align 4
  store i32 %v3_160f7, i32* %eax.global-to-local, align 8
  %v1_160fe = add i32 %v0_160f7, -36
  %v2_160fe = inttoptr i32 %v1_160fe to i32*
  %v3_160fe = load i32, i32* %v2_160fe, align 4
  store i32 %v3_160fe, i32* %eax.global-to-local, align 8
  %v1_16105 = add i32 %v0_160f7, -32
  %v2_16105 = inttoptr i32 %v1_16105 to i32*
  %v3_16105 = load i32, i32* %v2_16105, align 4
  store i32 %v3_16105, i32* %eax.global-to-local, align 8
  %v1_1610c = add i32 %v0_160f7, -28
  %v2_1610c = inttoptr i32 %v1_1610c to i32*
  %v3_1610c = load i32, i32* %v2_1610c, align 4
  store i32 %v3_1610c, i32* @eax, align 8
  %sext = mul i32 %v0_160f3, 16777216
  %v8_16112 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_160ef, 16777216
  %v9_16112 = sdiv i32 %sext1, 16777216
  %v10_16112 = call i32 @function_2f744(i32 %v3_1610c, i32 %v3_16105, i32 %v3_160fe, i32 %v3_160f7, i32 %v8_16112, i32 %v9_16112, i32 0, i32 0)
  store i32 %v10_16112, i32* @eax, align 8
  %v0_16117 = load i32, i32* @ebp, align 4
  %v1_16117 = add i32 %v0_16117, -12
  %v2_16117 = inttoptr i32 %v1_16117 to i32*
  %v3_16117 = load i32, i32* %v2_16117, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_1611a = icmp eq i32 %v3_16117, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1611a, label %bb, label %dec_label_pc_16123

bb:                                               ; preds = %dec_label_pc_160c6
  %v1_16121 = call i32 @function_16128()
  store i32 %v1_16121, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16123

dec_label_pc_16123:                               ; preds = %bb, %dec_label_pc_160c6
  %v3_16121 = phi i32 [ %v1_16121, %bb ], [ %v10_16112, %dec_label_pc_160c6 ]
  ret i32 %v3_16121

; uselistorder directives
  uselistorder i32 %v0_160f7, { 1, 0, 2, 3 }
  uselistorder i8 %v4_160d6, { 0, 2, 1 }
  uselistorder i8 %v5_160d0, { 1, 0, 2 }
  uselistorder i8 %v9_160ca, { 1, 0 }
  uselistorder i8 %v8_160ca, { 1, 0 }
  uselistorder i8 %v3_160ca, { 1, 2, 0 }
}

define i32 @function_16128() local_unnamed_addr {
dec_label_pc_16128:
  %v0_16129 = load i32, i32* @eax, align 8
  ret i32 %v0_16129
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9destroyerEPvEENT_11result_typeEiiRSD_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1612a:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16163 = load i32, i32* %ecx.global-to-local, align 4
  %v0_16167 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg1, i32* @eax, align 8
  %sext = mul i32 %v0_16167, 16777216
  %v12_16186 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_16163, 16777216
  %v13_16186 = sdiv i32 %sext1, 16777216
  %v14_16186 = call i32 @function_2fd5d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_16186, i32 %v13_16186, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E22internal_apply_visitorINS7_9copy_intoEEENT_11result_typeERSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1619e:
  %ebx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v0_161a1 = load i32, i32* %ebx.global-to-local, align 8
  %v1_161bf = add i32 %tmp105, 4
  store i32 %v1_161bf, i32* @eax, align 8
  %v1_161c5 = call i32 @function_2bfea(i32 %v1_161bf)
  store i32 %v1_161c5, i32* %ebx.global-to-local, align 8
  store i32 %tmp105, i32* @eax, align 8
  %v1_161d2 = call i32 @function_2bfa2(i32 %tmp105)
  %v2_161dc = load i32, i32* %arg1, align 4
  store i32 %v2_161dc, i32* @eax, align 8
  store i32 %arg2, i32* @ecx, align 4
  %v4_161f0 = call i32 @function_302fe(i32 %v2_161dc, i32 %v1_161d2, i32 %arg2, i32 %v1_161c5)
  store i32 %v0_161a1, i32* %ebx.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %tmp105, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNKSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1620c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_16226 = add i32 %tmp99, 4
  %v2_16226 = inttoptr i32 %v1_16226 to i32*
  %v3_16226 = load i32, i32* %v2_16226, align 4
  %v2_1622e = load i32, i32* %arg1, align 4
  %v2_16232 = sub i32 %v3_16226, %v2_1622e
  ret i32 %v2_16232
}

define i32 @function_16238(i32 %arg1) local_unnamed_addr {
dec_label_pc_16238:
  %edi.global-to-local = alloca i32, align 4
  %v0_1623b = load i32, i32* @eax, align 8
  %v1_1623b = load i32, i32* @edi, align 8
  %v2_1623b = inttoptr i32 %v1_1623b to i32*
  store i32 %v0_1623b, i32* %v2_1623b, align 4
  %v3_1623b = load i32, i32* @edi, align 8
  %v4_1623b = load i1, i1* @df, align 1
  %v5_1623b = select i1 %v4_1623b, i32 -4, i32 4
  %v6_1623b = add i32 %v5_1623b, %v3_1623b
  store i32 %v6_1623b, i32* %edi.global-to-local, align 8
  %v0_1623c = load i32, i32* @eax, align 8
  %v1_1623c = trunc i32 %v0_1623c to i8
  %v3_1623c = inttoptr i32 %v6_1623b to i8*
  store i8 %v1_1623c, i8* %v3_1623c, align 1
  %v4_1623c = load i32, i32* %edi.global-to-local, align 8
  %v5_1623c = load i1, i1* @df, align 1
  %v6_1623c = select i1 %v5_1623c, i32 -1, i32 1
  %v7_1623c = add i32 %v6_1623c, %v4_1623c
  store i32 %v7_1623c, i32* %edi.global-to-local, align 8
  %v0_1623d = load i32, i32* @eax, align 8
  %v1_1623d = trunc i32 %v0_1623d to i8
  %v3_1623d = inttoptr i32 %v7_1623c to i8*
  store i8 %v1_1623d, i8* %v3_1623d, align 1
  %v4_1623d = load i32, i32* %edi.global-to-local, align 8
  %v5_1623d = load i1, i1* @df, align 1
  %v6_1623d = select i1 %v5_1623d, i32 -1, i32 1
  %v7_1623d = add i32 %v6_1623d, %v4_1623d
  store i32 %v7_1623d, i32* %edi.global-to-local, align 8
  %v0_1623e = load i32, i32* @eax, align 8
  %v1_1623e = trunc i32 %v0_1623e to i8
  %v3_1623e = inttoptr i32 %v7_1623d to i8*
  store i8 %v1_1623e, i8* %v3_1623e, align 1
  %v4_1623e = load i32, i32* %edi.global-to-local, align 8
  %v5_1623e = load i1, i1* @df, align 1
  %v6_1623e = select i1 %v5_1623e, i32 -1, i32 1
  %v7_1623e = add i32 %v6_1623e, %v4_1623e
  store i32 %v7_1623e, i32* %edi.global-to-local, align 8
  %v0_16251 = load i32, i32* @eax, align 8
  ret i32 %v0_16251
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16252:
  store i32 %arg1, i32* @eax, align 8
  %v1_1627b = call i32 @function_30454(i32 %arg1)
  %v10_16280 = icmp ult i32 %v1_1627b, %arg2
  %v1_16283 = zext i1 %v10_16280 to i32
  %v3_16283 = and i32 %v1_1627b, -256
  %v4_16283 = or i32 %v1_16283, %v3_16283
  %v5_16286 = icmp eq i1 %v10_16280, false
  br i1 %v5_16286, label %bb, label %dec_label_pc_1628a

bb:                                               ; preds = %dec_label_pc_16252
  %v1_16288 = call i32 @function_1628f()
  br label %dec_label_pc_1628a

dec_label_pc_1628a:                               ; preds = %bb, %dec_label_pc_16252
  %v2_16288 = phi i32 [ %v1_16288, %bb ], [ %v4_16283, %dec_label_pc_16252 ]
  ret i32 %v2_16288

; uselistorder directives
  uselistorder i1 %v10_16280, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1628f() local_unnamed_addr {
dec_label_pc_1628f:
  %v0_1628f = load i32, i32* @ebp, align 4
  %v1_1628f = add i32 %v0_1628f, -32
  %v2_1628f = inttoptr i32 %v1_1628f to i32*
  %v3_1628f = load i32, i32* %v2_1628f, align 4
  %v2_16298 = mul i32 %v3_1628f, 12
  ret i32 %v2_16298
}

define i32 @function_162b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_162b2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_162b3() local_unnamed_addr {
dec_label_pc_162b3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_162b3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_162b3 = add i32 %v0_162b3, -1
  store i32 %v1_162b3, i32* %ecx.global-to-local, align 4
  %v0_162b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_162b5
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE10deallocateEPSB_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_162b6:
  ret i32 %arg2
}

define i32 @function_162f4() local_unnamed_addr {
dec_label_pc_162f4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_162f4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_162f4 = add i32 %v0_162f4, -1
  store i32 %v1_162f4, i32* %ecx.global-to-local, align 4
  %v0_162f6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_162f6
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEeqERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162f8:
  %v2_16318 = load i32, i32* %arg1, align 4
  %v1_1631d = inttoptr i32 %arg2 to i32*
  %v2_1631d = load i32, i32* %v1_1631d, align 4
  %v12_1631f = icmp eq i32 %v2_16318, %v2_1631d
  %v1_16321 = zext i1 %v12_1631f to i32
  %v3_16321 = and i32 %v2_1631d, -256
  %v4_16321 = or i32 %v1_16321, %v3_16321
  store i32 %v4_16321, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16330

bb:                                               ; preds = %dec_label_pc_162f8
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1632e = call i32 @function_16335(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_16330

dec_label_pc_16330:                               ; preds = %bb, %dec_label_pc_162f8
  %v4_1632e = phi i32 [ %v3_1632e, %bb ], [ %v4_16321, %dec_label_pc_162f8 ]
  ret i32 %v4_1632e

; uselistorder directives
  uselistorder i32 %v2_1631d, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_16335(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16335:
  %v0_16336 = load i32, i32* @eax, align 8
  ret i32 %v0_16336
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16338:
  %v4_16342 = sext i8 %arg1 to i32
  %v5_1636d = icmp eq i8 %arg1, 0
  %v1_1636f = icmp eq i1 %v5_1636d, false
  br i1 %v1_1636f, label %bb, label %dec_label_pc_16371

bb:                                               ; preds = %dec_label_pc_16338
  %v4_1636f = call i32 @function_16395(i32 %v4_16342)
  br label %dec_label_pc_16371

dec_label_pc_16371:                               ; preds = %bb, %dec_label_pc_16338
  %v3_16389 = phi i32 [ %v4_1636f, %bb ], [ %v4_16342, %dec_label_pc_16338 ]
  ret i32 %v3_16389

; uselistorder directives
  uselistorder i32 %v4_16342, { 1, 0 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_16395(i32 %arg1) local_unnamed_addr {
dec_label_pc_16395:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16395 = load i32, i32* @ebp, align 4
  %v1_16395 = add i32 %v0_16395, -32
  store i32 %v1_16395, i32* @eax, align 8
  %v1_1639b = call i32 @function_29fd2(i32 %v1_16395)
  store i32 %v1_1639b, i32* %eax.global-to-local, align 8
  %v0_163a0 = load i32, i32* @ebp, align 4
  %v1_163a0 = add i32 %v0_163a0, -52
  %v2_163a0 = inttoptr i32 %v1_163a0 to i32*
  %v3_163a0 = load i32, i32* %v2_163a0, align 4
  store i32 %v3_163a0, i32* %eax.global-to-local, align 8
  %v1_163a3 = inttoptr i32 %v3_163a0 to i32*
  %v2_163a3 = load i32, i32* %v1_163a3, align 4
  store i32 %v2_163a3, i32* %eax.global-to-local, align 8
  %v2_163a5 = add i32 %v0_163a0, -32
  %v3_163a5 = inttoptr i32 %v2_163a5 to i32*
  store i32 %v2_163a3, i32* %v3_163a5, align 4
  %v0_163a8 = load i32, i32* @ebp, align 4
  %v1_163a8 = add i32 %v0_163a8, -20
  %v2_163a8 = inttoptr i32 %v1_163a8 to i32*
  store i32 0, i32* %v2_163a8, align 4
  br label %dec_label_pc_16491

dec_label_pc_163b4:                               ; preds = %dec_label_pc_164e8
  %v1_163b4 = add i32 %v0_163b4.pre.pre, -32
  store i32 %v1_163b4, i32* @eax, align 8
  %v1_163b7 = load i32, i32* @esp, align 4
  %v2_163b7 = inttoptr i32 %v1_163b7 to i32*
  store i32 %v1_163b4, i32* %v2_163b7, align 4
  %v0_163ba = call i32 @function_305aa()
  store i32 %v0_163ba, i32* @eax, align 8
  %v1_163bf = load i32, i32* @esp, align 4
  %v2_163bf = inttoptr i32 %v1_163bf to i32*
  store i32 %v0_163ba, i32* %v2_163bf, align 4
  %v0_163c2 = call i32 @function_305dc()
  %v1_163c7 = load i32, i32* @esp, align 4
  %v2_163c7 = add i32 %v1_163c7, 4
  %v3_163c7 = inttoptr i32 %v2_163c7 to i32*
  store i32 %v0_163c2, i32* %v3_163c7, align 4
  %v0_163cb = load i32, i32* @ebp, align 4
  %v1_163cb = add i32 %v0_163cb, -24
  store i32 %v1_163cb, i32* @eax, align 8
  %v1_163ce = load i32, i32* @esp, align 4
  %v2_163ce = inttoptr i32 %v1_163ce to i32*
  store i32 %v1_163cb, i32* %v2_163ce, align 4
  %v0_163d1 = call i32 @function_26ea2()
  store i32 %v0_163d1, i32* %eax.global-to-local, align 8
  %v0_163d6 = load i32, i32* @ebp, align 4
  %v1_163d6 = add i32 %v0_163d6, -48
  %v2_163d6 = inttoptr i32 %v1_163d6 to i8*
  %v3_163d6 = load i8, i8* %v2_163d6, align 1
  %v10_163d6 = icmp eq i8 %v3_163d6, 0
  br i1 %v10_163d6, label %dec_label_pc_163f7, label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163b4
  %v1_163dc = add i32 %v0_163d6, -32
  store i32 %v1_163dc, i32* @eax, align 8
  %v1_163df = load i32, i32* @esp, align 4
  %v2_163df = inttoptr i32 %v1_163df to i32*
  store i32 %v1_163dc, i32* %v2_163df, align 4
  %v0_163e2 = call i32 @function_305aa()
  store i32 %v0_163e2, i32* @eax, align 8
  %v1_163e7 = load i32, i32* @esp, align 4
  %v2_163e7 = inttoptr i32 %v1_163e7 to i32*
  store i32 %v0_163e2, i32* %v2_163e7, align 4
  %v0_163ea = call i32 @function_30638()
  store i32 %v0_163ea, i32* @eax, align 8
  %v1_163ef = load i32, i32* @esp, align 4
  %v2_163ef = inttoptr i32 %v1_163ef to i32*
  store i32 %v0_163ea, i32* %v2_163ef, align 4
  %v0_163f2 = call i32 @function_30694()
  store i32 %v0_163f2, i32* %eax.global-to-local, align 8
  %v0_163f7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_163f7

dec_label_pc_163f7:                               ; preds = %dec_label_pc_163dc, %dec_label_pc_163b4
  %v0_163f7 = phi i32 [ %v0_163f7.pre, %dec_label_pc_163dc ], [ %v0_163d6, %dec_label_pc_163b4 ]
  %v1_163f7 = add i32 %v0_163f7, -32
  store i32 %v1_163f7, i32* @eax, align 8
  %v1_163fa = load i32, i32* @esp, align 4
  %v2_163fa = inttoptr i32 %v1_163fa to i32*
  store i32 %v1_163f7, i32* %v2_163fa, align 4
  %v0_163fd = call i32 @function_305aa()
  store i32 %v0_163fd, i32* @eax, align 8
  %v1_16402 = load i32, i32* @esp, align 4
  %v2_16402 = inttoptr i32 %v1_16402 to i32*
  store i32 %v0_163fd, i32* %v2_16402, align 4
  %v0_16405 = call i32 @function_30638()
  store i32 %v0_16405, i32* @eax, align 8
  %v1_1640a = load i32, i32* @esp, align 4
  %v2_1640a = inttoptr i32 %v1_1640a to i32*
  store i32 %v0_16405, i32* %v2_1640a, align 4
  %v0_1640d = call i32 @function_25210()
  %v1_16412 = trunc i32 %v0_1640d to i8
  %v2_16412 = load i32, i32* @ebp, align 4
  %v3_16412 = add i32 %v2_16412, -13
  %v4_16412 = inttoptr i32 %v3_16412 to i8*
  store i8 %v1_16412, i8* %v4_16412, align 1
  %v0_16415 = load i32, i32* @ebp, align 4
  %v1_16415 = add i32 %v0_16415, -24
  store i32 %v1_16415, i32* @eax, align 8
  %v1_16418 = load i32, i32* @esp, align 4
  %v2_16418 = inttoptr i32 %v1_16418 to i32*
  store i32 %v1_16415, i32* %v2_16418, align 4
  %v0_1641b = call i32 @function_26f1a()
  store i32 %v0_1641b, i32* %eax.global-to-local, align 8
  %v0_16420 = load i32, i32* @ebp, align 4
  %v1_16420 = add i32 %v0_16420, -13
  %v2_16420 = inttoptr i32 %v1_16420 to i8*
  %v3_16420 = load i8, i8* %v2_16420, align 1
  %v5_16427 = icmp eq i8 %v3_16420, 1
  %v1_16482 = add i32 %v0_16420, -32
  store i32 %v1_16482, i32* @eax, align 8
  %v1_16485 = load i32, i32* @esp, align 4
  %v2_16485 = inttoptr i32 %v1_16485 to i32*
  store i32 %v1_16482, i32* %v2_16485, align 4
  br i1 %v5_16427, label %dec_label_pc_16482, label %dec_label_pc_1642b

dec_label_pc_1642b:                               ; preds = %dec_label_pc_163f7
  %v0_16431 = call i32 @function_305aa()
  store i32 %v0_16431, i32* @eax, align 8
  %v1_16436 = load i32, i32* @esp, align 4
  %v2_16436 = inttoptr i32 %v1_16436 to i32*
  store i32 %v0_16431, i32* %v2_16436, align 4
  %v0_16439 = call i32 @function_30638()
  store i32 %v0_16439, i32* @eax, align 8
  %v1_1643e = load i32, i32* @esp, align 4
  %v2_1643e = inttoptr i32 %v1_1643e to i32*
  store i32 %v0_16439, i32* %v2_1643e, align 4
  %v0_16441 = call i32 @function_306e0()
  store i32 %v0_16441, i32* %eax.global-to-local, align 8
  store i32 %v0_16441, i32* @ebx, align 8
  %v0_16448 = load i32, i32* @ebp, align 4
  %v1_16448 = add i32 %v0_16448, -44
  %v2_16448 = inttoptr i32 %v1_16448 to i32*
  %v3_16448 = load i32, i32* %v2_16448, align 4
  store i32 %v3_16448, i32* @eax, align 8
  %v1_1644b = load i32, i32* @esp, align 4
  %v2_1644b = inttoptr i32 %v1_1644b to i32*
  store i32 %v3_16448, i32* %v2_1644b, align 4
  %v0_1644e = call i32 @function_2a466()
  store i32 %v0_1644e, i32* %eax.global-to-local, align 8
  %v1_16453 = load i32, i32* @esp, align 4
  %v2_16453 = inttoptr i32 %v1_16453 to i32*
  store i32 %v0_1644e, i32* %v2_16453, align 4
  %v0_16456 = call i32 @function_2a4c2()
  store i32 %v0_16456, i32* %edx.global-to-local, align 8
  %v0_1645d = load i32, i32* @ebp, align 4
  %v1_1645d = add i32 %v0_1645d, -60
  store i32 %v1_1645d, i32* @eax, align 8
  %v1_16460 = add i32 %v0_1645d, -32
  store i32 %v1_16460, i32* @ecx, align 4
  %v1_16463 = load i32, i32* @esp, align 4
  %v2_16463 = add i32 %v1_16463, 12
  %v3_16463 = inttoptr i32 %v2_16463 to i32*
  store i32 %v1_16460, i32* %v3_16463, align 4
  %v0_16467 = load i32, i32* @ebx, align 8
  %v1_16467 = load i32, i32* @esp, align 4
  %v2_16467 = add i32 %v1_16467, 8
  %v3_16467 = inttoptr i32 %v2_16467 to i32*
  store i32 %v0_16467, i32* %v3_16467, align 4
  %v0_1646b = load i32, i32* %edx.global-to-local, align 8
  %v1_1646b = load i32, i32* @esp, align 4
  %v2_1646b = add i32 %v1_1646b, 4
  %v3_1646b = inttoptr i32 %v2_1646b to i32*
  store i32 %v0_1646b, i32* %v3_1646b, align 4
  %v0_1646f = load i32, i32* @eax, align 8
  %v1_1646f = load i32, i32* @esp, align 4
  %v2_1646f = inttoptr i32 %v1_1646f to i32*
  store i32 %v0_1646f, i32* %v2_1646f, align 4
  %v0_16472 = call i32 @function_30710()
  store i32 %v0_16472, i32* %eax.global-to-local, align 8
  %v0_1647a = load i32, i32* @ebp, align 4
  %v1_1647a = add i32 %v0_1647a, -60
  %v2_1647a = inttoptr i32 %v1_1647a to i32*
  %v3_1647a = load i32, i32* %v2_1647a, align 4
  store i32 %v3_1647a, i32* %eax.global-to-local, align 8
  %v2_1647d = add i32 %v0_1647a, -32
  %v3_1647d = inttoptr i32 %v2_1647d to i32*
  store i32 %v3_1647a, i32* %v3_1647d, align 4
  br label %dec_label_pc_1648d

dec_label_pc_16482:                               ; preds = %dec_label_pc_163f7
  %v0_16488 = call i32 @function_30910()
  store i32 %v0_16488, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1648d

dec_label_pc_1648d:                               ; preds = %dec_label_pc_16482, %dec_label_pc_1642b
  %v0_1648d = load i32, i32* @ebp, align 4
  %v1_1648d = add i32 %v0_1648d, -20
  %v2_1648d = inttoptr i32 %v1_1648d to i32*
  %v3_1648d = load i32, i32* %v2_1648d, align 4
  %v4_1648d = add i32 %v3_1648d, 1
  %v8_1648d = icmp eq i32 %v3_1648d, -1
  store i1 %v8_1648d, i1* @cf, align 1
  store i32 %v4_1648d, i32* %v2_1648d, align 4
  br label %dec_label_pc_16491

dec_label_pc_16491:                               ; preds = %dec_label_pc_1648d, %dec_label_pc_16395
  %v0_16491 = load i32, i32* @ebp, align 4
  %v1_16491 = add i32 %v0_16491, -44
  %v2_16491 = inttoptr i32 %v1_16491 to i32*
  %v3_16491 = load i32, i32* %v2_16491, align 4
  store i32 %v3_16491, i32* @eax, align 8
  %v1_16494 = load i32, i32* @esp, align 4
  %v2_16494 = inttoptr i32 %v1_16494 to i32*
  store i32 %v3_16491, i32* %v2_16494, align 4
  %v0_16497 = call i32 @function_2a466()
  store i32 %v0_16497, i32* %eax.global-to-local, align 8
  %v1_1649c = load i32, i32* @esp, align 4
  %v2_1649c = inttoptr i32 %v1_1649c to i32*
  store i32 %v0_16497, i32* %v2_1649c, align 4
  %v0_1649f = call i32 @function_2a4c2()
  store i32 %v0_1649f, i32* %edx.global-to-local, align 8
  %v0_164a6 = load i32, i32* @ebp, align 4
  %v1_164a6 = add i32 %v0_164a6, -28
  store i32 %v1_164a6, i32* %eax.global-to-local, align 8
  %v1_164a9 = load i32, i32* @esp, align 4
  %v2_164a9 = add i32 %v1_164a9, 4
  %v3_164a9 = inttoptr i32 %v2_164a9 to i32*
  store i32 %v0_1649f, i32* %v3_164a9, align 4
  %v0_164ad = load i32, i32* %eax.global-to-local, align 8
  %v1_164ad = load i32, i32* @esp, align 4
  %v2_164ad = inttoptr i32 %v1_164ad to i32*
  store i32 %v0_164ad, i32* %v2_164ad, align 4
  %v0_164b5 = load i32, i32* @esp, align 4
  %v0_164b8 = load i32, i32* @ebp, align 4
  %v1_164b8 = add i32 %v0_164b8, -28
  %v3_164bb = inttoptr i32 %v0_164b5 to i32*
  store i32 %v1_164b8, i32* %v3_164bb, align 4
  %v0_164bf = load i32, i32* @ebp, align 4
  %v1_164bf = add i32 %v0_164bf, -32
  store i32 %v1_164bf, i32* %eax.global-to-local, align 8
  %v1_164c2 = load i32, i32* @esp, align 4
  %v2_164c2 = inttoptr i32 %v1_164c2 to i32*
  store i32 %v1_164bf, i32* %v2_164c2, align 4
  %v0_164c5 = call i32 @function_3056a()
  store i32 %v0_164c5, i32* %eax.global-to-local, align 8
  %v4_164ca = trunc i32 %v0_164c5 to i8
  %v5_164ca = icmp eq i8 %v4_164ca, 0
  %v0_163b4.pre.pre = load i32, i32* @ebp, align 4
  br i1 %v5_164ca, label %dec_label_pc_164e3, label %dec_label_pc_164ce

dec_label_pc_164ce:                               ; preds = %dec_label_pc_16491
  %v1_164ce = add i32 %v0_163b4.pre.pre, -56
  %v2_164ce = inttoptr i32 %v1_164ce to i32*
  %v3_164ce = load i32, i32* %v2_164ce, align 4
  %v10_164ce = icmp eq i32 %v3_164ce, 0
  br i1 %v10_164ce, label %dec_label_pc_164e8, label %dec_label_pc_164d4

dec_label_pc_164d4:                               ; preds = %dec_label_pc_164ce
  %v1_164d4 = add i32 %v0_163b4.pre.pre, -20
  %v2_164d4 = inttoptr i32 %v1_164d4 to i32*
  %v3_164d4 = load i32, i32* %v2_164d4, align 4
  store i32 %v3_164d4, i32* %eax.global-to-local, align 8
  %v4_164d7 = load i32, i32* %v2_164ce, align 4
  %v10_164d7 = icmp ult i32 %v3_164d4, %v4_164d7
  %v1_164da = icmp eq i1 %v10_164d7, false
  br i1 %v1_164da, label %dec_label_pc_164e3, label %dec_label_pc_164e8

dec_label_pc_164e3:                               ; preds = %dec_label_pc_16491, %dec_label_pc_164d4
  br label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164ce, %dec_label_pc_164d4, %dec_label_pc_164e3
  %storemerge = phi i32 [ 0, %dec_label_pc_164e3 ], [ 1, %dec_label_pc_164d4 ], [ 1, %dec_label_pc_164ce ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_164e8 = icmp eq i32 %storemerge, 0
  %v1_164ea = icmp eq i1 %v5_164e8, false
  br i1 %v1_164ea, label %dec_label_pc_163b4, label %dec_label_pc_164f0

dec_label_pc_164f0:                               ; preds = %dec_label_pc_164e8
  %v1_164f0 = add i32 %v0_163b4.pre.pre, -44
  %v2_164f0 = inttoptr i32 %v1_164f0 to i32*
  %v3_164f0 = load i32, i32* %v2_164f0, align 4
  store i32 %v3_164f0, i32* %eax.global-to-local, align 8
  %v1_164f3 = add i32 %v0_163b4.pre.pre, -32
  %v2_164f3 = inttoptr i32 %v1_164f3 to i32*
  %v3_164f3 = load i32, i32* %v2_164f3, align 4
  store i32 %v3_164f3, i32* %edx.global-to-local, align 8
  %v2_164f6 = add i32 %v3_164f0, 8
  %v3_164f6 = inttoptr i32 %v2_164f6 to i32*
  store i32 %v3_164f3, i32* %v3_164f6, align 4
  %v0_164f9 = load i32, i32* @ebp, align 4
  %v1_164f9 = add i32 %v0_164f9, -12
  %v2_164f9 = inttoptr i32 %v1_164f9 to i32*
  %v3_164f9 = load i32, i32* %v2_164f9, align 4
  %v3_164fc = xor i32 %v3_164f9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_164fc = icmp eq i32 %v3_164fc, 0
  store i32 %v3_164fc, i32* @eax, align 8
  br i1 %v4_164fc, label %bb, label %dec_label_pc_16505

bb:                                               ; preds = %dec_label_pc_164f0
  %v1_16503 = call i32 @function_16523()
  store i32 %v1_16503, i32* @eax, align 8
  br label %dec_label_pc_16505

dec_label_pc_16505:                               ; preds = %bb, %dec_label_pc_164f0
  %v0_16505 = call i32 @function_1651e()
  store i32 %v0_16505, i32* %eax.global-to-local, align 8
  ret i32 %v0_16505

; uselistorder directives
  uselistorder i32 %v0_163b4.pre.pre, { 0, 1, 4, 3, 2 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 10, 2, 11, 12, 13, 14, 15, 16, 0, 1, 3, 4, 5, 6, 7, 8, 17, 18, 19 }
  uselistorder i32 ()* @function_30638, { 2, 1, 0 }
  uselistorder i32 ()* @function_305aa, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_164e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_164e3, { 1, 0 }
}

define i32 @function_16508() local_unnamed_addr {
dec_label_pc_16508:
  %eax.global-to-local = alloca i32, align 4
  %v0_16508 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16508
}

define i32 @function_1651e() local_unnamed_addr {
dec_label_pc_1651e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16523() local_unnamed_addr {
dec_label_pc_16523:
  %v0_16527 = load i32, i32* @eax, align 8
  ret i32 %v0_16527
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE4swapERSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16528:
  store i32 %arg1, i32* @eax, align 8
  %v2_16552 = call i32 @function_30b39(i32 %arg1, i32 %arg2)
  %v1_1655a = add i32 %arg2, 4
  %v1_16560 = add i32 %arg1, 4
  store i32 %v1_16560, i32* @eax, align 8
  %v2_1656a = call i32 @function_18798(i32 %v1_16560, i32 %v1_1655a)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1657b

bb:                                               ; preds = %dec_label_pc_16528
  %v1_16579 = call i32 @function_16580()
  br label %dec_label_pc_1657b

dec_label_pc_1657b:                               ; preds = %bb, %dec_label_pc_16528
  %v2_16579 = phi i32 [ %v1_16579, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_16528 ]
  ret i32 %v2_16579

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_16580() local_unnamed_addr {
dec_label_pc_16580:
  %v0_16581 = load i32, i32* @eax, align 8
  ret i32 %v0_16581
}

define i32 @_ZN5boost8optionalISsEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16582:
  store i32 %arg1, i32* @eax, align 8
  %v1_1659f = call i32 @function_30bde(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_165b0

bb:                                               ; preds = %dec_label_pc_16582
  %v1_165ae = call i32 @function_165b5()
  br label %dec_label_pc_165b0

dec_label_pc_165b0:                               ; preds = %bb, %dec_label_pc_16582
  %v2_165ae = phi i32 [ %v1_165ae, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_16582 ]
  ret i32 %v2_165ae

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_165b5() local_unnamed_addr {
dec_label_pc_165b5:
  %v0_165b6 = load i32, i32* @eax, align 8
  ret i32 %v0_165b6
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_165b8:
  store i32 %arg1, i32* @eax, align 8
  %v2_165d6 = call i32 @function_2c2c4(i32 %arg1)
  %v4_165e9 = call i32 @function_30c86(i32 %arg1, i32 10)
  store i32 %arg1, i32* @eax, align 8
  %v2_165f4 = call i32 @function_30c50(i32 %arg1)
  %v2_165fe = add i32 %arg1, 124
  %v3_165fe = inttoptr i32 %v2_165fe to i32*
  store i32 %v2_165f4, i32* %v3_165fe, align 4
  %v1_16604 = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_16604 = inttoptr i32 %v1_16604 to i32*
  store i32 0, i32* %v2_16604, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_16614 = call i32 @function_2cc60(i32 %arg1)
  %v4_16619 = trunc i32 %v2_16614 to i8
  %v5_16619 = icmp eq i8 %v4_16619, 0
  %v1_1661b = icmp eq i1 %v5_16619, false
  br i1 %v1_1661b, label %bb, label %dec_label_pc_1661d

bb:                                               ; preds = %dec_label_pc_165b8
  %v2_1661b = call i32 @function_16667()
  br label %dec_label_pc_1661d

dec_label_pc_1661d:                               ; preds = %bb, %dec_label_pc_165b8
  %v3_16635 = phi i32 [ %v2_1661b, %bb ], [ %v2_16614, %dec_label_pc_165b8 ]
  ret i32 %v3_16635
}

define i32 @function_16640() local_unnamed_addr {
dec_label_pc_16640:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16640 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16640 = add i32 %v0_16640, -465204285
  %v2_16640 = inttoptr i32 %v1_16640 to i32*
  %v3_16640 = load i32, i32* %v2_16640, align 4
  %v4_16640 = add i32 %v3_16640, -1
  store i32 %v4_16640, i32* %v2_16640, align 4
  %v0_16646 = load i32, i32* %eax.global-to-local, align 8
  %v1_1664e = call i32 @function_16652(i32 %v0_16646)
  store i32 %v1_1664e, i32* %eax.global-to-local, align 8
  ret i32 %v1_1664e
}

define i32 @function_16650() local_unnamed_addr {
dec_label_pc_16650:
  %eax.global-to-local = alloca i32, align 4
  %v0_16650 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16650
}

define i32 @function_16652(i32 %arg1) local_unnamed_addr {
dec_label_pc_16652:
  %v0_16652 = load i32, i32* @ebp, align 4
  %v1_16652 = add i32 %v0_16652, -28
  %v2_16652 = inttoptr i32 %v1_16652 to i32*
  %v3_16652 = load i32, i32* %v2_16652, align 4
  store i32 %v3_16652, i32* @eax, align 8
  %v1_16658 = call i32 @function_29c42(i32 %v3_16652)
  %v0_1665d = load i32, i32* @ebx, align 8
  ret i32 %v0_1665d
}

define i32 @function_16667() local_unnamed_addr {
dec_label_pc_16667:
  %v0_16667 = load i32, i32* @ebp, align 4
  %v1_16667 = add i32 %v0_16667, -12
  %v2_16667 = inttoptr i32 %v1_16667 to i32*
  %v3_16667 = load i32, i32* %v2_16667, align 4
  %v3_1666a = xor i32 %v3_16667, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1666a = icmp eq i32 %v3_1666a, 0
  store i32 %v3_1666a, i32* @eax, align 8
  br i1 %v4_1666a, label %bb, label %dec_label_pc_16673

bb:                                               ; preds = %dec_label_pc_16667
  %v1_16671 = call i32 @function_16678()
  br label %dec_label_pc_16673

dec_label_pc_16673:                               ; preds = %bb, %dec_label_pc_16667
  %v2_16671 = phi i32 [ %v1_16671, %bb ], [ %v3_1666a, %dec_label_pc_16667 ]
  ret i32 %v2_16671
}

define i32 @function_16678() local_unnamed_addr {
dec_label_pc_16678:
  %v0_1667d = load i32, i32* @eax, align 8
  ret i32 %v0_1667d
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1667e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_166a1

bb:                                               ; preds = %dec_label_pc_1667e
  %v2_1669f = call i32 @function_166a6(i32 %arg1)
  br label %dec_label_pc_166a1

dec_label_pc_166a1:                               ; preds = %bb, %dec_label_pc_1667e
  %v3_1669f = phi i32 [ %v2_1669f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1667e ]
  ret i32 %v3_1669f
}

define i32 @function_166a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_166a6:
  %v0_166a7 = load i32, i32* @eax, align 8
  ret i32 %v0_166a7
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8is_validEv() local_unnamed_addr {
dec_label_pc_166a8:
  %eax.global-to-local = alloca i32, align 4
  %v17_166ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_166ac
}

define i32 @function_166b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_166b0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_166b0 = load i32, i32* @ebp, align 4
  %v1_166b0 = add i32 %v0_166b0, 1
  store i32 %v1_166b0, i32* @ebp, align 4
  %v0_166b1 = load i32, i32* @ecx, align 4
  %v1_166b1 = add i32 %v0_166b1, -1587157947
  %v2_166b1 = inttoptr i32 %v1_166b1 to i8*
  %v3_166b1 = load i8, i8* %v2_166b1, align 1
  %v5_166b1 = trunc i32 %v0_166b1 to i8
  %v6_166b1 = or i8 %v3_166b1, %v5_166b1
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_166b1, i8* %v2_166b1, align 1
  %v0_166b7 = load i32, i32* @eax, align 8
  %v1_166b7 = trunc i32 %v0_166b7 to i8
  %v2_166b7 = load i1, i1* %cf.global-to-local, align 1
  %v3_166b7 = zext i1 %v2_166b7 to i8
  %v4_166b7 = add i8 %v3_166b7, %v1_166b7
  %v19_166b7 = icmp ule i8 %v4_166b7, %v1_166b7
  %v21_166b7 = icmp eq i1 %v2_166b7, %v19_166b7
  store i1 %v21_166b7, i1* %cf.global-to-local, align 1
  %v22_166b7 = zext i8 %v4_166b7 to i32
  %v24_166b7 = and i32 %v0_166b7, -256
  %v25_166b7 = or i32 %v22_166b7, %v24_166b7
  store i32 %v25_166b7, i32* %eax.global-to-local, align 8
  %v1_166b9 = inttoptr i32 %v25_166b7 to i8*
  %v2_166b9 = load i8, i8* %v1_166b9, align 1
  %v5_166b9 = add i8 %v2_166b9, %v4_166b7
  store i8 %v5_166b9, i8* %v1_166b9, align 1
  %v0_166bb = load i32, i32* %eax.global-to-local, align 8
  %v1_166bb = load i32, i32* @ebp, align 4
  %v2_166bb = add i32 %v1_166bb, -12
  %v3_166bb = inttoptr i32 %v2_166bb to i32*
  store i32 %v0_166bb, i32* %v3_166bb, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_166c0 = load i32, i32* @ebp, align 4
  %v1_166c0 = add i32 %v0_166c0, -28
  %v2_166c0 = inttoptr i32 %v1_166c0 to i32*
  %v3_166c0 = load i32, i32* %v2_166c0, align 4
  store i32 %v3_166c0, i32* %eax.global-to-local, align 8
  %v1_166c3 = add i32 %v3_166c0, 124
  %v2_166c3 = inttoptr i32 %v1_166c3 to i32*
  %v3_166c3 = load i32, i32* %v2_166c3, align 4
  store i32 %v3_166c3, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_166c6 = icmp eq i32 %v3_166c3, 0
  %v1_166c8 = icmp eq i1 %v1_166c6, false
  br i1 %v1_166c8, label %dec_label_pc_166d4, label %dec_label_pc_166ca

dec_label_pc_166ca:                               ; preds = %dec_label_pc_166b0
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_16765

dec_label_pc_166d4:                               ; preds = %dec_label_pc_166b0
  %v3_166d4 = load i32, i32* %v2_166c0, align 4
  store i32 %v3_166d4, i32* %eax.global-to-local, align 8
  %v1_166d7 = add i32 %v3_166d4, 120
  %v2_166d7 = inttoptr i32 %v1_166d7 to i32*
  %v3_166d7 = load i32, i32* %v2_166d7, align 4
  store i32 %v3_166d7, i32* %eax.global-to-local, align 8
  %v5_166da = icmp ult i32 %v3_166d7, 9
  store i1 %v5_166da, i1* %cf.global-to-local, align 1
  %tmp15 = icmp ult i32 %v3_166d7, 10
  br i1 %tmp15, label %dec_label_pc_166df, label %dec_label_pc_166e6

dec_label_pc_166df:                               ; preds = %dec_label_pc_166d4
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_16765

dec_label_pc_166e6:                               ; preds = %dec_label_pc_166d4
  %v3_166e6 = load i32, i32* %v2_166c0, align 4
  store i32 %v3_166e6, i32* @eax, align 8
  %v1_166ec = call i32 @function_30dba(i32 %v3_166e6)
  %v1_166f1 = xor i32 %v1_166ec, 1
  %v4_166f1 = trunc i32 %v1_166f1 to i8
  store i32 %v1_166f1, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_166f4 = icmp eq i8 %v4_166f1, 0
  br i1 %v5_166f4, label %dec_label_pc_1670a, label %dec_label_pc_166f8

dec_label_pc_166f8:                               ; preds = %dec_label_pc_166e6
  %v0_166f8 = load i32, i32* @ebp, align 4
  %v1_166f8 = add i32 %v0_166f8, -28
  %v2_166f8 = inttoptr i32 %v1_166f8 to i32*
  %v3_166f8 = load i32, i32* %v2_166f8, align 4
  store i32 %v3_166f8, i32* %eax.global-to-local, align 8
  %v1_166fb = add i32 %v3_166f8, 120
  %v2_166fb = inttoptr i32 %v1_166fb to i32*
  %v3_166fb = load i32, i32* %v2_166fb, align 4
  store i32 %v3_166fb, i32* %eax.global-to-local, align 8
  %v5_166fe = icmp ult i32 %v3_166fb, 10
  store i1 %v5_166fe, i1* %cf.global-to-local, align 1
  %tmp16 = icmp ult i32 %v3_166fb, 11
  br i1 %tmp16, label %dec_label_pc_1670f, label %dec_label_pc_1670a

dec_label_pc_1670a:                               ; preds = %dec_label_pc_166f8, %dec_label_pc_166e6
  br label %dec_label_pc_1670f

dec_label_pc_1670f:                               ; preds = %dec_label_pc_166f8, %dec_label_pc_1670a
  %storemerge = phi i32 [ 0, %dec_label_pc_1670a ], [ 1, %dec_label_pc_166f8 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_1670f = icmp eq i32 %storemerge, 0
  br i1 %v5_1670f, label %dec_label_pc_1671a, label %dec_label_pc_16713

dec_label_pc_16713:                               ; preds = %dec_label_pc_1670f
  store i32 0, i32* @eax, align 8
  %v0_16765.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_16765

dec_label_pc_1671a:                               ; preds = %dec_label_pc_1670f
  %v0_1671a = load i32, i32* @ebp, align 4
  %v1_1671a = add i32 %v0_1671a, -28
  %v2_1671a = inttoptr i32 %v1_1671a to i32*
  %v3_1671a = load i32, i32* %v2_1671a, align 4
  store i32 %v3_1671a, i32* %eax.global-to-local, align 8
  %v1_1671d = add i32 %v3_1671a, 124
  %v2_1671d = inttoptr i32 %v1_1671d to i32*
  %v3_1671d = load i32, i32* %v2_1671d, align 4
  %v3_16720 = load i32, i32* %v2_1671a, align 4
  store i32 %v3_16720, i32* %eax.global-to-local, align 8
  %v1_16726 = call i32 @function_30d40(i32 %v3_16720)
  %v12_1672b = icmp eq i32 %v3_1671d, %v1_16726
  %v1_1672d = zext i1 %v12_1672b to i32
  %v3_1672d = and i32 %v1_16726, -256
  %v4_1672d = or i32 %v1_1672d, %v3_1672d
  store i32 %v4_1672d, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_16730 = icmp eq i1 %v12_1672b, false
  %v0_16746.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %v0_16746.pre, -28
  %.pre14 = inttoptr i32 %.pre to i32*
  br i1 %v5_16730, label %dec_label_pc_16746, label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %dec_label_pc_1671a
  %v3_16734 = load i32, i32* %.pre14, align 4
  store i32 %v3_16734, i32* %eax.global-to-local, align 8
  %v1_16737 = add i32 %v3_16734, 120
  %v2_16737 = inttoptr i32 %v1_16737 to i32*
  %v3_16737 = load i32, i32* %v2_16737, align 4
  store i32 %v3_16737, i32* %eax.global-to-local, align 8
  %v5_1673a = icmp ult i32 %v3_16737, 10
  store i1 %v5_1673a, i1* %cf.global-to-local, align 1
  %tmp17 = icmp ult i32 %v3_16737, 11
  br i1 %tmp17, label %dec_label_pc_16746, label %dec_label_pc_1673f

dec_label_pc_1673f:                               ; preds = %dec_label_pc_16734
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_16765

dec_label_pc_16746:                               ; preds = %dec_label_pc_1671a, %dec_label_pc_16734
  %v3_16746 = load i32, i32* %.pre14, align 4
  store i32 %v3_16746, i32* %eax.global-to-local, align 8
  %v1_16749 = add i32 %v3_16746, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_16749 = inttoptr i32 %v1_16749 to i32*
  %v3_16749 = load i32, i32* %v2_16749, align 4
  %v3_1674f = load i32, i32* %.pre14, align 4
  store i32 %v3_1674f, i32* %eax.global-to-local, align 8
  %v1_16752 = add i32 %v3_1674f, 120
  %v2_16752 = inttoptr i32 %v1_16752 to i32*
  %v3_16752 = load i32, i32* %v2_16752, align 4
  store i32 %v3_16752, i32* %eax.global-to-local, align 8
  %v7_16755 = icmp ult i32 %v3_16749, %v3_16752
  store i1 %v7_16755, i1* %cf.global-to-local, align 1
  %tmp18 = icmp ugt i32 %v3_16749, %v3_16752
  br i1 %tmp18, label %dec_label_pc_16759, label %dec_label_pc_16760

dec_label_pc_16759:                               ; preds = %dec_label_pc_16746
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_16765

dec_label_pc_16760:                               ; preds = %dec_label_pc_16746
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_16765

dec_label_pc_16765:                               ; preds = %dec_label_pc_16760, %dec_label_pc_16759, %dec_label_pc_1673f, %dec_label_pc_16713, %dec_label_pc_166df, %dec_label_pc_166ca
  %v0_16765 = phi i32 [ %v0_16746.pre, %dec_label_pc_16760 ], [ %v0_16746.pre, %dec_label_pc_16759 ], [ %v0_16746.pre, %dec_label_pc_1673f ], [ %v0_16765.pre, %dec_label_pc_16713 ], [ %v0_166c0, %dec_label_pc_166df ], [ %v0_166c0, %dec_label_pc_166ca ]
  %v2_1676f7 = phi i32 [ 1, %dec_label_pc_16760 ], [ 0, %dec_label_pc_16759 ], [ 0, %dec_label_pc_1673f ], [ 0, %dec_label_pc_16713 ], [ 0, %dec_label_pc_166df ], [ 1, %dec_label_pc_166ca ]
  %v1_16765 = add i32 %v0_16765, -12
  %v2_16765 = inttoptr i32 %v1_16765 to i32*
  %v3_16765 = load i32, i32* %v2_16765, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_16768 = icmp eq i32 %v3_16765, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_16768, label %bb, label %dec_label_pc_16771

bb:                                               ; preds = %dec_label_pc_16765
  %v1_1676f = call i32 @function_16776()
  store i32 %v1_1676f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16771

dec_label_pc_16771:                               ; preds = %bb, %dec_label_pc_16765
  %v2_1676f = phi i32 [ %v1_1676f, %bb ], [ %v2_1676f7, %dec_label_pc_16765 ]
  ret i32 %v2_1676f

; uselistorder directives
  uselistorder i32 %v0_16746.pre, { 3, 2, 1, 0 }
  uselistorder i32 %v1_16726, { 1, 0 }
  uselistorder i8 %v4_166b7, { 0, 2, 1 }
  uselistorder i8 %v1_166b7, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_16746, { 1, 0 }
  uselistorder label %dec_label_pc_1670f, { 1, 0 }
}

define i32 @function_16776() local_unnamed_addr {
dec_label_pc_16776:
  %v0_1677b = load i32, i32* @eax, align 8
  ret i32 %v0_1677b
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyERKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1677c:
  %v1_1679c = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_1679c = inttoptr i32 %v1_1679c to i32*
  %v3_1679c = load i32, i32* %v2_1679c, align 4
  %v1_167a2 = icmp eq i32 %v3_1679c, 0
  br i1 %v1_167a2, label %dec_label_pc_167c5, label %dec_label_pc_167a6

dec_label_pc_167a6:                               ; preds = %dec_label_pc_1677c
  %v3_167a9 = load i32, i32* %v2_1679c, align 4
  %v3_167c0 = call i32 @function_30ec4(i32 %arg1, i32 %v3_167a9, i32 %arg2)
  br label %dec_label_pc_167c5

dec_label_pc_167c5:                               ; preds = %dec_label_pc_167a6, %dec_label_pc_1677c
  %v1_167c8 = add i32 %arg1, 120
  %v2_167c8 = inttoptr i32 %v1_167c8 to i32*
  %v3_167c8 = load i32, i32* %v2_167c8, align 4
  %v1_167ce = add i32 %arg1, 124
  %v2_167ce = inttoptr i32 %v1_167ce to i32*
  %v3_167ce = load i32, i32* %v2_167ce, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_167df = call i32 @function_30f7e(i32 %arg1, i32 %v3_167ce, i32 %v3_167c8)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_167f0

bb:                                               ; preds = %dec_label_pc_167c5
  %v1_167ee = call i32 @function_167f5()
  br label %dec_label_pc_167f0

dec_label_pc_167f0:                               ; preds = %bb, %dec_label_pc_167c5
  %v2_167ee = phi i32 [ %v1_167ee, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_167c5 ]
  ret i32 %v2_167ee

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 4, 3, 0, 5 }
}

define i32 @function_167f5() local_unnamed_addr {
dec_label_pc_167f5:
  %v0_167f6 = load i32, i32* @eax, align 8
  ret i32 %v0_167f6
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_167f8:
  %v2_16812 = load i32, i32* %arg1, align 4
  %v1_16814 = icmp eq i32 %v2_16812, 0
  %v1_16816 = icmp eq i1 %v1_16814, false
  br i1 %v1_16816, label %bb, label %dec_label_pc_16818

bb:                                               ; preds = %dec_label_pc_167f8
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_16816 = call i32 @function_1683c(i32 %tmp105)
  br label %dec_label_pc_16818

dec_label_pc_16818:                               ; preds = %bb, %dec_label_pc_167f8
  %v3_16830 = phi i32 [ %v3_16816, %bb ], [ %v2_16812, %dec_label_pc_167f8 ]
  ret i32 %v3_16830

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1683c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1683c:
  %v0_1683c = load i32, i32* @ebp, align 4
  %v1_1683c = add i32 %v0_1683c, -28
  %v2_1683c = inttoptr i32 %v1_1683c to i32*
  %v3_1683c = load i32, i32* %v2_1683c, align 4
  %v1_1683f = inttoptr i32 %v3_1683c to i32*
  %v2_1683f = load i32, i32* %v1_1683f, align 4
  store i32 %v2_1683f, i32* @eax, align 8
  %v1_16841 = add i32 %v0_1683c, -12
  %v2_16841 = inttoptr i32 %v1_16841 to i32*
  %v3_16841 = load i32, i32* %v2_16841, align 4
  %v4_16844 = icmp eq i32 %v3_16841, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_16844, label %bb, label %dec_label_pc_1684d

bb:                                               ; preds = %dec_label_pc_1683c
  %v1_1684b = call i32 @function_16852()
  br label %dec_label_pc_1684d

dec_label_pc_1684d:                               ; preds = %bb, %dec_label_pc_1683c
  %v2_1684b = phi i32 [ %v1_1684b, %bb ], [ %v2_1683f, %dec_label_pc_1683c ]
  ret i32 %v2_1684b
}

define i32 @function_16852() local_unnamed_addr {
dec_label_pc_16852:
  %v0_16853 = load i32, i32* @eax, align 8
  ret i32 %v0_16853
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16854:
  %stack_var_-40 = alloca i32, align 4
  %v1_16877 = add i32 %arg1, 12
  %v2_1687e = ptrtoint i32* %stack_var_-40 to i32
  %v2_16884 = call i32 @function_2a522(i32 %v2_1687e, i32 %v1_16877)
  store i32 %arg1, i32* @eax, align 8
  %v1_1688f = call i32 @function_2a982(i32 %arg1)
  %v1_16897 = call i32 @function_2a9de(i32 %v1_1688f)
  %v15_1689c = icmp eq i32 %v1_16897, %arg2
  %v1_1689f = icmp eq i1 %v15_1689c, false
  %v5_168a2 = icmp eq i1 %v1_1689f, false
  %v1_168a4 = icmp eq i1 %v5_168a2, false
  br i1 %v1_168a4, label %bb, label %dec_label_pc_168aa

bb:                                               ; preds = %dec_label_pc_16854
  %v2_168a4 = call i32 @function_16954()
  br label %dec_label_pc_168aa

dec_label_pc_168aa:                               ; preds = %bb, %dec_label_pc_16854
  %v1_168b5 = xor i32 %arg1, 1
  %v4_168b5 = trunc i32 %v1_168b5 to i8
  %v5_168b8 = icmp eq i8 %v4_168b5, 0
  br i1 %v5_168b8, label %bb110, label %dec_label_pc_168bc

bb110:                                            ; preds = %dec_label_pc_168aa
  %v2_168ba = call i32 @function_1690b(i32 %arg1)
  br label %dec_label_pc_168bc

dec_label_pc_168bc:                               ; preds = %bb110, %dec_label_pc_168aa
  store i32 %arg1, i32* @eax, align 8
  %v1_168cf = call i32 @function_2a982(i32 %arg1)
  %v1_168d7 = call i32 @function_2a9de(i32 %v1_168cf)
  ret i32 %v1_168d7

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0, 3, 5, 4, 6 }
}

define i32 @function_168eb() local_unnamed_addr {
dec_label_pc_168eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_168eb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_168eb
}

define i32 @function_1690b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1690b:
  %v0_1690b = load i32, i32* @ebp, align 4
  %v1_1690b = add i32 %v0_1690b, -44
  %v2_1690b = inttoptr i32 %v1_1690b to i32*
  %v3_1690b = load i32, i32* %v2_1690b, align 4
  store i32 %v3_1690b, i32* @eax, align 8
  %v1_16911 = call i32 @function_2a982(i32 %v3_1690b)
  %v1_16919 = call i32 @function_2a9de(i32 %v1_16911)
  %v0_16920 = load i32, i32* @ebp, align 4
  %v1_16920 = add i32 %v0_16920, -32
  store i32 %v1_16920, i32* @eax, align 8
  %v2_1692a = call i32 @function_2aafe(i32 %v1_16920, i32 %v1_16919)
  %v0_1693a = load i32, i32* @ebp, align 4
  %v1_1693a = add i32 %v0_1693a, -32
  %v1_16949 = add i32 %v0_1693a, -44
  %v2_16949 = inttoptr i32 %v1_16949 to i32*
  %v3_16949 = load i32, i32* %v2_16949, align 4
  store i32 %v3_16949, i32* @eax, align 8
  %v4_1694f = call i32 @function_2cb8c(i32 %v3_16949, i32 0, i32 %v1_1693a, i32 0)
  ret i32 %v4_1694f

; uselistorder directives
  uselistorder i32 (i32)* @function_2a9de, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2a982, { 3, 2, 1, 0 }
}

define i32 @function_16954() local_unnamed_addr {
dec_label_pc_16954:
  %v0_16954 = load i32, i32* @ebp, align 4
  %v1_1695f = add i32 %v0_16954, -28
  %v2_1695f = inttoptr i32 %v1_1695f to i32*
  %v3_1695f = load i32, i32* %v2_1695f, align 4
  %v3_16962 = xor i32 %v3_1695f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_16962 = icmp eq i32 %v3_16962, 0
  store i32 %v3_16962, i32* @eax, align 8
  br i1 %v4_16962, label %bb, label %dec_label_pc_1696b

bb:                                               ; preds = %dec_label_pc_16954
  %v1_16954 = add i32 %v0_16954, -36
  %v2_16969 = call i32 @function_16997(i32 %v1_16954)
  store i32 %v2_16969, i32* @eax, align 8
  br label %dec_label_pc_1696b

dec_label_pc_1696b:                               ; preds = %bb, %dec_label_pc_16954
  %v0_1696b = call i32 @function_16992()
  ret i32 %v0_1696b

; uselistorder directives
  uselistorder i32 %v0_16954, { 1, 0 }
}

define i32 @function_16976() local_unnamed_addr {
dec_label_pc_16976:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16976 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16976 = add i32 %v0_16976, -1996297229
  %v2_16976 = inttoptr i32 %v1_16976 to i32*
  %v3_16976 = load i32, i32* %v2_16976, align 4
  %v4_16976 = add i32 %v3_16976, -1
  store i32 %v4_16976, i32* %v2_16976, align 4
  %v0_1697c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1697c
}

define i32 @function_16982() local_unnamed_addr {
dec_label_pc_16982:
  %eax.global-to-local = alloca i32, align 4
  %v0_16982 = load i32, i32* %eax.global-to-local, align 8
  %v11_16982 = and i32 %v0_16982, -24
  store i32 %v11_16982, i32* @eax, align 8
  %v0_16984 = call i32 @function_8900013b()
  store i32 %v0_16984, i32* %eax.global-to-local, align 8
  ret i32 %v0_16984
}

define i32 @function_16992() local_unnamed_addr {
dec_label_pc_16992:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_16997(i32 %arg1) local_unnamed_addr {
dec_label_pc_16997:
  %v0_16997 = load i32, i32* @ebp, align 4
  %v1_1699d = inttoptr i32 %v0_16997 to i32*
  %v2_1699d = load i32, i32* %v1_1699d, align 4
  store i32 %v2_1699d, i32* @ebp, align 4
  %v0_1699e = load i32, i32* @eax, align 8
  ret i32 %v0_1699e
}

define i32 @_ZNK5boost10shared_ptrINS_8signals219optional_last_valueISsEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_169a0:
  %v2_169ba = load i32, i32* %arg1, align 4
  %v1_169bc = icmp eq i32 %v2_169ba, 0
  %v1_169be = icmp eq i1 %v1_169bc, false
  br i1 %v1_169be, label %bb, label %dec_label_pc_169c0

bb:                                               ; preds = %dec_label_pc_169a0
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_169be = call i32 @function_169e4(i32 %tmp105)
  br label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %bb, %dec_label_pc_169a0
  %v3_169d8 = phi i32 [ %v3_169be, %bb ], [ %v2_169ba, %dec_label_pc_169a0 ]
  ret i32 %v3_169d8

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_169e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_169e4:
  %v0_169e4 = load i32, i32* @ebp, align 4
  %v1_169e4 = add i32 %v0_169e4, -28
  %v2_169e4 = inttoptr i32 %v1_169e4 to i32*
  %v3_169e4 = load i32, i32* %v2_169e4, align 4
  %v1_169e7 = inttoptr i32 %v3_169e4 to i32*
  %v2_169e7 = load i32, i32* %v1_169e7, align 4
  store i32 %v2_169e7, i32* @eax, align 8
  %v1_169e9 = add i32 %v0_169e4, -12
  %v2_169e9 = inttoptr i32 %v1_169e9 to i32*
  %v3_169e9 = load i32, i32* %v2_169e9, align 4
  %v4_169ec = icmp eq i32 %v3_169e9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_169ec, label %bb, label %dec_label_pc_169f5

bb:                                               ; preds = %dec_label_pc_169e4
  %v1_169f3 = call i32 @function_169fa()
  br label %dec_label_pc_169f5

dec_label_pc_169f5:                               ; preds = %bb, %dec_label_pc_169e4
  %v2_169f3 = phi i32 [ %v1_169f3, %bb ], [ %v2_169e7, %dec_label_pc_169e4 ]
  ret i32 %v2_169f3
}

define i32 @function_169fa() local_unnamed_addr {
dec_label_pc_169fa:
  %v0_169fb = load i32, i32* @eax, align 8
  ret i32 %v0_169fb
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_169fc:
  %v2_16a1c = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_16a28 = call i32 @function_314a8(i32 %arg1, i32 %v2_16a1c)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16a3c

bb:                                               ; preds = %dec_label_pc_169fc
  %v1_16a3a = call i32 @function_16a41()
  br label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %bb, %dec_label_pc_169fc
  %v2_16a3a = phi i32 [ %v1_16a3a, %bb ], [ %arg1, %dec_label_pc_169fc ]
  ret i32 %v2_16a3a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_16a41() local_unnamed_addr {
dec_label_pc_16a41:
  %v0_16a42 = load i32, i32* @eax, align 8
  ret i32 %v0_16a42
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16a46:
  store i32 %arg1, i32* @eax, align 8
  %v2_16a70 = call i32 @function_314f2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16a84

bb:                                               ; preds = %dec_label_pc_16a46
  %v1_16a82 = call i32 @function_16a89()
  br label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %bb, %dec_label_pc_16a46
  %v2_16a82 = phi i32 [ %v1_16a82, %bb ], [ %arg1, %dec_label_pc_16a46 ]
  ret i32 %v2_16a82

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_16a89() local_unnamed_addr {
dec_label_pc_16a89:
  %v0_16a8a = load i32, i32* @eax, align 8
  ret i32 %v0_16a8a
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16a8e:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_16aa9 = add i32 %tmp107, 12
  store i32 %tmp107, i32* @eax, align 8
  store i32 %tmp107, i32* %stack_var_-60, align 4
  %v2_16ab6 = call i32 @function_2cd86(i32 %tmp107, i32 %v1_16aa9)
  store i32 %v2_16ab6, i32* @eax, align 8
  %v4_16abb = trunc i32 %v2_16ab6 to i8
  %v5_16abb = icmp eq i8 %v4_16abb, 0
  br i1 %v5_16abb, label %dec_label_pc_16bd7.preheader, label %dec_label_pc_16ac3

dec_label_pc_16bd7.preheader:                     ; preds = %dec_label_pc_16a8e
  %v1_16bda = add i32 %tmp107, 4
  %v2_16adf = ptrtoint i32* %stack_var_-24 to i32
  %v1_16aed = add i32 %tmp107, 8
  %v2_16aed = inttoptr i32 %v1_16aed to i32*
  %v2_16b04 = ptrtoint i32* %stack_var_-20 to i32
  %v3_16bad = inttoptr i32 %v1_16aa9 to i32*
  br label %dec_label_pc_16bd7

dec_label_pc_16ac3:                               ; preds = %dec_label_pc_16a8e
  %v0_16ac3 = call i32 @function_16c32()
  store i32 %v0_16ac3, i32* %eax.global-to-local, align 8
  ret i32 %v0_16ac3

dec_label_pc_16ac8:                               ; preds = %dec_label_pc_16bd7
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v1_16acb = load i32, i32* @esp, align 4
  %v2_16acb = inttoptr i32 %v1_16acb to i32*
  store i32 %tmp107, i32* %v2_16acb, align 4
  %v0_16ace = call i32 @function_30d00()
  store i32 %v0_16ace, i32* @eax, align 8
  %v1_16ad3 = load i32, i32* @esp, align 4
  %v2_16ad3 = inttoptr i32 %v1_16ad3 to i32*
  store i32 %v0_16ace, i32* %v2_16ad3, align 4
  %v0_16ad6 = call i32 @function_30d32()
  %v1_16adb = load i32, i32* @esp, align 4
  %v2_16adb = add i32 %v1_16adb, 4
  %v3_16adb = inttoptr i32 %v2_16adb to i32*
  store i32 %v0_16ad6, i32* %v3_16adb, align 4
  store i32 %v2_16adf, i32* %eax.global-to-local, align 8
  %v1_16ae2 = load i32, i32* @esp, align 4
  %v2_16ae2 = inttoptr i32 %v1_16ae2 to i32*
  store i32 %v2_16adf, i32* %v2_16ae2, align 4
  %v0_16ae5 = call i32 @_Unwind_Resume.1494()
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v3_16aed = load i32, i32* %v2_16aed, align 4
  %v1_16af0 = add i32 %v3_16aed, 8
  %v1_16af3 = load i32, i32* @esp, align 4
  %v2_16af3 = inttoptr i32 %v1_16af3 to i32*
  store i32 %v1_16af0, i32* %v2_16af3, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v3_16afe = load i32, i32* %v2_16aed, align 4
  %v1_16b01 = add i32 %v3_16afe, 8
  %v1_16b07 = load i32, i32* @esp, align 4
  %v2_16b07 = add i32 %v1_16b07, 4
  %v3_16b07 = inttoptr i32 %v2_16b07 to i32*
  store i32 %v1_16b01, i32* %v3_16b07, align 4
  %v1_16b0b = load i32, i32* @esp, align 4
  %v2_16b0b = inttoptr i32 %v1_16b0b to i32*
  store i32 %v2_16b04, i32* %v2_16b0b, align 4
  %v0_16b13 = load i32, i32* @esp, align 4
  %v1_16b13 = add i32 %v0_16b13, -4
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v2_16b19 = inttoptr i32 %v1_16b13 to i32*
  store i32 %tmp107, i32* %v2_16b19, align 4
  %v0_16b1c = call i32 @function_30d00()
  store i32 %v0_16b1c, i32* @eax, align 8
  %v1_16b21 = load i32, i32* @esp, align 4
  %v2_16b21 = inttoptr i32 %v1_16b21 to i32*
  store i32 %v0_16b1c, i32* %v2_16b21, align 4
  %v0_16b24 = call i32 @function_30d8e()
  store i32 %v0_16b24, i32* %eax.global-to-local, align 8
  %v3_16b29 = load i32, i32* %stack_var_-20, align 4
  %v1_16b2c = load i32, i32* @esp, align 4
  %v2_16b2c = add i32 %v1_16b2c, 4
  %v3_16b2c = inttoptr i32 %v2_16b2c to i32*
  store i32 %v3_16b29, i32* %v3_16b2c, align 4
  %v0_16b30 = load i32, i32* %eax.global-to-local, align 8
  %v1_16b30 = load i32, i32* @esp, align 4
  %v2_16b30 = inttoptr i32 %v1_16b30 to i32*
  store i32 %v0_16b30, i32* %v2_16b30, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v1_16b3b = load i32, i32* @esp, align 4
  %v2_16b3b = inttoptr i32 %v1_16b3b to i32*
  store i32 %tmp107, i32* %v2_16b3b, align 4
  %v0_16b3e = call i32 @function_30d00()
  store i32 %v0_16b3e, i32* @eax, align 8
  %v1_16b43 = load i32, i32* @esp, align 4
  %v2_16b43 = inttoptr i32 %v1_16b43 to i32*
  store i32 %v0_16b3e, i32* %v2_16b43, align 4
  %v0_16b46 = call i32 @function_30d8e()
  store i32 %v0_16b46, i32* %eax.global-to-local, align 8
  %v1_16b4b = load i32, i32* @esp, align 4
  %v2_16b4b = inttoptr i32 %v1_16b4b to i32*
  store i32 %v0_16b46, i32* %v2_16b4b, align 4
  %v0_16b53 = load i32, i32* %eax.global-to-local, align 8
  %v4_16b53 = trunc i32 %v0_16b53 to i8
  %v5_16b53 = icmp eq i8 %v4_16b53, 0
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v3_16b71 = load i32, i32* %v2_16aed, align 4
  store i32 %v3_16b71, i32* %eax.global-to-local, align 8
  br i1 %v5_16b53, label %dec_label_pc_16b6e, label %dec_label_pc_16b57

dec_label_pc_16b57:                               ; preds = %dec_label_pc_16ac8
  %v1_16b5d = add i32 %v3_16b71, 144
  %v2_16b5d = inttoptr i32 %v1_16b5d to i32*
  %v3_16b5d = load i32, i32* %v2_16b5d, align 4
  %v1_16b63 = add i32 %v3_16b5d, 1
  store i32 %v1_16b63, i32* %v2_16b5d, align 4
  br label %dec_label_pc_16b83

dec_label_pc_16b6e:                               ; preds = %dec_label_pc_16ac8
  %v1_16b74 = add i32 %v3_16b71, 148
  %v2_16b74 = inttoptr i32 %v1_16b74 to i32*
  %v3_16b74 = load i32, i32* %v2_16b74, align 4
  %v1_16b7a = add i32 %v3_16b74, 1
  store i32 %v1_16b7a, i32* %v2_16b74, align 4
  br label %dec_label_pc_16b83

dec_label_pc_16b83:                               ; preds = %dec_label_pc_16b6e, %dec_label_pc_16b57
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v1_16b86 = load i32, i32* @esp, align 4
  %v2_16b86 = inttoptr i32 %v1_16b86 to i32*
  store i32 %tmp107, i32* %v2_16b86, align 4
  %v0_16b89 = call i32 @function_30d00()
  store i32 %v0_16b89, i32* @eax, align 8
  %v1_16b8e = load i32, i32* @esp, align 4
  %v2_16b8e = inttoptr i32 %v1_16b8e to i32*
  store i32 %v0_16b89, i32* %v2_16b8e, align 4
  %v0_16b91 = call i32 @function_30d8e()
  store i32 %v0_16b91, i32* %eax.global-to-local, align 8
  %v1_16b96 = load i32, i32* @esp, align 4
  %v2_16b96 = inttoptr i32 %v1_16b96 to i32*
  store i32 %v0_16b91, i32* %v2_16b96, align 4
  %v0_16b9e = load i32, i32* %eax.global-to-local, align 8
  %v1_16b9e = xor i32 %v0_16b9e, 1
  %v4_16b9e = trunc i32 %v1_16b9e to i8
  store i32 %v1_16b9e, i32* %eax.global-to-local, align 8
  %v5_16ba1 = icmp eq i8 %v4_16b9e, 0
  br i1 %v5_16ba1, label %dec_label_pc_16bbc, label %dec_label_pc_16ba5

dec_label_pc_16ba5:                               ; preds = %dec_label_pc_16b83
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v2_16bab = load i32, i32* %arg1, align 4
  store i32 %v2_16bab, i32* %v3_16bad, align 4
  br label %dec_label_pc_16bbc

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16b83, %dec_label_pc_16ba5
  %storemerge = phi i32 [ 0, %dec_label_pc_16ba5 ], [ 1, %dec_label_pc_16b83 ]
  store i32 %storemerge, i32* @ebx, align 8
  store i32 %v2_16adf, i32* %eax.global-to-local, align 8
  %v1_16bbf = load i32, i32* @esp, align 4
  %v2_16bbf = inttoptr i32 %v1_16bbf to i32*
  store i32 %v2_16adf, i32* %v2_16bbf, align 4
  %v0_16bc7 = load i32, i32* @ebx, align 8
  %v10_16bc7 = icmp eq i32 %v0_16bc7, 1
  %v1_16bca = icmp eq i1 %v10_16bc7, false
  br i1 %v1_16bca, label %dec_label_pc_16bf4, label %dec_label_pc_16bcc

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16bbc
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v1_16bcf = load i32, i32* @esp, align 4
  %v2_16bcf = inttoptr i32 %v1_16bcf to i32*
  store i32 %tmp107, i32* %v2_16bcf, align 4
  %v0_16bd2 = call i32 @function_31066()
  store i32 %v0_16bd2, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16bd7

dec_label_pc_16bd7:                               ; preds = %dec_label_pc_16bd7.preheader, %dec_label_pc_16bcc
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v1_16be0 = load i32, i32* @esp, align 4
  %v2_16be0 = add i32 %v1_16be0, 4
  %v3_16be0 = inttoptr i32 %v2_16be0 to i32*
  store i32 %v1_16bda, i32* %v3_16be0, align 4
  %v0_16be4 = load i32, i32* %eax.global-to-local, align 8
  %v1_16be4 = load i32, i32* @esp, align 4
  %v2_16be4 = inttoptr i32 %v1_16be4 to i32*
  store i32 %v0_16be4, i32* %v2_16be4, align 4
  %v0_16be7 = call i32 @function_30cc0()
  store i32 %v0_16be7, i32* %eax.global-to-local, align 8
  %v4_16bec = trunc i32 %v0_16be7 to i8
  %v5_16bec = icmp eq i8 %v4_16bec, 0
  %v1_16bee = icmp eq i1 %v5_16bec, false
  br i1 %v1_16bee, label %dec_label_pc_16ac8, label %dec_label_pc_16bf4

dec_label_pc_16bf4:                               ; preds = %dec_label_pc_16bbc, %dec_label_pc_16bd7
  store i32 %tmp107, i32* @eax, align 8
  %v1_16bfd = load i32, i32* @esp, align 4
  %v2_16bfd = add i32 %v1_16bfd, 4
  %v3_16bfd = inttoptr i32 %v2_16bfd to i32*
  store i32 %v1_16bda, i32* %v3_16bfd, align 4
  %v0_16c01 = load i32, i32* @eax, align 8
  %v1_16c01 = load i32, i32* @esp, align 4
  %v2_16c01 = inttoptr i32 %v1_16c01 to i32*
  store i32 %v0_16c01, i32* %v2_16c01, align 4
  %v0_16c04 = load i32, i32* %stack_var_-60, align 4
  %v2_16c04 = call i32 @function_2cd86(i32 %v0_16c04, i32 %v1_16aa9)
  store i32 %v2_16c04, i32* @eax, align 8
  %v4_16c09 = trunc i32 %v2_16c04 to i8
  %v5_16c09 = icmp eq i8 %v4_16c09, 0
  br i1 %v5_16c09, label %bb, label %dec_label_pc_16c0d

bb:                                               ; preds = %dec_label_pc_16bf4
  %v1_16c0b = call i32 @function_16c32()
  store i32 %v1_16c0b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_16c0d

dec_label_pc_16c0d:                               ; preds = %bb, %dec_label_pc_16bf4
  store i32 %tmp107, i32* %eax.global-to-local, align 8
  %v2_16c13 = inttoptr i32 %v1_16bda to i32*
  %v3_16c13 = load i32, i32* %v2_16c13, align 4
  store i32 %v3_16c13, i32* %v3_16bad, align 4
  %v0_16c19 = call i32 @function_16c33()
  store i32 %v0_16c19, i32* %eax.global-to-local, align 8
  ret i32 %v0_16c19

; uselistorder directives
  uselistorder i32 %v3_16b71, { 1, 0, 2 }
  uselistorder i32 %v1_16aa9, { 1, 0, 2 }
  uselistorder i32 %tmp107, { 3, 4, 18, 2, 1, 0, 6, 5, 7, 9, 8, 11, 10, 12, 13, 16, 15, 14, 17, 22, 21, 20, 19 }
  uselistorder i32* %eax.global-to-local, { 21, 22, 0, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26 }
  uselistorder i32 ()* @function_30d8e, { 2, 1, 0 }
  uselistorder i32 ()* @function_30d00, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_16c32, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2cd86, { 1, 0 }
  uselistorder label %dec_label_pc_16bf4, { 1, 0 }
  uselistorder label %dec_label_pc_16bd7, { 1, 0 }
  uselistorder label %dec_label_pc_16bbc, { 1, 0 }
}

define i32 @function_16c1c() local_unnamed_addr {
dec_label_pc_16c1c:
  %eax.global-to-local = alloca i32, align 4
  %v0_16c1c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16c1c
}

define i32 @function_16c32() local_unnamed_addr {
dec_label_pc_16c32:
  %v0_16c32 = load i32, i32* @eax, align 8
  ret i32 %v0_16c32
}

define i32 @function_16c33() local_unnamed_addr {
dec_label_pc_16c33:
  %v0_16c33 = load i32, i32* @ebp, align 4
  %v1_16c33 = add i32 %v0_16c33, -12
  %v2_16c33 = inttoptr i32 %v1_16c33 to i32*
  %v3_16c33 = load i32, i32* %v2_16c33, align 4
  %v3_16c36 = xor i32 %v3_16c33, ptrtoint ([3 x i8]* @3 to i32)
  %v4_16c36 = icmp eq i32 %v3_16c36, 0
  store i32 %v3_16c36, i32* @eax, align 8
  br i1 %v4_16c36, label %bb, label %dec_label_pc_16c3f

bb:                                               ; preds = %dec_label_pc_16c33
  %v1_16c3d = call i32 @function_16c44()
  br label %dec_label_pc_16c3f

dec_label_pc_16c3f:                               ; preds = %bb, %dec_label_pc_16c33
  %v2_16c3d = phi i32 [ %v1_16c3d, %bb ], [ %v3_16c36, %dec_label_pc_16c33 ]
  ret i32 %v2_16c3d
}

define i32 @function_16c44() local_unnamed_addr {
dec_label_pc_16c44:
  %v0_16c48 = load i32, i32* @eax, align 8
  ret i32 %v0_16c48
}

define i32 @_ZNK5boost8signals219optional_last_valueISsEclINS0_6detail20slot_call_iterator_tINS4_12signal1_implISsPKcS2_iSt4lessIiENS_8functionIFSsS8_EEENSB_IFSsRKNS0_10connectionES8_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS8_SD_EESJ_EEEEESW_EEEENSR_ISsEET_S11_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_16c4a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-52, align 4
  store i32 %arg7, i32* %stack_var_-68, align 4
  store i32 %arg1, i32* @eax, align 8
  %v1_16c9e = call i32 @function_2d1cc(i32 %arg1)
  %v4_16ccd = ptrtoint i32* %stack_var_-68 to i32
  %v2_16cd1 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_16cd1, i32* @eax, align 8
  %v2_16cd72 = call i32 @function_3191e(i32 %v2_16cd1, i32 %v4_16ccd)
  %v4_16cdc3 = trunc i32 %v2_16cd72 to i8
  %v5_16cdc4 = icmp eq i8 %v4_16cdc3, 0
  %v1_16cde6 = icmp eq i1 %v5_16cdc4, false
  br i1 %v1_16cde6, label %dec_label_pc_16ca5, label %dec_label_pc_16ce0

dec_label_pc_16ca5:                               ; preds = %dec_label_pc_16c4a, %dec_label_pc_16ca5
  store i32 %v2_16cd1, i32* @eax, align 8
  %v1_16cab = call i32 @function_31968(i32 %v2_16cd1)
  %v2_16cba = call i32 @function_319a6(i32 %arg1, i32 %v1_16cab)
  %v1_16cc5 = call i32 @function_319ec(i32 %v2_16cd1)
  store i32 %v2_16cd1, i32* @eax, align 8
  %v2_16cd7 = call i32 @function_3191e(i32 %v2_16cd1, i32 %v4_16ccd)
  %v4_16cdc = trunc i32 %v2_16cd7 to i8
  %v5_16cdc = icmp eq i8 %v4_16cdc, 0
  %v1_16cde = icmp eq i1 %v5_16cdc, false
  br i1 %v1_16cde, label %dec_label_pc_16ca5, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16ca5, %dec_label_pc_16c4a
  %v0_16ce0 = call i32 @function_16d14()
  ret i32 %v0_16ce0

; uselistorder directives
  uselistorder i32 %v2_16cd1, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32 %v4_16ccd, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_3191e, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16ca5, { 1, 0 }
}

define i32 @function_16ce2() local_unnamed_addr {
dec_label_pc_16ce2:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16ce2 = load i32, i32* %edx.global-to-local, align 8
  %v10_16ce2 = icmp eq i32 %v0_16ce2, 1
  %v3_16ceb = load i32, i32* %eax.global-to-local, align 8
  br i1 %v10_16ce2, label %dec_label_pc_16ceb, label %dec_label_pc_16ce7

dec_label_pc_16ce7:                               ; preds = %dec_label_pc_16ce2
  store i32 %v3_16ceb, i32* @ebx, align 8
  %v0_16ce9 = call i32 @function_16cff()
  store i32 %v0_16ce9, i32* %eax.global-to-local, align 8
  ret i32 %v0_16ce9

dec_label_pc_16ceb:                               ; preds = %dec_label_pc_16ce2
  ret i32 %v3_16ceb

; uselistorder directives
  uselistorder i32 %v3_16ceb, { 1, 0 }
}

define i32 @function_16cfb() local_unnamed_addr {
dec_label_pc_16cfb:
  %eax.global-to-local = alloca i32, align 4
  %v0_16cfb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16cfb
}

define i32 @function_16cfe() local_unnamed_addr {
dec_label_pc_16cfe:
  %eax.global-to-local = alloca i32, align 4
  %v0_16cfe = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16cfe
}

define i32 @function_16cff() local_unnamed_addr {
dec_label_pc_16cff:
  %v0_16cff = load i32, i32* @ebp, align 4
  %v1_16cff = add i32 %v0_16cff, -28
  %v2_16cff = inttoptr i32 %v1_16cff to i32*
  %v3_16cff = load i32, i32* %v2_16cff, align 4
  %v1_16d05 = call i32 @_ZN5boost6detail8function13basic_vtable3IbRKSsS4_jE9assign_toIPFbS4_S4_jEEEbT_RNS1_15function_bufferENS1_16function_ptr_tagE(i32 %v3_16cff)
  %v0_16d0a = load i32, i32* @ebx, align 8
  ret i32 %v0_16d0a
}

define i32 @function_16d14() local_unnamed_addr {
dec_label_pc_16d14:
  %v0_16d14 = load i32, i32* @ebp, align 4
  %v1_16d14 = add i32 %v0_16d14, -28
  %v2_16d14 = inttoptr i32 %v1_16d14 to i32*
  %v3_16d14 = load i32, i32* %v2_16d14, align 4
  store i32 %v3_16d14, i32* @eax, align 8
  %v1_16d17 = add i32 %v0_16d14, -12
  %v2_16d17 = inttoptr i32 %v1_16d17 to i32*
  %v3_16d17 = load i32, i32* %v2_16d17, align 4
  %v4_16d1a = icmp eq i32 %v3_16d17, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_16d1a, label %bb, label %dec_label_pc_16d23

bb:                                               ; preds = %dec_label_pc_16d14
  %v1_16d21 = call i32 @function_16d28()
  br label %dec_label_pc_16d23

dec_label_pc_16d23:                               ; preds = %bb, %dec_label_pc_16d14
  %v2_16d21 = phi i32 [ %v1_16d21, %bb ], [ %v3_16d14, %dec_label_pc_16d14 ]
  ret i32 %v2_16d21
}

define i32 @function_16d28() local_unnamed_addr {
dec_label_pc_16d28:
  %v0_16d2d = load i32, i32* @eax, align 8
  ret i32 %v0_16d2d
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12destroy_implEN4mpl_5bool_ILb0EEE(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_16d30:
  store i32 %arg1, i32* @eax, align 8
  %v1_16d54 = call i32 @function_31b1a(i32 %arg1)
  ret i32 %v1_16d54
}

define i32 @function_16d77() local_unnamed_addr {
dec_label_pc_16d77:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16d77 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16d77 = add i32 %v0_16d77, -1
  store i32 %v1_16d77, i32* %ecx.global-to-local, align 4
  %v0_16d79 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_16d79
}

define i32 @_ZN5boost15optional_detail15aligned_storageISsE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d7a:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16da0

bb:                                               ; preds = %dec_label_pc_16d7a
  %v2_16d9e = call i32 @function_16da5(i32 %arg1)
  br label %dec_label_pc_16da0

dec_label_pc_16da0:                               ; preds = %bb, %dec_label_pc_16d7a
  %v3_16d9e = phi i32 [ %v2_16d9e, %bb ], [ %arg1, %dec_label_pc_16d7a ]
  ret i32 %v3_16d9e
}

define i32 @function_16da5(i32 %arg1) local_unnamed_addr {
dec_label_pc_16da5:
  %v0_16da6 = load i32, i32* @eax, align 8
  ret i32 %v0_16da6
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16da8:
  %v1_16dc2 = add i32 %arg1, 4
  store i32 %v1_16dc2, i32* @eax, align 8
  %v1_16dc8 = call i32 @function_2db22(i32 %v1_16dc2)
  store i32 %v1_16dc8, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16ddf

bb:                                               ; preds = %dec_label_pc_16da8
  %v2_16ddd = call i32 @function_16de4(i32 %v1_16dc8)
  br label %dec_label_pc_16ddf

dec_label_pc_16ddf:                               ; preds = %bb, %dec_label_pc_16da8
  %v3_16ddd = phi i32 [ %v2_16ddd, %bb ], [ %v1_16dc8, %dec_label_pc_16da8 ]
  ret i32 %v3_16ddd
}

define i32 @function_16de4(i32 %arg1) local_unnamed_addr {
dec_label_pc_16de4:
  %v0_16de5 = load i32, i32* @eax, align 8
  ret i32 %v0_16de5
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE11dereferenceEPSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_16de6:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16e19

bb:                                               ; preds = %dec_label_pc_16de6
  %v4_16e17 = sext i8 %arg3 to i32
  %v5_16e17 = call i32 @function_16e1e(i32 %v4_16e17, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16e19

dec_label_pc_16e19:                               ; preds = %bb, %dec_label_pc_16de6
  %v6_16e17 = phi i32 [ %v5_16e17, %bb ], [ %arg2, %dec_label_pc_16de6 ]
  ret i32 %v6_16e17
}

define i32 @function_16e1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16e1e:
  %v0_16e1f = load i32, i32* @eax, align 8
  ret i32 %v0_16e1f
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueIvEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e20:
  %v1_16e3a = add i32 %arg1, 4
  store i32 %v1_16e3a, i32* @eax, align 8
  %v1_16e40 = call i32 @function_19000(i32 %v1_16e3a)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16e51

bb:                                               ; preds = %dec_label_pc_16e20
  %v1_16e4f = call i32 @function_16e56()
  br label %dec_label_pc_16e51

dec_label_pc_16e51:                               ; preds = %bb, %dec_label_pc_16e20
  %v2_16e4f = phi i32 [ %v1_16e4f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_16e20 ]
  ret i32 %v2_16e4f
}

define i32 @function_16e56() local_unnamed_addr {
dec_label_pc_16e56:
  %v0_16e57 = load i32, i32* @eax, align 8
  ret i32 %v0_16e57
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e58:
  %stack_var_-17 = alloca i32, align 4
  %v1_16e75 = call i32 @function_31c8f(i32 %arg1)
  %v2_16e7e = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_16e7e, i32* @eax, align 8
  %v2_16e84 = call i32 @function_2dd84(i32 %v2_16e7e, i32 %v1_16e75)
  store i32 %v2_16e84, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16e95

bb:                                               ; preds = %dec_label_pc_16e58
  %v1_16e93 = call i32 @function_16e9a()
  br label %dec_label_pc_16e95

dec_label_pc_16e95:                               ; preds = %bb, %dec_label_pc_16e58
  %v2_16e93 = phi i32 [ %v1_16e93, %bb ], [ %v2_16e84, %dec_label_pc_16e58 ]
  ret i32 %v2_16e93
}

define i32 @function_16e9a() local_unnamed_addr {
dec_label_pc_16e9a:
  %v0_16e9b = load i32, i32* @eax, align 8
  ret i32 %v0_16e9b
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e9c:
  %v1_16eb6 = add i32 %arg1, 8
  %v2_16eb6 = inttoptr i32 %v1_16eb6 to i32*
  %v3_16eb6 = load i32, i32* %v2_16eb6, align 4
  store i32 %v3_16eb6, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16ec5

bb:                                               ; preds = %dec_label_pc_16e9c
  %v2_16ec3 = call i32 @function_16eca(i32 %arg1)
  br label %dec_label_pc_16ec5

dec_label_pc_16ec5:                               ; preds = %bb, %dec_label_pc_16e9c
  %v3_16ec3 = phi i32 [ %v2_16ec3, %bb ], [ %v3_16eb6, %dec_label_pc_16e9c ]
  ret i32 %v3_16ec3
}

define i32 @function_16eca(i32 %arg1) local_unnamed_addr {
dec_label_pc_16eca:
  %v0_16ecb = load i32, i32* @eax, align 8
  ret i32 %v0_16ecb
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ecc:
  %v1_16ee6 = add i32 %arg1, 12
  %v2_16ee6 = inttoptr i32 %v1_16ee6 to i32*
  %v3_16ee6 = load i32, i32* %v2_16ee6, align 4
  store i32 %v3_16ee6, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16ef5

bb:                                               ; preds = %dec_label_pc_16ecc
  %v2_16ef3 = call i32 @function_16efa(i32 %arg1)
  br label %dec_label_pc_16ef5

dec_label_pc_16ef5:                               ; preds = %bb, %dec_label_pc_16ecc
  %v3_16ef3 = phi i32 [ %v2_16ef3, %bb ], [ %v3_16ee6, %dec_label_pc_16ecc ]
  ret i32 %v3_16ef3
}

define i32 @function_16efa(i32 %arg1) local_unnamed_addr {
dec_label_pc_16efa:
  %v0_16efb = load i32, i32* @eax, align 8
  ret i32 %v0_16efb
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_16efc:
  %v1_16f16 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_16f16, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16f25

bb:                                               ; preds = %dec_label_pc_16efc
  %v2_16f23 = call i32 @function_16f2a(i32 %arg1)
  br label %dec_label_pc_16f25

dec_label_pc_16f25:                               ; preds = %bb, %dec_label_pc_16efc
  %v3_16f23 = phi i32 [ %v2_16f23, %bb ], [ %v1_16f16, %dec_label_pc_16efc ]
  ret i32 %v3_16f23
}

define i32 @function_16f2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f2a:
  %v0_16f2b = load i32, i32* @eax, align 8
  ret i32 %v0_16f2b
}

define i32 @_ZNKSt10_Select1stISt4pairIKSsSsEEclERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f2c:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_16f58

bb:                                               ; preds = %dec_label_pc_16f2c
  %v3_16f56 = call i32 @function_16f5d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_16f58

dec_label_pc_16f58:                               ; preds = %bb, %dec_label_pc_16f2c
  %v4_16f56 = phi i32 [ %v3_16f56, %bb ], [ %arg2, %dec_label_pc_16f2c ]
  ret i32 %v4_16f56
}

define i32 @function_16f5d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f5d:
  %v0_16f5e = load i32, i32* @eax, align 8
  ret i32 %v0_16f5e
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16f60:
  %v1_16fb4 = xor i32 %arg2, 1
  %v4_16fb4 = trunc i32 %v1_16fb4 to i8
  %v5_16fb7 = icmp eq i8 %v4_16fb4, 0
  %v10_16fdf121 = icmp eq i32 %arg3, 0
  %v1_16fe3122 = icmp eq i1 %v10_16fdf121, false
  %v5_16fe6123 = icmp eq i1 %v1_16fe3122, false
  %v1_16fe8124 = icmp eq i1 %v5_16fe6123, false
  br i1 %v1_16fe8124, label %dec_label_pc_16f91.lr.ph, label %dec_label_pc_16fea

dec_label_pc_16f91:                               ; preds = %dec_label_pc_16f91, %dec_label_pc_16f91.lr.ph
  br i1 %v5_16fb7, label %dec_label_pc_16fd1, label %dec_label_pc_16f91

dec_label_pc_16fd1:                               ; preds = %dec_label_pc_16f91
  store i32 %stack_var_-40.0.ph125, i32* @edx, align 8
  store i32 %stack_var_-40.0.ph125, i32* @eax, align 8
  %v3_16fd7 = call i32 @function_2bc27(i32 %stack_var_-40.0.ph125, i32 %stack_var_-40.0.ph125, i32 %arg5)
  %v10_16fdf = icmp eq i32 %v3_16fd7, 0
  %v1_16fe3 = icmp eq i1 %v10_16fdf, false
  %v5_16fe6 = icmp eq i1 %v1_16fe3, false
  %v1_16fe8 = icmp eq i1 %v5_16fe6, false
  br i1 %v1_16fe8, label %dec_label_pc_16f91.lr.ph, label %dec_label_pc_16fea

dec_label_pc_16f91.lr.ph:                         ; preds = %dec_label_pc_16f60, %dec_label_pc_16fd1
  %stack_var_-40.0.ph125 = phi i32 [ %v3_16fd7, %dec_label_pc_16fd1 ], [ %arg3, %dec_label_pc_16f60 ]
  br label %dec_label_pc_16f91

dec_label_pc_16fea:                               ; preds = %dec_label_pc_16f60, %dec_label_pc_16fd1
  store i32 %arg1, i32* @eax, align 8
  %v2_16ff7 = call i32 @function_2df74(i32 %arg1, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1700b

bb:                                               ; preds = %dec_label_pc_16fea
  %v1_17009 = call i32 @function_17010()
  br label %dec_label_pc_1700b

dec_label_pc_1700b:                               ; preds = %bb, %dec_label_pc_16fea
  %v2_17009 = phi i32 [ %v1_17009, %bb ], [ %arg1, %dec_label_pc_16fea ]
  ret i32 %v2_17009

; uselistorder directives
  uselistorder i32 %stack_var_-40.0.ph125, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_16fea, { 1, 0 }
  uselistorder label %dec_label_pc_16f91.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_16f91, { 1, 0 }
}

define i32 @function_17010() local_unnamed_addr {
dec_label_pc_17010:
  %v0_17011 = load i32, i32* @eax, align 8
  ret i32 %v0_17011
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEC1EPSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17014:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17045

bb:                                               ; preds = %dec_label_pc_17014
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_17043 = call i32 @function_1704a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_17045

dec_label_pc_17045:                               ; preds = %bb, %dec_label_pc_17014
  %v4_17043 = phi i32 [ %v3_17043, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17014 ]
  ret i32 %v4_17043

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1704a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1704a:
  %v0_1704b = load i32, i32* @eax, align 8
  ret i32 %v0_1704b
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1704c:
  %stack_var_-18 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v10_1707c = icmp eq i32 %arg3, 0
  %v1_17080 = icmp eq i1 %v10_1707c, false
  br i1 %v1_17080, label %dec_label_pc_170d4, label %dec_label_pc_17082

dec_label_pc_17082:                               ; preds = %dec_label_pc_1704c
  %v10_1708d = icmp ult i32 %arg2, %arg4
  store i1 %v10_1708d, i1* @cf, align 1
  %v15_1708d = icmp eq i32 %arg2, %arg4
  br i1 %v15_1708d, label %dec_label_pc_170d4, label %dec_label_pc_17092

dec_label_pc_17092:                               ; preds = %dec_label_pc_17082
  %v2_170a6 = ptrtoint i32* %stack_var_-18 to i32
  store i32 %v2_170a6, i32* @eax, align 8
  %v2_170ac = call i32 @function_2df78(i32 %v2_170a6, i32 %arg5)
  %v3_170bf = call i32 @function_29972(i32 %arg2, i32 %v2_170ac, i32 %arg4)
  %v4_170c4 = trunc i32 %v3_170bf to i8
  store i1 false, i1* @cf, align 1
  %v5_170c4 = icmp ne i8 %v4_170c4, 0
  %phitmp = zext i1 %v5_170c4 to i32
  br label %dec_label_pc_170d4

dec_label_pc_170d4:                               ; preds = %dec_label_pc_17092, %dec_label_pc_1704c, %dec_label_pc_17082
  %storemerge = phi i32 [ 1, %dec_label_pc_17082 ], [ 1, %dec_label_pc_1704c ], [ %phitmp, %dec_label_pc_17092 ]
  store i32 %arg2, i32* @eax, align 8
  %v2_170e4 = call i32 @function_31eb4(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_170d4, { 0, 2, 1 }
}

define i32 @function_17144() local_unnamed_addr {
dec_label_pc_17144:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17144 = load i32, i32* %ebx.global-to-local, align 8
  %v1_17144 = add i32 %v0_17144, 1566262468
  %v2_17144 = inttoptr i32 %v1_17144 to i32*
  %v3_17144 = load i32, i32* %v2_17144, align 4
  %v4_17144 = add i32 %v3_17144, 1
  store i32 %v4_17144, i32* %v2_17144, align 4
  %v0_1714a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1714a
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1714e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_17178 = call i32 @function_29c38(i32 %arg2)
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_17186 = call i32 @function_2be76(i32 %arg2)
  %v2_171ae = ptrtoint i32* %stack_var_-22 to i32
  %v10_171f0124 = icmp eq i32 %v1_17178, 0
  %v1_171f4125 = icmp eq i1 %v10_171f0124, false
  %v5_171f7129 = icmp eq i1 %v1_171f4125, false
  %v1_171f9130 = icmp eq i1 %v5_171f7129, false
  br i1 %v1_171f9130, label %dec_label_pc_17194, label %dec_label_pc_171fb

dec_label_pc_17194:                               ; preds = %dec_label_pc_1714e, %dec_label_pc_171f0.backedge
  %stack_var_-32.0131 = phi i32 [ %storemerge2.be, %dec_label_pc_171f0.backedge ], [ %v1_17178, %dec_label_pc_1714e ]
  store i32 %stack_var_-32.0131, i32* @eax, align 8
  store i32 %stack_var_-32.0131, i32* %stack_var_-108, align 4
  %v1_171a0 = call i32 @function_2dfa6(i32 %stack_var_-32.0131)
  store i32 %v1_171a0, i32* @ebx, align 8
  store i32 %v2_171ae, i32* %stack_var_-108, align 4
  %v2_171b4 = call i32 @function_2e07a(i32 %v2_171ae, i32 %arg3)
  store i32 %v2_171b4, i32* @eax, align 8
  %v0_171bc = load i32, i32* @ebx, align 8
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v3_171c7 = call i32 @function_29a74(i32 %arg2, i32 %v2_171b4, i32 %v0_171bc)
  %v1_171cc = trunc i32 %v3_171c7 to i8
  %v10_171cf = icmp eq i8 %v1_171cc, 0
  store i32 %stack_var_-32.0131, i32* @eax, align 8
  store i32 %stack_var_-32.0131, i32* %stack_var_-108, align 4
  br i1 %v10_171cf, label %dec_label_pc_171e2, label %dec_label_pc_171d5

dec_label_pc_171d5:                               ; preds = %dec_label_pc_17194
  %v1_171db = call i32 @function_2be45(i32 %stack_var_-32.0131)
  br label %dec_label_pc_171f0.backedge

dec_label_pc_171e2:                               ; preds = %dec_label_pc_17194
  %v1_171e8 = call i32 @function_2be15(i32 %stack_var_-32.0131)
  br label %dec_label_pc_171f0.backedge

dec_label_pc_171f0.backedge:                      ; preds = %dec_label_pc_171e2, %dec_label_pc_171d5
  %storemerge2.be = phi i32 [ %v1_171e8, %dec_label_pc_171e2 ], [ %v1_171db, %dec_label_pc_171d5 ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_171e2 ], [ %v1_171cc, %dec_label_pc_171d5 ]
  %v10_171f0 = icmp eq i32 %storemerge2.be, 0
  %v1_171f4 = icmp eq i1 %v10_171f0, false
  %v5_171f7 = icmp eq i1 %v1_171f4, false
  %v1_171f9 = icmp eq i1 %v5_171f7, false
  br i1 %v1_171f9, label %dec_label_pc_17194, label %dec_label_pc_171fb

dec_label_pc_171fb:                               ; preds = %dec_label_pc_171f0.backedge, %dec_label_pc_1714e
  %stack_var_-32.0.lcssa = phi i32 [ %v1_17178, %dec_label_pc_1714e ], [ %storemerge2.be, %dec_label_pc_171f0.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_17186, %dec_label_pc_1714e ], [ %stack_var_-32.0131, %dec_label_pc_171f0.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_1714e ], [ %stack_var_-17.0.be, %dec_label_pc_171f0.backedge ]
  %v2_17202 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_17202, i32* %stack_var_-108, align 4
  %v2_17208 = call i32 @function_2e162(i32 %v2_17202, i32 %stack_var_-28.0.lcssa)
  %v10_1720d = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_1720d, label %dec_label_pc_17299, label %dec_label_pc_17217

dec_label_pc_17217:                               ; preds = %dec_label_pc_171fb
  %v2_17217 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17217, i32* %stack_var_-108, align 4
  %v2_17224 = call i32 @function_2e626(i32 %v2_17217, i32 %arg2)
  %v0_17229 = load i32, i32* @esp, align 4
  %v10_17229 = icmp eq i32 %v0_17229, 4
  store i1 %v10_17229, i1* @zf, align 1
  store i32 %v2_17217, i32* %stack_var_-108, align 4
  store i32 %v2_17202, i32* %stack_var_-112, align 4
  %v2_17239 = call i32 @function_29b06(i32 %v2_17202, i32 %v2_17217)
  %v4_1723e = trunc i32 %v2_17239 to i8
  %v5_1723e = icmp eq i8 %v4_1723e, 0
  br i1 %v5_1723e, label %dec_label_pc_1728e, label %dec_label_pc_17242

dec_label_pc_17242:                               ; preds = %dec_label_pc_17217
  store i8 1, i8* %stack_var_-21, align 1
  %v2_17246 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_17246, i32* %stack_var_-112, align 4
  %v5_17268 = call i32 @function_2e19a(i32 %v2_17246, i32 %arg2, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.0.lcssa, i32 %arg3)
  %v2_17270 = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_17270, i32* %stack_var_-108, align 4
  store i32 %v2_17246, i32* %stack_var_-112, align 4
  store i32 %arg1, i32* @eax, align 8
  %v3_17284 = call i32 @function_32082(i32 %arg1, i32 %v2_17246, i32 %v2_17270)
  ret i32 %v3_17284

dec_label_pc_1728e:                               ; preds = %dec_label_pc_17217
  store i32 %v2_17202, i32* %stack_var_-112, align 4
  %v1_17294 = call i32 @function_320ce(i32 %v2_17202)
  br label %dec_label_pc_17299

dec_label_pc_17299:                               ; preds = %dec_label_pc_1728e, %dec_label_pc_171fb
  %v1_1729c = load i32, i32* @esp, align 4
  %v2_1729c = add i32 %v1_1729c, 4
  %v3_1729c = inttoptr i32 %v2_1729c to i32*
  store i32 %arg3, i32* %v3_1729c, align 4
  %v2_172a0 = ptrtoint i32* %stack_var_-20 to i32
  %v1_172a3 = load i32, i32* @esp, align 4
  %v2_172a3 = inttoptr i32 %v1_172a3 to i32*
  store i32 %v2_172a0, i32* %v2_172a3, align 4
  %v0_172a6 = load i32, i32* %stack_var_-112, align 4
  %v1_172a6 = load i32, i32* %stack_var_-108, align 4
  %v2_172a6 = call i32 @function_2e07a(i32 %v0_172a6, i32 %v1_172a6)
  ret i32 %v2_172a6

; uselistorder directives
  uselistorder i32 %v2_17246, { 1, 0, 3, 2 }
  uselistorder i32 %v2_17217, { 1, 0, 3, 2 }
  uselistorder i32 %v2_17202, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %storemerge2.be, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.0131, { 0, 5, 4, 6, 7, 1, 2, 3 }
  uselistorder i32 %v2_171ae, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2e07a, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 4, 3, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17194, { 1, 0 }
}

define i32 @function_172ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_172ae:
  %v0_172ae = load i32, i32* @ebp, align 4
  %v1_172ae = add i32 %v0_172ae, 1
  store i32 %v1_172ae, i32* @ebp, align 4
  %v0_172b3 = call i32 @function_2b880()
  %v0_172ba = load i32, i32* @ebp, align 4
  %v1_172ba = add i32 %v0_172ba, -64
  %v2_172ba = inttoptr i32 %v1_172ba to i32*
  %v3_172ba = load i32, i32* %v2_172ba, align 4
  store i32 %v3_172ba, i32* @eax, align 8
  %v0_172bd = load i32, i32* @ebx, align 8
  %v3_172c8 = call i32 @function_29a74(i32 %v3_172ba, i32 %v0_172b3, i32 %v0_172bd)
  %v4_172cd = trunc i32 %v3_172c8 to i8
  %v5_172cd = icmp eq i8 %v4_172cd, 0
  %v0_1731a = load i32, i32* @ebp, align 4
  br i1 %v5_172cd, label %dec_label_pc_1731a, label %dec_label_pc_172d1

dec_label_pc_172d1:                               ; preds = %dec_label_pc_172ae
  %v1_172d1 = add i32 %v0_1731a, -15
  %v2_172d1 = inttoptr i32 %v1_172d1 to i8*
  store i8 1, i8* %v2_172d1, align 1
  %v0_172d5 = load i32, i32* @ebp, align 4
  %v1_172d5 = add i32 %v0_172d5, -32
  %v1_172d8 = add i32 %v0_172d5, -68
  %v2_172d8 = inttoptr i32 %v1_172d8 to i32*
  %v3_172d8 = load i32, i32* %v2_172d8, align 4
  %v1_172df = add i32 %v0_172d5, -24
  %v2_172df = inttoptr i32 %v1_172df to i32*
  %v3_172df = load i32, i32* %v2_172df, align 4
  %v1_172e6 = add i32 %v0_172d5, -28
  %v2_172e6 = inttoptr i32 %v1_172e6 to i32*
  %v3_172e6 = load i32, i32* %v2_172e6, align 4
  %v1_172ed = add i32 %v0_172d5, -64
  %v2_172ed = inttoptr i32 %v1_172ed to i32*
  %v3_172ed = load i32, i32* %v2_172ed, align 4
  %v5_172f7 = call i32 @function_2e19a(i32 %v1_172d5, i32 %v3_172ed, i32 %v3_172e6, i32 %v3_172df, i32 %v3_172d8)
  %v0_172ff = load i32, i32* @ebp, align 4
  %v1_172ff = add i32 %v0_172ff, -15
  %v1_17306 = add i32 %v0_172ff, -32
  %v1_1730d = add i32 %v0_172ff, -60
  %v2_1730d = inttoptr i32 %v1_1730d to i32*
  %v3_1730d = load i32, i32* %v2_1730d, align 4
  store i32 %v3_1730d, i32* @eax, align 8
  %v3_17313 = call i32 @function_32082(i32 %v3_1730d, i32 %v1_17306, i32 %v1_172ff)
  br label %dec_label_pc_17337

dec_label_pc_1731a:                               ; preds = %dec_label_pc_172ae
  %v1_1731a = add i32 %v0_1731a, -14
  %v2_1731a = inttoptr i32 %v1_1731a to i8*
  store i8 0, i8* %v2_1731a, align 1
  %v0_1731e = load i32, i32* @ebp, align 4
  %v1_1731e = add i32 %v0_1731e, -14
  %v1_17325 = add i32 %v0_1731e, -44
  %v1_1732c = add i32 %v0_1731e, -60
  %v2_1732c = inttoptr i32 %v1_1732c to i32*
  %v3_1732c = load i32, i32* %v2_1732c, align 4
  store i32 %v3_1732c, i32* @eax, align 8
  %v3_17332 = call i32 @function_32082(i32 %v3_1732c, i32 %v1_17325, i32 %v1_1731e)
  br label %dec_label_pc_17337

dec_label_pc_17337:                               ; preds = %dec_label_pc_1731a, %dec_label_pc_172d1
  %v0_17337 = load i32, i32* @ebp, align 4
  %v1_17337 = add i32 %v0_17337, -60
  %v2_17337 = inttoptr i32 %v1_17337 to i32*
  %v3_17337 = load i32, i32* %v2_17337, align 4
  store i32 %v3_17337, i32* @eax, align 8
  %v1_1733a = add i32 %v0_17337, -12
  %v2_1733a = inttoptr i32 %v1_1733a to i32*
  %v3_1733a = load i32, i32* %v2_1733a, align 4
  %v4_1733d = icmp eq i32 %v3_1733a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1733d, label %bb, label %dec_label_pc_17346

bb:                                               ; preds = %dec_label_pc_17337
  %v1_17344 = call i32 @function_1734b()
  br label %dec_label_pc_17346

dec_label_pc_17346:                               ; preds = %bb, %dec_label_pc_17337
  %v2_17344 = phi i32 [ %v1_17344, %bb ], [ %v3_17337, %dec_label_pc_17337 ]
  ret i32 %v2_17344

; uselistorder directives
  uselistorder i32 %v0_172d5, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1731a, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_32082, { 1, 0, 2 }
}

define i32 @function_1734b() local_unnamed_addr {
dec_label_pc_1734b:
  %v0_1734f = load i32, i32* @eax, align 8
  ret i32 %v0_1734f
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsSsEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17352:
  %v2_1736c = load i32, i32* %arg1, align 4
  ret i32 %v2_1736c
}

define i32 @function_1738e() local_unnamed_addr {
dec_label_pc_1738e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1738e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1738e = add i32 %v0_1738e, -1
  store i32 %v1_1738e, i32* %ecx.global-to-local, align 4
  %v0_17390 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17390
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsSsEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_17392:
  %v2_173b2 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 8
  %v2_173be = call i32 @function_2e3a6(i32 %arg1, i32 %v2_173b2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_173d2

bb:                                               ; preds = %dec_label_pc_17392
  %v1_173d0 = call i32 @function_173d7()
  br label %dec_label_pc_173d2

dec_label_pc_173d2:                               ; preds = %bb, %dec_label_pc_17392
  %v2_173d0 = phi i32 [ %v1_173d0, %bb ], [ %arg1, %dec_label_pc_17392 ]
  ret i32 %v2_173d0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_173d7() local_unnamed_addr {
dec_label_pc_173d7:
  %v0_173d8 = load i32, i32* @eax, align 8
  ret i32 %v0_173d8
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173dc:
  %v1_173ff = call i32 @function_3239c(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  %v2_1740e = call i32 @function_323ca(i32 %arg1, i32 %v1_173ff)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17422

bb:                                               ; preds = %dec_label_pc_173dc
  %v1_17420 = call i32 @function_17427()
  br label %dec_label_pc_17422

dec_label_pc_17422:                               ; preds = %bb, %dec_label_pc_173dc
  %v2_17420 = phi i32 [ %v1_17420, %bb ], [ %arg1, %dec_label_pc_173dc ]
  ret i32 %v2_17420

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_17427() local_unnamed_addr {
dec_label_pc_17427:
  %v0_17428 = load i32, i32* @eax, align 8
  ret i32 %v0_17428
}

define i32 @_ZNSaISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1742c:
  store i32 %arg1, i32* @eax, align 8
  %v1_17449 = call i32 @function_32456(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1745a

bb:                                               ; preds = %dec_label_pc_1742c
  %v1_17458 = call i32 @function_1745f()
  br label %dec_label_pc_1745a

dec_label_pc_1745a:                               ; preds = %bb, %dec_label_pc_1742c
  %v2_17458 = phi i32 [ %v1_17458, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1742c ]
  ret i32 %v2_17458

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1745f() local_unnamed_addr {
dec_label_pc_1745f:
  %v0_17460 = load i32, i32* @eax, align 8
  ret i32 %v0_17460
}

define i32 @_ZSt11__addressofISt4pairIKSsSsEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_17461:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17487

bb:                                               ; preds = %dec_label_pc_17461
  %v2_17485 = call i32 @function_1748c(i32 %arg1)
  br label %dec_label_pc_17487

dec_label_pc_17487:                               ; preds = %bb, %dec_label_pc_17461
  %v3_17485 = phi i32 [ %v2_17485, %bb ], [ %arg1, %dec_label_pc_17461 ]
  ret i32 %v3_17485
}

define i32 @function_1748c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1748c:
  %v0_1748d = load i32, i32* @eax, align 8
  ret i32 %v0_1748d
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1748e:
  store i32 %arg1, i32* @eax, align 8
  %v3_174c0 = call i32 @function_324e2(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_174d1

bb:                                               ; preds = %dec_label_pc_1748e
  %v1_174cf = call i32 @function_174d6()
  br label %dec_label_pc_174d1

dec_label_pc_174d1:                               ; preds = %bb, %dec_label_pc_1748e
  %v2_174cf = phi i32 [ %v1_174cf, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1748e ]
  ret i32 %v2_174cf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_174d6() local_unnamed_addr {
dec_label_pc_174d6:
  %v0_174d7 = load i32, i32* @eax, align 8
  ret i32 %v0_174d7
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174d8:
  %v1_174f8 = add i32 %arg2, 12
  %v2_174f8 = inttoptr i32 %v1_174f8 to i32*
  %v3_174f8 = load i32, i32* %v2_174f8, align 4
  %v2_17505 = call i32 @function_2e4ec(i32 %arg1, i32 %v3_174f8)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17519

bb:                                               ; preds = %dec_label_pc_174d8
  %v1_17517 = call i32 @function_1751e()
  br label %dec_label_pc_17519

dec_label_pc_17519:                               ; preds = %bb, %dec_label_pc_174d8
  %v2_17517 = phi i32 [ %v1_17517, %bb ], [ %arg1, %dec_label_pc_174d8 ]
  ret i32 %v2_17517

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1751e() local_unnamed_addr {
dec_label_pc_1751e:
  %v0_1751f = load i32, i32* @eax, align 8
  ret i32 %v0_1751f
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17522:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 8
  %v1_1753f = call i32 @function_325b8(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_17550 = add i32 %tmp100, 4
  %v2_17550 = inttoptr i32 %v1_17550 to i32*
  store i32 0, i32* %v2_17550, align 4
  %v1_1755a = add i32 %tmp100, 8
  %v2_1755a = inttoptr i32 %v1_1755a to i32*
  store i32 0, i32* %v2_1755a, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1756d

bb:                                               ; preds = %dec_label_pc_17522
  %v1_1756b = call i32 @function_17572()
  br label %dec_label_pc_1756d

dec_label_pc_1756d:                               ; preds = %bb, %dec_label_pc_17522
  %v2_1756b = phi i32 [ %v1_1756b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17522 ]
  ret i32 %v2_1756b

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_17572() local_unnamed_addr {
dec_label_pc_17572:
  %v0_17573 = load i32, i32* @eax, align 8
  ret i32 %v0_17573
}

define i32 @_ZN5boost8functionIFbRKSsS2_jEEC1IPS3_EET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS7_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17574:
  store i32 %arg1, i32* @eax, align 8
  %v3_175ac = call i32 @function_32640(i32 %arg1, i32 %arg2, i32 0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_175bd

bb:                                               ; preds = %dec_label_pc_17574
  %v1_175bb = call i32 @function_175c2()
  br label %dec_label_pc_175bd

dec_label_pc_175bd:                               ; preds = %bb, %dec_label_pc_17574
  %v2_175bb = phi i32 [ %v1_175bb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17574 ]
  ret i32 %v2_175bb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_175c2() local_unnamed_addr {
dec_label_pc_175c2:
  %v0_175c3 = load i32, i32* @eax, align 8
  ret i32 %v0_175c3
}

define i32 @_ZN5boost9function3IbRKSsS2_jE4swapERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175c4:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v10_175e5 = icmp ult i32 %arg2, %arg1
  store i1 %v10_175e5, i1* @cf, align 1
  %v15_175e5 = icmp eq i32 %arg2, %arg1
  br i1 %v15_175e5, label %bb, label %dec_label_pc_175ea

bb:                                               ; preds = %dec_label_pc_175c4
  %v3_175e8 = call i32 @function_1764f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_175ea

dec_label_pc_175ea:                               ; preds = %bb, %dec_label_pc_175c4
  %v2_175ea = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_175ea, i32* @eax, align 8
  %v1_175f0 = call i32 @function_2c422(i32 %v2_175ea)
  store i32 %v2_175ea, i32* @eax, align 8
  %v2_17602 = call i32 @function_326e4(i32 %v2_175ea, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_17614 = call i32 @function_326e4(i32 %arg1, i32 %arg2)
  store i32 %arg2, i32* @eax, align 8
  %v2_17626 = call i32 @function_326e4(i32 %arg2, i32 %v2_175ea)
  %v1_17636 = call i32 @function_17650(i32 %v2_175ea)
  ret i32 %v1_17636

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_326e4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 4, 0, 6, 5 }
  uselistorder i32 %arg1, { 2, 1, 3, 4, 0, 5 }
}

define i32 @function_17639() local_unnamed_addr {
dec_label_pc_17639:
  %eax.global-to-local = alloca i32, align 4
  %v0_17639 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17639
}

define i32 @function_1764f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1764f:
  %v0_1764f = load i32, i32* @eax, align 8
  ret i32 %v0_1764f
}

define i32 @function_17650(i32 %arg1) local_unnamed_addr {
dec_label_pc_17650:
  %v0_17650 = load i32, i32* @ebp, align 4
  %v1_17650 = add i32 %v0_17650, -12
  %v2_17650 = inttoptr i32 %v1_17650 to i32*
  %v3_17650 = load i32, i32* %v2_17650, align 4
  %v3_17653 = xor i32 %v3_17650, ptrtoint ([3 x i8]* @3 to i32)
  %v4_17653 = icmp eq i32 %v3_17653, 0
  store i32 %v3_17653, i32* @eax, align 8
  br i1 %v4_17653, label %bb, label %dec_label_pc_1765c

bb:                                               ; preds = %dec_label_pc_17650
  %v1_1765a = call i32 @function_17661()
  br label %dec_label_pc_1765c

dec_label_pc_1765c:                               ; preds = %bb, %dec_label_pc_17650
  %v2_1765a = phi i32 [ %v1_1765a, %bb ], [ %v3_17653, %dec_label_pc_17650 ]
  ret i32 %v2_1765a
}

define i32 @function_17661() local_unnamed_addr {
dec_label_pc_17661:
  %v0_17666 = load i32, i32* @eax, align 8
  ret i32 %v0_17666
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFbRKSsS5_jEEEvRT_RKT0_l(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17667:
  store i32 %arg1, i32* @eax, align 8
  %v2_17697 = call i32 @function_32877(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_176a8

bb:                                               ; preds = %dec_label_pc_17667
  %v1_176a6 = call i32 @function_176ad()
  br label %dec_label_pc_176a8

dec_label_pc_176a8:                               ; preds = %bb, %dec_label_pc_17667
  %v2_176a6 = phi i32 [ %v1_176a6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17667 ]
  ret i32 %v2_176a6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_176ad() local_unnamed_addr {
dec_label_pc_176ad:
  %v0_176ae = load i32, i32* @eax, align 8
  ret i32 %v0_176ae
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_176b0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_176d3

bb:                                               ; preds = %dec_label_pc_176b0
  %v2_176d1 = call i32 @function_176d8(i32 %arg1)
  br label %dec_label_pc_176d3

dec_label_pc_176d3:                               ; preds = %bb, %dec_label_pc_176b0
  %v3_176d1 = phi i32 [ %v2_176d1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_176b0 ]
  ret i32 %v3_176d1
}

define i32 @function_176d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_176d8:
  %v0_176d9 = load i32, i32* @eax, align 8
  ret i32 %v0_176d9
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost7variantINS2_8weak_ptrIvEENS2_8signals26detail21foreign_void_weak_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EEEEvT_SE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_176da:
  ret i32 0
}

define i32 @function_176fe(i32 %arg1) local_unnamed_addr {
bb:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_176fe = load i32, i32* @eax, align 8
  %v1_176fe = trunc i32 %v0_176fe to i8
  %v2_176fe = and i8 %v1_176fe, -24
  %v8_17700 = icmp ugt i8 %v2_176fe, -103
  %v23_17700 = add i8 %v2_176fe, -96
  %v24_17700 = select i1 %v8_17700, i8 %v23_17700, i8 %v2_176fe
  %v25_17700 = zext i8 %v24_17700 to i32
  %v27_17700 = and i32 %v0_176fe, -256
  %v28_17700 = or i32 %v25_17700, %v27_17700
  store i32 %v28_17700, i32* %eax.global-to-local, align 8
  %v0_17701 = load i32, i32* @edx, align 8
  %v1_17701 = and i32 %v0_17701, -256
  %v2_17701 = or i32 %v1_17701, 1
  store i32 %v2_17701, i32* %edx.global-to-local, align 8
  %v0_17703 = load i32, i32* @ecx, align 4
  %v1_17703 = add i32 %v0_17703, 1424499716
  %v2_17703 = inttoptr i32 %v1_17703 to i8*
  %v3_17703 = load i8, i8* %v2_17703, align 1
  %v5_17703 = trunc i32 %v0_17703 to i8
  %v6_17703 = add i8 %v3_17703, %v5_17703
  store i8 %v6_17703, i8* %v2_17703, align 1
  %v0_17709 = load i32, i32* %edx.global-to-local, align 8
  %v1_17709 = and i32 %v0_17709, -256
  %v2_17709 = or i32 %v1_17709, 1
  store i32 %v2_17709, i32* %edx.global-to-local, align 8
  %v0_1770b = load i32, i32* @ebx, align 8
  %v1_1770b = add i32 %v0_1770b, -1962089403
  %v2_1770b = inttoptr i32 %v1_1770b to i8*
  %v3_1770b = load i8, i8* %v2_1770b, align 1
  %v4_1770b = load i32, i32* %eax.global-to-local, align 8
  %v5_1770b = trunc i32 %v4_1770b to i8
  %v6_1770b = add i8 %v5_1770b, %v3_1770b
  store i8 %v6_1770b, i8* %v2_1770b, align 1
  %v0_17711 = load i32, i32* @ebp, align 4
  %v1_17714 = add i32 %v0_17711, 2
  %v9_17714 = icmp eq i32 %v1_17714, 0
  %v0_17715 = load i32, i32* @ecx, align 4
  %v2_17715 = icmp eq i32 %v0_17715, 1
  %v4_17715 = or i1 %v9_17714, %v2_17715
  br i1 %v4_17715, label %dec_label_pc_17717, label %dec_label_pc_17726

dec_label_pc_17717:                               ; preds = %bb
  store i32 %v1_17714, i32* %eax.global-to-local, align 8
  ret i32 %v1_17714

dec_label_pc_17726:                               ; preds = %bb
  %v0_17717 = load i32, i32* %eax.global-to-local, align 8
  %v3_17726 = add i32 %v0_17711, -22
  %v4_17726 = add i32 %v3_17726, %v0_17717
  %v5_17726 = inttoptr i32 %v4_17726 to i8*
  %v6_17726 = load i8, i8* %v5_17726, align 1
  %v7_17726 = load i32, i32* %edx.global-to-local, align 8
  %v8_17726 = udiv i32 %v7_17726, 256
  %v9_17726 = trunc i32 %v8_17726 to i8
  %v10_17726 = add i8 %v9_17726, %v6_17726
  store i8 %v10_17726, i8* %v5_17726, align 1
  %v31_17726 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v31_17726

; uselistorder directives
  uselistorder i32 %v1_17714, { 1, 0, 2 }
  uselistorder i8 %v2_176fe, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4 }
}

define i32 @function_1772d() local_unnamed_addr {
dec_label_pc_1772d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1772d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1772d = add i32 %v0_1772d, -1
  store i32 %v1_1772d, i32* %ecx.global-to-local, align 4
  %v0_1772f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1772f
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE21create_new_connectionERKNS0_5slot3IbS4_S4_jSB_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17730:
  %v1_1775b = call i32 @function_329ec(i32 %arg2)
  ret i32 %v1_1775b
}

define i32 @function_1776d() local_unnamed_addr {
dec_label_pc_1776d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1776d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1776d
}

define i32 @function_17776(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17776:
  %v0_17778 = call i32 @__stack_chk_fail.1238()
  %v0_1777d = load i32, i32* @ebx, align 8
  %v0_17781 = load i32, i32* @ebp, align 4
  %v1_17781 = add i32 %v0_17781, -28
  %v2_17781 = inttoptr i32 %v1_17781 to i32*
  %v3_17781 = load i32, i32* %v2_17781, align 4
  store i32 %v3_17781, i32* @eax, align 8
  %v2_17787 = call i32 @function_32c6e(i32 %v3_17781, i32 %v0_1777d)
  %v0_1778c = load i32, i32* @ebp, align 4
  %v1_1778c = add i32 %v0_1778c, -28
  %v2_1778c = inttoptr i32 %v1_1778c to i32*
  %v3_1778c = load i32, i32* %v2_1778c, align 4
  store i32 %v3_1778c, i32* @eax, align 8
  %v1_1778f = add i32 %v0_1778c, -12
  %v2_1778f = inttoptr i32 %v1_1778f to i32*
  %v3_1778f = load i32, i32* %v2_1778f, align 4
  %v4_17792 = icmp eq i32 %v3_1778f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17792, label %bb, label %dec_label_pc_1779b

bb:                                               ; preds = %dec_label_pc_17776
  %v1_17799 = call i32 @function_177b6()
  store i32 %v1_17799, i32* @eax, align 8
  br label %dec_label_pc_1779b

dec_label_pc_1779b:                               ; preds = %bb, %dec_label_pc_17776
  %v0_1779b = call i32 @function_177b1()
  ret i32 %v0_1779b
}

define i32 @function_177b1() local_unnamed_addr {
dec_label_pc_177b1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_177b6() local_unnamed_addr {
dec_label_pc_177b6:
  %v0_177bc = load i32, i32* @eax, align 8
  ret i32 %v0_177bc
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_177c0:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  %v1_177e3 = add i32 %tmp100, 4
  store i32 %v1_177e3, i32* @eax, align 8
  %v1_177e9 = call i32 @function_32d64(i32 %v1_177e3)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_177fa

bb:                                               ; preds = %dec_label_pc_177c0
  %v1_177f8 = call i32 @function_177ff()
  br label %dec_label_pc_177fa

dec_label_pc_177fa:                               ; preds = %bb, %dec_label_pc_177c0
  %v2_177f8 = phi i32 [ %v1_177f8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_177c0 ]
  ret i32 %v2_177f8
}

define i32 @function_177ff() local_unnamed_addr {
dec_label_pc_177ff:
  %v0_17800 = load i32, i32* @eax, align 8
  ret i32 %v0_17800
}

define i32 @_ZN5boost8optionalIiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17802:
  %v1_1781f = call i32 @function_32ddc(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17830

bb:                                               ; preds = %dec_label_pc_17802
  %v1_1782e = call i32 @function_17835()
  br label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %bb, %dec_label_pc_17802
  %v2_1782e = phi i32 [ %v1_1782e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17802 ]
  ret i32 %v2_1782e
}

define i32 @function_17835() local_unnamed_addr {
dec_label_pc_17835:
  %v0_17836 = load i32, i32* @eax, align 8
  ret i32 %v0_17836
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17838:
  %v2_17852 = load i32, i32* %arg1, align 4
  %v1_17854 = icmp eq i32 %v2_17852, 0
  %v1_17856 = icmp eq i1 %v1_17854, false
  br i1 %v1_17856, label %bb, label %dec_label_pc_17858

bb:                                               ; preds = %dec_label_pc_17838
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_17856 = call i32 @function_1787c(i32 %tmp105)
  br label %dec_label_pc_17858

dec_label_pc_17858:                               ; preds = %bb, %dec_label_pc_17838
  %v3_17870 = phi i32 [ %v3_17856, %bb ], [ %v2_17852, %dec_label_pc_17838 ]
  ret i32 %v3_17870

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1787c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1787c:
  %v0_1787c = load i32, i32* @ebp, align 4
  %v1_1787c = add i32 %v0_1787c, -28
  %v2_1787c = inttoptr i32 %v1_1787c to i32*
  %v3_1787c = load i32, i32* %v2_1787c, align 4
  %v1_1787f = inttoptr i32 %v3_1787c to i32*
  %v2_1787f = load i32, i32* %v1_1787f, align 4
  store i32 %v2_1787f, i32* @eax, align 8
  %v1_17881 = add i32 %v0_1787c, -12
  %v2_17881 = inttoptr i32 %v1_17881 to i32*
  %v3_17881 = load i32, i32* %v2_17881, align 4
  %v4_17884 = icmp eq i32 %v3_17881, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17884, label %bb, label %dec_label_pc_1788d

bb:                                               ; preds = %dec_label_pc_1787c
  %v1_1788b = call i32 @function_17892()
  br label %dec_label_pc_1788d

dec_label_pc_1788d:                               ; preds = %bb, %dec_label_pc_1787c
  %v2_1788b = phi i32 [ %v1_1788b, %bb ], [ %v2_1787f, %dec_label_pc_1787c ]
  ret i32 %v2_1788b
}

define i32 @function_17892() local_unnamed_addr {
dec_label_pc_17892:
  %v0_17893 = load i32, i32* @eax, align 8
  ret i32 %v0_17893
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17894:
  store i32 %arg1, i32* @eax, align 8
  %v1_178b1 = call i32 @function_32ea4(i32 %arg1)
  ret i32 %v1_178b1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_178c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_178c6:
  %v0_178c8 = load i32, i32* @eax, align 8
  ret i32 %v0_178c8
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE9push_backERKSB_RKSL_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_178ca:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg2 to i32
  %v2_178ed = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_178ed, i32* @eax, align 8
  %v1_178f3 = call i32 @function_32f36(i32 %v2_178ed)
  %v2_178fb = load i32, i32* %arg2, align 4
  %v10_178fd = icmp eq i32 %v2_178fb, 2
  %v1_17900 = icmp eq i1 %v10_178fd, false
  %v1_17925 = add i32 %arg1, 8
  br i1 %v1_17900, label %dec_label_pc_17922, label %dec_label_pc_17902

dec_label_pc_17902:                               ; preds = %dec_label_pc_178ca
  %v2_17908 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17908, i32* @eax, align 8
  %v2_17912 = call i32 @function_32f6a(i32 %v2_17908, i32 %v1_17925)
  br label %dec_label_pc_17947

dec_label_pc_17922:                               ; preds = %dec_label_pc_178ca
  %v2_17928 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17928, i32* @eax, align 8
  %v3_17939 = call i32 @function_32fb4(i32 %v2_17928, i32 %v1_17925, i32 %tmp113)
  br label %dec_label_pc_17947

dec_label_pc_17947:                               ; preds = %dec_label_pc_17922, %dec_label_pc_17902
  %storemerge1 = load i32, i32* %stack_var_-44, align 4
  store i32 %storemerge1, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v4_17962 = call i32 @function_33042(i32 %arg1, i32 %v2_178ed, i32 %tmp113, i32 %arg3)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v1_17925, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE10push_frontERKSB_RKSL_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1797a:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1799d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1799d, i32* @eax, align 8
  %v1_179a3 = call i32 @function_32fe6(i32 %v2_1799d)
  %v2_179ab = load i32, i32* %arg2, align 4
  %v1_179ad = icmp eq i32 %v2_179ab, 0
  %v1_179af = icmp eq i1 %v1_179ad, false
  %v1_179d4 = add i32 %arg1, 8
  br i1 %v1_179af, label %dec_label_pc_179d1, label %dec_label_pc_179b1

dec_label_pc_179b1:                               ; preds = %dec_label_pc_1797a
  %v2_179b7 = ptrtoint i32* %stack_var_-44 to i32
  %v2_179c1 = call i32 @_ZdlPv.1385(i32 %v2_179b7, i32 %v1_179d4)
  br label %dec_label_pc_179f6

dec_label_pc_179d1:                               ; preds = %dec_label_pc_1797a
  %tmp113 = ptrtoint i32* %arg2 to i32
  %v2_179d7 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_179d7, i32* @eax, align 8
  %v3_179e8 = call i32 @function_33328(i32 %v2_179d7, i32 %v1_179d4, i32 %tmp113)
  br label %dec_label_pc_179f6

dec_label_pc_179f6:                               ; preds = %dec_label_pc_179d1, %dec_label_pc_179b1
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_179d4, { 1, 0 }
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_17a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a14:
  %v2_17a14 = load i32, i32* @eax, align 8
  %v4_17a14 = mul i32 %v2_17a14, 2
  %v21_17a14 = inttoptr i32 %v2_17a14 to i32*
  store i32 %v4_17a14, i32* %v21_17a14, align 4
  %v0_17a16 = load i32, i32* @ebp, align 4
  %v1_17a16 = add i32 %v0_17a16, -12
  %v2_17a16 = inttoptr i32 %v1_17a16 to i32*
  %v3_17a16 = load i32, i32* %v2_17a16, align 4
  %v3_17a19 = xor i32 %v3_17a16, ptrtoint ([3 x i8]* @3 to i32)
  %v4_17a19 = icmp eq i32 %v3_17a19, 0
  store i32 %v3_17a19, i32* @eax, align 8
  br i1 %v4_17a19, label %bb, label %dec_label_pc_17a22

bb:                                               ; preds = %dec_label_pc_17a14
  %v1_17a20 = call i32 @function_17a27()
  br label %dec_label_pc_17a22

dec_label_pc_17a22:                               ; preds = %bb, %dec_label_pc_17a14
  %v2_17a20 = phi i32 [ %v1_17a20, %bb ], [ %v3_17a19, %dec_label_pc_17a14 ]
  ret i32 %v2_17a20

; uselistorder directives
  uselistorder i32 %v2_17a14, { 1, 0 }
}

define i32 @function_17a27() local_unnamed_addr {
dec_label_pc_17a27:
  %v0_17a28 = load i32, i32* @eax, align 8
  ret i32 %v0_17a28
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17a2a:
  %v2_17a44 = load i32, i32* %arg1, align 4
  %v1_17a46 = icmp eq i32 %v2_17a44, 0
  %v1_17a48 = icmp eq i1 %v1_17a46, false
  br i1 %v1_17a48, label %bb, label %dec_label_pc_17a4a

bb:                                               ; preds = %dec_label_pc_17a2a
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_17a48 = call i32 @function_17a6e(i32 %tmp105)
  br label %dec_label_pc_17a4a

dec_label_pc_17a4a:                               ; preds = %bb, %dec_label_pc_17a2a
  %v3_17a62 = phi i32 [ %v3_17a48, %bb ], [ %v2_17a44, %dec_label_pc_17a2a ]
  ret i32 %v3_17a62

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17a6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a6e:
  %v0_17a6e = load i32, i32* @ebp, align 4
  %v1_17a6e = add i32 %v0_17a6e, -28
  %v2_17a6e = inttoptr i32 %v1_17a6e to i32*
  %v3_17a6e = load i32, i32* %v2_17a6e, align 4
  %v1_17a71 = inttoptr i32 %v3_17a6e to i32*
  %v2_17a71 = load i32, i32* %v1_17a71, align 4
  store i32 %v2_17a71, i32* @eax, align 8
  %v1_17a73 = add i32 %v0_17a6e, -12
  %v2_17a73 = inttoptr i32 %v1_17a73 to i32*
  %v3_17a73 = load i32, i32* %v2_17a73, align 4
  %v4_17a76 = icmp eq i32 %v3_17a73, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17a76, label %bb, label %dec_label_pc_17a7f

bb:                                               ; preds = %dec_label_pc_17a6e
  %v1_17a7d = call i32 @function_17a84()
  br label %dec_label_pc_17a7f

dec_label_pc_17a7f:                               ; preds = %bb, %dec_label_pc_17a6e
  %v2_17a7d = phi i32 [ %v1_17a7d, %bb ], [ %v2_17a71, %dec_label_pc_17a6e ]
  ret i32 %v2_17a7d
}

define i32 @function_17a84() local_unnamed_addr {
dec_label_pc_17a84:
  %v0_17a85 = load i32, i32* @eax, align 8
  ret i32 %v0_17a85
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEEaSERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a86:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_17aa6 = inttoptr i32 %arg2 to i32*
  %v2_17aa6 = load i32, i32* %v1_17aa6, align 4
  store i32 %v2_17aa6, i32* %arg1, align 4
  %v1_17ab0 = add i32 %arg2, 4
  %v1_17ab6 = add i32 %tmp103, 4
  store i32 %v1_17ab6, i32* @eax, align 8
  %v2_17ac0 = call i32 @function_3348c(i32 %v1_17ab6, i32 %v1_17ab0)
  store i32 %tmp103, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17ad4

bb:                                               ; preds = %dec_label_pc_17a86
  %v1_17ad2 = call i32 @function_17ad9()
  br label %dec_label_pc_17ad4

dec_label_pc_17ad4:                               ; preds = %bb, %dec_label_pc_17a86
  %v2_17ad2 = phi i32 [ %v1_17ad2, %bb ], [ %tmp103, %dec_label_pc_17a86 ]
  ret i32 %v2_17ad2

; uselistorder directives
  uselistorder i32 %tmp103, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17ad9() local_unnamed_addr {
dec_label_pc_17ad9:
  %v0_17ada = load i32, i32* @eax, align 8
  ret i32 %v0_17ada
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE13set_group_keyERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17adc:
  %v1_17afc = add i32 %arg1, 68
  store i32 %arg2, i32* @eax, align 8
  %v2_17b09 = call i32 @function_2f562(i32 %v1_17afc, i32 %arg2)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17b16(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b16:
  %zf.global-to-local = alloca i1, align 1
  %v2_17b16 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_17b16 = load i32, i32* @eax, align 8
  %v4_17b16 = trunc i32 %v3_17b16 to i8
  %v5_17b16 = add i8 %v4_17b16, %v2_17b16
  %v15_17b16 = icmp eq i8 %v5_17b16, 0
  store i1 %v15_17b16, i1* %zf.global-to-local, align 1
  %v21_17b16 = inttoptr i32 %v3_17b16 to i8*
  store i8 %v5_17b16, i8* %v21_17b16, align 1
  %v0_17b18 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_17b18, label %bb, label %dec_label_pc_17b16.dec_label_pc_17b1a_crit_edge

dec_label_pc_17b16.dec_label_pc_17b1a_crit_edge:  ; preds = %dec_label_pc_17b16
  %v2_17b18.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_17b1a

bb:                                               ; preds = %dec_label_pc_17b16
  %v1_17b18 = call i32 @function_17b1f()
  br label %dec_label_pc_17b1a

dec_label_pc_17b1a:                               ; preds = %dec_label_pc_17b16.dec_label_pc_17b1a_crit_edge, %bb
  %v2_17b18 = phi i32 [ %v2_17b18.pre, %dec_label_pc_17b16.dec_label_pc_17b1a_crit_edge ], [ %v1_17b18, %bb ]
  ret i32 %v2_17b18

; uselistorder directives
  uselistorder label %dec_label_pc_17b1a, { 1, 0 }
}

define i32 @function_17b1f() local_unnamed_addr {
dec_label_pc_17b1f:
  %v0_17b20 = load i32, i32* @eax, align 8
  ret i32 %v0_17b20
}

define i32 @_ZN5boost8weak_ptrINS_8signals26detail20connection_body_baseEEC1INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEERKNS_10shared_ptrIT_EENS_6detail24sp_enable_if_convertibleISM_S3_E4typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17b22:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_17b49 = inttoptr i32 %arg2 to i32*
  %v2_17b49 = load i32, i32* %v1_17b49, align 4
  store i32 %v2_17b49, i32* %arg1, align 4
  %v1_17b53 = add i32 %arg2, 4
  %v1_17b59 = add i32 %tmp105, 4
  store i32 %v1_17b59, i32* @eax, align 8
  %v2_17b63 = call i32 @function_19ec8(i32 %v1_17b59, i32 %v1_17b53)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17b74

bb:                                               ; preds = %dec_label_pc_17b22
  %v1_17b72 = call i32 @function_17b79()
  br label %dec_label_pc_17b74

dec_label_pc_17b74:                               ; preds = %bb, %dec_label_pc_17b22
  %v2_17b72 = phi i32 [ %v1_17b72, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17b22 ]
  ret i32 %v2_17b72

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17b79() local_unnamed_addr {
dec_label_pc_17b79:
  %v0_17b7a = load i32, i32* @eax, align 8
  ret i32 %v0_17b7a
}

define i32 @_ZN5boost8functionIFbxEEC1IPS1_EET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS5_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b7c:
  ret i32 %arg2
}

define i32 @function_17b8e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b8e:
  %v0_17b8e = load i32, i32* @ebp, align 4
  %v1_17b8e = add i32 %v0_17b8e, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_17b8e = inttoptr i32 %v1_17b8e to i32*
  %v3_17b8e = load i32, i32* %v2_17b8e, align 4
  %v2_17b91 = add i32 %v0_17b8e, -36
  %v3_17b91 = inttoptr i32 %v2_17b91 to i32*
  store i32 %v3_17b8e, i32* %v3_17b91, align 4
  %v1_17b9a = load i32, i32* @ebp, align 4
  %v2_17b9a = add i32 %v1_17b9a, -12
  %v3_17b9a = inttoptr i32 %v2_17b9a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_17b9a, align 4
  store i1 false, i1* @cf, align 1
  %v0_17b9f = load i32, i32* @ebp, align 4
  %v1_17b9f = add i32 %v0_17b9f, -28
  %v2_17b9f = inttoptr i32 %v1_17b9f to i32*
  %v3_17b9f = load i32, i32* %v2_17b9f, align 4
  store i32 %v3_17b9f, i32* @eax, align 8
  %v1_17baa = add i32 %v0_17b9f, -32
  %v2_17baa = inttoptr i32 %v1_17baa to i32*
  %v3_17baa = load i32, i32* %v2_17baa, align 4
  %v3_17bb4 = call i32 @function_335c8(i32 %v3_17b9f, i32 %v3_17baa, i32 0)
  %v0_17bb9 = load i32, i32* @ebp, align 4
  %v1_17bb9 = add i32 %v0_17bb9, -12
  %v2_17bb9 = inttoptr i32 %v1_17bb9 to i32*
  %v3_17bb9 = load i32, i32* %v2_17bb9, align 4
  %v3_17bbc = xor i32 %v3_17bb9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_17bbc = icmp eq i32 %v3_17bbc, 0
  store i32 %v3_17bbc, i32* @eax, align 8
  br i1 %v4_17bbc, label %bb, label %dec_label_pc_17bc5

bb:                                               ; preds = %dec_label_pc_17b8e
  %v1_17bc3 = call i32 @function_17bca()
  br label %dec_label_pc_17bc5

dec_label_pc_17bc5:                               ; preds = %bb, %dec_label_pc_17b8e
  %v2_17bc3 = phi i32 [ %v1_17bc3, %bb ], [ %v3_17bbc, %dec_label_pc_17b8e ]
  ret i32 %v2_17bc3
}

define i32 @function_17bca() local_unnamed_addr {
dec_label_pc_17bca:
  %v0_17bcb = load i32, i32* @eax, align 8
  ret i32 %v0_17bcb
}

define i32 @_ZN5boost9function1IbxE4swapERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17bcc:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v15_17bed = icmp eq i32 %arg2, %arg1
  br i1 %v15_17bed, label %bb, label %dec_label_pc_17bf2

bb:                                               ; preds = %dec_label_pc_17bcc
  %v3_17bf0 = call i32 @function_17c57(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_17bf2

dec_label_pc_17bf2:                               ; preds = %bb, %dec_label_pc_17bcc
  %v2_17bf2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17bf2, i32* @eax, align 8
  %v1_17bf8 = call i32 @function_2cee6(i32 %v2_17bf2)
  %v2_17c0a = call i32 @_ZdlPv.1395(i32 %v2_17bf2, i32 %arg1)
  %v2_17c1c = call i32 @_ZdlPv.1395(i32 %arg1, i32 %arg2)
  %v2_17c2e = call i32 @_ZdlPv.1395(i32 %arg2, i32 %v2_17bf2)
  %v1_17c39 = call i32 @function_290f2(i32 %v2_17bf2)
  %v0_17c3e = call i32 @function_17c58()
  ret i32 %v0_17c3e

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZdlPv.1395, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 1, 2, 3, 0 }
}

define i32 @function_17c41() local_unnamed_addr {
dec_label_pc_17c41:
  %eax.global-to-local = alloca i32, align 4
  %v0_17c41 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_17c41
}

define i32 @function_17c57(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17c57:
  %v0_17c57 = load i32, i32* @eax, align 8
  ret i32 %v0_17c57
}

define i32 @function_17c58() local_unnamed_addr {
dec_label_pc_17c58:
  %v0_17c58 = load i32, i32* @ebp, align 4
  %v1_17c58 = add i32 %v0_17c58, -12
  %v2_17c58 = inttoptr i32 %v1_17c58 to i32*
  %v3_17c58 = load i32, i32* %v2_17c58, align 4
  %v3_17c5b = xor i32 %v3_17c58, ptrtoint ([3 x i8]* @3 to i32)
  %v4_17c5b = icmp eq i32 %v3_17c5b, 0
  store i32 %v3_17c5b, i32* @eax, align 8
  br i1 %v4_17c5b, label %bb, label %dec_label_pc_17c64

bb:                                               ; preds = %dec_label_pc_17c58
  %v1_17c62 = call i32 @function_17c69()
  br label %dec_label_pc_17c64

dec_label_pc_17c64:                               ; preds = %bb, %dec_label_pc_17c58
  %v2_17c62 = phi i32 [ %v1_17c62, %bb ], [ %v3_17c5b, %dec_label_pc_17c58 ]
  ret i32 %v2_17c62
}

define i32 @function_17c69() local_unnamed_addr {
dec_label_pc_17c69:
  %v0_17c6e = load i32, i32* @eax, align 8
  ret i32 %v0_17c6e
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFbxEEEvRT_RKT0_l(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17c6f:
  %v2_17c9f = call i32 @function_33809(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17cb0

bb:                                               ; preds = %dec_label_pc_17c6f
  %v1_17cae = call i32 @function_17cb5()
  br label %dec_label_pc_17cb0

dec_label_pc_17cb0:                               ; preds = %bb, %dec_label_pc_17c6f
  %v2_17cae = phi i32 [ %v1_17cae, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17c6f ]
  ret i32 %v2_17cae
}

define i32 @function_17cb5() local_unnamed_addr {
dec_label_pc_17cb5:
  %v0_17cb6 = load i32, i32* @eax, align 8
  ret i32 %v0_17cb6
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE21create_new_connectionERKNS0_5slot1IbxS9_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17cb8:
  store i32 %arg2, i32* @eax, align 8
  %v1_17ce3 = call i32 @function_3389c(i32 %arg2)
  ret i32 %v1_17ce3
}

define i32 @function_17cf3() local_unnamed_addr {
dec_label_pc_17cf3:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_17cf3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17cf3 = add i32 %v0_17cf3, -599422013
  %v2_17cf3 = inttoptr i32 %v1_17cf3 to i32*
  %v3_17cf3 = load i32, i32* %v2_17cf3, align 4
  %v4_17cf3 = add i32 %v3_17cf3, -1
  store i32 %v4_17cf3, i32* %v2_17cf3, align 4
  %v0_17cf9 = load i32, i32* @eax, align 8
  %v0_17cfd = load i32, i32* %ebx.global-to-local, align 8
  %v2_17d00 = call i32 @function_33a28(i32 %v0_17cfd, i32 %v0_17cf9)
  %v0_17d09 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17d09 = add i32 %v0_17d09, -28
  %v2_17d09 = inttoptr i32 %v1_17d09 to i32*
  %v3_17d09 = load i32, i32* %v2_17d09, align 4
  store i32 %v3_17d09, i32* @eax, align 8
  %v2_17d0f = call i32 @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE(i32 %v3_17d09, i32 %v0_17cfd)
  %v1_17d14 = add i32 %v0_17d09, -28
  %v2_17d14 = inttoptr i32 %v1_17d14 to i32*
  %v3_17d14 = load i32, i32* %v2_17d14, align 4
  store i32 %v3_17d14, i32* @eax, align 8
  %v1_17d17 = add i32 %v0_17d09, -12
  %v2_17d17 = inttoptr i32 %v1_17d17 to i32*
  %v3_17d17 = load i32, i32* %v2_17d17, align 4
  %v4_17d1a = icmp eq i32 %v3_17d17, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17d1a, label %bb, label %dec_label_pc_17d23

bb:                                               ; preds = %dec_label_pc_17cf3
  %v1_17d21 = call i32 @function_17d3e()
  store i32 %v1_17d21, i32* @eax, align 8
  br label %dec_label_pc_17d23

dec_label_pc_17d23:                               ; preds = %bb, %dec_label_pc_17cf3
  %v0_17d23 = call i32 @function_17d39()
  ret i32 %v0_17d23

; uselistorder directives
  uselistorder i32 %v0_17d09, { 1, 0, 2 }
}

define i32 @function_17d39() local_unnamed_addr {
dec_label_pc_17d39:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_17d3e() local_unnamed_addr {
dec_label_pc_17d3e:
  %v0_17d44 = load i32, i32* @eax, align 8
  ret i32 %v0_17d44
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17d48:
  %v2_17d62 = load i32, i32* %arg1, align 4
  %v1_17d64 = icmp eq i32 %v2_17d62, 0
  %v1_17d66 = icmp eq i1 %v1_17d64, false
  br i1 %v1_17d66, label %bb, label %dec_label_pc_17d68

bb:                                               ; preds = %dec_label_pc_17d48
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_17d66 = call i32 @function_17d8c(i32 %tmp105)
  br label %dec_label_pc_17d68

dec_label_pc_17d68:                               ; preds = %bb, %dec_label_pc_17d48
  %v3_17d80 = phi i32 [ %v3_17d66, %bb ], [ %v2_17d62, %dec_label_pc_17d48 ]
  ret i32 %v3_17d80

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17d8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d8c:
  %v0_17d8c = load i32, i32* @ebp, align 4
  %v1_17d8c = add i32 %v0_17d8c, -28
  %v2_17d8c = inttoptr i32 %v1_17d8c to i32*
  %v3_17d8c = load i32, i32* %v2_17d8c, align 4
  %v1_17d8f = inttoptr i32 %v3_17d8c to i32*
  %v2_17d8f = load i32, i32* %v1_17d8f, align 4
  store i32 %v2_17d8f, i32* @eax, align 8
  %v1_17d91 = add i32 %v0_17d8c, -12
  %v2_17d91 = inttoptr i32 %v1_17d91 to i32*
  %v3_17d91 = load i32, i32* %v2_17d91, align 4
  %v4_17d94 = icmp eq i32 %v3_17d91, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17d94, label %bb, label %dec_label_pc_17d9d

bb:                                               ; preds = %dec_label_pc_17d8c
  %v1_17d9b = call i32 @function_17da2()
  br label %dec_label_pc_17d9d

dec_label_pc_17d9d:                               ; preds = %bb, %dec_label_pc_17d8c
  %v2_17d9b = phi i32 [ %v1_17d9b, %bb ], [ %v2_17d8f, %dec_label_pc_17d8c ]
  ret i32 %v2_17d9b
}

define i32 @function_17da2() local_unnamed_addr {
dec_label_pc_17da2:
  %v0_17da3 = load i32, i32* @eax, align 8
  ret i32 %v0_17da3
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17da4:
  %v1_17dc1 = call i32 @unknown_33c2e(i32 %arg1)
  store i32 %v1_17dc1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17dd2

bb:                                               ; preds = %dec_label_pc_17da4
  %v1_17dd0 = call i32 @function_17dd7()
  br label %dec_label_pc_17dd2

dec_label_pc_17dd2:                               ; preds = %bb, %dec_label_pc_17da4
  %v2_17dd0 = phi i32 [ %v1_17dd0, %bb ], [ %v1_17dc1, %dec_label_pc_17da4 ]
  ret i32 %v2_17dd0
}

define i32 @function_17dd7() local_unnamed_addr {
dec_label_pc_17dd7:
  %v0_17dd8 = load i32, i32* @eax, align 8
  ret i32 %v0_17dd8
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE9push_backERKSB_RKSJ_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17dda:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg2 to i32
  %v2_17dfd = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17dfd, i32* @eax, align 8
  %v1_17e03 = call i32 @function_33cc0(i32 %v2_17dfd)
  %v2_17e0b = load i32, i32* %arg2, align 4
  %v10_17e0d = icmp eq i32 %v2_17e0b, 2
  %v1_17e10 = icmp eq i1 %v10_17e0d, false
  %v1_17e35 = add i32 %arg1, 8
  br i1 %v1_17e10, label %dec_label_pc_17e32, label %dec_label_pc_17e12

dec_label_pc_17e12:                               ; preds = %dec_label_pc_17dda
  %v2_17e18 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17e18, i32* @eax, align 8
  %v2_17e22 = call i32 @function_33cf4(i32 %v2_17e18, i32 %v1_17e35)
  br label %dec_label_pc_17e57

dec_label_pc_17e32:                               ; preds = %dec_label_pc_17dda
  %v2_17e38 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17e38, i32* @eax, align 8
  %v3_17e49 = call i32 @function_33d3e(i32 %v2_17e38, i32 %v1_17e35, i32 %tmp113)
  br label %dec_label_pc_17e57

dec_label_pc_17e57:                               ; preds = %dec_label_pc_17e32, %dec_label_pc_17e12
  %storemerge1 = load i32, i32* %stack_var_-44, align 4
  store i32 %storemerge1, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v4_17e72 = call i32 @function_33dcc(i32 %arg1, i32 %v2_17dfd, i32 %tmp113, i32 %arg3)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v1_17e35, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE10push_frontERKSB_RKSJ_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17e8a:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg2 to i32
  %v2_17ead = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17ead, i32* @eax, align 8
  %v1_17eb3 = call i32 @function_33d70(i32 %v2_17ead)
  %v2_17ebb = load i32, i32* %arg2, align 4
  %v1_17ebd = icmp eq i32 %v2_17ebb, 0
  %v1_17ebf = icmp eq i1 %v1_17ebd, false
  %v1_17ee4 = add i32 %arg1, 8
  br i1 %v1_17ebf, label %dec_label_pc_17ee1, label %dec_label_pc_17ec1

dec_label_pc_17ec1:                               ; preds = %dec_label_pc_17e8a
  %v2_17ec7 = ptrtoint i32* %stack_var_-44 to i32
  %v2_17ed1 = call i32 @unknown_34068(i32 %v2_17ec7, i32 %v1_17ee4)
  br label %dec_label_pc_17f06

dec_label_pc_17ee1:                               ; preds = %dec_label_pc_17e8a
  %v2_17ee7 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17ee7, i32* @eax, align 8
  %v3_17ef8 = call i32 @function_340b2(i32 %v2_17ee7, i32 %v1_17ee4, i32 %tmp114)
  br label %dec_label_pc_17f06

dec_label_pc_17f06:                               ; preds = %dec_label_pc_17ee1, %dec_label_pc_17ec1
  %storemerge1 = load i32, i32* %stack_var_-44, align 4
  store i32 %storemerge1, i32* %stack_var_-20, align 4
  %v4_17f21 = call i32 @_ZTVN10__cxxabiv120__si_class_type_infoE.1858(i32 %arg1, i32 %v2_17ead, i32 %tmp114, i32 %arg3)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17f32

bb:                                               ; preds = %dec_label_pc_17f06
  %v1_17f30 = call i32 @function_17f37()
  br label %dec_label_pc_17f32

dec_label_pc_17f32:                               ; preds = %bb, %dec_label_pc_17f06
  %v2_17f30 = phi i32 [ %v1_17f30, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17f06 ]
  ret i32 %v2_17f30

; uselistorder directives
  uselistorder i32 %v1_17ee4, { 1, 0 }
}

define i32 @function_17f37() local_unnamed_addr {
dec_label_pc_17f37:
  %v0_17f38 = load i32, i32* @eax, align 8
  ret i32 %v0_17f38
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17f3a:
  %v2_17f54 = load i32, i32* %arg1, align 4
  %v1_17f56 = icmp eq i32 %v2_17f54, 0
  %v1_17f58 = icmp eq i1 %v1_17f56, false
  br i1 %v1_17f58, label %bb, label %dec_label_pc_17f5a

bb:                                               ; preds = %dec_label_pc_17f3a
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_17f58 = call i32 @function_17f7e(i32 %tmp105)
  br label %dec_label_pc_17f5a

dec_label_pc_17f5a:                               ; preds = %bb, %dec_label_pc_17f3a
  %v3_17f72 = phi i32 [ %v3_17f58, %bb ], [ %v2_17f54, %dec_label_pc_17f3a ]
  ret i32 %v3_17f72

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17f7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_17f7e:
  %v0_17f7e = load i32, i32* @ebp, align 4
  %v1_17f7e = add i32 %v0_17f7e, -28
  %v2_17f7e = inttoptr i32 %v1_17f7e to i32*
  %v3_17f7e = load i32, i32* %v2_17f7e, align 4
  %v1_17f81 = inttoptr i32 %v3_17f7e to i32*
  %v2_17f81 = load i32, i32* %v1_17f81, align 4
  store i32 %v2_17f81, i32* @eax, align 8
  %v1_17f83 = add i32 %v0_17f7e, -12
  %v2_17f83 = inttoptr i32 %v1_17f83 to i32*
  %v3_17f83 = load i32, i32* %v2_17f83, align 4
  %v4_17f86 = icmp eq i32 %v3_17f83, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_17f86, label %bb, label %dec_label_pc_17f8f

bb:                                               ; preds = %dec_label_pc_17f7e
  %v1_17f8d = call i32 @function_17f94()
  br label %dec_label_pc_17f8f

dec_label_pc_17f8f:                               ; preds = %bb, %dec_label_pc_17f7e
  %v2_17f8d = phi i32 [ %v1_17f8d, %bb ], [ %v2_17f81, %dec_label_pc_17f7e ]
  ret i32 %v2_17f8d
}

define i32 @function_17f94() local_unnamed_addr {
dec_label_pc_17f94:
  %v0_17f95 = load i32, i32* @eax, align 8
  ret i32 %v0_17f95
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE13set_group_keyERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f96:
  %v1_17fb6 = add i32 %arg1, 68
  store i32 %arg2, i32* @eax, align 8
  %v2_17fc3 = call i32 @function_2fa1c(i32 %v1_17fb6, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_17fd4

bb:                                               ; preds = %dec_label_pc_17f96
  %v1_17fd2 = call i32 @function_17fd9()
  br label %dec_label_pc_17fd4

dec_label_pc_17fd4:                               ; preds = %bb, %dec_label_pc_17f96
  %v2_17fd2 = phi i32 [ %v1_17fd2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17f96 ]
  ret i32 %v2_17fd2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_17fd9() local_unnamed_addr {
dec_label_pc_17fd9:
  %v0_17fda = load i32, i32* @eax, align 8
  ret i32 %v0_17fda
}

define i32 @_ZN5boost8weak_ptrINS_8signals26detail20connection_body_baseEEC1INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEERKNS_10shared_ptrIT_EENS_6detail24sp_enable_if_convertibleISK_S3_E4typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17fdc:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_18003 = inttoptr i32 %arg2 to i32*
  %v2_18003 = load i32, i32* %v1_18003, align 4
  store i32 %v2_18003, i32* %arg1, align 4
  %v1_1800d = add i32 %arg2, 4
  %v1_18013 = add i32 %tmp105, 4
  %v2_1801d = call i32 @function_1a382(i32 %v1_18013, i32 %v1_1800d)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1802e

bb:                                               ; preds = %dec_label_pc_17fdc
  %v1_1802c = call i32 @function_18033()
  br label %dec_label_pc_1802e

dec_label_pc_1802e:                               ; preds = %bb, %dec_label_pc_17fdc
  %v2_1802c = phi i32 [ %v1_1802c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_17fdc ]
  ret i32 %v2_1802c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_18033() local_unnamed_addr {
dec_label_pc_18033:
  %v0_18034 = load i32, i32* @eax, align 8
  ret i32 %v0_18034
}

define i32 @_ZN5boost8functionIFvRKSsEEC1IPS3_EET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS7_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18036:
  %v3_1806e = call i32 @unknown_342b6(i32 %arg1, i32 %arg2, i32 0)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1807f

bb:                                               ; preds = %dec_label_pc_18036
  %v1_1807d = call i32 @function_18084()
  br label %dec_label_pc_1807f

dec_label_pc_1807f:                               ; preds = %bb, %dec_label_pc_18036
  %v2_1807d = phi i32 [ %v1_1807d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18036 ]
  ret i32 %v2_1807d
}

define i32 @function_18084() local_unnamed_addr {
dec_label_pc_18084:
  %v0_18085 = load i32, i32* @eax, align 8
  ret i32 %v0_18085
}

define i32 @_ZN5boost9function1IvRKSsE4swapERS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18086:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 8
  %v15_180a7 = icmp eq i32 %arg2, %arg1
  br i1 %v15_180a7, label %bb, label %dec_label_pc_180ac

bb:                                               ; preds = %dec_label_pc_18086
  %v3_180aa = call i32 @function_18111(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_180ac

dec_label_pc_180ac:                               ; preds = %bb, %dec_label_pc_18086
  %v2_180ac = ptrtoint i32* %stack_var_-32 to i32
  %v1_180b2 = call i32 @function_2d7b8(i32 %v2_180ac)
  store i32 %v2_180ac, i32* @eax, align 8
  %v2_180c4 = call i32 @function_34364(i32 %v2_180ac, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v2_180d6 = call i32 @function_34364(i32 %arg1, i32 %arg2)
  store i32 %arg2, i32* @eax, align 8
  %v2_180e8 = call i32 @function_34364(i32 %arg2, i32 %v2_180ac)
  %v1_180f8 = call i32 @function_18112(i32 %v2_180ac)
  ret i32 %v1_180f8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_34364, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 2, 1, 3, 4, 0 }
}

define i32 @function_180fb() local_unnamed_addr {
dec_label_pc_180fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_180fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_180fb
}

define i32 @function_18111(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18111:
  %v0_18111 = load i32, i32* @eax, align 8
  ret i32 %v0_18111
}

define i32 @function_18112(i32 %arg1) local_unnamed_addr {
dec_label_pc_18112:
  %v0_18112 = load i32, i32* @ebp, align 4
  %v1_18112 = add i32 %v0_18112, -12
  %v2_18112 = inttoptr i32 %v1_18112 to i32*
  %v3_18112 = load i32, i32* %v2_18112, align 4
  %v3_18115 = xor i32 %v3_18112, ptrtoint ([3 x i8]* @3 to i32)
  %v4_18115 = icmp eq i32 %v3_18115, 0
  store i32 %v3_18115, i32* @eax, align 8
  br i1 %v4_18115, label %bb, label %dec_label_pc_1811e

bb:                                               ; preds = %dec_label_pc_18112
  %v1_1811c = call i32 @function_18123()
  br label %dec_label_pc_1811e

dec_label_pc_1811e:                               ; preds = %bb, %dec_label_pc_18112
  %v2_1811c = phi i32 [ %v1_1811c, %bb ], [ %v3_18115, %dec_label_pc_18112 ]
  ret i32 %v2_1811c
}

define i32 @function_18123() local_unnamed_addr {
dec_label_pc_18123:
  %v0_18128 = load i32, i32* @eax, align 8
  ret i32 %v0_18128
}

define i32 @_ZN5boost10visit_eachINS_8signals26detail23tracked_objects_visitorEFvRKSsEEEvRT_RKT0_l(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18129:
  store i32 %arg1, i32* @eax, align 8
  %v2_18159 = call i32 @function_344f7(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1816a

bb:                                               ; preds = %dec_label_pc_18129
  %v1_18168 = call i32 @function_1816f()
  br label %dec_label_pc_1816a

dec_label_pc_1816a:                               ; preds = %bb, %dec_label_pc_18129
  %v2_18168 = phi i32 [ %v1_18168, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18129 ]
  ret i32 %v2_18168

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1816f() local_unnamed_addr {
dec_label_pc_1816f:
  %v0_18170 = load i32, i32* @eax, align 8
  ret i32 %v0_18170
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE21create_new_connectionERKNS0_5slot1IvS4_SB_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18172:
  store i32 %arg2, i32* @eax, align 8
  %v1_1819d = call i32 @function_3458a(i32 %arg2)
  ret i32 %v1_1819d
}

define i32 @function_181ad() local_unnamed_addr {
dec_label_pc_181ad:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_181ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_181ad = add i32 %v0_181ad, -599422013
  %v2_181ad = inttoptr i32 %v1_181ad to i32*
  %v3_181ad = load i32, i32* %v2_181ad, align 4
  %v4_181ad = add i32 %v3_181ad, -1
  store i32 %v4_181ad, i32* %v2_181ad, align 4
  %v0_181b3 = load i32, i32* @eax, align 8
  %v0_181b7 = load i32, i32* %ebx.global-to-local, align 8
  %v2_181ba = call i32 @function_34716(i32 %v0_181b7, i32 %v0_181b3)
  %v0_181c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_181c3 = add i32 %v0_181c3, -28
  %v2_181c3 = inttoptr i32 %v1_181c3 to i32*
  %v3_181c3 = load i32, i32* %v2_181c3, align 4
  store i32 %v3_181c3, i32* @eax, align 8
  %v2_181c9 = call i32 @function_347ca(i32 %v3_181c3, i32 %v0_181b7)
  %v1_181ce = add i32 %v0_181c3, -28
  %v2_181ce = inttoptr i32 %v1_181ce to i32*
  %v3_181ce = load i32, i32* %v2_181ce, align 4
  store i32 %v3_181ce, i32* @eax, align 8
  %v1_181d1 = add i32 %v0_181c3, -12
  %v2_181d1 = inttoptr i32 %v1_181d1 to i32*
  %v3_181d1 = load i32, i32* %v2_181d1, align 4
  %v4_181d4 = icmp eq i32 %v3_181d1, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_181d4, label %bb, label %dec_label_pc_181dd

bb:                                               ; preds = %dec_label_pc_181ad
  %v1_181db = call i32 @function_181f8()
  store i32 %v1_181db, i32* @eax, align 8
  br label %dec_label_pc_181dd

dec_label_pc_181dd:                               ; preds = %bb, %dec_label_pc_181ad
  %v0_181dd = call i32 @function_181f3()
  ret i32 %v0_181dd

; uselistorder directives
  uselistorder i32 %v0_181c3, { 1, 0, 2 }
}

define i32 @function_181f3() local_unnamed_addr {
dec_label_pc_181f3:
  %v0_181f3 = load i32, i32* @eax, align 8
  ret i32 %v0_181f3
}

define i32 @function_181f8() local_unnamed_addr {
dec_label_pc_181f8:
  %v0_181fe = load i32, i32* @eax, align 8
  ret i32 %v0_181fe
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_18202:
  %v2_1821c = load i32, i32* %arg1, align 4
  %v1_1821e = icmp eq i32 %v2_1821c, 0
  %v1_18220 = icmp eq i1 %v1_1821e, false
  br i1 %v1_18220, label %bb, label %dec_label_pc_18222

bb:                                               ; preds = %dec_label_pc_18202
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_18220 = call i32 @function_18246(i32 %tmp105)
  br label %dec_label_pc_18222

dec_label_pc_18222:                               ; preds = %bb, %dec_label_pc_18202
  %v3_1823a = phi i32 [ %v3_18220, %bb ], [ %v2_1821c, %dec_label_pc_18202 ]
  ret i32 %v3_1823a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18246(i32 %arg1) local_unnamed_addr {
dec_label_pc_18246:
  %v0_18246 = load i32, i32* @ebp, align 4
  %v1_18246 = add i32 %v0_18246, -28
  %v2_18246 = inttoptr i32 %v1_18246 to i32*
  %v3_18246 = load i32, i32* %v2_18246, align 4
  %v1_18249 = inttoptr i32 %v3_18246 to i32*
  %v2_18249 = load i32, i32* %v1_18249, align 4
  store i32 %v2_18249, i32* @eax, align 8
  %v1_1824b = add i32 %v0_18246, -12
  %v2_1824b = inttoptr i32 %v1_1824b to i32*
  %v3_1824b = load i32, i32* %v2_1824b, align 4
  %v4_1824e = icmp eq i32 %v3_1824b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1824e, label %bb, label %dec_label_pc_18257

bb:                                               ; preds = %dec_label_pc_18246
  %v1_18255 = call i32 @function_1825c()
  br label %dec_label_pc_18257

dec_label_pc_18257:                               ; preds = %bb, %dec_label_pc_18246
  %v2_18255 = phi i32 [ %v1_18255, %bb ], [ %v2_18249, %dec_label_pc_18246 ]
  ret i32 %v2_18255
}

define i32 @function_1825c() local_unnamed_addr {
dec_label_pc_1825c:
  %v0_1825d = load i32, i32* @eax, align 8
  ret i32 %v0_1825d
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1825e:
  store i32 %arg1, i32* @eax, align 8
  %v1_1827b = call i32 @function_3491c(i32 %arg1)
  store i32 %v1_1827b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1828c

bb:                                               ; preds = %dec_label_pc_1825e
  %v1_1828a = call i32 @function_18291()
  br label %dec_label_pc_1828c

dec_label_pc_1828c:                               ; preds = %bb, %dec_label_pc_1825e
  %v2_1828a = phi i32 [ %v1_1828a, %bb ], [ %v1_1827b, %dec_label_pc_1825e ]
  ret i32 %v2_1828a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18291() local_unnamed_addr {
dec_label_pc_18291:
  %v0_18292 = load i32, i32* @eax, align 8
  ret i32 %v0_18292
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE9push_backERKSB_RKSL_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18294:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg2 to i32
  %v2_182b7 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_182b7, i32* @eax, align 8
  %v1_182bd = call i32 @function_349ae(i32 %v2_182b7)
  %v2_182c5 = load i32, i32* %arg2, align 4
  %v10_182c7 = icmp eq i32 %v2_182c5, 2
  %v1_182ca = icmp eq i1 %v10_182c7, false
  %v1_182ef = add i32 %arg1, 8
  br i1 %v1_182ca, label %dec_label_pc_182ec, label %dec_label_pc_182cc

dec_label_pc_182cc:                               ; preds = %dec_label_pc_18294
  %v2_182d2 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_182d2, i32* @eax, align 8
  %v2_182dc = call i32 @function_349e2(i32 %v2_182d2, i32 %v1_182ef)
  br label %dec_label_pc_18311

dec_label_pc_182ec:                               ; preds = %dec_label_pc_18294
  %v2_182f2 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_182f2, i32* @eax, align 8
  %v3_18303 = call i32 @function_34a2c(i32 %v2_182f2, i32 %v1_182ef, i32 %tmp113)
  br label %dec_label_pc_18311

dec_label_pc_18311:                               ; preds = %dec_label_pc_182ec, %dec_label_pc_182cc
  %storemerge1 = load i32, i32* %stack_var_-44, align 4
  store i32 %storemerge1, i32* %stack_var_-20, align 4
  %v4_1832c = call i32 @unknown_34aba(i32 %arg1, i32 %v2_182b7, i32 %tmp113, i32 %arg3)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1833d

bb:                                               ; preds = %dec_label_pc_18311
  %v1_1833b = call i32 @function_18342()
  br label %dec_label_pc_1833d

dec_label_pc_1833d:                               ; preds = %bb, %dec_label_pc_18311
  %v2_1833b = phi i32 [ %v1_1833b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18311 ]
  ret i32 %v2_1833b

; uselistorder directives
  uselistorder i32 %v1_182ef, { 1, 0 }
}

define i32 @function_18342() local_unnamed_addr {
dec_label_pc_18342:
  %v0_18343 = load i32, i32* @eax, align 8
  ret i32 %v0_18343
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE10push_frontERKSB_RKSL_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18344:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg2 to i32
  %v2_18367 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18367, i32* @eax, align 8
  %v1_1836d = call i32 @function_34a5e(i32 %v2_18367)
  %v2_18375 = load i32, i32* %arg2, align 4
  %v1_18377 = icmp eq i32 %v2_18375, 0
  %v1_18379 = icmp eq i1 %v1_18377, false
  %v1_1839e = add i32 %arg1, 8
  br i1 %v1_18379, label %dec_label_pc_1839b, label %dec_label_pc_1837b

dec_label_pc_1837b:                               ; preds = %dec_label_pc_18344
  %v2_18381 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1838b = call i32 @function_34d56(i32 %v2_18381, i32 %v1_1839e)
  br label %dec_label_pc_183c0

dec_label_pc_1839b:                               ; preds = %dec_label_pc_18344
  %v2_183a1 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_183a1, i32* @eax, align 8
  %v3_183b2 = call i32 @function_34da0(i32 %v2_183a1, i32 %v1_1839e, i32 %tmp114)
  br label %dec_label_pc_183c0

dec_label_pc_183c0:                               ; preds = %dec_label_pc_1839b, %dec_label_pc_1837b
  %storemerge1 = load i32, i32* %stack_var_-44, align 4
  store i32 %storemerge1, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 8
  %v4_183db = call i32 @function_34b6a(i32 %arg1, i32 %v2_18367, i32 %tmp114, i32 %arg3)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_183ec

bb:                                               ; preds = %dec_label_pc_183c0
  %v1_183ea = call i32 @function_183f1()
  br label %dec_label_pc_183ec

dec_label_pc_183ec:                               ; preds = %bb, %dec_label_pc_183c0
  %v2_183ea = phi i32 [ %v1_183ea, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_183c0 ]
  ret i32 %v2_183ea

; uselistorder directives
  uselistorder i32 %v1_1839e, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_183f1() local_unnamed_addr {
dec_label_pc_183f1:
  %v0_183f2 = load i32, i32* @eax, align 8
  ret i32 %v0_183f2
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_183f4:
  %v2_1840e = load i32, i32* %arg1, align 4
  %v1_18410 = icmp eq i32 %v2_1840e, 0
  %v1_18412 = icmp eq i1 %v1_18410, false
  br i1 %v1_18412, label %dec_label_pc_18438, label %dec_label_pc_18414

dec_label_pc_18414:                               ; preds = %dec_label_pc_183f4
  br label %dec_label_pc_18438

dec_label_pc_18438:                               ; preds = %dec_label_pc_18414, %dec_label_pc_183f4
  %v2_1843b = load i32, i32* %arg1, align 4
  store i32 %v2_1843b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_18449

bb:                                               ; preds = %dec_label_pc_18438
  %v1_18447 = call i32 @function_1844e()
  br label %dec_label_pc_18449

dec_label_pc_18449:                               ; preds = %bb, %dec_label_pc_18438
  %v2_18447 = phi i32 [ %v1_18447, %bb ], [ %v2_1843b, %dec_label_pc_18438 ]
  ret i32 %v2_18447
}

define i32 @function_1844e() local_unnamed_addr {
dec_label_pc_1844e:
  %v0_1844f = load i32, i32* @eax, align 8
  ret i32 %v0_1844f
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE13set_group_keyERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18450:
  store i1 false, i1* @cf, align 1
  %v1_18470 = add i32 %arg1, 68
  store i32 %arg2, i32* @eax, align 8
  %v2_1847d = call i32 @function_2fed6(i32 %v1_18470, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1848e

bb:                                               ; preds = %dec_label_pc_18450
  %v1_1848c = call i32 @function_18493()
  br label %dec_label_pc_1848e

dec_label_pc_1848e:                               ; preds = %bb, %dec_label_pc_18450
  %v2_1848c = phi i32 [ %v1_1848c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18450 ]
  ret i32 %v2_1848c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_18493() local_unnamed_addr {
dec_label_pc_18493:
  %v0_18494 = load i32, i32* @eax, align 8
  ret i32 %v0_18494
}

define i32 @_ZN5boost8weak_ptrINS_8signals26detail20connection_body_baseEEC1INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSE_EEEEENS1_5mutexEEEEERKNS_10shared_ptrIT_EENS_6detail24sp_enable_if_convertibleISM_S3_E4typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18496:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_184bd = inttoptr i32 %arg2 to i32*
  %v2_184bd = load i32, i32* %v1_184bd, align 4
  store i32 %v2_184bd, i32* %arg1, align 4
  %v1_184c7 = add i32 %arg2, 4
  %v1_184cd = add i32 %tmp105, 4
  store i32 %v1_184cd, i32* @eax, align 8
  %v2_184d7 = call i32 @function_1a83c(i32 %v1_184cd, i32 %v1_184c7)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_184e8

bb:                                               ; preds = %dec_label_pc_18496
  %v1_184e6 = call i32 @function_184ed()
  br label %dec_label_pc_184e8

dec_label_pc_184e8:                               ; preds = %bb, %dec_label_pc_18496
  %v2_184e6 = phi i32 [ %v1_184e6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18496 ]
  ret i32 %v2_184e6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_184ed() local_unnamed_addr {
dec_label_pc_184ed:
  %v0_184ee = load i32, i32* @eax, align 8
  ret i32 %v0_184ee
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_184f0:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZSt11__addressofIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEPT_RSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1851a:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_18540

bb:                                               ; preds = %dec_label_pc_1851a
  %v2_1853e = call i32 @function_18545(i32 %arg1)
  br label %dec_label_pc_18540

dec_label_pc_18540:                               ; preds = %bb, %dec_label_pc_1851a
  %v3_1853e = phi i32 [ %v2_1853e, %bb ], [ %arg1, %dec_label_pc_1851a ]
  ret i32 %v3_1853e
}

define i32 @function_18545(i32 %arg1) local_unnamed_addr {
dec_label_pc_18545:
  %v0_18546 = load i32, i32* @eax, align 8
  ret i32 %v0_18546
}

define i32 @_ZSt8_DestroyIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_18547:
  store i32 %arg1, i32* @eax, align 8
  %v1_18564 = call i32 @function_28f65(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_18575

bb:                                               ; preds = %dec_label_pc_18547
  %v1_18573 = call i32 @function_1857a()
  br label %dec_label_pc_18575

dec_label_pc_18575:                               ; preds = %bb, %dec_label_pc_18547
  %v2_18573 = phi i32 [ %v1_18573, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_18547 ]
  ret i32 %v2_18573

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1857a() local_unnamed_addr {
dec_label_pc_1857a:
  %v0_1857b = load i32, i32* @eax, align 8
  ret i32 %v0_1857b
}

define i32 @_ZNK5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E12using_backupEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1857c:
  %v2_18596 = load i32, i32* %arg1, align 4
  %tmp103 = icmp slt i32 %v2_18596, 0
  %v2_18598 = zext i1 %tmp103 to i32
  store i32 %v2_18598, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_185a7

bb:                                               ; preds = %dec_label_pc_1857c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_185a5 = call i32 @function_185ac(i32 %tmp100)
  br label %dec_label_pc_185a7

dec_label_pc_185a7:                               ; preds = %bb, %dec_label_pc_1857c
  %v3_185a5 = phi i32 [ %v2_185a5, %bb ], [ %v2_18598, %dec_label_pc_1857c ]
  ret i32 %v3_185a5

; uselistorder directives
  uselistorder i32 %v2_18598, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_185ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_185ac:
  %v0_185ad = load i32, i32* @eax, align 8
  ret i32 %v0_185ad
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_185ae:
  %tmp123 = icmp ult i32 %arg3, 20
  br i1 %tmp123, label %dec_label_pc_18604, label %bb

bb:                                               ; preds = %dec_label_pc_185ae
  %sext = mul i32 %arg7, 16777216
  %v13_185fe = sdiv i32 %sext, 16777216
  %v14_185fe = sext i8 %arg6 to i32
  %v15_185fe = call i32 @function_18b05(i32 %arg9, i32 %arg8, i32 %v13_185fe, i32 %v14_185fe, i32 %arg5, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %dec_label_pc_185ae, %bb
  %v2_18607 = mul i32 %arg3, 4
  %v1_1860a = add i32 %v2_18607, ptrtoint (i32* @global_var_18b68.1978 to i32)
  %v1_1860f = inttoptr i32 %v1_1860a to i32*
  %v2_1860f = load i32, i32* %v1_1860f, align 4
  ret i32 %v2_1860f

; uselistorder directives
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18604, { 1, 0 }
}

define i32 @function_18613() local_unnamed_addr {
dec_label_pc_18613:
  %v0_18613 = load i32, i32* @ebp, align 4
  %v1_18613 = add i32 %v0_18613, -44
  %v2_18613 = inttoptr i32 %v1_18613 to i32*
  %v3_18613 = load i32, i32* %v2_18613, align 4
  %v1_1861e = add i32 %v0_18613, -87
  %v2_1861e = inttoptr i32 %v1_1861e to i8*
  %v3_1861e = load i8, i8* %v2_1861e, align 1
  %v1_1862e = add i32 %v0_18613, -60
  %v2_1862e = inttoptr i32 %v1_1862e to i32*
  %v3_1862e = load i32, i32* %v2_1862e, align 4
  %v1_18635 = add i32 %v0_18613, -56
  %v2_18635 = inttoptr i32 %v1_18635 to i32*
  %v3_18635 = load i32, i32* %v2_18635, align 4
  %v1_1863c = add i32 %v0_18613, -48
  %v2_1863c = inttoptr i32 %v1_1863c to i32*
  %v3_1863c = load i32, i32* %v2_1863c, align 4
  %v7_1864e = sext i8 %v3_1861e to i32
  %v8_1864e = call i32 @function_18b47(i32 %v3_18613, i32 %v3_1863c, i32 %v3_18635, i32 %v3_1862e, i32 0, i32 %v7_1864e, i32 1)
  ret i32 %v8_1864e

; uselistorder directives
  uselistorder i32 %v0_18613, { 0, 2, 1, 3, 4 }
}

define i32 @function_18653() local_unnamed_addr {
dec_label_pc_18653:
  %v0_18653 = load i32, i32* @ebp, align 4
  %v1_18653 = add i32 %v0_18653, -44
  %v2_18653 = inttoptr i32 %v1_18653 to i32*
  %v3_18653 = load i32, i32* %v2_18653, align 4
  %v1_1865e = add i32 %v0_18653, -86
  %v2_1865e = inttoptr i32 %v1_1865e to i8*
  %v3_1865e = load i8, i8* %v2_1865e, align 1
  %v1_1866e = add i32 %v0_18653, -60
  %v2_1866e = inttoptr i32 %v1_1866e to i32*
  %v3_1866e = load i32, i32* %v2_1866e, align 4
  %v1_18675 = add i32 %v0_18653, -56
  %v2_18675 = inttoptr i32 %v1_18675 to i32*
  %v3_18675 = load i32, i32* %v2_18675, align 4
  %v1_1867c = add i32 %v0_18653, -48
  %v2_1867c = inttoptr i32 %v1_1867c to i32*
  %v3_1867c = load i32, i32* %v2_1867c, align 4
  %v7_18686 = sext i8 %v3_1865e to i32
  %v8_18686 = call i32 @__stack_chk_fail.1304(i32 %v3_18653, i32 %v3_1867c, i32 %v3_18675, i32 %v3_1866e, i32 0, i32 %v7_18686, i32 1)
  %v8_1868e = call i32 @function_18b47(i32 %v3_18653, i32 %v3_1867c, i32 %v3_18675, i32 %v3_1866e, i32 0, i32 %v7_18686, i32 1)
  ret i32 %v8_1868e

; uselistorder directives
  uselistorder i32 %v3_18675, { 1, 0 }
  uselistorder i32 %v3_1866e, { 1, 0 }
  uselistorder i32 %v3_18653, { 1, 0 }
  uselistorder i32 %v0_18653, { 0, 2, 1, 3, 4 }
}

define i32 @function_18693() local_unnamed_addr {
dec_label_pc_18693:
  %v0_18693 = load i32, i32* @ebp, align 4
  %v1_18693 = add i32 %v0_18693, -44
  %v2_18693 = inttoptr i32 %v1_18693 to i32*
  %v3_18693 = load i32, i32* %v2_18693, align 4
  %v1_1869e = add i32 %v0_18693, -85
  %v2_1869e = inttoptr i32 %v1_1869e to i8*
  %v3_1869e = load i8, i8* %v2_1869e, align 1
  %v1_186ae = add i32 %v0_18693, -60
  %v2_186ae = inttoptr i32 %v1_186ae to i32*
  %v3_186ae = load i32, i32* %v2_186ae, align 4
  %v1_186b5 = add i32 %v0_18693, -56
  %v2_186b5 = inttoptr i32 %v1_186b5 to i32*
  %v3_186b5 = load i32, i32* %v2_186b5, align 4
  %v1_186bc = add i32 %v0_18693, -48
  %v2_186bc = inttoptr i32 %v1_186bc to i32*
  %v3_186bc = load i32, i32* %v2_186bc, align 4
  %v6_186c6 = sext i8 %v3_1869e to i32
  %v7_186c6 = call i32 @function_35165(i32 %v3_18693, i32 %v3_186bc, i32 %v3_186b5, i32 %v3_186ae, i32 0, i32 %v6_186c6)
  %v8_186ce = call i32 @function_18b47(i32 %v3_18693, i32 %v3_186bc, i32 %v3_186b5, i32 %v3_186ae, i32 0, i32 %v6_186c6, i32 1)
  ret i32 %v8_186ce

; uselistorder directives
  uselistorder i32 %v3_186b5, { 1, 0 }
  uselistorder i32 %v3_186ae, { 1, 0 }
  uselistorder i32 %v3_18693, { 1, 0 }
  uselistorder i32 %v0_18693, { 0, 2, 1, 3, 4 }
}

define i32 @function_186d3() local_unnamed_addr {
dec_label_pc_186d3:
  %v0_186d3 = load i32, i32* @ebp, align 4
  %v1_186d3 = add i32 %v0_186d3, -44
  %v2_186d3 = inttoptr i32 %v1_186d3 to i32*
  %v3_186d3 = load i32, i32* %v2_186d3, align 4
  %v1_186de = add i32 %v0_186d3, -84
  %v2_186de = inttoptr i32 %v1_186de to i8*
  %v3_186de = load i8, i8* %v2_186de, align 1
  %v1_186ee = add i32 %v0_186d3, -60
  %v2_186ee = inttoptr i32 %v1_186ee to i32*
  %v3_186ee = load i32, i32* %v2_186ee, align 4
  %v1_186f5 = add i32 %v0_186d3, -56
  %v2_186f5 = inttoptr i32 %v1_186f5 to i32*
  %v3_186f5 = load i32, i32* %v2_186f5, align 4
  %v1_186fc = add i32 %v0_186d3, -48
  %v2_186fc = inttoptr i32 %v1_186fc to i32*
  %v3_186fc = load i32, i32* %v2_186fc, align 4
  %v6_18706 = sext i8 %v3_186de to i32
  %v7_18706 = call i32 @function_35165(i32 %v3_186d3, i32 %v3_186fc, i32 %v3_186f5, i32 %v3_186ee, i32 0, i32 %v6_18706)
  %v8_1870e = call i32 @function_18b47(i32 %v3_186d3, i32 %v3_186fc, i32 %v3_186f5, i32 %v3_186ee, i32 0, i32 %v6_18706, i32 1)
  ret i32 %v8_1870e

; uselistorder directives
  uselistorder i32 %v3_186f5, { 1, 0 }
  uselistorder i32 %v3_186ee, { 1, 0 }
  uselistorder i32 %v3_186d3, { 1, 0 }
  uselistorder i32 %v0_186d3, { 0, 2, 1, 3, 4 }
}

define i32 @function_18713() local_unnamed_addr {
dec_label_pc_18713:
  %v0_18713 = load i32, i32* @ebp, align 4
  %v1_18713 = add i32 %v0_18713, -44
  %v2_18713 = inttoptr i32 %v1_18713 to i32*
  %v3_18713 = load i32, i32* %v2_18713, align 4
  %v1_1871e = add i32 %v0_18713, -83
  %v2_1871e = inttoptr i32 %v1_1871e to i8*
  %v3_1871e = load i8, i8* %v2_1871e, align 1
  %v1_1872e = add i32 %v0_18713, -60
  %v2_1872e = inttoptr i32 %v1_1872e to i32*
  %v3_1872e = load i32, i32* %v2_1872e, align 4
  %v1_18735 = add i32 %v0_18713, -56
  %v2_18735 = inttoptr i32 %v1_18735 to i32*
  %v3_18735 = load i32, i32* %v2_18735, align 4
  %v1_1873c = add i32 %v0_18713, -48
  %v2_1873c = inttoptr i32 %v1_1873c to i32*
  %v3_1873c = load i32, i32* %v2_1873c, align 4
  %v6_18746 = sext i8 %v3_1871e to i32
  %v7_18746 = call i32 @function_35165(i32 %v3_18713, i32 %v3_1873c, i32 %v3_18735, i32 %v3_1872e, i32 0, i32 %v6_18746)
  %v8_1874e = call i32 @function_18b47(i32 %v3_18713, i32 %v3_1873c, i32 %v3_18735, i32 %v3_1872e, i32 0, i32 %v6_18746, i32 1)
  ret i32 %v8_1874e

; uselistorder directives
  uselistorder i32 %v3_18735, { 1, 0 }
  uselistorder i32 %v3_1872e, { 1, 0 }
  uselistorder i32 %v3_18713, { 1, 0 }
  uselistorder i32 %v0_18713, { 0, 2, 1, 3, 4 }
}

define i32 @function_18753() local_unnamed_addr {
dec_label_pc_18753:
  %v0_18753 = load i32, i32* @ebp, align 4
  %v1_18753 = add i32 %v0_18753, -44
  %v2_18753 = inttoptr i32 %v1_18753 to i32*
  %v3_18753 = load i32, i32* %v2_18753, align 4
  %v1_1875e = add i32 %v0_18753, -82
  %v2_1875e = inttoptr i32 %v1_1875e to i8*
  %v3_1875e = load i8, i8* %v2_1875e, align 1
  %v1_1876e = add i32 %v0_18753, -60
  %v2_1876e = inttoptr i32 %v1_1876e to i32*
  %v3_1876e = load i32, i32* %v2_1876e, align 4
  %v1_18775 = add i32 %v0_18753, -56
  %v2_18775 = inttoptr i32 %v1_18775 to i32*
  %v3_18775 = load i32, i32* %v2_18775, align 4
  %v1_1877c = add i32 %v0_18753, -48
  %v2_1877c = inttoptr i32 %v1_1877c to i32*
  %v3_1877c = load i32, i32* %v2_1877c, align 4
  %v6_18786 = sext i8 %v3_1875e to i32
  %v7_18786 = call i32 @function_35165(i32 %v3_18753, i32 %v3_1877c, i32 %v3_18775, i32 %v3_1876e, i32 0, i32 %v6_18786)
  %v8_1878e = call i32 @function_18b47(i32 %v3_18753, i32 %v3_1877c, i32 %v3_18775, i32 %v3_1876e, i32 0, i32 %v6_18786, i32 1)
  ret i32 %v8_1878e

; uselistorder directives
  uselistorder i32 %v3_18775, { 1, 0 }
  uselistorder i32 %v3_1876e, { 1, 0 }
  uselistorder i32 %v3_18753, { 1, 0 }
  uselistorder i32 %v0_18753, { 0, 2, 1, 3, 4 }
}

define i32 @function_18798(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18798:
  %eax.global-to-local = alloca i32, align 4
  %v0_18798 = load i32, i32* @eax, align 8
  %v11_18798 = and i32 %v0_18798, or (i32 zext (i8 ptrtoint (i8** @global_var_18.1931 to i8) to i32), i32 -256)
  store i32 %v11_18798, i32* %eax.global-to-local, align 8
  %v1_1879a = inttoptr i32 %v11_18798 to i32*
  %v2_1879a = load i32, i32* %v1_1879a, align 4
  %v4_1879a = add i32 %v2_1879a, %v11_18798
  store i32 %v4_1879a, i32* %v1_1879a, align 4
  %v0_1879c = load i32, i32* %eax.global-to-local, align 8
  %v1_1879c = inttoptr i32 %v0_1879c to i8*
  %v2_1879c = load i8, i8* %v1_1879c, align 1
  %v4_1879c = trunc i32 %v0_1879c to i8
  %v5_1879c = add i8 %v2_1879c, %v4_1879c
  store i8 %v5_1879c, i8* %v1_1879c, align 1
  %v0_1879e = load i32, i32* @ebp, align 4
  %v1_1879e = add i32 %v0_1879e, -81
  %v2_1879e = inttoptr i32 %v1_1879e to i8*
  %v3_1879e = load i8, i8* %v2_1879e, align 1
  %v1_187ae = add i32 %v0_1879e, -60
  %v2_187ae = inttoptr i32 %v1_187ae to i32*
  %v3_187ae = load i32, i32* %v2_187ae, align 4
  %v1_187b5 = add i32 %v0_1879e, -56
  %v2_187b5 = inttoptr i32 %v1_187b5 to i32*
  %v3_187b5 = load i32, i32* %v2_187b5, align 4
  %v1_187bc = add i32 %v0_1879e, -48
  %v2_187bc = inttoptr i32 %v1_187bc to i32*
  %v3_187bc = load i32, i32* %v2_187bc, align 4
  %v0_187c3 = load i32, i32* %eax.global-to-local, align 8
  %v6_187c6 = sext i8 %v3_1879e to i32
  %v7_187c6 = call i32 @function_35165(i32 %v0_187c3, i32 %v3_187bc, i32 %v3_187b5, i32 %v3_187ae, i32 0, i32 %v6_187c6)
  store i32 %v7_187c6, i32* %eax.global-to-local, align 8
  %v8_187ce = call i32 @function_18b47(i32 %v0_187c3, i32 %v3_187bc, i32 %v3_187b5, i32 %v3_187ae, i32 0, i32 %v6_187c6, i32 ptrtoint (i32* @2 to i32))
  store i32 %v8_187ce, i32* %eax.global-to-local, align 8
  ret i32 %v8_187ce

; uselistorder directives
  uselistorder i32 %v3_187b5, { 1, 0 }
  uselistorder i32 %v3_187ae, { 1, 0 }
  uselistorder i32 %v0_1879e, { 0, 2, 1, 3 }
  uselistorder i32 %v11_18798, { 0, 2, 1 }
}

define i32 @function_187d3() local_unnamed_addr {
dec_label_pc_187d3:
  %v0_187d3 = load i32, i32* @ebp, align 4
  %v1_187d3 = add i32 %v0_187d3, -44
  %v2_187d3 = inttoptr i32 %v1_187d3 to i32*
  %v3_187d3 = load i32, i32* %v2_187d3, align 4
  %v1_187de = add i32 %v0_187d3, -80
  %v2_187de = inttoptr i32 %v1_187de to i8*
  %v3_187de = load i8, i8* %v2_187de, align 1
  %v1_187ee = add i32 %v0_187d3, -60
  %v2_187ee = inttoptr i32 %v1_187ee to i32*
  %v3_187ee = load i32, i32* %v2_187ee, align 4
  %v1_187f5 = add i32 %v0_187d3, -56
  %v2_187f5 = inttoptr i32 %v1_187f5 to i32*
  %v3_187f5 = load i32, i32* %v2_187f5, align 4
  %v1_187fc = add i32 %v0_187d3, -48
  %v2_187fc = inttoptr i32 %v1_187fc to i32*
  %v3_187fc = load i32, i32* %v2_187fc, align 4
  %v6_18806 = sext i8 %v3_187de to i32
  %v7_18806 = call i32 @function_35165(i32 %v3_187d3, i32 %v3_187fc, i32 %v3_187f5, i32 %v3_187ee, i32 0, i32 %v6_18806)
  %v8_1880e = call i32 @function_18b47(i32 %v3_187d3, i32 %v3_187fc, i32 %v3_187f5, i32 %v3_187ee, i32 0, i32 %v6_18806, i32 1)
  ret i32 %v8_1880e

; uselistorder directives
  uselistorder i32 %v3_187f5, { 1, 0 }
  uselistorder i32 %v3_187ee, { 1, 0 }
  uselistorder i32 %v3_187d3, { 1, 0 }
  uselistorder i32 %v0_187d3, { 0, 2, 1, 3, 4 }
}

define i32 @function_18813() local_unnamed_addr {
dec_label_pc_18813:
  %v0_18813 = load i32, i32* @ebp, align 4
  %v1_18813 = add i32 %v0_18813, -44
  %v2_18813 = inttoptr i32 %v1_18813 to i32*
  %v3_18813 = load i32, i32* %v2_18813, align 4
  %v1_1881e = add i32 %v0_18813, -79
  %v2_1881e = inttoptr i32 %v1_1881e to i8*
  %v3_1881e = load i8, i8* %v2_1881e, align 1
  %v1_1882e = add i32 %v0_18813, -60
  %v2_1882e = inttoptr i32 %v1_1882e to i32*
  %v3_1882e = load i32, i32* %v2_1882e, align 4
  %v1_18835 = add i32 %v0_18813, -56
  %v2_18835 = inttoptr i32 %v1_18835 to i32*
  %v3_18835 = load i32, i32* %v2_18835, align 4
  %v1_1883c = add i32 %v0_18813, -48
  %v2_1883c = inttoptr i32 %v1_1883c to i32*
  %v3_1883c = load i32, i32* %v2_1883c, align 4
  %v6_18846 = sext i8 %v3_1881e to i32
  %v7_18846 = call i32 @function_35165(i32 %v3_18813, i32 %v3_1883c, i32 %v3_18835, i32 %v3_1882e, i32 0, i32 %v6_18846)
  %v8_1884e = call i32 @function_18b47(i32 %v3_18813, i32 %v3_1883c, i32 %v3_18835, i32 %v3_1882e, i32 0, i32 %v6_18846, i32 1)
  ret i32 %v8_1884e

; uselistorder directives
  uselistorder i32 %v3_18835, { 1, 0 }
  uselistorder i32 %v3_1882e, { 1, 0 }
  uselistorder i32 %v3_18813, { 1, 0 }
  uselistorder i32 %v0_18813, { 0, 2, 1, 3, 4 }
}

define i32 @function_18853() local_unnamed_addr {
dec_label_pc_18853:
  %v0_18853 = load i32, i32* @ebp, align 4
  %v1_18853 = add i32 %v0_18853, -44
  %v2_18853 = inttoptr i32 %v1_18853 to i32*
  %v3_18853 = load i32, i32* %v2_18853, align 4
  %v1_1885e = add i32 %v0_18853, -78
  %v2_1885e = inttoptr i32 %v1_1885e to i8*
  %v3_1885e = load i8, i8* %v2_1885e, align 1
  %v1_1886e = add i32 %v0_18853, -60
  %v2_1886e = inttoptr i32 %v1_1886e to i32*
  %v3_1886e = load i32, i32* %v2_1886e, align 4
  %v1_18875 = add i32 %v0_18853, -56
  %v2_18875 = inttoptr i32 %v1_18875 to i32*
  %v3_18875 = load i32, i32* %v2_18875, align 4
  %v1_1887c = add i32 %v0_18853, -48
  %v2_1887c = inttoptr i32 %v1_1887c to i32*
  %v3_1887c = load i32, i32* %v2_1887c, align 4
  %v6_18886 = sext i8 %v3_1885e to i32
  %v7_18886 = call i32 @function_35165(i32 %v3_18853, i32 %v3_1887c, i32 %v3_18875, i32 %v3_1886e, i32 0, i32 %v6_18886)
  %v8_1888e = call i32 @function_18b47(i32 %v3_18853, i32 %v3_1887c, i32 %v3_18875, i32 %v3_1886e, i32 0, i32 %v6_18886, i32 1)
  ret i32 %v8_1888e

; uselistorder directives
  uselistorder i32 %v3_18875, { 1, 0 }
  uselistorder i32 %v3_1886e, { 1, 0 }
  uselistorder i32 %v3_18853, { 1, 0 }
  uselistorder i32 %v0_18853, { 0, 2, 1, 3, 4 }
}

define i32 @function_18893() local_unnamed_addr {
dec_label_pc_18893:
  %v0_18893 = load i32, i32* @ebp, align 4
  %v1_18893 = add i32 %v0_18893, -44
  %v2_18893 = inttoptr i32 %v1_18893 to i32*
  %v3_18893 = load i32, i32* %v2_18893, align 4
  %v1_1889e = add i32 %v0_18893, -77
  %v2_1889e = inttoptr i32 %v1_1889e to i8*
  %v3_1889e = load i8, i8* %v2_1889e, align 1
  %v1_188ae = add i32 %v0_18893, -60
  %v2_188ae = inttoptr i32 %v1_188ae to i32*
  %v3_188ae = load i32, i32* %v2_188ae, align 4
  %v1_188b5 = add i32 %v0_18893, -56
  %v2_188b5 = inttoptr i32 %v1_188b5 to i32*
  %v3_188b5 = load i32, i32* %v2_188b5, align 4
  %v1_188bc = add i32 %v0_18893, -48
  %v2_188bc = inttoptr i32 %v1_188bc to i32*
  %v3_188bc = load i32, i32* %v2_188bc, align 4
  %v6_188c6 = sext i8 %v3_1889e to i32
  %v7_188c6 = call i32 @function_35165(i32 %v3_18893, i32 %v3_188bc, i32 %v3_188b5, i32 %v3_188ae, i32 0, i32 %v6_188c6)
  %v8_188ce = call i32 @function_18b47(i32 %v3_18893, i32 %v3_188bc, i32 %v3_188b5, i32 %v3_188ae, i32 0, i32 %v6_188c6, i32 1)
  ret i32 %v8_188ce

; uselistorder directives
  uselistorder i32 %v3_188b5, { 1, 0 }
  uselistorder i32 %v3_188ae, { 1, 0 }
  uselistorder i32 %v3_18893, { 1, 0 }
  uselistorder i32 %v0_18893, { 0, 2, 1, 3, 4 }
}

define i32 @function_188d3() local_unnamed_addr {
dec_label_pc_188d3:
  %v0_188d3 = load i32, i32* @ebp, align 4
  %v1_188d3 = add i32 %v0_188d3, -44
  %v2_188d3 = inttoptr i32 %v1_188d3 to i32*
  %v3_188d3 = load i32, i32* %v2_188d3, align 4
  %v1_188de = add i32 %v0_188d3, -76
  %v2_188de = inttoptr i32 %v1_188de to i8*
  %v3_188de = load i8, i8* %v2_188de, align 1
  %v1_188ee = add i32 %v0_188d3, -60
  %v2_188ee = inttoptr i32 %v1_188ee to i32*
  %v3_188ee = load i32, i32* %v2_188ee, align 4
  %v1_188f5 = add i32 %v0_188d3, -56
  %v2_188f5 = inttoptr i32 %v1_188f5 to i32*
  %v3_188f5 = load i32, i32* %v2_188f5, align 4
  %v1_188fc = add i32 %v0_188d3, -48
  %v2_188fc = inttoptr i32 %v1_188fc to i32*
  %v3_188fc = load i32, i32* %v2_188fc, align 4
  %v6_18906 = sext i8 %v3_188de to i32
  %v7_18906 = call i32 @function_35165(i32 %v3_188d3, i32 %v3_188fc, i32 %v3_188f5, i32 %v3_188ee, i32 0, i32 %v6_18906)
  %v8_1890e = call i32 @function_18b47(i32 %v3_188d3, i32 %v3_188fc, i32 %v3_188f5, i32 %v3_188ee, i32 0, i32 %v6_18906, i32 1)
  ret i32 %v8_1890e

; uselistorder directives
  uselistorder i32 %v3_188f5, { 1, 0 }
  uselistorder i32 %v3_188ee, { 1, 0 }
  uselistorder i32 %v3_188d3, { 1, 0 }
  uselistorder i32 %v0_188d3, { 0, 2, 1, 3, 4 }
}

define i32 @function_18913() local_unnamed_addr {
dec_label_pc_18913:
  %v0_18913 = load i32, i32* @ebp, align 4
  %v1_18913 = add i32 %v0_18913, -44
  %v2_18913 = inttoptr i32 %v1_18913 to i32*
  %v3_18913 = load i32, i32* %v2_18913, align 4
  %v1_1891e = add i32 %v0_18913, -75
  %v2_1891e = inttoptr i32 %v1_1891e to i8*
  %v3_1891e = load i8, i8* %v2_1891e, align 1
  %v1_1892e = add i32 %v0_18913, -60
  %v2_1892e = inttoptr i32 %v1_1892e to i32*
  %v3_1892e = load i32, i32* %v2_1892e, align 4
  %v1_18935 = add i32 %v0_18913, -56
  %v2_18935 = inttoptr i32 %v1_18935 to i32*
  %v3_18935 = load i32, i32* %v2_18935, align 4
  %v1_1893c = add i32 %v0_18913, -48
  %v2_1893c = inttoptr i32 %v1_1893c to i32*
  %v3_1893c = load i32, i32* %v2_1893c, align 4
  %v6_18946 = sext i8 %v3_1891e to i32
  %v7_18946 = call i32 @function_35165(i32 %v3_18913, i32 %v3_1893c, i32 %v3_18935, i32 %v3_1892e, i32 0, i32 %v6_18946)
  %v8_1894e = call i32 @function_18b47(i32 %v3_18913, i32 %v3_1893c, i32 %v3_18935, i32 %v3_1892e, i32 0, i32 %v6_18946, i32 1)
  ret i32 %v8_1894e

; uselistorder directives
  uselistorder i32 %v3_18935, { 1, 0 }
  uselistorder i32 %v3_1892e, { 1, 0 }
  uselistorder i32 %v3_18913, { 1, 0 }
  uselistorder i32 %v0_18913, { 0, 2, 1, 3, 4 }
}

define i32 @function_18953() local_unnamed_addr {
dec_label_pc_18953:
  %v0_18953 = load i32, i32* @ebp, align 4
  %v1_18953 = add i32 %v0_18953, -44
  %v2_18953 = inttoptr i32 %v1_18953 to i32*
  %v3_18953 = load i32, i32* %v2_18953, align 4
  %v1_1895e = add i32 %v0_18953, -74
  %v2_1895e = inttoptr i32 %v1_1895e to i8*
  %v3_1895e = load i8, i8* %v2_1895e, align 1
  %v1_1896e = add i32 %v0_18953, -60
  %v2_1896e = inttoptr i32 %v1_1896e to i32*
  %v3_1896e = load i32, i32* %v2_1896e, align 4
  %v1_18975 = add i32 %v0_18953, -56
  %v2_18975 = inttoptr i32 %v1_18975 to i32*
  %v3_18975 = load i32, i32* %v2_18975, align 4
  %v1_1897c = add i32 %v0_18953, -48
  %v2_1897c = inttoptr i32 %v1_1897c to i32*
  %v3_1897c = load i32, i32* %v2_1897c, align 4
  %v6_18986 = sext i8 %v3_1895e to i32
  %v7_18986 = call i32 @function_35165(i32 %v3_18953, i32 %v3_1897c, i32 %v3_18975, i32 %v3_1896e, i32 0, i32 %v6_18986)
  %v8_1898e = call i32 @function_18b47(i32 %v3_18953, i32 %v3_1897c, i32 %v3_18975, i32 %v3_1896e, i32 0, i32 %v6_18986, i32 1)
  ret i32 %v8_1898e

; uselistorder directives
  uselistorder i32 %v3_18975, { 1, 0 }
  uselistorder i32 %v3_1896e, { 1, 0 }
  uselistorder i32 %v3_18953, { 1, 0 }
  uselistorder i32 %v0_18953, { 0, 2, 1, 3, 4 }
}

define i32 @function_18993() local_unnamed_addr {
dec_label_pc_18993:
  %v0_18993 = load i32, i32* @ebp, align 4
  %v1_18993 = add i32 %v0_18993, -44
  %v2_18993 = inttoptr i32 %v1_18993 to i32*
  %v3_18993 = load i32, i32* %v2_18993, align 4
  %v1_1899e = add i32 %v0_18993, -73
  %v2_1899e = inttoptr i32 %v1_1899e to i8*
  %v3_1899e = load i8, i8* %v2_1899e, align 1
  %v1_189ae = add i32 %v0_18993, -60
  %v2_189ae = inttoptr i32 %v1_189ae to i32*
  %v3_189ae = load i32, i32* %v2_189ae, align 4
  %v1_189b5 = add i32 %v0_18993, -56
  %v2_189b5 = inttoptr i32 %v1_189b5 to i32*
  %v3_189b5 = load i32, i32* %v2_189b5, align 4
  %v1_189bc = add i32 %v0_18993, -48
  %v2_189bc = inttoptr i32 %v1_189bc to i32*
  %v3_189bc = load i32, i32* %v2_189bc, align 4
  %v6_189c6 = sext i8 %v3_1899e to i32
  %v7_189c6 = call i32 @function_35165(i32 %v3_18993, i32 %v3_189bc, i32 %v3_189b5, i32 %v3_189ae, i32 0, i32 %v6_189c6)
  %v8_189ce = call i32 @function_18b47(i32 %v3_18993, i32 %v3_189bc, i32 %v3_189b5, i32 %v3_189ae, i32 0, i32 %v6_189c6, i32 1)
  ret i32 %v8_189ce

; uselistorder directives
  uselistorder i32 %v3_189b5, { 1, 0 }
  uselistorder i32 %v3_189ae, { 1, 0 }
  uselistorder i32 %v3_18993, { 1, 0 }
  uselistorder i32 %v0_18993, { 0, 2, 1, 3, 4 }
}

define i32 @function_189d3() local_unnamed_addr {
dec_label_pc_189d3:
  %v0_189d3 = load i32, i32* @ebp, align 4
  %v1_189d3 = add i32 %v0_189d3, -44
  %v2_189d3 = inttoptr i32 %v1_189d3 to i32*
  %v3_189d3 = load i32, i32* %v2_189d3, align 4
  %v1_189de = add i32 %v0_189d3, -64
  %v2_189de = inttoptr i32 %v1_189de to i8*
  %v3_189de = load i8, i8* %v2_189de, align 1
  %v1_189ee = add i32 %v0_189d3, -60
  %v2_189ee = inttoptr i32 %v1_189ee to i32*
  %v3_189ee = load i32, i32* %v2_189ee, align 4
  %v1_189f5 = add i32 %v0_189d3, -56
  %v2_189f5 = inttoptr i32 %v1_189f5 to i32*
  %v3_189f5 = load i32, i32* %v2_189f5, align 4
  %v1_189fc = add i32 %v0_189d3, -48
  %v2_189fc = inttoptr i32 %v1_189fc to i32*
  %v3_189fc = load i32, i32* %v2_189fc, align 4
  %v6_18a06 = sext i8 %v3_189de to i32
  %v7_18a06 = call i32 @function_35165(i32 %v3_189d3, i32 %v3_189fc, i32 %v3_189f5, i32 %v3_189ee, i32 0, i32 %v6_18a06)
  %v8_18a0e = call i32 @function_18b47(i32 %v3_189d3, i32 %v3_189fc, i32 %v3_189f5, i32 %v3_189ee, i32 0, i32 %v6_18a06, i32 1)
  ret i32 %v8_18a0e

; uselistorder directives
  uselistorder i32 %v3_189f5, { 1, 0 }
  uselistorder i32 %v3_189ee, { 1, 0 }
  uselistorder i32 %v3_189d3, { 1, 0 }
  uselistorder i32 %v0_189d3, { 0, 2, 1, 3, 4 }
}

define i32 @function_18a13() local_unnamed_addr {
dec_label_pc_18a13:
  %v0_18a13 = load i32, i32* @ebp, align 4
  %v1_18a13 = add i32 %v0_18a13, -44
  %v2_18a13 = inttoptr i32 %v1_18a13 to i32*
  %v3_18a13 = load i32, i32* %v2_18a13, align 4
  %v1_18a1e = add i32 %v0_18a13, -63
  %v2_18a1e = inttoptr i32 %v1_18a1e to i8*
  %v3_18a1e = load i8, i8* %v2_18a1e, align 1
  %v1_18a2e = add i32 %v0_18a13, -60
  %v2_18a2e = inttoptr i32 %v1_18a2e to i32*
  %v3_18a2e = load i32, i32* %v2_18a2e, align 4
  %v1_18a35 = add i32 %v0_18a13, -56
  %v2_18a35 = inttoptr i32 %v1_18a35 to i32*
  %v3_18a35 = load i32, i32* %v2_18a35, align 4
  %v1_18a3c = add i32 %v0_18a13, -48
  %v2_18a3c = inttoptr i32 %v1_18a3c to i32*
  %v3_18a3c = load i32, i32* %v2_18a3c, align 4
  %v6_18a46 = sext i8 %v3_18a1e to i32
  %v7_18a46 = call i32 @function_35165(i32 %v3_18a13, i32 %v3_18a3c, i32 %v3_18a35, i32 %v3_18a2e, i32 0, i32 %v6_18a46)
  %v8_18a4e = call i32 @function_18b47(i32 %v3_18a13, i32 %v3_18a3c, i32 %v3_18a35, i32 %v3_18a2e, i32 0, i32 %v6_18a46, i32 1)
  ret i32 %v8_18a4e

; uselistorder directives
  uselistorder i32 %v3_18a35, { 1, 0 }
  uselistorder i32 %v3_18a2e, { 1, 0 }
  uselistorder i32 %v3_18a13, { 1, 0 }
  uselistorder i32 %v0_18a13, { 0, 2, 1, 3, 4 }
}

define i32 @function_18a53() local_unnamed_addr {
dec_label_pc_18a53:
  %edi.global-to-local = alloca i32, align 4
  %v0_18a53 = load i32, i32* @ebp, align 4
  %v1_18a53 = add i32 %v0_18a53, -44
  %v2_18a53 = inttoptr i32 %v1_18a53 to i32*
  %v3_18a53 = load i32, i32* %v2_18a53, align 4
  %v0_18a5e = load i32, i32* %edi.global-to-local, align 8
  %v1_18a6c = add i32 %v0_18a53, -60
  %v2_18a6c = inttoptr i32 %v1_18a6c to i32*
  %v3_18a6c = load i32, i32* %v2_18a6c, align 4
  %v1_18a73 = add i32 %v0_18a53, -56
  %v2_18a73 = inttoptr i32 %v1_18a73 to i32*
  %v3_18a73 = load i32, i32* %v2_18a73, align 4
  %v1_18a7a = add i32 %v0_18a53, -48
  %v2_18a7a = inttoptr i32 %v1_18a7a to i32*
  %v3_18a7a = load i32, i32* %v2_18a7a, align 4
  %sext = mul i32 %v0_18a5e, 16777216
  %v6_18a84 = sdiv i32 %sext, 16777216
  %v7_18a84 = call i32 @function_35165(i32 %v3_18a53, i32 %v3_18a7a, i32 %v3_18a73, i32 %v3_18a6c, i32 0, i32 %v6_18a84)
  %v8_18a8c = call i32 @function_18b47(i32 %v3_18a53, i32 %v3_18a7a, i32 %v3_18a73, i32 %v3_18a6c, i32 0, i32 %v6_18a84, i32 1)
  ret i32 %v8_18a8c

; uselistorder directives
  uselistorder i32 %v6_18a84, { 1, 0 }
  uselistorder i32 %v3_18a73, { 1, 0 }
  uselistorder i32 %v3_18a6c, { 1, 0 }
  uselistorder i32 %v3_18a53, { 1, 0 }
  uselistorder i32 %v0_18a53, { 0, 2, 1, 3 }
}

define i32 @function_18a91() local_unnamed_addr {
dec_label_pc_18a91:
  %esi.global-to-local = alloca i32, align 4
  %v0_18a91 = load i32, i32* @ebp, align 4
  %v1_18a91 = add i32 %v0_18a91, -44
  %v2_18a91 = inttoptr i32 %v1_18a91 to i32*
  %v3_18a91 = load i32, i32* %v2_18a91, align 4
  %v0_18a9c = load i32, i32* %esi.global-to-local, align 4
  %v1_18aaa = add i32 %v0_18a91, -60
  %v2_18aaa = inttoptr i32 %v1_18aaa to i32*
  %v3_18aaa = load i32, i32* %v2_18aaa, align 4
  %v1_18ab1 = add i32 %v0_18a91, -56
  %v2_18ab1 = inttoptr i32 %v1_18ab1 to i32*
  %v3_18ab1 = load i32, i32* %v2_18ab1, align 4
  %v1_18ab8 = add i32 %v0_18a91, -48
  %v2_18ab8 = inttoptr i32 %v1_18ab8 to i32*
  %v3_18ab8 = load i32, i32* %v2_18ab8, align 4
  %sext = mul i32 %v0_18a9c, 16777216
  %v6_18ac2 = sdiv i32 %sext, 16777216
  %v7_18ac2 = call i32 @function_35165(i32 %v3_18a91, i32 %v3_18ab8, i32 %v3_18ab1, i32 %v3_18aaa, i32 0, i32 %v6_18ac2)
  %v8_18aca = call i32 @function_18b47(i32 %v3_18a91, i32 %v3_18ab8, i32 %v3_18ab1, i32 %v3_18aaa, i32 0, i32 %v6_18ac2, i32 1)
  ret i32 %v8_18aca

; uselistorder directives
  uselistorder i32 %v6_18ac2, { 1, 0 }
  uselistorder i32 %v3_18ab1, { 1, 0 }
  uselistorder i32 %v3_18aaa, { 1, 0 }
  uselistorder i32 %v3_18a91, { 1, 0 }
  uselistorder i32 %v0_18a91, { 0, 2, 1, 3 }
}

define i32 @function_18acc() local_unnamed_addr {
dec_label_pc_18acc:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18acc = load i32, i32* @ebp, align 4
  %v1_18acc = add i32 %v0_18acc, -44
  %v2_18acc = inttoptr i32 %v1_18acc to i32*
  %v3_18acc = load i32, i32* %v2_18acc, align 4
  %v0_18ad7 = load i32, i32* %ebx.global-to-local, align 8
  %v1_18ae3 = add i32 %v0_18acc, -60
  %v2_18ae3 = inttoptr i32 %v1_18ae3 to i32*
  %v3_18ae3 = load i32, i32* %v2_18ae3, align 4
  %v1_18aea = add i32 %v0_18acc, -56
  %v2_18aea = inttoptr i32 %v1_18aea to i32*
  %v3_18aea = load i32, i32* %v2_18aea, align 4
  %v1_18af1 = add i32 %v0_18acc, -48
  %v2_18af1 = inttoptr i32 %v1_18af1 to i32*
  %v3_18af1 = load i32, i32* %v2_18af1, align 4
  %sext = mul i32 %v0_18ad7, 16777216
  %v6_18afb = sdiv i32 %sext, 16777216
  %v7_18afb = call i32 @function_35165(i32 %v3_18acc, i32 %v3_18af1, i32 %v3_18aea, i32 %v3_18ae3, i32 0, i32 %v6_18afb)
  %v8_18b03 = call i32 @function_18b47(i32 %v3_18acc, i32 %v3_18af1, i32 %v3_18aea, i32 %v3_18ae3, i32 0, i32 %v6_18afb, i32 1)
  ret i32 %v8_18b03

; uselistorder directives
  uselistorder i32 %v6_18afb, { 1, 0 }
  uselistorder i32 %v3_18aea, { 1, 0 }
  uselistorder i32 %v3_18ae3, { 1, 0 }
  uselistorder i32 %v3_18acc, { 1, 0 }
  uselistorder i32 %v0_18acc, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_18b47, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_35165, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
}

define i32 @function_18b05(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_18b05:
  %v0_18b05 = load i32, i32* @ebp, align 4
  %v1_18b05 = add i32 %v0_18b05, -44
  %v2_18b05 = inttoptr i32 %v1_18b05 to i32*
  %v3_18b05 = load i32, i32* %v2_18b05, align 4
  %v0_18b18 = load i32, i32* @ecx, align 4
  %v0_18b1c = load i32, i32* @edx, align 8
  %v1_18b20 = add i32 %v0_18b05, -60
  %v2_18b20 = inttoptr i32 %v1_18b20 to i32*
  %v3_18b20 = load i32, i32* %v2_18b20, align 4
  %v1_18b27 = add i32 %v0_18b05, -56
  %v2_18b27 = inttoptr i32 %v1_18b27 to i32*
  %v3_18b27 = load i32, i32* %v2_18b27, align 4
  %v1_18b2e = add i32 %v0_18b05, -52
  %v2_18b2e = inttoptr i32 %v1_18b2e to i32*
  %v3_18b2e = load i32, i32* %v2_18b2e, align 4
  %v1_18b35 = add i32 %v0_18b05, -48
  %v2_18b35 = inttoptr i32 %v1_18b35 to i32*
  %v3_18b35 = load i32, i32* %v2_18b35, align 4
  %sext = mul i32 %v0_18b1c, 16777216
  %v9_18b3f = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_18b18, 16777216
  %v10_18b3f = sdiv i32 %sext1, 16777216
  %v11_18b3f = call i32 @unknown_351c5(i32 %v3_18b05, i32 %v3_18b35, i32 %v3_18b2e, i32 %v3_18b27, i32 %v3_18b20, i32 %v9_18b3f, i32 %v10_18b3f, i32 0, i32 0)
  ret i32 %v11_18b3f

; uselistorder directives
  uselistorder i32 %v0_18b05, { 1, 0, 3, 2, 4 }
}

define i32 @function_18b47(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_18b47:
  %v0_18b47 = load i32, i32* @ebp, align 4
  %v1_18b47 = add i32 %v0_18b47, -44
  %v2_18b47 = inttoptr i32 %v1_18b47 to i32*
  %v3_18b47 = load i32, i32* %v2_18b47, align 4
  store i32 %v3_18b47, i32* @eax, align 8
  %v1_18b4a = add i32 %v0_18b47, -28
  %v2_18b4a = inttoptr i32 %v1_18b4a to i32*
  %v3_18b4a = load i32, i32* %v2_18b4a, align 4
  %v4_18b4d = icmp eq i32 %v3_18b4a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_18b4d, label %bb, label %dec_label_pc_18b56

bb:                                               ; preds = %dec_label_pc_18b47
  %v1_18b54 = call i32 @function_18b5b()
  br label %dec_label_pc_18b56

dec_label_pc_18b56:                               ; preds = %bb, %dec_label_pc_18b47
  %v2_18b54 = phi i32 [ %v1_18b54, %bb ], [ %v3_18b47, %dec_label_pc_18b47 ]
  ret i32 %v2_18b54
}

define i32 @function_18b5b() local_unnamed_addr {
dec_label_pc_18b5b:
  %v0_18b5b = load i32, i32* @ebp, align 4
  %v1_18b61 = inttoptr i32 %v0_18b5b to i32*
  %v2_18b61 = load i32, i32* %v1_18b61, align 4
  store i32 %v2_18b61, i32* @ebp, align 4
  %v0_18b62 = load i32, i32* @eax, align 8
  ret i32 %v0_18b62
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_10shared_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail23foreign_void_shared_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9copy_intoEPKvNS_7variantISD_SH_NS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_18bb8:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_18c08, label %bb

bb:                                               ; preds = %dec_label_pc_18bb8
  %sext = mul i32 %arg6, 16777216
  %v12_18c02 = sdiv i32 %sext, 16777216
  %v13_18c02 = sext i8 %arg5 to i32
  %v14_18c02 = call i32 @function_19041(i32 %arg8, i32 %arg7, i32 %v12_18c02, i32 %v13_18c02, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_18c08

dec_label_pc_18c08:                               ; preds = %dec_label_pc_18bb8, %bb
  %v2_18c0b = mul i32 %arg2, 4
  %v1_18c0e = add i32 %v2_18c0b, ptrtoint (i32* @global_var_19094.1979 to i32)
  %v1_18c13 = inttoptr i32 %v1_18c0e to i32*
  %v2_18c13 = load i32, i32* %v1_18c13, align 4
  ret i32 %v2_18c13

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18c08, { 1, 0 }
}

define i32 @function_18c17() local_unnamed_addr {
dec_label_pc_18c17:
  %v0_18c1f = load i32, i32* @ebp, align 4
  %v1_18c1f = add i32 %v0_18c1f, -83
  %v2_18c1f = inttoptr i32 %v1_18c1f to i8*
  %v3_18c1f = load i8, i8* %v2_18c1f, align 1
  %v1_18c2f = add i32 %v0_18c1f, -56
  %v2_18c2f = inttoptr i32 %v1_18c2f to i32*
  %v3_18c2f = load i32, i32* %v2_18c2f, align 4
  %v1_18c36 = add i32 %v0_18c1f, -52
  %v2_18c36 = inttoptr i32 %v1_18c36 to i32*
  %v3_18c36 = load i32, i32* %v2_18c36, align 4
  %v1_18c3d = add i32 %v0_18c1f, -44
  %v2_18c3d = inttoptr i32 %v1_18c3d to i32*
  %v3_18c3d = load i32, i32* %v2_18c3d, align 4
  store i32 %v3_18c3d, i32* @eax, align 8
  %v6_18c43 = sext i8 %v3_18c1f to i32
  %v7_18c43 = call i32 @function_3583c(i32 %v3_18c3d, i32 %v3_18c36, i32 %v3_18c2f, i32 0, i32 %v6_18c43, i32 1)
  %v7_18c48 = call i32 @function_19079(i32 %v3_18c3d, i32 %v3_18c36, i32 %v3_18c2f, i32 0, i32 %v6_18c43, i32 1)
  ret i32 %v7_18c48

; uselistorder directives
  uselistorder i32 %v0_18c1f, { 0, 2, 1, 3 }
}

define i32 @function_18c4d() local_unnamed_addr {
dec_label_pc_18c4d:
  %v0_18c55 = load i32, i32* @ebp, align 4
  %v1_18c55 = add i32 %v0_18c55, -82
  %v2_18c55 = inttoptr i32 %v1_18c55 to i8*
  %v3_18c55 = load i8, i8* %v2_18c55, align 1
  %v1_18c65 = add i32 %v0_18c55, -56
  %v2_18c65 = inttoptr i32 %v1_18c65 to i32*
  %v3_18c65 = load i32, i32* %v2_18c65, align 4
  %v1_18c6c = add i32 %v0_18c55, -52
  %v2_18c6c = inttoptr i32 %v1_18c6c to i32*
  %v3_18c6c = load i32, i32* %v2_18c6c, align 4
  %v1_18c73 = add i32 %v0_18c55, -44
  %v2_18c73 = inttoptr i32 %v1_18c73 to i32*
  %v3_18c73 = load i32, i32* %v2_18c73, align 4
  %v6_18c7e = sext i8 %v3_18c55 to i32
  %v7_18c7e = call i32 @function_19079(i32 %v3_18c73, i32 %v3_18c6c, i32 %v3_18c65, i32 0, i32 %v6_18c7e, i32 1)
  ret i32 %v7_18c7e

; uselistorder directives
  uselistorder i32 %v0_18c55, { 0, 2, 1, 3 }
}

define i32 @function_18c83() local_unnamed_addr {
dec_label_pc_18c83:
  %v0_18c8b = load i32, i32* @ebp, align 4
  %v1_18c8b = add i32 %v0_18c8b, -81
  %v2_18c8b = inttoptr i32 %v1_18c8b to i8*
  %v3_18c8b = load i8, i8* %v2_18c8b, align 1
  %v1_18c9b = add i32 %v0_18c8b, -56
  %v2_18c9b = inttoptr i32 %v1_18c9b to i32*
  %v3_18c9b = load i32, i32* %v2_18c9b, align 4
  %v1_18ca2 = add i32 %v0_18c8b, -52
  %v2_18ca2 = inttoptr i32 %v1_18ca2 to i32*
  %v3_18ca2 = load i32, i32* %v2_18ca2, align 4
  %v1_18ca9 = add i32 %v0_18c8b, -44
  %v2_18ca9 = inttoptr i32 %v1_18ca9 to i32*
  %v3_18ca9 = load i32, i32* %v2_18ca9, align 4
  %v2_18caf = call i32 @function_35916(i32 %v3_18ca9, i32 %v3_18ca2)
  %v6_18cb4 = sext i8 %v3_18c8b to i32
  %v7_18cb4 = call i32 @function_19079(i32 %v3_18ca9, i32 %v3_18ca2, i32 %v3_18c9b, i32 0, i32 %v6_18cb4, i32 1)
  ret i32 %v7_18cb4

; uselistorder directives
  uselistorder i32 %v3_18ca2, { 1, 0 }
  uselistorder i32 %v0_18c8b, { 0, 2, 1, 3 }
}

define i32 @function_18cb9() local_unnamed_addr {
dec_label_pc_18cb9:
  %v0_18cc1 = load i32, i32* @ebp, align 4
  %v1_18cc1 = add i32 %v0_18cc1, -80
  %v2_18cc1 = inttoptr i32 %v1_18cc1 to i8*
  %v3_18cc1 = load i8, i8* %v2_18cc1, align 1
  %v1_18cd1 = add i32 %v0_18cc1, -56
  %v2_18cd1 = inttoptr i32 %v1_18cd1 to i32*
  %v3_18cd1 = load i32, i32* %v2_18cd1, align 4
  %v1_18cd8 = add i32 %v0_18cc1, -52
  %v2_18cd8 = inttoptr i32 %v1_18cd8 to i32*
  %v3_18cd8 = load i32, i32* %v2_18cd8, align 4
  %v1_18cdf = add i32 %v0_18cc1, -44
  %v2_18cdf = inttoptr i32 %v1_18cdf to i32*
  %v3_18cdf = load i32, i32* %v2_18cdf, align 4
  %v2_18ce5 = call i32 @function_35916(i32 %v3_18cdf, i32 %v3_18cd8)
  %v6_18cea = sext i8 %v3_18cc1 to i32
  %v7_18cea = call i32 @function_19079(i32 %v3_18cdf, i32 %v3_18cd8, i32 %v3_18cd1, i32 0, i32 %v6_18cea, i32 1)
  ret i32 %v7_18cea

; uselistorder directives
  uselistorder i32 %v3_18cd8, { 1, 0 }
  uselistorder i32 %v0_18cc1, { 0, 2, 1, 3 }
}

define i32 @function_18cef() local_unnamed_addr {
dec_label_pc_18cef:
  %v0_18cf7 = load i32, i32* @ebp, align 4
  %v1_18cf7 = add i32 %v0_18cf7, -79
  %v2_18cf7 = inttoptr i32 %v1_18cf7 to i8*
  %v3_18cf7 = load i8, i8* %v2_18cf7, align 1
  %v1_18d07 = add i32 %v0_18cf7, -56
  %v2_18d07 = inttoptr i32 %v1_18d07 to i32*
  %v3_18d07 = load i32, i32* %v2_18d07, align 4
  %v1_18d0e = add i32 %v0_18cf7, -52
  %v2_18d0e = inttoptr i32 %v1_18d0e to i32*
  %v3_18d0e = load i32, i32* %v2_18d0e, align 4
  %v1_18d15 = add i32 %v0_18cf7, -44
  %v2_18d15 = inttoptr i32 %v1_18d15 to i32*
  %v3_18d15 = load i32, i32* %v2_18d15, align 4
  %v2_18d1b = call i32 @function_35916(i32 %v3_18d15, i32 %v3_18d0e)
  %v6_18d20 = sext i8 %v3_18cf7 to i32
  %v7_18d20 = call i32 @function_19079(i32 %v3_18d15, i32 %v3_18d0e, i32 %v3_18d07, i32 0, i32 %v6_18d20, i32 1)
  ret i32 %v7_18d20

; uselistorder directives
  uselistorder i32 %v3_18d0e, { 1, 0 }
  uselistorder i32 %v0_18cf7, { 0, 2, 1, 3 }
}

define i32 @function_18d25() local_unnamed_addr {
dec_label_pc_18d25:
  %v0_18d2d = load i32, i32* @ebp, align 4
  %v1_18d2d = add i32 %v0_18d2d, -78
  %v2_18d2d = inttoptr i32 %v1_18d2d to i8*
  %v3_18d2d = load i8, i8* %v2_18d2d, align 1
  %v1_18d3d = add i32 %v0_18d2d, -56
  %v2_18d3d = inttoptr i32 %v1_18d3d to i32*
  %v3_18d3d = load i32, i32* %v2_18d3d, align 4
  %v1_18d44 = add i32 %v0_18d2d, -52
  %v2_18d44 = inttoptr i32 %v1_18d44 to i32*
  %v3_18d44 = load i32, i32* %v2_18d44, align 4
  %v1_18d4b = add i32 %v0_18d2d, -44
  %v2_18d4b = inttoptr i32 %v1_18d4b to i32*
  %v3_18d4b = load i32, i32* %v2_18d4b, align 4
  %v2_18d51 = call i32 @function_35916(i32 %v3_18d4b, i32 %v3_18d44)
  %v6_18d56 = sext i8 %v3_18d2d to i32
  %v7_18d56 = call i32 @function_19079(i32 %v3_18d4b, i32 %v3_18d44, i32 %v3_18d3d, i32 0, i32 %v6_18d56, i32 1)
  ret i32 %v7_18d56

; uselistorder directives
  uselistorder i32 %v3_18d44, { 1, 0 }
  uselistorder i32 %v0_18d2d, { 0, 2, 1, 3 }
}

define i32 @function_18d5b() local_unnamed_addr {
dec_label_pc_18d5b:
  %v0_18d63 = load i32, i32* @ebp, align 4
  %v1_18d63 = add i32 %v0_18d63, -77
  %v2_18d63 = inttoptr i32 %v1_18d63 to i8*
  %v3_18d63 = load i8, i8* %v2_18d63, align 1
  %v1_18d73 = add i32 %v0_18d63, -56
  %v2_18d73 = inttoptr i32 %v1_18d73 to i32*
  %v3_18d73 = load i32, i32* %v2_18d73, align 4
  %v1_18d7a = add i32 %v0_18d63, -52
  %v2_18d7a = inttoptr i32 %v1_18d7a to i32*
  %v3_18d7a = load i32, i32* %v2_18d7a, align 4
  %v1_18d81 = add i32 %v0_18d63, -44
  %v2_18d81 = inttoptr i32 %v1_18d81 to i32*
  %v3_18d81 = load i32, i32* %v2_18d81, align 4
  %v2_18d87 = call i32 @function_35916(i32 %v3_18d81, i32 %v3_18d7a)
  %v6_18d8c = sext i8 %v3_18d63 to i32
  %v7_18d8c = call i32 @function_19079(i32 %v3_18d81, i32 %v3_18d7a, i32 %v3_18d73, i32 0, i32 %v6_18d8c, i32 1)
  ret i32 %v7_18d8c

; uselistorder directives
  uselistorder i32 %v3_18d7a, { 1, 0 }
  uselistorder i32 %v0_18d63, { 0, 2, 1, 3 }
}

define i32 @function_18d91() local_unnamed_addr {
dec_label_pc_18d91:
  %v0_18d99 = load i32, i32* @ebp, align 4
  %v1_18d99 = add i32 %v0_18d99, -76
  %v2_18d99 = inttoptr i32 %v1_18d99 to i8*
  %v3_18d99 = load i8, i8* %v2_18d99, align 1
  %v1_18da9 = add i32 %v0_18d99, -56
  %v2_18da9 = inttoptr i32 %v1_18da9 to i32*
  %v3_18da9 = load i32, i32* %v2_18da9, align 4
  %v1_18db0 = add i32 %v0_18d99, -52
  %v2_18db0 = inttoptr i32 %v1_18db0 to i32*
  %v3_18db0 = load i32, i32* %v2_18db0, align 4
  %v1_18db7 = add i32 %v0_18d99, -44
  %v2_18db7 = inttoptr i32 %v1_18db7 to i32*
  %v3_18db7 = load i32, i32* %v2_18db7, align 4
  %v2_18dbd = call i32 @function_35916(i32 %v3_18db7, i32 %v3_18db0)
  %v6_18dc2 = sext i8 %v3_18d99 to i32
  %v7_18dc2 = call i32 @function_19079(i32 %v3_18db7, i32 %v3_18db0, i32 %v3_18da9, i32 0, i32 %v6_18dc2, i32 1)
  ret i32 %v7_18dc2

; uselistorder directives
  uselistorder i32 %v3_18db0, { 1, 0 }
  uselistorder i32 %v0_18d99, { 0, 2, 1, 3 }
}

define i32 @function_18dc7() local_unnamed_addr {
dec_label_pc_18dc7:
  %v0_18dcf = load i32, i32* @ebp, align 4
  %v1_18dcf = add i32 %v0_18dcf, -75
  %v2_18dcf = inttoptr i32 %v1_18dcf to i8*
  %v3_18dcf = load i8, i8* %v2_18dcf, align 1
  %v1_18ddf = add i32 %v0_18dcf, -56
  %v2_18ddf = inttoptr i32 %v1_18ddf to i32*
  %v3_18ddf = load i32, i32* %v2_18ddf, align 4
  %v1_18de6 = add i32 %v0_18dcf, -52
  %v2_18de6 = inttoptr i32 %v1_18de6 to i32*
  %v3_18de6 = load i32, i32* %v2_18de6, align 4
  %v1_18ded = add i32 %v0_18dcf, -44
  %v2_18ded = inttoptr i32 %v1_18ded to i32*
  %v3_18ded = load i32, i32* %v2_18ded, align 4
  %v2_18df3 = call i32 @function_35916(i32 %v3_18ded, i32 %v3_18de6)
  %v6_18df8 = sext i8 %v3_18dcf to i32
  %v7_18df8 = call i32 @function_19079(i32 %v3_18ded, i32 %v3_18de6, i32 %v3_18ddf, i32 0, i32 %v6_18df8, i32 1)
  ret i32 %v7_18df8

; uselistorder directives
  uselistorder i32 %v3_18de6, { 1, 0 }
  uselistorder i32 %v0_18dcf, { 0, 2, 1, 3 }
}

define i32 @function_18dfd() local_unnamed_addr {
dec_label_pc_18dfd:
  %v0_18e05 = load i32, i32* @ebp, align 4
  %v1_18e05 = add i32 %v0_18e05, -74
  %v2_18e05 = inttoptr i32 %v1_18e05 to i8*
  %v3_18e05 = load i8, i8* %v2_18e05, align 1
  %v1_18e15 = add i32 %v0_18e05, -56
  %v2_18e15 = inttoptr i32 %v1_18e15 to i32*
  %v3_18e15 = load i32, i32* %v2_18e15, align 4
  %v1_18e1c = add i32 %v0_18e05, -52
  %v2_18e1c = inttoptr i32 %v1_18e1c to i32*
  %v3_18e1c = load i32, i32* %v2_18e1c, align 4
  %v1_18e23 = add i32 %v0_18e05, -44
  %v2_18e23 = inttoptr i32 %v1_18e23 to i32*
  %v3_18e23 = load i32, i32* %v2_18e23, align 4
  %v2_18e29 = call i32 @function_35916(i32 %v3_18e23, i32 %v3_18e1c)
  %v6_18e2e = sext i8 %v3_18e05 to i32
  %v7_18e2e = call i32 @function_19079(i32 %v3_18e23, i32 %v3_18e1c, i32 %v3_18e15, i32 0, i32 %v6_18e2e, i32 1)
  ret i32 %v7_18e2e

; uselistorder directives
  uselistorder i32 %v3_18e1c, { 1, 0 }
  uselistorder i32 %v0_18e05, { 0, 2, 1, 3 }
}

define i32 @function_18e33() local_unnamed_addr {
dec_label_pc_18e33:
  %v0_18e3b = load i32, i32* @ebp, align 4
  %v1_18e3b = add i32 %v0_18e3b, -73
  %v2_18e3b = inttoptr i32 %v1_18e3b to i8*
  %v3_18e3b = load i8, i8* %v2_18e3b, align 1
  %v1_18e4b = add i32 %v0_18e3b, -56
  %v2_18e4b = inttoptr i32 %v1_18e4b to i32*
  %v3_18e4b = load i32, i32* %v2_18e4b, align 4
  %v1_18e52 = add i32 %v0_18e3b, -52
  %v2_18e52 = inttoptr i32 %v1_18e52 to i32*
  %v3_18e52 = load i32, i32* %v2_18e52, align 4
  %v1_18e59 = add i32 %v0_18e3b, -44
  %v2_18e59 = inttoptr i32 %v1_18e59 to i32*
  %v3_18e59 = load i32, i32* %v2_18e59, align 4
  %v2_18e5f = call i32 @function_35916(i32 %v3_18e59, i32 %v3_18e52)
  %v6_18e64 = sext i8 %v3_18e3b to i32
  %v7_18e64 = call i32 @function_19079(i32 %v3_18e59, i32 %v3_18e52, i32 %v3_18e4b, i32 0, i32 %v6_18e64, i32 1)
  ret i32 %v7_18e64

; uselistorder directives
  uselistorder i32 %v3_18e52, { 1, 0 }
  uselistorder i32 %v0_18e3b, { 0, 2, 1, 3 }
}

define i32 @function_18e69() local_unnamed_addr {
dec_label_pc_18e69:
  %v0_18e71 = load i32, i32* @ebp, align 4
  %v1_18e71 = add i32 %v0_18e71, -72
  %v2_18e71 = inttoptr i32 %v1_18e71 to i8*
  %v3_18e71 = load i8, i8* %v2_18e71, align 1
  %v1_18e81 = add i32 %v0_18e71, -56
  %v2_18e81 = inttoptr i32 %v1_18e81 to i32*
  %v3_18e81 = load i32, i32* %v2_18e81, align 4
  %v1_18e88 = add i32 %v0_18e71, -52
  %v2_18e88 = inttoptr i32 %v1_18e88 to i32*
  %v3_18e88 = load i32, i32* %v2_18e88, align 4
  %v1_18e8f = add i32 %v0_18e71, -44
  %v2_18e8f = inttoptr i32 %v1_18e8f to i32*
  %v3_18e8f = load i32, i32* %v2_18e8f, align 4
  %v2_18e95 = call i32 @function_35916(i32 %v3_18e8f, i32 %v3_18e88)
  %v6_18e9a = sext i8 %v3_18e71 to i32
  %v7_18e9a = call i32 @function_19079(i32 %v3_18e8f, i32 %v3_18e88, i32 %v3_18e81, i32 0, i32 %v6_18e9a, i32 1)
  ret i32 %v7_18e9a

; uselistorder directives
  uselistorder i32 %v3_18e88, { 1, 0 }
  uselistorder i32 %v0_18e71, { 0, 2, 1, 3 }
}

define i32 @function_18e9f() local_unnamed_addr {
dec_label_pc_18e9f:
  %v0_18ea7 = load i32, i32* @ebp, align 4
  %v1_18ea7 = add i32 %v0_18ea7, -71
  %v2_18ea7 = inttoptr i32 %v1_18ea7 to i8*
  %v3_18ea7 = load i8, i8* %v2_18ea7, align 1
  %v1_18eb7 = add i32 %v0_18ea7, -56
  %v2_18eb7 = inttoptr i32 %v1_18eb7 to i32*
  %v3_18eb7 = load i32, i32* %v2_18eb7, align 4
  %v1_18ebe = add i32 %v0_18ea7, -52
  %v2_18ebe = inttoptr i32 %v1_18ebe to i32*
  %v3_18ebe = load i32, i32* %v2_18ebe, align 4
  %v1_18ec5 = add i32 %v0_18ea7, -44
  %v2_18ec5 = inttoptr i32 %v1_18ec5 to i32*
  %v3_18ec5 = load i32, i32* %v2_18ec5, align 4
  %v2_18ecb = call i32 @function_35916(i32 %v3_18ec5, i32 %v3_18ebe)
  %v6_18ed0 = sext i8 %v3_18ea7 to i32
  %v7_18ed0 = call i32 @function_19079(i32 %v3_18ec5, i32 %v3_18ebe, i32 %v3_18eb7, i32 0, i32 %v6_18ed0, i32 1)
  ret i32 %v7_18ed0

; uselistorder directives
  uselistorder i32 %v3_18ebe, { 1, 0 }
  uselistorder i32 %v0_18ea7, { 0, 2, 1, 3 }
}

define i32 @function_18ed5() local_unnamed_addr {
dec_label_pc_18ed5:
  %v0_18edd = load i32, i32* @ebp, align 4
  %v1_18edd = add i32 %v0_18edd, -70
  %v2_18edd = inttoptr i32 %v1_18edd to i8*
  %v3_18edd = load i8, i8* %v2_18edd, align 1
  %v1_18eed = add i32 %v0_18edd, -56
  %v2_18eed = inttoptr i32 %v1_18eed to i32*
  %v3_18eed = load i32, i32* %v2_18eed, align 4
  %v1_18ef4 = add i32 %v0_18edd, -52
  %v2_18ef4 = inttoptr i32 %v1_18ef4 to i32*
  %v3_18ef4 = load i32, i32* %v2_18ef4, align 4
  %v1_18efb = add i32 %v0_18edd, -44
  %v2_18efb = inttoptr i32 %v1_18efb to i32*
  %v3_18efb = load i32, i32* %v2_18efb, align 4
  %v2_18f01 = call i32 @function_35916(i32 %v3_18efb, i32 %v3_18ef4)
  %v6_18f06 = sext i8 %v3_18edd to i32
  %v7_18f06 = call i32 @function_19079(i32 %v3_18efb, i32 %v3_18ef4, i32 %v3_18eed, i32 0, i32 %v6_18f06, i32 1)
  ret i32 %v7_18f06

; uselistorder directives
  uselistorder i32 %v3_18ef4, { 1, 0 }
  uselistorder i32 %v0_18edd, { 0, 2, 1, 3 }
}

define i32 @function_18f0b() local_unnamed_addr {
dec_label_pc_18f0b:
  %v0_18f13 = load i32, i32* @ebp, align 4
  %v1_18f13 = add i32 %v0_18f13, -69
  %v2_18f13 = inttoptr i32 %v1_18f13 to i8*
  %v3_18f13 = load i8, i8* %v2_18f13, align 1
  %v1_18f23 = add i32 %v0_18f13, -56
  %v2_18f23 = inttoptr i32 %v1_18f23 to i32*
  %v3_18f23 = load i32, i32* %v2_18f23, align 4
  %v1_18f2a = add i32 %v0_18f13, -52
  %v2_18f2a = inttoptr i32 %v1_18f2a to i32*
  %v3_18f2a = load i32, i32* %v2_18f2a, align 4
  %v1_18f31 = add i32 %v0_18f13, -44
  %v2_18f31 = inttoptr i32 %v1_18f31 to i32*
  %v3_18f31 = load i32, i32* %v2_18f31, align 4
  %v2_18f37 = call i32 @function_35916(i32 %v3_18f31, i32 %v3_18f2a)
  %v6_18f3c = sext i8 %v3_18f13 to i32
  %v7_18f3c = call i32 @function_19079(i32 %v3_18f31, i32 %v3_18f2a, i32 %v3_18f23, i32 0, i32 %v6_18f3c, i32 1)
  ret i32 %v7_18f3c

; uselistorder directives
  uselistorder i32 %v3_18f2a, { 1, 0 }
  uselistorder i32 %v0_18f13, { 0, 2, 1, 3 }
}

define i32 @function_18f41() local_unnamed_addr {
dec_label_pc_18f41:
  %v0_18f49 = load i32, i32* @ebp, align 4
  %v1_18f49 = add i32 %v0_18f49, -60
  %v2_18f49 = inttoptr i32 %v1_18f49 to i8*
  %v3_18f49 = load i8, i8* %v2_18f49, align 1
  %v1_18f59 = add i32 %v0_18f49, -56
  %v2_18f59 = inttoptr i32 %v1_18f59 to i32*
  %v3_18f59 = load i32, i32* %v2_18f59, align 4
  %v1_18f60 = add i32 %v0_18f49, -52
  %v2_18f60 = inttoptr i32 %v1_18f60 to i32*
  %v3_18f60 = load i32, i32* %v2_18f60, align 4
  %v1_18f67 = add i32 %v0_18f49, -44
  %v2_18f67 = inttoptr i32 %v1_18f67 to i32*
  %v3_18f67 = load i32, i32* %v2_18f67, align 4
  %v2_18f6d = call i32 @function_35916(i32 %v3_18f67, i32 %v3_18f60)
  %v6_18f72 = sext i8 %v3_18f49 to i32
  %v7_18f72 = call i32 @function_19079(i32 %v3_18f67, i32 %v3_18f60, i32 %v3_18f59, i32 0, i32 %v6_18f72, i32 1)
  ret i32 %v7_18f72

; uselistorder directives
  uselistorder i32 %v3_18f60, { 1, 0 }
  uselistorder i32 %v0_18f49, { 0, 2, 1, 3 }
}

define i32 @function_18f77() local_unnamed_addr {
dec_label_pc_18f77:
  %v0_18f7f = load i32, i32* @ebp, align 4
  %v1_18f7f = add i32 %v0_18f7f, -59
  %v2_18f7f = inttoptr i32 %v1_18f7f to i8*
  %v3_18f7f = load i8, i8* %v2_18f7f, align 1
  %v1_18f8f = add i32 %v0_18f7f, -56
  %v2_18f8f = inttoptr i32 %v1_18f8f to i32*
  %v3_18f8f = load i32, i32* %v2_18f8f, align 4
  %v1_18f96 = add i32 %v0_18f7f, -52
  %v2_18f96 = inttoptr i32 %v1_18f96 to i32*
  %v3_18f96 = load i32, i32* %v2_18f96, align 4
  %v1_18f9d = add i32 %v0_18f7f, -44
  %v2_18f9d = inttoptr i32 %v1_18f9d to i32*
  %v3_18f9d = load i32, i32* %v2_18f9d, align 4
  %v2_18fa3 = call i32 @function_35916(i32 %v3_18f9d, i32 %v3_18f96)
  %v6_18fa8 = sext i8 %v3_18f7f to i32
  %v7_18fa8 = call i32 @function_19079(i32 %v3_18f9d, i32 %v3_18f96, i32 %v3_18f8f, i32 0, i32 %v6_18fa8, i32 1)
  ret i32 %v7_18fa8

; uselistorder directives
  uselistorder i32 %v3_18f96, { 1, 0 }
  uselistorder i32 %v0_18f7f, { 0, 2, 1, 3 }
}

define i32 @function_18fad() local_unnamed_addr {
dec_label_pc_18fad:
  %edi.global-to-local = alloca i32, align 4
  %v0_18fb5 = load i32, i32* %edi.global-to-local, align 8
  %v0_18fc3 = load i32, i32* @ebp, align 4
  %v1_18fc3 = add i32 %v0_18fc3, -56
  %v2_18fc3 = inttoptr i32 %v1_18fc3 to i32*
  %v3_18fc3 = load i32, i32* %v2_18fc3, align 4
  %v1_18fca = add i32 %v0_18fc3, -52
  %v2_18fca = inttoptr i32 %v1_18fca to i32*
  %v3_18fca = load i32, i32* %v2_18fca, align 4
  %v1_18fd1 = add i32 %v0_18fc3, -44
  %v2_18fd1 = inttoptr i32 %v1_18fd1 to i32*
  %v3_18fd1 = load i32, i32* %v2_18fd1, align 4
  %v2_18fd7 = call i32 @function_35916(i32 %v3_18fd1, i32 %v3_18fca)
  %sext = mul i32 %v0_18fb5, 16777216
  %v6_18fdc = sdiv i32 %sext, 16777216
  %v7_18fdc = call i32 @function_19079(i32 %v3_18fd1, i32 %v3_18fca, i32 %v3_18fc3, i32 0, i32 %v6_18fdc, i32 1)
  ret i32 %v7_18fdc

; uselistorder directives
  uselistorder i32 %v3_18fca, { 1, 0 }
}

define i32 @function_19000(i32 %arg1) local_unnamed_addr {
dec_label_pc_19000:
  %v0_19001 = load i32, i32* @eax, align 8
  %v0_19005 = load i32, i32* @ebp, align 4
  %v1_19005 = add i32 %v0_19005, -44
  %v2_19005 = inttoptr i32 %v1_19005 to i32*
  %v3_19005 = load i32, i32* %v2_19005, align 4
  %v2_1900b = call i32 @function_35916(i32 %v3_19005, i32 %v0_19001)
  %v6_19010 = call i32 @function_19079(i32 %v3_19005, i32 %v0_19001, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  ret i32 %v6_19010

; uselistorder directives
  uselistorder i32 %v0_19001, { 1, 0 }
}

define i32 @function_19012() local_unnamed_addr {
dec_label_pc_19012:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1901a = load i32, i32* %ebx.global-to-local, align 8
  %v0_19026 = load i32, i32* @ebp, align 4
  %v1_19026 = add i32 %v0_19026, -56
  %v2_19026 = inttoptr i32 %v1_19026 to i32*
  %v3_19026 = load i32, i32* %v2_19026, align 4
  %v1_1902d = add i32 %v0_19026, -52
  %v2_1902d = inttoptr i32 %v1_1902d to i32*
  %v3_1902d = load i32, i32* %v2_1902d, align 4
  %v1_19034 = add i32 %v0_19026, -44
  %v2_19034 = inttoptr i32 %v1_19034 to i32*
  %v3_19034 = load i32, i32* %v2_19034, align 4
  %v2_1903a = call i32 @function_35916(i32 %v3_19034, i32 %v3_1902d)
  %sext = mul i32 %v0_1901a, 16777216
  %v6_1903f = sdiv i32 %sext, 16777216
  %v7_1903f = call i32 @function_19079(i32 %v3_19034, i32 %v3_1902d, i32 %v3_19026, i32 0, i32 %v6_1903f, i32 1)
  ret i32 %v7_1903f

; uselistorder directives
  uselistorder i32 %v3_1902d, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_19079, { 19, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_35916, { 17, 0, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_19041(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_19041:
  %v0_19059 = load i32, i32* @ebp, align 4
  %v1_1906e = add i32 %v0_19059, -44
  %v2_1906e = inttoptr i32 %v1_1906e to i32*
  %v3_1906e = load i32, i32* %v2_1906e, align 4
  ret i32 %v3_1906e
}

define i32 @function_19079(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_19079:
  %v0_19079 = load i32, i32* @ebp, align 4
  %v1_19079 = add i32 %v0_19079, -28
  %v2_19079 = inttoptr i32 %v1_19079 to i32*
  %v3_19079 = load i32, i32* %v2_19079, align 4
  %v3_1907c = xor i32 %v3_19079, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1907c = icmp eq i32 %v3_1907c, 0
  store i32 %v3_1907c, i32* @eax, align 8
  br i1 %v4_1907c, label %bb, label %dec_label_pc_19085

bb:                                               ; preds = %dec_label_pc_19079
  %v1_19083 = call i32 @function_1908a()
  br label %dec_label_pc_19085

dec_label_pc_19085:                               ; preds = %bb, %dec_label_pc_19079
  %v2_19083 = phi i32 [ %v1_19083, %bb ], [ %v3_1907c, %dec_label_pc_19079 ]
  ret i32 %v2_19083
}

define i32 @function_1908a() local_unnamed_addr {
dec_label_pc_1908a:
  %v0_19091 = load i32, i32* @eax, align 8
  ret i32 %v0_19091
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_10shared_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail23foreign_void_shared_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9destroyerEPvNS_7variantISD_SH_NS1_5void_ESR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_E18has_fallback_type_EEENT1_11result_typeEiiRSU_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_190e4:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i8 @__decompiler_undefined_function_3()
  %tmp104 = call i8 @__decompiler_undefined_function_3()
  %tmp105 = call i8 @__decompiler_undefined_function_3()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i8 @__decompiler_undefined_function_3()
  %tmp108 = call i8 @__decompiler_undefined_function_3()
  %tmp109 = call i8 @__decompiler_undefined_function_3()
  %tmp110 = call i8 @__decompiler_undefined_function_3()
  %tmp111 = call i8 @__decompiler_undefined_function_3()
  %tmp112 = call i8 @__decompiler_undefined_function_3()
  %tmp113 = call i8 @__decompiler_undefined_function_3()
  %tmp114 = call i8 @__decompiler_undefined_function_3()
  %tmp115 = call i8 @__decompiler_undefined_function_3()
  %tmp116 = call i8 @__decompiler_undefined_function_3()
  %tmp117 = call i8 @__decompiler_undefined_function_3()
  %tmp122 = call i8 @__decompiler_undefined_function_3()
  %v0_190e7 = load i32, i32* %edi.global-to-local, align 8
  %v0_190e8 = load i32, i32* %esi.global-to-local, align 4
  %v0_190e9 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @0, align 4
  switch i32 %arg2, label %dec_label_pc_1956d [
    i32 0, label %dec_label_pc_19143
    i32 1, label %dec_label_pc_19179
    i32 2, label %dec_label_pc_191af
    i32 3, label %dec_label_pc_191e5
    i32 4, label %dec_label_pc_1921b
    i32 5, label %dec_label_pc_19251
    i32 6, label %dec_label_pc_19287
    i32 7, label %dec_label_pc_192bd
    i32 8, label %dec_label_pc_192f3
    i32 9, label %dec_label_pc_19329
    i32 10, label %dec_label_pc_1935f
    i32 11, label %dec_label_pc_19395
    i32 12, label %dec_label_pc_193cb
    i32 13, label %dec_label_pc_19401
    i32 14, label %dec_label_pc_19437
    i32 15, label %dec_label_pc_1946d
    i32 16, label %dec_label_pc_194a3
    i32 17, label %dec_label_pc_194d9
    i32 18, label %dec_label_pc_1950d
    i32 19, label %dec_label_pc_1953e
  ]

dec_label_pc_19143:                               ; preds = %dec_label_pc_190e4
  %v6_1916f = sext i8 %tmp122 to i32
  %v7_1916f = call i32 @unknown_35f03(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1916f, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19179:                               ; preds = %dec_label_pc_190e4
  %v6_191a5 = sext i8 %tmp117 to i32
  %v7_191a5 = call i32 @unknown_35f70(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_191a5, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_191af:                               ; preds = %dec_label_pc_190e4
  %v6_191db = sext i8 %tmp116 to i32
  %v7_191db = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_191db, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_191e5:                               ; preds = %dec_label_pc_190e4
  %v6_19211 = sext i8 %tmp115 to i32
  %v7_19211 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19211, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1921b:                               ; preds = %dec_label_pc_190e4
  %v6_19247 = sext i8 %tmp114 to i32
  %v7_19247 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19247, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19251:                               ; preds = %dec_label_pc_190e4
  %v6_1927d = sext i8 %tmp113 to i32
  %v7_1927d = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1927d, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19287:                               ; preds = %dec_label_pc_190e4
  %v6_192b3 = sext i8 %tmp112 to i32
  %v7_192b3 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_192b3, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_192bd:                               ; preds = %dec_label_pc_190e4
  %v6_192e9 = sext i8 %tmp111 to i32
  %v7_192e9 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_192e9, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_192f3:                               ; preds = %dec_label_pc_190e4
  %v6_1931f = sext i8 %tmp110 to i32
  %v7_1931f = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1931f, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19329:                               ; preds = %dec_label_pc_190e4
  %v6_19355 = sext i8 %tmp109 to i32
  %v7_19355 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19355, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1935f:                               ; preds = %dec_label_pc_190e4
  %v6_1938b = sext i8 %tmp108 to i32
  %v7_1938b = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1938b, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19395:                               ; preds = %dec_label_pc_190e4
  %v6_193c1 = sext i8 %tmp107 to i32
  %v7_193c1 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_193c1, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_193cb:                               ; preds = %dec_label_pc_190e4
  %v6_193f7 = sext i8 %tmp106 to i32
  %v7_193f7 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_193f7, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19401:                               ; preds = %dec_label_pc_190e4
  %v6_1942d = sext i8 %tmp105 to i32
  %v7_1942d = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1942d, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_19437:                               ; preds = %dec_label_pc_190e4
  %v6_19463 = sext i8 %tmp104 to i32
  %v7_19463 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19463, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1946d:                               ; preds = %dec_label_pc_190e4
  %v6_19499 = sext i8 %tmp103 to i32
  %v7_19499 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19499, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_194a3:                               ; preds = %dec_label_pc_190e4
  %v6_194cf = sext i8 %tmp102 to i32
  %v7_194cf = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_194cf, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_194d9:                               ; preds = %dec_label_pc_190e4
  %sext2 = mul i32 %v0_190e7, 16777216
  %v6_19503 = sdiv i32 %sext2, 16777216
  %v7_19503 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19503, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1950d:                               ; preds = %dec_label_pc_190e4
  %sext1 = mul i32 %v0_190e8, 16777216
  %v6_19537 = sdiv i32 %sext1, 16777216
  %v7_19537 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19537, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1953e:                               ; preds = %dec_label_pc_190e4
  %sext = mul i32 %v0_190e9, 16777216
  %v6_19566 = sdiv i32 %sext, 16777216
  %v7_19566 = call i32 @unknown_35fdd(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19566, i32 1)
  br label %dec_label_pc_195a5

dec_label_pc_1956d:                               ; preds = %dec_label_pc_190e4
  %v0_1957d = load i32, i32* %ecx.global-to-local, align 4
  %v0_19581 = load i32, i32* %edx.global-to-local, align 8
  %sext3 = mul i32 %v0_19581, 16777216
  %v8_195a0 = sdiv i32 %sext3, 16777216
  %v9_195a0 = call i32 @unknown_36037(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v8_195a0, i32 %v0_1957d, i32 0, i32 0)
  br label %dec_label_pc_195a5

dec_label_pc_195a5:                               ; preds = %dec_label_pc_1953e, %dec_label_pc_1950d, %dec_label_pc_194d9, %dec_label_pc_194a3, %dec_label_pc_1946d, %dec_label_pc_19437, %dec_label_pc_19401, %dec_label_pc_193cb, %dec_label_pc_19395, %dec_label_pc_1935f, %dec_label_pc_19329, %dec_label_pc_192f3, %dec_label_pc_192bd, %dec_label_pc_19287, %dec_label_pc_19251, %dec_label_pc_1921b, %dec_label_pc_191e5, %dec_label_pc_191af, %dec_label_pc_19179, %dec_label_pc_19143, %dec_label_pc_1956d
  store i32 %v0_190e9, i32* %ebx.global-to-local, align 8
  store i32 %v0_190e8, i32* %esi.global-to-local, align 4
  store i32 %v0_190e7, i32* %edi.global-to-local, align 8
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %v0_190e9, { 1, 0 }
  uselistorder i32 %v0_190e8, { 1, 0 }
  uselistorder i32 %v0_190e7, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @unknown_35fdd, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_195a5, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN5boost7variantINS1_10shared_ptrIvEENS1_8signals26detail23foreign_void_shared_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19610:
  store i32 357913941, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_19638

bb:                                               ; preds = %dec_label_pc_19610
  %v2_19636 = call i32 @function_1963d(i32 %arg1)
  br label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %bb, %dec_label_pc_19610
  %v3_19636 = phi i32 [ %v2_19636, %bb ], [ 357913941, %dec_label_pc_19610 ]
  ret i32 %v3_19636
}

define i32 @function_1963d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1963d:
  %v0_1963e = load i32, i32* @eax, align 8
  ret i32 %v0_1963e
}

define i32 @_ZSt18uninitialized_copyIPN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESB_ET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1963f:
  %v3_19676 = call i32 @unknown_365f9(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %v3_19676
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1968e:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp103 = call i8 @__decompiler_undefined_function_3()
  %tmp104 = call i8 @__decompiler_undefined_function_3()
  %tmp105 = call i8 @__decompiler_undefined_function_3()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i8 @__decompiler_undefined_function_3()
  %tmp108 = call i8 @__decompiler_undefined_function_3()
  %tmp109 = call i8 @__decompiler_undefined_function_3()
  %tmp110 = call i8 @__decompiler_undefined_function_3()
  %tmp111 = call i8 @__decompiler_undefined_function_3()
  %tmp112 = call i8 @__decompiler_undefined_function_3()
  %tmp113 = call i8 @__decompiler_undefined_function_3()
  %tmp114 = call i8 @__decompiler_undefined_function_3()
  %tmp115 = call i8 @__decompiler_undefined_function_3()
  %tmp116 = call i8 @__decompiler_undefined_function_3()
  %tmp117 = call i8 @__decompiler_undefined_function_3()
  %tmp118 = call i8 @__decompiler_undefined_function_3()
  %tmp123 = call i8 @__decompiler_undefined_function_3()
  %v0_19691 = load i32, i32* %edi.global-to-local, align 8
  %v0_19692 = load i32, i32* %esi.global-to-local, align 4
  %v0_19693 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %arg2, i32* @1, align 4
  switch i32 %arg2, label %dec_label_pc_19b17 [
    i32 0, label %dec_label_pc_196ed
    i32 1, label %dec_label_pc_19723
    i32 2, label %dec_label_pc_19759
    i32 3, label %dec_label_pc_1978f
    i32 4, label %dec_label_pc_197c5
    i32 5, label %dec_label_pc_197fb
    i32 6, label %dec_label_pc_19831
    i32 7, label %dec_label_pc_19867
    i32 8, label %dec_label_pc_1989d
    i32 9, label %dec_label_pc_198d3
    i32 10, label %dec_label_pc_19909
    i32 11, label %dec_label_pc_1993f
    i32 12, label %dec_label_pc_19975
    i32 13, label %dec_label_pc_199ab
    i32 14, label %dec_label_pc_199e1
    i32 15, label %dec_label_pc_19a17
    i32 16, label %dec_label_pc_19a4d
    i32 17, label %dec_label_pc_19a83
    i32 18, label %dec_label_pc_19ab7
    i32 19, label %dec_label_pc_19ae8
  ]

dec_label_pc_196ed:                               ; preds = %dec_label_pc_1968e
  %v4_196f5 = zext i8 %tmp123 to i32
  store i32 %v4_196f5, i32* %edx.global-to-local, align 8
  %v6_19719 = sext i8 %tmp123 to i32
  %v7_19719 = call i32 @unknown_366ef(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19719, i32 1)
  store i32 %v7_19719, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19723:                               ; preds = %dec_label_pc_1968e
  %v6_1974f = sext i8 %tmp118 to i32
  %v7_1974f = call i32 @unknown_3675c(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1974f, i32 1)
  store i32 %v7_1974f, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19759:                               ; preds = %dec_label_pc_1968e
  %v4_19761 = zext i8 %tmp117 to i32
  store i32 %v4_19761, i32* %edx.global-to-local, align 8
  %v6_19785 = sext i8 %tmp117 to i32
  %v7_19785 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19785, i32 1)
  store i32 %v7_19785, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_1978f:                               ; preds = %dec_label_pc_1968e
  %v6_197bb = sext i8 %tmp116 to i32
  %v7_197bb = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_197bb, i32 1)
  store i32 %v7_197bb, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_197c5:                               ; preds = %dec_label_pc_1968e
  %v4_197cd = zext i8 %tmp115 to i32
  store i32 %v4_197cd, i32* %edx.global-to-local, align 8
  %v6_197f1 = sext i8 %tmp115 to i32
  %v7_197f1 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_197f1, i32 1)
  store i32 %v7_197f1, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_197fb:                               ; preds = %dec_label_pc_1968e
  %v6_19827 = sext i8 %tmp114 to i32
  %v7_19827 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19827, i32 1)
  store i32 %v7_19827, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19831:                               ; preds = %dec_label_pc_1968e
  %v4_19839 = zext i8 %tmp113 to i32
  store i32 %v4_19839, i32* %edx.global-to-local, align 8
  %v6_1985d = sext i8 %tmp113 to i32
  %v7_1985d = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1985d, i32 1)
  store i32 %v7_1985d, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19867:                               ; preds = %dec_label_pc_1968e
  %v6_19893 = sext i8 %tmp112 to i32
  %v7_19893 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19893, i32 1)
  store i32 %v7_19893, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_1989d:                               ; preds = %dec_label_pc_1968e
  %v4_198a5 = zext i8 %tmp111 to i32
  store i32 %v4_198a5, i32* %edx.global-to-local, align 8
  %v6_198c9 = sext i8 %tmp111 to i32
  %v7_198c9 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_198c9, i32 1)
  store i32 %v7_198c9, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_198d3:                               ; preds = %dec_label_pc_1968e
  %v6_198ff = sext i8 %tmp110 to i32
  %v7_198ff = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_198ff, i32 1)
  store i32 %v7_198ff, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19909:                               ; preds = %dec_label_pc_1968e
  %v4_19911 = zext i8 %tmp109 to i32
  store i32 %v4_19911, i32* %edx.global-to-local, align 8
  %v6_19935 = sext i8 %tmp109 to i32
  %v7_19935 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19935, i32 1)
  store i32 %v7_19935, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_1993f:                               ; preds = %dec_label_pc_1968e
  %v6_1996b = sext i8 %tmp108 to i32
  %v7_1996b = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_1996b, i32 1)
  store i32 %v7_1996b, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19975:                               ; preds = %dec_label_pc_1968e
  %v4_1997d = zext i8 %tmp107 to i32
  store i32 %v4_1997d, i32* %edx.global-to-local, align 8
  %v6_199a1 = sext i8 %tmp107 to i32
  %v7_199a1 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_199a1, i32 1)
  store i32 %v7_199a1, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_199ab:                               ; preds = %dec_label_pc_1968e
  %v6_199d7 = sext i8 %tmp106 to i32
  %v7_199d7 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_199d7, i32 1)
  store i32 %v7_199d7, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_199e1:                               ; preds = %dec_label_pc_1968e
  %v4_199e9 = zext i8 %tmp105 to i32
  store i32 %v4_199e9, i32* %edx.global-to-local, align 8
  %v6_19a0d = sext i8 %tmp105 to i32
  %v7_19a0d = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19a0d, i32 1)
  store i32 %v7_19a0d, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19a17:                               ; preds = %dec_label_pc_1968e
  %v6_19a43 = sext i8 %tmp104 to i32
  %v7_19a43 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19a43, i32 1)
  store i32 %v7_19a43, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19a4d:                               ; preds = %dec_label_pc_1968e
  %v4_19a55 = zext i8 %tmp103 to i32
  store i32 %v4_19a55, i32* %edx.global-to-local, align 8
  %v6_19a79 = sext i8 %tmp103 to i32
  %v7_19a79 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19a79, i32 1)
  store i32 %v7_19a79, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19a83:                               ; preds = %dec_label_pc_1968e
  %sext2 = mul i32 %v0_19691, 16777216
  %v6_19aad = sdiv i32 %sext2, 16777216
  %v7_19aad = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19aad, i32 1)
  store i32 %v7_19aad, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19ab7:                               ; preds = %dec_label_pc_1968e
  store i32 %v0_19692, i32* %edx.global-to-local, align 8
  %sext1 = mul i32 %v0_19692, 16777216
  %v6_19ae1 = sdiv i32 %sext1, 16777216
  %v7_19ae1 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19ae1, i32 1)
  store i32 %v7_19ae1, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19ae8:                               ; preds = %dec_label_pc_1968e
  %sext = mul i32 %v0_19693, 16777216
  %v6_19b10 = sdiv i32 %sext, 16777216
  %v7_19b10 = call i32 @unknown_367c9(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 %v6_19b10, i32 1)
  store i32 %v7_19b10, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19b17:                               ; preds = %dec_label_pc_1968e
  %v0_19b27 = load i32, i32* %ecx.global-to-local, align 4
  %v0_19b2b = load i32, i32* %edx.global-to-local, align 8
  %sext3 = mul i32 %v0_19b2b, 16777216
  %v8_19b4a = sdiv i32 %sext3, 16777216
  %v9_19b4a = call i32 @unknown_36823(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v8_19b4a, i32 %v0_19b27, i32 0, i32 0)
  store i32 %v9_19b4a, i32* @eax, align 8
  br label %dec_label_pc_19b4f

dec_label_pc_19b4f:                               ; preds = %dec_label_pc_19ae8, %dec_label_pc_19ab7, %dec_label_pc_19a83, %dec_label_pc_19a4d, %dec_label_pc_19a17, %dec_label_pc_199e1, %dec_label_pc_199ab, %dec_label_pc_19975, %dec_label_pc_1993f, %dec_label_pc_19909, %dec_label_pc_198d3, %dec_label_pc_1989d, %dec_label_pc_19867, %dec_label_pc_19831, %dec_label_pc_197fb, %dec_label_pc_197c5, %dec_label_pc_1978f, %dec_label_pc_19759, %dec_label_pc_19723, %dec_label_pc_196ed, %dec_label_pc_19b17
  %v2_19b595 = phi i32 [ %v7_19b10, %dec_label_pc_19ae8 ], [ %v7_19ae1, %dec_label_pc_19ab7 ], [ %v7_19aad, %dec_label_pc_19a83 ], [ %v7_19a79, %dec_label_pc_19a4d ], [ %v7_19a43, %dec_label_pc_19a17 ], [ %v7_19a0d, %dec_label_pc_199e1 ], [ %v7_199d7, %dec_label_pc_199ab ], [ %v7_199a1, %dec_label_pc_19975 ], [ %v7_1996b, %dec_label_pc_1993f ], [ %v7_19935, %dec_label_pc_19909 ], [ %v7_198ff, %dec_label_pc_198d3 ], [ %v7_198c9, %dec_label_pc_1989d ], [ %v7_19893, %dec_label_pc_19867 ], [ %v7_1985d, %dec_label_pc_19831 ], [ %v7_19827, %dec_label_pc_197fb ], [ %v7_197f1, %dec_label_pc_197c5 ], [ %v7_197bb, %dec_label_pc_1978f ], [ %v7_19785, %dec_label_pc_19759 ], [ %v7_1974f, %dec_label_pc_19723 ], [ %v7_19719, %dec_label_pc_196ed ], [ %v9_19b4a, %dec_label_pc_19b17 ]
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_19b5b

bb:                                               ; preds = %dec_label_pc_19b4f
  %v1_19b59 = call i32 @function_19b60()
  br label %dec_label_pc_19b5b

dec_label_pc_19b5b:                               ; preds = %bb, %dec_label_pc_19b4f
  %v2_19b59 = phi i32 [ %v1_19b59, %bb ], [ %v2_19b595, %dec_label_pc_19b4f ]
  ret i32 %v2_19b59

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @unknown_367c9, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19b4f, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
}

define i32 @function_19b60() local_unnamed_addr {
dec_label_pc_19b60:
  %v0_19b67 = load i32, i32* @eax, align 8
  ret i32 %v0_19b67
}

define i32 @_ZSt10_ConstructIN5boost7variantINS0_10shared_ptrIvEENS0_8signals26detail23foreign_void_shared_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESA_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19bb8:
  store i32 0, i32* @eax, align 8
  %v2_19be6 = call i32 @function_1a51e(i32 12, i32 %arg1)
  store i32 %v2_19be6, i32* @ebx, align 8
  %v1_19bed = icmp eq i32 %v2_19be6, 0
  br i1 %v1_19bed, label %bb, label %dec_label_pc_19bf1

bb:                                               ; preds = %dec_label_pc_19bb8
  %v1_19bef = call i32 @function_19c1a()
  br label %dec_label_pc_19bf1

dec_label_pc_19bf1:                               ; preds = %bb, %dec_label_pc_19bb8
  %v2_19bfb = call i32 @function_2b96a(i32 %v2_19be6, i32 %arg2)
  %v0_19c00 = call i32 @function_19c1a()
  ret i32 %v0_19c00

; uselistorder directives
  uselistorder i32 ()* @function_19c1a, { 1, 0 }
}

define i32 @function_19c1a() local_unnamed_addr {
dec_label_pc_19c1a:
  %v0_19c1a = load i32, i32* @ebp, align 4
  %v1_19c1a = add i32 %v0_19c1a, -28
  %v2_19c1a = inttoptr i32 %v1_19c1a to i32*
  %v3_19c1a = load i32, i32* %v2_19c1a, align 4
  %v3_19c1d = xor i32 %v3_19c1a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_19c1d = icmp eq i32 %v3_19c1d, 0
  store i32 %v3_19c1d, i32* @eax, align 8
  br i1 %v4_19c1d, label %bb, label %dec_label_pc_19c26

bb:                                               ; preds = %dec_label_pc_19c1a
  %v1_19c24 = call i32 @function_19c2b()
  br label %dec_label_pc_19c26

dec_label_pc_19c26:                               ; preds = %bb, %dec_label_pc_19c1a
  %v2_19c24 = phi i32 [ %v1_19c24, %bb ], [ %v3_19c1d, %dec_label_pc_19c1a ]
  ret i32 %v2_19c24
}

define i32 @function_19c2b() local_unnamed_addr {
dec_label_pc_19c2b:
  %v0_19c32 = load i32, i32* @eax, align 8
  ret i32 %v0_19c32
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9destroyerEPvNS_7variantISD_SH_NS1_5void_ESR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_E18has_fallback_type_EEENT1_11result_typeEiiRSU_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_19c33:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_19c83, label %bb

bb:                                               ; preds = %dec_label_pc_19c33
  %sext = mul i32 %arg6, 16777216
  %v12_19c7d = sdiv i32 %sext, 16777216
  %v13_19c7d = sext i8 %arg5 to i32
  %v14_19c7d = call i32 @function_1a0bc(i32 %arg8, i32 %arg7, i32 %v12_19c7d, i32 %v13_19c7d, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_19c83

dec_label_pc_19c83:                               ; preds = %dec_label_pc_19c33, %bb
  %v2_19c86 = mul i32 %arg2, 4
  %v1_19c89 = add i32 %v2_19c86, ptrtoint (i32* @global_var_1a110.1982 to i32)
  %v1_19c8e = inttoptr i32 %v1_19c89 to i32*
  %v2_19c8e = load i32, i32* %v1_19c8e, align 4
  ret i32 %v2_19c8e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19c83, { 1, 0 }
}

define i32 @function_19c92() local_unnamed_addr {
dec_label_pc_19c92:
  %v0_19c9a = load i32, i32* @ebp, align 4
  %v1_19c9a = add i32 %v0_19c9a, -83
  %v2_19c9a = inttoptr i32 %v1_19c9a to i8*
  %v3_19c9a = load i8, i8* %v2_19c9a, align 1
  %v1_19caa = add i32 %v0_19c9a, -56
  %v2_19caa = inttoptr i32 %v1_19caa to i32*
  %v3_19caa = load i32, i32* %v2_19caa, align 4
  %v1_19cb1 = add i32 %v0_19c9a, -52
  %v2_19cb1 = inttoptr i32 %v1_19cb1 to i32*
  %v3_19cb1 = load i32, i32* %v2_19cb1, align 4
  %v1_19cb8 = add i32 %v0_19c9a, -44
  %v2_19cb8 = inttoptr i32 %v1_19cb8 to i32*
  %v3_19cb8 = load i32, i32* %v2_19cb8, align 4
  %v6_19cbe = sext i8 %v3_19c9a to i32
  %v7_19cbe = call i32 @unknown_36e2f(i32 %v3_19cb8, i32 %v3_19cb1, i32 %v3_19caa, i32 0, i32 %v6_19cbe, i32 1)
  %v0_19cc3 = call i32 @function_1a0f4()
  ret i32 %v0_19cc3

; uselistorder directives
  uselistorder i32 %v0_19c9a, { 0, 2, 1, 3 }
}

define i32 @function_19cc8() local_unnamed_addr {
dec_label_pc_19cc8:
  %v0_19cd0 = load i32, i32* @ebp, align 4
  %v1_19cd0 = add i32 %v0_19cd0, -82
  %v2_19cd0 = inttoptr i32 %v1_19cd0 to i8*
  %v3_19cd0 = load i8, i8* %v2_19cd0, align 1
  %v1_19ce0 = add i32 %v0_19cd0, -56
  %v2_19ce0 = inttoptr i32 %v1_19ce0 to i32*
  %v3_19ce0 = load i32, i32* %v2_19ce0, align 4
  %v1_19ce7 = add i32 %v0_19cd0, -52
  %v2_19ce7 = inttoptr i32 %v1_19ce7 to i32*
  %v3_19ce7 = load i32, i32* %v2_19ce7, align 4
  %v1_19cee = add i32 %v0_19cd0, -44
  %v2_19cee = inttoptr i32 %v1_19cee to i32*
  %v3_19cee = load i32, i32* %v2_19cee, align 4
  %v6_19cf4 = sext i8 %v3_19cd0 to i32
  %v7_19cf4 = call i32 @unknown_36e9c(i32 %v3_19cee, i32 %v3_19ce7, i32 %v3_19ce0, i32 0, i32 %v6_19cf4, i32 1)
  %v0_19cf9 = call i32 @function_1a0f4()
  ret i32 %v0_19cf9

; uselistorder directives
  uselistorder i32 %v0_19cd0, { 0, 2, 1, 3 }
}

define i32 @function_19cfe() local_unnamed_addr {
dec_label_pc_19cfe:
  %v0_19d06 = load i32, i32* @ebp, align 4
  %v1_19d24 = add i32 %v0_19d06, -44
  %v2_19d24 = inttoptr i32 %v1_19d24 to i32*
  %v3_19d24 = load i32, i32* %v2_19d24, align 4
  %v1_19d2a = call i32 @unknown_36f09(i32 %v3_19d24)
  %v0_19d2f = call i32 @function_1a0f4()
  ret i32 %v0_19d2f
}

define i32 @function_19d34() local_unnamed_addr {
dec_label_pc_19d34:
  %v0_19d3c = load i32, i32* @ebp, align 4
  %v1_19d5a = add i32 %v0_19d3c, -44
  %v2_19d5a = inttoptr i32 %v1_19d5a to i32*
  %v3_19d5a = load i32, i32* %v2_19d5a, align 4
  %v1_19d60 = call i32 @unknown_36f09(i32 %v3_19d5a)
  %v0_19d65 = call i32 @function_1a0f4()
  ret i32 %v0_19d65
}

define i32 @function_19d6a() local_unnamed_addr {
dec_label_pc_19d6a:
  %v0_19d72 = load i32, i32* @ebp, align 4
  %v1_19d90 = add i32 %v0_19d72, -44
  %v2_19d90 = inttoptr i32 %v1_19d90 to i32*
  %v3_19d90 = load i32, i32* %v2_19d90, align 4
  %v1_19d96 = call i32 @unknown_36f09(i32 %v3_19d90)
  %v0_19d9b = call i32 @function_1a0f4()
  ret i32 %v0_19d9b
}

define i32 @function_19da0() local_unnamed_addr {
dec_label_pc_19da0:
  %v0_19da8 = load i32, i32* @ebp, align 4
  %v1_19dc6 = add i32 %v0_19da8, -44
  %v2_19dc6 = inttoptr i32 %v1_19dc6 to i32*
  %v3_19dc6 = load i32, i32* %v2_19dc6, align 4
  %v1_19dcc = call i32 @unknown_36f09(i32 %v3_19dc6)
  %v0_19dd1 = call i32 @function_1a0f4()
  ret i32 %v0_19dd1
}

define i32 @function_19dd6() local_unnamed_addr {
dec_label_pc_19dd6:
  %v0_19dde = load i32, i32* @ebp, align 4
  %v1_19dfc = add i32 %v0_19dde, -44
  %v2_19dfc = inttoptr i32 %v1_19dfc to i32*
  %v3_19dfc = load i32, i32* %v2_19dfc, align 4
  %v1_19e02 = call i32 @unknown_36f09(i32 %v3_19dfc)
  %v0_19e07 = call i32 @function_1a0f4()
  ret i32 %v0_19e07
}

define i32 @function_19e0c() local_unnamed_addr {
dec_label_pc_19e0c:
  %v0_19e14 = load i32, i32* @ebp, align 4
  %v1_19e32 = add i32 %v0_19e14, -44
  %v2_19e32 = inttoptr i32 %v1_19e32 to i32*
  %v3_19e32 = load i32, i32* %v2_19e32, align 4
  %v1_19e38 = call i32 @unknown_36f09(i32 %v3_19e32)
  %v0_19e3d = call i32 @function_1a0f4()
  ret i32 %v0_19e3d
}

define i32 @function_19e42() local_unnamed_addr {
dec_label_pc_19e42:
  %v0_19e4a = load i32, i32* @ebp, align 4
  %v1_19e68 = add i32 %v0_19e4a, -44
  %v2_19e68 = inttoptr i32 %v1_19e68 to i32*
  %v3_19e68 = load i32, i32* %v2_19e68, align 4
  %v1_19e6e = call i32 @unknown_36f09(i32 %v3_19e68)
  %v0_19e73 = call i32 @function_1a0f4()
  ret i32 %v0_19e73
}

define i32 @function_19e78() local_unnamed_addr {
dec_label_pc_19e78:
  %v0_19e80 = load i32, i32* @ebp, align 4
  %v1_19e9e = add i32 %v0_19e80, -44
  %v2_19e9e = inttoptr i32 %v1_19e9e to i32*
  %v3_19e9e = load i32, i32* %v2_19e9e, align 4
  %v1_19ea4 = call i32 @unknown_36f09(i32 %v3_19e9e)
  %v0_19ea9 = call i32 @function_1a0f4()
  ret i32 %v0_19ea9
}

define i32 @function_19ec8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19ec8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_19ecc = load i32, i32* @ebx, align 8
  %v1_19ecc = add i32 %v0_19ecc, 1149881413
  %v2_19ecc = inttoptr i32 %v1_19ecc to i8*
  %v3_19ecc = load i8, i8* %v2_19ecc, align 1
  %v4_19ecc = load i32, i32* @ecx, align 4
  %v5_19ecc = trunc i32 %v4_19ecc to i8
  %v6_19ecc = or i8 %v5_19ecc, %v3_19ecc
  store i8 %v6_19ecc, i8* %v2_19ecc, align 1
  %v1_19eda = call i32 @unknown_36f09(i32 %tmp)
  %v0_19edf = call i32 @function_1a0f4()
  ret i32 %v0_19edf
}

define i32 @function_19ee4() local_unnamed_addr {
dec_label_pc_19ee4:
  %v0_19eec = load i32, i32* @ebp, align 4
  %v1_19f0a = add i32 %v0_19eec, -44
  %v2_19f0a = inttoptr i32 %v1_19f0a to i32*
  %v3_19f0a = load i32, i32* %v2_19f0a, align 4
  %v1_19f10 = call i32 @unknown_36f09(i32 %v3_19f0a)
  %v0_19f15 = call i32 @function_1a0f4()
  ret i32 %v0_19f15
}

define i32 @function_19f1a() local_unnamed_addr {
dec_label_pc_19f1a:
  %v0_19f22 = load i32, i32* @ebp, align 4
  %v1_19f40 = add i32 %v0_19f22, -44
  %v2_19f40 = inttoptr i32 %v1_19f40 to i32*
  %v3_19f40 = load i32, i32* %v2_19f40, align 4
  %v1_19f46 = call i32 @unknown_36f09(i32 %v3_19f40)
  %v0_19f4b = call i32 @function_1a0f4()
  ret i32 %v0_19f4b
}

define i32 @function_19f50() local_unnamed_addr {
dec_label_pc_19f50:
  %v0_19f58 = load i32, i32* @ebp, align 4
  %v1_19f76 = add i32 %v0_19f58, -44
  %v2_19f76 = inttoptr i32 %v1_19f76 to i32*
  %v3_19f76 = load i32, i32* %v2_19f76, align 4
  %v1_19f7c = call i32 @unknown_36f09(i32 %v3_19f76)
  %v0_19f81 = call i32 @function_1a0f4()
  ret i32 %v0_19f81
}

define i32 @function_19f86() local_unnamed_addr {
dec_label_pc_19f86:
  %v0_19f8e = load i32, i32* @ebp, align 4
  %v1_19fac = add i32 %v0_19f8e, -44
  %v2_19fac = inttoptr i32 %v1_19fac to i32*
  %v3_19fac = load i32, i32* %v2_19fac, align 4
  %v1_19fb2 = call i32 @unknown_36f09(i32 %v3_19fac)
  %v0_19fb7 = call i32 @function_1a0f4()
  ret i32 %v0_19fb7
}

define i32 @function_19fbc() local_unnamed_addr {
dec_label_pc_19fbc:
  %v0_19fc4 = load i32, i32* @ebp, align 4
  %v1_19fe2 = add i32 %v0_19fc4, -44
  %v2_19fe2 = inttoptr i32 %v1_19fe2 to i32*
  %v3_19fe2 = load i32, i32* %v2_19fe2, align 4
  %v1_19fe8 = call i32 @unknown_36f09(i32 %v3_19fe2)
  %v0_19fed = call i32 @function_1a0f4()
  ret i32 %v0_19fed
}

define i32 @function_19ff2() local_unnamed_addr {
dec_label_pc_19ff2:
  %v0_19ffa = load i32, i32* @ebp, align 4
  %v1_1a018 = add i32 %v0_19ffa, -44
  %v2_1a018 = inttoptr i32 %v1_1a018 to i32*
  %v3_1a018 = load i32, i32* %v2_1a018, align 4
  %v1_1a01e = call i32 @unknown_36f09(i32 %v3_1a018)
  %v0_1a023 = call i32 @function_1a0f4()
  ret i32 %v0_1a023
}

define i32 @function_1a028() local_unnamed_addr {
dec_label_pc_1a028:
  %v0_1a03e = load i32, i32* @ebp, align 4
  %v1_1a04c = add i32 %v0_1a03e, -44
  %v2_1a04c = inttoptr i32 %v1_1a04c to i32*
  %v3_1a04c = load i32, i32* %v2_1a04c, align 4
  %v1_1a052 = call i32 @unknown_36f09(i32 %v3_1a04c)
  %v0_1a057 = call i32 @function_1a0f4()
  ret i32 %v0_1a057
}

define i32 @function_1a05c() local_unnamed_addr {
dec_label_pc_1a05c:
  %v0_1a072 = load i32, i32* @ebp, align 4
  %v1_1a080 = add i32 %v0_1a072, -44
  %v2_1a080 = inttoptr i32 %v1_1a080 to i32*
  %v3_1a080 = load i32, i32* %v2_1a080, align 4
  %v1_1a086 = call i32 @unknown_36f09(i32 %v3_1a080)
  %v0_1a08b = call i32 @function_1a0f4()
  ret i32 %v0_1a08b
}

define i32 @function_1a08d() local_unnamed_addr {
dec_label_pc_1a08d:
  %v0_1a0a1 = load i32, i32* @ebp, align 4
  %v1_1a0af = add i32 %v0_1a0a1, -44
  %v2_1a0af = inttoptr i32 %v1_1a0af to i32*
  %v3_1a0af = load i32, i32* %v2_1a0af, align 4
  %v1_1a0b5 = call i32 @unknown_36f09(i32 %v3_1a0af)
  %v0_1a0ba = call i32 @function_1a0f4()
  ret i32 %v0_1a0ba

; uselistorder directives
  uselistorder i32 ()* @function_1a0f4, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_36f09, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_1a0bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1a0bc:
  %v0_1a0cc = load i32, i32* @ecx, align 4
  %v0_1a0d0 = load i32, i32* @edx, align 8
  %v0_1a0d4 = load i32, i32* @ebp, align 4
  %v1_1a0d4 = add i32 %v0_1a0d4, -56
  %v2_1a0d4 = inttoptr i32 %v1_1a0d4 to i32*
  %v3_1a0d4 = load i32, i32* %v2_1a0d4, align 4
  %v1_1a0db = add i32 %v0_1a0d4, -52
  %v2_1a0db = inttoptr i32 %v1_1a0db to i32*
  %v3_1a0db = load i32, i32* %v2_1a0db, align 4
  %v1_1a0e2 = add i32 %v0_1a0d4, -48
  %v2_1a0e2 = inttoptr i32 %v1_1a0e2 to i32*
  %v3_1a0e2 = load i32, i32* %v2_1a0e2, align 4
  %v1_1a0e9 = add i32 %v0_1a0d4, -44
  %v2_1a0e9 = inttoptr i32 %v1_1a0e9 to i32*
  %v3_1a0e9 = load i32, i32* %v2_1a0e9, align 4
  %sext = mul i32 %v0_1a0d0, 16777216
  %v8_1a0ef = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_1a0cc, 16777216
  %v9_1a0ef = sdiv i32 %sext1, 16777216
  %v10_1a0ef = call i32 @unknown_36f63(i32 %v3_1a0e9, i32 %v3_1a0e2, i32 %v3_1a0db, i32 %v3_1a0d4, i32 %v8_1a0ef, i32 %v9_1a0ef, i32 0, i32 0)
  ret i32 %v10_1a0ef

; uselistorder directives
  uselistorder i32 %v0_1a0d4, { 1, 0, 2, 3 }
}

define i32 @function_1a0f4() local_unnamed_addr {
dec_label_pc_1a0f4:
  %v0_1a0f4 = load i32, i32* @ebp, align 4
  %v1_1a0f4 = add i32 %v0_1a0f4, -28
  %v2_1a0f4 = inttoptr i32 %v1_1a0f4 to i32*
  %v3_1a0f4 = load i32, i32* %v2_1a0f4, align 4
  %v3_1a0f7 = xor i32 %v3_1a0f4, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1a0f7 = icmp eq i32 %v3_1a0f7, 0
  store i32 %v3_1a0f7, i32* @eax, align 8
  br i1 %v4_1a0f7, label %bb, label %dec_label_pc_1a100

bb:                                               ; preds = %dec_label_pc_1a0f4
  %v1_1a0fe = call i32 @function_1a105()
  br label %dec_label_pc_1a100

dec_label_pc_1a100:                               ; preds = %bb, %dec_label_pc_1a0f4
  %v2_1a0fe = phi i32 [ %v1_1a0fe, %bb ], [ %v3_1a0f7, %dec_label_pc_1a0f4 ]
  ret i32 %v2_1a0fe
}

define i32 @function_1a105() local_unnamed_addr {
dec_label_pc_1a105:
  %v0_1a10c = load i32, i32* @eax, align 8
  ret i32 %v0_1a10c
}

define i32 @_ZN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E27internal_apply_visitor_implINS7_9copy_intoEPKvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a160:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a199 = load i32, i32* %ecx.global-to-local, align 4
  %v0_1a19d = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1a19d, 16777216
  %v12_1a1bc = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_1a199, 16777216
  %v13_1a1bc = sdiv i32 %sext1, 16777216
  %v14_1a1bc = call i32 @unknown_374f7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_1a1bc, i32 %v13_1a1bc, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a1cd

bb:                                               ; preds = %dec_label_pc_1a160
  %v1_1a1cb = call i32 @function_1a1d2()
  br label %dec_label_pc_1a1cd

dec_label_pc_1a1cd:                               ; preds = %bb, %dec_label_pc_1a160
  %v2_1a1cb = phi i32 [ %v1_1a1cb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a160 ]
  ret i32 %v2_1a1cb

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a1d2() local_unnamed_addr {
dec_label_pc_1a1d2:
  %v0_1a1d3 = load i32, i32* @eax, align 8
  ret i32 %v0_1a1d3
}

define i32 @_ZNKSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1d4:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a1fa

bb:                                               ; preds = %dec_label_pc_1a1d4
  %v2_1a1f8 = call i32 @function_1a1ff(i32 %arg1)
  br label %dec_label_pc_1a1fa

dec_label_pc_1a1fa:                               ; preds = %bb, %dec_label_pc_1a1d4
  %v3_1a1f8 = phi i32 [ %v2_1a1f8, %bb ], [ %arg1, %dec_label_pc_1a1d4 ]
  ret i32 %v3_1a1f8
}

define i32 @function_1a1ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1ff:
  %v0_1a200 = load i32, i32* @eax, align 8
  ret i32 %v0_1a200
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a202:
  store i32 357913941, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a22a

bb:                                               ; preds = %dec_label_pc_1a202
  %v2_1a228 = call i32 @function_1a22f(i32 %arg1)
  br label %dec_label_pc_1a22a

dec_label_pc_1a22a:                               ; preds = %bb, %dec_label_pc_1a202
  %v3_1a228 = phi i32 [ %v2_1a228, %bb ], [ 357913941, %dec_label_pc_1a202 ]
  ret i32 %v3_1a228

; uselistorder directives
  uselistorder i32 357913941, { 0, 2, 1, 3 }
}

define i32 @function_1a22f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a22f:
  %v0_1a230 = load i32, i32* @eax, align 8
  ret i32 %v0_1a230
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a232:
  %v2_1a252 = load i32, i32* %arg1, align 4
  %v1_1a257 = inttoptr i32 %arg2 to i32*
  %v2_1a257 = load i32, i32* %v1_1a257, align 4
  %v12_1a259 = icmp eq i32 %v2_1a252, %v2_1a257
  %v1_1a25b = icmp eq i1 %v12_1a259, false
  %v2_1a25b = zext i1 %v1_1a25b to i32
  %v4_1a25b = and i32 %v2_1a257, -256
  %v5_1a25b = or i32 %v2_1a25b, %v4_1a25b
  store i32 %v5_1a25b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a26a

bb:                                               ; preds = %dec_label_pc_1a232
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1a268 = call i32 @function_1a26f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1a26a

dec_label_pc_1a26a:                               ; preds = %bb, %dec_label_pc_1a232
  %v4_1a268 = phi i32 [ %v3_1a268, %bb ], [ %v5_1a25b, %dec_label_pc_1a232 ]
  ret i32 %v4_1a268

; uselistorder directives
  uselistorder i32 %v2_1a257, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a26f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a26f:
  %v0_1a270 = load i32, i32* @eax, align 8
  ret i32 %v0_1a270
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a272:
  %v2_1a28c = load i32, i32* %arg1, align 4
  %v1_1a28e = add i32 %v2_1a28c, 8
  store i32 %v1_1a28e, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a29d

bb:                                               ; preds = %dec_label_pc_1a272
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1a29b = call i32 @function_1a2a2(i32 %tmp100)
  br label %dec_label_pc_1a29d

dec_label_pc_1a29d:                               ; preds = %bb, %dec_label_pc_1a272
  %v3_1a29b = phi i32 [ %v2_1a29b, %bb ], [ %v1_1a28e, %dec_label_pc_1a272 ]
  ret i32 %v3_1a29b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a2a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a2a2:
  %v0_1a2a3 = load i32, i32* @eax, align 8
  ret i32 %v0_1a2a3
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a2a4:
  %v2_1a2be = load i32, i32* %arg1, align 4
  %v1_1a2c0 = icmp eq i32 %v2_1a2be, 0
  %v1_1a2c2 = icmp eq i1 %v1_1a2c0, false
  br i1 %v1_1a2c2, label %bb, label %dec_label_pc_1a2c4

bb:                                               ; preds = %dec_label_pc_1a2a4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1a2c2 = call i32 @function_1a2e8(i32 %tmp105)
  br label %dec_label_pc_1a2c4

dec_label_pc_1a2c4:                               ; preds = %bb, %dec_label_pc_1a2a4
  %v3_1a2dc = phi i32 [ %v3_1a2c2, %bb ], [ %v2_1a2be, %dec_label_pc_1a2a4 ]
  ret i32 %v3_1a2dc

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a2e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a2e8:
  %v0_1a2e8 = load i32, i32* @ebp, align 4
  %v1_1a2e8 = add i32 %v0_1a2e8, -28
  %v2_1a2e8 = inttoptr i32 %v1_1a2e8 to i32*
  %v3_1a2e8 = load i32, i32* %v2_1a2e8, align 4
  %v1_1a2eb = inttoptr i32 %v3_1a2e8 to i32*
  %v2_1a2eb = load i32, i32* %v1_1a2eb, align 4
  store i32 %v2_1a2eb, i32* @eax, align 8
  %v1_1a2ed = add i32 %v0_1a2e8, -12
  %v2_1a2ed = inttoptr i32 %v1_1a2ed to i32*
  %v3_1a2ed = load i32, i32* %v2_1a2ed, align 4
  %v4_1a2f0 = icmp eq i32 %v3_1a2ed, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1a2f0, label %bb, label %dec_label_pc_1a2f9

bb:                                               ; preds = %dec_label_pc_1a2e8
  %v1_1a2f7 = call i32 @function_1a2fe()
  br label %dec_label_pc_1a2f9

dec_label_pc_1a2f9:                               ; preds = %bb, %dec_label_pc_1a2e8
  %v2_1a2f7 = phi i32 [ %v1_1a2f7, %bb ], [ %v2_1a2eb, %dec_label_pc_1a2e8 ]
  ret i32 %v2_1a2f7
}

define i32 @function_1a2fe() local_unnamed_addr {
dec_label_pc_1a2fe:
  %v0_1a2ff = load i32, i32* @eax, align 8
  ret i32 %v0_1a2ff
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a300:
  %v2_1a31a = load i32, i32* %arg1, align 4
  %v1_1a31c = icmp eq i32 %v2_1a31a, 0
  %v1_1a31e = icmp eq i1 %v1_1a31c, false
  br i1 %v1_1a31e, label %dec_label_pc_1a344, label %dec_label_pc_1a320

dec_label_pc_1a320:                               ; preds = %dec_label_pc_1a300
  br label %dec_label_pc_1a344

dec_label_pc_1a344:                               ; preds = %dec_label_pc_1a320, %dec_label_pc_1a300
  %v2_1a347 = load i32, i32* %arg1, align 4
  store i32 %v2_1a347, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a355

bb:                                               ; preds = %dec_label_pc_1a344
  %v1_1a353 = call i32 @function_1a35a()
  br label %dec_label_pc_1a355

dec_label_pc_1a355:                               ; preds = %bb, %dec_label_pc_1a344
  %v2_1a353 = phi i32 [ %v1_1a353, %bb ], [ %v2_1a347, %dec_label_pc_1a344 ]
  ret i32 %v2_1a353
}

define i32 @function_1a35a() local_unnamed_addr {
dec_label_pc_1a35a:
  %v0_1a35b = load i32, i32* @eax, align 8
  ret i32 %v0_1a35b
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE19nolock_slot_expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a35c:
  %v1_1a376 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1a376, i32* @eax, align 8
  %v1_1a37c = call i32 @function_28e80(i32 %v1_1a376)
  ret i32 %v1_1a37c
}

define i32 @function_1a382(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a382:
  %v0_1a382 = load i32, i32* @ebp, align 4
  %v1_1a382 = add i32 %v0_1a382, 1
  store i32 %v1_1a382, i32* @ebp, align 4
  %v1_1a383 = add i32 %v0_1a382, -12
  %v2_1a383 = inttoptr i32 %v1_1a383 to i8*
  %v3_1a383 = load i8, i8* %v2_1a383, align 1
  %v10_1a383 = icmp eq i8 %v3_1a383, 0
  br i1 %v10_1a383, label %dec_label_pc_1a391, label %dec_label_pc_1a38a

dec_label_pc_1a38a:                               ; preds = %dec_label_pc_1a382
  %v1_1a38a = add i32 %v0_1a382, -27
  %v2_1a38a = inttoptr i32 %v1_1a38a to i32*
  %v3_1a38a = load i32, i32* %v2_1a38a, align 4
  %v1_1a38d = add i32 %v3_1a38a, 4
  %v2_1a38d = inttoptr i32 %v1_1a38d to i8*
  store i8 0, i8* %v2_1a38d, align 1
  %v0_1a391.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1a391

dec_label_pc_1a391:                               ; preds = %dec_label_pc_1a38a, %dec_label_pc_1a382
  %v0_1a391 = phi i32 [ %v0_1a391.pre, %dec_label_pc_1a38a ], [ %v1_1a382, %dec_label_pc_1a382 ]
  %v1_1a391 = add i32 %v0_1a391, -13
  %v2_1a391 = inttoptr i32 %v1_1a391 to i8*
  %v3_1a391 = load i8, i8* %v2_1a391, align 1
  %v4_1a391 = zext i8 %v3_1a391 to i32
  store i32 %v4_1a391, i32* @eax, align 8
  %v1_1a395 = add i32 %v0_1a391, -12
  %v2_1a395 = inttoptr i32 %v1_1a395 to i32*
  %v3_1a395 = load i32, i32* %v2_1a395, align 4
  %v4_1a398 = icmp eq i32 %v3_1a395, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1a398, label %bb, label %dec_label_pc_1a3a1

bb:                                               ; preds = %dec_label_pc_1a391
  %v1_1a39f = call i32 @function_1a3a6()
  br label %dec_label_pc_1a3a1

dec_label_pc_1a3a1:                               ; preds = %bb, %dec_label_pc_1a391
  %v2_1a39f = phi i32 [ %v1_1a39f, %bb ], [ %v4_1a391, %dec_label_pc_1a391 ]
  ret i32 %v2_1a39f

; uselistorder directives
  uselistorder i32 %v0_1a391, { 1, 0 }
}

define i32 @function_1a3a6() local_unnamed_addr {
dec_label_pc_1a3a6:
  %v0_1a3a7 = load i32, i32* @eax, align 8
  ret i32 %v0_1a3a7
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a3a8:
  %v1_1a3c2 = add i32 %arg1, 68
  store i32 %v1_1a3c2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a3d1

bb:                                               ; preds = %dec_label_pc_1a3a8
  %v2_1a3cf = call i32 @function_1a3d6(i32 %arg1)
  br label %dec_label_pc_1a3d1

dec_label_pc_1a3d1:                               ; preds = %bb, %dec_label_pc_1a3a8
  %v3_1a3cf = phi i32 [ %v2_1a3cf, %bb ], [ %v1_1a3c2, %dec_label_pc_1a3a8 ]
  ret i32 %v3_1a3cf
}

define i32 @function_1a3d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a3d6:
  %v0_1a3d7 = load i32, i32* @eax, align 8
  ret i32 %v0_1a3d7
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a3d8:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @edx, align 8
  %v2_1a404 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a404, i32* @eax, align 8
  %v3_1a40e = call i32 @function_30e1e(i32 %v2_1a404, i32 %arg2)
  store i32 %arg4, i32* @eax, align 8
  %v4_1a423 = call i32 @function_3460a(i32 %arg4, i32 %v2_1a404)
  %v4_1a428 = trunc i32 %v4_1a423 to i8
  %v5_1a428 = icmp eq i8 %v4_1a428, 0
  %v1_1a42a = icmp eq i1 %v5_1a428, false
  br i1 %v1_1a42a, label %bb, label %dec_label_pc_1a42c

bb:                                               ; preds = %dec_label_pc_1a3d8
  %v2_1a42a = call i32 @function_1a450()
  br label %dec_label_pc_1a42c

dec_label_pc_1a42c:                               ; preds = %bb, %dec_label_pc_1a3d8
  %v3_1a444 = phi i32 [ %v2_1a42a, %bb ], [ %v4_1a423, %dec_label_pc_1a3d8 ]
  ret i32 %v3_1a444

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1a450() local_unnamed_addr {
dec_label_pc_1a450:
  %v0_1a450 = load i32, i32* @ebp, align 4
  %v1_1a450 = add i32 %v0_1a450, -48
  %v2_1a450 = inttoptr i32 %v1_1a450 to i32*
  %v3_1a450 = load i32, i32* %v2_1a450, align 4
  %v1_1a453 = add i32 %v3_1a450, 8
  %v1_1a456 = add i32 %v0_1a450, -28
  %v1_1a459 = add i32 %v0_1a450, -52
  %v2_1a459 = inttoptr i32 %v1_1a459 to i32*
  %v3_1a459 = load i32, i32* %v2_1a459, align 4
  %v4_1a467 = call i32 @unknown_37c9c(i32 %v1_1a456, i32 %v1_1a453, i32 %v3_1a459)
  %v0_1a46f = load i32, i32* @ebp, align 4
  %v1_1a46f = add i32 %v0_1a46f, -48
  %v2_1a46f = inttoptr i32 %v1_1a46f to i32*
  %v3_1a46f = load i32, i32* %v2_1a46f, align 4
  %v1_1a472 = add i32 %v3_1a46f, 8
  %v1_1a475 = add i32 %v0_1a46f, -24
  %v3_1a47f = call i32 @unknown_37cf4(i32 %v1_1a475, i32 %v1_1a472)
  %v0_1a487 = load i32, i32* @ebp, align 4
  %v1_1a487 = add i32 %v0_1a487, -24
  %v1_1a48e = add i32 %v0_1a487, -28
  %v4_1a494 = call i32 @unknown_37d3e(i32 %v1_1a48e, i32 %v1_1a487)
  %v4_1a499 = trunc i32 %v4_1a494 to i8
  %v5_1a499 = icmp eq i8 %v4_1a499, 0
  %v1_1a49b = icmp eq i1 %v5_1a499, false
  br i1 %v1_1a49b, label %bb, label %dec_label_pc_1a49d

bb:                                               ; preds = %dec_label_pc_1a450
  %v2_1a49b = call i32 @function_1a4c1()
  br label %dec_label_pc_1a49d

dec_label_pc_1a49d:                               ; preds = %bb, %dec_label_pc_1a450
  %v3_1a4b5 = phi i32 [ %v2_1a49b, %bb ], [ %v4_1a494, %dec_label_pc_1a450 ]
  ret i32 %v3_1a4b5

; uselistorder directives
  uselistorder i32 %v0_1a450, { 1, 0, 2 }
}

define i32 @function_1a4c1() local_unnamed_addr {
dec_label_pc_1a4c1:
  %v0_1a4c1 = load i32, i32* @ebp, align 4
  %v1_1a4c1 = add i32 %v0_1a4c1, -28
  %v2_1a4c7 = call i32 @unknown_37e08(i32 %v1_1a4c1)
  %v0_1a4cc = load i32, i32* @ebp, align 4
  %v1_1a4cc = add i32 %v0_1a4cc, -52
  %v2_1a4cc = inttoptr i32 %v1_1a4cc to i32*
  %v3_1a4cc = load i32, i32* %v2_1a4cc, align 4
  %v1_1a4d7 = add i32 %v0_1a4cc, -48
  %v2_1a4d7 = inttoptr i32 %v1_1a4d7 to i32*
  %v3_1a4d7 = load i32, i32* %v2_1a4d7, align 4
  %v5_1a4dd = call i32 @unknown_37d7e(i32 %v3_1a4d7, i32 %v2_1a4c7, i32 %v3_1a4cc)
  %v4_1a4e2 = trunc i32 %v5_1a4dd to i8
  %v5_1a4e2 = icmp eq i8 %v4_1a4e2, 0
  %v1_1a4e4 = icmp eq i1 %v5_1a4e2, false
  br i1 %v1_1a4e4, label %bb, label %dec_label_pc_1a4e6

bb:                                               ; preds = %dec_label_pc_1a4c1
  %v2_1a4e4 = call i32 @function_1a50a()
  br label %dec_label_pc_1a4e6

dec_label_pc_1a4e6:                               ; preds = %bb, %dec_label_pc_1a4c1
  %v3_1a4fe = phi i32 [ %v2_1a4e4, %bb ], [ %v5_1a4dd, %dec_label_pc_1a4c1 ]
  ret i32 %v3_1a4fe
}

define i32 @function_1a50a() local_unnamed_addr {
dec_label_pc_1a50a:
  %v0_1a50a = load i32, i32* @ebp, align 4
  %v1_1a50a = add i32 %v0_1a50a, -28
  %v1_1a510 = call i32 @unknown_37e08(i32 %v1_1a50a)
  %v0_1a518 = load i32, i32* @ebp, align 4
  %v1_1a518 = add i32 %v0_1a518, -56
  %v2_1a518 = inttoptr i32 %v1_1a518 to i32*
  %v3_1a518 = load i32, i32* %v2_1a518, align 4
  ret i32 %v3_1a518

; uselistorder directives
  uselistorder i32 (i32)* @unknown_37e08, { 1, 0 }
}

define i32 @function_1a51e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a51e:
  %v0_1a51e = load i32, i32* @eax, align 8
  %v1_1a51e = trunc i32 %v0_1a51e to i8
  %v2_1a51e = add i8 %v1_1a51e, ptrtoint (i8* @global_var_89.1944 to i8)
  %v6_1a51e = icmp ult i8 %v2_1a51e, %v1_1a51e
  %v3_1a520 = zext i1 %v6_1a51e to i32
  %v4_1a520 = add i32 %v0_1a51e, zext (i8 add (i8 ptrtoint (i8* @global_var_89.1944 to i8), i8 36) to i32)
  %v5_1a520 = add i32 %v3_1a520, %v4_1a520
  %v25_1a520 = and i32 %v5_1a520, 255
  %v27_1a520 = and i32 %v0_1a51e, -256
  %v28_1a520 = or i32 %v25_1a520, %v27_1a520
  store i32 %v28_1a520, i32* @eax, align 8
  %v0_1a522 = call i32 @function_306d0()
  %v4_1a527 = trunc i32 %v0_1a522 to i8
  %v5_1a527 = icmp eq i8 %v4_1a527, 0
  br i1 %v5_1a527, label %dec_label_pc_1a5a1, label %dec_label_pc_1a52b

dec_label_pc_1a52b:                               ; preds = %dec_label_pc_1a51e
  %v0_1a52b = load i32, i32* @ebp, align 4
  %v1_1a52b = add i32 %v0_1a52b, -56
  %v2_1a52b = inttoptr i32 %v1_1a52b to i32*
  %v3_1a52b = load i32, i32* %v2_1a52b, align 4
  %v1_1a52e = inttoptr i32 %v3_1a52b to i32*
  %v2_1a52e = load i32, i32* %v1_1a52e, align 4
  %v2_1a530 = add i32 %v0_1a52b, -20
  %v3_1a530 = inttoptr i32 %v2_1a530 to i32*
  store i32 %v2_1a52e, i32* %v3_1a530, align 4
  %v0_1a533 = load i32, i32* @ebp, align 4
  %v1_1a533 = add i32 %v0_1a533, -20
  store i32 %v1_1a533, i32* @eax, align 8
  %v1_1a539 = call i32 @function_349b0(i32 %v1_1a533)
  %v0_1a53e = load i32, i32* @ebp, align 4
  %v1_1a53e = add i32 %v0_1a53e, -16
  %v1_1a541 = add i32 %v0_1a53e, -52
  %v2_1a541 = inttoptr i32 %v1_1a541 to i32*
  %v3_1a541 = load i32, i32* %v2_1a541, align 4
  %v1_1a548 = add i32 %v0_1a53e, -48
  %v2_1a548 = inttoptr i32 %v1_1a548 to i32*
  %v3_1a548 = load i32, i32* %v2_1a548, align 4
  %v3_1a552 = call i32 @unknown_37e42(i32 %v1_1a53e, i32 %v3_1a548, i32 %v3_1a541)
  %v0_1a55a = load i32, i32* @ebp, align 4
  %v1_1a55a = add i32 %v0_1a55a, -16
  %v1_1a561 = add i32 %v0_1a55a, -20
  store i32 %v1_1a561, i32* @eax, align 8
  %v2_1a567 = call i32 @function_3460a(i32 %v1_1a561, i32 %v1_1a55a)
  %v4_1a56c = trunc i32 %v2_1a567 to i8
  %v5_1a56c = icmp eq i8 %v4_1a56c, 0
  %v0_1a58c = load i32, i32* @ebp, align 4
  %v1_1a58c = add i32 %v0_1a58c, -48
  %v2_1a58c = inttoptr i32 %v1_1a58c to i32*
  %v3_1a58c = load i32, i32* %v2_1a58c, align 4
  %v1_1a58f = add i32 %v3_1a58c, 8
  br i1 %v5_1a56c, label %dec_label_pc_1a58c, label %dec_label_pc_1a570

dec_label_pc_1a570:                               ; preds = %dec_label_pc_1a52b
  %v1_1a576 = add i32 %v0_1a58c, -52
  %v2_1a576 = inttoptr i32 %v1_1a576 to i32*
  %v3_1a576 = load i32, i32* %v2_1a576, align 4
  %v2_1a580 = call i32 @unknown_37f00(i32 %v1_1a58f, i32 %v3_1a576)
  %v0_1a585 = load i32, i32* @ebp, align 4
  %v1_1a585 = add i32 %v0_1a585, -20
  %v2_1a585 = inttoptr i32 %v1_1a585 to i32*
  %v3_1a585 = load i32, i32* %v2_1a585, align 4
  %v2_1a588 = inttoptr i32 %v2_1a580 to i32*
  store i32 %v3_1a585, i32* %v2_1a588, align 4
  br label %dec_label_pc_1a5a1

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a52b
  %v1_1a592 = add i32 %v0_1a58c, -28
  %v2_1a592 = inttoptr i32 %v1_1a592 to i32*
  %v3_1a592 = load i32, i32* %v2_1a592, align 4
  %v2_1a59c = call i32 @unknown_38046(i32 %v1_1a58f, i32 %v3_1a592)
  br label %dec_label_pc_1a5a1

dec_label_pc_1a5a1:                               ; preds = %dec_label_pc_1a58c, %dec_label_pc_1a570, %dec_label_pc_1a51e
  %v0_1a5a1 = load i32, i32* @ebp, align 4
  %v1_1a5a1 = add i32 %v0_1a5a1, -48
  %v2_1a5a1 = inttoptr i32 %v1_1a5a1 to i32*
  %v3_1a5a1 = load i32, i32* %v2_1a5a1, align 4
  %v1_1a5a4 = add i32 %v0_1a5a1, -44
  %v2_1a5a4 = inttoptr i32 %v1_1a5a4 to i32*
  %v3_1a5a4 = load i32, i32* %v2_1a5a4, align 4
  %v1_1a5a7 = add i32 %v0_1a5a1, -56
  %v2_1a5a7 = inttoptr i32 %v1_1a5a7 to i32*
  %v3_1a5a7 = load i32, i32* %v2_1a5a7, align 4
  %v1_1a5aa = inttoptr i32 %v3_1a5a7 to i32*
  %v2_1a5aa = load i32, i32* %v1_1a5aa, align 4
  store i32 %v2_1a5aa, i32* @ecx, align 4
  %v3_1a5b7 = call i32 @unknown_38088(i32 %v3_1a5a4, i32 %v3_1a5a1, i32 %v2_1a5aa)
  %v0_1a5bf = load i32, i32* @ebp, align 4
  %v1_1a5bf = add i32 %v0_1a5bf, -44
  %v2_1a5bf = inttoptr i32 %v1_1a5bf to i32*
  %v3_1a5bf = load i32, i32* %v2_1a5bf, align 4
  store i32 %v3_1a5bf, i32* @eax, align 8
  %v1_1a5c2 = add i32 %v0_1a5bf, -12
  %v2_1a5c2 = inttoptr i32 %v1_1a5c2 to i32*
  %v3_1a5c2 = load i32, i32* %v2_1a5c2, align 4
  %v4_1a5c5 = icmp eq i32 %v3_1a5c2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1a5c5, label %bb, label %dec_label_pc_1a5ce

bb:                                               ; preds = %dec_label_pc_1a5a1
  %v1_1a5cc = call i32 @function_1a5d3()
  br label %dec_label_pc_1a5ce

dec_label_pc_1a5ce:                               ; preds = %bb, %dec_label_pc_1a5a1
  %v2_1a5cc = phi i32 [ %v1_1a5cc, %bb ], [ %v3_1a5bf, %dec_label_pc_1a5a1 ]
  ret i32 %v2_1a5cc

; uselistorder directives
  uselistorder i32 %v1_1a58f, { 1, 0 }
  uselistorder i32 %v0_1a51e, { 1, 0, 2 }
}

define i32 @function_1a5d3() local_unnamed_addr {
dec_label_pc_1a5d3:
  %v0_1a5d4 = load i32, i32* @eax, align 8
  ret i32 %v0_1a5d4
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a5d8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1a5f2 = load i32, i32* %arg1, align 4
  %v1_1a5f4 = inttoptr i32 %v2_1a5f2 to i32*
  %v2_1a5f4 = load i32, i32* %v1_1a5f4, align 4
  store i32 %v2_1a5f4, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a60a

bb:                                               ; preds = %dec_label_pc_1a5d8
  %v2_1a608 = call i32 @function_1a60f(i32 %tmp100)
  br label %dec_label_pc_1a60a

dec_label_pc_1a60a:                               ; preds = %bb, %dec_label_pc_1a5d8
  %v3_1a608 = phi i32 [ %v2_1a608, %bb ], [ %tmp100, %dec_label_pc_1a5d8 ]
  ret i32 %v3_1a608
}

define i32 @function_1a60f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a60f:
  %v0_1a610 = load i32, i32* @eax, align 8
  ret i32 %v0_1a610
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS0_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEvRT_SN_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a611:
  %v2_1a631 = load i32, i32* %arg1, align 4
  %v1_1a639 = inttoptr i32 %arg2 to i32*
  %v2_1a639 = load i32, i32* %v1_1a639, align 4
  store i32 %v2_1a639, i32* %arg1, align 4
  store i32 %v2_1a631, i32* %v1_1a639, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a654

bb:                                               ; preds = %dec_label_pc_1a611
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_1a652 = call i32 @function_1a659(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_1a654

dec_label_pc_1a654:                               ; preds = %bb, %dec_label_pc_1a611
  %v4_1a652 = phi i32 [ %v3_1a652, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a611 ]
  ret i32 %v4_1a652

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_1a659(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a659:
  %v0_1a65a = load i32, i32* @eax, align 8
  ret i32 %v0_1a65a
}

define i32 @_ZN5boost15optional_detail13optional_baseISsEC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_1a65c:
  %v4_1a673 = ptrtoint i8* %arg1 to i32
  store i32 %v4_1a673, i32* @eax, align 8
  %v2_1a679 = call i32 @function_2cbf8(i32 %v4_1a673)
  store i8 0, i8* %arg1, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a690

bb:                                               ; preds = %dec_label_pc_1a65c
  %v1_1a68e = call i32 @function_1a695()
  br label %dec_label_pc_1a690

dec_label_pc_1a690:                               ; preds = %bb, %dec_label_pc_1a65c
  %v2_1a68e = phi i32 [ %v1_1a68e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a65c ]
  ret i32 %v2_1a68e
}

define i32 @function_1a695() local_unnamed_addr {
dec_label_pc_1a695:
  %v0_1a696 = load i32, i32* @eax, align 8
  ret i32 %v0_1a696
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_type7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a698:
  %v1_1a6b5 = call i32 @unknown_383aa(i32 %arg1)
  store i32 %v1_1a6b5, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a6c6

bb:                                               ; preds = %dec_label_pc_1a698
  %v1_1a6c4 = call i32 @function_1a6cb()
  br label %dec_label_pc_1a6c6

dec_label_pc_1a6c6:                               ; preds = %bb, %dec_label_pc_1a698
  %v2_1a6c4 = phi i32 [ %v1_1a6c4, %bb ], [ %v1_1a6b5, %dec_label_pc_1a698 ]
  ret i32 %v2_1a6c4
}

define i32 @function_1a6cb() local_unnamed_addr {
dec_label_pc_1a6cb:
  %v0_1a6cc = load i32, i32* @eax, align 8
  ret i32 %v0_1a6cc
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12members_typeC1Ej(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a6ce:
  %v1_1a6f1 = call i32 @unknown_38440(i32 %arg1)
  %v2_1a6fc = add i32 %arg1, 120
  %v3_1a6fc = inttoptr i32 %v2_1a6fc to i32*
  store i32 %arg2, i32* %v3_1a6fc, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a70b

bb:                                               ; preds = %dec_label_pc_1a6ce
  %v1_1a709 = call i32 @function_1a710()
  br label %dec_label_pc_1a70b

dec_label_pc_1a70b:                               ; preds = %bb, %dec_label_pc_1a6ce
  %v2_1a709 = phi i32 [ %v1_1a709, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a6ce ]
  ret i32 %v2_1a709

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a710() local_unnamed_addr {
dec_label_pc_1a710:
  %v0_1a711 = load i32, i32* @eax, align 8
  ret i32 %v0_1a711
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE11is_on_stackEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a712:
  %v1_1a72c = add i32 %arg1, 120
  %v2_1a72c = inttoptr i32 %v1_1a72c to i32*
  %v3_1a72c = load i32, i32* %v2_1a72c, align 4
  %tmp102 = icmp ult i32 %v3_1a72c, 11
  %v3_1a732 = zext i1 %tmp102 to i32
  %v5_1a732 = and i32 %v3_1a72c, -256
  %v6_1a732 = or i32 %v3_1a732, %v5_1a732
  store i32 %v6_1a732, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a741

bb:                                               ; preds = %dec_label_pc_1a712
  %v2_1a73f = call i32 @function_1a746(i32 %arg1)
  br label %dec_label_pc_1a741

dec_label_pc_1a741:                               ; preds = %bb, %dec_label_pc_1a712
  %v3_1a73f = phi i32 [ %v2_1a73f, %bb ], [ %v6_1a732, %dec_label_pc_1a712 ]
  ret i32 %v3_1a73f

; uselistorder directives
  uselistorder i32 %v3_1a72c, { 1, 0 }
}

define i32 @function_1a746(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a746:
  %v0_1a747 = load i32, i32* @eax, align 8
  ret i32 %v0_1a747
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a748:
  %v10_1a76b = icmp eq i32 %arg2, 0
  %v1_1a76f = icmp eq i1 %v10_1a76b, false
  br i1 %v1_1a76f, label %bb, label %dec_label_pc_1a771

bb:                                               ; preds = %dec_label_pc_1a748
  %v5_1a76f = call i32 @function_1a795(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1a771

dec_label_pc_1a771:                               ; preds = %bb, %dec_label_pc_1a748
  %v3_1a789 = phi i32 [ %v5_1a76f, %bb ], [ 0, %dec_label_pc_1a748 ]
  ret i32 %v3_1a789
}

define i32 @function_1a795(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a795:
  %v0_1a795 = load i32, i32* @ebp, align 4
  %v1_1a795 = add i32 %v0_1a795, -28
  %v2_1a795 = inttoptr i32 %v1_1a795 to i32*
  %v3_1a795 = load i32, i32* %v2_1a795, align 4
  %v1_1a798 = add i32 %v3_1a795, 124
  %v2_1a798 = inttoptr i32 %v1_1a798 to i32*
  %v3_1a798 = load i32, i32* %v2_1a798, align 4
  %v1_1a79e = add i32 %v3_1a795, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_1a79e = inttoptr i32 %v1_1a79e to i32*
  %v3_1a79e = load i32, i32* %v2_1a79e, align 4
  %tmp5 = mul i32 %v3_1a79e, 12
  %v2_1a7ad = add i32 %tmp5, -12
  %v2_1a7b0 = add i32 %v2_1a7ad, %v3_1a798
  %v2_1a7b2 = add i32 %v0_1a795, -20
  %v3_1a7b2 = inttoptr i32 %v2_1a7b2 to i32*
  store i32 %v2_1a7b0, i32* %v3_1a7b2, align 4
  %v0_1a7b5 = load i32, i32* @ebp, align 4
  %v1_1a7b5 = add i32 %v0_1a7b5, -32
  %v2_1a7b5 = inttoptr i32 %v1_1a7b5 to i32*
  %v3_1a7b5 = load i32, i32* %v2_1a7b5, align 4
  %v2_1a7c3 = add i32 %v0_1a7b5, -20
  %v3_1a7c3 = inttoptr i32 %v2_1a7c3 to i32*
  %v4_1a7c3 = load i32, i32* %v3_1a7c3, align 4
  %tmp6 = mul i32 %v3_1a7b5, -12
  %v5_1a7c3 = add i32 %v4_1a7c3, %tmp6
  %v2_1a7c6 = add i32 %v0_1a7b5, -16
  %v3_1a7c6 = inttoptr i32 %v2_1a7c6 to i32*
  store i32 %v5_1a7c3, i32* %v3_1a7c6, align 4
  br label %dec_label_pc_1a7e1

dec_label_pc_1a7cb:                               ; preds = %dec_label_pc_1a7e1
  %v3_1a7cb = load i32, i32* %v2_1a7e1, align 4
  %v1_1a7d2 = add i32 %v0_1a7e1, -28
  %v2_1a7d2 = inttoptr i32 %v1_1a7d2 to i32*
  %v3_1a7d2 = load i32, i32* %v2_1a7d2, align 4
  %v2_1a7d8 = call i32 @unknown_384f0(i32 %v3_1a7d2, i32 %v3_1a7cb)
  %v0_1a7dd = load i32, i32* @ebp, align 4
  %v1_1a7dd = add i32 %v0_1a7dd, -20
  %v2_1a7dd = inttoptr i32 %v1_1a7dd to i32*
  %v3_1a7dd = load i32, i32* %v2_1a7dd, align 4
  %v4_1a7dd = add i32 %v3_1a7dd, -12
  store i32 %v4_1a7dd, i32* %v2_1a7dd, align 4
  br label %dec_label_pc_1a7e1

dec_label_pc_1a7e1:                               ; preds = %dec_label_pc_1a7cb, %dec_label_pc_1a795
  %v0_1a7e1 = load i32, i32* @ebp, align 4
  %v1_1a7e1 = add i32 %v0_1a7e1, -20
  %v2_1a7e1 = inttoptr i32 %v1_1a7e1 to i32*
  %v3_1a7e1 = load i32, i32* %v2_1a7e1, align 4
  %v2_1a7e4 = add i32 %v0_1a7e1, -16
  %v3_1a7e4 = inttoptr i32 %v2_1a7e4 to i32*
  %v4_1a7e4 = load i32, i32* %v3_1a7e4, align 4
  %tmp4 = icmp ule i32 %v3_1a7e1, %v4_1a7e4
  %v3_1a7e7 = icmp ne i1 %tmp4, true
  %v5_1a7ea = icmp eq i1 %v3_1a7e7, false
  %v1_1a7ec = icmp eq i1 %v5_1a7ea, false
  br i1 %v1_1a7ec, label %dec_label_pc_1a7cb, label %dec_label_pc_1a7ee

dec_label_pc_1a7ee:                               ; preds = %dec_label_pc_1a7e1
  %v1_1a7ee = add i32 %v0_1a7e1, -12
  %v2_1a7ee = inttoptr i32 %v1_1a7ee to i32*
  %v3_1a7ee = load i32, i32* %v2_1a7ee, align 4
  %v3_1a7f1 = xor i32 %v3_1a7ee, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1a7f1 = icmp eq i32 %v3_1a7f1, 0
  store i32 %v3_1a7f1, i32* @eax, align 8
  br i1 %v4_1a7f1, label %bb, label %dec_label_pc_1a7fa

bb:                                               ; preds = %dec_label_pc_1a7ee
  %v1_1a7f8 = call i32 @function_1a7ff()
  br label %dec_label_pc_1a7fa

dec_label_pc_1a7fa:                               ; preds = %bb, %dec_label_pc_1a7ee
  %v2_1a7f8 = phi i32 [ %v1_1a7f8, %bb ], [ %v3_1a7f1, %dec_label_pc_1a7ee ]
  ret i32 %v2_1a7f8

; uselistorder directives
  uselistorder i32* %v2_1a7e1, { 1, 0 }
  uselistorder i32 %v0_1a7e1, { 0, 2, 3, 1 }
}

define i32 @function_1a7ff() local_unnamed_addr {
dec_label_pc_1a7ff:
  %v0_1a800 = load i32, i32* @eax, align 8
  ret i32 %v0_1a800
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a802:
  store i32 0, i32* @eax, align 8
  %tmp106 = icmp ult i32 %arg3, 11
  br i1 %tmp106, label %bb, label %dec_label_pc_1a82b

bb:                                               ; preds = %dec_label_pc_1a802
  %v6_1a829 = call i32 @function_1a84e(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1a82b

dec_label_pc_1a82b:                               ; preds = %bb, %dec_label_pc_1a802
  %v1_1a831 = call i32 @unknown_385f4(i32 %arg1)
  ret i32 %v1_1a831

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1a83c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a83c:
  %v0_1a83c = load i32, i32* @ebx, align 8
  %v1_1a83c = add i32 %v0_1a83c, 1418322005
  %v2_1a83c = inttoptr i32 %v1_1a83c to i8*
  %v3_1a83c = load i8, i8* %v2_1a83c, align 1
  %v4_1a83c = load i32, i32* @ecx, align 4
  %v5_1a83c = trunc i32 %v4_1a83c to i8
  %v6_1a83c = or i8 %v5_1a83c, %v3_1a83c
  store i8 %v6_1a83c, i8* %v2_1a83c, align 1
  %v0_1a842 = load i32, i32* @eax, align 8
  %v11_1a842 = and i32 %v0_1a842, -252
  %v1_1a84c = call i32 @function_1a84f(i32 %v11_1a842)
  ret i32 %v1_1a84c
}

define i32 @function_1a84e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a84e:
  %v0_1a84e = load i32, i32* @eax, align 8
  ret i32 %v0_1a84e
}

define i32 @function_1a84f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a84f:
  %v0_1a84f = load i32, i32* @ebp, align 4
  %v1_1a84f = add i32 %v0_1a84f, -12
  %v2_1a84f = inttoptr i32 %v1_1a84f to i32*
  %v3_1a84f = load i32, i32* %v2_1a84f, align 4
  %v3_1a852 = xor i32 %v3_1a84f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1a852 = icmp eq i32 %v3_1a852, 0
  store i32 %v3_1a852, i32* @eax, align 8
  br i1 %v4_1a852, label %bb, label %dec_label_pc_1a85b

bb:                                               ; preds = %dec_label_pc_1a84f
  %v1_1a859 = call i32 @function_1a860()
  br label %dec_label_pc_1a85b

dec_label_pc_1a85b:                               ; preds = %bb, %dec_label_pc_1a84f
  %v2_1a859 = phi i32 [ %v1_1a859, %bb ], [ %v3_1a852, %dec_label_pc_1a84f ]
  ret i32 %v2_1a859
}

define i32 @function_1a860() local_unnamed_addr {
dec_label_pc_1a860:
  %v0_1a861 = load i32, i32* @eax, align 8
  ret i32 %v0_1a861
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1a862:
  %v2_1a87c = load i32, i32* %arg1, align 4
  %v1_1a87e = icmp eq i32 %v2_1a87c, 0
  %v1_1a880 = icmp eq i1 %v1_1a87e, false
  br i1 %v1_1a880, label %bb, label %dec_label_pc_1a882

bb:                                               ; preds = %dec_label_pc_1a862
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1a880 = call i32 @function_1a8a6(i32 %tmp105)
  br label %dec_label_pc_1a882

dec_label_pc_1a882:                               ; preds = %bb, %dec_label_pc_1a862
  %v3_1a89a = phi i32 [ %v3_1a880, %bb ], [ %v2_1a87c, %dec_label_pc_1a862 ]
  ret i32 %v3_1a89a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1a8a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8a6:
  %v0_1a8a6 = load i32, i32* @ebp, align 4
  %v1_1a8a6 = add i32 %v0_1a8a6, -28
  %v2_1a8a6 = inttoptr i32 %v1_1a8a6 to i32*
  %v3_1a8a6 = load i32, i32* %v2_1a8a6, align 4
  %v1_1a8a9 = inttoptr i32 %v3_1a8a6 to i32*
  %v2_1a8a9 = load i32, i32* %v1_1a8a9, align 4
  ret i32 %v2_1a8a9
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8be:
  %v1_1a8d8 = add i32 %arg1, 4
  store i32 %v1_1a8d8, i32* @eax, align 8
  %v1_1a8de = call i32 @function_1ca9e(i32 %v1_1a8d8)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueISsEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a8f6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_1a916 = inttoptr i32 %arg2 to i32*
  %v2_1a916 = load i32, i32* %v1_1a916, align 4
  store i32 %v2_1a916, i32* %arg1, align 4
  %v1_1a920 = add i32 %arg2, 4
  %v1_1a926 = add i32 %tmp103, 4
  store i32 %v1_1a926, i32* @eax, align 8
  %v2_1a930 = call i32 @function_1cb16(i32 %v1_1a926, i32 %v1_1a920)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a941

bb:                                               ; preds = %dec_label_pc_1a8f6
  %v1_1a93f = call i32 @function_1a946()
  br label %dec_label_pc_1a941

dec_label_pc_1a941:                               ; preds = %bb, %dec_label_pc_1a8f6
  %v2_1a93f = phi i32 [ %v1_1a93f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a8f6 ]
  ret i32 %v2_1a93f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1a946() local_unnamed_addr {
dec_label_pc_1a946:
  %v0_1a947 = load i32, i32* @eax, align 8
  ret i32 %v0_1a947
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueISsEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a948:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1a979

bb:                                               ; preds = %dec_label_pc_1a948
  %v1_1a962 = add i32 %arg1, 4
  %v2_1a977 = call i32 @function_1a97e(i32 %v1_1a962)
  br label %dec_label_pc_1a979

dec_label_pc_1a979:                               ; preds = %bb, %dec_label_pc_1a948
  %v3_1a977 = phi i32 [ %v2_1a977, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1a948 ]
  ret i32 %v3_1a977
}

define i32 @function_1a97e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a97e:
  %v0_1a97f = load i32, i32* @eax, align 8
  ret i32 %v0_1a97f
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a980:
  ret i32 0
}

define i32 @function_1a9b0() local_unnamed_addr {
dec_label_pc_1a9b0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a9b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a9b0 = add i32 %v0_1a9b0, -599422013
  %v2_1a9b0 = inttoptr i32 %v1_1a9b0 to i32*
  %v3_1a9b0 = load i32, i32* %v2_1a9b0, align 4
  %v4_1a9b0 = add i32 %v3_1a9b0, -1
  store i32 %v4_1a9b0, i32* %v2_1a9b0, align 4
  %v0_1a9b6 = load i32, i32* %eax.global-to-local, align 8
  %v0_1a9ba = load i32, i32* %ebx.global-to-local, align 8
  %v2_1a9bd = call i32 @unknown_3880c(i32 %v0_1a9ba, i32 %v0_1a9b6)
  store i32 %v2_1a9bd, i32* %eax.global-to-local, align 8
  %v0_1a9c2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a9c2 = add i32 %v0_1a9c2, -28
  %v2_1a9c2 = inttoptr i32 %v1_1a9c2 to i32*
  %v3_1a9c2 = load i32, i32* %v2_1a9c2, align 4
  store i32 %v3_1a9c2, i32* %eax.global-to-local, align 8
  %v0_1a9c5 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1a9cc = call i32 @unknown_38a12(i32 %v3_1a9c2, i32 %v0_1a9c5)
  store i32 %v2_1a9cc, i32* %eax.global-to-local, align 8
  %v0_1a9d1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a9d1 = add i32 %v0_1a9d1, -32
  %v2_1a9d1 = inttoptr i32 %v1_1a9d1 to i32*
  %v3_1a9d1 = load i32, i32* %v2_1a9d1, align 4
  store i32 %v3_1a9d1, i32* %eax.global-to-local, align 8
  %v1_1a9d7 = add i32 %v0_1a9d1, -28
  %v2_1a9d7 = inttoptr i32 %v1_1a9d7 to i32*
  %v3_1a9d7 = load i32, i32* %v2_1a9d7, align 4
  %v1_1a9da = add i32 %v3_1a9d7, 8
  store i32 %v1_1a9da, i32* %eax.global-to-local, align 8
  %v1_1a9e9 = add i32 %v0_1a9d1, -12
  %v2_1a9e9 = inttoptr i32 %v1_1a9e9 to i32*
  %v3_1a9e9 = load i32, i32* %v2_1a9e9, align 4
  %v3_1a9ec = xor i32 %v3_1a9e9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1a9ec = icmp eq i32 %v3_1a9ec, 0
  store i32 %v3_1a9ec, i32* @eax, align 8
  br i1 %v4_1a9ec, label %bb, label %dec_label_pc_1a9f5

bb:                                               ; preds = %dec_label_pc_1a9b0
  %v1_1a9d4 = add i32 %v3_1a9d1, 8
  %v3_1a9f3 = call i32 @function_1aa10(i32 %v1_1a9da, i32 %v1_1a9d4)
  store i32 %v3_1a9f3, i32* @eax, align 8
  br label %dec_label_pc_1a9f5

dec_label_pc_1a9f5:                               ; preds = %bb, %dec_label_pc_1a9b0
  %v0_1a9f5 = call i32 @function_1aa0b()
  store i32 %v0_1a9f5, i32* %eax.global-to-local, align 8
  ret i32 %v0_1a9f5
}

define i32 @function_1aa0b() local_unnamed_addr {
dec_label_pc_1aa0b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1aa10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa10:
  %v0_1aa16 = load i32, i32* @eax, align 8
  ret i32 %v0_1aa16
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa18:
  %v10_1aa35 = icmp eq i32 %arg2, 0
  br i1 %v10_1aa35, label %bb, label %dec_label_pc_1aa3b

bb:                                               ; preds = %dec_label_pc_1aa18
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v3_1aa39 = call i32 @function_1aa69(i32 0, i32 %tmp107)
  br label %dec_label_pc_1aa3b

dec_label_pc_1aa3b:                               ; preds = %bb, %dec_label_pc_1aa18
  %v2_1aa3e = load i32, i32* %arg1, align 4
  %v15_1aa40 = icmp eq i32 %v2_1aa3e, %arg2
  %v1_1aa43 = icmp eq i1 %v15_1aa40, false
  br i1 %v1_1aa43, label %bb111, label %dec_label_pc_1aa45

bb111:                                            ; preds = %dec_label_pc_1aa3b
  %v4_1aa43 = call i32 @function_1aa69(i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_1aa45

dec_label_pc_1aa45:                               ; preds = %bb111, %dec_label_pc_1aa3b
  %v3_1aa5d = phi i32 [ %v4_1aa43, %bb111 ], [ %v2_1aa3e, %dec_label_pc_1aa3b ]
  ret i32 %v3_1aa5d

; uselistorder directives
  uselistorder i32 %v2_1aa3e, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1aa69, { 1, 0 }
}

define i32 @function_1aa69(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa69:
  %v0_1aa69 = load i32, i32* @ebp, align 4
  %v1_1aa69 = add i32 %v0_1aa69, -32
  %v2_1aa69 = inttoptr i32 %v1_1aa69 to i32*
  %v3_1aa69 = load i32, i32* %v2_1aa69, align 4
  %v1_1aa70 = add i32 %v0_1aa69, -20
  %v2_1aa76 = call i32 @unknown_38b10(i32 %v1_1aa70, i32 %v3_1aa69)
  %v0_1aa7b = load i32, i32* @ebp, align 4
  %v1_1aa82 = add i32 %v0_1aa7b, -20
  store i32 %v1_1aa82, i32* @eax, align 8
  %v1_1aa88 = call i32 @function_30f40(i32 %v1_1aa82)
  %v0_1aa8d = load i32, i32* @ebp, align 4
  %v1_1aa98 = add i32 %v0_1aa8d, -12
  %v2_1aa98 = inttoptr i32 %v1_1aa98 to i32*
  %v3_1aa98 = load i32, i32* %v2_1aa98, align 4
  %v3_1aa9b = xor i32 %v3_1aa98, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1aa9b = icmp eq i32 %v3_1aa9b, 0
  store i32 %v3_1aa9b, i32* @eax, align 8
  br i1 %v4_1aa9b, label %bb, label %dec_label_pc_1aaa4

bb:                                               ; preds = %dec_label_pc_1aa69
  %v1_1aa8d = add i32 %v0_1aa8d, -20
  %v2_1aaa2 = call i32 @function_1aaa9(i32 %v1_1aa8d)
  br label %dec_label_pc_1aaa4

dec_label_pc_1aaa4:                               ; preds = %bb, %dec_label_pc_1aa69
  %v3_1aaa2 = phi i32 [ %v2_1aaa2, %bb ], [ %v3_1aa9b, %dec_label_pc_1aa69 ]
  ret i32 %v3_1aaa2

; uselistorder directives
  uselistorder i32 %v0_1aa8d, { 1, 0 }
}

define i32 @function_1aaa9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aaa9:
  %v0_1aaaa = load i32, i32* @eax, align 8
  ret i32 %v0_1aaaa
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aaac:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1aadd

bb:                                               ; preds = %dec_label_pc_1aaac
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1aadb = call i32 @function_1aae2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1aadd

dec_label_pc_1aadd:                               ; preds = %bb, %dec_label_pc_1aaac
  %v4_1aadb = phi i32 [ %v3_1aadb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1aaac ]
  ret i32 %v4_1aadb

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1aae2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aae2:
  %v0_1aae3 = load i32, i32* @eax, align 8
  ret i32 %v0_1aae3
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aae4:
  %v1_1aafe = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_1aafe = inttoptr i32 %v1_1aafe to i32*
  %v3_1aafe = load i32, i32* %v2_1aafe, align 4
  %v2_1ab0e = call i32 @unknown_38c42(i32 %arg1, i32 %v3_1aafe)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZSt13back_inserterIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEESt20back_insert_iteratorIT_ERSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ab26:
  %v2_1ab50 = call i32 @unknown_38d40(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ab64

bb:                                               ; preds = %dec_label_pc_1ab26
  %v1_1ab62 = call i32 @function_1ab69()
  br label %dec_label_pc_1ab64

dec_label_pc_1ab64:                               ; preds = %bb, %dec_label_pc_1ab26
  %v2_1ab62 = phi i32 [ %v1_1ab62, %bb ], [ %arg1, %dec_label_pc_1ab26 ]
  ret i32 %v2_1ab62

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ab69() local_unnamed_addr {
dec_label_pc_1ab69:
  %v0_1ab6a = load i32, i32* @eax, align 8
  ret i32 %v0_1ab6a
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_SQ_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISR_EEEEEEvT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ab6e:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-29 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v2_1ab8c = ptrtoint i32* %stack_var_-44 to i32
  %v1_1ab9a = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1ab9a, i32* %eax.global-to-local, align 8
  %v2_1aba5 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1abaf = call i32 @function_2b3d8(i32 %v2_1aba5, i32 %v1_1ab9a)
  %v16_1abb4 = ptrtoint i32* %stack_var_-80 to i32
  %v3_1abb7 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1abb7, i32* %eax.global-to-local, align 8
  store i32 %v3_1abb7, i32* %stack_var_-44, align 4
  %v2_1ac79 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1abcd = ptrtoint i32* %stack_var_-28 to i32
  %v2_1abd4 = ptrtoint i32* %stack_var_-30 to i32
  %v2_1abf5 = ptrtoint i32* %stack_var_-29 to i32
  %v2_1ac12 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1ac1d = ptrtoint i32* %stack_var_-52 to i32
  %v1_1ac07 = add i32 %arg1, 4
  %v2_1ac07 = inttoptr i32 %v1_1ac07 to i8*
  br label %dec_label_pc_1ac6b

dec_label_pc_1abc2:                               ; preds = %dec_label_pc_1ac6b
  store i32 %v2_1ab8c, i32* %eax.global-to-local, align 8
  %v1_1abc5 = load i32, i32* @esp, align 4
  %v2_1abc5 = inttoptr i32 %v1_1abc5 to i32*
  store i32 %v2_1ab8c, i32* %v2_1abc5, align 4
  %v0_1abc8 = call i32 @function_2b506()
  store i32 %v2_1abcd, i32* @edx, align 8
  %v1_1abd0 = load i32, i32* @esp, align 4
  %v2_1abd0 = add i32 %v1_1abd0, 8
  %v3_1abd0 = inttoptr i32 %v2_1abd0 to i32*
  store i32 %v0_1abc8, i32* %v3_1abd0, align 4
  %v1_1abd7 = load i32, i32* @esp, align 4
  %v2_1abd7 = add i32 %v1_1abd7, 4
  %v3_1abd7 = inttoptr i32 %v2_1abd7 to i32*
  store i32 %v2_1abd4, i32* %v3_1abd7, align 4
  %v1_1abdb = load i32, i32* @esp, align 4
  %v2_1abdb = inttoptr i32 %v1_1abdb to i32*
  store i32 %v2_1abcd, i32* %v2_1abdb, align 4
  %v0_1abe3 = load i32, i32* @esp, align 4
  %v1_1abe3 = add i32 %v0_1abe3, -4
  store i32 %v2_1ab8c, i32* %eax.global-to-local, align 8
  %v2_1abe9 = inttoptr i32 %v1_1abe3 to i32*
  store i32 %v2_1ab8c, i32* %v2_1abe9, align 4
  %v0_1abec = call i32 @function_2b506()
  %v1_1abf1 = load i32, i32* @esp, align 4
  %v2_1abf1 = add i32 %v1_1abf1, 4
  %v3_1abf1 = inttoptr i32 %v2_1abf1 to i32*
  store i32 %v0_1abec, i32* %v3_1abf1, align 4
  store i32 %v2_1abf5, i32* @eax, align 8
  %v1_1abf8 = load i32, i32* @esp, align 4
  %v2_1abf8 = inttoptr i32 %v1_1abf8 to i32*
  store i32 %v2_1abf5, i32* %v2_1abf8, align 4
  %v0_1abfb = call i32 @function_2b5f0()
  store i32 %v0_1abfb, i32* %eax.global-to-local, align 8
  %v4_1ac00 = trunc i32 %v0_1abfb to i8
  %v5_1ac00 = icmp eq i8 %v4_1ac00, 0
  br i1 %v5_1ac00, label %dec_label_pc_1ac12, label %dec_label_pc_1ac04

dec_label_pc_1ac04:                               ; preds = %dec_label_pc_1abc2
  store i32 %arg1, i32* %eax.global-to-local, align 8
  store i8 0, i8* %v2_1ac07, align 1
  br label %dec_label_pc_1ac4e

dec_label_pc_1ac12:                               ; preds = %dec_label_pc_1abc2
  store i32 %v2_1ac12, i32* %eax.global-to-local, align 8
  %v0_1ac15 = load i32, i32* @esp, align 4
  %v1_1ac15 = add i32 %v0_1ac15, 8
  %v2_1ac15 = inttoptr i32 %v1_1ac15 to i32*
  store i32 0, i32* %v2_1ac15, align 4
  %v1_1ac20 = load i32, i32* @esp, align 4
  %v2_1ac20 = add i32 %v1_1ac20, 4
  %v3_1ac20 = inttoptr i32 %v2_1ac20 to i32*
  store i32 %v2_1ac1d, i32* %v3_1ac20, align 4
  %v1_1ac24 = load i32, i32* @esp, align 4
  %v2_1ac24 = inttoptr i32 %v1_1ac24 to i32*
  store i32 %v2_1ac12, i32* %v2_1ac24, align 4
  %v0_1ac27 = call i32 @unknown_38dcc()
  %v0_1ac2c = load i32, i32* @esp, align 4
  %v1_1ac2c = add i32 %v0_1ac2c, -4
  store i32 %v2_1ac12, i32* %eax.global-to-local, align 8
  %v2_1ac32 = inttoptr i32 %v1_1ac2c to i32*
  store i32 %v2_1ac12, i32* %v2_1ac32, align 4
  %v0_1ac35 = call i32 @unknown_38e12()
  store i32 %v0_1ac35, i32* %eax.global-to-local, align 8
  store i32 %v2_1abcd, i32* @edx, align 8
  %v1_1ac3d = load i32, i32* @esp, align 4
  %v2_1ac3d = add i32 %v1_1ac3d, 4
  %v3_1ac3d = inttoptr i32 %v2_1ac3d to i32*
  store i32 %v2_1abcd, i32* %v3_1ac3d, align 4
  %v0_1ac41 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ac41 = load i32, i32* @esp, align 4
  %v2_1ac41 = inttoptr i32 %v1_1ac41 to i32*
  store i32 %v0_1ac41, i32* %v2_1ac41, align 4
  %v0_1ac44 = call i32 @unknown_38e40()
  store i32 %v0_1ac44, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1ac4e

dec_label_pc_1ac4e:                               ; preds = %dec_label_pc_1ac12, %dec_label_pc_1ac04
  %storemerge = phi i32 [ 1, %dec_label_pc_1ac12 ], [ 0, %dec_label_pc_1ac04 ]
  store i32 %storemerge, i32* @ebx, align 8
  store i32 %v2_1abcd, i32* @eax, align 8
  %v1_1ac51 = load i32, i32* @esp, align 4
  %v2_1ac51 = inttoptr i32 %v1_1ac51 to i32*
  store i32 %v2_1abcd, i32* %v2_1ac51, align 4
  %v0_1ac54 = call i32 @function_2b58c()
  store i32 %v0_1ac54, i32* %eax.global-to-local, align 8
  %v0_1ac59 = load i32, i32* @ebx, align 8
  %v10_1ac59 = icmp eq i32 %v0_1ac59, 1
  br i1 %v10_1ac59, label %dec_label_pc_1ac60, label %dec_label_pc_1ac5e

dec_label_pc_1ac5e:                               ; preds = %dec_label_pc_1ac4e
  %v0_1ac5e = call i32 @function_1acbe()
  store i32 %v0_1ac5e, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ac5e

dec_label_pc_1ac60:                               ; preds = %dec_label_pc_1ac4e
  store i32 %v2_1ab8c, i32* @eax, align 8
  %v1_1ac63 = load i32, i32* @esp, align 4
  %v2_1ac63 = inttoptr i32 %v1_1ac63 to i32*
  store i32 %v2_1ab8c, i32* %v2_1ac63, align 4
  %v0_1ac66 = call i32 @function_2b4cc()
  store i32 %v0_1ac66, i32* %eax.global-to-local, align 8
  %v1_1ac71.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_1ac6b

dec_label_pc_1ac6b:                               ; preds = %dec_label_pc_1ac60, %dec_label_pc_1ab6e
  %v1_1ac71 = phi i32 [ %v1_1ac71.pre, %dec_label_pc_1ac60 ], [ %v16_1abb4, %dec_label_pc_1ab6e ]
  store i32 %v1_1ab9a, i32* @eax, align 8
  %v2_1ac71 = inttoptr i32 %v1_1ac71 to i32*
  store i32 %v1_1ab9a, i32* %v2_1ac71, align 4
  %v0_1ac7c = load i32, i32* @eax, align 8
  %v1_1ac7c = load i32, i32* @esp, align 4
  %v2_1ac7c = add i32 %v1_1ac7c, 4
  %v3_1ac7c = inttoptr i32 %v2_1ac7c to i32*
  store i32 %v0_1ac7c, i32* %v3_1ac7c, align 4
  %v1_1ac80 = load i32, i32* @esp, align 4
  %v2_1ac80 = inttoptr i32 %v1_1ac80 to i32*
  store i32 %v2_1ac79, i32* %v2_1ac80, align 4
  %v0_1ac83 = call i32 @function_2b428()
  %v0_1ac88 = load i32, i32* @esp, align 4
  %v3_1ac8e = inttoptr i32 %v0_1ac88 to i32*
  store i32 %v2_1ac79, i32* %v3_1ac8e, align 4
  store i32 %v2_1ab8c, i32* %eax.global-to-local, align 8
  %v1_1ac95 = load i32, i32* @esp, align 4
  %v2_1ac95 = inttoptr i32 %v1_1ac95 to i32*
  store i32 %v2_1ab8c, i32* %v2_1ac95, align 4
  %v0_1ac98 = call i32 @function_2b478()
  store i32 %v0_1ac98, i32* %eax.global-to-local, align 8
  %v4_1ac9d = trunc i32 %v0_1ac98 to i8
  %v5_1ac9d = icmp eq i8 %v4_1ac9d, 0
  %v1_1ac9f = icmp eq i1 %v5_1ac9d, false
  br i1 %v1_1ac9f, label %dec_label_pc_1abc2, label %dec_label_pc_1aca5

dec_label_pc_1aca5:                               ; preds = %dec_label_pc_1ac6b
  %v0_1aca5 = call i32 @function_1acbe()
  store i32 %v0_1aca5, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aca5

; uselistorder directives
  uselistorder i32 %v1_1ab9a, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1ab8c, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16 }
  uselistorder i32 ()* @function_2b506, { 1, 0 }
}

define i32 @function_1aca8() local_unnamed_addr {
dec_label_pc_1aca8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aca8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aca8
}

define i32 @function_1acbe() local_unnamed_addr {
dec_label_pc_1acbe:
  %v0_1acbe = load i32, i32* @ebp, align 4
  %v1_1acbe = add i32 %v0_1acbe, -12
  %v2_1acbe = inttoptr i32 %v1_1acbe to i32*
  %v3_1acbe = load i32, i32* %v2_1acbe, align 4
  %v3_1acc1 = xor i32 %v3_1acbe, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1acc1 = icmp eq i32 %v3_1acc1, 0
  store i32 %v3_1acc1, i32* @eax, align 8
  br i1 %v4_1acc1, label %bb, label %dec_label_pc_1acca

bb:                                               ; preds = %dec_label_pc_1acbe
  %v1_1acc8 = call i32 @function_1accf()
  br label %dec_label_pc_1acca

dec_label_pc_1acca:                               ; preds = %bb, %dec_label_pc_1acbe
  %v2_1acc8 = phi i32 [ %v1_1acc8, %bb ], [ %v3_1acc1, %dec_label_pc_1acbe ]
  ret i32 %v2_1acc8
}

define i32 @function_1accf() local_unnamed_addr {
dec_label_pc_1accf:
  %v0_1acd3 = load i32, i32* @eax, align 8
  ret i32 %v0_1acd3
}

define i32 @_ZN5boostneINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiSZ_SsS10_S12_iEENS_6detail23enable_if_interoperableIT_T4_NS_3mpl6apply2INS13_12always_bool2ES15_S16_E4typeEE4typeERKNS_15iterator_facadeIS15_T0_T1_T2_T3_EERKNS1E_IS16_T5_T6_T7_T8_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1acd4:
  %edx.global-to-local = alloca i32, align 4
  %v0_1acf1 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1acf1, 16777216
  %v3_1ad02 = sdiv i32 %sext, 16777216
  %v4_1ad02 = call i32 @unknown_38fed(i32 %arg1, i32 %arg2, i32 %v3_1ad02)
  %v1_1ad07 = xor i32 %v4_1ad02, 1
  store i32 %v1_1ad07, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ad16

bb:                                               ; preds = %dec_label_pc_1acd4
  %v1_1ad14 = call i32 @function_1ad1b()
  br label %dec_label_pc_1ad16

dec_label_pc_1ad16:                               ; preds = %bb, %dec_label_pc_1acd4
  %v2_1ad14 = phi i32 [ %v1_1ad14, %bb ], [ %v1_1ad07, %dec_label_pc_1acd4 ]
  ret i32 %v2_1ad14
}

define i32 @function_1ad1b() local_unnamed_addr {
dec_label_pc_1ad1b:
  %v0_1ad1c = load i32, i32* @eax, align 8
  ret i32 %v0_1ad1c
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad1e:
  %v1_1ad3b = call i32 @unknown_39080(i32 %arg1)
  %v1_1ad43 = call i32 @unknown_390ad(i32 %v1_1ad3b)
  store i32 %v1_1ad43, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ad54

bb:                                               ; preds = %dec_label_pc_1ad1e
  %v1_1ad52 = call i32 @function_1ad59()
  br label %dec_label_pc_1ad54

dec_label_pc_1ad54:                               ; preds = %bb, %dec_label_pc_1ad1e
  %v2_1ad52 = phi i32 [ %v1_1ad52, %bb ], [ %v1_1ad43, %dec_label_pc_1ad1e ]
  ret i32 %v2_1ad52
}

define i32 @function_1ad59() local_unnamed_addr {
dec_label_pc_1ad59:
  %v0_1ad5a = load i32, i32* @eax, align 8
  ret i32 %v0_1ad5a
}

define i32 @_ZN5boost8optionalISsEaSERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ad5c:
  %v2_1ad86 = call i32 @unknown_39120(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ad9a

bb:                                               ; preds = %dec_label_pc_1ad5c
  %v1_1ad98 = call i32 @function_1ad9f()
  br label %dec_label_pc_1ad9a

dec_label_pc_1ad9a:                               ; preds = %bb, %dec_label_pc_1ad5c
  %v2_1ad98 = phi i32 [ %v1_1ad98, %bb ], [ %arg1, %dec_label_pc_1ad5c ]
  ret i32 %v2_1ad98

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ad9f() local_unnamed_addr {
dec_label_pc_1ad9f:
  %v0_1ada0 = load i32, i32* @eax, align 8
  ret i32 %v0_1ada0
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ada2:
  %v1_1adbf = call i32 @unknown_391d4(i32 %arg1)
  %v1_1adc7 = call i32 @unknown_39201(i32 %v1_1adbf)
  %v1_1add2 = call i32 @unknown_391d4(i32 %arg1)
  store i32 %v1_1add2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ade3

bb:                                               ; preds = %dec_label_pc_1ada2
  %v1_1ade1 = call i32 @function_1ade8()
  br label %dec_label_pc_1ade3

dec_label_pc_1ade3:                               ; preds = %bb, %dec_label_pc_1ada2
  %v2_1ade1 = phi i32 [ %v1_1ade1, %bb ], [ %v1_1add2, %dec_label_pc_1ada2 ]
  ret i32 %v2_1ade1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_391d4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ade8() local_unnamed_addr {
dec_label_pc_1ade8:
  %v0_1ade9 = load i32, i32* @eax, align 8
  ret i32 %v0_1ade9
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12get_ptr_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adea:
  %v1_1ae08 = call i32 @function_31b92(i32 %arg1)
  %v0_1ae0d = load i32, i32* @ebx, align 8
  %sext = mul i32 %v0_1ae0d, 16777216
  %v3_1ae1b = sdiv i32 %sext, 16777216
  %v4_1ae1b = call i32 @unknown_3927e(i32 %arg1, i32 %v1_1ae08, i32 %v3_1ae1b)
  store i32 %v4_1ae1b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ae2c

bb:                                               ; preds = %dec_label_pc_1adea
  %v1_1ae2a = call i32 @function_1ae31()
  br label %dec_label_pc_1ae2c

dec_label_pc_1ae2c:                               ; preds = %bb, %dec_label_pc_1adea
  %v2_1ae2a = phi i32 [ %v1_1ae2a, %bb ], [ %v4_1ae1b, %dec_label_pc_1adea ]
  ret i32 %v2_1ae2a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ae31() local_unnamed_addr {
dec_label_pc_1ae31:
  %v0_1ae36 = load i32, i32* @eax, align 8
  ret i32 %v0_1ae36
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ae37:
  %v1_1ae51 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1ae51, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ae60

bb:                                               ; preds = %dec_label_pc_1ae37
  %v2_1ae5e = call i32 @function_1ae65(i32 %arg1)
  br label %dec_label_pc_1ae60

dec_label_pc_1ae60:                               ; preds = %bb, %dec_label_pc_1ae37
  %v3_1ae5e = phi i32 [ %v2_1ae5e, %bb ], [ %v1_1ae51, %dec_label_pc_1ae37 ]
  ret i32 %v3_1ae5e
}

define i32 @function_1ae65(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ae65:
  %v0_1ae66 = load i32, i32* @eax, align 8
  ret i32 %v0_1ae66
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ae68:
  %stack_var_-17 = alloca i32, align 4
  %v1_1ae8c = call i32 @unknown_39336(i32 %arg1)
  %v1_1ae97 = add i32 %v1_1ae8c, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1ae97, i32* @eax, align 8
  %v1_1ae9d = call i32 @function_322c9(i32 %v1_1ae97)
  %v2_1aea4 = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_1aea4, i32* @eax, align 8
  %v2_1aeb1 = call i32 @function_32244(i32 %v2_1aea4, i32 %arg1)
  %v3_1aeca = call i32 @unknown_393f4(i32 %v2_1aea4, i32 %v1_1ae9d, i32 %arg2)
  store i32 %v2_1aea4, i32* @eax, align 8
  %v1_1aed5 = call i32 @function_32294(i32 %v2_1aea4)
  store i32 %v1_1ae8c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1aee9

bb:                                               ; preds = %dec_label_pc_1ae68
  %v1_1aee7 = call i32 @function_1af2f()
  store i32 %v1_1aee7, i32* @eax, align 8
  br label %dec_label_pc_1aee9

dec_label_pc_1aee9:                               ; preds = %bb, %dec_label_pc_1ae68
  %v0_1aee9 = call i32 @function_1af2a()
  ret i32 %v0_1aee9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1aeec() local_unnamed_addr {
dec_label_pc_1aeec:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aeec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1aeec
}

define i32 @function_1af1a() local_unnamed_addr {
dec_label_pc_1af1a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1af1a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1af1a
}

define i32 @function_1af2a() local_unnamed_addr {
dec_label_pc_1af2a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1af2f() local_unnamed_addr {
dec_label_pc_1af2f:
  %v0_1af33 = load i32, i32* @eax, align 8
  ret i32 %v0_1af33
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKSsSsEEbEC1ERKS3_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1af34:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_1af5d = inttoptr i32 %arg2 to i32*
  %v2_1af5d = load i32, i32* %v1_1af5d, align 4
  store i32 %v2_1af5d, i32* %arg1, align 4
  %v2_1af64 = load i8, i8* %tmp104, align 1
  %v3_1af6a = add i32 %tmp109, 4
  %v4_1af6a = inttoptr i32 %v3_1af6a to i8*
  store i8 %v2_1af64, i8* %v4_1af6a, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1af79

bb:                                               ; preds = %dec_label_pc_1af34
  %v5_1af77 = call i32 @function_1af7e(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_1af79

dec_label_pc_1af79:                               ; preds = %bb, %dec_label_pc_1af34
  %v6_1af77 = phi i32 [ %v5_1af77, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1af34 ]
  ret i32 %v6_1af77
}

define i32 @function_1af7e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1af7e:
  %v0_1af7f = load i32, i32* @eax, align 8
  ret i32 %v0_1af7f
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSsSsEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1af80:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1af9a = load i32, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1afb8

bb:                                               ; preds = %dec_label_pc_1af80
  %v2_1afb6 = call i32 @function_1afbd(i32 %v2_1af9a)
  br label %dec_label_pc_1afb8

dec_label_pc_1afb8:                               ; preds = %bb, %dec_label_pc_1af80
  %v3_1afb6 = phi i32 [ %v2_1afb6, %bb ], [ %tmp100, %dec_label_pc_1af80 ]
  ret i32 %v3_1afb6
}

define i32 @function_1afbd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afbd:
  %v0_1afbe = load i32, i32* @eax, align 8
  ret i32 %v0_1afbe
}

define i32 @_ZNKSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afc0:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1afe6

bb:                                               ; preds = %dec_label_pc_1afc0
  %v2_1afe4 = call i32 @function_1afeb(i32 %arg1)
  br label %dec_label_pc_1afe6

dec_label_pc_1afe6:                               ; preds = %bb, %dec_label_pc_1afc0
  %v3_1afe4 = phi i32 [ %v2_1afe4, %bb ], [ %arg1, %dec_label_pc_1afc0 ]
  ret i32 %v3_1afe4
}

define i32 @function_1afeb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afeb:
  %v0_1afec = load i32, i32* @eax, align 8
  ret i32 %v0_1afec
}

define i32 @_ZNSaISt4pairIKSsSsEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1afee:
  %v1_1b011 = call i32 @unknown_395fc(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b022

bb:                                               ; preds = %dec_label_pc_1afee
  %v1_1b020 = call i32 @function_1b027()
  br label %dec_label_pc_1b022

dec_label_pc_1b022:                               ; preds = %bb, %dec_label_pc_1afee
  %v2_1b020 = phi i32 [ %v1_1b020, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1afee ]
  ret i32 %v2_1b020
}

define i32 @function_1b027() local_unnamed_addr {
dec_label_pc_1b027:
  %v0_1b028 = load i32, i32* @eax, align 8
  ret i32 %v0_1b028
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b02a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b04d

bb:                                               ; preds = %dec_label_pc_1b02a
  %v2_1b04b = call i32 @function_1b052(i32 %arg1)
  br label %dec_label_pc_1b04d

dec_label_pc_1b04d:                               ; preds = %bb, %dec_label_pc_1b02a
  %v3_1b04b = phi i32 [ %v2_1b04b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b02a ]
  ret i32 %v3_1b04b
}

define i32 @function_1b052(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b052:
  %v0_1b053 = load i32, i32* @eax, align 8
  ret i32 %v0_1b053
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b054:
  ret i32 %arg2
}

define i32 @function_1b092() local_unnamed_addr {
dec_label_pc_1b092:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b092 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b092 = add i32 %v0_1b092, -1
  store i32 %v1_1b092, i32* %ecx.global-to-local, align 4
  %v0_1b094 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b094
}

define i32 @_ZNSaIN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b096:
  %v1_1b0b3 = call i32 @unknown_396ce(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b0c4

bb:                                               ; preds = %dec_label_pc_1b096
  %v1_1b0c2 = call i32 @function_1b0c9()
  br label %dec_label_pc_1b0c4

dec_label_pc_1b0c4:                               ; preds = %bb, %dec_label_pc_1b096
  %v2_1b0c2 = phi i32 [ %v1_1b0c2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b096 ]
  ret i32 %v2_1b0c2
}

define i32 @function_1b0c9() local_unnamed_addr {
dec_label_pc_1b0c9:
  %v0_1b0ca = load i32, i32* @eax, align 8
  ret i32 %v0_1b0ca
}

define i32 @_ZN5boost9function3IbRKSsS2_jEC1IPFbS2_S2_jEEET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS7_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b0cc:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 8
  %v1_1b0f5 = call i32 @function_29238(i32 %arg1)
  %v2_1b107 = call i32 @unknown_3972e(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b118

bb:                                               ; preds = %dec_label_pc_1b0cc
  %v1_1b116 = call i32 @function_1b11d()
  br label %dec_label_pc_1b118

dec_label_pc_1b118:                               ; preds = %bb, %dec_label_pc_1b0cc
  %v2_1b116 = phi i32 [ %v1_1b116, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b0cc ]
  ret i32 %v2_1b116

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1b11d() local_unnamed_addr {
dec_label_pc_1b11d:
  %v0_1b11e = load i32, i32* @eax, align 8
  ret i32 %v0_1b11e
}

define i32 @_ZN5boost9function3IbRKSsS2_jE11move_assignERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b120:
  %edx.global-to-local = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v15_1b141 = icmp eq i32 %tmp105, %arg2
  br i1 %v15_1b141, label %bb, label %dec_label_pc_1b14a

bb:                                               ; preds = %dec_label_pc_1b120
  %v3_1b144 = call i32 @function_1b1f8(i32 %arg2, i32 %tmp105)
  br label %dec_label_pc_1b14a

dec_label_pc_1b14a:                               ; preds = %bb, %dec_label_pc_1b120
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_1b150 = call i32 @function_292c0(i32 %arg2)
  %v1_1b155 = xor i32 %v1_1b150, 1
  %v4_1b155 = trunc i32 %v1_1b155 to i8
  %v5_1b158 = icmp eq i8 %v4_1b155, 0
  br i1 %v5_1b158, label %dec_label_pc_1b1c4, label %dec_label_pc_1b15c

dec_label_pc_1b15c:                               ; preds = %dec_label_pc_1b14a
  %v1_1b15f = inttoptr i32 %arg2 to i32*
  %v2_1b15f = load i32, i32* %v1_1b15f, align 4
  store i32 %v2_1b15f, i32* %edx.global-to-local, align 8
  store i32 %v2_1b15f, i32* %arg1, align 4
  store i32 %tmp105, i32* @eax, align 8
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1b16c = call i32 @function_292f4(i32 %tmp105)
  %v4_1b171 = trunc i32 %v1_1b16c to i8
  store i1 false, i1* @cf, align 1
  %v5_1b171 = icmp eq i8 %v4_1b171, 0
  store i32 %tmp105, i32* @eax, align 8
  br i1 %v5_1b171, label %dec_label_pc_1b18f, label %dec_label_pc_1b175

dec_label_pc_1b175:                               ; preds = %dec_label_pc_1b15c
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1b17b = add i32 %arg2, 4
  %v2_1b17b = inttoptr i32 %v1_1b17b to i32*
  %v3_1b17b = load i32, i32* %v2_1b17b, align 4
  %v2_1b17e = add i32 %tmp105, 4
  %v3_1b17e = inttoptr i32 %v2_1b17e to i32*
  store i32 %v3_1b17b, i32* %v3_1b17e, align 4
  %v0_1b181 = load i32, i32* %edx.global-to-local, align 8
  %v1_1b181 = add i32 %v0_1b181, 8
  %v2_1b181 = inttoptr i32 %v1_1b181 to i32*
  %v3_1b181 = load i32, i32* %v2_1b181, align 4
  %v1_1b184 = load i32, i32* @eax, align 8
  %v2_1b184 = add i32 %v1_1b184, 8
  %v3_1b184 = inttoptr i32 %v2_1b184 to i32*
  store i32 %v3_1b181, i32* %v3_1b184, align 4
  %v0_1b187 = load i32, i32* %edx.global-to-local, align 8
  %v1_1b187 = add i32 %v0_1b187, 12
  %v2_1b187 = inttoptr i32 %v1_1b187 to i32*
  %v3_1b187 = load i32, i32* %v2_1b187, align 4
  store i32 %v3_1b187, i32* %edx.global-to-local, align 8
  %v1_1b18a = load i32, i32* @eax, align 8
  %v2_1b18a = add i32 %v1_1b18a, 12
  %v3_1b18a = inttoptr i32 %v2_1b18a to i32*
  store i32 %v3_1b187, i32* %v3_1b18a, align 4
  br label %dec_label_pc_1b1b9

dec_label_pc_1b18f:                               ; preds = %dec_label_pc_1b15c
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1b195 = call i32 @function_30166(i32 %tmp105)
  %v1_1b19f = add i32 %tmp105, 4
  %v1_1b1a5 = add i32 %arg2, 4
  store i32 %v1_1b1a5, i32* %edx.global-to-local, align 8
  store i32 %v1_1b1a5, i32* %stack_var_-60, align 4
  br label %dec_label_pc_1b1b9

dec_label_pc_1b1b9:                               ; preds = %dec_label_pc_1b18f, %dec_label_pc_1b175
  %stack_var_-56.0 = phi i32 [ %v1_1b19f, %dec_label_pc_1b18f ], [ %tmp98, %dec_label_pc_1b175 ]
  store i32 0, i32* %v1_1b15f, align 4
  %v0_1b1c2 = load i32, i32* %stack_var_-60, align 4
  %v2_1b1c2 = call i32 @function_1b1f8(i32 %v0_1b1c2, i32 %stack_var_-56.0)
  ret i32 %v2_1b1c2

dec_label_pc_1b1c4:                               ; preds = %dec_label_pc_1b14a
  store i32 %tmp105, i32* @eax, align 8
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1b1ca = call i32 @function_2de6a(i32 %tmp105)
  %v2_1b1cf = call i32 @function_1b1f8(i32 %tmp105, i32 %tmp98)
  ret i32 %v2_1b1cf

; uselistorder directives
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp105, { 1, 12, 11, 10, 3, 6, 5, 2, 4, 9, 8, 7, 13, 0 }
  uselistorder i32 %tmp98, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1b1f8, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 4, 7, 6, 5, 8, 0 }
}

define i32 @function_1b1d2() local_unnamed_addr {
dec_label_pc_1b1d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b1d2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b1d2
}

define i32 @function_1b1f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b1f8:
  %v0_1b1f9 = load i32, i32* @ebp, align 4
  %v1_1b1f9 = add i32 %v0_1b1f9, -12
  %v2_1b1f9 = inttoptr i32 %v1_1b1f9 to i32*
  %v3_1b1f9 = load i32, i32* %v2_1b1f9, align 4
  %v3_1b1fc = xor i32 %v3_1b1f9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1b1fc = icmp eq i32 %v3_1b1fc, 0
  store i32 %v3_1b1fc, i32* @eax, align 8
  br i1 %v4_1b1fc, label %bb, label %dec_label_pc_1b205

bb:                                               ; preds = %dec_label_pc_1b1f8
  %v1_1b203 = call i32 @function_1b20a()
  br label %dec_label_pc_1b205

dec_label_pc_1b205:                               ; preds = %bb, %dec_label_pc_1b1f8
  %v2_1b203 = phi i32 [ %v1_1b203, %bb ], [ %v3_1b1fc, %dec_label_pc_1b1f8 ]
  ret i32 %v2_1b203
}

define i32 @function_1b20a() local_unnamed_addr {
dec_label_pc_1b20a:
  %v0_1b20f = load i32, i32* @eax, align 8
  ret i32 %v0_1b20f
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitorclIFbRKSsS5_jEEEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b210:
  %stack_var_-17 = alloca i32, align 4
  %v2_1b22d = ptrtoint i32* %stack_var_-17 to i32
  %v3_1b241 = call i32 @unknown_398e2(i32 %arg1, i32 %arg2, i32 %v2_1b22d)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b252

bb:                                               ; preds = %dec_label_pc_1b210
  %v1_1b250 = call i32 @function_1b257()
  br label %dec_label_pc_1b252

dec_label_pc_1b252:                               ; preds = %bb, %dec_label_pc_1b210
  %v2_1b250 = phi i32 [ %v1_1b250, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b210 ]
  ret i32 %v2_1b250
}

define i32 @function_1b257() local_unnamed_addr {
dec_label_pc_1b257:
  %v0_1b258 = load i32, i32* @eax, align 8
  ret i32 %v0_1b258
}

define i32 @_ZSt11__addressofIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEPT_RSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b259:
  ret i32 %arg1
}

define i32 @_ZSt8_DestroyIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b286:
  store i32 %arg1, i32* @eax, align 8
  %v1_1b2a3 = call i32 @function_2bd4a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b2b4

bb:                                               ; preds = %dec_label_pc_1b286
  %v1_1b2b2 = call i32 @function_1b2b9()
  br label %dec_label_pc_1b2b4

dec_label_pc_1b2b4:                               ; preds = %bb, %dec_label_pc_1b286
  %v2_1b2b2 = phi i32 [ %v1_1b2b2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b286 ]
  ret i32 %v2_1b2b2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b2b9() local_unnamed_addr {
dec_label_pc_1b2b9:
  %v0_1b2ba = load i32, i32* @eax, align 8
  ret i32 %v0_1b2ba
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE35nolock_force_unique_connection_listEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b2bc:
  %v1_1b2dc = call i32 @unknown_399de(i32 %arg1)
  %v1_1b2e1 = xor i32 %v1_1b2dc, 1
  %v4_1b2e1 = trunc i32 %v1_1b2e1 to i8
  %v5_1b2e4 = icmp eq i8 %v4_1b2e1, 0
  br i1 %v5_1b2e4, label %bb, label %dec_label_pc_1b2ec

bb:                                               ; preds = %dec_label_pc_1b2bc
  %v1_1b2e6 = call i32 @function_1b386()
  br label %dec_label_pc_1b2ec

dec_label_pc_1b2ec:                               ; preds = %bb, %dec_label_pc_1b2bc
  %v1_1b2f2 = call i32 @unknown_39a16(i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  %v1_1b2ff = call i32 @function_32af4(i32 %arg1)
  %v1_1b307 = call i32 @_Unwind_Resume.1562(i32 %v1_1b2ff)
  ret i32 %v1_1b307

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
}

define i32 @function_1b319() local_unnamed_addr {
dec_label_pc_1b319:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b319 = add i32 %v0_1b319, 612141507
  %v2_1b319 = inttoptr i32 %v1_1b319 to i32*
  %v3_1b319 = load i32, i32* %v2_1b319, align 4
  %v4_1b319 = add i32 %v3_1b319, -1
  store i32 %v4_1b319, i32* %v2_1b319, align 4
  %v0_1b31f = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b31f = add i32 %v0_1b31f, -1996217228
  %v2_1b31f = inttoptr i32 %v1_1b31f to i8*
  %v3_1b31f = load i8, i8* %v2_1b31f, align 1
  %v5_1b31f = trunc i32 %v0_1b31f to i8
  %v6_1b31f = or i8 %v3_1b31f, %v5_1b31f
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1b31f, i8* %v2_1b31f, align 1
  %v0_1b325 = load i32, i32* %eax.global-to-local, align 8
  %v1_1b325 = trunc i32 %v0_1b325 to i8
  %v2_1b325 = load i1, i1* %cf.global-to-local, align 1
  %v3_1b325 = zext i1 %v2_1b325 to i32
  %v4_1b325 = add i32 %v0_1b325, 220
  %v5_1b325 = add i32 %v4_1b325, %v3_1b325
  %v17_1b325 = icmp ult i8 %v1_1b325, 36
  %v18_1b325 = or i1 %v2_1b325, %v17_1b325
  store i1 %v18_1b325, i1* %cf.global-to-local, align 1
  %v31_1b325 = and i32 %v5_1b325, 255
  %v33_1b325 = and i32 %v0_1b325, -256
  %v34_1b325 = or i32 %v31_1b325, %v33_1b325
  store i32 %v34_1b325, i32* %eax.global-to-local, align 8
  %v0_1b327 = call i32 @unknown_39b34()
  store i32 %v0_1b327, i32* %eax.global-to-local, align 8
  %v0_1b32c = load i32, i32* @ebp, align 4
  %v1_1b32c = add i32 %v0_1b32c, -44
  %v2_1b32c = inttoptr i32 %v1_1b32c to i32*
  %v3_1b32c = load i32, i32* %v2_1b32c, align 4
  store i32 %v3_1b32c, i32* %eax.global-to-local, align 8
  %v0_1b32f = load i32, i32* %ebx.global-to-local, align 8
  %v2_1b336 = call i32 @unknown_39bcc(i32 %v3_1b32c, i32 %v0_1b32f)
  store i32 %v2_1b336, i32* %eax.global-to-local, align 8
  %v0_1b33b = load i32, i32* @ebp, align 4
  %v1_1b33b = add i32 %v0_1b33b, -44
  %v2_1b33b = inttoptr i32 %v1_1b33b to i32*
  %v3_1b33b = load i32, i32* %v2_1b33b, align 4
  store i32 %v3_1b33b, i32* @eax, align 8
  %v1_1b341 = call i32 @function_32af4(i32 %v3_1b33b)
  store i32 %v1_1b341, i32* %eax.global-to-local, align 8
  %v1_1b349 = call i32 @_Unwind_Resume.1562(i32 %v1_1b341)
  %v0_1b350 = load i32, i32* @ebp, align 4
  %v1_1b350 = add i32 %v0_1b350, -32
  store i32 %v1_1b350, i32* %eax.global-to-local, align 8
  %v2_1b35a = call i32 @unknown_39ea6(i32 %v1_1b350, i32 %v1_1b349)
  %v0_1b35f = load i32, i32* @esp, align 4
  %v5_1b35f = icmp ult i32 %v0_1b35f, 4
  store i1 %v5_1b35f, i1* %cf.global-to-local, align 1
  %v0_1b36a = load i32, i32* @ebp, align 4
  %v1_1b36a = add i32 %v0_1b36a, -32
  store i32 %v1_1b36a, i32* %eax.global-to-local, align 8
  %v1_1b379 = add i32 %v0_1b36a, -44
  %v2_1b379 = inttoptr i32 %v1_1b379 to i32*
  %v3_1b379 = load i32, i32* %v2_1b379, align 4
  store i32 %v3_1b379, i32* %eax.global-to-local, align 8
  %v4_1b37f = call i32 @unknown_39cb6(i32 %v3_1b379, i32 1, i32 %v1_1b36a, i32 0)
  store i32 %v4_1b37f, i32* %eax.global-to-local, align 8
  %v0_1b384 = call i32 @function_1b3b7()
  store i32 %v0_1b384, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b384

; uselistorder directives
  uselistorder i1 %v2_1b325, { 1, 0 }
  uselistorder i32 %v0_1b325, { 1, 0, 2 }
  uselistorder i32 (i32)* @_Unwind_Resume.1562, { 1, 0 }
  uselistorder i32 (i32)* @function_32af4, { 1, 0 }
}

define i32 @function_1b386() local_unnamed_addr {
dec_label_pc_1b386:
  %v0_1b396 = load i32, i32* @ebp, align 4
  %v1_1b396 = add i32 %v0_1b396, -44
  %v2_1b396 = inttoptr i32 %v1_1b396 to i32*
  %v3_1b396 = load i32, i32* %v2_1b396, align 4
  %v3_1b39c = call i32 @unknown_39ef0(i32 %v3_1b396, i32 1, i32 2)
  %v0_1b3a1 = call i32 @function_1b3b7()
  ret i32 %v0_1b3a1
}

define i32 @function_1b3b7() local_unnamed_addr {
dec_label_pc_1b3b7:
  %v0_1b3b7 = load i32, i32* @ebp, align 4
  %v1_1b3b7 = add i32 %v0_1b3b7, -28
  %v2_1b3b7 = inttoptr i32 %v1_1b3b7 to i32*
  %v3_1b3b7 = load i32, i32* %v2_1b3b7, align 4
  %v3_1b3ba = xor i32 %v3_1b3b7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1b3ba = icmp eq i32 %v3_1b3ba, 0
  store i32 %v3_1b3ba, i32* @eax, align 8
  br i1 %v4_1b3ba, label %bb, label %dec_label_pc_1b3c3

bb:                                               ; preds = %dec_label_pc_1b3b7
  %v1_1b3c1 = call i32 @function_1b3c8()
  br label %dec_label_pc_1b3c3

dec_label_pc_1b3c3:                               ; preds = %bb, %dec_label_pc_1b3b7
  %v2_1b3c1 = phi i32 [ %v1_1b3c1, %bb ], [ %v3_1b3ba, %dec_label_pc_1b3b7 ]
  ret i32 %v2_1b3c1
}

define i32 @function_1b3c8() local_unnamed_addr {
dec_label_pc_1b3c8:
  %v0_1b3c8 = load i32, i32* @ebp, align 4
  %v1_1b3ce = inttoptr i32 %v0_1b3c8 to i32*
  %v2_1b3ce = load i32, i32* %v1_1b3ce, align 4
  store i32 %v2_1b3ce, i32* @ebp, align 4
  %v0_1b3cf = load i32, i32* @eax, align 8
  ret i32 %v0_1b3cf
}

define i32 @_ZN5boost8signals29slot_baseC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b3d0:
  %v2_1b3fa = call i32 @unknown_3a112(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b40b

bb:                                               ; preds = %dec_label_pc_1b3d0
  %v1_1b409 = call i32 @function_1b410()
  br label %dec_label_pc_1b40b

dec_label_pc_1b40b:                               ; preds = %bb, %dec_label_pc_1b3d0
  %v2_1b409 = phi i32 [ %v1_1b409, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b3d0 ]
  ret i32 %v2_1b409
}

define i32 @function_1b410() local_unnamed_addr {
dec_label_pc_1b410:
  %v0_1b411 = load i32, i32* @eax, align 8
  ret i32 %v0_1b411
}

define i32 @_ZN5boost8signals25slot3IbRKSsS3_jNS_8functionIFbS3_S3_jEEEEC1ERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b412:
  %v2_1b43d = call i32 @unknown_367e2(i32 %arg1, i32 %arg2)
  %v1_1b445 = add i32 %arg2, 12
  %v1_1b44b = add i32 %arg1, 12
  %v2_1b455 = call i32 @unknown_3a22e(i32 %v1_1b44b, i32 %v1_1b445)
  %v0_1b45a = call i32 @function_1b473()
  ret i32 %v0_1b45a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b45d() local_unnamed_addr {
dec_label_pc_1b45d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b45d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b45d
}

define i32 @function_1b473() local_unnamed_addr {
dec_label_pc_1b473:
  %v0_1b473 = load i32, i32* @ebp, align 4
  %v1_1b473 = add i32 %v0_1b473, -12
  %v2_1b473 = inttoptr i32 %v1_1b473 to i32*
  %v3_1b473 = load i32, i32* %v2_1b473, align 4
  %v3_1b476 = xor i32 %v3_1b473, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1b476
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEEC1ERKSE_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b48a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_1b4ae = call i32 @function_2a118(i32 %tmp102)
  store i32 ptrtoint (%vtable_339fc_type* @global_var_339fc.1996 to i32), i32* %arg1, align 4
  %v1_1b4bf = add i32 %tmp102, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_1b4cc = call i32 @unknown_3689c(i32 %v1_1b4bf, i32 %arg2)
  %v1_1b4d4 = add i32 %tmp102, 44
  store i32 %v1_1b4d4, i32* @eax, align 8
  %v1_1b4da = call i32 @function_2a520(i32 %v1_1b4d4)
  %v1_1b4e2 = add i32 %tmp102, 68
  %v1_1b4e8 = call i32 @function_32c4a(i32 %v1_1b4e2)
  %v0_1b4ed = call i32 @function_1b526()
  ret i32 %v0_1b4ed

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
}

define i32 @function_1b4ef() local_unnamed_addr {
dec_label_pc_1b4ef:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1b4ef = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1b4ef, i32* @ebx, align 8
  %v0_1b4f1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b4f1 = add i32 %v0_1b4f1, -28
  %v2_1b4f1 = inttoptr i32 %v1_1b4f1 to i32*
  %v3_1b4f1 = load i32, i32* %v2_1b4f1, align 4
  %v1_1b4f4 = add i32 %v3_1b4f1, 44
  store i32 %v1_1b4f4, i32* @eax, align 8
  %v1_1b4fa = call i32 @function_2a55e(i32 %v1_1b4f4)
  store i32 %v1_1b4fa, i32* %eax.global-to-local, align 8
  %v0_1b4ff = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b4ff = add i32 %v0_1b4ff, -28
  %v2_1b4ff = inttoptr i32 %v1_1b4ff to i32*
  %v3_1b4ff = load i32, i32* %v2_1b4ff, align 4
  %v1_1b502 = add i32 %v3_1b4ff, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1b502, i32* @eax, align 8
  %v1_1b508 = call i32 @function_2b1d4(i32 %v1_1b502)
  store i32 %v1_1b508, i32* %eax.global-to-local, align 8
  %v0_1b50d = call i32 @function_1b511()
  store i32 %v0_1b50d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b50d
}

define i32 @function_1b50f() local_unnamed_addr {
dec_label_pc_1b50f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b50f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b50f
}

define i32 @function_1b511() local_unnamed_addr {
dec_label_pc_1b511:
  %v0_1b51c = load i32, i32* @ebx, align 8
  ret i32 %v0_1b51c
}

define i32 @function_1b526() local_unnamed_addr {
dec_label_pc_1b526:
  %v0_1b526 = load i32, i32* @ebp, align 4
  %v1_1b526 = add i32 %v0_1b526, -12
  %v2_1b526 = inttoptr i32 %v1_1b526 to i32*
  %v3_1b526 = load i32, i32* %v2_1b526, align 4
  %v3_1b529 = xor i32 %v3_1b526, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1b529 = icmp eq i32 %v3_1b529, 0
  store i32 %v3_1b529, i32* @eax, align 8
  br i1 %v4_1b529, label %bb, label %dec_label_pc_1b532

bb:                                               ; preds = %dec_label_pc_1b526
  %v1_1b530 = call i32 @function_1b537()
  br label %dec_label_pc_1b532

dec_label_pc_1b532:                               ; preds = %bb, %dec_label_pc_1b526
  %v2_1b530 = phi i32 [ %v1_1b530, %bb ], [ %v3_1b529, %dec_label_pc_1b526 ]
  ret i32 %v2_1b530
}

define i32 @function_1b537() local_unnamed_addr {
dec_label_pc_1b537:
  %v0_1b53c = load i32, i32* @eax, align 8
  ret i32 %v0_1b53c
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEC1ISH_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b53e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1b566 = add i32 %tmp104, 4
  %v2_1b573 = call i32 @unknown_3a39c(i32 %v1_1b566, i32 %arg2)
  %v3_1b58c = call i32 @function_1da83(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b59d

bb:                                               ; preds = %dec_label_pc_1b53e
  %v1_1b59b = call i32 @function_1b5a2()
  br label %dec_label_pc_1b59d

dec_label_pc_1b59d:                               ; preds = %bb, %dec_label_pc_1b53e
  %v2_1b59b = phi i32 [ %v1_1b59b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b53e ]
  ret i32 %v2_1b59b

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_1b5a2() local_unnamed_addr {
dec_label_pc_1b5a2:
  %v0_1b5a3 = load i32, i32* @eax, align 8
  ret i32 %v0_1b5a3
}

define i32 @_ZN5boost8optionalIiEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5a4:
  %v1_1b5c1 = call i32 @unknown_3a48e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b5d2

bb:                                               ; preds = %dec_label_pc_1b5a4
  %v1_1b5d0 = call i32 @function_1b5d7()
  br label %dec_label_pc_1b5d2

dec_label_pc_1b5d2:                               ; preds = %bb, %dec_label_pc_1b5a4
  %v2_1b5d0 = phi i32 [ %v1_1b5d0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b5a4 ]
  ret i32 %v2_1b5d0
}

define i32 @function_1b5d7() local_unnamed_addr {
dec_label_pc_1b5d7:
  %v0_1b5d8 = load i32, i32* @eax, align 8
  ret i32 %v0_1b5d8
}

define i32 @_ZN5boost15optional_detail13optional_baseIiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5da:
  %v1_1b5f7 = call i32 @unknown_3a500(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b608

bb:                                               ; preds = %dec_label_pc_1b5da
  %v1_1b606 = call i32 @function_1b60d()
  br label %dec_label_pc_1b608

dec_label_pc_1b608:                               ; preds = %bb, %dec_label_pc_1b5da
  %v2_1b606 = phi i32 [ %v1_1b606, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b5da ]
  ret i32 %v2_1b606
}

define i32 @function_1b60d() local_unnamed_addr {
dec_label_pc_1b60d:
  %v0_1b60e = load i32, i32* @eax, align 8
  ret i32 %v0_1b60e
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b610:
  %v2_1b62a = load i32, i32* %arg1, align 4
  %v1_1b62c = icmp eq i32 %v2_1b62a, 0
  %v1_1b62e = icmp eq i1 %v1_1b62c, false
  br i1 %v1_1b62e, label %dec_label_pc_1b654, label %dec_label_pc_1b630

dec_label_pc_1b630:                               ; preds = %dec_label_pc_1b610
  br label %dec_label_pc_1b654

dec_label_pc_1b654:                               ; preds = %dec_label_pc_1b630, %dec_label_pc_1b610
  %v2_1b657 = load i32, i32* %arg1, align 4
  store i32 %v2_1b657, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b665

bb:                                               ; preds = %dec_label_pc_1b654
  %v1_1b663 = call i32 @function_1b66a()
  br label %dec_label_pc_1b665

dec_label_pc_1b665:                               ; preds = %bb, %dec_label_pc_1b654
  %v2_1b663 = phi i32 [ %v1_1b663, %bb ], [ %v2_1b657, %dec_label_pc_1b654 ]
  ret i32 %v2_1b663
}

define i32 @function_1b66a() local_unnamed_addr {
dec_label_pc_1b66a:
  %v0_1b66b = load i32, i32* @eax, align 8
  ret i32 %v0_1b66b
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b66c:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b698

bb:                                               ; preds = %dec_label_pc_1b66c
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1b696 = call i32 @function_1b69d(i32 %tmp102)
  br label %dec_label_pc_1b698

dec_label_pc_1b698:                               ; preds = %bb, %dec_label_pc_1b66c
  %v3_1b696 = phi i32 [ %v2_1b696, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b66c ]
  ret i32 %v3_1b696

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1b69d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b69d:
  %v0_1b69e = load i32, i32* @eax, align 8
  ret i32 %v0_1b69e
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b6a0:
  %v2_1b6ca = call i32 @unknown_3a60a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b6e1

bb:                                               ; preds = %dec_label_pc_1b6a0
  %v1_1b6df = call i32 @function_1b6e6()
  br label %dec_label_pc_1b6e1

dec_label_pc_1b6e1:                               ; preds = %bb, %dec_label_pc_1b6a0
  %v2_1b6df = phi i32 [ %v1_1b6df, %bb ], [ %arg1, %dec_label_pc_1b6a0 ]
  ret i32 %v2_1b6df

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b6e6() local_unnamed_addr {
dec_label_pc_1b6e6:
  %v0_1b6e7 = load i32, i32* @eax, align 8
  ret i32 %v0_1b6e7
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b6ea:
  %v3_1b721 = call i32 @unknown_3a69e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b738

bb:                                               ; preds = %dec_label_pc_1b6ea
  %v1_1b736 = call i32 @function_1b73d()
  br label %dec_label_pc_1b738

dec_label_pc_1b738:                               ; preds = %bb, %dec_label_pc_1b6ea
  %v2_1b736 = phi i32 [ %v1_1b736, %bb ], [ %arg1, %dec_label_pc_1b6ea ]
  ret i32 %v2_1b736

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b73d() local_unnamed_addr {
dec_label_pc_1b73d:
  %v0_1b73e = load i32, i32* @eax, align 8
  ret i32 %v0_1b73e
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b742:
  %v1_1b75f = call i32 @function_3089a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b770

bb:                                               ; preds = %dec_label_pc_1b742
  %v1_1b76e = call i32 @function_1b775()
  br label %dec_label_pc_1b770

dec_label_pc_1b770:                               ; preds = %bb, %dec_label_pc_1b742
  %v2_1b76e = phi i32 [ %v1_1b76e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1b742 ]
  ret i32 %v2_1b76e
}

define i32 @function_1b775() local_unnamed_addr {
dec_label_pc_1b775:
  %v0_1b776 = load i32, i32* @eax, align 8
  ret i32 %v0_1b776
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE8m_insertERKSt17_Rb_tree_iteratorIS7_IKSB_St14_List_iteratorISL_EEERSO_RKSL_(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b778:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp126 = ptrtoint i32* %arg2 to i32
  %v2_1b7a9 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1b7af = call i32 @unknown_3a7a8(i32 %v2_1b7a9, i32 %tmp126)
  %v2_1b7b4 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1b7c8 = call i32 @unknown_3a7e2(i32 %v2_1b7b4, i32 %arg1, i32 %v2_1b7a9)
  %v2_1b7d3 = ptrtoint i32* %stack_var_-48 to i32
  %v3_1b7dd = load i32, i32* %stack_var_-56, align 4
  %v4_1b7eb = call i32 @unknown_3a8a0(i32 %v2_1b7d3, i32 %arg1, i32 %v3_1b7dd, i32 %arg4)
  %v1_1b7f6 = add i32 %arg1, 8
  %v2_1b7f9 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1b803 = call i32 @unknown_36e18(i32 %v2_1b7f9, i32 %v1_1b7f6)
  %v2_1b818 = call i32 @unknown_3a9de(i32 %tmp126, i32 %v2_1b7f9)
  %v4_1b81d = trunc i32 %v2_1b818 to i8
  %v5_1b81d = icmp eq i8 %v4_1b81d, 0
  br i1 %v5_1b81d, label %dec_label_pc_1b84d, label %dec_label_pc_1b821

dec_label_pc_1b821:                               ; preds = %dec_label_pc_1b778
  %v1_1b827 = call i32 @unknown_3a9a4(i32 %tmp126)
  %v3_1b83d = call i32 @unknown_3a91a(i32 %arg1, i32 %arg3, i32 %v1_1b827)
  %v4_1b842 = trunc i32 %v3_1b83d to i8
  %v5_1b842 = icmp eq i8 %v4_1b842, 0
  br i1 %v5_1b842, label %dec_label_pc_1b84d, label %dec_label_pc_1b852

dec_label_pc_1b84d:                               ; preds = %dec_label_pc_1b821, %dec_label_pc_1b778
  br label %dec_label_pc_1b852

dec_label_pc_1b852:                               ; preds = %dec_label_pc_1b821, %dec_label_pc_1b84d
  %storemerge7 = phi i1 [ true, %dec_label_pc_1b84d ], [ false, %dec_label_pc_1b821 ]
  br i1 %storemerge7, label %dec_label_pc_1b86d, label %dec_label_pc_1b856

dec_label_pc_1b856:                               ; preds = %dec_label_pc_1b852
  %v2_1b85f = load i32, i32* %arg2, align 4
  %v2_1b868 = call i32 @unknown_3aa1e(i32 %v1_1b7f6, i32 %v2_1b85f)
  br label %dec_label_pc_1b86d

dec_label_pc_1b86d:                               ; preds = %dec_label_pc_1b856, %dec_label_pc_1b852
  %v2_1b873 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1b884 = call i32 @unknown_37126(i32 %v2_1b873, i32 %v1_1b7f6, i32 %arg3)
  %v2_1b892 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1b89c = call i32 @unknown_36e18(i32 %v2_1b892, i32 %v1_1b7f6)
  %v2_1b8b1 = call i32 @unknown_3aa60(i32 %v2_1b873, i32 %v2_1b892)
  %v4_1b8b6 = trunc i32 %v2_1b8b1 to i8
  %v5_1b8b6 = icmp eq i8 %v4_1b8b6, 0
  %v1_1b8b8 = icmp eq i1 %v5_1b8b6, false
  br i1 %v1_1b8b8, label %dec_label_pc_1b8ee, label %dec_label_pc_1b8ba

dec_label_pc_1b8ba:                               ; preds = %dec_label_pc_1b86d
  %v1_1b8c0 = call i32 @unknown_3a9a4(i32 %v2_1b873)
  %v3_1b8d6 = call i32 @unknown_3a91a(i32 %arg1, i32 %v1_1b8c0, i32 %arg3)
  %v1_1b8db = xor i32 %v3_1b8d6, 1
  %v4_1b8db = trunc i32 %v1_1b8db to i8
  %v5_1b8de = icmp ne i8 %v4_1b8db, 0
  %phitmp139 = icmp eq i1 %v5_1b8de, false
  br label %dec_label_pc_1b8ee

dec_label_pc_1b8ee:                               ; preds = %dec_label_pc_1b8ba, %dec_label_pc_1b86d
  %storemerge = phi i1 [ false, %dec_label_pc_1b86d ], [ %phitmp139, %dec_label_pc_1b8ba ]
  br i1 %storemerge, label %bb, label %dec_label_pc_1b8f2

bb:                                               ; preds = %dec_label_pc_1b8ee
  %v1_1b8f0 = call i32 @function_1b94e()
  br label %dec_label_pc_1b8f2

dec_label_pc_1b8f2:                               ; preds = %bb, %dec_label_pc_1b8ee
  %v2_1b900 = ptrtoint i32* %stack_var_-32 to i32
  %v3_1b906 = call i32 @unknown_3aaf2(i32 %v2_1b900, i32 %arg3, i32 %v2_1b7d3)
  %v2_1b911 = ptrtoint i32* %stack_var_-64 to i32
  %v3_1b922 = call i32 @unknown_3ab46(i32 %v2_1b911, i32 %v1_1b7f6, i32 %v2_1b900)
  %v1_1b930 = call i32 @unknown_36eba(i32 %v2_1b900)
  %v0_1b935 = call i32 @function_1b94e()
  ret i32 %v0_1b935

; uselistorder directives
  uselistorder i32 %v1_1b7f6, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @function_1b94e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3a91a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3a9a4, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_36e18, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 3, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_1b852, { 1, 0 }
}

define i32 @function_1b938() local_unnamed_addr {
dec_label_pc_1b938:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b938 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1b938
}

define i32 @function_1b94e() local_unnamed_addr {
dec_label_pc_1b94e:
  %v0_1b94e = load i32, i32* @ebp, align 4
  %v1_1b94e = add i32 %v0_1b94e, -12
  %v2_1b94e = inttoptr i32 %v1_1b94e to i32*
  %v3_1b94e = load i32, i32* %v2_1b94e, align 4
  %v3_1b951 = xor i32 %v3_1b94e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1b951 = icmp eq i32 %v3_1b951, 0
  store i32 %v3_1b951, i32* @eax, align 8
  br i1 %v4_1b951, label %bb, label %dec_label_pc_1b95a

bb:                                               ; preds = %dec_label_pc_1b94e
  %v1_1b958 = call i32 @function_1b95f()
  br label %dec_label_pc_1b95a

dec_label_pc_1b95a:                               ; preds = %bb, %dec_label_pc_1b94e
  %v2_1b958 = phi i32 [ %v1_1b958, %bb ], [ %v3_1b951, %dec_label_pc_1b94e ]
  ret i32 %v2_1b958
}

define i32 @function_1b95f() local_unnamed_addr {
dec_label_pc_1b95f:
  %v0_1b963 = load i32, i32* @eax, align 8
  ret i32 %v0_1b963
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b964:
  %v2_1b98e = call i32 @unknown_3ad8a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b9a5

bb:                                               ; preds = %dec_label_pc_1b964
  %v1_1b9a3 = call i32 @function_1b9aa()
  br label %dec_label_pc_1b9a5

dec_label_pc_1b9a5:                               ; preds = %bb, %dec_label_pc_1b964
  %v2_1b9a3 = phi i32 [ %v1_1b9a3, %bb ], [ %arg1, %dec_label_pc_1b964 ]
  ret i32 %v2_1b9a3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b9aa() local_unnamed_addr {
dec_label_pc_1b9aa:
  %v0_1b9ab = load i32, i32* @eax, align 8
  ret i32 %v0_1b9ab
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11lower_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b9ae:
  %v3_1b9e5 = call i32 @unknown_3ae1e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1b9fc

bb:                                               ; preds = %dec_label_pc_1b9ae
  %v1_1b9fa = call i32 @function_1ba01()
  br label %dec_label_pc_1b9fc

dec_label_pc_1b9fc:                               ; preds = %bb, %dec_label_pc_1b9ae
  %v2_1b9fa = phi i32 [ %v1_1b9fa, %bb ], [ %arg1, %dec_label_pc_1b9ae ]
  ret i32 %v2_1b9fa

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ba01() local_unnamed_addr {
dec_label_pc_1ba01:
  %v0_1ba02 = load i32, i32* @eax, align 8
  ret i32 %v0_1ba02
}

define i32 @_ZN5boost8optionalIiEaSERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba06:
  %v2_1ba30 = call i32 @unknown_3aef2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ba44

bb:                                               ; preds = %dec_label_pc_1ba06
  %v1_1ba42 = call i32 @function_1ba49()
  br label %dec_label_pc_1ba44

dec_label_pc_1ba44:                               ; preds = %bb, %dec_label_pc_1ba06
  %v2_1ba42 = phi i32 [ %v1_1ba42, %bb ], [ %arg1, %dec_label_pc_1ba06 ]
  ret i32 %v2_1ba42

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ba49() local_unnamed_addr {
dec_label_pc_1ba49:
  %v0_1ba4a = load i32, i32* @eax, align 8
  ret i32 %v0_1ba4a
}

define i32 @_ZN5boost9function1IbxEC1IPFbxEEET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS5_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ba4c:
  store i32 %arg1, i32* @eax, align 8
  %v1_1ba80 = call i32 @function_30d3c(i32 %arg1)
  %v2_1ba92 = call i32 @unknown_3afe2(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1baa3

bb:                                               ; preds = %dec_label_pc_1ba4c
  %v1_1baa1 = call i32 @function_1baa8()
  br label %dec_label_pc_1baa3

dec_label_pc_1baa3:                               ; preds = %bb, %dec_label_pc_1ba4c
  %v2_1baa1 = phi i32 [ %v1_1baa1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ba4c ]
  ret i32 %v2_1baa1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1baa8() local_unnamed_addr {
dec_label_pc_1baa8:
  %v0_1baa9 = load i32, i32* @eax, align 8
  ret i32 %v0_1baa9
}

define i32 @_ZN5boost9function1IbxE11move_assignERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1baaa:
  %edx.global-to-local = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v15_1bacb = icmp eq i32 %tmp105, %arg2
  br i1 %v15_1bacb, label %bb, label %dec_label_pc_1bad4

bb:                                               ; preds = %dec_label_pc_1baaa
  %v3_1bace = call i32 @function_1bb82(i32 %arg2, i32 %tmp105)
  br label %dec_label_pc_1bad4

dec_label_pc_1bad4:                               ; preds = %bb, %dec_label_pc_1baaa
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_1bada = call i32 @function_29c4a(i32 %arg2)
  %v1_1badf = xor i32 %v1_1bada, 1
  %v4_1badf = trunc i32 %v1_1badf to i8
  %v5_1bae2 = icmp eq i8 %v4_1badf, 0
  br i1 %v5_1bae2, label %dec_label_pc_1bb4e, label %dec_label_pc_1bae6

dec_label_pc_1bae6:                               ; preds = %dec_label_pc_1bad4
  %v1_1bae9 = inttoptr i32 %arg2 to i32*
  %v2_1bae9 = load i32, i32* %v1_1bae9, align 4
  store i32 %v2_1bae9, i32* @edx, align 8
  store i32 %v2_1bae9, i32* %arg1, align 4
  store i32 %tmp105, i32* @eax, align 8
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1baf6 = call i32 @function_29c7e(i32 %tmp105)
  %v4_1bafb = trunc i32 %v1_1baf6 to i8
  %v5_1bafb = icmp eq i8 %v4_1bafb, 0
  store i32 %tmp105, i32* @eax, align 8
  br i1 %v5_1bafb, label %dec_label_pc_1bb19, label %dec_label_pc_1baff

dec_label_pc_1baff:                               ; preds = %dec_label_pc_1bae6
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1bb05 = add i32 %arg2, 4
  %v2_1bb05 = inttoptr i32 %v1_1bb05 to i32*
  %v3_1bb05 = load i32, i32* %v2_1bb05, align 4
  %v2_1bb08 = add i32 %tmp105, 4
  %v3_1bb08 = inttoptr i32 %v2_1bb08 to i32*
  store i32 %v3_1bb05, i32* %v3_1bb08, align 4
  %v0_1bb0b = load i32, i32* %edx.global-to-local, align 8
  %v1_1bb0b = add i32 %v0_1bb0b, 8
  %v2_1bb0b = inttoptr i32 %v1_1bb0b to i32*
  %v3_1bb0b = load i32, i32* %v2_1bb0b, align 4
  %v1_1bb0e = load i32, i32* @eax, align 8
  %v2_1bb0e = add i32 %v1_1bb0e, 8
  %v3_1bb0e = inttoptr i32 %v2_1bb0e to i32*
  store i32 %v3_1bb0b, i32* %v3_1bb0e, align 4
  %v0_1bb11 = load i32, i32* %edx.global-to-local, align 8
  %v1_1bb11 = add i32 %v0_1bb11, 12
  %v2_1bb11 = inttoptr i32 %v1_1bb11 to i32*
  %v3_1bb11 = load i32, i32* %v2_1bb11, align 4
  store i32 %v3_1bb11, i32* %edx.global-to-local, align 8
  %v1_1bb14 = load i32, i32* @eax, align 8
  %v2_1bb14 = add i32 %v1_1bb14, 12
  %v3_1bb14 = inttoptr i32 %v2_1bb14 to i32*
  store i32 %v3_1bb11, i32* %v3_1bb14, align 4
  br label %dec_label_pc_1bb43

dec_label_pc_1bb19:                               ; preds = %dec_label_pc_1bae6
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1bb1f = call i32 @function_30f40(i32 %tmp105)
  %v1_1bb29 = add i32 %tmp105, 4
  %v1_1bb2f = add i32 %arg2, 4
  store i32 %v1_1bb2f, i32* %edx.global-to-local, align 8
  store i32 %v1_1bb2f, i32* %stack_var_-60, align 4
  br label %dec_label_pc_1bb43

dec_label_pc_1bb43:                               ; preds = %dec_label_pc_1bb19, %dec_label_pc_1baff
  %stack_var_-56.0 = phi i32 [ %v1_1bb29, %dec_label_pc_1bb19 ], [ %tmp98, %dec_label_pc_1baff ]
  store i32 0, i32* %v1_1bae9, align 4
  %v0_1bb4c = load i32, i32* %stack_var_-60, align 4
  %v2_1bb4c = call i32 @function_1bb82(i32 %v0_1bb4c, i32 %stack_var_-56.0)
  ret i32 %v2_1bb4c

dec_label_pc_1bb4e:                               ; preds = %dec_label_pc_1bad4
  store i32 %tmp105, i32* @eax, align 8
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1bb54 = trunc i32 %tmp105 to i16
  %v2_1bb54 = call i32 @function_2ea26(i16 %v1_1bb54)
  %v2_1bb59 = call i32 @function_1bb82(i32 %tmp105, i32 %tmp98)
  ret i32 %v2_1bb59

; uselistorder directives
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp105, { 1, 12, 11, 10, 3, 6, 5, 2, 4, 9, 8, 7, 13, 0 }
  uselistorder i32 %tmp98, { 1, 0 }
  uselistorder i32 (i32)* @function_30f40, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1bb82, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 4, 7, 6, 5, 8, 0 }
}

define i32 @function_1bb5c() local_unnamed_addr {
dec_label_pc_1bb5c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bb5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bb5c
}

define i32 @function_1bb82(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb82:
  %v0_1bb83 = load i32, i32* @ebp, align 4
  %v1_1bb83 = add i32 %v0_1bb83, -12
  %v2_1bb83 = inttoptr i32 %v1_1bb83 to i32*
  %v3_1bb83 = load i32, i32* %v2_1bb83, align 4
  %v3_1bb86 = xor i32 %v3_1bb83, ptrtoint ([3 x i8]* @3 to i32)
  store i32 %arg2, i32* @ebp, align 4
  ret i32 %v3_1bb86
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitorclIFbxEEEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb9a:
  %stack_var_-17 = alloca i32, align 4
  %v2_1bbb7 = ptrtoint i32* %stack_var_-17 to i32
  %v3_1bbcb = call i32 @unknown_3b1a0(i32 %arg1, i32 %arg2, i32 %v2_1bbb7)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1bbdc

bb:                                               ; preds = %dec_label_pc_1bb9a
  %v1_1bbda = call i32 @function_1bbe1()
  br label %dec_label_pc_1bbdc

dec_label_pc_1bbdc:                               ; preds = %bb, %dec_label_pc_1bb9a
  %v2_1bbda = phi i32 [ %v1_1bbda, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1bb9a ]
  ret i32 %v2_1bbda
}

define i32 @function_1bbe1() local_unnamed_addr {
dec_label_pc_1bbe1:
  %v0_1bbe2 = load i32, i32* @eax, align 8
  ret i32 %v0_1bbe2
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE35nolock_force_unique_connection_listEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bbe4:
  %v1_1bc04 = call i32 @unknown_3b23a(i32 %arg1)
  %v1_1bc09 = xor i32 %v1_1bc04, 1
  %v4_1bc09 = trunc i32 %v1_1bc09 to i8
  %v5_1bc0c = icmp eq i8 %v4_1bc09, 0
  br i1 %v5_1bc0c, label %bb, label %dec_label_pc_1bc14

bb:                                               ; preds = %dec_label_pc_1bbe4
  %v1_1bc0e = call i32 @function_1bcae()
  br label %dec_label_pc_1bc14

dec_label_pc_1bc14:                               ; preds = %bb, %dec_label_pc_1bbe4
  %v1_1bc1a = call i32 @unknown_3b272(i32 %arg1)
  %v1_1bc27 = call i32 @function_3392c(i32 %arg1)
  store i32 %v1_1bc27, i32* @eax, align 8
  %v1_1bc2f = call i32 @function_33988(i32 %v1_1bc27)
  ret i32 %v1_1bc2f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1bc41() local_unnamed_addr {
dec_label_pc_1bc41:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1bc41 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bc41 = add i32 %v0_1bc41, 612141507
  %v2_1bc41 = inttoptr i32 %v1_1bc41 to i32*
  %v3_1bc41 = load i32, i32* %v2_1bc41, align 4
  %v4_1bc41 = add i32 %v3_1bc41, -1
  store i32 %v4_1bc41, i32* %v2_1bc41, align 4
  %v0_1bc47 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bc47 = add i32 %v0_1bc47, -1996217228
  %v2_1bc47 = inttoptr i32 %v1_1bc47 to i8*
  %v3_1bc47 = load i8, i8* %v2_1bc47, align 1
  %v5_1bc47 = trunc i32 %v0_1bc47 to i8
  %v6_1bc47 = or i8 %v3_1bc47, %v5_1bc47
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1bc47, i8* %v2_1bc47, align 1
  %v0_1bc4d = load i32, i32* %eax.global-to-local, align 8
  %v1_1bc4d = trunc i32 %v0_1bc4d to i8
  %v2_1bc4d = load i1, i1* %cf.global-to-local, align 1
  %v3_1bc4d = zext i1 %v2_1bc4d to i32
  %v4_1bc4d = add i32 %v0_1bc4d, 220
  %v5_1bc4d = add i32 %v4_1bc4d, %v3_1bc4d
  %v17_1bc4d = icmp ult i8 %v1_1bc4d, 36
  %v18_1bc4d = or i1 %v2_1bc4d, %v17_1bc4d
  store i1 %v18_1bc4d, i1* %cf.global-to-local, align 1
  %v31_1bc4d = and i32 %v5_1bc4d, 255
  %v33_1bc4d = and i32 %v0_1bc4d, -256
  %v34_1bc4d = or i32 %v31_1bc4d, %v33_1bc4d
  store i32 %v34_1bc4d, i32* %eax.global-to-local, align 8
  %v0_1bc4f = call i32 @unknown_3b306()
  store i32 %v0_1bc4f, i32* %eax.global-to-local, align 8
  %v0_1bc54 = load i32, i32* @ebp, align 4
  %v1_1bc54 = add i32 %v0_1bc54, -44
  %v2_1bc54 = inttoptr i32 %v1_1bc54 to i32*
  %v3_1bc54 = load i32, i32* %v2_1bc54, align 4
  store i32 %v3_1bc54, i32* %eax.global-to-local, align 8
  %v0_1bc57 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1bc5e = call i32 @unknown_3b39e(i32 %v3_1bc54, i32 %v0_1bc57)
  store i32 %v2_1bc5e, i32* %eax.global-to-local, align 8
  %v0_1bc63 = load i32, i32* @ebp, align 4
  %v1_1bc63 = add i32 %v0_1bc63, -44
  %v2_1bc63 = inttoptr i32 %v1_1bc63 to i32*
  %v3_1bc63 = load i32, i32* %v2_1bc63, align 4
  store i32 %v3_1bc63, i32* %eax.global-to-local, align 8
  %v1_1bc69 = call i32 @function_3392c(i32 %v3_1bc63)
  store i32 %v1_1bc69, i32* @eax, align 8
  %v1_1bc71 = call i32 @function_33988(i32 %v1_1bc69)
  %v0_1bc78 = load i32, i32* @ebp, align 4
  %v1_1bc78 = add i32 %v0_1bc78, -32
  store i32 %v1_1bc78, i32* %eax.global-to-local, align 8
  %v2_1bc82 = call i32 @unknown_3b678(i32 %v1_1bc78, i32 %v1_1bc71)
  %v0_1bc87 = load i32, i32* @esp, align 4
  %v5_1bc87 = icmp ult i32 %v0_1bc87, 4
  store i1 %v5_1bc87, i1* %cf.global-to-local, align 1
  %v0_1bc92 = load i32, i32* @ebp, align 4
  %v1_1bc92 = add i32 %v0_1bc92, -32
  store i32 %v1_1bc92, i32* %eax.global-to-local, align 8
  %v1_1bca1 = add i32 %v0_1bc92, -44
  %v2_1bca1 = inttoptr i32 %v1_1bca1 to i32*
  %v3_1bca1 = load i32, i32* %v2_1bca1, align 4
  store i32 %v3_1bca1, i32* %eax.global-to-local, align 8
  %v4_1bca7 = call i32 @unknown_3b488(i32 %v3_1bca1, i32 1, i32 %v1_1bc92, i32 0)
  store i32 %v4_1bca7, i32* %eax.global-to-local, align 8
  %v0_1bcac = call i32 @function_1bcdf()
  store i32 %v0_1bcac, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bcac

; uselistorder directives
  uselistorder i1 %v2_1bc4d, { 1, 0 }
  uselistorder i32 %v0_1bc4d, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_33988, { 1, 0 }
  uselistorder i32 (i32)* @function_3392c, { 1, 0 }
}

define i32 @function_1bcae() local_unnamed_addr {
dec_label_pc_1bcae:
  %v0_1bcbe = load i32, i32* @ebp, align 4
  %v1_1bcbe = add i32 %v0_1bcbe, -44
  %v2_1bcbe = inttoptr i32 %v1_1bcbe to i32*
  %v3_1bcbe = load i32, i32* %v2_1bcbe, align 4
  %v3_1bcc4 = call i32 @unknown_3b6c2(i32 %v3_1bcbe, i32 1, i32 2)
  %v0_1bcc9 = call i32 @function_1bcdf()
  ret i32 %v0_1bcc9
}

define i32 @function_1bcdf() local_unnamed_addr {
dec_label_pc_1bcdf:
  %v0_1bcdf = load i32, i32* @ebp, align 4
  %v1_1bcdf = add i32 %v0_1bcdf, -28
  %v2_1bcdf = inttoptr i32 %v1_1bcdf to i32*
  %v3_1bcdf = load i32, i32* %v2_1bcdf, align 4
  %v3_1bce2 = xor i32 %v3_1bcdf, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1bce2 = icmp eq i32 %v3_1bce2, 0
  store i32 %v3_1bce2, i32* @eax, align 8
  br i1 %v4_1bce2, label %bb, label %dec_label_pc_1bceb

bb:                                               ; preds = %dec_label_pc_1bcdf
  %v1_1bce9 = call i32 @function_1bcf0()
  br label %dec_label_pc_1bceb

dec_label_pc_1bceb:                               ; preds = %bb, %dec_label_pc_1bcdf
  %v2_1bce9 = phi i32 [ %v1_1bce9, %bb ], [ %v3_1bce2, %dec_label_pc_1bcdf ]
  ret i32 %v2_1bce9
}

define i32 @function_1bcf0() local_unnamed_addr {
dec_label_pc_1bcf0:
  %v0_1bcf0 = load i32, i32* @ebp, align 4
  %v1_1bcf6 = inttoptr i32 %v0_1bcf0 to i32*
  %v2_1bcf6 = load i32, i32* %v1_1bcf6, align 4
  store i32 %v2_1bcf6, i32* @ebp, align 4
  %v0_1bcf7 = load i32, i32* @eax, align 8
  ret i32 %v0_1bcf7
}

define i32 @_ZN5boost8signals25slot1IbxNS_8functionIFbxEEEEC1ERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bcf8:
  %v2_1bd23 = call i32 @unknown_370c8(i32 %arg1, i32 %arg2)
  %v1_1bd2b = add i32 %arg2, 12
  %v1_1bd31 = add i32 %arg1, 12
  %v2_1bd3b = call i32 @unknown_3b8e4(i32 %v1_1bd31, i32 %v1_1bd2b)
  %v0_1bd40 = call i32 @function_1bd59()
  ret i32 %v0_1bd40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bd43() local_unnamed_addr {
dec_label_pc_1bd43:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bd43 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1bd43
}

define i32 @function_1bd59() local_unnamed_addr {
dec_label_pc_1bd59:
  %v0_1bd59 = load i32, i32* @ebp, align 4
  %v1_1bd59 = add i32 %v0_1bd59, -12
  %v2_1bd59 = inttoptr i32 %v1_1bd59 to i32*
  %v3_1bd59 = load i32, i32* %v2_1bd59, align 4
  %v3_1bd5c = xor i32 %v3_1bd59, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1bd5c = icmp eq i32 %v3_1bd5c, 0
  store i32 %v3_1bd5c, i32* @eax, align 8
  br i1 %v4_1bd5c, label %bb, label %dec_label_pc_1bd65

bb:                                               ; preds = %dec_label_pc_1bd59
  %v1_1bd63 = call i32 @function_1bd6a()
  br label %dec_label_pc_1bd65

dec_label_pc_1bd65:                               ; preds = %bb, %dec_label_pc_1bd59
  %v2_1bd63 = phi i32 [ %v1_1bd63, %bb ], [ %v3_1bd5c, %dec_label_pc_1bd59 ]
  ret i32 %v2_1bd63
}

define i32 @function_1bd6a() local_unnamed_addr {
dec_label_pc_1bd6a:
  %v0_1bd6f = load i32, i32* @eax, align 8
  ret i32 %v0_1bd6f
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEC1ERKSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bd70:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_1bd94 = call i32 @function_2a9fe(i32 %tmp104)
  store i32 ptrtoint (%vtable_339dc_type* @global_var_339dc.1998 to i32), i32* %arg1, align 4
  %v1_1bda5 = add i32 %tmp104, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_1bdb2 = call i32 @unknown_37a68(i32 %v1_1bda5, i32 %arg2)
  %v1_1bdc8 = add i32 %tmp104, 68
  store i32 %v1_1bdc8, i32* @eax, align 8
  %v1_1bdce = call i32 @function_33530(i32 %v1_1bdc8)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1be18

bb:                                               ; preds = %dec_label_pc_1bd70
  %v1_1be16 = call i32 @function_1be1d()
  br label %dec_label_pc_1be18

dec_label_pc_1be18:                               ; preds = %bb, %dec_label_pc_1bd70
  %v2_1be16 = phi i32 [ %v1_1be16, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1bd70 ]
  ret i32 %v2_1be16

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
}

define i32 @function_1be1d() local_unnamed_addr {
dec_label_pc_1be1d:
  %v0_1be22 = load i32, i32* @eax, align 8
  ret i32 %v0_1be22
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEC1ISF_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1be24:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1be4c = add i32 %tmp104, 4
  %v2_1be59 = call i32 @unknown_3ba52(i32 %v1_1be4c, i32 %arg2)
  store i32 %tmp104, i32* @eax, align 8
  %v3_1be72 = call i32 @function_1e369(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1be83

bb:                                               ; preds = %dec_label_pc_1be24
  %v1_1be81 = call i32 @function_1be88()
  br label %dec_label_pc_1be83

dec_label_pc_1be83:                               ; preds = %bb, %dec_label_pc_1be24
  %v2_1be81 = phi i32 [ %v1_1be81, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1be24 ]
  ret i32 %v2_1be81

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_1be88() local_unnamed_addr {
dec_label_pc_1be88:
  %v0_1be89 = load i32, i32* @eax, align 8
  ret i32 %v0_1be89
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1be8a:
  %v2_1bea4 = load i32, i32* %arg1, align 4
  %v1_1bea6 = icmp eq i32 %v2_1bea4, 0
  %v1_1bea8 = icmp eq i1 %v1_1bea6, false
  br i1 %v1_1bea8, label %bb, label %dec_label_pc_1beaa

bb:                                               ; preds = %dec_label_pc_1be8a
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1bea8 = call i32 @function_1bece(i32 %tmp105)
  br label %dec_label_pc_1beaa

dec_label_pc_1beaa:                               ; preds = %bb, %dec_label_pc_1be8a
  %v3_1bec2 = phi i32 [ %v3_1bea8, %bb ], [ %v2_1bea4, %dec_label_pc_1be8a ]
  ret i32 %v3_1bec2

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1bece(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bece:
  %v0_1bece = load i32, i32* @ebp, align 4
  %v1_1bece = add i32 %v0_1bece, -28
  %v2_1bece = inttoptr i32 %v1_1bece to i32*
  %v3_1bece = load i32, i32* %v2_1bece, align 4
  %v1_1bed1 = inttoptr i32 %v3_1bece to i32*
  %v2_1bed1 = load i32, i32* %v1_1bed1, align 4
  ret i32 %v2_1bed1
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bee6:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1bf12

bb:                                               ; preds = %dec_label_pc_1bee6
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1bf10 = call i32 @function_1bf17(i32 %tmp102)
  br label %dec_label_pc_1bf12

dec_label_pc_1bf12:                               ; preds = %bb, %dec_label_pc_1bee6
  %v3_1bf10 = phi i32 [ %v2_1bf10, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1bee6 ]
  ret i32 %v3_1bf10

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1bf17(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf17:
  %v0_1bf18 = load i32, i32* @eax, align 8
  ret i32 %v0_1bf18
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf1a:
  %v2_1bf44 = call i32 @unknown_3bbd4(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1bf5b

bb:                                               ; preds = %dec_label_pc_1bf1a
  %v1_1bf59 = call i32 @function_1bf60()
  br label %dec_label_pc_1bf5b

dec_label_pc_1bf5b:                               ; preds = %bb, %dec_label_pc_1bf1a
  %v2_1bf59 = phi i32 [ %v1_1bf59, %bb ], [ %arg1, %dec_label_pc_1bf1a ]
  ret i32 %v2_1bf59

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1bf60() local_unnamed_addr {
dec_label_pc_1bf60:
  %v0_1bf61 = load i32, i32* @eax, align 8
  ret i32 %v0_1bf61
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE11upper_boundERSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bf64:
  %v3_1bf9b = call i32 @unknown_3bc68(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1bfb2

bb:                                               ; preds = %dec_label_pc_1bf64
  %v1_1bfb0 = call i32 @function_1bfb7()
  br label %dec_label_pc_1bfb2

dec_label_pc_1bfb2:                               ; preds = %bb, %dec_label_pc_1bf64
  %v2_1bfb0 = phi i32 [ %v1_1bfb0, %bb ], [ %arg1, %dec_label_pc_1bf64 ]
  ret i32 %v2_1bfb0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1bfb7() local_unnamed_addr {
dec_label_pc_1bfb7:
  %v0_1bfb8 = load i32, i32* @eax, align 8
  ret i32 %v0_1bfb8
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IbxNS0_8functionIFbxEEEEENS1_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bfbc:
  store i32 %arg1, i32* @eax, align 8
  %v1_1bfd9 = call i32 @function_31114(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1bfea

bb:                                               ; preds = %dec_label_pc_1bfbc
  %v1_1bfe8 = call i32 @function_1bfef()
  br label %dec_label_pc_1bfea

dec_label_pc_1bfea:                               ; preds = %bb, %dec_label_pc_1bfbc
  %v2_1bfe8 = phi i32 [ %v1_1bfe8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1bfbc ]
  ret i32 %v2_1bfe8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bfef() local_unnamed_addr {
dec_label_pc_1bfef:
  %v0_1bff0 = load i32, i32* @eax, align 8
  ret i32 %v0_1bff0
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE8m_insertERKSt17_Rb_tree_iteratorIS7_IKSB_St14_List_iteratorISJ_EEERSM_RKSJ_(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bff2:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp126 = ptrtoint i32* %arg2 to i32
  %v2_1c023 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1c029 = call i32 @unknown_3bd72(i32 %v2_1c023, i32 %tmp126)
  %v2_1c02e = ptrtoint i32* %stack_var_-56 to i32
  %v3_1c042 = call i32 @unknown_3bdac(i32 %v2_1c02e, i32 %arg1, i32 %v2_1c023)
  %v2_1c04d = ptrtoint i32* %stack_var_-48 to i32
  %v3_1c057 = load i32, i32* %stack_var_-56, align 4
  %v4_1c065 = call i32 @unknown_3be6a(i32 %v2_1c04d, i32 %arg1, i32 %v3_1c057, i32 %arg4)
  %v1_1c070 = add i32 %arg1, 8
  %v2_1c073 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1c07d = call i32 @unknown_37f0c(i32 %v2_1c073, i32 %v1_1c070)
  %v2_1c092 = call i32 @unknown_3bfa8(i32 %tmp126, i32 %v2_1c073)
  %v4_1c097 = trunc i32 %v2_1c092 to i8
  %v5_1c097 = icmp eq i8 %v4_1c097, 0
  br i1 %v5_1c097, label %dec_label_pc_1c0c7, label %dec_label_pc_1c09b

dec_label_pc_1c09b:                               ; preds = %dec_label_pc_1bff2
  %v1_1c0a1 = call i32 @unknown_3bf6e(i32 %tmp126)
  %v3_1c0b7 = call i32 @unknown_3bee4(i32 %arg1, i32 %arg3, i32 %v1_1c0a1)
  %v4_1c0bc = trunc i32 %v3_1c0b7 to i8
  %v5_1c0bc = icmp eq i8 %v4_1c0bc, 0
  br i1 %v5_1c0bc, label %dec_label_pc_1c0c7, label %dec_label_pc_1c0cc

dec_label_pc_1c0c7:                               ; preds = %dec_label_pc_1c09b, %dec_label_pc_1bff2
  br label %dec_label_pc_1c0cc

dec_label_pc_1c0cc:                               ; preds = %dec_label_pc_1c09b, %dec_label_pc_1c0c7
  %storemerge7 = phi i1 [ true, %dec_label_pc_1c0c7 ], [ false, %dec_label_pc_1c09b ]
  br i1 %storemerge7, label %dec_label_pc_1c0e7, label %dec_label_pc_1c0d0

dec_label_pc_1c0d0:                               ; preds = %dec_label_pc_1c0cc
  %v2_1c0d9 = load i32, i32* %arg2, align 4
  %v2_1c0e2 = call i32 @unknown_3bfe8(i32 %v1_1c070, i32 %v2_1c0d9)
  br label %dec_label_pc_1c0e7

dec_label_pc_1c0e7:                               ; preds = %dec_label_pc_1c0d0, %dec_label_pc_1c0cc
  %v2_1c0ed = ptrtoint i32* %stack_var_-40 to i32
  %v3_1c0fe = call i32 @unknown_3821a(i32 %v2_1c0ed, i32 %v1_1c070, i32 %arg3)
  %v2_1c10c = ptrtoint i32* %stack_var_-36 to i32
  %v2_1c116 = call i32 @unknown_37f0c(i32 %v2_1c10c, i32 %v1_1c070)
  %v2_1c12b = call i32 @unknown_3c02a(i32 %v2_1c0ed, i32 %v2_1c10c)
  %v4_1c130 = trunc i32 %v2_1c12b to i8
  %v5_1c130 = icmp eq i8 %v4_1c130, 0
  %v1_1c132 = icmp eq i1 %v5_1c130, false
  br i1 %v1_1c132, label %dec_label_pc_1c168, label %dec_label_pc_1c134

dec_label_pc_1c134:                               ; preds = %dec_label_pc_1c0e7
  %v1_1c13a = call i32 @unknown_3bf6e(i32 %v2_1c0ed)
  %v3_1c150 = call i32 @unknown_3bee4(i32 %arg1, i32 %v1_1c13a, i32 %arg3)
  %v1_1c155 = xor i32 %v3_1c150, 1
  %v4_1c155 = trunc i32 %v1_1c155 to i8
  %v5_1c158 = icmp ne i8 %v4_1c155, 0
  %phitmp139 = icmp eq i1 %v5_1c158, false
  br label %dec_label_pc_1c168

dec_label_pc_1c168:                               ; preds = %dec_label_pc_1c134, %dec_label_pc_1c0e7
  %storemerge = phi i1 [ false, %dec_label_pc_1c0e7 ], [ %phitmp139, %dec_label_pc_1c134 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_1c16c

bb:                                               ; preds = %dec_label_pc_1c168
  %v1_1c16a = call i32 @function_1c1c8()
  br label %dec_label_pc_1c16c

dec_label_pc_1c16c:                               ; preds = %bb, %dec_label_pc_1c168
  %v2_1c17a = ptrtoint i32* %stack_var_-32 to i32
  %v3_1c180 = call i32 @unknown_3c06a(i32 %v2_1c17a, i32 %arg3, i32 %v2_1c04d)
  %v2_1c18b = ptrtoint i32* %stack_var_-64 to i32
  %v3_1c19c = call i32 @unknown_3c0be(i32 %v2_1c18b, i32 %v1_1c070, i32 %v2_1c17a)
  %v1_1c1aa = call i32 @unknown_37fae(i32 %v2_1c17a)
  %v0_1c1af = call i32 @function_1c1c8()
  ret i32 %v0_1c1af

; uselistorder directives
  uselistorder i32 %v1_1c070, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @function_1c1c8, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3bee4, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3bf6e, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_37f0c, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 3, 0 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_1c0cc, { 1, 0 }
}

define i32 @function_1c1b2() local_unnamed_addr {
dec_label_pc_1c1b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c1b2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c1b2
}

define i32 @function_1c1c8() local_unnamed_addr {
dec_label_pc_1c1c8:
  %v0_1c1c8 = load i32, i32* @ebp, align 4
  %v1_1c1c8 = add i32 %v0_1c1c8, -12
  %v2_1c1c8 = inttoptr i32 %v1_1c1c8 to i32*
  %v3_1c1c8 = load i32, i32* %v2_1c1c8, align 4
  %v3_1c1cb = xor i32 %v3_1c1c8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1c1cb = icmp eq i32 %v3_1c1cb, 0
  store i32 %v3_1c1cb, i32* @eax, align 8
  br i1 %v4_1c1cb, label %bb, label %dec_label_pc_1c1d4

bb:                                               ; preds = %dec_label_pc_1c1c8
  %v1_1c1d2 = call i32 @function_1c1d9()
  br label %dec_label_pc_1c1d4

dec_label_pc_1c1d4:                               ; preds = %bb, %dec_label_pc_1c1c8
  %v2_1c1d2 = phi i32 [ %v1_1c1d2, %bb ], [ %v3_1c1cb, %dec_label_pc_1c1c8 ]
  ret i32 %v2_1c1d2
}

define i32 @function_1c1d9() local_unnamed_addr {
dec_label_pc_1c1d9:
  %v0_1c1dd = load i32, i32* @eax, align 8
  ret i32 %v0_1c1dd
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c1de:
  %v2_1c208 = call i32 @unknown_3c302(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE11lower_boundERSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c228:
  %v3_1c25f = call i32 @unknown_3c396(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1c276

bb:                                               ; preds = %dec_label_pc_1c228
  %v1_1c274 = call i32 @function_1c27b()
  br label %dec_label_pc_1c276

dec_label_pc_1c276:                               ; preds = %bb, %dec_label_pc_1c228
  %v2_1c274 = phi i32 [ %v1_1c274, %bb ], [ %arg1, %dec_label_pc_1c228 ]
  ret i32 %v2_1c274

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c27b() local_unnamed_addr {
dec_label_pc_1c27b:
  %v0_1c27c = load i32, i32* @eax, align 8
  ret i32 %v0_1c27c
}

define i32 @_ZN5boost9function1IvRKSsEC1IPFvS2_EEET_NS_11enable_if_cIXsrNS_11type_traits7ice_notIXsrNS_11is_integralIS7_EE5valueEEE5valueEiE4typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c280:
  %v1_1c2a9 = call i32 @function_2a3ec(i32 %arg1)
  %v2_1c2c6 = call i32 @unknown_3c46a(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost9function1IvRKSsE11move_assignERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c2de:
  %edx.global-to-local = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v15_1c2ff = icmp eq i32 %tmp105, %arg2
  br i1 %v15_1c2ff, label %bb, label %dec_label_pc_1c308

bb:                                               ; preds = %dec_label_pc_1c2de
  %v3_1c302 = call i32 @function_1c3b6(i32 %arg2, i32 %tmp105)
  br label %dec_label_pc_1c308

dec_label_pc_1c308:                               ; preds = %bb, %dec_label_pc_1c2de
  store i32 %arg2, i32* @eax, align 8
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_1c30e = call i32 @function_2a47e(i32 %arg2)
  %v1_1c313 = xor i32 %v1_1c30e, 1
  %v4_1c313 = trunc i32 %v1_1c313 to i8
  %v5_1c316 = icmp eq i8 %v4_1c313, 0
  br i1 %v5_1c316, label %dec_label_pc_1c382, label %dec_label_pc_1c31a

dec_label_pc_1c31a:                               ; preds = %dec_label_pc_1c308
  %v1_1c31d = inttoptr i32 %arg2 to i32*
  %v2_1c31d = load i32, i32* %v1_1c31d, align 4
  store i32 %v2_1c31d, i32* %edx.global-to-local, align 8
  store i32 %v2_1c31d, i32* %arg1, align 4
  store i32 %tmp105, i32* @eax, align 8
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1c32a = call i32 @function_2a4b2(i32 %tmp105)
  %v4_1c32f = trunc i32 %v1_1c32a to i8
  %v5_1c32f = icmp eq i8 %v4_1c32f, 0
  store i32 %tmp105, i32* @eax, align 8
  br i1 %v5_1c32f, label %dec_label_pc_1c34d, label %dec_label_pc_1c333

dec_label_pc_1c333:                               ; preds = %dec_label_pc_1c31a
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %v1_1c339 = add i32 %arg2, 4
  %v2_1c339 = inttoptr i32 %v1_1c339 to i32*
  %v3_1c339 = load i32, i32* %v2_1c339, align 4
  %v2_1c33c = add i32 %tmp105, 4
  %v3_1c33c = inttoptr i32 %v2_1c33c to i32*
  store i32 %v3_1c339, i32* %v3_1c33c, align 4
  %v0_1c33f = load i32, i32* %edx.global-to-local, align 8
  %v1_1c33f = add i32 %v0_1c33f, 8
  %v2_1c33f = inttoptr i32 %v1_1c33f to i32*
  %v3_1c33f = load i32, i32* %v2_1c33f, align 4
  %v1_1c342 = load i32, i32* @eax, align 8
  %v2_1c342 = add i32 %v1_1c342, 8
  %v3_1c342 = inttoptr i32 %v2_1c342 to i32*
  store i32 %v3_1c33f, i32* %v3_1c342, align 4
  %v0_1c345 = load i32, i32* %edx.global-to-local, align 8
  %v1_1c345 = add i32 %v0_1c345, 12
  %v2_1c345 = inttoptr i32 %v1_1c345 to i32*
  %v3_1c345 = load i32, i32* %v2_1c345, align 4
  store i32 %v3_1c345, i32* %edx.global-to-local, align 8
  %v1_1c348 = load i32, i32* @eax, align 8
  %v2_1c348 = add i32 %v1_1c348, 12
  %v3_1c348 = inttoptr i32 %v2_1c348 to i32*
  store i32 %v3_1c345, i32* %v3_1c348, align 4
  br label %dec_label_pc_1c377

dec_label_pc_1c34d:                               ; preds = %dec_label_pc_1c31a
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1c353 = call i32 @function_31b8c(i32 %tmp105)
  %v1_1c35d = add i32 %tmp105, 4
  %v1_1c363 = add i32 %arg2, 4
  store i32 %v1_1c363, i32* %edx.global-to-local, align 8
  store i32 %v1_1c363, i32* %stack_var_-60, align 4
  br label %dec_label_pc_1c377

dec_label_pc_1c377:                               ; preds = %dec_label_pc_1c34d, %dec_label_pc_1c333
  %stack_var_-56.0 = phi i32 [ %v1_1c35d, %dec_label_pc_1c34d ], [ %tmp98, %dec_label_pc_1c333 ]
  store i32 0, i32* %v1_1c31d, align 4
  %v0_1c380 = load i32, i32* %stack_var_-60, align 4
  %v2_1c380 = call i32 @function_1c3b6(i32 %v0_1c380, i32 %stack_var_-56.0)
  ret i32 %v2_1c380

dec_label_pc_1c382:                               ; preds = %dec_label_pc_1c308
  store i32 %tmp105, i32* %stack_var_-60, align 4
  %v1_1c388 = call i32 @function_2f48c(i32 %tmp105)
  %v2_1c38d = call i32 @function_1c3b6(i32 %tmp105, i32 %tmp98)
  ret i32 %v2_1c38d

; uselistorder directives
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %tmp105, { 1, 11, 10, 3, 6, 5, 2, 4, 9, 8, 7, 12, 0 }
  uselistorder i32 %tmp98, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1c3b6, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 4, 7, 6, 5, 8, 0 }
}

define i32 @function_1c390() local_unnamed_addr {
dec_label_pc_1c390:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c390 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c390
}

define i32 @function_1c3b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c3b6:
  %v0_1c3b7 = load i32, i32* @ebp, align 4
  %v1_1c3b7 = add i32 %v0_1c3b7, -12
  %v2_1c3b7 = inttoptr i32 %v1_1c3b7 to i32*
  %v3_1c3b7 = load i32, i32* %v2_1c3b7, align 4
  %v3_1c3ba = xor i32 %v3_1c3b7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1c3ba = icmp eq i32 %v3_1c3ba, 0
  store i32 %v3_1c3ba, i32* @eax, align 8
  br i1 %v4_1c3ba, label %bb, label %dec_label_pc_1c3c3

bb:                                               ; preds = %dec_label_pc_1c3b6
  %v1_1c3c1 = call i32 @function_1c3c8()
  br label %dec_label_pc_1c3c3

dec_label_pc_1c3c3:                               ; preds = %bb, %dec_label_pc_1c3b6
  %v2_1c3c1 = phi i32 [ %v1_1c3c1, %bb ], [ %v3_1c3ba, %dec_label_pc_1c3b6 ]
  ret i32 %v2_1c3c1
}

define i32 @function_1c3c8() local_unnamed_addr {
dec_label_pc_1c3c8:
  %v0_1c3cd = load i32, i32* @eax, align 8
  ret i32 %v0_1c3cd
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitorclIFvRKSsEEEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c3ce:
  %stack_var_-17 = alloca i32, align 4
  %v2_1c3eb = ptrtoint i32* %stack_var_-17 to i32
  %v3_1c3ff = call i32 @unknown_3c628(i32 %arg1, i32 %arg2, i32 %v2_1c3eb)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1c410

bb:                                               ; preds = %dec_label_pc_1c3ce
  %v1_1c40e = call i32 @function_1c415()
  br label %dec_label_pc_1c410

dec_label_pc_1c410:                               ; preds = %bb, %dec_label_pc_1c3ce
  %v2_1c40e = phi i32 [ %v1_1c40e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1c3ce ]
  ret i32 %v2_1c40e
}

define i32 @function_1c415() local_unnamed_addr {
dec_label_pc_1c415:
  %v0_1c416 = load i32, i32* @eax, align 8
  ret i32 %v0_1c416
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE35nolock_force_unique_connection_listEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c418:
  %v1_1c438 = call i32 @unknown_3c6c2(i32 %arg1)
  %v1_1c43d = xor i32 %v1_1c438, 1
  %v4_1c43d = trunc i32 %v1_1c43d to i8
  %v5_1c440 = icmp eq i8 %v4_1c43d, 0
  br i1 %v5_1c440, label %bb, label %dec_label_pc_1c448

bb:                                               ; preds = %dec_label_pc_1c418
  %v1_1c442 = call i32 @function_1c4e2()
  br label %dec_label_pc_1c448

dec_label_pc_1c448:                               ; preds = %bb, %dec_label_pc_1c418
  %v1_1c44e = call i32 @unknown_3c6fa(i32 %arg1)
  %v1_1c45b = call i32 @unknown_3461a(i32 %arg1)
  store i32 %v1_1c45b, i32* @eax, align 8
  %v1_1c463 = call i32 @function_34676(i32 %v1_1c45b)
  ret i32 %v1_1c463

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1c475() local_unnamed_addr {
dec_label_pc_1c475:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c475 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c475 = add i32 %v0_1c475, 612141507
  %v2_1c475 = inttoptr i32 %v1_1c475 to i32*
  %v3_1c475 = load i32, i32* %v2_1c475, align 4
  %v4_1c475 = add i32 %v3_1c475, -1
  store i32 %v4_1c475, i32* %v2_1c475, align 4
  %v0_1c47b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c47b = add i32 %v0_1c47b, -1996217228
  %v2_1c47b = inttoptr i32 %v1_1c47b to i8*
  %v3_1c47b = load i8, i8* %v2_1c47b, align 1
  %v5_1c47b = trunc i32 %v0_1c47b to i8
  %v6_1c47b = or i8 %v3_1c47b, %v5_1c47b
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1c47b, i8* %v2_1c47b, align 1
  %v0_1c481 = load i32, i32* %eax.global-to-local, align 8
  %v1_1c481 = trunc i32 %v0_1c481 to i8
  %v2_1c481 = load i1, i1* %cf.global-to-local, align 1
  %v3_1c481 = zext i1 %v2_1c481 to i32
  %v4_1c481 = add i32 %v0_1c481, 220
  %v5_1c481 = add i32 %v4_1c481, %v3_1c481
  %v17_1c481 = icmp ult i8 %v1_1c481, 36
  %v18_1c481 = or i1 %v2_1c481, %v17_1c481
  store i1 %v18_1c481, i1* %cf.global-to-local, align 1
  %v31_1c481 = and i32 %v5_1c481, 255
  %v33_1c481 = and i32 %v0_1c481, -256
  %v34_1c481 = or i32 %v31_1c481, %v33_1c481
  store i32 %v34_1c481, i32* %eax.global-to-local, align 8
  %v0_1c483 = call i32 @unknown_3c7e0()
  store i32 %v0_1c483, i32* %eax.global-to-local, align 8
  %v0_1c488 = load i32, i32* @ebp, align 4
  %v1_1c488 = add i32 %v0_1c488, -44
  %v2_1c488 = inttoptr i32 %v1_1c488 to i32*
  %v3_1c488 = load i32, i32* %v2_1c488, align 4
  store i32 %v3_1c488, i32* %eax.global-to-local, align 8
  %v0_1c48b = load i32, i32* %ebx.global-to-local, align 8
  %v2_1c492 = call i32 @unknown_3c878(i32 %v3_1c488, i32 %v0_1c48b)
  store i32 %v2_1c492, i32* %eax.global-to-local, align 8
  %v0_1c497 = load i32, i32* @ebp, align 4
  %v1_1c497 = add i32 %v0_1c497, -44
  %v2_1c497 = inttoptr i32 %v1_1c497 to i32*
  %v3_1c497 = load i32, i32* %v2_1c497, align 4
  store i32 %v3_1c497, i32* %eax.global-to-local, align 8
  %v1_1c49d = call i32 @unknown_3461a(i32 %v3_1c497)
  store i32 %v1_1c49d, i32* @eax, align 8
  %v1_1c4a5 = call i32 @function_34676(i32 %v1_1c49d)
  %v0_1c4ac = load i32, i32* @ebp, align 4
  %v1_1c4ac = add i32 %v0_1c4ac, -32
  store i32 %v1_1c4ac, i32* %eax.global-to-local, align 8
  %v2_1c4b6 = call i32 @unknown_3cb52(i32 %v1_1c4ac, i32 %v1_1c4a5)
  %v0_1c4bb = load i32, i32* @esp, align 4
  %v5_1c4bb = icmp ult i32 %v0_1c4bb, 4
  store i1 %v5_1c4bb, i1* %cf.global-to-local, align 1
  %v0_1c4c6 = load i32, i32* @ebp, align 4
  %v1_1c4c6 = add i32 %v0_1c4c6, -32
  store i32 %v1_1c4c6, i32* %eax.global-to-local, align 8
  %v1_1c4d5 = add i32 %v0_1c4c6, -44
  %v2_1c4d5 = inttoptr i32 %v1_1c4d5 to i32*
  %v3_1c4d5 = load i32, i32* %v2_1c4d5, align 4
  store i32 %v3_1c4d5, i32* %eax.global-to-local, align 8
  %v4_1c4db = call i32 @unknown_3c962(i32 %v3_1c4d5, i32 1, i32 %v1_1c4c6, i32 0)
  store i32 %v4_1c4db, i32* %eax.global-to-local, align 8
  %v0_1c4e0 = call i32 @function_1c513()
  store i32 %v0_1c4e0, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c4e0

; uselistorder directives
  uselistorder i1 %v2_1c481, { 1, 0 }
  uselistorder i32 %v0_1c481, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_34676, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3461a, { 1, 0 }
}

define i32 @function_1c4e2() local_unnamed_addr {
dec_label_pc_1c4e2:
  %v0_1c4f2 = load i32, i32* @ebp, align 4
  %v1_1c4f2 = add i32 %v0_1c4f2, -44
  %v2_1c4f2 = inttoptr i32 %v1_1c4f2 to i32*
  %v3_1c4f2 = load i32, i32* %v2_1c4f2, align 4
  %v3_1c4f8 = call i32 @unknown_3cb9c(i32 %v3_1c4f2, i32 1, i32 2)
  %v0_1c4fd = call i32 @function_1c513()
  ret i32 %v0_1c4fd
}

define i32 @function_1c513() local_unnamed_addr {
dec_label_pc_1c513:
  %v0_1c513 = load i32, i32* @ebp, align 4
  %v1_1c513 = add i32 %v0_1c513, -28
  %v2_1c513 = inttoptr i32 %v1_1c513 to i32*
  %v3_1c513 = load i32, i32* %v2_1c513, align 4
  %v3_1c516 = xor i32 %v3_1c513, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1c516
}

define i32 @_ZN5boost8signals25slot1IvRKSsNS_8functionIFvS3_EEEEC1ERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c52c:
  %v2_1c557 = call i32 @unknown_378fc(i32 %arg1, i32 %arg2)
  %v1_1c55f = add i32 %arg2, 12
  %v1_1c565 = add i32 %arg1, 12
  %v2_1c56f = call i32 @unknown_3cdbe(i32 %v1_1c565, i32 %v1_1c55f)
  %v0_1c574 = call i32 @function_1c58d()
  ret i32 %v0_1c574

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c577() local_unnamed_addr {
dec_label_pc_1c577:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c577 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c577
}

define i32 @function_1c58d() local_unnamed_addr {
dec_label_pc_1c58d:
  %v0_1c58d = load i32, i32* @ebp, align 4
  %v1_1c58d = add i32 %v0_1c58d, -12
  %v2_1c58d = inttoptr i32 %v1_1c58d to i32*
  %v3_1c58d = load i32, i32* %v2_1c58d, align 4
  %v3_1c590 = xor i32 %v3_1c58d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1c590 = icmp eq i32 %v3_1c590, 0
  store i32 %v3_1c590, i32* @eax, align 8
  br i1 %v4_1c590, label %bb, label %dec_label_pc_1c599

bb:                                               ; preds = %dec_label_pc_1c58d
  %v1_1c597 = call i32 @function_1c59e()
  br label %dec_label_pc_1c599

dec_label_pc_1c599:                               ; preds = %bb, %dec_label_pc_1c58d
  %v2_1c597 = phi i32 [ %v1_1c597, %bb ], [ %v3_1c590, %dec_label_pc_1c58d ]
  ret i32 %v2_1c597
}

define i32 @function_1c59e() local_unnamed_addr {
dec_label_pc_1c59e:
  %v0_1c5a3 = load i32, i32* @eax, align 8
  ret i32 %v0_1c5a3
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEEC1ERKSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c5a4:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1c5be(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5be:
  %v0_1c5be = load i32, i32* @ebp, align 4
  %v1_1c5be = add i32 %v0_1c5be, 1
  store i32 %v1_1c5be, i32* @ebp, align 4
  %v1_1c5c2 = add i32 %v0_1c5be, -27
  %v2_1c5c2 = inttoptr i32 %v1_1c5c2 to i32*
  %v3_1c5c2 = load i32, i32* %v2_1c5c2, align 4
  store i32 %v3_1c5c2, i32* @eax, align 8
  %v1_1c5c8 = call i32 @function_2b232(i32 %v3_1c5c2)
  %v0_1c5cd = load i32, i32* @ebp, align 4
  %v1_1c5cd = add i32 %v0_1c5cd, -28
  %v2_1c5cd = inttoptr i32 %v1_1c5cd to i32*
  %v3_1c5cd = load i32, i32* %v2_1c5cd, align 4
  %v1_1c5d0 = inttoptr i32 %v3_1c5cd to i32*
  store i32 ptrtoint (%vtable_339bc_type* @global_var_339bc.2000 to i32), i32* %v1_1c5d0, align 4
  %v0_1c5d6 = load i32, i32* @ebp, align 4
  %v1_1c5d6 = add i32 %v0_1c5d6, -28
  %v2_1c5d6 = inttoptr i32 %v1_1c5d6 to i32*
  %v3_1c5d6 = load i32, i32* %v2_1c5d6, align 4
  %v1_1c5d9 = add i32 %v3_1c5d6, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_1c5dc = add i32 %v0_1c5d6, -32
  %v2_1c5dc = inttoptr i32 %v1_1c5dc to i32*
  %v3_1c5dc = load i32, i32* %v2_1c5dc, align 4
  %v2_1c5e6 = call i32 @unknown_38ad0(i32 %v1_1c5d9, i32 %v3_1c5dc)
  %v0_1c5eb = load i32, i32* @ebp, align 4
  %v1_1c5eb = add i32 %v0_1c5eb, -28
  %v2_1c5eb = inttoptr i32 %v1_1c5eb to i32*
  %v3_1c5eb = load i32, i32* %v2_1c5eb, align 4
  %v1_1c5ee = add i32 %v3_1c5eb, 44
  %v1_1c5f4 = call i32 @function_2b63a(i32 %v1_1c5ee)
  %v0_1c5f9 = load i32, i32* @ebp, align 4
  %v1_1c5f9 = add i32 %v0_1c5f9, -28
  %v2_1c5f9 = inttoptr i32 %v1_1c5f9 to i32*
  %v3_1c5f9 = load i32, i32* %v2_1c5f9, align 4
  %v1_1c5fc = add i32 %v3_1c5f9, 68
  store i32 %v1_1c5fc, i32* @eax, align 8
  %v1_1c602 = call i32 @function_33d64(i32 %v1_1c5fc)
  %v0_1c607 = call i32 @function_1c640()
  ret i32 %v0_1c607
}

define i32 @function_1c609() local_unnamed_addr {
dec_label_pc_1c609:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1c609 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1c609, i32* @ebx, align 8
  %v0_1c60b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1c60b = add i32 %v0_1c60b, -28
  %v2_1c60b = inttoptr i32 %v1_1c60b to i32*
  %v3_1c60b = load i32, i32* %v2_1c60b, align 4
  %v1_1c60e = add i32 %v3_1c60b, 44
  store i32 %v1_1c60e, i32* %eax.global-to-local, align 8
  %v3_1c619 = load i32, i32* %v2_1c60b, align 4
  %v1_1c61c = add i32 %v3_1c619, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_1c61c, i32* %eax.global-to-local, align 8
  %v1_1c627 = call i32 @function_1c62b(i32 %v1_1c61c)
  store i32 %v1_1c627, i32* %eax.global-to-local, align 8
  ret i32 %v1_1c627
}

define i32 @function_1c629() local_unnamed_addr {
dec_label_pc_1c629:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c629 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1c629
}

define i32 @function_1c62b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c62b:
  %v0_1c636 = load i32, i32* @ebx, align 8
  ret i32 %v0_1c636
}

define i32 @function_1c640() local_unnamed_addr {
dec_label_pc_1c640:
  %v0_1c640 = load i32, i32* @ebp, align 4
  %v1_1c640 = add i32 %v0_1c640, -12
  %v2_1c640 = inttoptr i32 %v1_1c640 to i32*
  %v3_1c640 = load i32, i32* %v2_1c640, align 4
  %v3_1c643 = xor i32 %v3_1c640, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1c643 = icmp eq i32 %v3_1c643, 0
  store i32 %v3_1c643, i32* @eax, align 8
  br i1 %v4_1c643, label %bb, label %dec_label_pc_1c64c

bb:                                               ; preds = %dec_label_pc_1c640
  %v1_1c64a = call i32 @function_1c651()
  br label %dec_label_pc_1c64c

dec_label_pc_1c64c:                               ; preds = %bb, %dec_label_pc_1c640
  %v2_1c64a = phi i32 [ %v1_1c64a, %bb ], [ %v3_1c643, %dec_label_pc_1c640 ]
  ret i32 %v2_1c64a
}

define i32 @function_1c651() local_unnamed_addr {
dec_label_pc_1c651:
  %v0_1c656 = load i32, i32* @eax, align 8
  ret i32 %v0_1c656
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEC1ISH_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c658:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1c680 = add i32 %tmp104, 4
  %v2_1c68d = call i32 @unknown_3cf2c(i32 %v1_1c680, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSE_EEEEENS1_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c6be:
  %v2_1c6d8 = load i32, i32* %arg1, align 4
  %v1_1c6da = icmp eq i32 %v2_1c6d8, 0
  %v1_1c6dc = icmp eq i1 %v1_1c6da, false
  br i1 %v1_1c6dc, label %bb, label %dec_label_pc_1c6de

bb:                                               ; preds = %dec_label_pc_1c6be
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1c6dc = call i32 @function_1c702(i32 %tmp105)
  br label %dec_label_pc_1c6de

dec_label_pc_1c6de:                               ; preds = %bb, %dec_label_pc_1c6be
  %v3_1c6f6 = phi i32 [ %v3_1c6dc, %bb ], [ %v2_1c6d8, %dec_label_pc_1c6be ]
  ret i32 %v3_1c6f6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c702(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c702:
  %v0_1c702 = load i32, i32* @ebp, align 4
  %v1_1c702 = add i32 %v0_1c702, -28
  %v2_1c702 = inttoptr i32 %v1_1c702 to i32*
  %v3_1c702 = load i32, i32* %v2_1c702, align 4
  %v1_1c705 = inttoptr i32 %v3_1c702 to i32*
  %v2_1c705 = load i32, i32* %v1_1c705, align 4
  store i32 %v2_1c705, i32* @eax, align 8
  %v1_1c707 = add i32 %v0_1c702, -12
  %v2_1c707 = inttoptr i32 %v1_1c707 to i32*
  %v3_1c707 = load i32, i32* %v2_1c707, align 4
  %v4_1c70a = icmp eq i32 %v3_1c707, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1c70a, label %bb, label %dec_label_pc_1c713

bb:                                               ; preds = %dec_label_pc_1c702
  %v1_1c711 = call i32 @function_1c718()
  br label %dec_label_pc_1c713

dec_label_pc_1c713:                               ; preds = %bb, %dec_label_pc_1c702
  %v2_1c711 = phi i32 [ %v1_1c711, %bb ], [ %v2_1c705, %dec_label_pc_1c702 ]
  ret i32 %v2_1c711
}

define i32 @function_1c718() local_unnamed_addr {
dec_label_pc_1c718:
  %v0_1c719 = load i32, i32* @eax, align 8
  ret i32 %v0_1c719
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c71a:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1c746

bb:                                               ; preds = %dec_label_pc_1c71a
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1c744 = call i32 @function_1c74b(i32 %tmp102)
  br label %dec_label_pc_1c746

dec_label_pc_1c746:                               ; preds = %bb, %dec_label_pc_1c71a
  %v3_1c744 = phi i32 [ %v2_1c744, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1c71a ]
  ret i32 %v3_1c744

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c74b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c74b:
  %v0_1c74c = load i32, i32* @eax, align 8
  ret i32 %v0_1c74c
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c74e:
  %v2_1c778 = call i32 @unknown_3d0ae(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c798:
  %v3_1c7cf = call i32 @unknown_3d142(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1c7e6

bb:                                               ; preds = %dec_label_pc_1c798
  %v1_1c7e4 = call i32 @function_1c7eb()
  br label %dec_label_pc_1c7e6

dec_label_pc_1c7e6:                               ; preds = %bb, %dec_label_pc_1c798
  %v2_1c7e4 = phi i32 [ %v1_1c7e4, %bb ], [ %arg1, %dec_label_pc_1c798 ]
  ret i32 %v2_1c7e4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c7eb() local_unnamed_addr {
dec_label_pc_1c7eb:
  %v0_1c7ec = load i32, i32* @eax, align 8
  ret i32 %v0_1c7ec
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IvRKSsNS0_8functionIFvSD_EEEEENS1_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c7f0:
  %v1_1c80d = call i32 @function_31948(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1c81e

bb:                                               ; preds = %dec_label_pc_1c7f0
  %v1_1c81c = call i32 @function_1c823()
  br label %dec_label_pc_1c81e

dec_label_pc_1c81e:                               ; preds = %bb, %dec_label_pc_1c7f0
  %v2_1c81c = phi i32 [ %v1_1c81c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1c7f0 ]
  ret i32 %v2_1c81c
}

define i32 @function_1c823() local_unnamed_addr {
dec_label_pc_1c823:
  %v0_1c824 = load i32, i32* @eax, align 8
  ret i32 %v0_1c824
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE8m_insertERKSt17_Rb_tree_iteratorIS7_IKSB_St14_List_iteratorISL_EEERSO_RKSL_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c826:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1c857 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1c85d = call i32 @unknown_3d24c(i32 %v2_1c857, i32 %arg2)
  %v2_1c862 = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_1c862
}

define i32 @function_1c874(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c874:
  %v0_1c876 = call i32 @unknown_3d286()
  %v0_1c87e = load i32, i32* @ebp, align 4
  %v1_1c87e = add i32 %v0_1c87e, -76
  %v2_1c87e = inttoptr i32 %v1_1c87e to i32*
  %v3_1c87e = load i32, i32* %v2_1c87e, align 4
  %v1_1c881 = add i32 %v0_1c87e, -44
  %v1_1c884 = add i32 %v0_1c87e, -88
  %v2_1c884 = inttoptr i32 %v1_1c884 to i32*
  %v3_1c884 = load i32, i32* %v2_1c884, align 4
  %v1_1c88b = add i32 %v0_1c87e, -52
  %v2_1c88b = inttoptr i32 %v1_1c88b to i32*
  %v3_1c88b = load i32, i32* %v2_1c88b, align 4
  %v4_1c899 = call i32 @unknown_3d344(i32 %v1_1c881, i32 %v3_1c87e, i32 %v3_1c88b, i32 %v3_1c884)
  %v0_1c8a1 = load i32, i32* @ebp, align 4
  %v1_1c8a7 = add i32 %v0_1c8a1, -40
  ret i32 %v1_1c8a7

; uselistorder directives
  uselistorder i32 %v0_1c87e, { 1, 0, 2, 3 }
}

define i32 @function_1c8ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c8ac:
  %v0_1c8ac = load i32, i32* @eax, align 8
  %v11_1c8ac = and i32 %v0_1c8ac, -252
  %v1_1c8b1 = call i32 @unknown_38f74(i32 %v11_1c8ac)
  %v0_1c8b9 = load i32, i32* @ebp, align 4
  %v1_1c8b9 = add i32 %v0_1c8b9, -40
  %v1_1c8c0 = add i32 %v0_1c8b9, -80
  %v2_1c8c0 = inttoptr i32 %v1_1c8c0 to i32*
  %v3_1c8c0 = load i32, i32* %v2_1c8c0, align 4
  %v2_1c8c6 = call i32 @unknown_3d482(i32 %v3_1c8c0, i32 %v1_1c8b9)
  %v4_1c8cb = trunc i32 %v2_1c8c6 to i8
  %v5_1c8cb = icmp eq i8 %v4_1c8cb, 0
  br i1 %v5_1c8cb, label %dec_label_pc_1c8fb, label %dec_label_pc_1c8cf

dec_label_pc_1c8cf:                               ; preds = %dec_label_pc_1c8ac
  %v0_1c8cf = load i32, i32* @ebp, align 4
  %v1_1c8cf = add i32 %v0_1c8cf, -80
  %v2_1c8cf = inttoptr i32 %v1_1c8cf to i32*
  %v3_1c8cf = load i32, i32* %v2_1c8cf, align 4
  %v1_1c8d5 = call i32 @unknown_3d448(i32 %v3_1c8cf)
  %v0_1c8de = load i32, i32* @ebp, align 4
  %v1_1c8de = add i32 %v0_1c8de, -84
  %v2_1c8de = inttoptr i32 %v1_1c8de to i32*
  %v3_1c8de = load i32, i32* %v2_1c8de, align 4
  %v1_1c8e5 = add i32 %v0_1c8de, -76
  %v2_1c8e5 = inttoptr i32 %v1_1c8e5 to i32*
  %v3_1c8e5 = load i32, i32* %v2_1c8e5, align 4
  %v3_1c8eb = call i32 @unknown_3d3be(i32 %v3_1c8e5, i32 %v3_1c8de, i32 %v1_1c8d5)
  %v4_1c8f0 = trunc i32 %v3_1c8eb to i8
  %v5_1c8f0 = icmp eq i8 %v4_1c8f0, 0
  br i1 %v5_1c8f0, label %dec_label_pc_1c8fb, label %dec_label_pc_1c900

dec_label_pc_1c8fb:                               ; preds = %dec_label_pc_1c8cf, %dec_label_pc_1c8ac
  br label %dec_label_pc_1c900

dec_label_pc_1c900:                               ; preds = %dec_label_pc_1c8cf, %dec_label_pc_1c8fb
  %storemerge7 = phi i1 [ true, %dec_label_pc_1c8fb ], [ false, %dec_label_pc_1c8cf ]
  br i1 %storemerge7, label %dec_label_pc_1c91b, label %dec_label_pc_1c904

dec_label_pc_1c904:                               ; preds = %dec_label_pc_1c900
  %v0_1c904 = load i32, i32* @ebp, align 4
  %v1_1c904 = add i32 %v0_1c904, -76
  %v2_1c904 = inttoptr i32 %v1_1c904 to i32*
  %v3_1c904 = load i32, i32* %v2_1c904, align 4
  %v1_1c907 = add i32 %v3_1c904, 8
  %v1_1c90a = add i32 %v0_1c904, -80
  %v2_1c90a = inttoptr i32 %v1_1c90a to i32*
  %v3_1c90a = load i32, i32* %v2_1c90a, align 4
  %v1_1c90d = inttoptr i32 %v3_1c90a to i32*
  %v2_1c90d = load i32, i32* %v1_1c90d, align 4
  %v2_1c916 = call i32 @unknown_3d4c2(i32 %v1_1c907, i32 %v2_1c90d)
  br label %dec_label_pc_1c91b

dec_label_pc_1c91b:                               ; preds = %dec_label_pc_1c904, %dec_label_pc_1c900
  %v0_1c91b = load i32, i32* @ebp, align 4
  %v1_1c91b = add i32 %v0_1c91b, -76
  %v2_1c91b = inttoptr i32 %v1_1c91b to i32*
  %v3_1c91b = load i32, i32* %v2_1c91b, align 4
  %v1_1c91e = add i32 %v3_1c91b, 8
  %v1_1c921 = add i32 %v0_1c91b, -36
  %v1_1c924 = add i32 %v0_1c91b, -84
  %v2_1c924 = inttoptr i32 %v1_1c924 to i32*
  %v3_1c924 = load i32, i32* %v2_1c924, align 4
  %v3_1c932 = call i32 @unknown_39282(i32 %v1_1c921, i32 %v1_1c91e, i32 %v3_1c924)
  %v0_1c93a = load i32, i32* @ebp, align 4
  %v1_1c940 = add i32 %v0_1c93a, -32
  %v1_1c94a = call i32 @unknown_38f74(i32 %v1_1c940)
  %v0_1c952 = load i32, i32* @ebp, align 4
  %v1_1c952 = add i32 %v0_1c952, -32
  %v1_1c959 = add i32 %v0_1c952, -36
  %v2_1c95f = call i32 @unknown_3d504(i32 %v1_1c959, i32 %v1_1c952)
  %v4_1c964 = trunc i32 %v2_1c95f to i8
  %v5_1c964 = icmp eq i8 %v4_1c964, 0
  %v1_1c966 = icmp eq i1 %v5_1c964, false
  br i1 %v1_1c966, label %dec_label_pc_1c99c, label %dec_label_pc_1c968

dec_label_pc_1c968:                               ; preds = %dec_label_pc_1c91b
  %v0_1c968 = load i32, i32* @ebp, align 4
  %v1_1c968 = add i32 %v0_1c968, -36
  %v1_1c96e = call i32 @unknown_3d448(i32 %v1_1c968)
  %v0_1c973 = load i32, i32* @ebp, align 4
  %v1_1c973 = add i32 %v0_1c973, -84
  %v2_1c973 = inttoptr i32 %v1_1c973 to i32*
  %v3_1c973 = load i32, i32* %v2_1c973, align 4
  %v1_1c97e = add i32 %v0_1c973, -76
  %v2_1c97e = inttoptr i32 %v1_1c97e to i32*
  %v3_1c97e = load i32, i32* %v2_1c97e, align 4
  %v3_1c984 = call i32 @unknown_3d3be(i32 %v3_1c97e, i32 %v1_1c96e, i32 %v3_1c973)
  %v1_1c989 = xor i32 %v3_1c984, 1
  %v4_1c989 = trunc i32 %v1_1c989 to i8
  %v5_1c98c = icmp ne i8 %v4_1c989, 0
  %phitmp19 = icmp eq i1 %v5_1c98c, false
  br label %dec_label_pc_1c99c

dec_label_pc_1c99c:                               ; preds = %dec_label_pc_1c968, %dec_label_pc_1c91b
  %storemerge = phi i1 [ false, %dec_label_pc_1c91b ], [ %phitmp19, %dec_label_pc_1c968 ]
  br i1 %storemerge, label %dec_label_pc_1c9fc, label %dec_label_pc_1c9a0

dec_label_pc_1c9a0:                               ; preds = %dec_label_pc_1c99c
  %v0_1c9a0 = load i32, i32* @ebp, align 4
  %v1_1c9a0 = add i32 %v0_1c9a0, -44
  %v1_1c9a7 = add i32 %v0_1c9a0, -84
  %v2_1c9a7 = inttoptr i32 %v1_1c9a7 to i32*
  %v3_1c9a7 = load i32, i32* %v2_1c9a7, align 4
  %v1_1c9ae = add i32 %v0_1c9a0, -28
  %v3_1c9b4 = call i32 @unknown_3d544(i32 %v1_1c9ae, i32 %v3_1c9a7, i32 %v1_1c9a0)
  %v0_1c9b9 = load i32, i32* @ebp, align 4
  %v1_1c9b9 = add i32 %v0_1c9b9, -76
  %v2_1c9b9 = inttoptr i32 %v1_1c9b9 to i32*
  %v3_1c9b9 = load i32, i32* %v2_1c9b9, align 4
  %v1_1c9bc = add i32 %v3_1c9b9, 8
  %v1_1c9bf = add i32 %v0_1c9b9, -60
  %v1_1c9c2 = add i32 %v0_1c9b9, -28
  %v3_1c9d0 = call i32 @unknown_3d598(i32 %v1_1c9bf, i32 %v1_1c9bc, i32 %v1_1c9c2)
  %v0_1c9d8 = load i32, i32* @ebp, align 4
  %v1_1c9d8 = add i32 %v0_1c9d8, -28
  %v1_1c9de = call i32 @unknown_39016(i32 %v1_1c9d8)
  br label %dec_label_pc_1c9fc

dec_label_pc_1c9fc:                               ; preds = %dec_label_pc_1c9a0, %dec_label_pc_1c99c
  %v0_1c9fc = load i32, i32* @ebp, align 4
  %v1_1c9fc = add i32 %v0_1c9fc, -12
  %v2_1c9fc = inttoptr i32 %v1_1c9fc to i32*
  %v3_1c9fc = load i32, i32* %v2_1c9fc, align 4
  %v3_1c9ff = xor i32 %v3_1c9fc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1c9ff = icmp eq i32 %v3_1c9ff, 0
  store i32 %v3_1c9ff, i32* @eax, align 8
  br i1 %v4_1c9ff, label %bb, label %dec_label_pc_1ca08

bb:                                               ; preds = %dec_label_pc_1c9fc
  %v1_1ca06 = call i32 @function_1ca0d()
  br label %dec_label_pc_1ca08

dec_label_pc_1ca08:                               ; preds = %bb, %dec_label_pc_1c9fc
  %v2_1ca06 = phi i32 [ %v1_1ca06, %bb ], [ %v3_1c9ff, %dec_label_pc_1c9fc ]
  ret i32 %v2_1ca06

; uselistorder directives
  uselistorder i32 %v0_1c9b9, { 1, 0, 2 }
  uselistorder i32 %v0_1c91b, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_3d3be, { 1, 0 }
  uselistorder i32 -84, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @unknown_3d448, { 1, 0 }
  uselistorder i32 (i32)* @unknown_38f74, { 1, 0 }
  uselistorder label %dec_label_pc_1c900, { 1, 0 }
}

define i32 @function_1ca0d() local_unnamed_addr {
dec_label_pc_1ca0d:
  %v0_1ca11 = load i32, i32* @eax, align 8
  ret i32 %v0_1ca11
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca12:
  %v2_1ca3c = call i32 @unknown_3d7dc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ca53

bb:                                               ; preds = %dec_label_pc_1ca12
  %v1_1ca51 = call i32 @function_1ca58()
  br label %dec_label_pc_1ca53

dec_label_pc_1ca53:                               ; preds = %bb, %dec_label_pc_1ca12
  %v2_1ca51 = phi i32 [ %v1_1ca51, %bb ], [ %arg1, %dec_label_pc_1ca12 ]
  ret i32 %v2_1ca51

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ca58() local_unnamed_addr {
dec_label_pc_1ca58:
  %v0_1ca59 = load i32, i32* @eax, align 8
  ret i32 %v0_1ca59
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11lower_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ca5c:
  %v3_1ca93 = call i32 @unknown_3d870(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ca9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ca9e:
  %v0_1ca9e = load i32, i32* @ebp, align 4
  %v1_1ca9e = add i32 %v0_1ca9e, -12
  %v2_1ca9e = inttoptr i32 %v1_1ca9e to i32*
  %v3_1ca9e = load i32, i32* %v2_1ca9e, align 4
  %v4_1caa1 = icmp eq i32 %v3_1ca9e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1caa1, label %bb, label %dec_label_pc_1ca9e.dec_label_pc_1caaa_crit_edge

dec_label_pc_1ca9e.dec_label_pc_1caaa_crit_edge:  ; preds = %dec_label_pc_1ca9e
  %v2_1caa8.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1caaa

bb:                                               ; preds = %dec_label_pc_1ca9e
  %v1_1caa8 = call i32 @function_1caaf()
  br label %dec_label_pc_1caaa

dec_label_pc_1caaa:                               ; preds = %dec_label_pc_1ca9e.dec_label_pc_1caaa_crit_edge, %bb
  %v2_1caa8 = phi i32 [ %v2_1caa8.pre, %dec_label_pc_1ca9e.dec_label_pc_1caaa_crit_edge ], [ %v1_1caa8, %bb ]
  ret i32 %v2_1caa8

; uselistorder directives
  uselistorder label %dec_label_pc_1caaa, { 1, 0 }
}

define i32 @function_1caaf() local_unnamed_addr {
dec_label_pc_1caaf:
  %v0_1cab0 = load i32, i32* @eax, align 8
  ret i32 %v0_1cab0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEENS_7variantISC_NS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1cab3:
  ret i32 %arg1
}

define i32 @function_1cb16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb16:
  %v2_1cb16 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_1cb16 = load i32, i32* @ecx, align 4
  %v4_1cb16 = trunc i32 %v3_1cb16 to i8
  %v5_1cb16 = sub i8 %v2_1cb16, %v4_1cb16
  %v20_1cb16 = load i32, i32* @esi, align 4
  %v21_1cb16 = inttoptr i32 %v20_1cb16 to i8*
  store i8 %v5_1cb16, i8* %v21_1cb16, align 1
  %v0_1cb1d = load i32, i32* @ebp, align 4
  %v1_1cb1d = add i32 %v0_1cb1d, -28
  %v2_1cb1d = inttoptr i32 %v1_1cb1d to i32*
  %v3_1cb1d = load i32, i32* %v2_1cb1d, align 4
  store i32 %v3_1cb1d, i32* @eax, align 8
  %v1_1cb20 = add i32 %v0_1cb1d, -12
  %v2_1cb20 = inttoptr i32 %v1_1cb20 to i32*
  %v3_1cb20 = load i32, i32* %v2_1cb20, align 4
  %v4_1cb23 = icmp eq i32 %v3_1cb20, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1cb23, label %bb, label %dec_label_pc_1cb2c

bb:                                               ; preds = %dec_label_pc_1cb16
  %v1_1cb2a = call i32 @function_1cb31()
  br label %dec_label_pc_1cb2c

dec_label_pc_1cb2c:                               ; preds = %bb, %dec_label_pc_1cb16
  %v3_1cb2a = phi i32 [ %v1_1cb2a, %bb ], [ %v3_1cb1d, %dec_label_pc_1cb16 ]
  ret i32 %v3_1cb2a
}

define i32 @function_1cb31() local_unnamed_addr {
dec_label_pc_1cb31:
  %v0_1cb32 = load i32, i32* @eax, align 8
  ret i32 %v0_1cb32
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEESB_NS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1cb35:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cb74 = load i32, i32* %edx.global-to-local, align 8
  store i32 %arg2, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1cb74, 16777216
  %v6_1cb97 = sdiv i32 %sext, 16777216
  %v7_1cb97 = call i32 @unknown_3da72(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %v6_1cb97)
  store i32 %arg1, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1cbae

bb:                                               ; preds = %dec_label_pc_1cb35
  %v1_1cbac = call i32 @function_1cbb3()
  br label %dec_label_pc_1cbae

dec_label_pc_1cbae:                               ; preds = %bb, %dec_label_pc_1cb35
  %v2_1cbac = phi i32 [ %v1_1cbac, %bb ], [ %arg1, %dec_label_pc_1cb35 ]
  ret i32 %v2_1cbac

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1cbb3() local_unnamed_addr {
dec_label_pc_1cbb3:
  %v0_1cbb4 = load i32, i32* @eax, align 8
  ret i32 %v0_1cbb4
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1cbb7:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENSE_21foreign_void_weak_ptrENS1_5void_ESO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_E18has_fallback_type_EEENT1_11result_typeEiiRSR_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1cc17:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_10shared_ptrIvEENS_7variantIS7_NS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1cc84:
  ret i32 %arg2
}

define i32 @function_1ccd4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ccd4:
  %v0_1ccd4 = load i32, i32* @ebp, align 4
  %v1_1ccd4 = add i32 %v0_1ccd4, 1
  store i32 %v1_1ccd4, i32* @ebp, align 4
  %v0_1ccd9 = call i32 @unknown_3dc6f()
  %v0_1ccde = load i32, i32* @ebp, align 4
  %v1_1ccde = add i32 %v0_1ccde, -12
  %v2_1ccde = inttoptr i32 %v1_1ccde to i32*
  %v3_1ccde = load i32, i32* %v2_1ccde, align 4
  %v3_1cce1 = xor i32 %v3_1ccde, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1cce1 = icmp eq i32 %v3_1cce1, 0
  store i32 %v3_1cce1, i32* @eax, align 8
  br i1 %v4_1cce1, label %bb, label %dec_label_pc_1ccea

bb:                                               ; preds = %dec_label_pc_1ccd4
  %v1_1cce8 = call i32 @function_1ccef()
  br label %dec_label_pc_1ccea

dec_label_pc_1ccea:                               ; preds = %bb, %dec_label_pc_1ccd4
  %v2_1cce8 = phi i32 [ %v1_1cce8, %bb ], [ %v3_1cce1, %dec_label_pc_1ccd4 ]
  ret i32 %v2_1cce8
}

define i32 @function_1ccef() local_unnamed_addr {
dec_label_pc_1ccef:
  %v0_1ccf0 = load i32, i32* @eax, align 8
  ret i32 %v0_1ccf0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_8signals26detail23foreign_void_shared_ptrENS_7variantINS_10shared_ptrIvEES8_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1ccf1:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cd27 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1cd27, 16777216
  %v5_1cd46 = sdiv i32 %sext, 16777216
  %v6_1cd46 = call i32 @unknown_3dd6b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1cd46)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1cd5e:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1cdb8:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_10shared_ptrIvEENS_7variantIS6_NS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1ce1f:
  %edx.global-to-local = alloca i32, align 4
  %v0_1ce55 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1ce55, 16777216
  %v5_1ce74 = sdiv i32 %sext, 16777216
  %v6_1ce74 = call i32 @unknown_3df28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1ce74)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ce85

bb:                                               ; preds = %dec_label_pc_1ce1f
  %v1_1ce83 = call i32 @function_1ce8a()
  br label %dec_label_pc_1ce85

dec_label_pc_1ce85:                               ; preds = %bb, %dec_label_pc_1ce1f
  %v2_1ce83 = phi i32 [ %v1_1ce83, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ce1f ]
  ret i32 %v2_1ce83
}

define i32 @function_1ce8a() local_unnamed_addr {
dec_label_pc_1ce8a:
  %v0_1ce8b = load i32, i32* @eax, align 8
  ret i32 %v0_1ce8b
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_8signals26detail23foreign_void_shared_ptrENS_7variantINS_10shared_ptrIvEES7_NS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1ce8c:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cec2 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1cec2, 16777216
  %v5_1cee1 = sdiv i32 %sext, 16777216
  %v6_1cee1 = call i32 @unknown_3e024(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1cee1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1cef2

bb:                                               ; preds = %dec_label_pc_1ce8c
  %v1_1cef0 = call i32 @function_1cef7()
  br label %dec_label_pc_1cef2

dec_label_pc_1cef2:                               ; preds = %bb, %dec_label_pc_1ce8c
  %v2_1cef0 = phi i32 [ %v1_1cef0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ce8c ]
  ret i32 %v2_1cef0
}

define i32 @function_1cef7() local_unnamed_addr {
dec_label_pc_1cef7:
  %v0_1cef8 = load i32, i32* @eax, align 8
  ret i32 %v0_1cef8
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1cef9:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_E18has_fallback_type_EEENT1_11result_typeEiiRSN_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1cf53:
  ret i32 0
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5boost7variantINS2_10shared_ptrIvEENS2_8signals26detail23foreign_void_shared_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EESD_EET0_T_SF_SE_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cfba:
  %v15_1d00b109 = icmp eq i32 %arg1, %arg2
  %v1_1d00e110 = icmp eq i1 %v15_1d00b109, false
  %v5_1d011111 = icmp eq i1 %v1_1d00e110, false
  %v1_1d013112 = icmp eq i1 %v5_1d011111, false
  store i32 %arg3, i32* @eax, align 8
  br i1 %v1_1d013112, label %dec_label_pc_1cfe6, label %dec_label_pc_1d015

dec_label_pc_1cfe6:                               ; preds = %dec_label_pc_1cfba, %dec_label_pc_1cfe6
  %storemerge114 = phi i32 [ %v4_1d004, %dec_label_pc_1cfe6 ], [ %arg3, %dec_label_pc_1cfba ]
  %stack_var_-32.0113 = phi i32 [ %v4_1d000, %dec_label_pc_1cfe6 ], [ %arg1, %dec_label_pc_1cfba ]
  %v1_1cfec = call i32 @function_354d4(i32 %storemerge114)
  %v2_1cffb = call i32 @unknown_36b72(i32 %v1_1cfec, i32 %stack_var_-32.0113)
  %v4_1d000 = add i32 %stack_var_-32.0113, 12
  %v4_1d004 = add i32 %storemerge114, 12
  %v15_1d00b = icmp eq i32 %v4_1d000, %arg2
  %v1_1d00e = icmp eq i1 %v15_1d00b, false
  %v5_1d011 = icmp eq i1 %v1_1d00e, false
  %v1_1d013 = icmp eq i1 %v5_1d011, false
  store i32 %v4_1d004, i32* @eax, align 8
  br i1 %v1_1d013, label %dec_label_pc_1cfe6, label %dec_label_pc_1d015

dec_label_pc_1d015:                               ; preds = %dec_label_pc_1cfe6, %dec_label_pc_1cfba
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1d024

bb:                                               ; preds = %dec_label_pc_1d015
  %v1_1d022 = call i32 @function_1d05b()
  store i32 %v1_1d022, i32* @eax, align 8
  br label %dec_label_pc_1d024

dec_label_pc_1d024:                               ; preds = %bb, %dec_label_pc_1d015
  %v0_1d024 = call i32 @function_1d056()
  ret i32 %v0_1d024

; uselistorder directives
  uselistorder i32 %v4_1d004, { 1, 0 }
  uselistorder i32 %v4_1d000, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1cfe6, { 1, 0 }
}

define i32 @function_1d027() local_unnamed_addr {
dec_label_pc_1d027:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d027 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d027
}

define i32 @function_1d056() local_unnamed_addr {
dec_label_pc_1d056:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1d05b() local_unnamed_addr {
dec_label_pc_1d05b:
  %v0_1d060 = load i32, i32* @eax, align 8
  ret i32 %v0_1d060
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEENS_7variantISC_NS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d061:
  %edx.global-to-local = alloca i32, align 4
  %v0_1d097 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1d097, 16777216
  %v5_1d0b6 = sdiv i32 %sext, 16777216
  %v6_1d0b6 = call i32 @unknown_3e288(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1d0b6)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  ret i32 %v6_1d0b6
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEESB_NS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d0ce:
  %edx.global-to-local = alloca i32, align 4
  %v0_1d104 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1d104, 16777216
  %v5_1d123 = sdiv i32 %sext, 16777216
  %v6_1d123 = call i32 @unknown_3e384(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1d123)
  store i32 %v6_1d123, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1d134

bb:                                               ; preds = %dec_label_pc_1d0ce
  %v1_1d132 = call i32 @function_1d139()
  br label %dec_label_pc_1d134

dec_label_pc_1d134:                               ; preds = %bb, %dec_label_pc_1d0ce
  %v2_1d132 = phi i32 [ %v1_1d132, %bb ], [ %v6_1d123, %dec_label_pc_1d0ce ]
  ret i32 %v2_1d132
}

define i32 @function_1d139() local_unnamed_addr {
dec_label_pc_1d139:
  %v0_1d13a = load i32, i32* @eax, align 8
  ret i32 %v0_1d13a
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENS5_21foreign_void_weak_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_E18has_fallback_type_EEENT_11result_typeEiRSI_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d13b:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_7variantINS_8weak_ptrIvEENSE_21foreign_void_weak_ptrENS1_5void_ESO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_SO_E18has_fallback_type_EEENT1_11result_typeEiiRSR_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1d195:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_8weak_ptrIvEENS_7variantIS6_NS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d1fc:
  %edx.global-to-local = alloca i32, align 4
  %v0_1d232 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1d232, 16777216
  %v5_1d251 = sdiv i32 %sext, 16777216
  %v6_1d251 = call i32 @unknown_3e541(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1d251)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1d262

bb:                                               ; preds = %dec_label_pc_1d1fc
  %v1_1d260 = call i32 @function_1d267()
  br label %dec_label_pc_1d262

dec_label_pc_1d262:                               ; preds = %bb, %dec_label_pc_1d1fc
  %v2_1d260 = phi i32 [ %v1_1d260, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1d1fc ]
  ret i32 %v2_1d260
}

define i32 @function_1d267() local_unnamed_addr {
dec_label_pc_1d267:
  %v0_1d268 = load i32, i32* @eax, align 8
  ret i32 %v0_1d268
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_8signals26detail21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEES7_NS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d269:
  %edx.global-to-local = alloca i32, align 4
  %v0_1d29f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1d29f, 16777216
  %v5_1d2be = sdiv i32 %sext, 16777216
  %v6_1d2be = call i32 @unknown_3e63d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1d2be)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1d2d6:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_SK_E18has_fallback_type_EEENT1_11result_typeEiiRSN_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1d330:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9copy_intoEPKvNS_7variantISD_SH_NS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1d397:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_1d3e7, label %bb

bb:                                               ; preds = %dec_label_pc_1d397
  %sext = mul i32 %arg6, 16777216
  %v12_1d3e1 = sdiv i32 %sext, 16777216
  %v13_1d3e1 = sext i8 %arg5 to i32
  %v14_1d3e1 = call i32 @function_1d820(i32 %arg8, i32 %arg7, i32 %v12_1d3e1, i32 %v13_1d3e1, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1d3e7

dec_label_pc_1d3e7:                               ; preds = %dec_label_pc_1d397, %bb
  %v2_1d3ea = mul i32 %arg2, 4
  %v1_1d3ed = add i32 %v2_1d3ea, ptrtoint (i32* @global_var_1d874.2014 to i32)
  %v1_1d3f2 = inttoptr i32 %v1_1d3ed to i32*
  %v2_1d3f2 = load i32, i32* %v1_1d3f2, align 4
  ret i32 %v2_1d3f2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1d3e7, { 1, 0 }
}

define i32 @function_1d3f6() local_unnamed_addr {
dec_label_pc_1d3f6:
  %v0_1d3fe = load i32, i32* @ebp, align 4
  %v1_1d3fe = add i32 %v0_1d3fe, -83
  %v2_1d3fe = inttoptr i32 %v1_1d3fe to i8*
  %v3_1d3fe = load i8, i8* %v2_1d3fe, align 1
  %v1_1d40e = add i32 %v0_1d3fe, -56
  %v2_1d40e = inttoptr i32 %v1_1d40e to i32*
  %v3_1d40e = load i32, i32* %v2_1d40e, align 4
  %v1_1d415 = add i32 %v0_1d3fe, -52
  %v2_1d415 = inttoptr i32 %v1_1d415 to i32*
  %v3_1d415 = load i32, i32* %v2_1d415, align 4
  %v1_1d41c = add i32 %v0_1d3fe, -44
  %v2_1d41c = inttoptr i32 %v1_1d41c to i32*
  %v3_1d41c = load i32, i32* %v2_1d41c, align 4
  %v6_1d422 = sext i8 %v3_1d3fe to i32
  %v7_1d422 = call i32 @unknown_3e7fa(i32 %v3_1d41c, i32 %v3_1d415, i32 %v3_1d40e, i32 0, i32 %v6_1d422, i32 1)
  %v0_1d427 = call i32 @function_1d858()
  ret i32 %v0_1d427

; uselistorder directives
  uselistorder i32 %v0_1d3fe, { 0, 2, 1, 3 }
}

define i32 @function_1d42c() local_unnamed_addr {
dec_label_pc_1d42c:
  %v0_1d434 = load i32, i32* @ebp, align 4
  %v1_1d434 = add i32 %v0_1d434, -82
  %v2_1d434 = inttoptr i32 %v1_1d434 to i8*
  %v3_1d434 = load i8, i8* %v2_1d434, align 1
  %v1_1d444 = add i32 %v0_1d434, -56
  %v2_1d444 = inttoptr i32 %v1_1d444 to i32*
  %v3_1d444 = load i32, i32* %v2_1d444, align 4
  %v1_1d44b = add i32 %v0_1d434, -52
  %v2_1d44b = inttoptr i32 %v1_1d44b to i32*
  %v3_1d44b = load i32, i32* %v2_1d44b, align 4
  %v1_1d452 = add i32 %v0_1d434, -44
  %v2_1d452 = inttoptr i32 %v1_1d452 to i32*
  %v3_1d452 = load i32, i32* %v2_1d452, align 4
  %v6_1d458 = sext i8 %v3_1d434 to i32
  %v7_1d458 = call i32 @unknown_3e867(i32 %v3_1d452, i32 %v3_1d44b, i32 %v3_1d444, i32 0, i32 %v6_1d458, i32 1)
  %v0_1d45d = call i32 @function_1d858()
  ret i32 %v0_1d45d

; uselistorder directives
  uselistorder i32 %v0_1d434, { 0, 2, 1, 3 }
}

define i32 @function_1d462() local_unnamed_addr {
dec_label_pc_1d462:
  %v0_1d46a = load i32, i32* @ebp, align 4
  %v1_1d46a = add i32 %v0_1d46a, -81
  %v2_1d46a = inttoptr i32 %v1_1d46a to i8*
  %v3_1d46a = load i8, i8* %v2_1d46a, align 1
  %v1_1d47a = add i32 %v0_1d46a, -56
  %v2_1d47a = inttoptr i32 %v1_1d47a to i32*
  %v3_1d47a = load i32, i32* %v2_1d47a, align 4
  %v1_1d481 = add i32 %v0_1d46a, -52
  %v2_1d481 = inttoptr i32 %v1_1d481 to i32*
  %v3_1d481 = load i32, i32* %v2_1d481, align 4
  %v1_1d488 = add i32 %v0_1d46a, -44
  %v2_1d488 = inttoptr i32 %v1_1d488 to i32*
  %v3_1d488 = load i32, i32* %v2_1d488, align 4
  %v5_1d48e = sext i8 %v3_1d46a to i32
  %v6_1d48e = call i32 @unknown_3e8d4(i32 %v3_1d488, i32 %v3_1d481, i32 %v3_1d47a, i32 0, i32 %v5_1d48e)
  %v0_1d493 = call i32 @function_1d858()
  ret i32 %v0_1d493

; uselistorder directives
  uselistorder i32 %v0_1d46a, { 0, 2, 1, 3 }
}

define i32 @function_1d498() local_unnamed_addr {
dec_label_pc_1d498:
  %v0_1d4a0 = load i32, i32* @ebp, align 4
  %v1_1d4a0 = add i32 %v0_1d4a0, -80
  %v2_1d4a0 = inttoptr i32 %v1_1d4a0 to i8*
  %v3_1d4a0 = load i8, i8* %v2_1d4a0, align 1
  %v1_1d4b0 = add i32 %v0_1d4a0, -56
  %v2_1d4b0 = inttoptr i32 %v1_1d4b0 to i32*
  %v3_1d4b0 = load i32, i32* %v2_1d4b0, align 4
  %v1_1d4b7 = add i32 %v0_1d4a0, -52
  %v2_1d4b7 = inttoptr i32 %v1_1d4b7 to i32*
  %v3_1d4b7 = load i32, i32* %v2_1d4b7, align 4
  %v1_1d4be = add i32 %v0_1d4a0, -44
  %v2_1d4be = inttoptr i32 %v1_1d4be to i32*
  %v3_1d4be = load i32, i32* %v2_1d4be, align 4
  %v5_1d4c4 = sext i8 %v3_1d4a0 to i32
  %v6_1d4c4 = call i32 @unknown_3e8d4(i32 %v3_1d4be, i32 %v3_1d4b7, i32 %v3_1d4b0, i32 0, i32 %v5_1d4c4)
  %v0_1d4c9 = call i32 @function_1d858()
  ret i32 %v0_1d4c9

; uselistorder directives
  uselistorder i32 %v0_1d4a0, { 0, 2, 1, 3 }
  uselistorder i32 -80, { 0, 3, 4, 5, 1, 2 }
}

define i32 @function_1d4ce() local_unnamed_addr {
dec_label_pc_1d4ce:
  %v0_1d4d6 = load i32, i32* @ebp, align 4
  %v1_1d4d6 = add i32 %v0_1d4d6, -79
  %v2_1d4d6 = inttoptr i32 %v1_1d4d6 to i8*
  %v3_1d4d6 = load i8, i8* %v2_1d4d6, align 1
  %v1_1d4e6 = add i32 %v0_1d4d6, -56
  %v2_1d4e6 = inttoptr i32 %v1_1d4e6 to i32*
  %v3_1d4e6 = load i32, i32* %v2_1d4e6, align 4
  %v1_1d4ed = add i32 %v0_1d4d6, -52
  %v2_1d4ed = inttoptr i32 %v1_1d4ed to i32*
  %v3_1d4ed = load i32, i32* %v2_1d4ed, align 4
  %v1_1d4f4 = add i32 %v0_1d4d6, -44
  %v2_1d4f4 = inttoptr i32 %v1_1d4f4 to i32*
  %v3_1d4f4 = load i32, i32* %v2_1d4f4, align 4
  %v5_1d4fa = sext i8 %v3_1d4d6 to i32
  %v6_1d4fa = call i32 @unknown_3e8d4(i32 %v3_1d4f4, i32 %v3_1d4ed, i32 %v3_1d4e6, i32 0, i32 %v5_1d4fa)
  %v0_1d4ff = call i32 @function_1d858()
  ret i32 %v0_1d4ff

; uselistorder directives
  uselistorder i32 %v0_1d4d6, { 0, 2, 1, 3 }
}

define i32 @function_1d504() local_unnamed_addr {
dec_label_pc_1d504:
  %v0_1d50c = load i32, i32* @ebp, align 4
  %v1_1d50c = add i32 %v0_1d50c, -78
  %v2_1d50c = inttoptr i32 %v1_1d50c to i8*
  %v3_1d50c = load i8, i8* %v2_1d50c, align 1
  %v1_1d51c = add i32 %v0_1d50c, -56
  %v2_1d51c = inttoptr i32 %v1_1d51c to i32*
  %v3_1d51c = load i32, i32* %v2_1d51c, align 4
  %v1_1d523 = add i32 %v0_1d50c, -52
  %v2_1d523 = inttoptr i32 %v1_1d523 to i32*
  %v3_1d523 = load i32, i32* %v2_1d523, align 4
  %v1_1d52a = add i32 %v0_1d50c, -44
  %v2_1d52a = inttoptr i32 %v1_1d52a to i32*
  %v3_1d52a = load i32, i32* %v2_1d52a, align 4
  %v5_1d530 = sext i8 %v3_1d50c to i32
  %v6_1d530 = call i32 @unknown_3e8d4(i32 %v3_1d52a, i32 %v3_1d523, i32 %v3_1d51c, i32 0, i32 %v5_1d530)
  %v0_1d535 = call i32 @function_1d858()
  ret i32 %v0_1d535

; uselistorder directives
  uselistorder i32 %v0_1d50c, { 0, 2, 1, 3 }
}

define i32 @function_1d53a() local_unnamed_addr {
dec_label_pc_1d53a:
  %v0_1d542 = load i32, i32* @ebp, align 4
  %v1_1d542 = add i32 %v0_1d542, -77
  %v2_1d542 = inttoptr i32 %v1_1d542 to i8*
  %v3_1d542 = load i8, i8* %v2_1d542, align 1
  %v1_1d552 = add i32 %v0_1d542, -56
  %v2_1d552 = inttoptr i32 %v1_1d552 to i32*
  %v3_1d552 = load i32, i32* %v2_1d552, align 4
  %v1_1d559 = add i32 %v0_1d542, -52
  %v2_1d559 = inttoptr i32 %v1_1d559 to i32*
  %v3_1d559 = load i32, i32* %v2_1d559, align 4
  %v1_1d560 = add i32 %v0_1d542, -44
  %v2_1d560 = inttoptr i32 %v1_1d560 to i32*
  %v3_1d560 = load i32, i32* %v2_1d560, align 4
  %v5_1d566 = sext i8 %v3_1d542 to i32
  %v6_1d566 = call i32 @unknown_3e8d4(i32 %v3_1d560, i32 %v3_1d559, i32 %v3_1d552, i32 0, i32 %v5_1d566)
  %v0_1d56b = call i32 @function_1d858()
  ret i32 %v0_1d56b

; uselistorder directives
  uselistorder i32 %v0_1d542, { 0, 2, 1, 3 }
}

define i32 @function_1d570() local_unnamed_addr {
dec_label_pc_1d570:
  %v0_1d578 = load i32, i32* @ebp, align 4
  %v1_1d578 = add i32 %v0_1d578, -76
  %v2_1d578 = inttoptr i32 %v1_1d578 to i8*
  %v3_1d578 = load i8, i8* %v2_1d578, align 1
  %v1_1d588 = add i32 %v0_1d578, -56
  %v2_1d588 = inttoptr i32 %v1_1d588 to i32*
  %v3_1d588 = load i32, i32* %v2_1d588, align 4
  %v1_1d58f = add i32 %v0_1d578, -52
  %v2_1d58f = inttoptr i32 %v1_1d58f to i32*
  %v3_1d58f = load i32, i32* %v2_1d58f, align 4
  %v1_1d596 = add i32 %v0_1d578, -44
  %v2_1d596 = inttoptr i32 %v1_1d596 to i32*
  %v3_1d596 = load i32, i32* %v2_1d596, align 4
  %v5_1d59c = sext i8 %v3_1d578 to i32
  %v6_1d59c = call i32 @unknown_3e8d4(i32 %v3_1d596, i32 %v3_1d58f, i32 %v3_1d588, i32 0, i32 %v5_1d59c)
  %v0_1d5a1 = call i32 @function_1d858()
  ret i32 %v0_1d5a1

; uselistorder directives
  uselistorder i32 %v0_1d578, { 0, 2, 1, 3 }
  uselistorder i32 -76, { 0, 4, 5, 6, 7, 8, 3, 1, 2 }
}

define i32 @function_1d5a6() local_unnamed_addr {
dec_label_pc_1d5a6:
  %v0_1d5ae = load i32, i32* @ebp, align 4
  %v1_1d5ae = add i32 %v0_1d5ae, -75
  %v2_1d5ae = inttoptr i32 %v1_1d5ae to i8*
  %v3_1d5ae = load i8, i8* %v2_1d5ae, align 1
  %v1_1d5be = add i32 %v0_1d5ae, -56
  %v2_1d5be = inttoptr i32 %v1_1d5be to i32*
  %v3_1d5be = load i32, i32* %v2_1d5be, align 4
  %v1_1d5c5 = add i32 %v0_1d5ae, -52
  %v2_1d5c5 = inttoptr i32 %v1_1d5c5 to i32*
  %v3_1d5c5 = load i32, i32* %v2_1d5c5, align 4
  %v1_1d5cc = add i32 %v0_1d5ae, -44
  %v2_1d5cc = inttoptr i32 %v1_1d5cc to i32*
  %v3_1d5cc = load i32, i32* %v2_1d5cc, align 4
  %v5_1d5d2 = sext i8 %v3_1d5ae to i32
  %v6_1d5d2 = call i32 @unknown_3e8d4(i32 %v3_1d5cc, i32 %v3_1d5c5, i32 %v3_1d5be, i32 0, i32 %v5_1d5d2)
  %v0_1d5d7 = call i32 @function_1d858()
  ret i32 %v0_1d5d7

; uselistorder directives
  uselistorder i32 %v0_1d5ae, { 0, 2, 1, 3 }
}

define i32 @function_1d5dc() local_unnamed_addr {
dec_label_pc_1d5dc:
  %v0_1d5e4 = load i32, i32* @ebp, align 4
  %v1_1d5e4 = add i32 %v0_1d5e4, -74
  %v2_1d5e4 = inttoptr i32 %v1_1d5e4 to i8*
  %v3_1d5e4 = load i8, i8* %v2_1d5e4, align 1
  %v1_1d5f4 = add i32 %v0_1d5e4, -56
  %v2_1d5f4 = inttoptr i32 %v1_1d5f4 to i32*
  %v3_1d5f4 = load i32, i32* %v2_1d5f4, align 4
  %v1_1d5fb = add i32 %v0_1d5e4, -52
  %v2_1d5fb = inttoptr i32 %v1_1d5fb to i32*
  %v3_1d5fb = load i32, i32* %v2_1d5fb, align 4
  %v1_1d602 = add i32 %v0_1d5e4, -44
  %v2_1d602 = inttoptr i32 %v1_1d602 to i32*
  %v3_1d602 = load i32, i32* %v2_1d602, align 4
  %v5_1d608 = sext i8 %v3_1d5e4 to i32
  %v6_1d608 = call i32 @unknown_3e8d4(i32 %v3_1d602, i32 %v3_1d5fb, i32 %v3_1d5f4, i32 0, i32 %v5_1d608)
  %v0_1d60d = call i32 @function_1d858()
  ret i32 %v0_1d60d

; uselistorder directives
  uselistorder i32 %v0_1d5e4, { 0, 2, 1, 3 }
}

define i32 @function_1d61a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d61a:
  %v0_1d61a = load i32, i32* @ebp, align 4
  %v1_1d61a = add i32 %v0_1d61a, -73
  %v2_1d61a = inttoptr i32 %v1_1d61a to i8*
  %v3_1d61a = load i8, i8* %v2_1d61a, align 1
  %v1_1d62a = add i32 %v0_1d61a, -56
  %v2_1d62a = inttoptr i32 %v1_1d62a to i32*
  %v3_1d62a = load i32, i32* %v2_1d62a, align 4
  %v1_1d631 = add i32 %v0_1d61a, -52
  %v2_1d631 = inttoptr i32 %v1_1d631 to i32*
  %v3_1d631 = load i32, i32* %v2_1d631, align 4
  %v1_1d638 = add i32 %v0_1d61a, -44
  %v2_1d638 = inttoptr i32 %v1_1d638 to i32*
  %v3_1d638 = load i32, i32* %v2_1d638, align 4
  %v5_1d63e = sext i8 %v3_1d61a to i32
  %v6_1d63e = call i32 @unknown_3e8d4(i32 %v3_1d638, i32 %v3_1d631, i32 %v3_1d62a, i32 0, i32 %v5_1d63e)
  %v0_1d643 = call i32 @function_1d858()
  ret i32 %v0_1d643

; uselistorder directives
  uselistorder i32 %v0_1d61a, { 0, 2, 1, 3 }
  uselistorder i32 -73, { 2, 0, 1 }
}

define i32 @function_1d648() local_unnamed_addr {
dec_label_pc_1d648:
  %v0_1d650 = load i32, i32* @ebp, align 4
  %v1_1d650 = add i32 %v0_1d650, -72
  %v2_1d650 = inttoptr i32 %v1_1d650 to i8*
  %v3_1d650 = load i8, i8* %v2_1d650, align 1
  %v1_1d660 = add i32 %v0_1d650, -56
  %v2_1d660 = inttoptr i32 %v1_1d660 to i32*
  %v3_1d660 = load i32, i32* %v2_1d660, align 4
  %v1_1d667 = add i32 %v0_1d650, -52
  %v2_1d667 = inttoptr i32 %v1_1d667 to i32*
  %v3_1d667 = load i32, i32* %v2_1d667, align 4
  %v1_1d66e = add i32 %v0_1d650, -44
  %v2_1d66e = inttoptr i32 %v1_1d66e to i32*
  %v3_1d66e = load i32, i32* %v2_1d66e, align 4
  %v5_1d674 = sext i8 %v3_1d650 to i32
  %v6_1d674 = call i32 @unknown_3e8d4(i32 %v3_1d66e, i32 %v3_1d667, i32 %v3_1d660, i32 0, i32 %v5_1d674)
  %v0_1d679 = call i32 @function_1d858()
  ret i32 %v0_1d679

; uselistorder directives
  uselistorder i32 %v0_1d650, { 0, 2, 1, 3 }
}

define i32 @function_1d67e() local_unnamed_addr {
dec_label_pc_1d67e:
  %v0_1d686 = load i32, i32* @ebp, align 4
  %v1_1d686 = add i32 %v0_1d686, -71
  %v2_1d686 = inttoptr i32 %v1_1d686 to i8*
  %v3_1d686 = load i8, i8* %v2_1d686, align 1
  %v1_1d696 = add i32 %v0_1d686, -56
  %v2_1d696 = inttoptr i32 %v1_1d696 to i32*
  %v3_1d696 = load i32, i32* %v2_1d696, align 4
  %v1_1d69d = add i32 %v0_1d686, -52
  %v2_1d69d = inttoptr i32 %v1_1d69d to i32*
  %v3_1d69d = load i32, i32* %v2_1d69d, align 4
  %v1_1d6a4 = add i32 %v0_1d686, -44
  %v2_1d6a4 = inttoptr i32 %v1_1d6a4 to i32*
  %v3_1d6a4 = load i32, i32* %v2_1d6a4, align 4
  %v5_1d6aa = sext i8 %v3_1d686 to i32
  %v6_1d6aa = call i32 @unknown_3e8d4(i32 %v3_1d6a4, i32 %v3_1d69d, i32 %v3_1d696, i32 0, i32 %v5_1d6aa)
  %v0_1d6af = call i32 @function_1d858()
  ret i32 %v0_1d6af

; uselistorder directives
  uselistorder i32 %v0_1d686, { 0, 2, 1, 3 }
}

define i32 @function_1d6b4() local_unnamed_addr {
dec_label_pc_1d6b4:
  %v0_1d6bc = load i32, i32* @ebp, align 4
  %v1_1d6bc = add i32 %v0_1d6bc, -70
  %v2_1d6bc = inttoptr i32 %v1_1d6bc to i8*
  %v3_1d6bc = load i8, i8* %v2_1d6bc, align 1
  %v1_1d6cc = add i32 %v0_1d6bc, -56
  %v2_1d6cc = inttoptr i32 %v1_1d6cc to i32*
  %v3_1d6cc = load i32, i32* %v2_1d6cc, align 4
  %v1_1d6d3 = add i32 %v0_1d6bc, -52
  %v2_1d6d3 = inttoptr i32 %v1_1d6d3 to i32*
  %v3_1d6d3 = load i32, i32* %v2_1d6d3, align 4
  %v1_1d6da = add i32 %v0_1d6bc, -44
  %v2_1d6da = inttoptr i32 %v1_1d6da to i32*
  %v3_1d6da = load i32, i32* %v2_1d6da, align 4
  %v5_1d6e0 = sext i8 %v3_1d6bc to i32
  %v6_1d6e0 = call i32 @unknown_3e8d4(i32 %v3_1d6da, i32 %v3_1d6d3, i32 %v3_1d6cc, i32 0, i32 %v5_1d6e0)
  %v0_1d6e5 = call i32 @function_1d858()
  ret i32 %v0_1d6e5

; uselistorder directives
  uselistorder i32 %v0_1d6bc, { 0, 2, 1, 3 }
}

define i32 @function_1d6ea() local_unnamed_addr {
dec_label_pc_1d6ea:
  %v0_1d6f2 = load i32, i32* @ebp, align 4
  %v1_1d6f2 = add i32 %v0_1d6f2, -69
  %v2_1d6f2 = inttoptr i32 %v1_1d6f2 to i8*
  %v3_1d6f2 = load i8, i8* %v2_1d6f2, align 1
  %v1_1d702 = add i32 %v0_1d6f2, -56
  %v2_1d702 = inttoptr i32 %v1_1d702 to i32*
  %v3_1d702 = load i32, i32* %v2_1d702, align 4
  %v1_1d709 = add i32 %v0_1d6f2, -52
  %v2_1d709 = inttoptr i32 %v1_1d709 to i32*
  %v3_1d709 = load i32, i32* %v2_1d709, align 4
  %v1_1d710 = add i32 %v0_1d6f2, -44
  %v2_1d710 = inttoptr i32 %v1_1d710 to i32*
  %v3_1d710 = load i32, i32* %v2_1d710, align 4
  %v5_1d716 = sext i8 %v3_1d6f2 to i32
  %v6_1d716 = call i32 @unknown_3e8d4(i32 %v3_1d710, i32 %v3_1d709, i32 %v3_1d702, i32 0, i32 %v5_1d716)
  %v0_1d71b = call i32 @function_1d858()
  ret i32 %v0_1d71b

; uselistorder directives
  uselistorder i32 %v0_1d6f2, { 0, 2, 1, 3 }
}

define i32 @function_1d720() local_unnamed_addr {
dec_label_pc_1d720:
  %v0_1d728 = load i32, i32* @ebp, align 4
  %v1_1d728 = add i32 %v0_1d728, -60
  %v2_1d728 = inttoptr i32 %v1_1d728 to i8*
  %v3_1d728 = load i8, i8* %v2_1d728, align 1
  %v1_1d738 = add i32 %v0_1d728, -56
  %v2_1d738 = inttoptr i32 %v1_1d738 to i32*
  %v3_1d738 = load i32, i32* %v2_1d738, align 4
  %v1_1d73f = add i32 %v0_1d728, -52
  %v2_1d73f = inttoptr i32 %v1_1d73f to i32*
  %v3_1d73f = load i32, i32* %v2_1d73f, align 4
  %v1_1d746 = add i32 %v0_1d728, -44
  %v2_1d746 = inttoptr i32 %v1_1d746 to i32*
  %v3_1d746 = load i32, i32* %v2_1d746, align 4
  %v5_1d74c = sext i8 %v3_1d728 to i32
  %v6_1d74c = call i32 @unknown_3e8d4(i32 %v3_1d746, i32 %v3_1d73f, i32 %v3_1d738, i32 0, i32 %v5_1d74c)
  %v0_1d751 = call i32 @function_1d858()
  ret i32 %v0_1d751

; uselistorder directives
  uselistorder i32 %v0_1d728, { 0, 2, 1, 3 }
}

define i32 @function_1d756() local_unnamed_addr {
dec_label_pc_1d756:
  %v0_1d75e = load i32, i32* @ebp, align 4
  %v1_1d75e = add i32 %v0_1d75e, -59
  %v2_1d75e = inttoptr i32 %v1_1d75e to i8*
  %v3_1d75e = load i8, i8* %v2_1d75e, align 1
  %v1_1d76e = add i32 %v0_1d75e, -56
  %v2_1d76e = inttoptr i32 %v1_1d76e to i32*
  %v3_1d76e = load i32, i32* %v2_1d76e, align 4
  %v1_1d775 = add i32 %v0_1d75e, -52
  %v2_1d775 = inttoptr i32 %v1_1d775 to i32*
  %v3_1d775 = load i32, i32* %v2_1d775, align 4
  %v1_1d77c = add i32 %v0_1d75e, -44
  %v2_1d77c = inttoptr i32 %v1_1d77c to i32*
  %v3_1d77c = load i32, i32* %v2_1d77c, align 4
  %v5_1d782 = sext i8 %v3_1d75e to i32
  %v6_1d782 = call i32 @unknown_3e8d4(i32 %v3_1d77c, i32 %v3_1d775, i32 %v3_1d76e, i32 0, i32 %v5_1d782)
  %v0_1d787 = call i32 @function_1d858()
  ret i32 %v0_1d787

; uselistorder directives
  uselistorder i32 %v0_1d75e, { 0, 2, 1, 3 }
}

define i32 @function_1d78c() local_unnamed_addr {
dec_label_pc_1d78c:
  %edi.global-to-local = alloca i32, align 4
  %v0_1d794 = load i32, i32* %edi.global-to-local, align 8
  %v0_1d7a2 = load i32, i32* @ebp, align 4
  %v1_1d7a2 = add i32 %v0_1d7a2, -56
  %v2_1d7a2 = inttoptr i32 %v1_1d7a2 to i32*
  %v3_1d7a2 = load i32, i32* %v2_1d7a2, align 4
  %v1_1d7a9 = add i32 %v0_1d7a2, -52
  %v2_1d7a9 = inttoptr i32 %v1_1d7a9 to i32*
  %v3_1d7a9 = load i32, i32* %v2_1d7a9, align 4
  %v1_1d7b0 = add i32 %v0_1d7a2, -44
  %v2_1d7b0 = inttoptr i32 %v1_1d7b0 to i32*
  %v3_1d7b0 = load i32, i32* %v2_1d7b0, align 4
  %sext = mul i32 %v0_1d794, 16777216
  %v5_1d7b6 = sdiv i32 %sext, 16777216
  %v6_1d7b6 = call i32 @unknown_3e8d4(i32 %v3_1d7b0, i32 %v3_1d7a9, i32 %v3_1d7a2, i32 0, i32 %v5_1d7b6)
  %v0_1d7bb = call i32 @function_1d858()
  ret i32 %v0_1d7bb
}

define i32 @function_1d7c0() local_unnamed_addr {
dec_label_pc_1d7c0:
  %esi.global-to-local = alloca i32, align 4
  %v0_1d7c8 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d7d6 = load i32, i32* @ebp, align 4
  %v1_1d7d6 = add i32 %v0_1d7d6, -56
  %v2_1d7d6 = inttoptr i32 %v1_1d7d6 to i32*
  %v3_1d7d6 = load i32, i32* %v2_1d7d6, align 4
  %v1_1d7dd = add i32 %v0_1d7d6, -52
  %v2_1d7dd = inttoptr i32 %v1_1d7dd to i32*
  %v3_1d7dd = load i32, i32* %v2_1d7dd, align 4
  %v1_1d7e4 = add i32 %v0_1d7d6, -44
  %v2_1d7e4 = inttoptr i32 %v1_1d7e4 to i32*
  %v3_1d7e4 = load i32, i32* %v2_1d7e4, align 4
  %sext = mul i32 %v0_1d7c8, 16777216
  %v5_1d7ea = sdiv i32 %sext, 16777216
  %v6_1d7ea = call i32 @unknown_3e8d4(i32 %v3_1d7e4, i32 %v3_1d7dd, i32 %v3_1d7d6, i32 0, i32 %v5_1d7ea)
  %v0_1d7ef = call i32 @function_1d858()
  ret i32 %v0_1d7ef
}

define i32 @function_1d7f1() local_unnamed_addr {
dec_label_pc_1d7f1:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d7f9 = load i32, i32* %ebx.global-to-local, align 8
  %v0_1d805 = load i32, i32* @ebp, align 4
  %v1_1d805 = add i32 %v0_1d805, -56
  %v2_1d805 = inttoptr i32 %v1_1d805 to i32*
  %v3_1d805 = load i32, i32* %v2_1d805, align 4
  %v1_1d80c = add i32 %v0_1d805, -52
  %v2_1d80c = inttoptr i32 %v1_1d80c to i32*
  %v3_1d80c = load i32, i32* %v2_1d80c, align 4
  %v1_1d813 = add i32 %v0_1d805, -44
  %v2_1d813 = inttoptr i32 %v1_1d813 to i32*
  %v3_1d813 = load i32, i32* %v2_1d813, align 4
  %sext = mul i32 %v0_1d7f9, 16777216
  %v5_1d819 = sdiv i32 %sext, 16777216
  %v6_1d819 = call i32 @unknown_3e8d4(i32 %v3_1d813, i32 %v3_1d80c, i32 %v3_1d805, i32 0, i32 %v5_1d819)
  %v0_1d81e = call i32 @function_1d858()
  ret i32 %v0_1d81e

; uselistorder directives
  uselistorder i32 ()* @function_1d858, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_3e8d4, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_1d820(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_1d820:
  %v0_1d830 = load i32, i32* @ecx, align 4
  %v0_1d834 = load i32, i32* @edx, align 8
  %v0_1d838 = load i32, i32* @ebp, align 4
  %v1_1d838 = add i32 %v0_1d838, -56
  %v2_1d838 = inttoptr i32 %v1_1d838 to i32*
  %v3_1d838 = load i32, i32* %v2_1d838, align 4
  %v1_1d83f = add i32 %v0_1d838, -52
  %v2_1d83f = inttoptr i32 %v1_1d83f to i32*
  %v3_1d83f = load i32, i32* %v2_1d83f, align 4
  %v1_1d846 = add i32 %v0_1d838, -48
  %v2_1d846 = inttoptr i32 %v1_1d846 to i32*
  %v3_1d846 = load i32, i32* %v2_1d846, align 4
  %v1_1d84d = add i32 %v0_1d838, -44
  %v2_1d84d = inttoptr i32 %v1_1d84d to i32*
  %v3_1d84d = load i32, i32* %v2_1d84d, align 4
  %sext = mul i32 %v0_1d834, 16777216
  %v8_1d853 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_1d830, 16777216
  %v9_1d853 = sdiv i32 %sext1, 16777216
  %v10_1d853 = call i32 @unknown_3e92e(i32 %v3_1d84d, i32 %v3_1d846, i32 %v3_1d83f, i32 %v3_1d838, i32 %v8_1d853, i32 %v9_1d853, i32 0, i32 0)
  ret i32 %v10_1d853

; uselistorder directives
  uselistorder i32 %v0_1d838, { 1, 0, 2, 3 }
}

define i32 @function_1d858() local_unnamed_addr {
dec_label_pc_1d858:
  %v0_1d858 = load i32, i32* @ebp, align 4
  %v1_1d858 = add i32 %v0_1d858, -28
  %v2_1d858 = inttoptr i32 %v1_1d858 to i32*
  %v3_1d858 = load i32, i32* %v2_1d858, align 4
  %v3_1d85b = xor i32 %v3_1d858, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* @cf, align 1
  %v4_1d85b = icmp eq i32 %v3_1d85b, 0
  store i32 %v3_1d85b, i32* @eax, align 8
  br i1 %v4_1d85b, label %bb, label %dec_label_pc_1d864

bb:                                               ; preds = %dec_label_pc_1d858
  %v1_1d862 = call i32 @function_1d869()
  br label %dec_label_pc_1d864

dec_label_pc_1d864:                               ; preds = %bb, %dec_label_pc_1d858
  %v2_1d862 = phi i32 [ %v1_1d862, %bb ], [ %v3_1d85b, %dec_label_pc_1d858 ]
  ret i32 %v2_1d862
}

define i32 @function_1d869() local_unnamed_addr {
dec_label_pc_1d869:
  %v0_1d869 = load i32, i32* @esp, align 4
  %v5_1d869 = icmp ugt i32 %v0_1d869, -109
  store i1 %v5_1d869, i1* @cf, align 1
  %v0_1d870 = load i32, i32* @eax, align 8
  ret i32 %v0_1d870
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11lower_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d8c4:
  %v3_1d8fb = call i32 @unknown_3ef3e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1d912

bb:                                               ; preds = %dec_label_pc_1d8c4
  %v1_1d910 = call i32 @function_1d917()
  br label %dec_label_pc_1d912

dec_label_pc_1d912:                               ; preds = %bb, %dec_label_pc_1d8c4
  %v2_1d910 = phi i32 [ %v1_1d910, %bb ], [ %arg1, %dec_label_pc_1d8c4 ]
  ret i32 %v2_1d910

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d917() local_unnamed_addr {
dec_label_pc_1d917:
  %v0_1d918 = load i32, i32* @eax, align 8
  ret i32 %v0_1d918
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d91c:
  ret i32 %arg2
}

define i32 @function_1d92c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d92c:
  %v0_1d92c = load i32, i32* @ebp, align 4
  %v1_1d92c = add i32 %v0_1d92c, 1
  store i32 %v1_1d92c, i32* @ebp, align 4
  %v2_1d934 = add i32 %v0_1d92c, -11
  %v3_1d934 = inttoptr i32 %v2_1d934 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1d934, align 4
  %v0_1d939 = load i32, i32* @ebp, align 4
  %v1_1d939 = add i32 %v0_1d939, -32
  %v2_1d939 = inttoptr i32 %v1_1d939 to i32*
  %v3_1d939 = load i32, i32* %v2_1d939, align 4
  %v1_1d93c = add i32 %v0_1d939, -28
  %v2_1d93c = inttoptr i32 %v1_1d93c to i32*
  %v3_1d93c = load i32, i32* %v2_1d93c, align 4
  %v2_1d946 = call i32 @unknown_3f012(i32 %v3_1d93c, i32 %v3_1d939)
  %v0_1d94e = load i32, i32* @ebp, align 4
  %v1_1d94e = add i32 %v0_1d94e, -28
  %v2_1d94e = inttoptr i32 %v1_1d94e to i32*
  %v3_1d94e = load i32, i32* %v2_1d94e, align 4
  store i32 %v3_1d94e, i32* @eax, align 8
  %v1_1d951 = add i32 %v0_1d94e, -12
  %v2_1d951 = inttoptr i32 %v1_1d951 to i32*
  %v3_1d951 = load i32, i32* %v2_1d951, align 4
  %v4_1d954 = icmp eq i32 %v3_1d951, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1d954, label %bb, label %dec_label_pc_1d95d

bb:                                               ; preds = %dec_label_pc_1d92c
  %v1_1d95b = call i32 @function_1d962()
  br label %dec_label_pc_1d95d

dec_label_pc_1d95d:                               ; preds = %bb, %dec_label_pc_1d92c
  %v3_1d95b = phi i32 [ %v1_1d95b, %bb ], [ %v3_1d94e, %dec_label_pc_1d92c ]
  ret i32 %v3_1d95b
}

define i32 @function_1d962() local_unnamed_addr {
dec_label_pc_1d962:
  %v0_1d963 = load i32, i32* @eax, align 8
  ret i32 %v0_1d963
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d966:
  %v2_1d986 = load i32, i32* %arg1, align 4
  %v1_1d98b = inttoptr i32 %arg2 to i32*
  %v2_1d98b = load i32, i32* %v1_1d98b, align 4
  %v12_1d98d = icmp eq i32 %v2_1d986, %v2_1d98b
  %v1_1d98f = icmp eq i1 %v12_1d98d, false
  %v2_1d98f = zext i1 %v1_1d98f to i32
  %v4_1d98f = and i32 %v2_1d98b, -256
  %v5_1d98f = or i32 %v2_1d98f, %v4_1d98f
  ret i32 %v5_1d98f

; uselistorder directives
  uselistorder i32 %v2_1d98b, { 1, 0 }
}

define i32 @function_1d993() local_unnamed_addr {
dec_label_pc_1d993:
  %eax.global-to-local = alloca i32, align 4
  %v5_1d993 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_1d993
}

define i32 @function_1d9a2() local_unnamed_addr {
dec_label_pc_1d9a2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d9a2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d9a2 = add i32 %v0_1d9a2, -1
  store i32 %v1_1d9a2, i32* %ecx.global-to-local, align 4
  %v0_1d9a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1d9a4
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d9a6:
  %v1_1d9cc = add i32 %arg1, 32
  %v1_1d9e0 = call i32 @unknown_3f0e6(i32 %v1_1d9cc)
  %v4_1d9e5 = trunc i32 %v1_1d9e0 to i8
  %v5_1d9e5 = icmp eq i8 %v4_1d9e5, 0
  br i1 %v5_1d9e5, label %dec_label_pc_1d9f0, label %dec_label_pc_1d9e9

dec_label_pc_1d9e9:                               ; preds = %dec_label_pc_1d9a6
  ret i32 0

dec_label_pc_1d9f0:                               ; preds = %dec_label_pc_1d9a6
  ret i32 %arg3
}

define i32 @function_1da04(i32 %arg1) local_unnamed_addr {
dec_label_pc_1da04:
  %v0_1da04 = load i32, i32* @edx, align 8
  %v1_1da07 = call i32 @unknown_3f0e6(i32 %v0_1da04)
  %v4_1da0c = trunc i32 %v1_1da07 to i8
  %v5_1da0c = icmp eq i8 %v4_1da0c, 0
  %. = zext i1 %v5_1da0c to i32
  store i32 %., i32* @eax, align 8
  %v0_1da1c = load i32, i32* @ebp, align 4
  %v1_1da1c = add i32 %v0_1da1c, -12
  %v2_1da1c = inttoptr i32 %v1_1da1c to i32*
  %v3_1da1c = load i32, i32* %v2_1da1c, align 4
  %v4_1da1f = icmp eq i32 %v3_1da1c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1da1f, label %bb, label %dec_label_pc_1da28

bb:                                               ; preds = %dec_label_pc_1da04
  %v1_1da26 = call i32 @function_1da2d()
  br label %dec_label_pc_1da28

dec_label_pc_1da28:                               ; preds = %bb, %dec_label_pc_1da04
  %v2_1da26 = phi i32 [ %v1_1da26, %bb ], [ %., %dec_label_pc_1da04 ]
  ret i32 %v2_1da26
}

define i32 @function_1da2d() local_unnamed_addr {
dec_label_pc_1da2d:
  %v0_1da2e = load i32, i32* @eax, align 8
  ret i32 %v0_1da2e
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1da30:
  %v2_1da4a = load i32, i32* %arg1, align 4
  %v1_1da4c = add i32 %v2_1da4a, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_1da52 = call i32 @unknown_3f210(i32 %v1_1da4c)
  ret i32 %v1_1da52
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1da6a:
  ret i32 %arg3
}

define i32 @function_1da83(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1da83:
  %eax.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %eax.global-to-local, align 8
  %v1_1da88 = load i32, i32* @ebp, align 4
  %v2_1da88 = add i32 %v1_1da88, -12
  %v3_1da88 = inttoptr i32 %v2_1da88 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1da88, align 4
  %v4_1da88 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_1da88
}

define i32 @function_1da8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1da8c:
  %v7_1da8c = load i32, i32* @ebx, align 8
  %v8_1da8c = add i32 %v7_1da8c, 1217257541
  %v9_1da8c = inttoptr i32 %v8_1da8c to i8*
  store i8 -1, i8* %v9_1da8c, align 1
  %v0_1da93 = load i32, i32* @ebp, align 4
  %v1_1da93 = add i32 %v0_1da93, -20
  %v1_1da96 = add i32 %v0_1da93, -36
  %v2_1da96 = inttoptr i32 %v1_1da96 to i32*
  %v3_1da96 = load i32, i32* %v2_1da96, align 4
  %v0_1da9d = load i32, i32* @ecx, align 4
  %v3_1daa4 = call i32 @unknown_3f278(i32 %v1_1da93, i32 %v0_1da9d, i32 %v3_1da96)
  %v0_1daac = load i32, i32* @ebp, align 4
  %v1_1daac = add i32 %v0_1daac, -20
  %v1_1dab3 = add i32 %v0_1daac, -16
  %v2_1dab9 = call i32 @unknown_3f2d0(i32 %v1_1dab3, i32 %v1_1daac)
  %v0_1dabe = load i32, i32* @ebp, align 4
  %v1_1dabe = add i32 %v0_1dabe, -28
  %v2_1dabe = inttoptr i32 %v1_1dabe to i32*
  %v3_1dabe = load i32, i32* %v2_1dabe, align 4
  %v1_1dac1 = add i32 %v0_1dabe, -16
  %v1_1dac8 = add i32 %v0_1dabe, -32
  %v2_1dac8 = inttoptr i32 %v1_1dac8 to i32*
  %v3_1dac8 = load i32, i32* %v2_1dac8, align 4
  %v3_1dad2 = call i32 @unknown_3f30a(i32 %v3_1dabe, i32 %v3_1dac8, i32 %v1_1dac1)
  %v0_1dada = load i32, i32* @ebp, align 4
  %v1_1dada = add i32 %v0_1dada, -28
  %v2_1dada = inttoptr i32 %v1_1dada to i32*
  %v3_1dada = load i32, i32* %v2_1dada, align 4
  store i32 %v3_1dada, i32* @eax, align 8
  %v1_1dadd = add i32 %v0_1dada, -12
  %v2_1dadd = inttoptr i32 %v1_1dadd to i32*
  %v3_1dadd = load i32, i32* %v2_1dadd, align 4
  %v4_1dae0 = icmp eq i32 %v3_1dadd, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1dae0, label %bb, label %dec_label_pc_1dae9

bb:                                               ; preds = %dec_label_pc_1da8c
  %v1_1dae7 = call i32 @function_1daee()
  br label %dec_label_pc_1dae9

dec_label_pc_1dae9:                               ; preds = %bb, %dec_label_pc_1da8c
  %v2_1dae7 = phi i32 [ %v1_1dae7, %bb ], [ %v3_1dada, %dec_label_pc_1da8c ]
  ret i32 %v2_1dae7
}

define i32 @function_1daee() local_unnamed_addr {
dec_label_pc_1daee:
  %v0_1daef = load i32, i32* @eax, align 8
  ret i32 %v0_1daef
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1daf2:
  %v1_1db0f = call i32 @function_32c4a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1db20

bb:                                               ; preds = %dec_label_pc_1daf2
  %v1_1db1e = call i32 @function_1db25()
  br label %dec_label_pc_1db20

dec_label_pc_1db20:                               ; preds = %bb, %dec_label_pc_1daf2
  %v2_1db1e = phi i32 [ %v1_1db1e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1daf2 ]
  ret i32 %v2_1db1e

; uselistorder directives
  uselistorder i32 (i32)* @function_32c4a, { 1, 0 }
}

define i32 @function_1db25() local_unnamed_addr {
dec_label_pc_1db25:
  %v0_1db26 = load i32, i32* @eax, align 8
  ret i32 %v0_1db26
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEixERSQ_() local_unnamed_addr {
dec_label_pc_1db28:
  %eax.global-to-local = alloca i32, align 4
  %v5_1db2b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_1db2b
}

define i32 @function_1db2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1db2e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_1db2f = load i32, i32* @ebp, align 4
  %v1_1db2f = add i32 %v0_1db2f, 8
  %v2_1db2f = inttoptr i32 %v1_1db2f to i32*
  %v3_1db2f = load i32, i32* %v2_1db2f, align 4
  store i32 %v3_1db2f, i32* %eax.global-to-local, align 8
  %v2_1db32 = add i32 %v0_1db2f, -60
  %v3_1db32 = inttoptr i32 %v2_1db32 to i32*
  store i32 %v3_1db2f, i32* %v3_1db32, align 4
  %v0_1db35 = load i32, i32* @ebp, align 4
  %v1_1db35 = add i32 %v0_1db35, 12
  %v2_1db35 = inttoptr i32 %v1_1db35 to i32*
  %v3_1db35 = load i32, i32* %v2_1db35, align 4
  %v2_1db38 = add i32 %v0_1db35, -64
  %v3_1db38 = inttoptr i32 %v2_1db38 to i32*
  store i32 %v3_1db35, i32* %v3_1db38, align 4
  %v1_1db41 = load i32, i32* @ebp, align 4
  %v2_1db41 = add i32 %v1_1db41, -12
  %v3_1db41 = inttoptr i32 %v2_1db41 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1db41, align 4
  %v0_1db46 = load i32, i32* @ebp, align 4
  %v1_1db46 = add i32 %v0_1db46, -44
  store i32 %v1_1db46, i32* %eax.global-to-local, align 8
  %v1_1db49 = add i32 %v0_1db46, -64
  %v2_1db49 = inttoptr i32 %v1_1db49 to i32*
  %v3_1db49 = load i32, i32* %v2_1db49, align 4
  %v1_1db50 = add i32 %v0_1db46, -60
  %v2_1db50 = inttoptr i32 %v1_1db50 to i32*
  %v3_1db50 = load i32, i32* %v2_1db50, align 4
  %v3_1db5a = call i32 @unknown_3b3ec(i32 %v1_1db46, i32 %v3_1db50, i32 %v3_1db49)
  %v0_1db62 = load i32, i32* @ebp, align 4
  %v1_1db62 = add i32 %v0_1db62, -40
  store i32 %v1_1db62, i32* %eax.global-to-local, align 8
  %v1_1db65 = add i32 %v0_1db62, -60
  %v2_1db65 = inttoptr i32 %v1_1db65 to i32*
  %v3_1db65 = load i32, i32* %v2_1db65, align 4
  %v2_1db6f = call i32 @unknown_3b444(i32 %v1_1db62, i32 %v3_1db65)
  %v0_1db77 = load i32, i32* @ebp, align 4
  %v1_1db77 = add i32 %v0_1db77, -40
  %v1_1db7e = add i32 %v0_1db77, -44
  store i32 %v1_1db7e, i32* %eax.global-to-local, align 8
  %v2_1db84 = call i32 @unknown_3f502(i32 %v1_1db7e, i32 %v1_1db77)
  store i32 %v2_1db84, i32* %eax.global-to-local, align 8
  %v4_1db89 = trunc i32 %v2_1db84 to i8
  %v5_1db89 = icmp eq i8 %v4_1db89, 0
  %v1_1db8b = icmp eq i1 %v5_1db89, false
  br i1 %v1_1db8b, label %dec_label_pc_1dbd5, label %dec_label_pc_1db8d

dec_label_pc_1db8d:                               ; preds = %dec_label_pc_1db2e
  %v0_1db8d = load i32, i32* @ebp, align 4
  %v1_1db8d = add i32 %v0_1db8d, -44
  store i32 %v1_1db8d, i32* %eax.global-to-local, align 8
  %v1_1db93 = call i32 @unknown_3f4d0(i32 %v1_1db8d)
  store i32 %v1_1db93, i32* %ebx.global-to-local, align 8
  %v0_1db9a = load i32, i32* @ebp, align 4
  %v1_1db9a = add i32 %v0_1db9a, -65
  store i32 %v1_1db9a, i32* %eax.global-to-local, align 8
  %v1_1db9d = add i32 %v0_1db9a, -60
  %v2_1db9d = inttoptr i32 %v1_1db9d to i32*
  %v3_1db9d = load i32, i32* %v2_1db9d, align 4
  %v2_1dba7 = call i32 @unknown_3f486(i32 %v1_1db9a, i32 %v3_1db9d)
  store i32 %v2_1dba7, i32* %eax.global-to-local, align 8
  %v0_1dbaf = load i32, i32* %ebx.global-to-local, align 8
  %v0_1dbb3 = load i32, i32* @ebp, align 4
  %v1_1dbb3 = add i32 %v0_1dbb3, -64
  %v2_1dbb3 = inttoptr i32 %v1_1dbb3 to i32*
  %v3_1dbb3 = load i32, i32* %v2_1dbb3, align 4
  %v1_1dbba = add i32 %v0_1dbb3, -29
  store i32 %v1_1dbba, i32* %eax.global-to-local, align 8
  store i32 %v1_1dbba, i32* %stack_var_-16, align 4
  %v3_1dbc0 = call i32 @unknown_3f268(i32 %v1_1dbba, i32 %v3_1dbb3, i32 %v0_1dbaf)
  store i32 %v3_1dbc0, i32* %eax.global-to-local, align 8
  %v4_1dbc5 = trunc i32 %v3_1dbc0 to i8
  %v5_1dbc5 = icmp ne i8 %v4_1dbc5, 0
  %. = zext i1 %v5_1dbc5 to i32
  br label %dec_label_pc_1dbd5

dec_label_pc_1dbd5:                               ; preds = %dec_label_pc_1db8d, %dec_label_pc_1db2e
  %storemerge = phi i32 [ 1, %dec_label_pc_1db2e ], [ %., %dec_label_pc_1db8d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_1dbd5 = icmp eq i32 %storemerge, 0
  br i1 %v5_1dbd5, label %dec_label_pc_1dc31, label %dec_label_pc_1dbd9

dec_label_pc_1dbd9:                               ; preds = %dec_label_pc_1dbd5
  %v0_1dbd9 = load i32, i32* @ebp, align 4
  %v1_1dbd9 = add i32 %v0_1dbd9, -36
  store i32 %v1_1dbd9, i32* %eax.global-to-local, align 8
  %v1_1dbdc = load i32, i32* @esp, align 4
  %v2_1dbdc = inttoptr i32 %v1_1dbdc to i32*
  store i32 %v1_1dbd9, i32* %v2_1dbdc, align 4
  %v0_1dbdf = call i32 @function_317c2()
  %v0_1dbe4 = load i32, i32* @ebp, align 4
  %v1_1dbe4 = add i32 %v0_1dbe4, -36
  store i32 %v1_1dbe4, i32* %eax.global-to-local, align 8
  %v1_1dbe7 = load i32, i32* @esp, align 4
  %v2_1dbe7 = add i32 %v1_1dbe7, 8
  %v3_1dbe7 = inttoptr i32 %v2_1dbe7 to i32*
  store i32 %v1_1dbe4, i32* %v3_1dbe7, align 4
  %v0_1dbeb = load i32, i32* @ebp, align 4
  %v1_1dbeb = add i32 %v0_1dbeb, -64
  %v2_1dbeb = inttoptr i32 %v1_1dbeb to i32*
  %v3_1dbeb = load i32, i32* %v2_1dbeb, align 4
  %v1_1dbee = load i32, i32* @esp, align 4
  %v2_1dbee = add i32 %v1_1dbee, 4
  %v3_1dbee = inttoptr i32 %v2_1dbee to i32*
  store i32 %v3_1dbeb, i32* %v3_1dbee, align 4
  %v0_1dbf2 = load i32, i32* @ebp, align 4
  %v1_1dbf2 = add i32 %v0_1dbf2, -28
  store i32 %v1_1dbf2, i32* %eax.global-to-local, align 8
  %v1_1dbf5 = load i32, i32* @esp, align 4
  %v2_1dbf5 = inttoptr i32 %v1_1dbf5 to i32*
  store i32 %v1_1dbf2, i32* %v2_1dbf5, align 4
  %v0_1dbf8 = call i32 @unknown_3f542()
  %v0_1dbfd = load i32, i32* @ebp, align 4
  %v1_1dbfd = add i32 %v0_1dbfd, -72
  store i32 %v1_1dbfd, i32* %eax.global-to-local, align 8
  %v1_1dc00 = add i32 %v0_1dbfd, -28
  %v1_1dc03 = load i32, i32* @esp, align 4
  %v2_1dc03 = add i32 %v1_1dc03, 12
  %v3_1dc03 = inttoptr i32 %v2_1dc03 to i32*
  store i32 %v1_1dc00, i32* %v3_1dc03, align 4
  %v0_1dc07 = load i32, i32* @ebp, align 4
  %v1_1dc07 = add i32 %v0_1dc07, -44
  %v2_1dc07 = inttoptr i32 %v1_1dc07 to i32*
  %v3_1dc07 = load i32, i32* %v2_1dc07, align 4
  %v1_1dc0a = load i32, i32* @esp, align 4
  %v2_1dc0a = add i32 %v1_1dc0a, 8
  %v3_1dc0a = inttoptr i32 %v2_1dc0a to i32*
  store i32 %v3_1dc07, i32* %v3_1dc0a, align 4
  %v0_1dc0e = load i32, i32* @ebp, align 4
  %v1_1dc0e = add i32 %v0_1dc0e, -60
  %v2_1dc0e = inttoptr i32 %v1_1dc0e to i32*
  %v3_1dc0e = load i32, i32* %v2_1dc0e, align 4
  %v1_1dc11 = load i32, i32* @esp, align 4
  %v2_1dc11 = add i32 %v1_1dc11, 4
  %v3_1dc11 = inttoptr i32 %v2_1dc11 to i32*
  store i32 %v3_1dc0e, i32* %v3_1dc11, align 4
  %v0_1dc15 = load i32, i32* %eax.global-to-local, align 8
  %v1_1dc15 = load i32, i32* @esp, align 4
  %v2_1dc15 = inttoptr i32 %v1_1dc15 to i32*
  store i32 %v0_1dc15, i32* %v2_1dc15, align 4
  %v0_1dc18 = call i32 @unknown_3f596()
  store i32 %v0_1dc18, i32* %eax.global-to-local, align 8
  %v0_1dc20 = load i32, i32* @ebp, align 4
  %v1_1dc20 = add i32 %v0_1dc20, -72
  %v2_1dc20 = inttoptr i32 %v1_1dc20 to i32*
  %v3_1dc20 = load i32, i32* %v2_1dc20, align 4
  %v2_1dc23 = add i32 %v0_1dc20, -44
  %v3_1dc23 = inttoptr i32 %v2_1dc23 to i32*
  store i32 %v3_1dc20, i32* %v3_1dc23, align 4
  %v0_1dc26 = load i32, i32* @ebp, align 4
  %v1_1dc26 = add i32 %v0_1dc26, -28
  store i32 %v1_1dc26, i32* %eax.global-to-local, align 8
  %v1_1dc29 = load i32, i32* @esp, align 4
  %v2_1dc29 = inttoptr i32 %v1_1dc29 to i32*
  store i32 %v1_1dc26, i32* %v2_1dc29, align 4
  %v0_1dc2c = load i32, i32* %stack_var_-16, align 4
  %v1_1dc2c = call i32 @unknown_3b61a(i32 %v0_1dc2c)
  store i32 %v1_1dc2c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1dc31

dec_label_pc_1dc31:                               ; preds = %dec_label_pc_1dbd9, %dec_label_pc_1dbd5
  %v0_1dc31 = load i32, i32* @ebp, align 4
  %v1_1dc31 = add i32 %v0_1dc31, -44
  store i32 %v1_1dc31, i32* %eax.global-to-local, align 8
  %v1_1dc34 = load i32, i32* @esp, align 4
  %v2_1dc34 = inttoptr i32 %v1_1dc34 to i32*
  store i32 %v1_1dc31, i32* %v2_1dc34, align 4
  %v0_1dc37 = load i32, i32* %stack_var_-16, align 4
  %v1_1dc37 = call i32 @unknown_3f4d0(i32 %v0_1dc37)
  %v1_1dc3c = add i32 %v1_1dc37, 12
  store i32 %v1_1dc3c, i32* @eax, align 8
  %v0_1dc3f = load i32, i32* @ebp, align 4
  %v1_1dc3f = add i32 %v0_1dc3f, -12
  %v2_1dc3f = inttoptr i32 %v1_1dc3f to i32*
  %v3_1dc3f = load i32, i32* %v2_1dc3f, align 4
  %v4_1dc42 = icmp eq i32 %v3_1dc3f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1dc42, label %bb, label %dec_label_pc_1dc64

bb:                                               ; preds = %dec_label_pc_1dc31
  %v1_1dc49 = call i32 @function_1dc69()
  store i32 %v1_1dc49, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1dc64

dec_label_pc_1dc64:                               ; preds = %dec_label_pc_1dc31, %bb
  %v0_1dc4b = phi i32 [ %v1_1dc3c, %dec_label_pc_1dc31 ], [ %v1_1dc49, %bb ]
  ret i32 %v0_1dc4b

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @unknown_3f4d0, { 1, 0 }
  uselistorder label %dec_label_pc_1dc64, { 1, 0 }
}

define i32 @function_1dc4d() local_unnamed_addr {
dec_label_pc_1dc4d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1dc4d = load i32, i32* %eax.global-to-local, align 8
  %v0_1dc4f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1dc4f = add i32 %v0_1dc4f, -28
  store i32 %v1_1dc4f, i32* %eax.global-to-local, align 8
  %v1_1dc55 = call i32 @unknown_3b61a(i32 %v1_1dc4f)
  store i32 %v0_1dc4d, i32* %eax.global-to-local, align 8
  ret i32 %v0_1dc4d

; uselistorder directives
  uselistorder i32 %v0_1dc4d, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3b61a, { 1, 0 }
}

define i32 @function_1dc69() local_unnamed_addr {
dec_label_pc_1dc69:
  %v0_1dc6d = load i32, i32* @eax, align 8
  ret i32 %v0_1dc6d
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5eraseESt17_Rb_tree_iteratorISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dc6e:
  %v2_1dc98 = call i32 @unknown_3f752(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1dca9

bb:                                               ; preds = %dec_label_pc_1dc6e
  %v1_1dca7 = call i32 @function_1dcae()
  br label %dec_label_pc_1dca9

dec_label_pc_1dca9:                               ; preds = %bb, %dec_label_pc_1dc6e
  %v2_1dca7 = phi i32 [ %v1_1dca7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1dc6e ]
  ret i32 %v2_1dca7
}

define i32 @function_1dcae() local_unnamed_addr {
dec_label_pc_1dcae:
  %v0_1dcaf = load i32, i32* @eax, align 8
  ret i32 %v0_1dcaf
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dcb0:
  ret i32 %arg2
}

define i32 @function_1dcc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dcc4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1dcc4 = load i32, i32* @ecx, align 4
  %v1_1dcc4 = add i32 %v0_1dcc4, -1587159995
  %v2_1dcc4 = inttoptr i32 %v1_1dcc4 to i8*
  %v3_1dcc4 = load i8, i8* %v2_1dcc4, align 1
  %v5_1dcc4 = trunc i32 %v0_1dcc4 to i8
  %v6_1dcc4 = load i1, i1* @cf, align 1
  %v7_1dcc4 = zext i1 %v6_1dcc4 to i8
  %v8_1dcc4 = add i8 %v3_1dcc4, %v5_1dcc4
  %v9_1dcc4 = add i8 %v7_1dcc4, %v8_1dcc4
  %v27_1dcc4 = icmp ule i8 %v9_1dcc4, %v3_1dcc4
  %v28_1dcc4 = icmp ult i8 %v8_1dcc4, %v3_1dcc4
  %v29_1dcc4 = select i1 %v6_1dcc4, i1 %v27_1dcc4, i1 %v28_1dcc4
  store i1 %v29_1dcc4, i1* %cf.global-to-local, align 1
  store i8 %v9_1dcc4, i8* %v2_1dcc4, align 1
  %v0_1dcca = load i32, i32* @eax, align 8
  %v1_1dcca = trunc i32 %v0_1dcca to i8
  %v2_1dcca = load i1, i1* %cf.global-to-local, align 1
  %v3_1dcca = zext i1 %v2_1dcca to i8
  %v4_1dcca = add i8 %v3_1dcca, %v1_1dcca
  %v19_1dcca = icmp ule i8 %v4_1dcca, %v1_1dcca
  %v21_1dcca = icmp eq i1 %v2_1dcca, %v19_1dcca
  store i1 %v21_1dcca, i1* %cf.global-to-local, align 1
  %v22_1dcca = zext i8 %v4_1dcca to i32
  %v24_1dcca = and i32 %v0_1dcca, -256
  %v25_1dcca = or i32 %v22_1dcca, %v24_1dcca
  store i32 %v25_1dcca, i32* %eax.global-to-local, align 8
  %v1_1dccc = inttoptr i32 %v25_1dcca to i8*
  %v2_1dccc = load i8, i8* %v1_1dccc, align 1
  %v5_1dccc = add i8 %v2_1dccc, %v4_1dcca
  store i8 %v5_1dccc, i8* %v1_1dccc, align 1
  %v0_1dcce = load i32, i32* %eax.global-to-local, align 8
  %v1_1dcce = load i32, i32* @ebp, align 4
  %v2_1dcce = add i32 %v1_1dcce, -12
  %v3_1dcce = inttoptr i32 %v2_1dcce to i32*
  store i32 %v0_1dcce, i32* %v3_1dcce, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1dcd3 = load i32, i32* @ebp, align 4
  %v1_1dcd3 = add i32 %v0_1dcd3, -36
  %v2_1dcd3 = inttoptr i32 %v1_1dcd3 to i32*
  %v3_1dcd3 = load i32, i32* %v2_1dcd3, align 4
  store i32 %v3_1dcd3, i32* %eax.global-to-local, align 8
  %v1_1dcd6 = inttoptr i32 %v3_1dcd3 to i32*
  %v2_1dcd6 = load i32, i32* %v1_1dcd6, align 4
  store i32 %v2_1dcd6, i32* %eax.global-to-local, align 8
  %v1_1dcdc = add i32 %v0_1dcd3, -28
  %v2_1dcdc = inttoptr i32 %v1_1dcdc to i32*
  %v3_1dcdc = load i32, i32* %v2_1dcdc, align 4
  store i32 %v3_1dcdc, i32* %eax.global-to-local, align 8
  %v2_1dce2 = call i32 @unknown_3875c(i32 %v3_1dcdc, i32 %v2_1dcd6)
  store i32 %v2_1dce2, i32* %eax.global-to-local, align 8
  %v0_1dce7 = load i32, i32* @ebp, align 4
  %v1_1dce7 = add i32 %v0_1dce7, -36
  %v2_1dce7 = inttoptr i32 %v1_1dce7 to i32*
  %v3_1dce7 = load i32, i32* %v2_1dce7, align 4
  store i32 %v3_1dce7, i32* %eax.global-to-local, align 8
  %v1_1dcee = add i32 %v0_1dce7, -32
  %v2_1dcee = inttoptr i32 %v1_1dcee to i32*
  %v3_1dcee = load i32, i32* %v2_1dcee, align 4
  store i32 %v3_1dcee, i32* %eax.global-to-local, align 8
  %v2_1dcf4 = call i32 @unknown_3f7e8(i32 %v3_1dcee, i32 %v3_1dce7)
  store i32 %v2_1dcf4, i32* %eax.global-to-local, align 8
  %v0_1dcf9 = load i32, i32* @ebp, align 4
  %v1_1dcf9 = add i32 %v0_1dcf9, -28
  %v2_1dcf9 = inttoptr i32 %v1_1dcf9 to i32*
  %v3_1dcf9 = load i32, i32* %v2_1dcf9, align 4
  store i32 %v3_1dcf9, i32* @eax, align 8
  %v1_1dcfc = add i32 %v0_1dcf9, -12
  %v2_1dcfc = inttoptr i32 %v1_1dcfc to i32*
  %v3_1dcfc = load i32, i32* %v2_1dcfc, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_1dcff = icmp eq i32 %v3_1dcfc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1dcff, label %bb, label %dec_label_pc_1dd08

bb:                                               ; preds = %dec_label_pc_1dcc4
  %v1_1dd06 = call i32 @function_1dd0d()
  store i32 %v1_1dd06, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1dd08

dec_label_pc_1dd08:                               ; preds = %bb, %dec_label_pc_1dcc4
  %v2_1dd06 = phi i32 [ %v1_1dd06, %bb ], [ %v3_1dcf9, %dec_label_pc_1dcc4 ]
  ret i32 %v2_1dd06

; uselistorder directives
  uselistorder i8 %v4_1dcca, { 0, 2, 1 }
  uselistorder i8 %v1_1dcca, { 1, 0 }
  uselistorder i8 %v9_1dcc4, { 1, 0 }
  uselistorder i8 %v8_1dcc4, { 1, 0 }
}

define i32 @function_1dd0d() local_unnamed_addr {
dec_label_pc_1dd0d:
  %v0_1dd0e = load i32, i32* @eax, align 8
  ret i32 %v0_1dd0e
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd12:
  %v1_1dd2f = call i32 @unknown_3f8fa(i32 %arg1)
  store i32 %v1_1dd2f, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1dd40

bb:                                               ; preds = %dec_label_pc_1dd12
  %v1_1dd3e = call i32 @function_1dd45()
  br label %dec_label_pc_1dd40

dec_label_pc_1dd40:                               ; preds = %bb, %dec_label_pc_1dd12
  %v2_1dd3e = phi i32 [ %v1_1dd3e, %bb ], [ %v1_1dd2f, %dec_label_pc_1dd12 ]
  ret i32 %v2_1dd3e
}

define i32 @function_1dd45() local_unnamed_addr {
dec_label_pc_1dd45:
  %v0_1dd46 = load i32, i32* @eax, align 8
  ret i32 %v0_1dd46
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj120ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd48:
  ret i32 %arg1
}

define i32 @function_1dd58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd58:
  %v2_1dd58 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1dd58 = load i32, i32* @eax, align 8
  %v4_1dd58 = trunc i32 %v3_1dd58 to i8
  %v5_1dd58 = add i8 %v4_1dd58, %v2_1dd58
  %v21_1dd58 = inttoptr i32 %v3_1dd58 to i8*
  store i8 %v5_1dd58, i8* %v21_1dd58, align 1
  %v0_1dd5a = load i32, i32* @eax, align 8
  %v1_1dd5a = load i32, i32* @ebp, align 4
  %v2_1dd5a = add i32 %v1_1dd5a, -12
  %v3_1dd5a = inttoptr i32 %v2_1dd5a to i32*
  store i32 %v0_1dd5a, i32* %v3_1dd5a, align 4
  %v0_1dd5f = load i32, i32* @ebp, align 4
  %v1_1dd5f = add i32 %v0_1dd5f, -12
  %v2_1dd5f = inttoptr i32 %v1_1dd5f to i32*
  %v3_1dd5f = load i32, i32* %v2_1dd5f, align 4
  %v3_1dd62 = xor i32 %v3_1dd5f, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1dd62
}

define i32 @_ZN5boost15aligned_storageILj120ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dd72:
  %v1_1dd8f = call i32 @unknown_3baba(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1dda0

bb:                                               ; preds = %dec_label_pc_1dd72
  %v1_1dd9e = call i32 @function_1dda5()
  br label %dec_label_pc_1dda0

dec_label_pc_1dda0:                               ; preds = %bb, %dec_label_pc_1dd72
  %v2_1dd9e = phi i32 [ %v1_1dd9e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1dd72 ]
  ret i32 %v2_1dd9e
}

define i32 @function_1dda5() local_unnamed_addr {
dec_label_pc_1dda5:
  %v0_1dda6 = load i32, i32* @eax, align 8
  ret i32 %v0_1dda6
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyEPSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dda8:
  %stack_var_-17 = alloca i32, align 4
  %v2_1ddc5 = ptrtoint i32* %stack_var_-17 to i32
  %v3_1ddd9 = call i32 @unknown_3f9be(i32 %arg1, i32 %arg2, i32 %v2_1ddc5)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ddea

bb:                                               ; preds = %dec_label_pc_1dda8
  %v1_1dde8 = call i32 @function_1ddef()
  br label %dec_label_pc_1ddea

dec_label_pc_1ddea:                               ; preds = %bb, %dec_label_pc_1dda8
  %v2_1dde8 = phi i32 [ %v1_1dde8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1dda8 ]
  ret i32 %v2_1dde8
}

define i32 @function_1ddef() local_unnamed_addr {
dec_label_pc_1ddef:
  %v0_1ddf0 = load i32, i32* @eax, align 8
  ret i32 %v0_1ddf0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE13get_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ddf2:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1de18

bb:                                               ; preds = %dec_label_pc_1ddf2
  %v2_1de16 = call i32 @function_1de1d(i32 %arg1)
  br label %dec_label_pc_1de18

dec_label_pc_1de18:                               ; preds = %bb, %dec_label_pc_1ddf2
  %v3_1de16 = phi i32 [ %v2_1de16, %bb ], [ %arg1, %dec_label_pc_1ddf2 ]
  ret i32 %v3_1de16
}

define i32 @function_1de1d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de1d:
  %v0_1de1e = load i32, i32* @eax, align 8
  ret i32 %v0_1de1e
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de20:
  %v1_1de3d = call i32 @unknown_3fb90(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1de4e

bb:                                               ; preds = %dec_label_pc_1de20
  %v1_1de4c = call i32 @function_1de53()
  br label %dec_label_pc_1de4e

dec_label_pc_1de4e:                               ; preds = %bb, %dec_label_pc_1de20
  %v2_1de4c = phi i32 [ %v1_1de4c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1de20 ]
  ret i32 %v2_1de4c
}

define i32 @function_1de53() local_unnamed_addr {
dec_label_pc_1de53:
  %v0_1de54 = load i32, i32* @eax, align 8
  ret i32 %v0_1de54
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de56:
  %v1_1de73 = call i32 @unknown_3fc9c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1de84

bb:                                               ; preds = %dec_label_pc_1de56
  %v1_1de82 = call i32 @function_1de89()
  br label %dec_label_pc_1de84

dec_label_pc_1de84:                               ; preds = %bb, %dec_label_pc_1de56
  %v2_1de82 = phi i32 [ %v1_1de82, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1de56 ]
  ret i32 %v2_1de82
}

define i32 @function_1de89() local_unnamed_addr {
dec_label_pc_1de89:
  %v0_1de8a = load i32, i32* @eax, align 8
  ret i32 %v0_1de8a
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1de8c:
  %v2_1deb7 = call i32 @unknown_3fae4(i32 %arg1, i32 %arg2)
  %v1_1debf = add i32 %arg2, 8
  %v1_1dec5 = add i32 %arg1, 8
  %v2_1decf = call i32 @unknown_3fc5a(i32 %v1_1dec5, i32 %v1_1debf)
  ret i32 %v2_1decf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ded6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ded6:
  %v0_1deda = call i32 @unknown_3fd40()
  ret i32 %v0_1deda
}

define i32 @function_1dee0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dee0:
  %v0_1dee0 = load i32, i32* @ebp, align 4
  %v1_1dee1 = add i32 %v0_1dee0, 1418319941
  %v2_1dee1 = inttoptr i32 %v1_1dee1 to i32*
  %v3_1dee1 = load i32, i32* %v2_1dee1, align 4
  store i32 %v3_1dee1, i32* @ecx, align 4
  %v0_1dee7 = load i32, i32* @eax, align 8
  %v11_1dee7 = and i32 %v0_1dee7, -252
  store i32 %v11_1dee7, i32* @eax, align 8
  %v1_1deec = call i32 @function_34888(i32 %v11_1dee7)
  %v0_1def4 = load i32, i32* @ebp, align 4
  %v1_1def4 = add i32 %v0_1def4, -60
  %v2_1def4 = inttoptr i32 %v1_1def4 to i32*
  %v3_1def4 = load i32, i32* %v2_1def4, align 4
  %v1_1def7 = add i32 %v3_1def4, 8
  %v1_1defa = add i32 %v0_1def4, -36
  %v2_1df04 = call i32 @unknown_3fd74(i32 %v1_1defa, i32 %v1_1def7)
  %v0_1df0c = load i32, i32* @ebp, align 4
  %v1_1df0c = add i32 %v0_1df0c, -64
  %v2_1df0c = inttoptr i32 %v1_1df0c to i32*
  %v3_1df0c = load i32, i32* %v2_1df0c, align 4
  %v1_1df0f = add i32 %v3_1df0c, 8
  %v1_1df12 = add i32 %v0_1df0c, -68
  %v2_1df1c = call i32 @unknown_3fdbe(i32 %v1_1df12, i32 %v1_1df0f)
  %v0_1df24 = load i32, i32* @ebp, align 4
  %v1_1df24 = add i32 %v0_1df24, -68
  %v2_1df24 = inttoptr i32 %v1_1df24 to i32*
  %v3_1df24 = load i32, i32* %v2_1df24, align 4
  %v2_1df27 = add i32 %v0_1df24, -44
  %v3_1df27 = inttoptr i32 %v2_1df27 to i32*
  store i32 %v3_1df24, i32* %v3_1df27, align 4
  %v0_1df2a = call i32 @function_1e01f()
  ret i32 %v0_1df2a

; uselistorder directives
  uselistorder i32 %v11_1dee7, { 1, 0 }
}

define i32 @function_1df2f() local_unnamed_addr {
dec_label_pc_1df2f:
  %v0_1df2f = load i32, i32* @ebp, align 4
  %v1_1df2f = add i32 %v0_1df2f, -60
  %v2_1df2f = inttoptr i32 %v1_1df2f to i32*
  %v3_1df2f = load i32, i32* %v2_1df2f, align 4
  %v1_1df32 = add i32 %v3_1df2f, 8
  %v1_1df35 = add i32 %v0_1df2f, -16
  %v3_1df3f = call i32 @unknown_3b7a8(i32 %v1_1df35, i32 %v1_1df32)
  %v0_1df47 = load i32, i32* @ebp, align 4
  %v1_1df47 = add i32 %v0_1df47, -16
  %v1_1df4e = add i32 %v0_1df47, -36
  %v4_1df54 = call i32 @unknown_3b7f2(i32 %v1_1df4e, i32 %v1_1df47)
  %v4_1df59 = trunc i32 %v4_1df54 to i8
  %v5_1df59 = icmp eq i8 %v4_1df59, 0
  %v1_1df5b = icmp eq i1 %v5_1df59, false
  br i1 %v1_1df5b, label %bb, label %dec_label_pc_1df5d

bb:                                               ; preds = %dec_label_pc_1df2f
  %v2_1df5b = call i32 @function_1df81()
  br label %dec_label_pc_1df5d

dec_label_pc_1df5d:                               ; preds = %bb, %dec_label_pc_1df2f
  %v3_1df75 = phi i32 [ %v2_1df5b, %bb ], [ %v4_1df54, %dec_label_pc_1df2f ]
  ret i32 %v3_1df75
}

define i32 @function_1df81() local_unnamed_addr {
dec_label_pc_1df81:
  %v0_1df81 = load i32, i32* @ebp, align 4
  %v1_1df81 = add i32 %v0_1df81, -36
  %v1_1df87 = call i32 @unknown_3b8bc(i32 %v1_1df81)
  %v0_1df8c = load i32, i32* @ebp, align 4
  %v1_1df8c = add i32 %v0_1df8c, -40
  %v2_1df8c = inttoptr i32 %v1_1df8c to i32*
  %v3_1df8c = load i32, i32* %v2_1df8c, align 4
  %v2_1df8f = add i32 %v1_1df87, 12
  %v3_1df8f = inttoptr i32 %v2_1df8f to i32*
  store i32 %v3_1df8c, i32* %v3_1df8f, align 4
  %v0_1df92 = load i32, i32* @ebp, align 4
  %v1_1df92 = add i32 %v0_1df92, -28
  %v1_1df95 = add i32 %v0_1df92, -44
  %v1_1df9c = add i32 %v0_1df92, -64
  %v2_1df9c = inttoptr i32 %v1_1df9c to i32*
  %v3_1df9c = load i32, i32* %v2_1df9c, align 4
  %v3_1dfa6 = call i32 @unknown_3ff12(i32 %v1_1df92, i32 %v3_1df9c, i32 %v1_1df95)
  %v0_1dfae = load i32, i32* @ebp, align 4
  %v1_1dfae = add i32 %v0_1dfae, -44
  %v2_1dfae = inttoptr i32 %v1_1dfae to i32*
  %v3_1dfae = load i32, i32* %v2_1dfae, align 4
  %v2_1dfb1 = add i32 %v0_1dfae, -24
  %v3_1dfb1 = inttoptr i32 %v2_1dfb1 to i32*
  store i32 %v3_1dfae, i32* %v3_1dfb1, align 4
  %v0_1dfb4 = load i32, i32* @ebp, align 4
  %v1_1dfb4 = add i32 %v0_1dfb4, -24
  %v1_1dfba = call i32 @unknown_3fed2(i32 %v1_1dfb4)
  %v0_1dfbf = load i32, i32* @ebp, align 4
  %v1_1dfbf = add i32 %v0_1dfbf, -20
  %v1_1dfc2 = add i32 %v0_1dfbf, -24
  %v1_1dfc9 = add i32 %v0_1dfbf, -64
  %v2_1dfc9 = inttoptr i32 %v1_1dfc9 to i32*
  %v3_1dfc9 = load i32, i32* %v2_1dfc9, align 4
  %v3_1dfd3 = call i32 @unknown_3ff12(i32 %v1_1dfbf, i32 %v3_1dfc9, i32 %v1_1dfc2)
  br label %dec_label_pc_1dff3

dec_label_pc_1dfdd:                               ; preds = %dec_label_pc_1dff3
  %v1_1dfdd = add i32 %v0_1dfdd, -28
  %v1_1dfe3 = call i32 @unknown_4000e(i32 %v1_1dfdd)
  %v0_1dfe8 = load i32, i32* @ebp, align 4
  %v1_1dfe8 = add i32 %v0_1dfe8, -40
  %v1_1dfee = call i32 @unknown_38464(i32 %v1_1dfe8)
  br label %dec_label_pc_1dff3

dec_label_pc_1dff3:                               ; preds = %dec_label_pc_1dfdd, %dec_label_pc_1df81
  %v0_1dff3 = load i32, i32* @ebp, align 4
  %v1_1dff3 = add i32 %v0_1dff3, -20
  %v1_1dffa = add i32 %v0_1dff3, -28
  %v2_1e000 = call i32 @unknown_3ffce(i32 %v1_1dffa, i32 %v1_1dff3)
  %v4_1e005 = trunc i32 %v2_1e000 to i8
  %v5_1e005 = icmp eq i8 %v4_1e005, 0
  %v1_1e007 = icmp eq i1 %v5_1e005, false
  %v0_1dfdd = load i32, i32* @ebp, align 4
  br i1 %v1_1e007, label %dec_label_pc_1dfdd, label %dec_label_pc_1e009

dec_label_pc_1e009:                               ; preds = %dec_label_pc_1dff3
  %v1_1e009 = add i32 %v0_1dfdd, -44
  %v1_1e00f = call i32 @unknown_3fed2(i32 %v1_1e009)
  %v0_1e014 = load i32, i32* @ebp, align 4
  %v1_1e014 = add i32 %v0_1e014, -36
  %v1_1e01a = call i32 @unknown_3fe92(i32 %v1_1e014)
  ret i32 %v1_1e01a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3fed2, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3ff12, { 1, 0 }
}

define i32 @function_1e01f() local_unnamed_addr {
dec_label_pc_1e01f:
  %v0_1e01f = load i32, i32* @ebp, align 4
  %v1_1e01f = add i32 %v0_1e01f, -64
  %v2_1e01f = inttoptr i32 %v1_1e01f to i32*
  %v3_1e01f = load i32, i32* %v2_1e01f, align 4
  %v1_1e022 = add i32 %v3_1e01f, 8
  %v1_1e025 = add i32 %v0_1e01f, -32
  %v2_1e02f = call i32 @unknown_3fe08(i32 %v1_1e025, i32 %v1_1e022)
  %v0_1e037 = load i32, i32* @ebp, align 4
  %v1_1e037 = add i32 %v0_1e037, -32
  %v1_1e03e = add i32 %v0_1e037, -44
  %v2_1e044 = call i32 @unknown_3fe52(i32 %v1_1e03e, i32 %v1_1e037)
  %v4_1e049 = trunc i32 %v2_1e044 to i8
  %v5_1e049 = icmp eq i8 %v4_1e049, 0
  %v1_1e04b = icmp eq i1 %v5_1e049, false
  br i1 %v1_1e04b, label %bb, label %dec_label_pc_1e051

bb:                                               ; preds = %dec_label_pc_1e01f
  %v2_1e04b = call i32 @function_1df2f()
  br label %dec_label_pc_1e051

dec_label_pc_1e051:                               ; preds = %bb, %dec_label_pc_1e01f
  %v0_1e051 = call i32 @function_1e07c()
  ret i32 %v0_1e051
}

define i32 @function_1e053() local_unnamed_addr {
dec_label_pc_1e053:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e053 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_1e053, i32* @ebx, align 8
  %v0_1e055 = load i32, i32* @ebp, align 4
  %v1_1e055 = add i32 %v0_1e055, -60
  %v2_1e055 = inttoptr i32 %v1_1e055 to i32*
  %v3_1e055 = load i32, i32* %v2_1e055, align 4
  %v1_1e058 = add i32 %v3_1e055, 8
  store i32 %v1_1e058, i32* %eax.global-to-local, align 8
  %v1_1e05e = call i32 @unknown_3bce2(i32 %v1_1e058)
  store i32 %v1_1e05e, i32* %eax.global-to-local, align 8
  %v0_1e063 = call i32 @function_1e067()
  store i32 %v0_1e063, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e063
}

define i32 @function_1e065() local_unnamed_addr {
dec_label_pc_1e065:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e065 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e065
}

define i32 @function_1e067() local_unnamed_addr {
dec_label_pc_1e067:
  %v0_1e067 = load i32, i32* @ebp, align 4
  %v1_1e067 = add i32 %v0_1e067, -60
  %v2_1e067 = inttoptr i32 %v1_1e067 to i32*
  %v3_1e067 = load i32, i32* %v2_1e067, align 4
  %v1_1e06d = call i32 @unknown_3bcac(i32 %v3_1e067)
  %v0_1e072 = load i32, i32* @ebx, align 8
  ret i32 %v0_1e072
}

define i32 @function_1e07c() local_unnamed_addr {
dec_label_pc_1e07c:
  %v0_1e07c = load i32, i32* @ebp, align 4
  %v1_1e07c = add i32 %v0_1e07c, -12
  %v2_1e07c = inttoptr i32 %v1_1e07c to i32*
  %v3_1e07c = load i32, i32* %v2_1e07c, align 4
  %v3_1e07f = xor i32 %v3_1e07c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e07f = icmp eq i32 %v3_1e07f, 0
  store i32 %v3_1e07f, i32* @eax, align 8
  br i1 %v4_1e07f, label %bb, label %dec_label_pc_1e088

bb:                                               ; preds = %dec_label_pc_1e07c
  %v1_1e086 = call i32 @function_1e08d()
  br label %dec_label_pc_1e088

dec_label_pc_1e088:                               ; preds = %bb, %dec_label_pc_1e07c
  %v2_1e086 = phi i32 [ %v1_1e086, %bb ], [ %v3_1e07f, %dec_label_pc_1e07c ]
  ret i32 %v2_1e086
}

define i32 @function_1e08d() local_unnamed_addr {
dec_label_pc_1e08d:
  %v0_1e08d = load i32, i32* @ebp, align 4
  %v1_1e08d = add i32 %v0_1e08d, -4
  %v2_1e08d = inttoptr i32 %v1_1e08d to i32*
  %v3_1e08d = load i32, i32* %v2_1e08d, align 4
  store i32 %v3_1e08d, i32* @ebx, align 8
  %v0_1e091 = load i32, i32* @eax, align 8
  ret i32 %v0_1e091
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS1_5mutexEEEEEEEEC1ISM_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e092:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1e0ba = add i32 %tmp104, 4
  %v2_1e0c7 = call i32 @unknown_4024e(i32 %v1_1e0ba, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e0f1

bb:                                               ; preds = %dec_label_pc_1e092
  %v4_1e0ef = call i32 @function_1e0f6(i32 %tmp104, i32 %arg2, i32 %arg2)
  br label %dec_label_pc_1e0f1

dec_label_pc_1e0f1:                               ; preds = %bb, %dec_label_pc_1e092
  %v5_1e0ef = phi i32 [ %v4_1e0ef, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e092 ]
  ret i32 %v5_1e0ef

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
}

define i32 @function_1e0f6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e0f6:
  %v0_1e0f7 = load i32, i32* @eax, align 8
  ret i32 %v0_1e0f7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e0f8:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_1e120 = add i32 %tmp104, 4
  %v2_1e12d = call i32 @unknown_40340(i32 %v1_1e120, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10pop_back_nEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e15e:
  %v1_1e17e = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_1e17e = inttoptr i32 %v1_1e17e to i32*
  %v3_1e17e = load i32, i32* %v2_1e17e, align 4
  %v10_1e184 = icmp ult i32 %v3_1e17e, %arg2
  %v1_1e187 = icmp eq i1 %v10_1e184, false
  br i1 %v1_1e187, label %bb, label %dec_label_pc_1e189

bb:                                               ; preds = %dec_label_pc_1e15e
  %v4_1e187 = call i32 @function_1e1ad(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1e189

dec_label_pc_1e189:                               ; preds = %bb, %dec_label_pc_1e15e
  %v3_1e1a1 = phi i32 [ %v4_1e187, %bb ], [ %v3_1e17e, %dec_label_pc_1e15e ]
  ret i32 %v3_1e1a1
}

define i32 @function_1e1ad(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e1ad:
  %v0_1e1ad = load i32, i32* @ebp, align 4
  %v1_1e1ad = add i32 %v0_1e1ad, -32
  %v2_1e1ad = inttoptr i32 %v1_1e1ad to i32*
  %v3_1e1ad = load i32, i32* %v2_1e1ad, align 4
  %v10_1e1ad = icmp eq i32 %v3_1e1ad, 0
  br i1 %v10_1e1ad, label %dec_label_pc_1e1dc, label %dec_label_pc_1e1b3

dec_label_pc_1e1b3:                               ; preds = %dec_label_pc_1e1ad
  %v1_1e1ba = add i32 %v0_1e1ad, -28
  %v2_1e1ba = inttoptr i32 %v1_1e1ba to i32*
  %v3_1e1ba = load i32, i32* %v2_1e1ba, align 4
  %v2_1e1c0 = call i32 @unknown_40432(i32 %v3_1e1ba, i32 %v3_1e1ad)
  %v0_1e1c5 = load i32, i32* @ebp, align 4
  %v1_1e1c5 = add i32 %v0_1e1c5, -28
  %v2_1e1c5 = inttoptr i32 %v1_1e1c5 to i32*
  %v3_1e1c5 = load i32, i32* %v2_1e1c5, align 4
  %v1_1e1c8 = add i32 %v3_1e1c5, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_1e1c8 = inttoptr i32 %v1_1e1c8 to i32*
  %v3_1e1c8 = load i32, i32* %v2_1e1c8, align 4
  %v2_1e1d0 = add i32 %v0_1e1c5, -32
  %v3_1e1d0 = inttoptr i32 %v2_1e1d0 to i32*
  %v4_1e1d0 = load i32, i32* %v3_1e1d0, align 4
  %v5_1e1d0 = sub i32 %v3_1e1c8, %v4_1e1d0
  %v3_1e1d3 = load i32, i32* %v2_1e1c5, align 4
  %v2_1e1d6 = add i32 %v3_1e1d3, ptrtoint (i32* @global_var_80.1967 to i32)
  %v3_1e1d6 = inttoptr i32 %v2_1e1d6 to i32*
  store i32 %v5_1e1d0, i32* %v3_1e1d6, align 4
  %v0_1e1dc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1e1dc

dec_label_pc_1e1dc:                               ; preds = %dec_label_pc_1e1b3, %dec_label_pc_1e1ad
  %v0_1e1dc = phi i32 [ %v0_1e1dc.pre, %dec_label_pc_1e1b3 ], [ %v0_1e1ad, %dec_label_pc_1e1ad ]
  %v1_1e1dc = add i32 %v0_1e1dc, -12
  %v2_1e1dc = inttoptr i32 %v1_1e1dc to i32*
  %v3_1e1dc = load i32, i32* %v2_1e1dc, align 4
  %v3_1e1df = xor i32 %v3_1e1dc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e1df = icmp eq i32 %v3_1e1df, 0
  store i32 %v3_1e1df, i32* @eax, align 8
  br i1 %v4_1e1df, label %bb, label %dec_label_pc_1e1e8

bb:                                               ; preds = %dec_label_pc_1e1dc
  %v1_1e1e6 = call i32 @function_1e1ed()
  br label %dec_label_pc_1e1e8

dec_label_pc_1e1e8:                               ; preds = %bb, %dec_label_pc_1e1dc
  %v2_1e1e6 = phi i32 [ %v1_1e1e6, %bb ], [ %v3_1e1df, %dec_label_pc_1e1dc ]
  ret i32 %v2_1e1e6
}

define i32 @function_1e1ed() local_unnamed_addr {
dec_label_pc_1e1ed:
  %v0_1e1ee = load i32, i32* @eax, align 8
  ret i32 %v0_1e1ee
}

define i32 @_ZNSt8iteratorISt19output_iterator_tagvvvvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e1f0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e213

bb:                                               ; preds = %dec_label_pc_1e1f0
  %v2_1e211 = call i32 @function_1e218(i32 %arg1)
  br label %dec_label_pc_1e213

dec_label_pc_1e213:                               ; preds = %bb, %dec_label_pc_1e1f0
  %v3_1e211 = phi i32 [ %v2_1e211, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e1f0 ]
  ret i32 %v3_1e211
}

define i32 @function_1e218(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e218:
  %v0_1e219 = load i32, i32* @eax, align 8
  ret i32 %v0_1e219
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEC1ERSG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e21a:
  ret i32 %arg2
}

define i32 @function_1e22c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e22c:
  %v1_1e232 = load i32, i32* @ebp, align 4
  %v2_1e232 = add i32 %v1_1e232, -12
  %v3_1e232 = inttoptr i32 %v2_1e232 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1e232, align 4
  %v0_1e237 = load i32, i32* @ebp, align 4
  %v1_1e237 = add i32 %v0_1e237, -28
  %v2_1e237 = inttoptr i32 %v1_1e237 to i32*
  %v3_1e237 = load i32, i32* %v2_1e237, align 4
  %v1_1e23d = call i32 @unknown_3c40a(i32 %v3_1e237)
  %v0_1e242 = load i32, i32* @ebp, align 4
  %v1_1e242 = add i32 %v0_1e242, -28
  %v2_1e242 = inttoptr i32 %v1_1e242 to i32*
  %v3_1e242 = load i32, i32* %v2_1e242, align 4
  %v1_1e245 = add i32 %v0_1e242, -32
  %v2_1e245 = inttoptr i32 %v1_1e245 to i32*
  %v3_1e245 = load i32, i32* %v2_1e245, align 4
  %v2_1e248 = inttoptr i32 %v3_1e242 to i32*
  store i32 %v3_1e245, i32* %v2_1e248, align 4
  %v0_1e24a = load i32, i32* @ebp, align 4
  %v1_1e24a = add i32 %v0_1e24a, -12
  %v2_1e24a = inttoptr i32 %v1_1e24a to i32*
  %v3_1e24a = load i32, i32* %v2_1e24a, align 4
  %v3_1e24d = xor i32 %v3_1e24a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e24d = icmp eq i32 %v3_1e24d, 0
  store i32 %v3_1e24d, i32* @eax, align 8
  br i1 %v4_1e24d, label %bb, label %dec_label_pc_1e256

bb:                                               ; preds = %dec_label_pc_1e22c
  %v1_1e254 = call i32 @function_1e25b()
  br label %dec_label_pc_1e256

dec_label_pc_1e256:                               ; preds = %bb, %dec_label_pc_1e22c
  %v2_1e254 = phi i32 [ %v1_1e254, %bb ], [ %v3_1e24d, %dec_label_pc_1e22c ]
  ret i32 %v2_1e254
}

define i32 @function_1e25b() local_unnamed_addr {
dec_label_pc_1e25b:
  %v0_1e25c = load i32, i32* @eax, align 8
  ret i32 %v0_1e25c
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e25e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_1e287 = inttoptr i32 %arg2 to i32*
  %v2_1e287 = load i32, i32* %v1_1e287, align 4
  store i32 %v2_1e287, i32* %arg1, align 4
  store i32 %tmp104, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e29a

bb:                                               ; preds = %dec_label_pc_1e25e
  %v4_1e298 = call i32 @function_1e29f(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1e29a

dec_label_pc_1e29a:                               ; preds = %bb, %dec_label_pc_1e25e
  %v5_1e298 = phi i32 [ %v4_1e298, %bb ], [ %tmp104, %dec_label_pc_1e25e ]
  ret i32 %v5_1e298
}

define i32 @function_1e29f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e29f:
  %v0_1e2a0 = load i32, i32* @eax, align 8
  ret i32 %v0_1e2a0
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2a4:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e2ca

bb:                                               ; preds = %dec_label_pc_1e2a4
  %v2_1e2c8 = call i32 @function_1e2cf(i32 %arg1)
  br label %dec_label_pc_1e2ca

dec_label_pc_1e2ca:                               ; preds = %bb, %dec_label_pc_1e2a4
  %v3_1e2c8 = phi i32 [ %v2_1e2c8, %bb ], [ %arg1, %dec_label_pc_1e2a4 ]
  ret i32 %v3_1e2c8
}

define i32 @function_1e2cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e2cf:
  %v0_1e2d0 = load i32, i32* @eax, align 8
  ret i32 %v0_1e2d0
}

define i32 @_ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e2d2:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_1e2f2 = load i32, i32* %arg1, align 4
  %v2_1e2fe = call i32 @unknown_405f0(i32 %v2_1e2f2, i32 %arg2)
  store i32 %tmp103, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e312

bb:                                               ; preds = %dec_label_pc_1e2d2
  %v1_1e310 = call i32 @function_1e317()
  br label %dec_label_pc_1e312

dec_label_pc_1e312:                               ; preds = %bb, %dec_label_pc_1e2d2
  %v2_1e310 = phi i32 [ %v1_1e310, %bb ], [ %tmp103, %dec_label_pc_1e2d2 ]
  ret i32 %v2_1e310
}

define i32 @function_1e317() local_unnamed_addr {
dec_label_pc_1e317:
  %v0_1e318 = load i32, i32* @eax, align 8
  ret i32 %v0_1e318
}

define i32 @_ZN5boost20iterator_core_access5equalINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EES10_EEbRKT_RKT0_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1e319:
  %v2_1e34a = call i32 @unknown_406bb(i32 %arg1, i32 %arg2)
  store i32 %v2_1e34a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e35b

bb:                                               ; preds = %dec_label_pc_1e319
  %v1_1e359 = call i32 @function_1e360()
  br label %dec_label_pc_1e35b

dec_label_pc_1e35b:                               ; preds = %bb, %dec_label_pc_1e319
  %v2_1e359 = phi i32 [ %v1_1e359, %bb ], [ %v2_1e34a, %dec_label_pc_1e319 ]
  ret i32 %v2_1e359
}

define i32 @function_1e360() local_unnamed_addr {
dec_label_pc_1e360:
  %v0_1e361 = load i32, i32* @eax, align 8
  ret i32 %v0_1e361
}

define i32 @_ZNK5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiE7derivedEv() local_unnamed_addr {
dec_label_pc_1e362:
  %eax.global-to-local = alloca i32, align 4
  %v17_1e365 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_1e365
}

define i32 @function_1e369(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e369:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1e369 = load i32, i32* @ebp, align 4
  %v1_1e369 = add i32 %v0_1e369, 1
  store i32 %v1_1e369, i32* @ebp, align 4
  %v0_1e36a = load i32, i32* @ecx, align 4
  %v1_1e36a = add i32 %v0_1e36a, -1587157947
  %v2_1e36a = inttoptr i32 %v1_1e36a to i8*
  %v3_1e36a = load i8, i8* %v2_1e36a, align 1
  %v5_1e36a = trunc i32 %v0_1e36a to i8
  %v6_1e36a = or i8 %v3_1e36a, %v5_1e36a
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1e36a, i8* %v2_1e36a, align 1
  %v0_1e370 = load i32, i32* @eax, align 8
  %v1_1e370 = trunc i32 %v0_1e370 to i8
  %v2_1e370 = load i1, i1* %cf.global-to-local, align 1
  %v3_1e370 = zext i1 %v2_1e370 to i8
  %v4_1e370 = add i8 %v3_1e370, %v1_1e370
  %v19_1e370 = icmp ule i8 %v4_1e370, %v1_1e370
  %v21_1e370 = icmp eq i1 %v2_1e370, %v19_1e370
  store i1 %v21_1e370, i1* %cf.global-to-local, align 1
  %v22_1e370 = zext i8 %v4_1e370 to i32
  %v24_1e370 = and i32 %v0_1e370, -256
  %v25_1e370 = or i32 %v22_1e370, %v24_1e370
  store i32 %v25_1e370, i32* %eax.global-to-local, align 8
  %v1_1e372 = inttoptr i32 %v25_1e370 to i8*
  %v2_1e372 = load i8, i8* %v1_1e372, align 1
  %v5_1e372 = add i8 %v2_1e372, %v4_1e370
  store i8 %v5_1e372, i8* %v1_1e372, align 1
  %v0_1e374 = load i32, i32* %eax.global-to-local, align 8
  %v1_1e374 = load i32, i32* @ebp, align 4
  %v2_1e374 = add i32 %v1_1e374, -12
  %v3_1e374 = inttoptr i32 %v2_1e374 to i32*
  store i32 %v0_1e374, i32* %v3_1e374, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1e379 = load i32, i32* @ebp, align 4
  %v1_1e379 = add i32 %v0_1e379, -28
  %v2_1e379 = inttoptr i32 %v1_1e379 to i32*
  %v3_1e379 = load i32, i32* %v2_1e379, align 4
  store i32 %v3_1e379, i32* @eax, align 8
  %v1_1e37c = add i32 %v0_1e379, -12
  %v2_1e37c = inttoptr i32 %v1_1e37c to i32*
  %v3_1e37c = load i32, i32* %v2_1e37c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_1e37f = icmp eq i32 %v3_1e37c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1e37f, label %bb, label %dec_label_pc_1e388

bb:                                               ; preds = %dec_label_pc_1e369
  %v1_1e386 = call i32 @function_1e38d()
  store i32 %v1_1e386, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1e388

dec_label_pc_1e388:                               ; preds = %bb, %dec_label_pc_1e369
  %v2_1e386 = phi i32 [ %v1_1e386, %bb ], [ %v3_1e379, %dec_label_pc_1e369 ]
  ret i32 %v2_1e386

; uselistorder directives
  uselistorder i8 %v4_1e370, { 0, 2, 1 }
  uselistorder i8 %v1_1e370, { 1, 0 }
}

define i32 @function_1e38d() local_unnamed_addr {
dec_label_pc_1e38d:
  %v0_1e38e = load i32, i32* @eax, align 8
  ret i32 %v0_1e38e
}

define i32 @_ZN5boost20iterator_core_access11dereferenceINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EEEENT_9referenceERKS11_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e38f:
  %v1_1e3ac = call i32 @unknown_40773(i32 %arg1)
  store i32 %v1_1e3ac, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e3bd

bb:                                               ; preds = %dec_label_pc_1e38f
  %v1_1e3bb = call i32 @function_1e3c2()
  br label %dec_label_pc_1e3bd

dec_label_pc_1e3bd:                               ; preds = %bb, %dec_label_pc_1e38f
  %v2_1e3bb = phi i32 [ %v1_1e3bb, %bb ], [ %v1_1e3ac, %dec_label_pc_1e38f ]
  ret i32 %v2_1e3bb
}

define i32 @function_1e3c2() local_unnamed_addr {
dec_label_pc_1e3c2:
  %v0_1e3c3 = load i32, i32* @eax, align 8
  ret i32 %v0_1e3c3
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE6assignERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e3c4:
  ret i32 %arg2
}

define i32 @function_1e3d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e3d4:
  %v0_1e3d4 = load i32, i32* @eax, align 8
  %v1_1e3d4 = load i32, i32* @ebp, align 4
  %v2_1e3d4 = add i32 %v1_1e3d4, -32
  %v3_1e3d4 = inttoptr i32 %v2_1e3d4 to i32*
  store i32 %v0_1e3d4, i32* %v3_1e3d4, align 4
  %v1_1e3dd = load i32, i32* @ebp, align 4
  %v2_1e3dd = add i32 %v1_1e3dd, -12
  %v3_1e3dd = inttoptr i32 %v2_1e3dd to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1e3dd, align 4
  %v0_1e3e2 = load i32, i32* @ebp, align 4
  %v1_1e3e2 = add i32 %v0_1e3e2, -28
  %v2_1e3e2 = inttoptr i32 %v1_1e3e2 to i32*
  %v3_1e3e2 = load i32, i32* %v2_1e3e2, align 4
  store i32 %v3_1e3e2, i32* @eax, align 8
  %v1_1e3e8 = call i32 @function_3289e(i32 %v3_1e3e2)
  %v4_1e3ed = trunc i32 %v1_1e3e8 to i8
  %v5_1e3ed = icmp eq i8 %v4_1e3ed, 0
  br i1 %v5_1e3ed, label %dec_label_pc_1e409, label %dec_label_pc_1e3f1

dec_label_pc_1e3f1:                               ; preds = %dec_label_pc_1e3d4
  %v0_1e3f1 = load i32, i32* @ebx, align 8
  %v0_1e3f5 = load i32, i32* @ebp, align 4
  %v1_1e3f5 = add i32 %v0_1e3f5, -32
  %v2_1e3f5 = inttoptr i32 %v1_1e3f5 to i32*
  %v3_1e3f5 = load i32, i32* %v2_1e3f5, align 4
  %v1_1e3fc = add i32 %v0_1e3f5, -28
  %v2_1e3fc = inttoptr i32 %v1_1e3fc to i32*
  %v3_1e3fc = load i32, i32* %v2_1e3fc, align 4
  %sext = mul i32 %v0_1e3f1, 16777216
  %v3_1e402 = sdiv i32 %sext, 16777216
  %v4_1e402 = call i32 @unknown_408a6(i32 %v3_1e3fc, i32 %v3_1e3f5, i32 %v3_1e402)
  br label %dec_label_pc_1e41b

dec_label_pc_1e409:                               ; preds = %dec_label_pc_1e3d4
  %v0_1e409 = load i32, i32* @ebp, align 4
  %v1_1e409 = add i32 %v0_1e409, -32
  %v2_1e409 = inttoptr i32 %v1_1e409 to i32*
  %v3_1e409 = load i32, i32* %v2_1e409, align 4
  %v1_1e410 = add i32 %v0_1e409, -28
  %v2_1e410 = inttoptr i32 %v1_1e410 to i32*
  %v3_1e410 = load i32, i32* %v2_1e410, align 4
  store i32 %v3_1e410, i32* @eax, align 8
  %v2_1e416 = call i32 @function_328ce(i32 %v3_1e410, i32 %v3_1e409)
  br label %dec_label_pc_1e41b

dec_label_pc_1e41b:                               ; preds = %dec_label_pc_1e409, %dec_label_pc_1e3f1
  %v0_1e41b = load i32, i32* @ebp, align 4
  %v1_1e41b = add i32 %v0_1e41b, -12
  %v2_1e41b = inttoptr i32 %v1_1e41b to i32*
  %v3_1e41b = load i32, i32* %v2_1e41b, align 4
  %v3_1e41e = xor i32 %v3_1e41b, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_1e41e
}

define i32 @_ZN5boost15iterator_facadeINS_8signals26detail20slot_call_iterator_tINS2_12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS1_10connectionES6_EEENS1_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsS6_SD_EESJ_EEEEESW_EESsNS_25single_pass_traversal_tagERKSsiE7derivedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e432:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e458

bb:                                               ; preds = %dec_label_pc_1e432
  %v2_1e456 = call i32 @function_1e45d(i32 %arg1)
  br label %dec_label_pc_1e458

dec_label_pc_1e458:                               ; preds = %bb, %dec_label_pc_1e432
  %v3_1e456 = phi i32 [ %v2_1e456, %bb ], [ %arg1, %dec_label_pc_1e432 ]
  ret i32 %v3_1e456
}

define i32 @function_1e45d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e45d:
  %v0_1e45e = load i32, i32* @eax, align 8
  ret i32 %v0_1e45e
}

define i32 @_ZN5boost20iterator_core_access9incrementINS_8signals26detail20slot_call_iterator_tINS3_12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS2_10connectionES7_EEENS2_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsS7_SE_EESK_EEEEESX_EEEEvRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e45f:
  %v1_1e47c = call i32 @unknown_40993(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e48d

bb:                                               ; preds = %dec_label_pc_1e45f
  %v1_1e48b = call i32 @function_1e492()
  br label %dec_label_pc_1e48d

dec_label_pc_1e48d:                               ; preds = %bb, %dec_label_pc_1e45f
  %v2_1e48b = phi i32 [ %v1_1e48b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e45f ]
  ret i32 %v2_1e48b
}

define i32 @function_1e492() local_unnamed_addr {
dec_label_pc_1e492:
  %v0_1e493 = load i32, i32* @eax, align 8
  ret i32 %v0_1e493
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE8cast_ptrEPSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1e494:
  ret i32 %arg2
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e4ce:
  %v3_1e4fb = call i32 @unknown_40a50(i32 %arg1, i32 1, i32 0)
  store i32 %v3_1e4fb, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e50c

bb:                                               ; preds = %dec_label_pc_1e4ce
  %v1_1e50a = call i32 @function_1e511()
  br label %dec_label_pc_1e50c

dec_label_pc_1e50c:                               ; preds = %bb, %dec_label_pc_1e4ce
  %v2_1e50a = phi i32 [ %v1_1e50a, %bb ], [ %v3_1e4fb, %dec_label_pc_1e4ce ]
  ret i32 %v2_1e50a
}

define i32 @function_1e511() local_unnamed_addr {
dec_label_pc_1e511:
  %v0_1e512 = load i32, i32* @eax, align 8
  ret i32 %v0_1e512
}

define i32 @_ZNSt4pairIKSsSsEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e514:
  %v1_1e547 = add i32 %arg2, 4
  %v1_1e54d = add i32 %arg1, 4
  %v2_1e55c = call i32 @function_1e575(i32 %v1_1e54d, i32 %v1_1e547)
  ret i32 %v2_1e55c
}

define i32 @function_1e55f() local_unnamed_addr {
dec_label_pc_1e55f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e55f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e55f
}

define i32 @function_1e56e() local_unnamed_addr {
dec_label_pc_1e56e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e56e = load i32, i32* %eax.global-to-local, align 8
  %v2_1e56e = add i32 %v0_1e56e, 36
  %v16_1e56e = and i32 %v2_1e56e, 255
  %v18_1e56e = and i32 %v0_1e56e, -256
  %v19_1e56e = or i32 %v16_1e56e, %v18_1e56e
  store i32 %v19_1e56e, i32* %eax.global-to-local, align 8
  ret i32 %v19_1e56e

; uselistorder directives
  uselistorder i32 %v0_1e56e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1e575(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e575:
  %v0_1e575 = load i32, i32* @ebp, align 4
  %v1_1e575 = add i32 %v0_1e575, -12
  %v2_1e575 = inttoptr i32 %v1_1e575 to i32*
  %v3_1e575 = load i32, i32* %v2_1e575, align 4
  %v3_1e578 = xor i32 %v3_1e575, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e578 = icmp eq i32 %v3_1e578, 0
  store i32 %v3_1e578, i32* @eax, align 8
  br i1 %v4_1e578, label %bb, label %dec_label_pc_1e581

bb:                                               ; preds = %dec_label_pc_1e575
  %v1_1e57f = call i32 @function_1e586()
  br label %dec_label_pc_1e581

dec_label_pc_1e581:                               ; preds = %bb, %dec_label_pc_1e575
  %v2_1e57f = phi i32 [ %v1_1e57f, %bb ], [ %v3_1e578, %dec_label_pc_1e575 ]
  ret i32 %v2_1e57f
}

define i32 @function_1e586() local_unnamed_addr {
dec_label_pc_1e586:
  %v0_1e58b = load i32, i32* @eax, align 8
  ret i32 %v0_1e58b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEE9constructEPS3_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e58c:
  store i32 0, i32* @eax, align 8
  %v2_1e5c0 = call i32 @function_1eef2(i32 8, i32 %arg2)
  %v1_1e5c7 = icmp eq i32 %v2_1e5c0, 0
  br i1 %v1_1e5c7, label %dec_label_pc_1e5f4, label %dec_label_pc_1e5cb

dec_label_pc_1e5cb:                               ; preds = %dec_label_pc_1e58c
  %v2_1e5d5 = call i32 @unknown_3caa0(i32 %v2_1e5c0, i32 %arg3)
  br label %dec_label_pc_1e5f4

dec_label_pc_1e5f4:                               ; preds = %dec_label_pc_1e5cb, %dec_label_pc_1e58c
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e600

bb:                                               ; preds = %dec_label_pc_1e5f4
  %v1_1e5fe = call i32 @function_1e605()
  br label %dec_label_pc_1e600

dec_label_pc_1e600:                               ; preds = %bb, %dec_label_pc_1e5f4
  %v2_1e5fe = phi i32 [ %v1_1e5fe, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e5f4 ]
  ret i32 %v2_1e5fe
}

define i32 @function_1e605() local_unnamed_addr {
dec_label_pc_1e605:
  %v0_1e60c = load i32, i32* @eax, align 8
  ret i32 %v0_1e60c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSsSsEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e60e:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1e62a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e62a:
  %v0_1e62a = load i32, i32* @eax, align 8
  %v1_1e62a = add i32 %v0_1e62a, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_1e62a = icmp eq i32 %v1_1e62a, 0
  store i32 %v1_1e62a, i32* @eax, align 8
  br i1 %v10_1e62a, label %bb, label %dec_label_pc_1e631

bb:                                               ; preds = %dec_label_pc_1e62a
  %v1_1e62f = call i32 @function_1e636()
  br label %dec_label_pc_1e631

dec_label_pc_1e631:                               ; preds = %bb, %dec_label_pc_1e62a
  %v2_1e62f = phi i32 [ %v1_1e62f, %bb ], [ %v1_1e62a, %dec_label_pc_1e62a ]
  ret i32 %v2_1e62f
}

define i32 @function_1e636() local_unnamed_addr {
dec_label_pc_1e636:
  %v0_1e637 = load i32, i32* @eax, align 8
  ret i32 %v0_1e637
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e638:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost9function3IbRKSsS2_jE9assign_toIPFbS2_S2_jEEEvT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e662:
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v1_1e682 = add i32 %tmp106, 4
  %v3_1e697 = call i32 @unknown_40d1a(i32 ptrtoint (i32* @global_var_35d20.2019 to i32), i32 %arg2, i32 %v1_1e682)
  %v4_1e69c = trunc i32 %v3_1e697 to i8
  %v5_1e69c = icmp eq i8 %v4_1e69c, 0
  br i1 %v5_1e69c, label %dec_label_pc_1e6be, label %dec_label_pc_1e6a0

dec_label_pc_1e6a0:                               ; preds = %dec_label_pc_1e662
  br label %dec_label_pc_1e6be

dec_label_pc_1e6be:                               ; preds = %dec_label_pc_1e662, %dec_label_pc_1e6a0
  %storemerge = phi i32 [ or (i32 ptrtoint (i32* @global_var_35d20.2019 to i32), i32 1), %dec_label_pc_1e6a0 ], [ 0, %dec_label_pc_1e662 ]
  store i32 %storemerge, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e6ca

bb:                                               ; preds = %dec_label_pc_1e6be
  %v1_1e6c8 = call i32 @function_1e6cf()
  br label %dec_label_pc_1e6ca

dec_label_pc_1e6ca:                               ; preds = %bb, %dec_label_pc_1e6be
  %v2_1e6c8 = phi i32 [ %v1_1e6c8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e6be ]
  ret i32 %v2_1e6c8

; uselistorder directives
  uselistorder label %dec_label_pc_1e6be, { 1, 0 }
}

define i32 @function_1e6cf() local_unnamed_addr {
dec_label_pc_1e6cf:
  %v0_1e6d0 = load i32, i32* @eax, align 8
  ret i32 %v0_1e6d0
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor25m_visit_reference_wrapperIFbRKSsS5_jEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e6d2:
  ret i32 %arg3
}

define i32 @function_1e6ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6ea:
  %v1_1e6f0 = load i32, i32* @ebp, align 4
  %v2_1e6f0 = add i32 %v1_1e6f0, -12
  %v3_1e6f0 = inttoptr i32 %v2_1e6f0 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1e6f0, align 4
  %v0_1e6f5 = load i32, i32* @ebp, align 4
  %v1_1e6f5 = add i32 %v0_1e6f5, -13
  %v1_1e6fc = add i32 %v0_1e6f5, -32
  %v2_1e6fc = inttoptr i32 %v1_1e6fc to i32*
  %v3_1e6fc = load i32, i32* %v2_1e6fc, align 4
  %v1_1e703 = add i32 %v0_1e6f5, -28
  %v2_1e703 = inttoptr i32 %v1_1e703 to i32*
  %v3_1e703 = load i32, i32* %v2_1e703, align 4
  %v3_1e709 = call i32 @unknown_40dde(i32 %v3_1e703, i32 %v3_1e6fc, i32 %v1_1e6f5)
  %v0_1e70e = load i32, i32* @ebp, align 4
  %v1_1e70e = add i32 %v0_1e70e, -12
  %v2_1e70e = inttoptr i32 %v1_1e70e to i32*
  %v3_1e70e = load i32, i32* %v2_1e70e, align 4
  %v3_1e711 = xor i32 %v3_1e70e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e711 = icmp eq i32 %v3_1e711, 0
  store i32 %v3_1e711, i32* @eax, align 8
  br i1 %v4_1e711, label %bb, label %dec_label_pc_1e71a

bb:                                               ; preds = %dec_label_pc_1e6ea
  %v1_1e718 = call i32 @function_1e71f()
  br label %dec_label_pc_1e71a

dec_label_pc_1e71a:                               ; preds = %bb, %dec_label_pc_1e6ea
  %v2_1e718 = phi i32 [ %v1_1e718, %bb ], [ %v3_1e711, %dec_label_pc_1e6ea ]
  ret i32 %v2_1e718
}

define i32 @function_1e71f() local_unnamed_addr {
dec_label_pc_1e71f:
  %v0_1e720 = load i32, i32* @eax, align 8
  ret i32 %v0_1e720
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e722:
  %v1_1e73c = add i32 %arg1, 4
  store i32 %v1_1e73c, i32* @eax, align 8
  %v1_1e742 = call i32 @function_20a24(i32 %v1_1e73c)
  ret i32 %v1_1e742
}

define i32 @function_1e74a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e74a:
  %v0_1e759 = load i32, i32* @eax, align 8
  ret i32 %v0_1e759
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e75a:
  %v2_1e774 = load i32, i32* %arg1, align 4
  %v1_1e776 = icmp eq i32 %v2_1e774, 0
  %v1_1e778 = icmp eq i1 %v1_1e776, false
  br i1 %v1_1e778, label %bb, label %dec_label_pc_1e77a

bb:                                               ; preds = %dec_label_pc_1e75a
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1e778 = call i32 @function_1e79e(i32 %tmp105)
  br label %dec_label_pc_1e77a

dec_label_pc_1e77a:                               ; preds = %bb, %dec_label_pc_1e75a
  %v3_1e792 = phi i32 [ %v3_1e778, %bb ], [ %v2_1e774, %dec_label_pc_1e75a ]
  ret i32 %v3_1e792

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1e79e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e79e:
  %v0_1e79e = load i32, i32* @ebp, align 4
  %v1_1e79e = add i32 %v0_1e79e, -28
  %v2_1e79e = inttoptr i32 %v1_1e79e to i32*
  %v3_1e79e = load i32, i32* %v2_1e79e, align 4
  %v1_1e7a1 = inttoptr i32 %v3_1e79e to i32*
  %v2_1e7a1 = load i32, i32* %v1_1e7a1, align 4
  ret i32 %v2_1e7a1
}

define i32 @function_1e7a6() local_unnamed_addr {
dec_label_pc_1e7a6:
  %v0_1e7a6 = load i32, i32* @edx, align 8
  %v3_1e7a6 = xor i32 %v0_1e7a6, ptrtoint ([3 x i8]* @3 to i32)
  store i32 %v3_1e7a6, i32* @edx, align 8
  %v0_1e7b5 = load i32, i32* @eax, align 8
  ret i32 %v0_1e7b5
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e7b6:
  %v1_1e7d0 = add i32 %arg1, 4
  store i32 %v1_1e7d0, i32* @eax, align 8
  %v1_1e7d6 = call i32 @function_20996(i32 %v1_1e7d0)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZN5boost10shared_ptrINS_8signals210last_valueIbEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e7ee:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1e80e = inttoptr i32 %arg2 to i32*
  %v2_1e80e = load i32, i32* %v1_1e80e, align 4
  store i32 %v2_1e80e, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_1e816(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e816:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e816 = load i32, i32* @ebp, align 4
  %v1_1e816 = add i32 %v0_1e816, 1
  %v9_1e816 = icmp eq i32 %v1_1e816, 0
  store i32 %v1_1e816, i32* @ebp, align 4
  %v0_1e817 = load i32, i32* @ecx, align 4
  %v1_1e817 = add i32 %v0_1e817, -1
  store i32 %v1_1e817, i32* %ecx.global-to-local, align 4
  %v2_1e817 = icmp eq i32 %v1_1e817, 0
  %v4_1e817 = or i1 %v9_1e816, %v2_1e817
  br i1 %v4_1e817, label %dec_label_pc_1e816.dec_label_pc_1e819_crit_edge, label %bb

dec_label_pc_1e816.dec_label_pc_1e819_crit_edge:  ; preds = %dec_label_pc_1e816
  %v0_1e819.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1e819

bb:                                               ; preds = %dec_label_pc_1e816
  %v6_1e817 = call i32 @function_1e7a6()
  store i32 %v6_1e817, i32* %eax.global-to-local, align 8
  %v0_1e81c.pre = load i32, i32* @ebp, align 4
  %v9_1e81f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1e819

dec_label_pc_1e819:                               ; preds = %dec_label_pc_1e816.dec_label_pc_1e819_crit_edge, %bb
  %v9_1e81f = phi i32 [ %v1_1e817, %dec_label_pc_1e816.dec_label_pc_1e819_crit_edge ], [ %v9_1e81f.pre, %bb ]
  %v0_1e81c = phi i32 [ %v1_1e816, %dec_label_pc_1e816.dec_label_pc_1e819_crit_edge ], [ %v0_1e81c.pre, %bb ]
  %v17_1e81a = phi i32 [ %v0_1e819.pre, %dec_label_pc_1e816.dec_label_pc_1e819_crit_edge ], [ %v6_1e817, %bb ]
  %v2_1e81a = add i32 %v17_1e81a, 139
  %v16_1e81a = urem i32 %v2_1e81a, 256
  %v18_1e81a = and i32 %v17_1e81a, -256
  %v19_1e81a = or i32 %v16_1e81a, %v18_1e81a
  store i32 %v19_1e81a, i32* %eax.global-to-local, align 8
  %v1_1e81c = add i32 %v0_1e81c, 1
  store i32 %v1_1e81c, i32* @ebp, align 4
  %v12_1e81f = mul i32 %v9_1e81f, 5
  %v13_1e81f = inttoptr i32 %v12_1e81f to i8*
  store i8 -1, i8* %v13_1e81f, align 1
  %v0_1e823 = load i32, i32* %eax.global-to-local, align 8
  %v11_1e823 = and i32 %v0_1e823, -252
  store i32 %v11_1e823, i32* @eax, align 8
  %v1_1e828 = call i32 @function_20a0e(i32 %v11_1e823)
  store i32 %v1_1e828, i32* %eax.global-to-local, align 8
  %v0_1e82d = load i32, i32* @ebp, align 4
  %v1_1e82d = add i32 %v0_1e82d, -12
  %v2_1e82d = inttoptr i32 %v1_1e82d to i32*
  %v3_1e82d = load i32, i32* %v2_1e82d, align 4
  %v3_1e830 = xor i32 %v3_1e82d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e830 = icmp eq i32 %v3_1e830, 0
  store i32 %v3_1e830, i32* @eax, align 8
  br i1 %v4_1e830, label %bb6, label %dec_label_pc_1e839

bb6:                                              ; preds = %dec_label_pc_1e819
  %v1_1e837 = call i32 @function_1e83e()
  store i32 %v1_1e837, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1e839

dec_label_pc_1e839:                               ; preds = %bb6, %dec_label_pc_1e819
  %v2_1e837 = phi i32 [ %v1_1e837, %bb6 ], [ %v3_1e830, %dec_label_pc_1e819 ]
  ret i32 %v2_1e837

; uselistorder directives
  uselistorder i32 %v11_1e823, { 1, 0 }
  uselistorder i32 %v17_1e81a, { 1, 0 }
  uselistorder i32 %v1_1e817, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1e819, { 1, 0 }
}

define i32 @function_1e83e() local_unnamed_addr {
dec_label_pc_1e83e:
  %v0_1e83f = load i32, i32* @eax, align 8
  ret i32 %v0_1e83f
}

define i32 @_ZN5boost10shared_ptrINS_8signals210last_valueIbEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e840:
  %stack_var_-60 = alloca i32, align 4
  %v1_1e85a = add i32 %arg1, 4
  store i32 %v1_1e85a, i32* @eax, align 8
  store i32 %v1_1e85a, i32* %stack_var_-60, align 4
  %v1_1e860 = call i32 @function_20a20(i32 %v1_1e85a)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1e871

bb:                                               ; preds = %dec_label_pc_1e840
  %v1_1e86f = load i32, i32* %stack_var_-60, align 4
  %v2_1e86f = call i32 @function_1e876(i32 %v1_1e86f)
  br label %dec_label_pc_1e871

dec_label_pc_1e871:                               ; preds = %bb, %dec_label_pc_1e840
  %v3_1e86f = phi i32 [ %v2_1e86f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1e840 ]
  ret i32 %v3_1e86f

; uselistorder directives
  uselistorder i32 (i32)* @function_1e876, { 1, 0 }
}

define i32 @function_1e876(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e876:
  %v0_1e877 = load i32, i32* @eax, align 8
  ret i32 %v0_1e877
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e878:
  ret i32 0
}

define i32 @function_1e8a8() local_unnamed_addr {
dec_label_pc_1e8a8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e8a8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e8a8 = add i32 %v0_1e8a8, -599422013
  %v2_1e8a8 = inttoptr i32 %v1_1e8a8 to i32*
  %v3_1e8a8 = load i32, i32* %v2_1e8a8, align 4
  %v4_1e8a8 = add i32 %v3_1e8a8, -1
  store i32 %v4_1e8a8, i32* %v2_1e8a8, align 4
  %v0_1e8ae = load i32, i32* %eax.global-to-local, align 8
  %v0_1e8b2 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1e8b5 = call i32 @unknown_4104e(i32 %v0_1e8b2, i32 %v0_1e8ae)
  store i32 %v2_1e8b5, i32* %eax.global-to-local, align 8
  %v0_1e8ba = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e8ba = add i32 %v0_1e8ba, -28
  %v2_1e8ba = inttoptr i32 %v1_1e8ba to i32*
  %v3_1e8ba = load i32, i32* %v2_1e8ba, align 4
  store i32 %v3_1e8ba, i32* %eax.global-to-local, align 8
  %v0_1e8bd = load i32, i32* %ebx.global-to-local, align 8
  %v2_1e8c4 = call i32 @unknown_41254(i32 %v3_1e8ba, i32 %v0_1e8bd)
  store i32 %v2_1e8c4, i32* %eax.global-to-local, align 8
  %v0_1e8c9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e8c9 = add i32 %v0_1e8c9, -32
  %v2_1e8c9 = inttoptr i32 %v1_1e8c9 to i32*
  %v3_1e8c9 = load i32, i32* %v2_1e8c9, align 4
  store i32 %v3_1e8c9, i32* %eax.global-to-local, align 8
  %v1_1e8cc = add i32 %v3_1e8c9, 8
  %v1_1e8cf = add i32 %v0_1e8c9, -28
  %v2_1e8cf = inttoptr i32 %v1_1e8cf to i32*
  %v3_1e8cf = load i32, i32* %v2_1e8cf, align 4
  %v1_1e8d2 = add i32 %v3_1e8cf, 8
  store i32 %v1_1e8d2, i32* %eax.global-to-local, align 8
  %v2_1e8dc = call i32 @unknown_3d066(i32 %v1_1e8d2, i32 %v1_1e8cc)
  store i32 %v2_1e8dc, i32* %eax.global-to-local, align 8
  %v0_1e8e1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e8e1 = add i32 %v0_1e8e1, -12
  %v2_1e8e1 = inttoptr i32 %v1_1e8e1 to i32*
  %v3_1e8e1 = load i32, i32* %v2_1e8e1, align 4
  %v3_1e8e4 = xor i32 %v3_1e8e1, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e8e4 = icmp eq i32 %v3_1e8e4, 0
  store i32 %v3_1e8e4, i32* @eax, align 8
  br i1 %v4_1e8e4, label %bb, label %dec_label_pc_1e8ed

bb:                                               ; preds = %dec_label_pc_1e8a8
  %v1_1e8eb = call i32 @function_1e908()
  store i32 %v1_1e8eb, i32* @eax, align 8
  br label %dec_label_pc_1e8ed

dec_label_pc_1e8ed:                               ; preds = %bb, %dec_label_pc_1e8a8
  %v0_1e8ed = call i32 @function_1e903()
  store i32 %v0_1e8ed, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e8ed
}

define i32 @function_1e903() local_unnamed_addr {
dec_label_pc_1e903:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e908() local_unnamed_addr {
dec_label_pc_1e908:
  %v0_1e90e = load i32, i32* @eax, align 8
  ret i32 %v0_1e90e
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e910:
  %v10_1e92e = icmp eq i32 %arg2, 0
  br i1 %v10_1e92e, label %bb, label %dec_label_pc_1e934

bb:                                               ; preds = %dec_label_pc_1e910
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1e932 = call i32 @function_1e962(i32 0, i32 %tmp102)
  br label %dec_label_pc_1e934

dec_label_pc_1e934:                               ; preds = %bb, %dec_label_pc_1e910
  %v2_1e937 = load i32, i32* %arg1, align 4
  %v15_1e939 = icmp eq i32 %v2_1e937, %arg2
  %v1_1e93c = icmp eq i1 %v15_1e939, false
  br i1 %v1_1e93c, label %bb106, label %dec_label_pc_1e93e

bb106:                                            ; preds = %dec_label_pc_1e934
  %v4_1e93c = call i32 @function_1e962(i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_1e93e

dec_label_pc_1e93e:                               ; preds = %bb106, %dec_label_pc_1e934
  %v5_1e93c = phi i32 [ %v4_1e93c, %bb106 ], [ %v2_1e937, %dec_label_pc_1e934 ]
  ret i32 %v5_1e93c

; uselistorder directives
  uselistorder i32 %v2_1e937, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1e962, { 1, 0 }
}

define i32 @function_1e942(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e942:
  %v0_1e942 = load i1, i1* @sf, align 1
  %v1_1e942 = load i1, i1* @of, align 1
  %v2_1e942 = icmp eq i1 %v0_1e942, %v1_1e942
  br i1 %v2_1e942, label %dec_label_pc_1e942.dec_label_pc_1e944_crit_edge, label %bb

dec_label_pc_1e942.dec_label_pc_1e944_crit_edge:  ; preds = %dec_label_pc_1e942
  %v2_1e944.pre = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1e944.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1e944

bb:                                               ; preds = %dec_label_pc_1e942
  %v3_1e942 = call i32 @function_1e98c()
  store i32 %v3_1e942, i32* @eax, align 8
  %tmp9 = trunc i32 %v3_1e942 to i8
  br label %dec_label_pc_1e944

dec_label_pc_1e944:                               ; preds = %dec_label_pc_1e942.dec_label_pc_1e944_crit_edge, %bb
  %v20_1e944 = phi i32 [ %v3_1e944.pre, %dec_label_pc_1e942.dec_label_pc_1e944_crit_edge ], [ %v3_1e942, %bb ]
  %v2_1e944 = phi i8 [ %v2_1e944.pre, %dec_label_pc_1e942.dec_label_pc_1e944_crit_edge ], [ %tmp9, %bb ]
  %v4_1e944 = trunc i32 %v20_1e944 to i8
  %v5_1e944 = add i8 %v4_1e944, %v2_1e944
  %v21_1e944 = inttoptr i32 %v20_1e944 to i8*
  store i8 %v5_1e944, i8* %v21_1e944, align 1
  %v3_1e956 = load i32, i32* @eax, align 8
  ret i32 %v3_1e956

; uselistorder directives
  uselistorder label %dec_label_pc_1e944, { 1, 0 }
}

define i32 @function_1e962(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e962:
  %v0_1e962 = load i32, i32* @ebp, align 4
  %v1_1e962 = add i32 %v0_1e962, -32
  %v2_1e962 = inttoptr i32 %v1_1e962 to i32*
  %v3_1e962 = load i32, i32* %v2_1e962, align 4
  %v1_1e969 = add i32 %v0_1e962, -20
  %v2_1e96f = call i32 @unknown_41352(i32 %v1_1e969, i32 %v3_1e962)
  %v0_1e974 = load i32, i32* @ebp, align 4
  %v1_1e974 = add i32 %v0_1e974, -28
  %v2_1e974 = inttoptr i32 %v1_1e974 to i32*
  %v3_1e974 = load i32, i32* %v2_1e974, align 4
  %v1_1e97b = add i32 %v0_1e974, -20
  %v2_1e981 = call i32 @unknown_413b8(i32 %v1_1e97b, i32 %v3_1e974)
  %v0_1e986 = load i32, i32* @ebp, align 4
  %v1_1e986 = add i32 %v0_1e986, -20
  ret i32 %v1_1e986
}

define i32 @function_1e98c() local_unnamed_addr {
dec_label_pc_1e98c:
  %v1_1e98c = call i32 @unknown_3d2d2(i32 ptrtoint (i32* @2 to i32))
  %v0_1e991 = load i32, i32* @ebp, align 4
  %v1_1e991 = add i32 %v0_1e991, -12
  %v2_1e991 = inttoptr i32 %v1_1e991 to i32*
  %v3_1e991 = load i32, i32* %v2_1e991, align 4
  %v3_1e994 = xor i32 %v3_1e991, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1e994 = icmp eq i32 %v3_1e994, 0
  store i32 %v3_1e994, i32* @eax, align 8
  br i1 %v4_1e994, label %bb, label %dec_label_pc_1e99d

bb:                                               ; preds = %dec_label_pc_1e98c
  %v1_1e99b = call i32 @function_1e9bb()
  store i32 %v1_1e99b, i32* @eax, align 8
  br label %dec_label_pc_1e99d

dec_label_pc_1e99d:                               ; preds = %bb, %dec_label_pc_1e98c
  %v0_1e99d = call i32 @function_1e9b6()
  ret i32 %v0_1e99d
}

define i32 @function_1e9a0() local_unnamed_addr {
dec_label_pc_1e9a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e9a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1e9a0
}

define i32 @function_1e9a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9a2:
  %v0_1e9a2 = load i32, i32* @ebp, align 4
  %v1_1e9a2 = add i32 %v0_1e9a2, 1
  store i32 %v1_1e9a2, i32* @ebp, align 4
  %v0_1e9a4 = load i32, i32* @eax, align 8
  %v1_1e9a7 = call i32 @unknown_3d2d2(i32 %v0_1e9a4)
  %v0_1e9ac = load i32, i32* @ebx, align 8
  ret i32 %v0_1e9ac

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3d2d2, { 1, 0 }
}

define i32 @function_1e9b6() local_unnamed_addr {
dec_label_pc_1e9b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1e9bb() local_unnamed_addr {
dec_label_pc_1e9bb:
  %v0_1e9c0 = load i32, i32* @eax, align 8
  ret i32 %v0_1e9c0
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9c2:
  %v1_1e9dc = add i32 %arg1, 4
  store i32 %v1_1e9dc, i32* @eax, align 8
  %v1_1e9e2 = call i32 @function_20ba2(i32 %v1_1e9dc)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEj(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e9fa:
  %v2_1ea2a = call i32 @unknown_3d11c(i32 %arg1)
  %v4_1ea2f = trunc i32 %v2_1ea2a to i8
  %v5_1ea2f = icmp eq i8 %v4_1ea2f, 0
  %v1_1ea31 = icmp eq i1 %v5_1ea2f, false
  br i1 %v1_1ea31, label %bb, label %dec_label_pc_1ea33

bb:                                               ; preds = %dec_label_pc_1e9fa
  %v2_1ea31 = call i32 @function_1ea57()
  br label %dec_label_pc_1ea33

dec_label_pc_1ea33:                               ; preds = %bb, %dec_label_pc_1e9fa
  %v3_1ea4b = phi i32 [ %v2_1ea31, %bb ], [ %v2_1ea2a, %dec_label_pc_1e9fa ]
  ret i32 %v3_1ea4b
}

define i32 @function_1ea57() local_unnamed_addr {
dec_label_pc_1ea57:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ea57 = load i32, i32* @ebp, align 4
  %v1_1ea57 = add i32 %v0_1ea57, -32
  store i32 %v1_1ea57, i32* %eax.global-to-local, align 8
  %v1_1ea5d = call i32 @unknown_414fc(i32 %v1_1ea57)
  store i32 %v1_1ea5d, i32* %eax.global-to-local, align 8
  %v0_1ea62 = load i32, i32* @ebp, align 4
  %v1_1ea62 = add i32 %v0_1ea62, -52
  %v2_1ea62 = inttoptr i32 %v1_1ea62 to i32*
  %v3_1ea62 = load i32, i32* %v2_1ea62, align 4
  store i32 %v3_1ea62, i32* %eax.global-to-local, align 8
  %v1_1ea65 = inttoptr i32 %v3_1ea62 to i32*
  %v2_1ea65 = load i32, i32* %v1_1ea65, align 4
  store i32 %v2_1ea65, i32* %eax.global-to-local, align 8
  %v2_1ea67 = add i32 %v0_1ea62, -32
  %v3_1ea67 = inttoptr i32 %v2_1ea67 to i32*
  store i32 %v2_1ea65, i32* %v3_1ea67, align 4
  %v4_1ea67 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_1ea67
}

define i32 @function_1ea6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea6e:
  %v2_1ea6e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1ea6e = load i32, i32* @eax, align 8
  %v4_1ea6e = trunc i32 %v3_1ea6e to i8
  %v5_1ea6e = add i8 %v4_1ea6e, %v2_1ea6e
  %v21_1ea6e = inttoptr i32 %v3_1ea6e to i8*
  store i8 %v5_1ea6e, i8* %v21_1ea6e, align 1
  %v2_1ea72 = load double, double* bitcast (i32* @eax to double*), align 8
  %tmp = bitcast double %v2_1ea72 to i64
  %tmp1 = trunc i64 %tmp to i8
  %tmp2 = trunc i64 %tmp to i32
  %v5_1ea74 = mul i8 %tmp1, 2
  %v21_1ea74 = inttoptr i32 %tmp2 to i8*
  store i8 %v5_1ea74, i8* %v21_1ea74, align 1
  %v22_1ea74 = load i32, i32* @eax, align 8
  ret i32 %v22_1ea74
}

define i32 @function_1ea76() local_unnamed_addr {
dec_label_pc_1ea76:
  %v0_1ea76 = load i32, i32* @ebp, align 4
  %v1_1ea76 = add i32 %v0_1ea76, -32
  %v1_1ea7c = call i32 @unknown_415ba(i32 %v1_1ea76)
  %v1_1ea84 = call i32 @unknown_415ec(i32 %v1_1ea7c)
  %v0_1ea8d = load i32, i32* @ebp, align 4
  %v1_1ea8d = add i32 %v0_1ea8d, -24
  %v2_1ea93 = call i32 @function_2f564(i32 %v1_1ea8d, i32 %v1_1ea84)
  %v0_1ea98 = load i32, i32* @ebp, align 4
  %v1_1ea98 = add i32 %v0_1ea98, -48
  %v2_1ea98 = inttoptr i32 %v1_1ea98 to i8*
  %v3_1ea98 = load i8, i8* %v2_1ea98, align 1
  %v10_1ea98 = icmp eq i8 %v3_1ea98, 0
  br i1 %v10_1ea98, label %dec_label_pc_1eab9, label %dec_label_pc_1ea9e

dec_label_pc_1ea9e:                               ; preds = %dec_label_pc_1ea76
  %v1_1ea9e = add i32 %v0_1ea98, -32
  %v1_1eaa4 = call i32 @unknown_415ba(i32 %v1_1ea9e)
  %v1_1eaac = call i32 @unknown_36424(i32 %v1_1eaa4)
  %v1_1eab4 = call i32 @unknown_41648(i32 %v1_1eaac)
  %v0_1eab9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1eab9

dec_label_pc_1eab9:                               ; preds = %dec_label_pc_1ea9e, %dec_label_pc_1ea76
  %v0_1eab9 = phi i32 [ %v0_1eab9.pre, %dec_label_pc_1ea9e ], [ %v0_1ea98, %dec_label_pc_1ea76 ]
  %v1_1eab9 = add i32 %v0_1eab9, -32
  %v1_1eabf = call i32 @unknown_415ba(i32 %v1_1eab9)
  %v1_1eac7 = call i32 @unknown_36424(i32 %v1_1eabf)
  store i32 %v1_1eac7, i32* @eax, align 8
  %v1_1eacf = call i32 @function_2d8d2(i32 %v1_1eac7)
  %v1_1ead4 = trunc i32 %v1_1eacf to i8
  %v2_1ead4 = load i32, i32* @ebp, align 4
  %v3_1ead4 = add i32 %v2_1ead4, -13
  %v4_1ead4 = inttoptr i32 %v3_1ead4 to i8*
  store i8 %v1_1ead4, i8* %v4_1ead4, align 1
  %v0_1ead7 = load i32, i32* @ebp, align 4
  %v1_1ead7 = add i32 %v0_1ead7, -24
  %v1_1eadd = call i32 @function_2f5dc(i32 %v1_1ead7)
  %v0_1eae2 = load i32, i32* @ebp, align 4
  %v1_1eae2 = add i32 %v0_1eae2, -13
  %v2_1eae2 = inttoptr i32 %v1_1eae2 to i8*
  %v3_1eae2 = load i8, i8* %v2_1eae2, align 1
  %v5_1eae9 = icmp eq i8 %v3_1eae2, 1
  br i1 %v5_1eae9, label %bb, label %dec_label_pc_1eaed

bb:                                               ; preds = %dec_label_pc_1eab9
  %v1_1eaeb = call i32 @function_1eb44()
  %v0_1eaed.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1eaed

dec_label_pc_1eaed:                               ; preds = %bb, %dec_label_pc_1eab9
  %v0_1eaed = phi i32 [ %v0_1eaed.pre, %bb ], [ %v0_1eae2, %dec_label_pc_1eab9 ]
  %v1_1eaed = add i32 %v0_1eaed, -32
  %v1_1eaf3 = call i32 @unknown_415ba(i32 %v1_1eaed)
  %v1_1eafb = call i32 @unknown_36424(i32 %v1_1eaf3)
  %v1_1eb03 = call i32 @unknown_41694(i32 %v1_1eafb)
  %v0_1eb0a = load i32, i32* @ebp, align 4
  %v1_1eb0a = add i32 %v0_1eb0a, -44
  %v2_1eb0a = inttoptr i32 %v1_1eb0a to i32*
  %v3_1eb0a = load i32, i32* %v2_1eb0a, align 4
  %v1_1eb10 = call i32 @unknown_36232(i32 %v3_1eb0a)
  %v1_1eb18 = call i32 @unknown_3628e(i32 %v1_1eb10)
  %v0_1eb1f = load i32, i32* @ebp, align 4
  %v1_1eb1f = add i32 %v0_1eb1f, -60
  ret i32 %v1_1eb1f

; uselistorder directives
  uselistorder i32 (i32)* @unknown_36424, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_415ba, { 3, 2, 1, 0 }
}

define i32 @function_1eb2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eb2a:
  %v0_1eb2b = load i32, i32* @eax, align 8
  %v11_1eb2b = and i32 %v0_1eb2b, -248
  %v0_1eb2d = load i32, i32* @edx, align 8
  %v2_1eb34 = call i32 @unknown_416c4(i32 %v11_1eb2b, i32 %v0_1eb2d)
  %v0_1eb3c = load i32, i32* @ebp, align 4
  %v1_1eb3c = add i32 %v0_1eb3c, -60
  %v2_1eb3c = inttoptr i32 %v1_1eb3c to i32*
  %v3_1eb3c = load i32, i32* %v2_1eb3c, align 4
  %v2_1eb3f = add i32 %v0_1eb3c, -32
  %v3_1eb3f = inttoptr i32 %v2_1eb3f to i32*
  store i32 %v3_1eb3c, i32* %v3_1eb3f, align 4
  %v0_1eb42 = call i32 @function_1eb4f()
  ret i32 %v0_1eb42
}

define i32 @function_1eb44() local_unnamed_addr {
dec_label_pc_1eb44:
  %v0_1eb44 = load i32, i32* @ebp, align 4
  %v1_1eb44 = add i32 %v0_1eb44, -32
  %v1_1eb4a = call i32 @unknown_418c4(i32 %v1_1eb44)
  ret i32 %v1_1eb4a
}

define i32 @function_1eb4f() local_unnamed_addr {
dec_label_pc_1eb4f:
  %v0_1eb4f = load i32, i32* @ebp, align 4
  %v1_1eb4f = add i32 %v0_1eb4f, -20
  %v2_1eb4f = inttoptr i32 %v1_1eb4f to i32*
  %v3_1eb4f = load i32, i32* %v2_1eb4f, align 4
  %v4_1eb4f = add i32 %v3_1eb4f, 1
  store i32 %v4_1eb4f, i32* %v2_1eb4f, align 4
  %v0_1eb53 = load i32, i32* @ebp, align 4
  %v1_1eb53 = add i32 %v0_1eb53, -44
  %v2_1eb53 = inttoptr i32 %v1_1eb53 to i32*
  %v3_1eb53 = load i32, i32* %v2_1eb53, align 4
  %v1_1eb59 = call i32 @unknown_36232(i32 %v3_1eb53)
  %v1_1eb61 = call i32 @unknown_3628e(i32 %v1_1eb59)
  %v0_1eb68 = load i32, i32* @ebp, align 4
  %v1_1eb68 = add i32 %v0_1eb68, -28
  %v2_1eb72 = call i32 @unknown_41530(i32 %v1_1eb68, i32 %v1_1eb61)
  %v0_1eb7a = load i32, i32* @ebp, align 4
  %v1_1eb7a = add i32 %v0_1eb7a, -28
  %v1_1eb81 = add i32 %v0_1eb7a, -32
  %v2_1eb87 = call i32 @unknown_4157a(i32 %v1_1eb81, i32 %v1_1eb7a)
  %v4_1eb8c = trunc i32 %v2_1eb87 to i8
  %v5_1eb8c = icmp eq i8 %v4_1eb8c, 0
  br i1 %v5_1eb8c, label %dec_label_pc_1eba5, label %dec_label_pc_1eb90

dec_label_pc_1eb90:                               ; preds = %dec_label_pc_1eb4f
  %v0_1eb90 = load i32, i32* @ebp, align 4
  %v1_1eb90 = add i32 %v0_1eb90, -56
  %v2_1eb90 = inttoptr i32 %v1_1eb90 to i32*
  %v3_1eb90 = load i32, i32* %v2_1eb90, align 4
  %v10_1eb90 = icmp eq i32 %v3_1eb90, 0
  br i1 %v10_1eb90, label %dec_label_pc_1ebaa, label %dec_label_pc_1eb96

dec_label_pc_1eb96:                               ; preds = %dec_label_pc_1eb90
  %v1_1eb96 = add i32 %v0_1eb90, -20
  %v2_1eb96 = inttoptr i32 %v1_1eb96 to i32*
  %v3_1eb96 = load i32, i32* %v2_1eb96, align 4
  %v4_1eb99 = load i32, i32* %v2_1eb90, align 4
  %v10_1eb99 = icmp ult i32 %v3_1eb96, %v4_1eb99
  %v1_1eb9c = icmp eq i1 %v10_1eb99, false
  br i1 %v1_1eb9c, label %dec_label_pc_1eba5, label %dec_label_pc_1ebaa

dec_label_pc_1eba5:                               ; preds = %dec_label_pc_1eb96, %dec_label_pc_1eb4f
  br label %dec_label_pc_1ebaa

dec_label_pc_1ebaa:                               ; preds = %dec_label_pc_1eb90, %dec_label_pc_1eb96, %dec_label_pc_1eba5
  %storemerge = phi i1 [ false, %dec_label_pc_1eba5 ], [ true, %dec_label_pc_1eb96 ], [ true, %dec_label_pc_1eb90 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_1ebb2

bb:                                               ; preds = %dec_label_pc_1ebaa
  %v2_1ebac = call i32 @function_1ea76()
  br label %dec_label_pc_1ebb2

dec_label_pc_1ebb2:                               ; preds = %bb, %dec_label_pc_1ebaa
  %v0_1ebb2 = load i32, i32* @ebp, align 4
  %v1_1ebb2 = add i32 %v0_1ebb2, -44
  %v2_1ebb2 = inttoptr i32 %v1_1ebb2 to i32*
  %v3_1ebb2 = load i32, i32* %v2_1ebb2, align 4
  %v1_1ebb5 = add i32 %v0_1ebb2, -32
  %v2_1ebb5 = inttoptr i32 %v1_1ebb5 to i32*
  %v3_1ebb5 = load i32, i32* %v2_1ebb5, align 4
  %v2_1ebb8 = add i32 %v3_1ebb2, 8
  %v3_1ebb8 = inttoptr i32 %v2_1ebb8 to i32*
  store i32 %v3_1ebb5, i32* %v3_1ebb8, align 4
  %v0_1ebbb = load i32, i32* @ebp, align 4
  %v1_1ebbb = add i32 %v0_1ebbb, -12
  %v2_1ebbb = inttoptr i32 %v1_1ebbb to i32*
  %v3_1ebbb = load i32, i32* %v2_1ebbb, align 4
  %v3_1ebbe = xor i32 %v3_1ebbb, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1ebbe = icmp eq i32 %v3_1ebbe, 0
  store i32 %v3_1ebbe, i32* @eax, align 8
  br i1 %v4_1ebbe, label %bb8, label %dec_label_pc_1ebe0

bb8:                                              ; preds = %dec_label_pc_1ebb2
  %v1_1ebc5 = call i32 @function_1ebe5()
  br label %dec_label_pc_1ebe0

dec_label_pc_1ebe0:                               ; preds = %dec_label_pc_1ebb2, %bb8
  %v0_1ebc7 = phi i32 [ %v3_1ebbe, %dec_label_pc_1ebb2 ], [ %v1_1ebc5, %bb8 ]
  ret i32 %v0_1ebc7

; uselistorder directives
  uselistorder label %dec_label_pc_1ebe0, { 1, 0 }
  uselistorder label %dec_label_pc_1ebaa, { 2, 1, 0 }
}

define i32 @function_1ebc9() local_unnamed_addr {
dec_label_pc_1ebc9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ebc9 = load i32, i32* %eax.global-to-local, align 8
  %v0_1ebcb = load i32, i32* @ebp, align 4
  %v1_1ebcb = add i32 %v0_1ebcb, -24
  store i32 %v1_1ebcb, i32* %eax.global-to-local, align 8
  %v1_1ebd1 = call i32 @function_2f5dc(i32 %v1_1ebcb)
  store i32 %v0_1ebc9, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ebc9

; uselistorder directives
  uselistorder i32 %v0_1ebc9, { 1, 0 }
  uselistorder i32 (i32)* @function_2f5dc, { 1, 0 }
}

define i32 @function_1ebe5() local_unnamed_addr {
dec_label_pc_1ebe5:
  %v0_1ebe9 = load i32, i32* @eax, align 8
  ret i32 %v0_1ebe9
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ebea:
  ret i32 %arg2
}

define i32 @function_1ebfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ebfa:
  %v0_1ebfa = load i32, i32* @ebp, align 4
  %v1_1ebfa = add i32 %v0_1ebfa, 1
  store i32 %v1_1ebfa, i32* @ebp, align 4
  %v0_1ebfb = load i32, i32* @ecx, align 4
  %v1_1ebfb = add i32 %v0_1ebfb, -1
  store i32 %v1_1ebfb, i32* @ecx, align 4
  %v2_1ec02 = add i32 %v0_1ebfa, -11
  %v3_1ec02 = inttoptr i32 %v2_1ec02 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1ec02, align 4
  %v0_1ec07 = load i32, i32* @ebp, align 4
  %v1_1ec07 = add i32 %v0_1ec07, -32
  %v2_1ec07 = inttoptr i32 %v1_1ec07 to i32*
  %v3_1ec07 = load i32, i32* %v2_1ec07, align 4
  %v1_1ec0a = add i32 %v0_1ec07, -28
  %v2_1ec0a = inttoptr i32 %v1_1ec0a to i32*
  %v3_1ec0a = load i32, i32* %v2_1ec0a, align 4
  %v2_1ec14 = call i32 @unknown_41aee(i32 %v3_1ec0a, i32 %v3_1ec07)
  %v0_1ec1c = load i32, i32* @ebp, align 4
  %v1_1ec1c = add i32 %v0_1ec1c, -28
  %v2_1ec1c = inttoptr i32 %v1_1ec1c to i32*
  %v3_1ec1c = load i32, i32* %v2_1ec1c, align 4
  store i32 %v3_1ec1c, i32* @eax, align 8
  %v1_1ec1f = add i32 %v0_1ec1c, -12
  %v2_1ec1f = inttoptr i32 %v1_1ec1f to i32*
  %v3_1ec1f = load i32, i32* %v2_1ec1f, align 4
  %v3_1ec22 = xor i32 %v3_1ec1f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1ec22 = icmp eq i32 %v3_1ec22, 0
  store i32 %v3_1ec22, i32* @edx, align 8
  br i1 %v4_1ec22, label %bb, label %dec_label_pc_1ec2b

bb:                                               ; preds = %dec_label_pc_1ebfa
  %v1_1ec29 = call i32 @function_1ec30()
  br label %dec_label_pc_1ec2b

dec_label_pc_1ec2b:                               ; preds = %bb, %dec_label_pc_1ebfa
  %v3_1ec29 = phi i32 [ %v1_1ec29, %bb ], [ %v3_1ec1c, %dec_label_pc_1ebfa ]
  ret i32 %v3_1ec29
}

define i32 @function_1ec30() local_unnamed_addr {
dec_label_pc_1ec30:
  %v0_1ec31 = load i32, i32* @eax, align 8
  ret i32 %v0_1ec31
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ec34:
  %v1_1ec5d = call i32 @unknown_3d356(i32 %arg1)
  ret i32 %v1_1ec5d
}

define i32 @function_1eca9() local_unnamed_addr {
dec_label_pc_1eca9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1eca9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eca9
}

define i32 @function_1ecc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ecc6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ecc7 = load i32, i32* @eax, align 8
  %v11_1ecc7 = and i32 %v0_1ecc7, -252
  store i32 %v11_1ecc7, i32* %eax.global-to-local, align 8
  %v0_1ecc9 = load i32, i32* @edx, align 8
  %v1_1eccc = call i32 @unknown_41b82(i32 %v0_1ecc9)
  store i32 %v1_1eccc, i32* %eax.global-to-local, align 8
  %v4_1ecd1 = trunc i32 %v1_1eccc to i8
  %v5_1ecd1 = icmp eq i8 %v4_1ecd1, 0
  %v0_1ed04 = load i32, i32* @ebp, align 4
  %v1_1ed04 = add i32 %v0_1ed04, -28
  %v2_1ed04 = inttoptr i32 %v1_1ed04 to i32*
  %v3_1ed04 = load i32, i32* %v2_1ed04, align 4
  store i32 %v3_1ed04, i32* %eax.global-to-local, align 8
  br i1 %v5_1ecd1, label %dec_label_pc_1ed04, label %dec_label_pc_1ecd5

dec_label_pc_1ecd5:                               ; preds = %dec_label_pc_1ecc6
  %v1_1ecdb = call i32 @unknown_3646c(i32 %v3_1ed04)
  store i32 %v1_1ecdb, i32* %eax.global-to-local, align 8
  %v1_1ece3 = call i32 @unknown_364c8(i32 %v1_1ecdb)
  %v0_1ecea = load i32, i32* @ebp, align 4
  %v1_1ecea = add i32 %v0_1ecea, -40
  store i32 %v1_1ecea, i32* %eax.global-to-local, align 8
  %v2_1ecf4 = call i32 @unknown_3d81e(i32 %v1_1ecea, i32 %v1_1ece3)
  store i32 %v2_1ecf4, i32* %eax.global-to-local, align 8
  %v0_1ecfc = load i32, i32* @ebp, align 4
  %v1_1ecfc = add i32 %v0_1ecfc, -40
  %v2_1ecfc = inttoptr i32 %v1_1ecfc to i32*
  %v3_1ecfc = load i32, i32* %v2_1ecfc, align 4
  store i32 %v3_1ecfc, i32* %eax.global-to-local, align 8
  %v2_1ecff = add i32 %v0_1ecfc, -20
  %v3_1ecff = inttoptr i32 %v2_1ecff to i32*
  store i32 %v3_1ecfc, i32* %v3_1ecff, align 4
  br label %dec_label_pc_1ed0d

dec_label_pc_1ed04:                               ; preds = %dec_label_pc_1ecc6
  %v1_1ed07 = add i32 %v3_1ed04, 8
  %v2_1ed07 = inttoptr i32 %v1_1ed07 to i32*
  %v3_1ed07 = load i32, i32* %v2_1ed07, align 4
  store i32 %v3_1ed07, i32* %eax.global-to-local, align 8
  %v2_1ed0a = add i32 %v0_1ed04, -20
  %v3_1ed0a = inttoptr i32 %v2_1ed0a to i32*
  store i32 %v3_1ed07, i32* %v3_1ed0a, align 4
  br label %dec_label_pc_1ed0d

dec_label_pc_1ed0d:                               ; preds = %dec_label_pc_1ed04, %dec_label_pc_1ecd5
  %v0_1ed0d = load i32, i32* @ebp, align 4
  %v1_1ed0d = add i32 %v0_1ed0d, -32
  %v2_1ed0d = inttoptr i32 %v1_1ed0d to i8*
  %v3_1ed0d = load i8, i8* %v2_1ed0d, align 1
  %v4_1ed0d = zext i8 %v3_1ed0d to i32
  store i32 %v4_1ed0d, i32* %eax.global-to-local, align 8
  %v1_1ed11 = add i32 %v0_1ed0d, -36
  %v2_1ed11 = inttoptr i32 %v1_1ed11 to i32*
  %v3_1ed11 = load i32, i32* %v2_1ed11, align 4
  %v1_1ed14 = load i32, i32* @esp, align 4
  %v2_1ed14 = add i32 %v1_1ed14, 12
  %v3_1ed14 = inttoptr i32 %v2_1ed14 to i32*
  store i32 %v3_1ed11, i32* %v3_1ed14, align 4
  %v0_1ed18 = load i32, i32* @ebp, align 4
  %v1_1ed18 = add i32 %v0_1ed18, -20
  %v1_1ed1b = load i32, i32* @esp, align 4
  %v2_1ed1b = add i32 %v1_1ed1b, 8
  %v3_1ed1b = inttoptr i32 %v2_1ed1b to i32*
  store i32 %v1_1ed18, i32* %v3_1ed1b, align 4
  %v0_1ed1f = load i32, i32* %eax.global-to-local, align 8
  %v1_1ed1f = load i32, i32* @esp, align 4
  %v2_1ed1f = add i32 %v1_1ed1f, 4
  %v3_1ed1f = inttoptr i32 %v2_1ed1f to i32*
  store i32 %v0_1ed1f, i32* %v3_1ed1f, align 4
  %v0_1ed23 = load i32, i32* @ebp, align 4
  %v1_1ed23 = add i32 %v0_1ed23, -28
  %v2_1ed23 = inttoptr i32 %v1_1ed23 to i32*
  %v3_1ed23 = load i32, i32* %v2_1ed23, align 4
  store i32 %v3_1ed23, i32* %eax.global-to-local, align 8
  %v1_1ed26 = load i32, i32* @esp, align 4
  %v2_1ed26 = inttoptr i32 %v1_1ed26 to i32*
  store i32 %v3_1ed23, i32* %v2_1ed26, align 4
  %v0_1ed29 = call i32 @unknown_3d62e()
  store i32 %v0_1ed29, i32* %eax.global-to-local, align 8
  %v0_1ed2e = load i32, i32* @ebp, align 4
  %v1_1ed2e = add i32 %v0_1ed2e, -12
  %v2_1ed2e = inttoptr i32 %v1_1ed2e to i32*
  %v3_1ed2e = load i32, i32* %v2_1ed2e, align 4
  %v3_1ed31 = xor i32 %v3_1ed2e, ptrtoint ([3 x i8]* @3 to i32)
  store i32 %v3_1ed31, i32* %eax.global-to-local, align 8
  ret i32 %v3_1ed31

; uselistorder directives
  uselistorder i32 %v3_1ed04, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 6, 11, 12 }
}

define i32 @_ZNSt6vectorIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEC1ERKSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ed42:
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v1_1ed67 = call i32 @unknown_38f16(i32 %arg2)
  store i32 %arg2, i32* @eax, align 8
  %v1_1ed74 = call i32 @function_34f4e(i32 %arg2)
  %v3_1ed87 = call i32 @unknown_41cd0(i32 %tmp107, i32 %v1_1ed74, i32 %v1_1ed67)
  %v2_1ed9c = load i32, i32* %arg1, align 4
  %v2_1ed9e = ptrtoint i32* %stack_var_-20 to i32
  %v2_1edab = call i32 @__stack_chk_fail.1090(i32 %v2_1ed9e, i32 %arg2)
  %v3_1edd0 = load i32, i32* %stack_var_-20, align 4
  %v4_1eddd = call i32 @unknown_41d74(i32 %tmp97, i32 %v3_1edd0, i32 %v2_1ed9c, i32 %tmp107)
  %v2_1ede7 = add i32 %tmp107, 4
  %v3_1ede7 = inttoptr i32 %v2_1ede7 to i32*
  store i32 %v4_1eddd, i32* %v3_1ede7, align 4
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_1edf2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1edf2:
  %zf.global-to-local = alloca i1, align 1
  %v2_1edf2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1edf2 = load i32, i32* @eax, align 8
  %v4_1edf2 = trunc i32 %v3_1edf2 to i8
  %v5_1edf2 = add i8 %v4_1edf2, %v2_1edf2
  %v15_1edf2 = icmp eq i8 %v5_1edf2, 0
  store i1 %v15_1edf2, i1* %zf.global-to-local, align 1
  %v21_1edf2 = inttoptr i32 %v3_1edf2 to i8*
  store i8 %v5_1edf2, i8* %v21_1edf2, align 1
  %v0_1edf4 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1edf4, label %bb, label %dec_label_pc_1edf6

bb:                                               ; preds = %dec_label_pc_1edf2
  %v1_1edf4 = call i32 @function_1ee14()
  store i32 %v1_1edf4, i32* @eax, align 8
  br label %dec_label_pc_1edf6

dec_label_pc_1edf6:                               ; preds = %bb, %dec_label_pc_1edf2
  %v0_1edf6 = call i32 @function_1ee0f()
  ret i32 %v0_1edf6
}

define i32 @function_1edf9() local_unnamed_addr {
dec_label_pc_1edf9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1edf9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1edf9
}

define i32 @function_1ee0f() local_unnamed_addr {
dec_label_pc_1ee0f:
  %v0_1ee0f = load i32, i32* @eax, align 8
  ret i32 %v0_1ee0f
}

define i32 @function_1ee14() local_unnamed_addr {
dec_label_pc_1ee14:
  %v0_1ee1a = load i32, i32* @eax, align 8
  ret i32 %v0_1ee1a
}

define i32 @_ZN5boost8functionIFbRKSsS2_jEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ee1c:
  %v2_1ee46 = call i32 @unknown_41ea4(i32 %arg1, i32 %arg2)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1ee52(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee52:
  %v2_1ee52 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_1ee52 = load i32, i32* @eax, align 8
  %v4_1ee52 = trunc i32 %v3_1ee52 to i8
  %v5_1ee52 = add i8 %v4_1ee52, %v2_1ee52
  %v21_1ee52 = inttoptr i32 %v3_1ee52 to i8*
  store i8 %v5_1ee52, i8* %v21_1ee52, align 1
  %v0_1ee54 = load i32, i32* @ebp, align 4
  %v1_1ee54 = load i32, i32* @eax, align 8
  %v3_1ee54 = add i32 %v0_1ee54, -24
  %v4_1ee54 = add i32 %v3_1ee54, %v1_1ee54
  %v5_1ee54 = inttoptr i32 %v4_1ee54 to i8*
  %v6_1ee54 = load i8, i8* %v5_1ee54, align 1
  %v7_1ee54 = load i32, i32* @edx, align 8
  %v8_1ee54 = udiv i32 %v7_1ee54, 256
  %v9_1ee54 = trunc i32 %v8_1ee54 to i8
  %v10_1ee54 = add i8 %v9_1ee54, %v6_1ee54
  store i8 %v10_1ee54, i8* %v5_1ee54, align 1
  %v0_1ee58 = load i32, i32* @eax, align 8
  ret i32 %v0_1ee58
}

define i32 @function_1ee5b() local_unnamed_addr {
dec_label_pc_1ee5b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ee5b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ee5b = add i32 %v0_1ee5b, -1
  store i32 %v1_1ee5b, i32* %ecx.global-to-local, align 4
  %v0_1ee5d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ee5d
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot3IbRKSsSD_jNS_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ee5e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_1ee90() local_unnamed_addr {
dec_label_pc_1ee90:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ee90 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ee90 = add i32 %v0_1ee90, -532313149
  %v2_1ee90 = inttoptr i32 %v1_1ee90 to i32*
  %v3_1ee90 = load i32, i32* %v2_1ee90, align 4
  %v4_1ee90 = add i32 %v3_1ee90, -1
  store i32 %v4_1ee90, i32* %v2_1ee90, align 4
  %v0_1ee96 = load i32, i32* %eax.global-to-local, align 8
  %v0_1ee9a = load i32, i32* %ebx.global-to-local, align 8
  %v2_1ee9d = call i32 @unknown_41f34(i32 %v0_1ee9a, i32 %v0_1ee96)
  store i32 %v2_1ee9d, i32* %eax.global-to-local, align 8
  %v0_1eea2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1eea2 = add i32 %v0_1eea2, -28
  %v2_1eea2 = inttoptr i32 %v1_1eea2 to i32*
  %v3_1eea2 = load i32, i32* %v2_1eea2, align 4
  store i32 %v3_1eea2, i32* %eax.global-to-local, align 8
  %v0_1eea5 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1eea5 = inttoptr i32 %v3_1eea2 to i32*
  store i32 %v0_1eea5, i32* %v2_1eea5, align 4
  %v0_1eea7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1eea7 = add i32 %v0_1eea7, -12
  %v2_1eea7 = inttoptr i32 %v1_1eea7 to i32*
  %v3_1eea7 = load i32, i32* %v2_1eea7, align 4
  %v3_1eeaa = xor i32 %v3_1eea7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1eeaa = icmp eq i32 %v3_1eeaa, 0
  store i32 %v3_1eeaa, i32* @eax, align 8
  br i1 %v4_1eeaa, label %bb, label %dec_label_pc_1eeb3

bb:                                               ; preds = %dec_label_pc_1ee90
  %v1_1eeb1 = call i32 @function_1eee3()
  store i32 %v1_1eeb1, i32* @eax, align 8
  br label %dec_label_pc_1eeb3

dec_label_pc_1eeb3:                               ; preds = %bb, %dec_label_pc_1ee90
  %v0_1eeb3 = call i32 @function_1eede()
  store i32 %v0_1eeb3, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eeb3
}

define i32 @function_1eeb6() local_unnamed_addr {
dec_label_pc_1eeb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1eeb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1eeb6
}

define i32 @function_1eede() local_unnamed_addr {
dec_label_pc_1eede:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1eee3() local_unnamed_addr {
dec_label_pc_1eee3:
  %v0_1eee8 = load i32, i32* @eax, align 8
  ret i32 %v0_1eee8
}

define i32 @_ZN5boost15optional_detail13optional_baseIiEC1Ev() local_unnamed_addr {
dec_label_pc_1eeea:
  %eax.global-to-local = alloca i32, align 4
  %v17_1eeed = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_1eeed
}

define i32 @function_1eef2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1eef2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1eef2 = load i32, i32* @ecx, align 4
  %v1_1eef2 = add i32 %v0_1eef2, -1587157947
  %v2_1eef2 = inttoptr i32 %v1_1eef2 to i8*
  %v3_1eef2 = load i8, i8* %v2_1eef2, align 1
  %v5_1eef2 = trunc i32 %v0_1eef2 to i8
  %v6_1eef2 = or i8 %v3_1eef2, %v5_1eef2
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1eef2, i8* %v2_1eef2, align 1
  %v0_1eef8 = load i32, i32* @eax, align 8
  %v1_1eef8 = trunc i32 %v0_1eef8 to i8
  %v2_1eef8 = load i1, i1* %cf.global-to-local, align 1
  %v3_1eef8 = zext i1 %v2_1eef8 to i8
  %v4_1eef8 = add i8 %v3_1eef8, %v1_1eef8
  %v19_1eef8 = icmp ule i8 %v4_1eef8, %v1_1eef8
  %v21_1eef8 = icmp eq i1 %v2_1eef8, %v19_1eef8
  store i1 %v21_1eef8, i1* %cf.global-to-local, align 1
  %v22_1eef8 = zext i8 %v4_1eef8 to i32
  %v24_1eef8 = and i32 %v0_1eef8, -256
  %v25_1eef8 = or i32 %v22_1eef8, %v24_1eef8
  store i32 %v25_1eef8, i32* %eax.global-to-local, align 8
  %v1_1eefa = inttoptr i32 %v25_1eef8 to i8*
  %v2_1eefa = load i8, i8* %v1_1eefa, align 1
  %v5_1eefa = add i8 %v2_1eefa, %v4_1eef8
  store i8 %v5_1eefa, i8* %v1_1eefa, align 1
  %v0_1eefc = load i32, i32* %eax.global-to-local, align 8
  %v1_1eefc = load i32, i32* @ebp, align 4
  %v2_1eefc = add i32 %v1_1eefc, -12
  %v3_1eefc = inttoptr i32 %v2_1eefc to i32*
  store i32 %v0_1eefc, i32* %v3_1eefc, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1ef01 = load i32, i32* @ebp, align 4
  %v1_1ef01 = add i32 %v0_1ef01, -28
  %v2_1ef01 = inttoptr i32 %v1_1ef01 to i32*
  %v3_1ef01 = load i32, i32* %v2_1ef01, align 4
  store i32 %v3_1ef01, i32* @eax, align 8
  %v1_1ef07 = call i32 @function_31486(i32 %v3_1ef01)
  store i32 %v1_1ef07, i32* %eax.global-to-local, align 8
  %v0_1ef0c = load i32, i32* @ebp, align 4
  %v1_1ef0c = add i32 %v0_1ef0c, -28
  %v2_1ef0c = inttoptr i32 %v1_1ef0c to i32*
  %v3_1ef0c = load i32, i32* %v2_1ef0c, align 4
  store i32 %v3_1ef0c, i32* %eax.global-to-local, align 8
  %v1_1ef0f = inttoptr i32 %v3_1ef0c to i8*
  store i8 0, i8* %v1_1ef0f, align 1
  %v0_1ef12 = load i32, i32* @ebp, align 4
  %v1_1ef12 = add i32 %v0_1ef12, -12
  %v2_1ef12 = inttoptr i32 %v1_1ef12 to i32*
  %v3_1ef12 = load i32, i32* %v2_1ef12, align 4
  %v3_1ef15 = xor i32 %v3_1ef12, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v3_1ef15, i32* %eax.global-to-local, align 8
  ret i32 %v3_1ef15

; uselistorder directives
  uselistorder i8 %v4_1eef8, { 0, 2, 1 }
  uselistorder i8 %v1_1eef8, { 1, 0 }
}

define i32 @function_1ef1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef1e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1ef23() local_unnamed_addr {
dec_label_pc_1ef23:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ef24 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1ef24
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE7destroyEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_1ef26:
  %edx.global-to-local = alloca i32, align 4
  %v2_1ef40 = load i8, i8* %arg1, align 1
  %v5_1ef43 = icmp eq i8 %v2_1ef40, 0
  br i1 %v5_1ef43, label %dec_label_pc_1ef56, label %dec_label_pc_1ef47

dec_label_pc_1ef47:                               ; preds = %dec_label_pc_1ef26
  %v4_1ef3d = ptrtoint i8* %arg1 to i32
  %v0_1ef47 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_1ef47, 16777216
  %v3_1ef51 = sdiv i32 %sext, 16777216
  %v4_1ef51 = call i32 @unknown_4208c(i32 %v4_1ef3d, i32 %v3_1ef51)
  br label %dec_label_pc_1ef56

dec_label_pc_1ef56:                               ; preds = %dec_label_pc_1ef47, %dec_label_pc_1ef26
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ef62

bb:                                               ; preds = %dec_label_pc_1ef56
  %v1_1ef60 = call i32 @function_1ef67()
  br label %dec_label_pc_1ef62

dec_label_pc_1ef62:                               ; preds = %bb, %dec_label_pc_1ef56
  %v2_1ef60 = phi i32 [ %v1_1ef60, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1ef56 ]
  ret i32 %v2_1ef60
}

define i32 @function_1ef67() local_unnamed_addr {
dec_label_pc_1ef67:
  %v0_1ef68 = load i32, i32* @eax, align 8
  ret i32 %v0_1ef68
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ef6a:
  ret i32 %arg2
}

define i32 @function_1ef7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ef7e = load i32, i32* @eax, align 8
  %v1_1ef7e = trunc i32 %v0_1ef7e to i8
  %v2_1ef7e = load i1, i1* @cf, align 1
  %v3_1ef7e = zext i1 %v2_1ef7e to i8
  %v4_1ef7e = add i8 %v3_1ef7e, %v1_1ef7e
  %v22_1ef7e = zext i8 %v4_1ef7e to i32
  %v24_1ef7e = and i32 %v0_1ef7e, -256
  %v25_1ef7e = or i32 %v22_1ef7e, %v24_1ef7e
  store i32 %v25_1ef7e, i32* %eax.global-to-local, align 8
  %v1_1ef80 = inttoptr i32 %v25_1ef7e to i8*
  %v2_1ef80 = load i8, i8* %v1_1ef80, align 1
  %v5_1ef80 = add i8 %v2_1ef80, %v4_1ef7e
  store i8 %v5_1ef80, i8* %v1_1ef80, align 1
  %v0_1ef82 = load i32, i32* %eax.global-to-local, align 8
  %v1_1ef82 = load i32, i32* @ebp, align 4
  %v2_1ef82 = add i32 %v1_1ef82, -12
  %v3_1ef82 = inttoptr i32 %v2_1ef82 to i32*
  store i32 %v0_1ef82, i32* %v3_1ef82, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1ef87 = load i32, i32* @ebp, align 4
  %v1_1ef87 = add i32 %v0_1ef87, -32
  %v2_1ef87 = inttoptr i32 %v1_1ef87 to i32*
  %v3_1ef87 = load i32, i32* %v2_1ef87, align 4
  %v1_1ef8a = add i32 %v3_1ef87, 4
  store i32 %v1_1ef8a, i32* %eax.global-to-local, align 8
  %v1_1ef91 = add i32 %v0_1ef87, -28
  %v2_1ef91 = inttoptr i32 %v1_1ef91 to i32*
  %v3_1ef91 = load i32, i32* %v2_1ef91, align 4
  store i32 %v3_1ef91, i32* %eax.global-to-local, align 8
  %v2_1ef97 = call i32 @unknown_42112(i32 %v3_1ef91, i32 %v1_1ef8a)
  store i32 %v2_1ef97, i32* %eax.global-to-local, align 8
  %v0_1ef9c = load i32, i32* @ebp, align 4
  %v1_1ef9c = add i32 %v0_1ef9c, -28
  %v2_1ef9c = inttoptr i32 %v1_1ef9c to i32*
  %v3_1ef9c = load i32, i32* %v2_1ef9c, align 4
  store i32 %v3_1ef9c, i32* @eax, align 8
  %v1_1ef9f = add i32 %v0_1ef9c, -12
  %v2_1ef9f = inttoptr i32 %v1_1ef9f to i32*
  %v3_1ef9f = load i32, i32* %v2_1ef9f, align 4
  %v4_1efa2 = icmp eq i32 %v3_1ef9f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1efa2, label %bb, label %dec_label_pc_1efab

bb:                                               ; preds = %dec_label_pc_1ef7e
  %v1_1efa9 = call i32 @function_1efb0()
  store i32 %v1_1efa9, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1efab

dec_label_pc_1efab:                               ; preds = %bb, %dec_label_pc_1ef7e
  %v2_1efa9 = phi i32 [ %v1_1efa9, %bb ], [ %v3_1ef9c, %dec_label_pc_1ef7e ]
  ret i32 %v2_1efa9
}

define i32 @function_1efb0() local_unnamed_addr {
dec_label_pc_1efb0:
  %v0_1efb1 = load i32, i32* @eax, align 8
  ret i32 %v0_1efb1
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11upper_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1efb4:
  %v1_1efde = call i32 @unknown_421c4(i32 %arg2)
  %v1_1efeb = call i32 @unknown_42194(i32 %arg2)
  %v5_1f00c = call i32 @unknown_421f4(i32 %arg1, i32 %arg2, i32 %v1_1efeb, i32 %v1_1efde, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f023

bb:                                               ; preds = %dec_label_pc_1efb4
  %v1_1f021 = call i32 @function_1f028()
  br label %dec_label_pc_1f023

dec_label_pc_1f023:                               ; preds = %bb, %dec_label_pc_1efb4
  %v2_1f021 = phi i32 [ %v1_1f021, %bb ], [ %arg1, %dec_label_pc_1efb4 ]
  ret i32 %v2_1f021

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f028() local_unnamed_addr {
dec_label_pc_1f028:
  %v0_1f02c = load i32, i32* @eax, align 8
  ret i32 %v0_1f02c
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f030:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1f04a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f04a:
  %v0_1f04d = load i32, i32* @ebp, align 4
  %v1_1f04d = add i32 %v0_1f04d, -32
  %v2_1f04d = inttoptr i32 %v1_1f04d to i32*
  %v3_1f04d = load i32, i32* %v2_1f04d, align 4
  %v1_1f050 = inttoptr i32 %v3_1f04d to i32*
  %v2_1f050 = load i32, i32* %v1_1f050, align 4
  %v1_1f052 = add i32 %v0_1f04d, -28
  %v2_1f052 = inttoptr i32 %v1_1f052 to i32*
  %v3_1f052 = load i32, i32* %v2_1f052, align 4
  %v2_1f055 = inttoptr i32 %v3_1f052 to i32*
  store i32 %v2_1f050, i32* %v2_1f055, align 4
  %v0_1f057 = load i32, i32* @ebp, align 4
  %v1_1f057 = add i32 %v0_1f057, -12
  %v2_1f057 = inttoptr i32 %v1_1f057 to i32*
  %v3_1f057 = load i32, i32* %v2_1f057, align 4
  %v3_1f05a = xor i32 %v3_1f057, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f05a = icmp eq i32 %v3_1f05a, 0
  store i32 %v3_1f05a, i32* @eax, align 8
  br i1 %v4_1f05a, label %bb, label %dec_label_pc_1f063

bb:                                               ; preds = %dec_label_pc_1f04a
  %v1_1f061 = call i32 @function_1f068()
  br label %dec_label_pc_1f063

dec_label_pc_1f063:                               ; preds = %bb, %dec_label_pc_1f04a
  %v2_1f061 = phi i32 [ %v1_1f061, %bb ], [ %v3_1f05a, %dec_label_pc_1f04a ]
  ret i32 %v2_1f061
}

define i32 @function_1f068() local_unnamed_addr {
dec_label_pc_1f068:
  %v0_1f069 = load i32, i32* @eax, align 8
  ret i32 %v0_1f069
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE() local_unnamed_addr {
dec_label_pc_1f06a:
  %eax.global-to-local = alloca i32, align 4
  %v5_1f06a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_1f06a
}

define i32 @function_1f06c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f06c:
  %v0_1f071 = load i32, i32* @ebp, align 4
  %v1_1f071 = add i32 %v0_1f071, 8
  %v2_1f071 = inttoptr i32 %v1_1f071 to i32*
  %v3_1f071 = load i32, i32* %v2_1f071, align 4
  %v2_1f074 = add i32 %v0_1f071, -28
  %v3_1f074 = inttoptr i32 %v2_1f074 to i32*
  store i32 %v3_1f071, i32* %v3_1f074, align 4
  %v0_1f077 = load i32, i32* @ebp, align 4
  %v1_1f077 = add i32 %v0_1f077, 12
  %v2_1f077 = inttoptr i32 %v1_1f077 to i32*
  %v3_1f077 = load i32, i32* %v2_1f077, align 4
  %v2_1f07a = add i32 %v0_1f077, -32
  %v3_1f07a = inttoptr i32 %v2_1f07a to i32*
  store i32 %v3_1f077, i32* %v3_1f07a, align 4
  %v0_1f07d = load i32, i32* @ebp, align 4
  %v1_1f07d = add i32 %v0_1f07d, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_1f07d = inttoptr i32 %v1_1f07d to i32*
  %v3_1f07d = load i32, i32* %v2_1f07d, align 4
  %v2_1f080 = add i32 %v0_1f07d, -36
  %v3_1f080 = inttoptr i32 %v2_1f080 to i32*
  store i32 %v3_1f07d, i32* %v3_1f080, align 4
  %v1_1f089 = load i32, i32* @ebp, align 4
  %v2_1f089 = add i32 %v1_1f089, -12
  %v3_1f089 = inttoptr i32 %v2_1f089 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1f089, align 4
  %v0_1f08e = load i32, i32* @ebp, align 4
  %v1_1f08e = add i32 %v0_1f08e, -28
  %v2_1f08e = inttoptr i32 %v1_1f08e to i32*
  %v3_1f08e = load i32, i32* %v2_1f08e, align 4
  %v1_1f094 = call i32 @unknown_41b6c(i32 %v3_1f08e)
  %v0_1f099 = load i32, i32* @ebp, align 4
  %v1_1f099 = add i32 %v0_1f099, -32
  %v2_1f099 = inttoptr i32 %v1_1f099 to i32*
  %v3_1f099 = load i32, i32* %v2_1f099, align 4
  %v1_1f09c = add i32 %v3_1f099, 8
  %v1_1f09f = add i32 %v0_1f099, -20
  %v2_1f0a9 = call i32 @unknown_3a70a(i32 %v1_1f09f, i32 %v1_1f09c)
  %v0_1f0b1 = load i32, i32* @ebp, align 4
  %v1_1f0b1 = add i32 %v0_1f0b1, -20
  %v1_1f0b8 = add i32 %v0_1f0b1, -16
  %v2_1f0be = call i32 @unknown_3e09a(i32 %v1_1f0b8, i32 %v1_1f0b1)
  %v0_1f0c3 = load i32, i32* @ebp, align 4
  %v1_1f0c3 = add i32 %v0_1f0c3, -16
  %v1_1f0ca = add i32 %v0_1f0c3, -36
  %v2_1f0ca = inttoptr i32 %v1_1f0ca to i32*
  %v3_1f0ca = load i32, i32* %v2_1f0ca, align 4
  %v2_1f0d0 = call i32 @unknown_4235c(i32 %v3_1f0ca, i32 %v1_1f0c3)
  %v4_1f0d5 = trunc i32 %v2_1f0d0 to i8
  %v5_1f0d5 = icmp eq i8 %v4_1f0d5, 0
  br i1 %v5_1f0d5, label %bb, label %dec_label_pc_1f0d9

bb:                                               ; preds = %dec_label_pc_1f06c
  %v1_1f0d7 = call i32 @function_1f0f8()
  br label %dec_label_pc_1f0d9

dec_label_pc_1f0d9:                               ; preds = %bb, %dec_label_pc_1f06c
  %v4_1f0d9 = phi i32 [ %v1_1f0d7, %bb ], [ %v2_1f0d0, %dec_label_pc_1f06c ]
  ret i32 %v4_1f0d9
}

define i32 @function_1f0dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f0dc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f0dc = load i32, i32* @ebp, align 4
  %v1_1f0dc = add i32 %v0_1f0dc, -28
  %v2_1f0dc = inttoptr i32 %v1_1f0dc to i32*
  %v3_1f0dc = load i32, i32* %v2_1f0dc, align 4
  store i32 %v3_1f0dc, i32* %ebx.global-to-local, align 8
  %v1_1f0df = add i32 %v0_1f0dc, -40
  store i32 %v1_1f0df, i32* %eax.global-to-local, align 8
  %v0_1f0e2 = load i32, i32* @edx, align 8
  %v2_1f0e9 = call i32 @unknown_4239c(i32 %v1_1f0df, i32 %v0_1f0e2)
  store i32 %v2_1f0e9, i32* %eax.global-to-local, align 8
  %v0_1f0f1 = load i32, i32* @ebp, align 4
  %v1_1f0f1 = add i32 %v0_1f0f1, -40
  %v2_1f0f1 = inttoptr i32 %v1_1f0f1 to i32*
  %v3_1f0f1 = load i32, i32* %v2_1f0f1, align 4
  store i32 %v3_1f0f1, i32* %eax.global-to-local, align 8
  %v1_1f0f4 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1f0f4 = inttoptr i32 %v1_1f0f4 to i32*
  store i32 %v3_1f0f1, i32* %v2_1f0f4, align 4
  %v0_1f0f6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f0f6
}

define i32 @function_1f0f8() local_unnamed_addr {
dec_label_pc_1f0f8:
  %v0_1f0f8 = load i32, i32* @ebp, align 4
  %v1_1f0f8 = add i32 %v0_1f0f8, -36
  %v2_1f0f8 = inttoptr i32 %v1_1f0f8 to i32*
  %v3_1f0f8 = load i32, i32* %v2_1f0f8, align 4
  %v1_1f0fe = call i32 @unknown_423e4(i32 %v3_1f0f8)
  %v0_1f105 = load i32, i32* @ebp, align 4
  %v1_1f105 = add i32 %v0_1f105, -28
  %v2_1f105 = inttoptr i32 %v1_1f105 to i32*
  %v3_1f105 = load i32, i32* %v2_1f105, align 4
  %v1_1f108 = add i32 %v1_1f0fe, 12
  %v2_1f108 = inttoptr i32 %v1_1f108 to i32*
  %v3_1f108 = load i32, i32* %v2_1f108, align 4
  %v2_1f10b = inttoptr i32 %v3_1f105 to i32*
  store i32 %v3_1f108, i32* %v2_1f10b, align 4
  %v0_1f10d = load i32, i32* @ebp, align 4
  %v1_1f10d = add i32 %v0_1f10d, -28
  %v2_1f10d = inttoptr i32 %v1_1f10d to i32*
  %v3_1f10d = load i32, i32* %v2_1f10d, align 4
  store i32 %v3_1f10d, i32* @eax, align 8
  %v1_1f110 = add i32 %v0_1f10d, -12
  %v2_1f110 = inttoptr i32 %v1_1f110 to i32*
  %v3_1f110 = load i32, i32* %v2_1f110, align 4
  %v4_1f113 = icmp eq i32 %v3_1f110, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f113, label %bb, label %dec_label_pc_1f11c

bb:                                               ; preds = %dec_label_pc_1f0f8
  %v1_1f11a = call i32 @function_1f121()
  br label %dec_label_pc_1f11c

dec_label_pc_1f11c:                               ; preds = %bb, %dec_label_pc_1f0f8
  %v3_1f11a = phi i32 [ %v1_1f11a, %bb ], [ %v3_1f10d, %dec_label_pc_1f0f8 ]
  ret i32 %v3_1f11a
}

define i32 @function_1f121() local_unnamed_addr {
dec_label_pc_1f121:
  %v0_1f125 = load i32, i32* @eax, align 8
  ret i32 %v0_1f125
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE6insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f128:
  %v2_1f15e = call i32 @unknown_424dc(i32 %arg2, i32 %arg4)
  ret i32 %v2_1f15e
}

define i32 @function_1f16a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f16a:
  %v0_1f16a = load i32, i32* @ebp, align 4
  %v1_1f16a = add i32 %v0_1f16a, 1
  store i32 %v1_1f16a, i32* @ebp, align 4
  %v15_1f16a = load i32, i32* @eax, align 8
  ret i32 %v15_1f16a
}

define i32 @function_1f176(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f176:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f19d() local_unnamed_addr {
dec_label_pc_1f19d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f19d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f19d = add i32 %v0_1f19d, -1
  store i32 %v1_1f19d, i32* %ecx.global-to-local, align 4
  %v0_1f19f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f19f
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f1a2:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1f1c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f1c0:
  %v0_1f1c0 = load i32, i32* @eax, align 8
  %v1_1f1c0 = load i32, i32* @ebp, align 4
  %v2_1f1c0 = add i32 %v1_1f1c0, -12
  %v3_1f1c0 = inttoptr i32 %v2_1f1c0 to i32*
  store i32 %v0_1f1c0, i32* %v3_1f1c0, align 4
  %v0_1f1c5 = load i32, i32* @ebp, align 4
  %v1_1f1c5 = add i32 %v0_1f1c5, -28
  %v2_1f1c5 = inttoptr i32 %v1_1f1c5 to i32*
  %v3_1f1c5 = load i32, i32* %v2_1f1c5, align 4
  %v1_1f1c8 = add i32 %v3_1f1c5, 32
  %v1_1f1cb = add i32 %v0_1f1c5, -36
  %v2_1f1cb = inttoptr i32 %v1_1f1cb to i32*
  %v3_1f1cb = load i32, i32* %v2_1f1cb, align 4
  %v1_1f1d2 = add i32 %v0_1f1c5, -32
  %v2_1f1d2 = inttoptr i32 %v1_1f1d2 to i32*
  %v3_1f1d2 = load i32, i32* %v2_1f1d2, align 4
  %v3_1f1dc = call i32 @unknown_408e2(i32 %v1_1f1c8, i32 %v3_1f1d2, i32 %v3_1f1cb)
  %v4_1f1e1 = trunc i32 %v3_1f1dc to i8
  %v5_1f1e1 = icmp eq i8 %v4_1f1e1, 0
  br i1 %v5_1f1e1, label %dec_label_pc_1f1ec, label %dec_label_pc_1f1e5

dec_label_pc_1f1e5:                               ; preds = %dec_label_pc_1f1c0
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1f218

dec_label_pc_1f1ec:                               ; preds = %dec_label_pc_1f1c0
  %v0_1f1ec = load i32, i32* @ebp, align 4
  %v1_1f1ec = add i32 %v0_1f1ec, -28
  %v2_1f1ec = inttoptr i32 %v1_1f1ec to i32*
  %v3_1f1ec = load i32, i32* %v2_1f1ec, align 4
  %v1_1f1ef = add i32 %v3_1f1ec, 32
  %v1_1f1f2 = add i32 %v0_1f1ec, -32
  %v2_1f1f2 = inttoptr i32 %v1_1f1f2 to i32*
  %v3_1f1f2 = load i32, i32* %v2_1f1f2, align 4
  %v1_1f1f9 = add i32 %v0_1f1ec, -36
  %v2_1f1f9 = inttoptr i32 %v1_1f1f9 to i32*
  %v3_1f1f9 = load i32, i32* %v2_1f1f9, align 4
  %v3_1f203 = call i32 @unknown_408e2(i32 %v1_1f1ef, i32 %v3_1f1f9, i32 %v3_1f1f2)
  %v4_1f208 = trunc i32 %v3_1f203 to i8
  %v5_1f208 = icmp eq i8 %v4_1f208, 0
  br i1 %v5_1f208, label %dec_label_pc_1f213, label %dec_label_pc_1f20c

dec_label_pc_1f20c:                               ; preds = %dec_label_pc_1f1ec
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1f218

dec_label_pc_1f213:                               ; preds = %dec_label_pc_1f1ec
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_1f218

dec_label_pc_1f218:                               ; preds = %dec_label_pc_1f213, %dec_label_pc_1f20c, %dec_label_pc_1f1e5
  %v2_1f2224 = phi i32 [ 1, %dec_label_pc_1f213 ], [ 0, %dec_label_pc_1f20c ], [ 0, %dec_label_pc_1f1e5 ]
  %v0_1f218 = load i32, i32* @ebp, align 4
  %v1_1f218 = add i32 %v0_1f218, -12
  %v2_1f218 = inttoptr i32 %v1_1f218 to i32*
  %v3_1f218 = load i32, i32* %v2_1f218, align 4
  %v4_1f21b = icmp eq i32 %v3_1f218, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f21b, label %bb, label %dec_label_pc_1f224

bb:                                               ; preds = %dec_label_pc_1f218
  %v1_1f222 = call i32 @function_1f229()
  br label %dec_label_pc_1f224

dec_label_pc_1f224:                               ; preds = %bb, %dec_label_pc_1f218
  %v2_1f222 = phi i32 [ %v1_1f222, %bb ], [ %v2_1f2224, %dec_label_pc_1f218 ]
  ret i32 %v2_1f222

; uselistorder directives
  uselistorder i32 %v0_1f1ec, { 1, 0, 2 }
  uselistorder i32 %v0_1f1c5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_408e2, { 1, 0 }
}

define i32 @function_1f229() local_unnamed_addr {
dec_label_pc_1f229:
  %v0_1f22a = load i32, i32* @eax, align 8
  ret i32 %v0_1f22a
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f22c:
  %v2_1f246 = load i32, i32* %arg1, align 4
  %v1_1f248 = add i32 %v2_1f246, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_1f24e = call i32 @unknown_426e6(i32 %v1_1f248)
  ret i32 %v1_1f24e
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f266:
  %tmp101 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp101
}

define i32 @function_1f288(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f288:
  %v0_1f288 = load i32, i32* @ebp, align 4
  %v1_1f288 = add i32 %v0_1f288, -32
  %v2_1f288 = inttoptr i32 %v1_1f288 to i32*
  %v3_1f288 = load i32, i32* %v2_1f288, align 4
  %v1_1f28b = inttoptr i32 %v3_1f288 to i32*
  %v2_1f28b = load i32, i32* %v1_1f28b, align 4
  %v0_1f28d = load i32, i32* @edx, align 8
  %v12_1f28d = icmp eq i32 %v0_1f28d, %v2_1f28b
  %v1_1f28f = icmp eq i1 %v12_1f28d, false
  %v2_1f28f = zext i1 %v1_1f28f to i32
  %v4_1f28f = and i32 %v2_1f28b, -256
  %v5_1f28f = or i32 %v2_1f28f, %v4_1f28f
  store i32 %v5_1f28f, i32* @eax, align 8
  %v1_1f292 = add i32 %v0_1f288, -12
  %v2_1f292 = inttoptr i32 %v1_1f292 to i32*
  %v3_1f292 = load i32, i32* %v2_1f292, align 4
  %v4_1f295 = icmp eq i32 %v3_1f292, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f295, label %bb, label %dec_label_pc_1f29e

bb:                                               ; preds = %dec_label_pc_1f288
  %v1_1f29c = call i32 @function_1f2a3()
  br label %dec_label_pc_1f29e

dec_label_pc_1f29e:                               ; preds = %bb, %dec_label_pc_1f288
  %v2_1f29c = phi i32 [ %v1_1f29c, %bb ], [ %v5_1f28f, %dec_label_pc_1f288 ]
  ret i32 %v2_1f29c

; uselistorder directives
  uselistorder i32 %v2_1f28b, { 1, 0 }
}

define i32 @function_1f2a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2a2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f2a3() local_unnamed_addr {
dec_label_pc_1f2a3:
  %v0_1f2a4 = load i32, i32* @eax, align 8
  ret i32 %v0_1f2a4
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5eraseESt17_Rb_tree_iteratorISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f2a6:
  %v2_1f2d0 = call i32 @unknown_4278e(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f2e1

bb:                                               ; preds = %dec_label_pc_1f2a6
  %v1_1f2df = call i32 @function_1f2e6()
  br label %dec_label_pc_1f2e1

dec_label_pc_1f2e1:                               ; preds = %bb, %dec_label_pc_1f2a6
  %v2_1f2df = phi i32 [ %v1_1f2df, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1f2a6 ]
  ret i32 %v2_1f2df
}

define i32 @function_1f2e6() local_unnamed_addr {
dec_label_pc_1f2e6:
  %v0_1f2e7 = load i32, i32* @eax, align 8
  ret i32 %v0_1f2e7
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEeqERKSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f2e8:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_1f302(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f302:
  %v0_1f305 = load i32, i32* @ebp, align 4
  %v1_1f305 = add i32 %v0_1f305, -28
  %v2_1f305 = inttoptr i32 %v1_1f305 to i32*
  %v3_1f305 = load i32, i32* %v2_1f305, align 4
  %v1_1f308 = inttoptr i32 %v3_1f305 to i32*
  %v2_1f308 = load i32, i32* %v1_1f308, align 4
  %v1_1f30a = add i32 %v0_1f305, -32
  %v2_1f30a = inttoptr i32 %v1_1f30a to i32*
  %v3_1f30a = load i32, i32* %v2_1f30a, align 4
  %v1_1f30d = inttoptr i32 %v3_1f30a to i32*
  %v2_1f30d = load i32, i32* %v1_1f30d, align 4
  %v12_1f30f = icmp eq i32 %v2_1f308, %v2_1f30d
  %v1_1f311 = zext i1 %v12_1f30f to i32
  %v3_1f311 = and i32 %v2_1f30d, -256
  %v4_1f311 = or i32 %v1_1f311, %v3_1f311
  store i32 %v4_1f311, i32* @eax, align 8
  %v1_1f314 = add i32 %v0_1f305, -12
  %v2_1f314 = inttoptr i32 %v1_1f314 to i32*
  %v3_1f314 = load i32, i32* %v2_1f314, align 4
  %v4_1f317 = icmp eq i32 %v3_1f314, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f317, label %bb, label %dec_label_pc_1f320

bb:                                               ; preds = %dec_label_pc_1f302
  %v1_1f31e = call i32 @function_1f325()
  br label %dec_label_pc_1f320

dec_label_pc_1f320:                               ; preds = %bb, %dec_label_pc_1f302
  %v2_1f31e = phi i32 [ %v1_1f31e, %bb ], [ %v4_1f311, %dec_label_pc_1f302 ]
  ret i32 %v2_1f31e

; uselistorder directives
  uselistorder i32 %v2_1f30d, { 1, 0 }
}

define i32 @function_1f325() local_unnamed_addr {
dec_label_pc_1f325:
  %v0_1f326 = load i32, i32* @eax, align 8
  ret i32 %v0_1f326
}

define i32 @_ZNSt4pairIN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f328:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1f348 = inttoptr i32 %arg2 to i32*
  %v2_1f348 = load i32, i32* %v1_1f348, align 4
  store i32 %v2_1f348, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_1f35a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f35a:
  %v0_1f35a = load i32, i32* @eax, align 8
  %v2_1f35a = add i32 %v0_1f35a, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  %v2_1f35d = and i32 %v2_1f35a, 4
  %v10_1f35d = and i32 %v0_1f35a, -256
  %v11_1f35d = or i32 %v2_1f35d, %v10_1f35d
  %v1_1f362 = call i32 @unknown_42864(i32 %v11_1f35d)
  %v0_1f367 = load i32, i32* @ebp, align 4
  %v1_1f367 = add i32 %v0_1f367, -12
  %v2_1f367 = inttoptr i32 %v1_1f367 to i32*
  %v3_1f367 = load i32, i32* %v2_1f367, align 4
  %v3_1f36a = xor i32 %v3_1f367, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f36a = icmp eq i32 %v3_1f36a, 0
  store i32 %v3_1f36a, i32* @eax, align 8
  br i1 %v4_1f36a, label %bb, label %dec_label_pc_1f373

bb:                                               ; preds = %dec_label_pc_1f35a
  %v1_1f371 = call i32 @function_1f378()
  br label %dec_label_pc_1f373

dec_label_pc_1f373:                               ; preds = %bb, %dec_label_pc_1f35a
  %v2_1f371 = phi i32 [ %v1_1f371, %bb ], [ %v3_1f36a, %dec_label_pc_1f35a ]
  ret i32 %v2_1f371

; uselistorder directives
  uselistorder i32 %v0_1f35a, { 1, 0 }
}

define i32 @function_1f378() local_unnamed_addr {
dec_label_pc_1f378:
  %v0_1f379 = load i32, i32* @eax, align 8
  ret i32 %v0_1f379
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEC1ERS7_RKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f37a:
  ret i32 %arg2
}

define i32 @function_1f38e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f38e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1f38e = load i32, i32* @ecx, align 4
  %v1_1f38e = add i32 %v0_1f38e, -1587159995
  %v2_1f38e = inttoptr i32 %v1_1f38e to i8*
  %v3_1f38e = load i8, i8* %v2_1f38e, align 1
  %v5_1f38e = trunc i32 %v0_1f38e to i8
  %v6_1f38e = load i1, i1* @cf, align 1
  %v7_1f38e = zext i1 %v6_1f38e to i8
  %v8_1f38e = add i8 %v3_1f38e, %v5_1f38e
  %v9_1f38e = add i8 %v7_1f38e, %v8_1f38e
  %v27_1f38e = icmp ule i8 %v9_1f38e, %v3_1f38e
  %v28_1f38e = icmp ult i8 %v8_1f38e, %v3_1f38e
  %v29_1f38e = select i1 %v6_1f38e, i1 %v27_1f38e, i1 %v28_1f38e
  store i1 %v29_1f38e, i1* %cf.global-to-local, align 1
  store i8 %v9_1f38e, i8* %v2_1f38e, align 1
  %v0_1f394 = load i32, i32* @eax, align 8
  %v1_1f394 = trunc i32 %v0_1f394 to i8
  %v2_1f394 = load i1, i1* %cf.global-to-local, align 1
  %v3_1f394 = zext i1 %v2_1f394 to i8
  %v4_1f394 = add i8 %v3_1f394, %v1_1f394
  %v19_1f394 = icmp ule i8 %v4_1f394, %v1_1f394
  %v21_1f394 = icmp eq i1 %v2_1f394, %v19_1f394
  store i1 %v21_1f394, i1* %cf.global-to-local, align 1
  %v22_1f394 = zext i8 %v4_1f394 to i32
  %v24_1f394 = and i32 %v0_1f394, -256
  %v25_1f394 = or i32 %v22_1f394, %v24_1f394
  store i32 %v25_1f394, i32* %eax.global-to-local, align 8
  %v1_1f396 = inttoptr i32 %v25_1f394 to i8*
  %v2_1f396 = load i8, i8* %v1_1f396, align 1
  %v5_1f396 = add i8 %v2_1f396, %v4_1f394
  store i8 %v5_1f396, i8* %v1_1f396, align 1
  %v0_1f398 = load i32, i32* %eax.global-to-local, align 8
  %v1_1f398 = load i32, i32* @ebp, align 4
  %v2_1f398 = add i32 %v1_1f398, -12
  %v3_1f398 = inttoptr i32 %v2_1f398 to i32*
  store i32 %v0_1f398, i32* %v3_1f398, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1f39d = load i32, i32* @ebp, align 4
  %v1_1f39d = add i32 %v0_1f39d, -28
  %v2_1f39d = inttoptr i32 %v1_1f39d to i32*
  %v3_1f39d = load i32, i32* %v2_1f39d, align 4
  store i32 %v3_1f39d, i32* %eax.global-to-local, align 8
  %v1_1f3a0 = add i32 %v0_1f39d, -32
  %v2_1f3a0 = inttoptr i32 %v1_1f3a0 to i32*
  %v3_1f3a0 = load i32, i32* %v2_1f3a0, align 4
  %v2_1f3aa = call i32 @unknown_3e6a2(i32 %v3_1f39d, i32 %v3_1f3a0)
  store i32 %v2_1f3aa, i32* %eax.global-to-local, align 8
  %v0_1f3af = load i32, i32* @ebp, align 4
  %v1_1f3af = add i32 %v0_1f3af, -28
  %v2_1f3af = inttoptr i32 %v1_1f3af to i32*
  %v3_1f3af = load i32, i32* %v2_1f3af, align 4
  store i32 %v3_1f3af, i32* %eax.global-to-local, align 8
  %v1_1f3b2 = add i32 %v0_1f3af, -36
  %v2_1f3b2 = inttoptr i32 %v1_1f3b2 to i32*
  %v3_1f3b2 = load i32, i32* %v2_1f3b2, align 4
  %v1_1f3b5 = inttoptr i32 %v3_1f3b2 to i32*
  %v2_1f3b5 = load i32, i32* %v1_1f3b5, align 4
  %v2_1f3b7 = add i32 %v3_1f3af, 12
  %v3_1f3b7 = inttoptr i32 %v2_1f3b7 to i32*
  store i32 %v2_1f3b5, i32* %v3_1f3b7, align 4
  %v0_1f3ba = load i32, i32* @ebp, align 4
  %v1_1f3ba = add i32 %v0_1f3ba, -12
  %v2_1f3ba = inttoptr i32 %v1_1f3ba to i32*
  %v3_1f3ba = load i32, i32* %v2_1f3ba, align 4
  %v3_1f3bd = xor i32 %v3_1f3ba, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_1f3bd = icmp eq i32 %v3_1f3bd, 0
  store i32 %v3_1f3bd, i32* @eax, align 8
  br i1 %v4_1f3bd, label %bb, label %dec_label_pc_1f3c6

bb:                                               ; preds = %dec_label_pc_1f38e
  %v1_1f3c4 = call i32 @function_1f3cb()
  store i32 %v1_1f3c4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f3c6

dec_label_pc_1f3c6:                               ; preds = %bb, %dec_label_pc_1f38e
  %v2_1f3c4 = phi i32 [ %v1_1f3c4, %bb ], [ %v3_1f3bd, %dec_label_pc_1f38e ]
  ret i32 %v2_1f3c4

; uselistorder directives
  uselistorder i8 %v4_1f394, { 0, 2, 1 }
  uselistorder i8 %v1_1f394, { 1, 0 }
  uselistorder i8 %v9_1f38e, { 1, 0 }
  uselistorder i8 %v8_1f38e, { 1, 0 }
}

define i32 @function_1f3cb() local_unnamed_addr {
dec_label_pc_1f3cb:
  %v0_1f3cc = load i32, i32* @eax, align 8
  ret i32 %v0_1f3cc
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertERKSR_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f3ce:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_1f3de() local_unnamed_addr {
dec_label_pc_1f3de:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1f3de = load i32, i32* @ebp, align 4
  %v0_1f3df = load i32, i32* @ecx, align 4
  %v1_1f3df = add i32 %v0_1f3df, 255
  %v1_1f3e1 = add i32 %v0_1f3de, 2
  store i32 %v1_1f3e1, i32* @ebp, align 4
  %v1_1f3e2 = add i32 %v0_1f3df, -1587159996
  %v2_1f3e2 = inttoptr i32 %v1_1f3e2 to i8*
  %v3_1f3e2 = load i8, i8* %v2_1f3e2, align 1
  %v5_1f3e2 = trunc i32 %v1_1f3df to i8
  %v6_1f3e2 = load i1, i1* @cf, align 1
  %v7_1f3e2 = zext i1 %v6_1f3e2 to i8
  %v8_1f3e2 = add i8 %v3_1f3e2, %v5_1f3e2
  %v9_1f3e2 = add i8 %v7_1f3e2, %v8_1f3e2
  %v27_1f3e2 = icmp ule i8 %v9_1f3e2, %v3_1f3e2
  %v28_1f3e2 = icmp ult i8 %v8_1f3e2, %v3_1f3e2
  %v29_1f3e2 = select i1 %v6_1f3e2, i1 %v27_1f3e2, i1 %v28_1f3e2
  store i1 %v29_1f3e2, i1* %cf.global-to-local, align 1
  store i8 %v9_1f3e2, i8* %v2_1f3e2, align 1
  %v0_1f3e8 = load i32, i32* @eax, align 8
  %v1_1f3e8 = trunc i32 %v0_1f3e8 to i8
  %v2_1f3e8 = load i1, i1* %cf.global-to-local, align 1
  %v3_1f3e8 = zext i1 %v2_1f3e8 to i8
  %v4_1f3e8 = add i8 %v3_1f3e8, %v1_1f3e8
  %v19_1f3e8 = icmp ule i8 %v4_1f3e8, %v1_1f3e8
  %v21_1f3e8 = icmp eq i1 %v2_1f3e8, %v19_1f3e8
  store i1 %v21_1f3e8, i1* %cf.global-to-local, align 1
  %v22_1f3e8 = zext i8 %v4_1f3e8 to i32
  %v24_1f3e8 = and i32 %v0_1f3e8, -256
  %v25_1f3e8 = or i32 %v22_1f3e8, %v24_1f3e8
  store i32 %v25_1f3e8, i32* %eax.global-to-local, align 8
  %v1_1f3ea = inttoptr i32 %v25_1f3e8 to i8*
  %v2_1f3ea = load i8, i8* %v1_1f3ea, align 1
  %v5_1f3ea = add i8 %v2_1f3ea, %v4_1f3e8
  store i8 %v5_1f3ea, i8* %v1_1f3ea, align 1
  %v0_1f3ec = load i32, i32* %eax.global-to-local, align 8
  %v1_1f3ec = load i32, i32* @ebp, align 4
  %v2_1f3ec = add i32 %v1_1f3ec, -12
  %v3_1f3ec = inttoptr i32 %v2_1f3ec to i32*
  store i32 %v0_1f3ec, i32* %v3_1f3ec, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1f3f1 = load i32, i32* @ebp, align 4
  %v1_1f3f1 = add i32 %v0_1f3f1, -32
  %v2_1f3f1 = inttoptr i32 %v1_1f3f1 to i32*
  %v3_1f3f1 = load i32, i32* %v2_1f3f1, align 4
  %v1_1f3f4 = add i32 %v0_1f3f1, -28
  %v2_1f3f4 = inttoptr i32 %v1_1f3f4 to i32*
  %v3_1f3f4 = load i32, i32* %v2_1f3f4, align 4
  store i32 %v3_1f3f4, i32* %eax.global-to-local, align 8
  %v1_1f3f7 = add i32 %v0_1f3f1, -36
  %v2_1f3f7 = inttoptr i32 %v1_1f3f7 to i32*
  %v3_1f3f7 = load i32, i32* %v2_1f3f7, align 4
  store i32 %v3_1f3f7, i32* @ecx, align 4
  %v3_1f405 = call i32 @unknown_4294c(i32 %v3_1f3f4, i32 %v3_1f3f1, i32 %v3_1f3f7)
  store i32 %v3_1f405, i32* %eax.global-to-local, align 8
  %v0_1f40d = load i32, i32* @ebp, align 4
  %v1_1f40d = add i32 %v0_1f40d, -28
  %v2_1f40d = inttoptr i32 %v1_1f40d to i32*
  %v3_1f40d = load i32, i32* %v2_1f40d, align 4
  store i32 %v3_1f40d, i32* @eax, align 8
  %v1_1f410 = add i32 %v0_1f40d, -12
  %v2_1f410 = inttoptr i32 %v1_1f410 to i32*
  %v3_1f410 = load i32, i32* %v2_1f410, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_1f413 = icmp eq i32 %v3_1f410, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f413, label %bb, label %dec_label_pc_1f41c

bb:                                               ; preds = %dec_label_pc_1f3de
  %v1_1f41a = call i32 @function_1f421()
  store i32 %v1_1f41a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_1f41c

dec_label_pc_1f41c:                               ; preds = %bb, %dec_label_pc_1f3de
  %v3_1f41a = phi i32 [ %v1_1f41a, %bb ], [ %v3_1f40d, %dec_label_pc_1f3de ]
  ret i32 %v3_1f41a

; uselistorder directives
  uselistorder i8 %v4_1f3e8, { 0, 2, 1 }
  uselistorder i8 %v1_1f3e8, { 1, 0 }
  uselistorder i8 %v9_1f3e2, { 1, 0 }
  uselistorder i8 %v8_1f3e2, { 1, 0 }
  uselistorder i8 %v3_1f3e2, { 1, 2, 0 }
}

define i32 @function_1f421() local_unnamed_addr {
dec_label_pc_1f421:
  %v0_1f422 = load i32, i32* @eax, align 8
  ret i32 %v0_1f422
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv() local_unnamed_addr {
dec_label_pc_1f426:
  %eax.global-to-local = alloca i32, align 4
  %v17_1f429 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_1f429
}

define i32 @function_1f42e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f42e:
  %v0_1f42e = load i32, i32* @ecx, align 4
  %v1_1f42e = add i32 %v0_1f42e, 1166795845
  %v2_1f42e = inttoptr i32 %v1_1f42e to i8*
  %v3_1f42e = load i8, i8* %v2_1f42e, align 1
  %v5_1f42e = trunc i32 %v0_1f42e to i8
  %v6_1f42e = or i8 %v3_1f42e, %v5_1f42e
  store i8 %v6_1f42e, i8* %v2_1f42e, align 1
  %v0_1f434 = load i32, i32* @eax, align 8
  %v2_1f434 = or i32 %v0_1f434, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_1f434, i32* @eax, align 8
  %v0_1f436 = load i32, i32* @ebp, align 4
  %v1_1f436 = add i32 %v0_1f436, 1
  %v9_1f436 = icmp eq i32 %v1_1f436, 0
  store i32 %v1_1f436, i32* @ebp, align 4
  %v0_1f437 = load i32, i32* @ecx, align 4
  %v1_1f437 = add i32 %v0_1f437, -1
  store i32 %v1_1f437, i32* @ecx, align 4
  %v2_1f437 = icmp eq i32 %v1_1f437, 0
  %v4_1f437 = or i1 %v9_1f436, %v2_1f437
  br i1 %v4_1f437, label %dec_label_pc_1f439, label %bb

bb:                                               ; preds = %dec_label_pc_1f42e
  %v6_1f437 = call i32 @function_1f49e()
  %v1_1f43e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1f439

dec_label_pc_1f439:                               ; preds = %dec_label_pc_1f42e, %bb
  %v1_1f43e = phi i32 [ %v1_1f436, %dec_label_pc_1f42e ], [ %v1_1f43e.pre, %bb ]
  %v2_1f43e = add i32 %v1_1f43e, -12
  %v3_1f43e = inttoptr i32 %v2_1f43e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1f43e, align 4
  %v0_1f443 = load i32, i32* @ebp, align 4
  %v1_1f443 = add i32 %v0_1f443, -32
  %v2_1f443 = inttoptr i32 %v1_1f443 to i32*
  %v3_1f443 = load i32, i32* %v2_1f443, align 4
  %v1_1f446 = add i32 %v3_1f443, 12
  %v2_1f446 = inttoptr i32 %v1_1f446 to i32*
  %v3_1f446 = load i32, i32* %v2_1f446, align 4
  %v1_1f44d = add i32 %v0_1f443, -28
  %v2_1f44d = inttoptr i32 %v1_1f44d to i32*
  %v3_1f44d = load i32, i32* %v2_1f44d, align 4
  %v2_1f453 = call i32 @unknown_425ce(i32 %v3_1f44d, i32 %v3_1f446)
  %v0_1f458 = load i32, i32* @ebp, align 4
  %v1_1f458 = add i32 %v0_1f458, -28
  %v2_1f458 = inttoptr i32 %v1_1f458 to i32*
  %v3_1f458 = load i32, i32* %v2_1f458, align 4
  %v1_1f45b = add i32 %v0_1f458, -12
  %v2_1f45b = inttoptr i32 %v1_1f45b to i32*
  %v3_1f45b = load i32, i32* %v2_1f45b, align 4
  %v3_1f45e = xor i32 %v3_1f45b, ptrtoint ([3 x i8]* @3 to i32)
  store i32 %v3_1f45e, i32* @edx, align 8
  %v1_1f46c = inttoptr i32 %v0_1f458 to i32*
  %v2_1f46c = load i32, i32* %v1_1f46c, align 4
  store i32 %v2_1f46c, i32* @ebp, align 4
  ret i32 %v3_1f458

; uselistorder directives
  uselistorder i32 %v1_1f437, { 1, 0 }
  uselistorder label %dec_label_pc_1f439, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11lower_boundERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f470:
  ret i32 %arg2
}

define i32 @function_1f482() local_unnamed_addr {
dec_label_pc_1f482:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_1f482 = load i32, i32* @ecx, align 4
  %v1_1f482 = add i32 %v0_1f482, -1
  store i32 %v1_1f482, i32* @ecx, align 4
  %v0_1f484 = load i32, i32* @ebp, align 4
  %v1_1f484 = add i32 %v0_1f484, 1
  store i32 %v1_1f484, i32* @ebp, align 4
  %v1_1f485 = add i32 %v0_1f482, -1587159996
  %v2_1f485 = inttoptr i32 %v1_1f485 to i8*
  %v3_1f485 = load i8, i8* %v2_1f485, align 1
  %v5_1f485 = trunc i32 %v1_1f482 to i8
  %v6_1f485 = load i1, i1* @cf, align 1
  %v7_1f485 = zext i1 %v6_1f485 to i8
  %v8_1f485 = add i8 %v3_1f485, %v5_1f485
  %v9_1f485 = add i8 %v7_1f485, %v8_1f485
  %v27_1f485 = icmp ule i8 %v9_1f485, %v3_1f485
  %v28_1f485 = icmp ult i8 %v8_1f485, %v3_1f485
  %v29_1f485 = select i1 %v6_1f485, i1 %v27_1f485, i1 %v28_1f485
  store i1 %v29_1f485, i1* %cf.global-to-local, align 1
  store i8 %v9_1f485, i8* %v2_1f485, align 1
  %v0_1f48b = load i32, i32* @eax, align 8
  %v1_1f48b = trunc i32 %v0_1f48b to i8
  %v2_1f48b = load i1, i1* %cf.global-to-local, align 1
  %v3_1f48b = zext i1 %v2_1f48b to i8
  %v4_1f48b = add i8 %v3_1f48b, %v1_1f48b
  %v19_1f48b = icmp ule i8 %v4_1f48b, %v1_1f48b
  %v21_1f48b = icmp eq i1 %v2_1f48b, %v19_1f48b
  store i1 %v21_1f48b, i1* %cf.global-to-local, align 1
  %v22_1f48b = zext i8 %v4_1f48b to i32
  %v24_1f48b = and i32 %v0_1f48b, -256
  %v25_1f48b = or i32 %v22_1f48b, %v24_1f48b
  store i32 %v25_1f48b, i32* %eax.global-to-local, align 8
  %v1_1f48d = inttoptr i32 %v25_1f48b to i8*
  %v2_1f48d = load i8, i8* %v1_1f48d, align 1
  %v5_1f48d = add i8 %v2_1f48d, %v4_1f48b
  store i8 %v5_1f48d, i8* %v1_1f48d, align 1
  %v0_1f48f = load i32, i32* %eax.global-to-local, align 8
  %v1_1f48f = load i32, i32* @ebp, align 4
  %v2_1f48f = add i32 %v1_1f48f, -12
  %v3_1f48f = inttoptr i32 %v2_1f48f to i32*
  store i32 %v0_1f48f, i32* %v3_1f48f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_1f494 = load i32, i32* @ebp, align 4
  %v1_1f494 = add i32 %v0_1f494, -32
  %v2_1f494 = inttoptr i32 %v1_1f494 to i32*
  %v3_1f494 = load i32, i32* %v2_1f494, align 4
  store i32 %v3_1f494, i32* %eax.global-to-local, align 8
  ret i32 %v3_1f494

; uselistorder directives
  uselistorder i8 %v4_1f48b, { 0, 2, 1 }
  uselistorder i8 %v1_1f48b, { 1, 0 }
  uselistorder i8 %v9_1f485, { 1, 0 }
  uselistorder i8 %v8_1f485, { 1, 0 }
  uselistorder i8 %v3_1f485, { 1, 2, 0 }
}

define i32 @function_1f49e() local_unnamed_addr {
dec_label_pc_1f49e:
  %v0_1f49e = load i32, i32* @ecx, align 4
  %v1_1f49e = add i32 %v0_1f49e, -532313149
  %v2_1f49e = inttoptr i32 %v1_1f49e to i8*
  %v3_1f49e = load i8, i8* %v2_1f49e, align 1
  %v5_1f49e = trunc i32 %v0_1f49e to i8
  %v6_1f49e = add i8 %v3_1f49e, %v5_1f49e
  store i8 %v6_1f49e, i8* %v2_1f49e, align 1
  %v0_1f4a4 = load i32, i32* @eax, align 8
  %v1_1f4a7 = call i32 @unknown_42650(i32 %v0_1f4a4)
  %v0_1f4ac = load i32, i32* @ebp, align 4
  %v1_1f4af = add i32 %v0_1f4ac, -36
  %v2_1f4af = inttoptr i32 %v1_1f4af to i32*
  %v3_1f4af = load i32, i32* %v2_1f4af, align 4
  store i32 %v3_1f4af, i32* @ecx, align 4
  ret i32 %v1_1f4a7
}

define i32 @function_1f4bc() local_unnamed_addr {
dec_label_pc_1f4bc:
  %v0_1f4be = load i32, i32* @ebp, align 4
  %v1_1f4be = add i32 %v0_1f4be, -32
  %v2_1f4be = inttoptr i32 %v1_1f4be to i32*
  %v3_1f4be = load i32, i32* %v2_1f4be, align 4
  %v0_1f4c5 = load i32, i32* @edx, align 8
  %v2_1f4c8 = call i32 @unknown_42bf2(i32 %v0_1f4c5, i32 %v3_1f4be)
  %v0_1f4d0 = load i32, i32* @ebp, align 4
  %v1_1f4d0 = add i32 %v0_1f4d0, -28
  %v2_1f4d0 = inttoptr i32 %v1_1f4d0 to i32*
  %v3_1f4d0 = load i32, i32* %v2_1f4d0, align 4
  store i32 %v3_1f4d0, i32* @eax, align 8
  %v1_1f4d3 = add i32 %v0_1f4d0, -12
  %v2_1f4d3 = inttoptr i32 %v1_1f4d3 to i32*
  %v3_1f4d3 = load i32, i32* %v2_1f4d3, align 4
  %v4_1f4d6 = icmp eq i32 %v3_1f4d3, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f4d6, label %bb, label %dec_label_pc_1f4df

bb:                                               ; preds = %dec_label_pc_1f4bc
  %v1_1f4dd = call i32 @function_1f4e4()
  br label %dec_label_pc_1f4df

dec_label_pc_1f4df:                               ; preds = %bb, %dec_label_pc_1f4bc
  %v2_1f4dd = phi i32 [ %v1_1f4dd, %bb ], [ %v3_1f4d0, %dec_label_pc_1f4bc ]
  ret i32 %v2_1f4dd
}

define i32 @function_1f4e4() local_unnamed_addr {
dec_label_pc_1f4e4:
  %v0_1f4e8 = load i32, i32* @eax, align 8
  ret i32 %v0_1f4e8
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE6assignERKS2_() local_unnamed_addr {
dec_label_pc_1f4ec:
  %eax.global-to-local = alloca i32, align 4
  %v5_1f4ef = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_1f4ef
}

define i32 @function_1f4fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4fa:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1f4fa = load i32, i32* @ebp, align 4
  %v1_1f4fd = add i32 %v0_1f4fa, 2
  %v9_1f4fd = icmp eq i32 %v1_1f4fd, 0
  store i32 %v1_1f4fd, i32* @ebp, align 4
  %v0_1f4fe = load i32, i32* @ecx, align 4
  %v2_1f4fe = icmp eq i32 %v0_1f4fe, 1
  %v4_1f4fe = or i1 %v9_1f4fd, %v2_1f4fe
  br i1 %v4_1f4fe, label %dec_label_pc_1f500, label %dec_label_pc_1f565

dec_label_pc_1f500:                               ; preds = %dec_label_pc_1f4fa
  %v2_1f505 = add i32 %v0_1f4fa, -10
  %v3_1f505 = inttoptr i32 %v2_1f505 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1f505, align 4
  %v0_1f50a = load i32, i32* @ebp, align 4
  %v1_1f50a = add i32 %v0_1f50a, -28
  %v2_1f50a = inttoptr i32 %v1_1f50a to i32*
  %v3_1f50a = load i32, i32* %v2_1f50a, align 4
  %v1_1f510 = call i32 @unknown_42d22(i32 %v3_1f50a)
  %v4_1f515 = trunc i32 %v1_1f510 to i8
  %v5_1f515 = icmp eq i8 %v4_1f515, 0
  %v0_1f555 = load i32, i32* @ebp, align 4
  %v1_1f555 = add i32 %v0_1f555, -32
  %v2_1f555 = inttoptr i32 %v1_1f555 to i32*
  %v3_1f555 = load i32, i32* %v2_1f555, align 4
  %v1_1f55b = call i32 @unknown_42d22(i32 %v3_1f555)
  %v4_1f560 = trunc i32 %v1_1f55b to i8
  %v5_1f560 = icmp eq i8 %v4_1f560, 0
  br i1 %v5_1f515, label %dec_label_pc_1f555, label %dec_label_pc_1f519

dec_label_pc_1f519:                               ; preds = %dec_label_pc_1f500
  %v0_1f548 = load i32, i32* @ebp, align 4
  br i1 %v5_1f560, label %dec_label_pc_1f548, label %dec_label_pc_1f528

dec_label_pc_1f528:                               ; preds = %dec_label_pc_1f519
  %v1_1f528 = add i32 %v0_1f548, -32
  %v2_1f528 = inttoptr i32 %v1_1f528 to i32*
  %v3_1f528 = load i32, i32* %v2_1f528, align 4
  %v1_1f52e = call i32 @unknown_42d52(i32 %v3_1f528)
  %v0_1f533 = load i32, i32* @ebx, align 8
  %v0_1f53b = load i32, i32* @ebp, align 4
  %v1_1f53b = add i32 %v0_1f53b, -28
  %v2_1f53b = inttoptr i32 %v1_1f53b to i32*
  %v3_1f53b = load i32, i32* %v2_1f53b, align 4
  %sext = mul i32 %v0_1f533, 16777216
  %v3_1f541 = sdiv i32 %sext, 16777216
  %v4_1f541 = call i32 @unknown_42da0(i32 %v3_1f53b, i32 %v1_1f52e, i32 %v3_1f541)
  br label %dec_label_pc_1f57e

dec_label_pc_1f548:                               ; preds = %dec_label_pc_1f519
  %v1_1f548 = add i32 %v0_1f548, -28
  %v2_1f548 = inttoptr i32 %v1_1f548 to i32*
  %v3_1f548 = load i32, i32* %v2_1f548, align 4
  %v1_1f54e = call i32 @unknown_3e412(i32 %v3_1f548)
  br label %dec_label_pc_1f57e

dec_label_pc_1f555:                               ; preds = %dec_label_pc_1f500
  br i1 %v5_1f560, label %dec_label_pc_1f57e, label %dec_label_pc_1f564

dec_label_pc_1f564:                               ; preds = %dec_label_pc_1f57e, %bb, %dec_label_pc_1f555
  %merge = phi i32 [ %v1_1f55b, %dec_label_pc_1f555 ], [ %v1_1f588, %bb ], [ %v3_1f581, %dec_label_pc_1f57e ]
  ret i32 %merge

dec_label_pc_1f565:                               ; preds = %dec_label_pc_1f4fa
  %v1_1f565 = add i32 %v0_1f4fa, 3
  store i32 %v1_1f565, i32* @ebp, align 4
  %v1_1f56a = call i32 @unknown_42d52(i32 %tmp6)
  %v0_1f573 = load i32, i32* @ebp, align 4
  %v1_1f573 = add i32 %v0_1f573, -28
  %v2_1f573 = inttoptr i32 %v1_1f573 to i32*
  %v3_1f573 = load i32, i32* %v2_1f573, align 4
  %v2_1f579 = call i32 @unknown_42dea(i32 %v3_1f573, i32 %v1_1f56a)
  br label %dec_label_pc_1f57e

dec_label_pc_1f57e:                               ; preds = %dec_label_pc_1f565, %dec_label_pc_1f555, %dec_label_pc_1f548, %dec_label_pc_1f528
  %v0_1f57e = load i32, i32* @ebp, align 4
  %v1_1f57e = add i32 %v0_1f57e, -12
  %v2_1f57e = inttoptr i32 %v1_1f57e to i32*
  %v3_1f57e = load i32, i32* %v2_1f57e, align 4
  %v3_1f581 = xor i32 %v3_1f57e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f581 = icmp eq i32 %v3_1f581, 0
  store i32 %v3_1f581, i32* @eax, align 8
  br i1 %v4_1f581, label %bb, label %dec_label_pc_1f564

bb:                                               ; preds = %dec_label_pc_1f57e
  %v1_1f588 = call i32 @function_1f58f()
  br label %dec_label_pc_1f564

; uselistorder directives
  uselistorder i32 %v3_1f581, { 1, 2, 0 }
  uselistorder i32 %v0_1f548, { 1, 0 }
  uselistorder i32 %v0_1f4fa, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_42d52, { 1, 0 }
  uselistorder i32 (i32)* @unknown_42d22, { 1, 0 }
  uselistorder label %dec_label_pc_1f564, { 1, 0, 2 }
}

define i32 @function_1f58f() local_unnamed_addr {
dec_label_pc_1f58f:
  %v0_1f594 = load i32, i32* @eax, align 8
  ret i32 %v0_1f594
}

define i32 @_ZN5boost9function1IbxE9assign_toIPFbxEEEvT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f596:
  ret i32 %arg2
}

define i32 @function_1f5a6() local_unnamed_addr {
dec_label_pc_1f5a6:
  %v0_1f5a6 = load i32, i32* @ebp, align 4
  %v1_1f5a6 = add i32 %v0_1f5a6, 1
  store i32 %v1_1f5a6, i32* @ebp, align 4
  %v0_1f5a7 = load i32, i32* @ecx, align 4
  %v1_1f5a7 = add i32 %v0_1f5a7, -1
  store i32 %v1_1f5a7, i32* @ecx, align 4
  %v2_1f5ae = add i32 %v0_1f5a6, -11
  %v3_1f5ae = inttoptr i32 %v2_1f5ae to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1f5ae, align 4
  %v0_1f5b3 = load i32, i32* @ebp, align 4
  %v1_1f5b3 = add i32 %v0_1f5b3, -28
  %v2_1f5b3 = inttoptr i32 %v1_1f5b3 to i32*
  %v3_1f5b3 = load i32, i32* %v2_1f5b3, align 4
  %v1_1f5b6 = add i32 %v3_1f5b3, 4
  %v1_1f5bd = add i32 %v0_1f5b3, -32
  %v2_1f5bd = inttoptr i32 %v1_1f5bd to i32*
  %v3_1f5bd = load i32, i32* %v2_1f5bd, align 4
  %v3_1f5cb = call i32 @unknown_42fb8(i32 ptrtoint (i32* @global_var_35d28.2022 to i32), i32 %v3_1f5bd, i32 %v1_1f5b6)
  %v4_1f5d0 = trunc i32 %v3_1f5cb to i8
  %v5_1f5d0 = icmp eq i8 %v4_1f5d0, 0
  %v0_1f5e9 = load i32, i32* @ebp, align 4
  br i1 %v5_1f5d0, label %dec_label_pc_1f5e9, label %dec_label_pc_1f5d4

dec_label_pc_1f5d4:                               ; preds = %dec_label_pc_1f5a6
  %v1_1f5d4 = add i32 %v0_1f5e9, -16
  %v2_1f5d4 = inttoptr i32 %v1_1f5d4 to i32*
  store i32 ptrtoint (i32* @global_var_35d28.2022 to i32), i32* %v2_1f5d4, align 4
  %v0_1f5db = load i32, i32* @ebp, align 4
  %v1_1f5db = add i32 %v0_1f5db, -16
  %v2_1f5db = inttoptr i32 %v1_1f5db to i32*
  %v3_1f5db = load i32, i32* %v2_1f5db, align 4
  %v4_1f5db = or i32 %v3_1f5db, 1
  store i32 %v4_1f5db, i32* %v2_1f5db, align 4
  %v0_1f5df = load i32, i32* @ebp, align 4
  %v1_1f5df = add i32 %v0_1f5df, -16
  %v2_1f5df = inttoptr i32 %v1_1f5df to i32*
  %v3_1f5df = load i32, i32* %v2_1f5df, align 4
  %v1_1f5e2 = add i32 %v0_1f5df, -28
  %v2_1f5e2 = inttoptr i32 %v1_1f5e2 to i32*
  %v3_1f5e2 = load i32, i32* %v2_1f5e2, align 4
  %v2_1f5e5 = inttoptr i32 %v3_1f5e2 to i32*
  store i32 %v3_1f5df, i32* %v2_1f5e5, align 4
  br label %dec_label_pc_1f5f2

dec_label_pc_1f5e9:                               ; preds = %dec_label_pc_1f5a6
  %v1_1f5e9 = add i32 %v0_1f5e9, -28
  %v2_1f5e9 = inttoptr i32 %v1_1f5e9 to i32*
  %v3_1f5e9 = load i32, i32* %v2_1f5e9, align 4
  %v1_1f5ec = inttoptr i32 %v3_1f5e9 to i32*
  store i32 0, i32* %v1_1f5ec, align 4
  br label %dec_label_pc_1f5f2

dec_label_pc_1f5f2:                               ; preds = %dec_label_pc_1f5e9, %dec_label_pc_1f5d4
  %v0_1f5f2 = load i32, i32* @ebp, align 4
  %v1_1f5f2 = add i32 %v0_1f5f2, -12
  %v2_1f5f2 = inttoptr i32 %v1_1f5f2 to i32*
  %v3_1f5f2 = load i32, i32* %v2_1f5f2, align 4
  %v3_1f5f5 = xor i32 %v3_1f5f2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f5f5 = icmp eq i32 %v3_1f5f5, 0
  store i32 %v3_1f5f5, i32* @eax, align 8
  br i1 %v4_1f5f5, label %bb, label %dec_label_pc_1f5fe

bb:                                               ; preds = %dec_label_pc_1f5f2
  %v1_1f5fc = call i32 @function_1f603()
  br label %dec_label_pc_1f5fe

dec_label_pc_1f5fe:                               ; preds = %bb, %dec_label_pc_1f5f2
  %v2_1f5fc = phi i32 [ %v1_1f5fc, %bb ], [ %v3_1f5f5, %dec_label_pc_1f5f2 ]
  ret i32 %v2_1f5fc

; uselistorder directives
  uselistorder i32 %v0_1f5e9, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_35d28.2022 to i32), { 1, 0 }
}

define i32 @function_1f603() local_unnamed_addr {
dec_label_pc_1f603:
  %v0_1f604 = load i32, i32* @eax, align 8
  ret i32 %v0_1f604
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor25m_visit_reference_wrapperIFbxEEEvRKT_RKN4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_1f606:
  %eax.global-to-local = alloca i32, align 4
  %v17_1f609 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_1f609
}

define i32 @function_1f60d() local_unnamed_addr {
dec_label_pc_1f60d:
  %eax.global-to-local = alloca i32, align 4
  %v15_1f60d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_1f60d
}

define i32 @function_1f626(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f626:
  %v0_1f629 = load i32, i32* @ebp, align 4
  %v1_1f629 = add i32 %v0_1f629, -13
  %v1_1f630 = add i32 %v0_1f629, -32
  %v2_1f630 = inttoptr i32 %v1_1f630 to i32*
  %v3_1f630 = load i32, i32* %v2_1f630, align 4
  %v1_1f637 = add i32 %v0_1f629, -28
  %v2_1f637 = inttoptr i32 %v1_1f637 to i32*
  %v3_1f637 = load i32, i32* %v2_1f637, align 4
  %v3_1f63d = call i32 @unknown_4307c(i32 %v3_1f637, i32 %v3_1f630, i32 %v1_1f629)
  %v0_1f642 = load i32, i32* @ebp, align 4
  %v1_1f642 = add i32 %v0_1f642, -12
  %v2_1f642 = inttoptr i32 %v1_1f642 to i32*
  %v3_1f642 = load i32, i32* %v2_1f642, align 4
  %v3_1f645 = xor i32 %v3_1f642, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f645 = icmp eq i32 %v3_1f645, 0
  store i32 %v3_1f645, i32* @eax, align 8
  br i1 %v4_1f645, label %bb, label %dec_label_pc_1f64e

bb:                                               ; preds = %dec_label_pc_1f626
  %v1_1f64c = call i32 @function_1f653()
  br label %dec_label_pc_1f64e

dec_label_pc_1f64e:                               ; preds = %bb, %dec_label_pc_1f626
  %v2_1f64c = phi i32 [ %v1_1f64c, %bb ], [ %v3_1f645, %dec_label_pc_1f626 ]
  ret i32 %v2_1f64c
}

define i32 @function_1f653() local_unnamed_addr {
dec_label_pc_1f653:
  %v0_1f654 = load i32, i32* @eax, align 8
  ret i32 %v0_1f654
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f656:
  %v1_1f670 = add i32 %arg1, 4
  store i32 %v1_1f670, i32* @eax, align 8
  %v1_1f676 = call i32 @function_21958(i32 %v1_1f670)
  store i32 %v1_1f676, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f687

bb:                                               ; preds = %dec_label_pc_1f656
  %v1_1f685 = call i32 @function_1f68c()
  br label %dec_label_pc_1f687

dec_label_pc_1f687:                               ; preds = %bb, %dec_label_pc_1f656
  %v2_1f685 = phi i32 [ %v1_1f685, %bb ], [ %v1_1f676, %dec_label_pc_1f656 ]
  ret i32 %v2_1f685
}

define i32 @function_1f68c() local_unnamed_addr {
dec_label_pc_1f68c:
  %v0_1f68d = load i32, i32* @eax, align 8
  ret i32 %v0_1f68d
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f68e:
  %v2_1f6a8 = load i32, i32* %arg1, align 4
  %v1_1f6aa = icmp eq i32 %v2_1f6a8, 0
  %v1_1f6ac = icmp eq i1 %v1_1f6aa, false
  br i1 %v1_1f6ac, label %bb, label %dec_label_pc_1f6ae

bb:                                               ; preds = %dec_label_pc_1f68e
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_1f6ac = call i32 @function_1f6d2(i32 %tmp105)
  br label %dec_label_pc_1f6ae

dec_label_pc_1f6ae:                               ; preds = %bb, %dec_label_pc_1f68e
  %v3_1f6c6 = phi i32 [ %v3_1f6ac, %bb ], [ %v2_1f6a8, %dec_label_pc_1f68e ]
  ret i32 %v3_1f6c6

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f6d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6d2:
  %v0_1f6d2 = load i32, i32* @ebp, align 4
  %v1_1f6d2 = add i32 %v0_1f6d2, -28
  %v2_1f6d2 = inttoptr i32 %v1_1f6d2 to i32*
  %v3_1f6d2 = load i32, i32* %v2_1f6d2, align 4
  %v1_1f6d5 = inttoptr i32 %v3_1f6d2 to i32*
  %v2_1f6d5 = load i32, i32* %v1_1f6d5, align 4
  store i32 %v2_1f6d5, i32* @eax, align 8
  %v1_1f6d7 = add i32 %v0_1f6d2, -12
  %v2_1f6d7 = inttoptr i32 %v1_1f6d7 to i32*
  %v3_1f6d7 = load i32, i32* %v2_1f6d7, align 4
  %v4_1f6da = icmp eq i32 %v3_1f6d7, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1f6da, label %bb, label %dec_label_pc_1f6e3

bb:                                               ; preds = %dec_label_pc_1f6d2
  %v1_1f6e1 = call i32 @function_1f6e8()
  br label %dec_label_pc_1f6e3

dec_label_pc_1f6e3:                               ; preds = %bb, %dec_label_pc_1f6d2
  %v2_1f6e1 = phi i32 [ %v1_1f6e1, %bb ], [ %v2_1f6d5, %dec_label_pc_1f6d2 ]
  ret i32 %v2_1f6e1
}

define i32 @function_1f6e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6e6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f6e8() local_unnamed_addr {
dec_label_pc_1f6e8:
  %v0_1f6e9 = load i32, i32* @eax, align 8
  ret i32 %v0_1f6e9
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6ea:
  %v1_1f704 = add i32 %arg1, 4
  store i32 %v1_1f704, i32* @eax, align 8
  %v1_1f70a = call i32 @function_218ca(i32 %v1_1f704)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f71b

bb:                                               ; preds = %dec_label_pc_1f6ea
  %v1_1f719 = call i32 @function_1f720()
  br label %dec_label_pc_1f71b

dec_label_pc_1f71b:                               ; preds = %bb, %dec_label_pc_1f6ea
  %v2_1f719 = phi i32 [ %v1_1f719, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1f6ea ]
  ret i32 %v2_1f719
}

define i32 @function_1f720() local_unnamed_addr {
dec_label_pc_1f720:
  %v0_1f721 = load i32, i32* @eax, align 8
  ret i32 %v0_1f721
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE16invocation_stateC1ERKSH_RKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxS9_EESF_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f722:
  ret i32 0
}

define i32 @function_1f752() local_unnamed_addr {
dec_label_pc_1f752:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f752 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f752 = add i32 %v0_1f752, -599422013
  %v2_1f752 = inttoptr i32 %v1_1f752 to i32*
  %v3_1f752 = load i32, i32* %v2_1f752, align 4
  %v4_1f752 = add i32 %v3_1f752, -1
  store i32 %v4_1f752, i32* %v2_1f752, align 4
  %v0_1f758 = load i32, i32* %eax.global-to-local, align 8
  %v0_1f75c = load i32, i32* %ebx.global-to-local, align 8
  %v2_1f75f = call i32 @unknown_43262(i32 %v0_1f75c, i32 %v0_1f758)
  store i32 %v2_1f75f, i32* %eax.global-to-local, align 8
  %v0_1f764 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f764 = add i32 %v0_1f764, -28
  %v2_1f764 = inttoptr i32 %v1_1f764 to i32*
  %v3_1f764 = load i32, i32* %v2_1f764, align 4
  store i32 %v3_1f764, i32* %eax.global-to-local, align 8
  %v0_1f767 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1f76e = call i32 @unknown_43468(i32 %v3_1f764, i32 %v0_1f767)
  store i32 %v2_1f76e, i32* %eax.global-to-local, align 8
  %v0_1f773 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f773 = add i32 %v0_1f773, -32
  %v2_1f773 = inttoptr i32 %v1_1f773 to i32*
  %v3_1f773 = load i32, i32* %v2_1f773, align 4
  store i32 %v3_1f773, i32* %eax.global-to-local, align 8
  %v1_1f776 = add i32 %v3_1f773, 8
  %v1_1f779 = add i32 %v0_1f773, -28
  %v2_1f779 = inttoptr i32 %v1_1f779 to i32*
  %v3_1f779 = load i32, i32* %v2_1f779, align 4
  %v1_1f77c = add i32 %v3_1f779, 8
  store i32 %v1_1f77c, i32* %eax.global-to-local, align 8
  %v2_1f786 = call i32 @unknown_3df10(i32 %v1_1f77c, i32 %v1_1f776)
  store i32 %v2_1f786, i32* %eax.global-to-local, align 8
  %v0_1f78b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f78b = add i32 %v0_1f78b, -12
  %v2_1f78b = inttoptr i32 %v1_1f78b to i32*
  %v3_1f78b = load i32, i32* %v2_1f78b, align 4
  %v3_1f78e = xor i32 %v3_1f78b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f78e = icmp eq i32 %v3_1f78e, 0
  store i32 %v3_1f78e, i32* @eax, align 8
  br i1 %v4_1f78e, label %bb, label %dec_label_pc_1f797

bb:                                               ; preds = %dec_label_pc_1f752
  %v1_1f795 = call i32 @function_1f7b2()
  store i32 %v1_1f795, i32* @eax, align 8
  br label %dec_label_pc_1f797

dec_label_pc_1f797:                               ; preds = %bb, %dec_label_pc_1f752
  %v0_1f797 = call i32 @function_1f7ad()
  store i32 %v0_1f797, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f797
}

define i32 @function_1f7a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7a6:
  %v0_1f7a6 = load i32, i32* @eax, align 8
  %v2_1f7a6 = add i32 %v0_1f7a6, 36
  %v16_1f7a6 = and i32 %v2_1f7a6, 255
  %v18_1f7a6 = and i32 %v0_1f7a6, -256
  %v19_1f7a6 = or i32 %v16_1f7a6, %v18_1f7a6
  ret i32 %v19_1f7a6

; uselistorder directives
  uselistorder i32 %v0_1f7a6, { 1, 0 }
}

define i32 @function_1f7ad() local_unnamed_addr {
dec_label_pc_1f7ad:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f7b2() local_unnamed_addr {
dec_label_pc_1f7b2:
  %v5_1f7b5 = load i32, i32* @eax, align 8
  ret i32 %v5_1f7b5
}

define i32 @function_1f7b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7b6:
  %v0_1f7b8 = load i32, i32* @eax, align 8
  ret i32 %v0_1f7b8
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEE5resetISI_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f7ba:
  %v10_1f7d8 = icmp eq i32 %arg2, 0
  br i1 %v10_1f7d8, label %bb, label %dec_label_pc_1f7de

bb:                                               ; preds = %dec_label_pc_1f7ba
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v3_1f7dc = call i32 @function_1f80c(i32 0, i32 %tmp107)
  br label %dec_label_pc_1f7de

dec_label_pc_1f7de:                               ; preds = %bb, %dec_label_pc_1f7ba
  %v2_1f7e1 = load i32, i32* %arg1, align 4
  %v15_1f7e3 = icmp eq i32 %v2_1f7e1, %arg2
  %v1_1f7e6 = icmp eq i1 %v15_1f7e3, false
  br i1 %v1_1f7e6, label %bb112, label %dec_label_pc_1f7e8

bb112:                                            ; preds = %dec_label_pc_1f7de
  %v4_1f7e6 = call i32 @function_1f80c(i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_1f7e8

dec_label_pc_1f7e8:                               ; preds = %bb112, %dec_label_pc_1f7de
  %v3_1f800 = phi i32 [ %v4_1f7e6, %bb112 ], [ %v2_1f7e1, %dec_label_pc_1f7de ]
  ret i32 %v3_1f800

; uselistorder directives
  uselistorder i32 %v2_1f7e1, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1f80c, { 1, 0 }
}

define i32 @function_1f80c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f80c:
  %v0_1f80c = load i32, i32* @ebp, align 4
  %v1_1f80c = add i32 %v0_1f80c, -32
  %v2_1f80c = inttoptr i32 %v1_1f80c to i32*
  %v3_1f80c = load i32, i32* %v2_1f80c, align 4
  %v1_1f813 = add i32 %v0_1f80c, -20
  %v2_1f819 = call i32 @unknown_43566(i32 %v1_1f813, i32 %v3_1f80c)
  %v0_1f81e = load i32, i32* @ebp, align 4
  %v1_1f81e = add i32 %v0_1f81e, -28
  %v2_1f81e = inttoptr i32 %v1_1f81e to i32*
  %v3_1f81e = load i32, i32* %v2_1f81e, align 4
  %v1_1f825 = add i32 %v0_1f81e, -20
  %v2_1f82b = call i32 @unknown_435cc(i32 %v1_1f825, i32 %v3_1f81e)
  %v0_1f830 = load i32, i32* @ebp, align 4
  %v1_1f830 = add i32 %v0_1f830, -20
  %v1_1f836 = call i32 @unknown_3f026(i32 %v1_1f830)
  %v0_1f83b = load i32, i32* @ebp, align 4
  %v1_1f83b = add i32 %v0_1f83b, -12
  %v2_1f83b = inttoptr i32 %v1_1f83b to i32*
  %v3_1f83b = load i32, i32* %v2_1f83b, align 4
  %v3_1f83e = xor i32 %v3_1f83b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1f83e = icmp eq i32 %v3_1f83e, 0
  store i32 %v3_1f83e, i32* @eax, align 8
  br i1 %v4_1f83e, label %bb, label %dec_label_pc_1f847

bb:                                               ; preds = %dec_label_pc_1f80c
  %v1_1f845 = call i32 @function_1f865()
  store i32 %v1_1f845, i32* @eax, align 8
  br label %dec_label_pc_1f847

dec_label_pc_1f847:                               ; preds = %bb, %dec_label_pc_1f80c
  %v0_1f847 = call i32 @function_1f860()
  ret i32 %v0_1f847
}

define i32 @function_1f84a() local_unnamed_addr {
dec_label_pc_1f84a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f84a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1f84a
}

define i32 @function_1f860() local_unnamed_addr {
dec_label_pc_1f860:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f865() local_unnamed_addr {
dec_label_pc_1f865:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1f866(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f866:
  %v0_1f86a = load i32, i32* @eax, align 8
  ret i32 %v0_1f86a
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f86c:
  %v1_1f886 = add i32 %arg1, 4
  store i32 %v1_1f886, i32* @eax, align 8
  %v1_1f88c = call i32 @function_21a4c(i32 %v1_1f886)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1f89d

bb:                                               ; preds = %dec_label_pc_1f86c
  %v1_1f89b = call i32 @function_1f8a2()
  br label %dec_label_pc_1f89d

dec_label_pc_1f89d:                               ; preds = %bb, %dec_label_pc_1f86c
  %v2_1f89b = phi i32 [ %v1_1f89b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1f86c ]
  ret i32 %v2_1f89b
}

define i32 @function_1f8a2() local_unnamed_addr {
dec_label_pc_1f8a2:
  %v0_1f8a3 = load i32, i32* @eax, align 8
  ret i32 %v0_1f8a3
}

define i32 @_ZNK5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxS9_EESF_EEEEEj(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1f8a4:
  ret i32 %arg1
}

define i32 @function_1f8d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f8d8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f8d8 = load i32, i32* @eax, align 8
  %v2_1f8d8 = mul i32 %v0_1f8d8, 8
  %v3_1f8d8 = add i32 %v0_1f8d8, 1153901685
  %v4_1f8d8 = add i32 %v3_1f8d8, %v2_1f8d8
  %v5_1f8d8 = inttoptr i32 %v4_1f8d8 to i8*
  %v6_1f8d8 = load i8, i8* %v5_1f8d8, align 1
  %v8_1f8d8 = trunc i32 %v0_1f8d8 to i8
  %v9_1f8d8 = add i8 %v6_1f8d8, %v8_1f8d8
  store i8 %v9_1f8d8, i8* %v5_1f8d8, align 1
  %v0_1f8df = load i32, i32* @eax, align 8
  %v3_1f8e1 = load double, double* bitcast (i32* @ebx to double*), align 8
  %tmp9 = bitcast double %v3_1f8e1 to i64
  %tmp10 = trunc i64 %tmp9 to i32
  %v2_1f8df = mul i32 %v0_1f8df, 256
  %v5_1f8e43 = and i32 %v2_1f8df, 3072
  %v1_1f8e44 = add i32 %tmp10, %v5_1f8e43
  %v22_1f8e4 = and i32 %v1_1f8e44, 65280
  %v23_1f8e4 = and i32 %tmp10, -65281
  %v24_1f8e4 = or i32 %v22_1f8e4, %v23_1f8e4
  store i32 %v24_1f8e4, i32* %ebx.global-to-local, align 8
  %v11_1f8e7 = and i32 %v0_1f8df, -248
  store i32 %v11_1f8e7, i32* %eax.global-to-local, align 8
  %v1_1f8ea = inttoptr i32 %v11_1f8e7 to i32*
  %v2_1f8ea = load i32, i32* %v1_1f8ea, align 8
  %v4_1f8ea = add i32 %v2_1f8ea, %v11_1f8e7
  store i32 %v4_1f8ea, i32* %v1_1f8ea, align 8
  %v0_1f8ec = load i32, i32* %ebx.global-to-local, align 8
  %v3_1f8ec = load i32, i32* %eax.global-to-local, align 8
  %v4_1f8ec = trunc i32 %v3_1f8ec to i8
  %v5_1f8ec5 = mul i32 %v3_1f8ec, 256
  %v1_1f8ec6 = add i32 %v5_1f8ec5, %v0_1f8ec
  %v22_1f8ec = and i32 %v1_1f8ec6, 65280
  %v23_1f8ec = and i32 %v0_1f8ec, -65281
  %v24_1f8ec = or i32 %v22_1f8ec, %v23_1f8ec
  store i32 %v24_1f8ec, i32* %ebx.global-to-local, align 8
  %v2_1f8ef = and i8 %v4_1f8ec, 4
  %v3_1f8ef = icmp eq i8 %v2_1f8ef, 0
  %v8_1f8ef = zext i8 %v2_1f8ef to i32
  %v10_1f8ef = and i32 %v3_1f8ec, -256
  %v11_1f8ef = or i32 %v8_1f8ef, %v10_1f8ef
  store i32 %v11_1f8ef, i32* @eax, align 8
  br i1 %v3_1f8ef, label %bb, label %dec_label_pc_1f8f3

bb:                                               ; preds = %dec_label_pc_1f8d8
  %v1_1f8f1 = call i32 @function_1f91a()
  store i32 %v1_1f8f1, i32* @eax, align 8
  br label %dec_label_pc_1f8f3

dec_label_pc_1f8f3:                               ; preds = %bb, %dec_label_pc_1f8d8
  %v20_1f8f3 = phi i32 [ %v1_1f8f1, %bb ], [ %v11_1f8ef, %dec_label_pc_1f8d8 ]
  %v1_1f8f3 = inttoptr i32 %v20_1f8f3 to i8*
  %v2_1f8f3 = load i8, i8* %v1_1f8f3, align 1
  %v4_1f8f3 = trunc i32 %v20_1f8f3 to i8
  %v5_1f8f3 = add i8 %v2_1f8f3, %v4_1f8f3
  store i8 %v5_1f8f3, i8* %v1_1f8f3, align 1
  %v3_1f8f5 = load i32, i32* @eax, align 8
  ret i32 %v3_1f8f5

; uselistorder directives
  uselistorder i32 %v20_1f8f3, { 1, 0 }
  uselistorder i32 %v3_1f8ec, { 1, 0, 2 }
  uselistorder i32 %v0_1f8ec, { 1, 0 }
  uselistorder i32 %v11_1f8e7, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %v0_1f8df, { 1, 0 }
  uselistorder i32 %v0_1f8d8, { 0, 2, 1 }
}

define i32 @function_1f91a() local_unnamed_addr {
dec_label_pc_1f91a:
  %v2_1f91c = load double, double* bitcast (i32* @eax to double*), align 8
  %tmp = bitcast double %v2_1f91c to i64
  %tmp1 = trunc i64 %tmp to i8
  %tmp2 = trunc i64 %tmp to i32
  %v5_1f91e = mul i8 %tmp1, 2
  %v21_1f91e = inttoptr i32 %tmp2 to i8*
  store i8 %v5_1f91e, i8* %v21_1f91e, align 1
  %v22_1f91e = load i32, i32* @eax, align 8
  ret i32 %v22_1f91e
}

define i32 @function_1f920() local_unnamed_addr {
dec_label_pc_1f920:
  %v0_1f920 = load i32, i32* @ebp, align 4
  %v1_1f920 = add i32 %v0_1f920, -32
  %v1_1f926 = call i32 @unknown_437ce(i32 %v1_1f920)
  %v1_1f92e = call i32 @unknown_43800(i32 %v1_1f926)
  %v0_1f937 = load i32, i32* @ebp, align 4
  %v1_1f937 = add i32 %v0_1f937, -24
  %v2_1f93d = call i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_beginEv(i32 %v1_1f937, i32 %v1_1f92e)
  %v0_1f942 = load i32, i32* @ebp, align 4
  %v1_1f942 = add i32 %v0_1f942, -48
  %v2_1f942 = inttoptr i32 %v1_1f942 to i8*
  %v3_1f942 = load i8, i8* %v2_1f942, align 1
  store i1 false, i1* @cf, align 1
  %v10_1f942 = icmp eq i8 %v3_1f942, 0
  br i1 %v10_1f942, label %dec_label_pc_1f963, label %dec_label_pc_1f948

dec_label_pc_1f948:                               ; preds = %dec_label_pc_1f920
  %v1_1f948 = add i32 %v0_1f942, -32
  %v1_1f94e = call i32 @unknown_437ce(i32 %v1_1f948)
  %v1_1f956 = call i32 @unknown_377de(i32 %v1_1f94e)
  %v1_1f95e = call i32 @unknown_4385c(i32 %v1_1f956)
  %v0_1f963.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1f963

dec_label_pc_1f963:                               ; preds = %dec_label_pc_1f948, %dec_label_pc_1f920
  %v0_1f963 = phi i32 [ %v0_1f963.pre, %dec_label_pc_1f948 ], [ %v0_1f942, %dec_label_pc_1f920 ]
  %v1_1f963 = add i32 %v0_1f963, -32
  %v1_1f969 = call i32 @unknown_437ce(i32 %v1_1f963)
  %v1_1f971 = call i32 @unknown_377de(i32 %v1_1f969)
  store i32 %v1_1f971, i32* @eax, align 8
  %v1_1f979 = call i32 @function_2e77c(i32 %v1_1f971)
  %v1_1f97e = trunc i32 %v1_1f979 to i8
  %v2_1f97e = load i32, i32* @ebp, align 4
  %v3_1f97e = add i32 %v2_1f97e, -13
  %v4_1f97e = inttoptr i32 %v3_1f97e to i8*
  store i8 %v1_1f97e, i8* %v4_1f97e, align 1
  %v0_1f981 = load i32, i32* @ebp, align 4
  %v1_1f981 = add i32 %v0_1f981, -24
  store i32 %v1_1f981, i32* @eax, align 8
  %v1_1f987 = call i32 @function_30486(i32 %v1_1f981)
  %v0_1f98c = load i32, i32* @ebp, align 4
  %v1_1f98c = add i32 %v0_1f98c, -13
  %v2_1f98c = inttoptr i32 %v1_1f98c to i8*
  %v3_1f98c = load i8, i8* %v2_1f98c, align 1
  %v5_1f993 = icmp eq i8 %v3_1f98c, 1
  %v1_1f9ee = add i32 %v0_1f98c, -32
  br i1 %v5_1f993, label %dec_label_pc_1f9ee, label %dec_label_pc_1f997

dec_label_pc_1f997:                               ; preds = %dec_label_pc_1f963
  %v1_1f99d = call i32 @unknown_437ce(i32 %v1_1f9ee)
  %v1_1f9a5 = call i32 @unknown_377de(i32 %v1_1f99d)
  %v1_1f9ad = call i32 @unknown_438a8(i32 %v1_1f9a5)
  store i32 %v1_1f9ad, i32* @ebx, align 8
  %v0_1f9b4 = load i32, i32* @ebp, align 4
  %v1_1f9b4 = add i32 %v0_1f9b4, -44
  %v2_1f9b4 = inttoptr i32 %v1_1f9b4 to i32*
  %v3_1f9b4 = load i32, i32* %v2_1f9b4, align 4
  %v1_1f9ba = call i32 @unknown_375ec(i32 %v3_1f9b4)
  %v1_1f9c2 = call i32 @unknown_37648(i32 %v1_1f9ba)
  %v0_1f9c9 = load i32, i32* @ebp, align 4
  %v1_1f9c9 = add i32 %v0_1f9c9, -60
  %v1_1f9cc = add i32 %v0_1f9c9, -32
  store i32 %v1_1f9cc, i32* @ecx, align 4
  %v0_1f9d3 = load i32, i32* @ebx, align 8
  %v4_1f9de = call i32 @unknown_438d8(i32 %v1_1f9c9, i32 %v1_1f9c2, i32 %v0_1f9d3, i32 %v1_1f9cc)
  %v0_1f9e6 = load i32, i32* @ebp, align 4
  %v1_1f9e6 = add i32 %v0_1f9e6, -60
  %v2_1f9e6 = inttoptr i32 %v1_1f9e6 to i32*
  %v3_1f9e6 = load i32, i32* %v2_1f9e6, align 4
  %v2_1f9e9 = add i32 %v0_1f9e6, -32
  %v3_1f9e9 = inttoptr i32 %v2_1f9e9 to i32*
  store i32 %v3_1f9e6, i32* %v3_1f9e9, align 4
  br label %dec_label_pc_1f9f9

dec_label_pc_1f9ee:                               ; preds = %dec_label_pc_1f963
  %v1_1f9f4 = call i32 @unknown_43ad8(i32 %v1_1f9ee)
  br label %dec_label_pc_1f9f9

dec_label_pc_1f9f9:                               ; preds = %dec_label_pc_1f9ee, %dec_label_pc_1f997
  %v0_1f9f9 = load i32, i32* @ebp, align 4
  %v1_1f9f9 = add i32 %v0_1f9f9, -20
  %v2_1f9f9 = inttoptr i32 %v1_1f9f9 to i32*
  %v3_1f9f9 = load i32, i32* %v2_1f9f9, align 4
  %v4_1f9f9 = add i32 %v3_1f9f9, 1
  store i32 %v4_1f9f9, i32* %v2_1f9f9, align 4
  %v0_1f9fd = load i32, i32* @ebp, align 4
  %v1_1f9fd = add i32 %v0_1f9fd, -44
  %v2_1f9fd = inttoptr i32 %v1_1f9fd to i32*
  %v3_1f9fd = load i32, i32* %v2_1f9fd, align 4
  %v1_1fa03 = call i32 @unknown_375ec(i32 %v3_1f9fd)
  %v1_1fa0b = call i32 @unknown_37648(i32 %v1_1fa03)
  %v0_1fa12 = load i32, i32* @ebp, align 4
  %v1_1fa12 = add i32 %v0_1fa12, -28
  %v2_1fa1c = call i32 @unknown_43744(i32 %v1_1fa12, i32 %v1_1fa0b)
  %v0_1fa24 = load i32, i32* @ebp, align 4
  %v1_1fa24 = add i32 %v0_1fa24, -28
  ret i32 %v1_1fa24

; uselistorder directives
  uselistorder i32 %v1_1f9ee, { 1, 0 }
  uselistorder i32 (i32)* @unknown_37648, { 1, 0 }
  uselistorder i32 (i32)* @unknown_375ec, { 1, 0 }
  uselistorder i32 (i32)* @unknown_377de, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_437ce, { 3, 2, 1, 0 }
}

define i32 @function_1fa28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa28:
  %v0_1fa2b = load i32, i32* @ebp, align 4
  %v1_1fa2b = add i32 %v0_1fa2b, -32
  %v1_1fa31 = call i32 @unknown_4378e(i32 %v1_1fa2b)
  %v4_1fa36 = trunc i32 %v1_1fa31 to i8
  %v5_1fa36 = icmp eq i8 %v4_1fa36, 0
  br i1 %v5_1fa36, label %dec_label_pc_1fa4f, label %dec_label_pc_1fa3a

dec_label_pc_1fa3a:                               ; preds = %dec_label_pc_1fa28
  %v0_1fa3a = load i32, i32* @ebp, align 4
  %v1_1fa3a = add i32 %v0_1fa3a, -56
  %v2_1fa3a = inttoptr i32 %v1_1fa3a to i32*
  %v3_1fa3a = load i32, i32* %v2_1fa3a, align 4
  %v10_1fa3a = icmp eq i32 %v3_1fa3a, 0
  br i1 %v10_1fa3a, label %dec_label_pc_1fa54, label %dec_label_pc_1fa40

dec_label_pc_1fa40:                               ; preds = %dec_label_pc_1fa3a
  %v1_1fa40 = add i32 %v0_1fa3a, -20
  %v2_1fa40 = inttoptr i32 %v1_1fa40 to i32*
  %v3_1fa40 = load i32, i32* %v2_1fa40, align 4
  %v4_1fa43 = load i32, i32* %v2_1fa3a, align 4
  %v10_1fa43 = icmp ult i32 %v3_1fa40, %v4_1fa43
  %v1_1fa46 = icmp eq i1 %v10_1fa43, false
  br i1 %v1_1fa46, label %dec_label_pc_1fa4f, label %dec_label_pc_1fa54

dec_label_pc_1fa4f:                               ; preds = %dec_label_pc_1fa40, %dec_label_pc_1fa28
  br label %dec_label_pc_1fa54

dec_label_pc_1fa54:                               ; preds = %dec_label_pc_1fa3a, %dec_label_pc_1fa40, %dec_label_pc_1fa4f
  %storemerge = phi i32 [ 0, %dec_label_pc_1fa4f ], [ 1, %dec_label_pc_1fa40 ], [ 1, %dec_label_pc_1fa3a ]
  %v5_1fa54 = icmp eq i32 %storemerge, 0
  %v1_1fa56 = icmp eq i1 %v5_1fa54, false
  br i1 %v1_1fa56, label %bb, label %dec_label_pc_1fa5c

bb:                                               ; preds = %dec_label_pc_1fa54
  %v2_1fa56 = call i32 @function_1f920()
  br label %dec_label_pc_1fa5c

dec_label_pc_1fa5c:                               ; preds = %bb, %dec_label_pc_1fa54
  %v3_1fa56 = phi i32 [ %v2_1fa56, %bb ], [ %storemerge, %dec_label_pc_1fa54 ]
  ret i32 %v3_1fa56

; uselistorder directives
  uselistorder label %dec_label_pc_1fa54, { 2, 1, 0 }
}

define i32 @function_1fa5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa5e:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1fa5e = load i32, i32* @eax, align 8
  %v1_1fa5e = trunc i32 %v0_1fa5e to i8
  %not. = icmp ugt i8 %v1_1fa5e, -118
  %v3_1fa5e = urem i8 %v1_1fa5e, -117
  %v4_1fa5e = zext i8 %v3_1fa5e to i32
  %v6_1fa5e = and i32 %v0_1fa5e, -65536
  %v10_1fa5e = select i1 %not., i32 256, i32 0
  %v11_1fa5e = or i32 %v4_1fa5e, %v6_1fa5e
  %v12_1fa5e = or i32 %v11_1fa5e, %v10_1fa5e
  store i32 %v12_1fa5e, i32* %eax.global-to-local, align 8
  %v0_1fa61 = load i32, i32* @ecx, align 4
  %v1_1fa61 = add i32 %v0_1fa61, -1
  store i32 %v1_1fa61, i32* @ecx, align 4
  store i32 %v12_1fa5e, i32* %stack_var_-8, align 4
  %v0_1fa64 = load i32, i32* @ebx, align 8
  %v1_1fa64 = add i32 %v0_1fa64, 862319685
  %v2_1fa64 = inttoptr i32 %v1_1fa64 to i8*
  %v3_1fa64 = load i8, i8* %v2_1fa64, align 1
  %v5_1fa64 = trunc i32 %v1_1fa61 to i8
  %v6_1fa64 = or i8 %v3_1fa64, %v5_1fa64
  store i8 %v6_1fa64, i8* %v2_1fa64, align 1
  %v0_1fa6a = load i32, i32* %eax.global-to-local, align 8
  %v1_1fa6a = add i32 %v0_1fa6a, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_1fa6a = icmp eq i32 %v1_1fa6a, 0
  store i32 %v1_1fa6a, i32* @eax, align 8
  br i1 %v10_1fa6a, label %bb, label %dec_label_pc_1fa71

bb:                                               ; preds = %dec_label_pc_1fa5e
  %v1_1fa6f = load i32, i32* %stack_var_-8, align 4
  %v2_1fa6f = call i32 @function_1fa8f(i32 %v1_1fa6f)
  store i32 %v2_1fa6f, i32* @eax, align 8
  br label %dec_label_pc_1fa71

dec_label_pc_1fa71:                               ; preds = %bb, %dec_label_pc_1fa5e
  %v0_1fa71 = call i32 @function_1fa8a()
  store i32 %v0_1fa71, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fa71

; uselistorder directives
  uselistorder i8 %v1_1fa5e, { 1, 0 }
}

define i32 @function_1fa74() local_unnamed_addr {
dec_label_pc_1fa74:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fa74 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fa74
}

define i32 @function_1fa8a() local_unnamed_addr {
dec_label_pc_1fa8a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1fa8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fa8f:
  %v0_1fa8f = load i32, i32* @ebp, align 4
  %v1_1fa8f = add i32 %v0_1fa8f, -4
  %v2_1fa8f = inttoptr i32 %v1_1fa8f to i32*
  %v3_1fa8f = load i32, i32* %v2_1fa8f, align 4
  store i32 %v3_1fa8f, i32* @ebx, align 8
  %v0_1fa93 = load i32, i32* @eax, align 8
  ret i32 %v0_1fa93
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa94:
  ret i32 %arg1
}

define i32 @function_1fac0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fac0:
  %v0_1fac6 = load i32, i32* @ebp, align 4
  %v1_1fac6 = add i32 %v0_1fac6, -28
  %v2_1fac6 = inttoptr i32 %v1_1fac6 to i32*
  %v3_1fac6 = load i32, i32* %v2_1fac6, align 4
  store i32 %v3_1fac6, i32* @eax, align 8
  %v1_1fac9 = add i32 %v0_1fac6, -12
  %v2_1fac9 = inttoptr i32 %v1_1fac9 to i32*
  %v3_1fac9 = load i32, i32* %v2_1fac9, align 4
  %v4_1facc = icmp eq i32 %v3_1fac9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1facc, label %bb, label %dec_label_pc_1fad5

bb:                                               ; preds = %dec_label_pc_1fac0
  %v1_1fad3 = call i32 @function_1fada()
  br label %dec_label_pc_1fad5

dec_label_pc_1fad5:                               ; preds = %bb, %dec_label_pc_1fac0
  %v2_1fad3 = phi i32 [ %v1_1fad3, %bb ], [ %v3_1fac6, %dec_label_pc_1fac0 ]
  ret i32 %v2_1fad3
}

define i32 @function_1fada() local_unnamed_addr {
dec_label_pc_1fada:
  %v0_1fadb = load i32, i32* @eax, align 8
  ret i32 %v0_1fadb
}

define i32 @function_1fadc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fadc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fade:
  %v2_1fb07 = call i32 @unknown_3f134(i32 %arg1)
  %v4_1fb0c = trunc i32 %v2_1fb07 to i8
  %v5_1fb0c = icmp eq i8 %v4_1fb0c, 0
  %v1_1fb0e = icmp eq i1 %v5_1fb0c, false
  br i1 %v1_1fb0e, label %bb, label %dec_label_pc_1fb10

bb:                                               ; preds = %dec_label_pc_1fade
  %v2_1fb0e = call i32 @function_1fb34()
  br label %dec_label_pc_1fb10

dec_label_pc_1fb10:                               ; preds = %bb, %dec_label_pc_1fade
  %v3_1fb28 = phi i32 [ %v2_1fb0e, %bb ], [ %v2_1fb07, %dec_label_pc_1fade ]
  ret i32 %v3_1fb28
}

define i32 @function_1fb34() local_unnamed_addr {
dec_label_pc_1fb34:
  %v0_1fb34 = load i32, i32* @ebp, align 4
  %v1_1fb34 = add i32 %v0_1fb34, -20
  %v1_1fb3a = call i32 @unknown_4394a(i32 %v1_1fb34)
  %v0_1fb3f = load i32, i32* @ebp, align 4
  %v1_1fb3f = add i32 %v0_1fb3f, -28
  %v2_1fb3f = inttoptr i32 %v1_1fb3f to i32*
  %v3_1fb3f = load i32, i32* %v2_1fb3f, align 4
  %v1_1fb45 = call i32 @unknown_37826(i32 %v3_1fb3f)
  %v1_1fb4d = call i32 @unknown_37882(i32 %v1_1fb45)
  %v0_1fb54 = load i32, i32* @ebp, align 4
  %v1_1fb54 = add i32 %v0_1fb54, -16
  ret i32 %v1_1fb54
}

define i32 @function_1fb58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb58:
  %v0_1fb59 = load i32, i32* @eax, align 8
  %v11_1fb59 = and i32 %v0_1fb59, -252
  %v1_1fb5e = call i32 @unknown_4397e(i32 %v11_1fb59)
  %v0_1fb66 = load i32, i32* @ebp, align 4
  %v1_1fb66 = add i32 %v0_1fb66, -28
  %v2_1fb66 = inttoptr i32 %v1_1fb66 to i32*
  %v3_1fb66 = load i32, i32* %v2_1fb66, align 4
  %v1_1fb69 = add i32 %v3_1fb66, 8
  %v1_1fb6c = add i32 %v0_1fb66, -16
  %v2_1fb76 = call i32 @unknown_43d96(i32 %v1_1fb69, i32 %v1_1fb6c)
  %v4_1fb7b = trunc i32 %v2_1fb76 to i8
  %v5_1fb7b = icmp eq i8 %v4_1fb7b, 0
  br i1 %v5_1fb7b, label %bb, label %dec_label_pc_1fb7f

bb:                                               ; preds = %dec_label_pc_1fb58
  %v1_1fb7d = call i32 @function_1fbae()
  br label %dec_label_pc_1fb7f

dec_label_pc_1fb7f:                               ; preds = %bb, %dec_label_pc_1fb58
  %v0_1fb7f = load i32, i32* @ebp, align 4
  %v1_1fb7f = add i32 %v0_1fb7f, -28
  %v2_1fb7f = inttoptr i32 %v1_1fb7f to i32*
  %v3_1fb7f = load i32, i32* %v2_1fb7f, align 4
  %v1_1fb85 = call i32 @unknown_37826(i32 %v3_1fb7f)
  ret i32 %v1_1fb85
}

define i32 @function_1fb8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb8e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1fb8f() local_unnamed_addr {
dec_label_pc_1fb8f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_1fb8f = load i1, i1* %sf.global-to-local, align 1
  %v1_1fb8f = load i1, i1* %of.global-to-local, align 1
  %v2_1fb8f = icmp eq i1 %v0_1fb8f, %v1_1fb8f
  %v3_1fb8f = load i32, i32* %eax.global-to-local, align 8
  br i1 %v2_1fb8f, label %dec_label_pc_1fb91, label %dec_label_pc_1fb92

dec_label_pc_1fb91:                               ; preds = %dec_label_pc_1fb8f
  ret i32 %v3_1fb8f

dec_label_pc_1fb92:                               ; preds = %dec_label_pc_1fb8f
  %v0_1fb94 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fb94 = add i32 %v0_1fb94, -40
  store i32 %v1_1fb94, i32* %eax.global-to-local, align 8
  %v2_1fb9e = call i32 @unknown_3f572(i32 %v1_1fb94, i32 %v3_1fb8f)
  store i32 %v2_1fb9e, i32* %eax.global-to-local, align 8
  %v0_1fba3 = load i32, i32* @esp, align 4
  %v1_1fba3 = add i32 %v0_1fba3, -4
  %tmp99 = sub i32 3, %v0_1fba3
  %v8_1fba3 = and i32 %tmp99, %v0_1fba3
  %v9_1fba3 = icmp slt i32 %v8_1fba3, 0
  store i1 %v9_1fba3, i1* %of.global-to-local, align 1
  %v11_1fba3 = icmp slt i32 %v1_1fba3, 0
  store i1 %v11_1fba3, i1* %sf.global-to-local, align 1
  %v0_1fba6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fba6 = add i32 %v0_1fba6, -40
  %v2_1fba6 = inttoptr i32 %v1_1fba6 to i32*
  %v3_1fba6 = load i32, i32* %v2_1fba6, align 4
  store i32 %v3_1fba6, i32* %eax.global-to-local, align 8
  %v2_1fba9 = add i32 %v0_1fba6, -20
  %v3_1fba9 = inttoptr i32 %v2_1fba9 to i32*
  store i32 %v3_1fba6, i32* %v3_1fba9, align 4
  %v0_1fbac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fbac
}

define i32 @function_1fbae() local_unnamed_addr {
dec_label_pc_1fbae:
  %v0_1fbae = load i32, i32* @ebp, align 4
  %v1_1fbae = add i32 %v0_1fbae, -28
  %v2_1fbae = inttoptr i32 %v1_1fbae to i32*
  %v3_1fbae = load i32, i32* %v2_1fbae, align 4
  %v1_1fbb1 = add i32 %v3_1fbae, 8
  %v2_1fbb1 = inttoptr i32 %v1_1fbb1 to i32*
  %v3_1fbb1 = load i32, i32* %v2_1fbb1, align 4
  %v2_1fbb4 = add i32 %v0_1fbae, -20
  %v3_1fbb4 = inttoptr i32 %v2_1fbb4 to i32*
  store i32 %v3_1fbb1, i32* %v3_1fbb4, align 4
  %v0_1fbb7 = load i32, i32* @ebp, align 4
  %v1_1fbb7 = add i32 %v0_1fbb7, -32
  %v2_1fbb7 = inttoptr i32 %v1_1fbb7 to i8*
  %v3_1fbb7 = load i8, i8* %v2_1fbb7, align 1
  %v4_1fbb7 = zext i8 %v3_1fbb7 to i32
  %v1_1fbbb = add i32 %v0_1fbb7, -36
  %v2_1fbbb = inttoptr i32 %v1_1fbbb to i32*
  %v3_1fbbb = load i32, i32* %v2_1fbbb, align 4
  %v1_1fbc2 = add i32 %v0_1fbb7, -20
  %v1_1fbcd = add i32 %v0_1fbb7, -28
  %v2_1fbcd = inttoptr i32 %v1_1fbcd to i32*
  %v3_1fbcd = load i32, i32* %v2_1fbcd, align 4
  %v4_1fbd3 = call i32 @unknown_3f382(i32 %v3_1fbcd, i32 %v4_1fbb7, i32 %v1_1fbc2, i32 %v3_1fbbb)
  %v0_1fbd8 = load i32, i32* @ebp, align 4
  %v1_1fbd8 = add i32 %v0_1fbd8, -12
  %v2_1fbd8 = inttoptr i32 %v1_1fbd8 to i32*
  %v3_1fbd8 = load i32, i32* %v2_1fbd8, align 4
  %v3_1fbdb = xor i32 %v3_1fbd8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1fbdb = icmp eq i32 %v3_1fbdb, 0
  store i32 %v3_1fbdb, i32* @eax, align 8
  br i1 %v4_1fbdb, label %bb, label %dec_label_pc_1fbe4

bb:                                               ; preds = %dec_label_pc_1fbae
  %v1_1fbe2 = call i32 @function_1fbe9()
  br label %dec_label_pc_1fbe4

dec_label_pc_1fbe4:                               ; preds = %bb, %dec_label_pc_1fbae
  %v2_1fbe2 = phi i32 [ %v1_1fbe2, %bb ], [ %v3_1fbdb, %dec_label_pc_1fbae ]
  ret i32 %v2_1fbe2

; uselistorder directives
  uselistorder i32 %v0_1fbb7, { 1, 0, 2, 3 }
}

define i32 @function_1fbe9() local_unnamed_addr {
dec_label_pc_1fbe9:
  %v0_1fbea = load i32, i32* @eax, align 8
  ret i32 %v0_1fbea
}

define i32 @_ZN5boost8functionIFbxEEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fbec:
  %v2_1fc16 = call i32 @unknown_43ee4(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1fc27

bb:                                               ; preds = %dec_label_pc_1fbec
  %v1_1fc25 = call i32 @function_1fc2c()
  br label %dec_label_pc_1fc27

dec_label_pc_1fc27:                               ; preds = %bb, %dec_label_pc_1fbec
  %v2_1fc25 = phi i32 [ %v1_1fc25, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1fbec ]
  ret i32 %v2_1fc25
}

define i32 @function_1fc2c() local_unnamed_addr {
dec_label_pc_1fc2c:
  %v0_1fc2d = load i32, i32* @eax, align 8
  ret i32 %v0_1fc2d
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1IbxNS_8functionIFbxEEEEENS3_5mutexEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fc2e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_1fc60() local_unnamed_addr {
dec_label_pc_1fc60:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1fc60 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fc60 = add i32 %v0_1fc60, -532313149
  %v2_1fc60 = inttoptr i32 %v1_1fc60 to i32*
  %v3_1fc60 = load i32, i32* %v2_1fc60, align 4
  %v4_1fc60 = add i32 %v3_1fc60, -1
  store i32 %v4_1fc60, i32* %v2_1fc60, align 4
  %v0_1fc66 = load i32, i32* %eax.global-to-local, align 8
  %v0_1fc6a = load i32, i32* %ebx.global-to-local, align 8
  %v2_1fc6d = call i32 @unknown_43f7e(i32 %v0_1fc6a, i32 %v0_1fc66)
  store i32 %v2_1fc6d, i32* %eax.global-to-local, align 8
  %v0_1fc72 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fc72 = add i32 %v0_1fc72, -28
  %v2_1fc72 = inttoptr i32 %v1_1fc72 to i32*
  %v3_1fc72 = load i32, i32* %v2_1fc72, align 4
  store i32 %v3_1fc72, i32* %eax.global-to-local, align 8
  %v0_1fc75 = load i32, i32* %ebx.global-to-local, align 8
  %v2_1fc75 = inttoptr i32 %v3_1fc72 to i32*
  store i32 %v0_1fc75, i32* %v2_1fc75, align 4
  %v0_1fc77 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fc77 = add i32 %v0_1fc77, -12
  %v2_1fc77 = inttoptr i32 %v1_1fc77 to i32*
  %v3_1fc77 = load i32, i32* %v2_1fc77, align 4
  %v3_1fc7a = xor i32 %v3_1fc77, ptrtoint ([3 x i8]* @3 to i32)
  %v4_1fc7a = icmp eq i32 %v3_1fc7a, 0
  store i32 %v3_1fc7a, i32* @eax, align 8
  br i1 %v4_1fc7a, label %bb, label %dec_label_pc_1fc83

bb:                                               ; preds = %dec_label_pc_1fc60
  %v1_1fc81 = call i32 @function_1fcb3()
  store i32 %v1_1fc81, i32* @eax, align 8
  br label %dec_label_pc_1fc83

dec_label_pc_1fc83:                               ; preds = %bb, %dec_label_pc_1fc60
  %v0_1fc83 = call i32 @function_1fcae()
  store i32 %v0_1fc83, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fc83
}

define i32 @function_1fc86() local_unnamed_addr {
dec_label_pc_1fc86:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fc86 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fc86
}

define i32 @function_1fcae() local_unnamed_addr {
dec_label_pc_1fcae:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_1fcb3() local_unnamed_addr {
dec_label_pc_1fcb3:
  %v0_1fcb8 = load i32, i32* @eax, align 8
  ret i32 %v0_1fcb8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE3endEv() local_unnamed_addr {
dec_label_pc_1fcba:
  %eax.global-to-local = alloca i32, align 4
  %v2_1fcbb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_1fcbb
}

define i32 @function_1fcbe(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fcbe:
  %v0_1fcc7 = load i32, i32* @ebp, align 4
  %v1_1fcca = add i32 %v0_1fcc7, 2
  store i32 %v1_1fcca, i32* @ebp, align 4
  %v2_1fcd2 = add i32 %v0_1fcc7, -10
  %v3_1fcd2 = inttoptr i32 %v2_1fcd2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_1fcd2, align 4
  %v0_1fcd7 = load i32, i32* @ebp, align 4
  %v1_1fcd7 = add i32 %v0_1fcd7, -32
  %v2_1fcd7 = inttoptr i32 %v1_1fcd7 to i32*
  %v3_1fcd7 = load i32, i32* %v2_1fcd7, align 4
  %v1_1fcda = add i32 %v3_1fcd7, 4
  %v1_1fce1 = add i32 %v0_1fcd7, -28
  %v2_1fce1 = inttoptr i32 %v1_1fce1 to i32*
  %v3_1fce1 = load i32, i32* %v2_1fce1, align 4
  %v2_1fce7 = call i32 @unknown_4409a(i32 %v3_1fce1, i32 %v1_1fcda)
  %v0_1fcec = load i32, i32* @ebp, align 4
  %v1_1fcec = add i32 %v0_1fcec, -28
  %v2_1fcec = inttoptr i32 %v1_1fcec to i32*
  %v3_1fcec = load i32, i32* %v2_1fcec, align 4
  store i32 %v3_1fcec, i32* @eax, align 8
  %v1_1fcef = add i32 %v0_1fcec, -12
  %v2_1fcef = inttoptr i32 %v1_1fcef to i32*
  %v3_1fcef = load i32, i32* %v2_1fcef, align 4
  %v4_1fcf2 = icmp eq i32 %v3_1fcef, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1fcf2, label %bb, label %dec_label_pc_1fcfb

bb:                                               ; preds = %dec_label_pc_1fcbe
  %v1_1fcf9 = call i32 @function_1fd00()
  br label %dec_label_pc_1fcfb

dec_label_pc_1fcfb:                               ; preds = %bb, %dec_label_pc_1fcbe
  %v3_1fcf9 = phi i32 [ %v1_1fcf9, %bb ], [ %v3_1fcec, %dec_label_pc_1fcbe ]
  ret i32 %v3_1fcf9
}

define i32 @function_1fd00() local_unnamed_addr {
dec_label_pc_1fd00:
  %v0_1fd01 = load i32, i32* @eax, align 8
  ret i32 %v0_1fd01
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE11upper_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fd04:
  ret i32 %arg2
}

define i32 @function_1fd34() local_unnamed_addr {
dec_label_pc_1fd34:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fd34 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fd34
}

define i32 @function_1fd78() local_unnamed_addr {
dec_label_pc_1fd78:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fd7c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_1fd7c
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISL_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fd80:
  %v1_1fda0 = inttoptr i32 %arg2 to i32*
  %v2_1fda0 = load i32, i32* %v1_1fda0, align 4
  store i32 %v2_1fda0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1fdb3

bb:                                               ; preds = %dec_label_pc_1fd80
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1fdb1 = call i32 @function_1fdb8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1fdb3

dec_label_pc_1fdb3:                               ; preds = %bb, %dec_label_pc_1fd80
  %v4_1fdb1 = phi i32 [ %v3_1fdb1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1fd80 ]
  ret i32 %v4_1fdb1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1fdb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fdb8:
  %v0_1fdb9 = load i32, i32* @eax, align 8
  ret i32 %v0_1fdb9
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISJ_EEE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fdba:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v1_1fde4 = call i32 @unknown_43c26(i32 %tmp110)
  %v1_1fdec = add i32 %arg2, 8
  %v2_1fdef = ptrtoint i32* %stack_var_-24 to i32
  %v2_1fdf9 = call i32 @unknown_3bcd4(i32 %v2_1fdef, i32 %v1_1fdec)
  %v2_1fe08 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1fe0e = call i32 @unknown_3fb3a(i32 %v2_1fe08, i32 %v2_1fdef)
  %v2_1fe20 = call i32 @unknown_442e4(i32 %arg3, i32 %v2_1fe08)
  %v4_1fe25 = trunc i32 %v2_1fe20 to i8
  %v5_1fe25 = icmp eq i8 %v4_1fe25, 0
  br i1 %v5_1fe25, label %dec_label_pc_1fe48, label %dec_label_pc_1fe29

dec_label_pc_1fe29:                               ; preds = %dec_label_pc_1fdba
  %v2_1fe2f = ptrtoint i32* %stack_var_-44 to i32
  %v2_1fe39 = call i32 @unknown_44324(i32 %v2_1fe2f, i32 %arg2)
  %v3_1fe41 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1fe41, i32* %arg1, align 4
  ret i32 %v3_1fe41

dec_label_pc_1fe48:                               ; preds = %dec_label_pc_1fdba
  ret i32 %arg3
}

define i32 @function_1fe4b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fe4b:
  %v0_1fe4b = load i32, i32* @eax, align 8
  %v1_1fe4e = call i32 @unknown_4436c(i32 %v0_1fe4b)
  %v0_1fe55 = load i32, i32* @ebp, align 4
  %v1_1fe55 = add i32 %v0_1fe55, -28
  %v2_1fe55 = inttoptr i32 %v1_1fe55 to i32*
  %v3_1fe55 = load i32, i32* %v2_1fe55, align 4
  %v1_1fe58 = add i32 %v1_1fe4e, 12
  %v2_1fe58 = inttoptr i32 %v1_1fe58 to i32*
  %v3_1fe58 = load i32, i32* %v2_1fe58, align 4
  %v2_1fe5b = inttoptr i32 %v3_1fe55 to i32*
  store i32 %v3_1fe58, i32* %v2_1fe5b, align 4
  %v0_1fe5d = load i32, i32* @ebp, align 4
  %v1_1fe5d = add i32 %v0_1fe5d, -28
  %v2_1fe5d = inttoptr i32 %v1_1fe5d to i32*
  %v3_1fe5d = load i32, i32* %v2_1fe5d, align 4
  store i32 %v3_1fe5d, i32* @eax, align 8
  %v1_1fe60 = add i32 %v0_1fe5d, -12
  %v2_1fe60 = inttoptr i32 %v1_1fe60 to i32*
  %v3_1fe60 = load i32, i32* %v2_1fe60, align 4
  %v4_1fe63 = icmp eq i32 %v3_1fe60, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1fe63, label %bb, label %dec_label_pc_1fe6c

bb:                                               ; preds = %dec_label_pc_1fe4b
  %v1_1fe6a = call i32 @function_1fe71()
  br label %dec_label_pc_1fe6c

dec_label_pc_1fe6c:                               ; preds = %bb, %dec_label_pc_1fe4b
  %v2_1fe6a = phi i32 [ %v1_1fe6a, %bb ], [ %v3_1fe5d, %dec_label_pc_1fe4b ]
  ret i32 %v2_1fe6a
}

define i32 @function_1fe71() local_unnamed_addr {
dec_label_pc_1fe71:
  %v0_1fe71 = load i32, i32* @ebp, align 4
  %v1_1fe71 = add i32 %v0_1fe71, -4
  %v2_1fe71 = inttoptr i32 %v1_1fe71 to i32*
  %v3_1fe71 = load i32, i32* %v2_1fe71, align 4
  store i32 %v3_1fe71, i32* @ebx, align 8
  %v0_1fe75 = load i32, i32* @eax, align 8
  ret i32 %v0_1fe75
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE6insertESt14_List_iteratorISH_ERKSH_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fe78:
  ret i32 %arg2
}

define i32 @function_1fead(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fead:
  %v0_1fead = load i32, i32* @eax, align 8
  %v1_1fead = trunc i32 %v0_1fead to i8
  %v2_1fead = and i8 %v1_1fead, -24
  %v8_1fead = zext i8 %v2_1fead to i32
  %v10_1fead = and i32 %v0_1fead, -256
  %v11_1fead = or i32 %v8_1fead, %v10_1fead
  %v0_1feaf = load i32, i32* @ecx, align 4
  %v1_1feaf = and i32 %v0_1feaf, -256
  %v2_1feaf = or i32 %v1_1feaf, 69
  store i32 %v2_1feaf, i32* @ecx, align 4
  %v3_1feb1 = inttoptr i32 %v11_1fead to i8*
  %v4_1feb1 = load i8, i8* %v3_1feb1, align 8
  %v5_1feb1 = add i8 %v4_1feb1, %v2_1fead
  %v20_1feb1 = zext i8 %v5_1feb1 to i32
  %v23_1feb1 = or i32 %v20_1feb1, %v10_1fead
  %v1_1feb3 = load i32, i32* @ebp, align 4
  %v2_1feb3 = add i32 %v1_1feb3, -16
  %v3_1feb3 = inttoptr i32 %v2_1feb3 to i32*
  store i32 %v23_1feb1, i32* %v3_1feb3, align 4
  %v0_1feb6 = load i32, i32* @ebp, align 4
  %v1_1feb9 = add i32 %v0_1feb6, -16
  %v2_1feb9 = inttoptr i32 %v1_1feb9 to i32*
  %v3_1feb9 = load i32, i32* %v2_1feb9, align 4
  ret i32 %v3_1feb9
}

define i32 @function_1fee3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fee3:
  %zf.global-to-local = alloca i1, align 1
  %v0_1fee3 = load i32, i32* @eax, align 8
  %v1_1fee3 = trunc i32 %v0_1fee3 to i8
  %v2_1fee3 = load i1, i1* @cf, align 1
  %v3_1fee3 = zext i1 %v2_1fee3 to i8
  %v4_1fee3 = add i8 %v3_1fee3, %v1_1fee3
  %v13_1fee3 = icmp eq i8 %v4_1fee3, 0
  store i1 %v13_1fee3, i1* %zf.global-to-local, align 1
  %v22_1fee3 = zext i8 %v4_1fee3 to i32
  %v24_1fee3 = and i32 %v0_1fee3, -256
  %v25_1fee3 = or i32 %v22_1fee3, %v24_1fee3
  store i32 %v25_1fee3, i32* @eax, align 8
  %v1_1fee5 = inttoptr i32 %v25_1fee3 to i8*
  %v2_1fee5 = load i8, i8* %v1_1fee5, align 1
  %v5_1fee5 = add i8 %v2_1fee5, %v4_1fee3
  %v15_1fee5 = icmp eq i8 %v5_1fee5, 0
  store i1 %v15_1fee5, i1* %zf.global-to-local, align 1
  store i8 %v5_1fee5, i8* %v1_1fee5, align 1
  %v0_1fee7 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1fee7, label %bb, label %dec_label_pc_1fee3.dec_label_pc_1fee9_crit_edge

dec_label_pc_1fee3.dec_label_pc_1fee9_crit_edge:  ; preds = %dec_label_pc_1fee3
  %v2_1fee7.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_1fee9

bb:                                               ; preds = %dec_label_pc_1fee3
  %v1_1fee7 = call i32 @function_1feee()
  br label %dec_label_pc_1fee9

dec_label_pc_1fee9:                               ; preds = %dec_label_pc_1fee3.dec_label_pc_1fee9_crit_edge, %bb
  %v2_1fee7 = phi i32 [ %v2_1fee7.pre, %dec_label_pc_1fee3.dec_label_pc_1fee9_crit_edge ], [ %v1_1fee7, %bb ]
  ret i32 %v2_1fee7

; uselistorder directives
  uselistorder label %dec_label_pc_1fee9, { 1, 0 }
}

define i32 @function_1feee() local_unnamed_addr {
dec_label_pc_1feee:
  %v0_1feef = load i32, i32* @eax, align 8
  ret i32 %v0_1feef
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SM_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fef2:
  ret i32 %arg1
}

define i32 @function_1ff19(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ff19:
  %v0_1ff1a = load i32, i32* @ebx, align 8
  %v1_1ff1a = add i32 %v0_1ff1a, 1149885509
  %v2_1ff1a = inttoptr i32 %v1_1ff1a to i8*
  %v3_1ff1a = load i8, i8* %v2_1ff1a, align 1
  %v4_1ff1a = load i32, i32* @ecx, align 4
  %v5_1ff1a = trunc i32 %v4_1ff1a to i8
  %v6_1ff1a = and i8 %v5_1ff1a, %v3_1ff1a
  store i8 %v6_1ff1a, i8* %v2_1ff1a, align 1
  %v0_1ff22 = load i32, i32* @ebp, align 4
  %v1_1ff22 = add i32 %v0_1ff22, -32
  %v2_1ff22 = inttoptr i32 %v1_1ff22 to i32*
  %v3_1ff22 = load i32, i32* %v2_1ff22, align 4
  %v0_1ff29 = load i32, i32* @edx, align 8
  %v2_1ff2c = call i32 @unknown_41632(i32 %v0_1ff29, i32 %v3_1ff22)
  %v4_1ff31 = trunc i32 %v2_1ff2c to i8
  %v5_1ff31 = icmp eq i8 %v4_1ff31, 0
  br i1 %v5_1ff31, label %dec_label_pc_1ff3c, label %dec_label_pc_1ff35

dec_label_pc_1ff35:                               ; preds = %dec_label_pc_1ff19
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1ff68

dec_label_pc_1ff3c:                               ; preds = %dec_label_pc_1ff19
  %v0_1ff3c = load i32, i32* @ebp, align 4
  %v1_1ff3c = add i32 %v0_1ff3c, -28
  %v2_1ff3c = inttoptr i32 %v1_1ff3c to i32*
  %v3_1ff3c = load i32, i32* %v2_1ff3c, align 4
  %v1_1ff3f = add i32 %v3_1ff3c, 32
  %v1_1ff49 = add i32 %v0_1ff3c, -36
  %v2_1ff49 = inttoptr i32 %v1_1ff49 to i32*
  %v3_1ff49 = load i32, i32* %v2_1ff49, align 4
  %v2_1ff53 = call i32 @unknown_41632(i32 %v1_1ff3f, i32 %v3_1ff49)
  %v4_1ff58 = trunc i32 %v2_1ff53 to i8
  %v5_1ff58 = icmp eq i8 %v4_1ff58, 0
  br i1 %v5_1ff58, label %dec_label_pc_1ff63, label %dec_label_pc_1ff5c

dec_label_pc_1ff5c:                               ; preds = %dec_label_pc_1ff3c
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_1ff68

dec_label_pc_1ff63:                               ; preds = %dec_label_pc_1ff3c
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_1ff68

dec_label_pc_1ff68:                               ; preds = %dec_label_pc_1ff63, %dec_label_pc_1ff5c, %dec_label_pc_1ff35
  %v2_1ff724 = phi i32 [ 1, %dec_label_pc_1ff63 ], [ 0, %dec_label_pc_1ff5c ], [ 0, %dec_label_pc_1ff35 ]
  %v0_1ff68 = load i32, i32* @ebp, align 4
  %v1_1ff68 = add i32 %v0_1ff68, -12
  %v2_1ff68 = inttoptr i32 %v1_1ff68 to i32*
  %v3_1ff68 = load i32, i32* %v2_1ff68, align 4
  %v4_1ff6b = icmp eq i32 %v3_1ff68, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_1ff6b, label %bb, label %dec_label_pc_1ff74

bb:                                               ; preds = %dec_label_pc_1ff68
  %v1_1ff72 = call i32 @function_1ff79()
  br label %dec_label_pc_1ff74

dec_label_pc_1ff74:                               ; preds = %bb, %dec_label_pc_1ff68
  %v2_1ff72 = phi i32 [ %v1_1ff72, %bb ], [ %v2_1ff724, %dec_label_pc_1ff68 ]
  ret i32 %v2_1ff72

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_41632, { 1, 0 }
}

define i32 @function_1ff79() local_unnamed_addr {
dec_label_pc_1ff79:
  %v0_1ff7a = load i32, i32* @eax, align 8
  ret i32 %v0_1ff7a
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ff7c:
  %v2_1ff96 = load i32, i32* %arg1, align 4
  %v1_1ff98 = add i32 %v2_1ff96, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_1ff9e = call i32 @unknown_4466e(i32 %v1_1ff98)
  store i32 %v1_1ff9e, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ffaf

bb:                                               ; preds = %dec_label_pc_1ff7c
  %v1_1ffad = call i32 @function_1ffb4()
  br label %dec_label_pc_1ffaf

dec_label_pc_1ffaf:                               ; preds = %bb, %dec_label_pc_1ff7c
  %v2_1ffad = phi i32 [ %v1_1ffad, %bb ], [ %v1_1ff9e, %dec_label_pc_1ff7c ]
  ret i32 %v2_1ffad
}

define i32 @function_1ffb4() local_unnamed_addr {
dec_label_pc_1ffb4:
  %v0_1ffb5 = load i32, i32* @eax, align 8
  ret i32 %v0_1ffb5
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEneERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ffb6:
  %v2_1ffd6 = load i32, i32* %arg1, align 4
  %v1_1ffdb = inttoptr i32 %arg2 to i32*
  %v2_1ffdb = load i32, i32* %v1_1ffdb, align 4
  %v12_1ffdd = icmp eq i32 %v2_1ffd6, %v2_1ffdb
  %v1_1ffdf = icmp eq i1 %v12_1ffdd, false
  %v2_1ffdf = zext i1 %v1_1ffdf to i32
  %v4_1ffdf = and i32 %v2_1ffdb, -256
  %v5_1ffdf = or i32 %v2_1ffdf, %v4_1ffdf
  store i32 %v5_1ffdf, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_1ffee

bb:                                               ; preds = %dec_label_pc_1ffb6
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1ffec = call i32 @function_1fff3(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1ffee

dec_label_pc_1ffee:                               ; preds = %bb, %dec_label_pc_1ffb6
  %v4_1ffec = phi i32 [ %v3_1ffec, %bb ], [ %v5_1ffdf, %dec_label_pc_1ffb6 ]
  ret i32 %v4_1ffec

; uselistorder directives
  uselistorder i32 %v2_1ffdb, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1fff3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fff3:
  %v0_1fff4 = load i32, i32* @eax, align 8
  ret i32 %v0_1fff4
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE5eraseESt17_Rb_tree_iteratorISP_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fff6:
  %v2_20020 = call i32 @unknown_44716(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20031

bb:                                               ; preds = %dec_label_pc_1fff6
  %v1_2002f = call i32 @function_20036()
  br label %dec_label_pc_20031

dec_label_pc_20031:                               ; preds = %bb, %dec_label_pc_1fff6
  %v2_2002f = phi i32 [ %v1_2002f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_1fff6 ]
  ret i32 %v2_2002f
}

define i32 @function_20036() local_unnamed_addr {
dec_label_pc_20036:
  %v0_20037 = load i32, i32* @eax, align 8
  ret i32 %v0_20037
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEeqERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20038:
  %v2_20058 = load i32, i32* %arg1, align 4
  %v1_2005d = inttoptr i32 %arg2 to i32*
  %v2_2005d = load i32, i32* %v1_2005d, align 4
  %v12_2005f = icmp eq i32 %v2_20058, %v2_2005d
  %v1_20061 = zext i1 %v12_2005f to i32
  %v3_20061 = and i32 %v2_2005d, -256
  %v4_20061 = or i32 %v1_20061, %v3_20061
  store i32 %v4_20061, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20070

bb:                                               ; preds = %dec_label_pc_20038
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_2006e = call i32 @function_20075(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_20070

dec_label_pc_20070:                               ; preds = %bb, %dec_label_pc_20038
  %v4_2006e = phi i32 [ %v3_2006e, %bb ], [ %v4_20061, %dec_label_pc_20038 ]
  ret i32 %v4_2006e

; uselistorder directives
  uselistorder i32 %v2_2005d, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_20075(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20075:
  %v0_20076 = load i32, i32* @eax, align 8
  ret i32 %v0_20076
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IbxNS0_8functionIFbxEEEEENS1_5mutexEEEEEEEC1ERS7_RKSJ_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_20078:
  %v2_200a8 = call i32 @unknown_3f3a0(i32 %arg1, i32 %arg2)
  %v2_200b3 = load i32, i32* %arg3, align 4
  %v2_200b5 = add i32 %arg1, 12
  %v3_200b5 = inttoptr i32 %v2_200b5 to i32*
  store i32 %v2_200b3, i32* %v3_200b5, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_200c4

bb:                                               ; preds = %dec_label_pc_20078
  %v1_200c2 = call i32 @function_200c9()
  br label %dec_label_pc_200c4

dec_label_pc_200c4:                               ; preds = %bb, %dec_label_pc_20078
  %v2_200c2 = phi i32 [ %v1_200c2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_20078 ]
  ret i32 %v2_200c2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_200c9() local_unnamed_addr {
dec_label_pc_200c9:
  %v0_200ca = load i32, i32* @eax, align 8
  ret i32 %v0_200ca
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE6insertERKSP_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_200cc:
  ret i32 %arg3
}

define i32 @function_200e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_200e8:
  %v2_200e8 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_200e8 = load i32, i32* @eax, align 8
  %v4_200e8 = trunc i32 %v3_200e8 to i8
  %v5_200e8 = add i8 %v4_200e8, %v2_200e8
  %v21_200e8 = inttoptr i32 %v3_200e8 to i8*
  store i8 %v5_200e8, i8* %v21_200e8, align 1
  %v0_200ea = load i32, i32* @eax, align 8
  %v1_200ea = load i32, i32* @ebp, align 4
  %v2_200ea = add i32 %v1_200ea, -12
  %v3_200ea = inttoptr i32 %v2_200ea to i32*
  store i32 %v0_200ea, i32* %v3_200ea, align 4
  %v0_200ef = load i32, i32* @ebp, align 4
  %v1_200ef = add i32 %v0_200ef, -32
  %v2_200ef = inttoptr i32 %v1_200ef to i32*
  %v3_200ef = load i32, i32* %v2_200ef, align 4
  %v1_200f2 = add i32 %v0_200ef, -28
  %v2_200f2 = inttoptr i32 %v1_200f2 to i32*
  %v3_200f2 = load i32, i32* %v2_200f2, align 4
  %v1_200f5 = add i32 %v0_200ef, -36
  %v2_200f5 = inttoptr i32 %v1_200f5 to i32*
  %v3_200f5 = load i32, i32* %v2_200f5, align 4
  %v3_20103 = call i32 @unknown_44840(i32 %v3_200f2, i32 %v3_200ef, i32 %v3_200f5)
  %v0_2010b = load i32, i32* @ebp, align 4
  %v1_2010b = add i32 %v0_2010b, -28
  %v2_2010b = inttoptr i32 %v1_2010b to i32*
  %v3_2010b = load i32, i32* %v2_2010b, align 4
  store i32 %v3_2010b, i32* @eax, align 8
  %v1_2010e = add i32 %v0_2010b, -12
  %v2_2010e = inttoptr i32 %v1_2010e to i32*
  %v3_2010e = load i32, i32* %v2_2010e, align 4
  %v4_20111 = icmp eq i32 %v3_2010e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20111, label %bb, label %dec_label_pc_2011a

bb:                                               ; preds = %dec_label_pc_200e8
  %v1_20118 = call i32 @function_2011f()
  br label %dec_label_pc_2011a

dec_label_pc_2011a:                               ; preds = %bb, %dec_label_pc_200e8
  %v2_20118 = phi i32 [ %v1_20118, %bb ], [ %v3_2010b, %dec_label_pc_200e8 ]
  ret i32 %v2_20118
}

define i32 @function_2011f() local_unnamed_addr {
dec_label_pc_2011f:
  %v0_20120 = load i32, i32* @eax, align 8
  ret i32 %v0_20120
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20124:
  %v1_20144 = add i32 %arg2, 12
  %v2_20144 = inttoptr i32 %v1_20144 to i32*
  %v3_20144 = load i32, i32* %v2_20144, align 4
  %v2_20151 = call i32 @unknown_44504(i32 %arg1, i32 %v3_20144)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20165

bb:                                               ; preds = %dec_label_pc_20124
  %v1_20163 = call i32 @function_2016a()
  br label %dec_label_pc_20165

dec_label_pc_20165:                               ; preds = %bb, %dec_label_pc_20124
  %v2_20163 = phi i32 [ %v1_20163, %bb ], [ %arg1, %dec_label_pc_20124 ]
  ret i32 %v2_20163

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2016a() local_unnamed_addr {
dec_label_pc_2016a:
  %v0_2016b = load i32, i32* @eax, align 8
  ret i32 %v0_2016b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE11lower_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2016e:
  %v1_20198 = call i32 @unknown_445b6(i32 %arg2)
  %v1_201a5 = call i32 @unknown_44586(i32 %arg2)
  %v5_201c6 = call i32 @unknown_44ae6(i32 %arg1, i32 %arg2, i32 %v1_201a5, i32 %v1_20198, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_201dd

bb:                                               ; preds = %dec_label_pc_2016e
  %v1_201db = call i32 @function_201e2()
  br label %dec_label_pc_201dd

dec_label_pc_201dd:                               ; preds = %bb, %dec_label_pc_2016e
  %v2_201db = phi i32 [ %v1_201db, %bb ], [ %arg1, %dec_label_pc_2016e ]
  ret i32 %v2_201db

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_201e2() local_unnamed_addr {
dec_label_pc_201e2:
  %v0_201e6 = load i32, i32* @eax, align 8
  ret i32 %v0_201e6
}

define i32 @_ZN5boost9function1IvRKSsE9assign_toIPFvS2_EEEvT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_201ea:
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v1_2020a = add i32 %tmp106, 4
  %v3_2021f = call i32 @unknown_44cce(i32 ptrtoint (i32* @global_var_35d30.2026 to i32), i32 %arg2, i32 %v1_2020a)
  %v4_20224 = trunc i32 %v3_2021f to i8
  %v5_20224 = icmp eq i8 %v4_20224, 0
  br i1 %v5_20224, label %dec_label_pc_20246, label %dec_label_pc_20228

dec_label_pc_20228:                               ; preds = %dec_label_pc_201ea
  br label %dec_label_pc_20246

dec_label_pc_20246:                               ; preds = %dec_label_pc_201ea, %dec_label_pc_20228
  %storemerge = phi i32 [ or (i32 ptrtoint (i32* @global_var_35d30.2026 to i32), i32 1), %dec_label_pc_20228 ], [ 0, %dec_label_pc_201ea ]
  store i32 %storemerge, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20252

bb:                                               ; preds = %dec_label_pc_20246
  %v1_20250 = call i32 @function_20257()
  br label %dec_label_pc_20252

dec_label_pc_20252:                               ; preds = %bb, %dec_label_pc_20246
  %v2_20250 = phi i32 [ %v1_20250, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_20246 ]
  ret i32 %v2_20250

; uselistorder directives
  uselistorder label %dec_label_pc_20246, { 1, 0 }
}

define i32 @function_20257() local_unnamed_addr {
dec_label_pc_20257:
  %v0_20258 = load i32, i32* @eax, align 8
  ret i32 %v0_20258
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor25m_visit_reference_wrapperIFvRKSsEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2025a:
  %stack_var_-17 = alloca i32, align 4
  %v2_2027d = ptrtoint i32* %stack_var_-17 to i32
  %v3_20291 = call i32 @unknown_44d92(i32 %arg1, i32 %arg2, i32 %v2_2027d)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_202a2

bb:                                               ; preds = %dec_label_pc_2025a
  %v1_202a0 = call i32 @function_202a7()
  br label %dec_label_pc_202a2

dec_label_pc_202a2:                               ; preds = %bb, %dec_label_pc_2025a
  %v2_202a0 = phi i32 [ %v1_202a0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2025a ]
  ret i32 %v2_202a0
}

define i32 @function_202a7() local_unnamed_addr {
dec_label_pc_202a7:
  %v0_202a8 = load i32, i32* @eax, align 8
  ret i32 %v0_202a8
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE6uniqueEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_202aa:
  %v1_202c4 = add i32 %arg1, 4
  ret i32 %v1_202c4
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_202e2:
  %v2_202fc = load i32, i32* %arg1, align 4
  %v1_202fe = icmp eq i32 %v2_202fc, 0
  %v1_20300 = icmp eq i1 %v1_202fe, false
  br i1 %v1_20300, label %bb, label %dec_label_pc_20302

bb:                                               ; preds = %dec_label_pc_202e2
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_20300 = call i32 @function_20326(i32 %tmp105)
  br label %dec_label_pc_20302

dec_label_pc_20302:                               ; preds = %bb, %dec_label_pc_202e2
  %v3_2031a = phi i32 [ %v3_20300, %bb ], [ %v2_202fc, %dec_label_pc_202e2 ]
  ret i32 %v3_2031a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

declare i32 @__assert_fail.1761() local_unnamed_addr

define i32 @function_20326(i32 %arg1) local_unnamed_addr {
dec_label_pc_20326:
  %v0_20326 = load i32, i32* @ebp, align 4
  %v1_20326 = add i32 %v0_20326, -28
  %v2_20326 = inttoptr i32 %v1_20326 to i32*
  %v3_20326 = load i32, i32* %v2_20326, align 4
  %v1_20329 = inttoptr i32 %v3_20326 to i32*
  %v2_20329 = load i32, i32* %v1_20329, align 4
  store i32 %v2_20329, i32* @eax, align 8
  %v1_2032b = add i32 %v0_20326, -12
  %v2_2032b = inttoptr i32 %v1_2032b to i32*
  %v3_2032b = load i32, i32* %v2_2032b, align 4
  %v4_2032e = icmp eq i32 %v3_2032b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2032e, label %bb, label %dec_label_pc_20337

bb:                                               ; preds = %dec_label_pc_20326
  %v1_20335 = call i32 @function_2033c()
  br label %dec_label_pc_20337

dec_label_pc_20337:                               ; preds = %bb, %dec_label_pc_20326
  %v2_20335 = phi i32 [ %v1_20335, %bb ], [ %v2_20329, %dec_label_pc_20326 ]
  ret i32 %v2_20335
}

define i32 @function_2033c() local_unnamed_addr {
dec_label_pc_2033c:
  %v0_2033d = load i32, i32* @eax, align 8
  ret i32 %v0_2033d
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSE_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2033e:
  %v1_20358 = add i32 %arg1, 4
  store i32 %v1_20358, i32* @eax, align 8
  %v1_2035e = call i32 @function_2251e(i32 %v1_20358)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2036f

bb:                                               ; preds = %dec_label_pc_2033e
  %v1_2036d = call i32 @function_20374()
  br label %dec_label_pc_2036f

dec_label_pc_2036f:                               ; preds = %bb, %dec_label_pc_2033e
  %v2_2036d = phi i32 [ %v1_2036d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2033e ]
  ret i32 %v2_2036d
}

define i32 @function_20374() local_unnamed_addr {
dec_label_pc_20374:
  %v0_20375 = load i32, i32* @eax, align 8
  ret i32 %v0_20375
}

define i32 @_ZN5boost10shared_ptrINS_8signals219optional_last_valueIvEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20376:
  ret i32 0
}

define i32 @function_20394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20394:
  %ecx.global-to-local = alloca i32, align 4
  %v0_20394 = load i32, i32* @ebp, align 4
  %v1_20394 = add i32 %v0_20394, 1
  %v9_20394 = icmp eq i32 %v1_20394, 0
  store i32 %v1_20394, i32* @ebp, align 4
  %v0_20395 = load i32, i32* @ecx, align 4
  %v1_20395 = add i32 %v0_20395, -1
  store i32 %v1_20395, i32* %ecx.global-to-local, align 4
  %v2_20395 = icmp eq i32 %v1_20395, 0
  %v4_20395 = or i1 %v9_20394, %v2_20395
  br i1 %v4_20395, label %dec_label_pc_20397, label %bb

bb:                                               ; preds = %dec_label_pc_20394
  %v6_20395 = call i32 @__assert_fail.1761()
  %v4_20397.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_20397

dec_label_pc_20397:                               ; preds = %dec_label_pc_20394, %bb
  %v4_20397 = phi i32 [ %v1_20395, %dec_label_pc_20394 ], [ %v4_20397.pre, %bb ]
  %v0_20397 = load i32, i32* @ebx, align 8
  %v1_20397 = add i32 %v0_20397, 277472325
  %v2_20397 = inttoptr i32 %v1_20397 to i8*
  %v3_20397 = load i8, i8* %v2_20397, align 1
  %v5_20397 = trunc i32 %v4_20397 to i8
  %v6_20397 = load i1, i1* @cf, align 1
  %v7_20397 = zext i1 %v6_20397 to i8
  %v8_20397 = add i8 %v3_20397, %v5_20397
  %v9_20397 = add i8 %v8_20397, %v7_20397
  store i8 %v9_20397, i8* %v2_20397, align 1
  %v0_2039d = load i32, i32* @ebp, align 4
  %v1_2039d = add i32 %v0_2039d, -32
  %v2_2039d = inttoptr i32 %v1_2039d to i32*
  %v3_2039d = load i32, i32* %v2_2039d, align 4
  %v1_203a3 = add i32 %v0_2039d, -28
  %v2_203a3 = inttoptr i32 %v1_203a3 to i32*
  %v3_203a3 = load i32, i32* %v2_203a3, align 4
  %v1_203b5 = add i32 %v0_2039d, -12
  %v2_203b5 = inttoptr i32 %v1_203b5 to i32*
  %v3_203b5 = load i32, i32* %v2_203b5, align 4
  %v3_203b8 = xor i32 %v3_203b5, ptrtoint ([3 x i8]* @3 to i32)
  %v4_203b8 = icmp eq i32 %v3_203b8, 0
  store i32 %v3_203b8, i32* @eax, align 8
  br i1 %v4_203b8, label %bb5, label %dec_label_pc_203c1

bb5:                                              ; preds = %dec_label_pc_20397
  %v1_203a6 = add i32 %v3_203a3, 4
  %v1_203a0 = add i32 %v3_2039d, 4
  %v3_203bf = call i32 @function_203c6(i32 %v1_203a6, i32 %v1_203a0)
  br label %dec_label_pc_203c1

dec_label_pc_203c1:                               ; preds = %bb5, %dec_label_pc_20397
  %v4_203bf = phi i32 [ %v3_203bf, %bb5 ], [ %v3_203b8, %dec_label_pc_20397 ]
  ret i32 %v4_203bf

; uselistorder directives
  uselistorder i32 %v1_20395, { 0, 2, 1 }
  uselistorder label %dec_label_pc_20397, { 1, 0 }
}

define i32 @function_203c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_203c6:
  %v0_203c7 = load i32, i32* @eax, align 8
  ret i32 %v0_203c7
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_203c8:
  ret i32 0
}

define i32 @function_203f8() local_unnamed_addr {
dec_label_pc_203f8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_203f8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_203f8 = add i32 %v0_203f8, -599422013
  %v2_203f8 = inttoptr i32 %v1_203f8 to i32*
  %v3_203f8 = load i32, i32* %v2_203f8, align 4
  %v4_203f8 = add i32 %v3_203f8, -1
  store i32 %v4_203f8, i32* %v2_203f8, align 4
  %v0_203fe = load i32, i32* %eax.global-to-local, align 8
  %v0_20402 = load i32, i32* %ebx.global-to-local, align 8
  %v2_20405 = call i32 @unknown_44fca(i32 %v0_20402, i32 %v0_203fe)
  store i32 %v2_20405, i32* %eax.global-to-local, align 8
  %v0_2040a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2040a = add i32 %v0_2040a, -28
  %v2_2040a = inttoptr i32 %v1_2040a to i32*
  %v3_2040a = load i32, i32* %v2_2040a, align 4
  store i32 %v3_2040a, i32* %eax.global-to-local, align 8
  %v0_2040d = load i32, i32* %ebx.global-to-local, align 8
  %v2_20414 = call i32 @unknown_451d0(i32 %v3_2040a, i32 %v0_2040d)
  store i32 %v2_20414, i32* %eax.global-to-local, align 8
  %v0_20419 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20419 = add i32 %v0_20419, -32
  %v2_20419 = inttoptr i32 %v1_20419 to i32*
  %v3_20419 = load i32, i32* %v2_20419, align 4
  store i32 %v3_20419, i32* %eax.global-to-local, align 8
  %v1_2041c = add i32 %v3_20419, 8
  %v1_2041f = add i32 %v0_20419, -28
  %v2_2041f = inttoptr i32 %v1_2041f to i32*
  %v3_2041f = load i32, i32* %v2_2041f, align 4
  %v1_20422 = add i32 %v3_2041f, 8
  store i32 %v1_20422, i32* %eax.global-to-local, align 8
  %v2_2042c = call i32 @unknown_4073e(i32 %v1_20422, i32 %v1_2041c)
  store i32 %v2_2042c, i32* %eax.global-to-local, align 8
  %v0_20431 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20431 = add i32 %v0_20431, -12
  %v2_20431 = inttoptr i32 %v1_20431 to i32*
  %v3_20431 = load i32, i32* %v2_20431, align 4
  %v3_20434 = xor i32 %v3_20431, ptrtoint ([3 x i8]* @3 to i32)
  %v4_20434 = icmp eq i32 %v3_20434, 0
  store i32 %v3_20434, i32* @eax, align 8
  br i1 %v4_20434, label %bb, label %dec_label_pc_2043d

bb:                                               ; preds = %dec_label_pc_203f8
  %v1_2043b = call i32 @function_20458()
  store i32 %v1_2043b, i32* @eax, align 8
  br label %dec_label_pc_2043d

dec_label_pc_2043d:                               ; preds = %bb, %dec_label_pc_203f8
  %v0_2043d = call i32 @function_20453()
  store i32 %v0_2043d, i32* %eax.global-to-local, align 8
  ret i32 %v0_2043d
}

define i32 @function_20453() local_unnamed_addr {
dec_label_pc_20453:
  %v0_20453 = load i32, i32* @eax, align 8
  ret i32 %v0_20453
}

define i32 @function_20458() local_unnamed_addr {
dec_label_pc_20458:
  %v0_2045e = load i32, i32* @eax, align 8
  ret i32 %v0_2045e
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20460:
  %v10_2047e = icmp eq i32 %arg2, 0
  br i1 %v10_2047e, label %bb, label %dec_label_pc_20484

bb:                                               ; preds = %dec_label_pc_20460
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v3_20482 = call i32 @function_204b2(i32 0, i32 %tmp107)
  br label %dec_label_pc_20484

dec_label_pc_20484:                               ; preds = %bb, %dec_label_pc_20460
  %v2_20487 = load i32, i32* %arg1, align 4
  %v15_20489 = icmp eq i32 %v2_20487, %arg2
  %v1_2048c = icmp eq i1 %v15_20489, false
  br i1 %v1_2048c, label %bb112, label %dec_label_pc_2048e

bb112:                                            ; preds = %dec_label_pc_20484
  %v4_2048c = call i32 @function_204b2(i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_2048e

dec_label_pc_2048e:                               ; preds = %bb112, %dec_label_pc_20484
  %v3_204a6 = phi i32 [ %v4_2048c, %bb112 ], [ %v2_20487, %dec_label_pc_20484 ]
  ret i32 %v3_204a6

; uselistorder directives
  uselistorder i32 %v2_20487, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_204b2, { 1, 0 }
}

define i32 @function_204b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_204b2:
  %v0_204b2 = load i32, i32* @ebp, align 4
  %v1_204b9 = add i32 %v0_204b2, -20
  ret i32 %v1_204b9
}

define i32 @function_204c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_204c2:
  %v0_204c4 = load i32, i32* @ebp, align 4
  %v1_204c4 = add i32 %v0_204c4, -28
  %v2_204c4 = inttoptr i32 %v1_204c4 to i32*
  %v3_204c4 = load i32, i32* %v2_204c4, align 4
  %v1_204cb = add i32 %v0_204c4, -20
  %v2_204d1 = call i32 @unknown_45334(i32 %v1_204cb, i32 %v3_204c4)
  %v0_204d6 = load i32, i32* @ebp, align 4
  %v1_204d6 = add i32 %v0_204d6, -20
  %v1_204dc = call i32 @unknown_40972(i32 %v1_204d6)
  %v0_204e1 = load i32, i32* @ebp, align 4
  %v1_204e1 = add i32 %v0_204e1, -12
  %v2_204e1 = inttoptr i32 %v1_204e1 to i32*
  %v3_204e1 = load i32, i32* %v2_204e1, align 4
  %v3_204e4 = xor i32 %v3_204e1, ptrtoint ([3 x i8]* @3 to i32)
  %v4_204e4 = icmp eq i32 %v3_204e4, 0
  store i32 %v3_204e4, i32* @eax, align 8
  br i1 %v4_204e4, label %bb, label %dec_label_pc_204ed

bb:                                               ; preds = %dec_label_pc_204c2
  %v1_204eb = call i32 @function_2050b()
  store i32 %v1_204eb, i32* @eax, align 8
  br label %dec_label_pc_204ed

dec_label_pc_204ed:                               ; preds = %bb, %dec_label_pc_204c2
  %v0_204ed = call i32 @function_20506()
  ret i32 %v0_204ed
}

define i32 @function_204f0() local_unnamed_addr {
dec_label_pc_204f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_204f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_204f0
}

define i32 @function_20506() local_unnamed_addr {
dec_label_pc_20506:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2050b() local_unnamed_addr {
dec_label_pc_2050b:
  %v0_20510 = load i32, i32* @eax, align 8
  ret i32 %v0_20510
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20512:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2053a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2053a:
  %v0_2053a = load i32, i32* @eax, align 8
  %v3_2053a = xor i32 %v0_2053a, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_2053a
}

define i32 @_ZNK5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEj(i32 %arg1, i8 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2054a:
  %v2_2057a = call i32 @unknown_407f4(i32 %arg1)
  %v4_2057f = trunc i32 %v2_2057a to i8
  %v5_2057f = icmp eq i8 %v4_2057f, 0
  %v1_20581 = icmp eq i1 %v5_2057f, false
  br i1 %v1_20581, label %bb, label %dec_label_pc_20583

bb:                                               ; preds = %dec_label_pc_2054a
  %v2_20581 = call i32 @function_205a7()
  br label %dec_label_pc_20583

dec_label_pc_20583:                               ; preds = %bb, %dec_label_pc_2054a
  %v3_2059b = phi i32 [ %v2_20581, %bb ], [ %v2_2057a, %dec_label_pc_2054a ]
  ret i32 %v3_2059b
}

define i32 @function_205a7() local_unnamed_addr {
dec_label_pc_205a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_205a7 = load i32, i32* @ebp, align 4
  %v1_205a7 = add i32 %v0_205a7, -32
  store i32 %v1_205a7, i32* %eax.global-to-local, align 8
  %v1_205ad = call i32 @unknown_45478(i32 %v1_205a7)
  store i32 %v1_205ad, i32* %eax.global-to-local, align 8
  %v0_205b2 = load i32, i32* @ebp, align 4
  %v1_205b2 = add i32 %v0_205b2, -52
  %v2_205b2 = inttoptr i32 %v1_205b2 to i32*
  %v3_205b2 = load i32, i32* %v2_205b2, align 4
  store i32 %v3_205b2, i32* %eax.global-to-local, align 8
  %v1_205b5 = inttoptr i32 %v3_205b2 to i32*
  %v2_205b5 = load i32, i32* %v1_205b5, align 4
  store i32 %v2_205b5, i32* %eax.global-to-local, align 8
  %v2_205b7 = add i32 %v0_205b2, -32
  %v3_205b7 = inttoptr i32 %v2_205b7 to i32*
  store i32 %v2_205b5, i32* %v3_205b7, align 4
  %v0_205ba = load i32, i32* @ebp, align 4
  %v1_205ba = add i32 %v0_205ba, -20
  %v2_205ba = inttoptr i32 %v1_205ba to i32*
  store i32 0, i32* %v2_205ba, align 4
  %v0_205c1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_205c1
}

define i32 @function_205c6() local_unnamed_addr {
dec_label_pc_205c6:
  %v0_205c6 = load i32, i32* @ebp, align 4
  %v1_205c6 = add i32 %v0_205c6, -32
  %v1_205cc = call i32 @unknown_45536(i32 %v1_205c6)
  %v1_205d4 = call i32 @unknown_45568(i32 %v1_205cc)
  %v0_205dd = load i32, i32* @ebp, align 4
  %v1_205dd = add i32 %v0_205dd, -24
  store i32 %v1_205dd, i32* @eax, align 8
  %v2_205e3 = call i32 @function_310b4(i32 %v1_205dd, i32 %v1_205d4)
  %v0_205e8 = load i32, i32* @ebp, align 4
  %v1_205e8 = add i32 %v0_205e8, -48
  %v2_205e8 = inttoptr i32 %v1_205e8 to i8*
  %v3_205e8 = load i8, i8* %v2_205e8, align 1
  %v10_205e8 = icmp eq i8 %v3_205e8, 0
  br i1 %v10_205e8, label %dec_label_pc_20609, label %dec_label_pc_205ee

dec_label_pc_205ee:                               ; preds = %dec_label_pc_205c6
  %v1_205ee = add i32 %v0_205e8, -32
  %v1_205f4 = call i32 @unknown_45536(i32 %v1_205ee)
  %v1_205fc = call i32 @unknown_3893e(i32 %v1_205f4)
  %v1_20604 = call i32 @unknown_455c4(i32 %v1_205fc)
  %v0_20609.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_20609

dec_label_pc_20609:                               ; preds = %dec_label_pc_205ee, %dec_label_pc_205c6
  %v0_20609 = phi i32 [ %v0_20609.pre, %dec_label_pc_205ee ], [ %v0_205e8, %dec_label_pc_205c6 ]
  %v1_20609 = add i32 %v0_20609, -32
  %v1_2060f = call i32 @unknown_45536(i32 %v1_20609)
  %v1_20617 = call i32 @unknown_3893e(i32 %v1_2060f)
  %v1_2061f = call i32 @__stack_chk_fail.1083(i32 %v1_20617)
  %v1_20624 = trunc i32 %v1_2061f to i8
  %v2_20624 = load i32, i32* @ebp, align 4
  %v3_20624 = add i32 %v2_20624, -13
  %v4_20624 = inttoptr i32 %v3_20624 to i8*
  store i8 %v1_20624, i8* %v4_20624, align 1
  %v0_20627 = load i32, i32* @ebp, align 4
  %v1_20627 = add i32 %v0_20627, -24
  store i32 %v1_20627, i32* @eax, align 8
  %v1_2062d = call i32 @function_3112c(i32 %v1_20627)
  %v0_20632 = load i32, i32* @ebp, align 4
  %v1_20632 = add i32 %v0_20632, -13
  %v2_20632 = inttoptr i32 %v1_20632 to i8*
  %v3_20632 = load i8, i8* %v2_20632, align 1
  %v5_20639 = icmp eq i8 %v3_20632, 1
  %v1_20694 = add i32 %v0_20632, -32
  br i1 %v5_20639, label %dec_label_pc_20694, label %dec_label_pc_2063d

dec_label_pc_2063d:                               ; preds = %dec_label_pc_20609
  %v1_20643 = call i32 @unknown_45536(i32 %v1_20694)
  %v1_2064b = call i32 @unknown_3893e(i32 %v1_20643)
  %v1_20653 = call i32 @unknown_45610(i32 %v1_2064b)
  store i32 %v1_20653, i32* @ebx, align 8
  %v0_2065a = load i32, i32* @ebp, align 4
  %v1_2065a = add i32 %v0_2065a, -44
  %v2_2065a = inttoptr i32 %v1_2065a to i32*
  %v3_2065a = load i32, i32* %v2_2065a, align 4
  %v1_20660 = call i32 @unknown_3874c(i32 %v3_2065a)
  %v1_20668 = call i32 @unknown_387a8(i32 %v1_20660)
  %v0_2066f = load i32, i32* @ebp, align 4
  %v1_2066f = add i32 %v0_2066f, -60
  %v1_20672 = add i32 %v0_2066f, -32
  %v0_20679 = load i32, i32* @ebx, align 8
  %v4_20684 = call i32 @unknown_45640(i32 %v1_2066f, i32 %v1_20668, i32 %v0_20679, i32 %v1_20672)
  %v0_2068c = load i32, i32* @ebp, align 4
  %v1_2068c = add i32 %v0_2068c, -60
  %v2_2068c = inttoptr i32 %v1_2068c to i32*
  %v3_2068c = load i32, i32* %v2_2068c, align 4
  %v2_2068f = add i32 %v0_2068c, -32
  %v3_2068f = inttoptr i32 %v2_2068f to i32*
  store i32 %v3_2068c, i32* %v3_2068f, align 4
  br label %dec_label_pc_2069f

dec_label_pc_20694:                               ; preds = %dec_label_pc_20609
  %v1_2069a = call i32 @unknown_45840(i32 %v1_20694)
  br label %dec_label_pc_2069f

dec_label_pc_2069f:                               ; preds = %dec_label_pc_20694, %dec_label_pc_2063d
  %v0_2069f = load i32, i32* @ebp, align 4
  %v1_2069f = add i32 %v0_2069f, -20
  %v2_2069f = inttoptr i32 %v1_2069f to i32*
  %v3_2069f = load i32, i32* %v2_2069f, align 4
  %v4_2069f = add i32 %v3_2069f, 1
  store i32 %v4_2069f, i32* %v2_2069f, align 4
  %v0_206a3 = load i32, i32* @ebp, align 4
  %v1_206a3 = add i32 %v0_206a3, -44
  %v2_206a3 = inttoptr i32 %v1_206a3 to i32*
  %v3_206a3 = load i32, i32* %v2_206a3, align 4
  %v1_206a9 = call i32 @unknown_3874c(i32 %v3_206a3)
  %v1_206b1 = call i32 @unknown_387a8(i32 %v1_206a9)
  ret i32 %v1_206b1

; uselistorder directives
  uselistorder i32 %v1_20694, { 1, 0 }
  uselistorder i32 (i32)* @unknown_387a8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3874c, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3893e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_45536, { 3, 2, 1, 0 }
}

define i32 @function_206ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_206ba:
  %v0_206bd = load i32, i32* @eax, align 8
  %v11_206bd = and i32 %v0_206bd, -252
  %v1_206c2 = call i32 @unknown_454ac(i32 %v11_206bd)
  %v0_206ca = load i32, i32* @ebp, align 4
  %v1_206ca = add i32 %v0_206ca, -28
  %v1_206d1 = add i32 %v0_206ca, -32
  %v2_206d7 = call i32 @unknown_454f6(i32 %v1_206d1, i32 %v1_206ca)
  %v4_206dc = trunc i32 %v2_206d7 to i8
  %v5_206dc = icmp eq i8 %v4_206dc, 0
  br i1 %v5_206dc, label %dec_label_pc_206f5, label %dec_label_pc_206e0

dec_label_pc_206e0:                               ; preds = %dec_label_pc_206ba
  %v0_206e0 = load i32, i32* @ebp, align 4
  %v1_206e0 = add i32 %v0_206e0, -56
  %v2_206e0 = inttoptr i32 %v1_206e0 to i32*
  %v3_206e0 = load i32, i32* %v2_206e0, align 4
  %v10_206e0 = icmp eq i32 %v3_206e0, 0
  br i1 %v10_206e0, label %dec_label_pc_206fa, label %dec_label_pc_206e6

dec_label_pc_206e6:                               ; preds = %dec_label_pc_206e0
  %v1_206e6 = add i32 %v0_206e0, -20
  %v2_206e6 = inttoptr i32 %v1_206e6 to i32*
  %v3_206e6 = load i32, i32* %v2_206e6, align 4
  %v4_206e9 = load i32, i32* %v2_206e0, align 4
  %v10_206e9 = icmp ult i32 %v3_206e6, %v4_206e9
  %v1_206ec = icmp eq i1 %v10_206e9, false
  br i1 %v1_206ec, label %dec_label_pc_206f5, label %dec_label_pc_206fa

dec_label_pc_206f5:                               ; preds = %dec_label_pc_206e6, %dec_label_pc_206ba
  br label %dec_label_pc_206fa

dec_label_pc_206fa:                               ; preds = %dec_label_pc_206e0, %dec_label_pc_206e6, %dec_label_pc_206f5
  %storemerge = phi i1 [ false, %dec_label_pc_206f5 ], [ true, %dec_label_pc_206e6 ], [ true, %dec_label_pc_206e0 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_20702

bb:                                               ; preds = %dec_label_pc_206fa
  %v2_206fc = call i32 @function_205c6()
  br label %dec_label_pc_20702

dec_label_pc_20702:                               ; preds = %bb, %dec_label_pc_206fa
  %v0_20702 = load i32, i32* @ebp, align 4
  %v1_20702 = add i32 %v0_20702, -44
  %v2_20702 = inttoptr i32 %v1_20702 to i32*
  %v3_20702 = load i32, i32* %v2_20702, align 4
  %v1_20705 = add i32 %v0_20702, -32
  %v2_20705 = inttoptr i32 %v1_20705 to i32*
  %v3_20705 = load i32, i32* %v2_20705, align 4
  %v2_20708 = add i32 %v3_20702, 8
  %v3_20708 = inttoptr i32 %v2_20708 to i32*
  store i32 %v3_20705, i32* %v3_20708, align 4
  %v0_2070b = load i32, i32* @ebp, align 4
  %v1_2070b = add i32 %v0_2070b, -12
  %v2_2070b = inttoptr i32 %v1_2070b to i32*
  %v3_2070b = load i32, i32* %v2_2070b, align 4
  %v3_2070e = xor i32 %v3_2070b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2070e = icmp eq i32 %v3_2070e, 0
  store i32 %v3_2070e, i32* @eax, align 8
  br i1 %v4_2070e, label %bb6, label %dec_label_pc_20717

bb6:                                              ; preds = %dec_label_pc_20702
  %v1_20715 = call i32 @function_20735()
  store i32 %v1_20715, i32* @eax, align 8
  br label %dec_label_pc_20717

dec_label_pc_20717:                               ; preds = %bb6, %dec_label_pc_20702
  %v0_20717 = call i32 @function_20730()
  ret i32 %v0_20717

; uselistorder directives
  uselistorder label %dec_label_pc_206fa, { 2, 1, 0 }
}

define i32 @function_2071a() local_unnamed_addr {
dec_label_pc_2071a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2071a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2071a
}

define i32 @function_20730() local_unnamed_addr {
dec_label_pc_20730:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20735() local_unnamed_addr {
dec_label_pc_20735:
  %v0_20735 = load i32, i32* @ebp, align 4
  %v1_20735 = add i32 %v0_20735, -4
  %v2_20735 = inttoptr i32 %v1_20735 to i32*
  %v3_20735 = load i32, i32* %v2_20735, align 4
  store i32 %v3_20735, i32* @ebx, align 8
  %v0_20739 = load i32, i32* @eax, align 8
  ret i32 %v0_20739
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE5beginEv() local_unnamed_addr {
dec_label_pc_2073a:
  %eax.global-to-local = alloca i32, align 4
  %v2_2073b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2073b
}

define i32 @function_2073e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2073e:
  %v4_2073f = load i32, i32* @ecx, align 4
  %v0_20747 = load i32, i32* @ebp, align 4
  %v1_2074a = add i32 %v0_20747, 2
  store i32 %v1_2074a, i32* @ebp, align 4
  %v1_2074b = add i32 %v4_2073f, -1
  store i32 %v1_2074b, i32* @ecx, align 4
  %v2_20752 = add i32 %v0_20747, -10
  %v3_20752 = inttoptr i32 %v2_20752 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_20752, align 4
  %v0_20757 = load i32, i32* @ebp, align 4
  %v1_20757 = add i32 %v0_20757, -32
  %v2_20757 = inttoptr i32 %v1_20757 to i32*
  %v3_20757 = load i32, i32* %v2_20757, align 4
  %v1_2075a = add i32 %v0_20757, -28
  %v2_2075a = inttoptr i32 %v1_2075a to i32*
  %v3_2075a = load i32, i32* %v2_2075a, align 4
  %v2_20764 = call i32 @unknown_45a6a(i32 %v3_2075a, i32 %v3_20757)
  %v0_2076c = load i32, i32* @ebp, align 4
  %v1_2076c = add i32 %v0_2076c, -28
  %v2_2076c = inttoptr i32 %v1_2076c to i32*
  %v3_2076c = load i32, i32* %v2_2076c, align 4
  store i32 %v3_2076c, i32* @eax, align 8
  %v1_2076f = add i32 %v0_2076c, -12
  %v2_2076f = inttoptr i32 %v1_2076f to i32*
  %v3_2076f = load i32, i32* %v2_2076f, align 4
  %v4_20772 = icmp eq i32 %v3_2076f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20772, label %bb, label %dec_label_pc_2077b

bb:                                               ; preds = %dec_label_pc_2073e
  %v1_20779 = call i32 @function_20780()
  br label %dec_label_pc_2077b

dec_label_pc_2077b:                               ; preds = %bb, %dec_label_pc_2073e
  %v3_20779 = phi i32 [ %v1_20779, %bb ], [ %v3_2076c, %dec_label_pc_2073e ]
  ret i32 %v3_20779
}

define i32 @function_20780() local_unnamed_addr {
dec_label_pc_20780:
  %v0_20781 = load i32, i32* @eax, align 8
  ret i32 %v0_20781
}

define i32 @_ZNK5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE26nolock_cleanup_connectionsEbj(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20784:
  %v1_207ad = call i32 @unknown_40a2e(i32 %arg1)
  ret i32 %v1_207ad
}

define i32 @function_207d9() local_unnamed_addr {
dec_label_pc_207d9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_207d9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_207d9 = add i32 %v0_207d9, 76147781
  %v2_207d9 = inttoptr i32 %v1_207d9 to i32*
  %v3_207d9 = load i32, i32* %v2_207d9, align 4
  %v4_207d9 = add i32 %v3_207d9, -1
  store i32 %v4_207d9, i32* %v2_207d9, align 4
  %v0_207df = load i32, i32* %eax.global-to-local, align 8
  %v1_207df = trunc i32 %v0_207df to i8
  %v2_207df = and i8 %v1_207df, -24
  %v8_207df = zext i8 %v2_207df to i32
  %v10_207df = and i32 %v0_207df, -256
  %v11_207df = or i32 %v8_207df, %v10_207df
  store i32 %v11_207df, i32* %eax.global-to-local, align 8
  %v3_207e3 = inttoptr i32 %v11_207df to i8*
  %v4_207e3 = load i8, i8* %v3_207e3, align 8
  %v5_207e3 = add i8 %v4_207e3, %v2_207df
  %v20_207e3 = zext i8 %v5_207e3 to i32
  %v23_207e3 = or i32 %v20_207e3, %v10_207df
  store i32 %v23_207e3, i32* %eax.global-to-local, align 8
  %v0_207e5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_207e5 = add i32 %v0_207e5, -28
  %v2_207e5 = inttoptr i32 %v1_207e5 to i32*
  %v3_207e5 = load i32, i32* %v2_207e5, align 4
  store i32 %v3_207e5, i32* %eax.global-to-local, align 8
  %v1_207eb = call i32 @unknown_38986(i32 %v3_207e5)
  store i32 %v1_207eb, i32* %eax.global-to-local, align 8
  %v1_207f3 = call i32 @unknown_389e2(i32 %v1_207eb)
  %v0_207fa = load i32, i32* %ebp.global-to-local, align 4
  %v1_207fa = add i32 %v0_207fa, -16
  store i32 %v1_207fa, i32* %eax.global-to-local, align 8
  %v2_20804 = call i32 @unknown_456e6(i32 %v1_207fa, i32 %v1_207f3)
  store i32 %v2_20804, i32* %eax.global-to-local, align 8
  %v1_2080c = add i32 %v0_207fa, -28
  %v2_2080c = inttoptr i32 %v1_2080c to i32*
  %v3_2080c = load i32, i32* %v2_2080c, align 4
  %v1_2080f = add i32 %v3_2080c, 8
  %v1_20812 = add i32 %v0_207fa, -16
  store i32 %v1_20812, i32* %eax.global-to-local, align 8
  %v2_2081c = call i32 @unknown_45afe(i32 %v1_2080f, i32 %v1_20812)
  store i32 %v2_2081c, i32* %eax.global-to-local, align 8
  %v4_20821 = trunc i32 %v2_2081c to i8
  %v5_20821 = icmp eq i8 %v4_20821, 0
  %v0_20854 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20854 = add i32 %v0_20854, -28
  %v2_20854 = inttoptr i32 %v1_20854 to i32*
  %v3_20854 = load i32, i32* %v2_20854, align 4
  store i32 %v3_20854, i32* %eax.global-to-local, align 8
  br i1 %v5_20821, label %dec_label_pc_20854, label %dec_label_pc_20825

dec_label_pc_20825:                               ; preds = %dec_label_pc_207d9
  %v1_2082b = call i32 @unknown_38986(i32 %v3_20854)
  store i32 %v1_2082b, i32* %eax.global-to-local, align 8
  %v1_20833 = call i32 @unknown_389e2(i32 %v1_2082b)
  %v0_2083a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2083a = add i32 %v0_2083a, -40
  store i32 %v1_2083a, i32* %eax.global-to-local, align 8
  %v2_20844 = call i32 @unknown_40ebe(i32 %v1_2083a, i32 %v1_20833)
  store i32 %v2_20844, i32* %eax.global-to-local, align 8
  %v1_2084c = add i32 %v0_2083a, -40
  %v2_2084c = inttoptr i32 %v1_2084c to i32*
  %v3_2084c = load i32, i32* %v2_2084c, align 4
  store i32 %v3_2084c, i32* %eax.global-to-local, align 8
  %v2_2084f = add i32 %v0_2083a, -20
  %v3_2084f = inttoptr i32 %v2_2084f to i32*
  store i32 %v3_2084c, i32* %v3_2084f, align 4
  br label %dec_label_pc_2085d

dec_label_pc_20854:                               ; preds = %dec_label_pc_207d9
  %v1_20857 = add i32 %v3_20854, 8
  %v2_20857 = inttoptr i32 %v1_20857 to i32*
  %v3_20857 = load i32, i32* %v2_20857, align 4
  store i32 %v3_20857, i32* %eax.global-to-local, align 8
  %v2_2085a = add i32 %v0_20854, -20
  %v3_2085a = inttoptr i32 %v2_2085a to i32*
  store i32 %v3_20857, i32* %v3_2085a, align 4
  br label %dec_label_pc_2085d

dec_label_pc_2085d:                               ; preds = %dec_label_pc_20854, %dec_label_pc_20825
  %v0_2085d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2085d = add i32 %v0_2085d, -32
  %v2_2085d = inttoptr i32 %v1_2085d to i8*
  %v3_2085d = load i8, i8* %v2_2085d, align 1
  %v4_2085d = zext i8 %v3_2085d to i32
  store i32 %v4_2085d, i32* %eax.global-to-local, align 8
  ret i32 %v4_2085d

; uselistorder directives
  uselistorder i32 %v0_2083a, { 1, 0, 2 }
  uselistorder i32 %v3_20854, { 1, 0, 2 }
  uselistorder i32 %v0_207fa, { 1, 0, 2 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i32)* @unknown_389e2, { 1, 0 }
  uselistorder i32 (i32)* @unknown_38986, { 1, 0 }
}

define i32 @function_20864(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20864:
  %v0_20864 = load i32, i32* @edx, align 8
  %v0_20868 = load i32, i32* @ebp, align 4
  %v1_20868 = add i32 %v0_20868, -20
  %v0_2086f = load i32, i32* @eax, align 8
  %v1_20873 = add i32 %v0_20868, -28
  %v2_20873 = inttoptr i32 %v1_20873 to i32*
  %v3_20873 = load i32, i32* %v2_20873, align 4
  %v4_20879 = call i32 @unknown_40cce(i32 %v3_20873, i32 %v0_2086f, i32 %v1_20868, i32 %v0_20864)
  %v0_2087e = load i32, i32* @ebp, align 4
  %v1_2087e = add i32 %v0_2087e, -12
  %v2_2087e = inttoptr i32 %v1_2087e to i32*
  %v3_2087e = load i32, i32* %v2_2087e, align 4
  %v3_20881 = xor i32 %v3_2087e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_20881 = icmp eq i32 %v3_20881, 0
  store i32 %v3_20881, i32* @eax, align 8
  br i1 %v4_20881, label %bb, label %dec_label_pc_2088a

bb:                                               ; preds = %dec_label_pc_20864
  %v1_20888 = call i32 @function_2088f()
  br label %dec_label_pc_2088a

dec_label_pc_2088a:                               ; preds = %bb, %dec_label_pc_20864
  %v2_20888 = phi i32 [ %v1_20888, %bb ], [ %v3_20881, %dec_label_pc_20864 ]
  ret i32 %v2_20888
}

define i32 @function_2088f() local_unnamed_addr {
dec_label_pc_2088f:
  %v0_20890 = load i32, i32* @eax, align 8
  ret i32 %v0_20890
}

define i32 @_ZN5boost8functionIFvRKSsEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20892:
  %v2_208bc = call i32 @unknown_45c4c(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_208cd

bb:                                               ; preds = %dec_label_pc_20892
  %v1_208cb = call i32 @function_208d2()
  br label %dec_label_pc_208cd

dec_label_pc_208cd:                               ; preds = %bb, %dec_label_pc_20892
  %v2_208cb = phi i32 [ %v1_208cb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_20892 ]
  ret i32 %v2_208cb
}

define i32 @function_208d2() local_unnamed_addr {
dec_label_pc_208d2:
  %v0_208d3 = load i32, i32* @eax, align 8
  ret i32 %v0_208d3
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1IvRKSsNS_8functionIFvSD_EEEEENS3_5mutexEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_208d4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_20906() local_unnamed_addr {
dec_label_pc_20906:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20906 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20906 = add i32 %v0_20906, -532313149
  %v2_20906 = inttoptr i32 %v1_20906 to i32*
  %v3_20906 = load i32, i32* %v2_20906, align 4
  %v4_20906 = add i32 %v3_20906, -1
  store i32 %v4_20906, i32* %v2_20906, align 4
  %v0_2090c = load i32, i32* %eax.global-to-local, align 8
  %v0_20910 = load i32, i32* %ebx.global-to-local, align 8
  %v2_20913 = call i32 @unknown_45ce6(i32 %v0_20910, i32 %v0_2090c)
  store i32 %v2_20913, i32* %eax.global-to-local, align 8
  %v0_20918 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20918 = add i32 %v0_20918, -28
  %v2_20918 = inttoptr i32 %v1_20918 to i32*
  %v3_20918 = load i32, i32* %v2_20918, align 4
  store i32 %v3_20918, i32* %eax.global-to-local, align 8
  %v0_2091b = load i32, i32* %ebx.global-to-local, align 8
  %v2_2091b = inttoptr i32 %v3_20918 to i32*
  store i32 %v0_2091b, i32* %v2_2091b, align 4
  %v0_2091d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2091d = add i32 %v0_2091d, -12
  %v2_2091d = inttoptr i32 %v1_2091d to i32*
  %v3_2091d = load i32, i32* %v2_2091d, align 4
  %v3_20920 = xor i32 %v3_2091d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_20920 = icmp eq i32 %v3_20920, 0
  store i32 %v3_20920, i32* @eax, align 8
  br i1 %v4_20920, label %bb, label %dec_label_pc_20929

bb:                                               ; preds = %dec_label_pc_20906
  %v1_20927 = call i32 @function_20959()
  store i32 %v1_20927, i32* @eax, align 8
  br label %dec_label_pc_20929

dec_label_pc_20929:                               ; preds = %bb, %dec_label_pc_20906
  %v0_20929 = call i32 @function_20954()
  store i32 %v0_20929, i32* %eax.global-to-local, align 8
  ret i32 %v0_20929
}

define i32 @function_2092c() local_unnamed_addr {
dec_label_pc_2092c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2092c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2092c
}

define i32 @function_20954() local_unnamed_addr {
dec_label_pc_20954:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20959() local_unnamed_addr {
dec_label_pc_20959:
  %v0_2095e = load i32, i32* @eax, align 8
  ret i32 %v0_2095e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20960:
  %v1_20980 = add i32 %arg2, 4
  %v2_2098d = call i32 @unknown_45e02(i32 %arg1, i32 %v1_20980)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20996(i32 %arg1) local_unnamed_addr {
dec_label_pc_20996:
  %v0_20998 = load i32, i32* @edx, align 8
  %v4_20998 = icmp eq i32 %v0_20998, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20998, label %bb, label %dec_label_pc_20996.dec_label_pc_209a1_crit_edge

dec_label_pc_20996.dec_label_pc_209a1_crit_edge:  ; preds = %dec_label_pc_20996
  %v2_2099f.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_209a1

bb:                                               ; preds = %dec_label_pc_20996
  %v1_2099f = call i32 @function_209a6()
  br label %dec_label_pc_209a1

dec_label_pc_209a1:                               ; preds = %dec_label_pc_20996.dec_label_pc_209a1_crit_edge, %bb
  %v2_2099f = phi i32 [ %v2_2099f.pre, %dec_label_pc_20996.dec_label_pc_209a1_crit_edge ], [ %v1_2099f, %bb ]
  ret i32 %v2_2099f

; uselistorder directives
  uselistorder label %dec_label_pc_209a1, { 1, 0 }
}

define i32 @function_209a6() local_unnamed_addr {
dec_label_pc_209a6:
  %v0_209a7 = load i32, i32* @eax, align 8
  ret i32 %v0_209a7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11upper_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_209aa:
  %v1_209d4 = call i32 @unknown_45eb4(i32 %arg2)
  %v1_209e1 = call i32 @unknown_45e84(i32 %arg2)
  %v5_20a02 = call i32 @unknown_45ee4(i32 %arg1, i32 %arg2, i32 %v1_209e1, i32 %v1_209d4, i32 %arg3)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20a0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a0e:
  %v0_20a10 = load i32, i32* @edx, align 8
  %v4_20a10 = icmp eq i32 %v0_20a10, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20a10, label %bb, label %dec_label_pc_20a0e.dec_label_pc_20a19_crit_edge

dec_label_pc_20a0e.dec_label_pc_20a19_crit_edge:  ; preds = %dec_label_pc_20a0e
  %v2_20a17.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_20a19

bb:                                               ; preds = %dec_label_pc_20a0e
  %v1_20a17 = call i32 @function_20a1e()
  br label %dec_label_pc_20a19

dec_label_pc_20a19:                               ; preds = %dec_label_pc_20a0e.dec_label_pc_20a19_crit_edge, %bb
  %v2_20a17 = phi i32 [ %v2_20a17.pre, %dec_label_pc_20a0e.dec_label_pc_20a19_crit_edge ], [ %v1_20a17, %bb ]
  ret i32 %v2_20a17

; uselistorder directives
  uselistorder label %dec_label_pc_20a19, { 1, 0 }
}

define i32 @function_20a1e() local_unnamed_addr {
dec_label_pc_20a1e:
  %v0_20a22 = load i32, i32* @eax, align 8
  ret i32 %v0_20a22
}

define i32 @function_20a20(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a20:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_20a24(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a24:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a26:
  %v1_20a46 = inttoptr i32 %arg2 to i32*
  %v2_20a46 = load i32, i32* %v1_20a46, align 4
  store i32 %v2_20a46, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20a59

bb:                                               ; preds = %dec_label_pc_20a26
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_20a57 = call i32 @function_20a5e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_20a59

dec_label_pc_20a59:                               ; preds = %bb, %dec_label_pc_20a26
  %v4_20a57 = phi i32 [ %v3_20a57, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_20a26 ]
  ret i32 %v4_20a57

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_20a5e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a5e:
  %v0_20a5f = load i32, i32* @eax, align 8
  ret i32 %v0_20a5f
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20a60:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v1_20a8a = call i32 @unknown_4598e(i32 %tmp111)
  %v1_20a92 = add i32 %arg2, 8
  %v2_20a95 = ptrtoint i32* %stack_var_-24 to i32
  %v2_20a9f = call i32 @unknown_3d1ae(i32 %v2_20a95, i32 %v1_20a92)
  %v2_20aae = ptrtoint i32* %stack_var_-20 to i32
  %v2_20ab4 = call i32 @unknown_41486(i32 %v2_20aae, i32 %v2_20a95)
  %v2_20ac6 = call i32 @unknown_4604c(i32 %arg3, i32 %v2_20aae)
  %v4_20acb = trunc i32 %v2_20ac6 to i8
  %v5_20acb = icmp eq i8 %v4_20acb, 0
  br i1 %v5_20acb, label %dec_label_pc_20aee, label %dec_label_pc_20acf

dec_label_pc_20acf:                               ; preds = %dec_label_pc_20a60
  %v2_20ad5 = ptrtoint i32* %stack_var_-44 to i32
  %v2_20adf = call i32 @unknown_4608c(i32 %v2_20ad5, i32 %arg2)
  br label %dec_label_pc_20b03

dec_label_pc_20aee:                               ; preds = %dec_label_pc_20a60
  %v1_20af4 = call i32 @unknown_460d4(i32 %arg3)
  %v1_20afe = add i32 %v1_20af4, 12
  %v2_20afe = inttoptr i32 %v1_20afe to i32*
  br label %dec_label_pc_20b03

dec_label_pc_20b03:                               ; preds = %dec_label_pc_20aee, %dec_label_pc_20acf
  %storemerge.in = phi i32* [ %stack_var_-44, %dec_label_pc_20acf ], [ %v2_20afe, %dec_label_pc_20aee ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %arg1, align 4
  store i32 %tmp111, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20b12

bb:                                               ; preds = %dec_label_pc_20b03
  %v1_20b10 = call i32 @function_20b17()
  br label %dec_label_pc_20b12

dec_label_pc_20b12:                               ; preds = %bb, %dec_label_pc_20b03
  %v2_20b10 = phi i32 [ %v1_20b10, %bb ], [ %tmp111, %dec_label_pc_20b03 ]
  ret i32 %v2_20b10
}

define i32 @function_20b17() local_unnamed_addr {
dec_label_pc_20b17:
  %v0_20b1b = load i32, i32* @eax, align 8
  ret i32 %v0_20b1b
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE6insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20b1e:
  ret i32 %arg3
}

define i32 @function_20b93() local_unnamed_addr {
dec_label_pc_20b93:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20b93 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20b93 = add i32 %v0_20b93, -1
  store i32 %v1_20b93, i32* %ecx.global-to-local, align 4
  %v0_20b95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20b95
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE17weakly_equivalentERKSB_SO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b98:
  ret i32 %arg1
}

define i32 @function_20ba2(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ba2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_20ba2 = load i32, i32* @ebp, align 4
  %v0_20ba6 = load i32, i32* @eax, align 8
  %v2_20ba6 = or i32 %v0_20ba6, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_20ba6, i32* %eax.global-to-local, align 8
  %v0_20ba9 = load i32, i32* @ecx, align 4
  %v1_20ba9 = add i32 %v0_20ba9, 255
  %v1_20bab = add i32 %v0_20ba2, 4
  store i32 %v1_20bab, i32* @ebp, align 4
  %v1_20bac = add i32 %v0_20ba9, -1587159996
  %v2_20bac = inttoptr i32 %v1_20bac to i8*
  %v3_20bac = load i8, i8* %v2_20bac, align 1
  %v5_20bac = trunc i32 %v1_20ba9 to i8
  %v8_20bac = add i8 %v3_20bac, %v5_20bac
  %v28_20bac = icmp ult i8 %v8_20bac, %v3_20bac
  store i1 %v28_20bac, i1* %cf.global-to-local, align 1
  store i8 %v8_20bac, i8* %v2_20bac, align 1
  %v0_20bb2 = load i32, i32* %eax.global-to-local, align 8
  %v1_20bb2 = trunc i32 %v0_20bb2 to i8
  %v2_20bb2 = load i1, i1* %cf.global-to-local, align 1
  %v3_20bb2 = zext i1 %v2_20bb2 to i8
  %v4_20bb2 = add i8 %v3_20bb2, %v1_20bb2
  %v19_20bb2 = icmp ule i8 %v4_20bb2, %v1_20bb2
  %v21_20bb2 = icmp eq i1 %v2_20bb2, %v19_20bb2
  store i1 %v21_20bb2, i1* %cf.global-to-local, align 1
  %v22_20bb2 = zext i8 %v4_20bb2 to i32
  %v24_20bb2 = and i32 %v0_20bb2, -256
  %v25_20bb2 = or i32 %v22_20bb2, %v24_20bb2
  store i32 %v25_20bb2, i32* %eax.global-to-local, align 8
  %v1_20bb4 = inttoptr i32 %v25_20bb2 to i8*
  %v2_20bb4 = load i8, i8* %v1_20bb4, align 1
  %v5_20bb4 = add i8 %v2_20bb4, %v4_20bb2
  store i8 %v5_20bb4, i8* %v1_20bb4, align 1
  %v0_20bb6 = load i32, i32* %eax.global-to-local, align 8
  %v1_20bb6 = load i32, i32* @ebp, align 4
  %v2_20bb6 = add i32 %v1_20bb6, -12
  %v3_20bb6 = inttoptr i32 %v2_20bb6 to i32*
  store i32 %v0_20bb6, i32* %v3_20bb6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_20bbb = load i32, i32* @ebp, align 4
  %v1_20bbb = add i32 %v0_20bbb, -28
  %v2_20bbb = inttoptr i32 %v1_20bbb to i32*
  %v3_20bbb = load i32, i32* %v2_20bbb, align 4
  store i32 %v3_20bbb, i32* %eax.global-to-local, align 8
  %v1_20bbe = add i32 %v3_20bbb, 32
  %v1_20bc1 = add i32 %v0_20bbb, -36
  %v2_20bc1 = inttoptr i32 %v1_20bc1 to i32*
  %v3_20bc1 = load i32, i32* %v2_20bc1, align 4
  store i32 %v3_20bc1, i32* %eax.global-to-local, align 8
  %v1_20bc8 = add i32 %v0_20bbb, -32
  %v2_20bc8 = inttoptr i32 %v1_20bc8 to i32*
  %v3_20bc8 = load i32, i32* %v2_20bc8, align 4
  store i32 %v3_20bc8, i32* %eax.global-to-local, align 8
  %v3_20bd2 = call i32 @unknown_422d8(i32 %v1_20bbe, i32 %v3_20bc8, i32 %v3_20bc1)
  store i32 %v3_20bd2, i32* %eax.global-to-local, align 8
  %v4_20bd7 = trunc i32 %v3_20bd2 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_20bd7 = icmp eq i8 %v4_20bd7, 0
  br i1 %v5_20bd7, label %dec_label_pc_20be2, label %dec_label_pc_20bdb

dec_label_pc_20bdb:                               ; preds = %dec_label_pc_20ba2
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_20c0e

dec_label_pc_20be2:                               ; preds = %dec_label_pc_20ba2
  %v0_20be2 = load i32, i32* @ebp, align 4
  %v1_20be2 = add i32 %v0_20be2, -28
  %v2_20be2 = inttoptr i32 %v1_20be2 to i32*
  %v3_20be2 = load i32, i32* %v2_20be2, align 4
  store i32 %v3_20be2, i32* %eax.global-to-local, align 8
  %v1_20be5 = add i32 %v3_20be2, 32
  %v1_20be8 = add i32 %v0_20be2, -32
  %v2_20be8 = inttoptr i32 %v1_20be8 to i32*
  %v3_20be8 = load i32, i32* %v2_20be8, align 4
  store i32 %v3_20be8, i32* %eax.global-to-local, align 8
  %v1_20bef = add i32 %v0_20be2, -36
  %v2_20bef = inttoptr i32 %v1_20bef to i32*
  %v3_20bef = load i32, i32* %v2_20bef, align 4
  store i32 %v3_20bef, i32* %eax.global-to-local, align 8
  %v3_20bf9 = call i32 @unknown_422d8(i32 %v1_20be5, i32 %v3_20bef, i32 %v3_20be8)
  store i32 %v3_20bf9, i32* %eax.global-to-local, align 8
  %v4_20bfe = trunc i32 %v3_20bf9 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_20bfe = icmp eq i8 %v4_20bfe, 0
  br i1 %v5_20bfe, label %dec_label_pc_20c09, label %dec_label_pc_20c02

dec_label_pc_20c02:                               ; preds = %dec_label_pc_20be2
  store i32 0, i32* @eax, align 8
  br label %dec_label_pc_20c0e

dec_label_pc_20c09:                               ; preds = %dec_label_pc_20be2
  store i32 1, i32* @eax, align 8
  br label %dec_label_pc_20c0e

dec_label_pc_20c0e:                               ; preds = %dec_label_pc_20c09, %dec_label_pc_20c02, %dec_label_pc_20bdb
  %v2_20c184 = phi i32 [ 1, %dec_label_pc_20c09 ], [ 0, %dec_label_pc_20c02 ], [ 0, %dec_label_pc_20bdb ]
  %v0_20c0e = load i32, i32* @ebp, align 4
  %v1_20c0e = add i32 %v0_20c0e, -12
  %v2_20c0e = inttoptr i32 %v1_20c0e to i32*
  %v3_20c0e = load i32, i32* %v2_20c0e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_20c11 = icmp eq i32 %v3_20c0e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20c11, label %bb, label %dec_label_pc_20c1a

bb:                                               ; preds = %dec_label_pc_20c0e
  %v1_20c18 = call i32 @function_20c1f()
  store i32 %v1_20c18, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20c1a

dec_label_pc_20c1a:                               ; preds = %bb, %dec_label_pc_20c0e
  %v2_20c18 = phi i32 [ %v1_20c18, %bb ], [ %v2_20c184, %dec_label_pc_20c0e ]
  ret i32 %v2_20c18

; uselistorder directives
  uselistorder i32 %v0_20be2, { 1, 0, 2 }
  uselistorder i32 %v0_20bbb, { 1, 0, 2 }
  uselistorder i8 %v4_20bb2, { 0, 2, 1 }
  uselistorder i8 %v1_20bb2, { 1, 0 }
  uselistorder i8 %v3_20bac, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_422d8, { 1, 0 }
}

define i32 @function_20c1f() local_unnamed_addr {
dec_label_pc_20c1f:
  %v0_20c20 = load i32, i32* @eax, align 8
  ret i32 %v0_20c20
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20c22:
  %v2_20c3c = load i32, i32* %arg1, align 4
  %v1_20c3e = add i32 %v2_20c3c, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_20c44 = call i32 @unknown_463d6(i32 %v1_20c3e)
  store i32 %v1_20c44, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20c55

bb:                                               ; preds = %dec_label_pc_20c22
  %v1_20c53 = call i32 @function_20c5a()
  br label %dec_label_pc_20c55

dec_label_pc_20c55:                               ; preds = %bb, %dec_label_pc_20c22
  %v2_20c53 = phi i32 [ %v1_20c53, %bb ], [ %v1_20c44, %dec_label_pc_20c22 ]
  ret i32 %v2_20c53
}

define i32 @function_20c5a() local_unnamed_addr {
dec_label_pc_20c5a:
  %v0_20c5b = load i32, i32* @eax, align 8
  ret i32 %v0_20c5b
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEneERKSO_() local_unnamed_addr {
dec_label_pc_20c5c:
  %eax.global-to-local = alloca i32, align 4
  %v5_20c5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_20c5c
}

define i32 @function_20c5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c5e:
  %v0_20c61 = load i32, i32* @ebx, align 8
  %v1_20c61 = add i32 %v0_20c61, 1166608453
  %v2_20c61 = inttoptr i32 %v1_20c61 to i8*
  %v3_20c61 = load i8, i8* %v2_20c61, align 1
  %v4_20c61 = load i32, i32* @ecx, align 4
  %v5_20c61 = trunc i32 %v4_20c61 to i8
  %v6_20c61 = sub i8 %v3_20c61, %v5_20c61
  store i8 %v6_20c61, i8* %v2_20c61, align 1
  %v0_20c69 = load i32, i32* @ebp, align 4
  %v1_20c6c = add i32 %v0_20c69, 2
  store i32 %v1_20c6c, i32* @ebp, align 4
  %v2_20c74 = add i32 %v0_20c69, -10
  %v3_20c74 = inttoptr i32 %v2_20c74 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_20c74, align 4
  %v0_20c79 = load i32, i32* @ebp, align 4
  %v1_20c79 = add i32 %v0_20c79, -28
  %v2_20c79 = inttoptr i32 %v1_20c79 to i32*
  %v3_20c79 = load i32, i32* %v2_20c79, align 4
  %v1_20c7c = inttoptr i32 %v3_20c79 to i32*
  %v2_20c7c = load i32, i32* %v1_20c7c, align 4
  %v1_20c7e = add i32 %v0_20c79, -32
  %v2_20c7e = inttoptr i32 %v1_20c7e to i32*
  %v3_20c7e = load i32, i32* %v2_20c7e, align 4
  %v1_20c81 = inttoptr i32 %v3_20c7e to i32*
  %v2_20c81 = load i32, i32* %v1_20c81, align 4
  %v12_20c83 = icmp eq i32 %v2_20c7c, %v2_20c81
  %v1_20c85 = icmp eq i1 %v12_20c83, false
  %v2_20c85 = zext i1 %v1_20c85 to i32
  %v4_20c85 = and i32 %v2_20c81, -256
  %v5_20c85 = or i32 %v2_20c85, %v4_20c85
  store i32 %v5_20c85, i32* @eax, align 8
  %v1_20c88 = add i32 %v0_20c79, -12
  %v2_20c88 = inttoptr i32 %v1_20c88 to i32*
  %v3_20c88 = load i32, i32* %v2_20c88, align 4
  %v4_20c8b = icmp eq i32 %v3_20c88, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20c8b, label %bb, label %dec_label_pc_20c94

bb:                                               ; preds = %dec_label_pc_20c5e
  %v1_20c92 = call i32 @function_20c99()
  br label %dec_label_pc_20c94

dec_label_pc_20c94:                               ; preds = %bb, %dec_label_pc_20c5e
  %v3_20c92 = phi i32 [ %v1_20c92, %bb ], [ %v5_20c85, %dec_label_pc_20c5e ]
  ret i32 %v3_20c92

; uselistorder directives
  uselistorder i32 %v2_20c81, { 1, 0 }
}

define i32 @function_20c99() local_unnamed_addr {
dec_label_pc_20c99:
  %v0_20c9a = load i32, i32* @eax, align 8
  ret i32 %v0_20c9a
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5eraseESt17_Rb_tree_iteratorISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20c9c:
  ret i32 %arg1
}

define i32 @function_20cd2() local_unnamed_addr {
dec_label_pc_20cd2:
  %eax.global-to-local = alloca i32, align 4
  %v2_20cd2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_20cd2 = load i32, i32* %eax.global-to-local, align 8
  %v4_20cd2 = trunc i32 %v3_20cd2 to i8
  %v5_20cd2 = add i8 %v4_20cd2, %v2_20cd2
  %v21_20cd2 = inttoptr i32 %v3_20cd2 to i8*
  store i8 %v5_20cd2, i8* %v21_20cd2, align 1
  %v22_20cd2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_20cd2
}

define i32 @function_20cdb() local_unnamed_addr {
dec_label_pc_20cdb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_20cdb = load i32, i32* %ecx.global-to-local, align 4
  %v1_20cdb = add i32 %v0_20cdb, -1
  store i32 %v1_20cdb, i32* %ecx.global-to-local, align 4
  %v0_20cdd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_20cdd
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20cde:
  %v2_20cfe = load i32, i32* %arg1, align 4
  %v1_20d03 = inttoptr i32 %arg2 to i32*
  %v2_20d03 = load i32, i32* %v1_20d03, align 4
  %v12_20d05 = icmp eq i32 %v2_20cfe, %v2_20d03
  %v1_20d07 = zext i1 %v12_20d05 to i32
  %v3_20d07 = and i32 %v2_20d03, -256
  %v4_20d07 = or i32 %v1_20d07, %v3_20d07
  store i32 %v4_20d07, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20d16

bb:                                               ; preds = %dec_label_pc_20cde
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_20d14 = call i32 @function_20d1b(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_20d16

dec_label_pc_20d16:                               ; preds = %bb, %dec_label_pc_20cde
  %v4_20d14 = phi i32 [ %v3_20d14, %bb ], [ %v4_20d07, %dec_label_pc_20cde ]
  ret i32 %v4_20d14

; uselistorder directives
  uselistorder i32 %v2_20d03, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_20d1b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20d1b:
  %v0_20d1c = load i32, i32* @eax, align 8
  ret i32 %v0_20d1c
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IvRKSsNS0_8functionIFvSD_EEEEENS1_5mutexEEEEEEEC1ERS7_RKSL_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d1e:
  ret i32 %arg1
}

define i32 @function_20d2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20d2c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_20d2c = load i32, i32* @eax, align 8
  %v2_20d2c = or i32 %v0_20d2c, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_20d2c, i32* %eax.global-to-local, align 8
  %v0_20d2e = load i32, i32* @ebp, align 4
  %v0_20d2f = load i32, i32* @ecx, align 4
  %v1_20d2f = add i32 %v0_20d2f, 255
  %v1_20d31 = add i32 %v0_20d2e, 2
  store i32 %v1_20d31, i32* @ebp, align 4
  %v1_20d32 = add i32 %v0_20d2f, -1587159996
  %v2_20d32 = inttoptr i32 %v1_20d32 to i8*
  %v3_20d32 = load i8, i8* %v2_20d32, align 1
  %v5_20d32 = trunc i32 %v1_20d2f to i8
  %v8_20d32 = add i8 %v3_20d32, %v5_20d32
  %v28_20d32 = icmp ult i8 %v8_20d32, %v3_20d32
  store i1 %v28_20d32, i1* %cf.global-to-local, align 1
  store i8 %v8_20d32, i8* %v2_20d32, align 1
  %v0_20d38 = load i32, i32* %eax.global-to-local, align 8
  %v1_20d38 = trunc i32 %v0_20d38 to i8
  %v2_20d38 = load i1, i1* %cf.global-to-local, align 1
  %v3_20d38 = zext i1 %v2_20d38 to i8
  %v4_20d38 = add i8 %v3_20d38, %v1_20d38
  %v19_20d38 = icmp ule i8 %v4_20d38, %v1_20d38
  %v21_20d38 = icmp eq i1 %v2_20d38, %v19_20d38
  store i1 %v21_20d38, i1* %cf.global-to-local, align 1
  %v22_20d38 = zext i8 %v4_20d38 to i32
  %v24_20d38 = and i32 %v0_20d38, -256
  %v25_20d38 = or i32 %v22_20d38, %v24_20d38
  store i32 %v25_20d38, i32* %eax.global-to-local, align 8
  %v1_20d3a = inttoptr i32 %v25_20d38 to i8*
  %v2_20d3a = load i8, i8* %v1_20d3a, align 1
  %v5_20d3a = add i8 %v2_20d3a, %v4_20d38
  store i8 %v5_20d3a, i8* %v1_20d3a, align 1
  %v0_20d3c = load i32, i32* %eax.global-to-local, align 8
  %v1_20d3c = load i32, i32* @ebp, align 4
  %v2_20d3c = add i32 %v1_20d3c, -12
  %v3_20d3c = inttoptr i32 %v2_20d3c to i32*
  store i32 %v0_20d3c, i32* %v3_20d3c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_20d41 = load i32, i32* @ebp, align 4
  %v1_20d41 = add i32 %v0_20d41, -28
  %v2_20d41 = inttoptr i32 %v1_20d41 to i32*
  %v3_20d41 = load i32, i32* %v2_20d41, align 4
  store i32 %v3_20d41, i32* %eax.global-to-local, align 8
  %v1_20d44 = add i32 %v0_20d41, -32
  %v2_20d44 = inttoptr i32 %v1_20d44 to i32*
  %v3_20d44 = load i32, i32* %v2_20d44, align 4
  %v2_20d4e = call i32 @unknown_40046(i32 %v3_20d41, i32 %v3_20d44)
  store i32 %v2_20d4e, i32* %eax.global-to-local, align 8
  %v0_20d53 = load i32, i32* @ebp, align 4
  %v1_20d53 = add i32 %v0_20d53, -28
  %v2_20d53 = inttoptr i32 %v1_20d53 to i32*
  %v3_20d53 = load i32, i32* %v2_20d53, align 4
  store i32 %v3_20d53, i32* %eax.global-to-local, align 8
  %v1_20d56 = add i32 %v0_20d53, -36
  %v2_20d56 = inttoptr i32 %v1_20d56 to i32*
  %v3_20d56 = load i32, i32* %v2_20d56, align 4
  %v1_20d59 = inttoptr i32 %v3_20d56 to i32*
  %v2_20d59 = load i32, i32* %v1_20d59, align 4
  %v2_20d5b = add i32 %v3_20d53, 12
  %v3_20d5b = inttoptr i32 %v2_20d5b to i32*
  store i32 %v2_20d59, i32* %v3_20d5b, align 4
  %v0_20d5e = load i32, i32* @ebp, align 4
  %v1_20d5e = add i32 %v0_20d5e, -12
  %v2_20d5e = inttoptr i32 %v1_20d5e to i32*
  %v3_20d5e = load i32, i32* %v2_20d5e, align 4
  %v3_20d61 = xor i32 %v3_20d5e, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_20d61 = icmp eq i32 %v3_20d61, 0
  store i32 %v3_20d61, i32* @eax, align 8
  br i1 %v4_20d61, label %bb, label %dec_label_pc_20d6a

bb:                                               ; preds = %dec_label_pc_20d2c
  %v1_20d68 = call i32 @function_20d6f()
  store i32 %v1_20d68, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20d6a

dec_label_pc_20d6a:                               ; preds = %bb, %dec_label_pc_20d2c
  %v3_20d68 = phi i32 [ %v1_20d68, %bb ], [ %v3_20d61, %dec_label_pc_20d2c ]
  ret i32 %v3_20d68

; uselistorder directives
  uselistorder i8 %v4_20d38, { 0, 2, 1 }
  uselistorder i8 %v1_20d38, { 1, 0 }
  uselistorder i8 %v3_20d32, { 1, 0 }
}

define i32 @function_20d6f() local_unnamed_addr {
dec_label_pc_20d6f:
  %v0_20d70 = load i32, i32* @eax, align 8
  ret i32 %v0_20d70
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertERKSR_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20d72:
  %v3_20da9 = call i32 @unknown_465a8(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20dc0

bb:                                               ; preds = %dec_label_pc_20d72
  %v1_20dbe = call i32 @function_20dc5()
  br label %dec_label_pc_20dc0

dec_label_pc_20dc0:                               ; preds = %bb, %dec_label_pc_20d72
  %v2_20dbe = phi i32 [ %v1_20dbe, %bb ], [ %arg1, %dec_label_pc_20d72 ]
  ret i32 %v2_20dbe

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_20dc5() local_unnamed_addr {
dec_label_pc_20dc5:
  %v0_20dc6 = load i32, i32* @eax, align 8
  ret i32 %v0_20dc6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20dca:
  %v1_20dea = add i32 %arg2, 12
  %v2_20dea = inttoptr i32 %v1_20dea to i32*
  %v3_20dea = load i32, i32* %v2_20dea, align 4
  %v2_20df7 = call i32 @unknown_4626c(i32 %arg1, i32 %v3_20dea)
  ret i32 %arg1
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11lower_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20e14:
  %v1_20e3e = call i32 @unknown_4631e(i32 %arg2)
  %v1_20e4b = call i32 @unknown_462ee(i32 %arg2)
  %v5_20e6c = call i32 @unknown_4684e(i32 %arg1, i32 %arg2, i32 %v1_20e4b, i32 %v1_20e3e, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_20e83

bb:                                               ; preds = %dec_label_pc_20e14
  %v1_20e81 = call i32 @function_20e88()
  br label %dec_label_pc_20e83

dec_label_pc_20e83:                               ; preds = %bb, %dec_label_pc_20e14
  %v2_20e81 = phi i32 [ %v1_20e81, %bb ], [ %arg1, %dec_label_pc_20e14 ]
  ret i32 %v2_20e81

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_20e88() local_unnamed_addr {
dec_label_pc_20e88:
  %v0_20e8c = load i32, i32* @eax, align 8
  ret i32 %v0_20e8c
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEEEENT_11result_typeEiRSD_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6) local_unnamed_addr {
dec_label_pc_20e8f:
  %v11_20ec5 = icmp slt i32 %arg2, 0
  br i1 %v11_20ec5, label %dec_label_pc_20ef9, label %dec_label_pc_20ecb

dec_label_pc_20ecb:                               ; preds = %dec_label_pc_20e8f
  %v1_20ed1 = call i32 @unknown_4697d(i32 %arg4)
  %v4_20eef = call i32 @unknown_469ab(i32 %arg1, i32 %arg3, i32 %v1_20ed1, i32 1)
  ret i32 %v4_20eef

dec_label_pc_20ef9:                               ; preds = %dec_label_pc_20e8f
  %v1_20eff = call i32 @unknown_46a0a(i32 %arg4)
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_20f1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f1e:
  %v0_20f1e = load i32, i32* @eax, align 8
  %v1_20f1e = load i1, i1* @cf, align 1
  %v2_20f1e = zext i1 %v1_20f1e to i32
  %v3_20f1e = add i32 %v0_20f1e, -2097151397
  %v4_20f1e = add i32 %v3_20f1e, %v2_20f1e
  %v2_20f24 = add i32 %v4_20f1e, 139
  %v16_20f24 = urem i32 %v2_20f24, 256
  %v18_20f24 = and i32 %v4_20f1e, -256
  %v19_20f24 = or i32 %v16_20f24, %v18_20f24
  store i32 %v19_20f24, i32* @eax, align 8
  %v0_20f26 = load i32, i32* @ebp, align 4
  %v1_20f26 = add i32 %v0_20f26, 1
  store i32 %v1_20f26, i32* @ebp, align 4
  %v0_20f2b = load i32, i32* @edx, align 8
  %v4_20f2b = icmp eq i32 %v0_20f2b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20f2b, label %bb, label %dec_label_pc_20f34

bb:                                               ; preds = %dec_label_pc_20f1e
  %v1_20f32 = call i32 @function_20f39()
  br label %dec_label_pc_20f34

dec_label_pc_20f34:                               ; preds = %bb, %dec_label_pc_20f1e
  %v2_20f32 = phi i32 [ %v1_20f32, %bb ], [ %v19_20f24, %dec_label_pc_20f1e ]
  ret i32 %v2_20f32

; uselistorder directives
  uselistorder i32 %v4_20f1e, { 1, 0 }
}

define i32 @function_20f39() local_unnamed_addr {
dec_label_pc_20f39:
  %v0_20f3a = load i32, i32* @eax, align 8
  ret i32 %v0_20f3a
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrEEENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8 %arg6) local_unnamed_addr {
dec_label_pc_20f3d:
  %v11_20f73 = icmp slt i32 %arg2, 0
  br i1 %v11_20f73, label %bb, label %dec_label_pc_20f79

bb:                                               ; preds = %dec_label_pc_20f3d
  %v7_20f77 = sext i8 %arg6 to i32
  %v8_20f77 = call i32 @function_20fa7(i32 %v7_20f77, i32 %arg5, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_20f79

dec_label_pc_20f79:                               ; preds = %bb, %dec_label_pc_20f3d
  ret i32 %arg4
}

define i32 @function_20f82(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f82:
  %v0_20f82 = load i32, i32* @eax, align 8
  %v5_20f82 = mul i32 %v0_20f82, 2
  %v20_20f82 = and i32 %v5_20f82, 254
  %v22_20f82 = and i32 %v0_20f82, -256
  %v23_20f82 = or i32 %v20_20f82, %v22_20f82
  %v0_20f84 = load i32, i32* @ebp, align 4
  %v1_20f84 = add i32 %v0_20f84, -28
  %v2_20f84 = inttoptr i32 %v1_20f84 to i32*
  %v3_20f84 = load i32, i32* %v2_20f84, align 4
  %v1_20f93 = add i32 %v0_20f84, -36
  %v2_20f93 = inttoptr i32 %v1_20f93 to i32*
  %v3_20f93 = load i32, i32* %v2_20f93, align 4
  %v4_20f9d = call i32 @unknown_46b7f(i32 %v3_20f84, i32 %v3_20f93, i32 %v23_20f82, i32 1)
  ret i32 %v4_20f9d

; uselistorder directives
  uselistorder i32 %v0_20f82, { 1, 0 }
}

define i32 @function_20fa7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_20fa7:
  %v0_20fa7 = load i32, i32* @ebp, align 4
  %v1_20fa7 = add i32 %v0_20fa7, -40
  %v2_20fa7 = inttoptr i32 %v1_20fa7 to i32*
  %v3_20fa7 = load i32, i32* %v2_20fa7, align 4
  %v1_20fad = call i32 @unknown_46bde(i32 %v3_20fa7)
  ret i32 %v1_20fad
}

define i32 @function_20fb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_20fb8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_20fb8 = load i32, i32* @eax, align 8
  %v1_20fb8 = trunc i32 %v0_20fb8 to i8
  %v2_20fb8 = or i8 %v1_20fb8, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v8_20fb8 = zext i8 %v2_20fb8 to i32
  %v10_20fb8 = and i32 %v0_20fb8, -256
  %v11_20fb8 = or i32 %v8_20fb8, %v10_20fb8
  store i32 %v11_20fb8, i32* %eax.global-to-local, align 8
  %v1_20fba = inttoptr i32 %v11_20fb8 to i8*
  %v2_20fba = load i8, i8* %v1_20fba, align 1
  %v5_20fba = add i8 %v2_20fba, %v2_20fb8
  %v10_20fba = icmp ult i8 %v5_20fba, %v2_20fba
  store i1 %v10_20fba, i1* %cf.global-to-local, align 1
  store i8 %v5_20fba, i8* %v1_20fba, align 1
  %v0_20fbc = load i32, i32* @ecx, align 4
  %v1_20fbc = add i32 %v0_20fbc, -1962400700
  %v2_20fbc = inttoptr i32 %v1_20fbc to i8*
  %v3_20fbc = load i8, i8* %v2_20fbc, align 1
  %v5_20fbc = trunc i32 %v0_20fbc to i8
  %v6_20fbc = add i8 %v3_20fbc, %v5_20fbc
  %v11_20fbc = icmp ult i8 %v6_20fbc, %v3_20fbc
  store i1 %v11_20fbc, i1* %cf.global-to-local, align 1
  store i8 %v6_20fbc, i8* %v2_20fbc, align 1
  %v0_20fc2 = load i32, i32* @ebp, align 4
  %v1_20fc2 = add i32 %v0_20fc2, 1
  store i32 %v1_20fc2, i32* @ebp, align 4
  %v0_20fc9 = load i32, i32* %eax.global-to-local, align 8
  %v1_20fc9 = trunc i32 %v0_20fc9 to i8
  %v2_20fc9 = load i1, i1* %cf.global-to-local, align 1
  %v3_20fc9 = zext i1 %v2_20fc9 to i8
  %v4_20fc9 = add i8 %v1_20fc9, 36
  %v5_20fc9 = add i8 %v4_20fc9, %v3_20fc9
  %v22_20fc9 = icmp ule i8 %v5_20fc9, %v1_20fc9
  %v23_20fc9 = icmp ugt i8 %v1_20fc9, -37
  %v24_20fc9 = select i1 %v2_20fc9, i1 %v22_20fc9, i1 %v23_20fc9
  store i1 %v24_20fc9, i1* %cf.global-to-local, align 1
  %v25_20fc9 = zext i8 %v5_20fc9 to i32
  %v27_20fc9 = and i32 %v0_20fc9, -256
  %v28_20fc9 = or i32 %v25_20fc9, %v27_20fc9
  store i32 %v28_20fc9, i32* %eax.global-to-local, align 8
  %v0_20fcb = call i32 @unknown_46c0b()
  store i32 %v0_20fcb, i32* %eax.global-to-local, align 8
  %v0_20fd3 = load i32, i32* @ebp, align 4
  %v1_20fd3 = add i32 %v0_20fd3, -28
  %v2_20fd3 = inttoptr i32 %v1_20fd3 to i32*
  %v3_20fd3 = load i32, i32* %v2_20fd3, align 4
  store i32 %v3_20fd3, i32* @eax, align 8
  %v1_20fd6 = add i32 %v0_20fd3, -12
  %v2_20fd6 = inttoptr i32 %v1_20fd6 to i32*
  %v3_20fd6 = load i32, i32* %v2_20fd6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_20fd9 = icmp eq i32 %v3_20fd6, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_20fd9, label %bb, label %dec_label_pc_20fe2

bb:                                               ; preds = %dec_label_pc_20fb8
  %v1_20fe0 = call i32 @function_20fe7()
  store i32 %v1_20fe0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_20fe2

dec_label_pc_20fe2:                               ; preds = %bb, %dec_label_pc_20fb8
  %v2_20fe0 = phi i32 [ %v1_20fe0, %bb ], [ %v3_20fd3, %dec_label_pc_20fb8 ]
  ret i32 %v2_20fe0

; uselistorder directives
  uselistorder i8 %v5_20fc9, { 1, 0 }
  uselistorder i8 %v2_20fba, { 1, 0 }
}

define i32 @function_20fe7() local_unnamed_addr {
dec_label_pc_20fe7:
  %v0_20fe8 = load i32, i32* @eax, align 8
  ret i32 %v0_20fe8
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_10shared_ptrIvEEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_20feb:
  %eax.global-to-local = alloca i32, align 4
  %v2_20fec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_20fec
}

define i32 @function_20fee(i32 %arg1) local_unnamed_addr {
dec_label_pc_20fee:
  %v0_20ff1 = load i32, i32* @ebp, align 4
  %v1_20ff1 = add i32 %v0_20ff1, 8
  %v2_20ff1 = inttoptr i32 %v1_20ff1 to i32*
  %v3_20ff1 = load i32, i32* %v2_20ff1, align 4
  %v2_20ff4 = add i32 %v0_20ff1, -28
  %v3_20ff4 = inttoptr i32 %v2_20ff4 to i32*
  store i32 %v3_20ff1, i32* %v3_20ff4, align 4
  %v0_20ff7 = load i32, i32* @ebp, align 4
  %v1_20ff7 = add i32 %v0_20ff7, 12
  %v2_20ff7 = inttoptr i32 %v1_20ff7 to i32*
  %v3_20ff7 = load i32, i32* %v2_20ff7, align 4
  %v2_20ffa = add i32 %v0_20ff7, -32
  %v3_20ffa = inttoptr i32 %v2_20ffa to i32*
  store i32 %v3_20ff7, i32* %v3_20ffa, align 4
  %v0_20ffd = load i32, i32* @ebp, align 4
  %v1_20ffd = add i32 %v0_20ffd, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_20ffd = inttoptr i32 %v1_20ffd to i32*
  %v3_20ffd = load i32, i32* %v2_20ffd, align 4
  %v2_21000 = add i32 %v0_20ffd, -36
  %v3_21000 = inttoptr i32 %v2_21000 to i32*
  store i32 %v3_20ffd, i32* %v3_21000, align 4
  %v0_21003 = load i32, i32* @ebp, align 4
  %v1_21003 = add i32 %v0_21003, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_21003 = inttoptr i32 %v1_21003 to i32*
  %v3_21003 = load i32, i32* %v2_21003, align 4
  %v2_21006 = add i32 %v0_21003, -40
  %v3_21006 = inttoptr i32 %v2_21006 to i32*
  store i32 %v3_21003, i32* %v3_21006, align 4
  %v0_21009 = load i32, i32* @ebp, align 4
  %v1_21009 = add i32 %v0_21009, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_21009 = inttoptr i32 %v1_21009 to i8*
  %v3_21009 = load i8, i8* %v2_21009, align 1
  %v3_2100d = add i32 %v0_21009, -41
  %v4_2100d = inttoptr i32 %v3_2100d to i8*
  store i8 %v3_21009, i8* %v4_2100d, align 1
  %v1_21016 = load i32, i32* @ebp, align 4
  %v2_21016 = add i32 %v1_21016, -12
  %v3_21016 = inttoptr i32 %v2_21016 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_21016, align 4
  %v0_2101b = load i32, i32* @ebp, align 4
  %v1_2101b = add i32 %v0_2101b, -28
  %v2_2101b = inttoptr i32 %v1_2101b to i32*
  %v3_2101b = load i32, i32* %v2_2101b, align 4
  %v11_2101b = icmp slt i32 %v3_2101b, 0
  %v1_21045 = add i32 %v0_2101b, -36
  %v2_21045 = inttoptr i32 %v1_21045 to i32*
  %v3_21045 = load i32, i32* %v2_21045, align 4
  br i1 %v11_2101b, label %dec_label_pc_21045, label %dec_label_pc_21021

dec_label_pc_21021:                               ; preds = %dec_label_pc_20fee
  %v1_21027 = call i32 @unknown_46d26(i32 %v3_21045)
  %v0_21038 = load i32, i32* @ebp, align 4
  %v1_21038 = add i32 %v0_21038, -32
  %v2_21038 = inttoptr i32 %v1_21038 to i32*
  %v3_21038 = load i32, i32* %v2_21038, align 4
  %v3_2103e = call i32 @unknown_46d53(i32 %v3_21038, i32 %v1_21027, i32 1)
  br label %dec_label_pc_21067

dec_label_pc_21045:                               ; preds = %dec_label_pc_20fee
  %v1_2104b = call i32 @unknown_46db1(i32 %v3_21045)
  %v0_2105c = load i32, i32* @ebp, align 4
  %v1_2105c = add i32 %v0_2105c, -32
  %v2_2105c = inttoptr i32 %v1_2105c to i32*
  %v3_2105c = load i32, i32* %v2_2105c, align 4
  %v3_21062 = call i32 @unknown_46ddf(i32 %v3_2105c, i32 %v1_2104b, i32 1)
  br label %dec_label_pc_21067

dec_label_pc_21067:                               ; preds = %dec_label_pc_21045, %dec_label_pc_21021
  %v0_21067 = load i32, i32* @ebp, align 4
  %v1_21067 = add i32 %v0_21067, -12
  %v2_21067 = inttoptr i32 %v1_21067 to i32*
  %v3_21067 = load i32, i32* %v2_21067, align 4
  %v3_2106a = xor i32 %v3_21067, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_2106a

; uselistorder directives
  uselistorder i32 %v3_21045, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_8signals26detail23foreign_void_shared_ptrEEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2107a:
  %v11_210aa = icmp slt i32 %arg1, 0
  br i1 %v11_210aa, label %dec_label_pc_210d4, label %dec_label_pc_210b0

dec_label_pc_210b0:                               ; preds = %dec_label_pc_2107a
  %v1_210b6 = call i32 @unknown_46edb(i32 %arg3)
  %v3_210cd = call i32 @unknown_46f08(i32 %arg2, i32 %v1_210b6, i32 1)
  br label %dec_label_pc_210f6

dec_label_pc_210d4:                               ; preds = %dec_label_pc_2107a
  %v1_210da = call i32 @unknown_46f8b(i32 %arg3)
  %v3_210f1 = call i32 @unknown_46fb8(i32 %arg2, i32 %v1_210da, i32 1)
  br label %dec_label_pc_210f6

dec_label_pc_210f6:                               ; preds = %dec_label_pc_210d4, %dec_label_pc_210b0
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_210fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_210fe:
  %zf.global-to-local = alloca i1, align 1
  %v2_210fe = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_210fe = load i32, i32* @eax, align 8
  %v4_210fe = trunc i32 %v3_210fe to i8
  %v5_210fe = add i8 %v4_210fe, %v2_210fe
  %v15_210fe = icmp eq i8 %v5_210fe, 0
  store i1 %v15_210fe, i1* %zf.global-to-local, align 1
  %v21_210fe = inttoptr i32 %v3_210fe to i8*
  store i8 %v5_210fe, i8* %v21_210fe, align 1
  %v0_21100 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_21100, label %bb, label %dec_label_pc_210fe.dec_label_pc_21102_crit_edge

dec_label_pc_210fe.dec_label_pc_21102_crit_edge:  ; preds = %dec_label_pc_210fe
  %v2_21100.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_21102

bb:                                               ; preds = %dec_label_pc_210fe
  %v1_21100 = call i32 @function_21107()
  br label %dec_label_pc_21102

dec_label_pc_21102:                               ; preds = %dec_label_pc_210fe.dec_label_pc_21102_crit_edge, %bb
  %v2_21100 = phi i32 [ %v2_21100.pre, %dec_label_pc_210fe.dec_label_pc_21102_crit_edge ], [ %v1_21100, %bb ]
  ret i32 %v2_21100

; uselistorder directives
  uselistorder label %dec_label_pc_21102, { 1, 0 }
}

define i32 @function_21107() local_unnamed_addr {
dec_label_pc_21107:
  %v0_21108 = load i32, i32* @eax, align 8
  ret i32 %v0_21108
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_10shared_ptrIvEEEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21109:
  %v11_21139 = icmp slt i32 %arg1, 0
  br i1 %v11_21139, label %bb, label %dec_label_pc_2113f

bb:                                               ; preds = %dec_label_pc_21109
  %v6_2113d = sext i8 %arg5 to i32
  %v7_2113d = call i32 @function_21163(i32 %v6_2113d, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2113f

dec_label_pc_2113f:                               ; preds = %bb, %dec_label_pc_21109
  %v1_21145 = call i32 @unknown_470d4(i32 %arg3)
  ret i32 %v1_21145
}

define i32 @function_21150(i32 %arg1) local_unnamed_addr {
dec_label_pc_21150:
  %v2_21150 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_21150 = load i32, i32* @eax, align 8
  %v4_21150 = trunc i32 %v3_21150 to i8
  %v5_21150 = add i8 %v4_21150, %v2_21150
  %v21_21150 = inttoptr i32 %v3_21150 to i8*
  store i8 %v5_21150, i8* %v21_21150, align 1
  %v0_21152 = load i32, i32* @eax, align 8
  %v0_21156 = load i32, i32* @ebp, align 4
  %v1_21156 = add i32 %v0_21156, -32
  %v2_21156 = inttoptr i32 %v1_21156 to i32*
  %v3_21156 = load i32, i32* %v2_21156, align 4
  %v2_2115c = call i32 @unknown_47101(i32 %v3_21156, i32 %v0_21152)
  %v0_21161 = call i32 @function_21185()
  ret i32 %v0_21161
}

define i32 @function_21163(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_21163:
  %v0_21163 = load i32, i32* @ebp, align 4
  %v1_21163 = add i32 %v0_21163, -36
  %v2_21163 = inttoptr i32 %v1_21163 to i32*
  %v3_21163 = load i32, i32* %v2_21163, align 4
  %v1_21169 = call i32 @unknown_47142(i32 %v3_21163)
  %v0_2117a = load i32, i32* @ebp, align 4
  %v1_2117a = add i32 %v0_2117a, -32
  %v2_2117a = inttoptr i32 %v1_2117a to i32*
  %v3_2117a = load i32, i32* %v2_2117a, align 4
  %v3_21180 = call i32 @unknown_4716f(i32 %v3_2117a, i32 %v1_21169, i32 1)
  ret i32 %v3_21180
}

define i32 @function_21185() local_unnamed_addr {
dec_label_pc_21185:
  %v0_21185 = load i32, i32* @ebp, align 4
  %v1_21185 = add i32 %v0_21185, -12
  %v2_21185 = inttoptr i32 %v1_21185 to i32*
  %v3_21185 = load i32, i32* %v2_21185, align 4
  %v3_21188 = xor i32 %v3_21185, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21188 = icmp eq i32 %v3_21188, 0
  store i32 %v3_21188, i32* @eax, align 8
  br i1 %v4_21188, label %bb, label %dec_label_pc_21191

bb:                                               ; preds = %dec_label_pc_21185
  %v1_2118f = call i32 @function_21196()
  br label %dec_label_pc_21191

dec_label_pc_21191:                               ; preds = %bb, %dec_label_pc_21185
  %v2_2118f = phi i32 [ %v1_2118f, %bb ], [ %v3_21188, %dec_label_pc_21185 ]
  ret i32 %v2_2118f
}

define i32 @function_21196() local_unnamed_addr {
dec_label_pc_21196:
  %v0_21197 = load i32, i32* @eax, align 8
  ret i32 %v0_21197
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_8signals26detail23foreign_void_shared_ptrEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21198:
  %v11_211c8 = icmp slt i32 %arg1, 0
  br i1 %v11_211c8, label %dec_label_pc_211f2, label %dec_label_pc_211ce

dec_label_pc_211ce:                               ; preds = %dec_label_pc_21198
  %v1_211d4 = call i32 @unknown_4723f(i32 %arg3)
  %v3_211eb = call i32 @unknown_4726c(i32 %arg2, i32 %v1_211d4, i32 1)
  br label %dec_label_pc_21214

dec_label_pc_211f2:                               ; preds = %dec_label_pc_21198
  %v1_211f8 = call i32 @unknown_472ad(i32 %arg3)
  %v3_2120f = call i32 @unknown_472da(i32 %arg2, i32 %v1_211f8, i32 1)
  br label %dec_label_pc_21214

dec_label_pc_21214:                               ; preds = %dec_label_pc_211f2, %dec_label_pc_211ce
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21220

bb:                                               ; preds = %dec_label_pc_21214
  %v1_2121e = call i32 @function_21225()
  br label %dec_label_pc_21220

dec_label_pc_21220:                               ; preds = %bb, %dec_label_pc_21214
  %v2_2121e = phi i32 [ %v1_2121e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_21214 ]
  ret i32 %v2_2121e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_21225() local_unnamed_addr {
dec_label_pc_21225:
  %v0_21226 = load i32, i32* @eax, align 8
  ret i32 %v0_21226
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS_8weak_ptrIvEEEENT_11result_typeEiRSD_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21227:
  %v11_21257 = icmp slt i32 %arg1, 0
  br i1 %v11_21257, label %dec_label_pc_21281, label %dec_label_pc_2125d

dec_label_pc_2125d:                               ; preds = %dec_label_pc_21227
  %v1_21263 = call i32 @unknown_46d15(i32 %arg3)
  %v3_2127a = call i32 @unknown_473ab(i32 %arg2, i32 %v1_21263, i32 1)
  br label %dec_label_pc_212a3

dec_label_pc_21281:                               ; preds = %dec_label_pc_21227
  %v1_21287 = call i32 @unknown_46da2(i32 %arg3)
  %v3_2129e = call i32 @unknown_473f5(i32 %arg2, i32 %v1_21287, i32 1)
  br label %dec_label_pc_212a3

dec_label_pc_212a3:                               ; preds = %dec_label_pc_21281, %dec_label_pc_2125d
  %storemerge = phi i32 [ %v3_2129e, %dec_label_pc_21281 ], [ %v3_2127a, %dec_label_pc_2125d ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_212af

bb:                                               ; preds = %dec_label_pc_212a3
  %v1_212ad = call i32 @function_212b4()
  br label %dec_label_pc_212af

dec_label_pc_212af:                               ; preds = %bb, %dec_label_pc_212a3
  %v3_212ad = phi i32 [ %v1_212ad, %bb ], [ %storemerge, %dec_label_pc_212a3 ]
  ret i32 %v3_212ad

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_212b4() local_unnamed_addr {
dec_label_pc_212b4:
  %v0_212b5 = load i32, i32* @eax, align 8
  ret i32 %v0_212b5
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEEEPKvNS5_21foreign_void_weak_ptrEEENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_212b6:
  ret i32 %arg4
}

define i32 @function_212d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_212d2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_212d2 = load i32, i32* @ebp, align 4
  %v1_212d2 = add i32 %v0_212d2, 1
  store i32 %v1_212d2, i32* @ebp, align 4
  %v0_212d7 = load i32, i32* @eax, align 8
  %v1_212d7 = add i32 %v0_212d7, -1587161275
  %v2_212d7 = inttoptr i32 %v1_212d7 to i8*
  %v3_212d7 = load i8, i8* %v2_212d7, align 1
  %v4_212d7 = load i32, i32* @ecx, align 4
  %v5_212d7 = trunc i32 %v4_212d7 to i8
  %v6_212d7 = load i1, i1* @cf, align 1
  %v7_212d7 = zext i1 %v6_212d7 to i8
  %v8_212d7 = sub i8 %v3_212d7, %v5_212d7
  %v9_212d7 = add i8 %v8_212d7, %v7_212d7
  %v19_212d7 = sub i8 %v8_212d7, %v7_212d7
  %v20_212d7 = icmp ult i8 %v3_212d7, %v19_212d7
  %v21_212d7 = icmp ne i8 %v5_212d7, -1
  %v22_212d7 = or i1 %v21_212d7, %v20_212d7
  %v23_212d7 = icmp ult i8 %v3_212d7, %v5_212d7
  %v24_212d7 = select i1 %v6_212d7, i1 %v22_212d7, i1 %v23_212d7
  store i1 %v24_212d7, i1* %cf.global-to-local, align 1
  store i8 %v9_212d7, i8* %v2_212d7, align 1
  %v0_212dd = load i32, i32* @eax, align 8
  %v1_212dd = trunc i32 %v0_212dd to i8
  %v2_212dd = load i1, i1* %cf.global-to-local, align 1
  %v3_212dd = zext i1 %v2_212dd to i8
  %v4_212dd = add i8 %v3_212dd, %v1_212dd
  %v19_212dd = icmp ule i8 %v4_212dd, %v1_212dd
  %v21_212dd = icmp eq i1 %v2_212dd, %v19_212dd
  store i1 %v21_212dd, i1* %cf.global-to-local, align 1
  %v22_212dd = zext i8 %v4_212dd to i32
  %v24_212dd = and i32 %v0_212dd, -256
  %v25_212dd = or i32 %v22_212dd, %v24_212dd
  store i32 %v25_212dd, i32* %eax.global-to-local, align 8
  %v1_212df = inttoptr i32 %v25_212dd to i8*
  %v2_212df = load i8, i8* %v1_212df, align 1
  %v5_212df = add i8 %v2_212df, %v4_212dd
  store i8 %v5_212df, i8* %v1_212df, align 1
  %v0_212e1 = load i32, i32* %eax.global-to-local, align 8
  %v1_212e1 = load i32, i32* @ebp, align 4
  %v2_212e1 = add i32 %v1_212e1, -12
  %v3_212e1 = inttoptr i32 %v2_212e1 to i32*
  store i32 %v0_212e1, i32* %v3_212e1, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_212e6 = load i32, i32* @ebp, align 4
  %v1_212e6 = add i32 %v0_212e6, -28
  %v2_212e6 = inttoptr i32 %v1_212e6 to i32*
  %v3_212e6 = load i32, i32* %v2_212e6, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_212e6 = icmp slt i32 %v3_212e6, 0
  %v1_21310 = add i32 %v0_212e6, -36
  %v2_21310 = inttoptr i32 %v1_21310 to i32*
  %v3_21310 = load i32, i32* %v2_21310, align 4
  store i32 %v3_21310, i32* %eax.global-to-local, align 8
  br i1 %v11_212e6, label %dec_label_pc_21310, label %dec_label_pc_212ec

dec_label_pc_212ec:                               ; preds = %dec_label_pc_212d2
  %v1_212f2 = call i32 @unknown_46ecb(i32 %v3_21310)
  store i32 %v1_212f2, i32* %eax.global-to-local, align 8
  %v0_21303 = load i32, i32* @ebp, align 4
  %v1_21303 = add i32 %v0_21303, -32
  %v2_21303 = inttoptr i32 %v1_21303 to i32*
  %v3_21303 = load i32, i32* %v2_21303, align 4
  store i32 %v3_21303, i32* %eax.global-to-local, align 8
  %v3_21309 = call i32 @unknown_474dc(i32 %v3_21303, i32 %v1_212f2, i32 1)
  br label %dec_label_pc_21332

dec_label_pc_21310:                               ; preds = %dec_label_pc_212d2
  %v1_21316 = call i32 @unknown_46f57(i32 %v3_21310)
  store i32 %v1_21316, i32* %eax.global-to-local, align 8
  %v0_21327 = load i32, i32* @ebp, align 4
  %v1_21327 = add i32 %v0_21327, -32
  %v2_21327 = inttoptr i32 %v1_21327 to i32*
  %v3_21327 = load i32, i32* %v2_21327, align 4
  store i32 %v3_21327, i32* %eax.global-to-local, align 8
  %v3_2132d = call i32 @unknown_47526(i32 %v3_21327, i32 %v1_21316, i32 1)
  br label %dec_label_pc_21332

dec_label_pc_21332:                               ; preds = %dec_label_pc_21310, %dec_label_pc_212ec
  %storemerge = phi i32 [ %v3_2132d, %dec_label_pc_21310 ], [ %v3_21309, %dec_label_pc_212ec ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_21332 = load i32, i32* @ebp, align 4
  %v1_21332 = add i32 %v0_21332, -12
  %v2_21332 = inttoptr i32 %v1_21332 to i32*
  %v3_21332 = load i32, i32* %v2_21332, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_21335 = icmp eq i32 %v3_21332, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_21335, label %bb, label %dec_label_pc_2133e

bb:                                               ; preds = %dec_label_pc_21332
  %v1_2133c = call i32 @function_21343()
  store i32 %v1_2133c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2133e

dec_label_pc_2133e:                               ; preds = %bb, %dec_label_pc_21332
  %v2_2133c = phi i32 [ %v1_2133c, %bb ], [ %storemerge, %dec_label_pc_21332 ]
  ret i32 %v2_2133c

; uselistorder directives
  uselistorder i32 %v3_21310, { 1, 0, 2 }
  uselistorder i8 %v4_212dd, { 0, 2, 1 }
  uselistorder i8 %v1_212dd, { 1, 0 }
  uselistorder i8 %v5_212d7, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8 }
}

define i32 @function_21343() local_unnamed_addr {
dec_label_pc_21343:
  %v0_21344 = load i32, i32* @eax, align 8
  ret i32 %v0_21344
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_8weak_ptrIvEEEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_21345:
  %v11_21375 = icmp slt i32 %arg1, 0
  br i1 %v11_21375, label %bb, label %dec_label_pc_2137b

bb:                                               ; preds = %dec_label_pc_21345
  %v6_21379 = sext i8 %arg5 to i32
  %v7_21379 = call i32 @function_2139f(i32 %v6_21379, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2137b

dec_label_pc_2137b:                               ; preds = %bb, %dec_label_pc_21345
  ret i32 %arg3
}

define i32 @function_21382(i32 %arg1) local_unnamed_addr {
dec_label_pc_21382:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_21382 = load i32, i32* @edx, align 8
  %v1_21382 = add i32 %v0_21382, 2
  %v2_21382 = inttoptr i32 %v1_21382 to i32*
  %v8_21382 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v8_21382, i32* %v2_21382, align 4
  %v3_21385 = load i32, i32* @eax, align 8
  %v11_21388 = and i32 %v3_21385, -248
  store i32 %v11_21388, i32* %eax.global-to-local, align 8
  %v1_2138a = inttoptr i32 %v11_21388 to i32*
  %v2_2138a = load i32, i32* %v1_2138a, align 8
  %v4_2138a = add i32 %v2_2138a, %v11_21388
  store i32 %v4_2138a, i32* %v1_2138a, align 8
  %v0_2138c = load i32, i32* %eax.global-to-local, align 8
  %v1_2138c = inttoptr i32 %v0_2138c to i8*
  %v2_2138c = load i8, i8* %v1_2138c, align 1
  %v4_2138c = trunc i32 %v0_2138c to i8
  %v5_2138c = add i8 %v2_2138c, %v4_2138c
  store i8 %v5_2138c, i8* %v1_2138c, align 1
  %v0_2138e = load i32, i32* %eax.global-to-local, align 8
  %v1_2138e = load i32, i32* @esp, align 4
  %v2_2138e = add i32 %v1_2138e, 4
  %v3_2138e = inttoptr i32 %v2_2138e to i32*
  store i32 %v0_2138e, i32* %v3_2138e, align 4
  %v0_21392 = load i32, i32* @ebp, align 4
  %v1_21392 = add i32 %v0_21392, -32
  %v2_21392 = inttoptr i32 %v1_21392 to i32*
  %v3_21392 = load i32, i32* %v2_21392, align 4
  store i32 %v3_21392, i32* %eax.global-to-local, align 8
  %v1_21395 = load i32, i32* @esp, align 4
  %v2_21395 = inttoptr i32 %v1_21395 to i32*
  store i32 %v3_21392, i32* %v2_21395, align 4
  %v0_21398 = call i32 @unknown_4763b()
  store i32 %v0_21398, i32* %eax.global-to-local, align 8
  %v0_2139d = call i32 @function_213c1()
  store i32 %v0_2139d, i32* %eax.global-to-local, align 8
  ret i32 %v0_2139d

; uselistorder directives
  uselistorder i32 %v11_21388, { 0, 2, 1 }
  uselistorder i32 -248, { 1, 2, 0 }
}

define i32 @function_2139f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2139f:
  %v0_2139f = load i32, i32* @ebp, align 4
  %v1_2139f = add i32 %v0_2139f, -36
  %v2_2139f = inttoptr i32 %v1_2139f to i32*
  %v3_2139f = load i32, i32* %v2_2139f, align 4
  %v1_213a5 = call i32 @unknown_4767c(i32 %v3_2139f)
  %v0_213b6 = load i32, i32* @ebp, align 4
  %v1_213b6 = add i32 %v0_213b6, -32
  %v2_213b6 = inttoptr i32 %v1_213b6 to i32*
  %v3_213b6 = load i32, i32* %v2_213b6, align 4
  %v3_213bc = call i32 @unknown_476a9(i32 %v3_213b6, i32 %v1_213a5, i32 1)
  ret i32 %v3_213bc
}

define i32 @function_213c1() local_unnamed_addr {
dec_label_pc_213c1:
  %v0_213c1 = load i32, i32* @ebp, align 4
  %v1_213c1 = add i32 %v0_213c1, -12
  %v2_213c1 = inttoptr i32 %v1_213c1 to i32*
  %v3_213c1 = load i32, i32* %v2_213c1, align 4
  %v3_213c4 = xor i32 %v3_213c1, ptrtoint ([3 x i8]* @3 to i32)
  %v4_213c4 = icmp eq i32 %v3_213c4, 0
  store i32 %v3_213c4, i32* @eax, align 8
  br i1 %v4_213c4, label %bb, label %dec_label_pc_213cd

bb:                                               ; preds = %dec_label_pc_213c1
  %v1_213cb = call i32 @function_213d2()
  br label %dec_label_pc_213cd

dec_label_pc_213cd:                               ; preds = %bb, %dec_label_pc_213c1
  %v2_213cb = phi i32 [ %v1_213cb, %bb ], [ %v3_213c4, %dec_label_pc_213c1 ]
  ret i32 %v2_213cb
}

define i32 @function_213d2() local_unnamed_addr {
dec_label_pc_213d2:
  %v0_213d3 = load i32, i32* @eax, align 8
  ret i32 %v0_213d3
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPvNS_8signals26detail21foreign_void_weak_ptrEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_213d4:
  %v11_21404 = icmp slt i32 %arg1, 0
  br i1 %v11_21404, label %dec_label_pc_2142e, label %dec_label_pc_2140a

dec_label_pc_2140a:                               ; preds = %dec_label_pc_213d4
  %v1_21410 = call i32 @unknown_47779(i32 %arg3)
  %v3_21427 = call i32 @unknown_477a6(i32 %arg2, i32 %v1_21410, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2142e

dec_label_pc_2142e:                               ; preds = %dec_label_pc_2140a, %bb, %dec_label_pc_213d4
  %merge = phi i32 [ %arg3, %dec_label_pc_213d4 ], [ %v1_2145a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2140a ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_2140a
  %v1_2145a = call i32 @function_21461()
  br label %dec_label_pc_2142e

; uselistorder directives
  uselistorder label %dec_label_pc_2142e, { 1, 0, 2 }
}

define i32 @function_21461() local_unnamed_addr {
dec_label_pc_21461:
  %v0_21462 = load i32, i32* @eax, align 8
  ret i32 %v0_21462
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_8weak_ptrIvEENS_7variantIS7_NS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_21463:
  ret i32 %arg4
}

define i32 @function_214a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_214a6:
  %v0_214ac = load i32, i32* @ebp, align 4
  %v1_214ac = add i32 %v0_214ac, 1
  store i32 %v1_214ac, i32* @ebp, align 4
  %v1_214b2 = add i32 %v0_214ac, -27
  %v2_214b2 = inttoptr i32 %v1_214b2 to i32*
  %v3_214b2 = load i32, i32* %v2_214b2, align 4
  %v1_214b8 = call i32 @unknown_478e4(i32 %v3_214b2)
  %v0_214bd = load i32, i32* @ebp, align 4
  %v1_214bd = add i32 %v0_214bd, -12
  %v2_214bd = inttoptr i32 %v1_214bd to i32*
  %v3_214bd = load i32, i32* %v2_214bd, align 4
  %v3_214c0 = xor i32 %v3_214bd, ptrtoint ([3 x i8]* @3 to i32)
  %v4_214c0 = icmp eq i32 %v3_214c0, 0
  store i32 %v3_214c0, i32* @eax, align 8
  br i1 %v4_214c0, label %bb, label %dec_label_pc_214c9

bb:                                               ; preds = %dec_label_pc_214a6
  %v1_214c7 = call i32 @function_214ce()
  br label %dec_label_pc_214c9

dec_label_pc_214c9:                               ; preds = %bb, %dec_label_pc_214a6
  %v3_214c7 = phi i32 [ %v1_214c7, %bb ], [ %v3_214c0, %dec_label_pc_214a6 ]
  ret i32 %v3_214c7
}

define i32 @function_214ce() local_unnamed_addr {
dec_label_pc_214ce:
  %v0_214cf = load i32, i32* @eax, align 8
  ret i32 %v0_214cf
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_8signals26detail21foreign_void_weak_ptrENS_7variantINS_8weak_ptrIvEES8_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_214d0:
  %edx.global-to-local = alloca i32, align 4
  %v0_21506 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_21506, 16777216
  %v5_21525 = sdiv i32 %sext, 16777216
  %v6_21525 = call i32 @unknown_479e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_21525)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21536

bb:                                               ; preds = %dec_label_pc_214d0
  %v1_21534 = call i32 @function_2153b()
  br label %dec_label_pc_21536

dec_label_pc_21536:                               ; preds = %bb, %dec_label_pc_214d0
  %v2_21534 = phi i32 [ %v1_21534, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_214d0 ]
  ret i32 %v2_21534
}

define i32 @function_2153b() local_unnamed_addr {
dec_label_pc_2153b:
  %v0_2153c = load i32, i32* @eax, align 8
  ret i32 %v0_2153c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_2153d:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_21597:
  ret i32 0
}

declare i32 @__assert_fail.1766(i32) local_unnamed_addr

define i32 @_ZSt10_ConstructIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESA_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215fe:
  ret i32 %arg2
}

define i32 @function_21618(i32 %arg1) local_unnamed_addr {
dec_label_pc_21618:
  %v0_21618 = load i32, i32* @ecx, align 4
  %v1_21618 = add i32 %v0_21618, -1070472123
  %v2_21618 = inttoptr i32 %v1_21618 to i8*
  %v3_21618 = load i8, i8* %v2_21618, align 1
  %v5_21618 = trunc i32 %v0_21618 to i8
  %v6_21618 = add i8 %v3_21618, %v5_21618
  store i8 %v6_21618, i8* %v2_21618, align 1
  %v0_2161e = load i32, i32* @ebp, align 4
  %v1_2161e = add i32 %v0_2161e, -44
  %v2_2161e = inttoptr i32 %v1_2161e to i32*
  %v3_2161e = load i32, i32* %v2_2161e, align 4
  %v2_2162c = call i32 @function_21f64(i32 12, i32 %v3_2161e)
  %v1_21633 = icmp eq i32 %v2_2162c, 0
  br i1 %v1_21633, label %bb, label %dec_label_pc_21637

bb:                                               ; preds = %dec_label_pc_21618
  %v1_21635 = call i32 @function_21660()
  br label %dec_label_pc_21637

dec_label_pc_21637:                               ; preds = %bb, %dec_label_pc_21618
  %v0_21637 = load i32, i32* @ebp, align 4
  %v1_21637 = add i32 %v0_21637, -48
  %v2_21637 = inttoptr i32 %v1_21637 to i32*
  %v3_21637 = load i32, i32* %v2_21637, align 4
  %v2_21641 = call i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE7disposeEv(i32 %v2_2162c, i32 %v3_21637)
  %v0_21646 = call i32 @function_21660()
  ret i32 %v0_21646

; uselistorder directives
  uselistorder i32 ()* @function_21660, { 1, 0 }
}

define i32 @function_21660() local_unnamed_addr {
dec_label_pc_21660:
  %v0_21660 = load i32, i32* @ebp, align 4
  %v1_21660 = add i32 %v0_21660, -28
  %v2_21660 = inttoptr i32 %v1_21660 to i32*
  %v3_21660 = load i32, i32* %v2_21660, align 4
  %v3_21663 = xor i32 %v3_21660, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21663 = icmp eq i32 %v3_21663, 0
  store i32 %v3_21663, i32* @eax, align 8
  br i1 %v4_21663, label %bb, label %dec_label_pc_2166c

bb:                                               ; preds = %dec_label_pc_21660
  %v1_2166a = call i32 @function_21671()
  br label %dec_label_pc_2166c

dec_label_pc_2166c:                               ; preds = %bb, %dec_label_pc_21660
  %v2_2166a = phi i32 [ %v1_2166a, %bb ], [ %v3_21663, %dec_label_pc_21660 ]
  ret i32 %v2_2166a
}

define i32 @function_21671() local_unnamed_addr {
dec_label_pc_21671:
  %v0_21678 = load i32, i32* @eax, align 8
  ret i32 %v0_21678
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11lower_boundERS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2167a:
  %v1_216a4 = call i32 @unknown_47c4a(i32 %arg2)
  %v1_216b1 = call i32 @unknown_47c1a(i32 %arg2)
  %v5_216d2 = call i32 @unknown_47c7a(i32 %arg1, i32 %arg2, i32 %v1_216b1, i32 %v1_216a4, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_216e9

bb:                                               ; preds = %dec_label_pc_2167a
  %v1_216e7 = call i32 @function_216ee()
  br label %dec_label_pc_216e9

dec_label_pc_216e9:                               ; preds = %bb, %dec_label_pc_2167a
  %v2_216e7 = phi i32 [ %v1_216e7, %bb ], [ %arg1, %dec_label_pc_2167a ]
  ret i32 %v2_216e7

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_216ee() local_unnamed_addr {
dec_label_pc_216ee:
  %v0_216f2 = load i32, i32* @eax, align 8
  ret i32 %v0_216f2
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_216f6:
  %v1_21716 = add i32 %arg2, 4
  %v2_21723 = call i32 @unknown_47daa(i32 %arg1, i32 %v1_21716)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21737

bb:                                               ; preds = %dec_label_pc_216f6
  %v1_21735 = call i32 @function_2173c()
  br label %dec_label_pc_21737

dec_label_pc_21737:                               ; preds = %bb, %dec_label_pc_216f6
  %v2_21735 = phi i32 [ %v1_21735, %bb ], [ %arg1, %dec_label_pc_216f6 ]
  ret i32 %v2_21735

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2173c() local_unnamed_addr {
dec_label_pc_2173c:
  %v0_2173d = load i32, i32* @eax, align 8
  ret i32 %v0_2173d
}

define i32 @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21740:
  %v2_21767 = load i32, i32* %arg2, align 4
  %v1_2176c = inttoptr i32 %arg3 to i32*
  %v2_2176c = load i32, i32* %v1_2176c, align 4
  %v12_2176e = icmp eq i32 %v2_21767, %v2_2176c
  br i1 %v12_2176e, label %dec_label_pc_21785, label %dec_label_pc_21772

dec_label_pc_21772:                               ; preds = %dec_label_pc_21740
  %v2_2177c = load i32, i32* %v1_2176c, align 4
  %v2_2177e = sub i32 %v2_21767, %v2_2177c
  %v8_2177e = xor i32 %v2_2177c, %v2_21767
  %v9_2177e = xor i32 %v2_2177e, %v2_21767
  %v10_2177e = and i32 %v9_2177e, %v8_2177e
  %v11_2177e = icmp slt i32 %v10_2177e, 0
  %v13_2177e = icmp slt i32 %v2_2177e, 0
  %v2_21780 = icmp ne i1 %v13_2177e, %v11_2177e
  %v3_21780 = zext i1 %v2_21780 to i32
  %v5_21780 = and i32 %v2_2177c, -256
  %v6_21780 = or i32 %v3_21780, %v5_21780
  ret i32 %v6_21780

dec_label_pc_21785:                               ; preds = %dec_label_pc_21740
  %v10_2178a = icmp eq i32 %v2_21767, 1
  br i1 %v10_2178a, label %dec_label_pc_21796, label %dec_label_pc_2178f

dec_label_pc_2178f:                               ; preds = %dec_label_pc_21785
  ret i32 0

dec_label_pc_21796:                               ; preds = %dec_label_pc_21785
  %v1_21799 = add i32 %arg3, 4
  %v1_2179f = call i32 @unknown_47e2c(i32 %v1_21799)
  ret i32 %v1_2179f

; uselistorder directives
  uselistorder i32 %v2_2177e, { 1, 0 }
  uselistorder i32 %v2_2177c, { 1, 0, 2 }
  uselistorder i32 %v2_21767, { 0, 4, 3, 2, 1 }
}

define i32 @function_217a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_217a4:
  %v0_217a4 = load i32, i32* @eax, align 8
  store i32 %v0_217a4, i32* @ebx, align 8
  %v0_217a6 = load i32, i32* @ebp, align 4
  %v1_217a6 = add i32 %v0_217a6, -32
  %v2_217a6 = inttoptr i32 %v1_217a6 to i32*
  %v3_217a6 = load i32, i32* %v2_217a6, align 4
  %v1_217a9 = add i32 %v3_217a6, 4
  %v1_217af = call i32 @unknown_47e2c(i32 %v1_217a9)
  %v0_217b6 = load i32, i32* @ebp, align 4
  %v1_217b6 = add i32 %v0_217b6, -28
  %v2_217b6 = inttoptr i32 %v1_217b6 to i32*
  %v3_217b6 = load i32, i32* %v2_217b6, align 4
  store i32 %v3_217b6, i32* @eax, align 8
  %v0_217b9 = load i32, i32* @ebx, align 8
  %v3_217c4 = call i32 @function_33dd6(i32 %v3_217b6, i32 %v1_217af, i32 %v0_217b9)
  store i32 %v3_217c4, i32* @eax, align 8
  %v0_217c9 = load i32, i32* @ebp, align 4
  %v1_217c9 = add i32 %v0_217c9, -12
  %v2_217c9 = inttoptr i32 %v1_217c9 to i32*
  %v3_217c9 = load i32, i32* %v2_217c9, align 4
  %v4_217cc = icmp eq i32 %v3_217c9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_217cc, label %bb, label %dec_label_pc_217d5

bb:                                               ; preds = %dec_label_pc_217a4
  %v1_217d3 = call i32 @function_217da()
  br label %dec_label_pc_217d5

dec_label_pc_217d5:                               ; preds = %bb, %dec_label_pc_217a4
  %v2_217d3 = phi i32 [ %v1_217d3, %bb ], [ %v3_217c4, %dec_label_pc_217a4 ]
  ret i32 %v2_217d3
}

define i32 @function_217da() local_unnamed_addr {
dec_label_pc_217da:
  %v0_217df = load i32, i32* @eax, align 8
  ret i32 %v0_217df
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_217e0:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21806

bb:                                               ; preds = %dec_label_pc_217e0
  %v2_21804 = call i32 @function_2180b(i32 %arg1)
  br label %dec_label_pc_21806

dec_label_pc_21806:                               ; preds = %bb, %dec_label_pc_217e0
  %v3_21804 = phi i32 [ %v2_21804, %bb ], [ %arg1, %dec_label_pc_217e0 ]
  ret i32 %v3_21804
}

define i32 @function_2180b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2180b:
  %v0_2180c = load i32, i32* @eax, align 8
  ret i32 %v0_2180c
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE11upper_boundERSQ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2180e:
  %v3_21845 = call i32 @unknown_47f62(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2185c

bb:                                               ; preds = %dec_label_pc_2180e
  %v1_2185a = call i32 @function_21861()
  br label %dec_label_pc_2185c

dec_label_pc_2185c:                               ; preds = %bb, %dec_label_pc_2180e
  %v2_2185a = phi i32 [ %v1_2185a, %bb ], [ %arg1, %dec_label_pc_2180e ]
  ret i32 %v2_2185a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21861() local_unnamed_addr {
dec_label_pc_21861:
  %v0_21862 = load i32, i32* @eax, align 8
  ret i32 %v0_21862
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1ERKSt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21866:
  ret i32 %arg2
}

define i32 @function_2187a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2187a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2187a = load i32, i32* @eax, align 8
  %v1_2187a = trunc i32 %v0_2187a to i8
  %v2_2187a = load i1, i1* @cf, align 1
  %v3_2187a = zext i1 %v2_2187a to i8
  %v4_2187a = add i8 %v3_2187a, %v1_2187a
  %v22_2187a = zext i8 %v4_2187a to i32
  %v24_2187a = and i32 %v0_2187a, -256
  %v25_2187a = or i32 %v22_2187a, %v24_2187a
  store i32 %v25_2187a, i32* %eax.global-to-local, align 8
  %v1_2187c = inttoptr i32 %v25_2187a to i8*
  %v2_2187c = load i8, i8* %v1_2187c, align 1
  %v5_2187c = add i8 %v2_2187c, %v4_2187a
  store i8 %v5_2187c, i8* %v1_2187c, align 1
  %v0_2187e = load i32, i32* %eax.global-to-local, align 8
  %v1_2187e = load i32, i32* @ebp, align 4
  %v2_2187e = add i32 %v1_2187e, -12
  %v3_2187e = inttoptr i32 %v2_2187e to i32*
  store i32 %v0_2187e, i32* %v3_2187e, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_21883 = load i32, i32* @ebp, align 4
  %v1_21883 = add i32 %v0_21883, -32
  %v2_21883 = inttoptr i32 %v1_21883 to i32*
  %v3_21883 = load i32, i32* %v2_21883, align 4
  store i32 %v3_21883, i32* %eax.global-to-local, align 8
  %v1_21886 = inttoptr i32 %v3_21883 to i32*
  %v2_21886 = load i32, i32* %v1_21886, align 4
  %v1_21888 = add i32 %v0_21883, -28
  %v2_21888 = inttoptr i32 %v1_21888 to i32*
  %v3_21888 = load i32, i32* %v2_21888, align 4
  store i32 %v3_21888, i32* %eax.global-to-local, align 8
  %v2_2188b = inttoptr i32 %v3_21888 to i32*
  store i32 %v2_21886, i32* %v2_2188b, align 4
  %v0_2188d = load i32, i32* @ebp, align 4
  %v1_2188d = add i32 %v0_2188d, -12
  %v2_2188d = inttoptr i32 %v1_2188d to i32*
  %v3_2188d = load i32, i32* %v2_2188d, align 4
  %v3_21890 = xor i32 %v3_2188d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21890 = icmp eq i32 %v3_21890, 0
  store i32 %v3_21890, i32* @eax, align 8
  br i1 %v4_21890, label %bb, label %dec_label_pc_21899

bb:                                               ; preds = %dec_label_pc_2187a
  %v1_21897 = call i32 @function_2189e()
  store i32 %v1_21897, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_21899

dec_label_pc_21899:                               ; preds = %bb, %dec_label_pc_2187a
  %v2_21897 = phi i32 [ %v1_21897, %bb ], [ %v3_21890, %dec_label_pc_2187a ]
  ret i32 %v2_21897
}

define i32 @function_2189e() local_unnamed_addr {
dec_label_pc_2189e:
  %v0_2189f = load i32, i32* @eax, align 8
  ret i32 %v0_2189f
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_218a0:
  ret i32 %arg1
}

define i32 @function_218ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_218ca:
  %v0_218ca = call i32 @function_3553a()
  %v0_218cf = load i32, i32* @ebp, align 4
  %v1_218d5 = add i32 %v0_218cf, -20
  ret i32 %v1_218d5
}

define i32 @function_218e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_218e0:
  %ebx.global-to-local = alloca i32, align 4
  %v2_218e2 = load i32, i32* @eax, align 8
  %v4_218e2 = mul i32 %v2_218e2, 2
  %v21_218e2 = inttoptr i32 %v2_218e2 to i32*
  store i32 %v4_218e2, i32* %v21_218e2, align 4
  %v0_218e7 = load i32, i32* @ebp, align 4
  %v1_218e7 = add i32 %v0_218e7, -20
  %v1_218ee = add i32 %v0_218e7, -16
  %v2_218f4 = call i32 @unknown_43106(i32 %v1_218ee, i32 %v1_218e7)
  %v0_218f9 = load i32, i32* @ebp, align 4
  %v1_218f9 = add i32 %v0_218f9, -16
  %v1_21900 = add i32 %v0_218f9, -36
  %v2_21900 = inttoptr i32 %v1_21900 to i32*
  %v3_21900 = load i32, i32* %v2_21900, align 4
  %v2_21906 = call i32 @unknown_48070(i32 %v3_21900, i32 %v1_218f9)
  %v4_2190b = trunc i32 %v2_21906 to i8
  %v5_2190b = icmp eq i8 %v4_2190b, 0
  %v0_2192e = load i32, i32* @ebp, align 4
  br i1 %v5_2190b, label %dec_label_pc_2192e, label %dec_label_pc_2190f

dec_label_pc_2190f:                               ; preds = %dec_label_pc_218e0
  %v1_2190f = add i32 %v0_2192e, -32
  %v2_2190f = inttoptr i32 %v1_2190f to i32*
  %v3_2190f = load i32, i32* %v2_2190f, align 4
  %v1_21912 = add i32 %v0_2192e, -28
  %v2_21912 = inttoptr i32 %v1_21912 to i32*
  %v3_21912 = load i32, i32* %v2_21912, align 4
  store i32 %v3_21912, i32* %ebx.global-to-local, align 8
  %v1_21915 = add i32 %v0_2192e, -40
  %v2_2191f = call i32 @unknown_382e6(i32 %v1_21915, i32 %v3_2190f)
  %v0_21927 = load i32, i32* @ebp, align 4
  %v1_21927 = add i32 %v0_21927, -40
  %v2_21927 = inttoptr i32 %v1_21927 to i32*
  %v3_21927 = load i32, i32* %v2_21927, align 4
  %v1_2192a = load i32, i32* %ebx.global-to-local, align 8
  %v2_2192a = inttoptr i32 %v1_2192a to i32*
  store i32 %v3_21927, i32* %v2_2192a, align 4
  br label %dec_label_pc_21943

dec_label_pc_2192e:                               ; preds = %dec_label_pc_218e0
  %v1_2192e = add i32 %v0_2192e, -36
  %v2_2192e = inttoptr i32 %v1_2192e to i32*
  %v3_2192e = load i32, i32* %v2_2192e, align 4
  %v1_21934 = call i32 @unknown_480b0(i32 %v3_2192e)
  %v0_2193b = load i32, i32* @ebp, align 4
  %v1_2193b = add i32 %v0_2193b, -28
  %v2_2193b = inttoptr i32 %v1_2193b to i32*
  %v3_2193b = load i32, i32* %v2_2193b, align 4
  %v1_2193e = add i32 %v1_21934, 12
  %v2_2193e = inttoptr i32 %v1_2193e to i32*
  %v3_2193e = load i32, i32* %v2_2193e, align 4
  %v2_21941 = inttoptr i32 %v3_2193b to i32*
  store i32 %v3_2193e, i32* %v2_21941, align 4
  br label %dec_label_pc_21943

dec_label_pc_21943:                               ; preds = %dec_label_pc_2192e, %dec_label_pc_2190f
  %v0_21943 = load i32, i32* @ebp, align 4
  %v1_21943 = add i32 %v0_21943, -28
  %v2_21943 = inttoptr i32 %v1_21943 to i32*
  %v3_21943 = load i32, i32* %v2_21943, align 4
  store i32 %v3_21943, i32* @eax, align 8
  %v1_21946 = add i32 %v0_21943, -12
  %v2_21946 = inttoptr i32 %v1_21946 to i32*
  %v3_21946 = load i32, i32* %v2_21946, align 4
  %v4_21949 = icmp eq i32 %v3_21946, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_21949, label %bb, label %dec_label_pc_21952

bb:                                               ; preds = %dec_label_pc_21943
  %v1_21950 = call i32 @function_21957()
  br label %dec_label_pc_21952

dec_label_pc_21952:                               ; preds = %bb, %dec_label_pc_21943
  %v2_21950 = phi i32 [ %v1_21950, %bb ], [ %v3_21943, %dec_label_pc_21943 ]
  ret i32 %v2_21950

; uselistorder directives
  uselistorder i32 %v0_2192e, { 3, 0, 2, 1 }
  uselistorder i32 %v2_218e2, { 1, 0 }
}

define i32 @function_21957() local_unnamed_addr {
dec_label_pc_21957:
  %v0_2195b = load i32, i32* @eax, align 8
  ret i32 %v0_2195b
}

define i32 @function_21958(i32 %arg1) local_unnamed_addr {
dec_label_pc_21958:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2195e:
  %v2_21988 = call i32 @unknown_481a8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2199f

bb:                                               ; preds = %dec_label_pc_2195e
  %v1_2199d = call i32 @function_219a4()
  br label %dec_label_pc_2199f

dec_label_pc_2199f:                               ; preds = %bb, %dec_label_pc_2195e
  %v2_2199d = phi i32 [ %v1_2199d, %bb ], [ %arg1, %dec_label_pc_2195e ]
  ret i32 %v2_2199d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_219a4() local_unnamed_addr {
dec_label_pc_219a4:
  %v0_219a5 = load i32, i32* @eax, align 8
  ret i32 %v0_219a5
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_219a8:
  %ebp.global-to-local = alloca i32, align 4
  %v0_219a8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_219c2 = load i32, i32* %arg1, align 4
  %v1_219c4 = add i32 %v2_219c2, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v0_219a8, i32* %ebp.global-to-local, align 4
  ret i32 %v1_219c4
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_219da:
  %v2_219fa = load i32, i32* %arg1, align 4
  %v1_219ff = inttoptr i32 %arg2 to i32*
  %v2_219ff = load i32, i32* %v1_219ff, align 4
  %v12_21a01 = icmp eq i32 %v2_219fa, %v2_219ff
  %v1_21a03 = zext i1 %v12_21a01 to i32
  %v3_21a03 = and i32 %v2_219ff, -256
  %v4_21a03 = or i32 %v1_21a03, %v3_21a03
  store i32 %v4_21a03, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21a12

bb:                                               ; preds = %dec_label_pc_219da
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_21a10 = call i32 @function_21a17(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_21a12

dec_label_pc_21a12:                               ; preds = %bb, %dec_label_pc_219da
  %v4_21a10 = phi i32 [ %v3_21a10, %bb ], [ %v4_21a03, %dec_label_pc_219da ]
  ret i32 %v4_21a10

; uselistorder directives
  uselistorder i32 %v2_219ff, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21a17(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a17:
  %v0_21a18 = load i32, i32* @eax, align 8
  ret i32 %v0_21a18
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEC1ERS7_RKSL_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21a1a:
  ret i32 %arg1
}

define i32 @function_21a4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a4c:
  %v2_21a4c = load i32, i32* @eax, align 8
  %v4_21a4c = mul i32 %v2_21a4c, 2
  %v21_21a4c = inttoptr i32 %v2_21a4c to i32*
  store i32 %v4_21a4c, i32* %v21_21a4c, align 4
  %v0_21a4f = load i32, i32* @ebp, align 4
  %v1_21a4f = add i32 %v0_21a4f, -28
  %v2_21a4f = inttoptr i32 %v1_21a4f to i32*
  %v3_21a4f = load i32, i32* %v2_21a4f, align 4
  %v1_21a52 = add i32 %v0_21a4f, -36
  %v2_21a52 = inttoptr i32 %v1_21a52 to i32*
  %v3_21a52 = load i32, i32* %v2_21a52, align 4
  %v1_21a55 = inttoptr i32 %v3_21a52 to i32*
  %v2_21a55 = load i32, i32* %v1_21a55, align 4
  %v2_21a57 = add i32 %v3_21a4f, 12
  %v3_21a57 = inttoptr i32 %v2_21a57 to i32*
  store i32 %v2_21a55, i32* %v3_21a57, align 4
  %v0_21a5a = load i32, i32* @ebp, align 4
  %v1_21a5a = add i32 %v0_21a5a, -12
  %v2_21a5a = inttoptr i32 %v1_21a5a to i32*
  %v3_21a5a = load i32, i32* %v2_21a5a, align 4
  %v3_21a5d = xor i32 %v3_21a5a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21a5d = icmp eq i32 %v3_21a5d, 0
  store i32 %v3_21a5d, i32* @eax, align 8
  br i1 %v4_21a5d, label %bb, label %dec_label_pc_21a66

bb:                                               ; preds = %dec_label_pc_21a4c
  %v1_21a64 = call i32 @function_21a6b()
  br label %dec_label_pc_21a66

dec_label_pc_21a66:                               ; preds = %bb, %dec_label_pc_21a4c
  %v2_21a64 = phi i32 [ %v1_21a64, %bb ], [ %v3_21a5d, %dec_label_pc_21a4c ]
  ret i32 %v2_21a64

; uselistorder directives
  uselistorder i32 %v2_21a4c, { 1, 0 }
}

define i32 @function_21a6b() local_unnamed_addr {
dec_label_pc_21a6b:
  %v0_21a6c = load i32, i32* @eax, align 8
  ret i32 %v0_21a6c
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21a6e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_21a9a = ptrtoint i32* %stack_var_-40 to i32
  %v2_21a9e = ptrtoint i32* %stack_var_-20 to i32
  %v2_21aa4 = call i32 @unknown_432d4(i32 %v2_21a9e, i32 %v4_21a9a)
  %v3_21ab6 = load i32, i32* %stack_var_-20, align 4
  %v4_21ac4 = call i32 @unknown_482ee(i32 %arg1, i32 %arg2, i32 %v3_21ab6, i32 %arg4)
  ret i32 %arg1
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5eraseESt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21ae4:
  %stack_var_-20 = alloca i32, align 4
  %v2_21b08 = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_21b08
}

define i32 @function_21b0c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21b0c:
  %v0_21b0c = load i32, i32* @eax, align 8
  %v2_21b0c = add i32 %v0_21b0c, 36
  %v16_21b0c = and i32 %v2_21b0c, 255
  %v18_21b0c = and i32 %v0_21b0c, -256
  %v19_21b0c = or i32 %v16_21b0c, %v18_21b0c
  ret i32 %v19_21b0c

; uselistorder directives
  uselistorder i32 %v0_21b0c, { 1, 0 }
}

define i32 @function_21b12(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b12:
  %v0_21b12 = load i32, i32* @ebx, align 8
  %v1_21b12 = add i32 %v0_21b12, 1149890629
  %v2_21b12 = inttoptr i32 %v1_21b12 to i8*
  %v3_21b12 = load i8, i8* %v2_21b12, align 1
  %v4_21b12 = load i32, i32* @ecx, align 4
  %v5_21b12 = trunc i32 %v4_21b12 to i8
  %v6_21b12 = add i8 %v5_21b12, %v3_21b12
  store i8 %v6_21b12, i8* %v2_21b12, align 1
  %v0_21b1a = load i32, i32* @ebp, align 4
  %v1_21b1a = add i32 %v0_21b1a, -28
  %v2_21b1a = inttoptr i32 %v1_21b1a to i32*
  %v3_21b1a = load i32, i32* %v2_21b1a, align 4
  %v1_21b20 = call i32 @unknown_48780(i32 %v3_21b1a)
  %v0_21b25 = load i32, i32* @ebp, align 4
  %v1_21b25 = add i32 %v0_21b25, -12
  %v2_21b25 = inttoptr i32 %v1_21b25 to i32*
  %v3_21b25 = load i32, i32* %v2_21b25, align 4
  %v3_21b28 = xor i32 %v3_21b25, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21b28 = icmp eq i32 %v3_21b28, 0
  store i32 %v3_21b28, i32* @eax, align 8
  br i1 %v4_21b28, label %bb, label %dec_label_pc_21b31

bb:                                               ; preds = %dec_label_pc_21b12
  %v1_21b2f = call i32 @function_21b36()
  br label %dec_label_pc_21b31

dec_label_pc_21b31:                               ; preds = %bb, %dec_label_pc_21b12
  %v2_21b2f = phi i32 [ %v1_21b2f, %bb ], [ %v3_21b28, %dec_label_pc_21b12 ]
  ret i32 %v2_21b2f
}

define i32 @function_21b36() local_unnamed_addr {
dec_label_pc_21b36:
  %v0_21b37 = load i32, i32* @eax, align 8
  ret i32 %v0_21b37
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_eraseESt14_List_iteratorISJ_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b38:
  ret i32 %arg1
}

define i32 @function_21b44(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b44:
  %v0_21b46 = load i32, i32* @ebp, align 4
  %v0_21b47 = load i32, i32* @eax, align 8
  %v2_21b47 = or i32 %v0_21b47, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_21b47, i32* @eax, align 8
  %v1_21b49 = add i32 %v0_21b46, 2
  %v9_21b49 = icmp eq i32 %v1_21b49, 0
  store i32 %v1_21b49, i32* @ebp, align 4
  %v0_21b4a = load i32, i32* @ecx, align 4
  %v1_21b4a = add i32 %v0_21b4a, -1
  store i32 %v1_21b4a, i32* @ecx, align 4
  %v2_21b4a = icmp eq i32 %v1_21b4a, 0
  %v4_21b4a = or i1 %v9_21b49, %v2_21b4a
  br i1 %v4_21b4a, label %dec_label_pc_21b4c, label %bb

bb:                                               ; preds = %dec_label_pc_21b44
  %v6_21b4a = call i32 @function_21bb1()
  %v1_21b51.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_21b4c

dec_label_pc_21b4c:                               ; preds = %dec_label_pc_21b44, %bb
  %v1_21b51 = phi i32 [ %v1_21b49, %dec_label_pc_21b44 ], [ %v1_21b51.pre, %bb ]
  %v2_21b51 = add i32 %v1_21b51, -12
  %v3_21b51 = inttoptr i32 %v2_21b51 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_21b51, align 4
  %v0_21b56 = load i32, i32* @ebp, align 4
  %v1_21b56 = add i32 %v0_21b56, -32
  %v2_21b56 = inttoptr i32 %v1_21b56 to i32*
  %v3_21b56 = load i32, i32* %v2_21b56, align 4
  ret i32 %v3_21b56

; uselistorder directives
  uselistorder i32 %v1_21b4a, { 1, 0 }
  uselistorder label %dec_label_pc_21b4c, { 1, 0 }
}

define i32 @function_21b76() local_unnamed_addr {
dec_label_pc_21b76:
  %eax.global-to-local = alloca i32, align 4
  %v0_21b76 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21b76
}

define i32 @function_21bb1() local_unnamed_addr {
dec_label_pc_21bb1:
  %v0_21bb3 = call i32 @unknown_48964()
  %v0_21bb8 = load i32, i32* @ebp, align 4
  %v1_21bb8 = add i32 %v0_21bb8, -12
  %v2_21bb8 = inttoptr i32 %v1_21bb8 to i32*
  %v3_21bb8 = load i32, i32* %v2_21bb8, align 4
  %v3_21bbb = xor i32 %v3_21bb8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21bbb = icmp eq i32 %v3_21bbb, 0
  store i32 %v3_21bbb, i32* @eax, align 8
  br i1 %v4_21bbb, label %bb, label %dec_label_pc_21bc4

bb:                                               ; preds = %dec_label_pc_21bb1
  %v1_21bc2 = call i32 @function_21be2()
  store i32 %v1_21bc2, i32* @eax, align 8
  br label %dec_label_pc_21bc4

dec_label_pc_21bc4:                               ; preds = %bb, %dec_label_pc_21bb1
  %v0_21bc4 = call i32 @function_21bdd()
  ret i32 %v0_21bc4
}

define i32 @function_21bc7() local_unnamed_addr {
dec_label_pc_21bc7:
  %eax.global-to-local = alloca i32, align 4
  %v0_21bc7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21bc7
}

define i32 @function_21bdd() local_unnamed_addr {
dec_label_pc_21bdd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21be2() local_unnamed_addr {
dec_label_pc_21be2:
  %v0_21be2 = load i32, i32* @ebp, align 4
  %v1_21be2 = add i32 %v0_21be2, -4
  %v2_21be2 = inttoptr i32 %v1_21be2 to i32*
  %v3_21be2 = load i32, i32* %v2_21be2, align 4
  store i32 %v3_21be2, i32* @ebx, align 8
  %v0_21be6 = load i32, i32* @eax, align 8
  ret i32 %v0_21be6
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj120ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21be8:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21c0e

bb:                                               ; preds = %dec_label_pc_21be8
  %v2_21c0c = call i32 @function_21c13(i32 %arg1)
  br label %dec_label_pc_21c0e

dec_label_pc_21c0e:                               ; preds = %bb, %dec_label_pc_21be8
  %v3_21c0c = phi i32 [ %v2_21c0c, %bb ], [ %arg1, %dec_label_pc_21be8 ]
  ret i32 %v3_21c0c
}

define i32 @function_21c13(i32 %arg1) local_unnamed_addr {
dec_label_pc_21c13:
  %v0_21c14 = load i32, i32* @eax, align 8
  ret i32 %v0_21c14
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19auto_buffer_destroyEPSA_RKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21c16:
  ret i32 %arg2
}

define i32 @function_21c40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21c40:
  %v2_21c40 = load i32, i32* @ecx, align 4
  %v3_21c40 = load i32, i32* @eax, align 8
  %v4_21c40 = or i32 %v3_21c40, %v2_21c40
  %v12_21c40 = inttoptr i32 %v2_21c40 to i32*
  store i32 %v4_21c40, i32* %v12_21c40, align 4
  %v0_21c43 = load i32, i32* @ebx, align 8
  %v1_21c43 = add i32 %v0_21c43, 862319685
  %v2_21c43 = inttoptr i32 %v1_21c43 to i8*
  %v3_21c43 = load i8, i8* %v2_21c43, align 1
  %v4_21c43 = load i32, i32* @ecx, align 4
  %v5_21c43 = trunc i32 %v4_21c43 to i8
  %v6_21c43 = add i8 %v5_21c43, %v3_21c43
  store i8 %v6_21c43, i8* %v2_21c43, align 1
  %v0_21c49 = load i32, i32* @eax, align 8
  %v1_21c49 = add i32 %v0_21c49, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_21c49 = icmp eq i32 %v1_21c49, 0
  store i32 %v1_21c49, i32* @eax, align 8
  br i1 %v10_21c49, label %bb, label %dec_label_pc_21c50

bb:                                               ; preds = %dec_label_pc_21c40
  %v1_21c4e = call i32 @function_21c55()
  br label %dec_label_pc_21c50

dec_label_pc_21c50:                               ; preds = %bb, %dec_label_pc_21c40
  %v2_21c4e = phi i32 [ %v1_21c4e, %bb ], [ %v1_21c49, %dec_label_pc_21c40 ]
  ret i32 %v2_21c4e

; uselistorder directives
  uselistorder i32 %v2_21c40, { 1, 0 }
}

define i32 @function_21c55() local_unnamed_addr {
dec_label_pc_21c55:
  %v0_21c56 = load i32, i32* @eax, align 8
  ret i32 %v0_21c56
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21c58:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v1_21c7c = call i32 @unknown_48ace(i32 %arg2)
  %v2_21c85 = ptrtoint i32* %stack_var_-17 to i32
  %v2_21c8b = call i32 @unknown_48afc(i32 %v2_21c85, i32 %v1_21c7c)
  %v2_21c9d = call i32 @unknown_48b38(i32 %arg1, i32 %v2_21c85)
  %v1_21ca8 = call i32 @unknown_489ae(i32 %v2_21c85)
  %v2_21cad = ptrtoint i32* %stack_var_-24 to i32
  %v2_21cba = call i32 @unknown_48bec(i32 %v2_21cad, i32 %arg2)
  %v2_21cc2 = ptrtoint i32* %stack_var_-28 to i32
  %v2_21ccf = call i32 @unknown_48ba2(i32 %v2_21cc2, i32 %arg2)
  %v0_21cd7 = load i32, i32* %ebx.global-to-local, align 8
  %v3_21cdb = load i32, i32* %stack_var_-24, align 4
  %v3_21ce2 = load i32, i32* %stack_var_-28, align 4
  %v4_21cef = call i32 @unknown_48c34(i32 %arg1, i32 %v3_21ce2, i32 %v3_21cdb, i32 %v0_21cd7)
  %v0_21cf4 = call i32 @function_21d24()
  ret i32 %v0_21cf4

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21cf7() local_unnamed_addr {
dec_label_pc_21cf7:
  %eax.global-to-local = alloca i32, align 4
  %v0_21cf7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21cf7
}

define i32 @function_21d00(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d00:
  %v0_21d00 = load i32, i32* @edx, align 8
  %v1_21d00 = trunc i32 %v0_21d00 to i16
  %v2_21d00 = call i8 @__asm_insb(i16 %v1_21d00)
  %v3_21d00 = load i32, i32* @edi, align 8
  %v4_21d00 = inttoptr i32 %v3_21d00 to i8*
  store i8 %v2_21d00, i8* %v4_21d00, align 1
  %v0_21d03 = load i32, i32* @ebx, align 8
  ret i32 %v0_21d03
}

define i32 @function_21d0e() local_unnamed_addr {
dec_label_pc_21d0e:
  %eax.global-to-local = alloca i32, align 4
  %v0_21d0e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21d0e
}

define i32 @function_21d24() local_unnamed_addr {
dec_label_pc_21d24:
  %v0_21d24 = load i32, i32* @ebp, align 4
  %v1_21d24 = add i32 %v0_21d24, -12
  %v2_21d24 = inttoptr i32 %v1_21d24 to i32*
  %v3_21d24 = load i32, i32* %v2_21d24, align 4
  %v3_21d27 = xor i32 %v3_21d24, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21d27 = icmp eq i32 %v3_21d27, 0
  store i32 %v3_21d27, i32* @eax, align 8
  br i1 %v4_21d27, label %bb, label %dec_label_pc_21d30

bb:                                               ; preds = %dec_label_pc_21d24
  %v1_21d2e = call i32 @function_21d35()
  br label %dec_label_pc_21d30

dec_label_pc_21d30:                               ; preds = %bb, %dec_label_pc_21d24
  %v2_21d2e = phi i32 [ %v1_21d2e, %bb ], [ %v3_21d27, %dec_label_pc_21d24 ]
  ret i32 %v2_21d2e
}

define i32 @function_21d35() local_unnamed_addr {
dec_label_pc_21d35:
  %v0_21d39 = load i32, i32* @eax, align 8
  ret i32 %v0_21d39
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implD1Ev() local_unnamed_addr {
dec_label_pc_21d3a:
  %eax.global-to-local = alloca i32, align 4
  %v2_21d3b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_21d3b
}

define i32 @function_21d3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d3e:
  %v1_21d4c = load i32, i32* @ebp, align 4
  %v2_21d4c = add i32 %v1_21d4c, -12
  %v3_21d4c = inttoptr i32 %v2_21d4c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_21d4c, align 4
  %v0_21d51 = load i32, i32* @ebp, align 4
  %v1_21d51 = add i32 %v0_21d51, -28
  %v2_21d51 = inttoptr i32 %v1_21d51 to i32*
  %v3_21d51 = load i32, i32* %v2_21d51, align 4
  %v1_21d57 = call i32 @unknown_48d90(i32 %v3_21d51)
  %v0_21d5c = load i32, i32* @ebp, align 4
  %v1_21d5c = add i32 %v0_21d5c, -12
  %v2_21d5c = inttoptr i32 %v1_21d5c to i32*
  %v3_21d5c = load i32, i32* %v2_21d5c, align 4
  %v3_21d5f = xor i32 %v3_21d5c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21d5f = icmp eq i32 %v3_21d5f, 0
  store i32 %v3_21d5f, i32* @eax, align 8
  br i1 %v4_21d5f, label %bb, label %dec_label_pc_21d68

bb:                                               ; preds = %dec_label_pc_21d3e
  %v1_21d66 = call i32 @function_21d6d()
  br label %dec_label_pc_21d68

dec_label_pc_21d68:                               ; preds = %bb, %dec_label_pc_21d3e
  %v2_21d66 = phi i32 [ %v1_21d66, %bb ], [ %v3_21d5f, %dec_label_pc_21d3e ]
  ret i32 %v2_21d66
}

define i32 @function_21d6d() local_unnamed_addr {
dec_label_pc_21d6d:
  %v0_21d6e = load i32, i32* @eax, align 8
  ret i32 %v0_21d6e
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d70:
  %v1_21d8e = call i32 @unknown_48dfc(i32 %arg1)
  %v1_21d99 = call i32 @unknown_43aaa(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21daa

bb:                                               ; preds = %dec_label_pc_21d70
  %v1_21da8 = call i32 @function_21dc8()
  store i32 %v1_21da8, i32* @eax, align 8
  br label %dec_label_pc_21daa

dec_label_pc_21daa:                               ; preds = %bb, %dec_label_pc_21d70
  %v0_21daa = call i32 @function_21dc3()
  ret i32 %v0_21daa

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21dad() local_unnamed_addr {
dec_label_pc_21dad:
  %eax.global-to-local = alloca i32, align 4
  %v0_21dad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21dad
}

define i32 @function_21db2(i32 %arg1) local_unnamed_addr {
dec_label_pc_21db2:
  %v1_21db4 = call i32 @unknown_43aaa(i32 ptrtoint (i32* @2 to i32))
  %v0_21db9 = load i32, i32* @ebx, align 8
  ret i32 %v0_21db9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_43aaa, { 1, 0 }
}

define i32 @function_21dc3() local_unnamed_addr {
dec_label_pc_21dc3:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21dc6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21dc6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21dc8() local_unnamed_addr {
dec_label_pc_21dc8:
  %v0_21dcd = load i32, i32* @eax, align 8
  ret i32 %v0_21dcd
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEC1ERKST_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21dce:
  %v2_21df8 = call i32 @unknown_48f18(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @function_21e08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21e08:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21e0d() local_unnamed_addr {
dec_label_pc_21e0d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_21e0d = load i32, i32* %ecx.global-to-local, align 4
  %v1_21e0d = add i32 %v0_21e0d, -1
  store i32 %v1_21e0d, i32* %ecx.global-to-local, align 4
  %v0_21e0f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21e0f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e10:
  %v1_21e2d = call i32 @unknown_49072(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21e3e

bb:                                               ; preds = %dec_label_pc_21e10
  %v1_21e3c = call i32 @function_21e43()
  br label %dec_label_pc_21e3e

dec_label_pc_21e3e:                               ; preds = %bb, %dec_label_pc_21e10
  %v2_21e3c = phi i32 [ %v1_21e3c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_21e10 ]
  ret i32 %v2_21e3c
}

define i32 @function_21e43() local_unnamed_addr {
dec_label_pc_21e43:
  %v0_21e44 = load i32, i32* @eax, align 8
  ret i32 %v0_21e44
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EED1Ev() local_unnamed_addr {
dec_label_pc_21e46:
  %eax.global-to-local = alloca i32, align 4
  %v5_21e49 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_21e49
}

define i32 @function_21e4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21e4a:
  %v0_21e4d = load i32, i32* @ebp, align 4
  %v1_21e4d = add i32 %v0_21e4d, 8
  %v2_21e4d = inttoptr i32 %v1_21e4d to i32*
  %v3_21e4d = load i32, i32* %v2_21e4d, align 4
  %v2_21e50 = add i32 %v0_21e4d, -28
  %v3_21e50 = inttoptr i32 %v2_21e50 to i32*
  store i32 %v3_21e4d, i32* %v3_21e50, align 4
  %v1_21e59 = load i32, i32* @ebp, align 4
  %v2_21e59 = add i32 %v1_21e59, -12
  %v3_21e59 = inttoptr i32 %v2_21e59 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_21e59, align 4
  %v0_21e5e = load i32, i32* @ebp, align 4
  %v1_21e5e = add i32 %v0_21e5e, -28
  %v2_21e5e = inttoptr i32 %v1_21e5e to i32*
  %v3_21e5e = load i32, i32* %v2_21e5e, align 4
  %v1_21e64 = call i32 @unknown_483e6(i32 %v3_21e5e)
  %v0_21e6d = load i32, i32* @ebp, align 4
  %v1_21e6d = add i32 %v0_21e6d, -28
  %v2_21e6d = inttoptr i32 %v1_21e6d to i32*
  %v3_21e6d = load i32, i32* %v2_21e6d, align 4
  %v2_21e73 = call i32 @unknown_490de(i32 %v3_21e6d, i32 %v1_21e64)
  %v0_21e78 = load i32, i32* @ebp, align 4
  %v1_21e78 = add i32 %v0_21e78, -28
  %v2_21e78 = inttoptr i32 %v1_21e78 to i32*
  %v3_21e78 = load i32, i32* %v2_21e78, align 4
  %v1_21e7e = call i32 @unknown_43c56(i32 %v3_21e78)
  %v0_21e83 = load i32, i32* @ebp, align 4
  %v1_21e83 = add i32 %v0_21e83, -12
  %v2_21e83 = inttoptr i32 %v1_21e83 to i32*
  %v3_21e83 = load i32, i32* %v2_21e83, align 4
  %v3_21e86 = xor i32 %v3_21e83, ptrtoint ([3 x i8]* @3 to i32)
  %v4_21e86 = icmp eq i32 %v3_21e86, 0
  store i32 %v3_21e86, i32* @eax, align 8
  br i1 %v4_21e86, label %bb, label %dec_label_pc_21e8f

bb:                                               ; preds = %dec_label_pc_21e4a
  %v1_21e8d = call i32 @function_21ead()
  store i32 %v1_21e8d, i32* @eax, align 8
  br label %dec_label_pc_21e8f

dec_label_pc_21e8f:                               ; preds = %bb, %dec_label_pc_21e4a
  %v0_21e8f = call i32 @function_21ea8()
  ret i32 %v0_21e8f
}

define i32 @function_21e92() local_unnamed_addr {
dec_label_pc_21e92:
  %eax.global-to-local = alloca i32, align 4
  %v0_21e92 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_21e92
}

define i32 @function_21ea8() local_unnamed_addr {
dec_label_pc_21ea8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_21ead() local_unnamed_addr {
dec_label_pc_21ead:
  %v0_21eb2 = load i32, i32* @eax, align 8
  ret i32 %v0_21eb2
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21eb4:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21ee0

bb:                                               ; preds = %dec_label_pc_21eb4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_21ede = call i32 @function_21ee5(i32 %tmp102)
  br label %dec_label_pc_21ee0

dec_label_pc_21ee0:                               ; preds = %bb, %dec_label_pc_21eb4
  %v3_21ede = phi i32 [ %v2_21ede, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_21eb4 ]
  ret i32 %v3_21ede

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21ee5(i32 %arg1) local_unnamed_addr {
dec_label_pc_21ee5:
  %v0_21ee6 = load i32, i32* @eax, align 8
  ret i32 %v0_21ee6
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21ee8:
  %v2_21f12 = call i32 @unknown_491fe(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21f29

bb:                                               ; preds = %dec_label_pc_21ee8
  %v1_21f27 = call i32 @function_21f2e()
  br label %dec_label_pc_21f29

dec_label_pc_21f29:                               ; preds = %bb, %dec_label_pc_21ee8
  %v2_21f27 = phi i32 [ %v1_21f27, %bb ], [ %arg1, %dec_label_pc_21ee8 ]
  ret i32 %v2_21f27

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21f2e() local_unnamed_addr {
dec_label_pc_21f2e:
  %v0_21f2f = load i32, i32* @eax, align 8
  ret i32 %v0_21f2f
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f32:
  %v2_21f5c = call i32 @unknown_49292(i32 %arg1, i32 %arg2)
  ret i32 %v2_21f5c
}

define i32 @function_21f64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f64:
  %v0_21f64 = load i32, i32* @ebp, align 4
  %v1_21f64 = add i32 %v0_21f64, -28
  %v2_21f64 = inttoptr i32 %v1_21f64 to i32*
  %v3_21f64 = load i32, i32* %v2_21f64, align 4
  store i32 %v3_21f64, i32* @eax, align 8
  %v1_21f67 = add i32 %v0_21f64, -12
  %v2_21f67 = inttoptr i32 %v1_21f67 to i32*
  %v3_21f67 = load i32, i32* %v2_21f67, align 4
  %v4_21f6a = icmp eq i32 %v3_21f67, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_21f6a, label %bb, label %dec_label_pc_21f73

bb:                                               ; preds = %dec_label_pc_21f64
  %v1_21f71 = call i32 @function_21f78()
  br label %dec_label_pc_21f73

dec_label_pc_21f73:                               ; preds = %bb, %dec_label_pc_21f64
  %v2_21f71 = phi i32 [ %v1_21f71, %bb ], [ %v3_21f64, %dec_label_pc_21f64 ]
  ret i32 %v2_21f71
}

define i32 @function_21f78() local_unnamed_addr {
dec_label_pc_21f78:
  %v0_21f79 = load i32, i32* @eax, align 8
  ret i32 %v0_21f79
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f7c:
  %v2_21fa6 = call i32 @unknown_49326(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21fbd

bb:                                               ; preds = %dec_label_pc_21f7c
  %v1_21fbb = call i32 @function_21fc2()
  br label %dec_label_pc_21fbd

dec_label_pc_21fbd:                               ; preds = %bb, %dec_label_pc_21f7c
  %v2_21fbb = phi i32 [ %v1_21fbb, %bb ], [ %arg1, %dec_label_pc_21f7c ]
  ret i32 %v2_21fbb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21fc2() local_unnamed_addr {
dec_label_pc_21fc2:
  %v0_21fc3 = load i32, i32* @eax, align 8
  ret i32 %v0_21fc3
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21fc6:
  %v2_21fe6 = load i32, i32* %arg1, align 4
  %v1_21feb = inttoptr i32 %arg2 to i32*
  %v2_21feb = load i32, i32* %v1_21feb, align 4
  %v12_21fed = icmp eq i32 %v2_21fe6, %v2_21feb
  %v1_21fef = icmp eq i1 %v12_21fed, false
  %v2_21fef = zext i1 %v1_21fef to i32
  %v4_21fef = and i32 %v2_21feb, -256
  %v5_21fef = or i32 %v2_21fef, %v4_21fef
  store i32 %v5_21fef, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_21ffe

bb:                                               ; preds = %dec_label_pc_21fc6
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_21ffc = call i32 @function_22003(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_21ffe

dec_label_pc_21ffe:                               ; preds = %bb, %dec_label_pc_21fc6
  %v4_21ffc = phi i32 [ %v3_21ffc, %bb ], [ %v5_21fef, %dec_label_pc_21fc6 ]
  ret i32 %v4_21ffc

; uselistorder directives
  uselistorder i32 %v2_21feb, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22003(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22003:
  %v0_22004 = load i32, i32* @eax, align 8
  ret i32 %v0_22004
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22006:
  %v2_22020 = load i32, i32* %arg1, align 4
  ret i32 %v2_22020
}

define i32 @function_22042() local_unnamed_addr {
dec_label_pc_22042:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22042 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22042 = add i32 %v0_22042, -1
  store i32 %v1_22042, i32* %ecx.global-to-local, align 4
  %v0_22044 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22044
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22046:
  %v2_22060 = load i32, i32* %arg1, align 4
  ret i32 %v2_22060
}

define i32 @function_22082() local_unnamed_addr {
dec_label_pc_22082:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22082 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22082 = add i32 %v0_22082, -1
  store i32 %v1_22082, i32* %ecx.global-to-local, align 4
  %v0_22084 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22084
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22086:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_220b0 = call i32 @unknown_4947a(i32 %arg1)
  %v1_220b8 = add i32 %arg2, 8
  %v2_220bb = ptrtoint i32* %stack_var_-24 to i32
  %v2_220c5 = call i32 @unknown_44002(i32 %v2_220bb, i32 %v1_220b8)
  %v2_220da = call i32 @unknown_48856(i32 %arg3, i32 %v2_220bb)
  %v4_220df = trunc i32 %v2_220da to i8
  %v5_220df = icmp eq i8 %v4_220df, 0
  br i1 %v5_220df, label %bb, label %dec_label_pc_220e3

bb:                                               ; preds = %dec_label_pc_22086
  %v1_220e1 = call i32 @function_22102()
  br label %dec_label_pc_220e3

dec_label_pc_220e3:                               ; preds = %bb, %dec_label_pc_22086
  %v2_220e9 = ptrtoint i32* %stack_var_-44 to i32
  %v2_220f3 = call i32 @unknown_4901a(i32 %v2_220e9, i32 %arg2)
  %v3_220fb = load i32, i32* %stack_var_-44, align 4
  ret i32 %v3_220fb
}

define i32 @function_220fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_220fe:
  %v0_220fe = load i32, i32* @eax, align 8
  %v1_220fe = load i32, i32* @ebx, align 8
  %v2_220fe = inttoptr i32 %v1_220fe to i32*
  store i32 %v0_220fe, i32* %v2_220fe, align 4
  %v0_22100 = call i32 @function_22127()
  ret i32 %v0_22100
}

define i32 @function_22102() local_unnamed_addr {
dec_label_pc_22102:
  %eax.global-to-local = alloca i32, align 4
  %v0_22102 = load i32, i32* @ebp, align 4
  %v1_22102 = add i32 %v0_22102, -36
  %v2_22102 = inttoptr i32 %v1_22102 to i32*
  %v3_22102 = load i32, i32* %v2_22102, align 4
  store i32 %v3_22102, i32* %eax.global-to-local, align 8
  %v1_22108 = call i32 @unknown_48896(i32 %v3_22102)
  %v1_2210d = add i32 %v1_22108, 12
  %v0_22114 = load i32, i32* @ebp, align 4
  %v1_22114 = add i32 %v0_22114, -16
  store i32 %v1_22114, i32* %eax.global-to-local, align 8
  %v2_2211a = call i32 @unknown_494ae(i32 %v1_22114, i32 %v1_2210d)
  store i32 %v2_2211a, i32* %eax.global-to-local, align 8
  %v0_2211f = load i32, i32* @ebp, align 4
  %v1_2211f = add i32 %v0_2211f, -28
  %v2_2211f = inttoptr i32 %v1_2211f to i32*
  %v3_2211f = load i32, i32* %v2_2211f, align 4
  store i32 %v3_2211f, i32* %eax.global-to-local, align 8
  %v1_22122 = add i32 %v0_2211f, -16
  %v2_22122 = inttoptr i32 %v1_22122 to i32*
  %v3_22122 = load i32, i32* %v2_22122, align 4
  %v2_22125 = inttoptr i32 %v3_2211f to i32*
  store i32 %v3_22122, i32* %v2_22125, align 4
  %v3_22125 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_22125
}

define i32 @function_22127() local_unnamed_addr {
dec_label_pc_22127:
  %v0_22127 = load i32, i32* @ebp, align 4
  %v1_22127 = add i32 %v0_22127, -28
  %v2_22127 = inttoptr i32 %v1_22127 to i32*
  %v3_22127 = load i32, i32* %v2_22127, align 4
  store i32 %v3_22127, i32* @eax, align 8
  %v1_2212a = add i32 %v0_22127, -12
  %v2_2212a = inttoptr i32 %v1_2212a to i32*
  %v3_2212a = load i32, i32* %v2_2212a, align 4
  %v4_2212d = icmp eq i32 %v3_2212a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2212d, label %bb, label %dec_label_pc_22136

bb:                                               ; preds = %dec_label_pc_22127
  %v1_22134 = call i32 @function_2213b()
  br label %dec_label_pc_22136

dec_label_pc_22136:                               ; preds = %bb, %dec_label_pc_22127
  %v2_22134 = phi i32 [ %v1_22134, %bb ], [ %v3_22127, %dec_label_pc_22127 ]
  ret i32 %v2_22134
}

define i32 @function_2213b() local_unnamed_addr {
dec_label_pc_2213b:
  %v0_2213f = load i32, i32* @eax, align 8
  ret i32 %v0_2213f
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22142:
  %v2_22162 = load i32, i32* %arg1, align 4
  %v1_22167 = inttoptr i32 %arg2 to i32*
  %v2_22167 = load i32, i32* %v1_22167, align 4
  %v12_22169 = icmp eq i32 %v2_22162, %v2_22167
  %v1_2216b = icmp eq i1 %v12_22169, false
  %v2_2216b = zext i1 %v1_2216b to i32
  %v4_2216b = and i32 %v2_22167, -256
  %v5_2216b = or i32 %v2_2216b, %v4_2216b
  store i32 %v5_2216b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2217a

bb:                                               ; preds = %dec_label_pc_22142
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_22178 = call i32 @function_2217f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2217a

dec_label_pc_2217a:                               ; preds = %bb, %dec_label_pc_22142
  %v4_22178 = phi i32 [ %v3_22178, %bb ], [ %v5_2216b, %dec_label_pc_22142 ]
  ret i32 %v4_22178

; uselistorder directives
  uselistorder i32 %v2_22167, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2217f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2217f:
  %v0_22180 = load i32, i32* @eax, align 8
  ret i32 %v0_22180
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22182:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2219c = load i32, i32* %arg1, align 4
  %v1_2219e = inttoptr i32 %v2_2219c to i32*
  %v2_2219e = load i32, i32* %v1_2219e, align 4
  store i32 %v2_2219e, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_221b4

bb:                                               ; preds = %dec_label_pc_22182
  %v2_221b2 = call i32 @function_221b9(i32 %tmp100)
  br label %dec_label_pc_221b4

dec_label_pc_221b4:                               ; preds = %bb, %dec_label_pc_22182
  %v3_221b2 = phi i32 [ %v2_221b2, %bb ], [ %tmp100, %dec_label_pc_22182 ]
  ret i32 %v3_221b2
}

define i32 @function_221b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_221b9:
  %v0_221ba = load i32, i32* @eax, align 8
  ret i32 %v0_221ba
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1ISsPKcNS_8functionIFSsSH_EEEEENS3_5mutexEEEEEEEEEPT_() local_unnamed_addr {
dec_label_pc_221bc:
  %eax.global-to-local = alloca i32, align 4
  %v5_221bc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_221bc
}

define i32 @function_221be(i32 %arg1) local_unnamed_addr {
dec_label_pc_221be:
  %eax.global-to-local = alloca i32, align 4
  %v0_221c3 = load i32, i32* @ebp, align 4
  %v1_221c3 = add i32 %v0_221c3, 8
  %v2_221c3 = inttoptr i32 %v1_221c3 to i32*
  %v3_221c3 = load i32, i32* %v2_221c3, align 4
  store i32 %v3_221c3, i32* %eax.global-to-local, align 8
  %v2_221c6 = add i32 %v0_221c3, -28
  %v3_221c6 = inttoptr i32 %v2_221c6 to i32*
  store i32 %v3_221c3, i32* %v3_221c6, align 4
  %v0_221c9 = load i32, i32* @ebp, align 4
  %v1_221c9 = add i32 %v0_221c9, 12
  %v2_221c9 = inttoptr i32 %v1_221c9 to i32*
  %v3_221c9 = load i32, i32* %v2_221c9, align 4
  %v2_221cc = add i32 %v0_221c9, -32
  %v3_221cc = inttoptr i32 %v2_221cc to i32*
  store i32 %v3_221c9, i32* %v3_221cc, align 4
  %v1_221d5 = load i32, i32* @ebp, align 4
  %v2_221d5 = add i32 %v1_221d5, -12
  %v3_221d5 = inttoptr i32 %v2_221d5 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_221d5, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_221da = load i32, i32* @ebp, align 4
  %v1_221da = add i32 %v0_221da, -28
  %v2_221da = inttoptr i32 %v1_221da to i32*
  %v3_221da = load i32, i32* %v2_221da, align 4
  store i32 %v3_221da, i32* %eax.global-to-local, align 8
  %v1_221dd = inttoptr i32 %v3_221da to i32*
  store i32 0, i32* %v1_221dd, align 4
  %v2_221e3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_221e3
}

define i32 @function_221f0() local_unnamed_addr {
dec_label_pc_221f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_221f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_221f0
}

define i32 @function_2220a() local_unnamed_addr {
dec_label_pc_2220a:
  %v0_2220a = load i32, i32* @eax, align 8
  %v1_2220a = add i32 %v0_2220a, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_2220a = icmp eq i32 %v1_2220a, 0
  store i32 %v1_2220a, i32* @eax, align 8
  br i1 %v10_2220a, label %bb, label %dec_label_pc_22211

bb:                                               ; preds = %dec_label_pc_2220a
  %v1_2220f = call i32 @function_22241()
  store i32 %v1_2220f, i32* @eax, align 8
  br label %dec_label_pc_22211

dec_label_pc_22211:                               ; preds = %bb, %dec_label_pc_2220a
  %v0_22211 = call i32 @function_2223c()
  ret i32 %v0_22211
}

define i32 @function_22214() local_unnamed_addr {
dec_label_pc_22214:
  %eax.global-to-local = alloca i32, align 4
  %v0_22214 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_22214
}

define i32 @function_2223c() local_unnamed_addr {
dec_label_pc_2223c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22241() local_unnamed_addr {
dec_label_pc_22241:
  %v0_22246 = load i32, i32* @eax, align 8
  ret i32 %v0_22246
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal1_implISsPKcNS3_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS7_EEENSC_IFSsRKNS3_10connectionES7_EEENS3_5mutexEE16invocation_stateEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22248:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2227c() local_unnamed_addr {
dec_label_pc_2227c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2227c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2227c
}

define i32 @function_2227e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2227e:
  %v0_2227e = load i32, i32* @ebp, align 4
  %v1_2227e = add i32 %v0_2227e, 1
  %v9_2227e = icmp eq i32 %v1_2227e, 0
  store i32 %v1_2227e, i32* @ebp, align 4
  %v0_2227f = load i32, i32* @ecx, align 4
  %v2_2227f = icmp eq i32 %v0_2227f, 1
  %v4_2227f = or i1 %v9_2227e, %v2_2227f
  br i1 %v4_2227f, label %dec_label_pc_2227e.dec_label_pc_22281_crit_edge, label %bb

dec_label_pc_2227e.dec_label_pc_22281_crit_edge:  ; preds = %dec_label_pc_2227e
  br label %dec_label_pc_22281

bb:                                               ; preds = %dec_label_pc_2227e
  %v6_2227f = call i32 @function_2220a()
  br label %dec_label_pc_22281

dec_label_pc_22281:                               ; preds = %dec_label_pc_2227e.dec_label_pc_22281_crit_edge, %bb
  %v0_22284 = load i32, i32* @ebx, align 8
  %v1_22287 = call i32 @unknown_497a0(i32 %v0_22284)
  %v0_2228c = load i32, i32* @ebp, align 4
  %v1_2228c = add i32 %v0_2228c, -28
  %v2_2228c = inttoptr i32 %v1_2228c to i32*
  %v3_2228c = load i32, i32* %v2_2228c, align 4
  %v0_2228f = load i32, i32* @ebx, align 8
  %v2_2228f = inttoptr i32 %v3_2228c to i32*
  store i32 %v0_2228f, i32* %v2_2228f, align 4
  %v0_22291 = load i32, i32* @ebp, align 4
  %v1_22291 = add i32 %v0_22291, -12
  %v2_22291 = inttoptr i32 %v1_22291 to i32*
  %v3_22291 = load i32, i32* %v2_22291, align 4
  %v3_22294 = xor i32 %v3_22291, ptrtoint ([3 x i8]* @3 to i32)
  %v4_22294 = icmp eq i32 %v3_22294, 0
  store i32 %v3_22294, i32* @eax, align 8
  br i1 %v4_22294, label %bb3, label %dec_label_pc_2229d

bb3:                                              ; preds = %dec_label_pc_22281
  %v1_2229b = call i32 @function_222cd()
  store i32 %v1_2229b, i32* @eax, align 8
  br label %dec_label_pc_2229d

dec_label_pc_2229d:                               ; preds = %bb3, %dec_label_pc_22281
  %v0_2229d = call i32 @function_222c8()
  ret i32 %v0_2229d

; uselistorder directives
  uselistorder label %dec_label_pc_22281, { 1, 0 }
}

define i32 @function_222a0() local_unnamed_addr {
dec_label_pc_222a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_222a0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_222a0
}

define i32 @function_222c8() local_unnamed_addr {
dec_label_pc_222c8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_222cd() local_unnamed_addr {
dec_label_pc_222cd:
  %v0_222d2 = load i32, i32* @eax, align 8
  ret i32 %v0_222d2
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222d4:
  %stack_var_-17 = alloca i32, align 4
  %v2_222f1 = ptrtoint i32* %stack_var_-17 to i32
  %v3_22305 = call i32 @unknown_3ca1c(i32 %arg1, i32 %arg2, i32 %v2_222f1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22316

bb:                                               ; preds = %dec_label_pc_222d4
  %v1_22314 = call i32 @function_2231b()
  br label %dec_label_pc_22316

dec_label_pc_22316:                               ; preds = %bb, %dec_label_pc_222d4
  %v2_22314 = phi i32 [ %v1_22314, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_222d4 ]
  ret i32 %v2_22314
}

define i32 @function_2231b() local_unnamed_addr {
dec_label_pc_2231b:
  %v0_2231c = load i32, i32* @eax, align 8
  ret i32 %v0_2231c
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9push_backERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2231e:
  ret i32 %arg1
}

define i32 @function_2233e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2233e:
  %v0_2233e = load i32, i32* @eax, align 8
  %v1_2233e = add i32 %v0_2233e, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_2233e = inttoptr i32 %v1_2233e to i32*
  %v3_2233e = load i32, i32* %v2_2233e, align 4
  %v0_22344 = load i32, i32* @ebp, align 4
  %v1_22344 = add i32 %v0_22344, -28
  %v2_22344 = inttoptr i32 %v1_22344 to i32*
  %v3_22344 = load i32, i32* %v2_22344, align 4
  %v1_22347 = add i32 %v3_22344, 120
  %v2_22347 = inttoptr i32 %v1_22347 to i32*
  %v3_22347 = load i32, i32* %v2_22347, align 4
  %v12_2234a = icmp eq i32 %v3_2233e, %v3_22347
  br i1 %v12_2234a, label %dec_label_pc_22362, label %dec_label_pc_2234e

dec_label_pc_2234e:                               ; preds = %dec_label_pc_2233e
  %v1_2234e = add i32 %v0_22344, -32
  %v2_2234e = inttoptr i32 %v1_2234e to i32*
  %v3_2234e = load i32, i32* %v2_2234e, align 4
  %v3_22355 = load i32, i32* %v2_22344, align 4
  %v2_2235b = call i32 @unknown_4996c(i32 %v3_22355, i32 %v3_2234e)
  br label %dec_label_pc_2238f

dec_label_pc_22362:                               ; preds = %dec_label_pc_2233e
  %v3_22362 = load i32, i32* %v2_22344, align 4
  %v1_22365 = add i32 %v3_22362, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_22365 = inttoptr i32 %v1_22365 to i32*
  %v3_22365 = load i32, i32* %v2_22365, align 4
  %v1_2236b = add i32 %v3_22365, 1
  %v2_22378 = call i32 @unknown_49a48(i32 %v3_22362, i32 %v1_2236b)
  %v0_2237d = load i32, i32* @ebp, align 4
  %v1_2237d = add i32 %v0_2237d, -32
  %v2_2237d = inttoptr i32 %v1_2237d to i32*
  %v3_2237d = load i32, i32* %v2_2237d, align 4
  %v1_22384 = add i32 %v0_2237d, -28
  %v2_22384 = inttoptr i32 %v1_22384 to i32*
  %v3_22384 = load i32, i32* %v2_22384, align 4
  %v2_2238a = call i32 @unknown_4996c(i32 %v3_22384, i32 %v3_2237d)
  br label %dec_label_pc_2238f

dec_label_pc_2238f:                               ; preds = %dec_label_pc_22362, %dec_label_pc_2234e
  %v0_2238f = load i32, i32* @ebp, align 4
  %v1_2238f = add i32 %v0_2238f, -12
  %v2_2238f = inttoptr i32 %v1_2238f to i32*
  %v3_2238f = load i32, i32* %v2_2238f, align 4
  %v3_22392 = xor i32 %v3_2238f, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_22392

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4996c, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E5equalERKSY_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_223a2:
  ret i32 %arg2
}

define i32 @function_223b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_223b5:
  %v1_223ba = load i32, i32* @ebp, align 4
  %v2_223ba = add i32 %v1_223ba, -12
  %v3_223ba = inttoptr i32 %v2_223ba to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_223ba, align 4
  %v0_223bf = load i32, i32* @ebp, align 4
  %v1_223bf = add i32 %v0_223bf, -32
  %v2_223bf = inttoptr i32 %v1_223bf to i32*
  %v3_223bf = load i32, i32* %v2_223bf, align 4
  %v1_223c2 = add i32 %v0_223bf, -28
  %v2_223c2 = inttoptr i32 %v1_223c2 to i32*
  %v3_223c2 = load i32, i32* %v2_223c2, align 4
  %v2_223cc = call i32 @unknown_3869a(i32 %v3_223c2, i32 %v3_223bf)
  store i32 %v2_223cc, i32* @eax, align 8
  %v0_223d1 = load i32, i32* @ebp, align 4
  %v1_223d1 = add i32 %v0_223d1, -12
  %v2_223d1 = inttoptr i32 %v1_223d1 to i32*
  %v3_223d1 = load i32, i32* %v2_223d1, align 4
  %v4_223d4 = icmp eq i32 %v3_223d1, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_223d4, label %bb, label %dec_label_pc_223dd

bb:                                               ; preds = %dec_label_pc_223b5
  %v1_223db = call i32 @function_223e2()
  br label %dec_label_pc_223dd

dec_label_pc_223dd:                               ; preds = %bb, %dec_label_pc_223b5
  %v2_223db = phi i32 [ %v1_223db, %bb ], [ %v2_223cc, %dec_label_pc_223b5 ]
  ret i32 %v2_223db
}

define i32 @function_223e2() local_unnamed_addr {
dec_label_pc_223e2:
  %v0_223e3 = load i32, i32* @eax, align 8
  ret i32 %v0_223e3
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E11dereferenceEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_223e4:
  %stack_var_-24 = alloca i32, align 4
  %v1_22400 = add i32 %arg1, 8
  %v2_22400 = inttoptr i32 %v1_22400 to i32*
  %v3_22400 = load i32, i32* %v2_22400, align 4
  %v1_22406 = call i32 @unknown_49bca(i32 %v3_22400)
  %v4_2240b = trunc i32 %v1_22406 to i8
  %v5_2240b = icmp eq i8 %v4_2240b, 0
  br i1 %v5_2240b, label %bb, label %dec_label_pc_2240f

bb:                                               ; preds = %dec_label_pc_223e4
  %v1_2240d = call i32 @function_2245c()
  br label %dec_label_pc_2240f

dec_label_pc_2240f:                               ; preds = %bb, %dec_label_pc_223e4
  %v1_22415 = call i32 @unknown_3c656(i32 %arg1)
  %v3_2241d = load i32, i32* %v2_22400, align 4
  %v1_22420 = add i32 %v3_2241d, 140
  %v2_22426 = ptrtoint i32* %stack_var_-24 to i32
  %v3_22434 = call i32 @unknown_49c02(i32 %v2_22426, i32 %v1_22420, i32 %v1_22415)
  %v3_2243f = load i32, i32* %v2_22400, align 4
  %v2_2244c = call i32 @unknown_49c68(i32 %v3_2243f, i32 %v2_22426)
  ret i32 %v2_22426
}

define i32 @function_2245c() local_unnamed_addr {
dec_label_pc_2245c:
  %v0_2245c = load i32, i32* @ebp, align 4
  %v1_2245c = add i32 %v0_2245c, -28
  %v2_2245c = inttoptr i32 %v1_2245c to i32*
  %v3_2245c = load i32, i32* %v2_2245c, align 4
  %v1_2245f = add i32 %v3_2245c, 8
  %v2_2245f = inttoptr i32 %v1_2245f to i32*
  %v3_2245f = load i32, i32* %v2_2245f, align 4
  store i32 %v3_2245f, i32* @eax, align 8
  %v1_22465 = call i32 @function_349aa(i32 %v3_2245f)
  store i32 %v1_22465, i32* @eax, align 8
  %v0_2246a = load i32, i32* @ebp, align 4
  %v1_2246a = add i32 %v0_2246a, -12
  %v2_2246a = inttoptr i32 %v1_2246a to i32*
  %v3_2246a = load i32, i32* %v2_2246a, align 4
  %v4_2246d = icmp eq i32 %v3_2246a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2246d, label %bb, label %dec_label_pc_22476

bb:                                               ; preds = %dec_label_pc_2245c
  %v1_22474 = call i32 @function_224db()
  store i32 %v1_22474, i32* @eax, align 8
  br label %dec_label_pc_22476

dec_label_pc_22476:                               ; preds = %bb, %dec_label_pc_2245c
  %v0_22476 = call i32 @function_224d6()
  ret i32 %v0_22476
}

define i32 @function_22487() local_unnamed_addr {
dec_label_pc_22487:
  %ebx.global-to-local = alloca i32, align 4
  %v0_22489 = load i32, i32* %ebx.global-to-local, align 8
  store i32 %v0_22489, i32* @edx, align 8
  %v0_2248b = call i32 @function_2249e()
  ret i32 %v0_2248b
}

define i32 @function_2248e() local_unnamed_addr {
dec_label_pc_2248e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2248e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2248e
}

define i32 @function_2249e() local_unnamed_addr {
dec_label_pc_2249e:
  %v0_2249e = load i32, i32* @edx, align 8
  %v10_2249e = icmp eq i32 %v0_2249e, 1
  br i1 %v10_2249e, label %bb, label %dec_label_pc_2249e.dec_label_pc_224a3_crit_edge

dec_label_pc_2249e.dec_label_pc_224a3_crit_edge:  ; preds = %dec_label_pc_2249e
  %v3_224a3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_224a3

bb:                                               ; preds = %dec_label_pc_2249e
  %v1_224a1 = call i32 @function_224ab()
  br label %dec_label_pc_224a3

dec_label_pc_224a3:                               ; preds = %dec_label_pc_2249e.dec_label_pc_224a3_crit_edge, %bb
  %v3_224a3 = phi i32 [ %v3_224a3.pre, %dec_label_pc_2249e.dec_label_pc_224a3_crit_edge ], [ %v1_224a1, %bb ]
  ret i32 %v3_224a3

; uselistorder directives
  uselistorder label %dec_label_pc_224a3, { 1, 0 }
}

define i32 @function_224ab() local_unnamed_addr {
dec_label_pc_224ab:
  %v3_224ab = load i32, i32* @eax, align 8
  ret i32 %v3_224ab
}

define i32 @function_224d6() local_unnamed_addr {
dec_label_pc_224d6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_224db() local_unnamed_addr {
dec_label_pc_224db:
  %v0_224e1 = load i32, i32* @eax, align 8
  ret i32 %v0_224e1
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE12assign_valueERKSsN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_224e2:
  %v1_2250c = call i32 @unknown_36a7a(i32 %arg1)
  ret i32 %v1_2250c
}

define i32 @function_2251e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2251e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_22520() local_unnamed_addr {
dec_label_pc_22520:
  %v0_22520 = load i32, i32* @ebp, align 4
  %v1_22520 = add i32 %v0_22520, -12
  %v2_22520 = inttoptr i32 %v1_22520 to i32*
  %v3_22520 = load i32, i32* %v2_22520, align 4
  %v3_22523 = xor i32 %v3_22520, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* @cf, align 1
  %v4_22523 = icmp eq i32 %v3_22523, 0
  store i32 %v3_22523, i32* @eax, align 8
  br i1 %v4_22523, label %bb, label %dec_label_pc_2252c

bb:                                               ; preds = %dec_label_pc_22520
  %v1_2252a = call i32 @function_22531()
  br label %dec_label_pc_2252c

dec_label_pc_2252c:                               ; preds = %bb, %dec_label_pc_22520
  %v2_2252a = phi i32 [ %v1_2252a, %bb ], [ %v3_22523, %dec_label_pc_22520 ]
  ret i32 %v2_2252a
}

define i32 @function_22531() local_unnamed_addr {
dec_label_pc_22531:
  %v0_22532 = load i32, i32* @eax, align 8
  ret i32 %v0_22532
}

define i32 @_ZN5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E9incrementEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22534:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2254a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2254a:
  %v0_2254a = load i32, i32* @ebx, align 8
  %v1_2254a = add i32 %v0_2254a, 76145733
  %v2_2254a = inttoptr i32 %v1_2254a to i8*
  %v3_2254a = load i8, i8* %v2_2254a, align 1
  %v4_2254a = udiv i8 %v3_2254a, 16
  %v5_2254a = mul i8 %v3_2254a, 16
  %v6_2254a = or i8 %v4_2254a, %v5_2254a
  store i8 %v6_2254a, i8* %v2_2254a, align 1
  %v17_2254a = load i32, i32* @eax, align 8
  ret i32 %v17_2254a
}

define i32 @function_22554(i32 %arg1) local_unnamed_addr {
dec_label_pc_22554:
  %v2_22554 = load i32, i32* @eax, align 8
  %v4_22554 = mul i32 %v2_22554, 2
  %v21_22554 = inttoptr i32 %v2_22554 to i32*
  store i32 %v4_22554, i32* %v21_22554, align 4
  %v0_22556 = load i32, i32* @ebp, align 4
  %v1_22556 = add i32 %v0_22556, -28
  %v2_22556 = inttoptr i32 %v1_22556 to i32*
  %v3_22556 = load i32, i32* %v2_22556, align 4
  %v1_2255c = call i32 @unknown_38fc2(i32 %v3_22556)
  %v0_22561 = load i32, i32* @ebp, align 4
  %v1_22561 = add i32 %v0_22561, -28
  %v2_22561 = inttoptr i32 %v1_22561 to i32*
  %v3_22561 = load i32, i32* %v2_22561, align 4
  %v1_22564 = add i32 %v3_22561, 8
  %v2_22564 = inttoptr i32 %v1_22564 to i32*
  %v3_22564 = load i32, i32* %v2_22564, align 4
  %v1_2256a = call i32 @unknown_49dfa(i32 %v3_22564)
  %v0_2256f = load i32, i32* @ebp, align 4
  %v1_2256f = add i32 %v0_2256f, -12
  %v2_2256f = inttoptr i32 %v1_2256f to i32*
  %v3_2256f = load i32, i32* %v2_2256f, align 4
  %v3_22572 = xor i32 %v3_2256f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_22572 = icmp eq i32 %v3_22572, 0
  store i32 %v3_22572, i32* @eax, align 8
  br i1 %v4_22572, label %bb, label %dec_label_pc_2257b

bb:                                               ; preds = %dec_label_pc_22554
  %v1_22579 = call i32 @function_22580()
  br label %dec_label_pc_2257b

dec_label_pc_2257b:                               ; preds = %bb, %dec_label_pc_22554
  %v2_22579 = phi i32 [ %v1_22579, %bb ], [ %v3_22572, %dec_label_pc_22554 ]
  ret i32 %v2_22579

; uselistorder directives
  uselistorder i32 %v2_22554, { 1, 0 }
}

define i32 @function_22580() local_unnamed_addr {
dec_label_pc_22580:
  %v0_22581 = load i32, i32* @eax, align 8
  ret i32 %v0_22581
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_22582:
  %eax.global-to-local = alloca i32, align 4
  %v17_22585 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_22585
}

define i32 @function_2258a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2258a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2258a = load i32, i32* @ecx, align 4
  %v1_2258a = add i32 %v0_2258a, 1166795845
  %v2_2258a = inttoptr i32 %v1_2258a to i8*
  %v3_2258a = load i8, i8* %v2_2258a, align 1
  %v5_2258a = trunc i32 %v0_2258a to i8
  %v6_2258a = or i8 %v3_2258a, %v5_2258a
  store i8 %v6_2258a, i8* %v2_2258a, align 1
  %v0_22590 = load i32, i32* @eax, align 8
  %v2_22590 = or i32 %v0_22590, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_22590, i32* %eax.global-to-local, align 8
  %v0_22592 = load i32, i32* @ebp, align 4
  %v1_22592 = add i32 %v0_22592, 1
  %v9_22592 = icmp eq i32 %v1_22592, 0
  store i32 %v1_22592, i32* @ebp, align 4
  %v0_22593 = load i32, i32* @ecx, align 4
  %v1_22593 = add i32 %v0_22593, -1
  store i32 %v1_22593, i32* %ecx.global-to-local, align 4
  %v2_22593 = icmp eq i32 %v1_22593, 0
  %v4_22593 = or i1 %v9_22592, %v2_22593
  br i1 %v4_22593, label %dec_label_pc_22595, label %bb

bb:                                               ; preds = %dec_label_pc_2258a
  %v6_22593 = call i32 @function_22520()
  store i32 %v6_22593, i32* %eax.global-to-local, align 8
  %v0_22595.pre = load i32, i32* @ebp, align 4
  %v0_22596.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_22596.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_22595

dec_label_pc_22595:                               ; preds = %dec_label_pc_2258a, %bb
  %v6_22596 = phi i1 [ false, %dec_label_pc_2258a ], [ %v6_22596.pre, %bb ]
  %v30_22596 = phi i32 [ %v1_22593, %dec_label_pc_2258a ], [ %v0_22596.pre, %bb ]
  %v0_22595 = phi i32 [ %v1_22592, %dec_label_pc_2258a ], [ %v0_22595.pre, %bb ]
  %v1_22595 = add i32 %v0_22595, 1
  store i32 %v1_22595, i32* @ebp, align 4
  %v1_22596 = add i32 %v30_22596, -1587159995
  %v2_22596 = inttoptr i32 %v1_22596 to i8*
  %v3_22596 = load i8, i8* %v2_22596, align 1
  %v5_22596 = trunc i32 %v30_22596 to i8
  %v7_22596 = zext i1 %v6_22596 to i8
  %v8_22596 = add i8 %v3_22596, %v5_22596
  %v9_22596 = add i8 %v8_22596, %v7_22596
  %v27_22596 = icmp ule i8 %v9_22596, %v3_22596
  %v28_22596 = icmp ult i8 %v8_22596, %v3_22596
  %v29_22596 = select i1 %v6_22596, i1 %v27_22596, i1 %v28_22596
  store i1 %v29_22596, i1* %cf.global-to-local, align 1
  store i8 %v9_22596, i8* %v2_22596, align 1
  %v0_2259c = load i32, i32* %eax.global-to-local, align 8
  %v1_2259c = trunc i32 %v0_2259c to i8
  %v2_2259c = load i1, i1* %cf.global-to-local, align 1
  %v3_2259c = zext i1 %v2_2259c to i8
  %v4_2259c = add i8 %v3_2259c, %v1_2259c
  %v19_2259c = icmp ule i8 %v4_2259c, %v1_2259c
  %v21_2259c = icmp eq i1 %v2_2259c, %v19_2259c
  store i1 %v21_2259c, i1* %cf.global-to-local, align 1
  %v22_2259c = zext i8 %v4_2259c to i32
  %v24_2259c = and i32 %v0_2259c, -256
  %v25_2259c = or i32 %v22_2259c, %v24_2259c
  store i32 %v25_2259c, i32* %eax.global-to-local, align 8
  %v1_2259e = inttoptr i32 %v25_2259c to i8*
  %v2_2259e = load i8, i8* %v1_2259e, align 1
  %v5_2259e = add i8 %v2_2259e, %v4_2259c
  store i8 %v5_2259e, i8* %v1_2259e, align 1
  %v0_225a0 = load i32, i32* %eax.global-to-local, align 8
  %v1_225a0 = load i32, i32* @ebp, align 4
  %v2_225a0 = add i32 %v1_225a0, -12
  %v3_225a0 = inttoptr i32 %v2_225a0 to i32*
  store i32 %v0_225a0, i32* %v3_225a0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_225a5 = load i32, i32* @ebp, align 4
  %v1_225a5 = add i32 %v0_225a5, -28
  %v2_225a5 = inttoptr i32 %v1_225a5 to i32*
  %v3_225a5 = load i32, i32* %v2_225a5, align 4
  store i32 %v3_225a5, i32* %eax.global-to-local, align 8
  %v1_225ab = call i32 @unknown_49e7e(i32 %v3_225a5)
  store i32 %v1_225ab, i32* %eax.global-to-local, align 8
  %v1_225b0 = load i32, i32* @ebp, align 4
  %v2_225b0 = add i32 %v1_225b0, -32
  %v3_225b0 = inttoptr i32 %v2_225b0 to i32*
  %v4_225b0 = load i32, i32* %v3_225b0, align 4
  %v10_225b0 = icmp ult i32 %v1_225ab, %v4_225b0
  %v1_225b3 = zext i1 %v10_225b0 to i32
  %v3_225b3 = and i32 %v1_225ab, -256
  %v4_225b3 = or i32 %v1_225b3, %v3_225b3
  store i32 %v4_225b3, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_225b6 = icmp eq i1 %v10_225b0, false
  br i1 %v5_225b6, label %bb9, label %dec_label_pc_225ba

bb9:                                              ; preds = %dec_label_pc_22595
  %v1_225b8 = call i32 @function_225bf()
  store i32 %v1_225b8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_225ba

dec_label_pc_225ba:                               ; preds = %bb9, %dec_label_pc_22595
  %v4_225b8 = phi i32 [ %v1_225b8, %bb9 ], [ %v4_225b3, %dec_label_pc_22595 ]
  ret i32 %v4_225b8

; uselistorder directives
  uselistorder i1 %v10_225b0, { 1, 0 }
  uselistorder i8 %v4_2259c, { 0, 2, 1 }
  uselistorder i8 %v1_2259c, { 1, 0 }
  uselistorder i8 %v9_22596, { 1, 0 }
  uselistorder i8 %v8_22596, { 1, 0 }
  uselistorder i8 %v3_22596, { 1, 2, 0 }
  uselistorder i32 %v30_22596, { 1, 0 }
  uselistorder i1 %v6_22596, { 1, 0 }
  uselistorder i32 %v1_22593, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9 }
  uselistorder label %dec_label_pc_22595, { 1, 0 }
}

define i32 @function_225bf() local_unnamed_addr {
dec_label_pc_225bf:
  %v0_225bf = load i32, i32* @ebp, align 4
  %v1_225bf = add i32 %v0_225bf, -32
  %v2_225bf = inttoptr i32 %v1_225bf to i32*
  %v3_225bf = load i32, i32* %v2_225bf, align 4
  %v2_225c8 = mul i32 %v3_225bf, 24
  ret i32 %v2_225c8
}

define i32 @function_225e3() local_unnamed_addr {
dec_label_pc_225e3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_225e3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_225e3 = add i32 %v0_225e3, -1
  store i32 %v1_225e3, i32* %ecx.global-to-local, align 4
  %v0_225e5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_225e5
}

define i32 @_ZN5boost6detail8function15functor_managerIPFbRKSsS4_jEE6manageERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeE(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_225e6:
  %tmp101 = ptrtoint i32* %arg2 to i32
  %v10_2260c = icmp eq i32 %arg3, 4
  %v1_2260f = icmp eq i1 %v10_2260c, false
  br i1 %v1_2260f, label %bb, label %dec_label_pc_22611

bb:                                               ; preds = %dec_label_pc_225e6
  %v5_2260f = call i32 @function_2262a(i32 %arg3, i32 %tmp101, i32 %arg1)
  br label %dec_label_pc_22611

dec_label_pc_22611:                               ; preds = %bb, %dec_label_pc_225e6
  store i32 ptrtoint (i32* @global_var_34294.2033 to i32), i32* %arg2, align 4
  %v1_2261d = add i32 %tmp101, 4
  %v2_2261d = inttoptr i32 %v1_2261d to i8*
  store i8 0, i8* %v2_2261d, align 1
  ret i32 %tmp101

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_22624(i32 %arg1) local_unnamed_addr {
dec_label_pc_22624:
  %v0_22624 = load i32, i32* @eax, align 8
  %v1_22624 = add i32 %v0_22624, 5
  %v2_22624 = inttoptr i32 %v1_22624 to i8*
  store i8 0, i8* %v2_22624, align 1
  %v0_22628 = call i32 @function_22648()
  ret i32 %v0_22628
}

define i32 @function_2262a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2262a:
  %v0_2262a = load i32, i32* @edx, align 8
  %v0_2262e = load i32, i32* @ebp, align 4
  %v1_2262e = add i32 %v0_2262e, -36
  %v2_2262e = inttoptr i32 %v1_2262e to i32*
  %v3_2262e = load i32, i32* %v2_2262e, align 4
  %v1_22635 = add i32 %v0_2262e, -32
  %v2_22635 = inttoptr i32 %v1_22635 to i32*
  %v3_22635 = load i32, i32* %v2_22635, align 4
  %v1_2263c = add i32 %v0_2262e, -28
  %v2_2263c = inttoptr i32 %v1_2263c to i32*
  %v3_2263c = load i32, i32* %v2_2263c, align 4
  %sext = mul i32 %v0_2262a, 16777216
  %v4_22642 = sdiv i32 %sext, 16777216
  %v5_22642 = call i32 @unknown_49f11(i32 %v3_2263c, i32 %v3_22635, i32 %v3_2262e, i32 %v4_22642)
  ret i32 %v5_22642
}

define i32 @function_22648() local_unnamed_addr {
dec_label_pc_22648:
  %v0_22648 = load i32, i32* @ebp, align 4
  %v1_22648 = add i32 %v0_22648, -12
  %v2_22648 = inttoptr i32 %v1_22648 to i32*
  %v3_22648 = load i32, i32* %v2_22648, align 4
  %v3_2264b = xor i32 %v3_22648, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2264b = icmp eq i32 %v3_2264b, 0
  store i32 %v3_2264b, i32* @eax, align 8
  br i1 %v4_2264b, label %bb, label %dec_label_pc_22654

bb:                                               ; preds = %dec_label_pc_22648
  %v1_22652 = call i32 @function_22659()
  br label %dec_label_pc_22654

dec_label_pc_22654:                               ; preds = %bb, %dec_label_pc_22648
  %v2_22652 = phi i32 [ %v1_22652, %bb ], [ %v3_2264b, %dec_label_pc_22648 ]
  ret i32 %v2_22652
}

define i32 @function_22659() local_unnamed_addr {
dec_label_pc_22659:
  %v0_2265a = load i32, i32* @eax, align 8
  ret i32 %v0_2265a
}

define i32 @_ZN5boost6detail8function17function_invoker3IPFbRKSsS4_jEbS4_S4_jE6invokeERNS1_15function_bufferES4_S4_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2265b:
  ret i32 %arg3
}

define i32 @function_22674(i32 %arg1) local_unnamed_addr {
dec_label_pc_22674:
  %eax.global-to-local = alloca i32, align 4
  %v0_22674 = load i32, i32* @ebp, align 4
  %v0_22675 = load i32, i32* @eax, align 8
  %v1_22675 = trunc i32 %v0_22675 to i8
  %v2_22675 = load i1, i1* @cf, align 1
  %v3_22675 = zext i1 %v2_22675 to i8
  %v4_22675 = add i8 %v1_22675, ptrtoint (i8* @global_var_89.1944 to i8)
  %v5_22675 = add i8 %v4_22675, %v3_22675
  %v20_22675 = add i8 %v1_22675, -119
  %v21_22675 = add i8 %v20_22675, %v3_22675
  %v22_22675 = icmp ule i8 %v21_22675, %v1_22675
  %v23_22675 = icmp ugt i8 %v1_22675, 118
  %v24_22675 = select i1 %v2_22675, i1 %v22_22675, i1 %v23_22675
  %v25_22675 = zext i8 %v5_22675 to i32
  %v27_22675 = and i32 %v0_22675, -256
  %v28_22675 = or i32 %v25_22675, %v27_22675
  store i32 %v28_22675, i32* %eax.global-to-local, align 8
  %v1_22677 = add i32 %v0_22674, 2
  store i32 %v1_22677, i32* @ebp, align 4
  %v3_2267b = zext i1 %v24_22675 to i8
  %v4_2267b = add i8 %v3_2267b, %v5_22675
  %v22_2267b = zext i8 %v4_2267b to i32
  %v25_2267b = or i32 %v22_2267b, %v27_22675
  store i32 %v25_2267b, i32* %eax.global-to-local, align 8
  %v1_2267d = inttoptr i32 %v25_2267b to i8*
  %v2_2267d = load i8, i8* %v1_2267d, align 1
  %v5_2267d = add i8 %v2_2267d, %v4_2267b
  store i8 %v5_2267d, i8* %v1_2267d, align 1
  %v0_2267f = load i32, i32* %eax.global-to-local, align 8
  %v1_2267f = load i32, i32* @ebp, align 4
  %v2_2267f = add i32 %v1_2267f, -12
  %v3_2267f = inttoptr i32 %v2_2267f to i32*
  store i32 %v0_2267f, i32* %v3_2267f, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_22684 = load i32, i32* @ebp, align 4
  %v1_22684 = add i32 %v0_22684, -28
  %v2_22684 = inttoptr i32 %v1_22684 to i32*
  %v3_22684 = load i32, i32* %v2_22684, align 4
  store i32 %v3_22684, i32* %eax.global-to-local, align 8
  %v1_22687 = inttoptr i32 %v3_22684 to i32*
  %v2_22687 = load i32, i32* %v1_22687, align 4
  store i32 %v2_22687, i32* %eax.global-to-local, align 8
  %v2_22689 = add i32 %v0_22684, -16
  %v3_22689 = inttoptr i32 %v2_22689 to i32*
  store i32 %v2_22687, i32* %v3_22689, align 4
  %v0_2268c = load i32, i32* @ebp, align 4
  %v1_2268c = add i32 %v0_2268c, -40
  %v2_2268c = inttoptr i32 %v1_2268c to i32*
  %v3_2268c = load i32, i32* %v2_2268c, align 4
  store i32 %v3_2268c, i32* %eax.global-to-local, align 8
  %v1_22693 = add i32 %v0_2268c, -36
  %v2_22693 = inttoptr i32 %v1_22693 to i32*
  %v3_22693 = load i32, i32* %v2_22693, align 4
  store i32 %v3_22693, i32* %eax.global-to-local, align 8
  %v1_2269a = add i32 %v0_2268c, -32
  %v2_2269a = inttoptr i32 %v1_2269a to i32*
  %v3_2269a = load i32, i32* %v2_2269a, align 4
  store i32 %v3_2269a, i32* %eax.global-to-local, align 8
  %v1_226a0 = add i32 %v0_2268c, -16
  %v2_226a0 = inttoptr i32 %v1_226a0 to i32*
  %v3_226a0 = load i32, i32* %v2_226a0, align 4
  store i32 %v3_226a0, i32* @eax, align 8
  %v1_226a5 = add i32 %v0_2268c, -12
  %v2_226a5 = inttoptr i32 %v1_226a5 to i32*
  %v3_226a5 = load i32, i32* %v2_226a5, align 4
  %v4_226a8 = icmp eq i32 %v3_226a5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_226a8, label %bb, label %dec_label_pc_226b1

bb:                                               ; preds = %dec_label_pc_22674
  %v4_226af = call i32 @function_226b6(i32 %v3_2269a, i32 %v3_22693, i32 %v3_2268c)
  store i32 %v4_226af, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_226b1

dec_label_pc_226b1:                               ; preds = %bb, %dec_label_pc_22674
  %v5_226af = phi i32 [ %v4_226af, %bb ], [ %v3_226a0, %dec_label_pc_22674 ]
  ret i32 %v5_226af

; uselistorder directives
  uselistorder i32 %v0_2268c, { 0, 2, 1, 3, 4 }
  uselistorder i8 -119, { 1, 0 }
}

define i32 @function_226b6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_226b6:
  %v0_226b7 = load i32, i32* @eax, align 8
  ret i32 %v0_226b7
}

define i32 @_ZN5boost6detail8function13basic_vtable3IbRKSsS4_jE9assign_toIPFbS4_S4_jEEEbT_RNS1_15function_bufferE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_226b8:
  ret i32 0
}

define i32 @function_226e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_226e0:
  %v0_226e0 = load i32, i32* @ebp, align 4
  %v1_226e7 = add i32 %v0_226e0, 2
  store i32 %v1_226e7, i32* @ebp, align 4
  %v1_226ed = add i32 %v0_226e0, -26
  %v2_226ed = inttoptr i32 %v1_226ed to i32*
  %v3_226ed = load i32, i32* %v2_226ed, align 4
  %v1_226f3 = call i32 @unknown_4a03a(i32 %v3_226ed)
  store i32 %v1_226f3, i32* @eax, align 8
  %v0_226f8 = load i32, i32* @ebp, align 4
  %v1_226f8 = add i32 %v0_226f8, -12
  %v2_226f8 = inttoptr i32 %v1_226f8 to i32*
  %v3_226f8 = load i32, i32* %v2_226f8, align 4
  %v4_226fb = icmp eq i32 %v3_226f8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_226fb, label %bb, label %dec_label_pc_22704

bb:                                               ; preds = %dec_label_pc_226e0
  %v1_22702 = call i32 @function_22709()
  br label %dec_label_pc_22704

dec_label_pc_22704:                               ; preds = %bb, %dec_label_pc_226e0
  %v4_22702 = phi i32 [ %v1_22702, %bb ], [ %v1_226f3, %dec_label_pc_226e0 ]
  ret i32 %v4_22702
}

define i32 @function_22709() local_unnamed_addr {
dec_label_pc_22709:
  %v4_22709 = load i32, i32* @eax, align 8
  ret i32 %v4_22709
}

define i32 @function_2270a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2270a:
  %v0_2270a = load i32, i32* @eax, align 8
  ret i32 %v0_2270a
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIFbRKSsS5_jEEEvRKT_RKN4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_2270c:
  %eax.global-to-local = alloca i32, align 4
  %v2_2270d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2270d
}

define i32 @function_2270f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2270f:
  %v0_22712 = load i32, i32* @ebp, align 4
  %v1_22712 = add i32 %v0_22712, 8
  %v2_22712 = inttoptr i32 %v1_22712 to i32*
  %v3_22712 = load i32, i32* %v2_22712, align 4
  %v2_22715 = add i32 %v0_22712, -28
  %v3_22715 = inttoptr i32 %v2_22715 to i32*
  store i32 %v3_22712, i32* %v3_22715, align 4
  %v0_22718 = load i32, i32* @ebp, align 4
  %v1_22718 = add i32 %v0_22718, 12
  %v2_22718 = inttoptr i32 %v1_22718 to i32*
  %v3_22718 = load i32, i32* %v2_22718, align 4
  %v2_2271b = add i32 %v0_22718, -32
  %v3_2271b = inttoptr i32 %v2_2271b to i32*
  store i32 %v3_22718, i32* %v3_2271b, align 4
  %v0_2271e = load i32, i32* @ebp, align 4
  %v1_2271e = add i32 %v0_2271e, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_2271e = inttoptr i32 %v1_2271e to i32*
  %v3_2271e = load i32, i32* %v2_2271e, align 4
  %v2_22721 = add i32 %v0_2271e, -36
  %v3_22721 = inttoptr i32 %v2_22721 to i32*
  store i32 %v3_2271e, i32* %v3_22721, align 4
  %v1_2272a = load i32, i32* @ebp, align 4
  %v2_2272a = add i32 %v1_2272a, -12
  %v3_2272a = inttoptr i32 %v2_2272a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2272a, align 4
  %v0_2272f = load i32, i32* @ebp, align 4
  %v1_2272f = add i32 %v0_2272f, -32
  %v2_2272f = inttoptr i32 %v1_2272f to i32*
  %v3_2272f = load i32, i32* %v2_2272f, align 4
  %v1_22735 = call i32 @unknown_4a0f7(i32 %v3_2272f)
  %v1_2273a = load i32, i32* @ebp, align 4
  %v2_2273a = add i32 %v1_2273a, -20
  %v3_2273a = inttoptr i32 %v2_2273a to i32*
  store i32 %v1_22735, i32* %v3_2273a, align 4
  %v0_2273d = load i32, i32* @ebp, align 4
  %v1_2273d = add i32 %v0_2273d, -13
  ret i32 %v1_2273d
}

define i32 @function_22740(i32 %arg1) local_unnamed_addr {
dec_label_pc_22740:
  %v0_22740 = load i32, i32* @eax, align 8
  %v0_22744 = load i32, i32* @ebp, align 4
  %v1_22744 = add i32 %v0_22744, -20
  %v1_2274b = add i32 %v0_22744, -28
  %v2_2274b = inttoptr i32 %v1_2274b to i32*
  %v3_2274b = load i32, i32* %v2_2274b, align 4
  %v3_22751 = call i32 @unknown_4a14e(i32 %v3_2274b, i32 %v1_22744, i32 %v0_22740)
  %v0_22756 = load i32, i32* @ebp, align 4
  %v1_22756 = add i32 %v0_22756, -12
  %v2_22756 = inttoptr i32 %v1_22756 to i32*
  %v3_22756 = load i32, i32* %v2_22756, align 4
  %v3_22759 = xor i32 %v3_22756, ptrtoint ([3 x i8]* @3 to i32)
  %v4_22759 = icmp eq i32 %v3_22759, 0
  store i32 %v3_22759, i32* @eax, align 8
  br i1 %v4_22759, label %bb, label %dec_label_pc_22762

bb:                                               ; preds = %dec_label_pc_22740
  %v1_22760 = call i32 @function_22767()
  br label %dec_label_pc_22762

dec_label_pc_22762:                               ; preds = %bb, %dec_label_pc_22740
  %v2_22760 = phi i32 [ %v1_22760, %bb ], [ %v3_22759, %dec_label_pc_22740 ]
  ret i32 %v2_22760
}

define i32 @function_22767() local_unnamed_addr {
dec_label_pc_22767:
  %v0_22768 = load i32, i32* @eax, align 8
  ret i32 %v0_22768
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2276a:
  %v1_22787 = call i32 @unknown_4a314(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22798

bb:                                               ; preds = %dec_label_pc_2276a
  %v1_22796 = call i32 @function_2279d()
  br label %dec_label_pc_22798

dec_label_pc_22798:                               ; preds = %bb, %dec_label_pc_2276a
  %v2_22796 = phi i32 [ %v1_22796, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2276a ]
  ret i32 %v2_22796
}

define i32 @function_2279d() local_unnamed_addr {
dec_label_pc_2279d:
  %v0_2279e = load i32, i32* @eax, align 8
  ret i32 %v0_2279e
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_227a0:
  %v1_227bd = call i32 @unknown_4a420(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_227ce

bb:                                               ; preds = %dec_label_pc_227a0
  %v1_227cc = call i32 @function_227d3()
  br label %dec_label_pc_227ce

dec_label_pc_227ce:                               ; preds = %bb, %dec_label_pc_227a0
  %v2_227cc = phi i32 [ %v1_227cc, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_227a0 ]
  ret i32 %v2_227cc
}

define i32 @function_227d3() local_unnamed_addr {
dec_label_pc_227d3:
  %v0_227d4 = load i32, i32* @eax, align 8
  ret i32 %v0_227d4
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_227d6:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_22801 = call i32 @unknown_4a268(i32 %arg1, i32 %arg2)
  %v1_22809 = add i32 %arg2, 8
  %v1_2280f = add i32 %arg1, 8
  %v2_22819 = call i32 @unknown_4a3de(i32 %v1_2280f, i32 %v1_22809)
  %v2_2281e = ptrtoint i32* %stack_var_-48 to i32
  %v1_22824 = call i32 @unknown_4a4c4(i32 %v2_2281e)
  %v2_2282c = ptrtoint i32* %stack_var_-44 to i32
  %v2_22836 = call i32 @unknown_456da(i32 %v2_2282c, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_22846(i32 %arg1) local_unnamed_addr {
dec_label_pc_22846:
  %v0_2284e = call i32 @unknown_3e13a()
  %v0_22856 = load i32, i32* @ebp, align 4
  %v1_22856 = add i32 %v0_22856, -64
  %v2_22856 = inttoptr i32 %v1_22856 to i32*
  %v3_22856 = load i32, i32* %v2_22856, align 4
  %v1_22859 = add i32 %v3_22856, 8
  %v1_2285c = add i32 %v0_22856, -68
  %v2_22866 = call i32 @unknown_4a4f8(i32 %v1_2285c, i32 %v1_22859)
  %v0_2286e = load i32, i32* @ebp, align 4
  %v1_2286e = add i32 %v0_2286e, -68
  %v2_2286e = inttoptr i32 %v1_2286e to i32*
  %v3_2286e = load i32, i32* %v2_2286e, align 4
  %v2_22871 = add i32 %v0_2286e, -44
  %v3_22871 = inttoptr i32 %v2_22871 to i32*
  store i32 %v3_2286e, i32* %v3_22871, align 4
  %v0_22874 = call i32 @function_22969()
  ret i32 %v0_22874
}

define i32 @function_22879() local_unnamed_addr {
dec_label_pc_22879:
  %v0_22879 = load i32, i32* @ebp, align 4
  %v1_22879 = add i32 %v0_22879, -60
  %v2_22879 = inttoptr i32 %v1_22879 to i32*
  %v3_22879 = load i32, i32* %v2_22879, align 4
  ret i32 %v3_22879
}

define i32 @function_2287c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2287c:
  %v0_2287c = load i32, i32* @eax, align 8
  %v1_2287c = add i32 %v0_2287c, 8
  %v0_2287f = load i32, i32* @ebp, align 4
  %v1_2287f = add i32 %v0_2287f, -16
  %v3_22889 = call i32 @unknown_3de76(i32 %v1_2287f, i32 %v1_2287c)
  %v0_22891 = load i32, i32* @ebp, align 4
  %v1_22891 = add i32 %v0_22891, -16
  %v1_22898 = add i32 %v0_22891, -36
  %v4_2289e = call i32 @unknown_41a3c(i32 %v1_22898, i32 %v1_22891)
  %v4_228a3 = trunc i32 %v4_2289e to i8
  %v5_228a3 = icmp eq i8 %v4_228a3, 0
  %v1_228a5 = icmp eq i1 %v5_228a3, false
  br i1 %v1_228a5, label %bb, label %dec_label_pc_228a7

bb:                                               ; preds = %dec_label_pc_2287c
  %v2_228a5 = call i32 @function_228cb()
  br label %dec_label_pc_228a7

dec_label_pc_228a7:                               ; preds = %bb, %dec_label_pc_2287c
  %v3_228bf = phi i32 [ %v2_228a5, %bb ], [ %v4_2289e, %dec_label_pc_2287c ]
  ret i32 %v3_228bf
}

define i32 @function_228cb() local_unnamed_addr {
dec_label_pc_228cb:
  %v0_228cb = load i32, i32* @ebp, align 4
  %v1_228cb = add i32 %v0_228cb, -36
  %v1_228d1 = call i32 @unknown_41a02(i32 %v1_228cb)
  %v0_228d6 = load i32, i32* @ebp, align 4
  %v1_228d6 = add i32 %v0_228d6, -40
  %v2_228d6 = inttoptr i32 %v1_228d6 to i32*
  %v3_228d6 = load i32, i32* %v2_228d6, align 4
  %v2_228d9 = add i32 %v1_228d1, 12
  %v3_228d9 = inttoptr i32 %v2_228d9 to i32*
  store i32 %v3_228d6, i32* %v3_228d9, align 4
  %v0_228dc = load i32, i32* @ebp, align 4
  %v1_228dc = add i32 %v0_228dc, -28
  %v1_228df = add i32 %v0_228dc, -44
  %v1_228e6 = add i32 %v0_228dc, -64
  %v2_228e6 = inttoptr i32 %v1_228e6 to i32*
  %v3_228e6 = load i32, i32* %v2_228e6, align 4
  %v3_228f0 = call i32 @unknown_4a64c(i32 %v1_228dc, i32 %v3_228e6, i32 %v1_228df)
  %v0_228f8 = load i32, i32* @ebp, align 4
  %v1_228f8 = add i32 %v0_228f8, -44
  %v2_228f8 = inttoptr i32 %v1_228f8 to i32*
  %v3_228f8 = load i32, i32* %v2_228f8, align 4
  %v2_228fb = add i32 %v0_228f8, -24
  %v3_228fb = inttoptr i32 %v2_228fb to i32*
  store i32 %v3_228f8, i32* %v3_228fb, align 4
  %v0_228fe = load i32, i32* @ebp, align 4
  %v1_228fe = add i32 %v0_228fe, -24
  %v1_22904 = call i32 @unknown_4a60c(i32 %v1_228fe)
  %v0_22909 = load i32, i32* @ebp, align 4
  %v1_22909 = add i32 %v0_22909, -20
  %v1_2290c = add i32 %v0_22909, -24
  %v1_22913 = add i32 %v0_22909, -64
  %v2_22913 = inttoptr i32 %v1_22913 to i32*
  %v3_22913 = load i32, i32* %v2_22913, align 4
  %v3_2291d = call i32 @unknown_4a64c(i32 %v1_22909, i32 %v3_22913, i32 %v1_2290c)
  br label %dec_label_pc_2293d

dec_label_pc_22927:                               ; preds = %dec_label_pc_2293d
  %v1_22927 = add i32 %v0_22927, -28
  %v1_2292d = call i32 @unknown_4a748(i32 %v1_22927)
  %v0_22932 = load i32, i32* @ebp, align 4
  %v1_22932 = add i32 %v0_22932, -40
  %v1_22938 = call i32 @unknown_456a0(i32 %v1_22932)
  br label %dec_label_pc_2293d

dec_label_pc_2293d:                               ; preds = %dec_label_pc_22927, %dec_label_pc_228cb
  %v0_2293d = load i32, i32* @ebp, align 4
  %v1_2293d = add i32 %v0_2293d, -20
  %v1_22944 = add i32 %v0_2293d, -28
  %v2_2294a = call i32 @unknown_4a708(i32 %v1_22944, i32 %v1_2293d)
  %v4_2294f = trunc i32 %v2_2294a to i8
  %v5_2294f = icmp eq i8 %v4_2294f, 0
  %v1_22951 = icmp eq i1 %v5_2294f, false
  %v0_22927 = load i32, i32* @ebp, align 4
  br i1 %v1_22951, label %dec_label_pc_22927, label %dec_label_pc_22953

dec_label_pc_22953:                               ; preds = %dec_label_pc_2293d
  %v1_22953 = add i32 %v0_22927, -44
  %v1_22959 = call i32 @unknown_4a60c(i32 %v1_22953)
  %v0_2295e = load i32, i32* @ebp, align 4
  %v1_2295e = add i32 %v0_2295e, -36
  %v1_22964 = call i32 @unknown_4a5cc(i32 %v1_2295e)
  ret i32 %v1_22964

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4a60c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4a64c, { 1, 0 }
}

define i32 @function_22969() local_unnamed_addr {
dec_label_pc_22969:
  %v0_22969 = load i32, i32* @ebp, align 4
  %v1_22969 = add i32 %v0_22969, -64
  %v2_22969 = inttoptr i32 %v1_22969 to i32*
  %v3_22969 = load i32, i32* %v2_22969, align 4
  %v1_2296c = add i32 %v3_22969, 8
  %v1_2296f = add i32 %v0_22969, -32
  %v2_22979 = call i32 @unknown_4a542(i32 %v1_2296f, i32 %v1_2296c)
  %v0_22981 = load i32, i32* @ebp, align 4
  %v1_22981 = add i32 %v0_22981, -32
  %v1_22988 = add i32 %v0_22981, -44
  %v2_2298e = call i32 @unknown_4a58c(i32 %v1_22988, i32 %v1_22981)
  %v4_22993 = trunc i32 %v2_2298e to i8
  %v5_22993 = icmp eq i8 %v4_22993, 0
  %v1_22995 = icmp eq i1 %v5_22993, false
  br i1 %v1_22995, label %bb, label %dec_label_pc_2299b

bb:                                               ; preds = %dec_label_pc_22969
  %v2_22995 = call i32 @function_22879()
  br label %dec_label_pc_2299b

dec_label_pc_2299b:                               ; preds = %bb, %dec_label_pc_22969
  %v0_2299b = call i32 @function_229c6()
  ret i32 %v0_2299b
}

define i32 @function_2299d() local_unnamed_addr {
dec_label_pc_2299d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2299d = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_2299d, i32* @ebx, align 8
  %v0_2299f = load i32, i32* @ebp, align 4
  %v1_2299f = add i32 %v0_2299f, -60
  %v2_2299f = inttoptr i32 %v1_2299f to i32*
  %v3_2299f = load i32, i32* %v2_2299f, align 4
  %v1_229a2 = add i32 %v3_2299f, 8
  store i32 %v1_229a2, i32* %eax.global-to-local, align 8
  %v1_229a8 = call i32 @unknown_44f76(i32 %v1_229a2)
  store i32 %v1_229a8, i32* %eax.global-to-local, align 8
  %v0_229ad = call i32 @function_229b1()
  store i32 %v0_229ad, i32* %eax.global-to-local, align 8
  ret i32 %v0_229ad
}

define i32 @function_229af() local_unnamed_addr {
dec_label_pc_229af:
  %eax.global-to-local = alloca i32, align 4
  %v0_229af = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_229af
}

define i32 @function_229b1() local_unnamed_addr {
dec_label_pc_229b1:
  %v0_229b1 = load i32, i32* @ebp, align 4
  %v1_229b1 = add i32 %v0_229b1, -60
  %v2_229b1 = inttoptr i32 %v1_229b1 to i32*
  %v3_229b1 = load i32, i32* %v2_229b1, align 4
  %v1_229b7 = call i32 @unknown_44f40(i32 %v3_229b1)
  %v0_229bc = load i32, i32* @ebx, align 8
  ret i32 %v0_229bc
}

define i32 @function_229c6() local_unnamed_addr {
dec_label_pc_229c6:
  %v0_229c6 = load i32, i32* @ebp, align 4
  %v1_229c6 = add i32 %v0_229c6, -12
  %v2_229c6 = inttoptr i32 %v1_229c6 to i32*
  %v3_229c6 = load i32, i32* %v2_229c6, align 4
  %v3_229c9 = xor i32 %v3_229c6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_229c9 = icmp eq i32 %v3_229c9, 0
  store i32 %v3_229c9, i32* @eax, align 8
  br i1 %v4_229c9, label %bb, label %dec_label_pc_229d2

bb:                                               ; preds = %dec_label_pc_229c6
  %v1_229d0 = call i32 @function_229d7()
  br label %dec_label_pc_229d2

dec_label_pc_229d2:                               ; preds = %bb, %dec_label_pc_229c6
  %v2_229d0 = phi i32 [ %v1_229d0, %bb ], [ %v3_229c9, %dec_label_pc_229c6 ]
  ret i32 %v2_229d0
}

define i32 @function_229d7() local_unnamed_addr {
dec_label_pc_229d7:
  %v0_229db = load i32, i32* @eax, align 8
  ret i32 %v0_229db
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS1_5mutexEEEEEEEEC1ISM_EEPT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229dc:
  ret i32 %arg1
}

define i32 @function_229fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229fc:
  %v0_229fc = load i32, i32* @ebp, align 4
  %v1_229fc = add i32 %v0_229fc, -32
  %v2_229fc = inttoptr i32 %v1_229fc to i32*
  %v3_229fc = load i32, i32* %v2_229fc, align 4
  %v1_229ff = load i32, i32* @eax, align 8
  %v2_229ff = inttoptr i32 %v1_229ff to i32*
  store i32 %v3_229fc, i32* %v2_229ff, align 4
  %v0_22a01 = load i32, i32* @ebp, align 4
  %v1_22a01 = add i32 %v0_22a01, -28
  %v2_22a01 = inttoptr i32 %v1_22a01 to i32*
  %v3_22a01 = load i32, i32* %v2_22a01, align 4
  %v1_22a04 = add i32 %v3_22a01, 4
  %v1_22a07 = add i32 %v0_22a01, -32
  %v2_22a07 = inttoptr i32 %v1_22a07 to i32*
  %v3_22a07 = load i32, i32* %v2_22a07, align 4
  %v2_22a11 = call i32 @unknown_4a988(i32 %v1_22a04, i32 %v3_22a07)
  %v0_22a16 = load i32, i32* @ebp, align 4
  %v1_22a16 = add i32 %v0_22a16, -32
  %v2_22a16 = inttoptr i32 %v1_22a16 to i32*
  %v3_22a16 = load i32, i32* %v2_22a16, align 4
  %v1_22a24 = add i32 %v0_22a16, -28
  %v2_22a24 = inttoptr i32 %v1_22a24 to i32*
  %v3_22a24 = load i32, i32* %v2_22a24, align 4
  store i32 %v3_22a24, i32* @eax, align 8
  %v3_22a2a = call i32 @function_24f21(i32 %v3_22a24, i32 %v3_22a16, i32 %v3_22a16)
  %v0_22a2f = load i32, i32* @ebp, align 4
  %v1_22a2f = add i32 %v0_22a2f, -12
  %v2_22a2f = inttoptr i32 %v1_22a2f to i32*
  %v3_22a2f = load i32, i32* %v2_22a2f, align 4
  %v3_22a32 = xor i32 %v3_22a2f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_22a32 = icmp eq i32 %v3_22a32, 0
  store i32 %v3_22a32, i32* @eax, align 8
  br i1 %v4_22a32, label %bb, label %dec_label_pc_22a3b

bb:                                               ; preds = %dec_label_pc_229fc
  %v1_22a39 = call i32 @function_22a40()
  br label %dec_label_pc_22a3b

dec_label_pc_22a3b:                               ; preds = %bb, %dec_label_pc_229fc
  %v2_22a39 = phi i32 [ %v1_22a39, %bb ], [ %v3_22a32, %dec_label_pc_229fc ]
  ret i32 %v2_22a39

; uselistorder directives
  uselistorder i32 %v3_22a16, { 1, 0 }
}

define i32 @function_22a40() local_unnamed_addr {
dec_label_pc_22a40:
  %v0_22a41 = load i32, i32* @eax, align 8
  ret i32 %v0_22a41
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a42:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_22a6a = add i32 %tmp104, 4
  %v2_22a77 = call i32 @unknown_4aa7a(i32 %v1_22a6a, i32 %arg2)
  store i32 %tmp104, i32* @eax, align 8
  %v3_22a90 = call i32 @function_24f87(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22aa1

bb:                                               ; preds = %dec_label_pc_22a42
  %v1_22a9f = call i32 @function_22aa6()
  br label %dec_label_pc_22aa1

dec_label_pc_22aa1:                               ; preds = %bb, %dec_label_pc_22a42
  %v2_22a9f = phi i32 [ %v1_22a9f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_22a42 ]
  ret i32 %v2_22a9f

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_22aa6() local_unnamed_addr {
dec_label_pc_22aa6:
  %v0_22aa7 = load i32, i32* @eax, align 8
  ret i32 %v0_22aa7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEE4swapERSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22aa8:
  %v2_22ad2 = call i32 @unknown_4ab6b(i32 %arg1, i32 %arg2)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_22af2(i32 %arg1) local_unnamed_addr {
dec_label_pc_22af2:
  %v0_22af2 = load i32, i32* @eax, align 8
  %v3_22af2 = xor i32 %v0_22af2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_22af2 = icmp eq i32 %v3_22af2, 0
  store i32 %v3_22af2, i32* @eax, align 8
  br i1 %v4_22af2, label %bb, label %dec_label_pc_22afb

bb:                                               ; preds = %dec_label_pc_22af2
  %v1_22af9 = call i32 @function_22b00()
  br label %dec_label_pc_22afb

dec_label_pc_22afb:                               ; preds = %bb, %dec_label_pc_22af2
  %v2_22af9 = phi i32 [ %v1_22af9, %bb ], [ %v3_22af2, %dec_label_pc_22af2 ]
  ret i32 %v2_22af9
}

define i32 @function_22b00() local_unnamed_addr {
dec_label_pc_22b00:
  %v0_22b01 = load i32, i32* @eax, align 8
  ret i32 %v0_22b01
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22b02:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22b2e

bb:                                               ; preds = %dec_label_pc_22b02
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_22b2c = call i32 @function_22b33(i32 %tmp102)
  br label %dec_label_pc_22b2e

dec_label_pc_22b2e:                               ; preds = %bb, %dec_label_pc_22b02
  %v3_22b2c = phi i32 [ %v2_22b2c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_22b02 ]
  ret i32 %v3_22b2c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22b33(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b33:
  %v0_22b34 = load i32, i32* @eax, align 8
  ret i32 %v0_22b34
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b36:
  %v2_22b60 = call i32 @unknown_45e68(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22b77

bb:                                               ; preds = %dec_label_pc_22b36
  %v1_22b75 = call i32 @function_22b7c()
  br label %dec_label_pc_22b77

dec_label_pc_22b77:                               ; preds = %bb, %dec_label_pc_22b36
  %v2_22b75 = phi i32 [ %v1_22b75, %bb ], [ %arg1, %dec_label_pc_22b36 ]
  ret i32 %v2_22b75

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22b7c() local_unnamed_addr {
dec_label_pc_22b7c:
  %v0_22b7d = load i32, i32* @eax, align 8
  ret i32 %v0_22b7d
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEneERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b80:
  ret i32 %arg1
}

define i32 @function_22ba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ba0:
  %v2_22ba0 = load i32, i32* @eax, align 8
  %v0_22ba2 = load i32, i32* @ebp, align 4
  %v1_22ba2 = add i32 %v0_22ba2, -32
  %v2_22ba2 = inttoptr i32 %v1_22ba2 to i32*
  %v3_22ba2 = load i32, i32* %v2_22ba2, align 4
  %v1_22ba5 = inttoptr i32 %v3_22ba2 to i32*
  %v2_22ba5 = load i32, i32* %v1_22ba5, align 4
  %v12_22ba7 = icmp eq i32 %v2_22ba0, %v2_22ba5
  %v1_22ba9 = icmp eq i1 %v12_22ba7, false
  %v2_22ba9 = zext i1 %v1_22ba9 to i32
  %v4_22ba9 = and i32 %v2_22ba5, -256
  %v5_22ba9 = or i32 %v2_22ba9, %v4_22ba9
  store i32 %v5_22ba9, i32* @eax, align 8
  %v1_22bac = add i32 %v0_22ba2, -12
  %v2_22bac = inttoptr i32 %v1_22bac to i32*
  %v3_22bac = load i32, i32* %v2_22bac, align 4
  %v4_22baf = icmp eq i32 %v3_22bac, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_22baf, label %bb, label %dec_label_pc_22bb8

bb:                                               ; preds = %dec_label_pc_22ba0
  %v1_22bb6 = call i32 @function_22bbd()
  br label %dec_label_pc_22bb8

dec_label_pc_22bb8:                               ; preds = %bb, %dec_label_pc_22ba0
  %v2_22bb6 = phi i32 [ %v1_22bb6, %bb ], [ %v5_22ba9, %dec_label_pc_22ba0 ]
  ret i32 %v2_22bb6

; uselistorder directives
  uselistorder i32 %v2_22ba5, { 1, 0 }
}

define i32 @function_22bbd() local_unnamed_addr {
dec_label_pc_22bbd:
  %v0_22bbe = load i32, i32* @eax, align 8
  ret i32 %v0_22bbe
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22bc0:
  %v2_22bda = load i32, i32* %arg1, align 4
  %v1_22bdc = add i32 %v2_22bda, 8
  store i32 %v1_22bdc, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22beb

bb:                                               ; preds = %dec_label_pc_22bc0
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22be9 = call i32 @function_22bf0(i32 %tmp100)
  br label %dec_label_pc_22beb

dec_label_pc_22beb:                               ; preds = %bb, %dec_label_pc_22bc0
  %v3_22be9 = phi i32 [ %v2_22be9, %bb ], [ %v1_22bdc, %dec_label_pc_22bc0 ]
  ret i32 %v3_22be9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22bf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22bf0:
  %v0_22bf1 = load i32, i32* @eax, align 8
  ret i32 %v0_22bf1
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22bf2:
  %v2_22c0c = load i32, i32* %arg1, align 4
  %v1_22c0e = icmp eq i32 %v2_22c0c, 0
  %v1_22c10 = icmp eq i1 %v1_22c0e, false
  br i1 %v1_22c10, label %bb, label %dec_label_pc_22c12

bb:                                               ; preds = %dec_label_pc_22bf2
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v3_22c10 = call i32 @function_22c36(i32 %tmp105)
  br label %dec_label_pc_22c12

dec_label_pc_22c12:                               ; preds = %bb, %dec_label_pc_22bf2
  %v3_22c2a = phi i32 [ %v3_22c10, %bb ], [ %v2_22c0c, %dec_label_pc_22bf2 ]
  ret i32 %v3_22c2a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22c36(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c36:
  %v0_22c36 = load i32, i32* @ebp, align 4
  %v1_22c36 = add i32 %v0_22c36, -28
  %v2_22c36 = inttoptr i32 %v1_22c36 to i32*
  %v3_22c36 = load i32, i32* %v2_22c36, align 4
  %v1_22c39 = inttoptr i32 %v3_22c36 to i32*
  %v2_22c39 = load i32, i32* %v1_22c39, align 4
  store i32 %v2_22c39, i32* @eax, align 8
  %v1_22c3b = add i32 %v0_22c36, -12
  %v2_22c3b = inttoptr i32 %v1_22c3b to i32*
  %v3_22c3b = load i32, i32* %v2_22c3b, align 4
  %v4_22c3e = icmp eq i32 %v3_22c3b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_22c3e, label %bb, label %dec_label_pc_22c47

bb:                                               ; preds = %dec_label_pc_22c36
  %v1_22c45 = call i32 @function_22c4c()
  br label %dec_label_pc_22c47

dec_label_pc_22c47:                               ; preds = %bb, %dec_label_pc_22c36
  %v2_22c45 = phi i32 [ %v1_22c45, %bb ], [ %v2_22c39, %dec_label_pc_22c36 ]
  ret i32 %v2_22c45
}

define i32 @function_22c4c() local_unnamed_addr {
dec_label_pc_22c4c:
  %v0_22c4d = load i32, i32* @eax, align 8
  ret i32 %v0_22c4d
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE19nolock_slot_expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c4e:
  %v1_22c68 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_22c6e = call i32 @function_31772(i32 %v1_22c68)
  %v1_22c73 = trunc i32 %v1_22c6e to i8
  %v10_22c76 = icmp eq i8 %v1_22c73, 0
  br i1 %v10_22c76, label %dec_label_pc_22c83, label %dec_label_pc_22c7c

dec_label_pc_22c7c:                               ; preds = %dec_label_pc_22c4e
  %v1_22c7f = add i32 %arg1, 4
  %v2_22c7f = inttoptr i32 %v1_22c7f to i8*
  store i8 0, i8* %v2_22c7f, align 1
  br label %dec_label_pc_22c83

dec_label_pc_22c83:                               ; preds = %dec_label_pc_22c7c, %dec_label_pc_22c4e
  %v4_22c83 = urem i32 %v1_22c6e, 256
  ret i32 %v4_22c83
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c9a:
  %v1_22cb4 = add i32 %arg1, 68
  ret i32 %v1_22cb4
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22cca:
  ret i32 %arg4
}

define i32 @function_22cea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22cea:
  %eax.global-to-local = alloca i32, align 4
  %v0_22cea = load i32, i32* @eax, align 8
  %v1_22cea = trunc i32 %v0_22cea to i8
  %v2_22cea = load i1, i1* @cf, align 1
  %v3_22cea = zext i1 %v2_22cea to i8
  %v4_22cea = add i8 %v3_22cea, %v1_22cea
  %v22_22cea = zext i8 %v4_22cea to i32
  %v24_22cea = and i32 %v0_22cea, -256
  %v25_22cea = or i32 %v22_22cea, %v24_22cea
  store i32 %v25_22cea, i32* %eax.global-to-local, align 8
  %v1_22cec = inttoptr i32 %v25_22cea to i8*
  %v2_22cec = load i8, i8* %v1_22cec, align 1
  %v5_22cec = add i8 %v2_22cec, %v4_22cea
  store i8 %v5_22cec, i8* %v1_22cec, align 1
  %v0_22cee = load i32, i32* %eax.global-to-local, align 8
  %v1_22cee = load i32, i32* @ebp, align 4
  %v2_22cee = add i32 %v1_22cee, -12
  %v3_22cee = inttoptr i32 %v2_22cee to i32*
  store i32 %v0_22cee, i32* %v3_22cee, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_22cf3 = load i32, i32* @ebp, align 4
  %v1_22cf3 = add i32 %v0_22cf3, -48
  %v2_22cf3 = inttoptr i32 %v1_22cf3 to i32*
  %v3_22cf3 = load i32, i32* %v2_22cf3, align 4
  %v1_22cf6 = add i32 %v0_22cf3, -32
  store i32 %v1_22cf6, i32* %eax.global-to-local, align 8
  %v3_22d00 = call i32 @unknown_45ffc(i32 %v1_22cf6, i32 %v3_22cf3)
  %v0_22d08 = load i32, i32* @ebp, align 4
  %v1_22d08 = add i32 %v0_22d08, -32
  store i32 %v1_22d08, i32* %eax.global-to-local, align 8
  %v1_22d0f = add i32 %v0_22d08, -56
  %v2_22d0f = inttoptr i32 %v1_22d0f to i32*
  %v3_22d0f = load i32, i32* %v2_22d0f, align 4
  store i32 %v3_22d0f, i32* %eax.global-to-local, align 8
  %v4_22d15 = call i32 @unknown_4584a(i32 %v3_22d0f, i32 %v1_22d08)
  store i32 %v4_22d15, i32* %eax.global-to-local, align 8
  %v4_22d1a = trunc i32 %v4_22d15 to i8
  %v5_22d1a = icmp eq i8 %v4_22d1a, 0
  %v1_22d1c = icmp eq i1 %v5_22d1a, false
  br i1 %v1_22d1c, label %bb, label %dec_label_pc_22d1e

bb:                                               ; preds = %dec_label_pc_22cea
  %v2_22d1c = call i32 @function_22d42()
  store i32 %v2_22d1c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_22d1e

dec_label_pc_22d1e:                               ; preds = %bb, %dec_label_pc_22cea
  %v3_22d36 = phi i32 [ %v2_22d1c, %bb ], [ %v4_22d15, %dec_label_pc_22cea ]
  ret i32 %v3_22d36
}

define i32 @function_22d42() local_unnamed_addr {
dec_label_pc_22d42:
  %v0_22d42 = load i32, i32* @ebp, align 4
  %v1_22d42 = add i32 %v0_22d42, -48
  %v2_22d42 = inttoptr i32 %v1_22d42 to i32*
  %v3_22d42 = load i32, i32* %v2_22d42, align 4
  %v1_22d45 = add i32 %v3_22d42, 8
  %v1_22d48 = add i32 %v0_22d42, -28
  %v1_22d4b = add i32 %v0_22d42, -52
  %v2_22d4b = inttoptr i32 %v1_22d4b to i32*
  %v3_22d4b = load i32, i32* %v2_22d4b, align 4
  %v4_22d59 = call i32 @unknown_3e678(i32 %v1_22d48, i32 %v1_22d45, i32 %v3_22d4b)
  %v0_22d61 = load i32, i32* @ebp, align 4
  %v1_22d61 = add i32 %v0_22d61, -48
  %v2_22d61 = inttoptr i32 %v1_22d61 to i32*
  %v3_22d61 = load i32, i32* %v2_22d61, align 4
  %v1_22d64 = add i32 %v3_22d61, 8
  %v1_22d67 = add i32 %v0_22d61, -24
  %v3_22d71 = call i32 @unknown_3e36a(i32 %v1_22d67, i32 %v1_22d64)
  %v0_22d79 = load i32, i32* @ebp, align 4
  %v1_22d79 = add i32 %v0_22d79, -24
  %v1_22d80 = add i32 %v0_22d79, -28
  %v4_22d86 = call i32 @unknown_41f30(i32 %v1_22d80, i32 %v1_22d79)
  %v4_22d8b = trunc i32 %v4_22d86 to i8
  %v5_22d8b = icmp eq i8 %v4_22d8b, 0
  %v1_22d8d = icmp eq i1 %v5_22d8b, false
  br i1 %v1_22d8d, label %bb, label %dec_label_pc_22d8f

bb:                                               ; preds = %dec_label_pc_22d42
  %v2_22d8d = call i32 @function_22db3()
  br label %dec_label_pc_22d8f

dec_label_pc_22d8f:                               ; preds = %bb, %dec_label_pc_22d42
  %v3_22da7 = phi i32 [ %v2_22d8d, %bb ], [ %v4_22d86, %dec_label_pc_22d42 ]
  ret i32 %v3_22da7

; uselistorder directives
  uselistorder i32 %v0_22d42, { 1, 0, 2 }
}

define i32 @function_22db3() local_unnamed_addr {
dec_label_pc_22db3:
  %v0_22db3 = load i32, i32* @ebp, align 4
  %v1_22db3 = add i32 %v0_22db3, -28
  %v2_22db9 = call i32 @unknown_41ef6(i32 %v1_22db3)
  %v0_22dbe = load i32, i32* @ebp, align 4
  %v1_22dbe = add i32 %v0_22dbe, -52
  %v2_22dbe = inttoptr i32 %v1_22dbe to i32*
  %v3_22dbe = load i32, i32* %v2_22dbe, align 4
  %v1_22dc9 = add i32 %v0_22dbe, -48
  %v2_22dc9 = inttoptr i32 %v1_22dc9 to i32*
  %v3_22dc9 = load i32, i32* %v2_22dc9, align 4
  %v5_22dcf = call i32 @unknown_41e6c(i32 %v3_22dc9, i32 %v2_22db9, i32 %v3_22dbe)
  %v4_22dd4 = trunc i32 %v5_22dcf to i8
  %v5_22dd4 = icmp eq i8 %v4_22dd4, 0
  %v1_22dd6 = icmp eq i1 %v5_22dd4, false
  br i1 %v1_22dd6, label %bb, label %dec_label_pc_22dd8

bb:                                               ; preds = %dec_label_pc_22db3
  %v2_22dd6 = call i32 @function_22dfc()
  br label %dec_label_pc_22dd8

dec_label_pc_22dd8:                               ; preds = %bb, %dec_label_pc_22db3
  %v3_22df0 = phi i32 [ %v2_22dd6, %bb ], [ %v5_22dcf, %dec_label_pc_22db3 ]
  ret i32 %v3_22df0
}

define i32 @function_22dfc() local_unnamed_addr {
dec_label_pc_22dfc:
  %v0_22dfc = load i32, i32* @ebp, align 4
  %v1_22dfc = add i32 %v0_22dfc, -28
  %v1_22e02 = call i32 @unknown_41ef6(i32 %v1_22dfc)
  %v1_22e07 = add i32 %v1_22e02, 12
  %v0_22e0a = load i32, i32* @ebp, align 4
  %v1_22e0a = add i32 %v0_22e0a, -56
  %v2_22e0a = inttoptr i32 %v1_22e0a to i32*
  %v3_22e0a = load i32, i32* %v2_22e0a, align 4
  %v2_22e14 = call i32 @unknown_45c18(i32 %v1_22e07, i32 %v3_22e0a)
  %v4_22e19 = trunc i32 %v2_22e14 to i8
  %v5_22e19 = icmp eq i8 %v4_22e19, 0
  br i1 %v5_22e19, label %dec_label_pc_22e93, label %dec_label_pc_22e1d

dec_label_pc_22e1d:                               ; preds = %dec_label_pc_22dfc
  %v0_22e1d = load i32, i32* @ebp, align 4
  %v1_22e1d = add i32 %v0_22e1d, -56
  %v2_22e1d = inttoptr i32 %v1_22e1d to i32*
  %v3_22e1d = load i32, i32* %v2_22e1d, align 4
  %v1_22e20 = inttoptr i32 %v3_22e1d to i32*
  %v2_22e20 = load i32, i32* %v1_22e20, align 4
  %v2_22e22 = add i32 %v0_22e1d, -20
  %v3_22e22 = inttoptr i32 %v2_22e22 to i32*
  store i32 %v2_22e20, i32* %v3_22e22, align 4
  %v0_22e25 = load i32, i32* @ebp, align 4
  %v1_22e25 = add i32 %v0_22e25, -20
  %v1_22e2b = call i32 @unknown_45b94(i32 %v1_22e25)
  %v0_22e30 = load i32, i32* @ebp, align 4
  %v1_22e30 = add i32 %v0_22e30, -16
  %v1_22e33 = add i32 %v0_22e30, -52
  %v2_22e33 = inttoptr i32 %v1_22e33 to i32*
  %v3_22e33 = load i32, i32* %v2_22e33, align 4
  %v1_22e3a = add i32 %v0_22e30, -48
  %v2_22e3a = inttoptr i32 %v1_22e3a to i32*
  %v3_22e3a = load i32, i32* %v2_22e3a, align 4
  %v3_22e44 = call i32 @unknown_4add8(i32 %v1_22e30, i32 %v3_22e3a, i32 %v3_22e33)
  %v0_22e4c = load i32, i32* @ebp, align 4
  %v1_22e4c = add i32 %v0_22e4c, -16
  %v1_22e53 = add i32 %v0_22e4c, -20
  %v2_22e59 = call i32 @unknown_4584a(i32 %v1_22e53, i32 %v1_22e4c)
  %v4_22e5e = trunc i32 %v2_22e59 to i8
  %v5_22e5e = icmp eq i8 %v4_22e5e, 0
  %v0_22e7e = load i32, i32* @ebp, align 4
  %v1_22e7e = add i32 %v0_22e7e, -48
  %v2_22e7e = inttoptr i32 %v1_22e7e to i32*
  %v3_22e7e = load i32, i32* %v2_22e7e, align 4
  %v1_22e81 = add i32 %v3_22e7e, 8
  br i1 %v5_22e5e, label %dec_label_pc_22e7e, label %dec_label_pc_22e62

dec_label_pc_22e62:                               ; preds = %dec_label_pc_22e1d
  %v1_22e72 = call i32 @unknown_4ae60(i32 %v1_22e81)
  %v0_22e77 = load i32, i32* @ebp, align 4
  %v1_22e77 = add i32 %v0_22e77, -20
  %v2_22e77 = inttoptr i32 %v1_22e77 to i32*
  %v3_22e77 = load i32, i32* %v2_22e77, align 4
  %v2_22e7a = inttoptr i32 %v1_22e72 to i32*
  store i32 %v3_22e77, i32* %v2_22e7a, align 4
  br label %dec_label_pc_22e93

dec_label_pc_22e7e:                               ; preds = %dec_label_pc_22e1d
  %v1_22e84 = add i32 %v0_22e7e, -28
  %v2_22e84 = inttoptr i32 %v1_22e84 to i32*
  %v3_22e84 = load i32, i32* %v2_22e84, align 4
  %v2_22e8e = call i32 @unknown_41f70(i32 %v1_22e81, i32 %v3_22e84)
  br label %dec_label_pc_22e93

dec_label_pc_22e93:                               ; preds = %dec_label_pc_22e7e, %dec_label_pc_22e62, %dec_label_pc_22dfc
  %v0_22e93 = load i32, i32* @ebp, align 4
  %v1_22e93 = add i32 %v0_22e93, -48
  %v2_22e93 = inttoptr i32 %v1_22e93 to i32*
  %v3_22e93 = load i32, i32* %v2_22e93, align 4
  %v1_22e96 = add i32 %v0_22e93, -44
  %v2_22e96 = inttoptr i32 %v1_22e96 to i32*
  %v3_22e96 = load i32, i32* %v2_22e96, align 4
  %v1_22e99 = add i32 %v0_22e93, -56
  %v2_22e99 = inttoptr i32 %v1_22e99 to i32*
  %v3_22e99 = load i32, i32* %v2_22e99, align 4
  %v1_22e9c = inttoptr i32 %v3_22e99 to i32*
  %v2_22e9c = load i32, i32* %v1_22e9c, align 4
  %v3_22ea9 = call i32 @unknown_4afa6(i32 %v3_22e96, i32 %v3_22e93, i32 %v2_22e9c)
  %v0_22eb1 = load i32, i32* @ebp, align 4
  %v1_22eb1 = add i32 %v0_22eb1, -44
  %v2_22eb1 = inttoptr i32 %v1_22eb1 to i32*
  %v3_22eb1 = load i32, i32* %v2_22eb1, align 4
  store i32 %v3_22eb1, i32* @eax, align 8
  %v1_22eb4 = add i32 %v0_22eb1, -12
  %v2_22eb4 = inttoptr i32 %v1_22eb4 to i32*
  %v3_22eb4 = load i32, i32* %v2_22eb4, align 4
  %v4_22eb7 = icmp eq i32 %v3_22eb4, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_22eb7, label %bb, label %dec_label_pc_22ec0

bb:                                               ; preds = %dec_label_pc_22e93
  %v1_22ebe = call i32 @function_22ec5()
  br label %dec_label_pc_22ec0

dec_label_pc_22ec0:                               ; preds = %bb, %dec_label_pc_22e93
  %v2_22ebe = phi i32 [ %v1_22ebe, %bb ], [ %v3_22eb1, %dec_label_pc_22e93 ]
  ret i32 %v2_22ebe

; uselistorder directives
  uselistorder i32 %v1_22e81, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4584a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_41ef6, { 1, 0 }
}

define i32 @function_22ec5() local_unnamed_addr {
dec_label_pc_22ec5:
  %v0_22ec6 = load i32, i32* @eax, align 8
  ret i32 %v0_22ec6
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22eca:
  %v2_22ee4 = load i32, i32* %arg1, align 4
  ret i32 %v2_22ee4
}

define i32 @function_22ee6(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ee6:
  %v2_22ee6 = load i32, i32* @eax, align 8
  %v0_22ee8 = load i32, i32* @ebp, align 4
  %v1_22ee8 = add i32 %v0_22ee8, -28
  %v2_22ee8 = inttoptr i32 %v1_22ee8 to i32*
  %v3_22ee8 = load i32, i32* %v2_22ee8, align 4
  %v2_22eeb = inttoptr i32 %v3_22ee8 to i32*
  store i32 %v2_22ee6, i32* %v2_22eeb, align 4
  %v0_22eed = load i32, i32* @ebp, align 4
  %v1_22eed = add i32 %v0_22eed, -28
  %v2_22eed = inttoptr i32 %v1_22eed to i32*
  %v3_22eed = load i32, i32* %v2_22eed, align 4
  store i32 %v3_22eed, i32* @eax, align 8
  %v1_22ef0 = add i32 %v0_22eed, -12
  %v2_22ef0 = inttoptr i32 %v1_22ef0 to i32*
  %v3_22ef0 = load i32, i32* %v2_22ef0, align 4
  %v4_22ef3 = icmp eq i32 %v3_22ef0, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_22ef3, label %bb, label %dec_label_pc_22efc

bb:                                               ; preds = %dec_label_pc_22ee6
  %v1_22efa = call i32 @function_22f01()
  br label %dec_label_pc_22efc

dec_label_pc_22efc:                               ; preds = %bb, %dec_label_pc_22ee6
  %v2_22efa = phi i32 [ %v1_22efa, %bb ], [ %v3_22eed, %dec_label_pc_22ee6 ]
  ret i32 %v2_22efa
}

define i32 @function_22f01() local_unnamed_addr {
dec_label_pc_22f01:
  %v0_22f02 = load i32, i32* @eax, align 8
  ret i32 %v0_22f02
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_22f04:
  %v2_22f24 = load i32, i32* %arg2, align 4
  %v2_22f30 = call i32 @unknown_46386(i32 %arg1, i32 %v2_22f24)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22f44

bb:                                               ; preds = %dec_label_pc_22f04
  %v1_22f42 = call i32 @function_22f49()
  br label %dec_label_pc_22f44

dec_label_pc_22f44:                               ; preds = %bb, %dec_label_pc_22f04
  %v2_22f42 = phi i32 [ %v1_22f42, %bb ], [ %arg1, %dec_label_pc_22f04 ]
  ret i32 %v2_22f42

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22f49() local_unnamed_addr {
dec_label_pc_22f49:
  %v0_22f4a = load i32, i32* @eax, align 8
  ret i32 %v0_22f4a
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEeqERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22f4e:
  %v2_22f6e = load i32, i32* %arg1, align 4
  %v1_22f73 = inttoptr i32 %arg2 to i32*
  %v2_22f73 = load i32, i32* %v1_22f73, align 4
  %v12_22f75 = icmp eq i32 %v2_22f6e, %v2_22f73
  %v1_22f77 = zext i1 %v12_22f75 to i32
  %v3_22f77 = and i32 %v2_22f73, -256
  %v4_22f77 = or i32 %v1_22f77, %v3_22f77
  store i32 %v4_22f77, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_22f86

bb:                                               ; preds = %dec_label_pc_22f4e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_22f84 = call i32 @function_22f8b(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_22f86

dec_label_pc_22f86:                               ; preds = %bb, %dec_label_pc_22f4e
  %v4_22f84 = phi i32 [ %v3_22f84, %bb ], [ %v4_22f77, %dec_label_pc_22f4e ]
  ret i32 %v4_22f84

; uselistorder directives
  uselistorder i32 %v2_22f73, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22f8b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22f8b:
  %v0_22f8c = load i32, i32* @eax, align 8
  ret i32 %v0_22f8c
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEC1EjRKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22f8e:
  ret i32 %arg3
}

define i32 @function_22fa4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22fa4:
  %v0_22fa4 = load i32, i32* @eax, align 8
  %v1_22fa4 = load i32, i32* @ebp, align 4
  %v2_22fa4 = add i32 %v1_22fa4, -36
  %v3_22fa4 = inttoptr i32 %v2_22fa4 to i32*
  store i32 %v0_22fa4, i32* %v3_22fa4, align 4
  %v1_22fad = load i32, i32* @ebp, align 4
  %v2_22fad = add i32 %v1_22fad, -12
  %v3_22fad = inttoptr i32 %v2_22fad to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_22fad, align 4
  %v0_22fb2 = load i32, i32* @ebp, align 4
  %v1_22fb2 = add i32 %v0_22fb2, -28
  %v2_22fb2 = inttoptr i32 %v1_22fb2 to i32*
  %v3_22fb2 = load i32, i32* %v2_22fb2, align 4
  %v1_22fb5 = add i32 %v0_22fb2, -36
  %v2_22fb5 = inttoptr i32 %v1_22fb5 to i32*
  %v3_22fb5 = load i32, i32* %v2_22fb5, align 4
  %v2_22fbf = call i32 @unknown_4b2cc(i32 %v3_22fb2, i32 %v3_22fb5)
  %v0_22fc4 = load i32, i32* @ebp, align 4
  %v1_22fc4 = add i32 %v0_22fc4, -32
  %v2_22fc4 = inttoptr i32 %v1_22fc4 to i32*
  %v3_22fc4 = load i32, i32* %v2_22fc4, align 4
  %v1_22fcb = add i32 %v0_22fc4, -28
  %v2_22fcb = inttoptr i32 %v1_22fcb to i32*
  %v3_22fcb = load i32, i32* %v2_22fcb, align 4
  %v2_22fd1 = call i32 @unknown_36b38(i32 %v3_22fcb, i32 %v3_22fc4)
  %v0_22fd8 = load i32, i32* @ebp, align 4
  %v1_22fd8 = add i32 %v0_22fd8, -28
  %v2_22fd8 = inttoptr i32 %v1_22fd8 to i32*
  %v3_22fd8 = load i32, i32* %v2_22fd8, align 4
  %v2_22fdb = inttoptr i32 %v3_22fd8 to i32*
  store i32 %v2_22fd1, i32* %v2_22fdb, align 4
  %v0_22fdd = load i32, i32* @ebp, align 4
  %v1_22fdd = add i32 %v0_22fdd, -28
  %v2_22fdd = inttoptr i32 %v1_22fdd to i32*
  %v3_22fdd = load i32, i32* %v2_22fdd, align 4
  %v1_22fe0 = inttoptr i32 %v3_22fdd to i32*
  %v2_22fe0 = load i32, i32* %v1_22fe0, align 4
  %v2_22fe5 = add i32 %v3_22fdd, 4
  %v3_22fe5 = inttoptr i32 %v2_22fe5 to i32*
  store i32 %v2_22fe0, i32* %v3_22fe5, align 4
  %v0_22fe8 = load i32, i32* @ebp, align 4
  %v1_22fe8 = add i32 %v0_22fe8, -28
  %v2_22fe8 = inttoptr i32 %v1_22fe8 to i32*
  %v3_22fe8 = load i32, i32* %v2_22fe8, align 4
  %v1_22feb = inttoptr i32 %v3_22fe8 to i32*
  %v2_22feb = load i32, i32* %v1_22feb, align 4
  store i32 %v2_22feb, i32* @ecx, align 4
  %v1_22fed = add i32 %v0_22fe8, -32
  %v2_22fed = inttoptr i32 %v1_22fed to i32*
  %v3_22fed = load i32, i32* %v2_22fed, align 4
  %v2_22ff6 = mul i32 %v3_22fed, 12
  %v3_22ff9 = add i32 %v2_22ff6, %v2_22feb
  %v3_22ffc = load i32, i32* %v2_22fe8, align 4
  %v2_22fff = add i32 %v3_22ffc, 8
  %v3_22fff = inttoptr i32 %v2_22fff to i32*
  store i32 %v3_22ff9, i32* %v3_22fff, align 4
  %v0_23002 = load i32, i32* @ebp, align 4
  %v1_23002 = add i32 %v0_23002, -12
  %v2_23002 = inttoptr i32 %v1_23002 to i32*
  %v3_23002 = load i32, i32* %v2_23002, align 4
  %v3_23005 = xor i32 %v3_23002, ptrtoint ([3 x i8]* @3 to i32)
  %v4_23005 = icmp eq i32 %v3_23005, 0
  store i32 %v3_23005, i32* @eax, align 8
  br i1 %v4_23005, label %bb, label %dec_label_pc_2300e

bb:                                               ; preds = %dec_label_pc_22fa4
  %v1_2300c = call i32 @function_2302c()
  store i32 %v1_2300c, i32* @eax, align 8
  br label %dec_label_pc_2300e

dec_label_pc_2300e:                               ; preds = %bb, %dec_label_pc_22fa4
  %v0_2300e = call i32 @function_23027()
  ret i32 %v0_2300e
}

define i32 @function_23011() local_unnamed_addr {
dec_label_pc_23011:
  %eax.global-to-local = alloca i32, align 4
  %v0_23011 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23011
}

define i32 @function_23027() local_unnamed_addr {
dec_label_pc_23027:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2302c() local_unnamed_addr {
dec_label_pc_2302c:
  %v0_23031 = load i32, i32* @eax, align 8
  ret i32 %v0_23031
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS2_8weak_ptrIvEENS2_8signals26detail21foreign_void_weak_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EESt6vectorISC_SaISC_EEEEPSC_SC_ET0_T_SL_SK_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23032:
  %v7_2306f = call i32 @unknown_4b3cf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_2306f, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23080

bb:                                               ; preds = %dec_label_pc_23032
  %v1_2307e = call i32 @function_23085()
  br label %dec_label_pc_23080

dec_label_pc_23080:                               ; preds = %bb, %dec_label_pc_23032
  %v2_2307e = phi i32 [ %v1_2307e, %bb ], [ %v7_2306f, %dec_label_pc_23032 ]
  ret i32 %v2_2307e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23085() local_unnamed_addr {
dec_label_pc_23085:
  %v0_23086 = load i32, i32* @eax, align 8
  ret i32 %v0_23086
}

define i32 @_ZN5boost9function3IbRKSsS2_jEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23088:
  %v1_230ab = call i32 @function_311f4(i32 %arg1)
  %v2_230bd = call i32 @unknown_4b474(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_230ce

bb:                                               ; preds = %dec_label_pc_23088
  %v1_230cc = call i32 @function_230d3()
  br label %dec_label_pc_230ce

dec_label_pc_230ce:                               ; preds = %bb, %dec_label_pc_23088
  %v2_230cc = phi i32 [ %v1_230cc, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23088 ]
  ret i32 %v2_230cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_230d3() local_unnamed_addr {
dec_label_pc_230d3:
  %v0_230d4 = load i32, i32* @eax, align 8
  ret i32 %v0_230d4
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEC1EPSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_230d6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 8
  %v1_230f9 = call i32 @function_24fca(i32 %tmp102)
  store i32 ptrtoint (%vtable_33904_type* @global_var_33904.2037 to i32), i32* %arg1, align 4
  %v2_2310d = add i32 %tmp102, 12
  %v3_2310d = inttoptr i32 %v2_2310d to i32*
  store i32 %arg2, i32* %v3_2310d, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2311c

bb:                                               ; preds = %dec_label_pc_230d6
  %v1_2311a = call i32 @function_23121()
  br label %dec_label_pc_2311c

dec_label_pc_2311c:                               ; preds = %bb, %dec_label_pc_230d6
  %v2_2311a = phi i32 [ %v1_2311a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_230d6 ]
  ret i32 %v2_2311a

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_23121() local_unnamed_addr {
dec_label_pc_23121:
  %v0_23122 = load i32, i32* @eax, align 8
  ret i32 %v0_23122
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_23123:
  %v10_2313a = icmp eq i32* %arg1, null
  br i1 %v10_2313a, label %dec_label_pc_23152, label %dec_label_pc_23140

dec_label_pc_23140:                               ; preds = %dec_label_pc_23123
  br label %dec_label_pc_23152

dec_label_pc_23152:                               ; preds = %dec_label_pc_23123, %dec_label_pc_23140
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2315e

bb:                                               ; preds = %dec_label_pc_23152
  %v1_2315c = call i32 @function_23163()
  br label %dec_label_pc_2315e

dec_label_pc_2315e:                               ; preds = %bb, %dec_label_pc_23152
  %v2_2315c = phi i32 [ %v1_2315c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23152 ]
  ret i32 %v2_2315c

; uselistorder directives
  uselistorder label %dec_label_pc_23152, { 1, 0 }
}

define i32 @function_23163() local_unnamed_addr {
dec_label_pc_23163:
  %v0_23164 = load i32, i32* @eax, align 8
  ret i32 %v0_23164
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE12destroy_implEN4mpl_5bool_ILb0EEE(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23166:
  %v4_23184 = ptrtoint i8* %arg1 to i32
  %v2_2318a = call i32 @unknown_4b6f0(i32 %v4_23184)
  store i8 0, i8* %arg1, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_231a1

bb:                                               ; preds = %dec_label_pc_23166
  %v1_2319f = call i32 @function_231a6()
  br label %dec_label_pc_231a1

dec_label_pc_231a1:                               ; preds = %bb, %dec_label_pc_23166
  %v2_2319f = phi i32 [ %v1_2319f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23166 ]
  ret i32 %v2_2319f
}

define i32 @function_231a6() local_unnamed_addr {
dec_label_pc_231a6:
  %v0_231a7 = load i32, i32* @eax, align 8
  ret i32 %v0_231a7
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_231a8:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_231d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_231d0:
  %v0_231d0 = load i32, i32* @eax, align 8
  %v3_231d0 = xor i32 %v0_231d0, ptrtoint ([3 x i8]* @3 to i32)
  %v4_231d0 = icmp eq i32 %v3_231d0, 0
  store i32 %v3_231d0, i32* @eax, align 8
  br i1 %v4_231d0, label %bb, label %dec_label_pc_231d9

bb:                                               ; preds = %dec_label_pc_231d0
  %v1_231d7 = call i32 @function_231de()
  br label %dec_label_pc_231d9

dec_label_pc_231d9:                               ; preds = %bb, %dec_label_pc_231d0
  %v2_231d7 = phi i32 [ %v1_231d7, %bb ], [ %v3_231d0, %dec_label_pc_231d0 ]
  ret i32 %v2_231d7
}

define i32 @function_231de() local_unnamed_addr {
dec_label_pc_231de:
  %v0_231df = load i32, i32* @eax, align 8
  ret i32 %v0_231df
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_231e0:
  %v1_231fa = add i32 %arg1, 8
  %v2_231fa = inttoptr i32 %v1_231fa to i32*
  %v3_231fa = load i32, i32* %v2_231fa, align 4
  store i32 %v3_231fa, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23209

bb:                                               ; preds = %dec_label_pc_231e0
  %v2_23207 = call i32 @function_2320e(i32 %arg1)
  br label %dec_label_pc_23209

dec_label_pc_23209:                               ; preds = %bb, %dec_label_pc_231e0
  %v3_23207 = phi i32 [ %v2_23207, %bb ], [ %v3_231fa, %dec_label_pc_231e0 ]
  ret i32 %v3_23207
}

define i32 @function_2320e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2320e:
  %v0_2320f = load i32, i32* @eax, align 8
  ret i32 %v0_2320f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23210:
  %v1_2322a = add i32 %arg1, 4
  store i32 %v1_2322a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23239

bb:                                               ; preds = %dec_label_pc_23210
  %v2_23237 = call i32 @function_2323e(i32 %arg1)
  br label %dec_label_pc_23239

dec_label_pc_23239:                               ; preds = %bb, %dec_label_pc_23210
  %v3_23237 = phi i32 [ %v2_23237, %bb ], [ %v1_2322a, %dec_label_pc_23210 ]
  ret i32 %v3_23237
}

define i32 @function_2323e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2323e:
  %v0_2323f = load i32, i32* @eax, align 8
  ret i32 %v0_2323f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_upper_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_23240:
  store i32 0, i32* @eax, align 8
  %v5_2326f = call i32 @function_232bc(i32 %arg5, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v5_2326f
}

define i32 @function_2327d() local_unnamed_addr {
dec_label_pc_2327d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2327d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2327d
}

define i32 @function_2329e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2329e:
  %v0_2329e = load i32, i32* @ebp, align 4
  %v1_2329e = add i32 %v0_2329e, -36
  %v2_2329e = inttoptr i32 %v1_2329e to i32*
  %v3_2329e = load i32, i32* %v2_2329e, align 4
  %v1_232a4 = call i32 @unknown_4b85b(i32 %v3_2329e)
  store i32 %v1_232a4, i32* @eax, align 8
  %v1_232a9 = load i32, i32* @ebp, align 4
  %v2_232a9 = add i32 %v1_232a9, -36
  %v3_232a9 = inttoptr i32 %v2_232a9 to i32*
  store i32 %v1_232a4, i32* %v3_232a9, align 4
  %v5_232ac = call i32 @function_232bc(i32 %v3_2329e, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  ret i32 %v5_232ac
}

define i32 @function_232bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_232bc:
  %v0_232bc = load i32, i32* @ebp, align 4
  %v1_232c7 = add i32 %v0_232bc, -40
  %v2_232c7 = inttoptr i32 %v1_232c7 to i32*
  %v3_232c7 = load i32, i32* %v2_232c7, align 4
  %v1_232ce = add i32 %v0_232bc, -28
  %v2_232ce = inttoptr i32 %v1_232ce to i32*
  %v3_232ce = load i32, i32* %v2_232ce, align 4
  %v2_232d4 = call i32 @unknown_463e8(i32 %v3_232ce, i32 %v3_232c7)
  %v0_232d9 = load i32, i32* @ebp, align 4
  %v1_232d9 = add i32 %v0_232d9, -28
  %v2_232d9 = inttoptr i32 %v1_232d9 to i32*
  %v3_232d9 = load i32, i32* %v2_232d9, align 4
  store i32 %v3_232d9, i32* @eax, align 8
  %v1_232dc = add i32 %v0_232d9, -12
  %v2_232dc = inttoptr i32 %v1_232dc to i32*
  %v3_232dc = load i32, i32* %v2_232dc, align 4
  %v4_232df = icmp eq i32 %v3_232dc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_232df, label %bb, label %dec_label_pc_232e8

bb:                                               ; preds = %dec_label_pc_232bc
  %v1_232e6 = call i32 @function_232ed()
  br label %dec_label_pc_232e8

dec_label_pc_232e8:                               ; preds = %bb, %dec_label_pc_232bc
  %v3_232e6 = phi i32 [ %v1_232e6, %bb ], [ %v3_232d9, %dec_label_pc_232bc ]
  ret i32 %v3_232e6

; uselistorder directives
  uselistorder i32 %v0_232bc, { 1, 0 }
}

define i32 @function_232ed() local_unnamed_addr {
dec_label_pc_232ed:
  %v0_232ee = load i32, i32* @eax, align 8
  ret i32 %v0_232ee
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_232f2:
  %v2_23312 = load i32, i32* %arg1, align 4
  %v1_23317 = inttoptr i32 %arg2 to i32*
  %v2_23317 = load i32, i32* %v1_23317, align 4
  %v12_23319 = icmp eq i32 %v2_23312, %v2_23317
  %v1_2331b = zext i1 %v12_23319 to i32
  %v3_2331b = and i32 %v2_23317, -256
  %v4_2331b = or i32 %v1_2331b, %v3_2331b
  store i32 %v4_2331b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2332a

bb:                                               ; preds = %dec_label_pc_232f2
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_23328 = call i32 @function_2332f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2332a

dec_label_pc_2332a:                               ; preds = %bb, %dec_label_pc_232f2
  %v4_23328 = phi i32 [ %v3_23328, %bb ], [ %v4_2331b, %dec_label_pc_232f2 ]
  ret i32 %v4_23328

; uselistorder directives
  uselistorder i32 %v2_23317, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2332f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2332f:
  %v0_23330 = load i32, i32* @eax, align 8
  ret i32 %v0_23330
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE3endEv() local_unnamed_addr {
dec_label_pc_23332:
  %eax.global-to-local = alloca i32, align 4
  %v5_23332 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_23332
}

define i32 @function_23334(i32 %arg1) local_unnamed_addr {
dec_label_pc_23334:
  %v0_2333f = load i32, i32* @ebp, align 4
  %v1_23342 = add i32 %v0_2333f, 2
  store i32 %v1_23342, i32* @ebp, align 4
  %v2_2334a = add i32 %v0_2333f, -10
  %v3_2334a = inttoptr i32 %v2_2334a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2334a, align 4
  %v0_2334f = load i32, i32* @ebp, align 4
  %v1_2334f = add i32 %v0_2334f, -32
  %v2_2334f = inttoptr i32 %v1_2334f to i32*
  %v3_2334f = load i32, i32* %v2_2334f, align 4
  %v1_23356 = add i32 %v0_2334f, -28
  %v2_23356 = inttoptr i32 %v1_23356 to i32*
  %v3_23356 = load i32, i32* %v2_23356, align 4
  %v2_2335c = call i32 @unknown_467b4(i32 %v3_23356, i32 %v3_2334f)
  %v0_23361 = load i32, i32* @ebp, align 4
  %v1_23361 = add i32 %v0_23361, -28
  %v2_23361 = inttoptr i32 %v1_23361 to i32*
  %v3_23361 = load i32, i32* %v2_23361, align 4
  store i32 %v3_23361, i32* @eax, align 8
  %v1_23364 = add i32 %v0_23361, -12
  %v2_23364 = inttoptr i32 %v1_23364 to i32*
  %v3_23364 = load i32, i32* %v2_23364, align 4
  %v4_23367 = icmp eq i32 %v3_23364, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_23367, label %bb, label %dec_label_pc_23370

bb:                                               ; preds = %dec_label_pc_23334
  %v1_2336e = call i32 @function_23375()
  br label %dec_label_pc_23370

dec_label_pc_23370:                               ; preds = %bb, %dec_label_pc_23334
  %v3_2336e = phi i32 [ %v1_2336e, %bb ], [ %v3_23361, %dec_label_pc_23334 ]
  ret i32 %v3_2336e
}

define i32 @function_23375() local_unnamed_addr {
dec_label_pc_23375:
  %v0_23376 = load i32, i32* @eax, align 8
  ret i32 %v0_23376
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2337a:
  %v2_23394 = load i32, i32* %arg1, align 4
  %v1_23396 = add i32 %v2_23394, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2339c = call i32 @unknown_4b9f5(i32 %v1_23396)
  ret i32 %v1_2339c
}

define i32 @function_233a8() local_unnamed_addr {
dec_label_pc_233a8:
  %eax.global-to-local = alloca i32, align 4
  %v2_233a8 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_233a8 = load i32, i32* %eax.global-to-local, align 8
  %v4_233a8 = trunc i32 %v3_233a8 to i8
  %v5_233a8 = add i8 %v4_233a8, %v2_233a8
  %v21_233a8 = inttoptr i32 %v3_233a8 to i8*
  store i8 %v5_233a8, i8* %v21_233a8, align 1
  %v22_233a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_233a8
}

define i32 @function_233b1() local_unnamed_addr {
dec_label_pc_233b1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_233b1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_233b1 = add i32 %v0_233b1, -1
  store i32 %v1_233b1, i32* %ecx.global-to-local, align 4
  %v0_233b3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_233b3
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE14_M_create_nodeERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_233b4:
  ret i32 0
}

define i32 @function_233d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_233d2:
  %ebx.global-to-local = alloca i32, align 4
  %v0_233d2 = load i32, i32* @ebp, align 4
  %v1_233d2 = add i32 %v0_233d2, -28
  %v2_233d2 = inttoptr i32 %v1_233d2 to i32*
  %v3_233d2 = load i32, i32* %v2_233d2, align 4
  %v1_233d8 = call i32 @unknown_4ba5c(i32 %v3_233d2)
  %v1_233dd = load i32, i32* @ebp, align 4
  %v2_233dd = add i32 %v1_233dd, -20
  %v3_233dd = inttoptr i32 %v2_233dd to i32*
  store i32 %v1_233d8, i32* %v3_233dd, align 4
  %v0_233e0 = load i32, i32* @ebp, align 4
  %v1_233e0 = add i32 %v0_233e0, -20
  %v2_233e0 = inttoptr i32 %v1_233e0 to i32*
  %v3_233e0 = load i32, i32* %v2_233e0, align 4
  %v1_233e3 = add i32 %v3_233e0, 8
  %v1_233e9 = call i32 @unknown_4bb27(i32 %v1_233e3)
  store i32 %v1_233e9, i32* %ebx.global-to-local, align 8
  %v0_233f0 = load i32, i32* @ebp, align 4
  %v1_233f0 = add i32 %v0_233f0, -28
  %v2_233f0 = inttoptr i32 %v1_233f0 to i32*
  %v3_233f0 = load i32, i32* %v2_233f0, align 4
  %v1_233f3 = add i32 %v0_233f0, -13
  %v2_233fd = call i32 @unknown_4baa2(i32 %v1_233f3, i32 %v3_233f0)
  %v0_23405 = load i32, i32* @ebp, align 4
  %v1_23405 = add i32 %v0_23405, -32
  %v2_23405 = inttoptr i32 %v1_23405 to i32*
  %v3_23405 = load i32, i32* %v2_23405, align 4
  %v0_2340c = load i32, i32* %ebx.global-to-local, align 8
  %v1_23410 = add i32 %v0_23405, -13
  %v3_23416 = call i32 @unknown_4bb54(i32 %v1_23410, i32 %v0_2340c, i32 %v3_23405)
  %v0_2341b = load i32, i32* @ebp, align 4
  %v1_2341b = add i32 %v0_2341b, -13
  %v1_23421 = call i32 @unknown_4baf2(i32 %v1_2341b)
  %v0_23426 = load i32, i32* @ebp, align 4
  %v1_23426 = add i32 %v0_23426, -20
  %v2_23426 = inttoptr i32 %v1_23426 to i32*
  %v3_23426 = load i32, i32* %v2_23426, align 4
  store i32 %v3_23426, i32* @eax, align 8
  %v1_23429 = add i32 %v0_23426, -12
  %v2_23429 = inttoptr i32 %v1_23429 to i32*
  %v3_23429 = load i32, i32* %v2_23429, align 4
  %v4_2342c = icmp eq i32 %v3_23429, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2342c, label %bb, label %dec_label_pc_23435

bb:                                               ; preds = %dec_label_pc_233d2
  %v1_23433 = call i32 @function_2347d()
  store i32 %v1_23433, i32* @eax, align 8
  br label %dec_label_pc_23435

dec_label_pc_23435:                               ; preds = %bb, %dec_label_pc_233d2
  %v0_23435 = call i32 @function_23478()
  ret i32 %v0_23435
}

define i32 @function_23437() local_unnamed_addr {
dec_label_pc_23437:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_23437 = load i32, i32* %eax.global-to-local, align 8
  %v0_23439 = load i32, i32* %ebp.global-to-local, align 4
  %v1_23439 = add i32 %v0_23439, -13
  store i32 %v1_23439, i32* %eax.global-to-local, align 8
  %v1_2343f = call i32 @unknown_4baf2(i32 %v1_23439)
  store i32 %v0_23437, i32* @eax, align 8
  %v0_23446 = call i32 @function_23459()
  store i32 %v0_23446, i32* %eax.global-to-local, align 8
  ret i32 %v0_23446

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4baf2, { 1, 0 }
}

define i32 @function_23449() local_unnamed_addr {
dec_label_pc_23449:
  %eax.global-to-local = alloca i32, align 4
  %v0_23449 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23449
}

define i32 @function_23459() local_unnamed_addr {
dec_label_pc_23459:
  %v3_23459 = load i32, i32* @eax, align 8
  ret i32 %v3_23459
}

define i32 @function_23478() local_unnamed_addr {
dec_label_pc_23478:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2347d() local_unnamed_addr {
dec_label_pc_2347d:
  %v0_23481 = load i32, i32* @eax, align 8
  ret i32 %v0_23481
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE() local_unnamed_addr {
dec_label_pc_23482:
  %eax.global-to-local = alloca i32, align 4
  %v2_23483 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_23483
}

define i32 @function_23486(i32 %arg1) local_unnamed_addr {
dec_label_pc_23486:
  %ebp.global-to-local = alloca i32, align 4
  %v0_23487 = load i32, i32* @ebx, align 8
  %v1_23487 = add i32 %v0_23487, 1166608453
  %v2_23487 = inttoptr i32 %v1_23487 to i8*
  %v3_23487 = load i8, i8* %v2_23487, align 1
  %v4_23487 = load i32, i32* @ecx, align 4
  %v5_23487 = trunc i32 %v4_23487 to i8
  %v6_23487 = sub i8 %v3_23487, %v5_23487
  store i8 %v6_23487, i8* %v2_23487, align 1
  %v0_2348f = load i32, i32* @ebp, align 4
  %v1_23492 = add i32 %v0_2348f, 2
  store i32 %v1_23492, i32* %ebp.global-to-local, align 4
  %v2_2349a = add i32 %v0_2348f, -10
  %v3_2349a = inttoptr i32 %v2_2349a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2349a, align 4
  %v0_2349f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2349f = add i32 %v0_2349f, -28
  %v2_2349f = inttoptr i32 %v1_2349f to i32*
  %v3_2349f = load i32, i32* %v2_2349f, align 4
  %v1_234a2 = add i32 %v0_2349f, -32
  %v2_234a2 = inttoptr i32 %v1_234a2 to i32*
  %v3_234a2 = load i32, i32* %v2_234a2, align 4
  %v2_234a5 = inttoptr i32 %v3_2349f to i32*
  store i32 %v3_234a2, i32* %v2_234a5, align 4
  %v0_234a7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_234a7 = add i32 %v0_234a7, -12
  %v2_234a7 = inttoptr i32 %v1_234a7 to i32*
  %v3_234a7 = load i32, i32* %v2_234a7, align 4
  %v3_234aa = xor i32 %v3_234a7, ptrtoint ([3 x i8]* @3 to i32)
  %v1_234b8 = inttoptr i32 %v0_234a7 to i32*
  %v2_234b8 = load i32, i32* %v1_234b8, align 4
  store i32 %v2_234b8, i32* %ebp.global-to-local, align 4
  ret i32 %v3_234aa
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_234ba:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_234e0

bb:                                               ; preds = %dec_label_pc_234ba
  %v2_234de = call i32 @function_234e5(i32 %arg1)
  br label %dec_label_pc_234e0

dec_label_pc_234e0:                               ; preds = %bb, %dec_label_pc_234ba
  %v3_234de = phi i32 [ %v2_234de, %bb ], [ %arg1, %dec_label_pc_234ba ]
  ret i32 %v3_234de
}

define i32 @function_234e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_234e5:
  %v0_234e6 = load i32, i32* @eax, align 8
  ret i32 %v0_234e6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5eraseESt17_Rb_tree_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_234e8:
  ret i32 %arg2
}

define i32 @function_23500(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23500:
  %v0_23500 = load i32, i32* @eax, align 8
  %v1_23500 = load i32, i32* @ebp, align 4
  %v2_23500 = add i32 %v1_23500, -12
  %v3_23500 = inttoptr i32 %v2_23500 to i32*
  store i32 %v0_23500, i32* %v3_23500, align 4
  %v0_23505 = load i32, i32* @ebp, align 4
  %v1_23505 = add i32 %v0_23505, -32
  %v1_2350c = add i32 %v0_23505, -16
  %v2_23512 = call i32 @unknown_42518(i32 %v1_2350c, i32 %v1_23505)
  %v0_23517 = load i32, i32* @ebp, align 4
  %v1_23517 = add i32 %v0_23517, -16
  %v2_23517 = inttoptr i32 %v1_23517 to i32*
  %v3_23517 = load i32, i32* %v2_23517, align 4
  %v1_2351e = add i32 %v0_23517, -28
  %v2_2351e = inttoptr i32 %v1_2351e to i32*
  %v3_2351e = load i32, i32* %v2_2351e, align 4
  %v2_23524 = call i32 @unknown_4bd2e(i32 %v3_2351e, i32 %v3_23517)
  %v0_23529 = load i32, i32* @ebp, align 4
  %v1_23529 = add i32 %v0_23529, -12
  %v2_23529 = inttoptr i32 %v1_23529 to i32*
  %v3_23529 = load i32, i32* %v2_23529, align 4
  %v3_2352c = xor i32 %v3_23529, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2352c = icmp eq i32 %v3_2352c, 0
  store i32 %v3_2352c, i32* @eax, align 8
  br i1 %v4_2352c, label %bb, label %dec_label_pc_23535

bb:                                               ; preds = %dec_label_pc_23500
  %v1_23533 = call i32 @function_2353a()
  br label %dec_label_pc_23535

dec_label_pc_23535:                               ; preds = %bb, %dec_label_pc_23500
  %v2_23533 = phi i32 [ %v1_23533, %bb ], [ %v3_2352c, %dec_label_pc_23500 ]
  ret i32 %v2_23533
}

define i32 @function_2353a() local_unnamed_addr {
dec_label_pc_2353a:
  %v0_2353b = load i32, i32* @eax, align 8
  ret i32 %v0_2353b
}

define i32 @_ZN5boost8optionalIiEC1ERKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2353c:
  ret i32 %arg1
}

define i32 @function_2354a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2354a:
  %v0_2354c = load i32, i32* @ebp, align 4
  %v1_2354c = add i32 %v0_2354c, 1
  store i32 %v1_2354c, i32* @ebp, align 4
  %v2_23554 = add i32 %v0_2354c, -11
  %v3_23554 = inttoptr i32 %v2_23554 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_23554, align 4
  %v0_23559 = load i32, i32* @ebp, align 4
  %v1_23559 = add i32 %v0_23559, -32
  %v2_23559 = inttoptr i32 %v1_23559 to i32*
  %v3_23559 = load i32, i32* %v2_23559, align 4
  %v1_2355c = add i32 %v0_23559, -28
  %v2_2355c = inttoptr i32 %v1_2355c to i32*
  %v3_2355c = load i32, i32* %v2_2355c, align 4
  %v2_23566 = call i32 @unknown_4bdec(i32 %v3_2355c, i32 %v3_23559)
  %v0_2356b = load i32, i32* @ebp, align 4
  %v1_2356b = add i32 %v0_2356b, -12
  %v2_2356b = inttoptr i32 %v1_2356b to i32*
  %v3_2356b = load i32, i32* %v2_2356b, align 4
  %v3_2356e = xor i32 %v3_2356b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2356e = icmp eq i32 %v3_2356e, 0
  store i32 %v3_2356e, i32* @eax, align 8
  br i1 %v4_2356e, label %bb, label %dec_label_pc_23577

bb:                                               ; preds = %dec_label_pc_2354a
  %v1_23575 = call i32 @function_2357c()
  br label %dec_label_pc_23577

dec_label_pc_23577:                               ; preds = %bb, %dec_label_pc_2354a
  %v3_23575 = phi i32 [ %v1_23575, %bb ], [ %v3_2356e, %dec_label_pc_2354a ]
  ret i32 %v3_23575
}

define i32 @function_2357c() local_unnamed_addr {
dec_label_pc_2357c:
  %v0_2357d = load i32, i32* @eax, align 8
  ret i32 %v0_2357d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2357e:
  ret i32 %arg2
}

define i32 @function_235a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_235a8:
  %v0_235a8 = call i32 @unknown_4675e()
  %v1_235ad = load i32, i32* @ebp, align 4
  %v2_235ad = add i32 %v1_235ad, -28
  %v3_235ad = inttoptr i32 %v2_235ad to i32*
  store i32 %v0_235a8, i32* %v3_235ad, align 4
  %v0_235b0 = load i32, i32* @ebp, align 4
  %v1_235b0 = add i32 %v0_235b0, -64
  %v2_235b0 = inttoptr i32 %v1_235b0 to i32*
  %v3_235b0 = load i32, i32* %v2_235b0, align 4
  ret i32 %v3_235b0
}

define i32 @function_23636(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23636:
  %v0_23638 = call i32 @unknown_46726()
  %v0_2363d = load i32, i32* @ebp, align 4
  %v1_2363d = add i32 %v0_2363d, -13
  %v2_2363d = inttoptr i32 %v1_2363d to i8*
  %v3_2363d = load i8, i8* %v2_2363d, align 1
  %v10_2363d = icmp eq i8 %v3_2363d, 0
  br i1 %v10_2363d, label %bb, label %dec_label_pc_23647

bb:                                               ; preds = %dec_label_pc_23636
  %v1_23641 = call i32 @function_236c9()
  %v0_23647.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_23647

dec_label_pc_23647:                               ; preds = %bb, %dec_label_pc_23636
  %v0_23647 = phi i32 [ %v0_23647.pre, %bb ], [ %v0_2363d, %dec_label_pc_23636 ]
  %v1_23647 = add i32 %v0_23647, -40
  %v1_2364a = add i32 %v0_23647, -64
  %v2_2364a = inttoptr i32 %v1_2364a to i32*
  %v3_2364a = load i32, i32* %v2_2364a, align 4
  %v2_23654 = call i32 @unknown_429a4(i32 %v1_23647, i32 %v3_2364a)
  %v0_2365c = load i32, i32* @ebp, align 4
  %v1_2365c = add i32 %v0_2365c, -40
  %v1_23663 = add i32 %v0_2365c, -44
  %v2_23669 = call i32 @unknown_42866(i32 %v1_23663, i32 %v1_2365c)
  %v4_2366e = trunc i32 %v2_23669 to i8
  %v5_2366e = icmp eq i8 %v4_2366e, 0
  br i1 %v5_2366e, label %bb8, label %dec_label_pc_23672

bb8:                                              ; preds = %dec_label_pc_23647
  %v1_23670 = call i32 @function_236be()
  br label %dec_label_pc_23672

dec_label_pc_23672:                               ; preds = %bb8, %dec_label_pc_23647
  %v0_23672 = load i32, i32* @ebp, align 4
  %v1_23672 = add i32 %v0_23672, -17
  %v2_23672 = inttoptr i32 %v1_23672 to i8*
  store i8 1, i8* %v2_23672, align 1
  %v0_23676 = load i32, i32* @ebp, align 4
  %v1_23676 = add i32 %v0_23676, -36
  ret i32 %v1_23676

; uselistorder directives
  uselistorder i32 %v0_23647, { 1, 0 }
}

define i32 @function_23680(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23680:
  %v0_23680 = load i32, i32* @ebp, align 4
  %v1_23680 = add i32 %v0_23680, -24
  %v2_23680 = inttoptr i32 %v1_23680 to i32*
  %v3_23680 = load i32, i32* %v2_23680, align 4
  %v1_23687 = add i32 %v0_23680, -28
  %v2_23687 = inttoptr i32 %v1_23687 to i32*
  %v3_23687 = load i32, i32* %v2_23687, align 4
  %v1_2368e = add i32 %v0_23680, -64
  %v2_2368e = inttoptr i32 %v1_2368e to i32*
  %v3_2368e = load i32, i32* %v2_2368e, align 4
  %v0_23695 = load i32, i32* @eax, align 8
  %v4_23698 = call i32 @unknown_4becc(i32 %v0_23695, i32 %v3_2368e, i32 %v3_23687, i32 %v3_23680)
  %v0_236a0 = load i32, i32* @ebp, align 4
  %v1_236ae = add i32 %v0_236a0, -60
  %v2_236ae = inttoptr i32 %v1_236ae to i32*
  %v3_236ae = load i32, i32* %v2_236ae, align 4
  %v1_236b4 = call i32 @unknown_4bfce(i32 %v3_236ae)
  %v0_236b9 = call i32 @function_23767()
  ret i32 %v0_236b9
}

define i32 @function_236be() local_unnamed_addr {
dec_label_pc_236be:
  %v0_236be = load i32, i32* @ebp, align 4
  %v1_236be = add i32 %v0_236be, -44
  %v1_236c4 = call i32 @unknown_4c01a(i32 %v1_236be)
  ret i32 %v1_236c4
}

define i32 @function_236c9() local_unnamed_addr {
dec_label_pc_236c9:
  %ebx.global-to-local = alloca i32, align 4
  %v0_236c9 = load i32, i32* @ebp, align 4
  %v1_236c9 = add i32 %v0_236c9, -68
  %v2_236c9 = inttoptr i32 %v1_236c9 to i32*
  %v3_236c9 = load i32, i32* %v2_236c9, align 4
  %v1_236d0 = add i32 %v0_236c9, -16
  %v2_236d6 = call i32 @unknown_4be98(i32 %v1_236d0, i32 %v3_236c9)
  store i32 %v2_236d6, i32* %ebx.global-to-local, align 8
  %v0_236dd = load i32, i32* @ebp, align 4
  %v1_236dd = add i32 %v0_236dd, -44
  %v2_236dd = inttoptr i32 %v1_236dd to i32*
  %v3_236dd = load i32, i32* %v2_236dd, align 4
  %v1_236e3 = call i32 @unknown_4c059(i32 %v3_236dd)
  %v0_236ea = load i32, i32* @ebp, align 4
  %v1_236ea = add i32 %v0_236ea, -64
  %v2_236ea = inttoptr i32 %v1_236ea to i32*
  %v3_236ea = load i32, i32* %v2_236ea, align 4
  %v0_236ed = load i32, i32* %ebx.global-to-local, align 8
  %v3_236f8 = call i32 @unknown_44cbe(i32 %v3_236ea, i32 %v1_236e3, i32 %v0_236ed)
  %v4_236fd = trunc i32 %v3_236f8 to i8
  %v5_236fd = icmp eq i8 %v4_236fd, 0
  %v0_2374a = load i32, i32* @ebp, align 4
  br i1 %v5_236fd, label %dec_label_pc_2374a, label %dec_label_pc_23701

dec_label_pc_23701:                               ; preds = %dec_label_pc_236c9
  %v1_23701 = add i32 %v0_2374a, -15
  %v2_23701 = inttoptr i32 %v1_23701 to i8*
  store i8 1, i8* %v2_23701, align 1
  %v0_23705 = load i32, i32* @ebp, align 4
  %v1_23705 = add i32 %v0_23705, -32
  %v1_2370f = add i32 %v0_23705, -24
  %v2_2370f = inttoptr i32 %v1_2370f to i32*
  %v3_2370f = load i32, i32* %v2_2370f, align 4
  %v1_23716 = add i32 %v0_23705, -28
  %v2_23716 = inttoptr i32 %v1_23716 to i32*
  %v3_23716 = load i32, i32* %v2_23716, align 4
  %v1_2371d = add i32 %v0_23705, -64
  %v2_2371d = inttoptr i32 %v1_2371d to i32*
  %v3_2371d = load i32, i32* %v2_2371d, align 4
  %v4_23727 = call i32 @unknown_4becc(i32 %v1_23705, i32 %v3_2371d, i32 %v3_23716, i32 %v3_2370f)
  %v0_2372f = load i32, i32* @ebp, align 4
  %v1_2373d = add i32 %v0_2372f, -60
  %v2_2373d = inttoptr i32 %v1_2373d to i32*
  %v3_2373d = load i32, i32* %v2_2373d, align 4
  %v1_23743 = call i32 @unknown_4bfce(i32 %v3_2373d)
  %v0_23748 = call i32 @function_23767()
  ret i32 %v0_23748

dec_label_pc_2374a:                               ; preds = %dec_label_pc_236c9
  %v1_2374a = add i32 %v0_2374a, -14
  %v2_2374a = inttoptr i32 %v1_2374a to i8*
  store i8 0, i8* %v2_2374a, align 1
  %v0_2374e = load i32, i32* @ebp, align 4
  %v1_23755 = add i32 %v0_2374e, -44
  ret i32 %v1_23755

; uselistorder directives
  uselistorder i32 %v0_23705, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2374a, { 1, 0 }
  uselistorder i32 ()* @function_23767, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4becc, { 1, 0 }
}

define i32 @function_2375c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2375c:
  %v0_2375c = load i32, i32* @ebp, align 4
  %v1_2375c = add i32 %v0_2375c, -60
  %v2_2375c = inttoptr i32 %v1_2375c to i32*
  %v3_2375c = load i32, i32* %v2_2375c, align 4
  %v1_23762 = call i32 @unknown_4bfce(i32 %v3_2375c)
  ret i32 %v1_23762

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4bfce, { 1, 2, 0 }
}

define i32 @function_23767() local_unnamed_addr {
dec_label_pc_23767:
  %v0_23767 = load i32, i32* @ebp, align 4
  %v1_23767 = add i32 %v0_23767, -60
  %v2_23767 = inttoptr i32 %v1_23767 to i32*
  %v3_23767 = load i32, i32* %v2_23767, align 4
  store i32 %v3_23767, i32* @eax, align 8
  %v1_2376a = add i32 %v0_23767, -12
  %v2_2376a = inttoptr i32 %v1_2376a to i32*
  %v3_2376a = load i32, i32* %v2_2376a, align 4
  %v4_2376d = icmp eq i32 %v3_2376a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2376d, label %bb, label %dec_label_pc_23776

bb:                                               ; preds = %dec_label_pc_23767
  %v1_23774 = call i32 @function_2377b()
  br label %dec_label_pc_23776

dec_label_pc_23776:                               ; preds = %bb, %dec_label_pc_23767
  %v2_23774 = phi i32 [ %v1_23774, %bb ], [ %v3_23767, %dec_label_pc_23767 ]
  ret i32 %v2_23774
}

define i32 @function_2377b() local_unnamed_addr {
dec_label_pc_2377b:
  %v0_2377f = load i32, i32* @eax, align 8
  ret i32 %v0_2377f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_23782:
  store i32 0, i32* @eax, align 8
  %v5_237b1 = call i32 @function_23801(i32 %arg5, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v5_237b1
}

define i32 @function_237b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_237b4:
  %v0_237b4 = load i32, i32* @ebp, align 4
  %v1_237b4 = add i32 %v0_237b4, 1
  store i32 %v1_237b4, i32* @ebp, align 4
  %v1_237b5 = load i32, i32* @ecx, align 4
  %v1_237bd = add i32 %v1_237b5, -532313150
  %v2_237bd = inttoptr i32 %v1_237bd to i8*
  %v3_237bd = load i8, i8* %v2_237bd, align 1
  %v5_237bd = trunc i32 %v1_237b5 to i8
  %v6_237bd = add i8 %v3_237bd, %v5_237bd
  store i8 %v6_237bd, i8* %v2_237bd, align 1
  %v0_237c3 = load i32, i32* @ebp, align 4
  %v1_237c3 = add i32 %v0_237c3, -44
  %v2_237c3 = inttoptr i32 %v1_237c3 to i32*
  %v3_237c3 = load i32, i32* %v2_237c3, align 4
  store i32 %v3_237c3, i32* @ecx, align 4
  %v0_237ca = load i32, i32* @edx, align 8
  %v0_237ce = load i32, i32* @eax, align 8
  %v3_237d1 = call i32 @unknown_44ec2(i32 %v0_237ce, i32 %v0_237ca, i32 %v3_237c3)
  %v1_237d6 = xor i32 %v3_237d1, 1
  %v4_237d6 = trunc i32 %v1_237d6 to i8
  %v5_237d9 = icmp eq i8 %v4_237d6, 0
  %v0_237f3 = load i32, i32* @ebp, align 4
  %v1_237f3 = add i32 %v0_237f3, -36
  %v2_237f3 = inttoptr i32 %v1_237f3 to i32*
  %v3_237f3 = load i32, i32* %v2_237f3, align 4
  br i1 %v5_237d9, label %dec_label_pc_237f3, label %dec_label_pc_237dd

dec_label_pc_237dd:                               ; preds = %dec_label_pc_237b4
  %v2_237e0 = add i32 %v0_237f3, -40
  %v3_237e0 = inttoptr i32 %v2_237e0 to i32*
  store i32 %v3_237f3, i32* %v3_237e0, align 4
  %v0_237e3 = load i32, i32* @ebp, align 4
  %v1_237e3 = add i32 %v0_237e3, -36
  %v2_237e3 = inttoptr i32 %v1_237e3 to i32*
  %v3_237e3 = load i32, i32* %v2_237e3, align 4
  %v1_237e9 = call i32 @unknown_4bd9d(i32 %v3_237e3)
  store i32 %v1_237e9, i32* @eax, align 8
  %v1_237ee = load i32, i32* @ebp, align 4
  %v2_237ee = add i32 %v1_237ee, -36
  %v3_237ee = inttoptr i32 %v2_237ee to i32*
  store i32 %v1_237e9, i32* %v3_237ee, align 4
  %v5_237f1 = call i32 @function_23801(i32 %v3_237e3, i32 %v0_237ca, i32 %v3_237c3, i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  ret i32 %v5_237f1

dec_label_pc_237f3:                               ; preds = %dec_label_pc_237b4
  %v1_237f9 = call i32 @unknown_4bdcd(i32 %v3_237f3)
  ret i32 %v1_237f9

; uselistorder directives
  uselistorder i32 %v3_237f3, { 1, 0 }
  uselistorder i32 %v1_237b5, { 1, 0 }
}

define i32 @function_237fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_237fe:
  %v0_237fe = load i32, i32* @eax, align 8
  %v1_237fe = load i32, i32* @ebp, align 4
  %v2_237fe = add i32 %v1_237fe, -36
  %v3_237fe = inttoptr i32 %v2_237fe to i32*
  store i32 %v0_237fe, i32* %v3_237fe, align 4
  %v4_237fe = load i32, i32* @eax, align 8
  ret i32 %v4_237fe
}

define i32 @function_23801(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_23801:
  %v0_23801 = load i32, i32* @ebp, align 4
  %v1_2380c = add i32 %v0_23801, -40
  %v2_2380c = inttoptr i32 %v1_2380c to i32*
  %v3_2380c = load i32, i32* %v2_2380c, align 4
  %v1_23813 = add i32 %v0_23801, -28
  %v2_23813 = inttoptr i32 %v1_23813 to i32*
  %v3_23813 = load i32, i32* %v2_23813, align 4
  %v2_23819 = call i32 @unknown_4692a(i32 %v3_23813, i32 %v3_2380c)
  %v0_2381e = load i32, i32* @ebp, align 4
  %v1_2381e = add i32 %v0_2381e, -28
  %v2_2381e = inttoptr i32 %v1_2381e to i32*
  %v3_2381e = load i32, i32* %v2_2381e, align 4
  store i32 %v3_2381e, i32* @eax, align 8
  %v1_23821 = add i32 %v0_2381e, -12
  %v2_23821 = inttoptr i32 %v1_23821 to i32*
  %v3_23821 = load i32, i32* %v2_23821, align 4
  %v4_23824 = icmp eq i32 %v3_23821, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_23824, label %bb, label %dec_label_pc_2382d

bb:                                               ; preds = %dec_label_pc_23801
  %v1_2382b = call i32 @function_23832()
  br label %dec_label_pc_2382d

dec_label_pc_2382d:                               ; preds = %bb, %dec_label_pc_23801
  %v3_2382b = phi i32 [ %v1_2382b, %bb ], [ %v3_2381e, %dec_label_pc_23801 ]
  ret i32 %v3_2382b

; uselistorder directives
  uselistorder i32 %v0_23801, { 1, 0 }
}

define i32 @function_23830(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23830:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23832() local_unnamed_addr {
dec_label_pc_23832:
  %v0_23833 = load i32, i32* @eax, align 8
  ret i32 %v0_23833
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_23836:
  %v2_23850 = load i8, i8* %arg1, align 1
  %v3_23850 = zext i8 %v2_23850 to i32
  store i32 %v3_23850, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2385f

bb:                                               ; preds = %dec_label_pc_23836
  %v4_2384d = ptrtoint i8* %arg1 to i32
  %v3_2385d = call i32 @function_23864(i32 %v4_2384d)
  br label %dec_label_pc_2385f

dec_label_pc_2385f:                               ; preds = %bb, %dec_label_pc_23836
  %v4_2385d = phi i32 [ %v3_2385d, %bb ], [ %v3_23850, %dec_label_pc_23836 ]
  ret i32 %v4_2385d
}

define i32 @function_23864(i32 %arg1) local_unnamed_addr {
dec_label_pc_23864:
  %v0_23865 = load i32, i32* @eax, align 8
  ret i32 %v0_23865
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23866:
  ret i32 %arg1
}

define i32 @function_23878(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23878:
  %v0_23878 = load i32, i32* @ecx, align 4
  %v1_23878 = add i32 %v0_23878, -1070468027
  %v2_23878 = inttoptr i32 %v1_23878 to i8*
  %v3_23878 = load i8, i8* %v2_23878, align 1
  %v5_23878 = trunc i32 %v0_23878 to i8
  %v6_23878 = add i8 %v3_23878, %v5_23878
  store i8 %v6_23878, i8* %v2_23878, align 1
  %v0_2387e = load i32, i32* @ebp, align 4
  %v1_2387e = add i32 %v0_2387e, -28
  %v2_2387e = inttoptr i32 %v1_2387e to i32*
  %v3_2387e = load i32, i32* %v2_2387e, align 4
  %v1_23884 = call i32 @unknown_4c386(i32 %v3_2387e)
  %v0_23889 = load i32, i32* @ebx, align 8
  %v0_23891 = load i32, i32* @ebp, align 4
  %v1_23891 = add i32 %v0_23891, -28
  %v2_23891 = inttoptr i32 %v1_23891 to i32*
  %v3_23891 = load i32, i32* %v2_23891, align 4
  %sext = mul i32 %v0_23889, 16777216
  %v3_23897 = sdiv i32 %sext, 16777216
  %v4_23897 = call i32 @unknown_4c3c4(i32 %v3_23891, i32 %v1_23884, i32 %v3_23897)
  store i32 %v4_23897, i32* @eax, align 8
  %v0_2389c = load i32, i32* @ebp, align 4
  %v1_2389c = add i32 %v0_2389c, -12
  %v2_2389c = inttoptr i32 %v1_2389c to i32*
  %v3_2389c = load i32, i32* %v2_2389c, align 4
  %v3_2389f = xor i32 %v3_2389c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2389f = icmp eq i32 %v3_2389f, 0
  store i32 %v3_2389f, i32* @edx, align 8
  br i1 %v4_2389f, label %bb, label %dec_label_pc_238a8

bb:                                               ; preds = %dec_label_pc_23878
  %v1_238a6 = call i32 @function_238ad()
  br label %dec_label_pc_238a8

dec_label_pc_238a8:                               ; preds = %bb, %dec_label_pc_23878
  %v3_238a6 = phi i32 [ %v1_238a6, %bb ], [ %v4_23897, %dec_label_pc_23878 ]
  ret i32 %v3_238a6
}

define i32 @function_238ad() local_unnamed_addr {
dec_label_pc_238ad:
  %v0_238b2 = load i32, i32* @eax, align 8
  ret i32 %v0_238b2
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE12assign_valueERKiN4mpl_5bool_ILb0EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_238b4:
  ret i32 %arg1
}

define i32 @function_238c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_238c2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_238c2 = load i32, i32* @eax, align 8
  %v2_238c2 = or i32 %v0_238c2, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_238c2, i32* %eax.global-to-local, align 8
  %v0_238c4 = load i32, i32* @ebp, align 4
  %v1_238c4 = add i32 %v0_238c4, 1
  %v9_238c4 = icmp eq i32 %v1_238c4, 0
  store i32 %v1_238c4, i32* @ebp, align 4
  %v0_238c5 = load i32, i32* @ecx, align 4
  %v1_238c5 = add i32 %v0_238c5, -1
  store i32 %v1_238c5, i32* @ecx, align 4
  %v2_238c5 = icmp eq i32 %v1_238c5, 0
  %v4_238c5 = or i1 %v9_238c4, %v2_238c5
  br i1 %v4_238c5, label %dec_label_pc_238c7, label %dec_label_pc_238d6

dec_label_pc_238c7:                               ; preds = %dec_label_pc_238c2
  %v1_238c9 = add i32 %v2_238c2, -1587159227
  %v2_238c9 = inttoptr i32 %v1_238c9 to i8*
  %v3_238c9 = load i8, i8* %v2_238c9, align 1
  %v5_238c9 = trunc i32 %v1_238c5 to i8
  %v8_238c9 = add i8 %v3_238c9, %v5_238c9
  %v28_238c9 = icmp ult i8 %v8_238c9, %v3_238c9
  store i1 %v28_238c9, i1* %cf.global-to-local, align 1
  store i8 %v8_238c9, i8* %v2_238c9, align 1
  %v0_238cf = load i32, i32* %eax.global-to-local, align 8
  %v1_238cf = trunc i32 %v0_238cf to i8
  %v2_238cf = load i1, i1* %cf.global-to-local, align 1
  %v3_238cf = zext i1 %v2_238cf to i8
  %v4_238cf = add i8 %v3_238cf, %v1_238cf
  %v19_238cf = icmp ule i8 %v4_238cf, %v1_238cf
  %v21_238cf = icmp eq i1 %v2_238cf, %v19_238cf
  store i1 %v21_238cf, i1* %cf.global-to-local, align 1
  %v22_238cf = zext i8 %v4_238cf to i32
  %v24_238cf = and i32 %v0_238cf, -256
  %v25_238cf = or i32 %v22_238cf, %v24_238cf
  store i32 %v25_238cf, i32* %eax.global-to-local, align 8
  %v1_238d1 = inttoptr i32 %v25_238cf to i8*
  %v2_238d1 = load i8, i8* %v1_238d1, align 1
  %v5_238d1 = add i8 %v2_238d1, %v4_238cf
  %v10_238d1 = icmp ult i8 %v5_238d1, %v2_238d1
  store i1 %v10_238d1, i1* %cf.global-to-local, align 1
  store i8 %v5_238d1, i8* %v1_238d1, align 1
  %v0_238d3 = load i32, i32* %eax.global-to-local, align 8
  %v1_238d3 = load i32, i32* @ebp, align 4
  %v2_238d3 = add i32 %v1_238d3, -12
  %v3_238d3 = inttoptr i32 %v2_238d3 to i32*
  store i32 %v0_238d3, i32* %v3_238d3, align 4
  %v0_238d8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_238d6

dec_label_pc_238d6:                               ; preds = %dec_label_pc_238c2, %dec_label_pc_238c7
  %v0_238d8 = phi i32 [ %v1_238c4, %dec_label_pc_238c2 ], [ %v0_238d8.pre, %dec_label_pc_238c7 ]
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v1_238d8 = add i32 %v0_238d8, -28
  %v2_238d8 = inttoptr i32 %v1_238d8 to i32*
  %v3_238d8 = load i32, i32* %v2_238d8, align 4
  store i32 %v3_238d8, i32* %eax.global-to-local, align 8
  %v1_238de = call i32 @unknown_4c44c(i32 %v3_238d8)
  store i32 %v1_238de, i32* %eax.global-to-local, align 8
  %v0_238e3 = load i32, i32* @ebp, align 4
  %v1_238e3 = add i32 %v0_238e3, -32
  %v2_238e3 = inttoptr i32 %v1_238e3 to i32*
  %v3_238e3 = load i32, i32* %v2_238e3, align 4
  %v1_238e6 = inttoptr i32 %v3_238e3 to i32*
  %v2_238e6 = load i32, i32* %v1_238e6, align 4
  %v2_238e8 = inttoptr i32 %v1_238de to i32*
  store i32 %v2_238e6, i32* %v2_238e8, align 4
  %v0_238ea = load i32, i32* @ebp, align 4
  %v1_238ea = add i32 %v0_238ea, -12
  %v2_238ea = inttoptr i32 %v1_238ea to i32*
  %v3_238ea = load i32, i32* %v2_238ea, align 4
  %v3_238ed = xor i32 %v3_238ea, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_238ed = icmp eq i32 %v3_238ed, 0
  store i32 %v3_238ed, i32* @eax, align 8
  br i1 %v4_238ed, label %bb, label %dec_label_pc_238f6

bb:                                               ; preds = %dec_label_pc_238d6
  %v1_238f4 = call i32 @function_238fb()
  store i32 %v1_238f4, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_238f6

dec_label_pc_238f6:                               ; preds = %bb, %dec_label_pc_238d6
  %v2_238f4 = phi i32 [ %v1_238f4, %bb ], [ %v3_238ed, %dec_label_pc_238d6 ]
  ret i32 %v2_238f4

; uselistorder directives
  uselistorder i8 %v2_238d1, { 1, 0 }
  uselistorder i8 %v4_238cf, { 0, 2, 1 }
  uselistorder i8 %v1_238cf, { 1, 0 }
  uselistorder i8 %v3_238c9, { 1, 0 }
  uselistorder i32 %v1_238c5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_238d6, { 1, 0 }
}

define i32 @function_238fb() local_unnamed_addr {
dec_label_pc_238fb:
  %v0_238fc = load i32, i32* @eax, align 8
  ret i32 %v0_238fc
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE9constructERKi() local_unnamed_addr {
dec_label_pc_238fe:
  %eax.global-to-local = alloca i32, align 4
  %v2_238ff = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_238ff
}

define i32 @function_23902() local_unnamed_addr {
dec_label_pc_23902:
  %v0_2390b = load i32, i32* @ebp, align 4
  %v1_2390e = add i32 %v0_2390b, 2
  store i32 %v1_2390e, i32* @ebp, align 4
  %v2_23916 = add i32 %v0_2390b, -10
  %v3_23916 = inttoptr i32 %v2_23916 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_23916, align 4
  %v0_2391b = load i32, i32* @ebp, align 4
  %v1_2391b = add i32 %v0_2391b, -28
  %v2_2391b = inttoptr i32 %v1_2391b to i32*
  %v3_2391b = load i32, i32* %v2_2391b, align 4
  %v1_2391e = add i32 %v3_2391b, 4
  %v1_23924 = call i32 @unknown_4c4e4(i32 %v1_2391e)
  %v1_23939 = icmp eq i32 %v1_23924, 0
  br i1 %v1_23939, label %dec_label_pc_23944, label %dec_label_pc_2393d

dec_label_pc_2393d:                               ; preds = %dec_label_pc_23902
  %v0_2393d = load i32, i32* @ebp, align 4
  %v1_2393d = add i32 %v0_2393d, -32
  %v2_2393d = inttoptr i32 %v1_2393d to i32*
  %v3_2393d = load i32, i32* %v2_2393d, align 4
  %v1_23940 = inttoptr i32 %v3_2393d to i32*
  %v2_23940 = load i32, i32* %v1_23940, align 4
  %v2_23942 = inttoptr i32 %v1_23924 to i32*
  store i32 %v2_23940, i32* %v2_23942, align 4
  br label %dec_label_pc_23944

dec_label_pc_23944:                               ; preds = %dec_label_pc_2393d, %dec_label_pc_23902
  %v0_23944 = load i32, i32* @ebp, align 4
  %v1_23944 = add i32 %v0_23944, -28
  %v2_23944 = inttoptr i32 %v1_23944 to i32*
  %v3_23944 = load i32, i32* %v2_23944, align 4
  %v1_23947 = inttoptr i32 %v3_23944 to i8*
  store i8 1, i8* %v1_23947, align 1
  %v0_2394a = load i32, i32* @ebp, align 4
  %v1_2394a = add i32 %v0_2394a, -12
  %v2_2394a = inttoptr i32 %v1_2394a to i32*
  %v3_2394a = load i32, i32* %v2_2394a, align 4
  %v3_2394d = xor i32 %v3_2394a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2394d = icmp eq i32 %v3_2394d, 0
  store i32 %v3_2394d, i32* @eax, align 8
  br i1 %v4_2394d, label %bb, label %dec_label_pc_23956

bb:                                               ; preds = %dec_label_pc_23944
  %v1_23954 = call i32 @function_2395b()
  br label %dec_label_pc_23956

dec_label_pc_23956:                               ; preds = %bb, %dec_label_pc_23944
  %v2_23954 = phi i32 [ %v1_23954, %bb ], [ %v3_2394d, %dec_label_pc_23944 ]
  ret i32 %v2_23954
}

define i32 @function_2395b() local_unnamed_addr {
dec_label_pc_2395b:
  %v0_2395c = load i32, i32* @eax, align 8
  ret i32 %v0_2395c
}

define i32 @_ZN5boost6detail8function15functor_managerIPFbxEE6manageERKNS1_15function_bufferERS6_NS1_30functor_manager_operation_typeE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2395d:
  ret i32 %arg3
}

define i32 @function_2397e() local_unnamed_addr {
dec_label_pc_2397e:
  %v0_23980 = load i32, i32* @ebp, align 4
  %v1_23980 = add i32 %v0_23980, -36
  %v2_23980 = inttoptr i32 %v1_23980 to i32*
  %v3_23980 = load i32, i32* %v2_23980, align 4
  %v10_23983 = icmp eq i32 %v3_23980, 4
  %v1_23986 = icmp eq i1 %v10_23983, false
  br i1 %v1_23986, label %dec_label_pc_239a1, label %dec_label_pc_23988

dec_label_pc_23988:                               ; preds = %dec_label_pc_2397e
  %v1_23988 = add i32 %v0_23980, -32
  %v2_23988 = inttoptr i32 %v1_23988 to i32*
  %v3_23988 = load i32, i32* %v2_23988, align 4
  %v1_2398b = inttoptr i32 %v3_23988 to i32*
  store i32 ptrtoint (i32* @global_var_34274.2038 to i32), i32* %v1_2398b, align 4
  %v0_23991 = load i32, i32* @ebp, align 4
  %v1_23991 = add i32 %v0_23991, -32
  %v2_23991 = inttoptr i32 %v1_23991 to i32*
  %v3_23991 = load i32, i32* %v2_23991, align 4
  %v1_23994 = add i32 %v3_23991, 4
  %v2_23994 = inttoptr i32 %v1_23994 to i8*
  store i8 0, i8* %v2_23994, align 1
  %v0_23998 = load i32, i32* @ebp, align 4
  %v1_23998 = add i32 %v0_23998, -32
  %v2_23998 = inttoptr i32 %v1_23998 to i32*
  %v3_23998 = load i32, i32* %v2_23998, align 4
  %v1_2399b = add i32 %v3_23998, 5
  %v2_2399b = inttoptr i32 %v1_2399b to i8*
  store i8 0, i8* %v2_2399b, align 1
  br label %dec_label_pc_239bf

dec_label_pc_239a1:                               ; preds = %dec_label_pc_2397e
  %v0_239a1 = load i32, i32* @edx, align 8
  %v3_239a5 = load i32, i32* %v2_23980, align 4
  %v1_239ac = add i32 %v0_23980, -32
  %v2_239ac = inttoptr i32 %v1_239ac to i32*
  %v3_239ac = load i32, i32* %v2_239ac, align 4
  %v1_239b3 = add i32 %v0_23980, -28
  %v2_239b3 = inttoptr i32 %v1_239b3 to i32*
  %v3_239b3 = load i32, i32* %v2_239b3, align 4
  %sext = mul i32 %v0_239a1, 16777216
  %v4_239b9 = sdiv i32 %sext, 16777216
  %v5_239b9 = call i32 @unknown_4c570(i32 %v3_239b3, i32 %v3_239ac, i32 %v3_239a5, i32 %v4_239b9)
  br label %dec_label_pc_239bf

dec_label_pc_239bf:                               ; preds = %dec_label_pc_239a1, %dec_label_pc_23988
  %v0_239bf = load i32, i32* @ebp, align 4
  %v1_239bf = add i32 %v0_239bf, -12
  %v2_239bf = inttoptr i32 %v1_239bf to i32*
  %v3_239bf = load i32, i32* %v2_239bf, align 4
  %v3_239c2 = xor i32 %v3_239bf, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_239c2
}

define i32 @_ZN5boost6detail8function17function_invoker1IPFbxEbxE6invokeERNS1_15function_bufferEx(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_239d2:
  %v2_239f8 = load i32, i32* %arg1, align 4
  store i32 %v2_239f8, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23a1b

bb:                                               ; preds = %dec_label_pc_239d2
  %v3_23a19 = call i32 @function_23a20(i32 %arg2, i32 %arg3)
  br label %dec_label_pc_23a1b

dec_label_pc_23a1b:                               ; preds = %bb, %dec_label_pc_239d2
  %v4_23a19 = phi i32 [ %v3_23a19, %bb ], [ %v2_239f8, %dec_label_pc_239d2 ]
  ret i32 %v4_23a19
}

define i32 @function_23a20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23a20:
  %v0_23a21 = load i32, i32* @eax, align 8
  ret i32 %v0_23a21
}

define i32 @_ZN5boost6detail8function13basic_vtable1IbxE9assign_toIPFbxEEEbT_RNS1_15function_bufferE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23a22:
  %edx.global-to-local = alloca i32, align 4
  %v0_23a45 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_23a45, 16777216
  %v7_23a5d = sdiv i32 %sext, 16777216
  %v8_23a5d = call i32 @unknown_4c68c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_23a5d, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_23a5d, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23a6e

bb:                                               ; preds = %dec_label_pc_23a22
  %v1_23a6c = call i32 @function_23a73()
  br label %dec_label_pc_23a6e

dec_label_pc_23a6e:                               ; preds = %bb, %dec_label_pc_23a22
  %v2_23a6c = phi i32 [ %v1_23a6c, %bb ], [ %v8_23a5d, %dec_label_pc_23a22 ]
  ret i32 %v2_23a6c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23a73() local_unnamed_addr {
dec_label_pc_23a73:
  %v0_23a74 = load i32, i32* @eax, align 8
  ret i32 %v0_23a74
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIFbxEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23a76:
  %stack_var_-24 = alloca i32, align 4
  %v1_23a9f = call i32 @unknown_4c749(i32 %arg2)
  %v2_23aae = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_23aae
}

define i32 @function_23ab6(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ab6:
  %v0_23ab6 = load i32, i32* @ebp, align 4
  %v1_23ab6 = add i32 %v0_23ab6, 1
  store i32 %v1_23ab6, i32* @ebp, align 4
  %v0_23abb = call i32 @unknown_4c7a0()
  %v0_23ac0 = load i32, i32* @ebp, align 4
  %v1_23ac0 = add i32 %v0_23ac0, -12
  %v2_23ac0 = inttoptr i32 %v1_23ac0 to i32*
  %v3_23ac0 = load i32, i32* %v2_23ac0, align 4
  %v3_23ac3 = xor i32 %v3_23ac0, ptrtoint ([3 x i8]* @3 to i32)
  %v4_23ac3 = icmp eq i32 %v3_23ac3, 0
  store i32 %v3_23ac3, i32* @eax, align 8
  br i1 %v4_23ac3, label %bb, label %dec_label_pc_23acc

bb:                                               ; preds = %dec_label_pc_23ab6
  %v1_23aca = call i32 @function_23ad1()
  br label %dec_label_pc_23acc

dec_label_pc_23acc:                               ; preds = %bb, %dec_label_pc_23ab6
  %v2_23aca = phi i32 [ %v1_23aca, %bb ], [ %v3_23ac3, %dec_label_pc_23ab6 ]
  ret i32 %v2_23aca
}

define i32 @function_23ad1() local_unnamed_addr {
dec_label_pc_23ad1:
  %v0_23ad2 = load i32, i32* @eax, align 8
  ret i32 %v0_23ad2
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ad4:
  %v1_23af1 = call i32 @unknown_4c966(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23b02

bb:                                               ; preds = %dec_label_pc_23ad4
  %v1_23b00 = call i32 @function_23b07()
  br label %dec_label_pc_23b02

dec_label_pc_23b02:                               ; preds = %bb, %dec_label_pc_23ad4
  %v2_23b00 = phi i32 [ %v1_23b00, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23ad4 ]
  ret i32 %v2_23b00
}

define i32 @function_23b07() local_unnamed_addr {
dec_label_pc_23b07:
  %v0_23b08 = load i32, i32* @eax, align 8
  ret i32 %v0_23b08
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b0a:
  %v1_23b27 = call i32 @unknown_4ca72(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23b38

bb:                                               ; preds = %dec_label_pc_23b0a
  %v1_23b36 = call i32 @function_23b3d()
  br label %dec_label_pc_23b38

dec_label_pc_23b38:                               ; preds = %bb, %dec_label_pc_23b0a
  %v2_23b36 = phi i32 [ %v1_23b36, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23b0a ]
  ret i32 %v2_23b36
}

define i32 @function_23b3d() local_unnamed_addr {
dec_label_pc_23b3d:
  %v0_23b3e = load i32, i32* @eax, align 8
  ret i32 %v0_23b3e
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b40:
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_23b6b = call i32 @unknown_4c8ba(i32 %arg1, i32 %arg2)
  %v1_23b73 = add i32 %arg2, 8
  %v1_23b79 = add i32 %arg1, 8
  %v2_23b83 = call i32 @unknown_4ca30(i32 %v1_23b79, i32 %v1_23b73)
  %v2_23b88 = ptrtoint i32* %stack_var_-48 to i32
  %v1_23b8e = call i32 @unknown_4cb16(i32 %v2_23b88)
  %v2_23b96 = ptrtoint i32* %stack_var_-44 to i32
  %v2_23ba0 = call i32 @unknown_47dae(i32 %v2_23b96, i32 %arg1)
  %v2_23bae = ptrtoint i32* %stack_var_-40 to i32
  %v2_23bb8 = call i32 @unknown_3fd1e(i32 %v2_23bae, i32 %v1_23b79)
  %v2_23bc6 = ptrtoint i32* %stack_var_-72 to i32
  %v2_23bd0 = call i32 @unknown_4cb4a(i32 %v2_23bc6, i32 %v1_23b73)
  %v3_23bd8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_23bd8, i32* %stack_var_-48, align 4
  %v1_23bde = call i32 @function_23cd3(i32 %v3_23bd8)
  ret i32 %v1_23bde

; uselistorder directives
  uselistorder i32 %v1_23b73, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_23c07() local_unnamed_addr {
dec_label_pc_23c07:
  %eax.global-to-local = alloca i32, align 4
  %v0_23c07 = load i32, i32* %eax.global-to-local, align 8
  %v11_23c07 = and i32 %v0_23c07, -24
  store i32 %v11_23c07, i32* @eax, align 8
  %v0_23c09 = call i32 @function_84023e0c()
  store i32 %v0_23c09, i32* %eax.global-to-local, align 8
  ret i32 %v0_23c09
}

define i32 @function_23c26(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c26:
  %v2_23c26 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23c26 = load i32, i32* @eax, align 8
  %v4_23c26 = trunc i32 %v3_23c26 to i8
  %v5_23c26 = sub i8 %v2_23c26, %v4_23c26
  %v21_23c26 = inttoptr i32 %v3_23c26 to i8*
  store i8 %v5_23c26, i8* %v21_23c26, align 1
  %v0_23c28 = load i32, i32* @ebx, align 8
  %v3_23c28 = load i32, i32* @eax, align 8
  %v4_23c28 = trunc i32 %v3_23c28 to i8
  %v5_23c282 = mul i32 %v3_23c28, 256
  %v1_23c283 = add i32 %v5_23c282, %v0_23c28
  %v22_23c28 = and i32 %v1_23c283, 65280
  %v23_23c28 = and i32 %v0_23c28, -65281
  %v24_23c28 = or i32 %v22_23c28, %v23_23c28
  store i32 %v24_23c28, i32* @ebx, align 8
  %v2_23c2a = add i8 %v4_23c28, 36
  %v11_23c2a = icmp eq i8 %v2_23c2a, 0
  %v16_23c2a = zext i8 %v2_23c2a to i32
  %v18_23c2a = and i32 %v3_23c28, -256
  %v19_23c2a = or i32 %v16_23c2a, %v18_23c2a
  store i32 %v19_23c2a, i32* @eax, align 8
  %v0_23c2c = load i32, i32* @ecx, align 4
  %v2_23c2c = icmp eq i32 %v0_23c2c, 1
  %v4_23c2c = or i1 %v11_23c2a, %v2_23c2c
  br i1 %v4_23c2c, label %dec_label_pc_23c2e, label %bb

bb:                                               ; preds = %dec_label_pc_23c26
  %v6_23c2c = call i32 @function_23c56()
  store i32 %v6_23c2c, i32* @eax, align 8
  br label %dec_label_pc_23c2e

dec_label_pc_23c2e:                               ; preds = %dec_label_pc_23c26, %bb
  %v20_23c2e = phi i32 [ %v19_23c2a, %dec_label_pc_23c26 ], [ %v6_23c2c, %bb ]
  %v1_23c2e = inttoptr i32 %v20_23c2e to i8*
  %v2_23c2e = load i8, i8* %v1_23c2e, align 1
  %v4_23c2e = trunc i32 %v20_23c2e to i8
  %v5_23c2e = add i8 %v2_23c2e, %v4_23c2e
  store i8 %v5_23c2e, i8* %v1_23c2e, align 1
  %v22_23c2e = load i32, i32* @eax, align 8
  ret i32 %v22_23c2e

; uselistorder directives
  uselistorder i32 %v20_23c2e, { 1, 0 }
  uselistorder i32 %v3_23c28, { 1, 0, 2 }
  uselistorder i32 %v0_23c28, { 1, 0 }
  uselistorder i8 36, { 4, 7, 1, 2, 3, 0, 6, 5 }
  uselistorder label %dec_label_pc_23c2e, { 1, 0 }
}

define i32 @function_23c56() local_unnamed_addr {
dec_label_pc_23c56:
  %v3_23c5a = call i32 @unknown_4cc9e(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  %v0_23c62 = load i32, i32* @ebp, align 4
  %v1_23c62 = add i32 %v0_23c62, -44
  %v2_23c62 = inttoptr i32 %v1_23c62 to i32*
  %v3_23c62 = load i32, i32* %v2_23c62, align 4
  %v2_23c65 = add i32 %v0_23c62, -24
  %v3_23c65 = inttoptr i32 %v2_23c65 to i32*
  store i32 %v3_23c62, i32* %v3_23c65, align 4
  %v0_23c68 = load i32, i32* @ebp, align 4
  %v1_23c68 = add i32 %v0_23c68, -24
  %v1_23c6e = call i32 @unknown_4cc5e(i32 %v1_23c68)
  %v0_23c73 = load i32, i32* @ebp, align 4
  %v1_23c73 = add i32 %v0_23c73, -20
  %v1_23c76 = add i32 %v0_23c73, -24
  %v1_23c7d = add i32 %v0_23c73, -64
  %v2_23c7d = inttoptr i32 %v1_23c7d to i32*
  %v3_23c7d = load i32, i32* %v2_23c7d, align 4
  %v3_23c87 = call i32 @unknown_4cc9e(i32 %v1_23c73, i32 %v3_23c7d, i32 %v1_23c76)
  br label %dec_label_pc_23ca7

dec_label_pc_23c91:                               ; preds = %dec_label_pc_23ca7
  %v1_23c91 = add i32 %v0_23c91, -28
  %v1_23c97 = call i32 @unknown_4cd9a(i32 %v1_23c91)
  %v0_23c9c = load i32, i32* @ebp, align 4
  %v1_23c9c = add i32 %v0_23c9c, -40
  %v1_23ca2 = call i32 @unknown_47d74(i32 %v1_23c9c)
  br label %dec_label_pc_23ca7

dec_label_pc_23ca7:                               ; preds = %dec_label_pc_23c91, %dec_label_pc_23c56
  %v0_23ca7 = load i32, i32* @ebp, align 4
  %v1_23ca7 = add i32 %v0_23ca7, -20
  %v1_23cae = add i32 %v0_23ca7, -28
  %v2_23cb4 = call i32 @unknown_4cd5a(i32 %v1_23cae, i32 %v1_23ca7)
  %v4_23cb9 = trunc i32 %v2_23cb4 to i8
  %v5_23cb9 = icmp eq i8 %v4_23cb9, 0
  %v1_23cbb = icmp eq i1 %v5_23cb9, false
  %v0_23c91 = load i32, i32* @ebp, align 4
  br i1 %v1_23cbb, label %dec_label_pc_23c91, label %dec_label_pc_23cbd

dec_label_pc_23cbd:                               ; preds = %dec_label_pc_23ca7
  %v1_23cbd = add i32 %v0_23c91, -44
  %v1_23cc3 = call i32 @unknown_4cc5e(i32 %v1_23cbd)
  %v0_23cc8 = load i32, i32* @ebp, align 4
  %v1_23cc8 = add i32 %v0_23cc8, -36
  %v1_23cce = call i32 @unknown_4cc1e(i32 %v1_23cc8)
  ret i32 %v1_23cce

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4cc5e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4cc9e, { 1, 0 }
}

define i32 @function_23cd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_23cd3:
  %v0_23cd3 = load i32, i32* @ebp, align 4
  %v1_23cd3 = add i32 %v0_23cd3, -64
  %v2_23cd3 = inttoptr i32 %v1_23cd3 to i32*
  %v3_23cd3 = load i32, i32* %v2_23cd3, align 4
  %v1_23cd6 = add i32 %v3_23cd3, 8
  %v1_23cd9 = add i32 %v0_23cd3, -32
  %v2_23ce3 = call i32 @unknown_4cb94(i32 %v1_23cd9, i32 %v1_23cd6)
  %v0_23ceb = load i32, i32* @ebp, align 4
  %v1_23ceb = add i32 %v0_23ceb, -32
  %v1_23cf2 = add i32 %v0_23ceb, -44
  %v2_23cf8 = call i32 @unknown_4cbde(i32 %v1_23cf2, i32 %v1_23ceb)
  %v0_23d05 = call i32 @function_23d30()
  ret i32 %v0_23d05
}

define i32 @function_23d07() local_unnamed_addr {
dec_label_pc_23d07:
  %eax.global-to-local = alloca i32, align 4
  %v0_23d07 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_23d07, i32* @ebx, align 8
  %v0_23d09 = load i32, i32* @ebp, align 4
  %v1_23d09 = add i32 %v0_23d09, -60
  %v2_23d09 = inttoptr i32 %v1_23d09 to i32*
  %v3_23d09 = load i32, i32* %v2_23d09, align 4
  %v1_23d0c = add i32 %v3_23d09, 8
  store i32 %v1_23d0c, i32* %eax.global-to-local, align 8
  %v1_23d12 = call i32 @unknown_4764a(i32 %v1_23d0c)
  store i32 %v1_23d12, i32* %eax.global-to-local, align 8
  %v0_23d17 = call i32 @function_23d1b()
  store i32 %v0_23d17, i32* %eax.global-to-local, align 8
  ret i32 %v0_23d17
}

define i32 @function_23d19() local_unnamed_addr {
dec_label_pc_23d19:
  %eax.global-to-local = alloca i32, align 4
  %v0_23d19 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23d19
}

define i32 @function_23d1b() local_unnamed_addr {
dec_label_pc_23d1b:
  %v0_23d1b = load i32, i32* @ebp, align 4
  %v1_23d1b = add i32 %v0_23d1b, -60
  %v2_23d1b = inttoptr i32 %v1_23d1b to i32*
  %v3_23d1b = load i32, i32* %v2_23d1b, align 4
  %v1_23d21 = call i32 @unknown_47614(i32 %v3_23d1b)
  %v0_23d26 = load i32, i32* @ebx, align 8
  ret i32 %v0_23d26
}

define i32 @function_23d30() local_unnamed_addr {
dec_label_pc_23d30:
  %v0_23d30 = load i32, i32* @ebp, align 4
  %v1_23d30 = add i32 %v0_23d30, -12
  %v2_23d30 = inttoptr i32 %v1_23d30 to i32*
  %v3_23d30 = load i32, i32* %v2_23d30, align 4
  %v3_23d33 = xor i32 %v3_23d30, ptrtoint ([3 x i8]* @3 to i32)
  %v4_23d33 = icmp eq i32 %v3_23d33, 0
  store i32 %v3_23d33, i32* @eax, align 8
  br i1 %v4_23d33, label %bb, label %dec_label_pc_23d3c

bb:                                               ; preds = %dec_label_pc_23d30
  %v1_23d3a = call i32 @function_23d41()
  br label %dec_label_pc_23d3c

dec_label_pc_23d3c:                               ; preds = %bb, %dec_label_pc_23d30
  %v2_23d3a = phi i32 [ %v1_23d3a, %bb ], [ %v3_23d33, %dec_label_pc_23d30 ]
  ret i32 %v2_23d3a
}

define i32 @function_23d41() local_unnamed_addr {
dec_label_pc_23d41:
  %v0_23d45 = load i32, i32* @eax, align 8
  ret i32 %v0_23d45
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEEEC1ISK_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d46:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_23d6e = add i32 %tmp103, 4
  %v2_23d7b = call i32 @unknown_4cfda(i32 %v1_23d6e, i32 %arg2)
  ret i32 %tmp103

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_23d94(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d94:
  %v0_23d94 = call i32 @function_2628b()
  %v0_23d99 = load i32, i32* @ebp, align 4
  %v1_23d99 = add i32 %v0_23d99, -12
  %v2_23d99 = inttoptr i32 %v1_23d99 to i32*
  %v3_23d99 = load i32, i32* %v2_23d99, align 4
  %v3_23d9c = xor i32 %v3_23d99, ptrtoint ([3 x i8]* @3 to i32)
  %v4_23d9c = icmp eq i32 %v3_23d9c, 0
  store i32 %v3_23d9c, i32* @eax, align 8
  br i1 %v4_23d9c, label %bb, label %dec_label_pc_23da5

bb:                                               ; preds = %dec_label_pc_23d94
  %v2_23da3 = call i32 @function_23daa(i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_23da5

dec_label_pc_23da5:                               ; preds = %bb, %dec_label_pc_23d94
  %v3_23da3 = phi i32 [ %v2_23da3, %bb ], [ %v3_23d9c, %dec_label_pc_23d94 ]
  ret i32 %v3_23da3
}

define i32 @function_23da8(i32 %arg1) local_unnamed_addr {
dec_label_pc_23da8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_23daa(i32 %arg1) local_unnamed_addr {
dec_label_pc_23daa:
  %v0_23dab = load i32, i32* @eax, align 8
  ret i32 %v0_23dab
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEC1ISI_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23dac:
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %arg2
}

define i32 @function_23dde(i32 %arg1) local_unnamed_addr {
dec_label_pc_23dde:
  %v0_23dde = load i32, i32* @edx, align 8
  %v1_23de1 = call i32 @unknown_4d0cc(i32 %v0_23dde)
  %v0_23de6 = load i32, i32* @ebp, align 4
  %v1_23de6 = add i32 %v0_23de6, -32
  %v2_23de6 = inttoptr i32 %v1_23de6 to i32*
  %v3_23de6 = load i32, i32* %v2_23de6, align 4
  %v1_23df4 = add i32 %v0_23de6, -28
  %v2_23df4 = inttoptr i32 %v1_23df4 to i32*
  %v3_23df4 = load i32, i32* %v2_23df4, align 4
  store i32 %v3_23df4, i32* @eax, align 8
  %v3_23dfa = call i32 @function_262f1(i32 %v3_23df4, i32 %v3_23de6, i32 %v3_23de6)
  %v0_23dff = load i32, i32* @ebp, align 4
  %v1_23dff = add i32 %v0_23dff, -12
  %v2_23dff = inttoptr i32 %v1_23dff to i32*
  %v3_23dff = load i32, i32* %v2_23dff, align 4
  %v3_23e02 = xor i32 %v3_23dff, ptrtoint ([3 x i8]* @3 to i32)
  %v4_23e02 = icmp eq i32 %v3_23e02, 0
  store i32 %v3_23e02, i32* @eax, align 8
  br i1 %v4_23e02, label %bb, label %dec_label_pc_23e0b

bb:                                               ; preds = %dec_label_pc_23dde
  %v1_23e09 = call i32 @function_23e10()
  br label %dec_label_pc_23e0b

dec_label_pc_23e0b:                               ; preds = %bb, %dec_label_pc_23dde
  %v2_23e09 = phi i32 [ %v1_23e09, %bb ], [ %v3_23e02, %dec_label_pc_23dde ]
  ret i32 %v2_23e09

; uselistorder directives
  uselistorder i32 %v3_23de6, { 1, 0 }
}

define i32 @function_23e10() local_unnamed_addr {
dec_label_pc_23e10:
  %v0_23e11 = load i32, i32* @eax, align 8
  ret i32 %v0_23e11
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEE4swapERSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e12:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_23e2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e2a:
  %v0_23e2a = load i32, i32* @eax, align 8
  %v1_23e2a = load i32, i32* @ebp, align 4
  %v2_23e2a = add i32 %v1_23e2a, -12
  %v3_23e2a = inttoptr i32 %v2_23e2a to i32*
  store i32 %v0_23e2a, i32* %v3_23e2a, align 4
  %v0_23e2f = load i32, i32* @ebp, align 4
  %v1_23e2f = add i32 %v0_23e2f, -32
  %v2_23e2f = inttoptr i32 %v1_23e2f to i32*
  %v3_23e2f = load i32, i32* %v2_23e2f, align 4
  %v1_23e32 = add i32 %v0_23e2f, -28
  %v2_23e32 = inttoptr i32 %v1_23e32 to i32*
  %v3_23e32 = load i32, i32* %v2_23e32, align 4
  %v2_23e3c = call i32 @unknown_4d1bd(i32 %v3_23e32, i32 %v3_23e2f)
  %v0_23e41 = load i32, i32* @ebp, align 4
  %v1_23e41 = add i32 %v0_23e41, -32
  %v2_23e41 = inttoptr i32 %v1_23e41 to i32*
  %v3_23e41 = load i32, i32* %v2_23e41, align 4
  %v1_23e44 = add i32 %v3_23e41, 4
  store i32 %v1_23e44, i32* @edx, align 8
  %v1_23e47 = add i32 %v0_23e41, -28
  %v2_23e47 = inttoptr i32 %v1_23e47 to i32*
  %v3_23e47 = load i32, i32* %v2_23e47, align 4
  %v1_23e4a = add i32 %v3_23e47, 4
  store i32 %v1_23e4a, i32* @eax, align 8
  %v2_23e54 = call i32 @function_26082(i32 %v1_23e4a, i32 %v1_23e44)
  %v0_23e59 = load i32, i32* @ebp, align 4
  %v1_23e59 = add i32 %v0_23e59, -12
  %v2_23e59 = inttoptr i32 %v1_23e59 to i32*
  %v3_23e59 = load i32, i32* %v2_23e59, align 4
  ret i32 %v3_23e59
}

define i32 @function_23e60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e60:
  %v2_23e60 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_23e60 = load i32, i32* @eax, align 8
  %v4_23e60 = trunc i32 %v3_23e60 to i8
  %v5_23e60 = add i8 %v4_23e60, %v2_23e60
  %v21_23e60 = inttoptr i32 %v3_23e60 to i8*
  store i8 %v5_23e60, i8* %v21_23e60, align 1
  %v0_23e62 = load i32, i32* @ebp, align 4
  %v1_23e62 = load i32, i32* @eax, align 8
  %v3_23e62 = add i32 %v0_23e62, -24
  %v4_23e62 = add i32 %v3_23e62, %v1_23e62
  %v5_23e62 = inttoptr i32 %v4_23e62 to i8*
  %v6_23e62 = load i8, i8* %v5_23e62, align 1
  %v7_23e62 = load i32, i32* @edx, align 8
  %v8_23e62 = udiv i32 %v7_23e62, 256
  %v9_23e62 = trunc i32 %v8_23e62 to i8
  %v10_23e62 = add i8 %v9_23e62, %v6_23e62
  store i8 %v10_23e62, i8* %v5_23e62, align 1
  %v31_23e62 = load i32, i32* @eax, align 8
  ret i32 %v31_23e62
}

define i32 @function_23e69() local_unnamed_addr {
dec_label_pc_23e69:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_23e69 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23e69 = add i32 %v0_23e69, -1
  store i32 %v1_23e69, i32* %ecx.global-to-local, align 4
  %v0_23e6b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_23e6b
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_23e6c:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23e98

bb:                                               ; preds = %dec_label_pc_23e6c
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_23e96 = call i32 @function_23e9d(i32 %tmp102)
  br label %dec_label_pc_23e98

dec_label_pc_23e98:                               ; preds = %bb, %dec_label_pc_23e6c
  %v3_23e96 = phi i32 [ %v2_23e96, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_23e6c ]
  ret i32 %v3_23e96

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23e9d(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e9d:
  %v0_23e9e = load i32, i32* @eax, align 8
  ret i32 %v0_23e9e
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23ea0:
  ret i32 %arg1
}

define i32 @function_23ecc(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ecc:
  %v0_23ecc = load i32, i32* @ebp, align 4
  %v1_23ecc = add i32 %v0_23ecc, 1
  store i32 %v1_23ecc, i32* @ebp, align 4
  %v1_23ed2 = add i32 %v0_23ecc, -27
  %v2_23ed2 = inttoptr i32 %v1_23ed2 to i32*
  %v3_23ed2 = load i32, i32* %v2_23ed2, align 4
  store i32 %v3_23ed2, i32* @eax, align 8
  %v1_23ed5 = add i32 %v0_23ecc, -11
  %v2_23ed5 = inttoptr i32 %v1_23ed5 to i32*
  %v3_23ed5 = load i32, i32* %v2_23ed5, align 4
  %v4_23ed8 = icmp eq i32 %v3_23ed5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_23ed8, label %bb, label %dec_label_pc_23ee1

bb:                                               ; preds = %dec_label_pc_23ecc
  %v1_23edf = call i32 @function_23ee6()
  br label %dec_label_pc_23ee1

dec_label_pc_23ee1:                               ; preds = %bb, %dec_label_pc_23ecc
  %v2_23edf = phi i32 [ %v1_23edf, %bb ], [ %v3_23ed2, %dec_label_pc_23ecc ]
  ret i32 %v2_23edf
}

define i32 @function_23ee6() local_unnamed_addr {
dec_label_pc_23ee6:
  %v0_23ee7 = load i32, i32* @eax, align 8
  ret i32 %v0_23ee7
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEneERKSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23eea:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_23f02(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f02:
  %v0_23f02 = load i32, i32* @eax, align 8
  %v1_23f02 = load i32, i32* @ebp, align 4
  %v2_23f02 = add i32 %v1_23f02, -12
  %v3_23f02 = inttoptr i32 %v2_23f02 to i32*
  store i32 %v0_23f02, i32* %v3_23f02, align 4
  %v0_23f07 = load i32, i32* @ebp, align 4
  %v1_23f07 = add i32 %v0_23f07, -28
  %v2_23f07 = inttoptr i32 %v1_23f07 to i32*
  %v3_23f07 = load i32, i32* %v2_23f07, align 4
  %v1_23f0a = inttoptr i32 %v3_23f07 to i32*
  %v2_23f0a = load i32, i32* %v1_23f0a, align 4
  %v1_23f0c = add i32 %v0_23f07, -32
  %v2_23f0c = inttoptr i32 %v1_23f0c to i32*
  %v3_23f0c = load i32, i32* %v2_23f0c, align 4
  %v1_23f0f = inttoptr i32 %v3_23f0c to i32*
  %v2_23f0f = load i32, i32* %v1_23f0f, align 4
  %v12_23f11 = icmp eq i32 %v2_23f0a, %v2_23f0f
  %v1_23f13 = icmp eq i1 %v12_23f11, false
  %v2_23f13 = zext i1 %v1_23f13 to i32
  %v4_23f13 = and i32 %v2_23f0f, -256
  %v5_23f13 = or i32 %v2_23f13, %v4_23f13
  store i32 %v5_23f13, i32* @eax, align 8
  %v1_23f16 = add i32 %v0_23f07, -12
  %v2_23f16 = inttoptr i32 %v1_23f16 to i32*
  %v3_23f16 = load i32, i32* %v2_23f16, align 4
  %v4_23f19 = icmp eq i32 %v3_23f16, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_23f19, label %bb, label %dec_label_pc_23f22

bb:                                               ; preds = %dec_label_pc_23f02
  %v1_23f20 = call i32 @function_23f27()
  br label %dec_label_pc_23f22

dec_label_pc_23f22:                               ; preds = %bb, %dec_label_pc_23f02
  %v2_23f20 = phi i32 [ %v1_23f20, %bb ], [ %v5_23f13, %dec_label_pc_23f02 ]
  ret i32 %v2_23f20

; uselistorder directives
  uselistorder i32 %v2_23f0f, { 1, 0 }
}

define i32 @function_23f27() local_unnamed_addr {
dec_label_pc_23f27:
  %v0_23f28 = load i32, i32* @eax, align 8
  ret i32 %v0_23f28
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23f2a:
  %v2_23f44 = load i32, i32* %arg1, align 4
  %v1_23f46 = add i32 %v2_23f44, 8
  store i32 %v1_23f46, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23f55

bb:                                               ; preds = %dec_label_pc_23f2a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_23f53 = call i32 @function_23f5a(i32 %tmp100)
  br label %dec_label_pc_23f55

dec_label_pc_23f55:                               ; preds = %bb, %dec_label_pc_23f2a
  %v3_23f53 = phi i32 [ %v2_23f53, %bb ], [ %v1_23f46, %dec_label_pc_23f2a ]
  ret i32 %v3_23f53

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23f5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_23f5a:
  %v0_23f5b = load i32, i32* @eax, align 8
  ret i32 %v0_23f5b
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_23f5c:
  %v2_23f76 = load i32, i32* %arg1, align 4
  %v1_23f78 = icmp eq i32 %v2_23f76, 0
  %v1_23f7a = icmp eq i1 %v1_23f78, false
  br i1 %v1_23f7a, label %dec_label_pc_23fa0, label %dec_label_pc_23f7c

dec_label_pc_23f7c:                               ; preds = %dec_label_pc_23f5c
  br label %dec_label_pc_23fa0

dec_label_pc_23fa0:                               ; preds = %dec_label_pc_23f7c, %dec_label_pc_23f5c
  %v2_23fa3 = load i32, i32* %arg1, align 4
  store i32 %v2_23fa3, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_23fb1

bb:                                               ; preds = %dec_label_pc_23fa0
  %v1_23faf = call i32 @function_23fb6()
  br label %dec_label_pc_23fb1

dec_label_pc_23fb1:                               ; preds = %bb, %dec_label_pc_23fa0
  %v2_23faf = phi i32 [ %v1_23faf, %bb ], [ %v2_23fa3, %dec_label_pc_23fa0 ]
  ret i32 %v2_23faf
}

define i32 @function_23fb6() local_unnamed_addr {
dec_label_pc_23fb6:
  %v0_23fb7 = load i32, i32* @eax, align 8
  ret i32 %v0_23fb7
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE19nolock_slot_expiredEv() local_unnamed_addr {
dec_label_pc_23fb8:
  %eax.global-to-local = alloca i32, align 4
  %v5_23fb8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_23fb8
}

define i32 @function_23fba(i32 %arg1) local_unnamed_addr {
dec_label_pc_23fba:
  %v1_23fca = load i32, i32* @ebp, align 4
  %v2_23fca = add i32 %v1_23fca, -12
  %v3_23fca = inttoptr i32 %v2_23fca to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_23fca, align 4
  %v0_23fcf = load i32, i32* @ebp, align 4
  %v1_23fcf = add i32 %v0_23fcf, -28
  %v2_23fcf = inttoptr i32 %v1_23fcf to i32*
  %v3_23fcf = load i32, i32* %v2_23fcf, align 4
  %v1_23fd2 = add i32 %v3_23fcf, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_23fd2, i32* @eax, align 8
  %v1_23fd8 = call i32 @function_32adc(i32 %v1_23fd2)
  %v1_23fdd = trunc i32 %v1_23fd8 to i8
  %v2_23fdd = load i32, i32* @ebp, align 4
  %v3_23fdd = add i32 %v2_23fdd, -13
  %v4_23fdd = inttoptr i32 %v3_23fdd to i8*
  store i8 %v1_23fdd, i8* %v4_23fdd, align 1
  %v0_23fe0 = load i32, i32* @ebp, align 4
  %v1_23fe0 = add i32 %v0_23fe0, -13
  %v2_23fe0 = inttoptr i32 %v1_23fe0 to i8*
  %v3_23fe0 = load i8, i8* %v2_23fe0, align 1
  %v10_23fe0 = icmp eq i8 %v3_23fe0, 0
  br i1 %v10_23fe0, label %dec_label_pc_23fed, label %dec_label_pc_23fe6

dec_label_pc_23fe6:                               ; preds = %dec_label_pc_23fba
  %v1_23fe6 = add i32 %v0_23fe0, -28
  %v2_23fe6 = inttoptr i32 %v1_23fe6 to i32*
  %v3_23fe6 = load i32, i32* %v2_23fe6, align 4
  %v1_23fe9 = add i32 %v3_23fe6, 4
  %v2_23fe9 = inttoptr i32 %v1_23fe9 to i8*
  store i8 0, i8* %v2_23fe9, align 1
  %v0_23fed.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_23fed

dec_label_pc_23fed:                               ; preds = %dec_label_pc_23fe6, %dec_label_pc_23fba
  %v0_23fed = phi i32 [ %v0_23fed.pre, %dec_label_pc_23fe6 ], [ %v0_23fe0, %dec_label_pc_23fba ]
  %v1_23fed = add i32 %v0_23fed, -13
  %v2_23fed = inttoptr i32 %v1_23fed to i8*
  %v3_23fed = load i8, i8* %v2_23fed, align 1
  %v4_23fed = zext i8 %v3_23fed to i32
  store i32 %v4_23fed, i32* @eax, align 8
  %v1_23ff1 = add i32 %v0_23fed, -12
  %v2_23ff1 = inttoptr i32 %v1_23ff1 to i32*
  %v3_23ff1 = load i32, i32* %v2_23ff1, align 4
  %v4_23ff4 = icmp eq i32 %v3_23ff1, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_23ff4, label %bb, label %dec_label_pc_23ffd

bb:                                               ; preds = %dec_label_pc_23fed
  %v1_23ffb = call i32 @function_24002()
  br label %dec_label_pc_23ffd

dec_label_pc_23ffd:                               ; preds = %bb, %dec_label_pc_23fed
  %v2_23ffb = phi i32 [ %v1_23ffb, %bb ], [ %v4_23fed, %dec_label_pc_23fed ]
  ret i32 %v2_23ffb

; uselistorder directives
  uselistorder i32 %v0_23fed, { 1, 0 }
}

define i32 @function_23fff() local_unnamed_addr {
dec_label_pc_23fff:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24002() local_unnamed_addr {
dec_label_pc_24002:
  %v0_24003 = load i32, i32* @eax, align 8
  ret i32 %v0_24003
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24004:
  %v1_2401e = add i32 %arg1, 68
  store i32 %v1_2401e, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2402d

bb:                                               ; preds = %dec_label_pc_24004
  %v2_2402b = call i32 @function_24032(i32 %arg1)
  br label %dec_label_pc_2402d

dec_label_pc_2402d:                               ; preds = %bb, %dec_label_pc_24004
  %v3_2402b = phi i32 [ %v2_2402b, %bb ], [ %v1_2401e, %dec_label_pc_24004 ]
  ret i32 %v3_2402b
}

define i32 @function_24032(i32 %arg1) local_unnamed_addr {
dec_label_pc_24032:
  %v0_24033 = load i32, i32* @eax, align 8
  ret i32 %v0_24033
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24034:
  ret i32 %arg2
}

define i32 @function_24044(i32 %arg1) local_unnamed_addr {
dec_label_pc_24044:
  %v0_24044 = load i32, i32* @ebp, align 4
  %v1_24044 = add i32 %v0_24044, 1
  store i32 %v1_24044, i32* @ebp, align 4
  %v0_24045 = load i32, i32* @ebx, align 8
  %v1_24045 = add i32 %v0_24045, 1166610501
  %v2_24045 = inttoptr i32 %v1_24045 to i8*
  %v3_24045 = load i8, i8* %v2_24045, align 1
  %v4_24045 = udiv i8 %v3_24045, 2
  %v5_24045 = shl i8 %v3_24045, 7
  %v6_24045 = or i8 %v4_24045, %v5_24045
  store i8 %v6_24045, i8* %v2_24045, align 1
  %v0_2404c = load i32, i32* @ebp, align 4
  %v1_2404c = add i32 %v0_2404c, 20
  %v2_2404c = inttoptr i32 %v1_2404c to i32*
  %v3_2404c = load i32, i32* %v2_2404c, align 4
  %v2_2404f = add i32 %v0_2404c, -56
  %v3_2404f = inttoptr i32 %v2_2404f to i32*
  store i32 %v3_2404c, i32* %v3_2404f, align 4
  %v1_24058 = load i32, i32* @ebp, align 4
  %v2_24058 = add i32 %v1_24058, -12
  %v3_24058 = inttoptr i32 %v2_24058 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_24058, align 4
  %v0_2405d = load i32, i32* @ebp, align 4
  %v1_2405d = add i32 %v0_2405d, -48
  %v2_2405d = inttoptr i32 %v1_2405d to i32*
  %v3_2405d = load i32, i32* %v2_2405d, align 4
  %v1_24060 = add i32 %v0_2405d, -32
  %v2_2406a = call i32 @unknown_4859e(i32 %v1_24060, i32 %v3_2405d)
  ret i32 %v2_2406a

; uselistorder directives
  uselistorder i8 %v3_24045, { 1, 0 }
  uselistorder i32 20, { 6, 0, 1, 2, 3, 5, 4 }
}

define i32 @function_24071(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24071:
  %v0_24071 = load i32, i32* @eax, align 8
  %v2_24071 = add i32 %v0_24071, 141
  %v16_24071 = urem i32 %v2_24071, 256
  %v18_24071 = and i32 %v0_24071, -256
  %v19_24071 = or i32 %v16_24071, %v18_24071
  store i32 %v19_24071, i32* @eax, align 8
  %v0_24073 = load i32, i32* @ebp, align 4
  %v1_24073 = add i32 %v0_24073, 1
  %v9_24073 = icmp eq i32 %v1_24073, 0
  store i32 %v1_24073, i32* @ebp, align 4
  %v0_24074 = load i32, i32* @ecx, align 4
  %v2_24074 = icmp eq i32 %v0_24074, 1
  %v4_24074 = or i1 %v9_24073, %v2_24074
  br i1 %v4_24074, label %dec_label_pc_24076, label %bb

bb:                                               ; preds = %dec_label_pc_24071
  %v6_24074 = call i32 @function_23fff()
  %v0_24079.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24076

dec_label_pc_24076:                               ; preds = %dec_label_pc_24071, %bb
  %v0_24079 = phi i32 [ %v1_24073, %dec_label_pc_24071 ], [ %v0_24079.pre, %bb ]
  %v1_24079 = add i32 %v0_24079, -56
  %v2_24079 = inttoptr i32 %v1_24079 to i32*
  %v3_24079 = load i32, i32* %v2_24079, align 4
  %v2_2407f = call i32 @unknown_47f1e(i32 %v3_24079)
  %v4_24084 = trunc i32 %v2_2407f to i8
  %v5_24084 = icmp eq i8 %v4_24084, 0
  %v1_24086 = icmp eq i1 %v5_24084, false
  br i1 %v1_24086, label %bb15, label %dec_label_pc_24088

bb15:                                             ; preds = %dec_label_pc_24076
  %v2_24086 = call i32 @function_240ac()
  br label %dec_label_pc_24088

dec_label_pc_24088:                               ; preds = %bb15, %dec_label_pc_24076
  %v3_240a0 = phi i32 [ %v2_24086, %bb15 ], [ %v2_2407f, %dec_label_pc_24076 ]
  ret i32 %v3_240a0

; uselistorder directives
  uselistorder i32 %v0_24071, { 1, 0 }
  uselistorder label %dec_label_pc_24076, { 1, 0 }
}

define i32 @function_2409a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2409a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_240ac() local_unnamed_addr {
dec_label_pc_240ac:
  %v0_240ac = load i32, i32* @ebp, align 4
  %v1_240ac = add i32 %v0_240ac, -48
  %v2_240ac = inttoptr i32 %v1_240ac to i32*
  %v3_240ac = load i32, i32* %v2_240ac, align 4
  %v1_240af = add i32 %v3_240ac, 8
  %v1_240b2 = add i32 %v0_240ac, -28
  %v1_240b5 = add i32 %v0_240ac, -52
  %v2_240b5 = inttoptr i32 %v1_240b5 to i32*
  %v3_240b5 = load i32, i32* %v2_240b5, align 4
  %v4_240c3 = call i32 @unknown_4025c(i32 %v1_240b2, i32 %v1_240af, i32 %v3_240b5)
  %v0_240cb = load i32, i32* @ebp, align 4
  %v1_240cb = add i32 %v0_240cb, -48
  %v2_240cb = inttoptr i32 %v1_240cb to i32*
  %v3_240cb = load i32, i32* %v2_240cb, align 4
  %v1_240ce = add i32 %v3_240cb, 8
  %v1_240d1 = add i32 %v0_240cb, -24
  %v3_240db = call i32 @unknown_3ff4e(i32 %v1_240d1, i32 %v1_240ce)
  %v0_240e3 = load i32, i32* @ebp, align 4
  %v1_240e3 = add i32 %v0_240e3, -24
  %v1_240ea = add i32 %v0_240e3, -28
  %v4_240f0 = call i32 @unknown_43fea(i32 %v1_240ea, i32 %v1_240e3)
  %v4_240f5 = trunc i32 %v4_240f0 to i8
  %v5_240f5 = icmp eq i8 %v4_240f5, 0
  %v1_240f7 = icmp eq i1 %v5_240f5, false
  br i1 %v1_240f7, label %bb, label %dec_label_pc_240f9

bb:                                               ; preds = %dec_label_pc_240ac
  %v2_240f7 = call i32 @function_2411d()
  br label %dec_label_pc_240f9

dec_label_pc_240f9:                               ; preds = %bb, %dec_label_pc_240ac
  %v3_24111 = phi i32 [ %v2_240f7, %bb ], [ %v4_240f0, %dec_label_pc_240ac ]
  ret i32 %v3_24111

; uselistorder directives
  uselistorder i32 %v0_240ac, { 1, 0, 2 }
}

define i32 @function_2411d() local_unnamed_addr {
dec_label_pc_2411d:
  %v0_2411d = load i32, i32* @ebp, align 4
  %v1_2411d = add i32 %v0_2411d, -28
  %v2_24123 = call i32 @unknown_43fb0(i32 %v1_2411d)
  %v0_24128 = load i32, i32* @ebp, align 4
  %v1_24128 = add i32 %v0_24128, -52
  %v2_24128 = inttoptr i32 %v1_24128 to i32*
  %v3_24128 = load i32, i32* %v2_24128, align 4
  %v1_24133 = add i32 %v0_24128, -48
  %v2_24133 = inttoptr i32 %v1_24133 to i32*
  %v3_24133 = load i32, i32* %v2_24133, align 4
  %v5_24139 = call i32 @unknown_43f26(i32 %v3_24133, i32 %v2_24123, i32 %v3_24128)
  %v4_2413e = trunc i32 %v5_24139 to i8
  %v5_2413e = icmp eq i8 %v4_2413e, 0
  %v1_24140 = icmp eq i1 %v5_2413e, false
  br i1 %v1_24140, label %bb, label %dec_label_pc_24142

bb:                                               ; preds = %dec_label_pc_2411d
  %v2_24140 = call i32 @function_24166()
  br label %dec_label_pc_24142

dec_label_pc_24142:                               ; preds = %bb, %dec_label_pc_2411d
  %v3_2415a = phi i32 [ %v2_24140, %bb ], [ %v5_24139, %dec_label_pc_2411d ]
  ret i32 %v3_2415a
}

define i32 @function_24166() local_unnamed_addr {
dec_label_pc_24166:
  %v0_24166 = load i32, i32* @ebp, align 4
  %v1_24166 = add i32 %v0_24166, -28
  %v1_2416c = call i32 @unknown_43fb0(i32 %v1_24166)
  %v1_24171 = add i32 %v1_2416c, 12
  %v0_24174 = load i32, i32* @ebp, align 4
  %v1_24174 = add i32 %v0_24174, -56
  %v2_24174 = inttoptr i32 %v1_24174 to i32*
  %v3_24174 = load i32, i32* %v2_24174, align 4
  %v2_2417e = call i32 @unknown_482ec(i32 %v1_24171, i32 %v3_24174)
  %v4_24183 = trunc i32 %v2_2417e to i8
  %v5_24183 = icmp eq i8 %v4_24183, 0
  br i1 %v5_24183, label %bb, label %dec_label_pc_24187

bb:                                               ; preds = %dec_label_pc_24166
  %v1_24185 = call i32 @function_241fd()
  br label %dec_label_pc_24187

dec_label_pc_24187:                               ; preds = %bb, %dec_label_pc_24166
  %v0_24187 = load i32, i32* @ebp, align 4
  %v1_24187 = add i32 %v0_24187, -56
  %v2_24187 = inttoptr i32 %v1_24187 to i32*
  %v3_24187 = load i32, i32* %v2_24187, align 4
  %v1_2418a = inttoptr i32 %v3_24187 to i32*
  %v2_2418a = load i32, i32* %v1_2418a, align 4
  %v2_2418c = add i32 %v0_24187, -20
  %v3_2418c = inttoptr i32 %v2_2418c to i32*
  store i32 %v2_2418a, i32* %v3_2418c, align 4
  %v0_2418f = load i32, i32* @ebp, align 4
  %v1_2418f = add i32 %v0_2418f, -20
  %v1_24195 = call i32 @unknown_48268(i32 %v1_2418f)
  %v0_2419a = load i32, i32* @ebp, align 4
  %v1_2419a = add i32 %v0_2419a, -16
  %v1_2419d = add i32 %v0_2419a, -52
  %v2_2419d = inttoptr i32 %v1_2419d to i32*
  %v3_2419d = load i32, i32* %v2_2419d, align 4
  %v1_241a4 = add i32 %v0_2419a, -48
  %v2_241a4 = inttoptr i32 %v1_241a4 to i32*
  %v3_241a4 = load i32, i32* %v2_241a4, align 4
  %v3_241ae = call i32 @unknown_4d42a(i32 %v1_2419a, i32 %v3_241a4, i32 %v3_2419d)
  %v0_241b6 = load i32, i32* @ebp, align 4
  %v1_241bd = add i32 %v0_241b6, -20
  %v1_241c3 = call i32 @unknown_47f1e(i32 %v1_241bd)
  %v4_241c8 = trunc i32 %v1_241c3 to i8
  %v5_241c8 = icmp eq i8 %v4_241c8, 0
  br i1 %v5_241c8, label %bb7, label %dec_label_pc_241cc

bb7:                                              ; preds = %dec_label_pc_24187
  %v1_241ca = call i32 @function_241e8()
  br label %dec_label_pc_241cc

dec_label_pc_241cc:                               ; preds = %bb7, %dec_label_pc_24187
  %v0_241cc = load i32, i32* @ebp, align 4
  %v1_241d2 = add i32 %v0_241cc, -52
  %v2_241d2 = inttoptr i32 %v1_241d2 to i32*
  %v3_241d2 = load i32, i32* %v2_241d2, align 4
  ret i32 %v3_241d2

; uselistorder directives
  uselistorder i32 (i32)* @unknown_47f1e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_43fb0, { 1, 0 }
}

define i32 @function_241da(i32 %arg1) local_unnamed_addr {
dec_label_pc_241da:
  %v0_241dc = call i32 @unknown_4d4b2()
  %v0_241e1 = load i32, i32* @ebp, align 4
  %v1_241e1 = add i32 %v0_241e1, -20
  %v2_241e1 = inttoptr i32 %v1_241e1 to i32*
  %v3_241e1 = load i32, i32* %v2_241e1, align 4
  %v2_241e4 = inttoptr i32 %v0_241dc to i32*
  store i32 %v3_241e1, i32* %v2_241e4, align 4
  %v0_241e6 = call i32 @function_241fd()
  ret i32 %v0_241e6
}

define i32 @function_241e8() local_unnamed_addr {
dec_label_pc_241e8:
  %v0_241e8 = load i32, i32* @ebp, align 4
  %v1_241e8 = add i32 %v0_241e8, -48
  %v2_241e8 = inttoptr i32 %v1_241e8 to i32*
  %v3_241e8 = load i32, i32* %v2_241e8, align 4
  %v1_241eb = add i32 %v3_241e8, 8
  %v1_241ee = add i32 %v0_241e8, -28
  %v2_241ee = inttoptr i32 %v1_241ee to i32*
  %v3_241ee = load i32, i32* %v2_241ee, align 4
  %v2_241f8 = call i32 @unknown_4402a(i32 %v1_241eb, i32 %v3_241ee)
  ret i32 %v2_241f8
}

define i32 @function_241fd() local_unnamed_addr {
dec_label_pc_241fd:
  %v0_241fd = load i32, i32* @ebp, align 4
  %v1_241fd = add i32 %v0_241fd, -48
  %v2_241fd = inttoptr i32 %v1_241fd to i32*
  %v3_241fd = load i32, i32* %v2_241fd, align 4
  %v1_24200 = add i32 %v0_241fd, -44
  %v2_24200 = inttoptr i32 %v1_24200 to i32*
  %v3_24200 = load i32, i32* %v2_24200, align 4
  %v1_24203 = add i32 %v0_241fd, -56
  %v2_24203 = inttoptr i32 %v1_24203 to i32*
  %v3_24203 = load i32, i32* %v2_24203, align 4
  %v1_24206 = inttoptr i32 %v3_24203 to i32*
  %v2_24206 = load i32, i32* %v1_24206, align 4
  %v3_24213 = call i32 @unknown_4d5f8(i32 %v3_24200, i32 %v3_241fd, i32 %v2_24206)
  %v0_2421b = load i32, i32* @ebp, align 4
  %v1_2421b = add i32 %v0_2421b, -44
  %v2_2421b = inttoptr i32 %v1_2421b to i32*
  %v3_2421b = load i32, i32* %v2_2421b, align 4
  store i32 %v3_2421b, i32* @eax, align 8
  %v1_2421e = add i32 %v0_2421b, -12
  %v2_2421e = inttoptr i32 %v1_2421e to i32*
  %v3_2421e = load i32, i32* %v2_2421e, align 4
  %v4_24221 = icmp eq i32 %v3_2421e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24221, label %bb, label %dec_label_pc_2422a

bb:                                               ; preds = %dec_label_pc_241fd
  %v1_24228 = call i32 @function_2422f()
  br label %dec_label_pc_2422a

dec_label_pc_2422a:                               ; preds = %bb, %dec_label_pc_241fd
  %v2_24228 = phi i32 [ %v1_24228, %bb ], [ %v3_2421b, %dec_label_pc_241fd ]
  ret i32 %v2_24228
}

define i32 @function_2422f() local_unnamed_addr {
dec_label_pc_2422f:
  %v0_24230 = load i32, i32* @eax, align 8
  ret i32 %v0_24230
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEppEv() local_unnamed_addr {
dec_label_pc_24234:
  %eax.global-to-local = alloca i32, align 4
  %v5_24234 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_24234
}

define i32 @function_24236(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24236:
  %v0_24239 = load i32, i32* @ebx, align 8
  %v1_24239 = add i32 %v0_24239, 1166608453
  %v2_24239 = inttoptr i32 %v1_24239 to i8*
  %v3_24239 = load i8, i8* %v2_24239, align 1
  %v4_24239 = load i32, i32* @ecx, align 4
  %v5_24239 = trunc i32 %v4_24239 to i8
  %v6_24239 = sub i8 %v3_24239, %v5_24239
  store i8 %v6_24239, i8* %v2_24239, align 1
  %v1_24246 = load i32, i32* @ebp, align 4
  %v2_24246 = add i32 %v1_24246, -12
  %v3_24246 = inttoptr i32 %v2_24246 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_24246, align 4
  %v0_2424b = load i32, i32* @ebp, align 4
  %v1_2424b = add i32 %v0_2424b, -28
  %v2_2424b = inttoptr i32 %v1_2424b to i32*
  %v3_2424b = load i32, i32* %v2_2424b, align 4
  %v1_2424e = inttoptr i32 %v3_2424b to i32*
  %v2_2424e = load i32, i32* %v1_2424e, align 4
  %v1_24250 = inttoptr i32 %v2_2424e to i32*
  %v2_24250 = load i32, i32* %v1_24250, align 4
  %v2_24255 = inttoptr i32 %v3_2424b to i32*
  store i32 %v2_24250, i32* %v2_24255, align 4
  %v0_24257 = load i32, i32* @ebp, align 4
  %v1_24257 = add i32 %v0_24257, -28
  %v2_24257 = inttoptr i32 %v1_24257 to i32*
  %v3_24257 = load i32, i32* %v2_24257, align 4
  store i32 %v3_24257, i32* @eax, align 8
  %v1_2425a = add i32 %v0_24257, -12
  %v2_2425a = inttoptr i32 %v1_2425a to i32*
  %v3_2425a = load i32, i32* %v2_2425a, align 4
  %v4_2425d = icmp eq i32 %v3_2425a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2425d, label %bb, label %dec_label_pc_24266

bb:                                               ; preds = %dec_label_pc_24236
  %v1_24264 = call i32 @function_2426b()
  br label %dec_label_pc_24266

dec_label_pc_24266:                               ; preds = %bb, %dec_label_pc_24236
  %v2_24264 = phi i32 [ %v1_24264, %bb ], [ %v3_24257, %dec_label_pc_24236 ]
  ret i32 %v2_24264
}

define i32 @function_2426b() local_unnamed_addr {
dec_label_pc_2426b:
  %v0_2426c = load i32, i32* @eax, align 8
  ret i32 %v0_2426c
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2426e:
  %v2_2428e = load i32, i32* %arg2, align 4
  %v2_2429a = call i32 @unknown_48928(i32 %arg1, i32 %v2_2428e)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_242ae

bb:                                               ; preds = %dec_label_pc_2426e
  %v1_242ac = call i32 @function_242b3()
  br label %dec_label_pc_242ae

dec_label_pc_242ae:                               ; preds = %bb, %dec_label_pc_2426e
  %v2_242ac = phi i32 [ %v1_242ac, %bb ], [ %arg1, %dec_label_pc_2426e ]
  ret i32 %v2_242ac

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_242b3() local_unnamed_addr {
dec_label_pc_242b3:
  %v0_242b4 = load i32, i32* @eax, align 8
  ret i32 %v0_242b4
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEeqERKSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242b8:
  %v2_242d8 = load i32, i32* %arg1, align 4
  %v1_242dd = inttoptr i32 %arg2 to i32*
  %v2_242dd = load i32, i32* %v1_242dd, align 4
  %v12_242df = icmp eq i32 %v2_242d8, %v2_242dd
  %v1_242e1 = zext i1 %v12_242df to i32
  %v3_242e1 = and i32 %v2_242dd, -256
  %v4_242e1 = or i32 %v1_242e1, %v3_242e1
  store i32 %v4_242e1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_242f0

bb:                                               ; preds = %dec_label_pc_242b8
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_242ee = call i32 @function_242f5(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_242f0

dec_label_pc_242f0:                               ; preds = %bb, %dec_label_pc_242b8
  %v4_242ee = phi i32 [ %v3_242ee, %bb ], [ %v4_242e1, %dec_label_pc_242b8 ]
  ret i32 %v4_242ee

; uselistorder directives
  uselistorder i32 %v2_242dd, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_242f5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242f5:
  %v0_242f6 = load i32, i32* @eax, align 8
  ret i32 %v0_242f6
}

define i32 @_ZN5boost9function1IbxEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242f8:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_24348(i32 %arg1) local_unnamed_addr {
dec_label_pc_24348:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2434d() local_unnamed_addr {
dec_label_pc_2434d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2434d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2434d = add i32 %v0_2434d, -1
  store i32 %v1_2434d, i32* %ecx.global-to-local, align 4
  %v0_2434f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2434f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEC1EPSG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24350:
  store i32 %arg1, i32* @eax, align 8
  %v1_24373 = call i32 @function_26244(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2437e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2437e:
  %v0_24380 = load i32, i32* @ebx, align 8
  %v1_24380 = add i32 %v0_24380, 1435231301
  %v2_24380 = inttoptr i32 %v1_24380 to i8*
  %v3_24380 = load i8, i8* %v2_24380, align 1
  %v4_24380 = load i32, i32* @ecx, align 4
  %v5_24380 = trunc i32 %v4_24380 to i8
  %v6_24380 = add i8 %v5_24380, %v3_24380
  store i8 %v6_24380, i8* %v2_24380, align 1
  %v0_24388 = load i32, i32* @eax, align 8
  %v11_24389 = or i32 %v0_24388, 139
  %v0_2438b = load i32, i32* @ebp, align 4
  %v1_2438b = add i32 %v0_2438b, 1
  store i32 %v1_2438b, i32* @ebp, align 4
  %v3_2438d = xor i32 %v11_24389, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2438d = icmp eq i32 %v3_2438d, 0
  store i32 %v3_2438d, i32* @eax, align 8
  br i1 %v4_2438d, label %bb, label %dec_label_pc_24396

bb:                                               ; preds = %dec_label_pc_2437e
  %v2_24394 = call i32 @function_2439b(i32 %v0_24388)
  br label %dec_label_pc_24396

dec_label_pc_24396:                               ; preds = %bb, %dec_label_pc_2437e
  %v4_24394 = phi i32 [ %v2_24394, %bb ], [ %v3_2438d, %dec_label_pc_2437e ]
  ret i32 %v4_24394

; uselistorder directives
  uselistorder i32 %v0_24388, { 1, 0 }
}

define i32 @function_2439b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2439b:
  %v0_2439c = load i32, i32* @eax, align 8
  ret i32 %v0_2439c
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2439d:
  ret i32 %arg1
}

define i32 @function_243be(i32 %arg1) local_unnamed_addr {
dec_label_pc_243be:
  %v0_243be = load i32, i32* @ebx, align 8
  %v1_243be = add i32 %v0_243be, 277546176
  %v2_243be = inttoptr i32 %v1_243be to i8*
  %v3_243be = load i8, i8* %v2_243be, align 1
  %v4_243be = load i32, i32* @eax, align 8
  %v5_243be = trunc i32 %v4_243be to i8
  %v6_243be = add i8 %v5_243be, %v3_243be
  store i8 %v6_243be, i8* %v2_243be, align 1
  %v0_243c4 = load i32, i32* @ebp, align 4
  %v1_243c4 = add i32 %v0_243c4, -28
  %v2_243c4 = inttoptr i32 %v1_243c4 to i32*
  %v3_243c4 = load i32, i32* %v2_243c4, align 4
  %v1_243cc = add i32 %v0_243c4, -12
  %v2_243cc = inttoptr i32 %v1_243cc to i32*
  %v3_243cc = load i32, i32* %v2_243cc, align 4
  %v3_243cf = xor i32 %v3_243cc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_243cf = icmp eq i32 %v3_243cf, 0
  store i32 %v3_243cf, i32* @eax, align 8
  br i1 %v4_243cf, label %bb, label %dec_label_pc_243d8

bb:                                               ; preds = %dec_label_pc_243be
  %v2_243d6 = call i32 @function_243dd(i32 %v3_243c4)
  br label %dec_label_pc_243d8

dec_label_pc_243d8:                               ; preds = %bb, %dec_label_pc_243be
  %v3_243d6 = phi i32 [ %v2_243d6, %bb ], [ %v3_243cf, %dec_label_pc_243be ]
  ret i32 %v3_243d6
}

define i32 @function_243dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_243dd:
  %v0_243de = load i32, i32* @eax, align 8
  ret i32 %v0_243de
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISL_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243e0:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24411

bb:                                               ; preds = %dec_label_pc_243e0
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2440f = call i32 @function_24416(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_24411

dec_label_pc_24411:                               ; preds = %bb, %dec_label_pc_243e0
  %v4_2440f = phi i32 [ %v3_2440f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_243e0 ]
  ret i32 %v4_2440f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_24416(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24416:
  %v0_24417 = load i32, i32* @eax, align 8
  ret i32 %v0_24417
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24418:
  %v1_24432 = add i32 %arg1, 8
  %v2_24432 = inttoptr i32 %v1_24432 to i32*
  %v3_24432 = load i32, i32* %v2_24432, align 4
  store i32 %v3_24432, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24441

bb:                                               ; preds = %dec_label_pc_24418
  %v2_2443f = call i32 @function_24446(i32 %arg1)
  br label %dec_label_pc_24441

dec_label_pc_24441:                               ; preds = %bb, %dec_label_pc_24418
  %v3_2443f = phi i32 [ %v2_2443f, %bb ], [ %v3_24432, %dec_label_pc_24418 ]
  ret i32 %v3_2443f
}

define i32 @function_24446(i32 %arg1) local_unnamed_addr {
dec_label_pc_24446:
  %v0_24447 = load i32, i32* @eax, align 8
  ret i32 %v0_24447
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_24448:
  %v1_24462 = add i32 %arg1, 4
  store i32 %v1_24462, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24471

bb:                                               ; preds = %dec_label_pc_24448
  %v2_2446f = call i32 @function_24476(i32 %arg1)
  br label %dec_label_pc_24471

dec_label_pc_24471:                               ; preds = %bb, %dec_label_pc_24448
  %v3_2446f = phi i32 [ %v2_2446f, %bb ], [ %v1_24462, %dec_label_pc_24448 ]
  ret i32 %v3_2446f
}

define i32 @function_24476(i32 %arg1) local_unnamed_addr {
dec_label_pc_24476:
  %v0_24477 = load i32, i32* @eax, align 8
  ret i32 %v0_24477
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE14_M_upper_boundEPSt13_Rb_tree_nodeISL_ESW_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24478:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_244a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_244a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_244a2 = load i32, i32* @eax, align 8
  %v1_244a2 = load i32, i32* @ebp, align 4
  %v2_244a2 = add i32 %v1_244a2, -12
  %v3_244a2 = inttoptr i32 %v2_244a2 to i32*
  store i32 %v0_244a2, i32* %v3_244a2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_244f46 = load i32, i32* @ebp, align 4
  %v1_244f47 = add i32 %v0_244f46, -36
  %v2_244f48 = inttoptr i32 %v1_244f47 to i32*
  %v3_244f49 = load i32, i32* %v2_244f48, align 4
  %v10_244f410 = icmp eq i32 %v3_244f49, 0
  %v1_244f811 = icmp eq i1 %v10_244f410, false
  %v2_244f812 = zext i1 %v1_244f811 to i32
  store i32 %v2_244f812, i32* %eax.global-to-local, align 8
  %v5_244fb13 = icmp eq i1 %v1_244f811, false
  %v1_244fd14 = icmp eq i1 %v5_244fb13, false
  br i1 %v1_244fd14, label %dec_label_pc_244a9, label %dec_label_pc_244ff

dec_label_pc_244a9:                               ; preds = %dec_label_pc_244a2, %dec_label_pc_244f4.backedge
  %v2_244f415 = phi i32* [ %v2_244f4, %dec_label_pc_244f4.backedge ], [ %v2_244f48, %dec_label_pc_244a2 ]
  %v3_244a9 = load i32, i32* %v2_244f415, align 4
  store i32 %v3_244a9, i32* %eax.global-to-local, align 8
  %v1_244af = call i32 @unknown_4dc3c(i32 %v3_244a9)
  store i32 %v1_244af, i32* %eax.global-to-local, align 8
  %v0_244b6 = load i32, i32* @ebp, align 4
  %v1_244b6 = add i32 %v0_244b6, -32
  %v2_244b6 = inttoptr i32 %v1_244b6 to i32*
  %v3_244b6 = load i32, i32* %v2_244b6, align 4
  store i32 %v3_244b6, i32* %eax.global-to-local, align 8
  %v1_244bd = add i32 %v0_244b6, -44
  %v2_244bd = inttoptr i32 %v1_244bd to i32*
  %v3_244bd = load i32, i32* %v2_244bd, align 4
  %v3_244c7 = call i32 @unknown_45bb8(i32 %v3_244b6, i32 %v3_244bd, i32 %v1_244af)
  store i32 %v3_244c7, i32* %eax.global-to-local, align 8
  %v4_244cc = trunc i32 %v3_244c7 to i8
  %v5_244cc = icmp eq i8 %v4_244cc, 0
  %v0_244e6 = load i32, i32* @ebp, align 4
  %v1_244e6 = add i32 %v0_244e6, -36
  %v2_244e6 = inttoptr i32 %v1_244e6 to i32*
  %v3_244e6 = load i32, i32* %v2_244e6, align 4
  store i32 %v3_244e6, i32* %eax.global-to-local, align 8
  br i1 %v5_244cc, label %dec_label_pc_244e6, label %dec_label_pc_244d0

dec_label_pc_244d0:                               ; preds = %dec_label_pc_244a9
  %v2_244d3 = add i32 %v0_244e6, -40
  %v3_244d3 = inttoptr i32 %v2_244d3 to i32*
  store i32 %v3_244e6, i32* %v3_244d3, align 4
  %v0_244d6 = load i32, i32* @ebp, align 4
  %v1_244d6 = add i32 %v0_244d6, -36
  %v2_244d6 = inttoptr i32 %v1_244d6 to i32*
  %v3_244d6 = load i32, i32* %v2_244d6, align 4
  store i32 %v3_244d6, i32* %eax.global-to-local, align 8
  %v1_244dc = call i32 @unknown_4dc80(i32 %v3_244d6)
  store i32 %v1_244dc, i32* %eax.global-to-local, align 8
  %v1_244e1 = load i32, i32* @ebp, align 4
  %v2_244e1 = add i32 %v1_244e1, -36
  %v3_244e1 = inttoptr i32 %v2_244e1 to i32*
  store i32 %v1_244dc, i32* %v3_244e1, align 4
  br label %dec_label_pc_244f4.backedge

dec_label_pc_244f4.backedge:                      ; preds = %dec_label_pc_244d0, %dec_label_pc_244e6
  %v3_244f8.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_244f4 = load i32, i32* @ebp, align 4
  %v1_244f4 = add i32 %v0_244f4, -36
  %v2_244f4 = inttoptr i32 %v1_244f4 to i32*
  %v3_244f4 = load i32, i32* %v2_244f4, align 4
  %v10_244f4 = icmp eq i32 %v3_244f4, 0
  %v1_244f8 = icmp eq i1 %v10_244f4, false
  %v2_244f8 = zext i1 %v1_244f8 to i32
  %v4_244f8 = and i32 %v3_244f8.pre, -256
  %v5_244f8 = or i32 %v2_244f8, %v4_244f8
  store i32 %v5_244f8, i32* %eax.global-to-local, align 8
  %v5_244fb = icmp eq i1 %v1_244f8, false
  %v1_244fd = icmp eq i1 %v5_244fb, false
  br i1 %v1_244fd, label %dec_label_pc_244a9, label %dec_label_pc_244ff

dec_label_pc_244e6:                               ; preds = %dec_label_pc_244a9
  %v1_244ec = call i32 @unknown_4dcb0(i32 %v3_244e6)
  store i32 %v1_244ec, i32* %eax.global-to-local, align 8
  %v1_244f1 = load i32, i32* @ebp, align 4
  %v2_244f1 = add i32 %v1_244f1, -36
  %v3_244f1 = inttoptr i32 %v2_244f1 to i32*
  store i32 %v1_244ec, i32* %v3_244f1, align 4
  br label %dec_label_pc_244f4.backedge

dec_label_pc_244ff:                               ; preds = %dec_label_pc_244f4.backedge, %dec_label_pc_244a2
  %v0_244f4.lcssa = phi i32 [ %v0_244f46, %dec_label_pc_244a2 ], [ %v0_244f4, %dec_label_pc_244f4.backedge ]
  %v1_244ff = add i32 %v0_244f4.lcssa, -40
  %v2_244ff = inttoptr i32 %v1_244ff to i32*
  %v3_244ff = load i32, i32* %v2_244ff, align 4
  store i32 %v3_244ff, i32* %eax.global-to-local, align 8
  %v1_24506 = add i32 %v0_244f4.lcssa, -28
  %v2_24506 = inttoptr i32 %v1_24506 to i32*
  %v3_24506 = load i32, i32* %v2_24506, align 4
  store i32 %v3_24506, i32* %eax.global-to-local, align 8
  %v2_2450c = call i32 @unknown_48858(i32 %v3_24506, i32 %v3_244ff)
  store i32 %v2_2450c, i32* %eax.global-to-local, align 8
  %v0_24511 = load i32, i32* @ebp, align 4
  %v1_24511 = add i32 %v0_24511, -28
  %v2_24511 = inttoptr i32 %v1_24511 to i32*
  %v3_24511 = load i32, i32* %v2_24511, align 4
  store i32 %v3_24511, i32* @eax, align 8
  %v1_24514 = add i32 %v0_24511, -12
  %v2_24514 = inttoptr i32 %v1_24514 to i32*
  %v3_24514 = load i32, i32* %v2_24514, align 4
  %v4_24517 = icmp eq i32 %v3_24514, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24517, label %bb, label %dec_label_pc_24520

bb:                                               ; preds = %dec_label_pc_244ff
  %v1_2451e = call i32 @function_24525()
  store i32 %v1_2451e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_24520

dec_label_pc_24520:                               ; preds = %bb, %dec_label_pc_244ff
  %v2_2451e = phi i32 [ %v1_2451e, %bb ], [ %v3_24511, %dec_label_pc_244ff ]
  ret i32 %v2_2451e

; uselistorder directives
  uselistorder i32* %v2_244f4, { 1, 0 }
  uselistorder i32 %v3_244e6, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 11, 12, 13, 2, 14, 4, 5, 6, 3, 7, 8, 9, 10, 1, 15 }
  uselistorder label %dec_label_pc_244f4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_244a9, { 1, 0 }
}

define i32 @function_24525() local_unnamed_addr {
dec_label_pc_24525:
  %v0_24526 = load i32, i32* @eax, align 8
  ret i32 %v0_24526
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEeqERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2452a:
  ret i32 %arg2
}

define i32 @function_2453c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2453c:
  %v1_24542 = load i32, i32* @ebp, align 4
  %v2_24542 = add i32 %v1_24542, -12
  %v3_24542 = inttoptr i32 %v2_24542 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_24542, align 4
  ret i32 0
}

define i32 @function_24548(i32 %arg1) local_unnamed_addr {
dec_label_pc_24548:
  %v0_24548 = load i32, i32* @ebp, align 4
  %v1_24548 = add i32 %v0_24548, 1
  store i32 %v1_24548, i32* @ebp, align 4
  %v0_2454b = load i32, i32* @ebx, align 8
  %v1_2454b = add i32 %v0_2454b, 9166917
  %v2_2454b = inttoptr i32 %v1_2454b to i8*
  %v3_2454b = load i8, i8* %v2_2454b, align 1
  %v4_2454b = load i32, i32* @ecx, align 4
  %v5_2454b = trunc i32 %v4_2454b to i8
  %v6_2454b = load i1, i1* @cf, align 1
  %v7_2454b = zext i1 %v6_2454b to i8
  %v8_2454b = add i8 %v5_2454b, %v3_2454b
  %v9_2454b = add i8 %v8_2454b, %v7_2454b
  store i8 %v9_2454b, i8* %v2_2454b, align 1
  %v0_24551 = load i32, i32* @edx, align 8
  %v1_24551 = load i32, i32* @eax, align 8
  %v12_24551 = icmp eq i32 %v0_24551, %v1_24551
  %v1_24553 = zext i1 %v12_24551 to i32
  %v3_24553 = and i32 %v1_24551, -256
  %v4_24553 = or i32 %v1_24553, %v3_24553
  store i32 %v4_24553, i32* @eax, align 8
  %v0_24556 = load i32, i32* @ebp, align 4
  %v1_24556 = add i32 %v0_24556, -12
  %v2_24556 = inttoptr i32 %v1_24556 to i32*
  %v3_24556 = load i32, i32* %v2_24556, align 4
  %v4_24559 = icmp eq i32 %v3_24556, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24559, label %bb, label %dec_label_pc_24562

bb:                                               ; preds = %dec_label_pc_24548
  %v1_24560 = call i32 @function_24567()
  br label %dec_label_pc_24562

dec_label_pc_24562:                               ; preds = %bb, %dec_label_pc_24548
  %v2_24560 = phi i32 [ %v1_24560, %bb ], [ %v4_24553, %dec_label_pc_24548 ]
  ret i32 %v2_24560

; uselistorder directives
  uselistorder i32 %v1_24551, { 1, 0 }
}

define i32 @function_24567() local_unnamed_addr {
dec_label_pc_24567:
  %v0_24568 = load i32, i32* @eax, align 8
  ret i32 %v0_24568
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2456a:
  %v2_24594 = call i32 @unknown_48c24(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_245a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_245a4:
  %zf.global-to-local = alloca i1, align 1
  %v2_245a4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_245a4 = load i32, i32* @eax, align 8
  %v4_245a4 = trunc i32 %v3_245a4 to i8
  %v5_245a4 = add i8 %v4_245a4, %v2_245a4
  %v15_245a4 = icmp eq i8 %v5_245a4, 0
  store i1 %v15_245a4, i1* %zf.global-to-local, align 1
  %v21_245a4 = inttoptr i32 %v3_245a4 to i8*
  store i8 %v5_245a4, i8* %v21_245a4, align 1
  %v0_245a6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_245a6, label %bb, label %dec_label_pc_245a4.dec_label_pc_245a8_crit_edge

dec_label_pc_245a4.dec_label_pc_245a8_crit_edge:  ; preds = %dec_label_pc_245a4
  %v2_245a6.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_245a8

bb:                                               ; preds = %dec_label_pc_245a4
  %v1_245a6 = call i32 @function_245ad()
  br label %dec_label_pc_245a8

dec_label_pc_245a8:                               ; preds = %dec_label_pc_245a4.dec_label_pc_245a8_crit_edge, %bb
  %v2_245a6 = phi i32 [ %v2_245a6.pre, %dec_label_pc_245a4.dec_label_pc_245a8_crit_edge ], [ %v1_245a6, %bb ]
  ret i32 %v2_245a6

; uselistorder directives
  uselistorder label %dec_label_pc_245a8, { 1, 0 }
}

define i32 @function_245ad() local_unnamed_addr {
dec_label_pc_245ad:
  %v0_245ae = load i32, i32* @eax, align 8
  ret i32 %v0_245ae
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_245b2:
  %v2_245cc = load i32, i32* %arg1, align 4
  %v1_245ce = add i32 %v2_245cc, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_245d4 = call i32 @unknown_4de1a(i32 %v1_245ce)
  store i32 %v1_245d4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_245e5

bb:                                               ; preds = %dec_label_pc_245b2
  %v1_245e3 = call i32 @function_245ea()
  br label %dec_label_pc_245e5

dec_label_pc_245e5:                               ; preds = %bb, %dec_label_pc_245b2
  %v2_245e3 = phi i32 [ %v1_245e3, %bb ], [ %v1_245d4, %dec_label_pc_245b2 ]
  ret i32 %v2_245e3
}

define i32 @function_245ea() local_unnamed_addr {
dec_label_pc_245ea:
  %v0_245eb = load i32, i32* @eax, align 8
  ret i32 %v0_245eb
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE14_M_create_nodeERKSH_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_245ec:
  %stack_var_-17 = alloca i32, align 4
  %v1_24610 = call i32 @unknown_4de82(i32 %arg1)
  %v1_2461b = add i32 %v1_24610, 8
  %v1_24621 = call i32 @unknown_4df4d(i32 %v1_2461b)
  %v2_2462b = ptrtoint i32* %stack_var_-17 to i32
  %v2_24635 = call i32 @unknown_4dec8(i32 %v2_2462b, i32 %arg1)
  %v3_2464e = call i32 @unknown_4df7a(i32 %v2_2462b, i32 %v1_24621, i32 %arg2)
  %v1_24659 = call i32 @unknown_4df18(i32 %v2_2462b)
  store i32 %v1_24610, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2466d

bb:                                               ; preds = %dec_label_pc_245ec
  %v1_2466b = call i32 @function_246b5()
  store i32 %v1_2466b, i32* @eax, align 8
  br label %dec_label_pc_2466d

dec_label_pc_2466d:                               ; preds = %bb, %dec_label_pc_245ec
  %v0_2466d = call i32 @function_246b0()
  ret i32 %v0_2466d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2466f() local_unnamed_addr {
dec_label_pc_2466f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2466f = load i32, i32* %eax.global-to-local, align 8
  %v0_24671 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24671 = add i32 %v0_24671, -13
  store i32 %v1_24671, i32* %eax.global-to-local, align 8
  %v1_24677 = call i32 @unknown_4df18(i32 %v1_24671)
  store i32 %v0_2466f, i32* @eax, align 8
  %v0_2467e = call i32 @function_24691()
  store i32 %v0_2467e, i32* %eax.global-to-local, align 8
  ret i32 %v0_2467e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4df18, { 1, 0 }
}

define i32 @function_24681() local_unnamed_addr {
dec_label_pc_24681:
  %eax.global-to-local = alloca i32, align 4
  %v0_24681 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24681
}

define i32 @function_24691() local_unnamed_addr {
dec_label_pc_24691:
  %v3_24691 = load i32, i32* @eax, align 8
  ret i32 %v3_24691
}

define i32 @function_246b0() local_unnamed_addr {
dec_label_pc_246b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_246b5() local_unnamed_addr {
dec_label_pc_246b5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_246b6(i32* %arg1) local_unnamed_addr {
dec_label_pc_246b6:
  %v0_246b9 = load i32, i32* @eax, align 8
  ret i32 %v0_246b9
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246ba:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_246eb

bb:                                               ; preds = %dec_label_pc_246ba
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_246e9 = call i32 @function_246f0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_246eb

dec_label_pc_246eb:                               ; preds = %bb, %dec_label_pc_246ba
  %v4_246e9 = phi i32 [ %v3_246e9, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_246ba ]
  ret i32 %v4_246e9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

declare i32 @__stack_chk_fail.631(i32, i32) local_unnamed_addr

define i32 @function_246f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246f0:
  %v0_246f1 = load i32, i32* @eax, align 8
  ret i32 %v0_246f1
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEPT_RSM_(i32 %arg1) local_unnamed_addr {
dec_label_pc_246f2:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24718

bb:                                               ; preds = %dec_label_pc_246f2
  %v2_24716 = call i32 @function_2471d(i32 %arg1)
  br label %dec_label_pc_24718

dec_label_pc_24718:                               ; preds = %bb, %dec_label_pc_246f2
  %v3_24716 = phi i32 [ %v2_24716, %bb ], [ %arg1, %dec_label_pc_246f2 ]
  ret i32 %v3_24716
}

define i32 @function_2471d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2471d:
  %v0_2471e = load i32, i32* @eax, align 8
  ret i32 %v0_2471e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE5eraseESt17_Rb_tree_iteratorISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24720:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_24740 = ptrtoint i32* %stack_var_-36 to i32
  %v2_24744 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2474a = call i32 @unknown_444a0(i32 %v2_24744, i32 %v4_24740)
  %v3_2474f = load i32, i32* %stack_var_-20, align 4
  %v2_2475c = call i32 @unknown_4e154(i32 %arg1, i32 %v3_2474f)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2476d

bb:                                               ; preds = %dec_label_pc_24720
  %v1_2476b = call i32 @function_24772()
  br label %dec_label_pc_2476d

dec_label_pc_2476d:                               ; preds = %bb, %dec_label_pc_24720
  %v2_2476b = phi i32 [ %v1_2476b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24720 ]
  ret i32 %v2_2476b
}

define i32 @function_24772() local_unnamed_addr {
dec_label_pc_24772:
  %v0_24773 = load i32, i32* @eax, align 8
  ret i32 %v0_24773
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE16_M_insert_uniqueERKSL_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24774:
  %v1_2479e = call i32 @unknown_48b8c(i32 %arg2)
  %v1_247ac = call i32 @unknown_48bbc(i32 %arg2)
  ret i32 %v1_247ac
}

define i32 @function_24810(i32 %arg1) local_unnamed_addr {
dec_label_pc_24810:
  %eax.global-to-local = alloca i32, align 4
  %v0_24810 = load i32, i32* @eax, align 8
  %v1_24810 = load i32, i32* @edi, align 8
  %v5_24811 = add i32 %v1_24810, %v0_24810
  %v20_24811 = urem i32 %v5_24811, 256
  %v22_24811 = and i32 %v1_24810, -256
  %v23_24811 = or i32 %v20_24811, %v22_24811
  store i32 %v23_24811, i32* %eax.global-to-local, align 8
  %v1_24813 = load i32, i32* @ebp, align 4
  %v2_24813 = add i32 %v1_24813, -28
  %v3_24813 = inttoptr i32 %v2_24813 to i32*
  store i32 %v23_24811, i32* %v3_24813, align 4
  %v0_24816 = load i32, i32* @ebp, align 4
  %v1_24816 = add i32 %v0_24816, -28
  %v2_24816 = inttoptr i32 %v1_24816 to i32*
  %v3_24816 = load i32, i32* %v2_24816, align 4
  %v10_24816 = icmp eq i32 %v3_24816, 0
  %v1_2481a = icmp eq i1 %v10_24816, false
  %v2_2481a = zext i1 %v1_2481a to i32
  %v3_2481a = load i32, i32* %eax.global-to-local, align 8
  %v4_2481a = and i32 %v3_2481a, -256
  %v5_2481a = or i32 %v2_2481a, %v4_2481a
  store i32 %v5_2481a, i32* %eax.global-to-local, align 8
  %v1_24821 = add i32 %v0_24816, -24
  %v2_24821 = inttoptr i32 %v1_24821 to i32*
  %v3_24821 = load i32, i32* %v2_24821, align 4
  %v1_24828 = add i32 %v0_24816, -44
  store i32 %v1_24828, i32* %eax.global-to-local, align 8
  %v2_2482e = call i32 @unknown_48b54(i32 %v1_24828, i32 %v3_24821)
  store i32 %v2_2482e, i32* %eax.global-to-local, align 8
  %v0_24833 = load i32, i32* @ebp, align 4
  %v1_2483d = add i32 %v0_24833, -40
  store i32 %v1_2483d, i32* %eax.global-to-local, align 8
  %v1_24840 = add i32 %v0_24833, -64
  %v2_24840 = inttoptr i32 %v1_24840 to i32*
  %v3_24840 = load i32, i32* %v2_24840, align 4
  %v2_2484a = call i32 @unknown_44898(i32 %v1_2483d, i32 %v3_24840)
  %v0_24852 = load i32, i32* @ebp, align 4
  %v1_24852 = add i32 %v0_24852, -40
  %v1_24859 = add i32 %v0_24852, -44
  store i32 %v1_24859, i32* %eax.global-to-local, align 8
  %v2_2485f = call i32 @unknown_447ac(i32 %v1_24859, i32 %v1_24852)
  store i32 %v2_2485f, i32* %eax.global-to-local, align 8
  %v4_24864 = trunc i32 %v2_2485f to i8
  %v5_24864 = icmp eq i8 %v4_24864, 0
  br i1 %v5_24864, label %dec_label_pc_248b4, label %dec_label_pc_24868

dec_label_pc_24868:                               ; preds = %dec_label_pc_24810
  %v0_24868 = load i32, i32* @ebp, align 4
  %v1_24868 = add i32 %v0_24868, -17
  %v2_24868 = inttoptr i32 %v1_24868 to i8*
  store i8 1, i8* %v2_24868, align 1
  %v0_2486c = load i32, i32* @ebp, align 4
  %v1_2486c = add i32 %v0_2486c, -36
  store i32 %v1_2486c, i32* %eax.global-to-local, align 8
  %v1_2488e = call i32 @unknown_4e246(i32 %v1_2486c)
  %v0_24896 = load i32, i32* @ebp, align 4
  %v1_24896 = add i32 %v0_24896, -17
  %v1_2489d = add i32 %v0_24896, -36
  store i32 %v1_2489d, i32* %eax.global-to-local, align 8
  %v1_248a4 = add i32 %v0_24896, -60
  %v2_248a4 = inttoptr i32 %v1_248a4 to i32*
  %v3_248a4 = load i32, i32* %v2_248a4, align 4
  store i32 %v3_248a4, i32* %eax.global-to-local, align 8
  %v3_248aa = call i32 @unknown_4e348(i32 %v3_248a4, i32 %v1_2489d, i32 %v1_24896)
  store i32 %v3_248aa, i32* %eax.global-to-local, align 8
  ret i32 %v3_248aa

dec_label_pc_248b4:                               ; preds = %dec_label_pc_24810
  ret i32 %v2_2485f

; uselistorder directives
  uselistorder i32 %v0_24833, { 1, 0 }
  uselistorder i32 %v0_24816, { 1, 0, 2 }
  uselistorder i32 %v1_24810, { 1, 0 }
}

define i32 @function_248b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_248b6:
  %v0_248ba = call i32 @unknown_4e394()
  %v0_248bf = load i32, i32* @ebp, align 4
  %v1_248bf = add i32 %v0_248bf, -68
  %v2_248bf = inttoptr i32 %v1_248bf to i32*
  %v3_248bf = load i32, i32* %v2_248bf, align 4
  %v1_248c6 = add i32 %v0_248bf, -16
  %v2_248cc = call i32 @unknown_4e212(i32 %v1_248c6, i32 %v3_248bf)
  store i32 %v2_248cc, i32* @ebx, align 8
  %v0_248d3 = load i32, i32* @ebp, align 4
  %v1_248d3 = add i32 %v0_248d3, -44
  %v2_248d3 = inttoptr i32 %v1_248d3 to i32*
  %v3_248d3 = load i32, i32* %v2_248d3, align 4
  %v1_248d9 = call i32 @unknown_4e3d3(i32 %v3_248d3)
  %v0_248e0 = load i32, i32* @ebp, align 4
  %v1_248e0 = add i32 %v0_248e0, -64
  %v2_248e0 = inttoptr i32 %v1_248e0 to i32*
  %v3_248e0 = load i32, i32* %v2_248e0, align 4
  %v1_248ee = call i32 @unknown_45eb4(i32 %v3_248e0)
  %v4_248f3 = trunc i32 %v1_248ee to i8
  %v5_248f3 = icmp eq i8 %v4_248f3, 0
  br i1 %v5_248f3, label %bb, label %dec_label_pc_248f7

bb:                                               ; preds = %dec_label_pc_248b6
  %v1_248f5 = call i32 @function_24940()
  br label %dec_label_pc_248f7

dec_label_pc_248f7:                               ; preds = %bb, %dec_label_pc_248b6
  %v0_248f7 = load i32, i32* @ebp, align 4
  %v1_248f7 = add i32 %v0_248f7, -15
  %v2_248f7 = inttoptr i32 %v1_248f7 to i8*
  store i8 1, i8* %v2_248f7, align 1
  %v0_248fb = load i32, i32* @ebp, align 4
  %v1_248fb = add i32 %v0_248fb, -32
  ret i32 %v1_248fb
}

define i32 @function_24912(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24912:
  %v0_24912 = load i32, i32* @ebx, align 8
  %v1_24912 = add i32 %v0_24912, 1418313813
  %v2_24912 = inttoptr i32 %v1_24912 to i8*
  %v3_24912 = load i8, i8* %v2_24912, align 1
  %v4_24912 = load i32, i32* @ecx, align 4
  %v5_24912 = trunc i32 %v4_24912 to i8
  %v6_24912 = or i8 %v5_24912, %v3_24912
  store i8 %v6_24912, i8* %v2_24912, align 1
  %v0_24918 = load i32, i32* @eax, align 8
  %v11_24918 = and i32 %v0_24918, -252
  %v1_2491d = call i32 @unknown_4e246(i32 %v11_24918)
  %v0_24925 = load i32, i32* @ebp, align 4
  %v1_24925 = add i32 %v0_24925, -15
  %v1_2492c = add i32 %v0_24925, -32
  %v1_24933 = add i32 %v0_24925, -60
  %v2_24933 = inttoptr i32 %v1_24933 to i32*
  %v3_24933 = load i32, i32* %v2_24933, align 4
  %v3_24939 = call i32 @unknown_4e348(i32 %v3_24933, i32 %v1_2492c, i32 %v1_24925)
  ret i32 %v3_24939
}

define i32 @function_24940() local_unnamed_addr {
dec_label_pc_24940:
  %v0_24940 = load i32, i32* @ebp, align 4
  %v1_24940 = add i32 %v0_24940, -14
  %v2_24940 = inttoptr i32 %v1_24940 to i8*
  store i8 0, i8* %v2_24940, align 1
  %v0_24944 = load i32, i32* @ebp, align 4
  %v1_24944 = add i32 %v0_24944, -14
  %v1_2494b = add i32 %v0_24944, -44
  %v1_24952 = add i32 %v0_24944, -60
  %v2_24952 = inttoptr i32 %v1_24952 to i32*
  %v3_24952 = load i32, i32* %v2_24952, align 4
  %v3_24958 = call i32 @unknown_4e348(i32 %v3_24952, i32 %v1_2494b, i32 %v1_24944)
  %v0_2495d = load i32, i32* @ebp, align 4
  %v1_2495d = add i32 %v0_2495d, -60
  %v2_2495d = inttoptr i32 %v1_2495d to i32*
  %v3_2495d = load i32, i32* %v2_2495d, align 4
  store i32 %v3_2495d, i32* @eax, align 8
  %v1_24960 = add i32 %v0_2495d, -12
  %v2_24960 = inttoptr i32 %v1_24960 to i32*
  %v3_24960 = load i32, i32* %v2_24960, align 4
  %v4_24963 = icmp eq i32 %v3_24960, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24963, label %bb, label %dec_label_pc_2496c

bb:                                               ; preds = %dec_label_pc_24940
  %v1_2496a = call i32 @function_24971()
  br label %dec_label_pc_2496c

dec_label_pc_2496c:                               ; preds = %bb, %dec_label_pc_24940
  %v3_2496a = phi i32 [ %v1_2496a, %bb ], [ %v3_2495d, %dec_label_pc_24940 ]
  ret i32 %v3_2496a
}

define i32 @function_24971() local_unnamed_addr {
dec_label_pc_24971:
  %v0_24971 = load i32, i32* @ebp, align 4
  %v1_24971 = add i32 %v0_24971, -4
  %v2_24971 = inttoptr i32 %v1_24971 to i32*
  %v3_24971 = load i32, i32* %v2_24971, align 4
  store i32 %v3_24971, i32* @ebx, align 8
  %v0_24975 = load i32, i32* @eax, align 8
  ret i32 %v0_24975
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE14_M_lower_boundEPSt13_Rb_tree_nodeISL_ESW_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24978:
  %v10_249f7117126 = icmp eq i32 %arg3, 0
  %v1_249fb118127 = icmp eq i1 %v10_249f7117126, false
  %v5_249fe122129 = icmp eq i1 %v1_249fb118127, false
  %v1_24a00123130 = icmp eq i1 %v5_249fe122129, false
  br i1 %v1_24a00123130, label %dec_label_pc_249a9.lr.ph, label %dec_label_pc_24a02

dec_label_pc_249a9.lr.ph:                         ; preds = %dec_label_pc_24978, %dec_label_pc_249d3
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_249d3 ], [ %arg4, %dec_label_pc_24978 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_249df, %dec_label_pc_249d3 ], [ %arg3, %dec_label_pc_24978 ]
  br label %dec_label_pc_249a9

dec_label_pc_249a9:                               ; preds = %dec_label_pc_249a9.lr.ph, %dec_label_pc_249e9
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_249a9.lr.ph ], [ %v1_249ef, %dec_label_pc_249e9 ]
  %v1_249af = call i32 @unknown_4e13c(i32 %stack_var_-40.0124)
  %v3_249c7 = call i32 @unknown_460b8(i32 %arg2, i32 %v1_249af, i32 %arg5)
  %v1_249cc = xor i32 %v3_249c7, 1
  %v4_249cc = trunc i32 %v1_249cc to i8
  %v5_249cf = icmp eq i8 %v4_249cc, 0
  br i1 %v5_249cf, label %dec_label_pc_249e9, label %dec_label_pc_249d3

dec_label_pc_249d3:                               ; preds = %dec_label_pc_249a9
  %v1_249df = call i32 @unknown_4e180(i32 %stack_var_-40.0124)
  %v10_249f7117 = icmp eq i32 %v1_249df, 0
  %v1_249fb118 = icmp eq i1 %v10_249f7117, false
  %v5_249fe122 = icmp eq i1 %v1_249fb118, false
  %v1_24a00123 = icmp eq i1 %v5_249fe122, false
  br i1 %v1_24a00123, label %dec_label_pc_249a9.lr.ph, label %dec_label_pc_24a02

dec_label_pc_249e9:                               ; preds = %dec_label_pc_249a9
  %v1_249ef = call i32 @unknown_4e1b0(i32 %stack_var_-40.0124)
  %v10_249f7 = icmp eq i32 %v1_249ef, 0
  %v1_249fb = icmp eq i1 %v10_249f7, false
  %v5_249fe = icmp eq i1 %v1_249fb, false
  %v1_24a00 = icmp eq i1 %v5_249fe, false
  br i1 %v1_24a00, label %dec_label_pc_249a9, label %dec_label_pc_24a02

dec_label_pc_24a02:                               ; preds = %dec_label_pc_249e9, %dec_label_pc_24978, %dec_label_pc_249d3
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_24978 ], [ %stack_var_-40.0124, %dec_label_pc_249d3 ], [ %stack_var_-44.0.ph132, %dec_label_pc_249e9 ]
  %v2_24a0f = call i32 @unknown_48d58(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_249df, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder label %dec_label_pc_24a02, { 0, 2, 1 }
  uselistorder label %dec_label_pc_249a9, { 1, 0 }
  uselistorder label %dec_label_pc_249a9.lr.ph, { 1, 0 }
}

define i32 @_ZN5boost6detail8function15functor_managerIPFvRKSsEE6manageERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeE(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24a2c:
  %edx.global-to-local = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg2 to i32
  %v10_24a52 = icmp eq i32 %arg3, 4
  %v1_24a55 = icmp eq i1 %v10_24a52, false
  br i1 %v1_24a55, label %dec_label_pc_24a70, label %dec_label_pc_24a57

dec_label_pc_24a57:                               ; preds = %dec_label_pc_24a2c
  store i32 ptrtoint (i32* @global_var_3425c.2042 to i32), i32* %arg2, align 4
  %v1_24a63 = add i32 %tmp105, 4
  %v2_24a63 = inttoptr i32 %v1_24a63 to i8*
  store i8 0, i8* %v2_24a63, align 1
  %v1_24a6a = add i32 %tmp105, 5
  %v2_24a6a = inttoptr i32 %v1_24a6a to i8*
  store i8 0, i8* %v2_24a6a, align 1
  br label %dec_label_pc_24a8e

dec_label_pc_24a70:                               ; preds = %dec_label_pc_24a2c
  %v0_24a70 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_24a70, 16777216
  %v7_24a88 = sdiv i32 %sext, 16777216
  %v8_24a88 = call i32 @unknown_4e6cf(i32 %arg1, i32 %tmp105, i32 %arg3, i32 %v7_24a88, i32 %arg3, i32 %tmp105, i32 %arg1)
  br label %dec_label_pc_24a8e

dec_label_pc_24a8e:                               ; preds = %dec_label_pc_24a70, %dec_label_pc_24a57
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24a9a

bb:                                               ; preds = %dec_label_pc_24a8e
  %v1_24a98 = call i32 @function_24a9f()
  br label %dec_label_pc_24a9a

dec_label_pc_24a9a:                               ; preds = %bb, %dec_label_pc_24a8e
  %v2_24a98 = phi i32 [ %v1_24a98, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24a8e ]
  ret i32 %v2_24a98

; uselistorder directives
  uselistorder i32 %tmp105, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24a9f() local_unnamed_addr {
dec_label_pc_24a9f:
  %v0_24aa0 = load i32, i32* @eax, align 8
  ret i32 %v0_24aa0
}

define i32 @_ZN5boost6detail8function22void_function_invoker1IPFvRKSsEvS4_E6invokeERNS1_15function_bufferES4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24aa1:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24add

bb:                                               ; preds = %dec_label_pc_24aa1
  %v2_24adb = call i32 @function_24ae2(i32 %arg2)
  br label %dec_label_pc_24add

dec_label_pc_24add:                               ; preds = %bb, %dec_label_pc_24aa1
  %v3_24adb = phi i32 [ %v2_24adb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24aa1 ]
  ret i32 %v3_24adb
}

define i32 @function_24ae2(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ae2:
  %v0_24ae3 = load i32, i32* @eax, align 8
  ret i32 %v0_24ae3
}

define i32 @_ZN5boost6detail8function13basic_vtable1IvRKSsE9assign_toIPFvS4_EEEbT_RNS1_15function_bufferE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24ae4:
  %edx.global-to-local = alloca i32, align 4
  %v0_24b07 = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_24b07, 16777216
  %v7_24b1f = sdiv i32 %sext, 16777216
  %v8_24b1f = call i32 @unknown_4e7de(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_24b1f, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_24b1f, i32* @eax, align 8
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* %edx.global-to-local, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24b30

bb:                                               ; preds = %dec_label_pc_24ae4
  %v1_24b2e = call i32 @function_24b35()
  br label %dec_label_pc_24b30

dec_label_pc_24b30:                               ; preds = %bb, %dec_label_pc_24ae4
  %v2_24b2e = phi i32 [ %v1_24b2e, %bb ], [ %v8_24b1f, %dec_label_pc_24ae4 ]
  ret i32 %v2_24b2e

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24b35() local_unnamed_addr {
dec_label_pc_24b35:
  %v0_24b36 = load i32, i32* @eax, align 8
  ret i32 %v0_24b36
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIFvRKSsEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24b38:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_24b61 = call i32 @unknown_4e89b(i32 %arg2)
  store i32 %v1_24b61, i32* %stack_var_-24, align 4
  %v2_24b69 = ptrtoint i32* %stack_var_-17 to i32
  %v2_24b70 = ptrtoint i32* %stack_var_-24 to i32
  %v3_24b7d = call i32 @unknown_4e8f2(i32 %arg1, i32 %v2_24b70, i32 %v2_24b69)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24b8e

bb:                                               ; preds = %dec_label_pc_24b38
  %v1_24b8c = call i32 @function_24b93()
  br label %dec_label_pc_24b8e

dec_label_pc_24b8e:                               ; preds = %bb, %dec_label_pc_24b38
  %v2_24b8c = phi i32 [ %v1_24b8c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24b38 ]
  ret i32 %v2_24b8c
}

define i32 @function_24b93() local_unnamed_addr {
dec_label_pc_24b93:
  %v0_24b94 = load i32, i32* @eax, align 8
  ret i32 %v0_24b94
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24b96:
  %v1_24bb3 = call i32 @unknown_4eab8(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24bc4

bb:                                               ; preds = %dec_label_pc_24b96
  %v1_24bc2 = call i32 @function_24bc9()
  br label %dec_label_pc_24bc4

dec_label_pc_24bc4:                               ; preds = %bb, %dec_label_pc_24b96
  %v2_24bc2 = phi i32 [ %v1_24bc2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24b96 ]
  ret i32 %v2_24bc2
}

define i32 @function_24bc9() local_unnamed_addr {
dec_label_pc_24bc9:
  %v0_24bca = load i32, i32* @eax, align 8
  ret i32 %v0_24bca
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24bcc:
  %v1_24be9 = call i32 @unknown_4ebc4(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24bfa

bb:                                               ; preds = %dec_label_pc_24bcc
  %v1_24bf8 = call i32 @function_24bff()
  br label %dec_label_pc_24bfa

dec_label_pc_24bfa:                               ; preds = %bb, %dec_label_pc_24bcc
  %v2_24bf8 = phi i32 [ %v1_24bf8, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24bcc ]
  ret i32 %v2_24bf8
}

define i32 @function_24bff() local_unnamed_addr {
dec_label_pc_24bff:
  %v0_24c00 = load i32, i32* @eax, align 8
  ret i32 %v0_24c00
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c02:
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_24c2d = call i32 @unknown_4ea0c(i32 %arg1, i32 %arg2)
  %v1_24c35 = add i32 %arg2, 8
  %v1_24c3b = add i32 %arg1, 8
  %v2_24c45 = call i32 @unknown_4eb82(i32 %v1_24c3b, i32 %v1_24c35)
  %v2_24c4a = ptrtoint i32* %stack_var_-48 to i32
  %v1_24c50 = call i32 @unknown_4ec68(i32 %v2_24c4a)
  %v2_24c58 = ptrtoint i32* %stack_var_-44 to i32
  %v2_24c62 = call i32 @unknown_49f32(i32 %v2_24c58, i32 %arg1)
  %v2_24c70 = ptrtoint i32* %stack_var_-40 to i32
  %v2_24c7a = call i32 @unknown_41614(i32 %v2_24c70, i32 %v1_24c3b)
  %v2_24c88 = ptrtoint i32* %stack_var_-72 to i32
  ret i32 %v2_24c88

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_24c8d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c8d:
  %v0_24c8d = load i32, i32* @eax, align 8
  %v11_24c8d = and i32 %v0_24c8d, -252
  %v1_24c92 = call i32 @unknown_4ec9c(i32 %v11_24c8d)
  %v0_24c9a = load i32, i32* @ebp, align 4
  %v1_24c9a = add i32 %v0_24c9a, -68
  %v2_24c9a = inttoptr i32 %v1_24c9a to i32*
  %v3_24c9a = load i32, i32* %v2_24c9a, align 4
  %v2_24c9d = add i32 %v0_24c9a, -44
  %v3_24c9d = inttoptr i32 %v2_24c9d to i32*
  store i32 %v3_24c9a, i32* %v3_24c9d, align 4
  %v0_24ca0 = call i32 @function_24d95()
  ret i32 %v0_24ca0
}

define i32 @function_24ca5() local_unnamed_addr {
dec_label_pc_24ca5:
  %v0_24ca5 = load i32, i32* @ebp, align 4
  %v1_24ca5 = add i32 %v0_24ca5, -60
  %v2_24ca5 = inttoptr i32 %v1_24ca5 to i32*
  %v3_24ca5 = load i32, i32* %v2_24ca5, align 4
  %v1_24ca8 = add i32 %v3_24ca5, 8
  %v1_24cab = add i32 %v0_24ca5, -16
  %v3_24cb5 = call i32 @unknown_41350(i32 %v1_24cab, i32 %v1_24ca8)
  %v0_24cbd = load i32, i32* @ebp, align 4
  %v1_24cbd = add i32 %v0_24cbd, -16
  %v1_24cc4 = add i32 %v0_24cbd, -36
  %v4_24cca = call i32 @unknown_4585e(i32 %v1_24cc4, i32 %v1_24cbd)
  %v4_24ccf = trunc i32 %v4_24cca to i8
  %v5_24ccf = icmp eq i8 %v4_24ccf, 0
  %v1_24cd1 = icmp eq i1 %v5_24ccf, false
  br i1 %v1_24cd1, label %bb, label %dec_label_pc_24cd3

bb:                                               ; preds = %dec_label_pc_24ca5
  %v2_24cd1 = call i32 @function_24cf7()
  br label %dec_label_pc_24cd3

dec_label_pc_24cd3:                               ; preds = %bb, %dec_label_pc_24ca5
  %v3_24ceb = phi i32 [ %v2_24cd1, %bb ], [ %v4_24cca, %dec_label_pc_24ca5 ]
  ret i32 %v3_24ceb
}

define i32 @function_24ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ce8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24cf7() local_unnamed_addr {
dec_label_pc_24cf7:
  %v0_24cf7 = load i32, i32* @ebp, align 4
  %v1_24cf7 = add i32 %v0_24cf7, -36
  %v1_24cfd = call i32 @unknown_45824(i32 %v1_24cf7)
  %v0_24d02 = load i32, i32* @ebp, align 4
  %v1_24d02 = add i32 %v0_24d02, -40
  %v2_24d02 = inttoptr i32 %v1_24d02 to i32*
  %v3_24d02 = load i32, i32* %v2_24d02, align 4
  %v2_24d05 = add i32 %v1_24cfd, 12
  %v3_24d05 = inttoptr i32 %v2_24d05 to i32*
  store i32 %v3_24d02, i32* %v3_24d05, align 4
  %v0_24d08 = load i32, i32* @ebp, align 4
  %v1_24d08 = add i32 %v0_24d08, -28
  %v1_24d0b = add i32 %v0_24d08, -44
  %v1_24d12 = add i32 %v0_24d08, -64
  %v2_24d12 = inttoptr i32 %v1_24d12 to i32*
  %v3_24d12 = load i32, i32* %v2_24d12, align 4
  %v3_24d1c = call i32 @unknown_4edf0(i32 %v1_24d08, i32 %v3_24d12, i32 %v1_24d0b)
  %v0_24d24 = load i32, i32* @ebp, align 4
  %v1_24d24 = add i32 %v0_24d24, -44
  %v2_24d24 = inttoptr i32 %v1_24d24 to i32*
  %v3_24d24 = load i32, i32* %v2_24d24, align 4
  %v2_24d27 = add i32 %v0_24d24, -24
  %v3_24d27 = inttoptr i32 %v2_24d27 to i32*
  store i32 %v3_24d24, i32* %v3_24d27, align 4
  %v0_24d2a = load i32, i32* @ebp, align 4
  %v1_24d2a = add i32 %v0_24d2a, -24
  %v1_24d30 = call i32 @unknown_4edb0(i32 %v1_24d2a)
  %v0_24d35 = load i32, i32* @ebp, align 4
  %v1_24d35 = add i32 %v0_24d35, -20
  %v1_24d38 = add i32 %v0_24d35, -24
  %v1_24d3f = add i32 %v0_24d35, -64
  %v2_24d3f = inttoptr i32 %v1_24d3f to i32*
  %v3_24d3f = load i32, i32* %v2_24d3f, align 4
  %v3_24d49 = call i32 @unknown_4edf0(i32 %v1_24d35, i32 %v3_24d3f, i32 %v1_24d38)
  br label %dec_label_pc_24d69

dec_label_pc_24d53:                               ; preds = %dec_label_pc_24d69
  %v1_24d53 = add i32 %v0_24d53, -28
  %v1_24d59 = call i32 @unknown_4eeec(i32 %v1_24d53)
  %v0_24d5e = load i32, i32* @ebp, align 4
  %v1_24d5e = add i32 %v0_24d5e, -40
  %v1_24d64 = call i32 @unknown_49ef8(i32 %v1_24d5e)
  br label %dec_label_pc_24d69

dec_label_pc_24d69:                               ; preds = %dec_label_pc_24d53, %dec_label_pc_24cf7
  %v0_24d69 = load i32, i32* @ebp, align 4
  %v1_24d69 = add i32 %v0_24d69, -20
  %v1_24d70 = add i32 %v0_24d69, -28
  %v2_24d76 = call i32 @unknown_4eeac(i32 %v1_24d70, i32 %v1_24d69)
  %v4_24d7b = trunc i32 %v2_24d76 to i8
  %v5_24d7b = icmp eq i8 %v4_24d7b, 0
  %v1_24d7d = icmp eq i1 %v5_24d7b, false
  %v0_24d53 = load i32, i32* @ebp, align 4
  br i1 %v1_24d7d, label %dec_label_pc_24d53, label %dec_label_pc_24d7f

dec_label_pc_24d7f:                               ; preds = %dec_label_pc_24d69
  %v1_24d7f = add i32 %v0_24d53, -44
  %v1_24d85 = call i32 @unknown_4edb0(i32 %v1_24d7f)
  %v0_24d8a = load i32, i32* @ebp, align 4
  %v1_24d8a = add i32 %v0_24d8a, -36
  %v1_24d90 = call i32 @unknown_4ed70(i32 %v1_24d8a)
  ret i32 %v1_24d90

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4edb0, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4edf0, { 1, 0 }
}

define i32 @function_24d95() local_unnamed_addr {
dec_label_pc_24d95:
  %v0_24d95 = load i32, i32* @ebp, align 4
  %v1_24d95 = add i32 %v0_24d95, -64
  %v2_24d95 = inttoptr i32 %v1_24d95 to i32*
  %v3_24d95 = load i32, i32* %v2_24d95, align 4
  %v1_24d98 = add i32 %v3_24d95, 8
  %v1_24d9b = add i32 %v0_24d95, -32
  %v2_24da5 = call i32 @unknown_4ece6(i32 %v1_24d9b, i32 %v1_24d98)
  %v0_24dad = load i32, i32* @ebp, align 4
  %v1_24dad = add i32 %v0_24dad, -32
  %v1_24db4 = add i32 %v0_24dad, -44
  %v2_24dba = call i32 @unknown_4ed30(i32 %v1_24db4, i32 %v1_24dad)
  %v4_24dbf = trunc i32 %v2_24dba to i8
  %v5_24dbf = icmp eq i8 %v4_24dbf, 0
  %v1_24dc1 = icmp eq i1 %v5_24dbf, false
  br i1 %v1_24dc1, label %bb, label %dec_label_pc_24dc7

bb:                                               ; preds = %dec_label_pc_24d95
  %v2_24dc1 = call i32 @function_24ca5()
  br label %dec_label_pc_24dc7

dec_label_pc_24dc7:                               ; preds = %bb, %dec_label_pc_24d95
  %v0_24dc7 = call i32 @function_24df2()
  ret i32 %v0_24dc7
}

define i32 @function_24dc9() local_unnamed_addr {
dec_label_pc_24dc9:
  %eax.global-to-local = alloca i32, align 4
  %v0_24dc9 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_24dc9, i32* @ebx, align 8
  %v0_24dcb = load i32, i32* @ebp, align 4
  %v1_24dcb = add i32 %v0_24dcb, -60
  %v2_24dcb = inttoptr i32 %v1_24dcb to i32*
  %v3_24dcb = load i32, i32* %v2_24dcb, align 4
  %v1_24dce = add i32 %v3_24dcb, 8
  store i32 %v1_24dce, i32* %eax.global-to-local, align 8
  %v1_24dd4 = call i32 @unknown_497ce(i32 %v1_24dce)
  store i32 %v1_24dd4, i32* %eax.global-to-local, align 8
  %v0_24dd9 = call i32 @function_24ddd()
  store i32 %v0_24dd9, i32* %eax.global-to-local, align 8
  ret i32 %v0_24dd9
}

define i32 @function_24ddb() local_unnamed_addr {
dec_label_pc_24ddb:
  %eax.global-to-local = alloca i32, align 4
  %v0_24ddb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_24ddb
}

define i32 @function_24ddd() local_unnamed_addr {
dec_label_pc_24ddd:
  %v0_24ddd = load i32, i32* @ebp, align 4
  %v1_24ddd = add i32 %v0_24ddd, -60
  %v2_24ddd = inttoptr i32 %v1_24ddd to i32*
  %v3_24ddd = load i32, i32* %v2_24ddd, align 4
  %v1_24de3 = call i32 @unknown_49798(i32 %v3_24ddd)
  %v0_24de8 = load i32, i32* @ebx, align 8
  ret i32 %v0_24de8
}

define i32 @function_24df2() local_unnamed_addr {
dec_label_pc_24df2:
  %v0_24df2 = load i32, i32* @ebp, align 4
  %v1_24df2 = add i32 %v0_24df2, -12
  %v2_24df2 = inttoptr i32 %v1_24df2 to i32*
  %v3_24df2 = load i32, i32* %v2_24df2, align 4
  %v3_24df5 = xor i32 %v3_24df2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_24df5 = icmp eq i32 %v3_24df5, 0
  store i32 %v3_24df5, i32* @eax, align 8
  br i1 %v4_24df5, label %bb, label %dec_label_pc_24dfe

bb:                                               ; preds = %dec_label_pc_24df2
  %v1_24dfc = call i32 @function_24e03()
  br label %dec_label_pc_24dfe

dec_label_pc_24dfe:                               ; preds = %bb, %dec_label_pc_24df2
  %v2_24dfc = phi i32 [ %v1_24dfc, %bb ], [ %v3_24df5, %dec_label_pc_24df2 ]
  ret i32 %v2_24dfc
}

define i32 @function_24e02(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e02:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_24e03() local_unnamed_addr {
dec_label_pc_24e03:
  %v0_24e07 = load i32, i32* @eax, align 8
  ret i32 %v0_24e07
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12grouped_listIiSt4lessIiENS0_INS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSE_EEEEENS1_5mutexEEEEEEEEC1ISM_EEPT_() local_unnamed_addr {
dec_label_pc_24e08:
  %eax.global-to-local = alloca i32, align 4
  %v17_24e0b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_24e0b
}

define i32 @function_24e0e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e0e:
  %v0_24e0e = load i32, i32* @ebp, align 4
  %v1_24e0e = add i32 %v0_24e0e, 8
  %v2_24e0e = inttoptr i32 %v1_24e0e to i32*
  %v3_24e0e = load i32, i32* %v2_24e0e, align 4
  %v2_24e11 = add i32 %v0_24e0e, -28
  %v3_24e11 = inttoptr i32 %v2_24e11 to i32*
  store i32 %v3_24e0e, i32* %v3_24e11, align 4
  %v0_24e14 = load i32, i32* @ebp, align 4
  %v1_24e14 = add i32 %v0_24e14, 12
  %v2_24e14 = inttoptr i32 %v1_24e14 to i32*
  %v3_24e14 = load i32, i32* %v2_24e14, align 4
  %v2_24e17 = add i32 %v0_24e14, -32
  %v3_24e17 = inttoptr i32 %v2_24e17 to i32*
  store i32 %v3_24e14, i32* %v3_24e17, align 4
  %v1_24e20 = load i32, i32* @ebp, align 4
  %v2_24e20 = add i32 %v1_24e20, -12
  %v3_24e20 = inttoptr i32 %v2_24e20 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_24e20, align 4
  %v0_24e25 = load i32, i32* @ebp, align 4
  %v1_24e25 = add i32 %v0_24e25, -28
  %v2_24e25 = inttoptr i32 %v1_24e25 to i32*
  %v3_24e25 = load i32, i32* %v2_24e25, align 4
  %v1_24e28 = add i32 %v0_24e25, -32
  %v2_24e28 = inttoptr i32 %v1_24e28 to i32*
  %v3_24e28 = load i32, i32* %v2_24e28, align 4
  %v2_24e2b = inttoptr i32 %v3_24e25 to i32*
  store i32 %v3_24e28, i32* %v2_24e2b, align 4
  %v0_24e2d = load i32, i32* @ebp, align 4
  %v1_24e2d = add i32 %v0_24e2d, -28
  %v2_24e2d = inttoptr i32 %v1_24e2d to i32*
  %v3_24e2d = load i32, i32* %v2_24e2d, align 4
  %v1_24e30 = add i32 %v3_24e2d, 4
  store i32 %v1_24e30, i32* @edx, align 8
  %v1_24e33 = add i32 %v0_24e2d, -32
  %v2_24e33 = inttoptr i32 %v1_24e33 to i32*
  %v3_24e33 = load i32, i32* %v2_24e33, align 4
  %v2_24e3d = call i32 @unknown_4f12c(i32 %v1_24e30, i32 %v3_24e33)
  %v0_24e42 = load i32, i32* @ebp, align 4
  %v1_24e42 = add i32 %v0_24e42, -32
  %v2_24e42 = inttoptr i32 %v1_24e42 to i32*
  %v3_24e42 = load i32, i32* %v2_24e42, align 4
  %v1_24e50 = add i32 %v0_24e42, -28
  %v2_24e50 = inttoptr i32 %v1_24e50 to i32*
  %v3_24e50 = load i32, i32* %v2_24e50, align 4
  store i32 %v3_24e50, i32* @eax, align 8
  %v3_24e56 = call i32 @function_2734d(i32 %v3_24e50, i32 %v3_24e42, i32 %v3_24e42)
  %v0_24e5b = load i32, i32* @ebp, align 4
  %v1_24e5b = add i32 %v0_24e5b, -12
  %v2_24e5b = inttoptr i32 %v1_24e5b to i32*
  %v3_24e5b = load i32, i32* %v2_24e5b, align 4
  %v3_24e5e = xor i32 %v3_24e5b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_24e5e = icmp eq i32 %v3_24e5e, 0
  store i32 %v3_24e5e, i32* @eax, align 8
  br i1 %v4_24e5e, label %bb, label %dec_label_pc_24e67

bb:                                               ; preds = %dec_label_pc_24e0e
  %v1_24e65 = call i32 @function_24e6c()
  br label %dec_label_pc_24e67

dec_label_pc_24e67:                               ; preds = %bb, %dec_label_pc_24e0e
  %v2_24e65 = phi i32 [ %v1_24e65, %bb ], [ %v3_24e5e, %dec_label_pc_24e0e ]
  ret i32 %v2_24e65

; uselistorder directives
  uselistorder i32 %v3_24e42, { 1, 0 }
}

define i32 @function_24e6c() local_unnamed_addr {
dec_label_pc_24e6c:
  %v0_24e6d = load i32, i32* @eax, align 8
  ret i32 %v0_24e6d
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEC1ISK_EEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e6e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_24e96 = add i32 %tmp104, 4
  %v2_24ea3 = call i32 @unknown_4f21e(i32 %v1_24e96, i32 %arg2)
  store i32 %tmp104, i32* @eax, align 8
  %v3_24ebc = call i32 @function_273b3(i32 %tmp104, i32 %arg2, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_24ecd

bb:                                               ; preds = %dec_label_pc_24e6e
  %v1_24ecb = call i32 @function_24ed2()
  br label %dec_label_pc_24ecd

dec_label_pc_24ecd:                               ; preds = %bb, %dec_label_pc_24e6e
  %v2_24ecb = phi i32 [ %v1_24ecb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_24e6e ]
  ret i32 %v2_24ecb

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_24ed2() local_unnamed_addr {
dec_label_pc_24ed2:
  %v0_24ed3 = load i32, i32* @eax, align 8
  ret i32 %v0_24ed3
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE4swapERSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24ed4:
  %v2_24efe = call i32 @unknown_4f30f(i32 %arg1, i32 %arg2)
  %v1_24f06 = add i32 %arg2, 4
  %v1_24f0c = add i32 %arg1, 4
  store i32 %v1_24f0c, i32* @eax, align 8
  %v2_24f16 = call i32 @function_27144(i32 %v1_24f0c, i32 %v1_24f06)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24f21(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24f21:
  %zf.global-to-local = alloca i1, align 1
  %v0_24f21 = load i32, i32* @eax, align 8
  %v1_24f21 = trunc i32 %v0_24f21 to i8
  %v2_24f21 = load i1, i1* @cf, align 1
  %v3_24f21 = zext i1 %v2_24f21 to i8
  %v4_24f21 = add i8 %v3_24f21, %v1_24f21
  %v13_24f21 = icmp eq i8 %v4_24f21, 0
  store i1 %v13_24f21, i1* %zf.global-to-local, align 1
  %v22_24f21 = zext i8 %v4_24f21 to i32
  %v24_24f21 = and i32 %v0_24f21, -256
  %v25_24f21 = or i32 %v22_24f21, %v24_24f21
  store i32 %v25_24f21, i32* @eax, align 8
  %v1_24f23 = inttoptr i32 %v25_24f21 to i8*
  %v2_24f23 = load i8, i8* %v1_24f23, align 1
  %v5_24f23 = add i8 %v2_24f23, %v4_24f21
  %v15_24f23 = icmp eq i8 %v5_24f23, 0
  store i1 %v15_24f23, i1* %zf.global-to-local, align 1
  store i8 %v5_24f23, i8* %v1_24f23, align 1
  %v0_24f25 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_24f25, label %bb, label %dec_label_pc_24f21.dec_label_pc_24f27_crit_edge

dec_label_pc_24f21.dec_label_pc_24f27_crit_edge:  ; preds = %dec_label_pc_24f21
  %v2_24f25.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_24f27

bb:                                               ; preds = %dec_label_pc_24f21
  %v1_24f25 = call i32 @function_24f2c()
  br label %dec_label_pc_24f27

dec_label_pc_24f27:                               ; preds = %dec_label_pc_24f21.dec_label_pc_24f27_crit_edge, %bb
  %v2_24f25 = phi i32 [ %v2_24f25.pre, %dec_label_pc_24f21.dec_label_pc_24f27_crit_edge ], [ %v1_24f25, %bb ]
  ret i32 %v2_24f25

; uselistorder directives
  uselistorder label %dec_label_pc_24f27, { 1, 0 }
}

define i32 @function_24f2c() local_unnamed_addr {
dec_label_pc_24f2c:
  %v0_24f2d = load i32, i32* @eax, align 8
  ret i32 %v0_24f2d
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_24f2e:
  ret i32 %arg1
}

define i32 @function_24f38(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24f38:
  %v0_24f38 = load i32, i32* @ebp, align 4
  %v1_24f38 = add i32 %v0_24f38, 1
  store i32 %v1_24f38, i32* @ebp, align 4
  %v2_24f40 = add i32 %v0_24f38, -11
  %v3_24f40 = inttoptr i32 %v2_24f40 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_24f40, align 4
  %v0_24f45 = load i32, i32* @ebp, align 4
  %v1_24f45 = add i32 %v0_24f45, -28
  %v2_24f45 = inttoptr i32 %v1_24f45 to i32*
  %v3_24f45 = load i32, i32* %v2_24f45, align 4
  %v1_24f48 = inttoptr i32 %v3_24f45 to i32*
  store i32 0, i32* %v1_24f48, align 4
  %v0_24f4e = load i32, i32* @ebp, align 4
  %v1_24f4e = add i32 %v0_24f4e, -12
  %v2_24f4e = inttoptr i32 %v1_24f4e to i32*
  %v3_24f4e = load i32, i32* %v2_24f4e, align 4
  %v3_24f51 = xor i32 %v3_24f4e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_24f51 = icmp eq i32 %v3_24f51, 0
  store i32 %v3_24f51, i32* @eax, align 8
  br i1 %v4_24f51, label %bb, label %dec_label_pc_24f5a

bb:                                               ; preds = %dec_label_pc_24f38
  %v1_24f58 = call i32 @function_24f5f()
  br label %dec_label_pc_24f5a

dec_label_pc_24f5a:                               ; preds = %bb, %dec_label_pc_24f38
  %v2_24f58 = phi i32 [ %v1_24f58, %bb ], [ %v3_24f51, %dec_label_pc_24f38 ]
  ret i32 %v2_24f58
}

define i32 @function_24f5f() local_unnamed_addr {
dec_label_pc_24f5f:
  %v0_24f60 = load i32, i32* @eax, align 8
  ret i32 %v0_24f60
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24f62:
  ret i32 %arg1
}

define i32 @function_24f87(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24f87:
  %v0_24f87 = load i32, i32* @eax, align 8
  %v11_24f87 = and i32 %v0_24f87, -252
  %v1_24f8c = call i32 @unknown_4a58e(i32 %v11_24f87)
  %v0_24f94 = load i32, i32* @ebp, align 4
  %v1_24f94 = add i32 %v0_24f94, -28
  %v2_24f94 = inttoptr i32 %v1_24f94 to i32*
  %v3_24f94 = load i32, i32* %v2_24f94, align 4
  store i32 %v3_24f94, i32* @eax, align 8
  %v1_24f97 = add i32 %v0_24f94, -12
  %v2_24f97 = inttoptr i32 %v1_24f97 to i32*
  %v3_24f97 = load i32, i32* %v2_24f97, align 4
  %v4_24f9a = icmp eq i32 %v3_24f97, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24f9a, label %bb, label %dec_label_pc_24fa3

bb:                                               ; preds = %dec_label_pc_24f87
  %v1_24fa1 = call i32 @function_24fa8()
  br label %dec_label_pc_24fa3

dec_label_pc_24fa3:                               ; preds = %bb, %dec_label_pc_24f87
  %v2_24fa1 = phi i32 [ %v1_24fa1, %bb ], [ %v3_24f94, %dec_label_pc_24f87 ]
  ret i32 %v2_24fa1
}

define i32 @function_24fa8() local_unnamed_addr {
dec_label_pc_24fa8:
  %v0_24fa9 = load i32, i32* @eax, align 8
  ret i32 %v0_24fa9
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24fac:
  ret i32 0
}

define i32 @function_24fca(i32 %arg1) local_unnamed_addr {
dec_label_pc_24fca:
  %v0_24fca = load i32, i32* @ebp, align 4
  %v1_24fca = add i32 %v0_24fca, 1
  store i32 %v1_24fca, i32* @ebp, align 4
  %v0_24fcd = load i32, i32* @ebx, align 8
  %v1_24fcd = add i32 %v0_24fcd, 9166917
  %v2_24fcd = inttoptr i32 %v1_24fcd to i8*
  %v3_24fcd = load i8, i8* %v2_24fcd, align 1
  %v4_24fcd = load i32, i32* @ecx, align 4
  %v5_24fcd = trunc i32 %v4_24fcd to i8
  %v6_24fcd = load i1, i1* @cf, align 1
  %v7_24fcd = zext i1 %v6_24fcd to i8
  %v8_24fcd = add i8 %v5_24fcd, %v3_24fcd
  %v9_24fcd = add i8 %v8_24fcd, %v7_24fcd
  store i8 %v9_24fcd, i8* %v2_24fcd, align 1
  %v0_24fd3 = load i32, i32* @edx, align 8
  %v1_24fd3 = load i32, i32* @eax, align 8
  %v12_24fd3 = icmp eq i32 %v0_24fd3, %v1_24fd3
  %v1_24fd5 = icmp eq i1 %v12_24fd3, false
  %v2_24fd5 = zext i1 %v1_24fd5 to i32
  %v4_24fd5 = and i32 %v1_24fd3, -256
  %v5_24fd5 = or i32 %v2_24fd5, %v4_24fd5
  store i32 %v5_24fd5, i32* @eax, align 8
  %v0_24fd8 = load i32, i32* @ebp, align 4
  %v1_24fd8 = add i32 %v0_24fd8, -12
  %v2_24fd8 = inttoptr i32 %v1_24fd8 to i32*
  %v3_24fd8 = load i32, i32* %v2_24fd8, align 4
  %v4_24fdb = icmp eq i32 %v3_24fd8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_24fdb, label %bb, label %dec_label_pc_24fe4

bb:                                               ; preds = %dec_label_pc_24fca
  %v1_24fe2 = call i32 @function_24fe9()
  br label %dec_label_pc_24fe4

dec_label_pc_24fe4:                               ; preds = %bb, %dec_label_pc_24fca
  %v2_24fe2 = phi i32 [ %v1_24fe2, %bb ], [ %v5_24fd5, %dec_label_pc_24fca ]
  ret i32 %v2_24fe2

; uselistorder directives
  uselistorder i32 %v1_24fd3, { 1, 0 }
}

define i32 @function_24fe9() local_unnamed_addr {
dec_label_pc_24fe9:
  %v0_24fea = load i32, i32* @eax, align 8
  ret i32 %v0_24fea
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_24fec:
  %v2_25006 = load i32, i32* %arg1, align 4
  %v1_25008 = add i32 %v2_25006, 8
  store i32 %v1_25008, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25017

bb:                                               ; preds = %dec_label_pc_24fec
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_25015 = call i32 @function_2501c(i32 %tmp100)
  br label %dec_label_pc_25017

dec_label_pc_25017:                               ; preds = %bb, %dec_label_pc_24fec
  %v3_25015 = phi i32 [ %v2_25015, %bb ], [ %v1_25008, %dec_label_pc_24fec ]
  ret i32 %v3_25015

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2501c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2501c:
  %v0_2501d = load i32, i32* @eax, align 8
  ret i32 %v0_2501d
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2501e:
  %v2_25038 = load i32, i32* %arg1, align 4
  %v1_2503a = icmp eq i32 %v2_25038, 0
  %v1_2503c = icmp eq i1 %v1_2503a, false
  br i1 %v1_2503c, label %bb, label %dec_label_pc_2503e

bb:                                               ; preds = %dec_label_pc_2501e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_2503c = call i32 @function_25062(i32 %tmp102)
  br label %dec_label_pc_2503e

dec_label_pc_2503e:                               ; preds = %bb, %dec_label_pc_2501e
  %v4_2503e = phi i32 [ %v3_2503c, %bb ], [ %v2_25038, %dec_label_pc_2501e ]
  ret i32 %v4_2503e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2504c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2504c:
  %v2_2504c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2504c = load i32, i32* @eax, align 8
  %v4_2504c = trunc i32 %v3_2504c to i8
  %v5_2504c = add i8 %v4_2504c, %v2_2504c
  %v21_2504c = inttoptr i32 %v3_2504c to i8*
  store i8 %v5_2504c, i8* %v21_2504c, align 1
  %v3_25056 = load i32, i32* @eax, align 8
  ret i32 %v3_25056
}

declare i32 @__assert_fail.1777(i32, i32) local_unnamed_addr

define i32 @function_25062(i32 %arg1) local_unnamed_addr {
dec_label_pc_25062:
  %v0_25062 = load i32, i32* @ebp, align 4
  %v1_25062 = add i32 %v0_25062, -28
  %v2_25062 = inttoptr i32 %v1_25062 to i32*
  %v3_25062 = load i32, i32* %v2_25062, align 4
  %v1_25065 = inttoptr i32 %v3_25062 to i32*
  %v2_25065 = load i32, i32* %v1_25065, align 4
  ret i32 %v2_25065
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE19nolock_slot_expiredEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2507a:
  %eax.global-to-local = alloca i32, align 4
  %v1_25094 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_25094, i32* @eax, align 8
  %v1_2509a = call i32 @function_33b9e(i32 %v1_25094)
  store i32 %v1_2509a, i32* %eax.global-to-local, align 8
  %v1_2509f = trunc i32 %v1_2509a to i8
  %v10_250a2 = icmp eq i8 %v1_2509f, 0
  br i1 %v10_250a2, label %bb, label %dec_label_pc_250a8

bb:                                               ; preds = %dec_label_pc_2507a
  %sext = mul i32 %v1_2509a, 16777216
  %v2_250a6 = sdiv i32 %sext, 16777216
  %v3_250a6 = call i32 @function_250af(i32 %v2_250a6)
  store i32 %v3_250a6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_250a8

dec_label_pc_250a8:                               ; preds = %bb, %dec_label_pc_2507a
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v1_250ab = add i32 %arg1, 4
  %v2_250ab = inttoptr i32 %v1_250ab to i8*
  store i8 0, i8* %v2_250ab, align 1
  %v3_250ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_250ab

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @function_250af, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_250af(i32 %arg1) local_unnamed_addr {
dec_label_pc_250af:
  %v0_250af = load i32, i32* @ebp, align 4
  %v1_250af = add i32 %v0_250af, -13
  %v2_250af = inttoptr i32 %v1_250af to i8*
  %v3_250af = load i8, i8* %v2_250af, align 1
  %v4_250af = zext i8 %v3_250af to i32
  store i32 %v4_250af, i32* @eax, align 8
  %v1_250b3 = add i32 %v0_250af, -12
  %v2_250b3 = inttoptr i32 %v1_250b3 to i32*
  %v3_250b3 = load i32, i32* %v2_250b3, align 4
  %v4_250b6 = icmp eq i32 %v3_250b3, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_250b6, label %bb, label %dec_label_pc_250bf

bb:                                               ; preds = %dec_label_pc_250af
  %v1_250bd = call i32 @function_250c4()
  br label %dec_label_pc_250bf

dec_label_pc_250bf:                               ; preds = %bb, %dec_label_pc_250af
  %v2_250bd = phi i32 [ %v1_250bd, %bb ], [ %v4_250af, %dec_label_pc_250af ]
  ret i32 %v2_250bd
}

define i32 @function_250c4() local_unnamed_addr {
dec_label_pc_250c4:
  %v0_250c5 = load i32, i32* @eax, align 8
  ret i32 %v0_250c5
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE9group_keyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_250c6:
  %v1_250e0 = add i32 %arg1, 68
  store i32 %v1_250e0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_250ef

bb:                                               ; preds = %dec_label_pc_250c6
  %v2_250ed = call i32 @function_250f4(i32 %arg1)
  br label %dec_label_pc_250ef

dec_label_pc_250ef:                               ; preds = %bb, %dec_label_pc_250c6
  %v3_250ed = phi i32 [ %v2_250ed, %bb ], [ %v1_250e0, %dec_label_pc_250c6 ]
  ret i32 %v3_250ed
}

define i32 @function_250f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_250f4:
  %v0_250f5 = load i32, i32* @eax, align 8
  ret i32 %v0_250f5
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_250f6:
  %stack_var_-36 = alloca i32, align 4
  %v2_25122 = ptrtoint i32* %stack_var_-36 to i32
  %v3_2512c = call i32 @unknown_4a722(i32 %v2_25122, i32 %arg2)
  %v3_25141 = call i32 @unknown_4a0a2(i32 %arg4, i32 %v2_25122)
  store i32 %v3_25141, i32* @eax, align 8
  %v4_25146 = trunc i32 %v3_25141 to i8
  %v5_25146 = icmp eq i8 %v4_25146, 0
  %v1_25148 = icmp eq i1 %v5_25146, false
  br i1 %v1_25148, label %bb, label %dec_label_pc_2514a

bb:                                               ; preds = %dec_label_pc_250f6
  %v2_25148 = call i32 @function_2516e()
  br label %dec_label_pc_2514a

dec_label_pc_2514a:                               ; preds = %bb, %dec_label_pc_250f6
  %v4_2515a = phi i32 [ %v2_25148, %bb ], [ %v3_25141, %dec_label_pc_250f6 ]
  ret i32 %v4_2515a
}

define i32 @function_25165(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25165:
  %eax.global-to-local = alloca i32, align 4
  %v0_25165 = load i32, i32* @eax, align 8
  %v5_25165 = load i1, i1* @az, align 1
  %v6_25165 = and i32 %v0_25165, 14
  %v7_25165 = icmp ugt i32 %v6_25165, 9
  %v8_25165 = or i1 %v5_25165, %v7_25165
  %v9_25165 = add i32 %v0_25165, 6
  %v11_25165 = select i1 %v8_25165, i32 %v9_25165, i32 %v0_25165
  %v15_25165 = urem i32 %v11_25165, 16
  %v18_25165 = and i32 %v0_25165, -65536
  %v19_25165 = or i32 %v15_25165, %v18_25165
  %v12_251651 = select i1 %v8_25165, i32 256, i32 0
  %v3_251652 = add i32 %v12_251651, %v0_25165
  %v22_25165 = and i32 %v3_251652, 65280
  %v24_25165 = or i32 %v19_25165, %v22_25165
  store i32 %v24_25165, i32* %eax.global-to-local, align 8
  %v1_25166 = inttoptr i32 %v24_25165 to i8*
  %v2_25166 = load i8, i8* %v1_25166, align 1
  %v4_25166 = trunc i32 %v15_25165 to i8
  %v5_25166 = sub i8 %v2_25166, %v4_25166
  store i8 %v5_25166, i8* %v1_25166, align 1
  %v0_25168 = load i32, i32* %eax.global-to-local, align 8
  %v2_25168 = load i32, i32* @ecx, align 4
  %v3_25168 = udiv i32 %v2_25168, 256
  %v5_25168 = add i32 %v3_25168, %v0_25168
  %v20_25168 = and i32 %v5_25168, 255
  %v22_25168 = and i32 %v0_25168, -256
  %v23_25168 = or i32 %v20_25168, %v22_25168
  store i32 %v23_25168, i32* %eax.global-to-local, align 8
  ret i32 %v23_25168

; uselistorder directives
  uselistorder i32 %v0_25168, { 1, 0 }
  uselistorder i32 %v0_25165, { 0, 1, 3, 4, 2 }
  uselistorder i32 65280, { 5, 0, 1, 2, 4, 3 }
}

define i32 @function_2516e() local_unnamed_addr {
dec_label_pc_2516e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25170(i32 %arg1) local_unnamed_addr {
dec_label_pc_25170:
  %v0_25170 = load i32, i32* @ebp, align 4
  %v1_25170 = add i32 %v0_25170, 1166870600
  %v2_25170 = inttoptr i32 %v1_25170 to i8*
  %v3_25170 = load i8, i8* %v2_25170, align 1
  %v4_25170 = udiv i8 %v3_25170, 2
  %v5_25170 = shl i8 %v3_25170, 7
  %v6_25170 = or i8 %v4_25170, %v5_25170
  store i8 %v6_25170, i8* %v2_25170, align 1
  %v0_2517a = load i32, i32* @edx, align 8
  %v0_2517e = load i32, i32* @ecx, align 4
  %v0_25182 = load i32, i32* @eax, align 8
  %v4_25185 = call i32 @unknown_41b52(i32 %v0_25182, i32 %v0_2517e, i32 %v0_2517a)
  %v0_2518d = load i32, i32* @ebp, align 4
  %v1_2518d = add i32 %v0_2518d, -48
  %v2_2518d = inttoptr i32 %v1_2518d to i32*
  %v3_2518d = load i32, i32* %v2_2518d, align 4
  %v1_25190 = add i32 %v3_2518d, 8
  %v1_25193 = add i32 %v0_2518d, -24
  %v3_2519d = call i32 @unknown_41844(i32 %v1_25193, i32 %v1_25190)
  %v0_251a5 = load i32, i32* @ebp, align 4
  %v1_251a5 = add i32 %v0_251a5, -24
  %v1_251ac = add i32 %v0_251a5, -28
  %v4_251b2 = call i32 @unknown_45d52(i32 %v1_251ac, i32 %v1_251a5)
  %v4_251b7 = trunc i32 %v4_251b2 to i8
  %v5_251b7 = icmp eq i8 %v4_251b7, 0
  %v1_251b9 = icmp eq i1 %v5_251b7, false
  br i1 %v1_251b9, label %bb, label %dec_label_pc_251bb

bb:                                               ; preds = %dec_label_pc_25170
  %v2_251b9 = call i32 @function_251df()
  br label %dec_label_pc_251bb

dec_label_pc_251bb:                               ; preds = %bb, %dec_label_pc_25170
  %v3_251d3 = phi i32 [ %v2_251b9, %bb ], [ %v4_251b2, %dec_label_pc_25170 ]
  ret i32 %v3_251d3

; uselistorder directives
  uselistorder i8 %v3_25170, { 1, 0 }
}

define i32 @function_251df() local_unnamed_addr {
dec_label_pc_251df:
  %v0_251df = load i32, i32* @ebp, align 4
  %v1_251df = add i32 %v0_251df, -28
  %v2_251e5 = call i32 @unknown_45d18(i32 %v1_251df)
  %v0_251ea = load i32, i32* @ebp, align 4
  %v1_251ea = add i32 %v0_251ea, -52
  %v2_251ea = inttoptr i32 %v1_251ea to i32*
  %v3_251ea = load i32, i32* %v2_251ea, align 4
  %v1_251f5 = add i32 %v0_251ea, -48
  %v2_251f5 = inttoptr i32 %v1_251f5 to i32*
  %v3_251f5 = load i32, i32* %v2_251f5, align 4
  %v5_251fb = call i32 @unknown_45c8e(i32 %v3_251f5, i32 %v2_251e5, i32 %v3_251ea)
  %v4_25200 = trunc i32 %v5_251fb to i8
  %v5_25200 = icmp eq i8 %v4_25200, 0
  %v1_25202 = icmp eq i1 %v5_25200, false
  br i1 %v1_25202, label %bb, label %dec_label_pc_25204

bb:                                               ; preds = %dec_label_pc_251df
  %v2_25202 = call i32 @function_25228()
  br label %dec_label_pc_25204

dec_label_pc_25204:                               ; preds = %bb, %dec_label_pc_251df
  %v3_2521c = phi i32 [ %v2_25202, %bb ], [ %v5_251fb, %dec_label_pc_251df ]
  ret i32 %v3_2521c
}

define i32 @function_25210() local_unnamed_addr {
dec_label_pc_25210:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25228() local_unnamed_addr {
dec_label_pc_25228:
  %v0_25228 = load i32, i32* @ebp, align 4
  %v1_25228 = add i32 %v0_25228, -28
  %v1_2522e = call i32 @unknown_45d18(i32 %v1_25228)
  %v1_25233 = add i32 %v1_2522e, 12
  %v0_25236 = load i32, i32* @ebp, align 4
  %v1_25236 = add i32 %v0_25236, -56
  %v2_25236 = inttoptr i32 %v1_25236 to i32*
  %v3_25236 = load i32, i32* %v2_25236, align 4
  %v2_25240 = call i32 @unknown_4a470(i32 %v1_25233, i32 %v3_25236)
  %v4_25245 = trunc i32 %v2_25240 to i8
  %v5_25245 = icmp eq i8 %v4_25245, 0
  br i1 %v5_25245, label %dec_label_pc_252bf, label %dec_label_pc_25249

dec_label_pc_25249:                               ; preds = %dec_label_pc_25228
  %v0_25249 = load i32, i32* @ebp, align 4
  %v1_25249 = add i32 %v0_25249, -56
  %v2_25249 = inttoptr i32 %v1_25249 to i32*
  %v3_25249 = load i32, i32* %v2_25249, align 4
  %v1_2524c = inttoptr i32 %v3_25249 to i32*
  %v2_2524c = load i32, i32* %v1_2524c, align 4
  %v2_2524e = add i32 %v0_25249, -20
  %v3_2524e = inttoptr i32 %v2_2524e to i32*
  store i32 %v2_2524c, i32* %v3_2524e, align 4
  %v0_25251 = load i32, i32* @ebp, align 4
  %v1_25251 = add i32 %v0_25251, -20
  %v1_25257 = call i32 @unknown_4a3ec(i32 %v1_25251)
  %v0_2525c = load i32, i32* @ebp, align 4
  %v1_2525c = add i32 %v0_2525c, -16
  %v1_2525f = add i32 %v0_2525c, -52
  %v2_2525f = inttoptr i32 %v1_2525f to i32*
  %v3_2525f = load i32, i32* %v2_2525f, align 4
  %v1_25266 = add i32 %v0_2525c, -48
  %v2_25266 = inttoptr i32 %v1_25266 to i32*
  %v3_25266 = load i32, i32* %v2_25266, align 4
  %v3_25270 = call i32 @unknown_4f57c(i32 %v1_2525c, i32 %v3_25266, i32 %v3_2525f)
  %v0_25278 = load i32, i32* @ebp, align 4
  %v1_25278 = add i32 %v0_25278, -16
  %v1_2527f = add i32 %v0_25278, -20
  %v2_25285 = call i32 @unknown_4a0a2(i32 %v1_2527f, i32 %v1_25278)
  %v4_2528a = trunc i32 %v2_25285 to i8
  %v5_2528a = icmp eq i8 %v4_2528a, 0
  %v0_252aa = load i32, i32* @ebp, align 4
  %v1_252aa = add i32 %v0_252aa, -48
  %v2_252aa = inttoptr i32 %v1_252aa to i32*
  %v3_252aa = load i32, i32* %v2_252aa, align 4
  %v1_252ad = add i32 %v3_252aa, 8
  br i1 %v5_2528a, label %dec_label_pc_252aa, label %dec_label_pc_2528e

dec_label_pc_2528e:                               ; preds = %dec_label_pc_25249
  %v1_25294 = add i32 %v0_252aa, -52
  %v2_25294 = inttoptr i32 %v1_25294 to i32*
  %v3_25294 = load i32, i32* %v2_25294, align 4
  %v2_2529e = call i32 @unknown_4f604(i32 %v1_252ad, i32 %v3_25294)
  %v0_252a3 = load i32, i32* @ebp, align 4
  %v1_252a3 = add i32 %v0_252a3, -20
  %v2_252a3 = inttoptr i32 %v1_252a3 to i32*
  %v3_252a3 = load i32, i32* %v2_252a3, align 4
  %v2_252a6 = inttoptr i32 %v2_2529e to i32*
  store i32 %v3_252a3, i32* %v2_252a6, align 4
  br label %dec_label_pc_252bf

dec_label_pc_252aa:                               ; preds = %dec_label_pc_25249
  %v1_252b0 = add i32 %v0_252aa, -28
  %v2_252b0 = inttoptr i32 %v1_252b0 to i32*
  %v3_252b0 = load i32, i32* %v2_252b0, align 4
  %v2_252ba = call i32 @unknown_45d92(i32 %v1_252ad, i32 %v3_252b0)
  br label %dec_label_pc_252bf

dec_label_pc_252bf:                               ; preds = %dec_label_pc_252aa, %dec_label_pc_2528e, %dec_label_pc_25228
  %v0_252bf = load i32, i32* @ebp, align 4
  %v1_252bf = add i32 %v0_252bf, -48
  %v2_252bf = inttoptr i32 %v1_252bf to i32*
  %v3_252bf = load i32, i32* %v2_252bf, align 4
  %v1_252c2 = add i32 %v0_252bf, -44
  %v2_252c2 = inttoptr i32 %v1_252c2 to i32*
  %v3_252c2 = load i32, i32* %v2_252c2, align 4
  %v1_252c5 = add i32 %v0_252bf, -56
  %v2_252c5 = inttoptr i32 %v1_252c5 to i32*
  %v3_252c5 = load i32, i32* %v2_252c5, align 4
  %v1_252c8 = inttoptr i32 %v3_252c5 to i32*
  %v2_252c8 = load i32, i32* %v1_252c8, align 4
  %v3_252d5 = call i32 @unknown_4f74a(i32 %v3_252c2, i32 %v3_252bf, i32 %v2_252c8)
  %v0_252dd = load i32, i32* @ebp, align 4
  %v1_252dd = add i32 %v0_252dd, -44
  %v2_252dd = inttoptr i32 %v1_252dd to i32*
  %v3_252dd = load i32, i32* %v2_252dd, align 4
  store i32 %v3_252dd, i32* @eax, align 8
  %v1_252e0 = add i32 %v0_252dd, -12
  %v2_252e0 = inttoptr i32 %v1_252e0 to i32*
  %v3_252e0 = load i32, i32* %v2_252e0, align 4
  %v4_252e3 = icmp eq i32 %v3_252e0, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_252e3, label %bb, label %dec_label_pc_252ec

bb:                                               ; preds = %dec_label_pc_252bf
  %v1_252ea = call i32 @function_252f1()
  br label %dec_label_pc_252ec

dec_label_pc_252ec:                               ; preds = %bb, %dec_label_pc_252bf
  %v2_252ea = phi i32 [ %v1_252ea, %bb ], [ %v3_252dd, %dec_label_pc_252bf ]
  ret i32 %v2_252ea

; uselistorder directives
  uselistorder i32 %v1_252ad, { 1, 0 }
  uselistorder i32 -56, { 67, 68, 69, 82, 70, 71, 72, 73, 74, 75, 76, 77, 84, 83, 81, 59, 0, 1, 2, 3, 4, 5, 6, 7, 8, 80, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 62, 63, 60, 61, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 64, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 53, 54, 55, 56, 57, 58, 66, 78, 79 }
  uselistorder i32 (i32)* @unknown_45d18, { 1, 0 }
}

define i32 @function_252f1() local_unnamed_addr {
dec_label_pc_252f1:
  %v0_252f2 = load i32, i32* @eax, align 8
  ret i32 %v0_252f2
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_252f6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_25310 = load i32, i32* %arg1, align 4
  %v1_25312 = inttoptr i32 %v2_25310 to i32*
  %v2_25312 = load i32, i32* %v1_25312, align 4
  store i32 %v2_25312, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25328

bb:                                               ; preds = %dec_label_pc_252f6
  %v2_25326 = call i32 @function_2532d(i32 %tmp100)
  br label %dec_label_pc_25328

dec_label_pc_25328:                               ; preds = %bb, %dec_label_pc_252f6
  %v3_25326 = phi i32 [ %v2_25326, %bb ], [ %tmp100, %dec_label_pc_252f6 ]
  ret i32 %v3_25326
}

define i32 @function_2532d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2532d:
  %v0_2532e = load i32, i32* @eax, align 8
  ret i32 %v0_2532e
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_25330:
  %v2_25350 = load i32, i32* %arg2, align 4
  %v2_2535c = call i32 @unknown_4aaac(i32 %arg1, i32 %v2_25350)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25370

bb:                                               ; preds = %dec_label_pc_25330
  %v1_2536e = call i32 @function_25375()
  br label %dec_label_pc_25370

dec_label_pc_25370:                               ; preds = %bb, %dec_label_pc_25330
  %v2_2536e = phi i32 [ %v1_2536e, %bb ], [ %arg1, %dec_label_pc_25330 ]
  ret i32 %v2_2536e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_25375() local_unnamed_addr {
dec_label_pc_25375:
  %v0_25376 = load i32, i32* @eax, align 8
  ret i32 %v0_25376
}

define i32 @_ZNKSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEeqERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2537a:
  %v2_2539a = load i32, i32* %arg1, align 4
  %v1_2539f = inttoptr i32 %arg2 to i32*
  %v2_2539f = load i32, i32* %v1_2539f, align 4
  %v12_253a1 = icmp eq i32 %v2_2539a, %v2_2539f
  %v1_253a3 = zext i1 %v12_253a1 to i32
  %v3_253a3 = and i32 %v2_2539f, -256
  %v4_253a3 = or i32 %v1_253a3, %v3_253a3
  store i32 %v4_253a3, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_253b2

bb:                                               ; preds = %dec_label_pc_2537a
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_253b0 = call i32 @function_253b7(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_253b2

dec_label_pc_253b2:                               ; preds = %bb, %dec_label_pc_2537a
  %v4_253b0 = phi i32 [ %v3_253b0, %bb ], [ %v4_253a3, %dec_label_pc_2537a ]
  ret i32 %v4_253b0

; uselistorder directives
  uselistorder i32 %v2_2539f, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_253b7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_253b7:
  %v0_253b8 = load i32, i32* @eax, align 8
  ret i32 %v0_253b8
}

define i32 @_ZN5boost9function1IvRKSsEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_253ba:
  store i32 %arg1, i32* @eax, align 8
  %v1_253dd = call i32 @function_33526(i32 %arg1)
  %v1_253e8 = call i32 @unknown_3aac2(i32 %arg1)
  %v2_253fa = call i32 @unknown_4fa70(i32 %arg1, i32 %arg2)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEEC1EPSI_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25412:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33794_type* @global_var_33794.2046 to i32), i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2544a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2544a:
  %v0_2544a = load i32, i32* @eax, align 8
  %v11_2544b = or i32 %v0_2544a, 139
  %v0_2544d = load i32, i32* @ebp, align 4
  %v1_2544d = add i32 %v0_2544d, 1
  store i32 %v1_2544d, i32* @ebp, align 4
  %v3_2544f = xor i32 %v11_2544b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2544f = icmp eq i32 %v3_2544f, 0
  store i32 %v3_2544f, i32* @eax, align 8
  br i1 %v4_2544f, label %bb, label %dec_label_pc_25458

bb:                                               ; preds = %dec_label_pc_2544a
  %v2_25456 = call i32 @function_2545d(i32 %v0_2544a)
  br label %dec_label_pc_25458

dec_label_pc_25458:                               ; preds = %bb, %dec_label_pc_2544a
  %v3_25456 = phi i32 [ %v2_25456, %bb ], [ %v3_2544f, %dec_label_pc_2544a ]
  ret i32 %v3_25456

; uselistorder directives
  uselistorder i32 %v0_2544a, { 1, 0 }
}

define i32 @function_2545d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2545d:
  %v0_2545e = load i32, i32* @eax, align 8
  ret i32 %v0_2545e
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_2545f:
  %v2_2547f = load i32, i32* %arg1, align 4
  ret i32 %v2_2547f
}

define i32 @function_25482(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25482:
  %v9_25482 = load i32, i32* @ebx, align 8
  %v10_25482 = load i32, i32* @ecx, align 4
  %v11_25482 = mul i32 %v10_25482, 4
  %v12_25482 = add i32 %v11_25482, %v9_25482
  %v13_25482 = inttoptr i32 %v12_25482 to i8*
  store i8 -1, i8* %v13_25482, align 1
  %v0_25486 = load i32, i32* @ebp, align 4
  %v1_25486 = add i32 %v0_25486, -28
  %v2_25486 = inttoptr i32 %v1_25486 to i32*
  %v3_25486 = load i32, i32* %v2_25486, align 4
  %v1_2548e = add i32 %v0_25486, -12
  %v2_2548e = inttoptr i32 %v1_2548e to i32*
  %v3_2548e = load i32, i32* %v2_2548e, align 4
  %v3_25491 = xor i32 %v3_2548e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_25491 = icmp eq i32 %v3_25491, 0
  store i32 %v3_25491, i32* @eax, align 8
  br i1 %v4_25491, label %bb, label %dec_label_pc_2549a

bb:                                               ; preds = %dec_label_pc_25482
  %v2_25498 = call i32 @function_2549f(i32 %v3_25486)
  br label %dec_label_pc_2549a

dec_label_pc_2549a:                               ; preds = %bb, %dec_label_pc_25482
  %v3_25498 = phi i32 [ %v2_25498, %bb ], [ %v3_25491, %dec_label_pc_25482 ]
  ret i32 %v3_25498
}

define i32 @function_2549f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2549f:
  %v0_254a0 = load i32, i32* @eax, align 8
  ret i32 %v0_254a0
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_254a2:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_254d3

bb:                                               ; preds = %dec_label_pc_254a2
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_254d1 = call i32 @function_254d8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_254d3

dec_label_pc_254d3:                               ; preds = %bb, %dec_label_pc_254a2
  %v4_254d1 = phi i32 [ %v3_254d1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_254a2 ]
  ret i32 %v4_254d1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_254d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_254d8:
  %v0_254d9 = load i32, i32* @eax, align 8
  ret i32 %v0_254d9
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_254da:
  %v1_254f4 = add i32 %arg1, 8
  %v2_254f4 = inttoptr i32 %v1_254f4 to i32*
  %v3_254f4 = load i32, i32* %v2_254f4, align 4
  store i32 %v3_254f4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25503

bb:                                               ; preds = %dec_label_pc_254da
  %v2_25501 = call i32 @function_25508(i32 %arg1)
  br label %dec_label_pc_25503

dec_label_pc_25503:                               ; preds = %bb, %dec_label_pc_254da
  %v3_25501 = phi i32 [ %v2_25501, %bb ], [ %v3_254f4, %dec_label_pc_254da ]
  ret i32 %v3_25501
}

define i32 @function_25508(i32 %arg1) local_unnamed_addr {
dec_label_pc_25508:
  %v0_25509 = load i32, i32* @eax, align 8
  ret i32 %v0_25509
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2550a:
  %v1_25524 = add i32 %arg1, 4
  ret i32 %v1_25524
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_upper_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2553a:
  ret i32 0
}

define i32 @function_2556e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2556e:
  %v0_2556e = load i32, i32* @eax, align 8
  %v1_25571 = call i32 @unknown_4fd8e(i32 %v0_2556e)
  %v0_25578 = load i32, i32* @ebp, align 4
  %v1_25578 = add i32 %v0_25578, -32
  %v2_25578 = inttoptr i32 %v1_25578 to i32*
  %v3_25578 = load i32, i32* %v2_25578, align 4
  %v1_2557f = add i32 %v0_25578, -44
  %v2_2557f = inttoptr i32 %v1_2557f to i32*
  %v3_2557f = load i32, i32* %v2_2557f, align 4
  store i32 %v3_2557f, i32* @edx, align 8
  %v3_25589 = call i32 @unknown_46c7a(i32 %v3_25578, i32 %v3_2557f, i32 %v1_25571)
  %v4_2558e = trunc i32 %v3_25589 to i8
  %v5_2558e = icmp eq i8 %v4_2558e, 0
  br i1 %v5_2558e, label %bb, label %dec_label_pc_25592

bb:                                               ; preds = %dec_label_pc_2556e
  %v1_25590 = call i32 @function_255a8()
  br label %dec_label_pc_25592

dec_label_pc_25592:                               ; preds = %bb, %dec_label_pc_2556e
  %v0_25592 = load i32, i32* @ebp, align 4
  %v1_25592 = add i32 %v0_25592, -36
  %v2_25592 = inttoptr i32 %v1_25592 to i32*
  %v3_25592 = load i32, i32* %v2_25592, align 4
  %v2_25595 = add i32 %v0_25592, -40
  %v3_25595 = inttoptr i32 %v2_25595 to i32*
  store i32 %v3_25592, i32* %v3_25595, align 4
  %v0_25598 = load i32, i32* @ebp, align 4
  %v1_25598 = add i32 %v0_25598, -36
  %v2_25598 = inttoptr i32 %v1_25598 to i32*
  %v3_25598 = load i32, i32* %v2_25598, align 4
  %v1_2559e = call i32 @unknown_4fdd2(i32 %v3_25598)
  ret i32 %v1_2559e
}

define x86_fp80 @function_255a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_255a4:
  %v0_255a4 = load i32, i32* @ebp, align 4
  %v1_255a4 = add i32 %v0_255a4, 1
  store i32 %v1_255a4, i32* @ebp, align 4
  %v2_255a5 = load x86_fp80, x86_fp80* @st0, align 4
  %v4_255a5 = fsub x86_fp80 %v2_255a5, %v2_255a5
  ret x86_fp80 %v4_255a5
}

define i32 @function_255a8() local_unnamed_addr {
dec_label_pc_255a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_255a8 = load i32, i32* @ebp, align 4
  %v1_255a8 = add i32 %v0_255a8, -36
  %v2_255a8 = inttoptr i32 %v1_255a8 to i32*
  %v3_255a8 = load i32, i32* %v2_255a8, align 4
  store i32 %v3_255a8, i32* %eax.global-to-local, align 8
  %v1_255ae = call i32 @unknown_4fe02(i32 %v3_255a8)
  store i32 %v1_255ae, i32* %eax.global-to-local, align 8
  %v1_255b3 = load i32, i32* @ebp, align 4
  %v2_255b3 = add i32 %v1_255b3, -36
  %v3_255b3 = inttoptr i32 %v2_255b3 to i32*
  store i32 %v1_255ae, i32* %v3_255b3, align 4
  %v0_255b6 = load i32, i32* @ebp, align 4
  %v1_255b6 = add i32 %v0_255b6, -36
  %v2_255b6 = inttoptr i32 %v1_255b6 to i32*
  %v3_255b6 = load i32, i32* %v2_255b6, align 4
  %v10_255b6 = icmp eq i32 %v3_255b6, 0
  %v1_255ba = icmp eq i1 %v10_255b6, false
  %v2_255ba = zext i1 %v1_255ba to i32
  %v3_255ba = load i32, i32* %eax.global-to-local, align 8
  %v4_255ba = and i32 %v3_255ba, -256
  %v5_255ba = or i32 %v2_255ba, %v4_255ba
  store i32 %v5_255ba, i32* %eax.global-to-local, align 8
  %v1_255c1 = add i32 %v0_255b6, -40
  %v2_255c1 = inttoptr i32 %v1_255c1 to i32*
  %v3_255c1 = load i32, i32* %v2_255c1, align 4
  store i32 %v3_255c1, i32* %eax.global-to-local, align 8
  %v1_255c8 = add i32 %v0_255b6, -28
  %v2_255c8 = inttoptr i32 %v1_255c8 to i32*
  %v3_255c8 = load i32, i32* %v2_255c8, align 4
  store i32 %v3_255c8, i32* %eax.global-to-local, align 8
  %v2_255ce = call i32 @unknown_4a9dc(i32 %v3_255c8, i32 %v3_255c1)
  store i32 %v2_255ce, i32* %eax.global-to-local, align 8
  %v0_255d3 = load i32, i32* @ebp, align 4
  %v1_255d3 = add i32 %v0_255d3, -28
  %v2_255d3 = inttoptr i32 %v1_255d3 to i32*
  %v3_255d3 = load i32, i32* %v2_255d3, align 4
  store i32 %v3_255d3, i32* @eax, align 8
  %v1_255d6 = add i32 %v0_255d3, -12
  %v2_255d6 = inttoptr i32 %v1_255d6 to i32*
  %v3_255d6 = load i32, i32* %v2_255d6, align 4
  %v3_255d9 = xor i32 %v3_255d6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_255d9 = icmp eq i32 %v3_255d9, 0
  store i32 %v3_255d9, i32* @edx, align 8
  br i1 %v4_255d9, label %bb, label %dec_label_pc_255e2

bb:                                               ; preds = %dec_label_pc_255a8
  %v1_255e0 = call i32 @function_255e7()
  store i32 %v1_255e0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_255e2

dec_label_pc_255e2:                               ; preds = %bb, %dec_label_pc_255a8
  %v3_255e0 = phi i32 [ %v1_255e0, %bb ], [ %v3_255d3, %dec_label_pc_255a8 ]
  ret i32 %v3_255e0

; uselistorder directives
  uselistorder i32 %v0_255b6, { 1, 0, 2 }
}

define i32 @function_255e7() local_unnamed_addr {
dec_label_pc_255e7:
  %v0_255e8 = load i32, i32* @eax, align 8
  ret i32 %v0_255e8
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_255ec:
  ret i32 %arg2
}

define i32 @function_25612(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25612:
  %v2_25612 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_25612 = load i32, i32* @ebx, align 8
  %v4_25612 = udiv i32 %v3_25612, 256
  %v5_25612 = trunc i32 %v4_25612 to i8
  %v6_25612 = add i8 %v5_25612, %v2_25612
  %v21_25612 = load i32, i32* @ecx, align 4
  %v22_25612 = inttoptr i32 %v21_25612 to i8*
  store i8 %v6_25612, i8* %v22_25612, align 1
  %v0_25614 = load i32, i32* @eax, align 8
  ret i32 %v0_25614
}

define i32 @function_25620(i32 %arg1) local_unnamed_addr {
dec_label_pc_25620:
  %zf.global-to-local = alloca i1, align 1
  %v2_25620 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_25620 = load i32, i32* @eax, align 8
  %v4_25620 = trunc i32 %v3_25620 to i8
  %v5_25620 = add i8 %v4_25620, %v2_25620
  %v15_25620 = icmp eq i8 %v5_25620, 0
  store i1 %v15_25620, i1* %zf.global-to-local, align 1
  %v21_25620 = inttoptr i32 %v3_25620 to i8*
  store i8 %v5_25620, i8* %v21_25620, align 1
  %v0_25622 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_25622, label %bb, label %dec_label_pc_25620.dec_label_pc_25624_crit_edge

dec_label_pc_25620.dec_label_pc_25624_crit_edge:  ; preds = %dec_label_pc_25620
  %v2_25622.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25624

bb:                                               ; preds = %dec_label_pc_25620
  %v1_25622 = call i32 @function_25629()
  br label %dec_label_pc_25624

dec_label_pc_25624:                               ; preds = %dec_label_pc_25620.dec_label_pc_25624_crit_edge, %bb
  %v2_25622 = phi i32 [ %v2_25622.pre, %dec_label_pc_25620.dec_label_pc_25624_crit_edge ], [ %v1_25622, %bb ]
  ret i32 %v2_25622

; uselistorder directives
  uselistorder label %dec_label_pc_25624, { 1, 0 }
}

define i32 @function_25629() local_unnamed_addr {
dec_label_pc_25629:
  %v0_2562a = load i32, i32* @eax, align 8
  ret i32 %v0_2562a
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2562c:
  ret i32 0
}

define i32 @function_2564a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2564a:
  %v0_2564a = load i32, i32* @ebp, align 4
  %v1_2564a = add i32 %v0_2564a, 1
  store i32 %v1_2564a, i32* @ebp, align 4
  %v0_2564b = load i32, i32* @ecx, align 4
  %v1_2564b = add i32 %v0_2564b, -1
  store i32 %v1_2564b, i32* @ecx, align 4
  %v1_25650 = add i32 %v0_2564a, -27
  %v2_25650 = inttoptr i32 %v1_25650 to i32*
  %v3_25650 = load i32, i32* %v2_25650, align 4
  %v1_25656 = call i32 @unknown_4ada8(i32 %v3_25650)
  %v0_2565b = load i32, i32* @ebp, align 4
  %v1_2565b = add i32 %v0_2565b, -28
  %v2_2565b = inttoptr i32 %v1_2565b to i32*
  %v3_2565b = load i32, i32* %v2_2565b, align 4
  store i32 %v3_2565b, i32* @eax, align 8
  %v1_2565e = add i32 %v0_2565b, -12
  %v2_2565e = inttoptr i32 %v1_2565e to i32*
  %v3_2565e = load i32, i32* %v2_2565e, align 4
  %v4_25661 = icmp eq i32 %v3_2565e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_25661, label %bb, label %dec_label_pc_2566a

bb:                                               ; preds = %dec_label_pc_2564a
  %v1_25668 = call i32 @function_2566f()
  br label %dec_label_pc_2566a

dec_label_pc_2566a:                               ; preds = %bb, %dec_label_pc_2564a
  %v3_25668 = phi i32 [ %v1_25668, %bb ], [ %v3_2565b, %dec_label_pc_2564a ]
  ret i32 %v3_25668
}

define i32 @function_2566f() local_unnamed_addr {
dec_label_pc_2566f:
  %v0_25670 = load i32, i32* @eax, align 8
  ret i32 %v0_25670
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_25674:
  %v2_2568e = load i32, i32* %arg1, align 4
  %v1_25690 = add i32 %v2_2568e, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_25696 = call i32 @unknown_4ff6c(i32 %v1_25690)
  store i32 %v1_25696, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_256a7

bb:                                               ; preds = %dec_label_pc_25674
  %v1_256a5 = call i32 @function_256ac()
  br label %dec_label_pc_256a7

dec_label_pc_256a7:                               ; preds = %bb, %dec_label_pc_25674
  %v2_256a5 = phi i32 [ %v1_256a5, %bb ], [ %v1_25696, %dec_label_pc_25674 ]
  ret i32 %v2_256a5
}

define i32 @function_256ac() local_unnamed_addr {
dec_label_pc_256ac:
  %v0_256ad = load i32, i32* @eax, align 8
  ret i32 %v0_256ad
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE14_M_create_nodeERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_256ae:
  %stack_var_-17 = alloca i32, align 4
  %v1_256d2 = call i32 @unknown_4ffd4(i32 %arg1)
  %v1_256dd = add i32 %v1_256d2, 8
  %v1_256e3 = call i32 @unknown_5009f(i32 %v1_256dd)
  %v2_256ed = ptrtoint i32* %stack_var_-17 to i32
  %v2_256f7 = call i32 @unknown_5001a(i32 %v2_256ed, i32 %arg1)
  %v3_25710 = call i32 @unknown_500cc(i32 %v2_256ed, i32 %v1_256e3, i32 %arg2)
  %v1_2571b = call i32 @unknown_5006a(i32 %v2_256ed)
  store i32 %v1_256d2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2572f

bb:                                               ; preds = %dec_label_pc_256ae
  %v1_2572d = call i32 @function_25777()
  store i32 %v1_2572d, i32* @eax, align 8
  br label %dec_label_pc_2572f

dec_label_pc_2572f:                               ; preds = %bb, %dec_label_pc_256ae
  %v0_2572f = call i32 @function_25772()
  ret i32 %v0_2572f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25731() local_unnamed_addr {
dec_label_pc_25731:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_25731 = load i32, i32* %eax.global-to-local, align 8
  %v0_25733 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25733 = add i32 %v0_25733, -13
  store i32 %v1_25733, i32* %eax.global-to-local, align 8
  %v1_25739 = call i32 @unknown_5006a(i32 %v1_25733)
  store i32 %v0_25731, i32* @eax, align 8
  %v0_25740 = call i32 @function_25753()
  store i32 %v0_25740, i32* %eax.global-to-local, align 8
  ret i32 %v0_25740

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5006a, { 1, 0 }
}

define i32 @function_25743() local_unnamed_addr {
dec_label_pc_25743:
  %eax.global-to-local = alloca i32, align 4
  %v0_25743 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_25743
}

define i32 @function_25753() local_unnamed_addr {
dec_label_pc_25753:
  %v3_25753 = load i32, i32* @eax, align 8
  ret i32 %v3_25753
}

define i32 @function_25772() local_unnamed_addr {
dec_label_pc_25772:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25777() local_unnamed_addr {
dec_label_pc_25777:
  %v0_2577b = load i32, i32* @eax, align 8
  ret i32 %v0_2577b
}

define i32 @_ZNSt14_List_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEC1EPNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2577c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_257ad

bb:                                               ; preds = %dec_label_pc_2577c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_257ab = call i32 @function_257b2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_257ad

dec_label_pc_257ad:                               ; preds = %bb, %dec_label_pc_2577c
  %v4_257ab = phi i32 [ %v3_257ab, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2577c ]
  ret i32 %v4_257ab

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_257b2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_257b2:
  %v0_257b3 = load i32, i32* @eax, align 8
  ret i32 %v0_257b3
}

define i32 @_ZSt11__addressofISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEPT_RSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_257b4:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_257da

bb:                                               ; preds = %dec_label_pc_257b4
  %v2_257d8 = call i32 @function_257df(i32 %arg1)
  br label %dec_label_pc_257da

dec_label_pc_257da:                               ; preds = %bb, %dec_label_pc_257b4
  %v3_257d8 = phi i32 [ %v2_257d8, %bb ], [ %arg1, %dec_label_pc_257b4 ]
  ret i32 %v3_257d8
}

define i32 @function_257df(i32 %arg1) local_unnamed_addr {
dec_label_pc_257df:
  %v0_257e0 = load i32, i32* @eax, align 8
  ret i32 %v0_257e0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5eraseESt17_Rb_tree_iteratorISN_E() local_unnamed_addr {
dec_label_pc_257e2:
  %eax.global-to-local = alloca i32, align 4
  %v17_257e5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_257e5
}

define i32 @function_257ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_257ea:
  %v0_257ea = load i32, i32* @ecx, align 4
  %v1_257ea = add i32 %v0_257ea, 1166795845
  %v2_257ea = inttoptr i32 %v1_257ea to i8*
  %v3_257ea = load i8, i8* %v2_257ea, align 1
  %v5_257ea = trunc i32 %v0_257ea to i8
  %v6_257ea = or i8 %v3_257ea, %v5_257ea
  store i8 %v6_257ea, i8* %v2_257ea, align 1
  %v0_257f2 = load i32, i32* @ebp, align 4
  %v1_257f2 = add i32 %v0_257f2, 1
  store i32 %v1_257f2, i32* @ebp, align 4
  %v2_257fa = add i32 %v0_257f2, -11
  %v3_257fa = inttoptr i32 %v2_257fa to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_257fa, align 4
  %v0_257ff = load i32, i32* @ebp, align 4
  %v1_257ff = add i32 %v0_257ff, -32
  %v1_25806 = add i32 %v0_257ff, -16
  %v2_2580c = call i32 @unknown_46208(i32 %v1_25806, i32 %v1_257ff)
  %v0_25811 = load i32, i32* @ebp, align 4
  %v1_25811 = add i32 %v0_25811, -16
  %v2_25811 = inttoptr i32 %v1_25811 to i32*
  %v3_25811 = load i32, i32* %v2_25811, align 4
  %v1_25818 = add i32 %v0_25811, -28
  %v2_25818 = inttoptr i32 %v1_25818 to i32*
  %v3_25818 = load i32, i32* %v2_25818, align 4
  %v2_2581e = call i32 @unknown_502a6(i32 %v3_25818, i32 %v3_25811)
  %v0_25823 = load i32, i32* @ebp, align 4
  %v1_25823 = add i32 %v0_25823, -12
  %v2_25823 = inttoptr i32 %v1_25823 to i32*
  %v3_25823 = load i32, i32* %v2_25823, align 4
  %v3_25826 = xor i32 %v3_25823, ptrtoint ([3 x i8]* @3 to i32)
  %v4_25826 = icmp eq i32 %v3_25826, 0
  store i32 %v3_25826, i32* @eax, align 8
  br i1 %v4_25826, label %bb, label %dec_label_pc_2582f

bb:                                               ; preds = %dec_label_pc_257ea
  %v1_2582d = call i32 @function_25834()
  br label %dec_label_pc_2582f

dec_label_pc_2582f:                               ; preds = %bb, %dec_label_pc_257ea
  %v3_2582d = phi i32 [ %v1_2582d, %bb ], [ %v3_25826, %dec_label_pc_257ea ]
  ret i32 %v3_2582d
}

define i32 @function_25834() local_unnamed_addr {
dec_label_pc_25834:
  %v0_25835 = load i32, i32* @eax, align 8
  ret i32 %v0_25835
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25836:
  ret i32 0
}

define i32 @function_2585e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2585e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2585e = load i32, i32* @eax, align 8
  %v2_2585e = add i32 %v0_2585e, 36
  %v16_2585e = and i32 %v2_2585e, 255
  %v18_2585e = and i32 %v0_2585e, -256
  %v19_2585e = or i32 %v16_2585e, %v18_2585e
  store i32 %v19_2585e, i32* %eax.global-to-local, align 8
  %v0_25860 = call i32 @unknown_4ad10()
  store i32 %v0_25860, i32* %eax.global-to-local, align 8
  %v1_25865 = load i32, i32* @ebp, align 4
  %v2_25865 = add i32 %v1_25865, -28
  %v3_25865 = inttoptr i32 %v2_25865 to i32*
  store i32 %v0_25860, i32* %v3_25865, align 4
  %v0_25868 = load i32, i32* @ebp, align 4
  %v1_25868 = add i32 %v0_25868, -64
  %v2_25868 = inttoptr i32 %v1_25868 to i32*
  %v3_25868 = load i32, i32* %v2_25868, align 4
  store i32 %v3_25868, i32* %eax.global-to-local, align 8
  %v1_2586e = call i32 @unknown_4ad40(i32 %v3_25868)
  store i32 %v1_2586e, i32* %eax.global-to-local, align 8
  %v1_25873 = load i32, i32* @ebp, align 4
  %v2_25873 = add i32 %v1_25873, -24
  %v3_25873 = inttoptr i32 %v2_25873 to i32*
  store i32 %v1_2586e, i32* %v3_25873, align 4
  %v0_25876 = load i32, i32* @ebp, align 4
  %v1_25876 = add i32 %v0_25876, -13
  %v2_25876 = inttoptr i32 %v1_25876 to i8*
  store i8 1, i8* %v2_25876, align 1
  %v0_2587a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2587a

; uselistorder directives
  uselistorder i32 %v0_2585e, { 1, 0 }
}

define i32 @function_2588e() local_unnamed_addr {
dec_label_pc_2588e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2588e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2588e
}

define i32 @function_2589b() local_unnamed_addr {
dec_label_pc_2589b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2589b = load i32, i32* %eax.global-to-local, align 8
  %v11_2589b = and i32 %v0_2589b, -24
  store i32 %v11_2589b, i32* %eax.global-to-local, align 8
  ret i32 %v11_2589b

; uselistorder directives
  uselistorder i32 %v11_2589b, { 1, 0 }
}

define i32 @function_258ae() local_unnamed_addr {
dec_label_pc_258ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_258ae = load i32, i32* %eax.global-to-local, align 8
  %v11_258ae = and i32 %v0_258ae, -24
  store i32 %v11_258ae, i32* %eax.global-to-local, align 8
  ret i32 %v11_258ae

; uselistorder directives
  uselistorder i32 %v11_258ae, { 1, 0 }
}

define i32 @function_258c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_258c8:
  %v0_258c8 = call i32 @function_258d5()
  ret i32 %v0_258c8
}

define i32 @function_258ca() local_unnamed_addr {
dec_label_pc_258ca:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_258ca = add i32 %tmp91, -28
  %v2_258ca = inttoptr i32 %v1_258ca to i32*
  %v3_258ca = load i32, i32* %v2_258ca, align 4
  %v1_258d0 = call i32 @unknown_500fe(i32 %v3_258ca)
  ret i32 %v1_258d0
}

define i32 @function_258d5() local_unnamed_addr {
dec_label_pc_258d5:
  %v0_258d5 = load i32, i32* @eax, align 8
  %v1_258d5 = load i32, i32* @ebp, align 4
  %v2_258d5 = add i32 %v1_258d5, -28
  %v3_258d5 = inttoptr i32 %v2_258d5 to i32*
  store i32 %v0_258d5, i32* %v3_258d5, align 4
  %v0_258d8 = load i32, i32* @ebp, align 4
  %v1_258e3 = add i32 %v0_258d8, -24
  %v2_258e3 = inttoptr i32 %v1_258e3 to i32*
  %v3_258e3 = load i32, i32* %v2_258e3, align 4
  %v1_258ea = add i32 %v0_258d8, -44
  %v2_258f0 = call i32 @unknown_4acd8(i32 %v1_258ea, i32 %v3_258e3)
  %v0_258f5 = load i32, i32* @ebp, align 4
  %v1_258f5 = add i32 %v0_258f5, -13
  %v2_258f5 = inttoptr i32 %v1_258f5 to i8*
  %v3_258f5 = load i8, i8* %v2_258f5, align 1
  %v10_258f5 = icmp eq i8 %v3_258f5, 0
  br i1 %v10_258f5, label %bb, label %dec_label_pc_258ff

bb:                                               ; preds = %dec_label_pc_258d5
  %v1_258f9 = call i32 @function_25981()
  br label %dec_label_pc_258ff

dec_label_pc_258ff:                               ; preds = %bb, %dec_label_pc_258d5
  %v3_258f9 = phi i32 [ %v1_258f9, %bb ], [ %v2_258f0, %dec_label_pc_258d5 ]
  ret i32 %v3_258f9

; uselistorder directives
  uselistorder i32 %v0_258d8, { 1, 0 }
}

define i32 @function_25900(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25900:
  %v0_25900 = load i32, i32* @ebp, align 4
  %v1_25900 = add i32 %v0_25900, 1
  store i32 %v1_25900, i32* @ebp, align 4
  %v0_25907 = load i32, i32* @eax, align 8
  %v11_25907 = and i32 %v0_25907, -252
  %v1_2590c = call i32 @unknown_46600(i32 %v11_25907)
  %v0_25914 = load i32, i32* @ebp, align 4
  %v1_25914 = add i32 %v0_25914, -40
  %v1_2591b = add i32 %v0_25914, -44
  %v2_25921 = call i32 @unknown_46514(i32 %v1_2591b, i32 %v1_25914)
  %v4_25926 = trunc i32 %v2_25921 to i8
  %v5_25926 = icmp eq i8 %v4_25926, 0
  %v0_25976 = load i32, i32* @ebp, align 4
  br i1 %v5_25926, label %dec_label_pc_25976, label %dec_label_pc_2592a

dec_label_pc_2592a:                               ; preds = %dec_label_pc_25900
  %v1_2592a = add i32 %v0_25976, -17
  %v2_2592a = inttoptr i32 %v1_2592a to i8*
  store i8 1, i8* %v2_2592a, align 1
  %v0_2592e = load i32, i32* @ebp, align 4
  %v1_2592e = add i32 %v0_2592e, -36
  %v1_25931 = add i32 %v0_2592e, -68
  %v2_25931 = inttoptr i32 %v1_25931 to i32*
  %v3_25931 = load i32, i32* %v2_25931, align 4
  %v1_25938 = add i32 %v0_2592e, -24
  %v2_25938 = inttoptr i32 %v1_25938 to i32*
  %v3_25938 = load i32, i32* %v2_25938, align 4
  %v1_2593f = add i32 %v0_2592e, -28
  %v2_2593f = inttoptr i32 %v1_2593f to i32*
  %v3_2593f = load i32, i32* %v2_2593f, align 4
  %v1_25946 = add i32 %v0_2592e, -64
  %v2_25946 = inttoptr i32 %v1_25946 to i32*
  %v3_25946 = load i32, i32* %v2_25946, align 4
  %v5_25950 = call i32 @unknown_50398(i32 %v1_2592e, i32 %v3_25946, i32 %v3_2593f, i32 %v3_25938, i32 %v3_25931)
  %v0_25958 = load i32, i32* @ebp, align 4
  %v1_25958 = add i32 %v0_25958, -17
  %v1_2595f = add i32 %v0_25958, -36
  %v1_25966 = add i32 %v0_25958, -60
  %v2_25966 = inttoptr i32 %v1_25966 to i32*
  %v3_25966 = load i32, i32* %v2_25966, align 4
  %v3_2596c = call i32 @unknown_5049a(i32 %v3_25966, i32 %v1_2595f, i32 %v1_25958)
  ret i32 %v3_2596c

dec_label_pc_25976:                               ; preds = %dec_label_pc_25900
  %v1_25976 = add i32 %v0_25976, -44
  %v1_2597c = call i32 @unknown_504e6(i32 %v1_25976)
  ret i32 %v1_2597c

; uselistorder directives
  uselistorder i32 %v0_2592e, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_25976, { 1, 0 }
}

define i32 @function_25981() local_unnamed_addr {
dec_label_pc_25981:
  %v0_25981 = load i32, i32* @ebp, align 4
  %v1_25981 = add i32 %v0_25981, -68
  %v2_25981 = inttoptr i32 %v1_25981 to i32*
  %v3_25981 = load i32, i32* %v2_25981, align 4
  %v1_25988 = add i32 %v0_25981, -16
  %v2_2598e = call i32 @unknown_50364(i32 %v1_25988, i32 %v3_25981)
  store i32 %v2_2598e, i32* @ebx, align 8
  %v0_25995 = load i32, i32* @ebp, align 4
  %v1_25995 = add i32 %v0_25995, -44
  %v2_25995 = inttoptr i32 %v1_25995 to i32*
  %v3_25995 = load i32, i32* %v2_25995, align 4
  %v1_2599b = call i32 @unknown_50525(i32 %v3_25995)
  %v0_259a2 = load i32, i32* @ebp, align 4
  %v1_259a2 = add i32 %v0_259a2, -64
  %v2_259a2 = inttoptr i32 %v1_259a2 to i32*
  %v3_259a2 = load i32, i32* %v2_259a2, align 4
  %v0_259a5 = load i32, i32* @ebx, align 8
  %v3_259b0 = call i32 @unknown_46f76(i32 %v3_259a2, i32 %v1_2599b, i32 %v0_259a5)
  %v4_259b5 = trunc i32 %v3_259b0 to i8
  %v5_259b5 = icmp eq i8 %v4_259b5, 0
  %v0_25a02 = load i32, i32* @ebp, align 4
  br i1 %v5_259b5, label %dec_label_pc_25a02, label %dec_label_pc_259b9

dec_label_pc_259b9:                               ; preds = %dec_label_pc_25981
  %v1_259b9 = add i32 %v0_25a02, -15
  %v2_259b9 = inttoptr i32 %v1_259b9 to i8*
  store i8 1, i8* %v2_259b9, align 1
  %v0_259bd = load i32, i32* @ebp, align 4
  %v1_259bd = add i32 %v0_259bd, -32
  %v1_259c0 = add i32 %v0_259bd, -68
  %v2_259c0 = inttoptr i32 %v1_259c0 to i32*
  %v3_259c0 = load i32, i32* %v2_259c0, align 4
  %v1_259c7 = add i32 %v0_259bd, -24
  %v2_259c7 = inttoptr i32 %v1_259c7 to i32*
  %v3_259c7 = load i32, i32* %v2_259c7, align 4
  %v1_259ce = add i32 %v0_259bd, -28
  %v2_259ce = inttoptr i32 %v1_259ce to i32*
  %v3_259ce = load i32, i32* %v2_259ce, align 4
  %v1_259d5 = add i32 %v0_259bd, -64
  %v2_259d5 = inttoptr i32 %v1_259d5 to i32*
  %v3_259d5 = load i32, i32* %v2_259d5, align 4
  %v5_259df = call i32 @unknown_50398(i32 %v1_259bd, i32 %v3_259d5, i32 %v3_259ce, i32 %v3_259c7, i32 %v3_259c0)
  %v0_259e7 = load i32, i32* @ebp, align 4
  %v1_259e7 = add i32 %v0_259e7, -15
  %v1_259ee = add i32 %v0_259e7, -32
  %v1_259f5 = add i32 %v0_259e7, -60
  %v2_259f5 = inttoptr i32 %v1_259f5 to i32*
  %v3_259f5 = load i32, i32* %v2_259f5, align 4
  %v3_259fb = call i32 @unknown_5049a(i32 %v3_259f5, i32 %v1_259ee, i32 %v1_259e7)
  br label %dec_label_pc_25a1f

dec_label_pc_25a02:                               ; preds = %dec_label_pc_25981
  %v1_25a02 = add i32 %v0_25a02, -14
  %v2_25a02 = inttoptr i32 %v1_25a02 to i8*
  store i8 0, i8* %v2_25a02, align 1
  %v0_25a06 = load i32, i32* @ebp, align 4
  %v1_25a06 = add i32 %v0_25a06, -14
  %v1_25a0d = add i32 %v0_25a06, -44
  %v1_25a14 = add i32 %v0_25a06, -60
  %v2_25a14 = inttoptr i32 %v1_25a14 to i32*
  %v3_25a14 = load i32, i32* %v2_25a14, align 4
  %v3_25a1a = call i32 @unknown_5049a(i32 %v3_25a14, i32 %v1_25a0d, i32 %v1_25a06)
  br label %dec_label_pc_25a1f

dec_label_pc_25a1f:                               ; preds = %dec_label_pc_25a02, %dec_label_pc_259b9
  %v0_25a1f = load i32, i32* @ebp, align 4
  %v1_25a1f = add i32 %v0_25a1f, -60
  %v2_25a1f = inttoptr i32 %v1_25a1f to i32*
  %v3_25a1f = load i32, i32* %v2_25a1f, align 4
  store i32 %v3_25a1f, i32* @eax, align 8
  %v1_25a22 = add i32 %v0_25a1f, -12
  %v2_25a22 = inttoptr i32 %v1_25a22 to i32*
  %v3_25a22 = load i32, i32* %v2_25a22, align 4
  %v4_25a25 = icmp eq i32 %v3_25a22, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_25a25, label %bb, label %dec_label_pc_25a2e

bb:                                               ; preds = %dec_label_pc_25a1f
  %v1_25a2c = call i32 @function_25a33()
  br label %dec_label_pc_25a2e

dec_label_pc_25a2e:                               ; preds = %bb, %dec_label_pc_25a1f
  %v2_25a2c = phi i32 [ %v1_25a2c, %bb ], [ %v3_25a1f, %dec_label_pc_25a1f ]
  ret i32 %v2_25a2c

; uselistorder directives
  uselistorder i32 %v0_259bd, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_25a02, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_5049a, { 1, 0, 2 }
}

define i32 @function_25a33() local_unnamed_addr {
dec_label_pc_25a33:
  %v0_25a33 = load i32, i32* @ebp, align 4
  %v1_25a33 = add i32 %v0_25a33, -4
  %v2_25a33 = inttoptr i32 %v1_25a33 to i32*
  %v3_25a33 = load i32, i32* %v2_25a33, align 4
  store i32 %v3_25a33, i32* @ebx, align 8
  %v0_25a37 = load i32, i32* @eax, align 8
  ret i32 %v0_25a37
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25a3a:
  ret i32 0
}

define i32 @function_25aac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25aac:
  %st0.global-to-local = alloca x86_fp80, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_25aac = load i32, i32* @ebp, align 4
  %v1_25aac = add i32 %v0_25aac, 1
  store i32 %v1_25aac, i32* @ebp, align 4
  %v1_25aad = load i32, i32* @ecx, align 4
  %v2_25aad = add i32 %v1_25aad, 1290281988
  %v3_25aad = inttoptr i32 %v2_25aad to double*
  %v4_25aad = load double, double* %v3_25aad, align 4
  %v5_25aad = fpext double %v4_25aad to x86_fp80
  %v6_25aad = load x86_fp80, x86_fp80* @st0, align 4
  %v7_25aad = fmul x86_fp80 %v5_25aad, %v6_25aad
  store x86_fp80 %v7_25aad, x86_fp80* %st0.global-to-local, align 4
  %v0_25ab3 = load i32, i32* @eax, align 8
  %v2_25ab3 = and i32 %v0_25ab3, 2
  %v3_25ab3 = icmp eq i32 %v2_25ab3, 0
  store i1 %v3_25ab3, i1* %zf.global-to-local, align 1
  %v1_25ab5 = add i32 %v1_25aad, 2105793605
  %v2_25ab5 = inttoptr i32 %v1_25ab5 to i8*
  %v3_25ab5 = load i8, i8* %v2_25ab5, align 1
  %v5_25ab5 = trunc i32 %v1_25aad to i8
  %v6_25ab5 = add i8 %v3_25ab5, %v5_25ab5
  %v16_25ab5 = icmp eq i8 %v6_25ab5, 0
  store i1 %v16_25ab5, i1* %zf.global-to-local, align 1
  store i8 %v6_25ab5, i8* %v2_25ab5, align 1
  %v3_25abb = load double, double* bitcast (i32* @eax to double*), align 8
  %v4_25abb = fpext double %v3_25abb to x86_fp80
  %v5_25abb = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_25abb = fadd x86_fp80 %v4_25abb, %v5_25abb
  store x86_fp80 %v6_25abb, x86_fp80* %st0.global-to-local, align 4
  %v0_25abd = load i1, i1* %zf.global-to-local, align 1
  %v1_25abd = icmp eq i1 %v0_25abd, false
  %v5_25ac0 = icmp eq i1 %v1_25abd, false
  store i1 %v5_25ac0, i1* %zf.global-to-local, align 1
  %v0_25ac4 = load i32, i32* @ebp, align 4
  %v1_25ac4 = add i32 %v0_25ac4, -40
  %v2_25ac4 = inttoptr i32 %v1_25ac4 to i32*
  %v3_25ac4 = load i32, i32* %v2_25ac4, align 4
  %v1_25acb = add i32 %v0_25ac4, -28
  %v2_25acb = inttoptr i32 %v1_25acb to i32*
  %v3_25acb = load i32, i32* %v2_25acb, align 4
  %v2_25ad1 = call i32 @unknown_4aedc(i32 %v3_25acb, i32 %v3_25ac4)
  %v0_25ad6 = load i32, i32* @ebp, align 4
  %v1_25ad6 = add i32 %v0_25ad6, -28
  %v2_25ad6 = inttoptr i32 %v1_25ad6 to i32*
  %v3_25ad6 = load i32, i32* %v2_25ad6, align 4
  store i32 %v3_25ad6, i32* @eax, align 8
  %v1_25ad9 = add i32 %v0_25ad6, -12
  %v2_25ad9 = inttoptr i32 %v1_25ad9 to i32*
  %v3_25ad9 = load i32, i32* %v2_25ad9, align 4
  %v4_25adc = icmp eq i32 %v3_25ad9, ptrtoint ([3 x i8]* @3 to i32)
  store i1 %v4_25adc, i1* %zf.global-to-local, align 1
  br i1 %v4_25adc, label %bb, label %dec_label_pc_25ae5

bb:                                               ; preds = %dec_label_pc_25aac
  %v1_25ae3 = call i32 @function_25aea()
  br label %dec_label_pc_25ae5

dec_label_pc_25ae5:                               ; preds = %bb, %dec_label_pc_25aac
  %v4_25ae3 = phi i32 [ %v1_25ae3, %bb ], [ %v3_25ad6, %dec_label_pc_25aac ]
  ret i32 %v4_25ae3

; uselistorder directives
  uselistorder i1 %v4_25adc, { 1, 0 }
  uselistorder i32 %v1_25aad, { 1, 0, 2 }
}

define i32 @function_25aea() local_unnamed_addr {
dec_label_pc_25aea:
  %v0_25aeb = load i32, i32* @eax, align 8
  ret i32 %v0_25aeb
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8weak_ptrIvEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25aee:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25b14

bb:                                               ; preds = %dec_label_pc_25aee
  %v2_25b12 = call i32 @function_25b19(i32 %arg1)
  br label %dec_label_pc_25b14

dec_label_pc_25b14:                               ; preds = %bb, %dec_label_pc_25aee
  %v3_25b12 = phi i32 [ %v2_25b12, %bb ], [ %arg1, %dec_label_pc_25aee ]
  ret i32 %v3_25b12
}

define i32 @function_25b19(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b19:
  %v0_25b1a = load i32, i32* @eax, align 8
  ret i32 %v0_25b1a
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25b1c:
  %tmp107 = ptrtoint i32* %arg2 to i32
  %v2_25b48 = load i32, i32* %arg2, align 4
  %v7_25b5b = call i32 @unknown_50850(i32 %arg1, i32 %v2_25b48, i32 %arg3, i32 %arg4, i32 %arg3, i32 %tmp107, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25b72

bb:                                               ; preds = %dec_label_pc_25b1c
  %v1_25b70 = call i32 @function_25b77()
  br label %dec_label_pc_25b72

dec_label_pc_25b72:                               ; preds = %bb, %dec_label_pc_25b1c
  %v2_25b70 = phi i32 [ %v1_25b70, %bb ], [ %arg1, %dec_label_pc_25b1c ]
  ret i32 %v2_25b70

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 3, 1 }
}

define i32 @function_25b77() local_unnamed_addr {
dec_label_pc_25b77:
  %v0_25b78 = load i32, i32* @eax, align 8
  ret i32 %v0_25b78
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8weak_ptrIvEEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b7b:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25ba1

bb:                                               ; preds = %dec_label_pc_25b7b
  %v2_25b9f = call i32 @function_25ba6(i32 %arg1)
  br label %dec_label_pc_25ba1

dec_label_pc_25ba1:                               ; preds = %bb, %dec_label_pc_25b7b
  %v3_25b9f = phi i32 [ %v2_25b9f, %bb ], [ %arg1, %dec_label_pc_25b7b ]
  ret i32 %v3_25b9f
}

define i32 @function_25ba6(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ba6:
  %v0_25ba7 = load i32, i32* @eax, align 8
  ret i32 %v0_25ba7
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitINS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25ba8:
  %v1_25bd7 = call i32 @unknown_50966(i32 %arg3)
  %v4_25bf5 = call i32 @unknown_4b6c4(i32 %arg1, i32 %arg2, i32 %v1_25bd7, i32 1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25c0c

bb:                                               ; preds = %dec_label_pc_25ba8
  %v1_25c0a = call i32 @function_25c11()
  br label %dec_label_pc_25c0c

dec_label_pc_25c0c:                               ; preds = %bb, %dec_label_pc_25ba8
  %v2_25c0a = phi i32 [ %v1_25c0a, %bb ], [ %arg1, %dec_label_pc_25ba8 ]
  ret i32 %v2_25c0a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_25c11() local_unnamed_addr {
dec_label_pc_25c11:
  %v0_25c12 = load i32, i32* @eax, align 8
  ret i32 %v0_25c12
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail21foreign_void_weak_ptrEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c15:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25c3b

bb:                                               ; preds = %dec_label_pc_25c15
  %v2_25c39 = call i32 @function_25c40(i32 %arg1)
  br label %dec_label_pc_25c3b

dec_label_pc_25c3b:                               ; preds = %bb, %dec_label_pc_25c15
  %v3_25c39 = phi i32 [ %v2_25c39, %bb ], [ %arg1, %dec_label_pc_25c15 ]
  ret i32 %v3_25c39
}

define i32 @function_25c40(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c40:
  %v0_25c41 = load i32, i32* @eax, align 8
  ret i32 %v0_25c41
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25c42:
  %tmp107 = ptrtoint i32* %arg2 to i32
  %v2_25c6e = load i32, i32* %arg2, align 4
  %v7_25c81 = call i32 @unknown_50a30(i32 %arg1, i32 %v2_25c6e, i32 %arg3, i32 %arg4, i32 %arg3, i32 %tmp107, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25c98

bb:                                               ; preds = %dec_label_pc_25c42
  %v1_25c96 = call i32 @function_25c9d()
  br label %dec_label_pc_25c98

dec_label_pc_25c98:                               ; preds = %bb, %dec_label_pc_25c42
  %v2_25c96 = phi i32 [ %v1_25c96, %bb ], [ %arg1, %dec_label_pc_25c42 ]
  ret i32 %v2_25c96

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 3, 1 }
}

define i32 @function_25c9d() local_unnamed_addr {
dec_label_pc_25c9d:
  %v0_25c9e = load i32, i32* @eax, align 8
  ret i32 %v0_25c9e
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail21foreign_void_weak_ptrEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ca1:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25cc7

bb:                                               ; preds = %dec_label_pc_25ca1
  %v2_25cc5 = call i32 @function_25ccc(i32 %arg1)
  br label %dec_label_pc_25cc7

dec_label_pc_25cc7:                               ; preds = %bb, %dec_label_pc_25ca1
  %v3_25cc5 = phi i32 [ %v2_25cc5, %bb ], [ %arg1, %dec_label_pc_25ca1 ]
  ret i32 %v3_25cc5
}

define i32 @function_25ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ccc:
  %v0_25ccd = load i32, i32* @eax, align 8
  ret i32 %v0_25ccd
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitINS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_EERKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25cce:
  %v1_25cfd = call i32 @unknown_50b46(i32 %arg3)
  %v4_25d1b = call i32 @unknown_4b910(i32 %arg1, i32 %arg2, i32 %v1_25cfd, i32 1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25d32

bb:                                               ; preds = %dec_label_pc_25cce
  %v1_25d30 = call i32 @function_25d37()
  br label %dec_label_pc_25d32

dec_label_pc_25d32:                               ; preds = %bb, %dec_label_pc_25cce
  %v2_25d30 = phi i32 [ %v1_25d30, %bb ], [ %arg1, %dec_label_pc_25cce ]
  ret i32 %v2_25d30

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_25d37() local_unnamed_addr {
dec_label_pc_25d37:
  %v0_25d38 = load i32, i32* @eax, align 8
  ret i32 %v0_25d38
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_10shared_ptrIvEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d3b:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25d61

bb:                                               ; preds = %dec_label_pc_25d3b
  %v2_25d5f = call i32 @function_25d66(i32 %arg1)
  br label %dec_label_pc_25d61

dec_label_pc_25d61:                               ; preds = %bb, %dec_label_pc_25d3b
  %v3_25d5f = phi i32 [ %v2_25d5f, %bb ], [ %arg1, %dec_label_pc_25d3b ]
  ret i32 %v3_25d5f
}

define i32 @function_25d66(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d66:
  %v0_25d67 = load i32, i32* @eax, align 8
  ret i32 %v0_25d67
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_10shared_ptrIvEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25d68:
  %v2_25d8e = load i32, i32* %arg1, align 4
  %v2_25d9b = call i32 @function_266ce(i32 8, i32 %v2_25d8e)
  store i32 %v2_25d9b, i32* @eax, align 8
  %v1_25da0 = icmp eq i32 %v2_25d9b, 0
  br i1 %v1_25da0, label %dec_label_pc_25db3, label %dec_label_pc_25da4

dec_label_pc_25da4:                               ; preds = %dec_label_pc_25d68
  %v2_25dae = call i32 @function_34b5a(i32 %v2_25d9b, i32 %arg2)
  br label %dec_label_pc_25db3

dec_label_pc_25db3:                               ; preds = %dec_label_pc_25da4, %dec_label_pc_25d68
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25dbf

bb:                                               ; preds = %dec_label_pc_25db3
  %v1_25dbd = call i32 @function_25dc4()
  br label %dec_label_pc_25dbf

dec_label_pc_25dbf:                               ; preds = %bb, %dec_label_pc_25db3
  %v2_25dbd = phi i32 [ %v1_25dbd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_25db3 ]
  ret i32 %v2_25dbd
}

define i32 @function_25dc4() local_unnamed_addr {
dec_label_pc_25dc4:
  %v0_25dc5 = load i32, i32* @eax, align 8
  ret i32 %v0_25dc5
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_10shared_ptrIvEEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25dc6:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25dec

bb:                                               ; preds = %dec_label_pc_25dc6
  %v2_25dea = call i32 @function_25df1(i32 %arg1)
  br label %dec_label_pc_25dec

dec_label_pc_25dec:                               ; preds = %bb, %dec_label_pc_25dc6
  %v3_25dea = phi i32 [ %v2_25dea, %bb ], [ %arg1, %dec_label_pc_25dc6 ]
  ret i32 %v3_25dea
}

define i32 @function_25df1(i32 %arg1) local_unnamed_addr {
dec_label_pc_25df1:
  %v0_25df2 = load i32, i32* @eax, align 8
  ret i32 %v0_25df2
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_10shared_ptrIvEEEEvRKNS1_13backup_holderIT_EEl(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25df4:
  %ebx.global-to-local = alloca i32, align 4
  %v1_25e1e = call i32 @unknown_50c9c(i32 %arg2)
  store i32 %v1_25e1e, i32* %ebx.global-to-local, align 8
  %v2_25e28 = load i32, i32* %arg1, align 4
  %v2_25e35 = call i32 @function_2675a(i32 8, i32 %v2_25e28)
  store i32 %v2_25e35, i32* @eax, align 8
  %v1_25e3a = icmp eq i32 %v2_25e35, 0
  br i1 %v1_25e3a, label %dec_label_pc_25e4a, label %dec_label_pc_25e3e

dec_label_pc_25e3e:                               ; preds = %dec_label_pc_25df4
  %v0_25e3e = load i32, i32* %ebx.global-to-local, align 8
  %v2_25e45 = call i32 @function_34be6(i32 %v2_25e35, i32 %v0_25e3e)
  br label %dec_label_pc_25e4a

dec_label_pc_25e4a:                               ; preds = %dec_label_pc_25e3e, %dec_label_pc_25df4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25e56

bb:                                               ; preds = %dec_label_pc_25e4a
  %v1_25e54 = call i32 @function_25e5b()
  br label %dec_label_pc_25e56

dec_label_pc_25e56:                               ; preds = %bb, %dec_label_pc_25e4a
  %v2_25e54 = phi i32 [ %v1_25e54, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_25e4a ]
  ret i32 %v2_25e54
}

define i32 @function_25e5b() local_unnamed_addr {
dec_label_pc_25e5b:
  %v0_25e60 = load i32, i32* @eax, align 8
  ret i32 %v0_25e60
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail23foreign_void_shared_ptrEEERKT_PKv() local_unnamed_addr {
dec_label_pc_25e61:
  %eax.global-to-local = alloca i32, align 4
  %v17_25e64 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_25e64
}

define i32 @function_25e68(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e68:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_25e68 = load i32, i32* @ebp, align 4
  %v1_25e68 = add i32 %v0_25e68, 1
  store i32 %v1_25e68, i32* @ebp, align 4
  %v0_25e69 = load i32, i32* @ecx, align 4
  %v1_25e69 = add i32 %v0_25e69, -1587157947
  %v2_25e69 = inttoptr i32 %v1_25e69 to i8*
  %v3_25e69 = load i8, i8* %v2_25e69, align 1
  %v5_25e69 = trunc i32 %v0_25e69 to i8
  %v6_25e69 = or i8 %v3_25e69, %v5_25e69
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_25e69, i8* %v2_25e69, align 1
  %v0_25e6f = load i32, i32* @eax, align 8
  %v1_25e6f = trunc i32 %v0_25e6f to i8
  %v2_25e6f = load i1, i1* %cf.global-to-local, align 1
  %v3_25e6f = zext i1 %v2_25e6f to i8
  %v4_25e6f = add i8 %v3_25e6f, %v1_25e6f
  %v19_25e6f = icmp ule i8 %v4_25e6f, %v1_25e6f
  %v21_25e6f = icmp eq i1 %v2_25e6f, %v19_25e6f
  store i1 %v21_25e6f, i1* %cf.global-to-local, align 1
  %v22_25e6f = zext i8 %v4_25e6f to i32
  %v24_25e6f = and i32 %v0_25e6f, -256
  %v25_25e6f = or i32 %v22_25e6f, %v24_25e6f
  store i32 %v25_25e6f, i32* %eax.global-to-local, align 8
  %v1_25e71 = inttoptr i32 %v25_25e6f to i8*
  %v2_25e71 = load i8, i8* %v1_25e71, align 1
  %v5_25e71 = add i8 %v2_25e71, %v4_25e6f
  store i8 %v5_25e71, i8* %v1_25e71, align 1
  %v0_25e73 = load i32, i32* %eax.global-to-local, align 8
  %v1_25e73 = load i32, i32* @ebp, align 4
  %v2_25e73 = add i32 %v1_25e73, -12
  %v3_25e73 = inttoptr i32 %v2_25e73 to i32*
  store i32 %v0_25e73, i32* %v3_25e73, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_25e78 = load i32, i32* @ebp, align 4
  %v1_25e78 = add i32 %v0_25e78, -28
  %v2_25e78 = inttoptr i32 %v1_25e78 to i32*
  %v3_25e78 = load i32, i32* %v2_25e78, align 4
  store i32 %v3_25e78, i32* @eax, align 8
  %v1_25e7b = add i32 %v0_25e78, -12
  %v2_25e7b = inttoptr i32 %v1_25e7b to i32*
  %v3_25e7b = load i32, i32* %v2_25e7b, align 4
  %v3_25e7e = xor i32 %v3_25e7b, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_25e7e = icmp eq i32 %v3_25e7e, 0
  store i32 %v3_25e7e, i32* @edx, align 8
  br i1 %v4_25e7e, label %bb, label %dec_label_pc_25e87

bb:                                               ; preds = %dec_label_pc_25e68
  %v1_25e85 = call i32 @function_25e8c()
  store i32 %v1_25e85, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_25e87

dec_label_pc_25e87:                               ; preds = %bb, %dec_label_pc_25e68
  %v2_25e85 = phi i32 [ %v1_25e85, %bb ], [ %v3_25e78, %dec_label_pc_25e68 ]
  ret i32 %v2_25e85

; uselistorder directives
  uselistorder i8 %v4_25e6f, { 0, 2, 1 }
  uselistorder i8 %v1_25e6f, { 1, 0 }
}

define i32 @function_25e8c() local_unnamed_addr {
dec_label_pc_25e8c:
  %v0_25e8d = load i32, i32* @eax, align 8
  ret i32 %v0_25e8d
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25e8e:
  ret i32 %arg3
}

define i32 @function_25eaa(i32 %arg1) local_unnamed_addr {
dec_label_pc_25eaa:
  %v1_25eaf = load i32, i32* @ebp, align 4
  %v2_25eaf = add i32 %v1_25eaf, -28
  %v3_25eaf = inttoptr i32 %v2_25eaf to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_25eaf, align 4
  %v0_25eb4 = load i32, i32* @ebp, align 4
  %v1_25eb4 = add i32 %v0_25eb4, -44
  %v2_25eb4 = inttoptr i32 %v1_25eb4 to i32*
  %v3_25eb4 = load i32, i32* %v2_25eb4, align 4
  store i32 %v3_25eb4, i32* @eax, align 8
  %v1_25eb7 = inttoptr i32 %v3_25eb4 to i32*
  %v2_25eb7 = load i32, i32* %v1_25eb7, align 4
  %v2_25ec4 = call i32 @function_267f4(i32 4, i32 %v2_25eb7)
  store i32 %v2_25ec4, i32* @ebx, align 8
  %v1_25ecb = icmp eq i32 %v2_25ec4, 0
  br i1 %v1_25ecb, label %bb, label %dec_label_pc_25ecf

bb:                                               ; preds = %dec_label_pc_25eaa
  %v1_25ecd = call i32 @function_25ef8()
  br label %dec_label_pc_25ecf

dec_label_pc_25ecf:                               ; preds = %bb, %dec_label_pc_25eaa
  %v0_25ecf = load i32, i32* @ebp, align 4
  %v1_25ecf = add i32 %v0_25ecf, -48
  %v2_25ecf = inttoptr i32 %v1_25ecf to i32*
  %v3_25ecf = load i32, i32* %v2_25ecf, align 4
  store i32 %v3_25ecf, i32* @eax, align 8
  %v2_25ed9 = call i32 @function_34782(i32 %v2_25ec4, i32 %v3_25ecf)
  ret i32 %v2_25ed9
}

define i32 @function_25ede(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25ede:
  %v0_25ede = call i32 @function_25ef8()
  ret i32 %v0_25ede

; uselistorder directives
  uselistorder i32 ()* @function_25ef8, { 1, 0 }
}

define i32 @function_25ef8() local_unnamed_addr {
dec_label_pc_25ef8:
  %v0_25ef8 = load i32, i32* @ebp, align 4
  %v1_25ef8 = add i32 %v0_25ef8, -28
  %v2_25ef8 = inttoptr i32 %v1_25ef8 to i32*
  %v3_25ef8 = load i32, i32* %v2_25ef8, align 4
  %v3_25efb = xor i32 %v3_25ef8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_25efb = icmp eq i32 %v3_25efb, 0
  store i32 %v3_25efb, i32* @eax, align 8
  br i1 %v4_25efb, label %bb, label %dec_label_pc_25f04

bb:                                               ; preds = %dec_label_pc_25ef8
  %v1_25f02 = call i32 @function_25f09()
  br label %dec_label_pc_25f04

dec_label_pc_25f04:                               ; preds = %bb, %dec_label_pc_25ef8
  %v2_25f02 = phi i32 [ %v1_25f02, %bb ], [ %v3_25efb, %dec_label_pc_25ef8 ]
  ret i32 %v2_25f02
}

define i32 @function_25f09() local_unnamed_addr {
dec_label_pc_25f09:
  %v0_25f10 = load i32, i32* @eax, align 8
  ret i32 %v0_25f10
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f11:
  ret i32 %arg1
}

define i32 @function_25f2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f2e:
  %v0_25f2e = load i32, i32* @edx, align 8
  %v4_25f2e = icmp eq i32 %v0_25f2e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_25f2e, label %bb, label %dec_label_pc_25f2e.dec_label_pc_25f37_crit_edge

dec_label_pc_25f2e.dec_label_pc_25f37_crit_edge:  ; preds = %dec_label_pc_25f2e
  %v2_25f35.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_25f37

bb:                                               ; preds = %dec_label_pc_25f2e
  %v1_25f35 = call i32 @function_25f3c()
  br label %dec_label_pc_25f37

dec_label_pc_25f37:                               ; preds = %dec_label_pc_25f2e.dec_label_pc_25f37_crit_edge, %bb
  %v2_25f35 = phi i32 [ %v2_25f35.pre, %dec_label_pc_25f2e.dec_label_pc_25f37_crit_edge ], [ %v1_25f35, %bb ]
  ret i32 %v2_25f35

; uselistorder directives
  uselistorder label %dec_label_pc_25f37, { 1, 0 }
}

define i32 @function_25f3c() local_unnamed_addr {
dec_label_pc_25f3c:
  %v0_25f3d = load i32, i32* @eax, align 8
  ret i32 %v0_25f3d
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25f3e:
  %v1_25f6a = call i32 @unknown_50e16(i32 %arg2)
  ret i32 %v1_25f6a
}

define i32 @function_25f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f70:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_25f71() local_unnamed_addr {
dec_label_pc_25f71:
  %v0_25f71 = load i32, i32* @ebp, align 4
  %v1_25f71 = add i32 %v0_25f71, -44
  %v2_25f71 = inttoptr i32 %v1_25f71 to i32*
  %v3_25f71 = load i32, i32* %v2_25f71, align 4
  %v1_25f88 = icmp eq i32 %v3_25f71, 0
  br i1 %v1_25f88, label %bb, label %dec_label_pc_25f8c

bb:                                               ; preds = %dec_label_pc_25f71
  %v1_25f74 = inttoptr i32 %v3_25f71 to i32*
  %v2_25f74 = load i32, i32* %v1_25f74, align 4
  %v3_25f8a = call i32 @function_25fb2(i32 4, i32 %v2_25f74)
  br label %dec_label_pc_25f8c

dec_label_pc_25f8c:                               ; preds = %bb, %dec_label_pc_25f71
  %v0_25f8c = load i32, i32* @edi, align 8
  %v2_25f93 = call i32 @unknown_34832(i32 %v3_25f71, i32 %v0_25f8c)
  %v2_25f98 = call i32 @function_25fb2(i32 %v3_25f71, i32 %v0_25f8c)
  ret i32 %v2_25f98

; uselistorder directives
  uselistorder i32 %v3_25f71, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_25fb2, { 1, 0 }
}

define i32 @function_25fa8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25fa8:
  %v0_25fa8 = load i32, i32* @edi, align 8
  ret i32 %v0_25fa8
}

define i32 @function_25fb2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25fb2:
  %v0_25fb2 = load i32, i32* @ebp, align 4
  %v1_25fb2 = add i32 %v0_25fb2, -28
  %v2_25fb2 = inttoptr i32 %v1_25fb2 to i32*
  %v3_25fb2 = load i32, i32* %v2_25fb2, align 4
  %v3_25fb5 = xor i32 %v3_25fb2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_25fb5 = icmp eq i32 %v3_25fb5, 0
  store i32 %v3_25fb5, i32* @eax, align 8
  br i1 %v4_25fb5, label %bb, label %dec_label_pc_25fbe

bb:                                               ; preds = %dec_label_pc_25fb2
  %v1_25fbc = call i32 @function_25fc3()
  br label %dec_label_pc_25fbe

dec_label_pc_25fbe:                               ; preds = %bb, %dec_label_pc_25fb2
  %v2_25fbc = phi i32 [ %v1_25fbc, %bb ], [ %v3_25fb5, %dec_label_pc_25fb2 ]
  ret i32 %v2_25fbc
}

define i32 @function_25fc3() local_unnamed_addr {
dec_label_pc_25fc3:
  %v0_25fca = load i32, i32* @eax, align 8
  ret i32 %v0_25fca
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_10shared_ptrIvEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25fcb:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_25ff1

bb:                                               ; preds = %dec_label_pc_25fcb
  %v2_25fef = call i32 @function_25ff6(i32 %arg1)
  br label %dec_label_pc_25ff1

dec_label_pc_25ff1:                               ; preds = %bb, %dec_label_pc_25fcb
  %v3_25fef = phi i32 [ %v2_25fef, %bb ], [ %arg1, %dec_label_pc_25fcb ]
  ret i32 %v3_25fef
}

define i32 @function_25ff6(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ff6:
  %v0_25ff7 = load i32, i32* @eax, align 8
  ret i32 %v0_25ff7
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_10shared_ptrIvEEEEvRT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ff8:
  ret i32 %arg1
}

define i32 @function_26023() local_unnamed_addr {
dec_label_pc_26023:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26025 = load i32, i32* %ebx.global-to-local, align 8
  %v1_26025 = add i32 %v0_26025, 862319685
  %v2_26025 = inttoptr i32 %v1_26025 to i8*
  %v3_26025 = load i8, i8* %v2_26025, align 1
  %v4_26025 = load i32, i32* %ecx.global-to-local, align 4
  %v5_26025 = trunc i32 %v4_26025 to i8
  %v6_26025 = add i8 %v5_26025, %v3_26025
  store i8 %v6_26025, i8* %v2_26025, align 1
  %v0_2602b = load i32, i32* %eax.global-to-local, align 8
  %v1_2602b = add i32 %v0_2602b, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_2602b = icmp eq i32 %v1_2602b, 0
  store i32 %v1_2602b, i32* @eax, align 8
  br i1 %v10_2602b, label %bb, label %dec_label_pc_26032

bb:                                               ; preds = %dec_label_pc_26023
  %v1_26030 = call i32 @function_26037()
  store i32 %v1_26030, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_26032

dec_label_pc_26032:                               ; preds = %bb, %dec_label_pc_26023
  %v2_26030 = phi i32 [ %v1_26030, %bb ], [ %v1_2602b, %dec_label_pc_26023 ]
  ret i32 %v2_26030
}

define i32 @function_26037() local_unnamed_addr {
dec_label_pc_26037:
  %v0_26038 = load i32, i32* @eax, align 8
  ret i32 %v0_26038
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_10shared_ptrIvEEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26039:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2605f

bb:                                               ; preds = %dec_label_pc_26039
  %v2_2605d = call i32 @function_26064(i32 %arg1)
  br label %dec_label_pc_2605f

dec_label_pc_2605f:                               ; preds = %bb, %dec_label_pc_26039
  %v3_2605d = phi i32 [ %v2_2605d, %bb ], [ %arg1, %dec_label_pc_26039 ]
  ret i32 %v3_2605d
}

define i32 @function_26064(i32 %arg1) local_unnamed_addr {
dec_label_pc_26064:
  %v0_26065 = load i32, i32* @eax, align 8
  ret i32 %v0_26065
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_10shared_ptrIvEEEEEEvRT_i() local_unnamed_addr {
dec_label_pc_26066:
  %eax.global-to-local = alloca i32, align 4
  %v17_26069 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_26069
}

define i32 @function_2606e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2606e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2606e = load i32, i32* @ecx, align 4
  %v1_2606e = add i32 %v0_2606e, 1166795845
  %v2_2606e = inttoptr i32 %v1_2606e to i8*
  %v3_2606e = load i8, i8* %v2_2606e, align 1
  %v5_2606e = trunc i32 %v0_2606e to i8
  %v6_2606e = or i8 %v3_2606e, %v5_2606e
  store i8 %v6_2606e, i8* %v2_2606e, align 1
  %v0_26074 = load i32, i32* @eax, align 8
  %v2_26074 = or i32 %v0_26074, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_26074, i32* %eax.global-to-local, align 8
  %v0_26077 = load i32, i32* @ecx, align 4
  %v1_26077 = add i32 %v0_26077, 255
  %v1_2607a = add i32 %v0_26077, -1587159996
  %v2_2607a = inttoptr i32 %v1_2607a to i8*
  %v3_2607a = load i8, i8* %v2_2607a, align 1
  %v5_2607a = trunc i32 %v1_26077 to i8
  %v8_2607a = add i8 %v3_2607a, %v5_2607a
  %v28_2607a = icmp ult i8 %v8_2607a, %v3_2607a
  store i1 %v28_2607a, i1* %cf.global-to-local, align 1
  store i8 %v8_2607a, i8* %v2_2607a, align 1
  %v0_26080 = load i32, i32* %eax.global-to-local, align 8
  %v1_26080 = trunc i32 %v0_26080 to i8
  %v2_26080 = load i1, i1* %cf.global-to-local, align 1
  %v3_26080 = zext i1 %v2_26080 to i8
  %v4_26080 = add i8 %v3_26080, %v1_26080
  %v19_26080 = icmp ule i8 %v4_26080, %v1_26080
  %v21_26080 = icmp eq i1 %v2_26080, %v19_26080
  store i1 %v21_26080, i1* %cf.global-to-local, align 1
  %v22_26080 = zext i8 %v4_26080 to i32
  %v24_26080 = and i32 %v0_26080, -256
  %v25_26080 = or i32 %v22_26080, %v24_26080
  store i32 %v25_26080, i32* %eax.global-to-local, align 8
  ret i32 %v25_26080

; uselistorder directives
  uselistorder i8 %v4_26080, { 1, 0 }
  uselistorder i8 %v1_26080, { 1, 0 }
  uselistorder i8 %v3_2607a, { 1, 0 }
}

define i32 @function_26082(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26082:
  %v2_26082 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26082 = load i32, i32* @eax, align 8
  %v4_26082 = trunc i32 %v3_26082 to i8
  %v5_26082 = add i8 %v4_26082, %v2_26082
  %v21_26082 = inttoptr i32 %v3_26082 to i8*
  store i8 %v5_26082, i8* %v21_26082, align 1
  %v0_26084 = load i32, i32* @eax, align 8
  %v1_26084 = load i32, i32* @ebp, align 4
  %v2_26084 = add i32 %v1_26084, -12
  %v3_26084 = inttoptr i32 %v2_26084 to i32*
  store i32 %v0_26084, i32* %v3_26084, align 4
  %v0_26089 = load i32, i32* @ebp, align 4
  %v1_26089 = add i32 %v0_26089, -32
  %v2_26089 = inttoptr i32 %v1_26089 to i32*
  %v3_26089 = load i32, i32* %v2_26089, align 4
  %v1_2608f = call i32 @unknown_50f6e(i32 %v3_26089)
  %v0_26094 = load i32, i32* @ebp, align 4
  %v1_26094 = add i32 %v0_26094, -12
  %v2_26094 = inttoptr i32 %v1_26094 to i32*
  %v3_26094 = load i32, i32* %v2_26094, align 4
  %v3_26097 = xor i32 %v3_26094, ptrtoint ([3 x i8]* @3 to i32)
  %v4_26097 = icmp eq i32 %v3_26097, 0
  store i32 %v3_26097, i32* @eax, align 8
  br i1 %v4_26097, label %bb, label %dec_label_pc_260a0

bb:                                               ; preds = %dec_label_pc_26082
  %v1_2609e = call i32 @function_260a5()
  br label %dec_label_pc_260a0

dec_label_pc_260a0:                               ; preds = %bb, %dec_label_pc_26082
  %v2_2609e = phi i32 [ %v1_2609e, %bb ], [ %v3_26097, %dec_label_pc_26082 ]
  ret i32 %v2_2609e
}

define i32 @function_260a5() local_unnamed_addr {
dec_label_pc_260a5:
  %v0_260a6 = load i32, i32* @eax, align 8
  ret i32 %v0_260a6
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail23foreign_void_shared_ptrEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_260a7:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_260cd

bb:                                               ; preds = %dec_label_pc_260a7
  %v2_260cb = call i32 @function_260d2(i32 %arg1)
  br label %dec_label_pc_260cd

dec_label_pc_260cd:                               ; preds = %bb, %dec_label_pc_260a7
  %v3_260cb = phi i32 [ %v2_260cb, %bb ], [ %arg1, %dec_label_pc_260a7 ]
  ret i32 %v3_260cb
}

define i32 @function_260d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_260d2:
  %v0_260d3 = load i32, i32* @eax, align 8
  ret i32 %v0_260d3
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_8signals26detail23foreign_void_shared_ptrEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_260d4:
  store i32 %arg2, i32* @eax, align 8
  %v1_260fd = call i32 @function_34a16(i32 %arg2)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_26108(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26108:
  %zf.global-to-local = alloca i1, align 1
  %v0_26108 = load i32, i32* @eax, align 8
  %v1_26108 = trunc i32 %v0_26108 to i8
  %v2_26108 = load i1, i1* @cf, align 1
  %v3_26108 = zext i1 %v2_26108 to i8
  %v4_26108 = add i8 %v3_26108, %v1_26108
  %v13_26108 = icmp eq i8 %v4_26108, 0
  store i1 %v13_26108, i1* %zf.global-to-local, align 1
  %v22_26108 = zext i8 %v4_26108 to i32
  %v24_26108 = and i32 %v0_26108, -256
  %v25_26108 = or i32 %v22_26108, %v24_26108
  store i32 %v25_26108, i32* @eax, align 8
  %v1_2610a = inttoptr i32 %v25_26108 to i8*
  %v2_2610a = load i8, i8* %v1_2610a, align 1
  %v5_2610a = add i8 %v2_2610a, %v4_26108
  %v15_2610a = icmp eq i8 %v5_2610a, 0
  store i1 %v15_2610a, i1* %zf.global-to-local, align 1
  store i8 %v5_2610a, i8* %v1_2610a, align 1
  %v0_2610c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2610c, label %bb, label %dec_label_pc_26108.dec_label_pc_2610e_crit_edge

dec_label_pc_26108.dec_label_pc_2610e_crit_edge:  ; preds = %dec_label_pc_26108
  %v2_2610c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2610e

bb:                                               ; preds = %dec_label_pc_26108
  %v1_2610c = call i32 @function_26113()
  br label %dec_label_pc_2610e

dec_label_pc_2610e:                               ; preds = %dec_label_pc_26108.dec_label_pc_2610e_crit_edge, %bb
  %v2_2610c = phi i32 [ %v2_2610c.pre, %dec_label_pc_26108.dec_label_pc_2610e_crit_edge ], [ %v1_2610c, %bb ]
  ret i32 %v2_2610c

; uselistorder directives
  uselistorder label %dec_label_pc_2610e, { 1, 0 }
}

define i32 @function_26113() local_unnamed_addr {
dec_label_pc_26113:
  %v0_26114 = load i32, i32* @eax, align 8
  ret i32 %v0_26114
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26115:
  ret i32 %arg1
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_8signals26detail23foreign_void_shared_ptrEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26142:
  %v1_2616b = call i32 @unknown_51092(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2617c

bb:                                               ; preds = %dec_label_pc_26142
  %v1_2617a = call i32 @function_26181()
  br label %dec_label_pc_2617c

dec_label_pc_2617c:                               ; preds = %bb, %dec_label_pc_26142
  %v2_2617a = phi i32 [ %v1_2617a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_26142 ]
  ret i32 %v2_2617a
}

define i32 @function_26181() local_unnamed_addr {
dec_label_pc_26181:
  %v0_26182 = load i32, i32* @eax, align 8
  ret i32 %v0_26182
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEEbRT_i() local_unnamed_addr {
dec_label_pc_26184:
  %eax.global-to-local = alloca i32, align 4
  %v2_26185 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_26185
}

define i32 @function_26188(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26188:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_26189 = load i32, i32* @ecx, align 4
  %v0_26191 = load i32, i32* @ebp, align 4
  %v0_26192 = load i32, i32* @eax, align 8
  %v2_26192 = or i32 %v0_26192, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_26192, i32* %eax.global-to-local, align 8
  %v1_26195 = add i32 %v4_26189, -1
  store i32 %v1_26195, i32* @ecx, align 4
  %v1_26197 = add i32 %v0_26191, 3
  store i32 %v1_26197, i32* @ebp, align 4
  %v1_26198 = add i32 %v4_26189, -1587159996
  %v2_26198 = inttoptr i32 %v1_26198 to i8*
  %v3_26198 = load i8, i8* %v2_26198, align 1
  %v5_26198 = trunc i32 %v1_26195 to i8
  %v8_26198 = add i8 %v3_26198, %v5_26198
  %v28_26198 = icmp ult i8 %v8_26198, %v3_26198
  store i1 %v28_26198, i1* %cf.global-to-local, align 1
  store i8 %v8_26198, i8* %v2_26198, align 1
  %v0_2619e = load i32, i32* %eax.global-to-local, align 8
  %v1_2619e = trunc i32 %v0_2619e to i8
  %v2_2619e = load i1, i1* %cf.global-to-local, align 1
  %v3_2619e = zext i1 %v2_2619e to i8
  %v4_2619e = add i8 %v3_2619e, %v1_2619e
  %v19_2619e = icmp ule i8 %v4_2619e, %v1_2619e
  %v21_2619e = icmp eq i1 %v2_2619e, %v19_2619e
  store i1 %v21_2619e, i1* %cf.global-to-local, align 1
  %v22_2619e = zext i8 %v4_2619e to i32
  %v24_2619e = and i32 %v0_2619e, -256
  %v25_2619e = or i32 %v22_2619e, %v24_2619e
  store i32 %v25_2619e, i32* %eax.global-to-local, align 8
  %v1_261a0 = inttoptr i32 %v25_2619e to i8*
  %v2_261a0 = load i8, i8* %v1_261a0, align 1
  %v5_261a0 = add i8 %v2_261a0, %v4_2619e
  store i8 %v5_261a0, i8* %v1_261a0, align 1
  %v0_261a2 = load i32, i32* %eax.global-to-local, align 8
  %v1_261a2 = load i32, i32* @ebp, align 4
  %v2_261a2 = add i32 %v1_261a2, -12
  %v3_261a2 = inttoptr i32 %v2_261a2 to i32*
  store i32 %v0_261a2, i32* %v3_261a2, align 4
  store i1 false, i1* @cf, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_261a7 = load i32, i32* @ebp, align 4
  %v1_261a7 = add i32 %v0_261a7, -28
  %v2_261a7 = inttoptr i32 %v1_261a7 to i32*
  %v3_261a7 = load i32, i32* %v2_261a7, align 4
  store i32 %v3_261a7, i32* %eax.global-to-local, align 8
  %v1_261aa = inttoptr i32 %v3_261a7 to i32*
  %v2_261aa = load i32, i32* %v1_261aa, align 4
  store i32 %v2_261aa, i32* %eax.global-to-local, align 8
  %v1_261ac = add i32 %v0_261a7, -32
  %v2_261ac = inttoptr i32 %v1_261ac to i32*
  %v3_261ac = load i32, i32* %v2_261ac, align 4
  %v2_261b6 = call i32 @unknown_5111c(i32 %v2_261aa, i32 %v3_261ac)
  store i32 %v2_261b6, i32* %eax.global-to-local, align 8
  ret i32 %v2_261b6

; uselistorder directives
  uselistorder i8 %v4_2619e, { 0, 2, 1 }
  uselistorder i8 %v1_2619e, { 1, 0 }
  uselistorder i8 %v3_26198, { 1, 0 }
}

define i32 @function_261c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_261c0:
  %v0_261c0 = load i32, i32* @eax, align 8
  %v1_261c0 = load i1, i1* @cf, align 1
  %v2_261c0 = zext i1 %v1_261c0 to i32
  %v3_261c0 = add i32 %v0_261c0, ptrtoint (i8** @global_var_14.1904 to i32)
  %v4_261c0 = add i32 %v3_261c0, %v2_261c0
  %v14_261c0 = icmp eq i32 %v4_261c0, 0
  store i32 %v4_261c0, i32* @eax, align 8
  br i1 %v14_261c0, label %bb, label %dec_label_pc_261c7

bb:                                               ; preds = %dec_label_pc_261c0
  %v1_261c5 = call i32 @function_261cc()
  br label %dec_label_pc_261c7

dec_label_pc_261c7:                               ; preds = %bb, %dec_label_pc_261c0
  %v2_261c5 = phi i32 [ %v1_261c5, %bb ], [ %v4_261c0, %dec_label_pc_261c0 ]
  ret i32 %v2_261c5
}

define i32 @function_261cc() local_unnamed_addr {
dec_label_pc_261cc:
  %v0_261cd = load i32, i32* @eax, align 8
  ret i32 %v0_261cd
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitINS_8weak_ptrIvEEEEbRKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_261ce:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_261f7 = call i32 @unknown_50f8c(i32 %arg2)
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v3_2620e = call i32 @unknown_4c352(i32 %arg1, i32 %v1_261f7, i32 1)
  store i32 %v3_2620e, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2621f

bb:                                               ; preds = %dec_label_pc_261ce
  %v1_2621d = load i32, i32* %stack_var_-60, align 4
  %v2_2621d = call i32 @function_26224(i32 %v1_2621d)
  br label %dec_label_pc_2621f

dec_label_pc_2621f:                               ; preds = %bb, %dec_label_pc_261ce
  %v3_2621d = phi i32 [ %v2_2621d, %bb ], [ %v3_2620e, %dec_label_pc_261ce ]
  ret i32 %v3_2621d

; uselistorder directives
  uselistorder i32 (i32)* @function_26224, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26224(i32 %arg1) local_unnamed_addr {
dec_label_pc_26224:
  %v0_26225 = load i32, i32* @eax, align 8
  ret i32 %v0_26225
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEEbRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26226:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_26244(i32 %arg1) local_unnamed_addr {
dec_label_pc_26244:
  %v0_26244 = load i32, i32* @eax, align 8
  %v1_26244 = load i32, i32* @ebp, align 4
  %v2_26244 = add i32 %v1_26244, -12
  %v3_26244 = inttoptr i32 %v2_26244 to i32*
  store i32 %v0_26244, i32* %v3_26244, align 4
  %v0_26249 = load i32, i32* @ebp, align 4
  %v1_26249 = add i32 %v0_26249, -28
  %v2_26249 = inttoptr i32 %v1_26249 to i32*
  %v3_26249 = load i32, i32* %v2_26249, align 4
  %v1_2624c = inttoptr i32 %v3_26249 to i32*
  %v2_2624c = load i32, i32* %v1_2624c, align 4
  %v1_2624e = add i32 %v0_26249, -32
  %v2_2624e = inttoptr i32 %v1_2624e to i32*
  %v3_2624e = load i32, i32* %v2_2624e, align 4
  %v2_26258 = call i32 @unknown_511fa(i32 %v2_2624c, i32 %v3_2624e)
  store i32 %v2_26258, i32* @eax, align 8
  %v0_2625d = load i32, i32* @ebp, align 4
  %v1_2625d = add i32 %v0_2625d, -12
  %v2_2625d = inttoptr i32 %v1_2625d to i32*
  %v3_2625d = load i32, i32* %v2_2625d, align 4
  %v4_26260 = icmp eq i32 %v3_2625d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26260, label %bb, label %dec_label_pc_26269

bb:                                               ; preds = %dec_label_pc_26244
  %v1_26267 = call i32 @function_2626e()
  br label %dec_label_pc_26269

dec_label_pc_26269:                               ; preds = %bb, %dec_label_pc_26244
  %v2_26267 = phi i32 [ %v1_26267, %bb ], [ %v2_26258, %dec_label_pc_26244 ]
  ret i32 %v2_26267
}

define i32 @function_2626e() local_unnamed_addr {
dec_label_pc_2626e:
  %v0_2626f = load i32, i32* @eax, align 8
  ret i32 %v0_2626f
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail24expired_weak_ptr_visitorEE14internal_visitINS4_21foreign_void_weak_ptrEEEbRKNS1_13backup_holderIT_EEl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26270:
  ret i32 %arg3
}

define i32 @function_2628b() local_unnamed_addr {
dec_label_pc_2628b:
  %v2_2628b = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2628b = load i32, i32* @eax, align 8
  %v4_2628b = trunc i32 %v3_2628b to i8
  %v5_2628b = add i8 %v4_2628b, %v2_2628b
  %v21_2628b = inttoptr i32 %v3_2628b to i8*
  store i8 %v5_2628b, i8* %v21_2628b, align 1
  %v0_2628d = load i32, i32* @ecx, align 4
  %v1_2628d = add i32 %v0_2628d, -1070468027
  %v2_2628d = inttoptr i32 %v1_2628d to i8*
  %v3_2628d = load i8, i8* %v2_2628d, align 1
  %v5_2628d = trunc i32 %v0_2628d to i8
  %v6_2628d = add i8 %v3_2628d, %v5_2628d
  store i8 %v6_2628d, i8* %v2_2628d, align 1
  %v0_26293 = load i32, i32* @ebp, align 4
  %v1_26293 = add i32 %v0_26293, -32
  %v2_26293 = inttoptr i32 %v1_26293 to i32*
  %v3_26293 = load i32, i32* %v2_26293, align 4
  %v1_26299 = call i32 @unknown_510e8(i32 %v3_26293)
  %v0_262aa = load i32, i32* @ebp, align 4
  %v1_262aa = add i32 %v0_262aa, -28
  %v2_262aa = inttoptr i32 %v1_262aa to i32*
  %v3_262aa = load i32, i32* %v2_262aa, align 4
  %v3_262b0 = call i32 @unknown_4c496(i32 %v3_262aa, i32 %v1_26299, i32 1)
  store i32 %v3_262b0, i32* @eax, align 8
  %v0_262b5 = load i32, i32* @ebp, align 4
  %v1_262b5 = add i32 %v0_262b5, -12
  %v2_262b5 = inttoptr i32 %v1_262b5 to i32*
  %v3_262b5 = load i32, i32* %v2_262b5, align 4
  %v4_262b8 = icmp eq i32 %v3_262b5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_262b8, label %bb, label %dec_label_pc_262c1

bb:                                               ; preds = %dec_label_pc_2628b
  %v1_262bf = call i32 @function_262c6()
  br label %dec_label_pc_262c1

dec_label_pc_262c1:                               ; preds = %bb, %dec_label_pc_2628b
  %v2_262bf = phi i32 [ %v1_262bf, %bb ], [ %v3_262b0, %dec_label_pc_2628b ]
  ret i32 %v2_262bf
}

define i32 @function_262c6() local_unnamed_addr {
dec_label_pc_262c6:
  %v0_262c7 = load i32, i32* @eax, align 8
  ret i32 %v0_262c7
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8weak_ptrIvEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_262c8:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_262ee

bb:                                               ; preds = %dec_label_pc_262c8
  %v2_262ec = call i32 @function_262f3(i32 %arg1)
  br label %dec_label_pc_262ee

dec_label_pc_262ee:                               ; preds = %bb, %dec_label_pc_262c8
  %v3_262ec = phi i32 [ %v2_262ec, %bb ], [ %arg1, %dec_label_pc_262c8 ]
  ret i32 %v3_262ec
}

define i32 @function_262f1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_262f1:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_262f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_262f3:
  %v0_262f4 = load i32, i32* @eax, align 8
  ret i32 %v0_262f4
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_8weak_ptrIvEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_262f6:
  store i32 %arg2, i32* @eax, align 8
  %v1_2631f = call i32 @function_34f4c(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26330

bb:                                               ; preds = %dec_label_pc_262f6
  %v1_2632e = call i32 @function_26335()
  br label %dec_label_pc_26330

dec_label_pc_26330:                               ; preds = %bb, %dec_label_pc_262f6
  %v2_2632e = phi i32 [ %v1_2632e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_262f6 ]
  ret i32 %v2_2632e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_26335() local_unnamed_addr {
dec_label_pc_26335:
  %v0_26336 = load i32, i32* @eax, align 8
  ret i32 %v0_26336
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8weak_ptrIvEEEEEERT_Pv() local_unnamed_addr {
dec_label_pc_26337:
  %eax.global-to-local = alloca i32, align 4
  %v17_2633a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2633a
}

define i32 @function_2633e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2633e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2633e = load i32, i32* @ebp, align 4
  %v1_2633e = add i32 %v0_2633e, 1
  store i32 %v1_2633e, i32* @ebp, align 4
  %v0_2633f = load i32, i32* @ecx, align 4
  %v1_2633f = add i32 %v0_2633f, -1587157947
  %v2_2633f = inttoptr i32 %v1_2633f to i8*
  %v3_2633f = load i8, i8* %v2_2633f, align 1
  %v5_2633f = trunc i32 %v0_2633f to i8
  %v6_2633f = or i8 %v3_2633f, %v5_2633f
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2633f, i8* %v2_2633f, align 1
  %v0_26345 = load i32, i32* @eax, align 8
  %v1_26345 = trunc i32 %v0_26345 to i8
  %v2_26345 = load i1, i1* %cf.global-to-local, align 1
  %v3_26345 = zext i1 %v2_26345 to i8
  %v4_26345 = add i8 %v3_26345, %v1_26345
  %v19_26345 = icmp ule i8 %v4_26345, %v1_26345
  %v21_26345 = icmp eq i1 %v2_26345, %v19_26345
  store i1 %v21_26345, i1* %cf.global-to-local, align 1
  %v22_26345 = zext i8 %v4_26345 to i32
  %v24_26345 = and i32 %v0_26345, -256
  %v25_26345 = or i32 %v22_26345, %v24_26345
  store i32 %v25_26345, i32* %eax.global-to-local, align 8
  %v1_26347 = inttoptr i32 %v25_26345 to i8*
  %v2_26347 = load i8, i8* %v1_26347, align 1
  %v5_26347 = add i8 %v2_26347, %v4_26345
  store i8 %v5_26347, i8* %v1_26347, align 1
  %v0_26349 = load i32, i32* %eax.global-to-local, align 8
  %v1_26349 = load i32, i32* @ebp, align 4
  %v2_26349 = add i32 %v1_26349, -12
  %v3_26349 = inttoptr i32 %v2_26349 to i32*
  store i32 %v0_26349, i32* %v3_26349, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2634e = load i32, i32* @ebp, align 4
  %v1_2634e = add i32 %v0_2634e, -28
  %v2_2634e = inttoptr i32 %v1_2634e to i32*
  %v3_2634e = load i32, i32* %v2_2634e, align 4
  store i32 %v3_2634e, i32* @eax, align 8
  %v1_26351 = add i32 %v0_2634e, -12
  %v2_26351 = inttoptr i32 %v1_26351 to i32*
  %v3_26351 = load i32, i32* %v2_26351, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_26354 = icmp eq i32 %v3_26351, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26354, label %bb, label %dec_label_pc_2635d

bb:                                               ; preds = %dec_label_pc_2633e
  %v1_2635b = call i32 @function_26362()
  store i32 %v1_2635b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2635d

dec_label_pc_2635d:                               ; preds = %bb, %dec_label_pc_2633e
  %v2_2635b = phi i32 [ %v1_2635b, %bb ], [ %v3_2634e, %dec_label_pc_2633e ]
  ret i32 %v2_2635b

; uselistorder directives
  uselistorder i8 %v4_26345, { 0, 2, 1 }
  uselistorder i8 %v1_26345, { 1, 0 }
}

define i32 @function_26362() local_unnamed_addr {
dec_label_pc_26362:
  %v0_26363 = load i32, i32* @eax, align 8
  ret i32 %v0_26363
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_8weak_ptrIvEEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26364:
  %v1_2638d = call i32 @unknown_51374(i32 %arg2)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2639a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2639a:
  %zf.global-to-local = alloca i1, align 1
  %v2_2639a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2639a = load i32, i32* @eax, align 8
  %v4_2639a = trunc i32 %v3_2639a to i8
  %v5_2639a = add i8 %v4_2639a, %v2_2639a
  %v15_2639a = icmp eq i8 %v5_2639a, 0
  store i1 %v15_2639a, i1* %zf.global-to-local, align 1
  %v21_2639a = inttoptr i32 %v3_2639a to i8*
  store i8 %v5_2639a, i8* %v21_2639a, align 1
  %v0_2639c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2639c, label %bb, label %dec_label_pc_2639a.dec_label_pc_2639e_crit_edge

dec_label_pc_2639a.dec_label_pc_2639e_crit_edge:  ; preds = %dec_label_pc_2639a
  %v2_2639c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2639e

bb:                                               ; preds = %dec_label_pc_2639a
  %v1_2639c = call i32 @function_263a3()
  br label %dec_label_pc_2639e

dec_label_pc_2639e:                               ; preds = %dec_label_pc_2639a.dec_label_pc_2639e_crit_edge, %bb
  %v2_2639c = phi i32 [ %v2_2639c.pre, %dec_label_pc_2639a.dec_label_pc_2639e_crit_edge ], [ %v1_2639c, %bb ]
  ret i32 %v2_2639c

; uselistorder directives
  uselistorder label %dec_label_pc_2639e, { 1, 0 }
}

define i32 @function_263a3() local_unnamed_addr {
dec_label_pc_263a3:
  %v0_263a4 = load i32, i32* @eax, align 8
  ret i32 %v0_263a4
}

define i32 @_ZN5boost6detail7variant12cast_storageINS_8signals26detail21foreign_void_weak_ptrEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_263a5:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_263cb

bb:                                               ; preds = %dec_label_pc_263a5
  %v2_263c9 = call i32 @function_263d0(i32 %arg1)
  br label %dec_label_pc_263cb

dec_label_pc_263cb:                               ; preds = %bb, %dec_label_pc_263a5
  %v3_263c9 = phi i32 [ %v2_263c9, %bb ], [ %arg1, %dec_label_pc_263a5 ]
  ret i32 %v3_263c9

; uselistorder directives
  uselistorder i32 (i32)* @function_263d0, { 1, 0 }
}

define i32 @function_263d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_263d0:
  %v0_263d1 = load i32, i32* @eax, align 8
  ret i32 %v0_263d1
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS_8signals26detail21foreign_void_weak_ptrEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_263d2:
  %v1_263fb = call i32 @function_34db6(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2640c

bb:                                               ; preds = %dec_label_pc_263d2
  %v1_2640a = call i32 @function_26411()
  br label %dec_label_pc_2640c

dec_label_pc_2640c:                               ; preds = %bb, %dec_label_pc_263d2
  %v2_2640a = phi i32 [ %v1_2640a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_263d2 ]
  ret i32 %v2_2640a
}

define i32 @function_26411() local_unnamed_addr {
dec_label_pc_26411:
  %v0_26412 = load i32, i32* @eax, align 8
  ret i32 %v0_26412
}

define i32 @_ZN5boost6detail7variant12cast_storageINS1_13backup_holderINS_8signals26detail21foreign_void_weak_ptrEEEEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26413:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_26426(i32 %arg1) local_unnamed_addr {
dec_label_pc_26426:
  %v0_26426 = load i32, i32* @ebp, align 4
  %v1_26426 = add i32 %v0_26426, 1
  store i32 %v1_26426, i32* @ebp, align 4
  %v1_2642a = add i32 %v0_26426, -27
  %v2_2642a = inttoptr i32 %v1_2642a to i32*
  %v3_2642a = load i32, i32* %v2_2642a, align 4
  store i32 %v3_2642a, i32* @eax, align 8
  %v1_2642d = add i32 %v0_26426, -11
  %v2_2642d = inttoptr i32 %v1_2642d to i32*
  %v3_2642d = load i32, i32* %v2_2642d, align 4
  %v4_26430 = icmp eq i32 %v3_2642d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26430, label %bb, label %dec_label_pc_26439

bb:                                               ; preds = %dec_label_pc_26426
  %v1_26437 = call i32 @function_2643e()
  br label %dec_label_pc_26439

dec_label_pc_26439:                               ; preds = %bb, %dec_label_pc_26426
  %v2_26437 = phi i32 [ %v1_26437, %bb ], [ %v3_2642a, %dec_label_pc_26426 ]
  ret i32 %v2_26437
}

define i32 @function_2643e() local_unnamed_addr {
dec_label_pc_2643e:
  %v0_2643f = load i32, i32* @eax, align 8
  ret i32 %v0_2643f
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitINS1_13backup_holderINS_8signals26detail21foreign_void_weak_ptrEEEEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26440:
  %v1_26469 = call i32 @unknown_51498(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2647a

bb:                                               ; preds = %dec_label_pc_26440
  %v1_26478 = call i32 @function_2647f()
  br label %dec_label_pc_2647a

dec_label_pc_2647a:                               ; preds = %bb, %dec_label_pc_26440
  %v2_26478 = phi i32 [ %v1_26478, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_26440 ]
  ret i32 %v2_26478
}

define i32 @function_2647f() local_unnamed_addr {
dec_label_pc_2647f:
  %v0_26480 = load i32, i32* @eax, align 8
  ret i32 %v0_26480
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_8weak_ptrIvEEEENT_11result_typeEiRS8_T0_PT1_N4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_26481:
  %eax.global-to-local = alloca i32, align 4
  %v5_26481 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_26481
}

define i32 @function_26482(i32 %arg1) local_unnamed_addr {
dec_label_pc_26482:
  %tmp2 = call i8 @__decompiler_undefined_function_3()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_26482 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_26482, i32* @ebp, align 4
  %v11_264b1 = icmp slt i32 %arg1, 0
  br i1 %v11_264b1, label %bb, label %dec_label_pc_264b7

bb:                                               ; preds = %dec_label_pc_26482
  %v6_264b5 = sext i8 %tmp2 to i32
  %v7_264b5 = call i32 @function_264db(i32 %v6_264b5, i32 %tmp4, i32 %tmp6, i32 %tmp8, i32 %arg1)
  br label %dec_label_pc_264b7

dec_label_pc_264b7:                               ; preds = %bb, %dec_label_pc_26482
  ret i32 %tmp6
}

define i32 @function_264ba(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264ba:
  %v0_264ba = load i32, i32* @eax, align 8
  %v1_264bd = call i32 @unknown_4bf6f(i32 %v0_264ba)
  %v0_264ce = load i32, i32* @ebp, align 4
  %v1_264ce = add i32 %v0_264ce, -32
  %v2_264ce = inttoptr i32 %v1_264ce to i32*
  %v3_264ce = load i32, i32* %v2_264ce, align 4
  %v3_264d4 = call i32 @unknown_51521(i32 %v3_264ce, i32 %v1_264bd, i32 1)
  ret i32 %v3_264d4
}

define i32 @function_264db(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_264db:
  %v0_264db = load i32, i32* @ebp, align 4
  %v1_264db = add i32 %v0_264db, -36
  %v2_264db = inttoptr i32 %v1_264db to i32*
  %v3_264db = load i32, i32* %v2_264db, align 4
  %v1_264e1 = call i32 @unknown_4bffc(i32 %v3_264db)
  %v0_264f2 = load i32, i32* @ebp, align 4
  %v1_264f2 = add i32 %v0_264f2, -32
  %v2_264f2 = inttoptr i32 %v1_264f2 to i32*
  %v3_264f2 = load i32, i32* %v2_264f2, align 4
  %v3_264f8 = call i32 @unknown_5157f(i32 %v3_264f2, i32 %v1_264e1, i32 1)
  %v0_264fd = load i32, i32* @ebp, align 4
  %v1_264fd = add i32 %v0_264fd, -12
  %v2_264fd = inttoptr i32 %v1_264fd to i32*
  %v3_264fd = load i32, i32* %v2_264fd, align 4
  ret i32 %v3_264fd
}

define i32 @function_26504(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26504:
  %v2_26504 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26504 = load i32, i32* @eax, align 8
  %v4_26504 = trunc i32 %v3_26504 to i8
  %v5_26504 = add i8 %v4_26504, %v2_26504
  %v21_26504 = inttoptr i32 %v3_26504 to i8*
  store i8 %v5_26504, i8* %v21_26504, align 1
  %v0_26506 = load i32, i32* @ebp, align 4
  %v1_26506 = load i32, i32* @eax, align 8
  %v3_26506 = add i32 %v0_26506, -24
  %v4_26506 = add i32 %v3_26506, %v1_26506
  %v5_26506 = inttoptr i32 %v4_26506 to i8*
  %v6_26506 = load i8, i8* %v5_26506, align 1
  %v7_26506 = load i32, i32* @edx, align 8
  %v8_26506 = udiv i32 %v7_26506, 256
  %v9_26506 = trunc i32 %v8_26506 to i8
  %v10_26506 = add i8 %v9_26506, %v6_26506
  store i8 %v10_26506, i8* %v5_26506, align 1
  %v31_26506 = load i32, i32* @eax, align 8
  ret i32 %v31_26506
}

define i32 @function_2650e() local_unnamed_addr {
dec_label_pc_2650e:
  %v0_2650f = load i32, i32* @eax, align 8
  ret i32 %v0_2650f
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKvNS_8signals26detail21foreign_void_weak_ptrEEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_26510:
  %v11_26540 = icmp slt i32 %arg1, 0
  br i1 %v11_26540, label %dec_label_pc_2656a, label %dec_label_pc_26546

dec_label_pc_26546:                               ; preds = %dec_label_pc_26510
  %v1_2654c = call i32 @unknown_4c125(i32 %arg3)
  %v3_26563 = call i32 @unknown_5167c(i32 %arg2, i32 %v1_2654c, i32 1)
  ret i32 %v3_26563

dec_label_pc_2656a:                               ; preds = %dec_label_pc_26510
  %v1_26570 = call i32 @unknown_4c1b1(i32 %arg3)
  ret i32 %v1_26570

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_26578(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_26578:
  %v2_26578 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_26578 = load i32, i32* @eax, align 8
  %v4_26578 = trunc i32 %v3_26578 to i8
  %v5_26578 = or i8 %v4_26578, %v2_26578
  %v11_26578 = load i32, i32* @ecx, align 4
  %v12_26578 = inttoptr i32 %v11_26578 to i8*
  store i8 %v5_26578, i8* %v12_26578, align 1
  %v2_2657a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2657a = load i32, i32* @eax, align 8
  %v4_2657a = trunc i32 %v3_2657a to i8
  %v5_2657a = add i8 %v4_2657a, %v2_2657a
  %v21_2657a = inttoptr i32 %v3_2657a to i8*
  store i8 %v5_2657a, i8* %v21_2657a, align 1
  %v0_2657c = load i32, i32* @ecx, align 4
  %v1_2657c = add i32 %v0_2657c, -1962662844
  %v2_2657c = inttoptr i32 %v1_2657c to i8*
  %v3_2657c = load i8, i8* %v2_2657c, align 1
  %v5_2657c = trunc i32 %v0_2657c to i8
  %v6_2657c = add i8 %v3_2657c, %v5_2657c
  store i8 %v6_2657c, i8* %v2_2657c, align 1
  %v0_26582 = load i32, i32* @ebp, align 4
  %v1_26582 = add i32 %v0_26582, 1
  %v9_26582 = icmp eq i32 %v1_26582, 0
  store i32 %v1_26582, i32* @ebp, align 4
  %v0_26583 = load i32, i32* @ecx, align 4
  %v1_26583 = add i32 %v0_26583, -1
  store i32 %v1_26583, i32* @ecx, align 4
  %v2_26583 = icmp eq i32 %v1_26583, 0
  %v4_26583 = or i1 %v9_26582, %v2_26583
  br i1 %v4_26583, label %dec_label_pc_26578.dec_label_pc_26585_crit_edge, label %bb

dec_label_pc_26578.dec_label_pc_26585_crit_edge:  ; preds = %dec_label_pc_26578
  br label %dec_label_pc_26585

bb:                                               ; preds = %dec_label_pc_26578
  %v6_26583 = call i32 @function_2650e()
  br label %dec_label_pc_26585

dec_label_pc_26585:                               ; preds = %dec_label_pc_26578.dec_label_pc_26585_crit_edge, %bb
  %v0_26587 = call i32 @unknown_51700()
  %v0_2658c = load i32, i32* @ebp, align 4
  %v1_2658c = add i32 %v0_2658c, -12
  %v2_2658c = inttoptr i32 %v1_2658c to i32*
  %v3_2658c = load i32, i32* %v2_2658c, align 4
  %v3_2658f = xor i32 %v3_2658c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2658f = icmp eq i32 %v3_2658f, 0
  store i32 %v3_2658f, i32* @eax, align 8
  br i1 %v4_2658f, label %bb4, label %dec_label_pc_26598

bb4:                                              ; preds = %dec_label_pc_26585
  %v1_26596 = call i32 @function_2659d()
  br label %dec_label_pc_26598

dec_label_pc_26598:                               ; preds = %bb4, %dec_label_pc_26585
  %v2_26596 = phi i32 [ %v1_26596, %bb4 ], [ %v3_2658f, %dec_label_pc_26585 ]
  ret i32 %v2_26596

; uselistorder directives
  uselistorder i32 %v1_26583, { 1, 0 }
  uselistorder label %dec_label_pc_26585, { 1, 0 }
}

define i32 @function_2659d() local_unnamed_addr {
dec_label_pc_2659d:
  %v0_2659e = load i32, i32* @eax, align 8
  ret i32 %v0_2659e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_265a0:
  %v1_265ba = add i32 %arg1, 8
  %v2_265ba = inttoptr i32 %v1_265ba to i32*
  %v3_265ba = load i32, i32* %v2_265ba, align 4
  store i32 %v3_265ba, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_265c9

bb:                                               ; preds = %dec_label_pc_265a0
  %v2_265c7 = call i32 @function_265ce(i32 %arg1)
  br label %dec_label_pc_265c9

dec_label_pc_265c9:                               ; preds = %bb, %dec_label_pc_265a0
  %v3_265c7 = phi i32 [ %v2_265c7, %bb ], [ %v3_265ba, %dec_label_pc_265a0 ]
  ret i32 %v3_265c7
}

define i32 @function_265ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_265ce:
  %v0_265cf = load i32, i32* @eax, align 8
  ret i32 %v0_265cf
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_265d0:
  %v1_265ea = add i32 %arg1, 4
  ret i32 %v1_265ea
}

define i32 @function_265ee(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_265ee:
  %v0_265f0 = load i32, i32* @edx, align 8
  %v4_265f0 = icmp eq i32 %v0_265f0, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_265f0, label %bb, label %dec_label_pc_265ee.dec_label_pc_265f9_crit_edge

dec_label_pc_265ee.dec_label_pc_265f9_crit_edge:  ; preds = %dec_label_pc_265ee
  %v2_265f7.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_265f9

bb:                                               ; preds = %dec_label_pc_265ee
  %v1_265f7 = call i32 @function_265fe()
  br label %dec_label_pc_265f9

dec_label_pc_265f9:                               ; preds = %dec_label_pc_265ee.dec_label_pc_265f9_crit_edge, %bb
  %v2_265f7 = phi i32 [ %v2_265f7.pre, %dec_label_pc_265ee.dec_label_pc_265f9_crit_edge ], [ %v1_265f7, %bb ]
  ret i32 %v2_265f7

; uselistorder directives
  uselistorder label %dec_label_pc_265f9, { 1, 0 }
}

define i32 @function_265fe() local_unnamed_addr {
dec_label_pc_265fe:
  %v0_265ff = load i32, i32* @eax, align 8
  ret i32 %v0_265ff
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_lower_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26600:
  %v10_2667f117126 = icmp eq i32 %arg3, 0
  %v1_26683118127 = icmp eq i1 %v10_2667f117126, false
  %v5_26686122129 = icmp eq i1 %v1_26683118127, false
  %v1_26688123130 = icmp eq i1 %v5_26686122129, false
  br i1 %v1_26688123130, label %dec_label_pc_26631.lr.ph, label %dec_label_pc_2668a

dec_label_pc_26631.lr.ph:                         ; preds = %dec_label_pc_26600, %dec_label_pc_2665b
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_2665b ], [ %arg4, %dec_label_pc_26600 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_26667, %dec_label_pc_2665b ], [ %arg3, %dec_label_pc_26600 ]
  br label %dec_label_pc_26631

dec_label_pc_26631:                               ; preds = %dec_label_pc_26631.lr.ph, %dec_label_pc_26671
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_26631.lr.ph ], [ %v1_26677, %dec_label_pc_26671 ]
  %v1_26637 = call i32 @unknown_5187d(i32 %stack_var_-40.0124)
  %v3_2664f = call i32 @unknown_47d40(i32 %arg2, i32 %v1_26637, i32 %arg5)
  %v1_26654 = xor i32 %v3_2664f, 1
  %v4_26654 = trunc i32 %v1_26654 to i8
  %v5_26657 = icmp eq i8 %v4_26654, 0
  br i1 %v5_26657, label %dec_label_pc_26671, label %dec_label_pc_2665b

dec_label_pc_2665b:                               ; preds = %dec_label_pc_26631
  %v1_26667 = call i32 @unknown_518c1(i32 %stack_var_-40.0124)
  %v10_2667f117 = icmp eq i32 %v1_26667, 0
  %v1_26683118 = icmp eq i1 %v10_2667f117, false
  %v5_26686122 = icmp eq i1 %v1_26683118, false
  %v1_26688123 = icmp eq i1 %v5_26686122, false
  br i1 %v1_26688123, label %dec_label_pc_26631.lr.ph, label %dec_label_pc_2668a

dec_label_pc_26671:                               ; preds = %dec_label_pc_26631
  %v1_26677 = call i32 @unknown_518f1(i32 %stack_var_-40.0124)
  %v10_2667f = icmp eq i32 %v1_26677, 0
  %v1_26683 = icmp eq i1 %v10_2667f, false
  %v5_26686 = icmp eq i1 %v1_26683, false
  %v1_26688 = icmp eq i1 %v5_26686, false
  br i1 %v1_26688, label %dec_label_pc_26631, label %dec_label_pc_2668a

dec_label_pc_2668a:                               ; preds = %dec_label_pc_26671, %dec_label_pc_26600, %dec_label_pc_2665b
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_26600 ], [ %stack_var_-40.0124, %dec_label_pc_2665b ], [ %stack_var_-44.0.ph132, %dec_label_pc_26671 ]
  %v2_26697 = call i32 @unknown_4ccb4(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_266ab

bb:                                               ; preds = %dec_label_pc_2668a
  %v1_266a9 = call i32 @function_266b0()
  br label %dec_label_pc_266ab

dec_label_pc_266ab:                               ; preds = %bb, %dec_label_pc_2668a
  %v2_266a9 = phi i32 [ %v1_266a9, %bb ], [ %arg1, %dec_label_pc_2668a ]
  ret i32 %v2_266a9

; uselistorder directives
  uselistorder i32 %v1_26667, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2668a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_26631, { 1, 0 }
  uselistorder label %dec_label_pc_26631.lr.ph, { 1, 0 }
}

define i32 @function_266b0() local_unnamed_addr {
dec_label_pc_266b0:
  %v0_266b1 = load i32, i32* @eax, align 8
  ret i32 %v0_266b1
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1EPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_266b4:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_266ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_266ce:
  %v0_266d1 = load i32, i32* @ebp, align 4
  %v1_266d1 = add i32 %v0_266d1, -28
  %v2_266d1 = inttoptr i32 %v1_266d1 to i32*
  %v3_266d1 = load i32, i32* %v2_266d1, align 4
  %v1_266d4 = add i32 %v0_266d1, -32
  %v2_266d4 = inttoptr i32 %v1_266d4 to i32*
  %v3_266d4 = load i32, i32* %v2_266d4, align 4
  %v2_266d7 = inttoptr i32 %v3_266d1 to i32*
  store i32 %v3_266d4, i32* %v2_266d7, align 4
  %v0_266d9 = load i32, i32* @ebp, align 4
  %v1_266d9 = add i32 %v0_266d9, -12
  %v2_266d9 = inttoptr i32 %v1_266d9 to i32*
  %v3_266d9 = load i32, i32* %v2_266d9, align 4
  %v3_266dc = xor i32 %v3_266d9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_266dc = icmp eq i32 %v3_266dc, 0
  store i32 %v3_266dc, i32* @eax, align 8
  br i1 %v4_266dc, label %bb, label %dec_label_pc_266e5

bb:                                               ; preds = %dec_label_pc_266ce
  %v1_266e3 = call i32 @function_266ea()
  br label %dec_label_pc_266e5

dec_label_pc_266e5:                               ; preds = %bb, %dec_label_pc_266ce
  %v2_266e3 = phi i32 [ %v1_266e3, %bb ], [ %v3_266dc, %dec_label_pc_266ce ]
  ret i32 %v2_266e3
}

define i32 @function_266ea() local_unnamed_addr {
dec_label_pc_266ea:
  %v0_266eb = load i32, i32* @eax, align 8
  ret i32 %v0_266eb
}

define i32 @_ZNK5boost8optionalIiE3getEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_266ec:
  %v2_26709 = call i32 @unknown_49f22(i32 %arg1)
  %v4_2670e = trunc i32 %v2_26709 to i8
  %v5_2670e = icmp eq i8 %v4_2670e, 0
  %v1_26710 = icmp eq i1 %v5_2670e, false
  br i1 %v1_26710, label %bb, label %dec_label_pc_26712

bb:                                               ; preds = %dec_label_pc_266ec
  %v2_26710 = call i32 @function_26736()
  br label %dec_label_pc_26712

dec_label_pc_26712:                               ; preds = %bb, %dec_label_pc_266ec
  %v3_2672a = phi i32 [ %v2_26710, %bb ], [ %v2_26709, %dec_label_pc_266ec ]
  ret i32 %v3_2672a
}

define i32 @function_26736() local_unnamed_addr {
dec_label_pc_26736:
  %v0_26736 = load i32, i32* @ebp, align 4
  %v1_26736 = add i32 %v0_26736, -28
  %v2_26736 = inttoptr i32 %v1_26736 to i32*
  %v3_26736 = load i32, i32* %v2_26736, align 4
  %v1_2673c = call i32 @unknown_49f52(i32 %v3_26736)
  store i32 %v1_2673c, i32* @eax, align 8
  %v0_26741 = load i32, i32* @ebp, align 4
  %v1_26741 = add i32 %v0_26741, -12
  %v2_26741 = inttoptr i32 %v1_26741 to i32*
  %v3_26741 = load i32, i32* %v2_26741, align 4
  %v4_26744 = icmp eq i32 %v3_26741, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26744, label %bb, label %dec_label_pc_2674d

bb:                                               ; preds = %dec_label_pc_26736
  %v1_2674b = call i32 @function_26752()
  br label %dec_label_pc_2674d

dec_label_pc_2674d:                               ; preds = %bb, %dec_label_pc_26736
  %v2_2674b = phi i32 [ %v1_2674b, %bb ], [ %v1_2673c, %dec_label_pc_26736 ]
  ret i32 %v2_2674b
}

define i32 @function_26752() local_unnamed_addr {
dec_label_pc_26752:
  %v0_26753 = load i32, i32* @eax, align 8
  ret i32 %v0_26753
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11upper_boundERS8_() local_unnamed_addr {
dec_label_pc_26754:
  %eax.global-to-local = alloca i32, align 4
  %v5_26757 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_26757
}

define i32 @function_2675a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2675a:
  %v0_2675b = load i32, i32* @ebp, align 4
  %v1_2675b = add i32 %v0_2675b, 8
  %v2_2675b = inttoptr i32 %v1_2675b to i32*
  %v3_2675b = load i32, i32* %v2_2675b, align 4
  %v2_2675e = add i32 %v0_2675b, -28
  %v3_2675e = inttoptr i32 %v2_2675e to i32*
  store i32 %v3_2675b, i32* %v3_2675e, align 4
  %v0_26761 = load i32, i32* @ebp, align 4
  %v1_26761 = add i32 %v0_26761, 12
  %v2_26761 = inttoptr i32 %v1_26761 to i32*
  %v3_26761 = load i32, i32* %v2_26761, align 4
  %v2_26764 = add i32 %v0_26761, -32
  %v3_26764 = inttoptr i32 %v2_26764 to i32*
  store i32 %v3_26761, i32* %v3_26764, align 4
  %v0_26767 = load i32, i32* @ebp, align 4
  %v1_26767 = add i32 %v0_26767, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_26767 = inttoptr i32 %v1_26767 to i32*
  %v3_26767 = load i32, i32* %v2_26767, align 4
  %v2_2676a = add i32 %v0_26767, -36
  %v3_2676a = inttoptr i32 %v2_2676a to i32*
  store i32 %v3_26767, i32* %v3_2676a, align 4
  %v1_26773 = load i32, i32* @ebp, align 4
  %v2_26773 = add i32 %v1_26773, -12
  %v3_26773 = inttoptr i32 %v2_26773 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_26773, align 4
  %v0_26778 = load i32, i32* @ebp, align 4
  %v1_26778 = add i32 %v0_26778, -32
  %v2_26778 = inttoptr i32 %v1_26778 to i32*
  %v3_26778 = load i32, i32* %v2_26778, align 4
  ret i32 %v3_26778
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEeqERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_267d0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  ret i32 %tmp101
}

define i32 @function_267f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_267f4:
  %v0_267f4 = load i32, i32* @ecx, align 4
  %v1_267f4 = add i32 %v0_267f4, -1
  store i32 %v1_267f4, i32* @ecx, align 4
  %v1_267f6 = inttoptr i32 %v1_267f4 to i8*
  %v2_267f6 = load i8, i8* %v1_267f6, align 1
  %v3_267f6 = load i32, i32* @ebx, align 8
  %v4_267f6 = udiv i32 %v3_267f6, 256
  %v5_267f6 = trunc i32 %v4_267f6 to i8
  %v6_267f6 = add i8 %v5_267f6, %v2_267f6
  store i8 %v6_267f6, i8* %v1_267f6, align 1
  %v0_267f8 = load i32, i32* @eax, align 8
  ret i32 %v0_267f8
}

define i32 @function_2680c() local_unnamed_addr {
dec_label_pc_2680c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2680c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2680c = add i32 %v0_2680c, -1
  store i32 %v1_2680c, i32* %ecx.global-to-local, align 4
  %v0_2680e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2680e
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_26810:
  %v2_2682a = load i32, i32* %arg1, align 4
  %v1_2682c = add i32 %v2_2682a, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_26832 = call i32 @unknown_51be3(i32 %v1_2682c)
  store i32 %v1_26832, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26843

bb:                                               ; preds = %dec_label_pc_26810
  %v1_26841 = call i32 @function_26848()
  br label %dec_label_pc_26843

dec_label_pc_26843:                               ; preds = %bb, %dec_label_pc_26810
  %v2_26841 = phi i32 [ %v1_26841, %bb ], [ %v1_26832, %dec_label_pc_26810 ]
  ret i32 %v2_26841
}

define i32 @function_26848() local_unnamed_addr {
dec_label_pc_26848:
  %v0_26849 = load i32, i32* @eax, align 8
  ret i32 %v0_26849
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8key_compEv() local_unnamed_addr {
dec_label_pc_2684a:
  %eax.global-to-local = alloca i32, align 4
  %v5_2684a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2684a
}

define i32 @function_2684c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2684c:
  %v0_2684f = load i32, i32* @ebx, align 8
  %v1_2684f = add i32 %v0_2684f, 1166608453
  %v2_2684f = inttoptr i32 %v1_2684f to i8*
  %v3_2684f = load i8, i8* %v2_2684f, align 1
  %v4_2684f = load i32, i32* @ecx, align 4
  %v5_2684f = trunc i32 %v4_2684f to i8
  %v6_2684f = sub i8 %v3_2684f, %v5_2684f
  store i8 %v6_2684f, i8* %v2_2684f, align 1
  %v0_26857 = load i32, i32* @ebp, align 4
  %v1_2685a = add i32 %v0_26857, 2
  store i32 %v1_2685a, i32* @ebp, align 4
  %v2_26862 = add i32 %v0_26857, -10
  %v3_26862 = inttoptr i32 %v2_26862 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_26862, align 4
  %v0_26867 = load i32, i32* @ebp, align 4
  %v1_26867 = add i32 %v0_26867, -28
  %v2_26867 = inttoptr i32 %v1_26867 to i32*
  %v3_26867 = load i32, i32* %v2_26867, align 4
  store i32 %v3_26867, i32* @eax, align 8
  %v1_2686a = add i32 %v0_26867, -12
  %v2_2686a = inttoptr i32 %v1_2686a to i32*
  %v3_2686a = load i32, i32* %v2_2686a, align 4
  %v4_2686d = icmp eq i32 %v3_2686a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2686d, label %bb, label %dec_label_pc_26876

bb:                                               ; preds = %dec_label_pc_2684c
  %v1_26874 = call i32 @function_2687b()
  br label %dec_label_pc_26876

dec_label_pc_26876:                               ; preds = %bb, %dec_label_pc_2684c
  %v3_26874 = phi i32 [ %v1_26874, %bb ], [ %v3_26867, %dec_label_pc_2684c ]
  ret i32 %v3_26874
}

define i32 @function_2687b() local_unnamed_addr {
dec_label_pc_2687b:
  %v0_2687c = load i32, i32* @eax, align 8
  ret i32 %v0_2687c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26880:
  %v1_268b3 = call i32 @unknown_4ce50(i32 %arg3)
  %v12_268b8 = icmp eq i32 %v1_268b3, %arg4
  %v1_268ba = zext i1 %v12_268b8 to i32
  %v3_268ba = and i32 %v1_268b3, -256
  %v4_268ba = or i32 %v1_268ba, %v3_268ba
  ret i32 %v4_268ba

; uselistorder directives
  uselistorder i32 %v1_268b3, { 1, 0 }
}

define i32 @function_26995() local_unnamed_addr {
dec_label_pc_26995:
  %eax.global-to-local = alloca i32, align 4
  %v0_26995 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26995
}

define i32 @function_269d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_269d2:
  %v1_269d2 = call i32 @unknown_5205e(i32 ptrtoint (i32* @2 to i32))
  %v1_269d7 = inttoptr i32 %v1_269d2 to i32*
  %v2_269d7 = load i32, i32* %v1_269d7, align 4
  %v0_269d9 = load i32, i32* @ebx, align 8
  %v12_269d9 = icmp eq i32 %v0_269d9, %v2_269d7
  %v5_269de = icmp eq i1 %v12_269d9, false
  br i1 %v5_269de, label %bb, label %dec_label_pc_269e2

bb:                                               ; preds = %dec_label_pc_269d2
  %v1_269e0 = call i32 @function_26a25()
  br label %dec_label_pc_269e2

dec_label_pc_269e2:                               ; preds = %bb, %dec_label_pc_269d2
  %v0_269e2 = load i32, i32* @ebp, align 4
  %v1_269e2 = add i32 %v0_269e2, -64
  %v2_269e2 = inttoptr i32 %v1_269e2 to i32*
  %v3_269e2 = load i32, i32* %v2_269e2, align 4
  %v1_269e8 = call i32 @unknown_5205e(i32 %v3_269e2)
  %v0_269ef = load i32, i32* @ebp, align 4
  %v1_269ef = add i32 %v0_269ef, -64
  %v2_269ef = inttoptr i32 %v1_269ef to i32*
  %v3_269ef = load i32, i32* %v2_269ef, align 4
  %v1_269f5 = call i32 @unknown_5205e(i32 %v3_269ef)
  ret i32 %v1_269f5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5205e, { 2, 1, 0 }
}

define i32 @function_269fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_269fc:
  %v0_269fc = load i32, i32* @ebp, align 4
  %v1_269fc = add i32 %v0_269fc, -60
  %v2_269fc = inttoptr i32 %v1_269fc to i32*
  %v3_269fc = load i32, i32* %v2_269fc, align 4
  %v1_269ff = add i32 %v0_269fc, -72
  %v2_269ff = inttoptr i32 %v1_269ff to i32*
  %v3_269ff = load i32, i32* %v2_269ff, align 4
  %v0_26a06 = load i32, i32* @ebx, align 8
  %v0_26a0a = load i32, i32* @edx, align 8
  %v1_26a0e = add i32 %v0_269fc, -64
  %v2_26a0e = inttoptr i32 %v1_26a0e to i32*
  %v3_26a0e = load i32, i32* %v2_26a0e, align 4
  %v5_26a18 = call i32 @unknown_51d58(i32 %v3_269fc, i32 %v3_26a0e, i32 %v0_26a0a, i32 %v0_26a06, i32 %v3_269ff)
  %v0_26a20 = call i32 @function_26c80()
  ret i32 %v0_26a20
}

define i32 @function_26a25() local_unnamed_addr {
dec_label_pc_26a25:
  %ebx.global-to-local = alloca i32, align 4
  %v0_26a25 = load i32, i32* @ebp, align 4
  %v1_26a2c = add i32 %v0_26a25, -15
  %v1_26a32 = call i32 @unknown_51cf4(i32 %v1_26a2c)
  store i32 %v1_26a32, i32* %ebx.global-to-local, align 8
  %v0_26a39 = load i32, i32* @ebp, align 4
  %v1_26a39 = add i32 %v0_26a39, -24
  %v1_26a3f = call i32 @unknown_5208e(i32 %v1_26a39)
  %v1_26a44 = inttoptr i32 %v1_26a3f to i32*
  %v2_26a44 = load i32, i32* %v1_26a44, align 4
  %v1_26a49 = call i32 @unknown_51cb0(i32 %v2_26a44)
  %v0_26a50 = load i32, i32* @ebp, align 4
  %v1_26a50 = add i32 %v0_26a50, -64
  %v2_26a50 = inttoptr i32 %v1_26a50 to i32*
  %v3_26a50 = load i32, i32* %v2_26a50, align 4
  %v0_26a53 = load i32, i32* %ebx.global-to-local, align 8
  %v3_26a5e = call i32 @unknown_47fc0(i32 %v3_26a50, i32 %v1_26a49, i32 %v0_26a53)
  %v4_26a63 = trunc i32 %v3_26a5e to i8
  %v5_26a63 = icmp eq i8 %v4_26a63, 0
  br i1 %v5_26a63, label %bb, label %dec_label_pc_26a67

bb:                                               ; preds = %dec_label_pc_26a25
  %v1_26a65 = call i32 @function_26ada()
  br label %dec_label_pc_26a67

dec_label_pc_26a67:                               ; preds = %bb, %dec_label_pc_26a25
  %v0_26a67 = load i32, i32* @ebp, align 4
  %v1_26a67 = add i32 %v0_26a67, -24
  %v2_26a67 = inttoptr i32 %v1_26a67 to i32*
  %v3_26a67 = load i32, i32* %v2_26a67, align 4
  %v1_26a6d = call i32 @unknown_520cd(i32 %v3_26a67)
  %v0_26a7b = load i32, i32* @ebp, align 4
  %v1_26a7e = add i32 %v0_26a7b, -60
  %v2_26a7e = inttoptr i32 %v1_26a7e to i32*
  %v3_26a7e = load i32, i32* %v2_26a7e, align 4
  ret i32 %v3_26a7e
}

define i32 @function_26a76(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a76:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_26aa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26aa0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_26aa0 = load i32, i32* @edx, align 8
  %v1_26aa0 = and i32 %v0_26aa0, -256
  %v2_26aa0 = or i32 %v1_26aa0, 2
  store i32 %v2_26aa0, i32* %edx.global-to-local, align 8
  %v0_26aa2 = load i32, i32* @ebx, align 8
  %v1_26aa2 = add i32 %v0_26aa2, -706149140
  %v2_26aa2 = inttoptr i32 %v1_26aa2 to i8*
  %v3_26aa2 = load i8, i8* %v2_26aa2, align 1
  %v4_26aa2 = load i32, i32* @eax, align 8
  %v5_26aa2 = trunc i32 %v4_26aa2 to i8
  %v6_26aa2 = add i8 %v5_26aa2, %v3_26aa2
  store i8 %v6_26aa2, i8* %v2_26aa2, align 1
  %v2_26aa8 = load i32, i32* @eax, align 8
  %v4_26aa8 = mul i32 %v2_26aa8, 2
  %v21_26aa8 = inttoptr i32 %v2_26aa8 to i32*
  store i32 %v4_26aa8, i32* %v21_26aa8, align 4
  %v0_26aaa = load i32, i32* @ebx, align 8
  %v1_26aaa = add i32 %v0_26aaa, 1435221069
  %v2_26aaa = inttoptr i32 %v1_26aaa to i8*
  %v3_26aaa = load i8, i8* %v2_26aaa, align 1
  %v4_26aaa = load i32, i32* @ecx, align 4
  %v5_26aaa = trunc i32 %v4_26aaa to i8
  %v6_26aaa = add i8 %v5_26aaa, %v3_26aaa
  store i8 %v6_26aaa, i8* %v2_26aaa, align 1
  %v2_26ab5 = load i32, i32* inttoptr (i32 -1950071413 to i32*), align 4
  store i32 %v2_26ab5, i32* @ebp, align 4
  store i32 270818441, i32* %eax.global-to-local, align 8
  %v0_26abb = load i32, i32* @ecx, align 4
  store i32 %v0_26abb, i32* inttoptr (i32 -1950071397 to i32*), align 4
  %v0_26abf = load i32, i32* %edx.global-to-local, align 8
  %v1_26abf = load i32, i32* @esp, align 4
  %v2_26abf = add i32 %v1_26abf, 8
  %v3_26abf = inttoptr i32 %v2_26abf to i32*
  store i32 %v0_26abf, i32* %v3_26abf, align 4
  %v0_26ac3 = load i32, i32* @ebp, align 4
  %v1_26ac3 = add i32 %v0_26ac3, -64
  %v2_26ac3 = inttoptr i32 %v1_26ac3 to i32*
  %v3_26ac3 = load i32, i32* %v2_26ac3, align 4
  store i32 %v3_26ac3, i32* %edx.global-to-local, align 8
  %v1_26ac6 = load i32, i32* @esp, align 4
  %v2_26ac6 = add i32 %v1_26ac6, 4
  %v3_26ac6 = inttoptr i32 %v2_26ac6 to i32*
  store i32 %v3_26ac3, i32* %v3_26ac6, align 4
  %v0_26aca = load i32, i32* %eax.global-to-local, align 8
  %v1_26aca = load i32, i32* @esp, align 4
  %v2_26aca = inttoptr i32 %v1_26aca to i32*
  store i32 %v0_26aca, i32* %v2_26aca, align 4
  %v5_26acd = call i32 @unknown_51d58(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v5_26acd, i32* %eax.global-to-local, align 8
  %v0_26ad5 = call i32 @function_26c80()
  store i32 %v0_26ad5, i32* %eax.global-to-local, align 8
  ret i32 %v0_26ad5

; uselistorder directives
  uselistorder i32 %v2_26aa8, { 1, 0 }
}

define i32 @function_26ada() local_unnamed_addr {
dec_label_pc_26ada:
  %v0_26ada = load i32, i32* @ebp, align 4
  %v1_26ada = add i32 %v0_26ada, -40
  ret i32 %v1_26ada
}

define i32 @function_26ae4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ae4:
  %v0_26ae4 = load i32, i32* @ebp, align 4
  %v1_26ae4 = add i32 %v0_26ae4, -64
  %v2_26ae4 = inttoptr i32 %v1_26ae4 to i32*
  %v3_26ae4 = load i32, i32* %v2_26ae4, align 4
  %v0_26aeb = load i32, i32* @eax, align 8
  %v2_26aee = call i32 @unknown_51e5a(i32 %v0_26aeb, i32 %v3_26ae4)
  %v0_26af6 = load i32, i32* @ebp, align 4
  %v1_26af6 = add i32 %v0_26af6, -60
  %v2_26af6 = inttoptr i32 %v1_26af6 to i32*
  %v3_26af6 = load i32, i32* %v2_26af6, align 4
  %v1_26af9 = add i32 %v0_26af6, -40
  %v2_26af9 = inttoptr i32 %v1_26af9 to i32*
  %v3_26af9 = load i32, i32* %v2_26af9, align 4
  %v2_26afc = inttoptr i32 %v3_26af6 to i32*
  store i32 %v3_26af9, i32* %v2_26afc, align 4
  %v0_26afe = call i32 @function_26c80()
  ret i32 %v0_26afe
}

define i32 @function_26b16() local_unnamed_addr {
dec_label_pc_26b16:
  %eax.global-to-local = alloca i32, align 4
  %v0_26b16 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26b16
}

define i32 @function_26b23() local_unnamed_addr {
dec_label_pc_26b23:
  %eax.global-to-local = alloca i32, align 4
  %v0_26b23 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26b23
}

define i32 @function_26b34(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b34:
  %eax.global-to-local = alloca i32, align 4
  %v0_26b34 = load i32, i32* @eax, align 8
  %v1_26b34 = trunc i32 %v0_26b34 to i8
  %v2_26b34 = load i1, i1* @cf, align 1
  %v3_26b34 = zext i1 %v2_26b34 to i8
  %v4_26b34 = add i8 %v1_26b34, 2
  %v5_26b34 = add i8 %v4_26b34, %v3_26b34
  %v25_26b34 = zext i8 %v5_26b34 to i32
  %v27_26b34 = and i32 %v0_26b34, -256
  %v28_26b34 = or i32 %v25_26b34, %v27_26b34
  store i32 %v28_26b34, i32* %eax.global-to-local, align 8
  %v2_26b36 = mul i32 %v28_26b34, 8
  %v3_26b36 = add i32 %v28_26b34, 19694607
  %v4_26b36 = add i32 %v3_26b36, %v2_26b36
  %v5_26b36 = inttoptr i32 %v4_26b36 to i8*
  %v6_26b36 = load i8, i8* %v5_26b36, align 1
  %v9_26b36 = add i8 %v6_26b36, %v5_26b34
  store i8 %v9_26b36, i8* %v5_26b36, align 1
  %v0_26b3d = load i32, i32* %eax.global-to-local, align 8
  %v1_26b3d = inttoptr i32 %v0_26b3d to i8*
  %v2_26b3d = load i8, i8* %v1_26b3d, align 1
  %v4_26b3d = trunc i32 %v0_26b3d to i8
  %v5_26b3d = add i8 %v2_26b3d, %v4_26b3d
  store i8 %v5_26b3d, i8* %v1_26b3d, align 1
  %v0_26b3f = load i32, i32* @ebp, align 4
  %v1_26b3f = add i32 %v0_26b3f, -68
  %v2_26b3f = inttoptr i32 %v1_26b3f to i32*
  %v3_26b3f = load i32, i32* %v2_26b3f, align 4
  store i32 %v3_26b3f, i32* %eax.global-to-local, align 8
  %v2_26b42 = add i32 %v0_26b3f, -24
  %v3_26b42 = inttoptr i32 %v2_26b42 to i32*
  store i32 %v3_26b3f, i32* %v3_26b42, align 4
  %v0_26b45 = load i32, i32* @ebp, align 4
  %v1_26b45 = add i32 %v0_26b45, -68
  %v2_26b45 = inttoptr i32 %v1_26b45 to i32*
  %v3_26b45 = load i32, i32* %v2_26b45, align 4
  store i32 %v3_26b45, i32* @ebx, align 8
  %v1_26b48 = add i32 %v0_26b45, -64
  %v2_26b48 = inttoptr i32 %v1_26b48 to i32*
  %v3_26b48 = load i32, i32* %v2_26b48, align 4
  store i32 %v3_26b48, i32* %eax.global-to-local, align 8
  %v1_26b4e = call i32 @unknown_51c80(i32 %v3_26b48)
  store i32 %v1_26b4e, i32* %eax.global-to-local, align 8
  %v1_26b53 = inttoptr i32 %v1_26b4e to i32*
  %v2_26b53 = load i32, i32* %v1_26b53, align 4
  %v0_26b55 = load i32, i32* @ebx, align 8
  %v12_26b55 = icmp eq i32 %v0_26b55, %v2_26b53
  %v1_26b57 = zext i1 %v12_26b55 to i32
  %v3_26b57 = and i32 %v2_26b53, -256
  %v4_26b57 = or i32 %v1_26b57, %v3_26b57
  store i32 %v4_26b57, i32* %eax.global-to-local, align 8
  %v5_26b5a = icmp eq i1 %v12_26b55, false
  %v0_26b98 = load i32, i32* @ebp, align 4
  br i1 %v5_26b5a, label %dec_label_pc_26b98, label %dec_label_pc_26b5e

dec_label_pc_26b5e:                               ; preds = %dec_label_pc_26b34
  %v1_26b5e = add i32 %v0_26b98, -64
  %v2_26b5e = inttoptr i32 %v1_26b5e to i32*
  %v3_26b5e = load i32, i32* %v2_26b5e, align 4
  store i32 %v3_26b5e, i32* %eax.global-to-local, align 8
  %v1_26b64 = call i32 @unknown_51c80(i32 %v3_26b5e)
  store i32 %v1_26b64, i32* %eax.global-to-local, align 8
  %v1_26b69 = inttoptr i32 %v1_26b64 to i32*
  %v2_26b69 = load i32, i32* %v1_26b69, align 4
  %v0_26b6b = load i32, i32* @ebp, align 4
  %v1_26b6b = add i32 %v0_26b6b, -60
  %v2_26b6b = inttoptr i32 %v1_26b6b to i32*
  %v3_26b6b = load i32, i32* %v2_26b6b, align 4
  store i32 %v3_26b6b, i32* %eax.global-to-local, align 8
  %v1_26b6e = add i32 %v0_26b6b, -72
  %v2_26b6e = inttoptr i32 %v1_26b6e to i32*
  %v3_26b6e = load i32, i32* %v2_26b6e, align 4
  %v1_26b81 = add i32 %v0_26b6b, -64
  %v2_26b81 = inttoptr i32 %v1_26b81 to i32*
  %v3_26b81 = load i32, i32* %v2_26b81, align 4
  %v5_26b8b = call i32 @unknown_51d58(i32 %v3_26b6b, i32 %v3_26b81, i32 0, i32 %v2_26b69, i32 %v3_26b6e)
  store i32 %v5_26b8b, i32* %eax.global-to-local, align 8
  %v0_26b93 = call i32 @function_26c80()
  store i32 %v0_26b93, i32* %eax.global-to-local, align 8
  ret i32 %v0_26b93

dec_label_pc_26b98:                               ; preds = %dec_label_pc_26b34
  %v1_26b98 = add i32 %v0_26b98, -24
  store i32 %v1_26b98, i32* %eax.global-to-local, align 8
  %v1_26b9e = call i32 @unknown_488c6(i32 %v1_26b98)
  store i32 %v1_26b9e, i32* %eax.global-to-local, align 8
  %v1_26ba3 = inttoptr i32 %v1_26b9e to i32*
  %v2_26ba3 = load i32, i32* %v1_26ba3, align 4
  store i32 %v2_26ba3, i32* %eax.global-to-local, align 8
  %v1_26ba8 = call i32 @unknown_51cb0(i32 %v2_26ba3)
  store i32 %v1_26ba8, i32* @ebx, align 8
  %v0_26baf = load i32, i32* @ebp, align 4
  %v1_26bb6 = add i32 %v0_26baf, -13
  store i32 %v1_26bb6, i32* %eax.global-to-local, align 8
  %v1_26bbc = call i32 @unknown_51cf4(i32 %v1_26bb6)
  store i32 %v1_26bbc, i32* %eax.global-to-local, align 8
  %v0_26bc1 = load i32, i32* @ebp, align 4
  %v1_26bc1 = add i32 %v0_26bc1, -64
  %v2_26bc1 = inttoptr i32 %v1_26bc1 to i32*
  %v3_26bc1 = load i32, i32* %v2_26bc1, align 4
  %v0_26bc4 = load i32, i32* @ebx, align 8
  %v3_26bcf = call i32 @unknown_47fc0(i32 %v3_26bc1, i32 %v1_26bbc, i32 %v0_26bc4)
  store i32 %v3_26bcf, i32* %eax.global-to-local, align 8
  %v4_26bd4 = trunc i32 %v3_26bcf to i8
  %v5_26bd4 = icmp eq i8 %v4_26bd4, 0
  %v0_26c45 = load i32, i32* @ebp, align 4
  br i1 %v5_26bd4, label %dec_label_pc_26c45, label %dec_label_pc_26bd8

dec_label_pc_26bd8:                               ; preds = %dec_label_pc_26b98
  %v1_26bd8 = add i32 %v0_26c45, -68
  %v2_26bd8 = inttoptr i32 %v1_26bd8 to i32*
  %v3_26bd8 = load i32, i32* %v2_26bd8, align 4
  store i32 %v3_26bd8, i32* %eax.global-to-local, align 8
  %v1_26bde = call i32 @unknown_520cd(i32 %v3_26bd8)
  %v1_26be3 = icmp eq i32 %v1_26bde, 0
  %v1_26be5 = zext i1 %v1_26be3 to i32
  %v3_26be5 = and i32 %v1_26bde, -256
  %v4_26be5 = or i32 %v1_26be5, %v3_26be5
  store i32 %v4_26be5, i32* %eax.global-to-local, align 8
  %v5_26be8 = icmp eq i1 %v1_26be3, false
  %v0_26c19 = load i32, i32* @ebp, align 4
  br i1 %v5_26be8, label %dec_label_pc_26c19, label %dec_label_pc_26bec

dec_label_pc_26bec:                               ; preds = %dec_label_pc_26bd8
  %v1_26bec = add i32 %v0_26c19, -68
  %v2_26bec = inttoptr i32 %v1_26bec to i32*
  %v3_26bec = load i32, i32* %v2_26bec, align 4
  %v1_26bef = add i32 %v0_26c19, -60
  %v2_26bef = inttoptr i32 %v1_26bef to i32*
  %v3_26bef = load i32, i32* %v2_26bef, align 4
  store i32 %v3_26bef, i32* %eax.global-to-local, align 8
  %v1_26bf2 = add i32 %v0_26c19, -72
  %v2_26bf2 = inttoptr i32 %v1_26bf2 to i32*
  %v3_26bf2 = load i32, i32* %v2_26bf2, align 4
  %v1_26c05 = add i32 %v0_26c19, -64
  %v2_26c05 = inttoptr i32 %v1_26c05 to i32*
  %v3_26c05 = load i32, i32* %v2_26c05, align 4
  %v5_26c0f = call i32 @unknown_51d58(i32 %v3_26bef, i32 %v3_26c05, i32 0, i32 %v3_26bec, i32 %v3_26bf2)
  store i32 %v5_26c0f, i32* %eax.global-to-local, align 8
  %v0_26c17 = call i32 @function_26c80()
  store i32 %v0_26c17, i32* %eax.global-to-local, align 8
  ret i32 %v0_26c17

dec_label_pc_26c19:                               ; preds = %dec_label_pc_26bd8
  %v1_26c19 = add i32 %v0_26c19, -24
  %v2_26c19 = inttoptr i32 %v1_26c19 to i32*
  %v3_26c19 = load i32, i32* %v2_26c19, align 4
  %v1_26c1f = add i32 %v0_26c19, -60
  %v2_26c1f = inttoptr i32 %v1_26c1f to i32*
  %v3_26c1f = load i32, i32* %v2_26c1f, align 4
  store i32 %v3_26c1f, i32* %eax.global-to-local, align 8
  %v1_26c22 = add i32 %v0_26c19, -72
  %v2_26c22 = inttoptr i32 %v1_26c22 to i32*
  %v3_26c22 = load i32, i32* %v2_26c22, align 4
  store i32 %v3_26c22, i32* @ebx, align 8
  %v1_26c31 = add i32 %v0_26c19, -64
  %v2_26c31 = inttoptr i32 %v1_26c31 to i32*
  %v3_26c31 = load i32, i32* %v2_26c31, align 4
  %v5_26c3b = call i32 @unknown_51d58(i32 %v3_26c1f, i32 %v3_26c31, i32 %v3_26c19, i32 %v3_26c19, i32 %v3_26c22)
  store i32 %v5_26c3b, i32* %eax.global-to-local, align 8
  %v0_26c43 = call i32 @function_26c80()
  store i32 %v0_26c43, i32* %eax.global-to-local, align 8
  ret i32 %v0_26c43

dec_label_pc_26c45:                               ; preds = %dec_label_pc_26b98
  %v1_26c45 = add i32 %v0_26c45, -32
  store i32 %v1_26c45, i32* %eax.global-to-local, align 8
  %v1_26c4f = add i32 %v0_26c45, -64
  %v2_26c4f = inttoptr i32 %v1_26c4f to i32*
  %v3_26c4f = load i32, i32* %v2_26c4f, align 4
  %v2_26c59 = call i32 @unknown_51e5a(i32 %v1_26c45, i32 %v3_26c4f)
  store i32 %v2_26c59, i32* %eax.global-to-local, align 8
  %v0_26c61 = load i32, i32* @ebp, align 4
  %v1_26c61 = add i32 %v0_26c61, -60
  %v2_26c61 = inttoptr i32 %v1_26c61 to i32*
  %v3_26c61 = load i32, i32* %v2_26c61, align 4
  store i32 %v3_26c61, i32* %eax.global-to-local, align 8
  %v1_26c64 = add i32 %v0_26c61, -32
  %v2_26c64 = inttoptr i32 %v1_26c64 to i32*
  %v3_26c64 = load i32, i32* %v2_26c64, align 4
  %v2_26c67 = inttoptr i32 %v3_26c61 to i32*
  store i32 %v3_26c64, i32* %v2_26c67, align 4
  %v0_26c69 = call i32 @function_26c80()
  store i32 %v0_26c69, i32* %eax.global-to-local, align 8
  ret i32 %v0_26c69

; uselistorder directives
  uselistorder i32 %v3_26c19, { 1, 0 }
  uselistorder i32 %v0_26c19, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i1 %v1_26be3, { 1, 0 }
  uselistorder i32 %v0_26c45, { 0, 2, 1 }
  uselistorder i32 %v0_26b98, { 1, 0 }
  uselistorder i32 %v2_26b53, { 1, 0 }
  uselistorder i32 %v28_26b34, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 6, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 ()* @function_26c80, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_51d58, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32)* @unknown_51c80, { 1, 0 }
}

define i32 @function_26c80() local_unnamed_addr {
dec_label_pc_26c80:
  %v0_26c80 = load i32, i32* @ebp, align 4
  %v1_26c80 = add i32 %v0_26c80, -60
  %v2_26c80 = inttoptr i32 %v1_26c80 to i32*
  %v3_26c80 = load i32, i32* %v2_26c80, align 4
  store i32 %v3_26c80, i32* @eax, align 8
  %v1_26c83 = add i32 %v0_26c80, -12
  %v2_26c83 = inttoptr i32 %v1_26c83 to i32*
  %v3_26c83 = load i32, i32* %v2_26c83, align 4
  %v4_26c86 = icmp eq i32 %v3_26c83, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26c86, label %bb, label %dec_label_pc_26c8f

bb:                                               ; preds = %dec_label_pc_26c80
  %v1_26c8d = call i32 @function_26c94()
  br label %dec_label_pc_26c8f

dec_label_pc_26c8f:                               ; preds = %bb, %dec_label_pc_26c80
  %v2_26c8d = phi i32 [ %v1_26c8d, %bb ], [ %v3_26c80, %dec_label_pc_26c80 ]
  ret i32 %v2_26c8d
}

define i32 @function_26c94() local_unnamed_addr {
dec_label_pc_26c94:
  %v0_26c94 = load i32, i32* @ebp, align 4
  %v1_26c94 = add i32 %v0_26c94, -4
  %v2_26c94 = inttoptr i32 %v1_26c94 to i32*
  %v3_26c94 = load i32, i32* %v2_26c94, align 4
  store i32 %v3_26c94, i32* @ebx, align 8
  %v0_26c98 = load i32, i32* @eax, align 8
  ret i32 %v0_26c98
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c9c:
  ret i32 %arg2
}

define i32 @function_26cc2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26cc2:
  %v3_26cc6 = load i32, i32* @eax, align 8
  ret i32 %v3_26cc6
}

define i32 @function_26d02() local_unnamed_addr {
dec_label_pc_26d02:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26d02 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26d02 = add i32 %v0_26d02, -1
  store i32 %v1_26d02, i32* %ecx.global-to-local, align 4
  %v0_26d04 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_26d04
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26d06:
  ret i32 %arg2
}

define i32 @function_26d16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26d16:
  %v0_26d16 = load i32, i32* @ebp, align 4
  %v1_26d16 = add i32 %v0_26d16, 1
  store i32 %v1_26d16, i32* @ebp, align 4
  %v2_26d1e = add i32 %v0_26d16, -11
  %v3_26d1e = inttoptr i32 %v2_26d1e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_26d1e, align 4
  %v0_26d23 = load i32, i32* @ebp, align 4
  %v1_26d23 = add i32 %v0_26d23, -32
  %v2_26d23 = inttoptr i32 %v1_26d23 to i32*
  %v3_26d23 = load i32, i32* %v2_26d23, align 4
  %v1_26d29 = call i32 @unknown_4db7c(i32 %v3_26d23)
  %v0_26d32 = load i32, i32* @ebp, align 4
  %v1_26d32 = add i32 %v0_26d32, -28
  %v2_26d32 = inttoptr i32 %v1_26d32 to i32*
  %v3_26d32 = load i32, i32* %v2_26d32, align 4
  %v2_26d38 = call i32 @unknown_4dbaa(i32 %v3_26d32, i32 %v1_26d29)
  %v0_26d3d = load i32, i32* @ebp, align 4
  %v1_26d3d = add i32 %v0_26d3d, -28
  %v2_26d3d = inttoptr i32 %v1_26d3d to i32*
  %v3_26d3d = load i32, i32* %v2_26d3d, align 4
  ret i32 %v3_26d3d
}

define i32 @function_26d44(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d44:
  %v0_26d44 = load i32, i32* @edx, align 8
  %v4_26d44 = icmp eq i32 %v0_26d44, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26d44, label %bb, label %dec_label_pc_26d44.dec_label_pc_26d4c_crit_edge

dec_label_pc_26d44.dec_label_pc_26d4c_crit_edge:  ; preds = %dec_label_pc_26d44
  %v2_26d4a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_26d4c

bb:                                               ; preds = %dec_label_pc_26d44
  %v1_26d4a = call i32 @function_26d51()
  br label %dec_label_pc_26d4c

dec_label_pc_26d4c:                               ; preds = %dec_label_pc_26d44.dec_label_pc_26d4c_crit_edge, %bb
  %v2_26d4a = phi i32 [ %v2_26d4a.pre, %dec_label_pc_26d44.dec_label_pc_26d4c_crit_edge ], [ %v1_26d4a, %bb ]
  ret i32 %v2_26d4a

; uselistorder directives
  uselistorder label %dec_label_pc_26d4c, { 1, 0 }
}

define i32 @function_26d51() local_unnamed_addr {
dec_label_pc_26d51:
  %v0_26d52 = load i32, i32* @eax, align 8
  ret i32 %v0_26d52
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d56:
  ret i32 %arg1
}

define i32 @function_26d66(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d66:
  %v2_26d66 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_26d66 = load i32, i32* @eax, align 8
  %v4_26d66 = trunc i32 %v3_26d66 to i8
  %v5_26d66 = add i8 %v4_26d66, %v2_26d66
  %v21_26d66 = inttoptr i32 %v3_26d66 to i8*
  store i8 %v5_26d66, i8* %v21_26d66, align 1
  %v0_26d68 = load i32, i32* @eax, align 8
  %v1_26d68 = load i32, i32* @ebp, align 4
  %v2_26d68 = add i32 %v1_26d68, -12
  %v3_26d68 = inttoptr i32 %v2_26d68 to i32*
  store i32 %v0_26d68, i32* %v3_26d68, align 4
  %v0_26d6d = load i32, i32* @ebp, align 4
  %v1_26d6d = add i32 %v0_26d6d, -28
  %v2_26d6d = inttoptr i32 %v1_26d6d to i32*
  %v3_26d6d = load i32, i32* %v2_26d6d, align 4
  ret i32 %v3_26d6d
}

define i32 @function_26d74(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d74:
  %v0_26d7b = load i32, i32* @eax, align 8
  %v3_26d7b = xor i32 %v0_26d7b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_26d7b = icmp eq i32 %v3_26d7b, 0
  store i32 %v3_26d7b, i32* @eax, align 8
  br i1 %v4_26d7b, label %bb, label %dec_label_pc_26d84

bb:                                               ; preds = %dec_label_pc_26d74
  %v1_26d82 = call i32 @function_26d89()
  br label %dec_label_pc_26d84

dec_label_pc_26d84:                               ; preds = %bb, %dec_label_pc_26d74
  %v2_26d82 = phi i32 [ %v1_26d82, %bb ], [ %v3_26d7b, %dec_label_pc_26d74 ]
  ret i32 %v2_26d82
}

define i32 @function_26d89() local_unnamed_addr {
dec_label_pc_26d89:
  %v0_26d8a = load i32, i32* @eax, align 8
  ret i32 %v0_26d8a
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEPT_RSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d8b:
  ret i32 0
}

define i32 @function_26da4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26da4:
  %v0_26da8 = load i32, i32* @edx, align 8
  %v4_26da8 = icmp eq i32 %v0_26da8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26da8, label %bb, label %dec_label_pc_26da4.dec_label_pc_26db1_crit_edge

dec_label_pc_26da4.dec_label_pc_26db1_crit_edge:  ; preds = %dec_label_pc_26da4
  %v2_26daf.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_26db1

bb:                                               ; preds = %dec_label_pc_26da4
  %v1_26daf = call i32 @function_26db6()
  br label %dec_label_pc_26db1

dec_label_pc_26db1:                               ; preds = %dec_label_pc_26da4.dec_label_pc_26db1_crit_edge, %bb
  %v2_26daf = phi i32 [ %v2_26daf.pre, %dec_label_pc_26da4.dec_label_pc_26db1_crit_edge ], [ %v1_26daf, %bb ]
  ret i32 %v2_26daf

; uselistorder directives
  uselistorder label %dec_label_pc_26db1, { 1, 0 }
}

define i32 @function_26db6() local_unnamed_addr {
dec_label_pc_26db6:
  %v0_26db7 = load i32, i32* @eax, align 8
  ret i32 %v0_26db7
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26db8:
  %v1_26dd2 = add i32 %arg1, 4
  store i32 %v1_26dd2, i32* @eax, align 8
  %v1_26dd8 = call i32 @function_28f98(i32 %v1_26dd2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26de9

bb:                                               ; preds = %dec_label_pc_26db8
  %v1_26de7 = call i32 @function_26dee()
  br label %dec_label_pc_26de9

dec_label_pc_26de9:                               ; preds = %bb, %dec_label_pc_26db8
  %v2_26de7 = phi i32 [ %v1_26de7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_26db8 ]
  ret i32 %v2_26de7
}

define i32 @function_26dee() local_unnamed_addr {
dec_label_pc_26dee:
  %v0_26def = load i32, i32* @eax, align 8
  ret i32 %v0_26def
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEE7destroyEPSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26df0:
  %v1_26e13 = call i32 @unknown_4dba8(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26e24

bb:                                               ; preds = %dec_label_pc_26df0
  %v1_26e22 = call i32 @function_26e29()
  br label %dec_label_pc_26e24

dec_label_pc_26e24:                               ; preds = %bb, %dec_label_pc_26df0
  %v2_26e22 = phi i32 [ %v1_26e22, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_26df0 ]
  ret i32 %v2_26e22
}

define i32 @function_26e29() local_unnamed_addr {
dec_label_pc_26e29:
  %v0_26e2a = load i32, i32* @eax, align 8
  ret i32 %v0_26e2a
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_put_nodeEPSt10_List_nodeISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26e2c:
  ret i32 %arg1
}

define i32 @function_26e58(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e58:
  %v0_26e59 = load i32, i32* @eax, align 8
  %v11_26e59 = and i32 %v0_26e59, -252
  %v1_26e5e = call i32 @unknown_527bc(i32 %v11_26e59)
  %v0_26e63 = load i32, i32* @ebp, align 4
  %v1_26e63 = add i32 %v0_26e63, -12
  %v2_26e63 = inttoptr i32 %v1_26e63 to i32*
  %v3_26e63 = load i32, i32* %v2_26e63, align 4
  %v3_26e66 = xor i32 %v3_26e63, ptrtoint ([3 x i8]* @3 to i32)
  %v4_26e66 = icmp eq i32 %v3_26e66, 0
  store i32 %v3_26e66, i32* @eax, align 8
  br i1 %v4_26e66, label %bb, label %dec_label_pc_26e6f

bb:                                               ; preds = %dec_label_pc_26e58
  %v1_26e6d = call i32 @function_26e74()
  br label %dec_label_pc_26e6f

dec_label_pc_26e6f:                               ; preds = %bb, %dec_label_pc_26e58
  %v2_26e6d = phi i32 [ %v1_26e6d, %bb ], [ %v3_26e66, %dec_label_pc_26e58 ]
  ret i32 %v2_26e6d
}

define i32 @function_26e74() local_unnamed_addr {
dec_label_pc_26e74:
  %v0_26e75 = load i32, i32* @eax, align 8
  ret i32 %v0_26e75
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e76:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26e9c

bb:                                               ; preds = %dec_label_pc_26e76
  %v2_26e9a = call i32 @function_26ea1(i32 %arg1)
  br label %dec_label_pc_26e9c

dec_label_pc_26e9c:                               ; preds = %bb, %dec_label_pc_26e76
  %v3_26e9a = phi i32 [ %v2_26e9a, %bb ], [ %arg1, %dec_label_pc_26e76 ]
  ret i32 %v3_26e9a
}

define i32 @function_26ea1(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ea1:
  %v4_26ea1 = load i32, i32* @eax, align 8
  ret i32 %v4_26ea1
}

define i32 @function_26ea2() local_unnamed_addr {
dec_label_pc_26ea2:
  %v0_26ea2 = load i32, i32* @eax, align 8
  ret i32 %v0_26ea2
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ea4:
  %v1_26ec7 = call i32 @unknown_52876(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26ed8

bb:                                               ; preds = %dec_label_pc_26ea4
  %v1_26ed6 = call i32 @function_26edd()
  br label %dec_label_pc_26ed8

dec_label_pc_26ed8:                               ; preds = %bb, %dec_label_pc_26ea4
  %v2_26ed6 = phi i32 [ %v1_26ed6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_26ea4 ]
  ret i32 %v2_26ed6
}

define i32 @function_26edd() local_unnamed_addr {
dec_label_pc_26edd:
  %v0_26ede = load i32, i32* @eax, align 8
  ret i32 %v0_26ede
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ee0:
  %stack_var_-17 = alloca i32, align 4
  %v2_26f04 = ptrtoint i32* %stack_var_-17 to i32
  %v2_26f0a = call i32 @unknown_528dc(i32 %v2_26f04, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_26f1a() local_unnamed_addr {
dec_label_pc_26f1a:
  %v0_26f1c = call i32 @unknown_52918()
  %v0_26f21 = load i32, i32* @ebp, align 4
  %v1_26f21 = add i32 %v0_26f21, -13
  %v1_26f27 = call i32 @unknown_4df36(i32 %v1_26f21)
  %v0_26f2c = load i32, i32* @ebp, align 4
  %v1_26f2c = add i32 %v0_26f2c, -28
  %v2_26f2c = inttoptr i32 %v1_26f2c to i32*
  %v3_26f2c = load i32, i32* %v2_26f2c, align 4
  %v1_26f32 = call i32 @unknown_5296e(i32 %v3_26f2c)
  %v0_26f37 = load i32, i32* @ebp, align 4
  %v1_26f37 = add i32 %v0_26f37, -12
  %v2_26f37 = inttoptr i32 %v1_26f37 to i32*
  %v3_26f37 = load i32, i32* %v2_26f37, align 4
  %v3_26f3a = xor i32 %v3_26f37, ptrtoint ([3 x i8]* @3 to i32)
  %v4_26f3a = icmp eq i32 %v3_26f3a, 0
  store i32 %v3_26f3a, i32* @eax, align 8
  br i1 %v4_26f3a, label %bb, label %dec_label_pc_26f43

bb:                                               ; preds = %dec_label_pc_26f1a
  %v3_26f41 = call i32 @function_26f48(i32 %v3_26f2c, i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_26f43

dec_label_pc_26f43:                               ; preds = %bb, %dec_label_pc_26f1a
  %v4_26f41 = phi i32 [ %v3_26f41, %bb ], [ %v3_26f3a, %dec_label_pc_26f1a ]
  ret i32 %v4_26f41

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_26f48, { 1, 0 }
}

define i32 @function_26f48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f48:
  %v0_26f49 = load i32, i32* @eax, align 8
  ret i32 %v0_26f49
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_26f4a:
  %v2_26f6a = load i32, i32* %arg2, align 4
  %v2_26f76 = call i32 @unknown_52a14(i32 %arg1, i32 %v2_26f6a)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_26f8a

bb:                                               ; preds = %dec_label_pc_26f4a
  %v1_26f88 = call i32 @function_26f8f()
  br label %dec_label_pc_26f8a

dec_label_pc_26f8a:                               ; preds = %bb, %dec_label_pc_26f4a
  %v2_26f88 = phi i32 [ %v1_26f88, %bb ], [ %arg1, %dec_label_pc_26f4a ]
  ret i32 %v2_26f88

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26f8f() local_unnamed_addr {
dec_label_pc_26f8f:
  %v0_26f90 = load i32, i32* @eax, align 8
  ret i32 %v0_26f90
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv() local_unnamed_addr {
dec_label_pc_26f94:
  %eax.global-to-local = alloca i32, align 4
  %v2_26f95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_26f95
}

define i32 @function_26f98(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f98:
  %ebp.global-to-local = alloca i32, align 4
  %v0_26fa1 = load i32, i32* @ebp, align 4
  %v1_26fa4 = add i32 %v0_26fa1, 2
  store i32 %v1_26fa4, i32* %ebp.global-to-local, align 4
  %v2_26fac = add i32 %v0_26fa1, -10
  %v3_26fac = inttoptr i32 %v2_26fac to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_26fac, align 4
  %v0_26fb1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_26fb1 = add i32 %v0_26fb1, -32
  %v2_26fb1 = inttoptr i32 %v1_26fb1 to i32*
  %v3_26fb1 = load i32, i32* %v2_26fb1, align 4
  %v1_26fb8 = add i32 %v0_26fb1, -28
  %v2_26fb8 = inttoptr i32 %v1_26fb8 to i32*
  %v3_26fb8 = load i32, i32* %v2_26fb8, align 4
  %v2_26fbe = call i32 @unknown_52a5e(i32 %v3_26fb8, i32 %v3_26fb1)
  %v0_26fc3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_26fc3 = add i32 %v0_26fc3, -28
  %v2_26fc3 = inttoptr i32 %v1_26fc3 to i32*
  %v3_26fc3 = load i32, i32* %v2_26fc3, align 4
  ret i32 %v3_26fc3
}

define i32 @function_26fc8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26fc8:
  %v0_26fc9 = load i32, i32* @edx, align 8
  %v4_26fc9 = icmp eq i32 %v0_26fc9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_26fc9, label %bb, label %dec_label_pc_26fc8.dec_label_pc_26fd2_crit_edge

dec_label_pc_26fc8.dec_label_pc_26fd2_crit_edge:  ; preds = %dec_label_pc_26fc8
  %v2_26fd0.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_26fd2

bb:                                               ; preds = %dec_label_pc_26fc8
  %v1_26fd0 = call i32 @function_26fd7()
  br label %dec_label_pc_26fd2

dec_label_pc_26fd2:                               ; preds = %dec_label_pc_26fc8.dec_label_pc_26fd2_crit_edge, %bb
  %v2_26fd0 = phi i32 [ %v2_26fd0.pre, %dec_label_pc_26fc8.dec_label_pc_26fd2_crit_edge ], [ %v1_26fd0, %bb ]
  ret i32 %v2_26fd0

; uselistorder directives
  uselistorder label %dec_label_pc_26fd2, { 1, 0 }
}

define i32 @function_26fd7() local_unnamed_addr {
dec_label_pc_26fd7:
  %v0_26fd8 = load i32, i32* @eax, align 8
  ret i32 %v0_26fd8
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE22_M_initialize_dispatchISt20_List_const_iteratorISJ_EEEvT_SP_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_26fdc:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_27030 = ptrtoint i32* %stack_var_-40 to i32
  %v2_27034 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2703a = call i32 @unknown_4911e(i32 %v2_27034, i32 %v4_27030)
  %v4_2703f = trunc i32 %v2_2703a to i8
  %v5_2703f = icmp eq i8 %v4_2703f, 0
  %v1_27041 = icmp eq i1 %v5_2703f, false
  br i1 %v1_27041, label %dec_label_pc_27008, label %dec_label_pc_27043

dec_label_pc_27008:                               ; preds = %dec_label_pc_26fdc
  ret i32 %v2_27034

dec_label_pc_27043:                               ; preds = %dec_label_pc_26fdc
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2704f

bb:                                               ; preds = %dec_label_pc_27043
  %v1_2704d = call i32 @function_27054()
  br label %dec_label_pc_2704f

dec_label_pc_2704f:                               ; preds = %bb, %dec_label_pc_27043
  %v2_2704d = phi i32 [ %v1_2704d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27043 ]
  ret i32 %v2_2704d
}

define i32 @function_27054() local_unnamed_addr {
dec_label_pc_27054:
  %v0_27055 = load i32, i32* @eax, align 8
  ret i32 %v0_27055
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27056:
  %v1_27073 = call i32 @unknown_52be8(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27084

bb:                                               ; preds = %dec_label_pc_27056
  %v1_27082 = call i32 @function_27089()
  br label %dec_label_pc_27084

dec_label_pc_27084:                               ; preds = %bb, %dec_label_pc_27056
  %v2_27082 = phi i32 [ %v1_27082, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27056 ]
  ret i32 %v2_27082
}

define i32 @function_27089() local_unnamed_addr {
dec_label_pc_27089:
  %v4_27089 = load i32, i32* @eax, align 8
  ret i32 %v4_27089
}

define i32 @function_2708a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2708a:
  %v0_2708a = load i32, i32* @eax, align 8
  ret i32 %v0_2708a
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2708c:
  ret i32 %arg1
}

define i32 @function_2709c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2709c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v2_2709c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2709c = load i32, i32* @eax, align 8
  %v4_2709c = trunc i32 %v3_2709c to i8
  %v5_2709c = add i8 %v4_2709c, %v2_2709c
  %v21_2709c = inttoptr i32 %v3_2709c to i8*
  store i8 %v5_2709c, i8* %v21_2709c, align 1
  %v0_2709e = load i32, i32* @ecx, align 4
  %v1_2709e = add i32 %v0_2709e, -1070468027
  %v2_2709e = inttoptr i32 %v1_2709e to i8*
  %v3_2709e = load i8, i8* %v2_2709e, align 1
  %v5_2709e = trunc i32 %v0_2709e to i8
  %v6_2709e = add i8 %v3_2709e, %v5_2709e
  store i8 %v6_2709e, i8* %v2_2709e, align 1
  %v0_270a4 = load i32, i32* @ebp, align 4
  %v1_270a4 = add i32 %v0_270a4, -28
  %v2_270a4 = inttoptr i32 %v1_270a4 to i32*
  %v3_270a4 = load i32, i32* %v2_270a4, align 4
  store i32 %v3_270a4, i32* %eax.global-to-local, align 8
  %v1_270a7 = inttoptr i32 %v3_270a4 to i32*
  %v2_270a7 = load i32, i32* %v1_270a7, align 4
  store i32 %v2_270a7, i32* %eax.global-to-local, align 8
  %v2_270a9 = add i32 %v0_270a4, -24
  %v3_270a9 = inttoptr i32 %v2_270a9 to i32*
  store i32 %v2_270a7, i32* %v3_270a9, align 4
  br label %dec_label_pc_2710d

dec_label_pc_270ae:                               ; preds = %dec_label_pc_2710d
  %v3_270ae = load i32, i32* %v3_27110, align 4
  store i32 %v3_270ae, i32* %eax.global-to-local, align 8
  %v2_270b1 = add i32 %v0_2710d, -20
  %v3_270b1 = inttoptr i32 %v2_270b1 to i32*
  store i32 %v3_270ae, i32* %v3_270b1, align 4
  %v0_270b4 = load i32, i32* @ebp, align 4
  %v1_270b4 = add i32 %v0_270b4, -24
  %v2_270b4 = inttoptr i32 %v1_270b4 to i32*
  %v3_270b4 = load i32, i32* %v2_270b4, align 4
  store i32 %v3_270b4, i32* %eax.global-to-local, align 8
  %v1_270b7 = inttoptr i32 %v3_270b4 to i32*
  %v2_270b7 = load i32, i32* %v1_270b7, align 4
  store i32 %v2_270b7, i32* %eax.global-to-local, align 8
  store i32 %v2_270b7, i32* %v2_270b4, align 4
  %v0_270bc = load i32, i32* @ebp, align 4
  %v1_270bc = add i32 %v0_270bc, -20
  %v2_270bc = inttoptr i32 %v1_270bc to i32*
  %v3_270bc = load i32, i32* %v2_270bc, align 4
  %v1_270bf = add i32 %v3_270bc, 8
  store i32 %v1_270bf, i32* %eax.global-to-local, align 8
  %v1_270c2 = load i32, i32* @esp, align 4
  %v2_270c2 = inttoptr i32 %v1_270c2 to i32*
  store i32 %v1_270bf, i32* %v2_270c2, align 4
  %v0_270c5 = call i32 @unknown_4de17()
  store i32 %v0_270c5, i32* %ebx.global-to-local, align 8
  %v0_270cc = load i32, i32* @ebp, align 4
  %v1_270cc = add i32 %v0_270cc, -13
  store i32 %v1_270cc, i32* %eax.global-to-local, align 8
  %v1_270cf = add i32 %v0_270cc, -28
  %v2_270cf = inttoptr i32 %v1_270cf to i32*
  %v3_270cf = load i32, i32* %v2_270cf, align 4
  store i32 %v3_270cf, i32* @edx, align 8
  %v1_270d2 = load i32, i32* @esp, align 4
  %v2_270d2 = add i32 %v1_270d2, 4
  %v3_270d2 = inttoptr i32 %v2_270d2 to i32*
  store i32 %v3_270cf, i32* %v3_270d2, align 4
  %v0_270d6 = load i32, i32* %eax.global-to-local, align 8
  %v1_270d6 = load i32, i32* @esp, align 4
  %v2_270d6 = inttoptr i32 %v1_270d6 to i32*
  store i32 %v0_270d6, i32* %v2_270d6, align 4
  %v0_270d9 = call i32 @unknown_4dd92()
  %v0_270de = load i32, i32* @esp, align 4
  %v0_270e1 = load i32, i32* %ebx.global-to-local, align 8
  %v3_270e1 = inttoptr i32 %v0_270de to i32*
  store i32 %v0_270e1, i32* %v3_270e1, align 4
  %v0_270e5 = load i32, i32* @ebp, align 4
  %v1_270e5 = add i32 %v0_270e5, -13
  store i32 %v1_270e5, i32* %eax.global-to-local, align 8
  %v1_270e8 = load i32, i32* @esp, align 4
  %v2_270e8 = inttoptr i32 %v1_270e8 to i32*
  store i32 %v1_270e5, i32* %v2_270e8, align 4
  %v0_270eb = call i32 @unknown_4de7c()
  %v0_270f0 = load i32, i32* @ebp, align 4
  %v1_270f0 = add i32 %v0_270f0, -13
  store i32 %v1_270f0, i32* %eax.global-to-local, align 8
  %v1_270f3 = load i32, i32* @esp, align 4
  %v2_270f3 = inttoptr i32 %v1_270f3 to i32*
  store i32 %v1_270f0, i32* %v2_270f3, align 4
  %v0_270f6 = call i32 @unknown_4dde2()
  store i32 %v0_270f6, i32* %eax.global-to-local, align 8
  %v0_270fb = load i32, i32* @ebp, align 4
  %v1_270fb = add i32 %v0_270fb, -20
  %v2_270fb = inttoptr i32 %v1_270fb to i32*
  %v3_270fb = load i32, i32* %v2_270fb, align 4
  store i32 %v3_270fb, i32* %eax.global-to-local, align 8
  %v1_270fe = load i32, i32* @esp, align 4
  %v2_270fe = add i32 %v1_270fe, 4
  %v3_270fe = inttoptr i32 %v2_270fe to i32*
  store i32 %v3_270fb, i32* %v3_270fe, align 4
  %v0_27102 = load i32, i32* @ebp, align 4
  %v1_27102 = add i32 %v0_27102, -28
  %v2_27102 = inttoptr i32 %v1_27102 to i32*
  %v3_27102 = load i32, i32* %v2_27102, align 4
  store i32 %v3_27102, i32* %eax.global-to-local, align 8
  %v1_27105 = load i32, i32* @esp, align 4
  %v2_27105 = inttoptr i32 %v1_27105 to i32*
  store i32 %v3_27102, i32* %v2_27105, align 4
  %v0_27108 = call i32 @unknown_4deb8()
  store i32 %v0_27108, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2710d

dec_label_pc_2710d:                               ; preds = %dec_label_pc_270ae, %dec_label_pc_2709c
  %v0_2710d = load i32, i32* @ebp, align 4
  %v1_2710d = add i32 %v0_2710d, -28
  %v2_2710d = inttoptr i32 %v1_2710d to i32*
  %v3_2710d = load i32, i32* %v2_2710d, align 4
  store i32 %v3_2710d, i32* %eax.global-to-local, align 8
  %v2_27110 = add i32 %v0_2710d, -24
  %v3_27110 = inttoptr i32 %v2_27110 to i32*
  %v4_27110 = load i32, i32* %v3_27110, align 4
  %v15_27110 = icmp eq i32 %v3_2710d, %v4_27110
  %v1_27113 = icmp eq i1 %v15_27110, false
  %v2_27113 = zext i1 %v1_27113 to i32
  %v4_27113 = and i32 %v3_2710d, -256
  %v5_27113 = or i32 %v2_27113, %v4_27113
  store i32 %v5_27113, i32* %eax.global-to-local, align 8
  %v5_27116 = icmp eq i1 %v1_27113, false
  %v1_27118 = icmp eq i1 %v5_27116, false
  br i1 %v1_27118, label %dec_label_pc_270ae, label %dec_label_pc_2711a

dec_label_pc_2711a:                               ; preds = %dec_label_pc_2710d
  %v0_2711a = call i32 @function_27133()
  store i32 %v0_2711a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2711a

; uselistorder directives
  uselistorder i32* %v3_27110, { 1, 0 }
  uselistorder i32 %v3_2710d, { 1, 0, 2 }
  uselistorder i32 %v0_2710d, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16 }
}

define i32 @function_2711d() local_unnamed_addr {
dec_label_pc_2711d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2711d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2711d
}

define i32 @function_27133() local_unnamed_addr {
dec_label_pc_27133:
  %v0_27133 = load i32, i32* @ebp, align 4
  %v1_27133 = add i32 %v0_27133, -12
  %v2_27133 = inttoptr i32 %v1_27133 to i32*
  %v3_27133 = load i32, i32* %v2_27133, align 4
  %v3_27136 = xor i32 %v3_27133, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27136 = icmp eq i32 %v3_27136, 0
  store i32 %v3_27136, i32* @eax, align 8
  br i1 %v4_27136, label %bb, label %dec_label_pc_2713f

bb:                                               ; preds = %dec_label_pc_27133
  %v3_2713d = call i32 @function_27144(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_2713f

dec_label_pc_2713f:                               ; preds = %bb, %dec_label_pc_27133
  %v4_2713d = phi i32 [ %v3_2713d, %bb ], [ %v3_27136, %dec_label_pc_27133 ]
  ret i32 %v4_2713d
}

define i32 @function_27144(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27144:
  %v0_27148 = load i32, i32* @eax, align 8
  ret i32 %v0_27148
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EEC1ERKSV_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2714a:
  %v1_2716f = call i32 @unknown_52d06(i32 %arg2)
  ret i32 %v1_2716f
}

define i32 @function_27178(i32 %arg1) local_unnamed_addr {
dec_label_pc_27178:
  %v0_2717e = load i32, i32* @ecx, align 4
  %v0_27182 = load i32, i32* @edx, align 8
  %v2_27185 = call i32 @unknown_52d34(i32 %v0_27182, i32 %v0_2717e)
  %v0_2718a = load i32, i32* @ebp, align 4
  %v1_2718a = add i32 %v0_2718a, -32
  %v2_2718a = inttoptr i32 %v1_2718a to i32*
  %v3_2718a = load i32, i32* %v2_2718a, align 4
  %v1_27190 = call i32 @unknown_52dba(i32 %v3_2718a)
  ret i32 %v1_27190
}

define i32 @function_27196(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27196:
  %v6_27196 = load i32, i32* @edi, align 8
  %v7_27196 = inttoptr i32 %v6_27196 to i8*
  store i8 -1, i8* %v7_27196, align 1
  %v0_271a1 = load i32, i32* @ebx, align 8
  %v1_271a1 = add i32 %v0_271a1, 76145733
  %v2_271a1 = inttoptr i32 %v1_271a1 to i8*
  %v3_271a1 = load i8, i8* %v2_271a1, align 1
  %v4_271a1 = load i32, i32* @ecx, align 4
  %v5_271a1 = trunc i32 %v4_271a1 to i8
  %v6_271a1 = add i8 %v5_271a1, %v3_271a1
  store i8 %v6_271a1, i8* %v2_271a1, align 1
  %v0_271a7 = load i32, i32* @eax, align 8
  %v11_271a7 = and i32 %v0_271a7, -24
  ret i32 %v11_271a7
}

define i32 @function_271d2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_271d2:
  %ebx.global-to-local = alloca i32, align 4
  %v0_271d2 = load i32, i32* @eax, align 8
  %v1_271d5 = call i32 @unknown_52dea(i32 %v0_271d2)
  %v1_271da = load i32, i32* @ebx, align 8
  %v2_271da = inttoptr i32 %v1_271da to i32*
  store i32 %v1_271d5, i32* %v2_271da, align 4
  %v0_271dc = load i32, i32* @ebp, align 4
  %v1_271dc = add i32 %v0_271dc, -28
  %v2_271dc = inttoptr i32 %v1_271dc to i32*
  %v3_271dc = load i32, i32* %v2_271dc, align 4
  %v1_271e2 = call i32 @unknown_52928(i32 %v3_271dc)
  store i32 %v1_271e2, i32* %ebx.global-to-local, align 8
  %v0_271e9 = load i32, i32* @ebp, align 4
  %v1_271e9 = add i32 %v0_271e9, -28
  %v2_271e9 = inttoptr i32 %v1_271e9 to i32*
  %v3_271e9 = load i32, i32* %v2_271e9, align 4
  %v1_271ef = call i32 @unknown_52f6a(i32 %v3_271e9)
  %v1_271f4 = inttoptr i32 %v1_271ef to i32*
  %v2_271f4 = load i32, i32* %v1_271f4, align 4
  %v1_271f9 = call i32 @unknown_52f9a(i32 %v2_271f4)
  %v1_271fe = load i32, i32* %ebx.global-to-local, align 8
  %v2_271fe = inttoptr i32 %v1_271fe to i32*
  store i32 %v1_271f9, i32* %v2_271fe, align 4
  %v0_27200 = load i32, i32* @ebp, align 4
  %v1_27200 = add i32 %v0_27200, -28
  %v2_27200 = inttoptr i32 %v1_27200 to i32*
  %v3_27200 = load i32, i32* %v2_27200, align 4
  %v1_27206 = call i32 @unknown_5254a(i32 %v3_27200)
  store i32 %v1_27206, i32* @ebx, align 8
  %v0_2720d = load i32, i32* @ebp, align 4
  %v1_2720d = add i32 %v0_2720d, -28
  %v2_2720d = inttoptr i32 %v1_2720d to i32*
  %v3_2720d = load i32, i32* %v2_2720d, align 4
  %v1_27213 = call i32 @unknown_52f6a(i32 %v3_2720d)
  %v1_27218 = inttoptr i32 %v1_27213 to i32*
  %v2_27218 = load i32, i32* %v1_27218, align 4
  %v1_2721d = call i32 @unknown_52fcf(i32 %v2_27218)
  %v1_27222 = load i32, i32* @ebx, align 8
  %v2_27222 = inttoptr i32 %v1_27222 to i32*
  store i32 %v1_2721d, i32* %v2_27222, align 4
  %v0_27224 = load i32, i32* @ebp, align 4
  %v1_27224 = add i32 %v0_27224, -32
  %v2_27224 = inttoptr i32 %v1_27224 to i32*
  %v3_27224 = load i32, i32* %v2_27224, align 4
  %v1_27227 = add i32 %v3_27224, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_27227 = inttoptr i32 %v1_27227 to i32*
  %v3_27227 = load i32, i32* %v2_27227, align 4
  %v1_2722a = add i32 %v0_27224, -28
  %v2_2722a = inttoptr i32 %v1_2722a to i32*
  %v3_2722a = load i32, i32* %v2_2722a, align 4
  %v2_2722d = add i32 %v3_2722a, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_2722d = inttoptr i32 %v2_2722d to i32*
  store i32 %v3_27227, i32* %v3_2722d, align 4
  %v0_27230 = call i32 @function_27249()
  ret i32 %v0_27230

; uselistorder directives
  uselistorder i32 (i32)* @unknown_52f6a, { 1, 0 }
}

define i32 @function_27233() local_unnamed_addr {
dec_label_pc_27233:
  %eax.global-to-local = alloca i32, align 4
  %v0_27233 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27233
}

define i32 @function_2723a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2723a:
  %v0_2723a = call i32 @unknown_48f5a()
  %v0_2723f = load i32, i32* @ebx, align 8
  ret i32 %v0_2723f
}

define i32 @function_27249() local_unnamed_addr {
dec_label_pc_27249:
  %v0_27249 = load i32, i32* @ebp, align 4
  %v1_27249 = add i32 %v0_27249, -12
  %v2_27249 = inttoptr i32 %v1_27249 to i32*
  %v3_27249 = load i32, i32* %v2_27249, align 4
  %v3_2724c = xor i32 %v3_27249, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2724c = icmp eq i32 %v3_2724c, 0
  store i32 %v3_2724c, i32* @eax, align 8
  br i1 %v4_2724c, label %bb, label %dec_label_pc_27255

bb:                                               ; preds = %dec_label_pc_27249
  %v1_27253 = call i32 @function_2725a()
  br label %dec_label_pc_27255

dec_label_pc_27255:                               ; preds = %bb, %dec_label_pc_27249
  %v2_27253 = phi i32 [ %v1_27253, %bb ], [ %v3_2724c, %dec_label_pc_27249 ]
  ret i32 %v2_27253
}

define i32 @function_2725a() local_unnamed_addr {
dec_label_pc_2725a:
  %v5_2725f = load i32, i32* @eax, align 8
  ret i32 %v5_2725f
}

define i32 @function_27260(i32 %arg1) local_unnamed_addr {
dec_label_pc_27260:
  %v0_27260 = load i32, i32* @eax, align 8
  ret i32 %v0_27260
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27262:
  %v1_2727f = call i32 @unknown_5311c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27290

bb:                                               ; preds = %dec_label_pc_27262
  %v1_2728e = call i32 @function_27295()
  br label %dec_label_pc_27290

dec_label_pc_27290:                               ; preds = %bb, %dec_label_pc_27262
  %v2_2728e = phi i32 [ %v1_2728e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27262 ]
  ret i32 %v2_2728e
}

define i32 @function_27295() local_unnamed_addr {
dec_label_pc_27295:
  %v0_27296 = load i32, i32* @eax, align 8
  ret i32 %v0_27296
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27298:
  ret i32 %arg2
}

define i32 @function_272a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_272a8:
  %v0_272a8 = load i32, i32* @ebp, align 4
  %v1_272a8 = add i32 %v0_272a8, 1
  %v9_272a8 = icmp eq i32 %v1_272a8, 0
  store i32 %v1_272a8, i32* @ebp, align 4
  %v0_272a9 = load i32, i32* @ecx, align 4
  %v1_272a9 = add i32 %v0_272a9, -1
  store i32 %v1_272a9, i32* @ecx, align 4
  %v2_272a9 = icmp eq i32 %v1_272a9, 0
  %v4_272a9 = or i1 %v9_272a8, %v2_272a9
  br i1 %v4_272a9, label %dec_label_pc_272ab, label %bb

bb:                                               ; preds = %dec_label_pc_272a8
  %v6_272a9 = call i32 @function_27310()
  %v1_272b0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_272ab

dec_label_pc_272ab:                               ; preds = %dec_label_pc_272a8, %bb
  %v1_272b0 = phi i32 [ %v1_272a8, %dec_label_pc_272a8 ], [ %v1_272b0.pre, %bb ]
  %v2_272b0 = add i32 %v1_272b0, -12
  %v3_272b0 = inttoptr i32 %v2_272b0 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_272b0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_272a9, { 1, 0 }
  uselistorder label %dec_label_pc_272ab, { 1, 0 }
}

define i32 @function_272e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_272e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_272e6 = load i32, i32* @ebp, align 4
  %v1_272e6 = add i32 %v0_272e6, -28
  %v2_272e6 = inttoptr i32 %v1_272e6 to i32*
  %v3_272e6 = load i32, i32* %v2_272e6, align 4
  store i32 %v3_272e6, i32* %eax.global-to-local, align 8
  %v1_272ec = call i32 @unknown_52b60(i32 %v3_272e6)
  store i32 %v1_272ec, i32* %eax.global-to-local, align 8
  %v0_272f1 = load i32, i32* @ebp, align 4
  %v1_272f1 = add i32 %v0_272f1, -16
  %v2_272f1 = inttoptr i32 %v1_272f1 to i32*
  %v3_272f1 = load i32, i32* %v2_272f1, align 4
  store i32 %v3_272f1, i32* %eax.global-to-local, align 8
  %v2_272f4 = add i32 %v0_272f1, -32
  %v3_272f4 = inttoptr i32 %v2_272f4 to i32*
  store i32 %v3_272f1, i32* %v3_272f4, align 4
  %v0_272f7 = load i32, i32* @ebp, align 4
  %v1_272f7 = add i32 %v0_272f7, -32
  %v2_272f7 = inttoptr i32 %v1_272f7 to i32*
  %v3_272f7 = load i32, i32* %v2_272f7, align 4
  %v10_272f7 = icmp eq i32 %v3_272f7, 0
  %v1_272fb = icmp eq i1 %v10_272f7, false
  %v2_272fb = zext i1 %v1_272fb to i32
  %v3_272fb = load i32, i32* %eax.global-to-local, align 8
  %v4_272fb = and i32 %v3_272fb, -256
  %v5_272fb = or i32 %v2_272fb, %v4_272fb
  store i32 %v5_272fb, i32* %eax.global-to-local, align 8
  %v1_27302 = add i32 %v0_272f7, -12
  %v2_27302 = inttoptr i32 %v1_27302 to i32*
  %v3_27302 = load i32, i32* %v2_27302, align 4
  %v3_27305 = xor i32 %v3_27302, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27305 = icmp eq i32 %v3_27305, 0
  store i32 %v3_27305, i32* @eax, align 8
  br i1 %v4_27305, label %bb, label %dec_label_pc_2730e

bb:                                               ; preds = %dec_label_pc_272e6
  %v1_2730c = call i32 @function_27313()
  store i32 %v1_2730c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2730e

dec_label_pc_2730e:                               ; preds = %bb, %dec_label_pc_272e6
  %v4_2730c = phi i32 [ %v1_2730c, %bb ], [ %v3_27305, %dec_label_pc_272e6 ]
  ret i32 %v4_2730c
}

define i32 @function_27310() local_unnamed_addr {
dec_label_pc_27310:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27313() local_unnamed_addr {
dec_label_pc_27313:
  %v0_27314 = load i32, i32* @eax, align 8
  ret i32 %v0_27314
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_27316:
  ret i32 %arg1
}

define i32 @function_27320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27320:
  %ebp.global-to-local = alloca i32, align 4
  %v0_27320 = load i32, i32* @ebp, align 4
  %v1_27326 = add i32 %v0_27320, 3
  store i32 %v1_27326, i32* %ebp.global-to-local, align 4
  %v2_2732e = add i32 %v0_27320, -9
  %v3_2732e = inttoptr i32 %v2_2732e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2732e, align 4
  %v0_27333 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27333 = add i32 %v0_27333, -32
  %v2_27333 = inttoptr i32 %v1_27333 to i32*
  %v3_27333 = load i32, i32* %v2_27333, align 4
  %v1_27336 = add i32 %v3_27333, 12
  %v2_27336 = inttoptr i32 %v1_27336 to i32*
  %v3_27336 = load i32, i32* %v2_27336, align 4
  %v1_2733d = add i32 %v0_27333, -28
  %v2_2733d = inttoptr i32 %v1_2733d to i32*
  %v3_2733d = load i32, i32* %v2_2733d, align 4
  %v2_27343 = call i32 @unknown_4d9ca(i32 %v3_2733d, i32 %v3_27336)
  %v0_27348 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27348 = add i32 %v0_27348, -28
  %v2_27348 = inttoptr i32 %v1_27348 to i32*
  %v3_27348 = load i32, i32* %v2_27348, align 4
  ret i32 %v3_27348
}

define i32 @function_2734d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2734d:
  %v0_2734e = load i32, i32* @edx, align 8
  %v4_2734e = icmp eq i32 %v0_2734e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2734e, label %bb, label %dec_label_pc_2734d.dec_label_pc_27357_crit_edge

dec_label_pc_2734d.dec_label_pc_27357_crit_edge:  ; preds = %dec_label_pc_2734d
  %v2_27355.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27357

bb:                                               ; preds = %dec_label_pc_2734d
  %v1_27355 = call i32 @function_2735c()
  br label %dec_label_pc_27357

dec_label_pc_27357:                               ; preds = %dec_label_pc_2734d.dec_label_pc_27357_crit_edge, %bb
  %v2_27355 = phi i32 [ %v2_27355.pre, %dec_label_pc_2734d.dec_label_pc_27357_crit_edge ], [ %v1_27355, %bb ]
  ret i32 %v2_27355

; uselistorder directives
  uselistorder label %dec_label_pc_27357, { 1, 0 }
}

define i32 @function_2735c() local_unnamed_addr {
dec_label_pc_2735c:
  %v0_2735d = load i32, i32* @eax, align 8
  ret i32 %v0_2735d
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27360:
  ret i32 %arg1
}

define i32 @function_273a5() local_unnamed_addr {
dec_label_pc_273a5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_273a5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_273a5 = add i32 %v0_273a5, -1
  store i32 %v1_273a5, i32* %ecx.global-to-local, align 4
  %v0_273a7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_273a7
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_273aa:
  ret i32 %arg1
}

define i32 @function_273b3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_273b3:
  %v0_273b3 = load i32, i32* @eax, align 8
  %v1_273b3 = load i32, i32* @ebp, align 4
  %v2_273b3 = add i32 %v1_273b3, -28
  %v3_273b3 = inttoptr i32 %v2_273b3 to i32*
  store i32 %v0_273b3, i32* %v3_273b3, align 4
  %v0_273b6 = load i32, i32* @ebp, align 4
  %v1_273b6 = add i32 %v0_273b6, 12
  %v2_273b6 = inttoptr i32 %v1_273b6 to i32*
  %v3_273b6 = load i32, i32* %v2_273b6, align 4
  %v2_273b9 = add i32 %v0_273b6, -32
  %v3_273b9 = inttoptr i32 %v2_273b9 to i32*
  store i32 %v3_273b6, i32* %v3_273b9, align 4
  %v1_273c2 = load i32, i32* @ebp, align 4
  %v2_273c2 = add i32 %v1_273c2, -12
  %v3_273c2 = inttoptr i32 %v2_273c2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_273c2, align 4
  %v0_273c7 = load i32, i32* @ebp, align 4
  %v1_273c7 = add i32 %v0_273c7, -32
  %v2_273c7 = inttoptr i32 %v1_273c7 to i32*
  %v3_273c7 = load i32, i32* %v2_273c7, align 4
  ret i32 %v3_273c7
}

define i32 @function_273cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_273cc:
  %v0_273d1 = load i32, i32* @ebp, align 4
  %v1_273d1 = add i32 %v0_273d1, -28
  %v2_273d1 = inttoptr i32 %v1_273d1 to i32*
  %v3_273d1 = load i32, i32* %v2_273d1, align 4
  %v1_273d7 = call i32 @unknown_5328e(i32 %v3_273d1)
  %v0_273dc = load i32, i32* @ebp, align 4
  %v1_273dc = add i32 %v0_273dc, -28
  %v2_273dc = inttoptr i32 %v1_273dc to i32*
  %v3_273dc = load i32, i32* %v2_273dc, align 4
  store i32 %v3_273dc, i32* @eax, align 8
  %v1_273df = add i32 %v0_273dc, -12
  %v2_273df = inttoptr i32 %v1_273df to i32*
  %v3_273df = load i32, i32* %v2_273df, align 4
  %v4_273e2 = icmp eq i32 %v3_273df, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_273e2, label %bb, label %dec_label_pc_273eb

bb:                                               ; preds = %dec_label_pc_273cc
  %v1_273e9 = call i32 @function_273f0()
  br label %dec_label_pc_273eb

dec_label_pc_273eb:                               ; preds = %bb, %dec_label_pc_273cc
  %v2_273e9 = phi i32 [ %v1_273e9, %bb ], [ %v3_273dc, %dec_label_pc_273cc ]
  ret i32 %v2_273e9
}

define i32 @function_273f0() local_unnamed_addr {
dec_label_pc_273f0:
  %v0_273f1 = load i32, i32* @eax, align 8
  ret i32 %v0_273f1
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_273f4:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27420

bb:                                               ; preds = %dec_label_pc_273f4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2741e = call i32 @function_27425(i32 %tmp102)
  br label %dec_label_pc_27420

dec_label_pc_27420:                               ; preds = %bb, %dec_label_pc_273f4
  %v3_2741e = phi i32 [ %v2_2741e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_273f4 ]
  ret i32 %v3_2741e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27425(i32 %arg1) local_unnamed_addr {
dec_label_pc_27425:
  %v0_27426 = load i32, i32* @eax, align 8
  ret i32 %v0_27426
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISJ_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27428:
  %v1_27448 = inttoptr i32 %arg2 to i32*
  %v2_27448 = load i32, i32* %v1_27448, align 4
  store i32 %v2_27448, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2745b

bb:                                               ; preds = %dec_label_pc_27428
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_27459 = call i32 @function_27460(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2745b

dec_label_pc_2745b:                               ; preds = %bb, %dec_label_pc_27428
  %v4_27459 = phi i32 [ %v3_27459, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27428 ]
  ret i32 %v4_27459

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27460(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27460:
  %v0_27461 = load i32, i32* @eax, align 8
  ret i32 %v0_27461
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEEC1EPSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27462:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_27485 = call i32 @function_29356(i32 %tmp102)
  store i32 ptrtoint (%vtable_336dc_type* @global_var_336dc.2048 to i32), i32* %arg1, align 4
  %v2_27499 = add i32 %tmp102, 12
  %v3_27499 = inttoptr i32 %v2_27499 to i32*
  store i32 %arg2, i32* %v3_27499, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_274a8

bb:                                               ; preds = %dec_label_pc_27462
  %v1_274a6 = call i32 @function_274ad()
  br label %dec_label_pc_274a8

dec_label_pc_274a8:                               ; preds = %bb, %dec_label_pc_27462
  %v2_274a6 = phi i32 [ %v1_274a6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27462 ]
  ret i32 %v2_274a6

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_274ad() local_unnamed_addr {
dec_label_pc_274ad:
  %v0_274ae = load i32, i32* @eax, align 8
  ret i32 %v0_274ae
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_274b0:
  %v1_274cb = add i32 %arg1, 8
  %v1_274d1 = call i32 @unknown_45306(i32 %v1_274cb)
  ret i32 %arg1
}

define i32 @function_274e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274e0:
  %v0_274e0 = load i32, i32* @ebx, align 8
  %v1_274e0 = add i32 %v0_274e0, 862319685
  %v2_274e0 = inttoptr i32 %v1_274e0 to i8*
  %v3_274e0 = load i8, i8* %v2_274e0, align 1
  %v4_274e0 = load i32, i32* @ecx, align 4
  %v5_274e0 = trunc i32 %v4_274e0 to i8
  %v6_274e0 = add i8 %v5_274e0, %v3_274e0
  store i8 %v6_274e0, i8* %v2_274e0, align 1
  %v0_274e6 = load i32, i32* @eax, align 8
  %v1_274e6 = add i32 %v0_274e6, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_274e6 = icmp eq i32 %v1_274e6, 0
  store i32 %v1_274e6, i32* @eax, align 8
  br i1 %v10_274e6, label %bb, label %dec_label_pc_274ed

bb:                                               ; preds = %dec_label_pc_274e0
  %v1_274eb = call i32 @function_2750b()
  store i32 %v1_274eb, i32* @eax, align 8
  br label %dec_label_pc_274ed

dec_label_pc_274ed:                               ; preds = %bb, %dec_label_pc_274e0
  %v0_274ed = call i32 @function_27506()
  ret i32 %v0_274ed
}

define i32 @function_274f0() local_unnamed_addr {
dec_label_pc_274f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_274f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_274f0
}

define i32 @function_27506() local_unnamed_addr {
dec_label_pc_27506:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2750b() local_unnamed_addr {
dec_label_pc_2750b:
  %v0_27510 = load i32, i32* @eax, align 8
  ret i32 %v0_27510
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27511:
  %v1_2752c = icmp eq i32 %arg1, 0
  br i1 %v1_2752c, label %bb, label %dec_label_pc_27530

bb:                                               ; preds = %dec_label_pc_27511
  %v2_2752e = call i32 @function_27540(i32 0)
  br label %dec_label_pc_27530

dec_label_pc_27530:                               ; preds = %bb, %dec_label_pc_27511
  %v1_27533 = call i32 @unknown_4e9c1(i32 %arg1)
  ret i32 %v1_27533
}

define i32 @function_27540(i32 %arg1) local_unnamed_addr {
dec_label_pc_27540:
  %v0_27540 = load i32, i32* @ebp, align 4
  %v1_27540 = add i32 %v0_27540, -12
  %v2_27540 = inttoptr i32 %v1_27540 to i32*
  %v3_27540 = load i32, i32* %v2_27540, align 4
  %v3_27543 = xor i32 %v3_27540, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27543 = icmp eq i32 %v3_27543, 0
  store i32 %v3_27543, i32* @eax, align 8
  br i1 %v4_27543, label %bb, label %dec_label_pc_2754c

bb:                                               ; preds = %dec_label_pc_27540
  %v1_2754a = call i32 @function_27551()
  br label %dec_label_pc_2754c

dec_label_pc_2754c:                               ; preds = %bb, %dec_label_pc_27540
  %v2_2754a = phi i32 [ %v1_2754a, %bb ], [ %v3_27543, %dec_label_pc_27540 ]
  ret i32 %v2_2754a
}

define i32 @function_27551() local_unnamed_addr {
dec_label_pc_27551:
  %v0_27556 = load i32, i32* @eax, align 8
  ret i32 %v0_27556
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEC1EPSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27558:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 8
  %v1_2757b = call i32 @function_2944c(i32 %tmp102)
  store i32 ptrtoint (%vtable_33624_type* @global_var_33624.2049 to i32), i32* %arg1, align 4
  %v2_2758f = add i32 %tmp102, 12
  %v3_2758f = inttoptr i32 %v2_2758f to i32*
  store i32 %arg2, i32* %v3_2758f, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2759e

bb:                                               ; preds = %dec_label_pc_27558
  %v1_2759c = call i32 @function_275a3()
  br label %dec_label_pc_2759e

dec_label_pc_2759e:                               ; preds = %bb, %dec_label_pc_27558
  %v2_2759c = phi i32 [ %v1_2759c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27558 ]
  ret i32 %v2_2759c

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_275a3() local_unnamed_addr {
dec_label_pc_275a3:
  %v0_275a4 = load i32, i32* @eax, align 8
  ret i32 %v0_275a4
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_275a6:
  %v1_275c1 = add i32 %arg1, 8
  %v1_275c7 = call i32 @unknown_41eee(i32 %v1_275c1)
  %v1_275d2 = call i32 @unknown_41e64(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_275e3

bb:                                               ; preds = %dec_label_pc_275a6
  %v1_275e1 = call i32 @function_27601()
  store i32 %v1_275e1, i32* @eax, align 8
  br label %dec_label_pc_275e3

dec_label_pc_275e3:                               ; preds = %bb, %dec_label_pc_275a6
  %v0_275e3 = call i32 @function_275fc()
  ret i32 %v0_275e3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_275e6() local_unnamed_addr {
dec_label_pc_275e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_275e6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_275e6
}

declare i32 @_Unwind_Resume.1494() local_unnamed_addr

define i32 @function_275fc() local_unnamed_addr {
dec_label_pc_275fc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27601() local_unnamed_addr {
dec_label_pc_27601:
  %v0_27606 = load i32, i32* @eax, align 8
  ret i32 %v0_27606
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27607:
  %v1_27622 = icmp eq i32 %arg1, 0
  br i1 %v1_27622, label %bb, label %dec_label_pc_27626

bb:                                               ; preds = %dec_label_pc_27607
  %v2_27624 = call i32 @function_27636(i32 0)
  br label %dec_label_pc_27626

dec_label_pc_27626:                               ; preds = %bb, %dec_label_pc_27607
  %v1_27629 = call i32 @unknown_4ebad(i32 %arg1)
  ret i32 %v1_27629
}

define i32 @function_27636(i32 %arg1) local_unnamed_addr {
dec_label_pc_27636:
  %v0_27636 = load i32, i32* @ebp, align 4
  %v1_27636 = add i32 %v0_27636, -12
  %v2_27636 = inttoptr i32 %v1_27636 to i32*
  %v3_27636 = load i32, i32* %v2_27636, align 4
  %v3_27639 = xor i32 %v3_27636, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27639 = icmp eq i32 %v3_27639, 0
  store i32 %v3_27639, i32* @eax, align 8
  br i1 %v4_27639, label %bb, label %dec_label_pc_27642

bb:                                               ; preds = %dec_label_pc_27636
  %v1_27640 = call i32 @function_27647()
  br label %dec_label_pc_27642

dec_label_pc_27642:                               ; preds = %bb, %dec_label_pc_27636
  %v2_27640 = phi i32 [ %v1_27640, %bb ], [ %v3_27639, %dec_label_pc_27636 ]
  ret i32 %v2_27640
}

define i32 @function_27647() local_unnamed_addr {
dec_label_pc_27647:
  %v0_2764c = load i32, i32* @eax, align 8
  ret i32 %v0_2764c
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2764e:
  ret i32 %arg1
}

define i32 @function_2765e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2765e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2765e = load i32, i32* @ebp, align 4
  %v0_2765f = load i32, i32* @eax, align 8
  %v2_2765f = or i32 %v0_2765f, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_2765f, i32* %eax.global-to-local, align 8
  %v1_27661 = add i32 %v0_2765e, 2
  store i32 %v1_27661, i32* @ebp, align 4
  %v1_27662 = add i32 %v0_2765e, -93
  %v2_27662 = inttoptr i32 %v1_27662 to i8*
  %v3_27662 = load i8, i8* %v2_27662, align 1
  %v5_27662 = mul i8 %v3_27662, 2
  store i8 %v5_27662, i8* %v2_27662, align 1
  %v16_27662 = icmp slt i8 %v3_27662, 0
  %v0_27665 = load i32, i32* %eax.global-to-local, align 8
  %v1_27665 = trunc i32 %v0_27665 to i8
  %v3_27665 = zext i1 %v16_27662 to i8
  %v4_27665 = add i8 %v1_27665, %v3_27665
  %v22_27665 = zext i8 %v4_27665 to i32
  %v24_27665 = and i32 %v0_27665, -256
  %v25_27665 = or i32 %v22_27665, %v24_27665
  store i32 %v25_27665, i32* %eax.global-to-local, align 8
  %v1_27667 = inttoptr i32 %v25_27665 to i8*
  %v2_27667 = load i8, i8* %v1_27667, align 1
  %v5_27667 = add i8 %v2_27667, %v4_27665
  store i8 %v5_27667, i8* %v1_27667, align 1
  %v0_27669 = load i32, i32* %eax.global-to-local, align 8
  %v1_27669 = load i32, i32* @ebp, align 4
  %v2_27669 = add i32 %v1_27669, -28
  %v3_27669 = inttoptr i32 %v2_27669 to i32*
  store i32 %v0_27669, i32* %v3_27669, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2766e = load i32, i32* @ebp, align 4
  %v1_2766e = add i32 %v0_2766e, -44
  %v2_2766e = inttoptr i32 %v1_2766e to i32*
  %v3_2766e = load i32, i32* %v2_2766e, align 4
  store i32 %v3_2766e, i32* %eax.global-to-local, align 8
  %v2_27674 = call i32 @unknown_5356a(i32 %v3_2766e)
  store i32 %v2_27674, i32* %eax.global-to-local, align 8
  %v4_27679 = trunc i32 %v2_27674 to i8
  %v5_27679 = icmp eq i8 %v4_27679, 0
  br i1 %v5_27679, label %bb, label %dec_label_pc_2767d

bb:                                               ; preds = %dec_label_pc_2765e
  %v1_2767b = call i32 @function_276a1()
  store i32 %v1_2767b, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2767d

dec_label_pc_2767d:                               ; preds = %bb, %dec_label_pc_2765e
  %v3_27695 = phi i32 [ %v1_2767b, %bb ], [ %v2_27674, %dec_label_pc_2765e ]
  ret i32 %v3_27695

; uselistorder directives
  uselistorder i8 %v3_27662, { 1, 0 }
}

define i32 @function_276a1() local_unnamed_addr {
dec_label_pc_276a1:
  %v0_276a1 = load i32, i32* @ebp, align 4
  %v1_276a1 = add i32 %v0_276a1, -44
  %v2_276a1 = inttoptr i32 %v1_276a1 to i32*
  %v3_276a1 = load i32, i32* %v2_276a1, align 4
  %v1_276a4 = add i32 %v3_276a1, 124
  %v2_276a4 = inttoptr i32 %v1_276a4 to i32*
  %v3_276a4 = load i32, i32* %v2_276a4, align 4
  store i32 %v3_276a4, i32* @ecx, align 4
  %v3_276a7 = load i32, i32* %v2_276a1, align 4
  %v1_276aa = add i32 %v3_276a7, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_276aa = inttoptr i32 %v1_276aa to i32*
  %v3_276aa = load i32, i32* %v2_276aa, align 4
  %v2_276b6 = mul i32 %v3_276aa, 12
  store i32 %v2_276b6, i32* @eax, align 8
  %v3_276b9 = add i32 %v2_276b6, %v3_276a4
  %v2_276c7 = call i32 @function_27fb4(i32 12, i32 %v3_276b9)
  store i32 %v2_276c7, i32* @ebx, align 8
  %v1_276ce = icmp eq i32 %v2_276c7, 0
  br i1 %v1_276ce, label %dec_label_pc_276e1, label %dec_label_pc_276d2

dec_label_pc_276d2:                               ; preds = %dec_label_pc_276a1
  %v0_276d2 = load i32, i32* @ebp, align 4
  %v1_276d2 = add i32 %v0_276d2, -48
  %v2_276d2 = inttoptr i32 %v1_276d2 to i32*
  %v3_276d2 = load i32, i32* %v2_276d2, align 4
  %v2_276dc = call i32 @unknown_39400(i32 %v2_276c7, i32 %v3_276d2)
  br label %dec_label_pc_276e1

dec_label_pc_276e1:                               ; preds = %dec_label_pc_276d2, %dec_label_pc_276a1
  %v0_276e1 = load i32, i32* @ebp, align 4
  %v1_276e1 = add i32 %v0_276e1, -44
  %v2_276e1 = inttoptr i32 %v1_276e1 to i32*
  %v3_276e1 = load i32, i32* %v2_276e1, align 4
  %v1_276e4 = add i32 %v3_276e1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_276e4 = inttoptr i32 %v1_276e4 to i32*
  %v3_276e4 = load i32, i32* %v2_276e4, align 4
  %v1_276ea = add i32 %v3_276e4, 1
  %v2_276f0 = add i32 %v3_276e1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v3_276f0 = inttoptr i32 %v2_276f0 to i32*
  store i32 %v1_276ea, i32* %v3_276f0, align 4
  %v0_276f6 = load i32, i32* @ebp, align 4
  %v1_276f6 = add i32 %v0_276f6, -28
  %v2_276f6 = inttoptr i32 %v1_276f6 to i32*
  %v3_276f6 = load i32, i32* %v2_276f6, align 4
  %v3_276f9 = xor i32 %v3_276f6, ptrtoint ([3 x i8]* @3 to i32)
  ret i32 %v3_276f9
}

define i32 @function_27700(i32 %arg1) local_unnamed_addr {
dec_label_pc_27700:
  %v0_27700 = load i1, i1* @zf, align 1
  br i1 %v0_27700, label %bb, label %dec_label_pc_27702

bb:                                               ; preds = %dec_label_pc_27700
  %v1_27700 = call i32 @function_27721()
  store i32 %v1_27700, i32* @eax, align 8
  br label %dec_label_pc_27702

dec_label_pc_27702:                               ; preds = %bb, %dec_label_pc_27700
  %v0_27702 = call i32 @function_2771c()
  ret i32 %v0_27702
}

define i32 @function_2770e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2770e:
  %v0_2770e = load i32, i32* @eax, align 8
  %v1_2770e = trunc i32 %v0_2770e to i8
  %v3_2770e = udiv i32 %v0_2770e, 256
  %v4_2770e = trunc i32 %v3_2770e to i8
  %v5_2770e = mul i8 %v4_2770e, 8
  %v6_2770e = add i8 %v5_2770e, %v1_2770e
  %v7_2770e = zext i8 %v6_2770e to i32
  %v9_2770e = and i32 %v0_2770e, -65536
  %v12_2770e = or i32 %v7_2770e, %v9_2770e
  %v1_27710 = inttoptr i32 %v12_2770e to i8*
  %v2_27710 = load i8, i8* %v1_27710, align 1
  %v5_27710 = add i8 %v2_27710, %v6_2770e
  store i8 %v5_27710, i8* %v1_27710, align 1
  %v0_27712 = load i32, i32* @edi, align 8
  ret i32 %v0_27712

; uselistorder directives
  uselistorder i32 %v0_2770e, { 1, 0, 2 }
}

define i32 @function_2771c() local_unnamed_addr {
dec_label_pc_2771c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27721() local_unnamed_addr {
dec_label_pc_27721:
  %v0_27728 = load i32, i32* @eax, align 8
  ret i32 %v0_27728
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE7reserveEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2772a:
  %v1_2774a = add i32 %arg1, 120
  %v2_2774a = inttoptr i32 %v1_2774a to i32*
  %v3_2774a = load i32, i32* %v2_2774a, align 4
  %tmp114 = icmp ult i32 %v3_2774a, 10
  br i1 %tmp114, label %dec_label_pc_27752, label %bb

bb:                                               ; preds = %dec_label_pc_2772a
  %v6_27750 = call i32 @function_27776(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_27752

dec_label_pc_27752:                               ; preds = %dec_label_pc_2772a, %bb
  %v3_2776a = phi i32 [ %v3_2774a, %dec_label_pc_2772a ], [ %v6_27750, %bb ]
  ret i32 %v3_2776a

; uselistorder directives
  uselistorder i32 %v3_2774a, { 1, 0 }
  uselistorder i32 10, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_27752, { 1, 0 }
}

define i32 @function_27776(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27776:
  %v0_27776 = load i32, i32* @ebp, align 4
  %v1_27776 = add i32 %v0_27776, -28
  %v2_27776 = inttoptr i32 %v1_27776 to i32*
  %v3_27776 = load i32, i32* %v2_27776, align 4
  %v1_27779 = add i32 %v3_27776, 120
  %v2_27779 = inttoptr i32 %v1_27779 to i32*
  %v3_27779 = load i32, i32* %v2_27779, align 4
  store i32 %v3_27779, i32* @eax, align 8
  %v2_2777c = add i32 %v0_27776, -32
  %v3_2777c = inttoptr i32 %v2_2777c to i32*
  %v4_2777c = load i32, i32* %v3_2777c, align 4
  %v10_2777c = icmp ult i32 %v3_27779, %v4_2777c
  %v1_2777f = icmp eq i1 %v10_2777c, false
  br i1 %v1_2777f, label %bb, label %dec_label_pc_27781

bb:                                               ; preds = %dec_label_pc_27776
  %v2_2777f = call i32 @function_277d1()
  %v0_27781.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27781

dec_label_pc_27781:                               ; preds = %bb, %dec_label_pc_27776
  %v0_27781 = phi i32 [ %v0_27781.pre, %bb ], [ %v0_27776, %dec_label_pc_27776 ]
  %v1_27781 = add i32 %v0_27781, -32
  %v2_27781 = inttoptr i32 %v1_27781 to i32*
  %v3_27781 = load i32, i32* %v2_27781, align 4
  %v1_27788 = add i32 %v0_27781, -28
  %v2_27788 = inttoptr i32 %v1_27788 to i32*
  %v3_27788 = load i32, i32* %v2_27788, align 4
  %v4_2778e = call i32 @unknown_53724(i32 %v3_27788, i32 %v3_27781)
  %v0_27797 = load i32, i32* @ebp, align 4
  %v1_27797 = add i32 %v0_27797, -28
  %v2_27797 = inttoptr i32 %v1_27797 to i32*
  %v3_27797 = load i32, i32* %v2_27797, align 4
  %v4_2779d = call i32 @unknown_53684(i32 %v3_27797, i32 %v4_2778e)
  %v0_277a2 = load i32, i32* @ebp, align 4
  %v1_277a2 = add i32 %v0_277a2, -28
  %v2_277a2 = inttoptr i32 %v1_277a2 to i32*
  %v3_277a2 = load i32, i32* %v2_277a2, align 4
  %v1_277a5 = add i32 %v3_277a2, 120
  %v2_277a5 = inttoptr i32 %v1_277a5 to i32*
  %v3_277a5 = load i32, i32* %v2_277a5, align 4
  %v2_277a8 = add i32 %v0_277a2, -32
  %v3_277a8 = inttoptr i32 %v2_277a8 to i32*
  %v4_277a8 = load i32, i32* %v3_277a8, align 4
  %v10_277a8 = icmp ult i32 %v3_277a5, %v4_277a8
  %v1_277ab = icmp eq i1 %v10_277a8, false
  br i1 %v1_277ab, label %bb12, label %dec_label_pc_277ad

bb12:                                             ; preds = %dec_label_pc_27781
  %v2_277ab = call i32 @function_277d2()
  br label %dec_label_pc_277ad

dec_label_pc_277ad:                               ; preds = %bb12, %dec_label_pc_27781
  %v3_277c5 = phi i32 [ %v2_277ab, %bb12 ], [ %v3_277a5, %dec_label_pc_27781 ]
  ret i32 %v3_277c5

; uselistorder directives
  uselistorder i32 %v0_27781, { 1, 0 }
}

define i32 @function_277d1() local_unnamed_addr {
dec_label_pc_277d1:
  %v0_277d1 = load i32, i32* @eax, align 8
  ret i32 %v0_277d1
}

define i32 @function_277d2() local_unnamed_addr {
dec_label_pc_277d2:
  %v0_277d2 = load i32, i32* @ebp, align 4
  %v1_277d2 = add i32 %v0_277d2, -12
  %v2_277d2 = inttoptr i32 %v1_277d2 to i32*
  %v3_277d2 = load i32, i32* %v2_277d2, align 4
  %v3_277d5 = xor i32 %v3_277d2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_277d5 = icmp eq i32 %v3_277d5, 0
  store i32 %v3_277d5, i32* @eax, align 8
  br i1 %v4_277d5, label %bb, label %dec_label_pc_277de

bb:                                               ; preds = %dec_label_pc_277d2
  %v1_277dc = call i32 @function_277e3()
  br label %dec_label_pc_277de

dec_label_pc_277de:                               ; preds = %bb, %dec_label_pc_277d2
  %v2_277dc = phi i32 [ %v1_277dc, %bb ], [ %v3_277d5, %dec_label_pc_277d2 ]
  ret i32 %v2_277dc
}

define i32 @function_277e3() local_unnamed_addr {
dec_label_pc_277e3:
  %v0_277e4 = load i32, i32* @eax, align 8
  ret i32 %v0_277e4
}

define i32 @_ZNK5boost8optionalISsEntEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_277e6:
  %v1_27803 = call i32 @unknown_3bcc0(i32 %arg1)
  %v1_27808 = xor i32 %v1_27803, 1
  store i32 %v1_27808, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27817

bb:                                               ; preds = %dec_label_pc_277e6
  %v1_27815 = call i32 @function_2781c()
  br label %dec_label_pc_27817

dec_label_pc_27817:                               ; preds = %bb, %dec_label_pc_277e6
  %v2_27815 = phi i32 [ %v1_27815, %bb ], [ %v1_27808, %dec_label_pc_277e6 ]
  ret i32 %v2_27815
}

define i32 @function_2781c() local_unnamed_addr {
dec_label_pc_2781c:
  %v0_2781d = load i32, i32* @eax, align 8
  ret i32 %v0_2781d
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invokerclERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2781e:
  %v7_27863 = call i32 @unknown_5389e(i32 %arg1, i32 %arg2, i32 %arg3, i32 0, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2787a

bb:                                               ; preds = %dec_label_pc_2781e
  %v1_27878 = call i32 @function_2787f()
  br label %dec_label_pc_2787a

dec_label_pc_2787a:                               ; preds = %bb, %dec_label_pc_2781e
  %v2_27878 = phi i32 [ %v1_27878, %bb ], [ %arg1, %dec_label_pc_2781e ]
  ret i32 %v2_27878

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 3, 1 }
}

define i32 @function_2787f() local_unnamed_addr {
dec_label_pc_2787f:
  %v0_27880 = load i32, i32* @eax, align 8
  ret i32 %v0_27880
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE5resetERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27884:
  %v2_278ae = call i32 @unknown_45c48(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_278bf

bb:                                               ; preds = %dec_label_pc_27884
  %v1_278bd = call i32 @function_278c4()
  br label %dec_label_pc_278bf

dec_label_pc_278bf:                               ; preds = %bb, %dec_label_pc_27884
  %v2_278bd = phi i32 [ %v1_278bd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27884 ]
  ret i32 %v2_278bd
}

define i32 @function_278c4() local_unnamed_addr {
dec_label_pc_278c4:
  %v0_278c5 = load i32, i32* @eax, align 8
  ret i32 %v0_278c5
}

define i32 @_ZN5boost15optional_detail13optional_baseISsE5resetEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_278c6:
  %v1_278e3 = call i32 @unknown_3bd5c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_278f4

bb:                                               ; preds = %dec_label_pc_278c6
  %v1_278f2 = call i32 @function_278f9()
  br label %dec_label_pc_278f4

dec_label_pc_278f4:                               ; preds = %bb, %dec_label_pc_278c6
  %v2_278f2 = phi i32 [ %v1_278f2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_278c6 ]
  ret i32 %v2_278f2
}

define i32 @function_278f9() local_unnamed_addr {
dec_label_pc_278f9:
  %v0_278fa = load i32, i32* @eax, align 8
  ret i32 %v0_278fa
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsSsEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_278fc:
  store i32 178956970, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27924

bb:                                               ; preds = %dec_label_pc_278fc
  %v2_27922 = call i32 @function_27929(i32 %arg1)
  br label %dec_label_pc_27924

dec_label_pc_27924:                               ; preds = %bb, %dec_label_pc_278fc
  %v3_27922 = phi i32 [ %v2_27922, %bb ], [ 178956970, %dec_label_pc_278fc ]
  ret i32 %v3_27922
}

define i32 @function_27929(i32 %arg1) local_unnamed_addr {
dec_label_pc_27929:
  %v0_2792a = load i32, i32* @eax, align 8
  ret i32 %v0_2792a
}

define i32 @_ZN5boost6detail8function15functor_managerIPFbRKSsS4_jEE7managerERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeENS1_16function_ptr_tagE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2792b:
  ret i32 %arg3
}

define i32 @function_27942(i32 %arg1) local_unnamed_addr {
dec_label_pc_27942:
  %v0_27946 = load i32, i32* @eax, align 8
  %v2_27946 = load i1, i1* @cf, align 1
  %v3_27946 = zext i1 %v2_27946 to i32
  %v4_27946 = add i32 %v0_27946, zext (i8 ptrtoint (i8* @global_var_88.2056 to i8) to i32)
  %v5_27946 = add i32 %v4_27946, %v3_27946
  %v25_27946 = and i32 %v5_27946, 255
  %v27_27946 = and i32 %v0_27946, -256
  %v28_27946 = or i32 %v25_27946, %v27_27946
  ret i32 %v28_27946

; uselistorder directives
  uselistorder i32 %v0_27946, { 1, 0 }
}

define i32 @function_2797e() local_unnamed_addr {
dec_label_pc_2797e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2797e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2797e = add i32 %v0_2797e, -1
  store i32 %v1_2797e, i32* %ecx.global-to-local, align 4
  %v0_27980 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27980
}

define i32 @_ZN5boost6detail8function13basic_vtable3IbRKSsS4_jE9assign_toIPFbS4_S4_jEEEbT_RNS1_15function_bufferENS1_16function_ptr_tagE(i32 %arg1) local_unnamed_addr {
dec_label_pc_27982:
  ret i32 0
}

define i32 @function_279ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_279ae:
  %v0_279b4 = load i32, i32* @ebp, align 4
  %v1_279b4 = add i32 %v0_279b4, 1
  store i32 %v1_279b4, i32* @ebp, align 4
  %v0_279b9 = call i32 @unknown_3c9fa()
  %v0_279be = load i32, i32* @ebp, align 4
  %v1_279be = add i32 %v0_279be, -32
  %v2_279be = inttoptr i32 %v1_279be to i32*
  %v3_279be = load i32, i32* %v2_279be, align 4
  %v10_279be = icmp eq i32 %v3_279be, 0
  br i1 %v10_279be, label %dec_label_pc_279d8, label %dec_label_pc_279c4

dec_label_pc_279c4:                               ; preds = %dec_label_pc_279ae
  %v1_279c7 = add i32 %v0_279be, -36
  %v2_279c7 = inttoptr i32 %v1_279c7 to i32*
  %v3_279c7 = load i32, i32* %v2_279c7, align 4
  %v2_279ca = inttoptr i32 %v3_279c7 to i32*
  store i32 %v3_279be, i32* %v2_279ca, align 4
  %v0_279d8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_279d8

dec_label_pc_279d8:                               ; preds = %dec_label_pc_279ae, %dec_label_pc_279c4
  %v0_279d8 = phi i32 [ %v0_279d8.pre, %dec_label_pc_279c4 ], [ %v0_279be, %dec_label_pc_279ae ]
  %storemerge = phi i32 [ 1, %dec_label_pc_279c4 ], [ 0, %dec_label_pc_279ae ]
  store i32 %storemerge, i32* @eax, align 8
  %v1_279d8 = add i32 %v0_279d8, -12
  %v2_279d8 = inttoptr i32 %v1_279d8 to i32*
  %v3_279d8 = load i32, i32* %v2_279d8, align 4
  %v4_279db = icmp eq i32 %v3_279d8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_279db, label %bb, label %dec_label_pc_279e4

bb:                                               ; preds = %dec_label_pc_279d8
  %v1_279e2 = call i32 @function_279e9()
  br label %dec_label_pc_279e4

dec_label_pc_279e4:                               ; preds = %bb, %dec_label_pc_279d8
  %v2_279e2 = phi i32 [ %v1_279e2, %bb ], [ %storemerge, %dec_label_pc_279d8 ]
  ret i32 %v2_279e2

; uselistorder directives
  uselistorder label %dec_label_pc_279d8, { 1, 0 }
}

define i32 @function_279e9() local_unnamed_addr {
dec_label_pc_279e9:
  %v0_279ea = load i32, i32* @eax, align 8
  ret i32 %v0_279ea
}

define i32 @_ZN5boost9addressofIFbRKSsS2_jEEEPT_RS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_279eb:
  %stack_var_-20 = alloca i32, align 4
  %v2_27a09 = ptrtoint i32* %stack_var_-20 to i32
  %v2_27a0f = call i32 @unknown_53bc3(i32 %v2_27a09, i32 %arg1)
  ret i32 %v2_27a09
}

define i32 @function_27a19(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a19:
  %v0_27a19 = load i32, i32* @eax, align 8
  %v1_27a19 = trunc i32 %v0_27a19 to i8
  %v2_27a19 = and i8 %v1_27a19, -24
  %v8_27a19 = zext i8 %v2_27a19 to i32
  %v10_27a19 = and i32 %v0_27a19, -256
  %v11_27a19 = or i32 %v8_27a19, %v10_27a19
  %v3_27a1d = inttoptr i32 %v11_27a19 to i8*
  %v4_27a1d = load i8, i8* %v3_27a1d, align 8
  %v5_27a1d = add i8 %v4_27a1d, %v2_27a19
  %v20_27a1d = zext i8 %v5_27a1d to i32
  %v23_27a1d = or i32 %v20_27a1d, %v10_27a19
  %v2_27a2a = call i32 @unknown_53c2a(i32 %v23_27a1d, i32 0)
  ret i32 %v2_27a2a
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIPFbRKSsS5_jEEEvRKT_RKN4mpl_5bool_ILb1EEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_27a42:
  ret i32 %arg1
}

define i32 @function_27a4e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a4e:
  %v0_27a4e = load i32, i32* @ebp, align 4
  %v1_27a4e = add i32 %v0_27a4e, 12
  %v2_27a4e = inttoptr i32 %v1_27a4e to i32*
  %v3_27a4e = load i32, i32* %v2_27a4e, align 4
  %v2_27a51 = add i32 %v0_27a4e, -32
  %v3_27a51 = inttoptr i32 %v2_27a51 to i32*
  store i32 %v3_27a4e, i32* %v3_27a51, align 4
  %v0_27a54 = load i32, i32* @ebp, align 4
  %v1_27a54 = add i32 %v0_27a54, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_27a54 = inttoptr i32 %v1_27a54 to i32*
  %v3_27a54 = load i32, i32* %v2_27a54, align 4
  %v2_27a57 = add i32 %v0_27a54, -36
  %v3_27a57 = inttoptr i32 %v2_27a57 to i32*
  store i32 %v3_27a54, i32* %v3_27a57, align 4
  %v1_27a60 = load i32, i32* @ebp, align 4
  %v2_27a60 = add i32 %v1_27a60, -12
  %v3_27a60 = inttoptr i32 %v2_27a60 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_27a60, align 4
  %v0_27a65 = load i32, i32* @ebp, align 4
  %v1_27a65 = add i32 %v0_27a65, -13
  %v1_27a6c = add i32 %v0_27a65, -32
  %v2_27a6c = inttoptr i32 %v1_27a6c to i32*
  %v3_27a6c = load i32, i32* %v2_27a6c, align 4
  %v1_27a73 = add i32 %v0_27a65, -28
  %v2_27a73 = inttoptr i32 %v1_27a73 to i32*
  %v3_27a73 = load i32, i32* %v2_27a73, align 4
  %v3_27a79 = call i32 @unknown_53cb4(i32 %v3_27a73, i32 %v3_27a6c, i32 %v1_27a65)
  %v0_27a7e = load i32, i32* @ebp, align 4
  %v1_27a7e = add i32 %v0_27a7e, -12
  %v2_27a7e = inttoptr i32 %v1_27a7e to i32*
  %v3_27a7e = load i32, i32* %v2_27a7e, align 4
  ret i32 %v3_27a7e
}

define i32 @function_27a82(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a82:
  %v0_27a82 = load i32, i32* @eax, align 8
  %v3_27a82 = xor i32 %v0_27a82, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27a82 = icmp eq i32 %v3_27a82, 0
  store i32 %v3_27a82, i32* @eax, align 8
  br i1 %v4_27a82, label %bb, label %dec_label_pc_27a8a

bb:                                               ; preds = %dec_label_pc_27a82
  %v1_27a88 = call i32 @function_27a8f()
  br label %dec_label_pc_27a8a

dec_label_pc_27a8a:                               ; preds = %bb, %dec_label_pc_27a82
  %v2_27a88 = phi i32 [ %v1_27a88, %bb ], [ %v3_27a82, %dec_label_pc_27a82 ]
  ret i32 %v2_27a88
}

define i32 @function_27a8f() local_unnamed_addr {
dec_label_pc_27a8f:
  %v0_27a90 = load i32, i32* @eax, align 8
  ret i32 %v0_27a90
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a92:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v1_27ab6 = call i32 @unknown_53d3a(i32 %arg2)
  %v2_27abf = ptrtoint i32* %stack_var_-17 to i32
  %v2_27ac5 = call i32 @unknown_53d68(i32 %v2_27abf, i32 %v1_27ab6)
  %v2_27ad7 = call i32 @unknown_53da4(i32 %arg1, i32 %v2_27abf)
  %v1_27ae2 = call i32 @unknown_501d0(i32 %v2_27abf)
  %v2_27ae7 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_27ae7
}

define i32 @function_27af5(i32 %arg1) local_unnamed_addr {
dec_label_pc_27af5:
  %eax.global-to-local = alloca i32, align 4
  %v0_27af6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27af6
}

define i32 @function_27af8(i32 %arg1) local_unnamed_addr {
dec_label_pc_27af8:
  %v0_27af8 = load i32, i32* @ebx, align 8
  %v1_27af8 = add i32 %v0_27af8, 1166869740
  %v2_27af8 = inttoptr i32 %v1_27af8 to i8*
  %v3_27af8 = load i8, i8* %v2_27af8, align 1
  %v4_27af8 = load i32, i32* @eax, align 8
  %v5_27af8 = trunc i32 %v4_27af8 to i8
  %v6_27af8 = add i8 %v5_27af8, %v3_27af8
  store i8 %v6_27af8, i8* %v2_27af8, align 1
  %v0_27afe = call i32 @unknown_89e2d08e()
  %v11_27b04 = and i32 %v0_27afe, -252
  ret i32 %v11_27b04
}

define i32 @function_27b0a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b0a:
  %v0_27b0a = load i32, i32* @ebx, align 8
  %v2_27b0a = load i32, i32* @eax, align 8
  %v4_27b0a = add i32 %v2_27b0a, %v0_27b0a
  %v0_27b15 = load i32, i32* @ebp, align 4
  %v1_27b15 = add i32 %v0_27b15, -20
  %v2_27b15 = inttoptr i32 %v1_27b15 to i32*
  %v3_27b15 = load i32, i32* %v2_27b15, align 4
  %v1_27b1c = add i32 %v0_27b15, -24
  %v2_27b1c = inttoptr i32 %v1_27b1c to i32*
  %v3_27b1c = load i32, i32* %v2_27b1c, align 4
  %v1_27b23 = add i32 %v0_27b15, -28
  %v2_27b23 = inttoptr i32 %v1_27b23 to i32*
  %v3_27b23 = load i32, i32* %v2_27b23, align 4
  %sext = shl i32 %v4_27b0a, 24
  %v4_27b29 = ashr exact i32 %sext, 24
  %v5_27b29 = call i32 @unknown_53ea0(i32 %v3_27b23, i32 %v3_27b1c, i32 %v3_27b15, i32 %v4_27b29)
  %v0_27b2e = call i32 @function_27b5e()
  ret i32 %v0_27b2e
}

define i32 @function_27b31() local_unnamed_addr {
dec_label_pc_27b31:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b31 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27b31
}

define i32 @function_27b48() local_unnamed_addr {
dec_label_pc_27b48:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b48 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27b48
}

define i32 @function_27b5e() local_unnamed_addr {
dec_label_pc_27b5e:
  %v0_27b5e = load i32, i32* @ebp, align 4
  %v1_27b5e = add i32 %v0_27b5e, -12
  %v2_27b5e = inttoptr i32 %v1_27b5e to i32*
  %v3_27b5e = load i32, i32* %v2_27b5e, align 4
  %v3_27b61 = xor i32 %v3_27b5e, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27b61 = icmp eq i32 %v3_27b61, 0
  store i32 %v3_27b61, i32* @eax, align 8
  br i1 %v4_27b61, label %bb, label %dec_label_pc_27b6a

bb:                                               ; preds = %dec_label_pc_27b5e
  %v1_27b68 = call i32 @function_27b6f()
  br label %dec_label_pc_27b6a

dec_label_pc_27b6a:                               ; preds = %bb, %dec_label_pc_27b5e
  %v2_27b68 = phi i32 [ %v1_27b68, %bb ], [ %v3_27b61, %dec_label_pc_27b5e ]
  ret i32 %v2_27b68
}

define i32 @function_27b6f() local_unnamed_addr {
dec_label_pc_27b6f:
  %v0_27b73 = load i32, i32* @eax, align 8
  ret i32 %v0_27b73
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE10_List_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b74:
  %v1_27b91 = call i32 @unknown_53ffc(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27ba2

bb:                                               ; preds = %dec_label_pc_27b74
  %v1_27ba0 = call i32 @function_27ba7()
  br label %dec_label_pc_27ba2

dec_label_pc_27ba2:                               ; preds = %bb, %dec_label_pc_27b74
  %v2_27ba0 = phi i32 [ %v1_27ba0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27b74 ]
  ret i32 %v2_27ba0
}

define i32 @function_27ba7() local_unnamed_addr {
dec_label_pc_27ba7:
  %v0_27ba8 = load i32, i32* @eax, align 8
  ret i32 %v0_27ba8
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27baa:
  %v1_27bc8 = call i32 @unknown_54068(i32 %arg1)
  %v1_27bd3 = call i32 @unknown_4f71e(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_27be2(i32 %arg1) local_unnamed_addr {
dec_label_pc_27be2:
  %v0_27be2 = load i1, i1* @zf, align 1
  br i1 %v0_27be2, label %bb, label %dec_label_pc_27be4

bb:                                               ; preds = %dec_label_pc_27be2
  %v1_27be2 = call i32 @function_27c02()
  store i32 %v1_27be2, i32* @eax, align 8
  br label %dec_label_pc_27be4

dec_label_pc_27be4:                               ; preds = %bb, %dec_label_pc_27be2
  %v0_27be4 = call i32 @function_27bfd()
  ret i32 %v0_27be4
}

define i32 @function_27be7() local_unnamed_addr {
dec_label_pc_27be7:
  %eax.global-to-local = alloca i32, align 4
  %v0_27be7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27be7
}

define i32 @function_27bfd() local_unnamed_addr {
dec_label_pc_27bfd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27c02() local_unnamed_addr {
dec_label_pc_27c02:
  %v0_27c07 = load i32, i32* @eax, align 8
  ret i32 %v0_27c07
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEC1ERKST_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27c08:
  %v2_27c32 = call i32 @unknown_54184(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27c43

bb:                                               ; preds = %dec_label_pc_27c08
  %v1_27c41 = call i32 @function_27c48()
  br label %dec_label_pc_27c43

dec_label_pc_27c43:                               ; preds = %bb, %dec_label_pc_27c08
  %v2_27c41 = phi i32 [ %v1_27c41, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27c08 ]
  ret i32 %v2_27c41
}

define i32 @function_27c48() local_unnamed_addr {
dec_label_pc_27c48:
  %v0_27c49 = load i32, i32* @eax, align 8
  ret i32 %v0_27c49
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c4a:
  %v1_27c67 = call i32 @unknown_542de(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27c78

bb:                                               ; preds = %dec_label_pc_27c4a
  %v1_27c76 = call i32 @function_27c7d()
  br label %dec_label_pc_27c78

dec_label_pc_27c78:                               ; preds = %bb, %dec_label_pc_27c4a
  %v2_27c76 = phi i32 [ %v1_27c76, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_27c4a ]
  ret i32 %v2_27c76
}

define i32 @function_27c7d() local_unnamed_addr {
dec_label_pc_27c7d:
  %v0_27c7e = load i32, i32* @eax, align 8
  ret i32 %v0_27c7e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c80:
  %v1_27c9e = call i32 @unknown_4ae60(i32 %arg1)
  %v2_27cad = call i32 @unknown_5434a(i32 %arg1, i32 %v1_27c9e)
  %v1_27cb8 = call i32 @unknown_4f8ca(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27cc9

bb:                                               ; preds = %dec_label_pc_27c80
  %v1_27cc7 = call i32 @function_27ce7()
  store i32 %v1_27cc7, i32* @eax, align 8
  br label %dec_label_pc_27cc9

dec_label_pc_27cc9:                               ; preds = %bb, %dec_label_pc_27c80
  %v0_27cc9 = call i32 @function_27ce2()
  ret i32 %v0_27cc9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4ae60, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_27ccc() local_unnamed_addr {
dec_label_pc_27ccc:
  %eax.global-to-local = alloca i32, align 4
  %v0_27ccc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27ccc
}

define i32 @function_27ce2() local_unnamed_addr {
dec_label_pc_27ce2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27ce7() local_unnamed_addr {
dec_label_pc_27ce7:
  %v0_27cec = load i32, i32* @eax, align 8
  ret i32 %v0_27cec
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27cee:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_27d04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d04:
  %v2_27d0b = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27d0b = load i32, i32* @eax, align 8
  %v4_27d0b = trunc i32 %v3_27d0b to i8
  %v5_27d0b = add i8 %v4_27d0b, %v2_27d0b
  %v21_27d0b = inttoptr i32 %v3_27d0b to i8*
  store i8 %v5_27d0b, i8* %v21_27d0b, align 1
  %v0_27d0d = load i32, i32* @ebx, align 8
  %v1_27d0d = add i32 %v0_27d0d, 862319685
  %v2_27d0d = inttoptr i32 %v1_27d0d to i8*
  %v3_27d0d = load i8, i8* %v2_27d0d, align 1
  %v4_27d0d = load i32, i32* @ecx, align 4
  %v5_27d0d = trunc i32 %v4_27d0d to i8
  %v6_27d0d = add i8 %v5_27d0d, %v3_27d0d
  store i8 %v6_27d0d, i8* %v2_27d0d, align 1
  %v0_27d13 = load i32, i32* @eax, align 8
  %v1_27d13 = add i32 %v0_27d13, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_27d13 = icmp eq i32 %v1_27d13, 0
  store i32 %v1_27d13, i32* @eax, align 8
  br i1 %v10_27d13, label %bb, label %dec_label_pc_27d1a

bb:                                               ; preds = %dec_label_pc_27d04
  %v1_27d18 = call i32 @function_27d1f()
  br label %dec_label_pc_27d1a

dec_label_pc_27d1a:                               ; preds = %bb, %dec_label_pc_27d04
  %v2_27d18 = phi i32 [ %v1_27d18, %bb ], [ %v1_27d13, %dec_label_pc_27d04 ]
  ret i32 %v2_27d18
}

define i32 @function_27d1f() local_unnamed_addr {
dec_label_pc_27d1f:
  %v0_27d20 = load i32, i32* @eax, align 8
  ret i32 %v0_27d20
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d22:
  %v2_27d4c = call i32 @unknown_5446a(i32 %arg1, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27d6c:
  ret i32 %arg1
}

define i32 @function_27d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d90:
  %v0_27d91 = load i32, i32* @eax, align 8
  %v11_27d91 = and i32 %v0_27d91, -252
  %v1_27d96 = call i32 @unknown_544fe(i32 %v11_27d91)
  %v0_27d9e = load i32, i32* @ebp, align 4
  %v1_27d9e = add i32 %v0_27d9e, -28
  %v2_27d9e = inttoptr i32 %v1_27d9e to i32*
  %v3_27d9e = load i32, i32* %v2_27d9e, align 4
  store i32 %v3_27d9e, i32* @eax, align 8
  %v1_27da1 = add i32 %v0_27d9e, -12
  %v2_27da1 = inttoptr i32 %v1_27da1 to i32*
  %v3_27da1 = load i32, i32* %v2_27da1, align 4
  %v4_27da4 = icmp eq i32 %v3_27da1, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_27da4, label %bb, label %dec_label_pc_27dad

bb:                                               ; preds = %dec_label_pc_27d90
  %v1_27dab = call i32 @function_27db2()
  br label %dec_label_pc_27dad

dec_label_pc_27dad:                               ; preds = %bb, %dec_label_pc_27d90
  %v2_27dab = phi i32 [ %v1_27dab, %bb ], [ %v3_27d9e, %dec_label_pc_27d90 ]
  ret i32 %v2_27dab
}

define i32 @function_27db2() local_unnamed_addr {
dec_label_pc_27db2:
  %v0_27db3 = load i32, i32* @eax, align 8
  ret i32 %v0_27db3
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEneERKSO_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27db6:
  ret i32 %arg1
}

define i32 @function_27dc2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27dc2:
  %v0_27dc2 = load i32, i32* @ebp, align 4
  %v1_27dc2 = add i32 %v0_27dc2, 12
  %v2_27dc2 = inttoptr i32 %v1_27dc2 to i32*
  %v3_27dc2 = load i32, i32* %v2_27dc2, align 4
  %v2_27dc5 = add i32 %v0_27dc2, -32
  %v3_27dc5 = inttoptr i32 %v2_27dc5 to i32*
  store i32 %v3_27dc2, i32* %v3_27dc5, align 4
  %v1_27dce = load i32, i32* @ebp, align 4
  %v2_27dce = add i32 %v1_27dce, -12
  %v3_27dce = inttoptr i32 %v2_27dce to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_27dce, align 4
  %v0_27dd3 = load i32, i32* @ebp, align 4
  %v1_27dd3 = add i32 %v0_27dd3, -28
  %v2_27dd3 = inttoptr i32 %v1_27dd3 to i32*
  %v3_27dd3 = load i32, i32* %v2_27dd3, align 4
  %v1_27dd6 = inttoptr i32 %v3_27dd3 to i32*
  %v2_27dd6 = load i32, i32* %v1_27dd6, align 4
  %v1_27dd8 = add i32 %v0_27dd3, -32
  %v2_27dd8 = inttoptr i32 %v1_27dd8 to i32*
  %v3_27dd8 = load i32, i32* %v2_27dd8, align 4
  %v1_27ddb = inttoptr i32 %v3_27dd8 to i32*
  %v2_27ddb = load i32, i32* %v1_27ddb, align 4
  %v12_27ddd = icmp eq i32 %v2_27dd6, %v2_27ddb
  %v1_27ddf = icmp eq i1 %v12_27ddd, false
  %v2_27ddf = zext i1 %v1_27ddf to i32
  %v4_27ddf = and i32 %v2_27ddb, -256
  %v5_27ddf = or i32 %v2_27ddf, %v4_27ddf
  store i32 %v5_27ddf, i32* @eax, align 8
  %v1_27de2 = add i32 %v0_27dd3, -12
  %v2_27de2 = inttoptr i32 %v1_27de2 to i32*
  %v3_27de2 = load i32, i32* %v2_27de2, align 4
  %v4_27de5 = icmp eq i32 %v3_27de2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_27de5, label %bb, label %dec_label_pc_27dee

bb:                                               ; preds = %dec_label_pc_27dc2
  %v1_27dec = call i32 @function_27df3()
  br label %dec_label_pc_27dee

dec_label_pc_27dee:                               ; preds = %bb, %dec_label_pc_27dc2
  %v2_27dec = phi i32 [ %v1_27dec, %bb ], [ %v5_27ddf, %dec_label_pc_27dc2 ]
  ret i32 %v2_27dec

; uselistorder directives
  uselistorder i32 %v2_27ddb, { 1, 0 }
}

define i32 @function_27df3() local_unnamed_addr {
dec_label_pc_27df3:
  %v0_27df4 = load i32, i32* @eax, align 8
  ret i32 %v0_27df4
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_27df6:
  %v2_27e10 = load i32, i32* %arg1, align 4
  ret i32 %v2_27e10
}

define i32 @function_27e32() local_unnamed_addr {
dec_label_pc_27e32:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27e32 = load i32, i32* %ecx.global-to-local, align 4
  %v1_27e32 = add i32 %v0_27e32, -1
  store i32 %v1_27e32, i32* %ecx.global-to-local, align 4
  %v0_27e34 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_27e34
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_27e36:
  %v2_27e50 = load i32, i32* %arg1, align 4
  ret i32 %v2_27e50
}

define i32 @function_27e62() local_unnamed_addr {
dec_label_pc_27e62:
  %v0_27e62 = load i32, i32* @ebp, align 4
  %v1_27e62 = add i32 %v0_27e62, -12
  %v2_27e62 = inttoptr i32 %v1_27e62 to i32*
  %v3_27e62 = load i32, i32* %v2_27e62, align 4
  %v4_27e65 = icmp eq i32 %v3_27e62, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_27e65, label %bb, label %dec_label_pc_27e62.dec_label_pc_27e6e_crit_edge

dec_label_pc_27e62.dec_label_pc_27e6e_crit_edge:  ; preds = %dec_label_pc_27e62
  %v2_27e6c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27e6e

bb:                                               ; preds = %dec_label_pc_27e62
  %v1_27e6c = call i32 @function_27e73()
  br label %dec_label_pc_27e6e

dec_label_pc_27e6e:                               ; preds = %dec_label_pc_27e62.dec_label_pc_27e6e_crit_edge, %bb
  %v2_27e6c = phi i32 [ %v2_27e6c.pre, %dec_label_pc_27e62.dec_label_pc_27e6e_crit_edge ], [ %v1_27e6c, %bb ]
  ret i32 %v2_27e6c

; uselistorder directives
  uselistorder label %dec_label_pc_27e6e, { 1, 0 }
}

define i32 @function_27e73() local_unnamed_addr {
dec_label_pc_27e73:
  %v0_27e74 = load i32, i32* @eax, align 8
  ret i32 %v0_27e74
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27e76:
  %stack_var_-24 = alloca i32, align 4
  %v1_27ea0 = call i32 @unknown_54652(i32 %arg1)
  %v1_27ea8 = add i32 %arg2, 8
  %v2_27eab = ptrtoint i32* %stack_var_-24 to i32
  %v2_27eb5 = call i32 @unknown_4fbe2(i32 %v2_27eab, i32 %v1_27ea8)
  ret i32 %v2_27eab
}

define i32 @function_27ec6(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ec6:
  %st0.global-to-local = alloca x86_fp80, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_0 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_0, align 4
  %v1_27ec6 = load i32, i32* @ecx, align 4
  %v2_27ec6 = add i32 %v1_27ec6, -1712839676
  %v3_27ec6 = inttoptr i32 %v2_27ec6 to double*
  %v4_27ec6 = load double, double* %v3_27ec6, align 4
  %v5_27ec6 = fpext double %v4_27ec6 to x86_fp80
  %v6_27ec6 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_27ec6 = fmul x86_fp80 %v5_27ec6, %v6_27ec6
  store x86_fp80 %v7_27ec6, x86_fp80* %st0.global-to-local, align 4
  %v0_27ecc = load i32, i32* @eax, align 8
  %v1_27ecc = trunc i32 %v0_27ecc to i8
  %v4_27ecc = load i8, i8* bitcast (i32* @edx to i8*), align 8
  %v5_27ecc = xor i8 %v1_27ecc, %v4_27ecc
  %v6_27ecc = icmp eq i8 %v5_27ecc, 0
  store i1 %v6_27ecc, i1* %zf.global-to-local, align 1
  %v11_27ecc = zext i8 %v5_27ecc to i32
  %v13_27ecc = and i32 %v0_27ecc, -256
  %v14_27ecc = or i32 %v11_27ecc, %v13_27ecc
  store i32 %v14_27ecc, i32* @eax, align 8
  %v2_27ece = mul i32 %v14_27ecc, 8
  %v3_27ece = add i32 %v14_27ecc, 1435180916
  %v4_27ece = add i32 %v3_27ece, %v2_27ece
  %v5_27ece = inttoptr i32 %v4_27ece to i8*
  %v6_27ece = load i8, i8* %v5_27ece, align 1
  %v9_27ece = add i8 %v6_27ece, %v5_27ecc
  %v19_27ece = icmp eq i8 %v9_27ece, 0
  store i1 %v19_27ece, i1* %zf.global-to-local, align 1
  store i8 %v9_27ece, i8* %v5_27ece, align 1
  %v0_27ed5 = load i32, i32* @ecx, align 4
  %v1_27ed5 = add i32 %v0_27ed5, -1
  store i32 %v1_27ed5, i32* @ecx, align 4
  %v2_27ed5 = icmp eq i32 %v1_27ed5, 0
  %v3_27ed5 = load i1, i1* %zf.global-to-local, align 1
  %v4_27ed5 = or i1 %v2_27ed5, %v3_27ed5
  br i1 %v4_27ed5, label %dec_label_pc_27ec6.dec_label_pc_27ed7_crit_edge, label %bb

dec_label_pc_27ec6.dec_label_pc_27ed7_crit_edge:  ; preds = %dec_label_pc_27ec6
  %v0_27ee1.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27ed7

bb:                                               ; preds = %dec_label_pc_27ec6
  %v6_27ed5 = call i32 @function_27e62()
  %v1_27edb.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_27ed7

dec_label_pc_27ed7:                               ; preds = %dec_label_pc_27ec6.dec_label_pc_27ed7_crit_edge, %bb
  %v17_27ee1 = phi i32 [ %v0_27ee1.pre, %dec_label_pc_27ec6.dec_label_pc_27ed7_crit_edge ], [ %v6_27ed5, %bb ]
  %v1_27edb = phi i32 [ %v1_27ed5, %dec_label_pc_27ec6.dec_label_pc_27ed7_crit_edge ], [ %v1_27edb.pre, %bb ]
  %v2_27ed7 = load i32, i32* %stack_var_0, align 4
  %v1_27eda = add i32 %v2_27ed7, 1
  store i32 %v1_27eda, i32* @ebp, align 4
  %v2_27edb = add i32 %v1_27edb, -1996217260
  %v3_27edb = inttoptr i32 %v2_27edb to float*
  %v4_27edb = load float, float* %v3_27edb, align 4
  %v5_27edb = fpext float %v4_27edb to x86_fp80
  %v6_27edb = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_27edb = fmul x86_fp80 %v5_27edb, %v6_27edb
  store x86_fp80 %v7_27edb, x86_fp80* @st0, align 4
  %v1_27ee1 = trunc i32 %v17_27ee1 to i8
  %v11_27ee1 = icmp eq i8 %v1_27ee1, -36
  store i1 %v11_27ee1, i1* %zf.global-to-local, align 1
  %v0_27ee3 = call i32 @unknown_5423c()
  %v0_27ee8 = load i32, i32* @esp, align 4
  %v10_27ee8 = icmp eq i32 %v0_27ee8, 4
  store i1 %v10_27ee8, i1* %zf.global-to-local, align 1
  %v0_27eeb = load i32, i32* @ebp, align 4
  %v1_27eeb = add i32 %v0_27eeb, -40
  %v2_27eeb = inttoptr i32 %v1_27eeb to i32*
  %v3_27eeb = load i32, i32* %v2_27eeb, align 4
  %v1_27eee = load i32, i32* @ebx, align 8
  %v2_27eee = inttoptr i32 %v1_27eee to i32*
  store i32 %v3_27eeb, i32* %v2_27eee, align 4
  %v0_27ef0 = call i32 @function_27f17()
  ret i32 %v0_27ef0

; uselistorder directives
  uselistorder i32 %v1_27ed5, { 0, 2, 1 }
  uselistorder i32 %v14_27ecc, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder label %dec_label_pc_27ed7, { 1, 0 }
}

define i32 @function_27ef2() local_unnamed_addr {
dec_label_pc_27ef2:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_27ef2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27ef2 = add i32 %v0_27ef2, -36
  %v2_27ef2 = inttoptr i32 %v1_27ef2 to i32*
  %v3_27ef2 = load i32, i32* %v2_27ef2, align 4
  store i32 %v3_27ef2, i32* %eax.global-to-local, align 8
  %v1_27ef8 = call i32 @unknown_4b1f0(i32 %v3_27ef2)
  %v1_27efd = add i32 %v1_27ef8, 12
  %v0_27f04 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27f04 = add i32 %v0_27f04, -16
  store i32 %v1_27f04, i32* %eax.global-to-local, align 8
  %v2_27f0a = call i32 @unknown_54686(i32 %v1_27f04, i32 %v1_27efd)
  store i32 %v2_27f0a, i32* %eax.global-to-local, align 8
  %v1_27f0f = add i32 %v0_27f04, -28
  %v2_27f0f = inttoptr i32 %v1_27f0f to i32*
  %v3_27f0f = load i32, i32* %v2_27f0f, align 4
  store i32 %v3_27f0f, i32* %eax.global-to-local, align 8
  %v1_27f12 = add i32 %v0_27f04, -16
  %v2_27f12 = inttoptr i32 %v1_27f12 to i32*
  %v3_27f12 = load i32, i32* %v2_27f12, align 4
  %v2_27f15 = inttoptr i32 %v3_27f0f to i32*
  store i32 %v3_27f12, i32* %v2_27f15, align 4
  %v3_27f15 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_27f15

; uselistorder directives
  uselistorder i32 %v0_27f04, { 1, 0, 2 }
}

define i32 @function_27f17() local_unnamed_addr {
dec_label_pc_27f17:
  %v0_27f17 = load i32, i32* @ebp, align 4
  %v1_27f17 = add i32 %v0_27f17, -28
  %v2_27f17 = inttoptr i32 %v1_27f17 to i32*
  %v3_27f17 = load i32, i32* %v2_27f17, align 4
  ret i32 %v3_27f17
}

define i32 @function_27f22(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f22:
  %zf.global-to-local = alloca i1, align 1
  %v2_27f22 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_27f22 = load i32, i32* @eax, align 8
  %v4_27f22 = trunc i32 %v3_27f22 to i8
  %v5_27f22 = add i8 %v4_27f22, %v2_27f22
  %v15_27f22 = icmp eq i8 %v5_27f22, 0
  store i1 %v15_27f22, i1* %zf.global-to-local, align 1
  %v21_27f22 = inttoptr i32 %v3_27f22 to i8*
  store i8 %v5_27f22, i8* %v21_27f22, align 1
  %v0_27f24 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27f24, label %bb, label %dec_label_pc_27f22.dec_label_pc_27f26_crit_edge

dec_label_pc_27f22.dec_label_pc_27f26_crit_edge:  ; preds = %dec_label_pc_27f22
  %v2_27f24.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_27f26

bb:                                               ; preds = %dec_label_pc_27f22
  %v1_27f24 = call i32 @function_27f2b()
  br label %dec_label_pc_27f26

dec_label_pc_27f26:                               ; preds = %dec_label_pc_27f22.dec_label_pc_27f26_crit_edge, %bb
  %v2_27f24 = phi i32 [ %v2_27f24.pre, %dec_label_pc_27f22.dec_label_pc_27f26_crit_edge ], [ %v1_27f24, %bb ]
  ret i32 %v2_27f24

; uselistorder directives
  uselistorder label %dec_label_pc_27f26, { 1, 0 }
}

define i32 @function_27f2b() local_unnamed_addr {
dec_label_pc_27f2b:
  %v0_27f2b = load i32, i32* @ebp, align 4
  %v1_27f2b = add i32 %v0_27f2b, -4
  %v2_27f2b = inttoptr i32 %v1_27f2b to i32*
  %v3_27f2b = load i32, i32* %v2_27f2b, align 4
  store i32 %v3_27f2b, i32* @ebx, align 8
  %v0_27f2f = load i32, i32* @eax, align 8
  ret i32 %v0_27f2f
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f32:
  %v2_27f52 = load i32, i32* %arg1, align 4
  %v1_27f57 = inttoptr i32 %arg2 to i32*
  %v2_27f57 = load i32, i32* %v1_27f57, align 4
  %v12_27f59 = icmp eq i32 %v2_27f52, %v2_27f57
  %v1_27f5b = icmp eq i1 %v12_27f59, false
  %v2_27f5b = zext i1 %v1_27f5b to i32
  %v4_27f5b = and i32 %v2_27f57, -256
  %v5_27f5b = or i32 %v2_27f5b, %v4_27f5b
  store i32 %v5_27f5b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27f6a

bb:                                               ; preds = %dec_label_pc_27f32
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_27f68 = call i32 @function_27f6f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_27f6a

dec_label_pc_27f6a:                               ; preds = %bb, %dec_label_pc_27f32
  %v4_27f68 = phi i32 [ %v3_27f68, %bb ], [ %v5_27f5b, %dec_label_pc_27f32 ]
  ret i32 %v4_27f68

; uselistorder directives
  uselistorder i32 %v2_27f57, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27f6f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f6f:
  %v0_27f70 = load i32, i32* @eax, align 8
  ret i32 %v0_27f70
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_27f72:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_27f8c = load i32, i32* %arg1, align 4
  %v1_27f8e = inttoptr i32 %v2_27f8c to i32*
  %v2_27f8e = load i32, i32* %v1_27f8e, align 4
  store i32 %v2_27f8e, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_27fa4

bb:                                               ; preds = %dec_label_pc_27f72
  %v2_27fa2 = call i32 @function_27fa9(i32 %tmp100)
  br label %dec_label_pc_27fa4

dec_label_pc_27fa4:                               ; preds = %bb, %dec_label_pc_27f72
  %v3_27fa2 = phi i32 [ %v2_27fa2, %bb ], [ %tmp100, %dec_label_pc_27f72 ]
  ret i32 %v3_27fa2
}

define i32 @function_27fa6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27fa6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_27fa9(i32 %arg1) local_unnamed_addr {
dec_label_pc_27fa9:
  %v0_27faa = load i32, i32* @eax, align 8
  ret i32 %v0_27faa
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot3IbRKSsSH_jNS_8functionIFbSH_SH_jEEEEENS3_5mutexEEEEEEEEEPT_() local_unnamed_addr {
dec_label_pc_27fac:
  %eax.global-to-local = alloca i32, align 4
  %v17_27fb0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_27fb0
}

define i32 @function_27fb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27fb4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_27fb4 = load i32, i32* @ebp, align 4
  %v1_27fb4 = add i32 %v0_27fb4, 1
  store i32 %v1_27fb4, i32* %ebp.global-to-local, align 4
  %v0_27fb5 = load i32, i32* @ecx, align 4
  %v1_27fb5 = add i32 %v0_27fb5, 1166795845
  %v2_27fb5 = inttoptr i32 %v1_27fb5 to i8*
  %v3_27fb5 = load i8, i8* %v2_27fb5, align 1
  %v5_27fb5 = trunc i32 %v0_27fb5 to i8
  %v6_27fb5 = or i8 %v3_27fb5, %v5_27fb5
  store i8 %v6_27fb5, i8* %v2_27fb5, align 1
  %v0_27fbb = load i32, i32* @eax, align 8
  %v2_27fbb = or i32 %v0_27fbb, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_27fbb, i32* @eax, align 8
  %v0_27fbd = load i32, i32* %ebp.global-to-local, align 4
  %v1_27fbd = add i32 %v0_27fbd, 1
  %v9_27fbd = icmp eq i32 %v1_27fbd, 0
  store i32 %v1_27fbd, i32* @ebp, align 4
  %v0_27fbe = load i32, i32* @ecx, align 4
  %v1_27fbe = add i32 %v0_27fbe, -1
  store i32 %v1_27fbe, i32* @ecx, align 4
  %v2_27fbe = icmp eq i32 %v1_27fbe, 0
  %v4_27fbe = or i1 %v9_27fbd, %v2_27fbe
  br i1 %v4_27fbe, label %dec_label_pc_27fc0, label %bb

bb:                                               ; preds = %dec_label_pc_27fb4
  %v6_27fbe = call i32 @function_28025()
  store i32 %v6_27fbe, i32* %eax.global-to-local, align 8
  %v1_27fc5.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27fc0

dec_label_pc_27fc0:                               ; preds = %dec_label_pc_27fb4, %bb
  %v1_27fc5 = phi i32 [ %v1_27fbd, %dec_label_pc_27fb4 ], [ %v1_27fc5.pre, %bb ]
  %v2_27fc5 = add i32 %v1_27fc5, -12
  %v3_27fc5 = inttoptr i32 %v2_27fc5 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_27fc5, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_27fca = load i32, i32* @ebp, align 4
  %v1_27fca = add i32 %v0_27fca, -28
  %v2_27fca = inttoptr i32 %v1_27fca to i32*
  %v3_27fca = load i32, i32* %v2_27fca, align 4
  store i32 %v3_27fca, i32* %eax.global-to-local, align 8
  %v1_27fcd = inttoptr i32 %v3_27fca to i32*
  store i32 0, i32* %v1_27fcd, align 4
  %v2_27fd3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_27fd3

; uselistorder directives
  uselistorder i32 %v1_27fbe, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_27fc0, { 1, 0 }
}

define i32 @function_27fde() local_unnamed_addr {
dec_label_pc_27fde:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27fde = load i32, i32* %ecx.global-to-local, align 4
  %v1_27fde = add i32 %v0_27fde, -532313149
  %v2_27fde = inttoptr i32 %v1_27fde to i32*
  %v3_27fde = load i32, i32* %v2_27fde, align 4
  %v4_27fde = add i32 %v3_27fde, -1
  store i32 %v4_27fde, i32* %v2_27fde, align 4
  %v0_27fe4 = load i32, i32* %eax.global-to-local, align 8
  %v0_27fe8 = load i32, i32* %ebx.global-to-local, align 8
  %v2_27feb = call i32 @unknown_547f6(i32 %v0_27fe8, i32 %v0_27fe4)
  store i32 %v2_27feb, i32* %eax.global-to-local, align 8
  %v0_27ff0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27ff0 = add i32 %v0_27ff0, -28
  %v2_27ff0 = inttoptr i32 %v1_27ff0 to i32*
  %v3_27ff0 = load i32, i32* %v2_27ff0, align 4
  store i32 %v3_27ff0, i32* %eax.global-to-local, align 8
  %v0_27ff3 = load i32, i32* %ebx.global-to-local, align 8
  %v2_27ff3 = inttoptr i32 %v3_27ff0 to i32*
  store i32 %v0_27ff3, i32* %v2_27ff3, align 4
  %v0_27ff5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27ff5 = add i32 %v0_27ff5, -12
  %v2_27ff5 = inttoptr i32 %v1_27ff5 to i32*
  %v3_27ff5 = load i32, i32* %v2_27ff5, align 4
  %v3_27ff8 = xor i32 %v3_27ff5, ptrtoint ([3 x i8]* @3 to i32)
  %v4_27ff8 = icmp eq i32 %v3_27ff8, 0
  store i32 %v3_27ff8, i32* @eax, align 8
  br i1 %v4_27ff8, label %bb, label %dec_label_pc_28001

bb:                                               ; preds = %dec_label_pc_27fde
  %v1_27fff = call i32 @function_28031()
  store i32 %v1_27fff, i32* @eax, align 8
  br label %dec_label_pc_28001

dec_label_pc_28001:                               ; preds = %bb, %dec_label_pc_27fde
  %v0_28001 = call i32 @function_2802c()
  store i32 %v0_28001, i32* %eax.global-to-local, align 8
  ret i32 %v0_28001
}

define i32 @function_28004() local_unnamed_addr {
dec_label_pc_28004:
  %eax.global-to-local = alloca i32, align 4
  %v0_28004 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28004
}

define i32 @function_28025() local_unnamed_addr {
dec_label_pc_28025:
  %v0_28025 = load i32, i32* @eax, align 8
  %v5_28025 = mul i32 %v0_28025, 2
  %v20_28025 = and i32 %v5_28025, 254
  %v22_28025 = and i32 %v0_28025, -256
  %v23_28025 = or i32 %v20_28025, %v22_28025
  ret i32 %v23_28025

; uselistorder directives
  uselistorder i32 %v0_28025, { 1, 0 }
}

define i32 @function_2802c() local_unnamed_addr {
dec_label_pc_2802c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28031() local_unnamed_addr {
dec_label_pc_28031:
  %v0_28036 = load i32, i32* @eax, align 8
  ret i32 %v0_28036
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal3_implIbRKSsS7_jNS3_10last_valueIbEEiSt4lessIiENS_8functionIFbS7_S7_jEEENSC_IFbRKNS3_10connectionES7_S7_jEEENS3_5mutexEE16invocation_stateEEEPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28038:
  ret i32 %arg1
}

define i32 @function_28042(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28042:
  %eax.global-to-local = alloca i32, align 4
  %v0_28042 = load i32, i32* @eax, align 8
  %v1_28042 = load i32, i32* @ebp, align 4
  %v2_28042 = add i32 %v1_28042, -28
  %v3_28042 = inttoptr i32 %v2_28042 to i32*
  store i32 %v0_28042, i32* %v3_28042, align 4
  %v0_28045 = load i32, i32* @ebp, align 4
  %v1_28045 = add i32 %v0_28045, 12
  %v2_28045 = inttoptr i32 %v1_28045 to i32*
  %v3_28045 = load i32, i32* %v2_28045, align 4
  %v2_28048 = add i32 %v0_28045, -32
  %v3_28048 = inttoptr i32 %v2_28048 to i32*
  store i32 %v3_28045, i32* %v3_28048, align 4
  %v1_28051 = load i32, i32* @ebp, align 4
  %v2_28051 = add i32 %v1_28051, -12
  %v3_28051 = inttoptr i32 %v2_28051 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_28051, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_28056 = load i32, i32* @ebp, align 4
  %v1_28056 = add i32 %v0_28056, -28
  %v2_28056 = inttoptr i32 %v1_28056 to i32*
  %v3_28056 = load i32, i32* %v2_28056, align 4
  store i32 %v3_28056, i32* %eax.global-to-local, align 8
  %v1_28059 = inttoptr i32 %v3_28056 to i32*
  store i32 0, i32* %v1_28059, align 4
  %v2_2805f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2805f
}

define i32 @function_2806c() local_unnamed_addr {
dec_label_pc_2806c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2806c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2806c
}

define i32 @function_2808c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2808c:
  %v0_2808c = load i32, i32* @ebx, align 8
  %v2_2808c = load i32, i32* @ecx, align 4
  %v3_2808c = udiv i32 %v2_2808c, 256
  %tmp = urem i32 %v3_2808c, 256
  %v14_2808c = xor i32 %tmp, %v0_2808c
  store i32 %v14_2808c, i32* @ebx, align 8
  %v15_2808c = load i32, i32* @eax, align 8
  ret i32 %v15_2808c
}

define i32 @function_28090() local_unnamed_addr {
dec_label_pc_28090:
  %eax.global-to-local = alloca i32, align 4
  %v0_28090 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28090
}

define i32 @function_280b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_280b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_280bc() local_unnamed_addr {
dec_label_pc_280bc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_280bc = load i32, i32* %ebx.global-to-local, align 8
  %v1_280bc = add i32 %v0_280bc, 1566258372
  %v2_280bc = inttoptr i32 %v1_280bc to i32*
  %v3_280bc = load i32, i32* %v2_280bc, align 4
  %v4_280bc = add i32 %v3_280bc, 1
  store i32 %v4_280bc, i32* %v2_280bc, align 4
  %v0_280c2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_280c2
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS0_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEvRT_SN_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_280c3:
  %v2_280e3 = load i32, i32* %arg1, align 4
  %v1_280eb = inttoptr i32 %arg2 to i32*
  %v2_280eb = load i32, i32* %v1_280eb, align 4
  store i32 %v2_280eb, i32* %arg1, align 4
  store i32 %v2_280e3, i32* %v1_280eb, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28106

bb:                                               ; preds = %dec_label_pc_280c3
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_28104 = call i32 @function_2810b(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_28106

dec_label_pc_28106:                               ; preds = %bb, %dec_label_pc_280c3
  %v4_28104 = phi i32 [ %v3_28104, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_280c3 ]
  ret i32 %v4_28104

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_2810b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2810b:
  %v0_2810c = load i32, i32* @eax, align 8
  ret i32 %v0_2810c
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2810e:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_28134 = add i32 %arg2, 8
  %v2_28137 = ptrtoint i32* %stack_var_-24 to i32
  %v3_28148 = call i32 @unknown_437f8(i32 %v2_28137, i32 %v1_28134, i32 %arg3)
  %v2_28157 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2815d = call i32 @unknown_4713e(i32 %v2_28157, i32 %v2_28137)
  %v3_28176 = call i32 @unknown_47178(i32 %arg1, i32 %arg2, i32 %v2_28157)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2818d

bb:                                               ; preds = %dec_label_pc_2810e
  %v1_2818b = call i32 @function_28192()
  br label %dec_label_pc_2818d

dec_label_pc_2818d:                               ; preds = %bb, %dec_label_pc_2810e
  %v2_2818b = phi i32 [ %v1_2818b, %bb ], [ %arg1, %dec_label_pc_2810e ]
  ret i32 %v2_2818b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_28192() local_unnamed_addr {
dec_label_pc_28192:
  %v0_28193 = load i32, i32* @eax, align 8
  ret i32 %v0_28193
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEixERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28196:
  %stack_var_-48 = alloca i32, align 4
  %v2_281b4 = ptrtoint i32* %stack_var_-48 to i32
  %v3_281c8 = call i32 @unknown_43b44(i32 %v2_281b4, i32 %arg1, i32 %arg2)
  ret i32 %v3_281c8
}

define i32 @function_281d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_281d2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_281d8 = load i32, i32* @eax, align 8
  %v11_281d8 = and i32 %v0_281d8, -252
  store i32 %v11_281d8, i32* %eax.global-to-local, align 8
  %v1_281dd = call i32 @unknown_43836(i32 %v11_281d8)
  %v0_281e5 = load i32, i32* @ebp, align 4
  %v1_281e5 = add i32 %v0_281e5, -40
  %v1_281ec = add i32 %v0_281e5, -44
  store i32 %v1_281ec, i32* %eax.global-to-local, align 8
  store i32 %v1_281ec, i32* %stack_var_-4, align 4
  %v2_281f2 = call i32 @unknown_4747e(i32 %v1_281ec, i32 %v1_281e5)
  store i32 %v2_281f2, i32* %eax.global-to-local, align 8
  %v4_281f7 = trunc i32 %v2_281f2 to i8
  %v5_281f7 = icmp eq i8 %v4_281f7, 0
  %v1_281f9 = icmp eq i1 %v5_281f7, false
  br i1 %v1_281f9, label %dec_label_pc_28243, label %dec_label_pc_281fb

dec_label_pc_281fb:                               ; preds = %dec_label_pc_281d2
  %v0_281fb = load i32, i32* @ebp, align 4
  %v1_281fb = add i32 %v0_281fb, -44
  store i32 %v1_281fb, i32* %eax.global-to-local, align 8
  store i32 %v1_281fb, i32* %stack_var_-4, align 4
  %v1_28201 = call i32 @unknown_54c16(i32 %v1_281fb)
  store i32 %v1_28201, i32* %ebx.global-to-local, align 8
  %v0_28208 = load i32, i32* @ebp, align 4
  %v1_28208 = add i32 %v0_28208, -65
  store i32 %v1_28208, i32* %eax.global-to-local, align 8
  %v1_2820b = add i32 %v0_28208, -60
  %v2_2820b = inttoptr i32 %v1_2820b to i32*
  %v3_2820b = load i32, i32* %v2_2820b, align 4
  store i32 %v1_28208, i32* %stack_var_-4, align 4
  %v2_28215 = call i32 @unknown_54bcc(i32 %v1_28208, i32 %v3_2820b)
  store i32 %v2_28215, i32* %eax.global-to-local, align 8
  %v0_2821d = load i32, i32* %ebx.global-to-local, align 8
  %v0_28221 = load i32, i32* @ebp, align 4
  %v1_28221 = add i32 %v0_28221, -64
  %v2_28221 = inttoptr i32 %v1_28221 to i32*
  %v3_28221 = load i32, i32* %v2_28221, align 4
  store i32 %v3_28221, i32* %stack_var_-4, align 4
  %v1_28228 = add i32 %v0_28221, -29
  store i32 %v1_28228, i32* %eax.global-to-local, align 8
  store i32 %v1_28228, i32* %stack_var_-8, align 4
  %v3_2822e = call i32 @unknown_498d6(i32 %v1_28228, i32 %v3_28221, i32 %v0_2821d)
  store i32 %v3_2822e, i32* %eax.global-to-local, align 8
  %v4_28233 = trunc i32 %v3_2822e to i8
  %v5_28233 = icmp ne i8 %v4_28233, 0
  %. = zext i1 %v5_28233 to i32
  br label %dec_label_pc_28243

dec_label_pc_28243:                               ; preds = %dec_label_pc_281fb, %dec_label_pc_281d2
  %stack_var_0.0 = phi i32 [ %v1_281e5, %dec_label_pc_281d2 ], [ %v0_2821d, %dec_label_pc_281fb ]
  %storemerge = phi i32 [ 1, %dec_label_pc_281d2 ], [ %., %dec_label_pc_281fb ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v5_28243 = icmp eq i32 %storemerge, 0
  br i1 %v5_28243, label %dec_label_pc_2829f, label %dec_label_pc_28247

dec_label_pc_28247:                               ; preds = %dec_label_pc_28243
  %v0_28247 = load i32, i32* @ebp, align 4
  %v1_28247 = add i32 %v0_28247, -36
  store i32 %v1_28247, i32* %eax.global-to-local, align 8
  %v1_2824a = load i32, i32* @esp, align 4
  %v2_2824a = inttoptr i32 %v1_2824a to i32*
  store i32 %v1_28247, i32* %v2_2824a, align 4
  %v0_2824d = call i32 @unknown_4ac98()
  %v0_28252 = load i32, i32* @ebp, align 4
  %v1_28252 = add i32 %v0_28252, -36
  store i32 %v1_28252, i32* %eax.global-to-local, align 8
  %v1_28255 = load i32, i32* @esp, align 4
  %v2_28255 = add i32 %v1_28255, 8
  %v3_28255 = inttoptr i32 %v2_28255 to i32*
  store i32 %v1_28252, i32* %v3_28255, align 4
  %v0_28259 = load i32, i32* @ebp, align 4
  %v1_28259 = add i32 %v0_28259, -64
  %v2_28259 = inttoptr i32 %v1_28259 to i32*
  %v3_28259 = load i32, i32* %v2_28259, align 4
  %v1_2825c = load i32, i32* @esp, align 4
  %v2_2825c = add i32 %v1_2825c, 4
  %v3_2825c = inttoptr i32 %v2_2825c to i32*
  store i32 %v3_28259, i32* %v3_2825c, align 4
  %v0_28260 = load i32, i32* @ebp, align 4
  %v1_28260 = add i32 %v0_28260, -28
  store i32 %v1_28260, i32* %eax.global-to-local, align 8
  %v1_28263 = load i32, i32* @esp, align 4
  %v2_28263 = inttoptr i32 %v1_28263 to i32*
  store i32 %v1_28260, i32* %v2_28263, align 4
  %v0_28266 = call i32 @unknown_47510()
  %v0_2826b = load i32, i32* @ebp, align 4
  %v1_2826b = add i32 %v0_2826b, -72
  store i32 %v1_2826b, i32* %eax.global-to-local, align 8
  %v1_2826e = add i32 %v0_2826b, -28
  %v1_28271 = load i32, i32* @esp, align 4
  %v2_28271 = add i32 %v1_28271, 12
  %v3_28271 = inttoptr i32 %v2_28271 to i32*
  store i32 %v1_2826e, i32* %v3_28271, align 4
  %v0_28275 = load i32, i32* @ebp, align 4
  %v1_28275 = add i32 %v0_28275, -44
  %v2_28275 = inttoptr i32 %v1_28275 to i32*
  %v3_28275 = load i32, i32* %v2_28275, align 4
  %v1_28278 = load i32, i32* @esp, align 4
  %v2_28278 = add i32 %v1_28278, 8
  %v3_28278 = inttoptr i32 %v2_28278 to i32*
  store i32 %v3_28275, i32* %v3_28278, align 4
  %v0_2827c = load i32, i32* @ebp, align 4
  %v1_2827c = add i32 %v0_2827c, -60
  %v2_2827c = inttoptr i32 %v1_2827c to i32*
  %v3_2827c = load i32, i32* %v2_2827c, align 4
  %v1_2827f = load i32, i32* @esp, align 4
  %v2_2827f = add i32 %v1_2827f, 4
  %v3_2827f = inttoptr i32 %v2_2827f to i32*
  store i32 %v3_2827c, i32* %v3_2827f, align 4
  %v0_28283 = load i32, i32* %eax.global-to-local, align 8
  %v1_28283 = load i32, i32* @esp, align 4
  %v2_28283 = inttoptr i32 %v1_28283 to i32*
  store i32 %v0_28283, i32* %v2_28283, align 4
  %v0_28286 = call i32 @unknown_54c48()
  store i32 %v0_28286, i32* %eax.global-to-local, align 8
  %v0_2828e = load i32, i32* @ebp, align 4
  %v1_2828e = add i32 %v0_2828e, -72
  %v2_2828e = inttoptr i32 %v1_2828e to i32*
  %v3_2828e = load i32, i32* %v2_2828e, align 4
  %v2_28291 = add i32 %v0_2828e, -44
  %v3_28291 = inttoptr i32 %v2_28291 to i32*
  store i32 %v3_2828e, i32* %v3_28291, align 4
  %v0_28294 = load i32, i32* @ebp, align 4
  %v1_28294 = add i32 %v0_28294, -28
  store i32 %v1_28294, i32* %eax.global-to-local, align 8
  %v1_28297 = load i32, i32* @esp, align 4
  %v2_28297 = inttoptr i32 %v1_28297 to i32*
  store i32 %v1_28294, i32* %v2_28297, align 4
  %v0_2829a = load i32, i32* %stack_var_-8, align 4
  %v1_2829a = load i32, i32* %stack_var_-4, align 4
  %v4_2829a = call i32 @unknown_438d8(i32 %v0_2829a, i32 %v1_2829a, i32 %stack_var_0.0, i32 ptrtoint (i32* @2 to i32))
  store i32 %v4_2829a, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2829f

dec_label_pc_2829f:                               ; preds = %dec_label_pc_28247, %dec_label_pc_28243
  %v0_2829f = load i32, i32* @ebp, align 4
  %v1_2829f = add i32 %v0_2829f, -44
  store i32 %v1_2829f, i32* %eax.global-to-local, align 8
  %v1_282a2 = load i32, i32* @esp, align 4
  %v2_282a2 = inttoptr i32 %v1_282a2 to i32*
  store i32 %v1_2829f, i32* %v2_282a2, align 4
  %v0_282a5 = load i32, i32* %stack_var_-8, align 4
  %v1_282a5 = call i32 @unknown_54c16(i32 %v0_282a5)
  %v1_282aa = add i32 %v1_282a5, 12
  store i32 %v1_282aa, i32* @eax, align 8
  %v0_282ad = load i32, i32* @ebp, align 4
  %v1_282ad = add i32 %v0_282ad, -12
  %v2_282ad = inttoptr i32 %v1_282ad to i32*
  %v3_282ad = load i32, i32* %v2_282ad, align 4
  %v4_282b0 = icmp eq i32 %v3_282ad, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_282b0, label %bb, label %dec_label_pc_282b9

bb:                                               ; preds = %dec_label_pc_2829f
  %v1_282b7 = call i32 @function_282d7()
  store i32 %v1_282b7, i32* @eax, align 8
  br label %dec_label_pc_282b9

dec_label_pc_282b9:                               ; preds = %bb, %dec_label_pc_2829f
  %v0_282b9 = call i32 @function_282d2()
  store i32 %v0_282b9, i32* %eax.global-to-local, align 8
  ret i32 %v0_282b9

; uselistorder directives
  uselistorder i32 %v11_281d8, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_438d8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_54c16, { 1, 0 }
}

define i32 @function_282bc() local_unnamed_addr {
dec_label_pc_282bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_282bc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_282bc
}

define i32 @function_282d2() local_unnamed_addr {
dec_label_pc_282d2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_282d7() local_unnamed_addr {
dec_label_pc_282d7:
  %v0_282db = load i32, i32* @eax, align 8
  ret i32 %v0_282db
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_282dc:
  %tmp101 = ptrtoint i32* %arg3 to i32
  %v2_28302 = load i32, i32* %arg3, align 4
  %v2_2830e = call i32 @unknown_4b75e(i32 %arg1, i32 %v2_28302)
  %v2_28320 = call i32 @unknown_54e04(i32 %arg2, i32 %tmp101)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28334

bb:                                               ; preds = %dec_label_pc_282dc
  %v1_28332 = call i32 @function_28339()
  br label %dec_label_pc_28334

dec_label_pc_28334:                               ; preds = %bb, %dec_label_pc_282dc
  %v2_28332 = phi i32 [ %v1_28332, %bb ], [ %arg1, %dec_label_pc_282dc ]
  ret i32 %v2_28332

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_28339() local_unnamed_addr {
dec_label_pc_28339:
  %v4_28339 = load i32, i32* @eax, align 8
  ret i32 %v4_28339
}

define i32 @function_2833a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2833a:
  %v0_2833a = load i32, i32* @eax, align 8
  ret i32 %v0_2833a
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantINS0_8weak_ptrIvEENS0_8signals26detail21foreign_void_weak_ptrENS0_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EE12_Vector_implC1ERKSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2833e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_28368 = call i32 @unknown_54f16(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_28379 = add i32 %tmp103, 4
  %v2_28379 = inttoptr i32 %v1_28379 to i32*
  store i32 0, i32* %v2_28379, align 4
  %v1_28383 = add i32 %tmp103, 8
  %v2_28383 = inttoptr i32 %v1_28383 to i32*
  store i32 0, i32* %v2_28383, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28396

bb:                                               ; preds = %dec_label_pc_2833e
  %v1_28394 = call i32 @function_2839b()
  br label %dec_label_pc_28396

dec_label_pc_28396:                               ; preds = %bb, %dec_label_pc_2833e
  %v2_28394 = phi i32 [ %v1_28394, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2833e ]
  ret i32 %v2_28394

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_2839b() local_unnamed_addr {
dec_label_pc_2839b:
  %v0_2839c = load i32, i32* @eax, align 8
  ret i32 %v0_2839c
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS2_8weak_ptrIvEENS2_8signals26detail21foreign_void_weak_ptrENS2_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EESt6vectorISC_SaISC_EEEEPSC_ET0_T_SL_SK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2839d:
  %v3_283d4 = call i32 @unknown_54fb7(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_283d4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_283e5

bb:                                               ; preds = %dec_label_pc_2839d
  %v1_283e3 = call i32 @function_283ea()
  br label %dec_label_pc_283e5

dec_label_pc_283e5:                               ; preds = %bb, %dec_label_pc_2839d
  %v2_283e3 = phi i32 [ %v1_283e3, %bb ], [ %v3_283d4, %dec_label_pc_2839d ]
  ret i32 %v2_283e3
}

define i32 @function_283ea() local_unnamed_addr {
dec_label_pc_283ea:
  %v0_283eb = load i32, i32* @eax, align 8
  ret i32 %v0_283eb
}

define i32 @_ZN5boost9function3IbRKSsS2_jE13assign_to_ownERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_283ec:
  ret i32 %arg2
}

define i32 @function_28412(i32 %arg1) local_unnamed_addr {
dec_label_pc_28412:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v2_28412 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_28412 = load i32, i32* @eax, align 8
  %v4_28412 = trunc i32 %v3_28412 to i8
  %v5_28412 = add i8 %v4_28412, %v2_28412
  %v21_28412 = inttoptr i32 %v3_28412 to i8*
  store i8 %v5_28412, i8* %v21_28412, align 1
  %v0_28414 = load i32, i32* @eax, align 8
  %v1_28414 = xor i32 %v0_28414, 1
  %v4_28414 = trunc i32 %v1_28414 to i8
  store i32 %v1_28414, i32* %eax.global-to-local, align 8
  %v5_28417 = icmp eq i8 %v4_28414, 0
  br i1 %v5_28417, label %bb, label %dec_label_pc_2841b

bb:                                               ; preds = %dec_label_pc_28412
  %v1_28419 = call i32 @function_28478()
  store i32 %v1_28419, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2841b

dec_label_pc_2841b:                               ; preds = %bb, %dec_label_pc_28412
  %v0_2841b = load i32, i32* @ebp, align 4
  %v1_2841b = add i32 %v0_2841b, -32
  %v2_2841b = inttoptr i32 %v1_2841b to i32*
  %v3_2841b = load i32, i32* %v2_2841b, align 4
  store i32 %v3_2841b, i32* %eax.global-to-local, align 8
  %v1_2841e = inttoptr i32 %v3_2841b to i32*
  %v2_2841e = load i32, i32* %v1_2841e, align 4
  store i32 %v2_2841e, i32* %edx.global-to-local, align 8
  %v1_28420 = add i32 %v0_2841b, -28
  %v2_28420 = inttoptr i32 %v1_28420 to i32*
  %v3_28420 = load i32, i32* %v2_28420, align 4
  store i32 %v3_28420, i32* %eax.global-to-local, align 8
  %v2_28423 = inttoptr i32 %v3_28420 to i32*
  store i32 %v2_2841e, i32* %v2_28423, align 4
  %v0_28425 = load i32, i32* @ebp, align 4
  %v1_28425 = add i32 %v0_28425, -28
  %v2_28425 = inttoptr i32 %v1_28425 to i32*
  %v3_28425 = load i32, i32* %v2_28425, align 4
  store i32 %v3_28425, i32* %eax.global-to-local, align 8
  %v1_2842b = call i32 @unknown_365c0(i32 %v3_28425)
  store i32 %v1_2842b, i32* %eax.global-to-local, align 8
  %v4_28430 = trunc i32 %v1_2842b to i8
  %v5_28430 = icmp eq i8 %v4_28430, 0
  br i1 %v5_28430, label %bb3, label %dec_label_pc_28434

bb3:                                              ; preds = %dec_label_pc_2841b
  %v1_28432 = call i32 @function_2844e()
  store i32 %v1_28432, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_28434

dec_label_pc_28434:                               ; preds = %bb3, %dec_label_pc_2841b
  %v0_28434 = load i32, i32* @ebp, align 4
  %v1_28434 = add i32 %v0_28434, -28
  %v2_28434 = inttoptr i32 %v1_28434 to i32*
  %v3_28434 = load i32, i32* %v2_28434, align 4
  store i32 %v3_28434, i32* %eax.global-to-local, align 8
  %v1_28437 = add i32 %v0_28434, -32
  %v2_28437 = inttoptr i32 %v1_28437 to i32*
  %v3_28437 = load i32, i32* %v2_28437, align 4
  store i32 %v3_28437, i32* %edx.global-to-local, align 8
  %v1_2843a = add i32 %v3_28437, 4
  %v2_2843a = inttoptr i32 %v1_2843a to i32*
  %v3_2843a = load i32, i32* %v2_2843a, align 4
  %v2_2843d = add i32 %v3_28434, 4
  %v3_2843d = inttoptr i32 %v2_2843d to i32*
  store i32 %v3_2843a, i32* %v3_2843d, align 4
  %v0_28440 = load i32, i32* %edx.global-to-local, align 8
  %v1_28440 = add i32 %v0_28440, 8
  %v2_28440 = inttoptr i32 %v1_28440 to i32*
  %v3_28440 = load i32, i32* %v2_28440, align 4
  store i32 %v3_28440, i32* @ecx, align 4
  %v4_28440 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_28440

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
}

define i32 @function_28444(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28444:
  %eax.global-to-local = alloca i32, align 4
  %v0_28444 = load i32, i32* @eax, align 8
  %v1_28444 = add i32 %v0_28444, -1
  store i32 %v1_28444, i32* %eax.global-to-local, align 8
  %v0_28445 = load i32, i32* @ebx, align 8
  %v1_28445 = add i32 %v0_28445, 1351158866
  %v2_28445 = inttoptr i32 %v1_28445 to i8*
  %v3_28445 = load i8, i8* %v2_28445, align 1
  %v4_28445 = load i32, i32* @ecx, align 4
  %v5_28445 = trunc i32 %v4_28445 to i8
  %v6_28445 = or i8 %v5_28445, %v3_28445
  store i8 %v6_28445, i8* %v2_28445, align 1
  %v0_2844b = load i32, i32* %eax.global-to-local, align 8
  %v11_2844b = or i32 %v0_2844b, 235
  store i32 %v11_2844b, i32* %eax.global-to-local, align 8
  ret i32 %v11_2844b

; uselistorder directives
  uselistorder i32 %v11_2844b, { 1, 0 }
}

define i32 @function_2844e() local_unnamed_addr {
dec_label_pc_2844e:
  %v0_2844e = load i32, i32* @ebp, align 4
  %v1_2844e = add i32 %v0_2844e, -28
  %v2_2844e = inttoptr i32 %v1_2844e to i32*
  %v3_2844e = load i32, i32* %v2_2844e, align 4
  %v1_28454 = call i32 @unknown_3d432(i32 %v3_2844e)
  %v1_28459 = inttoptr i32 %v1_28454 to i32*
  %v2_28459 = load i32, i32* %v1_28459, align 4
  ret i32 %v2_28459
}

define i32 @function_28478() local_unnamed_addr {
dec_label_pc_28478:
  %v0_28478 = load i32, i32* @ebp, align 4
  %v1_28478 = add i32 %v0_28478, -12
  %v2_28478 = inttoptr i32 %v1_28478 to i32*
  %v3_28478 = load i32, i32* %v2_28478, align 4
  %v3_2847b = xor i32 %v3_28478, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2847b = icmp eq i32 %v3_2847b, 0
  store i32 %v3_2847b, i32* @eax, align 8
  br i1 %v4_2847b, label %bb, label %dec_label_pc_28484

bb:                                               ; preds = %dec_label_pc_28478
  %v1_28482 = call i32 @function_28489()
  br label %dec_label_pc_28484

dec_label_pc_28484:                               ; preds = %bb, %dec_label_pc_28478
  %v2_28482 = phi i32 [ %v1_28482, %bb ], [ %v3_2847b, %dec_label_pc_28478 ]
  ret i32 %v2_28482
}

define i32 @function_28489() local_unnamed_addr {
dec_label_pc_28489:
  %v0_2848a = load i32, i32* @eax, align 8
  ret i32 %v0_2848a
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_2848c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_339fc_type* @global_var_339fc.1996 to i32), i32* %arg1, align 4
  %v1_284b0 = add i32 %tmp99, 68
  %v1_284b6 = call i32 @unknown_3d5e4(i32 %v1_284b0)
  %v1_284be = add i32 %tmp99, 44
  %v1_284c4 = call i32 @unknown_37560(i32 %v1_284be)
  %v1_284cc = add i32 %tmp99, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_284d2 = call i32 @unknown_381d6(i32 %v1_284cc)
  %v1_284dd = call i32 @unknown_37162(i32 %tmp99)
  %v1_284ec = call i32 @function_28532()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_339fc_type* @global_var_339fc.1996 to i32), { 1, 0 }
}

define i32 @function_284f9() local_unnamed_addr {
dec_label_pc_284f9:
  %v0_284f9 = call i32 @function_28532()
  ret i32 %v0_284f9

; uselistorder directives
  uselistorder i32 ()* @function_28532, { 1, 0 }
}

define i32 @function_284fb() local_unnamed_addr {
dec_label_pc_284fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_284fb = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_284fb, i32* @ebx, align 8
  %v0_284fd = load i32, i32* @ebp, align 4
  %v1_284fd = add i32 %v0_284fd, -28
  %v2_284fd = inttoptr i32 %v1_284fd to i32*
  %v3_284fd = load i32, i32* %v2_284fd, align 4
  %v1_28500 = add i32 %v3_284fd, 44
  store i32 %v1_28500, i32* %eax.global-to-local, align 8
  %v1_28506 = call i32 @unknown_37560(i32 %v1_28500)
  store i32 %v1_28506, i32* %eax.global-to-local, align 8
  %v0_2850b = load i32, i32* @ebp, align 4
  %v1_2850b = add i32 %v0_2850b, -28
  %v2_2850b = inttoptr i32 %v1_2850b to i32*
  %v3_2850b = load i32, i32* %v2_2850b, align 4
  %v1_2850e = add i32 %v3_2850b, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2850e, i32* %eax.global-to-local, align 8
  %v1_28514 = call i32 @unknown_381d6(i32 %v1_2850e)
  store i32 %v1_28514, i32* %eax.global-to-local, align 8
  %v0_28519 = call i32 @function_2851d()
  store i32 %v0_28519, i32* %eax.global-to-local, align 8
  ret i32 %v0_28519

; uselistorder directives
  uselistorder i32 (i32)* @unknown_381d6, { 1, 0 }
  uselistorder i32 (i32)* @unknown_37560, { 1, 0 }
}

define i32 @function_2851b() local_unnamed_addr {
dec_label_pc_2851b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2851b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2851b
}

define i32 @function_2851d() local_unnamed_addr {
dec_label_pc_2851d:
  %v0_2851d = load i32, i32* @ebp, align 4
  %v1_2851d = add i32 %v0_2851d, -28
  %v2_2851d = inttoptr i32 %v1_2851d to i32*
  %v3_2851d = load i32, i32* %v2_2851d, align 4
  %v1_28523 = call i32 @unknown_37162(i32 %v3_2851d)
  %v0_28528 = load i32, i32* @ebx, align 8
  ret i32 %v0_28528

; uselistorder directives
  uselistorder i32 (i32)* @unknown_37162, { 1, 0 }
}

define i32 @function_28532() local_unnamed_addr {
dec_label_pc_28532:
  %v0_28532 = load i32, i32* @ebp, align 4
  %v1_28532 = add i32 %v0_28532, -12
  %v2_28532 = inttoptr i32 %v1_28532 to i32*
  %v3_28532 = load i32, i32* %v2_28532, align 4
  %v3_28535 = xor i32 %v3_28532, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28535 = icmp eq i32 %v3_28535, 0
  store i32 %v3_28535, i32* @eax, align 8
  br i1 %v4_28535, label %bb, label %dec_label_pc_2853e

bb:                                               ; preds = %dec_label_pc_28532
  %v1_2853c = call i32 @function_28543()
  br label %dec_label_pc_2853e

dec_label_pc_2853e:                               ; preds = %bb, %dec_label_pc_28532
  %v2_2853c = phi i32 [ %v1_2853c, %bb ], [ %v3_28535, %dec_label_pc_28532 ]
  ret i32 %v2_2853c
}

define i32 @function_28543() local_unnamed_addr {
dec_label_pc_28543:
  %v0_28548 = load i32, i32* @eax, align 8
  ret i32 %v0_28548
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEED0Ev(i32 %arg1) {
dec_label_pc_2854a:
  %v1_28567 = call i32 @unknown_509d6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_28576() local_unnamed_addr {
dec_label_pc_28576:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_28576 = load i32, i32* %ebx.global-to-local, align 8
  %v1_28576 = add i32 %v0_28576, 862319685
  %v2_28576 = inttoptr i32 %v1_28576 to i32*
  %v3_28576 = load i32, i32* %v2_28576, align 4
  %v4_28576 = add i32 %v3_28576, -1
  store i32 %v4_28576, i32* %v2_28576, align 4
  %v0_2857c = load i32, i32* %eax.global-to-local, align 8
  %v1_2857c = add i32 %v0_2857c, ptrtoint (i8** @global_var_14.1904 to i32)
  store i32 %v1_2857c, i32* %eax.global-to-local, align 8
  ret i32 %v1_2857c
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE12get_ptr_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2858a:
  %ebx.global-to-local = alloca i32, align 4
  %v1_285a8 = call i32 @unknown_55266(i32 %arg1)
  %v0_285ad = load i32, i32* %ebx.global-to-local, align 8
  %sext = mul i32 %v0_285ad, 16777216
  %v3_285bb = sdiv i32 %sext, 16777216
  %v4_285bb = call i32 @unknown_552a4(i32 %arg1, i32 %v1_285a8, i32 %v3_285bb)
  store i32 %v4_285bb, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_285cc

bb:                                               ; preds = %dec_label_pc_2858a
  %v1_285ca = call i32 @function_285d1()
  br label %dec_label_pc_285cc

dec_label_pc_285cc:                               ; preds = %bb, %dec_label_pc_2858a
  %v2_285ca = phi i32 [ %v1_285ca, %bb ], [ %v4_285bb, %dec_label_pc_2858a ]
  ret i32 %v2_285ca

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_285d1() local_unnamed_addr {
dec_label_pc_285d1:
  %v0_285d6 = load i32, i32* @eax, align 8
  ret i32 %v0_285d6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_285d7:
  ret i32 0
}

define i32 @function_285f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_285f0:
  %v0_285f4 = call i32 @unknown_5532b()
  %v0_285fd = load i32, i32* @ebp, align 4
  %v1_285fd = add i32 %v0_285fd, -13
  %v2_28603 = call i32 @unknown_50ef1(i32 %v1_285fd, i32 %v0_285f4)
  store i32 %v2_28603, i32* @eax, align 8
  %v0_28608 = load i32, i32* @ebp, align 4
  %v1_28608 = add i32 %v0_28608, -12
  %v2_28608 = inttoptr i32 %v1_28608 to i32*
  %v3_28608 = load i32, i32* %v2_28608, align 4
  %v4_2860b = icmp eq i32 %v3_28608, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2860b, label %bb, label %dec_label_pc_28614

bb:                                               ; preds = %dec_label_pc_285f0
  %v1_28612 = call i32 @function_28619()
  br label %dec_label_pc_28614

dec_label_pc_28614:                               ; preds = %bb, %dec_label_pc_285f0
  %v2_28612 = phi i32 [ %v1_28612, %bb ], [ %v2_28603, %dec_label_pc_285f0 ]
  ret i32 %v2_28612
}

define i32 @function_28619() local_unnamed_addr {
dec_label_pc_28619:
  %v0_2861a = load i32, i32* @eax, align 8
  ret i32 %v0_2861a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2861b:
  %v1_28635 = add i32 %arg1, 8
  %v2_28635 = inttoptr i32 %v1_28635 to i32*
  %v3_28635 = load i32, i32* %v2_28635, align 4
  store i32 %v3_28635, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28644

bb:                                               ; preds = %dec_label_pc_2861b
  %v2_28642 = call i32 @function_28649(i32 %arg1)
  br label %dec_label_pc_28644

dec_label_pc_28644:                               ; preds = %bb, %dec_label_pc_2861b
  %v3_28642 = phi i32 [ %v2_28642, %bb ], [ %v3_28635, %dec_label_pc_2861b ]
  ret i32 %v3_28642
}

define i32 @function_28649(i32 %arg1) local_unnamed_addr {
dec_label_pc_28649:
  %v0_2864a = load i32, i32* @eax, align 8
  ret i32 %v0_2864a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2864b:
  %v1_28665 = add i32 %arg1, 12
  %v2_28665 = inttoptr i32 %v1_28665 to i32*
  %v3_28665 = load i32, i32* %v2_28665, align 4
  store i32 %v3_28665, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28674

bb:                                               ; preds = %dec_label_pc_2864b
  %v2_28672 = call i32 @function_28679(i32 %arg1)
  br label %dec_label_pc_28674

dec_label_pc_28674:                               ; preds = %bb, %dec_label_pc_2864b
  %v3_28672 = phi i32 [ %v2_28672, %bb ], [ %v3_28665, %dec_label_pc_2864b ]
  ret i32 %v3_28672
}

define i32 @function_28679(i32 %arg1) local_unnamed_addr {
dec_label_pc_28679:
  %v0_2867a = load i32, i32* @eax, align 8
  ret i32 %v0_2867a
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEPT_RSP_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2867b:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_286a1

bb:                                               ; preds = %dec_label_pc_2867b
  %v2_2869f = call i32 @function_286a6(i32 %arg1)
  br label %dec_label_pc_286a1

dec_label_pc_286a1:                               ; preds = %bb, %dec_label_pc_2867b
  %v3_2869f = phi i32 [ %v2_2869f, %bb ], [ %arg1, %dec_label_pc_2867b ]
  ret i32 %v3_2869f

; uselistorder directives
  uselistorder i32 (i32)* @function_286a6, { 1, 0 }
}

define i32 @function_286a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_286a6:
  %v0_286a7 = load i32, i32* @eax, align 8
  ret i32 %v0_286a7
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_286a8:
  %v3_286d5 = call i32 @unknown_5542c(i32 %arg1, i32 1, i32 0)
  store i32 %v3_286d5, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_286e6

bb:                                               ; preds = %dec_label_pc_286a8
  %v1_286e4 = call i32 @function_286eb()
  br label %dec_label_pc_286e6

dec_label_pc_286e6:                               ; preds = %bb, %dec_label_pc_286a8
  %v2_286e4 = phi i32 [ %v1_286e4, %bb ], [ %v3_286d5, %dec_label_pc_286a8 ]
  ret i32 %v2_286e4
}

define i32 @function_286eb() local_unnamed_addr {
dec_label_pc_286eb:
  %v0_286ec = load i32, i32* @eax, align 8
  ret i32 %v0_286ec
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_286ee:
  %v1_28711 = call i32 @unknown_54996(i32 %arg2)
  %v2_28720 = call i32 @unknown_549c4(i32 %arg1, i32 %v1_28711)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28734

bb:                                               ; preds = %dec_label_pc_286ee
  %v1_28732 = call i32 @function_28739()
  br label %dec_label_pc_28734

dec_label_pc_28734:                               ; preds = %bb, %dec_label_pc_286ee
  %v2_28732 = phi i32 [ %v1_28732, %bb ], [ %arg1, %dec_label_pc_286ee ]
  ret i32 %v2_28732

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_28739() local_unnamed_addr {
dec_label_pc_28739:
  %v0_2873a = load i32, i32* @eax, align 8
  ret i32 %v0_2873a
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2873e:
  %v1_2875b = call i32 @unknown_55520(i32 %arg1)
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEPT_RSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28773:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28799

bb:                                               ; preds = %dec_label_pc_28773
  %v2_28797 = call i32 @function_2879e(i32 %arg1)
  br label %dec_label_pc_28799

dec_label_pc_28799:                               ; preds = %bb, %dec_label_pc_28773
  %v3_28797 = phi i32 [ %v2_28797, %bb ], [ %arg1, %dec_label_pc_28773 ]
  ret i32 %v3_28797
}

define i32 @function_2879e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2879e:
  %v0_2879f = load i32, i32* @eax, align 8
  ret i32 %v0_2879f
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEE9constructEPSK_RKSK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_287a0:
  store i32 %arg2, i32* @eax, align 8
  %v2_287d1 = call i32 @function_29106(i32 8, i32 %arg2)
  %v1_287d6 = icmp eq i32 %v2_287d1, 0
  br i1 %v1_287d6, label %dec_label_pc_287e9, label %dec_label_pc_287da

dec_label_pc_287da:                               ; preds = %dec_label_pc_287a0
  %v2_287e4 = call i32 @unknown_3d8a6(i32 %v2_287d1, i32 %arg3)
  br label %dec_label_pc_287e9

dec_label_pc_287e9:                               ; preds = %dec_label_pc_287da, %dec_label_pc_287a0
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_287f5

bb:                                               ; preds = %dec_label_pc_287e9
  %v1_287f3 = call i32 @function_287fa()
  br label %dec_label_pc_287f5

dec_label_pc_287f5:                               ; preds = %bb, %dec_label_pc_287e9
  %v2_287f3 = phi i32 [ %v1_287f3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_287e9 ]
  ret i32 %v2_287f3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_287fa() local_unnamed_addr {
dec_label_pc_287fa:
  %v0_287fb = load i32, i32* @eax, align 8
  ret i32 %v0_287fb
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE11_M_put_nodeEPSt10_List_nodeISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_287fc:
  ret i32 %arg1
}

define i32 @function_2881c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2881c:
  %v0_28824 = load i32, i32* @ebp, align 4
  %v1_28824 = add i32 %v0_28824, -32
  %v2_28824 = inttoptr i32 %v1_28824 to i32*
  %v3_28824 = load i32, i32* %v2_28824, align 4
  %v0_2882b = load i32, i32* @eax, align 8
  %v3_2882e = call i32 @unknown_55608(i32 %v0_2882b, i32 %v3_28824, i32 1)
  %v0_28833 = load i32, i32* @ebp, align 4
  %v1_28833 = add i32 %v0_28833, -12
  %v2_28833 = inttoptr i32 %v1_28833 to i32*
  %v3_28833 = load i32, i32* %v2_28833, align 4
  %v3_28836 = xor i32 %v3_28833, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28836 = icmp eq i32 %v3_28836, 0
  store i32 %v3_28836, i32* @eax, align 8
  br i1 %v4_28836, label %bb, label %dec_label_pc_2883f

bb:                                               ; preds = %dec_label_pc_2881c
  %v1_2883d = call i32 @function_28844()
  br label %dec_label_pc_2883f

dec_label_pc_2883f:                               ; preds = %bb, %dec_label_pc_2881c
  %v2_2883d = phi i32 [ %v1_2883d, %bb ], [ %v3_28836, %dec_label_pc_2881c ]
  ret i32 %v2_2883d
}

define i32 @function_28844() local_unnamed_addr {
dec_label_pc_28844:
  %v0_28845 = load i32, i32* @eax, align 8
  ret i32 %v0_28845
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28846:
  ret i32 %arg2
}

define i32 @function_28892(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28892:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_28892 = load i32, i32* @eax, align 8
  %v1_28892 = trunc i32 %v0_28892 to i8
  %v2_28892 = load i1, i1* @cf, align 1
  %v3_28892 = zext i1 %v2_28892 to i8
  %v4_28892 = add i8 %v1_28892, -115
  %v5_28892 = add i8 %v4_28892, %v3_28892
  %v22_28892 = icmp ule i8 %v5_28892, %v1_28892
  %v23_28892 = icmp ugt i8 %v1_28892, 114
  %v24_28892 = select i1 %v2_28892, i1 %v22_28892, i1 %v23_28892
  %v25_28892 = zext i8 %v5_28892 to i32
  %v27_28892 = and i32 %v0_28892, -256
  %v28_28892 = or i32 %v25_28892, %v27_28892
  store i32 %v28_28892, i32* %eax.global-to-local, align 8
  store i32 %v28_28892, i32* %stack_var_-4, align 4
  %v0_28895 = load i32, i32* @ebx, align 8
  %v1_28895 = add i32 %v0_28895, 1351214149
  %v2_28895 = inttoptr i32 %v1_28895 to i32*
  %v3_28895 = load i32, i32* %v2_28895, align 4
  %v4_28895 = add i32 %v3_28895, -1
  store i32 %v4_28895, i32* %v2_28895, align 4
  %v0_2889b = load i32, i32* %eax.global-to-local, align 8
  %v4_2889b = select i1 %v24_28892, i32 140, i32 139
  %v5_2889b = add i32 %v4_2889b, %v0_2889b
  %v25_2889b = urem i32 %v5_2889b, 256
  %v27_2889b = and i32 %v0_2889b, -256
  %v28_2889b = or i32 %v25_2889b, %v27_2889b
  %v0_2889d = load i32, i32* @ebp, align 4
  %v1_2889d = add i32 %v0_2889d, 1
  store i32 %v1_2889d, i32* @ebp, align 4
  %v3_2889f = xor i32 %v28_2889b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2889f = icmp eq i32 %v3_2889f, 0
  store i32 %v3_2889f, i32* @eax, align 8
  br i1 %v4_2889f, label %bb, label %dec_label_pc_288a8

bb:                                               ; preds = %dec_label_pc_28892
  %v1_288a6 = load i32, i32* %stack_var_-4, align 4
  %v2_288a6 = call i32 @function_288ad(i32 %v1_288a6)
  store i32 %v2_288a6, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_288a8

dec_label_pc_288a8:                               ; preds = %bb, %dec_label_pc_28892
  %v3_288a6 = phi i32 [ %v2_288a6, %bb ], [ %v3_2889f, %dec_label_pc_28892 ]
  ret i32 %v3_288a6

; uselistorder directives
  uselistorder i32 %v0_2889b, { 1, 0 }
  uselistorder i8 %v5_28892, { 1, 0 }
}

define i32 @function_288ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_288ad:
  %v0_288ae = load i32, i32* @eax, align 8
  ret i32 %v0_288ae
}

define i32 @_ZN5boost15optional_detail13optional_baseIiEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288b0:
  ret i32 %arg2
}

define i32 @function_288c7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288c7:
  %v0_288c7 = load i32, i32* @ecx, align 4
  %v1_288c7 = add i32 %v0_288c7, -1070468027
  %v2_288c7 = inttoptr i32 %v1_288c7 to i8*
  %v3_288c7 = load i8, i8* %v2_288c7, align 1
  %v5_288c7 = trunc i32 %v0_288c7 to i8
  %v6_288c7 = add i8 %v3_288c7, %v5_288c7
  store i8 %v6_288c7, i8* %v2_288c7, align 1
  %v0_288cd = load i32, i32* @ebp, align 4
  %v1_288cd = add i32 %v0_288cd, -28
  %v2_288cd = inttoptr i32 %v1_288cd to i32*
  %v3_288cd = load i32, i32* %v2_288cd, align 4
  %v1_288d3 = call i32 @unknown_3ae4c(i32 %v3_288cd)
  %v0_288d8 = load i32, i32* @ebp, align 4
  %v1_288d8 = add i32 %v0_288d8, -28
  %v2_288d8 = inttoptr i32 %v1_288d8 to i32*
  %v3_288d8 = load i32, i32* %v2_288d8, align 4
  %v1_288db = inttoptr i32 %v3_288d8 to i8*
  store i8 0, i8* %v1_288db, align 1
  %v0_288de = load i32, i32* @ebp, align 4
  %v1_288de = add i32 %v0_288de, -32
  %v2_288de = inttoptr i32 %v1_288de to i32*
  %v3_288de = load i32, i32* %v2_288de, align 4
  %v1_288e4 = call i32 @unknown_4c0e6(i32 %v3_288de)
  %v4_288e9 = trunc i32 %v1_288e4 to i8
  %v5_288e9 = icmp eq i8 %v4_288e9, 0
  br i1 %v5_288e9, label %bb, label %dec_label_pc_288ed

bb:                                               ; preds = %dec_label_pc_288c7
  %v1_288eb = call i32 @function_28907()
  br label %dec_label_pc_288ed

dec_label_pc_288ed:                               ; preds = %bb, %dec_label_pc_288c7
  %v0_288ed = load i32, i32* @ebp, align 4
  %v1_288ed = add i32 %v0_288ed, -32
  %v2_288ed = inttoptr i32 %v1_288ed to i32*
  %v3_288ed = load i32, i32* %v2_288ed, align 4
  %v1_288f3 = call i32 @unknown_4c116(i32 %v3_288ed)
  ret i32 %v1_288f3
}

define i32 @function_288fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288fc:
  %v0_288fc = load i32, i32* @ebp, align 4
  %v1_288fc = add i32 %v0_288fc, -28
  %v2_288fc = inttoptr i32 %v1_288fc to i32*
  %v3_288fc = load i32, i32* %v2_288fc, align 4
  %v1_28902 = call i32 @unknown_4c1ae(i32 %v3_288fc)
  ret i32 %v1_28902
}

define i32 @function_28907() local_unnamed_addr {
dec_label_pc_28907:
  %v0_28907 = load i32, i32* @ebp, align 4
  %v1_28907 = add i32 %v0_28907, -12
  %v2_28907 = inttoptr i32 %v1_28907 to i32*
  %v3_28907 = load i32, i32* %v2_28907, align 4
  %v3_2890a = xor i32 %v3_28907, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2890a = icmp eq i32 %v3_2890a, 0
  store i32 %v3_2890a, i32* @eax, align 8
  br i1 %v4_2890a, label %bb, label %dec_label_pc_28913

bb:                                               ; preds = %dec_label_pc_28907
  %v1_28911 = call i32 @function_28918()
  br label %dec_label_pc_28913

dec_label_pc_28913:                               ; preds = %bb, %dec_label_pc_28907
  %v2_28911 = phi i32 [ %v1_28911, %bb ], [ %v3_2890a, %dec_label_pc_28907 ]
  ret i32 %v2_28911
}

define i32 @function_28918() local_unnamed_addr {
dec_label_pc_28918:
  %v0_28919 = load i32, i32* @eax, align 8
  ret i32 %v0_28919
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEclERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2891a:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28946

bb:                                               ; preds = %dec_label_pc_2891a
  %v3_28944 = call i32 @function_2894b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28946

dec_label_pc_28946:                               ; preds = %bb, %dec_label_pc_2891a
  %v4_28944 = phi i32 [ %v3_28944, %bb ], [ %arg2, %dec_label_pc_2891a ]
  ret i32 %v4_28944
}

define i32 @function_2894b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2894b:
  %v0_2894c = load i32, i32* @eax, align 8
  ret i32 %v0_2894c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2894e:
  ret i32 0
}

define i32 @function_28984(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28984:
  %v0_28984 = load i32, i32* @ebp, align 4
  %v1_28984 = add i32 %v0_28984, -32
  %v2_28984 = inttoptr i32 %v1_28984 to i32*
  %v3_28984 = load i32, i32* %v2_28984, align 4
  %v1_2898a = call i32 @unknown_4bb5e(i32 %v3_28984)
  %v1_2898f = load i32, i32* @ebp, align 4
  %v2_2898f = add i32 %v1_2898f, -40
  %v3_2898f = inttoptr i32 %v2_2898f to i32*
  %v4_2898f = load i32, i32* %v3_2898f, align 4
  %v15_2898f = icmp eq i32 %v1_2898a, %v4_2898f
  br i1 %v15_2898f, label %dec_label_pc_289d6, label %dec_label_pc_28994

dec_label_pc_28994:                               ; preds = %dec_label_pc_28984
  %v1_2899a = call i32 @unknown_51429(i32 %v4_2898f)
  store i32 %v1_2899a, i32* @ebx, align 8
  %v0_289a1 = load i32, i32* @ebp, align 4
  %v1_289a1 = add i32 %v0_289a1, -44
  %v2_289a1 = inttoptr i32 %v1_289a1 to i32*
  %v3_289a1 = load i32, i32* %v2_289a1, align 4
  %v1_289a8 = add i32 %v0_289a1, -14
  %v2_289ae = call i32 @unknown_51268(i32 %v1_289a8, i32 %v3_289a1)
  %v0_289b3 = load i32, i32* @ebp, align 4
  %v1_289b3 = add i32 %v0_289b3, -32
  %v2_289b3 = inttoptr i32 %v1_289b3 to i32*
  %v3_289b3 = load i32, i32* %v2_289b3, align 4
  %v0_289b6 = load i32, i32* @ebx, align 8
  %v3_289c1 = call i32 @unknown_4a08e(i32 %v3_289b3, i32 %v2_289ae, i32 %v0_289b6)
  %v4_289c6 = trunc i32 %v3_289c1 to i8
  %v5_289c6 = icmp ne i8 %v4_289c6, 0
  %v2_289d6.pre = load i32, i32* @ebp, align 4
  %phitmp = zext i1 %v5_289c6 to i8
  br label %dec_label_pc_289d6

dec_label_pc_289d6:                               ; preds = %dec_label_pc_28994, %dec_label_pc_28984
  %v2_289d6 = phi i32 [ %v1_2898f, %dec_label_pc_28984 ], [ %v2_289d6.pre, %dec_label_pc_28994 ]
  %storemerge = phi i8 [ 1, %dec_label_pc_28984 ], [ %phitmp, %dec_label_pc_28994 ]
  %v3_289d6 = add i32 %v2_289d6, -13
  %v4_289d6 = inttoptr i32 %v3_289d6 to i8*
  store i8 %storemerge, i8* %v4_289d6, align 1
  %v0_289d9 = load i32, i32* @ebp, align 4
  %v1_289d9 = add i32 %v0_289d9, -44
  %v2_289d9 = inttoptr i32 %v1_289d9 to i32*
  %v3_289d9 = load i32, i32* %v2_289d9, align 4
  %v1_289e0 = add i32 %v0_289d9, -32
  %v2_289e0 = inttoptr i32 %v1_289e0 to i32*
  %v3_289e0 = load i32, i32* %v2_289e0, align 4
  %v2_289e6 = call i32 @unknown_5583a(i32 %v3_289e0, i32 %v3_289d9)
  %v1_289eb = load i32, i32* @ebp, align 4
  %v2_289eb = add i32 %v1_289eb, -20
  %v3_289eb = inttoptr i32 %v2_289eb to i32*
  store i32 %v2_289e6, i32* %v3_289eb, align 4
  %v0_289ee = load i32, i32* @ebp, align 4
  %v1_289f4 = add i32 %v0_289ee, -13
  %v2_289f4 = inttoptr i32 %v1_289f4 to i8*
  %v3_289f4 = load i8, i8* %v2_289f4, align 1
  %v4_289f4 = zext i8 %v3_289f4 to i32
  ret i32 %v4_289f4

; uselistorder directives
  uselistorder i32 %v4_2898f, { 1, 0 }
}

define i32 @function_28a2d() local_unnamed_addr {
dec_label_pc_28a2d:
  %eax.global-to-local = alloca i32, align 4
  %v0_28a2d = load i32, i32* %eax.global-to-local, align 8
  %v11_28a2d = and i32 %v0_28a2d, -24
  store i32 %v11_28a2d, i32* %eax.global-to-local, align 8
  ret i32 %v11_28a2d

; uselistorder directives
  uselistorder i32 %v11_28a2d, { 1, 0 }
}

define i32 @function_28a46() local_unnamed_addr {
dec_label_pc_28a46:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_28a46 = load i32, i32* %ebx.global-to-local, align 8
  %v1_28a46 = add i32 %v0_28a46, 1566262468
  %v2_28a46 = inttoptr i32 %v1_28a46 to i32*
  %v3_28a46 = load i32, i32* %v2_28a46, align 4
  %v4_28a46 = add i32 %v3_28a46, 1
  store i32 %v4_28a46, i32* %v2_28a46, align 4
  %v0_28a4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28a4c
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEbEC1ERKSO_RKb(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a50:
  ret i32 %arg1
}

define i32 @function_28a5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a5c:
  %v0_28a5c = load i32, i32* @ebp, align 4
  %v1_28a5c = add i32 %v0_28a5c, 12
  %v2_28a5c = inttoptr i32 %v1_28a5c to i32*
  %v3_28a5c = load i32, i32* %v2_28a5c, align 4
  %v2_28a5f = add i32 %v0_28a5c, -32
  %v3_28a5f = inttoptr i32 %v2_28a5f to i32*
  store i32 %v3_28a5c, i32* %v3_28a5f, align 4
  %v0_28a62 = load i32, i32* @ebp, align 4
  %v1_28a62 = add i32 %v0_28a62, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_28a62 = inttoptr i32 %v1_28a62 to i32*
  %v3_28a62 = load i32, i32* %v2_28a62, align 4
  %v2_28a65 = add i32 %v0_28a62, -36
  %v3_28a65 = inttoptr i32 %v2_28a65 to i32*
  store i32 %v3_28a62, i32* %v3_28a65, align 4
  %v1_28a6e = load i32, i32* @ebp, align 4
  %v2_28a6e = add i32 %v1_28a6e, -12
  %v3_28a6e = inttoptr i32 %v2_28a6e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_28a6e, align 4
  %v0_28a73 = load i32, i32* @ebp, align 4
  %v1_28a73 = add i32 %v0_28a73, -28
  %v2_28a73 = inttoptr i32 %v1_28a73 to i32*
  %v3_28a73 = load i32, i32* %v2_28a73, align 4
  %v1_28a76 = add i32 %v0_28a73, -32
  %v2_28a76 = inttoptr i32 %v1_28a76 to i32*
  %v3_28a76 = load i32, i32* %v2_28a76, align 4
  %v1_28a79 = inttoptr i32 %v3_28a76 to i32*
  %v2_28a79 = load i32, i32* %v1_28a79, align 4
  %v2_28a7b = inttoptr i32 %v3_28a73 to i32*
  store i32 %v2_28a79, i32* %v2_28a7b, align 4
  %v0_28a7d = load i32, i32* @ebp, align 4
  %v1_28a7d = add i32 %v0_28a7d, -36
  %v2_28a7d = inttoptr i32 %v1_28a7d to i32*
  %v3_28a7d = load i32, i32* %v2_28a7d, align 4
  %v1_28a80 = inttoptr i32 %v3_28a7d to i8*
  %v2_28a80 = load i8, i8* %v1_28a80, align 1
  %v1_28a83 = add i32 %v0_28a7d, -28
  %v2_28a83 = inttoptr i32 %v1_28a83 to i32*
  %v3_28a83 = load i32, i32* %v2_28a83, align 4
  %v3_28a86 = add i32 %v3_28a83, 4
  %v4_28a86 = inttoptr i32 %v3_28a86 to i8*
  store i8 %v2_28a80, i8* %v4_28a86, align 1
  %v0_28a89 = load i32, i32* @ebp, align 4
  %v1_28a89 = add i32 %v0_28a89, -12
  %v2_28a89 = inttoptr i32 %v1_28a89 to i32*
  %v3_28a89 = load i32, i32* %v2_28a89, align 4
  ret i32 %v3_28a89
}

define i32 @function_28a8e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28a8e:
  %v0_28a8e = load i32, i32* @eax, align 8
  %v1_28a8e = add i32 %v0_28a8e, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_28a8e = icmp eq i32 %v1_28a8e, 0
  store i32 %v1_28a8e, i32* @eax, align 8
  br i1 %v10_28a8e, label %bb, label %dec_label_pc_28a95

bb:                                               ; preds = %dec_label_pc_28a8e
  %v1_28a93 = call i32 @function_28a9a()
  br label %dec_label_pc_28a95

dec_label_pc_28a95:                               ; preds = %bb, %dec_label_pc_28a8e
  %v2_28a93 = phi i32 [ %v1_28a93, %bb ], [ %v1_28a8e, %dec_label_pc_28a8e ]
  ret i32 %v2_28a93
}

define i32 @function_28a9a() local_unnamed_addr {
dec_label_pc_28a9a:
  %v0_28a9b = load i32, i32* @eax, align 8
  ret i32 %v0_28a9b
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_28a9c:
  %v2_28ab6 = load i32, i32* %arg1, align 4
  ret i32 %v2_28ab6
}

define i32 @function_28ad8() local_unnamed_addr {
dec_label_pc_28ad8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28ad8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28ad8 = add i32 %v0_28ad8, -1
  store i32 %v1_28ad8, i32* %ecx.global-to-local, align 4
  %v0_28ada = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28ada
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_28adb:
  %stack_var_-17 = alloca i32, align 4
  %v1_28af8 = call i32 @unknown_55a95(i32 %arg1)
  %v2_28b01 = ptrtoint i32* %stack_var_-17 to i32
  %v2_28b07 = call i32 @unknown_513f5(i32 %v2_28b01, i32 %v1_28af8)
  store i32 %v2_28b07, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28b18

bb:                                               ; preds = %dec_label_pc_28adb
  %v1_28b16 = call i32 @function_28b1d()
  br label %dec_label_pc_28b18

dec_label_pc_28b18:                               ; preds = %bb, %dec_label_pc_28adb
  %v2_28b16 = phi i32 [ %v1_28b16, %bb ], [ %v2_28b07, %dec_label_pc_28adb ]
  ret i32 %v2_28b16
}

define i32 @function_28b1d() local_unnamed_addr {
dec_label_pc_28b1d:
  %v0_28b1e = load i32, i32* @eax, align 8
  ret i32 %v0_28b1e
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b20:
  %v1_28b3a = add i32 %arg1, 4
  %v1_28b40 = call i32 @unknown_55b0a(i32 %v1_28b3a)
  store i32 %v1_28b40, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28b57

bb:                                               ; preds = %dec_label_pc_28b20
  %v2_28b55 = call i32 @function_28b5c(i32 %v1_28b40)
  br label %dec_label_pc_28b57

dec_label_pc_28b57:                               ; preds = %bb, %dec_label_pc_28b20
  %v3_28b55 = phi i32 [ %v2_28b55, %bb ], [ %v1_28b40, %dec_label_pc_28b20 ]
  ret i32 %v3_28b55
}

define i32 @function_28b5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b5c:
  %v0_28b5d = load i32, i32* @eax, align 8
  ret i32 %v0_28b5d
}

define i32 @_ZNK5boost15optional_detail13optional_baseIiE11dereferenceEPKiN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_28b5e:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28b91

bb:                                               ; preds = %dec_label_pc_28b5e
  %v4_28b8f = sext i8 %arg3 to i32
  %v5_28b8f = call i32 @function_28b96(i32 %v4_28b8f, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28b91

dec_label_pc_28b91:                               ; preds = %bb, %dec_label_pc_28b5e
  %v6_28b8f = phi i32 [ %v5_28b8f, %bb ], [ %arg2, %dec_label_pc_28b5e ]
  ret i32 %v6_28b8f
}

define i32 @function_28b96(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28b96:
  %v0_28b97 = load i32, i32* @eax, align 8
  ret i32 %v0_28b97
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE8get_implEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b98:
  %ebx.global-to-local = alloca i32, align 4
  %v1_28bb6 = call i32 @unknown_55874(i32 %arg1)
  %v0_28bbb = load i32, i32* %ebx.global-to-local, align 8
  %sext = mul i32 %v0_28bbb, 16777216
  %v3_28bc9 = sdiv i32 %sext, 16777216
  %v4_28bc9 = call i32 @unknown_55bb0(i32 %arg1, i32 %v1_28bb6, i32 %v3_28bc9)
  store i32 %v4_28bc9, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28bda

bb:                                               ; preds = %dec_label_pc_28b98
  %v1_28bd8 = call i32 @function_28bdf()
  br label %dec_label_pc_28bda

dec_label_pc_28bda:                               ; preds = %bb, %dec_label_pc_28b98
  %v2_28bd8 = phi i32 [ %v1_28bd8, %bb ], [ %v4_28bc9, %dec_label_pc_28b98 ]
  ret i32 %v2_28bd8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28bdf() local_unnamed_addr {
dec_label_pc_28bdf:
  %v0_28be4 = load i32, i32* @eax, align 8
  ret i32 %v0_28be4
}

define i32 @_ZN5boost15optional_detail15aligned_storageIiE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_28be6:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28c0c

bb:                                               ; preds = %dec_label_pc_28be6
  %v2_28c0a = call i32 @function_28c11(i32 %arg1)
  br label %dec_label_pc_28c0c

dec_label_pc_28c0c:                               ; preds = %bb, %dec_label_pc_28be6
  %v3_28c0a = phi i32 [ %v2_28c0a, %bb ], [ %arg1, %dec_label_pc_28be6 ]
  ret i32 %v3_28c0a
}

define i32 @function_28c11(i32 %arg1) local_unnamed_addr {
dec_label_pc_28c11:
  %v0_28c12 = load i32, i32* @eax, align 8
  ret i32 %v0_28c12
}

define i32 @_ZN5boost6detail8function15functor_managerIPFbxEE7managerERKNS1_15function_bufferERS6_NS1_30functor_manager_operation_typeENS1_16function_ptr_tagE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_28c13:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_28c3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28c3a:
  %v0_28c3d = load i32, i32* @ebp, align 4
  %v1_28c3d = add i32 %v0_28c3d, -36
  %v2_28c3d = inttoptr i32 %v1_28c3d to i32*
  %v3_28c3d = load i32, i32* %v2_28c3d, align 4
  %v1_28c44 = add i32 %v0_28c3d, -32
  %v2_28c44 = inttoptr i32 %v1_28c44 to i32*
  %v3_28c44 = load i32, i32* %v2_28c44, align 4
  %v1_28c4b = add i32 %v0_28c3d, -28
  %v2_28c4b = inttoptr i32 %v1_28c4b to i32*
  %v3_28c4b = load i32, i32* %v2_28c4b, align 4
  %v3_28c51 = call i32 @unknown_55c65(i32 %v3_28c4b, i32 %v3_28c44, i32 %v3_28c3d)
  %v0_28c56 = load i32, i32* @ebp, align 4
  %v1_28c56 = add i32 %v0_28c56, -12
  %v2_28c56 = inttoptr i32 %v1_28c56 to i32*
  %v3_28c56 = load i32, i32* %v2_28c56, align 4
  %v3_28c59 = xor i32 %v3_28c56, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28c59 = icmp eq i32 %v3_28c59, 0
  store i32 %v3_28c59, i32* @eax, align 8
  br i1 %v4_28c59, label %bb, label %dec_label_pc_28c62

bb:                                               ; preds = %dec_label_pc_28c3a
  %v1_28c60 = call i32 @function_28c67()
  br label %dec_label_pc_28c62

dec_label_pc_28c62:                               ; preds = %bb, %dec_label_pc_28c3a
  %v2_28c60 = phi i32 [ %v1_28c60, %bb ], [ %v3_28c59, %dec_label_pc_28c3a ]
  ret i32 %v2_28c60
}

define i32 @function_28c64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28c64:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28c67() local_unnamed_addr {
dec_label_pc_28c67:
  %v0_28c68 = load i32, i32* @eax, align 8
  ret i32 %v0_28c68
}

define i32 @_ZN5boost6detail8function13basic_vtable1IbxE9assign_toIPFbxEEEbT_RNS1_15function_bufferENS1_16function_ptr_tagE(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28c6a:
  %tmp103 = ptrtoint i32* %arg3 to i32
  %v2_28ca1 = call i32 @unknown_3e132(i32 %arg1, i32 %tmp103)
  %v10_28ca6 = icmp eq i32 %arg2, 0
  br i1 %v10_28ca6, label %dec_label_pc_28cc0, label %dec_label_pc_28cac

dec_label_pc_28cac:                               ; preds = %dec_label_pc_28c6a
  store i32 %arg2, i32* %arg3, align 4
  br label %dec_label_pc_28cc0

dec_label_pc_28cc0:                               ; preds = %dec_label_pc_28c6a, %dec_label_pc_28cac
  %storemerge = phi i32 [ 1, %dec_label_pc_28cac ], [ 0, %dec_label_pc_28c6a ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28ccc

bb:                                               ; preds = %dec_label_pc_28cc0
  %v1_28cca = call i32 @function_28cd1()
  br label %dec_label_pc_28ccc

dec_label_pc_28ccc:                               ; preds = %bb, %dec_label_pc_28cc0
  %v2_28cca = phi i32 [ %v1_28cca, %bb ], [ %storemerge, %dec_label_pc_28cc0 ]
  ret i32 %v2_28cca

; uselistorder directives
  uselistorder label %dec_label_pc_28cc0, { 1, 0 }
}

define i32 @function_28cd1() local_unnamed_addr {
dec_label_pc_28cd1:
  %v0_28cd2 = load i32, i32* @eax, align 8
  ret i32 %v0_28cd2
}

define i32 @_ZN5boost9addressofIFbxEEEPT_RS2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_28cd3:
  %stack_var_-20 = alloca i32, align 4
  %v2_28cf1 = ptrtoint i32* %stack_var_-20 to i32
  %v2_28cf7 = call i32 @unknown_55e09(i32 %v2_28cf1, i32 %arg1)
  %v1_28d02 = call i32 @unknown_55e41(i32 %v2_28cf1)
  %v2_28d12 = call i32 @unknown_55e70(i32 %v1_28d02, i32 0)
  store i32 %v2_28d12, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28d23

bb:                                               ; preds = %dec_label_pc_28cd3
  %v1_28d21 = call i32 @function_28d28()
  br label %dec_label_pc_28d23

dec_label_pc_28d23:                               ; preds = %bb, %dec_label_pc_28cd3
  %v2_28d21 = phi i32 [ %v1_28d21, %bb ], [ %v2_28d12, %dec_label_pc_28cd3 ]
  ret i32 %v2_28d21
}

define i32 @function_28d28() local_unnamed_addr {
dec_label_pc_28d28:
  %v0_28d29 = load i32, i32* @eax, align 8
  ret i32 %v0_28d29
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIPFbxEEEvRKT_RKN4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28d2a:
  %stack_var_-17 = alloca i32, align 4
  %v2_28d4d = ptrtoint i32* %stack_var_-17 to i32
  %v3_28d61 = call i32 @unknown_55efa(i32 %arg1, i32 %arg2, i32 %v2_28d4d)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28d72

bb:                                               ; preds = %dec_label_pc_28d2a
  %v1_28d70 = call i32 @function_28d77()
  br label %dec_label_pc_28d72

dec_label_pc_28d72:                               ; preds = %bb, %dec_label_pc_28d2a
  %v2_28d70 = phi i32 [ %v1_28d70, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_28d2a ]
  ret i32 %v2_28d70
}

define i32 @function_28d77() local_unnamed_addr {
dec_label_pc_28d77:
  %v0_28d78 = load i32, i32* @eax, align 8
  ret i32 %v0_28d78
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EEC1ERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28d7a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v1_28d9e = call i32 @unknown_55f80(i32 %arg2)
  %v2_28da7 = ptrtoint i32* %stack_var_-17 to i32
  %v2_28dad = call i32 @unknown_55fae(i32 %v2_28da7, i32 %v1_28d9e)
  %v2_28dbf = call i32 @unknown_55fea(i32 %arg1, i32 %v2_28da7)
  %v1_28dca = call i32 @unknown_526a6(i32 %v2_28da7)
  %v2_28dcf = ptrtoint i32* %stack_var_-24 to i32
  %v2_28ddc = call i32 @unknown_5609e(i32 %v2_28dcf, i32 %arg2)
  %v2_28de4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_28df1 = call i32 @unknown_56054(i32 %v2_28de4, i32 %arg2)
  %v0_28df9 = load i32, i32* %ebx.global-to-local, align 8
  %v3_28dfd = load i32, i32* %stack_var_-24, align 4
  %v3_28e04 = load i32, i32* %stack_var_-28, align 4
  %v4_28e11 = call i32 @unknown_560e6(i32 %arg1, i32 %v3_28e04, i32 %v3_28dfd, i32 %v0_28df9)
  %v0_28e16 = call i32 @function_28e46()
  ret i32 %v0_28e16

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28e19() local_unnamed_addr {
dec_label_pc_28e19:
  %eax.global-to-local = alloca i32, align 4
  %v0_28e19 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28e19
}

define i32 @function_28e30() local_unnamed_addr {
dec_label_pc_28e30:
  %eax.global-to-local = alloca i32, align 4
  %v0_28e30 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28e30
}

define i32 @function_28e46() local_unnamed_addr {
dec_label_pc_28e46:
  %v0_28e46 = load i32, i32* @ebp, align 4
  %v1_28e46 = add i32 %v0_28e46, -12
  %v2_28e46 = inttoptr i32 %v1_28e46 to i32*
  %v3_28e46 = load i32, i32* %v2_28e46, align 4
  %v3_28e49 = xor i32 %v3_28e46, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28e49 = icmp eq i32 %v3_28e49, 0
  store i32 %v3_28e49, i32* @eax, align 8
  br i1 %v4_28e49, label %bb, label %dec_label_pc_28e52

bb:                                               ; preds = %dec_label_pc_28e46
  %v1_28e50 = call i32 @function_28e57()
  br label %dec_label_pc_28e52

dec_label_pc_28e52:                               ; preds = %bb, %dec_label_pc_28e46
  %v2_28e50 = phi i32 [ %v1_28e50, %bb ], [ %v3_28e49, %dec_label_pc_28e46 ]
  ret i32 %v2_28e50
}

define i32 @function_28e57() local_unnamed_addr {
dec_label_pc_28e57:
  %v0_28e5b = load i32, i32* @eax, align 8
  ret i32 %v0_28e5b
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE10_List_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e5c:
  %v1_28e79 = call i32 @unknown_56242(i32 %arg1)
  ret i32 %v1_28e79
}

define i32 @function_28e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e80:
  %v0_28e81 = load i32, i32* @eax, align 8
  %v3_28e81 = xor i32 %v0_28e81, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28e81 = icmp eq i32 %v3_28e81, 0
  store i32 %v3_28e81, i32* @eax, align 8
  br i1 %v4_28e81, label %bb, label %dec_label_pc_28e8a

bb:                                               ; preds = %dec_label_pc_28e80
  %v1_28e88 = call i32 @function_28e8f()
  br label %dec_label_pc_28e8a

dec_label_pc_28e8a:                               ; preds = %bb, %dec_label_pc_28e80
  %v2_28e88 = phi i32 [ %v1_28e88, %bb ], [ %v3_28e81, %dec_label_pc_28e80 ]
  ret i32 %v2_28e88
}

define i32 @function_28e8f() local_unnamed_addr {
dec_label_pc_28e8f:
  %v0_28e90 = load i32, i32* @eax, align 8
  ret i32 %v0_28e90
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e92:
  %v1_28eb0 = call i32 @unknown_562ae(i32 %arg1)
  %v1_28ebb = call i32 @unknown_51cee(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28ecc

bb:                                               ; preds = %dec_label_pc_28e92
  %v1_28eca = call i32 @function_28eea()
  store i32 %v1_28eca, i32* @eax, align 8
  br label %dec_label_pc_28ecc

dec_label_pc_28ecc:                               ; preds = %bb, %dec_label_pc_28e92
  %v0_28ecc = call i32 @function_28ee5()
  ret i32 %v0_28ecc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28ecf() local_unnamed_addr {
dec_label_pc_28ecf:
  %eax.global-to-local = alloca i32, align 4
  %v0_28ecf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28ecf
}

define i32 @function_28ee5() local_unnamed_addr {
dec_label_pc_28ee5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28eea() local_unnamed_addr {
dec_label_pc_28eea:
  %v0_28eef = load i32, i32* @eax, align 8
  ret i32 %v0_28eef
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEEC1ERKSR_() local_unnamed_addr {
dec_label_pc_28ef0:
  %eax.global-to-local = alloca i32, align 4
  %v17_28ef3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_28ef3
}

define i32 @function_28ef6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28ef6:
  %v0_28ef6 = load i32, i32* @ebp, align 4
  %v1_28ef6 = add i32 %v0_28ef6, 8
  %v2_28ef6 = inttoptr i32 %v1_28ef6 to i32*
  %v3_28ef6 = load i32, i32* %v2_28ef6, align 4
  %v2_28ef9 = add i32 %v0_28ef6, -28
  %v3_28ef9 = inttoptr i32 %v2_28ef9 to i32*
  store i32 %v3_28ef6, i32* %v3_28ef9, align 4
  %v0_28efc = load i32, i32* @ebp, align 4
  %v1_28efc = add i32 %v0_28efc, 12
  %v2_28efc = inttoptr i32 %v1_28efc to i32*
  %v3_28efc = load i32, i32* %v2_28efc, align 4
  %v2_28eff = add i32 %v0_28efc, -32
  %v3_28eff = inttoptr i32 %v2_28eff to i32*
  store i32 %v3_28efc, i32* %v3_28eff, align 4
  %v1_28f08 = load i32, i32* @ebp, align 4
  %v2_28f08 = add i32 %v1_28f08, -12
  %v3_28f08 = inttoptr i32 %v2_28f08 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_28f08, align 4
  %v0_28f0d = load i32, i32* @ebp, align 4
  %v1_28f0d = add i32 %v0_28f0d, -32
  %v2_28f0d = inttoptr i32 %v1_28f0d to i32*
  %v3_28f0d = load i32, i32* %v2_28f0d, align 4
  %v1_28f10 = add i32 %v0_28f0d, -28
  %v2_28f10 = inttoptr i32 %v1_28f10 to i32*
  %v3_28f10 = load i32, i32* %v2_28f10, align 4
  %v2_28f1a = call i32 @unknown_563ca(i32 %v3_28f10, i32 %v3_28f0d)
  %v0_28f1f = load i32, i32* @ebp, align 4
  %v1_28f1f = add i32 %v0_28f1f, -12
  %v2_28f1f = inttoptr i32 %v1_28f1f to i32*
  %v3_28f1f = load i32, i32* %v2_28f1f, align 4
  %v3_28f22 = xor i32 %v3_28f1f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28f22 = icmp eq i32 %v3_28f22, 0
  store i32 %v3_28f22, i32* @eax, align 8
  br i1 %v4_28f22, label %bb, label %dec_label_pc_28f2b

bb:                                               ; preds = %dec_label_pc_28ef6
  %v1_28f29 = call i32 @function_28f30()
  br label %dec_label_pc_28f2b

dec_label_pc_28f2b:                               ; preds = %bb, %dec_label_pc_28ef6
  %v2_28f29 = phi i32 [ %v1_28f29, %bb ], [ %v3_28f22, %dec_label_pc_28ef6 ]
  ret i32 %v2_28f29
}

define i32 @function_28f30() local_unnamed_addr {
dec_label_pc_28f30:
  %v0_28f31 = load i32, i32* @eax, align 8
  ret i32 %v0_28f31
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE13_Rb_tree_implISR_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f32:
  %stack_var_-60 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-60, align 4
  %v1_28f4f = call i32 @unknown_56524(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_28f60

bb:                                               ; preds = %dec_label_pc_28f32
  %v1_28f5e = load i32, i32* %stack_var_-60, align 4
  %v2_28f5e = call i32 @function_28f65(i32 %v1_28f5e)
  br label %dec_label_pc_28f60

dec_label_pc_28f60:                               ; preds = %bb, %dec_label_pc_28f32
  %v4_28f5e = phi i32 [ %v2_28f5e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_28f32 ]
  ret i32 %v4_28f5e

; uselistorder directives
  uselistorder i32 (i32)* @function_28f65, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28f65(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f65:
  %v0_28f66 = load i32, i32* @eax, align 8
  ret i32 %v0_28f66
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f68:
  %v1_28f86 = call i32 @unknown_4d380(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_28f98(i32 %arg1) local_unnamed_addr {
dec_label_pc_28f98:
  %v0_28f9a = load i32, i32* @ebp, align 4
  %v1_28f9a = add i32 %v0_28f9a, -28
  %v2_28f9a = inttoptr i32 %v1_28f9a to i32*
  %v3_28f9a = load i32, i32* %v2_28f9a, align 4
  %v1_28fa0 = call i32 @unknown_51e9a(i32 %v3_28f9a)
  %v0_28fa5 = load i32, i32* @ebp, align 4
  %v1_28fa5 = add i32 %v0_28fa5, -12
  %v2_28fa5 = inttoptr i32 %v1_28fa5 to i32*
  %v3_28fa5 = load i32, i32* %v2_28fa5, align 4
  %v3_28fa8 = xor i32 %v3_28fa5, ptrtoint ([3 x i8]* @3 to i32)
  %v4_28fa8 = icmp eq i32 %v3_28fa8, 0
  store i32 %v3_28fa8, i32* @eax, align 8
  br i1 %v4_28fa8, label %bb, label %dec_label_pc_28fb1

bb:                                               ; preds = %dec_label_pc_28f98
  %v1_28faf = call i32 @function_28fcf()
  store i32 %v1_28faf, i32* @eax, align 8
  br label %dec_label_pc_28fb1

dec_label_pc_28fb1:                               ; preds = %bb, %dec_label_pc_28f98
  %v0_28fb1 = call i32 @function_28fca()
  ret i32 %v0_28fb1
}

define i32 @function_28fb4() local_unnamed_addr {
dec_label_pc_28fb4:
  %eax.global-to-local = alloca i32, align 4
  %v0_28fb4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_28fb4
}

define i32 @function_28fca() local_unnamed_addr {
dec_label_pc_28fca:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_28fcf() local_unnamed_addr {
dec_label_pc_28fcf:
  %v0_28fd4 = load i32, i32* @eax, align 8
  ret i32 %v0_28fd4
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1Ev() local_unnamed_addr {
dec_label_pc_28fd6:
  %eax.global-to-local = alloca i32, align 4
  %v17_28fd9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_28fd9
}

define i32 @function_28fde(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fde:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_28fde = load i32, i32* @ecx, align 4
  %v1_28fde = add i32 %v0_28fde, -1587157947
  %v2_28fde = inttoptr i32 %v1_28fde to i8*
  %v3_28fde = load i8, i8* %v2_28fde, align 1
  %v5_28fde = trunc i32 %v0_28fde to i8
  %v6_28fde = or i8 %v3_28fde, %v5_28fde
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_28fde, i8* %v2_28fde, align 1
  %v0_28fe4 = load i32, i32* @eax, align 8
  %v1_28fe4 = trunc i32 %v0_28fe4 to i8
  %v2_28fe4 = load i1, i1* %cf.global-to-local, align 1
  %v3_28fe4 = zext i1 %v2_28fe4 to i8
  %v4_28fe4 = add i8 %v3_28fe4, %v1_28fe4
  %v19_28fe4 = icmp ule i8 %v4_28fe4, %v1_28fe4
  %v21_28fe4 = icmp eq i1 %v2_28fe4, %v19_28fe4
  store i1 %v21_28fe4, i1* %cf.global-to-local, align 1
  %v22_28fe4 = zext i8 %v4_28fe4 to i32
  %v24_28fe4 = and i32 %v0_28fe4, -256
  %v25_28fe4 = or i32 %v22_28fe4, %v24_28fe4
  store i32 %v25_28fe4, i32* %eax.global-to-local, align 8
  %v1_28fe6 = inttoptr i32 %v25_28fe4 to i8*
  %v2_28fe6 = load i8, i8* %v1_28fe6, align 1
  %v5_28fe6 = add i8 %v2_28fe6, %v4_28fe4
  store i8 %v5_28fe6, i8* %v1_28fe6, align 1
  %v0_28fe8 = load i32, i32* %eax.global-to-local, align 8
  %v1_28fe8 = load i32, i32* @ebp, align 4
  %v2_28fe8 = add i32 %v1_28fe8, -12
  %v3_28fe8 = inttoptr i32 %v2_28fe8 to i32*
  store i32 %v0_28fe8, i32* %v3_28fe8, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_28fed = load i32, i32* @ebp, align 4
  %v1_28fed = add i32 %v0_28fed, -28
  %v2_28fed = inttoptr i32 %v1_28fed to i32*
  %v3_28fed = load i32, i32* %v2_28fed, align 4
  store i32 %v3_28fed, i32* %eax.global-to-local, align 8
  %v1_28ff0 = inttoptr i32 %v3_28fed to i32*
  store i32 0, i32* %v1_28ff0, align 4
  %v0_28ff6 = load i32, i32* @ebp, align 4
  %v1_28ff6 = add i32 %v0_28ff6, -12
  %v2_28ff6 = inttoptr i32 %v1_28ff6 to i32*
  %v3_28ff6 = load i32, i32* %v2_28ff6, align 4
  %v3_28ff9 = xor i32 %v3_28ff6, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_28ff9 = icmp eq i32 %v3_28ff9, 0
  store i32 %v3_28ff9, i32* @eax, align 8
  br i1 %v4_28ff9, label %bb, label %dec_label_pc_29002

bb:                                               ; preds = %dec_label_pc_28fde
  %v1_29000 = call i32 @function_29007()
  store i32 %v1_29000, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_29002

dec_label_pc_29002:                               ; preds = %bb, %dec_label_pc_28fde
  %v2_29000 = phi i32 [ %v1_29000, %bb ], [ %v3_28ff9, %dec_label_pc_28fde ]
  ret i32 %v2_29000

; uselistorder directives
  uselistorder i8 %v4_28fe4, { 0, 2, 1 }
  uselistorder i8 %v1_28fe4, { 1, 0 }
}

define i32 @function_29007() local_unnamed_addr {
dec_label_pc_29007:
  %v0_29008 = load i32, i32* @eax, align 8
  ret i32 %v0_29008
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE5beginEv() local_unnamed_addr {
dec_label_pc_2900a:
  %eax.global-to-local = alloca i32, align 4
  %v17_2900d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2900d
}

define i32 @function_29011(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29011:
  %ebp.global-to-local = alloca i32, align 4
  %v0_29011 = load i32, i32* @ebp, align 4
  %v1_29011 = add i32 %v0_29011, 1
  store i32 %v1_29011, i32* %ebp.global-to-local, align 4
  %v0_29012 = load i32, i32* @ecx, align 4
  %v1_29012 = add i32 %v0_29012, 1166795845
  %v2_29012 = inttoptr i32 %v1_29012 to i8*
  %v3_29012 = load i8, i8* %v2_29012, align 1
  %v5_29012 = trunc i32 %v0_29012 to i8
  %v6_29012 = or i8 %v3_29012, %v5_29012
  store i8 %v6_29012, i8* %v2_29012, align 1
  %v0_2901a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2901a = add i32 %v0_2901a, 1
  store i32 %v1_2901a, i32* @ebp, align 4
  %v2_29022 = add i32 %v0_2901a, -11
  %v3_29022 = inttoptr i32 %v2_29022 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_29022, align 4
  %v0_29027 = load i32, i32* @ebp, align 4
  %v1_29027 = add i32 %v0_29027, -32
  %v2_29027 = inttoptr i32 %v1_29027 to i32*
  %v3_29027 = load i32, i32* %v2_29027, align 4
  %v1_2902a = add i32 %v0_29027, -28
  %v2_2902a = inttoptr i32 %v1_2902a to i32*
  %v3_2902a = load i32, i32* %v2_2902a, align 4
  %v2_29034 = call i32 @unknown_566b0(i32 %v3_2902a, i32 %v3_29027)
  %v0_2903c = load i32, i32* @ebp, align 4
  %v1_2903c = add i32 %v0_2903c, -28
  %v2_2903c = inttoptr i32 %v1_2903c to i32*
  %v3_2903c = load i32, i32* %v2_2903c, align 4
  store i32 %v3_2903c, i32* @eax, align 8
  %v1_2903f = add i32 %v0_2903c, -12
  %v2_2903f = inttoptr i32 %v1_2903f to i32*
  %v3_2903f = load i32, i32* %v2_2903f, align 4
  %v4_29042 = icmp eq i32 %v3_2903f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29042, label %bb, label %dec_label_pc_2904b

bb:                                               ; preds = %dec_label_pc_29011
  %v1_29049 = call i32 @function_29050()
  br label %dec_label_pc_2904b

dec_label_pc_2904b:                               ; preds = %bb, %dec_label_pc_29011
  %v3_29049 = phi i32 [ %v1_29049, %bb ], [ %v3_2903c, %dec_label_pc_29011 ]
  ret i32 %v3_29049
}

define i32 @function_29050() local_unnamed_addr {
dec_label_pc_29050:
  %v0_29051 = load i32, i32* @eax, align 8
  ret i32 %v0_29051
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29054:
  ret i32 %arg1
}

define i32 @function_2907f() local_unnamed_addr {
dec_label_pc_2907f:
  %eax.global-to-local = alloca i32, align 4
  %v19_2907f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v19_2907f
}

define i32 @function_29099() local_unnamed_addr {
dec_label_pc_29099:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29099 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29099 = add i32 %v0_29099, -1
  store i32 %v1_29099, i32* %ecx.global-to-local, align 4
  %v0_2909b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2909b
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEneERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2909e:
  %v2_290be = load i32, i32* %arg1, align 4
  %v1_290c3 = inttoptr i32 %arg2 to i32*
  %v2_290c3 = load i32, i32* %v1_290c3, align 4
  %v12_290c5 = icmp eq i32 %v2_290be, %v2_290c3
  %v1_290c7 = icmp eq i1 %v12_290c5, false
  %v2_290c7 = zext i1 %v1_290c7 to i32
  %v4_290c7 = and i32 %v2_290c3, -256
  %v5_290c7 = or i32 %v2_290c7, %v4_290c7
  store i32 %v5_290c7, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_290d6

bb:                                               ; preds = %dec_label_pc_2909e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_290d4 = call i32 @function_290db(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_290d6

dec_label_pc_290d6:                               ; preds = %bb, %dec_label_pc_2909e
  %v4_290d4 = phi i32 [ %v3_290d4, %bb ], [ %v5_290c7, %dec_label_pc_2909e ]
  ret i32 %v4_290d4

; uselistorder directives
  uselistorder i32 %v2_290c3, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_290db(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290db:
  %v0_290dc = load i32, i32* @eax, align 8
  ret i32 %v0_290dc
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_290de:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_290f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_290f2:
  %v0_290f5 = load i32, i32* @ebp, align 4
  %v1_290f5 = add i32 %v0_290f5, -28
  %v2_290f5 = inttoptr i32 %v1_290f5 to i32*
  %v3_290f5 = load i32, i32* %v2_290f5, align 4
  %v1_290f8 = inttoptr i32 %v3_290f5 to i32*
  %v2_290f8 = load i32, i32* %v1_290f8, align 4
  ret i32 %v2_290f8
}

define i32 @function_29106(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29106:
  %v0_2910d = load i32, i32* @edx, align 8
  %v4_2910d = icmp eq i32 %v0_2910d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2910d, label %bb, label %dec_label_pc_29106.dec_label_pc_29116_crit_edge

dec_label_pc_29106.dec_label_pc_29116_crit_edge:  ; preds = %dec_label_pc_29106
  %v2_29114.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_29116

bb:                                               ; preds = %dec_label_pc_29106
  %v1_29114 = call i32 @function_2911b()
  br label %dec_label_pc_29116

dec_label_pc_29116:                               ; preds = %dec_label_pc_29106.dec_label_pc_29116_crit_edge, %bb
  %v2_29114 = phi i32 [ %v2_29114.pre, %dec_label_pc_29106.dec_label_pc_29116_crit_edge ], [ %v1_29114, %bb ]
  ret i32 %v2_29114

; uselistorder directives
  uselistorder label %dec_label_pc_29116, { 1, 0 }
}

define i32 @function_2911b() local_unnamed_addr {
dec_label_pc_2911b:
  %v0_2911c = load i32, i32* @eax, align 8
  ret i32 %v0_2911c
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2911e:
  %v2_29138 = load i32, i32* %arg1, align 4
  ret i32 %v2_29138
}

define i32 @function_2915a() local_unnamed_addr {
dec_label_pc_2915a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2915a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2915a = add i32 %v0_2915a, -1
  store i32 %v1_2915a, i32* %ecx.global-to-local, align 4
  %v0_2915c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2915c
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISJ_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2915e:
  ret i32 %arg3
}

define i32 @function_2917c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2917c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2917c = load i32, i32* @ecx, align 4
  %v1_2917c = add i32 %v0_2917c, -1070468027
  %v2_2917c = inttoptr i32 %v1_2917c to i8*
  %v3_2917c = load i8, i8* %v2_2917c, align 1
  %v5_2917c = trunc i32 %v0_2917c to i8
  %v6_2917c = add i8 %v3_2917c, %v5_2917c
  store i8 %v6_2917c, i8* %v2_2917c, align 1
  %v0_29182 = load i32, i32* @ebp, align 4
  %v1_29182 = add i32 %v0_29182, -28
  %v2_29182 = inttoptr i32 %v1_29182 to i32*
  %v3_29182 = load i32, i32* %v2_29182, align 4
  %v1_29188 = call i32 @unknown_56898(i32 %v3_29182)
  %v0_2918d = load i32, i32* @ebp, align 4
  %v1_2918d = add i32 %v0_2918d, -32
  %v2_2918d = inttoptr i32 %v1_2918d to i32*
  %v3_2918d = load i32, i32* %v2_2918d, align 4
  %v1_29190 = add i32 %v3_2918d, 8
  %v1_29193 = add i32 %v0_2918d, -20
  %v2_2919d = call i32 @unknown_521b2(i32 %v1_29193, i32 %v1_29190)
  %v0_291a5 = load i32, i32* @ebp, align 4
  %v1_291a5 = add i32 %v0_291a5, -20
  %v1_291ac = add i32 %v0_291a5, -36
  %v2_291ac = inttoptr i32 %v1_291ac to i32*
  %v3_291ac = load i32, i32* %v2_291ac, align 4
  %v2_291b2 = call i32 @unknown_4d688(i32 %v3_291ac, i32 %v1_291a5)
  %v4_291b7 = trunc i32 %v2_291b2 to i8
  %v5_291b7 = icmp eq i8 %v4_291b7, 0
  %v0_291da = load i32, i32* @ebp, align 4
  br i1 %v5_291b7, label %dec_label_pc_291da, label %dec_label_pc_291bb

dec_label_pc_291bb:                               ; preds = %dec_label_pc_2917c
  %v1_291bb = add i32 %v0_291da, -32
  %v2_291bb = inttoptr i32 %v1_291bb to i32*
  %v3_291bb = load i32, i32* %v2_291bb, align 4
  %v1_291be = add i32 %v0_291da, -28
  %v2_291be = inttoptr i32 %v1_291be to i32*
  %v3_291be = load i32, i32* %v2_291be, align 4
  store i32 %v3_291be, i32* %ebx.global-to-local, align 8
  %v1_291c1 = add i32 %v0_291da, -40
  %v2_291cb = call i32 @unknown_56482(i32 %v1_291c1, i32 %v3_291bb)
  %v0_291d3 = load i32, i32* @ebp, align 4
  %v1_291d3 = add i32 %v0_291d3, -40
  %v2_291d3 = inttoptr i32 %v1_291d3 to i32*
  %v3_291d3 = load i32, i32* %v2_291d3, align 4
  %v1_291d6 = load i32, i32* %ebx.global-to-local, align 8
  %v2_291d6 = inttoptr i32 %v1_291d6 to i32*
  store i32 %v3_291d3, i32* %v2_291d6, align 4
  br label %dec_label_pc_291ff

dec_label_pc_291da:                               ; preds = %dec_label_pc_2917c
  %v1_291da = add i32 %v0_291da, -36
  %v2_291da = inttoptr i32 %v1_291da to i32*
  %v3_291da = load i32, i32* %v2_291da, align 4
  %v1_291e0 = call i32 @unknown_4d710(i32 %v3_291da)
  %v1_291e5 = add i32 %v1_291e0, 12
  %v0_291ec = load i32, i32* @ebp, align 4
  %v1_291ec = add i32 %v0_291ec, -16
  %v2_291f2 = call i32 @unknown_568cc(i32 %v1_291ec, i32 %v1_291e5)
  %v0_291f7 = load i32, i32* @ebp, align 4
  %v1_291f7 = add i32 %v0_291f7, -28
  %v2_291f7 = inttoptr i32 %v1_291f7 to i32*
  %v3_291f7 = load i32, i32* %v2_291f7, align 4
  %v1_291fa = add i32 %v0_291f7, -16
  %v2_291fa = inttoptr i32 %v1_291fa to i32*
  %v3_291fa = load i32, i32* %v2_291fa, align 4
  %v2_291fd = inttoptr i32 %v3_291f7 to i32*
  store i32 %v3_291fa, i32* %v2_291fd, align 4
  br label %dec_label_pc_291ff

dec_label_pc_291ff:                               ; preds = %dec_label_pc_291da, %dec_label_pc_291bb
  %v0_291ff = load i32, i32* @ebp, align 4
  %v1_291ff = add i32 %v0_291ff, -28
  %v2_291ff = inttoptr i32 %v1_291ff to i32*
  %v3_291ff = load i32, i32* %v2_291ff, align 4
  store i32 %v3_291ff, i32* @eax, align 8
  %v1_29202 = add i32 %v0_291ff, -12
  %v2_29202 = inttoptr i32 %v1_29202 to i32*
  %v3_29202 = load i32, i32* %v2_29202, align 4
  %v4_29205 = icmp eq i32 %v3_29202, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29205, label %bb, label %dec_label_pc_2920e

bb:                                               ; preds = %dec_label_pc_291ff
  %v1_2920c = call i32 @function_29213()
  br label %dec_label_pc_2920e

dec_label_pc_2920e:                               ; preds = %bb, %dec_label_pc_291ff
  %v2_2920c = phi i32 [ %v1_2920c, %bb ], [ %v3_291ff, %dec_label_pc_291ff ]
  ret i32 %v2_2920c

; uselistorder directives
  uselistorder i32 %v0_291da, { 3, 0, 2, 1 }
}

define i32 @function_29213() local_unnamed_addr {
dec_label_pc_29213:
  %v0_29217 = load i32, i32* @eax, align 8
  ret i32 %v0_29217
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEneERKSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2921a:
  ret i32 0
}

define i32 @function_29238(i32 %arg1) local_unnamed_addr {
dec_label_pc_29238:
  %v0_29238 = load i32, i32* @ebp, align 4
  %v1_29238 = add i32 %v0_29238, 1
  store i32 %v1_29238, i32* @ebp, align 4
  %v0_2923b = load i32, i32* @ebx, align 8
  %v1_2923b = add i32 %v0_2923b, 9166917
  %v2_2923b = inttoptr i32 %v1_2923b to i8*
  %v3_2923b = load i8, i8* %v2_2923b, align 1
  %v4_2923b = load i32, i32* @ecx, align 4
  %v5_2923b = trunc i32 %v4_2923b to i8
  %v6_2923b = load i1, i1* @cf, align 1
  %v7_2923b = zext i1 %v6_2923b to i8
  %v8_2923b = add i8 %v5_2923b, %v3_2923b
  %v9_2923b = add i8 %v8_2923b, %v7_2923b
  store i8 %v9_2923b, i8* %v2_2923b, align 1
  %v0_29241 = load i32, i32* @edx, align 8
  %v1_29241 = load i32, i32* @eax, align 8
  %v12_29241 = icmp eq i32 %v0_29241, %v1_29241
  %v1_29243 = icmp eq i1 %v12_29241, false
  %v2_29243 = zext i1 %v1_29243 to i32
  %v4_29243 = and i32 %v1_29241, -256
  %v5_29243 = or i32 %v2_29243, %v4_29243
  store i32 %v5_29243, i32* @eax, align 8
  %v0_29246 = load i32, i32* @ebp, align 4
  %v1_29246 = add i32 %v0_29246, -12
  %v2_29246 = inttoptr i32 %v1_29246 to i32*
  %v3_29246 = load i32, i32* %v2_29246, align 4
  %v4_29249 = icmp eq i32 %v3_29246, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29249, label %bb, label %dec_label_pc_29252

bb:                                               ; preds = %dec_label_pc_29238
  %v1_29250 = call i32 @function_29257()
  br label %dec_label_pc_29252

dec_label_pc_29252:                               ; preds = %bb, %dec_label_pc_29238
  %v2_29250 = phi i32 [ %v1_29250, %bb ], [ %v5_29243, %dec_label_pc_29238 ]
  ret i32 %v2_29250

; uselistorder directives
  uselistorder i32 %v1_29241, { 1, 0 }
  uselistorder i32 9166917, { 1, 0, 2 }
}

define i32 @function_29257() local_unnamed_addr {
dec_label_pc_29257:
  %v0_29258 = load i32, i32* @eax, align 8
  ret i32 %v0_29258
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2925a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_29274 = load i32, i32* %arg1, align 4
  %v1_29276 = inttoptr i32 %v2_29274 to i32*
  %v2_29276 = load i32, i32* %v1_29276, align 4
  store i32 %v2_29276, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2928c

bb:                                               ; preds = %dec_label_pc_2925a
  %v2_2928a = call i32 @function_29291(i32 %tmp100)
  br label %dec_label_pc_2928c

dec_label_pc_2928c:                               ; preds = %bb, %dec_label_pc_2925a
  %v3_2928a = phi i32 [ %v2_2928a, %bb ], [ %tmp100, %dec_label_pc_2925a ]
  ret i32 %v3_2928a
}

define i32 @function_29291(i32 %arg1) local_unnamed_addr {
dec_label_pc_29291:
  %v0_29292 = load i32, i32* @eax, align 8
  ret i32 %v0_29292
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1IbxNS_8functionIFbxEEEEENS3_5mutexEEEEEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29294:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_292c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_292c0:
  %v2_292c0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_292c0 = load i32, i32* @eax, align 8
  %v4_292c0 = trunc i32 %v3_292c0 to i8
  %v5_292c0 = add i8 %v4_292c0, %v2_292c0
  %v21_292c0 = inttoptr i32 %v3_292c0 to i8*
  store i8 %v5_292c0, i8* %v21_292c0, align 1
  %v22_292c0 = load i32, i32* @eax, align 8
  ret i32 %v22_292c0
}

define i32 @function_292c8() local_unnamed_addr {
dec_label_pc_292c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_292c8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_292c8
}

define i32 @function_292e2() local_unnamed_addr {
dec_label_pc_292e2:
  %v0_292e2 = load i32, i32* @eax, align 8
  %v1_292e2 = add i32 %v0_292e2, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_292e2 = icmp eq i32 %v1_292e2, 0
  store i32 %v1_292e2, i32* @eax, align 8
  br i1 %v10_292e2, label %bb, label %dec_label_pc_292e9

bb:                                               ; preds = %dec_label_pc_292e2
  %v1_292e7 = call i32 @function_29319()
  store i32 %v1_292e7, i32* @eax, align 8
  br label %dec_label_pc_292e9

dec_label_pc_292e9:                               ; preds = %bb, %dec_label_pc_292e2
  %v0_292e9 = call i32 @function_29314()
  ret i32 %v0_292e9
}

define i32 @function_292ec() local_unnamed_addr {
dec_label_pc_292ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_292ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_292ec
}

define i32 @function_292f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_292f4:
  %v3_292f4 = load i32, i32* @eax, align 8
  ret i32 %v3_292f4
}

define i32 @function_29314() local_unnamed_addr {
dec_label_pc_29314:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29319() local_unnamed_addr {
dec_label_pc_29319:
  %v0_2931e = load i32, i32* @eax, align 8
  ret i32 %v0_2931e
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal1_implIbxNS3_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENSA_IFbRKNS3_10connectionExEEENS3_5mutexEE16invocation_stateEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29320:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_29354() local_unnamed_addr {
dec_label_pc_29354:
  %eax.global-to-local = alloca i32, align 4
  %v0_29354 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29354
}

define i32 @function_29356(i32 %arg1) local_unnamed_addr {
dec_label_pc_29356:
  %v0_29356 = load i32, i32* @ebp, align 4
  %v1_29356 = add i32 %v0_29356, 1
  %v9_29356 = icmp eq i32 %v1_29356, 0
  store i32 %v1_29356, i32* @ebp, align 4
  %v0_29357 = load i32, i32* @ecx, align 4
  %v2_29357 = icmp eq i32 %v0_29357, 1
  %v4_29357 = or i1 %v9_29356, %v2_29357
  br i1 %v4_29357, label %dec_label_pc_29356.dec_label_pc_29359_crit_edge, label %bb

dec_label_pc_29356.dec_label_pc_29359_crit_edge:  ; preds = %dec_label_pc_29356
  %v0_2935a.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_29359

bb:                                               ; preds = %dec_label_pc_29356
  %v6_29357 = call i32 @function_292e2()
  br label %dec_label_pc_29359

dec_label_pc_29359:                               ; preds = %dec_label_pc_29356.dec_label_pc_29359_crit_edge, %bb
  %v9_2935a = phi i32 [ %v0_2935a.pre, %dec_label_pc_29356.dec_label_pc_29359_crit_edge ], [ %v6_29357, %bb ]
  %v11_2935a = and i32 %v9_2935a, -252
  ret i32 %v11_2935a

; uselistorder directives
  uselistorder label %dec_label_pc_29359, { 1, 0 }
}

define i32 @function_2935f() local_unnamed_addr {
dec_label_pc_2935f:
  %v0_2935f = call i32 @unknown_56bbe()
  %v0_29364 = load i32, i32* @ebp, align 4
  %v1_29364 = add i32 %v0_29364, -28
  %v2_29364 = inttoptr i32 %v1_29364 to i32*
  %v3_29364 = load i32, i32* %v2_29364, align 4
  %v0_29367 = load i32, i32* @ebx, align 8
  %v2_29367 = inttoptr i32 %v3_29364 to i32*
  store i32 %v0_29367, i32* %v2_29367, align 4
  %v0_29369 = load i32, i32* @ebp, align 4
  %v1_29369 = add i32 %v0_29369, -12
  %v2_29369 = inttoptr i32 %v1_29369 to i32*
  %v3_29369 = load i32, i32* %v2_29369, align 4
  %v3_2936c = xor i32 %v3_29369, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* @cf, align 1
  %v4_2936c = icmp eq i32 %v3_2936c, 0
  store i32 %v3_2936c, i32* @eax, align 8
  br i1 %v4_2936c, label %bb, label %dec_label_pc_29375

bb:                                               ; preds = %dec_label_pc_2935f
  %v1_29373 = call i32 @function_293a5()
  store i32 %v1_29373, i32* @eax, align 8
  br label %dec_label_pc_29375

dec_label_pc_29375:                               ; preds = %bb, %dec_label_pc_2935f
  %v0_29375 = call i32 @function_293a0()
  ret i32 %v0_29375
}

define i32 @function_29378() local_unnamed_addr {
dec_label_pc_29378:
  %eax.global-to-local = alloca i32, align 4
  %v0_29378 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29378
}

define i32 @function_293a0() local_unnamed_addr {
dec_label_pc_293a0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_293a5() local_unnamed_addr {
dec_label_pc_293a5:
  %v0_293a5 = load i32, i32* @esp, align 4
  %v5_293a5 = icmp ugt i32 %v0_293a5, -53
  store i1 %v5_293a5, i1* @cf, align 1
  %v0_293aa = load i32, i32* @eax, align 8
  ret i32 %v0_293aa
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS0_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEvRT_SL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293ab:
  ret i32 %arg1
}

define i32 @function_293cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_293cc:
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_293cc = load i32, i32* @ecx, align 4
  %v1_293cc = add i32 %v0_293cc, 1166798917
  %v2_293cc = inttoptr i32 %v1_293cc to i8*
  %v3_293cc = load i8, i8* %v2_293cc, align 1
  %v5_293cc = trunc i32 %v0_293cc to i8
  %v6_293cc = add i8 %v3_293cc, %v5_293cc
  %v11_293cc = icmp ult i8 %v6_293cc, %v3_293cc
  store i1 %v11_293cc, i1* @cf, align 1
  %v16_293cc = icmp eq i8 %v6_293cc, 0
  store i1 %v16_293cc, i1* %zf.global-to-local, align 1
  store i8 %v6_293cc, i8* %v2_293cc, align 1
  %v0_293d2 = load i32, i32* @ecx, align 4
  %v1_293d2 = add i32 %v0_293d2, -1
  store i32 %v1_293d2, i32* %ecx.global-to-local, align 4
  %v2_293d2 = icmp eq i32 %v1_293d2, 0
  %v3_293d2 = load i1, i1* %zf.global-to-local, align 1
  %v4_293d2 = or i1 %v2_293d2, %v3_293d2
  br i1 %v4_293d2, label %dec_label_pc_293d4, label %bb

bb:                                               ; preds = %dec_label_pc_293cc
  %v6_293d2 = call i32 @function_2935f()
  %v4_293d4.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_293d4

dec_label_pc_293d4:                               ; preds = %dec_label_pc_293cc, %bb
  %v4_293d4 = phi i32 [ %v1_293d2, %dec_label_pc_293cc ], [ %v4_293d4.pre, %bb ]
  %v0_293d4 = load i32, i32* @ebx, align 8
  %v1_293d4 = add i32 %v0_293d4, 277472325
  %v2_293d4 = inttoptr i32 %v1_293d4 to i8*
  %v3_293d4 = load i8, i8* %v2_293d4, align 1
  %v5_293d4 = trunc i32 %v4_293d4 to i8
  %v6_293d4 = load i1, i1* @cf, align 1
  %v7_293d4 = zext i1 %v6_293d4 to i8
  %v8_293d4 = add i8 %v3_293d4, %v5_293d4
  %v9_293d4 = add i8 %v8_293d4, %v7_293d4
  store i8 %v9_293d4, i8* %v2_293d4, align 1
  %v0_293da = load i32, i32* @ebp, align 4
  %v1_293da = add i32 %v0_293da, -32
  %v2_293da = inttoptr i32 %v1_293da to i32*
  %v3_293da = load i32, i32* %v2_293da, align 4
  %v1_293dd = add i32 %v0_293da, -16
  %v2_293dd = inttoptr i32 %v1_293dd to i32*
  %v3_293dd = load i32, i32* %v2_293dd, align 4
  %v2_293e0 = inttoptr i32 %v3_293da to i32*
  store i32 %v3_293dd, i32* %v2_293e0, align 4
  %v0_293e2 = load i32, i32* @ebp, align 4
  %v1_293e2 = add i32 %v0_293e2, -12
  %v2_293e2 = inttoptr i32 %v1_293e2 to i32*
  %v3_293e2 = load i32, i32* %v2_293e2, align 4
  %v3_293e5 = xor i32 %v3_293e2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_293e5 = icmp eq i32 %v3_293e5, 0
  store i1 %v4_293e5, i1* %zf.global-to-local, align 1
  store i32 %v3_293e5, i32* @eax, align 8
  br i1 %v4_293e5, label %bb3, label %dec_label_pc_293ee

bb3:                                              ; preds = %dec_label_pc_293d4
  %v1_293ec = call i32 @function_293f3()
  br label %dec_label_pc_293ee

dec_label_pc_293ee:                               ; preds = %bb3, %dec_label_pc_293d4
  %v2_293ec = phi i32 [ %v1_293ec, %bb3 ], [ %v3_293e5, %dec_label_pc_293d4 ]
  ret i32 %v2_293ec

; uselistorder directives
  uselistorder i32 %v1_293d2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_293d4, { 1, 0 }
}

define i32 @function_293f3() local_unnamed_addr {
dec_label_pc_293f3:
  %v0_293f4 = load i32, i32* @eax, align 8
  ret i32 %v0_293f4
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_293f6:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_2941c = add i32 %arg2, 8
  %v2_2941f = ptrtoint i32* %stack_var_-24 to i32
  %v3_29430 = call i32 @unknown_4535a(i32 %v2_2941f, i32 %v1_2941c, i32 %arg3)
  %v2_2943f = ptrtoint i32* %stack_var_-20 to i32
  %v2_29445 = call i32 @unknown_49176(i32 %v2_2943f, i32 %v2_2941f)
  ret i32 %v2_29445
}

define i32 @function_2944c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2944c:
  %v5_2944e = load i32, i32* @eax, align 8
  ret i32 %v5_2944e
}

define i32 @function_2946c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2946c:
  %v0_2946c = load i32, i32* @edx, align 8
  %v4_2946c = icmp eq i32 %v0_2946c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2946c, label %bb, label %dec_label_pc_2946c.dec_label_pc_29475_crit_edge

dec_label_pc_2946c.dec_label_pc_29475_crit_edge:  ; preds = %dec_label_pc_2946c
  %v2_29473.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_29475

bb:                                               ; preds = %dec_label_pc_2946c
  %v1_29473 = call i32 @function_2947a()
  br label %dec_label_pc_29475

dec_label_pc_29475:                               ; preds = %dec_label_pc_2946c.dec_label_pc_29475_crit_edge, %bb
  %v2_29473 = phi i32 [ %v2_29473.pre, %dec_label_pc_2946c.dec_label_pc_29475_crit_edge ], [ %v1_29473, %bb ]
  ret i32 %v2_29473

; uselistorder directives
  uselistorder label %dec_label_pc_29475, { 1, 0 }
}

define i32 @function_2947a() local_unnamed_addr {
dec_label_pc_2947a:
  %v0_2947b = load i32, i32* @eax, align 8
  ret i32 %v0_2947b
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEEixERSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2947e:
  ret i32 0
}

define i32 @function_2949e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2949e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2949e = load i32, i32* @eax, align 8
  %v1_2949e = trunc i32 %v0_2949e to i8
  %not. = icmp ugt i8 %v1_2949e, -118
  %v3_2949e = urem i8 %v1_2949e, -117
  %v4_2949e = zext i8 %v3_2949e to i32
  %v6_2949e = and i32 %v0_2949e, -65536
  %v10_2949e = select i1 %not., i32 256, i32 0
  %v11_2949e = or i32 %v4_2949e, %v6_2949e
  %v12_2949e = or i32 %v11_2949e, %v10_2949e
  store i32 %v12_2949e, i32* %eax.global-to-local, align 8
  %v7_294a1 = load i32, i32* @ecx, align 4
  %v8_294a1 = add i32 %v7_294a1, -1962400684
  %v9_294a1 = inttoptr i32 %v8_294a1 to i8*
  store i8 -1, i8* %v9_294a1, align 1
  %v0_294ae = load i32, i32* %eax.global-to-local, align 8
  %v2_294ae = add i32 %v0_294ae, 36
  %v16_294ae = and i32 %v2_294ae, 255
  %v18_294ae = and i32 %v0_294ae, -256
  %v19_294ae = or i32 %v16_294ae, %v18_294ae
  store i32 %v19_294ae, i32* %eax.global-to-local, align 8
  %v0_294b0 = call i32 @unknown_456a6()
  %v0_294b8 = load i32, i32* @ebp, align 4
  %v1_294b8 = add i32 %v0_294b8, -40
  store i32 %v1_294b8, i32* %eax.global-to-local, align 8
  %v1_294bb = add i32 %v0_294b8, -60
  %v2_294bb = inttoptr i32 %v1_294bb to i32*
  %v3_294bb = load i32, i32* %v2_294bb, align 4
  %v2_294c5 = call i32 @unknown_45398(i32 %v1_294b8, i32 %v3_294bb)
  %v0_294cd = load i32, i32* @ebp, align 4
  %v1_294cd = add i32 %v0_294cd, -40
  %v1_294d4 = add i32 %v0_294cd, -44
  store i32 %v1_294d4, i32* %eax.global-to-local, align 8
  %v2_294da = call i32 @unknown_494b6(i32 %v1_294d4, i32 %v1_294cd)
  store i32 %v2_294da, i32* %eax.global-to-local, align 8
  %v4_294df = trunc i32 %v2_294da to i8
  %v5_294df = icmp eq i8 %v4_294df, 0
  %v1_294e1 = icmp eq i1 %v5_294df, false
  br i1 %v1_294e1, label %dec_label_pc_2952b, label %dec_label_pc_294e3

dec_label_pc_294e3:                               ; preds = %dec_label_pc_2949e
  %v0_294e3 = load i32, i32* @ebp, align 4
  %v1_294e3 = add i32 %v0_294e3, -44
  store i32 %v1_294e3, i32* %eax.global-to-local, align 8
  %v1_294e9 = call i32 @unknown_56e5c(i32 %v1_294e3)
  store i32 %v1_294e9, i32* %ebx.global-to-local, align 8
  %v0_294f0 = load i32, i32* @ebp, align 4
  %v1_294f0 = add i32 %v0_294f0, -65
  store i32 %v1_294f0, i32* %eax.global-to-local, align 8
  %v1_294f3 = add i32 %v0_294f0, -60
  %v2_294f3 = inttoptr i32 %v1_294f3 to i32*
  %v3_294f3 = load i32, i32* %v2_294f3, align 4
  %v2_294fd = call i32 @unknown_56e12(i32 %v1_294f0, i32 %v3_294f3)
  store i32 %v2_294fd, i32* %eax.global-to-local, align 8
  %v0_29505 = load i32, i32* %ebx.global-to-local, align 8
  %v0_29509 = load i32, i32* @ebp, align 4
  %v1_29509 = add i32 %v0_29509, -64
  %v2_29509 = inttoptr i32 %v1_29509 to i32*
  %v3_29509 = load i32, i32* %v2_29509, align 4
  %v1_29510 = add i32 %v0_29509, -29
  store i32 %v1_29510, i32* %eax.global-to-local, align 8
  %v3_29516 = call i32 @unknown_4abbe(i32 %v1_29510, i32 %v3_29509, i32 %v0_29505)
  store i32 %v3_29516, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2952b

dec_label_pc_2952b:                               ; preds = %dec_label_pc_294e3, %dec_label_pc_2949e
  %v0_2952f = load i32, i32* @ebp, align 4
  %v1_2952f = add i32 %v0_2952f, -36
  store i32 %v1_2952f, i32* %eax.global-to-local, align 8
  %v1_29532 = load i32, i32* @esp, align 4
  %v2_29532 = inttoptr i32 %v1_29532 to i32*
  store i32 %v1_2952f, i32* %v2_29532, align 4
  %v0_29535 = call i32 @unknown_4d2ea()
  %v0_2953a = load i32, i32* @ebp, align 4
  %v1_2953a = add i32 %v0_2953a, -36
  store i32 %v1_2953a, i32* %eax.global-to-local, align 8
  ret i32 %v1_2953a

; uselistorder directives
  uselistorder i32 %v0_294ae, { 1, 0 }
  uselistorder i8 %v1_2949e, { 1, 0 }
  uselistorder i32 -65536, { 1, 2, 3, 4, 0 }
}

define i32 @function_2953e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2953e:
  %v0_29541 = load i32, i32* @ebp, align 4
  %v1_29541 = add i32 %v0_29541, -64
  %v2_29541 = inttoptr i32 %v1_29541 to i32*
  %v3_29541 = load i32, i32* %v2_29541, align 4
  %v1_29548 = add i32 %v0_29541, -28
  %v2_2954e = call i32 @unknown_494f6(i32 %v1_29548, i32 %v3_29541)
  %v0_29553 = load i32, i32* @ebp, align 4
  %v1_29553 = add i32 %v0_29553, -72
  %v1_29556 = add i32 %v0_29553, -28
  %v1_2955d = add i32 %v0_29553, -44
  %v2_2955d = inttoptr i32 %v1_2955d to i32*
  %v3_2955d = load i32, i32* %v2_2955d, align 4
  %v1_29564 = add i32 %v0_29553, -60
  %v2_29564 = inttoptr i32 %v1_29564 to i32*
  %v3_29564 = load i32, i32* %v2_29564, align 4
  %v4_2956e = call i32 @unknown_56e8e(i32 %v1_29553, i32 %v3_29564, i32 %v3_2955d, i32 %v1_29556)
  %v0_29576 = load i32, i32* @ebp, align 4
  %v1_29576 = add i32 %v0_29576, -72
  %v2_29576 = inttoptr i32 %v1_29576 to i32*
  %v3_29576 = load i32, i32* %v2_29576, align 4
  %v2_29579 = add i32 %v0_29576, -44
  %v3_29579 = inttoptr i32 %v2_29579 to i32*
  store i32 %v3_29576, i32* %v3_29579, align 4
  %v0_2957c = load i32, i32* @ebp, align 4
  %v1_2957c = add i32 %v0_2957c, -28
  ret i32 %v1_2957c
}

define i32 @function_29586(i16 %arg1) local_unnamed_addr {
dec_label_pc_29586:
  %v0_29586 = load i32, i32* @ebp, align 4
  %v1_29586 = add i32 %v0_29586, 76141637
  %v2_29586 = inttoptr i32 %v1_29586 to i8*
  %v3_29586 = load i8, i8* %v2_29586, align 1
  %v4_29586 = load i32, i32* @ecx, align 4
  %v5_29586 = trunc i32 %v4_29586 to i8
  %v6_29586 = add i8 %v5_29586, %v3_29586
  store i8 %v6_29586, i8* %v2_29586, align 1
  %v0_2958c = load i32, i32* @eax, align 8
  %v11_2958c = and i32 %v0_2958c, -24
  ret i32 %v11_2958c
}

define i32 @function_29591() local_unnamed_addr {
dec_label_pc_29591:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_29591 = load i32, i32* %ebx.global-to-local, align 8
  %v1_29591 = add i32 %v0_29591, 1435176128
  %v2_29591 = inttoptr i32 %v1_29591 to i8*
  %v3_29591 = load i8, i8* %v2_29591, align 1
  %v4_29591 = load i32, i32* @eax, align 8
  %v5_29591 = trunc i32 %v4_29591 to i8
  %v6_29591 = add i8 %v5_29591, %v3_29591
  store i8 %v6_29591, i8* %v2_29591, align 1
  %v0_29598 = load i32, i32* %edx.global-to-local, align 8
  %v3_29598 = xor i32 %v0_29598, ptrtoint ([3 x i8]* @3 to i32)
  %v4_29598 = icmp eq i32 %v3_29598, 0
  store i32 %v3_29598, i32* %edx.global-to-local, align 8
  br i1 %v4_29598, label %bb, label %dec_label_pc_295a1

bb:                                               ; preds = %dec_label_pc_29591
  %v1_2959f = call i32 @function_295bf()
  store i32 %v1_2959f, i32* @eax, align 8
  br label %dec_label_pc_295a1

dec_label_pc_295a1:                               ; preds = %bb, %dec_label_pc_29591
  %v0_295a1 = call i32 @function_295ba()
  ret i32 %v0_295a1
}

define i32 @function_295a4() local_unnamed_addr {
dec_label_pc_295a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_295a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_295a4
}

define i32 @function_295ba() local_unnamed_addr {
dec_label_pc_295ba:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @__stack_chk_fail.822(i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @function_295bf() local_unnamed_addr {
dec_label_pc_295bf:
  %v0_295c3 = load i32, i32* @eax, align 8
  ret i32 %v0_295c3
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE5eraseESt14_List_iteratorISH_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_295c4:
  ret i32 %arg2
}

define i32 @function_295d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_295d4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_295d4 = load i32, i32* @ebp, align 4
  %v0_295d5 = load i32, i32* @ecx, align 4
  %v1_295d5 = add i32 %v0_295d5, -1
  store i32 %v1_295d5, i32* @ecx, align 4
  %v1_295d7 = add i32 %v0_295d4, 2
  store i32 %v1_295d7, i32* @ebp, align 4
  %v1_295d8 = add i32 %v0_295d5, -1587159996
  %v2_295d8 = inttoptr i32 %v1_295d8 to i8*
  %v3_295d8 = load i8, i8* %v2_295d8, align 1
  %v5_295d8 = trunc i32 %v1_295d5 to i8
  %v6_295d8 = load i1, i1* @cf, align 1
  %v7_295d8 = zext i1 %v6_295d8 to i8
  %v8_295d8 = add i8 %v3_295d8, %v5_295d8
  %v9_295d8 = add i8 %v7_295d8, %v8_295d8
  %v27_295d8 = icmp ule i8 %v9_295d8, %v3_295d8
  %v28_295d8 = icmp ult i8 %v8_295d8, %v3_295d8
  %v29_295d8 = select i1 %v6_295d8, i1 %v27_295d8, i1 %v28_295d8
  store i1 %v29_295d8, i1* %cf.global-to-local, align 1
  store i8 %v9_295d8, i8* %v2_295d8, align 1
  %v0_295de = load i32, i32* @eax, align 8
  %v1_295de = trunc i32 %v0_295de to i8
  %v2_295de = load i1, i1* %cf.global-to-local, align 1
  %v3_295de = zext i1 %v2_295de to i8
  %v4_295de = add i8 %v3_295de, %v1_295de
  %v19_295de = icmp ule i8 %v4_295de, %v1_295de
  %v21_295de = icmp eq i1 %v2_295de, %v19_295de
  store i1 %v21_295de, i1* %cf.global-to-local, align 1
  %v22_295de = zext i8 %v4_295de to i32
  %v24_295de = and i32 %v0_295de, -256
  %v25_295de = or i32 %v22_295de, %v24_295de
  store i32 %v25_295de, i32* %eax.global-to-local, align 8
  %v1_295e0 = inttoptr i32 %v25_295de to i8*
  %v2_295e0 = load i8, i8* %v1_295e0, align 1
  %v5_295e0 = add i8 %v2_295e0, %v4_295de
  store i8 %v5_295e0, i8* %v1_295e0, align 1
  %v0_295e2 = load i32, i32* %eax.global-to-local, align 8
  %v1_295e2 = load i32, i32* @ebp, align 4
  %v2_295e2 = add i32 %v1_295e2, -12
  %v3_295e2 = inttoptr i32 %v2_295e2 to i32*
  store i32 %v0_295e2, i32* %v3_295e2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_295e7 = load i32, i32* @ebp, align 4
  %v1_295e7 = add i32 %v0_295e7, -36
  %v2_295e7 = inttoptr i32 %v1_295e7 to i32*
  %v3_295e7 = load i32, i32* %v2_295e7, align 4
  store i32 %v3_295e7, i32* %eax.global-to-local, align 8
  %v1_295ea = inttoptr i32 %v3_295e7 to i32*
  %v2_295ea = load i32, i32* %v1_295ea, align 4
  store i32 %v2_295ea, i32* %eax.global-to-local, align 8
  %v1_295f0 = add i32 %v0_295e7, -28
  %v2_295f0 = inttoptr i32 %v1_295f0 to i32*
  %v3_295f0 = load i32, i32* %v2_295f0, align 4
  store i32 %v3_295f0, i32* %eax.global-to-local, align 8
  %v2_295f6 = call i32 @unknown_4dc7e(i32 %v3_295f0, i32 %v2_295ea)
  store i32 %v2_295f6, i32* %eax.global-to-local, align 8
  %v0_295fb = load i32, i32* @ebp, align 4
  %v1_295fb = add i32 %v0_295fb, -36
  %v2_295fb = inttoptr i32 %v1_295fb to i32*
  %v3_295fb = load i32, i32* %v2_295fb, align 4
  store i32 %v3_295fb, i32* %eax.global-to-local, align 8
  ret i32 %v3_295fb

; uselistorder directives
  uselistorder i8 %v4_295de, { 0, 2, 1 }
  uselistorder i8 %v1_295de, { 1, 0 }
  uselistorder i8 %v9_295d8, { 1, 0 }
  uselistorder i8 %v8_295d8, { 1, 0 }
  uselistorder i8 %v3_295d8, { 1, 2, 0 }
}

define i32 @function_29604(i32 %arg1) local_unnamed_addr {
dec_label_pc_29604:
  %v0_29604 = load i32, i32* @ecx, align 4
  %v1_29604 = add i32 %v0_29604, -1
  store i32 %v1_29604, i32* @ecx, align 4
  %v0_29608 = call i32 @unknown_5704a()
  %v0_2960d = load i32, i32* @ebp, align 4
  %v1_2960d = add i32 %v0_2960d, -28
  %v2_2960d = inttoptr i32 %v1_2960d to i32*
  %v3_2960d = load i32, i32* %v2_2960d, align 4
  store i32 %v3_2960d, i32* @eax, align 8
  %v1_29610 = add i32 %v0_2960d, -12
  %v2_29610 = inttoptr i32 %v1_29610 to i32*
  %v3_29610 = load i32, i32* %v2_29610, align 4
  %v4_29613 = icmp eq i32 %v3_29610, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29613, label %bb, label %dec_label_pc_2961c

bb:                                               ; preds = %dec_label_pc_29604
  %v1_2961a = call i32 @function_29621()
  br label %dec_label_pc_2961c

dec_label_pc_2961c:                               ; preds = %bb, %dec_label_pc_29604
  %v3_2961a = phi i32 [ %v1_2961a, %bb ], [ %v3_2960d, %dec_label_pc_29604 ]
  ret i32 %v3_2961a
}

define i32 @function_29621() local_unnamed_addr {
dec_label_pc_29621:
  %v0_29622 = load i32, i32* @eax, align 8
  ret i32 %v0_29622
}

define i32 @_ZN5boost9function1IbxE13assign_to_ownERKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29626:
  ret i32 %arg1
}

define i32 @function_29634(i32 %arg1) local_unnamed_addr {
dec_label_pc_29634:
  %v0_29636 = load i32, i32* @ebp, align 4
  %v1_29636 = add i32 %v0_29636, 1
  store i32 %v1_29636, i32* @ebp, align 4
  %v0_29637 = load i32, i32* @ecx, align 4
  %v1_29637 = add i32 %v0_29637, -1
  store i32 %v1_29637, i32* @ecx, align 4
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2963e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2963e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2963e = load i32, i32* @eax, align 8
  %v1_2963e = load i32, i32* @ebp, align 4
  %v2_2963e = add i32 %v1_2963e, -12
  %v3_2963e = inttoptr i32 %v2_2963e to i32*
  store i32 %v0_2963e, i32* %v3_2963e, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_29643 = load i32, i32* @ebp, align 4
  %v1_29643 = add i32 %v0_29643, -32
  %v2_29643 = inttoptr i32 %v1_29643 to i32*
  %v3_29643 = load i32, i32* %v2_29643, align 4
  store i32 %v3_29643, i32* %eax.global-to-local, align 8
  %v1_29649 = call i32 @unknown_377c6(i32 %v3_29643)
  %v1_2964e = xor i32 %v1_29649, 1
  %v4_2964e = trunc i32 %v1_2964e to i8
  store i32 %v1_2964e, i32* %eax.global-to-local, align 8
  %v5_29651 = icmp eq i8 %v4_2964e, 0
  br i1 %v5_29651, label %dec_label_pc_296b2, label %dec_label_pc_29655

dec_label_pc_29655:                               ; preds = %dec_label_pc_2963e
  %v0_29655 = load i32, i32* @ebp, align 4
  %v1_29655 = add i32 %v0_29655, -32
  %v2_29655 = inttoptr i32 %v1_29655 to i32*
  %v3_29655 = load i32, i32* %v2_29655, align 4
  store i32 %v3_29655, i32* %eax.global-to-local, align 8
  %v1_29658 = inttoptr i32 %v3_29655 to i32*
  %v2_29658 = load i32, i32* %v1_29658, align 4
  store i32 %v2_29658, i32* %edx.global-to-local, align 8
  %v1_2965a = add i32 %v0_29655, -28
  %v2_2965a = inttoptr i32 %v1_2965a to i32*
  %v3_2965a = load i32, i32* %v2_2965a, align 4
  store i32 %v3_2965a, i32* %eax.global-to-local, align 8
  %v2_2965d = inttoptr i32 %v3_2965a to i32*
  store i32 %v2_29658, i32* %v2_2965d, align 4
  %v0_2965f = load i32, i32* @ebp, align 4
  %v1_2965f = add i32 %v0_2965f, -28
  %v2_2965f = inttoptr i32 %v1_2965f to i32*
  %v3_2965f = load i32, i32* %v2_2965f, align 4
  store i32 %v3_2965f, i32* %eax.global-to-local, align 8
  %v1_29665 = call i32 @unknown_377fa(i32 %v3_2965f)
  store i32 %v1_29665, i32* %eax.global-to-local, align 8
  %v4_2966a = trunc i32 %v1_29665 to i8
  %v5_2966a = icmp eq i8 %v4_2966a, 0
  %v0_29688 = load i32, i32* @ebp, align 4
  %v1_29688 = add i32 %v0_29688, -28
  %v2_29688 = inttoptr i32 %v1_29688 to i32*
  %v3_29688 = load i32, i32* %v2_29688, align 4
  store i32 %v3_29688, i32* %eax.global-to-local, align 8
  br i1 %v5_2966a, label %dec_label_pc_29688, label %dec_label_pc_2966e

dec_label_pc_2966e:                               ; preds = %dec_label_pc_29655
  %v1_29671 = add i32 %v0_29688, -32
  %v2_29671 = inttoptr i32 %v1_29671 to i32*
  %v3_29671 = load i32, i32* %v2_29671, align 4
  store i32 %v3_29671, i32* %edx.global-to-local, align 8
  %v1_29674 = add i32 %v3_29671, 4
  %v2_29674 = inttoptr i32 %v1_29674 to i32*
  %v3_29674 = load i32, i32* %v2_29674, align 4
  %v2_29677 = add i32 %v3_29688, 4
  %v3_29677 = inttoptr i32 %v2_29677 to i32*
  store i32 %v3_29674, i32* %v3_29677, align 4
  %v0_2967a = load i32, i32* %edx.global-to-local, align 8
  %v1_2967a = add i32 %v0_2967a, 8
  %v2_2967a = inttoptr i32 %v1_2967a to i32*
  %v3_2967a = load i32, i32* %v2_2967a, align 4
  %v1_2967d = load i32, i32* %eax.global-to-local, align 8
  %v2_2967d = add i32 %v1_2967d, 8
  %v3_2967d = inttoptr i32 %v2_2967d to i32*
  store i32 %v3_2967a, i32* %v3_2967d, align 4
  %v0_29680 = load i32, i32* %edx.global-to-local, align 8
  %v1_29680 = add i32 %v0_29680, 12
  %v2_29680 = inttoptr i32 %v1_29680 to i32*
  %v3_29680 = load i32, i32* %v2_29680, align 4
  store i32 %v3_29680, i32* %edx.global-to-local, align 8
  %v1_29683 = load i32, i32* %eax.global-to-local, align 8
  %v2_29683 = add i32 %v1_29683, 12
  %v3_29683 = inttoptr i32 %v2_29683 to i32*
  store i32 %v3_29680, i32* %v3_29683, align 4
  br label %dec_label_pc_296b2

dec_label_pc_29688:                               ; preds = %dec_label_pc_29655
  %v1_2968e = call i32 @unknown_3eabc(i32 %v3_29688)
  store i32 %v1_2968e, i32* %eax.global-to-local, align 8
  %v1_29693 = inttoptr i32 %v1_2968e to i32*
  %v2_29693 = load i32, i32* %v1_29693, align 4
  store i32 %v2_29693, i32* %eax.global-to-local, align 8
  %v0_29695 = load i32, i32* @ebp, align 4
  %v1_29695 = add i32 %v0_29695, -28
  %v2_29695 = inttoptr i32 %v1_29695 to i32*
  %v3_29695 = load i32, i32* %v2_29695, align 4
  store i32 %v3_29695, i32* %edx.global-to-local, align 8
  %v1_2969b = add i32 %v0_29695, -32
  %v2_2969b = inttoptr i32 %v1_2969b to i32*
  %v3_2969b = load i32, i32* %v2_2969b, align 4
  %v1_2969e = add i32 %v3_2969b, 4
  store i32 %v1_2969e, i32* %edx.global-to-local, align 8
  br label %dec_label_pc_296b2

dec_label_pc_296b2:                               ; preds = %dec_label_pc_29688, %dec_label_pc_2966e, %dec_label_pc_2963e
  %v0_296b2 = load i32, i32* @ebp, align 4
  %v1_296b2 = add i32 %v0_296b2, -12
  %v2_296b2 = inttoptr i32 %v1_296b2 to i32*
  %v3_296b2 = load i32, i32* %v2_296b2, align 4
  %v3_296b5 = xor i32 %v3_296b2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_296b5 = icmp eq i32 %v3_296b5, 0
  store i32 %v3_296b5, i32* @eax, align 8
  br i1 %v4_296b5, label %bb, label %dec_label_pc_296be

bb:                                               ; preds = %dec_label_pc_296b2
  %v1_296bc = call i32 @function_296c3()
  store i32 %v1_296bc, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_296be

dec_label_pc_296be:                               ; preds = %bb, %dec_label_pc_296b2
  %v2_296bc = phi i32 [ %v1_296bc, %bb ], [ %v3_296b5, %dec_label_pc_296b2 ]
  ret i32 %v2_296bc

; uselistorder directives
  uselistorder i32 %v3_29688, { 1, 0, 2 }
}

define i32 @function_296c3() local_unnamed_addr {
dec_label_pc_296c3:
  %v0_296c4 = load i32, i32* @eax, align 8
  ret i32 %v0_296c4
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_296c6:
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_339dc_type* @global_var_339dc.1998 to i32), i32* %arg1, align 4
  %v1_296ea = add i32 %tmp3, 68
  %v1_296f0 = call i32 @unknown_3e81e(i32 %v1_296ea)
  %v1_296f8 = add i32 %tmp3, 44
  %v1_296fe = call i32 @unknown_3879a(i32 %v1_296f8)
  %v1_29706 = add i32 %tmp3, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2970c = call i32 @unknown_394a8(i32 %v1_29706)
  %v1_29717 = call i32 @unknown_3839c(i32 %tmp3)
  %v1_29726 = call i32 @function_2976c()
  ret i32 %tmp3

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED1Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_339dc_type* @global_var_339dc.1998 to i32), { 1, 0 }
}

define i32 @function_29733() local_unnamed_addr {
dec_label_pc_29733:
  %v0_29733 = call i32 @function_2976c()
  ret i32 %v0_29733

; uselistorder directives
  uselistorder i32 ()* @function_2976c, { 1, 0 }
}

define i32 @function_29735() local_unnamed_addr {
dec_label_pc_29735:
  %eax.global-to-local = alloca i32, align 4
  %v0_29735 = load i32, i32* %eax.global-to-local, align 8
  store i32 %v0_29735, i32* @ebx, align 8
  %v0_29737 = load i32, i32* @ebp, align 4
  %v1_29737 = add i32 %v0_29737, -28
  %v2_29737 = inttoptr i32 %v1_29737 to i32*
  %v3_29737 = load i32, i32* %v2_29737, align 4
  %v1_2973a = add i32 %v3_29737, 44
  store i32 %v1_2973a, i32* %eax.global-to-local, align 8
  %v1_29740 = call i32 @unknown_3879a(i32 %v1_2973a)
  store i32 %v1_29740, i32* %eax.global-to-local, align 8
  %v0_29745 = load i32, i32* @ebp, align 4
  %v1_29745 = add i32 %v0_29745, -28
  %v2_29745 = inttoptr i32 %v1_29745 to i32*
  %v3_29745 = load i32, i32* %v2_29745, align 4
  %v1_29748 = add i32 %v3_29745, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_29748, i32* %eax.global-to-local, align 8
  %v1_2974e = call i32 @unknown_394a8(i32 %v1_29748)
  store i32 %v1_2974e, i32* %eax.global-to-local, align 8
  %v0_29753 = call i32 @function_29757()
  store i32 %v0_29753, i32* %eax.global-to-local, align 8
  ret i32 %v0_29753

; uselistorder directives
  uselistorder i32 (i32)* @unknown_394a8, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3879a, { 1, 0 }
}

define i32 @function_29755() local_unnamed_addr {
dec_label_pc_29755:
  %eax.global-to-local = alloca i32, align 4
  %v0_29755 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29755
}

define i32 @function_29757() local_unnamed_addr {
dec_label_pc_29757:
  %v0_29757 = load i32, i32* @ebp, align 4
  %v1_29757 = add i32 %v0_29757, -28
  %v2_29757 = inttoptr i32 %v1_29757 to i32*
  %v3_29757 = load i32, i32* %v2_29757, align 4
  %v1_2975d = call i32 @unknown_3839c(i32 %v3_29757)
  %v0_29762 = load i32, i32* @ebx, align 8
  ret i32 %v0_29762

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3839c, { 1, 0 }
}

define i32 @function_2976c() local_unnamed_addr {
dec_label_pc_2976c:
  %v0_2976c = load i32, i32* @ebp, align 4
  %v1_2976c = add i32 %v0_2976c, -12
  %v2_2976c = inttoptr i32 %v1_2976c to i32*
  %v3_2976c = load i32, i32* %v2_2976c, align 4
  %v3_2976f = xor i32 %v3_2976c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2976f = icmp eq i32 %v3_2976f, 0
  store i32 %v3_2976f, i32* @eax, align 8
  br i1 %v4_2976f, label %bb, label %dec_label_pc_29778

bb:                                               ; preds = %dec_label_pc_2976c
  %v1_29776 = call i32 @function_2977d()
  br label %dec_label_pc_29778

dec_label_pc_29778:                               ; preds = %bb, %dec_label_pc_2976c
  %v2_29776 = phi i32 [ %v1_29776, %bb ], [ %v3_2976f, %dec_label_pc_2976c ]
  ret i32 %v2_29776
}

define i32 @function_2977d() local_unnamed_addr {
dec_label_pc_2977d:
  %v0_29782 = load i32, i32* @eax, align 8
  ret i32 %v0_29782
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEED0Ev() {
dec_label_pc_29784:
  %eax.global-to-local = alloca i32, align 4
  %v17_29787 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_29787
}

define i32 @function_2978a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2978a:
  %v0_2978a = load i32, i32* @ebp, align 4
  %v1_2978a = add i32 %v0_2978a, 8
  %v2_2978a = inttoptr i32 %v1_2978a to i32*
  %v3_2978a = load i32, i32* %v2_2978a, align 4
  %v2_2978d = add i32 %v0_2978a, -28
  %v3_2978d = inttoptr i32 %v2_2978d to i32*
  store i32 %v3_2978a, i32* %v3_2978d, align 4
  %v1_29796 = load i32, i32* @ebp, align 4
  %v2_29796 = add i32 %v1_29796, -12
  %v3_29796 = inttoptr i32 %v2_29796 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_29796, align 4
  %v0_2979b = load i32, i32* @ebp, align 4
  %v1_2979b = add i32 %v0_2979b, -28
  %v2_2979b = inttoptr i32 %v1_2979b to i32*
  %v3_2979b = load i32, i32* %v2_2979b, align 4
  %v1_297a1 = call i32 @unknown_52e4a(i32 %v3_2979b)
  %v0_297a6 = load i32, i32* @ebp, align 4
  %v1_297a6 = add i32 %v0_297a6, -28
  %v2_297a6 = inttoptr i32 %v1_297a6 to i32*
  %v3_297a6 = load i32, i32* %v2_297a6, align 4
  ret i32 %v3_297a6
}

define i32 @function_297c1() local_unnamed_addr {
dec_label_pc_297c1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_297c1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_297c1 = add i32 %v0_297c1, -1
  store i32 %v1_297c1, i32* %ecx.global-to-local, align 4
  %v0_297c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_297c3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE6_S_keyEPKSt13_Rb_tree_nodeISL_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_297c4:
  ret i32 %arg1
}

define i32 @function_297d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_297d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_297d2 = load i32, i32* @eax, align 8
  %v1_297d2 = trunc i32 %v0_297d2 to i8
  %v2_297d2 = load i1, i1* @cf, align 1
  %v3_297d2 = zext i1 %v2_297d2 to i8
  %v4_297d2 = add i8 %v3_297d2, %v1_297d2
  %v22_297d2 = zext i8 %v4_297d2 to i32
  %v24_297d2 = and i32 %v0_297d2, -256
  %v25_297d2 = or i32 %v22_297d2, %v24_297d2
  store i32 %v25_297d2, i32* %eax.global-to-local, align 8
  %v1_297d4 = inttoptr i32 %v25_297d2 to i8*
  %v2_297d4 = load i8, i8* %v1_297d4, align 1
  %v5_297d4 = add i8 %v2_297d4, %v4_297d2
  store i8 %v5_297d4, i8* %v1_297d4, align 1
  %v0_297d6 = load i32, i32* %eax.global-to-local, align 8
  %v1_297d6 = load i32, i32* @ebp, align 4
  %v2_297d6 = add i32 %v1_297d6, -12
  %v3_297d6 = inttoptr i32 %v2_297d6 to i32*
  store i32 %v0_297d6, i32* %v3_297d6, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_297db = load i32, i32* @ebp, align 4
  %v1_297db = add i32 %v0_297db, -28
  %v2_297db = inttoptr i32 %v1_297db to i32*
  %v3_297db = load i32, i32* %v2_297db, align 4
  store i32 %v3_297db, i32* %eax.global-to-local, align 8
  %v1_297e1 = call i32 @unknown_572f9(i32 %v3_297db)
  %v0_297ea = load i32, i32* @ebp, align 4
  %v1_297ea = add i32 %v0_297ea, -13
  store i32 %v1_297ea, i32* %eax.global-to-local, align 8
  %v2_297f0 = call i32 @unknown_53262(i32 %v1_297ea, i32 %v1_297e1)
  store i32 %v2_297f0, i32* @eax, align 8
  %v0_297f5 = load i32, i32* @ebp, align 4
  %v1_297f5 = add i32 %v0_297f5, -12
  %v2_297f5 = inttoptr i32 %v1_297f5 to i32*
  %v3_297f5 = load i32, i32* %v2_297f5, align 4
  %v4_297f8 = icmp eq i32 %v3_297f5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_297f8, label %bb, label %dec_label_pc_29801

bb:                                               ; preds = %dec_label_pc_297d2
  %v1_297ff = call i32 @function_29806()
  store i32 %v1_297ff, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_29801

dec_label_pc_29801:                               ; preds = %bb, %dec_label_pc_297d2
  %v2_297ff = phi i32 [ %v1_297ff, %bb ], [ %v2_297f0, %dec_label_pc_297d2 ]
  ret i32 %v2_297ff
}

define i32 @function_29806() local_unnamed_addr {
dec_label_pc_29806:
  %v0_29807 = load i32, i32* @eax, align 8
  ret i32 %v0_29807
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_29808:
  %v1_29822 = add i32 %arg1, 8
  %v2_29822 = inttoptr i32 %v1_29822 to i32*
  %v3_29822 = load i32, i32* %v2_29822, align 4
  store i32 %v3_29822, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29831

bb:                                               ; preds = %dec_label_pc_29808
  %v2_2982f = call i32 @function_29836(i32 %arg1)
  br label %dec_label_pc_29831

dec_label_pc_29831:                               ; preds = %bb, %dec_label_pc_29808
  %v3_2982f = phi i32 [ %v2_2982f, %bb ], [ %v3_29822, %dec_label_pc_29808 ]
  ret i32 %v3_2982f
}

define i32 @function_29836(i32 %arg1) local_unnamed_addr {
dec_label_pc_29836:
  %v0_29837 = load i32, i32* @eax, align 8
  ret i32 %v0_29837
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_29838:
  ret i32 %arg1
}

define i32 @function_29844(i32 %arg1) local_unnamed_addr {
dec_label_pc_29844:
  %v1_2984a = load i32, i32* @ebp, align 4
  %v2_2984a = add i32 %v1_2984a, -12
  %v3_2984a = inttoptr i32 %v2_2984a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2984a, align 4
  %v0_2984f = load i32, i32* @ebp, align 4
  %v1_2984f = add i32 %v0_2984f, -28
  %v2_2984f = inttoptr i32 %v1_2984f to i32*
  %v3_2984f = load i32, i32* %v2_2984f, align 4
  %v1_29852 = add i32 %v3_2984f, 12
  %v2_29852 = inttoptr i32 %v1_29852 to i32*
  %v3_29852 = load i32, i32* %v2_29852, align 4
  store i32 %v3_29852, i32* @eax, align 8
  %v1_29855 = add i32 %v0_2984f, -12
  %v2_29855 = inttoptr i32 %v1_29855 to i32*
  %v3_29855 = load i32, i32* %v2_29855, align 4
  %v4_29858 = icmp eq i32 %v3_29855, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29858, label %bb, label %dec_label_pc_29861

bb:                                               ; preds = %dec_label_pc_29844
  %v1_2985f = call i32 @function_29866()
  br label %dec_label_pc_29861

dec_label_pc_29861:                               ; preds = %bb, %dec_label_pc_29844
  %v2_2985f = phi i32 [ %v1_2985f, %bb ], [ %v3_29852, %dec_label_pc_29844 ]
  ret i32 %v2_2985f
}

define i32 @function_29866() local_unnamed_addr {
dec_label_pc_29866:
  %v0_29867 = load i32, i32* @eax, align 8
  ret i32 %v0_29867
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEPT_RSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29868:
  ret i32 %arg1
}

define i32 @function_29882(i32 %arg1) local_unnamed_addr {
dec_label_pc_29882:
  %v0_29882 = load i32, i32* @ebp, align 4
  %v1_29882 = add i32 %v0_29882, -12
  %v2_29882 = inttoptr i32 %v1_29882 to i32*
  %v3_29882 = load i32, i32* %v2_29882, align 4
  %v4_29885 = icmp eq i32 %v3_29882, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29885, label %bb, label %dec_label_pc_29882.dec_label_pc_2988e_crit_edge

dec_label_pc_29882.dec_label_pc_2988e_crit_edge:  ; preds = %dec_label_pc_29882
  %v3_2988c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2988e

bb:                                               ; preds = %dec_label_pc_29882
  %v1_2988c = call i32 @function_29893()
  br label %dec_label_pc_2988e

dec_label_pc_2988e:                               ; preds = %dec_label_pc_29882.dec_label_pc_2988e_crit_edge, %bb
  %v3_2988c = phi i32 [ %v3_2988c.pre, %dec_label_pc_29882.dec_label_pc_2988e_crit_edge ], [ %v1_2988c, %bb ]
  ret i32 %v3_2988c

; uselistorder directives
  uselistorder label %dec_label_pc_2988e, { 1, 0 }
}

define i32 @function_29893() local_unnamed_addr {
dec_label_pc_29893:
  %v0_29894 = load i32, i32* @eax, align 8
  ret i32 %v0_29894
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29896:
  ret i32 %arg1
}

define i32 @function_298be(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_298be:
  %v2_298be = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_298be = load i32, i32* @eax, align 8
  %v4_298be = trunc i32 %v3_298be to i8
  %v5_298be = add i8 %v4_298be, %v2_298be
  %v21_298be = inttoptr i32 %v3_298be to i8*
  store i8 %v5_298be, i8* %v21_298be, align 1
  %v0_298c0 = load i32, i32* @eax, align 8
  %v1_298c3 = call i32 @unknown_573fc(i32 %v0_298c0)
  store i32 %v1_298c3, i32* @eax, align 8
  %v0_298c8 = load i32, i32* @ebp, align 4
  %v1_298c8 = add i32 %v0_298c8, -12
  %v2_298c8 = inttoptr i32 %v1_298c8 to i32*
  %v3_298c8 = load i32, i32* %v2_298c8, align 4
  %v4_298cb = icmp eq i32 %v3_298c8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_298cb, label %bb, label %dec_label_pc_298d4

bb:                                               ; preds = %dec_label_pc_298be
  %v1_298d2 = call i32 @function_298d9()
  br label %dec_label_pc_298d4

dec_label_pc_298d4:                               ; preds = %bb, %dec_label_pc_298be
  %v2_298d2 = phi i32 [ %v1_298d2, %bb ], [ %v1_298c3, %dec_label_pc_298be ]
  ret i32 %v2_298d2
}

define i32 @function_298d9() local_unnamed_addr {
dec_label_pc_298d9:
  %v0_298da = load i32, i32* @eax, align 8
  ret i32 %v0_298da
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_298dc:
  ret i32 %arg2
}

define i32 @function_298f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_298f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_298f0 = load i32, i32* @eax, align 8
  %v1_298f0 = trunc i32 %v0_298f0 to i8
  %v2_298f0 = load i1, i1* @cf, align 1
  %v3_298f0 = zext i1 %v2_298f0 to i8
  %v4_298f0 = add i8 %v3_298f0, %v1_298f0
  %v22_298f0 = zext i8 %v4_298f0 to i32
  %v24_298f0 = and i32 %v0_298f0, -256
  %v25_298f0 = or i32 %v22_298f0, %v24_298f0
  store i32 %v25_298f0, i32* %eax.global-to-local, align 8
  %v1_298f2 = inttoptr i32 %v25_298f0 to i8*
  %v2_298f2 = load i8, i8* %v1_298f2, align 1
  %v5_298f2 = add i8 %v2_298f2, %v4_298f0
  store i8 %v5_298f2, i8* %v1_298f2, align 1
  %v0_298f4 = load i32, i32* %eax.global-to-local, align 8
  %v1_298f4 = load i32, i32* @ebp, align 4
  %v2_298f4 = add i32 %v1_298f4, -12
  %v3_298f4 = inttoptr i32 %v2_298f4 to i32*
  store i32 %v0_298f4, i32* %v3_298f4, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_298f9 = load i32, i32* @ebp, align 4
  %v1_298f9 = add i32 %v0_298f9, -32
  %v2_298f9 = inttoptr i32 %v1_298f9 to i32*
  %v3_298f9 = load i32, i32* %v2_298f9, align 4
  store i32 %v3_298f9, i32* %eax.global-to-local, align 8
  %v1_298ff = call i32 @unknown_56ae2(i32 %v3_298f9)
  store i32 %v1_298ff, i32* %eax.global-to-local, align 8
  %v0_29908 = load i32, i32* @ebp, align 4
  %v1_29908 = add i32 %v0_29908, -28
  %v2_29908 = inttoptr i32 %v1_29908 to i32*
  %v3_29908 = load i32, i32* %v2_29908, align 4
  store i32 %v3_29908, i32* %eax.global-to-local, align 8
  %v2_2990e = call i32 @unknown_56b10(i32 %v3_29908, i32 %v1_298ff)
  store i32 %v2_2990e, i32* %eax.global-to-local, align 8
  %v0_29913 = load i32, i32* @ebp, align 4
  %v1_29913 = add i32 %v0_29913, -28
  %v2_29913 = inttoptr i32 %v1_29913 to i32*
  %v3_29913 = load i32, i32* %v2_29913, align 4
  store i32 %v3_29913, i32* @eax, align 8
  %v1_29916 = add i32 %v0_29913, -12
  %v2_29916 = inttoptr i32 %v1_29916 to i32*
  %v3_29916 = load i32, i32* %v2_29916, align 4
  %v4_29919 = icmp eq i32 %v3_29916, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29919, label %bb, label %dec_label_pc_29922

bb:                                               ; preds = %dec_label_pc_298f0
  %v1_29920 = call i32 @function_29927()
  store i32 %v1_29920, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_29922

dec_label_pc_29922:                               ; preds = %bb, %dec_label_pc_298f0
  %v2_29920 = phi i32 [ %v1_29920, %bb ], [ %v3_29913, %dec_label_pc_298f0 ]
  ret i32 %v2_29920
}

define i32 @function_29927() local_unnamed_addr {
dec_label_pc_29927:
  %v0_29928 = load i32, i32* @eax, align 8
  ret i32 %v0_29928
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2992c:
  %v1_29949 = call i32 @unknown_574f0(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2995a

bb:                                               ; preds = %dec_label_pc_2992c
  %v1_29958 = call i32 @function_2995f()
  br label %dec_label_pc_2995a

dec_label_pc_2995a:                               ; preds = %bb, %dec_label_pc_2992c
  %v2_29958 = phi i32 [ %v1_29958, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2992c ]
  ret i32 %v2_29958
}

define i32 @function_2995f() local_unnamed_addr {
dec_label_pc_2995f:
  %v0_29960 = load i32, i32* @eax, align 8
  ret i32 %v0_29960
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEPT_RSI_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29961:
  ret i32 %arg1
}

define i32 @function_29972(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29972:
  %v0_29972 = load i32, i32* @ecx, align 4
  %v1_29972 = add i32 %v0_29972, -1070468027
  %v2_29972 = inttoptr i32 %v1_29972 to i8*
  %v3_29972 = load i8, i8* %v2_29972, align 1
  %v5_29972 = trunc i32 %v0_29972 to i8
  %v6_29972 = add i8 %v3_29972, %v5_29972
  store i8 %v6_29972, i8* %v2_29972, align 1
  %v0_29978 = load i32, i32* @ebp, align 4
  %v1_29978 = add i32 %v0_29978, -28
  %v2_29978 = inttoptr i32 %v1_29978 to i32*
  %v3_29978 = load i32, i32* %v2_29978, align 4
  store i32 %v3_29978, i32* @eax, align 8
  %v1_2997b = add i32 %v0_29978, -12
  %v2_2997b = inttoptr i32 %v1_2997b to i32*
  %v3_2997b = load i32, i32* %v2_2997b, align 4
  %v4_2997e = icmp eq i32 %v3_2997b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2997e, label %bb, label %dec_label_pc_29987

bb:                                               ; preds = %dec_label_pc_29972
  %v1_29985 = call i32 @function_2998c()
  br label %dec_label_pc_29987

dec_label_pc_29987:                               ; preds = %bb, %dec_label_pc_29972
  %v2_29985 = phi i32 [ %v1_29985, %bb ], [ %v3_29978, %dec_label_pc_29972 ]
  ret i32 %v2_29985
}

define i32 @function_2998c() local_unnamed_addr {
dec_label_pc_2998c:
  %v0_2998d = load i32, i32* @eax, align 8
  ret i32 %v0_2998d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IbxNS1_8functionIFbxEEEEENS3_5mutexEEEEEE9constructEPSI_RKSI_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2998e:
  %v2_299bf = call i32 @function_2a2f4(i32 8, i32 %arg2)
  %v1_299c4 = icmp eq i32 %v2_299bf, 0
  br i1 %v1_299c4, label %dec_label_pc_299d7, label %dec_label_pc_299c8

dec_label_pc_299c8:                               ; preds = %dec_label_pc_2998e
  %v2_299d2 = call i32 @unknown_3eee4(i32 %v2_299bf, i32 %arg3)
  br label %dec_label_pc_299d7

dec_label_pc_299d7:                               ; preds = %dec_label_pc_299c8, %dec_label_pc_2998e
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_299e3

bb:                                               ; preds = %dec_label_pc_299d7
  %v1_299e1 = call i32 @function_299e8()
  br label %dec_label_pc_299e3

dec_label_pc_299e3:                               ; preds = %bb, %dec_label_pc_299d7
  %v2_299e1 = phi i32 [ %v1_299e1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_299d7 ]
  ret i32 %v2_299e1
}

define i32 @function_299e8() local_unnamed_addr {
dec_label_pc_299e8:
  %v0_299e9 = load i32, i32* @eax, align 8
  ret i32 %v0_299e9
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE11_M_put_nodeEPSt10_List_nodeISH_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299ea:
  %v3_29a1c = call i32 @unknown_575d8(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29a2d

bb:                                               ; preds = %dec_label_pc_299ea
  %v1_29a2b = call i32 @function_29a32()
  br label %dec_label_pc_29a2d

dec_label_pc_29a2d:                               ; preds = %bb, %dec_label_pc_299ea
  %v2_29a2b = phi i32 [ %v1_29a2b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_299ea ]
  ret i32 %v2_29a2b
}

define i32 @function_29a32() local_unnamed_addr {
dec_label_pc_29a32:
  %v0_29a33 = load i32, i32* @eax, align 8
  ret i32 %v0_29a33
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISL_E() local_unnamed_addr {
dec_label_pc_29a34:
  %eax.global-to-local = alloca i32, align 4
  %v17_29a37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_29a37
}

define i32 @function_29a3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29a3c:
  %ebp.global-to-local = alloca i32, align 4
  %v0_29a3c = load i32, i32* @ecx, align 4
  %v1_29a3c = add i32 %v0_29a3c, 1166795845
  %v2_29a3c = inttoptr i32 %v1_29a3c to i8*
  %v3_29a3c = load i8, i8* %v2_29a3c, align 1
  %v5_29a3c = trunc i32 %v0_29a3c to i8
  %v6_29a3c = or i8 %v3_29a3c, %v5_29a3c
  store i8 %v6_29a3c, i8* %v2_29a3c, align 1
  %v0_29a44 = load i32, i32* @ebp, align 4
  %v1_29a44 = add i32 %v0_29a44, 1
  store i32 %v1_29a44, i32* %ebp.global-to-local, align 4
  %v2_29a4c = add i32 %v0_29a44, -11
  %v3_29a4c = inttoptr i32 %v2_29a4c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_29a4c, align 4
  %v0_29a51 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29a57 = add i32 %v0_29a51, -32
  %v2_29a57 = inttoptr i32 %v1_29a57 to i32*
  %v3_29a57 = load i32, i32* %v2_29a57, align 4
  ret i32 %v3_29a57
}

define i32 @function_29a74(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29a74:
  %v0_29a76 = call i32 @unknown_57664()
  %v0_29a7b = load i32, i32* @ebp, align 4
  %v1_29a7b = add i32 %v0_29a7b, -28
  %v2_29a7b = inttoptr i32 %v1_29a7b to i32*
  %v3_29a7b = load i32, i32* %v2_29a7b, align 4
  %v1_29a7e = add i32 %v3_29a7b, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_29a7e = inttoptr i32 %v1_29a7e to i32*
  %v3_29a7e = load i32, i32* %v2_29a7e, align 4
  %v1_29a81 = add i32 %v3_29a7e, -1
  %v2_29a87 = add i32 %v3_29a7b, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_29a87 = inttoptr i32 %v2_29a87 to i32*
  store i32 %v1_29a81, i32* %v3_29a87, align 4
  %v0_29a8a = load i32, i32* @ebp, align 4
  %v1_29a8a = add i32 %v0_29a8a, -12
  %v2_29a8a = inttoptr i32 %v1_29a8a to i32*
  %v3_29a8a = load i32, i32* %v2_29a8a, align 4
  %v3_29a8d = xor i32 %v3_29a8a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_29a8d = icmp eq i32 %v3_29a8d, 0
  store i32 %v3_29a8d, i32* @eax, align 8
  br i1 %v4_29a8d, label %bb, label %dec_label_pc_29a96

bb:                                               ; preds = %dec_label_pc_29a74
  %v1_29a94 = call i32 @function_29a9b()
  br label %dec_label_pc_29a96

dec_label_pc_29a96:                               ; preds = %bb, %dec_label_pc_29a74
  %v2_29a94 = phi i32 [ %v1_29a94, %bb ], [ %v3_29a8d, %dec_label_pc_29a74 ]
  ret i32 %v2_29a94
}

define i32 @function_29a9b() local_unnamed_addr {
dec_label_pc_29a9b:
  %v0_29a9c = load i32, i32* @eax, align 8
  ret i32 %v0_29a9c
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEclERKSL_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29a9e:
  ret i32 %arg1
}

define i32 @function_29aab() local_unnamed_addr {
dec_label_pc_29aab:
  %eax.global-to-local = alloca i32, align 4
  %v15_29aab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_29aab
}

define i32 @function_29ace() local_unnamed_addr {
dec_label_pc_29ace:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29ace = load i32, i32* %ecx.global-to-local, align 4
  %v1_29ace = add i32 %v0_29ace, -1
  store i32 %v1_29ace, i32* %ecx.global-to-local, align 4
  %v0_29ad0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ad0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_M_insert_EPKSt18_Rb_tree_node_baseSW_RKSL_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_29ad2:
  ret i32 0
}

define i32 @function_29b06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29b06:
  %ebx.global-to-local = alloca i32, align 4
  %v0_29b06 = load i1, i1* @zf, align 1
  %v1_29b06 = icmp eq i1 %v0_29b06, false
  br i1 %v1_29b06, label %dec_label_pc_29b5a, label %dec_label_pc_29b08

dec_label_pc_29b08:                               ; preds = %dec_label_pc_29b06
  %v0_29b08 = load i32, i32* @ebp, align 4
  %v1_29b08 = add i32 %v0_29b08, -32
  %v2_29b08 = inttoptr i32 %v1_29b08 to i32*
  %v3_29b08 = load i32, i32* %v2_29b08, align 4
  %v1_29b0e = call i32 @unknown_4df1a(i32 %v3_29b08)
  %v1_29b13 = load i32, i32* @ebp, align 4
  %v2_29b13 = add i32 %v1_29b13, -40
  %v3_29b13 = inttoptr i32 %v2_29b13 to i32*
  %v4_29b13 = load i32, i32* %v3_29b13, align 4
  %v15_29b13 = icmp eq i32 %v1_29b0e, %v4_29b13
  br i1 %v15_29b13, label %dec_label_pc_29b5a, label %dec_label_pc_29b18

dec_label_pc_29b18:                               ; preds = %dec_label_pc_29b08
  %v1_29b1e = call i32 @unknown_53731(i32 %v4_29b13)
  store i32 %v1_29b1e, i32* %ebx.global-to-local, align 8
  %v0_29b25 = load i32, i32* @ebp, align 4
  %v1_29b25 = add i32 %v0_29b25, -44
  %v2_29b25 = inttoptr i32 %v1_29b25 to i32*
  %v3_29b25 = load i32, i32* %v2_29b25, align 4
  %v1_29b2c = add i32 %v0_29b25, -14
  %v2_29b32 = call i32 @unknown_53570(i32 %v1_29b2c, i32 %v3_29b25)
  %v0_29b37 = load i32, i32* @ebp, align 4
  %v1_29b37 = add i32 %v0_29b37, -32
  %v2_29b37 = inttoptr i32 %v1_29b37 to i32*
  %v3_29b37 = load i32, i32* %v2_29b37, align 4
  %v0_29b3a = load i32, i32* %ebx.global-to-local, align 8
  %v3_29b45 = call i32 @unknown_4b212(i32 %v3_29b37, i32 %v2_29b32, i32 %v0_29b3a)
  %v4_29b4a = trunc i32 %v3_29b45 to i8
  %v5_29b4a = icmp ne i8 %v4_29b4a, 0
  %phitmp = zext i1 %v5_29b4a to i8
  br label %dec_label_pc_29b5a

dec_label_pc_29b5a:                               ; preds = %dec_label_pc_29b18, %dec_label_pc_29b06, %dec_label_pc_29b08
  %storemerge = phi i8 [ 1, %dec_label_pc_29b08 ], [ 1, %dec_label_pc_29b06 ], [ %phitmp, %dec_label_pc_29b18 ]
  %v2_29b5a = load i32, i32* @ebp, align 4
  %v3_29b5a = add i32 %v2_29b5a, -13
  %v4_29b5a = inttoptr i32 %v3_29b5a to i8*
  store i8 %storemerge, i8* %v4_29b5a, align 1
  %v0_29b5d = load i32, i32* @ebp, align 4
  %v1_29b5d = add i32 %v0_29b5d, -44
  %v2_29b5d = inttoptr i32 %v1_29b5d to i32*
  %v3_29b5d = load i32, i32* %v2_29b5d, align 4
  %v1_29b64 = add i32 %v0_29b5d, -32
  %v2_29b64 = inttoptr i32 %v1_29b64 to i32*
  %v3_29b64 = load i32, i32* %v2_29b64, align 4
  %v2_29b6a = call i32 @unknown_577a0(i32 %v3_29b64, i32 %v3_29b5d)
  %v1_29b6f = load i32, i32* @ebp, align 4
  %v2_29b6f = add i32 %v1_29b6f, -20
  %v3_29b6f = inttoptr i32 %v2_29b6f to i32*
  store i32 %v2_29b6a, i32* %v3_29b6f, align 4
  %v0_29b72 = load i32, i32* @ebp, align 4
  %v1_29b78 = add i32 %v0_29b72, -13
  %v2_29b78 = inttoptr i32 %v1_29b78 to i8*
  %v3_29b78 = load i8, i8* %v2_29b78, align 1
  %v4_29b78 = zext i8 %v3_29b78 to i32
  ret i32 %v4_29b78

; uselistorder directives
  uselistorder i32 %v4_29b13, { 1, 0 }
  uselistorder label %dec_label_pc_29b5a, { 0, 2, 1 }
}

define i32 @function_29ba8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29ba8:
  %v0_29ba8 = load i32, i32* @eax, align 8
  %v0_29bac = load i32, i32* @ebp, align 4
  %v1_29bac = add i32 %v0_29bac, -28
  %v2_29bac = inttoptr i32 %v1_29bac to i32*
  %v3_29bac = load i32, i32* %v2_29bac, align 4
  %v2_29bb2 = call i32 @unknown_4deb2(i32 %v3_29bac, i32 %v0_29ba8)
  %v0_29bb7 = load i32, i32* @ebp, align 4
  %v1_29bb7 = add i32 %v0_29bb7, -28
  %v2_29bb7 = inttoptr i32 %v1_29bb7 to i32*
  %v3_29bb7 = load i32, i32* %v2_29bb7, align 4
  store i32 %v3_29bb7, i32* @eax, align 8
  %v1_29bba = add i32 %v0_29bb7, -12
  %v2_29bba = inttoptr i32 %v1_29bba to i32*
  %v3_29bba = load i32, i32* %v2_29bba, align 4
  %v4_29bbd = icmp eq i32 %v3_29bba, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29bbd, label %bb, label %dec_label_pc_29bc6

bb:                                               ; preds = %dec_label_pc_29ba8
  %v1_29bc4 = call i32 @function_29bcb()
  br label %dec_label_pc_29bc6

dec_label_pc_29bc6:                               ; preds = %bb, %dec_label_pc_29ba8
  %v3_29bc4 = phi i32 [ %v1_29bc4, %bb ], [ %v3_29bb7, %dec_label_pc_29ba8 ]
  ret i32 %v3_29bc4
}

define i32 @function_29bcb() local_unnamed_addr {
dec_label_pc_29bcb:
  %v0_29bd0 = load i32, i32* @eax, align 8
  ret i32 %v0_29bd0
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEbEC1ERKSM_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29bd4:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_29bfd = inttoptr i32 %arg2 to i32*
  %v2_29bfd = load i32, i32* %v1_29bfd, align 4
  store i32 %v2_29bfd, i32* %arg1, align 4
  %v2_29c04 = load i8, i8* %tmp104, align 1
  %v3_29c0a = add i32 %tmp109, 4
  %v4_29c0a = inttoptr i32 %v3_29c0a to i8*
  store i8 %v2_29c04, i8* %v4_29c0a, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29c19

bb:                                               ; preds = %dec_label_pc_29bd4
  %v5_29c17 = call i32 @function_29c1e(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_29c19

dec_label_pc_29c19:                               ; preds = %bb, %dec_label_pc_29bd4
  %v6_29c17 = phi i32 [ %v5_29c17, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_29bd4 ]
  ret i32 %v6_29c17
}

define i32 @function_29c1e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29c1e:
  %v0_29c1f = load i32, i32* @eax, align 8
  ret i32 %v0_29c1f
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEmmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c20:
  ret i32 0
}

define i32 @function_29c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c38:
  %v0_29c38 = load i32, i32* @ebp, align 4
  %v1_29c38 = add i32 %v0_29c38, 1
  store i32 %v1_29c38, i32* @ebp, align 4
  %v0_29c39 = load i32, i32* @eax, align 8
  ret i32 %v0_29c39
}

define i32 @function_29c42(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c42:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29c4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c4a:
  %v0_29c4a = load i32, i32* @ebp, align 4
  %v1_29c4a = add i32 %v0_29c4a, 1
  store i32 %v1_29c4a, i32* @ebp, align 4
  %v0_29c4f = load i32, i32* @edx, align 8
  %v4_29c4f = icmp eq i32 %v0_29c4f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29c4f, label %bb, label %dec_label_pc_29c4a.dec_label_pc_29c58_crit_edge

dec_label_pc_29c4a.dec_label_pc_29c58_crit_edge:  ; preds = %dec_label_pc_29c4a
  %v2_29c56.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_29c58

bb:                                               ; preds = %dec_label_pc_29c4a
  %v1_29c56 = call i32 @function_29c5d()
  br label %dec_label_pc_29c58

dec_label_pc_29c58:                               ; preds = %dec_label_pc_29c4a.dec_label_pc_29c58_crit_edge, %bb
  %v2_29c56 = phi i32 [ %v2_29c56.pre, %dec_label_pc_29c4a.dec_label_pc_29c58_crit_edge ], [ %v1_29c56, %bb ]
  ret i32 %v2_29c56

; uselistorder directives
  uselistorder label %dec_label_pc_29c58, { 1, 0 }
}

define i32 @function_29c5d() local_unnamed_addr {
dec_label_pc_29c5d:
  %v0_29c5e = load i32, i32* @eax, align 8
  ret i32 %v0_29c5e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c5f:
  ret i32 %arg1
}

define i32 @function_29c7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c7e:
  %v0_29c80 = load i32, i32* @ecx, align 4
  %v1_29c80 = add i32 %v0_29c80, -1929108412
  %v2_29c80 = inttoptr i32 %v1_29c80 to i8*
  %v3_29c80 = load i8, i8* %v2_29c80, align 1
  %v5_29c80 = trunc i32 %v0_29c80 to i8
  %v6_29c80 = add i8 %v3_29c80, %v5_29c80
  store i8 %v6_29c80, i8* %v2_29c80, align 1
  %v0_29c86 = load i32, i32* @ebp, align 4
  %v1_29c86 = add i32 %v0_29c86, 1
  store i32 %v1_29c86, i32* @ebp, align 4
  %v15_29c86 = load i32, i32* @eax, align 8
  ret i32 %v15_29c86
}

define i32 @function_29c8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29c8a:
  %v0_29c8c = load i32, i32* @edx, align 8
  %v1_29c8c = trunc i32 %v0_29c8c to i16
  %v2_29c8c = call i32 @__asm_insd(i16 %v1_29c8c)
  %v3_29c8c = load i32, i32* @edi, align 8
  %v4_29c8c = inttoptr i32 %v3_29c8c to i32*
  store i32 %v2_29c8c, i32* %v4_29c8c, align 4
  %v0_29c8d = load i16, i16* @cs, align 2
  %v5_29c8d = sext i16 %v0_29c8d to i32
  %v6_29c8d = call i32 @unknown_558b0002(i32 %v5_29c8d)
  store i32 %v6_29c8d, i32* @eax, align 8
  %v0_29c94 = load i32, i32* @edx, align 8
  store i1 false, i1* @cf, align 1
  %v4_29c94 = icmp eq i32 %v0_29c94, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_29c94, label %bb, label %dec_label_pc_29c9c

bb:                                               ; preds = %dec_label_pc_29c8a
  %v1_29c9a = call i32 @function_29ca1()
  br label %dec_label_pc_29c9c

dec_label_pc_29c9c:                               ; preds = %bb, %dec_label_pc_29c8a
  %v2_29c9a = phi i32 [ %v1_29c9a, %bb ], [ %v6_29c8d, %dec_label_pc_29c8a ]
  ret i32 %v2_29c9a
}

define i32 @function_29ca1() local_unnamed_addr {
dec_label_pc_29ca1:
  %v0_29ca2 = load i32, i32* @eax, align 8
  ret i32 %v0_29ca2
}

define i32 @_ZN5boost6detail8function15functor_managerIPFvRKSsEE7managerERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeENS1_16function_ptr_tagE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_29ca3:
  %v3_29ce1 = call i32 @unknown_57a6f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29cf2

bb:                                               ; preds = %dec_label_pc_29ca3
  %v1_29cf0 = call i32 @function_29cf7()
  br label %dec_label_pc_29cf2

dec_label_pc_29cf2:                               ; preds = %bb, %dec_label_pc_29ca3
  %v2_29cf0 = phi i32 [ %v1_29cf0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_29ca3 ]
  ret i32 %v2_29cf0
}

define i32 @function_29cf7() local_unnamed_addr {
dec_label_pc_29cf7:
  %v0_29cf8 = load i32, i32* @eax, align 8
  ret i32 %v0_29cf8
}

define i32 @_ZN5boost6detail8function13basic_vtable1IvRKSsE9assign_toIPFvS4_EEEbT_RNS1_15function_bufferENS1_16function_ptr_tagE(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29cfa:
  %tmp103 = ptrtoint i32* %arg3 to i32
  %v2_29d31 = call i32 @unknown_3f5da(i32 %arg1, i32 %tmp103)
  %v10_29d36 = icmp eq i32 %arg2, 0
  br i1 %v10_29d36, label %dec_label_pc_29d50, label %dec_label_pc_29d3c

dec_label_pc_29d3c:                               ; preds = %dec_label_pc_29cfa
  store i32 %arg2, i32* %arg3, align 4
  br label %dec_label_pc_29d50

dec_label_pc_29d50:                               ; preds = %dec_label_pc_29cfa, %dec_label_pc_29d3c
  %storemerge = phi i32 [ 1, %dec_label_pc_29d3c ], [ 0, %dec_label_pc_29cfa ]
  store i32 %storemerge, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29d5c

bb:                                               ; preds = %dec_label_pc_29d50
  %v1_29d5a = call i32 @function_29d61()
  br label %dec_label_pc_29d5c

dec_label_pc_29d5c:                               ; preds = %bb, %dec_label_pc_29d50
  %v2_29d5a = phi i32 [ %v1_29d5a, %bb ], [ %storemerge, %dec_label_pc_29d50 ]
  ret i32 %v2_29d5a

; uselistorder directives
  uselistorder label %dec_label_pc_29d50, { 1, 0 }
}

define i32 @function_29d61() local_unnamed_addr {
dec_label_pc_29d61:
  %v0_29d62 = load i32, i32* @eax, align 8
  ret i32 %v0_29d62
}

define i32 @_ZN5boost9addressofIFvRKSsEEEPT_RS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d63:
  %stack_var_-20 = alloca i32, align 4
  %v2_29d81 = ptrtoint i32* %stack_var_-20 to i32
  %v2_29d87 = call i32 @unknown_57c13(i32 %v2_29d81, i32 %arg1)
  %v1_29d92 = call i32 @unknown_57c4b(i32 %v2_29d81)
  %v2_29da2 = call i32 @unknown_57c7a(i32 %v1_29d92, i32 0)
  store i32 %v2_29da2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29db3

bb:                                               ; preds = %dec_label_pc_29d63
  %v1_29db1 = call i32 @function_29db8()
  br label %dec_label_pc_29db3

dec_label_pc_29db3:                               ; preds = %bb, %dec_label_pc_29d63
  %v2_29db1 = phi i32 [ %v1_29db1, %bb ], [ %v2_29da2, %dec_label_pc_29d63 ]
  ret i32 %v2_29db1
}

define i32 @function_29db8() local_unnamed_addr {
dec_label_pc_29db8:
  %v0_29db9 = load i32, i32* @eax, align 8
  ret i32 %v0_29db9
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor15m_visit_pointerIPFvRKSsEEEvRKT_RKN4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29dba:
  %stack_var_-17 = alloca i32, align 4
  %v2_29ddd = ptrtoint i32* %stack_var_-17 to i32
  %v3_29df1 = call i32 @unknown_57d04(i32 %arg1, i32 %arg2, i32 %v2_29ddd)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_29dfc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29dfc:
  %zf.global-to-local = alloca i1, align 1
  %v0_29dfc = load i32, i32* @eax, align 8
  %v1_29dfc = trunc i32 %v0_29dfc to i8
  %v2_29dfc = load i1, i1* @cf, align 1
  %v3_29dfc = zext i1 %v2_29dfc to i8
  %v4_29dfc = add i8 %v3_29dfc, %v1_29dfc
  %v13_29dfc = icmp eq i8 %v4_29dfc, 0
  store i1 %v13_29dfc, i1* %zf.global-to-local, align 1
  %v22_29dfc = zext i8 %v4_29dfc to i32
  %v24_29dfc = and i32 %v0_29dfc, -256
  %v25_29dfc = or i32 %v22_29dfc, %v24_29dfc
  store i32 %v25_29dfc, i32* @eax, align 8
  %v1_29dfe = inttoptr i32 %v25_29dfc to i8*
  %v2_29dfe = load i8, i8* %v1_29dfe, align 1
  %v5_29dfe = add i8 %v2_29dfe, %v4_29dfc
  %v15_29dfe = icmp eq i8 %v5_29dfe, 0
  store i1 %v15_29dfe, i1* %zf.global-to-local, align 1
  store i8 %v5_29dfe, i8* %v1_29dfe, align 1
  %v0_29e00 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_29e00, label %bb, label %dec_label_pc_29dfc.dec_label_pc_29e02_crit_edge

dec_label_pc_29dfc.dec_label_pc_29e02_crit_edge:  ; preds = %dec_label_pc_29dfc
  %v2_29e00.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_29e02

bb:                                               ; preds = %dec_label_pc_29dfc
  %v1_29e00 = call i32 @function_29e07()
  br label %dec_label_pc_29e02

dec_label_pc_29e02:                               ; preds = %dec_label_pc_29dfc.dec_label_pc_29e02_crit_edge, %bb
  %v2_29e00 = phi i32 [ %v2_29e00.pre, %dec_label_pc_29dfc.dec_label_pc_29e02_crit_edge ], [ %v1_29e00, %bb ]
  ret i32 %v2_29e00

; uselistorder directives
  uselistorder label %dec_label_pc_29e02, { 1, 0 }
}

define i32 @function_29e07() local_unnamed_addr {
dec_label_pc_29e07:
  %v0_29e08 = load i32, i32* @eax, align 8
  ret i32 %v0_29e08
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29e0a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v1_29e2e = call i32 @unknown_57d8a(i32 %arg2)
  %v2_29e37 = ptrtoint i32* %stack_var_-17 to i32
  %v2_29e3d = call i32 @unknown_57db8(i32 %v2_29e37, i32 %v1_29e2e)
  %v2_29e4f = call i32 @unknown_57df4(i32 %arg1, i32 %v2_29e37)
  %v1_29e5a = call i32 @unknown_547c6(i32 %v2_29e37)
  %v2_29e5f = ptrtoint i32* %stack_var_-24 to i32
  %v2_29e6c = call i32 @unknown_57ea8(i32 %v2_29e5f, i32 %arg2)
  %v2_29e74 = ptrtoint i32* %stack_var_-28 to i32
  %v2_29e81 = call i32 @unknown_57e5e(i32 %v2_29e74, i32 %arg2)
  %v0_29e89 = load i32, i32* %ebx.global-to-local, align 8
  %v3_29e8d = load i32, i32* %stack_var_-24, align 4
  %v3_29e94 = load i32, i32* %stack_var_-28, align 4
  %v4_29ea1 = call i32 @unknown_57ef0(i32 %arg1, i32 %v3_29e94, i32 %v3_29e8d, i32 %v0_29e89)
  %v0_29ea6 = call i32 @function_29ed6()
  ret i32 %v0_29ea6

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29ea9() local_unnamed_addr {
dec_label_pc_29ea9:
  %eax.global-to-local = alloca i32, align 4
  %v0_29ea9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ea9
}

define i32 @function_29eb8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29eb8:
  %v0_29eb8 = load i32, i32* @eax, align 8
  %v2_29eb8 = add i32 %v0_29eb8, 36
  %v16_29eb8 = and i32 %v2_29eb8, 255
  %v18_29eb8 = and i32 %v0_29eb8, -256
  %v19_29eb8 = or i32 %v16_29eb8, %v18_29eb8
  ret i32 %v19_29eb8

; uselistorder directives
  uselistorder i32 %v0_29eb8, { 1, 0 }
}

define i32 @function_29ec0() local_unnamed_addr {
dec_label_pc_29ec0:
  %eax.global-to-local = alloca i32, align 4
  %v0_29ec0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29ec0
}

define i32 @function_29ed6() local_unnamed_addr {
dec_label_pc_29ed6:
  %v0_29ed6 = load i32, i32* @ebp, align 4
  %v1_29ed6 = add i32 %v0_29ed6, -12
  %v2_29ed6 = inttoptr i32 %v1_29ed6 to i32*
  %v3_29ed6 = load i32, i32* %v2_29ed6, align 4
  %v3_29ed9 = xor i32 %v3_29ed6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_29ed9 = icmp eq i32 %v3_29ed9, 0
  store i32 %v3_29ed9, i32* @eax, align 8
  br i1 %v4_29ed9, label %bb, label %dec_label_pc_29ee2

bb:                                               ; preds = %dec_label_pc_29ed6
  %v1_29ee0 = call i32 @function_29ee7()
  br label %dec_label_pc_29ee2

dec_label_pc_29ee2:                               ; preds = %bb, %dec_label_pc_29ed6
  %v2_29ee0 = phi i32 [ %v1_29ee0, %bb ], [ %v3_29ed9, %dec_label_pc_29ed6 ]
  ret i32 %v2_29ee0
}

define i32 @function_29ee7() local_unnamed_addr {
dec_label_pc_29ee7:
  %v0_29eeb = load i32, i32* @eax, align 8
  ret i32 %v0_29eeb
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29eec:
  %v1_29f09 = call i32 @unknown_5804c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29f1a

bb:                                               ; preds = %dec_label_pc_29eec
  %v1_29f18 = call i32 @function_29f1f()
  br label %dec_label_pc_29f1a

dec_label_pc_29f1a:                               ; preds = %bb, %dec_label_pc_29eec
  %v2_29f18 = phi i32 [ %v1_29f18, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_29eec ]
  ret i32 %v2_29f18
}

define i32 @function_29f1f() local_unnamed_addr {
dec_label_pc_29f1f:
  %v0_29f20 = load i32, i32* @eax, align 8
  ret i32 %v0_29f20
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29f22:
  %v1_29f40 = call i32 @unknown_580b8(i32 %arg1)
  %v1_29f4b = call i32 @unknown_53e0e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29f5c

bb:                                               ; preds = %dec_label_pc_29f22
  %v1_29f5a = call i32 @function_29f7a()
  store i32 %v1_29f5a, i32* @eax, align 8
  br label %dec_label_pc_29f5c

dec_label_pc_29f5c:                               ; preds = %bb, %dec_label_pc_29f22
  %v0_29f5c = call i32 @function_29f75()
  ret i32 %v0_29f5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29f5f() local_unnamed_addr {
dec_label_pc_29f5f:
  %eax.global-to-local = alloca i32, align 4
  %v0_29f5f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_29f5f
}

define i32 @function_29f75() local_unnamed_addr {
dec_label_pc_29f75:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_29f7a() local_unnamed_addr {
dec_label_pc_29f7a:
  %v0_29f7f = load i32, i32* @eax, align 8
  ret i32 %v0_29f7f
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEC1ERKST_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29f80:
  %v2_29faa = call i32 @unknown_581d4(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_29fbb

bb:                                               ; preds = %dec_label_pc_29f80
  %v1_29fb9 = call i32 @function_29fc0()
  br label %dec_label_pc_29fbb

dec_label_pc_29fbb:                               ; preds = %bb, %dec_label_pc_29f80
  %v2_29fb9 = phi i32 [ %v1_29fb9, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_29f80 ]
  ret i32 %v2_29fb9
}

define i32 @function_29fc0() local_unnamed_addr {
dec_label_pc_29fc0:
  %v0_29fc1 = load i32, i32* @eax, align 8
  ret i32 %v0_29fc1
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fc2:
  ret i32 %arg1
}

define i32 @function_29fd2(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fd2:
  %v2_29fd2 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_29fd2 = load i32, i32* @eax, align 8
  %v4_29fd2 = trunc i32 %v3_29fd2 to i8
  %v5_29fd2 = add i8 %v4_29fd2, %v2_29fd2
  %v21_29fd2 = inttoptr i32 %v3_29fd2 to i8*
  store i8 %v5_29fd2, i8* %v21_29fd2, align 1
  %v0_29fd4 = load i32, i32* @eax, align 8
  %v1_29fd4 = load i32, i32* @ebp, align 4
  %v2_29fd4 = add i32 %v1_29fd4, -12
  %v3_29fd4 = inttoptr i32 %v2_29fd4 to i32*
  store i32 %v0_29fd4, i32* %v3_29fd4, align 4
  %v0_29fd9 = load i32, i32* @ebp, align 4
  %v1_29fd9 = add i32 %v0_29fd9, -28
  %v2_29fd9 = inttoptr i32 %v1_29fd9 to i32*
  %v3_29fd9 = load i32, i32* %v2_29fd9, align 4
  %v1_29fdf = call i32 @unknown_5832e(i32 %v3_29fd9)
  %v0_29fe4 = load i32, i32* @ebp, align 4
  %v1_29fe4 = add i32 %v0_29fe4, -12
  %v2_29fe4 = inttoptr i32 %v1_29fe4 to i32*
  %v3_29fe4 = load i32, i32* %v2_29fe4, align 4
  %v3_29fe7 = xor i32 %v3_29fe4, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* @cf, align 1
  %v4_29fe7 = icmp eq i32 %v3_29fe7, 0
  store i32 %v3_29fe7, i32* @eax, align 8
  br i1 %v4_29fe7, label %bb, label %dec_label_pc_29ff0

bb:                                               ; preds = %dec_label_pc_29fd2
  %v1_29fee = call i32 @function_29ff5()
  br label %dec_label_pc_29ff0

dec_label_pc_29ff0:                               ; preds = %bb, %dec_label_pc_29fd2
  %v2_29fee = phi i32 [ %v1_29fee, %bb ], [ %v3_29fe7, %dec_label_pc_29fd2 ]
  ret i32 %v2_29fee
}

define i32 @function_29ff5() local_unnamed_addr {
dec_label_pc_29ff5:
  %v0_29ff6 = load i32, i32* @eax, align 8
  ret i32 %v0_29ff6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29ff8:
  %v1_2a016 = call i32 @unknown_4f4d2(i32 %arg1)
  %v2_2a025 = call i32 @unknown_5839a(i32 %arg1, i32 %v1_2a016)
  %v1_2a030 = call i32 @unknown_53fba(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a041

bb:                                               ; preds = %dec_label_pc_29ff8
  %v1_2a03f = call i32 @function_2a05f()
  store i32 %v1_2a03f, i32* @eax, align 8
  br label %dec_label_pc_2a041

dec_label_pc_2a041:                               ; preds = %bb, %dec_label_pc_29ff8
  %v0_2a041 = call i32 @function_2a05a()
  ret i32 %v0_2a041

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2a044() local_unnamed_addr {
dec_label_pc_2a044:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a044 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a044
}

define i32 @function_2a05a() local_unnamed_addr {
dec_label_pc_2a05a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a05f() local_unnamed_addr {
dec_label_pc_2a05f:
  %v0_2a064 = load i32, i32* @eax, align 8
  ret i32 %v0_2a064
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a066:
  store i32 0, i32* %arg1, align 4
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @function_2a090(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a090:
  %v0_2a090 = load i1, i1* @zf, align 1
  br i1 %v0_2a090, label %bb, label %dec_label_pc_2a090.dec_label_pc_2a092_crit_edge

dec_label_pc_2a090.dec_label_pc_2a092_crit_edge:  ; preds = %dec_label_pc_2a090
  %v2_2a090.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2a092

bb:                                               ; preds = %dec_label_pc_2a090
  %v1_2a090 = call i32 @function_2a097()
  br label %dec_label_pc_2a092

dec_label_pc_2a092:                               ; preds = %dec_label_pc_2a090.dec_label_pc_2a092_crit_edge, %bb
  %v2_2a090 = phi i32 [ %v2_2a090.pre, %dec_label_pc_2a090.dec_label_pc_2a092_crit_edge ], [ %v1_2a090, %bb ]
  ret i32 %v2_2a090

; uselistorder directives
  uselistorder label %dec_label_pc_2a092, { 1, 0 }
}

define i32 @function_2a097() local_unnamed_addr {
dec_label_pc_2a097:
  %v0_2a098 = load i32, i32* @eax, align 8
  ret i32 %v0_2a098
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a09a:
  %v2_2a0c4 = call i32 @unknown_584ba(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a0d0() local_unnamed_addr {
dec_label_pc_2a0d0:
  %v0_2a0d2 = load i32, i32* @edx, align 8
  %v4_2a0d2 = icmp eq i32 %v0_2a0d2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a0d2, label %bb, label %dec_label_pc_2a0d0.dec_label_pc_2a0db_crit_edge

dec_label_pc_2a0d0.dec_label_pc_2a0db_crit_edge:  ; preds = %dec_label_pc_2a0d0
  %v2_2a0d9.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2a0db

bb:                                               ; preds = %dec_label_pc_2a0d0
  %v1_2a0d9 = call i32 @function_2a0e0()
  br label %dec_label_pc_2a0db

dec_label_pc_2a0db:                               ; preds = %dec_label_pc_2a0d0.dec_label_pc_2a0db_crit_edge, %bb
  %v2_2a0d9 = phi i32 [ %v2_2a0d9.pre, %dec_label_pc_2a0d0.dec_label_pc_2a0db_crit_edge ], [ %v1_2a0d9, %bb ]
  ret i32 %v2_2a0d9

; uselistorder directives
  uselistorder label %dec_label_pc_2a0db, { 1, 0 }
}

define i32 @function_2a0e0() local_unnamed_addr {
dec_label_pc_2a0e0:
  %v0_2a0e1 = load i32, i32* @eax, align 8
  ret i32 %v0_2a0e1
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a0e4:
  %v2_2a10e = call i32 @unknown_5854e(i32 %arg1, i32 %arg2)
  ret i32 %v2_2a10e
}

define i32 @function_2a118(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a118:
  %v0_2a11c = load i32, i32* @edx, align 8
  %v4_2a11c = icmp eq i32 %v0_2a11c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a11c, label %bb, label %dec_label_pc_2a118.dec_label_pc_2a125_crit_edge

dec_label_pc_2a118.dec_label_pc_2a125_crit_edge:  ; preds = %dec_label_pc_2a118
  %v2_2a123.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2a125

bb:                                               ; preds = %dec_label_pc_2a118
  %v1_2a123 = call i32 @function_2a12a()
  br label %dec_label_pc_2a125

dec_label_pc_2a125:                               ; preds = %dec_label_pc_2a118.dec_label_pc_2a125_crit_edge, %bb
  %v2_2a123 = phi i32 [ %v2_2a123.pre, %dec_label_pc_2a118.dec_label_pc_2a125_crit_edge ], [ %v1_2a123, %bb ]
  ret i32 %v2_2a123

; uselistorder directives
  uselistorder label %dec_label_pc_2a125, { 1, 0 }
}

define i32 @function_2a12a() local_unnamed_addr {
dec_label_pc_2a12a:
  %v0_2a12b = load i32, i32* @eax, align 8
  ret i32 %v0_2a12b
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEneERKSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a12e:
  %v2_2a14e = load i32, i32* %arg1, align 4
  %v1_2a153 = inttoptr i32 %arg2 to i32*
  %v2_2a153 = load i32, i32* %v1_2a153, align 4
  %v12_2a155 = icmp eq i32 %v2_2a14e, %v2_2a153
  %v1_2a157 = icmp eq i1 %v12_2a155, false
  %v2_2a157 = zext i1 %v1_2a157 to i32
  %v4_2a157 = and i32 %v2_2a153, -256
  %v5_2a157 = or i32 %v2_2a157, %v4_2a157
  store i32 %v5_2a157, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a166

bb:                                               ; preds = %dec_label_pc_2a12e
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_2a164 = call i32 @function_2a16b(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2a166

dec_label_pc_2a166:                               ; preds = %bb, %dec_label_pc_2a12e
  %v5_2a164 = phi i32 [ %v3_2a164, %bb ], [ %v5_2a157, %dec_label_pc_2a12e ]
  ret i32 %v5_2a164

; uselistorder directives
  uselistorder i32 %v2_2a153, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a16b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a16b:
  %v0_2a16c = load i32, i32* @eax, align 8
  ret i32 %v0_2a16c
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a16e:
  %v2_2a188 = load i32, i32* %arg1, align 4
  ret i32 %v2_2a188
}

define i32 @function_2a1aa() local_unnamed_addr {
dec_label_pc_2a1aa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a1aa = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a1aa = add i32 %v0_2a1aa, -1
  store i32 %v1_2a1aa, i32* %ecx.global-to-local, align 4
  %v0_2a1ac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a1ac
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a1ae:
  %v2_2a1c8 = load i32, i32* %arg1, align 4
  ret i32 %v2_2a1c8
}

define i32 @function_2a1ea() local_unnamed_addr {
dec_label_pc_2a1ea:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a1ea = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a1ea = add i32 %v0_2a1ea, -1
  store i32 %v1_2a1ea, i32* %ecx.global-to-local, align 4
  %v0_2a1ec = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a1ec
}

define i32 @_ZNK5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE17get_list_iteratorERKSt23_Rb_tree_const_iteratorIS7_IKSB_St14_List_iteratorISL_EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a1ee:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_2a218 = call i32 @unknown_586a2(i32 %arg1)
  %v1_2a220 = add i32 %arg2, 8
  %v2_2a223 = ptrtoint i32* %stack_var_-24 to i32
  %v2_2a22d = call i32 @unknown_542d2(i32 %v2_2a223, i32 %v1_2a220)
  %v2_2a242 = call i32 @unknown_4f7da(i32 %arg3, i32 %v2_2a223)
  %v4_2a247 = trunc i32 %v2_2a242 to i8
  %v5_2a247 = icmp eq i8 %v4_2a247, 0
  br i1 %v5_2a247, label %bb, label %dec_label_pc_2a24b

bb:                                               ; preds = %dec_label_pc_2a1ee
  %v1_2a249 = call i32 @function_2a26a()
  br label %dec_label_pc_2a24b

dec_label_pc_2a24b:                               ; preds = %bb, %dec_label_pc_2a1ee
  %v2_2a251 = ptrtoint i32* %stack_var_-44 to i32
  ret i32 %v2_2a251
}

define i32 @function_2a25e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a25e:
  %v0_2a263 = load i32, i32* @ebp, align 4
  %v1_2a263 = add i32 %v0_2a263, -40
  %v2_2a263 = inttoptr i32 %v1_2a263 to i32*
  %v3_2a263 = load i32, i32* %v2_2a263, align 4
  %v1_2a266 = load i32, i32* @ebx, align 8
  %v2_2a266 = inttoptr i32 %v1_2a266 to i32*
  store i32 %v3_2a263, i32* %v2_2a266, align 4
  %v0_2a268 = call i32 @function_2a28f()
  ret i32 %v0_2a268
}

define i32 @function_2a26a() local_unnamed_addr {
dec_label_pc_2a26a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a26a = load i32, i32* @ebp, align 4
  %v1_2a26a = add i32 %v0_2a26a, -36
  %v2_2a26a = inttoptr i32 %v1_2a26a to i32*
  %v3_2a26a = load i32, i32* %v2_2a26a, align 4
  store i32 %v3_2a26a, i32* %eax.global-to-local, align 8
  %v1_2a270 = call i32 @unknown_4f862(i32 %v3_2a26a)
  %v1_2a275 = add i32 %v1_2a270, 12
  %v0_2a27c = load i32, i32* @ebp, align 4
  %v1_2a27c = add i32 %v0_2a27c, -16
  store i32 %v1_2a27c, i32* %eax.global-to-local, align 8
  %v2_2a282 = call i32 @unknown_586d6(i32 %v1_2a27c, i32 %v1_2a275)
  store i32 %v2_2a282, i32* %eax.global-to-local, align 8
  %v0_2a287 = load i32, i32* @ebp, align 4
  %v1_2a287 = add i32 %v0_2a287, -28
  %v2_2a287 = inttoptr i32 %v1_2a287 to i32*
  %v3_2a287 = load i32, i32* %v2_2a287, align 4
  store i32 %v3_2a287, i32* %eax.global-to-local, align 8
  %v1_2a28a = add i32 %v0_2a287, -16
  %v2_2a28a = inttoptr i32 %v1_2a28a to i32*
  %v3_2a28a = load i32, i32* %v2_2a28a, align 4
  %v2_2a28d = inttoptr i32 %v3_2a287 to i32*
  store i32 %v3_2a28a, i32* %v2_2a28d, align 4
  %v3_2a28d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2a28d
}

define i32 @function_2a28f() local_unnamed_addr {
dec_label_pc_2a28f:
  %v0_2a28f = load i32, i32* @ebp, align 4
  %v1_2a28f = add i32 %v0_2a28f, -28
  %v2_2a28f = inttoptr i32 %v1_2a28f to i32*
  %v3_2a28f = load i32, i32* %v2_2a28f, align 4
  store i32 %v3_2a28f, i32* @eax, align 8
  %v1_2a292 = add i32 %v0_2a28f, -12
  %v2_2a292 = inttoptr i32 %v1_2a292 to i32*
  %v3_2a292 = load i32, i32* %v2_2a292, align 4
  %v4_2a295 = icmp eq i32 %v3_2a292, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a295, label %bb, label %dec_label_pc_2a29e

bb:                                               ; preds = %dec_label_pc_2a28f
  %v1_2a29c = call i32 @function_2a2a3()
  br label %dec_label_pc_2a29e

dec_label_pc_2a29e:                               ; preds = %bb, %dec_label_pc_2a28f
  %v2_2a29c = phi i32 [ %v1_2a29c, %bb ], [ %v3_2a28f, %dec_label_pc_2a28f ]
  ret i32 %v2_2a29c
}

define i32 @function_2a2a3() local_unnamed_addr {
dec_label_pc_2a2a3:
  %v0_2a2a7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a2a7
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEneERKSK_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a2aa:
  %v2_2a2ca = load i32, i32* %arg1, align 4
  %v1_2a2cf = inttoptr i32 %arg2 to i32*
  %v2_2a2cf = load i32, i32* %v1_2a2cf, align 4
  %v12_2a2d1 = icmp eq i32 %v2_2a2ca, %v2_2a2cf
  %v1_2a2d3 = icmp eq i1 %v12_2a2d1, false
  %v2_2a2d3 = zext i1 %v1_2a2d3 to i32
  %v4_2a2d3 = and i32 %v2_2a2cf, -256
  %v5_2a2d3 = or i32 %v2_2a2d3, %v4_2a2d3
  store i32 %v5_2a2d3, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a2e2

bb:                                               ; preds = %dec_label_pc_2a2aa
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_2a2e0 = call i32 @function_2a2e7(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2a2e2

dec_label_pc_2a2e2:                               ; preds = %bb, %dec_label_pc_2a2aa
  %v4_2a2e0 = phi i32 [ %v3_2a2e0, %bb ], [ %v5_2a2d3, %dec_label_pc_2a2aa ]
  ret i32 %v4_2a2e0

; uselistorder directives
  uselistorder i32 %v2_2a2cf, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2a2e7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a2e7:
  %v4_2a2e7 = load i32, i32* @eax, align 8
  ret i32 %v4_2a2e7
}

define i32 @function_2a2e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2e8:
  %v0_2a2e8 = load i32, i32* @eax, align 8
  ret i32 %v0_2a2e8
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2ea:
  ret i32 %arg1
}

define i32 @function_2a2f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a2f4:
  %v0_2a2f4 = load i32, i32* @ebp, align 4
  %v1_2a2f4 = add i32 %v0_2a2f4, 1
  store i32 %v1_2a2f4, i32* @ebp, align 4
  %v2_2a2fc = add i32 %v0_2a2f4, -11
  %v3_2a2fc = inttoptr i32 %v2_2a2fc to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2a2fc, align 4
  %v0_2a301 = load i32, i32* @ebp, align 4
  %v1_2a301 = add i32 %v0_2a301, -28
  %v2_2a301 = inttoptr i32 %v1_2a301 to i32*
  %v3_2a301 = load i32, i32* %v2_2a301, align 4
  %v1_2a304 = inttoptr i32 %v3_2a301 to i32*
  %v2_2a304 = load i32, i32* %v1_2a304, align 4
  %v1_2a306 = inttoptr i32 %v2_2a304 to i32*
  %v2_2a306 = load i32, i32* %v1_2a306, align 4
  %v2_2a30b = inttoptr i32 %v3_2a301 to i32*
  store i32 %v2_2a306, i32* %v2_2a30b, align 4
  %v0_2a30d = load i32, i32* @ebp, align 4
  %v1_2a30d = add i32 %v0_2a30d, -28
  %v2_2a30d = inttoptr i32 %v1_2a30d to i32*
  %v3_2a30d = load i32, i32* %v2_2a30d, align 4
  store i32 %v3_2a30d, i32* @eax, align 8
  %v1_2a310 = add i32 %v0_2a30d, -12
  %v2_2a310 = inttoptr i32 %v1_2a310 to i32*
  %v3_2a310 = load i32, i32* %v2_2a310, align 4
  %v4_2a313 = icmp eq i32 %v3_2a310, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a313, label %bb, label %dec_label_pc_2a31c

bb:                                               ; preds = %dec_label_pc_2a2f4
  %v1_2a31a = call i32 @function_2a321()
  br label %dec_label_pc_2a31c

dec_label_pc_2a31c:                               ; preds = %bb, %dec_label_pc_2a2f4
  %v2_2a31a = phi i32 [ %v1_2a31a, %bb ], [ %v3_2a30d, %dec_label_pc_2a2f4 ]
  ret i32 %v2_2a31a
}

define i32 @function_2a321() local_unnamed_addr {
dec_label_pc_2a321:
  %v0_2a322 = load i32, i32* @eax, align 8
  ret i32 %v0_2a322
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS4_15connection_bodyISt4pairINS4_15slot_meta_groupENS_8optionalIiEEENS3_5slot1IvRKSsNS_8functionIFvSH_EEEEENS3_5mutexEEEEEEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a324:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2a356() local_unnamed_addr {
dec_label_pc_2a356:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a356 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a356 = add i32 %v0_2a356, -532313149
  %v2_2a356 = inttoptr i32 %v1_2a356 to i32*
  %v3_2a356 = load i32, i32* %v2_2a356, align 4
  %v4_2a356 = add i32 %v3_2a356, -1
  store i32 %v4_2a356, i32* %v2_2a356, align 4
  %v0_2a35c = load i32, i32* %eax.global-to-local, align 8
  %v0_2a360 = load i32, i32* %ebx.global-to-local, align 8
  %v2_2a363 = call i32 @unknown_58846(i32 %v0_2a360, i32 %v0_2a35c)
  store i32 %v2_2a363, i32* %eax.global-to-local, align 8
  %v0_2a368 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a368 = add i32 %v0_2a368, -28
  %v2_2a368 = inttoptr i32 %v1_2a368 to i32*
  %v3_2a368 = load i32, i32* %v2_2a368, align 4
  store i32 %v3_2a368, i32* %eax.global-to-local, align 8
  %v0_2a36b = load i32, i32* %ebx.global-to-local, align 8
  %v2_2a36b = inttoptr i32 %v3_2a368 to i32*
  store i32 %v0_2a36b, i32* %v2_2a36b, align 4
  %v0_2a36d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2a36d = add i32 %v0_2a36d, -12
  %v2_2a36d = inttoptr i32 %v1_2a36d to i32*
  %v3_2a36d = load i32, i32* %v2_2a36d, align 4
  %v3_2a370 = xor i32 %v3_2a36d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2a370 = icmp eq i32 %v3_2a370, 0
  store i32 %v3_2a370, i32* @eax, align 8
  br i1 %v4_2a370, label %bb, label %dec_label_pc_2a379

bb:                                               ; preds = %dec_label_pc_2a356
  %v1_2a377 = call i32 @function_2a3a9()
  store i32 %v1_2a377, i32* @eax, align 8
  br label %dec_label_pc_2a379

dec_label_pc_2a379:                               ; preds = %bb, %dec_label_pc_2a356
  %v0_2a379 = call i32 @function_2a3a4()
  store i32 %v0_2a379, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a379

; uselistorder directives
  uselistorder i32 -532313149, { 0, 1, 2, 3, 5, 4 }
}

define i32 @function_2a37c() local_unnamed_addr {
dec_label_pc_2a37c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a37c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a37c
}

define i32 @function_2a3a4() local_unnamed_addr {
dec_label_pc_2a3a4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a3a9() local_unnamed_addr {
dec_label_pc_2a3a9:
  %v0_2a3ae = load i32, i32* @eax, align 8
  ret i32 %v0_2a3ae
}

define i32 @_ZN5boost6detail12shared_countC1INS_8signals26detail12signal1_implIvRKSsNS3_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_EEENSC_IFvRKNS3_10connectionES7_EEENS3_5mutexEE16invocation_stateEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a3b0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2a3e4() local_unnamed_addr {
dec_label_pc_2a3e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a3e4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a3e4
}

define i32 @function_2a3ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a3ec:
  %v0_2a3ec = load i32, i32* @ebx, align 8
  %v1_2a3ef = call i32 @unknown_589c8(i32 %v0_2a3ec)
  %v0_2a3f4 = load i32, i32* @ebp, align 4
  %v1_2a3f4 = add i32 %v0_2a3f4, -28
  %v2_2a3f4 = inttoptr i32 %v1_2a3f4 to i32*
  %v3_2a3f4 = load i32, i32* %v2_2a3f4, align 4
  %v0_2a3f7 = load i32, i32* @ebx, align 8
  %v2_2a3f7 = inttoptr i32 %v3_2a3f4 to i32*
  store i32 %v0_2a3f7, i32* %v2_2a3f7, align 4
  %v0_2a3f9 = load i32, i32* @ebp, align 4
  %v1_2a3f9 = add i32 %v0_2a3f9, -12
  %v2_2a3f9 = inttoptr i32 %v1_2a3f9 to i32*
  %v3_2a3f9 = load i32, i32* %v2_2a3f9, align 4
  %v3_2a3fc = xor i32 %v3_2a3f9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2a3fc = icmp eq i32 %v3_2a3fc, 0
  store i32 %v3_2a3fc, i32* @eax, align 8
  br i1 %v4_2a3fc, label %bb, label %dec_label_pc_2a405

bb:                                               ; preds = %dec_label_pc_2a3ec
  %v1_2a403 = call i32 @function_2a435()
  store i32 %v1_2a403, i32* @eax, align 8
  br label %dec_label_pc_2a405

dec_label_pc_2a405:                               ; preds = %bb, %dec_label_pc_2a3ec
  %v0_2a405 = call i32 @function_2a430()
  ret i32 %v0_2a405
}

define i32 @function_2a408() local_unnamed_addr {
dec_label_pc_2a408:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a408 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a408
}

define i32 @function_2a420(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a420:
  %v0_2a420 = load i32, i32* @ebp, align 4
  %v1_2a420 = add i32 %v0_2a420, -32
  %v2_2a420 = inttoptr i32 %v1_2a420 to i32*
  %v3_2a420 = load i32, i32* %v2_2a420, align 4
  %v1_2a426 = call i32 @unknown_58a77(i32 %v3_2a420)
  ret i32 %v1_2a426
}

define i32 @function_2a430() local_unnamed_addr {
dec_label_pc_2a430:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a435() local_unnamed_addr {
dec_label_pc_2a435:
  %v0_2a43a = load i32, i32* @eax, align 8
  ret i32 %v0_2a43a
}

define i32 @_ZSt4swapIPN5boost8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS0_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEvRT_SN_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a43b:
  ret i32 %arg2
}

define i32 @function_2a466() local_unnamed_addr {
dec_label_pc_2a466:
  %v0_2a466 = load i32, i32* @ebp, align 4
  %v1_2a466 = add i32 %v0_2a466, 1
  store i32 %v1_2a466, i32* @ebp, align 4
  %v0_2a469 = load i32, i32* @ebx, align 8
  %v1_2a469 = add i32 %v0_2a469, 1435230277
  %v2_2a469 = inttoptr i32 %v1_2a469 to i8*
  %v3_2a469 = load i8, i8* %v2_2a469, align 1
  %v4_2a469 = load i32, i32* @ecx, align 4
  %v5_2a469 = trunc i32 %v4_2a469 to i8
  %v6_2a469 = load i1, i1* @cf, align 1
  %v7_2a469 = zext i1 %v6_2a469 to i8
  %v8_2a469 = add i8 %v5_2a469, %v3_2a469
  %v9_2a469 = add i8 %v8_2a469, %v7_2a469
  store i8 %v9_2a469, i8* %v2_2a469, align 1
  %v33_2a469 = load i32, i32* @eax, align 8
  ret i32 %v33_2a469
}

define i32 @function_2a47e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a47e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a482() local_unnamed_addr {
dec_label_pc_2a482:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a482 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a482 = add i32 %v0_2a482, -1
  store i32 %v1_2a482, i32* %ecx.global-to-local, align 4
  %v0_2a484 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a484
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEE11upper_boundERKSB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a486:
  %stack_var_-24 = alloca i32, align 4
  %v2_2a4af = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_2a4af
}

define i32 @function_2a4b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a4b2:
  %v3_2a4bd = load i32, i32* @eax, align 8
  ret i32 %v3_2a4bd
}

define i32 @function_2a4c2() local_unnamed_addr {
dec_label_pc_2a4c2:
  %v0_2a4c2 = load i32, i32* @ecx, align 4
  %v1_2a4c2 = inttoptr i32 %v0_2a4c2 to i32*
  store i32 82608896, i32* %v1_2a4c2, align 4
  %v0_2a4c8 = load i32, i32* @ebp, align 4
  %v1_2a4c8 = add i32 %v0_2a4c8, -20
  %v1_2a4cf = add i32 %v0_2a4c8, -16
  %v2_2a4d5 = call i32 @unknown_4aeac(i32 %v1_2a4cf, i32 %v1_2a4c8)
  %v0_2a4da = load i32, i32* @ebp, align 4
  %v1_2a4da = add i32 %v0_2a4da, -28
  %v2_2a4da = inttoptr i32 %v1_2a4da to i32*
  %v3_2a4da = load i32, i32* %v2_2a4da, align 4
  %v1_2a4dd = add i32 %v0_2a4da, -16
  %v1_2a4e4 = add i32 %v0_2a4da, -32
  %v2_2a4e4 = inttoptr i32 %v1_2a4e4 to i32*
  %v3_2a4e4 = load i32, i32* %v2_2a4e4, align 4
  %v3_2a4ee = call i32 @unknown_4aee6(i32 %v3_2a4da, i32 %v3_2a4e4, i32 %v1_2a4dd)
  %v0_2a4f6 = load i32, i32* @ebp, align 4
  %v1_2a4f6 = add i32 %v0_2a4f6, -28
  %v2_2a4f6 = inttoptr i32 %v1_2a4f6 to i32*
  %v3_2a4f6 = load i32, i32* %v2_2a4f6, align 4
  store i32 %v3_2a4f6, i32* @eax, align 8
  %v1_2a4f9 = add i32 %v0_2a4f6, -12
  %v2_2a4f9 = inttoptr i32 %v1_2a4f9 to i32*
  %v3_2a4f9 = load i32, i32* %v2_2a4f9, align 4
  %v4_2a4fc = icmp eq i32 %v3_2a4f9, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a4fc, label %bb, label %dec_label_pc_2a505

bb:                                               ; preds = %dec_label_pc_2a4c2
  %v1_2a503 = call i32 @function_2a50a()
  br label %dec_label_pc_2a505

dec_label_pc_2a505:                               ; preds = %bb, %dec_label_pc_2a4c2
  %v2_2a503 = phi i32 [ %v1_2a503, %bb ], [ %v3_2a4f6, %dec_label_pc_2a4c2 ]
  ret i32 %v2_2a503
}

define i32 @function_2a50a() local_unnamed_addr {
dec_label_pc_2a50a:
  %v0_2a50b = load i32, i32* @eax, align 8
  ret i32 %v0_2a50b
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEEixERSQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a50e:
  ret i32 %arg2
}

define i32 @function_2a520(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a520:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a522(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a522:
  %v1_2a527 = load i32, i32* @ebp, align 4
  %v2_2a527 = add i32 %v1_2a527, -12
  %v3_2a527 = inttoptr i32 %v2_2a527 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2a527, align 4
  %v0_2a52c = load i32, i32* @ebp, align 4
  %v1_2a52c = add i32 %v0_2a52c, -44
  ret i32 %v1_2a52c
}

define i32 @function_2a532(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a532:
  %v0_2a532 = load i32, i32* @edx, align 8
  %v0_2a536 = load i32, i32* @ebp, align 4
  %v1_2a536 = add i32 %v0_2a536, -60
  %v2_2a536 = inttoptr i32 %v1_2a536 to i32*
  %v3_2a536 = load i32, i32* %v2_2a536, align 4
  %v0_2a53d = load i32, i32* @eax, align 8
  %v3_2a540 = call i32 @unknown_46f6a(i32 %v0_2a53d, i32 %v3_2a536, i32 %v0_2a532)
  %v0_2a548 = load i32, i32* @ebp, align 4
  %v1_2a548 = add i32 %v0_2a548, -40
  %v1_2a54b = add i32 %v0_2a548, -60
  %v2_2a54b = inttoptr i32 %v1_2a54b to i32*
  %v3_2a54b = load i32, i32* %v2_2a54b, align 4
  %v2_2a555 = call i32 @unknown_46c5c(i32 %v1_2a548, i32 %v3_2a54b)
  %v0_2a55d = load i32, i32* @ebp, align 4
  %v1_2a564 = add i32 %v0_2a55d, -44
  ret i32 %v1_2a564
}

define i32 @function_2a55e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a55e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a568(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a568:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_2a56a = call i32 @unknown_4b1ec()
  %v4_2a56f = trunc i32 %v0_2a56a to i8
  %v5_2a56f = icmp eq i8 %v4_2a56f, 0
  %v1_2a571 = icmp eq i1 %v5_2a56f, false
  br i1 %v1_2a571, label %dec_label_pc_2a5bb, label %dec_label_pc_2a573

dec_label_pc_2a573:                               ; preds = %dec_label_pc_2a568
  %v0_2a573 = load i32, i32* @ebp, align 4
  %v1_2a573 = add i32 %v0_2a573, -44
  %v1_2a579 = call i32 @unknown_58c66(i32 %v1_2a573)
  store i32 %v1_2a579, i32* %ebx.global-to-local, align 8
  %v0_2a580 = load i32, i32* @ebp, align 4
  %v1_2a580 = add i32 %v0_2a580, -65
  %v1_2a583 = add i32 %v0_2a580, -60
  %v2_2a583 = inttoptr i32 %v1_2a583 to i32*
  %v3_2a583 = load i32, i32* %v2_2a583, align 4
  %v2_2a58d = call i32 @unknown_58c1c(i32 %v1_2a580, i32 %v3_2a583)
  %v0_2a595 = load i32, i32* %ebx.global-to-local, align 8
  %v0_2a599 = load i32, i32* @ebp, align 4
  %v1_2a599 = add i32 %v0_2a599, -64
  %v2_2a599 = inttoptr i32 %v1_2a599 to i32*
  %v3_2a599 = load i32, i32* %v2_2a599, align 4
  %v1_2a5a0 = add i32 %v0_2a599, -29
  %v3_2a5a6 = call i32 @unknown_4bc4e(i32 %v1_2a5a0, i32 %v3_2a599, i32 %v0_2a595)
  %v4_2a5ab = trunc i32 %v3_2a5a6 to i8
  %v5_2a5ab = icmp ne i8 %v4_2a5ab, 0
  %phitmp12 = icmp eq i1 %v5_2a5ab, false
  br label %dec_label_pc_2a5bb

dec_label_pc_2a5bb:                               ; preds = %dec_label_pc_2a573, %dec_label_pc_2a568
  %storemerge = phi i1 [ false, %dec_label_pc_2a568 ], [ %phitmp12, %dec_label_pc_2a573 ]
  br i1 %storemerge, label %dec_label_pc_2a617, label %dec_label_pc_2a5bf

dec_label_pc_2a5bf:                               ; preds = %dec_label_pc_2a5bb
  %v0_2a5bf = load i32, i32* @ebp, align 4
  %v1_2a5bf = add i32 %v0_2a5bf, -36
  %v1_2a5c5 = call i32 @unknown_4f43c(i32 %v1_2a5bf)
  %v0_2a5ca = load i32, i32* @ebp, align 4
  %v1_2a5ca = add i32 %v0_2a5ca, -36
  %v1_2a5d1 = add i32 %v0_2a5ca, -64
  %v2_2a5d1 = inttoptr i32 %v1_2a5d1 to i32*
  %v3_2a5d1 = load i32, i32* %v2_2a5d1, align 4
  %v1_2a5d8 = add i32 %v0_2a5ca, -28
  %v3_2a5de = call i32 @unknown_4b22c(i32 %v1_2a5d8, i32 %v3_2a5d1, i32 %v1_2a5ca)
  %v0_2a5e3 = load i32, i32* @ebp, align 4
  %v1_2a5e3 = add i32 %v0_2a5e3, -72
  %v1_2a5e6 = add i32 %v0_2a5e3, -28
  %v1_2a5ed = add i32 %v0_2a5e3, -44
  %v2_2a5ed = inttoptr i32 %v1_2a5ed to i32*
  %v3_2a5ed = load i32, i32* %v2_2a5ed, align 4
  %v1_2a5f4 = add i32 %v0_2a5e3, -60
  %v2_2a5f4 = inttoptr i32 %v1_2a5f4 to i32*
  %v3_2a5f4 = load i32, i32* %v2_2a5f4, align 4
  %v4_2a5fe = call i32 @unknown_58c98(i32 %v1_2a5e3, i32 %v3_2a5f4, i32 %v3_2a5ed, i32 %v1_2a5e6)
  %v0_2a606 = load i32, i32* @ebp, align 4
  %v1_2a606 = add i32 %v0_2a606, -72
  %v2_2a606 = inttoptr i32 %v1_2a606 to i32*
  %v3_2a606 = load i32, i32* %v2_2a606, align 4
  %v2_2a609 = add i32 %v0_2a606, -44
  %v3_2a609 = inttoptr i32 %v2_2a609 to i32*
  store i32 %v3_2a606, i32* %v3_2a609, align 4
  %v0_2a60c = load i32, i32* @ebp, align 4
  %v1_2a60c = add i32 %v0_2a60c, -28
  store i32 %v1_2a60c, i32* %stack_var_-8, align 4
  %v1_2a612 = call i32 @unknown_46cfe(i32 %v1_2a60c)
  br label %dec_label_pc_2a617

dec_label_pc_2a617:                               ; preds = %dec_label_pc_2a5bf, %dec_label_pc_2a5bb
  %v0_2a617 = load i32, i32* @ebp, align 4
  %v1_2a617 = add i32 %v0_2a617, -44
  %v1_2a61a = load i32, i32* @esp, align 4
  %v2_2a61a = inttoptr i32 %v1_2a61a to i32*
  store i32 %v1_2a617, i32* %v2_2a61a, align 4
  %v0_2a61d = load i32, i32* %stack_var_-8, align 4
  %v1_2a61d = call i32 @unknown_58c66(i32 %v0_2a61d)
  %v1_2a622 = add i32 %v1_2a61d, 12
  store i32 %v1_2a622, i32* @eax, align 8
  %v0_2a625 = load i32, i32* @ebp, align 4
  %v1_2a625 = add i32 %v0_2a625, -12
  %v2_2a625 = inttoptr i32 %v1_2a625 to i32*
  %v3_2a625 = load i32, i32* %v2_2a625, align 4
  %v4_2a628 = icmp eq i32 %v3_2a625, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a628, label %bb, label %dec_label_pc_2a631

bb:                                               ; preds = %dec_label_pc_2a617
  %v1_2a62f = call i32 @function_2a64f()
  store i32 %v1_2a62f, i32* @eax, align 8
  br label %dec_label_pc_2a631

dec_label_pc_2a631:                               ; preds = %bb, %dec_label_pc_2a617
  %v0_2a631 = call i32 @function_2a64a()
  ret i32 %v0_2a631

; uselistorder directives
  uselistorder i32 -29, { 1, 0, 2, 3 }
  uselistorder i32 -65, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @unknown_58c66, { 1, 0 }
}

define i32 @function_2a634() local_unnamed_addr {
dec_label_pc_2a634:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a634 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a634
}

define i32 @function_2a64a() local_unnamed_addr {
dec_label_pc_2a64a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2a64f() local_unnamed_addr {
dec_label_pc_2a64f:
  %v0_2a653 = load i32, i32* @eax, align 8
  ret i32 %v0_2a653
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE5eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_2a654:
  %tmp101 = ptrtoint i32* %arg3 to i32
  %v2_2a67a = load i32, i32* %arg3, align 4
  %v2_2a686 = call i32 @unknown_4fdd0(i32 %arg1, i32 %v2_2a67a)
  %v2_2a698 = call i32 @unknown_58e54(i32 %arg2, i32 %tmp101)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a6ac

bb:                                               ; preds = %dec_label_pc_2a654
  %v1_2a6aa = call i32 @function_2a6b1()
  br label %dec_label_pc_2a6ac

dec_label_pc_2a6ac:                               ; preds = %bb, %dec_label_pc_2a654
  %v2_2a6aa = phi i32 [ %v1_2a6aa, %bb ], [ %arg1, %dec_label_pc_2a654 ]
  ret i32 %v2_2a6aa

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a6b1() local_unnamed_addr {
dec_label_pc_2a6b1:
  %v0_2a6b2 = load i32, i32* @eax, align 8
  ret i32 %v0_2a6b2
}

define i32 @_ZN5boost9function1IvRKSsE13assign_to_ownERKS3_() local_unnamed_addr {
dec_label_pc_2a6b6:
  %eax.global-to-local = alloca i32, align 4
  %v17_2a6b9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2a6b9
}

define i32 @function_2a6be(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a6be:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2a6be = load i32, i32* @ecx, align 4
  %v1_2a6be = add i32 %v0_2a6be, 1166795845
  %v2_2a6be = inttoptr i32 %v1_2a6be to i8*
  %v3_2a6be = load i8, i8* %v2_2a6be, align 1
  %v5_2a6be = trunc i32 %v0_2a6be to i8
  %v6_2a6be = or i8 %v3_2a6be, %v5_2a6be
  store i8 %v6_2a6be, i8* %v2_2a6be, align 1
  %v0_2a6c4 = load i32, i32* @eax, align 8
  %v2_2a6c4 = or i32 %v0_2a6c4, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_2a6c4, i32* %eax.global-to-local, align 8
  %v0_2a6c6 = load i32, i32* @ebp, align 4
  %v1_2a6c6 = add i32 %v0_2a6c6, 1
  %v9_2a6c6 = icmp eq i32 %v1_2a6c6, 0
  store i32 %v1_2a6c6, i32* @ebp, align 4
  %v0_2a6c7 = load i32, i32* @ecx, align 4
  %v2_2a6c7 = icmp eq i32 %v0_2a6c7, 1
  %v4_2a6c7 = or i1 %v9_2a6c6, %v2_2a6c7
  br i1 %v4_2a6c7, label %dec_label_pc_2a6c9, label %dec_label_pc_2a6be.dec_label_pc_2a72e_crit_edge

dec_label_pc_2a6be.dec_label_pc_2a72e_crit_edge:  ; preds = %dec_label_pc_2a6be
  %v0_2a72e.pre = load i32, i32* @edx, align 8
  br label %dec_label_pc_2a72e

dec_label_pc_2a6c9:                               ; preds = %dec_label_pc_2a6be
  %v2_2a6ce = add i32 %v0_2a6c6, -11
  %v3_2a6ce = inttoptr i32 %v2_2a6ce to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2a6ce, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2a6d3 = load i32, i32* @ebp, align 4
  %v1_2a6d3 = add i32 %v0_2a6d3, -32
  %v2_2a6d3 = inttoptr i32 %v1_2a6d3 to i32*
  %v3_2a6d3 = load i32, i32* %v2_2a6d3, align 4
  store i32 %v3_2a6d3, i32* %eax.global-to-local, align 8
  %v1_2a6d9 = call i32 @unknown_38856(i32 %v3_2a6d3)
  %v1_2a6de = xor i32 %v1_2a6d9, 1
  %v4_2a6de = trunc i32 %v1_2a6de to i8
  store i32 %v1_2a6de, i32* %eax.global-to-local, align 8
  %v5_2a6e1 = icmp eq i8 %v4_2a6de, 0
  br i1 %v5_2a6e1, label %dec_label_pc_2a742, label %dec_label_pc_2a6e5

dec_label_pc_2a6e5:                               ; preds = %dec_label_pc_2a6c9
  %v0_2a6e5 = load i32, i32* @ebp, align 4
  %v1_2a6e5 = add i32 %v0_2a6e5, -32
  %v2_2a6e5 = inttoptr i32 %v1_2a6e5 to i32*
  %v3_2a6e5 = load i32, i32* %v2_2a6e5, align 4
  store i32 %v3_2a6e5, i32* %eax.global-to-local, align 8
  %v1_2a6e8 = inttoptr i32 %v3_2a6e5 to i32*
  %v2_2a6e8 = load i32, i32* %v1_2a6e8, align 4
  store i32 %v2_2a6e8, i32* %edx.global-to-local, align 8
  %v1_2a6ea = add i32 %v0_2a6e5, -28
  %v2_2a6ea = inttoptr i32 %v1_2a6ea to i32*
  %v3_2a6ea = load i32, i32* %v2_2a6ea, align 4
  store i32 %v3_2a6ea, i32* %eax.global-to-local, align 8
  %v2_2a6ed = inttoptr i32 %v3_2a6ea to i32*
  store i32 %v2_2a6e8, i32* %v2_2a6ed, align 4
  %v0_2a6ef = load i32, i32* @ebp, align 4
  %v1_2a6ef = add i32 %v0_2a6ef, -28
  %v2_2a6ef = inttoptr i32 %v1_2a6ef to i32*
  %v3_2a6ef = load i32, i32* %v2_2a6ef, align 4
  store i32 %v3_2a6ef, i32* %eax.global-to-local, align 8
  %v1_2a6f5 = call i32 @unknown_3888a(i32 %v3_2a6ef)
  store i32 %v1_2a6f5, i32* %eax.global-to-local, align 8
  %v4_2a6fa = trunc i32 %v1_2a6f5 to i8
  %v5_2a6fa = icmp eq i8 %v4_2a6fa, 0
  %v0_2a718 = load i32, i32* @ebp, align 4
  %v1_2a718 = add i32 %v0_2a718, -28
  %v2_2a718 = inttoptr i32 %v1_2a718 to i32*
  %v3_2a718 = load i32, i32* %v2_2a718, align 4
  store i32 %v3_2a718, i32* %eax.global-to-local, align 8
  br i1 %v5_2a6fa, label %dec_label_pc_2a718, label %dec_label_pc_2a6fe

dec_label_pc_2a6fe:                               ; preds = %dec_label_pc_2a6e5
  %v1_2a701 = add i32 %v0_2a718, -32
  %v2_2a701 = inttoptr i32 %v1_2a701 to i32*
  %v3_2a701 = load i32, i32* %v2_2a701, align 4
  store i32 %v3_2a701, i32* %edx.global-to-local, align 8
  %v1_2a704 = add i32 %v3_2a701, 4
  %v2_2a704 = inttoptr i32 %v1_2a704 to i32*
  %v3_2a704 = load i32, i32* %v2_2a704, align 4
  %v2_2a707 = add i32 %v3_2a718, 4
  %v3_2a707 = inttoptr i32 %v2_2a707 to i32*
  store i32 %v3_2a704, i32* %v3_2a707, align 4
  %v0_2a70a = load i32, i32* %edx.global-to-local, align 8
  %v1_2a70a = add i32 %v0_2a70a, 8
  %v2_2a70a = inttoptr i32 %v1_2a70a to i32*
  %v3_2a70a = load i32, i32* %v2_2a70a, align 4
  %v1_2a70d = load i32, i32* %eax.global-to-local, align 8
  %v2_2a70d = add i32 %v1_2a70d, 8
  %v3_2a70d = inttoptr i32 %v2_2a70d to i32*
  store i32 %v3_2a70a, i32* %v3_2a70d, align 4
  %v0_2a710 = load i32, i32* %edx.global-to-local, align 8
  %v1_2a710 = add i32 %v0_2a710, 12
  %v2_2a710 = inttoptr i32 %v1_2a710 to i32*
  %v3_2a710 = load i32, i32* %v2_2a710, align 4
  store i32 %v3_2a710, i32* %edx.global-to-local, align 8
  %v1_2a713 = load i32, i32* %eax.global-to-local, align 8
  %v2_2a713 = add i32 %v1_2a713, 12
  %v3_2a713 = inttoptr i32 %v2_2a713 to i32*
  store i32 %v3_2a710, i32* %v3_2a713, align 4
  br label %dec_label_pc_2a742

dec_label_pc_2a718:                               ; preds = %dec_label_pc_2a6e5
  %v1_2a71e = call i32 @unknown_3ff64(i32 %v3_2a718)
  store i32 %v1_2a71e, i32* %eax.global-to-local, align 8
  %v1_2a723 = inttoptr i32 %v1_2a71e to i32*
  %v2_2a723 = load i32, i32* %v1_2a723, align 4
  store i32 %v2_2a723, i32* %eax.global-to-local, align 8
  %v0_2a725 = load i32, i32* @ebp, align 4
  %v1_2a725 = add i32 %v0_2a725, -28
  %v2_2a725 = inttoptr i32 %v1_2a725 to i32*
  %v3_2a725 = load i32, i32* %v2_2a725, align 4
  store i32 %v3_2a725, i32* %edx.global-to-local, align 8
  %v1_2a72b = add i32 %v0_2a725, -32
  %v2_2a72b = inttoptr i32 %v1_2a72b to i32*
  %v3_2a72b = load i32, i32* %v2_2a72b, align 4
  store i32 %v3_2a72b, i32* %edx.global-to-local, align 8
  br label %dec_label_pc_2a72e

dec_label_pc_2a72e:                               ; preds = %dec_label_pc_2a6be.dec_label_pc_2a72e_crit_edge, %dec_label_pc_2a718
  %v0_2a72e = phi i32 [ %v0_2a72e.pre, %dec_label_pc_2a6be.dec_label_pc_2a72e_crit_edge ], [ %v3_2a72b, %dec_label_pc_2a718 ]
  %v1_2a72e = add i32 %v0_2a72e, 4
  store i32 %v1_2a72e, i32* %edx.global-to-local, align 8
  br label %dec_label_pc_2a742

dec_label_pc_2a742:                               ; preds = %dec_label_pc_2a72e, %dec_label_pc_2a6fe, %dec_label_pc_2a6c9
  %v0_2a742 = load i32, i32* @ebp, align 4
  %v1_2a742 = add i32 %v0_2a742, -12
  %v2_2a742 = inttoptr i32 %v1_2a742 to i32*
  %v3_2a742 = load i32, i32* %v2_2a742, align 4
  %v3_2a745 = xor i32 %v3_2a742, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2a745 = icmp eq i32 %v3_2a745, 0
  store i32 %v3_2a745, i32* @eax, align 8
  br i1 %v4_2a745, label %bb, label %dec_label_pc_2a74e

bb:                                               ; preds = %dec_label_pc_2a742
  %v1_2a74c = call i32 @function_2a753()
  store i32 %v1_2a74c, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2a74e

dec_label_pc_2a74e:                               ; preds = %bb, %dec_label_pc_2a742
  %v2_2a74c = phi i32 [ %v1_2a74c, %bb ], [ %v3_2a745, %dec_label_pc_2a742 ]
  ret i32 %v2_2a74c

; uselistorder directives
  uselistorder i32 %v3_2a718, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2a72e, { 1, 0 }
}

define i32 @function_2a753() local_unnamed_addr {
dec_label_pc_2a753:
  %v0_2a754 = load i32, i32* @eax, align 8
  ret i32 %v0_2a754
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_2a756:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_339bc_type* @global_var_339bc.2000 to i32), i32* %arg1, align 4
  %v1_2a77a = add i32 %tmp99, 68
  %v1_2a780 = call i32 @unknown_3f8ae(i32 %v1_2a77a)
  %v1_2a788 = add i32 %tmp99, 44
  %v1_2a78e = call i32 @unknown_3982a(i32 %v1_2a788)
  %v1_2a796 = add i32 %tmp99, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2a79c = call i32 @unknown_3a5d0(i32 %v1_2a796)
  %v1_2a7a7 = call i32 @unknown_3942c(i32 %tmp99)
  %v1_2a7b6 = call i32 @function_2a7fc()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 68, { 0, 11, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 ptrtoint (%vtable_339bc_type* @global_var_339bc.2000 to i32), { 1, 0 }
}

define i32 @function_2a7c3() local_unnamed_addr {
dec_label_pc_2a7c3:
  %v0_2a7c3 = call i32 @function_2a7fc()
  ret i32 %v0_2a7c3

; uselistorder directives
  uselistorder i32 ()* @function_2a7fc, { 1, 0 }
}

define i32 @function_2a7c5() local_unnamed_addr {
dec_label_pc_2a7c5:
  %v0_2a7c7 = load i32, i32* @ebp, align 4
  %v1_2a7c7 = add i32 %v0_2a7c7, -28
  %v2_2a7c7 = inttoptr i32 %v1_2a7c7 to i32*
  %v3_2a7c7 = load i32, i32* %v2_2a7c7, align 4
  %v1_2a7ca = add i32 %v3_2a7c7, 44
  %v1_2a7d0 = call i32 @unknown_3982a(i32 %v1_2a7ca)
  %v0_2a7d5 = load i32, i32* @ebp, align 4
  %v1_2a7d5 = add i32 %v0_2a7d5, -28
  %v2_2a7d5 = inttoptr i32 %v1_2a7d5 to i32*
  %v3_2a7d5 = load i32, i32* %v2_2a7d5, align 4
  %v1_2a7d8 = add i32 %v3_2a7d5, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2a7de = call i32 @unknown_3a5d0(i32 %v1_2a7d8)
  %v0_2a7e3 = call i32 @function_2a7e7()
  ret i32 %v0_2a7e3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3a5d0, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3982a, { 1, 0 }
}

define i32 @function_2a7e5() local_unnamed_addr {
dec_label_pc_2a7e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a7e5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a7e5
}

define i32 @function_2a7e7() local_unnamed_addr {
dec_label_pc_2a7e7:
  %v0_2a7e7 = load i32, i32* @ebp, align 4
  %v1_2a7e7 = add i32 %v0_2a7e7, -28
  %v2_2a7e7 = inttoptr i32 %v1_2a7e7 to i32*
  %v3_2a7e7 = load i32, i32* %v2_2a7e7, align 4
  %v1_2a7ed = call i32 @unknown_3942c(i32 %v3_2a7e7)
  ret i32 %v1_2a7ed

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3942c, { 1, 0 }
}

define i32 @function_2a7f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a7f2:
  %v0_2a7f2 = load i32, i32* @ebx, align 8
  ret i32 %v0_2a7f2
}

define i32 @function_2a7fc() local_unnamed_addr {
dec_label_pc_2a7fc:
  %v0_2a7fc = load i32, i32* @ebp, align 4
  %v1_2a7fc = add i32 %v0_2a7fc, -12
  %v2_2a7fc = inttoptr i32 %v1_2a7fc to i32*
  %v3_2a7fc = load i32, i32* %v2_2a7fc, align 4
  %v3_2a7ff = xor i32 %v3_2a7fc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2a7ff = icmp eq i32 %v3_2a7ff, 0
  store i32 %v3_2a7ff, i32* @eax, align 8
  br i1 %v4_2a7ff, label %bb, label %dec_label_pc_2a808

bb:                                               ; preds = %dec_label_pc_2a7fc
  %v1_2a806 = call i32 @function_2a80d()
  br label %dec_label_pc_2a808

dec_label_pc_2a808:                               ; preds = %bb, %dec_label_pc_2a7fc
  %v2_2a806 = phi i32 [ %v1_2a806, %bb ], [ %v3_2a7ff, %dec_label_pc_2a7fc ]
  ret i32 %v2_2a806
}

define i32 @function_2a80d() local_unnamed_addr {
dec_label_pc_2a80d:
  %v0_2a812 = load i32, i32* @eax, align 8
  ret i32 %v0_2a812
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEED0Ev(i32 %arg1) {
dec_label_pc_2a814:
  %v1_2a831 = call i32 @unknown_54f6a(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_2a851() local_unnamed_addr {
dec_label_pc_2a851:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a851 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a851 = add i32 %v0_2a851, -1
  store i32 %v1_2a851, i32* %ecx.global-to-local, align 4
  %v0_2a853 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2a853
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a854:
  %stack_var_-17 = alloca i32, align 4
  %v1_2a871 = call i32 @unknown_59103(i32 %arg1)
  %v2_2a87a = ptrtoint i32* %stack_var_-17 to i32
  %v2_2a880 = call i32 @unknown_55382(i32 %v2_2a87a, i32 %v1_2a871)
  store i32 %v2_2a880, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a891

bb:                                               ; preds = %dec_label_pc_2a854
  %v1_2a88f = call i32 @function_2a896()
  br label %dec_label_pc_2a891

dec_label_pc_2a891:                               ; preds = %bb, %dec_label_pc_2a854
  %v2_2a88f = phi i32 [ %v1_2a88f, %bb ], [ %v2_2a880, %dec_label_pc_2a854 ]
  ret i32 %v2_2a88f
}

define i32 @function_2a896() local_unnamed_addr {
dec_label_pc_2a896:
  %v0_2a897 = load i32, i32* @eax, align 8
  ret i32 %v0_2a897
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a898:
  %v1_2a8b2 = add i32 %arg1, 8
  %v2_2a8b2 = inttoptr i32 %v1_2a8b2 to i32*
  %v3_2a8b2 = load i32, i32* %v2_2a8b2, align 4
  store i32 %v3_2a8b2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a8c1

bb:                                               ; preds = %dec_label_pc_2a898
  %v2_2a8bf = call i32 @function_2a8c6(i32 %arg1)
  br label %dec_label_pc_2a8c1

dec_label_pc_2a8c1:                               ; preds = %bb, %dec_label_pc_2a898
  %v3_2a8bf = phi i32 [ %v2_2a8bf, %bb ], [ %v3_2a8b2, %dec_label_pc_2a898 ]
  ret i32 %v3_2a8bf
}

define i32 @function_2a8c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8c6:
  %v0_2a8c7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a8c7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8c8:
  %v1_2a8e2 = add i32 %arg1, 12
  %v2_2a8e2 = inttoptr i32 %v1_2a8e2 to i32*
  %v3_2a8e2 = load i32, i32* %v2_2a8e2, align 4
  store i32 %v3_2a8e2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a8f1

bb:                                               ; preds = %dec_label_pc_2a8c8
  %v2_2a8ef = call i32 @function_2a8f6(i32 %arg1)
  br label %dec_label_pc_2a8f1

dec_label_pc_2a8f1:                               ; preds = %bb, %dec_label_pc_2a8c8
  %v3_2a8ef = phi i32 [ %v2_2a8ef, %bb ], [ %v3_2a8e2, %dec_label_pc_2a8c8 ]
  ret i32 %v3_2a8ef
}

define i32 @function_2a8f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8f6:
  %v0_2a8f7 = load i32, i32* @eax, align 8
  ret i32 %v0_2a8f7
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEPT_RSP_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a8f8:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a91e

bb:                                               ; preds = %dec_label_pc_2a8f8
  %v2_2a91c = call i32 @function_2a923(i32 %arg1)
  br label %dec_label_pc_2a91e

dec_label_pc_2a91e:                               ; preds = %bb, %dec_label_pc_2a8f8
  %v3_2a91c = phi i32 [ %v2_2a91c, %bb ], [ %arg1, %dec_label_pc_2a8f8 ]
  ret i32 %v3_2a91c
}

define i32 @function_2a923(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a923:
  %v0_2a924 = load i32, i32* @eax, align 8
  ret i32 %v0_2a924
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a926:
  %v3_2a953 = call i32 @unknown_59206(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2a953, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2a964

bb:                                               ; preds = %dec_label_pc_2a926
  %v1_2a962 = call i32 @function_2a969()
  br label %dec_label_pc_2a964

dec_label_pc_2a964:                               ; preds = %bb, %dec_label_pc_2a926
  %v2_2a962 = phi i32 [ %v1_2a962, %bb ], [ %v3_2a953, %dec_label_pc_2a926 ]
  ret i32 %v2_2a962
}

define i32 @function_2a969() local_unnamed_addr {
dec_label_pc_2a969:
  %v0_2a96a = load i32, i32* @eax, align 8
  ret i32 %v0_2a96a
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE19_M_get_Tp_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a96c:
  ret i32 %arg2
}

define i32 @function_2a982(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a982:
  %v2_2a982 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2a982 = load i32, i32* @eax, align 8
  %v4_2a982 = trunc i32 %v3_2a982 to i8
  %v5_2a982 = add i8 %v4_2a982, %v2_2a982
  %v21_2a982 = inttoptr i32 %v3_2a982 to i8*
  store i8 %v5_2a982, i8* %v21_2a982, align 1
  %v0_2a984 = load i32, i32* @eax, align 8
  %v1_2a984 = load i32, i32* @ebp, align 4
  %v2_2a984 = add i32 %v1_2a984, -12
  %v3_2a984 = inttoptr i32 %v2_2a984 to i32*
  store i32 %v0_2a984, i32* %v3_2a984, align 4
  %v0_2a989 = load i32, i32* @ebp, align 4
  %v1_2a989 = add i32 %v0_2a989, -32
  %v2_2a989 = inttoptr i32 %v1_2a989 to i32*
  %v3_2a989 = load i32, i32* %v2_2a989, align 4
  %v1_2a98f = call i32 @unknown_588ec(i32 %v3_2a989)
  %v0_2a998 = load i32, i32* @ebp, align 4
  %v1_2a998 = add i32 %v0_2a998, -28
  %v2_2a998 = inttoptr i32 %v1_2a998 to i32*
  %v3_2a998 = load i32, i32* %v2_2a998, align 4
  %v2_2a99e = call i32 @unknown_5891a(i32 %v3_2a998, i32 %v1_2a98f)
  %v0_2a9a3 = load i32, i32* @ebp, align 4
  %v1_2a9a3 = add i32 %v0_2a9a3, -28
  %v2_2a9a3 = inttoptr i32 %v1_2a9a3 to i32*
  %v3_2a9a3 = load i32, i32* %v2_2a9a3, align 4
  store i32 %v3_2a9a3, i32* @eax, align 8
  %v1_2a9a6 = add i32 %v0_2a9a3, -12
  %v2_2a9a6 = inttoptr i32 %v1_2a9a6 to i32*
  %v3_2a9a6 = load i32, i32* %v2_2a9a6, align 4
  %v4_2a9a9 = icmp eq i32 %v3_2a9a6, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2a9a9, label %bb, label %dec_label_pc_2a9b2

bb:                                               ; preds = %dec_label_pc_2a982
  %v1_2a9b0 = call i32 @function_2a9b7()
  br label %dec_label_pc_2a9b2

dec_label_pc_2a9b2:                               ; preds = %bb, %dec_label_pc_2a982
  %v2_2a9b0 = phi i32 [ %v1_2a9b0, %bb ], [ %v3_2a9a3, %dec_label_pc_2a982 ]
  ret i32 %v2_2a9b0
}

define i32 @function_2a9b7() local_unnamed_addr {
dec_label_pc_2a9b7:
  %v0_2a9b8 = load i32, i32* @eax, align 8
  ret i32 %v0_2a9b8
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9bc:
  %v1_2a9d9 = call i32 @unknown_592fa(i32 %arg1)
  ret i32 %v1_2a9d9
}

define i32 @function_2a9de(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9de:
  %v0_2a9de = load i32, i32* @ebp, align 4
  %v1_2a9de = add i32 %v0_2a9de, -12
  %v2_2a9de = inttoptr i32 %v1_2a9de to i32*
  %v3_2a9de = load i32, i32* %v2_2a9de, align 4
  %v3_2a9e1 = xor i32 %v3_2a9de, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2a9e1 = icmp eq i32 %v3_2a9e1, 0
  store i32 %v3_2a9e1, i32* @eax, align 8
  br i1 %v4_2a9e1, label %bb, label %dec_label_pc_2a9ea

bb:                                               ; preds = %dec_label_pc_2a9de
  %v1_2a9e8 = call i32 @function_2a9ef()
  br label %dec_label_pc_2a9ea

dec_label_pc_2a9ea:                               ; preds = %bb, %dec_label_pc_2a9de
  %v2_2a9e8 = phi i32 [ %v1_2a9e8, %bb ], [ %v3_2a9e1, %dec_label_pc_2a9de ]
  ret i32 %v2_2a9e8
}

define i32 @function_2a9ef() local_unnamed_addr {
dec_label_pc_2a9ef:
  %v0_2a9f0 = load i32, i32* @eax, align 8
  ret i32 %v0_2a9f0
}

define i32 @_ZSt11__addressofIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEPT_RSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9f1:
  ret i32 %arg1
}

define i32 @function_2a9fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9fe:
  %v1_2aa03 = load i32, i32* @ebp, align 4
  %v2_2aa03 = add i32 %v1_2aa03, -12
  %v3_2aa03 = inttoptr i32 %v2_2aa03 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2aa03, align 4
  %v0_2aa08 = load i32, i32* @ebp, align 4
  %v1_2aa08 = add i32 %v0_2aa08, -28
  %v2_2aa08 = inttoptr i32 %v1_2aa08 to i32*
  %v3_2aa08 = load i32, i32* %v2_2aa08, align 4
  store i32 %v3_2aa08, i32* @eax, align 8
  %v1_2aa0b = add i32 %v0_2aa08, -12
  %v2_2aa0b = inttoptr i32 %v1_2aa0b to i32*
  %v3_2aa0b = load i32, i32* %v2_2aa0b, align 4
  %v4_2aa0e = icmp eq i32 %v3_2aa0b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2aa0e, label %bb, label %dec_label_pc_2aa17

bb:                                               ; preds = %dec_label_pc_2a9fe
  %v1_2aa15 = call i32 @function_2aa1c()
  br label %dec_label_pc_2aa17

dec_label_pc_2aa17:                               ; preds = %bb, %dec_label_pc_2a9fe
  %v2_2aa15 = phi i32 [ %v1_2aa15, %bb ], [ %v3_2aa08, %dec_label_pc_2a9fe ]
  ret i32 %v2_2aa15
}

define i32 @function_2aa1c() local_unnamed_addr {
dec_label_pc_2aa1c:
  %v0_2aa1d = load i32, i32* @eax, align 8
  ret i32 %v0_2aa1d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS3_5mutexEEEEEE9constructEPSK_RKSK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2aa1e:
  store i32 %arg2, i32* @eax, align 8
  %v2_2aa4f = call i32 @function_2b384(i32 8, i32 %arg2)
  %v1_2aa54 = icmp eq i32 %v2_2aa4f, 0
  br i1 %v1_2aa54, label %dec_label_pc_2aa67, label %dec_label_pc_2aa58

dec_label_pc_2aa58:                               ; preds = %dec_label_pc_2aa1e
  %v2_2aa62 = call i32 @unknown_4038c(i32 %v2_2aa4f, i32 %arg3)
  br label %dec_label_pc_2aa67

dec_label_pc_2aa67:                               ; preds = %dec_label_pc_2aa58, %dec_label_pc_2aa1e
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2aa6a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa6a:
  %v0_2aa6a = load i32, i32* @eax, align 8
  %v3_2aa6a = xor i32 %v0_2aa6a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2aa6a = icmp eq i32 %v3_2aa6a, 0
  store i32 %v3_2aa6a, i32* @eax, align 8
  br i1 %v4_2aa6a, label %bb, label %dec_label_pc_2aa73

bb:                                               ; preds = %dec_label_pc_2aa6a
  %v1_2aa71 = call i32 @function_2aa78()
  br label %dec_label_pc_2aa73

dec_label_pc_2aa73:                               ; preds = %bb, %dec_label_pc_2aa6a
  %v2_2aa71 = phi i32 [ %v1_2aa71, %bb ], [ %v3_2aa6a, %dec_label_pc_2aa6a ]
  ret i32 %v2_2aa71
}

define i32 @function_2aa78() local_unnamed_addr {
dec_label_pc_2aa78:
  %v0_2aa79 = load i32, i32* @eax, align 8
  ret i32 %v0_2aa79
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_put_nodeEPSt10_List_nodeISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa7a:
  %v3_2aaac = call i32 @unknown_593e2(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2aabd

bb:                                               ; preds = %dec_label_pc_2aa7a
  %v1_2aabb = call i32 @function_2aac2()
  br label %dec_label_pc_2aabd

dec_label_pc_2aabd:                               ; preds = %bb, %dec_label_pc_2aa7a
  %v2_2aabb = phi i32 [ %v1_2aabb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2aa7a ]
  ret i32 %v2_2aabb
}

define i32 @function_2aac2() local_unnamed_addr {
dec_label_pc_2aac2:
  %v0_2aac3 = load i32, i32* @eax, align 8
  ret i32 %v0_2aac3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_erase_auxESt23_Rb_tree_const_iteratorISN_E() local_unnamed_addr {
dec_label_pc_2aac4:
  %eax.global-to-local = alloca i32, align 4
  %v5_2aac4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2aac4
}

define i32 @function_2aac6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aac6:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2aad1 = load i32, i32* @ebp, align 4
  %v1_2aad4 = add i32 %v0_2aad1, 2
  store i32 %v1_2aad4, i32* %ebp.global-to-local, align 4
  %v2_2aadc = add i32 %v0_2aad1, -10
  %v3_2aadc = inttoptr i32 %v2_2aadc to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2aadc, align 4
  %v0_2aae1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2aae7 = add i32 %v0_2aae1, -32
  %v2_2aae7 = inttoptr i32 %v1_2aae7 to i32*
  %v3_2aae7 = load i32, i32* %v2_2aae7, align 4
  ret i32 %v3_2aae7
}

define i32 @function_2aafe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aafe:
  %v0_2ab00 = load i32, i32* @ebp, align 4
  %v1_2ab00 = add i32 %v0_2ab00, -28
  %v2_2ab00 = inttoptr i32 %v1_2ab00 to i32*
  %v3_2ab00 = load i32, i32* %v2_2ab00, align 4
  %v1_2ab06 = call i32 @unknown_5946e(i32 %v3_2ab00)
  %v0_2ab0b = load i32, i32* @ebp, align 4
  %v1_2ab0b = add i32 %v0_2ab0b, -28
  %v2_2ab0b = inttoptr i32 %v1_2ab0b to i32*
  %v3_2ab14 = load i32, i32* %v2_2ab0b, align 4
  ret i32 %v3_2ab14
}

define i32 @function_2ab18(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab18:
  %v0_2ab18 = load i32, i32* @eax, align 8
  %v2_2ab19 = load i1, i1* @cf, align 1
  %v3_2ab19 = zext i1 %v2_2ab19 to i32
  %v4_2ab19 = add i32 %v0_2ab18, 139
  %v5_2ab19 = add i32 %v4_2ab19, %v3_2ab19
  %v25_2ab19 = urem i32 %v5_2ab19, 256
  %v27_2ab19 = and i32 %v0_2ab18, -256
  %v28_2ab19 = or i32 %v25_2ab19, %v27_2ab19
  %v0_2ab1b = load i32, i32* @ebp, align 4
  %v1_2ab1b = add i32 %v0_2ab1b, 1
  store i32 %v1_2ab1b, i32* @ebp, align 4
  %v3_2ab1d = xor i32 %v28_2ab19, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ab1d = icmp eq i32 %v3_2ab1d, 0
  store i32 %v3_2ab1d, i32* @eax, align 8
  br i1 %v4_2ab1d, label %bb, label %dec_label_pc_2ab26

bb:                                               ; preds = %dec_label_pc_2ab18
  %v2_2ab24 = call i32 @function_2ab2b(i32 %v0_2ab18)
  br label %dec_label_pc_2ab26

dec_label_pc_2ab26:                               ; preds = %bb, %dec_label_pc_2ab18
  %v3_2ab24 = phi i32 [ %v2_2ab24, %bb ], [ %v3_2ab1d, %dec_label_pc_2ab18 ]
  ret i32 %v3_2ab24

; uselistorder directives
  uselistorder i32 %v0_2ab18, { 1, 2, 0 }
}

define i32 @function_2ab2b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab2b:
  %v0_2ab2c = load i32, i32* @eax, align 8
  ret i32 %v0_2ab2c
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEclERKSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ab2e:
  ret i32 %arg1
}

define i32 @function_2ab3b() local_unnamed_addr {
dec_label_pc_2ab3b:
  %eax.global-to-local = alloca i32, align 4
  %v15_2ab3b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_2ab3b
}

define i32 @function_2ab5e() local_unnamed_addr {
dec_label_pc_2ab5e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ab5e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ab5e = add i32 %v0_2ab5e, -1
  store i32 %v1_2ab5e, i32* %ecx.global-to-local, align 4
  %v0_2ab60 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ab60
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2ab62:
  %stack_var_-18 = alloca i32, align 4
  %v10_2ab92 = icmp eq i32 %arg3, 0
  %v1_2ab96 = icmp eq i1 %v10_2ab92, false
  br i1 %v1_2ab96, label %dec_label_pc_2abea, label %dec_label_pc_2ab98

dec_label_pc_2ab98:                               ; preds = %dec_label_pc_2ab62
  %v1_2ab9e = call i32 @unknown_5006c(i32 %arg2)
  %v15_2aba3 = icmp eq i32 %v1_2ab9e, %arg4
  br i1 %v15_2aba3, label %dec_label_pc_2abea, label %dec_label_pc_2aba8

dec_label_pc_2aba8:                               ; preds = %dec_label_pc_2ab98
  %v1_2abae = call i32 @unknown_55851(i32 %arg4)
  %v2_2abbc = ptrtoint i32* %stack_var_-18 to i32
  %v2_2abc2 = call i32 @unknown_55690(i32 %v2_2abbc, i32 %arg5)
  %v3_2abd5 = call i32 @unknown_4c2a2(i32 %arg2, i32 %v2_2abc2, i32 %v1_2abae)
  %v4_2abda = trunc i32 %v3_2abd5 to i8
  %v5_2abda = icmp ne i8 %v4_2abda, 0
  %phitmp = zext i1 %v5_2abda to i32
  br label %dec_label_pc_2abea

dec_label_pc_2abea:                               ; preds = %dec_label_pc_2aba8, %dec_label_pc_2ab62, %dec_label_pc_2ab98
  %storemerge = phi i32 [ 1, %dec_label_pc_2ab98 ], [ 1, %dec_label_pc_2ab62 ], [ %phitmp, %dec_label_pc_2aba8 ]
  %v2_2abfa = call i32 @unknown_595aa(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2abea, { 0, 2, 1 }
}

define x86_fp80 @function_2ac12(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ac12:
  %v1_2ac12 = load i32, i32* @ecx, align 4
  %v2_2ac12 = add i32 %v1_2ac12, -1962400684
  %v3_2ac12 = inttoptr i32 %v2_2ac12 to float*
  %v4_2ac12 = load float, float* %v3_2ac12, align 4
  %v5_2ac12 = fpext float %v4_2ac12 to x86_fp80
  %v6_2ac12 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2ac12 = fmul x86_fp80 %v5_2ac12, %v6_2ac12
  ret x86_fp80 %v7_2ac12

; uselistorder directives
  uselistorder i32 -1962400684, { 1, 0 }
}

define i32 @function_2ac5a() local_unnamed_addr {
dec_label_pc_2ac5a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2ac5a = load i32, i32* %ebx.global-to-local, align 8
  %v1_2ac5a = add i32 %v0_2ac5a, 1566262468
  %v2_2ac5a = inttoptr i32 %v1_2ac5a to i32*
  %v3_2ac5a = load i32, i32* %v2_2ac5a, align 4
  %v4_2ac5a = add i32 %v3_2ac5a, 1
  store i32 %v4_2ac5a, i32* %v2_2ac5a, align 4
  %v0_2ac60 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ac60
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEbEC1ERKSO_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ac64:
  %tmp103 = inttoptr i32 %arg3 to i8*
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v1_2ac8d = inttoptr i32 %arg2 to i32*
  %v2_2ac8d = load i32, i32* %v1_2ac8d, align 4
  store i32 %v2_2ac8d, i32* %arg1, align 4
  %v2_2ac94 = load i8, i8* %tmp103, align 1
  %v3_2ac9a = add i32 %tmp108, 4
  %v4_2ac9a = inttoptr i32 %v3_2ac9a to i8*
  store i8 %v2_2ac94, i8* %v4_2ac9a, align 1
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2aca6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aca6:
  %v0_2aca6 = load i32, i32* @ebp, align 4
  %v1_2aca6 = load i32, i32* @eax, align 8
  %v3_2aca6 = add i32 %v0_2aca6, -24
  %v4_2aca6 = add i32 %v3_2aca6, %v1_2aca6
  %v5_2aca6 = inttoptr i32 %v4_2aca6 to i8*
  %v6_2aca6 = load i8, i8* %v5_2aca6, align 1
  %v7_2aca6 = load i32, i32* @edx, align 8
  %v8_2aca6 = udiv i32 %v7_2aca6, 256
  %v9_2aca6 = trunc i32 %v8_2aca6 to i8
  %v10_2aca6 = add i8 %v9_2aca6, %v6_2aca6
  store i8 %v10_2aca6, i8* %v5_2aca6, align 1
  %v31_2aca6 = load i32, i32* @eax, align 8
  ret i32 %v31_2aca6
}

define i32 @function_2acad() local_unnamed_addr {
dec_label_pc_2acad:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2acad = load i32, i32* %ecx.global-to-local, align 4
  %v1_2acad = add i32 %v0_2acad, -1
  store i32 %v1_2acad, i32* %ecx.global-to-local, align 4
  %v0_2acaf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2acaf
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2acb0:
  %v2_2acca = load i32, i32* %arg1, align 4
  ret i32 %v2_2acca
}

define i32 @function_2acd3() local_unnamed_addr {
dec_label_pc_2acd3:
  %v0_2acd3 = load i32, i32* @ebx, align 8
  %v1_2acd3 = add i32 %v0_2acd3, 42591317
  %v2_2acd3 = inttoptr i32 %v1_2acd3 to i32*
  %v3_2acd3 = load i32, i32* %v2_2acd3, align 4
  %v4_2acd3 = add i32 %v3_2acd3, -1
  store i32 %v4_2acd3, i32* %v2_2acd3, align 4
  %v0_2acd9 = load i32, i32* @ebp, align 4
  %v1_2acd9 = add i32 %v0_2acd9, -28
  %v2_2acd9 = inttoptr i32 %v1_2acd9 to i32*
  %v3_2acd9 = load i32, i32* %v2_2acd9, align 4
  store i32 %v3_2acd9, i32* @eax, align 8
  %v1_2acdc = add i32 %v0_2acd9, -12
  %v2_2acdc = inttoptr i32 %v1_2acdc to i32*
  %v3_2acdc = load i32, i32* %v2_2acdc, align 4
  store i1 false, i1* @cf, align 1
  %v4_2acdf = icmp eq i32 %v3_2acdc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2acdf, label %bb, label %dec_label_pc_2ace8

bb:                                               ; preds = %dec_label_pc_2acd3
  %v1_2ace6 = call i32 @function_2aced()
  br label %dec_label_pc_2ace8

dec_label_pc_2ace8:                               ; preds = %bb, %dec_label_pc_2acd3
  %v2_2ace6 = phi i32 [ %v1_2ace6, %bb ], [ %v3_2acd9, %dec_label_pc_2acd3 ]
  ret i32 %v2_2ace6
}

define i32 @function_2aced() local_unnamed_addr {
dec_label_pc_2aced:
  %v0_2acee = load i32, i32* @eax, align 8
  ret i32 %v0_2acee
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2acef:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ad0c = call i32 @unknown_59805(i32 %arg1)
  %v2_2ad15 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2ad1b = call i32 @unknown_5581d(i32 %v2_2ad15, i32 %v1_2ad0c)
  store i32 %v2_2ad1b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ad2c

bb:                                               ; preds = %dec_label_pc_2acef
  %v1_2ad2a = call i32 @function_2ad31()
  br label %dec_label_pc_2ad2c

dec_label_pc_2ad2c:                               ; preds = %bb, %dec_label_pc_2acef
  %v2_2ad2a = phi i32 [ %v1_2ad2a, %bb ], [ %v2_2ad1b, %dec_label_pc_2acef ]
  ret i32 %v2_2ad2a
}

define i32 @function_2ad31() local_unnamed_addr {
dec_label_pc_2ad31:
  %v0_2ad32 = load i32, i32* @eax, align 8
  ret i32 %v0_2ad32
}

define i32 @_ZNK5boost8signals26detail21lock_weak_ptr_visitorclINS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKT_() local_unnamed_addr {
dec_label_pc_2ad34:
  %eax.global-to-local = alloca i32, align 4
  %v5_2ad37 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2ad37
}

define i32 @function_2ad3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ad3a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ad3a = load i32, i32* @eax, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_2ad3a = xor i32 %v0_2ad3a, 139
  store i32 %v11_2ad3a, i32* %eax.global-to-local, align 8
  %v0_2ad3c = load i32, i32* @ebp, align 4
  %v1_2ad3c = add i32 %v0_2ad3c, 1
  store i32 %v1_2ad3c, i32* %ebp.global-to-local, align 4
  %v0_2ad3d = load i32, i32* @ecx, align 4
  %v1_2ad3d = add i32 %v0_2ad3d, 1166795845
  %v2_2ad3d = inttoptr i32 %v1_2ad3d to i8*
  %v3_2ad3d = load i8, i8* %v2_2ad3d, align 1
  %v5_2ad3d = trunc i32 %v0_2ad3d to i8
  %v6_2ad3d = or i8 %v3_2ad3d, %v5_2ad3d
  store i8 %v6_2ad3d, i8* %v2_2ad3d, align 1
  %v0_2ad43 = load i32, i32* %eax.global-to-local, align 8
  %v2_2ad43 = or i32 %v0_2ad43, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2ad43, i32* %eax.global-to-local, align 8
  %v0_2ad45 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2ad45 = add i32 %v0_2ad45, 1
  %v9_2ad45 = icmp eq i32 %v1_2ad45, 0
  store i32 %v1_2ad45, i32* @ebp, align 4
  %v0_2ad46 = load i32, i32* @ecx, align 4
  %v1_2ad46 = add i32 %v0_2ad46, -1
  store i32 %v1_2ad46, i32* %ecx.global-to-local, align 4
  %v2_2ad46 = icmp eq i32 %v1_2ad46, 0
  %v4_2ad46 = or i1 %v9_2ad45, %v2_2ad46
  br i1 %v4_2ad46, label %dec_label_pc_2ad48, label %bb

bb:                                               ; preds = %dec_label_pc_2ad3a
  %v6_2ad46 = call i32 @function_2acd3()
  store i32 %v6_2ad46, i32* %eax.global-to-local, align 8
  %v0_2ad48.pre = load i32, i32* @ebp, align 4
  %v0_2ad49.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_2ad49.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_2ad48

dec_label_pc_2ad48:                               ; preds = %dec_label_pc_2ad3a, %bb
  %v6_2ad49 = phi i1 [ false, %dec_label_pc_2ad3a ], [ %v6_2ad49.pre, %bb ]
  %v30_2ad49 = phi i32 [ %v1_2ad46, %dec_label_pc_2ad3a ], [ %v0_2ad49.pre, %bb ]
  %v0_2ad48 = phi i32 [ %v1_2ad45, %dec_label_pc_2ad3a ], [ %v0_2ad48.pre, %bb ]
  %v1_2ad48 = add i32 %v0_2ad48, 1
  store i32 %v1_2ad48, i32* @ebp, align 4
  %v1_2ad49 = add i32 %v30_2ad49, -1587159995
  %v2_2ad49 = inttoptr i32 %v1_2ad49 to i8*
  %v3_2ad49 = load i8, i8* %v2_2ad49, align 1
  %v5_2ad49 = trunc i32 %v30_2ad49 to i8
  %v7_2ad49 = zext i1 %v6_2ad49 to i8
  %v8_2ad49 = add i8 %v3_2ad49, %v5_2ad49
  %v9_2ad49 = add i8 %v8_2ad49, %v7_2ad49
  %v27_2ad49 = icmp ule i8 %v9_2ad49, %v3_2ad49
  %v28_2ad49 = icmp ult i8 %v8_2ad49, %v3_2ad49
  %v29_2ad49 = select i1 %v6_2ad49, i1 %v27_2ad49, i1 %v28_2ad49
  store i1 %v29_2ad49, i1* %cf.global-to-local, align 1
  store i8 %v9_2ad49, i8* %v2_2ad49, align 1
  %v0_2ad4f = load i32, i32* %eax.global-to-local, align 8
  %v1_2ad4f = trunc i32 %v0_2ad4f to i8
  %v2_2ad4f = load i1, i1* %cf.global-to-local, align 1
  %v3_2ad4f = zext i1 %v2_2ad4f to i8
  %v4_2ad4f = add i8 %v3_2ad4f, %v1_2ad4f
  %v19_2ad4f = icmp ule i8 %v4_2ad4f, %v1_2ad4f
  %v21_2ad4f = icmp eq i1 %v2_2ad4f, %v19_2ad4f
  store i1 %v21_2ad4f, i1* %cf.global-to-local, align 1
  %v22_2ad4f = zext i8 %v4_2ad4f to i32
  %v24_2ad4f = and i32 %v0_2ad4f, -256
  %v25_2ad4f = or i32 %v22_2ad4f, %v24_2ad4f
  store i32 %v25_2ad4f, i32* %eax.global-to-local, align 8
  %v1_2ad51 = inttoptr i32 %v25_2ad4f to i8*
  %v2_2ad51 = load i8, i8* %v1_2ad51, align 1
  %v5_2ad51 = add i8 %v2_2ad51, %v4_2ad4f
  store i8 %v5_2ad51, i8* %v1_2ad51, align 1
  %v0_2ad53 = load i32, i32* %eax.global-to-local, align 8
  %v1_2ad53 = load i32, i32* @ebp, align 4
  %v2_2ad53 = add i32 %v1_2ad53, -12
  %v3_2ad53 = inttoptr i32 %v2_2ad53 to i32*
  store i32 %v0_2ad53, i32* %v3_2ad53, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_2ad58 = load i32, i32* @ebp, align 4
  %v1_2ad58 = add i32 %v0_2ad58, -20
  store i32 %v1_2ad58, i32* %eax.global-to-local, align 8
  %v1_2ad5b = add i32 %v0_2ad58, -36
  %v2_2ad5b = inttoptr i32 %v1_2ad5b to i32*
  %v3_2ad5b = load i32, i32* %v2_2ad5b, align 4
  %v2_2ad65 = call i32 @unknown_3b980(i32 %v1_2ad58, i32 %v3_2ad5b)
  %v0_2ad6a = load i32, i32* @esp, align 4
  %v5_2ad6a = icmp ult i32 %v0_2ad6a, 4
  store i1 %v5_2ad6a, i1* %cf.global-to-local, align 1
  %v0_2ad6d = load i32, i32* @ebp, align 4
  %v1_2ad6d = add i32 %v0_2ad6d, -20
  store i32 %v1_2ad6d, i32* %eax.global-to-local, align 8
  %v1_2ad74 = add i32 %v0_2ad6d, -28
  %v2_2ad74 = inttoptr i32 %v1_2ad74 to i32*
  %v3_2ad74 = load i32, i32* %v2_2ad74, align 4
  store i32 %v3_2ad74, i32* %eax.global-to-local, align 8
  %v2_2ad7a = call i32 @unknown_5987a(i32 %v3_2ad74, i32 %v1_2ad6d)
  %v0_2ad7f = load i32, i32* @ebp, align 4
  %v1_2ad7f = add i32 %v0_2ad7f, -20
  store i32 %v1_2ad7f, i32* %eax.global-to-local, align 8
  %v1_2ad85 = call i32 @unknown_3991a(i32 %v1_2ad7f)
  store i32 %v1_2ad85, i32* %eax.global-to-local, align 8
  %v0_2ad8a = load i32, i32* @ebp, align 4
  %v1_2ad8a = add i32 %v0_2ad8a, -28
  %v2_2ad8a = inttoptr i32 %v1_2ad8a to i32*
  %v3_2ad8a = load i32, i32* %v2_2ad8a, align 4
  store i32 %v3_2ad8a, i32* @eax, align 8
  %v1_2ad8d = add i32 %v0_2ad8a, -12
  %v2_2ad8d = inttoptr i32 %v1_2ad8d to i32*
  %v3_2ad8d = load i32, i32* %v2_2ad8d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_2ad90 = icmp eq i32 %v3_2ad8d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2ad90, label %bb11, label %dec_label_pc_2ad99

bb11:                                             ; preds = %dec_label_pc_2ad48
  %v1_2ad97 = call i32 @function_2adb7()
  store i32 %v1_2ad97, i32* @eax, align 8
  br label %dec_label_pc_2ad99

dec_label_pc_2ad99:                               ; preds = %bb11, %dec_label_pc_2ad48
  %v0_2ad99 = call i32 @function_2adb2()
  store i32 %v0_2ad99, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ad99

; uselistorder directives
  uselistorder i8 %v4_2ad4f, { 0, 2, 1 }
  uselistorder i8 %v1_2ad4f, { 1, 0 }
  uselistorder i8 %v9_2ad49, { 1, 0 }
  uselistorder i8 %v8_2ad49, { 1, 0 }
  uselistorder i8 %v3_2ad49, { 1, 2, 0 }
  uselistorder i32 %v30_2ad49, { 1, 0 }
  uselistorder i1 %v6_2ad49, { 1, 0 }
  uselistorder i32 %v1_2ad46, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12 }
  uselistorder label %dec_label_pc_2ad48, { 1, 0 }
}

define i32 @function_2ad9c() local_unnamed_addr {
dec_label_pc_2ad9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ad9c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ad9c
}

define i32 @function_2ada5() local_unnamed_addr {
dec_label_pc_2ada5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ada7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ada7 = add i32 %v0_2ada7, 604277208
  %v2_2ada7 = inttoptr i32 %v1_2ada7 to i8*
  %v3_2ada7 = load i8, i8* %v2_2ada7, align 1
  %v5_2ada7 = trunc i32 %v0_2ada7 to i8
  %v6_2ada7 = add i8 %v3_2ada7, %v5_2ada7
  store i8 %v6_2ada7, i8* %v2_2ada7, align 1
  %v24_2ada7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v24_2ada7
}

define i32 @function_2adb2() local_unnamed_addr {
dec_label_pc_2adb2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2adb7() local_unnamed_addr {
dec_label_pc_2adb7:
  %v0_2adbb = load i32, i32* @eax, align 8
  ret i32 %v0_2adbb
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8weak_ptrIvEEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2adbe:
  %v2_2add8 = load i32, i32* %arg1, align 4
  store i32 %v2_2add8, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ade6

bb:                                               ; preds = %dec_label_pc_2adbe
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2ade4 = call i32 @function_2adeb(i32 %tmp100)
  br label %dec_label_pc_2ade6

dec_label_pc_2ade6:                               ; preds = %bb, %dec_label_pc_2adbe
  %v3_2ade4 = phi i32 [ %v2_2ade4, %bb ], [ %v2_2add8, %dec_label_pc_2adbe ]
  ret i32 %v3_2ade4

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2adeb(i32 %arg1) local_unnamed_addr {
dec_label_pc_2adeb:
  %v0_2adec = load i32, i32* @eax, align 8
  ret i32 %v0_2adec
}

define i32 @_ZNK5boost8signals26detail21lock_weak_ptr_visitorclINS1_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EERKT_() local_unnamed_addr {
dec_label_pc_2adee:
  %eax.global-to-local = alloca i32, align 4
  %v17_2adf2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2adf2
}

define i32 @function_2adf6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2adf6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2adf6 = load i32, i32* @ebp, align 4
  %v1_2adf6 = add i32 %v0_2adf6, 1
  store i32 %v1_2adf6, i32* %ebp.global-to-local, align 4
  %v0_2adf7 = load i32, i32* @ecx, align 4
  %v1_2adf7 = add i32 %v0_2adf7, 1166795845
  %v2_2adf7 = inttoptr i32 %v1_2adf7 to i8*
  %v3_2adf7 = load i8, i8* %v2_2adf7, align 1
  %v5_2adf7 = trunc i32 %v0_2adf7 to i8
  %v6_2adf7 = or i8 %v3_2adf7, %v5_2adf7
  store i8 %v6_2adf7, i8* %v2_2adf7, align 1
  %v0_2adfd = load i32, i32* @eax, align 8
  %v2_2adfd = or i32 %v0_2adfd, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2adfd, i32* %eax.global-to-local, align 8
  %v0_2adff = load i32, i32* %ebp.global-to-local, align 4
  %v0_2ae00 = load i32, i32* @ecx, align 4
  %v1_2ae00 = add i32 %v0_2ae00, 255
  %v1_2ae02 = add i32 %v0_2adff, 2
  store i32 %v1_2ae02, i32* @ebp, align 4
  %v1_2ae03 = add i32 %v0_2ae00, -1587159996
  %v2_2ae03 = inttoptr i32 %v1_2ae03 to i8*
  %v3_2ae03 = load i8, i8* %v2_2ae03, align 1
  %v5_2ae03 = trunc i32 %v1_2ae00 to i8
  %v8_2ae03 = add i8 %v3_2ae03, %v5_2ae03
  %v28_2ae03 = icmp ult i8 %v8_2ae03, %v3_2ae03
  store i1 %v28_2ae03, i1* %cf.global-to-local, align 1
  store i8 %v8_2ae03, i8* %v2_2ae03, align 1
  %v0_2ae09 = load i32, i32* %eax.global-to-local, align 8
  %v1_2ae09 = trunc i32 %v0_2ae09 to i8
  %v2_2ae09 = load i1, i1* %cf.global-to-local, align 1
  %v3_2ae09 = zext i1 %v2_2ae09 to i8
  %v4_2ae09 = add i8 %v3_2ae09, %v1_2ae09
  %v19_2ae09 = icmp ule i8 %v4_2ae09, %v1_2ae09
  %v21_2ae09 = icmp eq i1 %v2_2ae09, %v19_2ae09
  store i1 %v21_2ae09, i1* %cf.global-to-local, align 1
  %v22_2ae09 = zext i8 %v4_2ae09 to i32
  %v24_2ae09 = and i32 %v0_2ae09, -256
  %v25_2ae09 = or i32 %v22_2ae09, %v24_2ae09
  store i32 %v25_2ae09, i32* %eax.global-to-local, align 8
  %v1_2ae0b = inttoptr i32 %v25_2ae09 to i8*
  %v2_2ae0b = load i8, i8* %v1_2ae0b, align 1
  %v5_2ae0b = add i8 %v2_2ae0b, %v4_2ae09
  store i8 %v5_2ae0b, i8* %v1_2ae0b, align 1
  %v0_2ae0d = load i32, i32* %eax.global-to-local, align 8
  %v1_2ae0d = load i32, i32* @ebp, align 4
  %v2_2ae0d = add i32 %v1_2ae0d, -12
  %v3_2ae0d = inttoptr i32 %v2_2ae0d to i32*
  store i32 %v0_2ae0d, i32* %v3_2ae0d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_2ae12 = load i32, i32* @ebp, align 4
  %v1_2ae12 = add i32 %v0_2ae12, -16
  store i32 %v1_2ae12, i32* %eax.global-to-local, align 8
  %v1_2ae15 = add i32 %v0_2ae12, -36
  %v2_2ae15 = inttoptr i32 %v1_2ae15 to i32*
  %v3_2ae15 = load i32, i32* %v2_2ae15, align 4
  %v2_2ae1f = call i32 @unknown_39808(i32 %v1_2ae12, i32 %v3_2ae15)
  %v0_2ae24 = load i32, i32* @esp, align 4
  %v5_2ae24 = icmp ult i32 %v0_2ae24, 4
  store i1 %v5_2ae24, i1* %cf.global-to-local, align 1
  %v0_2ae27 = load i32, i32* @ebp, align 4
  %v1_2ae27 = add i32 %v0_2ae27, -16
  store i32 %v1_2ae27, i32* %eax.global-to-local, align 8
  %v1_2ae2e = add i32 %v0_2ae27, -28
  %v2_2ae2e = inttoptr i32 %v1_2ae2e to i32*
  %v3_2ae2e = load i32, i32* %v2_2ae2e, align 4
  store i32 %v3_2ae2e, i32* %eax.global-to-local, align 8
  %v2_2ae34 = call i32 @unknown_599b2(i32 %v3_2ae2e, i32 %v1_2ae27)
  %v0_2ae39 = load i32, i32* @ebp, align 4
  %v1_2ae39 = add i32 %v0_2ae39, -16
  store i32 %v1_2ae39, i32* %eax.global-to-local, align 8
  %v1_2ae3f = call i32 @unknown_39730(i32 %v1_2ae39)
  store i32 %v1_2ae3f, i32* %eax.global-to-local, align 8
  %v0_2ae44 = load i32, i32* @ebp, align 4
  %v1_2ae44 = add i32 %v0_2ae44, -28
  %v2_2ae44 = inttoptr i32 %v1_2ae44 to i32*
  %v3_2ae44 = load i32, i32* %v2_2ae44, align 4
  store i32 %v3_2ae44, i32* @eax, align 8
  %v1_2ae47 = add i32 %v0_2ae44, -12
  %v2_2ae47 = inttoptr i32 %v1_2ae47 to i32*
  %v3_2ae47 = load i32, i32* %v2_2ae47, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_2ae4a = icmp eq i32 %v3_2ae47, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2ae4a, label %bb, label %dec_label_pc_2ae53

bb:                                               ; preds = %dec_label_pc_2adf6
  %v1_2ae51 = call i32 @function_2ae71()
  store i32 %v1_2ae51, i32* @eax, align 8
  br label %dec_label_pc_2ae53

dec_label_pc_2ae53:                               ; preds = %bb, %dec_label_pc_2adf6
  %v0_2ae53 = call i32 @function_2ae6c()
  store i32 %v0_2ae53, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ae53

; uselistorder directives
  uselistorder i8 %v4_2ae09, { 0, 2, 1 }
  uselistorder i8 %v1_2ae09, { 1, 0 }
  uselistorder i8 %v3_2ae03, { 1, 0 }
}

define i32 @function_2ae56() local_unnamed_addr {
dec_label_pc_2ae56:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ae56 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ae56
}

define i32 @function_2ae6c() local_unnamed_addr {
dec_label_pc_2ae6c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ae71() local_unnamed_addr {
dec_label_pc_2ae71:
  %v0_2ae75 = load i32, i32* @eax, align 8
  ret i32 %v0_2ae75
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8signals26detail21foreign_void_weak_ptrEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ae78:
  %v2_2ae92 = load i32, i32* %arg1, align 4
  store i32 %v2_2ae92, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2aea0

bb:                                               ; preds = %dec_label_pc_2ae78
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2ae9e = call i32 @function_2aea5(i32 %tmp100)
  br label %dec_label_pc_2aea0

dec_label_pc_2aea0:                               ; preds = %bb, %dec_label_pc_2ae78
  %v3_2ae9e = phi i32 [ %v2_2ae9e, %bb ], [ %v2_2ae92, %dec_label_pc_2ae78 ]
  ret i32 %v3_2ae9e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2aea5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aea5:
  %v0_2aea6 = load i32, i32* @eax, align 8
  ret i32 %v0_2aea6
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_10shared_ptrIvEEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2aea8:
  %v2_2aec2 = load i32, i32* %arg1, align 4
  store i32 %v2_2aec2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2aed0

bb:                                               ; preds = %dec_label_pc_2aea8
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2aece = call i32 @function_2aed5(i32 %tmp100)
  br label %dec_label_pc_2aed0

dec_label_pc_2aed0:                               ; preds = %bb, %dec_label_pc_2aea8
  %v3_2aece = phi i32 [ %v2_2aece, %bb ], [ %v2_2aec2, %dec_label_pc_2aea8 ]
  ret i32 %v3_2aece

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2aed5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aed5:
  %v0_2aed6 = load i32, i32* @eax, align 8
  ret i32 %v0_2aed6
}

define i32 @_ZNK5boost6detail7variant13backup_holderINS_8signals26detail23foreign_void_shared_ptrEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2aed8:
  %v2_2aef2 = load i32, i32* %arg1, align 4
  store i32 %v2_2aef2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2af00

bb:                                               ; preds = %dec_label_pc_2aed8
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2aefe = call i32 @function_2af05(i32 %tmp100)
  br label %dec_label_pc_2af00

dec_label_pc_2af00:                               ; preds = %bb, %dec_label_pc_2aed8
  %v3_2aefe = phi i32 [ %v2_2aefe, %bb ], [ %v2_2aef2, %dec_label_pc_2aed8 ]
  ret i32 %v3_2aefe

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2af05(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af05:
  %v0_2af06 = load i32, i32* @eax, align 8
  ret i32 %v0_2af06
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_10shared_ptrIvEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2af08:
  %v2_2af23 = load i32, i32* %arg1, align 4
  %v1_2af25 = icmp eq i32 %v2_2af23, 0
  br i1 %v1_2af25, label %bb, label %dec_label_pc_2af29

bb:                                               ; preds = %dec_label_pc_2af08
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2af27 = call i32 @function_2af39(i32 %tmp100)
  br label %dec_label_pc_2af29

dec_label_pc_2af29:                               ; preds = %bb, %dec_label_pc_2af08
  %v1_2af2c = call i32 @unknown_39aee(i32 %v2_2af23)
  ret i32 %v1_2af2c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2af39(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af39:
  %v0_2af39 = load i32, i32* @ebp, align 4
  %v1_2af39 = add i32 %v0_2af39, -12
  %v2_2af39 = inttoptr i32 %v1_2af39 to i32*
  %v3_2af39 = load i32, i32* %v2_2af39, align 4
  %v3_2af3c = xor i32 %v3_2af39, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2af3c = icmp eq i32 %v3_2af3c, 0
  store i32 %v3_2af3c, i32* @eax, align 8
  br i1 %v4_2af3c, label %bb, label %dec_label_pc_2af45

bb:                                               ; preds = %dec_label_pc_2af39
  %v1_2af43 = call i32 @function_2af4a()
  br label %dec_label_pc_2af45

dec_label_pc_2af45:                               ; preds = %bb, %dec_label_pc_2af39
  %v2_2af43 = phi i32 [ %v1_2af43, %bb ], [ %v3_2af3c, %dec_label_pc_2af39 ]
  ret i32 %v2_2af43
}

define i32 @function_2af4a() local_unnamed_addr {
dec_label_pc_2af4a:
  %v0_2af4f = load i32, i32* @eax, align 8
  ret i32 %v0_2af4f
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_8signals26detail23foreign_void_shared_ptrEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2af50:
  %v2_2af6b = load i32, i32* %arg1, align 4
  %v1_2af6d = icmp eq i32 %v2_2af6b, 0
  br i1 %v1_2af6d, label %bb, label %dec_label_pc_2af71

bb:                                               ; preds = %dec_label_pc_2af50
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2af6f = call i32 @function_2af81(i32 %tmp100)
  br label %dec_label_pc_2af71

dec_label_pc_2af71:                               ; preds = %bb, %dec_label_pc_2af50
  %v1_2af74 = call i32 @unknown_39892(i32 %v2_2af6b)
  ret i32 %v1_2af74

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2af81(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af81:
  %v0_2af81 = load i32, i32* @ebp, align 4
  %v1_2af81 = add i32 %v0_2af81, -12
  %v2_2af81 = inttoptr i32 %v1_2af81 to i32*
  %v3_2af81 = load i32, i32* %v2_2af81, align 4
  %v3_2af84 = xor i32 %v3_2af81, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2af84 = icmp eq i32 %v3_2af84, 0
  store i32 %v3_2af84, i32* @eax, align 8
  br i1 %v4_2af84, label %bb, label %dec_label_pc_2af8d

bb:                                               ; preds = %dec_label_pc_2af81
  %v1_2af8b = call i32 @function_2af92()
  br label %dec_label_pc_2af8d

dec_label_pc_2af8d:                               ; preds = %bb, %dec_label_pc_2af81
  %v2_2af8b = phi i32 [ %v1_2af8b, %bb ], [ %v3_2af84, %dec_label_pc_2af81 ]
  ret i32 %v2_2af8b
}

define i32 @function_2af92() local_unnamed_addr {
dec_label_pc_2af92:
  %v0_2af97 = load i32, i32* @eax, align 8
  ret i32 %v0_2af97
}

define i32 @_ZNK5boost8signals26detail24expired_weak_ptr_visitorclINS_8weak_ptrIvEEEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2af98:
  %v1_2afbb = call i32 @unknown_3bc30(i32 %arg2)
  store i32 %v1_2afbb, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2afcc

bb:                                               ; preds = %dec_label_pc_2af98
  %v1_2afca = call i32 @function_2afd1()
  br label %dec_label_pc_2afcc

dec_label_pc_2afcc:                               ; preds = %bb, %dec_label_pc_2af98
  %v2_2afca = phi i32 [ %v1_2afca, %bb ], [ %v1_2afbb, %dec_label_pc_2af98 ]
  ret i32 %v2_2afca
}

define i32 @function_2afd1() local_unnamed_addr {
dec_label_pc_2afd1:
  %v0_2afd2 = load i32, i32* @eax, align 8
  ret i32 %v0_2afd2
}

define i32 @_ZNK5boost8signals26detail24expired_weak_ptr_visitorclINS1_21foreign_void_weak_ptrEEEbRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2afd4:
  %v1_2aff7 = call i32 @unknown_39a44(i32 %arg2)
  store i32 %v1_2aff7, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b008

bb:                                               ; preds = %dec_label_pc_2afd4
  %v1_2b006 = call i32 @function_2b00d()
  br label %dec_label_pc_2b008

dec_label_pc_2b008:                               ; preds = %bb, %dec_label_pc_2afd4
  %v2_2b006 = phi i32 [ %v1_2b006, %bb ], [ %v1_2aff7, %dec_label_pc_2afd4 ]
  ret i32 %v2_2b006
}

define i32 @function_2b00d() local_unnamed_addr {
dec_label_pc_2b00d:
  %v0_2b00e = load i32, i32* @eax, align 8
  ret i32 %v0_2b00e
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_8weak_ptrIvEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b010:
  ret i32 0
}

define i32 @function_2b028(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_2b028:
  %v0_2b028 = load i32, i32* @ebp, align 4
  %v1_2b028 = add i32 %v0_2b028, -28
  %v2_2b028 = inttoptr i32 %v1_2b028 to i32*
  %v3_2b028 = load i32, i32* %v2_2b028, align 4
  %v1_2b02b = inttoptr i32 %v3_2b028 to i32*
  %v2_2b02b = load i32, i32* %v1_2b02b, align 4
  %v1_2b02d = icmp eq i32 %v2_2b02b, 0
  br i1 %v1_2b02d, label %bb, label %dec_label_pc_2b031

bb:                                               ; preds = %dec_label_pc_2b028
  %v1_2b02f = call i32 @function_2b041()
  br label %dec_label_pc_2b031

dec_label_pc_2b031:                               ; preds = %bb, %dec_label_pc_2b028
  %v1_2b034 = call i32 @unknown_39c66(i32 %v2_2b02b)
  ret i32 %v1_2b034
}

define i32 @function_2b041() local_unnamed_addr {
dec_label_pc_2b041:
  %v0_2b041 = load i32, i32* @ebp, align 4
  %v1_2b041 = add i32 %v0_2b041, -12
  %v2_2b041 = inttoptr i32 %v1_2b041 to i32*
  %v3_2b041 = load i32, i32* %v2_2b041, align 4
  %v3_2b044 = xor i32 %v3_2b041, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b044 = icmp eq i32 %v3_2b044, 0
  store i32 %v3_2b044, i32* @eax, align 8
  br i1 %v4_2b044, label %bb, label %dec_label_pc_2b04d

bb:                                               ; preds = %dec_label_pc_2b041
  %v1_2b04b = call i32 @function_2b052()
  br label %dec_label_pc_2b04d

dec_label_pc_2b04d:                               ; preds = %bb, %dec_label_pc_2b041
  %v2_2b04b = phi i32 [ %v1_2b04b, %bb ], [ %v3_2b044, %dec_label_pc_2b041 ]
  ret i32 %v2_2b04b
}

define i32 @function_2b052() local_unnamed_addr {
dec_label_pc_2b052:
  %v0_2b057 = load i32, i32* @eax, align 8
  ret i32 %v0_2b057
}

define i32 @_ZN5boost6detail7variant13backup_holderINS_8signals26detail21foreign_void_weak_ptrEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b058:
  %v2_2b073 = load i32, i32* %arg1, align 4
  %v1_2b075 = icmp eq i32 %v2_2b073, 0
  br i1 %v1_2b075, label %bb, label %dec_label_pc_2b079

bb:                                               ; preds = %dec_label_pc_2b058
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2b077 = call i32 @function_2b089(i32 %tmp100)
  br label %dec_label_pc_2b079

dec_label_pc_2b079:                               ; preds = %bb, %dec_label_pc_2b058
  %v1_2b07c = call i32 @unknown_39a3c(i32 %v2_2b073)
  ret i32 %v1_2b07c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2b089(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b089:
  %v0_2b089 = load i32, i32* @ebp, align 4
  %v1_2b089 = add i32 %v0_2b089, -12
  %v2_2b089 = inttoptr i32 %v1_2b089 to i32*
  %v3_2b089 = load i32, i32* %v2_2b089, align 4
  %v3_2b08c = xor i32 %v3_2b089, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b08c = icmp eq i32 %v3_2b08c, 0
  store i32 %v3_2b08c, i32* @eax, align 8
  br i1 %v4_2b08c, label %bb, label %dec_label_pc_2b095

bb:                                               ; preds = %dec_label_pc_2b089
  %v1_2b093 = call i32 @function_2b09a()
  br label %dec_label_pc_2b095

dec_label_pc_2b095:                               ; preds = %bb, %dec_label_pc_2b089
  %v2_2b093 = phi i32 [ %v1_2b093, %bb ], [ %v3_2b08c, %dec_label_pc_2b089 ]
  ret i32 %v2_2b093
}

define i32 @function_2b09a() local_unnamed_addr {
dec_label_pc_2b09a:
  %v0_2b09f = load i32, i32* @eax, align 8
  ret i32 %v0_2b09f
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8weak_ptrIvEEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b0a0:
  %v2_2b0c6 = load i32, i32* %arg1, align 4
  %v2_2b0d3 = call i32 @function_2ba06(i32 8, i32 %v2_2b0c6)
  %v1_2b0d8 = icmp eq i32 %v2_2b0d3, 0
  br i1 %v1_2b0d8, label %dec_label_pc_2b0eb, label %dec_label_pc_2b0dc

dec_label_pc_2b0dc:                               ; preds = %dec_label_pc_2b0a0
  %v2_2b0e6 = call i32 @unknown_3eacc(i32 %v2_2b0d3, i32 %arg2)
  br label %dec_label_pc_2b0eb

dec_label_pc_2b0eb:                               ; preds = %dec_label_pc_2b0dc, %dec_label_pc_2b0a0
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b0f7

bb:                                               ; preds = %dec_label_pc_2b0eb
  %v1_2b0f5 = call i32 @function_2b0fc()
  br label %dec_label_pc_2b0f7

dec_label_pc_2b0f7:                               ; preds = %bb, %dec_label_pc_2b0eb
  %v2_2b0f5 = phi i32 [ %v1_2b0f5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2b0eb ]
  ret i32 %v2_2b0f5
}

define i32 @function_2b0fc() local_unnamed_addr {
dec_label_pc_2b0fc:
  %v0_2b0fd = load i32, i32* @eax, align 8
  ret i32 %v0_2b0fd
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8weak_ptrIvEEEEvRKNS1_13backup_holderIT_EEl(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b0fe:
  %ebx.global-to-local = alloca i32, align 4
  %v1_2b128 = call i32 @unknown_55ebc(i32 %arg2)
  store i32 %v1_2b128, i32* %ebx.global-to-local, align 8
  %v2_2b132 = load i32, i32* %arg1, align 4
  store i32 %v2_2b132, i32* @eax, align 8
  %v2_2b13f = call i32 @function_2ba64(i32 8, i32 %v2_2b132)
  %v1_2b144 = icmp eq i32 %v2_2b13f, 0
  br i1 %v1_2b144, label %dec_label_pc_2b154, label %dec_label_pc_2b148

dec_label_pc_2b148:                               ; preds = %dec_label_pc_2b0fe
  %v0_2b148 = load i32, i32* %ebx.global-to-local, align 8
  %v2_2b14f = call i32 @unknown_3eb2a(i32 %v2_2b13f, i32 %v0_2b148)
  br label %dec_label_pc_2b154

dec_label_pc_2b154:                               ; preds = %dec_label_pc_2b148, %dec_label_pc_2b0fe
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b160

bb:                                               ; preds = %dec_label_pc_2b154
  %v1_2b15e = call i32 @function_2b165()
  br label %dec_label_pc_2b160

dec_label_pc_2b160:                               ; preds = %bb, %dec_label_pc_2b154
  %v2_2b15e = phi i32 [ %v1_2b15e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2b154 ]
  ret i32 %v2_2b15e
}

define i32 @function_2b165() local_unnamed_addr {
dec_label_pc_2b165:
  %v0_2b16a = load i32, i32* @eax, align 8
  ret i32 %v0_2b16a
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail21foreign_void_weak_ptrEEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b16c:
  %v2_2b195 = load i32, i32* %arg1, align 4
  %v2_2b1a2 = call i32 @function_2bad2(i32 4, i32 %v2_2b195)
  %v1_2b1a9 = icmp eq i32 %v2_2b1a2, 0
  br i1 %v1_2b1a9, label %bb, label %dec_label_pc_2b1ad

bb:                                               ; preds = %dec_label_pc_2b16c
  %v1_2b1ab = call i32 @function_2b1d6()
  br label %dec_label_pc_2b1ad

dec_label_pc_2b1ad:                               ; preds = %bb, %dec_label_pc_2b16c
  %v2_2b1b7 = call i32 @unknown_39af8(i32 %v2_2b1a2, i32 %arg2)
  %v0_2b1bc = call i32 @function_2b1d6()
  ret i32 %v0_2b1bc

; uselistorder directives
  uselistorder i32 ()* @function_2b1d6, { 1, 0 }
}

define i32 @function_2b1c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b1c6:
  %v0_2b1c6 = load i32, i32* @eax, align 8
  %v1_2b1c6 = trunc i32 %v0_2b1c6 to i8
  %v2_2b1c6 = and i8 %v1_2b1c6, -24
  %v8_2b1c6 = zext i8 %v2_2b1c6 to i32
  %v10_2b1c6 = and i32 %v0_2b1c6, -256
  %v11_2b1c6 = or i32 %v8_2b1c6, %v10_2b1c6
  %v1_2b1ca = inttoptr i32 %v11_2b1c6 to i8*
  %v2_2b1ca = load i8, i8* %v1_2b1ca, align 8
  %v5_2b1ca = add i8 %v2_2b1ca, %v2_2b1c6
  store i8 %v5_2b1ca, i8* %v1_2b1ca, align 8
  %v0_2b1cc = load i32, i32* @edi, align 8
  ret i32 %v0_2b1cc
}

define i32 @function_2b1d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b1d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b1d6() local_unnamed_addr {
dec_label_pc_2b1d6:
  %v0_2b1d6 = load i32, i32* @ebp, align 4
  %v1_2b1d6 = add i32 %v0_2b1d6, -28
  %v2_2b1d6 = inttoptr i32 %v1_2b1d6 to i32*
  %v3_2b1d6 = load i32, i32* %v2_2b1d6, align 4
  %v3_2b1d9 = xor i32 %v3_2b1d6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b1d9 = icmp eq i32 %v3_2b1d9, 0
  store i32 %v3_2b1d9, i32* @eax, align 8
  br i1 %v4_2b1d9, label %bb, label %dec_label_pc_2b1e2

bb:                                               ; preds = %dec_label_pc_2b1d6
  %v1_2b1e0 = call i32 @function_2b1e7()
  br label %dec_label_pc_2b1e2

dec_label_pc_2b1e2:                               ; preds = %bb, %dec_label_pc_2b1d6
  %v2_2b1e0 = phi i32 [ %v1_2b1e0, %bb ], [ %v3_2b1d9, %dec_label_pc_2b1d6 ]
  ret i32 %v2_2b1e0
}

define i32 @function_2b1e7() local_unnamed_addr {
dec_label_pc_2b1e7:
  %v0_2b1ee = load i32, i32* @eax, align 8
  ret i32 %v0_2b1ee
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitINS_8signals26detail21foreign_void_weak_ptrEEEvRKNS1_13backup_holderIT_EEl(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b1f0:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_2b21c = call i32 @unknown_56068(i32 %arg2)
  ret i32 %tmp104
}

define i32 @function_2b232(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b232:
  %v0_2b232 = load i32, i32* @eax, align 8
  %v2_2b232 = load i32, i32* @ecx, align 4
  %v3_2b232 = udiv i32 %v2_2b232, 256
  %v5_2b232 = add i32 %v3_2b232, %v0_2b232
  %v20_2b232 = urem i32 %v5_2b232, 256
  %v22_2b232 = and i32 %v0_2b232, -256
  %v23_2b232 = or i32 %v20_2b232, %v22_2b232
  %v1_2b235 = inttoptr i32 %v23_2b232 to i32*
  %v2_2b235 = load i32, i32* %v1_2b235, align 4
  %v4_2b235 = or i32 %v2_2b235, %v23_2b232
  store i32 %v4_2b235, i32* %v1_2b235, align 4
  %v0_2b237 = load i32, i32* @ecx, align 4
  %v1_2b237 = add i32 %v0_2b237, 1960543683
  %v2_2b237 = inttoptr i32 %v1_2b237 to i8*
  %v3_2b237 = load i8, i8* %v2_2b237, align 1
  %v5_2b237 = trunc i32 %v0_2b237 to i8
  %v6_2b237 = add i8 %v3_2b237, %v5_2b237
  store i8 %v6_2b237, i8* %v2_2b237, align 1
  %v0_2b23d = load i32, i32* @edi, align 8
  %v0_2b242 = load i32, i32* @ebx, align 8
  %sext = mul i32 %v0_2b242, 65536
  %v2_2b245 = sdiv i32 %sext, 65536
  %v3_2b245 = call i32 @unknown_39b7c(i32 %v2_2b245, i32 %v0_2b23d)
  %v0_2b24a = call i32 @function_2b264()
  ret i32 %v0_2b24a

; uselistorder directives
  uselistorder i32 %v0_2b232, { 1, 0 }
  uselistorder i32 65536, { 1, 0 }
}

define i32 @function_2b264() local_unnamed_addr {
dec_label_pc_2b264:
  %v0_2b264 = load i32, i32* @ebp, align 4
  %v1_2b264 = add i32 %v0_2b264, -28
  %v2_2b264 = inttoptr i32 %v1_2b264 to i32*
  %v3_2b264 = load i32, i32* %v2_2b264, align 4
  %v3_2b267 = xor i32 %v3_2b264, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b267 = icmp eq i32 %v3_2b267, 0
  store i32 %v3_2b267, i32* @eax, align 8
  br i1 %v4_2b267, label %bb, label %dec_label_pc_2b270

bb:                                               ; preds = %dec_label_pc_2b264
  %v1_2b26e = call i32 @function_2b275()
  br label %dec_label_pc_2b270

dec_label_pc_2b270:                               ; preds = %bb, %dec_label_pc_2b264
  %v2_2b26e = phi i32 [ %v1_2b26e, %bb ], [ %v3_2b267, %dec_label_pc_2b264 ]
  ret i32 %v2_2b26e
}

define i32 @function_2b275() local_unnamed_addr {
dec_label_pc_2b275:
  %v0_2b27c = load i32, i32* @eax, align 8
  ret i32 %v0_2b27c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt13_Rb_tree_nodeISN_E() local_unnamed_addr {
dec_label_pc_2b27d:
  %eax.global-to-local = alloca i32, align 4
  %v17_2b280 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2b280
}

define i32 @function_2b284(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b284:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2b284 = load i32, i32* @ebp, align 4
  %v1_2b284 = add i32 %v0_2b284, 1
  store i32 %v1_2b284, i32* @ebp, align 4
  %v0_2b285 = load i32, i32* @ecx, align 4
  %v1_2b285 = add i32 %v0_2b285, -1587157947
  %v2_2b285 = inttoptr i32 %v1_2b285 to i8*
  %v3_2b285 = load i8, i8* %v2_2b285, align 1
  %v5_2b285 = trunc i32 %v0_2b285 to i8
  %v6_2b285 = or i8 %v3_2b285, %v5_2b285
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2b285, i8* %v2_2b285, align 1
  %v0_2b28b = load i32, i32* @eax, align 8
  %v1_2b28b = trunc i32 %v0_2b28b to i8
  %v2_2b28b = load i1, i1* %cf.global-to-local, align 1
  %v3_2b28b = zext i1 %v2_2b28b to i8
  %v4_2b28b = add i8 %v3_2b28b, %v1_2b28b
  %v19_2b28b = icmp ule i8 %v4_2b28b, %v1_2b28b
  %v21_2b28b = icmp eq i1 %v2_2b28b, %v19_2b28b
  store i1 %v21_2b28b, i1* %cf.global-to-local, align 1
  %v22_2b28b = zext i8 %v4_2b28b to i32
  %v24_2b28b = and i32 %v0_2b28b, -256
  %v25_2b28b = or i32 %v22_2b28b, %v24_2b28b
  store i32 %v25_2b28b, i32* %eax.global-to-local, align 8
  %v1_2b28d = inttoptr i32 %v25_2b28b to i8*
  %v2_2b28d = load i8, i8* %v1_2b28d, align 1
  %v5_2b28d = add i8 %v2_2b28d, %v4_2b28b
  store i8 %v5_2b28d, i8* %v1_2b28d, align 1
  %v0_2b28f = load i32, i32* %eax.global-to-local, align 8
  %v1_2b28f = load i32, i32* @ebp, align 4
  %v2_2b28f = add i32 %v1_2b28f, -12
  %v3_2b28f = inttoptr i32 %v2_2b28f to i32*
  store i32 %v0_2b28f, i32* %v3_2b28f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2b294 = load i32, i32* @ebp, align 4
  %v1_2b294 = add i32 %v0_2b294, -28
  %v2_2b294 = inttoptr i32 %v1_2b294 to i32*
  %v3_2b294 = load i32, i32* %v2_2b294, align 4
  store i32 %v3_2b294, i32* %eax.global-to-local, align 8
  %v1_2b29a = call i32 @unknown_59ebe(i32 %v3_2b294)
  %v0_2b2a3 = load i32, i32* @ebp, align 4
  %v1_2b2a3 = add i32 %v0_2b2a3, -13
  store i32 %v1_2b2a3, i32* %eax.global-to-local, align 8
  %v2_2b2a9 = call i32 @unknown_566f1(i32 %v1_2b2a3, i32 %v1_2b29a)
  store i32 %v2_2b2a9, i32* @eax, align 8
  %v0_2b2ae = load i32, i32* @ebp, align 4
  %v1_2b2ae = add i32 %v0_2b2ae, -12
  %v2_2b2ae = inttoptr i32 %v1_2b2ae to i32*
  %v3_2b2ae = load i32, i32* %v2_2b2ae, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_2b2b1 = icmp eq i32 %v3_2b2ae, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b2b1, label %bb, label %dec_label_pc_2b2ba

bb:                                               ; preds = %dec_label_pc_2b284
  %v1_2b2b8 = call i32 @function_2b2bf()
  store i32 %v1_2b2b8, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2b2ba

dec_label_pc_2b2ba:                               ; preds = %bb, %dec_label_pc_2b284
  %v2_2b2b8 = phi i32 [ %v1_2b2b8, %bb ], [ %v2_2b2a9, %dec_label_pc_2b284 ]
  ret i32 %v2_2b2b8

; uselistorder directives
  uselistorder i8 %v4_2b28b, { 0, 2, 1 }
  uselistorder i8 %v1_2b28b, { 1, 0 }
}

define i32 @function_2b2bf() local_unnamed_addr {
dec_label_pc_2b2bf:
  %v0_2b2c0 = load i32, i32* @eax, align 8
  ret i32 %v0_2b2c0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b2c1:
  %v1_2b2db = add i32 %arg1, 8
  %v2_2b2db = inttoptr i32 %v1_2b2db to i32*
  %v3_2b2db = load i32, i32* %v2_2b2db, align 4
  store i32 %v3_2b2db, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b2ea

bb:                                               ; preds = %dec_label_pc_2b2c1
  %v2_2b2e8 = call i32 @function_2b2ef(i32 %arg1)
  br label %dec_label_pc_2b2ea

dec_label_pc_2b2ea:                               ; preds = %bb, %dec_label_pc_2b2c1
  %v3_2b2e8 = phi i32 [ %v2_2b2e8, %bb ], [ %v3_2b2db, %dec_label_pc_2b2c1 ]
  ret i32 %v3_2b2e8
}

define i32 @function_2b2ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b2ef:
  %v0_2b2f0 = load i32, i32* @eax, align 8
  ret i32 %v0_2b2f0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPSt18_Rb_tree_node_base() local_unnamed_addr {
dec_label_pc_2b2f1:
  %eax.global-to-local = alloca i32, align 4
  %v2_2b2f2 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2b2f2
}

define i32 @function_2b2f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b2f6:
  %v0_2b2f6 = load i32, i32* @ebx, align 8
  %v1_2b2f6 = add i32 %v0_2b2f6, 1166608453
  %v2_2b2f6 = inttoptr i32 %v1_2b2f6 to i8*
  %v3_2b2f6 = load i8, i8* %v2_2b2f6, align 1
  %v4_2b2f6 = load i32, i32* @ecx, align 4
  %v5_2b2f6 = trunc i32 %v4_2b2f6 to i8
  %v6_2b2f6 = sub i8 %v3_2b2f6, %v5_2b2f6
  store i8 %v6_2b2f6, i8* %v2_2b2f6, align 1
  %v1_2b303 = load i32, i32* @ebp, align 4
  %v2_2b303 = add i32 %v1_2b303, -12
  %v3_2b303 = inttoptr i32 %v2_2b303 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b303, align 4
  %v0_2b308 = load i32, i32* @ebp, align 4
  %v1_2b308 = add i32 %v0_2b308, -28
  %v2_2b308 = inttoptr i32 %v1_2b308 to i32*
  %v3_2b308 = load i32, i32* %v2_2b308, align 4
  %v1_2b30b = add i32 %v3_2b308, 12
  %v2_2b30b = inttoptr i32 %v1_2b30b to i32*
  %v3_2b30b = load i32, i32* %v2_2b30b, align 4
  store i32 %v3_2b30b, i32* @eax, align 8
  %v1_2b30e = add i32 %v0_2b308, -12
  %v2_2b30e = inttoptr i32 %v1_2b30e to i32*
  %v3_2b30e = load i32, i32* %v2_2b30e, align 4
  %v4_2b311 = icmp eq i32 %v3_2b30e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b311, label %bb, label %dec_label_pc_2b31a

bb:                                               ; preds = %dec_label_pc_2b2f6
  %v1_2b318 = call i32 @function_2b31f()
  br label %dec_label_pc_2b31a

dec_label_pc_2b31a:                               ; preds = %bb, %dec_label_pc_2b2f6
  %v2_2b318 = phi i32 [ %v1_2b318, %bb ], [ %v3_2b30b, %dec_label_pc_2b2f6 ]
  ret i32 %v2_2b318
}

define i32 @function_2b31f() local_unnamed_addr {
dec_label_pc_2b31f:
  %v0_2b320 = load i32, i32* @eax, align 8
  ret i32 %v0_2b320
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_upper_boundEPSt13_Rb_tree_nodeISN_ESY_RS8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2b322:
  ret i32 %arg4
}

define i32 @function_2b340(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b340:
  %v0_2b340 = load i32, i32* @ebp, align 4
  %v1_2b340 = add i32 %v0_2b340, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_2b340 = inttoptr i32 %v1_2b340 to i32*
  %v3_2b340 = load i32, i32* %v2_2b340, align 4
  %v2_2b343 = add i32 %v0_2b340, -44
  %v3_2b343 = inttoptr i32 %v2_2b343 to i32*
  store i32 %v3_2b340, i32* %v3_2b343, align 4
  %v1_2b34c = load i32, i32* @ebp, align 4
  %v2_2b34c = add i32 %v1_2b34c, -12
  %v3_2b34c = inttoptr i32 %v2_2b34c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b34c, align 4
  store i32 0, i32* @eax, align 8
  %v0_2b351 = call i32 @function_2b39e()
  ret i32 %v0_2b351
}

define i32 @function_2b353() local_unnamed_addr {
dec_label_pc_2b353:
  %v0_2b353 = load i32, i32* @ebp, align 4
  %v1_2b353 = add i32 %v0_2b353, -36
  %v2_2b353 = inttoptr i32 %v1_2b353 to i32*
  %v3_2b353 = load i32, i32* %v2_2b353, align 4
  %v1_2b359 = call i32 @unknown_5659f(i32 %v3_2b353)
  %v0_2b360 = load i32, i32* @ebp, align 4
  %v1_2b360 = add i32 %v0_2b360, -32
  %v2_2b360 = inttoptr i32 %v1_2b360 to i32*
  %v3_2b360 = load i32, i32* %v2_2b360, align 4
  %v1_2b367 = add i32 %v0_2b360, -44
  %v2_2b367 = inttoptr i32 %v1_2b367 to i32*
  %v3_2b367 = load i32, i32* %v2_2b367, align 4
  %v3_2b371 = call i32 @unknown_4ca62(i32 %v3_2b360, i32 %v3_2b367, i32 %v1_2b359)
  %v4_2b376 = trunc i32 %v3_2b371 to i8
  %v5_2b376 = icmp eq i8 %v4_2b376, 0
  br i1 %v5_2b376, label %bb, label %dec_label_pc_2b37a

bb:                                               ; preds = %dec_label_pc_2b353
  %v1_2b378 = call i32 @function_2b390()
  br label %dec_label_pc_2b37a

dec_label_pc_2b37a:                               ; preds = %bb, %dec_label_pc_2b353
  %v0_2b37a = load i32, i32* @ebp, align 4
  %v1_2b37a = add i32 %v0_2b37a, -36
  %v2_2b37a = inttoptr i32 %v1_2b37a to i32*
  %v3_2b37a = load i32, i32* %v2_2b37a, align 4
  ret i32 %v3_2b37a
}

define i32 @function_2b37e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b37e:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 8
  %v0_2b38a = load i32, i32* @ecx, align 4
  %v1_2b38a = add i32 %v0_2b38a, 250338373
  %v2_2b38a = inttoptr i32 %v1_2b38a to i8*
  %v3_2b38a = load i8, i8* %v2_2b38a, align 1
  %v5_2b38a = trunc i32 %v0_2b38a to i8
  %v6_2b38a = add i8 %v3_2b38a, %v5_2b38a
  store i8 %v6_2b38a, i8* %v2_2b38a, align 1
  %v24_2b38a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v24_2b38a
}

define i32 @function_2b384(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b384:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b390() local_unnamed_addr {
dec_label_pc_2b390:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b390 = load i32, i32* @ebp, align 4
  %v1_2b390 = add i32 %v0_2b390, -36
  %v2_2b390 = inttoptr i32 %v1_2b390 to i32*
  %v3_2b390 = load i32, i32* %v2_2b390, align 4
  store i32 %v3_2b390, i32* %eax.global-to-local, align 8
  %v1_2b396 = call i32 @unknown_56613(i32 %v3_2b390)
  store i32 %v1_2b396, i32* %eax.global-to-local, align 8
  %v1_2b39b = load i32, i32* @ebp, align 4
  %v2_2b39b = add i32 %v1_2b39b, -36
  %v3_2b39b = inttoptr i32 %v2_2b39b to i32*
  store i32 %v1_2b396, i32* %v3_2b39b, align 4
  %v4_2b39b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_2b39b
}

define i32 @function_2b39e() local_unnamed_addr {
dec_label_pc_2b39e:
  %v0_2b39e = load i32, i32* @ebp, align 4
  %v1_2b39e = add i32 %v0_2b39e, -36
  %v2_2b39e = inttoptr i32 %v1_2b39e to i32*
  %v3_2b39e = load i32, i32* %v2_2b39e, align 4
  %v10_2b39e = icmp eq i32 %v3_2b39e, 0
  %v1_2b3a2 = icmp eq i1 %v10_2b39e, false
  %v5_2b3a5 = icmp eq i1 %v1_2b3a2, false
  %v1_2b3a7 = icmp eq i1 %v5_2b3a5, false
  br i1 %v1_2b3a7, label %bb, label %dec_label_pc_2b3a9

bb:                                               ; preds = %dec_label_pc_2b39e
  %v2_2b3a7 = call i32 @function_2b353()
  %v0_2b3a9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2b3a9

dec_label_pc_2b3a9:                               ; preds = %bb, %dec_label_pc_2b39e
  %v0_2b3a9 = phi i32 [ %v0_2b3a9.pre, %bb ], [ %v0_2b39e, %dec_label_pc_2b39e ]
  %v1_2b3a9 = add i32 %v0_2b3a9, -40
  %v2_2b3a9 = inttoptr i32 %v1_2b3a9 to i32*
  %v3_2b3a9 = load i32, i32* %v2_2b3a9, align 4
  %v1_2b3b0 = add i32 %v0_2b3a9, -28
  %v2_2b3b0 = inttoptr i32 %v1_2b3b0 to i32*
  %v3_2b3b0 = load i32, i32* %v2_2b3b0, align 4
  %v2_2b3b6 = call i32 @unknown_519d6(i32 %v3_2b3b0, i32 %v3_2b3a9)
  %v0_2b3bb = load i32, i32* @ebp, align 4
  %v1_2b3bb = add i32 %v0_2b3bb, -28
  %v2_2b3bb = inttoptr i32 %v1_2b3bb to i32*
  %v3_2b3bb = load i32, i32* %v2_2b3bb, align 4
  store i32 %v3_2b3bb, i32* @eax, align 8
  %v1_2b3be = add i32 %v0_2b3bb, -12
  %v2_2b3be = inttoptr i32 %v1_2b3be to i32*
  %v3_2b3be = load i32, i32* %v2_2b3be, align 4
  %v3_2b3c1 = xor i32 %v3_2b3be, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b3c1 = icmp eq i32 %v3_2b3c1, 0
  store i32 %v3_2b3c1, i32* @edx, align 8
  br i1 %v4_2b3c1, label %bb4, label %dec_label_pc_2b3ca

bb4:                                              ; preds = %dec_label_pc_2b3a9
  %v1_2b3c8 = call i32 @function_2b3cf()
  br label %dec_label_pc_2b3ca

dec_label_pc_2b3ca:                               ; preds = %bb4, %dec_label_pc_2b3a9
  %v2_2b3c8 = phi i32 [ %v1_2b3c8, %bb4 ], [ %v3_2b3bb, %dec_label_pc_2b3a9 ]
  ret i32 %v2_2b3c8

; uselistorder directives
  uselistorder i32 %v0_2b3a9, { 1, 0 }
}

define i32 @function_2b3cf() local_unnamed_addr {
dec_label_pc_2b3cf:
  %v0_2b3d0 = load i32, i32* @eax, align 8
  ret i32 %v0_2b3d0
}

define i32 @_ZSt11__addressofIKSt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEPT_RSP_() local_unnamed_addr {
dec_label_pc_2b3d3:
  %eax.global-to-local = alloca i32, align 4
  %v2_2b3d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2b3d4
}

define i32 @function_2b3d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b3d8:
  %v0_2b3d8 = load i32, i32* @ebx, align 8
  %v1_2b3d8 = add i32 %v0_2b3d8, 1166608453
  %v2_2b3d8 = inttoptr i32 %v1_2b3d8 to i8*
  %v3_2b3d8 = load i8, i8* %v2_2b3d8, align 1
  %v4_2b3d8 = load i32, i32* @ecx, align 4
  %v5_2b3d8 = trunc i32 %v4_2b3d8 to i8
  %v6_2b3d8 = sub i8 %v3_2b3d8, %v5_2b3d8
  store i8 %v6_2b3d8, i8* %v2_2b3d8, align 1
  %v1_2b3e5 = load i32, i32* @ebp, align 4
  %v2_2b3e5 = add i32 %v1_2b3e5, -12
  %v3_2b3e5 = inttoptr i32 %v2_2b3e5 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b3e5, align 4
  %v0_2b3ea = load i32, i32* @ebp, align 4
  %v1_2b3ea = add i32 %v0_2b3ea, -28
  %v2_2b3ea = inttoptr i32 %v1_2b3ea to i32*
  %v3_2b3ea = load i32, i32* %v2_2b3ea, align 4
  store i32 %v3_2b3ea, i32* @eax, align 8
  %v1_2b3ed = add i32 %v0_2b3ea, -12
  %v2_2b3ed = inttoptr i32 %v1_2b3ed to i32*
  %v3_2b3ed = load i32, i32* %v2_2b3ed, align 4
  %v4_2b3f0 = icmp eq i32 %v3_2b3ed, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b3f0, label %bb, label %dec_label_pc_2b3f9

bb:                                               ; preds = %dec_label_pc_2b3d8
  %v1_2b3f7 = call i32 @function_2b3fe()
  br label %dec_label_pc_2b3f9

dec_label_pc_2b3f9:                               ; preds = %bb, %dec_label_pc_2b3d8
  %v2_2b3f7 = phi i32 [ %v1_2b3f7, %bb ], [ %v3_2b3ea, %dec_label_pc_2b3d8 ]
  ret i32 %v2_2b3f7
}

define i32 @function_2b3fe() local_unnamed_addr {
dec_label_pc_2b3fe:
  %v0_2b3ff = load i32, i32* @eax, align 8
  ret i32 %v0_2b3ff
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b400:
  %v1_2b41a = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_2b41a
}

define i32 @function_2b428() local_unnamed_addr {
dec_label_pc_2b428:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b42d() local_unnamed_addr {
dec_label_pc_2b42d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b42d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b42d = add i32 %v0_2b42d, -1
  store i32 %v1_2b42d, i32* %ecx.global-to-local, align 4
  %v0_2b42f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b42f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b430:
  %stack_var_-17 = alloca i32, align 4
  %v1_2b44d = call i32 @unknown_5a0a1(i32 %arg1)
  %v2_2b456 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2b45c = call i32 @unknown_568a4(i32 %v2_2b456, i32 %v1_2b44d)
  store i32 %v2_2b45c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b46d

bb:                                               ; preds = %dec_label_pc_2b430
  %v1_2b46b = call i32 @function_2b472()
  br label %dec_label_pc_2b46d

dec_label_pc_2b46d:                               ; preds = %bb, %dec_label_pc_2b430
  %v2_2b46b = phi i32 [ %v1_2b46b, %bb ], [ %v2_2b45c, %dec_label_pc_2b430 ]
  ret i32 %v2_2b46b
}

define i32 @function_2b472() local_unnamed_addr {
dec_label_pc_2b472:
  %v0_2b473 = load i32, i32* @eax, align 8
  ret i32 %v0_2b473
}

define i32 @_ZNKSt10_Select1stISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEclERKSN_() local_unnamed_addr {
dec_label_pc_2b474:
  %eax.global-to-local = alloca i32, align 4
  %v2_2b475 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2b475
}

define i32 @function_2b478() local_unnamed_addr {
dec_label_pc_2b478:
  %v0_2b479 = load i32, i32* @ebx, align 8
  %v1_2b479 = add i32 %v0_2b479, 1166608453
  %v2_2b479 = inttoptr i32 %v1_2b479 to i8*
  %v3_2b479 = load i8, i8* %v2_2b479, align 1
  %v4_2b479 = load i32, i32* @ecx, align 4
  %v5_2b479 = trunc i32 %v4_2b479 to i8
  %v6_2b479 = sub i8 %v3_2b479, %v5_2b479
  store i8 %v6_2b479, i8* %v2_2b479, align 1
  %v0_2b481 = load i32, i32* @ebp, align 4
  %v1_2b484 = add i32 %v0_2b481, 2
  store i32 %v1_2b484, i32* @ebp, align 4
  %v0_2b485 = load i32, i32* @ecx, align 4
  %v1_2b485 = add i32 %v0_2b485, -1
  store i32 %v1_2b485, i32* @ecx, align 4
  %v2_2b48c = add i32 %v0_2b481, -10
  %v3_2b48c = inttoptr i32 %v2_2b48c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b48c, align 4
  %v0_2b491 = load i32, i32* @ebp, align 4
  %v1_2b491 = add i32 %v0_2b491, -32
  %v2_2b491 = inttoptr i32 %v1_2b491 to i32*
  %v3_2b491 = load i32, i32* %v2_2b491, align 4
  store i32 %v3_2b491, i32* @eax, align 8
  %v1_2b494 = add i32 %v0_2b491, -12
  %v2_2b494 = inttoptr i32 %v1_2b494 to i32*
  %v3_2b494 = load i32, i32* %v2_2b494, align 4
  %v4_2b497 = icmp eq i32 %v3_2b494, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b497, label %bb, label %dec_label_pc_2b4a0

bb:                                               ; preds = %dec_label_pc_2b478
  %v1_2b49e = call i32 @function_2b4a5()
  br label %dec_label_pc_2b4a0

dec_label_pc_2b4a0:                               ; preds = %bb, %dec_label_pc_2b478
  %v3_2b49e = phi i32 [ %v1_2b49e, %bb ], [ %v3_2b491, %dec_label_pc_2b478 ]
  ret i32 %v3_2b49e
}

define i32 @function_2b4a5() local_unnamed_addr {
dec_label_pc_2b4a5:
  %v0_2b4a6 = load i32, i32* @eax, align 8
  ret i32 %v0_2b4a6
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b4a8:
  %v1_2b4c2 = add i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_2b4c2 = inttoptr i32 %v1_2b4c2 to i32*
  %v3_2b4c2 = load i32, i32* %v2_2b4c2, align 4
  ret i32 %v3_2b4c2
}

define i32 @function_2b4cc() local_unnamed_addr {
dec_label_pc_2b4cc:
  %v2_2b4cc = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2b4cc = load i32, i32* @eax, align 8
  %v4_2b4cc = trunc i32 %v3_2b4cc to i8
  %v5_2b4cc = add i8 %v4_2b4cc, %v2_2b4cc
  %v21_2b4cc = inttoptr i32 %v3_2b4cc to i8*
  store i8 %v5_2b4cc, i8* %v21_2b4cc, align 1
  %v0_2b4ce = load i32, i32* @ebp, align 4
  %v1_2b4ce = load i32, i32* @eax, align 8
  %v3_2b4ce = add i32 %v0_2b4ce, -24
  %v4_2b4ce = add i32 %v3_2b4ce, %v1_2b4ce
  %v5_2b4ce = inttoptr i32 %v4_2b4ce to i8*
  %v6_2b4ce = load i8, i8* %v5_2b4ce, align 1
  %v7_2b4ce = load i32, i32* @edx, align 8
  %v8_2b4ce = udiv i32 %v7_2b4ce, 256
  %v9_2b4ce = trunc i32 %v8_2b4ce to i8
  %v10_2b4ce = add i8 %v9_2b4ce, %v6_2b4ce
  store i8 %v10_2b4ce, i8* %v5_2b4ce, align 1
  %v31_2b4ce = load i32, i32* @eax, align 8
  ret i32 %v31_2b4ce
}

define i32 @function_2b4d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b4d6:
  %v0_2b4d7 = load i32, i32* @eax, align 8
  ret i32 %v0_2b4d7
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b4d8:
  ret i32 %arg2
}

define i32 @function_2b506() local_unnamed_addr {
dec_label_pc_2b506:
  %v0_2b508 = load i32, i32* @ebp, align 4
  %v1_2b50e = add i32 %v0_2b508, -32
  %v2_2b50e = inttoptr i32 %v1_2b50e to i32*
  %v3_2b50e = load i32, i32* %v2_2b50e, align 4
  %v1_2b514 = call i32 @unknown_51aa8(i32 %v3_2b50e)
  ret i32 %v1_2b514
}

define i32 @function_2b51a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b51a:
  %v0_2b51a = load i32, i32* @ebp, align 4
  %v1_2b51b = load i32, i32* @esi, align 4
  %factor = mul i32 %v1_2b51b, 2
  %v5_2b51b = add i32 %factor, -117
  %v6_2b51b = inttoptr i32 %v5_2b51b to float*
  %v7_2b51b = load float, float* %v6_2b51b, align 4
  %v8_2b51b = fpext float %v7_2b51b to x86_fp80
  %v9_2b51b = load x86_fp80, x86_fp80* @st0, align 4
  %v10_2b51b = fdiv x86_fp80 %v8_2b51b, %v9_2b51b
  %v1_2b51f = add i32 %v0_2b51a, 2
  store i32 %v1_2b51f, i32* @ebp, align 4
  %v1_2b520 = load i32, i32* @ecx, align 4
  %v2_2b520 = add i32 %v1_2b520, -538434556
  %v3_2b520 = inttoptr i32 %v2_2b520 to float*
  %v4_2b520 = load float, float* %v3_2b520, align 4
  %v5_2b520 = fpext float %v4_2b520 to x86_fp80
  %v7_2b520 = fmul x86_fp80 %v10_2b51b, %v5_2b520
  store x86_fp80 %v7_2b520, x86_fp80* @st0, align 4
  %v0_2b526 = load i32, i32* @ebx, align 8
  %v1_2b526 = and i32 %v0_2b526, -256
  %v2_2b526 = or i32 %v1_2b526, 2
  store i32 %v2_2b526, i32* @ebx, align 8
  %v1_2b528 = add i32 %v1_2b520, -733639741
  %v2_2b528 = inttoptr i32 %v1_2b528 to i8*
  %v3_2b528 = load i8, i8* %v2_2b528, align 1
  %v5_2b528 = trunc i32 %v1_2b520 to i8
  %v6_2b528 = add i8 %v3_2b528, %v5_2b528
  store i8 %v6_2b528, i8* %v2_2b528, align 1
  %v0_2b52e = load i32, i32* @eax, align 8
  %v0_2b532 = load i32, i32* @ebp, align 4
  %v1_2b532 = add i32 %v0_2b532, -14
  %v2_2b538 = call i32 @unknown_5694c(i32 %v1_2b532, i32 %v0_2b52e)
  ret i32 %v2_2b538

; uselistorder directives
  uselistorder i32 %v1_2b520, { 1, 0, 2 }
}

define i32 @function_2b54a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b54a:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_2b54a = load i32, i32* @eax, align 8
  %v2_2b54a = and i32 %v0_2b54a, 232
  %v5_2b550 = icmp ne i32 %v2_2b54a, 0
  %. = zext i1 %v5_2b550 to i32
  %v2_2b570 = call i32 @unknown_5a17a(i32 %tmp5, i32 %tmp7)
  ret i32 %.
}

define i32 @function_2b58c() local_unnamed_addr {
dec_label_pc_2b58c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b5d0() local_unnamed_addr {
dec_label_pc_2b5d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b5d0 = load i32, i32* %ebx.global-to-local, align 8
  %v1_2b5d0 = add i32 %v0_2b5d0, 1566262468
  %v2_2b5d0 = inttoptr i32 %v1_2b5d0 to i32*
  %v3_2b5d0 = load i32, i32* %v2_2b5d0, align 4
  %v4_2b5d0 = add i32 %v3_2b5d0, 1
  store i32 %v4_2b5d0, i32* %v2_2b5d0, align 4
  %v0_2b5d6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b5d6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b5da:
  ret i32 %arg3
}

define i32 @function_2b5f0() local_unnamed_addr {
dec_label_pc_2b5f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b5f0 = load i32, i32* @eax, align 8
  %v1_2b5f0 = load i32, i32* @ebp, align 4
  %v2_2b5f0 = add i32 %v1_2b5f0, -68
  %v3_2b5f0 = inttoptr i32 %v2_2b5f0 to i32*
  store i32 %v0_2b5f0, i32* %v3_2b5f0, align 4
  %v1_2b5f9 = load i32, i32* @ebp, align 4
  %v2_2b5f9 = add i32 %v1_2b5f9, -12
  %v3_2b5f9 = inttoptr i32 %v2_2b5f9 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b5f9, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2b5fe = load i32, i32* @ebp, align 4
  %v1_2b5fe = add i32 %v0_2b5fe, -64
  %v2_2b5fe = inttoptr i32 %v1_2b5fe to i32*
  %v3_2b5fe = load i32, i32* %v2_2b5fe, align 4
  store i32 %v3_2b5fe, i32* %eax.global-to-local, align 8
  %v1_2b604 = call i32 @unknown_51b7a(i32 %v3_2b5fe)
  store i32 %v1_2b604, i32* %eax.global-to-local, align 8
  %v1_2b609 = load i32, i32* @ebp, align 4
  %v2_2b609 = add i32 %v1_2b609, -28
  %v3_2b609 = inttoptr i32 %v2_2b609 to i32*
  store i32 %v1_2b604, i32* %v3_2b609, align 4
  %v0_2b60c = load i32, i32* @ebp, align 4
  %v1_2b60c = add i32 %v0_2b60c, -64
  %v2_2b60c = inttoptr i32 %v1_2b60c to i32*
  %v3_2b60c = load i32, i32* %v2_2b60c, align 4
  store i32 %v3_2b60c, i32* %eax.global-to-local, align 8
  %v1_2b612 = call i32 @unknown_51baa(i32 %v3_2b60c)
  store i32 %v1_2b612, i32* %eax.global-to-local, align 8
  %v1_2b617 = load i32, i32* @ebp, align 4
  %v2_2b617 = add i32 %v1_2b617, -24
  %v3_2b617 = inttoptr i32 %v2_2b617 to i32*
  store i32 %v1_2b612, i32* %v3_2b617, align 4
  %v0_2b61a = load i32, i32* @ebp, align 4
  %v1_2b61a = add i32 %v0_2b61a, -13
  %v2_2b61a = inttoptr i32 %v1_2b61a to i8*
  store i8 1, i8* %v2_2b61a, align 1
  %v0_2b61e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b61e
}

define i32 @function_2b62e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b62e:
  %v0_2b630 = load i32, i32* @ecx, align 4
  %v1_2b630 = add i32 %v0_2b630, -1136292925
  %v2_2b630 = inttoptr i32 %v1_2b630 to i8*
  %v3_2b630 = load i8, i8* %v2_2b630, align 1
  %v5_2b630 = trunc i32 %v0_2b630 to i8
  %v6_2b630 = add i8 %v3_2b630, %v5_2b630
  store i8 %v6_2b630, i8* %v2_2b630, align 1
  %v4_2b636 = load i32, i32* @eax, align 8
  ret i32 %v4_2b636
}

define i32 @function_2b63a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b63a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b63a = load i32, i32* @ebp, align 4
  %v1_2b63a = add i32 %v0_2b63a, -18
  store i32 %v1_2b63a, i32* %eax.global-to-local, align 8
  %v1_2b640 = call i32 @unknown_56a4e(i32 %v1_2b63a)
  store i32 %v1_2b640, i32* %eax.global-to-local, align 8
  %v0_2b645 = load i32, i32* @ebp, align 4
  %v1_2b645 = add i32 %v0_2b645, -64
  %v2_2b645 = inttoptr i32 %v1_2b645 to i32*
  %v3_2b645 = load i32, i32* %v2_2b645, align 4
  %v0_2b648 = load i32, i32* @ebx, align 8
  %v3_2b653 = call i32 @unknown_4cd1a(i32 %v3_2b645, i32 %v1_2b640, i32 %v0_2b648)
  store i32 %v3_2b653, i32* %eax.global-to-local, align 8
  %v1_2b658 = trunc i32 %v3_2b653 to i8
  %v2_2b658 = load i32, i32* @ebp, align 4
  %v3_2b658 = add i32 %v2_2b658, -13
  %v4_2b658 = inttoptr i32 %v3_2b658 to i8*
  store i8 %v1_2b658, i8* %v4_2b658, align 1
  %v0_2b65b = load i32, i32* @ebp, align 4
  %v1_2b65b = add i32 %v0_2b65b, -13
  %v2_2b65b = inttoptr i32 %v1_2b65b to i8*
  %v3_2b65b = load i8, i8* %v2_2b65b, align 1
  %v10_2b65b = icmp eq i8 %v3_2b65b, 0
  %v1_2b66e = add i32 %v0_2b65b, -28
  %v2_2b66e = inttoptr i32 %v1_2b66e to i32*
  %v3_2b66e = load i32, i32* %v2_2b66e, align 4
  store i32 %v3_2b66e, i32* %eax.global-to-local, align 8
  br i1 %v10_2b65b, label %dec_label_pc_2b66e, label %dec_label_pc_2b661

dec_label_pc_2b661:                               ; preds = %dec_label_pc_2b63a
  %v1_2b667 = call i32 @unknown_5689b(i32 %v3_2b66e)
  br label %dec_label_pc_2b679

dec_label_pc_2b66e:                               ; preds = %dec_label_pc_2b63a
  %v1_2b674 = call i32 @unknown_568cb(i32 %v3_2b66e)
  br label %dec_label_pc_2b679

dec_label_pc_2b679:                               ; preds = %dec_label_pc_2b66e, %dec_label_pc_2b661
  %storemerge = phi i32 [ %v1_2b674, %dec_label_pc_2b66e ], [ %v1_2b667, %dec_label_pc_2b661 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 8
  %v1_2b679 = load i32, i32* @ebp, align 4
  %v2_2b679 = add i32 %v1_2b679, -28
  %v3_2b679 = inttoptr i32 %v2_2b679 to i32*
  store i32 %storemerge, i32* %v3_2b679, align 4
  %v0_2b67c = load i32, i32* @ebp, align 4
  %v1_2b67c = add i32 %v0_2b67c, -28
  %v2_2b67c = inttoptr i32 %v1_2b67c to i32*
  %v3_2b67c = load i32, i32* %v2_2b67c, align 4
  %v10_2b67c = icmp eq i32 %v3_2b67c, 0
  %v1_2b680 = icmp eq i1 %v10_2b67c, false
  %v2_2b680 = zext i1 %v1_2b680 to i32
  %v3_2b680 = load i32, i32* %eax.global-to-local, align 8
  %v4_2b680 = and i32 %v3_2b680, -256
  %v5_2b680 = or i32 %v2_2b680, %v4_2b680
  store i32 %v5_2b680, i32* %eax.global-to-local, align 8
  %v1_2b687 = add i32 %v0_2b67c, -24
  %v2_2b687 = inttoptr i32 %v1_2b687 to i32*
  %v3_2b687 = load i32, i32* %v2_2b687, align 4
  %v1_2b68e = add i32 %v0_2b67c, -44
  store i32 %v1_2b68e, i32* %eax.global-to-local, align 8
  %v2_2b694 = call i32 @unknown_51c8e(i32 %v1_2b68e, i32 %v3_2b687)
  store i32 %v2_2b694, i32* %eax.global-to-local, align 8
  %v0_2b699 = load i32, i32* @ebp, align 4
  %v1_2b699 = add i32 %v0_2b699, -13
  %v2_2b699 = inttoptr i32 %v1_2b699 to i8*
  %v3_2b699 = load i8, i8* %v2_2b699, align 1
  %v10_2b699 = icmp eq i8 %v3_2b699, 0
  br i1 %v10_2b699, label %dec_label_pc_2b725, label %dec_label_pc_2b6a3

dec_label_pc_2b6a3:                               ; preds = %dec_label_pc_2b679
  %v1_2b6a3 = add i32 %v0_2b699, -40
  store i32 %v1_2b6a3, i32* %eax.global-to-local, align 8
  %v1_2b6a6 = add i32 %v0_2b699, -64
  %v2_2b6a6 = inttoptr i32 %v1_2b6a6 to i32*
  %v3_2b6a6 = load i32, i32* %v2_2b6a6, align 4
  %v2_2b6b0 = call i32 @unknown_528f0(i32 %v1_2b6a3, i32 %v3_2b6a6)
  %v0_2b6b8 = load i32, i32* @ebp, align 4
  %v1_2b6b8 = add i32 %v0_2b6b8, -40
  %v1_2b6bf = add i32 %v0_2b6b8, -44
  store i32 %v1_2b6bf, i32* %eax.global-to-local, align 8
  %v2_2b6c5 = call i32 @unknown_4cfb4(i32 %v1_2b6bf, i32 %v1_2b6b8)
  store i32 %v2_2b6c5, i32* %eax.global-to-local, align 8
  %v4_2b6ca = trunc i32 %v2_2b6c5 to i8
  %v5_2b6ca = icmp eq i8 %v4_2b6ca, 0
  %v0_2b71a = load i32, i32* @ebp, align 4
  br i1 %v5_2b6ca, label %dec_label_pc_2b71a, label %dec_label_pc_2b6ce

dec_label_pc_2b6ce:                               ; preds = %dec_label_pc_2b6a3
  %v1_2b6ce = add i32 %v0_2b71a, -17
  %v2_2b6ce = inttoptr i32 %v1_2b6ce to i8*
  store i8 1, i8* %v2_2b6ce, align 1
  %v0_2b6d2 = load i32, i32* @ebp, align 4
  %v1_2b6d2 = add i32 %v0_2b6d2, -36
  store i32 %v1_2b6d2, i32* %eax.global-to-local, align 8
  %v1_2b6d5 = add i32 %v0_2b6d2, -68
  %v2_2b6d5 = inttoptr i32 %v1_2b6d5 to i32*
  %v3_2b6d5 = load i32, i32* %v2_2b6d5, align 4
  %v1_2b6dc = add i32 %v0_2b6d2, -24
  %v2_2b6dc = inttoptr i32 %v1_2b6dc to i32*
  %v3_2b6dc = load i32, i32* %v2_2b6dc, align 4
  %v1_2b6e3 = add i32 %v0_2b6d2, -28
  %v2_2b6e3 = inttoptr i32 %v1_2b6e3 to i32*
  %v3_2b6e3 = load i32, i32* %v2_2b6e3, align 4
  %v1_2b6ea = add i32 %v0_2b6d2, -64
  %v2_2b6ea = inttoptr i32 %v1_2b6ea to i32*
  %v3_2b6ea = load i32, i32* %v2_2b6ea, align 4
  %v5_2b6f4 = call i32 @unknown_56ab2(i32 %v1_2b6d2, i32 %v3_2b6ea, i32 %v3_2b6e3, i32 %v3_2b6dc, i32 %v3_2b6d5)
  %v0_2b6fc = load i32, i32* @ebp, align 4
  %v1_2b6fc = add i32 %v0_2b6fc, -17
  %v1_2b703 = add i32 %v0_2b6fc, -36
  store i32 %v1_2b703, i32* %eax.global-to-local, align 8
  %v1_2b70a = add i32 %v0_2b6fc, -60
  %v2_2b70a = inttoptr i32 %v1_2b70a to i32*
  %v3_2b70a = load i32, i32* %v2_2b70a, align 4
  store i32 %v3_2b70a, i32* %eax.global-to-local, align 8
  %v3_2b710 = call i32 @unknown_5a34a(i32 %v3_2b70a, i32 %v1_2b703, i32 %v1_2b6fc)
  store i32 %v3_2b710, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2b7c3

dec_label_pc_2b71a:                               ; preds = %dec_label_pc_2b6a3
  %v1_2b71a = add i32 %v0_2b71a, -44
  store i32 %v1_2b71a, i32* %eax.global-to-local, align 8
  %v1_2b720 = call i32 @unknown_5a396(i32 %v1_2b71a)
  store i32 %v1_2b720, i32* %eax.global-to-local, align 8
  %v0_2b725.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2b725

dec_label_pc_2b725:                               ; preds = %dec_label_pc_2b71a, %dec_label_pc_2b679
  %v0_2b725 = phi i32 [ %v0_2b725.pre, %dec_label_pc_2b71a ], [ %v0_2b699, %dec_label_pc_2b679 ]
  %v1_2b72c = add i32 %v0_2b725, -16
  store i32 %v1_2b72c, i32* %eax.global-to-local, align 8
  %v1_2b732 = call i32 @unknown_56a4e(i32 %v1_2b72c)
  store i32 %v1_2b732, i32* %eax.global-to-local, align 8
  store i32 %v1_2b732, i32* %ebx.global-to-local, align 8
  %v0_2b739 = load i32, i32* @ebp, align 4
  %v1_2b739 = add i32 %v0_2b739, -44
  %v2_2b739 = inttoptr i32 %v1_2b739 to i32*
  %v3_2b739 = load i32, i32* %v2_2b739, align 4
  store i32 %v3_2b739, i32* %eax.global-to-local, align 8
  %v1_2b73f = call i32 @unknown_56a0a(i32 %v3_2b739)
  store i32 %v1_2b73f, i32* %eax.global-to-local, align 8
  %v0_2b746 = load i32, i32* @ebp, align 4
  %v1_2b746 = add i32 %v0_2b746, -64
  %v2_2b746 = inttoptr i32 %v1_2b746 to i32*
  %v3_2b746 = load i32, i32* %v2_2b746, align 4
  store i32 %v3_2b746, i32* %eax.global-to-local, align 8
  %v0_2b749 = load i32, i32* %ebx.global-to-local, align 8
  %v3_2b754 = call i32 @unknown_4cd1a(i32 %v3_2b746, i32 %v1_2b73f, i32 %v0_2b749)
  store i32 %v3_2b754, i32* %eax.global-to-local, align 8
  %v4_2b759 = trunc i32 %v3_2b754 to i8
  %v5_2b759 = icmp eq i8 %v4_2b759, 0
  %v0_2b7a6 = load i32, i32* @ebp, align 4
  br i1 %v5_2b759, label %dec_label_pc_2b7a6, label %dec_label_pc_2b75d

dec_label_pc_2b75d:                               ; preds = %dec_label_pc_2b725
  %v1_2b75d = add i32 %v0_2b7a6, -15
  %v2_2b75d = inttoptr i32 %v1_2b75d to i8*
  store i8 1, i8* %v2_2b75d, align 1
  %v0_2b761 = load i32, i32* @ebp, align 4
  %v1_2b761 = add i32 %v0_2b761, -32
  store i32 %v1_2b761, i32* %eax.global-to-local, align 8
  %v1_2b764 = add i32 %v0_2b761, -68
  %v2_2b764 = inttoptr i32 %v1_2b764 to i32*
  %v3_2b764 = load i32, i32* %v2_2b764, align 4
  %v1_2b76b = add i32 %v0_2b761, -24
  %v2_2b76b = inttoptr i32 %v1_2b76b to i32*
  %v3_2b76b = load i32, i32* %v2_2b76b, align 4
  %v1_2b772 = add i32 %v0_2b761, -28
  %v2_2b772 = inttoptr i32 %v1_2b772 to i32*
  %v3_2b772 = load i32, i32* %v2_2b772, align 4
  %v1_2b779 = add i32 %v0_2b761, -64
  %v2_2b779 = inttoptr i32 %v1_2b779 to i32*
  %v3_2b779 = load i32, i32* %v2_2b779, align 4
  %v5_2b783 = call i32 @unknown_56ab2(i32 %v1_2b761, i32 %v3_2b779, i32 %v3_2b772, i32 %v3_2b76b, i32 %v3_2b764)
  %v0_2b78b = load i32, i32* @ebp, align 4
  %v1_2b78b = add i32 %v0_2b78b, -15
  %v1_2b792 = add i32 %v0_2b78b, -32
  store i32 %v1_2b792, i32* %eax.global-to-local, align 8
  %v1_2b799 = add i32 %v0_2b78b, -60
  %v2_2b799 = inttoptr i32 %v1_2b799 to i32*
  %v3_2b799 = load i32, i32* %v2_2b799, align 4
  store i32 %v3_2b799, i32* %eax.global-to-local, align 8
  %v3_2b79f = call i32 @unknown_5a34a(i32 %v3_2b799, i32 %v1_2b792, i32 %v1_2b78b)
  store i32 %v3_2b79f, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2b7c3

dec_label_pc_2b7a6:                               ; preds = %dec_label_pc_2b725
  %v1_2b7a6 = add i32 %v0_2b7a6, -14
  %v2_2b7a6 = inttoptr i32 %v1_2b7a6 to i8*
  store i8 0, i8* %v2_2b7a6, align 1
  %v0_2b7aa = load i32, i32* @ebp, align 4
  %v1_2b7aa = add i32 %v0_2b7aa, -14
  %v1_2b7b1 = add i32 %v0_2b7aa, -44
  store i32 %v1_2b7b1, i32* %eax.global-to-local, align 8
  %v1_2b7b8 = add i32 %v0_2b7aa, -60
  %v2_2b7b8 = inttoptr i32 %v1_2b7b8 to i32*
  %v3_2b7b8 = load i32, i32* %v2_2b7b8, align 4
  store i32 %v3_2b7b8, i32* %eax.global-to-local, align 8
  %v3_2b7be = call i32 @unknown_5a34a(i32 %v3_2b7b8, i32 %v1_2b7b1, i32 %v1_2b7aa)
  store i32 %v3_2b7be, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2b7c3

dec_label_pc_2b7c3:                               ; preds = %dec_label_pc_2b7a6, %dec_label_pc_2b75d, %dec_label_pc_2b6ce
  %v0_2b7c3 = load i32, i32* @ebp, align 4
  %v1_2b7c3 = add i32 %v0_2b7c3, -60
  %v2_2b7c3 = inttoptr i32 %v1_2b7c3 to i32*
  %v3_2b7c3 = load i32, i32* %v2_2b7c3, align 4
  store i32 %v3_2b7c3, i32* @eax, align 8
  %v1_2b7c6 = add i32 %v0_2b7c3, -12
  %v2_2b7c6 = inttoptr i32 %v1_2b7c6 to i32*
  %v3_2b7c6 = load i32, i32* %v2_2b7c6, align 4
  %v4_2b7c9 = icmp eq i32 %v3_2b7c6, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b7c9, label %bb, label %dec_label_pc_2b7d2

bb:                                               ; preds = %dec_label_pc_2b7c3
  %v1_2b7d0 = call i32 @function_2b7d7()
  store i32 %v1_2b7d0, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2b7d2

dec_label_pc_2b7d2:                               ; preds = %bb, %dec_label_pc_2b7c3
  %v2_2b7d0 = phi i32 [ %v1_2b7d0, %bb ], [ %v3_2b7c3, %dec_label_pc_2b7c3 ]
  ret i32 %v2_2b7d0

; uselistorder directives
  uselistorder i32 %v0_2b761, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_2b7a6, { 1, 0 }
  uselistorder i32 %v0_2b6d2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_2b71a, { 1, 0 }
  uselistorder i32 %v0_2b699, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2b67c, { 1, 0, 2 }
  uselistorder i32 %v3_2b66e, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 7, 8, 28, 29, 30, 31 }
  uselistorder i32 (i32, i32, i32)* @unknown_5a34a, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_56ab2, { 1, 0 }
  uselistorder i32 -17, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_4cd1a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_56a4e, { 1, 0 }
}

define i32 @function_2b7d7() local_unnamed_addr {
dec_label_pc_2b7d7:
  %v0_2b7db = load i32, i32* @eax, align 8
  ret i32 %v0_2b7db
}

define i32 @function_2b7d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b7d8:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b7de:
  %v1_2b7f8 = add i32 %arg1, 12
  store i32 %v1_2b7f8, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b807

bb:                                               ; preds = %dec_label_pc_2b7de
  %v2_2b805 = call i32 @function_2b80c(i32 %arg1)
  br label %dec_label_pc_2b807

dec_label_pc_2b807:                               ; preds = %bb, %dec_label_pc_2b7de
  %v3_2b805 = phi i32 [ %v2_2b805, %bb ], [ %v1_2b7f8, %dec_label_pc_2b7de ]
  ret i32 %v3_2b805
}

define i32 @function_2b80c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b80c:
  %v0_2b80d = load i32, i32* @eax, align 8
  ret i32 %v0_2b80d
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2b80e:
  %v2_2b828 = load i32, i32* %arg1, align 4
  ret i32 %v2_2b828
}

define i32 @function_2b83c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b83c:
  %v0_2b83d = load i32, i32* @edx, align 8
  %v4_2b83d = icmp eq i32 %v0_2b83d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b83d, label %bb, label %dec_label_pc_2b83c.dec_label_pc_2b846_crit_edge

dec_label_pc_2b83c.dec_label_pc_2b846_crit_edge:  ; preds = %dec_label_pc_2b83c
  %v2_2b844.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2b846

bb:                                               ; preds = %dec_label_pc_2b83c
  %v1_2b844 = call i32 @function_2b84b()
  br label %dec_label_pc_2b846

dec_label_pc_2b846:                               ; preds = %dec_label_pc_2b83c.dec_label_pc_2b846_crit_edge, %bb
  %v2_2b844 = phi i32 [ %v2_2b844.pre, %dec_label_pc_2b83c.dec_label_pc_2b846_crit_edge ], [ %v1_2b844, %bb ]
  ret i32 %v2_2b844

; uselistorder directives
  uselistorder label %dec_label_pc_2b846, { 1, 0 }
}

define i32 @function_2b84b() local_unnamed_addr {
dec_label_pc_2b84b:
  %v0_2b84c = load i32, i32* @eax, align 8
  ret i32 %v0_2b84c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b84d:
  %v1_2b867 = add i32 %arg1, 12
  %v2_2b867 = inttoptr i32 %v1_2b867 to i32*
  %v3_2b867 = load i32, i32* %v2_2b867, align 4
  store i32 %v3_2b867, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b876

bb:                                               ; preds = %dec_label_pc_2b84d
  %v2_2b874 = call i32 @function_2b87b(i32 %arg1)
  br label %dec_label_pc_2b876

dec_label_pc_2b876:                               ; preds = %bb, %dec_label_pc_2b84d
  %v3_2b874 = phi i32 [ %v2_2b874, %bb ], [ %v3_2b867, %dec_label_pc_2b84d ]
  ret i32 %v3_2b874
}

define i32 @function_2b87b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b87b:
  %v0_2b87c = load i32, i32* @eax, align 8
  ret i32 %v0_2b87c
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEE13_M_const_castEv() local_unnamed_addr {
dec_label_pc_2b87e:
  %eax.global-to-local = alloca i32, align 4
  %v5_2b87e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2b87e
}

define i32 @function_2b880() local_unnamed_addr {
dec_label_pc_2b880:
  %v0_2b88b = load i32, i32* @ebp, align 4
  %v1_2b88e = add i32 %v0_2b88b, 2
  store i32 %v1_2b88e, i32* @ebp, align 4
  %v2_2b896 = add i32 %v0_2b88b, -10
  %v3_2b896 = inttoptr i32 %v2_2b896 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b896, align 4
  %v0_2b89b = load i32, i32* @ebp, align 4
  %v1_2b89b = add i32 %v0_2b89b, -32
  %v2_2b89b = inttoptr i32 %v1_2b89b to i32*
  %v3_2b89b = load i32, i32* %v2_2b89b, align 4
  %v1_2b89e = inttoptr i32 %v3_2b89b to i32*
  %v2_2b89e = load i32, i32* %v1_2b89e, align 4
  %v1_2b8a4 = add i32 %v0_2b89b, -28
  %v2_2b8a4 = inttoptr i32 %v1_2b8a4 to i32*
  %v3_2b8a4 = load i32, i32* %v2_2b8a4, align 4
  %v2_2b8aa = call i32 @unknown_51f32(i32 %v3_2b8a4, i32 %v2_2b89e)
  %v0_2b8af = load i32, i32* @ebp, align 4
  %v1_2b8af = add i32 %v0_2b8af, -28
  %v2_2b8af = inttoptr i32 %v1_2b8af to i32*
  %v3_2b8af = load i32, i32* %v2_2b8af, align 4
  store i32 %v3_2b8af, i32* @eax, align 8
  %v1_2b8b2 = add i32 %v0_2b8af, -12
  %v2_2b8b2 = inttoptr i32 %v1_2b8b2 to i32*
  %v3_2b8b2 = load i32, i32* %v2_2b8b2, align 4
  %v4_2b8b5 = icmp eq i32 %v3_2b8b2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2b8b5, label %bb, label %dec_label_pc_2b8be

bb:                                               ; preds = %dec_label_pc_2b880
  %v1_2b8bc = call i32 @function_2b8c3()
  br label %dec_label_pc_2b8be

dec_label_pc_2b8be:                               ; preds = %bb, %dec_label_pc_2b880
  %v3_2b8bc = phi i32 [ %v1_2b8bc, %bb ], [ %v3_2b8af, %dec_label_pc_2b880 ]
  ret i32 %v3_2b8bc
}

define i32 @function_2b8c3() local_unnamed_addr {
dec_label_pc_2b8c3:
  %v0_2b8c4 = load i32, i32* @eax, align 8
  ret i32 %v0_2b8c4
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b8c8:
  %v1_2b8e9 = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2b8ef = call i32 @unknown_4d0a8(i32 %v1_2b8e9)
  ret i32 %v1_2b8ef
}

define i32 @function_2b8f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2b8f8:
  %v0_2b8f8 = load i32, i32* @ebp, align 4
  %v1_2b8f8 = add i32 %v0_2b8f8, -28
  %v2_2b8f8 = inttoptr i32 %v1_2b8f8 to i32*
  %v3_2b8f8 = load i32, i32* %v2_2b8f8, align 4
  %v0_2b900 = load i32, i32* @eax, align 8
  %v2_2b903 = call i32 @unknown_5a6c4(i32 %v0_2b900, i32 %v3_2b8f8)
  %v0_2b90b = load i32, i32* @ebx, align 8
  %v0_2b90f = load i32, i32* @ebp, align 4
  %v1_2b90f = add i32 %v0_2b90f, -13
  %v2_2b915 = call i32 @unknown_5a74a(i32 %v1_2b90f, i32 %v0_2b90b)
  %v0_2b91a = load i32, i32* @ebp, align 4
  %v1_2b91a = add i32 %v0_2b91a, -13
  %v1_2b920 = call i32 @unknown_5a714(i32 %v1_2b91a)
  %v0_2b925 = load i32, i32* @ebp, align 4
  %v1_2b925 = add i32 %v0_2b925, -32
  %v2_2b925 = inttoptr i32 %v1_2b925 to i32*
  %v3_2b925 = load i32, i32* %v2_2b925, align 4
  %v1_2b92c = add i32 %v0_2b925, -28
  %v2_2b92c = inttoptr i32 %v1_2b92c to i32*
  %v3_2b92c = load i32, i32* %v2_2b92c, align 4
  %v2_2b932 = call i32 @unknown_5a786(i32 %v3_2b92c, i32 %v3_2b925)
  %v0_2b937 = load i32, i32* @ebp, align 4
  %v1_2b937 = add i32 %v0_2b937, -12
  %v2_2b937 = inttoptr i32 %v1_2b937 to i32*
  %v3_2b937 = load i32, i32* %v2_2b937, align 4
  %v3_2b93a = xor i32 %v3_2b937, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b93a = icmp eq i32 %v3_2b93a, 0
  store i32 %v3_2b93a, i32* @eax, align 8
  br i1 %v4_2b93a, label %bb, label %dec_label_pc_2b943

bb:                                               ; preds = %dec_label_pc_2b8f8
  %v1_2b941 = call i32 @function_2b961()
  store i32 %v1_2b941, i32* @eax, align 8
  br label %dec_label_pc_2b943

dec_label_pc_2b943:                               ; preds = %bb, %dec_label_pc_2b8f8
  %v0_2b943 = call i32 @function_2b95c()
  ret i32 %v0_2b943
}

define i32 @function_2b946() local_unnamed_addr {
dec_label_pc_2b946:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b946 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b946
}

define i32 @function_2b94c() local_unnamed_addr {
dec_label_pc_2b94c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b94c = load i32, i32* %eax.global-to-local, align 8
  %v11_2b94c = and i32 %v0_2b94c, -24
  store i32 %v11_2b94c, i32* %eax.global-to-local, align 8
  ret i32 %v11_2b94c

; uselistorder directives
  uselistorder i32 %v11_2b94c, { 1, 0 }
}

define i32 @function_2b95c() local_unnamed_addr {
dec_label_pc_2b95c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2b961() local_unnamed_addr {
dec_label_pc_2b961:
  %v0_2b965 = load i32, i32* @eax, align 8
  ret i32 %v0_2b965
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEED1Ev() local_unnamed_addr {
dec_label_pc_2b966:
  %eax.global-to-local = alloca i32, align 4
  %v2_2b967 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2b967
}

define i32 @function_2b96a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b96a:
  %v0_2b96b = load i32, i32* @ebx, align 8
  %v1_2b96b = add i32 %v0_2b96b, 1166608453
  %v2_2b96b = inttoptr i32 %v1_2b96b to i8*
  %v3_2b96b = load i8, i8* %v2_2b96b, align 1
  %v4_2b96b = load i32, i32* @ecx, align 4
  %v5_2b96b = trunc i32 %v4_2b96b to i8
  %v6_2b96b = sub i8 %v3_2b96b, %v5_2b96b
  store i8 %v6_2b96b, i8* %v2_2b96b, align 1
  %v1_2b978 = load i32, i32* @ebp, align 4
  %v2_2b978 = add i32 %v1_2b978, -12
  %v3_2b978 = inttoptr i32 %v2_2b978 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2b978, align 4
  %v0_2b97d = load i32, i32* @ebp, align 4
  %v1_2b97d = add i32 %v0_2b97d, -12
  %v2_2b97d = inttoptr i32 %v1_2b97d to i32*
  %v3_2b97d = load i32, i32* %v2_2b97d, align 4
  %v3_2b980 = xor i32 %v3_2b97d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2b980 = icmp eq i32 %v3_2b980, 0
  store i32 %v3_2b980, i32* @eax, align 8
  br i1 %v4_2b980, label %bb, label %dec_label_pc_2b989

bb:                                               ; preds = %dec_label_pc_2b96a
  %v1_2b987 = call i32 @function_2b98e()
  br label %dec_label_pc_2b989

dec_label_pc_2b989:                               ; preds = %bb, %dec_label_pc_2b96a
  %v2_2b987 = phi i32 [ %v1_2b987, %bb ], [ %v3_2b980, %dec_label_pc_2b96a ]
  ret i32 %v2_2b987
}

define i32 @function_2b98e() local_unnamed_addr {
dec_label_pc_2b98e:
  %v0_2b98f = load i32, i32* @eax, align 8
  ret i32 %v0_2b98f
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE10deallocateEPSM_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b990:
  ret i32 %arg2
}

define i32 @function_2b9ce() local_unnamed_addr {
dec_label_pc_2b9ce:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b9ce = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b9ce = add i32 %v0_2b9ce, -1
  store i32 %v1_2b9ce, i32* %ecx.global-to-local, align 4
  %v0_2b9d0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2b9d0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9d2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2b9f5

bb:                                               ; preds = %dec_label_pc_2b9d2
  %v2_2b9f3 = call i32 @function_2b9fa(i32 %arg1)
  br label %dec_label_pc_2b9f5

dec_label_pc_2b9f5:                               ; preds = %bb, %dec_label_pc_2b9d2
  %v3_2b9f3 = phi i32 [ %v2_2b9f3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2b9d2 ]
  ret i32 %v3_2b9f3

; uselistorder directives
  uselistorder i32 (i32)* @function_2b9fa, { 3, 2, 1, 0 }
}

define i32 @function_2b9fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9fa:
  %v0_2b9fb = load i32, i32* @eax, align 8
  ret i32 %v0_2b9fb
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEEC1ISJ_EERKSaIT_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9fc:
  ret i32 %arg1
}

define i32 @function_2ba06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba06:
  %v0_2ba06 = load i32, i32* @ebp, align 4
  %v1_2ba0c = add i32 %v0_2ba06, 3
  store i32 %v1_2ba0c, i32* @ebp, align 4
  %v2_2ba14 = add i32 %v0_2ba06, -9
  %v3_2ba14 = inttoptr i32 %v2_2ba14 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2ba14, align 4
  %v0_2ba19 = load i32, i32* @ebp, align 4
  %v1_2ba19 = add i32 %v0_2ba19, -28
  %v2_2ba19 = inttoptr i32 %v1_2ba19 to i32*
  %v3_2ba19 = load i32, i32* %v2_2ba19, align 4
  %v1_2ba1f = call i32 @unknown_5a904(i32 %v3_2ba19)
  %v0_2ba24 = load i32, i32* @ebp, align 4
  %v1_2ba24 = add i32 %v0_2ba24, -12
  %v2_2ba24 = inttoptr i32 %v1_2ba24 to i32*
  %v3_2ba24 = load i32, i32* %v2_2ba24, align 4
  %v3_2ba27 = xor i32 %v3_2ba24, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ba27 = icmp eq i32 %v3_2ba27, 0
  store i32 %v3_2ba27, i32* @eax, align 8
  br i1 %v4_2ba27, label %bb, label %dec_label_pc_2ba30

bb:                                               ; preds = %dec_label_pc_2ba06
  %v1_2ba2e = call i32 @function_2ba35()
  br label %dec_label_pc_2ba30

dec_label_pc_2ba30:                               ; preds = %bb, %dec_label_pc_2ba06
  %v3_2ba2e = phi i32 [ %v1_2ba2e, %bb ], [ %v3_2ba27, %dec_label_pc_2ba06 ]
  ret i32 %v3_2ba2e
}

define i32 @function_2ba35() local_unnamed_addr {
dec_label_pc_2ba35:
  %v0_2ba36 = load i32, i32* @eax, align 8
  ret i32 %v0_2ba36
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implC1ERKSaISt10_List_nodeISJ_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba38:
  ret i32 %arg1
}

define i32 @function_2ba64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba64:
  %v0_2ba67 = load i32, i32* @ebp, align 4
  %v1_2ba67 = add i32 %v0_2ba67, -28
  %v2_2ba67 = inttoptr i32 %v1_2ba67 to i32*
  %v3_2ba67 = load i32, i32* %v2_2ba67, align 4
  %v1_2ba6a = inttoptr i32 %v3_2ba67 to i32*
  store i32 0, i32* %v1_2ba6a, align 4
  %v0_2ba70 = load i32, i32* @ebp, align 4
  %v1_2ba70 = add i32 %v0_2ba70, -28
  %v2_2ba70 = inttoptr i32 %v1_2ba70 to i32*
  %v3_2ba70 = load i32, i32* %v2_2ba70, align 4
  ret i32 %v3_2ba70
}

define i32 @function_2ba8a() local_unnamed_addr {
dec_label_pc_2ba8a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ba8a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ba8a = add i32 %v0_2ba8a, -1
  store i32 %v1_2ba8a, i32* %ecx.global-to-local, align 4
  %v0_2ba8c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ba8c
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE7_M_initEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ba8e:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* %arg1, align 4
  %v2_2bab3 = add i32 %tmp100, 4
  %v3_2bab3 = inttoptr i32 %v2_2bab3 to i32*
  store i32 %tmp100, i32* %v3_2bab3, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bac2

bb:                                               ; preds = %dec_label_pc_2ba8e
  %v2_2bac0 = call i32 @function_2bac7(i32 %tmp100)
  br label %dec_label_pc_2bac2

dec_label_pc_2bac2:                               ; preds = %bb, %dec_label_pc_2ba8e
  %v3_2bac0 = phi i32 [ %v2_2bac0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ba8e ]
  ret i32 %v3_2bac0
}

define i32 @function_2bac7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bac7:
  %v0_2bac8 = load i32, i32* @eax, align 8
  ret i32 %v0_2bac8
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE() local_unnamed_addr {
dec_label_pc_2baca:
  %eax.global-to-local = alloca i32, align 4
  %v17_2bacd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2bacd
}

define i32 @function_2bad2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bad2:
  %v0_2bad2 = load i32, i32* @ecx, align 4
  %v1_2bad2 = add i32 %v0_2bad2, 1166795845
  %v2_2bad2 = inttoptr i32 %v1_2bad2 to i8*
  %v3_2bad2 = load i8, i8* %v2_2bad2, align 1
  %v5_2bad2 = trunc i32 %v0_2bad2 to i8
  %v6_2bad2 = or i8 %v3_2bad2, %v5_2bad2
  store i8 %v6_2bad2, i8* %v2_2bad2, align 1
  %v0_2bada = load i32, i32* @ebp, align 4
  %v1_2bada = add i32 %v0_2bada, 1
  store i32 %v1_2bada, i32* @ebp, align 4
  %v2_2bae2 = add i32 %v0_2bada, -11
  %v3_2bae2 = inttoptr i32 %v2_2bae2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2bae2, align 4
  %v0_2bae7 = load i32, i32* @ebp, align 4
  %v1_2bae7 = add i32 %v0_2bae7, -28
  %v2_2bae7 = inttoptr i32 %v1_2bae7 to i32*
  %v3_2bae7 = load i32, i32* %v2_2bae7, align 4
  %v1_2baea = add i32 %v0_2bae7, -32
  %v2_2baea = inttoptr i32 %v1_2baea to i32*
  %v3_2baea = load i32, i32* %v2_2baea, align 4
  %v2_2baed = inttoptr i32 %v3_2bae7 to i32*
  store i32 %v3_2baea, i32* %v2_2baed, align 4
  %v0_2baef = load i32, i32* @ebp, align 4
  %v1_2baef = add i32 %v0_2baef, -12
  %v2_2baef = inttoptr i32 %v1_2baef to i32*
  %v3_2baef = load i32, i32* %v2_2baef, align 4
  %v3_2baf2 = xor i32 %v3_2baef, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2baf2 = icmp eq i32 %v3_2baf2, 0
  store i32 %v3_2baf2, i32* @eax, align 8
  br i1 %v4_2baf2, label %bb, label %dec_label_pc_2bafb

bb:                                               ; preds = %dec_label_pc_2bad2
  %v1_2baf9 = call i32 @function_2bb00()
  br label %dec_label_pc_2bafb

dec_label_pc_2bafb:                               ; preds = %bb, %dec_label_pc_2bad2
  %v3_2baf9 = phi i32 [ %v1_2baf9, %bb ], [ %v3_2baf2, %dec_label_pc_2bad2 ]
  ret i32 %v3_2baf9
}

define i32 @function_2bb00() local_unnamed_addr {
dec_label_pc_2bb00:
  %v0_2bb01 = load i32, i32* @eax, align 8
  ret i32 %v0_2bb01
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE9push_backERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bb02:
  %stack_var_-20 = alloca i32, align 4
  %v2_2bb1f = ptrtoint i32* %stack_var_-20 to i32
  %v2_2bb2c = call i32 @unknown_42548(i32 %v2_2bb1f, i32 %arg1)
  %v3_2bb3b = load i32, i32* %stack_var_-20, align 4
  ret i32 %v3_2bb3b
}

define i32 @function_2bb52(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb52:
  %v0_2bb52 = load i32, i32* @eax, align 8
  %v1_2bb52 = add i32 %v0_2bb52, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_2bb52 = icmp eq i32 %v1_2bb52, 0
  store i32 %v1_2bb52, i32* @eax, align 8
  br i1 %v10_2bb52, label %bb, label %dec_label_pc_2bb59

bb:                                               ; preds = %dec_label_pc_2bb52
  %v1_2bb57 = call i32 @function_2bb5e()
  br label %dec_label_pc_2bb59

dec_label_pc_2bb59:                               ; preds = %bb, %dec_label_pc_2bb52
  %v2_2bb57 = phi i32 [ %v1_2bb57, %bb ], [ %v1_2bb52, %dec_label_pc_2bb52 ]
  ret i32 %v2_2bb57
}

define i32 @function_2bb5e() local_unnamed_addr {
dec_label_pc_2bb5e:
  %v0_2bb5f = load i32, i32* @eax, align 8
  ret i32 %v0_2bb5f
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2bb60:
  %v2_2bb7a = load i32, i32* %arg1, align 4
  %v1_2bb7c = add i32 %v2_2bb7a, 8
  store i32 %v1_2bb7c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bb8b

bb:                                               ; preds = %dec_label_pc_2bb60
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2bb89 = call i32 @function_2bb90(i32 %tmp100)
  br label %dec_label_pc_2bb8b

dec_label_pc_2bb8b:                               ; preds = %bb, %dec_label_pc_2bb60
  %v3_2bb89 = phi i32 [ %v2_2bb89, %bb ], [ %v1_2bb7c, %dec_label_pc_2bb60 ]
  ret i32 %v3_2bb89

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2bb90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb90:
  %v0_2bb91 = load i32, i32* @eax, align 8
  ret i32 %v0_2bb91
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb92:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bbb5

bb:                                               ; preds = %dec_label_pc_2bb92
  %v2_2bbb3 = call i32 @function_2bbba(i32 %arg1)
  br label %dec_label_pc_2bbb5

dec_label_pc_2bbb5:                               ; preds = %bb, %dec_label_pc_2bb92
  %v3_2bbb3 = phi i32 [ %v2_2bbb3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2bb92 ]
  ret i32 %v3_2bbb3
}

define i32 @function_2bbba(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbba:
  %v0_2bbbb = load i32, i32* @eax, align 8
  ret i32 %v0_2bbbb
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbbc:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bbe2

bb:                                               ; preds = %dec_label_pc_2bbbc
  %v2_2bbe0 = call i32 @function_2bbe7(i32 %arg1)
  br label %dec_label_pc_2bbe2

dec_label_pc_2bbe2:                               ; preds = %bb, %dec_label_pc_2bbbc
  %v3_2bbe0 = phi i32 [ %v2_2bbe0, %bb ], [ %arg1, %dec_label_pc_2bbbc ]
  ret i32 %v3_2bbe0
}

define i32 @function_2bbe7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbe7:
  %v0_2bbe8 = load i32, i32* @eax, align 8
  ret i32 %v0_2bbe8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EEC1ERKST_RKSaISt13_Rb_tree_nodeISN_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bbea:
  ret i32 %arg2
}

define i32 @function_2bbfe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbfe:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2bbfe = load i32, i32* @ecx, align 4
  %v1_2bbfe = add i32 %v0_2bbfe, -1587159995
  %v2_2bbfe = inttoptr i32 %v1_2bbfe to i8*
  %v3_2bbfe = load i8, i8* %v2_2bbfe, align 1
  %v5_2bbfe = trunc i32 %v0_2bbfe to i8
  %v6_2bbfe = load i1, i1* @cf, align 1
  %v7_2bbfe = zext i1 %v6_2bbfe to i8
  %v8_2bbfe = add i8 %v3_2bbfe, %v5_2bbfe
  %v9_2bbfe = add i8 %v7_2bbfe, %v8_2bbfe
  %v27_2bbfe = icmp ule i8 %v9_2bbfe, %v3_2bbfe
  %v28_2bbfe = icmp ult i8 %v8_2bbfe, %v3_2bbfe
  %v29_2bbfe = select i1 %v6_2bbfe, i1 %v27_2bbfe, i1 %v28_2bbfe
  store i1 %v29_2bbfe, i1* %cf.global-to-local, align 1
  store i8 %v9_2bbfe, i8* %v2_2bbfe, align 1
  %v0_2bc04 = load i32, i32* @eax, align 8
  %v1_2bc04 = trunc i32 %v0_2bc04 to i8
  %v2_2bc04 = load i1, i1* %cf.global-to-local, align 1
  %v3_2bc04 = zext i1 %v2_2bc04 to i8
  %v4_2bc04 = add i8 %v3_2bc04, %v1_2bc04
  %v19_2bc04 = icmp ule i8 %v4_2bc04, %v1_2bc04
  %v21_2bc04 = icmp eq i1 %v2_2bc04, %v19_2bc04
  store i1 %v21_2bc04, i1* %cf.global-to-local, align 1
  %v22_2bc04 = zext i8 %v4_2bc04 to i32
  %v24_2bc04 = and i32 %v0_2bc04, -256
  %v25_2bc04 = or i32 %v22_2bc04, %v24_2bc04
  store i32 %v25_2bc04, i32* %eax.global-to-local, align 8
  %v1_2bc06 = inttoptr i32 %v25_2bc04 to i8*
  %v2_2bc06 = load i8, i8* %v1_2bc06, align 1
  %v5_2bc06 = add i8 %v2_2bc06, %v4_2bc04
  store i8 %v5_2bc06, i8* %v1_2bc06, align 1
  %v0_2bc08 = load i32, i32* %eax.global-to-local, align 8
  %v1_2bc08 = load i32, i32* @ebp, align 4
  %v2_2bc08 = add i32 %v1_2bc08, -12
  %v3_2bc08 = inttoptr i32 %v2_2bc08 to i32*
  store i32 %v0_2bc08, i32* %v3_2bc08, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2bc0d = load i32, i32* @ebp, align 4
  %v1_2bc0d = add i32 %v0_2bc0d, -36
  %v2_2bc0d = inttoptr i32 %v1_2bc0d to i32*
  %v3_2bc0d = load i32, i32* %v2_2bc0d, align 4
  store i32 %v3_2bc0d, i32* %eax.global-to-local, align 8
  %v1_2bc14 = add i32 %v0_2bc0d, -28
  %v2_2bc14 = inttoptr i32 %v1_2bc14 to i32*
  %v3_2bc14 = load i32, i32* %v2_2bc14, align 4
  store i32 %v3_2bc14, i32* %eax.global-to-local, align 8
  %v2_2bc1a = call i32 @unknown_5abbc(i32 %v3_2bc14, i32 %v3_2bc0d)
  store i32 %v2_2bc1a, i32* %eax.global-to-local, align 8
  %v0_2bc1f = load i32, i32* @ebp, align 4
  %v1_2bc1f = add i32 %v0_2bc1f, -28
  %v2_2bc1f = inttoptr i32 %v1_2bc1f to i32*
  %v3_2bc1f = load i32, i32* %v2_2bc1f, align 4
  store i32 %v3_2bc1f, i32* %eax.global-to-local, align 8
  %v1_2bc22 = add i32 %v3_2bc1f, 4
  %v2_2bc22 = inttoptr i32 %v1_2bc22 to i32*
  store i32 0, i32* %v2_2bc22, align 4
  %v0_2bc29 = load i32, i32* @ebp, align 4
  %v1_2bc29 = add i32 %v0_2bc29, -28
  %v2_2bc29 = inttoptr i32 %v1_2bc29 to i32*
  %v3_2bc29 = load i32, i32* %v2_2bc29, align 4
  store i32 %v3_2bc29, i32* %eax.global-to-local, align 8
  %v1_2bc2c = add i32 %v3_2bc29, 8
  %v2_2bc2c = inttoptr i32 %v1_2bc2c to i32*
  store i32 0, i32* %v2_2bc2c, align 4
  %v0_2bc33 = load i32, i32* @ebp, align 4
  %v1_2bc33 = add i32 %v0_2bc33, -28
  %v2_2bc33 = inttoptr i32 %v1_2bc33 to i32*
  %v3_2bc33 = load i32, i32* %v2_2bc33, align 4
  store i32 %v3_2bc33, i32* %eax.global-to-local, align 8
  %v1_2bc36 = add i32 %v3_2bc33, 12
  %v2_2bc36 = inttoptr i32 %v1_2bc36 to i32*
  store i32 0, i32* %v2_2bc36, align 4
  %v3_2bc36 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2bc36

; uselistorder directives
  uselistorder i8 %v4_2bc04, { 0, 2, 1 }
  uselistorder i8 %v1_2bc04, { 1, 0 }
  uselistorder i8 %v9_2bbfe, { 1, 0 }
  uselistorder i8 %v8_2bbfe, { 1, 0 }
  uselistorder i32 -1587159995, { 0, 1, 4, 3, 2 }
}

define i32 @function_2bc27(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bc27:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bc3e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bc3e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2bc3e = load i32, i32* @ebp, align 4
  %v1_2bc3e = add i32 %v0_2bc3e, 1
  store i32 %v1_2bc3e, i32* %ebp.global-to-local, align 4
  %v0_2bc41 = load i32, i32* @eax, align 8
  %v1_2bc41 = add i32 %v0_2bc41, 1
  %v11_2bc41 = trunc i32 %v1_2bc41 to i8
  store i32 %v1_2bc41, i32* %eax.global-to-local, align 8
  %v1_2bc42 = inttoptr i32 %v1_2bc41 to i8*
  %v2_2bc42 = load i8, i8* %v1_2bc42, align 1
  %v5_2bc42 = load i1, i1* @cf, align 1
  %v6_2bc42 = zext i1 %v5_2bc42 to i8
  %v7_2bc42 = add i8 %v2_2bc42, %v11_2bc41
  %v8_2bc42 = add i8 %v6_2bc42, %v7_2bc42
  %v26_2bc42 = icmp ule i8 %v8_2bc42, %v2_2bc42
  %v27_2bc42 = icmp ult i8 %v7_2bc42, %v2_2bc42
  %v28_2bc42 = select i1 %v5_2bc42, i1 %v26_2bc42, i1 %v27_2bc42
  store i1 %v28_2bc42, i1* %cf.global-to-local, align 1
  store i8 %v8_2bc42, i8* %v1_2bc42, align 1
  %v0_2bc44 = load i32, i32* %eax.global-to-local, align 8
  %v1_2bc44 = inttoptr i32 %v0_2bc44 to i8*
  %v2_2bc44 = load i8, i8* %v1_2bc44, align 1
  %v4_2bc44 = trunc i32 %v0_2bc44 to i8
  %v5_2bc44 = add i8 %v2_2bc44, %v4_2bc44
  %v10_2bc44 = icmp ult i8 %v5_2bc44, %v2_2bc44
  store i1 %v10_2bc44, i1* %cf.global-to-local, align 1
  store i8 %v5_2bc44, i8* %v1_2bc44, align 1
  %v0_2bc46 = load i32, i32* @ebx, align 8
  %v1_2bc46 = add i32 %v0_2bc46, 1086841925
  %v2_2bc46 = inttoptr i32 %v1_2bc46 to i8*
  %v3_2bc46 = load i8, i8* %v2_2bc46, align 1
  %v4_2bc46 = load i32, i32* @ecx, align 4
  %v5_2bc46 = trunc i32 %v4_2bc46 to i8
  %v6_2bc46 = add i8 %v5_2bc46, %v3_2bc46
  %v11_2bc46 = icmp ult i8 %v6_2bc46, %v3_2bc46
  store i1 %v11_2bc46, i1* %cf.global-to-local, align 1
  store i8 %v6_2bc46, i8* %v2_2bc46, align 1
  %v0_2bc4c = load i32, i32* %eax.global-to-local, align 8
  %v1_2bc4c = trunc i32 %v0_2bc4c to i8
  %v2_2bc4c = load i1, i1* %cf.global-to-local, align 1
  %v3_2bc4c = zext i1 %v2_2bc4c to i8
  %v4_2bc4c = add i8 %v3_2bc4c, %v1_2bc4c
  %v19_2bc4c = icmp ule i8 %v4_2bc4c, %v1_2bc4c
  %v21_2bc4c = icmp eq i1 %v2_2bc4c, %v19_2bc4c
  store i1 %v21_2bc4c, i1* %cf.global-to-local, align 1
  %v22_2bc4c = zext i8 %v4_2bc4c to i32
  %v24_2bc4c = and i32 %v0_2bc4c, -256
  %v25_2bc4c = or i32 %v22_2bc4c, %v24_2bc4c
  store i32 %v25_2bc4c, i32* %eax.global-to-local, align 8
  %v1_2bc4e = inttoptr i32 %v25_2bc4c to i8*
  %v2_2bc4e = load i8, i8* %v1_2bc4e, align 1
  %v5_2bc4e = add i8 %v2_2bc4e, %v4_2bc4c
  %v10_2bc4e = icmp ult i8 %v5_2bc4e, %v2_2bc4e
  store i1 %v10_2bc4e, i1* %cf.global-to-local, align 1
  store i8 %v5_2bc4e, i8* %v1_2bc4e, align 1
  %v0_2bc50 = load i32, i32* @ebx, align 8
  %v1_2bc50 = add i32 %v0_2bc50, 76145733
  %v2_2bc50 = inttoptr i32 %v1_2bc50 to i8*
  %v3_2bc50 = load i8, i8* %v2_2bc50, align 1
  %v4_2bc50 = load i32, i32* @ecx, align 4
  %v5_2bc50 = trunc i32 %v4_2bc50 to i8
  %v6_2bc50 = add i8 %v5_2bc50, %v3_2bc50
  store i8 %v6_2bc50, i8* %v2_2bc50, align 1
  %v0_2bc56 = load i32, i32* %eax.global-to-local, align 8
  %v1_2bc56 = trunc i32 %v0_2bc56 to i8
  %v2_2bc56 = and i8 %v1_2bc56, -24
  %v8_2bc56 = zext i8 %v2_2bc56 to i32
  %v10_2bc56 = and i32 %v0_2bc56, -256
  %v11_2bc56 = or i32 %v8_2bc56, %v10_2bc56
  store i32 %v11_2bc56, i32* %eax.global-to-local, align 8
  store i8 %v2_2bc56, i8* inttoptr (i32 -1962933521 to i8*), align 1
  %v0_2bc5d = load i32, i32* %ebp.global-to-local, align 4
  %v1_2bc5d = add i32 %v0_2bc5d, 1
  store i32 %v1_2bc5d, i32* @ebp, align 4
  %v3_2bc5f = xor i32 %v11_2bc56, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_2bc5f = icmp eq i32 %v3_2bc5f, 0
  store i32 %v3_2bc5f, i32* @eax, align 8
  br i1 %v4_2bc5f, label %bb, label %dec_label_pc_2bc68

bb:                                               ; preds = %dec_label_pc_2bc3e
  %v1_2bc66 = call i32 @function_2bc6d()
  store i32 %v1_2bc66, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2bc68

dec_label_pc_2bc68:                               ; preds = %bb, %dec_label_pc_2bc3e
  %v3_2bc66 = phi i32 [ %v1_2bc66, %bb ], [ %v3_2bc5f, %dec_label_pc_2bc3e ]
  ret i32 %v3_2bc66

; uselistorder directives
  uselistorder i8 %v2_2bc4e, { 1, 0 }
  uselistorder i8 %v4_2bc4c, { 0, 2, 1 }
  uselistorder i8 %v1_2bc4c, { 1, 0 }
  uselistorder i8 %v3_2bc46, { 1, 0 }
  uselistorder i8 %v8_2bc42, { 1, 0 }
  uselistorder i8 %v7_2bc42, { 1, 0 }
  uselistorder i8 %v2_2bc42, { 1, 2, 0 }
}

define i32 @function_2bc6d() local_unnamed_addr {
dec_label_pc_2bc6d:
  %v0_2bc6e = load i32, i32* @eax, align 8
  ret i32 %v0_2bc6e
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc70:
  %v1_2bc8a = add i32 %arg1, 8
  %v2_2bc8a = inttoptr i32 %v1_2bc8a to i32*
  %v3_2bc8a = load i32, i32* %v2_2bc8a, align 4
  store i32 %v3_2bc8a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bc99

bb:                                               ; preds = %dec_label_pc_2bc70
  %v2_2bc97 = call i32 @function_2bc9e(i32 %arg1)
  br label %dec_label_pc_2bc99

dec_label_pc_2bc99:                               ; preds = %bb, %dec_label_pc_2bc70
  %v3_2bc97 = phi i32 [ %v2_2bc97, %bb ], [ %v3_2bc8a, %dec_label_pc_2bc70 ]
  ret i32 %v3_2bc97
}

define i32 @function_2bc9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc9e:
  %v0_2bc9f = load i32, i32* @eax, align 8
  ret i32 %v0_2bc9f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bca0:
  %v2_2bcd1 = call i32 @unknown_5ad0a(i32 %arg1, i32 %arg2)
  %v2_2bcdf = add i32 %v2_2bcd1, 4
  %v3_2bcdf = inttoptr i32 %v2_2bcdf to i32*
  store i32 %arg3, i32* %v3_2bcdf, align 4
  %v1_2bce5 = add i32 %arg2, 12
  %v2_2bce5 = inttoptr i32 %v1_2bce5 to i32*
  %v3_2bce5 = load i32, i32* %v2_2bce5, align 4
  ret i32 %v3_2bce5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2bd4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd4a:
  %v0_2bd4a = load i32, i32* @ebp, align 4
  %v1_2bd4a = add i32 %v0_2bd4a, 1
  store i32 %v1_2bd4a, i32* @ebp, align 4
  %v15_2bd4a = load i32, i32* @eax, align 8
  ret i32 %v15_2bd4a
}

define i32 @function_2bd56(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd56:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bd56 = load i32, i32* @eax, align 8
  %v1_2bd56 = add i32 %v0_2bd56, 1
  %v11_2bd57 = or i32 %v1_2bd56, 133
  store i32 %v11_2bd57, i32* %eax.global-to-local, align 8
  %v0_2bd59 = load i32, i32* @ecx, align 4
  %v1_2bd59 = load i32, i32* @ebp, align 4
  %v3_2bd59 = add i32 %v0_2bd59, -117
  %v4_2bd59 = add i32 %v3_2bd59, %v1_2bd59
  %v5_2bd59 = inttoptr i32 %v4_2bd59 to i8*
  %v6_2bd59 = load i8, i8* %v5_2bd59, align 1
  %v8_2bd59 = mul i8 %v6_2bd59, 32
  store i8 %v8_2bd59, i8* %v5_2bd59, align 1
  %v0_2bd60 = load i32, i32* %eax.global-to-local, align 8
  %v2_2bd60 = add i32 %v0_2bd60, 36
  %v16_2bd60 = and i32 %v2_2bd60, 255
  %v18_2bd60 = and i32 %v0_2bd60, -256
  %v19_2bd60 = or i32 %v16_2bd60, %v18_2bd60
  store i32 %v19_2bd60, i32* %eax.global-to-local, align 8
  %v0_2bd62 = call i32 @unknown_574ed()
  store i32 %v0_2bd62, i32* %eax.global-to-local, align 8
  %v0_2bd67 = load i32, i32* @ebp, align 4
  %v1_2bd67 = add i32 %v0_2bd67, -16
  %v2_2bd67 = inttoptr i32 %v1_2bd67 to i32*
  %v3_2bd67 = load i32, i32* %v2_2bd67, align 4
  %v1_2bd72 = add i32 %v0_2bd67, -28
  %v2_2bd72 = inttoptr i32 %v1_2bd72 to i32*
  %v3_2bd72 = load i32, i32* %v2_2bd72, align 4
  store i32 %v3_2bd72, i32* %eax.global-to-local, align 8
  %v3_2bd78 = call i32 @unknown_57940(i32 %v3_2bd72, i32 %v0_2bd62, i32 %v3_2bd67)
  store i32 %v3_2bd78, i32* %eax.global-to-local, align 8
  %v0_2bd7f = load i32, i32* @ebp, align 4
  %v1_2bd7f = add i32 %v0_2bd7f, -16
  %v2_2bd7f = inttoptr i32 %v1_2bd7f to i32*
  %v3_2bd7f = load i32, i32* %v2_2bd7f, align 4
  store i32 %v3_2bd7f, i32* %eax.global-to-local, align 8
  %v2_2bd82 = add i32 %v3_2bd7f, 12
  %v3_2bd82 = inttoptr i32 %v2_2bd82 to i32*
  store i32 %v3_2bd78, i32* %v3_2bd82, align 4
  %v0_2bd85 = load i32, i32* @ebp, align 4
  %v1_2bd85 = add i32 %v0_2bd85, -16
  %v2_2bd85 = inttoptr i32 %v1_2bd85 to i32*
  %v3_2bd85 = load i32, i32* %v2_2bd85, align 4
  store i32 %v3_2bd85, i32* %eax.global-to-local, align 8
  %v2_2bd88 = add i32 %v0_2bd85, -36
  %v3_2bd88 = inttoptr i32 %v2_2bd88 to i32*
  store i32 %v3_2bd85, i32* %v3_2bd88, align 4
  %v0_2bd8b = load i32, i32* @ebp, align 4
  %v1_2bd8b = add i32 %v0_2bd8b, -32
  %v2_2bd8b = inttoptr i32 %v1_2bd8b to i32*
  %v3_2bd8b = load i32, i32* %v2_2bd8b, align 4
  store i32 %v3_2bd8b, i32* %eax.global-to-local, align 8
  %v1_2bd91 = call i32 @unknown_5ad73(i32 %v3_2bd8b)
  store i32 %v1_2bd91, i32* %eax.global-to-local, align 8
  %v1_2bd96 = load i32, i32* @ebp, align 4
  %v2_2bd96 = add i32 %v1_2bd96, -32
  %v3_2bd96 = inttoptr i32 %v2_2bd96 to i32*
  store i32 %v1_2bd91, i32* %v3_2bd96, align 4
  %v0_2bd99 = load i32, i32* @ebp, align 4
  %v1_2bd99 = add i32 %v0_2bd99, -32
  %v2_2bd99 = inttoptr i32 %v1_2bd99 to i32*
  %v3_2bd99 = load i32, i32* %v2_2bd99, align 4
  %v10_2bd99 = icmp eq i32 %v3_2bd99, 0
  %v1_2bd9d = icmp eq i1 %v10_2bd99, false
  %v2_2bd9d = zext i1 %v1_2bd9d to i32
  %v3_2bd9d = load i32, i32* %eax.global-to-local, align 8
  %v4_2bd9d = and i32 %v3_2bd9d, -256
  %v5_2bd9d = or i32 %v2_2bd9d, %v4_2bd9d
  store i32 %v5_2bd9d, i32* %eax.global-to-local, align 8
  %v1_2bda4 = add i32 %v0_2bd99, -20
  %v2_2bda4 = inttoptr i32 %v1_2bda4 to i32*
  %v3_2bda4 = load i32, i32* %v2_2bda4, align 4
  store i32 %v3_2bda4, i32* @eax, align 8
  %v1_2bda7 = add i32 %v0_2bd99, -12
  %v2_2bda7 = inttoptr i32 %v1_2bda7 to i32*
  %v3_2bda7 = load i32, i32* %v2_2bda7, align 4
  %v4_2bdaa = icmp eq i32 %v3_2bda7, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2bdaa, label %bb, label %dec_label_pc_2bdb3

bb:                                               ; preds = %dec_label_pc_2bd56
  %v1_2bdb1 = call i32 @function_2bdea()
  store i32 %v1_2bdb1, i32* @eax, align 8
  br label %dec_label_pc_2bdb3

dec_label_pc_2bdb3:                               ; preds = %bb, %dec_label_pc_2bd56
  %v0_2bdb3 = call i32 @function_2bde5()
  store i32 %v0_2bdb3, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bdb3

; uselistorder directives
  uselistorder i32 %v0_2bd99, { 1, 0, 2 }
  uselistorder i32 %v0_2bd60, { 1, 0 }
}

define i32 @function_2bdb6() local_unnamed_addr {
dec_label_pc_2bdb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bdb6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2bdb6
}

define i32 @function_2bde5() local_unnamed_addr {
dec_label_pc_2bde5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2bdea() local_unnamed_addr {
dec_label_pc_2bdea:
  %v0_2bdef = load i32, i32* @eax, align 8
  ret i32 %v0_2bdef
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bdf0:
  %v1_2be0a = add i32 %arg1, 8
  %v2_2be0a = inttoptr i32 %v1_2be0a to i32*
  %v3_2be0a = load i32, i32* %v2_2be0a, align 4
  ret i32 %v3_2be0a
}

define i32 @function_2be15(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be15:
  %zf.global-to-local = alloca i1, align 1
  %v2_2be15 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2be15 = load i32, i32* @eax, align 8
  %v4_2be15 = trunc i32 %v3_2be15 to i8
  %v5_2be15 = add i8 %v4_2be15, %v2_2be15
  %v15_2be15 = icmp eq i8 %v5_2be15, 0
  store i1 %v15_2be15, i1* %zf.global-to-local, align 1
  %v21_2be15 = inttoptr i32 %v3_2be15 to i8*
  store i8 %v5_2be15, i8* %v21_2be15, align 1
  %v0_2be17 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2be17, label %bb, label %dec_label_pc_2be15.dec_label_pc_2be19_crit_edge

dec_label_pc_2be15.dec_label_pc_2be19_crit_edge:  ; preds = %dec_label_pc_2be15
  %v2_2be17.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2be19

bb:                                               ; preds = %dec_label_pc_2be15
  %v1_2be17 = call i32 @function_2be1e()
  br label %dec_label_pc_2be19

dec_label_pc_2be19:                               ; preds = %dec_label_pc_2be15.dec_label_pc_2be19_crit_edge, %bb
  %v2_2be17 = phi i32 [ %v2_2be17.pre, %dec_label_pc_2be15.dec_label_pc_2be19_crit_edge ], [ %v1_2be17, %bb ]
  ret i32 %v2_2be17

; uselistorder directives
  uselistorder label %dec_label_pc_2be19, { 1, 0 }
}

define i32 @function_2be1e() local_unnamed_addr {
dec_label_pc_2be1e:
  %v0_2be1f = load i32, i32* @eax, align 8
  ret i32 %v0_2be1f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be20:
  %v1_2be3a = add i32 %arg1, 8
  ret i32 %v1_2be3a
}

define i32 @function_2be45(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be45:
  %zf.global-to-local = alloca i1, align 1
  %v2_2be45 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2be45 = load i32, i32* @eax, align 8
  %v4_2be45 = trunc i32 %v3_2be45 to i8
  %v5_2be45 = add i8 %v4_2be45, %v2_2be45
  %v15_2be45 = icmp eq i8 %v5_2be45, 0
  store i1 %v15_2be45, i1* %zf.global-to-local, align 1
  %v21_2be45 = inttoptr i32 %v3_2be45 to i8*
  store i8 %v5_2be45, i8* %v21_2be45, align 1
  %v0_2be47 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2be47, label %bb, label %dec_label_pc_2be45.dec_label_pc_2be49_crit_edge

dec_label_pc_2be45.dec_label_pc_2be49_crit_edge:  ; preds = %dec_label_pc_2be45
  %v2_2be47.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2be49

bb:                                               ; preds = %dec_label_pc_2be45
  %v1_2be47 = call i32 @function_2be4e()
  br label %dec_label_pc_2be49

dec_label_pc_2be49:                               ; preds = %dec_label_pc_2be45.dec_label_pc_2be49_crit_edge, %bb
  %v2_2be47 = phi i32 [ %v2_2be47.pre, %dec_label_pc_2be45.dec_label_pc_2be49_crit_edge ], [ %v1_2be47, %bb ]
  ret i32 %v2_2be47

; uselistorder directives
  uselistorder label %dec_label_pc_2be49, { 1, 0 }
}

define i32 @function_2be4e() local_unnamed_addr {
dec_label_pc_2be4e:
  %v0_2be4f = load i32, i32* @eax, align 8
  ret i32 %v0_2be4f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be50:
  store i32 %arg1, i32* @eax, align 8
  %v1_2be6d = call i32 @function_2c819(i32 %arg1)
  ret i32 %v1_2be6d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2be76(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be76:
  %v0_2be76 = load i32, i32* @edx, align 8
  %v4_2be76 = icmp eq i32 %v0_2be76, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2be76, label %bb, label %dec_label_pc_2be76.dec_label_pc_2be7e_crit_edge

dec_label_pc_2be76.dec_label_pc_2be7e_crit_edge:  ; preds = %dec_label_pc_2be76
  %v2_2be7c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2be7e

bb:                                               ; preds = %dec_label_pc_2be76
  %v1_2be7c = call i32 @function_2be83()
  br label %dec_label_pc_2be7e

dec_label_pc_2be7e:                               ; preds = %dec_label_pc_2be76.dec_label_pc_2be7e_crit_edge, %bb
  %v2_2be7c = phi i32 [ %v2_2be7c.pre, %dec_label_pc_2be76.dec_label_pc_2be7e_crit_edge ], [ %v1_2be7c, %bb ]
  ret i32 %v2_2be7c

; uselistorder directives
  uselistorder label %dec_label_pc_2be7e, { 1, 0 }
}

define i32 @function_2be83() local_unnamed_addr {
dec_label_pc_2be83:
  %v0_2be84 = load i32, i32* @eax, align 8
  ret i32 %v0_2be84
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be85:
  store i32 %arg1, i32* @eax, align 8
  %v1_2bea2 = call i32 @function_2c895(i32 %arg1)
  store i32 %v1_2bea2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2beb3

bb:                                               ; preds = %dec_label_pc_2be85
  %v1_2beb1 = call i32 @function_2beb8()
  br label %dec_label_pc_2beb3

dec_label_pc_2beb3:                               ; preds = %bb, %dec_label_pc_2be85
  %v2_2beb1 = phi i32 [ %v1_2beb1, %bb ], [ %v1_2bea2, %dec_label_pc_2be85 ]
  ret i32 %v2_2beb1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2beb8() local_unnamed_addr {
dec_label_pc_2beb8:
  %v0_2beb9 = load i32, i32* @eax, align 8
  ret i32 %v0_2beb9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2beba:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bedd

bb:                                               ; preds = %dec_label_pc_2beba
  %v2_2bedb = call i32 @function_2bee2(i32 %arg1)
  br label %dec_label_pc_2bedd

dec_label_pc_2bedd:                               ; preds = %bb, %dec_label_pc_2beba
  %v3_2bedb = phi i32 [ %v2_2bedb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2beba ]
  ret i32 %v3_2bedb
}

define i32 @function_2bee2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bee2:
  %v0_2bee3 = load i32, i32* @eax, align 8
  ret i32 %v0_2bee3
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bee4:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bf15

bb:                                               ; preds = %dec_label_pc_2bee4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2bf13 = call i32 @function_2bf1a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2bf15

dec_label_pc_2bf15:                               ; preds = %bb, %dec_label_pc_2bee4
  %v4_2bf13 = phi i32 [ %v3_2bf13, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2bee4 ]
  ret i32 %v4_2bf13

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2bf1a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bf1a:
  %v0_2bf1b = load i32, i32* @eax, align 8
  ret i32 %v0_2bf1b
}

define i32 @_ZNK5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE4fullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bf1c:
  %v1_2bf36 = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_2bf36 = inttoptr i32 %v1_2bf36 to i32*
  %v3_2bf36 = load i32, i32* %v2_2bf36, align 4
  %v1_2bf3f = add i32 %arg1, 120
  %v2_2bf3f = inttoptr i32 %v1_2bf3f to i32*
  %v3_2bf3f = load i32, i32* %v2_2bf3f, align 4
  %v12_2bf42 = icmp eq i32 %v3_2bf36, %v3_2bf3f
  %v1_2bf44 = zext i1 %v12_2bf42 to i32
  %v3_2bf44 = and i32 %v3_2bf3f, -256
  %v4_2bf44 = or i32 %v1_2bf44, %v3_2bf44
  store i32 %v4_2bf44, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2bf53

bb:                                               ; preds = %dec_label_pc_2bf1c
  %v2_2bf51 = call i32 @function_2bf58(i32 %arg1)
  br label %dec_label_pc_2bf53

dec_label_pc_2bf53:                               ; preds = %bb, %dec_label_pc_2bf1c
  %v3_2bf51 = phi i32 [ %v2_2bf51, %bb ], [ %v4_2bf44, %dec_label_pc_2bf1c ]
  ret i32 %v3_2bf51

; uselistorder directives
  uselistorder i32 %v3_2bf3f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2bf58(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bf58:
  %v0_2bf59 = load i32, i32* @eax, align 8
  ret i32 %v0_2bf59
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE12reserve_implEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bf5a:
  %stack_var_-17 = alloca i32, align 4
  %v2_2bf77 = ptrtoint i32* %stack_var_-17 to i32
  %v3_2bf8b = call i32 @unknown_5b05e(i32 %arg1, i32 %arg2, i32 %v2_2bf77)
  %v1_2bf99 = call i32 @unknown_3ffd0(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_2bfa2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bfa2:
  %v0_2bfa4 = load i32, i32* @edx, align 8
  %v1_2bfa4 = load i32, i32* @eax, align 8
  %v2_2bfa4 = add i32 %v1_2bfa4, 124
  %v3_2bfa4 = inttoptr i32 %v2_2bfa4 to i32*
  store i32 %v0_2bfa4, i32* %v3_2bfa4, align 4
  %v0_2bfa7 = load i32, i32* @ebp, align 4
  %v1_2bfa7 = add i32 %v0_2bfa7, -28
  %v2_2bfa7 = inttoptr i32 %v1_2bfa7 to i32*
  %v3_2bfa7 = load i32, i32* %v2_2bfa7, align 4
  %v1_2bfaa = add i32 %v0_2bfa7, -32
  %v2_2bfaa = inttoptr i32 %v1_2bfaa to i32*
  %v3_2bfaa = load i32, i32* %v2_2bfaa, align 4
  %v2_2bfad = add i32 %v3_2bfa7, 120
  %v3_2bfad = inttoptr i32 %v2_2bfad to i32*
  store i32 %v3_2bfaa, i32* %v3_2bfad, align 4
  %v0_2bfb0 = load i32, i32* @ebp, align 4
  %v1_2bfb0 = add i32 %v0_2bfb0, -28
  %v2_2bfb0 = inttoptr i32 %v1_2bfb0 to i32*
  %v3_2bfb0 = load i32, i32* %v2_2bfb0, align 4
  %v1_2bfb3 = add i32 %v3_2bfb0, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_2bfb3 = inttoptr i32 %v1_2bfb3 to i32*
  %v3_2bfb3 = load i32, i32* %v2_2bfb3, align 4
  %v1_2bfbc = add i32 %v3_2bfb0, 120
  %v2_2bfbc = inttoptr i32 %v1_2bfbc to i32*
  %v3_2bfbc = load i32, i32* %v2_2bfbc, align 4
  %tmp11 = icmp ugt i32 %v3_2bfb3, %v3_2bfbc
  br i1 %tmp11, label %dec_label_pc_2bfc3, label %bb

bb:                                               ; preds = %dec_label_pc_2bfa2
  %v3_2bfc1 = call i32 @function_2bfe7()
  br label %dec_label_pc_2bfc3

dec_label_pc_2bfc3:                               ; preds = %dec_label_pc_2bfa2, %bb
  %v3_2bfdb = phi i32 [ %v3_2bfc1, %bb ], [ %v3_2bfbc, %dec_label_pc_2bfa2 ]
  ret i32 %v3_2bfdb

; uselistorder directives
  uselistorder i32 %v3_2bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_2bfc3, { 1, 0 }
}

define i32 @function_2bfe7() local_unnamed_addr {
dec_label_pc_2bfe7:
  %v0_2bfe7 = load i32, i32* @ebp, align 4
  %v1_2bfe7 = add i32 %v0_2bfe7, -12
  %v2_2bfe7 = inttoptr i32 %v1_2bfe7 to i32*
  %v3_2bfe7 = load i32, i32* %v2_2bfe7, align 4
  ret i32 %v3_2bfe7
}

define i32 @function_2bfea(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bfea:
  %v0_2bfea = load i32, i32* @eax, align 8
  %v3_2bfea = xor i32 %v0_2bfea, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2bfea = icmp eq i32 %v3_2bfea, 0
  store i32 %v3_2bfea, i32* @eax, align 8
  br i1 %v4_2bfea, label %bb, label %dec_label_pc_2bff3

bb:                                               ; preds = %dec_label_pc_2bfea
  %v1_2bff1 = call i32 @function_2bff8()
  br label %dec_label_pc_2bff3

dec_label_pc_2bff3:                               ; preds = %bb, %dec_label_pc_2bfea
  %v2_2bff1 = phi i32 [ %v1_2bff1, %bb ], [ %v3_2bfea, %dec_label_pc_2bfea ]
  ret i32 %v2_2bff1
}

define i32 @function_2bff8() local_unnamed_addr {
dec_label_pc_2bff8:
  %v0_2bff9 = load i32, i32* @eax, align 8
  ret i32 %v0_2bff9
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE17new_capacity_implEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bffa:
  %v1_2c01a = add i32 %arg1, 120
  %v2_2c01a = inttoptr i32 %v1_2c01a to i32*
  %v3_2c01a = load i32, i32* %v2_2c01a, align 4
  %v7_2c020 = icmp ult i32 %v3_2c01a, %arg2
  br i1 %v7_2c020, label %bb, label %dec_label_pc_2c024

bb:                                               ; preds = %dec_label_pc_2bffa
  %v3_2c022 = call i32 @function_2c048(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c024

dec_label_pc_2c024:                               ; preds = %bb, %dec_label_pc_2bffa
  %v3_2c03c = phi i32 [ %v3_2c022, %bb ], [ %arg2, %dec_label_pc_2bffa ]
  ret i32 %v3_2c03c
}

define i32 @function_2c048(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c048:
  %v0_2c048 = load i32, i32* @ebp, align 4
  %v1_2c048 = add i32 %v0_2c048, -28
  %v2_2c048 = inttoptr i32 %v1_2c048 to i32*
  %v3_2c048 = load i32, i32* %v2_2c048, align 4
  %v1_2c04b = add i32 %v3_2c048, 120
  %v2_2c04b = inttoptr i32 %v1_2c04b to i32*
  %v3_2c04b = load i32, i32* %v2_2c04b, align 4
  %v1_2c051 = call i32 @unknown_5b1ea(i32 %v3_2c04b)
  %v1_2c056 = load i32, i32* @ebp, align 4
  %v2_2c056 = add i32 %v1_2c056, -16
  %v3_2c056 = inttoptr i32 %v2_2c056 to i32*
  store i32 %v1_2c051, i32* %v3_2c056, align 4
  %v0_2c059 = load i32, i32* @ebp, align 4
  %v1_2c059 = add i32 %v0_2c059, -32
  %v1_2c060 = add i32 %v0_2c059, -16
  %v2_2c066 = call i32 @unknown_41cbf(i32 %v1_2c060, i32 %v1_2c059)
  %v1_2c06b = inttoptr i32 %v2_2c066 to i32*
  %v2_2c06b = load i32, i32* %v1_2c06b, align 4
  store i32 %v2_2c06b, i32* @eax, align 8
  %v0_2c06d = load i32, i32* @ebp, align 4
  %v1_2c06d = add i32 %v0_2c06d, -12
  %v2_2c06d = inttoptr i32 %v1_2c06d to i32*
  %v3_2c06d = load i32, i32* %v2_2c06d, align 4
  %v4_2c070 = icmp eq i32 %v3_2c06d, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2c070, label %bb, label %dec_label_pc_2c079

bb:                                               ; preds = %dec_label_pc_2c048
  %v1_2c077 = call i32 @function_2c07e()
  br label %dec_label_pc_2c079

dec_label_pc_2c079:                               ; preds = %bb, %dec_label_pc_2c048
  %v2_2c077 = phi i32 [ %v1_2c077, %bb ], [ %v2_2c06b, %dec_label_pc_2c048 ]
  ret i32 %v2_2c077

; uselistorder directives
  uselistorder i32 120, { 0, 1, 9, 10, 2, 3, 4, 5, 15, 6, 7, 8, 11, 12, 13, 14 }
}

define i32 @function_2c07e() local_unnamed_addr {
dec_label_pc_2c07e:
  %v0_2c07f = load i32, i32* @eax, align 8
  ret i32 %v0_2c07f
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE12slot_invoker8m_invokeERKNS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEz(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c080:
  %v2_2c0a7 = load i32, i32* %arg2, align 4
  %v1_2c0a9 = inttoptr i32 %v2_2c0a7 to i32*
  %v2_2c0a9 = load i32, i32* %v1_2c0a9, align 4
  %v1_2c0b1 = call i32 @unknown_46380(i32 %arg3)
  %v1_2c0b6 = add i32 %v1_2c0b1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2c0bc = call i32 @unknown_5b2a0(i32 %v1_2c0b6)
  %v3_2c0d1 = call i32 @unknown_5b2d0(i32 %arg1, i32 %v1_2c0bc, i32 %v2_2c0a9)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c0e8

bb:                                               ; preds = %dec_label_pc_2c080
  %v1_2c0e6 = call i32 @function_2c0ed()
  br label %dec_label_pc_2c0e8

dec_label_pc_2c0e8:                               ; preds = %bb, %dec_label_pc_2c080
  %v2_2c0e6 = phi i32 [ %v1_2c0e6, %bb ], [ %arg1, %dec_label_pc_2c080 ]
  ret i32 %v2_2c0e6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c0ed() local_unnamed_addr {
dec_label_pc_2c0ed:
  %v0_2c0f1 = load i32, i32* @eax, align 8
  ret i32 %v0_2c0f1
}

define i32 @_ZN5boost6detail8function22functor_manager_commonIPFbRKSsS4_jEE10manage_ptrERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c0f4:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v10_2c118 = icmp eq i32 %arg3, 0
  %v1_2c11c = icmp eq i1 %v10_2c118, false
  br i1 %v1_2c11c, label %dec_label_pc_2c12d, label %dec_label_pc_2c11e

dec_label_pc_2c11e:                               ; preds = %dec_label_pc_2c0f4
  %v2_2c121 = load i32, i32* %arg1, align 4
  %v2_2c126 = inttoptr i32 %arg2 to i32*
  store i32 %v2_2c121, i32* %v2_2c126, align 4
  %v3_2c128 = call i32 @function_2c1c1(i32 %arg3, i32 %arg2, i32 %tmp105)
  ret i32 %v3_2c128

dec_label_pc_2c12d:                               ; preds = %dec_label_pc_2c0f4
  %v13_2c12d = icmp eq i32 %arg3, 1
  %v1_2c131 = icmp eq i1 %v13_2c12d, false
  br i1 %v1_2c131, label %dec_label_pc_2c148, label %dec_label_pc_2c133

dec_label_pc_2c133:                               ; preds = %dec_label_pc_2c12d
  %v2_2c136 = load i32, i32* %arg1, align 4
  %v2_2c13b = inttoptr i32 %arg2 to i32*
  store i32 %v2_2c136, i32* %v2_2c13b, align 4
  store i32 0, i32* %arg1, align 4
  %v3_2c146 = call i32 @function_2c1c1(i32 %arg3, i32 %arg2, i32 %tmp105)
  ret i32 %v3_2c146

dec_label_pc_2c148:                               ; preds = %dec_label_pc_2c12d
  %v13_2c148 = icmp eq i32 %arg3, 2
  %v1_2c14c = icmp eq i1 %v13_2c148, false
  br i1 %v1_2c14c, label %dec_label_pc_2c159, label %dec_label_pc_2c14e

dec_label_pc_2c14e:                               ; preds = %dec_label_pc_2c148
  %v1_2c151 = inttoptr i32 %arg2 to i32*
  store i32 0, i32* %v1_2c151, align 4
  %v3_2c157 = call i32 @function_2c1c1(i32 %arg3, i32 %arg2, i32 %tmp105)
  ret i32 %v3_2c157

dec_label_pc_2c159:                               ; preds = %dec_label_pc_2c148
  %v13_2c159 = icmp eq i32 %arg3, 3
  %v1_2c15d = icmp eq i1 %v13_2c159, false
  br i1 %v1_2c15d, label %bb, label %dec_label_pc_2c15f

bb:                                               ; preds = %dec_label_pc_2c159
  %v5_2c15d = call i32 @function_2c1aa(i32 %arg3, i32 %arg2, i32 %tmp105)
  br label %dec_label_pc_2c15f

dec_label_pc_2c15f:                               ; preds = %bb, %dec_label_pc_2c159
  %v1_2c162 = inttoptr i32 %arg2 to i32*
  %v2_2c162 = load i32, i32* %v1_2c162, align 4
  store i32 %v2_2c162, i32* @eax, align 8
  %v1_2c16e = call i32 @function_2decc(i32 ptrtoint (i32* @global_var_34294.2033 to i32))
  store i32 %v2_2c162, i32* @eax, align 8
  %v1_2c17b = call i32 @function_2decc(i32 %v2_2c162)
  ret i32 %v1_2c17b

; uselistorder directives
  uselistorder i32 %tmp105, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_2decc, { 1, 0 }
  uselistorder i32 %arg3, { 6, 0, 5, 1, 4, 2, 3, 7 }
  uselistorder i32 %arg2, { 6, 7, 4, 5, 2, 3, 0, 1 }
}

define i32 @function_2c18b() local_unnamed_addr {
dec_label_pc_2c18b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c18b = load i32, i32* @ebp, align 4
  %v1_2c18b = add i32 %v0_2c18b, -1064038464
  %v2_2c18b = inttoptr i32 %v1_2c18b to i32*
  %v3_2c18b = load i32, i32* %v2_2c18b, align 4
  %v4_2c18b = add i32 %v3_2c18b, 1
  store i32 %v4_2c18b, i32* %v2_2c18b, align 4
  %v0_2c191 = load i32, i32* %eax.global-to-local, align 8
  %v4_2c191 = trunc i32 %v0_2c191 to i8
  %v5_2c191 = icmp eq i8 %v4_2c191, 0
  %v0_2c19f = load i32, i32* @ebp, align 4
  br i1 %v5_2c191, label %dec_label_pc_2c19f, label %dec_label_pc_2c195

dec_label_pc_2c195:                               ; preds = %dec_label_pc_2c18b
  %v1_2c195 = add i32 %v0_2c19f, -28
  %v2_2c195 = inttoptr i32 %v1_2c195 to i32*
  %v3_2c195 = load i32, i32* %v2_2c195, align 4
  %v1_2c198 = add i32 %v0_2c19f, -32
  %v2_2c198 = inttoptr i32 %v1_2c198 to i32*
  %v3_2c198 = load i32, i32* %v2_2c198, align 4
  store i32 %v3_2c198, i32* %eax.global-to-local, align 8
  %v2_2c19b = inttoptr i32 %v3_2c198 to i32*
  store i32 %v3_2c195, i32* %v2_2c19b, align 4
  %v3_2c19d = call i32 @function_2c1c1(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_2c19d, i32* %eax.global-to-local, align 8
  ret i32 %v3_2c19d

dec_label_pc_2c19f:                               ; preds = %dec_label_pc_2c18b
  %v1_2c19f = add i32 %v0_2c19f, -32
  %v2_2c19f = inttoptr i32 %v1_2c19f to i32*
  %v3_2c19f = load i32, i32* %v2_2c19f, align 4
  store i32 %v3_2c19f, i32* %eax.global-to-local, align 8
  %v1_2c1a2 = inttoptr i32 %v3_2c19f to i32*
  store i32 0, i32* %v1_2c1a2, align 4
  %v3_2c1a8 = call i32 @function_2c1c1(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_2c1a8, i32* %eax.global-to-local, align 8
  ret i32 %v3_2c1a8

; uselistorder directives
  uselistorder i32 %v0_2c19f, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_2c1c1, { 4, 3, 2, 1, 0 }
}

define i32 @function_2c1aa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c1aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c1aa = load i32, i32* @ebp, align 4
  %v1_2c1aa = add i32 %v0_2c1aa, -32
  %v2_2c1aa = inttoptr i32 %v1_2c1aa to i32*
  %v3_2c1aa = load i32, i32* %v2_2c1aa, align 4
  store i32 %v3_2c1aa, i32* %eax.global-to-local, align 8
  %v1_2c1ad = inttoptr i32 %v3_2c1aa to i32*
  store i32 ptrtoint (i32* @global_var_34294.2033 to i32), i32* %v1_2c1ad, align 4
  %v0_2c1b3 = load i32, i32* @ebp, align 4
  %v1_2c1b3 = add i32 %v0_2c1b3, -32
  %v2_2c1b3 = inttoptr i32 %v1_2c1b3 to i32*
  %v3_2c1b3 = load i32, i32* %v2_2c1b3, align 4
  store i32 %v3_2c1b3, i32* %eax.global-to-local, align 8
  %v1_2c1b6 = add i32 %v3_2c1b3, 4
  %v2_2c1b6 = inttoptr i32 %v1_2c1b6 to i8*
  store i8 0, i8* %v2_2c1b6, align 1
  %v0_2c1ba = load i32, i32* @ebp, align 4
  %v1_2c1ba = add i32 %v0_2c1ba, -32
  %v2_2c1ba = inttoptr i32 %v1_2c1ba to i32*
  %v3_2c1ba = load i32, i32* %v2_2c1ba, align 4
  store i32 %v3_2c1ba, i32* %eax.global-to-local, align 8
  %v1_2c1bd = add i32 %v3_2c1ba, 5
  %v2_2c1bd = inttoptr i32 %v1_2c1bd to i8*
  store i8 0, i8* %v2_2c1bd, align 1
  %v3_2c1bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2c1bd

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_34294.2033 to i32), { 1, 0, 2 }
}

define i32 @function_2c1c1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c1c1:
  %v0_2c1c1 = load i32, i32* @ebp, align 4
  %v1_2c1c1 = add i32 %v0_2c1c1, -12
  %v2_2c1c1 = inttoptr i32 %v1_2c1c1 to i32*
  %v3_2c1c1 = load i32, i32* %v2_2c1c1, align 4
  %v3_2c1c4 = xor i32 %v3_2c1c1, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c1c4 = icmp eq i32 %v3_2c1c4, 0
  store i32 %v3_2c1c4, i32* @eax, align 8
  br i1 %v4_2c1c4, label %bb, label %dec_label_pc_2c1cd

bb:                                               ; preds = %dec_label_pc_2c1c1
  %v1_2c1cb = call i32 @function_2c1d2()
  br label %dec_label_pc_2c1cd

dec_label_pc_2c1cd:                               ; preds = %bb, %dec_label_pc_2c1c1
  %v2_2c1cb = phi i32 [ %v1_2c1cb, %bb ], [ %v3_2c1c4, %dec_label_pc_2c1c1 ]
  ret i32 %v2_2c1cb
}

define i32 @function_2c1d2() local_unnamed_addr {
dec_label_pc_2c1d2:
  %v0_2c1d7 = load i32, i32* @eax, align 8
  ret i32 %v0_2c1d7
}

define i32 @_ZN5boost6detail13addr_impl_refIFbRKSsS3_jEEC1ERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c1d8:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c209

bb:                                               ; preds = %dec_label_pc_2c1d8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2c207 = call i32 @function_2c20e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2c209

dec_label_pc_2c209:                               ; preds = %bb, %dec_label_pc_2c1d8
  %v4_2c207 = phi i32 [ %v3_2c207, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c1d8 ]
  ret i32 %v4_2c207

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2c20e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c20e:
  %v0_2c20f = load i32, i32* @eax, align 8
  ret i32 %v0_2c20f
}

define i32 @_ZNK5boost6detail13addr_impl_refIFbRKSsS3_jEEcvRS4_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2c210:
  %v2_2c22a = load i32, i32* %arg1, align 4
  store i32 %v2_2c22a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c238

bb:                                               ; preds = %dec_label_pc_2c210
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2c236 = call i32 @function_2c23d(i32 %tmp100)
  br label %dec_label_pc_2c238

dec_label_pc_2c238:                               ; preds = %bb, %dec_label_pc_2c210
  %v3_2c236 = phi i32 [ %v2_2c236, %bb ], [ %v2_2c22a, %dec_label_pc_2c210 ]
  ret i32 %v3_2c236

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2c23d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c23d:
  %v0_2c23e = load i32, i32* @eax, align 8
  ret i32 %v0_2c23e
}

define i32 @_ZN5boost6detail14addressof_implIFbRKSsS3_jEE1fEPS4_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c23f:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c26b

bb:                                               ; preds = %dec_label_pc_2c23f
  %v3_2c269 = call i32 @function_2c270(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c26b

dec_label_pc_2c26b:                               ; preds = %bb, %dec_label_pc_2c23f
  %v4_2c269 = phi i32 [ %v3_2c269, %bb ], [ %arg1, %dec_label_pc_2c23f ]
  ret i32 %v4_2c269
}

define i32 @function_2c270(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c270:
  %v0_2c271 = load i32, i32* @eax, align 8
  ret i32 %v0_2c271
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor28m_visit_not_function_pointerIPFbRKSsS5_jEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c272:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c2a1

bb:                                               ; preds = %dec_label_pc_2c272
  %v4_2c29f = call i32 @function_2c2a6(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2c2a1

dec_label_pc_2c2a1:                               ; preds = %bb, %dec_label_pc_2c272
  %v5_2c29f = phi i32 [ %v4_2c29f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c272 ]
  ret i32 %v5_2c29f
}

define i32 @function_2c2a6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c2a6:
  %v0_2c2a7 = load i32, i32* @eax, align 8
  ret i32 %v0_2c2a7
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c2a8:
  ret i32 %arg1
}

define i32 @function_2c2c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c2c4:
  %v0_2c2c5 = load i32, i32* @edx, align 8
  %v4_2c2c5 = icmp eq i32 %v0_2c2c5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2c2c5, label %bb, label %dec_label_pc_2c2c4.dec_label_pc_2c2ce_crit_edge

dec_label_pc_2c2c4.dec_label_pc_2c2ce_crit_edge:  ; preds = %dec_label_pc_2c2c4
  %v2_2c2cc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2c2ce

bb:                                               ; preds = %dec_label_pc_2c2c4
  %v1_2c2cc = call i32 @function_2c2d3()
  br label %dec_label_pc_2c2ce

dec_label_pc_2c2ce:                               ; preds = %dec_label_pc_2c2c4.dec_label_pc_2c2ce_crit_edge, %bb
  %v2_2c2cc = phi i32 [ %v2_2c2cc.pre, %dec_label_pc_2c2c4.dec_label_pc_2c2ce_crit_edge ], [ %v1_2c2cc, %bb ]
  ret i32 %v2_2c2cc

; uselistorder directives
  uselistorder label %dec_label_pc_2c2ce, { 1, 0 }
}

define i32 @function_2c2d3() local_unnamed_addr {
dec_label_pc_2c2d3:
  %v0_2c2d4 = load i32, i32* @eax, align 8
  ret i32 %v0_2c2d4
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c2d6:
  %v1_2c2f9 = call i32 @unknown_5b5ce(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c30a

bb:                                               ; preds = %dec_label_pc_2c2d6
  %v1_2c308 = call i32 @function_2c30f()
  br label %dec_label_pc_2c30a

dec_label_pc_2c30a:                               ; preds = %bb, %dec_label_pc_2c2d6
  %v2_2c308 = phi i32 [ %v1_2c308, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c2d6 ]
  ret i32 %v2_2c308
}

define i32 @function_2c30f() local_unnamed_addr {
dec_label_pc_2c30f:
  %v0_2c310 = load i32, i32* @eax, align 8
  ret i32 %v0_2c310
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c312:
  %stack_var_-17 = alloca i32, align 4
  %v2_2c336 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2c33c = call i32 @unknown_5b634(i32 %v2_2c336, i32 %arg2)
  ret i32 %arg1
}

define i32 @function_2c34a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c34a:
  %v0_2c34e = call i32 @unknown_5b670()
  %v0_2c353 = load i32, i32* @ebp, align 4
  %v1_2c353 = add i32 %v0_2c353, -13
  %v1_2c359 = call i32 @unknown_5879a(i32 %v1_2c353)
  %v0_2c35e = load i32, i32* @ebp, align 4
  %v1_2c35e = add i32 %v0_2c35e, -28
  %v2_2c35e = inttoptr i32 %v1_2c35e to i32*
  %v3_2c35e = load i32, i32* %v2_2c35e, align 4
  %v1_2c364 = call i32 @unknown_5b6c6(i32 %v3_2c35e)
  %v0_2c369 = load i32, i32* @ebp, align 4
  %v1_2c369 = add i32 %v0_2c369, -12
  %v2_2c369 = inttoptr i32 %v1_2c369 to i32*
  %v3_2c369 = load i32, i32* %v2_2c369, align 4
  %v3_2c36c = xor i32 %v3_2c369, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c36c = icmp eq i32 %v3_2c36c, 0
  store i32 %v3_2c36c, i32* @eax, align 8
  br i1 %v4_2c36c, label %bb, label %dec_label_pc_2c375

bb:                                               ; preds = %dec_label_pc_2c34a
  %v1_2c373 = call i32 @function_2c37a()
  br label %dec_label_pc_2c375

dec_label_pc_2c375:                               ; preds = %bb, %dec_label_pc_2c34a
  %v2_2c373 = phi i32 [ %v1_2c373, %bb ], [ %v3_2c36c, %dec_label_pc_2c34a ]
  ret i32 %v2_2c373
}

define i32 @function_2c37a() local_unnamed_addr {
dec_label_pc_2c37a:
  %v0_2c37b = load i32, i32* @eax, align 8
  ret i32 %v0_2c37b
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2c37c:
  %v2_2c39c = load i32, i32* %arg2, align 4
  %v2_2c3a8 = call i32 @unknown_5b76c(i32 %arg1, i32 %v2_2c39c)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c3bc

bb:                                               ; preds = %dec_label_pc_2c37c
  %v1_2c3ba = call i32 @function_2c3c1()
  br label %dec_label_pc_2c3bc

dec_label_pc_2c3bc:                               ; preds = %bb, %dec_label_pc_2c37c
  %v2_2c3ba = phi i32 [ %v1_2c3ba, %bb ], [ %arg1, %dec_label_pc_2c37c ]
  ret i32 %v2_2c3ba

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c3c1() local_unnamed_addr {
dec_label_pc_2c3c1:
  %v0_2c3c2 = load i32, i32* @eax, align 8
  ret i32 %v0_2c3c2
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c3c6:
  %v2_2c3f0 = call i32 @unknown_5b7b6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c404

bb:                                               ; preds = %dec_label_pc_2c3c6
  %v1_2c402 = call i32 @function_2c409()
  br label %dec_label_pc_2c404

dec_label_pc_2c404:                               ; preds = %bb, %dec_label_pc_2c3c6
  %v2_2c402 = phi i32 [ %v1_2c402, %bb ], [ %arg1, %dec_label_pc_2c3c6 ]
  ret i32 %v2_2c402

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c409() local_unnamed_addr {
dec_label_pc_2c409:
  %v0_2c40a = load i32, i32* @eax, align 8
  ret i32 %v0_2c40a
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE22_M_initialize_dispatchISt20_List_const_iteratorISJ_EEEvT_SP_St12__false_type(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c40e:
  ret i32 %arg2
}

define i32 @function_2c422(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c422:
  %cf.global-to-local = alloca i1, align 1
  %v0_2c422 = load i32, i32* @ecx, align 4
  %v1_2c422 = add i32 %v0_2c422, -1240474555
  %v2_2c422 = inttoptr i32 %v1_2c422 to i8*
  %v3_2c422 = load i8, i8* %v2_2c422, align 1
  %v5_2c422 = trunc i32 %v0_2c422 to i8
  %v6_2c422 = load i1, i1* @cf, align 1
  %v7_2c422 = zext i1 %v6_2c422 to i8
  %v8_2c422 = add i8 %v3_2c422, %v5_2c422
  %v9_2c422 = add i8 %v7_2c422, %v8_2c422
  %v27_2c422 = icmp ule i8 %v9_2c422, %v3_2c422
  %v28_2c422 = icmp ult i8 %v8_2c422, %v3_2c422
  %v29_2c422 = select i1 %v6_2c422, i1 %v27_2c422, i1 %v28_2c422
  store i1 %v29_2c422, i1* %cf.global-to-local, align 1
  store i8 %v9_2c422, i8* %v2_2c422, align 1
  %v0_2c428 = load i32, i32* @ebp, align 4
  %v0_2c429 = load i32, i32* @eax, align 8
  %v1_2c429 = trunc i32 %v0_2c429 to i8
  %v2_2c429 = load i1, i1* %cf.global-to-local, align 1
  %v3_2c429 = zext i1 %v2_2c429 to i8
  %v4_2c429 = add i8 %v1_2c429, ptrtoint (i8* @global_var_88.2056 to i8)
  %v5_2c429 = add i8 %v4_2c429, %v3_2c429
  %v20_2c429 = add i8 %v1_2c429, -120
  %v21_2c429 = add i8 %v20_2c429, %v3_2c429
  %v22_2c429 = icmp ule i8 %v21_2c429, %v1_2c429
  %v23_2c429 = icmp ugt i8 %v1_2c429, 119
  %v24_2c429 = select i1 %v2_2c429, i1 %v22_2c429, i1 %v23_2c429
  store i1 %v24_2c429, i1* %cf.global-to-local, align 1
  %v25_2c429 = zext i8 %v5_2c429 to i32
  %v27_2c429 = and i32 %v0_2c429, -256
  %v28_2c429 = or i32 %v25_2c429, %v27_2c429
  %v1_2c42b = add i32 %v0_2c428, 2
  store i32 %v1_2c42b, i32* @ebp, align 4
  ret i32 %v28_2c429

; uselistorder directives
  uselistorder i8 %v9_2c422, { 1, 0 }
  uselistorder i8 %v8_2c422, { 1, 0 }
}

define i32 @function_2c42d() local_unnamed_addr {
dec_label_pc_2c42d:
  %v1_2c433 = load i32, i32* @ebp, align 4
  %v2_2c433 = add i32 %v1_2c433, -12
  %v3_2c433 = inttoptr i32 %v2_2c433 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2c433, align 4
  %v0_2c438 = call i32 @function_2c45f()
  ret i32 %v0_2c438
}

define i32 @function_2c43a() local_unnamed_addr {
dec_label_pc_2c43a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2c43a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c43a = add i32 %v0_2c43a, -32
  %v1_2c440 = call i32 @unknown_5b894(i32 %v1_2c43a)
  %v1_2c449 = add i32 %v0_2c43a, -28
  %v2_2c449 = inttoptr i32 %v1_2c449 to i32*
  %v3_2c449 = load i32, i32* %v2_2c449, align 4
  %v2_2c44f = call i32 @unknown_5b836(i32 %v3_2c449, i32 %v1_2c440)
  %v0_2c454 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2c454 = add i32 %v0_2c454, -32
  %v1_2c45a = call i32 @unknown_54380(i32 %v1_2c454)
  ret i32 %v1_2c45a
}

define i32 @function_2c45f() local_unnamed_addr {
dec_label_pc_2c45f:
  %v0_2c45f = load i32, i32* @ebp, align 4
  %v1_2c466 = add i32 %v0_2c45f, -32
  ret i32 %v1_2c466
}

define i32 @function_2c470(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c470:
  %v0_2c470 = load i32, i32* @eax, align 8
  %v2_2c470 = mul i32 %v0_2c470, 8
  %v3_2c470 = add i32 %v0_2c470, 1166787957
  %v4_2c470 = add i32 %v3_2c470, %v2_2c470
  %v5_2c470 = inttoptr i32 %v4_2c470 to i8*
  %v6_2c470 = load i8, i8* %v5_2c470, align 1
  %v8_2c470 = trunc i32 %v0_2c470 to i8
  %v9_2c470 = add i8 %v6_2c470, %v8_2c470
  store i8 %v9_2c470, i8* %v5_2c470, align 1
  %v0_2c478 = load i32, i32* @eax, align 8
  %v3_2c478 = xor i32 %v0_2c478, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c478 = icmp eq i32 %v3_2c478, 0
  store i32 %v3_2c478, i32* @eax, align 8
  br i1 %v4_2c478, label %bb, label %dec_label_pc_2c481

bb:                                               ; preds = %dec_label_pc_2c470
  %v1_2c47f = call i32 @function_2c486()
  br label %dec_label_pc_2c481

dec_label_pc_2c481:                               ; preds = %bb, %dec_label_pc_2c470
  %v2_2c47f = phi i32 [ %v1_2c47f, %bb ], [ %v3_2c478, %dec_label_pc_2c470 ]
  ret i32 %v2_2c47f

; uselistorder directives
  uselistorder i32 %v0_2c470, { 0, 2, 1 }
}

define i32 @function_2c486() local_unnamed_addr {
dec_label_pc_2c486:
  %v0_2c487 = load i32, i32* @eax, align 8
  ret i32 %v0_2c487
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c488:
  %v1_2c4a5 = call i32 @unknown_5b940(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c4b6

bb:                                               ; preds = %dec_label_pc_2c488
  %v1_2c4b4 = call i32 @function_2c4bb()
  br label %dec_label_pc_2c4b6

dec_label_pc_2c4b6:                               ; preds = %bb, %dec_label_pc_2c488
  %v2_2c4b4 = phi i32 [ %v1_2c4b4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c488 ]
  ret i32 %v2_2c4b4
}

define i32 @function_2c4bb() local_unnamed_addr {
dec_label_pc_2c4bb:
  %v0_2c4bc = load i32, i32* @eax, align 8
  ret i32 %v0_2c4bc
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE8_M_clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2c4be:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v16_2c4c2 = ptrtoint i32* %stack_var_-60 to i32
  %v2_2c4d9 = load i32, i32* %arg1, align 4
  %v2_2c4fe = ptrtoint i32* %stack_var_-17 to i32
  %v15_2c542108 = icmp eq i32 %tmp102, %v2_2c4d9
  %v1_2c545109 = icmp eq i1 %v15_2c542108, false
  %v5_2c548112 = icmp eq i1 %v1_2c545109, false
  %v1_2c54a113 = icmp eq i1 %v5_2c548112, false
  br i1 %v1_2c54a113, label %dec_label_pc_2c4e0, label %dec_label_pc_2c54c

dec_label_pc_2c4e0:                               ; preds = %dec_label_pc_2c4be, %dec_label_pc_2c4e0.dec_label_pc_2c4e0_crit_edge
  %v1_2c4f4 = phi i32 [ %v1_2c4f4.pre, %dec_label_pc_2c4e0.dec_label_pc_2c4e0_crit_edge ], [ %v16_2c4c2, %dec_label_pc_2c4be ]
  %stack_var_-28.0114 = phi i32 [ %v2_2c4e9, %dec_label_pc_2c4e0.dec_label_pc_2c4e0_crit_edge ], [ %v2_2c4d9, %dec_label_pc_2c4be ]
  %v1_2c4e9 = inttoptr i32 %stack_var_-28.0114 to i32*
  %v2_2c4e9 = load i32, i32* %v1_2c4e9, align 4
  %v1_2c4f1 = add i32 %stack_var_-28.0114, 8
  %v2_2c4f4 = inttoptr i32 %v1_2c4f4 to i32*
  store i32 %v1_2c4f1, i32* %v2_2c4f4, align 4
  %v2_2c4f7 = call i32 @unknown_54c31(i32 %v2_2c4e9, i32 %stack_var_-28.0114)
  store i32 %v2_2c4f7, i32* %ebx.global-to-local, align 8
  %v1_2c504 = load i32, i32* @esp, align 4
  %v2_2c504 = add i32 %v1_2c504, 4
  %v3_2c504 = inttoptr i32 %v2_2c504 to i32*
  store i32 %tmp102, i32* %v3_2c504, align 4
  %v1_2c508 = load i32, i32* @esp, align 4
  %v2_2c508 = inttoptr i32 %v1_2c508 to i32*
  store i32 %v2_2c4fe, i32* %v2_2c508, align 4
  %v0_2c50b = call i32 @unknown_54bac()
  %v0_2c510 = load i32, i32* @esp, align 4
  %v0_2c513 = load i32, i32* %ebx.global-to-local, align 8
  %v3_2c513 = inttoptr i32 %v0_2c510 to i32*
  store i32 %v0_2c513, i32* %v3_2c513, align 4
  %v1_2c51a = load i32, i32* @esp, align 4
  %v2_2c51a = inttoptr i32 %v1_2c51a to i32*
  store i32 %v2_2c4fe, i32* %v2_2c51a, align 4
  %v0_2c51d = call i32 @unknown_5b9a0()
  %v1_2c525 = load i32, i32* @esp, align 4
  %v2_2c525 = inttoptr i32 %v1_2c525 to i32*
  store i32 %v2_2c4fe, i32* %v2_2c525, align 4
  %v0_2c528 = call i32 @unknown_54bfc()
  %v1_2c530 = load i32, i32* @esp, align 4
  %v2_2c530 = add i32 %v1_2c530, 4
  %v3_2c530 = inttoptr i32 %v2_2c530 to i32*
  store i32 %stack_var_-28.0114, i32* %v3_2c530, align 4
  %v1_2c537 = load i32, i32* @esp, align 4
  %v2_2c537 = inttoptr i32 %v1_2c537 to i32*
  store i32 %tmp102, i32* %v2_2c537, align 4
  %v0_2c53a = call i32 @unknown_54cba()
  %v15_2c542 = icmp eq i32 %tmp102, %v2_2c4e9
  %v1_2c545 = icmp eq i1 %v15_2c542, false
  %v5_2c548 = icmp eq i1 %v1_2c545, false
  %v1_2c54a = icmp eq i1 %v5_2c548, false
  br i1 %v1_2c54a, label %dec_label_pc_2c4e0.dec_label_pc_2c4e0_crit_edge, label %dec_label_pc_2c54c

dec_label_pc_2c4e0.dec_label_pc_2c4e0_crit_edge:  ; preds = %dec_label_pc_2c4e0
  %v1_2c4f4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_2c4e0

dec_label_pc_2c54c:                               ; preds = %dec_label_pc_2c4e0, %dec_label_pc_2c4be
  %v0_2c54c = call i32 @function_2c565()
  ret i32 %v0_2c54c

; uselistorder directives
  uselistorder i32 %v2_2c4e9, { 1, 2, 0 }
  uselistorder i32 %stack_var_-28.0114, { 3, 2, 0, 1 }
  uselistorder i32 %tmp102, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_2c4e0, { 1, 0 }
}

define i32 @function_2c54f() local_unnamed_addr {
dec_label_pc_2c54f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c54f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c54f
}

define i32 @function_2c565() local_unnamed_addr {
dec_label_pc_2c565:
  %v0_2c565 = load i32, i32* @ebp, align 4
  %v1_2c565 = add i32 %v0_2c565, -12
  %v2_2c565 = inttoptr i32 %v1_2c565 to i32*
  %v3_2c565 = load i32, i32* %v2_2c565, align 4
  %v3_2c568 = xor i32 %v3_2c565, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c568 = icmp eq i32 %v3_2c568, 0
  store i32 %v3_2c568, i32* @eax, align 8
  br i1 %v4_2c568, label %bb, label %dec_label_pc_2c571

bb:                                               ; preds = %dec_label_pc_2c565
  %v1_2c56f = call i32 @function_2c576()
  br label %dec_label_pc_2c571

dec_label_pc_2c571:                               ; preds = %bb, %dec_label_pc_2c565
  %v2_2c56f = phi i32 [ %v1_2c56f, %bb ], [ %v3_2c568, %dec_label_pc_2c565 ]
  ret i32 %v2_2c56f
}

define i32 @function_2c576() local_unnamed_addr {
dec_label_pc_2c576:
  %v0_2c57a = load i32, i32* @eax, align 8
  ret i32 %v0_2c57a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EEC1ERKSV_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c57c:
  %v1_2c5a1 = call i32 @unknown_5ba9a(i32 %arg2)
  %v3_2c5b7 = call i32 @unknown_5bac8(i32 %arg1, i32 %arg2, i32 %v1_2c5a1)
  %v1_2c5c2 = call i32 @unknown_5bb4e(i32 %arg2)
  %v1_2c5c7 = icmp eq i32 %v1_2c5c2, 0
  %v1_2c5c9 = icmp eq i1 %v1_2c5c7, false
  %v5_2c5cc = icmp eq i1 %v1_2c5c9, false
  br i1 %v5_2c5cc, label %bb, label %dec_label_pc_2c5d4

bb:                                               ; preds = %dec_label_pc_2c57c
  %v1_2c5ce = call i32 @function_2c67b()
  br label %dec_label_pc_2c5d4

dec_label_pc_2c5d4:                               ; preds = %bb, %dec_label_pc_2c57c
  %v1_2c5da = call i32 @unknown_5bcfe(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_2c5eb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c5eb:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2c5eb = load i32, i32* @ecx, align 4
  %v1_2c5eb = add i32 %v0_2c5eb, -532313146
  %v2_2c5eb = inttoptr i32 %v1_2c5eb to i8*
  %v3_2c5eb = load i8, i8* %v2_2c5eb, align 1
  %v5_2c5eb = trunc i32 %v0_2c5eb to i8
  %v6_2c5eb = add i8 %v3_2c5eb, %v5_2c5eb
  store i8 %v6_2c5eb, i8* %v2_2c5eb, align 1
  %v0_2c5f1 = load i32, i32* @eax, align 8
  %v1_2c5f4 = call i32 @unknown_5bcce(i32 %v0_2c5f1)
  %v0_2c5f9 = load i32, i32* @esi, align 4
  %v0_2c601 = load i32, i32* @ebp, align 4
  %v1_2c601 = add i32 %v0_2c601, -28
  %v2_2c601 = inttoptr i32 %v1_2c601 to i32*
  %v3_2c601 = load i32, i32* %v2_2c601, align 4
  %v3_2c607 = call i32 @unknown_5bb7e(i32 %v3_2c601, i32 %v1_2c5f4, i32 %v0_2c5f9)
  %v1_2c60c = load i32, i32* @ebx, align 8
  %v2_2c60c = inttoptr i32 %v1_2c60c to i32*
  store i32 %v3_2c607, i32* %v2_2c60c, align 4
  %v0_2c60e = load i32, i32* @ebp, align 4
  %v1_2c60e = add i32 %v0_2c60e, -28
  %v2_2c60e = inttoptr i32 %v1_2c60e to i32*
  %v3_2c60e = load i32, i32* %v2_2c60e, align 4
  %v1_2c614 = call i32 @unknown_5bd64(i32 %v3_2c60e)
  store i32 %v1_2c614, i32* %ebx.global-to-local, align 8
  %v0_2c61b = load i32, i32* @ebp, align 4
  %v1_2c61b = add i32 %v0_2c61b, -28
  %v2_2c61b = inttoptr i32 %v1_2c61b to i32*
  %v3_2c61b = load i32, i32* %v2_2c61b, align 4
  %v1_2c621 = call i32 @unknown_5bcfe(i32 %v3_2c61b)
  %v1_2c626 = inttoptr i32 %v1_2c621 to i32*
  %v2_2c626 = load i32, i32* %v1_2c626, align 4
  %v1_2c62b = call i32 @unknown_5bd2e(i32 %v2_2c626)
  %v1_2c630 = load i32, i32* %ebx.global-to-local, align 8
  %v2_2c630 = inttoptr i32 %v1_2c630 to i32*
  store i32 %v1_2c62b, i32* %v2_2c630, align 4
  %v0_2c632 = load i32, i32* @ebp, align 4
  %v1_2c632 = add i32 %v0_2c632, -28
  %v2_2c632 = inttoptr i32 %v1_2c632 to i32*
  %v3_2c632 = load i32, i32* %v2_2c632, align 4
  %v1_2c638 = call i32 @unknown_5bdca(i32 %v3_2c632)
  store i32 %v1_2c638, i32* %ebx.global-to-local, align 8
  %v0_2c63f = load i32, i32* @ebp, align 4
  %v1_2c63f = add i32 %v0_2c63f, -28
  %v2_2c63f = inttoptr i32 %v1_2c63f to i32*
  %v3_2c63f = load i32, i32* %v2_2c63f, align 4
  %v1_2c645 = call i32 @unknown_5bcfe(i32 %v3_2c63f)
  %v1_2c64a = inttoptr i32 %v1_2c645 to i32*
  %v2_2c64a = load i32, i32* %v1_2c64a, align 4
  %v1_2c64f = call i32 @unknown_5bd94(i32 %v2_2c64a)
  %v1_2c654 = load i32, i32* %ebx.global-to-local, align 8
  %v2_2c654 = inttoptr i32 %v1_2c654 to i32*
  store i32 %v1_2c64f, i32* %v2_2c654, align 4
  %v0_2c656 = load i32, i32* @ebp, align 4
  %v1_2c656 = add i32 %v0_2c656, -32
  %v2_2c656 = inttoptr i32 %v1_2c656 to i32*
  %v3_2c656 = load i32, i32* %v2_2c656, align 4
  %v1_2c659 = add i32 %v3_2c656, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_2c659 = inttoptr i32 %v1_2c659 to i32*
  %v3_2c659 = load i32, i32* %v2_2c659, align 4
  %v1_2c65c = add i32 %v0_2c656, -28
  %v2_2c65c = inttoptr i32 %v1_2c65c to i32*
  %v3_2c65c = load i32, i32* %v2_2c65c, align 4
  %v2_2c65f = add i32 %v3_2c65c, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_2c65f = inttoptr i32 %v2_2c65f to i32*
  store i32 %v3_2c659, i32* %v3_2c65f, align 4
  %v0_2c662 = call i32 @function_2c67b()
  ret i32 %v0_2c662

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5bcfe, { 1, 0, 2 }
}

define i32 @function_2c665() local_unnamed_addr {
dec_label_pc_2c665:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c665 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c665
}

define i32 @function_2c67b() local_unnamed_addr {
dec_label_pc_2c67b:
  %v0_2c67b = load i32, i32* @ebp, align 4
  %v1_2c67b = add i32 %v0_2c67b, -12
  %v2_2c67b = inttoptr i32 %v1_2c67b to i32*
  %v3_2c67b = load i32, i32* %v2_2c67b, align 4
  %v3_2c67e = xor i32 %v3_2c67b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c67e = icmp eq i32 %v3_2c67e, 0
  store i32 %v3_2c67e, i32* @eax, align 8
  br i1 %v4_2c67e, label %bb, label %dec_label_pc_2c687

bb:                                               ; preds = %dec_label_pc_2c67b
  %v1_2c685 = call i32 @function_2c68c()
  br label %dec_label_pc_2c687

dec_label_pc_2c687:                               ; preds = %bb, %dec_label_pc_2c67b
  %v2_2c685 = phi i32 [ %v1_2c685, %bb ], [ %v3_2c67e, %dec_label_pc_2c67b ]
  ret i32 %v2_2c685
}

define i32 @function_2c68c() local_unnamed_addr {
dec_label_pc_2c68c:
  %v0_2c692 = load i32, i32* @eax, align 8
  ret i32 %v0_2c692
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c694:
  %v1_2c6b1 = call i32 @unknown_5bf12(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c6c2

bb:                                               ; preds = %dec_label_pc_2c694
  %v1_2c6c0 = call i32 @function_2c6c7()
  br label %dec_label_pc_2c6c2

dec_label_pc_2c6c2:                               ; preds = %bb, %dec_label_pc_2c694
  %v2_2c6c0 = phi i32 [ %v1_2c6c0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c694 ]
  ret i32 %v2_2c6c0
}

define i32 @function_2c6c7() local_unnamed_addr {
dec_label_pc_2c6c7:
  %v0_2c6c8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c6c8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c6ca:
  ret i32 %arg2
}

define i32 @function_2c6dd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c6dd:
  %eax.global-to-local = alloca i32, align 4
  %v1_2c6e2 = load i32, i32* @ebp, align 4
  %v2_2c6e2 = add i32 %v1_2c6e2, -12
  %v3_2c6e2 = inttoptr i32 %v2_2c6e2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2c6e2, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2c7294 = load i32, i32* @ebp, align 4
  %v1_2c7295 = add i32 %v0_2c7294, -32
  %v2_2c7296 = inttoptr i32 %v1_2c7295 to i32*
  %v3_2c7297 = load i32, i32* %v2_2c7296, align 4
  %v10_2c7298 = icmp eq i32 %v3_2c7297, 0
  %v1_2c72d9 = icmp eq i1 %v10_2c7298, false
  %v2_2c72d10 = zext i1 %v1_2c72d9 to i32
  store i32 %v2_2c72d10, i32* %eax.global-to-local, align 8
  %v5_2c73011 = icmp eq i1 %v1_2c72d9, false
  %v1_2c73212 = icmp eq i1 %v5_2c73011, false
  br i1 %v1_2c73212, label %dec_label_pc_2c6e9, label %dec_label_pc_2c734

dec_label_pc_2c6e9:                               ; preds = %dec_label_pc_2c6dd, %dec_label_pc_2c6e9
  %v2_2c72913 = phi i32* [ %v2_2c729, %dec_label_pc_2c6e9 ], [ %v2_2c7296, %dec_label_pc_2c6dd ]
  %v3_2c6e9 = load i32, i32* %v2_2c72913, align 4
  store i32 %v3_2c6e9, i32* %eax.global-to-local, align 8
  %v1_2c6ef = call i32 @unknown_54d15(i32 %v3_2c6e9)
  store i32 %v1_2c6ef, i32* %eax.global-to-local, align 8
  %v0_2c6f8 = load i32, i32* @ebp, align 4
  %v1_2c6f8 = add i32 %v0_2c6f8, -28
  %v2_2c6f8 = inttoptr i32 %v1_2c6f8 to i32*
  %v3_2c6f8 = load i32, i32* %v2_2c6f8, align 4
  store i32 %v3_2c6f8, i32* %eax.global-to-local, align 8
  %v2_2c6fe = call i32 @unknown_58d94(i32 %v3_2c6f8, i32 %v1_2c6ef)
  store i32 %v2_2c6fe, i32* %eax.global-to-local, align 8
  %v0_2c703 = load i32, i32* @ebp, align 4
  %v1_2c703 = add i32 %v0_2c703, -32
  %v2_2c703 = inttoptr i32 %v1_2c703 to i32*
  %v3_2c703 = load i32, i32* %v2_2c703, align 4
  store i32 %v3_2c703, i32* %eax.global-to-local, align 8
  %v1_2c709 = call i32 @unknown_54ce5(i32 %v3_2c703)
  store i32 %v1_2c709, i32* %eax.global-to-local, align 8
  %v1_2c70e = load i32, i32* @ebp, align 4
  %v2_2c70e = add i32 %v1_2c70e, -16
  %v3_2c70e = inttoptr i32 %v2_2c70e to i32*
  store i32 %v1_2c709, i32* %v3_2c70e, align 4
  %v0_2c711 = load i32, i32* @ebp, align 4
  %v1_2c711 = add i32 %v0_2c711, -32
  %v2_2c711 = inttoptr i32 %v1_2c711 to i32*
  %v3_2c711 = load i32, i32* %v2_2c711, align 4
  store i32 %v3_2c711, i32* %eax.global-to-local, align 8
  %v1_2c718 = add i32 %v0_2c711, -28
  %v2_2c718 = inttoptr i32 %v1_2c718 to i32*
  %v3_2c718 = load i32, i32* %v2_2c718, align 4
  store i32 %v3_2c718, i32* %eax.global-to-local, align 8
  %v2_2c71e = call i32 @unknown_59518(i32 %v3_2c718, i32 %v3_2c711)
  store i32 %v2_2c71e, i32* %eax.global-to-local, align 8
  %v0_2c723 = load i32, i32* @ebp, align 4
  %v1_2c723 = add i32 %v0_2c723, -16
  %v2_2c723 = inttoptr i32 %v1_2c723 to i32*
  %v3_2c723 = load i32, i32* %v2_2c723, align 4
  store i32 %v3_2c723, i32* %eax.global-to-local, align 8
  %v2_2c726 = add i32 %v0_2c723, -32
  %v3_2c726 = inttoptr i32 %v2_2c726 to i32*
  store i32 %v3_2c723, i32* %v3_2c726, align 4
  %v3_2c72d.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_2c729 = load i32, i32* @ebp, align 4
  %v1_2c729 = add i32 %v0_2c729, -32
  %v2_2c729 = inttoptr i32 %v1_2c729 to i32*
  %v3_2c729 = load i32, i32* %v2_2c729, align 4
  %v10_2c729 = icmp eq i32 %v3_2c729, 0
  %v1_2c72d = icmp eq i1 %v10_2c729, false
  %v2_2c72d = zext i1 %v1_2c72d to i32
  %v4_2c72d = and i32 %v3_2c72d.pre, -256
  %v5_2c72d = or i32 %v2_2c72d, %v4_2c72d
  store i32 %v5_2c72d, i32* %eax.global-to-local, align 8
  %v5_2c730 = icmp eq i1 %v1_2c72d, false
  %v1_2c732 = icmp eq i1 %v5_2c730, false
  br i1 %v1_2c732, label %dec_label_pc_2c6e9, label %dec_label_pc_2c734

dec_label_pc_2c734:                               ; preds = %dec_label_pc_2c6e9, %dec_label_pc_2c6dd
  %v0_2c729.lcssa = phi i32 [ %v0_2c7294, %dec_label_pc_2c6dd ], [ %v0_2c729, %dec_label_pc_2c6e9 ]
  %v1_2c734 = add i32 %v0_2c729.lcssa, -12
  %v2_2c734 = inttoptr i32 %v1_2c734 to i32*
  %v3_2c734 = load i32, i32* %v2_2c734, align 4
  %v3_2c737 = xor i32 %v3_2c734, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c737 = icmp eq i32 %v3_2c737, 0
  store i32 %v3_2c737, i32* @eax, align 8
  br i1 %v4_2c737, label %bb, label %dec_label_pc_2c740

bb:                                               ; preds = %dec_label_pc_2c734
  %v1_2c73e = call i32 @function_2c745()
  store i32 %v1_2c73e, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2c740

dec_label_pc_2c740:                               ; preds = %bb, %dec_label_pc_2c734
  %v2_2c73e = phi i32 [ %v1_2c73e, %bb ], [ %v3_2c737, %dec_label_pc_2c734 ]
  ret i32 %v2_2c73e

; uselistorder directives
  uselistorder i32* %v2_2c729, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 14 }
  uselistorder label %dec_label_pc_2c6e9, { 1, 0 }
}

define i32 @function_2c745() local_unnamed_addr {
dec_label_pc_2c745:
  %v0_2c746 = load i32, i32* @eax, align 8
  ret i32 %v0_2c746
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c748:
  %v1_2c768 = add i32 %arg2, 12
  %v2_2c768 = inttoptr i32 %v1_2c768 to i32*
  %v3_2c768 = load i32, i32* %v2_2c768, align 4
  %v2_2c775 = call i32 @unknown_5bff0(i32 %arg1, i32 %v3_2c768)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c789

bb:                                               ; preds = %dec_label_pc_2c748
  %v1_2c787 = call i32 @function_2c78e()
  br label %dec_label_pc_2c789

dec_label_pc_2c789:                               ; preds = %bb, %dec_label_pc_2c748
  %v2_2c787 = phi i32 [ %v1_2c787, %bb ], [ %arg1, %dec_label_pc_2c748 ]
  ret i32 %v2_2c787

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2c78e() local_unnamed_addr {
dec_label_pc_2c78e:
  %v0_2c78f = load i32, i32* @eax, align 8
  ret i32 %v0_2c78f
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c792:
  %v1_2c7b2 = add i32 %arg2, 4
  %v2_2c7bf = call i32 @unknown_5c03a(i32 %arg1, i32 %v1_2c7b2)
  ret i32 %arg1
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2c7dc:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c808

bb:                                               ; preds = %dec_label_pc_2c7dc
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2c806 = call i32 @function_2c80d(i32 %tmp102)
  br label %dec_label_pc_2c808

dec_label_pc_2c808:                               ; preds = %bb, %dec_label_pc_2c7dc
  %v3_2c806 = phi i32 [ %v2_2c806, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c7dc ]
  ret i32 %v3_2c806

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2c80d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c80d:
  %v0_2c80e = load i32, i32* @eax, align 8
  ret i32 %v0_2c80e
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISJ_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c810:
  ret i32 %arg1
}

define i32 @function_2c819(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c819:
  %v0_2c819 = load i32, i32* @eax, align 8
  %v1_2c819 = load i32, i32* @ebp, align 4
  %v2_2c819 = add i32 %v1_2c819, -28
  %v3_2c819 = inttoptr i32 %v2_2c819 to i32*
  store i32 %v0_2c819, i32* %v3_2c819, align 4
  %v0_2c81c = load i32, i32* @ebp, align 4
  %v1_2c81c = add i32 %v0_2c81c, 12
  %v2_2c81c = inttoptr i32 %v1_2c81c to i32*
  %v3_2c81c = load i32, i32* %v2_2c81c, align 4
  %v2_2c81f = add i32 %v0_2c81c, -32
  %v3_2c81f = inttoptr i32 %v2_2c81f to i32*
  store i32 %v3_2c81c, i32* %v3_2c81f, align 4
  %v1_2c828 = load i32, i32* @ebp, align 4
  %v2_2c828 = add i32 %v1_2c828, -12
  %v3_2c828 = inttoptr i32 %v2_2c828 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2c828, align 4
  %v0_2c82d = load i32, i32* @ebp, align 4
  %v1_2c82d = add i32 %v0_2c82d, -32
  %v2_2c82d = inttoptr i32 %v1_2c82d to i32*
  %v3_2c82d = load i32, i32* %v2_2c82d, align 4
  %v1_2c830 = inttoptr i32 %v3_2c82d to i32*
  %v2_2c830 = load i32, i32* %v1_2c830, align 4
  %v1_2c832 = add i32 %v0_2c82d, -28
  %v2_2c832 = inttoptr i32 %v1_2c832 to i32*
  %v3_2c832 = load i32, i32* %v2_2c832, align 4
  %v2_2c835 = inttoptr i32 %v3_2c832 to i32*
  store i32 %v2_2c830, i32* %v2_2c835, align 4
  %v0_2c837 = load i32, i32* @ebp, align 4
  %v1_2c837 = add i32 %v0_2c837, -12
  %v2_2c837 = inttoptr i32 %v1_2c837 to i32*
  %v3_2c837 = load i32, i32* %v2_2c837, align 4
  %v3_2c83a = xor i32 %v3_2c837, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c83a = icmp eq i32 %v3_2c83a, 0
  store i32 %v3_2c83a, i32* @eax, align 8
  br i1 %v4_2c83a, label %bb, label %dec_label_pc_2c843

bb:                                               ; preds = %dec_label_pc_2c819
  %v1_2c841 = call i32 @function_2c848()
  br label %dec_label_pc_2c843

dec_label_pc_2c843:                               ; preds = %bb, %dec_label_pc_2c819
  %v2_2c841 = phi i32 [ %v1_2c841, %bb ], [ %v3_2c83a, %dec_label_pc_2c819 ]
  ret i32 %v2_2c841
}

define i32 @function_2c848() local_unnamed_addr {
dec_label_pc_2c848:
  %v0_2c849 = load i32, i32* @eax, align 8
  ret i32 %v0_2c849
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEEC1EPSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c84a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 %tmp102, i32* @eax, align 8
  store i32 %tmp102, i32* %stack_var_-60, align 4
  %v1_2c86d = call i32 @function_2e73e(i32 %tmp102)
  store i32 ptrtoint (%vtable_3356c_type* @global_var_3356c.2061 to i32), i32* %arg1, align 4
  %v2_2c881 = add i32 %tmp102, 12
  %v3_2c881 = inttoptr i32 %v2_2c881 to i32*
  store i32 %arg2, i32* %v3_2c881, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2c890

bb:                                               ; preds = %dec_label_pc_2c84a
  %v1_2c88e = load i32, i32* %stack_var_-60, align 4
  %v2_2c88e = call i32 @function_2c895(i32 %v1_2c88e)
  br label %dec_label_pc_2c890

dec_label_pc_2c890:                               ; preds = %bb, %dec_label_pc_2c84a
  %v3_2c88e = phi i32 [ %v2_2c88e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2c84a ]
  ret i32 %v3_2c88e

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_2c895, { 1, 0 }
}

define i32 @function_2c895(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c895:
  %v0_2c896 = load i32, i32* @eax, align 8
  ret i32 %v0_2c896
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c898:
  %v1_2c8b3 = add i32 %arg1, 8
  %v1_2c8b9 = call i32 @unknown_4f038(i32 %v1_2c8b3)
  ret i32 %v1_2c8b9
}

define i32 @function_2c8c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2c8c0:
  %v0_2c8c4 = call i32 @unknown_4f002()
  %v0_2c8c9 = load i32, i32* @ebp, align 4
  %v1_2c8c9 = add i32 %v0_2c8c9, -12
  %v2_2c8c9 = inttoptr i32 %v1_2c8c9 to i32*
  %v3_2c8c9 = load i32, i32* %v2_2c8c9, align 4
  %v3_2c8cc = xor i32 %v3_2c8c9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c8cc = icmp eq i32 %v3_2c8cc, 0
  store i32 %v3_2c8cc, i32* @eax, align 8
  br i1 %v4_2c8cc, label %bb, label %dec_label_pc_2c8d5

bb:                                               ; preds = %dec_label_pc_2c8c0
  %v1_2c8d3 = call i32 @function_2c8f3()
  store i32 %v1_2c8d3, i32* @eax, align 8
  br label %dec_label_pc_2c8d5

dec_label_pc_2c8d5:                               ; preds = %bb, %dec_label_pc_2c8c0
  %v0_2c8d5 = call i32 @function_2c8ee()
  ret i32 %v0_2c8d5
}

define i32 @function_2c8d8() local_unnamed_addr {
dec_label_pc_2c8d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c8d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c8d8
}

define i32 @function_2c8ee() local_unnamed_addr {
dec_label_pc_2c8ee:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2c8f3() local_unnamed_addr {
dec_label_pc_2c8f3:
  %v0_2c8f8 = load i32, i32* @eax, align 8
  ret i32 %v0_2c8f8
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSF_jNS_8functionIFbSF_SF_jEEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c8f9:
  %v1_2c914 = icmp eq i32 %arg1, 0
  br i1 %v1_2c914, label %bb, label %dec_label_pc_2c918

bb:                                               ; preds = %dec_label_pc_2c8f9
  %v2_2c916 = call i32 @function_2c928(i32 0)
  br label %dec_label_pc_2c918

dec_label_pc_2c918:                               ; preds = %bb, %dec_label_pc_2c8f9
  %v1_2c91b = call i32 @unknown_59191(i32 %arg1)
  ret i32 %v1_2c91b
}

define i32 @function_2c928(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c928:
  %v0_2c928 = load i32, i32* @ebp, align 4
  %v1_2c928 = add i32 %v0_2c928, -12
  %v2_2c928 = inttoptr i32 %v1_2c928 to i32*
  %v3_2c928 = load i32, i32* %v2_2c928, align 4
  %v3_2c92b = xor i32 %v3_2c928, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c92b = icmp eq i32 %v3_2c92b, 0
  store i32 %v3_2c92b, i32* @eax, align 8
  br i1 %v4_2c92b, label %bb, label %dec_label_pc_2c934

bb:                                               ; preds = %dec_label_pc_2c928
  %v1_2c932 = call i32 @function_2c939()
  br label %dec_label_pc_2c934

dec_label_pc_2c934:                               ; preds = %bb, %dec_label_pc_2c928
  %v2_2c932 = phi i32 [ %v1_2c932, %bb ], [ %v3_2c92b, %dec_label_pc_2c928 ]
  ret i32 %v2_2c932
}

define i32 @function_2c939() local_unnamed_addr {
dec_label_pc_2c939:
  %v0_2c93e = load i32, i32* @eax, align 8
  ret i32 %v0_2c93e
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEEC1EPSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c940:
  ret i32 %arg2
}

define i32 @function_2c950(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c950:
  %v0_2c950 = load i32, i32* @ebp, align 4
  %v1_2c950 = add i32 %v0_2c950, 1
  store i32 %v1_2c950, i32* @ebp, align 4
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2c95a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c95a:
  %v0_2c95d = load i32, i32* @ebp, align 4
  %v1_2c95d = add i32 %v0_2c95d, -28
  %v2_2c95d = inttoptr i32 %v1_2c95d to i32*
  %v3_2c95d = load i32, i32* %v2_2c95d, align 4
  store i32 %v3_2c95d, i32* @eax, align 8
  %v1_2c963 = call i32 @function_2e834(i32 %v3_2c95d)
  %v0_2c968 = load i32, i32* @ebp, align 4
  %v1_2c968 = add i32 %v0_2c968, -28
  %v2_2c968 = inttoptr i32 %v1_2c968 to i32*
  %v3_2c968 = load i32, i32* %v2_2c968, align 4
  %v1_2c96b = inttoptr i32 %v3_2c968 to i32*
  store i32 ptrtoint (%vtable_334b4_type* @global_var_334b4.2062 to i32), i32* %v1_2c96b, align 4
  %v0_2c971 = load i32, i32* @ebp, align 4
  %v1_2c971 = add i32 %v0_2c971, -28
  %v2_2c971 = inttoptr i32 %v1_2c971 to i32*
  %v3_2c971 = load i32, i32* %v2_2c971, align 4
  %v1_2c974 = add i32 %v0_2c971, -32
  %v2_2c974 = inttoptr i32 %v1_2c974 to i32*
  %v3_2c974 = load i32, i32* %v2_2c974, align 4
  %v2_2c977 = add i32 %v3_2c971, 12
  %v3_2c977 = inttoptr i32 %v2_2c977 to i32*
  store i32 %v3_2c974, i32* %v3_2c977, align 4
  %v0_2c97a = load i32, i32* @ebp, align 4
  %v1_2c97a = add i32 %v0_2c97a, -12
  %v2_2c97a = inttoptr i32 %v1_2c97a to i32*
  %v3_2c97a = load i32, i32* %v2_2c97a, align 4
  %v3_2c97d = xor i32 %v3_2c97a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2c97d = icmp eq i32 %v3_2c97d, 0
  store i32 %v3_2c97d, i32* @eax, align 8
  br i1 %v4_2c97d, label %bb, label %dec_label_pc_2c986

bb:                                               ; preds = %dec_label_pc_2c95a
  %v1_2c984 = call i32 @function_2c98b()
  br label %dec_label_pc_2c986

dec_label_pc_2c986:                               ; preds = %bb, %dec_label_pc_2c95a
  %v2_2c984 = phi i32 [ %v1_2c984, %bb ], [ %v3_2c97d, %dec_label_pc_2c95a ]
  ret i32 %v2_2c984
}

define i32 @function_2c98b() local_unnamed_addr {
dec_label_pc_2c98b:
  %v0_2c98c = load i32, i32* @eax, align 8
  ret i32 %v0_2c98c
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c98e:
  %v1_2c9a9 = add i32 %arg1, 8
  %v1_2c9af = call i32 @unknown_4b1ce(i32 %v1_2c9a9)
  ret i32 %arg1
}

define i32 @function_2c9c8(i16 %arg1) local_unnamed_addr {
dec_label_pc_2c9c8:
  %v0_2c9c8 = load i32, i32* @esi, align 4
  %v1_2c9c8 = load i32, i32* @ebx, align 8
  %v3_2c9c8 = add i32 %v0_2c9c8, -21
  %v4_2c9c8 = add i32 %v3_2c9c8, %v1_2c9c8
  %v5_2c9c8 = inttoptr i32 %v4_2c9c8 to i8*
  %v6_2c9c8 = load i8, i8* %v5_2c9c8, align 1
  %v7_2c9c8 = load i32, i32* @edx, align 8
  %v8_2c9c8 = udiv i32 %v7_2c9c8, 256
  %v9_2c9c8 = trunc i32 %v8_2c9c8 to i8
  %v10_2c9c8 = add i8 %v9_2c9c8, %v6_2c9c8
  %v15_2c9c8 = icmp ult i8 %v10_2c9c8, %v6_2c9c8
  store i1 %v15_2c9c8, i1* @cf, align 1
  store i8 %v10_2c9c8, i8* %v5_2c9c8, align 1
  %v0_2c9cd = load i32, i32* @eax, align 8
  store i32 %v0_2c9cd, i32* @ebx, align 8
  %v0_2c9cf = load i32, i32* @ebp, align 4
  %v1_2c9cf = add i32 %v0_2c9cf, -28
  %v2_2c9cf = inttoptr i32 %v1_2c9cf to i32*
  %v3_2c9cf = load i32, i32* %v2_2c9cf, align 4
  %v1_2c9d5 = call i32 @unknown_4b144(i32 %v3_2c9cf)
  %v0_2c9da = load i32, i32* @ebx, align 8
  ret i32 %v0_2c9da

; uselistorder directives
  uselistorder i8 %v6_2c9c8, { 1, 0 }
  uselistorder i32 -21, { 1, 0, 2, 3 }
}

define i32 @function_2c9e8() local_unnamed_addr {
dec_label_pc_2c9e8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2c9e8 = load i32, i32* %ebx.global-to-local, align 8
  %v1_2c9e8 = add i32 %v0_2c9e8, 1566258372
  %v2_2c9e8 = inttoptr i32 %v1_2c9e8 to i32*
  %v3_2c9e8 = load i32, i32* %v2_2c9e8, align 4
  %v4_2c9e8 = add i32 %v3_2c9e8, 1
  store i32 %v4_2c9e8, i32* %v2_2c9e8, align 4
  %v0_2c9ee = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2c9ee
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9ef:
  %v1_2ca0a = icmp eq i32 %arg1, 0
  br i1 %v1_2ca0a, label %bb, label %dec_label_pc_2ca0e

bb:                                               ; preds = %dec_label_pc_2c9ef
  %v2_2ca0c = call i32 @function_2ca1e(i32 0)
  br label %dec_label_pc_2ca0e

dec_label_pc_2ca0e:                               ; preds = %bb, %dec_label_pc_2c9ef
  %v1_2ca11 = call i32 @unknown_5937d(i32 %arg1)
  ret i32 %v1_2ca11
}

define i32 @function_2ca1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca1e:
  %v0_2ca1e = load i32, i32* @ebp, align 4
  %v1_2ca1e = add i32 %v0_2ca1e, -12
  %v2_2ca1e = inttoptr i32 %v1_2ca1e to i32*
  %v3_2ca1e = load i32, i32* %v2_2ca1e, align 4
  ret i32 %v3_2ca1e
}

define i32 @function_2ca24(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca24:
  %zf.global-to-local = alloca i1, align 1
  %v0_2ca24 = load i32, i32* @eax, align 8
  %v1_2ca24 = trunc i32 %v0_2ca24 to i8
  %v2_2ca24 = load i1, i1* @cf, align 1
  %v3_2ca24 = zext i1 %v2_2ca24 to i8
  %v4_2ca24 = add i8 %v3_2ca24, %v1_2ca24
  %v13_2ca24 = icmp eq i8 %v4_2ca24, 0
  store i1 %v13_2ca24, i1* %zf.global-to-local, align 1
  %v22_2ca24 = zext i8 %v4_2ca24 to i32
  %v24_2ca24 = and i32 %v0_2ca24, -256
  %v25_2ca24 = or i32 %v22_2ca24, %v24_2ca24
  store i32 %v25_2ca24, i32* @eax, align 8
  %v1_2ca26 = inttoptr i32 %v25_2ca24 to i8*
  %v2_2ca26 = load i8, i8* %v1_2ca26, align 1
  %v5_2ca26 = add i8 %v2_2ca26, %v4_2ca24
  %v15_2ca26 = icmp eq i8 %v5_2ca26, 0
  store i1 %v15_2ca26, i1* %zf.global-to-local, align 1
  store i8 %v5_2ca26, i8* %v1_2ca26, align 1
  %v0_2ca28 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2ca28, label %bb, label %dec_label_pc_2ca24.dec_label_pc_2ca2a_crit_edge

dec_label_pc_2ca24.dec_label_pc_2ca2a_crit_edge:  ; preds = %dec_label_pc_2ca24
  %v2_2ca28.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2ca2a

bb:                                               ; preds = %dec_label_pc_2ca24
  %v1_2ca28 = call i32 @function_2ca2f()
  br label %dec_label_pc_2ca2a

dec_label_pc_2ca2a:                               ; preds = %dec_label_pc_2ca24.dec_label_pc_2ca2a_crit_edge, %bb
  %v2_2ca28 = phi i32 [ %v2_2ca28.pre, %dec_label_pc_2ca24.dec_label_pc_2ca2a_crit_edge ], [ %v1_2ca28, %bb ]
  ret i32 %v2_2ca28

; uselistorder directives
  uselistorder label %dec_label_pc_2ca2a, { 1, 0 }
}

define i32 @function_2ca2f() local_unnamed_addr {
dec_label_pc_2ca2f:
  %v0_2ca34 = load i32, i32* @eax, align 8
  ret i32 %v0_2ca34
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ca36:
  ret i32 %arg1
}

define i32 @function_2ca5a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ca5a:
  %v0_2ca5b = load i32, i32* @eax, align 8
  %v11_2ca5b = and i32 %v0_2ca5b, -252
  %v1_2ca60 = call i32 @unknown_5c316(i32 %v11_2ca5b)
  %v0_2ca68 = load i32, i32* @ebp, align 4
  %v1_2ca68 = add i32 %v0_2ca68, -28
  %v2_2ca68 = inttoptr i32 %v1_2ca68 to i32*
  %v3_2ca68 = load i32, i32* %v2_2ca68, align 4
  store i32 %v3_2ca68, i32* @eax, align 8
  %v1_2ca6b = add i32 %v0_2ca68, -12
  %v2_2ca6b = inttoptr i32 %v1_2ca6b to i32*
  %v3_2ca6b = load i32, i32* %v2_2ca6b, align 4
  %v4_2ca6e = icmp eq i32 %v3_2ca6b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2ca6e, label %bb, label %dec_label_pc_2ca77

bb:                                               ; preds = %dec_label_pc_2ca5a
  %v1_2ca75 = call i32 @function_2ca7c()
  br label %dec_label_pc_2ca77

dec_label_pc_2ca77:                               ; preds = %bb, %dec_label_pc_2ca5a
  %v2_2ca75 = phi i32 [ %v1_2ca75, %bb ], [ %v3_2ca68, %dec_label_pc_2ca5a ]
  ret i32 %v2_2ca75
}

define i32 @function_2ca7c() local_unnamed_addr {
dec_label_pc_2ca7c:
  %v0_2ca7d = load i32, i32* @eax, align 8
  ret i32 %v0_2ca7d
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ca80:
  %ebp.global-to-local = alloca i32, align 4
  %v0_2ca80 = load i32, i32* %ebp.global-to-local, align 4
  %v2_2ca9a = load i32, i32* %arg1, align 4
  %v1_2ca9c = add i32 %v2_2ca9a, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v0_2ca80, i32* %ebp.global-to-local, align 4
  ret i32 %v1_2ca9c
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2cab2:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_2cade = ptrtoint i32* %stack_var_-40 to i32
  %v2_2cae2 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2cae8 = call i32 @unknown_4bae2(i32 %v2_2cae2, i32 %v4_2cade)
  ret i32 %arg1
}

define i32 @function_2cb0a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cb0a:
  %v0_2cb10 = load i32, i32* @ebp, align 4
  %v1_2cb10 = add i32 %v0_2cb10, -28
  %v2_2cb10 = inttoptr i32 %v1_2cb10 to i32*
  %v3_2cb10 = load i32, i32* %v2_2cb10, align 4
  store i32 %v3_2cb10, i32* @eax, align 8
  %v1_2cb13 = add i32 %v0_2cb10, -12
  %v2_2cb13 = inttoptr i32 %v1_2cb13 to i32*
  %v3_2cb13 = load i32, i32* %v2_2cb13, align 4
  %v4_2cb16 = icmp eq i32 %v3_2cb13, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2cb16, label %bb, label %dec_label_pc_2cb1f

bb:                                               ; preds = %dec_label_pc_2cb0a
  %v1_2cb1d = call i32 @function_2cb24()
  br label %dec_label_pc_2cb1f

dec_label_pc_2cb1f:                               ; preds = %bb, %dec_label_pc_2cb0a
  %v2_2cb1d = phi i32 [ %v1_2cb1d, %bb ], [ %v3_2cb10, %dec_label_pc_2cb0a ]
  ret i32 %v2_2cb1d
}

define i32 @function_2cb24() local_unnamed_addr {
dec_label_pc_2cb24:
  %v0_2cb25 = load i32, i32* @eax, align 8
  ret i32 %v0_2cb25
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE8_M_eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb28:
  ret i32 %arg2
}

define i32 @function_2cb66() local_unnamed_addr {
dec_label_pc_2cb66:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cb66 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cb66
}

define i32 @function_2cb8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2cb8c:
  %v0_2cb8c = load i32, i32* @ebp, align 4
  %v1_2cb8c = add i32 %v0_2cb8c, 1
  store i32 %v1_2cb8c, i32* @ebp, align 4
  %v0_2cb8d = load i32, i32* @eax, align 8
  %v1_2cb91 = call i32 @unknown_55266(i32 %v0_2cb8d)
  %v0_2cb96 = load i32, i32* @ebp, align 4
  %v1_2cb96 = add i32 %v0_2cb96, -28
  %v2_2cb96 = inttoptr i32 %v1_2cb96 to i32*
  %v3_2cb96 = load i32, i32* %v2_2cb96, align 4
  %v1_2cb99 = add i32 %v0_2cb96, -20
  %v2_2cb99 = inttoptr i32 %v1_2cb99 to i32*
  %v3_2cb99 = load i32, i32* %v2_2cb99, align 4
  %v2_2cba3 = call i32 @unknown_55324(i32 %v3_2cb96, i32 %v3_2cb99)
  %v0_2cba8 = load i32, i32* @ebp, align 4
  %v1_2cba8 = add i32 %v0_2cba8, -12
  %v2_2cba8 = inttoptr i32 %v1_2cba8 to i32*
  %v3_2cba8 = load i32, i32* %v2_2cba8, align 4
  %v3_2cbab = xor i32 %v3_2cba8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2cbab = icmp eq i32 %v3_2cbab, 0
  store i32 %v3_2cbab, i32* @eax, align 8
  br i1 %v4_2cbab, label %bb, label %dec_label_pc_2cbb4

bb:                                               ; preds = %dec_label_pc_2cb8c
  %v1_2cbb2 = call i32 @function_2cbd2()
  store i32 %v1_2cbb2, i32* @eax, align 8
  br label %dec_label_pc_2cbb4

dec_label_pc_2cbb4:                               ; preds = %bb, %dec_label_pc_2cb8c
  %v0_2cbb4 = call i32 @function_2cbcd()
  ret i32 %v0_2cbb4
}

define i32 @function_2cbb7() local_unnamed_addr {
dec_label_pc_2cbb7:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cbb7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cbb7
}

define i32 @function_2cbba(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cbba:
  %v0_2cbba = load i32, i32* @eax, align 8
  %v1_2cbbe = call i32 @unknown_55266(i32 %v0_2cbba)
  %v0_2cbc3 = load i32, i32* @ebx, align 8
  ret i32 %v0_2cbc3
}

define i32 @function_2cbcd() local_unnamed_addr {
dec_label_pc_2cbcd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cbd2() local_unnamed_addr {
dec_label_pc_2cbd2:
  %v0_2cbd6 = load i32, i32* @eax, align 8
  ret i32 %v0_2cbd6
}

define i32 @_ZNSaIN5boost7variantINS_8weak_ptrIvEENS_8signals26detail21foreign_void_weak_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEC1ERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cbd8:
  ret i32 %arg2
}

define i32 @function_2cbf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cbf8:
  %v0_2cbf8 = load i32, i32* @eax, align 8
  %v0_2cbfc = load i32, i32* @ebp, align 4
  %v1_2cbfc = add i32 %v0_2cbfc, -28
  %v2_2cbfc = inttoptr i32 %v1_2cbfc to i32*
  %v3_2cbfc = load i32, i32* %v2_2cbfc, align 4
  %v2_2cc02 = call i32 @unknown_5c90a(i32 %v3_2cbfc, i32 %v0_2cbf8)
  %v0_2cc07 = load i32, i32* @ebp, align 4
  %v1_2cc07 = add i32 %v0_2cc07, -12
  %v2_2cc07 = inttoptr i32 %v1_2cc07 to i32*
  %v3_2cc07 = load i32, i32* %v2_2cc07, align 4
  %v3_2cc0a = xor i32 %v3_2cc07, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2cc0a = icmp eq i32 %v3_2cc0a, 0
  store i32 %v3_2cc0a, i32* @eax, align 8
  br i1 %v4_2cc0a, label %bb, label %dec_label_pc_2cc13

bb:                                               ; preds = %dec_label_pc_2cbf8
  %v1_2cc11 = call i32 @function_2cc18()
  br label %dec_label_pc_2cc13

dec_label_pc_2cc13:                               ; preds = %bb, %dec_label_pc_2cbf8
  %v2_2cc11 = phi i32 [ %v1_2cc11, %bb ], [ %v3_2cc0a, %dec_label_pc_2cbf8 ]
  ret i32 %v2_2cc11
}

define i32 @function_2cc18() local_unnamed_addr {
dec_label_pc_2cc18:
  %v0_2cc19 = load i32, i32* @eax, align 8
  ret i32 %v0_2cc19
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5boost7variantINS4_8weak_ptrIvEENS4_8signals26detail21foreign_void_weak_ptrENS4_6detail7variant5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_EESt6vectorISE_SaISE_EEEEPSE_EET0_T_SN_SM_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cc1a:
  ret i32 %arg3
}

define i32 @function_2cc52() local_unnamed_addr {
dec_label_pc_2cc52:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cc52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cc52
}

define i32 @function_2cc60(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc60:
  %v0_2cc60 = load i32, i32* @eax, align 8
  %v11_2cc60 = and i32 %v0_2cc60, -252
  %v1_2cc65 = call i32 @unknown_4e218(i32 %v11_2cc60)
  ret i32 %v1_2cc65
}

define i32 @function_2cc6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cc6c:
  %v0_2cc70 = call i32 @unknown_3d578()
  %v0_2cc75 = load i32, i32* @ebp, align 4
  %v1_2cc75 = add i32 %v0_2cc75, -16
  %v2_2cc75 = inttoptr i32 %v1_2cc75 to i32*
  %v3_2cc75 = load i32, i32* %v2_2cc75, align 4
  %v4_2cc75 = add i32 %v3_2cc75, 12
  store i32 %v4_2cc75, i32* %v2_2cc75, align 4
  %v0_2cc79 = load i32, i32* @ebp, align 4
  %v1_2cc79 = add i32 %v0_2cc79, -32
  %v1_2cc80 = add i32 %v0_2cc79, -28
  %v2_2cc86 = call i32 @unknown_3d524(i32 %v1_2cc80, i32 %v1_2cc79)
  %v0_2cc8f = load i32, i32* @ebp, align 4
  %v1_2cc8f = add i32 %v0_2cc8f, -16
  %v2_2cc8f = inttoptr i32 %v1_2cc8f to i32*
  %v3_2cc8f = load i32, i32* %v2_2cc8f, align 4
  store i32 %v3_2cc8f, i32* @eax, align 8
  %v1_2cc92 = add i32 %v0_2cc8f, -12
  %v2_2cc92 = inttoptr i32 %v1_2cc92 to i32*
  %v3_2cc92 = load i32, i32* %v2_2cc92, align 4
  %v4_2cc95 = icmp eq i32 %v3_2cc92, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2cc95, label %bb, label %dec_label_pc_2cc9e

bb:                                               ; preds = %dec_label_pc_2cc6c
  %v1_2cc9c = call i32 @function_2ccd5()
  store i32 %v1_2cc9c, i32* @eax, align 8
  br label %dec_label_pc_2cc9e

dec_label_pc_2cc9e:                               ; preds = %bb, %dec_label_pc_2cc6c
  %v0_2cc9e = call i32 @function_2ccd0()
  ret i32 %v0_2cc9e
}

define i32 @function_2cca1() local_unnamed_addr {
dec_label_pc_2cca1:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cca1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cca1
}

define i32 @function_2ccb2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ccb2:
  %v0_2ccb2 = load i32, i32* @eax, align 8
  %v2_2ccb2 = add i32 %v0_2ccb2, 36
  %v16_2ccb2 = and i32 %v2_2ccb2, 255
  %v18_2ccb2 = and i32 %v0_2ccb2, -256
  %v19_2ccb2 = or i32 %v16_2ccb2, %v18_2ccb2
  ret i32 %v19_2ccb2

; uselistorder directives
  uselistorder i32 %v0_2ccb2, { 1, 0 }
}

define i32 @function_2ccd0() local_unnamed_addr {
dec_label_pc_2ccd0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ccd5() local_unnamed_addr {
dec_label_pc_2ccd5:
  %v0_2ccda = load i32, i32* @eax, align 8
  ret i32 %v0_2ccda
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE10get_objectEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ccdc:
  %v1_2ccf6 = add i32 %arg1, 4
  %v1_2ccfc = call i32 @unknown_558c2(i32 %v1_2ccf6)
  store i32 %v1_2ccfc, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2cd13

bb:                                               ; preds = %dec_label_pc_2ccdc
  %v2_2cd11 = call i32 @function_2cd18(i32 %v1_2ccfc)
  br label %dec_label_pc_2cd13

dec_label_pc_2cd13:                               ; preds = %bb, %dec_label_pc_2ccdc
  %v3_2cd11 = phi i32 [ %v2_2cd11, %bb ], [ %v1_2ccfc, %dec_label_pc_2ccdc ]
  ret i32 %v3_2cd11
}

define i32 @function_2cd18(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd18:
  %v0_2cd19 = load i32, i32* @eax, align 8
  ret i32 %v0_2cd19
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE8cast_ptrEPiN4mpl_5bool_ILb0EEE() local_unnamed_addr {
dec_label_pc_2cd1a:
  %eax.global-to-local = alloca i32, align 4
  %v17_2cd1d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2cd1d
}

define i32 @function_2cd21() local_unnamed_addr {
dec_label_pc_2cd21:
  %eax.global-to-local = alloca i32, align 4
  %v15_2cd21 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_2cd21
}

define i32 @function_2cd51() local_unnamed_addr {
dec_label_pc_2cd51:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2cd51 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2cd51 = add i32 %v0_2cd51, -1
  store i32 %v1_2cd51, i32* %ecx.global-to-local, align 4
  %v0_2cd53 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cd53
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd54:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2cd68(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd68:
  %v0_2cd6b = load i32, i32* @ebp, align 4
  %v1_2cd6b = add i32 %v0_2cd6b, -28
  %v2_2cd6b = inttoptr i32 %v1_2cd6b to i32*
  %v3_2cd6b = load i32, i32* %v2_2cd6b, align 4
  %v1_2cd6e = add i32 %v3_2cd6b, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2cd6e, i32* @eax, align 8
  %v1_2cd71 = add i32 %v0_2cd6b, -12
  %v2_2cd71 = inttoptr i32 %v1_2cd71 to i32*
  %v3_2cd71 = load i32, i32* %v2_2cd71, align 4
  %v4_2cd74 = icmp eq i32 %v3_2cd71, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2cd74, label %bb, label %dec_label_pc_2cd7d

bb:                                               ; preds = %dec_label_pc_2cd68
  %v1_2cd7b = call i32 @function_2cd82()
  br label %dec_label_pc_2cd7d

dec_label_pc_2cd7d:                               ; preds = %bb, %dec_label_pc_2cd68
  %v2_2cd7b = phi i32 [ %v1_2cd7b, %bb ], [ %v1_2cd6e, %dec_label_pc_2cd68 ]
  ret i32 %v2_2cd7b
}

define i32 @function_2cd82() local_unnamed_addr {
dec_label_pc_2cd82:
  %v0_2cd83 = load i32, i32* @eax, align 8
  ret i32 %v0_2cd83
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_2cd84:
  %eax.global-to-local = alloca i32, align 4
  %v5_2cd84 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2cd84
}

define i32 @function_2cd86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd86:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_2cd89 = load i32, i32* @ecx, align 4
  %v0_2cd91 = load i32, i32* @ebp, align 4
  %v0_2cd92 = load i32, i32* @eax, align 8
  %v2_2cd92 = or i32 %v0_2cd92, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2cd92, i32* %eax.global-to-local, align 8
  %v1_2cd95 = add i32 %v4_2cd89, -1
  store i32 %v1_2cd95, i32* @ecx, align 4
  %v1_2cd97 = add i32 %v0_2cd91, 3
  store i32 %v1_2cd97, i32* @ebp, align 4
  %v1_2cd98 = add i32 %v4_2cd89, -1587159996
  %v2_2cd98 = inttoptr i32 %v1_2cd98 to i8*
  %v3_2cd98 = load i8, i8* %v2_2cd98, align 1
  %v5_2cd98 = trunc i32 %v1_2cd95 to i8
  %v8_2cd98 = add i8 %v3_2cd98, %v5_2cd98
  %v28_2cd98 = icmp ult i8 %v8_2cd98, %v3_2cd98
  store i1 %v28_2cd98, i1* %cf.global-to-local, align 1
  store i8 %v8_2cd98, i8* %v2_2cd98, align 1
  %v0_2cd9e = load i32, i32* %eax.global-to-local, align 8
  %v1_2cd9e = trunc i32 %v0_2cd9e to i8
  %v2_2cd9e = load i1, i1* %cf.global-to-local, align 1
  %v3_2cd9e = zext i1 %v2_2cd9e to i8
  %v4_2cd9e = add i8 %v3_2cd9e, %v1_2cd9e
  %v19_2cd9e = icmp ule i8 %v4_2cd9e, %v1_2cd9e
  %v21_2cd9e = icmp eq i1 %v2_2cd9e, %v19_2cd9e
  store i1 %v21_2cd9e, i1* %cf.global-to-local, align 1
  %v22_2cd9e = zext i8 %v4_2cd9e to i32
  %v24_2cd9e = and i32 %v0_2cd9e, -256
  %v25_2cd9e = or i32 %v22_2cd9e, %v24_2cd9e
  store i32 %v25_2cd9e, i32* %eax.global-to-local, align 8
  %v1_2cda0 = inttoptr i32 %v25_2cd9e to i8*
  %v2_2cda0 = load i8, i8* %v1_2cda0, align 1
  %v5_2cda0 = add i8 %v2_2cda0, %v4_2cd9e
  store i8 %v5_2cda0, i8* %v1_2cda0, align 1
  %v0_2cda2 = load i32, i32* %eax.global-to-local, align 8
  %v1_2cda2 = load i32, i32* @ebp, align 4
  %v2_2cda2 = add i32 %v1_2cda2, -12
  %v3_2cda2 = inttoptr i32 %v2_2cda2 to i32*
  store i32 %v0_2cda2, i32* %v3_2cda2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2cda7 = load i32, i32* @ebp, align 4
  %v1_2cda7 = add i32 %v0_2cda7, -28
  %v2_2cda7 = inttoptr i32 %v1_2cda7 to i32*
  %v3_2cda7 = load i32, i32* %v2_2cda7, align 4
  store i32 %v3_2cda7, i32* %eax.global-to-local, align 8
  %v1_2cdad = call i32 @unknown_5cae6(i32 %v3_2cda7)
  store i32 %v1_2cdad, i32* %eax.global-to-local, align 8
  %v1_2cdb2 = load i32, i32* @ebp, align 4
  %v2_2cdb2 = add i32 %v1_2cdb2, -32
  %v3_2cdb2 = inttoptr i32 %v2_2cdb2 to i32*
  %v4_2cdb2 = load i32, i32* %v3_2cdb2, align 4
  %v10_2cdb2 = icmp ult i32 %v1_2cdad, %v4_2cdb2
  %v1_2cdb5 = zext i1 %v10_2cdb2 to i32
  %v3_2cdb5 = and i32 %v1_2cdad, -256
  %v4_2cdb5 = or i32 %v1_2cdb5, %v3_2cdb5
  store i32 %v4_2cdb5, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2cdb8 = icmp eq i1 %v10_2cdb2, false
  br i1 %v5_2cdb8, label %bb, label %dec_label_pc_2cdbc

bb:                                               ; preds = %dec_label_pc_2cd86
  %v1_2cdba = call i32 @function_2cdc1()
  store i32 %v1_2cdba, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2cdbc

dec_label_pc_2cdbc:                               ; preds = %bb, %dec_label_pc_2cd86
  %v3_2cdba = phi i32 [ %v1_2cdba, %bb ], [ %v4_2cdb5, %dec_label_pc_2cd86 ]
  ret i32 %v3_2cdba

; uselistorder directives
  uselistorder i1 %v10_2cdb2, { 1, 0 }
  uselistorder i8 %v4_2cd9e, { 0, 2, 1 }
  uselistorder i8 %v1_2cd9e, { 1, 0 }
  uselistorder i8 %v3_2cd98, { 1, 0 }
}

define i32 @function_2cdc1() local_unnamed_addr {
dec_label_pc_2cdc1:
  %v0_2cdc1 = load i32, i32* @ebp, align 4
  %v1_2cdc1 = add i32 %v0_2cdc1, -32
  %v2_2cdc1 = inttoptr i32 %v1_2cdc1 to i32*
  %v3_2cdc1 = load i32, i32* %v2_2cdc1, align 4
  %v2_2cdc4 = mul i32 %v3_2cdc1, 16
  ret i32 %v2_2cdc4
}

define i32 @function_2cddf() local_unnamed_addr {
dec_label_pc_2cddf:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2cddf = load i32, i32* %ecx.global-to-local, align 4
  %v1_2cddf = add i32 %v0_2cddf, -1
  store i32 %v1_2cddf, i32* %ecx.global-to-local, align 4
  %v0_2cde1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cde1
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cde2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ce05

bb:                                               ; preds = %dec_label_pc_2cde2
  %v2_2ce03 = call i32 @function_2ce0a(i32 %arg1)
  br label %dec_label_pc_2ce05

dec_label_pc_2ce05:                               ; preds = %bb, %dec_label_pc_2cde2
  %v3_2ce03 = phi i32 [ %v2_2ce03, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2cde2 ]
  ret i32 %v3_2ce03
}

define i32 @function_2ce0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce0a:
  %v0_2ce0b = load i32, i32* @eax, align 8
  ret i32 %v0_2ce0b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE10deallocateEPSM_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ce0c:
  ret i32 %arg2
}

define i32 @function_2ce4a() local_unnamed_addr {
dec_label_pc_2ce4a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ce4a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ce4a = add i32 %v0_2ce4a, -1
  store i32 %v1_2ce4a, i32* %ecx.global-to-local, align 4
  %v0_2ce4c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ce4c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ce4e:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ce6f = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2ce75 = call i32 @unknown_50308(i32 %v1_2ce6f)
  %v2_2ce7c = ptrtoint i32* %stack_var_-17 to i32
  %v2_2ce89 = call i32 @unknown_5cbe0(i32 %v2_2ce7c, i32 %arg1)
  %v2_2ce9b = call i32 @unknown_5cc66(i32 %v2_2ce7c, i32 %v1_2ce75)
  %v1_2cea6 = call i32 @unknown_5cc30(i32 %v2_2ce7c)
  %v2_2ceb8 = call i32 @unknown_5cca2(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  %v0_2cec9 = call i32 @function_2cee2()
  ret i32 %v0_2cec9

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2cecc() local_unnamed_addr {
dec_label_pc_2cecc:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cecc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cecc
}

define i32 @function_2cee2() local_unnamed_addr {
dec_label_pc_2cee2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cee6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cee6:
  %v0_2cee6 = load i32, i32* @ebx, align 8
  %v1_2cee6 = add i32 %v0_2cee6, -1010172835
  %v2_2cee6 = inttoptr i32 %v1_2cee6 to i32*
  %v3_2cee6 = load i32, i32* %v2_2cee6, align 4
  %v4_2cee6 = add i32 %v3_2cee6, -1
  store i32 %v4_2cee6, i32* %v2_2cee6, align 4
  %v21_2cee6 = load i32, i32* @eax, align 8
  ret i32 %v21_2cee6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_create_nodeERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ceec:
  %stack_var_-17 = alloca i32, align 4
  %v1_2cf10 = call i32 @unknown_5cd8a(i32 %arg1)
  %v1_2cf1b = add i32 %v1_2cf10, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2cf21 = call i32 @unknown_503a6(i32 %v1_2cf1b)
  %v2_2cf28 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2cf35 = call i32 @unknown_5cc7e(i32 %v2_2cf28, i32 %arg1)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2cf40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cf40:
  %v0_2cf40 = load i32, i32* @eax, align 8
  %v0_2cf44 = load i32, i32* @ebx, align 8
  %v0_2cf48 = load i32, i32* @ebp, align 4
  %v1_2cf48 = add i32 %v0_2cf48, -13
  %v3_2cf4e = call i32 @unknown_5ce1e(i32 %v1_2cf48, i32 %v0_2cf44, i32 %v0_2cf40)
  %v0_2cf53 = load i32, i32* @ebp, align 4
  %v1_2cf53 = add i32 %v0_2cf53, -13
  %v1_2cf59 = call i32 @unknown_5ccce(i32 %v1_2cf53)
  %v0_2cf5e = load i32, i32* @ebp, align 4
  %v1_2cf5e = add i32 %v0_2cf5e, -20
  %v2_2cf5e = inttoptr i32 %v1_2cf5e to i32*
  %v3_2cf5e = load i32, i32* %v2_2cf5e, align 4
  store i32 %v3_2cf5e, i32* @eax, align 8
  %v1_2cf61 = add i32 %v0_2cf5e, -12
  %v2_2cf61 = inttoptr i32 %v1_2cf61 to i32*
  %v3_2cf61 = load i32, i32* %v2_2cf61, align 4
  %v3_2cf64 = xor i32 %v3_2cf61, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2cf64 = icmp eq i32 %v3_2cf64, 0
  store i32 %v3_2cf64, i32* @edx, align 8
  br i1 %v4_2cf64, label %bb, label %dec_label_pc_2cf6d

bb:                                               ; preds = %dec_label_pc_2cf40
  %v1_2cf6b = call i32 @function_2cfb5()
  store i32 %v1_2cf6b, i32* @eax, align 8
  br label %dec_label_pc_2cf6d

dec_label_pc_2cf6d:                               ; preds = %bb, %dec_label_pc_2cf40
  %v0_2cf6d = call i32 @function_2cfb0()
  ret i32 %v0_2cf6d
}

define i32 @function_2cf70() local_unnamed_addr {
dec_label_pc_2cf70:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cf70 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cf70
}

define i32 @function_2cf90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf90:
  %v0_2cf90 = load i32, i32* @eax, align 8
  %v1_2cf93 = call i32 @unknown_5cd40(i32 %v0_2cf90)
  store i32 %v1_2cf93, i32* @eax, align 8
  %v0_2cf98 = call i32 @function_2cfab()
  ret i32 %v0_2cf98
}

define i32 @function_2cf9b() local_unnamed_addr {
dec_label_pc_2cf9b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cf9b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2cf9b
}

define i32 @function_2cfab() local_unnamed_addr {
dec_label_pc_2cfab:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cfb0() local_unnamed_addr {
dec_label_pc_2cfb0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2cfb5() local_unnamed_addr {
dec_label_pc_2cfb5:
  %v0_2cfb5 = load i32, i32* @ebp, align 4
  %v1_2cfb5 = add i32 %v0_2cfb5, -4
  %v2_2cfb5 = inttoptr i32 %v1_2cfb5 to i32*
  %v3_2cfb5 = load i32, i32* %v2_2cfb5, align 4
  store i32 %v3_2cfb5, i32* @ebx, align 8
  %v0_2cfb9 = load i32, i32* @eax, align 8
  ret i32 %v0_2cfb9
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfba:
  %v1_2cfd4 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2cfd4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2cfe3

bb:                                               ; preds = %dec_label_pc_2cfba
  %v2_2cfe1 = call i32 @function_2cfe8(i32 %arg1)
  br label %dec_label_pc_2cfe3

dec_label_pc_2cfe3:                               ; preds = %bb, %dec_label_pc_2cfba
  %v3_2cfe1 = phi i32 [ %v2_2cfe1, %bb ], [ %v1_2cfd4, %dec_label_pc_2cfba ]
  ret i32 %v3_2cfe1
}

define i32 @function_2cfe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfe8:
  %v0_2cfe9 = load i32, i32* @eax, align 8
  ret i32 %v0_2cfe9
}

define i32 @_ZNK5boost15optional_detail15aligned_storageIiE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfea:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d010

bb:                                               ; preds = %dec_label_pc_2cfea
  %v2_2d00e = call i32 @function_2d015(i32 %arg1)
  br label %dec_label_pc_2d010

dec_label_pc_2d010:                               ; preds = %bb, %dec_label_pc_2cfea
  %v3_2d00e = phi i32 [ %v2_2d00e, %bb ], [ %arg1, %dec_label_pc_2cfea ]
  ret i32 %v3_2d00e
}

define i32 @function_2d015(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d015:
  %v0_2d016 = load i32, i32* @eax, align 8
  ret i32 %v0_2d016
}

define i32 @_ZN5boost15optional_detail13optional_baseIiE11dereferenceEPiN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2d018:
  store i32 %arg2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d04b

bb:                                               ; preds = %dec_label_pc_2d018
  %v4_2d049 = sext i8 %arg3 to i32
  %v5_2d049 = call i32 @function_2d050(i32 %v4_2d049, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d04b

dec_label_pc_2d04b:                               ; preds = %bb, %dec_label_pc_2d018
  %v6_2d049 = phi i32 [ %v5_2d049, %bb ], [ %arg2, %dec_label_pc_2d018 ]
  ret i32 %v6_2d049
}

define i32 @function_2d050(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d050:
  %v0_2d051 = load i32, i32* @eax, align 8
  ret i32 %v0_2d051
}

define i32 @_ZN5boost6detail8function22functor_manager_commonIPFbxEE10manage_ptrERKNS1_15function_bufferERS6_NS1_30functor_manager_operation_typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d052:
  %eax.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %eax.global-to-local, align 8
  %v10_2d076 = icmp eq i32 %arg3, 0
  %v1_2d07a = icmp eq i1 %v10_2d076, false
  br i1 %v1_2d07a, label %dec_label_pc_2d08b, label %dec_label_pc_2d07c

dec_label_pc_2d07c:                               ; preds = %dec_label_pc_2d052
  store i32 %tmp103, i32* %eax.global-to-local, align 8
  %v2_2d07f = load i32, i32* %arg1, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v2_2d084 = inttoptr i32 %arg2 to i32*
  store i32 %v2_2d07f, i32* %v2_2d084, align 4
  %v0_2d086 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d086

dec_label_pc_2d08b:                               ; preds = %dec_label_pc_2d052
  %v13_2d08b = icmp eq i32 %arg3, 1
  %v1_2d08f = icmp eq i1 %v13_2d08b, false
  br i1 %v1_2d08f, label %dec_label_pc_2d0a6, label %dec_label_pc_2d091

dec_label_pc_2d091:                               ; preds = %dec_label_pc_2d08b
  store i32 %tmp103, i32* %eax.global-to-local, align 8
  %v2_2d094 = load i32, i32* %arg1, align 4
  %v2_2d099 = inttoptr i32 %arg2 to i32*
  store i32 %v2_2d094, i32* %v2_2d099, align 4
  store i32 %tmp103, i32* %eax.global-to-local, align 8
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp103

dec_label_pc_2d0a6:                               ; preds = %dec_label_pc_2d08b
  %v13_2d0a6 = icmp eq i32 %arg3, 2
  %v1_2d0aa = icmp eq i1 %v13_2d0a6, false
  br i1 %v1_2d0aa, label %dec_label_pc_2d0b7, label %dec_label_pc_2d0ac

dec_label_pc_2d0ac:                               ; preds = %dec_label_pc_2d0a6
  store i32 %arg2, i32* %eax.global-to-local, align 8
  %v1_2d0af = inttoptr i32 %arg2 to i32*
  store i32 0, i32* %v1_2d0af, align 4
  %v0_2d0b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d0b5

dec_label_pc_2d0b7:                               ; preds = %dec_label_pc_2d0a6
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
}

define i32 @function_2d0bb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d0bb:
  %v0_2d0bb = load i1, i1* @zf, align 1
  %v1_2d0bb = icmp eq i1 %v0_2d0bb, false
  br i1 %v1_2d0bb, label %bb, label %dec_label_pc_2d0bd

bb:                                               ; preds = %dec_label_pc_2d0bb
  %v2_2d0bb = call i32 @function_2d108()
  br label %dec_label_pc_2d0bd

dec_label_pc_2d0bd:                               ; preds = %bb, %dec_label_pc_2d0bb
  %v0_2d0bd = load i32, i32* @ebp, align 4
  %v1_2d0bd = add i32 %v0_2d0bd, -32
  %v2_2d0bd = inttoptr i32 %v1_2d0bd to i32*
  %v3_2d0bd = load i32, i32* %v2_2d0bd, align 4
  %v1_2d0c0 = inttoptr i32 %v3_2d0bd to i32*
  %v2_2d0c0 = load i32, i32* %v1_2d0c0, align 4
  store i32 %v2_2d0c0, i32* @eax, align 8
  %v2_2d0c2 = add i32 %v0_2d0bd, -16
  %v3_2d0c2 = inttoptr i32 %v2_2d0c2 to i32*
  store i32 %v2_2d0c0, i32* %v3_2d0c2, align 4
  %v1_2d0cc = call i32 @function_2ee2a(i32 ptrtoint (i32* @global_var_34274.2038 to i32))
  %v0_2d0d3 = load i32, i32* @ebp, align 4
  %v1_2d0d3 = add i32 %v0_2d0d3, -16
  %v2_2d0d3 = inttoptr i32 %v1_2d0d3 to i32*
  %v3_2d0d3 = load i32, i32* %v2_2d0d3, align 4
  store i32 %v3_2d0d3, i32* @eax, align 8
  %v1_2d0d9 = call i32 @function_2ee2a(i32 %v3_2d0d3)
  ret i32 %v1_2d0d9

; uselistorder directives
  uselistorder i32 (i32)* @function_2ee2a, { 1, 0 }
  uselistorder i1* @zf, { 2, 6, 0, 8, 4, 1, 3, 5, 7, 9 }
}

define i32 @function_2d0e9() local_unnamed_addr {
dec_label_pc_2d0e9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_2d0e9 = add i32 %tmp92, -1064038464
  %v2_2d0e9 = inttoptr i32 %v1_2d0e9 to i32*
  %v3_2d0e9 = load i32, i32* %v2_2d0e9, align 4
  %v4_2d0e9 = add i32 %v3_2d0e9, 1
  store i32 %v4_2d0e9, i32* %v2_2d0e9, align 4
  %v0_2d0ef = load i32, i32* %eax.global-to-local, align 8
  %v4_2d0ef = trunc i32 %v0_2d0ef to i8
  %v5_2d0ef = icmp eq i8 %v4_2d0ef, 0
  %v0_2d0fd = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v5_2d0ef, label %dec_label_pc_2d0fd, label %dec_label_pc_2d0f3

dec_label_pc_2d0f3:                               ; preds = %dec_label_pc_2d0e9
  %v1_2d0f3 = add i32 %v0_2d0fd, -28
  %v2_2d0f3 = inttoptr i32 %v1_2d0f3 to i32*
  %v3_2d0f3 = load i32, i32* %v2_2d0f3, align 4
  %v1_2d0f6 = add i32 %v0_2d0fd, -32
  %v2_2d0f6 = inttoptr i32 %v1_2d0f6 to i32*
  %v3_2d0f6 = load i32, i32* %v2_2d0f6, align 4
  store i32 %v3_2d0f6, i32* %eax.global-to-local, align 8
  %v2_2d0f9 = inttoptr i32 %v3_2d0f6 to i32*
  store i32 %v3_2d0f3, i32* %v2_2d0f9, align 4
  %v0_2d0fb = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d0fb

dec_label_pc_2d0fd:                               ; preds = %dec_label_pc_2d0e9
  %v1_2d0fd = add i32 %v0_2d0fd, -32
  %v2_2d0fd = inttoptr i32 %v1_2d0fd to i32*
  %v3_2d0fd = load i32, i32* %v2_2d0fd, align 4
  store i32 %v3_2d0fd, i32* %eax.global-to-local, align 8
  %v1_2d100 = inttoptr i32 %v3_2d0fd to i32*
  store i32 0, i32* %v1_2d100, align 4
  %v0_2d106 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d106

; uselistorder directives
  uselistorder i32 %v0_2d0fd, { 2, 1, 0 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19, 20, 21, 3, 22 }
}

define i32 @function_2d108() local_unnamed_addr {
dec_label_pc_2d108:
  %v0_2d108 = load i32, i32* @ebp, align 4
  %v1_2d108 = add i32 %v0_2d108, -32
  %v2_2d108 = inttoptr i32 %v1_2d108 to i32*
  %v3_2d108 = load i32, i32* %v2_2d108, align 4
  %v1_2d10b = inttoptr i32 %v3_2d108 to i32*
  store i32 ptrtoint (i32* @global_var_34274.2038 to i32), i32* %v1_2d10b, align 4
  %v0_2d111 = load i32, i32* @ebp, align 4
  %v1_2d111 = add i32 %v0_2d111, -32
  %v2_2d111 = inttoptr i32 %v1_2d111 to i32*
  %v3_2d111 = load i32, i32* %v2_2d111, align 4
  %v1_2d114 = add i32 %v3_2d111, 4
  %v2_2d114 = inttoptr i32 %v1_2d114 to i8*
  store i8 0, i8* %v2_2d114, align 1
  %v0_2d118 = load i32, i32* @ebp, align 4
  %v1_2d118 = add i32 %v0_2d118, -32
  %v2_2d118 = inttoptr i32 %v1_2d118 to i32*
  %v3_2d118 = load i32, i32* %v2_2d118, align 4
  %v1_2d11b = add i32 %v3_2d118, 5
  %v2_2d11b = inttoptr i32 %v1_2d11b to i8*
  store i8 0, i8* %v2_2d11b, align 1
  %v0_2d11f = load i32, i32* @ebp, align 4
  %v1_2d11f = add i32 %v0_2d11f, -12
  %v2_2d11f = inttoptr i32 %v1_2d11f to i32*
  %v3_2d11f = load i32, i32* %v2_2d11f, align 4
  %v3_2d122 = xor i32 %v3_2d11f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d122 = icmp eq i32 %v3_2d122, 0
  store i32 %v3_2d122, i32* @eax, align 8
  br i1 %v4_2d122, label %bb, label %dec_label_pc_2d12b

bb:                                               ; preds = %dec_label_pc_2d108
  %v1_2d129 = call i32 @function_2d130()
  br label %dec_label_pc_2d12b

dec_label_pc_2d12b:                               ; preds = %bb, %dec_label_pc_2d108
  %v2_2d129 = phi i32 [ %v1_2d129, %bb ], [ %v3_2d122, %dec_label_pc_2d108 ]
  ret i32 %v2_2d129

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_34274.2038 to i32), { 1, 0, 2 }
}

define i32 @function_2d130() local_unnamed_addr {
dec_label_pc_2d130:
  %v0_2d135 = load i32, i32* @eax, align 8
  ret i32 %v0_2d135
}

define i32 @_ZN5boost6detail13addr_impl_refIFbxEEC1ERS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d136:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d167

bb:                                               ; preds = %dec_label_pc_2d136
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2d165 = call i32 @function_2d16c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2d167

dec_label_pc_2d167:                               ; preds = %bb, %dec_label_pc_2d136
  %v4_2d165 = phi i32 [ %v3_2d165, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d136 ]
  ret i32 %v4_2d165

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2d16c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d16c:
  %v0_2d16d = load i32, i32* @eax, align 8
  ret i32 %v0_2d16d
}

define i32 @_ZNK5boost6detail13addr_impl_refIFbxEEcvRS2_Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d16e:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2d180(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d180:
  %v0_2d180 = load i32, i32* @eax, align 8
  %v1_2d180 = load i32, i32* @ebp, align 4
  %v2_2d180 = add i32 %v1_2d180, -12
  %v3_2d180 = inttoptr i32 %v2_2d180 to i32*
  store i32 %v0_2d180, i32* %v3_2d180, align 4
  %v0_2d185 = load i32, i32* @ebp, align 4
  %v1_2d185 = add i32 %v0_2d185, -28
  %v2_2d185 = inttoptr i32 %v1_2d185 to i32*
  %v3_2d185 = load i32, i32* %v2_2d185, align 4
  %v1_2d188 = inttoptr i32 %v3_2d185 to i32*
  %v2_2d188 = load i32, i32* %v1_2d188, align 4
  store i32 %v2_2d188, i32* @eax, align 8
  %v1_2d18a = add i32 %v0_2d185, -12
  %v2_2d18a = inttoptr i32 %v1_2d18a to i32*
  %v3_2d18a = load i32, i32* %v2_2d18a, align 4
  %v4_2d18d = icmp eq i32 %v3_2d18a, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2d18d, label %bb, label %dec_label_pc_2d196

bb:                                               ; preds = %dec_label_pc_2d180
  %v1_2d194 = call i32 @function_2d19b()
  br label %dec_label_pc_2d196

dec_label_pc_2d196:                               ; preds = %bb, %dec_label_pc_2d180
  %v2_2d194 = phi i32 [ %v1_2d194, %bb ], [ %v2_2d188, %dec_label_pc_2d180 ]
  ret i32 %v2_2d194
}

define i32 @function_2d19b() local_unnamed_addr {
dec_label_pc_2d19b:
  %v0_2d19c = load i32, i32* @eax, align 8
  ret i32 %v0_2d19c
}

define i32 @_ZN5boost6detail14addressof_implIFbxEE1fEPS2_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d19d:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d1c9

bb:                                               ; preds = %dec_label_pc_2d19d
  %v3_2d1c7 = call i32 @function_2d1ce(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d1c9

dec_label_pc_2d1c9:                               ; preds = %bb, %dec_label_pc_2d19d
  %v4_2d1c7 = phi i32 [ %v3_2d1c7, %bb ], [ %arg1, %dec_label_pc_2d19d ]
  ret i32 %v4_2d1c7
}

define i32 @function_2d1cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d1cc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d1ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d1ce:
  %v0_2d1cf = load i32, i32* @eax, align 8
  ret i32 %v0_2d1cf
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor28m_visit_not_function_pointerIPFbxEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d1d0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d1ff

bb:                                               ; preds = %dec_label_pc_2d1d0
  %v4_2d1fd = call i32 @function_2d204(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2d1ff

dec_label_pc_2d1ff:                               ; preds = %bb, %dec_label_pc_2d1d0
  %v5_2d1fd = phi i32 [ %v4_2d1fd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d1d0 ]
  ret i32 %v5_2d1fd
}

define i32 @function_2d204(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d204:
  %v0_2d205 = load i32, i32* @eax, align 8
  ret i32 %v0_2d205
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d206:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d22c

bb:                                               ; preds = %dec_label_pc_2d206
  %v2_2d22a = call i32 @function_2d231(i32 %arg1)
  br label %dec_label_pc_2d22c

dec_label_pc_2d22c:                               ; preds = %bb, %dec_label_pc_2d206
  %v3_2d22a = phi i32 [ %v2_2d22a, %bb ], [ %arg1, %dec_label_pc_2d206 ]
  ret i32 %v3_2d22a
}

define i32 @function_2d231(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d231:
  %v0_2d232 = load i32, i32* @eax, align 8
  ret i32 %v0_2d232
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISG_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d234:
  %v1_2d257 = call i32 @unknown_5d1e8(i32 %arg1)
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2d260(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2d260:
  %v0_2d260 = load i32, i32* @eax, align 8
  %v3_2d260 = xor i32 %v0_2d260, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d260 = icmp eq i32 %v3_2d260, 0
  store i32 %v3_2d260, i32* @eax, align 8
  br i1 %v4_2d260, label %bb, label %dec_label_pc_2d268

bb:                                               ; preds = %dec_label_pc_2d260
  %v1_2d266 = call i32 @function_2d26d()
  br label %dec_label_pc_2d268

dec_label_pc_2d268:                               ; preds = %bb, %dec_label_pc_2d260
  %v2_2d266 = phi i32 [ %v1_2d266, %bb ], [ %v3_2d260, %dec_label_pc_2d260 ]
  ret i32 %v2_2d266
}

define i32 @function_2d26d() local_unnamed_addr {
dec_label_pc_2d26d:
  %v0_2d26e = load i32, i32* @eax, align 8
  ret i32 %v0_2d26e
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EEC1ERKSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d270:
  %stack_var_-17 = alloca i32, align 4
  %v2_2d294 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2d29a = call i32 @unknown_5d24e(i32 %v2_2d294, i32 %arg2)
  %v2_2d2ac = call i32 @unknown_5d28a(i32 %arg1, i32 %v2_2d294)
  %v1_2d2b7 = call i32 @unknown_5a656(i32 %v2_2d294)
  %v1_2d2c2 = call i32 @unknown_5d2e0(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d2d3

bb:                                               ; preds = %dec_label_pc_2d270
  %v1_2d2d1 = call i32 @function_2d2d8()
  br label %dec_label_pc_2d2d3

dec_label_pc_2d2d3:                               ; preds = %bb, %dec_label_pc_2d270
  %v2_2d2d1 = phi i32 [ %v1_2d2d1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d270 ]
  ret i32 %v2_2d2d1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2d2d8() local_unnamed_addr {
dec_label_pc_2d2d8:
  %v0_2d2d9 = load i32, i32* @eax, align 8
  ret i32 %v0_2d2d9
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d2da:
  ret i32 %arg2
}

define i32 @function_2d2f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2f0:
  %v2_2d2f0 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2d2f0 = load i32, i32* @eax, align 8
  %v4_2d2f0 = trunc i32 %v3_2d2f0 to i8
  %v5_2d2f0 = add i8 %v4_2d2f0, %v2_2d2f0
  %v21_2d2f0 = inttoptr i32 %v3_2d2f0 to i8*
  store i8 %v5_2d2f0, i8* %v21_2d2f0, align 1
  %v0_2d2f2 = load i32, i32* @eax, align 8
  %v1_2d2f2 = load i32, i32* @ebp, align 4
  %v2_2d2f2 = add i32 %v1_2d2f2, -12
  %v3_2d2f2 = inttoptr i32 %v2_2d2f2 to i32*
  store i32 %v0_2d2f2, i32* %v3_2d2f2, align 4
  %v0_2d2f7 = load i32, i32* @ebp, align 4
  %v1_2d2f7 = add i32 %v0_2d2f7, -32
  %v2_2d2f7 = inttoptr i32 %v1_2d2f7 to i32*
  %v3_2d2f7 = load i32, i32* %v2_2d2f7, align 4
  %v1_2d2fa = inttoptr i32 %v3_2d2f7 to i32*
  %v2_2d2fa = load i32, i32* %v1_2d2fa, align 4
  %v1_2d300 = add i32 %v0_2d2f7, -28
  %v2_2d300 = inttoptr i32 %v1_2d300 to i32*
  %v3_2d300 = load i32, i32* %v2_2d300, align 4
  %v2_2d306 = call i32 @unknown_5d386(i32 %v3_2d300, i32 %v2_2d2fa)
  %v0_2d30b = load i32, i32* @ebp, align 4
  %v1_2d30b = add i32 %v0_2d30b, -28
  %v2_2d30b = inttoptr i32 %v1_2d30b to i32*
  %v3_2d30b = load i32, i32* %v2_2d30b, align 4
  ret i32 %v3_2d30b
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d324:
  ret i32 %arg1
}

define i32 @function_2d34c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d34c:
  %v0_2d34e = call i32 @unknown_5d3d0()
  %v0_2d353 = load i32, i32* @ebp, align 4
  %v1_2d353 = add i32 %v0_2d353, -28
  %v2_2d353 = inttoptr i32 %v1_2d353 to i32*
  %v3_2d353 = load i32, i32* %v2_2d353, align 4
  store i32 %v3_2d353, i32* @eax, align 8
  %v1_2d356 = add i32 %v0_2d353, -12
  %v2_2d356 = inttoptr i32 %v1_2d356 to i32*
  %v3_2d356 = load i32, i32* %v2_2d356, align 4
  store i1 false, i1* @cf, align 1
  %v4_2d359 = icmp eq i32 %v3_2d356, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2d359, label %bb, label %dec_label_pc_2d362

bb:                                               ; preds = %dec_label_pc_2d34c
  %v1_2d360 = call i32 @function_2d367()
  br label %dec_label_pc_2d362

dec_label_pc_2d362:                               ; preds = %bb, %dec_label_pc_2d34c
  %v2_2d360 = phi i32 [ %v1_2d360, %bb ], [ %v3_2d353, %dec_label_pc_2d34c ]
  ret i32 %v2_2d360
}

define i32 @function_2d367() local_unnamed_addr {
dec_label_pc_2d367:
  %v0_2d368 = load i32, i32* @eax, align 8
  ret i32 %v0_2d368
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE22_M_initialize_dispatchISt20_List_const_iteratorISH_EEEvT_SN_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d36c:
  ret i32 %arg3
}

define i32 @function_2d382(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d382:
  %v0_2d382 = load i32, i32* @ebp, align 4
  %v0_2d387 = load i32, i32* @eax, align 8
  %v2_2d387 = load i1, i1* @cf, align 1
  %v3_2d387 = zext i1 %v2_2d387 to i32
  %v4_2d387 = add i32 %v0_2d387, zext (i8 ptrtoint (i8* @global_var_88.2056 to i8) to i32)
  %v5_2d387 = add i32 %v4_2d387, %v3_2d387
  %v25_2d387 = and i32 %v5_2d387, 255
  %v27_2d387 = and i32 %v0_2d387, -256
  %v28_2d387 = or i32 %v25_2d387, %v27_2d387
  %v1_2d389 = add i32 %v0_2d382, 2
  store i32 %v1_2d389, i32* @ebp, align 4
  ret i32 %v28_2d387

; uselistorder directives
  uselistorder i32 %v0_2d387, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_88.2056 to i8), { 1, 0 }
}

define i32 @function_2d38b() local_unnamed_addr {
dec_label_pc_2d38b:
  %v1_2d391 = load i32, i32* @ebp, align 4
  %v2_2d391 = add i32 %v1_2d391, -12
  %v3_2d391 = inttoptr i32 %v2_2d391 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2d391, align 4
  br label %dec_label_pc_2d3bd

dec_label_pc_2d398:                               ; preds = %dec_label_pc_2d3bd
  %v1_2d398 = add i32 %v0_2d398, -32
  %v1_2d39e = call i32 @unknown_5d4ae(i32 %v1_2d398)
  %v0_2d3a7 = load i32, i32* @ebp, align 4
  %v1_2d3a7 = add i32 %v0_2d3a7, -28
  %v2_2d3a7 = inttoptr i32 %v1_2d3a7 to i32*
  %v3_2d3a7 = load i32, i32* %v2_2d3a7, align 4
  %v2_2d3ad = call i32 @unknown_5d450(i32 %v3_2d3a7, i32 %v1_2d39e)
  %v0_2d3b2 = load i32, i32* @ebp, align 4
  %v1_2d3b2 = add i32 %v0_2d3b2, -32
  %v1_2d3b8 = call i32 @unknown_565c6(i32 %v1_2d3b2)
  br label %dec_label_pc_2d3bd

dec_label_pc_2d3bd:                               ; preds = %dec_label_pc_2d398, %dec_label_pc_2d38b
  %v0_2d3bd = load i32, i32* @ebp, align 4
  %v1_2d3bd = add i32 %v0_2d3bd, -36
  %v1_2d3c4 = add i32 %v0_2d3bd, -32
  %v2_2d3ca = call i32 @unknown_56586(i32 %v1_2d3c4, i32 %v1_2d3bd)
  %v4_2d3cf = trunc i32 %v2_2d3ca to i8
  %v5_2d3cf = icmp eq i8 %v4_2d3cf, 0
  %v1_2d3d1 = icmp eq i1 %v5_2d3cf, false
  %v0_2d398 = load i32, i32* @ebp, align 4
  br i1 %v1_2d3d1, label %dec_label_pc_2d398, label %dec_label_pc_2d3d3

dec_label_pc_2d3d3:                               ; preds = %dec_label_pc_2d3bd
  %v1_2d3d3 = add i32 %v0_2d398, -12
  %v2_2d3d3 = inttoptr i32 %v1_2d3d3 to i32*
  %v3_2d3d3 = load i32, i32* %v2_2d3d3, align 4
  %v3_2d3d6 = xor i32 %v3_2d3d3, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d3d6 = icmp eq i32 %v3_2d3d6, 0
  store i32 %v3_2d3d6, i32* @eax, align 8
  br i1 %v4_2d3d6, label %bb, label %dec_label_pc_2d3df

bb:                                               ; preds = %dec_label_pc_2d3d3
  %v1_2d3dd = call i32 @function_2d3e4()
  br label %dec_label_pc_2d3df

dec_label_pc_2d3df:                               ; preds = %bb, %dec_label_pc_2d3d3
  %v2_2d3dd = phi i32 [ %v1_2d3dd, %bb ], [ %v3_2d3d6, %dec_label_pc_2d3d3 ]
  ret i32 %v2_2d3dd
}

define i32 @function_2d3e4() local_unnamed_addr {
dec_label_pc_2d3e4:
  %v0_2d3e5 = load i32, i32* @eax, align 8
  ret i32 %v0_2d3e5
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d3e6:
  %v1_2d403 = call i32 @unknown_5d55a(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d414

bb:                                               ; preds = %dec_label_pc_2d3e6
  %v1_2d412 = call i32 @function_2d419()
  br label %dec_label_pc_2d414

dec_label_pc_2d414:                               ; preds = %bb, %dec_label_pc_2d3e6
  %v2_2d412 = phi i32 [ %v1_2d412, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d3e6 ]
  ret i32 %v2_2d412
}

define i32 @function_2d419() local_unnamed_addr {
dec_label_pc_2d419:
  %v0_2d41a = load i32, i32* @eax, align 8
  ret i32 %v0_2d41a
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE8_M_clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d41c:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2d432(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d432:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2d434 = load i32, i32* @ebp, align 4
  %v1_2d434 = add i32 %v0_2d434, -28
  %v2_2d434 = inttoptr i32 %v1_2d434 to i32*
  %v3_2d434 = load i32, i32* %v2_2d434, align 4
  store i32 %v3_2d434, i32* %eax.global-to-local, align 8
  %v1_2d437 = inttoptr i32 %v3_2d434 to i32*
  %v2_2d437 = load i32, i32* %v1_2d437, align 4
  store i32 %v2_2d437, i32* %eax.global-to-local, align 8
  %v2_2d439 = add i32 %v0_2d434, -24
  %v3_2d439 = inttoptr i32 %v2_2d439 to i32*
  store i32 %v2_2d437, i32* %v3_2d439, align 4
  br label %dec_label_pc_2d49d

dec_label_pc_2d43e:                               ; preds = %dec_label_pc_2d49d
  %v3_2d43e = load i32, i32* %v3_2d4a0, align 4
  store i32 %v3_2d43e, i32* %eax.global-to-local, align 8
  %v2_2d441 = add i32 %v0_2d49d, -20
  %v3_2d441 = inttoptr i32 %v2_2d441 to i32*
  store i32 %v3_2d43e, i32* %v3_2d441, align 4
  %v0_2d444 = load i32, i32* @ebp, align 4
  %v1_2d444 = add i32 %v0_2d444, -24
  %v2_2d444 = inttoptr i32 %v1_2d444 to i32*
  %v3_2d444 = load i32, i32* %v2_2d444, align 4
  store i32 %v3_2d444, i32* %eax.global-to-local, align 8
  %v1_2d447 = inttoptr i32 %v3_2d444 to i32*
  %v2_2d447 = load i32, i32* %v1_2d447, align 4
  store i32 %v2_2d447, i32* %eax.global-to-local, align 8
  store i32 %v2_2d447, i32* %v2_2d444, align 4
  %v0_2d44c = load i32, i32* @ebp, align 4
  %v1_2d44c = add i32 %v0_2d44c, -20
  %v2_2d44c = inttoptr i32 %v1_2d44c to i32*
  %v3_2d44c = load i32, i32* %v2_2d44c, align 4
  %v1_2d44f = add i32 %v3_2d44c, 8
  store i32 %v1_2d44f, i32* %eax.global-to-local, align 8
  %v1_2d452 = load i32, i32* @esp, align 4
  %v2_2d452 = inttoptr i32 %v1_2d452 to i32*
  store i32 %v1_2d44f, i32* %v2_2d452, align 4
  %v0_2d455 = call i32 @unknown_56d7d()
  store i32 %v0_2d455, i32* @ebx, align 8
  %v0_2d45c = load i32, i32* @ebp, align 4
  %v1_2d45c = add i32 %v0_2d45c, -13
  store i32 %v1_2d45c, i32* %eax.global-to-local, align 8
  %v1_2d45f = add i32 %v0_2d45c, -28
  %v2_2d45f = inttoptr i32 %v1_2d45f to i32*
  %v3_2d45f = load i32, i32* %v2_2d45f, align 4
  %v1_2d462 = load i32, i32* @esp, align 4
  %v2_2d462 = add i32 %v1_2d462, 4
  %v3_2d462 = inttoptr i32 %v2_2d462 to i32*
  store i32 %v3_2d45f, i32* %v3_2d462, align 4
  %v0_2d466 = load i32, i32* %eax.global-to-local, align 8
  %v1_2d466 = load i32, i32* @esp, align 4
  %v2_2d466 = inttoptr i32 %v1_2d466 to i32*
  store i32 %v0_2d466, i32* %v2_2d466, align 4
  %v0_2d469 = call i32 @unknown_56cf8()
  %v0_2d46e = load i32, i32* @esp, align 4
  %v0_2d471 = load i32, i32* @ebx, align 8
  %v3_2d471 = inttoptr i32 %v0_2d46e to i32*
  store i32 %v0_2d471, i32* %v3_2d471, align 4
  %v0_2d475 = load i32, i32* @ebp, align 4
  %v1_2d475 = add i32 %v0_2d475, -13
  store i32 %v1_2d475, i32* %eax.global-to-local, align 8
  %v1_2d478 = load i32, i32* @esp, align 4
  %v2_2d478 = inttoptr i32 %v1_2d478 to i32*
  store i32 %v1_2d475, i32* %v2_2d478, align 4
  %v0_2d47b = call i32 @unknown_5d5ba()
  %v0_2d480 = load i32, i32* @ebp, align 4
  %v1_2d480 = add i32 %v0_2d480, -13
  store i32 %v1_2d480, i32* %eax.global-to-local, align 8
  %v1_2d483 = load i32, i32* @esp, align 4
  %v2_2d483 = inttoptr i32 %v1_2d483 to i32*
  store i32 %v1_2d480, i32* %v2_2d483, align 4
  %v0_2d486 = call i32 @unknown_56d48()
  store i32 %v0_2d486, i32* %eax.global-to-local, align 8
  %v0_2d48b = load i32, i32* @ebp, align 4
  %v1_2d48b = add i32 %v0_2d48b, -20
  %v2_2d48b = inttoptr i32 %v1_2d48b to i32*
  %v3_2d48b = load i32, i32* %v2_2d48b, align 4
  store i32 %v3_2d48b, i32* %eax.global-to-local, align 8
  %v1_2d48e = load i32, i32* @esp, align 4
  %v2_2d48e = add i32 %v1_2d48e, 4
  %v3_2d48e = inttoptr i32 %v2_2d48e to i32*
  store i32 %v3_2d48b, i32* %v3_2d48e, align 4
  %v0_2d492 = load i32, i32* @ebp, align 4
  %v1_2d492 = add i32 %v0_2d492, -28
  %v2_2d492 = inttoptr i32 %v1_2d492 to i32*
  %v3_2d492 = load i32, i32* %v2_2d492, align 4
  store i32 %v3_2d492, i32* %eax.global-to-local, align 8
  %v1_2d495 = load i32, i32* @esp, align 4
  %v2_2d495 = inttoptr i32 %v1_2d495 to i32*
  store i32 %v3_2d492, i32* %v2_2d495, align 4
  %v0_2d498 = call i32 @unknown_56e06()
  store i32 %v0_2d498, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2d49d

dec_label_pc_2d49d:                               ; preds = %dec_label_pc_2d43e, %dec_label_pc_2d432
  %v0_2d49d = load i32, i32* @ebp, align 4
  %v1_2d49d = add i32 %v0_2d49d, -28
  %v2_2d49d = inttoptr i32 %v1_2d49d to i32*
  %v3_2d49d = load i32, i32* %v2_2d49d, align 4
  store i32 %v3_2d49d, i32* %eax.global-to-local, align 8
  %v2_2d4a0 = add i32 %v0_2d49d, -24
  %v3_2d4a0 = inttoptr i32 %v2_2d4a0 to i32*
  %v4_2d4a0 = load i32, i32* %v3_2d4a0, align 4
  %v15_2d4a0 = icmp eq i32 %v3_2d49d, %v4_2d4a0
  %v1_2d4a3 = icmp eq i1 %v15_2d4a0, false
  %v2_2d4a3 = zext i1 %v1_2d4a3 to i32
  %v4_2d4a3 = and i32 %v3_2d49d, -256
  %v5_2d4a3 = or i32 %v2_2d4a3, %v4_2d4a3
  store i32 %v5_2d4a3, i32* %eax.global-to-local, align 8
  %v5_2d4a6 = icmp eq i1 %v1_2d4a3, false
  %v1_2d4a8 = icmp eq i1 %v5_2d4a6, false
  br i1 %v1_2d4a8, label %dec_label_pc_2d43e, label %dec_label_pc_2d4aa

dec_label_pc_2d4aa:                               ; preds = %dec_label_pc_2d49d
  %v0_2d4aa = call i32 @function_2d4c3()
  store i32 %v0_2d4aa, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d4aa

; uselistorder directives
  uselistorder i32* %v3_2d4a0, { 1, 0 }
  uselistorder i32 %v3_2d49d, { 1, 0, 2 }
  uselistorder i32 %v0_2d49d, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17 }
}

define i32 @function_2d4ad() local_unnamed_addr {
dec_label_pc_2d4ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d4ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d4ad
}

define i32 @function_2d4c3() local_unnamed_addr {
dec_label_pc_2d4c3:
  %v0_2d4c3 = load i32, i32* @ebp, align 4
  %v1_2d4c3 = add i32 %v0_2d4c3, -12
  %v2_2d4c3 = inttoptr i32 %v1_2d4c3 to i32*
  %v3_2d4c3 = load i32, i32* %v2_2d4c3, align 4
  %v3_2d4c6 = xor i32 %v3_2d4c3, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d4c6 = icmp eq i32 %v3_2d4c6, 0
  store i32 %v3_2d4c6, i32* @eax, align 8
  br i1 %v4_2d4c6, label %bb, label %dec_label_pc_2d4cf

bb:                                               ; preds = %dec_label_pc_2d4c3
  %v1_2d4cd = call i32 @function_2d4d4()
  br label %dec_label_pc_2d4cf

dec_label_pc_2d4cf:                               ; preds = %bb, %dec_label_pc_2d4c3
  %v2_2d4cd = phi i32 [ %v1_2d4cd, %bb ], [ %v3_2d4c6, %dec_label_pc_2d4c3 ]
  ret i32 %v2_2d4cd
}

define i32 @function_2d4d4() local_unnamed_addr {
dec_label_pc_2d4d4:
  %v0_2d4d4 = load i32, i32* @ebp, align 4
  %v1_2d4d4 = add i32 %v0_2d4d4, -4
  %v2_2d4d4 = inttoptr i32 %v1_2d4d4 to i32*
  %v3_2d4d4 = load i32, i32* %v2_2d4d4, align 4
  store i32 %v3_2d4d4, i32* @ebx, align 8
  %v0_2d4d8 = load i32, i32* @eax, align 8
  ret i32 %v0_2d4d8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EEC1ERKST_() local_unnamed_addr {
dec_label_pc_2d4da:
  %eax.global-to-local = alloca i32, align 4
  %v16_2d4df = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v16_2d4df
}

define i32 @function_2d4e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4e2:
  %v0_2d4e2 = load i32, i32* @ebp, align 4
  %v1_2d4e2 = add i32 %v0_2d4e2, 8
  %v2_2d4e2 = inttoptr i32 %v1_2d4e2 to i32*
  %v3_2d4e2 = load i32, i32* %v2_2d4e2, align 4
  %v2_2d4e5 = add i32 %v0_2d4e2, -28
  %v3_2d4e5 = inttoptr i32 %v2_2d4e5 to i32*
  store i32 %v3_2d4e2, i32* %v3_2d4e5, align 4
  %v0_2d4e8 = load i32, i32* @ebp, align 4
  %v1_2d4e8 = add i32 %v0_2d4e8, 12
  %v2_2d4e8 = inttoptr i32 %v1_2d4e8 to i32*
  %v3_2d4e8 = load i32, i32* %v2_2d4e8, align 4
  %v2_2d4eb = add i32 %v0_2d4e8, -32
  %v3_2d4eb = inttoptr i32 %v2_2d4eb to i32*
  store i32 %v3_2d4e8, i32* %v3_2d4eb, align 4
  %v1_2d4f4 = load i32, i32* @ebp, align 4
  %v2_2d4f4 = add i32 %v1_2d4f4, -12
  %v3_2d4f4 = inttoptr i32 %v2_2d4f4 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2d4f4, align 4
  %v0_2d4f9 = load i32, i32* @ebp, align 4
  %v1_2d4f9 = add i32 %v0_2d4f9, -32
  %v2_2d4f9 = inttoptr i32 %v1_2d4f9 to i32*
  %v3_2d4f9 = load i32, i32* %v2_2d4f9, align 4
  %v1_2d4ff = call i32 @unknown_5d6b4(i32 %v3_2d4f9)
  %v0_2d504 = load i32, i32* @ebp, align 4
  %v1_2d504 = add i32 %v0_2d504, -32
  %v2_2d504 = inttoptr i32 %v1_2d504 to i32*
  %v3_2d504 = load i32, i32* %v2_2d504, align 4
  store i32 %v3_2d504, i32* @ecx, align 4
  %v1_2d507 = add i32 %v0_2d504, -28
  %v2_2d507 = inttoptr i32 %v1_2d507 to i32*
  %v3_2d507 = load i32, i32* %v2_2d507, align 4
  %v3_2d515 = call i32 @unknown_5d6e2(i32 %v3_2d507, i32 %v3_2d504, i32 %v1_2d4ff)
  %v0_2d51a = load i32, i32* @ebp, align 4
  %v1_2d51a = add i32 %v0_2d51a, -32
  %v2_2d51a = inttoptr i32 %v1_2d51a to i32*
  %v3_2d51a = load i32, i32* %v2_2d51a, align 4
  %v1_2d520 = call i32 @unknown_5d768(i32 %v3_2d51a)
  %v1_2d525 = icmp eq i32 %v1_2d520, 0
  %v1_2d527 = icmp eq i1 %v1_2d525, false
  %v5_2d52a = icmp eq i1 %v1_2d527, false
  br i1 %v5_2d52a, label %bb, label %dec_label_pc_2d532

bb:                                               ; preds = %dec_label_pc_2d4e2
  %v1_2d52c = call i32 @function_2d5d9()
  br label %dec_label_pc_2d532

dec_label_pc_2d532:                               ; preds = %bb, %dec_label_pc_2d4e2
  %v0_2d532 = load i32, i32* @ebp, align 4
  %v1_2d532 = add i32 %v0_2d532, -28
  %v2_2d532 = inttoptr i32 %v1_2d532 to i32*
  %v3_2d532 = load i32, i32* %v2_2d532, align 4
  %v1_2d538 = call i32 @unknown_5d918(i32 %v3_2d532)
  ret i32 %v1_2d538
}

define i32 @function_2d53e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d53e:
  %v0_2d53e = load i32, i32* @eax, align 8
  ret i32 %v0_2d53e
}

define i32 @function_2d578() local_unnamed_addr {
dec_label_pc_2d578:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d578 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d578
}

define i32 @function_2d584(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d584:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2d586 = load i32, i32* @eax, align 8
  %v1_2d589 = call i32 @unknown_5d948(i32 %v0_2d586)
  %v1_2d58e = load i32, i32* @ebx, align 8
  %v2_2d58e = inttoptr i32 %v1_2d58e to i32*
  store i32 %v1_2d589, i32* %v2_2d58e, align 4
  %v0_2d590 = load i32, i32* @ebp, align 4
  %v1_2d590 = add i32 %v0_2d590, -28
  %v2_2d590 = inttoptr i32 %v1_2d590 to i32*
  %v3_2d590 = load i32, i32* %v2_2d590, align 4
  %v1_2d596 = call i32 @unknown_5d9e4(i32 %v3_2d590)
  store i32 %v1_2d596, i32* %ebx.global-to-local, align 8
  %v0_2d59d = load i32, i32* @ebp, align 4
  %v1_2d59d = add i32 %v0_2d59d, -28
  %v2_2d59d = inttoptr i32 %v1_2d59d to i32*
  %v3_2d59d = load i32, i32* %v2_2d59d, align 4
  %v1_2d5a3 = call i32 @unknown_5d918(i32 %v3_2d59d)
  %v1_2d5a8 = inttoptr i32 %v1_2d5a3 to i32*
  %v2_2d5a8 = load i32, i32* %v1_2d5a8, align 4
  %v1_2d5ad = call i32 @unknown_5d9ae(i32 %v2_2d5a8)
  %v1_2d5b2 = load i32, i32* %ebx.global-to-local, align 8
  %v2_2d5b2 = inttoptr i32 %v1_2d5b2 to i32*
  store i32 %v1_2d5ad, i32* %v2_2d5b2, align 4
  %v0_2d5b4 = load i32, i32* @ebp, align 4
  %v1_2d5b4 = add i32 %v0_2d5b4, -32
  %v2_2d5b4 = inttoptr i32 %v1_2d5b4 to i32*
  %v3_2d5b4 = load i32, i32* %v2_2d5b4, align 4
  %v1_2d5b7 = add i32 %v3_2d5b4, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_2d5b7 = inttoptr i32 %v1_2d5b7 to i32*
  %v3_2d5b7 = load i32, i32* %v2_2d5b7, align 4
  %v1_2d5ba = add i32 %v0_2d5b4, -28
  %v2_2d5ba = inttoptr i32 %v1_2d5ba to i32*
  %v3_2d5ba = load i32, i32* %v2_2d5ba, align 4
  %v2_2d5bd = add i32 %v3_2d5ba, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_2d5bd = inttoptr i32 %v2_2d5bd to i32*
  store i32 %v3_2d5b7, i32* %v3_2d5bd, align 4
  %v0_2d5c0 = call i32 @function_2d5d9()
  ret i32 %v0_2d5c0

; uselistorder directives
  uselistorder i32 ()* @function_2d5d9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5d918, { 1, 0 }
}

define i32 @function_2d5c3() local_unnamed_addr {
dec_label_pc_2d5c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d5c3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d5c3
}

define i32 @function_2d5d9() local_unnamed_addr {
dec_label_pc_2d5d9:
  %v0_2d5d9 = load i32, i32* @ebp, align 4
  %v1_2d5d9 = add i32 %v0_2d5d9, -12
  %v2_2d5d9 = inttoptr i32 %v1_2d5d9 to i32*
  %v3_2d5d9 = load i32, i32* %v2_2d5d9, align 4
  %v3_2d5dc = xor i32 %v3_2d5d9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d5dc = icmp eq i32 %v3_2d5dc, 0
  store i32 %v3_2d5dc, i32* @eax, align 8
  br i1 %v4_2d5dc, label %bb, label %dec_label_pc_2d5e5

bb:                                               ; preds = %dec_label_pc_2d5d9
  %v1_2d5e3 = call i32 @function_2d5ea()
  br label %dec_label_pc_2d5e5

dec_label_pc_2d5e5:                               ; preds = %bb, %dec_label_pc_2d5d9
  %v2_2d5e3 = phi i32 [ %v1_2d5e3, %bb ], [ %v3_2d5dc, %dec_label_pc_2d5d9 ]
  ret i32 %v2_2d5e3
}

define i32 @function_2d5ea() local_unnamed_addr {
dec_label_pc_2d5ea:
  %v0_2d5f0 = load i32, i32* @eax, align 8
  ret i32 %v0_2d5f0
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d5f2:
  %v1_2d60f = call i32 @unknown_5db2c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d620

bb:                                               ; preds = %dec_label_pc_2d5f2
  %v1_2d61e = call i32 @function_2d625()
  br label %dec_label_pc_2d620

dec_label_pc_2d620:                               ; preds = %bb, %dec_label_pc_2d5f2
  %v2_2d61e = phi i32 [ %v1_2d61e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d5f2 ]
  ret i32 %v2_2d61e
}

define i32 @function_2d625() local_unnamed_addr {
dec_label_pc_2d625:
  %v0_2d626 = load i32, i32* @eax, align 8
  ret i32 %v0_2d626
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d628:
  %v10_2d687106 = icmp eq i32 %arg2, 0
  %v1_2d68b107 = icmp eq i1 %v10_2d687106, false
  %v5_2d68e109 = icmp eq i1 %v1_2d68b107, false
  %v1_2d690110 = icmp eq i1 %v5_2d68e109, false
  br i1 %v1_2d690110, label %dec_label_pc_2d647, label %dec_label_pc_2d692

dec_label_pc_2d647:                               ; preds = %dec_label_pc_2d628, %dec_label_pc_2d647
  %stack_var_-36.0111 = phi i32 [ %v1_2d667, %dec_label_pc_2d647 ], [ %arg2, %dec_label_pc_2d628 ]
  %v1_2d64d = call i32 @unknown_56e60(i32 %stack_var_-36.0111)
  %v2_2d65c = call i32 @unknown_5ac50(i32 %arg1, i32 %v1_2d64d)
  %v1_2d667 = call i32 @unknown_56e30(i32 %stack_var_-36.0111)
  %v2_2d67c = call i32 @unknown_5b258(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_2d687 = icmp eq i32 %v1_2d667, 0
  %v1_2d68b = icmp eq i1 %v10_2d687, false
  %v5_2d68e = icmp eq i1 %v1_2d68b, false
  %v1_2d690 = icmp eq i1 %v5_2d68e, false
  br i1 %v1_2d690, label %dec_label_pc_2d647, label %dec_label_pc_2d692

dec_label_pc_2d692:                               ; preds = %dec_label_pc_2d647, %dec_label_pc_2d628
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d69e

bb:                                               ; preds = %dec_label_pc_2d692
  %v1_2d69c = call i32 @function_2d6a3()
  br label %dec_label_pc_2d69e

dec_label_pc_2d69e:                               ; preds = %bb, %dec_label_pc_2d692
  %v2_2d69c = phi i32 [ %v1_2d69c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d692 ]
  ret i32 %v2_2d69c

; uselistorder directives
  uselistorder i32 %v1_2d667, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder label %dec_label_pc_2d647, { 1, 0 }
}

define i32 @function_2d6a3() local_unnamed_addr {
dec_label_pc_2d6a3:
  %v0_2d6a4 = load i32, i32* @eax, align 8
  ret i32 %v0_2d6a4
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d6a6:
  %v1_2d6c6 = add i32 %arg2, 12
  %v2_2d6c6 = inttoptr i32 %v1_2d6c6 to i32*
  %v3_2d6c6 = load i32, i32* %v2_2d6c6, align 4
  %v2_2d6d3 = call i32 @unknown_5dc0a(i32 %arg1, i32 %v3_2d6c6)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d6e7

bb:                                               ; preds = %dec_label_pc_2d6a6
  %v1_2d6e5 = call i32 @function_2d6ec()
  br label %dec_label_pc_2d6e7

dec_label_pc_2d6e7:                               ; preds = %bb, %dec_label_pc_2d6a6
  %v2_2d6e5 = phi i32 [ %v1_2d6e5, %bb ], [ %arg1, %dec_label_pc_2d6a6 ]
  ret i32 %v2_2d6e5

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d6ec() local_unnamed_addr {
dec_label_pc_2d6ec:
  %v0_2d6ed = load i32, i32* @eax, align 8
  ret i32 %v0_2d6ed
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d6f0:
  %v1_2d710 = add i32 %arg2, 4
  %v2_2d71d = call i32 @unknown_5dc54(i32 %arg1, i32 %v1_2d710)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d731

bb:                                               ; preds = %dec_label_pc_2d6f0
  %v1_2d72f = call i32 @function_2d736()
  br label %dec_label_pc_2d731

dec_label_pc_2d731:                               ; preds = %bb, %dec_label_pc_2d6f0
  %v2_2d72f = phi i32 [ %v1_2d72f, %bb ], [ %arg1, %dec_label_pc_2d6f0 ]
  ret i32 %v2_2d72f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d736() local_unnamed_addr {
dec_label_pc_2d736:
  %v0_2d737 = load i32, i32* @eax, align 8
  ret i32 %v0_2d737
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2d73a:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d766

bb:                                               ; preds = %dec_label_pc_2d73a
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2d764 = call i32 @function_2d76b(i32 %tmp102)
  br label %dec_label_pc_2d766

dec_label_pc_2d766:                               ; preds = %bb, %dec_label_pc_2d73a
  %v3_2d764 = phi i32 [ %v2_2d764, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d73a ]
  ret i32 %v3_2d764

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2d76b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d76b:
  %v0_2d76c = load i32, i32* @eax, align 8
  ret i32 %v0_2d76c
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISH_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d76e:
  %v1_2d78e = inttoptr i32 %arg2 to i32*
  %v2_2d78e = load i32, i32* %v1_2d78e, align 4
  store i32 %v2_2d78e, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d7a1

bb:                                               ; preds = %dec_label_pc_2d76e
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2d79f = call i32 @function_2d7a6(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2d7a1

dec_label_pc_2d7a1:                               ; preds = %bb, %dec_label_pc_2d76e
  %v4_2d79f = phi i32 [ %v3_2d79f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2d76e ]
  ret i32 %v4_2d79f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2d7a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d7a6:
  %v0_2d7a7 = load i32, i32* @eax, align 8
  ret i32 %v0_2d7a7
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1EPSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d7a8:
  ret i32 %arg2
}

define i32 @function_2d7b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d7b8:
  %v0_2d7b8 = load i32, i32* @ebp, align 4
  %v1_2d7b8 = add i32 %v0_2d7b8, 1
  store i32 %v1_2d7b8, i32* @ebp, align 4
  %v2_2d7c0 = add i32 %v0_2d7b8, -11
  %v3_2d7c0 = inttoptr i32 %v2_2d7c0 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2d7c0, align 4
  %v0_2d7c5 = load i32, i32* @ebp, align 4
  %v1_2d7c5 = add i32 %v0_2d7c5, -28
  %v2_2d7c5 = inttoptr i32 %v1_2d7c5 to i32*
  %v3_2d7c5 = load i32, i32* %v2_2d7c5, align 4
  %v1_2d7d3 = inttoptr i32 %v3_2d7c5 to i32*
  store i32 ptrtoint (%vtable_333fc_type* @global_var_333fc.2063 to i32), i32* %v1_2d7d3, align 4
  %v0_2d7d9 = load i32, i32* @ebp, align 4
  %v1_2d7d9 = add i32 %v0_2d7d9, -28
  %v2_2d7d9 = inttoptr i32 %v1_2d7d9 to i32*
  %v3_2d7d9 = load i32, i32* %v2_2d7d9, align 4
  %v1_2d7dc = add i32 %v0_2d7d9, -32
  %v2_2d7dc = inttoptr i32 %v1_2d7dc to i32*
  %v3_2d7dc = load i32, i32* %v2_2d7dc, align 4
  %v2_2d7df = add i32 %v3_2d7d9, 12
  %v3_2d7df = inttoptr i32 %v2_2d7df to i32*
  store i32 %v3_2d7dc, i32* %v3_2d7df, align 4
  %v0_2d7e2 = load i32, i32* @ebp, align 4
  %v1_2d7e2 = add i32 %v0_2d7e2, -12
  %v2_2d7e2 = inttoptr i32 %v1_2d7e2 to i32*
  %v3_2d7e2 = load i32, i32* %v2_2d7e2, align 4
  %v3_2d7e5 = xor i32 %v3_2d7e2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d7e5 = icmp eq i32 %v3_2d7e5, 0
  store i32 %v3_2d7e5, i32* @eax, align 8
  br i1 %v4_2d7e5, label %bb, label %dec_label_pc_2d7ee

bb:                                               ; preds = %dec_label_pc_2d7b8
  %v2_2d7ec = call i32 @function_2d7f3(i32 %v3_2d7c5)
  br label %dec_label_pc_2d7ee

dec_label_pc_2d7ee:                               ; preds = %bb, %dec_label_pc_2d7b8
  %v4_2d7ec = phi i32 [ %v2_2d7ec, %bb ], [ %v3_2d7e5, %dec_label_pc_2d7b8 ]
  ret i32 %v4_2d7ec

; uselistorder directives
  uselistorder i32 %v3_2d7c5, { 1, 0 }
}

define i32 @function_2d7f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d7f3:
  %v0_2d7f4 = load i32, i32* @eax, align 8
  ret i32 %v0_2d7f4
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d7f6:
  ret i32 %arg1
}

define i32 @function_2d812(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d812:
  %v0_2d817 = call i32 @unknown_51300()
  %v0_2d81c = load i32, i32* @ebp, align 4
  %v1_2d81c = add i32 %v0_2d81c, -28
  %v2_2d81c = inttoptr i32 %v1_2d81c to i32*
  %v3_2d81c = load i32, i32* %v2_2d81c, align 4
  %v1_2d822 = call i32 @unknown_512ca(i32 %v3_2d81c)
  %v0_2d827 = load i32, i32* @ebp, align 4
  %v1_2d827 = add i32 %v0_2d827, -12
  %v2_2d827 = inttoptr i32 %v1_2d827 to i32*
  %v3_2d827 = load i32, i32* %v2_2d827, align 4
  %v3_2d82a = xor i32 %v3_2d827, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d82a = icmp eq i32 %v3_2d82a, 0
  store i32 %v3_2d82a, i32* @eax, align 8
  br i1 %v4_2d82a, label %bb, label %dec_label_pc_2d833

bb:                                               ; preds = %dec_label_pc_2d812
  %v1_2d831 = call i32 @function_2d851()
  store i32 %v1_2d831, i32* @eax, align 8
  br label %dec_label_pc_2d833

dec_label_pc_2d833:                               ; preds = %bb, %dec_label_pc_2d812
  %v0_2d833 = call i32 @function_2d84c()
  ret i32 %v0_2d833
}

define i32 @function_2d836() local_unnamed_addr {
dec_label_pc_2d836:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d836 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d836
}

define i32 @function_2d84c() local_unnamed_addr {
dec_label_pc_2d84c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d851() local_unnamed_addr {
dec_label_pc_2d851:
  %v0_2d856 = load i32, i32* @eax, align 8
  ret i32 %v0_2d856
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d857:
  ret i32 %arg1
}

define i32 @function_2d862(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d862:
  %v0_2d862 = load i32, i32* @ebp, align 4
  %v1_2d862 = add i32 %v0_2d862, 1
  store i32 %v1_2d862, i32* @ebp, align 4
  %v2_2d86a = add i32 %v0_2d862, -11
  %v3_2d86a = inttoptr i32 %v2_2d86a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2d86a, align 4
  %v0_2d86f = load i32, i32* @ebp, align 4
  %v1_2d86f = add i32 %v0_2d86f, -28
  %v2_2d86f = inttoptr i32 %v1_2d86f to i32*
  %v3_2d86f = load i32, i32* %v2_2d86f, align 4
  %v1_2d872 = icmp eq i32 %v3_2d86f, 0
  br i1 %v1_2d872, label %bb, label %dec_label_pc_2d876

bb:                                               ; preds = %dec_label_pc_2d862
  %v1_2d874 = call i32 @function_2d886()
  br label %dec_label_pc_2d876

dec_label_pc_2d876:                               ; preds = %bb, %dec_label_pc_2d862
  %v1_2d879 = call i32 @unknown_5b04d(i32 %v3_2d86f)
  ret i32 %v1_2d879
}

define i32 @function_2d886() local_unnamed_addr {
dec_label_pc_2d886:
  %v0_2d886 = load i32, i32* @ebp, align 4
  %v1_2d886 = add i32 %v0_2d886, -12
  %v2_2d886 = inttoptr i32 %v1_2d886 to i32*
  %v3_2d886 = load i32, i32* %v2_2d886, align 4
  %v3_2d889 = xor i32 %v3_2d886, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d889 = icmp eq i32 %v3_2d889, 0
  store i32 %v3_2d889, i32* @eax, align 8
  br i1 %v4_2d889, label %bb, label %dec_label_pc_2d892

bb:                                               ; preds = %dec_label_pc_2d886
  %v1_2d890 = call i32 @function_2d897()
  br label %dec_label_pc_2d892

dec_label_pc_2d892:                               ; preds = %bb, %dec_label_pc_2d886
  %v2_2d890 = phi i32 [ %v1_2d890, %bb ], [ %v3_2d889, %dec_label_pc_2d886 ]
  ret i32 %v2_2d890
}

define i32 @function_2d897() local_unnamed_addr {
dec_label_pc_2d897:
  %v0_2d89c = load i32, i32* @eax, align 8
  ret i32 %v0_2d89c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEEC1EPSJ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d89e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 8
  %v1_2d8c1 = call i32 @function_2f792(i32 %tmp101)
  store i32 ptrtoint (%vtable_33344_type* @global_var_33344.2064 to i32), i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2d8d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d8d2:
  %v0_2d8d2 = load i32, i32* @ebp, align 4
  %v1_2d8d2 = add i32 %v0_2d8d2, -32
  %v2_2d8d2 = inttoptr i32 %v1_2d8d2 to i32*
  %v3_2d8d2 = load i32, i32* %v2_2d8d2, align 4
  %v1_2d8d5 = load i32, i32* @eax, align 8
  %v2_2d8d5 = add i32 %v1_2d8d5, 12
  %v3_2d8d5 = inttoptr i32 %v2_2d8d5 to i32*
  store i32 %v3_2d8d2, i32* %v3_2d8d5, align 4
  %v0_2d8d8 = load i32, i32* @ebp, align 4
  %v1_2d8d8 = add i32 %v0_2d8d8, -12
  %v2_2d8d8 = inttoptr i32 %v1_2d8d8 to i32*
  %v3_2d8d8 = load i32, i32* %v2_2d8d8, align 4
  %v3_2d8db = xor i32 %v3_2d8d8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d8db = icmp eq i32 %v3_2d8db, 0
  store i32 %v3_2d8db, i32* @eax, align 8
  br i1 %v4_2d8db, label %bb, label %dec_label_pc_2d8e4

bb:                                               ; preds = %dec_label_pc_2d8d2
  %v1_2d8e2 = call i32 @function_2d8e9()
  br label %dec_label_pc_2d8e4

dec_label_pc_2d8e4:                               ; preds = %bb, %dec_label_pc_2d8d2
  %v2_2d8e2 = phi i32 [ %v1_2d8e2, %bb ], [ %v3_2d8db, %dec_label_pc_2d8d2 ]
  ret i32 %v2_2d8e2
}

define i32 @function_2d8e9() local_unnamed_addr {
dec_label_pc_2d8e9:
  %v0_2d8ea = load i32, i32* @eax, align 8
  ret i32 %v0_2d8ea
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d8ec:
  %v1_2d907 = add i32 %arg1, 8
  %v1_2d90d = call i32 @unknown_4c12c(i32 %v1_2d907)
  %v1_2d918 = call i32 @unknown_4cfd6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d929

bb:                                               ; preds = %dec_label_pc_2d8ec
  %v1_2d927 = call i32 @function_2d947()
  store i32 %v1_2d927, i32* @eax, align 8
  br label %dec_label_pc_2d929

dec_label_pc_2d929:                               ; preds = %bb, %dec_label_pc_2d8ec
  %v0_2d929 = call i32 @function_2d942()
  ret i32 %v0_2d929

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2d92c() local_unnamed_addr {
dec_label_pc_2d92c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d92c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2d92c
}

define i32 @function_2d942() local_unnamed_addr {
dec_label_pc_2d942:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2d947() local_unnamed_addr {
dec_label_pc_2d947:
  %v0_2d94c = load i32, i32* @eax, align 8
  ret i32 %v0_2d94c
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d94d:
  %v1_2d968 = icmp eq i32 %arg1, 0
  br i1 %v1_2d968, label %bb, label %dec_label_pc_2d96c

bb:                                               ; preds = %dec_label_pc_2d94d
  %v2_2d96a = call i32 @function_2d97c(i32 0)
  br label %dec_label_pc_2d96c

dec_label_pc_2d96c:                               ; preds = %bb, %dec_label_pc_2d94d
  %v1_2d96f = call i32 @unknown_5b239(i32 %arg1)
  ret i32 %v1_2d96f
}

define i32 @function_2d97c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d97c:
  %v0_2d97c = load i32, i32* @ebp, align 4
  %v1_2d97c = add i32 %v0_2d97c, -12
  %v2_2d97c = inttoptr i32 %v1_2d97c to i32*
  %v3_2d97c = load i32, i32* %v2_2d97c, align 4
  %v3_2d97f = xor i32 %v3_2d97c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2d97f = icmp eq i32 %v3_2d97f, 0
  store i32 %v3_2d97f, i32* @eax, align 8
  br i1 %v4_2d97f, label %bb, label %dec_label_pc_2d988

bb:                                               ; preds = %dec_label_pc_2d97c
  %v4_2d986 = call i32 @function_2d98d(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_2d988

dec_label_pc_2d988:                               ; preds = %bb, %dec_label_pc_2d97c
  %v5_2d986 = phi i32 [ %v4_2d986, %bb ], [ %v3_2d97f, %dec_label_pc_2d97c ]
  ret i32 %v5_2d986

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_2d98d, { 1, 0 }
}

define i32 @function_2d98d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d98d:
  store i32 %arg2, i32* @ebp, align 4
  %v0_2d992 = load i32, i32* @eax, align 8
  ret i32 %v0_2d992
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d994:
  %v2_2d9be = call i32 @unknown_5df30(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2d9d5

bb:                                               ; preds = %dec_label_pc_2d994
  %v1_2d9d3 = call i32 @function_2d9da()
  br label %dec_label_pc_2d9d5

dec_label_pc_2d9d5:                               ; preds = %bb, %dec_label_pc_2d994
  %v2_2d9d3 = phi i32 [ %v1_2d9d3, %bb ], [ %arg1, %dec_label_pc_2d994 ]
  ret i32 %v2_2d9d3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d9da() local_unnamed_addr {
dec_label_pc_2d9da:
  %v0_2d9db = load i32, i32* @eax, align 8
  ret i32 %v0_2d9db
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2d9de:
  %v2_2d9f8 = load i32, i32* %arg1, align 4
  %v1_2d9fa = add i32 %v2_2d9f8, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2d9fa, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2da09

bb:                                               ; preds = %dec_label_pc_2d9de
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2da07 = call i32 @function_2da0e(i32 %tmp100)
  br label %dec_label_pc_2da09

dec_label_pc_2da09:                               ; preds = %bb, %dec_label_pc_2d9de
  %v3_2da07 = phi i32 [ %v2_2da07, %bb ], [ %v1_2d9fa, %dec_label_pc_2d9de ]
  ret i32 %v3_2da07

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2da0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2da0e:
  %v0_2da0f = load i32, i32* @eax, align 8
  ret i32 %v0_2da0f
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SJ_EEE6insertESt17_Rb_tree_iteratorISP_ERKSP_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2da10:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_2da3c = ptrtoint i32* %stack_var_-40 to i32
  %v2_2da40 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2da46 = call i32 @unknown_4d790(i32 %v2_2da40, i32 %v4_2da3c)
  %v3_2da58 = load i32, i32* %stack_var_-20, align 4
  %v4_2da66 = call i32 @unknown_5dfe2(i32 %arg1, i32 %arg2, i32 %v3_2da58, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2da7d

bb:                                               ; preds = %dec_label_pc_2da10
  %v1_2da7b = call i32 @function_2da82()
  br label %dec_label_pc_2da7d

dec_label_pc_2da7d:                               ; preds = %bb, %dec_label_pc_2da10
  %v2_2da7b = phi i32 [ %v1_2da7b, %bb ], [ %arg1, %dec_label_pc_2da10 ]
  ret i32 %v2_2da7b

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2da82() local_unnamed_addr {
dec_label_pc_2da82:
  %v0_2da83 = load i32, i32* @eax, align 8
  ret i32 %v0_2da83
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE8_M_eraseESt14_List_iteratorISH_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2da86:
  ret i32 %arg2
}

define i32 @function_2daae() local_unnamed_addr {
dec_label_pc_2daae:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2daae = load i32, i32* %ebx.global-to-local, align 8
  %v1_2daae = add i32 %v0_2daae, 1166663749
  %v2_2daae = inttoptr i32 %v1_2daae to i32*
  %v3_2daae = load i32, i32* %v2_2daae, align 4
  %v4_2daae = add i32 %v3_2daae, -1
  store i32 %v4_2daae, i32* %v2_2daae, align 4
  %v0_2dab5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dab5 = add i32 %v0_2dab5, -20
  %v2_2dab5 = inttoptr i32 %v1_2dab5 to i32*
  %v3_2dab5 = load i32, i32* %v2_2dab5, align 4
  %v1_2dab8 = add i32 %v3_2dab5, 8
  %v1_2dabe = call i32 @unknown_573e7(i32 %v1_2dab8)
  store i32 %v1_2dabe, i32* %ebx.global-to-local, align 8
  %v0_2dac5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dac5 = add i32 %v0_2dac5, -28
  %v2_2dac5 = inttoptr i32 %v1_2dac5 to i32*
  %v3_2dac5 = load i32, i32* %v2_2dac5, align 4
  %v1_2dac8 = add i32 %v0_2dac5, -13
  %v2_2dad2 = call i32 @unknown_57362(i32 %v1_2dac8, i32 %v3_2dac5)
  %v0_2dada = load i32, i32* %ebx.global-to-local, align 8
  %v0_2dade = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dade = add i32 %v0_2dade, -13
  %v2_2dae4 = call i32 @unknown_5dc24(i32 %v1_2dade, i32 %v0_2dada)
  %v1_2dae9 = add i32 %v0_2dade, -13
  %v1_2daef = call i32 @unknown_573b2(i32 %v1_2dae9)
  %v1_2daf4 = add i32 %v0_2dade, -28
  %v2_2daf4 = inttoptr i32 %v1_2daf4 to i32*
  %v3_2daf4 = load i32, i32* %v2_2daf4, align 4
  %v1_2daf7 = add i32 %v0_2dade, -20
  %v2_2daf7 = inttoptr i32 %v1_2daf7 to i32*
  %v3_2daf7 = load i32, i32* %v2_2daf7, align 4
  %v2_2db01 = call i32 @unknown_57470(i32 %v3_2daf4, i32 %v3_2daf7)
  %v0_2db06 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2db06 = add i32 %v0_2db06, -12
  %v2_2db06 = inttoptr i32 %v1_2db06 to i32*
  %v3_2db06 = load i32, i32* %v2_2db06, align 4
  %v3_2db09 = xor i32 %v3_2db06, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2db09 = icmp eq i32 %v3_2db09, 0
  store i32 %v3_2db09, i32* @eax, align 8
  br i1 %v4_2db09, label %bb, label %dec_label_pc_2db12

bb:                                               ; preds = %dec_label_pc_2daae
  %v1_2db10 = call i32 @function_2db30()
  store i32 %v1_2db10, i32* @eax, align 8
  br label %dec_label_pc_2db12

dec_label_pc_2db12:                               ; preds = %bb, %dec_label_pc_2daae
  %v0_2db12 = call i32 @function_2db2b()
  ret i32 %v0_2db12

; uselistorder directives
  uselistorder i32 %v0_2dade, { 1, 0, 2, 3 }
}

define i32 @function_2db15() local_unnamed_addr {
dec_label_pc_2db15:
  %eax.global-to-local = alloca i32, align 4
  %v0_2db15 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2db15
}

define i32 @function_2db22(i32 %arg1) local_unnamed_addr {
dec_label_pc_2db22:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2db2b() local_unnamed_addr {
dec_label_pc_2db2b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2db30() local_unnamed_addr {
dec_label_pc_2db30:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2db32(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2db32:
  %v0_2db34 = load i32, i32* @eax, align 8
  ret i32 %v0_2db34
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_S_valueEPKSt13_Rb_tree_nodeISL_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2db35:
  %v1_2db4f = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2db4f, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2db5e

bb:                                               ; preds = %dec_label_pc_2db35
  %v2_2db5c = call i32 @function_2db63(i32 %arg1)
  br label %dec_label_pc_2db5e

dec_label_pc_2db5e:                               ; preds = %bb, %dec_label_pc_2db35
  %v3_2db5c = phi i32 [ %v2_2db5c, %bb ], [ %v1_2db4f, %dec_label_pc_2db35 ]
  ret i32 %v3_2db5c
}

define i32 @function_2db63(i32 %arg1) local_unnamed_addr {
dec_label_pc_2db63:
  %v0_2db64 = load i32, i32* @eax, align 8
  ret i32 %v0_2db64
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2db66:
  %v1_2db8f = call i32 @unknown_5e554(i32 %arg1)
  %v10_2db94 = icmp ult i32 %v1_2db8f, %arg2
  %v1_2db97 = zext i1 %v10_2db94 to i32
  %v3_2db97 = and i32 %v1_2db8f, -256
  %v4_2db97 = or i32 %v1_2db97, %v3_2db97
  %v5_2db9a = icmp eq i1 %v10_2db94, false
  br i1 %v5_2db9a, label %bb, label %dec_label_pc_2db9e

bb:                                               ; preds = %dec_label_pc_2db66
  %v1_2db9c = call i32 @function_2dba3()
  br label %dec_label_pc_2db9e

dec_label_pc_2db9e:                               ; preds = %bb, %dec_label_pc_2db66
  %v2_2db9c = phi i32 [ %v1_2db9c, %bb ], [ %v4_2db97, %dec_label_pc_2db66 ]
  ret i32 %v2_2db9c

; uselistorder directives
  uselistorder i1 %v10_2db94, { 1, 0 }
}

define i32 @function_2dba3() local_unnamed_addr {
dec_label_pc_2dba3:
  %v0_2dba3 = load i32, i32* @ebp, align 4
  %v1_2dba3 = add i32 %v0_2dba3, -32
  %v2_2dba3 = inttoptr i32 %v1_2dba3 to i32*
  %v3_2dba3 = load i32, i32* %v2_2dba3, align 4
  %v2_2dba6 = mul i32 %v3_2dba3, 16
  ret i32 %v2_2dba6
}

define i32 @function_2dbc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbc2:
  %v0_2dbc3 = load i32, i32* @eax, align 8
  ret i32 %v0_2dbc3
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IbxNS1_8functionIFbxEEEEENS3_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbc4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2dbe7

bb:                                               ; preds = %dec_label_pc_2dbc4
  %v2_2dbe5 = call i32 @function_2dbec(i32 %arg1)
  br label %dec_label_pc_2dbe7

dec_label_pc_2dbe7:                               ; preds = %bb, %dec_label_pc_2dbc4
  %v3_2dbe5 = phi i32 [ %v2_2dbe5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2dbc4 ]
  ret i32 %v3_2dbe5
}

define i32 @function_2dbec(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbec:
  %v0_2dbed = load i32, i32* @eax, align 8
  ret i32 %v0_2dbed
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEE10deallocateEPSK_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dbee:
  ret i32 %arg2
}

define i32 @function_2dc1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dc1e:
  %v0_2dc1f = load i32, i32* @eax, align 8
  %v3_2dc1f = xor i32 %v0_2dc1f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2dc1f = icmp eq i32 %v3_2dc1f, 0
  store i32 %v3_2dc1f, i32* @eax, align 8
  br i1 %v4_2dc1f, label %bb, label %dec_label_pc_2dc28

bb:                                               ; preds = %dec_label_pc_2dc1e
  %v1_2dc26 = call i32 @function_2dc2d()
  br label %dec_label_pc_2dc28

dec_label_pc_2dc28:                               ; preds = %bb, %dec_label_pc_2dc1e
  %v2_2dc26 = phi i32 [ %v1_2dc26, %bb ], [ %v3_2dc1f, %dec_label_pc_2dc1e ]
  ret i32 %v2_2dc26
}

define i32 @function_2dc2d() local_unnamed_addr {
dec_label_pc_2dc2d:
  %v0_2dc2e = load i32, i32* @eax, align 8
  ret i32 %v0_2dc2e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dc30:
  %v1_2dc51 = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_2dc51
}

define i32 @function_2dc54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dc54:
  %v0_2dc54 = load i32, i32* @eax, align 8
  %v1_2dc57 = call i32 @unknown_52322(i32 %v0_2dc54)
  store i32 %v1_2dc57, i32* @ebx, align 8
  %v0_2dc5e = load i32, i32* @ebp, align 4
  %v1_2dc5e = add i32 %v0_2dc5e, -13
  %v1_2dc61 = add i32 %v0_2dc5e, -28
  %v2_2dc61 = inttoptr i32 %v1_2dc61 to i32*
  %v3_2dc61 = load i32, i32* %v2_2dc61, align 4
  store i32 %v3_2dc61, i32* @edx, align 8
  %v2_2dc6b = call i32 @unknown_5e64e(i32 %v1_2dc5e, i32 %v3_2dc61)
  %v0_2dc73 = load i32, i32* @ebx, align 8
  %v0_2dc77 = load i32, i32* @ebp, align 4
  %v1_2dc77 = add i32 %v0_2dc77, -13
  %v2_2dc7d = call i32 @unknown_5e6d4(i32 %v1_2dc77, i32 %v0_2dc73)
  %v0_2dc82 = load i32, i32* @ebp, align 4
  %v1_2dc82 = add i32 %v0_2dc82, -13
  %v1_2dc88 = call i32 @unknown_5e69e(i32 %v1_2dc82)
  %v0_2dc8d = load i32, i32* @ebp, align 4
  %v1_2dc8d = add i32 %v0_2dc8d, -32
  %v2_2dc8d = inttoptr i32 %v1_2dc8d to i32*
  %v3_2dc8d = load i32, i32* %v2_2dc8d, align 4
  %v1_2dc94 = add i32 %v0_2dc8d, -28
  %v2_2dc94 = inttoptr i32 %v1_2dc94 to i32*
  %v3_2dc94 = load i32, i32* %v2_2dc94, align 4
  %v2_2dc9a = call i32 @unknown_5e710(i32 %v3_2dc94, i32 %v3_2dc8d)
  %v0_2dc9f = load i32, i32* @ebp, align 4
  %v1_2dc9f = add i32 %v0_2dc9f, -12
  %v2_2dc9f = inttoptr i32 %v1_2dc9f to i32*
  %v3_2dc9f = load i32, i32* %v2_2dc9f, align 4
  %v3_2dca2 = xor i32 %v3_2dc9f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2dca2 = icmp eq i32 %v3_2dca2, 0
  store i32 %v3_2dca2, i32* @eax, align 8
  br i1 %v4_2dca2, label %bb, label %dec_label_pc_2dcab

bb:                                               ; preds = %dec_label_pc_2dc54
  %v1_2dca9 = call i32 @function_2dcc9()
  store i32 %v1_2dca9, i32* @eax, align 8
  br label %dec_label_pc_2dcab

dec_label_pc_2dcab:                               ; preds = %bb, %dec_label_pc_2dc54
  %v0_2dcab = call i32 @function_2dcc4()
  ret i32 %v0_2dcab
}

define i32 @function_2dcae() local_unnamed_addr {
dec_label_pc_2dcae:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dcae = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dcae
}

define i32 @function_2dcc4() local_unnamed_addr {
dec_label_pc_2dcc4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dcc9() local_unnamed_addr {
dec_label_pc_2dcc9:
  %v0_2dcc9 = load i32, i32* @ebp, align 4
  %v1_2dcc9 = add i32 %v0_2dcc9, -4
  %v2_2dcc9 = inttoptr i32 %v1_2dcc9 to i32*
  %v3_2dcc9 = load i32, i32* %v2_2dcc9, align 4
  store i32 %v3_2dcc9, i32* @ebx, align 8
  %v0_2dccd = load i32, i32* @eax, align 8
  ret i32 %v0_2dccd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE14_M_create_nodeERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dcce:
  %v1_2dcf2 = call i32 @unknown_5e7f8(i32 %arg1)
  %v1_2dcfd = add i32 %v1_2dcf2, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_2dcfd
}

define i32 @function_2dd04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dd04:
  ret i32 -1996488122
}

define i32 @function_2dd0a() local_unnamed_addr {
dec_label_pc_2dd0a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2dd0a = load i32, i32* @ebp, align 4
  %v1_2dd0a = add i32 %v0_2dd0a, -13
  %v1_2dd0d = add i32 %v0_2dd0a, -28
  %v2_2dd0d = inttoptr i32 %v1_2dd0d to i32*
  %v3_2dd0d = load i32, i32* %v2_2dd0d, align 4
  %v2_2dd17 = call i32 @unknown_5e6ec(i32 %v1_2dd0a, i32 %v3_2dd0d)
  %v0_2dd1f = load i32, i32* @ebp, align 4
  %v1_2dd1f = add i32 %v0_2dd1f, -32
  %v2_2dd1f = inttoptr i32 %v1_2dd1f to i32*
  %v3_2dd1f = load i32, i32* %v2_2dd1f, align 4
  %v0_2dd26 = load i32, i32* %ebx.global-to-local, align 8
  %v1_2dd2a = add i32 %v0_2dd1f, -13
  %v3_2dd30 = call i32 @unknown_5e88c(i32 %v1_2dd2a, i32 %v0_2dd26, i32 %v3_2dd1f)
  %v0_2dd35 = load i32, i32* @ebp, align 4
  %v1_2dd35 = add i32 %v0_2dd35, -13
  %v1_2dd3b = call i32 @unknown_5e73c(i32 %v1_2dd35)
  %v0_2dd40 = load i32, i32* @ebp, align 4
  %v1_2dd40 = add i32 %v0_2dd40, -20
  %v2_2dd40 = inttoptr i32 %v1_2dd40 to i32*
  %v3_2dd40 = load i32, i32* %v2_2dd40, align 4
  store i32 %v3_2dd40, i32* @eax, align 8
  %v1_2dd43 = add i32 %v0_2dd40, -12
  %v2_2dd43 = inttoptr i32 %v1_2dd43 to i32*
  %v3_2dd43 = load i32, i32* %v2_2dd43, align 4
  %v4_2dd46 = icmp eq i32 %v3_2dd43, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2dd46, label %bb, label %dec_label_pc_2dd4f

bb:                                               ; preds = %dec_label_pc_2dd0a
  %v1_2dd4d = call i32 @function_2dd97()
  store i32 %v1_2dd4d, i32* @eax, align 8
  br label %dec_label_pc_2dd4f

dec_label_pc_2dd4f:                               ; preds = %bb, %dec_label_pc_2dd0a
  %v0_2dd4f = call i32 @function_2dd92()
  ret i32 %v0_2dd4f
}

define i32 @function_2dd52() local_unnamed_addr {
dec_label_pc_2dd52:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dd52 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dd52
}

define i32 @function_2dd67() local_unnamed_addr {
dec_label_pc_2dd67:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2dd67 = load i32, i32* %ebx.global-to-local, align 8
  %v1_2dd67 = add i32 %v0_2dd67, 1149889605
  %v2_2dd67 = inttoptr i32 %v1_2dd67 to i32*
  %v3_2dd67 = load i32, i32* %v2_2dd67, align 4
  %v4_2dd67 = add i32 %v3_2dd67, -1
  store i32 %v4_2dd67, i32* %v2_2dd67, align 4
  %v0_2dd6d = load i32, i32* %eax.global-to-local, align 8
  %v11_2dd6d = and i32 %v0_2dd6d, -252
  store i32 %v11_2dd6d, i32* %eax.global-to-local, align 8
  %v0_2dd6f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2dd6f = add i32 %v0_2dd6f, -28
  %v2_2dd6f = inttoptr i32 %v1_2dd6f to i32*
  %v3_2dd6f = load i32, i32* %v2_2dd6f, align 4
  store i32 %v3_2dd6f, i32* %eax.global-to-local, align 8
  %v1_2dd75 = call i32 @unknown_5e7ae(i32 %v3_2dd6f)
  store i32 %v1_2dd75, i32* @eax, align 8
  %v0_2dd7a = call i32 @function_2dd8d()
  store i32 %v0_2dd7a, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dd7a
}

define i32 @function_2dd7d() local_unnamed_addr {
dec_label_pc_2dd7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dd7d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dd7d
}

define i32 @function_2dd84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dd84:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dd8d() local_unnamed_addr {
dec_label_pc_2dd8d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dd92() local_unnamed_addr {
dec_label_pc_2dd92:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dd97() local_unnamed_addr {
dec_label_pc_2dd97:
  %v0_2dd9b = load i32, i32* @eax, align 8
  ret i32 %v0_2dd9b
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dd9c:
  ret i32 0
}

define i32 @function_2ddb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ddb4:
  %v0_2ddb4 = load i32, i32* @ebp, align 4
  %v1_2ddb4 = add i32 %v0_2ddb4, 1
  store i32 %v1_2ddb4, i32* @ebp, align 4
  %v14_2ddb7 = load i32, i32* @eax, align 8
  %v15_2ddb7 = inttoptr i32 %v14_2ddb7 to i8*
  store i8 0, i8* %v15_2ddb7, align 1
  %v0_2ddbc = load i32, i32* @edx, align 8
  %v4_2ddbc = icmp eq i32 %v0_2ddbc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2ddbc, label %bb, label %dec_label_pc_2ddb4.dec_label_pc_2ddc5_crit_edge

dec_label_pc_2ddb4.dec_label_pc_2ddc5_crit_edge:  ; preds = %dec_label_pc_2ddb4
  %v3_2ddc3.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2ddc5

bb:                                               ; preds = %dec_label_pc_2ddb4
  %v1_2ddc3 = call i32 @function_2ddca()
  br label %dec_label_pc_2ddc5

dec_label_pc_2ddc5:                               ; preds = %dec_label_pc_2ddb4.dec_label_pc_2ddc5_crit_edge, %bb
  %v3_2ddc3 = phi i32 [ %v3_2ddc3.pre, %dec_label_pc_2ddb4.dec_label_pc_2ddc5_crit_edge ], [ %v1_2ddc3, %bb ]
  ret i32 %v3_2ddc3

; uselistorder directives
  uselistorder label %dec_label_pc_2ddc5, { 1, 0 }
}

define i32 @function_2ddca() local_unnamed_addr {
dec_label_pc_2ddca:
  %v0_2ddcb = load i32, i32* @eax, align 8
  ret i32 %v0_2ddcb
}

define i32 @_ZN5boost6detail8function22functor_manager_commonIPFvRKSsEE10manage_ptrERKNS1_15function_bufferERS8_NS1_30functor_manager_operation_typeE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ddcc:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v10_2ddf0 = icmp eq i32 %arg3, 0
  %v1_2ddf4 = icmp eq i1 %v10_2ddf0, false
  br i1 %v1_2ddf4, label %dec_label_pc_2de05, label %dec_label_pc_2ddf6

dec_label_pc_2ddf6:                               ; preds = %dec_label_pc_2ddcc
  ret i32 %tmp103

dec_label_pc_2de05:                               ; preds = %dec_label_pc_2ddcc
  %v13_2de05 = icmp eq i32 %arg3, 1
  %v1_2de09 = icmp eq i1 %v13_2de05, false
  br i1 %v1_2de09, label %bb, label %dec_label_pc_2de0b

bb:                                               ; preds = %dec_label_pc_2de05
  %v5_2de09 = call i32 @function_2de20(i32 %arg3, i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_2de0b

dec_label_pc_2de0b:                               ; preds = %bb, %dec_label_pc_2de05
  ret i32 %tmp103

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_2de10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2de10:
  %v0_2de10 = load i32, i32* @ebp, align 4
  %v1_2de10 = add i32 %v0_2de10, -32
  %v2_2de10 = inttoptr i32 %v1_2de10 to i32*
  %v3_2de10 = load i32, i32* %v2_2de10, align 4
  %v0_2de13 = load i32, i32* @edx, align 8
  %v2_2de13 = inttoptr i32 %v3_2de10 to i32*
  store i32 %v0_2de13, i32* %v2_2de13, align 4
  %v0_2de15 = load i32, i32* @ebp, align 4
  %v1_2de15 = add i32 %v0_2de15, -28
  %v2_2de15 = inttoptr i32 %v1_2de15 to i32*
  %v3_2de15 = load i32, i32* %v2_2de15, align 4
  %v1_2de18 = inttoptr i32 %v3_2de15 to i32*
  store i32 0, i32* %v1_2de18, align 4
  %v0_2de1e = call i32 @function_2de99()
  ret i32 %v0_2de1e
}

define i32 @function_2de20(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2de20:
  %v0_2de20 = load i32, i32* @ebp, align 4
  %v1_2de20 = add i32 %v0_2de20, -36
  %v2_2de20 = inttoptr i32 %v1_2de20 to i32*
  %v3_2de20 = load i32, i32* %v2_2de20, align 4
  %v13_2de20 = icmp eq i32 %v3_2de20, 2
  %v1_2de24 = icmp eq i1 %v13_2de20, false
  br i1 %v1_2de24, label %dec_label_pc_2de31, label %dec_label_pc_2de26

dec_label_pc_2de26:                               ; preds = %dec_label_pc_2de20
  %v1_2de26 = add i32 %v0_2de20, -32
  %v2_2de26 = inttoptr i32 %v1_2de26 to i32*
  %v3_2de26 = load i32, i32* %v2_2de26, align 4
  %v1_2de29 = inttoptr i32 %v3_2de26 to i32*
  store i32 0, i32* %v1_2de29, align 4
  %v0_2de2f = call i32 @function_2de99()
  ret i32 %v0_2de2f

dec_label_pc_2de31:                               ; preds = %dec_label_pc_2de20
  %v13_2de31 = icmp eq i32 %v3_2de20, 3
  %v1_2de35 = icmp eq i1 %v13_2de31, false
  br i1 %v1_2de35, label %bb, label %dec_label_pc_2de37

bb:                                               ; preds = %dec_label_pc_2de31
  %v2_2de35 = call i32 @function_2de82()
  %v0_2de37.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2de37

dec_label_pc_2de37:                               ; preds = %bb, %dec_label_pc_2de31
  %v1_2de3c = phi i32 [ %v0_2de37.pre, %bb ], [ %v0_2de20, %dec_label_pc_2de31 ]
  %v1_2de37 = add i32 %v1_2de3c, -32
  %v2_2de37 = inttoptr i32 %v1_2de37 to i32*
  %v3_2de37 = load i32, i32* %v2_2de37, align 4
  %v1_2de3a = inttoptr i32 %v3_2de37 to i32*
  %v2_2de3a = load i32, i32* %v1_2de3a, align 4
  store i32 %v2_2de3a, i32* @eax, align 8
  %v2_2de3c = add i32 %v1_2de3c, -16
  %v3_2de3c = inttoptr i32 %v2_2de3c to i32*
  store i32 %v2_2de3a, i32* %v3_2de3c, align 4
  %v1_2de46 = call i32 @function_2fba4(i32 ptrtoint (i32* @global_var_3425c.2042 to i32))
  %v0_2de4d = load i32, i32* @ebp, align 4
  %v1_2de4d = add i32 %v0_2de4d, -16
  %v2_2de4d = inttoptr i32 %v1_2de4d to i32*
  %v3_2de4d = load i32, i32* %v2_2de4d, align 4
  ret i32 %v3_2de4d
}

define i32 @function_2de56(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2de56:
  %v2_2de56 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2de56 = load i32, i32* @eax, align 8
  %v4_2de56 = trunc i32 %v3_2de56 to i8
  %v5_2de56 = add i8 %v4_2de56, %v2_2de56
  %v10_2de56 = icmp ult i8 %v5_2de56, %v2_2de56
  store i1 %v10_2de56, i1* @cf, align 1
  %v21_2de56 = inttoptr i32 %v3_2de56 to i8*
  store i8 %v5_2de56, i8* %v21_2de56, align 1
  %v3_2de5c = load i32, i32* @eax, align 8
  ret i32 %v3_2de5c

; uselistorder directives
  uselistorder i8 %v2_2de56, { 1, 0 }
}

define i32 @function_2de6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de6a:
  %v0_2de6a = load i32, i32* @edx, align 8
  %v1_2de6a = load i32, i32* @ecx, align 4
  %v3_2de6a = add i32 %v0_2de6a, -117
  %v4_2de6a = add i32 %v3_2de6a, %v1_2de6a
  %v5_2de6a = inttoptr i32 %v4_2de6a to i8*
  %v6_2de6a = load i8, i8* %v5_2de6a, align 1
  %v8_2de6a = shl i8 %v6_2de6a, ptrtoint (i8* @global_var_15.2040 to i8)
  store i8 %v8_2de6a, i8* %v5_2de6a, align 1
  %v0_2de71 = load i32, i32* @ebp, align 4
  %v1_2de71 = add i32 %v0_2de71, 1
  store i32 %v1_2de71, i32* @ebp, align 4
  %v2_2de7c = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2de7c = load i32, i32* @eax, align 8
  %v4_2de7c = trunc i32 %v3_2de7c to i8
  %v5_2de7c = add i8 %v4_2de7c, %v2_2de7c
  %v21_2de7c = inttoptr i32 %v3_2de7c to i8*
  store i8 %v5_2de7c, i8* %v21_2de7c, align 1
  %v2_2de7e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2de7e = load i32, i32* @eax, align 8
  %v4_2de7e = trunc i32 %v3_2de7e to i8
  %v5_2de7e = add i8 %v4_2de7e, %v2_2de7e
  %v21_2de7e = inttoptr i32 %v3_2de7e to i8*
  store i8 %v5_2de7e, i8* %v21_2de7e, align 1
  %v0_2de80 = call i32 @function_2de99()
  ret i32 %v0_2de80

; uselistorder directives
  uselistorder i32 ()* @function_2de99, { 1, 2, 0 }
}

define i32 @function_2de82() local_unnamed_addr {
dec_label_pc_2de82:
  %eax.global-to-local = alloca i32, align 4
  %v0_2de82 = load i32, i32* @ebp, align 4
  %v1_2de82 = add i32 %v0_2de82, -32
  %v2_2de82 = inttoptr i32 %v1_2de82 to i32*
  %v3_2de82 = load i32, i32* %v2_2de82, align 4
  store i32 %v3_2de82, i32* %eax.global-to-local, align 8
  %v1_2de85 = inttoptr i32 %v3_2de82 to i32*
  store i32 ptrtoint (i32* @global_var_3425c.2042 to i32), i32* %v1_2de85, align 4
  %v0_2de8b = load i32, i32* @ebp, align 4
  %v1_2de8b = add i32 %v0_2de8b, -32
  %v2_2de8b = inttoptr i32 %v1_2de8b to i32*
  %v3_2de8b = load i32, i32* %v2_2de8b, align 4
  store i32 %v3_2de8b, i32* %eax.global-to-local, align 8
  %v1_2de8e = add i32 %v3_2de8b, 4
  %v2_2de8e = inttoptr i32 %v1_2de8e to i8*
  store i8 0, i8* %v2_2de8e, align 1
  %v0_2de92 = load i32, i32* @ebp, align 4
  %v1_2de92 = add i32 %v0_2de92, -32
  %v2_2de92 = inttoptr i32 %v1_2de92 to i32*
  %v3_2de92 = load i32, i32* %v2_2de92, align 4
  store i32 %v3_2de92, i32* %eax.global-to-local, align 8
  %v1_2de95 = add i32 %v3_2de92, 5
  %v2_2de95 = inttoptr i32 %v1_2de95 to i8*
  store i8 0, i8* %v2_2de95, align 1
  %v3_2de95 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_2de95

; uselistorder directives
  uselistorder i32 5, { 2, 7, 3, 4, 9, 8, 0, 5, 6, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_3425c.2042 to i32), { 1, 0, 2 }
}

define i32 @function_2de99() local_unnamed_addr {
dec_label_pc_2de99:
  %v0_2de99 = load i32, i32* @ebp, align 4
  %v1_2de99 = add i32 %v0_2de99, -12
  %v2_2de99 = inttoptr i32 %v1_2de99 to i32*
  %v3_2de99 = load i32, i32* %v2_2de99, align 4
  %v3_2de9c = xor i32 %v3_2de99, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2de9c = icmp eq i32 %v3_2de9c, 0
  store i32 %v3_2de9c, i32* @eax, align 8
  br i1 %v4_2de9c, label %bb, label %dec_label_pc_2dea5

bb:                                               ; preds = %dec_label_pc_2de99
  %v1_2dea3 = call i32 @function_2deaa()
  br label %dec_label_pc_2dea5

dec_label_pc_2dea5:                               ; preds = %bb, %dec_label_pc_2de99
  %v2_2dea3 = phi i32 [ %v1_2dea3, %bb ], [ %v3_2de9c, %dec_label_pc_2de99 ]
  ret i32 %v2_2dea3
}

define i32 @function_2deaa() local_unnamed_addr {
dec_label_pc_2deaa:
  %v0_2deaf = load i32, i32* @eax, align 8
  ret i32 %v0_2deaf
}

define i32 @_ZN5boost6detail13addr_impl_refIFvRKSsEEC1ERS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2deb0:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2decc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2decc:
  %v0_2ded3 = load i32, i32* @edx, align 8
  %v1_2ded3 = load i32, i32* @eax, align 8
  %v2_2ded3 = inttoptr i32 %v1_2ded3 to i32*
  store i32 %v0_2ded3, i32* %v2_2ded3, align 4
  %v0_2ded5 = load i32, i32* @ebp, align 4
  %v1_2ded5 = add i32 %v0_2ded5, -12
  %v2_2ded5 = inttoptr i32 %v1_2ded5 to i32*
  %v3_2ded5 = load i32, i32* %v2_2ded5, align 4
  %v3_2ded8 = xor i32 %v3_2ded5, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ded8 = icmp eq i32 %v3_2ded8, 0
  store i32 %v3_2ded8, i32* @eax, align 8
  br i1 %v4_2ded8, label %bb, label %dec_label_pc_2dee1

bb:                                               ; preds = %dec_label_pc_2decc
  %v1_2dedf = call i32 @function_2dee6()
  br label %dec_label_pc_2dee1

dec_label_pc_2dee1:                               ; preds = %bb, %dec_label_pc_2decc
  %v2_2dedf = phi i32 [ %v1_2dedf, %bb ], [ %v3_2ded8, %dec_label_pc_2decc ]
  ret i32 %v2_2dedf
}

define i32 @function_2dee6() local_unnamed_addr {
dec_label_pc_2dee6:
  %v0_2dee7 = load i32, i32* @eax, align 8
  ret i32 %v0_2dee7
}

define i32 @_ZNK5boost6detail13addr_impl_refIFvRKSsEEcvRS4_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2dee8:
  %v2_2df02 = load i32, i32* %arg1, align 4
  store i32 %v2_2df02, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2df10

bb:                                               ; preds = %dec_label_pc_2dee8
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2df0e = call i32 @function_2df15(i32 %tmp100)
  br label %dec_label_pc_2df10

dec_label_pc_2df10:                               ; preds = %bb, %dec_label_pc_2dee8
  %v3_2df0e = phi i32 [ %v2_2df0e, %bb ], [ %v2_2df02, %dec_label_pc_2dee8 ]
  ret i32 %v3_2df0e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2df15(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df15:
  %v0_2df16 = load i32, i32* @eax, align 8
  ret i32 %v0_2df16
}

define i32 @_ZN5boost6detail14addressof_implIFvRKSsEE1fEPS4_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df17:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2df43

bb:                                               ; preds = %dec_label_pc_2df17
  %v3_2df41 = call i32 @function_2df48(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2df43

dec_label_pc_2df43:                               ; preds = %bb, %dec_label_pc_2df17
  %v4_2df41 = phi i32 [ %v3_2df41, %bb ], [ %arg1, %dec_label_pc_2df17 ]
  ret i32 %v4_2df41
}

define i32 @function_2df48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df48:
  %v0_2df49 = load i32, i32* @eax, align 8
  ret i32 %v0_2df49
}

define i32 @_ZNK5boost8signals26detail23tracked_objects_visitor28m_visit_not_function_pointerIPFvRKSsEEEvRKT_RKN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2df4a:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2df74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df74:
  %v2_2df74 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2df74 = load i32, i32* @eax, align 8
  %v4_2df74 = trunc i32 %v3_2df74 to i8
  %v5_2df74 = add i8 %v4_2df74, %v2_2df74
  %v21_2df74 = inttoptr i32 %v3_2df74 to i8*
  store i8 %v5_2df74, i8* %v21_2df74, align 1
  %v0_2df76 = load i32, i32* @ebp, align 4
  %v1_2df76 = load i32, i32* @eax, align 8
  %v3_2df76 = add i32 %v0_2df76, -24
  %v4_2df76 = add i32 %v3_2df76, %v1_2df76
  %v5_2df76 = inttoptr i32 %v4_2df76 to i8*
  %v6_2df76 = load i8, i8* %v5_2df76, align 1
  %v7_2df76 = load i32, i32* @edx, align 8
  %v8_2df76 = udiv i32 %v7_2df76, 256
  %v9_2df76 = trunc i32 %v8_2df76 to i8
  %v10_2df76 = add i8 %v9_2df76, %v6_2df76
  store i8 %v10_2df76, i8* %v5_2df76, align 1
  %v31_2df76 = load i32, i32* @eax, align 8
  ret i32 %v31_2df76
}

define i32 @function_2df78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df78:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2df7d() local_unnamed_addr {
dec_label_pc_2df7d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2df7d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2df7d = add i32 %v0_2df7d, -1
  store i32 %v1_2df7d, i32* %ecx.global-to-local, align 4
  %v0_2df7f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2df7f
}

define i32 @_ZNKSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df80:
  ret i32 %arg1
}

define i32 @function_2dfa6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfa6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2dfab() local_unnamed_addr {
dec_label_pc_2dfab:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dfac = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2dfac
}

define i32 @_ZNSaIN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEEEC1ISt10_List_nodeISI_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dfae:
  %v1_2dfd1 = call i32 @unknown_5ebee(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2dfe2

bb:                                               ; preds = %dec_label_pc_2dfae
  %v1_2dfe0 = call i32 @function_2dfe7()
  br label %dec_label_pc_2dfe2

dec_label_pc_2dfe2:                               ; preds = %bb, %dec_label_pc_2dfae
  %v2_2dfe0 = phi i32 [ %v1_2dfe0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2dfae ]
  ret i32 %v2_2dfe0
}

define i32 @function_2dfe7() local_unnamed_addr {
dec_label_pc_2dfe7:
  %v0_2dfe8 = load i32, i32* @eax, align 8
  ret i32 %v0_2dfe8
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dfea:
  %stack_var_-17 = alloca i32, align 4
  %v2_2e00e = ptrtoint i32* %stack_var_-17 to i32
  %v2_2e014 = call i32 @unknown_5ec54(i32 %v2_2e00e, i32 %arg2)
  %v2_2e026 = call i32 @unknown_5ec90(i32 %arg1, i32 %v2_2e00e)
  %v1_2e031 = call i32 @unknown_5c14a(i32 %v2_2e00e)
  %v1_2e03c = call i32 @unknown_5ece6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e04d

bb:                                               ; preds = %dec_label_pc_2dfea
  %v1_2e04b = call i32 @function_2e052()
  br label %dec_label_pc_2e04d

dec_label_pc_2e04d:                               ; preds = %bb, %dec_label_pc_2dfea
  %v2_2e04b = phi i32 [ %v1_2e04b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2dfea ]
  ret i32 %v2_2e04b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e052() local_unnamed_addr {
dec_label_pc_2e052:
  %v0_2e053 = load i32, i32* @eax, align 8
  ret i32 %v0_2e053
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2e054:
  %v2_2e074 = load i32, i32* %arg2, align 4
  ret i32 %v2_2e074
}

define i32 @function_2e07a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e07a:
  %v0_2e07a = load i32, i32* @ebp, align 4
  %v1_2e07a = add i32 %v0_2e07a, -28
  %v2_2e07a = inttoptr i32 %v1_2e07a to i32*
  %v3_2e07a = load i32, i32* %v2_2e07a, align 4
  %v1_2e080 = call i32 @unknown_5ed8c(i32 %v3_2e07a)
  %v0_2e085 = load i32, i32* @ebp, align 4
  %v1_2e085 = add i32 %v0_2e085, -28
  %v2_2e085 = inttoptr i32 %v1_2e085 to i32*
  %v3_2e085 = load i32, i32* %v2_2e085, align 4
  store i32 %v3_2e085, i32* @eax, align 8
  %v1_2e088 = add i32 %v0_2e085, -12
  %v2_2e088 = inttoptr i32 %v1_2e088 to i32*
  %v3_2e088 = load i32, i32* %v2_2e088, align 4
  %v4_2e08b = icmp eq i32 %v3_2e088, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2e08b, label %bb, label %dec_label_pc_2e094

bb:                                               ; preds = %dec_label_pc_2e07a
  %v1_2e092 = call i32 @function_2e099()
  br label %dec_label_pc_2e094

dec_label_pc_2e094:                               ; preds = %bb, %dec_label_pc_2e07a
  %v2_2e092 = phi i32 [ %v1_2e092, %bb ], [ %v3_2e085, %dec_label_pc_2e07a ]
  ret i32 %v2_2e092
}

define i32 @function_2e099() local_unnamed_addr {
dec_label_pc_2e099:
  %v0_2e09a = load i32, i32* @eax, align 8
  ret i32 %v0_2e09a
}

define i32 @_ZNKSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e09e:
  %v2_2e0c8 = call i32 @unknown_5edd6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e0dc

bb:                                               ; preds = %dec_label_pc_2e09e
  %v1_2e0da = call i32 @function_2e0e1()
  br label %dec_label_pc_2e0dc

dec_label_pc_2e0dc:                               ; preds = %bb, %dec_label_pc_2e09e
  %v2_2e0da = phi i32 [ %v1_2e0da, %bb ], [ %arg1, %dec_label_pc_2e09e ]
  ret i32 %v2_2e0da

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e0e1() local_unnamed_addr {
dec_label_pc_2e0e1:
  %v0_2e0e2 = load i32, i32* @eax, align 8
  ret i32 %v0_2e0e2
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE22_M_initialize_dispatchISt20_List_const_iteratorISJ_EEEvT_SP_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_2e0e6:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_2e13a = ptrtoint i32* %stack_var_-40 to i32
  %v2_2e13e = ptrtoint i32* %stack_var_-36 to i32
  %v2_2e1442 = call i32 @unknown_58390(i32 %v2_2e13e, i32 %v4_2e13a)
  %v4_2e1493 = trunc i32 %v2_2e1442 to i8
  %v5_2e1494 = icmp eq i8 %v4_2e1493, 0
  %v1_2e14b6 = icmp eq i1 %v5_2e1494, false
  br i1 %v1_2e14b6, label %dec_label_pc_2e112, label %dec_label_pc_2e14d

dec_label_pc_2e112:                               ; preds = %dec_label_pc_2e0e6, %dec_label_pc_2e112
  %v1_2e118 = call i32 @unknown_5eeb4(i32 %v2_2e13e)
  %v2_2e127 = call i32 @unknown_5ee56(i32 %arg1, i32 %v1_2e118)
  %v1_2e132 = call i32 @unknown_583d0(i32 %v2_2e13e)
  %v2_2e144 = call i32 @unknown_58390(i32 %v2_2e13e, i32 %v4_2e13a)
  %v4_2e149 = trunc i32 %v2_2e144 to i8
  %v5_2e149 = icmp eq i8 %v4_2e149, 0
  %v1_2e14b = icmp eq i1 %v5_2e149, false
  br i1 %v1_2e14b, label %dec_label_pc_2e112, label %dec_label_pc_2e14d

dec_label_pc_2e14d:                               ; preds = %dec_label_pc_2e112, %dec_label_pc_2e0e6
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e159

bb:                                               ; preds = %dec_label_pc_2e14d
  %v1_2e157 = call i32 @function_2e15e()
  br label %dec_label_pc_2e159

dec_label_pc_2e159:                               ; preds = %bb, %dec_label_pc_2e14d
  %v2_2e157 = phi i32 [ %v1_2e157, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2e14d ]
  ret i32 %v2_2e157

; uselistorder directives
  uselistorder i32 %v2_2e13e, { 3, 1, 2, 0 }
  uselistorder i32 %v4_2e13a, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_58390, { 1, 0 }
  uselistorder label %dec_label_pc_2e112, { 1, 0 }
}

define i32 @function_2e15e() local_unnamed_addr {
dec_label_pc_2e15e:
  %v0_2e15f = load i32, i32* @eax, align 8
  ret i32 %v0_2e15f
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEED1Ev() local_unnamed_addr {
dec_label_pc_2e160:
  %eax.global-to-local = alloca i32, align 4
  %v5_2e160 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2e160
}

define i32 @function_2e162(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e162:
  %v1_2e172 = load i32, i32* @ebp, align 4
  %v2_2e172 = add i32 %v1_2e172, -12
  %v3_2e172 = inttoptr i32 %v2_2e172 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e172, align 4
  %v0_2e177 = load i32, i32* @ebp, align 4
  %v1_2e177 = add i32 %v0_2e177, -28
  %v2_2e177 = inttoptr i32 %v1_2e177 to i32*
  %v3_2e177 = load i32, i32* %v2_2e177, align 4
  %v1_2e17d = call i32 @unknown_5ef60(i32 %v3_2e177)
  %v0_2e182 = load i32, i32* @ebp, align 4
  %v1_2e182 = add i32 %v0_2e182, -12
  %v2_2e182 = inttoptr i32 %v1_2e182 to i32*
  %v3_2e182 = load i32, i32* %v2_2e182, align 4
  %v3_2e185 = xor i32 %v3_2e182, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e185 = icmp eq i32 %v3_2e185, 0
  store i32 %v3_2e185, i32* @eax, align 8
  br i1 %v4_2e185, label %bb, label %dec_label_pc_2e18e

bb:                                               ; preds = %dec_label_pc_2e162
  %v1_2e18c = call i32 @function_2e193()
  br label %dec_label_pc_2e18e

dec_label_pc_2e18e:                               ; preds = %bb, %dec_label_pc_2e162
  %v2_2e18c = phi i32 [ %v1_2e18c, %bb ], [ %v3_2e185, %dec_label_pc_2e162 ]
  ret i32 %v2_2e18c
}

define i32 @function_2e193() local_unnamed_addr {
dec_label_pc_2e193:
  %v0_2e194 = load i32, i32* @eax, align 8
  ret i32 %v0_2e194
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_clearEv() local_unnamed_addr {
dec_label_pc_2e196:
  %eax.global-to-local = alloca i32, align 4
  %v5_2e199 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_2e199
}

define i32 @function_2e19a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2e19a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e19d = load i32, i32* @ebp, align 4
  %v1_2e19d = add i32 %v0_2e19d, 8
  %v2_2e19d = inttoptr i32 %v1_2e19d to i32*
  %v3_2e19d = load i32, i32* %v2_2e19d, align 4
  %v2_2e1a0 = add i32 %v0_2e19d, -28
  %v3_2e1a0 = inttoptr i32 %v2_2e1a0 to i32*
  store i32 %v3_2e19d, i32* %v3_2e1a0, align 4
  %v1_2e1a9 = load i32, i32* @ebp, align 4
  %v2_2e1a9 = add i32 %v1_2e1a9, -12
  %v3_2e1a9 = inttoptr i32 %v2_2e1a9 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e1a9, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2e1ae = load i32, i32* @ebp, align 4
  %v1_2e1ae = add i32 %v0_2e1ae, -28
  %v2_2e1ae = inttoptr i32 %v1_2e1ae to i32*
  %v3_2e1ae = load i32, i32* %v2_2e1ae, align 4
  store i32 %v3_2e1ae, i32* %eax.global-to-local, align 8
  %v1_2e1b1 = inttoptr i32 %v3_2e1ae to i32*
  %v2_2e1b1 = load i32, i32* %v1_2e1b1, align 4
  store i32 %v2_2e1b1, i32* %eax.global-to-local, align 8
  %v2_2e1b3 = add i32 %v0_2e1ae, -24
  %v3_2e1b3 = inttoptr i32 %v2_2e1b3 to i32*
  store i32 %v2_2e1b1, i32* %v3_2e1b3, align 4
  br label %dec_label_pc_2e217

dec_label_pc_2e1b8:                               ; preds = %dec_label_pc_2e217
  %v3_2e1b8 = load i32, i32* %v3_2e21a, align 4
  store i32 %v3_2e1b8, i32* %eax.global-to-local, align 8
  %v2_2e1bb = add i32 %v0_2e217, -20
  %v3_2e1bb = inttoptr i32 %v2_2e1bb to i32*
  store i32 %v3_2e1b8, i32* %v3_2e1bb, align 4
  %v0_2e1be = load i32, i32* @ebp, align 4
  %v1_2e1be = add i32 %v0_2e1be, -24
  %v2_2e1be = inttoptr i32 %v1_2e1be to i32*
  %v3_2e1be = load i32, i32* %v2_2e1be, align 4
  store i32 %v3_2e1be, i32* %eax.global-to-local, align 8
  %v1_2e1c1 = inttoptr i32 %v3_2e1be to i32*
  %v2_2e1c1 = load i32, i32* %v1_2e1c1, align 4
  store i32 %v2_2e1c1, i32* %eax.global-to-local, align 8
  store i32 %v2_2e1c1, i32* %v2_2e1be, align 4
  %v0_2e1c6 = load i32, i32* @ebp, align 4
  %v1_2e1c6 = add i32 %v0_2e1c6, -20
  %v2_2e1c6 = inttoptr i32 %v1_2e1c6 to i32*
  %v3_2e1c6 = load i32, i32* %v2_2e1c6, align 4
  %v1_2e1c9 = add i32 %v3_2e1c6, 8
  store i32 %v1_2e1c9, i32* %eax.global-to-local, align 8
  %v1_2e1cc = load i32, i32* @esp, align 4
  %v2_2e1cc = inttoptr i32 %v1_2e1cc to i32*
  store i32 %v1_2e1c9, i32* %v2_2e1cc, align 4
  %v0_2e1cf = call i32 @unknown_58b87()
  store i32 %v0_2e1cf, i32* %ebx.global-to-local, align 8
  %v0_2e1d6 = load i32, i32* @ebp, align 4
  %v1_2e1d6 = add i32 %v0_2e1d6, -13
  store i32 %v1_2e1d6, i32* %eax.global-to-local, align 8
  %v1_2e1d9 = add i32 %v0_2e1d6, -28
  %v2_2e1d9 = inttoptr i32 %v1_2e1d9 to i32*
  %v3_2e1d9 = load i32, i32* %v2_2e1d9, align 4
  %v1_2e1dc = load i32, i32* @esp, align 4
  %v2_2e1dc = add i32 %v1_2e1dc, 4
  %v3_2e1dc = inttoptr i32 %v2_2e1dc to i32*
  store i32 %v3_2e1d9, i32* %v3_2e1dc, align 4
  %v0_2e1e0 = load i32, i32* %eax.global-to-local, align 8
  %v1_2e1e0 = load i32, i32* @esp, align 4
  %v2_2e1e0 = inttoptr i32 %v1_2e1e0 to i32*
  store i32 %v0_2e1e0, i32* %v2_2e1e0, align 4
  %v0_2e1e3 = call i32 @unknown_58b02()
  %v0_2e1e8 = load i32, i32* @esp, align 4
  %v0_2e1eb = load i32, i32* %ebx.global-to-local, align 8
  %v3_2e1eb = inttoptr i32 %v0_2e1e8 to i32*
  store i32 %v0_2e1eb, i32* %v3_2e1eb, align 4
  %v0_2e1ef = load i32, i32* @ebp, align 4
  %v1_2e1ef = add i32 %v0_2e1ef, -13
  store i32 %v1_2e1ef, i32* %eax.global-to-local, align 8
  %v1_2e1f2 = load i32, i32* @esp, align 4
  %v2_2e1f2 = inttoptr i32 %v1_2e1f2 to i32*
  store i32 %v1_2e1ef, i32* %v2_2e1f2, align 4
  %v0_2e1f5 = call i32 @unknown_5efc0()
  %v0_2e1fa = load i32, i32* @ebp, align 4
  %v1_2e1fa = add i32 %v0_2e1fa, -13
  store i32 %v1_2e1fa, i32* %eax.global-to-local, align 8
  %v1_2e1fd = load i32, i32* @esp, align 4
  %v2_2e1fd = inttoptr i32 %v1_2e1fd to i32*
  store i32 %v1_2e1fa, i32* %v2_2e1fd, align 4
  %v0_2e200 = call i32 @unknown_58b52()
  store i32 %v0_2e200, i32* %eax.global-to-local, align 8
  %v0_2e205 = load i32, i32* @ebp, align 4
  %v1_2e205 = add i32 %v0_2e205, -20
  %v2_2e205 = inttoptr i32 %v1_2e205 to i32*
  %v3_2e205 = load i32, i32* %v2_2e205, align 4
  store i32 %v3_2e205, i32* %eax.global-to-local, align 8
  %v1_2e208 = load i32, i32* @esp, align 4
  %v2_2e208 = add i32 %v1_2e208, 4
  %v3_2e208 = inttoptr i32 %v2_2e208 to i32*
  store i32 %v3_2e205, i32* %v3_2e208, align 4
  %v0_2e20c = load i32, i32* @ebp, align 4
  %v1_2e20c = add i32 %v0_2e20c, -28
  %v2_2e20c = inttoptr i32 %v1_2e20c to i32*
  %v3_2e20c = load i32, i32* %v2_2e20c, align 4
  store i32 %v3_2e20c, i32* %eax.global-to-local, align 8
  %v1_2e20f = load i32, i32* @esp, align 4
  %v2_2e20f = inttoptr i32 %v1_2e20f to i32*
  store i32 %v3_2e20c, i32* %v2_2e20f, align 4
  %v0_2e212 = call i32 @unknown_58c10()
  store i32 %v0_2e212, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2e217

dec_label_pc_2e217:                               ; preds = %dec_label_pc_2e1b8, %dec_label_pc_2e19a
  %v0_2e217 = load i32, i32* @ebp, align 4
  %v1_2e217 = add i32 %v0_2e217, -28
  %v2_2e217 = inttoptr i32 %v1_2e217 to i32*
  %v3_2e217 = load i32, i32* %v2_2e217, align 4
  store i32 %v3_2e217, i32* %eax.global-to-local, align 8
  %v2_2e21a = add i32 %v0_2e217, -24
  %v3_2e21a = inttoptr i32 %v2_2e21a to i32*
  %v4_2e21a = load i32, i32* %v3_2e21a, align 4
  %v15_2e21a = icmp eq i32 %v3_2e217, %v4_2e21a
  %v1_2e21d = icmp eq i1 %v15_2e21a, false
  %v2_2e21d = zext i1 %v1_2e21d to i32
  %v4_2e21d = and i32 %v3_2e217, -256
  %v5_2e21d = or i32 %v2_2e21d, %v4_2e21d
  store i32 %v5_2e21d, i32* %eax.global-to-local, align 8
  %v5_2e220 = icmp eq i1 %v1_2e21d, false
  %v1_2e222 = icmp eq i1 %v5_2e220, false
  br i1 %v1_2e222, label %dec_label_pc_2e1b8, label %dec_label_pc_2e224

dec_label_pc_2e224:                               ; preds = %dec_label_pc_2e217
  %v0_2e224 = call i32 @function_2e23d()
  store i32 %v0_2e224, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e224

; uselistorder directives
  uselistorder i32* %v3_2e21a, { 1, 0 }
  uselistorder i32 %v3_2e217, { 1, 0, 2 }
  uselistorder i32 %v0_2e217, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17 }
}

define i32 @function_2e227() local_unnamed_addr {
dec_label_pc_2e227:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e227 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e227
}

define i32 @function_2e23d() local_unnamed_addr {
dec_label_pc_2e23d:
  %v0_2e23d = load i32, i32* @ebp, align 4
  %v1_2e23d = add i32 %v0_2e23d, -12
  %v2_2e23d = inttoptr i32 %v1_2e23d to i32*
  %v3_2e23d = load i32, i32* %v2_2e23d, align 4
  %v3_2e240 = xor i32 %v3_2e23d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e240 = icmp eq i32 %v3_2e240, 0
  store i32 %v3_2e240, i32* @eax, align 8
  br i1 %v4_2e240, label %bb, label %dec_label_pc_2e249

bb:                                               ; preds = %dec_label_pc_2e23d
  %v1_2e247 = call i32 @function_2e24e()
  br label %dec_label_pc_2e249

dec_label_pc_2e249:                               ; preds = %bb, %dec_label_pc_2e23d
  %v2_2e247 = phi i32 [ %v1_2e247, %bb ], [ %v3_2e240, %dec_label_pc_2e23d ]
  ret i32 %v2_2e247
}

define i32 @function_2e24e() local_unnamed_addr {
dec_label_pc_2e24e:
  %v0_2e252 = load i32, i32* @eax, align 8
  ret i32 %v0_2e252
}

define i32 @function_2e253() local_unnamed_addr {
dec_label_pc_2e253:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EEC1ERKSV_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e254:
  %v1_2e279 = call i32 @unknown_5f0ba(i32 %arg2)
  %v3_2e28f = call i32 @unknown_5f0e8(i32 %arg1, i32 %arg2, i32 %v1_2e279)
  %v1_2e29a = call i32 @unknown_5f16e(i32 %arg2)
  %v1_2e29f = icmp eq i32 %v1_2e29a, 0
  %v1_2e2a1 = icmp eq i1 %v1_2e29f, false
  %v5_2e2a4 = icmp eq i1 %v1_2e2a1, false
  br i1 %v5_2e2a4, label %bb, label %dec_label_pc_2e2ac

bb:                                               ; preds = %dec_label_pc_2e254
  %v1_2e2a6 = call i32 @function_2e353()
  br label %dec_label_pc_2e2ac

dec_label_pc_2e2ac:                               ; preds = %bb, %dec_label_pc_2e254
  %v1_2e2b2 = call i32 @unknown_5f31e(i32 %arg1)
  %v1_2e2bf = call i32 @unknown_5375e(i32 %arg1)
  ret i32 %v1_2e2bf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_2e2c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2c7:
  %v0_2e2c7 = load i32, i32* @ebp, align 4
  %v1_2e2c7 = add i32 %v0_2e2c7, 1
  %v9_2e2c7 = icmp eq i32 %v1_2e2c7, 0
  store i32 %v1_2e2c7, i32* @ebp, align 4
  %v0_2e2c8 = load i32, i32* @ecx, align 4
  %v1_2e2c8 = add i32 %v0_2e2c8, -1
  store i32 %v1_2e2c8, i32* @ecx, align 4
  %v2_2e2c8 = icmp eq i32 %v1_2e2c8, 0
  %v4_2e2c8 = or i1 %v9_2e2c7, %v2_2e2c8
  br i1 %v4_2e2c8, label %dec_label_pc_2e2c7.dec_label_pc_2e2ca_crit_edge, label %bb

dec_label_pc_2e2c7.dec_label_pc_2e2ca_crit_edge:  ; preds = %dec_label_pc_2e2c7
  br label %dec_label_pc_2e2ca

bb:                                               ; preds = %dec_label_pc_2e2c7
  %v6_2e2c8 = call i32 @function_2e253()
  br label %dec_label_pc_2e2ca

dec_label_pc_2e2ca:                               ; preds = %dec_label_pc_2e2c7.dec_label_pc_2e2ca_crit_edge, %bb
  %v0_2e2cc = call i32 @unknown_5f2ee()
  %v0_2e2d1 = load i32, i32* @esi, align 4
  %v0_2e2d9 = load i32, i32* @ebp, align 4
  %v1_2e2d9 = add i32 %v0_2e2d9, -28
  %v2_2e2d9 = inttoptr i32 %v1_2e2d9 to i32*
  %v3_2e2d9 = load i32, i32* %v2_2e2d9, align 4
  %v3_2e2df = call i32 @unknown_5f19e(i32 %v3_2e2d9, i32 %v0_2e2cc, i32 %v0_2e2d1)
  %v1_2e2e4 = load i32, i32* @ebx, align 8
  %v2_2e2e4 = inttoptr i32 %v1_2e2e4 to i32*
  store i32 %v3_2e2df, i32* %v2_2e2e4, align 4
  %v0_2e2e6 = load i32, i32* @ebp, align 4
  %v1_2e2e6 = add i32 %v0_2e2e6, -28
  %v2_2e2e6 = inttoptr i32 %v1_2e2e6 to i32*
  %v3_2e2e6 = load i32, i32* %v2_2e2e6, align 4
  %v1_2e2ec = call i32 @unknown_5f384(i32 %v3_2e2e6)
  store i32 %v1_2e2ec, i32* @ebx, align 8
  ret i32 %v1_2e2ec

; uselistorder directives
  uselistorder i32 %v1_2e2c8, { 1, 0 }
  uselistorder i32* @esi, { 4, 7, 5, 6, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_2e2ca, { 1, 0 }
}

define i32 @function_2e2f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2f4:
  %v0_2e2f4 = load i32, i32* @ebp, align 4
  %v1_2e2f4 = add i32 %v0_2e2f4, 1
  store i32 %v1_2e2f4, i32* @ebp, align 4
  %v1_2e2f9 = call i32 @unknown_5f31e(i32 ptrtoint (i32* @2 to i32))
  %v1_2e2fe = inttoptr i32 %v1_2e2f9 to i32*
  %v2_2e2fe = load i32, i32* %v1_2e2fe, align 4
  %v1_2e303 = call i32 @unknown_5f34e(i32 %v2_2e2fe)
  %v1_2e308 = load i32, i32* @ebx, align 8
  %v2_2e308 = inttoptr i32 %v1_2e308 to i32*
  store i32 %v1_2e303, i32* %v2_2e308, align 4
  %v0_2e30a = load i32, i32* @ebp, align 4
  %v1_2e30a = add i32 %v0_2e30a, -28
  %v2_2e30a = inttoptr i32 %v1_2e30a to i32*
  %v3_2e30a = load i32, i32* %v2_2e30a, align 4
  %v1_2e310 = call i32 @unknown_5f3ea(i32 %v3_2e30a)
  store i32 %v1_2e310, i32* @ebx, align 8
  %v0_2e317 = load i32, i32* @ebp, align 4
  %v1_2e317 = add i32 %v0_2e317, -28
  %v2_2e317 = inttoptr i32 %v1_2e317 to i32*
  %v3_2e317 = load i32, i32* %v2_2e317, align 4
  %v1_2e31d = call i32 @unknown_5f31e(i32 %v3_2e317)
  %v1_2e322 = inttoptr i32 %v1_2e31d to i32*
  %v2_2e322 = load i32, i32* %v1_2e322, align 4
  %v1_2e327 = call i32 @unknown_5f3b4(i32 %v2_2e322)
  %v1_2e32c = load i32, i32* @ebx, align 8
  %v2_2e32c = inttoptr i32 %v1_2e32c to i32*
  store i32 %v1_2e327, i32* %v2_2e32c, align 4
  %v0_2e32e = load i32, i32* @ebp, align 4
  %v1_2e32e = add i32 %v0_2e32e, -32
  %v2_2e32e = inttoptr i32 %v1_2e32e to i32*
  %v3_2e32e = load i32, i32* %v2_2e32e, align 4
  %v1_2e331 = add i32 %v3_2e32e, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_2e331 = inttoptr i32 %v1_2e331 to i32*
  %v3_2e331 = load i32, i32* %v2_2e331, align 4
  %v1_2e334 = add i32 %v0_2e32e, -28
  %v2_2e334 = inttoptr i32 %v1_2e334 to i32*
  %v3_2e334 = load i32, i32* %v2_2e334, align 4
  %v2_2e337 = add i32 %v3_2e334, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_2e337 = inttoptr i32 %v2_2e337 to i32*
  store i32 %v3_2e331, i32* %v3_2e337, align 4
  %v0_2e33a = call i32 @function_2e353()
  ret i32 %v0_2e33a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5f31e, { 1, 0, 2 }
}

define i32 @function_2e33d() local_unnamed_addr {
dec_label_pc_2e33d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e33d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e33d
}

define i32 @function_2e353() local_unnamed_addr {
dec_label_pc_2e353:
  %v0_2e353 = load i32, i32* @ebp, align 4
  %v1_2e353 = add i32 %v0_2e353, -12
  %v2_2e353 = inttoptr i32 %v1_2e353 to i32*
  %v3_2e353 = load i32, i32* %v2_2e353, align 4
  %v3_2e356 = xor i32 %v3_2e353, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e356 = icmp eq i32 %v3_2e356, 0
  store i32 %v3_2e356, i32* @eax, align 8
  br i1 %v4_2e356, label %bb, label %dec_label_pc_2e35f

bb:                                               ; preds = %dec_label_pc_2e353
  %v1_2e35d = call i32 @function_2e364()
  br label %dec_label_pc_2e35f

dec_label_pc_2e35f:                               ; preds = %bb, %dec_label_pc_2e353
  %v2_2e35d = phi i32 [ %v1_2e35d, %bb ], [ %v3_2e356, %dec_label_pc_2e353 ]
  ret i32 %v2_2e35d
}

define i32 @function_2e364() local_unnamed_addr {
dec_label_pc_2e364:
  %v0_2e36a = load i32, i32* @eax, align 8
  ret i32 %v0_2e36a
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e36c:
  %v1_2e389 = call i32 @unknown_5f532(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e39a

bb:                                               ; preds = %dec_label_pc_2e36c
  %v1_2e398 = call i32 @function_2e39f()
  br label %dec_label_pc_2e39a

dec_label_pc_2e39a:                               ; preds = %bb, %dec_label_pc_2e36c
  %v2_2e398 = phi i32 [ %v1_2e398, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2e36c ]
  ret i32 %v2_2e398
}

define i32 @function_2e39f() local_unnamed_addr {
dec_label_pc_2e39f:
  %v0_2e3a0 = load i32, i32* @eax, align 8
  ret i32 %v0_2e3a0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E() local_unnamed_addr {
dec_label_pc_2e3a2:
  %eax.global-to-local = alloca i32, align 4
  %v2_2e3a3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2e3a3
}

define i32 @function_2e3a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e3a6:
  %eax.global-to-local = alloca i32, align 4
  %v4_2e3a7 = load i32, i32* @ecx, align 4
  %v0_2e3af = load i32, i32* @ebp, align 4
  %v0_2e3b0 = load i32, i32* @eax, align 8
  %v2_2e3b0 = or i32 %v0_2e3b0, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_2e3b0, i32* @eax, align 8
  %v1_2e3b2 = add i32 %v0_2e3af, 2
  %v9_2e3b2 = icmp eq i32 %v1_2e3b2, 0
  store i32 %v1_2e3b2, i32* @ebp, align 4
  %v2_2e3b3 = icmp eq i32 %v4_2e3a7, 1
  %v4_2e3b3 = or i1 %v2_2e3b3, %v9_2e3b2
  br i1 %v4_2e3b3, label %dec_label_pc_2e3b5, label %bb

bb:                                               ; preds = %dec_label_pc_2e3a6
  %v6_2e3b3 = call i32 @function_2e41a()
  store i32 %v6_2e3b3, i32* %eax.global-to-local, align 8
  %v1_2e3ba.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2e3b5

dec_label_pc_2e3b5:                               ; preds = %dec_label_pc_2e3a6, %bb
  %v1_2e3ba = phi i32 [ %v1_2e3b2, %dec_label_pc_2e3a6 ], [ %v1_2e3ba.pre, %bb ]
  %v2_2e3ba = add i32 %v1_2e3ba, -12
  %v3_2e3ba = inttoptr i32 %v2_2e3ba to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e3ba, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_2e4017 = load i32, i32* @ebp, align 4
  %v1_2e4018 = add i32 %v0_2e4017, -32
  %v2_2e4019 = inttoptr i32 %v1_2e4018 to i32*
  %v3_2e40110 = load i32, i32* %v2_2e4019, align 4
  %v10_2e40111 = icmp eq i32 %v3_2e40110, 0
  %v1_2e40512 = icmp eq i1 %v10_2e40111, false
  %v2_2e40513 = zext i1 %v1_2e40512 to i32
  store i32 %v2_2e40513, i32* %eax.global-to-local, align 8
  %v5_2e40814 = icmp eq i1 %v1_2e40512, false
  %v1_2e40a15 = icmp eq i1 %v5_2e40814, false
  br i1 %v1_2e40a15, label %dec_label_pc_2e3c1, label %dec_label_pc_2e40c

dec_label_pc_2e3c1:                               ; preds = %dec_label_pc_2e3b5, %dec_label_pc_2e3c1
  %v2_2e40116 = phi i32* [ %v2_2e401, %dec_label_pc_2e3c1 ], [ %v2_2e4019, %dec_label_pc_2e3b5 ]
  %v3_2e3c1 = load i32, i32* %v2_2e40116, align 4
  store i32 %v3_2e3c1, i32* %eax.global-to-local, align 8
  %v1_2e3c7 = call i32 @unknown_58c6a(i32 %v3_2e3c1)
  store i32 %v1_2e3c7, i32* %eax.global-to-local, align 8
  %v0_2e3d0 = load i32, i32* @ebp, align 4
  %v1_2e3d0 = add i32 %v0_2e3d0, -28
  %v2_2e3d0 = inttoptr i32 %v1_2e3d0 to i32*
  %v3_2e3d0 = load i32, i32* %v2_2e3d0, align 4
  store i32 %v3_2e3d0, i32* %eax.global-to-local, align 8
  %v2_2e3d6 = call i32 @unknown_5c744(i32 %v3_2e3d0, i32 %v1_2e3c7)
  store i32 %v2_2e3d6, i32* %eax.global-to-local, align 8
  %v0_2e3db = load i32, i32* @ebp, align 4
  %v1_2e3db = add i32 %v0_2e3db, -32
  %v2_2e3db = inttoptr i32 %v1_2e3db to i32*
  %v3_2e3db = load i32, i32* %v2_2e3db, align 4
  store i32 %v3_2e3db, i32* %eax.global-to-local, align 8
  %v1_2e3e1 = call i32 @unknown_58c3a(i32 %v3_2e3db)
  store i32 %v1_2e3e1, i32* %eax.global-to-local, align 8
  %v1_2e3e6 = load i32, i32* @ebp, align 4
  %v2_2e3e6 = add i32 %v1_2e3e6, -16
  %v3_2e3e6 = inttoptr i32 %v2_2e3e6 to i32*
  store i32 %v1_2e3e1, i32* %v3_2e3e6, align 4
  %v0_2e3e9 = load i32, i32* @ebp, align 4
  %v1_2e3e9 = add i32 %v0_2e3e9, -32
  %v2_2e3e9 = inttoptr i32 %v1_2e3e9 to i32*
  %v3_2e3e9 = load i32, i32* %v2_2e3e9, align 4
  store i32 %v3_2e3e9, i32* %eax.global-to-local, align 8
  %v1_2e3f0 = add i32 %v0_2e3e9, -28
  %v2_2e3f0 = inttoptr i32 %v1_2e3f0 to i32*
  %v3_2e3f0 = load i32, i32* %v2_2e3f0, align 4
  store i32 %v3_2e3f0, i32* %eax.global-to-local, align 8
  %v2_2e3f6 = call i32 @unknown_5cd4c(i32 %v3_2e3f0, i32 %v3_2e3e9)
  store i32 %v2_2e3f6, i32* %eax.global-to-local, align 8
  %v0_2e3fb = load i32, i32* @ebp, align 4
  %v1_2e3fb = add i32 %v0_2e3fb, -16
  %v2_2e3fb = inttoptr i32 %v1_2e3fb to i32*
  %v3_2e3fb = load i32, i32* %v2_2e3fb, align 4
  store i32 %v3_2e3fb, i32* %eax.global-to-local, align 8
  %v2_2e3fe = add i32 %v0_2e3fb, -32
  %v3_2e3fe = inttoptr i32 %v2_2e3fe to i32*
  store i32 %v3_2e3fb, i32* %v3_2e3fe, align 4
  %v3_2e405.pre = load i32, i32* %eax.global-to-local, align 8
  %v0_2e401 = load i32, i32* @ebp, align 4
  %v1_2e401 = add i32 %v0_2e401, -32
  %v2_2e401 = inttoptr i32 %v1_2e401 to i32*
  %v3_2e401 = load i32, i32* %v2_2e401, align 4
  %v10_2e401 = icmp eq i32 %v3_2e401, 0
  %v1_2e405 = icmp eq i1 %v10_2e401, false
  %v2_2e405 = zext i1 %v1_2e405 to i32
  %v4_2e405 = and i32 %v3_2e405.pre, -256
  %v5_2e405 = or i32 %v2_2e405, %v4_2e405
  store i32 %v5_2e405, i32* %eax.global-to-local, align 8
  %v5_2e408 = icmp eq i1 %v1_2e405, false
  %v1_2e40a = icmp eq i1 %v5_2e408, false
  br i1 %v1_2e40a, label %dec_label_pc_2e3c1, label %dec_label_pc_2e40c

dec_label_pc_2e40c:                               ; preds = %dec_label_pc_2e3c1, %dec_label_pc_2e3b5
  %v0_2e401.lcssa = phi i32 [ %v0_2e4017, %dec_label_pc_2e3b5 ], [ %v0_2e401, %dec_label_pc_2e3c1 ]
  %v1_2e40c = add i32 %v0_2e401.lcssa, -12
  %v2_2e40c = inttoptr i32 %v1_2e40c to i32*
  %v3_2e40c = load i32, i32* %v2_2e40c, align 4
  %v3_2e40f = xor i32 %v3_2e40c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e40f = icmp eq i32 %v3_2e40f, 0
  store i32 %v3_2e40f, i32* @eax, align 8
  br i1 %v4_2e40f, label %bb6, label %dec_label_pc_2e418

bb6:                                              ; preds = %dec_label_pc_2e40c
  %v1_2e416 = call i32 @function_2e41d()
  store i32 %v1_2e416, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_2e418

dec_label_pc_2e418:                               ; preds = %bb6, %dec_label_pc_2e40c
  %v2_2e416 = phi i32 [ %v1_2e416, %bb6 ], [ %v3_2e40f, %dec_label_pc_2e40c ]
  ret i32 %v2_2e416

; uselistorder directives
  uselistorder i32* %v2_2e401, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14, 1 }
  uselistorder label %dec_label_pc_2e3c1, { 1, 0 }
  uselistorder label %dec_label_pc_2e3b5, { 1, 0 }
}

define i32 @function_2e41a() local_unnamed_addr {
dec_label_pc_2e41a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e41d() local_unnamed_addr {
dec_label_pc_2e41d:
  %v0_2e41e = load i32, i32* @eax, align 8
  ret i32 %v0_2e41e
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e420:
  ret i32 %arg2
}

define i32 @function_2e42f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_2e42f:
  %v0_2e42f = load i32, i32* @eax, align 8
  %v1_2e42f = load i32, i32* @ebp, align 4
  %v2_2e42f = add i32 %v1_2e42f, -32
  %v3_2e42f = inttoptr i32 %v2_2e42f to i32*
  store i32 %v0_2e42f, i32* %v3_2e42f, align 4
  %v1_2e438 = load i32, i32* @ebp, align 4
  %v2_2e438 = add i32 %v1_2e438, -12
  %v3_2e438 = inttoptr i32 %v2_2e438 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e438, align 4
  %v0_2e43d = load i32, i32* @ebp, align 4
  %v1_2e43d = add i32 %v0_2e43d, -32
  %v2_2e43d = inttoptr i32 %v1_2e43d to i32*
  %v3_2e43d = load i32, i32* %v2_2e43d, align 4
  %v1_2e440 = add i32 %v3_2e43d, 12
  %v2_2e440 = inttoptr i32 %v1_2e440 to i32*
  %v3_2e440 = load i32, i32* %v2_2e440, align 4
  %v1_2e447 = add i32 %v0_2e43d, -28
  %v2_2e447 = inttoptr i32 %v1_2e447 to i32*
  %v3_2e447 = load i32, i32* %v2_2e447, align 4
  %v2_2e44d = call i32 @unknown_5f610(i32 %v3_2e447, i32 %v3_2e440)
  %v0_2e452 = load i32, i32* @ebp, align 4
  %v1_2e452 = add i32 %v0_2e452, -28
  %v2_2e452 = inttoptr i32 %v1_2e452 to i32*
  %v3_2e452 = load i32, i32* %v2_2e452, align 4
  store i32 %v3_2e452, i32* @eax, align 8
  %v1_2e455 = add i32 %v0_2e452, -12
  %v2_2e455 = inttoptr i32 %v1_2e455 to i32*
  %v3_2e455 = load i32, i32* %v2_2e455, align 4
  %v4_2e458 = icmp eq i32 %v3_2e455, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2e458, label %bb, label %dec_label_pc_2e461

bb:                                               ; preds = %dec_label_pc_2e42f
  %v1_2e45f = call i32 @function_2e466()
  br label %dec_label_pc_2e461

dec_label_pc_2e461:                               ; preds = %bb, %dec_label_pc_2e42f
  %v2_2e45f = phi i32 [ %v1_2e45f, %bb ], [ %v3_2e452, %dec_label_pc_2e42f ]
  ret i32 %v2_2e45f
}

define i32 @function_2e466() local_unnamed_addr {
dec_label_pc_2e466:
  %v0_2e467 = load i32, i32* @eax, align 8
  ret i32 %v0_2e467
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e46a:
  %v1_2e48a = add i32 %arg2, 4
  %v2_2e497 = call i32 @unknown_5f65a(i32 %arg1, i32 %v1_2e48a)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e4ab

bb:                                               ; preds = %dec_label_pc_2e46a
  %v1_2e4a9 = call i32 @function_2e4b0()
  br label %dec_label_pc_2e4ab

dec_label_pc_2e4ab:                               ; preds = %bb, %dec_label_pc_2e46a
  %v2_2e4a9 = phi i32 [ %v1_2e4a9, %bb ], [ %arg1, %dec_label_pc_2e46a ]
  ret i32 %v2_2e4a9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e4b0() local_unnamed_addr {
dec_label_pc_2e4b0:
  %v0_2e4b1 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4b1
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e4b4:
  store i32 0, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e4e0

bb:                                               ; preds = %dec_label_pc_2e4b4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_2e4de = call i32 @function_2e4e5(i32 %tmp102)
  br label %dec_label_pc_2e4e0

dec_label_pc_2e4e0:                               ; preds = %bb, %dec_label_pc_2e4b4
  %v3_2e4de = phi i32 [ %v2_2e4de, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2e4b4 ]
  ret i32 %v3_2e4de

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2e4e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4e5:
  %v0_2e4e6 = load i32, i32* @eax, align 8
  ret i32 %v0_2e4e6
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEC1ERKSt14_List_iteratorISJ_E() local_unnamed_addr {
dec_label_pc_2e4e8:
  %eax.global-to-local = alloca i32, align 4
  %v2_2e4e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_2e4e9
}

define i32 @function_2e4ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e4ec:
  %v0_2e4ed = load i32, i32* @ebx, align 8
  %v1_2e4ed = add i32 %v0_2e4ed, 1166608453
  %v2_2e4ed = inttoptr i32 %v1_2e4ed to i8*
  %v3_2e4ed = load i8, i8* %v2_2e4ed, align 1
  %v4_2e4ed = load i32, i32* @ecx, align 4
  %v5_2e4ed = trunc i32 %v4_2e4ed to i8
  %v6_2e4ed = sub i8 %v3_2e4ed, %v5_2e4ed
  store i8 %v6_2e4ed, i8* %v2_2e4ed, align 1
  %v0_2e4f5 = load i32, i32* @ebp, align 4
  %v1_2e4f8 = add i32 %v0_2e4f5, 2
  store i32 %v1_2e4f8, i32* @ebp, align 4
  %v2_2e500 = add i32 %v0_2e4f5, -10
  %v3_2e500 = inttoptr i32 %v2_2e500 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e500, align 4
  %v0_2e505 = load i32, i32* @ebp, align 4
  %v1_2e505 = add i32 %v0_2e505, -32
  %v2_2e505 = inttoptr i32 %v1_2e505 to i32*
  %v3_2e505 = load i32, i32* %v2_2e505, align 4
  %v1_2e508 = inttoptr i32 %v3_2e505 to i32*
  %v2_2e508 = load i32, i32* %v1_2e508, align 4
  %v1_2e50a = add i32 %v0_2e505, -28
  %v2_2e50a = inttoptr i32 %v1_2e50a to i32*
  %v3_2e50a = load i32, i32* %v2_2e50a, align 4
  %v2_2e50d = inttoptr i32 %v3_2e50a to i32*
  store i32 %v2_2e508, i32* %v2_2e50d, align 4
  %v0_2e50f = load i32, i32* @ebp, align 4
  %v1_2e50f = add i32 %v0_2e50f, -12
  %v2_2e50f = inttoptr i32 %v1_2e50f to i32*
  %v3_2e50f = load i32, i32* %v2_2e50f, align 4
  %v3_2e512 = xor i32 %v3_2e50f, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e512 = icmp eq i32 %v3_2e512, 0
  store i32 %v3_2e512, i32* @eax, align 8
  br i1 %v4_2e512, label %bb, label %dec_label_pc_2e51b

bb:                                               ; preds = %dec_label_pc_2e4ec
  %v1_2e519 = call i32 @function_2e520()
  br label %dec_label_pc_2e51b

dec_label_pc_2e51b:                               ; preds = %bb, %dec_label_pc_2e4ec
  %v3_2e519 = phi i32 [ %v1_2e519, %bb ], [ %v3_2e512, %dec_label_pc_2e4ec ]
  ret i32 %v3_2e519
}

define i32 @function_2e520() local_unnamed_addr {
dec_label_pc_2e520:
  %v0_2e521 = load i32, i32* @eax, align 8
  ret i32 %v0_2e521
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEC1EPSO_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e522:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3328c_type* @global_var_3328c.2065 to i32), i32* %arg1, align 4
  %v2_2e559 = add i32 %tmp101, 12
  %v3_2e559 = inttoptr i32 %v2_2e559 to i32*
  store i32 %arg2, i32* %v3_2e559, align 4
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_2e56c() local_unnamed_addr {
dec_label_pc_2e56c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e56c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e56c = add i32 %v0_2e56c, -1
  store i32 %v1_2e56c, i32* %ecx.global-to-local, align 4
  %v0_2e56e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e56e
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e570:
  %v1_2e58b = add i32 %arg1, 8
  %v1_2e591 = call i32 @unknown_5313c(i32 %v1_2e58b)
  %v1_2e59c = call i32 @unknown_53106(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e5ad

bb:                                               ; preds = %dec_label_pc_2e570
  %v1_2e5ab = call i32 @function_2e5cb()
  store i32 %v1_2e5ab, i32* @eax, align 8
  br label %dec_label_pc_2e5ad

dec_label_pc_2e5ad:                               ; preds = %bb, %dec_label_pc_2e570
  %v0_2e5ad = call i32 @function_2e5c6()
  ret i32 %v0_2e5ad

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2e5b0() local_unnamed_addr {
dec_label_pc_2e5b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e5b0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e5b0
}

define i32 @function_2e5c6() local_unnamed_addr {
dec_label_pc_2e5c6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e5cb() local_unnamed_addr {
dec_label_pc_2e5cb:
  %v0_2e5d0 = load i32, i32* @eax, align 8
  ret i32 %v0_2e5d0
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e5d1:
  %v1_2e5ec = icmp eq i32 %arg1, 0
  br i1 %v1_2e5ec, label %bb, label %dec_label_pc_2e5f0

bb:                                               ; preds = %dec_label_pc_2e5d1
  %v2_2e5ee = call i32 @function_2e600(i32 0)
  br label %dec_label_pc_2e5f0

dec_label_pc_2e5f0:                               ; preds = %bb, %dec_label_pc_2e5d1
  %v1_2e5f3 = call i32 @unknown_5cb41(i32 %arg1)
  ret i32 %v1_2e5f3
}

define i32 @function_2e600(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e600:
  %v0_2e600 = load i32, i32* @ebp, align 4
  %v1_2e600 = add i32 %v0_2e600, -12
  %v2_2e600 = inttoptr i32 %v1_2e600 to i32*
  %v3_2e600 = load i32, i32* %v2_2e600, align 4
  %v3_2e603 = xor i32 %v3_2e600, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e603 = icmp eq i32 %v3_2e603, 0
  store i32 %v3_2e603, i32* @eax, align 8
  br i1 %v4_2e603, label %bb, label %dec_label_pc_2e60c

bb:                                               ; preds = %dec_label_pc_2e600
  %v1_2e60a = call i32 @function_2e611()
  br label %dec_label_pc_2e60c

dec_label_pc_2e60c:                               ; preds = %bb, %dec_label_pc_2e600
  %v2_2e60a = phi i32 [ %v1_2e60a, %bb ], [ %v3_2e603, %dec_label_pc_2e600 ]
  ret i32 %v2_2e60a
}

define i32 @function_2e611() local_unnamed_addr {
dec_label_pc_2e611:
  %v0_2e616 = load i32, i32* @eax, align 8
  ret i32 %v0_2e616
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEC1EPSL_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e618:
  ret i32 %arg1
}

define i32 @function_2e626(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e626:
  %v0_2e628 = load i32, i32* @ebp, align 4
  %v1_2e628 = add i32 %v0_2e628, 1
  store i32 %v1_2e628, i32* @ebp, align 4
  %v0_2e629 = load i32, i32* @ecx, align 4
  %v1_2e629 = add i32 %v0_2e629, -1
  store i32 %v1_2e629, i32* @ecx, align 4
  %v2_2e630 = add i32 %v0_2e628, -11
  %v3_2e630 = inttoptr i32 %v2_2e630 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2e630, align 4
  %v0_2e635 = load i32, i32* @ebp, align 4
  %v1_2e635 = add i32 %v0_2e635, -28
  %v2_2e635 = inttoptr i32 %v1_2e635 to i32*
  %v3_2e635 = load i32, i32* %v2_2e635, align 4
  %v1_2e63b = call i32 @function_3050c(i32 %v3_2e635)
  %v0_2e640 = load i32, i32* @ebp, align 4
  %v1_2e640 = add i32 %v0_2e640, -28
  %v2_2e640 = inttoptr i32 %v1_2e640 to i32*
  %v3_2e640 = load i32, i32* %v2_2e640, align 4
  %v1_2e643 = inttoptr i32 %v3_2e640 to i32*
  store i32 ptrtoint (%vtable_331d4_type* @global_var_331d4.2066 to i32), i32* %v1_2e643, align 4
  %v0_2e649 = load i32, i32* @ebp, align 4
  %v1_2e649 = add i32 %v0_2e649, -28
  %v2_2e649 = inttoptr i32 %v1_2e649 to i32*
  %v3_2e649 = load i32, i32* %v2_2e649, align 4
  %v1_2e64c = add i32 %v0_2e649, -32
  %v2_2e64c = inttoptr i32 %v1_2e64c to i32*
  %v3_2e64c = load i32, i32* %v2_2e64c, align 4
  %v2_2e64f = add i32 %v3_2e649, 12
  %v3_2e64f = inttoptr i32 %v2_2e64f to i32*
  store i32 %v3_2e64c, i32* %v3_2e64f, align 4
  %v0_2e652 = load i32, i32* @ebp, align 4
  %v1_2e652 = add i32 %v0_2e652, -12
  %v2_2e652 = inttoptr i32 %v1_2e652 to i32*
  %v3_2e652 = load i32, i32* %v2_2e652, align 4
  %v3_2e655 = xor i32 %v3_2e652, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e655 = icmp eq i32 %v3_2e655, 0
  store i32 %v3_2e655, i32* @eax, align 8
  br i1 %v4_2e655, label %bb, label %dec_label_pc_2e65e

bb:                                               ; preds = %dec_label_pc_2e626
  %v1_2e65c = call i32 @function_2e663()
  br label %dec_label_pc_2e65e

dec_label_pc_2e65e:                               ; preds = %bb, %dec_label_pc_2e626
  %v3_2e65c = phi i32 [ %v1_2e65c, %bb ], [ %v3_2e655, %dec_label_pc_2e626 ]
  ret i32 %v3_2e65c
}

define i32 @function_2e663() local_unnamed_addr {
dec_label_pc_2e663:
  %v0_2e664 = load i32, i32* @eax, align 8
  ret i32 %v0_2e664
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e666:
  %v1_2e681 = add i32 %arg1, 8
  %v1_2e687 = call i32 @unknown_45486(i32 %v1_2e681)
  ret i32 %arg1
}

define i32 @function_2e6a6() local_unnamed_addr {
dec_label_pc_2e6a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e6a6 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e6a6
}

define i32 @function_2e6bc() local_unnamed_addr {
dec_label_pc_2e6bc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e6c1() local_unnamed_addr {
dec_label_pc_2e6c1:
  %v0_2e6c6 = load i32, i32* @eax, align 8
  ret i32 %v0_2e6c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e6c7:
  %v1_2e6e2 = icmp eq i32 %arg1, 0
  br i1 %v1_2e6e2, label %bb, label %dec_label_pc_2e6e6

bb:                                               ; preds = %dec_label_pc_2e6c7
  %v2_2e6e4 = call i32 @function_2e6f6(i32 0)
  br label %dec_label_pc_2e6e6

dec_label_pc_2e6e6:                               ; preds = %bb, %dec_label_pc_2e6c7
  %v1_2e6e9 = call i32 @unknown_5cd2d(i32 %arg1)
  ret i32 %v1_2e6e9
}

define i32 @function_2e6f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e6f6:
  %v0_2e6f6 = load i32, i32* @ebp, align 4
  %v1_2e6f6 = add i32 %v0_2e6f6, -12
  %v2_2e6f6 = inttoptr i32 %v1_2e6f6 to i32*
  %v3_2e6f6 = load i32, i32* %v2_2e6f6, align 4
  %v3_2e6f9 = xor i32 %v3_2e6f6, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e6f9 = icmp eq i32 %v3_2e6f9, 0
  store i32 %v3_2e6f9, i32* @eax, align 8
  br i1 %v4_2e6f9, label %bb, label %dec_label_pc_2e702

bb:                                               ; preds = %dec_label_pc_2e6f6
  %v1_2e700 = call i32 @function_2e707()
  br label %dec_label_pc_2e702

dec_label_pc_2e702:                               ; preds = %bb, %dec_label_pc_2e6f6
  %v2_2e700 = phi i32 [ %v1_2e700, %bb ], [ %v3_2e6f9, %dec_label_pc_2e6f6 ]
  ret i32 %v2_2e700
}

define i32 @function_2e707() local_unnamed_addr {
dec_label_pc_2e707:
  %v0_2e70c = load i32, i32* @eax, align 8
  ret i32 %v0_2e70c
}

define i32 @_ZNKSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e70e:
  %v2_2e738 = call i32 @unknown_5f936(i32 %arg1, i32 %arg2)
  ret i32 %v2_2e738
}

define i32 @function_2e73e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e73e:
  %v0_2e73f = load i32, i32* @eax, align 8
  %v2_2e73f = add i32 %v0_2e73f, 139
  %v16_2e73f = urem i32 %v2_2e73f, 256
  %v18_2e73f = and i32 %v0_2e73f, -256
  %v19_2e73f = or i32 %v16_2e73f, %v18_2e73f
  store i32 %v19_2e73f, i32* @eax, align 8
  %v0_2e741 = load i32, i32* @ebp, align 4
  %v1_2e741 = add i32 %v0_2e741, 1
  store i32 %v1_2e741, i32* @ebp, align 4
  %v0_2e746 = load i32, i32* @edx, align 8
  %v4_2e746 = icmp eq i32 %v0_2e746, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2e746, label %bb, label %dec_label_pc_2e74f

bb:                                               ; preds = %dec_label_pc_2e73e
  %v1_2e74d = call i32 @function_2e754()
  br label %dec_label_pc_2e74f

dec_label_pc_2e74f:                               ; preds = %bb, %dec_label_pc_2e73e
  %v2_2e74d = phi i32 [ %v1_2e74d, %bb ], [ %v19_2e73f, %dec_label_pc_2e73e ]
  ret i32 %v2_2e74d

; uselistorder directives
  uselistorder i32 %v0_2e73f, { 1, 0 }
}

define i32 @function_2e754() local_unnamed_addr {
dec_label_pc_2e754:
  %v0_2e755 = load i32, i32* @eax, align 8
  ret i32 %v0_2e755
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2e758:
  %v2_2e772 = load i32, i32* %arg1, align 4
  %v1_2e774 = add i32 %v2_2e772, ptrtoint (i32* @global_var_10.1921 to i32)
  ret i32 %v1_2e774
}

define i32 @function_2e77c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e77c:
  %v0_2e77c = load i32, i32* @eax, align 8
  %v1_2e77c = load i1, i1* @cf, align 1
  %v2_2e77c = zext i1 %v1_2e77c to i32
  %v3_2e77c = add i32 %v0_2e77c, ptrtoint (i8** @global_var_14.1904 to i32)
  %v4_2e77c = add i32 %v3_2e77c, %v2_2e77c
  %v14_2e77c = icmp eq i32 %v4_2e77c, 0
  store i32 %v4_2e77c, i32* @eax, align 8
  br i1 %v14_2e77c, label %bb, label %dec_label_pc_2e783

bb:                                               ; preds = %dec_label_pc_2e77c
  %v1_2e781 = call i32 @function_2e788()
  br label %dec_label_pc_2e783

dec_label_pc_2e783:                               ; preds = %bb, %dec_label_pc_2e77c
  %v2_2e781 = phi i32 [ %v1_2e781, %bb ], [ %v4_2e77c, %dec_label_pc_2e77c ]
  ret i32 %v2_2e781
}

define i32 @function_2e788() local_unnamed_addr {
dec_label_pc_2e788:
  %v0_2e789 = load i32, i32* @eax, align 8
  ret i32 %v0_2e789
}

define i32 @_ZNSt3mapISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS2_5mutexEEEEEENS3_14group_key_lessIiSt4lessIiEEESaIS0_IKS7_SL_EEE6insertESt17_Rb_tree_iteratorISR_ERKSR_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e78a:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_2e7b6 = ptrtoint i32* %stack_var_-40 to i32
  %v2_2e7ba = ptrtoint i32* %stack_var_-20 to i32
  %v2_2e7c0 = call i32 @unknown_4f1b0(i32 %v2_2e7ba, i32 %v4_2e7b6)
  %v3_2e7d2 = load i32, i32* %stack_var_-20, align 4
  %v4_2e7e0 = call i32 @unknown_5f9e8(i32 %arg1, i32 %arg2, i32 %v3_2e7d2, i32 %arg4)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e7f7

bb:                                               ; preds = %dec_label_pc_2e78a
  %v1_2e7f5 = call i32 @function_2e7fc()
  br label %dec_label_pc_2e7f7

dec_label_pc_2e7f7:                               ; preds = %bb, %dec_label_pc_2e78a
  %v2_2e7f5 = phi i32 [ %v1_2e7f5, %bb ], [ %arg1, %dec_label_pc_2e78a ]
  ret i32 %v2_2e7f5

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e7fc() local_unnamed_addr {
dec_label_pc_2e7fc:
  %v0_2e7fd = load i32, i32* @eax, align 8
  ret i32 %v0_2e7fd
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE8_M_eraseESt14_List_iteratorISJ_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e800:
  ret i32 %arg2
}

define i32 @function_2e834(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e834:
  %v0_2e834 = load i32, i32* @ecx, align 4
  %v1_2e834 = add i32 %v0_2e834, -1259854844
  %v2_2e834 = inttoptr i32 %v1_2e834 to i8*
  %v3_2e834 = load i8, i8* %v2_2e834, align 1
  %v5_2e834 = trunc i32 %v0_2e834 to i8
  %v6_2e834 = or i8 %v3_2e834, %v5_2e834
  store i8 %v6_2e834, i8* %v2_2e834, align 1
  %v0_2e83f = load i32, i32* @ebp, align 4
  %v1_2e83f = add i32 %v0_2e83f, -28
  %v2_2e83f = inttoptr i32 %v1_2e83f to i32*
  %v3_2e83f = load i32, i32* %v2_2e83f, align 4
  %v1_2e842 = add i32 %v0_2e83f, -13
  %v2_2e84c = call i32 @unknown_5916c(i32 %v1_2e842, i32 %v3_2e83f)
  %v0_2e854 = load i32, i32* @ebx, align 8
  %v0_2e858 = load i32, i32* @ebp, align 4
  %v1_2e858 = add i32 %v0_2e858, -13
  %v2_2e85e = call i32 @unknown_5f62a(i32 %v1_2e858, i32 %v0_2e854)
  %v0_2e863 = load i32, i32* @ebp, align 4
  %v1_2e863 = add i32 %v0_2e863, -13
  %v1_2e869 = call i32 @unknown_591bc(i32 %v1_2e863)
  %v0_2e86e = load i32, i32* @ebp, align 4
  %v1_2e86e = add i32 %v0_2e86e, -28
  %v2_2e86e = inttoptr i32 %v1_2e86e to i32*
  %v3_2e86e = load i32, i32* %v2_2e86e, align 4
  %v1_2e871 = add i32 %v0_2e86e, -20
  %v2_2e871 = inttoptr i32 %v1_2e871 to i32*
  %v3_2e871 = load i32, i32* %v2_2e871, align 4
  %v2_2e87b = call i32 @unknown_5927a(i32 %v3_2e86e, i32 %v3_2e871)
  %v0_2e880 = load i32, i32* @ebp, align 4
  %v1_2e880 = add i32 %v0_2e880, -12
  %v2_2e880 = inttoptr i32 %v1_2e880 to i32*
  %v3_2e880 = load i32, i32* %v2_2e880, align 4
  %v3_2e883 = xor i32 %v3_2e880, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2e883 = icmp eq i32 %v3_2e883, 0
  store i32 %v3_2e883, i32* @eax, align 8
  br i1 %v4_2e883, label %bb, label %dec_label_pc_2e88c

bb:                                               ; preds = %dec_label_pc_2e834
  %v1_2e88a = call i32 @function_2e8aa()
  store i32 %v1_2e88a, i32* @eax, align 8
  br label %dec_label_pc_2e88c

dec_label_pc_2e88c:                               ; preds = %bb, %dec_label_pc_2e834
  %v0_2e88c = call i32 @function_2e8a5()
  ret i32 %v0_2e88c
}

define i32 @function_2e88f() local_unnamed_addr {
dec_label_pc_2e88f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e88f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e88f
}

define i32 @function_2e8a5() local_unnamed_addr {
dec_label_pc_2e8a5:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2e8aa() local_unnamed_addr {
dec_label_pc_2e8aa:
  %v0_2e8ae = load i32, i32* @eax, align 8
  ret i32 %v0_2e8ae
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8af:
  %v1_2e8c9 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2e8c9, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e8d8

bb:                                               ; preds = %dec_label_pc_2e8af
  %v2_2e8d6 = call i32 @function_2e8dd(i32 %arg1)
  br label %dec_label_pc_2e8d8

dec_label_pc_2e8d8:                               ; preds = %bb, %dec_label_pc_2e8af
  %v3_2e8d6 = phi i32 [ %v2_2e8d6, %bb ], [ %v1_2e8c9, %dec_label_pc_2e8af ]
  ret i32 %v3_2e8d6
}

define i32 @function_2e8dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8dd:
  %v0_2e8de = load i32, i32* @eax, align 8
  ret i32 %v0_2e8de
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e8e0:
  %v1_2e909 = call i32 @unknown_5ff5a(i32 %arg1)
  %v10_2e90e = icmp ult i32 %v1_2e909, %arg2
  %v1_2e911 = zext i1 %v10_2e90e to i32
  %v3_2e911 = and i32 %v1_2e909, -256
  %v4_2e911 = or i32 %v1_2e911, %v3_2e911
  %v5_2e914 = icmp eq i1 %v10_2e90e, false
  br i1 %v5_2e914, label %bb, label %dec_label_pc_2e918

bb:                                               ; preds = %dec_label_pc_2e8e0
  %v1_2e916 = call i32 @function_2e91d()
  br label %dec_label_pc_2e918

dec_label_pc_2e918:                               ; preds = %bb, %dec_label_pc_2e8e0
  %v2_2e916 = phi i32 [ %v1_2e916, %bb ], [ %v4_2e911, %dec_label_pc_2e8e0 ]
  ret i32 %v2_2e916

; uselistorder directives
  uselistorder i1 %v10_2e90e, { 1, 0 }
}

define i32 @function_2e91d() local_unnamed_addr {
dec_label_pc_2e91d:
  %v0_2e91d = load i32, i32* @ebp, align 4
  %v1_2e91d = add i32 %v0_2e91d, -32
  %v2_2e91d = inttoptr i32 %v1_2e91d to i32*
  %v3_2e91d = load i32, i32* %v2_2e91d, align 4
  %v2_2e920 = mul i32 %v3_2e91d, 16
  ret i32 %v2_2e920
}

define i32 @function_2e93b() local_unnamed_addr {
dec_label_pc_2e93b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e93b = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e93b = add i32 %v0_2e93b, -1
  store i32 %v1_2e93b, i32* %ecx.global-to-local, align 4
  %v0_2e93d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e93d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS3_5mutexEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e93e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2e961

bb:                                               ; preds = %dec_label_pc_2e93e
  %v2_2e95f = call i32 @function_2e966(i32 %arg1)
  br label %dec_label_pc_2e961

dec_label_pc_2e961:                               ; preds = %bb, %dec_label_pc_2e93e
  %v3_2e95f = phi i32 [ %v2_2e95f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2e93e ]
  ret i32 %v3_2e95f
}

define i32 @function_2e966(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e966:
  %v0_2e967 = load i32, i32* @eax, align 8
  ret i32 %v0_2e967
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEE10deallocateEPSM_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e968:
  ret i32 %arg2
}

define i32 @function_2e9a6() local_unnamed_addr {
dec_label_pc_2e9a6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2e9a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2e9a6 = add i32 %v0_2e9a6, -1
  store i32 %v1_2e9a6, i32* %ecx.global-to-local, align 4
  %v0_2e9a8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2e9a8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e9aa:
  %stack_var_-17 = alloca i32, align 4
  %v1_2e9cb = add i32 %arg2, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2e9d1 = call i32 @unknown_5415e(i32 %v1_2e9cb)
  %v2_2e9d8 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2e9e5 = call i32 @unknown_60054(i32 %v2_2e9d8, i32 %arg1)
  %v2_2e9f7 = call i32 @unknown_600da(i32 %v2_2e9d8, i32 %v1_2e9d1)
  %v1_2ea02 = call i32 @unknown_600a4(i32 %v2_2e9d8)
  %v2_2ea14 = call i32 @unknown_60116(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ea25

bb:                                               ; preds = %dec_label_pc_2e9aa
  %v1_2ea23 = call i32 @function_2ea43()
  br label %dec_label_pc_2ea25

dec_label_pc_2ea25:                               ; preds = %bb, %dec_label_pc_2e9aa
  %v2_2ea23 = phi i32 [ %v1_2ea23, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2e9aa ]
  ret i32 %v2_2ea23

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ea26(i16 %arg1) local_unnamed_addr {
dec_label_pc_2ea26:
  %v0_2ea27 = load i32, i32* @eax, align 8
  %v0_2ea29 = load i32, i32* @ebp, align 4
  %v1_2ea29 = add i32 %v0_2ea29, -13
  %v1_2ea2f = call i32 @unknown_600a4(i32 %v1_2ea29)
  ret i32 %v0_2ea27
}

define i32 @function_2ea43() local_unnamed_addr {
dec_label_pc_2ea43:
  %v0_2ea47 = load i32, i32* @eax, align 8
  ret i32 %v0_2ea47
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_create_nodeERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ea48:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ea6c = call i32 @unknown_601fe(i32 %arg1)
  %v1_2ea77 = add i32 %v1_2ea6c, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2ea7d = call i32 @unknown_541fc(i32 %v1_2ea77)
  %v2_2ea84 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2ea91 = call i32 @unknown_600f2(i32 %v2_2ea84, i32 %arg1)
  %v3_2eaaa = call i32 @unknown_60292(i32 %v2_2ea84, i32 %v1_2ea7d, i32 %arg2)
  %v1_2eab5 = call i32 @unknown_60142(i32 %v2_2ea84)
  store i32 %v1_2ea6c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2eac9

bb:                                               ; preds = %dec_label_pc_2ea48
  %v1_2eac7 = call i32 @function_2eb11()
  store i32 %v1_2eac7, i32* @eax, align 8
  br label %dec_label_pc_2eac9

dec_label_pc_2eac9:                               ; preds = %bb, %dec_label_pc_2ea48
  %v0_2eac9 = call i32 @function_2eb0c()
  ret i32 %v0_2eac9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2eacc() local_unnamed_addr {
dec_label_pc_2eacc:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eacc = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eacc
}

define i32 @function_2eaef(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
dec_label_pc_2eaef:
  %v0_2eaef = call i32 @unknown_601b4()
  store i32 %v0_2eaef, i32* @eax, align 8
  %v0_2eaf4 = call i32 @function_2eb07()
  ret i32 %v0_2eaf4
}

define i32 @function_2eaf7() local_unnamed_addr {
dec_label_pc_2eaf7:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eaf7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eaf7
}

define i32 @function_2eb07() local_unnamed_addr {
dec_label_pc_2eb07:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eb0c() local_unnamed_addr {
dec_label_pc_2eb0c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2eb11() local_unnamed_addr {
dec_label_pc_2eb11:
  %v0_2eb15 = load i32, i32* @eax, align 8
  ret i32 %v0_2eb15
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb16:
  %v1_2eb30 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2eb30, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2eb3f

bb:                                               ; preds = %dec_label_pc_2eb16
  %v2_2eb3d = call i32 @function_2eb44(i32 %arg1)
  br label %dec_label_pc_2eb3f

dec_label_pc_2eb3f:                               ; preds = %bb, %dec_label_pc_2eb16
  %v3_2eb3d = phi i32 [ %v2_2eb3d, %bb ], [ %v1_2eb30, %dec_label_pc_2eb16 ]
  ret i32 %v3_2eb3d
}

define i32 @function_2eb44(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb44:
  %v0_2eb45 = load i32, i32* @eax, align 8
  ret i32 %v0_2eb45
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1IS2_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eb46:
  %ebx.global-to-local = alloca i32, align 4
  %v1_2eb67 = add i32 %arg1, 4
  %v1_2eb6d = call i32 @unknown_40b3e(i32 %v1_2eb67)
  %v0_2eb72 = load i32, i32* %ebx.global-to-local, align 8
  %sext = mul i32 %v0_2eb72, 16777216
  %v4_2eb8b = sdiv i32 %sext, 16777216
  %v5_2eb8b = call i32 @unknown_60412(i32 %arg1, i32 %arg2, i32 1, i32 %v4_2eb8b)
  %v0_2eb90 = call i32 @function_2ebac()
  ret i32 %v0_2eb90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2eb93() local_unnamed_addr {
dec_label_pc_2eb93:
  %eax.global-to-local = alloca i32, align 4
  %v0_2eb93 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2eb93
}

define i32 @function_2ebac() local_unnamed_addr {
dec_label_pc_2ebac:
  %v0_2ebac = load i32, i32* @ebp, align 4
  %v1_2ebac = add i32 %v0_2ebac, -12
  %v2_2ebac = inttoptr i32 %v1_2ebac to i32*
  %v3_2ebac = load i32, i32* %v2_2ebac, align 4
  %v3_2ebaf = xor i32 %v3_2ebac, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ebaf = icmp eq i32 %v3_2ebaf, 0
  store i32 %v3_2ebaf, i32* @eax, align 8
  br i1 %v4_2ebaf, label %bb, label %dec_label_pc_2ebb8

bb:                                               ; preds = %dec_label_pc_2ebac
  %v1_2ebb6 = call i32 @function_2ebbd()
  br label %dec_label_pc_2ebb8

dec_label_pc_2ebb8:                               ; preds = %bb, %dec_label_pc_2ebac
  %v2_2ebb6 = phi i32 [ %v1_2ebb6, %bb ], [ %v3_2ebaf, %dec_label_pc_2ebac ]
  ret i32 %v2_2ebb6
}

define i32 @function_2ebbd() local_unnamed_addr {
dec_label_pc_2ebbd:
  %v0_2ebc2 = load i32, i32* @eax, align 8
  ret i32 %v0_2ebc2
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EC1IS5_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ebc4:
  %ebx.global-to-local = alloca i32, align 4
  %v1_2ebe5 = add i32 %arg1, 4
  %v1_2ebeb = call i32 @unknown_40bbc(i32 %v1_2ebe5)
  %v0_2ebf0 = load i32, i32* %ebx.global-to-local, align 8
  %sext = mul i32 %v0_2ebf0, 16777216
  %v4_2ec09 = sdiv i32 %sext, 16777216
  %v5_2ec09 = call i32 @unknown_604fa(i32 %arg1, i32 %arg2, i32 1, i32 %v4_2ec09)
  %v0_2ec0e = call i32 @function_2ec2a()
  ret i32 %v0_2ec0e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ec11() local_unnamed_addr {
dec_label_pc_2ec11:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ec11 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ec11
}

define i32 @function_2ec2a() local_unnamed_addr {
dec_label_pc_2ec2a:
  %v0_2ec2a = load i32, i32* @ebp, align 4
  %v1_2ec2a = add i32 %v0_2ec2a, -12
  %v2_2ec2a = inttoptr i32 %v1_2ec2a to i32*
  %v3_2ec2a = load i32, i32* %v2_2ec2a, align 4
  %v3_2ec2d = xor i32 %v3_2ec2a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ec2d = icmp eq i32 %v3_2ec2d, 0
  store i32 %v3_2ec2d, i32* @eax, align 8
  br i1 %v4_2ec2d, label %bb, label %dec_label_pc_2ec36

bb:                                               ; preds = %dec_label_pc_2ec2a
  %v1_2ec34 = call i32 @function_2ec3b()
  br label %dec_label_pc_2ec36

dec_label_pc_2ec36:                               ; preds = %bb, %dec_label_pc_2ec2a
  %v2_2ec34 = phi i32 [ %v1_2ec34, %bb ], [ %v3_2ec2d, %dec_label_pc_2ec2a ]
  ret i32 %v2_2ec34
}

define i32 @function_2ec3b() local_unnamed_addr {
dec_label_pc_2ec3b:
  %v0_2ec40 = load i32, i32* @eax, align 8
  ret i32 %v0_2ec40
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt13_Rb_tree_nodeISN_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec41:
  %v1_2ec5b = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2ec5b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ec6a

bb:                                               ; preds = %dec_label_pc_2ec41
  %v2_2ec68 = call i32 @function_2ec6f(i32 %arg1)
  br label %dec_label_pc_2ec6a

dec_label_pc_2ec6a:                               ; preds = %bb, %dec_label_pc_2ec41
  %v3_2ec68 = phi i32 [ %v2_2ec68, %bb ], [ %v1_2ec5b, %dec_label_pc_2ec41 ]
  ret i32 %v3_2ec68
}

define i32 @function_2ec6f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec6f:
  %v0_2ec70 = load i32, i32* @eax, align 8
  ret i32 %v0_2ec70
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec71:
  %v1_2ec8b = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2ec8b, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ec9a

bb:                                               ; preds = %dec_label_pc_2ec71
  %v2_2ec98 = call i32 @function_2ec9f(i32 %arg1)
  br label %dec_label_pc_2ec9a

dec_label_pc_2ec9a:                               ; preds = %bb, %dec_label_pc_2ec71
  %v3_2ec98 = phi i32 [ %v2_2ec98, %bb ], [ %v1_2ec8b, %dec_label_pc_2ec71 ]
  ret i32 %v3_2ec98
}

define i32 @function_2ec9f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec9f:
  %v0_2eca0 = load i32, i32* @eax, align 8
  ret i32 %v0_2eca0
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE14_M_create_nodeERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eca2:
  %stack_var_-17 = alloca i32, align 4
  %v1_2ecc6 = call i32 @unknown_60642(i32 %arg1)
  %v1_2ecd1 = add i32 %v1_2ecc6, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_2ecd7 = call i32 @unknown_50482(i32 %v1_2ecd1)
  %v2_2ecde = ptrtoint i32* %stack_var_-17 to i32
  %v2_2eceb = call i32 @unknown_5da9e(i32 %v2_2ecde, i32 %arg1)
  %v3_2ed04 = call i32 @unknown_606d6(i32 %v2_2ecde, i32 %v1_2ecd7, i32 %arg2)
  %v1_2ed0f = call i32 @unknown_5daee(i32 %v2_2ecde)
  store i32 %v1_2ecc6, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ed23

bb:                                               ; preds = %dec_label_pc_2eca2
  %v1_2ed21 = call i32 @function_2ed6b()
  store i32 %v1_2ed21, i32* @eax, align 8
  br label %dec_label_pc_2ed23

dec_label_pc_2ed23:                               ; preds = %bb, %dec_label_pc_2eca2
  %v0_2ed23 = call i32 @function_2ed66()
  ret i32 %v0_2ed23

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ed26() local_unnamed_addr {
dec_label_pc_2ed26:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ed26 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ed26
}

define i32 @function_2ed3b() local_unnamed_addr {
dec_label_pc_2ed3b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2ed3b = load i32, i32* %ebx.global-to-local, align 8
  %v1_2ed3b = add i32 %v0_2ed3b, 1149889605
  %v2_2ed3b = inttoptr i32 %v1_2ed3b to i32*
  %v3_2ed3b = load i32, i32* %v2_2ed3b, align 4
  %v4_2ed3b = add i32 %v3_2ed3b, -1
  store i32 %v4_2ed3b, i32* %v2_2ed3b, align 4
  %v0_2ed41 = load i32, i32* %eax.global-to-local, align 8
  %v11_2ed41 = and i32 %v0_2ed41, -252
  store i32 %v11_2ed41, i32* %eax.global-to-local, align 8
  %v0_2ed43 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2ed43 = add i32 %v0_2ed43, -28
  %v2_2ed43 = inttoptr i32 %v1_2ed43 to i32*
  %v3_2ed43 = load i32, i32* %v2_2ed43, align 4
  store i32 %v3_2ed43, i32* %eax.global-to-local, align 8
  %v1_2ed49 = call i32 @unknown_5db60(i32 %v3_2ed43)
  store i32 %v1_2ed49, i32* @eax, align 8
  %v0_2ed4e = call i32 @function_2ed61()
  store i32 %v0_2ed4e, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ed4e
}

define i32 @function_2ed51() local_unnamed_addr {
dec_label_pc_2ed51:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ed51 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2ed51
}

define i32 @function_2ed61() local_unnamed_addr {
dec_label_pc_2ed61:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ed66() local_unnamed_addr {
dec_label_pc_2ed66:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2ed6b() local_unnamed_addr {
dec_label_pc_2ed6b:
  %v0_2ed6f = load i32, i32* @eax, align 8
  ret i32 %v0_2ed6f
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKS_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEbEC1ERKSO_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ed70:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_2ed99 = inttoptr i32 %arg2 to i32*
  %v2_2ed99 = load i32, i32* %v1_2ed99, align 4
  store i32 %v2_2ed99, i32* %arg1, align 4
  %v2_2eda0 = load i8, i8* %tmp104, align 1
  %v3_2eda6 = add i32 %tmp109, 4
  %v4_2eda6 = inttoptr i32 %v3_2eda6 to i8*
  store i8 %v2_2eda0, i8* %v4_2eda6, align 1
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2edb5

bb:                                               ; preds = %dec_label_pc_2ed70
  %v5_2edb3 = call i32 @function_2edba(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_2edb5

dec_label_pc_2edb5:                               ; preds = %bb, %dec_label_pc_2ed70
  %v6_2edb3 = phi i32 [ %v5_2edb3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ed70 ]
  ret i32 %v6_2edb3
}

define i32 @function_2edba(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2edba:
  %v0_2edbb = load i32, i32* @eax, align 8
  ret i32 %v0_2edbb
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2edbc:
  %v2_2edd6 = load i32, i32* %arg1, align 4
  ret i32 %v2_2edd6
}

define i32 @function_2edf8() local_unnamed_addr {
dec_label_pc_2edf8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2edf8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2edf8 = add i32 %v0_2edf8, -1
  store i32 %v1_2edf8, i32* %ecx.global-to-local, align 4
  %v0_2edfa = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2edfa
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2edfc:
  %v1_2ee1f = call i32 @unknown_5a9b8(i32 %arg2)
  ret i32 %v1_2ee1f
}

define i32 @function_2ee2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee2a:
  %v0_2ee2e = call i32 @unknown_608b2()
  %v0_2ee33 = load i32, i32* @ebp, align 4
  %v1_2ee33 = add i32 %v0_2ee33, -28
  %v2_2ee33 = inttoptr i32 %v1_2ee33 to i32*
  %v3_2ee33 = load i32, i32* %v2_2ee33, align 4
  store i32 %v3_2ee33, i32* @eax, align 8
  %v1_2ee36 = add i32 %v0_2ee33, -12
  %v2_2ee36 = inttoptr i32 %v1_2ee36 to i32*
  %v3_2ee36 = load i32, i32* %v2_2ee36, align 4
  %v4_2ee39 = icmp eq i32 %v3_2ee36, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2ee39, label %bb, label %dec_label_pc_2ee42

bb:                                               ; preds = %dec_label_pc_2ee2a
  %v1_2ee40 = call i32 @function_2ee47()
  br label %dec_label_pc_2ee42

dec_label_pc_2ee42:                               ; preds = %bb, %dec_label_pc_2ee2a
  %v2_2ee40 = phi i32 [ %v1_2ee40, %bb ], [ %v3_2ee33, %dec_label_pc_2ee2a ]
  ret i32 %v2_2ee40
}

define i32 @function_2ee47() local_unnamed_addr {
dec_label_pc_2ee47:
  %v0_2ee48 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee48
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee4c:
  %v1_2ee69 = call i32 @unknown_6093e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ee7a

bb:                                               ; preds = %dec_label_pc_2ee4c
  %v1_2ee78 = call i32 @function_2ee7f()
  br label %dec_label_pc_2ee7a

dec_label_pc_2ee7a:                               ; preds = %bb, %dec_label_pc_2ee4c
  %v2_2ee78 = phi i32 [ %v1_2ee78, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ee4c ]
  ret i32 %v2_2ee78
}

define i32 @function_2ee7f() local_unnamed_addr {
dec_label_pc_2ee7f:
  %v0_2ee80 = load i32, i32* @eax, align 8
  ret i32 %v0_2ee80
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEE7destroyEPSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ee82:
  %v1_2eea5 = call i32 @unknown_4c974(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2eeb6

bb:                                               ; preds = %dec_label_pc_2ee82
  %v1_2eeb4 = call i32 @function_2eebb()
  br label %dec_label_pc_2eeb6

dec_label_pc_2eeb6:                               ; preds = %bb, %dec_label_pc_2ee82
  %v2_2eeb4 = phi i32 [ %v1_2eeb4, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ee82 ]
  ret i32 %v2_2eeb4
}

define i32 @function_2eebb() local_unnamed_addr {
dec_label_pc_2eebb:
  %v0_2eebc = load i32, i32* @eax, align 8
  ret i32 %v0_2eebc
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_put_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eebe:
  %v3_2eef0 = call i32 @unknown_609da(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ef01

bb:                                               ; preds = %dec_label_pc_2eebe
  %v1_2eeff = call i32 @function_2ef06()
  br label %dec_label_pc_2ef01

dec_label_pc_2ef01:                               ; preds = %bb, %dec_label_pc_2eebe
  %v2_2eeff = phi i32 [ %v1_2eeff, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2eebe ]
  ret i32 %v2_2eeff
}

define i32 @function_2ef06() local_unnamed_addr {
dec_label_pc_2ef06:
  %v0_2ef07 = load i32, i32* @eax, align 8
  ret i32 %v0_2ef07
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef08:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ef2b

bb:                                               ; preds = %dec_label_pc_2ef08
  %v2_2ef29 = call i32 @function_2ef30(i32 %arg1)
  br label %dec_label_pc_2ef2b

dec_label_pc_2ef2b:                               ; preds = %bb, %dec_label_pc_2ef08
  %v3_2ef29 = phi i32 [ %v2_2ef29, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ef08 ]
  ret i32 %v3_2ef29
}

define i32 @function_2ef30(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef30:
  %v0_2ef31 = load i32, i32* @eax, align 8
  ret i32 %v0_2ef31
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ef32:
  %v2_2ef5c = call i32 @unknown_60a90(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ef6d

bb:                                               ; preds = %dec_label_pc_2ef32
  %v1_2ef6b = call i32 @function_2ef72()
  br label %dec_label_pc_2ef6d

dec_label_pc_2ef6d:                               ; preds = %bb, %dec_label_pc_2ef32
  %v2_2ef6b = phi i32 [ %v1_2ef6b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ef32 ]
  ret i32 %v2_2ef6b
}

define i32 @function_2ef72() local_unnamed_addr {
dec_label_pc_2ef72:
  %v0_2ef73 = load i32, i32* @eax, align 8
  ret i32 %v0_2ef73
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE9_M_insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ef74:
  %v2_2efa4 = call i32 @unknown_60b02(i32 %arg1, i32 %arg3)
  ret i32 %v2_2efa4
}

define i32 @function_2efce() local_unnamed_addr {
dec_label_pc_2efce:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2efce = load i32, i32* %ecx.global-to-local, align 4
  %v1_2efce = add i32 %v0_2efce, -1
  store i32 %v1_2efce, i32* %ecx.global-to-local, align 4
  %v0_2efd0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2efd0
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2efd2:
  %v2_2effc = call i32 @unknown_60c2c(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f00d

bb:                                               ; preds = %dec_label_pc_2efd2
  %v1_2f00b = call i32 @function_2f012()
  br label %dec_label_pc_2f00d

dec_label_pc_2f00d:                               ; preds = %bb, %dec_label_pc_2efd2
  %v2_2f00b = phi i32 [ %v1_2f00b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2efd2 ]
  ret i32 %v2_2f00b
}

define i32 @function_2f012() local_unnamed_addr {
dec_label_pc_2f012:
  %v0_2f013 = load i32, i32* @eax, align 8
  ret i32 %v0_2f013
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f014:
  %v1_2f02e = add i32 %arg1, 4
  %v2_2f02e = inttoptr i32 %v1_2f02e to i32*
  store i32 0, i32* %v2_2f02e, align 4
  %v1_2f038 = add i32 %arg1, 8
  %v2_2f038 = inttoptr i32 %v1_2f038 to i32*
  store i32 0, i32* %v2_2f038, align 4
  %v2_2f048 = add i32 %arg1, 12
  %v3_2f048 = inttoptr i32 %v2_2f048 to i32*
  store i32 %v1_2f02e, i32* %v3_2f048, align 4
  %v2_2f054 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_2f054 = inttoptr i32 %v2_2f054 to i32*
  store i32 %v1_2f02e, i32* %v3_2f054, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f063

bb:                                               ; preds = %dec_label_pc_2f014
  %v2_2f061 = call i32 @function_2f068(i32 %arg1)
  br label %dec_label_pc_2f063

dec_label_pc_2f063:                               ; preds = %bb, %dec_label_pc_2f014
  %v3_2f061 = phi i32 [ %v2_2f061, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f014 ]
  ret i32 %v3_2f061
}

define i32 @function_2f068(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f068:
  %v0_2f069 = load i32, i32* @eax, align 8
  ret i32 %v0_2f069
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISN_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2f06a:
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_2f08a = add i32 %tmp102, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_2f097 = call i32 @unknown_5dd0c(i32 %arg1, i32 %v1_2f08a)
  %v2_2f0a2 = load i32, i32* %arg2, align 4
  %v2_2f0a7 = inttoptr i32 %v2_2f097 to i32*
  store i32 %v2_2f0a2, i32* %v2_2f0a7, align 4
  %v1_2f0ac = add i32 %v2_2f097, 8
  %v2_2f0ac = inttoptr i32 %v1_2f0ac to i32*
  store i32 0, i32* %v2_2f0ac, align 4
  %v1_2f0b6 = add i32 %v2_2f097, 12
  %v2_2f0b6 = inttoptr i32 %v1_2f0b6 to i32*
  store i32 0, i32* %v2_2f0b6, align 4
  store i32 %v2_2f097, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f0cc

bb:                                               ; preds = %dec_label_pc_2f06a
  %v2_2f0ca = call i32 @function_2f0d1(i32 %v2_2f097)
  br label %dec_label_pc_2f0cc

dec_label_pc_2f0cc:                               ; preds = %bb, %dec_label_pc_2f06a
  %v4_2f0ca = phi i32 [ %v2_2f0ca, %bb ], [ %v2_2f097, %dec_label_pc_2f06a ]
  ret i32 %v4_2f0ca
}

define i32 @function_2f0d1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f0d1:
  %v0_2f0d2 = load i32, i32* @eax, align 8
  ret i32 %v0_2f0d2
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f0d3:
  %v1_2f0ed = add i32 %arg1, 8
  %v2_2f0ed = inttoptr i32 %v1_2f0ed to i32*
  %v3_2f0ed = load i32, i32* %v2_2f0ed, align 4
  store i32 %v3_2f0ed, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f0fc

bb:                                               ; preds = %dec_label_pc_2f0d3
  %v2_2f0fa = call i32 @function_2f101(i32 %arg1)
  br label %dec_label_pc_2f0fc

dec_label_pc_2f0fc:                               ; preds = %bb, %dec_label_pc_2f0d3
  %v3_2f0fa = phi i32 [ %v2_2f0fa, %bb ], [ %v3_2f0ed, %dec_label_pc_2f0d3 ]
  ret i32 %v3_2f0fa
}

define i32 @function_2f101(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f101:
  %v0_2f102 = load i32, i32* @eax, align 8
  ret i32 %v0_2f102
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f104:
  %stack_var_-48 = alloca i32, align 4
  %v2_2f136 = call i32 @unknown_60d8e(i32 %arg1, i32 %arg2)
  %v2_2f148 = ptrtoint i32* %stack_var_-48 to i32
  %v6_2f16b = call i32 @unknown_60df3(i32 %v2_2f148, i32 %arg1, i32 108546, i32 0, i32 %v2_2f136, i32 %arg2)
  %v1_2f17f = call i32 @unknown_60efc(i32 %arg1)
  %v1_2f18c = call i32 @unknown_60ecc(i32 %arg1)
  %v3_2f19f = call i32 @unknown_60f40(i32 %v1_2f18c, i32 %v1_2f17f, i32 %v2_2f136)
  %v1_2f1aa = call i32 @unknown_3e140(i32 %v2_2f148)
  %v1_2f1b8 = call i32 @unknown_60e6e(i32 %v2_2f148)
  store i32 %v2_2f136, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f1cb

bb:                                               ; preds = %dec_label_pc_2f104
  %v1_2f1c9 = call i32 @function_2f1e9()
  store i32 %v1_2f1c9, i32* @eax, align 8
  br label %dec_label_pc_2f1cb

dec_label_pc_2f1cb:                               ; preds = %bb, %dec_label_pc_2f104
  %v0_2f1cb = call i32 @function_2f1e4()
  ret i32 %v0_2f1cb

; uselistorder directives
  uselistorder i32 %v2_2f148, { 1, 0, 2 }
  uselistorder i32 %v2_2f136, { 0, 2, 1 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_2f1ce() local_unnamed_addr {
dec_label_pc_2f1ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f1ce = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f1ce
}

define i32 @function_2f1e4() local_unnamed_addr {
dec_label_pc_2f1e4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f1e9() local_unnamed_addr {
dec_label_pc_2f1e9:
  %v0_2f1ef = load i32, i32* @eax, align 8
  ret i32 %v0_2f1ef
}

define i32 @_ZN5boost8signals26detail19default_grow_policy12new_capacityIjEET_S4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f1f0:
  %v2_2f20a = mul i32 %arg1, 4
  store i32 %v2_2f20a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f219

bb:                                               ; preds = %dec_label_pc_2f1f0
  %v2_2f217 = call i32 @function_2f21e(i32 %arg1)
  br label %dec_label_pc_2f219

dec_label_pc_2f219:                               ; preds = %bb, %dec_label_pc_2f1f0
  %v3_2f217 = phi i32 [ %v2_2f217, %bb ], [ %v2_2f20a, %dec_label_pc_2f1f0 ]
  ret i32 %v3_2f217

; uselistorder directives
  uselistorder i32 %v2_2f20a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f21e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f21e:
  %v0_2f21f = load i32, i32* @eax, align 8
  ret i32 %v0_2f21f
}

define i32 @_ZN5boost8signals25slot1ISsPKcNS_8functionIFSsS3_EEEE13slot_functionEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f220:
  %v1_2f23a = add i32 %arg1, 12
  store i32 %v1_2f23a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f249

bb:                                               ; preds = %dec_label_pc_2f220
  %v2_2f247 = call i32 @function_2f24e(i32 %arg1)
  br label %dec_label_pc_2f249

dec_label_pc_2f249:                               ; preds = %bb, %dec_label_pc_2f220
  %v3_2f247 = phi i32 [ %v2_2f247, %bb ], [ %v1_2f23a, %dec_label_pc_2f220 ]
  ret i32 %v3_2f247
}

define i32 @function_2f24e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f24e:
  %v0_2f24f = load i32, i32* @eax, align 8
  ret i32 %v0_2f24f
}

define i32 @_ZNK5boost9function1ISsPKcEclES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f250:
  %stack_var_-24 = alloca i32, align 4
  %v1_2f27a = call i32 @unknown_3d3f0(i32 %arg2)
  %v4_2f27f = trunc i32 %v1_2f27a to i8
  %v5_2f27f = icmp eq i8 %v4_2f27f, 0
  br i1 %v5_2f27f, label %dec_label_pc_2f299, label %dec_label_pc_2f283

dec_label_pc_2f283:                               ; preds = %dec_label_pc_2f250
  %v2_2f283 = ptrtoint i32* %stack_var_-24 to i32
  %v1_2f289 = call i32 @unknown_3d456(i32 %v2_2f283)
  %v1_2f294 = call i32 @unknown_40e4d(i32 %v2_2f283)
  br label %dec_label_pc_2f299

dec_label_pc_2f299:                               ; preds = %dec_label_pc_2f283, %dec_label_pc_2f250
  %v1_2f29f = call i32 @unknown_610e0(i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f2d2

bb:                                               ; preds = %dec_label_pc_2f299
  %v1_2f2aa = add i32 %arg2, 4
  %v4_2f2d0 = call i32 @function_2f2f0(i32 %arg1, i32 %v1_2f2aa, i32 %arg3)
  store i32 %v4_2f2d0, i32* @eax, align 8
  br label %dec_label_pc_2f2d2

dec_label_pc_2f2d2:                               ; preds = %bb, %dec_label_pc_2f299
  %v0_2f2d2 = call i32 @function_2f2eb()
  ret i32 %v0_2f2d2
}

define i32 @function_2f2d5() local_unnamed_addr {
dec_label_pc_2f2d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f2d5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f2d5
}

define i32 @function_2f2eb() local_unnamed_addr {
dec_label_pc_2f2eb:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f2f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f2f0:
  %v0_2f2f4 = load i32, i32* @eax, align 8
  ret i32 %v0_2f2f4
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f2f8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f31b

bb:                                               ; preds = %dec_label_pc_2f2f8
  %v2_2f319 = call i32 @function_2f320(i32 %arg1)
  br label %dec_label_pc_2f31b

dec_label_pc_2f31b:                               ; preds = %bb, %dec_label_pc_2f2f8
  %v3_2f319 = phi i32 [ %v2_2f319, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f2f8 ]
  ret i32 %v3_2f319
}

define i32 @function_2f320(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f320:
  %v0_2f321 = load i32, i32* @eax, align 8
  ret i32 %v0_2f321
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEEC1ISJ_EERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f322:
  %v1_2f345 = call i32 @unknown_611e4(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f356

bb:                                               ; preds = %dec_label_pc_2f322
  %v1_2f354 = call i32 @function_2f35b()
  br label %dec_label_pc_2f356

dec_label_pc_2f356:                               ; preds = %bb, %dec_label_pc_2f322
  %v2_2f354 = phi i32 [ %v1_2f354, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f322 ]
  ret i32 %v2_2f354
}

define i32 @function_2f35b() local_unnamed_addr {
dec_label_pc_2f35b:
  %v0_2f35c = load i32, i32* @eax, align 8
  ret i32 %v0_2f35c
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE10_List_implC1ERKSaISt10_List_nodeISJ_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f35e:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_2f388 = call i32 @unknown_6124a(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_2f399 = add i32 %tmp103, 4
  %v2_2f399 = inttoptr i32 %v1_2f399 to i32*
  store i32 0, i32* %v2_2f399, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f3ac

bb:                                               ; preds = %dec_label_pc_2f35e
  %v1_2f3aa = call i32 @function_2f3b1()
  br label %dec_label_pc_2f3ac

dec_label_pc_2f3ac:                               ; preds = %bb, %dec_label_pc_2f35e
  %v2_2f3aa = phi i32 [ %v1_2f3aa, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f35e ]
  ret i32 %v2_2f3aa

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_2f3b1() local_unnamed_addr {
dec_label_pc_2f3b1:
  %v0_2f3b2 = load i32, i32* @eax, align 8
  ret i32 %v0_2f3b2
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE7_M_initEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2f3b4:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* %arg1, align 4
  %v2_2f3d9 = add i32 %tmp100, 4
  %v3_2f3d9 = inttoptr i32 %v2_2f3d9 to i32*
  store i32 %tmp100, i32* %v3_2f3d9, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f3e8

bb:                                               ; preds = %dec_label_pc_2f3b4
  %v2_2f3e6 = call i32 @function_2f3ed(i32 %tmp100)
  br label %dec_label_pc_2f3e8

dec_label_pc_2f3e8:                               ; preds = %bb, %dec_label_pc_2f3b4
  %v3_2f3e6 = phi i32 [ %v2_2f3e6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f3b4 ]
  ret i32 %v3_2f3e6
}

define i32 @function_2f3ed(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3ed:
  %v0_2f3ee = load i32, i32* @eax, align 8
  ret i32 %v0_2f3ee
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f3f0:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f421

bb:                                               ; preds = %dec_label_pc_2f3f0
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2f41f = call i32 @function_2f426(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2f421

dec_label_pc_2f421:                               ; preds = %bb, %dec_label_pc_2f3f0
  %v4_2f41f = phi i32 [ %v3_2f41f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f3f0 ]
  ret i32 %v4_2f41f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

declare i32 @__stack_chk_fail.1083(i32) local_unnamed_addr

define i32 @function_2f426(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f426:
  %v0_2f427 = load i32, i32* @eax, align 8
  ret i32 %v0_2f427
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE9push_backERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f428:
  %stack_var_-20 = alloca i32, align 4
  %v2_2f445 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2f452 = call i32 @unknown_5275a(i32 %v2_2f445, i32 %arg1)
  %v3_2f461 = load i32, i32* %stack_var_-20, align 4
  %v3_2f46e = call i32 @unknown_61356(i32 %arg1, i32 %v3_2f461, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f47f

bb:                                               ; preds = %dec_label_pc_2f428
  %v1_2f47d = call i32 @function_2f484()
  br label %dec_label_pc_2f47f

dec_label_pc_2f47f:                               ; preds = %bb, %dec_label_pc_2f428
  %v2_2f47d = phi i32 [ %v1_2f47d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f428 ]
  ret i32 %v2_2f47d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f484() local_unnamed_addr {
dec_label_pc_2f484:
  %v0_2f485 = load i32, i32* @eax, align 8
  ret i32 %v0_2f485
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEdeEv() local_unnamed_addr {
dec_label_pc_2f486:
  %eax.global-to-local = alloca i32, align 4
  %v17_2f489 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_2f489
}

define i32 @function_2f48c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f48c:
  %v0_2f48c = load i32, i32* @ebp, align 4
  %v1_2f48c = add i32 %v0_2f48c, 8
  %v2_2f48c = inttoptr i32 %v1_2f48c to i32*
  %v3_2f48c = load i32, i32* %v2_2f48c, align 4
  %v2_2f48f = add i32 %v0_2f48c, -28
  %v3_2f48f = inttoptr i32 %v2_2f48f to i32*
  store i32 %v3_2f48c, i32* %v3_2f48f, align 4
  %v1_2f498 = load i32, i32* @ebp, align 4
  %v2_2f498 = add i32 %v1_2f498, -12
  %v3_2f498 = inttoptr i32 %v2_2f498 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2f498, align 4
  %v0_2f49d = load i32, i32* @ebp, align 4
  %v1_2f49d = add i32 %v0_2f49d, -28
  %v2_2f49d = inttoptr i32 %v1_2f49d to i32*
  %v3_2f49d = load i32, i32* %v2_2f49d, align 4
  %v1_2f4a0 = inttoptr i32 %v3_2f49d to i32*
  %v2_2f4a0 = load i32, i32* %v1_2f4a0, align 4
  %v1_2f4a2 = add i32 %v2_2f4a0, 8
  store i32 %v1_2f4a2, i32* @eax, align 8
  %v1_2f4a5 = add i32 %v0_2f49d, -12
  %v2_2f4a5 = inttoptr i32 %v1_2f4a5 to i32*
  %v3_2f4a5 = load i32, i32* %v2_2f4a5, align 4
  %v4_2f4a8 = icmp eq i32 %v3_2f4a5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2f4a8, label %bb, label %dec_label_pc_2f4b1

bb:                                               ; preds = %dec_label_pc_2f48c
  %v1_2f4af = call i32 @function_2f4b6()
  br label %dec_label_pc_2f4b1

dec_label_pc_2f4b1:                               ; preds = %bb, %dec_label_pc_2f48c
  %v2_2f4af = phi i32 [ %v1_2f4af, %bb ], [ %v1_2f4a2, %dec_label_pc_2f48c ]
  ret i32 %v2_2f4af
}

define i32 @function_2f4b6() local_unnamed_addr {
dec_label_pc_2f4b6:
  %v0_2f4b7 = load i32, i32* @eax, align 8
  ret i32 %v0_2f4b7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f4b8:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f4db

bb:                                               ; preds = %dec_label_pc_2f4b8
  %v2_2f4d9 = call i32 @function_2f4e0(i32 %arg1)
  br label %dec_label_pc_2f4db

dec_label_pc_2f4db:                               ; preds = %bb, %dec_label_pc_2f4b8
  %v3_2f4d9 = phi i32 [ %v2_2f4d9, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f4b8 ]
  ret i32 %v3_2f4d9
}

define i32 @function_2f4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f4e0:
  %v0_2f4e1 = load i32, i32* @eax, align 8
  ret i32 %v0_2f4e1
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot3IbRKSsSD_jNS1_8functionIFbSD_SD_jEEEEENS3_5mutexEEEEEE7destroyEPSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f4e2:
  %v1_2f505 = call i32 @unknown_445b0(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f516

bb:                                               ; preds = %dec_label_pc_2f4e2
  %v1_2f514 = call i32 @function_2f51b()
  br label %dec_label_pc_2f516

dec_label_pc_2f516:                               ; preds = %bb, %dec_label_pc_2f4e2
  %v2_2f514 = phi i32 [ %v1_2f514, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f4e2 ]
  ret i32 %v2_2f514
}

define i32 @function_2f51b() local_unnamed_addr {
dec_label_pc_2f51b:
  %v0_2f51c = load i32, i32* @eax, align 8
  ret i32 %v0_2f51c
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f51e:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f544

bb:                                               ; preds = %dec_label_pc_2f51e
  %v2_2f542 = call i32 @function_2f549(i32 %arg1)
  br label %dec_label_pc_2f544

dec_label_pc_2f544:                               ; preds = %bb, %dec_label_pc_2f51e
  %v3_2f542 = phi i32 [ %v2_2f542, %bb ], [ %arg1, %dec_label_pc_2f51e ]
  ret i32 %v3_2f542
}

define i32 @function_2f549(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f549:
  %v0_2f54a = load i32, i32* @eax, align 8
  ret i32 %v0_2f54a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EEC1ERKST_RKSaISt13_Rb_tree_nodeISN_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f54c:
  ret i32 %arg3
}

define i32 @function_2f562(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f562:
  %v15_2f562 = load i32, i32* @eax, align 8
  ret i32 %v15_2f562
}

define i32 @function_2f564(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f564:
  %v1_2f56a = load i32, i32* @ebp, align 4
  %v2_2f56a = add i32 %v1_2f56a, -12
  %v3_2f56a = inttoptr i32 %v2_2f56a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2f56a, align 4
  %v0_2f56f = load i32, i32* @ebp, align 4
  %v1_2f56f = add i32 %v0_2f56f, -36
  %v2_2f56f = inttoptr i32 %v1_2f56f to i32*
  %v3_2f56f = load i32, i32* %v2_2f56f, align 4
  %v1_2f576 = add i32 %v0_2f56f, -28
  %v2_2f576 = inttoptr i32 %v1_2f576 to i32*
  %v3_2f576 = load i32, i32* %v2_2f576, align 4
  %v2_2f57c = call i32 @unknown_614d8(i32 %v3_2f576, i32 %v3_2f56f)
  %v0_2f581 = load i32, i32* @ebp, align 4
  %v1_2f581 = add i32 %v0_2f581, -28
  %v2_2f581 = inttoptr i32 %v1_2f581 to i32*
  %v3_2f581 = load i32, i32* %v2_2f581, align 4
  %v1_2f584 = add i32 %v3_2f581, 4
  %v2_2f584 = inttoptr i32 %v1_2f584 to i32*
  store i32 0, i32* %v2_2f584, align 4
  %v0_2f58b = load i32, i32* @ebp, align 4
  %v1_2f58b = add i32 %v0_2f58b, -28
  %v2_2f58b = inttoptr i32 %v1_2f58b to i32*
  %v3_2f58b = load i32, i32* %v2_2f58b, align 4
  %v1_2f58e = add i32 %v3_2f58b, 8
  %v2_2f58e = inttoptr i32 %v1_2f58e to i32*
  store i32 0, i32* %v2_2f58e, align 4
  %v0_2f595 = load i32, i32* @ebp, align 4
  %v1_2f595 = add i32 %v0_2f595, -28
  %v2_2f595 = inttoptr i32 %v1_2f595 to i32*
  %v3_2f595 = load i32, i32* %v2_2f595, align 4
  %v1_2f598 = add i32 %v3_2f595, 12
  %v2_2f598 = inttoptr i32 %v1_2f598 to i32*
  store i32 0, i32* %v2_2f598, align 4
  %v0_2f59f = load i32, i32* @ebp, align 4
  %v1_2f59f = add i32 %v0_2f59f, -28
  %v2_2f59f = inttoptr i32 %v1_2f59f to i32*
  %v3_2f59f = load i32, i32* %v2_2f59f, align 4
  %v1_2f5a2 = add i32 %v3_2f59f, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_2f5a2 = inttoptr i32 %v1_2f5a2 to i32*
  store i32 0, i32* %v2_2f5a2, align 4
  %v0_2f5a9 = load i32, i32* @ebp, align 4
  %v1_2f5a9 = add i32 %v0_2f5a9, -28
  %v2_2f5a9 = inttoptr i32 %v1_2f5a9 to i32*
  %v3_2f5a9 = load i32, i32* %v2_2f5a9, align 4
  %v1_2f5ac = add i32 %v3_2f5a9, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_2f5ac = inttoptr i32 %v1_2f5ac to i32*
  store i32 0, i32* %v2_2f5ac, align 4
  %v0_2f5b3 = load i32, i32* @ebp, align 4
  %v1_2f5b3 = add i32 %v0_2f5b3, -28
  %v2_2f5b3 = inttoptr i32 %v1_2f5b3 to i32*
  %v3_2f5b3 = load i32, i32* %v2_2f5b3, align 4
  %v1_2f5b9 = call i32 @unknown_6151a(i32 %v3_2f5b3)
  %v0_2f5be = load i32, i32* @ebp, align 4
  %v1_2f5be = add i32 %v0_2f5be, -12
  %v2_2f5be = inttoptr i32 %v1_2f5be to i32*
  %v3_2f5be = load i32, i32* %v2_2f5be, align 4
  %v3_2f5c1 = xor i32 %v3_2f5be, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2f5c1 = icmp eq i32 %v3_2f5c1, 0
  store i32 %v3_2f5c1, i32* @eax, align 8
  br i1 %v4_2f5c1, label %bb, label %dec_label_pc_2f5ca

bb:                                               ; preds = %dec_label_pc_2f564
  %v1_2f5c8 = call i32 @function_2f5cf()
  br label %dec_label_pc_2f5ca

dec_label_pc_2f5ca:                               ; preds = %bb, %dec_label_pc_2f564
  %v2_2f5c8 = phi i32 [ %v1_2f5c8, %bb ], [ %v3_2f5c1, %dec_label_pc_2f564 ]
  ret i32 %v2_2f5c8
}

define i32 @function_2f5cf() local_unnamed_addr {
dec_label_pc_2f5cf:
  %v0_2f5d0 = load i32, i32* @eax, align 8
  ret i32 %v0_2f5d0
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f5d2:
  ret i32 %arg1
}

define i32 @function_2f5dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f5dc:
  %v0_2f5dc = load i32, i32* @ebp, align 4
  %v1_2f5dc = add i32 %v0_2f5dc, 1
  store i32 %v1_2f5dc, i32* @ebp, align 4
  %v2_2f5e4 = add i32 %v0_2f5dc, -11
  %v3_2f5e4 = inttoptr i32 %v2_2f5e4 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_2f5e4, align 4
  %v0_2f5e9 = load i32, i32* @ebp, align 4
  %v1_2f5e9 = add i32 %v0_2f5e9, -28
  %v2_2f5e9 = inttoptr i32 %v1_2f5e9 to i32*
  %v3_2f5e9 = load i32, i32* %v2_2f5e9, align 4
  %v1_2f5ec = add i32 %v3_2f5e9, 8
  %v2_2f5ec = inttoptr i32 %v1_2f5ec to i32*
  %v3_2f5ec = load i32, i32* %v2_2f5ec, align 4
  store i32 %v3_2f5ec, i32* @eax, align 8
  %v1_2f5ef = add i32 %v0_2f5e9, -12
  %v2_2f5ef = inttoptr i32 %v1_2f5ef to i32*
  %v3_2f5ef = load i32, i32* %v2_2f5ef, align 4
  %v4_2f5f2 = icmp eq i32 %v3_2f5ef, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2f5f2, label %bb, label %dec_label_pc_2f5fb

bb:                                               ; preds = %dec_label_pc_2f5dc
  %v1_2f5f9 = call i32 @function_2f600()
  br label %dec_label_pc_2f5fb

dec_label_pc_2f5fb:                               ; preds = %bb, %dec_label_pc_2f5dc
  %v2_2f5f9 = phi i32 [ %v1_2f5f9, %bb ], [ %v3_2f5ec, %dec_label_pc_2f5dc ]
  ret i32 %v2_2f5f9
}

declare i32 @__stack_chk_fail.1090(i32, i32) local_unnamed_addr

define i32 @function_2f600() local_unnamed_addr {
dec_label_pc_2f600:
  %v0_2f601 = load i32, i32* @eax, align 8
  ret i32 %v0_2f601
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f602:
  %v2_2f633 = call i32 @unknown_61626(i32 %arg1, i32 %arg2)
  %v2_2f641 = add i32 %v2_2f633, 4
  %v3_2f641 = inttoptr i32 %v2_2f641 to i32*
  store i32 %arg3, i32* %v3_2f641, align 4
  %v1_2f654 = call i32 @unknown_6168f(i32 %arg2)
  ret i32 %v1_2f654

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f662(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f662:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f662 = load i32, i32* @eax, align 8
  %v11_2f662 = and i32 %v0_2f662, -252
  store i32 %v11_2f662, i32* %eax.global-to-local, align 8
  %v0_2f664 = load i32, i32* @ebp, align 4
  %v1_2f664 = add i32 %v0_2f664, -28
  %v2_2f664 = inttoptr i32 %v1_2f664 to i32*
  %v3_2f664 = load i32, i32* %v2_2f664, align 4
  store i32 %v3_2f664, i32* %eax.global-to-local, align 8
  %v1_2f66a = call i32 @unknown_5ec04(i32 %v3_2f664)
  store i32 %v1_2f66a, i32* %eax.global-to-local, align 8
  %v0_2f671 = load i32, i32* @ebp, align 4
  %v1_2f671 = add i32 %v0_2f671, -20
  %v2_2f671 = inttoptr i32 %v1_2f671 to i32*
  %v3_2f671 = load i32, i32* %v2_2f671, align 4
  store i32 %v3_2f671, i32* %eax.global-to-local, align 8
  %v2_2f674 = add i32 %v3_2f671, 12
  %v3_2f674 = inttoptr i32 %v2_2f674 to i32*
  store i32 %v1_2f66a, i32* %v3_2f674, align 4
  %v0_2f677 = load i32, i32* @ebp, align 4
  %v1_2f677 = add i32 %v0_2f677, -20
  %v2_2f677 = inttoptr i32 %v1_2f677 to i32*
  %v3_2f677 = load i32, i32* %v2_2f677, align 4
  store i32 %v3_2f677, i32* %eax.global-to-local, align 8
  %v2_2f67a = add i32 %v0_2f677, -36
  %v3_2f67a = inttoptr i32 %v2_2f67a to i32*
  store i32 %v3_2f677, i32* %v3_2f67a, align 4
  %v0_2f67d = load i32, i32* @ebp, align 4
  %v1_2f67d = add i32 %v0_2f67d, -32
  %v2_2f67d = inttoptr i32 %v1_2f67d to i32*
  %v3_2f67d = load i32, i32* %v2_2f67d, align 4
  store i32 %v3_2f67d, i32* %eax.global-to-local, align 8
  %v1_2f683 = call i32 @unknown_616bf(i32 %v3_2f67d)
  store i32 %v1_2f683, i32* %eax.global-to-local, align 8
  %v1_2f688 = load i32, i32* @ebp, align 4
  %v2_2f688 = add i32 %v1_2f688, -32
  %v3_2f688 = inttoptr i32 %v2_2f688 to i32*
  store i32 %v1_2f683, i32* %v3_2f688, align 4
  br label %dec_label_pc_2f6fb

dec_label_pc_2f68d:                               ; preds = %dec_label_pc_2f6fb
  %v3_2f68d = load i32, i32* %v2_2f6fb, align 4
  store i32 %v3_2f68d, i32* %eax.global-to-local, align 8
  %v1_2f694 = add i32 %v0_2f6fb, -28
  %v2_2f694 = inttoptr i32 %v1_2f694 to i32*
  %v3_2f694 = load i32, i32* %v2_2f694, align 4
  store i32 %v3_2f694, i32* %eax.global-to-local, align 8
  %v2_2f69a = call i32 @unknown_61626(i32 %v3_2f694, i32 %v3_2f68d)
  store i32 %v2_2f69a, i32* %eax.global-to-local, align 8
  %v1_2f69f = load i32, i32* @ebp, align 4
  %v2_2f69f = add i32 %v1_2f69f, -16
  %v3_2f69f = inttoptr i32 %v2_2f69f to i32*
  store i32 %v2_2f69a, i32* %v3_2f69f, align 4
  %v0_2f6a2 = load i32, i32* @ebp, align 4
  %v1_2f6a2 = add i32 %v0_2f6a2, -36
  %v2_2f6a2 = inttoptr i32 %v1_2f6a2 to i32*
  %v3_2f6a2 = load i32, i32* %v2_2f6a2, align 4
  store i32 %v3_2f6a2, i32* %eax.global-to-local, align 8
  %v1_2f6a5 = add i32 %v0_2f6a2, -16
  %v2_2f6a5 = inttoptr i32 %v1_2f6a5 to i32*
  %v3_2f6a5 = load i32, i32* %v2_2f6a5, align 4
  %v2_2f6a8 = add i32 %v3_2f6a2, 8
  %v3_2f6a8 = inttoptr i32 %v2_2f6a8 to i32*
  store i32 %v3_2f6a5, i32* %v3_2f6a8, align 4
  %v0_2f6ab = load i32, i32* @ebp, align 4
  %v1_2f6ab = add i32 %v0_2f6ab, -16
  %v2_2f6ab = inttoptr i32 %v1_2f6ab to i32*
  %v3_2f6ab = load i32, i32* %v2_2f6ab, align 4
  store i32 %v3_2f6ab, i32* %eax.global-to-local, align 8
  %v1_2f6ae = add i32 %v0_2f6ab, -36
  %v2_2f6ae = inttoptr i32 %v1_2f6ae to i32*
  %v3_2f6ae = load i32, i32* %v2_2f6ae, align 4
  %v2_2f6b1 = add i32 %v3_2f6ab, 4
  %v3_2f6b1 = inttoptr i32 %v2_2f6b1 to i32*
  store i32 %v3_2f6ae, i32* %v3_2f6b1, align 4
  %v0_2f6b4 = load i32, i32* @ebp, align 4
  %v1_2f6b4 = add i32 %v0_2f6b4, -32
  %v2_2f6b4 = inttoptr i32 %v1_2f6b4 to i32*
  %v3_2f6b4 = load i32, i32* %v2_2f6b4, align 4
  store i32 %v3_2f6b4, i32* %eax.global-to-local, align 8
  %v1_2f6b7 = add i32 %v3_2f6b4, 12
  %v2_2f6b7 = inttoptr i32 %v1_2f6b7 to i32*
  %v3_2f6b7 = load i32, i32* %v2_2f6b7, align 4
  store i32 %v3_2f6b7, i32* %eax.global-to-local, align 8
  %v1_2f6ba = icmp eq i32 %v3_2f6b7, 0
  br i1 %v1_2f6ba, label %dec_label_pc_2f6e7, label %dec_label_pc_2f6be

dec_label_pc_2f6be:                               ; preds = %dec_label_pc_2f68d
  %v3_2f6be = load i32, i32* %v2_2f6b4, align 4
  store i32 %v3_2f6be, i32* %eax.global-to-local, align 8
  %v1_2f6c4 = call i32 @unknown_6168f(i32 %v3_2f6be)
  store i32 %v1_2f6c4, i32* %eax.global-to-local, align 8
  %v0_2f6c9 = load i32, i32* @ebp, align 4
  %v1_2f6d4 = add i32 %v0_2f6c9, -28
  %v2_2f6d4 = inttoptr i32 %v1_2f6d4 to i32*
  %v3_2f6d4 = load i32, i32* %v2_2f6d4, align 4
  store i32 %v3_2f6d4, i32* %eax.global-to-local, align 8
  %v1_2f6da = call i32 @unknown_5ec04(i32 %v3_2f6d4)
  store i32 %v1_2f6da, i32* %eax.global-to-local, align 8
  %v0_2f6e1 = load i32, i32* @ebp, align 4
  %v1_2f6e1 = add i32 %v0_2f6e1, -16
  %v2_2f6e1 = inttoptr i32 %v1_2f6e1 to i32*
  %v3_2f6e1 = load i32, i32* %v2_2f6e1, align 4
  store i32 %v3_2f6e1, i32* %eax.global-to-local, align 8
  %v2_2f6e4 = add i32 %v3_2f6e1, 12
  %v3_2f6e4 = inttoptr i32 %v2_2f6e4 to i32*
  store i32 %v1_2f6da, i32* %v3_2f6e4, align 4
  %v0_2f6e7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2f6e7

dec_label_pc_2f6e7:                               ; preds = %dec_label_pc_2f6be, %dec_label_pc_2f68d
  %v0_2f6e7 = phi i32 [ %v0_2f6e7.pre, %dec_label_pc_2f6be ], [ %v0_2f6b4, %dec_label_pc_2f68d ]
  %v1_2f6e7 = add i32 %v0_2f6e7, -16
  %v2_2f6e7 = inttoptr i32 %v1_2f6e7 to i32*
  %v3_2f6e7 = load i32, i32* %v2_2f6e7, align 4
  store i32 %v3_2f6e7, i32* %eax.global-to-local, align 8
  %v2_2f6ea = add i32 %v0_2f6e7, -36
  %v3_2f6ea = inttoptr i32 %v2_2f6ea to i32*
  store i32 %v3_2f6e7, i32* %v3_2f6ea, align 4
  %v0_2f6ed = load i32, i32* @ebp, align 4
  %v1_2f6ed = add i32 %v0_2f6ed, -32
  %v2_2f6ed = inttoptr i32 %v1_2f6ed to i32*
  %v3_2f6ed = load i32, i32* %v2_2f6ed, align 4
  store i32 %v3_2f6ed, i32* %eax.global-to-local, align 8
  %v1_2f6f3 = call i32 @unknown_616bf(i32 %v3_2f6ed)
  store i32 %v1_2f6f3, i32* %eax.global-to-local, align 8
  %v1_2f6f8 = load i32, i32* @ebp, align 4
  %v2_2f6f8 = add i32 %v1_2f6f8, -32
  %v3_2f6f8 = inttoptr i32 %v2_2f6f8 to i32*
  store i32 %v1_2f6f3, i32* %v3_2f6f8, align 4
  br label %dec_label_pc_2f6fb

dec_label_pc_2f6fb:                               ; preds = %dec_label_pc_2f6e7, %dec_label_pc_2f662
  %v0_2f6fb = load i32, i32* @ebp, align 4
  %v1_2f6fb = add i32 %v0_2f6fb, -32
  %v2_2f6fb = inttoptr i32 %v1_2f6fb to i32*
  %v3_2f6fb = load i32, i32* %v2_2f6fb, align 4
  %v10_2f6fb = icmp eq i32 %v3_2f6fb, 0
  %v1_2f6ff = icmp eq i1 %v10_2f6fb, false
  %v2_2f6ff = zext i1 %v1_2f6ff to i32
  %v3_2f6ff = load i32, i32* %eax.global-to-local, align 8
  %v4_2f6ff = and i32 %v3_2f6ff, -256
  %v5_2f6ff = or i32 %v2_2f6ff, %v4_2f6ff
  store i32 %v5_2f6ff, i32* %eax.global-to-local, align 8
  %v5_2f702 = icmp eq i1 %v1_2f6ff, false
  %v1_2f704 = icmp eq i1 %v5_2f702, false
  br i1 %v1_2f704, label %dec_label_pc_2f68d, label %dec_label_pc_2f706

dec_label_pc_2f706:                               ; preds = %dec_label_pc_2f6fb
  %v1_2f706 = add i32 %v0_2f6fb, -20
  %v2_2f706 = inttoptr i32 %v1_2f706 to i32*
  %v3_2f706 = load i32, i32* %v2_2f706, align 4
  store i32 %v3_2f706, i32* @eax, align 8
  %v1_2f709 = add i32 %v0_2f6fb, -12
  %v2_2f709 = inttoptr i32 %v1_2f709 to i32*
  %v3_2f709 = load i32, i32* %v2_2f709, align 4
  %v4_2f70c = icmp eq i32 %v3_2f709, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2f70c, label %bb, label %dec_label_pc_2f715

bb:                                               ; preds = %dec_label_pc_2f706
  %v1_2f713 = call i32 @function_2f74c()
  store i32 %v1_2f713, i32* @eax, align 8
  br label %dec_label_pc_2f715

dec_label_pc_2f715:                               ; preds = %bb, %dec_label_pc_2f706
  %v0_2f715 = call i32 @function_2f747()
  store i32 %v0_2f715, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f715

; uselistorder directives
  uselistorder i32* %v2_2f6fb, { 1, 0 }
  uselistorder i32 %v0_2f6fb, { 1, 0, 3, 2 }
  uselistorder i32 %v0_2f6e7, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 (i32)* @unknown_616bf, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5ec04, { 1, 0 }
}

define i32 @function_2f718() local_unnamed_addr {
dec_label_pc_2f718:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f718 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2f718
}

define i32 @function_2f744(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2f744:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f747() local_unnamed_addr {
dec_label_pc_2f747:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2f74c() local_unnamed_addr {
dec_label_pc_2f74c:
  %v0_2f751 = load i32, i32* @eax, align 8
  ret i32 %v0_2f751
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f752:
  %v1_2f76c = add i32 %arg1, 8
  %v2_2f76c = inttoptr i32 %v1_2f76c to i32*
  %v3_2f76c = load i32, i32* %v2_2f76c, align 4
  store i32 %v3_2f76c, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f77b

bb:                                               ; preds = %dec_label_pc_2f752
  %v2_2f779 = call i32 @function_2f780(i32 %arg1)
  br label %dec_label_pc_2f77b

dec_label_pc_2f77b:                               ; preds = %bb, %dec_label_pc_2f752
  %v3_2f779 = phi i32 [ %v2_2f779, %bb ], [ %v3_2f76c, %dec_label_pc_2f752 ]
  ret i32 %v3_2f779
}

define i32 @function_2f780(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f780:
  %v0_2f781 = load i32, i32* @eax, align 8
  ret i32 %v0_2f781
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f782:
  ret i32 %arg1
}

define i32 @function_2f792(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f792:
  %v2_2f792 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_2f792 = load i32, i32* @eax, align 8
  %v4_2f792 = trunc i32 %v3_2f792 to i8
  %v5_2f792 = add i8 %v4_2f792, %v2_2f792
  %v21_2f792 = inttoptr i32 %v3_2f792 to i8*
  store i8 %v5_2f792, i8* %v21_2f792, align 1
  %v0_2f794 = load i32, i32* @eax, align 8
  %v1_2f794 = load i32, i32* @ebp, align 4
  %v2_2f794 = add i32 %v1_2f794, -12
  %v3_2f794 = inttoptr i32 %v2_2f794 to i32*
  store i32 %v0_2f794, i32* %v3_2f794, align 4
  %v0_2f799 = load i32, i32* @ebp, align 4
  %v1_2f799 = add i32 %v0_2f799, -28
  %v2_2f799 = inttoptr i32 %v1_2f799 to i32*
  %v3_2f799 = load i32, i32* %v2_2f799, align 4
  %v1_2f79c = add i32 %v3_2f799, 8
  store i32 %v1_2f79c, i32* @eax, align 8
  %v1_2f79f = add i32 %v0_2f799, -12
  %v2_2f79f = inttoptr i32 %v1_2f79f to i32*
  %v3_2f79f = load i32, i32* %v2_2f79f, align 4
  %v4_2f7a2 = icmp eq i32 %v3_2f79f, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2f7a2, label %bb, label %dec_label_pc_2f7ab

bb:                                               ; preds = %dec_label_pc_2f792
  %v1_2f7a9 = call i32 @function_2f7b0()
  br label %dec_label_pc_2f7ab

dec_label_pc_2f7ab:                               ; preds = %bb, %dec_label_pc_2f792
  %v2_2f7a9 = phi i32 [ %v1_2f7a9, %bb ], [ %v1_2f79c, %dec_label_pc_2f792 ]
  ret i32 %v2_2f7a9
}

define i32 @function_2f7b0() local_unnamed_addr {
dec_label_pc_2f7b0:
  %v0_2f7b1 = load i32, i32* @eax, align 8
  ret i32 %v0_2f7b1
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7b2:
  store i32 %arg1, i32* @eax, align 8
  %v1_2f7cf = call i32 @function_3017b(i32 %arg1)
  store i32 %v1_2f7cf, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f7e0

bb:                                               ; preds = %dec_label_pc_2f7b2
  %v1_2f7de = call i32 @function_2f7e5()
  br label %dec_label_pc_2f7e0

dec_label_pc_2f7e0:                               ; preds = %bb, %dec_label_pc_2f7b2
  %v2_2f7de = phi i32 [ %v1_2f7de, %bb ], [ %v1_2f7cf, %dec_label_pc_2f7b2 ]
  ret i32 %v2_2f7de

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f7e5() local_unnamed_addr {
dec_label_pc_2f7e5:
  %v0_2f7e6 = load i32, i32* @eax, align 8
  ret i32 %v0_2f7e6
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7e8:
  %v1_2f802 = add i32 %arg1, 12
  store i32 %v1_2f802, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f811

bb:                                               ; preds = %dec_label_pc_2f7e8
  %v2_2f80f = call i32 @function_2f816(i32 %arg1)
  br label %dec_label_pc_2f811

dec_label_pc_2f811:                               ; preds = %bb, %dec_label_pc_2f7e8
  %v3_2f80f = phi i32 [ %v2_2f80f, %bb ], [ %v1_2f802, %dec_label_pc_2f7e8 ]
  ret i32 %v3_2f80f
}

define i32 @function_2f816(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f816:
  %v0_2f817 = load i32, i32* @eax, align 8
  ret i32 %v0_2f817
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f818:
  %v1_2f835 = call i32 @function_30228(i32 %arg1)
  store i32 %v1_2f835, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f846

bb:                                               ; preds = %dec_label_pc_2f818
  %v1_2f844 = call i32 @function_2f84b()
  br label %dec_label_pc_2f846

dec_label_pc_2f846:                               ; preds = %bb, %dec_label_pc_2f818
  %v2_2f844 = phi i32 [ %v1_2f844, %bb ], [ %v1_2f835, %dec_label_pc_2f818 ]
  ret i32 %v2_2f844
}

define i32 @function_2f84b() local_unnamed_addr {
dec_label_pc_2f84b:
  %v0_2f84c = load i32, i32* @eax, align 8
  ret i32 %v0_2f84c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f84e:
  %v1_2f868 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_2f868, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f877

bb:                                               ; preds = %dec_label_pc_2f84e
  %v2_2f875 = call i32 @function_2f87c(i32 %arg1)
  br label %dec_label_pc_2f877

dec_label_pc_2f877:                               ; preds = %bb, %dec_label_pc_2f84e
  %v3_2f875 = phi i32 [ %v2_2f875, %bb ], [ %v1_2f868, %dec_label_pc_2f84e ]
  ret i32 %v3_2f875
}

define i32 @function_2f87c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f87c:
  %v0_2f87d = load i32, i32* @eax, align 8
  ret i32 %v0_2f87d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f87e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f8a1

bb:                                               ; preds = %dec_label_pc_2f87e
  %v2_2f89f = call i32 @function_2f8a6(i32 %arg1)
  br label %dec_label_pc_2f8a1

dec_label_pc_2f8a1:                               ; preds = %bb, %dec_label_pc_2f87e
  %v3_2f89f = phi i32 [ %v2_2f89f, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f87e ]
  ret i32 %v3_2f89f
}

define i32 @function_2f8a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f8a6:
  %v0_2f8a7 = load i32, i32* @eax, align 8
  ret i32 %v0_2f8a7
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISN_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8a8:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f8d9

bb:                                               ; preds = %dec_label_pc_2f8a8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2f8d7 = call i32 @function_2f8de(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2f8d9

dec_label_pc_2f8d9:                               ; preds = %bb, %dec_label_pc_2f8a8
  %v4_2f8d7 = phi i32 [ %v3_2f8d7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2f8a8 ]
  ret i32 %v4_2f8d7

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2f8de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8de:
  %v0_2f8df = load i32, i32* @eax, align 8
  ret i32 %v0_2f8df
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8e0:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2f90c

bb:                                               ; preds = %dec_label_pc_2f8e0
  %v3_2f90a = call i32 @function_2f911(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2f90c

dec_label_pc_2f90c:                               ; preds = %bb, %dec_label_pc_2f8e0
  %v4_2f90a = phi i32 [ %v3_2f90a, %bb ], [ %arg1, %dec_label_pc_2f8e0 ]
  ret i32 %v4_2f90a
}

define i32 @function_2f911(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f911:
  %v0_2f912 = load i32, i32* @eax, align 8
  ret i32 %v0_2f912
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f916:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v1_2f949 = call i32 @unknown_52b26(i32 %arg2)
  %v1_2f961 = call i32 @unknown_61a04(i32 %arg2)
  %v1_2f966 = icmp eq i32 %v1_2f961, 0
  br i1 %v1_2f966, label %dec_label_pc_2f9b3, label %dec_label_pc_2f96a

dec_label_pc_2f96a:                               ; preds = %dec_label_pc_2f916
  %v2_2f971 = ptrtoint i32* %stack_var_-21 to i32
  %v2_2f977 = call i32 @unknown_58230(i32 %v2_2f971, i32 %arg4)
  %v1_2f984 = call i32 @unknown_5f164(i32 %arg2)
  %v1_2f989 = inttoptr i32 %v1_2f984 to i32*
  %v2_2f989 = load i32, i32* %v1_2f989, align 4
  %v1_2f98e = call i32 @unknown_583f1(i32 %v2_2f989)
  %v3_2f9a3 = call i32 @unknown_51056(i32 %arg2, i32 %v1_2f98e, i32 %v2_2f977)
  %v4_2f9a8 = trunc i32 %v3_2f9a3 to i8
  %v5_2f9a8 = icmp eq i8 %v4_2f9a8, 0
  br i1 %v5_2f9a8, label %dec_label_pc_2f9b3, label %dec_label_pc_2f9b8

dec_label_pc_2f9b3:                               ; preds = %dec_label_pc_2f96a, %dec_label_pc_2f916
  br label %dec_label_pc_2f9b8

dec_label_pc_2f9b8:                               ; preds = %dec_label_pc_2f96a, %dec_label_pc_2f9b3
  %storemerge = phi i1 [ true, %dec_label_pc_2f9b3 ], [ false, %dec_label_pc_2f96a ]
  br i1 %storemerge, label %dec_label_pc_2f9f6, label %dec_label_pc_2f9bc

dec_label_pc_2f9bc:                               ; preds = %dec_label_pc_2f9b8
  %v1_2f9c2 = call i32 @unknown_5f164(i32 %arg2)
  %v1_2f9c7 = inttoptr i32 %v1_2f9c2 to i32*
  %v2_2f9c7 = load i32, i32* %v1_2f9c7, align 4
  %v5_2f9e9 = call i32 @unknown_58264(i32 %tmp116, i32 %arg2, i32 0, i32 %v2_2f9c7, i32 %arg4)
  ret i32 %v5_2f9e9

dec_label_pc_2f9f6:                               ; preds = %dec_label_pc_2f9b8
  %v2_2f9f6 = ptrtoint i32* %stack_var_-52 to i32
  %v3_2fa0a = call i32 @unknown_52e94(i32 %v2_2f9f6, i32 %arg2, i32 %arg4)
  %v3_2fa15 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_2fa15, i32* %arg1, align 4
  ret i32 %tmp116

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_2f9b8, { 1, 0 }
}

define i32 @function_2fa1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fa1c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fa1c = load i32, i32* @eax, align 8
  %v5_2fa1c = mul i32 %v0_2fa1c, 2
  %v20_2fa1c = and i32 %v5_2fa1c, 254
  %v22_2fa1c = and i32 %v0_2fa1c, -256
  %v23_2fa1c = or i32 %v20_2fa1c, %v22_2fa1c
  store i32 %v23_2fa1c, i32* %eax.global-to-local, align 8
  %v0_2fa1e = load i32, i32* @ebx, align 8
  %v1_2fa1e = add i32 %v0_2fa1e, 76135493
  %v2_2fa1e = inttoptr i32 %v1_2fa1e to i8*
  %v3_2fa1e = load i8, i8* %v2_2fa1e, align 1
  %v4_2fa1e = load i32, i32* @ecx, align 4
  %v5_2fa1e = trunc i32 %v4_2fa1e to i8
  %v6_2fa1e = add i8 %v5_2fa1e, %v3_2fa1e
  store i8 %v6_2fa1e, i8* %v2_2fa1e, align 1
  %v0_2fa24 = load i32, i32* %eax.global-to-local, align 8
  %v11_2fa24 = and i32 %v0_2fa24, -24
  store i32 %v11_2fa24, i32* %eax.global-to-local, align 8
  ret i32 %v11_2fa24

; uselistorder directives
  uselistorder i32 %v11_2fa24, { 1, 0 }
  uselistorder i32 %v0_2fa1c, { 1, 0 }
}

define i32 @function_2fa27() local_unnamed_addr {
dec_label_pc_2fa27:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2fa27 = load i32, i32* %eax.global-to-local, align 8
  %v1_2fa27 = load i32, i32* %edx.global-to-local, align 8
  %v2_2fa27 = inttoptr i32 %v1_2fa27 to i32*
  store i32 %v0_2fa27, i32* %v2_2fa27, align 4
  %v0_2fa29 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2fa29 = add i32 %v0_2fa29, -1203401789
  %v2_2fa29 = inttoptr i32 %v1_2fa29 to i8*
  %v3_2fa29 = load i8, i8* %v2_2fa29, align 1
  %v5_2fa29 = trunc i32 %v0_2fa29 to i8
  %v6_2fa29 = add i8 %v3_2fa29, %v5_2fa29
  store i8 %v6_2fa29, i8* %v2_2fa29, align 1
  %v0_2fa2f = load i32, i32* %eax.global-to-local, align 8
  %v0_2fa33 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fa33 = add i32 %v0_2fa33, -16
  store i32 %v1_2fa33, i32* %eax.global-to-local, align 8
  %v2_2fa39 = call i32 @unknown_58230(i32 %v1_2fa33, i32 %v0_2fa2f)
  store i32 %v2_2fa39, i32* %eax.global-to-local, align 8
  %v1_2fa3e = add i32 %v0_2fa33, -64
  %v2_2fa3e = inttoptr i32 %v1_2fa3e to i32*
  %v3_2fa3e = load i32, i32* %v2_2fa3e, align 4
  store i32 %v3_2fa3e, i32* %edx.global-to-local, align 8
  %v0_2fa41 = load i32, i32* %ebx.global-to-local, align 8
  %v3_2fa4c = call i32 @unknown_51056(i32 %v3_2fa3e, i32 %v2_2fa39, i32 %v0_2fa41)
  store i32 %v3_2fa4c, i32* %eax.global-to-local, align 8
  %v4_2fa51 = trunc i32 %v3_2fa4c to i8
  %v5_2fa51 = icmp eq i8 %v4_2fa51, 0
  %v0_2fb99 = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v5_2fa51, label %dec_label_pc_2fb99, label %dec_label_pc_2fa59

dec_label_pc_2fa59:                               ; preds = %dec_label_pc_2fa27
  %v1_2fa59 = add i32 %v0_2fb99, -68
  %v2_2fa59 = inttoptr i32 %v1_2fa59 to i32*
  %v3_2fa59 = load i32, i32* %v2_2fa59, align 4
  store i32 %v3_2fa59, i32* %eax.global-to-local, align 8
  %v2_2fa5c = add i32 %v0_2fb99, -24
  %v3_2fa5c = inttoptr i32 %v2_2fa5c to i32*
  store i32 %v3_2fa59, i32* %v3_2fa5c, align 4
  %v0_2fa5f = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fa5f = add i32 %v0_2fa5f, -68
  %v2_2fa5f = inttoptr i32 %v1_2fa5f to i32*
  %v3_2fa5f = load i32, i32* %v2_2fa5f, align 4
  store i32 %v3_2fa5f, i32* %ebx.global-to-local, align 8
  %v1_2fa62 = add i32 %v0_2fa5f, -64
  %v2_2fa62 = inttoptr i32 %v1_2fa62 to i32*
  %v3_2fa62 = load i32, i32* %v2_2fa62, align 4
  store i32 %v3_2fa62, i32* %eax.global-to-local, align 8
  %v1_2fa68 = call i32 @unknown_5f0fe(i32 %v3_2fa62)
  store i32 %v1_2fa68, i32* %eax.global-to-local, align 8
  %v1_2fa6d = inttoptr i32 %v1_2fa68 to i32*
  %v2_2fa6d = load i32, i32* %v1_2fa6d, align 4
  %v0_2fa6f = load i32, i32* %ebx.global-to-local, align 8
  %v12_2fa6f = icmp eq i32 %v0_2fa6f, %v2_2fa6d
  %v1_2fa71 = zext i1 %v12_2fa6f to i32
  %v3_2fa71 = and i32 %v2_2fa6d, -256
  %v4_2fa71 = or i32 %v1_2fa71, %v3_2fa71
  store i32 %v4_2fa71, i32* %eax.global-to-local, align 8
  %v5_2fa74 = icmp eq i1 %v12_2fa6f, false
  %v0_2fabb = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v5_2fa74, label %dec_label_pc_2fabb, label %dec_label_pc_2fa78

dec_label_pc_2fa78:                               ; preds = %dec_label_pc_2fa59
  %v1_2fa78 = add i32 %v0_2fabb, -64
  %v2_2fa78 = inttoptr i32 %v1_2fa78 to i32*
  %v3_2fa78 = load i32, i32* %v2_2fa78, align 4
  store i32 %v3_2fa78, i32* %eax.global-to-local, align 8
  %v1_2fa7e = call i32 @unknown_5f0fe(i32 %v3_2fa78)
  store i32 %v1_2fa7e, i32* %eax.global-to-local, align 8
  %v1_2fa83 = inttoptr i32 %v1_2fa7e to i32*
  %v2_2fa83 = load i32, i32* %v1_2fa83, align 4
  store i32 %v2_2fa83, i32* %ebx.global-to-local, align 8
  %v0_2fa85 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fa85 = add i32 %v0_2fa85, -64
  %v2_2fa85 = inttoptr i32 %v1_2fa85 to i32*
  %v3_2fa85 = load i32, i32* %v2_2fa85, align 4
  store i32 %v3_2fa85, i32* %eax.global-to-local, align 8
  %v1_2fa8b = call i32 @unknown_5f0fe(i32 %v3_2fa85)
  store i32 %v1_2fa8b, i32* %eax.global-to-local, align 8
  %v1_2fa90 = inttoptr i32 %v1_2fa8b to i32*
  %v2_2fa90 = load i32, i32* %v1_2fa90, align 4
  store i32 %v2_2fa90, i32* %edx.global-to-local, align 8
  %v0_2fa92 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fa92 = add i32 %v0_2fa92, -60
  %v2_2fa92 = inttoptr i32 %v1_2fa92 to i32*
  %v3_2fa92 = load i32, i32* %v2_2fa92, align 4
  store i32 %v3_2fa92, i32* %eax.global-to-local, align 8
  %v1_2fa95 = add i32 %v0_2fa92, -72
  %v2_2fa95 = inttoptr i32 %v1_2fa95 to i32*
  %v3_2fa95 = load i32, i32* %v2_2fa95, align 4
  store i32 %v3_2fa95, i32* %ecx.global-to-local, align 4
  %v0_2fa9c = load i32, i32* %ebx.global-to-local, align 8
  %v1_2faa4 = add i32 %v0_2fa92, -64
  %v2_2faa4 = inttoptr i32 %v1_2faa4 to i32*
  %v3_2faa4 = load i32, i32* %v2_2faa4, align 4
  store i32 %v3_2faa4, i32* %edx.global-to-local, align 8
  %v5_2faae = call i32 @unknown_58264(i32 %v3_2fa92, i32 %v3_2faa4, i32 %v2_2fa90, i32 %v0_2fa9c, i32 %v3_2fa95)
  store i32 %v5_2faae, i32* %eax.global-to-local, align 8
  ret i32 %v5_2faae

dec_label_pc_2fabb:                               ; preds = %dec_label_pc_2fa59
  %v1_2fabb = add i32 %v0_2fabb, -72
  %v2_2fabb = inttoptr i32 %v1_2fabb to i32*
  %v3_2fabb = load i32, i32* %v2_2fabb, align 4
  %v1_2fac2 = add i32 %v0_2fabb, -15
  store i32 %v1_2fac2, i32* %eax.global-to-local, align 8
  %v2_2fac8 = call i32 @unknown_58230(i32 %v1_2fac2, i32 %v3_2fabb)
  store i32 %v2_2fac8, i32* %ebx.global-to-local, align 8
  %v0_2facf = load i32, i32* %ebp.global-to-local, align 4
  %v1_2facf = add i32 %v0_2facf, -24
  store i32 %v1_2facf, i32* %eax.global-to-local, align 8
  %v1_2fad5 = call i32 @unknown_61a34(i32 %v1_2facf)
  store i32 %v1_2fad5, i32* %eax.global-to-local, align 8
  %v1_2fada = inttoptr i32 %v1_2fad5 to i32*
  %v2_2fada = load i32, i32* %v1_2fada, align 4
  store i32 %v2_2fada, i32* %eax.global-to-local, align 8
  %v1_2fadf = call i32 @unknown_583f1(i32 %v2_2fada)
  store i32 %v1_2fadf, i32* %eax.global-to-local, align 8
  store i32 %v1_2fadf, i32* %edx.global-to-local, align 8
  %v0_2fae6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fae6 = add i32 %v0_2fae6, -64
  %v2_2fae6 = inttoptr i32 %v1_2fae6 to i32*
  %v3_2fae6 = load i32, i32* %v2_2fae6, align 4
  store i32 %v3_2fae6, i32* %eax.global-to-local, align 8
  %v0_2fae9 = load i32, i32* %ebx.global-to-local, align 8
  %v3_2faf4 = call i32 @unknown_51056(i32 %v3_2fae6, i32 %v1_2fadf, i32 %v0_2fae9)
  store i32 %v3_2faf4, i32* %eax.global-to-local, align 8
  %v4_2faf9 = trunc i32 %v3_2faf4 to i8
  %v5_2faf9 = icmp eq i8 %v4_2faf9, 0
  %v0_2fb70 = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v5_2faf9, label %dec_label_pc_2fb70, label %dec_label_pc_2fafd

dec_label_pc_2fafd:                               ; preds = %dec_label_pc_2fabb
  %v1_2fafd = add i32 %v0_2fb70, -24
  %v2_2fafd = inttoptr i32 %v1_2fafd to i32*
  %v3_2fafd = load i32, i32* %v2_2fafd, align 4
  store i32 %v3_2fafd, i32* %eax.global-to-local, align 8
  %v1_2fb03 = call i32 @unknown_619a3(i32 %v3_2fafd)
  %v1_2fb08 = icmp eq i32 %v1_2fb03, 0
  %v1_2fb0a = zext i1 %v1_2fb08 to i32
  %v3_2fb0a = and i32 %v1_2fb03, -256
  %v4_2fb0a = or i32 %v1_2fb0a, %v3_2fb0a
  store i32 %v4_2fb0a, i32* %eax.global-to-local, align 8
  %v5_2fb0d = icmp eq i1 %v1_2fb08, false
  %v0_2fb41 = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v5_2fb0d, label %dec_label_pc_2fb41, label %dec_label_pc_2fb11

dec_label_pc_2fb11:                               ; preds = %dec_label_pc_2fafd
  %v1_2fb11 = add i32 %v0_2fb41, -24
  %v2_2fb11 = inttoptr i32 %v1_2fb11 to i32*
  %v3_2fb11 = load i32, i32* %v2_2fb11, align 4
  store i32 %v3_2fb11, i32* %edx.global-to-local, align 8
  %v1_2fb14 = add i32 %v0_2fb41, -60
  %v2_2fb14 = inttoptr i32 %v1_2fb14 to i32*
  %v3_2fb14 = load i32, i32* %v2_2fb14, align 4
  store i32 %v3_2fb14, i32* %eax.global-to-local, align 8
  %v1_2fb17 = add i32 %v0_2fb41, -72
  %v2_2fb17 = inttoptr i32 %v1_2fb17 to i32*
  %v3_2fb17 = load i32, i32* %v2_2fb17, align 4
  store i32 %v3_2fb17, i32* %ecx.global-to-local, align 4
  %v1_2fb2a = add i32 %v0_2fb41, -64
  %v2_2fb2a = inttoptr i32 %v1_2fb2a to i32*
  %v3_2fb2a = load i32, i32* %v2_2fb2a, align 4
  store i32 %v3_2fb2a, i32* %edx.global-to-local, align 8
  %v5_2fb34 = call i32 @unknown_58264(i32 %v3_2fb14, i32 %v3_2fb2a, i32 0, i32 %v3_2fb11, i32 %v3_2fb17)
  store i32 %v5_2fb34, i32* %eax.global-to-local, align 8
  ret i32 %v5_2fb34

dec_label_pc_2fb41:                               ; preds = %dec_label_pc_2fafd
  %v1_2fb41 = add i32 %v0_2fb41, -68
  %v2_2fb41 = inttoptr i32 %v1_2fb41 to i32*
  %v3_2fb41 = load i32, i32* %v2_2fb41, align 4
  store i32 %v3_2fb41, i32* %ecx.global-to-local, align 4
  %v3_2fb44 = load i32, i32* %v2_2fb41, align 4
  store i32 %v3_2fb44, i32* %edx.global-to-local, align 8
  %v1_2fb47 = add i32 %v0_2fb41, -60
  %v2_2fb47 = inttoptr i32 %v1_2fb47 to i32*
  %v3_2fb47 = load i32, i32* %v2_2fb47, align 4
  store i32 %v3_2fb47, i32* %eax.global-to-local, align 8
  %v1_2fb4a = add i32 %v0_2fb41, -72
  %v2_2fb4a = inttoptr i32 %v1_2fb4a to i32*
  %v3_2fb4a = load i32, i32* %v2_2fb4a, align 4
  store i32 %v3_2fb4a, i32* %ebx.global-to-local, align 8
  %v1_2fb59 = add i32 %v0_2fb41, -64
  %v2_2fb59 = inttoptr i32 %v1_2fb59 to i32*
  %v3_2fb59 = load i32, i32* %v2_2fb59, align 4
  store i32 %v3_2fb59, i32* %edx.global-to-local, align 8
  %v5_2fb63 = call i32 @unknown_58264(i32 %v3_2fb47, i32 %v3_2fb59, i32 %v3_2fb44, i32 %v3_2fb41, i32 %v3_2fb4a)
  store i32 %v5_2fb63, i32* %eax.global-to-local, align 8
  ret i32 %v5_2fb63

dec_label_pc_2fb70:                               ; preds = %dec_label_pc_2fabb
  %v1_2fb70 = add i32 %v0_2fb70, -40
  store i32 %v1_2fb70, i32* %eax.global-to-local, align 8
  %v1_2fb73 = add i32 %v0_2fb70, -72
  %v2_2fb73 = inttoptr i32 %v1_2fb73 to i32*
  %v3_2fb73 = load i32, i32* %v2_2fb73, align 4
  store i32 %v3_2fb73, i32* %edx.global-to-local, align 8
  %v1_2fb7a = add i32 %v0_2fb70, -64
  %v2_2fb7a = inttoptr i32 %v1_2fb7a to i32*
  %v3_2fb7a = load i32, i32* %v2_2fb7a, align 4
  store i32 %v3_2fb7a, i32* %edx.global-to-local, align 8
  %v3_2fb84 = call i32 @unknown_52e94(i32 %v1_2fb70, i32 %v3_2fb7a, i32 %v3_2fb73)
  store i32 %v3_2fb84, i32* %eax.global-to-local, align 8
  %v0_2fb8c = load i32, i32* %ebp.global-to-local, align 4
  %v1_2fb8c = add i32 %v0_2fb8c, -60
  %v2_2fb8c = inttoptr i32 %v1_2fb8c to i32*
  %v3_2fb8c = load i32, i32* %v2_2fb8c, align 4
  store i32 %v3_2fb8c, i32* %eax.global-to-local, align 8
  %v1_2fb8f = add i32 %v0_2fb8c, -40
  %v2_2fb8f = inttoptr i32 %v1_2fb8f to i32*
  %v3_2fb8f = load i32, i32* %v2_2fb8f, align 4
  store i32 %v3_2fb8f, i32* %edx.global-to-local, align 8
  %v2_2fb92 = inttoptr i32 %v3_2fb8c to i32*
  store i32 %v3_2fb8f, i32* %v2_2fb92, align 4
  %v0_2fb94 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_2fb94

dec_label_pc_2fb99:                               ; preds = %dec_label_pc_2fa27
  %v1_2fba0 = add i32 %v0_2fb99, -14
  store i32 %v1_2fba0, i32* %eax.global-to-local, align 8
  ret i32 %v1_2fba0

; uselistorder directives
  uselistorder i32 %v0_2fb41, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i1 %v1_2fb08, { 1, 0 }
  uselistorder i32 %v0_2fb70, { 0, 2, 3, 1 }
  uselistorder i32 %v0_2fabb, { 1, 2, 0 }
  uselistorder i32 %v2_2fa6d, { 1, 0 }
  uselistorder i32 %v0_2fb99, { 2, 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7, 10, 9 }
  uselistorder i32 (i32)* @unknown_5f0fe, { 2, 1, 0 }
}

define i32 @function_2fba4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fba4:
  %ebx.global-to-local = alloca i32, align 4
  %v2_2fba6 = call i32 @unknown_58230(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_2fba6, i32* %ebx.global-to-local, align 8
  %v0_2fbad = load i32, i32* @ebp, align 4
  %v1_2fbad = add i32 %v0_2fbad, -68
  %v2_2fbad = inttoptr i32 %v1_2fbad to i32*
  %v3_2fbad = load i32, i32* %v2_2fbad, align 4
  %v1_2fbb3 = call i32 @unknown_583f1(i32 %v3_2fbad)
  %v0_2fbba = load i32, i32* @ebp, align 4
  %v1_2fbba = add i32 %v0_2fbba, -64
  %v2_2fbba = inttoptr i32 %v1_2fbba to i32*
  %v3_2fbba = load i32, i32* %v2_2fbba, align 4
  %v0_2fbbd = load i32, i32* %ebx.global-to-local, align 8
  %v3_2fbc8 = call i32 @unknown_51056(i32 %v3_2fbba, i32 %v1_2fbb3, i32 %v0_2fbbd)
  %v4_2fbcd = trunc i32 %v3_2fbc8 to i8
  %v5_2fbcd = icmp eq i8 %v4_2fbcd, 0
  %v0_2fd01 = load i32, i32* @ebp, align 4
  br i1 %v5_2fbcd, label %dec_label_pc_2fd01, label %dec_label_pc_2fbd5

dec_label_pc_2fbd5:                               ; preds = %dec_label_pc_2fba4
  %v1_2fbd5 = add i32 %v0_2fd01, -68
  %v2_2fbd5 = inttoptr i32 %v1_2fbd5 to i32*
  %v3_2fbd5 = load i32, i32* %v2_2fbd5, align 4
  %v2_2fbd8 = add i32 %v0_2fd01, -24
  %v3_2fbd8 = inttoptr i32 %v2_2fbd8 to i32*
  store i32 %v3_2fbd5, i32* %v3_2fbd8, align 4
  %v0_2fbdb = load i32, i32* @ebp, align 4
  %v1_2fbdb = add i32 %v0_2fbdb, -68
  %v2_2fbdb = inttoptr i32 %v1_2fbdb to i32*
  %v3_2fbdb = load i32, i32* %v2_2fbdb, align 4
  store i32 %v3_2fbdb, i32* %ebx.global-to-local, align 8
  %v1_2fbde = add i32 %v0_2fbdb, -64
  %v2_2fbde = inttoptr i32 %v1_2fbde to i32*
  %v3_2fbde = load i32, i32* %v2_2fbde, align 4
  %v1_2fbe4 = call i32 @unknown_5f164(i32 %v3_2fbde)
  %v1_2fbe9 = inttoptr i32 %v1_2fbe4 to i32*
  %v2_2fbe9 = load i32, i32* %v1_2fbe9, align 4
  %v0_2fbeb = load i32, i32* %ebx.global-to-local, align 8
  %v12_2fbeb = icmp eq i32 %v0_2fbeb, %v2_2fbe9
  %v5_2fbf0 = icmp eq i1 %v12_2fbeb, false
  %v0_2fc2e = load i32, i32* @ebp, align 4
  br i1 %v5_2fbf0, label %dec_label_pc_2fc2e, label %dec_label_pc_2fbf4

dec_label_pc_2fbf4:                               ; preds = %dec_label_pc_2fbd5
  %v1_2fbf4 = add i32 %v0_2fc2e, -64
  %v2_2fbf4 = inttoptr i32 %v1_2fbf4 to i32*
  %v3_2fbf4 = load i32, i32* %v2_2fbf4, align 4
  %v1_2fbfa = call i32 @unknown_5f164(i32 %v3_2fbf4)
  %v1_2fbff = inttoptr i32 %v1_2fbfa to i32*
  %v2_2fbff = load i32, i32* %v1_2fbff, align 4
  %v0_2fc01 = load i32, i32* @ebp, align 4
  %v1_2fc01 = add i32 %v0_2fc01, -60
  %v2_2fc01 = inttoptr i32 %v1_2fc01 to i32*
  %v3_2fc01 = load i32, i32* %v2_2fc01, align 4
  %v1_2fc04 = add i32 %v0_2fc01, -72
  %v2_2fc04 = inttoptr i32 %v1_2fc04 to i32*
  %v3_2fc04 = load i32, i32* %v2_2fc04, align 4
  %v1_2fc17 = add i32 %v0_2fc01, -64
  %v2_2fc17 = inttoptr i32 %v1_2fc17 to i32*
  %v3_2fc17 = load i32, i32* %v2_2fc17, align 4
  %v5_2fc21 = call i32 @unknown_58264(i32 %v3_2fc01, i32 %v3_2fc17, i32 0, i32 %v2_2fbff, i32 %v3_2fc04)
  br label %dec_label_pc_2fd16

dec_label_pc_2fc2e:                               ; preds = %dec_label_pc_2fbd5
  %v1_2fc2e = add i32 %v0_2fc2e, -24
  %v1_2fc34 = call i32 @unknown_5774c(i32 %v1_2fc2e)
  %v1_2fc39 = inttoptr i32 %v1_2fc34 to i32*
  %v2_2fc39 = load i32, i32* %v1_2fc39, align 4
  %v1_2fc3e = call i32 @unknown_583f1(i32 %v2_2fc39)
  store i32 %v1_2fc3e, i32* %ebx.global-to-local, align 8
  %v0_2fc45 = load i32, i32* @ebp, align 4
  %v1_2fc45 = add i32 %v0_2fc45, -72
  %v2_2fc45 = inttoptr i32 %v1_2fc45 to i32*
  %v3_2fc45 = load i32, i32* %v2_2fc45, align 4
  %v1_2fc4c = add i32 %v0_2fc45, -13
  %v2_2fc52 = call i32 @unknown_58230(i32 %v1_2fc4c, i32 %v3_2fc45)
  %v0_2fc57 = load i32, i32* @ebp, align 4
  %v1_2fc57 = add i32 %v0_2fc57, -64
  %v2_2fc57 = inttoptr i32 %v1_2fc57 to i32*
  %v3_2fc57 = load i32, i32* %v2_2fc57, align 4
  %v0_2fc5a = load i32, i32* %ebx.global-to-local, align 8
  %v3_2fc65 = call i32 @unknown_51056(i32 %v3_2fc57, i32 %v2_2fc52, i32 %v0_2fc5a)
  %v4_2fc6a = trunc i32 %v3_2fc65 to i8
  %v5_2fc6a = icmp eq i8 %v4_2fc6a, 0
  %v0_2fcdb = load i32, i32* @ebp, align 4
  br i1 %v5_2fc6a, label %dec_label_pc_2fcdb, label %dec_label_pc_2fc6e

dec_label_pc_2fc6e:                               ; preds = %dec_label_pc_2fc2e
  %v1_2fc6e = add i32 %v0_2fcdb, -68
  %v2_2fc6e = inttoptr i32 %v1_2fc6e to i32*
  %v3_2fc6e = load i32, i32* %v2_2fc6e, align 4
  %v1_2fc74 = call i32 @unknown_619a3(i32 %v3_2fc6e)
  %v1_2fc79 = icmp eq i32 %v1_2fc74, 0
  %v5_2fc7e = icmp eq i1 %v1_2fc79, false
  %v0_2fcaf = load i32, i32* @ebp, align 4
  br i1 %v5_2fc7e, label %dec_label_pc_2fcaf, label %dec_label_pc_2fc82

dec_label_pc_2fc82:                               ; preds = %dec_label_pc_2fc6e
  %v1_2fc82 = add i32 %v0_2fcaf, -68
  %v2_2fc82 = inttoptr i32 %v1_2fc82 to i32*
  %v3_2fc82 = load i32, i32* %v2_2fc82, align 4
  %v1_2fc85 = add i32 %v0_2fcaf, -60
  %v2_2fc85 = inttoptr i32 %v1_2fc85 to i32*
  %v3_2fc85 = load i32, i32* %v2_2fc85, align 4
  %v1_2fc88 = add i32 %v0_2fcaf, -72
  %v2_2fc88 = inttoptr i32 %v1_2fc88 to i32*
  %v3_2fc88 = load i32, i32* %v2_2fc88, align 4
  %v1_2fc9b = add i32 %v0_2fcaf, -64
  %v2_2fc9b = inttoptr i32 %v1_2fc9b to i32*
  %v3_2fc9b = load i32, i32* %v2_2fc9b, align 4
  %v5_2fca5 = call i32 @unknown_58264(i32 %v3_2fc85, i32 %v3_2fc9b, i32 0, i32 %v3_2fc82, i32 %v3_2fc88)
  br label %dec_label_pc_2fd16

dec_label_pc_2fcaf:                               ; preds = %dec_label_pc_2fc6e
  %v1_2fcaf = add i32 %v0_2fcaf, -24
  %v2_2fcaf = inttoptr i32 %v1_2fcaf to i32*
  %v3_2fcaf = load i32, i32* %v2_2fcaf, align 4
  %v1_2fcb5 = add i32 %v0_2fcaf, -60
  %v2_2fcb5 = inttoptr i32 %v1_2fcb5 to i32*
  %v3_2fcb5 = load i32, i32* %v2_2fcb5, align 4
  %v1_2fcb8 = add i32 %v0_2fcaf, -72
  %v2_2fcb8 = inttoptr i32 %v1_2fcb8 to i32*
  %v3_2fcb8 = load i32, i32* %v2_2fcb8, align 4
  store i32 %v3_2fcb8, i32* %ebx.global-to-local, align 8
  %v1_2fcc7 = add i32 %v0_2fcaf, -64
  %v2_2fcc7 = inttoptr i32 %v1_2fcc7 to i32*
  %v3_2fcc7 = load i32, i32* %v2_2fcc7, align 4
  %v5_2fcd1 = call i32 @unknown_58264(i32 %v3_2fcb5, i32 %v3_2fcc7, i32 %v3_2fcaf, i32 %v3_2fcaf, i32 %v3_2fcb8)
  br label %dec_label_pc_2fd16

dec_label_pc_2fcdb:                               ; preds = %dec_label_pc_2fc2e
  %v1_2fcdb = add i32 %v0_2fcdb, -32
  %v1_2fcde = add i32 %v0_2fcdb, -72
  %v2_2fcde = inttoptr i32 %v1_2fcde to i32*
  %v3_2fcde = load i32, i32* %v2_2fcde, align 4
  %v1_2fce5 = add i32 %v0_2fcdb, -64
  %v2_2fce5 = inttoptr i32 %v1_2fce5 to i32*
  %v3_2fce5 = load i32, i32* %v2_2fce5, align 4
  %v3_2fcef = call i32 @unknown_52e94(i32 %v1_2fcdb, i32 %v3_2fce5, i32 %v3_2fcde)
  %v0_2fcf7 = load i32, i32* @ebp, align 4
  %v1_2fcf7 = add i32 %v0_2fcf7, -60
  %v2_2fcf7 = inttoptr i32 %v1_2fcf7 to i32*
  %v3_2fcf7 = load i32, i32* %v2_2fcf7, align 4
  %v1_2fcfa = add i32 %v0_2fcf7, -32
  %v2_2fcfa = inttoptr i32 %v1_2fcfa to i32*
  %v3_2fcfa = load i32, i32* %v2_2fcfa, align 4
  %v2_2fcfd = inttoptr i32 %v3_2fcf7 to i32*
  store i32 %v3_2fcfa, i32* %v2_2fcfd, align 4
  br label %dec_label_pc_2fd16

dec_label_pc_2fd01:                               ; preds = %dec_label_pc_2fba4
  %v1_2fd01 = add i32 %v0_2fd01, -60
  %v2_2fd01 = inttoptr i32 %v1_2fd01 to i32*
  %v3_2fd01 = load i32, i32* %v2_2fd01, align 4
  %v1_2fd04 = add i32 %v0_2fd01, -68
  %v2_2fd0e = call i32 @unknown_61a74(i32 %v3_2fd01, i32 %v1_2fd04)
  br label %dec_label_pc_2fd16

dec_label_pc_2fd16:                               ; preds = %dec_label_pc_2fd01, %dec_label_pc_2fcdb, %dec_label_pc_2fcaf, %dec_label_pc_2fc82, %dec_label_pc_2fbf4
  %v0_2fd16 = load i32, i32* @ebp, align 4
  %v1_2fd16 = add i32 %v0_2fd16, -60
  %v2_2fd16 = inttoptr i32 %v1_2fd16 to i32*
  %v3_2fd16 = load i32, i32* %v2_2fd16, align 4
  store i32 %v3_2fd16, i32* @eax, align 8
  %v1_2fd19 = add i32 %v0_2fd16, -12
  %v2_2fd19 = inttoptr i32 %v1_2fd19 to i32*
  %v3_2fd19 = load i32, i32* %v2_2fd19, align 4
  %v4_2fd1c = icmp eq i32 %v3_2fd19, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_2fd1c, label %bb, label %dec_label_pc_2fd25

bb:                                               ; preds = %dec_label_pc_2fd16
  %v1_2fd23 = call i32 @function_2fd2a()
  br label %dec_label_pc_2fd25

dec_label_pc_2fd25:                               ; preds = %bb, %dec_label_pc_2fd16
  %v2_2fd23 = phi i32 [ %v1_2fd23, %bb ], [ %v3_2fd16, %dec_label_pc_2fd16 ]
  ret i32 %v2_2fd23

; uselistorder directives
  uselistorder i32 %v3_2fcaf, { 1, 0 }
  uselistorder i32 %v0_2fcaf, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_2fcdb, { 0, 2, 3, 1 }
  uselistorder i32 %v0_2fc2e, { 1, 0 }
  uselistorder i32 %v0_2fd01, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_52e94, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_58264, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 (i32)* @unknown_5f164, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_51056, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @unknown_583f1, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_58230, { 1, 0, 4, 3, 2 }
}

define i32 @function_2fd2a() local_unnamed_addr {
dec_label_pc_2fd2a:
  %v0_2fd2e = load i32, i32* @eax, align 8
  ret i32 %v0_2fd2e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantINS1_8weak_ptrIvEENS1_8signals26detail21foreign_void_weak_ptrENS1_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEC1ERKSC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd32:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fd5b

bb:                                               ; preds = %dec_label_pc_2fd32
  %v3_2fd59 = call i32 @function_2fd60(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2fd5b

dec_label_pc_2fd5b:                               ; preds = %bb, %dec_label_pc_2fd32
  %v4_2fd59 = phi i32 [ %v3_2fd59, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2fd32 ]
  ret i32 %v4_2fd59
}

define i32 @function_2fd5d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
dec_label_pc_2fd5d:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_2fd60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd60:
  %v0_2fd61 = load i32, i32* @eax, align 8
  ret i32 %v0_2fd61
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd62:
  store i32 268435455, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fd8a

bb:                                               ; preds = %dec_label_pc_2fd62
  %v2_2fd88 = call i32 @function_2fd8f(i32 %arg1)
  br label %dec_label_pc_2fd8a

dec_label_pc_2fd8a:                               ; preds = %bb, %dec_label_pc_2fd62
  %v3_2fd88 = phi i32 [ %v2_2fd88, %bb ], [ 268435455, %dec_label_pc_2fd62 ]
  ret i32 %v3_2fd88
}

define i32 @function_2fd8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd8f:
  %v0_2fd90 = load i32, i32* @eax, align 8
  ret i32 %v0_2fd90
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd92:
  %v1_2fdb5 = call i32 @unknown_5f2b0(i32 %arg2)
  %v2_2fdc4 = call i32 @unknown_61f3a(i32 %arg1, i32 %v1_2fdb5)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fdd8

bb:                                               ; preds = %dec_label_pc_2fd92
  %v1_2fdd6 = call i32 @function_2fddd()
  br label %dec_label_pc_2fdd8

dec_label_pc_2fdd8:                               ; preds = %bb, %dec_label_pc_2fd92
  %v2_2fdd6 = phi i32 [ %v1_2fdd6, %bb ], [ %arg1, %dec_label_pc_2fd92 ]
  ret i32 %v2_2fdd6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2fddd() local_unnamed_addr {
dec_label_pc_2fddd:
  %v0_2fdde = load i32, i32* @eax, align 8
  ret i32 %v0_2fdde
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fde2:
  %v1_2fdff = call i32 @unknown_61fc6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fe10

bb:                                               ; preds = %dec_label_pc_2fde2
  %v1_2fe0e = call i32 @function_2fe15()
  br label %dec_label_pc_2fe10

dec_label_pc_2fe10:                               ; preds = %bb, %dec_label_pc_2fde2
  %v2_2fe0e = phi i32 [ %v1_2fe0e, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2fde2 ]
  ret i32 %v2_2fe0e
}

define i32 @function_2fe15() local_unnamed_addr {
dec_label_pc_2fe15:
  %v0_2fe16 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe16
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEE7destroyEPSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe18:
  %v1_2fe3b = call i32 @unknown_4b55a(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fe4c

bb:                                               ; preds = %dec_label_pc_2fe18
  %v1_2fe4a = call i32 @function_2fe51()
  br label %dec_label_pc_2fe4c

dec_label_pc_2fe4c:                               ; preds = %bb, %dec_label_pc_2fe18
  %v2_2fe4a = phi i32 [ %v1_2fe4a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2fe18 ]
  ret i32 %v2_2fe4a
}

define i32 @function_2fe51() local_unnamed_addr {
dec_label_pc_2fe51:
  %v0_2fe52 = load i32, i32* @eax, align 8
  ret i32 %v0_2fe52
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_put_nodeEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe54:
  %v3_2fe86 = call i32 @unknown_62062(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2fe97

bb:                                               ; preds = %dec_label_pc_2fe54
  %v1_2fe95 = call i32 @function_2fe9c()
  br label %dec_label_pc_2fe97

dec_label_pc_2fe97:                               ; preds = %bb, %dec_label_pc_2fe54
  %v2_2fe95 = phi i32 [ %v1_2fe95, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2fe54 ]
  ret i32 %v2_2fe95
}

define i32 @function_2fe9c() local_unnamed_addr {
dec_label_pc_2fe9c:
  %v0_2fe9d = load i32, i32* @eax, align 8
  ret i32 %v0_2fe9d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe9e:
  %v3_2fecb = call i32 @unknown_620ee(i32 %arg1, i32 1, i32 0)
  ret i32 %v3_2fecb
}

define i32 @function_2fed6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fed6:
  %zf.global-to-local = alloca i1, align 1
  %v0_2fed6 = load i32, i32* @eax, align 8
  %v1_2fed6 = trunc i32 %v0_2fed6 to i8
  %v2_2fed6 = load i1, i1* @cf, align 1
  %v3_2fed6 = zext i1 %v2_2fed6 to i8
  %v4_2fed6 = add i8 %v3_2fed6, %v1_2fed6
  %v13_2fed6 = icmp eq i8 %v4_2fed6, 0
  store i1 %v13_2fed6, i1* %zf.global-to-local, align 1
  %v22_2fed6 = zext i8 %v4_2fed6 to i32
  %v24_2fed6 = and i32 %v0_2fed6, -256
  %v25_2fed6 = or i32 %v22_2fed6, %v24_2fed6
  store i32 %v25_2fed6, i32* @eax, align 8
  %v1_2fed8 = inttoptr i32 %v25_2fed6 to i8*
  %v2_2fed8 = load i8, i8* %v1_2fed8, align 1
  %v5_2fed8 = add i8 %v2_2fed8, %v4_2fed6
  %v15_2fed8 = icmp eq i8 %v5_2fed8, 0
  store i1 %v15_2fed8, i1* %zf.global-to-local, align 1
  store i8 %v5_2fed8, i8* %v1_2fed8, align 1
  %v0_2feda = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2feda, label %bb, label %dec_label_pc_2fed6.dec_label_pc_2fedc_crit_edge

dec_label_pc_2fed6.dec_label_pc_2fedc_crit_edge:  ; preds = %dec_label_pc_2fed6
  %v2_2feda.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_2fedc

bb:                                               ; preds = %dec_label_pc_2fed6
  %v1_2feda = call i32 @function_2fee1()
  br label %dec_label_pc_2fedc

dec_label_pc_2fedc:                               ; preds = %dec_label_pc_2fed6.dec_label_pc_2fedc_crit_edge, %bb
  %v2_2feda = phi i32 [ %v2_2feda.pre, %dec_label_pc_2fed6.dec_label_pc_2fedc_crit_edge ], [ %v1_2feda, %bb ]
  ret i32 %v2_2feda

; uselistorder directives
  uselistorder label %dec_label_pc_2fedc, { 1, 0 }
}

define i32 @function_2fee1() local_unnamed_addr {
dec_label_pc_2fee1:
  %v0_2fee2 = load i32, i32* @eax, align 8
  ret i32 %v0_2fee2
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fee4:
  %v2_2ff0e = call i32 @unknown_4f20c(i32 %arg1, i32 %arg2)
  %v1_2ff19 = add i32 %arg2, 12
  %v2_2ff19 = inttoptr i32 %v1_2ff19 to i32*
  %v3_2ff19 = load i32, i32* %v2_2ff19, align 4
  %v2_2ff1c = add i32 %arg1, 12
  %v3_2ff1c = inttoptr i32 %v2_2ff1c to i32*
  store i32 %v3_2ff19, i32* %v3_2ff1c, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ff2b

bb:                                               ; preds = %dec_label_pc_2fee4
  %v1_2ff29 = call i32 @function_2ff30()
  br label %dec_label_pc_2ff2b

dec_label_pc_2ff2b:                               ; preds = %bb, %dec_label_pc_2fee4
  %v2_2ff29 = phi i32 [ %v1_2ff29, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2fee4 ]
  ret i32 %v2_2ff29

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2ff30() local_unnamed_addr {
dec_label_pc_2ff30:
  %v0_2ff31 = load i32, i32* @eax, align 8
  ret i32 %v0_2ff31
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEE9constructEPSO_RKSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ff32:
  store i32 0, i32* @eax, align 8
  %v2_2ff66 = call i32 @function_30898(i32 ptrtoint (i32* @global_var_10.1921 to i32), i32 %arg2)
  %v1_2ff6d = icmp eq i32 %v2_2ff66, 0
  br i1 %v1_2ff6d, label %bb, label %dec_label_pc_2ff71

bb:                                               ; preds = %dec_label_pc_2ff32
  %v1_2ff6f = call i32 @function_2ff9a()
  br label %dec_label_pc_2ff71

dec_label_pc_2ff71:                               ; preds = %bb, %dec_label_pc_2ff32
  %v2_2ff7b = call i32 @unknown_5fe16(i32 %v2_2ff66, i32 %arg3)
  %v0_2ff80 = call i32 @function_2ff9a()
  ret i32 %v0_2ff80

; uselistorder directives
  uselistorder i32 ()* @function_2ff9a, { 1, 0 }
}

define i32 @function_2ff9a() local_unnamed_addr {
dec_label_pc_2ff9a:
  %v0_2ff9a = load i32, i32* @ebp, align 4
  %v1_2ff9a = add i32 %v0_2ff9a, -28
  %v2_2ff9a = inttoptr i32 %v1_2ff9a to i32*
  %v3_2ff9a = load i32, i32* %v2_2ff9a, align 4
  %v3_2ff9d = xor i32 %v3_2ff9a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_2ff9d = icmp eq i32 %v3_2ff9d, 0
  store i32 %v3_2ff9d, i32* @eax, align 8
  br i1 %v4_2ff9d, label %bb, label %dec_label_pc_2ffa6

bb:                                               ; preds = %dec_label_pc_2ff9a
  %v1_2ffa4 = call i32 @function_2ffab()
  br label %dec_label_pc_2ffa6

dec_label_pc_2ffa6:                               ; preds = %bb, %dec_label_pc_2ff9a
  %v2_2ffa4 = phi i32 [ %v1_2ffa4, %bb ], [ %v3_2ff9d, %dec_label_pc_2ff9a ]
  ret i32 %v2_2ffa4
}

define i32 @function_2ffab() local_unnamed_addr {
dec_label_pc_2ffab:
  %v0_2ffb2 = load i32, i32* @eax, align 8
  ret i32 %v0_2ffb2
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IbxNS1_8functionIFbxEEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ffb4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_2ffd7

bb:                                               ; preds = %dec_label_pc_2ffb4
  %v2_2ffd5 = call i32 @function_2ffdc(i32 %arg1)
  br label %dec_label_pc_2ffd7

dec_label_pc_2ffd7:                               ; preds = %bb, %dec_label_pc_2ffb4
  %v3_2ffd5 = phi i32 [ %v2_2ffd5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ffb4 ]
  ret i32 %v3_2ffd5
}

define i32 @function_2ffdc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ffdc:
  %v0_2ffdd = load i32, i32* @eax, align 8
  ret i32 %v0_2ffdd
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEEC1ISH_EERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ffde:
  %v1_30001 = call i32 @unknown_6228c(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30012

bb:                                               ; preds = %dec_label_pc_2ffde
  %v1_30010 = call i32 @function_30017()
  br label %dec_label_pc_30012

dec_label_pc_30012:                               ; preds = %bb, %dec_label_pc_2ffde
  %v2_30010 = phi i32 [ %v1_30010, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_2ffde ]
  ret i32 %v2_30010
}

define i32 @function_30017() local_unnamed_addr {
dec_label_pc_30017:
  %v0_30018 = load i32, i32* @eax, align 8
  ret i32 %v0_30018
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE10_List_implC1ERKSaISt10_List_nodeISH_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3001a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_30044 = call i32 @unknown_622f2(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_30055 = add i32 %tmp103, 4
  %v2_30055 = inttoptr i32 %v1_30055 to i32*
  store i32 0, i32* %v2_30055, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30068

bb:                                               ; preds = %dec_label_pc_3001a
  %v1_30066 = call i32 @function_3006d()
  br label %dec_label_pc_30068

dec_label_pc_30068:                               ; preds = %bb, %dec_label_pc_3001a
  %v2_30066 = phi i32 [ %v1_30066, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3001a ]
  ret i32 %v2_30066

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_3006d() local_unnamed_addr {
dec_label_pc_3006d:
  %v0_3006e = load i32, i32* @eax, align 8
  ret i32 %v0_3006e
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE7_M_initEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_30070:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* %arg1, align 4
  %v2_30095 = add i32 %tmp100, 4
  %v3_30095 = inttoptr i32 %v2_30095 to i32*
  store i32 %tmp100, i32* %v3_30095, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_300a4

bb:                                               ; preds = %dec_label_pc_30070
  %v2_300a2 = call i32 @function_300a9(i32 %tmp100)
  br label %dec_label_pc_300a4

dec_label_pc_300a4:                               ; preds = %bb, %dec_label_pc_30070
  %v3_300a2 = phi i32 [ %v2_300a2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_30070 ]
  ret i32 %v3_300a2
}

define i32 @function_300a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_300a9:
  %v0_300aa = load i32, i32* @eax, align 8
  ret i32 %v0_300aa
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_300ac:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_300dd

bb:                                               ; preds = %dec_label_pc_300ac
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_300db = call i32 @function_300e2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_300dd

dec_label_pc_300dd:                               ; preds = %bb, %dec_label_pc_300ac
  %v4_300db = phi i32 [ %v3_300db, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_300ac ]
  ret i32 %v4_300db

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_300e2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_300e2:
  %v0_300e3 = load i32, i32* @eax, align 8
  ret i32 %v0_300e3
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE9push_backERKSH_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_300e4:
  %stack_var_-20 = alloca i32, align 4
  %v2_30101 = ptrtoint i32* %stack_var_-20 to i32
  %v2_3010e = call i32 @unknown_5464e(i32 %v2_30101, i32 %arg1)
  %v3_3011d = load i32, i32* %stack_var_-20, align 4
  %v3_3012a = call i32 @unknown_623fe(i32 %arg1, i32 %v3_3011d, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3013b

bb:                                               ; preds = %dec_label_pc_300e4
  %v1_30139 = call i32 @function_30140()
  br label %dec_label_pc_3013b

dec_label_pc_3013b:                               ; preds = %bb, %dec_label_pc_300e4
  %v2_30139 = phi i32 [ %v1_30139, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_300e4 ]
  ret i32 %v2_30139

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_30140() local_unnamed_addr {
dec_label_pc_30140:
  %v0_30141 = load i32, i32* @eax, align 8
  ret i32 %v0_30141
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_30142:
  %v2_3015c = load i32, i32* %arg1, align 4
  %v1_3015e = add i32 %v2_3015c, 8
  ret i32 %v1_3015e
}

define i32 @function_30166(i32 %arg1) local_unnamed_addr {
dec_label_pc_30166:
  %v0_30166 = load i32, i32* @eax, align 8
  %v1_30166 = load i1, i1* @cf, align 1
  %v2_30166 = zext i1 %v1_30166 to i32
  %v3_30166 = add i32 %v0_30166, ptrtoint (i8** @global_var_14.1904 to i32)
  %v4_30166 = add i32 %v3_30166, %v2_30166
  %v14_30166 = icmp eq i32 %v4_30166, 0
  store i32 %v4_30166, i32* @eax, align 8
  br i1 %v14_30166, label %bb, label %dec_label_pc_3016d

bb:                                               ; preds = %dec_label_pc_30166
  %v1_3016b = call i32 @function_30172()
  br label %dec_label_pc_3016d

dec_label_pc_3016d:                               ; preds = %bb, %dec_label_pc_30166
  %v2_3016b = phi i32 [ %v1_3016b, %bb ], [ %v4_30166, %dec_label_pc_30166 ]
  ret i32 %v2_3016b
}

define i32 @function_30172() local_unnamed_addr {
dec_label_pc_30172:
  %v0_30173 = load i32, i32* @eax, align 8
  ret i32 %v0_30173
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEED1Ev() local_unnamed_addr {
dec_label_pc_30174:
  %eax.global-to-local = alloca i32, align 4
  %v17_30177 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_30177
}

define i32 @function_3017b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3017b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_3017b = load i32, i32* @ebp, align 4
  %v1_3017b = add i32 %v0_3017b, 1
  store i32 %v1_3017b, i32* @ebp, align 4
  %v0_3017c = load i32, i32* @ecx, align 4
  %v1_3017c = add i32 %v0_3017c, -1587157947
  %v2_3017c = inttoptr i32 %v1_3017c to i8*
  %v3_3017c = load i8, i8* %v2_3017c, align 1
  %v5_3017c = trunc i32 %v0_3017c to i8
  %v6_3017c = or i8 %v3_3017c, %v5_3017c
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_3017c, i8* %v2_3017c, align 1
  %v0_30182 = load i32, i32* @eax, align 8
  %v1_30182 = trunc i32 %v0_30182 to i8
  %v2_30182 = load i1, i1* %cf.global-to-local, align 1
  %v3_30182 = zext i1 %v2_30182 to i8
  %v4_30182 = add i8 %v3_30182, %v1_30182
  %v19_30182 = icmp ule i8 %v4_30182, %v1_30182
  %v21_30182 = icmp eq i1 %v2_30182, %v19_30182
  store i1 %v21_30182, i1* %cf.global-to-local, align 1
  %v22_30182 = zext i8 %v4_30182 to i32
  %v24_30182 = and i32 %v0_30182, -256
  %v25_30182 = or i32 %v22_30182, %v24_30182
  store i32 %v25_30182, i32* %eax.global-to-local, align 8
  %v1_30184 = inttoptr i32 %v25_30182 to i8*
  %v2_30184 = load i8, i8* %v1_30184, align 1
  %v5_30184 = add i8 %v2_30184, %v4_30182
  store i8 %v5_30184, i8* %v1_30184, align 1
  %v0_30186 = load i32, i32* %eax.global-to-local, align 8
  %v1_30186 = load i32, i32* @ebp, align 4
  %v2_30186 = add i32 %v1_30186, -12
  %v3_30186 = inttoptr i32 %v2_30186 to i32*
  store i32 %v0_30186, i32* %v3_30186, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3018b = load i32, i32* @ebp, align 4
  %v1_3018b = add i32 %v0_3018b, -12
  %v2_3018b = inttoptr i32 %v1_3018b to i32*
  %v3_3018b = load i32, i32* %v2_3018b, align 4
  %v3_3018e = xor i32 %v3_3018b, ptrtoint ([3 x i8]* @3 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_3018e = icmp eq i32 %v3_3018e, 0
  store i32 %v3_3018e, i32* @eax, align 8
  br i1 %v4_3018e, label %bb, label %dec_label_pc_30197

bb:                                               ; preds = %dec_label_pc_3017b
  %v1_30195 = call i32 @function_3019c()
  store i32 %v1_30195, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_30197

dec_label_pc_30197:                               ; preds = %bb, %dec_label_pc_3017b
  %v2_30195 = phi i32 [ %v1_30195, %bb ], [ %v3_3018e, %dec_label_pc_3017b ]
  ret i32 %v2_30195

; uselistorder directives
  uselistorder i8 %v4_30182, { 0, 2, 1 }
  uselistorder i8 %v1_30182, { 1, 0 }
}

define i32 @function_3019c() local_unnamed_addr {
dec_label_pc_3019c:
  %v0_3019d = load i32, i32* @eax, align 8
  ret i32 %v0_3019d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IbxNS1_8functionIFbxEEEEENS3_5mutexEEEEEE7destroyEPSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3019e:
  %v1_301c1 = call i32 @unknown_456bc(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_301d2

bb:                                               ; preds = %dec_label_pc_3019e
  %v1_301d0 = call i32 @function_301d7()
  br label %dec_label_pc_301d2

dec_label_pc_301d2:                               ; preds = %bb, %dec_label_pc_3019e
  %v2_301d0 = phi i32 [ %v1_301d0, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3019e ]
  ret i32 %v2_301d0
}

define i32 @function_301d7() local_unnamed_addr {
dec_label_pc_301d7:
  %v0_301d8 = load i32, i32* @eax, align 8
  ret i32 %v0_301d8
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_301da:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30200

bb:                                               ; preds = %dec_label_pc_301da
  %v2_301fe = call i32 @function_30205(i32 %arg1)
  br label %dec_label_pc_30200

dec_label_pc_30200:                               ; preds = %bb, %dec_label_pc_301da
  %v3_301fe = phi i32 [ %v2_301fe, %bb ], [ %arg1, %dec_label_pc_301da ]
  ret i32 %v3_301fe
}

define i32 @function_30205(i32 %arg1) local_unnamed_addr {
dec_label_pc_30205:
  %v0_30206 = load i32, i32* @eax, align 8
  ret i32 %v0_30206
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE13_Rb_tree_implISR_Lb0EEC1ERKSR_RKSaISt13_Rb_tree_nodeISL_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30208:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_30228(i32 %arg1) local_unnamed_addr {
dec_label_pc_30228:
  %v0_3022b = load i32, i32* @ebp, align 4
  %v1_3022b = add i32 %v0_3022b, -36
  %v2_3022b = inttoptr i32 %v1_3022b to i32*
  %v3_3022b = load i32, i32* %v2_3022b, align 4
  %v1_30232 = add i32 %v0_3022b, -28
  %v2_30232 = inttoptr i32 %v1_30232 to i32*
  %v3_30232 = load i32, i32* %v2_30232, align 4
  %v2_30238 = call i32 @unknown_62580(i32 %v3_30232, i32 %v3_3022b)
  %v0_3023d = load i32, i32* @ebp, align 4
  %v1_3023d = add i32 %v0_3023d, -28
  %v2_3023d = inttoptr i32 %v1_3023d to i32*
  %v3_3023d = load i32, i32* %v2_3023d, align 4
  %v1_30240 = add i32 %v3_3023d, 4
  %v2_30240 = inttoptr i32 %v1_30240 to i32*
  store i32 0, i32* %v2_30240, align 4
  %v0_30247 = load i32, i32* @ebp, align 4
  %v1_30247 = add i32 %v0_30247, -28
  %v2_30247 = inttoptr i32 %v1_30247 to i32*
  %v3_30247 = load i32, i32* %v2_30247, align 4
  %v1_3024a = add i32 %v3_30247, 8
  %v2_3024a = inttoptr i32 %v1_3024a to i32*
  store i32 0, i32* %v2_3024a, align 4
  %v0_30251 = load i32, i32* @ebp, align 4
  %v1_30251 = add i32 %v0_30251, -28
  %v2_30251 = inttoptr i32 %v1_30251 to i32*
  %v3_30251 = load i32, i32* %v2_30251, align 4
  %v1_30254 = add i32 %v3_30251, 12
  %v2_30254 = inttoptr i32 %v1_30254 to i32*
  store i32 0, i32* %v2_30254, align 4
  %v0_3025b = load i32, i32* @ebp, align 4
  %v1_3025b = add i32 %v0_3025b, -28
  %v2_3025b = inttoptr i32 %v1_3025b to i32*
  %v3_3025b = load i32, i32* %v2_3025b, align 4
  %v1_3025e = add i32 %v3_3025b, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_3025e = inttoptr i32 %v1_3025e to i32*
  store i32 0, i32* %v2_3025e, align 4
  %v0_30265 = load i32, i32* @ebp, align 4
  %v1_30265 = add i32 %v0_30265, -28
  %v2_30265 = inttoptr i32 %v1_30265 to i32*
  %v3_30265 = load i32, i32* %v2_30265, align 4
  %v1_30268 = add i32 %v3_30265, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_30268 = inttoptr i32 %v1_30268 to i32*
  store i32 0, i32* %v2_30268, align 4
  %v0_3026f = load i32, i32* @ebp, align 4
  %v1_3026f = add i32 %v0_3026f, -28
  %v2_3026f = inttoptr i32 %v1_3026f to i32*
  %v3_3026f = load i32, i32* %v2_3026f, align 4
  %v1_30275 = call i32 @unknown_625c2(i32 %v3_3026f)
  %v0_3027a = load i32, i32* @ebp, align 4
  %v1_3027a = add i32 %v0_3027a, -12
  %v2_3027a = inttoptr i32 %v1_3027a to i32*
  %v3_3027a = load i32, i32* %v2_3027a, align 4
  %v3_3027d = xor i32 %v3_3027a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3027d = icmp eq i32 %v3_3027d, 0
  store i32 %v3_3027d, i32* @eax, align 8
  br i1 %v4_3027d, label %bb, label %dec_label_pc_30286

bb:                                               ; preds = %dec_label_pc_30228
  %v1_30284 = call i32 @function_3028b()
  br label %dec_label_pc_30286

dec_label_pc_30286:                               ; preds = %bb, %dec_label_pc_30228
  %v2_30284 = phi i32 [ %v1_30284, %bb ], [ %v3_3027d, %dec_label_pc_30228 ]
  ret i32 %v2_30284
}

define i32 @function_3028b() local_unnamed_addr {
dec_label_pc_3028b:
  %v0_3028c = load i32, i32* @eax, align 8
  ret i32 %v0_3028c
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3028e:
  ret i32 %arg1
}

define i32 @function_302bb() local_unnamed_addr {
dec_label_pc_302bb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_302bb = load i32, i32* %ecx.global-to-local, align 4
  %v1_302bb = add i32 %v0_302bb, -1
  store i32 %v1_302bb, i32* %ecx.global-to-local, align 4
  %v0_302bd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_302bd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_302be:
  %v2_302ef = call i32 @unknown_626ce(i32 %arg1, i32 %arg2)
  ret i32 %v2_302ef
}

define i32 @function_302fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_302fe:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_302fe = load i32, i32* @eax, align 8
  store i32 %v0_302fe, i32* %stack_var_-4, align 4
  %v2_302ff = add i32 %v0_302fe, 139
  %v16_302ff = urem i32 %v2_302ff, 256
  %v18_302ff = and i32 %v0_302fe, -256
  %v19_302ff = or i32 %v16_302ff, %v18_302ff
  %v0_30301 = load i32, i32* @ebp, align 4
  %v1_30301 = add i32 %v0_30301, 1
  store i32 %v1_30301, i32* %ebp.global-to-local, align 4
  %v0_30302 = load i32, i32* @ecx, align 4
  %v1_30302 = add i32 %v0_30302, -1
  store i32 %v1_30302, i32* %ecx.global-to-local, align 4
  %v1_30304 = add i32 %v19_302ff, 1
  %v11_30305 = or i32 %v1_30304, 133
  store i32 %v11_30305, i32* %eax.global-to-local, align 8
  %v3_30307 = add i32 %v0_30301, -117
  %v4_30307 = add i32 %v3_30307, %v0_30302
  %v5_30307 = inttoptr i32 %v4_30307 to i8*
  %v6_30307 = load i8, i8* %v5_30307, align 1
  %v8_30307 = mul i8 %v6_30307, 32
  store i8 %v8_30307, i8* %v5_30307, align 1
  %v0_3030c = load i32, i32* %ecx.global-to-local, align 4
  %v1_3030c = add i32 %v0_3030c, -1
  store i32 %v1_3030c, i32* %ecx.global-to-local, align 4
  %v0_3030e = load i32, i32* %eax.global-to-local, align 8
  %v2_3030e = add i32 %v0_3030e, 36
  %v16_3030e = and i32 %v2_3030e, 255
  %v18_3030e = and i32 %v0_3030e, -256
  %v19_3030e = or i32 %v16_3030e, %v18_3030e
  store i32 %v19_3030e, i32* %eax.global-to-local, align 8
  %v0_30310 = load i32, i32* %stack_var_-4, align 4
  %v1_30310 = call i32 @unknown_62737(i32 %v0_30310)
  store i32 %v1_30310, i32* %eax.global-to-local, align 8
  %v0_30315 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30315 = add i32 %v0_30315, -20
  %v2_30315 = inttoptr i32 %v1_30315 to i32*
  %v3_30315 = load i32, i32* %v2_30315, align 4
  %v1_30320 = add i32 %v0_30315, -28
  %v2_30320 = inttoptr i32 %v1_30320 to i32*
  %v3_30320 = load i32, i32* %v2_30320, align 4
  store i32 %v3_30320, i32* %eax.global-to-local, align 8
  store i32 %v3_30320, i32* %stack_var_-4, align 4
  %v3_30326 = call i32 @unknown_6057c(i32 %v3_30320, i32 %v1_30310, i32 %v3_30315)
  store i32 %v3_30326, i32* %eax.global-to-local, align 8
  %v0_3032d = load i32, i32* %ebp.global-to-local, align 4
  %v1_3032d = add i32 %v0_3032d, -20
  %v2_3032d = inttoptr i32 %v1_3032d to i32*
  %v3_3032d = load i32, i32* %v2_3032d, align 4
  store i32 %v3_3032d, i32* %eax.global-to-local, align 8
  %v2_30330 = add i32 %v3_3032d, 12
  %v3_30330 = inttoptr i32 %v2_30330 to i32*
  store i32 %v3_30326, i32* %v3_30330, align 4
  %v0_30333 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30333 = add i32 %v0_30333, -20
  %v2_30333 = inttoptr i32 %v1_30333 to i32*
  %v3_30333 = load i32, i32* %v2_30333, align 4
  store i32 %v3_30333, i32* %eax.global-to-local, align 8
  %v2_30336 = add i32 %v0_30333, -36
  %v3_30336 = inttoptr i32 %v2_30336 to i32*
  store i32 %v3_30333, i32* %v3_30336, align 4
  %v0_30339 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30339 = add i32 %v0_30339, -32
  %v2_30339 = inttoptr i32 %v1_30339 to i32*
  %v3_30339 = load i32, i32* %v2_30339, align 4
  store i32 %v3_30339, i32* %eax.global-to-local, align 8
  store i32 %v3_30339, i32* %stack_var_-4, align 4
  %v1_3033f = call i32 @unknown_62767(i32 %v3_30339)
  store i32 %v1_3033f, i32* %eax.global-to-local, align 8
  %v1_30344 = load i32, i32* %ebp.global-to-local, align 4
  %v2_30344 = add i32 %v1_30344, -32
  %v3_30344 = inttoptr i32 %v2_30344 to i32*
  store i32 %v1_3033f, i32* %v3_30344, align 4
  br label %dec_label_pc_303b7

dec_label_pc_30349:                               ; preds = %dec_label_pc_303b7
  %v3_30349 = load i32, i32* %v2_303b7, align 4
  store i32 %v3_30349, i32* %eax.global-to-local, align 8
  %v1_30350 = add i32 %v0_303b7, -28
  %v2_30350 = inttoptr i32 %v1_30350 to i32*
  %v3_30350 = load i32, i32* %v2_30350, align 4
  store i32 %v3_30350, i32* %eax.global-to-local, align 8
  store i32 %v3_30350, i32* %stack_var_-4, align 4
  %v2_30356 = call i32 @unknown_626ce(i32 %v3_30350, i32 %v3_30349)
  store i32 %v2_30356, i32* %eax.global-to-local, align 8
  %v1_3035b = load i32, i32* %ebp.global-to-local, align 4
  %v2_3035b = add i32 %v1_3035b, -16
  %v3_3035b = inttoptr i32 %v2_3035b to i32*
  store i32 %v2_30356, i32* %v3_3035b, align 4
  %v0_3035e = load i32, i32* %ebp.global-to-local, align 4
  %v1_3035e = add i32 %v0_3035e, -36
  %v2_3035e = inttoptr i32 %v1_3035e to i32*
  %v3_3035e = load i32, i32* %v2_3035e, align 4
  store i32 %v3_3035e, i32* %eax.global-to-local, align 8
  %v1_30361 = add i32 %v0_3035e, -16
  %v2_30361 = inttoptr i32 %v1_30361 to i32*
  %v3_30361 = load i32, i32* %v2_30361, align 4
  %v2_30364 = add i32 %v3_3035e, 8
  %v3_30364 = inttoptr i32 %v2_30364 to i32*
  store i32 %v3_30361, i32* %v3_30364, align 4
  %v0_30367 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30367 = add i32 %v0_30367, -16
  %v2_30367 = inttoptr i32 %v1_30367 to i32*
  %v3_30367 = load i32, i32* %v2_30367, align 4
  store i32 %v3_30367, i32* %eax.global-to-local, align 8
  %v1_3036a = add i32 %v0_30367, -36
  %v2_3036a = inttoptr i32 %v1_3036a to i32*
  %v3_3036a = load i32, i32* %v2_3036a, align 4
  %v2_3036d = add i32 %v3_30367, 4
  %v3_3036d = inttoptr i32 %v2_3036d to i32*
  store i32 %v3_3036a, i32* %v3_3036d, align 4
  %v0_30370 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30370 = add i32 %v0_30370, -32
  %v2_30370 = inttoptr i32 %v1_30370 to i32*
  %v3_30370 = load i32, i32* %v2_30370, align 4
  store i32 %v3_30370, i32* %eax.global-to-local, align 8
  %v1_30373 = add i32 %v3_30370, 12
  %v2_30373 = inttoptr i32 %v1_30373 to i32*
  %v3_30373 = load i32, i32* %v2_30373, align 4
  store i32 %v3_30373, i32* %eax.global-to-local, align 8
  %v1_30376 = icmp eq i32 %v3_30373, 0
  br i1 %v1_30376, label %dec_label_pc_303a3, label %dec_label_pc_3037a

dec_label_pc_3037a:                               ; preds = %dec_label_pc_30349
  %v3_3037a = load i32, i32* %v2_30370, align 4
  store i32 %v3_3037a, i32* %eax.global-to-local, align 8
  store i32 %v3_3037a, i32* %stack_var_-4, align 4
  %v1_30380 = call i32 @unknown_62737(i32 %v3_3037a)
  store i32 %v1_30380, i32* %eax.global-to-local, align 8
  %v0_30385 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30385 = add i32 %v0_30385, -16
  %v2_30385 = inttoptr i32 %v1_30385 to i32*
  %v3_30385 = load i32, i32* %v2_30385, align 4
  %v1_30390 = add i32 %v0_30385, -28
  %v2_30390 = inttoptr i32 %v1_30390 to i32*
  %v3_30390 = load i32, i32* %v2_30390, align 4
  store i32 %v3_30390, i32* %eax.global-to-local, align 8
  store i32 %v3_30390, i32* %stack_var_-4, align 4
  %v3_30396 = call i32 @unknown_6057c(i32 %v3_30390, i32 %v1_30380, i32 %v3_30385)
  store i32 %v3_30396, i32* %eax.global-to-local, align 8
  %v0_3039d = load i32, i32* %ebp.global-to-local, align 4
  %v1_3039d = add i32 %v0_3039d, -16
  %v2_3039d = inttoptr i32 %v1_3039d to i32*
  %v3_3039d = load i32, i32* %v2_3039d, align 4
  store i32 %v3_3039d, i32* %eax.global-to-local, align 8
  %v2_303a0 = add i32 %v3_3039d, 12
  %v3_303a0 = inttoptr i32 %v2_303a0 to i32*
  store i32 %v3_30396, i32* %v3_303a0, align 4
  %v0_303a3.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_303a3

dec_label_pc_303a3:                               ; preds = %dec_label_pc_3037a, %dec_label_pc_30349
  %v0_303a3 = phi i32 [ %v0_303a3.pre, %dec_label_pc_3037a ], [ %v0_30370, %dec_label_pc_30349 ]
  %v1_303a3 = add i32 %v0_303a3, -16
  %v2_303a3 = inttoptr i32 %v1_303a3 to i32*
  %v3_303a3 = load i32, i32* %v2_303a3, align 4
  store i32 %v3_303a3, i32* %eax.global-to-local, align 8
  %v2_303a6 = add i32 %v0_303a3, -36
  %v3_303a6 = inttoptr i32 %v2_303a6 to i32*
  store i32 %v3_303a3, i32* %v3_303a6, align 4
  %v0_303a9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_303a9 = add i32 %v0_303a9, -32
  %v2_303a9 = inttoptr i32 %v1_303a9 to i32*
  %v3_303a9 = load i32, i32* %v2_303a9, align 4
  store i32 %v3_303a9, i32* %eax.global-to-local, align 8
  store i32 %v3_303a9, i32* %stack_var_-4, align 4
  %v1_303af = call i32 @unknown_62767(i32 %v3_303a9)
  store i32 %v1_303af, i32* %eax.global-to-local, align 8
  %v1_303b4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_303b4 = add i32 %v1_303b4, -32
  %v3_303b4 = inttoptr i32 %v2_303b4 to i32*
  store i32 %v1_303af, i32* %v3_303b4, align 4
  br label %dec_label_pc_303b7

dec_label_pc_303b7:                               ; preds = %dec_label_pc_303a3, %dec_label_pc_302fe
  %v0_303b7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_303b7 = add i32 %v0_303b7, -32
  %v2_303b7 = inttoptr i32 %v1_303b7 to i32*
  %v3_303b7 = load i32, i32* %v2_303b7, align 4
  %v10_303b7 = icmp eq i32 %v3_303b7, 0
  %v1_303bb = icmp eq i1 %v10_303b7, false
  %v2_303bb = zext i1 %v1_303bb to i32
  %v3_303bb = load i32, i32* %eax.global-to-local, align 8
  %v4_303bb = and i32 %v3_303bb, -256
  %v5_303bb = or i32 %v2_303bb, %v4_303bb
  store i32 %v5_303bb, i32* %eax.global-to-local, align 8
  %v5_303be = icmp eq i1 %v1_303bb, false
  %v1_303c0 = icmp eq i1 %v5_303be, false
  br i1 %v1_303c0, label %dec_label_pc_30349, label %dec_label_pc_303c2

dec_label_pc_303c2:                               ; preds = %dec_label_pc_303b7
  %v1_303c2 = add i32 %v0_303b7, -20
  %v2_303c2 = inttoptr i32 %v1_303c2 to i32*
  %v3_303c2 = load i32, i32* %v2_303c2, align 4
  store i32 %v3_303c2, i32* @eax, align 8
  %v1_303c5 = add i32 %v0_303b7, -12
  %v2_303c5 = inttoptr i32 %v1_303c5 to i32*
  %v3_303c5 = load i32, i32* %v2_303c5, align 4
  %v4_303c8 = icmp eq i32 %v3_303c5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_303c8, label %bb, label %dec_label_pc_303d1

bb:                                               ; preds = %dec_label_pc_303c2
  %v1_303cf = call i32 @function_30408()
  store i32 %v1_303cf, i32* @eax, align 8
  br label %dec_label_pc_303d1

dec_label_pc_303d1:                               ; preds = %bb, %dec_label_pc_303c2
  %v0_303d1 = call i32 @function_30403()
  store i32 %v0_303d1, i32* %eax.global-to-local, align 8
  ret i32 %v0_303d1

; uselistorder directives
  uselistorder i32* %v2_303b7, { 1, 0 }
  uselistorder i32 %v0_303b7, { 1, 0, 3, 2 }
  uselistorder i32 %v0_303a3, { 1, 0 }
  uselistorder i32 %v0_3030e, { 1, 0 }
  uselistorder i32 %v0_302fe, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i32* %ebp.global-to-local, { 14, 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @unknown_62767, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_6057c, { 1, 0 }
  uselistorder i32 (i32)* @unknown_62737, { 1, 0 }
  uselistorder i32 -117, { 0, 2, 3, 1 }
  uselistorder i32 139, { 1, 2, 3, 4, 0, 7, 8, 5, 6 }
}

define i32 @function_303d4() local_unnamed_addr {
dec_label_pc_303d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_303d4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_303d4
}

define i32 @function_30403() local_unnamed_addr {
dec_label_pc_30403:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30408() local_unnamed_addr {
dec_label_pc_30408:
  %v0_3040d = load i32, i32* @eax, align 8
  ret i32 %v0_3040d
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3040e:
  %v1_30428 = add i32 %arg1, 8
  %v2_30428 = inttoptr i32 %v1_30428 to i32*
  %v3_30428 = load i32, i32* %v2_30428, align 4
  store i32 %v3_30428, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30437

bb:                                               ; preds = %dec_label_pc_3040e
  %v2_30435 = call i32 @function_3043c(i32 %arg1)
  br label %dec_label_pc_30437

dec_label_pc_30437:                               ; preds = %bb, %dec_label_pc_3040e
  %v4_30435 = phi i32 [ %v2_30435, %bb ], [ %v3_30428, %dec_label_pc_3040e ]
  ret i32 %v4_30435
}

define i32 @function_3043c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3043c:
  %v0_3043d = load i32, i32* @eax, align 8
  ret i32 %v0_3043d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3043e:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_30454(i32 %arg1) local_unnamed_addr {
dec_label_pc_30454:
  %v7_30454 = load i32, i32* @ebx, align 8
  %v8_30454 = add i32 %v7_30454, -1065098171
  %v9_30454 = inttoptr i32 %v8_30454 to i8*
  store i8 -1, i8* %v9_30454, align 1
  %v0_3045b = load i32, i32* @ebp, align 4
  %v1_3045b = add i32 %v0_3045b, -12
  %v2_3045b = inttoptr i32 %v1_3045b to i32*
  %v3_3045b = load i32, i32* %v2_3045b, align 4
  %v4_3045e = icmp eq i32 %v3_3045b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_3045e, label %bb, label %dec_label_pc_30454.dec_label_pc_30467_crit_edge

dec_label_pc_30454.dec_label_pc_30467_crit_edge:  ; preds = %dec_label_pc_30454
  %v2_30465.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_30467

bb:                                               ; preds = %dec_label_pc_30454
  %v1_30465 = call i32 @function_3046c()
  br label %dec_label_pc_30467

dec_label_pc_30467:                               ; preds = %dec_label_pc_30454.dec_label_pc_30467_crit_edge, %bb
  %v2_30465 = phi i32 [ %v2_30465.pre, %dec_label_pc_30454.dec_label_pc_30467_crit_edge ], [ %v1_30465, %bb ]
  ret i32 %v2_30465

; uselistorder directives
  uselistorder label %dec_label_pc_30467, { 1, 0 }
}

define i32 @function_3046c() local_unnamed_addr {
dec_label_pc_3046c:
  %v0_3046d = load i32, i32* @eax, align 8
  ret i32 %v0_3046d
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3046e:
  ret i32 0
}

define i32 @function_30486(i32 %arg1) local_unnamed_addr {
dec_label_pc_30486:
  %v0_30486 = load i32, i32* @ebp, align 4
  %v1_30486 = add i32 %v0_30486, 1
  store i32 %v1_30486, i32* @ebp, align 4
  %v0_3048b = call i32 @function_30e37()
  store i32 %v0_3048b, i32* @eax, align 8
  %v0_30490 = load i32, i32* @ebp, align 4
  %v1_30490 = add i32 %v0_30490, -12
  %v2_30490 = inttoptr i32 %v1_30490 to i32*
  %v3_30490 = load i32, i32* %v2_30490, align 4
  %v4_30493 = icmp eq i32 %v3_30490, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_30493, label %bb, label %dec_label_pc_3049c

bb:                                               ; preds = %dec_label_pc_30486
  %v1_3049a = call i32 @function_304a1()
  br label %dec_label_pc_3049c

dec_label_pc_3049c:                               ; preds = %bb, %dec_label_pc_30486
  %v2_3049a = phi i32 [ %v1_3049a, %bb ], [ %v0_3048b, %dec_label_pc_30486 ]
  ret i32 %v2_3049a
}

define i32 @function_304a1() local_unnamed_addr {
dec_label_pc_304a1:
  %v0_304a2 = load i32, i32* @eax, align 8
  ret i32 %v0_304a2
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_304a4:
  %v1_304be = add i32 %arg1, 12
  store i32 %v1_304be, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_304cd

bb:                                               ; preds = %dec_label_pc_304a4
  %v2_304cb = call i32 @function_304d2(i32 %arg1)
  br label %dec_label_pc_304cd

dec_label_pc_304cd:                               ; preds = %bb, %dec_label_pc_304a4
  %v3_304cb = phi i32 [ %v2_304cb, %bb ], [ %v1_304be, %dec_label_pc_304a4 ]
  ret i32 %v3_304cb
}

define i32 @function_304d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_304d2:
  %v0_304d3 = load i32, i32* @eax, align 8
  ret i32 %v0_304d3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_304d4:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30502

bb:                                               ; preds = %dec_label_pc_304d4
  %v2_30500 = call i32 @function_30507(i32 %arg1)
  br label %dec_label_pc_30502

dec_label_pc_30502:                               ; preds = %bb, %dec_label_pc_304d4
  %v3_30500 = phi i32 [ %v2_30500, %bb ], [ %arg1, %dec_label_pc_304d4 ]
  ret i32 %v3_30500
}

define i32 @function_30507(i32 %arg1) local_unnamed_addr {
dec_label_pc_30507:
  %v0_30508 = load i32, i32* @eax, align 8
  ret i32 %v0_30508
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE12_M_rightmostEv() local_unnamed_addr {
dec_label_pc_3050a:
  %eax.global-to-local = alloca i32, align 4
  %v5_3050a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_3050a
}

define i32 @function_3050c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3050c:
  %v0_3050f = load i32, i32* @ebx, align 8
  %v1_3050f = add i32 %v0_3050f, 1166608453
  %v2_3050f = inttoptr i32 %v1_3050f to i8*
  %v3_3050f = load i8, i8* %v2_3050f, align 1
  %v4_3050f = load i32, i32* @ecx, align 4
  %v5_3050f = trunc i32 %v4_3050f to i8
  %v6_3050f = sub i8 %v3_3050f, %v5_3050f
  store i8 %v6_3050f, i8* %v2_3050f, align 1
  %v1_3051c = load i32, i32* @ebp, align 4
  %v2_3051c = add i32 %v1_3051c, -12
  %v3_3051c = inttoptr i32 %v2_3051c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_3051c, align 4
  %v0_30521 = load i32, i32* @ebp, align 4
  %v1_30521 = add i32 %v0_30521, -28
  %v2_30521 = inttoptr i32 %v1_30521 to i32*
  %v3_30521 = load i32, i32* %v2_30521, align 4
  %v1_30524 = add i32 %v3_30521, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_30524, i32* @eax, align 8
  %v1_30527 = add i32 %v0_30521, -12
  %v2_30527 = inttoptr i32 %v1_30527 to i32*
  %v3_30527 = load i32, i32* %v2_30527, align 4
  %v4_3052a = icmp eq i32 %v3_30527, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_3052a, label %bb, label %dec_label_pc_30533

bb:                                               ; preds = %dec_label_pc_3050c
  %v1_30531 = call i32 @function_30538()
  br label %dec_label_pc_30533

dec_label_pc_30533:                               ; preds = %bb, %dec_label_pc_3050c
  %v2_30531 = phi i32 [ %v1_30531, %bb ], [ %v1_30524, %dec_label_pc_3050c ]
  ret i32 %v2_30531
}

define i32 @function_30538() local_unnamed_addr {
dec_label_pc_30538:
  %v0_30539 = load i32, i32* @eax, align 8
  ret i32 %v0_30539
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IbxNS3_8functionIFbxEEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3053a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3055d

bb:                                               ; preds = %dec_label_pc_3053a
  %v2_3055b = call i32 @function_30562(i32 %arg1)
  br label %dec_label_pc_3055d

dec_label_pc_3055d:                               ; preds = %bb, %dec_label_pc_3053a
  %v3_3055b = phi i32 [ %v2_3055b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3053a ]
  ret i32 %v3_3055b
}

define i32 @function_30562(i32 %arg1) local_unnamed_addr {
dec_label_pc_30562:
  %v0_30563 = load i32, i32* @eax, align 8
  ret i32 %v0_30563
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISL_E() local_unnamed_addr {
dec_label_pc_30564:
  %eax.global-to-local = alloca i32, align 4
  %v17_30567 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_30567
}

define i32 @function_3056a() local_unnamed_addr {
dec_label_pc_3056a:
  %v0_3056a = load i32, i32* @ebp, align 4
  %v1_3056a = add i32 %v0_3056a, 8
  %v2_3056a = inttoptr i32 %v1_3056a to i32*
  %v3_3056a = load i32, i32* %v2_3056a, align 4
  %v2_3056d = add i32 %v0_3056a, -28
  %v3_3056d = inttoptr i32 %v2_3056d to i32*
  store i32 %v3_3056a, i32* %v3_3056d, align 4
  %v0_30570 = load i32, i32* @ebp, align 4
  %v1_30570 = add i32 %v0_30570, 12
  %v2_30570 = inttoptr i32 %v1_30570 to i32*
  %v3_30570 = load i32, i32* %v2_30570, align 4
  %v2_30573 = add i32 %v0_30570, -32
  %v3_30573 = inttoptr i32 %v2_30573 to i32*
  store i32 %v3_30570, i32* %v3_30573, align 4
  %v1_3057c = load i32, i32* @ebp, align 4
  %v2_3057c = add i32 %v1_3057c, -12
  %v3_3057c = inttoptr i32 %v2_3057c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_3057c, align 4
  %v0_30581 = load i32, i32* @ebp, align 4
  %v1_30581 = add i32 %v0_30581, -28
  %v2_30581 = inttoptr i32 %v1_30581 to i32*
  %v3_30581 = load i32, i32* %v2_30581, align 4
  %v1_30584 = add i32 %v0_30581, -32
  %v2_30584 = inttoptr i32 %v1_30584 to i32*
  %v3_30584 = load i32, i32* %v2_30584, align 4
  %v2_30587 = inttoptr i32 %v3_30581 to i32*
  store i32 %v3_30584, i32* %v2_30587, align 4
  %v0_30589 = load i32, i32* @ebp, align 4
  %v1_30589 = add i32 %v0_30589, -12
  %v2_30589 = inttoptr i32 %v1_30589 to i32*
  %v3_30589 = load i32, i32* %v2_30589, align 4
  %v3_3058c = xor i32 %v3_30589, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3058c = icmp eq i32 %v3_3058c, 0
  store i32 %v3_3058c, i32* @eax, align 8
  br i1 %v4_3058c, label %bb, label %dec_label_pc_30595

bb:                                               ; preds = %dec_label_pc_3056a
  %v1_30593 = call i32 @function_3059a()
  br label %dec_label_pc_30595

dec_label_pc_30595:                               ; preds = %bb, %dec_label_pc_3056a
  %v3_30593 = phi i32 [ %v1_30593, %bb ], [ %v3_3058c, %dec_label_pc_3056a ]
  ret i32 %v3_30593
}

define i32 @function_3059a() local_unnamed_addr {
dec_label_pc_3059a:
  %v0_3059b = load i32, i32* @eax, align 8
  ret i32 %v0_3059b
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8key_compEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3059c:
  ret i32 %arg1
}

define i32 @function_305aa() local_unnamed_addr {
dec_label_pc_305aa:
  %v0_305aa = load i32, i32* @eax, align 8
  %v2_305aa = or i32 %v0_305aa, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i32 %v2_305aa, i32* @eax, align 8
  %v0_305ac = load i32, i32* @ebp, align 4
  %v1_305ac = add i32 %v0_305ac, 1
  %v9_305ac = icmp eq i32 %v1_305ac, 0
  store i32 %v1_305ac, i32* @ebp, align 4
  %v0_305ad = load i32, i32* @ecx, align 4
  %v1_305ad = add i32 %v0_305ad, -1
  store i32 %v1_305ad, i32* @ecx, align 4
  %v2_305ad = icmp eq i32 %v1_305ad, 0
  %v4_305ad = or i1 %v9_305ac, %v2_305ad
  br i1 %v4_305ad, label %dec_label_pc_305af, label %bb

bb:                                               ; preds = %dec_label_pc_305aa
  %v6_305ad = call i32 @function_30614()
  %v1_305b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_305af

dec_label_pc_305af:                               ; preds = %dec_label_pc_305aa, %bb
  %v1_305b4 = phi i32 [ %v1_305ac, %dec_label_pc_305aa ], [ %v1_305b4.pre, %bb ]
  %v2_305b4 = add i32 %v1_305b4, -12
  %v3_305b4 = inttoptr i32 %v2_305b4 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_305b4, align 4
  %v0_305b9 = load i32, i32* @ebp, align 4
  %v1_305b9 = add i32 %v0_305b9, -28
  %v2_305b9 = inttoptr i32 %v1_305b9 to i32*
  %v3_305b9 = load i32, i32* %v2_305b9, align 4
  store i32 %v3_305b9, i32* @eax, align 8
  %v1_305bc = add i32 %v0_305b9, -12
  %v2_305bc = inttoptr i32 %v1_305bc to i32*
  %v3_305bc = load i32, i32* %v2_305bc, align 4
  %v4_305bf = icmp eq i32 %v3_305bc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_305bf, label %bb3, label %dec_label_pc_305c8

bb3:                                              ; preds = %dec_label_pc_305af
  %v1_305c6 = call i32 @function_305cd()
  br label %dec_label_pc_305c8

dec_label_pc_305c8:                               ; preds = %bb3, %dec_label_pc_305af
  %v2_305c6 = phi i32 [ %v1_305c6, %bb3 ], [ %v3_305b9, %dec_label_pc_305af ]
  ret i32 %v2_305c6

; uselistorder directives
  uselistorder i32 %v1_305ad, { 1, 0 }
  uselistorder label %dec_label_pc_305af, { 1, 0 }
}

define i32 @function_305cd() local_unnamed_addr {
dec_label_pc_305cd:
  %v0_305ce = load i32, i32* @eax, align 8
  ret i32 %v0_305ce
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISL_ERKSL_(i32 %arg1) local_unnamed_addr {
dec_label_pc_305d2:
  ret i32 %arg1
}

define i32 @function_305dc() local_unnamed_addr {
dec_label_pc_305dc:
  %v0_305dc = load i32, i32* @eax, align 8
  %v1_305dc = load i32, i32* @ebp, align 4
  %v2_305dc = add i32 %v1_305dc, -60
  %v3_305dc = inttoptr i32 %v2_305dc to i32*
  store i32 %v0_305dc, i32* %v3_305dc, align 4
  %v0_305df = load i32, i32* @ebp, align 4
  %v1_305df = add i32 %v0_305df, 12
  %v2_305df = inttoptr i32 %v1_305df to i32*
  %v3_305df = load i32, i32* %v2_305df, align 4
  %v2_305e2 = add i32 %v0_305df, -64
  %v3_305e2 = inttoptr i32 %v2_305e2 to i32*
  store i32 %v3_305df, i32* %v3_305e2, align 4
  %v0_305e5 = load i32, i32* @ebp, align 4
  %v1_305e5 = add i32 %v0_305e5, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_305e5 = inttoptr i32 %v1_305e5 to i32*
  %v3_305e5 = load i32, i32* %v2_305e5, align 4
  %v2_305e8 = add i32 %v0_305e5, -68
  %v3_305e8 = inttoptr i32 %v2_305e8 to i32*
  store i32 %v3_305e5, i32* %v3_305e8, align 4
  %v0_305eb = load i32, i32* @ebp, align 4
  %v1_305eb = add i32 %v0_305eb, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_305eb = inttoptr i32 %v1_305eb to i32*
  %v3_305eb = load i32, i32* %v2_305eb, align 4
  %v2_305ee = add i32 %v0_305eb, -72
  %v3_305ee = inttoptr i32 %v2_305ee to i32*
  store i32 %v3_305eb, i32* %v3_305ee, align 4
  %v1_305f7 = load i32, i32* @ebp, align 4
  %v2_305f7 = add i32 %v1_305f7, -12
  %v3_305f7 = inttoptr i32 %v2_305f7 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_305f7, align 4
  %v0_305fc = load i32, i32* @ebp, align 4
  %v1_305fc = add i32 %v0_305fc, -68
  %v2_305fc = inttoptr i32 %v1_305fc to i32*
  %v3_305fc = load i32, i32* %v2_305fc, align 4
  store i32 %v3_305fc, i32* @ebx, align 8
  %v1_305ff = add i32 %v0_305fc, -64
  %v2_305ff = inttoptr i32 %v1_305ff to i32*
  %v3_305ff = load i32, i32* %v2_305ff, align 4
  %v1_30605 = call i32 @unknown_54a1a(i32 %v3_305ff)
  %v0_3060a = load i32, i32* @ebx, align 8
  %v12_3060a = icmp eq i32 %v0_3060a, %v1_30605
  %v1_3060c = zext i1 %v12_3060a to i32
  %v3_3060c = and i32 %v1_30605, -256
  %v4_3060c = or i32 %v1_3060c, %v3_3060c
  ret i32 %v4_3060c

; uselistorder directives
  uselistorder i32 %v1_30605, { 1, 0 }
}

define i32 @function_30614() local_unnamed_addr {
dec_label_pc_30614:
  %v2_30614 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30614 = load i32, i32* @eax, align 8
  %v4_30614 = trunc i32 %v3_30614 to i8
  %v5_30614 = add i8 %v4_30614, %v2_30614
  %v21_30614 = inttoptr i32 %v3_30614 to i8*
  store i8 %v5_30614, i8* %v21_30614, align 1
  %v0_30616 = load i32, i32* @ebx, align 8
  %v1_30616 = add i32 %v0_30616, 76136517
  %v2_30616 = inttoptr i32 %v1_30616 to i8*
  %v3_30616 = load i8, i8* %v2_30616, align 1
  %v4_30616 = load i32, i32* @ecx, align 4
  %v5_30616 = trunc i32 %v4_30616 to i8
  %v6_30616 = add i8 %v5_30616, %v3_30616
  store i8 %v6_30616, i8* %v2_30616, align 1
  %v0_3061c = load i32, i32* @eax, align 8
  %v1_3061c = trunc i32 %v0_3061c to i8
  %v2_3061c = and i8 %v1_3061c, -24
  %v0_30621 = load i32, i32* @ebp, align 4
  %v1_30621 = add i32 %v0_30621, -1958120256
  %v2_30621 = inttoptr i32 %v1_30621 to i8*
  %v3_30621 = load i8, i8* %v2_30621, align 1
  %v6_30621 = add i8 %v3_30621, %v2_3061c
  store i8 %v6_30621, i8* %v2_30621, align 1
  %v0_30627 = load i32, i32* @ebp, align 4
  %v1_30627 = add i32 %v0_30627, 1
  store i32 %v1_30627, i32* @ebp, align 4
  %v1_3062d = add i32 %v0_30627, -16
  %v1_30633 = call i32 @unknown_5a070(i32 %v1_3062d)
  ret i32 %v1_30633
}

define i32 @function_30638() local_unnamed_addr {
dec_label_pc_30638:
  %v0_30638 = load i32, i32* @eax, align 8
  store i32 %v0_30638, i32* @ebx, align 8
  %v0_3063a = load i32, i32* @ebp, align 4
  %v1_3063a = add i32 %v0_3063a, -64
  %v2_3063a = inttoptr i32 %v1_3063a to i32*
  %v3_3063a = load i32, i32* %v2_3063a, align 4
  %v1_30640 = call i32 @unknown_60adc(i32 %v3_3063a)
  %v1_30645 = inttoptr i32 %v1_30640 to i32*
  %v2_30645 = load i32, i32* %v1_30645, align 4
  %v1_3064a = call i32 @unknown_5a231(i32 %v2_30645)
  %v0_30651 = load i32, i32* @ebp, align 4
  %v1_30651 = add i32 %v0_30651, -64
  %v2_30651 = inttoptr i32 %v1_30651 to i32*
  %v3_30651 = load i32, i32* %v2_30651, align 4
  %v0_30654 = load i32, i32* @ebx, align 8
  %v3_3065f = call i32 @unknown_51d12(i32 %v3_30651, i32 %v1_3064a, i32 %v0_30654)
  %v4_30664 = trunc i32 %v3_3065f to i8
  %v5_30664 = icmp ne i8 %v4_30664, 0
  %v5_30674 = icmp eq i1 %v5_30664, false
  br i1 %v5_30674, label %bb, label %dec_label_pc_30678

bb:                                               ; preds = %dec_label_pc_30638
  %v1_30676 = call i32 @function_306b2()
  br label %dec_label_pc_30678

dec_label_pc_30678:                               ; preds = %bb, %dec_label_pc_30638
  %v0_30678 = load i32, i32* @ebp, align 4
  %v1_30678 = add i32 %v0_30678, -64
  %v2_30678 = inttoptr i32 %v1_30678 to i32*
  %v3_30678 = load i32, i32* %v2_30678, align 4
  %v1_3067e = call i32 @unknown_60adc(i32 %v3_30678)
  %v0_30685 = load i32, i32* @ebp, align 4
  %v1_30685 = add i32 %v0_30685, -60
  %v2_30685 = inttoptr i32 %v1_30685 to i32*
  %v3_30685 = load i32, i32* %v2_30685, align 4
  %v1_30688 = add i32 %v0_30685, -72
  %v2_30688 = inttoptr i32 %v1_30688 to i32*
  %v3_30688 = load i32, i32* %v2_30688, align 4
  store i32 %v3_30688, i32* @ecx, align 4
  ret i32 %v3_30685
}

define i32 @function_30694() local_unnamed_addr {
dec_label_pc_30694:
  %eax.global-to-local = alloca i32, align 4
  %v0_30695 = load i32, i32* @eax, align 8
  %v1_30695 = trunc i32 %v0_30695 to i8
  %v2_30695 = and i8 %v1_30695, 8
  %v8_30695 = zext i8 %v2_30695 to i32
  %v10_30695 = and i32 %v0_30695, -256
  %v11_30695 = or i32 %v8_30695, %v10_30695
  store i32 %v11_30695, i32* %eax.global-to-local, align 8
  %v1_30697 = inttoptr i32 %v11_30695 to i8*
  %v2_30697 = load i8, i8* %v1_30697, align 8
  %v5_30697 = add i8 %v2_30697, %v2_30695
  store i8 %v5_30697, i8* %v1_30697, align 8
  %v0_30699 = load i32, i32* %eax.global-to-local, align 8
  %v1_30699 = inttoptr i32 %v0_30699 to i8*
  %v2_30699 = load i8, i8* %v1_30699, align 1
  %v4_30699 = trunc i32 %v0_30699 to i8
  %v5_30699 = add i8 %v2_30699, %v4_30699
  store i8 %v5_30699, i8* %v1_30699, align 1
  %v0_3069b = load i32, i32* @ebp, align 4
  %v1_3069b = add i32 %v0_3069b, -64
  %v2_3069b = inttoptr i32 %v1_3069b to i32*
  %v3_3069b = load i32, i32* %v2_3069b, align 4
  %v0_306a2 = load i32, i32* %eax.global-to-local, align 8
  %v2_306a5 = call i32 @unknown_5a0a4(i32 %v0_306a2, i32 %v3_3069b)
  store i32 %v2_306a5, i32* %eax.global-to-local, align 8
  %v0_306ad = call i32 @function_309d2()
  store i32 %v0_306ad, i32* %eax.global-to-local, align 8
  ret i32 %v0_306ad
}

define i32 @function_306b2() local_unnamed_addr {
dec_label_pc_306b2:
  %v0_306b2 = load i32, i32* @ebp, align 4
  %v1_306b2 = add i32 %v0_306b2, -48
  %v1_306b5 = add i32 %v0_306b2, -72
  %v2_306b5 = inttoptr i32 %v1_306b5 to i32*
  %v3_306b5 = load i32, i32* %v2_306b5, align 4
  %v1_306bc = add i32 %v0_306b2, -64
  %v2_306bc = inttoptr i32 %v1_306bc to i32*
  %v3_306bc = load i32, i32* %v2_306bc, align 4
  %v3_306c6 = call i32 @unknown_54d46(i32 %v1_306b2, i32 %v3_306bc, i32 %v3_306b5)
  %v0_306ce = load i32, i32* @ebp, align 4
  %v1_306ce = add i32 %v0_306ce, -60
  %v2_306ce = inttoptr i32 %v1_306ce to i32*
  %v3_306ce = load i32, i32* %v2_306ce, align 4
  %v1_306d1 = add i32 %v0_306ce, -48
  %v2_306d1 = inttoptr i32 %v1_306d1 to i32*
  %v3_306d1 = load i32, i32* %v2_306d1, align 4
  %v2_306d4 = inttoptr i32 %v3_306ce to i32*
  store i32 %v3_306d1, i32* %v2_306d4, align 4
  %v0_306d6 = call i32 @function_309d2()
  ret i32 %v0_306d6
}

define i32 @function_306d0() local_unnamed_addr {
dec_label_pc_306d0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_306e0() local_unnamed_addr {
dec_label_pc_306e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_306e0 = load i32, i32* @eax, align 8
  %v1_306e0 = trunc i32 %v0_306e0 to i8
  %v2_306e0 = and i8 %v1_306e0, -24
  %v8_306e0 = zext i8 %v2_306e0 to i32
  %v10_306e0 = and i32 %v0_306e0, -256
  %v11_306e0 = or i32 %v8_306e0, %v10_306e0
  %v0_306e2 = load i32, i32* @ebx, align 8
  %v1_306e2 = add i32 %v0_306e2, -1
  store i32 %v1_306e2, i32* %ebx.global-to-local, align 8
  %v3_306e4 = inttoptr i32 %v11_306e0 to i8*
  %v4_306e4 = load i8, i8* %v3_306e4, align 8
  %v5_306e4 = add i8 %v4_306e4, %v2_306e0
  %v20_306e4 = zext i8 %v5_306e4 to i32
  %v23_306e4 = or i32 %v20_306e4, %v10_306e0
  store i32 %v23_306e4, i32* %ebx.global-to-local, align 8
  %v0_306e8 = load i32, i32* @ebp, align 4
  %v1_306ef = add i32 %v0_306e8, -16
  %v1_306f5 = call i32 @unknown_5a070(i32 %v1_306ef)
  %v0_306fa = load i32, i32* @ebp, align 4
  %v1_306fa = add i32 %v0_306fa, -64
  %v2_306fa = inttoptr i32 %v1_306fa to i32*
  %v3_306fa = load i32, i32* %v2_306fa, align 4
  %v0_306fd = load i32, i32* %ebx.global-to-local, align 8
  %v3_30708 = call i32 @unknown_51d12(i32 %v3_306fa, i32 %v1_306f5, i32 %v0_306fd)
  store i1 false, i1* @cf, align 1
  ret i32 %v3_30708

; uselistorder directives
  uselistorder i8 -24, { 1, 2, 4, 5, 6, 0, 7, 3 }
}

define i32 @function_30710() local_unnamed_addr {
dec_label_pc_30710:
  %ebx.global-to-local = alloca i32, align 4
  %v0_30710 = load i32, i32* @eax, align 8
  %v5_30710 = trunc i32 %v0_30710 to i8
  %v5_30713 = mul i8 %v5_30710, 2
  %v21_30713 = inttoptr i32 %v0_30710 to i8*
  store i8 %v5_30713, i8* %v21_30713, align 1
  %v0_30715 = load i32, i32* @ebp, align 4
  %v1_30715 = add i32 %v0_30715, -68
  %v2_30715 = inttoptr i32 %v1_30715 to i32*
  %v3_30715 = load i32, i32* %v2_30715, align 4
  %v2_30718 = add i32 %v0_30715, -24
  %v3_30718 = inttoptr i32 %v2_30718 to i32*
  store i32 %v3_30715, i32* %v3_30718, align 4
  %v0_3071b = load i32, i32* @ebp, align 4
  %v1_3071b = add i32 %v0_3071b, -68
  %v2_3071b = inttoptr i32 %v1_3071b to i32*
  %v3_3071b = load i32, i32* %v2_3071b, align 4
  store i32 %v3_3071b, i32* %ebx.global-to-local, align 8
  %v1_3071e = add i32 %v0_3071b, -64
  %v2_3071e = inttoptr i32 %v1_3071e to i32*
  %v3_3071e = load i32, i32* %v2_3071e, align 4
  %v1_30724 = call i32 @unknown_60a76(i32 %v3_3071e)
  %v1_30729 = inttoptr i32 %v1_30724 to i32*
  %v2_30729 = load i32, i32* %v1_30729, align 4
  %v0_3072b = load i32, i32* %ebx.global-to-local, align 8
  %v12_3072b = icmp eq i32 %v0_3072b, %v2_30729
  %v5_30730 = icmp eq i1 %v12_3072b, false
  %v0_30777 = load i32, i32* @ebp, align 4
  br i1 %v5_30730, label %dec_label_pc_30777, label %dec_label_pc_30734

dec_label_pc_30734:                               ; preds = %dec_label_pc_30710
  %v1_30734 = add i32 %v0_30777, -64
  %v2_30734 = inttoptr i32 %v1_30734 to i32*
  %v3_30734 = load i32, i32* %v2_30734, align 4
  %v1_3073a = call i32 @unknown_60a76(i32 %v3_30734)
  %v1_3073f = inttoptr i32 %v1_3073a to i32*
  %v2_3073f = load i32, i32* %v1_3073f, align 4
  store i32 %v2_3073f, i32* @ebx, align 8
  %v0_30741 = load i32, i32* @ebp, align 4
  %v1_30741 = add i32 %v0_30741, -64
  %v2_30741 = inttoptr i32 %v1_30741 to i32*
  %v3_30741 = load i32, i32* %v2_30741, align 4
  %v1_30747 = call i32 @unknown_60a76(i32 %v3_30741)
  %v0_3074e = load i32, i32* @ebp, align 4
  %v1_3074e = add i32 %v0_3074e, -60
  %v2_3074e = inttoptr i32 %v1_3074e to i32*
  %v3_3074e = load i32, i32* %v2_3074e, align 4
  %v1_30751 = add i32 %v0_3074e, -72
  %v2_30751 = inttoptr i32 %v1_30751 to i32*
  %v3_30751 = load i32, i32* %v2_30751, align 4
  store i32 %v3_30751, i32* @ecx, align 4
  %v1_30760 = add i32 %v0_3074e, -64
  %v2_30760 = inttoptr i32 %v1_30760 to i32*
  %v3_30760 = load i32, i32* %v2_30760, align 4
  %v2_3076a = call i32 @unknown_5a0a4(i32 %v3_3074e, i32 %v3_30760)
  %v0_30772 = call i32 @function_309d2()
  ret i32 %v0_30772

dec_label_pc_30777:                               ; preds = %dec_label_pc_30710
  %v1_3077e = add i32 %v0_30777, -15
  %v1_30784 = call i32 @unknown_5a070(i32 %v1_3077e)
  store i32 %v1_30784, i32* @ebx, align 8
  %v0_3078b = load i32, i32* @ebp, align 4
  %v1_3078b = add i32 %v0_3078b, -24
  %v1_30791 = call i32 @unknown_62adc(i32 %v1_3078b)
  %v1_30796 = inttoptr i32 %v1_30791 to i32*
  %v2_30796 = load i32, i32* %v1_30796, align 4
  %v1_3079b = call i32 @unknown_5a231(i32 %v2_30796)
  %v0_307a2 = load i32, i32* @ebp, align 4
  %v1_307a2 = add i32 %v0_307a2, -64
  %v2_307a2 = inttoptr i32 %v1_307a2 to i32*
  %v3_307a2 = load i32, i32* %v2_307a2, align 4
  %v0_307a5 = load i32, i32* @ebx, align 8
  %v3_307b0 = call i32 @unknown_51d12(i32 %v3_307a2, i32 %v1_3079b, i32 %v0_307a5)
  %v4_307b5 = trunc i32 %v3_307b0 to i8
  %v5_307b5 = icmp eq i8 %v4_307b5, 0
  %v0_3082c = load i32, i32* @ebp, align 4
  br i1 %v5_307b5, label %dec_label_pc_3082c, label %dec_label_pc_307b9

dec_label_pc_307b9:                               ; preds = %dec_label_pc_30777
  %v1_307b9 = add i32 %v0_3082c, -24
  %v2_307b9 = inttoptr i32 %v1_307b9 to i32*
  %v3_307b9 = load i32, i32* %v2_307b9, align 4
  %v1_307bf = call i32 @unknown_62a4b(i32 %v3_307b9)
  %v1_307c4 = icmp eq i32 %v1_307bf, 0
  %v5_307c9 = icmp eq i1 %v1_307c4, false
  %v0_307fd = load i32, i32* @ebp, align 4
  br i1 %v5_307c9, label %dec_label_pc_307fd, label %dec_label_pc_307cd

dec_label_pc_307cd:                               ; preds = %dec_label_pc_307b9
  %v1_307d0 = add i32 %v0_307fd, -60
  %v2_307d0 = inttoptr i32 %v1_307d0 to i32*
  %v3_307d0 = load i32, i32* %v2_307d0, align 4
  %v1_307d3 = add i32 %v0_307fd, -72
  %v2_307d3 = inttoptr i32 %v1_307d3 to i32*
  %v3_307d3 = load i32, i32* %v2_307d3, align 4
  store i32 %v3_307d3, i32* @ecx, align 4
  %v1_307e6 = add i32 %v0_307fd, -64
  %v2_307e6 = inttoptr i32 %v1_307e6 to i32*
  %v3_307e6 = load i32, i32* %v2_307e6, align 4
  %v2_307f0 = call i32 @unknown_5a0a4(i32 %v3_307d0, i32 %v3_307e6)
  %v0_307f8 = call i32 @function_309d2()
  ret i32 %v0_307f8

dec_label_pc_307fd:                               ; preds = %dec_label_pc_307b9
  %v1_307fd = add i32 %v0_307fd, -68
  %v2_307fd = inttoptr i32 %v1_307fd to i32*
  %v3_307fd = load i32, i32* %v2_307fd, align 4
  store i32 %v3_307fd, i32* @ecx, align 4
  %v1_30803 = add i32 %v0_307fd, -60
  %v2_30803 = inttoptr i32 %v1_30803 to i32*
  %v3_30803 = load i32, i32* %v2_30803, align 4
  %v1_30806 = add i32 %v0_307fd, -72
  %v2_30806 = inttoptr i32 %v1_30806 to i32*
  %v3_30806 = load i32, i32* %v2_30806, align 4
  store i32 %v3_30806, i32* @ebx, align 8
  %v1_30815 = add i32 %v0_307fd, -64
  %v2_30815 = inttoptr i32 %v1_30815 to i32*
  %v3_30815 = load i32, i32* %v2_30815, align 4
  %v2_3081f = call i32 @unknown_5a0a4(i32 %v3_30803, i32 %v3_30815)
  %v0_30827 = call i32 @function_309d2()
  ret i32 %v0_30827

dec_label_pc_3082c:                               ; preds = %dec_label_pc_30777
  %v1_3082c = add i32 %v0_3082c, -40
  %v1_3082f = add i32 %v0_3082c, -72
  %v2_3082f = inttoptr i32 %v1_3082f to i32*
  %v3_3082f = load i32, i32* %v2_3082f, align 4
  %v1_30836 = add i32 %v0_3082c, -64
  %v2_30836 = inttoptr i32 %v1_30836 to i32*
  %v3_30836 = load i32, i32* %v2_30836, align 4
  %v3_30840 = call i32 @unknown_54d46(i32 %v1_3082c, i32 %v3_30836, i32 %v3_3082f)
  %v0_30848 = load i32, i32* @ebp, align 4
  %v1_30848 = add i32 %v0_30848, -60
  %v2_30848 = inttoptr i32 %v1_30848 to i32*
  %v3_30848 = load i32, i32* %v2_30848, align 4
  %v1_3084b = add i32 %v0_30848, -40
  %v2_3084b = inttoptr i32 %v1_3084b to i32*
  %v3_3084b = load i32, i32* %v2_3084b, align 4
  %v2_3084e = inttoptr i32 %v3_30848 to i32*
  store i32 %v3_3084b, i32* %v2_3084e, align 4
  %v0_30850 = call i32 @function_309d2()
  ret i32 %v0_30850

; uselistorder directives
  uselistorder i32 %v0_307fd, { 0, 2, 1, 6, 4, 3, 5 }
  uselistorder i32 %v0_3082c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_30777, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5a070, { 2, 1, 0 }
  uselistorder i32 -15, { 2, 0, 9, 10, 5, 6, 7, 11, 12, 8, 3, 4, 1 }
  uselistorder i32 (i32)* @unknown_60a76, { 2, 1, 0 }
}

define i32 @function_30868() local_unnamed_addr {
dec_label_pc_30868:
  %eax.global-to-local = alloca i32, align 4
  %v0_30868 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30868
}

define i32 @function_3086a() local_unnamed_addr {
dec_label_pc_3086a:
  %eax.global-to-local = alloca i32, align 4
  %v0_30875 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30875
}

define i32 @function_30898(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30898:
  store i32 %arg1, i32* @ebp, align 4
  %v5_30898 = load i32, i32* @eax, align 8
  ret i32 %v5_30898
}

define i32 @function_3089a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3089a:
  %v0_3089a = load i32, i32* @ebp, align 4
  %v1_3089a = add i32 %v0_3089a, -64
  %v2_3089a = inttoptr i32 %v1_3089a to i32*
  %v3_3089a = load i32, i32* %v2_3089a, align 4
  %v1_308a0 = call i32 @unknown_60adc(i32 %v3_3089a)
  %v1_308a5 = inttoptr i32 %v1_308a0 to i32*
  %v2_308a5 = load i32, i32* %v1_308a5, align 4
  %v0_308a7 = load i32, i32* @ebx, align 8
  %v12_308a7 = icmp eq i32 %v0_308a7, %v2_308a5
  %v5_308ac = icmp eq i1 %v12_308a7, false
  %v0_308ea = load i32, i32* @ebp, align 4
  br i1 %v5_308ac, label %dec_label_pc_308ea, label %dec_label_pc_308b0

dec_label_pc_308b0:                               ; preds = %dec_label_pc_3089a
  %v1_308b0 = add i32 %v0_308ea, -64
  %v2_308b0 = inttoptr i32 %v1_308b0 to i32*
  %v3_308b0 = load i32, i32* %v2_308b0, align 4
  %v1_308b6 = call i32 @unknown_60adc(i32 %v3_308b0)
  %v0_308bd = load i32, i32* @ebp, align 4
  %v1_308bd = add i32 %v0_308bd, -60
  %v2_308bd = inttoptr i32 %v1_308bd to i32*
  %v3_308bd = load i32, i32* %v2_308bd, align 4
  %v1_308d3 = add i32 %v0_308bd, -64
  %v2_308d3 = inttoptr i32 %v1_308d3 to i32*
  %v3_308d3 = load i32, i32* %v2_308d3, align 4
  %v2_308dd = call i32 @unknown_5a0a4(i32 %v3_308bd, i32 %v3_308d3)
  %v0_308e5 = call i32 @function_309d2()
  ret i32 %v0_308e5

dec_label_pc_308ea:                               ; preds = %dec_label_pc_3089a
  %v1_308ea = add i32 %v0_308ea, -24
  %v1_308f0 = call i32 @unknown_596f0(i32 %v1_308ea)
  %v1_308f5 = inttoptr i32 %v1_308f0 to i32*
  %v2_308f5 = load i32, i32* %v1_308f5, align 4
  %v1_308fa = call i32 @unknown_5a231(i32 %v2_308f5)
  %v0_30901 = load i32, i32* @ebp, align 4
  %v1_30908 = add i32 %v0_30901, -13
  ret i32 %v1_30908

; uselistorder directives
  uselistorder i32 %v0_308ea, { 1, 0 }
  uselistorder i32 (i32)* @unknown_5a231, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_60adc, { 3, 2, 1, 0 }
}

define i32 @function_30910() local_unnamed_addr {
dec_label_pc_30910:
  %v0_30910 = load i32, i32* @eax, align 8
  %v1_30910 = load i32, i32* @edi, align 8
  store i32 %v0_30910, i32* @edi, align 8
  %v5_30911 = add i32 %v1_30910, %v0_30910
  %v20_30911 = and i32 %v5_30911, 255
  %v22_30911 = and i32 %v1_30910, -256
  %v23_30911 = or i32 %v20_30911, %v22_30911
  %v0_30913 = load i32, i32* @ebp, align 4
  %v1_30913 = add i32 %v0_30913, -64
  %v2_30913 = inttoptr i32 %v1_30913 to i32*
  %v3_30913 = load i32, i32* %v2_30913, align 4
  %v0_30916 = load i32, i32* @ebx, align 8
  %v3_30921 = call i32 @unknown_51d12(i32 %v3_30913, i32 %v23_30911, i32 %v0_30916)
  %v4_30926 = trunc i32 %v3_30921 to i8
  %v5_30926 = icmp eq i8 %v4_30926, 0
  %v0_30997 = load i32, i32* @ebp, align 4
  br i1 %v5_30926, label %dec_label_pc_30997, label %dec_label_pc_3092a

dec_label_pc_3092a:                               ; preds = %dec_label_pc_30910
  %v1_3092a = add i32 %v0_30997, -68
  %v2_3092a = inttoptr i32 %v1_3092a to i32*
  %v3_3092a = load i32, i32* %v2_3092a, align 4
  %v1_30930 = call i32 @unknown_62a4b(i32 %v3_3092a)
  %v1_30935 = icmp eq i32 %v1_30930, 0
  %v5_3093a = icmp eq i1 %v1_30935, false
  %v0_3096b = load i32, i32* @ebp, align 4
  br i1 %v5_3093a, label %dec_label_pc_3096b, label %dec_label_pc_3093e

dec_label_pc_3093e:                               ; preds = %dec_label_pc_3092a
  %v1_30941 = add i32 %v0_3096b, -60
  %v2_30941 = inttoptr i32 %v1_30941 to i32*
  %v3_30941 = load i32, i32* %v2_30941, align 4
  %v1_30944 = add i32 %v0_3096b, -72
  %v2_30944 = inttoptr i32 %v1_30944 to i32*
  %v3_30944 = load i32, i32* %v2_30944, align 4
  store i32 %v3_30944, i32* @ecx, align 4
  %v1_30957 = add i32 %v0_3096b, -64
  %v2_30957 = inttoptr i32 %v1_30957 to i32*
  %v3_30957 = load i32, i32* %v2_30957, align 4
  %v2_30961 = call i32 @unknown_5a0a4(i32 %v3_30941, i32 %v3_30957)
  %v0_30969 = call i32 @function_309d2()
  ret i32 %v0_30969

dec_label_pc_3096b:                               ; preds = %dec_label_pc_3092a
  %v1_3096b = add i32 %v0_3096b, -24
  %v2_3096b = inttoptr i32 %v1_3096b to i32*
  %v3_3096b = load i32, i32* %v2_3096b, align 4
  store i32 %v3_3096b, i32* @ecx, align 4
  %v1_30971 = add i32 %v0_3096b, -60
  %v2_30971 = inttoptr i32 %v1_30971 to i32*
  %v3_30971 = load i32, i32* %v2_30971, align 4
  %v1_30974 = add i32 %v0_3096b, -72
  %v2_30974 = inttoptr i32 %v1_30974 to i32*
  %v3_30974 = load i32, i32* %v2_30974, align 4
  store i32 %v3_30974, i32* @ebx, align 8
  %v1_30983 = add i32 %v0_3096b, -64
  %v2_30983 = inttoptr i32 %v1_30983 to i32*
  %v3_30983 = load i32, i32* %v2_30983, align 4
  %v2_3098d = call i32 @unknown_5a0a4(i32 %v3_30971, i32 %v3_30983)
  %v0_30995 = call i32 @function_309d2()
  ret i32 %v0_30995

dec_label_pc_30997:                               ; preds = %dec_label_pc_30910
  %v1_30997 = add i32 %v0_30997, -32
  %v1_3099a = add i32 %v0_30997, -72
  %v2_3099a = inttoptr i32 %v1_3099a to i32*
  %v3_3099a = load i32, i32* %v2_3099a, align 4
  %v1_309a1 = add i32 %v0_30997, -64
  %v2_309a1 = inttoptr i32 %v1_309a1 to i32*
  %v3_309a1 = load i32, i32* %v2_309a1, align 4
  %v3_309ab = call i32 @unknown_54d46(i32 %v1_30997, i32 %v3_309a1, i32 %v3_3099a)
  %v0_309b3 = load i32, i32* @ebp, align 4
  %v1_309b3 = add i32 %v0_309b3, -60
  %v2_309b3 = inttoptr i32 %v1_309b3 to i32*
  %v3_309b3 = load i32, i32* %v2_309b3, align 4
  %v1_309b6 = add i32 %v0_309b3, -32
  %v2_309b6 = inttoptr i32 %v1_309b6 to i32*
  %v3_309b6 = load i32, i32* %v2_309b6, align 4
  %v2_309b9 = inttoptr i32 %v3_309b3 to i32*
  store i32 %v3_309b6, i32* %v2_309b9, align 4
  %v0_309bb = call i32 @function_309d2()
  ret i32 %v0_309bb

; uselistorder directives
  uselistorder i32 %v0_3096b, { 0, 2, 1, 6, 4, 3, 5 }
  uselistorder i32 %v0_30997, { 0, 2, 3, 1 }
  uselistorder i32 %v1_30910, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_54d46, { 2, 1, 0 }
  uselistorder i32 ()* @function_309d2, { 8, 7, 6, 9, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @unknown_5a0a4, { 5, 4, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_62a4b, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_51d12, { 3, 2, 1, 0 }
}

define i32 @function_309d2() local_unnamed_addr {
dec_label_pc_309d2:
  %v0_309d2 = load i32, i32* @ebp, align 4
  %v1_309d2 = add i32 %v0_309d2, -60
  %v2_309d2 = inttoptr i32 %v1_309d2 to i32*
  %v3_309d2 = load i32, i32* %v2_309d2, align 4
  store i32 %v3_309d2, i32* @eax, align 8
  %v1_309d5 = add i32 %v0_309d2, -12
  %v2_309d5 = inttoptr i32 %v1_309d5 to i32*
  %v3_309d5 = load i32, i32* %v2_309d5, align 4
  %v4_309d8 = icmp eq i32 %v3_309d5, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_309d8, label %bb, label %dec_label_pc_309e1

bb:                                               ; preds = %dec_label_pc_309d2
  %v1_309df = call i32 @function_309e6()
  br label %dec_label_pc_309e1

dec_label_pc_309e1:                               ; preds = %bb, %dec_label_pc_309d2
  %v2_309df = phi i32 [ %v1_309df, %bb ], [ %v3_309d2, %dec_label_pc_309d2 ]
  ret i32 %v2_309df
}

define i32 @function_309e6() local_unnamed_addr {
dec_label_pc_309e6:
  %v0_309e6 = load i32, i32* @ebp, align 4
  %v1_309e6 = add i32 %v0_309e6, -4
  %v2_309e6 = inttoptr i32 %v1_309e6 to i32*
  %v3_309e6 = load i32, i32* %v2_309e6, align 4
  store i32 %v3_309e6, i32* @ebx, align 8
  %v0_309ea = load i32, i32* @eax, align 8
  ret i32 %v0_309ea
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_309ee:
  store i32 268435455, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30a16

bb:                                               ; preds = %dec_label_pc_309ee
  %v2_30a14 = call i32 @function_30a1b(i32 %arg1)
  br label %dec_label_pc_30a16

dec_label_pc_30a16:                               ; preds = %bb, %dec_label_pc_309ee
  %v3_30a14 = phi i32 [ %v2_30a14, %bb ], [ 268435455, %dec_label_pc_309ee ]
  ret i32 %v3_30a14
}

define i32 @function_30a1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_30a1b:
  %v0_30a1c = load i32, i32* @eax, align 8
  ret i32 %v0_30a1c
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30a1e:
  %v1_30a41 = call i32 @unknown_60bf8(i32 %arg2)
  %v2_30a50 = call i32 @unknown_62fb2(i32 %arg1, i32 %v1_30a41)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30a64

bb:                                               ; preds = %dec_label_pc_30a1e
  %v1_30a62 = call i32 @function_30a69()
  br label %dec_label_pc_30a64

dec_label_pc_30a64:                               ; preds = %bb, %dec_label_pc_30a1e
  %v2_30a62 = phi i32 [ %v1_30a62, %bb ], [ %arg1, %dec_label_pc_30a1e ]
  ret i32 %v2_30a62

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_30a69() local_unnamed_addr {
dec_label_pc_30a69:
  %v0_30a6a = load i32, i32* @eax, align 8
  ret i32 %v0_30a6a
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IbxNS0_8functionIFbxEEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30a6e:
  %v1_30a8b = call i32 @unknown_6303e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30a9c

bb:                                               ; preds = %dec_label_pc_30a6e
  %v1_30a9a = call i32 @function_30aa1()
  br label %dec_label_pc_30a9c

dec_label_pc_30a9c:                               ; preds = %bb, %dec_label_pc_30a6e
  %v2_30a9a = phi i32 [ %v1_30a9a, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_30a6e ]
  ret i32 %v2_30a9a
}

define i32 @function_30aa1() local_unnamed_addr {
dec_label_pc_30aa1:
  %v0_30aa2 = load i32, i32* @eax, align 8
  ret i32 %v0_30aa2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IbxNS2_8functionIFbxEEEEENS3_5mutexEEEEEEEE7destroyEPSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30aa4:
  %v1_30ac7 = call i32 @unknown_4ca60(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30ad8

bb:                                               ; preds = %dec_label_pc_30aa4
  %v1_30ad6 = call i32 @function_30add()
  br label %dec_label_pc_30ad8

dec_label_pc_30ad8:                               ; preds = %bb, %dec_label_pc_30aa4
  %v2_30ad6 = phi i32 [ %v1_30ad6, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_30aa4 ]
  ret i32 %v2_30ad6
}

define i32 @function_30add() local_unnamed_addr {
dec_label_pc_30add:
  %v0_30ade = load i32, i32* @eax, align 8
  ret i32 %v0_30ade
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE11_M_put_nodeEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30ae0:
  %v3_30b12 = call i32 @unknown_630da(i32 %arg1, i32 %arg2, i32 1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30b23

bb:                                               ; preds = %dec_label_pc_30ae0
  %v1_30b21 = call i32 @function_30b28()
  br label %dec_label_pc_30b23

dec_label_pc_30b23:                               ; preds = %bb, %dec_label_pc_30ae0
  %v2_30b21 = phi i32 [ %v1_30b21, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_30ae0 ]
  ret i32 %v2_30b21
}

define i32 @function_30b28() local_unnamed_addr {
dec_label_pc_30b28:
  %v0_30b29 = load i32, i32* @eax, align 8
  ret i32 %v0_30b29
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30b2a:
  ret i32 %arg1
}

define i32 @function_30b39(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30b39:
  %v2_30b39 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30b39 = load i32, i32* @eax, align 8
  %v4_30b39 = trunc i32 %v3_30b39 to i8
  %v5_30b39 = add i8 %v4_30b39, %v2_30b39
  %v21_30b39 = inttoptr i32 %v3_30b39 to i8*
  store i8 %v5_30b39, i8* %v21_30b39, align 1
  %v0_30b3b = load i32, i32* @ecx, align 4
  %v1_30b3b = add i32 %v0_30b3b, -1070468027
  %v2_30b3b = inttoptr i32 %v1_30b3b to i8*
  %v3_30b3b = load i8, i8* %v2_30b3b, align 1
  %v5_30b3b = trunc i32 %v0_30b3b to i8
  %v6_30b3b = add i8 %v3_30b3b, %v5_30b3b
  store i8 %v6_30b3b, i8* %v2_30b3b, align 1
  %v0_30b41 = load i32, i32* @ebp, align 4
  %v1_30b41 = add i32 %v0_30b41, -28
  %v2_30b41 = inttoptr i32 %v1_30b41 to i32*
  %v3_30b41 = load i32, i32* %v2_30b41, align 4
  %v3_30b57 = call i32 @unknown_63166(i32 %v3_30b41, i32 1, i32 0)
  store i32 %v3_30b57, i32* @eax, align 8
  %v0_30b5c = load i32, i32* @ebp, align 4
  %v1_30b5c = add i32 %v0_30b5c, -12
  %v2_30b5c = inttoptr i32 %v1_30b5c to i32*
  %v3_30b5c = load i32, i32* %v2_30b5c, align 4
  %v4_30b5f = icmp eq i32 %v3_30b5c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_30b5f, label %bb, label %dec_label_pc_30b68

bb:                                               ; preds = %dec_label_pc_30b39
  %v1_30b66 = call i32 @function_30b6d()
  br label %dec_label_pc_30b68

dec_label_pc_30b68:                               ; preds = %bb, %dec_label_pc_30b39
  %v2_30b66 = phi i32 [ %v1_30b66, %bb ], [ %v3_30b57, %dec_label_pc_30b39 ]
  ret i32 %v2_30b66
}

define i32 @function_30b6d() local_unnamed_addr {
dec_label_pc_30b6d:
  %v0_30b6e = load i32, i32* @eax, align 8
  ret i32 %v0_30b6e
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IbxNS0_8functionIFbxEEEEENS1_5mutexEEEEEEEC1ERKSK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30b70:
  %v2_30b9a = call i32 @unknown_4fe98(i32 %arg1, i32 %arg2)
  %v1_30ba5 = add i32 %arg2, 12
  %v2_30ba5 = inttoptr i32 %v1_30ba5 to i32*
  %v3_30ba5 = load i32, i32* %v2_30ba5, align 4
  %v2_30ba8 = add i32 %arg1, 12
  %v3_30ba8 = inttoptr i32 %v2_30ba8 to i32*
  store i32 %v3_30ba5, i32* %v3_30ba8, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30bb7

bb:                                               ; preds = %dec_label_pc_30b70
  %v1_30bb5 = call i32 @function_30bbc()
  br label %dec_label_pc_30bb7

dec_label_pc_30bb7:                               ; preds = %bb, %dec_label_pc_30b70
  %v2_30bb5 = phi i32 [ %v1_30bb5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_30b70 ]
  ret i32 %v2_30bb5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_30bbc() local_unnamed_addr {
dec_label_pc_30bbc:
  %v0_30bbd = load i32, i32* @eax, align 8
  ret i32 %v0_30bbd
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IbxNS2_8functionIFbxEEEEENS3_5mutexEEEEEEEE9constructEPSM_RKSM_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30bbe:
  ret i32 %arg3
}

define i32 @function_30bde(i32 %arg1) local_unnamed_addr {
dec_label_pc_30bde:
  %v0_30bde = load i32, i32* @ecx, align 4
  %v1_30bde = add i32 %v0_30bde, -1070472123
  %v2_30bde = inttoptr i32 %v1_30bde to i8*
  %v3_30bde = load i8, i8* %v2_30bde, align 1
  %v5_30bde = trunc i32 %v0_30bde to i8
  %v6_30bde = add i8 %v3_30bde, %v5_30bde
  store i8 %v6_30bde, i8* %v2_30bde, align 1
  %v0_30be4 = load i32, i32* @ebp, align 4
  %v1_30be4 = add i32 %v0_30be4, -48
  %v2_30be4 = inttoptr i32 %v1_30be4 to i32*
  %v3_30be4 = load i32, i32* %v2_30be4, align 4
  %v2_30bf2 = call i32 @function_31524(i32 ptrtoint (i32* @global_var_10.1921 to i32), i32 %v3_30be4)
  %v1_30bf9 = icmp eq i32 %v2_30bf2, 0
  br i1 %v1_30bf9, label %bb, label %dec_label_pc_30bfd

bb:                                               ; preds = %dec_label_pc_30bde
  %v1_30bfb = call i32 @function_30c26()
  br label %dec_label_pc_30bfd

dec_label_pc_30bfd:                               ; preds = %bb, %dec_label_pc_30bde
  %v0_30bfd = load i32, i32* @ebp, align 4
  %v1_30bfd = add i32 %v0_30bfd, -52
  %v2_30bfd = inttoptr i32 %v1_30bfd to i32*
  %v3_30bfd = load i32, i32* %v2_30bfd, align 4
  %v2_30c07 = call i32 @unknown_6172e(i32 %v2_30bf2, i32 %v3_30bfd)
  %v0_30c0c = call i32 @function_30c26()
  ret i32 %v0_30c0c

; uselistorder directives
  uselistorder i32 -52, { 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 62, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 63, 47, 48, 44, 45, 46, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 49, 51, 40 }
  uselistorder i32 ()* @function_30c26, { 1, 0 }
}

define i32 @function_30c26() local_unnamed_addr {
dec_label_pc_30c26:
  %v0_30c26 = load i32, i32* @ebp, align 4
  %v1_30c26 = add i32 %v0_30c26, -28
  %v2_30c26 = inttoptr i32 %v1_30c26 to i32*
  %v3_30c26 = load i32, i32* %v2_30c26, align 4
  %v3_30c29 = xor i32 %v3_30c26, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30c29 = icmp eq i32 %v3_30c29, 0
  store i32 %v3_30c29, i32* @eax, align 8
  br i1 %v4_30c29, label %bb, label %dec_label_pc_30c32

bb:                                               ; preds = %dec_label_pc_30c26
  %v1_30c30 = call i32 @function_30c37()
  br label %dec_label_pc_30c32

dec_label_pc_30c32:                               ; preds = %bb, %dec_label_pc_30c26
  %v2_30c30 = phi i32 [ %v1_30c30, %bb ], [ %v3_30c29, %dec_label_pc_30c26 ]
  ret i32 %v2_30c30
}

define i32 @function_30c37() local_unnamed_addr {
dec_label_pc_30c37:
  %v0_30c3e = load i32, i32* @eax, align 8
  ret i32 %v0_30c3e
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS3_5mutexEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30c40:
  ret i32 %arg1
}

define i32 @function_30c50(i32 %arg1) local_unnamed_addr {
dec_label_pc_30c50:
  %v2_30c50 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30c50 = load i32, i32* @eax, align 8
  %v4_30c50 = trunc i32 %v3_30c50 to i8
  %v5_30c50 = add i8 %v4_30c50, %v2_30c50
  %v21_30c50 = inttoptr i32 %v3_30c50 to i8*
  store i8 %v5_30c50, i8* %v21_30c50, align 1
  %v0_30c52 = load i32, i32* @eax, align 8
  %v1_30c52 = load i32, i32* @ebp, align 4
  %v2_30c52 = add i32 %v1_30c52, -12
  %v3_30c52 = inttoptr i32 %v2_30c52 to i32*
  store i32 %v0_30c52, i32* %v3_30c52, align 4
  %v0_30c57 = load i32, i32* @ebp, align 4
  %v1_30c57 = add i32 %v0_30c57, -12
  %v2_30c57 = inttoptr i32 %v1_30c57 to i32*
  %v3_30c57 = load i32, i32* %v2_30c57, align 4
  %v3_30c5a = xor i32 %v3_30c57, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30c5a = icmp eq i32 %v3_30c5a, 0
  store i32 %v3_30c5a, i32* @eax, align 8
  br i1 %v4_30c5a, label %bb, label %dec_label_pc_30c63

bb:                                               ; preds = %dec_label_pc_30c50
  %v1_30c61 = call i32 @function_30c68()
  br label %dec_label_pc_30c63

dec_label_pc_30c63:                               ; preds = %bb, %dec_label_pc_30c50
  %v2_30c61 = phi i32 [ %v1_30c61, %bb ], [ %v3_30c5a, %dec_label_pc_30c50 ]
  ret i32 %v2_30c61
}

define i32 @function_30c68() local_unnamed_addr {
dec_label_pc_30c68:
  %v0_30c69 = load i32, i32* @eax, align 8
  ret i32 %v0_30c69
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEEC1ISJ_EERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30c6a:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_30c86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30c86:
  %v0_30c86 = load i32, i32* @ebx, align 8
  %v1_30c86 = add i32 %v0_30c86, 76145733
  %v2_30c86 = inttoptr i32 %v1_30c86 to i8*
  %v3_30c86 = load i8, i8* %v2_30c86, align 1
  %v4_30c86 = udiv i8 %v3_30c86, 16
  %v5_30c86 = mul i8 %v3_30c86, 16
  %v6_30c86 = or i8 %v4_30c86, %v5_30c86
  store i8 %v6_30c86, i8* %v2_30c86, align 1
  %v0_30c8d = call i32 @unknown_63304()
  %v0_30c92 = load i32, i32* @ebp, align 4
  %v1_30c92 = add i32 %v0_30c92, -12
  %v2_30c92 = inttoptr i32 %v1_30c92 to i32*
  %v3_30c92 = load i32, i32* %v2_30c92, align 4
  %v3_30c95 = xor i32 %v3_30c92, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30c95 = icmp eq i32 %v3_30c95, 0
  store i32 %v3_30c95, i32* @eax, align 8
  br i1 %v4_30c95, label %bb, label %dec_label_pc_30c9e

bb:                                               ; preds = %dec_label_pc_30c86
  %v1_30c9c = call i32 @function_30ca3()
  br label %dec_label_pc_30c9e

dec_label_pc_30c9e:                               ; preds = %bb, %dec_label_pc_30c86
  %v2_30c9c = phi i32 [ %v1_30c9c, %bb ], [ %v3_30c95, %dec_label_pc_30c86 ]
  ret i32 %v2_30c9c

; uselistorder directives
  uselistorder i8 16, { 0, 1, 2, 3, 5, 4 }
}

define i32 @function_30ca3() local_unnamed_addr {
dec_label_pc_30ca3:
  %v0_30ca4 = load i32, i32* @eax, align 8
  ret i32 %v0_30ca4
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE10_List_implC1ERKSaISt10_List_nodeISJ_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30ca6:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_30cc0() local_unnamed_addr {
dec_label_pc_30cc0:
  %v0_30cc3 = load i32, i32* @ebp, align 4
  %v1_30cc3 = add i32 %v0_30cc3, -32
  %v2_30cc3 = inttoptr i32 %v1_30cc3 to i32*
  %v3_30cc3 = load i32, i32* %v2_30cc3, align 4
  %v1_30cca = add i32 %v0_30cc3, -28
  %v2_30cca = inttoptr i32 %v1_30cca to i32*
  %v3_30cca = load i32, i32* %v2_30cca, align 4
  %v2_30cd0 = call i32 @unknown_6336a(i32 %v3_30cca, i32 %v3_30cc3)
  %v0_30cd5 = load i32, i32* @ebp, align 4
  %v1_30cd5 = add i32 %v0_30cd5, -28
  %v2_30cd5 = inttoptr i32 %v1_30cd5 to i32*
  %v3_30cd5 = load i32, i32* %v2_30cd5, align 4
  %v1_30cd8 = inttoptr i32 %v3_30cd5 to i32*
  store i32 0, i32* %v1_30cd8, align 4
  %v0_30cde = load i32, i32* @ebp, align 4
  %v1_30cde = add i32 %v0_30cde, -28
  %v2_30cde = inttoptr i32 %v1_30cde to i32*
  %v3_30cde = load i32, i32* %v2_30cde, align 4
  %v1_30ce1 = add i32 %v3_30cde, 4
  %v2_30ce1 = inttoptr i32 %v1_30ce1 to i32*
  store i32 0, i32* %v2_30ce1, align 4
  %v0_30ce8 = load i32, i32* @ebp, align 4
  %v1_30ce8 = add i32 %v0_30ce8, -12
  %v2_30ce8 = inttoptr i32 %v1_30ce8 to i32*
  %v3_30ce8 = load i32, i32* %v2_30ce8, align 4
  %v3_30ceb = xor i32 %v3_30ce8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30ceb = icmp eq i32 %v3_30ceb, 0
  store i32 %v3_30ceb, i32* @eax, align 8
  br i1 %v4_30ceb, label %bb, label %dec_label_pc_30cf4

bb:                                               ; preds = %dec_label_pc_30cc0
  %v1_30cf2 = call i32 @function_30cf9()
  br label %dec_label_pc_30cf4

dec_label_pc_30cf4:                               ; preds = %bb, %dec_label_pc_30cc0
  %v2_30cf2 = phi i32 [ %v1_30cf2, %bb ], [ %v3_30ceb, %dec_label_pc_30cc0 ]
  ret i32 %v2_30cf2
}

define i32 @function_30cf9() local_unnamed_addr {
dec_label_pc_30cf9:
  %v0_30cfa = load i32, i32* @eax, align 8
  ret i32 %v0_30cfa
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE7_M_initEv() local_unnamed_addr {
dec_label_pc_30cfc:
  %eax.global-to-local = alloca i32, align 4
  %v2_30cfd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_30cfd
}

define i32 @function_30d00() local_unnamed_addr {
dec_label_pc_30d00:
  %v0_30d01 = load i32, i32* @ebx, align 8
  %v1_30d01 = add i32 %v0_30d01, 1166608453
  %v2_30d01 = inttoptr i32 %v1_30d01 to i8*
  %v3_30d01 = load i8, i8* %v2_30d01, align 1
  %v4_30d01 = load i32, i32* @ecx, align 4
  %v5_30d01 = trunc i32 %v4_30d01 to i8
  %v6_30d01 = sub i8 %v3_30d01, %v5_30d01
  store i8 %v6_30d01, i8* %v2_30d01, align 1
  %v1_30d0e = load i32, i32* @ebp, align 4
  %v2_30d0e = add i32 %v1_30d0e, -12
  %v3_30d0e = inttoptr i32 %v2_30d0e to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_30d0e, align 4
  %v0_30d13 = load i32, i32* @ebp, align 4
  %v1_30d13 = add i32 %v0_30d13, -28
  %v2_30d13 = inttoptr i32 %v1_30d13 to i32*
  %v3_30d13 = load i32, i32* %v2_30d13, align 4
  %v2_30d19 = inttoptr i32 %v3_30d13 to i32*
  store i32 %v3_30d13, i32* %v2_30d19, align 4
  %v0_30d1b = load i32, i32* @ebp, align 4
  %v1_30d1b = add i32 %v0_30d1b, -28
  %v2_30d1b = inttoptr i32 %v1_30d1b to i32*
  %v3_30d1b = load i32, i32* %v2_30d1b, align 4
  %v2_30d21 = add i32 %v3_30d1b, 4
  %v3_30d21 = inttoptr i32 %v2_30d21 to i32*
  store i32 %v3_30d1b, i32* %v3_30d21, align 4
  %v0_30d24 = load i32, i32* @ebp, align 4
  %v1_30d24 = add i32 %v0_30d24, -12
  %v2_30d24 = inttoptr i32 %v1_30d24 to i32*
  %v3_30d24 = load i32, i32* %v2_30d24, align 4
  %v3_30d27 = xor i32 %v3_30d24, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30d27 = icmp eq i32 %v3_30d27, 0
  store i32 %v3_30d27, i32* @eax, align 8
  br i1 %v4_30d27, label %bb, label %dec_label_pc_30d30

bb:                                               ; preds = %dec_label_pc_30d00
  %v1_30d2e = call i32 @function_30d35()
  br label %dec_label_pc_30d30

dec_label_pc_30d30:                               ; preds = %bb, %dec_label_pc_30d00
  %v2_30d2e = phi i32 [ %v1_30d2e, %bb ], [ %v3_30d27, %dec_label_pc_30d00 ]
  ret i32 %v2_30d2e

; uselistorder directives
  uselistorder i32 %v3_30d1b, { 1, 0 }
  uselistorder i32 %v3_30d13, { 1, 0 }
}

define i32 @function_30d32() local_unnamed_addr {
dec_label_pc_30d32:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_30d35() local_unnamed_addr {
dec_label_pc_30d35:
  %v0_30d36 = load i32, i32* @eax, align 8
  ret i32 %v0_30d36
}

define i32 @_ZNSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEC1EPKNSt8__detail15_List_node_baseE() local_unnamed_addr {
dec_label_pc_30d38:
  %eax.global-to-local = alloca i32, align 4
  %v2_30d39 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_30d39
}

define i32 @function_30d3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_30d3c:
  %v0_30d3c = load i32, i32* @eax, align 8
  ret i32 %v0_30d3c
}

define i32 @function_30d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_30d40:
  %v0_30d40 = load i32, i32* @ecx, align 4
  %v1_30d40 = add i32 %v0_30d40, 1166795845
  %v2_30d40 = inttoptr i32 %v1_30d40 to i8*
  %v3_30d40 = load i8, i8* %v2_30d40, align 1
  %v5_30d40 = trunc i32 %v0_30d40 to i8
  %v6_30d40 = or i8 %v3_30d40, %v5_30d40
  store i8 %v6_30d40, i8* %v2_30d40, align 1
  %v0_30d48 = load i32, i32* @ebp, align 4
  %v1_30d48 = add i32 %v0_30d48, 1
  store i32 %v1_30d48, i32* @ebp, align 4
  %v2_30d50 = add i32 %v0_30d48, -11
  %v3_30d50 = inttoptr i32 %v2_30d50 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_30d50, align 4
  %v0_30d55 = load i32, i32* @ebp, align 4
  %v1_30d55 = add i32 %v0_30d55, -28
  %v2_30d55 = inttoptr i32 %v1_30d55 to i32*
  %v3_30d55 = load i32, i32* %v2_30d55, align 4
  %v1_30d58 = add i32 %v0_30d55, -32
  %v2_30d58 = inttoptr i32 %v1_30d58 to i32*
  %v3_30d58 = load i32, i32* %v2_30d58, align 4
  %v2_30d5b = inttoptr i32 %v3_30d55 to i32*
  store i32 %v3_30d58, i32* %v2_30d5b, align 4
  %v0_30d5d = load i32, i32* @ebp, align 4
  %v1_30d5d = add i32 %v0_30d5d, -12
  %v2_30d5d = inttoptr i32 %v1_30d5d to i32*
  %v3_30d5d = load i32, i32* %v2_30d5d, align 4
  %v3_30d60 = xor i32 %v3_30d5d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30d60 = icmp eq i32 %v3_30d60, 0
  store i32 %v3_30d60, i32* @eax, align 8
  br i1 %v4_30d60, label %bb, label %dec_label_pc_30d69

bb:                                               ; preds = %dec_label_pc_30d40
  %v1_30d67 = call i32 @function_30d6e()
  br label %dec_label_pc_30d69

dec_label_pc_30d69:                               ; preds = %bb, %dec_label_pc_30d40
  %v3_30d67 = phi i32 [ %v1_30d67, %bb ], [ %v3_30d60, %dec_label_pc_30d40 ]
  ret i32 %v3_30d67
}

define i32 @function_30d6e() local_unnamed_addr {
dec_label_pc_30d6e:
  %v0_30d6f = load i32, i32* @eax, align 8
  ret i32 %v0_30d6f
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE9push_backERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30d70:
  ret i32 0
}

define i32 @function_30d8e() local_unnamed_addr {
dec_label_pc_30d8e:
  %v0_30d8e = load i32, i32* @ebp, align 4
  %v1_30d8e = add i32 %v0_30d8e, 1
  store i32 %v1_30d8e, i32* @ebp, align 4
  %v15_30d8e = load i32, i32* @eax, align 8
  ret i32 %v15_30d8e
}

define i32 @function_30d90() local_unnamed_addr {
dec_label_pc_30d90:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_30d90 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30d90 = add i32 %v0_30d90, -28
  %v2_30d90 = inttoptr i32 %v1_30d90 to i32*
  %v3_30d90 = load i32, i32* %v2_30d90, align 4
  %v0_30d97 = load i32, i32* %eax.global-to-local, align 8
  %v2_30d9a = call i32 @unknown_5639c(i32 %v0_30d97, i32 %v3_30d90)
  store i32 %v2_30d9a, i32* %eax.global-to-local, align 8
  %v0_30da2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_30da2 = add i32 %v0_30da2, -32
  %v2_30da2 = inttoptr i32 %v1_30da2 to i32*
  %v3_30da2 = load i32, i32* %v2_30da2, align 4
  store i32 %v3_30da2, i32* %eax.global-to-local, align 8
  %v1_30da9 = add i32 %v0_30da2, -16
  %v2_30da9 = inttoptr i32 %v1_30da9 to i32*
  %v3_30da9 = load i32, i32* %v2_30da9, align 4
  store i32 %v3_30da9, i32* %eax.global-to-local, align 8
  ret i32 %v3_30da9
}

define i32 @function_30dba(i32 %arg1) local_unnamed_addr {
dec_label_pc_30dba:
  %v0_30dba = load i32, i32* @ebx, align 8
  %v1_30dba = add i32 %v0_30dba, 862319685
  %v2_30dba = inttoptr i32 %v1_30dba to i8*
  %v3_30dba = load i8, i8* %v2_30dba, align 1
  %v4_30dba = load i32, i32* @ecx, align 4
  %v5_30dba = trunc i32 %v4_30dba to i8
  %v6_30dba = add i8 %v5_30dba, %v3_30dba
  store i8 %v6_30dba, i8* %v2_30dba, align 1
  %v0_30dc0 = load i32, i32* @eax, align 8
  %v1_30dc0 = add i32 %v0_30dc0, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_30dc0 = icmp eq i32 %v1_30dc0, 0
  store i32 %v1_30dc0, i32* @eax, align 8
  br i1 %v10_30dc0, label %bb, label %dec_label_pc_30dc7

bb:                                               ; preds = %dec_label_pc_30dba
  %v1_30dc5 = call i32 @function_30dcc()
  br label %dec_label_pc_30dc7

dec_label_pc_30dc7:                               ; preds = %bb, %dec_label_pc_30dba
  %v2_30dc5 = phi i32 [ %v1_30dc5, %bb ], [ %v1_30dc0, %dec_label_pc_30dba ]
  ret i32 %v2_30dc5
}

define i32 @function_30dcc() local_unnamed_addr {
dec_label_pc_30dcc:
  %v0_30dcd = load i32, i32* @eax, align 8
  ret i32 %v0_30dcd
}

define i32 @_ZNKSt20_List_const_iteratorIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_30dce:
  %v2_30de8 = load i32, i32* %arg1, align 4
  %v1_30dea = add i32 %v2_30de8, 8
  store i32 %v1_30dea, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30df9

bb:                                               ; preds = %dec_label_pc_30dce
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_30df7 = call i32 @function_30dfe(i32 %tmp100)
  br label %dec_label_pc_30df9

dec_label_pc_30df9:                               ; preds = %bb, %dec_label_pc_30dce
  %v3_30df7 = phi i32 [ %v2_30df7, %bb ], [ %v1_30dea, %dec_label_pc_30dce ]
  ret i32 %v3_30df7

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_30dfe(i32 %arg1) local_unnamed_addr {
dec_label_pc_30dfe:
  %v0_30dff = load i32, i32* @eax, align 8
  ret i32 %v0_30dff
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e00:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_30e1e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30e1e:
  %v2_30e1e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_30e1e = load i32, i32* @eax, align 8
  %v4_30e1e = trunc i32 %v3_30e1e to i8
  %v5_30e1e = add i8 %v4_30e1e, %v2_30e1e
  %v21_30e1e = inttoptr i32 %v3_30e1e to i8*
  store i8 %v5_30e1e, i8* %v21_30e1e, align 1
  %v0_30e20 = load i32, i32* @ebp, align 4
  %v1_30e20 = load i32, i32* @eax, align 8
  %v3_30e20 = add i32 %v0_30e20, -24
  %v4_30e20 = add i32 %v3_30e20, %v1_30e20
  %v5_30e20 = inttoptr i32 %v4_30e20 to i8*
  %v6_30e20 = load i8, i8* %v5_30e20, align 1
  %v7_30e20 = load i32, i32* @edx, align 8
  %v8_30e20 = udiv i32 %v7_30e20, 256
  %v9_30e20 = trunc i32 %v8_30e20 to i8
  %v10_30e20 = add i8 %v9_30e20, %v6_30e20
  store i8 %v10_30e20, i8* %v5_30e20, align 1
  %v31_30e20 = load i32, i32* @eax, align 8
  ret i32 %v31_30e20
}

define i32 @function_30e27() local_unnamed_addr {
dec_label_pc_30e27:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_30e27 = load i32, i32* %ecx.global-to-local, align 4
  %v1_30e27 = add i32 %v0_30e27, -1
  store i32 %v1_30e27, i32* %ecx.global-to-local, align 4
  %v0_30e29 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30e29
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1IvRKSsNS1_8functionIFvSD_EEEEENS3_5mutexEEEEEE7destroyEPSK_(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e2a:
  ret i32 %arg1
}

define i32 @function_30e37() local_unnamed_addr {
dec_label_pc_30e37:
  %v0_30e37 = load i32, i32* @ebp, align 4
  %v1_30e3a = add i32 %v0_30e37, 2
  store i32 %v1_30e3a, i32* @ebp, align 4
  %v0_30e3b = load i32, i32* @ecx, align 4
  %v1_30e3b = add i32 %v0_30e3b, -1
  store i32 %v1_30e3b, i32* @ecx, align 4
  %v2_30e42 = add i32 %v0_30e37, -10
  %v3_30e42 = inttoptr i32 %v2_30e42 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_30e42, align 4
  %v0_30e47 = load i32, i32* @ebp, align 4
  %v1_30e47 = add i32 %v0_30e47, -32
  %v2_30e47 = inttoptr i32 %v1_30e47 to i32*
  %v3_30e47 = load i32, i32* %v2_30e47, align 4
  %v1_30e4d = call i32 @unknown_46760(i32 %v3_30e47)
  %v0_30e52 = load i32, i32* @ebp, align 4
  %v1_30e52 = add i32 %v0_30e52, -12
  %v2_30e52 = inttoptr i32 %v1_30e52 to i32*
  %v3_30e52 = load i32, i32* %v2_30e52, align 4
  %v3_30e55 = xor i32 %v3_30e52, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30e55 = icmp eq i32 %v3_30e55, 0
  store i32 %v3_30e55, i32* @eax, align 8
  br i1 %v4_30e55, label %bb, label %dec_label_pc_30e5e

bb:                                               ; preds = %dec_label_pc_30e37
  %v1_30e5c = call i32 @function_30e63()
  br label %dec_label_pc_30e5e

dec_label_pc_30e5e:                               ; preds = %bb, %dec_label_pc_30e37
  %v3_30e5c = phi i32 [ %v1_30e5c, %bb ], [ %v3_30e55, %dec_label_pc_30e37 ]
  ret i32 %v3_30e5c
}

define i32 @function_30e63() local_unnamed_addr {
dec_label_pc_30e63:
  %v0_30e64 = load i32, i32* @eax, align 8
  ret i32 %v0_30e64
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e66:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_30e8c

bb:                                               ; preds = %dec_label_pc_30e66
  %v2_30e8a = call i32 @function_30e91(i32 %arg1)
  br label %dec_label_pc_30e8c

dec_label_pc_30e8c:                               ; preds = %bb, %dec_label_pc_30e66
  %v3_30e8a = phi i32 [ %v2_30e8a, %bb ], [ %arg1, %dec_label_pc_30e66 ]
  ret i32 %v3_30e8a
}

define i32 @function_30e91(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e91:
  %v0_30e92 = load i32, i32* @eax, align 8
  ret i32 %v0_30e92
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EEC1ERKST_RKSaISt13_Rb_tree_nodeISN_EE(i32 %arg1) local_unnamed_addr {
dec_label_pc_30e94:
  ret i32 %arg1
}

define i32 @function_30ea1() local_unnamed_addr {
dec_label_pc_30ea1:
  %eax.global-to-local = alloca i32, align 4
  %v15_30ea1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v15_30ea1
}

define i32 @function_30ec4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30ec4:
  %v0_30ec4 = call i32 @unknown_635f8()
  %v0_30ec9 = load i32, i32* @ebp, align 4
  %v1_30ec9 = add i32 %v0_30ec9, -28
  %v2_30ec9 = inttoptr i32 %v1_30ec9 to i32*
  %v3_30ec9 = load i32, i32* %v2_30ec9, align 4
  %v1_30ecc = add i32 %v3_30ec9, 4
  %v2_30ecc = inttoptr i32 %v1_30ecc to i32*
  store i32 0, i32* %v2_30ecc, align 4
  %v0_30ed3 = load i32, i32* @ebp, align 4
  %v1_30ed3 = add i32 %v0_30ed3, -28
  %v2_30ed3 = inttoptr i32 %v1_30ed3 to i32*
  %v3_30ed3 = load i32, i32* %v2_30ed3, align 4
  %v1_30ed6 = add i32 %v3_30ed3, 8
  %v2_30ed6 = inttoptr i32 %v1_30ed6 to i32*
  store i32 0, i32* %v2_30ed6, align 4
  %v0_30edd = load i32, i32* @ebp, align 4
  %v1_30edd = add i32 %v0_30edd, -28
  %v2_30edd = inttoptr i32 %v1_30edd to i32*
  %v3_30edd = load i32, i32* %v2_30edd, align 4
  %v1_30ee0 = add i32 %v3_30edd, 12
  %v2_30ee0 = inttoptr i32 %v1_30ee0 to i32*
  store i32 0, i32* %v2_30ee0, align 4
  %v0_30ee7 = load i32, i32* @ebp, align 4
  %v1_30ee7 = add i32 %v0_30ee7, -28
  %v2_30ee7 = inttoptr i32 %v1_30ee7 to i32*
  %v3_30ee7 = load i32, i32* %v2_30ee7, align 4
  %v1_30eea = add i32 %v3_30ee7, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_30eea = inttoptr i32 %v1_30eea to i32*
  store i32 0, i32* %v2_30eea, align 4
  %v0_30ef1 = load i32, i32* @ebp, align 4
  %v1_30ef1 = add i32 %v0_30ef1, -28
  %v2_30ef1 = inttoptr i32 %v1_30ef1 to i32*
  %v3_30ef1 = load i32, i32* %v2_30ef1, align 4
  %v1_30ef4 = add i32 %v3_30ef1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_30ef4 = inttoptr i32 %v1_30ef4 to i32*
  store i32 0, i32* %v2_30ef4, align 4
  %v0_30efb = load i32, i32* @ebp, align 4
  %v1_30efb = add i32 %v0_30efb, -28
  %v2_30efb = inttoptr i32 %v1_30efb to i32*
  %v3_30efb = load i32, i32* %v2_30efb, align 4
  %v1_30f01 = call i32 @unknown_6363a(i32 %v3_30efb)
  %v0_30f06 = load i32, i32* @ebp, align 4
  %v1_30f06 = add i32 %v0_30f06, -12
  %v2_30f06 = inttoptr i32 %v1_30f06 to i32*
  %v3_30f06 = load i32, i32* %v2_30f06, align 4
  %v3_30f09 = xor i32 %v3_30f06, ptrtoint ([3 x i8]* @3 to i32)
  %v4_30f09 = icmp eq i32 %v3_30f09, 0
  store i32 %v3_30f09, i32* @eax, align 8
  br i1 %v4_30f09, label %bb, label %dec_label_pc_30f12

bb:                                               ; preds = %dec_label_pc_30ec4
  %v1_30f10 = call i32 @function_30f17()
  br label %dec_label_pc_30f12

dec_label_pc_30f12:                               ; preds = %bb, %dec_label_pc_30ec4
  %v3_30f10 = phi i32 [ %v1_30f10, %bb ], [ %v3_30f09, %dec_label_pc_30ec4 ]
  ret i32 %v3_30f10
}

define i32 @function_30f17() local_unnamed_addr {
dec_label_pc_30f17:
  %v0_30f18 = load i32, i32* @eax, align 8
  ret i32 %v0_30f18
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f1a:
  %v1_30f34 = add i32 %arg1, 8
  %v2_30f34 = inttoptr i32 %v1_30f34 to i32*
  %v3_30f34 = load i32, i32* %v2_30f34, align 4
  ret i32 %v3_30f34
}

define i32 @function_30f40(i32 %arg1) local_unnamed_addr {
dec_label_pc_30f40:
  %v0_30f40 = load i32, i32* @ebp, align 4
  %v1_30f40 = load i32, i32* @eax, align 8
  %v3_30f40 = add i32 %v0_30f40, -24
  %v4_30f40 = add i32 %v3_30f40, %v1_30f40
  %v5_30f40 = inttoptr i32 %v4_30f40 to i8*
  %v6_30f40 = load i8, i8* %v5_30f40, align 1
  %v7_30f40 = load i32, i32* @edx, align 8
  %v8_30f40 = udiv i32 %v7_30f40, 256
  %v9_30f40 = trunc i32 %v8_30f40 to i8
  %v10_30f40 = add i8 %v9_30f40, %v6_30f40
  store i8 %v10_30f40, i8* %v5_30f40, align 1
  %v31_30f40 = load i32, i32* @eax, align 8
  ret i32 %v31_30f40
}

define i32 @function_30f47() local_unnamed_addr {
dec_label_pc_30f47:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_30f47 = load i32, i32* %ecx.global-to-local, align 4
  %v1_30f47 = add i32 %v0_30f47, -1
  store i32 %v1_30f47, i32* %ecx.global-to-local, align 4
  %v0_30f49 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_30f49
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30f4a:
  ret i32 %arg1
}

define i32 @function_30f7e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30f7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_30f7e = load i32, i32* @eax, align 8
  %v4_30f7e = mul i32 %v0_30f7e, 2
  store i32 %v4_30f7e, i32* %eax.global-to-local, align 8
  %v1_30f80 = load i32, i32* @ebp, align 4
  %v2_30f80 = add i32 %v1_30f80, -20
  %v3_30f80 = inttoptr i32 %v2_30f80 to i32*
  store i32 %v4_30f7e, i32* %v3_30f80, align 4
  %v0_30f83 = load i32, i32* @ebp, align 4
  %v1_30f83 = add i32 %v0_30f83, -20
  %v2_30f83 = inttoptr i32 %v1_30f83 to i32*
  %v3_30f83 = load i32, i32* %v2_30f83, align 4
  store i32 %v3_30f83, i32* %eax.global-to-local, align 8
  %v1_30f86 = add i32 %v0_30f83, -36
  %v2_30f86 = inttoptr i32 %v1_30f86 to i32*
  %v3_30f86 = load i32, i32* %v2_30f86, align 4
  %v2_30f89 = add i32 %v3_30f83, 4
  %v3_30f89 = inttoptr i32 %v2_30f89 to i32*
  store i32 %v3_30f86, i32* %v3_30f89, align 4
  %v0_30f8c = load i32, i32* @ebp, align 4
  %v1_30f8c = add i32 %v0_30f8c, -32
  %v2_30f8c = inttoptr i32 %v1_30f8c to i32*
  %v3_30f8c = load i32, i32* %v2_30f8c, align 4
  store i32 %v3_30f8c, i32* %eax.global-to-local, align 8
  %v1_30f8f = add i32 %v3_30f8c, 12
  %v2_30f8f = inttoptr i32 %v1_30f8f to i32*
  %v3_30f8f = load i32, i32* %v2_30f8f, align 4
  store i32 %v3_30f8f, i32* %eax.global-to-local, align 8
  %v1_30f92 = icmp eq i32 %v3_30f8f, 0
  br i1 %v1_30f92, label %dec_label_pc_30fbf, label %dec_label_pc_30f96

dec_label_pc_30f96:                               ; preds = %dec_label_pc_30f7e
  %v3_30f96 = load i32, i32* %v2_30f8c, align 4
  store i32 %v3_30f96, i32* %eax.global-to-local, align 8
  %v1_30f9c = call i32 @unknown_637af(i32 %v3_30f96)
  store i32 %v1_30f9c, i32* %eax.global-to-local, align 8
  %v0_30fa1 = load i32, i32* @ebp, align 4
  %v1_30fa1 = add i32 %v0_30fa1, -20
  %v2_30fa1 = inttoptr i32 %v1_30fa1 to i32*
  %v3_30fa1 = load i32, i32* %v2_30fa1, align 4
  %v1_30fac = add i32 %v0_30fa1, -28
  %v2_30fac = inttoptr i32 %v1_30fac to i32*
  %v3_30fac = load i32, i32* %v2_30fac, align 4
  store i32 %v3_30fac, i32* %eax.global-to-local, align 8
  %v3_30fb2 = call i32 @unknown_61e94(i32 %v3_30fac, i32 %v1_30f9c, i32 %v3_30fa1)
  store i32 %v3_30fb2, i32* %eax.global-to-local, align 8
  %v0_30fb9 = load i32, i32* @ebp, align 4
  %v1_30fb9 = add i32 %v0_30fb9, -20
  %v2_30fb9 = inttoptr i32 %v1_30fb9 to i32*
  %v3_30fb9 = load i32, i32* %v2_30fb9, align 4
  store i32 %v3_30fb9, i32* %eax.global-to-local, align 8
  %v2_30fbc = add i32 %v3_30fb9, 12
  %v3_30fbc = inttoptr i32 %v2_30fbc to i32*
  store i32 %v3_30fb2, i32* %v3_30fbc, align 4
  %v0_30fbf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_30fbf

dec_label_pc_30fbf:                               ; preds = %dec_label_pc_30f96, %dec_label_pc_30f7e
  %v0_30fbf = phi i32 [ %v0_30fbf.pre, %dec_label_pc_30f96 ], [ %v0_30f8c, %dec_label_pc_30f7e ]
  %v1_30fbf = add i32 %v0_30fbf, -20
  %v2_30fbf = inttoptr i32 %v1_30fbf to i32*
  %v3_30fbf = load i32, i32* %v2_30fbf, align 4
  store i32 %v3_30fbf, i32* %eax.global-to-local, align 8
  %v2_30fc2 = add i32 %v0_30fbf, -36
  %v3_30fc2 = inttoptr i32 %v2_30fc2 to i32*
  store i32 %v3_30fbf, i32* %v3_30fc2, align 4
  %v0_30fc5 = load i32, i32* @ebp, align 4
  %v1_30fc5 = add i32 %v0_30fc5, -32
  %v2_30fc5 = inttoptr i32 %v1_30fc5 to i32*
  %v3_30fc5 = load i32, i32* %v2_30fc5, align 4
  store i32 %v3_30fc5, i32* %eax.global-to-local, align 8
  %v1_30fcb = call i32 @unknown_637df(i32 %v3_30fc5)
  store i32 %v1_30fcb, i32* %eax.global-to-local, align 8
  %v1_30fd0 = load i32, i32* @ebp, align 4
  %v2_30fd0 = add i32 %v1_30fd0, -32
  %v3_30fd0 = inttoptr i32 %v2_30fd0 to i32*
  store i32 %v1_30fcb, i32* %v3_30fd0, align 4
  br label %dec_label_pc_31043

dec_label_pc_30fd5:                               ; preds = %dec_label_pc_31043
  %v3_30fd5 = load i32, i32* %v2_31043, align 4
  store i32 %v3_30fd5, i32* %eax.global-to-local, align 8
  %v1_30fdc = add i32 %v0_31043, -28
  %v2_30fdc = inttoptr i32 %v1_30fdc to i32*
  %v3_30fdc = load i32, i32* %v2_30fdc, align 4
  store i32 %v3_30fdc, i32* %eax.global-to-local, align 8
  %v2_30fe2 = call i32 @unknown_63746(i32 %v3_30fdc, i32 %v3_30fd5)
  store i32 %v2_30fe2, i32* %eax.global-to-local, align 8
  %v1_30fe7 = load i32, i32* @ebp, align 4
  %v2_30fe7 = add i32 %v1_30fe7, -16
  %v3_30fe7 = inttoptr i32 %v2_30fe7 to i32*
  store i32 %v2_30fe2, i32* %v3_30fe7, align 4
  %v0_30fea = load i32, i32* @ebp, align 4
  %v1_30fea = add i32 %v0_30fea, -36
  %v2_30fea = inttoptr i32 %v1_30fea to i32*
  %v3_30fea = load i32, i32* %v2_30fea, align 4
  store i32 %v3_30fea, i32* %eax.global-to-local, align 8
  %v1_30fed = add i32 %v0_30fea, -16
  %v2_30fed = inttoptr i32 %v1_30fed to i32*
  %v3_30fed = load i32, i32* %v2_30fed, align 4
  %v2_30ff0 = add i32 %v3_30fea, 8
  %v3_30ff0 = inttoptr i32 %v2_30ff0 to i32*
  store i32 %v3_30fed, i32* %v3_30ff0, align 4
  %v0_30ff3 = load i32, i32* @ebp, align 4
  %v1_30ff3 = add i32 %v0_30ff3, -16
  %v2_30ff3 = inttoptr i32 %v1_30ff3 to i32*
  %v3_30ff3 = load i32, i32* %v2_30ff3, align 4
  store i32 %v3_30ff3, i32* %eax.global-to-local, align 8
  %v1_30ff6 = add i32 %v0_30ff3, -36
  %v2_30ff6 = inttoptr i32 %v1_30ff6 to i32*
  %v3_30ff6 = load i32, i32* %v2_30ff6, align 4
  %v2_30ff9 = add i32 %v3_30ff3, 4
  %v3_30ff9 = inttoptr i32 %v2_30ff9 to i32*
  store i32 %v3_30ff6, i32* %v3_30ff9, align 4
  %v0_30ffc = load i32, i32* @ebp, align 4
  %v1_30ffc = add i32 %v0_30ffc, -32
  %v2_30ffc = inttoptr i32 %v1_30ffc to i32*
  %v3_30ffc = load i32, i32* %v2_30ffc, align 4
  store i32 %v3_30ffc, i32* %eax.global-to-local, align 8
  %v1_30fff = add i32 %v3_30ffc, 12
  %v2_30fff = inttoptr i32 %v1_30fff to i32*
  %v3_30fff = load i32, i32* %v2_30fff, align 4
  store i32 %v3_30fff, i32* %eax.global-to-local, align 8
  %v1_31002 = icmp eq i32 %v3_30fff, 0
  br i1 %v1_31002, label %dec_label_pc_3102f, label %dec_label_pc_31006

dec_label_pc_31006:                               ; preds = %dec_label_pc_30fd5
  %v3_31006 = load i32, i32* %v2_30ffc, align 4
  store i32 %v3_31006, i32* %eax.global-to-local, align 8
  %v1_3100c = call i32 @unknown_637af(i32 %v3_31006)
  store i32 %v1_3100c, i32* %eax.global-to-local, align 8
  %v0_31011 = load i32, i32* @ebp, align 4
  %v1_31011 = add i32 %v0_31011, -16
  %v2_31011 = inttoptr i32 %v1_31011 to i32*
  %v3_31011 = load i32, i32* %v2_31011, align 4
  %v1_3101c = add i32 %v0_31011, -28
  %v2_3101c = inttoptr i32 %v1_3101c to i32*
  %v3_3101c = load i32, i32* %v2_3101c, align 4
  store i32 %v3_3101c, i32* %eax.global-to-local, align 8
  %v3_31022 = call i32 @unknown_61e94(i32 %v3_3101c, i32 %v1_3100c, i32 %v3_31011)
  store i32 %v3_31022, i32* %eax.global-to-local, align 8
  %v0_31029 = load i32, i32* @ebp, align 4
  %v1_31029 = add i32 %v0_31029, -16
  %v2_31029 = inttoptr i32 %v1_31029 to i32*
  %v3_31029 = load i32, i32* %v2_31029, align 4
  store i32 %v3_31029, i32* %eax.global-to-local, align 8
  %v2_3102c = add i32 %v3_31029, 12
  %v3_3102c = inttoptr i32 %v2_3102c to i32*
  store i32 %v3_31022, i32* %v3_3102c, align 4
  %v0_3102f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3102f

dec_label_pc_3102f:                               ; preds = %dec_label_pc_31006, %dec_label_pc_30fd5
  %v0_3102f = phi i32 [ %v0_3102f.pre, %dec_label_pc_31006 ], [ %v0_30ffc, %dec_label_pc_30fd5 ]
  %v1_3102f = add i32 %v0_3102f, -16
  %v2_3102f = inttoptr i32 %v1_3102f to i32*
  %v3_3102f = load i32, i32* %v2_3102f, align 4
  store i32 %v3_3102f, i32* %eax.global-to-local, align 8
  %v2_31032 = add i32 %v0_3102f, -36
  %v3_31032 = inttoptr i32 %v2_31032 to i32*
  store i32 %v3_3102f, i32* %v3_31032, align 4
  %v0_31035 = load i32, i32* @ebp, align 4
  %v1_31035 = add i32 %v0_31035, -32
  %v2_31035 = inttoptr i32 %v1_31035 to i32*
  %v3_31035 = load i32, i32* %v2_31035, align 4
  store i32 %v3_31035, i32* %eax.global-to-local, align 8
  %v1_3103b = call i32 @unknown_637df(i32 %v3_31035)
  store i32 %v1_3103b, i32* %eax.global-to-local, align 8
  %v1_31040 = load i32, i32* @ebp, align 4
  %v2_31040 = add i32 %v1_31040, -32
  %v3_31040 = inttoptr i32 %v2_31040 to i32*
  store i32 %v1_3103b, i32* %v3_31040, align 4
  br label %dec_label_pc_31043

dec_label_pc_31043:                               ; preds = %dec_label_pc_3102f, %dec_label_pc_30fbf
  %v0_31043 = load i32, i32* @ebp, align 4
  %v1_31043 = add i32 %v0_31043, -32
  %v2_31043 = inttoptr i32 %v1_31043 to i32*
  %v3_31043 = load i32, i32* %v2_31043, align 4
  %v10_31043 = icmp eq i32 %v3_31043, 0
  %v1_31047 = icmp eq i1 %v10_31043, false
  %v2_31047 = zext i1 %v1_31047 to i32
  %v3_31047 = load i32, i32* %eax.global-to-local, align 8
  %v4_31047 = and i32 %v3_31047, -256
  %v5_31047 = or i32 %v2_31047, %v4_31047
  store i32 %v5_31047, i32* %eax.global-to-local, align 8
  %v5_3104a = icmp eq i1 %v1_31047, false
  %v1_3104c = icmp eq i1 %v5_3104a, false
  br i1 %v1_3104c, label %dec_label_pc_30fd5, label %dec_label_pc_3104e

dec_label_pc_3104e:                               ; preds = %dec_label_pc_31043
  %v1_3104e = add i32 %v0_31043, -20
  %v2_3104e = inttoptr i32 %v1_3104e to i32*
  %v3_3104e = load i32, i32* %v2_3104e, align 4
  store i32 %v3_3104e, i32* @eax, align 8
  %v1_31051 = add i32 %v0_31043, -12
  %v2_31051 = inttoptr i32 %v1_31051 to i32*
  %v3_31051 = load i32, i32* %v2_31051, align 4
  %v4_31054 = icmp eq i32 %v3_31051, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_31054, label %bb, label %dec_label_pc_3105d

bb:                                               ; preds = %dec_label_pc_3104e
  %v1_3105b = call i32 @function_31094()
  store i32 %v1_3105b, i32* @eax, align 8
  br label %dec_label_pc_3105d

dec_label_pc_3105d:                               ; preds = %bb, %dec_label_pc_3104e
  %v0_3105d = call i32 @function_3108f()
  store i32 %v0_3105d, i32* %eax.global-to-local, align 8
  ret i32 %v0_3105d

; uselistorder directives
  uselistorder i32* %v2_31043, { 1, 0 }
  uselistorder i32 %v0_31043, { 1, 0, 3, 2 }
  uselistorder i32 %v0_3102f, { 1, 0 }
  uselistorder i32 %v0_30fbf, { 1, 0 }
  uselistorder i32 %v4_30f7e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 -16, { 24, 25, 26, 27, 28, 29, 1, 30, 0, 33, 34, 35, 36, 37, 38, 2, 51, 52, 53, 54, 55, 22, 23, 9, 10, 42, 43, 57, 58, 46, 47, 11, 12, 39, 40, 41, 88, 48, 49, 50, 31, 32, 13, 14, 56, 59, 60, 3, 4, 61, 62, 63, 64, 44, 45, 67, 68, 89, 69, 70, 71, 72, 73, 74, 91, 92, 65, 66, 15, 16, 77, 78, 5, 6, 81, 82, 90, 17, 83, 84, 85, 86, 87, 93, 94, 79, 80, 18, 19, 20, 21, 75, 76, 7, 8 }
  uselistorder i32 (i32)* @unknown_637df, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_61e94, { 1, 0 }
  uselistorder i32 (i32)* @unknown_637af, { 1, 0 }
}

define i32 @function_31060() local_unnamed_addr {
dec_label_pc_31060:
  %eax.global-to-local = alloca i32, align 4
  %v0_31060 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31060
}

define i32 @function_31066() local_unnamed_addr {
dec_label_pc_31066:
  %v0_31066 = load i32, i32* @ebx, align 8
  ret i32 %v0_31066
}

define i32 @function_3108f() local_unnamed_addr {
dec_label_pc_3108f:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31094() local_unnamed_addr {
dec_label_pc_31094:
  %v0_31099 = load i32, i32* @eax, align 8
  ret i32 %v0_31099
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3109a:
  ret i32 %arg1
}

define i32 @function_310b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_310b4:
  %v0_310b4 = load i32, i32* @eax, align 8
  %v1_310b4 = add i32 %v0_310b4, 8
  %v2_310b4 = inttoptr i32 %v1_310b4 to i32*
  %v3_310b4 = load i32, i32* %v2_310b4, align 4
  store i32 %v3_310b4, i32* @eax, align 8
  %v0_310b7 = load i32, i32* @ebp, align 4
  %v1_310b7 = add i32 %v0_310b7, -12
  %v2_310b7 = inttoptr i32 %v1_310b7 to i32*
  %v3_310b7 = load i32, i32* %v2_310b7, align 4
  %v4_310ba = icmp eq i32 %v3_310b7, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_310ba, label %bb, label %dec_label_pc_310c3

bb:                                               ; preds = %dec_label_pc_310b4
  %v1_310c1 = call i32 @function_310c8()
  br label %dec_label_pc_310c3

dec_label_pc_310c3:                               ; preds = %bb, %dec_label_pc_310b4
  %v3_310c1 = phi i32 [ %v1_310c1, %bb ], [ %v3_310b4, %dec_label_pc_310b4 ]
  ret i32 %v3_310c1
}

define i32 @function_310c8() local_unnamed_addr {
dec_label_pc_310c8:
  %v0_310c9 = load i32, i32* @eax, align 8
  ret i32 %v0_310c9
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_310ca:
  %v1_310e4 = add i32 %arg1, 8
  store i32 %v1_310e4, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_310f3

bb:                                               ; preds = %dec_label_pc_310ca
  %v2_310f1 = call i32 @function_310f8(i32 %arg1)
  br label %dec_label_pc_310f3

dec_label_pc_310f3:                               ; preds = %bb, %dec_label_pc_310ca
  %v3_310f1 = phi i32 [ %v2_310f1, %bb ], [ %v1_310e4, %dec_label_pc_310ca ]
  ret i32 %v3_310f1
}

define i32 @function_310f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_310f8:
  %v0_310f9 = load i32, i32* @eax, align 8
  ret i32 %v0_310f9
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_minimumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_310fa:
  ret i32 %arg1
}

define i32 @function_31114(i32 %arg1) local_unnamed_addr {
dec_label_pc_31114:
  %v0_31114 = load i32, i32* @eax, align 8
  %v1_31117 = call i32 @function_31ac3(i32 %v0_31114)
  ret i32 %v1_31117
}

define i32 @function_3112c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3112c:
  %v0_3112e = load i32, i32* @eax, align 8
  ret i32 %v0_3112e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31130:
  %v1_3114a = add i32 %arg1, 12
  store i32 %v1_3114a, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31159

bb:                                               ; preds = %dec_label_pc_31130
  %v2_31157 = call i32 @function_3115e(i32 %arg1)
  br label %dec_label_pc_31159

dec_label_pc_31159:                               ; preds = %bb, %dec_label_pc_31130
  %v3_31157 = phi i32 [ %v2_31157, %bb ], [ %v1_3114a, %dec_label_pc_31130 ]
  ret i32 %v3_31157
}

define i32 @function_3115e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3115e:
  %v0_3115f = load i32, i32* @eax, align 8
  ret i32 %v0_3115f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_S_maximumEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_31160:
  %v1_3117d = call i32 @function_31b70(i32 %arg1)
  store i32 %v1_3117d, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3118e

bb:                                               ; preds = %dec_label_pc_31160
  %v1_3118c = call i32 @function_31193()
  br label %dec_label_pc_3118e

dec_label_pc_3118e:                               ; preds = %bb, %dec_label_pc_31160
  %v2_3118c = phi i32 [ %v1_3118c, %bb ], [ %v1_3117d, %dec_label_pc_31160 ]
  ret i32 %v2_3118c
}

define i32 @function_31193() local_unnamed_addr {
dec_label_pc_31193:
  %v0_31194 = load i32, i32* @eax, align 8
  ret i32 %v0_31194
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31196:
  %v1_311b0 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_311b0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_311bf

bb:                                               ; preds = %dec_label_pc_31196
  %v2_311bd = call i32 @function_311c4(i32 %arg1)
  br label %dec_label_pc_311bf

dec_label_pc_311bf:                               ; preds = %bb, %dec_label_pc_31196
  %v3_311bd = phi i32 [ %v2_311bd, %bb ], [ %v1_311b0, %dec_label_pc_31196 ]
  ret i32 %v3_311bd
}

define i32 @function_311c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_311c4:
  %v0_311c5 = load i32, i32* @eax, align 8
  ret i32 %v0_311c5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IvRKSsNS3_8functionIFvSG_EEEEENS4_5mutexEEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_311c6:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_311e9

bb:                                               ; preds = %dec_label_pc_311c6
  %v2_311e7 = call i32 @function_311ee(i32 %arg1)
  br label %dec_label_pc_311e9

dec_label_pc_311e9:                               ; preds = %bb, %dec_label_pc_311c6
  %v3_311e7 = phi i32 [ %v2_311e7, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_311c6 ]
  ret i32 %v3_311e7
}

define i32 @function_311ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_311ee:
  %v0_311ef = load i32, i32* @eax, align 8
  ret i32 %v0_311ef
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEC1EPKSt13_Rb_tree_nodeISN_E() local_unnamed_addr {
dec_label_pc_311f0:
  %eax.global-to-local = alloca i32, align 4
  %v2_311f1 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_311f1
}

define i32 @function_311f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_311f4:
  %v0_311f5 = load i32, i32* @ebx, align 8
  %v1_311f5 = add i32 %v0_311f5, 1166608453
  %v2_311f5 = inttoptr i32 %v1_311f5 to i8*
  %v3_311f5 = load i8, i8* %v2_311f5, align 1
  %v4_311f5 = load i32, i32* @ecx, align 4
  %v5_311f5 = trunc i32 %v4_311f5 to i8
  %v6_311f5 = sub i8 %v3_311f5, %v5_311f5
  store i8 %v6_311f5, i8* %v2_311f5, align 1
  %v0_311fd = load i32, i32* @ebp, align 4
  %v1_31200 = add i32 %v0_311fd, 2
  store i32 %v1_31200, i32* @ebp, align 4
  %v2_31208 = add i32 %v0_311fd, -10
  %v3_31208 = inttoptr i32 %v2_31208 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31208, align 4
  %v0_3120d = load i32, i32* @ebp, align 4
  %v1_3120d = add i32 %v0_3120d, -28
  %v2_3120d = inttoptr i32 %v1_3120d to i32*
  %v3_3120d = load i32, i32* %v2_3120d, align 4
  %v1_31210 = add i32 %v0_3120d, -32
  %v2_31210 = inttoptr i32 %v1_31210 to i32*
  %v3_31210 = load i32, i32* %v2_31210, align 4
  %v2_31213 = inttoptr i32 %v3_3120d to i32*
  store i32 %v3_31210, i32* %v2_31213, align 4
  %v0_31215 = load i32, i32* @ebp, align 4
  %v1_31215 = add i32 %v0_31215, -12
  %v2_31215 = inttoptr i32 %v1_31215 to i32*
  %v3_31215 = load i32, i32* %v2_31215, align 4
  %v3_31218 = xor i32 %v3_31215, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31218 = icmp eq i32 %v3_31218, 0
  store i32 %v3_31218, i32* @eax, align 8
  br i1 %v4_31218, label %bb, label %dec_label_pc_31221

bb:                                               ; preds = %dec_label_pc_311f4
  %v1_3121f = call i32 @function_31226()
  br label %dec_label_pc_31221

dec_label_pc_31221:                               ; preds = %bb, %dec_label_pc_311f4
  %v3_3121f = phi i32 [ %v1_3121f, %bb ], [ %v3_31218, %dec_label_pc_311f4 ]
  ret i32 %v3_3121f
}

define i32 @function_31226() local_unnamed_addr {
dec_label_pc_31226:
  %v0_31227 = load i32, i32* @eax, align 8
  ret i32 %v0_31227
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31228:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31254

bb:                                               ; preds = %dec_label_pc_31228
  %v3_31252 = call i32 @function_31259(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_31254

dec_label_pc_31254:                               ; preds = %bb, %dec_label_pc_31228
  %v4_31252 = phi i32 [ %v3_31252, %bb ], [ %arg1, %dec_label_pc_31228 ]
  ret i32 %v4_31252
}

define i32 @function_31259(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31259:
  %v0_3125a = load i32, i32* @eax, align 8
  ret i32 %v0_3125a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3125e:
  %stack_var_-19 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp124 = ptrtoint i32* %arg1 to i32
  %v1_31291 = call i32 @unknown_56768(i32 %arg2)
  %v12_31296 = icmp eq i32 %v1_31291, %arg3
  %v5_3129b = icmp eq i1 %v12_31296, false
  br i1 %v5_3129b, label %dec_label_pc_31367, label %dec_label_pc_312a3

dec_label_pc_312a3:                               ; preds = %dec_label_pc_3125e
  %v1_312a9 = call i32 @unknown_63b24(i32 %arg2)
  %v1_312ae = icmp eq i32 %v1_312a9, 0
  br i1 %v1_312ae, label %dec_label_pc_312fb, label %dec_label_pc_312b2

dec_label_pc_312b2:                               ; preds = %dec_label_pc_312a3
  %v2_312b9 = ptrtoint i32* %stack_var_-21 to i32
  %v2_312bf = call i32 @unknown_5bd8c(i32 %v2_312b9, i32 %arg4)
  %v1_312cc = call i32 @unknown_623f4(i32 %arg2)
  %v1_312d1 = inttoptr i32 %v1_312cc to i32*
  %v2_312d1 = load i32, i32* %v1_312d1, align 4
  %v1_312d6 = call i32 @unknown_5bf4d(i32 %v2_312d1)
  %v3_312eb = call i32 @unknown_5299e(i32 %arg2, i32 %v1_312d6, i32 %v2_312bf)
  %v4_312f0 = trunc i32 %v3_312eb to i8
  %v5_312f0 = icmp eq i8 %v4_312f0, 0
  br i1 %v5_312f0, label %dec_label_pc_312fb, label %dec_label_pc_31300

dec_label_pc_312fb:                               ; preds = %dec_label_pc_312b2, %dec_label_pc_312a3
  br label %dec_label_pc_31300

dec_label_pc_31300:                               ; preds = %dec_label_pc_312b2, %dec_label_pc_312fb
  %storemerge = phi i1 [ true, %dec_label_pc_312fb ], [ false, %dec_label_pc_312b2 ]
  br i1 %storemerge, label %dec_label_pc_3133e, label %dec_label_pc_31304

dec_label_pc_31304:                               ; preds = %dec_label_pc_31300
  %v1_3130a = call i32 @unknown_623f4(i32 %arg2)
  %v1_31331 = call i32 @unknown_5bdc0(i32 %tmp124)
  %v0_31339 = call i32 @function_3165e()
  ret i32 %v0_31339

dec_label_pc_3133e:                               ; preds = %dec_label_pc_31300
  %v2_3133e = ptrtoint i32* %stack_var_-52 to i32
  %v3_31352 = call i32 @unknown_56a94(i32 %v2_3133e, i32 %arg2, i32 %arg4)
  %v3_3135d = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_3135d, i32* %arg1, align 4
  %v0_31362 = call i32 @function_3165e()
  ret i32 %v0_31362

dec_label_pc_31367:                               ; preds = %dec_label_pc_3125e
  %v1_3136d = call i32 @unknown_5bf4d(i32 %arg3)
  %v2_3137b = ptrtoint i32* %stack_var_-20 to i32
  %v2_31381 = call i32 @unknown_5bd8c(i32 %v2_3137b, i32 %arg4)
  %v3_31394 = call i32 @unknown_5299e(i32 %arg2, i32 %v2_31381, i32 %v1_3136d)
  %v4_31399 = trunc i32 %v3_31394 to i8
  %v5_31399 = icmp eq i8 %v4_31399, 0
  br i1 %v5_31399, label %bb, label %dec_label_pc_313a1

bb:                                               ; preds = %dec_label_pc_31367
  %v1_3139b = call i32 @function_314e1()
  br label %dec_label_pc_313a1

dec_label_pc_313a1:                               ; preds = %bb, %dec_label_pc_31367
  store i32 %arg3, i32* %stack_var_-28, align 4
  %v1_313b0 = call i32 @unknown_6238e(i32 %arg2)
  %v1_313b5 = inttoptr i32 %v1_313b0 to i32*
  %v2_313b5 = load i32, i32* %v1_313b5, align 4
  %v12_313b7 = icmp eq i32 %v2_313b5, %arg3
  %v5_313bc = icmp eq i1 %v12_313b7, false
  br i1 %v5_313bc, label %dec_label_pc_31403, label %dec_label_pc_313c0

dec_label_pc_313c0:                               ; preds = %dec_label_pc_313a1
  %v1_313c6 = call i32 @unknown_6238e(i32 %arg2)
  %v1_313d3 = call i32 @unknown_6238e(i32 %arg2)
  %v1_313f6 = call i32 @unknown_5bdc0(i32 %tmp124)
  %v0_313fe = call i32 @function_3165e()
  ret i32 %v0_313fe

dec_label_pc_31403:                               ; preds = %dec_label_pc_313a1
  %v2_3140a = ptrtoint i32* %stack_var_-19 to i32
  %v2_31410 = call i32 @unknown_5bd8c(i32 %v2_3140a, i32 %arg4)
  %v2_31417 = ptrtoint i32* %stack_var_-28 to i32
  %v1_3141d = call i32 @unknown_63b54(i32 %v2_31417)
  %v1_31422 = inttoptr i32 %v1_3141d to i32*
  %v2_31422 = load i32, i32* %v1_31422, align 4
  %v1_31427 = call i32 @unknown_5bf4d(i32 %v2_31422)
  %v3_3143c = call i32 @unknown_5299e(i32 %arg2, i32 %v1_31427, i32 %v2_31410)
  %v4_31441 = trunc i32 %v3_3143c to i8
  %v5_31441 = icmp eq i8 %v4_31441, 0
  br i1 %v5_31441, label %bb131, label %dec_label_pc_31445

bb131:                                            ; preds = %dec_label_pc_31403
  %v1_31443 = call i32 @function_314b8()
  br label %dec_label_pc_31445

dec_label_pc_31445:                               ; preds = %bb131, %dec_label_pc_31403
  %v3_31445 = load i32, i32* %stack_var_-28, align 4
  %v1_3144b = call i32 @unknown_63ac3(i32 %v3_31445)
  %v1_3147c = call i32 @unknown_5bdc0(i32 %tmp124)
  ret i32 %v1_3147c

; uselistorder directives
  uselistorder i32 %tmp124, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_6238e, { 2, 1, 0 }
  uselistorder i1 true, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 13, 9, 14, 10, 11, 12 }
  uselistorder i32 %arg4, { 2, 3, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 7, 5, 6, 8, 9, 3, 2, 0, 1, 4, 10 }
  uselistorder label %dec_label_pc_31300, { 1, 0 }
}

define i32 @function_31486(i32 %arg1) local_unnamed_addr {
dec_label_pc_31486:
  %eax.global-to-local = alloca i32, align 4
  %v2_31486 = load i32, i32* @eax, align 8
  %v4_31486 = mul i32 %v2_31486, 2
  %v21_31486 = inttoptr i32 %v2_31486 to i32*
  store i32 %v4_31486, i32* %v21_31486, align 4
  %v0_31488 = load i32, i32* @ebx, align 8
  %v1_31488 = add i32 %v0_31488, 1435221069
  %v2_31488 = inttoptr i32 %v1_31488 to i8*
  %v3_31488 = load i8, i8* %v2_31488, align 1
  %v4_31488 = load i32, i32* @ecx, align 4
  %v5_31488 = trunc i32 %v4_31488 to i8
  %v6_31488 = add i8 %v5_31488, %v3_31488
  store i8 %v6_31488, i8* %v2_31488, align 1
  %v2_31493 = load i32, i32* inttoptr (i32 -1950071413 to i32*), align 4
  store i32 %v2_31493, i32* @ebp, align 4
  store i32 270818441, i32* %eax.global-to-local, align 8
  %v0_31499 = load i32, i32* @ecx, align 4
  store i32 %v0_31499, i32* inttoptr (i32 -1950071397 to i32*), align 4
  %v0_3149d = load i32, i32* @edx, align 8
  %v1_3149d = load i32, i32* @esp, align 4
  %v2_3149d = add i32 %v1_3149d, 8
  %v3_3149d = inttoptr i32 %v2_3149d to i32*
  store i32 %v0_3149d, i32* %v3_3149d, align 4
  %v0_314a1 = load i32, i32* @ebp, align 4
  %v1_314a1 = add i32 %v0_314a1, -64
  %v2_314a1 = inttoptr i32 %v1_314a1 to i32*
  %v3_314a1 = load i32, i32* %v2_314a1, align 4
  %v1_314a4 = load i32, i32* @esp, align 4
  %v2_314a4 = add i32 %v1_314a4, 4
  %v3_314a4 = inttoptr i32 %v2_314a4 to i32*
  store i32 %v3_314a1, i32* %v3_314a4, align 4
  %v4_314a4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_314a4

; uselistorder directives
  uselistorder i32 %v2_31486, { 1, 0 }
}

define i32 @function_314a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_314a8:
  %v0_314a8 = load i32, i32* @eax, align 8
  %v1_314ab = call i32 @unknown_5bdc0(i32 %v0_314a8)
  %v0_314b3 = call i32 @function_3165e()
  ret i32 %v0_314b3
}

define i32 @function_314b8() local_unnamed_addr {
dec_label_pc_314b8:
  %v0_314b8 = load i32, i32* @ebp, align 4
  %v1_314b8 = add i32 %v0_314b8, -40
  %v1_314bb = add i32 %v0_314b8, -72
  %v2_314bb = inttoptr i32 %v1_314bb to i32*
  %v3_314bb = load i32, i32* %v2_314bb, align 4
  %v1_314c2 = add i32 %v0_314b8, -64
  %v2_314c2 = inttoptr i32 %v1_314c2 to i32*
  %v3_314c2 = load i32, i32* %v2_314c2, align 4
  %v3_314cc = call i32 @unknown_56a94(i32 %v1_314b8, i32 %v3_314c2, i32 %v3_314bb)
  %v0_314d4 = load i32, i32* @ebp, align 4
  %v1_314d4 = add i32 %v0_314d4, -60
  %v2_314d4 = inttoptr i32 %v1_314d4 to i32*
  %v3_314d4 = load i32, i32* %v2_314d4, align 4
  %v1_314d7 = add i32 %v0_314d4, -40
  %v2_314d7 = inttoptr i32 %v1_314d7 to i32*
  %v3_314d7 = load i32, i32* %v2_314d7, align 4
  %v2_314da = inttoptr i32 %v3_314d4 to i32*
  store i32 %v3_314d7, i32* %v2_314da, align 4
  %v0_314dc = call i32 @function_3165e()
  ret i32 %v0_314dc
}

define i32 @function_314e1() local_unnamed_addr {
dec_label_pc_314e1:
  %v0_314e1 = load i32, i32* @ebp, align 4
  %v1_314e8 = add i32 %v0_314e1, -14
  ret i32 %v1_314e8

; uselistorder directives
  uselistorder i32 -14, { 0, 1, 12, 13, 7, 4, 11, 8, 9, 14, 15, 10, 5, 6, 2, 3 }
}

define i32 @function_314f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_314f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_314f2 = load i32, i32* @ecx, align 4
  %v1_314f2 = add i32 %v0_314f2, -1136292925
  %v2_314f2 = inttoptr i32 %v1_314f2 to i8*
  %v3_314f2 = load i8, i8* %v2_314f2, align 1
  %v5_314f2 = trunc i32 %v0_314f2 to i8
  %v6_314f2 = add i8 %v3_314f2, %v5_314f2
  store i8 %v6_314f2, i8* %v2_314f2, align 1
  %v0_314f8 = load i32, i32* @eax, align 8
  %v1_314fb = call i32 @unknown_5bf4d(i32 %v0_314f8)
  store i32 %v1_314fb, i32* %eax.global-to-local, align 8
  %v0_31502 = load i32, i32* @ebp, align 4
  %v1_31502 = add i32 %v0_31502, -64
  %v2_31502 = inttoptr i32 %v1_31502 to i32*
  %v3_31502 = load i32, i32* %v2_31502, align 4
  store i32 %v3_31502, i32* %eax.global-to-local, align 8
  %v0_31505 = load i32, i32* @ebx, align 8
  %v3_31510 = call i32 @unknown_5299e(i32 %v3_31502, i32 %v1_314fb, i32 %v0_31505)
  store i32 %v3_31510, i32* %eax.global-to-local, align 8
  %v4_31515 = trunc i32 %v3_31510 to i8
  %v5_31515 = icmp eq i8 %v4_31515, 0
  br i1 %v5_31515, label %bb, label %dec_label_pc_3151d

bb:                                               ; preds = %dec_label_pc_314f2
  %v1_31517 = call i32 @function_31649()
  store i32 %v1_31517, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_3151d

dec_label_pc_3151d:                               ; preds = %bb, %dec_label_pc_314f2
  %v0_3151d = load i32, i32* @ebp, align 4
  %v1_3151d = add i32 %v0_3151d, -68
  %v2_3151d = inttoptr i32 %v1_3151d to i32*
  %v3_3151d = load i32, i32* %v2_3151d, align 4
  store i32 %v3_3151d, i32* %eax.global-to-local, align 8
  %v2_31520 = add i32 %v0_3151d, -24
  %v3_31520 = inttoptr i32 %v2_31520 to i32*
  store i32 %v3_3151d, i32* %v3_31520, align 4
  %v4_31520 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_31520

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5 }
}

define i32 @function_31524(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31524:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v0_3152a = load i32, i32* @eax, align 8
  %v2_3152a = add i32 %v0_3152a, 36
  %v16_3152a = and i32 %v2_3152a, 255
  %v18_3152a = and i32 %v0_3152a, -256
  %v19_3152a = or i32 %v16_3152a, %v18_3152a
  store i32 %v19_3152a, i32* %eax.global-to-local, align 8
  %v1_3152c = call i32 @unknown_623f4(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_3152c, i32* %eax.global-to-local, align 8
  %v1_31531 = inttoptr i32 %v1_3152c to i32*
  %v2_31531 = load i32, i32* %v1_31531, align 4
  %v0_31533 = load i32, i32* @ebx, align 8
  %v12_31533 = icmp eq i32 %v0_31533, %v2_31531
  %v1_31535 = zext i1 %v12_31533 to i32
  %v3_31535 = and i32 %v2_31531, -256
  %v4_31535 = or i32 %v1_31535, %v3_31535
  store i32 %v4_31535, i32* %eax.global-to-local, align 8
  %v5_31538 = icmp eq i1 %v12_31533, false
  %v0_31576 = load i32, i32* @ebp, align 4
  br i1 %v5_31538, label %dec_label_pc_31576, label %dec_label_pc_3153c

dec_label_pc_3153c:                               ; preds = %dec_label_pc_31524
  %v1_3153c = add i32 %v0_31576, -64
  %v2_3153c = inttoptr i32 %v1_3153c to i32*
  %v3_3153c = load i32, i32* %v2_3153c, align 4
  store i32 %v3_3153c, i32* %eax.global-to-local, align 8
  %v1_3153f = load i32, i32* @esp, align 4
  %v2_3153f = inttoptr i32 %v1_3153f to i32*
  store i32 %v3_3153c, i32* %v2_3153f, align 4
  %v1_31542 = call i32 @unknown_623f4(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_31542, i32* %eax.global-to-local, align 8
  %v1_31547 = inttoptr i32 %v1_31542 to i32*
  %v2_31547 = load i32, i32* %v1_31547, align 4
  store i32 %v2_31547, i32* %edx.global-to-local, align 8
  %v0_31549 = load i32, i32* @ebp, align 4
  %v1_31549 = add i32 %v0_31549, -60
  %v2_31549 = inttoptr i32 %v1_31549 to i32*
  %v3_31549 = load i32, i32* %v2_31549, align 4
  store i32 %v3_31549, i32* %eax.global-to-local, align 8
  %v1_3154c = add i32 %v0_31549, -72
  %v2_3154c = inttoptr i32 %v1_3154c to i32*
  %v3_3154c = load i32, i32* %v2_3154c, align 4
  store i32 %v3_3154c, i32* %ecx.global-to-local, align 4
  %v1_3154f = load i32, i32* @esp, align 4
  %v2_3154f = add i32 %v1_3154f, 16
  %v3_3154f = inttoptr i32 %v2_3154f to i32*
  store i32 %v3_3154c, i32* %v3_3154f, align 4
  %v0_31553 = load i32, i32* %edx.global-to-local, align 8
  %v1_31553 = load i32, i32* @esp, align 4
  %v2_31553 = add i32 %v1_31553, 12
  %v3_31553 = inttoptr i32 %v2_31553 to i32*
  store i32 %v0_31553, i32* %v3_31553, align 4
  %v0_31557 = load i32, i32* @esp, align 4
  %v1_31557 = add i32 %v0_31557, 8
  %v2_31557 = inttoptr i32 %v1_31557 to i32*
  store i32 0, i32* %v2_31557, align 4
  %v0_3155f = load i32, i32* @ebp, align 4
  %v1_3155f = add i32 %v0_3155f, -64
  %v2_3155f = inttoptr i32 %v1_3155f to i32*
  %v3_3155f = load i32, i32* %v2_3155f, align 4
  store i32 %v3_3155f, i32* %edx.global-to-local, align 8
  %v1_31562 = load i32, i32* @esp, align 4
  %v2_31562 = add i32 %v1_31562, 4
  %v3_31562 = inttoptr i32 %v2_31562 to i32*
  store i32 %v3_3155f, i32* %v3_31562, align 4
  %v0_31566 = load i32, i32* %eax.global-to-local, align 8
  %v1_31566 = load i32, i32* @esp, align 4
  %v2_31566 = inttoptr i32 %v1_31566 to i32*
  store i32 %v0_31566, i32* %v2_31566, align 4
  %v1_31569 = call i32 @unknown_5bdc0(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_31569, i32* %eax.global-to-local, align 8
  %v0_31571 = call i32 @function_3165e()
  store i32 %v0_31571, i32* %eax.global-to-local, align 8
  ret i32 %v0_31571

dec_label_pc_31576:                               ; preds = %dec_label_pc_31524
  %v1_31576 = add i32 %v0_31576, -24
  store i32 %v1_31576, i32* %eax.global-to-local, align 8
  %v1_31579 = load i32, i32* @esp, align 4
  %v2_31579 = inttoptr i32 %v1_31579 to i32*
  store i32 %v1_31576, i32* %v2_31579, align 4
  %v0_3157c = call i32 @unknown_5b40c()
  store i32 %v0_3157c, i32* %eax.global-to-local, align 8
  %v1_31581 = inttoptr i32 %v0_3157c to i32*
  %v2_31581 = load i32, i32* %v1_31581, align 4
  store i32 %v2_31581, i32* %eax.global-to-local, align 8
  %v1_31583 = load i32, i32* @esp, align 4
  %v2_31583 = inttoptr i32 %v1_31583 to i32*
  store i32 %v2_31581, i32* %v2_31583, align 4
  %v1_31586 = call i32 @unknown_5bf4d(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_31586, i32* %eax.global-to-local, align 8
  store i32 %v1_31586, i32* %ebx.global-to-local, align 8
  %v0_3158d = load i32, i32* @ebp, align 4
  %v1_3158d = add i32 %v0_3158d, -72
  %v2_3158d = inttoptr i32 %v1_3158d to i32*
  %v3_3158d = load i32, i32* %v2_3158d, align 4
  %v1_31590 = load i32, i32* @esp, align 4
  %v2_31590 = add i32 %v1_31590, 4
  %v3_31590 = inttoptr i32 %v2_31590 to i32*
  store i32 %v3_3158d, i32* %v3_31590, align 4
  %v0_31594 = load i32, i32* @ebp, align 4
  %v1_31594 = add i32 %v0_31594, -13
  store i32 %v1_31594, i32* %eax.global-to-local, align 8
  %v1_31597 = load i32, i32* @esp, align 4
  %v2_31597 = inttoptr i32 %v1_31597 to i32*
  store i32 %v1_31594, i32* %v2_31597, align 4
  %v2_3159a = call i32 @unknown_5bd8c(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v2_3159a, i32* %eax.global-to-local, align 8
  %v0_3159f = load i32, i32* @ebp, align 4
  %v1_3159f = add i32 %v0_3159f, -64
  %v2_3159f = inttoptr i32 %v1_3159f to i32*
  %v3_3159f = load i32, i32* %v2_3159f, align 4
  store i32 %v3_3159f, i32* %edx.global-to-local, align 8
  %v0_315a2 = load i32, i32* %ebx.global-to-local, align 8
  %v1_315a2 = load i32, i32* @esp, align 4
  %v2_315a2 = add i32 %v1_315a2, 8
  %v3_315a2 = inttoptr i32 %v2_315a2 to i32*
  store i32 %v0_315a2, i32* %v3_315a2, align 4
  %v0_315a6 = load i32, i32* %eax.global-to-local, align 8
  %v1_315a6 = load i32, i32* @esp, align 4
  %v2_315a6 = add i32 %v1_315a6, 4
  %v3_315a6 = inttoptr i32 %v2_315a6 to i32*
  store i32 %v0_315a6, i32* %v3_315a6, align 4
  %v0_315aa = load i32, i32* %edx.global-to-local, align 8
  %v1_315aa = load i32, i32* @esp, align 4
  %v2_315aa = inttoptr i32 %v1_315aa to i32*
  store i32 %v0_315aa, i32* %v2_315aa, align 4
  %v3_315ad = call i32 @unknown_5299e(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_315ad, i32* %eax.global-to-local, align 8
  %v4_315b2 = trunc i32 %v3_315ad to i8
  %v5_315b2 = icmp eq i8 %v4_315b2, 0
  %v0_31623 = load i32, i32* @ebp, align 4
  br i1 %v5_315b2, label %dec_label_pc_31623, label %dec_label_pc_315b6

dec_label_pc_315b6:                               ; preds = %dec_label_pc_31576
  %v1_315b6 = add i32 %v0_31623, -68
  %v2_315b6 = inttoptr i32 %v1_315b6 to i32*
  %v3_315b6 = load i32, i32* %v2_315b6, align 4
  store i32 %v3_315b6, i32* %eax.global-to-local, align 8
  %v1_315b9 = load i32, i32* @esp, align 4
  %v2_315b9 = inttoptr i32 %v1_315b9 to i32*
  store i32 %v3_315b6, i32* %v2_315b9, align 4
  %v1_315bc = call i32 @unknown_63ac3(i32 ptrtoint (i32* @2 to i32))
  %v1_315c1 = icmp eq i32 %v1_315bc, 0
  %v1_315c3 = zext i1 %v1_315c1 to i32
  %v3_315c3 = and i32 %v1_315bc, -256
  %v4_315c3 = or i32 %v1_315c3, %v3_315c3
  store i32 %v4_315c3, i32* %eax.global-to-local, align 8
  %v5_315c6 = icmp eq i1 %v1_315c1, false
  %v0_315f7 = load i32, i32* @ebp, align 4
  br i1 %v5_315c6, label %dec_label_pc_315f7, label %dec_label_pc_315ca

dec_label_pc_315ca:                               ; preds = %dec_label_pc_315b6
  %v1_315ca = add i32 %v0_315f7, -68
  %v2_315ca = inttoptr i32 %v1_315ca to i32*
  %v3_315ca = load i32, i32* %v2_315ca, align 4
  store i32 %v3_315ca, i32* %edx.global-to-local, align 8
  %v1_315cd = add i32 %v0_315f7, -60
  %v2_315cd = inttoptr i32 %v1_315cd to i32*
  %v3_315cd = load i32, i32* %v2_315cd, align 4
  store i32 %v3_315cd, i32* %eax.global-to-local, align 8
  %v1_315d0 = add i32 %v0_315f7, -72
  %v2_315d0 = inttoptr i32 %v1_315d0 to i32*
  %v3_315d0 = load i32, i32* %v2_315d0, align 4
  store i32 %v3_315d0, i32* %ecx.global-to-local, align 4
  %v1_315d3 = load i32, i32* @esp, align 4
  %v2_315d3 = add i32 %v1_315d3, 16
  %v3_315d3 = inttoptr i32 %v2_315d3 to i32*
  store i32 %v3_315d0, i32* %v3_315d3, align 4
  %v0_315d7 = load i32, i32* %edx.global-to-local, align 8
  %v1_315d7 = load i32, i32* @esp, align 4
  %v2_315d7 = add i32 %v1_315d7, 12
  %v3_315d7 = inttoptr i32 %v2_315d7 to i32*
  store i32 %v0_315d7, i32* %v3_315d7, align 4
  %v0_315db = load i32, i32* @esp, align 4
  %v1_315db = add i32 %v0_315db, 8
  %v2_315db = inttoptr i32 %v1_315db to i32*
  store i32 0, i32* %v2_315db, align 4
  %v0_315e3 = load i32, i32* @ebp, align 4
  %v1_315e3 = add i32 %v0_315e3, -64
  %v2_315e3 = inttoptr i32 %v1_315e3 to i32*
  %v3_315e3 = load i32, i32* %v2_315e3, align 4
  store i32 %v3_315e3, i32* %edx.global-to-local, align 8
  %v1_315e6 = load i32, i32* @esp, align 4
  %v2_315e6 = add i32 %v1_315e6, 4
  %v3_315e6 = inttoptr i32 %v2_315e6 to i32*
  store i32 %v3_315e3, i32* %v3_315e6, align 4
  %v0_315ea = load i32, i32* %eax.global-to-local, align 8
  %v1_315ea = load i32, i32* @esp, align 4
  %v2_315ea = inttoptr i32 %v1_315ea to i32*
  store i32 %v0_315ea, i32* %v2_315ea, align 4
  %v1_315ed = call i32 @unknown_5bdc0(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_315ed, i32* %eax.global-to-local, align 8
  %v0_315f5 = call i32 @function_3165e()
  store i32 %v0_315f5, i32* %eax.global-to-local, align 8
  ret i32 %v0_315f5

dec_label_pc_315f7:                               ; preds = %dec_label_pc_315b6
  %v1_315f7 = add i32 %v0_315f7, -24
  %v2_315f7 = inttoptr i32 %v1_315f7 to i32*
  %v3_315f7 = load i32, i32* %v2_315f7, align 4
  store i32 %v3_315f7, i32* %ecx.global-to-local, align 4
  %v3_315fa = load i32, i32* %v2_315f7, align 4
  store i32 %v3_315fa, i32* %edx.global-to-local, align 8
  %v1_315fd = add i32 %v0_315f7, -60
  %v2_315fd = inttoptr i32 %v1_315fd to i32*
  %v3_315fd = load i32, i32* %v2_315fd, align 4
  store i32 %v3_315fd, i32* %eax.global-to-local, align 8
  %v1_31600 = add i32 %v0_315f7, -72
  %v2_31600 = inttoptr i32 %v1_31600 to i32*
  %v3_31600 = load i32, i32* %v2_31600, align 4
  store i32 %v3_31600, i32* %ebx.global-to-local, align 8
  %v1_31603 = load i32, i32* @esp, align 4
  %v2_31603 = add i32 %v1_31603, 16
  %v3_31603 = inttoptr i32 %v2_31603 to i32*
  store i32 %v3_31600, i32* %v3_31603, align 4
  %v0_31607 = load i32, i32* %ecx.global-to-local, align 4
  %v1_31607 = load i32, i32* @esp, align 4
  %v2_31607 = add i32 %v1_31607, 12
  %v3_31607 = inttoptr i32 %v2_31607 to i32*
  store i32 %v0_31607, i32* %v3_31607, align 4
  %v0_3160b = load i32, i32* %edx.global-to-local, align 8
  %v1_3160b = load i32, i32* @esp, align 4
  %v2_3160b = add i32 %v1_3160b, 8
  %v3_3160b = inttoptr i32 %v2_3160b to i32*
  store i32 %v0_3160b, i32* %v3_3160b, align 4
  %v0_3160f = load i32, i32* @ebp, align 4
  %v1_3160f = add i32 %v0_3160f, -64
  %v2_3160f = inttoptr i32 %v1_3160f to i32*
  %v3_3160f = load i32, i32* %v2_3160f, align 4
  store i32 %v3_3160f, i32* %edx.global-to-local, align 8
  %v1_31612 = load i32, i32* @esp, align 4
  %v2_31612 = add i32 %v1_31612, 4
  %v3_31612 = inttoptr i32 %v2_31612 to i32*
  store i32 %v3_3160f, i32* %v3_31612, align 4
  %v0_31616 = load i32, i32* %eax.global-to-local, align 8
  %v1_31616 = load i32, i32* @esp, align 4
  %v2_31616 = inttoptr i32 %v1_31616 to i32*
  store i32 %v0_31616, i32* %v2_31616, align 4
  %v1_31619 = call i32 @unknown_5bdc0(i32 ptrtoint (i32* @2 to i32))
  store i32 %v1_31619, i32* %eax.global-to-local, align 8
  %v0_31621 = call i32 @function_3165e()
  store i32 %v0_31621, i32* %eax.global-to-local, align 8
  ret i32 %v0_31621

dec_label_pc_31623:                               ; preds = %dec_label_pc_31576
  %v1_31623 = add i32 %v0_31623, -32
  store i32 %v1_31623, i32* %eax.global-to-local, align 8
  %v1_31626 = add i32 %v0_31623, -72
  %v2_31626 = inttoptr i32 %v1_31626 to i32*
  %v3_31626 = load i32, i32* %v2_31626, align 4
  store i32 %v3_31626, i32* %edx.global-to-local, align 8
  %v1_31629 = load i32, i32* @esp, align 4
  %v2_31629 = add i32 %v1_31629, 8
  %v3_31629 = inttoptr i32 %v2_31629 to i32*
  store i32 %v3_31626, i32* %v3_31629, align 4
  %v0_3162d = load i32, i32* @ebp, align 4
  %v1_3162d = add i32 %v0_3162d, -64
  %v2_3162d = inttoptr i32 %v1_3162d to i32*
  %v3_3162d = load i32, i32* %v2_3162d, align 4
  store i32 %v3_3162d, i32* %edx.global-to-local, align 8
  %v1_31630 = load i32, i32* @esp, align 4
  %v2_31630 = add i32 %v1_31630, 4
  %v3_31630 = inttoptr i32 %v2_31630 to i32*
  store i32 %v3_3162d, i32* %v3_31630, align 4
  %v0_31634 = load i32, i32* %eax.global-to-local, align 8
  %v1_31634 = load i32, i32* @esp, align 4
  %v2_31634 = inttoptr i32 %v1_31634 to i32*
  store i32 %v0_31634, i32* %v2_31634, align 4
  %v3_31637 = call i32 @unknown_56a94(i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32), i32 ptrtoint (i32* @2 to i32))
  store i32 %v3_31637, i32* %eax.global-to-local, align 8
  %v0_3163f = load i32, i32* @ebp, align 4
  %v1_3163f = add i32 %v0_3163f, -60
  %v2_3163f = inttoptr i32 %v1_3163f to i32*
  %v3_3163f = load i32, i32* %v2_3163f, align 4
  store i32 %v3_3163f, i32* %eax.global-to-local, align 8
  %v1_31642 = add i32 %v0_3163f, -32
  %v2_31642 = inttoptr i32 %v1_31642 to i32*
  %v3_31642 = load i32, i32* %v2_31642, align 4
  store i32 %v3_31642, i32* %edx.global-to-local, align 8
  %v2_31645 = inttoptr i32 %v3_3163f to i32*
  store i32 %v3_31642, i32* %v2_31645, align 4
  %v0_31647 = call i32 @function_3165e()
  store i32 %v0_31647, i32* %eax.global-to-local, align 8
  ret i32 %v0_31647

; uselistorder directives
  uselistorder i32 %v0_315f7, { 1, 0, 5, 2, 4, 3 }
  uselistorder i1 %v1_315c1, { 1, 0 }
  uselistorder i32 %v0_31623, { 1, 2, 0 }
  uselistorder i32 %v0_31576, { 1, 0 }
  uselistorder i32 %v2_31531, { 1, 0 }
  uselistorder i32 %v0_3152a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 6, 7, 1, 8, 9, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32, i32, i32)* @unknown_56a94, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @unknown_5299e, { 0, 1, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @unknown_5bd8c, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @unknown_5bf4d, { 0, 1, 4, 3, 2 }
  uselistorder i32 ()* @function_3165e, { 3, 2, 1, 0, 8, 4, 7, 6, 5 }
  uselistorder i32 (i32)* @unknown_5bdc0, { 2, 1, 0, 3, 6, 5, 4 }
  uselistorder i32 -72, { 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 28, 29, 30, 31, 32, 33, 35, 36, 37, 34, 38, 39, 6, 7 }
  uselistorder i32 -64, { 29, 30, 31, 32, 33, 34, 28, 0, 22, 35, 36, 37, 38, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 94, 95, 96, 97, 98, 26, 27, 59, 60, 61, 58, 66, 67, 83, 84, 85, 86, 87, 88, 89, 68, 70, 63, 71, 64, 65, 73, 74, 72, 69, 78, 76, 77, 100, 79, 21, 11, 80, 81, 99, 82, 75, 103, 101, 102, 104, 107, 105, 106, 108, 90, 91, 92, 93, 10, 56, 57, 55, 62, 12 }
  uselistorder i32 (i32)* @unknown_623f4, { 1, 0, 3, 2 }
}

define i32 @function_31649() local_unnamed_addr {
dec_label_pc_31649:
  %v0_31649 = load i32, i32* @ebp, align 4
  %v1_31649 = add i32 %v0_31649, -60
  %v2_31649 = inttoptr i32 %v1_31649 to i32*
  %v3_31649 = load i32, i32* %v2_31649, align 4
  %v1_3164c = add i32 %v0_31649, -68
  %v2_31656 = call i32 @unknown_63b94(i32 %v3_31649, i32 %v1_3164c)
  ret i32 %v2_31656

; uselistorder directives
  uselistorder i32 -68, { 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 3, 4, 5, 6, 7, 8, 0, 1, 2, 30, 31, 9, 26, 27, 28, 29, 22, 23, 21, 24, 32, 25, 33, 34, 35, 36, 20 }
}

define i32 @function_3165e() local_unnamed_addr {
dec_label_pc_3165e:
  %v0_3165e = load i32, i32* @ebp, align 4
  %v1_3165e = add i32 %v0_3165e, -60
  %v2_3165e = inttoptr i32 %v1_3165e to i32*
  %v3_3165e = load i32, i32* %v2_3165e, align 4
  store i32 %v3_3165e, i32* @eax, align 8
  %v1_31661 = add i32 %v0_3165e, -12
  %v2_31661 = inttoptr i32 %v1_31661 to i32*
  %v3_31661 = load i32, i32* %v2_31661, align 4
  %v4_31664 = icmp eq i32 %v3_31661, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_31664, label %bb, label %dec_label_pc_3166d

bb:                                               ; preds = %dec_label_pc_3165e
  %v1_3166b = call i32 @function_31672()
  br label %dec_label_pc_3166d

dec_label_pc_3166d:                               ; preds = %bb, %dec_label_pc_3165e
  %v2_3166b = phi i32 [ %v1_3166b, %bb ], [ %v3_3165e, %dec_label_pc_3165e ]
  ret i32 %v2_3166b

; uselistorder directives
  uselistorder i32 -60, { 43, 42, 44, 45, 46, 47, 0, 56, 49, 50, 51, 40, 52, 53, 54, 55, 57, 58, 59, 34, 35, 36, 37, 38, 39, 1, 2, 3, 4, 97, 98, 99, 100, 67, 68, 69, 70, 71, 65, 66, 74, 75, 86, 87, 88, 89, 90, 76, 73, 77, 79, 80, 81, 78, 5, 6, 82, 110, 111, 109, 83, 7, 8, 103, 85, 84, 104, 9, 10, 112, 107, 108, 105, 106, 102, 101, 11, 12, 113, 114, 91, 92, 93, 94, 95, 13, 96, 14, 41, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 48, 28, 29, 30, 31, 32, 33, 62, 63, 64, 60, 61, 72 }
}

define i32 @function_31672() local_unnamed_addr {
dec_label_pc_31672:
  %v0_31676 = load i32, i32* @eax, align 8
  ret i32 %v0_31676
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3167a:
  store i32 268435455, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_316a2

bb:                                               ; preds = %dec_label_pc_3167a
  %v2_316a0 = call i32 @function_316a7(i32 %arg1)
  br label %dec_label_pc_316a2

dec_label_pc_316a2:                               ; preds = %bb, %dec_label_pc_3167a
  %v3_316a0 = phi i32 [ %v2_316a0, %bb ], [ 268435455, %dec_label_pc_3167a ]
  ret i32 %v3_316a0
}

define i32 @function_316a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_316a7:
  %v0_316a8 = load i32, i32* @eax, align 8
  ret i32 %v0_316a8
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_316aa:
  %v1_316cd = call i32 @unknown_62510(i32 %arg2)
  %v2_316dc = call i32 @unknown_6402a(i32 %arg1, i32 %v1_316cd)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_316f0

bb:                                               ; preds = %dec_label_pc_316aa
  %v1_316ee = call i32 @function_316f5()
  br label %dec_label_pc_316f0

dec_label_pc_316f0:                               ; preds = %bb, %dec_label_pc_316aa
  %v2_316ee = phi i32 [ %v1_316ee, %bb ], [ %arg1, %dec_label_pc_316aa ]
  ret i32 %v2_316ee

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_316f5() local_unnamed_addr {
dec_label_pc_316f5:
  %v0_316f6 = load i32, i32* @eax, align 8
  ret i32 %v0_316f6
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IvRKSsNS0_8functionIFvSD_EEEEENS1_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_316fa:
  %v1_31717 = call i32 @unknown_640b6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31728

bb:                                               ; preds = %dec_label_pc_316fa
  %v1_31726 = call i32 @function_3172d()
  br label %dec_label_pc_31728

dec_label_pc_31728:                               ; preds = %bb, %dec_label_pc_316fa
  %v2_31726 = phi i32 [ %v1_31726, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_316fa ]
  ret i32 %v2_31726
}

define i32 @function_3172d() local_unnamed_addr {
dec_label_pc_3172d:
  %v0_3172e = load i32, i32* @eax, align 8
  ret i32 %v0_3172e
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IvRKSsNS2_8functionIFvSF_EEEEENS3_5mutexEEEEEEEE7destroyEPSO_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31730:
  %v1_31753 = call i32 @unknown_4df20(i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31764

bb:                                               ; preds = %dec_label_pc_31730
  %v1_31762 = call i32 @function_31769()
  br label %dec_label_pc_31764

dec_label_pc_31764:                               ; preds = %bb, %dec_label_pc_31730
  %v2_31762 = phi i32 [ %v1_31762, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31730 ]
  ret i32 %v2_31762
}

define i32 @function_31769() local_unnamed_addr {
dec_label_pc_31769:
  %v0_3176a = load i32, i32* @eax, align 8
  ret i32 %v0_3176a
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_put_nodeEPSt13_Rb_tree_nodeISN_E() local_unnamed_addr {
dec_label_pc_3176c:
  %eax.global-to-local = alloca i32, align 4
  %v17_3176f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_3176f
}

define i32 @function_31772(i32 %arg1) local_unnamed_addr {
dec_label_pc_31772:
  %v0_31772 = load i32, i32* @ebp, align 4
  %v1_31772 = add i32 %v0_31772, 8
  %v2_31772 = inttoptr i32 %v1_31772 to i32*
  %v3_31772 = load i32, i32* %v2_31772, align 4
  %v2_31775 = add i32 %v0_31772, -28
  %v3_31775 = inttoptr i32 %v2_31775 to i32*
  store i32 %v3_31772, i32* %v3_31775, align 4
  %v0_31778 = load i32, i32* @ebp, align 4
  %v1_31778 = add i32 %v0_31778, 12
  %v2_31778 = inttoptr i32 %v1_31778 to i32*
  %v3_31778 = load i32, i32* %v2_31778, align 4
  %v2_3177b = add i32 %v0_31778, -32
  %v3_3177b = inttoptr i32 %v2_3177b to i32*
  store i32 %v3_31778, i32* %v3_3177b, align 4
  %v1_31784 = load i32, i32* @ebp, align 4
  %v2_31784 = add i32 %v1_31784, -12
  %v3_31784 = inttoptr i32 %v2_31784 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31784, align 4
  %v0_31789 = load i32, i32* @ebp, align 4
  %v1_31789 = add i32 %v0_31789, -28
  %v2_31789 = inttoptr i32 %v1_31789 to i32*
  %v3_31789 = load i32, i32* %v2_31789, align 4
  %v1_31794 = add i32 %v0_31789, -32
  %v2_31794 = inttoptr i32 %v1_31794 to i32*
  %v3_31794 = load i32, i32* %v2_31794, align 4
  %v3_3179e = call i32 @unknown_64152(i32 %v3_31789, i32 %v3_31794, i32 1)
  %v0_317a3 = load i32, i32* @ebp, align 4
  %v1_317a3 = add i32 %v0_317a3, -12
  %v2_317a3 = inttoptr i32 %v1_317a3 to i32*
  %v3_317a3 = load i32, i32* %v2_317a3, align 4
  %v3_317a6 = xor i32 %v3_317a3, ptrtoint ([3 x i8]* @3 to i32)
  %v4_317a6 = icmp eq i32 %v3_317a6, 0
  store i32 %v3_317a6, i32* @eax, align 8
  br i1 %v4_317a6, label %bb, label %dec_label_pc_317af

bb:                                               ; preds = %dec_label_pc_31772
  %v1_317ad = call i32 @function_317b4()
  br label %dec_label_pc_317af

dec_label_pc_317af:                               ; preds = %bb, %dec_label_pc_31772
  %v2_317ad = phi i32 [ %v1_317ad, %bb ], [ %v3_317a6, %dec_label_pc_31772 ]
  ret i32 %v2_317ad
}

define i32 @function_317b4() local_unnamed_addr {
dec_label_pc_317b4:
  %v0_317b5 = load i32, i32* @eax, align 8
  ret i32 %v0_317b5
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_317b6:
  ret i32 %arg1
}

define i32 @function_317c2() local_unnamed_addr {
dec_label_pc_317c2:
  %v1_317c8 = load i32, i32* @ebp, align 4
  %v2_317c8 = add i32 %v1_317c8, -12
  %v3_317c8 = inttoptr i32 %v2_317c8 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_317c8, align 4
  %v0_317cd = load i32, i32* @ebp, align 4
  %v1_317cd = add i32 %v0_317cd, -28
  %v2_317cd = inttoptr i32 %v1_317cd to i32*
  %v3_317cd = load i32, i32* %v2_317cd, align 4
  %v3_317e3 = call i32 @unknown_641de(i32 %v3_317cd, i32 1, i32 0)
  store i32 %v3_317e3, i32* @eax, align 8
  %v0_317e8 = load i32, i32* @ebp, align 4
  %v1_317e8 = add i32 %v0_317e8, -12
  %v2_317e8 = inttoptr i32 %v1_317e8 to i32*
  %v3_317e8 = load i32, i32* %v2_317e8, align 4
  %v4_317eb = icmp eq i32 %v3_317e8, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_317eb, label %bb, label %dec_label_pc_317f4

bb:                                               ; preds = %dec_label_pc_317c2
  %v1_317f2 = call i32 @function_317f9()
  br label %dec_label_pc_317f4

dec_label_pc_317f4:                               ; preds = %bb, %dec_label_pc_317c2
  %v2_317f2 = phi i32 [ %v1_317f2, %bb ], [ %v3_317e3, %dec_label_pc_317c2 ]
  ret i32 %v2_317f2
}

define i32 @function_317f9() local_unnamed_addr {
dec_label_pc_317f9:
  %v0_317fa = load i32, i32* @eax, align 8
  ret i32 %v0_317fa
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IvRKSsNS0_8functionIFvSD_EEEEENS1_5mutexEEEEEEEC1ERKSM_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_317fc:
  %v2_31826 = call i32 @unknown_50b24(i32 %arg1, i32 %arg2)
  %v1_31831 = add i32 %arg2, 12
  %v2_31831 = inttoptr i32 %v1_31831 to i32*
  %v3_31831 = load i32, i32* %v2_31831, align 4
  %v2_31834 = add i32 %arg1, 12
  %v3_31834 = inttoptr i32 %v2_31834 to i32*
  store i32 %v3_31831, i32* %v3_31834, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31843

bb:                                               ; preds = %dec_label_pc_317fc
  %v1_31841 = call i32 @function_31848()
  br label %dec_label_pc_31843

dec_label_pc_31843:                               ; preds = %bb, %dec_label_pc_317fc
  %v2_31841 = phi i32 [ %v1_31841, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_317fc ]
  ret i32 %v2_31841

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_31848() local_unnamed_addr {
dec_label_pc_31848:
  %v0_31849 = load i32, i32* @eax, align 8
  ret i32 %v0_31849
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IvRKSsNS2_8functionIFvSF_EEEEENS3_5mutexEEEEEEEE9constructEPSO_RKSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3184a:
  %v2_3187e = call i32 @function_321b0(i32 ptrtoint (i32* @global_var_10.1921 to i32), i32 %arg2)
  %v1_31885 = icmp eq i32 %v2_3187e, 0
  br i1 %v1_31885, label %bb, label %dec_label_pc_31889

bb:                                               ; preds = %dec_label_pc_3184a
  %v1_31887 = call i32 @function_318b2()
  br label %dec_label_pc_31889

dec_label_pc_31889:                               ; preds = %bb, %dec_label_pc_3184a
  %v2_31893 = call i32 @unknown_63046(i32 %v2_3187e, i32 %arg3)
  %v0_31898 = call i32 @function_318b2()
  ret i32 %v0_31898

; uselistorder directives
  uselistorder i32 ()* @function_318b2, { 1, 0 }
}

define i32 @function_318b2() local_unnamed_addr {
dec_label_pc_318b2:
  %v0_318b2 = load i32, i32* @ebp, align 4
  %v1_318b2 = add i32 %v0_318b2, -28
  %v2_318b2 = inttoptr i32 %v1_318b2 to i32*
  %v3_318b2 = load i32, i32* %v2_318b2, align 4
  %v3_318b5 = xor i32 %v3_318b2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_318b5 = icmp eq i32 %v3_318b5, 0
  store i32 %v3_318b5, i32* @eax, align 8
  br i1 %v4_318b5, label %bb, label %dec_label_pc_318be

bb:                                               ; preds = %dec_label_pc_318b2
  %v1_318bc = call i32 @function_318c3()
  br label %dec_label_pc_318be

dec_label_pc_318be:                               ; preds = %bb, %dec_label_pc_318b2
  %v2_318bc = phi i32 [ %v1_318bc, %bb ], [ %v3_318b5, %dec_label_pc_318b2 ]
  ret i32 %v2_318bc
}

define i32 @function_318c3() local_unnamed_addr {
dec_label_pc_318c3:
  %v0_318ca = load i32, i32* @eax, align 8
  ret i32 %v0_318ca
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E17convert_constructIKS2_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_318cc:
  %v1_318f9 = add i32 %arg1, 4
  %v1_318ff = call i32 @unknown_45088(i32 %v1_318f9)
  %v2_3190e = call i32 @unknown_64352(i32 %v1_318ff, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3191e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3191e:
  %v0_3191e = load i32, i32* @ebx, align 8
  %v1_3191e = udiv i32 %v0_3191e, 256
  %v2_3191e = trunc i32 %v1_3191e to i8
  %v5_3191e = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v6_3191e = or i8 %v2_3191e, %v5_3191e
  %v12_3191e = zext i8 %v6_3191e to i32
  %v14_3191e = mul nuw nsw i32 %v12_3191e, 256
  %v15_3191e = and i32 %v0_3191e, -65281
  %v16_3191e = or i32 %v14_3191e, %v15_3191e
  store i32 %v16_3191e, i32* @ebx, align 8
  %v2_31920 = load i32, i32* @eax, align 8
  %v4_31920 = mul i32 %v2_31920, 2
  %v21_31920 = inttoptr i32 %v2_31920 to i32*
  store i32 %v4_31920, i32* %v21_31920, align 4
  %v0_31922 = load i32, i32* @ebp, align 4
  %v1_31922 = add i32 %v0_31922, -12
  %v2_31922 = inttoptr i32 %v1_31922 to i32*
  %v3_31922 = load i32, i32* %v2_31922, align 4
  %v3_31925 = xor i32 %v3_31922, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31925 = icmp eq i32 %v3_31925, 0
  store i32 %v3_31925, i32* @eax, align 8
  br i1 %v4_31925, label %bb, label %dec_label_pc_3192e

bb:                                               ; preds = %dec_label_pc_3191e
  %v1_3192c = call i32 @function_31933()
  br label %dec_label_pc_3192e

dec_label_pc_3192e:                               ; preds = %bb, %dec_label_pc_3191e
  %v2_3192c = phi i32 [ %v1_3192c, %bb ], [ %v3_31925, %dec_label_pc_3191e ]
  ret i32 %v2_3192c

; uselistorder directives
  uselistorder i32 %v2_31920, { 1, 0 }
  uselistorder i32 %v0_3191e, { 1, 0 }
  uselistorder i32 -65281, { 2, 0, 3, 4, 1 }
}

define i32 @function_31933() local_unnamed_addr {
dec_label_pc_31933:
  %v0_31934 = load i32, i32* @eax, align 8
  ret i32 %v0_31934
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_E17convert_constructIKS5_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31936:
  ret i32 %arg2
}

define i32 @function_31948(i32 %arg1) local_unnamed_addr {
dec_label_pc_31948:
  %v0_31948 = load i32, i32* @ebp, align 4
  %v1_31948 = add i32 %v0_31948, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_31948 = inttoptr i32 %v1_31948 to i32*
  %v3_31948 = load i32, i32* %v2_31948, align 4
  %v2_3194b = add i32 %v0_31948, -36
  %v3_3194b = inttoptr i32 %v2_3194b to i32*
  store i32 %v3_31948, i32* %v3_3194b, align 4
  %v0_3194e = load i32, i32* @ebp, align 4
  %v1_3194e = add i32 %v0_3194e, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_3194e = inttoptr i32 %v1_3194e to i8*
  %v3_3194e = load i8, i8* %v2_3194e, align 1
  %v3_31952 = add i32 %v0_3194e, -37
  %v4_31952 = inttoptr i32 %v3_31952 to i8*
  store i8 %v3_3194e, i8* %v4_31952, align 1
  %v1_3195b = load i32, i32* @ebp, align 4
  %v2_3195b = add i32 %v1_3195b, -12
  %v3_3195b = inttoptr i32 %v2_3195b to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_3195b, align 4
  %v0_31960 = load i32, i32* @ebp, align 4
  %v1_31960 = add i32 %v0_31960, -28
  %v2_31960 = inttoptr i32 %v1_31960 to i32*
  %v3_31960 = load i32, i32* %v2_31960, align 4
  %v1_31963 = add i32 %v3_31960, 4
  ret i32 %v1_31963
}

define i32 @function_31968(i32 %arg1) local_unnamed_addr {
dec_label_pc_31968:
  %eax.global-to-local = alloca i32, align 4
  %v0_31968 = load i32, i32* @eax, align 8
  %v11_31968 = and i32 %v0_31968, -24
  store i32 %v11_31968, i32* %eax.global-to-local, align 8
  %v1_3196c = inttoptr i32 %v11_31968 to i32*
  %v2_3196c = load i32, i32* %v1_3196c, align 8
  %v4_3196c = add i32 %v2_3196c, %v11_31968
  store i32 %v4_3196c, i32* %v1_3196c, align 8
  %v0_3196e = load i32, i32* @ebp, align 4
  %v1_3196e = add i32 %v0_3196e, -32
  %v2_3196e = inttoptr i32 %v1_3196e to i32*
  %v3_3196e = load i32, i32* %v2_3196e, align 4
  %v0_31975 = load i32, i32* %eax.global-to-local, align 8
  %v2_31978 = call i32 @unknown_64417(i32 %v0_31975, i32 %v3_3196e)
  store i32 %v2_31978, i32* %eax.global-to-local, align 8
  %v0_31981 = load i32, i32* @ebp, align 4
  %v1_31981 = add i32 %v0_31981, -28
  %v2_31981 = inttoptr i32 %v1_31981 to i32*
  %v3_31981 = load i32, i32* %v2_31981, align 4
  store i32 %v3_31981, i32* %eax.global-to-local, align 8
  %v2_31987 = call i32 @unknown_45196(i32 %v3_31981, i32 %v2_31978)
  store i32 %v2_31987, i32* %eax.global-to-local, align 8
  %v0_3198c = load i32, i32* @ebp, align 4
  %v1_3198c = add i32 %v0_3198c, -12
  %v2_3198c = inttoptr i32 %v1_3198c to i32*
  %v3_3198c = load i32, i32* %v2_3198c, align 4
  %v3_3198f = xor i32 %v3_3198c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3198f = icmp eq i32 %v3_3198f, 0
  store i32 %v3_3198f, i32* @eax, align 8
  br i1 %v4_3198f, label %bb, label %dec_label_pc_31998

bb:                                               ; preds = %dec_label_pc_31968
  %v1_31996 = call i32 @function_3199d()
  store i32 %v1_31996, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_31998

dec_label_pc_31998:                               ; preds = %bb, %dec_label_pc_31968
  %v3_31996 = phi i32 [ %v1_31996, %bb ], [ %v3_3198f, %dec_label_pc_31968 ]
  ret i32 %v3_31996

; uselistorder directives
  uselistorder i32 %v11_31968, { 0, 2, 1 }
}

define i32 @function_3199d() local_unnamed_addr {
dec_label_pc_3199d:
  %v0_3199e = load i32, i32* @eax, align 8
  ret i32 %v0_3199e
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE11_M_get_nodeEv() local_unnamed_addr {
dec_label_pc_319a0:
  %eax.global-to-local = alloca i32, align 4
  %v17_319a3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_319a3
}

define i32 @function_319a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_319a6:
  %v0_319a6 = load i32, i32* @ebp, align 4
  %v1_319a6 = add i32 %v0_319a6, 8
  %v2_319a6 = inttoptr i32 %v1_319a6 to i32*
  %v3_319a6 = load i32, i32* %v2_319a6, align 4
  %v2_319a9 = add i32 %v0_319a6, -28
  %v3_319a9 = inttoptr i32 %v2_319a9 to i32*
  store i32 %v3_319a6, i32* %v3_319a9, align 4
  %v1_319b2 = load i32, i32* @ebp, align 4
  %v2_319b2 = add i32 %v1_319b2, -12
  %v3_319b2 = inttoptr i32 %v2_319b2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_319b2, align 4
  %v0_319b7 = load i32, i32* @ebp, align 4
  %v1_319b7 = add i32 %v0_319b7, -28
  %v2_319b7 = inttoptr i32 %v1_319b7 to i32*
  %v3_319b7 = load i32, i32* %v2_319b7, align 4
  %v3_319cd = call i32 @unknown_64502(i32 %v3_319b7, i32 1, i32 0)
  store i32 %v3_319cd, i32* @eax, align 8
  %v0_319d2 = load i32, i32* @ebp, align 4
  %v1_319d2 = add i32 %v0_319d2, -12
  %v2_319d2 = inttoptr i32 %v1_319d2 to i32*
  %v3_319d2 = load i32, i32* %v2_319d2, align 4
  %v4_319d5 = icmp eq i32 %v3_319d2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_319d5, label %bb, label %dec_label_pc_319de

bb:                                               ; preds = %dec_label_pc_319a6
  %v1_319dc = call i32 @function_319e3()
  br label %dec_label_pc_319de

dec_label_pc_319de:                               ; preds = %bb, %dec_label_pc_319a6
  %v2_319dc = phi i32 [ %v1_319dc, %bb ], [ %v3_319cd, %dec_label_pc_319a6 ]
  ret i32 %v2_319dc
}

define i32 @function_319e3() local_unnamed_addr {
dec_label_pc_319e3:
  %v0_319e4 = load i32, i32* @eax, align 8
  ret i32 %v0_319e4
}

define i32 @_ZNSt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEC1ERKSM_() local_unnamed_addr {
dec_label_pc_319e6:
  %eax.global-to-local = alloca i32, align 4
  %v17_319e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_319e9
}

define i32 @function_319ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_319ec:
  %v0_319ec = load i32, i32* @ebp, align 4
  %v1_319ec = add i32 %v0_319ec, 8
  %v2_319ec = inttoptr i32 %v1_319ec to i32*
  %v3_319ec = load i32, i32* %v2_319ec, align 4
  %v2_319ef = add i32 %v0_319ec, -28
  %v3_319ef = inttoptr i32 %v2_319ef to i32*
  store i32 %v3_319ec, i32* %v3_319ef, align 4
  %v0_319f2 = load i32, i32* @ebp, align 4
  %v1_319f2 = add i32 %v0_319f2, 12
  %v2_319f2 = inttoptr i32 %v1_319f2 to i32*
  %v3_319f2 = load i32, i32* %v2_319f2, align 4
  %v2_319f5 = add i32 %v0_319f2, -32
  %v3_319f5 = inttoptr i32 %v2_319f5 to i32*
  store i32 %v3_319f2, i32* %v3_319f5, align 4
  %v1_319fe = load i32, i32* @ebp, align 4
  %v2_319fe = add i32 %v1_319fe, -12
  %v3_319fe = inttoptr i32 %v2_319fe to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_319fe, align 4
  %v0_31a03 = load i32, i32* @ebp, align 4
  %v1_31a03 = add i32 %v0_31a03, -32
  %v2_31a03 = inttoptr i32 %v1_31a03 to i32*
  %v3_31a03 = load i32, i32* %v2_31a03, align 4
  %v1_31a06 = add i32 %v0_31a03, -28
  %v2_31a06 = inttoptr i32 %v1_31a06 to i32*
  %v3_31a06 = load i32, i32* %v2_31a06, align 4
  %v2_31a10 = call i32 @unknown_50d0e(i32 %v3_31a06, i32 %v3_31a03)
  %v0_31a15 = load i32, i32* @ebp, align 4
  %v1_31a15 = add i32 %v0_31a15, -28
  %v2_31a15 = inttoptr i32 %v1_31a15 to i32*
  %v3_31a15 = load i32, i32* %v2_31a15, align 4
  %v1_31a18 = add i32 %v0_31a15, -32
  %v2_31a18 = inttoptr i32 %v1_31a18 to i32*
  %v3_31a18 = load i32, i32* %v2_31a18, align 4
  %v1_31a1b = add i32 %v3_31a18, 12
  %v2_31a1b = inttoptr i32 %v1_31a1b to i32*
  %v3_31a1b = load i32, i32* %v2_31a1b, align 4
  %v2_31a1e = add i32 %v3_31a15, 12
  %v3_31a1e = inttoptr i32 %v2_31a1e to i32*
  store i32 %v3_31a1b, i32* %v3_31a1e, align 4
  %v0_31a21 = load i32, i32* @ebp, align 4
  %v1_31a21 = add i32 %v0_31a21, -12
  %v2_31a21 = inttoptr i32 %v1_31a21 to i32*
  %v3_31a21 = load i32, i32* %v2_31a21, align 4
  %v3_31a24 = xor i32 %v3_31a21, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31a24 = icmp eq i32 %v3_31a24, 0
  store i32 %v3_31a24, i32* @eax, align 8
  br i1 %v4_31a24, label %bb, label %dec_label_pc_31a2d

bb:                                               ; preds = %dec_label_pc_319ec
  %v1_31a2b = call i32 @function_31a32()
  br label %dec_label_pc_31a2d

dec_label_pc_31a2d:                               ; preds = %bb, %dec_label_pc_319ec
  %v3_31a2b = phi i32 [ %v1_31a2b, %bb ], [ %v3_31a24, %dec_label_pc_319ec ]
  ret i32 %v3_31a2b
}

define i32 @function_31a32() local_unnamed_addr {
dec_label_pc_31a32:
  %v0_31a33 = load i32, i32* @eax, align 8
  ret i32 %v0_31a33
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEE9constructEPSO_RKSO_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31a34:
  store i32 0, i32* @eax, align 8
  %v2_31a68 = call i32 @function_3239a(i32 ptrtoint (i32* @global_var_10.1921 to i32), i32 %arg2)
  %v1_31a6f = icmp eq i32 %v2_31a68, 0
  br i1 %v1_31a6f, label %bb, label %dec_label_pc_31a73

bb:                                               ; preds = %dec_label_pc_31a34
  %v1_31a71 = call i32 @function_31a9c()
  br label %dec_label_pc_31a73

dec_label_pc_31a73:                               ; preds = %bb, %dec_label_pc_31a34
  %v2_31a7d = call i32 @unknown_6341a(i32 %v2_31a68, i32 %arg3)
  %v0_31a82 = call i32 @function_31a9c()
  ret i32 %v0_31a82

; uselistorder directives
  uselistorder i32 ()* @function_31a9c, { 1, 0 }
}

define i32 @function_31a9c() local_unnamed_addr {
dec_label_pc_31a9c:
  %v0_31a9c = load i32, i32* @ebp, align 4
  %v1_31a9c = add i32 %v0_31a9c, -28
  %v2_31a9c = inttoptr i32 %v1_31a9c to i32*
  %v3_31a9c = load i32, i32* %v2_31a9c, align 4
  %v3_31a9f = xor i32 %v3_31a9c, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31a9f = icmp eq i32 %v3_31a9f, 0
  store i32 %v3_31a9f, i32* @eax, align 8
  br i1 %v4_31a9f, label %bb, label %dec_label_pc_31aa8

bb:                                               ; preds = %dec_label_pc_31a9c
  %v1_31aa6 = call i32 @function_31aad()
  br label %dec_label_pc_31aa8

dec_label_pc_31aa8:                               ; preds = %bb, %dec_label_pc_31a9c
  %v2_31aa6 = phi i32 [ %v1_31aa6, %bb ], [ %v3_31a9f, %dec_label_pc_31a9c ]
  ret i32 %v2_31aa6
}

define i32 @function_31aad() local_unnamed_addr {
dec_label_pc_31aad:
  %v0_31ab4 = load i32, i32* @eax, align 8
  ret i32 %v0_31ab4
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1ISsPKcNS0_8functionIFSsSD_EEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISM_EEERKSaIT_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ab6:
  ret i32 %arg1
}

define i32 @function_31ac3(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ac3:
  %v0_31ac3 = load i32, i32* @ebp, align 4
  %v1_31ac6 = add i32 %v0_31ac3, 2
  store i32 %v1_31ac6, i32* @ebp, align 4
  %v2_31ace = add i32 %v0_31ac3, -10
  %v3_31ace = inttoptr i32 %v2_31ace to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31ace, align 4
  %v0_31ad3 = load i32, i32* @ebp, align 4
  %v1_31ad3 = add i32 %v0_31ad3, -28
  %v2_31ad3 = inttoptr i32 %v1_31ad3 to i32*
  %v3_31ad3 = load i32, i32* %v2_31ad3, align 4
  %v1_31ad9 = call i32 @unknown_64676(i32 %v3_31ad3)
  %v0_31ade = load i32, i32* @ebp, align 4
  %v1_31ade = add i32 %v0_31ade, -12
  %v2_31ade = inttoptr i32 %v1_31ade to i32*
  %v3_31ade = load i32, i32* %v2_31ade, align 4
  %v3_31ae1 = xor i32 %v3_31ade, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31ae1 = icmp eq i32 %v3_31ae1, 0
  store i32 %v3_31ae1, i32* @eax, align 8
  br i1 %v4_31ae1, label %bb, label %dec_label_pc_31aea

bb:                                               ; preds = %dec_label_pc_31ac3
  %v1_31ae8 = call i32 @function_31aef()
  br label %dec_label_pc_31aea

dec_label_pc_31aea:                               ; preds = %bb, %dec_label_pc_31ac3
  %v3_31ae8 = phi i32 [ %v1_31ae8, %bb ], [ %v3_31ae1, %dec_label_pc_31ac3 ]
  ret i32 %v3_31ae8
}

define i32 @function_31aef() local_unnamed_addr {
dec_label_pc_31aef:
  %v0_31af0 = load i32, i32* @eax, align 8
  ret i32 %v0_31af0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_31af2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31b15

bb:                                               ; preds = %dec_label_pc_31af2
  %v2_31b13 = call i32 @function_31b1a(i32 %arg1)
  br label %dec_label_pc_31b15

dec_label_pc_31b15:                               ; preds = %bb, %dec_label_pc_31af2
  %v3_31b13 = phi i32 [ %v2_31b13, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31af2 ]
  ret i32 %v3_31b13

; uselistorder directives
  uselistorder i32 (i32)* @function_31b1a, { 1, 0 }
}

define i32 @function_31b1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b1a:
  %v0_31b1b = load i32, i32* @eax, align 8
  ret i32 %v0_31b1b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE10deallocateEPSQ_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31b1c:
  ret i32 %arg2
}

define i32 @function_31b5a() local_unnamed_addr {
dec_label_pc_31b5a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31b5a = load i32, i32* %ecx.global-to-local, align 4
  %v1_31b5a = add i32 %v0_31b5a, -1
  store i32 %v1_31b5a, i32* %ecx.global-to-local, align 4
  %v0_31b5c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31b5c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31b5e:
  ret i32 %arg2
}

define i32 @function_31b70(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b70:
  %v1_31b76 = load i32, i32* @ebp, align 4
  %v2_31b76 = add i32 %v1_31b76, -12
  %v3_31b76 = inttoptr i32 %v2_31b76 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31b76, align 4
  %v0_31b7b = load i32, i32* @ebp, align 4
  %v1_31b7b = add i32 %v0_31b7b, -12
  %v2_31b7b = inttoptr i32 %v1_31b7b to i32*
  %v3_31b7b = load i32, i32* %v2_31b7b, align 4
  %v3_31b7e = xor i32 %v3_31b7b, ptrtoint ([3 x i8]* @3 to i32)
  %v4_31b7e = icmp eq i32 %v3_31b7e, 0
  store i32 %v3_31b7e, i32* @eax, align 8
  br i1 %v4_31b7e, label %bb, label %dec_label_pc_31b87

bb:                                               ; preds = %dec_label_pc_31b70
  %v2_31b85 = call i32 @function_31b8c(i32 ptrtoint (i32* @2 to i32))
  br label %dec_label_pc_31b87

dec_label_pc_31b87:                               ; preds = %bb, %dec_label_pc_31b70
  %v3_31b85 = phi i32 [ %v2_31b85, %bb ], [ %v3_31b7e, %dec_label_pc_31b70 ]
  ret i32 %v3_31b85

; uselistorder directives
  uselistorder i32 (i32)* @function_31b8c, { 1, 0 }
}

define i32 @function_31b8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b8c:
  %v0_31b8d = load i32, i32* @eax, align 8
  ret i32 %v0_31b8d
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE14_M_create_nodeERKSJ_() local_unnamed_addr {
dec_label_pc_31b8e:
  %eax.global-to-local = alloca i32, align 4
  %v5_31b91 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_31b91
}

define i32 @function_31b92(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b92:
  %v0_31b95 = load i32, i32* @ebp, align 4
  %v1_31b95 = add i32 %v0_31b95, 8
  %v2_31b95 = inttoptr i32 %v1_31b95 to i32*
  %v3_31b95 = load i32, i32* %v2_31b95, align 4
  %v2_31b98 = add i32 %v0_31b95, -28
  %v3_31b98 = inttoptr i32 %v2_31b98 to i32*
  store i32 %v3_31b95, i32* %v3_31b98, align 4
  %v0_31b9b = load i32, i32* @ebp, align 4
  %v1_31b9b = add i32 %v0_31b9b, 12
  %v2_31b9b = inttoptr i32 %v1_31b9b to i32*
  %v3_31b9b = load i32, i32* %v2_31b9b, align 4
  %v2_31b9e = add i32 %v0_31b9b, -32
  %v3_31b9e = inttoptr i32 %v2_31b9e to i32*
  store i32 %v3_31b9b, i32* %v3_31b9e, align 4
  %v1_31ba7 = load i32, i32* @ebp, align 4
  %v2_31ba7 = add i32 %v1_31ba7, -12
  %v3_31ba7 = inttoptr i32 %v2_31ba7 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31ba7, align 4
  %v0_31bac = load i32, i32* @ebp, align 4
  %v1_31bac = add i32 %v0_31bac, -28
  %v2_31bac = inttoptr i32 %v1_31bac to i32*
  %v3_31bac = load i32, i32* %v2_31bac, align 4
  %v1_31bb2 = call i32 @unknown_64778(i32 %v3_31bac)
  %v1_31bb7 = load i32, i32* @ebp, align 4
  %v2_31bb7 = add i32 %v1_31bb7, -20
  %v3_31bb7 = inttoptr i32 %v2_31bb7 to i32*
  store i32 %v1_31bb2, i32* %v3_31bb7, align 4
  %v0_31bba = load i32, i32* @ebp, align 4
  %v1_31bba = add i32 %v0_31bba, -20
  %v2_31bba = inttoptr i32 %v1_31bba to i32*
  %v3_31bba = load i32, i32* %v2_31bba, align 4
  %v1_31bbd = add i32 %v3_31bba, 8
  %v1_31bc3 = call i32 @unknown_58919(i32 %v1_31bbd)
  store i32 %v1_31bc3, i32* @ebx, align 8
  %v0_31bca = load i32, i32* @ebp, align 4
  %v1_31bca = add i32 %v0_31bca, -28
  %v2_31bca = inttoptr i32 %v1_31bca to i32*
  %v3_31bca = load i32, i32* %v2_31bca, align 4
  %v1_31bcd = add i32 %v0_31bca, -13
  %v2_31bd7 = call i32 @unknown_58894(i32 %v1_31bcd, i32 %v3_31bca)
  %v0_31bdf = load i32, i32* @ebp, align 4
  %v1_31bdf = add i32 %v0_31bdf, -32
  %v2_31bdf = inttoptr i32 %v1_31bdf to i32*
  %v3_31bdf = load i32, i32* %v2_31bdf, align 4
  %v0_31be6 = load i32, i32* @ebx, align 8
  %v1_31bea = add i32 %v0_31bdf, -13
  %v3_31bf0 = call i32 @unknown_64810(i32 %v1_31bea, i32 %v0_31be6, i32 %v3_31bdf)
  %v0_31bf5 = load i32, i32* @ebp, align 4
  %v1_31bf5 = add i32 %v0_31bf5, -13
  %v1_31bfb = call i32 @unknown_588e4(i32 %v1_31bf5)
  %v0_31c00 = load i32, i32* @ebp, align 4
  %v1_31c00 = add i32 %v0_31c00, -20
  %v2_31c00 = inttoptr i32 %v1_31c00 to i32*
  %v3_31c00 = load i32, i32* %v2_31c00, align 4
  store i32 %v3_31c00, i32* @eax, align 8
  %v1_31c03 = add i32 %v0_31c00, -12
  %v2_31c03 = inttoptr i32 %v1_31c03 to i32*
  %v3_31c03 = load i32, i32* %v2_31c03, align 4
  %v4_31c06 = icmp eq i32 %v3_31c03, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_31c06, label %bb, label %dec_label_pc_31c0f

bb:                                               ; preds = %dec_label_pc_31b92
  %v1_31c0d = call i32 @function_31c55()
  store i32 %v1_31c0d, i32* @eax, align 8
  br label %dec_label_pc_31c0f

dec_label_pc_31c0f:                               ; preds = %bb, %dec_label_pc_31b92
  %v0_31c0f = call i32 @function_31c50()
  ret i32 %v0_31c0f
}

define i32 @function_31c12() local_unnamed_addr {
dec_label_pc_31c12:
  %eax.global-to-local = alloca i32, align 4
  %v0_31c12 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31c12
}

define i32 @function_31c40() local_unnamed_addr {
dec_label_pc_31c40:
  %eax.global-to-local = alloca i32, align 4
  %v0_31c40 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31c40
}

define i32 @function_31c50() local_unnamed_addr {
dec_label_pc_31c50:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31c55() local_unnamed_addr {
dec_label_pc_31c55:
  %v0_31c55 = load i32, i32* @ebp, align 4
  %v1_31c55 = add i32 %v0_31c55, -4
  %v2_31c55 = inttoptr i32 %v1_31c55 to i32*
  %v3_31c55 = load i32, i32* %v2_31c55, align 4
  store i32 %v3_31c55, i32* @ebx, align 8
  %v0_31c59 = load i32, i32* @eax, align 8
  ret i32 %v0_31c59
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEEC1ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31c5a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31c83

bb:                                               ; preds = %dec_label_pc_31c5a
  %v3_31c81 = call i32 @function_31c88(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_31c83

dec_label_pc_31c83:                               ; preds = %bb, %dec_label_pc_31c5a
  %v4_31c81 = phi i32 [ %v3_31c81, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31c5a ]
  ret i32 %v4_31c81
}

define i32 @function_31c88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31c88:
  %v0_31c89 = load i32, i32* @eax, align 8
  ret i32 %v0_31c89
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8allocateEj() local_unnamed_addr {
dec_label_pc_31c8a:
  %eax.global-to-local = alloca i32, align 4
  %v2_31c8b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_31c8b
}

define i32 @function_31c8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c8f:
  %v0_31c97 = load i32, i32* @ebp, align 4
  %v1_31c9a = add i32 %v0_31c97, 2
  store i32 %v1_31c9a, i32* @ebp, align 4
  %v2_31ca2 = add i32 %v0_31c97, -10
  %v3_31ca2 = inttoptr i32 %v2_31ca2 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_31ca2, align 4
  %v0_31ca7 = load i32, i32* @ebp, align 4
  %v1_31ca7 = add i32 %v0_31ca7, -32
  %v2_31ca7 = inttoptr i32 %v1_31ca7 to i32*
  %v3_31ca7 = load i32, i32* %v2_31ca7, align 4
  %tmp5 = icmp ult i32 %v3_31ca7, 11
  %v1_31cd1 = add i32 %v0_31ca7, -28
  %v2_31cd1 = inttoptr i32 %v1_31cd1 to i32*
  %v3_31cd1 = load i32, i32* %v2_31cd1, align 4
  br i1 %tmp5, label %dec_label_pc_31cd1, label %dec_label_pc_31cad

dec_label_pc_31cad:                               ; preds = %dec_label_pc_31c8f
  %v1_31cb3 = call i32 @unknown_4fa7c(i32 %v3_31cd1)
  %v0_31cc0 = load i32, i32* @ebp, align 4
  %v1_31cc0 = add i32 %v0_31cc0, -32
  %v2_31cc0 = inttoptr i32 %v1_31cc0 to i32*
  %v3_31cc0 = load i32, i32* %v2_31cc0, align 4
  %v3_31cca = call i32 @unknown_47cdc(i32 %v1_31cb3, i32 %v3_31cc0, i32 0)
  br label %dec_label_pc_31cdc

dec_label_pc_31cd1:                               ; preds = %dec_label_pc_31c8f
  %v1_31cd7 = call i32 @unknown_4c322(i32 %v3_31cd1)
  br label %dec_label_pc_31cdc

dec_label_pc_31cdc:                               ; preds = %dec_label_pc_31cd1, %dec_label_pc_31cad
  %storemerge = phi i32 [ %v1_31cd7, %dec_label_pc_31cd1 ], [ %v3_31cca, %dec_label_pc_31cad ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_31cdc = load i32, i32* @ebp, align 4
  %v1_31cdc = add i32 %v0_31cdc, -12
  %v2_31cdc = inttoptr i32 %v1_31cdc to i32*
  %v3_31cdc = load i32, i32* %v2_31cdc, align 4
  %v4_31cdf = icmp eq i32 %v3_31cdc, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_31cdf, label %bb, label %dec_label_pc_31ce8

bb:                                               ; preds = %dec_label_pc_31cdc
  %v1_31ce6 = call i32 @function_31ced()
  br label %dec_label_pc_31ce8

dec_label_pc_31ce8:                               ; preds = %bb, %dec_label_pc_31cdc
  %v2_31ce6 = phi i32 [ %v1_31ce6, %bb ], [ %storemerge, %dec_label_pc_31cdc ]
  ret i32 %v2_31ce6

; uselistorder directives
  uselistorder i32 %v3_31cd1, { 1, 0 }
  uselistorder i32 11, { 0, 1, 4, 5, 6, 2, 3 }
}

define i32 @function_31ced() local_unnamed_addr {
dec_label_pc_31ced:
  %v0_31cee = load i32, i32* @eax, align 8
  ret i32 %v0_31cee
}

define i32 @_ZN5boost11multi_index6detail14make_obj_guardINS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jEENS1_21obj_scope_guard_impl2IT_T0_T1_T2_EERSN_SO_SP_SQ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31cef:
  ret i32 %arg2
}

define i32 @function_31d65() local_unnamed_addr {
dec_label_pc_31d65:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31d65 = load i32, i32* %ecx.global-to-local, align 4
  %v1_31d65 = add i32 %v0_31d65, -1
  store i32 %v1_31d65, i32* %ecx.global-to-local, align 4
  %v0_31d67 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31d67
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_31d6a:
  %v1_31d88 = call i32 @unknown_64ac5(i32 %arg1)
  %v1_31d93 = call i32 @unknown_40dd6(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31da4

bb:                                               ; preds = %dec_label_pc_31d6a
  %v1_31da2 = call i32 @function_31dc2()
  store i32 %v1_31da2, i32* @eax, align 8
  br label %dec_label_pc_31da4

dec_label_pc_31da4:                               ; preds = %bb, %dec_label_pc_31d6a
  %v0_31da4 = call i32 @function_31dbd()
  ret i32 %v0_31da4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_31da7() local_unnamed_addr {
dec_label_pc_31da7:
  %eax.global-to-local = alloca i32, align 4
  %v0_31da7 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31da7
}

define i32 @function_31dbd() local_unnamed_addr {
dec_label_pc_31dbd:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_31dc2() local_unnamed_addr {
dec_label_pc_31dc2:
  %v0_31dc7 = load i32, i32* @eax, align 8
  ret i32 %v0_31dc7
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31dc8:
  %v1_31de2 = add i32 %arg1, 124
  %v2_31de2 = inttoptr i32 %v1_31de2 to i32*
  %v3_31de2 = load i32, i32* %v2_31de2, align 4
  store i32 %v3_31de2, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31df1

bb:                                               ; preds = %dec_label_pc_31dc8
  %v2_31def = call i32 @function_31df6(i32 %arg1)
  br label %dec_label_pc_31df1

dec_label_pc_31df1:                               ; preds = %bb, %dec_label_pc_31dc8
  %v3_31def = phi i32 [ %v2_31def, %bb ], [ %v3_31de2, %dec_label_pc_31dc8 ]
  ret i32 %v3_31def
}

define i32 @function_31df6(i32 %arg1) local_unnamed_addr {
dec_label_pc_31df6:
  %v0_31df7 = load i32, i32* @eax, align 8
  ret i32 %v0_31df7
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31df8:
  %v1_31e12 = add i32 %arg1, 124
  %v2_31e12 = inttoptr i32 %v1_31e12 to i32*
  %v3_31e12 = load i32, i32* %v2_31e12, align 4
  %v1_31e18 = add i32 %arg1, ptrtoint (i32* @global_var_80.1967 to i32)
  %v2_31e18 = inttoptr i32 %v1_31e18 to i32*
  %v3_31e18 = load i32, i32* %v2_31e18, align 4
  %v2_31e24 = mul i32 %v3_31e18, 12
  %v2_31e27 = add i32 %v2_31e24, %v3_31e12
  store i32 %v2_31e27, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31e35

bb:                                               ; preds = %dec_label_pc_31df8
  %v2_31e33 = call i32 @function_31e3a(i32 %arg1)
  br label %dec_label_pc_31e35

dec_label_pc_31e35:                               ; preds = %bb, %dec_label_pc_31df8
  %v3_31e33 = phi i32 [ %v2_31e33, %bb ], [ %v2_31e27, %dec_label_pc_31df8 ]
  ret i32 %v3_31e33

; uselistorder directives
  uselistorder i32 124, { 0, 1, 5, 6, 2, 3, 7, 8, 4, 9 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_31e3a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e3a:
  %v0_31e3b = load i32, i32* @eax, align 8
  ret i32 %v0_31e3b
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9copy_implIPSA_EEvT_SI_SH_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31e3c:
  %edx.global-to-local = alloca i32, align 4
  %v0_31e5f = load i32, i32* %edx.global-to-local, align 8
  %sext = mul i32 %v0_31e5f, 16777216
  %v7_31e77 = sdiv i32 %sext, 16777216
  %v8_31e77 = call i32 @unknown_64bd9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_31e77, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31e88

bb:                                               ; preds = %dec_label_pc_31e3c
  %v1_31e86 = call i32 @function_31e8d()
  br label %dec_label_pc_31e88

dec_label_pc_31e88:                               ; preds = %bb, %dec_label_pc_31e3c
  %v2_31e86 = phi i32 [ %v1_31e86, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31e3c ]
  ret i32 %v2_31e86

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_31e8d() local_unnamed_addr {
dec_label_pc_31e8d:
  %v0_31e8e = load i32, i32* @eax, align 8
  ret i32 %v0_31e8e
}

define i32 @_ZNK5boost9function1ISsPKcE10get_vtableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_31e90:
  %v2_31eaa = load i32, i32* %arg1, align 4
  %v1_31eac = and i32 %v2_31eaa, -2
  ret i32 %v1_31eac
}

define i32 @function_31eb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31eb4:
  %v0_31eb4 = load i32, i32* @eax, align 8
  %v1_31eb4 = load i1, i1* @cf, align 1
  %v2_31eb4 = zext i1 %v1_31eb4 to i32
  %v3_31eb4 = add i32 %v0_31eb4, ptrtoint (i8** @global_var_14.1904 to i32)
  %v4_31eb4 = add i32 %v3_31eb4, %v2_31eb4
  %v14_31eb4 = icmp eq i32 %v4_31eb4, 0
  store i32 %v4_31eb4, i32* @eax, align 8
  br i1 %v14_31eb4, label %bb, label %dec_label_pc_31ebb

bb:                                               ; preds = %dec_label_pc_31eb4
  %v1_31eb9 = call i32 @function_31ec0()
  br label %dec_label_pc_31ebb

dec_label_pc_31ebb:                               ; preds = %bb, %dec_label_pc_31eb4
  %v2_31eb9 = phi i32 [ %v1_31eb9, %bb ], [ %v4_31eb4, %dec_label_pc_31eb4 ]
  ret i32 %v2_31eb9
}

define i32 @function_31ec0() local_unnamed_addr {
dec_label_pc_31ec0:
  %v0_31ec1 = load i32, i32* @eax, align 8
  ret i32 %v0_31ec1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ec2:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31ee5

bb:                                               ; preds = %dec_label_pc_31ec2
  %v2_31ee3 = call i32 @function_31eea(i32 %arg1)
  br label %dec_label_pc_31ee5

dec_label_pc_31ee5:                               ; preds = %bb, %dec_label_pc_31ec2
  %v3_31ee3 = phi i32 [ %v2_31ee3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31ec2 ]
  ret i32 %v3_31ee3
}

define i32 @function_31eea(i32 %arg1) local_unnamed_addr {
dec_label_pc_31eea:
  %v0_31eeb = load i32, i32* @eax, align 8
  ret i32 %v0_31eeb
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31eec:
  %v2_31f16 = call i32 @unknown_64ce6(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31f27

bb:                                               ; preds = %dec_label_pc_31eec
  %v1_31f25 = call i32 @function_31f2c()
  br label %dec_label_pc_31f27

dec_label_pc_31f27:                               ; preds = %bb, %dec_label_pc_31eec
  %v2_31f25 = phi i32 [ %v1_31f25, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31eec ]
  ret i32 %v2_31f25
}

define i32 @function_31f2c() local_unnamed_addr {
dec_label_pc_31f2c:
  %v0_31f2d = load i32, i32* @eax, align 8
  ret i32 %v0_31f2d
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EE9_M_insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31f2e:
  %v2_31f5e = call i32 @unknown_552e2(i32 %arg1, i32 %arg3)
  ret i32 %v2_31f5e
}

define i32 @function_31f88() local_unnamed_addr {
dec_label_pc_31f88:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31f88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_31f88 = add i32 %v0_31f88, -1
  store i32 %v1_31f88, i32* %ecx.global-to-local, align 4
  %v0_31f8a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_31f8a
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31f8c:
  %v2_31fb6 = call i32 @unknown_64db6(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_31fc7

bb:                                               ; preds = %dec_label_pc_31f8c
  %v1_31fc5 = call i32 @function_31fcc()
  br label %dec_label_pc_31fc7

dec_label_pc_31fc7:                               ; preds = %bb, %dec_label_pc_31f8c
  %v2_31fc5 = phi i32 [ %v1_31fc5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31f8c ]
  ret i32 %v2_31fc5
}

define i32 @function_31fcc() local_unnamed_addr {
dec_label_pc_31fcc:
  %v0_31fcd = load i32, i32* @eax, align 8
  ret i32 %v0_31fcd
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31fce:
  %v1_31fe8 = add i32 %arg1, 4
  %v2_31fe8 = inttoptr i32 %v1_31fe8 to i32*
  store i32 0, i32* %v2_31fe8, align 4
  %v1_31ff2 = add i32 %arg1, 8
  %v2_31ff2 = inttoptr i32 %v1_31ff2 to i32*
  store i32 0, i32* %v2_31ff2, align 4
  %v2_32002 = add i32 %arg1, 12
  %v3_32002 = inttoptr i32 %v2_32002 to i32*
  store i32 %v1_31fe8, i32* %v3_32002, align 4
  %v2_3200e = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_3200e = inttoptr i32 %v2_3200e to i32*
  store i32 %v1_31fe8, i32* %v3_3200e, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3201d

bb:                                               ; preds = %dec_label_pc_31fce
  %v2_3201b = call i32 @function_32022(i32 %arg1)
  br label %dec_label_pc_3201d

dec_label_pc_3201d:                               ; preds = %bb, %dec_label_pc_31fce
  %v3_3201b = phi i32 [ %v2_3201b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_31fce ]
  ret i32 %v3_3201b
}

define i32 @function_32022(i32 %arg1) local_unnamed_addr {
dec_label_pc_32022:
  %v0_32023 = load i32, i32* @eax, align 8
  ret i32 %v0_32023
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISN_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_32024:
  %tmp101 = ptrtoint i32* %arg2 to i32
  %v1_32044 = add i32 %tmp101, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_32051 = call i32 @unknown_5ef10(i32 %arg1, i32 %v1_32044)
  %v2_3205c = load i32, i32* %arg2, align 4
  %v2_32061 = inttoptr i32 %v2_32051 to i32*
  store i32 %v2_3205c, i32* %v2_32061, align 4
  %v1_32066 = add i32 %v2_32051, 8
  %v2_32066 = inttoptr i32 %v1_32066 to i32*
  store i32 0, i32* %v2_32066, align 4
  %v1_32070 = add i32 %v2_32051, 12
  %v2_32070 = inttoptr i32 %v1_32070 to i32*
  store i32 0, i32* %v2_32070, align 4
  ret i32 %v2_32051

; uselistorder directives
  uselistorder i32 %v2_32051, { 2, 1, 0, 3 }
}

define i32 @function_32082(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32082:
  %zf.global-to-local = alloca i1, align 1
  %v2_32082 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32082 = load i32, i32* @eax, align 8
  %v4_32082 = trunc i32 %v3_32082 to i8
  %v5_32082 = add i8 %v4_32082, %v2_32082
  %v15_32082 = icmp eq i8 %v5_32082, 0
  store i1 %v15_32082, i1* %zf.global-to-local, align 1
  %v21_32082 = inttoptr i32 %v3_32082 to i8*
  store i8 %v5_32082, i8* %v21_32082, align 1
  %v0_32084 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_32084, label %bb, label %dec_label_pc_32082.dec_label_pc_32086_crit_edge

dec_label_pc_32082.dec_label_pc_32086_crit_edge:  ; preds = %dec_label_pc_32082
  %v2_32084.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_32086

bb:                                               ; preds = %dec_label_pc_32082
  %v1_32084 = call i32 @function_3208b()
  br label %dec_label_pc_32086

dec_label_pc_32086:                               ; preds = %dec_label_pc_32082.dec_label_pc_32086_crit_edge, %bb
  %v2_32084 = phi i32 [ %v2_32084.pre, %dec_label_pc_32082.dec_label_pc_32086_crit_edge ], [ %v1_32084, %bb ]
  ret i32 %v2_32084

; uselistorder directives
  uselistorder label %dec_label_pc_32086, { 1, 0 }
}

define i32 @function_3208b() local_unnamed_addr {
dec_label_pc_3208b:
  %v0_3208c = load i32, i32* @eax, align 8
  ret i32 %v0_3208c
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_3208d:
  %v1_320a7 = add i32 %arg1, 12
  %v2_320a7 = inttoptr i32 %v1_320a7 to i32*
  %v3_320a7 = load i32, i32* %v2_320a7, align 4
  store i32 %v3_320a7, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_320b6

bb:                                               ; preds = %dec_label_pc_3208d
  %v2_320b4 = call i32 @function_320bb(i32 %arg1)
  br label %dec_label_pc_320b6

dec_label_pc_320b6:                               ; preds = %bb, %dec_label_pc_3208d
  %v3_320b4 = phi i32 [ %v2_320b4, %bb ], [ %v3_320a7, %dec_label_pc_3208d ]
  ret i32 %v3_320b4
}

define i32 @function_320bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_320bb:
  %v0_320bc = load i32, i32* @eax, align 8
  ret i32 %v0_320bc
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_320bd:
  ret i32 %arg1
}

define i32 @function_320ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_320ce:
  %v0_320ce = load i32, i32* @ecx, align 4
  %v1_320ce = add i32 %v0_320ce, -1070468027
  %v2_320ce = inttoptr i32 %v1_320ce to i8*
  %v3_320ce = load i8, i8* %v2_320ce, align 1
  %v5_320ce = trunc i32 %v0_320ce to i8
  %v6_320ce = add i8 %v3_320ce, %v5_320ce
  store i8 %v6_320ce, i8* %v2_320ce, align 1
  %v0_320d4 = load i32, i32* @ebp, align 4
  %v1_320d4 = add i32 %v0_320d4, -28
  %v2_320d4 = inttoptr i32 %v1_320d4 to i32*
  %v3_320d4 = load i32, i32* %v2_320d4, align 4
  %v1_320d7 = add i32 %v3_320d4, 8
  %v2_320d7 = inttoptr i32 %v1_320d7 to i32*
  %v3_320d7 = load i32, i32* %v2_320d7, align 4
  store i32 %v3_320d7, i32* @eax, align 8
  %v1_320da = add i32 %v0_320d4, -12
  %v2_320da = inttoptr i32 %v1_320da to i32*
  %v3_320da = load i32, i32* %v2_320da, align 4
  %v4_320dd = icmp eq i32 %v3_320da, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_320dd, label %bb, label %dec_label_pc_320e6

bb:                                               ; preds = %dec_label_pc_320ce
  %v1_320e4 = call i32 @function_320eb()
  br label %dec_label_pc_320e6

dec_label_pc_320e6:                               ; preds = %bb, %dec_label_pc_320ce
  %v2_320e4 = phi i32 [ %v1_320e4, %bb ], [ %v3_320d7, %dec_label_pc_320ce ]
  ret i32 %v2_320e4

; uselistorder directives
  uselistorder i32 -1070468027, { 0, 2, 1, 3, 4, 5, 6, 7 }
}

define i32 @function_320eb() local_unnamed_addr {
dec_label_pc_320eb:
  %v0_320ec = load i32, i32* @eax, align 8
  ret i32 %v0_320ec
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_320ee:
  %v1_32108 = add i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_32108 = inttoptr i32 %v1_32108 to i32*
  %v3_32108 = load i32, i32* %v2_32108, align 4
  store i32 %v3_32108, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32117

bb:                                               ; preds = %dec_label_pc_320ee
  %v2_32115 = call i32 @function_3211c(i32 %arg1)
  br label %dec_label_pc_32117

dec_label_pc_32117:                               ; preds = %bb, %dec_label_pc_320ee
  %v3_32115 = phi i32 [ %v2_32115, %bb ], [ %v3_32108, %dec_label_pc_320ee ]
  ret i32 %v3_32115
}

define i32 @function_3211c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3211c:
  %v0_3211d = load i32, i32* @eax, align 8
  ret i32 %v0_3211d
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3211e:
  %v2_32138 = load i32, i32* %arg1, align 4
  ret i32 %v2_32138
}

define i32 @function_3215a() local_unnamed_addr {
dec_label_pc_3215a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3215a = load i32, i32* %ecx.global-to-local, align 4
  %v1_3215a = add i32 %v0_3215a, -1
  store i32 %v1_3215a, i32* %ecx.global-to-local, align 4
  %v0_3215c = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3215c
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_3215e:
  %v2_3217e = load i32, i32* %arg2, align 4
  %v2_3218a = call i32 @unknown_55306(i32 %arg1, i32 %v2_3217e)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3219e

bb:                                               ; preds = %dec_label_pc_3215e
  %v1_3219c = call i32 @function_321a3()
  br label %dec_label_pc_3219e

dec_label_pc_3219e:                               ; preds = %bb, %dec_label_pc_3215e
  %v2_3219c = phi i32 [ %v1_3219c, %bb ], [ %arg1, %dec_label_pc_3215e ]
  ret i32 %v2_3219c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_321a3() local_unnamed_addr {
dec_label_pc_321a3:
  %v0_321a4 = load i32, i32* @eax, align 8
  ret i32 %v0_321a4
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot3IbRKSsSD_jNS0_8functionIFbSD_SD_jEEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISM_EEERKSaIT_E() local_unnamed_addr {
dec_label_pc_321a8:
  %eax.global-to-local = alloca i32, align 4
  %v17_321ab = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_321ab
}

define i32 @function_321b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_321b0:
  %v0_321b0 = load i32, i32* @ecx, align 4
  %v1_321b0 = add i32 %v0_321b0, 1166795845
  %v2_321b0 = inttoptr i32 %v1_321b0 to i8*
  %v3_321b0 = load i8, i8* %v2_321b0, align 1
  %v5_321b0 = trunc i32 %v0_321b0 to i8
  %v6_321b0 = or i8 %v3_321b0, %v5_321b0
  store i8 %v6_321b0, i8* %v2_321b0, align 1
  %v0_321b8 = load i32, i32* @ebp, align 4
  %v1_321b8 = add i32 %v0_321b8, 1
  store i32 %v1_321b8, i32* @ebp, align 4
  %v2_321c0 = add i32 %v0_321b8, -11
  %v3_321c0 = inttoptr i32 %v2_321c0 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_321c0, align 4
  %v0_321c5 = load i32, i32* @ebp, align 4
  %v1_321c5 = add i32 %v0_321c5, -28
  %v2_321c5 = inttoptr i32 %v1_321c5 to i32*
  %v3_321c5 = load i32, i32* %v2_321c5, align 4
  %v1_321cb = call i32 @unknown_65002(i32 %v3_321c5)
  %v0_321d0 = load i32, i32* @ebp, align 4
  %v1_321d0 = add i32 %v0_321d0, -12
  %v2_321d0 = inttoptr i32 %v1_321d0 to i32*
  %v3_321d0 = load i32, i32* %v2_321d0, align 4
  %v3_321d3 = xor i32 %v3_321d0, ptrtoint ([3 x i8]* @3 to i32)
  %v4_321d3 = icmp eq i32 %v3_321d3, 0
  store i32 %v3_321d3, i32* @eax, align 8
  br i1 %v4_321d3, label %bb, label %dec_label_pc_321dc

bb:                                               ; preds = %dec_label_pc_321b0
  %v1_321da = call i32 @function_321e1()
  br label %dec_label_pc_321dc

dec_label_pc_321dc:                               ; preds = %bb, %dec_label_pc_321b0
  %v3_321da = phi i32 [ %v1_321da, %bb ], [ %v3_321d3, %dec_label_pc_321b0 ]
  ret i32 %v3_321da

; uselistorder directives
  uselistorder i32 -11, { 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 1, 14, 15, 2, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 1166795845, { 0, 2, 1, 4, 5, 6, 8, 9, 3, 7, 10, 13, 11, 12 }
}

define i32 @function_321e1() local_unnamed_addr {
dec_label_pc_321e1:
  %v0_321e2 = load i32, i32* @eax, align 8
  ret i32 %v0_321e2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_321e4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32207

bb:                                               ; preds = %dec_label_pc_321e4
  %v2_32205 = call i32 @function_3220c(i32 %arg1)
  br label %dec_label_pc_32207

dec_label_pc_32207:                               ; preds = %bb, %dec_label_pc_321e4
  %v3_32205 = phi i32 [ %v2_32205, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_321e4 ]
  ret i32 %v3_32205
}

define i32 @function_3220c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3220c:
  %v0_3220d = load i32, i32* @eax, align 8
  ret i32 %v0_3220d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE10deallocateEPSQ_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3220e:
  ret i32 %arg2
}

define i32 @function_32244(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32244:
  %zf.global-to-local = alloca i1, align 1
  %v2_32244 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32244 = load i32, i32* @eax, align 8
  %v4_32244 = trunc i32 %v3_32244 to i8
  %v5_32244 = add i8 %v4_32244, %v2_32244
  %v15_32244 = icmp eq i8 %v5_32244, 0
  store i1 %v15_32244, i1* %zf.global-to-local, align 1
  %v21_32244 = inttoptr i32 %v3_32244 to i8*
  store i8 %v5_32244, i8* %v21_32244, align 1
  %v0_32246 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_32246, label %bb, label %dec_label_pc_32244.dec_label_pc_32248_crit_edge

dec_label_pc_32244.dec_label_pc_32248_crit_edge:  ; preds = %dec_label_pc_32244
  %v2_32246.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_32248

bb:                                               ; preds = %dec_label_pc_32244
  %v1_32246 = call i32 @function_3224d()
  br label %dec_label_pc_32248

dec_label_pc_32248:                               ; preds = %dec_label_pc_32244.dec_label_pc_32248_crit_edge, %bb
  %v2_32246 = phi i32 [ %v2_32246.pre, %dec_label_pc_32244.dec_label_pc_32248_crit_edge ], [ %v1_32246, %bb ]
  ret i32 %v2_32246

; uselistorder directives
  uselistorder label %dec_label_pc_32248, { 1, 0 }
}

define i32 @function_3224d() local_unnamed_addr {
dec_label_pc_3224d:
  %v0_3224e = load i32, i32* @eax, align 8
  ret i32 %v0_3224e
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32250:
  %v1_32279 = call i32 @unknown_650d4(i32 %arg1)
  %v10_3227e = icmp ult i32 %v1_32279, %arg2
  %v1_32281 = zext i1 %v10_3227e to i32
  %v3_32281 = and i32 %v1_32279, -256
  %v4_32281 = or i32 %v1_32281, %v3_32281
  %v5_32284 = icmp eq i1 %v10_3227e, false
  br i1 %v5_32284, label %bb, label %dec_label_pc_32288

bb:                                               ; preds = %dec_label_pc_32250
  %v1_32286 = call i32 @function_3228d()
  br label %dec_label_pc_32288

dec_label_pc_32288:                               ; preds = %bb, %dec_label_pc_32250
  %v2_32286 = phi i32 [ %v1_32286, %bb ], [ %v4_32281, %dec_label_pc_32250 ]
  ret i32 %v2_32286

; uselistorder directives
  uselistorder i1 %v10_3227e, { 1, 0 }
}

define i32 @function_3228d() local_unnamed_addr {
dec_label_pc_3228d:
  %v0_3228d = load i32, i32* @ebp, align 4
  %v1_3228d = add i32 %v0_3228d, -32
  %v2_3228d = inttoptr i32 %v1_3228d to i32*
  %v3_3228d = load i32, i32* %v2_3228d, align 4
  %v2_32290 = mul i32 %v3_3228d, 32
  ret i32 %v2_32290
}

define i32 @function_32294(i32 %arg1) local_unnamed_addr {
dec_label_pc_32294:
  %v0_32294 = load i32, i32* @eax, align 8
  %v2_32294 = add i32 %v0_32294, 36
  %v16_32294 = and i32 %v2_32294, 255
  %v18_32294 = and i32 %v0_32294, -256
  %v19_32294 = or i32 %v16_32294, %v18_32294
  ret i32 %v19_32294

; uselistorder directives
  uselistorder i32 %v0_32294, { 1, 0 }
}

define i32 @function_322ab() local_unnamed_addr {
dec_label_pc_322ab:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_322ab = load i32, i32* %ecx.global-to-local, align 4
  %v1_322ab = add i32 %v0_322ab, -1
  store i32 %v1_322ab, i32* %ecx.global-to-local, align 4
  %v0_322ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_322ad
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_322ae:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_322c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_322c9:
  %v0_322c9 = load i32, i32* @eax, align 8
  %v3_322c9 = xor i32 %v0_322c9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_322c9 = icmp eq i32 %v3_322c9, 0
  store i32 %v3_322c9, i32* @eax, align 8
  br i1 %v4_322c9, label %bb, label %dec_label_pc_322d1

bb:                                               ; preds = %dec_label_pc_322c9
  %v1_322cf = call i32 @function_322d6()
  br label %dec_label_pc_322d1

dec_label_pc_322d1:                               ; preds = %bb, %dec_label_pc_322c9
  %v2_322cf = phi i32 [ %v1_322cf, %bb ], [ %v3_322c9, %dec_label_pc_322c9 ]
  ret i32 %v2_322cf
}

define i32 @function_322d6() local_unnamed_addr {
dec_label_pc_322d6:
  %v0_322d7 = load i32, i32* @eax, align 8
  ret i32 %v0_322d7
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEEEEC1ERKSJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_322d8:
  %v2_32302 = call i32 @unknown_6518c(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32313

bb:                                               ; preds = %dec_label_pc_322d8
  %v1_32311 = call i32 @function_32318()
  br label %dec_label_pc_32313

dec_label_pc_32313:                               ; preds = %bb, %dec_label_pc_322d8
  %v2_32311 = phi i32 [ %v1_32311, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_322d8 ]
  ret i32 %v2_32311
}

define i32 @function_32318() local_unnamed_addr {
dec_label_pc_32318:
  %v0_32319 = load i32, i32* @eax, align 8
  ret i32 %v0_32319
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EE9_M_insertESt14_List_iteratorISH_ERKSH_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3231a:
  %v2_3234a = call i32 @unknown_56906(i32 %arg1, i32 %arg3)
  ret i32 %v2_3234a
}

define i32 @function_32374() local_unnamed_addr {
dec_label_pc_32374:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32374 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32374 = add i32 %v0_32374, -1
  store i32 %v1_32374, i32* %ecx.global-to-local, align 4
  %v0_32376 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32376
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32378:
  ret i32 %arg2
}

define i32 @function_3239a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3239a:
  %v0_3239a = load i32, i32* @eax, align 8
  %v11_3239a = and i32 %v0_3239a, -252
  ret i32 %v11_3239a
}

define i32 @function_3239c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3239c:
  %v0_3239c = load i32, i32* @ebp, align 4
  %v1_3239c = add i32 %v0_3239c, -28
  %v2_3239c = inttoptr i32 %v1_3239c to i32*
  %v3_3239c = load i32, i32* %v2_3239c, align 4
  %v1_323a2 = call i32 @unknown_6525c(i32 %v3_3239c)
  %v0_323a7 = load i32, i32* @ebp, align 4
  %v1_323a7 = add i32 %v0_323a7, -12
  %v2_323a7 = inttoptr i32 %v1_323a7 to i32*
  %v3_323a7 = load i32, i32* %v2_323a7, align 4
  %v3_323aa = xor i32 %v3_323a7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_323aa = icmp eq i32 %v3_323aa, 0
  store i32 %v3_323aa, i32* @eax, align 8
  br i1 %v4_323aa, label %bb, label %dec_label_pc_323b3

bb:                                               ; preds = %dec_label_pc_3239c
  %v1_323b1 = call i32 @function_323b8()
  br label %dec_label_pc_323b3

dec_label_pc_323b3:                               ; preds = %bb, %dec_label_pc_3239c
  %v2_323b1 = phi i32 [ %v1_323b1, %bb ], [ %v3_323aa, %dec_label_pc_3239c ]
  ret i32 %v2_323b1
}

define i32 @function_323b8() local_unnamed_addr {
dec_label_pc_323b8:
  %v0_323b9 = load i32, i32* @eax, align 8
  ret i32 %v0_323b9
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE13_Rb_tree_implISR_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_323ba:
  ret i32 %arg1
}

define i32 @function_323ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_323ca:
  %v2_323ca = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_323ca = load i32, i32* @eax, align 8
  %v4_323ca = trunc i32 %v3_323ca to i8
  %v5_323ca = add i8 %v4_323ca, %v2_323ca
  %v21_323ca = inttoptr i32 %v3_323ca to i8*
  store i8 %v5_323ca, i8* %v21_323ca, align 1
  %v0_323cc = load i32, i32* @eax, align 8
  %v1_323cc = load i32, i32* @ebp, align 4
  %v2_323cc = add i32 %v1_323cc, -12
  %v3_323cc = inttoptr i32 %v2_323cc to i32*
  store i32 %v0_323cc, i32* %v3_323cc, align 4
  %v0_323d1 = load i32, i32* @ebp, align 4
  %v1_323d1 = add i32 %v0_323d1, -28
  %v2_323d1 = inttoptr i32 %v1_323d1 to i32*
  %v3_323d1 = load i32, i32* %v2_323d1, align 4
  %v1_323d4 = add i32 %v3_323d1, 4
  %v2_323d4 = inttoptr i32 %v1_323d4 to i32*
  store i32 0, i32* %v2_323d4, align 4
  %v0_323db = load i32, i32* @ebp, align 4
  %v1_323db = add i32 %v0_323db, -28
  %v2_323db = inttoptr i32 %v1_323db to i32*
  %v3_323db = load i32, i32* %v2_323db, align 4
  %v1_323de = add i32 %v3_323db, 8
  %v2_323de = inttoptr i32 %v1_323de to i32*
  store i32 0, i32* %v2_323de, align 4
  %v0_323e5 = load i32, i32* @ebp, align 4
  %v1_323e5 = add i32 %v0_323e5, -28
  %v2_323e5 = inttoptr i32 %v1_323e5 to i32*
  %v3_323e5 = load i32, i32* %v2_323e5, align 4
  %v1_323e8 = add i32 %v3_323e5, 4
  %v2_323ee = add i32 %v3_323e5, 12
  %v3_323ee = inttoptr i32 %v2_323ee to i32*
  store i32 %v1_323e8, i32* %v3_323ee, align 4
  %v0_323f1 = load i32, i32* @ebp, align 4
  %v1_323f1 = add i32 %v0_323f1, -28
  %v2_323f1 = inttoptr i32 %v1_323f1 to i32*
  %v3_323f1 = load i32, i32* %v2_323f1, align 4
  %v1_323f4 = add i32 %v3_323f1, 4
  %v2_323fa = add i32 %v3_323f1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_323fa = inttoptr i32 %v2_323fa to i32*
  store i32 %v1_323f4, i32* %v3_323fa, align 4
  %v0_323fd = load i32, i32* @ebp, align 4
  %v1_323fd = add i32 %v0_323fd, -12
  %v2_323fd = inttoptr i32 %v1_323fd to i32*
  %v3_323fd = load i32, i32* %v2_323fd, align 4
  %v3_32400 = xor i32 %v3_323fd, ptrtoint ([3 x i8]* @3 to i32)
  %v4_32400 = icmp eq i32 %v3_32400, 0
  store i32 %v3_32400, i32* @eax, align 8
  br i1 %v4_32400, label %bb, label %dec_label_pc_32409

bb:                                               ; preds = %dec_label_pc_323ca
  %v1_32407 = call i32 @function_3240e()
  br label %dec_label_pc_32409

dec_label_pc_32409:                               ; preds = %bb, %dec_label_pc_323ca
  %v2_32407 = phi i32 [ %v1_32407, %bb ], [ %v3_32400, %dec_label_pc_323ca ]
  ret i32 %v2_32407
}

define i32 @function_3240e() local_unnamed_addr {
dec_label_pc_3240e:
  %v0_3240f = load i32, i32* @eax, align 8
  ret i32 %v0_3240f
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISL_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_32410:
  %tmp101 = ptrtoint i32* %arg2 to i32
  %v1_32430 = add i32 %tmp101, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_3243d = call i32 @unknown_600de(i32 %arg1, i32 %v1_32430)
  %v2_32448 = load i32, i32* %arg2, align 4
  %v2_3244d = inttoptr i32 %v2_3243d to i32*
  store i32 %v2_32448, i32* %v2_3244d, align 4
  ret i32 %v2_3243d
}

define i32 @function_32456(i32 %arg1) local_unnamed_addr {
dec_label_pc_32456:
  %v2_32456 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32456 = load i32, i32* @eax, align 8
  %v4_32456 = trunc i32 %v3_32456 to i8
  %v5_32456 = add i8 %v4_32456, %v2_32456
  %v21_32456 = inttoptr i32 %v3_32456 to i8*
  store i8 %v5_32456, i8* %v21_32456, align 1
  %v0_32458 = load i32, i32* @ebx, align 8
  %v1_32458 = add i32 %v0_32458, 1086844997
  %v2_32458 = inttoptr i32 %v1_32458 to i8*
  %v3_32458 = load i8, i8* %v2_32458, align 1
  %v4_32458 = load i32, i32* @ecx, align 4
  %v5_32458 = trunc i32 %v4_32458 to i8
  %v6_32458 = add i8 %v5_32458, %v3_32458
  store i8 %v6_32458, i8* %v2_32458, align 1
  %v0_3245e = load i32, i32* @eax, align 8
  %v1_3245e = trunc i32 %v0_3245e to i8
  %v1_32460 = inttoptr i32 %v0_3245e to i8*
  %v2_32460 = load i8, i8* %v1_32460, align 1
  %v5_32460 = add i8 %v2_32460, %v1_3245e
  store i8 %v5_32460, i8* %v1_32460, align 1
  %v0_32462 = load i32, i32* @ebx, align 8
  %v1_32462 = add i32 %v0_32462, 1435234373
  %v2_32462 = inttoptr i32 %v1_32462 to i8*
  %v3_32462 = load i8, i8* %v2_32462, align 1
  %v4_32462 = load i32, i32* @ecx, align 4
  %v5_32462 = trunc i32 %v4_32462 to i8
  %v6_32462 = add i8 %v5_32462, %v3_32462
  store i8 %v6_32462, i8* %v2_32462, align 1
  %v0_32469 = load i32, i32* @edx, align 8
  %v4_32469 = icmp eq i32 %v0_32469, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_32469, label %bb, label %dec_label_pc_32456.dec_label_pc_32472_crit_edge

dec_label_pc_32456.dec_label_pc_32472_crit_edge:  ; preds = %dec_label_pc_32456
  %v2_32470.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_32472

bb:                                               ; preds = %dec_label_pc_32456
  %v1_32470 = call i32 @function_32477()
  br label %dec_label_pc_32472

dec_label_pc_32472:                               ; preds = %dec_label_pc_32456.dec_label_pc_32472_crit_edge, %bb
  %v2_32470 = phi i32 [ %v2_32470.pre, %dec_label_pc_32456.dec_label_pc_32472_crit_edge ], [ %v1_32470, %bb ]
  ret i32 %v2_32470

; uselistorder directives
  uselistorder label %dec_label_pc_32472, { 1, 0 }
}

define i32 @function_32477() local_unnamed_addr {
dec_label_pc_32477:
  %v0_32478 = load i32, i32* @eax, align 8
  ret i32 %v0_32478
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_32479:
  %v1_32493 = add i32 %arg1, 12
  %v2_32493 = inttoptr i32 %v1_32493 to i32*
  %v3_32493 = load i32, i32* %v2_32493, align 4
  store i32 %v3_32493, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_324a2

bb:                                               ; preds = %dec_label_pc_32479
  %v2_324a0 = call i32 @function_324a7(i32 %arg1)
  br label %dec_label_pc_324a2

dec_label_pc_324a2:                               ; preds = %bb, %dec_label_pc_32479
  %v3_324a0 = phi i32 [ %v2_324a0, %bb ], [ %v3_32493, %dec_label_pc_32479 ]
  ret i32 %v3_324a0
}

define i32 @function_324a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_324a7:
  %v0_324a8 = load i32, i32* @eax, align 8
  ret i32 %v0_324a8
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_324a9:
  %v1_324c3 = add i32 %arg1, 8
  %v2_324c3 = inttoptr i32 %v1_324c3 to i32*
  %v3_324c3 = load i32, i32* %v2_324c3, align 4
  store i32 %v3_324c3, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_324d2

bb:                                               ; preds = %dec_label_pc_324a9
  %v2_324d0 = call i32 @function_324d7(i32 %arg1)
  br label %dec_label_pc_324d2

dec_label_pc_324d2:                               ; preds = %bb, %dec_label_pc_324a9
  %v3_324d0 = phi i32 [ %v2_324d0, %bb ], [ %v3_324c3, %dec_label_pc_324a9 ]
  ret i32 %v3_324d0
}

define i32 @function_324d7(i32 %arg1) local_unnamed_addr {
dec_label_pc_324d7:
  %v0_324d8 = load i32, i32* @eax, align 8
  ret i32 %v0_324d8
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE4sizeEv() local_unnamed_addr {
dec_label_pc_324da:
  %eax.global-to-local = alloca i32, align 4
  %v17_324dd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_324dd
}

define i32 @function_324e2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_324e2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_324e2 = load i32, i32* @ecx, align 4
  %v1_324e2 = add i32 %v0_324e2, -1587157947
  %v2_324e2 = inttoptr i32 %v1_324e2 to i8*
  %v3_324e2 = load i8, i8* %v2_324e2, align 1
  %v5_324e2 = trunc i32 %v0_324e2 to i8
  %v6_324e2 = or i8 %v3_324e2, %v5_324e2
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_324e2, i8* %v2_324e2, align 1
  %v0_324e8 = load i32, i32* @eax, align 8
  %v1_324e8 = trunc i32 %v0_324e8 to i8
  %v2_324e8 = load i1, i1* %cf.global-to-local, align 1
  %v3_324e8 = zext i1 %v2_324e8 to i8
  %v4_324e8 = add i8 %v3_324e8, %v1_324e8
  %v19_324e8 = icmp ule i8 %v4_324e8, %v1_324e8
  %v21_324e8 = icmp eq i1 %v2_324e8, %v19_324e8
  store i1 %v21_324e8, i1* %cf.global-to-local, align 1
  %v22_324e8 = zext i8 %v4_324e8 to i32
  %v24_324e8 = and i32 %v0_324e8, -256
  %v25_324e8 = or i32 %v22_324e8, %v24_324e8
  store i32 %v25_324e8, i32* %eax.global-to-local, align 8
  %v1_324ea = inttoptr i32 %v25_324e8 to i8*
  %v2_324ea = load i8, i8* %v1_324ea, align 1
  %v5_324ea = add i8 %v2_324ea, %v4_324e8
  store i8 %v5_324ea, i8* %v1_324ea, align 1
  %v0_324ec = load i32, i32* %eax.global-to-local, align 8
  %v1_324ec = load i32, i32* @ebp, align 4
  %v2_324ec = add i32 %v1_324ec, -12
  %v3_324ec = inttoptr i32 %v2_324ec to i32*
  store i32 %v0_324ec, i32* %v3_324ec, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_324f1 = load i32, i32* @ebp, align 4
  %v1_324f1 = add i32 %v0_324f1, -28
  %v2_324f1 = inttoptr i32 %v1_324f1 to i32*
  %v3_324f1 = load i32, i32* %v2_324f1, align 4
  store i32 %v3_324f1, i32* %eax.global-to-local, align 8
  %v1_324f4 = add i32 %v3_324f1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_324f4 = inttoptr i32 %v1_324f4 to i32*
  %v3_324f4 = load i32, i32* %v2_324f4, align 4
  store i32 %v3_324f4, i32* @eax, align 8
  %v1_324f7 = add i32 %v0_324f1, -12
  %v2_324f7 = inttoptr i32 %v1_324f7 to i32*
  %v3_324f7 = load i32, i32* %v2_324f7, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_324fa = icmp eq i32 %v3_324f7, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_324fa, label %bb, label %dec_label_pc_32503

bb:                                               ; preds = %dec_label_pc_324e2
  %v1_32501 = call i32 @function_32508()
  store i32 %v1_32501, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32503

dec_label_pc_32503:                               ; preds = %bb, %dec_label_pc_324e2
  %v2_32501 = phi i32 [ %v1_32501, %bb ], [ %v3_324f4, %dec_label_pc_324e2 ]
  ret i32 %v2_32501

; uselistorder directives
  uselistorder i8 %v4_324e8, { 0, 2, 1 }
  uselistorder i8 %v1_324e8, { 1, 0 }
}

define i32 @function_32508() local_unnamed_addr {
dec_label_pc_32508:
  %v0_32509 = load i32, i32* @eax, align 8
  ret i32 %v0_32509
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_3250a:
  %v2_32524 = load i32, i32* %arg1, align 4
  ret i32 %v2_32524
}

define i32 @function_32546() local_unnamed_addr {
dec_label_pc_32546:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32546 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32546 = add i32 %v0_32546, -1
  store i32 %v1_32546, i32* %ecx.global-to-local, align 4
  %v0_32548 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32548
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_3254a:
  %v2_3256a = load i32, i32* %arg2, align 4
  %v2_32576 = call i32 @unknown_5692a(i32 %arg1, i32 %v2_3256a)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3258a

bb:                                               ; preds = %dec_label_pc_3254a
  %v1_32588 = call i32 @function_3258f()
  br label %dec_label_pc_3258a

dec_label_pc_3258a:                               ; preds = %bb, %dec_label_pc_3254a
  %v2_32588 = phi i32 [ %v1_32588, %bb ], [ %arg1, %dec_label_pc_3254a ]
  ret i32 %v2_32588

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_3258f() local_unnamed_addr {
dec_label_pc_3258f:
  %v0_32590 = load i32, i32* @eax, align 8
  ret i32 %v0_32590
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IbxNS0_8functionIFbxEEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISK_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32594:
  ret i32 %arg1
}

define i32 @function_325b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_325b8:
  %v0_325bc = load i32, i32* @ebp, align 4
  %v1_325bc = add i32 %v0_325bc, -12
  %v2_325bc = inttoptr i32 %v1_325bc to i32*
  %v3_325bc = load i32, i32* %v2_325bc, align 4
  %v3_325bf = xor i32 %v3_325bc, ptrtoint ([3 x i8]* @3 to i32)
  %v4_325bf = icmp eq i32 %v3_325bf, 0
  store i32 %v3_325bf, i32* @eax, align 8
  br i1 %v4_325bf, label %bb, label %dec_label_pc_325c8

bb:                                               ; preds = %dec_label_pc_325b8
  %v1_325c6 = call i32 @function_325cd()
  br label %dec_label_pc_325c8

dec_label_pc_325c8:                               ; preds = %bb, %dec_label_pc_325b8
  %v2_325c6 = phi i32 [ %v1_325c6, %bb ], [ %v3_325bf, %dec_label_pc_325b8 ]
  ret i32 %v2_325c6
}

define i32 @function_325cd() local_unnamed_addr {
dec_label_pc_325cd:
  %v0_325ce = load i32, i32* @eax, align 8
  ret i32 %v0_325ce
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IbxNS2_8functionIFbxEEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_325d0:
  ret i32 %arg1
}

define i32 @function_325f7() local_unnamed_addr {
dec_label_pc_325f7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_325f7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_325f7 = add i32 %v0_325f7, -1
  store i32 %v1_325f7, i32* %ecx.global-to-local, align 4
  %v0_325f9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_325f9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IbxNS3_8functionIFbxEEEEENS4_5mutexEEEEEEEEE10deallocateEPSO_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_325fa:
  ret i32 %arg2
}

define i32 @function_32638() local_unnamed_addr {
dec_label_pc_32638:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32638 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32638 = add i32 %v0_32638, -1
  store i32 %v1_32638, i32* %ecx.global-to-local, align 4
  %v0_3263a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3263a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IbxNS3_8functionIFbxEEEEENS4_5mutexEEEEEEEEE8allocateEjPKv() local_unnamed_addr {
dec_label_pc_3263c:
  %eax.global-to-local = alloca i32, align 4
  %v2_3263d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_3263d
}

define i32 @function_32640(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32640:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v4_32641 = load i32, i32* @ecx, align 4
  %v0_32649 = load i32, i32* @ebp, align 4
  %v0_3264a = load i32, i32* @eax, align 8
  %v2_3264a = or i32 %v0_3264a, zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_3264a, i32* %eax.global-to-local, align 8
  %v1_3264d = add i32 %v4_32641, 255
  %v1_3264f = add i32 %v0_32649, 3
  store i32 %v1_3264f, i32* @ebp, align 4
  %v1_32650 = add i32 %v4_32641, -1587159996
  %v2_32650 = inttoptr i32 %v1_32650 to i8*
  %v3_32650 = load i8, i8* %v2_32650, align 1
  %v5_32650 = trunc i32 %v1_3264d to i8
  %v8_32650 = add i8 %v3_32650, %v5_32650
  %v28_32650 = icmp ult i8 %v8_32650, %v3_32650
  store i1 %v28_32650, i1* %cf.global-to-local, align 1
  store i8 %v8_32650, i8* %v2_32650, align 1
  %v0_32656 = load i32, i32* %eax.global-to-local, align 8
  %v1_32656 = trunc i32 %v0_32656 to i8
  %v2_32656 = load i1, i1* %cf.global-to-local, align 1
  %v3_32656 = zext i1 %v2_32656 to i8
  %v4_32656 = add i8 %v3_32656, %v1_32656
  %v19_32656 = icmp ule i8 %v4_32656, %v1_32656
  %v21_32656 = icmp eq i1 %v2_32656, %v19_32656
  store i1 %v21_32656, i1* %cf.global-to-local, align 1
  %v22_32656 = zext i8 %v4_32656 to i32
  %v24_32656 = and i32 %v0_32656, -256
  %v25_32656 = or i32 %v22_32656, %v24_32656
  store i32 %v25_32656, i32* %eax.global-to-local, align 8
  %v1_32658 = inttoptr i32 %v25_32656 to i8*
  %v2_32658 = load i8, i8* %v1_32658, align 1
  %v5_32658 = add i8 %v2_32658, %v4_32656
  store i8 %v5_32658, i8* %v1_32658, align 1
  %v0_3265a = load i32, i32* %eax.global-to-local, align 8
  %v1_3265a = load i32, i32* @ebp, align 4
  %v2_3265a = add i32 %v1_3265a, -12
  %v3_3265a = inttoptr i32 %v2_3265a to i32*
  store i32 %v0_3265a, i32* %v3_3265a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_3265f = load i32, i32* @ebp, align 4
  %v1_3265f = add i32 %v0_3265f, -28
  %v2_3265f = inttoptr i32 %v1_3265f to i32*
  %v3_3265f = load i32, i32* %v2_3265f, align 4
  store i32 %v3_3265f, i32* %eax.global-to-local, align 8
  %v1_32665 = call i32 @unknown_6557a(i32 %v3_3265f)
  store i32 %v1_32665, i32* %eax.global-to-local, align 8
  %v1_3266a = load i32, i32* @ebp, align 4
  %v2_3266a = add i32 %v1_3266a, -32
  %v3_3266a = inttoptr i32 %v2_3266a to i32*
  %v4_3266a = load i32, i32* %v3_3266a, align 4
  %v10_3266a = icmp ult i32 %v1_32665, %v4_3266a
  %v1_3266d = zext i1 %v10_3266a to i32
  %v3_3266d = and i32 %v1_32665, -256
  %v4_3266d = or i32 %v1_3266d, %v3_3266d
  store i32 %v4_3266d, i32* %eax.global-to-local, align 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_32670 = icmp eq i1 %v10_3266a, false
  br i1 %v5_32670, label %bb, label %dec_label_pc_32674

bb:                                               ; preds = %dec_label_pc_32640
  %v1_32672 = call i32 @function_32679()
  store i32 %v1_32672, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32674

dec_label_pc_32674:                               ; preds = %bb, %dec_label_pc_32640
  %v3_32672 = phi i32 [ %v1_32672, %bb ], [ %v4_3266d, %dec_label_pc_32640 ]
  ret i32 %v3_32672

; uselistorder directives
  uselistorder i1 %v10_3266a, { 1, 0 }
  uselistorder i8 %v4_32656, { 0, 2, 1 }
  uselistorder i8 %v1_32656, { 1, 0 }
  uselistorder i8 %v3_32650, { 1, 0 }
  uselistorder i32 3, { 2, 0, 3, 1, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i8 -115, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_89.1944 to i8), { 5, 0, 1, 4, 3, 2 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_89.1944 to i8) to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
}

define i32 @function_32679() local_unnamed_addr {
dec_label_pc_32679:
  %v0_32679 = load i32, i32* @ebp, align 4
  %v1_32679 = add i32 %v0_32679, -32
  %v2_32679 = inttoptr i32 %v1_32679 to i32*
  %v3_32679 = load i32, i32* %v2_32679, align 4
  %v2_3267c = mul i32 %v3_32679, 32
  ret i32 %v2_3267c
}

define i32 @function_32697() local_unnamed_addr {
dec_label_pc_32697:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32697 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32697 = add i32 %v0_32697, -1
  store i32 %v1_32697, i32* %ecx.global-to-local, align 4
  %v0_32699 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32699
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3269a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_326bd

bb:                                               ; preds = %dec_label_pc_3269a
  %v2_326bb = call i32 @function_326c2(i32 %arg1)
  br label %dec_label_pc_326bd

dec_label_pc_326bd:                               ; preds = %bb, %dec_label_pc_3269a
  %v3_326bb = phi i32 [ %v2_326bb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3269a ]
  ret i32 %v3_326bb
}

define i32 @function_326c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_326c2:
  %v0_326c3 = load i32, i32* @eax, align 8
  ret i32 %v0_326c3
}

define i32 @_ZNSaISt10_List_nodeIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEEEEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_326c4:
  ret i32 %arg2
}

define i32 @function_326e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_326e4:
  %v0_326e4 = load i32, i32* @eax, align 8
  %v0_326e8 = load i32, i32* @ebp, align 4
  %v1_326e8 = add i32 %v0_326e8, -28
  %v2_326e8 = inttoptr i32 %v1_326e8 to i32*
  %v3_326e8 = load i32, i32* %v2_326e8, align 4
  %v2_326ee = call i32 @unknown_65632(i32 %v3_326e8, i32 %v0_326e4)
  %v0_326f3 = load i32, i32* @ebp, align 4
  %v1_326f3 = add i32 %v0_326f3, -12
  %v2_326f3 = inttoptr i32 %v1_326f3 to i32*
  %v3_326f3 = load i32, i32* %v2_326f3, align 4
  %v3_326f6 = xor i32 %v3_326f3, ptrtoint ([3 x i8]* @3 to i32)
  %v4_326f6 = icmp eq i32 %v3_326f6, 0
  store i32 %v3_326f6, i32* @eax, align 8
  br i1 %v4_326f6, label %bb, label %dec_label_pc_326ff

bb:                                               ; preds = %dec_label_pc_326e4
  %v1_326fd = call i32 @function_32704()
  br label %dec_label_pc_326ff

dec_label_pc_326ff:                               ; preds = %bb, %dec_label_pc_326e4
  %v2_326fd = phi i32 [ %v1_326fd, %bb ], [ %v3_326f6, %dec_label_pc_326e4 ]
  ret i32 %v2_326fd
}

define i32 @function_32704() local_unnamed_addr {
dec_label_pc_32704:
  %v0_32705 = load i32, i32* @eax, align 8
  ret i32 %v0_32705
}

define i32 @_ZNSt4listIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EE9_M_insertESt14_List_iteratorISJ_ERKSJ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32706:
  %v2_32736 = call i32 @unknown_57db4(i32 %arg1, i32 %arg3)
  ret i32 %v2_32736
}

define i32 @function_32760() local_unnamed_addr {
dec_label_pc_32760:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32760 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32760 = add i32 %v0_32760, -1
  store i32 %v1_32760, i32* %ecx.global-to-local, align 4
  %v0_32762 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32762
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32764:
  %v2_3278e = call i32 @unknown_65702(i32 %arg1, i32 %arg2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3279f

bb:                                               ; preds = %dec_label_pc_32764
  %v1_3279d = call i32 @function_327a4()
  br label %dec_label_pc_3279f

dec_label_pc_3279f:                               ; preds = %bb, %dec_label_pc_32764
  %v2_3279d = phi i32 [ %v1_3279d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32764 ]
  ret i32 %v2_3279d
}

define i32 @function_327a4() local_unnamed_addr {
dec_label_pc_327a4:
  %v0_327a5 = load i32, i32* @eax, align 8
  ret i32 %v0_327a5
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_Rb_tree_implIST_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_327a6:
  %v1_327c0 = add i32 %arg1, 4
  %v2_327c0 = inttoptr i32 %v1_327c0 to i32*
  store i32 0, i32* %v2_327c0, align 4
  %v1_327ca = add i32 %arg1, 8
  %v2_327ca = inttoptr i32 %v1_327ca to i32*
  store i32 0, i32* %v2_327ca, align 4
  %v2_327da = add i32 %arg1, 12
  %v3_327da = inttoptr i32 %v2_327da to i32*
  store i32 %v1_327c0, i32* %v3_327da, align 4
  %v2_327e6 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_327e6 = inttoptr i32 %v2_327e6 to i32*
  store i32 %v1_327c0, i32* %v3_327e6, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_327f5

bb:                                               ; preds = %dec_label_pc_327a6
  %v2_327f3 = call i32 @function_327fa(i32 %arg1)
  br label %dec_label_pc_327f5

dec_label_pc_327f5:                               ; preds = %bb, %dec_label_pc_327a6
  %v3_327f3 = phi i32 [ %v2_327f3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_327a6 ]
  ret i32 %v3_327f3
}

define i32 @function_327fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_327fa:
  %v0_327fb = load i32, i32* @eax, align 8
  ret i32 %v0_327fb
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE13_M_clone_nodeEPKSt13_Rb_tree_nodeISN_E(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_327fc:
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v1_3281c = add i32 %tmp102, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_32829 = call i32 @unknown_61244(i32 %arg1, i32 %v1_3281c)
  %v2_32834 = load i32, i32* %arg2, align 4
  %v2_32839 = inttoptr i32 %v2_32829 to i32*
  store i32 %v2_32834, i32* %v2_32839, align 4
  %v1_3283e = add i32 %v2_32829, 8
  %v2_3283e = inttoptr i32 %v1_3283e to i32*
  store i32 0, i32* %v2_3283e, align 4
  %v1_32848 = add i32 %v2_32829, 12
  %v2_32848 = inttoptr i32 %v1_32848 to i32*
  store i32 0, i32* %v2_32848, align 4
  store i32 %v2_32829, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3285e

bb:                                               ; preds = %dec_label_pc_327fc
  %v2_3285c = call i32 @function_32863(i32 %v2_32829)
  br label %dec_label_pc_3285e

dec_label_pc_3285e:                               ; preds = %bb, %dec_label_pc_327fc
  %v3_3285c = phi i32 [ %v2_3285c, %bb ], [ %v2_32829, %dec_label_pc_327fc ]
  ret i32 %v3_3285c
}

define i32 @function_32863(i32 %arg1) local_unnamed_addr {
dec_label_pc_32863:
  %v0_32864 = load i32, i32* @eax, align 8
  ret i32 %v0_32864
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_S_rightEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_32865:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_32877(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32877:
  %v0_32877 = load i32, i32* @eax, align 8
  %v1_32877 = load i32, i32* @ebp, align 4
  %v2_32877 = add i32 %v1_32877, -12
  %v3_32877 = inttoptr i32 %v2_32877 to i32*
  store i32 %v0_32877, i32* %v3_32877, align 4
  %v0_3287c = load i32, i32* @ebp, align 4
  %v1_3287c = add i32 %v0_3287c, -28
  %v2_3287c = inttoptr i32 %v1_3287c to i32*
  %v3_3287c = load i32, i32* %v2_3287c, align 4
  %v1_3287f = add i32 %v3_3287c, 12
  %v2_3287f = inttoptr i32 %v1_3287f to i32*
  %v3_3287f = load i32, i32* %v2_3287f, align 4
  store i32 %v3_3287f, i32* @eax, align 8
  %v1_32882 = add i32 %v0_3287c, -12
  %v2_32882 = inttoptr i32 %v1_32882 to i32*
  %v3_32882 = load i32, i32* %v2_32882, align 4
  %v4_32885 = icmp eq i32 %v3_32882, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_32885, label %bb, label %dec_label_pc_3288e

bb:                                               ; preds = %dec_label_pc_32877
  %v1_3288c = call i32 @function_32893()
  br label %dec_label_pc_3288e

dec_label_pc_3288e:                               ; preds = %bb, %dec_label_pc_32877
  %v2_3288c = phi i32 [ %v1_3288c, %bb ], [ %v3_3287f, %dec_label_pc_32877 ]
  ret i32 %v2_3288c
}

define i32 @function_32893() local_unnamed_addr {
dec_label_pc_32893:
  %v0_32894 = load i32, i32* @eax, align 8
  ret i32 %v0_32894
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_32895:
  ret i32 %arg1
}

define i32 @function_3289e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3289e:
  %v0_3289e = load i32, i32* @eax, align 8
  %v1_3289e = load i32, i32* @ebp, align 4
  %v2_3289e = add i32 %v1_3289e, -28
  %v3_3289e = inttoptr i32 %v2_3289e to i32*
  store i32 %v0_3289e, i32* %v3_3289e, align 4
  %v1_328a7 = load i32, i32* @ebp, align 4
  %v2_328a7 = add i32 %v1_328a7, -12
  %v3_328a7 = inttoptr i32 %v2_328a7 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_328a7, align 4
  %v0_328ac = load i32, i32* @ebp, align 4
  %v1_328ac = add i32 %v0_328ac, -28
  %v2_328ac = inttoptr i32 %v1_328ac to i32*
  %v3_328ac = load i32, i32* %v2_328ac, align 4
  %v1_328af = add i32 %v3_328ac, 8
  %v2_328af = inttoptr i32 %v1_328af to i32*
  %v3_328af = load i32, i32* %v2_328af, align 4
  store i32 %v3_328af, i32* @eax, align 8
  %v1_328b2 = add i32 %v0_328ac, -12
  %v2_328b2 = inttoptr i32 %v1_328b2 to i32*
  %v3_328b2 = load i32, i32* %v2_328b2, align 4
  %v4_328b5 = icmp eq i32 %v3_328b2, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_328b5, label %bb, label %dec_label_pc_328be

bb:                                               ; preds = %dec_label_pc_3289e
  %v1_328bc = call i32 @function_328c3()
  br label %dec_label_pc_328be

dec_label_pc_328be:                               ; preds = %bb, %dec_label_pc_3289e
  %v2_328bc = phi i32 [ %v1_328bc, %bb ], [ %v3_328af, %dec_label_pc_3289e ]
  ret i32 %v2_328bc
}

define i32 @function_328c3() local_unnamed_addr {
dec_label_pc_328c3:
  %v0_328c4 = load i32, i32* @eax, align 8
  ret i32 %v0_328c4
}

define i32 @_ZNKSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE4sizeEv() local_unnamed_addr {
dec_label_pc_328c6:
  %eax.global-to-local = alloca i32, align 4
  %v17_328c9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_328c9
}

define i32 @function_328ce(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_328ce:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_328ce = load i32, i32* @ecx, align 4
  %v1_328ce = add i32 %v0_328ce, -1587157947
  %v2_328ce = inttoptr i32 %v1_328ce to i8*
  %v3_328ce = load i8, i8* %v2_328ce, align 1
  %v5_328ce = trunc i32 %v0_328ce to i8
  %v6_328ce = or i8 %v3_328ce, %v5_328ce
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_328ce, i8* %v2_328ce, align 1
  %v0_328d4 = load i32, i32* @eax, align 8
  %v1_328d4 = trunc i32 %v0_328d4 to i8
  %v2_328d4 = load i1, i1* %cf.global-to-local, align 1
  %v3_328d4 = zext i1 %v2_328d4 to i8
  %v4_328d4 = add i8 %v3_328d4, %v1_328d4
  %v19_328d4 = icmp ule i8 %v4_328d4, %v1_328d4
  %v21_328d4 = icmp eq i1 %v2_328d4, %v19_328d4
  store i1 %v21_328d4, i1* %cf.global-to-local, align 1
  %v22_328d4 = zext i8 %v4_328d4 to i32
  %v24_328d4 = and i32 %v0_328d4, -256
  %v25_328d4 = or i32 %v22_328d4, %v24_328d4
  store i32 %v25_328d4, i32* %eax.global-to-local, align 8
  %v1_328d6 = inttoptr i32 %v25_328d4 to i8*
  %v2_328d6 = load i8, i8* %v1_328d6, align 1
  %v5_328d6 = add i8 %v2_328d6, %v4_328d4
  store i8 %v5_328d6, i8* %v1_328d6, align 1
  %v0_328d8 = load i32, i32* %eax.global-to-local, align 8
  %v1_328d8 = load i32, i32* @ebp, align 4
  %v2_328d8 = add i32 %v1_328d8, -12
  %v3_328d8 = inttoptr i32 %v2_328d8 to i32*
  store i32 %v0_328d8, i32* %v3_328d8, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_328dd = load i32, i32* @ebp, align 4
  %v1_328dd = add i32 %v0_328dd, -28
  %v2_328dd = inttoptr i32 %v1_328dd to i32*
  %v3_328dd = load i32, i32* %v2_328dd, align 4
  store i32 %v3_328dd, i32* %eax.global-to-local, align 8
  %v1_328e0 = add i32 %v3_328dd, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_328e0 = inttoptr i32 %v1_328e0 to i32*
  %v3_328e0 = load i32, i32* %v2_328e0, align 4
  store i32 %v3_328e0, i32* @eax, align 8
  %v1_328e3 = add i32 %v0_328dd, -12
  %v2_328e3 = inttoptr i32 %v1_328e3 to i32*
  %v3_328e3 = load i32, i32* %v2_328e3, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_328e6 = icmp eq i32 %v3_328e3, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_328e6, label %bb, label %dec_label_pc_328ef

bb:                                               ; preds = %dec_label_pc_328ce
  %v1_328ed = call i32 @function_328f4()
  store i32 %v1_328ed, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_328ef

dec_label_pc_328ef:                               ; preds = %bb, %dec_label_pc_328ce
  %v2_328ed = phi i32 [ %v1_328ed, %bb ], [ %v3_328e0, %dec_label_pc_328ce ]
  ret i32 %v2_328ed

; uselistorder directives
  uselistorder i8 %v4_328d4, { 0, 2, 1 }
  uselistorder i8 %v1_328d4, { 1, 0 }
}

define i32 @function_328f4() local_unnamed_addr {
dec_label_pc_328f4:
  %v0_328f5 = load i32, i32* @eax, align 8
  ret i32 %v0_328f5
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_328f6:
  %v2_32910 = load i32, i32* %arg1, align 4
  ret i32 %v2_32910
}

define i32 @function_32932() local_unnamed_addr {
dec_label_pc_32932:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32932 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32932 = add i32 %v0_32932, -1
  store i32 %v1_32932, i32* %ecx.global-to-local, align 4
  %v0_32934 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32934
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKS0_IN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEESt14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEEE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_32936:
  %v2_32956 = load i32, i32* %arg2, align 4
  %v2_32962 = call i32 @unknown_57dd8(i32 %arg1, i32 %v2_32956)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32976

bb:                                               ; preds = %dec_label_pc_32936
  %v1_32974 = call i32 @function_3297b()
  br label %dec_label_pc_32976

dec_label_pc_32976:                               ; preds = %bb, %dec_label_pc_32936
  %v2_32974 = phi i32 [ %v1_32974, %bb ], [ %arg1, %dec_label_pc_32936 ]
  ret i32 %v2_32974

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_3297b() local_unnamed_addr {
dec_label_pc_3297b:
  %v0_3297c = load i32, i32* @eax, align 8
  ret i32 %v0_3297c
}

define i32 @_ZNSaISt4pairIKS_IN5boost8signals26detail15slot_meta_groupENS0_8optionalIiEEESt14_List_iteratorINS0_10shared_ptrINS2_15connection_bodyIS6_NS1_5slot1IvRKSsNS0_8functionIFvSD_EEEEENS1_5mutexEEEEEEEEC1ISt13_Rb_tree_nodeISM_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32980:
  %v1_329a3 = call i32 @unknown_6594e(i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_329b4

bb:                                               ; preds = %dec_label_pc_32980
  %v1_329b2 = call i32 @function_329b9()
  br label %dec_label_pc_329b4

dec_label_pc_329b4:                               ; preds = %bb, %dec_label_pc_32980
  %v2_329b2 = phi i32 [ %v1_329b2, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32980 ]
  ret i32 %v2_329b2
}

define i32 @function_329b9() local_unnamed_addr {
dec_label_pc_329b9:
  %v0_329ba = load i32, i32* @eax, align 8
  ret i32 %v0_329ba
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IvRKSsNS2_8functionIFvSF_EEEEENS3_5mutexEEEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_329bc:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_329df

bb:                                               ; preds = %dec_label_pc_329bc
  %v2_329dd = call i32 @function_329e4(i32 %arg1)
  br label %dec_label_pc_329df

dec_label_pc_329df:                               ; preds = %bb, %dec_label_pc_329bc
  %v3_329dd = phi i32 [ %v2_329dd, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_329bc ]
  ret i32 %v3_329dd
}

define i32 @function_329e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_329e4:
  %v0_329e5 = load i32, i32* @eax, align 8
  ret i32 %v0_329e5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IvRKSsNS3_8functionIFvSG_EEEEENS4_5mutexEEEEEEEEE10deallocateEPSQ_j() local_unnamed_addr {
dec_label_pc_329e6:
  %eax.global-to-local = alloca i32, align 4
  %v17_329e9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_329e9
}

define i32 @function_329ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_329ec:
  %v0_329ec = load i32, i32* @ebp, align 4
  %v1_329ec = add i32 %v0_329ec, 8
  %v2_329ec = inttoptr i32 %v1_329ec to i32*
  %v3_329ec = load i32, i32* %v2_329ec, align 4
  %v2_329ef = add i32 %v0_329ec, -28
  %v3_329ef = inttoptr i32 %v2_329ef to i32*
  store i32 %v3_329ec, i32* %v3_329ef, align 4
  %v0_329f2 = load i32, i32* @ebp, align 4
  %v1_329f2 = add i32 %v0_329f2, 12
  %v2_329f2 = inttoptr i32 %v1_329f2 to i32*
  %v3_329f2 = load i32, i32* %v2_329f2, align 4
  %v2_329f5 = add i32 %v0_329f2, -32
  %v3_329f5 = inttoptr i32 %v2_329f5 to i32*
  store i32 %v3_329f2, i32* %v3_329f5, align 4
  %v0_329f8 = load i32, i32* @ebp, align 4
  %v1_329f8 = add i32 %v0_329f8, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_329f8 = inttoptr i32 %v1_329f8 to i32*
  %v3_329f8 = load i32, i32* %v2_329f8, align 4
  %v2_329fb = add i32 %v0_329f8, -36
  %v3_329fb = inttoptr i32 %v2_329fb to i32*
  store i32 %v3_329f8, i32* %v3_329fb, align 4
  %v1_32a04 = load i32, i32* @ebp, align 4
  %v2_32a04 = add i32 %v1_32a04, -12
  %v3_32a04 = inttoptr i32 %v2_32a04 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_32a04, align 4
  %v0_32a09 = load i32, i32* @ebp, align 4
  %v1_32a09 = add i32 %v0_32a09, -32
  %v2_32a09 = inttoptr i32 %v1_32a09 to i32*
  %v3_32a09 = load i32, i32* %v2_32a09, align 4
  ret i32 %v3_32a09
}

define i32 @function_32a24() local_unnamed_addr {
dec_label_pc_32a24:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32a24 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32a24 = add i32 %v0_32a24, -1
  store i32 %v1_32a24, i32* %ecx.global-to-local, align 4
  %v0_32a26 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32a26
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IvRKSsNS3_8functionIFvSG_EEEEENS4_5mutexEEEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32a28:
  %v1_32a51 = call i32 @unknown_65a20(i32 %arg1)
  %v10_32a56 = icmp ult i32 %v1_32a51, %arg2
  %v1_32a59 = zext i1 %v10_32a56 to i32
  %v3_32a59 = and i32 %v1_32a51, -256
  %v4_32a59 = or i32 %v1_32a59, %v3_32a59
  %v5_32a5c = icmp eq i1 %v10_32a56, false
  br i1 %v5_32a5c, label %bb, label %dec_label_pc_32a60

bb:                                               ; preds = %dec_label_pc_32a28
  %v1_32a5e = call i32 @function_32a65()
  br label %dec_label_pc_32a60

dec_label_pc_32a60:                               ; preds = %bb, %dec_label_pc_32a28
  %v2_32a5e = phi i32 [ %v1_32a5e, %bb ], [ %v4_32a59, %dec_label_pc_32a28 ]
  ret i32 %v2_32a5e

; uselistorder directives
  uselistorder i1 %v10_32a56, { 1, 0 }
}

define i32 @function_32a65() local_unnamed_addr {
dec_label_pc_32a65:
  %v0_32a65 = load i32, i32* @ebp, align 4
  %v1_32a65 = add i32 %v0_32a65, -32
  %v2_32a65 = inttoptr i32 %v1_32a65 to i32*
  %v3_32a65 = load i32, i32* %v2_32a65, align 4
  %v2_32a68 = mul i32 %v3_32a65, 32
  ret i32 %v2_32a68
}

define i32 @function_32a83() local_unnamed_addr {
dec_label_pc_32a83:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32a83 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32a83 = add i32 %v0_32a83, -1
  store i32 %v1_32a83, i32* %ecx.global-to-local, align 4
  %v0_32a85 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32a85
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list2INS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrEEEEEE16initializer_node10initializeEPvRKSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32a86:
  store i32 %arg1, i32* @eax, align 8
  %v2_32ab1 = call i32 @function_333ec(i32 8, i32 %arg1)
  %v1_32ab6 = icmp eq i32 %v2_32ab1, 0
  br i1 %v1_32ab6, label %dec_label_pc_32ac9, label %dec_label_pc_32aba

dec_label_pc_32aba:                               ; preds = %dec_label_pc_32a86
  %v2_32ac4 = call i32 @unknown_41878(i32 %v2_32ab1, i32 %arg2)
  br label %dec_label_pc_32ac9

dec_label_pc_32ac9:                               ; preds = %dec_label_pc_32aba, %dec_label_pc_32a86
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32ada

bb:                                               ; preds = %dec_label_pc_32ac9
  %v1_32ad8 = call i32 @function_32adf()
  br label %dec_label_pc_32ada

dec_label_pc_32ada:                               ; preds = %bb, %dec_label_pc_32ac9
  %v2_32ad8 = phi i32 [ %v1_32ad8, %bb ], [ 0, %dec_label_pc_32ac9 ]
  ret i32 %v2_32ad8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_32adc(i32 %arg1) local_unnamed_addr {
dec_label_pc_32adc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32adf() local_unnamed_addr {
dec_label_pc_32adf:
  %v0_32ae0 = load i32, i32* @eax, align 8
  ret i32 %v0_32ae0
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list2INS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrEEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list1ISH_EEEEE16initializer_node10initializeEPvRKSH_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ae1:
  ret i32 %arg2
}

define i32 @function_32af4(i32 %arg1) local_unnamed_addr {
dec_label_pc_32af4:
  %eax.global-to-local = alloca i32, align 4
  %v0_32af4 = load i32, i32* @ebp, align 4
  %v1_32af4 = add i32 %v0_32af4, 1
  store i32 %v1_32af4, i32* @ebp, align 4
  %v1_32af5 = add i32 %v0_32af4, -94
  %v2_32af5 = inttoptr i32 %v1_32af5 to i8*
  %v3_32af5 = load i8, i8* %v2_32af5, align 1
  %v5_32af5 = mul i8 %v3_32af5, 2
  store i8 %v5_32af5, i8* %v2_32af5, align 1
  %v16_32af5 = icmp slt i8 %v3_32af5, 0
  %v0_32af8 = load i32, i32* @eax, align 8
  %v1_32af8 = trunc i32 %v0_32af8 to i8
  %v3_32af8 = zext i1 %v16_32af5 to i8
  %v4_32af8 = add i8 %v1_32af8, %v3_32af8
  %v22_32af8 = zext i8 %v4_32af8 to i32
  %v24_32af8 = and i32 %v0_32af8, -256
  %v25_32af8 = or i32 %v22_32af8, %v24_32af8
  store i32 %v25_32af8, i32* %eax.global-to-local, align 8
  %v1_32afa = inttoptr i32 %v25_32af8 to i8*
  %v2_32afa = load i8, i8* %v1_32afa, align 1
  %v5_32afa = add i8 %v2_32afa, %v4_32af8
  store i8 %v5_32afa, i8* %v1_32afa, align 1
  %v0_32afc = load i32, i32* %eax.global-to-local, align 8
  %v1_32afc = load i32, i32* @ebp, align 4
  %v2_32afc = add i32 %v1_32afc, -28
  %v3_32afc = inttoptr i32 %v2_32afc to i32*
  store i32 %v0_32afc, i32* %v3_32afc, align 4
  store i32 0, i32* %eax.global-to-local, align 8
  %v0_32b01 = load i32, i32* @ebp, align 4
  %v1_32b01 = add i32 %v0_32b01, -44
  %v2_32b01 = inttoptr i32 %v1_32b01 to i32*
  %v3_32b01 = load i32, i32* %v2_32b01, align 4
  %v2_32b0f = call i32 @function_33447(i32 4, i32 %v3_32b01)
  store i32 %v2_32b0f, i32* %eax.global-to-local, align 8
  %v1_32b16 = icmp eq i32 %v2_32b0f, 0
  br i1 %v1_32b16, label %dec_label_pc_32b29, label %dec_label_pc_32b1a

dec_label_pc_32b1a:                               ; preds = %dec_label_pc_32af4
  %v0_32b1a = load i32, i32* @ebp, align 4
  %v1_32b1a = add i32 %v0_32b1a, -48
  %v2_32b1a = inttoptr i32 %v1_32b1a to i32*
  %v3_32b1a = load i32, i32* %v2_32b1a, align 4
  store i32 %v3_32b1a, i32* %eax.global-to-local, align 8
  %v2_32b24 = call i32 @unknown_413d5(i32 %v2_32b0f, i32 %v3_32b1a)
  store i32 %v2_32b24, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_32b29

dec_label_pc_32b29:                               ; preds = %dec_label_pc_32b1a, %dec_label_pc_32af4
  store i32 1, i32* @eax, align 8
  %v0_32b2e = load i32, i32* @ebp, align 4
  %v1_32b2e = add i32 %v0_32b2e, -28
  %v2_32b2e = inttoptr i32 %v1_32b2e to i32*
  %v3_32b2e = load i32, i32* %v2_32b2e, align 4
  %v4_32b31 = icmp eq i32 %v3_32b2e, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_32b31, label %bb, label %dec_label_pc_32b3a

bb:                                               ; preds = %dec_label_pc_32b29
  %v1_32b38 = call i32 @function_32b59()
  store i32 %v1_32b38, i32* @eax, align 8
  br label %dec_label_pc_32b3a

dec_label_pc_32b3a:                               ; preds = %bb, %dec_label_pc_32b29
  %v0_32b3a = call i32 @function_32b54()
  store i32 %v0_32b3a, i32* %eax.global-to-local, align 8
  ret i32 %v0_32b3a

; uselistorder directives
  uselistorder i8 %v3_32af5, { 1, 0 }
  uselistorder i32 -48, { 20, 29, 31, 32, 34, 40, 35, 36, 37, 38, 39, 59, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 61, 60, 58, 19, 25, 26, 27, 21, 22, 23, 24, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 30, 13, 14, 15, 16, 17, 18, 33, 54, 55, 56 }
  uselistorder i8 2, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
}

declare i32 @_Unwind_Resume.1562(i32) local_unnamed_addr

define i32 @function_32b54() local_unnamed_addr {
dec_label_pc_32b54:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32b59() local_unnamed_addr {
dec_label_pc_32b59:
  %v0_32b60 = load i32, i32* @eax, align 8
  ret i32 %v0_32b60
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32b62:
  %v1_32b8b = call i32 @unknown_65b8a(i32 %arg1)
  %v10_32b90 = icmp ult i32 %v1_32b8b, %arg2
  %v1_32b93 = zext i1 %v10_32b90 to i32
  %v3_32b93 = and i32 %v1_32b8b, -256
  %v4_32b93 = or i32 %v1_32b93, %v3_32b93
  %v5_32b96 = icmp eq i1 %v10_32b90, false
  br i1 %v5_32b96, label %bb, label %dec_label_pc_32b9a

bb:                                               ; preds = %dec_label_pc_32b62
  %v1_32b98 = call i32 @function_32b9f()
  br label %dec_label_pc_32b9a

dec_label_pc_32b9a:                               ; preds = %bb, %dec_label_pc_32b62
  %v2_32b98 = phi i32 [ %v1_32b98, %bb ], [ %v4_32b93, %dec_label_pc_32b62 ]
  ret i32 %v2_32b98

; uselistorder directives
  uselistorder i1 %v10_32b90, { 1, 0 }
}

define i32 @function_32b9f() local_unnamed_addr {
dec_label_pc_32b9f:
  %v0_32b9f = load i32, i32* @ebp, align 4
  %v1_32b9f = add i32 %v0_32b9f, -32
  %v2_32b9f = inttoptr i32 %v1_32b9f to i32*
  %v3_32b9f = load i32, i32* %v2_32b9f, align 4
  %v2_32ba2 = mul i32 %v3_32b9f, 32
  ret i32 %v2_32ba2

; uselistorder directives
  uselistorder i32 32, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 6 }
}

declare i32 @__stack_chk_fail.1238() local_unnamed_addr

define i32 @function_32bbd() local_unnamed_addr {
dec_label_pc_32bbd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32bbd = load i32, i32* %ecx.global-to-local, align 4
  %v1_32bbd = add i32 %v0_32bbd, -1
  store i32 %v1_32bbd, i32* %ecx.global-to-local, align 4
  %v0_32bbf = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32bbf
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1ISsPKcNS2_8functionIFSsSF_EEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32bc0:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32be3

bb:                                               ; preds = %dec_label_pc_32bc0
  %v2_32be1 = call i32 @function_32be8(i32 %arg1)
  br label %dec_label_pc_32be3

dec_label_pc_32be3:                               ; preds = %bb, %dec_label_pc_32bc0
  %v3_32be1 = phi i32 [ %v2_32be1, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32bc0 ]
  ret i32 %v3_32be1
}

define i32 @function_32be8(i32 %arg1) local_unnamed_addr {
dec_label_pc_32be8:
  %v0_32be9 = load i32, i32* @eax, align 8
  ret i32 %v0_32be9
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32bea:
  %v3_32c17 = call i32 @unknown_65c42(i32 %arg1, i32 1, i32 0)
  store i32 %v3_32c17, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32c28

bb:                                               ; preds = %dec_label_pc_32bea
  %v1_32c26 = call i32 @function_32c2d()
  br label %dec_label_pc_32c28

dec_label_pc_32c28:                               ; preds = %bb, %dec_label_pc_32bea
  %v2_32c26 = phi i32 [ %v1_32c26, %bb ], [ %v3_32c17, %dec_label_pc_32bea ]
  ret i32 %v2_32c26
}

define i32 @function_32c2d() local_unnamed_addr {
dec_label_pc_32c2d:
  %v0_32c2e = load i32, i32* @eax, align 8
  ret i32 %v0_32c2e
}

define i32 @_ZN5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEC1ERKSI_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32c30:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_32c4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_32c4a:
  %v0_32c4d = load i32, i32* @ebp, align 4
  %v1_32c4d = add i32 %v0_32c4d, -32
  %v2_32c4d = inttoptr i32 %v1_32c4d to i32*
  %v3_32c4d = load i32, i32* %v2_32c4d, align 4
  %v1_32c50 = inttoptr i32 %v3_32c4d to i32*
  %v2_32c50 = load i32, i32* %v1_32c50, align 4
  %v1_32c52 = add i32 %v0_32c4d, -28
  %v2_32c52 = inttoptr i32 %v1_32c52 to i32*
  %v3_32c52 = load i32, i32* %v2_32c52, align 4
  %v2_32c55 = inttoptr i32 %v3_32c52 to i32*
  store i32 %v2_32c50, i32* %v2_32c55, align 4
  %v0_32c57 = load i32, i32* @ebp, align 4
  %v1_32c5d = add i32 %v0_32c57, -28
  %v2_32c5d = inttoptr i32 %v1_32c5d to i32*
  %v3_32c5d = load i32, i32* %v2_32c5d, align 4
  %v1_32c60 = add i32 %v3_32c5d, 4
  ret i32 %v1_32c60
}

define i32 @function_32c6e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32c6e:
  %v0_32c6e = load i32, i32* @ebx, align 8
  %v1_32c6e = add i32 %v0_32c6e, 862319685
  %v2_32c6e = inttoptr i32 %v1_32c6e to i8*
  %v3_32c6e = load i8, i8* %v2_32c6e, align 1
  %v4_32c6e = load i32, i32* @ecx, align 4
  %v5_32c6e = trunc i32 %v4_32c6e to i8
  %v6_32c6e = add i8 %v5_32c6e, %v3_32c6e
  store i8 %v6_32c6e, i8* %v2_32c6e, align 1
  %v0_32c74 = load i32, i32* @eax, align 8
  %v1_32c74 = add i32 %v0_32c74, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_32c74 = icmp eq i32 %v1_32c74, 0
  store i32 %v1_32c74, i32* @eax, align 8
  br i1 %v10_32c74, label %bb, label %dec_label_pc_32c7b

bb:                                               ; preds = %dec_label_pc_32c6e
  %v1_32c79 = call i32 @function_32c80()
  br label %dec_label_pc_32c7b

dec_label_pc_32c7b:                               ; preds = %bb, %dec_label_pc_32c6e
  %v2_32c79 = phi i32 [ %v1_32c79, %bb ], [ %v1_32c74, %dec_label_pc_32c6e ]
  ret i32 %v2_32c79

; uselistorder directives
  uselistorder i32 862319685, { 11, 10, 1, 13, 12, 2, 14, 15, 3, 4, 5, 6, 7, 8, 9, 0 }
}

define i32 @function_32c80() local_unnamed_addr {
dec_label_pc_32c80:
  %v0_32c81 = load i32, i32* @eax, align 8
  ret i32 %v0_32c81
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost10shared_ptrINS1_8signals26detail15connection_bodyISt4pairINS4_15slot_meta_groupENS1_8optionalIiEEENS3_5slot1ISsPKcNS1_8functionIFSsSD_EEEEENS3_5mutexEEEEEE9constructEPSK_RKSK_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32c82:
  store i32 %arg2, i32* @eax, align 8
  %v2_32cb3 = call i32 @function_335e8(i32 8, i32 %arg2)
  %v1_32cb8 = icmp eq i32 %v2_32cb3, 0
  br i1 %v1_32cb8, label %dec_label_pc_32ccb, label %dec_label_pc_32cbc

dec_label_pc_32cbc:                               ; preds = %dec_label_pc_32c82
  %v2_32cc6 = call i32 @unknown_658b2(i32 %v2_32cb3, i32 %arg3)
  br label %dec_label_pc_32ccb

dec_label_pc_32ccb:                               ; preds = %dec_label_pc_32cbc, %dec_label_pc_32c82
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32cd7

bb:                                               ; preds = %dec_label_pc_32ccb
  %v1_32cd5 = call i32 @function_32cdc()
  br label %dec_label_pc_32cd7

dec_label_pc_32cd7:                               ; preds = %bb, %dec_label_pc_32ccb
  %v2_32cd5 = phi i32 [ %v1_32cd5, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32ccb ]
  ret i32 %v2_32cd5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_32cdc() local_unnamed_addr {
dec_label_pc_32cdc:
  %v0_32cdd = load i32, i32* @eax, align 8
  ret i32 %v0_32cdd
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jEC1ERSI_SL_SJ_j(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32cde:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v1_32d19 = call i32 @unknown_41cea(i32 %arg1)
  %v2_32d24 = add i32 %arg1, 4
  %v3_32d24 = inttoptr i32 %v2_32d24 to i32*
  store i32 %arg2, i32* %v3_32d24, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 8
  %v2_32d30 = add i32 %arg1, 8
  %v3_32d30 = inttoptr i32 %v2_32d30 to i32*
  store i32 %arg3, i32* %v3_32d30, align 4
  %v0_32d33 = load i32, i32* %edx.global-to-local, align 8
  %v1_32d33 = load i32, i32* %ecx.global-to-local, align 4
  %v2_32d33 = add i32 %v1_32d33, 12
  %v3_32d33 = inttoptr i32 %v2_32d33 to i32*
  store i32 %v0_32d33, i32* %v3_32d33, align 4
  %v2_32d3c = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v3_32d3c = inttoptr i32 %v2_32d3c to i32*
  store i32 %arg5, i32* %v3_32d3c, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 8
  %v2_32d45 = add i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v3_32d45 = inttoptr i32 %v2_32d45 to i32*
  store i32 %arg6, i32* %v3_32d45, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32d54

bb:                                               ; preds = %dec_label_pc_32cde
  %v1_32d52 = call i32 @function_32d59()
  br label %dec_label_pc_32d54

dec_label_pc_32d54:                               ; preds = %bb, %dec_label_pc_32cde
  %v2_32d52 = phi i32 [ %v1_32d52, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32cde ]
  ret i32 %v2_32d52

; uselistorder directives
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_32d59() local_unnamed_addr {
dec_label_pc_32d59:
  %v0_32d5a = load i32, i32* @eax, align 8
  ret i32 %v0_32d5a
}

define i32 @_ZN5boost11multi_index6detail21scope_guard_impl_base12safe_executeINS1_21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS6_23foreign_void_shared_ptrENS_6detail7variant5void_ESE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_SE_EENS6_15store_n_objectsILj10EEENS6_19default_grow_policyESaISF_EEEMSK_FvPSF_jESL_jEEEEvRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d5b:
  ret i32 %arg1
}

define i32 @function_32d64(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d64:
  %v0_32d64 = load i32, i32* @eax, align 8
  %v1_32d64 = load i32, i32* @ebp, align 4
  %v2_32d64 = add i32 %v1_32d64, -28
  %v3_32d64 = inttoptr i32 %v2_32d64 to i32*
  store i32 %v0_32d64, i32* %v3_32d64, align 4
  %v1_32d6d = load i32, i32* @ebp, align 4
  %v2_32d6d = add i32 %v1_32d6d, -12
  %v3_32d6d = inttoptr i32 %v2_32d6d to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_32d6d, align 4
  %v0_32d72 = load i32, i32* @ebp, align 4
  %v1_32d72 = add i32 %v0_32d72, -28
  %v2_32d72 = inttoptr i32 %v1_32d72 to i32*
  %v3_32d72 = load i32, i32* %v2_32d72, align 4
  %v1_32d75 = inttoptr i32 %v3_32d72 to i8*
  %v2_32d75 = load i8, i8* %v1_32d75, align 1
  %v5_32d7b = icmp eq i8 %v2_32d75, 1
  br i1 %v5_32d7b, label %dec_label_pc_32d8a, label %dec_label_pc_32d7f

dec_label_pc_32d7f:                               ; preds = %dec_label_pc_32d64
  %v3_32d7f = load i32, i32* %v2_32d72, align 4
  %v1_32d85 = call i32 @unknown_65e11(i32 %v3_32d7f)
  %v0_32d8a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_32d8a

dec_label_pc_32d8a:                               ; preds = %dec_label_pc_32d7f, %dec_label_pc_32d64
  %v0_32d8a = phi i32 [ %v0_32d8a.pre, %dec_label_pc_32d7f ], [ %v0_32d72, %dec_label_pc_32d64 ]
  %v1_32d8a = add i32 %v0_32d8a, -12
  %v2_32d8a = inttoptr i32 %v1_32d8a to i32*
  %v3_32d8a = load i32, i32* %v2_32d8a, align 4
  %v3_32d8d = xor i32 %v3_32d8a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_32d8d = icmp eq i32 %v3_32d8d, 0
  store i32 %v3_32d8d, i32* @eax, align 8
  br i1 %v4_32d8d, label %bb, label %dec_label_pc_32d96

bb:                                               ; preds = %dec_label_pc_32d8a
  %v1_32d94 = call i32 @function_32d9b()
  br label %dec_label_pc_32d96

dec_label_pc_32d96:                               ; preds = %bb, %dec_label_pc_32d8a
  %v2_32d94 = phi i32 [ %v1_32d94, %bb ], [ %v3_32d8d, %dec_label_pc_32d8a ]
  ret i32 %v2_32d94

; uselistorder directives
  uselistorder i8 1, { 0, 23, 24, 10, 1, 2, 3, 15, 14, 13, 25, 16, 19, 17, 18, 21, 4, 5, 6, 11, 9, 7, 8, 12, 20, 22 }
}

define i32 @function_32d9b() local_unnamed_addr {
dec_label_pc_32d9b:
  %v0_32d9c = load i32, i32* @eax, align 8
  ret i32 %v0_32d9c
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE9copy_implIPSA_EEvT_SI_SH_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_32d9d:
  ret i32 %arg2
}

define i32 @function_32ddc(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ddc:
  %v0_32ddc = load i32, i32* @ebp, align 4
  %v1_32ddc = add i32 %v0_32ddc, -28
  %v2_32ddc = inttoptr i32 %v1_32ddc to i32*
  %v3_32ddc = load i32, i32* %v2_32ddc, align 4
  %v1_32de2 = call i32 @unknown_65edd(i32 %v3_32ddc)
  %v0_32de7 = load i32, i32* @ebp, align 4
  %v1_32de7 = add i32 %v0_32de7, -12
  %v2_32de7 = inttoptr i32 %v1_32de7 to i32*
  %v3_32de7 = load i32, i32* %v2_32de7, align 4
  %v3_32dea = xor i32 %v3_32de7, ptrtoint ([3 x i8]* @3 to i32)
  %v4_32dea = icmp eq i32 %v3_32dea, 0
  store i32 %v3_32dea, i32* @eax, align 8
  br i1 %v4_32dea, label %bb, label %dec_label_pc_32df3

bb:                                               ; preds = %dec_label_pc_32ddc
  %v1_32df1 = call i32 @function_32df8()
  br label %dec_label_pc_32df3

dec_label_pc_32df3:                               ; preds = %bb, %dec_label_pc_32ddc
  %v2_32df1 = phi i32 [ %v1_32df1, %bb ], [ %v3_32dea, %dec_label_pc_32ddc ]
  ret i32 %v2_32df1
}

define i32 @function_32df8() local_unnamed_addr {
dec_label_pc_32df8:
  %v0_32df9 = load i32, i32* @eax, align 8
  ret i32 %v0_32df9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot3IbRKSsSE_jNS2_8functionIFbSE_SE_jEEEEENS4_5mutexEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32dfa:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32e23

bb:                                               ; preds = %dec_label_pc_32dfa
  %v3_32e21 = call i32 @function_32e28(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32e23

dec_label_pc_32e23:                               ; preds = %bb, %dec_label_pc_32dfa
  %v4_32e21 = phi i32 [ %v3_32e21, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32dfa ]
  ret i32 %v4_32e21
}

define i32 @function_32e28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e28:
  %v0_32e29 = load i32, i32* @eax, align 8
  ret i32 %v0_32e29
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEEC1ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e2a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32e53

bb:                                               ; preds = %dec_label_pc_32e2a
  %v3_32e51 = call i32 @function_32e58(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32e53

dec_label_pc_32e53:                               ; preds = %bb, %dec_label_pc_32e2a
  %v4_32e51 = phi i32 [ %v3_32e51, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32e2a ]
  ret i32 %v4_32e51
}

define i32 @function_32e58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32e58:
  %v0_32e59 = load i32, i32* @eax, align 8
  ret i32 %v0_32e59
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot3IbRKSsSF_jNS2_8functionIFbSF_SF_jEEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e5a:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32e7d

bb:                                               ; preds = %dec_label_pc_32e5a
  %v2_32e7b = call i32 @function_32e82(i32 %arg1)
  br label %dec_label_pc_32e7d

dec_label_pc_32e7d:                               ; preds = %bb, %dec_label_pc_32e5a
  %v3_32e7b = phi i32 [ %v2_32e7b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32e5a ]
  ret i32 %v3_32e7b
}

define i32 @function_32e82(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e82:
  %v0_32e83 = load i32, i32* @eax, align 8
  ret i32 %v0_32e83
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot3IbRKSsSG_jNS3_8functionIFbSG_SG_jEEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e84:
  ret i32 134217727
}

define i32 @function_32ea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ea4:
  %v0_32ea4 = load i32, i32* @edx, align 8
  %v4_32ea4 = icmp eq i32 %v0_32ea4, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_32ea4, label %bb, label %dec_label_pc_32ea4.dec_label_pc_32eac_crit_edge

dec_label_pc_32ea4.dec_label_pc_32eac_crit_edge:  ; preds = %dec_label_pc_32ea4
  %v2_32eaa.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_32eac

bb:                                               ; preds = %dec_label_pc_32ea4
  %v1_32eaa = call i32 @function_32eb1()
  br label %dec_label_pc_32eac

dec_label_pc_32eac:                               ; preds = %dec_label_pc_32ea4.dec_label_pc_32eac_crit_edge, %bb
  %v2_32eaa = phi i32 [ %v2_32eaa.pre, %dec_label_pc_32ea4.dec_label_pc_32eac_crit_edge ], [ %v1_32eaa, %bb ]
  ret i32 %v2_32eaa

; uselistorder directives
  uselistorder label %dec_label_pc_32eac, { 1, 0 }
}

define i32 @function_32eb1() local_unnamed_addr {
dec_label_pc_32eb1:
  %v0_32eb2 = load i32, i32* @eax, align 8
  ret i32 %v0_32eb2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IbxNS2_8functionIFbxEEEEENS4_5mutexEEEEEEEC1ERKSL_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32eb4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32edd

bb:                                               ; preds = %dec_label_pc_32eb4
  %v3_32edb = call i32 @function_32ee2(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32edd

dec_label_pc_32edd:                               ; preds = %bb, %dec_label_pc_32eb4
  %v4_32edb = phi i32 [ %v3_32edb, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32eb4 ]
  ret i32 %v4_32edb
}

define i32 @function_32ee2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ee2:
  %v0_32ee3 = load i32, i32* @eax, align 8
  ret i32 %v0_32ee3
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IbxNS3_8functionIFbxEEEEENS4_5mutexEEEEEEEEEC1ERKSP_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ee4:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32f0d

bb:                                               ; preds = %dec_label_pc_32ee4
  %v3_32f0b = call i32 @function_32f12(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32f0d

dec_label_pc_32f0d:                               ; preds = %bb, %dec_label_pc_32ee4
  %v4_32f0b = phi i32 [ %v3_32f0b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32ee4 ]
  ret i32 %v4_32f0b
}

define i32 @function_32f12(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f12:
  %v0_32f13 = load i32, i32* @eax, align 8
  ret i32 %v0_32f13
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IbxNS2_8functionIFbxEEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f14:
  ret i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32))
}

define i32 @function_32f36(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f36:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_32f3b() local_unnamed_addr {
dec_label_pc_32f3b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32f3b = load i32, i32* %ecx.global-to-local, align 4
  %v1_32f3b = add i32 %v0_32f3b, -1
  store i32 %v1_32f3b, i32* %ecx.global-to-local, align 4
  %v0_32f3d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_32f3d
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IbxNS3_8functionIFbxEEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f3e:
  ret i32 134217727
}

define i32 @function_32f6a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f6a:
  %v0_32f6c = load i32, i32* @eax, align 8
  ret i32 %v0_32f6c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1IvRKSsNS2_8functionIFvSE_EEEEENS4_5mutexEEEEEEEC1ERKSN_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f6e:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_32f97

bb:                                               ; preds = %dec_label_pc_32f6e
  %v3_32f95 = call i32 @function_32f9c(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_32f97

dec_label_pc_32f97:                               ; preds = %bb, %dec_label_pc_32f6e
  %v4_32f95 = phi i32 [ %v3_32f95, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_32f6e ]
  ret i32 %v4_32f95
}

define i32 @function_32f9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f9c:
  %v0_32f9d = load i32, i32* @eax, align 8
  ret i32 %v0_32f9d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IvRKSsNS3_8functionIFvSG_EEEEENS4_5mutexEEEEEEEEEC1ERKSR_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f9e:
  ret i32 %arg2
}

define i32 @function_32fb4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32fb4:
  %v2_32fb4 = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_32fb4 = load i32, i32* @eax, align 8
  %v4_32fb4 = trunc i32 %v3_32fb4 to i8
  %v5_32fb4 = add i8 %v4_32fb4, %v2_32fb4
  %v21_32fb4 = inttoptr i32 %v3_32fb4 to i8*
  store i8 %v5_32fb4, i8* %v21_32fb4, align 1
  %v0_32fb6 = load i32, i32* @eax, align 8
  %v1_32fb6 = load i32, i32* @ebp, align 4
  %v2_32fb6 = add i32 %v1_32fb6, -12
  %v3_32fb6 = inttoptr i32 %v2_32fb6 to i32*
  store i32 %v0_32fb6, i32* %v3_32fb6, align 4
  %v0_32fbb = load i32, i32* @ebp, align 4
  %v1_32fbb = add i32 %v0_32fbb, -12
  %v2_32fbb = inttoptr i32 %v1_32fbb to i32*
  %v3_32fbb = load i32, i32* %v2_32fbb, align 4
  %v3_32fbe = xor i32 %v3_32fbb, ptrtoint ([3 x i8]* @3 to i32)
  %v4_32fbe = icmp eq i32 %v3_32fbe, 0
  store i32 %v3_32fbe, i32* @eax, align 8
  br i1 %v4_32fbe, label %bb, label %dec_label_pc_32fc7

bb:                                               ; preds = %dec_label_pc_32fb4
  %v1_32fc5 = call i32 @function_32fcc()
  br label %dec_label_pc_32fc7

dec_label_pc_32fc7:                               ; preds = %bb, %dec_label_pc_32fb4
  %v2_32fc5 = phi i32 [ %v1_32fc5, %bb ], [ %v3_32fbe, %dec_label_pc_32fb4 ]
  ret i32 %v2_32fc5
}

define i32 @function_32fcc() local_unnamed_addr {
dec_label_pc_32fcc:
  %v0_32fcd = load i32, i32* @eax, align 8
  ret i32 %v0_32fcd
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKS1_IN5boost8signals26detail15slot_meta_groupENS2_8optionalIiEEESt14_List_iteratorINS2_10shared_ptrINS4_15connection_bodyIS8_NS3_5slot1IvRKSsNS2_8functionIFvSF_EEEEENS3_5mutexEEEEEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32fce:
  ret i32 0
}

define i32 @function_32fe6(i32 %arg1) local_unnamed_addr {
dec_label_pc_32fe6:
  %v0_32fe6 = load i32, i32* @ebp, align 4
  %v1_32fe6 = add i32 %v0_32fe6, 1
  store i32 %v1_32fe6, i32* @ebp, align 4
  %v0_32fe8 = load i32, i32* @eax, align 8
  %v3_32fe8 = xor i32 %v0_32fe8, ptrtoint ([3 x i8]* @3 to i32)
  %v4_32fe8 = icmp eq i32 %v3_32fe8, 0
  store i32 %v3_32fe8, i32* @eax, align 8
  br i1 %v4_32fe8, label %bb, label %dec_label_pc_32ff1

bb:                                               ; preds = %dec_label_pc_32fe6
  %v1_32fef = call i32 @function_32ff6()
  br label %dec_label_pc_32ff1

dec_label_pc_32ff1:                               ; preds = %bb, %dec_label_pc_32fe6
  %v2_32fef = phi i32 [ %v1_32fef, %bb ], [ %v3_32fe8, %dec_label_pc_32fe6 ]
  ret i32 %v2_32fef
}

define i32 @function_32ff6() local_unnamed_addr {
dec_label_pc_32ff6:
  %v0_32ff7 = load i32, i32* @eax, align 8
  ret i32 %v0_32ff7
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1IvRKSsNS3_8functionIFvSG_EEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ff8:
  store i32 134217727, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_33020

bb:                                               ; preds = %dec_label_pc_32ff8
  %v2_3301e = call i32 @function_33025(i32 %arg1)
  br label %dec_label_pc_33020

dec_label_pc_33020:                               ; preds = %bb, %dec_label_pc_32ff8
  %v3_3301e = phi i32 [ %v2_3301e, %bb ], [ 134217727, %dec_label_pc_32ff8 ]
  ret i32 %v3_3301e

; uselistorder directives
  uselistorder i32 134217727, { 2, 3, 0, 1 }
}

define i32 @function_33025(i32 %arg1) local_unnamed_addr {
dec_label_pc_33025:
  %v0_33026 = load i32, i32* @eax, align 8
  ret i32 %v0_33026
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKS2_IN5boost8signals26detail15slot_meta_groupENS3_8optionalIiEEESt14_List_iteratorINS3_10shared_ptrINS5_15connection_bodyIS9_NS4_5slot1ISsPKcNS3_8functionIFSsSG_EEEEENS4_5mutexEEEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33028:
  ret i32 0
}

define i32 @function_33042(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33042:
  %v2_33042 = load i32, i32* @edi, align 8
  %v3_33042 = add i32 %v2_33042, 1
  %v18_33042 = inttoptr i32 %v2_33042 to i32*
  store i32 %v3_33042, i32* %v18_33042, align 4
  %v0_33044 = load i32, i32* @ebp, align 4
  %v1_33044 = add i32 %v0_33044, -12
  %v2_33044 = inttoptr i32 %v1_33044 to i32*
  %v3_33044 = load i32, i32* %v2_33044, align 4
  %v4_33047 = icmp eq i32 %v3_33044, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_33047, label %bb, label %dec_label_pc_33042.dec_label_pc_33050_crit_edge

dec_label_pc_33042.dec_label_pc_33050_crit_edge:  ; preds = %dec_label_pc_33042
  %v2_3304e.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_33050

bb:                                               ; preds = %dec_label_pc_33042
  %v1_3304e = call i32 @function_33055()
  br label %dec_label_pc_33050

dec_label_pc_33050:                               ; preds = %dec_label_pc_33042.dec_label_pc_33050_crit_edge, %bb
  %v2_3304e = phi i32 [ %v2_3304e.pre, %dec_label_pc_33042.dec_label_pc_33050_crit_edge ], [ %v1_3304e, %bb ]
  ret i32 %v2_3304e

; uselistorder directives
  uselistorder label %dec_label_pc_33050, { 1, 0 }
}

define i32 @function_33055() local_unnamed_addr {
dec_label_pc_33055:
  %v0_33056 = load i32, i32* @eax, align 8
  ret i32 %v0_33056
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33058:
  %v1_33081 = call i32 @unknown_661ee(i32 %arg1)
  %v10_33086 = icmp ult i32 %v1_33081, %arg2
  %v1_33089 = zext i1 %v10_33086 to i32
  %v3_33089 = and i32 %v1_33081, -256
  %v4_33089 = or i32 %v1_33089, %v3_33089
  %v5_3308c = icmp eq i1 %v10_33086, false
  br i1 %v5_3308c, label %bb, label %dec_label_pc_33090

bb:                                               ; preds = %dec_label_pc_33058
  %v1_3308e = call i32 @function_33095()
  br label %dec_label_pc_33090

dec_label_pc_33090:                               ; preds = %bb, %dec_label_pc_33058
  %v2_3308e = phi i32 [ %v1_3308e, %bb ], [ %v4_33089, %dec_label_pc_33058 ]
  ret i32 %v2_3308e

; uselistorder directives
  uselistorder i1 %v10_33086, { 1, 0 }
}

define i32 @function_33095() local_unnamed_addr {
dec_label_pc_33095:
  %v0_33095 = load i32, i32* @ebp, align 4
  %v1_33095 = add i32 %v0_33095, -32
  %v2_33095 = inttoptr i32 %v1_33095 to i32*
  %v3_33095 = load i32, i32* %v2_33095, align 4
  %v2_33098 = mul i32 %v3_33095, 16
  ret i32 %v2_33098

; uselistorder directives
  uselistorder i32 16, { 0, 8, 9, 10, 1, 2, 3, 4, 6, 7, 5 }
}

define i32 @function_330b3() local_unnamed_addr {
dec_label_pc_330b3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_330b3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_330b3 = add i32 %v0_330b3, -1
  store i32 %v1_330b3, i32* %ecx.global-to-local, align 4
  %v0_330b5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_330b5
}

define i32 @_ZN5boost11multi_index6detail21obj_scope_guard_impl2INS_8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EENS4_15store_n_objectsILj10EEENS4_19default_grow_policyESaISD_EEEMSI_FvPSD_jESJ_jE7executeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_330b6:
  %v1_330d2 = add i32 %arg1, 8
  %v2_330d2 = inttoptr i32 %v1_330d2 to i32*
  %v3_330d2 = load i32, i32* %v2_330d2, align 4
  %v1_330d5 = urem i32 %v3_330d2, 2
  %v2_330d5 = icmp eq i32 %v1_330d5, 0
  %.pre = add i32 %arg1, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  br i1 %v2_330d5, label %dec_label_pc_330b6.dec_label_pc_33101_crit_edge, label %dec_label_pc_330dc

dec_label_pc_330b6.dec_label_pc_33101_crit_edge:  ; preds = %dec_label_pc_330b6
  br label %dec_label_pc_33101

dec_label_pc_330dc:                               ; preds = %dec_label_pc_330b6
  br label %dec_label_pc_33101

dec_label_pc_33101:                               ; preds = %dec_label_pc_330b6.dec_label_pc_33101_crit_edge, %dec_label_pc_330dc
  %v2_33116.pre-phi.in = add i32 %arg1, 12
  %v2_33116.pre-phi = inttoptr i32 %v2_33116.pre-phi.in to i32*
  %v1_33104 = add i32 %arg1, ptrtoint (i8** @global_var_14.1904 to i32)
  %v2_33104 = inttoptr i32 %v1_33104 to i32*
  %v3_33104 = load i32, i32* %v2_33104, align 4
  %v1_3310a = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v2_3310a = inttoptr i32 %v1_3310a to i32*
  %v3_3310a = load i32, i32* %v2_3310a, align 4
  %v3_33110 = load i32, i32* %.pre3, align 4
  %v3_33116 = load i32, i32* %v2_33116.pre-phi, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_33134

bb:                                               ; preds = %dec_label_pc_33101
  %v2_33119 = add i32 %v3_33116, %v3_33110
  %v4_33132 = call i32 @function_33139(i32 %v2_33119, i32 %v3_3310a, i32 %v3_33104)
  br label %dec_label_pc_33134

dec_label_pc_33134:                               ; preds = %bb, %dec_label_pc_33101
  %v5_33132 = phi i32 [ %v4_33132, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_33101 ]
  ret i32 %v5_33132

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_33101, { 1, 0 }
}

define i32 @function_33139(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33139:
  %v0_3313f = load i32, i32* @eax, align 8
  ret i32 %v0_3313f
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE8copy_raiIPSA_Lb0EEEvT_SI_SH_RKNS_17integral_constantIbXT0_EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33140:
  %v7_3317d = call i32 @unknown_4c77f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3318e

bb:                                               ; preds = %dec_label_pc_33140
  %v1_3318c = call i32 @function_33193()
  br label %dec_label_pc_3318e

dec_label_pc_3318e:                               ; preds = %bb, %dec_label_pc_33140
  %v2_3318c = phi i32 [ %v1_3318c, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_33140 ]
  ret i32 %v2_3318c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_33193() local_unnamed_addr {
dec_label_pc_33193:
  %v0_33194 = load i32, i32* @eax, align 8
  ret i32 %v0_33194
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost10shared_ptrINS2_8signals26detail15connection_bodyISt4pairINS5_15slot_meta_groupENS2_8optionalIiEEENS4_5slot1ISsPKcNS2_8functionIFSsSE_EEEEENS4_5mutexEEEEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_33196:
  store i32 268435455, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_331be

bb:                                               ; preds = %dec_label_pc_33196
  %v2_331bc = call i32 @function_331c3(i32 %arg1)
  br label %dec_label_pc_331be

dec_label_pc_331be:                               ; preds = %bb, %dec_label_pc_33196
  %v3_331bc = phi i32 [ %v2_331bc, %bb ], [ 268435455, %dec_label_pc_33196 ]
  ret i32 %v3_331bc

; uselistorder directives
  uselistorder i32 268435455, { 0, 4, 1, 5, 2, 6, 3, 7 }
}

define i32 @function_331c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_331c3:
  %v0_331c4 = load i32, i32* @eax, align 8
  ret i32 %v0_331c4
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_331e8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_331d4_type* @global_var_331d4.2066 to i32), i32* %arg1, align 4
  %v1_3320e = call i32 @function_35124(i32 %tmp99)
  %v1_3321d = call i32 @function_3322a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_331d4_type* @global_var_331d4.2066 to i32), { 1, 0 }
}

define i32 @function_3322a() local_unnamed_addr {
dec_label_pc_3322a:
  %v0_3322a = load i32, i32* @ebp, align 4
  %v1_3322a = add i32 %v0_3322a, -12
  %v2_3322a = inttoptr i32 %v1_3322a to i32*
  %v3_3322a = load i32, i32* %v2_3322a, align 4
  %v3_3322d = xor i32 %v3_3322a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3322d = icmp eq i32 %v3_3322d, 0
  store i32 %v3_3322d, i32* @eax, align 8
  br i1 %v4_3322d, label %bb, label %dec_label_pc_33236

bb:                                               ; preds = %dec_label_pc_3322a
  %v1_33234 = call i32 @function_3323b()
  br label %dec_label_pc_33236

dec_label_pc_33236:                               ; preds = %bb, %dec_label_pc_3322a
  %v2_33234 = phi i32 [ %v1_33234, %bb ], [ %v3_3322d, %dec_label_pc_3322a ]
  ret i32 %v2_33234
}

define i32 @function_3323b() local_unnamed_addr {
dec_label_pc_3323b:
  %v0_3323c = load i32, i32* @eax, align 8
  ret i32 %v0_3323c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32 %arg1) {
dec_label_pc_3323e:
  %v1_3325b = call i32 @unknown_66426(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_3327b() local_unnamed_addr {
dec_label_pc_3327b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3327b = load i32, i32* %ecx.global-to-local, align 4
  %v1_3327b = add i32 %v0_3327b, -1
  store i32 %v1_3327b, i32* %ecx.global-to-local, align 4
  %v0_3327d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3327d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_332a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3328c_type* @global_var_3328c.2065 to i32), i32* %arg1, align 4
  %v1_332c6 = call i32 @function_351dc(i32 %tmp99)
  %v1_332d5 = call i32 @function_332e2()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3328c_type* @global_var_3328c.2065 to i32), { 1, 0 }
}

declare i32 @_ZdlPv.1385(i32, i32) local_unnamed_addr

define i32 @function_332e2() local_unnamed_addr {
dec_label_pc_332e2:
  %v0_332e2 = load i32, i32* @ebp, align 4
  %v1_332e2 = add i32 %v0_332e2, -12
  %v2_332e2 = inttoptr i32 %v1_332e2 to i32*
  %v3_332e2 = load i32, i32* %v2_332e2, align 4
  %v3_332e5 = xor i32 %v3_332e2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_332e5 = icmp eq i32 %v3_332e5, 0
  store i32 %v3_332e5, i32* @eax, align 8
  br i1 %v4_332e5, label %bb, label %dec_label_pc_332ee

bb:                                               ; preds = %dec_label_pc_332e2
  %v1_332ec = call i32 @function_332f3()
  br label %dec_label_pc_332ee

dec_label_pc_332ee:                               ; preds = %bb, %dec_label_pc_332e2
  %v2_332ec = phi i32 [ %v1_332ec, %bb ], [ %v3_332e5, %dec_label_pc_332e2 ]
  ret i32 %v2_332ec
}

define i32 @function_332f3() local_unnamed_addr {
dec_label_pc_332f3:
  %v0_332f4 = load i32, i32* @eax, align 8
  ret i32 %v0_332f4
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_332f6:
  %v1_33313 = call i32 @unknown_66596(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_33328(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33328:
  %v0_33328 = load i32, i32* @eax, align 8
  %v1_33328 = add i32 %v0_33328, ptrtoint (i8** @global_var_14.1904 to i32)
  %v10_33328 = icmp eq i32 %v1_33328, 0
  store i32 %v1_33328, i32* @eax, align 8
  br i1 %v10_33328, label %bb, label %dec_label_pc_3332f

bb:                                               ; preds = %dec_label_pc_33328
  %v1_3332d = call i32 @function_33334()
  br label %dec_label_pc_3332f

dec_label_pc_3332f:                               ; preds = %bb, %dec_label_pc_33328
  %v2_3332d = phi i32 [ %v1_3332d, %bb ], [ %v1_33328, %dec_label_pc_33328 ]
  ret i32 %v2_3332d

; uselistorder directives
  uselistorder i32 ptrtoint (i8** @global_var_14.1904 to i32), { 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_33334() local_unnamed_addr {
dec_label_pc_33334:
  %v0_33335 = load i32, i32* @eax, align 8
  ret i32 %v0_33335
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_33358:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33344_type* @global_var_33344.2064 to i32), i32* %arg1, align 4
  %v1_3337e = call i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE6unlockEv(i32 %tmp99)
  %v1_3338d = call i32 @function_3339a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE6unlockEv, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33344_type* @global_var_33344.2064 to i32), { 1, 0 }
}

define i32 @function_3339a() local_unnamed_addr {
dec_label_pc_3339a:
  %v0_3339a = load i32, i32* @ebp, align 4
  %v1_3339a = add i32 %v0_3339a, -12
  %v2_3339a = inttoptr i32 %v1_3339a to i32*
  %v3_3339a = load i32, i32* %v2_3339a, align 4
  %v3_3339d = xor i32 %v3_3339a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3339d = icmp eq i32 %v3_3339d, 0
  store i32 %v3_3339d, i32* @eax, align 8
  br i1 %v4_3339d, label %bb, label %dec_label_pc_333a6

bb:                                               ; preds = %dec_label_pc_3339a
  %v1_333a4 = call i32 @function_333ab()
  br label %dec_label_pc_333a6

dec_label_pc_333a6:                               ; preds = %bb, %dec_label_pc_3339a
  %v2_333a4 = phi i32 [ %v1_333a4, %bb ], [ %v3_3339d, %dec_label_pc_3339a ]
  ret i32 %v2_333a4
}

define i32 @function_333ab() local_unnamed_addr {
dec_label_pc_333ab:
  %v0_333ac = load i32, i32* @eax, align 8
  ret i32 %v0_333ac
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED0Ev(i32 %arg1) {
dec_label_pc_333ae:
  %v1_333cb = call i32 @unknown_66706(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_333ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_333ec:
  %v0_333ed = load i32, i32* @eax, align 8
  ret i32 %v0_333ed
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_33410:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_333fc_type* @global_var_333fc.2063 to i32), i32* %arg1, align 4
  %v1_33436 = call i32 @function_3534c(i32 %tmp99)
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_333fc_type* @global_var_333fc.2063 to i32), { 1, 0 }
}

define i32 @function_33447(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33447:
  %v0_33447 = load i32, i32* @ebp, align 4
  %v1_33447 = add i32 %v0_33447, -28
  %v2_33447 = inttoptr i32 %v1_33447 to i32*
  %v3_33447 = load i32, i32* %v2_33447, align 4
  ret i32 %v3_33447
}

define i32 @function_33452() local_unnamed_addr {
dec_label_pc_33452:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %tmp96
}

define i32 @function_33462() local_unnamed_addr {
dec_label_pc_33462:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33462 = load i32, i32* %ecx.global-to-local, align 4
  %v1_33462 = add i32 %v0_33462, -1
  store i32 %v1_33462, i32* %ecx.global-to-local, align 4
  %v0_33464 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33464
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_33466:
  %v1_33483 = call i32 @unknown_66876(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_3348c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3348c:
  %v0_3348c = load i32, i32* @eax, align 8
  %v2_3348c = add i32 %v0_3348c, 36
  %v16_3348c = and i32 %v2_3348c, 255
  %v18_3348c = and i32 %v0_3348c, -256
  %v19_3348c = or i32 %v16_3348c, %v18_3348c
  ret i32 %v19_3348c

; uselistorder directives
  uselistorder i32 %v0_3348c, { 1, 0 }
}

define i32 @function_334a3() local_unnamed_addr {
dec_label_pc_334a3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_334a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_334a3 = add i32 %v0_334a3, -1
  store i32 %v1_334a3, i32* %ecx.global-to-local, align 4
  %v0_334a5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_334a5
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_334c8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_334b4_type* @global_var_334b4.2062 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_334ee = call i32 @function_35404(i32 %tmp99)
  %v1_334fd = call i32 @function_3350a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_334b4_type* @global_var_334b4.2062 to i32), { 1, 0 }
}

define i32 @function_3350a() local_unnamed_addr {
dec_label_pc_3350a:
  %v0_3350a = load i32, i32* @ebp, align 4
  %v1_3350a = add i32 %v0_3350a, -12
  %v2_3350a = inttoptr i32 %v1_3350a to i32*
  %v3_3350a = load i32, i32* %v2_3350a, align 4
  %v3_3350d = xor i32 %v3_3350a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3350d = icmp eq i32 %v3_3350d, 0
  store i32 %v3_3350d, i32* @eax, align 8
  br i1 %v4_3350d, label %bb, label %dec_label_pc_33516

bb:                                               ; preds = %dec_label_pc_3350a
  %v1_33514 = call i32 @function_3351b()
  br label %dec_label_pc_33516

dec_label_pc_33516:                               ; preds = %bb, %dec_label_pc_3350a
  %v2_33514 = phi i32 [ %v1_33514, %bb ], [ %v3_3350d, %dec_label_pc_3350a ]
  ret i32 %v2_33514
}

define i32 @function_3351b() local_unnamed_addr {
dec_label_pc_3351b:
  %v0_3351c = load i32, i32* @eax, align 8
  ret i32 %v0_3351c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED0Ev() {
dec_label_pc_3351e:
  %eax.global-to-local = alloca i32, align 4
  %v17_33521 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v17_33521
}

define i32 @function_33526(i32 %arg1) local_unnamed_addr {
dec_label_pc_33526:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_33526 = load i32, i32* @ecx, align 4
  %v1_33526 = add i32 %v0_33526, -1587157947
  %v2_33526 = inttoptr i32 %v1_33526 to i8*
  %v3_33526 = load i8, i8* %v2_33526, align 1
  %v5_33526 = trunc i32 %v0_33526 to i8
  %v6_33526 = or i8 %v3_33526, %v5_33526
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_33526, i8* %v2_33526, align 1
  %v0_3352c = load i32, i32* @eax, align 8
  %v1_3352c = trunc i32 %v0_3352c to i8
  %v2_3352c = load i1, i1* %cf.global-to-local, align 1
  %v3_3352c = zext i1 %v2_3352c to i8
  %v4_3352c = add i8 %v3_3352c, %v1_3352c
  %v19_3352c = icmp ule i8 %v4_3352c, %v1_3352c
  %v21_3352c = icmp eq i1 %v2_3352c, %v19_3352c
  store i1 %v21_3352c, i1* %cf.global-to-local, align 1
  %v22_3352c = zext i8 %v4_3352c to i32
  %v24_3352c = and i32 %v0_3352c, -256
  %v25_3352c = or i32 %v22_3352c, %v24_3352c
  store i32 %v25_3352c, i32* %eax.global-to-local, align 8
  %v1_3352e = inttoptr i32 %v25_3352c to i8*
  %v2_3352e = load i8, i8* %v1_3352e, align 1
  %v5_3352e = add i8 %v2_3352e, %v4_3352c
  %v10_3352e = icmp ult i8 %v5_3352e, %v2_3352e
  store i1 %v10_3352e, i1* %cf.global-to-local, align 1
  store i8 %v5_3352e, i8* %v1_3352e, align 1
  %v22_3352e = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v22_3352e

; uselistorder directives
  uselistorder i8 %v2_3352e, { 1, 0 }
  uselistorder i8 %v4_3352c, { 0, 2, 1 }
  uselistorder i8 %v1_3352c, { 1, 0 }
  uselistorder i32 -1587157947, { 1, 10, 4, 0, 7, 6, 8, 9, 2, 3, 5, 11 }
}

define i32 @function_33530(i32 %arg1) local_unnamed_addr {
dec_label_pc_33530:
  %v0_33530 = load i32, i32* @eax, align 8
  %v1_33530 = load i32, i32* @ebp, align 4
  %v2_33530 = add i32 %v1_33530, -12
  %v3_33530 = inttoptr i32 %v2_33530 to i32*
  store i32 %v0_33530, i32* %v3_33530, align 4
  %v0_33535 = load i32, i32* @ebp, align 4
  %v1_33535 = add i32 %v0_33535, -28
  %v2_33535 = inttoptr i32 %v1_33535 to i32*
  %v3_33535 = load i32, i32* %v2_33535, align 4
  %v1_3353b = call i32 @unknown_669e6(i32 %v3_33535)
  %v0_33540 = load i32, i32* @ebp, align 4
  %v1_33540 = add i32 %v0_33540, -28
  %v2_33540 = inttoptr i32 %v1_33540 to i32*
  %v3_33540 = load i32, i32* %v2_33540, align 4
  ret i32 %v3_33540
}

define i32 @function_3355b() local_unnamed_addr {
dec_label_pc_3355b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3355b = load i32, i32* %ecx.global-to-local, align 4
  %v1_3355b = add i32 %v0_3355b, -1
  store i32 %v1_3355b, i32* %ecx.global-to-local, align 4
  %v0_3355d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3355d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_33580:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3356c_type* @global_var_3356c.2061 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_335a6 = call i32 @function_354bc(i32 %tmp99)
  %v1_335b5 = call i32 @function_335c2()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_3356c_type* @global_var_3356c.2061 to i32), { 1, 0 }
}

define i32 @function_335c2() local_unnamed_addr {
dec_label_pc_335c2:
  %v0_335c2 = load i32, i32* @ebp, align 4
  %v1_335c2 = add i32 %v0_335c2, -12
  %v2_335c2 = inttoptr i32 %v1_335c2 to i32*
  %v3_335c2 = load i32, i32* %v2_335c2, align 4
  ret i32 %v3_335c2
}

define i32 @function_335c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_335c8:
  %zf.global-to-local = alloca i1, align 1
  %v0_335c8 = load i32, i32* @eax, align 8
  %v1_335c8 = trunc i32 %v0_335c8 to i8
  %v2_335c8 = load i1, i1* @cf, align 1
  %v3_335c8 = zext i1 %v2_335c8 to i8
  %v4_335c8 = add i8 %v3_335c8, %v1_335c8
  %v13_335c8 = icmp eq i8 %v4_335c8, 0
  store i1 %v13_335c8, i1* %zf.global-to-local, align 1
  %v22_335c8 = zext i8 %v4_335c8 to i32
  %v24_335c8 = and i32 %v0_335c8, -256
  %v25_335c8 = or i32 %v22_335c8, %v24_335c8
  store i32 %v25_335c8, i32* @eax, align 8
  %v1_335ca = inttoptr i32 %v25_335c8 to i8*
  %v2_335ca = load i8, i8* %v1_335ca, align 1
  %v5_335ca = add i8 %v2_335ca, %v4_335c8
  %v15_335ca = icmp eq i8 %v5_335ca, 0
  store i1 %v15_335ca, i1* %zf.global-to-local, align 1
  store i8 %v5_335ca, i8* %v1_335ca, align 1
  %v0_335cc = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_335cc, label %bb, label %dec_label_pc_335c8.dec_label_pc_335ce_crit_edge

dec_label_pc_335c8.dec_label_pc_335ce_crit_edge:  ; preds = %dec_label_pc_335c8
  %v2_335cc.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_335ce

bb:                                               ; preds = %dec_label_pc_335c8
  %v1_335cc = call i32 @function_335d3()
  br label %dec_label_pc_335ce

dec_label_pc_335ce:                               ; preds = %dec_label_pc_335c8.dec_label_pc_335ce_crit_edge, %bb
  %v2_335cc = phi i32 [ %v2_335cc.pre, %dec_label_pc_335c8.dec_label_pc_335ce_crit_edge ], [ %v1_335cc, %bb ]
  ret i32 %v2_335cc

; uselistorder directives
  uselistorder i32 -256, { 77, 25, 49, 11, 12, 42, 13, 142, 51, 52, 53, 44, 14, 58, 59, 60, 57, 61, 62, 63, 64, 67, 68, 69, 15, 47, 4, 5, 48, 98, 16, 18, 54, 82, 17, 78, 79, 55, 56, 105, 106, 83, 50, 19, 70, 71, 84, 85, 86, 166, 90, 91, 167, 92, 93, 94, 76, 20, 21, 101, 102, 103, 104, 87, 89, 43, 22, 88, 107, 108, 72, 23, 97, 110, 113, 114, 73, 115, 117, 143, 144, 145, 120, 24, 121, 122, 123, 95, 124, 112, 127, 26, 172, 29, 136, 130, 131, 177, 132, 27, 133, 125, 10, 140, 28, 30, 135, 128, 126, 174, 175, 31, 32, 109, 33, 147, 34, 148, 156, 157, 138, 111, 129, 35, 139, 38, 6, 36, 37, 153, 154, 155, 159, 149, 161, 162, 163, 1, 150, 164, 151, 39, 152, 176, 41, 158, 40, 7, 8, 9, 45, 2, 46, 0, 80, 81, 3, 74, 75, 65, 66, 96, 99, 100, 146, 116, 118, 119, 160, 141, 134, 173, 137, 165, 168, 169, 170, 171 }
  uselistorder label %dec_label_pc_335ce, { 1, 0 }
}

define i32 @function_335d3() local_unnamed_addr {
dec_label_pc_335d3:
  %v0_335d4 = load i32, i32* @eax, align 8
  ret i32 %v0_335d4
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_335d6:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_335e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_335e8:
  %v0_335e8 = load i32, i32* @eax, align 8
  %v1_335e8 = load i32, i32* @ebp, align 4
  %v2_335e8 = add i32 %v1_335e8, -12
  %v3_335e8 = inttoptr i32 %v2_335e8 to i32*
  store i32 %v0_335e8, i32* %v3_335e8, align 4
  %v0_335ed = load i32, i32* @ebp, align 4
  %v1_335ed = add i32 %v0_335ed, -28
  %v2_335ed = inttoptr i32 %v1_335ed to i32*
  %v3_335ed = load i32, i32* %v2_335ed, align 4
  %v1_335f3 = call i32 @unknown_66b56(i32 %v3_335ed)
  %v0_335f8 = load i32, i32* @ebp, align 4
  %v1_335f8 = add i32 %v0_335f8, -28
  %v2_335f8 = inttoptr i32 %v1_335f8 to i32*
  %v3_335f8 = load i32, i32* %v2_335f8, align 4
  ret i32 %v3_335f8
}

define i32 @function_33613() local_unnamed_addr {
dec_label_pc_33613:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33613 = load i32, i32* %ecx.global-to-local, align 4
  %v1_33613 = add i32 %v0_33613, -1
  store i32 %v1_33613, i32* %ecx.global-to-local, align 4
  %v0_33615 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33615
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_33638:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33624_type* @global_var_33624.2049 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_3365e = call i32 @function_35574(i32 %tmp99)
  %v1_3366d = call i32 @function_3367a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_33624_type* @global_var_33624.2049 to i32), { 1, 0 }
}

declare i32 @_ZdlPv.1395(i32, i32) local_unnamed_addr

define i32 @function_3367a() local_unnamed_addr {
dec_label_pc_3367a:
  %v0_3367a = load i32, i32* @ebp, align 4
  %v1_3367a = add i32 %v0_3367a, -12
  %v2_3367a = inttoptr i32 %v1_3367a to i32*
  %v3_3367a = load i32, i32* %v2_3367a, align 4
  %v3_3367d = xor i32 %v3_3367a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3367d = icmp eq i32 %v3_3367d, 0
  store i32 %v3_3367d, i32* @eax, align 8
  br i1 %v4_3367d, label %bb, label %dec_label_pc_33686

bb:                                               ; preds = %dec_label_pc_3367a
  %v1_33684 = call i32 @function_3368b()
  br label %dec_label_pc_33686

dec_label_pc_33686:                               ; preds = %bb, %dec_label_pc_3367a
  %v2_33684 = phi i32 [ %v1_33684, %bb ], [ %v3_3367d, %dec_label_pc_3367a ]
  ret i32 %v2_33684
}

define i32 @function_3368b() local_unnamed_addr {
dec_label_pc_3368b:
  %v0_3368c = load i32, i32* @eax, align 8
  ret i32 %v0_3368c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32 %arg1) {
dec_label_pc_3368e:
  %v1_336ab = call i32 @unknown_66cc6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_336cb() local_unnamed_addr {
dec_label_pc_336cb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_336cb = load i32, i32* %ecx.global-to-local, align 4
  %v1_336cb = add i32 %v0_336cb, -1
  store i32 %v1_336cb, i32* %ecx.global-to-local, align 4
  %v0_336cd = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_336cd
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_336f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_336dc_type* @global_var_336dc.2048 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_33716 = call i32 @function_3562c(i32 %tmp99)
  %v1_33725 = call i32 @function_33732()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_336dc_type* @global_var_336dc.2048 to i32), { 1, 0 }
}

define i32 @function_33732() local_unnamed_addr {
dec_label_pc_33732:
  %v0_33732 = load i32, i32* @ebp, align 4
  %v1_33732 = add i32 %v0_33732, -12
  %v2_33732 = inttoptr i32 %v1_33732 to i32*
  %v3_33732 = load i32, i32* %v2_33732, align 4
  %v3_33735 = xor i32 %v3_33732, ptrtoint ([3 x i8]* @3 to i32)
  %v4_33735 = icmp eq i32 %v3_33735, 0
  store i32 %v3_33735, i32* @eax, align 8
  br i1 %v4_33735, label %bb, label %dec_label_pc_3373e

bb:                                               ; preds = %dec_label_pc_33732
  %v1_3373c = call i32 @function_33743()
  br label %dec_label_pc_3373e

dec_label_pc_3373e:                               ; preds = %bb, %dec_label_pc_33732
  %v2_3373c = phi i32 [ %v1_3373c, %bb ], [ %v3_33735, %dec_label_pc_33732 ]
  ret i32 %v2_3373c
}

define i32 @function_33743() local_unnamed_addr {
dec_label_pc_33743:
  %v0_33744 = load i32, i32* @eax, align 8
  ret i32 %v0_33744
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32 %arg1) {
dec_label_pc_33746:
  %v1_33763 = call i32 @unknown_66e36(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_33783() local_unnamed_addr {
dec_label_pc_33783:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33783 = load i32, i32* %ecx.global-to-local, align 4
  %v1_33783 = add i32 %v0_33783, -1
  store i32 %v1_33783, i32* %ecx.global-to-local, align 4
  %v0_33785 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33785
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_337a8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33794_type* @global_var_33794.2046 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_337ce = call i32 @function_356e4(i32 %tmp99)
  %v1_337dd = call i32 @function_337ea()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_33794_type* @global_var_33794.2046 to i32), { 1, 0 }
}

define i32 @function_337ea() local_unnamed_addr {
dec_label_pc_337ea:
  %v0_337ea = load i32, i32* @ebp, align 4
  %v1_337ea = add i32 %v0_337ea, -12
  %v2_337ea = inttoptr i32 %v1_337ea to i32*
  %v3_337ea = load i32, i32* %v2_337ea, align 4
  %v3_337ed = xor i32 %v3_337ea, ptrtoint ([3 x i8]* @3 to i32)
  %v4_337ed = icmp eq i32 %v3_337ed, 0
  store i32 %v3_337ed, i32* @eax, align 8
  br i1 %v4_337ed, label %bb, label %dec_label_pc_337f6

bb:                                               ; preds = %dec_label_pc_337ea
  %v1_337f4 = call i32 @function_337fb()
  br label %dec_label_pc_337f6

dec_label_pc_337f6:                               ; preds = %bb, %dec_label_pc_337ea
  %v2_337f4 = phi i32 [ %v1_337f4, %bb ], [ %v3_337ed, %dec_label_pc_337ea ]
  ret i32 %v2_337f4
}

define i32 @function_337fb() local_unnamed_addr {
dec_label_pc_337fb:
  %v0_337fc = load i32, i32* @eax, align 8
  ret i32 %v0_337fc
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEED0Ev(i32 %arg1) {
dec_label_pc_337fe:
  ret i32 %arg1
}

define i32 @function_33809(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33809:
  %v1_33810 = load i32, i32* @ebp, align 4
  %v2_33810 = add i32 %v1_33810, -12
  %v3_33810 = inttoptr i32 %v2_33810 to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_33810, align 4
  %v0_33815 = load i32, i32* @ebp, align 4
  %v1_33815 = add i32 %v0_33815, -28
  %v2_33815 = inttoptr i32 %v1_33815 to i32*
  %v3_33815 = load i32, i32* %v2_33815, align 4
  %v1_3381b = call i32 @unknown_66fa6(i32 %v3_33815)
  %v0_33820 = load i32, i32* @ebp, align 4
  %v1_33820 = add i32 %v0_33820, -28
  %v2_33820 = inttoptr i32 %v1_33820 to i32*
  %v3_33820 = load i32, i32* %v2_33820, align 4
  ret i32 %v3_33820
}

define i32 @function_3383b() local_unnamed_addr {
dec_label_pc_3383b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3383b = load i32, i32* %ecx.global-to-local, align 4
  %v1_3383b = add i32 %v0_3383b, -1
  store i32 %v1_3383b, i32* %ecx.global-to-local, align 4
  %v0_3383d = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3383d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_33860:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_3384c_type* @global_var_3384c.2067 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 8
  %v1_33886 = call i32 @function_3579c(i32 %tmp99)
  %v1_33895 = call i32 @function_338a2()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE7disposeEv, { 1, 0 }
}

define i32 @function_3389c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3389c:
  %v0_3389c = load i32, i32* @eax, align 8
  %v11_3389c = and i32 %v0_3389c, -24
  ret i32 %v11_3389c
}

define i32 @function_338a2() local_unnamed_addr {
dec_label_pc_338a2:
  %v0_338a2 = load i32, i32* @ebp, align 4
  %v1_338a2 = add i32 %v0_338a2, -12
  %v2_338a2 = inttoptr i32 %v1_338a2 to i32*
  %v3_338a2 = load i32, i32* %v2_338a2, align 4
  %v3_338a5 = xor i32 %v3_338a2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_338a5 = icmp eq i32 %v3_338a5, 0
  store i32 %v3_338a5, i32* @eax, align 8
  br i1 %v4_338a5, label %bb, label %dec_label_pc_338ae

bb:                                               ; preds = %dec_label_pc_338a2
  %v1_338ac = call i32 @function_338b3()
  br label %dec_label_pc_338ae

dec_label_pc_338ae:                               ; preds = %bb, %dec_label_pc_338a2
  %v2_338ac = phi i32 [ %v1_338ac, %bb ], [ %v3_338a5, %dec_label_pc_338a2 ]
  ret i32 %v2_338ac
}

define i32 @function_338b3() local_unnamed_addr {
dec_label_pc_338b3:
  %v0_338b4 = load i32, i32* @eax, align 8
  ret i32 %v0_338b4
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEED0Ev(i32 %arg1) {
dec_label_pc_338b6:
  %v1_338d3 = call i32 @unknown_67116(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_338f3() local_unnamed_addr {
dec_label_pc_338f3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_338f3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_338f3 = add i32 %v0_338f3, -1
  store i32 %v1_338f3, i32* %ecx.global-to-local, align 4
  %v0_338f5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_338f5
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEED1Ev(i32 %arg1) {
dec_label_pc_33918:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_3392c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3392c:
  store i1 false, i1* @cf, align 1
  %v0_3392f = load i32, i32* @ebp, align 4
  %v1_3392f = add i32 %v0_3392f, -28
  %v2_3392f = inttoptr i32 %v1_3392f to i32*
  %v3_3392f = load i32, i32* %v2_3392f, align 4
  %v1_33932 = inttoptr i32 %v3_3392f to i32*
  store i32 ptrtoint (%vtable_33904_type* @global_var_33904.2037 to i32), i32* %v1_33932, align 4
  %v0_33938 = load i32, i32* @ebp, align 4
  %v1_33938 = add i32 %v0_33938, -28
  %v2_33938 = inttoptr i32 %v1_33938 to i32*
  %v3_33938 = load i32, i32* %v2_33938, align 4
  store i32 %v3_33938, i32* @eax, align 8
  %v1_3393e = call i32 @function_35854(i32 %v3_33938)
  %v1_3394d = call i32 @function_3395a()
  %v0_3394f = load i32, i32* @ebp, align 4
  %v1_3394f = add i32 %v0_3394f, -28
  %v2_3394f = inttoptr i32 %v1_3394f to i32*
  %v3_3394f = load i32, i32* %v2_3394f, align 4
  ret i32 %v3_3394f

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_33904_type* @global_var_33904.2037 to i32), { 1, 0 }
  uselistorder i1* @cf, { 4, 23, 13, 17, 5, 9, 88, 21, 25, 26, 49, 50, 11, 28, 29, 0, 34, 22, 18, 19, 39, 41, 42, 43, 30, 47, 48, 45, 46, 7, 51, 56, 70, 58, 59, 60, 2, 66, 92, 3, 64, 62, 1, 89, 72, 74, 54, 68, 78, 90, 82, 83, 84, 76, 80, 85, 86, 6, 8, 10, 24, 12, 14, 15, 16, 20, 35, 37, 27, 31, 32, 33, 36, 38, 40, 44, 52, 71, 53, 55, 57, 61, 63, 93, 91, 65, 67, 69, 73, 75, 77, 79, 81, 87 }
}

define i32 @function_3395a() local_unnamed_addr {
dec_label_pc_3395a:
  %v0_3395a = load i32, i32* @ebp, align 4
  %v1_3395a = add i32 %v0_3395a, -12
  %v2_3395a = inttoptr i32 %v1_3395a to i32*
  %v3_3395a = load i32, i32* %v2_3395a, align 4
  %v3_3395d = xor i32 %v3_3395a, ptrtoint ([3 x i8]* @3 to i32)
  %v4_3395d = icmp eq i32 %v3_3395d, 0
  store i32 %v3_3395d, i32* @eax, align 8
  br i1 %v4_3395d, label %bb, label %dec_label_pc_33966

bb:                                               ; preds = %dec_label_pc_3395a
  %v1_33964 = call i32 @function_3396b()
  br label %dec_label_pc_33966

dec_label_pc_33966:                               ; preds = %bb, %dec_label_pc_3395a
  %v2_33964 = phi i32 [ %v1_33964, %bb ], [ %v3_3395d, %dec_label_pc_3395a ]
  ret i32 %v2_33964
}

define i32 @function_3396b() local_unnamed_addr {
dec_label_pc_3396b:
  %v0_3396c = load i32, i32* @eax, align 8
  ret i32 %v0_3396c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEED0Ev(i32 %arg1) {
dec_label_pc_3396e:
  ret i32 %arg1
}

define i32 @function_33988(i32 %arg1) local_unnamed_addr {
dec_label_pc_33988:
  %v0_33988 = load i32, i32* @eax, align 8
  %v1_3398b = call i32 @unknown_67286(i32 %v0_33988)
  %v0_33990 = load i32, i32* @ebp, align 4
  %v1_33990 = add i32 %v0_33990, -28
  %v2_33990 = inttoptr i32 %v1_33990 to i32*
  %v3_33990 = load i32, i32* %v2_33990, align 4
  ret i32 %v3_33990
}

define i32 @function_339ab() local_unnamed_addr {
dec_label_pc_339ab:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_339ab = load i32, i32* %ecx.global-to-local, align 4
  %v1_339ab = add i32 %v0_339ab, -1
  store i32 %v1_339ab, i32* %ecx.global-to-local, align 4
  %v0_339ad = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_339ad
}

define i32 @function_33a28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33a28:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_33a30:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_33a1c_type* @global_var_33a1c.1965 to i32), i32* %arg1, align 4
  %v2_33a65 = call i32 @function_33a72(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_33a1c_type* @global_var_33a1c.1965 to i32), { 1, 0 }
}

define i32 @function_33a72(i32 %arg1) local_unnamed_addr {
dec_label_pc_33a72:
  %v0_33a72 = load i32, i32* @ebp, align 4
  %v1_33a72 = add i32 %v0_33a72, -12
  %v2_33a72 = inttoptr i32 %v1_33a72 to i32*
  %v3_33a72 = load i32, i32* %v2_33a72, align 4
  %v3_33a75 = xor i32 %v3_33a72, ptrtoint ([3 x i8]* @3 to i32)
  %v4_33a75 = icmp eq i32 %v3_33a75, 0
  store i32 %v3_33a75, i32* @eax, align 8
  br i1 %v4_33a75, label %bb, label %dec_label_pc_33a7e

bb:                                               ; preds = %dec_label_pc_33a72
  %v1_33a7c = call i32 @function_33a83()
  br label %dec_label_pc_33a7e

dec_label_pc_33a7e:                               ; preds = %bb, %dec_label_pc_33a72
  %v2_33a7c = phi i32 [ %v1_33a7c, %bb ], [ %v3_33a75, %dec_label_pc_33a72 ]
  ret i32 %v2_33a7c
}

define i32 @function_33a83() local_unnamed_addr {
dec_label_pc_33a83:
  %v0_33a84 = load i32, i32* @eax, align 8
  ret i32 %v0_33a84
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_33a86:
  %v1_33aa3 = call i32 @unknown_674b6(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_33ac3() local_unnamed_addr {
dec_label_pc_33ac3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_33ac3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_33ac3 = add i32 %v0_33ac3, -1
  store i32 %v1_33ac3, i32* %ecx.global-to-local, align 4
  %v0_33ac5 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_33ac5
}

define i32 @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33adc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33b9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_33b9e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_33c2e(i32) local_unnamed_addr

define i32 @function_33cc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_33cc0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33cf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33cf4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33d3e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33d3e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33d64(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d64:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33d70(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d70:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33dcc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33dcc:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_33dd6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_33dd6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @_ZTVN10__cxxabiv120__si_class_type_infoE.1858(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_34068(i32, i32) local_unnamed_addr

define i32 @function_340b2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_340b2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_342b6(i32, i32, i32) local_unnamed_addr

define i32 @function_34364(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34364:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_344f7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_344f7:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3458a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3458a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3460a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3460a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_3461a(i32) local_unnamed_addr

define i32 @function_34676(i32 %arg1) local_unnamed_addr {
dec_label_pc_34676:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34716(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34716:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34782(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34782:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_347ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_347ca:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_34832(i32, i32) local_unnamed_addr

define i32 @function_34888(i32 %arg1) local_unnamed_addr {
dec_label_pc_34888:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3491c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3491c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_349aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_349aa:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_349ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_349ae:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_349b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_349b0:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_349e2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_349e2:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34a16(i32 %arg1) local_unnamed_addr {
dec_label_pc_34a16:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34a2c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34a2c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34a5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_34a5e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

declare i32 @unknown_34aba(i32, i32, i32, i32) local_unnamed_addr

define i32 @function_34b5a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34b5a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34b6a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34b6a:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34be6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34be6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_34d0c:
  %v1_34d26 = add i32 %arg1, 12
  %v2_34d26 = inttoptr i32 %v1_34d26 to i32*
  %v3_34d26 = load i32, i32* %v2_34d26, align 4
  %v1_34d2c = call i32 @unknown_633d3(i32 %v3_34d26)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34d3d

bb:                                               ; preds = %dec_label_pc_34d0c
  %v1_34d3b = call i32 @function_34d42()
  br label %dec_label_pc_34d3d

dec_label_pc_34d3d:                               ; preds = %bb, %dec_label_pc_34d0c
  %v2_34d3b = phi i32 [ %v1_34d3b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_34d0c ]
  ret i32 %v2_34d3b
}

define i32 @function_34d42() local_unnamed_addr {
dec_label_pc_34d42:
  %v0_34d43 = load i32, i32* @eax, align 8
  ret i32 %v0_34d43
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_34d44:
  ret i32 %arg2
}

define i32 @function_34d56(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34d56:
  %v1_34d5c = load i32, i32* @ebp, align 4
  %v2_34d5c = add i32 %v1_34d5c, -12
  %v3_34d5c = inttoptr i32 %v2_34d5c to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_34d5c, align 4
  store i32 0, i32* @eax, align 8
  %v0_34d66 = load i32, i32* @ebp, align 4
  %v1_34d66 = add i32 %v0_34d66, -12
  %v2_34d66 = inttoptr i32 %v1_34d66 to i32*
  %v3_34d66 = load i32, i32* %v2_34d66, align 4
  %v4_34d69 = icmp eq i32 %v3_34d66, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_34d69, label %bb, label %dec_label_pc_34d72

bb:                                               ; preds = %dec_label_pc_34d56
  %v1_34d70 = call i32 @function_34d77()
  br label %dec_label_pc_34d72

dec_label_pc_34d72:                               ; preds = %bb, %dec_label_pc_34d56
  %v2_34d70 = phi i32 [ %v1_34d70, %bb ], [ 0, %dec_label_pc_34d56 ]
  ret i32 %v2_34d70
}

define i32 @function_34d77() local_unnamed_addr {
dec_label_pc_34d77:
  %v0_34d78 = load i32, i32* @eax, align 8
  ret i32 %v0_34d78
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_34d7a:
  %v1_34d94 = add i32 %arg1, 12
  %v2_34d94 = inttoptr i32 %v1_34d94 to i32*
  %v3_34d94 = load i32, i32* %v2_34d94, align 4
  %v1_34d9a = call i32 @unknown_6334b(i32 %v3_34d94)
  ret i32 %v1_34d9a
}

define i32 @function_34da0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34da0:
  %v0_34da0 = load i32, i32* @ebp, align 4
  %v1_34da0 = add i32 %v0_34da0, 1
  store i32 %v1_34da0, i32* @ebp, align 4
  %v0_34da2 = load i32, i32* @eax, align 8
  %v3_34da2 = xor i32 %v0_34da2, ptrtoint ([3 x i8]* @3 to i32)
  %v4_34da2 = icmp eq i32 %v3_34da2, 0
  store i32 %v3_34da2, i32* @eax, align 8
  br i1 %v4_34da2, label %bb, label %dec_label_pc_34dab

bb:                                               ; preds = %dec_label_pc_34da0
  %v1_34da9 = call i32 @function_34db0()
  br label %dec_label_pc_34dab

dec_label_pc_34dab:                               ; preds = %bb, %dec_label_pc_34da0
  %v2_34da9 = phi i32 [ %v1_34da9, %bb ], [ %v3_34da2, %dec_label_pc_34da0 ]
  ret i32 %v2_34da9
}

define i32 @function_34db0() local_unnamed_addr {
dec_label_pc_34db0:
  %v0_34db1 = load i32, i32* @eax, align 8
  ret i32 %v0_34db1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_34db2:
  %eax.global-to-local = alloca i32, align 4
  %v2_34db3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v2_34db3
}

define i32 @function_34db6(i32 %arg1) local_unnamed_addr {
dec_label_pc_34db6:
  %v0_34db7 = load i32, i32* @ebx, align 8
  %v1_34db7 = add i32 %v0_34db7, 1166608453
  %v2_34db7 = inttoptr i32 %v1_34db7 to i8*
  %v3_34db7 = load i8, i8* %v2_34db7, align 1
  %v4_34db7 = load i32, i32* @ecx, align 4
  %v5_34db7 = trunc i32 %v4_34db7 to i8
  %v6_34db7 = sub i8 %v3_34db7, %v5_34db7
  store i8 %v6_34db7, i8* %v2_34db7, align 1
  %v0_34dbf = load i32, i32* @ebp, align 4
  %v1_34dc2 = add i32 %v0_34dbf, 2
  store i32 %v1_34dc2, i32* @ebp, align 4
  %v2_34dca = add i32 %v0_34dbf, -10
  %v3_34dca = inttoptr i32 %v2_34dca to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_34dca, align 4
  store i32 0, i32* @eax, align 8
  %v0_34dd4 = load i32, i32* @ebp, align 4
  %v1_34dd4 = add i32 %v0_34dd4, -12
  %v2_34dd4 = inttoptr i32 %v1_34dd4 to i32*
  %v3_34dd4 = load i32, i32* %v2_34dd4, align 4
  %v4_34dd7 = icmp eq i32 %v3_34dd4, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_34dd7, label %bb, label %dec_label_pc_34de0

bb:                                               ; preds = %dec_label_pc_34db6
  %v1_34dde = call i32 @function_34de5()
  br label %dec_label_pc_34de0

dec_label_pc_34de0:                               ; preds = %bb, %dec_label_pc_34db6
  %v3_34dde = phi i32 [ %v1_34dde, %bb ], [ 0, %dec_label_pc_34db6 ]
  ret i32 %v3_34dde
}

define i32 @function_34de5() local_unnamed_addr {
dec_label_pc_34de5:
  %v0_34de6 = load i32, i32* @eax, align 8
  ret i32 %v0_34de6
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_34de8:
  %v1_34e02 = add i32 %arg1, 12
  %v2_34e02 = inttoptr i32 %v1_34e02 to i32*
  %v3_34e02 = load i32, i32* %v2_34e02, align 4
  %v1_34e08 = call i32 @unknown_62735(i32 %v3_34e02)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34e19

bb:                                               ; preds = %dec_label_pc_34de8
  %v1_34e17 = call i32 @function_34e1e()
  br label %dec_label_pc_34e19

dec_label_pc_34e19:                               ; preds = %bb, %dec_label_pc_34de8
  %v2_34e17 = phi i32 [ %v1_34e17, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_34de8 ]
  ret i32 %v2_34e17
}

define i32 @function_34e1e() local_unnamed_addr {
dec_label_pc_34e1e:
  %v0_34e1f = load i32, i32* @eax, align 8
  ret i32 %v0_34e1f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1) {
dec_label_pc_34e20:
  ret i32 %arg1
}

define i32 @function_34e52() local_unnamed_addr {
dec_label_pc_34e52:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34e52 = load i32, i32* %ecx.global-to-local, align 4
  %v1_34e52 = add i32 %v0_34e52, -1
  store i32 %v1_34e52, i32* %ecx.global-to-local, align 4
  %v0_34e54 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_34e54
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_34e56:
  %v1_34e70 = add i32 %arg1, 12
  %v2_34e70 = inttoptr i32 %v1_34e70 to i32*
  %v3_34e70 = load i32, i32* %v2_34e70, align 4
  %v1_34e76 = call i32 @unknown_626ad(i32 %v3_34e70)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34e87

bb:                                               ; preds = %dec_label_pc_34e56
  %v1_34e85 = call i32 @function_34e8c()
  br label %dec_label_pc_34e87

dec_label_pc_34e87:                               ; preds = %bb, %dec_label_pc_34e56
  %v2_34e85 = phi i32 [ %v1_34e85, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_34e56 ]
  ret i32 %v2_34e85
}

define i32 @function_34e8c() local_unnamed_addr {
dec_label_pc_34e8c:
  %v0_34e8d = load i32, i32* @eax, align 8
  ret i32 %v0_34e8d
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_34e8e:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34ebc

bb:                                               ; preds = %dec_label_pc_34e8e
  %v3_34eba = call i32 @function_34ec1(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_34ebc

dec_label_pc_34ebc:                               ; preds = %bb, %dec_label_pc_34e8e
  %v4_34eba = phi i32 [ %v3_34eba, %bb ], [ 0, %dec_label_pc_34e8e ]
  ret i32 %v4_34eba
}

define i32 @function_34ec1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34ec1:
  %v0_34ec2 = load i32, i32* @eax, align 8
  ret i32 %v0_34ec2
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_34ec4:
  %v1_34ede = add i32 %arg1, 12
  %v2_34ede = inttoptr i32 %v1_34ede to i32*
  %v3_34ede = load i32, i32* %v2_34ede, align 4
  %v1_34ee4 = call i32 @unknown_618b3(i32 %v3_34ede)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34ef5

bb:                                               ; preds = %dec_label_pc_34ec4
  %v1_34ef3 = call i32 @function_34efa()
  br label %dec_label_pc_34ef5

dec_label_pc_34ef5:                               ; preds = %bb, %dec_label_pc_34ec4
  %v2_34ef3 = phi i32 [ %v1_34ef3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_34ec4 ]
  ret i32 %v2_34ef3
}

define i32 @function_34efa() local_unnamed_addr {
dec_label_pc_34efa:
  %v0_34efb = load i32, i32* @eax, align 8
  ret i32 %v0_34efb
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_34efc:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34f2a

bb:                                               ; preds = %dec_label_pc_34efc
  %v3_34f28 = call i32 @function_34f2f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_34f2a

dec_label_pc_34f2a:                               ; preds = %bb, %dec_label_pc_34efc
  %v4_34f28 = phi i32 [ %v3_34f28, %bb ], [ 0, %dec_label_pc_34efc ]
  ret i32 %v4_34f28
}

define i32 @function_34f2f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34f2f:
  %v0_34f30 = load i32, i32* @eax, align 8
  ret i32 %v0_34f30
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_34f32:
  ret i32 %arg1
}

define i32 @function_34f4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f4c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_34f4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f4e:
  %v0_34f52 = call i32 @unknown_6182b()
  %v0_34f57 = load i32, i32* @ebp, align 4
  %v1_34f57 = add i32 %v0_34f57, -12
  %v2_34f57 = inttoptr i32 %v1_34f57 to i32*
  %v3_34f57 = load i32, i32* %v2_34f57, align 4
  %v3_34f5a = xor i32 %v3_34f57, ptrtoint ([3 x i8]* @3 to i32)
  %v4_34f5a = icmp eq i32 %v3_34f5a, 0
  store i32 %v3_34f5a, i32* @eax, align 8
  br i1 %v4_34f5a, label %bb, label %dec_label_pc_34f63

bb:                                               ; preds = %dec_label_pc_34f4e
  %v1_34f61 = call i32 @function_34f68()
  br label %dec_label_pc_34f63

dec_label_pc_34f63:                               ; preds = %bb, %dec_label_pc_34f4e
  %v2_34f61 = phi i32 [ %v1_34f61, %bb ], [ %v3_34f5a, %dec_label_pc_34f4e ]
  ret i32 %v2_34f61
}

define i32 @function_34f68() local_unnamed_addr {
dec_label_pc_34f68:
  %v0_34f69 = load i32, i32* @eax, align 8
  ret i32 %v0_34f69
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_34f6a:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34f98

bb:                                               ; preds = %dec_label_pc_34f6a
  %v3_34f96 = call i32 @function_34f9d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_34f98

dec_label_pc_34f98:                               ; preds = %bb, %dec_label_pc_34f6a
  %v4_34f96 = phi i32 [ %v3_34f96, %bb ], [ 0, %dec_label_pc_34f6a ]
  ret i32 %v4_34f96
}

define i32 @function_34f9d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34f9d:
  %v0_34f9e = load i32, i32* @eax, align 8
  ret i32 %v0_34f9e
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_34fa0:
  %v1_34fba = add i32 %arg1, 12
  %v2_34fba = inttoptr i32 %v1_34fba to i32*
  %v3_34fba = load i32, i32* %v2_34fba, align 4
  %v1_34fc0 = call i32 @unknown_5c5a7(i32 %v3_34fba)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_34fd1

bb:                                               ; preds = %dec_label_pc_34fa0
  %v1_34fcf = call i32 @function_34fd6()
  br label %dec_label_pc_34fd1

dec_label_pc_34fd1:                               ; preds = %bb, %dec_label_pc_34fa0
  %v2_34fcf = phi i32 [ %v1_34fcf, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_34fa0 ]
  ret i32 %v2_34fcf
}

define i32 @function_34fd6() local_unnamed_addr {
dec_label_pc_34fd6:
  %v0_34fd7 = load i32, i32* @eax, align 8
  ret i32 %v0_34fd7
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_34fd8:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35006

bb:                                               ; preds = %dec_label_pc_34fd8
  %v3_35004 = call i32 @function_3500b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_35006

dec_label_pc_35006:                               ; preds = %bb, %dec_label_pc_34fd8
  %v4_35004 = phi i32 [ %v3_35004, %bb ], [ 0, %dec_label_pc_34fd8 ]
  ret i32 %v4_35004
}

define i32 @function_3500b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3500b:
  %v0_3500c = load i32, i32* @eax, align 8
  ret i32 %v0_3500c
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_3500e:
  %v1_35028 = add i32 %arg1, 12
  %v2_35028 = inttoptr i32 %v1_35028 to i32*
  %v3_35028 = load i32, i32* %v2_35028, align 4
  %v1_3502e = call i32 @unknown_5c51f(i32 %v3_35028)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3503f

bb:                                               ; preds = %dec_label_pc_3500e
  %v1_3503d = call i32 @function_35044()
  br label %dec_label_pc_3503f

dec_label_pc_3503f:                               ; preds = %bb, %dec_label_pc_3500e
  %v2_3503d = phi i32 [ %v1_3503d, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3500e ]
  ret i32 %v2_3503d
}

define i32 @function_35044() local_unnamed_addr {
dec_label_pc_35044:
  %v0_35045 = load i32, i32* @eax, align 8
  ret i32 %v0_35045
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_35046:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35074

bb:                                               ; preds = %dec_label_pc_35046
  %v3_35072 = call i32 @function_35079(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_35074

dec_label_pc_35074:                               ; preds = %bb, %dec_label_pc_35046
  %v4_35072 = phi i32 [ %v3_35072, %bb ], [ 0, %dec_label_pc_35046 ]
  ret i32 %v4_35072
}

define i32 @function_35079(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35079:
  %v0_3507a = load i32, i32* @eax, align 8
  ret i32 %v0_3507a
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_3507c:
  %v1_35096 = add i32 %arg1, 12
  %v2_35096 = inttoptr i32 %v1_35096 to i32*
  %v3_35096 = load i32, i32* %v2_35096, align 4
  %v1_3509c = call i32 @unknown_5a4db(i32 %v3_35096)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_350ad

bb:                                               ; preds = %dec_label_pc_3507c
  %v1_350ab = call i32 @function_350b2()
  br label %dec_label_pc_350ad

dec_label_pc_350ad:                               ; preds = %bb, %dec_label_pc_3507c
  %v2_350ab = phi i32 [ %v1_350ab, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3507c ]
  ret i32 %v2_350ab
}

define i32 @function_350b2() local_unnamed_addr {
dec_label_pc_350b2:
  %v0_350b3 = load i32, i32* @eax, align 8
  ret i32 %v0_350b3
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSC_EEEEENS2_5mutexEEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_350b4:
  store i32 0, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_350e2

bb:                                               ; preds = %dec_label_pc_350b4
  %v3_350e0 = call i32 @function_350e7(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_350e2

dec_label_pc_350e2:                               ; preds = %bb, %dec_label_pc_350b4
  %v4_350e0 = phi i32 [ %v3_350e0, %bb ], [ 0, %dec_label_pc_350b4 ]
  ret i32 %v4_350e0
}

declare i32 @__stack_chk_fail.1304(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @function_350e7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_350e7:
  %v0_350e8 = load i32, i32* @eax, align 8
  ret i32 %v0_350e8
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE7disposeEv(i32 %arg1, i32 %arg2) {
dec_label_pc_350ea:
  %v1_35104 = add i32 %arg1, 12
  %v2_35104 = inttoptr i32 %v1_35104 to i32*
  %v3_35104 = load i32, i32* %v2_35104, align 4
  %v1_3510a = call i32 @unknown_59487(i32 %v3_35104)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3511b

bb:                                               ; preds = %dec_label_pc_350ea
  %v1_35119 = call i32 @function_35120()
  br label %dec_label_pc_3511b

dec_label_pc_3511b:                               ; preds = %bb, %dec_label_pc_350ea
  %v2_35119 = phi i32 [ %v1_35119, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_350ea ]
  ret i32 %v2_35119
}

define i32 @function_35120() local_unnamed_addr {
dec_label_pc_35120:
  %v0_35121 = load i32, i32* @eax, align 8
  ret i32 %v0_35121
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_35122:
  %eax.global-to-local = alloca i32, align 4
  %v5_35122 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v5_35122
}

define i32 @function_35124(i32 %arg1) local_unnamed_addr {
dec_label_pc_35124:
  %v0_35127 = load i32, i32* @ebx, align 8
  %v1_35127 = add i32 %v0_35127, 1166608453
  %v2_35127 = inttoptr i32 %v1_35127 to i8*
  %v3_35127 = load i8, i8* %v2_35127, align 1
  %v4_35127 = load i32, i32* @ecx, align 4
  %v5_35127 = trunc i32 %v4_35127 to i8
  %v6_35127 = sub i8 %v3_35127, %v5_35127
  store i8 %v6_35127, i8* %v2_35127, align 1
  %v0_3512f = load i32, i32* @ebp, align 4
  %v1_35132 = add i32 %v0_3512f, 2
  store i32 %v1_35132, i32* @ebp, align 4
  %v2_3513a = add i32 %v0_3512f, -10
  %v3_3513a = inttoptr i32 %v2_3513a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_3513a, align 4
  store i32 0, i32* @eax, align 8
  %v0_35144 = load i32, i32* @ebp, align 4
  %v1_35144 = add i32 %v0_35144, -12
  %v2_35144 = inttoptr i32 %v1_35144 to i32*
  %v3_35144 = load i32, i32* %v2_35144, align 4
  %v4_35147 = icmp eq i32 %v3_35144, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_35147, label %bb, label %dec_label_pc_35150

bb:                                               ; preds = %dec_label_pc_35124
  %v1_3514e = call i32 @function_35155()
  br label %dec_label_pc_35150

dec_label_pc_35150:                               ; preds = %bb, %dec_label_pc_35124
  %v3_3514e = phi i32 [ %v1_3514e, %bb ], [ 0, %dec_label_pc_35124 ]
  ret i32 %v3_3514e

; uselistorder directives
  uselistorder i32 1166608453, { 0, 1, 2, 8, 7, 6, 5, 3, 4, 9, 11, 14, 10, 13, 12 }
}

define i32 @function_35155() local_unnamed_addr {
dec_label_pc_35155:
  %v0_35156 = load i32, i32* @eax, align 8
  ret i32 %v0_35156
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_35158:
  ret i32 %arg1
}

define i32 @function_35165(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35165:
  %v1_3516a = load i32, i32* @ebp, align 4
  %v2_3516a = add i32 %v1_3516a, -12
  %v3_3516a = inttoptr i32 %v2_3516a to i32*
  store i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32* %v3_3516a, align 4
  %v0_3516f = load i32, i32* @ebp, align 4
  %v1_3516f = add i32 %v0_3516f, -28
  %v2_3516f = inttoptr i32 %v1_3516f to i32*
  %v3_3516f = load i32, i32* %v2_3516f, align 4
  %v1_35172 = add i32 %v3_3516f, 12
  %v2_35172 = inttoptr i32 %v1_35172 to i32*
  %v3_35172 = load i32, i32* %v2_35172, align 4
  %v1_35178 = call i32 @unknown_5827b(i32 %v3_35172)
  %v0_3517d = load i32, i32* @ebp, align 4
  %v1_3517d = add i32 %v0_3517d, -12
  %v2_3517d = inttoptr i32 %v1_3517d to i32*
  %v3_3517d = load i32, i32* %v2_3517d, align 4
  %v3_35180 = xor i32 %v3_3517d, ptrtoint ([3 x i8]* @3 to i32)
  %v4_35180 = icmp eq i32 %v3_35180, 0
  store i32 %v3_35180, i32* @eax, align 8
  br i1 %v4_35180, label %bb, label %dec_label_pc_35189

bb:                                               ; preds = %dec_label_pc_35165
  %v1_35187 = call i32 @function_3518e()
  br label %dec_label_pc_35189

dec_label_pc_35189:                               ; preds = %bb, %dec_label_pc_35165
  %v2_35187 = phi i32 [ %v1_35187, %bb ], [ %v3_35180, %dec_label_pc_35165 ]
  ret i32 %v2_35187
}

define i32 @function_3518e() local_unnamed_addr {
dec_label_pc_3518e:
  %v0_3518f = load i32, i32* @eax, align 8
  ret i32 %v0_3518f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSC_jNS_8functionIFbSC_SC_jEEEEENS2_5mutexEEEE11get_deleterERKSt9type_info(i32 %arg1) {
dec_label_pc_35190:
  ret i32 %arg1
}

define i32 @function_351c2() local_unnamed_addr {
dec_label_pc_351c2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_351c2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_351c2 = add i32 %v0_351c2, -1
  store i32 %v1_351c2, i32* %ecx.global-to-local, align 4
  %v0_351c4 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_351c4
}

declare i32 @unknown_351c5(i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE9connectedEv(i32 %arg1) {
dec_label_pc_351c6:
  ret i32 ptrtoint (i32* @global_var_14a1.1905 to i32)
}

define i32 @function_351dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_351dc:
  %v0_351de = load i32, i32* @ebp, align 4
  %v1_351de = add i32 %v0_351de, -28
  %v2_351de = inttoptr i32 %v1_351de to i32*
  %v3_351de = load i32, i32* %v2_351de, align 4
  %v1_351e1 = add i32 %v3_351de, 44
  %v1_351e8 = add i32 %v0_351de, -20
  %v2_351ee = call i32 @unknown_48e94(i32 %v1_351e8, i32 %v1_351e1)
  %v0_351f3 = load i32, i32* @ebp, align 4
  %v1_351f3 = add i32 %v0_351f3, -13
  %v1_351f9 = call i32 @unknown_6a8dc(i32 %v1_351f3)
  %v0_351fe = load i32, i32* @ebp, align 4
  %v1_351fe = add i32 %v0_351fe, -13
  %v2_351fe = inttoptr i32 %v1_351fe to i8*
  %v3_351fe = load i8, i8* %v2_351fe, align 1
  %v4_351fe = zext i8 %v3_351fe to i32
  %v1_35206 = add i32 %v0_351fe, -28
  %v2_35206 = inttoptr i32 %v1_35206 to i32*
  %v3_35206 = load i32, i32* %v2_35206, align 4
  %v2_3520c = call i32 @unknown_6a906(i32 %v3_35206, i32 %v4_351fe)
  %v0_35211 = load i32, i32* @ebp, align 4
  %v1_35211 = add i32 %v0_35211, -28
  %v2_35211 = inttoptr i32 %v1_35211 to i32*
  %v3_35211 = load i32, i32* %v2_35211, align 4
  %v1_35217 = call i32 @unknown_4409e(i32 %v3_35211)
  %v0_3521e = load i32, i32* @ebp, align 4
  %v1_3521e = add i32 %v0_3521e, -20
  %v1_35224 = call i32 @unknown_48ee4(i32 %v1_3521e)
  store i32 %v1_35217, i32* @eax, align 8
  %v0_3522b = load i32, i32* @ebp, align 4
  %v1_3522b = add i32 %v0_3522b, -12
  %v2_3522b = inttoptr i32 %v1_3522b to i32*
  %v3_3522b = load i32, i32* %v2_3522b, align 4
  %v4_3522e = icmp eq i32 %v3_3522b, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_3522e, label %bb, label %dec_label_pc_35237

bb:                                               ; preds = %dec_label_pc_351dc
  %v1_35235 = call i32 @function_35255()
  store i32 %v1_35235, i32* @eax, align 8
  br label %dec_label_pc_35237

dec_label_pc_35237:                               ; preds = %bb, %dec_label_pc_351dc
  %v0_35237 = call i32 @function_35250()
  ret i32 %v0_35237

; uselistorder directives
  uselistorder i32 -13, { 14, 15, 19, 20, 21, 26, 18, 16, 17, 38, 39, 40, 41, 42, 43, 0, 1, 2, 30, 31, 32, 3, 4, 5, 33, 34, 35, 36, 37, 44, 45, 46, 70, 71, 72, 22, 47, 24, 25, 49, 61, 62, 50, 52, 53, 54, 55, 27, 64, 56, 51, 6, 75, 7, 57, 58, 59, 60, 8, 67, 68, 69, 76, 79, 80, 77, 78, 65, 73, 74, 66, 23, 28, 29, 48, 9, 63, 10, 11, 12, 13 }
}

define i32 @function_3523a() local_unnamed_addr {
dec_label_pc_3523a:
  %eax.global-to-local = alloca i32, align 4
  %v0_3523a = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3523a
}

define i32 @function_35250() local_unnamed_addr {
dec_label_pc_35250:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35255() local_unnamed_addr {
dec_label_pc_35255:
  %v0_3525a = load i32, i32* @eax, align 8
  ret i32 %v0_3525a
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE4lockEv(i32 %arg1) {
dec_label_pc_3525c:
  %v1_35276 = add i32 %arg1, 44
  %v1_3527c = call i32 @unknown_44366(i32 %v1_35276)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3528d

bb:                                               ; preds = %dec_label_pc_3525c
  %v1_3528b = call i32 @function_35292()
  br label %dec_label_pc_3528d

dec_label_pc_3528d:                               ; preds = %bb, %dec_label_pc_3525c
  %v2_3528b = phi i32 [ %v1_3528b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3525c ]
  ret i32 %v2_3528b
}

define i32 @function_35292() local_unnamed_addr {
dec_label_pc_35292:
  %v0_35293 = load i32, i32* @eax, align 8
  ret i32 %v0_35293
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE6unlockEv(i32 %arg1) {
dec_label_pc_35294:
  %v1_352ae = add i32 %arg1, 44
  %v1_352b4 = call i32 @unknown_443d4(i32 %v1_352ae)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_352c5

bb:                                               ; preds = %dec_label_pc_35294
  %v1_352c3 = call i32 @function_352ca()
  br label %dec_label_pc_352c5

dec_label_pc_352c5:                               ; preds = %bb, %dec_label_pc_35294
  %v2_352c3 = phi i32 [ %v1_352c3, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35294 ]
  ret i32 %v2_352c3
}

define i32 @function_352ca() local_unnamed_addr {
dec_label_pc_352ca:
  %v0_352cb = load i32, i32* @eax, align 8
  ret i32 %v0_352cb
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE9connectedEv(i32 %arg1) {
dec_label_pc_352cc:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_352e7 = add i32 %arg1, 44
  %v2_352ee = ptrtoint i32* %stack_var_-24 to i32
  %v2_352f4 = call i32 @unknown_48f9a(i32 %v2_352ee, i32 %v1_352e7)
  %v2_352f9 = ptrtoint i32* %stack_var_-17 to i32
  %v1_352ff = call i32 @unknown_6a9e2(i32 %v2_352f9)
  %v3_35304 = load i32, i32* %stack_var_-17, align 4
  %v4_35304 = urem i32 %v3_35304, 256
  %v2_35312 = call i32 @unknown_6ab74(i32 %arg1, i32 %v4_35304)
  %v1_3531d = call i32 @unknown_441a4(i32 %arg1)
  %v1_3532a = call i32 @unknown_48fea(i32 %v2_352ee)
  store i32 %v1_3531d, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_3533d

bb:                                               ; preds = %dec_label_pc_352cc
  %v1_3533b = call i32 @function_3535b()
  store i32 %v1_3533b, i32* @eax, align 8
  br label %dec_label_pc_3533d

dec_label_pc_3533d:                               ; preds = %bb, %dec_label_pc_352cc
  %v0_3533d = call i32 @function_35356()
  ret i32 %v0_3533d

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_35340() local_unnamed_addr {
dec_label_pc_35340:
  %eax.global-to-local = alloca i32, align 4
  %v0_35340 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35340
}

define i32 @function_3534c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3534c:
  %v0_3534c = load i32, i32* @ebx, align 8
  ret i32 %v0_3534c
}

define i32 @function_35356() local_unnamed_addr {
dec_label_pc_35356:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_3535b() local_unnamed_addr {
dec_label_pc_3535b:
  %v0_35360 = load i32, i32* @eax, align 8
  ret i32 %v0_35360
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE4lockEv(i32 %arg1) {
dec_label_pc_35362:
  %v1_3537c = add i32 %arg1, 44
  %v1_35382 = call i32 @unknown_4446c(i32 %v1_3537c)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35393

bb:                                               ; preds = %dec_label_pc_35362
  %v1_35391 = call i32 @function_35398()
  br label %dec_label_pc_35393

dec_label_pc_35393:                               ; preds = %bb, %dec_label_pc_35362
  %v2_35391 = phi i32 [ %v1_35391, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35362 ]
  ret i32 %v2_35391
}

define i32 @function_35398() local_unnamed_addr {
dec_label_pc_35398:
  %v0_35399 = load i32, i32* @eax, align 8
  ret i32 %v0_35399
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE6unlockEv(i32 %arg1) {
dec_label_pc_3539a:
  %v1_353b4 = add i32 %arg1, 44
  %v1_353ba = call i32 @unknown_444da(i32 %v1_353b4)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_353cb

bb:                                               ; preds = %dec_label_pc_3539a
  %v1_353c9 = call i32 @function_353d0()
  br label %dec_label_pc_353cb

dec_label_pc_353cb:                               ; preds = %bb, %dec_label_pc_3539a
  %v2_353c9 = phi i32 [ %v1_353c9, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_3539a ]
  ret i32 %v2_353c9
}

define i32 @function_353d0() local_unnamed_addr {
dec_label_pc_353d0:
  %v0_353d1 = load i32, i32* @eax, align 8
  ret i32 %v0_353d1
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE9connectedEv(i32 %arg1) {
dec_label_pc_353d2:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_353ed = add i32 %arg1, 44
  %v2_353f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_353fa = call i32 @unknown_490a0(i32 %v2_353f4, i32 %v1_353ed)
  %v2_353ff = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_353ff
}

define i32 @function_35404(i32 %arg1) local_unnamed_addr {
dec_label_pc_35404:
  %eax.global-to-local = alloca i32, align 4
  %v0_35404 = load i32, i32* @eax, align 8
  %v11_35404 = and i32 %v0_35404, -24
  store i32 %v11_35404, i32* %eax.global-to-local, align 8
  %v2_35409 = load i8, i8* bitcast (i32* @edi to i8*), align 8
  %v3_35409 = load i32, i32* @ecx, align 4
  %v4_35409 = trunc i32 %v3_35409 to i8
  %v5_35409 = add i8 %v4_35409, %v2_35409
  %v20_35409 = load i32, i32* @edi, align 8
  %v21_35409 = inttoptr i32 %v20_35409 to i8*
  store i8 %v5_35409, i8* %v21_35409, align 1
  %v0_3540d = load i32, i32* %eax.global-to-local, align 8
  %v0_35412 = load i32, i32* @ebp, align 4
  %v1_35412 = add i32 %v0_35412, -28
  %v2_35412 = inttoptr i32 %v1_35412 to i32*
  %v3_35412 = load i32, i32* %v2_35412, align 4
  store i32 %v3_35412, i32* %eax.global-to-local, align 8
  %sext = mul i32 %v0_3540d, 16777216
  %v2_35418 = sdiv i32 %sext, 16777216
  %v3_35418 = call i32 @unknown_6ade2(i32 %v3_35412, i32 %v2_35418)
  store i32 %v3_35418, i32* %eax.global-to-local, align 8
  %v0_3541d = load i32, i32* @ebp, align 4
  %v1_3541d = add i32 %v0_3541d, -28
  %v2_3541d = inttoptr i32 %v1_3541d to i32*
  %v3_3541d = load i32, i32* %v2_3541d, align 4
  store i32 %v3_3541d, i32* %eax.global-to-local, align 8
  %v1_35423 = call i32 @unknown_442aa(i32 %v3_3541d)
  %v0_3542a = load i32, i32* @ebp, align 4
  %v1_3542a = add i32 %v0_3542a, -20
  store i32 %v1_3542a, i32* %eax.global-to-local, align 8
  %v1_35430 = call i32 @unknown_490f0(i32 %v1_3542a)
  store i32 %v1_35423, i32* @eax, align 8
  %v0_35437 = load i32, i32* @ebp, align 4
  %v1_35437 = add i32 %v0_35437, -12
  %v2_35437 = inttoptr i32 %v1_35437 to i32*
  %v3_35437 = load i32, i32* %v2_35437, align 4
  %v4_3543a = icmp eq i32 %v3_35437, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_3543a, label %bb, label %dec_label_pc_35443

bb:                                               ; preds = %dec_label_pc_35404
  %v1_35441 = call i32 @function_35461()
  store i32 %v1_35441, i32* @eax, align 8
  br label %dec_label_pc_35443

dec_label_pc_35443:                               ; preds = %bb, %dec_label_pc_35404
  %v0_35443 = call i32 @function_3545c()
  store i32 %v0_35443, i32* %eax.global-to-local, align 8
  ret i32 %v0_35443

; uselistorder directives
  uselistorder i32 -20, { 12, 13, 14, 25, 26, 27, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 71, 72, 73, 64, 65, 66, 67, 0, 1, 2, 56, 57, 58, 59, 40, 55, 68, 69, 70, 47, 39, 74, 75, 90, 76, 77, 78, 79, 60, 61, 62, 63, 81, 82, 110, 83, 84, 85, 7, 8, 102, 103, 104, 86, 87, 88, 89, 118, 119, 111, 109, 95, 21, 80, 3, 4, 115, 114, 15, 93, 94, 16, 116, 117, 5, 17, 113, 112, 18, 19, 20, 105, 106, 96, 97, 98, 107, 108, 22, 23, 24, 120, 121, 99, 100, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 49, 48, 50, 6, 9, 91, 92, 101, 10, 11 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 34, 37, 35, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50, 53, 52, 55, 54, 57, 56, 59, 58, 61, 60, 63, 62, 65, 64, 68, 66, 69, 67, 72, 70, 73, 71, 75, 74, 77, 76, 79, 78, 81, 80, 83, 82, 85, 84, 87, 86, 89, 88, 91, 90, 93, 92, 95, 94, 97, 96, 100, 98, 101, 99, 103, 102, 105, 104, 107, 106, 109, 108, 112, 110, 113, 111, 116, 114, 117, 115, 120, 118, 121, 119, 124, 122, 125, 123, 127, 126, 129, 128, 131, 130, 133, 132, 135, 134 }
  uselistorder i32* @edi, { 4, 1, 0, 5, 6, 17, 8, 11, 7, 12, 13, 2, 16, 18, 9, 10, 14, 15, 3 }
}

define i32 @function_35446() local_unnamed_addr {
dec_label_pc_35446:
  %eax.global-to-local = alloca i32, align 4
  %v0_35446 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35446
}

define i32 @function_3545c() local_unnamed_addr {
dec_label_pc_3545c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35461() local_unnamed_addr {
dec_label_pc_35461:
  %v0_35466 = load i32, i32* @eax, align 8
  ret i32 %v0_35466
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE4lockEv(i32 %arg1) {
dec_label_pc_35468:
  %v1_35482 = add i32 %arg1, 44
  %v1_35488 = call i32 @unknown_44572(i32 %v1_35482)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35499

bb:                                               ; preds = %dec_label_pc_35468
  %v1_35497 = call i32 @function_3549e()
  br label %dec_label_pc_35499

dec_label_pc_35499:                               ; preds = %bb, %dec_label_pc_35468
  %v2_35497 = phi i32 [ %v1_35497, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35468 ]
  ret i32 %v2_35497

; uselistorder directives
  uselistorder i32 44, { 5, 6, 7, 8, 9, 11, 10, 12, 0, 13, 1, 16, 2, 14, 3, 17, 4, 15 }
}

define i32 @function_3549e() local_unnamed_addr {
dec_label_pc_3549e:
  %v0_3549f = load i32, i32* @eax, align 8
  ret i32 %v0_3549f
}

define i32 @_ZN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE6unlockEv(i32 %arg1) {
dec_label_pc_354a0:
  ret i32 %arg1
}

define i32 @function_354bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_354bc:
  %v0_354c0 = call i32 @unknown_445e0()
  %v0_354c5 = load i32, i32* @ebp, align 4
  %v1_354c5 = add i32 %v0_354c5, -12
  %v2_354c5 = inttoptr i32 %v1_354c5 to i32*
  %v3_354c5 = load i32, i32* %v2_354c5, align 4
  %v3_354c8 = xor i32 %v3_354c5, ptrtoint ([3 x i8]* @3 to i32)
  %v4_354c8 = icmp eq i32 %v3_354c8, 0
  store i32 %v3_354c8, i32* @eax, align 8
  br i1 %v4_354c8, label %bb, label %dec_label_pc_354d1

bb:                                               ; preds = %dec_label_pc_354bc
  %v1_354cf = call i32 @function_354d6()
  br label %dec_label_pc_354d1

dec_label_pc_354d1:                               ; preds = %bb, %dec_label_pc_354bc
  %v2_354cf = phi i32 [ %v1_354cf, %bb ], [ %v3_354c8, %dec_label_pc_354bc ]
  ret i32 %v2_354cf
}

define i32 @function_354d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_354d4:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_354d6() local_unnamed_addr {
dec_label_pc_354d6:
  %v0_354d7 = load i32, i32* @eax, align 8
  ret i32 %v0_354d7
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_354d8:
  %v1_354f2 = add i32 %arg1, 12
  %v2_354f2 = inttoptr i32 %v1_354f2 to i32*
  %v3_354f2 = load i32, i32* %v2_354f2, align 4
  %v1_354f8 = call i32 @unknown_4b045(i32 %v3_354f2)
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35509

bb:                                               ; preds = %dec_label_pc_354d8
  %v1_35507 = call i32 @function_3550e()
  br label %dec_label_pc_35509

dec_label_pc_35509:                               ; preds = %bb, %dec_label_pc_354d8
  %v2_35507 = phi i32 [ %v1_35507, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_354d8 ]
  ret i32 %v2_35507

; uselistorder directives
  uselistorder i32 12, { 12, 101, 156, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 82, 83, 22, 23, 24, 85, 25, 26, 27, 3, 78, 88, 89, 90, 28, 29, 57, 98, 99, 100, 30, 93, 94, 95, 96, 97, 31, 32, 102, 103, 33, 105, 106, 107, 36, 34, 35, 37, 125, 126, 127, 167, 38, 39, 40, 86, 41, 108, 168, 81, 42, 113, 131, 115, 43, 45, 44, 109, 46, 118, 47, 48, 112, 49, 120, 121, 122, 50, 128, 129, 130, 132, 133, 136, 51, 139, 140, 123, 11, 142, 143, 8, 4, 52, 53, 55, 145, 54, 114, 148, 149, 150, 56, 5, 152, 180, 173, 151, 58, 63, 155, 9, 159, 59, 147, 60, 61, 62, 158, 163, 164, 165, 166, 157, 181, 160, 161, 162, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 1, 10, 79, 80, 84, 87, 91, 92, 104, 6, 7, 110, 111, 116, 117, 119, 124, 134, 135, 137, 138, 141, 144, 146, 182, 176, 177, 154, 153, 179, 183, 178, 169, 170, 171, 172, 174, 175, 2 }
}

define i32 @function_3550e() local_unnamed_addr {
dec_label_pc_3550e:
  %v0_3550f = load i32, i32* @eax, align 8
  ret i32 %v0_3550f
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_35510:
  ret i32 0
}

define i32 @function_3553a() local_unnamed_addr {
dec_label_pc_3553a:
  %zf.global-to-local = alloca i1, align 1
  %v2_3553a = load i8, i8* bitcast (i32* @eax to i8*), align 8
  %v3_3553a = load i32, i32* @eax, align 8
  %v4_3553a = trunc i32 %v3_3553a to i8
  %v5_3553a = add i8 %v4_3553a, %v2_3553a
  %v15_3553a = icmp eq i8 %v5_3553a, 0
  store i1 %v15_3553a, i1* %zf.global-to-local, align 1
  %v21_3553a = inttoptr i32 %v3_3553a to i8*
  store i8 %v5_3553a, i8* %v21_3553a, align 1
  %v0_3553c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_3553c, label %bb, label %dec_label_pc_3553a.dec_label_pc_3553e_crit_edge

dec_label_pc_3553a.dec_label_pc_3553e_crit_edge:  ; preds = %dec_label_pc_3553a
  %v2_3553c.pre = load i32, i32* @eax, align 8
  br label %dec_label_pc_3553e

bb:                                               ; preds = %dec_label_pc_3553a
  %v1_3553c = call i32 @function_35543()
  br label %dec_label_pc_3553e

dec_label_pc_3553e:                               ; preds = %dec_label_pc_3553a.dec_label_pc_3553e_crit_edge, %bb
  %v2_3553c = phi i32 [ %v2_3553c.pre, %dec_label_pc_3553a.dec_label_pc_3553e_crit_edge ], [ %v1_3553c, %bb ]
  ret i32 %v2_3553c

; uselistorder directives
  uselistorder i8* bitcast (i32* @eax to i8*), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52 }
  uselistorder label %dec_label_pc_3553e, { 1, 0 }
}

define i32 @function_35543() local_unnamed_addr {
dec_label_pc_35543:
  %v0_35544 = load i32, i32* @eax, align 8
  ret i32 %v0_35544
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35546:
  %v4_35546 = add i32 %arg1, -28
  %v1_3554b = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.1903(i32 %v4_35546)
  ret i32 %v1_3554b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.1903, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.1903(i32 %arg1) {
dec_label_pc_3554e:
  ret i32 0
}

define i32 @function_35574(i32 %arg1) local_unnamed_addr {
dec_label_pc_35574:
  %v0_35574 = load i32, i32* @eax, align 8
  ret i32 %v0_35574
}

define i32 @function_35575() local_unnamed_addr {
dec_label_pc_35575:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_35575 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35575 = add i32 %v0_35575, -28
  %v2_35575 = inttoptr i32 %v1_35575 to i32*
  %v3_35575 = load i32, i32* %v2_35575, align 4
  %v0_3557c = load i32, i32* %ebx.global-to-local, align 8
  %v2_3557f = call i32 @unknown_470cc(i32 %v0_3557c, i32 %v3_35575)
  %v1_35586 = icmp eq i32 %v0_3557c, 0
  br i1 %v1_35586, label %dec_label_pc_35594, label %dec_label_pc_3558a

dec_label_pc_3558a:                               ; preds = %dec_label_pc_35575
  %v1_3558a = add i32 %v0_3557c, 28
  br label %dec_label_pc_35594

dec_label_pc_35594:                               ; preds = %dec_label_pc_35575, %dec_label_pc_3558a
  %storemerge = phi i32 [ %v1_3558a, %dec_label_pc_3558a ], [ 0, %dec_label_pc_35575 ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_35594 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35594 = add i32 %v0_35594, -12
  %v2_35594 = inttoptr i32 %v1_35594 to i32*
  %v3_35594 = load i32, i32* %v2_35594, align 4
  %v4_35597 = icmp eq i32 %v3_35594, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_35597, label %bb, label %dec_label_pc_355a0

bb:                                               ; preds = %dec_label_pc_35594
  %v1_3559e = call i32 @function_355bb()
  store i32 %v1_3559e, i32* @eax, align 8
  br label %dec_label_pc_355a0

dec_label_pc_355a0:                               ; preds = %bb, %dec_label_pc_35594
  %v0_355a0 = call i32 @function_355b6()
  ret i32 %v0_355a0

; uselistorder directives
  uselistorder i32 %v0_3557c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_35594, { 1, 0 }
}

define i32 @function_355b6() local_unnamed_addr {
dec_label_pc_355b6:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_355bb() local_unnamed_addr {
dec_label_pc_355bb:
  %v0_355c1 = load i32, i32* @eax, align 8
  ret i32 %v0_355c1
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_355c2:
  %v4_355c2 = add i32 %arg1, -28
  %v1_355c7 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %v4_355c2)
  ret i32 %v1_355c7

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, { 1, 0 }
  uselistorder i32 -28, { 1, 4, 2, 65, 66, 67, 68, 69, 234, 139, 140, 141, 142, 172, 173, 70, 71, 136, 137, 146, 178, 179, 180, 144, 145, 147, 148, 181, 528, 529, 530, 182, 183, 184, 186, 187, 188, 189, 190, 191, 73, 194, 203, 150, 151, 152, 133, 72, 205, 206, 207, 208, 209, 210, 127, 74, 575, 107, 108, 106, 224, 225, 226, 227, 228, 229, 230, 231, 232, 5, 261, 212, 213, 214, 215, 216, 233, 235, 237, 238, 239, 195, 246, 247, 248, 76, 77, 78, 79, 80, 81, 82, 75, 83, 364, 365, 366, 618, 619, 620, 621, 622, 623, 624, 625, 130, 131, 292, 6, 299, 300, 196, 197, 198, 185, 251, 252, 192, 193, 254, 255, 256, 257, 258, 306, 304, 305, 307, 308, 199, 200, 201, 268, 7, 8, 269, 270, 9, 10, 274, 275, 168, 169, 276, 277, 278, 279, 280, 281, 284, 282, 283, 285, 11, 286, 287, 288, 271, 12, 217, 289, 385, 159, 219, 298, 386, 387, 301, 302, 303, 85, 86, 313, 314, 315, 316, 317, 318, 319, 320, 13, 321, 14, 84, 249, 250, 253, 322, 323, 324, 325, 87, 89, 90, 91, 326, 327, 309, 310, 607, 608, 609, 610, 611, 153, 154, 336, 337, 272, 338, 612, 88, 341, 342, 343, 345, 346, 344, 220, 221, 138, 347, 348, 15, 16, 17, 353, 354, 355, 356, 357, 358, 359, 240, 241, 132, 18, 93, 94, 388, 92, 242, 370, 371, 311, 202, 368, 369, 376, 372, 373, 374, 375, 19, 20, 21, 377, 378, 379, 380, 328, 329, 381, 382, 383, 384, 389, 390, 391, 392, 174, 393, 394, 330, 99, 395, 396, 397, 400, 401, 402, 403, 404, 22, 23, 24, 408, 409, 410, 411, 412, 413, 414, 361, 362, 25, 262, 363, 26, 415, 416, 419, 420, 95, 96, 97, 98, 263, 264, 259, 260, 104, 422, 423, 424, 331, 332, 333, 334, 335, 427, 425, 426, 428, 398, 399, 243, 405, 406, 407, 417, 101, 100, 102, 430, 481, 105, 431, 27, 432, 433, 434, 437, 438, 441, 440, 442, 28, 418, 443, 446, 447, 448, 450, 293, 294, 295, 296, 103, 110, 429, 454, 455, 456, 457, 460, 459, 461, 470, 471, 472, 473, 435, 640, 641, 474, 475, 476, 477, 478, 479, 480, 439, 642, 643, 444, 56, 55, 505, 506, 507, 508, 509, 510, 511, 512, 487, 631, 451, 488, 489, 297, 583, 584, 490, 491, 492, 493, 465, 466, 467, 468, 469, 535, 536, 494, 495, 496, 497, 498, 109, 500, 501, 658, 657, 659, 644, 637, 445, 111, 645, 646, 647, 112, 503, 482, 483, 484, 485, 486, 581, 113, 547, 513, 514, 515, 516, 499, 462, 116, 541, 542, 543, 544, 421, 548, 549, 569, 570, 571, 502, 452, 453, 504, 119, 120, 29, 449, 30, 31, 32, 525, 526, 650, 534, 33, 34, 527, 114, 545, 546, 566, 567, 568, 651, 652, 35, 653, 654, 655, 656, 115, 660, 648, 649, 117, 36, 37, 118, 550, 586, 587, 588, 551, 552, 553, 554, 589, 590, 591, 592, 593, 594, 595, 555, 597, 598, 600, 601, 599, 602, 603, 556, 557, 558, 123, 124, 38, 559, 560, 561, 562, 626, 627, 121, 39, 40, 122, 563, 531, 532, 533, 135, 629, 630, 125, 126, 662, 661, 663, 573, 574, 41, 576, 577, 578, 564, 565, 579, 580, 596, 155, 604, 605, 606, 128, 42, 613, 614, 615, 616, 129, 134, 143, 43, 44, 149, 45, 46, 156, 157, 158, 165, 160, 161, 162, 163, 164, 175, 166, 204, 236, 167, 47, 48, 170, 171, 49, 50, 273, 176, 177, 290, 291, 312, 211, 51, 218, 222, 223, 0, 265, 266, 267, 52, 244, 245, 360, 367, 436, 339, 340, 349, 350, 351, 352, 53, 458, 3, 463, 464, 54, 57, 632, 633, 634, 635, 636, 572, 582, 517, 518, 519, 520, 521, 522, 523, 524, 585, 537, 58, 538, 539, 540, 638, 639, 617, 628, 59, 60, 61, 62, 63, 64 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_355ca:
  ret i32 0
}

define i32 @function_355f0() local_unnamed_addr {
dec_label_pc_355f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_355f0 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_355f0
}

define i32 @function_3562c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3562c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3562e:
  %v5_3562e = sub i32 %arg1, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_35633 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v5_3562e)
  ret i32 %v2_35633

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_35636:
  ret i32 0
}

define i32 @function_3565a() local_unnamed_addr {
dec_label_pc_3565a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3565a = load i32, i32* %ecx.global-to-local, align 4
  %v1_3565a = add i32 %v0_3565a, -465204285
  %v2_3565a = inttoptr i32 %v1_3565a to i32*
  %v3_3565a = load i32, i32* %v2_3565a, align 4
  %v4_3565a = add i32 %v3_3565a, -1
  store i32 %v4_3565a, i32* %v2_3565a, align 4
  %v0_35660 = load i32, i32* %eax.global-to-local, align 8
  %v0_35664 = load i32, i32* %ebx.global-to-local, align 8
  %v2_35667 = call i32 @unknown_45a04(i32 %v0_35664, i32 %v0_35660)
  store i32 %v0_35664, i32* %eax.global-to-local, align 8
  %v1_3566e = icmp eq i32 %v0_35664, 0
  br i1 %v1_3566e, label %dec_label_pc_3567c, label %dec_label_pc_35672

dec_label_pc_35672:                               ; preds = %dec_label_pc_3565a
  %v1_35672 = add i32 %v0_35664, ptrtoint (i8** @global_var_18.1931 to i32)
  br label %dec_label_pc_3567c

dec_label_pc_3567c:                               ; preds = %dec_label_pc_3565a, %dec_label_pc_35672
  %storemerge = phi i32 [ %v1_35672, %dec_label_pc_35672 ], [ 0, %dec_label_pc_3565a ]
  store i32 %storemerge, i32* @eax, align 8
  %v0_3567c = load i32, i32* %ebp.global-to-local, align 4
  %v1_3567c = add i32 %v0_3567c, -12
  %v2_3567c = inttoptr i32 %v1_3567c to i32*
  %v3_3567c = load i32, i32* %v2_3567c, align 4
  %v4_3567f = icmp eq i32 %v3_3567c, ptrtoint ([3 x i8]* @3 to i32)
  br i1 %v4_3567f, label %bb, label %dec_label_pc_35688

bb:                                               ; preds = %dec_label_pc_3567c
  %v1_35686 = call i32 @function_356a3()
  store i32 %v1_35686, i32* @eax, align 8
  br label %dec_label_pc_35688

dec_label_pc_35688:                               ; preds = %bb, %dec_label_pc_3567c
  %v0_35688 = call i32 @function_3569e()
  store i32 %v0_35688, i32* %eax.global-to-local, align 8
  ret i32 %v0_35688

; uselistorder directives
  uselistorder i32 %v0_35664, { 2, 1, 0, 3 }
  uselistorder i32 -1, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 164, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 165, 166, 167, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 160, 161, 0, 1, 162, 163 }
  uselistorder label %dec_label_pc_3567c, { 1, 0 }
}

define i32 @function_3569e() local_unnamed_addr {
dec_label_pc_3569e:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_356a3() local_unnamed_addr {
dec_label_pc_356a3:
  %v0_356a9 = load i32, i32* @eax, align 8
  ret i32 %v0_356a9
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_356aa:
  %v5_356aa = sub i32 %arg1, ptrtoint (i8** @global_var_18.1931 to i32)
  %v2_356af = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v5_356aa)
  ret i32 %v2_356af

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i8** @global_var_18.1931, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_18.1931 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_356b2:
  ret i32 0
}

define i32 @function_356d8() local_unnamed_addr {
dec_label_pc_356d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_356d8 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_356d8
}

define i32 @function_356e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_356e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_356e5 = load i32, i32* @eax, align 8
  %v3_356e5 = load i32, i32* @ecx, align 4
  %v4_356e5 = add i32 %v3_356e5, %v0_356e5
  store i32 %v4_356e5, i32* %eax.global-to-local, align 8
  %v1_356e7 = add i32 %v4_356e5, 71852
  %v2_356e7 = inttoptr i32 %v1_356e7 to i8*
  %v3_356e7 = load i8, i8* %v2_356e7, align 1
  %v4_356e7 = load i32, i32* @ebx, align 8
  %v5_356e7 = udiv i32 %v4_356e7, 256
  %v6_356e7 = trunc i32 %v5_356e7 to i8
  %v7_356e7 = add i8 %v6_356e7, %v3_356e7
  store i8 %v7_356e7, i8* %v2_356e7, align 1
  %v3_356f9 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v3_356f9

; uselistorder directives
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 0, 17, 19, 18, 20, 21, 22, 23, 24, 41, 25, 26, 27, 39, 28, 29, 1, 40, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* @ebx, { 37, 38, 39, 40, 111, 62, 63, 48, 49, 50, 67, 68, 74, 72, 43, 42, 69, 97, 70, 73, 82, 75, 76, 46, 77, 78, 79, 80, 81, 83, 84, 87, 85, 86, 64, 91, 58, 119, 61, 92, 93, 94, 95, 96, 99, 100, 101, 106, 107, 108, 109, 114, 115, 59, 161, 162, 163, 164, 121, 122, 123, 55, 124, 223, 146, 147, 52, 53, 102, 224, 149, 150, 88, 44, 45, 165, 3, 4, 160, 159, 47, 197, 198, 168, 5, 6, 170, 151, 152, 153, 154, 173, 175, 155, 98, 156, 157, 125, 126, 127, 178, 206, 207, 208, 209, 210, 211, 179, 180, 181, 167, 174, 182, 183, 186, 187, 188, 189, 190, 41, 7, 8, 237, 236, 238, 239, 184, 226, 227, 194, 9, 10, 24, 25, 202, 118, 11, 12, 200, 195, 196, 222, 28, 232, 203, 225, 192, 176, 177, 201, 233, 234, 235, 204, 217, 218, 228, 229, 230, 231, 2, 214, 215, 205, 240, 13, 14, 216, 15, 16, 17, 18, 51, 54, 0, 57, 60, 56, 112, 113, 120, 65, 66, 19, 20, 71, 1, 21, 89, 90, 158, 22, 23, 103, 104, 105, 110, 116, 117, 166, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 185, 191, 193, 199, 169, 171, 172, 212, 26, 27, 29, 213, 30, 31, 32, 33, 219, 220, 221, 34, 35, 36 }
  uselistorder i32* @ecx, { 1, 6, 7, 12, 13, 81, 179, 38, 40, 41, 42, 8, 44, 52, 17, 18, 15, 216, 217, 72, 73, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 45, 67, 9, 35, 86, 46, 47, 39, 43, 70, 71, 23, 80, 50, 51, 87, 37, 69, 88, 89, 90, 10, 31, 99, 100, 25, 26, 27, 28, 102, 79, 103, 207, 208, 104, 105, 106, 107, 108, 109, 110, 64, 65, 22, 123, 48, 91, 92, 93, 94, 95, 96, 126, 98, 127, 128, 11, 24, 129, 130, 97, 131, 132, 133, 114, 74, 75, 76, 0, 115, 116, 117, 134, 77, 119, 120, 121, 138, 125, 139, 140, 141, 135, 142, 143, 144, 145, 146, 147, 148, 166, 149, 150, 111, 112, 151, 154, 155, 156, 157, 158, 2, 159, 84, 209, 14, 226, 228, 218, 219, 164, 4, 170, 171, 172, 173, 174, 85, 163, 220, 221, 167, 175, 3, 210, 211, 162, 181, 182, 191, 160, 169, 16, 176, 177, 178, 188, 189, 190, 222, 223, 224, 195, 196, 183, 199, 200, 197, 198, 201, 202, 203, 204, 205, 206, 19, 184, 185, 186, 21, 229, 192, 187, 20, 29, 34, 32, 30, 36, 33, 82, 83, 78, 66, 68, 113, 118, 122, 101, 152, 161, 124, 136, 137, 153, 212, 213, 214, 227, 225, 165, 194, 193, 168, 180, 215, 5 }
}

define i32 @_ZN5boost24function_output_iteratorINS_8signals26detail12does_nothingEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_35716:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35739

bb:                                               ; preds = %dec_label_pc_35716
  %v2_35737 = call i32 @function_3573e(i32 %arg1)
  br label %dec_label_pc_35739

dec_label_pc_35739:                               ; preds = %bb, %dec_label_pc_35716
  %v3_35737 = phi i32 [ %v2_35737, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35716 ]
  ret i32 %v3_35737
}

define i32 @function_3573e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3573e:
  %v0_3573f = load i32, i32* @eax, align 8
  ret i32 %v0_3573f
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSA_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsINS_24function_output_iteratorINS1_12does_nothingEEEEEvT_(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_35740:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_3575f = ptrtoint i32* %stack_var_-44 to i32
  %v1_35765 = call i32 @unknown_45f76(i32 %v2_3575f)
  %v1_3576d = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_35773 = call i32 @unknown_44236(i32 %v1_3576d)
  %v2_35778 = ptrtoint i32* %stack_var_-56 to i32
  %v2_35782 = call i32 @unknown_45faa(i32 %v2_35778, i32 %v1_35773)
  %v3_3578a = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_3578a
}

define i32 @function_3579c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3579c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_3579e = load i32, i32* @eax, align 8
  %v4_3579e = mul i32 %v2_3579e, 2
  %v21_3579e = inttoptr i32 %v2_3579e to i32*
  store i32 %v4_3579e, i32* %v21_3579e, align 4
  %v0_357a0 = load i32, i32* @ebp, align 4
  %v1_357a0 = add i32 %v0_357a0, -24
  %v0_357a3 = load i32, i32* @eax, align 8
  %v1_357a7 = add i32 %v0_357a0, -26
  store i32 %v1_357a7, i32* %eax.global-to-local, align 8
  %v3_357b1 = call i32 @unknown_46107(i32 %v1_357a0, i32 %v1_357a7, i32 %v0_357a3)
  %v0_357b9 = load i32, i32* @ebp, align 4
  %v1_357b9 = add i32 %v0_357b9, -40
  store i32 %v1_357b9, i32* %eax.global-to-local, align 8
  %v1_357bf = call i32 @unknown_460d8(i32 %v1_357b9)
  %v0_357c8 = load i32, i32* @ebp, align 4
  %v1_357c8 = add i32 %v0_357c8, -25
  store i32 %v1_357c8, i32* %eax.global-to-local, align 8
  %v2_357ce = call i32 @unknown_461c2(i32 %v1_357c8, i32 %v1_357bf)
  store i32 %v2_357ce, i32* %eax.global-to-local, align 8
  %v4_357d3 = trunc i32 %v2_357ce to i8
  %v5_357d3 = icmp eq i8 %v4_357d3, 0
  %v0_357ed = load i32, i32* @ebp, align 4
  br i1 %v5_357d3, label %dec_label_pc_357e5, label %dec_label_pc_357d7

dec_label_pc_357d7:                               ; preds = %dec_label_pc_3579c
  %v1_357d7 = add i32 %v0_357ed, -44
  %v2_357d7 = inttoptr i32 %v1_357d7 to i32*
  %v3_357d7 = load i32, i32* %v2_357d7, align 4
  store i32 %v3_357d7, i32* %eax.global-to-local, align 8
  %v1_357da = add i32 %v3_357d7, 4
  %v2_357da = inttoptr i32 %v1_357da to i8*
  store i8 0, i8* %v2_357da, align 1
  br label %dec_label_pc_35821

dec_label_pc_357e5:                               ; preds = %dec_label_pc_3579c
  %v1_357ed = add i32 %v0_357ed, -45
  store i32 %v1_357ed, i32* %eax.global-to-local, align 8
  %v2_357f3 = call i32 @unknown_6b2b8(i32 %v1_357ed, i32 0)
  store i32 %v2_357f3, i32* %eax.global-to-local, align 8
  %v0_357f8 = load i32, i32* @ebp, align 4
  %v1_357f8 = add i32 %v0_357f8, -32
  %v2_35802 = call i32 @unknown_6b2ec(i32 %v1_357f8, i32 %v2_357f3)
  %v0_3580a = load i32, i32* @ebp, align 4
  %v1_3580a = add i32 %v0_3580a, -24
  %v1_35811 = add i32 %v0_3580a, -32
  store i32 %v1_35811, i32* %eax.global-to-local, align 8
  store i32 %v1_35811, i32* %stack_var_-8, align 4
  %v2_35817 = call i32 @unknown_6b334(i32 %v1_35811, i32 %v1_3580a)
  store i32 %v2_35817, i32* %eax.global-to-local, align 8
  br label %dec_label_pc_35821

dec_label_pc_35821:                               ; preds = %dec_label_pc_357e5, %dec_label_pc_357d7
  %storemerge = phi i32 [ 1, %dec_label_pc_357e5 ], [ 0, %dec_label_pc_357d7 ]
  store i32 %storemerge, i32* %ebx.global-to-local, align 8
  %v0_35821 = load i32, i32* @ebp, align 4
  %v1_35821 = add i32 %v0_35821, -24
  store i32 %v1_35821, i32* %eax.global-to-local, align 8
  %v1_35824 = load i32, i32* @esp, align 4
  %v2_35824 = inttoptr i32 %v1_35824 to i32*
  store i32 %v1_35821, i32* %v2_35824, align 4
  %v0_35827 = call i32 @unknown_4615e()
  store i32 %v0_35827, i32* %eax.global-to-local, align 8
  %v0_3582c = load i32, i32* %ebx.global-to-local, align 8
  %v10_3582c = icmp eq i32 %v0_3582c, 1
  br i1 %v10_3582c, label %dec_label_pc_35833, label %dec_label_pc_35831

dec_label_pc_35831:                               ; preds = %dec_label_pc_35821
  %v0_35831 = call i32 @function_35891()
  store i32 %v0_35831, i32* %eax.global-to-local, align 8
  ret i32 %v0_35831

dec_label_pc_35833:                               ; preds = %dec_label_pc_35821
  %v0_35833 = load i32, i32* @ebp, align 4
  %v1_35833 = add i32 %v0_35833, -40
  store i32 %v1_35833, i32* %eax.global-to-local, align 8
  %v1_35836 = load i32, i32* @esp, align 4
  %v2_35836 = inttoptr i32 %v1_35836 to i32*
  store i32 %v1_35833, i32* %v2_35836, align 4
  %v0_35839 = call i32 @unknown_4609e()
  store i32 %v0_35839, i32* %eax.global-to-local, align 8
  %v0_3583e = load i32, i32* @ebp, align 4
  %v1_3583e = add i32 %v0_3583e, -44
  %v2_3583e = inttoptr i32 %v1_3583e to i32*
  %v3_3583e = load i32, i32* %v2_3583e, align 4
  %v1_35841 = add i32 %v3_3583e, ptrtoint (i32* @global_var_10.1921 to i32)
  store i32 %v1_35841, i32* %eax.global-to-local, align 8
  %v1_35844 = load i32, i32* @esp, align 4
  %v2_35844 = inttoptr i32 %v1_35844 to i32*
  store i32 %v1_35841, i32* %v2_35844, align 4
  %v0_35847 = load i32, i32* %stack_var_-8, align 4
  %v1_35847 = call i32 @unknown_44236(i32 %v0_35847)
  store i32 %v1_35847, i32* %eax.global-to-local, align 8
  %v1_3584f = load i32, i32* @esp, align 4
  %v2_3584f = add i32 %v1_3584f, 4
  %v3_3584f = inttoptr i32 %v2_3584f to i32*
  store i32 %v1_35847, i32* %v3_3584f, align 4
  %v4_3584f = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v4_3584f

; uselistorder directives
  uselistorder i32 %v0_357ed, { 1, 0 }
  uselistorder i32 %v2_3579e, { 1, 0 }
  uselistorder i32 -26, { 1, 0 }
  uselistorder i32 2, { 9, 21, 22, 10, 23, 24, 11, 12, 25, 13, 26, 0, 27, 28, 1, 29, 2, 30, 3, 31, 65, 32, 49, 33, 51, 34, 52, 4, 35, 36, 14, 67, 37, 50, 38, 39, 40, 41, 42, 15, 43, 16, 17, 66, 5, 53, 44, 45, 46, 47, 54, 55, 56, 57, 63, 64, 6, 7, 18, 8, 58, 59, 60, 19, 61, 62, 48, 20 }
}

define i32 @function_3583c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3583c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_35854(i32 %arg1) local_unnamed_addr {
dec_label_pc_35854:
  %v0_35856 = call i32 @unknown_45ffa()
  %v0_3585e = load i32, i32* @ebp, align 4
  %v1_3585e = add i32 %v0_3585e, -36
  %v1_35865 = add i32 %v0_3585e, -40
  %v2_3586b = call i32 @unknown_4604a(i32 %v1_35865, i32 %v1_3585e)
  %v0_35878 = call i32 @function_35891()
  ret i32 %v0_35878
}

define i32 @function_3587b() local_unnamed_addr {
dec_label_pc_3587b:
  %eax.global-to-local = alloca i32, align 4
  %v0_3587b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_3587b
}

define i32 @function_35891() local_unnamed_addr {
dec_label_pc_35891:
  %v0_35891 = load i32, i32* @ebp, align 4
  %v1_35891 = add i32 %v0_35891, -12
  %v2_35891 = inttoptr i32 %v1_35891 to i32*
  %v3_35891 = load i32, i32* %v2_35891, align 4
  %v3_35894 = xor i32 %v3_35891, ptrtoint ([3 x i8]* @3 to i32)
  %v4_35894 = icmp eq i32 %v3_35894, 0
  store i32 %v3_35894, i32* @eax, align 8
  br i1 %v4_35894, label %bb, label %dec_label_pc_3589d

bb:                                               ; preds = %dec_label_pc_35891
  %v1_3589b = call i32 @function_358a2()
  br label %dec_label_pc_3589d

dec_label_pc_3589d:                               ; preds = %bb, %dec_label_pc_35891
  %v2_3589b = phi i32 [ %v1_3589b, %bb ], [ %v3_35894, %dec_label_pc_35891 ]
  ret i32 %v2_3589b
}

define i32 @function_358a2() local_unnamed_addr {
dec_label_pc_358a2:
  %v0_358a6 = load i32, i32* @eax, align 8
  ret i32 %v0_358a6
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEE27nolock_grab_tracked_objectsINS_24function_output_iteratorINS1_12does_nothingEEEEEvT_(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_358a8:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_358c7 = ptrtoint i32* %stack_var_-44 to i32
  %v1_358cd = call i32 @unknown_460de(i32 %v2_358c7)
  %v1_358d5 = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_358db = call i32 @unknown_4439e(i32 %v1_358d5)
  %v2_358e0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_358ea = call i32 @unknown_46112(i32 %v2_358e0, i32 %v1_358db)
  %v3_358f2 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_358f2
}

define i32 @function_35916(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35916:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_35916 = load i32, i32* @edx, align 8
  %v1_35919 = call i32 @unknown_4626f(i32 %v0_35916)
  %v0_35921 = load i32, i32* @ebp, align 4
  %v1_35921 = add i32 %v0_35921, -40
  %v1_35927 = call i32 @unknown_46240(i32 %v1_35921)
  %v0_35930 = load i32, i32* @ebp, align 4
  %v1_35930 = add i32 %v0_35930, -25
  %v2_35936 = call i32 @unknown_4632a(i32 %v1_35930, i32 %v1_35927)
  %v4_3593b = trunc i32 %v2_35936 to i8
  %v5_3593b = icmp eq i8 %v4_3593b, 0
  %v0_35955 = load i32, i32* @ebp, align 4
  br i1 %v5_3593b, label %dec_label_pc_3594d, label %dec_label_pc_3593f

dec_label_pc_3593f:                               ; preds = %dec_label_pc_35916
  %v1_3593f = add i32 %v0_35955, -44
  %v2_3593f = inttoptr i32 %v1_3593f to i32*
  %v3_3593f = load i32, i32* %v2_3593f, align 4
  %v1_35942 = add i32 %v3_3593f, 4
  %v2_35942 = inttoptr i32 %v1_35942 to i8*
  store i8 0, i8* %v2_35942, align 1
  br label %dec_label_pc_35989

dec_label_pc_3594d:                               ; preds = %dec_label_pc_35916
  %v1_35955 = add i32 %v0_35955, -45
  %v2_3595b = call i32 @unknown_6b420(i32 %v1_35955, i32 0)
  %v0_35960 = load i32, i32* @ebp, align 4
  %v1_35960 = add i32 %v0_35960, -32
  store i32 %v1_35960, i32* %edx.global-to-local, align 8
  %v2_3596a = call i32 @unknown_6b454(i32 %v1_35960, i32 %v2_3595b)
  %v0_35972 = load i32, i32* @ebp, align 4
  %v1_35972 = add i32 %v0_35972, -24
  %v1_35979 = add i32 %v0_35972, -32
  store i32 %v1_35979, i32* %stack_var_-8, align 4
  %v2_3597f = call i32 @unknown_6b49c(i32 %v1_35979, i32 %v1_35972)
  br label %dec_label_pc_35989

dec_label_pc_35989:                               ; preds = %dec_label_pc_3594d, %dec_label_pc_3593f
  %storemerge = phi i32 [ 1, %dec_label_pc_3594d ], [ 0, %dec_label_pc_3593f ]
  store i32 %storemerge, i32* %ebx.global-to-local, align 8
  %v0_35989 = load i32, i32* @ebp, align 4
  %v1_35989 = add i32 %v0_35989, -24
  %v1_3598c = load i32, i32* @esp, align 4
  %v2_3598c = inttoptr i32 %v1_3598c to i32*
  store i32 %v1_35989, i32* %v2_3598c, align 4
  %v0_3598f = call i32 @unknown_462c6()
  %v0_35994 = load i32, i32* %ebx.global-to-local, align 8
  %v10_35994 = icmp eq i32 %v0_35994, 1
  br i1 %v10_35994, label %dec_label_pc_3599b, label %dec_label_pc_35999

dec_label_pc_35999:                               ; preds = %dec_label_pc_35989
  %v0_35999 = call i32 @function_359f9()
  ret i32 %v0_35999

dec_label_pc_3599b:                               ; preds = %dec_label_pc_35989
  %v0_3599b = load i32, i32* @ebp, align 4
  %v1_3599b = add i32 %v0_3599b, -40
  %v1_3599e = load i32, i32* @esp, align 4
  %v2_3599e = inttoptr i32 %v1_3599e to i32*
  store i32 %v1_3599b, i32* %v2_3599e, align 4
  %v0_359a1 = call i32 @unknown_46206()
  %v0_359a6 = load i32, i32* @ebp, align 4
  %v1_359a6 = add i32 %v0_359a6, -44
  %v2_359a6 = inttoptr i32 %v1_359a6 to i32*
  %v3_359a6 = load i32, i32* %v2_359a6, align 4
  %v1_359a9 = add i32 %v3_359a6, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_359ac = load i32, i32* @esp, align 4
  %v2_359ac = inttoptr i32 %v1_359ac to i32*
  store i32 %v1_359a9, i32* %v2_359ac, align 4
  %v0_359af = load i32, i32* %stack_var_-8, align 4
  %v1_359af = call i32 @unknown_4439e(i32 %v0_359af)
  %v0_359b4 = load i32, i32* @ebp, align 4
  %v1_359b4 = add i32 %v0_359b4, -36
  store i32 %v1_359b4, i32* %edx.global-to-local, align 8
  %v1_359b7 = load i32, i32* @esp, align 4
  %v2_359b7 = add i32 %v1_359b7, 4
  %v3_359b7 = inttoptr i32 %v2_359b7 to i32*
  store i32 %v1_359af, i32* %v3_359b7, align 4
  %v0_359bb = load i32, i32* %edx.global-to-local, align 8
  %v1_359bb = load i32, i32* @esp, align 4
  %v2_359bb = inttoptr i32 %v1_359bb to i32*
  store i32 %v0_359bb, i32* %v2_359bb, align 4
  %v0_359be = call i32 @unknown_46162()
  %v0_359c3 = load i32, i32* @esp, align 4
  %v0_359c6 = load i32, i32* @ebp, align 4
  %v1_359c6 = add i32 %v0_359c6, -36
  %v3_359c9 = inttoptr i32 %v0_359c3 to i32*
  store i32 %v1_359c6, i32* %v3_359c9, align 4
  %v0_359cd = load i32, i32* @ebp, align 4
  %v1_359cd = add i32 %v0_359cd, -40
  %v1_359d0 = load i32, i32* @esp, align 4
  %v2_359d0 = inttoptr i32 %v1_359d0 to i32*
  store i32 %v1_359cd, i32* %v2_359d0, align 4
  %v0_359d3 = call i32 @unknown_461b2()
  %v0_359e0 = call i32 @function_359f9()
  ret i32 %v0_359e0

; uselistorder directives
  uselistorder i32 %v0_35955, { 1, 0 }
  uselistorder i32 -36, { 19, 20, 17, 18, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 5, 48, 49, 50, 51, 123, 6, 1, 31, 33, 121, 122, 42, 38, 39, 40, 41, 43, 44, 45, 46, 7, 34, 35, 36, 37, 54, 55, 56, 57, 58, 59, 60, 2, 61, 62, 8, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 84, 82, 83, 81, 0, 3, 89, 90, 92, 93, 91, 85, 86, 87, 76, 77, 128, 129, 130, 124, 66, 9, 10, 13, 97, 98, 11, 100, 12, 104, 105, 88, 72, 14, 15, 99, 103, 127, 110, 111, 112, 113, 114, 115, 116, 117, 101, 131, 132, 133, 134, 106, 107, 108, 109, 102, 118, 119, 120, 32, 21, 47, 52, 53, 4, 94, 95, 96, 125, 126 }
  uselistorder i32 ()* @function_359f9, { 1, 0 }
  uselistorder i32 -24, { 39, 40, 25, 26, 27, 12, 0, 13, 42, 43, 41, 34, 35, 44, 31, 45, 46, 47, 28, 29, 30, 14, 15, 16, 17, 1, 58, 57, 59, 38, 51, 50, 52, 2, 91, 92, 93, 32, 33, 61, 3, 4, 68, 5, 70, 69, 71, 87, 88, 89, 65, 66, 72, 74, 73, 75, 6, 7, 67, 53, 54, 76, 77, 78, 79, 80, 81, 97, 20, 21, 22, 8, 82, 96, 83, 84, 102, 103, 104, 100, 101, 98, 99, 90, 18, 94, 95, 105, 106, 107, 36, 37, 60, 9, 48, 49, 19, 62, 63, 55, 56, 64, 10, 11, 85, 86, 23, 24 }
  uselistorder i32 -32, { 98, 99, 26, 27, 28, 75, 29, 30, 83, 84, 85, 86, 31, 96, 97, 76, 77, 100, 101, 102, 103, 60, 61, 116, 117, 59, 112, 109, 110, 111, 113, 114, 115, 333, 2, 147, 104, 118, 119, 120, 121, 137, 134, 135, 136, 138, 139, 33, 34, 186, 183, 184, 185, 187, 188, 32, 92, 87, 141, 142, 91, 88, 89, 90, 0, 146, 35, 36, 37, 38, 39, 148, 3, 149, 40, 318, 82, 151, 152, 153, 154, 155, 6, 4, 5, 156, 158, 159, 160, 7, 8, 161, 105, 106, 198, 163, 45, 46, 170, 167, 168, 169, 1, 171, 11, 9, 10, 41, 42, 43, 12, 13, 44, 140, 143, 144, 145, 47, 172, 164, 315, 316, 78, 79, 174, 157, 175, 176, 177, 178, 179, 122, 180, 93, 94, 95, 191, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 258, 259, 260, 209, 210, 211, 213, 214, 182, 216, 217, 218, 219, 221, 48, 49, 50, 54, 55, 222, 223, 224, 173, 192, 205, 212, 278, 279, 51, 52, 53, 226, 225, 248, 56, 227, 334, 229, 230, 231, 234, 237, 238, 239, 240, 242, 243, 354, 355, 246, 247, 228, 335, 336, 232, 57, 58, 267, 268, 269, 270, 271, 272, 252, 253, 254, 162, 301, 255, 244, 245, 256, 257, 235, 262, 263, 264, 358, 359, 330, 331, 233, 62, 337, 338, 265, 249, 250, 251, 328, 280, 281, 220, 63, 208, 283, 284, 64, 215, 296, 297, 298, 236, 266, 70, 71, 14, 273, 352, 353, 347, 348, 346, 349, 350, 351, 65, 66, 15, 274, 282, 295, 356, 357, 345, 340, 341, 339, 342, 343, 344, 67, 16, 285, 302, 287, 286, 303, 304, 305, 306, 307, 288, 308, 309, 310, 311, 312, 289, 290, 291, 292, 324, 325, 319, 326, 320, 321, 322, 323, 68, 69, 72, 17, 293, 275, 276, 277, 327, 73, 74, 360, 361, 299, 294, 300, 313, 314, 317, 18, 19, 20, 21, 22, 23, 80, 24, 81, 150, 165, 166, 107, 108, 129, 130, 124, 125, 123, 126, 127, 128, 131, 132, 133, 181, 189, 241, 25, 261, 329, 332 }
  uselistorder i32 -45, { 1, 0 }
  uselistorder i32 -44, { 105, 106, 90, 91, 96, 182, 183, 184, 185, 186, 124, 125, 127, 128, 129, 130, 131, 108, 103, 104, 132, 133, 122, 123, 164, 165, 138, 139, 140, 141, 142, 115, 116, 117, 0, 143, 146, 147, 144, 145, 148, 149, 118, 119, 153, 150, 151, 152, 154, 198, 199, 155, 156, 157, 191, 192, 92, 87, 88, 166, 158, 159, 160, 161, 162, 163, 203, 200, 201, 202, 204, 171, 197, 195, 196, 193, 194, 188, 189, 187, 208, 205, 206, 207, 209, 173, 174, 175, 176, 177, 178, 93, 1, 2, 3, 4, 5, 6, 7, 8, 9, 179, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 181, 180, 94, 20, 21, 22, 95, 23, 24, 25, 97, 26, 27, 28, 99, 100, 98, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 101, 48, 107, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 111, 102, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 121, 109, 110, 113, 114, 112, 86, 134, 135, 136, 120, 137, 126, 190, 167, 168, 169, 170, 172, 89 }
  uselistorder i32 -25, { 1, 0 }
  uselistorder i32 -40, { 14, 15, 16, 12, 9, 10, 0, 1, 17, 18, 2, 3, 59, 60, 21, 22, 25, 13, 19, 20, 26, 27, 45, 29, 24, 30, 28, 31, 32, 34, 35, 36, 37, 38, 39, 41, 40, 8, 46, 47, 42, 43, 44, 64, 65, 33, 48, 49, 52, 11, 4, 5, 6, 7, 55, 56, 50, 51, 66, 67, 53, 54, 58, 57, 23, 61, 62, 63 }
  uselistorder i32* @edx, { 30, 26, 27, 11, 21, 22, 5, 29, 6, 16, 33, 34, 35, 40, 56, 31, 32, 28, 43, 18, 44, 45, 1, 47, 15, 50, 52, 53, 13, 55, 17, 7, 2, 81, 54, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 78, 79, 41, 8, 82, 107, 104, 105, 77, 83, 84, 85, 9, 3, 4, 106, 57, 58, 92, 10, 80, 95, 98, 99, 100, 101, 89, 90, 91, 102, 93, 94, 97, 12, 14, 19, 20, 23, 24, 25, 39, 0, 48, 36, 37, 38, 42, 75, 46, 49, 51, 61, 64, 71, 72, 73, 74, 76, 86, 87, 88, 96, 103 }
}

define i32 @function_359e3() local_unnamed_addr {
dec_label_pc_359e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_359e3 = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_359e3
}

define i32 @function_359f9() local_unnamed_addr {
dec_label_pc_359f9:
  %v0_359f9 = load i32, i32* @ebp, align 4
  %v1_359f9 = add i32 %v0_359f9, -12
  %v2_359f9 = inttoptr i32 %v1_359f9 to i32*
  %v3_359f9 = load i32, i32* %v2_359f9, align 4
  %v3_359fc = xor i32 %v3_359f9, ptrtoint ([3 x i8]* @3 to i32)
  %v4_359fc = icmp eq i32 %v3_359fc, 0
  store i32 %v3_359fc, i32* @eax, align 8
  br i1 %v4_359fc, label %bb, label %dec_label_pc_35a05

bb:                                               ; preds = %dec_label_pc_359f9
  %v1_35a03 = call i32 @function_35a0a()
  br label %dec_label_pc_35a05

dec_label_pc_35a05:                               ; preds = %bb, %dec_label_pc_359f9
  %v2_35a03 = phi i32 [ %v1_35a03, %bb ], [ %v3_359fc, %dec_label_pc_359f9 ]
  ret i32 %v2_35a03
}

define i32 @function_35a0a() local_unnamed_addr {
dec_label_pc_35a0a:
  %v0_35a0e = load i32, i32* @eax, align 8
  ret i32 %v0_35a0e
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSA_jNS_8functionIFbSA_SA_jEEEEENS0_5mutexEE27nolock_grab_tracked_objectsINS_24function_output_iteratorINS1_12does_nothingEEEEEvT_(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_35a10:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-29 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-49 = alloca i8, align 1
  store i8 %arg2, i8* %stack_var_-49, align 1
  %v2_35a2f = ptrtoint i32* %stack_var_-44 to i32
  %v1_35a35 = call i32 @unknown_46246(i32 %v2_35a2f)
  %v1_35a3d = add i32 %arg1, ptrtoint (i32* @global_var_10.1921 to i32)
  %v1_35a43 = call i32 @unknown_44506(i32 %v1_35a3d)
  %v2_35a48 = ptrtoint i32* %stack_var_-56 to i32
  %v2_35a52 = call i32 @unknown_4627a(i32 %v2_35a48, i32 %v1_35a43)
  %v16_35a57 = ptrtoint i32* %stack_var_-80 to i32
  %v3_35a5a = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_35a5a, i32* %stack_var_-44, align 4
  %v2_35b1c = ptrtoint i32* %stack_var_-40 to i32
  %v2_35a70 = ptrtoint i32* %stack_var_-28 to i32
  %v2_35a77 = ptrtoint i32* %stack_var_-30 to i32
  %v2_35a98 = ptrtoint i32* %stack_var_-29 to i32
  %v2_35abd = ptrtoint i8* %stack_var_-49 to i32
  %v2_35ac8 = ptrtoint i32* %stack_var_-36 to i32
  %v1_35aaa = add i32 %arg1, 4
  %v2_35aaa = inttoptr i32 %v1_35aaa to i8*
  br label %dec_label_pc_35b0e

dec_label_pc_35a65:                               ; preds = %dec_label_pc_35b0e
  %v1_35a68 = load i32, i32* @esp, align 4
  %v2_35a68 = inttoptr i32 %v1_35a68 to i32*
  store i32 %v2_35a2f, i32* %v2_35a68, align 4
  %v0_35a6b = call i32 @unknown_463a8()
  %v1_35a73 = load i32, i32* @esp, align 4
  %v2_35a73 = add i32 %v1_35a73, 8
  %v3_35a73 = inttoptr i32 %v2_35a73 to i32*
  store i32 %v0_35a6b, i32* %v3_35a73, align 4
  %v1_35a7a = load i32, i32* @esp, align 4
  %v2_35a7a = add i32 %v1_35a7a, 4
  %v3_35a7a = inttoptr i32 %v2_35a7a to i32*
  store i32 %v2_35a77, i32* %v3_35a7a, align 4
  %v1_35a7e = load i32, i32* @esp, align 4
  %v2_35a7e = inttoptr i32 %v1_35a7e to i32*
  store i32 %v2_35a70, i32* %v2_35a7e, align 4
  %v0_35a81 = call i32 @unknown_463d7()
  %v0_35a86 = load i32, i32* @esp, align 4
  %v1_35a86 = add i32 %v0_35a86, -4
  %v2_35a8c = inttoptr i32 %v1_35a86 to i32*
  store i32 %v2_35a2f, i32* %v2_35a8c, align 4
  %v0_35a8f = call i32 @unknown_463a8()
  %v1_35a94 = load i32, i32* @esp, align 4
  %v2_35a94 = add i32 %v1_35a94, 4
  %v3_35a94 = inttoptr i32 %v2_35a94 to i32*
  store i32 %v0_35a8f, i32* %v3_35a94, align 4
  %v1_35a9b = load i32, i32* @esp, align 4
  %v2_35a9b = inttoptr i32 %v1_35a9b to i32*
  store i32 %v2_35a98, i32* %v2_35a9b, align 4
  %v0_35a9e = call i32 @unknown_46492()
  %v4_35aa3 = trunc i32 %v0_35a9e to i8
  %v5_35aa3 = icmp eq i8 %v4_35aa3, 0
  br i1 %v5_35aa3, label %dec_label_pc_35ab5, label %dec_label_pc_35aa7

dec_label_pc_35aa7:                               ; preds = %dec_label_pc_35a65
  store i8 0, i8* %v2_35aaa, align 1
  br label %dec_label_pc_35af1

dec_label_pc_35ab5:                               ; preds = %dec_label_pc_35a65
  %v0_35ab5 = load i32, i32* @esp, align 4
  %v1_35ab5 = add i32 %v0_35ab5, 4
  %v2_35ab5 = inttoptr i32 %v1_35ab5 to i32*
  store i32 0, i32* %v2_35ab5, align 4
  %v1_35ac0 = load i32, i32* @esp, align 4
  %v2_35ac0 = inttoptr i32 %v1_35ac0 to i32*
  store i32 %v2_35abd, i32* %v2_35ac0, align 4
  %v0_35ac3 = call i32 @unknown_6b588()
  %v1_35acb = load i32, i32* @esp, align 4
  %v2_35acb = add i32 %v1_35acb, 4
  %v3_35acb = inttoptr i32 %v2_35acb to i32*
  store i32 %v0_35ac3, i32* %v3_35acb, align 4
  %v1_35acf = load i32, i32* @esp, align 4
  %v2_35acf = inttoptr i32 %v1_35acf to i32*
  store i32 %v2_35ac8, i32* %v2_35acf, align 4
  %v0_35ad2 = call i32 @unknown_6b5bc()
  %v0_35ad7 = load i32, i32* @esp, align 4
  %v3_35add = inttoptr i32 %v0_35ad7 to i32*
  store i32 %v2_35a70, i32* %v3_35add, align 4
  %v1_35ae4 = load i32, i32* @esp, align 4
  %v2_35ae4 = inttoptr i32 %v1_35ae4 to i32*
  store i32 %v2_35ac8, i32* %v2_35ae4, align 4
  %v0_35ae7 = call i32 @unknown_6b604()
  br label %dec_label_pc_35af1

dec_label_pc_35af1:                               ; preds = %dec_label_pc_35ab5, %dec_label_pc_35aa7
  %storemerge = phi i32 [ 1, %dec_label_pc_35ab5 ], [ 0, %dec_label_pc_35aa7 ]
  store i32 %storemerge, i32* %ebx.global-to-local, align 8
  %v1_35af4 = load i32, i32* @esp, align 4
  %v2_35af4 = inttoptr i32 %v1_35af4 to i32*
  store i32 %v2_35a70, i32* %v2_35af4, align 4
  %v0_35af7 = call i32 @unknown_4642e()
  %v0_35afc = load i32, i32* %ebx.global-to-local, align 8
  %v10_35afc = icmp eq i32 %v0_35afc, 1
  br i1 %v10_35afc, label %dec_label_pc_35b03, label %dec_label_pc_35b01

dec_label_pc_35b01:                               ; preds = %dec_label_pc_35af1
  %v0_35b01 = call i32 @function_35b61()
  ret i32 %v0_35b01

dec_label_pc_35b03:                               ; preds = %dec_label_pc_35af1
  %v1_35b06 = load i32, i32* @esp, align 4
  %v2_35b06 = inttoptr i32 %v1_35b06 to i32*
  store i32 %v2_35a2f, i32* %v2_35b06, align 4
  %v0_35b09 = call i32 @unknown_4636e()
  %v1_35b14.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_35b0e

dec_label_pc_35b0e:                               ; preds = %dec_label_pc_35b03, %dec_label_pc_35a10
  %v1_35b14 = phi i32 [ %v1_35b14.pre, %dec_label_pc_35b03 ], [ %v16_35a57, %dec_label_pc_35a10 ]
  %v2_35b14 = inttoptr i32 %v1_35b14 to i32*
  store i32 %v1_35a3d, i32* %v2_35b14, align 4
  %v0_35b17 = load i32, i32* %stack_var_-44, align 4
  %v1_35b17 = call i32 @unknown_44506(i32 %v0_35b17)
  %v1_35b1f = load i32, i32* @esp, align 4
  %v2_35b1f = add i32 %v1_35b1f, 4
  %v3_35b1f = inttoptr i32 %v2_35b1f to i32*
  store i32 %v1_35b17, i32* %v3_35b1f, align 4
  %v1_35b23 = load i32, i32* @esp, align 4
  %v2_35b23 = inttoptr i32 %v1_35b23 to i32*
  store i32 %v2_35b1c, i32* %v2_35b23, align 4
  %v0_35b26 = call i32 @unknown_462ca()
  %v0_35b2b = load i32, i32* @esp, align 4
  %v3_35b31 = inttoptr i32 %v0_35b2b to i32*
  store i32 %v2_35b1c, i32* %v3_35b31, align 4
  %v1_35b38 = load i32, i32* @esp, align 4
  %v2_35b38 = inttoptr i32 %v1_35b38 to i32*
  store i32 %v2_35a2f, i32* %v2_35b38, align 4
  %v0_35b3b = call i32 @unknown_4631a()
  %v4_35b40 = trunc i32 %v0_35b3b to i8
  %v5_35b40 = icmp eq i8 %v4_35b40, 0
  %v1_35b42 = icmp eq i1 %v5_35b40, false
  br i1 %v1_35b42, label %dec_label_pc_35a65, label %dec_label_pc_35b48

dec_label_pc_35b48:                               ; preds = %dec_label_pc_35b0e
  %v0_35b48 = call i32 @function_35b61()
  ret i32 %v0_35b48

; uselistorder directives
  uselistorder i32 %v2_35a2f, { 3, 0, 1, 2, 4 }
  uselistorder i1 false, { 146, 218, 178, 75, 76, 77, 397, 398, 78, 248, 249, 250, 251, 252, 79, 80, 81, 82, 0, 83, 272, 84, 273, 85, 86, 87, 88, 275, 70, 280, 89, 281, 147, 148, 90, 91, 92, 93, 1, 339, 94, 340, 95, 253, 96, 254, 19, 20, 21, 97, 149, 304, 98, 305, 150, 73, 151, 152, 153, 154, 99, 155, 100, 156, 22, 23, 24, 101, 295, 296, 102, 297, 140, 298, 300, 157, 158, 159, 103, 263, 264, 265, 306, 104, 307, 25, 26, 27, 105, 160, 161, 106, 162, 28, 29, 30, 163, 164, 165, 166, 282, 308, 309, 428, 319, 107, 320, 321, 322, 323, 324, 325, 326, 328, 329, 71, 330, 331, 327, 167, 3, 2, 334, 168, 169, 276, 343, 255, 310, 316, 345, 222, 170, 311, 312, 349, 171, 351, 172, 173, 354, 355, 108, 356, 174, 109, 110, 111, 175, 176, 112, 177, 34, 35, 36, 31, 32, 33, 359, 360, 361, 362, 335, 363, 364, 113, 367, 370, 301, 302, 179, 180, 185, 377, 375, 376, 181, 182, 114, 183, 40, 41, 42, 37, 38, 39, 378, 379, 115, 380, 43, 44, 45, 381, 382, 383, 184, 368, 144, 392, 393, 394, 395, 186, 384, 385, 386, 187, 371, 448, 446, 447, 188, 116, 440, 441, 72, 442, 439, 189, 190, 400, 117, 405, 406, 372, 373, 374, 391, 199, 200, 201, 202, 203, 4, 445, 191, 192, 193, 194, 195, 443, 444, 118, 196, 197, 415, 416, 417, 418, 419, 423, 206, 207, 208, 5, 429, 198, 204, 205, 216, 217, 209, 451, 449, 450, 407, 408, 411, 210, 420, 211, 119, 212, 46, 47, 48, 7, 6, 425, 8, 213, 141, 10, 9, 214, 11, 215, 142, 13, 12, 219, 14, 220, 143, 221, 223, 224, 225, 226, 227, 120, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 294, 244, 245, 246, 247, 256, 121, 257, 49, 50, 51, 258, 259, 122, 260, 123, 261, 52, 53, 54, 262, 74, 267, 266, 268, 269, 124, 270, 271, 286, 125, 287, 288, 289, 290, 291, 292, 274, 277, 278, 279, 126, 336, 337, 341, 342, 344, 283, 127, 284, 55, 56, 57, 285, 293, 299, 303, 128, 129, 313, 130, 131, 314, 15, 132, 315, 317, 133, 318, 61, 62, 63, 58, 59, 60, 332, 333, 338, 134, 346, 347, 348, 350, 352, 353, 357, 358, 365, 366, 369, 16, 412, 413, 414, 396, 387, 388, 389, 390, 145, 399, 401, 402, 135, 403, 404, 409, 410, 422, 421, 424, 426, 427, 17, 136, 137, 430, 431, 432, 433, 138, 434, 64, 65, 66, 435, 139, 436, 67, 68, 69, 437, 438, 18, 452, 453, 454, 455, 456, 457 }
  uselistorder i8 0, { 23, 21, 22, 104, 105, 24, 25, 57, 124, 125, 1, 82, 134, 115, 112, 9, 10, 11, 116, 117, 118, 92, 93, 29, 30, 12, 13, 26, 27, 28, 5, 31, 32, 7, 14, 128, 129, 15, 161, 162, 33, 34, 16, 96, 97, 253, 254, 255, 256, 257, 144, 35, 147, 148, 149, 150, 36, 156, 157, 98, 158, 159, 142, 160, 163, 212, 166, 167, 168, 169, 171, 172, 151, 152, 153, 122, 2, 37, 222, 164, 38, 39, 178, 179, 180, 183, 185, 186, 184, 187, 127, 188, 130, 131, 132, 133, 40, 41, 42, 213, 214, 191, 189, 190, 43, 44, 45, 265, 266, 193, 268, 194, 195, 196, 197, 198, 199, 200, 201, 18, 19, 216, 217, 218, 202, 203, 204, 205, 46, 207, 208, 209, 210, 211, 47, 48, 271, 269, 270, 215, 49, 50, 51, 223, 224, 60, 61, 52, 17, 264, 263, 53, 54, 229, 230, 231, 232, 55, 267, 56, 262, 261, 238, 242, 225, 226, 245, 246, 247, 58, 63, 227, 228, 259, 258, 59, 62, 221, 274, 272, 273, 239, 240, 241, 64, 249, 250, 251, 252, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 83, 84, 86, 90, 91, 87, 88, 89, 94, 95, 126, 135, 136, 100, 101, 0, 99, 102, 103, 106, 6, 109, 110, 107, 108, 111, 113, 123, 114, 120, 119, 121, 137, 138, 139, 140, 141, 143, 145, 146, 154, 155, 3, 165, 170, 173, 174, 175, 176, 177, 181, 182, 192, 219, 220, 4, 206, 20, 233, 234, 235, 236, 237, 244, 243, 248, 260, 8 }
  uselistorder i32 -4, { 0, 6, 7, 8, 9, 10, 11, 15, 13, 20, 17, 19, 16, 1, 18, 21, 2, 3, 4, 12, 14, 5 }
  uselistorder i32 8, { 31, 32, 33, 1, 2, 122, 200, 34, 35, 36, 124, 125, 37, 38, 106, 107, 127, 128, 84, 134, 135, 136, 137, 138, 93, 39, 236, 132, 40, 133, 41, 139, 234, 142, 43, 42, 51, 44, 165, 219, 220, 96, 97, 45, 46, 47, 48, 49, 150, 151, 15, 50, 146, 147, 52, 53, 54, 30, 55, 56, 57, 153, 58, 59, 3, 4, 5, 60, 159, 160, 61, 6, 62, 167, 168, 169, 63, 171, 172, 7, 64, 174, 65, 175, 176, 66, 162, 67, 68, 69, 179, 201, 180, 71, 70, 8, 9, 72, 73, 148, 149, 74, 184, 16, 186, 185, 75, 76, 77, 78, 189, 190, 191, 79, 17, 80, 81, 82, 213, 83, 188, 193, 194, 195, 85, 18, 241, 240, 242, 86, 87, 231, 235, 88, 89, 192, 90, 196, 205, 91, 19, 20, 237, 21, 22, 92, 238, 239, 207, 23, 24, 214, 215, 203, 204, 221, 25, 26, 10, 27, 244, 243, 245, 246, 94, 95, 208, 209, 210, 216, 217, 218, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 29, 28, 113, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 129, 130, 131, 141, 140, 166, 143, 144, 145, 152, 154, 155, 156, 157, 158, 161, 163, 164, 170, 187, 173, 177, 178, 181, 228, 183, 182, 197, 198, 199, 202, 222, 206, 211, 212, 223, 224, 225, 226, 227, 229, 230, 232, 233, 0, 11, 12, 13, 14 }
  uselistorder i32 ()* @unknown_463a8, { 1, 0 }
  uselistorder i32* @esp, { 24, 25, 26, 27, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 63, 64, 65, 66, 67, 68, 69, 28, 29, 30, 31, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 39, 40, 154, 155, 156, 157, 158, 159, 160, 161, 146, 147, 148, 149, 150, 151, 152, 153, 0, 32, 33, 34, 35, 36, 37, 38, 163, 164, 165, 162, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 166, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 172, 173, 5, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 6, 7, 8, 56, 57, 58, 59, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 89, 90, 91, 92, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 140, 141, 142, 143, 144, 145, 121, 122, 123, 124, 125, 126, 127, 128, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 196, 167, 168, 169, 3, 170, 184, 229, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 226, 227, 228, 4, 221, 222, 223, 224, 230, 231, 232 }
  uselistorder i32 4, { 29, 24, 25, 27, 28, 26, 140, 141, 30, 31, 14, 32, 107, 16, 33, 136, 137, 138, 34, 95, 35, 155, 156, 157, 158, 159, 160, 90, 152, 153, 154, 144, 145, 167, 38, 36, 37, 198, 39, 275, 40, 41, 42, 7, 43, 44, 45, 46, 47, 179, 180, 48, 49, 172, 173, 177, 50, 51, 52, 53, 54, 55, 183, 56, 17, 187, 189, 57, 192, 193, 194, 58, 208, 209, 210, 59, 213, 216, 217, 60, 219, 220, 0, 225, 226, 61, 230, 62, 15, 18, 63, 235, 64, 65, 66, 67, 236, 68, 1, 69, 239, 292, 293, 70, 244, 2, 245, 71, 238, 72, 73, 243, 74, 3, 223, 75, 76, 214, 13, 77, 251, 250, 78, 79, 80, 296, 81, 82, 83, 267, 4, 253, 84, 254, 85, 86, 87, 88, 89, 91, 92, 93, 94, 262, 263, 8, 96, 20, 97, 98, 99, 100, 101, 21, 102, 103, 104, 105, 106, 22, 108, 109, 110, 111, 112, 118, 113, 114, 116, 117, 115, 119, 120, 121, 122, 127, 9, 123, 124, 10, 11, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 5, 142, 143, 149, 150, 146, 147, 148, 151, 161, 162, 165, 163, 164, 200, 166, 168, 169, 170, 171, 174, 175, 176, 178, 181, 182, 184, 185, 19, 186, 188, 190, 191, 195, 196, 197, 6, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 215, 218, 221, 222, 12, 224, 227, 228, 229, 231, 232, 233, 23, 234, 237, 297, 298, 294, 240, 246, 247, 248, 249, 241, 242, 252, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295 }
  uselistorder i32 (i32)* @unknown_44506, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10.1921 to i32), { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 1, 19, 20, 2, 21, 22, 23, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
}

define i32 @function_35b4b() local_unnamed_addr {
dec_label_pc_35b4b:
  %eax.global-to-local = alloca i32, align 4
  %v0_35b4b = load i32, i32* %eax.global-to-local, align 8
  ret i32 %v0_35b4b

; uselistorder directives
  uselistorder i32 1, {}
}

define i32 @function_35b61() local_unnamed_addr {
dec_label_pc_35b61:
  %v0_35b61 = load i32, i32* @ebp, align 4
  %v1_35b61 = add i32 %v0_35b61, -12
  %v2_35b61 = inttoptr i32 %v1_35b61 to i32*
  %v3_35b61 = load i32, i32* %v2_35b61, align 4
  %v3_35b64 = xor i32 %v3_35b61, ptrtoint ([3 x i8]* @3 to i32)
  %v4_35b64 = icmp eq i32 %v3_35b64, 0
  store i32 %v3_35b64, i32* @eax, align 8
  br i1 %v4_35b64, label %bb, label %dec_label_pc_35b6d

bb:                                               ; preds = %dec_label_pc_35b61
  %v1_35b6b = call i32 @function_35b72()
  br label %dec_label_pc_35b6d

dec_label_pc_35b6d:                               ; preds = %bb, %dec_label_pc_35b61
  %v2_35b6b = phi i32 [ %v1_35b6b, %bb ], [ %v3_35b64, %dec_label_pc_35b61 ]
  ret i32 %v2_35b6b

; uselistorder directives
  uselistorder i32 -12, { 24, 186, 118, 4, 5, 30, 32, 35, 211, 212, 37, 96, 77, 144, 145, 25, 119, 26, 152, 27, 28, 29, 39, 31, 114, 33, 34, 36, 38, 155, 156, 157, 159, 160, 161, 162, 428, 429, 430, 431, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 40, 177, 185, 127, 128, 41, 42, 111, 187, 188, 189, 190, 191, 103, 192, 472, 473, 86, 87, 210, 85, 540, 204, 205, 525, 234, 194, 195, 196, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 178, 179, 526, 225, 226, 43, 44, 45, 50, 52, 53, 304, 505, 506, 507, 106, 107, 257, 46, 47, 264, 48, 180, 49, 169, 228, 229, 175, 176, 231, 266, 267, 181, 182, 183, 57, 239, 6, 240, 7, 51, 508, 247, 248, 147, 249, 250, 251, 8, 9, 252, 253, 241, 242, 258, 259, 197, 254, 322, 138, 200, 262, 323, 54, 265, 55, 263, 60, 61, 271, 272, 273, 56, 10, 274, 58, 59, 227, 230, 275, 62, 63, 140, 141, 276, 268, 500, 129, 130, 131, 132, 282, 283, 243, 244, 284, 285, 64, 288, 65, 66, 289, 290, 292, 293, 291, 115, 116, 201, 294, 295, 67, 298, 299, 202, 220, 109, 11, 69, 324, 221, 222, 68, 309, 269, 184, 306, 307, 314, 310, 315, 316, 311, 312, 313, 319, 317, 318, 277, 278, 321, 320, 126, 326, 327, 279, 280, 75, 328, 329, 70, 330, 331, 332, 334, 335, 336, 71, 338, 340, 302, 12, 235, 303, 341, 342, 343, 345, 346, 347, 349, 72, 73, 74, 232, 80, 350, 308, 281, 352, 223, 353, 337, 435, 344, 78, 76, 79, 355, 356, 357, 358, 394, 81, 82, 359, 527, 528, 360, 361, 363, 366, 367, 372, 373, 376, 260, 514, 84, 89, 354, 379, 380, 382, 543, 546, 255, 389, 390, 362, 529, 530, 531, 391, 392, 393, 364, 365, 532, 533, 368, 395, 83, 383, 415, 416, 417, 418, 419, 420, 515, 399, 400, 401, 261, 481, 402, 403, 387, 388, 436, 404, 405, 88, 374, 409, 547, 534, 521, 369, 370, 371, 410, 536, 537, 535, 90, 411, 412, 396, 397, 398, 478, 445, 421, 422, 406, 407, 91, 516, 517, 384, 93, 440, 441, 442, 348, 446, 333, 447, 448, 339, 465, 466, 467, 377, 378, 413, 97, 98, 13, 375, 426, 541, 434, 14, 427, 92, 443, 444, 462, 463, 544, 15, 545, 548, 94, 16, 95, 449, 483, 450, 484, 485, 486, 487, 488, 489, 490, 491, 492, 451, 493, 494, 495, 496, 497, 452, 453, 454, 99, 100, 17, 455, 456, 509, 457, 18, 458, 459, 460, 101, 432, 433, 112, 113, 511, 512, 102, 549, 468, 469, 470, 471, 474, 475, 461, 122, 476, 477, 498, 135, 136, 499, 104, 501, 105, 108, 110, 117, 120, 121, 123, 124, 125, 133, 134, 19, 143, 137, 2, 0, 1, 142, 149, 3, 139, 146, 20, 148, 150, 151, 21, 153, 245, 246, 154, 238, 158, 256, 166, 270, 193, 198, 199, 203, 236, 237, 209, 224, 300, 301, 305, 233, 286, 287, 296, 297, 381, 325, 385, 408, 351, 518, 386, 538, 479, 480, 423, 424, 425, 482, 437, 438, 439, 522, 523, 502, 503, 414, 510, 542, 464, 22, 504, 513, 519, 520, 524, 539, 23 }
  uselistorder i32* @ebp, {}
}

define i32 @function_35b72() local_unnamed_addr {
dec_label_pc_35b72:
  %v0_35b76 = load i32, i32* @eax, align 8
  ret i32 %v0_35b76
}

define i32 @_ZN5boost24function_output_iteratorINS_8signals26detail12does_nothingEEppEi(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35b78:
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35ba4

bb:                                               ; preds = %dec_label_pc_35b78
  %v3_35ba2 = call i32 @function_35ba9(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_35ba4

dec_label_pc_35ba4:                               ; preds = %bb, %dec_label_pc_35b78
  %v4_35ba2 = phi i32 [ %v3_35ba2, %bb ], [ %arg1, %dec_label_pc_35b78 ]
  ret i32 %v4_35ba2
}

define i32 @function_35ba9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35ba9:
  %v0_35baa = load i32, i32* @eax, align 8
  ret i32 %v0_35baa
}

define i32 @_ZN5boost24function_output_iteratorINS_8signals26detail12does_nothingEEdeEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35bac:
  %v2_35bd6 = call i32 @unknown_6b7e8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35bea

bb:                                               ; preds = %dec_label_pc_35bac
  %v1_35be8 = call i32 @function_35bef()
  br label %dec_label_pc_35bea

dec_label_pc_35bea:                               ; preds = %bb, %dec_label_pc_35bac
  %v2_35be8 = phi i32 [ %v1_35be8, %bb ], [ %arg1, %dec_label_pc_35bac ]
  ret i32 %v2_35be8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_35bef() local_unnamed_addr {
dec_label_pc_35bef:
  %v0_35bf0 = load i32, i32* @eax, align 8
  ret i32 %v0_35bf0
}

define i32 @_ZN5boost24function_output_iteratorINS_8signals26detail12does_nothingEE12output_proxyaSINS_7variantINS_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS_6detail7variant5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_EEEERS5_RKT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35bf4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_35c14 = load i32, i32* %arg1, align 4
  %v2_35c20 = call i32 @unknown_6b868(i32 %v2_35c14, i32 %arg2)
  store i32 %tmp103, i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35c34

bb:                                               ; preds = %dec_label_pc_35bf4
  %v1_35c32 = call i32 @function_35c39()
  br label %dec_label_pc_35c34

dec_label_pc_35c34:                               ; preds = %bb, %dec_label_pc_35bf4
  %v2_35c32 = phi i32 [ %v1_35c32, %bb ], [ %tmp103, %dec_label_pc_35bf4 ]
  ret i32 %v2_35c32
}

define i32 @function_35c39() local_unnamed_addr {
dec_label_pc_35c39:
  %v0_35c3a = load i32, i32* @eax, align 8
  ret i32 %v0_35c3a
}

define i32 @_ZN5boost24function_output_iteratorINS_8signals26detail12does_nothingEE12output_proxyC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35c3c:
  store i32 %arg2, i32* %arg1, align 4
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35c6d

bb:                                               ; preds = %dec_label_pc_35c3c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_35c6b = call i32 @function_35c72(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_35c6d

dec_label_pc_35c6d:                               ; preds = %bb, %dec_label_pc_35c3c
  %v4_35c6b = phi i32 [ %v3_35c6b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35c3c ]
  ret i32 %v4_35c6b

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_35c72(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35c72:
  %v0_35c73 = load i32, i32* @eax, align 8
  ret i32 %v0_35c73
}

define i32 @_ZNK5boost8signals26detail12does_nothingclINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EEEEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35c74:
  store i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32* @eax, align 8
  br i1 icmp eq (i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), i32 0), label %bb, label %dec_label_pc_35c9d

bb:                                               ; preds = %dec_label_pc_35c74
  %v3_35c9b = call i32 @function_35ca2(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_35c9d

dec_label_pc_35c9d:                               ; preds = %bb, %dec_label_pc_35c74
  %v4_35c9b = phi i32 [ %v3_35c9b, %bb ], [ xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), %dec_label_pc_35c74 ]
  ret i32 %v4_35c9b

; uselistorder directives
  uselistorder i32 ptrtoint ([3 x i8]* @3 to i32), { 192, 193, 194, 0, 1, 195, 2, 3, 196, 4, 197, 5, 198, 6, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 7, 209, 210, 8, 211, 212, 9, 10, 11, 12, 213, 214, 13, 14, 215, 216, 217, 218, 15, 16, 17, 219, 220, 221, 222, 18, 223, 224, 225, 19, 226, 20, 227, 21, 22, 228, 229, 230, 231, 232, 233, 234, 235, 23, 24, 25, 236, 26, 27, 28, 29, 237, 238, 239, 30, 31, 32, 33, 240, 34, 35, 241, 242, 243, 36, 244, 245, 246, 247, 37, 248, 249, 250, 251, 38, 252, 253, 39, 40, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 41, 265, 42, 266, 267, 43, 44, 268, 269, 45, 46, 270, 271, 272, 273, 274, 275, 276, 277, 278, 47, 279, 48, 280, 49, 50, 281, 282, 283, 284, 285, 51, 52, 53, 54, 55, 286, 56, 57, 287, 288, 289, 290, 291, 292, 58, 59, 60, 293, 294, 61, 295, 62, 296, 297, 63, 64, 298, 299, 65, 66, 67, 68, 300, 301, 69, 70, 71, 302, 72, 73, 74, 75, 76, 77, 303, 304, 78, 305, 79, 306, 307, 80, 81, 82, 83, 308, 309, 310, 311, 312, 313, 314, 315, 316, 84, 317, 318, 85, 319, 86, 87, 88, 320, 321, 89, 322, 323, 324, 325, 90, 91, 326, 327, 328, 92, 329, 330, 93, 331, 94, 95, 96, 97, 332, 98, 333, 99, 100, 101, 102, 334, 335, 103, 336, 337, 104, 105, 338, 106, 339, 340, 341, 107, 108, 109, 110, 342, 343, 344, 111, 112, 113, 345, 346, 114, 115, 116, 117, 118, 347, 348, 349, 350, 351, 352, 353, 354, 119, 120, 355, 356, 357, 121, 122, 123, 358, 359, 124, 125, 126, 127, 360, 361, 362, 363, 128, 129, 364, 365, 366, 130, 131, 367, 368, 132, 133, 369, 370, 371, 372, 373, 374, 134, 375, 135, 376, 377, 378, 136, 379, 380, 137, 138, 381, 139, 140, 141, 142, 382, 383, 143, 384, 385, 386, 387, 388, 144, 145, 146, 147, 148, 389, 390, 149, 391, 392, 150, 393, 394, 395, 151, 396, 152, 397, 398, 153, 154, 155, 156, 399, 157, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 158, 412, 413, 414, 415, 159, 160, 161, 162, 163, 416, 417, 164, 165, 418, 166, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 167, 168, 169, 437, 438, 439, 170, 171, 172, 440, 173, 174, 175, 441, 442, 176, 443, 177, 178, 444, 179, 180, 445, 181, 446, 182, 183, 447, 448, 184, 449, 450, 451, 185, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 186, 187, 188, 463, 189, 464, 465, 466, 467, 468, 190, 469, 470, 471, 472, 473, 474, 191, 475, 476, 477, 478 }
  uselistorder i32 ptrtoint (i32* @global_var_14a1.1905 to i32), { 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 3, 65, 66, 67, 68, 69, 4, 70, 71, 72, 73, 74, 75, 5, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 6, 91, 7, 92, 93, 94, 95, 8, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 9, 119, 10, 120, 121, 122, 11, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 12, 136, 13, 137, 138, 139, 140, 141, 142, 143, 14, 144, 145, 146, 15, 16, 147, 17, 148, 149, 150, 151, 152, 153, 154, 18, 19, 155, 20, 156, 21, 157, 158, 159, 160, 172, 161, 162, 22, 163, 23, 164, 165, 166, 167, 168, 169, 170, 171, 24, 0, 25 }
  uselistorder i32 xor (i32 ptrtoint (i32* @global_var_14a1.1905 to i32), i32 ptrtoint ([3 x i8]* @3 to i32)), { 1, 409, 2, 410, 3, 411, 4, 412, 5, 413, 6, 414, 7, 415, 8, 416, 9, 417, 10, 418, 11, 419, 12, 420, 13, 421, 14, 422, 15, 423, 16, 424, 17, 425, 18, 426, 19, 427, 20, 428, 429, 21, 430, 22, 431, 23, 432, 24, 433, 25, 434, 26, 435, 27, 436, 28, 437, 29, 438, 30, 439, 31, 440, 32, 441, 33, 442, 34, 443, 35, 444, 36, 445, 37, 446, 38, 447, 39, 448, 40, 449, 450, 41, 451, 42, 452, 43, 453, 44, 454, 45, 455, 46, 456, 47, 457, 48, 458, 49, 459, 50, 460, 51, 461, 52, 462, 53, 463, 54, 464, 55, 465, 56, 466, 57, 467, 58, 468, 59, 469, 60, 470, 61, 471, 62, 472, 63, 473, 64, 474, 65, 475, 66, 476, 67, 477, 68, 478, 69, 479, 70, 480, 71, 481, 72, 482, 73, 483, 74, 484, 75, 485, 76, 486, 77, 487, 78, 488, 79, 489, 80, 490, 81, 491, 82, 492, 83, 493, 494, 84, 495, 85, 496, 86, 497, 87, 498, 88, 499, 89, 500, 501, 90, 502, 91, 503, 92, 504, 93, 505, 94, 506, 95, 507, 96, 508, 97, 509, 510, 98, 511, 99, 512, 100, 513, 101, 514, 102, 515, 103, 516, 104, 517, 105, 518, 106, 519, 107, 520, 108, 521, 109, 522, 110, 523, 111, 524, 112, 525, 113, 526, 527, 528, 114, 529, 530, 115, 531, 116, 532, 117, 533, 118, 534, 119, 535, 120, 536, 121, 537, 538, 122, 539, 123, 540, 541, 124, 542, 125, 543, 544, 126, 545, 127, 546, 547, 128, 548, 129, 549, 130, 550, 551, 131, 552, 132, 553, 133, 554, 134, 555, 135, 556, 136, 557, 137, 558, 138, 559, 139, 560, 140, 561, 141, 562, 142, 563, 143, 564, 144, 565, 145, 566, 146, 567, 147, 568, 148, 569, 570, 149, 571, 150, 572, 151, 573, 152, 574, 575, 153, 576, 154, 577, 155, 578, 156, 579, 157, 580, 158, 581, 159, 582, 160, 583, 584, 161, 585, 162, 586, 163, 587, 164, 588, 165, 589, 166, 590, 167, 591, 168, 592, 169, 593, 170, 594, 171, 595, 596, 597, 172, 598, 0, 599, 173, 600, 174, 601, 175, 602, 176, 603, 177, 604, 178, 605, 179, 606, 180, 607, 181, 608, 182, 609, 183, 610, 184, 611, 185, 612, 186, 613, 614, 187, 615, 616, 188, 617, 618, 189, 619, 190, 620, 191, 621, 622, 192, 623, 193, 624, 194, 625, 195, 626, 196, 627, 197, 628, 198, 629, 630, 199, 631, 632, 633, 200, 634, 201, 635, 636, 637, 202, 638, 203, 639, 640, 204, 641, 642, 205, 643, 206, 644, 207, 645, 208, 646, 209, 647, 210, 648, 211, 649, 212, 650, 213, 651, 214, 652, 215, 653, 216, 654, 217, 655, 218, 656, 219, 657, 220, 658, 221, 659, 222, 660, 223, 661, 662, 663, 224, 664, 225, 665, 226, 666, 667, 227, 668, 228, 669, 229, 670, 230, 671, 672, 231, 232, 673, 674, 233, 675, 234, 676, 235, 677, 236, 678, 237, 679, 238, 680, 239, 681, 240, 682, 241, 683, 684, 242, 685, 243, 686, 687, 244, 688, 245, 689, 246, 690, 247, 691, 248, 692, 249, 693, 250, 694, 251, 695, 252, 696, 253, 697, 254, 698, 255, 699, 256, 700, 257, 701, 258, 702, 703, 259, 704, 705, 260, 706, 707, 261, 708, 709, 710, 262, 711, 712, 713, 263, 714, 264, 715, 265, 716, 717, 266, 718, 719, 720, 721, 722, 723, 724, 725, 726, 267, 727, 268, 728, 729, 269, 730, 270, 731, 732, 271, 733, 734, 735, 736, 737, 738, 739, 740, 272, 741, 742, 273, 743, 744, 745, 746, 747, 274, 275, 748, 749, 750, 276, 277, 751, 278, 752, 753, 754, 279, 755, 756, 757, 280, 758, 281, 282, 759, 283, 284, 760, 285, 761, 286, 762, 287, 763, 764, 765, 766, 288, 767, 768, 769, 289, 770, 771, 290, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 291, 783, 292, 784, 293, 785, 786, 294, 787, 295, 296, 788, 297, 789, 790, 298, 299, 791, 300, 792, 793, 301, 794, 795, 796, 797, 302, 798, 303, 799, 800, 304, 801, 802, 305, 803, 306, 804, 805, 307, 806, 308, 309, 807, 808, 310, 809, 311, 810, 312, 811, 812, 313, 813, 814, 815, 314, 816, 817, 818, 819, 315, 820, 821, 822, 823, 316, 824, 825, 826, 827, 317, 828, 829, 830, 318, 831, 832, 319, 833, 320, 834, 321, 835, 836, 322, 837, 323, 838, 324, 839, 325, 840, 841, 326, 842, 327, 843, 844, 845, 328, 846, 329, 847, 330, 848, 331, 849, 332, 850, 333, 851, 334, 852, 853, 335, 854, 336, 855, 856, 337, 857, 338, 858, 339, 859, 340, 860, 341, 861, 342, 862, 343, 863, 344, 864, 345, 865, 346, 866, 347, 867, 868, 348, 869, 349, 870, 350, 871, 351, 872, 352, 873, 353, 874, 354, 875, 355, 876, 356, 877, 357, 878, 358, 879, 359, 880, 360, 881, 361, 882, 362, 883, 363, 884, 364, 885, 365, 886, 366, 887, 367, 888, 368, 889, 369, 890, 370, 891, 371, 892, 372, 893, 373, 894, 374, 895, 375, 896, 897, 898, 376, 899, 377, 900, 378, 901, 902, 379, 903, 380, 904, 905, 381, 906, 382, 907, 383, 908, 909, 384, 910, 385, 911, 386, 912, 387, 913, 388, 914, 389, 915, 390, 916, 391, 917, 392, 918, 393, 919, 920, 921, 922, 394, 923, 395, 924, 396, 925, 397, 926, 398, 927, 928, 929, 399, 930, 400, 931, 401, 932, 402, 933, 934, 403, 935, 404, 936, 937, 405, 938, 939, 406, 940, 407, 941, 408, 942, 944, 943 }
}

define i32 @function_35ca2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35ca2:
  %v0_35ca3 = load i32, i32* @eax, align 8
  ret i32 %v0_35ca3
}

declare i32 @unknown_35f03(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35f70(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_35fdd(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36037(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36232(i32) local_unnamed_addr

declare i32 @unknown_3628e(i32) local_unnamed_addr

declare i32 @unknown_36424(i32) local_unnamed_addr

declare i32 @unknown_3646c(i32) local_unnamed_addr

declare i32 @unknown_364c8(i32) local_unnamed_addr

declare i32 @unknown_365c0(i32) local_unnamed_addr

declare i32 @unknown_365f9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_366ef(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3675c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_367c9(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_367e2(i32, i32) local_unnamed_addr

declare i32 @unknown_36823(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3689c(i32, i32) local_unnamed_addr

declare i32 @unknown_36a7a(i32) local_unnamed_addr

declare i32 @unknown_36b38(i32, i32) local_unnamed_addr

declare i32 @unknown_36b72(i32, i32) local_unnamed_addr

declare i32 @unknown_36e18(i32, i32) local_unnamed_addr

declare i32 @unknown_36e2f(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36e9c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_36eba(i32) local_unnamed_addr

declare i32 @unknown_36f09(i32) local_unnamed_addr

declare i32 @unknown_36f63(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_370c8(i32, i32) local_unnamed_addr

declare i32 @unknown_37126(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37162(i32) local_unnamed_addr

declare i32 @unknown_374f7(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37560(i32) local_unnamed_addr

declare i32 @unknown_375ec(i32) local_unnamed_addr

declare i32 @unknown_37648(i32) local_unnamed_addr

declare i32 @unknown_377c6(i32) local_unnamed_addr

declare i32 @unknown_377de(i32) local_unnamed_addr

declare i32 @unknown_377fa(i32) local_unnamed_addr

declare i32 @unknown_37826(i32) local_unnamed_addr

declare i32 @unknown_37882(i32) local_unnamed_addr

declare i32 @unknown_378fc(i32, i32) local_unnamed_addr

declare i32 @unknown_37a68(i32, i32) local_unnamed_addr

declare i32 @unknown_37c9c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37cf4(i32, i32) local_unnamed_addr

declare i32 @unknown_37d3e(i32, i32) local_unnamed_addr

declare i32 @unknown_37d7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37e08(i32) local_unnamed_addr

declare i32 @unknown_37e42(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_37f00(i32, i32) local_unnamed_addr

declare i32 @unknown_37f0c(i32, i32) local_unnamed_addr

declare i32 @unknown_37fae(i32) local_unnamed_addr

declare i32 @unknown_38046(i32, i32) local_unnamed_addr

declare i32 @unknown_38088(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_381d6(i32) local_unnamed_addr

declare i32 @unknown_3821a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_382e6(i32, i32) local_unnamed_addr

declare i32 @unknown_3839c(i32) local_unnamed_addr

declare i32 @unknown_383aa(i32) local_unnamed_addr

declare i32 @unknown_38440(i32) local_unnamed_addr

declare i32 @unknown_38464(i32) local_unnamed_addr

declare i32 @unknown_384f0(i32, i32) local_unnamed_addr

declare i32 @unknown_385f4(i32) local_unnamed_addr

declare i32 @unknown_3869a(i32, i32) local_unnamed_addr

declare i32 @unknown_3874c(i32) local_unnamed_addr

declare i32 @unknown_3875c(i32, i32) local_unnamed_addr

declare i32 @unknown_3879a(i32) local_unnamed_addr

declare i32 @unknown_387a8(i32) local_unnamed_addr

declare i32 @unknown_3880c(i32, i32) local_unnamed_addr

declare i32 @unknown_38856(i32) local_unnamed_addr

declare i32 @unknown_3888a(i32) local_unnamed_addr

declare i32 @unknown_3893e(i32) local_unnamed_addr

declare i32 @unknown_38986(i32) local_unnamed_addr

declare i32 @unknown_389e2(i32) local_unnamed_addr

declare i32 @unknown_38a12(i32, i32) local_unnamed_addr

declare i32 @unknown_38ad0(i32, i32) local_unnamed_addr

declare i32 @unknown_38b10(i32, i32) local_unnamed_addr

declare i32 @unknown_38c42(i32, i32) local_unnamed_addr

declare i32 @unknown_38d40(i32, i32) local_unnamed_addr

declare i32 @unknown_38dcc() local_unnamed_addr

declare i32 @unknown_38e12() local_unnamed_addr

declare i32 @unknown_38e40() local_unnamed_addr

declare i32 @unknown_38f16(i32) local_unnamed_addr

declare i32 @unknown_38f74(i32) local_unnamed_addr

declare i32 @unknown_38fc2(i32) local_unnamed_addr

declare i32 @unknown_38fed(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39016(i32) local_unnamed_addr

declare i32 @unknown_39080(i32) local_unnamed_addr

declare i32 @unknown_390ad(i32) local_unnamed_addr

declare i32 @unknown_39120(i32, i32) local_unnamed_addr

declare i32 @unknown_391d4(i32) local_unnamed_addr

declare i32 @unknown_39201(i32) local_unnamed_addr

declare i32 @unknown_3927e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39282(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39336(i32) local_unnamed_addr

declare i32 @unknown_393f4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39400(i32, i32) local_unnamed_addr

declare i32 @unknown_3942c(i32) local_unnamed_addr

declare i32 @unknown_394a8(i32) local_unnamed_addr

declare i32 @unknown_395fc(i32) local_unnamed_addr

declare i32 @unknown_396ce(i32) local_unnamed_addr

declare i32 @unknown_3972e(i32, i32) local_unnamed_addr

declare i32 @unknown_39730(i32) local_unnamed_addr

declare i32 @unknown_39808(i32, i32) local_unnamed_addr

declare i32 @unknown_3982a(i32) local_unnamed_addr

declare i32 @unknown_39892(i32) local_unnamed_addr

declare i32 @unknown_398e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3991a(i32) local_unnamed_addr

declare i32 @unknown_399de(i32) local_unnamed_addr

declare i32 @unknown_39a16(i32) local_unnamed_addr

declare i32 @unknown_39a3c(i32) local_unnamed_addr

declare i32 @unknown_39a44(i32) local_unnamed_addr

declare i32 @unknown_39aee(i32) local_unnamed_addr

declare i32 @unknown_39af8(i32, i32) local_unnamed_addr

declare i32 @unknown_39b34() local_unnamed_addr

declare i32 @unknown_39b7c(i32, i32) local_unnamed_addr

declare i32 @unknown_39bcc(i32, i32) local_unnamed_addr

declare i32 @unknown_39c66(i32) local_unnamed_addr

declare i32 @unknown_39cb6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39ea6(i32, i32) local_unnamed_addr

declare i32 @unknown_39ef0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a112(i32, i32) local_unnamed_addr

declare i32 @unknown_3a22e(i32, i32) local_unnamed_addr

declare i32 @unknown_3a39c(i32, i32) local_unnamed_addr

declare i32 @unknown_3a48e(i32) local_unnamed_addr

declare i32 @unknown_3a500(i32) local_unnamed_addr

declare i32 @unknown_3a5d0(i32) local_unnamed_addr

declare i32 @unknown_3a60a(i32, i32) local_unnamed_addr

declare i32 @unknown_3a69e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a70a(i32, i32) local_unnamed_addr

declare i32 @unknown_3a7a8(i32, i32) local_unnamed_addr

declare i32 @unknown_3a7e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a8a0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a91a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a9a4(i32) local_unnamed_addr

declare i32 @unknown_3a9de(i32, i32) local_unnamed_addr

declare i32 @unknown_3aa1e(i32, i32) local_unnamed_addr

declare i32 @unknown_3aa60(i32, i32) local_unnamed_addr

declare i32 @unknown_3aac2(i32) local_unnamed_addr

declare i32 @unknown_3aaf2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ab46(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ad8a(i32, i32) local_unnamed_addr

declare i32 @unknown_3ae1e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ae4c(i32) local_unnamed_addr

declare i32 @unknown_3aef2(i32, i32) local_unnamed_addr

declare i32 @unknown_3afe2(i32, i32) local_unnamed_addr

declare i32 @unknown_3b1a0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b23a(i32) local_unnamed_addr

declare i32 @unknown_3b272(i32) local_unnamed_addr

declare i32 @unknown_3b306() local_unnamed_addr

declare i32 @unknown_3b39e(i32, i32) local_unnamed_addr

declare i32 @unknown_3b3ec(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b444(i32, i32) local_unnamed_addr

declare i32 @unknown_3b488(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b61a(i32) local_unnamed_addr

declare i32 @unknown_3b678(i32, i32) local_unnamed_addr

declare i32 @unknown_3b6c2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b7a8(i32, i32) local_unnamed_addr

declare i32 @unknown_3b7f2(i32, i32) local_unnamed_addr

declare i32 @unknown_3b8bc(i32) local_unnamed_addr

declare i32 @unknown_3b8e4(i32, i32) local_unnamed_addr

declare i32 @unknown_3b980(i32, i32) local_unnamed_addr

declare i32 @unknown_3ba52(i32, i32) local_unnamed_addr

declare i32 @unknown_3baba(i32) local_unnamed_addr

declare i32 @unknown_3bbd4(i32, i32) local_unnamed_addr

declare i32 @unknown_3bc30(i32) local_unnamed_addr

declare i32 @unknown_3bc68(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3bcac(i32) local_unnamed_addr

declare i32 @unknown_3bcc0(i32) local_unnamed_addr

declare i32 @unknown_3bcd4(i32, i32) local_unnamed_addr

declare i32 @unknown_3bce2(i32) local_unnamed_addr

declare i32 @unknown_3bd5c(i32) local_unnamed_addr

declare i32 @unknown_3bd72(i32, i32) local_unnamed_addr

declare i32 @unknown_3bdac(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3be6a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3bee4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3bf6e(i32) local_unnamed_addr

declare i32 @unknown_3bfa8(i32, i32) local_unnamed_addr

declare i32 @unknown_3bfe8(i32, i32) local_unnamed_addr

declare i32 @unknown_3c02a(i32, i32) local_unnamed_addr

declare i32 @unknown_3c06a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c0be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c302(i32, i32) local_unnamed_addr

declare i32 @unknown_3c396(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c40a(i32) local_unnamed_addr

declare i32 @unknown_3c46a(i32, i32) local_unnamed_addr

declare i32 @unknown_3c628(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c656(i32) local_unnamed_addr

declare i32 @unknown_3c6c2(i32) local_unnamed_addr

declare i32 @unknown_3c6fa(i32) local_unnamed_addr

declare i32 @unknown_3c7e0() local_unnamed_addr

declare i32 @unknown_3c878(i32, i32) local_unnamed_addr

declare i32 @unknown_3c962(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3c9fa() local_unnamed_addr

declare i32 @unknown_3ca1c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3caa0(i32, i32) local_unnamed_addr

declare i32 @unknown_3cb52(i32, i32) local_unnamed_addr

declare i32 @unknown_3cb9c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3cdbe(i32, i32) local_unnamed_addr

declare i32 @unknown_3cf2c(i32, i32) local_unnamed_addr

declare i32 @unknown_3d066(i32, i32) local_unnamed_addr

declare i32 @unknown_3d0ae(i32, i32) local_unnamed_addr

declare i32 @unknown_3d11c(i32) local_unnamed_addr

declare i32 @unknown_3d142(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d1ae(i32, i32) local_unnamed_addr

declare i32 @unknown_3d24c(i32, i32) local_unnamed_addr

declare i32 @unknown_3d286() local_unnamed_addr

declare i32 @unknown_3d2d2(i32) local_unnamed_addr

declare i32 @unknown_3d344(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d356(i32) local_unnamed_addr

declare i32 @unknown_3d3be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d3f0(i32) local_unnamed_addr

declare i32 @unknown_3d432(i32) local_unnamed_addr

declare i32 @unknown_3d448(i32) local_unnamed_addr

declare i32 @unknown_3d456(i32) local_unnamed_addr

declare i32 @unknown_3d482(i32, i32) local_unnamed_addr

declare i32 @unknown_3d4c2(i32, i32) local_unnamed_addr

declare i32 @unknown_3d504(i32, i32) local_unnamed_addr

declare i32 @unknown_3d524(i32, i32) local_unnamed_addr

declare i32 @unknown_3d544(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d578() local_unnamed_addr

declare i32 @unknown_3d598(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d5e4(i32) local_unnamed_addr

declare i32 @unknown_3d62e() local_unnamed_addr

declare i32 @unknown_3d7dc(i32, i32) local_unnamed_addr

declare i32 @unknown_3d81e(i32, i32) local_unnamed_addr

declare i32 @unknown_3d870(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d8a6(i32, i32) local_unnamed_addr

declare i32 @unknown_3da72(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dc6f() local_unnamed_addr

declare i32 @unknown_3dd6b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3de76(i32, i32) local_unnamed_addr

declare i32 @unknown_3df10(i32, i32) local_unnamed_addr

declare i32 @unknown_3df28(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e024(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e09a(i32, i32) local_unnamed_addr

declare i32 @unknown_3e132(i32, i32) local_unnamed_addr

declare i32 @unknown_3e13a() local_unnamed_addr

declare i32 @unknown_3e140(i32) local_unnamed_addr

declare i32 @unknown_3e288(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e36a(i32, i32) local_unnamed_addr

declare i32 @unknown_3e384(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e412(i32) local_unnamed_addr

declare i32 @unknown_3e541(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e63d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e678(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e6a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3e7fa(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e81e(i32) local_unnamed_addr

declare i32 @unknown_3e867(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e8d4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e92e(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eabc(i32) local_unnamed_addr

declare i32 @unknown_3eacc(i32, i32) local_unnamed_addr

declare i32 @unknown_3eb2a(i32, i32) local_unnamed_addr

declare i32 @unknown_3eee4(i32, i32) local_unnamed_addr

declare i32 @unknown_3ef3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f012(i32, i32) local_unnamed_addr

declare i32 @unknown_3f026(i32) local_unnamed_addr

declare i32 @unknown_3f0e6(i32) local_unnamed_addr

declare i32 @unknown_3f134(i32) local_unnamed_addr

declare i32 @unknown_3f210(i32) local_unnamed_addr

declare i32 @unknown_3f268(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f278(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f2d0(i32, i32) local_unnamed_addr

declare i32 @unknown_3f30a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f382(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f3a0(i32, i32) local_unnamed_addr

declare i32 @unknown_3f486(i32, i32) local_unnamed_addr

declare i32 @unknown_3f4d0(i32) local_unnamed_addr

declare i32 @unknown_3f502(i32, i32) local_unnamed_addr

declare i32 @unknown_3f542() local_unnamed_addr

declare i32 @unknown_3f572(i32, i32) local_unnamed_addr

declare i32 @unknown_3f596() local_unnamed_addr

declare i32 @unknown_3f5da(i32, i32) local_unnamed_addr

declare i32 @unknown_3f752(i32, i32) local_unnamed_addr

declare i32 @unknown_3f7e8(i32, i32) local_unnamed_addr

declare i32 @unknown_3f8ae(i32) local_unnamed_addr

declare i32 @unknown_3f8fa(i32) local_unnamed_addr

declare i32 @unknown_3f9be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fae4(i32, i32) local_unnamed_addr

declare i32 @unknown_3fb3a(i32, i32) local_unnamed_addr

declare i32 @unknown_3fb90(i32) local_unnamed_addr

declare i32 @unknown_3fc5a(i32, i32) local_unnamed_addr

declare i32 @unknown_3fc9c(i32) local_unnamed_addr

declare i32 @unknown_3fd1e(i32, i32) local_unnamed_addr

declare i32 @unknown_3fd40() local_unnamed_addr

declare i32 @unknown_3fd74(i32, i32) local_unnamed_addr

declare i32 @unknown_3fdbe(i32, i32) local_unnamed_addr

declare i32 @unknown_3fe08(i32, i32) local_unnamed_addr

declare i32 @unknown_3fe52(i32, i32) local_unnamed_addr

declare i32 @unknown_3fe92(i32) local_unnamed_addr

declare i32 @unknown_3fed2(i32) local_unnamed_addr

declare i32 @unknown_3ff12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ff4e(i32, i32) local_unnamed_addr

declare i32 @unknown_3ff64(i32) local_unnamed_addr

declare i32 @unknown_3ffce(i32, i32) local_unnamed_addr

declare i32 @unknown_3ffd0(i32) local_unnamed_addr

declare i32 @unknown_4000e(i32) local_unnamed_addr

declare i32 @unknown_40046(i32, i32) local_unnamed_addr

declare i32 @unknown_4024e(i32, i32) local_unnamed_addr

declare i32 @unknown_4025c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40340(i32, i32) local_unnamed_addr

declare i32 @unknown_4038c(i32, i32) local_unnamed_addr

declare i32 @unknown_40432(i32, i32) local_unnamed_addr

declare i32 @unknown_405f0(i32, i32) local_unnamed_addr

declare i32 @unknown_406bb(i32, i32) local_unnamed_addr

declare i32 @unknown_4073e(i32, i32) local_unnamed_addr

declare i32 @unknown_40773(i32) local_unnamed_addr

declare i32 @unknown_407f4(i32) local_unnamed_addr

declare i32 @unknown_408a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_408e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40972(i32) local_unnamed_addr

declare i32 @unknown_40993(i32) local_unnamed_addr

declare i32 @unknown_40a2e(i32) local_unnamed_addr

declare i32 @unknown_40a50(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40b3e(i32) local_unnamed_addr

declare i32 @unknown_40bbc(i32) local_unnamed_addr

declare i32 @unknown_40cce(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40d1a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40dd6(i32) local_unnamed_addr

declare i32 @unknown_40dde(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40e4d(i32) local_unnamed_addr

declare i32 @unknown_40ebe(i32, i32) local_unnamed_addr

declare i32 @unknown_4104e(i32, i32) local_unnamed_addr

declare i32 @unknown_41254(i32, i32) local_unnamed_addr

declare i32 @unknown_41350(i32, i32) local_unnamed_addr

declare i32 @unknown_41352(i32, i32) local_unnamed_addr

declare i32 @unknown_413b8(i32, i32) local_unnamed_addr

declare i32 @unknown_413d5(i32, i32) local_unnamed_addr

declare i32 @unknown_41486(i32, i32) local_unnamed_addr

declare i32 @unknown_414fc(i32) local_unnamed_addr

declare i32 @unknown_41530(i32, i32) local_unnamed_addr

declare i32 @unknown_4157a(i32, i32) local_unnamed_addr

declare i32 @unknown_415ba(i32) local_unnamed_addr

declare i32 @unknown_415ec(i32) local_unnamed_addr

declare i32 @unknown_41614(i32, i32) local_unnamed_addr

declare i32 @unknown_41632(i32, i32) local_unnamed_addr

declare i32 @unknown_41648(i32) local_unnamed_addr

declare i32 @unknown_41694(i32) local_unnamed_addr

declare i32 @unknown_416c4(i32, i32) local_unnamed_addr

declare i32 @unknown_41844(i32, i32) local_unnamed_addr

declare i32 @unknown_41878(i32, i32) local_unnamed_addr

declare i32 @unknown_418c4(i32) local_unnamed_addr

declare i32 @unknown_41a02(i32) local_unnamed_addr

declare i32 @unknown_41a3c(i32, i32) local_unnamed_addr

declare i32 @unknown_41aee(i32, i32) local_unnamed_addr

declare i32 @unknown_41b52(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41b6c(i32) local_unnamed_addr

declare i32 @unknown_41b82(i32) local_unnamed_addr

declare i32 @unknown_41cbf(i32, i32) local_unnamed_addr

declare i32 @unknown_41cd0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41cea(i32) local_unnamed_addr

declare i32 @unknown_41d74(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41e64(i32) local_unnamed_addr

declare i32 @unknown_41e6c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41ea4(i32, i32) local_unnamed_addr

declare i32 @unknown_41eee(i32) local_unnamed_addr

declare i32 @unknown_41ef6(i32) local_unnamed_addr

declare i32 @unknown_41f30(i32, i32) local_unnamed_addr

declare i32 @unknown_41f34(i32, i32) local_unnamed_addr

declare i32 @unknown_41f70(i32, i32) local_unnamed_addr

declare i32 @unknown_4208c(i32, i32) local_unnamed_addr

declare i32 @unknown_42112(i32, i32) local_unnamed_addr

declare i32 @unknown_42194(i32) local_unnamed_addr

declare i32 @unknown_421c4(i32) local_unnamed_addr

declare i32 @unknown_421f4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_422d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4235c(i32, i32) local_unnamed_addr

declare i32 @unknown_4239c(i32, i32) local_unnamed_addr

declare i32 @unknown_423e4(i32) local_unnamed_addr

declare i32 @unknown_424dc(i32, i32) local_unnamed_addr

declare i32 @unknown_42518(i32, i32) local_unnamed_addr

declare i32 @unknown_42548(i32, i32) local_unnamed_addr

declare i32 @unknown_425ce(i32, i32) local_unnamed_addr

declare i32 @unknown_42650(i32) local_unnamed_addr

declare i32 @unknown_426e6(i32) local_unnamed_addr

declare i32 @unknown_4278e(i32, i32) local_unnamed_addr

declare i32 @unknown_42864(i32) local_unnamed_addr

declare i32 @unknown_42866(i32, i32) local_unnamed_addr

declare i32 @unknown_4294c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_429a4(i32, i32) local_unnamed_addr

declare i32 @unknown_42bf2(i32, i32) local_unnamed_addr

declare i32 @unknown_42d22(i32) local_unnamed_addr

declare i32 @unknown_42d52(i32) local_unnamed_addr

declare i32 @unknown_42da0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42dea(i32, i32) local_unnamed_addr

declare i32 @unknown_42fb8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4307c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43106(i32, i32) local_unnamed_addr

declare i32 @unknown_43262(i32, i32) local_unnamed_addr

declare i32 @unknown_432d4(i32, i32) local_unnamed_addr

declare i32 @unknown_43468(i32, i32) local_unnamed_addr

declare i32 @unknown_43566(i32, i32) local_unnamed_addr

declare i32 @unknown_435cc(i32, i32) local_unnamed_addr

declare i32 @unknown_43744(i32, i32) local_unnamed_addr

declare i32 @unknown_4378e(i32) local_unnamed_addr

declare i32 @unknown_437ce(i32) local_unnamed_addr

declare i32 @unknown_437f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43800(i32) local_unnamed_addr

declare i32 @unknown_43836(i32) local_unnamed_addr

declare i32 @unknown_4385c(i32) local_unnamed_addr

declare i32 @unknown_438a8(i32) local_unnamed_addr

declare i32 @unknown_438d8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4394a(i32) local_unnamed_addr

declare i32 @unknown_4397e(i32) local_unnamed_addr

declare i32 @unknown_43aaa(i32) local_unnamed_addr

declare i32 @unknown_43ad8(i32) local_unnamed_addr

declare i32 @unknown_43b44(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43c26(i32) local_unnamed_addr

declare i32 @unknown_43c56(i32) local_unnamed_addr

declare i32 @unknown_43d96(i32, i32) local_unnamed_addr

declare i32 @unknown_43ee4(i32, i32) local_unnamed_addr

declare i32 @unknown_43f26(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43f7e(i32, i32) local_unnamed_addr

declare i32 @unknown_43fb0(i32) local_unnamed_addr

declare i32 @unknown_43fea(i32, i32) local_unnamed_addr

declare i32 @unknown_44002(i32, i32) local_unnamed_addr

declare i32 @unknown_4402a(i32, i32) local_unnamed_addr

declare i32 @unknown_4409a(i32, i32) local_unnamed_addr

declare i32 @unknown_4409e(i32) local_unnamed_addr

declare i32 @unknown_441a4(i32) local_unnamed_addr

declare i32 @unknown_44236(i32) local_unnamed_addr

declare i32 @unknown_442aa(i32) local_unnamed_addr

declare i32 @unknown_442e4(i32, i32) local_unnamed_addr

declare i32 @unknown_44324(i32, i32) local_unnamed_addr

declare i32 @unknown_44366(i32) local_unnamed_addr

declare i32 @unknown_4436c(i32) local_unnamed_addr

declare i32 @unknown_4439e(i32) local_unnamed_addr

declare i32 @unknown_443d4(i32) local_unnamed_addr

declare i32 @unknown_4446c(i32) local_unnamed_addr

declare i32 @unknown_444a0(i32, i32) local_unnamed_addr

declare i32 @unknown_444da(i32) local_unnamed_addr

declare i32 @unknown_44504(i32, i32) local_unnamed_addr

declare i32 @unknown_44506(i32) local_unnamed_addr

declare i32 @unknown_44572(i32) local_unnamed_addr

declare i32 @unknown_44586(i32) local_unnamed_addr

declare i32 @unknown_445b0(i32) local_unnamed_addr

declare i32 @unknown_445b6(i32) local_unnamed_addr

declare i32 @unknown_445e0() local_unnamed_addr

declare i32 @unknown_4466e(i32) local_unnamed_addr

declare i32 @unknown_44716(i32, i32) local_unnamed_addr

declare i32 @unknown_447ac(i32, i32) local_unnamed_addr

declare i32 @unknown_44840(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44898(i32, i32) local_unnamed_addr

declare i32 @unknown_44ae6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44cbe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44cce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44d92(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44ec2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44f40(i32) local_unnamed_addr

declare i32 @unknown_44f76(i32) local_unnamed_addr

declare i32 @unknown_44fca(i32, i32) local_unnamed_addr

declare i32 @unknown_45088(i32) local_unnamed_addr

declare i32 @unknown_45196(i32, i32) local_unnamed_addr

declare i32 @unknown_451d0(i32, i32) local_unnamed_addr

declare i32 @unknown_45306(i32) local_unnamed_addr

declare i32 @unknown_45334(i32, i32) local_unnamed_addr

declare i32 @unknown_4535a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45398(i32, i32) local_unnamed_addr

declare i32 @unknown_45478(i32) local_unnamed_addr

declare i32 @unknown_45486(i32) local_unnamed_addr

declare i32 @unknown_454ac(i32) local_unnamed_addr

declare i32 @unknown_454f6(i32, i32) local_unnamed_addr

declare i32 @unknown_45536(i32) local_unnamed_addr

declare i32 @unknown_45568(i32) local_unnamed_addr

declare i32 @unknown_455c4(i32) local_unnamed_addr

declare i32 @unknown_45610(i32) local_unnamed_addr

declare i32 @unknown_45640(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_456a0(i32) local_unnamed_addr

declare i32 @unknown_456a6() local_unnamed_addr

declare i32 @unknown_456bc(i32) local_unnamed_addr

declare i32 @unknown_456da(i32, i32) local_unnamed_addr

declare i32 @unknown_456e6(i32, i32) local_unnamed_addr

declare i32 @unknown_45824(i32) local_unnamed_addr

declare i32 @unknown_45840(i32) local_unnamed_addr

declare i32 @unknown_4584a(i32, i32) local_unnamed_addr

declare i32 @unknown_4585e(i32, i32) local_unnamed_addr

declare i32 @unknown_4598e(i32) local_unnamed_addr

declare i32 @unknown_45a04(i32, i32) local_unnamed_addr

declare i32 @unknown_45a6a(i32, i32) local_unnamed_addr

declare i32 @unknown_45afe(i32, i32) local_unnamed_addr

declare i32 @unknown_45b94(i32) local_unnamed_addr

declare i32 @unknown_45bb8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45c18(i32, i32) local_unnamed_addr

declare i32 @unknown_45c48(i32, i32) local_unnamed_addr

declare i32 @unknown_45c4c(i32, i32) local_unnamed_addr

declare i32 @unknown_45c8e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45ce6(i32, i32) local_unnamed_addr

declare i32 @unknown_45d18(i32) local_unnamed_addr

declare i32 @unknown_45d52(i32, i32) local_unnamed_addr

declare i32 @unknown_45d92(i32, i32) local_unnamed_addr

declare i32 @unknown_45e02(i32, i32) local_unnamed_addr

declare i32 @unknown_45e68(i32, i32) local_unnamed_addr

declare i32 @unknown_45e84(i32) local_unnamed_addr

declare i32 @unknown_45eb4(i32) local_unnamed_addr

declare i32 @unknown_45ee4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45f76(i32) local_unnamed_addr

declare i32 @unknown_45faa(i32, i32) local_unnamed_addr

declare i32 @unknown_45ffa() local_unnamed_addr

declare i32 @unknown_45ffc(i32, i32) local_unnamed_addr

declare i32 @unknown_4604a(i32, i32) local_unnamed_addr

declare i32 @unknown_4604c(i32, i32) local_unnamed_addr

declare i32 @unknown_4608c(i32, i32) local_unnamed_addr

declare i32 @unknown_4609e() local_unnamed_addr

declare i32 @unknown_460b8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_460d4(i32) local_unnamed_addr

declare i32 @unknown_460d8(i32) local_unnamed_addr

declare i32 @unknown_460de(i32) local_unnamed_addr

declare i32 @unknown_46107(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46112(i32, i32) local_unnamed_addr

declare i32 @unknown_4615e() local_unnamed_addr

declare i32 @unknown_46162() local_unnamed_addr

declare i32 @unknown_461b2() local_unnamed_addr

declare i32 @unknown_461c2(i32, i32) local_unnamed_addr

declare i32 @unknown_46206() local_unnamed_addr

declare i32 @unknown_46208(i32, i32) local_unnamed_addr

declare i32 @unknown_46240(i32) local_unnamed_addr

declare i32 @unknown_46246(i32) local_unnamed_addr

declare i32 @unknown_4626c(i32, i32) local_unnamed_addr

declare i32 @unknown_4626f(i32) local_unnamed_addr

declare i32 @unknown_4627a(i32, i32) local_unnamed_addr

declare i32 @unknown_462c6() local_unnamed_addr

declare i32 @unknown_462ca() local_unnamed_addr

declare i32 @unknown_462ee(i32) local_unnamed_addr

declare i32 @unknown_4631a() local_unnamed_addr

declare i32 @unknown_4631e(i32) local_unnamed_addr

declare i32 @unknown_4632a(i32, i32) local_unnamed_addr

declare i32 @unknown_4636e() local_unnamed_addr

declare i32 @unknown_46380(i32) local_unnamed_addr

declare i32 @unknown_46386(i32, i32) local_unnamed_addr

declare i32 @unknown_463a8() local_unnamed_addr

declare i32 @unknown_463d6(i32) local_unnamed_addr

declare i32 @unknown_463d7() local_unnamed_addr

declare i32 @unknown_463e8(i32, i32) local_unnamed_addr

declare i32 @unknown_4642e() local_unnamed_addr

declare i32 @unknown_46492() local_unnamed_addr

declare i32 @unknown_46514(i32, i32) local_unnamed_addr

declare i32 @unknown_465a8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46600(i32) local_unnamed_addr

declare i32 @unknown_46726() local_unnamed_addr

declare i32 @unknown_4675e() local_unnamed_addr

declare i32 @unknown_46760(i32) local_unnamed_addr

declare i32 @unknown_467b4(i32, i32) local_unnamed_addr

declare i32 @unknown_4684e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4692a(i32, i32) local_unnamed_addr

declare i32 @unknown_4697d(i32) local_unnamed_addr

declare i32 @unknown_469ab(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46a0a(i32) local_unnamed_addr

declare i32 @unknown_46b7f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46bde(i32) local_unnamed_addr

declare i32 @unknown_46c0b() local_unnamed_addr

declare i32 @unknown_46c5c(i32, i32) local_unnamed_addr

declare i32 @unknown_46c7a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46cfe(i32) local_unnamed_addr

declare i32 @unknown_46d15(i32) local_unnamed_addr

declare i32 @unknown_46d26(i32) local_unnamed_addr

declare i32 @unknown_46d53(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46da2(i32) local_unnamed_addr

declare i32 @unknown_46db1(i32) local_unnamed_addr

declare i32 @unknown_46ddf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46ecb(i32) local_unnamed_addr

declare i32 @unknown_46edb(i32) local_unnamed_addr

declare i32 @unknown_46f08(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46f57(i32) local_unnamed_addr

declare i32 @unknown_46f6a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46f76(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46f8b(i32) local_unnamed_addr

declare i32 @unknown_46fb8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_470cc(i32, i32) local_unnamed_addr

declare i32 @unknown_470d4(i32) local_unnamed_addr

declare i32 @unknown_47101(i32, i32) local_unnamed_addr

declare i32 @unknown_4713e(i32, i32) local_unnamed_addr

declare i32 @unknown_47142(i32) local_unnamed_addr

declare i32 @unknown_4716f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47178(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4723f(i32) local_unnamed_addr

declare i32 @unknown_4726c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_472ad(i32) local_unnamed_addr

declare i32 @unknown_472da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_473ab(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_473f5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4747e(i32, i32) local_unnamed_addr

declare i32 @unknown_474dc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47510() local_unnamed_addr

declare i32 @unknown_47526(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47614(i32) local_unnamed_addr

declare i32 @unknown_4763b() local_unnamed_addr

declare i32 @unknown_4764a(i32) local_unnamed_addr

declare i32 @unknown_4767c(i32) local_unnamed_addr

declare i32 @unknown_476a9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47779(i32) local_unnamed_addr

declare i32 @unknown_477a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_478e4(i32) local_unnamed_addr

declare i32 @unknown_479e0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47c1a(i32) local_unnamed_addr

declare i32 @unknown_47c4a(i32) local_unnamed_addr

declare i32 @unknown_47c7a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47cdc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47d40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47d74(i32) local_unnamed_addr

declare i32 @unknown_47daa(i32, i32) local_unnamed_addr

declare i32 @unknown_47dae(i32, i32) local_unnamed_addr

declare i32 @unknown_47e2c(i32) local_unnamed_addr

declare i32 @unknown_47f1e(i32) local_unnamed_addr

declare i32 @unknown_47f62(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47fc0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48070(i32, i32) local_unnamed_addr

declare i32 @unknown_480b0(i32) local_unnamed_addr

declare i32 @unknown_481a8(i32, i32) local_unnamed_addr

declare i32 @unknown_48268(i32) local_unnamed_addr

declare i32 @unknown_482ec(i32, i32) local_unnamed_addr

declare i32 @unknown_482ee(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_483e6(i32) local_unnamed_addr

declare i32 @unknown_4859e(i32, i32) local_unnamed_addr

declare i32 @unknown_48780(i32) local_unnamed_addr

declare i32 @unknown_48856(i32, i32) local_unnamed_addr

declare i32 @unknown_48858(i32, i32) local_unnamed_addr

declare i32 @unknown_48896(i32) local_unnamed_addr

declare i32 @unknown_488c6(i32) local_unnamed_addr

declare i32 @unknown_48928(i32, i32) local_unnamed_addr

declare i32 @unknown_48964() local_unnamed_addr

declare i32 @unknown_489ae(i32) local_unnamed_addr

declare i32 @unknown_48ace(i32) local_unnamed_addr

declare i32 @unknown_48afc(i32, i32) local_unnamed_addr

declare i32 @unknown_48b38(i32, i32) local_unnamed_addr

declare i32 @unknown_48b54(i32, i32) local_unnamed_addr

declare i32 @unknown_48b8c(i32) local_unnamed_addr

declare i32 @unknown_48ba2(i32, i32) local_unnamed_addr

declare i32 @unknown_48bbc(i32) local_unnamed_addr

declare i32 @unknown_48bec(i32, i32) local_unnamed_addr

declare i32 @unknown_48c24(i32, i32) local_unnamed_addr

declare i32 @unknown_48c34(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48d58(i32, i32) local_unnamed_addr

declare i32 @unknown_48d90(i32) local_unnamed_addr

declare i32 @unknown_48dfc(i32) local_unnamed_addr

declare i32 @unknown_48e94(i32, i32) local_unnamed_addr

declare i32 @unknown_48ee4(i32) local_unnamed_addr

declare i32 @unknown_48f18(i32, i32) local_unnamed_addr

declare i32 @unknown_48f5a() local_unnamed_addr

declare i32 @unknown_48f9a(i32, i32) local_unnamed_addr

declare i32 @unknown_48fea(i32) local_unnamed_addr

declare i32 @unknown_4901a(i32, i32) local_unnamed_addr

declare i32 @unknown_49072(i32) local_unnamed_addr

declare i32 @unknown_490a0(i32, i32) local_unnamed_addr

declare i32 @unknown_490de(i32, i32) local_unnamed_addr

declare i32 @unknown_490f0(i32) local_unnamed_addr

declare i32 @unknown_4911e(i32, i32) local_unnamed_addr

declare i32 @unknown_49176(i32, i32) local_unnamed_addr

declare i32 @unknown_491fe(i32, i32) local_unnamed_addr

declare i32 @unknown_49292(i32, i32) local_unnamed_addr

declare i32 @unknown_49326(i32, i32) local_unnamed_addr

declare i32 @unknown_4947a(i32) local_unnamed_addr

declare i32 @unknown_494ae(i32, i32) local_unnamed_addr

declare i32 @unknown_494b6(i32, i32) local_unnamed_addr

declare i32 @unknown_494f6(i32, i32) local_unnamed_addr

declare i32 @unknown_49798(i32) local_unnamed_addr

declare i32 @unknown_497a0(i32) local_unnamed_addr

declare i32 @unknown_497ce(i32) local_unnamed_addr

declare i32 @unknown_498d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4996c(i32, i32) local_unnamed_addr

declare i32 @unknown_49a48(i32, i32) local_unnamed_addr

declare i32 @unknown_49bca(i32) local_unnamed_addr

declare i32 @unknown_49c02(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49c68(i32, i32) local_unnamed_addr

declare i32 @unknown_49dfa(i32) local_unnamed_addr

declare i32 @unknown_49e7e(i32) local_unnamed_addr

declare i32 @unknown_49ef8(i32) local_unnamed_addr

declare i32 @unknown_49f11(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49f22(i32) local_unnamed_addr

declare i32 @unknown_49f32(i32, i32) local_unnamed_addr

declare i32 @unknown_49f52(i32) local_unnamed_addr

declare i32 @unknown_4a03a(i32) local_unnamed_addr

declare i32 @unknown_4a08e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a0a2(i32, i32) local_unnamed_addr

declare i32 @unknown_4a0f7(i32) local_unnamed_addr

declare i32 @unknown_4a14e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a268(i32, i32) local_unnamed_addr

declare i32 @unknown_4a314(i32) local_unnamed_addr

declare i32 @unknown_4a3de(i32, i32) local_unnamed_addr

declare i32 @unknown_4a3ec(i32) local_unnamed_addr

declare i32 @unknown_4a420(i32) local_unnamed_addr

declare i32 @unknown_4a470(i32, i32) local_unnamed_addr

declare i32 @unknown_4a4c4(i32) local_unnamed_addr

declare i32 @unknown_4a4f8(i32, i32) local_unnamed_addr

declare i32 @unknown_4a542(i32, i32) local_unnamed_addr

declare i32 @unknown_4a58c(i32, i32) local_unnamed_addr

declare i32 @unknown_4a58e(i32) local_unnamed_addr

declare i32 @unknown_4a5cc(i32) local_unnamed_addr

declare i32 @unknown_4a60c(i32) local_unnamed_addr

declare i32 @unknown_4a64c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a708(i32, i32) local_unnamed_addr

declare i32 @unknown_4a722(i32, i32) local_unnamed_addr

declare i32 @unknown_4a748(i32) local_unnamed_addr

declare i32 @unknown_4a988(i32, i32) local_unnamed_addr

declare i32 @unknown_4a9dc(i32, i32) local_unnamed_addr

declare i32 @unknown_4aa7a(i32, i32) local_unnamed_addr

declare i32 @unknown_4aaac(i32, i32) local_unnamed_addr

declare i32 @unknown_4ab6b(i32, i32) local_unnamed_addr

declare i32 @unknown_4abbe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ac98() local_unnamed_addr

declare i32 @unknown_4acd8(i32, i32) local_unnamed_addr

declare i32 @unknown_4ad10() local_unnamed_addr

declare i32 @unknown_4ad40(i32) local_unnamed_addr

declare i32 @unknown_4ada8(i32) local_unnamed_addr

declare i32 @unknown_4add8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ae60(i32) local_unnamed_addr

declare i32 @unknown_4aeac(i32, i32) local_unnamed_addr

declare i32 @unknown_4aedc(i32, i32) local_unnamed_addr

declare i32 @unknown_4aee6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4afa6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b045(i32) local_unnamed_addr

declare i32 @unknown_4b144(i32) local_unnamed_addr

declare i32 @unknown_4b1ce(i32) local_unnamed_addr

declare i32 @unknown_4b1ec() local_unnamed_addr

declare i32 @unknown_4b1f0(i32) local_unnamed_addr

declare i32 @unknown_4b212(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b22c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b2cc(i32, i32) local_unnamed_addr

declare i32 @unknown_4b3cf(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b474(i32, i32) local_unnamed_addr

declare i32 @unknown_4b55a(i32) local_unnamed_addr

declare i32 @unknown_4b6c4(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b6f0(i32) local_unnamed_addr

declare i32 @unknown_4b75e(i32, i32) local_unnamed_addr

declare i32 @unknown_4b85b(i32) local_unnamed_addr

declare i32 @unknown_4b910(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b9f5(i32) local_unnamed_addr

declare i32 @unknown_4ba5c(i32) local_unnamed_addr

declare i32 @unknown_4baa2(i32, i32) local_unnamed_addr

declare i32 @unknown_4bae2(i32, i32) local_unnamed_addr

declare i32 @unknown_4baf2(i32) local_unnamed_addr

declare i32 @unknown_4bb27(i32) local_unnamed_addr

declare i32 @unknown_4bb54(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bb5e(i32) local_unnamed_addr

declare i32 @unknown_4bc4e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bd2e(i32, i32) local_unnamed_addr

declare i32 @unknown_4bd9d(i32) local_unnamed_addr

declare i32 @unknown_4bdcd(i32) local_unnamed_addr

declare i32 @unknown_4bdec(i32, i32) local_unnamed_addr

declare i32 @unknown_4be98(i32, i32) local_unnamed_addr

declare i32 @unknown_4becc(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bf6f(i32) local_unnamed_addr

declare i32 @unknown_4bfce(i32) local_unnamed_addr

declare i32 @unknown_4bffc(i32) local_unnamed_addr

declare i32 @unknown_4c01a(i32) local_unnamed_addr

declare i32 @unknown_4c059(i32) local_unnamed_addr

declare i32 @unknown_4c0e6(i32) local_unnamed_addr

declare i32 @unknown_4c116(i32) local_unnamed_addr

declare i32 @unknown_4c125(i32) local_unnamed_addr

declare i32 @unknown_4c12c(i32) local_unnamed_addr

declare i32 @unknown_4c1ae(i32) local_unnamed_addr

declare i32 @unknown_4c1b1(i32) local_unnamed_addr

declare i32 @unknown_4c2a2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c322(i32) local_unnamed_addr

declare i32 @unknown_4c352(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c386(i32) local_unnamed_addr

declare i32 @unknown_4c3c4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c44c(i32) local_unnamed_addr

declare i32 @unknown_4c496(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c4e4(i32) local_unnamed_addr

declare i32 @unknown_4c570(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c68c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c749(i32) local_unnamed_addr

declare i32 @unknown_4c77f(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c7a0() local_unnamed_addr

declare i32 @unknown_4c8ba(i32, i32) local_unnamed_addr

declare i32 @unknown_4c966(i32) local_unnamed_addr

declare i32 @unknown_4c974(i32) local_unnamed_addr

declare i32 @unknown_4ca30(i32, i32) local_unnamed_addr

declare i32 @unknown_4ca60(i32) local_unnamed_addr

declare i32 @unknown_4ca62(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ca72(i32) local_unnamed_addr

declare i32 @unknown_4cb16(i32) local_unnamed_addr

declare i32 @unknown_4cb4a(i32, i32) local_unnamed_addr

declare i32 @unknown_4cb94(i32, i32) local_unnamed_addr

declare i32 @unknown_4cbde(i32, i32) local_unnamed_addr

declare i32 @unknown_4cc1e(i32) local_unnamed_addr

declare i32 @unknown_4cc5e(i32) local_unnamed_addr

declare i32 @unknown_4cc9e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ccb4(i32, i32) local_unnamed_addr

declare i32 @unknown_4cd1a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cd5a(i32, i32) local_unnamed_addr

declare i32 @unknown_4cd9a(i32) local_unnamed_addr

declare i32 @unknown_4ce50(i32) local_unnamed_addr

declare i32 @unknown_4cfb4(i32, i32) local_unnamed_addr

declare i32 @unknown_4cfd6(i32) local_unnamed_addr

declare i32 @unknown_4cfda(i32, i32) local_unnamed_addr

declare i32 @unknown_4d0a8(i32) local_unnamed_addr

declare i32 @unknown_4d0cc(i32) local_unnamed_addr

declare i32 @unknown_4d1bd(i32, i32) local_unnamed_addr

declare i32 @unknown_4d2ea() local_unnamed_addr

declare i32 @unknown_4d380(i32) local_unnamed_addr

declare i32 @unknown_4d42a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d4b2() local_unnamed_addr

declare i32 @unknown_4d5f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d688(i32, i32) local_unnamed_addr

declare i32 @unknown_4d710(i32) local_unnamed_addr

declare i32 @unknown_4d790(i32, i32) local_unnamed_addr

declare i32 @unknown_4d9ca(i32, i32) local_unnamed_addr

declare i32 @unknown_4db7c(i32) local_unnamed_addr

declare i32 @unknown_4dba8(i32) local_unnamed_addr

declare i32 @unknown_4dbaa(i32, i32) local_unnamed_addr

declare i32 @unknown_4dc3c(i32) local_unnamed_addr

declare i32 @unknown_4dc7e(i32, i32) local_unnamed_addr

declare i32 @unknown_4dc80(i32) local_unnamed_addr

declare i32 @unknown_4dcb0(i32) local_unnamed_addr

declare i32 @unknown_4dd92() local_unnamed_addr

declare i32 @unknown_4dde2() local_unnamed_addr

declare i32 @unknown_4de17() local_unnamed_addr

declare i32 @unknown_4de1a(i32) local_unnamed_addr

declare i32 @unknown_4de7c() local_unnamed_addr

declare i32 @unknown_4de82(i32) local_unnamed_addr

declare i32 @unknown_4deb2(i32, i32) local_unnamed_addr

declare i32 @unknown_4deb8() local_unnamed_addr

declare i32 @unknown_4dec8(i32, i32) local_unnamed_addr

declare i32 @unknown_4df18(i32) local_unnamed_addr

declare i32 @unknown_4df1a(i32) local_unnamed_addr

declare i32 @unknown_4df20(i32) local_unnamed_addr

declare i32 @unknown_4df36(i32) local_unnamed_addr

declare i32 @unknown_4df4d(i32) local_unnamed_addr

declare i32 @unknown_4df7a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e13c(i32) local_unnamed_addr

declare i32 @unknown_4e154(i32, i32) local_unnamed_addr

declare i32 @unknown_4e180(i32) local_unnamed_addr

declare i32 @unknown_4e1b0(i32) local_unnamed_addr

declare i32 @unknown_4e212(i32, i32) local_unnamed_addr

declare i32 @unknown_4e218(i32) local_unnamed_addr

declare i32 @unknown_4e246(i32) local_unnamed_addr

declare i32 @unknown_4e348(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e394() local_unnamed_addr

declare i32 @unknown_4e3d3(i32) local_unnamed_addr

declare i32 @unknown_4e6cf(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e7de(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e89b(i32) local_unnamed_addr

declare i32 @unknown_4e8f2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e9c1(i32) local_unnamed_addr

declare i32 @unknown_4ea0c(i32, i32) local_unnamed_addr

declare i32 @unknown_4eab8(i32) local_unnamed_addr

declare i32 @unknown_4eb82(i32, i32) local_unnamed_addr

declare i32 @unknown_4ebad(i32) local_unnamed_addr

declare i32 @unknown_4ebc4(i32) local_unnamed_addr

declare i32 @unknown_4ec68(i32) local_unnamed_addr

declare i32 @unknown_4ec9c(i32) local_unnamed_addr

declare i32 @unknown_4ece6(i32, i32) local_unnamed_addr

declare i32 @unknown_4ed30(i32, i32) local_unnamed_addr

declare i32 @unknown_4ed70(i32) local_unnamed_addr

declare i32 @unknown_4edb0(i32) local_unnamed_addr

declare i32 @unknown_4edf0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4eeac(i32, i32) local_unnamed_addr

declare i32 @unknown_4eeec(i32) local_unnamed_addr

declare i32 @unknown_4f002() local_unnamed_addr

declare i32 @unknown_4f038(i32) local_unnamed_addr

declare i32 @unknown_4f12c(i32, i32) local_unnamed_addr

declare i32 @unknown_4f1b0(i32, i32) local_unnamed_addr

declare i32 @unknown_4f20c(i32, i32) local_unnamed_addr

declare i32 @unknown_4f21e(i32, i32) local_unnamed_addr

declare i32 @unknown_4f30f(i32, i32) local_unnamed_addr

declare i32 @unknown_4f43c(i32) local_unnamed_addr

declare i32 @unknown_4f4d2(i32) local_unnamed_addr

declare i32 @unknown_4f57c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f604(i32, i32) local_unnamed_addr

declare i32 @unknown_4f71e(i32) local_unnamed_addr

declare i32 @unknown_4f74a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f7da(i32, i32) local_unnamed_addr

declare i32 @unknown_4f862(i32) local_unnamed_addr

declare i32 @unknown_4f8ca(i32) local_unnamed_addr

declare i32 @unknown_4fa70(i32, i32) local_unnamed_addr

declare i32 @unknown_4fa7c(i32) local_unnamed_addr

declare i32 @unknown_4fbe2(i32, i32) local_unnamed_addr

declare i32 @unknown_4fd8e(i32) local_unnamed_addr

declare i32 @unknown_4fdd0(i32, i32) local_unnamed_addr

declare i32 @unknown_4fdd2(i32) local_unnamed_addr

declare i32 @unknown_4fe02(i32) local_unnamed_addr

declare i32 @unknown_4fe98(i32, i32) local_unnamed_addr

declare i32 @unknown_4ff6c(i32) local_unnamed_addr

declare i32 @unknown_4ffd4(i32) local_unnamed_addr

declare i32 @unknown_5001a(i32, i32) local_unnamed_addr

declare i32 @unknown_5006a(i32) local_unnamed_addr

declare i32 @unknown_5006c(i32) local_unnamed_addr

declare i32 @unknown_5009f(i32) local_unnamed_addr

declare i32 @unknown_500cc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_500fe(i32) local_unnamed_addr

declare i32 @unknown_501d0(i32) local_unnamed_addr

declare i32 @unknown_502a6(i32, i32) local_unnamed_addr

declare i32 @unknown_50308(i32) local_unnamed_addr

declare i32 @unknown_50364(i32, i32) local_unnamed_addr

declare i32 @unknown_50398(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_503a6(i32) local_unnamed_addr

declare i32 @unknown_50482(i32) local_unnamed_addr

declare i32 @unknown_5049a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_504e6(i32) local_unnamed_addr

declare i32 @unknown_50525(i32) local_unnamed_addr

declare i32 @unknown_50850(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50966(i32) local_unnamed_addr

declare i32 @unknown_509d6(i32) local_unnamed_addr

declare i32 @unknown_50a30(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50b24(i32, i32) local_unnamed_addr

declare i32 @unknown_50b46(i32) local_unnamed_addr

declare i32 @unknown_50c9c(i32) local_unnamed_addr

declare i32 @unknown_50d0e(i32, i32) local_unnamed_addr

declare i32 @unknown_50e16(i32) local_unnamed_addr

declare i32 @unknown_50ef1(i32, i32) local_unnamed_addr

declare i32 @unknown_50f6e(i32) local_unnamed_addr

declare i32 @unknown_50f8c(i32) local_unnamed_addr

declare i32 @unknown_51056(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51092(i32) local_unnamed_addr

declare i32 @unknown_510e8(i32) local_unnamed_addr

declare i32 @unknown_5111c(i32, i32) local_unnamed_addr

declare i32 @unknown_511fa(i32, i32) local_unnamed_addr

declare i32 @unknown_51268(i32, i32) local_unnamed_addr

declare i32 @unknown_512ca(i32) local_unnamed_addr

declare i32 @unknown_51300() local_unnamed_addr

declare i32 @unknown_51374(i32) local_unnamed_addr

declare i32 @unknown_513f5(i32, i32) local_unnamed_addr

declare i32 @unknown_51429(i32) local_unnamed_addr

declare i32 @unknown_51498(i32) local_unnamed_addr

declare i32 @unknown_51521(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5157f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5167c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51700() local_unnamed_addr

declare i32 @unknown_5187d(i32) local_unnamed_addr

declare i32 @unknown_518c1(i32) local_unnamed_addr

declare i32 @unknown_518f1(i32) local_unnamed_addr

declare i32 @unknown_519d6(i32, i32) local_unnamed_addr

declare i32 @unknown_51aa8(i32) local_unnamed_addr

declare i32 @unknown_51b7a(i32) local_unnamed_addr

declare i32 @unknown_51baa(i32) local_unnamed_addr

declare i32 @unknown_51be3(i32) local_unnamed_addr

declare i32 @unknown_51c80(i32) local_unnamed_addr

declare i32 @unknown_51c8e(i32, i32) local_unnamed_addr

declare i32 @unknown_51cb0(i32) local_unnamed_addr

declare i32 @unknown_51cee(i32) local_unnamed_addr

declare i32 @unknown_51cf4(i32) local_unnamed_addr

declare i32 @unknown_51d12(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51d58(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51e5a(i32, i32) local_unnamed_addr

declare i32 @unknown_51e9a(i32) local_unnamed_addr

declare i32 @unknown_51f32(i32, i32) local_unnamed_addr

declare i32 @unknown_5205e(i32) local_unnamed_addr

declare i32 @unknown_5208e(i32) local_unnamed_addr

declare i32 @unknown_520cd(i32) local_unnamed_addr

declare i32 @unknown_521b2(i32, i32) local_unnamed_addr

declare i32 @unknown_52322(i32) local_unnamed_addr

declare i32 @unknown_5254a(i32) local_unnamed_addr

declare i32 @unknown_526a6(i32) local_unnamed_addr

declare i32 @unknown_5275a(i32, i32) local_unnamed_addr

declare i32 @unknown_527bc(i32) local_unnamed_addr

declare i32 @unknown_52876(i32) local_unnamed_addr

declare i32 @unknown_528dc(i32, i32) local_unnamed_addr

declare i32 @unknown_528f0(i32, i32) local_unnamed_addr

declare i32 @unknown_52918() local_unnamed_addr

declare i32 @unknown_52928(i32) local_unnamed_addr

declare i32 @unknown_5296e(i32) local_unnamed_addr

declare i32 @unknown_5299e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52a14(i32, i32) local_unnamed_addr

declare i32 @unknown_52a5e(i32, i32) local_unnamed_addr

declare i32 @unknown_52b26(i32) local_unnamed_addr

declare i32 @unknown_52b60(i32) local_unnamed_addr

declare i32 @unknown_52be8(i32) local_unnamed_addr

declare i32 @unknown_52d06(i32) local_unnamed_addr

declare i32 @unknown_52d34(i32, i32) local_unnamed_addr

declare i32 @unknown_52dba(i32) local_unnamed_addr

declare i32 @unknown_52dea(i32) local_unnamed_addr

declare i32 @unknown_52e4a(i32) local_unnamed_addr

declare i32 @unknown_52e94(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52f6a(i32) local_unnamed_addr

declare i32 @unknown_52f9a(i32) local_unnamed_addr

declare i32 @unknown_52fcf(i32) local_unnamed_addr

declare i32 @unknown_53106(i32) local_unnamed_addr

declare i32 @unknown_5311c(i32) local_unnamed_addr

declare i32 @unknown_5313c(i32) local_unnamed_addr

declare i32 @unknown_53262(i32, i32) local_unnamed_addr

declare i32 @unknown_5328e(i32) local_unnamed_addr

declare i32 @unknown_5356a(i32) local_unnamed_addr

declare i32 @unknown_53570(i32, i32) local_unnamed_addr

declare i32 @unknown_53684(i32, i32) local_unnamed_addr

declare i32 @unknown_53724(i32, i32) local_unnamed_addr

declare i32 @unknown_53731(i32) local_unnamed_addr

declare i32 @unknown_5375e(i32) local_unnamed_addr

declare i32 @unknown_5389e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53bc3(i32, i32) local_unnamed_addr

declare i32 @unknown_53c2a(i32, i32) local_unnamed_addr

declare i32 @unknown_53cb4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53d3a(i32) local_unnamed_addr

declare i32 @unknown_53d68(i32, i32) local_unnamed_addr

declare i32 @unknown_53da4(i32, i32) local_unnamed_addr

declare i32 @unknown_53e0e(i32) local_unnamed_addr

declare i32 @unknown_53ea0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53fba(i32) local_unnamed_addr

declare i32 @unknown_53ffc(i32) local_unnamed_addr

declare i32 @unknown_54068(i32) local_unnamed_addr

declare i32 @unknown_5415e(i32) local_unnamed_addr

declare i32 @unknown_54184(i32, i32) local_unnamed_addr

declare i32 @unknown_541fc(i32) local_unnamed_addr

declare i32 @unknown_5423c() local_unnamed_addr

declare i32 @unknown_542d2(i32, i32) local_unnamed_addr

declare i32 @unknown_542de(i32) local_unnamed_addr

declare i32 @unknown_5434a(i32, i32) local_unnamed_addr

declare i32 @unknown_54380(i32) local_unnamed_addr

declare i32 @unknown_5446a(i32, i32) local_unnamed_addr

declare i32 @unknown_544fe(i32) local_unnamed_addr

declare i32 @unknown_5464e(i32, i32) local_unnamed_addr

declare i32 @unknown_54652(i32) local_unnamed_addr

declare i32 @unknown_54686(i32, i32) local_unnamed_addr

declare i32 @unknown_547c6(i32) local_unnamed_addr

declare i32 @unknown_547f6(i32, i32) local_unnamed_addr

declare i32 @unknown_54996(i32) local_unnamed_addr

declare i32 @unknown_549c4(i32, i32) local_unnamed_addr

declare i32 @unknown_54a1a(i32) local_unnamed_addr

declare i32 @unknown_54bac() local_unnamed_addr

declare i32 @unknown_54bcc(i32, i32) local_unnamed_addr

declare i32 @unknown_54bfc() local_unnamed_addr

declare i32 @unknown_54c16(i32) local_unnamed_addr

declare i32 @unknown_54c31(i32, i32) local_unnamed_addr

declare i32 @unknown_54c48() local_unnamed_addr

declare i32 @unknown_54cba() local_unnamed_addr

declare i32 @unknown_54ce5(i32) local_unnamed_addr

declare i32 @unknown_54d15(i32) local_unnamed_addr

declare i32 @unknown_54d46(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54e04(i32, i32) local_unnamed_addr

declare i32 @unknown_54f16(i32, i32) local_unnamed_addr

declare i32 @unknown_54f6a(i32) local_unnamed_addr

declare i32 @unknown_54fb7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55266(i32) local_unnamed_addr

declare i32 @unknown_552a4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_552e2(i32, i32) local_unnamed_addr

declare i32 @unknown_55306(i32, i32) local_unnamed_addr

declare i32 @unknown_55324(i32, i32) local_unnamed_addr

declare i32 @unknown_5532b() local_unnamed_addr

declare i32 @unknown_55382(i32, i32) local_unnamed_addr

declare i32 @unknown_5542c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55520(i32) local_unnamed_addr

declare i32 @unknown_55608(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55690(i32, i32) local_unnamed_addr

declare i32 @unknown_5581d(i32, i32) local_unnamed_addr

declare i32 @unknown_5583a(i32, i32) local_unnamed_addr

declare i32 @unknown_55851(i32) local_unnamed_addr

declare i32 @unknown_55874(i32) local_unnamed_addr

declare i32 @unknown_558c2(i32) local_unnamed_addr

declare i32 @unknown_55a95(i32) local_unnamed_addr

declare i32 @unknown_55b0a(i32) local_unnamed_addr

declare i32 @unknown_55bb0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55c65(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55e09(i32, i32) local_unnamed_addr

declare i32 @unknown_55e41(i32) local_unnamed_addr

declare i32 @unknown_55e70(i32, i32) local_unnamed_addr

declare i32 @unknown_55ebc(i32) local_unnamed_addr

declare i32 @unknown_55efa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55f80(i32) local_unnamed_addr

declare i32 @unknown_55fae(i32, i32) local_unnamed_addr

declare i32 @unknown_55fea(i32, i32) local_unnamed_addr

declare i32 @unknown_56054(i32, i32) local_unnamed_addr

declare i32 @unknown_56068(i32) local_unnamed_addr

declare i32 @unknown_5609e(i32, i32) local_unnamed_addr

declare i32 @unknown_560e6(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56242(i32) local_unnamed_addr

declare i32 @unknown_562ae(i32) local_unnamed_addr

declare i32 @unknown_5639c(i32, i32) local_unnamed_addr

declare i32 @unknown_563ca(i32, i32) local_unnamed_addr

declare i32 @unknown_56482(i32, i32) local_unnamed_addr

declare i32 @unknown_56524(i32) local_unnamed_addr

declare i32 @unknown_56586(i32, i32) local_unnamed_addr

declare i32 @unknown_5659f(i32) local_unnamed_addr

declare i32 @unknown_565c6(i32) local_unnamed_addr

declare i32 @unknown_56613(i32) local_unnamed_addr

declare i32 @unknown_566b0(i32, i32) local_unnamed_addr

declare i32 @unknown_566f1(i32, i32) local_unnamed_addr

declare i32 @unknown_56768(i32) local_unnamed_addr

declare i32 @unknown_56898(i32) local_unnamed_addr

declare i32 @unknown_5689b(i32) local_unnamed_addr

declare i32 @unknown_568a4(i32, i32) local_unnamed_addr

declare i32 @unknown_568cb(i32) local_unnamed_addr

declare i32 @unknown_568cc(i32, i32) local_unnamed_addr

declare i32 @unknown_56906(i32, i32) local_unnamed_addr

declare i32 @unknown_5692a(i32, i32) local_unnamed_addr

declare i32 @unknown_5694c(i32, i32) local_unnamed_addr

declare i32 @unknown_56a0a(i32) local_unnamed_addr

declare i32 @unknown_56a4e(i32) local_unnamed_addr

declare i32 @unknown_56a94(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56ab2(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56ae2(i32) local_unnamed_addr

declare i32 @unknown_56b10(i32, i32) local_unnamed_addr

declare i32 @unknown_56bbe() local_unnamed_addr

declare i32 @unknown_56cf8() local_unnamed_addr

declare i32 @unknown_56d48() local_unnamed_addr

declare i32 @unknown_56d7d() local_unnamed_addr

declare i32 @unknown_56e06() local_unnamed_addr

declare i32 @unknown_56e12(i32, i32) local_unnamed_addr

declare i32 @unknown_56e30(i32) local_unnamed_addr

declare i32 @unknown_56e5c(i32) local_unnamed_addr

declare i32 @unknown_56e60(i32) local_unnamed_addr

declare i32 @unknown_56e8e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5704a() local_unnamed_addr

declare i32 @unknown_572f9(i32) local_unnamed_addr

declare i32 @unknown_57362(i32, i32) local_unnamed_addr

declare i32 @unknown_573b2(i32) local_unnamed_addr

declare i32 @unknown_573e7(i32) local_unnamed_addr

declare i32 @unknown_573fc(i32) local_unnamed_addr

declare i32 @unknown_57470(i32, i32) local_unnamed_addr

declare i32 @unknown_574ed() local_unnamed_addr

declare i32 @unknown_574f0(i32) local_unnamed_addr

declare i32 @unknown_575d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57664() local_unnamed_addr

declare i32 @unknown_5774c(i32) local_unnamed_addr

declare i32 @unknown_577a0(i32, i32) local_unnamed_addr

declare i32 @unknown_57940(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57a6f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57c13(i32, i32) local_unnamed_addr

declare i32 @unknown_57c4b(i32) local_unnamed_addr

declare i32 @unknown_57c7a(i32, i32) local_unnamed_addr

declare i32 @unknown_57d04(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57d8a(i32) local_unnamed_addr

declare i32 @unknown_57db4(i32, i32) local_unnamed_addr

declare i32 @unknown_57db8(i32, i32) local_unnamed_addr

declare i32 @unknown_57dd8(i32, i32) local_unnamed_addr

declare i32 @unknown_57df4(i32, i32) local_unnamed_addr

declare i32 @unknown_57e5e(i32, i32) local_unnamed_addr

declare i32 @unknown_57ea8(i32, i32) local_unnamed_addr

declare i32 @unknown_57ef0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5804c(i32) local_unnamed_addr

declare i32 @unknown_580b8(i32) local_unnamed_addr

declare i32 @unknown_581d4(i32, i32) local_unnamed_addr

declare i32 @unknown_58230(i32, i32) local_unnamed_addr

declare i32 @unknown_58264(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5827b(i32) local_unnamed_addr

declare i32 @unknown_5832e(i32) local_unnamed_addr

declare i32 @unknown_58390(i32, i32) local_unnamed_addr

declare i32 @unknown_5839a(i32, i32) local_unnamed_addr

declare i32 @unknown_583d0(i32) local_unnamed_addr

declare i32 @unknown_583f1(i32) local_unnamed_addr

declare i32 @unknown_584ba(i32, i32) local_unnamed_addr

declare i32 @unknown_5854e(i32, i32) local_unnamed_addr

declare i32 @unknown_586a2(i32) local_unnamed_addr

declare i32 @unknown_586d6(i32, i32) local_unnamed_addr

declare i32 @unknown_5879a(i32) local_unnamed_addr

declare i32 @unknown_58846(i32, i32) local_unnamed_addr

declare i32 @unknown_58894(i32, i32) local_unnamed_addr

declare i32 @unknown_588e4(i32) local_unnamed_addr

declare i32 @unknown_588ec(i32) local_unnamed_addr

declare i32 @unknown_58919(i32) local_unnamed_addr

declare i32 @unknown_5891a(i32, i32) local_unnamed_addr

declare i32 @unknown_589c8(i32) local_unnamed_addr

declare i32 @unknown_58a77(i32) local_unnamed_addr

declare i32 @unknown_58b02() local_unnamed_addr

declare i32 @unknown_58b52() local_unnamed_addr

declare i32 @unknown_58b87() local_unnamed_addr

declare i32 @unknown_58c10() local_unnamed_addr

declare i32 @unknown_58c1c(i32, i32) local_unnamed_addr

declare i32 @unknown_58c3a(i32) local_unnamed_addr

declare i32 @unknown_58c66(i32) local_unnamed_addr

declare i32 @unknown_58c6a(i32) local_unnamed_addr

declare i32 @unknown_58c98(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58d94(i32, i32) local_unnamed_addr

declare i32 @unknown_58e54(i32, i32) local_unnamed_addr

declare i32 @unknown_59103(i32) local_unnamed_addr

declare i32 @unknown_5916c(i32, i32) local_unnamed_addr

declare i32 @unknown_59191(i32) local_unnamed_addr

declare i32 @unknown_591bc(i32) local_unnamed_addr

declare i32 @unknown_59206(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5927a(i32, i32) local_unnamed_addr

declare i32 @unknown_592fa(i32) local_unnamed_addr

declare i32 @unknown_5937d(i32) local_unnamed_addr

declare i32 @unknown_593e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5946e(i32) local_unnamed_addr

declare i32 @unknown_59487(i32) local_unnamed_addr

declare i32 @unknown_59518(i32, i32) local_unnamed_addr

declare i32 @unknown_595aa(i32, i32) local_unnamed_addr

declare i32 @unknown_596f0(i32) local_unnamed_addr

declare i32 @unknown_59805(i32) local_unnamed_addr

declare i32 @unknown_5987a(i32, i32) local_unnamed_addr

declare i32 @unknown_599b2(i32, i32) local_unnamed_addr

declare i32 @unknown_59ebe(i32) local_unnamed_addr

declare i32 @unknown_5a070(i32) local_unnamed_addr

declare i32 @unknown_5a0a1(i32) local_unnamed_addr

declare i32 @unknown_5a0a4(i32, i32) local_unnamed_addr

declare i32 @unknown_5a17a(i32, i32) local_unnamed_addr

declare i32 @unknown_5a231(i32) local_unnamed_addr

declare i32 @unknown_5a34a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a396(i32) local_unnamed_addr

declare i32 @unknown_5a4db(i32) local_unnamed_addr

declare i32 @unknown_5a656(i32) local_unnamed_addr

declare i32 @unknown_5a6c4(i32, i32) local_unnamed_addr

declare i32 @unknown_5a714(i32) local_unnamed_addr

declare i32 @unknown_5a74a(i32, i32) local_unnamed_addr

declare i32 @unknown_5a786(i32, i32) local_unnamed_addr

declare i32 @unknown_5a904(i32) local_unnamed_addr

declare i32 @unknown_5a9b8(i32) local_unnamed_addr

declare i32 @unknown_5abbc(i32, i32) local_unnamed_addr

declare i32 @unknown_5ac50(i32, i32) local_unnamed_addr

declare i32 @unknown_5ad0a(i32, i32) local_unnamed_addr

declare i32 @unknown_5ad73(i32) local_unnamed_addr

declare i32 @unknown_5b04d(i32) local_unnamed_addr

declare i32 @unknown_5b05e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b1ea(i32) local_unnamed_addr

declare i32 @unknown_5b239(i32) local_unnamed_addr

declare i32 @unknown_5b258(i32, i32) local_unnamed_addr

declare i32 @unknown_5b2a0(i32) local_unnamed_addr

declare i32 @unknown_5b2d0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b40c() local_unnamed_addr

declare i32 @unknown_5b5ce(i32) local_unnamed_addr

declare i32 @unknown_5b634(i32, i32) local_unnamed_addr

declare i32 @unknown_5b670() local_unnamed_addr

declare i32 @unknown_5b6c6(i32) local_unnamed_addr

declare i32 @unknown_5b76c(i32, i32) local_unnamed_addr

declare i32 @unknown_5b7b6(i32, i32) local_unnamed_addr

declare i32 @unknown_5b836(i32, i32) local_unnamed_addr

declare i32 @unknown_5b894(i32) local_unnamed_addr

declare i32 @unknown_5b940(i32) local_unnamed_addr

declare i32 @unknown_5b9a0() local_unnamed_addr

declare i32 @unknown_5ba9a(i32) local_unnamed_addr

declare i32 @unknown_5bac8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bb4e(i32) local_unnamed_addr

declare i32 @unknown_5bb7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bcce(i32) local_unnamed_addr

declare i32 @unknown_5bcfe(i32) local_unnamed_addr

declare i32 @unknown_5bd2e(i32) local_unnamed_addr

declare i32 @unknown_5bd64(i32) local_unnamed_addr

declare i32 @unknown_5bd8c(i32, i32) local_unnamed_addr

declare i32 @unknown_5bd94(i32) local_unnamed_addr

declare i32 @unknown_5bdc0(i32) local_unnamed_addr

declare i32 @unknown_5bdca(i32) local_unnamed_addr

declare i32 @unknown_5bf12(i32) local_unnamed_addr

declare i32 @unknown_5bf4d(i32) local_unnamed_addr

declare i32 @unknown_5bff0(i32, i32) local_unnamed_addr

declare i32 @unknown_5c03a(i32, i32) local_unnamed_addr

declare i32 @unknown_5c14a(i32) local_unnamed_addr

declare i32 @unknown_5c316(i32) local_unnamed_addr

declare i32 @unknown_5c51f(i32) local_unnamed_addr

declare i32 @unknown_5c5a7(i32) local_unnamed_addr

declare i32 @unknown_5c744(i32, i32) local_unnamed_addr

declare i32 @unknown_5c90a(i32, i32) local_unnamed_addr

declare i32 @unknown_5cae6(i32) local_unnamed_addr

declare i32 @unknown_5cb41(i32) local_unnamed_addr

declare i32 @unknown_5cbe0(i32, i32) local_unnamed_addr

declare i32 @unknown_5cc30(i32) local_unnamed_addr

declare i32 @unknown_5cc66(i32, i32) local_unnamed_addr

declare i32 @unknown_5cc7e(i32, i32) local_unnamed_addr

declare i32 @unknown_5cca2(i32, i32) local_unnamed_addr

declare i32 @unknown_5ccce(i32) local_unnamed_addr

declare i32 @unknown_5cd2d(i32) local_unnamed_addr

declare i32 @unknown_5cd40(i32) local_unnamed_addr

declare i32 @unknown_5cd4c(i32, i32) local_unnamed_addr

declare i32 @unknown_5cd8a(i32) local_unnamed_addr

declare i32 @unknown_5ce1e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d1e8(i32) local_unnamed_addr

declare i32 @unknown_5d24e(i32, i32) local_unnamed_addr

declare i32 @unknown_5d28a(i32, i32) local_unnamed_addr

declare i32 @unknown_5d2e0(i32) local_unnamed_addr

declare i32 @unknown_5d386(i32, i32) local_unnamed_addr

declare i32 @unknown_5d3d0() local_unnamed_addr

declare i32 @unknown_5d450(i32, i32) local_unnamed_addr

declare i32 @unknown_5d4ae(i32) local_unnamed_addr

declare i32 @unknown_5d55a(i32) local_unnamed_addr

declare i32 @unknown_5d5ba() local_unnamed_addr

declare i32 @unknown_5d6b4(i32) local_unnamed_addr

declare i32 @unknown_5d6e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d768(i32) local_unnamed_addr

declare i32 @unknown_5d918(i32) local_unnamed_addr

declare i32 @unknown_5d948(i32) local_unnamed_addr

declare i32 @unknown_5d9ae(i32) local_unnamed_addr

declare i32 @unknown_5d9e4(i32) local_unnamed_addr

declare i32 @unknown_5da9e(i32, i32) local_unnamed_addr

declare i32 @unknown_5daee(i32) local_unnamed_addr

declare i32 @unknown_5db2c(i32) local_unnamed_addr

declare i32 @unknown_5db60(i32) local_unnamed_addr

declare i32 @unknown_5dc0a(i32, i32) local_unnamed_addr

declare i32 @unknown_5dc24(i32, i32) local_unnamed_addr

declare i32 @unknown_5dc54(i32, i32) local_unnamed_addr

declare i32 @unknown_5dd0c(i32, i32) local_unnamed_addr

declare i32 @unknown_5df30(i32, i32) local_unnamed_addr

declare i32 @unknown_5dfe2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e554(i32) local_unnamed_addr

declare i32 @unknown_5e64e(i32, i32) local_unnamed_addr

declare i32 @unknown_5e69e(i32) local_unnamed_addr

declare i32 @unknown_5e6d4(i32, i32) local_unnamed_addr

declare i32 @unknown_5e6ec(i32, i32) local_unnamed_addr

declare i32 @unknown_5e710(i32, i32) local_unnamed_addr

declare i32 @unknown_5e73c(i32) local_unnamed_addr

declare i32 @unknown_5e7ae(i32) local_unnamed_addr

declare i32 @unknown_5e7f8(i32) local_unnamed_addr

declare i32 @unknown_5e88c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ebee(i32) local_unnamed_addr

declare i32 @unknown_5ec04(i32) local_unnamed_addr

declare i32 @unknown_5ec54(i32, i32) local_unnamed_addr

declare i32 @unknown_5ec90(i32, i32) local_unnamed_addr

declare i32 @unknown_5ece6(i32) local_unnamed_addr

declare i32 @unknown_5ed8c(i32) local_unnamed_addr

declare i32 @unknown_5edd6(i32, i32) local_unnamed_addr

declare i32 @unknown_5ee56(i32, i32) local_unnamed_addr

declare i32 @unknown_5eeb4(i32) local_unnamed_addr

declare i32 @unknown_5ef10(i32, i32) local_unnamed_addr

declare i32 @unknown_5ef60(i32) local_unnamed_addr

declare i32 @unknown_5efc0() local_unnamed_addr

declare i32 @unknown_5f0ba(i32) local_unnamed_addr

declare i32 @unknown_5f0e8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f0fe(i32) local_unnamed_addr

declare i32 @unknown_5f164(i32) local_unnamed_addr

declare i32 @unknown_5f16e(i32) local_unnamed_addr

declare i32 @unknown_5f19e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f2b0(i32) local_unnamed_addr

declare i32 @unknown_5f2ee() local_unnamed_addr

declare i32 @unknown_5f31e(i32) local_unnamed_addr

declare i32 @unknown_5f34e(i32) local_unnamed_addr

declare i32 @unknown_5f384(i32) local_unnamed_addr

declare i32 @unknown_5f3b4(i32) local_unnamed_addr

declare i32 @unknown_5f3ea(i32) local_unnamed_addr

declare i32 @unknown_5f532(i32) local_unnamed_addr

declare i32 @unknown_5f610(i32, i32) local_unnamed_addr

declare i32 @unknown_5f62a(i32, i32) local_unnamed_addr

declare i32 @unknown_5f65a(i32, i32) local_unnamed_addr

declare i32 @unknown_5f936(i32, i32) local_unnamed_addr

declare i32 @unknown_5f9e8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5fe16(i32, i32) local_unnamed_addr

declare i32 @unknown_5ff5a(i32) local_unnamed_addr

declare i32 @unknown_60054(i32, i32) local_unnamed_addr

declare i32 @unknown_600a4(i32) local_unnamed_addr

declare i32 @unknown_600da(i32, i32) local_unnamed_addr

declare i32 @unknown_600de(i32, i32) local_unnamed_addr

declare i32 @unknown_600f2(i32, i32) local_unnamed_addr

declare i32 @unknown_60116(i32, i32) local_unnamed_addr

declare i32 @unknown_60142(i32) local_unnamed_addr

declare i32 @unknown_601b4() local_unnamed_addr

declare i32 @unknown_601fe(i32) local_unnamed_addr

declare i32 @unknown_60292(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60412(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_604fa(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6057c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60642(i32) local_unnamed_addr

declare i32 @unknown_606d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_608b2() local_unnamed_addr

declare i32 @unknown_6093e(i32) local_unnamed_addr

declare i32 @unknown_609da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60a76(i32) local_unnamed_addr

declare i32 @unknown_60a90(i32, i32) local_unnamed_addr

declare i32 @unknown_60adc(i32) local_unnamed_addr

declare i32 @unknown_60b02(i32, i32) local_unnamed_addr

declare i32 @unknown_60bf8(i32) local_unnamed_addr

declare i32 @unknown_60c2c(i32, i32) local_unnamed_addr

declare i32 @unknown_60d8e(i32, i32) local_unnamed_addr

declare i32 @unknown_60df3(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60e6e(i32) local_unnamed_addr

declare i32 @unknown_60ecc(i32) local_unnamed_addr

declare i32 @unknown_60efc(i32) local_unnamed_addr

declare i32 @unknown_60f40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_610e0(i32) local_unnamed_addr

declare i32 @unknown_611e4(i32) local_unnamed_addr

declare i32 @unknown_61244(i32, i32) local_unnamed_addr

declare i32 @unknown_6124a(i32, i32) local_unnamed_addr

declare i32 @unknown_61356(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_614d8(i32, i32) local_unnamed_addr

declare i32 @unknown_6151a(i32) local_unnamed_addr

declare i32 @unknown_61626(i32, i32) local_unnamed_addr

declare i32 @unknown_6168f(i32) local_unnamed_addr

declare i32 @unknown_616bf(i32) local_unnamed_addr

declare i32 @unknown_6172e(i32, i32) local_unnamed_addr

declare i32 @unknown_6182b() local_unnamed_addr

declare i32 @unknown_618b3(i32) local_unnamed_addr

declare i32 @unknown_619a3(i32) local_unnamed_addr

declare i32 @unknown_61a04(i32) local_unnamed_addr

declare i32 @unknown_61a34(i32) local_unnamed_addr

declare i32 @unknown_61a74(i32, i32) local_unnamed_addr

declare i32 @unknown_61e94(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61f3a(i32, i32) local_unnamed_addr

declare i32 @unknown_61fc6(i32) local_unnamed_addr

declare i32 @unknown_62062(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_620ee(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6228c(i32) local_unnamed_addr

declare i32 @unknown_622f2(i32, i32) local_unnamed_addr

declare i32 @unknown_6238e(i32) local_unnamed_addr

declare i32 @unknown_623f4(i32) local_unnamed_addr

declare i32 @unknown_623fe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62510(i32) local_unnamed_addr

declare i32 @unknown_62580(i32, i32) local_unnamed_addr

declare i32 @unknown_625c2(i32) local_unnamed_addr

declare i32 @unknown_626ad(i32) local_unnamed_addr

declare i32 @unknown_626ce(i32, i32) local_unnamed_addr

declare i32 @unknown_62735(i32) local_unnamed_addr

declare i32 @unknown_62737(i32) local_unnamed_addr

declare i32 @unknown_62767(i32) local_unnamed_addr

declare i32 @unknown_62a4b(i32) local_unnamed_addr

declare i32 @unknown_62adc(i32) local_unnamed_addr

declare i32 @unknown_62fb2(i32, i32) local_unnamed_addr

declare i32 @unknown_6303e(i32) local_unnamed_addr

declare i32 @unknown_63046(i32, i32) local_unnamed_addr

declare i32 @unknown_630da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63166(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63304() local_unnamed_addr

declare i32 @unknown_6334b(i32) local_unnamed_addr

declare i32 @unknown_6336a(i32, i32) local_unnamed_addr

declare i32 @unknown_633d3(i32) local_unnamed_addr

declare i32 @unknown_6341a(i32, i32) local_unnamed_addr

declare i32 @unknown_635f8() local_unnamed_addr

declare i32 @unknown_6363a(i32) local_unnamed_addr

declare i32 @unknown_63746(i32, i32) local_unnamed_addr

declare i32 @unknown_637af(i32) local_unnamed_addr

declare i32 @unknown_637df(i32) local_unnamed_addr

declare i32 @unknown_63ac3(i32) local_unnamed_addr

declare i32 @unknown_63b24(i32) local_unnamed_addr

declare i32 @unknown_63b54(i32) local_unnamed_addr

declare i32 @unknown_63b94(i32, i32) local_unnamed_addr

declare i32 @unknown_6402a(i32, i32) local_unnamed_addr

declare i32 @unknown_640b6(i32) local_unnamed_addr

declare i32 @unknown_64152(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_641de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64352(i32, i32) local_unnamed_addr

declare i32 @unknown_64417(i32, i32) local_unnamed_addr

declare i32 @unknown_64502(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64676(i32) local_unnamed_addr

declare i32 @unknown_64778(i32) local_unnamed_addr

declare i32 @unknown_64810(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64ac5(i32) local_unnamed_addr

declare i32 @unknown_64bd9(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64ce6(i32, i32) local_unnamed_addr

declare i32 @unknown_64db6(i32, i32) local_unnamed_addr

declare i32 @unknown_65002(i32) local_unnamed_addr

declare i32 @unknown_650d4(i32) local_unnamed_addr

declare i32 @unknown_6518c(i32, i32) local_unnamed_addr

declare i32 @unknown_6525c(i32) local_unnamed_addr

declare i32 @unknown_6557a(i32) local_unnamed_addr

declare i32 @unknown_65632(i32, i32) local_unnamed_addr

declare i32 @unknown_65702(i32, i32) local_unnamed_addr

declare i32 @unknown_658b2(i32, i32) local_unnamed_addr

declare i32 @unknown_6594e(i32) local_unnamed_addr

declare i32 @unknown_65a20(i32) local_unnamed_addr

declare i32 @unknown_65b8a(i32) local_unnamed_addr

declare i32 @unknown_65c42(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65e11(i32) local_unnamed_addr

declare i32 @unknown_65edd(i32) local_unnamed_addr

declare i32 @unknown_661ee(i32) local_unnamed_addr

declare i32 @unknown_66426(i32) local_unnamed_addr

declare i32 @unknown_66596(i32) local_unnamed_addr

declare i32 @unknown_66706(i32) local_unnamed_addr

declare i32 @unknown_66876(i32) local_unnamed_addr

declare i32 @unknown_669e6(i32) local_unnamed_addr

declare i32 @unknown_66b56(i32) local_unnamed_addr

declare i32 @unknown_66cc6(i32) local_unnamed_addr

declare i32 @unknown_66e36(i32) local_unnamed_addr

declare i32 @unknown_66fa6(i32) local_unnamed_addr

declare i32 @unknown_67116(i32) local_unnamed_addr

declare i32 @unknown_67286(i32) local_unnamed_addr

declare i32 @unknown_674b6(i32) local_unnamed_addr

declare i32 @unknown_6a8dc(i32) local_unnamed_addr

declare i32 @unknown_6a906(i32, i32) local_unnamed_addr

declare i32 @unknown_6a9e2(i32) local_unnamed_addr

declare i32 @unknown_6ab74(i32, i32) local_unnamed_addr

declare i32 @unknown_6ade2(i32, i32) local_unnamed_addr

declare i32 @unknown_6b2b8(i32, i32) local_unnamed_addr

declare i32 @unknown_6b2ec(i32, i32) local_unnamed_addr

declare i32 @unknown_6b334(i32, i32) local_unnamed_addr

declare i32 @unknown_6b420(i32, i32) local_unnamed_addr

declare i32 @unknown_6b454(i32, i32) local_unnamed_addr

declare i32 @unknown_6b49c(i32, i32) local_unnamed_addr

declare i32 @unknown_6b588() local_unnamed_addr

declare i32 @unknown_6b5bc() local_unnamed_addr

declare i32 @unknown_6b604() local_unnamed_addr

declare i32 @unknown_6b7e8(i32, i32) local_unnamed_addr

declare i32 @unknown_6b868(i32, i32) local_unnamed_addr

define i32 @function_84023e0c() local_unnamed_addr {
dec_label_pc_84023e0c:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp
}

define i32 @function_8900013b() local_unnamed_addr {
dec_label_pc_8900013b:
  %tmp = load i32, i32* @eax, align 8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 414, 283, 415, 669, 284, 285, 597, 286, 287, 0, 270, 383, 1, 2, 271, 384, 3, 4, 427, 703, 76, 431, 77, 416, 78, 417, 79, 418, 80, 419, 577, 81, 420, 82, 421, 83, 541, 629, 84, 630, 422, 598, 423, 424, 425, 426, 428, 5, 429, 641, 430, 432, 433, 6, 642, 7, 644, 646, 647, 434, 749, 288, 605, 328, 85, 435, 436, 329, 437, 438, 439, 440, 649, 330, 651, 331, 656, 657, 658, 659, 610, 447, 441, 442, 443, 444, 666, 118, 450, 593, 445, 446, 332, 671, 289, 672, 673, 448, 449, 290, 551, 698, 699, 700, 385, 550, 685, 684, 686, 687, 688, 689, 690, 691, 692, 982, 721, 8, 722, 674, 675, 676, 677, 694, 695, 701, 702, 291, 704, 705, 706, 707, 708, 9, 715, 714, 456, 457, 458, 459, 460, 461, 462, 333, 607, 451, 452, 453, 454, 334, 292, 120, 477, 119, 121, 386, 293, 455, 795, 794, 946, 947, 948, 949, 950, 951, 463, 464, 112, 465, 466, 467, 468, 469, 470, 757, 983, 471, 86, 472, 663, 473, 87, 474, 655, 475, 660, 661, 62, 335, 662, 718, 719, 720, 476, 759, 336, 664, 493, 733, 478, 734, 479, 10, 735, 736, 387, 480, 88, 481, 952, 741, 742, 743, 633, 482, 483, 63, 744, 745, 746, 337, 388, 747, 752, 389, 11, 484, 485, 486, 338, 753, 339, 618, 680, 89, 487, 758, 488, 90, 489, 754, 498, 490, 762, 763, 64, 340, 764, 491, 492, 407, 765, 494, 390, 495, 496, 497, 716, 717, 766, 767, 768, 769, 341, 405, 499, 502, 504, 622, 770, 939, 342, 12, 778, 779, 343, 344, 940, 500, 501, 503, 505, 506, 507, 782, 783, 13, 508, 509, 510, 511, 784, 785, 512, 737, 786, 513, 681, 294, 514, 790, 345, 791, 591, 515, 391, 516, 517, 709, 518, 295, 272, 519, 14, 15, 760, 520, 346, 347, 805, 804, 348, 349, 392, 16, 17, 807, 808, 806, 536, 521, 535, 522, 18, 771, 772, 350, 538, 809, 619, 523, 296, 273, 524, 811, 813, 19, 817, 818, 819, 525, 297, 20, 526, 821, 527, 528, 529, 21, 792, 351, 393, 723, 352, 724, 725, 793, 828, 829, 830, 298, 274, 831, 22, 122, 530, 726, 353, 531, 91, 532, 533, 92, 534, 800, 537, 832, 833, 23, 801, 802, 773, 834, 710, 835, 24, 836, 124, 902, 123, 543, 539, 66, 65, 843, 844, 845, 540, 846, 354, 847, 355, 984, 394, 395, 396, 848, 849, 850, 356, 542, 544, 113, 25, 26, 854, 27, 856, 857, 28, 859, 860, 109, 545, 29, 837, 838, 862, 864, 546, 68, 67, 873, 30, 874, 69, 357, 851, 985, 875, 547, 548, 855, 876, 549, 866, 890, 891, 892, 358, 893, 894, 895, 359, 881, 882, 31, 360, 865, 869, 361, 552, 553, 886, 887, 999, 986, 32, 362, 888, 363, 988, 989, 990, 987, 878, 879, 554, 877, 880, 364, 555, 896, 884, 556, 897, 971, 972, 973, 867, 572, 905, 365, 33, 557, 558, 906, 907, 34, 35, 909, 559, 814, 560, 910, 366, 561, 562, 822, 563, 564, 926, 565, 566, 861, 367, 93, 94, 578, 579, 368, 397, 567, 858, 995, 996, 568, 901, 95, 569, 398, 36, 898, 899, 900, 37, 570, 110, 96, 97, 922, 923, 399, 571, 998, 400, 401, 991, 38, 114, 275, 992, 573, 98, 574, 402, 39, 575, 911, 927, 928, 912, 913, 369, 929, 930, 370, 931, 371, 932, 99, 100, 934, 935, 914, 372, 373, 403, 576, 915, 953, 954, 916, 101, 580, 404, 40, 917, 918, 919, 581, 920, 111, 921, 582, 374, 583, 299, 375, 956, 584, 585, 1000, 376, 41, 42, 933, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 43, 44, 45, 46, 47, 48, 49, 50, 937, 51, 52, 938, 586, 587, 941, 588, 147, 589, 590, 592, 594, 595, 596, 599, 148, 600, 601, 602, 603, 604, 606, 149, 608, 609, 611, 300, 612, 613, 102, 614, 406, 53, 615, 627, 377, 616, 103, 617, 620, 621, 151, 150, 639, 153, 152, 154, 155, 623, 624, 378, 176, 177, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 625, 198, 199, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 626, 670, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 220, 223, 222, 225, 224, 227, 226, 229, 228, 231, 230, 233, 232, 235, 234, 237, 236, 239, 238, 241, 240, 243, 242, 245, 244, 247, 246, 249, 248, 251, 250, 253, 252, 255, 254, 257, 256, 259, 258, 260, 60, 628, 631, 632, 634, 301, 635, 636, 637, 638, 739, 302, 640, 732, 643, 645, 648, 750, 54, 650, 303, 652, 653, 654, 665, 70, 667, 668, 71, 678, 276, 679, 682, 261, 304, 683, 693, 104, 105, 106, 107, 727, 728, 729, 115, 305, 730, 731, 379, 696, 697, 711, 116, 277, 712, 713, 263, 262, 265, 264, 380, 381, 61, 267, 266, 269, 268, 803, 326, 738, 740, 306, 307, 327, 748, 751, 308, 309, 755, 756, 761, 310, 780, 311, 774, 312, 313, 775, 314, 776, 777, 73, 72, 781, 55, 787, 788, 789, 868, 796, 797, 798, 278, 315, 799, 316, 810, 812, 815, 816, 885, 820, 823, 824, 825, 826, 827, 839, 840, 841, 842, 56, 317, 852, 853, 974, 279, 863, 870, 871, 872, 382, 57, 58, 883, 903, 904, 942, 889, 955, 59, 908, 997, 924, 925, 280, 936, 408, 409, 318, 319, 943, 410, 944, 945, 957, 958, 281, 959, 960, 961, 962, 963, 964, 282, 965, 966, 967, 968, 969, 108, 970, 975, 976, 977, 978, 979, 74, 980, 75, 117, 981, 320, 321, 411, 412, 993, 994, 413, 322, 323, 324, 325, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008 }
  uselistorder i32* @eax, { 137, 99, 156, 1759, 157, 1760, 158, 1761, 159, 1762, 160, 1763, 161, 1764, 928, 2680, 723, 2369, 126, 1786, 1687, 162, 1765, 1789, 71, 69, 70, 52, 188, 74, 72, 73, 53, 190, 650, 2, 2283, 163, 1766, 191, 688, 1796, 164, 1767, 194, 192, 193, 1798, 1799, 165, 1768, 166, 1769, 169, 167, 168, 1770, 196, 1802, 170, 1771, 200, 198, 199, 1804, 972, 2749, 202, 1806, 1403, 3529, 171, 1772, 172, 1773, 173, 1774, 174, 1775, 175, 1776, 176, 1777, 177, 1778, 658, 2292, 512, 178, 1779, 179, 1780, 180, 1781, 181, 1782, 182, 1783, 509, 2134, 830, 2535, 2536, 831, 2537, 183, 1784, 520, 833, 524, 834, 836, 515, 837, 816, 838, 603, 840, 1675, 130, 1270, 131, 701, 815, 842, 844, 847, 855, 1243, 857, 856, 1558, 858, 859, 860, 547, 135, 184, 1785, 136, 2370, 724, 2371, 2372, 185, 1787, 2574, 1788, 186, 1790, 1791, 187, 1792, 1793, 189, 1794, 1795, 1819, 1047, 3, 2868, 2869, 1797, 2364, 2167, 195, 1800, 1801, 2584, 219, 197, 1803, 872, 2588, 2589, 201, 1805, 203, 1807, 204, 1808, 205, 1809, 206, 1810, 874, 4, 207, 1811, 873, 2590, 2591, 875, 2594, 2595, 2596, 208, 1812, 876, 877, 209, 1813, 210, 1814, 878, 5, 211, 1815, 212, 1816, 213, 1817, 880, 2603, 882, 2605, 2606, 214, 1818, 215, 1820, 1821, 1067, 2903, 2904, 216, 1822, 217, 1823, 749, 747, 748, 2401, 2402, 218, 1544, 1824, 1825, 220, 1826, 221, 1827, 222, 1828, 1386, 3493, 3494, 1387, 3495, 3496, 885, 2610, 2611, 223, 1829, 224, 1830, 225, 1831, 887, 2614, 2615, 226, 1832, 2623, 889, 2626, 227, 1833, 893, 2631, 2632, 228, 1834, 229, 1835, 896, 6, 2636, 2637, 898, 2640, 2641, 2642, 899, 2643, 1851, 230, 1836, 766, 2430, 2431, 2432, 767, 7, 2433, 231, 1837, 247, 1854, 232, 1838, 233, 1839, 904, 2651, 234, 1840, 1089, 8, 2933, 235, 1841, 236, 1842, 237, 1843, 238, 1844, 914, 2664, 2665, 239, 1845, 240, 1846, 241, 1847, 244, 242, 243, 1848, 925, 54, 245, 1849, 774, 772, 773, 2439, 705, 1864, 935, 1850, 713, 2353, 246, 1852, 1853, 936, 2690, 937, 2691, 938, 2692, 2693, 939, 2694, 1688, 248, 1855, 249, 1856, 1506, 3665, 591, 2225, 250, 1857, 251, 1858, 252, 1859, 253, 1860, 969, 2744, 2745, 2712, 2715, 1689, 254, 1861, 586, 2220, 255, 1862, 256, 1863, 257, 1865, 258, 1866, 1659, 2354, 259, 1867, 1658, 3873, 3874, 961, 959, 960, 2729, 2730, 789, 2458, 962, 2731, 260, 1868, 1634, 3834, 803, 2477, 2478, 261, 1869, 1027, 2824, 2825, 945, 1028, 2826, 730, 942, 946, 2699, 943, 2700, 965, 2735, 966, 2736, 2737, 2738, 970, 2746, 262, 1870, 973, 2750, 2751, 263, 1871, 264, 1872, 265, 1873, 266, 1874, 267, 1875, 1325, 2761, 2757, 280, 2758, 2759, 817, 2760, 2762, 2764, 2765, 2763, 1326, 2766, 2767, 2768, 1327, 2769, 268, 1876, 905, 2652, 269, 1877, 270, 1878, 1635, 3835, 1007, 9, 1636, 3836, 1010, 1008, 1009, 2796, 2797, 292, 1900, 271, 1879, 272, 1880, 295, 1903, 1904, 754, 2408, 2409, 273, 1881, 274, 1882, 275, 1883, 276, 1884, 277, 1885, 278, 1886, 279, 1887, 1888, 281, 1889, 827, 10, 2530, 2531, 282, 1890, 283, 1891, 284, 1892, 285, 1893, 286, 1894, 287, 1012, 1895, 331, 1954, 2561, 288, 1896, 289, 1897, 290, 1898, 291, 1899, 293, 1901, 294, 1902, 296, 1905, 1906, 340, 1963, 1964, 1965, 297, 1907, 1162, 1160, 1153, 1161, 3076, 3077, 1563, 3745, 1564, 3746, 869, 976, 1908, 977, 1909, 978, 1910, 703, 2343, 979, 1911, 980, 1912, 981, 1913, 982, 1914, 983, 1915, 984, 1916, 987, 985, 986, 1917, 988, 1918, 989, 1919, 992, 990, 991, 1920, 993, 1921, 994, 1922, 995, 1923, 996, 1924, 997, 1925, 998, 1926, 298, 1927, 299, 1928, 300, 1929, 1071, 2910, 301, 1930, 304, 302, 75, 1699, 303, 1931, 305, 1932, 306, 1933, 307, 1934, 308, 1935, 309, 1936, 312, 310, 1013, 2805, 311, 1937, 313, 2376, 1938, 314, 1939, 315, 1940, 1087, 1085, 1086, 2930, 316, 1941, 1637, 3837, 3838, 360, 1986, 1987, 317, 1942, 77, 76, 906, 2653, 318, 1943, 321, 319, 320, 1944, 891, 2629, 322, 1945, 323, 1946, 1016, 2808, 2809, 901, 902, 2646, 2647, 2648, 324, 1947, 1020, 2814, 1021, 1090, 2934, 907, 2654, 325, 1948, 326, 1949, 908, 2655, 327, 1950, 328, 1951, 912, 916, 920, 2670, 2671, 329, 1952, 330, 1953, 373, 2002, 2003, 1032, 2846, 2410, 2411, 1044, 2845, 1955, 1033, 11, 2847, 81, 79, 78, 927, 1700, 80, 1701, 1036, 1034, 1035, 2848, 2849, 1037, 2850, 2851, 332, 1956, 1045, 333, 1957, 1046, 84, 82, 933, 83, 1702, 334, 1958, 335, 1959, 336, 1960, 1053, 1961, 339, 337, 338, 1962, 1565, 3747, 3748, 1966, 1054, 2878, 1057, 1055, 1056, 2879, 845, 2552, 341, 1967, 342, 1968, 343, 1969, 344, 1970, 345, 1971, 346, 1972, 1061, 2886, 2885, 1066, 1062, 2887, 347, 1973, 85, 1703, 2888, 1063, 2889, 2890, 2891, 348, 1974, 1064, 2892, 2893, 349, 1975, 350, 1976, 351, 941, 1977, 1038, 2852, 2853, 352, 1978, 1072, 2911, 2912, 2913, 353, 1979, 354, 1980, 355, 1981, 1076, 1074, 1073, 2914, 2915, 1075, 2916, 2917, 865, 356, 1982, 357, 1983, 2701, 1065, 2894, 358, 1984, 1197, 1195, 3137, 1196, 3138, 2739, 799, 2471, 2472, 953, 951, 3139, 952, 2719, 2720, 1081, 2924, 1198, 3140, 3141, 1199, 12, 3142, 3143, 3144, 1088, 2931, 2932, 359, 1985, 1084, 1082, 1083, 2925, 381, 1988, 1989, 382, 2014, 2015, 361, 1990, 362, 1991, 1096, 2944, 363, 1992, 1098, 2946, 2947, 364, 1993, 365, 1994, 139, 1737, 1738, 1739, 2616, 366, 1995, 367, 1996, 1101, 2951, 368, 1997, 967, 13, 369, 1998, 370, 1999, 371, 2000, 372, 2001, 374, 2004, 2005, 2006, 375, 2007, 376, 2008, 1011, 2798, 2799, 2800, 377, 2009, 378, 2010, 379, 2011, 380, 2012, 2013, 909, 14, 2016, 910, 15, 2656, 911, 16, 2657, 1019, 1017, 1018, 2811, 2812, 752, 383, 2017, 1104, 2955, 2956, 918, 2957, 384, 2018, 385, 2019, 386, 2020, 120, 1720, 1721, 392, 2027, 387, 2021, 395, 2031, 1111, 2022, 813, 2492, 1107, 1105, 1106, 2958, 2959, 1091, 2935, 388, 2023, 1114, 17, 389, 2024, 1112, 1555, 3733, 1117, 2445, 784, 3004, 3005, 1118, 783, 2446, 2447, 780, 2448, 390, 2025, 785, 781, 2449, 1121, 3011, 408, 3012, 1039, 2854, 391, 2026, 1122, 3014, 3015, 1556, 3734, 3735, 393, 2028, 121, 3021, 394, 2029, 2030, 396, 2032, 397, 2033, 1125, 3023, 398, 2034, 399, 2035, 400, 2036, 401, 2037, 402, 2038, 403, 2039, 404, 2040, 1129, 1127, 1128, 3025, 3026, 405, 2041, 1134, 1132, 1133, 3030, 3031, 406, 2042, 1131, 3029, 1135, 3033, 1040, 2855, 2856, 407, 2043, 1136, 3035, 3036, 2044, 720, 2365, 954, 2721, 1137, 3038, 3039, 3040, 409, 2045, 410, 2046, 411, 2047, 412, 2048, 413, 2049, 414, 2050, 1147, 3047, 3048, 415, 2051, 1150, 1148, 1149, 3050, 122, 3051, 745, 1328, 2770, 706, 707, 1005, 710, 708, 709, 2350, 88, 86, 87, 1704, 432, 2063, 1201, 416, 2052, 1200, 3145, 417, 2053, 743, 18, 1154, 19, 1155, 20, 420, 418, 419, 2054, 999, 2771, 2772, 2773, 421, 2055, 424, 422, 423, 2056, 425, 2057, 426, 2058, 3088, 1166, 21, 3090, 3091, 427, 2059, 428, 55, 429, 2060, 1167, 3093, 728, 727, 22, 138, 913, 430, 2061, 1176, 3103, 3104, 1092, 2936, 431, 2062, 433, 2064, 915, 2666, 434, 2065, 1168, 3094, 3095, 1181, 3115, 3116, 3117, 1177, 23, 1182, 3121, 435, 2066, 1180, 3112, 3113, 1187, 3128, 1184, 3123, 3124, 1108, 2960, 2961, 91, 89, 90, 1705, 3129, 3000, 1189, 24, 485, 1193, 3135, 1192, 1190, 1191, 3134, 25, 489, 487, 756, 488, 2113, 2114, 757, 2412, 436, 2067, 758, 2420, 2421, 1204, 3158, 451, 26, 437, 2068, 1206, 3160, 1109, 2962, 2963, 502, 500, 501, 2126, 823, 2069, 1207, 3161, 440, 438, 439, 2070, 805, 2482, 2483, 441, 2071, 442, 2072, 443, 2073, 444, 56, 1209, 1119, 3163, 445, 2074, 446, 2075, 447, 2076, 448, 2077, 449, 2078, 1211, 3165, 3166, 450, 2079, 1213, 3171, 1214, 3172, 3173, 1215, 3175, 3176, 452, 2080, 2081, 453, 2082, 454, 2083, 455, 2084, 1130, 2085, 456, 2086, 457, 2087, 1217, 3179, 458, 2088, 459, 2089, 1222, 3187, 3186, 3188, 3189, 460, 2090, 461, 2091, 1224, 462, 2092, 1227, 1225, 1226, 3199, 3200, 463, 2093, 464, 2094, 1146, 1159, 3061, 94, 92, 2827, 93, 1706, 2828, 2829, 465, 1231, 2095, 466, 2096, 1156, 27, 3062, 28, 3063, 3064, 1157, 29, 1232, 3207, 1233, 3208, 3209, 1235, 3214, 3215, 3216, 469, 467, 468, 2097, 470, 2098, 471, 2099, 1239, 1237, 1238, 472, 2100, 1240, 3222, 3223, 3065, 1241, 3224, 3225, 3226, 1244, 57, 3235, 473, 2101, 474, 2102, 475, 2103, 476, 2104, 477, 2105, 478, 2106, 479, 2107, 1142, 1140, 2819, 1141, 2830, 2831, 480, 2108, 483, 481, 482, 2109, 484, 2110, 2111, 486, 2112, 1171, 1169, 1170, 3096, 3097, 490, 2115, 2116, 491, 2117, 492, 2118, 1025, 2820, 2177, 1307, 30, 1245, 1172, 3237, 493, 2119, 1116, 1110, 2964, 2965, 3238, 1247, 3241, 3242, 1186, 494, 2120, 495, 2121, 1249, 31, 496, 2122, 1210, 2774, 497, 2123, 1001, 498, 2124, 1250, 3246, 3247, 499, 2125, 503, 2127, 2128, 1251, 32, 1252, 3248, 3249, 3180, 3181, 1253, 33, 1257, 1392, 3505, 3506, 3202, 1690, 3262, 1203, 1236, 3218, 504, 2129, 1271, 505, 2130, 522, 2149, 506, 2131, 1260, 34, 507, 2132, 1261, 3264, 3265, 3266, 1262, 1274, 3267, 3268, 3269, 508, 2133, 1263, 3270, 510, 2135, 1275, 2136, 1264, 35, 3271, 1265, 3272, 3273, 511, 2137, 2138, 513, 1287, 2139, 1546, 3407, 3408, 566, 2194, 2195, 1278, 2140, 1266, 3274, 3275, 3276, 514, 2141, 1267, 36, 3277, 3278, 2142, 516, 2143, 1638, 3839, 3840, 3841, 3054, 517, 2144, 95, 1707, 518, 2145, 96, 1708, 1276, 1268, 37, 1269, 3279, 3280, 3281, 1272, 3282, 3283, 519, 2146, 2147, 521, 2148, 523, 2150, 2151, 525, 2152, 526, 2153, 527, 2154, 528, 2155, 529, 2156, 530, 2157, 531, 2158, 532, 2159, 533, 2160, 1280, 3321, 3322, 1283, 3330, 3329, 3331, 3219, 1285, 3335, 534, 2161, 535, 2162, 538, 536, 97, 1709, 537, 2163, 539, 2164, 1292, 3345, 1058, 38, 2880, 1299, 1293, 3346, 3347, 540, 2165, 541, 2166, 1300, 3358, 1301, 3359, 3360, 2168, 542, 2169, 543, 2170, 544, 2171, 1077, 2918, 1000, 2919, 545, 3798, 2172, 546, 2173, 1611, 3799, 2174, 1255, 3250, 548, 2175, 584, 2216, 2217, 596, 2230, 2231, 1254, 3251, 1355, 39, 3445, 3446, 2176, 549, 2178, 2179, 1308, 3367, 3368, 1309, 1256, 3369, 142, 3370, 550, 2180, 551, 2181, 552, 2182, 553, 2183, 554, 2184, 555, 2185, 1664, 3881, 3880, 3394, 556, 2186, 557, 2187, 558, 2188, 1676, 561, 559, 98, 1710, 560, 2189, 562, 2190, 1669, 40, 3889, 1670, 3890, 3891, 1323, 3397, 3398, 563, 2191, 564, 2192, 565, 2193, 1273, 3284, 3285, 1639, 3842, 3843, 2196, 1649, 567, 2197, 568, 2198, 1640, 3844, 1641, 3845, 1202, 3401, 3402, 569, 2199, 1543, 1542, 3403, 3404, 570, 2200, 571, 2201, 1281, 3323, 3324, 1282, 3325, 572, 2202, 1651, 3846, 3847, 3848, 3849, 1286, 3336, 3337, 1329, 1289, 3409, 573, 2203, 144, 143, 1743, 1744, 1745, 1711, 574, 2204, 575, 2205, 1312, 3376, 576, 2206, 577, 2207, 1368, 3467, 1369, 3468, 3469, 1370, 3470, 578, 2208, 1371, 1379, 3472, 1380, 3471, 3473, 3474, 2209, 1612, 3800, 3801, 1341, 3422, 1342, 3423, 3424, 579, 2210, 1521, 1519, 100, 1712, 1520, 3682, 1344, 3428, 580, 2211, 1346, 3430, 3431, 2212, 581, 2213, 582, 2214, 1311, 3373, 3374, 583, 2215, 1315, 3385, 585, 2218, 2219, 587, 2221, 588, 2222, 1318, 1316, 1317, 3386, 3387, 589, 2223, 590, 2224, 1393, 3507, 1691, 1349, 3434, 3435, 592, 2226, 593, 2227, 1294, 3348, 1692, 594, 2228, 595, 2229, 1354, 3442, 3443, 597, 2232, 2233, 1356, 3447, 3448, 3449, 1671, 3893, 3892, 598, 2234, 599, 2235, 1642, 3850, 3851, 1650, 1290, 3340, 1291, 3342, 3343, 1359, 3453, 3454, 3853, 1644, 3854, 1693, 1360, 1643, 3852, 635, 602, 600, 101, 41, 601, 2236, 2237, 1364, 3463, 3413, 604, 2238, 1337, 1335, 1336, 3417, 1334, 1332, 1333, 3415, 3416, 605, 2239, 606, 2240, 1517, 3676, 3677, 607, 2241, 608, 2242, 1404, 3530, 609, 2243, 610, 2244, 1374, 1372, 1373, 3475, 611, 2245, 1382, 614, 1383, 612, 613, 2246, 1350, 3437, 615, 2247, 1375, 3476, 3477, 3478, 616, 2248, 1615, 1613, 1614, 3802, 3803, 3804, 1313, 3377, 3196, 648, 2279, 1694, 617, 2249, 618, 2250, 654, 1396, 3516, 1695, 1397, 3517, 3518, 619, 2251, 620, 2252, 1242, 3227, 3228, 3229, 621, 2253, 622, 2254, 1405, 3531, 623, 2255, 1407, 3533, 624, 2256, 1212, 3167, 3168, 1409, 58, 3536, 3537, 625, 59, 626, 2257, 1223, 3190, 3191, 3192, 1411, 42, 3540, 1498, 3647, 3648, 3458, 1234, 3210, 3211, 627, 2258, 628, 2259, 1306, 3364, 3365, 629, 2260, 1366, 3465, 630, 2261, 659, 2294, 2295, 2296, 2297, 631, 2262, 632, 2263, 662, 660, 1474, 43, 661, 44, 104, 102, 103, 1713, 633, 2264, 1295, 3349, 3350, 1384, 3491, 1662, 1660, 1661, 3877, 3878, 3875, 3876, 3501, 1391, 1389, 1390, 3504, 107, 105, 106, 1714, 1385, 3492, 634, 2265, 2266, 636, 2267, 637, 2268, 638, 2269, 639, 2270, 640, 2271, 1401, 3524, 3525, 3526, 641, 2272, 642, 2273, 643, 2274, 644, 2275, 645, 2276, 1488, 3629, 3630, 3631, 1489, 45, 3632, 3633, 3634, 1490, 3635, 3636, 646, 2277, 1674, 3882, 110, 108, 109, 1715, 647, 2278, 1665, 3883, 1679, 3884, 1505, 1672, 3894, 1647, 1645, 1646, 3855, 3856, 3857, 3858, 1508, 1511, 1507, 3666, 3667, 3668, 649, 2280, 2281, 1416, 1685, 1683, 1684, 2282, 1516, 113, 111, 3548, 112, 1716, 651, 2284, 2285, 652, 1419, 2286, 653, 2287, 2288, 1421, 3553, 1524, 3687, 1425, 3557, 1525, 3688, 3690, 3689, 3691, 3692, 1526, 3693, 3694, 1527, 3695, 3696, 1528, 3697, 3698, 1430, 3564, 655, 2289, 1532, 1432, 3707, 1533, 3708, 3709, 3710, 3711, 1436, 1536, 1538, 3717, 1439, 3573, 656, 2290, 1442, 3576, 3577, 657, 2291, 1445, 2304, 2305, 116, 114, 115, 1717, 1448, 3583, 3584, 1451, 1449, 1450, 3587, 2293, 3591, 1456, 3595, 1566, 3750, 3751, 3749, 1462, 1696, 3600, 2298, 1467, 1465, 3604, 1466, 3607, 1470, 1468, 46, 119, 117, 118, 1718, 1473, 2299, 2300, 1475, 3613, 3614, 47, 2301, 1476, 1480, 2302, 1481, 3620, 663, 2303, 1484, 3623, 3624, 664, 2306, 2307, 665, 2308, 666, 2309, 667, 2310, 668, 2311, 3497, 3498, 3499, 669, 2312, 718, 2360, 2361, 670, 2313, 671, 2314, 672, 2315, 673, 2316, 1570, 3760, 674, 2317, 675, 2318, 676, 2319, 1673, 3895, 3896, 3897, 677, 2320, 678, 2321, 679, 2322, 680, 2323, 681, 2324, 3656, 3657, 682, 2325, 1503, 3658, 3659, 683, 2326, 1509, 3669, 684, 2327, 1487, 3628, 1512, 60, 1513, 3672, 685, 2328, 1529, 3699, 686, 2329, 687, 2330, 691, 689, 690, 2331, 0, 692, 2332, 693, 2333, 1541, 3720, 694, 2334, 791, 2462, 793, 48, 695, 2335, 1548, 3725, 3726, 696, 2336, 697, 2337, 698, 2338, 699, 2339, 1557, 3736, 3737, 3738, 700, 2340, 1719, 2341, 702, 2342, 704, 2344, 2346, 2347, 2345, 2348, 2349, 711, 2351, 712, 2352, 714, 2355, 2356, 715, 2357, 716, 2358, 717, 2359, 719, 2362, 2363, 721, 2366, 2367, 722, 2368, 725, 2373, 1722, 2374, 726, 2375, 2377, 2379, 2380, 2378, 2381, 2382, 729, 2383, 2384, 731, 2385, 732, 2386, 733, 2387, 734, 2388, 735, 2389, 736, 2390, 737, 2391, 738, 2392, 739, 2393, 740, 2394, 741, 2395, 742, 2396, 744, 2397, 1723, 1724, 2398, 2399, 746, 2400, 750, 2403, 1725, 2404, 751, 2405, 2406, 753, 2407, 755, 2413, 2414, 2416, 2417, 2415, 2418, 2419, 759, 2422, 2423, 760, 2424, 761, 2425, 762, 2426, 763, 2427, 764, 2428, 765, 2429, 770, 768, 769, 2434, 2435, 2436, 2437, 771, 2438, 775, 2440, 776, 2441, 777, 2442, 778, 2443, 779, 2444, 782, 2450, 2454, 2455, 2451, 2452, 2453, 786, 2456, 787, 2457, 788, 2459, 2460, 125, 123, 124, 1726, 790, 2461, 792, 2463, 2464, 2465, 825, 2526, 794, 2527, 2466, 795, 2467, 796, 2468, 797, 2469, 798, 2470, 800, 2473, 2474, 801, 2475, 802, 2476, 814, 2493, 2494, 2495, 2496, 2497, 2479, 2480, 804, 2481, 850, 2559, 2484, 806, 2485, 807, 2486, 808, 2487, 809, 2488, 810, 2489, 811, 2490, 812, 2491, 867, 2580, 818, 2498, 2499, 819, 2520, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 820, 2521, 929, 2681, 2682, 1727, 974, 2752, 2753, 821, 2522, 822, 2523, 2524, 824, 2525, 826, 2528, 2529, 828, 2532, 2533, 829, 2534, 832, 2538, 2539, 2540, 2541, 835, 2542, 2543, 2544, 2545, 839, 2546, 2547, 841, 2548, 129, 127, 128, 1728, 1729, 1730, 2549, 843, 2550, 2551, 846, 2553, 848, 2554, 2555, 2556, 2557, 849, 2558, 851, 2560, 852, 2562, 2563, 853, 2564, 854, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 861, 2572, 862, 2573, 134, 132, 133, 1731, 1732, 1733, 2575, 863, 2576, 864, 2577, 866, 2578, 2579, 1048, 2870, 2871, 868, 2581, 2582, 1049, 49, 2872, 2583, 870, 2585, 2586, 871, 2587, 1031, 2843, 1697, 2592, 2593, 2597, 2598, 2599, 2600, 1026, 2601, 879, 2602, 881, 2604, 883, 2607, 2608, 1070, 1068, 1069, 2905, 2906, 2908, 884, 2609, 886, 2612, 2613, 1681, 2617, 1682, 2618, 2619, 2620, 2621, 2622, 888, 2624, 2625, 890, 2627, 2628, 892, 2630, 894, 2633, 2634, 895, 2635, 897, 2638, 2639, 900, 2644, 2645, 903, 2649, 2650, 1093, 2937, 2938, 2939, 2940, 2661, 2658, 2659, 2660, 2662, 2663, 2667, 2668, 917, 2669, 919, 2672, 2673, 50, 921, 2674, 922, 2675, 923, 2676, 924, 2677, 926, 2678, 2679, 930, 2683, 2684, 931, 2685, 932, 2686, 2687, 934, 2688, 2689, 940, 2695, 2697, 2696, 51, 2698, 944, 2702, 947, 2707, 2708, 2709, 2703, 2704, 2705, 2706, 2710, 2711, 948, 2713, 2714, 949, 2716, 2717, 950, 2718, 957, 955, 1734, 956, 2722, 2723, 2724, 2725, 2726, 2727, 958, 2728, 963, 2732, 2733, 1029, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 964, 2734, 968, 2740, 1735, 2741, 2742, 2743, 971, 2747, 2748, 975, 2754, 2755, 2756, 1004, 1002, 1003, 2791, 2792, 2776, 2777, 2778, 2779, 2780, 2775, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2793, 1006, 2794, 1163, 2795, 1165, 3082, 3083, 3084, 3085, 2801, 2802, 2803, 2804, 1152, 3057, 3058, 3059, 3078, 3079, 1014, 2806, 1015, 2807, 2810, 2813, 1178, 3107, 3108, 3109, 1022, 2817, 2815, 2816, 1023, 2818, 1024, 61, 2821, 2822, 2823, 2840, 2841, 1030, 2842, 2844, 1043, 1041, 1736, 1042, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 1050, 2873, 2874, 1051, 2875, 1052, 2876, 2877, 2881, 2882, 1059, 2883, 1060, 2884, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2907, 2909, 1080, 1078, 1079, 2920, 2921, 2922, 2923, 3146, 3147, 3148, 3149, 3150, 3151, 2926, 2927, 2928, 3152, 3153, 3154, 3155, 2929, 1094, 2941, 2942, 1095, 2943, 1097, 2945, 1099, 2948, 2949, 141, 140, 1100, 2950, 1123, 3016, 3017, 2952, 1102, 2953, 1103, 2954, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 1113, 2997, 2998, 1115, 2999, 3001, 3002, 3003, 3009, 3007, 3006, 3008, 1120, 3010, 3013, 3317, 3318, 3018, 3019, 1124, 3020, 3022, 1126, 3024, 1279, 3027, 3028, 3315, 3032, 3034, 3037, 1138, 3041, 3042, 1139, 3043, 1145, 1143, 1144, 3044, 3045, 3046, 3049, 1314, 1740, 3378, 3379, 3052, 3053, 1151, 1741, 3055, 3056, 3060, 1158, 3066, 3067, 3069, 3070, 3068, 3071, 3072, 3073, 3074, 3075, 3080, 3081, 1164, 3086, 3087, 3089, 3092, 1175, 1173, 1174, 3098, 3099, 3100, 3101, 3102, 3105, 3106, 1179, 3110, 3111, 3114, 3118, 3119, 3120, 1183, 3122, 1185, 3125, 3126, 3127, 1188, 3130, 3131, 3132, 3133, 1194, 3136, 3156, 3157, 1205, 3159, 3380, 3381, 3382, 3388, 1208, 3162, 3164, 3169, 3170, 1351, 3438, 3174, 1348, 1216, 3177, 3178, 1220, 1218, 1353, 1219, 3182, 3183, 3184, 1221, 3185, 3193, 3194, 3195, 3197, 3198, 3201, 1230, 1228, 3508, 3509, 1229, 3203, 3204, 3205, 3206, 3212, 3213, 3217, 3220, 3221, 3230, 3231, 3232, 3233, 3234, 3236, 3239, 1246, 3240, 1248, 3243, 3244, 3245, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 1258, 3260, 1259, 3261, 3263, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 1277, 1742, 3312, 3313, 3314, 3316, 3319, 3320, 3326, 3327, 3328, 1284, 3332, 3333, 3334, 1288, 3338, 3339, 3341, 3344, 1298, 1296, 1746, 1747, 1297, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 1302, 3361, 3362, 3805, 3806, 1616, 1620, 3807, 3808, 3809, 3810, 1305, 1303, 1304, 3363, 3366, 1310, 3371, 3372, 3375, 3383, 3384, 1319, 3389, 3390, 3391, 1320, 3392, 1321, 3393, 3885, 3886, 1322, 3395, 3396, 3898, 3899, 3900, 1677, 3901, 3902, 3903, 1324, 3399, 3400, 1648, 3859, 3860, 3861, 3862, 3863, 3864, 3405, 1501, 3649, 3650, 3865, 3866, 3867, 3868, 1545, 3406, 1330, 3410, 3411, 1331, 3412, 3414, 1338, 3418, 3419, 1339, 3420, 1340, 3421, 3678, 3679, 1686, 1378, 1376, 1748, 1377, 3479, 3480, 3663, 3481, 3482, 3483, 3484, 3485, 1381, 3425, 3426, 1343, 3427, 1522, 3683, 3684, 1345, 3429, 1347, 3432, 1394, 3510, 3511, 3512, 3433, 3436, 1352, 1749, 3439, 3440, 3441, 1395, 3513, 3514, 3444, 1357, 3450, 3451, 3819, 1624, 3822, 3823, 1358, 3452, 3455, 3456, 3457, 3739, 1361, 3459, 3460, 1362, 3461, 1363, 3462, 1365, 3464, 1367, 3466, 1750, 1751, 3486, 3487, 3488, 3489, 3490, 3500, 1567, 3752, 3753, 3754, 1388, 3502, 3503, 3757, 3515, 3519, 3520, 1398, 3521, 1399, 3522, 1400, 3523, 1402, 3527, 3528, 1406, 3532, 1668, 1666, 1667, 3887, 3888, 1408, 3534, 3535, 1678, 1752, 3904, 3905, 3906, 1410, 3538, 3539, 1654, 1652, 1653, 3869, 3870, 3871, 1412, 3541, 3542, 1413, 3543, 1414, 3544, 1415, 3545, 3546, 1417, 3547, 1418, 3549, 3550, 3551, 1420, 3552, 1422, 3554, 1423, 3555, 1424, 3556, 1426, 3558, 3559, 1427, 3560, 1428, 3561, 3562, 1429, 3563, 1431, 3565, 3566, 1433, 3567, 1434, 3568, 1435, 3569, 3570, 1437, 3571, 1438, 3572, 1440, 3574, 1441, 3575, 1443, 3578, 3579, 1444, 3580, 3581, 1446, 3582, 1447, 3585, 3586, 3588, 1452, 3589, 1453, 3590, 1454, 3592, 3593, 1455, 3594, 1457, 3596, 1458, 3597, 1459, 3598, 1460, 3599, 1461, 3601, 3602, 1463, 3603, 1464, 3605, 3606, 1469, 3608, 3609, 1471, 3610, 1472, 3611, 3612, 1477, 3615, 3616, 1478, 3617, 1479, 3618, 3619, 1482, 3621, 1483, 3622, 1485, 3625, 3626, 1486, 3627, 1663, 3879, 1493, 1491, 1492, 3637, 3638, 1698, 3639, 3640, 3641, 1494, 3642, 1495, 3643, 1496, 3644, 1680, 3907, 3908, 1497, 3645, 3646, 1499, 3651, 3652, 1500, 3653, 3654, 1502, 3655, 1504, 62, 3660, 3661, 3662, 3664, 1510, 3670, 3671, 1514, 3673, 1515, 3674, 3675, 3680, 1518, 3681, 1523, 3685, 3686, 1530, 63, 3702, 3703, 3700, 3701, 3704, 3705, 1531, 3706, 1534, 3712, 3713, 1535, 3714, 3715, 1537, 3716, 1539, 3718, 1540, 3719, 147, 145, 146, 1655, 3721, 3722, 148, 1753, 1656, 64, 1547, 3723, 3724, 1549, 3727, 3728, 1550, 3729, 1551, 3730, 1552, 65, 1553, 3731, 1554, 3732, 1559, 3740, 3741, 151, 149, 150, 1754, 1560, 3742, 1561, 3743, 1562, 3744, 1568, 3755, 3756, 1569, 3758, 3759, 1571, 3761, 1578, 1585, 1579, 1576, 1580, 1581, 1587, 1592, 1590, 1598, 1596, 1595, 1601, 1605, 1599, 1603, 1621, 1622, 1572, 3762, 1573, 3763, 1574, 3764, 1575, 3765, 3766, 1577, 66, 3767, 3768, 3769, 3770, 1582, 3771, 1583, 3772, 1584, 3773, 3774, 1586, 67, 3775, 1588, 3776, 1589, 3777, 3778, 1591, 3779, 3780, 1593, 3781, 1594, 3782, 3783, 3784, 1597, 3785, 3786, 3787, 1600, 3788, 3789, 1602, 3790, 3791, 1604, 3792, 3793, 1606, 3794, 1607, 3795, 1608, 3796, 1609, 68, 1610, 3797, 1619, 1617, 1755, 1756, 1618, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 1631, 1623, 3820, 3821, 1625, 3824, 3825, 1626, 3826, 1627, 3827, 1628, 3828, 1, 1629, 3829, 1630, 3830, 3831, 1632, 3832, 1633, 3833, 1757, 154, 152, 153, 1657, 3872, 155, 1758 }
}

declare i32 @unknown_558b0002(i32) local_unnamed_addr

declare i32 @unknown_89e2d08e() local_unnamed_addr

declare i8 @__asm_insb(i16) local_unnamed_addr

declare i32 @__asm_insd(i16) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr
